id,title,username,language,date,content
j4nmhVVD,expired.xml,jackkkkkk,XML,Monday 3rd of July 2023 06:40:52 PM CDT,"<?xml version=""1.0"" encoding=""utf-8""?>
Expired=""0x25F7156822BCA245DECAB42"""
QiNKtpua,murder mystery 3,8Irelyn,Lua,Monday 3rd of July 2023 06:27:41 PM CDT,"loadstring(game:HttpGet(""https://raw.githubusercontent.com/8Irelyn/loadstrings/main/murdermystery3""),true)()"
KpFJiFx3,BTC Wallet Credentials have been reset,posserestu_37,GetText,Monday 3rd of July 2023 06:23:39 PM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please disregard this message.
Your new login credentials are charlesliuliu85:6mTK9v on 45.9.148.244
You can connect via SSH.
Regards"
YXuXYe5i,MC:OC minibot,copperTones,Lua,Monday 3rd of July 2023 06:05:49 PM CDT,"--[[
Minecraft: Compact Claustrophobia: OpenComputers
poopbot:
crafting
dropping

minibot:
arbitrary block placing
Inventory Controller

chembot:
]]
local component = require(""component"")
local sides = require(""sides"")
local robot = component.robot
local inventory = component.inventory_controller

--pos = {x=0, y=0, z=0, d=0}
inv = {
	obsidian=1,
	redstone_block=2,
	redstone_dust=3
}

prog = {}
--[[
todo:
--chkinv
suck
charge
select
]]
function prog.run()
	--if prog.chkinv(prog.inv(), ""obsidian"", 26, ""redstone_block"", ""redstone_dust"") then
	prog.mmove(""front"", 3, ""right"", ""front"")
	prog.suck(""down"")
	prog.mmove(""left"", ""front"", ""right"")
	prog.pillarup()
	prog.pillar()
	prog.move(""left"")
	prog.pillar()
	prog.move(""left"")
	prog.pillar()
	prog.pillar(true)
	prog.move(""right"")
	prog.pillar()
	prog.move(""right"")
	prog.pillar()
	prog.pillar()
	prog.move(""left"")
	prog.pillar()
	prog.move(""back"")
	prog.drop(""redstone_dust"")
	os.sleep(10)
	prog.charge()
end

function prog.pillarup()
	prog.place(""front"")
	prog.move(""up"")
	prog.place(""front"")
	prog.move(""up"")
	prog.place(""front"")
	prog.move(""down"")
end

function prog.pillar(core)
	prog.place(""up"")
	prog.place(""down"")
	prog.move(""back"")
	if core then
		prog.place(""front"", ""redstone_block"")
		prog.select(""obsidian"")
	else
		prog.place(""front"")
	end
end

function prog.inv()
	local inv = {}
	for i=1,16 do
		i = inventory.getStackInInternalSlot(i)
		
	end
end

function prog.chkinv(name, count, ...)
	local tmp = count
	if type(count) == ""string"" then
		count = 1
	end
	for i
end

function prog.select(name)
	robot.select(inv[name])
end

function prog.drop(dir, name, count)
	prog.select(name)
	robot.drop(dir, count)
end

function prog.place(dir, name, sneak)
	if name then
		prog.select(name)
	end
	robot.place(sides[dir], sneak)
end

function prog.mmove(dir, n, ...)
	if type(n) == ""number"" then
		for i=1,n do
			prog.move(dir)
		end
		prog.mmove(...)
	elseif type(dir) == ""string"" then
		prog.move(dir)
		prog.mmove(n, ...)
	end
end

function prog.move(dir)
	dir = sides[dir]
	if dir > 3 then
		robot.turn(dir == 4)
	else
		robot.move(dir)
	end
end"
6XFZZTgi,Untitled,Krystal_Amaia,C#,Monday 3rd of July 2023 05:24:03 PM CDT,"using System;
using System.Collections.Generic;
using System.Threading;

class Note {
    public int Frequency { get; set; }
    public int Duration { get; set; }

    public Note(int frequency, int duration) {
        Frequency = frequency;
        Duration = duration;
    }
}

class Program {
    static void Main(string[] args) {
        // Chorus notes and durations
        Console.ReadKey();
        List<Note> chorus = new List<Note>()
        {
            new Note( 392, 60 ),
            new Note( 440, 60 ),
            new Note(523, 60  ),
            new Note(440, 60  ),
            new Note(659, 120  ),
            new Note(659, 60  ),
            new Note(587,240 ),

            new Note( 392, 60 ),
            new Note( 440, 60 ),
            new Note(523, 60  ),
            new Note(440, 60  ),
            new Note(587, 120),
            new Note(587, 60),
            new Note(523, 120),

            new Note(494, 60),
            new Note(440, 60)
            

        };

        // Tempo (in beats per minute)
        int bpm = 120;

        // Calculate delay between notes based on tempo
        int delay = (int)((60.0 / bpm) * 1000);

        // Play the entire chorus with the correct tempo
        for (int i = 0; i < 2; i++)  // Repeat the chorus twice
        {
            foreach (var note in chorus) {
                Console.Beep(note.Frequency, (int)note.Duration *2 );
                Thread.Sleep(delay / 2);    
            }
            Thread.Sleep(delay);
        }
    }
}"
72MHkHqy,norm,NIKOLAY_TETUS,C++,Monday 3rd of July 2023 05:13:16 PM CDT,"import cv2
import numpy as np


def detect_book_boundaries(image_path):
    # Загрузка изображения
    image = cv2.imread(image_path)
    
    # Преобразование изображения в оттенки серого
    gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
    
    # Применение размытия для уменьшения шума
    blurred = cv2.GaussianBlur(gray, (11, 11), 2)
    
    # Применение оператора Кэнни для обнаружения границ
    edges = cv2.Canny(blurred, 50, 150)
    
    # Применение дилатации для закрытия пробелов между границами
    dilated = cv2.dilate(edges, None, iterations=1)
    
    # Поиск контуров на изображении
    contours, _ = cv2.findContours(dilated.copy(), cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)
    
    # Инициализация списка для хранения координат границ книг
    book_boundaries = []
    
    # Обход всех контуров и добавление границ в список
    for contour in contours:
        # Игнорирование маленьких контуров
        if cv2.contourArea(contour) > 4500:
            # Получение ограничивающего прямоугольника для контура
            x, y, w, h = cv2.boundingRect(contour)
            _, image_w, _ = image.shape
            if w <= image_w * 0.85:
                # Добавление границы книги в список
                book_boundaries.append((x, y, x + w, y + h))
    
    # Создание нового изображения с отмеченными границами книг
    marked_image = image.copy()
    for boundary in book_boundaries:
        x1, y1, x2, y2 = boundary
        cv2.rectangle(marked_image, (x1, y1), (x2, y2), (0, 255, 0), 2)
    
    # Сохранение изображения с отмеченными границами книг
    marked_image_path = 'marked_image.jpg'
    cv2.imwrite(marked_image_path, marked_image)
    
    # Возвращение списка границ книг и пути к сохраненному изображению
    return book_boundaries, marked_image_path

# Пример использования функции для распознавания границ книг на изображении
image_path = 'image.jpg'
boundaries, marked_image_path = detect_book_boundaries(image_path)


# Вывод координат границ книг
for boundary in boundaries:
    print(f""Книга: {boundary}"")

# Вывод пути к сохраненному изображению
print(""Сохраненное изображение:"", marked_image_path)"
ARNxK8s8,Untitled,NIKOLAY_TETUS,C++,Monday 3rd of July 2023 04:50:17 PM CDT,"import cv2
import numpy as np


def detect_book_boundaries(image_path):
    # Загрузка изображения
    image = cv2.imread(image_path)
    
    # Преобразование изображения в оттенки серого
    gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
    
    # Применение размытия для уменьшения шума
    blurred = cv2.GaussianBlur(gray, (9, 9), 1)
    
    # Применение оператора Кэнни для обнаружения границ
    edges = cv2.Canny(blurred, 50, 150)
    
    # Применение дилатации для закрытия пробелов между границами
    dilated = cv2.dilate(edges, None, iterations=1)
    
    # Поиск контуров на изображении
    contours, _ = cv2.findContours(dilated.copy(), cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)
    
    # Инициализация списка для хранения координат границ книг
    book_boundaries = []
    
    # Обход всех контуров и добавление границ в список
    for contour in contours:
        # Игнорирование маленьких контуров
        if cv2.contourArea(contour) > 4500:
            # Получение ограничивающего прямоугольника для контура
            x, y, w, h = cv2.boundingRect(contour)
            _, image_w, _ = image.shape
            if w <= image_w * 0.85:
                # Добавление границы книги в список
                book_boundaries.append((x, y, x + w, y + h))
    
    # Создание нового изображения с отмеченными границами книг
    marked_image = image.copy()
    for boundary in book_boundaries:
        x1, y1, x2, y2 = boundary
        cv2.rectangle(marked_image, (x1, y1), (x2, y2), (0, 255, 0), 2)
    
    # Сохранение изображения с отмеченными границами книг
    marked_image_path = 'marked_image.jpg'
    cv2.imwrite(marked_image_path, marked_image)
    
    # Возвращение списка границ книг и пути к сохраненному изображению
    return book_boundaries, marked_image_path

# Пример использования функции для распознавания границ книг на изображении
image_path = 'aaa.jpg'
boundaries, marked_image_path = detect_book_boundaries(image_path)


# Вывод координат границ книг
for boundary in boundaries:
    print(f""Книга: {boundary}"")

# Вывод пути к сохраненному изображению
print(""Сохраненное изображение:"", marked_image_path)"
Uevbd47Z,motyle 2,314ma,YAML,Monday 3rd of July 2023 04:10:17 PM CDT,"motyle_oswietlenie:
  alias: Motyle - Oświetlenie
  fields:
    start:
      name: Początek
      description: Czas rozpoczęcia ściemniania/rozjaśniania (czas dla którego ma być 100/0%)
      required: true
      example: ""17:30""
      default: ""17:30""
      selector:
        time:
    end:
      name: Koniec
      description: Czas zakończenia ściemniania/rozjaśniania (czas dla którego ma być 0/100%)
      required: true
      example: ""19:10""
      default: ""19:10""
      selector:
        time:
    light:
      name: Światło
      description: Światło do sterowania
      required: true
      example: light.motyle_oswietlenie
      default: light.motyle_oswietlenie
      selector:
        entity:
          domain: light
    mode:
      name: Tryb
      description: Tryb działania skryptu
      required: true
      example: darken
      default: darken
      selector:
        select:
          options:
            - label: Przyciemnianie
              value: darken
            - label: Rozjaśnianie
              value: lighten
    months:
      name: Miesiące
      description: Miesiące w których ma działać skrypt
      required: true
      example: ""[1, 2, 3, 4, 9, 10, 11, 12]""
      default: ""[1, 2, 3, 4, 9, 10, 11, 12]""
      selector:
        select:
          multiple: true
          mode: list
          options:
            - label: Styczeń
              value: ""1""
            - label: Luty
              value: ""2""
            - label: Marzec
              value: ""3""
            - label: Kwiecień
              value: ""4""
            - label: Maj
              value: ""5""
            - label: Czerwiec
              value: ""6""
            - label: Lipiec
              value: ""7""
            - label: Sierpień
              value: ""8""
            - label: Wrzesień
              value: ""9""
            - label: Październik
              value: ""10""
            - label: Listopad
              value: ""11""
            - label: Grudzień
              value: ""12""
  sequence:
    - variables:
        start_int: ""{{ start.split(':')[0] | int * 60 + start.split(':')[1] | int }}""
        end_int: ""{{ end.split(':')[0] | int * 60 + end.split(':')[1] | int }}""
        time_int: ""{{ now().hour * 60 + now().minute }}""
        start_value: ""{{ (mode != 'darken') | iif(0, 100) }}""
        end_value: ""{{ (mode != 'darken') | iif(100, 0) }}""
        current_value: ""{{ start_value + ((time_int - start_int) / (end_int - start_int)) * (end_value - start_value) }}""
    - if:
        - condition: template
          value_template: ""{{ start_int <= time_int <= end_int }}""
        - condition: template
          value_template: ""{{ now().month | string in months }}""
      then:
        - service: light.turn_on
          data:
            transition: 5
            brightness_pct: ""{{ min(max(current_value | float, 0), 100) }}""
            kelvin: 6500
          target:
            entity_id: ""{{ light }}""
"
qk8sHuLk,Обучение без учителя. Тема 2. Кластеризация Урок 9. Поиск структуры в данных Задача №3,MacClane,Python,Monday 3rd of July 2023 04:04:47 PM CDT,"import pandas as pd
from sklearn.cluster import KMeans
import seaborn as sns
 
data_full = pd.read_csv('/datasets/cars_label.csv')
 
data = data_full.drop(columns=['brand'])
 
# Обучение модели
model = KMeans(n_clusters=3, random_state=12345)
model.fit(data)
 
centroids = pd.DataFrame(model.cluster_centers_, columns=data.columns)
data_full = pd.concat([data_full], ignore_index=True)
 
# Построение графика
pairgrid = sns.pairplot(data_full, hue='brand', diag_kind='hist')
centroids['brand'] = 4
pairgrid.data = centroids
pairgrid.map_offdiag(func=sns.scatterplot, s=200, marker='*', palette='flag')"
Gyk36BHV,Untitled,NIKOLAY_TETUS,C++,Monday 3rd of July 2023 04:01:41 PM CDT,"import cv2
import numpy as np

def detect_book_boundaries(image_path):
    # Загрузка изображения
    image = cv2.imread(image_path)
    
    # Преобразование изображения в оттенки серого
    gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
    
    # Применение размытия для уменьшения шума
    blurred = cv2.GaussianBlur(gray, (5, 5), 0)
    
    # Применение оператора Кэнни для обнаружения границ
    edges = cv2.Canny(blurred, 50, 150)
    
    # Применение дилатации для закрытия пробелов между границами
    dilated = cv2.dilate(edges, None, iterations=2)
    
    # Поиск контуров на изображении
    contours, _ = cv2.findContours(dilated.copy(), cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)
    
    # Инициализация списка для хранения координат границ книг
    book_boundaries = []
    
    # Обход всех контуров и добавление границ в список
    for contour in contours:
        # Игнорирование маленьких контуров
        if cv2.contourArea(contour) > 1000:
            # Получение ограничивающего прямоугольника для контура
            x, y, w, h = cv2.boundingRect(contour)
            
            # Добавление границы книги в список
            book_boundaries.append((x, y, x + w, y + h))
    
    # Создание нового изображения с отмеченными границами книг
    marked_image = image.copy()
    for boundary in book_boundaries:
        x1, y1, x2, y2 = boundary
        cv2.rectangle(marked_image, (x1, y1), (x2, y2), (0, 255, 0), 2)
    
    # Возвращение списка границ книг и нового изображения
    return book_boundaries, marked_image

# Пример использования функции для распознавания границ книг на изображении
image_path = 'image.jpg'
boundaries, marked_image = detect_book_boundaries(image_path)

# Вывод координат границ книг
for boundary in boundaries:
    print(f""Книга: {boundary}"")

# Отображение нового изображения с отмеченными границами книг
cv2.imshow(""Marked Image"", marked_image)
cv2.waitKey(0)
cv2.destroyAllWindows()"
pJtSUYQD,Barebones Toyhou.se HTML,plutii,HTML,Monday 3rd of July 2023 03:31:46 PM CDT,"<table align=""center"" style=""table-layout: fixed; width: 70%; border: 1px solid rgba(0,0,0,.125); border-radius: 0.25rem; background: #f7f7f7; padding: 10px; color: #212529;"">
  <tbody>
    <tr>
      <td style=""width: 30%; border-right: 1px solid rgba(0,0,0,.125); padding: 5px;"">
        <table style=""text-align: center; border: none; margin: auto; line-height: 1rem;"">
          <tbody>
            <tr style=""vertical-align: top;""><td style=""text-align: right;""><strong>name(s):</strong></td><td style=""text-align: left;"">--</td></tr>
            <tr style=""vertical-align: top;""><td style=""text-align: right;""><strong>pronouns:</strong></td><td style=""text-align: left;"">--</td></tr>
            <tr style=""vertical-align: top;""><td style=""text-align: right;""><strong>age:</strong></td><td style=""text-align: left;"">--</td></tr>
            <tr style=""vertical-align: top;""><td style=""text-align: right;""><strong>date of birth:</strong></td><td style=""text-align: left;"">--</td></tr>
            <tr style=""vertical-align: top;""><td style=""text-align: right;""><strong>height/weight:</strong></td><td style=""text-align: left;"">--</td></tr>
            <tr style=""vertical-align: top;""><td style=""text-align: right;""><strong>occupation:</strong></td><td style=""text-align: left;"">--</td></tr>
          </tbody>
        </table>
      </td>
      <td style=""width: 70%; vertical-align: top; height: 300px;"">
        <div style=""height: 100%; width: 100%; max-height: 100%; overflow-y: auto; padding: 10px 30px;"">
          <h2><em>personality</em></h2>
          <div style=""padding: 0px 20px;"">
            <p>lorem ipsum</p>
          </div>
          <hr style=""border-top-color: rgba(0,0,0,.1);"">
          <h2><em>backstory</em></h2>
          <div style=""padding: 0px 20px;"">
            <p>lorem ipsum</p>
          </div>
          <hr style=""border-top-color: rgba(0,0,0,.1);"">
            <div style=""float: left; width:50%; border-right: 1px solid rgba(0,0,0,.125); padding-right: 10px;"">
              <h2><em>likes</em></h2>
              <ul>
                <li>one</li>
                <li>two</li>
                <li>three</li>
              </ul>
            </div>
            <div style=""width: 50%; padding-left: 10px; float: right;"">
              <h2><em>dislikes</em></h2>
              <ul>
                <li>one</li>
                <li>two</li>
                <li>three</li>
              </ul>
            </div>
          <hr style=""border-top-color: rgba(0,0,0,.1); margin-top:20px;"">
          <h2><em>trivia</em></h2>
          <div style=""padding: 0px 20px;"">
            <p>lorem ipsum</p>
          </div>
        </div>
      </td>
    </tr>
    <tr><td colspan=""2"" style=""text-align: right; font-size: 11px; background: rgba(0,0,0,.125); padding: 2px"">HTML by <a href=""https://toyhou.se/purrluto"">purrluto</a></td></tr>
  </tbody>
</table>"
wQJushdj,Untitled,DenisTalalaev,C++,Monday 3rd of July 2023 03:21:53 PM CDT,"
	   void SaveScreenshot(const std::wstring& filePath)
	   {
		   // Инициализация библиотеки GDI+
		   ULONG_PTR gdiplusToken;
		   Gdiplus::GdiplusStartupInput gdiplusStartupInput;
		   Gdiplus::GdiplusStartup(&gdiplusToken, &gdiplusStartupInput, nullptr);

		   // Получение размеров экрана
		   int screenWidth = GetSystemMetrics(SM_CXSCREEN);
		   int screenHeight = GetSystemMetrics(SM_CYSCREEN);

		   // Создание контекста устройства для скриншота
		   HDC screenDC = GetDC(nullptr);
		   HDC memDC = CreateCompatibleDC(screenDC);
		   HBITMAP screenshot = CreateCompatibleBitmap(screenDC, screenWidth, screenHeight);
		   SelectObject(memDC, screenshot);

		   // Копирование содержимого экрана в контекст устройства для скриншота
		   BitBlt(memDC, 0, 0, screenWidth, screenHeight, screenDC, 0, 0, SRCCOPY);

		   // Сохранение скриншота в файл
		   Gdiplus::Bitmap bitmap(screenshot, nullptr);
		   CLSID clsid;
		   GetEncoderClsid(L""image/jpeg"", &clsid);  // Замените ""image/jpeg"" на нужный вам формат изображения (например, ""image/png"")

		   bitmap.Save(filePath.c_str(), &clsid, nullptr);

		   // Освобождение ресурсов
		   DeleteObject(screenshot);
		   DeleteDC(memDC);
		   ReleaseDC(nullptr, screenDC);
		   Gdiplus::GdiplusShutdown(gdiplusToken);
	   }

	   // Функция для получения CLSID кодека для указанного формата изображения
	   int GetEncoderClsid(const WCHAR* format, CLSID* pClsid)
	   {
		   UINT num = 0;  // Количество кодеков изображений
		   UINT size = 0; // Размер памяти, необходимый для хранения информации о кодеках

		   // Получение размера памяти, необходимого для хранения информации о кодеках
		   Gdiplus::GetImageEncodersSize(&num, &size);
		   if (size == 0)
			   return -1; // Ошибка

		   // Выделение памяти для хранения информации о кодеках
		   Gdiplus::ImageCodecInfo* pImageCodecInfo = (Gdiplus::ImageCodecInfo*)(malloc(size));
		   if (pImageCodecInfo == nullptr)
			   return -1; // Ошибка

		   // Получение информации о кодеках
		   Gdiplus::GetImageEncoders(num, size, pImageCodecInfo);

		   // Поиск кодека с указанным форматом
		   for (UINT j = 0; j < num; ++j)
		   {
			   if (wcscmp(pImageCodecInfo[j].MimeType, format) == 0)
			   {
				   *pClsid = pImageCodecInfo[j].Clsid;
				   free(pImageCodecInfo);
				   return j; // Успешно
			   }
		   }

		   free(pImageCodecInfo);
		   return -1; // Кодек не найден
	   }

	   std::string GetCurrentDateTime()
	   {
		   std::chrono::system_clock::time_point now = std::chrono::system_clock::now();
		   std::time_t nowTime = std::chrono::system_clock::to_time_t(now);
		   std::tm* nowTm = std::localtime(&nowTime);

		   char buffer[20];
		   std::strftime(buffer, sizeof(buffer), ""%Y-%m-%d_%H-%M-%S"", nowTm);

		   return buffer;
	   }




private: System::Void button3_Click(System::Object^ sender, System::EventArgs^ e) {
	std::wstring filePath = L""screenshots/screen_"" + std::wstring(GetCurrentDateTime().begin(), GetCurrentDateTime().end()) + L"".jpg"";
	SaveScreenshot(filePath);

}"
H42bBTNm,anjani deployed,Nicky-Lalrochhara,Python,Monday 3rd of July 2023 02:59:07 PM CDT,"await anjani.run()
  File ""/home/ubuntu/.local/lib/python3.10/site-packages/anjani/core/telegram_bot.py"", line 261, in run
    await self.stop()
  File ""/home/ubuntu/.local/lib/python3.10/site-packages/anjani/core/anjani_bot.py"", line 75, in stop
    await self.dispatch_event(""stop"")
  File ""/home/ubuntu/.local/lib/python3.10/site-packages/anjani/core/event_dispatcher.py"", line 198, in dispatch_event
    await self.dispatch_alert(
  File ""/home/ubuntu/.local/lib/python3.10/site-packages/anjani/core/event_dispatcher.py"", line 352, in dispatch_alert
    await self.client.send_message(
  File ""/home/ubuntu/.local/lib/python3.10/site-packages/pyrogram/methods/messages/send_message.py"", line 133, in send_message
    peer=await self.resolve_peer(chat_id),
  File ""/home/ubuntu/.local/lib/python3.10/site-packages/pyrogram/methods/advanced/resolve_peer.py"", line 59, in resolve_peer
    raise ConnectionError(""Client has not been started yet"")
ConnectionError: Client has not been started yet
  ERROR     |  asyncio          |  Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x7f4e01dc6950>
"
EN3tmEsU,hiddendevs_example,ArtisticCloud,Lua,Monday 3rd of July 2023 02:54:35 PM CDT,"local Ring = {} 

Ring.Rings = {} ;
Ring.GetRing = function( RingName )
	for _,RingMeta in Ring.Rings do
		if RingMeta.Name == RingName then
			return RingMeta ; 
		end
	end ; 
end ; 

local Storage = game:GetService( 'ReplicatedStorage' ) ;
local Http = game:GetService( 'HttpService' ) ; 

local Remotes = Storage:WaitForChild( 'Remotes' ) ; 
local GameRemotes = Remotes:WaitForChild( 'Game.Remotes' ) ;

local ClientAction = GameRemotes:WaitForChild( 'Client.Action' ) ; 

function Ring.new( Model , PlayerSize , RingType )
	local self = setmetatable({},{
		__index = function( Table , Index , Value )
			--// Attempt to reference the teams //--
			if Index == 'Team1' or Index == 'Team2' then
				return Table.Teams[Index] ; 
			end ; 
			--// Attempt to reference the model attributes //--
			if not Ring[Index] and Table.Model:GetAttribute( Index) ~= nil then
				return Table.Model:GetAttribute( Index ) ; 
				--// Attempt to reference model propertiesl //--
			elseif not Ring[Index] and Table.Model[Index] ~= nil then
				return Table.Model[Index] ;
			end ; 
			--// Default to the ring class //--
			return Ring[Index] ; 
		end,	
	}) ; 

	self.Model = Model ; 

	self.Teams = {Team1={},Team2={}} ; 
	self.PlayerSize = PlayerSize ; 
	self.RingType = '' ; 

	self.MatchConnections = {} ; 

	--// Setup the ring //--
	self:_SetupRing() ; 
	task.spawn(function()
		self:_StartLoop() ; 
	end) ; 

	table.insert( Ring.Rings , self ) ; 
	return self ; 
end ; 

function Ring:_SetupRing()
	--// Load player attributes //--
	for Attribute , Value in _G.ServerGameSettings._RingAttributes do
		self.Model:SetAttribute( Attribute , Value )
	end ; 

	--// Prompt part //--
	local NewPrompt = script:WaitForChild( 'Join.Prompt' ):Clone() ; 
	NewPrompt.Parent = self.Model:FindFirstChild( 'Prompt.Part' , true ) ; 

	--// Ring Connections //--
	NewPrompt.Triggered:Connect(function( Player )
		self:_AttemptToJoin( Player ) ; 
	end) ; 
	self.Model:GetAttributeChangedSignal( 'InGame' ):Connect(function()
		NewPrompt.Enabled = not self.InGame ; 
		if self.InGame == true then
			self:_PreGameLoop() ; 
		end ; 
		while self.InGame == true do task.wait()
			self:_BeginGameLoop() ; 
		end ; 
	end) ; 

	self:_SetAttribute( 'MovesEnabled' , Http:JSONEncode({
		'Left','Right','Up','Down'	
	}) ) ; 
end ; 

function Ring:_SetAttribute( Attribute , Value )
	self.Model:SetAttribute( Attribute , Value ) ; 
end ; 

function Ring:_AttemptToLeave( Player , Team )
	--// Get the player team from the name of the ring //--
	local TeamTable , TeamName = _G.GameFunctions.GetPlayerTeam( Player , self.Name ) ;
	if TeamTable ~= nil then
		local SpotPad = self.Model:FindFirstChild( TeamName .. 'Spot' , true )
		--// Remove Player from ring //--
		_G.GameFunctions.Teleport( Player ,  SpotPad.CFrame * CFrame.new(0,-1,11.5) ) ;
		table.remove( TeamTable , table.find( TeamTable , Player )) ; 
	end ; 
end ;

function Ring:ForEachPlayer( Data , Callback ) 
	local Callback = type(Data) == 'function' and Data or Callback ; 
	for Team,Players in self.Teams do
		for _,Player in Players do
			if Player == nil or Player.Parent == nil then
				continue ; 
			end ; 
			--// if a specific team was mentioned then make sure the player is on that team before calling the callback //--
			if type(Data) == 'table' and Data.Team ~= nil and self:IsOnTeam( Player , Data.Team ) == nil then
				continue ; 
			end ; 
			Callback( Player , Team , _G.GameFunctions.GetPlayerConfig(Player) ) ; 
		end ; 
		continue ;
	end ; 
end ;

function Ring:IsOnTeam( Player , Team )
	return  (type(Team) == 'table' and table.find( Team , Player )) or 
		(type(Team) == 'string' and table.find( self[Team]  , Player )) ; 
end ; 

function Ring:_AttemptToJoin( Player )
	local Team ; 
	--// Make sure the player isnt in a game and player isnt on anther ring //--
	if Player:GetAttribute( 'InGame' ) == true and _G.GameFunctions.GetRing( Player ) ~= self.Model then
		return ; 
		--// If they are already on the ring, then make sure to leave it by setting onring to nothing //--
	elseif Player:GetAttribute( 'InGame' ) == false and _G.GameFunctions.GetRing( Player ) == self.Model then
		_G.GameFunctions.SetRing( Player , nil ) ; 
		return ; 
	end ; 
	if self:IsOnTeam( Player , Team ) == false and #self.Team1 < self.PlayerSize then
		Team = 'Team1' 
	elseif self:IsOnTeam( Player , Team ) == false and #self.Team2  < self.PlayerSize then
		Team = 'Team2' ; 
	end ; 
	--// Join the team and setup the player //--
	if Team ~= nil and Player.Character ~= nil then
		table.insert( self[Team] , Player ) ; 
		_G.GameFunctions.SetRing( Player , self.Model ) ;
		
		--// find the pad and teleport to it //--
		_G.GameFunctions.Stun( Player , true ) ;
		local SpotPad = self.Model:FindFirstChild( Team .. 'Spot' , true ) ; 
		_G.GameFunctions.Teleport( Player ,  CFrame.new( SpotPad.Position , SpotPad.Position + SpotPad.CFrame.LookVector * 2 ) )
		
		--// Wait until the player isnt on the ring anymore or they are unable to leave and teleport them away //--
		repeat task.wait(0.1) until (Player.Parent == nil) or _G.GameFunctions.GetRing( Player ) ~= self.Model or (self.InGame == true) ;
		--// also makes sure that the game isnt going on //--
		if Player.Parent ~= nil and _G.GameFunctions.GetRing( Player ) ~= self.Model and self.InGame == false then 
			self:_AttemptToLeave( Player ) ;
			_G.GameFunctions.Stun( Player , false ) ;
		end ; 	
	end ; 
end ; 

function Ring:_CanGameContinue()
	--// Validate Players //--
	local PlayersAreValid = true ; 
	for Team,Players in self.Teams do
		for _,Player in Players do
			if Player == nil or Player.Parent == nil or _G.GameFunctions.GetRing( Player ) ~= self.Model or Player:GetAttribute( 'InGame' ) == false then
				PlayersAreValid = false ; 
				break ; 
			end ; 
			continue ; 
		end ; 
	end ; 
	--// Include the extra checks //--
	return (self.InGame == true) and (#self.Team1 == self.PlayerSize) and (#self.Team2 == self.PlayerSize) and (PlayersAreValid == true) ;  
end ; 

function Ring:_StartLoop()
	local function CanStart()
		return self.InGame == false and #self.Team1 == self.PlayerSize and #self.Team2 == self.PlayerSize ; 
	end ; 
	while getmetatable(self) do task.wait(1)
		if CanStart() == true then
			local CurrentTime = tick() ; 
			repeat task.wait() until CanStart() == false or tick() - CurrentTime >= _G.ServerGameSettings.DelayStart ;
			if CanStart() == true then
				self:_SetAttribute( 'StartTime' , tick() ) ; 
				self:_SetAttribute( 'InGame' , true ) ;
				repeat task.wait() until self.InGame == false ; 
				task.wait(1) ; 
			end ; 
		end ;
		continue ; 
	end ; 
	return ;
end ; 

function Ring:_PreGameLoop()
	local function CreatePlayerConfig( Player , Team )
		local PlayerConfigs = self.Model:FindFirstChild( 'Player.Configs' ) ;
		if PlayerConfigs and PlayerConfigs:FindFirstChild( Player.Name ) == nil then
			--// creates a config that keeps track of the player match data //--
			local PlayerConfig = script:FindFirstChild( 'Player.Game.Config.Template' ):Clone() ; 
			PlayerConfig.Name = Player.Name ; 
			--// Setup play config before giving it to the folder //--
			PlayerConfig:SetAttribute( 'Team' , Team ) ; 
			PlayerConfig:SetAttribute( 'Combo' , Http:JSONEncode({}) ) ; 
			PlayerConfig:SetAttribute( 'MovesEnabled' , Http:JSONEncode({
				'Left','Right','Up','Down' 
			}))
			PlayerConfig.Parent = PlayerConfigs ; 
		end ; 
	end ; 
	self:ForEachPlayer(function( Player , Team )
		CreatePlayerConfig( Player , Team ) ; 
		Player:SetAttribute( 'InGame' , true ) ; 
	end) ;
	--// Set Attacker and defender //--
	self:_SetAttribute( 'Attacking' , 'Team1' ) ; 
	self:_SetAttribute( 'Defending' , 'Team2' ) ; 
end ; 

function Ring:_SwitchTeamTypes()
	self:_SetAttribute( 'Attacking' , (self.Attacking == 'Team1') and 'Team2' or 'Team1') ; 
	self:_SetAttribute( 'Defending' , (self.Defending == 'Team2') and 'Team1' or 'Team2')  ; 
end ; 

function Ring:_PlayFinisher( Player , Loser )
	local Finisher = 'Hadouken' ; 
	if _G.Finishers[Finisher] then
		_G.Finishers[Finisher]( Player , Loser ) ; 
	end ; 
end ; 

function Ring:_AttemptToSave( Player )
	task.spawn(function()
		_G.PlayerDataController.SavePlayerData( Player ) ; 
	end) ; 
end ; 
	
function Ring:_EndGame( UseData )
	task.wait(0.2) ; 
	local MatchDuration = tick() - self.StartTime ; 
	local LosingTeam 
	if UseData.Winner ~= nil and UseData.Loser == nil then
		_G.PlayerFunctions.ChangeRecord( UseData.Winner , {Wins=1} ) ; 
	end ; 
	if UseData.Winner ~= nil and UseData.Loser ~= nil then	
		--// yields the function //--
		self:_PlayFinisher( UseData.Winner , UseData.Loser ) ;
		_G.PlayerFunctions.ChangeRecord( UseData.Winner , {Wins=1} ) ; 
		_G.PlayerFunctions.ChangeRecord( UseData.Loser , {Losses=1}) ; 
		--// Save player data //--
		self:_AttemptToSave(UseData.Winner) ; self:_AttemptToSave(UseData.Loser)
		task.wait(0.25) ; 
	end ; 
	self:ForEachPlayer(function( Player , Team , PlayerConfig )
		if PlayerConfig ~= nil then
			PlayerConfig:Destroy() ; 
		end ; 
		Player:SetAttribute( 'InGame' , false ) ;
		_G.GameFunctions.SetRing( Player , nil ) ;  
		local SpotPart = self.Model.TPParts[Team..'Spot'] ; 
		--// Remove the player from the ring //--
		_G.GameFunctions.Teleport( Player , SpotPart.CFrame * CFrame.new(0,-1,11.5) ) ; 
		_G.GameFunctions.Stun( Player , false ) ; 
		_G.GameFunctions.StopAnimations( Player ) ; 
		--// Send rewards to client //--
		local MatchData = {
			MatchDuration = MatchDuration ,  
			Combos = PlayerConfig:GetAttribute( 'TotalCombos' ) ,
			Dodges = PlayerConfig:GetAttribute( 'Dodges' ) ,
			HeartsLost = PlayerConfig:GetAttribute( 'HeartsLost' ) ,
		}
		local CalculatedRewards = _G.PlayerFunctions.CaculateMatchRewards( Player , MatchData )
		_G.PlayerFunctions.ApplyRewards( CalculatedRewards ) ; 
		
		local CurrentRank , CurrentRankLevel , CurrentExp , MaxExp = _G.ServerGameSettings._GetRankInfo( Player:FindFirstChild( 'Player.Data' ) )
		--// Determine the next rank through the current rank //--
		local NextRank
		for i=1,#_G.GameInfo.Ranks do
			if _G.GameInfo.Ranks[i] == CurrentRank then
				NextRank = _G.GameInfo.Ranks[i+1] or _G.GameInfo.Ranks[i] ; break
			end ; 
		end ; 
		local CurrentPlayerRankData = {
			CurrentRank = CurrentRank , 
			NextRank = NextRank or 'Bronze' ,
			RankLevel = CurrentRankLevel , 
			MaxExp = MaxExp , 
		}
		Remotes.Notify:FireClient( Player , 'End Game UI' , MatchData , CalculatedRewards , CurrentPlayerRankData ) ; 
	end) ; 
	--// Reset the attribtes //--
	for Attribute,Value in _G.ServerGameSettings._RingAttributes do
		self:_SetAttribute( Attribute , Value ) ; 
	end ; 

	for _,Connection in self.MatchConnections do
		Connection:Disconnect() ; 
	end ; 
	table.clear(self.MatchConnections) ;

	table.clear(self.Team1) ; table.clear(self.Team2) ;
end ; 

function Ring:_BeginGameLoop()
	--// Game variables //--
	local TeamMoves = {Team1='',Team2=''}

	--// Establish connections //--
	self.MatchConnections[ 'Client.Action.Conection' ] = ClientAction.OnServerEvent:Connect(function( Player , Action , ActionData )
		--// Verify player //--
		if _G.GameFunctions.GetRing( Player ) ~= self.Model or ActionData.Move == nil or not table.find( {'Left','Right','Up','Down'} , ActionData.Move ) then
			return ; 
		end ; 
		--// Verify if they can play the move //--
		local PlayerConfig = _G.GameFunctions.GetPlayerConfig( Player ) ; 
		if (Action == 'Play Move') and (PlayerConfig ~= nil) and TeamMoves[PlayerConfig:GetAttribute( 'Team' )] == '' and table.find( Http:JSONDecode(PlayerConfig:GetAttribute( 'MovesEnabled' )) , ActionData.Move ) and self.CanPlayMove == true and (self.MoveCountdown > 0) then
			--// Assign the move to the proper variable //--
			TeamMoves[PlayerConfig:GetAttribute( 'Team' )] = ActionData.Move ; 
			print( '[Server Debug]: ' .. Player.Name .. ' Played ' .. ActionData.Move ) ; 
		end ; 
	end) ; 

	--// Main Game Loop //--
	task.wait(0.25) ; 
	while self.InGame == true do task.wait()
		local DefendingTeam = self.Defending ; local AttackingTeam = self.Attacking ; 

		local AttackingTeamPlayer = self[self.Attacking][1] ; 
		local DefendingTeamPlayer = self[self.Defending][1] ; 

		local AttackingTeamConfig = _G.GameFunctions.GetPlayerConfig( AttackingTeamPlayer ) ; 
		local DefendingTeamConfig = _G.GameFunctions.GetPlayerConfig( DefendingTeamPlayer ) ; 

		--// Verify everything //--
		if DefendingTeamPlayer == nil or AttackingTeamPlayer == nil then
			self:End({})
			break ; 
		end ; 

		task.wait(0.3) ; 

		--// Prompt the player to move //--
		self:_SetAttribute( 'CanPlayMove' , true ) ; 

		--// Play the idle animation on the attacking team //--
		local AttackingTeamIdleAnimation = _G.GameFunctions.GetAnimation( AttackingTeamPlayer , 'Shadow.Box.Idle' ) ;
		if AttackingTeamIdleAnimation ~= nil then
			AttackingTeamIdleAnimation:Play( 0.2 ) ; 
		end ; 

		local CurrentTime = tick() ; local TimePassed = 0 ; 
		local TimeToMakeMove = _G.ServerGameSettings.TimeToMakeMove
		self:_SetAttribute( 'Status' , 'Waiting for moves' ) ; 

		--// Wait for moves to be played by both sides //--
		repeat task.wait()
			TimePassed = tick() - CurrentTime ; 
			self:_SetAttribute( 'MoveCountdown' , math.clamp(TimeToMakeMove - TimePassed,0,TimeToMakeMove) ) ;
		until 
		(TimePassed >= TimeToMakeMove) or (TeamMoves.Team1 ~= '' and TeamMoves.Team2 ~= '' ) or 
			(AttackingTeamPlayer.Parent == nil) or (DefendingTeamPlayer.Parent == nil) or 
			(self:_CanGameContinue() == false) ;

		if self:_CanGameContinue() == false then
			self:End({}) ; 
			break ;
		end

		self:_SetAttribute( 'Status' , 'Playing' ) ; 

		if self:_CanGameContinue() == false then
			self:End({}) ; 
			warn( '[Server Debug]: ' .. self.Name .. ' Was Unable To Continue The Match' ) ;
			break ; 
		end ; 

		self:_SetAttribute( 'CanPlayMove' , false ) ; 

		--// Verify moves //--
		print( '[Server Debug]: Team1 Move: ' .. TeamMoves.Team1 .. ' Team2 Move: ' .. TeamMoves.Team2 ) ;

		local AttackingTeamMove = TeamMoves[self.Attacking] ;  
		local DefendingTeamMove = TeamMoves[self.Defending] ;

		local AttackingTeamCombo = Http:JSONDecode(AttackingTeamConfig:GetAttribute( 'Combo' )) ;
		local AttackingTeamMovesEnabled = Http:JSONDecode(AttackingTeamConfig:GetAttribute( 'MovesEnabled' )) ; 
		local DefendingTeamMovesEnabled = Http:JSONDecode(DefendingTeamConfig:GetAttribute( 'MovesEnabled' ))

		--// Add the combo the combo table //--
		AttackingTeamCombo[#AttackingTeamCombo+1] = {
			Attacking = AttackingTeamMove,
			Defending = DefendingTeamMove
		}

		--// Add default moves if moves arent there //--
		if AttackingTeamMove == '' then
			AttackingTeamMove = AttackingTeamMovesEnabled[math.random(1,#AttackingTeamMovesEnabled)] ; 
		end ; 
		if DefendingTeamMove == '' then
			DefendingTeamMove = AttackingTeamMovesEnabled[math.random(1,#DefendingTeamMovesEnabled)] ; 
		end ;  

		_G.GameFunctions.StopAnimations( AttackingTeamPlayer , 0.2 ) ; 
		_G.GameFunctions.StopAnimations( DefendingTeamPlayer , 0.2 ) ; 
		for Index,Directions in AttackingTeamCombo do
			--// Get the animation based on the direction in the combo //--
			local AttackingTeamAnimation = _G.GameFunctions.GetAnimation( AttackingTeamPlayer , 'Shadow.Box.'..(Directions.Attacking) ) ; 
			local DefendingTeamAnimation = _G.GameFunctions.GetAnimation( DefendingTeamPlayer , 'Hit.' .. Directions.Defending ) ; 

			--// Used to check when both animations are finished playing. When equal to 2 then the animations are done //--
			local AnimationsFinished = 0 ; 

			--// Store the animations in a table and loop over them. play both animations at the same time and wait for them to finish. //--
			local AnimationTable = {AttackingTeamAnimation,DefendingTeamAnimation} ; 
			for Index,Animation in AnimationTable do
				if Animation ~= nil then
					local AnimationSpeed = 0.75 ; 
					task.spawn(function()
						Animation:Play( 0.2 , 1 , AnimationSpeed ) ;
						--// Wait until animation is done playing //--
						repeat task.wait() until (not Animation.IsPlaying)
						AnimationsFinished += 1 ; 
					end) ; 
				elseif Animation == nil  then
					AnimationsFinished += 1 ; 
				end ; 
			end ; 
			task.wait(0.15) ; 
			--// Continue on to the next animation //--
			repeat task.wait() until (AttackingTeamAnimation == nil or DefendingTeamAnimation == nil) or (AnimationsFinished >= 2) or 
				(self:_CanGameContinue() == false) ;
		end ; 
		if self:_CanGameContinue() == false then
			self:End({})
			break ; 
		end ; 

		--// check if moves are matching. Left and right have to be switched because player1 left is player2's right //--
		local AreMovesMatching = false ; 
		if AttackingTeamMove == 'Left' or AttackingTeamMove == 'Right' then
			if DefendingTeamMove == 'Left' or DefendingTeamMove == 'Right' then
				if AttackingTeamMove ~= DefendingTeamMove then
					AreMovesMatching = true ; 
				end ; 
			end ; 
		elseif AttackingTeamMove == 'Up' or AttackingTeamMove == 'Down' then
			if AttackingTeamMove == DefendingTeamMove then
				AreMovesMatching = true ; 
			end ; 
		end ; 

		if AreMovesMatching == false then
			--// Switch the teams and reset the combo //--
			table.clear( AttackingTeamCombo ) ; 
			self:_SwitchTeamTypes() ; 
			AttackingTeamIdleAnimation:Stop( 0.2 ) ; 
			local Moves = {'Left','Up','Right','Down'} ; 
			--// Reset moves enabled on both teams //--
			AttackingTeamConfig:SetAttribute( 'MovesEnabled' , Http:JSONEncode(Moves) ) ; 
			DefendingTeamConfig:SetAttribute( 'MovesEnabled' , Http:JSONEncode(Moves) ) ; 
			--// Reset the amount of hearts //--
			DefendingTeamConfig:SetAttribute( 'Hearts' , 3 ) ;
			
			AttackingTeamConfig:SetAttribute( 'Dodges' , AttackingTeamConfig:GetAttribute( 'Dodges' )+1 )
		elseif AreMovesMatching == true then
			--// End game if there are 3 combos //--
			if #AttackingTeamCombo >= 3 or DefendingTeamConfig:GetAttribute( 'Hearts' ) <= 0 then
				self:_EndGame( {
					Winner = AttackingTeamPlayer , 
					Loser = DefendingTeamPlayer ,
					LastDefenseMove = DefendingTeamMove ,
				}) ; 
				break ; 
			end ; 
			--// remove the move that the attacking team made from the moves enabled so they cant do it again //--
			table.remove( AttackingTeamMovesEnabled , table.find( AttackingTeamMovesEnabled , AttackingTeamMove ) ) ; 
			AttackingTeamConfig:SetAttribute( 'MovesEnabled' , Http:JSONEncode(AttackingTeamMovesEnabled) ) ; 
			--// remove the move that the defending team made from the moves enabled so they cant do it again //--
			table.remove( DefendingTeamMovesEnabled , table.find( DefendingTeamMovesEnabled , DefendingTeamMove ) ) ; 
			DefendingTeamConfig:SetAttribute( 'MovesEnabled' , Http:JSONEncode(DefendingTeamMovesEnabled) ) ; 

			DefendingTeamConfig:SetAttribute( 'Hearts' , DefendingTeamConfig:GetAttribute( 'Hearts' ) - 1 ) ;
			
			DefendingTeamConfig:SetAttribute( 'HeartsLost' , DefendingTeamConfig:GetAttribute( 'HeartsLost' )+1 )
			AttackingTeamConfig:SetAttribute( 'TotalCombos' , AttackingTeamConfig:GetAttribute( 'TotalCombos' )+1 )
		end ; 

		AttackingTeamConfig:SetAttribute( 'Combo' , Http:JSONEncode(AttackingTeamCombo) ) ;
		TeamMoves = {Team1='',Team2=''} ; 
	end ; 
end ; 

function Ring:End( EndingData )
	self:_SetAttribute( 'InGame' , false ) ; 
end ; 

return Ring ; 
"
R4bFuUhL,Untitled,Overwtime,YAML,Monday 3rd of July 2023 02:52:28 PM CDT,"# Сообщения плагина
messages:
  teleport_in: ""&c[*] &6Телепортация на арену через &c5 &6секунд""
  teleport_out: ""&c[*] &6Вы телепортируетесь с арены через &c%time% &6секунд""
  teleported_in: ""&c[*] &6Вы были телепортированы на &cарену""
  teleported_out: ""&c[*] &6Вы были телепортированы с &cарены""
  no_armor: ""&c[*] &6У вас не достаточно брони для входа на &cарену""
  debuff_apply: ""&c[*] &6Вы сняли слишком много брони и получили &cдебафы""
  leave_cmd_message: ""&c[*] &6Вы будете телепортированы с арены через %time% секунд""
  leave_message: ""&c[*] &6Игрок &c%player% &6вышел во время &cPVP на арене!""
  join_cancelled: ""&c[*] &6Вы уже находитесь на &cарене!""
  leave_cancelled: ""&c[*] &6Вы не находитесь на &cарене!""
  leave_cancelled_punch: ""&c[*] &6Телепортация с арены была &cотменена т.к. вас ударил игрок!""
  leave_cancelled_punched: ""&c[*] &6Телепортация с арены была &cотменена т.к. вы ударили игрока!""
  blocked_command: ""&c[*] &6Дання команда не доступна на &cарене!""
  no_perms: ""&4Команда для вас не доступна""
  
# Настройка боссбаров
bossbar_settings:
  # Боссбар, который будет показываться всем, кто есть на арене
  on_arena:
    # Включить ли данный боссбар
    enable_bossbar: true
    # Цвет боссбара (PINK, BLUE, RED, GREEN, YELLOW, PURPLE, WHITE)
    bar_color: RED
    # Тип боссбара (SOLID, SEGMENTED_6, SEGMENTED_10, SEGMENTED_12, SEGMENTED_20)
    bar_style: SOLID
    # Сообщение в боссбаре
    bar_message: ""&cРежим PVP &f- &aАКТИВЕН""
  # Боссбар, который будет показывать отсчет до телепорта на арену
  teleport_in:
    enable_bossbar: true
    bar_color: GREEN
    bar_style: SEGMENTED_6
    bar_message: ""&6Телепорт через: &c%time% сек.""
  # Боссбар, который будет показывать отсчет до телепорта из арены
  teleport_out:
    enable_bossbar: true
    bar_color: GREEN
    bar_style: SEGMENTED_12
    bar_message: ""&6Телепорт через: &c%time% сек.""

# Настройки звуков, которые будут проигрываться при действиях 
# Список всех звуков: https://hub.spigotmc.org/javadocs/bukkit/org/bukkit/Sound.html
sound_settings:
  # Звук, который будет проигрываться при попадании на арену
  teleport_in:
    # Включить ли звуки при входе на арену
    enable_sound: true
    # ID звука
    sound: BLOCK_NOTE_BLOCK_PLING
    # Громкость звука от 0.0 до 1.0
    volume: 0.75
    # Тон звука от 0.5 до 2.0 (больше = ""писклявее"")
    pitch: 1.0
  # Звук, который будет проигрываться при выходе с арены
  teleport_out:
    enable_sound: true
    sound: BLOCK_NOTE_BLOCK_PLING
    volume: 0.75
    pitch: 1.0
  # Звук, который будет проигрываться при отмене телепортации (если у игрока нет одета броня)
  teleport_cancelled:
    enable_sound: true
    sound: ENTITY_VILLAGER_NO
    volume: 0.75
    pitch: 1.0
  # Звук, который будет проигрываться при наложении дебаффа (если у игрока нет одета броня)
  apply_debuff:
    enable_sound: true
    sound: ENTITY_ITEM_BREAK
    volume: 0.75
    pitch: 1.0

# Настройки для арены
arena_settings:
  # Локации арены (куда будет телепортирован игрок при попадании на арену. Выбирается рандомно) (мир;x;y;z)
  arena_locations: 
    - world;10;10;10
    - world;20;20;20
    - world;30;30;30
  # Локация куда игрок будет телепортирован с арены
  out_location: world;-10;-10;-10
  # Время перед входом на арену (в секундах)
  join_time: 5
  # Время перед выходом с арены (в секундах)
  leave_time: 30
  # Настройки команды для быстрого лива с арены (/fastleave)
  fast_leave:
    enable: true
    time: 15
    apply_effect: true
    effects:
      - 'GLOWING;15;1'
  # Отменять ли отсчет до выхода с арены при получении игроком урона
  hit_cancel_leave_attempt: true
  # Писать ли сообщения при выходе игрока во время нахождения на арене
  message_on_leave: true
  # Убивать ли игрока при выходе с арены
  kill_on_leave: true
  # Блокировка действий на арене (true - блокировать, false - ничего не делать)
  restricted_actions:
    chorus: true
    enderpearl: false
    commands: 
      enable: true
      mode: 'whitelist' # whitelist - разрешенные команды на арене blacklist - запрещенные команды на арене
      list:
        - '/m'
        - '/message'
        - '/t'
        - '/tell'
        - '/leave'
        - '/leavearena'
  # Настройка брони, с которой можно войти на арену (поставьте [] в разделах чтобы броня на данной части тела не учитывалась)
  required_armor:
    head:
    - NETHERITE_HELMET
    - DIAMOND_HELMET
    body:
    - NETHERITE_CHESTPLATE
    - DIAMOND_CHESTPLATE
    legs:
    - NETHERITE_LEGGINGS
    - DIAMOND_LEGGINGS
    boots:
    - NETHERITE_BOOTS
    - DIAMOND_BOOTS
  # Настройка дебафов, которые игрок получает, если находится на арене без брони
  arena_debuff_settings:
    # Включить ли дебафы
    enable_debuffs: true
    # Эффекты, которые будут накладываться на игроков, которые находятся под действием дебафа (ЭФФЕКТ;ВРЕМЯ;УРОВЕНЬ) (поставьте [] чтобы никакие эффекты не накладывались)
    effects:
      - 'BLINDNESS;60;3'
      - 'GLOWING;60;1'
    # Команды, которые будут применены к игрокам, которые получают дебафф (поставьте [] чтобы никакие команды не применялись)
    commands: 
      - 'thor %player%'"
NmCFMpcZ,extract for dll,dllbridge,C,Monday 3rd of July 2023 02:51:47 PM CDT,"/*
0) extern ""C"" __declspec(dllexport)
   - - - - - - - - - - - - - - - - -
1) int (*_rr)();
2) HMODULE  hDll = 0;
3) hDll = LoadLibrary(""dll/for.dll"");
4) _rr = (int(*)())GetProcAddress(hDll, ""_rr"");
5) FreeLibrary(hDll);
*/


// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
// File dllmain.cpp

#include <windows.h>



BOOL APIENTRY DllMain (HINSTANCE hInst,         // Library instance handle. 
                       DWORD    reason,         // Reason this function is being called. 
                       LPVOID reserved)         // Not used. 
{
    switch(reason)
    {
      case DLL_PROCESS_ATTACH:
                               break;

      case DLL_PROCESS_DETACH:
                               break;

      case DLL_THREAD_ATTACH:
                               break;

      case DLL_THREAD_DETACH:
                               break;
    }


    return TRUE;                                              // Returns TRUE on success, FALSE on failure 
}





////////////////////////////////
extern ""C"" __declspec(dllexport)
/////////////////////////////////////////////////////
int _rr()                                          //  
{
	
return 1142;	
}



// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
// File main.cpp




#include   <windows.h>
#include     <stdio.h>



HMODULE  hDll = 0;


int (*_rr)();


////////////////////////////////////////////////////
int main()                                        // 
{


    hDll = LoadLibrary(""dll/for.dll"");
    
    if(hDll == 0)
    {
		
	   printf(""Error LoadLibrary\n"");
	   return 0;	
	}

   _rr = (int(*)())GetProcAddress(hDll, ""_rr"");
	
	if(_rr == 0)
    {
		
	   printf(""Error Get Proc\n"");
	   FreeLibrary(hDll);
	   return 0;	
	} 
	
	printf(""_rr() = %d"", _rr() );

    FreeLibrary(hDll); Sleep(2000); 
    
return 0;
}





"
Ut2NkjRT,Untitled,WarPie90,Delphi,Monday 3rd of July 2023 02:15:25 PM CDT,"program new;
{$DEFINE SRL_USE_REMOTEINPUT}
{$I SRL/osr.simba}

const
  USE_SPELL = ERSSpell.LOW_LEVEL_ALCHEMY;

type
  TAlchemyValue = record
    Name: string;
    Points: Int32;
  end;

  TAlchemyValues = array of TAlchemyValue;

var
  RSW: TRSWalker;

const
  cupboards: TPointArray = [
    [190,154], [190,138], [190,122], [190,106],
    [226,106], [226,122], [226,138], [226,154]
  ];

  pattern: TStringArray := [
    'Leather boots', 'Adamant kiteshield', 'Adamant med helm', 'Emerald',
    'Rune longsword','','',''
  ];


function TRSInventory.GetUnusedSlots(): TIntegerArray;
var slot: Int32;
begin
  Inventory.Open();
  for slot:=0 to High(Inventory.GetSlotBoxes()) do
    if not Inventory.IsSlotUsed(slot) then
      Result += slot;
end;


procedure onterm();
begin
  RSClient.Image.Clear();
end;


function NearestCupboardID(): Int32;
var  // function assumes you have already moved to the cupboard
  i: Int32;
  p: TPoint;
begin
  p := RSW.GetMyPos();
  for i:=0 to High(Cupboards) do
    if Cupboards[i].DistanceTo(p) < 11 then
      Exit(i);

  Result := -1;
end;

function GetExtractedItemId(unused: TIntegerArray): Int32;
var
  i: Int32;
begin
  Inventory.Open();
  Result := -1;
  for i:=0 to High(pattern)-3 do
    if ItemFinder.Find(pattern[i], [Inventory.GetSlotBox(unused[0])]) <> [] then
      Exit(i);
end;

function GetCurrentOrderOffset(): Int32;
var
  unused: TIntegerArray;
  pos: Int32;
  TPA: TPointArray;
  ATPA: T2DPointArray;
  c: TCircle;
begin
  repeat
    pos    := NearestCupboardID();
    unused := Inventory.GetUnusedSlots();

    srl.FindColors( TPA, CTS2(9082515, 21, 0.30, 0.13), Minimap.PointToMsRect(RSW.WorldToMM(Cupboards[pos])).Bounds());
    ATPA := TPA.Cluster(3);

    c := ATPA.Biggest().MinAreaCircle();
    c.Radius := Round(c.Radius * 0.7);
    RSClient.Image.DrawCircle(c.Mean(), c.Radius, 255);
    Mouse.Click(c, MOUSE_LEFT);
    WaitUntil(Length(Inventory.GetUnusedSlots()) <> Length(unused), 50, 4000);

    Result := GetExtractedItemId(unused);
    if Result = -1 then
      RSW.WalkPath([Cupboards[(pos+4) mod 8]]);
  until Result <> -1;

  Result := srl.Modulo(pos-result, 8);
end;

function GetTranslationTable(): TIntegerArray;
var
  off,x,i: Int32;
  pt: TPoint;
begin
  off := GetCurrentOrderOffset();
  Result := [];
  for i:=0 to High(pattern) do
  begin
    x := srl.Modulo(i-off, Length(pattern));
    pt := Minimap.PointToMs(RSW.WorldToMM(Cupboards[i]));
    RSClient.Image.DrawText(ToStr(i)+': '+ pattern[x], pt, 255);
    Result += x;
  end;
end;

procedure DrawTranslationTable(table: TIntegerArray);
var
  x,i: Int32;
  pt: TPoint;
begin
  for i:=0 to High(pattern) do
  begin
    x := table[i];
    pt := Minimap.PointToMs(RSW.WorldToMM(Cupboards[i]));
    RSClient.Image.DrawText(ToStr(i)+': '+ pattern[x], pt, 255);
  end;
end;


function GetAlchValues(): TAlchemyValues;
var
  b: TBox;
  TSA: TStringArray;
  TPA: TPointArray;
  ATPA: T2DPointArray;
  I,z: Int32;
begin
  b := Minimap.Bounds;
  b := [b.x1-250, b.y1+80, b.x2-250, b.y2+50];

  SRL.FindColors(TPA, CTS2(45620, 6, 0.14, 0.01), b);
  ATPA := TPA.Cluster(20, 2);
  ATPA.SortByX(True);
  ATPA.SortByY(True);

  RSClient.Image.DrawBox(b, 255);
  for i:=0 to High(ATPA) do
  begin
    TSA += ocr.Recognize(ATPA[i].Bounds().Expand(2), TOCRColorFilter.Create([45620], [30]), RS_FONT_PLAIN_11);
    z := TSA[High(TSA)].Pos('I');
    if z > 1 then
    begin
      if LowerCase(TSA[High(TSA)][z-1]) = TSA[High(TSA)][z-1] then
        TSA[High(TSA)][z] := 'l';
    end;

    TSA[High(TSA)] := TSA[High(TSA)].Replace('Helm', 'med helm', [rfReplaceAll]);
  end;

  for i:=0 to High(TSA) with 2 do
    Result += [TSA[i], StrToIntDef(TSA[i+1], 0)];
end;


function GetBestAlch(scores: TAlchemyValues): Int32;
var
  i,best: Int32;
begin
  best := 0;
  for i:=0 to High(scores) do
    if scores[i].Points > scores[best].Points then
      best := i;

  WriteLn('>>> Alch: ', scores[best].Name);
  for i:=0 to High(pattern) do
  begin
    if LowerCase(scores[best].Name).Pos(LowerCase(pattern[i])) > 0 then
      Exit(i);
  end;
end;

function Equal(A,B: TAlchemyValues): Boolean;
var i: Int32;
begin
  Result := True;
  for i:=0 to High(A) do
    if (A[i].Name <> B[i].Name) or (A[i].Points <> B[i].Points) then
      Exit(False);
end;


function Extract(): Int32;
var
  i,item,slot,count: Int32;
  best: TPoint;
  TPA: TPointArray;
  ATPA: T2DPointArray;
  translate: TIntegerArray;
  scores: TAlchemyValues;
  c: TCircle;
  items: TRSItemArray;
  t: TCountDown;
begin
  translate := GetTranslationTable();
  scores    := GetAlchValues();
  item      := GetBestAlch(scores);
  best      := cupboards[translate.Find(item)];

  RSW.WalkPath([best]);
  RSClient.Image.Clear();
  DrawTranslationTable(translate);

  // extract fast:
  WriteLn('Stage: Extract');
  t.Init(2500);
  while Equal(scores, GetAlchValues()) and (not t.IsFinished()) do
  begin
    srl.FindColors( TPA, CTS2(9082515, 21, 0.30, 0.13), Minimap.PointToMsRect(RSW.WorldToMM(best)).Bounds());
    ATPA := TPA.Cluster(3);
    c := ATPA.Biggest().MinAreaCircle();
    c.Radius := Round(c.Radius * 0.7);
    Mouse.Click(c, MOUSE_LEFT);
    Sleep(Random(250,500));
  end;

  // cast spell
  WriteLn('Stage: cast spells!');
  WriteLn pattern[translate.Find(item)];

  while Equal(scores, GetAlchValues()) do
  begin
    Magic.CastSpell(USE_SPELL);
    WaitUntil(Inventory.IsOpen(), 20, 5000);
    Inventory.ClickItem(pattern[item]);
    count := Inventory.CountItem(pattern[item]);
    WaitUntil(Magic.IsOpen(), 20, 5000);

    if count = 0 then break;
  end;

  if Length(Inventory.GetUnusedSlots()) < 10 then
  begin
    WriteLn('Stage: dropping crap');
    for i:=0 to High(pattern)-3 do items += pattern[i];
    Inventory.ShiftDrop(items, DROP_PATTERN_REGULAR);
  end;
end;


begin
  RSW.Setup('mta0');
  AddOnTerminate(@onterm);
  RSClient.Image.Clear();
  RSClient.Image.setFontSize(14);
  RSClient.Image.setFontAntialiasing(False);

  while True do
  begin
    RSClient.Image.Clear();
    Extract();

    // here we can check if we have reached 10K coins so we can leave the room
    // and break this loop
  end;

end."
wZtFufsu,Untitled,YomoMan,C++,Monday 3rd of July 2023 01:56:46 PM CDT,"#include <iostream>
#include <fstream>
#include <boost/statechart/state_machine.hpp>
#include <boost/statechart/simple_state.hpp>
#include <boost/statechart/event.hpp>
#include <boost/serialization/serialization.hpp>
#include <boost/archive/text_oarchive.hpp>
#include <boost/archive/text_iarchive.hpp>
#include <msgpack.hpp>

namespace sc = boost::statechart;

// События
struct EventStart : sc::event<EventStart> {};
struct EventStop : sc::event<EventStop> {};

// Состояния
struct StateIdle;
struct StateRunning;
struct StateFinished;

// Конечный автомат
struct MyStateMachine : sc::state_machine<MyStateMachine, StateIdle> {
    void start() { process_event(EventStart()); }
    void stop() { process_event(EventStop()); }

    std::string serialize_state() {
        std::ostringstream oss;
        boost::archive::text_oarchive oa(oss);
        oa << *this;
        return oss.str();
    }

    void deserialize_state(const std::string& serialized_state) {
        std::istringstream iss(serialized_state);
        boost::archive::text_iarchive ia(iss);
        ia >> *this;
    }
};

// Состояние: ожидание
struct StateIdle : sc::simple_state<StateIdle, MyStateMachine> {
    typedef sc::transition<EventStart, StateRunning> reactions;
};

// Состояние: работа
struct StateRunning : sc::simple_state<StateRunning, MyStateMachine> {
    typedef sc::transition<EventStop, StateFinished> reactions;
};

// Состояние: завершено
struct StateFinished : sc::simple_state<StateFinished, MyStateMachine> {};

int main() {
    // Создание экземпляра конечного автомата
    MyStateMachine sm;

    // Пример использования
    std::cout << typeid(sm.current_state()).name() << std::endl;  // Вывод: N8MyStateMachine9StateIdleE

    sm.start();
    std::cout << typeid(sm.current_state()).name() << std::endl;  // Вывод: N8MyStateMachine12StateRunningE

    std::string serialized_state = sm.serialize_state();

    // Можно сохранить serialized_state в файл или передать по сети

    // Десериализация состояния
    MyStateMachine sm2;
    sm2.deserialize_state(serialized_state);
    std::cout << typeid(sm2.current_state()).name() << std::endl;  // Вывод: N8MyStateMachine12StateRunningE

    sm2.stop();
    std::cout << typeid(sm2.current_state()).name() << std::endl;  // Вывод: N8MyStateMachine13StateFinishedE

    return 0;
}
"
ZG86HpBz,motyle,314ma,YAML,Monday 3rd of July 2023 01:54:49 PM CDT,"motyle_oswietlenie_zmierzch_jesien_zima:
  alias: ""Motyle - Oświetlenie - Zmierzch (Jesień - Zima)""
  sequence:
  - if:
    - condition: time
      after: ""17:30:00""
      before: ""19:10:00""
    - condition: template
      value_template: ""{{ now().month in [1, 2, 3, 4, 9, 10, 11, 12] }}""
    then:
    - service: light.turn_on
      data:
        transition: 5
        brightness_pct: ""{{ min(100, max(1149 - (now().hour*60 + now().minute), 0)) }}""
        kelvin: 6500
      target:
        entity_id: light.motyle_oswietlenie
"
Kjf1z1bi,lesson4_321,Petro_zzz,C++,Monday 3rd of July 2023 01:40:11 PM CDT,"#include <iostream>

using namespace std;
int val3 = 0;

void task_sum() {

	int val1 = 0;
	int val2 = 0;

	setlocale(LC_ALL, ""ru"");

	cout << ""Введите первое число: "";
	cin >> val1;
	cout << ""Введите второе число: "";
	cin >> val2;

	cout << val1 << "" + "" << val2
		<< "" = "" << val1 + val2 << endl;
}

void task_circlearea() {
	double r = 1.0e-2; // metr	
	const double pi = 3.1415926;
	
	int целое = 15;

	//pi = 1;
	cout << ""Circle area is ""
		<< pi * r * r << endl;
	cout << целое << endl;
}


void showLeapYear() {
	const int shift = 3;
	const int numDayYaer = 365;
	int year;// = 2004;

	cout << ""Enter year: "";
	cin >> year;

	cout << ""Num days per year: "";
	cout << ((year + shift) % 4) / 3 + numDayYaer
		 << endl;

	/*
	cout << 1 << ((1 + shift) % 4) / 3 << endl;
	cout << 2 << ((2 + shift) % 4) / 3 << endl;
	cout << 3 << ((3 + shift) % 4) / 3 << endl;
	cout << 4 << ((4 + shift) % 4) / 3 << endl;
	cout << 5 << ((5 + shift) % 4) / 3 << endl;
	cout << 6 << ((6 + shift) % 4) / 3 << endl;
	cout << 7 << ((7 + shift) % 4) / 3 << endl;
	cout << 8 << ((8 + shift) % 4) / 3 << endl;
	*/
}

int main() {
	//task_sum();
	//task_circlearea();
	showLeapYear();
	return 0;
}"
5wLe3csn,Radio Jammer,Lil_Peep,Lua,Monday 3rd of July 2023 01:39:08 PM CDT,"positive = {}		
function onTick()
	on = input.getBool(1)
	reset = input.getBool(2)
	t = input.getBool(3)
	NI = input.getBool(4)
	HL = input.getBool(5)
	fl = input.getBool(6)
	isPressed = input.getBool(7)
	Jamin = input.getBool(8)
	strength1 = input.getNumber(1)
	strength2 = input.getNumber(2)
	f1 = input.getNumber(3)
	f2 = input.getNumber(4)
	ti = input.getNumber(5)
	snif = input.getNumber(6)
	inputX = input.getNumber(7)
	inputY = input.getNumber(8)
	scroll = input.getNumber(9)
	
	
	ScrollP = isPressed and isPointInRectangle(inputX, inputY, 18, 26, 7, 6)
	ResetP = isPressed and isPointInRectangle(inputX, inputY, 27, 26, 7, 6)
	JamP = isPressed and isPointInRectangle(inputX, inputY, 36, 26, 7, 6)
	
	output.setBool(1,ScrollP )
	output.setBool(2, ResetP)
	output.setBool(3, JamP)
function onTick()
reset = input.getBool(1)
scroll = input.getNumber(1)
    composite = {}
    composite.bools={}
    composite.nums={}
    for i = 2, 32 do
        if input.getNumber(i)~=0 then table.insert(composite.nums,string.format(""%02d"",i)) end
    end

if reset == true then
	composite.nums = {}
		else
			end
end

function onDraw()
    screen.setColor(10,18,5,150)
    screen.drawRectF(0,7,100,100)
    screen.setColor(0,0,0)
    screen.drawTextBox(2,8-scroll,32,32,table.concat(composite.nums, ','))
	screen.setColor(5,9,2)
	screen.drawRectF(0,0,64,7)
	screen.setColor(0,0,0)
    screen.drawTextBox(0,1,32,6,""Number"",0,0)

end
	
	f1 = f1-2
	f2 = f2+2

	isInside=false
	isNotInside=true
	for i=1,#positive do
  	 isInside = isInside or f1 == positive[i]
  		 isNotInside = isNotInside and f1 ~= positive[i]
				end
				
	isInside2=false
	isNotInside2=true
		for i=1,#positive do
   		isInside2 = isInside2 or f2 == positive[i]
   			isNotInside2 = isNotInside2 and f2 ~= positive[i]
					end		
	
	if on == true and reset == false then
		if strength1 > 0.01 and reset == false and isInside == false then
			table.insert(positive,math.floor(f1+0))
		end
		
		if strength2 > 0.01 and f2 ~= f1 and reset == false and isInside2 == false then
			table.insert(positive,math.floor(f2+0))
		end
	else
		positive = {}
	end

end

function isPointInRectangle(x, y, rectX, rectY, rectW, rectH)
	return x > rectX and y > rectY and x < rectX+rectW and y < rectY+rectH
end


function onDraw()
	screen.setColor(10,18,5,150)
	screen.drawRectF(0,0,64,64)
	screen.setColor(0,0,0)

		if on == true and NI == false and HL == false then
	screen.drawTextBox(0,8-scroll,64,27,table.concat(positive, ','))
		end
				

screen.setColor(10,18,5,150)
screen.drawRectF(0,25,64,10)

if ScrollP == true then
	screen.setColor(50,30,15)
		else
			screen.setColor(0,0,0)
		end
screen.drawRect(18,26,7,6)
screen.drawText(20,27,""S"")

if ResetP == true then
	screen.setColor(50,30,15)
		else
			screen.setColor(0,0,0)
		end

screen.drawRect(27,26,7,6)
screen.drawText(29,27,""R"")

if Jamin == true then
	screen.setColor(50,30,15)
		else
			screen.setColor(0,0,0)
		end

screen.drawRect(36,26,7,6)
screen.drawText(38,27,""J"")

	screen.setColor(5,9,2)
	screen.drawRectF(0,0,64,7)
	screen.setColor(0,0,0)
    screen.drawTextBox(0,1,64,6,""Freq Scan"",0,0)


	if NI == true and fl == true then
		screen.drawTextBox(0,0,64,32,(""No Input""),0,0)
			else
		end
		function onTick()
scroll = input.getNumber(1)
reset = input.getNumber(2)

    local bool1 = {}
    for i = 1, 32 do
        if input.getBool(i) then bool1[i]=true end
    end
    printable={}
    for k,v in pairs(bool1) do
        if v then table.insert(printable, string.format(""%02d"", k)) end
    end
    
    if reset == 1 then
		printable = {}
			end
end

function onDraw()
    screen.setColor(10,18,5,150)
    screen.drawRectF(0,7,100,100)
    screen.setColor(0,0,0)
    screen.drawTextBox(2,8-scroll,32,32,table.concat(printable, ','))
	screen.setColor(5,9,2)
	screen.drawRectF(0,0,64,7)
	screen.setColor(0,0,0)
    screen.drawTextBox(0,1,32,6,""Bool"",0,0)
end
	if HL == true and fl == true then
		screen.drawTextBox(0,0,64,32,(""High < Low""),0,0)
			else
		end

	if on == true and NI == false and HL == false and ti >= 0  then
		screen.drawRect(2,29,1,1)
			else
			end	
	
	if on == true and NI == false and HL == false and ti > 0 then
		screen.drawRect(5,29,1,1)
			else
			end		
	
	if on == true and NI == false and HL == false and ti > 1 then
		screen.drawRect(8,29,1,1)
			else
	end					

end

-- Tick function that will be executed every logic tick
function onTick()
	l = input.getNumber(1)
	h = input.getNumber(2)
	
	if l <= 0 then
		output.setNumber(1,l+(-10))
			end
	if l > 0 then
		output.setNumber(1,l+10)
			end
			
	if h <= 0 then
		output.setNumber(2,h+(-10))
			end
	if h > 0 then
		output.setNumber(2,h+10)
			end		
			
			
	if h < l then
		output.setBool(1,true)
			else
				output.setBool(1,false)
			end		
end
function onTick()
	inputX = input.getNumber(3)
	inputY = input.getNumber(4)
	isPressed = input.getBool(1)


	ScrollP = isPressed and isPointInRectangle(inputX, inputY, 5, 26, 7, 6)
	ResetP = isPressed and isPointInRectangle(inputX, inputY, 18, 26, 7, 6)
	SwitchP = isPressed and isPointInRectangle(inputX, inputY, 0, 0, 64, 7)
	
	output.setBool(1,ScrollP )
	output.setBool(2, ResetP)
	output.setBool(3, SwitchP)
end


function isPointInRectangle(x, y, rectX, rectY, rectW, rectH)
	return x > rectX and y > rectY and x < rectX+rectW and y < rectY+rectH
		end
	
	
function onDraw()
screen.setColor(10,18,5,150)
screen.drawRectF(0,25,32,10)
screen.setColor(0,0,0,0)
screen.drawRectF(0,0,64,7)

screen.setColor(0,0,0)

if ScrollP == true then
	screen.setColor(50,30,15)
		else
			screen.setColor(0,0,0)
		end

screen.drawRect(5,26,7,6)
screen.drawText(7,27,""S"")

if ResetP == true then
	screen.setColor(50,30,15)
		else
			screen.setColor(0,0,0)
		end

screen.drawRect(18,26,7,6)
screen.drawText(20,27,""R"")
end-- Tick function that will be executed every logic tick
function onTick()
	on = input.getBool(1)
	blink = input.getBool(2)
	
	
	
	x = math.random(-1,1)
	
	if on == true then
	
	for i=1,32 do
	output.setNumber(i,1)
	output.setBool(i,blink)
		end
			else
				output.setNumber(i,-1)
				output.setBool(i,false)
					end
		
	
					
		
		
	
	
end

-- Draw function that will be executed when this script renders to a screen
function onDraw()
	w = screen.getWidth()				  -- Get the screen's width and height
	h = screen.getHeight()					
	screen.setColor(0, 255, 0)			 -- Set draw color to green
	screen.drawCircleF(w / 2, h / 2, 30)   -- Draw a 30px radius circle in the center of the screen
end"
qympRTJY,Untitled,developer,PHP,Monday 3rd of July 2023 01:19:28 PM CDT,"$headers = [];
if (function_exists(""getallheaders"")) {
    $headers = getallheaders();
} else {
    function getallheaders()
    {
        $headers = [];
        foreach ($_SERVER as $name => $value) {
            if (substr($name, 0, 5) == ""HTTP_"") {
                $headers[
                    str_replace(
                        "" "",
                        ""-"",
                        ucwords(
                            strtolower(str_replace(""_"", "" "", substr($name, 5)))
                        )
                    )
                ] = $value;
            }
        }
        return $headers;
    }
    $headers = getallheaders();
}"
NuRakEYK,init,Zlogdan,Python,Monday 3rd of July 2023 01:17:37 PM CDT,"def test_init(*data):
    length = len(data)
    if length == 0:
        x = 0
        y = 0
    elif length == 1:
        tupleXY = data[0]
        x = tupleXY[0]
        y = tupleXY[1]
    elif length == 2:
        x = data[0]
        y = data[1]
    print(x, y)

test_init(1, 2)
test_init((1, 2))
test_init()
"
Fk6brC4w,tictactoe(if-statement problem),mrgoatman,Python,Monday 3rd of July 2023 01:07:48 PM CDT,"#!/usr/bin/env python
import random

#board = [['x','o','x'], ['x','x','x'], ['o','o','x']]
#user = 'x'
#bot = 'o'

class win_checker:
   def __init__(self, list_2d, player):
      self.list_2d = list_2d
      self.player = player
      
   #Row checking
   def row_check(self):
      for i in range(len(self.list_2d)):
         row = 0
         
         for k in range(len(self.list_2d[i])):
            if self.list_2d[i][k] == self.player:
               row += 1
               
            elif self.list_2d[i][k] != self.player:
               row = 0
               break
               
         if row == 3:
            return 1
            
         elif row == 0:
            continue
            
         elif row != 3 and row != 0:
            print('row = ', row)
            return 'ERROR'
            
      if row == 0:
         return 0
         
      elif row == 3:
         return 'Lines 25-26 skipped?'
         
      elif row != 3 and row != 0:
         return 'Huston, we have a problem!'
         
   #Column checking
   def column_check(self):
      for i in range(len(self.list_2d)):
         column = 0
         
         for k in range(len(self.list_2d[i])):
            if self.list_2d[k][i] == self.player:
               column += 1
               
            elif self.list_2d[k][i] != self.player:
               column = 0
               break
               
         if column == 3:
            return 1
            
         elif column == 0:
            continue
            
         elif column != 3 and column != 0:
            print('column = ', column)
            return 'ERROR'
            
      if column == 0:
         return 0
         
      elif column == 3:
         return 'Lines 57-58 skipped?'
         
      elif column != 3 and column != 0:
         return 'Huston, we have a problem!'
         
#Diagonal checking
   def diagonal_check(self):
      if self.list_2d[0][0] == self.player and self.list_2d[1][1] == self.player and self.list_2d[2][2] == self.player:
         return 1
         
      elif self.list_2d[2][2] == self.player and self.list_2d[1][1] == self.player and self.list_2d[0][0] == self.player:
         return 1
         
      else:
         return 0
         
#Checking for everything
   def check_all(self):
      if self.row_check() == 1 or self.column_check() == 1 or self.diagonal_check() == 1:
         return 1
         
      else:
         return 0
      

#uwc = win_checker(board, user)

#print(uwc.row_check())
#print(uwc.column_check())
#print(uwc.diagonal_check())
#print(uwc.check_all())

class game_flow:
   def __init__(self):
      self.board = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
      self.user = 'Undetermined'
      self.bot = 'Undetermined'
   
   #Resets everything in the game
   def reset(self):
      self.board = [['1', '2', '3'], ['4', '5', '6'], ['7', '8', '9']]
      
      valid_input = 0
      
      while valid_input == 0:
         self.user = input('Will you be X or O?: ')
         
         if self.user != 'x' and self.user != 'X' and self.user != 'o' and self.user != 'O':
            print('Invalid input')
            continue
            
         elif self.user == 'x' or self.user == 'X':
            self.user = 'X'
            self.bot = 'O'
            valid_input = 1
            
         elif self.user == 'o' or self.user == 'O':
            self.user = 'O'
            self.bot = 'X'
            valid_input = 1
      
      
   def print_board(self):
      board_text = f''' {self.board[0][0]} : {self.board[0][1]} : {self.board[0][2]}
...........
 {self.board[1][0]} : {self.board[1][1]} : {self.board[1][2]}
...........
 {self.board[2][0]} : {self.board[2][1]} : {self.board[2][2]}'''
      
      print(board_text)
      
   def bot_move(self):
      valid_move = 0
      
      while valid_move == 0:
         move = random.randint(1,9)
         
         print(f'bot move: {move}')
         
         for i in range(len(self.board)):
            
            print(f'self.board[i] = {self.board[i]}')
            
            for k in range(len(self.board[i])):
               
               print(f'self.board[{i}][{k}] = {self.board[i][k]}')
               print(f'self.board[{i}][{k}] == move: {self.board[i][k] == move}')
               
               if self.board[i][k] == move:
                  print('self.board[i][k] == move')
                  
                  self.board[i][k] = self.bot
                  valid_move = 1
      
   def user_move(self):
      valid_move = 0
      
      while valid_move == 0:
         move = input('Enter your move: ')
         
         if move != 'X' and move != 'O':
            for i in range(len(self.board)):
               for k in range(len(self.board[i])):
                  if self.board[i][k] == move:
                     self.board[i][k] = self.user
                     valid_move = 1
                     
         if valid_move == 0:
            print('Invalid input')
            
   def play(self):
      play = 1
      
      while play == 1:
         winner = 0
         first_move = random.randint(0,1)
         
         self.reset()
         self.print_board()
         
         if first_move == 1:
            while winner == 0:
               
               
               
               self.user_move()
               self.print_board()
               
               user_win = win_checker(self.board, self.user)
               
               if user_win.check_all() == 1:
                  print('WINNER!')
                  print('You win!')
                  winner = 1
                  break
               
               self.bot_move()
               self.print_board()
               
               bot_win = win_checker(self.board, self.bot)
               
               if bot_win.check_all() == 1:
                  print('LOOSER!')
                  print('Bot wins!')
                  winner = 1
                  break
               
         elif first_move == 0:
            while winner == 0:
               
               self.bot_move()
               self.print_board()
               
               bot_win = win_checker(self.board, self.bot)
               
               if bot_win.check_all() == 1:
                  print('LOOSER!')
                  print('Bot wins!')
                  winner = 1
                  break
               
               self.user_move()
               self.print_board()
               
               user_win = win_checker(self.board, self.user)
               
               if user_win.check_all() == 1:
                  print('WINNER!')
                  print('You win!')
                  winner = 1
                  break
            
         valid_input2 = 0
         
         while valid_input2 == 0:
            keep_playing = input('Play again?')
            
            if keep_playing == 'Y' or 'y':
               valid_input2 = 1
               
            elif keep_playing == 'N' or 'n':
               valid_input2 = 1
               print('Thanks for playing!')
               play = 0
               
            else:
               print('Invalid input')

game = game_flow()

#game.reset()
#game.print_board()

game.play()

"
extgDhNs,Character Shuffling,tsounakis,C,Monday 3rd of July 2023 01:02:55 PM CDT,"#include <stdio.h>
#include <stdlib.h>
#include <time.h>

#define MAP_SIZE 26

void createRandomMap(char map[MAP_SIZE]) {
    int i;
    for (i = 0; i < MAP_SIZE; i++) {
        map[i] = 'A' + i;
    }

    // Fisher - Yates algorithm
    for (i = MAP_SIZE - 1; i > 0; i--) {
        int j = rand() % (i + 1);
        char temp = map[i];
        map[i] = map[j];
        map[j] = temp;
    }
}

void applyMapping(char *j, int count, char charMap[MAP_SIZE], int reverse) {
    int i;
    for (i = 0; i < count; i++) {
        if (j[i] >= 'A' && j[i] <= 'Z') {
            if (reverse) {
                char mappedChar = 'A';
                while (charMap[mappedChar - 'A'] != j[i]) {
                    mappedChar++;
                }
                j[i] = mappedChar;
            } else {
                j[i] = charMap[j[i] - 'A'];
            }
        }
    }
}

int main() {
    srand(time(NULL));

    char charMap[MAP_SIZE];
    createRandomMap(charMap);

    char *j = malloc(sizeof(char));
    char input;
    int count;
    int reverseMapping = 0;

    while (1) {
        printf(""Enter capital letters (terminate with '$', or 'q' to quit): "");

        count = 0;
        while (1) {
            scanf("" %c"", &input);
            if (input == '$') {
                break;
            } else if (input == 'q') {
                free(j);
                return 0;
            }

            if (input >= 'A' && input <= 'Z') {
                j = realloc(j, (count + 1) * sizeof(char));
                j[count] = input;
                count++;
            }
        }

        printf(""Original characters:\n"");
        int i;
        for (i = 0; i < count; i++) {
            printf(""%c"", j[i]);
        }
        printf(""\n"");

        applyMapping(j, count, charMap, reverseMapping);

        printf(""Mapped characters:\n"");
        for (i = 0; i < count; i++) {
            printf(""%c"", j[i]);
        }
        printf(""\n\n"");

        reverseMapping = !reverseMapping;
    }

    free(j);

    return 0;
}
"
rncvu2Mg,languages.py,Rousk,Python,Monday 3rd of July 2023 12:34:45 PM CDT,"import gettext
import logging
import os

from qweborf import get_workbench

logger = logging.getLogger(__name__)

BASE_LANGUAGE_CODE = ""en_US""
BASE_LANGUAGE_NAME = ""English""

LANGUAGES_DICT = {
    ""cs_CZ"": ""Čeština [BETA]"",
    ""de_DE"": ""Deutsch"",
    ""et_EE"": ""Eesti"",
    BASE_LANGUAGE_CODE: BASE_LANGUAGE_NAME,
    ""es_ES"": ""Español"",
    ""fr_FR"": ""Français"",
    ""it_IT"": ""Italiano"",
    ""lt_LT"": ""Lietuvių"",
    ""hu_HU"": ""Magyar [BETA]"",
    ""nb_NO"": ""Norsk (Bokmål)"",
    ""nn_NO"": ""Norsk (Nynorsk)"",
    ""nl_NL"": ""Nederlands"",
    ""pl_PL"": ""Polski"",
    ""pt_PT"": ""Português (PT)"",
    ""pt_BR"": ""Português (BR)"",
    ""ro_RO"": ""Român"",
    ""ru_RU"": ""Русский"",
    ""sk_SK"": ""Slovenčina [BETA]"",
    ""fi_FI"": ""Suomi [BETA]"",
    ""sv_SE"": ""Svenska [BETA]"",
    ""sq_AL"": ""Shqip [ALPHA]"",
    ""tr_TR"": ""Türkçe [BETA]"",
    ""uk_UA"": ""Українська"",
    ""zh_TW"": ""繁體中文-TW"",
    ""zh_CN"": ""简体中文 "",
    ""ja_JP"": ""日本語  [ALPHA]"",
    ""hy_AM"": ""Հայերէն [BETA]"",
    ""fa_IR"": ""[BETA] فارسی"",
    ""el_GR"": ""Ελληνικά"",
    ""ko_KR"": ""한국어 [韓國語] [ALPHA]"",
}

# how many spaces to add to button caption in order to make whole text visible
BUTTON_PADDING_SIZES = {""zh_TW"": 4, ""zh_CN"": 4, ""ja_JP"": 4}

_translation = gettext.NullTranslations()


def get_button_padding():
    code = get_workbench().get_option(""general.language"")
    if code in BUTTON_PADDING_SIZES:
        return BUTTON_PADDING_SIZES[code] * "" ""
    else:
        return """"


def get_language_code_by_name(name):
    for code in LANGUAGES_DICT:
        if LANGUAGES_DICT[code] == name:
            return code

    raise RuntimeError(""Unknown language name '%s'"" % name)


def tr(message: str) -> str:
    return _translation.gettext(message)


def set_language(language_code: str) -> None:
    global _translation
    try:
        path = os.path.join(os.path.dirname(__file__), ""locale"")
        _translation = gettext.translation(""qweborf"", path, [language_code])
    except Exception as e:
        logger.exception(""Could not set language to '%s"", language_code, exc_info=e)
        _translation = gettext.NullTranslations()
"
FZ02AFYm,Nigerian scammers [3-7-2/2023],bombaires,HTML,Monday 3rd of July 2023 12:33:18 PM CDT,"<a href=""mailto:kevinnknight1@hotmail.com"">kevinnknight1@hotmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1@googlemail.com"">keystoneb.jeffwilkinson1@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+4142@googlemail.com"">keystoneb.jeffwilkinson1+4142@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+19529@googlemail.com"">keystoneb.jeffwilkinson1+19529@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+16084@googlemail.com"">keystoneb.jeffwilkinson1+16084@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+30672@googlemail.com"">keystoneb.jeffwilkinson1+30672@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+19076@googlemail.com"">keystoneb.jeffwilkinson1+19076@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+21427@googlemail.com"">keystoneb.jeffwilkinson1+21427@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+15085@googlemail.com"">keystoneb.jeffwilkinson1+15085@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+28518@googlemail.com"">keystoneb.jeffwilkinson1+28518@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+28915@googlemail.com"">keystoneb.jeffwilkinson1+28915@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+4503@googlemail.com"">keystoneb.jeffwilkinson1+4503@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+30084@googlemail.com"">keystoneb.jeffwilkinson1+30084@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+9181@googlemail.com"">keystoneb.jeffwilkinson1+9181@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+27883@googlemail.com"">keystoneb.jeffwilkinson1+27883@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+27222@googlemail.com"">keystoneb.jeffwilkinson1+27222@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+6080@googlemail.com"">keystoneb.jeffwilkinson1+6080@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+28048@googlemail.com"">keystoneb.jeffwilkinson1+28048@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+26662@googlemail.com"">keystoneb.jeffwilkinson1+26662@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+28907@googlemail.com"">keystoneb.jeffwilkinson1+28907@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+30653@googlemail.com"">keystoneb.jeffwilkinson1+30653@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+20106@googlemail.com"">keystoneb.jeffwilkinson1+20106@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+31895@googlemail.com"">keystoneb.jeffwilkinson1+31895@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+27558@googlemail.com"">keystoneb.jeffwilkinson1+27558@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+8113@googlemail.com"">keystoneb.jeffwilkinson1+8113@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+18868@googlemail.com"">keystoneb.jeffwilkinson1+18868@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+28848@googlemail.com"">keystoneb.jeffwilkinson1+28848@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+6118@googlemail.com"">keystoneb.jeffwilkinson1+6118@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+31211@googlemail.com"">keystoneb.jeffwilkinson1+31211@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+11592@googlemail.com"">keystoneb.jeffwilkinson1+11592@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+30776@googlemail.com"">keystoneb.jeffwilkinson1+30776@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+20421@googlemail.com"">keystoneb.jeffwilkinson1+20421@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+21647@googlemail.com"">keystoneb.jeffwilkinson1+21647@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+10090@googlemail.com"">keystoneb.jeffwilkinson1+10090@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+12177@googlemail.com"">keystoneb.jeffwilkinson1+12177@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+5992@googlemail.com"">keystoneb.jeffwilkinson1+5992@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+14719@googlemail.com"">keystoneb.jeffwilkinson1+14719@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+14274@googlemail.com"">keystoneb.jeffwilkinson1+14274@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+3831@googlemail.com"">keystoneb.jeffwilkinson1+3831@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+32744@googlemail.com"">keystoneb.jeffwilkinson1+32744@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+14954@googlemail.com"">keystoneb.jeffwilkinson1+14954@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+20093@googlemail.com"">keystoneb.jeffwilkinson1+20093@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+23169@googlemail.com"">keystoneb.jeffwilkinson1+23169@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+5272@googlemail.com"">keystoneb.jeffwilkinson1+5272@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+20628@googlemail.com"">keystoneb.jeffwilkinson1+20628@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+10515@googlemail.com"">keystoneb.jeffwilkinson1+10515@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+2140@googlemail.com"">keystoneb.jeffwilkinson1+2140@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+20365@googlemail.com"">keystoneb.jeffwilkinson1+20365@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+10616@googlemail.com"">keystoneb.jeffwilkinson1+10616@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+16530@googlemail.com"">keystoneb.jeffwilkinson1+16530@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+8832@googlemail.com"">keystoneb.jeffwilkinson1+8832@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+22369@googlemail.com"">keystoneb.jeffwilkinson1+22369@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+26725@googlemail.com"">keystoneb.jeffwilkinson1+26725@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+16461@googlemail.com"">keystoneb.jeffwilkinson1+16461@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+6775@googlemail.com"">keystoneb.jeffwilkinson1+6775@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+10158@googlemail.com"">keystoneb.jeffwilkinson1+10158@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+19203@googlemail.com"">keystoneb.jeffwilkinson1+19203@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+783@googlemail.com"">keystoneb.jeffwilkinson1+783@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+8226@googlemail.com"">keystoneb.jeffwilkinson1+8226@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+24456@googlemail.com"">keystoneb.jeffwilkinson1+24456@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+8531@googlemail.com"">keystoneb.jeffwilkinson1+8531@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+5280@googlemail.com"">keystoneb.jeffwilkinson1+5280@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+25964@googlemail.com"">keystoneb.jeffwilkinson1+25964@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+18168@googlemail.com"">keystoneb.jeffwilkinson1+18168@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+4444@googlemail.com"">keystoneb.jeffwilkinson1+4444@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+17905@googlemail.com"">keystoneb.jeffwilkinson1+17905@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+16635@googlemail.com"">keystoneb.jeffwilkinson1+16635@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+9558@googlemail.com"">keystoneb.jeffwilkinson1+9558@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+29494@googlemail.com"">keystoneb.jeffwilkinson1+29494@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+29348@googlemail.com"">keystoneb.jeffwilkinson1+29348@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+12161@googlemail.com"">keystoneb.jeffwilkinson1+12161@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+15230@googlemail.com"">keystoneb.jeffwilkinson1+15230@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+28515@googlemail.com"">keystoneb.jeffwilkinson1+28515@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+28961@googlemail.com"">keystoneb.jeffwilkinson1+28961@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+11627@googlemail.com"">keystoneb.jeffwilkinson1+11627@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+17685@googlemail.com"">keystoneb.jeffwilkinson1+17685@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+8403@googlemail.com"">keystoneb.jeffwilkinson1+8403@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+11212@googlemail.com"">keystoneb.jeffwilkinson1+11212@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+25886@googlemail.com"">keystoneb.jeffwilkinson1+25886@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+12124@googlemail.com"">keystoneb.jeffwilkinson1+12124@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+15280@googlemail.com"">keystoneb.jeffwilkinson1+15280@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+4574@googlemail.com"">keystoneb.jeffwilkinson1+4574@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+21664@googlemail.com"">keystoneb.jeffwilkinson1+21664@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+29234@googlemail.com"">keystoneb.jeffwilkinson1+29234@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+23700@googlemail.com"">keystoneb.jeffwilkinson1+23700@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+2951@googlemail.com"">keystoneb.jeffwilkinson1+2951@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+19561@googlemail.com"">keystoneb.jeffwilkinson1+19561@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+20092@googlemail.com"">keystoneb.jeffwilkinson1+20092@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+9926@googlemail.com"">keystoneb.jeffwilkinson1+9926@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+20192@googlemail.com"">keystoneb.jeffwilkinson1+20192@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+27978@googlemail.com"">keystoneb.jeffwilkinson1+27978@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+19012@googlemail.com"">keystoneb.jeffwilkinson1+19012@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+17278@googlemail.com"">keystoneb.jeffwilkinson1+17278@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+20892@googlemail.com"">keystoneb.jeffwilkinson1+20892@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+30291@googlemail.com"">keystoneb.jeffwilkinson1+30291@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+25525@googlemail.com"">keystoneb.jeffwilkinson1+25525@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+23568@googlemail.com"">keystoneb.jeffwilkinson1+23568@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+23252@googlemail.com"">keystoneb.jeffwilkinson1+23252@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+28069@googlemail.com"">keystoneb.jeffwilkinson1+28069@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+22698@googlemail.com"">keystoneb.jeffwilkinson1+22698@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+4668@googlemail.com"">keystoneb.jeffwilkinson1+4668@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+2350@googlemail.com"">keystoneb.jeffwilkinson1+2350@googlemail.com</a>
<a href=""mailto:agentvictorokle@googlemail.com"">agentvictorokle@googlemail.com</a>
<a href=""mailto:agentvictorokle+29700@googlemail.com"">agentvictorokle+29700@googlemail.com</a>
<a href=""mailto:agentvictorokle+19015@googlemail.com"">agentvictorokle+19015@googlemail.com</a>
<a href=""mailto:agentvictorokle+494@googlemail.com"">agentvictorokle+494@googlemail.com</a>
<a href=""mailto:agentvictorokle+3295@googlemail.com"">agentvictorokle+3295@googlemail.com</a>
<a href=""mailto:agentvictorokle+12609@googlemail.com"">agentvictorokle+12609@googlemail.com</a>
<a href=""mailto:agentvictorokle+22041@googlemail.com"">agentvictorokle+22041@googlemail.com</a>
<a href=""mailto:agentvictorokle+14904@googlemail.com"">agentvictorokle+14904@googlemail.com</a>
<a href=""mailto:agentvictorokle+26587@googlemail.com"">agentvictorokle+26587@googlemail.com</a>
<a href=""mailto:agentvictorokle+9849@googlemail.com"">agentvictorokle+9849@googlemail.com</a>
<a href=""mailto:agentvictorokle+30586@googlemail.com"">agentvictorokle+30586@googlemail.com</a>
<a href=""mailto:agentvictorokle+16493@googlemail.com"">agentvictorokle+16493@googlemail.com</a>
<a href=""mailto:agentvictorokle+31486@googlemail.com"">agentvictorokle+31486@googlemail.com</a>
<a href=""mailto:agentvictorokle+10406@googlemail.com"">agentvictorokle+10406@googlemail.com</a>
<a href=""mailto:agentvictorokle+2724@googlemail.com"">agentvictorokle+2724@googlemail.com</a>
<a href=""mailto:agentvictorokle+1570@googlemail.com"">agentvictorokle+1570@googlemail.com</a>
<a href=""mailto:agentvictorokle+26001@googlemail.com"">agentvictorokle+26001@googlemail.com</a>
<a href=""mailto:agentvictorokle+8549@googlemail.com"">agentvictorokle+8549@googlemail.com</a>
<a href=""mailto:agentvictorokle+20024@googlemail.com"">agentvictorokle+20024@googlemail.com</a>
<a href=""mailto:agentvictorokle+19755@googlemail.com"">agentvictorokle+19755@googlemail.com</a>
<a href=""mailto:agentvictorokle+23426@googlemail.com"">agentvictorokle+23426@googlemail.com</a>
<a href=""mailto:agentvictorokle+32431@googlemail.com"">agentvictorokle+32431@googlemail.com</a>
<a href=""mailto:agentvictorokle+14707@googlemail.com"">agentvictorokle+14707@googlemail.com</a>
<a href=""mailto:agentvictorokle+5522@googlemail.com"">agentvictorokle+5522@googlemail.com</a>
<a href=""mailto:agentvictorokle+12811@googlemail.com"">agentvictorokle+12811@googlemail.com</a>
<a href=""mailto:agentvictorokle+2620@googlemail.com"">agentvictorokle+2620@googlemail.com</a>
<a href=""mailto:agentvictorokle+15157@googlemail.com"">agentvictorokle+15157@googlemail.com</a>
<a href=""mailto:agentvictorokle+17759@googlemail.com"">agentvictorokle+17759@googlemail.com</a>
<a href=""mailto:agentvictorokle+21389@googlemail.com"">agentvictorokle+21389@googlemail.com</a>
<a href=""mailto:agentvictorokle+10134@googlemail.com"">agentvictorokle+10134@googlemail.com</a>
<a href=""mailto:agentvictorokle+4939@googlemail.com"">agentvictorokle+4939@googlemail.com</a>
<a href=""mailto:agentvictorokle+19401@googlemail.com"">agentvictorokle+19401@googlemail.com</a>
<a href=""mailto:agentvictorokle+7501@googlemail.com"">agentvictorokle+7501@googlemail.com</a>
<a href=""mailto:agentvictorokle+26480@googlemail.com"">agentvictorokle+26480@googlemail.com</a>
<a href=""mailto:agentvictorokle+7190@googlemail.com"">agentvictorokle+7190@googlemail.com</a>
<a href=""mailto:agentvictorokle+186@googlemail.com"">agentvictorokle+186@googlemail.com</a>
<a href=""mailto:agentvictorokle+4304@googlemail.com"">agentvictorokle+4304@googlemail.com</a>
<a href=""mailto:agentvictorokle+23468@googlemail.com"">agentvictorokle+23468@googlemail.com</a>
<a href=""mailto:agentvictorokle+14265@googlemail.com"">agentvictorokle+14265@googlemail.com</a>
<a href=""mailto:agentvictorokle+2671@googlemail.com"">agentvictorokle+2671@googlemail.com</a>
<a href=""mailto:agentvictorokle+25682@googlemail.com"">agentvictorokle+25682@googlemail.com</a>
<a href=""mailto:agentvictorokle+26080@googlemail.com"">agentvictorokle+26080@googlemail.com</a>
<a href=""mailto:agentvictorokle+25151@googlemail.com"">agentvictorokle+25151@googlemail.com</a>
<a href=""mailto:agentvictorokle+23991@googlemail.com"">agentvictorokle+23991@googlemail.com</a>
<a href=""mailto:agentvictorokle+3353@googlemail.com"">agentvictorokle+3353@googlemail.com</a>
<a href=""mailto:agentvictorokle+25150@googlemail.com"">agentvictorokle+25150@googlemail.com</a>
<a href=""mailto:agentvictorokle+9847@googlemail.com"">agentvictorokle+9847@googlemail.com</a>
<a href=""mailto:agentvictorokle+13680@googlemail.com"">agentvictorokle+13680@googlemail.com</a>
<a href=""mailto:agentvictorokle+8536@googlemail.com"">agentvictorokle+8536@googlemail.com</a>
<a href=""mailto:agentvictorokle+16746@googlemail.com"">agentvictorokle+16746@googlemail.com</a>
<a href=""mailto:agentvictorokle+32685@googlemail.com"">agentvictorokle+32685@googlemail.com</a>
<a href=""mailto:agentvictorokle+451@googlemail.com"">agentvictorokle+451@googlemail.com</a>
<a href=""mailto:agentvictorokle+9240@googlemail.com"">agentvictorokle+9240@googlemail.com</a>
<a href=""mailto:agentvictorokle+24515@googlemail.com"">agentvictorokle+24515@googlemail.com</a>
<a href=""mailto:agentvictorokle+4334@googlemail.com"">agentvictorokle+4334@googlemail.com</a>
<a href=""mailto:agentvictorokle+13985@googlemail.com"">agentvictorokle+13985@googlemail.com</a>
<a href=""mailto:agentvictorokle+3165@googlemail.com"">agentvictorokle+3165@googlemail.com</a>
<a href=""mailto:agentvictorokle+19473@googlemail.com"">agentvictorokle+19473@googlemail.com</a>
<a href=""mailto:agentvictorokle+23321@googlemail.com"">agentvictorokle+23321@googlemail.com</a>
<a href=""mailto:agentvictorokle+24106@googlemail.com"">agentvictorokle+24106@googlemail.com</a>
<a href=""mailto:agentvictorokle+21921@googlemail.com"">agentvictorokle+21921@googlemail.com</a>
<a href=""mailto:agentvictorokle+26873@googlemail.com"">agentvictorokle+26873@googlemail.com</a>
<a href=""mailto:agentvictorokle+21659@googlemail.com"">agentvictorokle+21659@googlemail.com</a>
<a href=""mailto:agentvictorokle+13390@googlemail.com"">agentvictorokle+13390@googlemail.com</a>
<a href=""mailto:agentvictorokle+1504@googlemail.com"">agentvictorokle+1504@googlemail.com</a>
<a href=""mailto:agentvictorokle+25634@googlemail.com"">agentvictorokle+25634@googlemail.com</a>
<a href=""mailto:agentvictorokle+26457@googlemail.com"">agentvictorokle+26457@googlemail.com</a>
<a href=""mailto:agentvictorokle+10994@googlemail.com"">agentvictorokle+10994@googlemail.com</a>
<a href=""mailto:agentvictorokle+10563@googlemail.com"">agentvictorokle+10563@googlemail.com</a>
<a href=""mailto:agentvictorokle+25441@googlemail.com"">agentvictorokle+25441@googlemail.com</a>
<a href=""mailto:agentvictorokle+13297@googlemail.com"">agentvictorokle+13297@googlemail.com</a>
<a href=""mailto:agentvictorokle+15932@googlemail.com"">agentvictorokle+15932@googlemail.com</a>
<a href=""mailto:agentvictorokle+24604@googlemail.com"">agentvictorokle+24604@googlemail.com</a>
<a href=""mailto:agentvictorokle+2623@googlemail.com"">agentvictorokle+2623@googlemail.com</a>
<a href=""mailto:agentvictorokle+12608@googlemail.com"">agentvictorokle+12608@googlemail.com</a>
<a href=""mailto:agentvictorokle+19410@googlemail.com"">agentvictorokle+19410@googlemail.com</a>
<a href=""mailto:agentvictorokle+13579@googlemail.com"">agentvictorokle+13579@googlemail.com</a>
<a href=""mailto:agentvictorokle+310@googlemail.com"">agentvictorokle+310@googlemail.com</a>
<a href=""mailto:agentvictorokle+7168@googlemail.com"">agentvictorokle+7168@googlemail.com</a>
<a href=""mailto:agentvictorokle+30192@googlemail.com"">agentvictorokle+30192@googlemail.com</a>
<a href=""mailto:agentvictorokle+13881@googlemail.com"">agentvictorokle+13881@googlemail.com</a>
<a href=""mailto:agentvictorokle+29133@googlemail.com"">agentvictorokle+29133@googlemail.com</a>
<a href=""mailto:agentvictorokle+24934@googlemail.com"">agentvictorokle+24934@googlemail.com</a>
<a href=""mailto:agentvictorokle+20497@googlemail.com"">agentvictorokle+20497@googlemail.com</a>
<a href=""mailto:agentvictorokle+25354@googlemail.com"">agentvictorokle+25354@googlemail.com</a>
<a href=""mailto:agentvictorokle+21150@googlemail.com"">agentvictorokle+21150@googlemail.com</a>
<a href=""mailto:agentvictorokle+9758@googlemail.com"">agentvictorokle+9758@googlemail.com</a>
<a href=""mailto:agentvictorokle+15785@googlemail.com"">agentvictorokle+15785@googlemail.com</a>
<a href=""mailto:agentvictorokle+28581@googlemail.com"">agentvictorokle+28581@googlemail.com</a>
<a href=""mailto:agentvictorokle+31373@googlemail.com"">agentvictorokle+31373@googlemail.com</a>
<a href=""mailto:agentvictorokle+12303@googlemail.com"">agentvictorokle+12303@googlemail.com</a>
<a href=""mailto:agentvictorokle+16121@googlemail.com"">agentvictorokle+16121@googlemail.com</a>
<a href=""mailto:agentvictorokle+9555@googlemail.com"">agentvictorokle+9555@googlemail.com</a>
<a href=""mailto:agentvictorokle+15583@googlemail.com"">agentvictorokle+15583@googlemail.com</a>
<a href=""mailto:agentvictorokle+5466@googlemail.com"">agentvictorokle+5466@googlemail.com</a>
<a href=""mailto:agentvictorokle+14583@googlemail.com"">agentvictorokle+14583@googlemail.com</a>
<a href=""mailto:agentvictorokle+17836@googlemail.com"">agentvictorokle+17836@googlemail.com</a>
<a href=""mailto:agentvictorokle+24891@googlemail.com"">agentvictorokle+24891@googlemail.com</a>
<a href=""mailto:agentvictorokle+29353@googlemail.com"">agentvictorokle+29353@googlemail.com</a>
<a href=""mailto:agentvictorokle+32681@googlemail.com"">agentvictorokle+32681@googlemail.com</a>
<a href=""mailto:agentvictorokle+22927@googlemail.com"">agentvictorokle+22927@googlemail.com</a>
<a href=""mailto:federalreservebank893@googlemail.com"">federalreservebank893@googlemail.com</a>
<a href=""mailto:federalreservebank893+24306@googlemail.com"">federalreservebank893+24306@googlemail.com</a>
<a href=""mailto:federalreservebank893+26220@googlemail.com"">federalreservebank893+26220@googlemail.com</a>
<a href=""mailto:federalreservebank893+5923@googlemail.com"">federalreservebank893+5923@googlemail.com</a>
<a href=""mailto:federalreservebank893+28222@googlemail.com"">federalreservebank893+28222@googlemail.com</a>
<a href=""mailto:federalreservebank893+23890@googlemail.com"">federalreservebank893+23890@googlemail.com</a>
<a href=""mailto:federalreservebank893+5185@googlemail.com"">federalreservebank893+5185@googlemail.com</a>
<a href=""mailto:federalreservebank893+5101@googlemail.com"">federalreservebank893+5101@googlemail.com</a>
<a href=""mailto:federalreservebank893+3739@googlemail.com"">federalreservebank893+3739@googlemail.com</a>
<a href=""mailto:federalreservebank893+24753@googlemail.com"">federalreservebank893+24753@googlemail.com</a>
<a href=""mailto:federalreservebank893+28634@googlemail.com"">federalreservebank893+28634@googlemail.com</a>
<a href=""mailto:federalreservebank893+26867@googlemail.com"">federalreservebank893+26867@googlemail.com</a>
<a href=""mailto:federalreservebank893+14897@googlemail.com"">federalreservebank893+14897@googlemail.com</a>
<a href=""mailto:federalreservebank893+17178@googlemail.com"">federalreservebank893+17178@googlemail.com</a>
<a href=""mailto:federalreservebank893+27883@googlemail.com"">federalreservebank893+27883@googlemail.com</a>
<a href=""mailto:federalreservebank893+4521@googlemail.com"">federalreservebank893+4521@googlemail.com</a>
<a href=""mailto:federalreservebank893+31969@googlemail.com"">federalreservebank893+31969@googlemail.com</a>
<a href=""mailto:federalreservebank893+12973@googlemail.com"">federalreservebank893+12973@googlemail.com</a>
<a href=""mailto:federalreservebank893+16854@googlemail.com"">federalreservebank893+16854@googlemail.com</a>
<a href=""mailto:federalreservebank893+31982@googlemail.com"">federalreservebank893+31982@googlemail.com</a>
<a href=""mailto:federalreservebank893+8918@googlemail.com"">federalreservebank893+8918@googlemail.com</a>
<a href=""mailto:federalreservebank893+25624@googlemail.com"">federalreservebank893+25624@googlemail.com</a>
<a href=""mailto:federalreservebank893+10230@googlemail.com"">federalreservebank893+10230@googlemail.com</a>
<a href=""mailto:federalreservebank893+10572@googlemail.com"">federalreservebank893+10572@googlemail.com</a>
<a href=""mailto:federalreservebank893+12989@googlemail.com"">federalreservebank893+12989@googlemail.com</a>
<a href=""mailto:federalreservebank893+23953@googlemail.com"">federalreservebank893+23953@googlemail.com</a>
<a href=""mailto:federalreservebank893+7707@googlemail.com"">federalreservebank893+7707@googlemail.com</a>
<a href=""mailto:federalreservebank893+12568@googlemail.com"">federalreservebank893+12568@googlemail.com</a>
<a href=""mailto:federalreservebank893+26862@googlemail.com"">federalreservebank893+26862@googlemail.com</a>
<a href=""mailto:federalreservebank893+21738@googlemail.com"">federalreservebank893+21738@googlemail.com</a>
<a href=""mailto:federalreservebank893+22180@googlemail.com"">federalreservebank893+22180@googlemail.com</a>
<a href=""mailto:federalreservebank893+7438@googlemail.com"">federalreservebank893+7438@googlemail.com</a>
<a href=""mailto:federalreservebank893+27611@googlemail.com"">federalreservebank893+27611@googlemail.com</a>
<a href=""mailto:federalreservebank893+4310@googlemail.com"">federalreservebank893+4310@googlemail.com</a>
<a href=""mailto:federalreservebank893+20358@googlemail.com"">federalreservebank893+20358@googlemail.com</a>
<a href=""mailto:federalreservebank893+19149@googlemail.com"">federalreservebank893+19149@googlemail.com</a>
<a href=""mailto:federalreservebank893+24484@googlemail.com"">federalreservebank893+24484@googlemail.com</a>
<a href=""mailto:federalreservebank893+10194@googlemail.com"">federalreservebank893+10194@googlemail.com</a>
<a href=""mailto:federalreservebank893+10629@googlemail.com"">federalreservebank893+10629@googlemail.com</a>
<a href=""mailto:federalreservebank893+12821@googlemail.com"">federalreservebank893+12821@googlemail.com</a>
<a href=""mailto:federalreservebank893+25260@googlemail.com"">federalreservebank893+25260@googlemail.com</a>
<a href=""mailto:federalreservebank893+26339@googlemail.com"">federalreservebank893+26339@googlemail.com</a>
<a href=""mailto:federalreservebank893+10861@googlemail.com"">federalreservebank893+10861@googlemail.com</a>
<a href=""mailto:federalreservebank893+16864@googlemail.com"">federalreservebank893+16864@googlemail.com</a>
<a href=""mailto:federalreservebank893+2434@googlemail.com"">federalreservebank893+2434@googlemail.com</a>
<a href=""mailto:federalreservebank893+29679@googlemail.com"">federalreservebank893+29679@googlemail.com</a>
<a href=""mailto:federalreservebank893+17382@googlemail.com"">federalreservebank893+17382@googlemail.com</a>
<a href=""mailto:federalreservebank893+29437@googlemail.com"">federalreservebank893+29437@googlemail.com</a>
<a href=""mailto:federalreservebank893+6100@googlemail.com"">federalreservebank893+6100@googlemail.com</a>
<a href=""mailto:federalreservebank893+17709@googlemail.com"">federalreservebank893+17709@googlemail.com</a>
<a href=""mailto:federalreservebank893+13864@googlemail.com"">federalreservebank893+13864@googlemail.com</a>
<a href=""mailto:federalreservebank893+2701@googlemail.com"">federalreservebank893+2701@googlemail.com</a>
<a href=""mailto:federalreservebank893+28260@googlemail.com"">federalreservebank893+28260@googlemail.com</a>
<a href=""mailto:federalreservebank893+20777@googlemail.com"">federalreservebank893+20777@googlemail.com</a>
<a href=""mailto:federalreservebank893+15638@googlemail.com"">federalreservebank893+15638@googlemail.com</a>
<a href=""mailto:federalreservebank893+11037@googlemail.com"">federalreservebank893+11037@googlemail.com</a>
<a href=""mailto:federalreservebank893+24706@googlemail.com"">federalreservebank893+24706@googlemail.com</a>
<a href=""mailto:federalreservebank893+17980@googlemail.com"">federalreservebank893+17980@googlemail.com</a>
<a href=""mailto:federalreservebank893+8525@googlemail.com"">federalreservebank893+8525@googlemail.com</a>
<a href=""mailto:federalreservebank893+21194@googlemail.com"">federalreservebank893+21194@googlemail.com</a>
<a href=""mailto:federalreservebank893+17862@googlemail.com"">federalreservebank893+17862@googlemail.com</a>
<a href=""mailto:federalreservebank893+18759@googlemail.com"">federalreservebank893+18759@googlemail.com</a>
<a href=""mailto:federalreservebank893+29066@googlemail.com"">federalreservebank893+29066@googlemail.com</a>
<a href=""mailto:federalreservebank893+17565@googlemail.com"">federalreservebank893+17565@googlemail.com</a>
<a href=""mailto:federalreservebank893+16530@googlemail.com"">federalreservebank893+16530@googlemail.com</a>
<a href=""mailto:federalreservebank893+7971@googlemail.com"">federalreservebank893+7971@googlemail.com</a>
<a href=""mailto:federalreservebank893+31645@googlemail.com"">federalreservebank893+31645@googlemail.com</a>
<a href=""mailto:federalreservebank893+26155@googlemail.com"">federalreservebank893+26155@googlemail.com</a>
<a href=""mailto:federalreservebank893+20558@googlemail.com"">federalreservebank893+20558@googlemail.com</a>
<a href=""mailto:federalreservebank893+8133@googlemail.com"">federalreservebank893+8133@googlemail.com</a>
<a href=""mailto:federalreservebank893+30949@googlemail.com"">federalreservebank893+30949@googlemail.com</a>
<a href=""mailto:federalreservebank893+4426@googlemail.com"">federalreservebank893+4426@googlemail.com</a>
<a href=""mailto:federalreservebank893+4483@googlemail.com"">federalreservebank893+4483@googlemail.com</a>
<a href=""mailto:federalreservebank893+15903@googlemail.com"">federalreservebank893+15903@googlemail.com</a>
<a href=""mailto:federalreservebank893+12999@googlemail.com"">federalreservebank893+12999@googlemail.com</a>
<a href=""mailto:federalreservebank893+13197@googlemail.com"">federalreservebank893+13197@googlemail.com</a>
<a href=""mailto:federalreservebank893+23659@googlemail.com"">federalreservebank893+23659@googlemail.com</a>
<a href=""mailto:federalreservebank893+28444@googlemail.com"">federalreservebank893+28444@googlemail.com</a>
<a href=""mailto:federalreservebank893+8479@googlemail.com"">federalreservebank893+8479@googlemail.com</a>
<a href=""mailto:federalreservebank893+31160@googlemail.com"">federalreservebank893+31160@googlemail.com</a>
<a href=""mailto:federalreservebank893+11957@googlemail.com"">federalreservebank893+11957@googlemail.com</a>
<a href=""mailto:federalreservebank893+5367@googlemail.com"">federalreservebank893+5367@googlemail.com</a>
<a href=""mailto:federalreservebank893+19278@googlemail.com"">federalreservebank893+19278@googlemail.com</a>
<a href=""mailto:federalreservebank893+4504@googlemail.com"">federalreservebank893+4504@googlemail.com</a>
<a href=""mailto:federalreservebank893+10955@googlemail.com"">federalreservebank893+10955@googlemail.com</a>
<a href=""mailto:federalreservebank893+17190@googlemail.com"">federalreservebank893+17190@googlemail.com</a>
<a href=""mailto:federalreservebank893+15793@googlemail.com"">federalreservebank893+15793@googlemail.com</a>
<a href=""mailto:federalreservebank893+11003@googlemail.com"">federalreservebank893+11003@googlemail.com</a>
<a href=""mailto:federalreservebank893+32353@googlemail.com"">federalreservebank893+32353@googlemail.com</a>
<a href=""mailto:federalreservebank893+24016@googlemail.com"">federalreservebank893+24016@googlemail.com</a>
<a href=""mailto:federalreservebank893+25229@googlemail.com"">federalreservebank893+25229@googlemail.com</a>
<a href=""mailto:federalreservebank893+2173@googlemail.com"">federalreservebank893+2173@googlemail.com</a>
<a href=""mailto:federalreservebank893+18546@googlemail.com"">federalreservebank893+18546@googlemail.com</a>
<a href=""mailto:federalreservebank893+27058@googlemail.com"">federalreservebank893+27058@googlemail.com</a>
<a href=""mailto:federalreservebank893+3703@googlemail.com"">federalreservebank893+3703@googlemail.com</a>
<a href=""mailto:federalreservebank893+9837@googlemail.com"">federalreservebank893+9837@googlemail.com</a>
<a href=""mailto:federalreservebank893+6669@googlemail.com"">federalreservebank893+6669@googlemail.com</a>
<a href=""mailto:federalreservebank893+32183@googlemail.com"">federalreservebank893+32183@googlemail.com</a>
<a href=""mailto:federalreservebank893+7725@googlemail.com"">federalreservebank893+7725@googlemail.com</a>
<a href=""mailto:federalreservebank893+31624@googlemail.com"">federalreservebank893+31624@googlemail.com</a>
<a href=""mailto:federalreservebank893+22616@googlemail.com"">federalreservebank893+22616@googlemail.com</a>
<a href=""mailto:dw9346845@gmail.com"">dw9346845@gmail.com</a>
<a href=""mailto:d.w93468.4.5@gmail.com"">d.w93468.4.5@gmail.com</a>
<a href=""mailto:dw93.46.8.45@gmail.com"">dw93.46.8.45@gmail.com</a>
<a href=""mailto:d.w.93.4.6.8.45@gmail.com"">d.w.93.4.6.8.45@gmail.com</a>
<a href=""mailto:dw.9.3.4.68.45@gmail.com"">dw.9.3.4.68.45@gmail.com</a>
<a href=""mailto:d.w93.46.8.4.5@gmail.com"">d.w93.46.8.4.5@gmail.com</a>
<a href=""mailto:d.w934684.5@gmail.com"">d.w934684.5@gmail.com</a>
<a href=""mailto:dw9.34684.5@gmail.com"">dw9.34684.5@gmail.com</a>
<a href=""mailto:d.w.9.3.468.4.5@gmail.com"">d.w.9.3.468.4.5@gmail.com</a>
<a href=""mailto:dw9.34.6845@gmail.com"">dw9.34.6845@gmail.com</a>
<a href=""mailto:d.w93.4.6845@gmail.com"">d.w93.4.6845@gmail.com</a>
<a href=""mailto:dw93.4684.5@gmail.com"">dw93.4684.5@gmail.com</a>
<a href=""mailto:d.w9.34684.5@gmail.com"">d.w9.34684.5@gmail.com</a>
<a href=""mailto:d.w.9.3.4.6845@gmail.com"">d.w.9.3.4.6845@gmail.com</a>
<a href=""mailto:dw9.3.46.84.5@gmail.com"">dw9.3.46.84.5@gmail.com</a>
<a href=""mailto:d.w9.346.845@gmail.com"">d.w9.346.845@gmail.com</a>
<a href=""mailto:d.w93.468.4.5@gmail.com"">d.w93.468.4.5@gmail.com</a>
<a href=""mailto:d.w.9.3468.4.5@gmail.com"">d.w.9.3468.4.5@gmail.com</a>
<a href=""mailto:d.w.9.3.4.68.4.5@gmail.com"">d.w.9.3.4.68.4.5@gmail.com</a>
<a href=""mailto:d.w.934.684.5@gmail.com"">d.w.934.684.5@gmail.com</a>
<a href=""mailto:d.w9.3468.4.5@gmail.com"">d.w9.3468.4.5@gmail.com</a>
<a href=""mailto:d.w9.34.68.4.5@gmail.com"">d.w9.34.68.4.5@gmail.com</a>
<a href=""mailto:dw9.34.6.8.45@gmail.com"">dw9.34.6.8.45@gmail.com</a>
<a href=""mailto:dw9.3.4.6.8.45@gmail.com"">dw9.3.4.6.8.45@gmail.com</a>
<a href=""mailto:dw93468.4.5@gmail.com"">dw93468.4.5@gmail.com</a>
<a href=""mailto:dw93.46.845@gmail.com"">dw93.46.845@gmail.com</a>
<a href=""mailto:dw9.346.8.45@gmail.com"">dw9.346.8.45@gmail.com</a>
<a href=""mailto:d.w9.34.6.8.45@gmail.com"">d.w9.34.6.8.45@gmail.com</a>
<a href=""mailto:dw.934.6.845@gmail.com"">dw.934.6.845@gmail.com</a>
<a href=""mailto:dw.9.34.6.845@gmail.com"">dw.9.34.6.845@gmail.com</a>
<a href=""mailto:d.w9346.845@gmail.com"">d.w9346.845@gmail.com</a>
<a href=""mailto:dw.9.34.6.8.45@gmail.com"">dw.9.34.6.8.45@gmail.com</a>
<a href=""mailto:d.w9.34.684.5@gmail.com"">d.w9.34.684.5@gmail.com</a>
<a href=""mailto:dw934.6845@gmail.com"">dw934.6845@gmail.com</a>
<a href=""mailto:dw93.4.68.45@gmail.com"">dw93.4.68.45@gmail.com</a>
<a href=""mailto:dw934684.5@gmail.com"">dw934684.5@gmail.com</a>
<a href=""mailto:d.w9.346.8.4.5@gmail.com"">d.w9.346.8.4.5@gmail.com</a>
<a href=""mailto:dw.9.3.4.6.845@gmail.com"">dw.9.3.4.6.845@gmail.com</a>
<a href=""mailto:d.w.9.3.46.8.4.5@gmail.com"">d.w.9.3.46.8.4.5@gmail.com</a>
<a href=""mailto:d.w9.3.4.6.8.45@gmail.com"">d.w9.3.4.6.8.45@gmail.com</a>
<a href=""mailto:d.w93.4.6.8.4.5@gmail.com"">d.w93.4.6.8.4.5@gmail.com</a>
<a href=""mailto:dw.93.46.8.45@gmail.com"">dw.93.46.8.45@gmail.com</a>
<a href=""mailto:dw.9346845@gmail.com"">dw.9346845@gmail.com</a>
<a href=""mailto:d.w93.4.68.45@gmail.com"">d.w93.4.68.45@gmail.com</a>
<a href=""mailto:d.w9.3.4.6.84.5@gmail.com"">d.w9.3.4.6.84.5@gmail.com</a>
<a href=""mailto:d.w9.3.468.45@gmail.com"">d.w9.3.468.45@gmail.com</a>
<a href=""mailto:d.w9.34.68.45@gmail.com"">d.w9.34.68.45@gmail.com</a>
<a href=""mailto:dw9346.845@gmail.com"">dw9346.845@gmail.com</a>
<a href=""mailto:dw9.346845@gmail.com"">dw9.346845@gmail.com</a>
<a href=""mailto:dw9.3468.4.5@gmail.com"">dw9.3468.4.5@gmail.com</a>
<a href=""mailto:dw.93.4.6.845@gmail.com"">dw.93.4.6.845@gmail.com</a>
<a href=""mailto:dw.9.3.4.6845@gmail.com"">dw.9.3.4.6845@gmail.com</a>
<a href=""mailto:dw9346.84.5@gmail.com"">dw9346.84.5@gmail.com</a>
<a href=""mailto:dw.93468.4.5@gmail.com"">dw.93468.4.5@gmail.com</a>
<a href=""mailto:d.w.93.4.6.845@gmail.com"">d.w.93.4.6.845@gmail.com</a>
<a href=""mailto:dw9.3.46.845@gmail.com"">dw9.3.46.845@gmail.com</a>
<a href=""mailto:dw9.3.4.6.84.5@gmail.com"">dw9.3.4.6.84.5@gmail.com</a>
<a href=""mailto:dw934.6.8.4.5@gmail.com"">dw934.6.8.4.5@gmail.com</a>
<a href=""mailto:d.w.93.46.8.45@gmail.com"">d.w.93.46.8.45@gmail.com</a>
<a href=""mailto:d.w.9.3.4684.5@gmail.com"">d.w.9.3.4684.5@gmail.com</a>
<a href=""mailto:d.w.9.34684.5@gmail.com"">d.w.9.34684.5@gmail.com</a>
<a href=""mailto:dw9.34.6.845@gmail.com"">dw9.34.6.845@gmail.com</a>
<a href=""mailto:d.w.9.346.84.5@gmail.com"">d.w.9.346.84.5@gmail.com</a>
<a href=""mailto:dw9.34.68.4.5@gmail.com"">dw9.34.68.4.5@gmail.com</a>
<a href=""mailto:dw.9.3.4.6.84.5@gmail.com"">dw.9.3.4.6.84.5@gmail.com</a>
<a href=""mailto:dw.9.34.68.4.5@gmail.com"">dw.9.34.68.4.5@gmail.com</a>
<a href=""mailto:d.w.9.3.46.84.5@gmail.com"">d.w.9.3.46.84.5@gmail.com</a>
<a href=""mailto:dw934.68.4.5@gmail.com"">dw934.68.4.5@gmail.com</a>
<a href=""mailto:d.w.9.34.684.5@gmail.com"">d.w.9.34.684.5@gmail.com</a>
<a href=""mailto:d.w93.46.8.45@gmail.com"">d.w93.46.8.45@gmail.com</a>
<a href=""mailto:d.w93.4.6.84.5@gmail.com"">d.w93.4.6.84.5@gmail.com</a>
<a href=""mailto:d.w.93468.45@gmail.com"">d.w.93468.45@gmail.com</a>
<a href=""mailto:dw.93.468.45@gmail.com"">dw.93.468.45@gmail.com</a>
<a href=""mailto:dw.9346.84.5@gmail.com"">dw.9346.84.5@gmail.com</a>
<a href=""mailto:dw.93.46845@gmail.com"">dw.93.46845@gmail.com</a>
<a href=""mailto:dw.93468.45@gmail.com"">dw.93468.45@gmail.com</a>
<a href=""mailto:d.w93.46845@gmail.com"">d.w93.46845@gmail.com</a>
<a href=""mailto:dw9.34.6.84.5@gmail.com"">dw9.34.6.84.5@gmail.com</a>
<a href=""mailto:d.w9.3.46.845@gmail.com"">d.w9.3.46.845@gmail.com</a>
<a href=""mailto:d.w.93.4684.5@gmail.com"">d.w.93.4684.5@gmail.com</a>
<a href=""mailto:d.w.9.34.6.8.4.5@gmail.com"">d.w.9.34.6.8.4.5@gmail.com</a>
<a href=""mailto:dw9.34.68.45@gmail.com"">dw9.34.68.45@gmail.com</a>
<a href=""mailto:dw9.3.46.8.45@gmail.com"">dw9.3.46.8.45@gmail.com</a>
<a href=""mailto:dw9.3.4.6.8.4.5@gmail.com"">dw9.3.4.6.8.4.5@gmail.com</a>
<a href=""mailto:dw.9.34.68.45@gmail.com"">dw.9.34.68.45@gmail.com</a>
<a href=""mailto:d.w.9346.84.5@gmail.com"">d.w.9346.84.5@gmail.com</a>
<a href=""mailto:d.w9.34.6.845@gmail.com"">d.w9.34.6.845@gmail.com</a>
<a href=""mailto:dw.9.34.6.84.5@gmail.com"">dw.9.34.6.84.5@gmail.com</a>
<a href=""mailto:d.w93.468.45@gmail.com"">d.w93.468.45@gmail.com</a>
<a href=""mailto:dw9.34.6.8.4.5@gmail.com"">dw9.34.6.8.4.5@gmail.com</a>
<a href=""mailto:d.w9.3.4.6.845@gmail.com"">d.w9.3.4.6.845@gmail.com</a>
<a href=""mailto:dw934.6.845@gmail.com"">dw934.6.845@gmail.com</a>
<a href=""mailto:dw.93.46.8.4.5@gmail.com"">dw.93.46.8.4.5@gmail.com</a>
<a href=""mailto:dw.9.34.684.5@gmail.com"">dw.9.34.684.5@gmail.com</a>
<a href=""mailto:d.w.934684.5@gmail.com"">d.w.934684.5@gmail.com</a>
<a href=""mailto:dw934.684.5@gmail.com"">dw934.684.5@gmail.com</a>
<a href=""mailto:dw9346.8.45@gmail.com"">dw9346.8.45@gmail.com</a>
<a href=""mailto:d.w9346.8.4.5@gmail.com"">d.w9346.8.4.5@gmail.com</a>
<a href=""mailto:dw9.3.4.6.845@gmail.com"">dw9.3.4.6.845@gmail.com</a>
<a href=""mailto:d.w93.4.68.4.5@gmail.com"">d.w93.4.68.4.5@gmail.com</a>
<a href=""mailto:d.w93468.45@gmail.com"">d.w93468.45@gmail.com</a>
<a href=""mailto:dw.9.346.8.4.5@gmail.com"">dw.9.346.8.4.5@gmail.com</a>
<a href=""mailto:d.w.93.468.4.5@gmail.com"">d.w.93.468.4.5@gmail.com</a>
<a href=""mailto:dw.9.3.46.845@gmail.com"">dw.9.3.46.845@gmail.com</a>
<a href=""mailto:dw934.6.84.5@gmail.com"">dw934.6.84.5@gmail.com</a>
<a href=""mailto:dw9.3.46845@gmail.com"">dw9.3.46845@gmail.com</a>
<a href=""mailto:dw.934.6845@gmail.com"">dw.934.6845@gmail.com</a>
<a href=""mailto:d.w.9.34.68.45@gmail.com"">d.w.9.34.68.45@gmail.com</a>
<a href=""mailto:dw.9.34.6845@gmail.com"">dw.9.34.6845@gmail.com</a>
<a href=""mailto:d.w9.3.4.6845@gmail.com"">d.w9.3.4.6845@gmail.com</a>
<a href=""mailto:dw93468.45@gmail.com"">dw93468.45@gmail.com</a>
<a href=""mailto:d.w.9.3.4.6.84.5@gmail.com"">d.w.9.3.4.6.84.5@gmail.com</a>
<a href=""mailto:dw93.4.68.4.5@gmail.com"">dw93.4.68.4.5@gmail.com</a>
<a href=""mailto:dw9.3468.45@gmail.com"">dw9.3468.45@gmail.com</a>
<a href=""mailto:d.w9.3.4.68.4.5@gmail.com"">d.w9.3.4.68.4.5@gmail.com</a>
<a href=""mailto:dw9.3.468.4.5@gmail.com"">dw9.3.468.4.5@gmail.com</a>
<a href=""mailto:dw.934.684.5@gmail.com"">dw.934.684.5@gmail.com</a>
<a href=""mailto:dw9346.8.4.5@gmail.com"">dw9346.8.4.5@gmail.com</a>
<a href=""mailto:dw.9.346845@gmail.com"">dw.9.346845@gmail.com</a>
<a href=""mailto:d.w.9.346.8.4.5@gmail.com"">d.w.9.346.8.4.5@gmail.com</a>
<a href=""mailto:d.w.9.346.8.45@gmail.com"">d.w.9.346.8.45@gmail.com</a>
<a href=""mailto:dw.93.4.6845@gmail.com"">dw.93.4.6845@gmail.com</a>
<a href=""mailto:d.w9.34.6845@gmail.com"">d.w9.34.6845@gmail.com</a>
<a href=""mailto:dw934.68.45@gmail.com"">dw934.68.45@gmail.com</a>
<a href=""mailto:dw.9.3.46845@gmail.com"">dw.9.3.46845@gmail.com</a>
<a href=""mailto:d.w9.346.84.5@gmail.com"">d.w9.346.84.5@gmail.com</a>
<a href=""mailto:d.w934.684.5@gmail.com"">d.w934.684.5@gmail.com</a>
<a href=""mailto:d.w9.3.46.8.45@gmail.com"">d.w9.3.46.8.45@gmail.com</a>
<a href=""mailto:d.w93.4684.5@gmail.com"">d.w93.4684.5@gmail.com</a>
<a href=""mailto:d.w9346.8.45@gmail.com"">d.w9346.8.45@gmail.com</a>
<a href=""mailto:d.w.934.6.8.4.5@gmail.com"">d.w.934.6.8.4.5@gmail.com</a>
<a href=""mailto:dw.9.3.4.684.5@gmail.com"">dw.9.3.4.684.5@gmail.com</a>
<a href=""mailto:dw93.4.684.5@gmail.com"">dw93.4.684.5@gmail.com</a>
<a href=""mailto:dw.93.4.684.5@gmail.com"">dw.93.4.684.5@gmail.com</a>
<a href=""mailto:d.w9.346.8.45@gmail.com"">d.w9.346.8.45@gmail.com</a>
<a href=""mailto:dw9.3.4684.5@gmail.com"">dw9.3.4684.5@gmail.com</a>
<a href=""mailto:d.w934.6.8.45@gmail.com"">d.w934.6.8.45@gmail.com</a>
<a href=""mailto:dw.9.3.46.8.4.5@gmail.com"">dw.9.3.46.8.4.5@gmail.com</a>
<a href=""mailto:dw93.46.84.5@gmail.com"">dw93.46.84.5@gmail.com</a>
<a href=""mailto:dw.93.4684.5@gmail.com"">dw.93.4684.5@gmail.com</a>
<a href=""mailto:dw93.4.6.8.45@gmail.com"">dw93.4.6.8.45@gmail.com</a>
<a href=""mailto:d.w9.34.6.84.5@gmail.com"">d.w9.34.6.84.5@gmail.com</a>
<a href=""mailto:dw9.346.8.4.5@gmail.com"">dw9.346.8.4.5@gmail.com</a>
<a href=""mailto:d.w.93468.4.5@gmail.com"">d.w.93468.4.5@gmail.com</a>
<a href=""mailto:d.w.9.3.46.8.45@gmail.com"">d.w.9.3.46.8.45@gmail.com</a>
<a href=""mailto:d.w9.3.4684.5@gmail.com"">d.w9.3.4684.5@gmail.com</a>
<a href=""mailto:d.w93.4.6.8.45@gmail.com"">d.w93.4.6.8.45@gmail.com</a>
<a href=""mailto:dw.934.68.4.5@gmail.com"">dw.934.68.4.5@gmail.com</a>
<a href=""mailto:d.w.93.4.68.4.5@gmail.com"">d.w.93.4.68.4.5@gmail.com</a>
<a href=""mailto:dw.93.4.68.4.5@gmail.com"">dw.93.4.68.4.5@gmail.com</a>
<a href=""mailto:dw.9.3.4684.5@gmail.com"">dw.9.3.4684.5@gmail.com</a>
<a href=""mailto:d.w.9.34.6.8.45@gmail.com"">d.w.9.34.6.8.45@gmail.com</a>
<a href=""mailto:dw.934.6.84.5@gmail.com"">dw.934.6.84.5@gmail.com</a>
<a href=""mailto:d.w9.3.46.8.4.5@gmail.com"">d.w9.3.46.8.4.5@gmail.com</a>
<a href=""mailto:dw9.3.46.8.4.5@gmail.com"">dw9.3.46.8.4.5@gmail.com</a>
<a href=""mailto:d.w93.4.6.845@gmail.com"">d.w93.4.6.845@gmail.com</a>
<a href=""mailto:d.w.93.4.684.5@gmail.com"">d.w.93.4.684.5@gmail.com</a>
<a href=""mailto:d.w.934.6.845@gmail.com"">d.w.934.6.845@gmail.com</a>
<a href=""mailto:d.w.9346.8.4.5@gmail.com"">d.w.9346.8.4.5@gmail.com</a>
<a href=""mailto:d.w.9.34.68.4.5@gmail.com"">d.w.9.34.68.4.5@gmail.com</a>
<a href=""mailto:d.w93.46.84.5@gmail.com"">d.w93.46.84.5@gmail.com</a>
<a href=""mailto:dw93.4.6.84.5@gmail.com"">dw93.4.6.84.5@gmail.com</a>
<a href=""mailto:d.w9.346845@gmail.com"">d.w9.346845@gmail.com</a>
<a href=""mailto:dw.93.46.845@gmail.com"">dw.93.46.845@gmail.com</a>
<a href=""mailto:d.w9.34.6.8.4.5@gmail.com"">d.w9.34.6.8.4.5@gmail.com</a>
<a href=""mailto:d.w.93.4.68.45@gmail.com"">d.w.93.4.68.45@gmail.com</a>
<a href=""mailto:dw.9.3.468.45@gmail.com"">dw.9.3.468.45@gmail.com</a>
<a href=""mailto:d.w.934.6.8.45@gmail.com"">d.w.934.6.8.45@gmail.com</a>
<a href=""mailto:dw.93.4.6.8.45@gmail.com"">dw.93.4.6.8.45@gmail.com</a>
<a href=""mailto:dw93.468.4.5@gmail.com"">dw93.468.4.5@gmail.com</a>
<a href=""mailto:dw.9.3.46.84.5@gmail.com"">dw.9.3.46.84.5@gmail.com</a>
<a href=""mailto:dw9.346.84.5@gmail.com"">dw9.346.84.5@gmail.com</a>
<a href=""mailto:d.w.9.34.6.845@gmail.com"">d.w.9.34.6.845@gmail.com</a>
<a href=""mailto:d.w9.3.4.684.5@gmail.com"">d.w9.3.4.684.5@gmail.com</a>
<a href=""mailto:d.w.93.468.45@gmail.com"">d.w.93.468.45@gmail.com</a>
<a href=""mailto:d.w.934.6845@gmail.com"">d.w.934.6845@gmail.com</a>
<a href=""mailto:d.w.9.3468.45@gmail.com"">d.w.9.3468.45@gmail.com</a>
<a href=""mailto:d.w.9.34.6.84.5@gmail.com"">d.w.9.34.6.84.5@gmail.com</a>
<a href=""mailto:d.w.9346.8.45@gmail.com"">d.w.9346.8.45@gmail.com</a>
<a href=""mailto:dw.93.4.68.45@gmail.com"">dw.93.4.68.45@gmail.com</a>
<a href=""mailto:d.w934.6845@gmail.com"">d.w934.6845@gmail.com</a>
<a href=""mailto:dw.934.6.8.4.5@gmail.com"">dw.934.6.8.4.5@gmail.com</a>
<a href=""mailto:dw9.34.684.5@gmail.com"">dw9.34.684.5@gmail.com</a>
<a href=""mailto:dw.9.346.84.5@gmail.com"">dw.9.346.84.5@gmail.com</a>
<a href=""mailto:d.w.9.346845@gmail.com"">d.w.9.346845@gmail.com</a>
<a href=""mailto:dw.93.4.6.84.5@gmail.com"">dw.93.4.6.84.5@gmail.com</a>
<a href=""mailto:dw.9.34684.5@gmail.com"">dw.9.34684.5@gmail.com</a>
<a href=""mailto:d.w.93.4.6845@gmail.com"">d.w.93.4.6845@gmail.com</a>
<a href=""mailto:d.w.9346845@gmail.com"">d.w.9346845@gmail.com</a>
<a href=""mailto:d.w.93.4.6.84.5@gmail.com"">d.w.93.4.6.84.5@gmail.com</a>
<a href=""mailto:d.w.9.3.4.6.8.4.5@gmail.com"">d.w.9.3.4.6.8.4.5@gmail.com</a>
<a href=""mailto:dw.9.3.468.4.5@gmail.com"">dw.9.3.468.4.5@gmail.com</a>
<a href=""mailto:dw9346845@gmail.com"">dw9346845@gmail.com</a>
<a href=""mailto:dw.9.3468.4.5@gmail.com"">dw.9.3468.4.5@gmail.com</a>
<a href=""mailto:dw93.4.6845@gmail.com"">dw93.4.6845@gmail.com</a>
<a href=""mailto:d.w.9.3.4.6.845@gmail.com"">d.w.9.3.4.6.845@gmail.com</a>
<a href=""mailto:dw9.3.4.68.45@gmail.com"">dw9.3.4.68.45@gmail.com</a>
<a href=""mailto:dw.934684.5@gmail.com"">dw.934684.5@gmail.com</a>
<a href=""mailto:d.w.9.3.468.45@gmail.com"">d.w.9.3.468.45@gmail.com</a>
<a href=""mailto:dw93.46845@gmail.com"">dw93.46845@gmail.com</a>
<a href=""mailto:d.w.9.3.4.68.45@gmail.com"">d.w.9.3.4.68.45@gmail.com</a>"
6BkzhqiS,new-regex-translate,nicuf,Python,Monday 3rd of July 2023 11:51:43 AM CDT,"import os
import re
from googletrans import Translator

translator = Translator()

# Folder path
folder_path = r""c:\Folder3\2""

# HTML tags to translate
tags_to_translate = ['<title>.*?</title>', '<meta name=""description"" content="".*?"">', '<p class=""text_obisnuit2"">.*?</p>', '<p class=""text_obisnuit"">.*?</p>']

# Words to check
words_to_check = ['the', 'you', 'which', 'view', 'because', 'here', 'have', 'this', 'two', 'one', 'three', 'four', 'five', 'six', 'seven', 'ten', 'had', 'then', 'see', 'saw', 'also', 'than', 'that', 'must', 'make', 'from']

# Iterate over all HTML files in the folder
for filename in os.listdir(folder_path):
    if filename.endswith("".html""):
        with open(os.path.join(folder_path, filename), 'r', encoding='utf-8') as file:
            html_content = file.read()

            # Iterate over all tags to translate
            for tag in tags_to_translate:
                matches = re.findall(tag, html_content, re.DOTALL)

                # Translate each match
                for match in matches:
                    # Check if the match contains at least three of the specified words
                    if sum(word in match for word in words_to_check) >= 3:
                        # Split the match into sentences
                        sentences = re.split(r'(?<=[.!?])\s+', match)

                        # Translate each sentence that contains at least three of the specified words
                        for sentence in sentences:
                            if sum(word in sentence for word in words_to_check) >= 3:
                                translation = translator.translate(sentence, dest='ru').text

                                # Replace the original sentence with the translation in the match
                                match = match.replace(sentence, translation)

                        # Replace the original match with the translated match in the HTML content
                        html_content = html_content.replace(match, translation)

        # Write the translated HTML content back to the file
        with open(os.path.join(folder_path, filename), 'w', encoding='utf-8') as file:
            file.write(html_content)
"
MBxke2ZY,tv 07-2023 task,spidersam,JSON,Monday 3rd of July 2023 11:51:22 AM CDT,"[
  {
    ""name"": ""ZooTv-live-03-07-2023.mp4"",
    ""url"": ""https://hello.freeconference.com/drive_files/download/ec572aff-b838-4a4f-a564-06c8e6623c39.mp4"",
    ""imageUrl"": ""https://i.imgur.com/O8HhNCcm.jpg""
  },
  {
    ""name"": ""ZooTv-03-07-2023.mp4"",
    ""url"": """",
    ""imageUrl"": ""https://i.imgur.com/O8HhNCcm.jpg""
  }
]"
WnWCHyGQ,Lorem,wheresTheAnyKey,Bash,Monday 3rd of July 2023 11:32:53 AM CDT,"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, nina.pimblett@centiveesupport.com also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.

"
g226xXux,Hours calculation,BoiBai,PHP,Monday 3rd of July 2023 11:29:14 AM CDT,"$word_count = [224]; //кол-во слов
$project_field = [227]; //получаем проект
$writer_rate = [494]; //получаем рейт писателя
$project_category = [167]; //получаем категорию проекта

//Получаем id проекта
$project_array = db_query(""select field_262 from app_entity_26 where id={$project_field}"");
$project_db = db_fetch_array($project_array);
$project_id = $project_db['field_262'];

//Получаем стоимость заказа по проекту
$rate_array = db_query(""select field_299 from app_entity_27 where id={$project_field}"");
$rate_db = db_fetch_array($rate_array);
$client_rate = $rate_db['field_299'];

//Получаем тип проекта
$type_array = db_query(""select field_584 from app_entity_27 where id={$project_field}"");
$type_db = db_fetch_array($type_array);
$client_type = $type_db['field_584'];
//325 - internal; 326 - client; 327 - outreach; 328 - pbns

/* Project categories
45 - Client Content
375 - Client Content - Discount
374 - Client Content - AI
371 - Sales Copy
87 - Internal Content
341 - Reusable Content
*/

//Calculating by category
if ($project_category == 45) { //45 - Client Content
	$output_value = Round((($word_count * 0.25) / $client_rate),2);
}
else if ($project_category == 375) //375 - Client Content - Discount
{
    $output_value = Round((($word_count * 0.07) / $client_rate),2);
    echo ""word count: "" . $word_count;
    echo "" writers rate: "" . $writer_rate;
    echo "" client rate: "" . $client_rate;
    echo "" output value: "" . $output_value;
}
else if ($project_category == 374) //374 - Client Content - AI
{
    $output_value = Round((($word_count * 0.07) / $client_rate),2);
    //echo ""word count: "" . $word_count;
    //echo "" writers rate: "" . $writer_rate;
    //echo "" client rate: "" . $client_rate;
}
else //all the others
{
    $output_value = Round((($word_count * $writer_rate) / $client_rate),2);
    //echo ""word count: "" . $word_count;
    //echo "" writers rate: "" . $writer_rate;
    //echo "" client rate: "" . $client_rate;
}

//Calculating by client type
/*
if ($client_type == 326) {
	$output_value = Round((($word_count * 0.25) / $client_rate),2);
}
else if ($client_type == 326) 
{
    $output_value = Round((($word_count * $writer_rate) / $client_rate),2);
    //echo ""word count: "" . $word_count;
    //echo "" writers rate: "" . $writer_rate;
    //echo "" client rate: "" . $client_rate;
}
else
{
    $output_value = Round((($word_count * $writer_rate) / $client_rate),2);
    //echo ""word count: "" . $word_count;
    //echo "" writers rate: "" . $writer_rate;
    //echo "" client rate: "" . $client_rate;
}
*/"
EWRgCGud,Untitled,dolomite42,JavaScript,Monday 3rd of July 2023 11:16:24 AM CDT,"theodore.croft@hiltonflowers.co.uk
darren.allsopp@greencastle.org.uk
kirstie.ambler@centiveesupport.com

Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3"
xWKfqiyb,last3,DanilaI,C#,Monday 3rd of July 2023 10:54:03 AM CDT,"using System;
using System.Numerics;
using UnityEngine;
using UnityEngine.UI;

public class Main : MonoBehaviour
{
    private const string MoneyKey = ""PlayerMoney"";
    public Text moneyText;

    public BigInteger playerMoney;
    public BigInteger MoneyPerClick = 100000000000000000;
    // BigInteger[] znacenia = new BigInteger[10];

    //     znacenia[0] = BigInteger.Parse(""1000"");
    //     znacenia[1] = BigInteger.Parse(""1000000"");
    //     znacenia[2] = BigInteger.Parse(""1000000000"");
    //     znacenia[3] = BigInteger.Parse(""1000000000000"");
    //     znacenia[4] = BigInteger.Parse(""1000000000000000"");
    //     znacenia[5] = BigInteger.Parse(""1000000000000000000"");
    //     znacenia[6] = BigInteger.Parse(""1000000000000000000000"");
    //     znacenia[7] = BigInteger.Parse(""1000000000000000000000000"");

    private void Start()
    {
        LoadPlayerMoney();
        DisplayPlayerMoney();
        playerMoney = 0;

    }

    private void Update()
    {
        DisplayPlayerMoney();
    }

    /*public void EarthClick()
    {
        playerMoney += 300000000;
    }*/

    private void LoadPlayerMoney()
    {
        if (PlayerPrefs.HasKey(MoneyKey))
        {
            string moneyString = PlayerPrefs.GetString(MoneyKey);
            BigInteger.TryParse(moneyString, out playerMoney);
        }
    }

    private void SavePlayerMoney()
    {
        string moneyString = playerMoney.ToString();
        PlayerPrefs.SetString(MoneyKey, moneyString);
        PlayerPrefs.Save();
    }

    private string FormatMoney(BigInteger value)
    {
        if (value < 1000)
        {
            return value.ToString();
        }
        else if (value < 1000000)
        {
            float formattedValue = (float)value / 1000f;
            return $""{formattedValue:F1}K"";
        }
        else if (value < 1000000000)
        {
            float formattedValue = (float)value / 1000000f;
            return $""{formattedValue:F1}M"";
        }
        else if (value < 1000000000000)
        {
            float formattedValue = (float)value / 1000000000f;
            return $""{formattedValue:F1}B"";
        }
        else if (value < 1000000000000000)
        {
            float formattedValue = (float)value / 1000000000000f;
            return $""{formattedValue:F1}aa"";
        }
        else if (value < 1000000000000000000)
        {
            float formattedValue = (float)value / 1000000000000000f;
            return $""{formattedValue:F1}ab"";
        }
        else if (value < 1000000000000000000000)
        {
            float formattedValue = (float)value / 1000000000000000000f;
            return $""{formattedValue:F1}ac"";
        }
        else
        {
            float formattedValue = (float)value / 1000000000f;
            return $""{formattedValue:F1}aka"";
        }
    }
    
    public void AddMoney()
    {
        playerMoney += MoneyPerClick;
        SavePlayerMoney();
        DisplayPlayerMoney();
    }
    private void DisplayPlayerMoney()
    {
        string formattedMoney = FormatMoney(playerMoney);
        moneyText.text = formattedMoney;
        Debug.Log($""Player money: {formattedMoney}"");
    }



    public void SubtractMoney(BigInteger amount)
    {
        if (playerMoney >= amount)
        {
            playerMoney -= amount;
            SavePlayerMoney();
            DisplayPlayerMoney();
        }
        else
        {
            Debug.Log(""Insufficient funds!"");
        }
    }
}
"
6DAX5jW8,esphome-workshop-vacuum-bot,poldim,YAML,Monday 3rd of July 2023 10:49:16 AM CDT,"substitutions:
  platform: ESP32
  board: nodemcu-32s
  device_name: esphome-workshop-vacuum-bot
  friendly_name: ""Workshop Vacuum Bot""
  reboot_timeout_wifi: 900s
  reboot_timeout_api: 1800s
  # output_power: 17dB
  led_max_power: ""0.80""


############################## 
# <<: !include z_common.yaml


esphome:
  platform: ${platform}
  board: ${board}
  name: ${device_name}
  # esp8266_restore_from_flash: true

wifi:
  ssid: !secret wifi_iot_ssid
  password: !secret wifi_iot_pwd
  # fast_connect: on
  reboot_timeout: ${reboot_timeout_wifi}
  ap:
    ssid: ""AP_${friendly_name}""
    password: !secret wifi_backup_pwd

api:
  reboot_timeout: ${reboot_timeout_api}

ota:

web_server:
  port: 80

logger:

captive_portal:

##############################

# esphome:
#   name: esphome-blast-gates
#   friendly_name: esphome-blast-gates

# esp32:
#   board: esp32dev
#   framework:
#     type: arduino

servo:
  - id: servo_1
    output: pwm_output_1
    auto_detach_time: 5s
  - id: servo_2
    output: pwm_output_2
    auto_detach_time: 5s
  - id: servo_3
    output: pwm_output_3
    auto_detach_time: 5s

output:
  - platform: ledc
    id: pwm_output_1
    pin: GPIO16
    frequency: 50 Hz
  - platform: ledc
    id: pwm_output_2
    pin: GPIO17
    frequency: 50 Hz
  - platform: ledc
    id: pwm_output_3
    pin: GPIO18
    frequency: 50 Hz

light:
- platform: esp32_rmt_led_strip
  internal: True
  id: blastgate_leds_1
  chipset: WS2812
  rmt_channel: 0
  pin: GPIO19
  num_leds: 4
  rgb_order: GRB
  restore_mode: RESTORE_DEFAULT_OFF
- platform: esp32_rmt_led_strip
  internal: True
  id: blastgate_leds_2
  chipset: WS2812
  rmt_channel: 0
  pin: GPIO20
  num_leds: 4
  rgb_order: GRB
  restore_mode: RESTORE_DEFAULT_OFF
- platform: esp32_rmt_led_strip
  internal: True
  id: blastgate_leds_3
  chipset: WS2812
  rmt_channel: 0
  pin: GPIO21
  num_leds: 4
  rgb_order: GRB
  restore_mode: RESTORE_DEFAULT_OFF

switch:
- platform: template
  name: ""Blastgate for Tool 1""
  id: tool_1
  optimistic: true
  restore_state: true
  turn_on_action:
    then:
    - switch.turn_off: tool_2
    - switch.turn_off: tool_3
    - servo.write:
        id: servo_1
        level: 1.0 # OPEN
    - light.turn_on:
        id: blastgate_leds_1
        brightness: 0.5
        red: 0
        green: 1
        blue: 0
  turn_off_action:
    then:
    - servo.write:
        id: servo_1
        level: -1.0 # CLOSED
    - light.turn_off: blastgate_leds_1
- platform: template
  name: ""Blastgate for Tool 2""
  id: tool_2
  optimistic: true
  restore_state: true
  turn_on_action:
    then:
    - switch.turn_off: tool_1
    - switch.turn_off: tool_3
    - servo.write:
        id: servo_2
        level: 1.0 # OPEN
    - light.turn_on:
        id: blastgate_leds_2
        brightness: 0.5
        red: 0
        green: 1
        blue: 0
  turn_off_action:
    then:
    - servo.write:
        id: servo_2
        level: -1.0 # CLOSED
    - light.turn_off: blastgate_leds_2
- platform: template
  name: ""Blastgate for Tool 3""
  id: tool_3
  optimistic: true
  restore_state: true
  turn_on_action:
    then:
    - switch.turn_off: tool_1
    - switch.turn_off: tool_2
    - servo.write:
        id: servo_3
        level: 1.0 # OPEN
    - light.turn_on:
        id: blastgate_leds_3
        brightness: 0.5
        red: 0
        green: 1
        blue: 0
  turn_off_action:
    then:
    - servo.write:
        id: servo_3
        level: -1.0 # CLOSED
    - light.turn_off: blastgate_leds_3
"
ADUkaNfV,Advanced AND - Donald AND Duck AND Hello,wheresTheAnyKey,C,Monday 3rd of July 2023 10:41:52 AM CDT,"Pasted at: 03/07/2023 16:41
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND
hello, donald was a duck

5502491997132108

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH
"
hn5s2WZV,Financial What's Inside - Email/IP/Bank,wheresTheAnyKey,C,Monday 3rd of July 2023 10:41:50 AM CDT,"Pasted at: 03/07/2023 16:41
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3
What's Inside Paste 

5378496492418234
5571598708435236
5587663820997281
5502491997132108
5516931903918995
5322909948799236
5443317136071703
5409137465238695
5497550044220575
5559606180091553

aaribaud@att.net
aaribaud@comcast.net
aaribaud@att.com
aaribaud@att.co.uk
aaribaud@yahoo.com

246.107.72.199
221.187.199.189
3.109.3.44
109.112.85.139
250.83.213.179
169.141.201.234
50.180.50.59
20.181.54.231
64.235.191.167
48.103.36.43"
jmTNgiXW,Financial with SPECIAL CHARACTERS,wheresTheAnyKey,C,Monday 3rd of July 2023 10:41:48 AM CDT,"Pasted at: 03/07/2023 16:41
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND

5148-2121-6312-7114   - DASHES
5148212163127114
5107-4578-0576-9075   - DASHES
5107457805769075
3488-1760-1454-729   - DASHES
348817601454729

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH"
U2f01UF0,Domains with SPECIAL CHARS,wheresTheAnyKey,C,Monday 3rd of July 2023 10:41:47 AM CDT,"Pasted at: 03/07/2023 16:41
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND

www.qatesting.com
blog.qatesting.com
www.qatesting.com/index.html
www.qatesting.com/home
www.qatestingblog.com
www.qatestingtutorials.com
shop.qatesting.co.uk
admin.qatesting.io 
qatesting
qatesting.co.uk
qatesting.cn
qatesting.io
findmetesting.com
www.qatesting-blog.com
www.qatesting-blog23.com
www.qatesting
www.qatesting.co.uk
www.qatesting.cn
www.qatesting.io
www.findmetesting.com
www.wobsut.gov

The difference is that QA is process oriented and QC is product oriented.

Testing, therefore is product oriented and thus is in the QC domain. Testing for quality isn't assuring quality, it's controlling it.



Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH
"
dwf89sag,ALL Keywords with Excluded Words,wheresTheAnyKey,C,Monday 3rd of July 2023 10:41:45 AM CDT,"Pasted at: 03/07/2023 16:41
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND 

The dystopian version of superintelligence is illustrated with frequency by leaders in the technology industry, and is famously depicted by Hollywood in films like Terminator, 
or more recently Ex Machina, and even the Avengers. The “furious deity A.I.” is a story you know, because it is the story you are constantly told: we build the thinking machine, 
it surpasses our abilities in every way, and it destroys us for one of any number of reasons.Maybe it perceives us as a threat. Maybe we’re just in its way, 
and it hardly perceives us at all — mankind, a disposable insect race.

There are of course many arguments in opposition to the now ubiquitous concept of our apocalypse by artificial intelligence. 
I myself have called into question the logic of such dystopian arguments in Anatomy of Next. But our subject here is less pertaining to the nature of the conscious machine than 
it is to the way we talk about this subject, and what it means. First, consider that most of the artificial intelligence depicted in culture looks human, a representation with 
no basis in technological reality. Then, the true scope of the Singularity is almost impossible to predict, which begs a question: where are these opinions about the broadly 
unknowable coming from?"
qEj17SwN,All Keywords with ANY Additional Words,wheresTheAnyKey,C,Monday 3rd of July 2023 10:41:43 AM CDT,"Pasted at: 03/07/2023 16:41
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND KEYWAUTO

The dystopian version of superintelligence is illustrated with frequency by leaders in the technology industry, and is famously depicted by Hollywood in films like Terminator, or more recently Ex Machina, and even the Avengers. The “angry god A.I.” is a story you know, because it is the story you are constantly told: we build the thinking machine, it surpasses our abilities in every way, and it destroys us for one of any number of reasons.
Maybe it perceives us as a threat. Maybe we’re just in its way, and it hardly perceives us at all — humanity, a disposable insect race.

There are of course many arguments in opposition to the now ubiquitous concept of our apocalypse by artificial intelligence. I myself have called into question the logic of such dystopian arguments in Anatomy of Next. But our subject here is less pertaining to the nature of the conscious machine than it is to the way we talk about this subject, and what it means. First, consider that most of the artificial intelligence depicted in culture looks human, a representation with no basis in technological reality. Then, the true scope of the Singularity is almost impossible to predict, which begs a question: where are these opinions about the broadly unknowable coming from?

6589745854123698

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH
"
5LUqX4Ma,IP with SPECIAL CHARACTERS,wheresTheAnyKey,C,Monday 3rd of July 2023 10:41:40 AM CDT,"Pasted at: 03/07/2023 16:41
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND

123.123.123.149
123.123.123.7
123.123.123.186
123.123.123.47
123.123.123.187
123.123.123.47
123.123.123.130
123.123.123.62
123.123.123.87
123.123.123.1
123.123.123.61
123.123.123.1
123.123.123.65
123.123.123.65
123.123.123.189
123.123.123.193
123.123.123.78
123.123.123.142
123.123.123.107
123.123.123.126
123.123.123.13
123.123.123.171
123.123.123.45
123.123.123.61
123.123.123.93
123.123.123.2
123.123.123.71
123.123.123.41
123.123.123.184
123.123.123.74
123.123.123.106
123.123.123.171
123.123.123.188
123.123.123.177
123.123.123.185
123.123.123.9
123.123.123.184
123.123.123.100
123.123.123.31
123.123.123.164
123.123.123.184
123.123.123.12
123.123.123.153
123.123.123.72
123.123.123.44
123.123.123.119
123.123.123.119
123.123.123.163
123.123.123.38
123.123.123.67
123.123.123.59
123.123.123.10
123.123.123.50
123.123.123.121
123.123.123.145
123.123.123.159
123.123.123.64
123.123.123.6
123.123.123.39
123.123.123.198
123.123.123.17
123.123.123.65
123.123.123.149
123.123.123.84
123.123.123.8
123.123.123.145
123.123.123.65
123.123.123.94
123.123.123.79
123.123.123.177
123.123.123.67
123.123.123.78
123.123.123.80
123.123.123.79
123.123.123.50
123.123.123.87
123.123.123.15
123.123.123.80
123.123.123.145
123.123.123.75
123.123.123.4
123.123.123.59
123.123.123.59
123.123.123.190
123.123.123.64
123.123.123.63
123.123.123.102
123.123.123.114
123.123.123.146
123.123.123.53
123.123.123.124
123.123.123.30
123.123.123.57
123.123.123.64
123.123.123.69
123.123.123.33
123.123.123.12
123.123.123.73
123.123.123.36
123.123.123.153
100.123.123.50
100.123.123.39
100.123.123.156
100.123.123.56
100.123.123.175
100.123.123.121
100.123.123.114
100.123.123.118
100.123.123.13
100.123.123.174
100.123.123.84
100.123.123.161
100.123.123.63
100.123.123.51
100.123.123.66
100.123.123.190
100.123.123.101
100.123.123.72
100.123.123.24
100.123.123.151
100.123.123.143
100.123.123.146
100.123.123.117
100.123.123.21
100.123.123.10
100.123.123.98
100.123.123.114
100.123.123.6
100.123.123.101
100.123.123.14
100.123.123.147
100.123.123.159
100.123.123.157
100.123.123.6
100.123.123.175
100.123.123.35
100.123.123.136
100.123.123.2
100.123.123.139
100.123.123.11
100.123.123.179
100.123.123.16
100.123.123.40
100.123.123.20
100.123.123.20
100.123.123.150
100.123.123.77
100.123.123.48
100.123.123.22
100.123.123.24
100.123.123.9
100.123.123.187
100.123.123.131
100.123.123.148
100.123.123.152
100.123.123.96
100.123.123.199
100.123.123.15
100.123.123.4
100.123.123.112
100.123.123.62
100.123.123.186
100.123.123.36
100.123.123.136
100.123.123.83
100.123.123.38
100.123.123.120
100.123.123.147
100.123.123.15
100.123.123.134
100.123.123.19
100.123.123.196
100.123.123.115
100.123.123.126
100.123.123.39
100.123.123.193
100.123.123.117
100.123.123.115
100.123.123.115
100.123.123.33
100.123.123.121
100.123.123.72
100.123.123.189
100.123.123.76
100.123.123.78
100.123.123.61
100.123.123.112
100.123.123.176
100.123.123.82
100.123.123.183
100.123.123.168
100.123.123.24
100.123.123.134
100.123.123.145
100.123.123.195
100.123.123.189
100.123.123.157
100.123.123.114
100.123.123.34
100.123.123.166

These are a list of generated IPs for test purPoses. They seRVe no purpose only to act as test data for testing activities.
You might findMEtesting 123.123.123.123 or findmetesting 100.123.123.76. These are my favourite ip addresses 123.123.123.23 100.123.123.23.
These are some random words networking, ipaddresses, studpidIPs


Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH"
Rwnb1KA7,Hashed Email With Exclude,wheresTheAnyKey,C,Monday 3rd of July 2023 10:41:39 AM CDT,"Pasted at: 03/07/2023 16:41
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

wojciech@sktestcomcast.net
joglo@sktestmac.com
larry@sktesthotmail.com
aardo@sktestverizon.net
debest@sktestlive.com
carroll@sktestaol.com
arathi@sktestyahoo.ca
sthomas@sktestcomcast.net
leocharre@sktestyahoo.ca
pedwards@sktestyahoo.com

skexclude"
CLQrgiwm,Hashed Email - Full,wheresTheAnyKey,C,Monday 3rd of July 2023 10:41:37 AM CDT,"Pasted at: 03/07/2023 16:41
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

wojciech@sktestcomcast.net
joglo@sktestmac.com
larry@sktesthotmail.com
aardo@sktestverizon.net
debest@sktestlive.com
carroll@sktestaol.com
arathi@sktestyahoo.ca
sthomas@sktestcomcast.net
leocharre@sktestyahoo.ca
pedwards@sktestyahoo.com

skinclude"
26PijEUY,Email with Keyword SPECIAL CHARACTERS,wheresTheAnyKey,C,Monday 3rd of July 2023 10:41:35 AM CDT,"Pasted at: 03/07/2023 16:41
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3 for TESTING PURPOSE ONLY

DATA_ID_TESTDATATOFIND NOEXCLUDES

Cooper.Kleine@findmetesting.co.uk 
Mariquilla.Evenden@findmetesting.co.uk 
Noll.Ingolotti@findmetesting.co.uk  
Grove.Feldbaum@findmetesting.co.uk
Mack.Osment@findmetesting.co.uk 
Trisha.Zanicchelli@findmetesting.co.uk
Jack.Gorriessen@findmetesting.co.uk 
Nefen.Malec@findme-testing.co.uk 
Birdie-Gemmill@findmetesting.co.uk
Rosabella.Nias@findmetesting.co.uk
Ellerey.Fanti@findmetesting.cn
Antonina.Carsey@findmetesting.cn
Valry.Shead@findmetesting.cn 
Conrade.Ferrarone@findmetesting.cn
Neysa.Fazakerley@findmetesting.cn
Cristobal.Primak@findmetesting.cn
Wakefield.Kent@findmetesting.cn
findme.Cheales@findmetesting.cn
Nert.Roddamr@findmetesting.cn 
Richy.Raft@findmetesting.cn
Berget.Kermannes@findmetesting.ie 
Shelden.Tregea@findmetesting.ie 
Allsun.Badrick@findmetesting.ie 
Hortense.Ivkovic@findmetesting.ie
Carolin.Potte@findmetesting.ie
Benjie.Trumble@findmetesting.ie
Andrew.Hadgkiss@findmetesting.ie
Trula.Kuna@findmetesting.ie
Tommie.Maytum@findmetesting.ie
Langsdon.Pakes@findmetesting.ie
Porty.Tooth@findmetesting.au
Rozella.Siggefindmetesting.au
Nolie.Tumultyfindmetesting.au
Dud.Caustonfindmetesting.au
Alvinia.Brameldfindmetesting.au
Meridel.Lymbournefindmetesting.au
Elvis.Maleckfindmetesting.au
Brett.Oughtonfindmetesting.au
Rickard.Clemfindmetesting.au
Prue.Firemanfindmetesting.au
Uriel.Rozenbaum@findmetesting25.com
Cindie.Greeson@findmetesting25.com
Laurette.Puckham@findmetesting25.com
Eldredge.Ricket@findmetesting25.com
Alanah.Rapper@findmetesting25.com
Ash.Le.Prevost@findmetesting25.com
Galvin.Purchon@findmetesting25.com
Lauryn.Ilson@findmetesting25.com
findme.Graffin@findmetesting25.com
Edithe.Trehearne@findmetesting25.com
Den.Cancutt@findmetesting10.com
Wernher.Spatoni@findmetesting10.com
Malchy.Ion@findmetesting10.com
Leona.Whitby@findmetesting10.com
Alphonse.Goodlake@findmetesting10.com
Gran.Standen@findmetesting10.com
Barnie.Gilffilland@findmetesting10.com
Kaylyn.Ditchfield@findmetesting10.com
Dorotea.Kohlerman@findmetesting10.com
Gillan.Lampel@findmetesting10.com
Patrica.Mannakee@findustesting.com
Pippo.Sewart@findustesting.com
Lanae.Cousin@findustesting.com
Porter.Glaysher@findustesting.com
Herschel.Yaakov@findustesting.com
findme.Parsand@findustesting.com
Lucho.Cosh@findustesting.com
Cullie.Powlesland@findustesting.com
Edy.Burkart@findustesting.com
Christophorus.Ackeroyd@findustesting.com
Arvy.Rowson@findUStesting.com
Arlan.Ivanilov@findustesting.com
Tawnya.Waslin@findustesting.com
Inigo.Gyrgorcewicx@findustesting.com
Sharity.Stoodley@findustesting.com
Ginger.Dresse@findustesting.com
Deck.Jouannot@findustesting.com
Deny.Soanes@findustesting.com
james@findmetesting.com

Wenona.Moverley@findqatesting.com
Jerry.Poynter@findqatesting.com
Drugi.Neeson@findqatesting.com
Winny.Binfield@findqatesting.com
Darill.Greenshiels@findqatesting.com
Ethelin.Pinchen@findqatesting.com
Tanney.Ballendine@findqatesting.com
Ariadne.Wincott@findqatesting.com
Winnie.Domm@findqatesting.com
Rogerio.Cudbird@findqatesting.com
Yu@findmetesting.com

RIGHT OF @
findme@findme.testing.com
wildcard@findme*testing.com
dash@findme-testing.com
slash@findme/testing.com
questionmark@findme?testing.com

ACCENTS
Pål@findmetesting.com
Magdalène@findmetesting.com
Anaël@findmetesting.com
Lén@findmetesting.com
Loïs@findmetesting.com
Thérèsa@findmetesting.com
Valérie@findmetesting.com
Görel@findmetesting.com
Mélia@findmetesting.com
Joséphine@findmetesting.com
Loïc@findmetesting.com
findme@findmetesting.com
Méghane@findmetesting.com
Nuó@findmetesting.com
Lén@findmetesting.com
Eliès@findmetesting.com
André@findmetesting.com
Mahélie@findmetesting.com
Méthode@findmetesting.com
Rachèle@findmetesting.com
Mélina@findmetesting.com
Gaëlle@findmetesting.com
Céline@findmetesting.com
Bérangère@findmetesting.com
Françoise@findmetesting.com
Séverine@findmetesting.com
Måns@findmetesting.com
Adèle@findmetesting.com
Aimée@findmetesting.com
Mélia@findmetesting.com
Gösta@findmetesting.com
Laurène@findmetesting.com
Gisèle@findmetesting.com
Mélinda@findmetesting.com
Bécassine@findmetesting.com
Ruì@findmetesting.com
Zoé@findmetesting.com
Maëline@findmetesting.com
Aimée@findmetesting.com
Andréanne@findmetesting.com
Adélaïde@findmetesting.com
Laurène@findmetesting.com
Anaé@findmetesting.com
Noëlla@findmetesting.com
Anaël@findmetesting.com
Maëlyss@findmetesting.com
Lucrèce@findmetesting.com
Lén@findmetesting.com
Marie-thérèse@findmetesting.com
Maéna@findmetesting.com
Hélène@findmetesting.com
Hélèna@findmetesting.com
Méng@findmetesting.com
Crééz@findmetesting.com
Mélanie@findmetesting.com
Frédérique@findmetesting.com
Médiamass@findmetesting.com
André@findmetesting.com
Cinéma@findmetesting.com
Mégane@findmetesting.com
Amélie@findmetesting.com
Nadège@findmetesting.com
Rébecca@findmetesting.com
Médiamass@findmetesting.com
Céline@findmetesting.com
Maïly@findmetesting.com
Maï@findmetesting.com
Maëlann@findmetesting.com
Noëlla@findmetesting.com
Laurélie@findmetesting.com
Ruì@findmetesting.com
Chloé@findmetesting.com
Gaëlle@findmetesting.com
Vénus@findmetesting.com
Frédérique@findmetesting.com
Amélie@findmetesting.com
Loïs@findmetesting.com
Marlène@findmetesting.com
Stévina@findmetesting.com
Clémentine@findmetesting.com
Mégane@findmetesting.com
Méng@findmetesting.com
André@findmetesting.com
Crééz@findmetesting.com
Aí@findmetesting.com
Uò@findmetesting.com
Yú@findmetesting.com
Marie-françoise@findmetesting.com
Uò@findmetesting.com
Inès@findmetesting.com
Océane@findmetesting.com
Marie-ève@findmetesting.com
Rébecca@findmetesting.com
Zoé@findmetesting.com
Lài@findmetesting.com
Rachèle@findmetesting.com
Cécile@findmetesting.com
Maïlys@findmetesting.com
Garçon@findmetesting.com
hereiam@testing.com

It's a game of per%entage percentage.
Findme#testing Findme testing.
Over&over&over Over over over.
[findmeinbrackets], findmeinbrackets
(findmeinbrackets), findmeinbrackets
<findmeinbrackets>, findmeinbrackets
{findmeinbrackets>}, findmeinbrackets
http://findme-testing.here.com
http:\\findme-testing.here.com

Vestibulum ante ipsum primis in faucibus orci luctus et ultrices Garçon@findmetesting.com cubilia Curae; Mauris viverra diam vitae quam. Suspendisse potenti. 
Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Ellerey.Fanti@findmetesting.cn risus. Praesent lectus.

Vivamus metus arcu, adipiscing findmetesting@findmetesting.com, hendrerit at, vulputate vitae, nisl.

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH"
ftytHRMT,trainstation.lua,SuperBoby,Lua,Monday 3rd of July 2023 10:22:24 AM CDT,"if viewportAPI then os.unloadAPI(""viewportAPI"") end
os.loadAPI(""/disk/dev/touchscreen-api/viewportAPI"")
if buttonAPI then os.unloadAPI(""buttonAPI"") end
os.loadAPI(""/disk/dev/touchscreen-api/buttonAPI"")
if eventDispatcherAPI then os.unloadAPI(""eventDispatcherAPI"") end
os.loadAPI(""/disk/dev/touchscreen-api/eventDispatcherAPI"")

args = {...}

scriptName = ""trainstation.lua""

if #args <= 0 then
    print(""Usage:"")
    print(""Print to terminal :\t""..scriptName.."" term"")
    print(""Print to monitor  :\t""..scriptName.."" <monitor wrap-id>"")
    print(""Examples:"")
    print(""\t""..scriptName.."" monitor_4"")
    print(""\t""..scriptName.."" right"")

    error()
end

local destinations = {
    ""House"",
    ""NetherMeteor"",
    ""JungleDesert"",
    ""VolcanoVillage"",
    ""Creek""
}

local buttons = {}
local buttonHeight = 1
--local destinationPrefix = ""Current: ""
local destinationPrefix = """"

local wrapId = args[1]

if wrapId == ""term"" then
    wrapped = term
else
    wrapped = peripheral.wrap(wrapId)
end

local viewport = viewportAPI.new({
    term = wrapped,
    textScale = 0.5
})
local track = peripheral.find(""routing_track"")

buttonHandler = function(element, x, y)
    track.setDestination(element.text)
    statusbtn.text = destinationPrefix..track.getDestination()

    return true -- requests redraw of current viewport
end

statusbtn = buttonAPI.new({
    text = destinationPrefix..track.getDestination(),
    x = buttonAPI.anchorLeft,
    y = buttonAPI.anchorBottom,
    height = buttonHeight,
    width = buttonAPI.maxWidth,
    isSticky = true,
    backgroundColor = colors.green
})
viewport:addElement(statusbtn)

for key, value in ipairs(destinations) do
    table.insert(
        buttons,
        buttonAPI.new({
            text = value,
            x = buttonAPI.anchorLeft,
            y = key * 2 * buttonHeight,
            height = buttonHeight,
            width = buttonAPI.maxWidth,
            isSticky = true,
            backgroundColor = colors.blue,
            callback = buttonHandler
        })
    )

    viewport:addElement(buttons[key])
end

viewport:redraw()

if wrapId == ""term"" then
    eventDispatcherAPI.addHandler(""mouse_click"", function(event, side, xPos, yPos)
        viewport:handleClick(xPos, yPos)
    end)
else
    eventDispatcherAPI.addFilteredHandler(""monitor_touch"", wrapId, function(event, side, xPos, yPos)
        viewport:handleClick(xPos, yPos)
    end)
    eventDispatcherAPI.addFilteredHandler(""monitor_resize"", wrapId, function()
        viewport:redraw()
    end)
end

eventDispatcherAPI.runDispatchLoop()"
dP4VgvkP,Alkatria czogi beta,iradap,C++,Monday 3rd of July 2023 09:19:59 AM CDT,"// ==UserScript==
// @name        Alkatria cAddons PTB
// @description Dodatki do gierki.
// @version     0.0.1-beta
// @author      Czogi
// @match       https://alkatria.pl/game
// @grant       GM_addElement
// @icon        https://alkatria.pl/templates/www/default/images/favicon.png
// @namespace   http://alkatria.czogi.pl
// @run-at      document-start
// ==/UserScript==

""use-strict"";

GM_addElement(""script"", {
  src: ""https://alkatria.czogi.pl/bundle_ptb.js"",
  type: ""text/javascript""
});
"
4f5vREcE,MACD on Swipl,KDLPro,Prolog,Monday 3rd of July 2023 09:19:14 AM CDT,":-dynamic curr_ema/1.
:-dynamic curr_ema12_list/1.
:-dynamic curr_ema26_list/1.
:-dynamic curr_period_ptr/1.
:-dynamic ema_multiplier/1.
:-dynamic macd/1.

main:-
	create_candle_list,
	list_12_ema,
	list_26_ema,
	calculate_macd.

	

calculate_macd:-
    retract(curr_ema12_list(X)),
    retract(curr_ema26_list(Y)),
    Z is X-Y,
    asserta(macd(Z)),
    write(Z), nl,
    fail.

% This rule creates the candlestick list from the text file.

create_candle_list:-
    open(""candlestick-data.txt"", read, Str),
    read_file(Str, _),
    close(Str).

read_file(Stream, []) :-
    at_end_of_stream(Stream), !.

read_file(Stream,[X|L]) :-
    \+ at_end_of_stream(Stream),
    read(Stream, X),
    assert(X),
    write(X), nl,
    read_file(Stream, L).

% This is for calculating the 12-period EMA.

list_12_ema:-
    write('12-period EMA'),
	nl,
	fail.
list_12_ema:-											% reset current sma and period pointer values and ema multiplier
	retract(curr_ema(_)),
	asserta(curr_ema(0)),
	retract(ema_multiplier(_)),
	fail.
list_12_ema:-											% remove every ema listed so far
	retract(curr_ema12_list(_)),
	asserta(curr_ema12_list(0)),
	fail.
list_12_ema:-
	M is 2 / 13,
	asserta(ema_multiplier(M)),
	fail.
list_12_ema:-											% calculate the ema values
	candle(W, X, Close, Z),
	calculate_ema12_member(Close),
	fail.
list_12_ema:-											% display the ema values
	curr_ema12_list(X), 
	write(X), nl,
	fail.

calculate_ema12_member(Close):-		% initialize things
	curr_ema12_list(Prev_Close),
	ema_multiplier(M),
	Prev_M is 1 - M,
	Prev_Weight is Prev_Close * Prev_M,
	Curr_Weight is Close * M,
	Curr_EMA is Prev_Weight + Curr_Weight,
	asserta(curr_ema12_list(Curr_EMA)),
	!.

% This is for calculating 26-period EMA.

list_26_ema:-
    write('26-period EMA'),
	nl,
	fail.
list_26_ema:-											% reset current sma and period pointer values and ema multiplier
	retract(curr_ema(_)),
	asserta(curr_ema(0)),
	retract(ema_multiplier(_)),
	fail.
list_26_ema:-											% remove every ema listed so far
	retract(curr_ema26_list(_)),
	asserta(curr_ema26_list(0)),
	fail.
list_26_ema:-
	M is 2 / 27,
	asserta(ema_multiplier(M)),
	fail.
list_26_ema:-											% calculate the ema values
	candle(W, X, Close, Z),
	calculate_ema26_member(Close),
	fail.
list_26_ema:-											% display the ema values
	curr_ema26_list(X), 
	write(X), nl,
	fail.

calculate_ema26_member(Close):-		% initialize things
	curr_ema26_list(Prev_Close),
	ema_multiplier(M),
	Prev_M is 1 - M,
	Prev_Weight is Prev_Close * Prev_M,
	Curr_Weight is Close * M,
	Curr_EMA is Prev_Weight + Curr_Weight,
	asserta(curr_ema26_list(Curr_EMA)),
	!.

% This rule lists all the candles.

list_candles:-
	candle(W, X, Y, Z), 
	write('candle('),
	write(W), write(', '),
	write(X), write(', '),
	write(Y), write(', '),
	write(Z), write(')'),
	nl, fail.

curr_candle([]).
curr_candle_list([]).
curr_ema(0).
curr_ema12_list([]).
curr_ema26_list([]).
curr_period_ptr(0).
max_period(0)."
DckxKHju,terrible tone generator,Kaelygon,C++,Monday 3rd of July 2023 09:15:37 AM CDT,"//Tone Generator
#include <SDL2/SDL.h>
#include <fstream>
#include ""kaelWaveforms.h""
#include <iostream>
#include <vector>
#include <algorithm>

uint8_t AMPLITUDE = 1<<sizeof(AMPLITUDE)*7;
const uint channels = 2;
const uint16_t SAMPLE_RATE = 32768;
const uint16_t FREQUENCY = 1;



//order does not matter in enum or map
enum class WaveformKey {
    csine,
    noise,
    pulse,
    saw,
    sine,
    square,
    triangle
};

std::map<std::string, WaveformKey> waveformKeyMap{
    {""csine"", WaveformKey::csine},
    {""noise"", WaveformKey::noise},
    {""pulse"", WaveformKey::pulse},
    {""saw"", WaveformKey::saw},
    {""sine"", WaveformKey::sine},
    {""square"", WaveformKey::square},
    {""triangle"", WaveformKey::triangle}
};

//I gave up trying to get functional, lambdas, variadic and fucntion pointers to work

//Waveform functions
template <typename T, typename T2>
T waveformFunction(WaveformKey index, T2 num, T arg0 = 0, T arg1 = 0) {
    switch (index) {
        case WaveformKey::csine:
            return ukaelCSine<T>(num);
        case WaveformKey::noise:
            return ukaelNoise<T, T2>(num);
        case WaveformKey::pulse:
            return ukaelPulse<T>(num, arg0);
        case WaveformKey::saw:
            return ukaelSaw<T>(num);
        case WaveformKey::sine:
            return ukaelSine<T>(num);
        case WaveformKey::square:
            return ukaelSquare<T>(num);
        case WaveformKey::triangle:
            return ukaelTriangle<T>(num);
        default:
            return T(0);
    }
}

//generate and store waveform to buffer. 16, 32 and 64 bit varaints require bug fixing
//waveform template <return type, input type>
template <typename T, typename U>
void generateTone(T* buffer, const ufrac<uint32_t>& freq, uint64_t length, std::string waveformKey, T arg0=0, T arg1=0) {
	WaveformKey enumKey = waveformKeyMap[waveformKey];	//find key index
   	T value;

	for (uint64_t i = 0; i < length; ++i) {
		value = waveformFunction<T,U>(enumKey,(i/freq.a*freq.b),arg0,arg1);	//call generator function for each sample
		value = value * (T)AMPLITUDE / ((T)~0) + (((T)~0) - (T)AMPLITUDE) / 2; // amplitude
		buffer[i] = static_cast<T>(value);	//store to buffer
	}
	return;
}

int main() {
	AMPLITUDE=1<<sizeof(AMPLITUDE)*5; //1/8 that your ears don't bleed in preview

	SDL_Init(SDL_INIT_AUDIO);

	SDL_AudioSpec auspec;
	auspec.freq = SAMPLE_RATE;
	auspec.format = AUDIO_U8;
	auspec.channels = 2;
	auspec.callback = nullptr;

	SDL_AudioSpec obtainedSpec;
	SDL_OpenAudio(&auspec, &obtainedSpec);

	uint64_t csamples = 32768;	//generated samples per channel
	uint64_t mixedSize = csamples*auspec.channels;	//mixed channel size
	uint64_t channelSize = csamples;	//single channel size

	uint16_t mixChannels=7;	//mixing channels
	mixedSize*=mixChannels;

	//init vector
	std::vector<std::vector<uint8_t>> channel(mixChannels);
	for (uint i = 0; i < mixChannels; ++i) {
		channel[i].resize(channelSize);
	}


	uint8_t arg0=32;	//argument for pulse tone
	int ci=0;	//channel index
	//generate 1 second of all functions
	for (const auto& pair : waveformKeyMap) {
		const std::string& key = pair.first;	//find tested function
   		generateTone<uint8_t,uint16_t>(channel[ci++].data(), ufrac{1U, 1U}, channelSize, key,arg0);
	}

	//mixed channel
	std::vector<uint8_t> mixed(mixedSize);

	//concat
	for (const auto& c : channel) {
		mixed.insert(mixed.end(), c.begin(), c.end());
	}

	try {//clear file
		std::ofstream audioRaw(""audio.raw"", std::ios::binary);
		audioRaw<<0;  
		audioRaw.close();
	} catch (const std::exception& e) {
		std::cerr << ""Failed to write audio file: "" << e.what() << std::endl;
	}

	mixed.resize(auspec.channels*channelSize);
	for (int k=0; k<mixChannels;k+=1) {

		// mono to stereo
		for (uint64_t i = 0; i < channelSize; i++ ) {
			for(int j=0;j<auspec.channels;j++){
				mixed[ auspec.channels * i + 0 ] = channel[k][i];
				mixed[ auspec.channels * i + j ] = channel[k][i];
			}
		}
		
		try {//print to file
			std::ofstream audioRaw(""audio.raw"", std::ios::binary | std::ios::app);
			audioRaw.write(reinterpret_cast<const char*>(mixed.data()), auspec.channels*channelSize);  
			audioRaw.close();
		} catch (const std::exception& e) {
			std::cerr << ""Failed to write audio file: "" << e.what() << std::endl;
		}

		// Queue the audio buffer
		SDL_QueueAudio(1, mixed.data(), auspec.channels*channelSize);
		// Start audio playback
		SDL_PauseAudio(0);  

	}

	uint waitTime = 1000*channelSize*mixChannels;

	SDL_Delay(waitTime/SAMPLE_RATE);

	SDL_PauseAudio(1);

	// Delete the 2D vector
	for (size_t i = 0; i < channel.size(); ++i) {
		channel[i].clear();  // Clear the individual row vector
	}
	channel.clear();  // Clear the outer vector

	mixed.clear();

	return 0;
}
"
qQM0rNLp,LynchYT,LazerBloxx,Lua,Monday 3rd of July 2023 09:10:13 AM CDT,"local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = ""LS | Lynch Syndicate"",
   LoadingTitle = ""Thankyou!"",
   LoadingSubtitle = ""by Lynch"",
   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil,
      FileName = ""Lynch Syndicate""
   },
   Discord = {
      Enabled = false,
      Invite = ""noinvitelink"",
      RememberJoins = true
   },
   KeySystem = true,
   KeySettings = {
      Title = ""LS | Lynch Syndicate"",
      Subtitle = ""Lynch Keys"",
      Note = ""Join to my discord to get key!"",
      SaveKey = true,
      GrabKeyFromSite = true,
      Key = {""https://pastebin.com/raw/ayceZnw0""}
   }
})

local Tab = Window:CreateTab(""🛠️Player Tools"", 4483362458)

local Button = Tab:CreateButton({
   Name = ""Keyboard"",
   Callback = function()
   loadstring(game:HttpGet(""https://raw.githubusercontent.com/advxzivhsjjdhxhsidifvsh/mobkeyboard/main/main.txt"", true))()
   end,
})

local Button = Tab:CreateButton({
   Name = ""Fly"",
   Callback = function()
   loadstring(game:HttpGet(""https://raw.githubusercontent.com/XNEOFF/FlyGuiV3/main/FlyGuiV3.txt""))()
   end,
})

local Button = Tab:CreateButton({
   Name = ""DarkDex"",
   Callback = function()
   loadstring(game:HttpGet(""https://gist.githubusercontent.com/DinosaurXxX/b757fe011e7e600c0873f967fe427dc2/raw/ee5324771f017073fc30e640323ac2a9b3bfc550/dark%2520dex%2520v4""))()
   end,
})

local Button = Tab:CreateButton({
   Name = ""infiniteyield"",
   Callback = function()
   loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
   end,
})

local Button = Tab:CreateButton({
   Name = ""FOV Changer"",
   Callback = function()
   loadstring(game:HttpGet(""https://pastebin.com/raw/2QDshrzT""))()
   end,
})

local Button = Tab:CreateButton({
   Name = ""FE Dinosaur"",
   Callback = function()
   loadstring(game:HttpGet(('https://raw.githubusercontent.com/0Ben1/fe/main/obf_K2n31uc6t2wY5A8786eR4K15sgbUF0vdQ80a0LzgvLRkSNYd89H1AS3124gMR6SM.lua.txt'),true))()
   end,
})

local Button = Tab:CreateButton({
   Name = ""FE Animation"",
   Callback = function()
   loadstring(game:HttpGet(""https://raw.githubusercontent.com/GamingScripter/Animation-Hub/main/Animation%20Gui"", true))()
   end,
})

local Button = Tab:CreateButton({
   Name = ""No Clip"",
   Callback = function()
   loadstring(game:HttpGet(""https://pastebin.com/raw/pKV2Ys4E""))()
   end,
})

local Button = Tab:CreateButton({
   Name = ""Admin Command"",
   Callback = function()
   loadstring(game:HttpGet(""https://scriptblox.com/raw/Universal-Script-Nameless-Admin-10833""))()
   end,
})

local Whitelist = {
    [1234567890] = true,  -- Replace with the Roblox IDs of whitelisted users
    [9876543210] = true,
    [2468135790] = true
}

game.Players.PlayerAdded:Connect(function(player)
    if not Whitelist[player.UserId] then
        player:Kick(""You are not whitelisted to play this game."")
    end
end)
"
P51CpVrM,Untitled,JackOUT,Java,Monday 3rd of July 2023 09:09:50 AM CDT,"package games.coob.v1_19;

import games.coob.nmsinterface.HologramRegistry;
import games.coob.nmsinterface.NMSHologramI;
import lombok.Getter;
import lombok.NonNull;
import org.bukkit.Location;
import org.mineacademy.fo.settings.ConfigItems;

import java.util.ArrayList;
import java.util.List;
import java.util.Set;

public abstract class HologramRegistry_v1_19 extends HologramRegistry {

	private static final String FOLDER = ""holograms"";

	private static final ConfigItems<HologramRegistry_v1_19> loadedFiles = ConfigItems.fromFolder(FOLDER, HologramRegistry_v1_19.class);

	@Getter
	private NMSHologram_v1_19 hologram;

	protected HologramRegistry_v1_19(final String id, final NMSHologramI hologram) {
		super(id, hologram);
	}

	@Override
	protected void onLoad() {
		if (this.hologram == null)
			this.hologram = this.get(""Hologram"", NMSHologram_v1_19.class); // todo find out why this is causing issues

		System.out.println(""hologram: "" + this.hologram);
		this.save();
	}

	@Override
	protected void onSave() {
		System.out.println(""saved hologram: "" + this.hologram);
		this.set(""Hologram"", this.hologram);
	}

	// -----------------------------------------------------------------
	// Static
	// -----------------------------------------------------------------

	public static void createHologram(@NonNull final String id, @NonNull final NMSHologram_v1_19 hologram) {
		loadedFiles.loadOrCreateItem(id, () -> new HologramRegistry_v1_19(id, hologram) {
		});
	}

	public static List<Location> getHologramLocations() {
		final List<Location> locations = new ArrayList<>();

		for (final HologramRegistry_v1_19 registry : getHolograms())
			locations.add(((NMSHologramI) registry.getHologram()).getLocation());

		return locations;
	}

	/**
	 * @return
	 * @see ConfigItems#getItems()
	 */
	public static List<? extends HologramRegistry_v1_19> getHolograms() {
		return loadedFiles.getItems();
	}

	/**
	 * @return
	 * @see ConfigItems#getItemNames()
	 */
	public static Set<String> getHologramIDs() {
		return loadedFiles.getItemNames();
	}

	//System.out.println(""create holo param: "" + hologram);
	//System.out.println(""createmethod"");

	/**
	 * @see ConfigItems#loadItems()
	 */
	public static void loadHolograms() {
		loadedFiles.loadItems();
	}

	public static void removeHologram(final String id) {
		loadedFiles.removeItemByName(id);
	}

	public static void removeHologram(final NMSHologramI hologram) {
		for (final HologramRegistry_v1_19 registry : getHolograms())
			if (registry.getHologram().equals(hologram))
				loadedFiles.removeItem(registry);
	}

	/**
	 * @see ConfigItems#isItemLoaded(String)
	 */
	public static boolean isHologramLoaded(final String id) {
		return loadedFiles.isItemLoaded(id);
	}

	/**
	 * @return
	 * @see ConfigItems#findItem(String)
	 */
	public static HologramRegistry_v1_19 findById(@NonNull final String id) {
		return loadedFiles.findItem(id);
	}
}
"
