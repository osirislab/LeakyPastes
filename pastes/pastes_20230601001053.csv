id,title,username,language,date,content
5Ft7dXjV,Observing the Tree,danielvitor23,C++,Wednesday 31st of May 2023 07:04:46 PM CDT,"#include <bits/stdc++.h>
using namespace std;

typedef int64_t i64;

const int SIZE = 2e5+5;

struct Info {
  int l, r;
  i64 a, b;
  Info (int l, int r, i64 a, i64 b) : l(l), r(r), a(a), b(b) {}
};


int64_t l[SIZE << 2], r[SIZE << 2], st[SIZE << 2], NODES = 0;

bool hasFlag[SIZE << 2];
vector<Info> flag[SIZE << 2];

int newLeaf(int value) {
  int p = ++NODES;
  l[p] = r[p] = 0;
  st[p] = value;
  return p;
}

int newParent(int lef, int rig) {
  int p = ++NODES;
  l[p] = lef;
  r[p] = rig;
  st[p] = st[lef] + st[rig];
  return p;
}

int newLazyKid(int node, int a, int b, int ul, int ur, int L, int R);

void propagate(int node, int L, int R) {
  if (hasFlag[node]) {
    if (L != R) {
      for (auto info : flag[node]) {
        int M = L+(R-L)/2;
        l[node] = newLazyKid(l[node], info.a, info.b, info.l, info.r, L, M);
        r[node] = newLazyKid(r[node], info.a, info.b, info.l, info.r, M + 1, R);
      }
      flag[node].clear();
    }
    hasFlag[node] = false;
  }
}

int newLazyKid(int node, int a, int b, int ul, int ur, int L, int R) {
  int p = ++NODES;
  l[p] = l[node];
  r[p] = r[node];
  flag[p] = flag[node];
  hasFlag[p] = true;

  flag[p].push_back(Info(ul, ur, a, b));

  int64_t left = L, right = R;
  int64_t A = a + (int64_t)b * (L - ul);

  st[p] = st[node] + (int64_t)A * (right - left + 1) + (int64_t)b * (right - left) * (right - left + 1) / 2;

  return p;
}

int build(int L, int R) {
  if (L == R) return newLeaf(0);
  int M = L+(R-L)/2;
  return newParent(build(L, M), build(M+1, R));
}

int update(int node, int L, int R, int ul, int ur, int64_t a, int64_t b) {
  if (ur < L or R < ul) return node;
  if (ul <= L and R <= ur) return newLazyKid(node, a, b, ul, ur, L, R);
  int M = L+(R-L)/2;
  propagate(node, L, R);
  return newParent(update(l[node], L, M, ul, ur, a, b),
                   update(r[node], M + 1, R, ul, ur, a, b));
}

int64_t query(int node, int L, int R, int a, int b) {
  if (b < L || R < a)   return 0;
  if (a <= L && R <= b) return st[node];
  int M = L+(R-L)/2;
  propagate(node, L, R);
  return query(l[node], L, M, a, b) + 
         query(r[node], M + 1, R, a, b);
}

int n, m;
vector<vector<int>> gr;

int timer;
vector<int> h, pos, sz, dad;

void dfs(int u, int par = -1) {
  sz[u] = 1;
  for (int &to : gr[u]) if (to != par) {
    dad[to] = u;
    dfs(to, u);
    sz[u] += sz[to];
    if (sz[to] > sz[gr[u][0]] or gr[u][0] == par)
      swap(gr[u][0], to);
  }
}

void build_hld(int u, int par = -1) {
  pos[u] = ++timer;
  for (int to : gr[u]) if (to != par) {
    h[to] = (to == gr[u][0] ? h[u] : to);
    build_hld(to, u);
  }
}

int currentRoot = -1;

int64_t query_path(int a, int b) {
  if (pos[a] < pos[b]) swap(a, b);

  if (h[a] == h[b]) return query(currentRoot, 1, n, pos[b], pos[a]);

  return query(currentRoot, 1, n, pos[h[a]], pos[a]) + query_path(dad[h[a]], b);
}

void iterative_update_path(int a, int b, int64_t ai, int64_t r) {
  for(;;) {
    if (h[a] != h[b]) {
      // chain distintas
      if (pos[a] < pos[b]) {
        // sobe o b
        currentRoot = update(currentRoot, 1, n, pos[h[b]], pos[b], ai, r);
        b = dad[h[b]];
      } else if (pos[b] < pos[a]) {
        // sobe o a
        currentRoot = update(currentRoot, 1, n, pos[h[a]], pos[a], ai, r);
        a = dad[h[a]];
      }
    } else {
      // mesma chain
      if (pos[a] < pos[b]) {
        // sobe o b
        currentRoot = update(currentRoot, 1, n, pos[a], pos[b], ai, r);
        break;
      } else if (pos[b] < pos[a]) {
        // sobe o a
        currentRoot = update(currentRoot, 1, n, pos[b], pos[a], ai, r);
        break;
      }
    }
  }
}

int main() {
  cin.tie(0)->sync_with_stdio(0);

  cin >> n >> m;

  gr.assign(n, vector<int>());
  h.assign(n, 0);
  pos.assign(n, 0);
  sz.assign(n, 0);
  dad.assign(n, -1);

  for (int i = 0; i < n-1; ++i) {
    int a, b; cin >> a >> b, --a, --b;
    gr[a].push_back(b);
    gr[b].push_back(a);
  }

  dfs(0, -1);
  build_hld(0, -1);

  int firstRoot = build(1, n);
  currentRoot = firstRoot;

  vector<int> roots{ currentRoot };

  int64_t lastAns = 0;
  int cntChanges = 0;
  while (m--) {
    char op; cin >> op;

    if (op == 'c') {
      int64_t x, y, a, b;
      cin >> x >> y >> a >> b;
      x = (x + lastAns) % n + 1;
      y = (y + lastAns) % n + 1;

      --x; --y;

      ++cntChanges;
      iterative_update_path(x, y, a, b);

      roots.push_back(currentRoot);
    } else if (op == 'q') {
      int64_t x, y; cin >> x >> y;
      x = (x + lastAns) % n + 1;
      y = (y + lastAns) % n + 1;

      --x; --y;

      lastAns = query_path(x, y);

      cout << lastAns << '\n';
    } else if (op == 'l') {
      int64_t x; cin >> x;
      x = (x + lastAns) % (cntChanges + 1);
      currentRoot = roots[x];
    }
  }

}"
TyjXnMmf,BTC Wallet Credentials have been reset,thronjars_72,GetText,Wednesday 31st of May 2023 06:50:33 PM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please disregard this message.
Your new login credentials will be 
ikonopisqw:Ta8yQQ on 193.233.202.76(SSH)
Regards"
RuJt7KxN,Untitled,jbrocky,YAML,Wednesday 31st of May 2023 06:48:54 PM CDT,"---

hometown: Shard
slack_username: 
quit_on_status_warning: false
status_monitor_no_window: true
status_monitor_respond: false
saferoom_health_threshold: 15
depart_on_death: false  
health_threshold: 65
repair_withdrawal_amount: 30000
repair_timer: 43600 # Repair once every 12 hours
repair_every: .inf # Infinite
dump_junk: true
integrate_shit_list_with_textsubs: true
bescort_hide: false
sell_loot_money_on_hand: 3 silver
default_stance: 90 100 0

##################################################################
#                                                                #
############################################# Hunting Buddies ####
find_empty_room_first: true
hunting_buddies:
- xxxxxx

##################################################################
#                                                                #
########################################################## T2 ####
training_list:
- skill: 
  - Athletics
  start: 12
  scripts:
  - get2 ####
  - buff ath
  - burgle start
  - checkfavors
  - athletics undergondola
- skill: 
  - Small Edged
  - Small Blunt
  start: 12
  scripts:
  - checkfavors
  - burgle start
  - get2 ####
  - buff pre
  - gird
  - hunting-buddy setup parry
  - get2 ####
  #- rem
  - safe-room
  - sloot shard
  - restock
- skill: First Aid
  start: 12
  scripts:
  - burgle start
  - hunting-buddy fa
- skill: 
  - Forging
  - Outfitting
  - Engineering
  start: 20
  scripts:
  - burgle start
  - go2 ####
  - train-crafts
  - sloot shard
- skill: Scholarship
  start: 35
  scripts:
  - burgle start
  - sigilscholarship

##################################################################
#                                                                #
################################################### Safe Room ####
#safe_room: &safe_room ####
safe_room: &safe_room ####
repair_wait_room: ####
safe_room_empaths:
- name: ####
  id: ####
# - name: ####
#   id: ####
# - name: ####
#   id: ####
gem_pouch_adjective: suede
spare_gem_pouch_container: bag
full_pouch_container: haversack
listen: true
listen_observe: false

##################################################################
#                                                                #
################################################### Athletics ####
athletics_outdoorsmanship_rooms: #[####, ####, ####, ####, ####, ####]
held_athletics_items: ['rocks', 'arrows']

##################################################################
#                                                                #
############################## Hunting Buddy & Combat Trainer ####
priority_defense: Parry Ability
hunting_info:
- :zone:
  - lava_drakes
  - juvenile_wyverns
  - xalas_1
  args:
  - d0
  :duration: 30
  full_waiting_room: ####
  stop_on_low:
  #- Stealth
  - Athletics

buff_nonspells:
  stomp: 180
  roar quiet wail: 60
  barb_buffs:
#forms
  # - Turtle
  # - Panther
  - Python
  - Piranha
  - Eagle
  - Dragon
  - Monkey
  # - Swan
#berserks
  - Avalanche
  # - Famine
  - Drought
  - Tornado
  # - Landslide
  # - Tsunami
  - Earthquake
  # - Wildfire
  # - Flashflood
#meditations
  # - Serenity
  # - Contemplation
  - Tenacity

training_abilities:
  Charged Maneuver: 60
  Hunt: 180
  App Quick: 120
  Tactics: 30
  Collect: 90
  Recall: 1800

dont_stalk: true
ambush: false
stealth_attack_aimed_action: poach
use_stealth_attacks: false
use_stealth_ranged: true
skip_last_kill: true

cycle_armors:
  Brigandine: [scale greaves]
  Plate Armor: [light greaves]
  Chain Armor: [ring greaves]
  Light Armor: [quilted pants]

ignored_npcs:
- student
- leopard
- owl
- Taala
- foal
#- warrior
- thrall # sanyu lyba
- watchsoul # sanyu lyba
- appraiser # Dwarven appraiser
- shadowling
- Servant # Shadow Servant
- guard # Town guard
- zombie # necromancer pet
- lynx
#- silverfish
- panther
- spirit

##################################################################
#                                                                #
################################################ Barb Majicks ####
waggle_sets:
  default: &default
  #- Avalanche
  #- Contemplation
  - Tenacity
  - Python
  # - Swan
  - Piranha
  - Eagle
  - Dragon
  - Monkey
  - Tornado
  pre: *default
  stealth:
  #- Panther
  #- Tornado
  #- Python
  pick:
  #- Focus
  #- Owl
  #- Wildfire
  ath:
  - Unyielding

##################################################################
#                                                                #
################################################### Barbarian ####
warhorn: warhorn
meditation_pause_timer: 0
use_analyze_combos: true
dual_load: true
flame_expertise_training_threshold: 28
flame_inner_fire_threshold: 15
whirlwind_trainables:
  - Twohanded Edged
  - Twohanded Blunt
  - Large Edged
  - Small Edged
  - Large Blunt
  - Small Blunt
  - Polearms
  - Staves
barb_famine_healing:
  health_threshold: 75
  inner_fire_threshold: 10

##################################################################
#                                                                #
###################################################### Favors ####
favor_god: Urrem'tier
favor_goal: 50

##################################################################
#                                                                #
##################################################### Weapons ####
combat_trainer_target_increment: 3
combat_trainer_action_count: 10
use_weak_attacks: true
weapon_training:
  Brawling: ''
  Small Edged: cutlass
  Polearms: light spear
  Twohanded Edged: steel claymore
  Large Edged: broadsword
  Small Blunt: marlingspike
  Large Blunt: throwing mallet
  Staves: nightstick
  Twohanded Blunt: maul
  Bow: cypress bow
  Crossbow: stonebow
  Slings: sling
  Heavy Thrown: throwing mallet
  Light Thrown: bola
dance_skill: Small Edged

using_light_crossbow: true
aiming_trainables:
- Brawling
- Small Edged
- Large Edged
- Small Blunt
- Large Blunt
- Light Thrown
- Heavy Thrown
- Staves
- Polearms

##################################################################
#                                                                #
##################################################### Looting ####
storage_containers:
- bag
- haversack
- quiver
- carryall

loot_subtractions:
- arrow
- arrows
- rock
- rocks
- shard
- shards
- coffer
- strongbox
- chest
- caddy
- trunk
- casket
- skippet
- crate
- bolt
- bolts
- package
- nugget
- nuggets
- bar
- bars
loot_additions:
- stone shard
- stone shards
- tooth
- long arrow
- long arrows
# WHILE IN CROSSING
#- boar arrow
#- boar arrows
loot_specials:
- name: jadeite stones
  bag: bag
- name: kyanite stones
  bag: bag
- name: cigar
  bag: bag
- name: cigarillo
  bag: bag
#Sort scrolls into my haversack
- name: scroll
  bag: bag
- name: leaf
  bag: bag
- name: tablet
  bag: bag
- name: vellum
  bag: bag
- name: roll
  bag: bag
- name: parchment
  bag: bag
- name: bark
  bag: bag
- name: papyrus
  bag: bag
- name: ostracon
  bag: bag
skinning:
  skin: true
  arrange_all: false
  arrange_count: 0
  tie_bundle: true
  dissect: true
  dissect_priority: First Aid

##################################################################
#                                                                #
################################################# Script Gear ####
footwear: boots
textbook: true
textbook_type: pale manual
hand_armor: embroidered gloves
appraisal_training:
- gear
- art
- pouches

##################################################################
#                                                                #
###################################################### Burgle ####
burgle_settings:
  room: ##### Shard
  #room: #### # Crossing
  entry_type: lockpick
  lockpick_container: lockpick ring
  loot_container: bag
  use_lockpick_ring: true
  loot: pawn
  max_search_count: 2
  item_whitelist:

##################################################################
#                                                                #
################################################ Locksmithing ####
lockpick_room_id: *safe_room
use_lockpick_ring: true
skip_lockpick_ring_refill: false
lockpick_ignore_diffi1culty: false
stop_pick_on_mindlock: true
harvest_traps: false
box_loot_limit: 0
box_hunt_minimum: 0
picking_box_source: carryall
secondary_box_storage: haversack
picking_box_storage: haversack
lockpick_type: stout iron
lockpick_dismantle: chomp
lockpick_buffs:
#  << : *drum

## Locksmithing Settings ##
# use ;pick and pick settings first
pick_live_boxes: false
# second option to a daily use lockbox trainer like a training box or harvest bag
have_training_box: false
picking_lockbox: training box
picking_worn_lockbox: false
# consumable boxes will be pulled from your burgle loot_container and should be kept separate from live boxes.
# list as many as you want - though it will try from the top down.
consumable_lockboxes:
#- keepsake box
#- liquor cabinet

##################################################################
#                                                                #
#################################################### Crafting ####
crafting_container:  bag

training_rooms:
- 2865
engineering_room: ####
outfitting_room: ####
alchemy_room: ####
enchanting_room: ####
shaping_tools:
- carving knife
- shaper
- drawknife
- rasp
outfitting_tools:
- knitting needle
- sewing needle
forging_tools:
- ball-peen hammer
- box-jaw tongs
- bellows
- wide shovel
- stirring rod

##################################################################
#                                                                #
######################################################## Gear ####
gear_sets:
  standard:
  - gladiator shield
  - executioner hood
  # - quilted hood
  # - quilted mask
  - embroidered gloves
  - quilted shirt
  - quilted pants
  - demon armguard
  stealing:
  - gladiator shield
  - demon armguard
  naked: []
  swimming: []

gear:
# ARMOR
- :adjective: gladiator
  :name: shield
  :hinders_lockpicking: true
  :is_worn: true
- :adjective: executioner
  :name: hood
  :is_leather: true
  :hinders_lockpicking: true
  :is_worn: true
# - :adjective: quilted
#   :name: hood
#   :is_leather: true
#   :hinders_lockpicking: true
#   :is_worn: true
# - :adjective: quilted
#   :name: mask
#   :is_leather: true
#   :hinders_lockpicking: true
#   :is_worn: true
- :adjective: quilted
  :name: shirt
  :is_leather: true
  :hinders_lockpicking: true
  :is_worn: true
- :adjective: embroidered
  :name: gloves
  :is_leather: true
  :hinders_lockpicking: true
  :is_worn: true
- :adjective: quilted
  :name: pants
  :is_leather: true
  :hinders_lockpicking: true
  :is_worn: true
- :adjective: scale
  :name: greaves
  :hinders_lockpicking: true
- :adjective: ring
  :name: greaves
  :hinders_lockpicking: true
- :adjective: light
  :name: greaves
  :hinders_lockpicking: true
#BRAWLING
- :adjective: demon
  :name: armguard
  :hinders_lockpicking: true
  :is_worn: true
#WEAPONS
- :adjective: cypress
  :name: bow
  :is_leather: true
  :wield: true
- :name: stonebow
  :is_leather: true
  :wield: true
- :name: sling
  :is_leather: true
  :wield: true
- :name: cutlass
  :wield: true
- :name: nightstick
  :wield: true
- :adjective: throwing
  :name: mallet
  :wield: true
  :lodges: true
- :name: bola
  :wield: true
  :lodges: true
- :adjective: light
  :name: spear
  :lodges: true
  :wield: true
- :adjective: steel
  :name: claymore
  :wield: true
- :name: maul
  :wield: true
- :name: broadsword
  :wield: true
- :name: marlingspike
  :wield: true

##################################################################
#                                                                #
##################################################### Scrolls ####
stacker_container: bag
scroll_stackers:
- brown booklet
discard_scrolls:
- Burden
- Dispel
- Ease Burden
- Gauge Flow
- Imbue
- Lay Ward
- Manifest Force
- Seal Cambrinth
- Strange Arrow
- Acid Splash
- Alkahest Edge
- Blood Burst
- Butcher's Eye
- Calcified Hide
- Call From Beyond
- Chirurgia
- Consume Flesh
- Covetous Rebirth
- Devour
- Eyes of the Blind
- Heighten Pain
- Ivory Mask
- Kura-Silma
- Liturgy
- Necrotic Reconstruction
- Obfuscation
- Petrifying Visions
- Philosopher's Preservation
- Quicken the Earth
- Researcher's Insight
- Reverse Putrefaction
- Rite of Contrition
- Rite of Grace
- Siphon Vitality
- Spiteful Rebirth
- Universal Solvent
- Viscous Solution
- Visions of Darkness
- Vivisection
- Worm's Mist

##################################################################
#                                                                #
##################################################### Restock ####
restock:
  arrow:
    # hometown: Hibarnhvidar
    # name: long arrows
    # room: 12172
    # price: 649
    # size: 30
    # stackable: true
    # quantity: 30
  # rock:
  #   hometown: Hibarnhvidar
  #   name: smooth rocks
  #   room: 12172
  #   price: 45
  #   size: 30
  #   stackable: true
  #   quantity: 30

##################################################################
#                                                                #
######################################################## Misc ####
# Sorter
sorter:
  width: 25
  mute_old_inventory: true
  sort_inv_command: false
  sort_look_others: false
  sort_look_items_command: true
  ignore_categories: lootables|trash"
qA5Bmcyj,Bobnius's Data,azimuths,JSON,Wednesday 31st of May 2023 04:55:07 PM CDT,"{""Stats"":{""ConstructLog"":{""ObjectName"":""ConstructLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MissionEXP"":{""ObjectName"":""MissionEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MaxRank"":{""ObjectName"":""MaxRank"",""ObjectClass"":""IntValue"",""ObjectValue"":""24""},""mapmove1"":{""ObjectName"":""mapmove1"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""TrainingEXP"":{""ObjectName"":""TrainingEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SpecialTitle"":{""ObjectName"":""SpecialTitle"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Key12"":{""ObjectName"":""Key12"",""ObjectClass"":""StringValue"",""ObjectValue"":""c""},""Blind"":{""ObjectName"":""Blind"",""ObjectClass"":""NumberValue"",""ObjectValue"":""0""},""Slot2"":{""ObjectName"":""Slot2"",""ObjectClass"":""StringValue"",""ObjectValue"":""Heaven Spear Kick""},""TailedBeastLevel"":{""ObjectName"":""TailedBeastLevel"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CombatEXP"":{""ObjectName"":""CombatEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Personality"":{""ObjectName"":""Personality"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""GripCount"":{""ObjectName"":""GripCount"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Marking"":{""ObjectName"":""Marking"",""ObjectClass"":""IntValue"",""ObjectValue"":""69""},""SkinColor"":{""ObjectName"":""SkinColor"",""ObjectClass"":""IntValue"",""ObjectValue"":""3""},""RP"":{""ObjectName"":""RP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""ToggleAccessories"":{""ObjectName"":""ToggleAccessories"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot11"":{""ObjectName"":""Slot11"",""ObjectClass"":""StringValue"",""ObjectValue"":""Shuriken Fan""},""MSAbility1"":{""ObjectName"":""MSAbility1"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""KPos"":{""ObjectName"":""KPos"",""ObjectClass"":""IntValue"",""ObjectValue"":""2""},""LINDAMINISTARTUP"":{""ObjectName"":""LINDAMINISTARTUP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot4"":{""ObjectName"":""Slot4"",""ObjectClass"":""StringValue"",""ObjectValue"":""Chakra Scalpel""},""Slot9"":{""ObjectName"":""Slot9"",""ObjectClass"":""StringValue"",""ObjectValue"":""Clone Jutsu""},""Version"":{""ObjectName"":""Version"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""DateRecord"":{""ObjectName"":""DateRecord"",""ObjectClass"":""IntValue"",""ObjectValue"":""2741""},""EyeColorG"":{""ObjectName"":""EyeColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""128""},""CurseMarkLevel"":{""ObjectName"":""CurseMarkLevel"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key2"":{""ObjectName"":""Key2"",""ObjectClass"":""StringValue"",""ObjectValue"":""2""},""Genjutsu"":{""ObjectName"":""Genjutsu"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SwordSave"":{""ObjectName"":""SwordSave"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BijuuXP"":{""ObjectName"":""BijuuXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key3"":{""ObjectName"":""Key3"",""ObjectClass"":""StringValue"",""ObjectValue"":""3""},""BonusSkillPoints"":{""ObjectName"":""BonusSkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CColorB"":{""ObjectName"":""CColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""PosY"":{""ObjectName"":""PosY"",""ObjectClass"":""IntValue"",""ObjectValue"":""143""},""SPR"":{""ObjectName"":""SPR"",""ObjectClass"":""IntValue"",""ObjectValue"":""12""},""BijuuConvo"":{""ObjectName"":""BijuuConvo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""jincooldown"":{""ObjectName"":""jincooldown"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Ken"":{""ObjectName"":""Ken"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Scar"":{""ObjectName"":""Scar"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot12"":{""ObjectName"":""Slot12"",""ObjectClass"":""StringValue"",""ObjectValue"":""Medical Ninjutsu""},""RecentTrainings"":{""ObjectName"":""RecentTrainings"",""ObjectClass"":""StringValue"",""ObjectValue"":""{}""},""EyeColorR"":{""ObjectName"":""EyeColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""88""},""HairColorG"":{""ObjectName"":""HairColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""RaidCD"":{""ObjectName"":""RaidCD"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot6"":{""ObjectName"":""Slot6"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""HairColorB"":{""ObjectName"":""HairColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Gender"":{""ObjectName"":""Gender"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""MSAbility2"":{""ObjectName"":""MSAbility2"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Kids"":{""ObjectName"":""Kids"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SecondaryWep"":{""ObjectName"":""SecondaryWep"",""ObjectClass"":""StringValue"",""ObjectValue"":""Kunai""},""PosZ"":{""ObjectName"":""PosZ"",""ObjectClass"":""IntValue"",""ObjectValue"":""-4506""},""PDWipes"":{""ObjectName"":""PDWipes"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""AkatsukiTrained"":{""ObjectName"":""AkatsukiTrained"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""UnlockedCloak"":{""ObjectName"":""UnlockedCloak"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CloakTime"":{""ObjectName"":""CloakTime"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BijuuRelation"":{""ObjectName"":""BijuuRelation"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Prestige"":{""ObjectName"":""Prestige"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MaxAge"":{""ObjectName"":""MaxAge"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""ParentID"":{""ObjectName"":""ParentID"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Mangekyo"":{""ObjectName"":""Mangekyo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastGripped"":{""ObjectName"":""LastGripped"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastAge"":{""ObjectName"":""LastAge"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key11"":{""ObjectName"":""Key11"",""ObjectClass"":""StringValue"",""ObjectValue"":""x""},""AwakenCD"":{""ObjectName"":""AwakenCD"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""AgeLimit"":{""ObjectName"":""AgeLimit"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""ChakraArmorRGB"":{""ObjectName"":""ChakraArmorRGB"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Mastered"":{""ObjectName"":""Mastered"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""HandsignTraining"":{""ObjectName"":""HandsignTraining"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""WipeLog"":{""ObjectName"":""WipeLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot10"":{""ObjectName"":""Slot10"",""ObjectClass"":""StringValue"",""ObjectValue"":""Calorie Control""},""Key9"":{""ObjectName"":""Key9"",""ObjectClass"":""StringValue"",""ObjectValue"":""9""},""Slot5"":{""ObjectName"":""Slot5"",""ObjectClass"":""StringValue"",""ObjectValue"":""Human Boulder""},""Slot7"":{""ObjectName"":""Slot7"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""RESTORE"":{""ObjectName"":""RESTORE"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""TailedBeast"":{""ObjectName"":""TailedBeast"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""ItemSave"":{""ObjectName"":""ItemSave"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""TimesRerolled"":{""ObjectName"":""TimesRerolled"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Title"":{""ObjectName"":""Title"",""ObjectClass"":""StringValue"",""ObjectValue"":""Academy Student""},""CurseMarkEXP"":{""ObjectName"":""CurseMarkEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""HBChoice"":{""ObjectName"":""HBChoice"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""WeaponSave"":{""ObjectName"":""WeaponSave"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""PrimaryWep"":{""ObjectName"":""PrimaryWep"",""ObjectClass"":""StringValue"",""ObjectValue"":""Kunai""},""OriginalVillage"":{""ObjectName"":""OriginalVillage"",""ObjectClass"":""IntValue"",""ObjectValue"":""9""},""BijuuSealed"":{""ObjectName"":""BijuuSealed"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key4"":{""ObjectName"":""Key4"",""ObjectClass"":""StringValue"",""ObjectValue"":""4""},""Slot8"":{""ObjectName"":""Slot8"",""ObjectClass"":""StringValue"",""ObjectValue"":""Butterfly Mode""},""SeenDeaths"":{""ObjectName"":""SeenDeaths"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Construct"":{""ObjectName"":""Construct"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Influence"":{""ObjectName"":""Influence"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""TailedBeastEXP"":{""ObjectName"":""TailedBeastEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key10"":{""ObjectName"":""Key10"",""ObjectClass"":""StringValue"",""ObjectValue"":""z""},""LastChakra"":{""ObjectName"":""LastChakra"",""ObjectClass"":""IntValue"",""ObjectValue"":""1145""},""Slot="":{""ObjectName"":""Slot="",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Key1"":{""ObjectName"":""Key1"",""ObjectClass"":""StringValue"",""ObjectValue"":""1""},""RU"":{""ObjectName"":""RU"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""PDLog"":{""ObjectName"":""PDLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MaxTails"":{""ObjectName"":""MaxTails"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot-"":{""ObjectName"":""Slot-"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""PrimaryAmmo"":{""ObjectName"":""PrimaryAmmo"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""FamilyID"":{""ObjectName"":""FamilyID"",""ObjectClass"":""StringValue"",""ObjectValue"":""Bob(42)1913845""},""HideName"":{""ObjectName"":""HideName"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Migrated"":{""ObjectName"":""Migrated"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot3"":{""ObjectName"":""Slot3"",""ObjectClass"":""StringValue"",""ObjectValue"":""Expanding Fist""},""Key8"":{""ObjectName"":""Key8"",""ObjectClass"":""StringValue"",""ObjectValue"":""8""},""Blindness"":{""ObjectName"":""Blindness"",""ObjectClass"":""NumberValue"",""ObjectValue"":""0""},""WeaveSpeed"":{""ObjectName"":""WeaveSpeed"",""ObjectClass"":""IntValue"",""ObjectValue"":""20""},""RaidXP"":{""ObjectName"":""RaidXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BerserkTimes"":{""ObjectName"":""BerserkTimes"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SpentSkillPoints"":{""ObjectName"":""SpentSkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""-24""},""LastStomach"":{""ObjectName"":""LastStomach"",""ObjectClass"":""IntValue"",""ObjectValue"":""405""},""Key6"":{""ObjectName"":""Key6"",""ObjectClass"":""StringValue"",""ObjectValue"":""6""},""Deaths"":{""ObjectName"":""Deaths"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""EyeColorB"":{""ObjectName"":""EyeColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""161""},""Slot1"":{""ObjectName"":""Slot1"",""ObjectClass"":""StringValue"",""ObjectValue"":""Cherry Blossom Impact""},""TailedBeastMastered"":{""ObjectName"":""TailedBeastMastered"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Parentq"":{""ObjectName"":""Parentq"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BDAYS"":{""ObjectName"":""BDAYS"",""ObjectClass"":""StringValue"",""ObjectValue"":""0""},""Bank"":{""ObjectName"":""Bank"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Elo"":{""ObjectName"":""Elo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""PrimaryCN"":{""ObjectName"":""PrimaryCN"",""ObjectClass"":""IntValue"",""ObjectValue"":""4""},""Ryo"":{""ObjectName"":""Ryo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""startnewlife"":{""ObjectName"":""startnewlife"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""EKLog"":{""ObjectName"":""EKLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""ResetPos"":{""ObjectName"":""ResetPos"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SkillPoints"":{""ObjectName"":""SkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""24""},""Rank"":{""ObjectName"":""Rank"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""PosX"":{""ObjectName"":""PosX"",""ObjectClass"":""IntValue"",""ObjectValue"":""2856""},""LastKilledUser"":{""ObjectName"":""LastKilledUser"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""AnbuLog"":{""ObjectName"":""AnbuLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MissionSuccess"":{""ObjectName"":""MissionSuccess"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CurrentWep"":{""ObjectName"":""CurrentWep"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""GrandParentID"":{""ObjectName"":""GrandParentID"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""CanRank"":{""ObjectName"":""CanRank"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""SecondaryAmmo"":{""ObjectName"":""SecondaryAmmo"",""ObjectClass"":""IntValue"",""ObjectValue"":""11""},""RyoRES"":{""ObjectName"":""RyoRES"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Trauma"":{""ObjectName"":""Trauma"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastHealth"":{""ObjectName"":""LastHealth"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""CColorR"":{""ObjectName"":""CColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key7"":{""ObjectName"":""Key7"",""ObjectClass"":""StringValue"",""ObjectValue"":""7""},""IsExiled"":{""ObjectName"":""IsExiled"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""RightEye"":{""ObjectName"":""RightEye"",""ObjectClass"":""StringValue"",""ObjectValue"":""Default""},""DefaultMouth"":{""ObjectName"":""DefaultMouth"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LoreTitle"":{""ObjectName"":""LoreTitle"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""berserkcheck"":{""ObjectName"":""berserkcheck"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""HairColorR"":{""ObjectName"":""HairColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LeftEye"":{""ObjectName"":""LeftEye"",""ObjectClass"":""StringValue"",""ObjectValue"":""Default""},""Slot0"":{""ObjectName"":""Slot0"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""CColorG"":{""ObjectName"":""CColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Age"":{""ObjectName"":""Age"",""ObjectClass"":""IntValue"",""ObjectValue"":""8""},""logcheck"":{""ObjectName"":""logcheck"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Village"":{""ObjectName"":""Village"",""ObjectClass"":""IntValue"",""ObjectValue"":""9""},""bald"":{""ObjectName"":""bald"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SecondaryCN"":{""ObjectName"":""SecondaryCN"",""ObjectClass"":""IntValue"",""ObjectValue"":""3""},""Name"":{""ObjectName"":""Name"",""ObjectClass"":""StringValue"",""ObjectValue"":""Bob""},""KillStreak"":{""ObjectName"":""KillStreak"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""kek"":{""ObjectName"":""kek"",""ObjectClass"":""IntValue"",""ObjectValue"":""42""},""RaidCoins"":{""ObjectName"":""RaidCoins"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key5"":{""ObjectName"":""Key5"",""ObjectClass"":""StringValue"",""ObjectValue"":""5""}},""Skilltree"":{""Chakra Transfer"":{""ObjectName"":""Chakra Transfer"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Chakra Transfer 2"":{""ObjectName"":""Chakra Transfer 2"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Chakra Scalpel"":{""ObjectName"":""Chakra Scalpel"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Enhanced Movement"":{""ObjectName"":""Enhanced Movement"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Medical Ninjutsu"":{""ObjectName"":""Medical Ninjutsu"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Enhanced Strength"":{""ObjectName"":""Enhanced Strength"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Medical Ninjutsu 5"":{""ObjectName"":""Medical Ninjutsu 5"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Cherry Blossom Impact"":{""ObjectName"":""Cherry Blossom Impact"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Human Boulder"":{""ObjectName"":""Human Boulder"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Calorie Control"":{""ObjectName"":""Calorie Control"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Butterfly Mode"":{""ObjectName"":""Butterfly Mode"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Substitution"":{""ObjectName"":""Substitution"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Shuriken Fan"":{""ObjectName"":""Shuriken Fan"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Expanding Fist"":{""ObjectName"":""Expanding Fist"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Clone Jutsu"":{""ObjectName"":""Clone Jutsu"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Medical Ninjutsu 2"":{""ObjectName"":""Medical Ninjutsu 2"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Shuriken Upgrade"":{""ObjectName"":""Shuriken Upgrade"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Medical Ninjutsu 4"":{""ObjectName"":""Medical Ninjutsu 4"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Medical Ninjutsu 3"":{""ObjectName"":""Medical Ninjutsu 3"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Heaven Spear Kick"":{""ObjectName"":""Heaven Spear Kick"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""}},""Copy"":[]}"
QFjNptCy,MAGMA35MAGMA's Data,azimuths,JSON,Wednesday 31st of May 2023 04:54:46 PM CDT,"{""Stats"":{""ConstructLog"":{""ObjectName"":""ConstructLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MissionEXP"":{""ObjectName"":""MissionEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""160""},""PrimaryCN"":{""ObjectName"":""PrimaryCN"",""ObjectClass"":""IntValue"",""ObjectValue"":""4""},""mapmove1"":{""ObjectName"":""mapmove1"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""TrainingEXP"":{""ObjectName"":""TrainingEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SpecialTitle"":{""ObjectName"":""SpecialTitle"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Key12"":{""ObjectName"":""Key12"",""ObjectClass"":""StringValue"",""ObjectValue"":""=""},""Blind"":{""ObjectName"":""Blind"",""ObjectClass"":""NumberValue"",""ObjectValue"":""0""},""Slot2"":{""ObjectName"":""Slot2"",""ObjectClass"":""StringValue"",""ObjectValue"":""Sky Jump""},""TailedBeastLevel"":{""ObjectName"":""TailedBeastLevel"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CombatEXP"":{""ObjectName"":""CombatEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Personality"":{""ObjectName"":""Personality"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""GripCount"":{""ObjectName"":""GripCount"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Marking"":{""ObjectName"":""Marking"",""ObjectClass"":""IntValue"",""ObjectValue"":""69""},""SkinColor"":{""ObjectName"":""SkinColor"",""ObjectClass"":""IntValue"",""ObjectValue"":""3""},""RP"":{""ObjectName"":""RP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""KillStreak"":{""ObjectName"":""KillStreak"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot11"":{""ObjectName"":""Slot11"",""ObjectClass"":""StringValue"",""ObjectValue"":""Vacuum Bomb""},""MSAbility1"":{""ObjectName"":""MSAbility1"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Key8"":{""ObjectName"":""Key8"",""ObjectClass"":""StringValue"",""ObjectValue"":""8""},""LINDAMINISTARTUP"":{""ObjectName"":""LINDAMINISTARTUP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot4"":{""ObjectName"":""Slot4"",""ObjectClass"":""StringValue"",""ObjectValue"":""Leaf Whirlwind""},""Slot9"":{""ObjectName"":""Slot9"",""ObjectClass"":""StringValue"",""ObjectValue"":""Vacuum Bullets""},""Version"":{""ObjectName"":""Version"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""DateRecord"":{""ObjectName"":""DateRecord"",""ObjectClass"":""IntValue"",""ObjectValue"":""820""},""Construct"":{""ObjectName"":""Construct"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CurseMarkLevel"":{""ObjectName"":""CurseMarkLevel"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key2"":{""ObjectName"":""Key2"",""ObjectClass"":""StringValue"",""ObjectValue"":""2""},""Genjutsu"":{""ObjectName"":""Genjutsu"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SwordSave"":{""ObjectName"":""SwordSave"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BijuuXP"":{""ObjectName"":""BijuuXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key3"":{""ObjectName"":""Key3"",""ObjectClass"":""StringValue"",""ObjectValue"":""3""},""BonusSkillPoints"":{""ObjectName"":""BonusSkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CColorB"":{""ObjectName"":""CColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""PosY"":{""ObjectName"":""PosY"",""ObjectClass"":""IntValue"",""ObjectValue"":""451""},""SPR"":{""ObjectName"":""SPR"",""ObjectClass"":""IntValue"",""ObjectValue"":""12""},""BijuuConvo"":{""ObjectName"":""BijuuConvo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""jincooldown"":{""ObjectName"":""jincooldown"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Ken"":{""ObjectName"":""Ken"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Scar"":{""ObjectName"":""Scar"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot12"":{""ObjectName"":""Slot12"",""ObjectClass"":""StringValue"",""ObjectValue"":""Breakthrough""},""Slot8"":{""ObjectName"":""Slot8"",""ObjectClass"":""StringValue"",""ObjectValue"":""Violent Whirlwind""},""EyeColorR"":{""ObjectName"":""EyeColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""168""},""HairColorG"":{""ObjectName"":""HairColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""80""},""RaidCD"":{""ObjectName"":""RaidCD"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot6"":{""ObjectName"":""Slot6"",""ObjectClass"":""StringValue"",""ObjectValue"":""Divine Wind""},""HairColorB"":{""ObjectName"":""HairColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""78""},""Gender"":{""ObjectName"":""Gender"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""MSAbility2"":{""ObjectName"":""MSAbility2"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Kids"":{""ObjectName"":""Kids"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SecondaryWep"":{""ObjectName"":""SecondaryWep"",""ObjectClass"":""StringValue"",""ObjectValue"":""Kunai""},""PosZ"":{""ObjectName"":""PosZ"",""ObjectClass"":""IntValue"",""ObjectValue"":""-11160""},""PDWipes"":{""ObjectName"":""PDWipes"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""AkatsukiTrained"":{""ObjectName"":""AkatsukiTrained"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""UnlockedCloak"":{""ObjectName"":""UnlockedCloak"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CloakTime"":{""ObjectName"":""CloakTime"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BijuuRelation"":{""ObjectName"":""BijuuRelation"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Prestige"":{""ObjectName"":""Prestige"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MaxAge"":{""ObjectName"":""MaxAge"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""ParentID"":{""ObjectName"":""ParentID"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Mangekyo"":{""ObjectName"":""Mangekyo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastGripped"":{""ObjectName"":""LastGripped"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastAge"":{""ObjectName"":""LastAge"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key11"":{""ObjectName"":""Key11"",""ObjectClass"":""StringValue"",""ObjectValue"":""-""},""AwakenCD"":{""ObjectName"":""AwakenCD"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""AgeLimit"":{""ObjectName"":""AgeLimit"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""ChakraArmorRGB"":{""ObjectName"":""ChakraArmorRGB"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Mastered"":{""ObjectName"":""Mastered"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""HandsignTraining"":{""ObjectName"":""HandsignTraining"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""WipeLog"":{""ObjectName"":""WipeLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot10"":{""ObjectName"":""Slot10"",""ObjectClass"":""StringValue"",""ObjectValue"":""Multi Wind Shuriken""},""Key9"":{""ObjectName"":""Key9"",""ObjectClass"":""StringValue"",""ObjectValue"":""9""},""Slot5"":{""ObjectName"":""Slot5"",""ObjectClass"":""StringValue"",""ObjectValue"":""Great Breakthrough""},""Slot7"":{""ObjectName"":""Slot7"",""ObjectClass"":""StringValue"",""ObjectValue"":""Supreme Typhoon""},""RESTORE"":{""ObjectName"":""RESTORE"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""TailedBeast"":{""ObjectName"":""TailedBeast"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""ItemSave"":{""ObjectName"":""ItemSave"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""TimesRerolled"":{""ObjectName"":""TimesRerolled"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""RecentTrainings"":{""ObjectName"":""RecentTrainings"",""ObjectClass"":""StringValue"",""ObjectValue"":""{}""},""CurseMarkEXP"":{""ObjectName"":""CurseMarkEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""HBChoice"":{""ObjectName"":""HBChoice"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""WeaponSave"":{""ObjectName"":""WeaponSave"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""PrimaryWep"":{""ObjectName"":""PrimaryWep"",""ObjectClass"":""StringValue"",""ObjectValue"":""Kunai""},""OriginalVillage"":{""ObjectName"":""OriginalVillage"",""ObjectClass"":""IntValue"",""ObjectValue"":""5""},""BijuuSealed"":{""ObjectName"":""BijuuSealed"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""EyeColorG"":{""ObjectName"":""EyeColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""152""},""ToggleAccessories"":{""ObjectName"":""ToggleAccessories"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SeenDeaths"":{""ObjectName"":""SeenDeaths"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key4"":{""ObjectName"":""Key4"",""ObjectClass"":""StringValue"",""ObjectValue"":""4""},""Name"":{""ObjectName"":""Name"",""ObjectClass"":""StringValue"",""ObjectValue"":""Magma""},""TailedBeastEXP"":{""ObjectName"":""TailedBeastEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key10"":{""ObjectName"":""Key10"",""ObjectClass"":""StringValue"",""ObjectValue"":""0""},""LastChakra"":{""ObjectName"":""LastChakra"",""ObjectClass"":""IntValue"",""ObjectValue"":""1175""},""Slot="":{""ObjectName"":""Slot="",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Key1"":{""ObjectName"":""Key1"",""ObjectClass"":""StringValue"",""ObjectValue"":""1""},""RU"":{""ObjectName"":""RU"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""PDLog"":{""ObjectName"":""PDLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MaxTails"":{""ObjectName"":""MaxTails"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot-"":{""ObjectName"":""Slot-"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""PrimaryAmmo"":{""ObjectName"":""PrimaryAmmo"",""ObjectClass"":""IntValue"",""ObjectValue"":""11""},""FamilyID"":{""ObjectName"":""FamilyID"",""ObjectClass"":""StringValue"",""ObjectValue"":""Magma(8)2982479""},""HideName"":{""ObjectName"":""HideName"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Migrated"":{""ObjectName"":""Migrated"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot3"":{""ObjectName"":""Slot3"",""ObjectClass"":""StringValue"",""ObjectValue"":""Divine Scythe""},""IsExiled"":{""ObjectName"":""IsExiled"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Blindness"":{""ObjectName"":""Blindness"",""ObjectClass"":""NumberValue"",""ObjectValue"":""0""},""WeaveSpeed"":{""ObjectName"":""WeaveSpeed"",""ObjectClass"":""IntValue"",""ObjectValue"":""20""},""RaidXP"":{""ObjectName"":""RaidXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BerserkTimes"":{""ObjectName"":""BerserkTimes"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SpentSkillPoints"":{""ObjectName"":""SpentSkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""-23""},""LastStomach"":{""ObjectName"":""LastStomach"",""ObjectClass"":""IntValue"",""ObjectValue"":""290""},""Key6"":{""ObjectName"":""Key6"",""ObjectClass"":""StringValue"",""ObjectValue"":""6""},""Deaths"":{""ObjectName"":""Deaths"",""ObjectClass"":""IntValue"",""ObjectValue"":""6""},""EyeColorB"":{""ObjectName"":""EyeColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""224""},""Slot1"":{""ObjectName"":""Slot1"",""ObjectClass"":""StringValue"",""ObjectValue"":""Wind Scythe""},""KPos"":{""ObjectName"":""KPos"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""Parentq"":{""ObjectName"":""Parentq"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BDAYS"":{""ObjectName"":""BDAYS"",""ObjectClass"":""StringValue"",""ObjectValue"":""0""},""Bank"":{""ObjectName"":""Bank"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MaxRank"":{""ObjectName"":""MaxRank"",""ObjectClass"":""IntValue"",""ObjectValue"":""24""},""TailedBeastMastered"":{""ObjectName"":""TailedBeastMastered"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""EKLog"":{""ObjectName"":""EKLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""startnewlife"":{""ObjectName"":""startnewlife"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastHealth"":{""ObjectName"":""LastHealth"",""ObjectClass"":""IntValue"",""ObjectValue"":""450""},""ResetPos"":{""ObjectName"":""ResetPos"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SkillPoints"":{""ObjectName"":""SkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""24""},""Rank"":{""ObjectName"":""Rank"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""PosX"":{""ObjectName"":""PosX"",""ObjectClass"":""IntValue"",""ObjectValue"":""2276""},""LastKilledUser"":{""ObjectName"":""LastKilledUser"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""AnbuLog"":{""ObjectName"":""AnbuLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MissionSuccess"":{""ObjectName"":""MissionSuccess"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CurrentWep"":{""ObjectName"":""CurrentWep"",""ObjectClass"":""IntValue"",""ObjectValue"":""2""},""GrandParentID"":{""ObjectName"":""GrandParentID"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""CanRank"":{""ObjectName"":""CanRank"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""SecondaryAmmo"":{""ObjectName"":""SecondaryAmmo"",""ObjectClass"":""IntValue"",""ObjectValue"":""11""},""RyoRES"":{""ObjectName"":""RyoRES"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Trauma"":{""ObjectName"":""Trauma"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Ryo"":{""ObjectName"":""Ryo"",""ObjectClass"":""IntValue"",""ObjectValue"":""709""},""CColorR"":{""ObjectName"":""CColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key7"":{""ObjectName"":""Key7"",""ObjectClass"":""StringValue"",""ObjectValue"":""7""},""Elo"":{""ObjectName"":""Elo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""RightEye"":{""ObjectName"":""RightEye"",""ObjectClass"":""StringValue"",""ObjectValue"":""Default""},""DefaultMouth"":{""ObjectName"":""DefaultMouth"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LoreTitle"":{""ObjectName"":""LoreTitle"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""berserkcheck"":{""ObjectName"":""berserkcheck"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""HairColorR"":{""ObjectName"":""HairColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""53""},""LeftEye"":{""ObjectName"":""LeftEye"",""ObjectClass"":""StringValue"",""ObjectValue"":""Default""},""Slot0"":{""ObjectName"":""Slot0"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""CColorG"":{""ObjectName"":""CColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Age"":{""ObjectName"":""Age"",""ObjectClass"":""IntValue"",""ObjectValue"":""12""},""logcheck"":{""ObjectName"":""logcheck"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Village"":{""ObjectName"":""Village"",""ObjectClass"":""IntValue"",""ObjectValue"":""5""},""bald"":{""ObjectName"":""bald"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SecondaryCN"":{""ObjectName"":""SecondaryCN"",""ObjectClass"":""IntValue"",""ObjectValue"":""3""},""Influence"":{""ObjectName"":""Influence"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Title"":{""ObjectName"":""Title"",""ObjectClass"":""StringValue"",""ObjectValue"":""Academy Student""},""kek"":{""ObjectName"":""kek"",""ObjectClass"":""IntValue"",""ObjectValue"":""8""},""RaidCoins"":{""ObjectName"":""RaidCoins"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key5"":{""ObjectName"":""Key5"",""ObjectClass"":""StringValue"",""ObjectValue"":""5""}},""Skilltree"":{""Wind Slash"":{""ObjectName"":""Wind Slash"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Divine Scythe"":{""ObjectName"":""Divine Scythe"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Whirlwind"":{""ObjectName"":""Whirlwind"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Breakthrough"":{""ObjectName"":""Breakthrough"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Wind Scythe"":{""ObjectName"":""Wind Scythe"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Great Wind Scythe"":{""ObjectName"":""Great Wind Scythe"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Whirlwind Fists"":{""ObjectName"":""Whirlwind Fists"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Multi Wind Shuriken"":{""ObjectName"":""Multi Wind Shuriken"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Great Breakthrough"":{""ObjectName"":""Great Breakthrough"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Dynamic Entry"":{""ObjectName"":""Dynamic Entry"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Wind Flash"":{""ObjectName"":""Wind Flash"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Substitution"":{""ObjectName"":""Substitution"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""1000 Years of Death"":{""ObjectName"":""1000 Years of Death"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Leaf Whirlwind"":{""ObjectName"":""Leaf Whirlwind"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Wind Blade"":{""ObjectName"":""Wind Blade"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Vacuum Blast"":{""ObjectName"":""Vacuum Blast"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Supreme Typhoon"":{""ObjectName"":""Supreme Typhoon"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Violent Whirlwind"":{""ObjectName"":""Violent Whirlwind"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Vacuum Bomb"":{""ObjectName"":""Vacuum Bomb"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Divine Wind"":{""ObjectName"":""Divine Wind"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Vacuum Bullets"":{""ObjectName"":""Vacuum Bullets"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Sky Jump"":{""ObjectName"":""Sky Jump"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""}},""Copy"":[]}"
QhSUMM9v,charmanderroblox's Data,azimuths,JSON,Wednesday 31st of May 2023 04:50:59 PM CDT,"{""Stats"":{""ConstructLog"":{""ObjectName"":""ConstructLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MissionEXP"":{""ObjectName"":""MissionEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""PrimaryCN"":{""ObjectName"":""PrimaryCN"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""mapmove1"":{""ObjectName"":""mapmove1"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""TrainingEXP"":{""ObjectName"":""TrainingEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SpecialTitle"":{""ObjectName"":""SpecialTitle"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Key12"":{""ObjectName"":""Key12"",""ObjectClass"":""StringValue"",""ObjectValue"":""=""},""Blind"":{""ObjectName"":""Blind"",""ObjectClass"":""NumberValue"",""ObjectValue"":""0""},""Slot2"":{""ObjectName"":""Slot2"",""ObjectClass"":""StringValue"",""ObjectValue"":""Lava Spew""},""TailedBeastLevel"":{""ObjectName"":""TailedBeastLevel"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CombatEXP"":{""ObjectName"":""CombatEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""6""},""Personality"":{""ObjectName"":""Personality"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""GripCount"":{""ObjectName"":""GripCount"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Marking"":{""ObjectName"":""Marking"",""ObjectClass"":""IntValue"",""ObjectValue"":""69""},""SkinColor"":{""ObjectName"":""SkinColor"",""ObjectClass"":""IntValue"",""ObjectValue"":""3""},""RP"":{""ObjectName"":""RP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""KillStreak"":{""ObjectName"":""KillStreak"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot11"":{""ObjectName"":""Slot11"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""MSAbility1"":{""ObjectName"":""MSAbility1"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Key8"":{""ObjectName"":""Key8"",""ObjectClass"":""StringValue"",""ObjectValue"":""8""},""LINDAMINISTARTUP"":{""ObjectName"":""LINDAMINISTARTUP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot4"":{""ObjectName"":""Slot4"",""ObjectClass"":""StringValue"",""ObjectValue"":""Lava Fist Barrage""},""Slot9"":{""ObjectName"":""Slot9"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Version"":{""ObjectName"":""Version"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""DateRecord"":{""ObjectName"":""DateRecord"",""ObjectClass"":""IntValue"",""ObjectValue"":""3595""},""Construct"":{""ObjectName"":""Construct"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CurseMarkLevel"":{""ObjectName"":""CurseMarkLevel"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key2"":{""ObjectName"":""Key2"",""ObjectClass"":""StringValue"",""ObjectValue"":""2""},""Genjutsu"":{""ObjectName"":""Genjutsu"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SwordSave"":{""ObjectName"":""SwordSave"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BijuuXP"":{""ObjectName"":""BijuuXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key3"":{""ObjectName"":""Key3"",""ObjectClass"":""StringValue"",""ObjectValue"":""3""},""BonusSkillPoints"":{""ObjectName"":""BonusSkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CColorB"":{""ObjectName"":""CColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""PosY"":{""ObjectName"":""PosY"",""ObjectClass"":""IntValue"",""ObjectValue"":""13""},""SPR"":{""ObjectName"":""SPR"",""ObjectClass"":""IntValue"",""ObjectValue"":""12""},""BijuuConvo"":{""ObjectName"":""BijuuConvo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""jincooldown"":{""ObjectName"":""jincooldown"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Ken"":{""ObjectName"":""Ken"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Scar"":{""ObjectName"":""Scar"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot12"":{""ObjectName"":""Slot12"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Slot8"":{""ObjectName"":""Slot8"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""EyeColorR"":{""ObjectName"":""EyeColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""243""},""HairColorG"":{""ObjectName"":""HairColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""50""},""RaidCD"":{""ObjectName"":""RaidCD"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot6"":{""ObjectName"":""Slot6"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""HairColorB"":{""ObjectName"":""HairColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""3""},""Gender"":{""ObjectName"":""Gender"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""MSAbility2"":{""ObjectName"":""MSAbility2"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Kids"":{""ObjectName"":""Kids"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SecondaryWep"":{""ObjectName"":""SecondaryWep"",""ObjectClass"":""StringValue"",""ObjectValue"":""Kunai""},""PosZ"":{""ObjectName"":""PosZ"",""ObjectClass"":""IntValue"",""ObjectValue"":""-143""},""PDWipes"":{""ObjectName"":""PDWipes"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""AkatsukiTrained"":{""ObjectName"":""AkatsukiTrained"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""UnlockedCloak"":{""ObjectName"":""UnlockedCloak"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CloakTime"":{""ObjectName"":""CloakTime"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BijuuRelation"":{""ObjectName"":""BijuuRelation"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Prestige"":{""ObjectName"":""Prestige"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MaxAge"":{""ObjectName"":""MaxAge"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""ParentID"":{""ObjectName"":""ParentID"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Mangekyo"":{""ObjectName"":""Mangekyo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastGripped"":{""ObjectName"":""LastGripped"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastAge"":{""ObjectName"":""LastAge"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key11"":{""ObjectName"":""Key11"",""ObjectClass"":""StringValue"",""ObjectValue"":""-""},""AwakenCD"":{""ObjectName"":""AwakenCD"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""AgeLimit"":{""ObjectName"":""AgeLimit"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""ChakraArmorRGB"":{""ObjectName"":""ChakraArmorRGB"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Mastered"":{""ObjectName"":""Mastered"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""HandsignTraining"":{""ObjectName"":""HandsignTraining"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""WipeLog"":{""ObjectName"":""WipeLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot10"":{""ObjectName"":""Slot10"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Key9"":{""ObjectName"":""Key9"",""ObjectClass"":""StringValue"",""ObjectValue"":""9""},""Slot5"":{""ObjectName"":""Slot5"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Slot7"":{""ObjectName"":""Slot7"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""RESTORE"":{""ObjectName"":""RESTORE"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""TailedBeast"":{""ObjectName"":""TailedBeast"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""ItemSave"":{""ObjectName"":""ItemSave"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""TimesRerolled"":{""ObjectName"":""TimesRerolled"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""RecentTrainings"":{""ObjectName"":""RecentTrainings"",""ObjectClass"":""StringValue"",""ObjectValue"":""{}""},""CurseMarkEXP"":{""ObjectName"":""CurseMarkEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""HBChoice"":{""ObjectName"":""HBChoice"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""WeaponSave"":{""ObjectName"":""WeaponSave"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""PrimaryWep"":{""ObjectName"":""PrimaryWep"",""ObjectClass"":""StringValue"",""ObjectValue"":""Kunai""},""OriginalVillage"":{""ObjectName"":""OriginalVillage"",""ObjectClass"":""IntValue"",""ObjectValue"":""3""},""BijuuSealed"":{""ObjectName"":""BijuuSealed"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""EyeColorG"":{""ObjectName"":""EyeColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""68""},""ToggleAccessories"":{""ObjectName"":""ToggleAccessories"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""SeenDeaths"":{""ObjectName"":""SeenDeaths"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key4"":{""ObjectName"":""Key4"",""ObjectClass"":""StringValue"",""ObjectValue"":""4""},""Name"":{""ObjectName"":""Name"",""ObjectClass"":""StringValue"",""ObjectValue"":""Regional""},""TailedBeastEXP"":{""ObjectName"":""TailedBeastEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key10"":{""ObjectName"":""Key10"",""ObjectClass"":""StringValue"",""ObjectValue"":""0""},""LastChakra"":{""ObjectName"":""LastChakra"",""ObjectClass"":""IntValue"",""ObjectValue"":""1225""},""Slot="":{""ObjectName"":""Slot="",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Key1"":{""ObjectName"":""Key1"",""ObjectClass"":""StringValue"",""ObjectValue"":""1""},""RU"":{""ObjectName"":""RU"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""PDLog"":{""ObjectName"":""PDLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MaxTails"":{""ObjectName"":""MaxTails"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot-"":{""ObjectName"":""Slot-"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""PrimaryAmmo"":{""ObjectName"":""PrimaryAmmo"",""ObjectClass"":""IntValue"",""ObjectValue"":""11""},""FamilyID"":{""ObjectName"":""FamilyID"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""HideName"":{""ObjectName"":""HideName"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Migrated"":{""ObjectName"":""Migrated"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot3"":{""ObjectName"":""Slot3"",""ObjectClass"":""StringValue"",""ObjectValue"":""Lava Embers""},""IsExiled"":{""ObjectName"":""IsExiled"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Blindness"":{""ObjectName"":""Blindness"",""ObjectClass"":""NumberValue"",""ObjectValue"":""0""},""WeaveSpeed"":{""ObjectName"":""WeaveSpeed"",""ObjectClass"":""IntValue"",""ObjectValue"":""20""},""RaidXP"":{""ObjectName"":""RaidXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BerserkTimes"":{""ObjectName"":""BerserkTimes"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SpentSkillPoints"":{""ObjectName"":""SpentSkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""-5""},""LastStomach"":{""ObjectName"":""LastStomach"",""ObjectClass"":""IntValue"",""ObjectValue"":""297""},""Key6"":{""ObjectName"":""Key6"",""ObjectClass"":""StringValue"",""ObjectValue"":""6""},""Deaths"":{""ObjectName"":""Deaths"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""EyeColorB"":{""ObjectName"":""EyeColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""34""},""Slot1"":{""ObjectName"":""Slot1"",""ObjectClass"":""StringValue"",""ObjectValue"":""Lava Eruption""},""KPos"":{""ObjectName"":""KPos"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""Parentq"":{""ObjectName"":""Parentq"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BDAYS"":{""ObjectName"":""BDAYS"",""ObjectClass"":""StringValue"",""ObjectValue"":""0""},""Bank"":{""ObjectName"":""Bank"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MaxRank"":{""ObjectName"":""MaxRank"",""ObjectClass"":""IntValue"",""ObjectValue"":""24""},""TailedBeastMastered"":{""ObjectName"":""TailedBeastMastered"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""EKLog"":{""ObjectName"":""EKLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""startnewlife"":{""ObjectName"":""startnewlife"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastHealth"":{""ObjectName"":""LastHealth"",""ObjectClass"":""IntValue"",""ObjectValue"":""450""},""ResetPos"":{""ObjectName"":""ResetPos"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SkillPoints"":{""ObjectName"":""SkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""24""},""Rank"":{""ObjectName"":""Rank"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""PosX"":{""ObjectName"":""PosX"",""ObjectClass"":""IntValue"",""ObjectValue"":""-1859""},""LastKilledUser"":{""ObjectName"":""LastKilledUser"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""AnbuLog"":{""ObjectName"":""AnbuLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MissionSuccess"":{""ObjectName"":""MissionSuccess"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CurrentWep"":{""ObjectName"":""CurrentWep"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""GrandParentID"":{""ObjectName"":""GrandParentID"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""CanRank"":{""ObjectName"":""CanRank"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""SecondaryAmmo"":{""ObjectName"":""SecondaryAmmo"",""ObjectClass"":""IntValue"",""ObjectValue"":""11""},""RyoRES"":{""ObjectName"":""RyoRES"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Trauma"":{""ObjectName"":""Trauma"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Ryo"":{""ObjectName"":""Ryo"",""ObjectClass"":""IntValue"",""ObjectValue"":""422""},""CColorR"":{""ObjectName"":""CColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key7"":{""ObjectName"":""Key7"",""ObjectClass"":""StringValue"",""ObjectValue"":""7""},""Elo"":{""ObjectName"":""Elo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""RightEye"":{""ObjectName"":""RightEye"",""ObjectClass"":""StringValue"",""ObjectValue"":""Default""},""DefaultMouth"":{""ObjectName"":""DefaultMouth"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LoreTitle"":{""ObjectName"":""LoreTitle"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""berserkcheck"":{""ObjectName"":""berserkcheck"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""HairColorR"":{""ObjectName"":""HairColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""125""},""LeftEye"":{""ObjectName"":""LeftEye"",""ObjectClass"":""StringValue"",""ObjectValue"":""Default""},""Slot0"":{""ObjectName"":""Slot0"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""CColorG"":{""ObjectName"":""CColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Age"":{""ObjectName"":""Age"",""ObjectClass"":""IntValue"",""ObjectValue"":""7""},""logcheck"":{""ObjectName"":""logcheck"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Village"":{""ObjectName"":""Village"",""ObjectClass"":""IntValue"",""ObjectValue"":""3""},""bald"":{""ObjectName"":""bald"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SecondaryCN"":{""ObjectName"":""SecondaryCN"",""ObjectClass"":""IntValue"",""ObjectValue"":""5""},""Influence"":{""ObjectName"":""Influence"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Title"":{""ObjectName"":""Title"",""ObjectClass"":""StringValue"",""ObjectValue"":""Academy Student""},""kek"":{""ObjectName"":""kek"",""ObjectClass"":""IntValue"",""ObjectValue"":""22""},""RaidCoins"":{""ObjectName"":""RaidCoins"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key5"":{""ObjectName"":""Key5"",""ObjectClass"":""StringValue"",""ObjectValue"":""5""}},""Skilltree"":{""Lava Embers"":{""ObjectName"":""Lava Embers"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Lava Fist Barrage"":{""ObjectName"":""Lava Fist Barrage"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Lava Eruption"":{""ObjectName"":""Lava Eruption"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Lavabreath"":{""ObjectName"":""Lavabreath"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Substitution"":{""ObjectName"":""Substitution"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Lava Spew"":{""ObjectName"":""Lava Spew"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""}},""Copy"":[]}"
wVZAnPxE,shisu456fr's Data,azimuths,JSON,Wednesday 31st of May 2023 04:50:39 PM CDT,"{""Stats"":{""ConstructLog"":{""ObjectName"":""ConstructLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MissionEXP"":{""ObjectName"":""MissionEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""PrimaryCN"":{""ObjectName"":""PrimaryCN"",""ObjectClass"":""IntValue"",""ObjectValue"":""3""},""mapmove1"":{""ObjectName"":""mapmove1"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""TrainingEXP"":{""ObjectName"":""TrainingEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SpecialTitle"":{""ObjectName"":""SpecialTitle"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Key12"":{""ObjectName"":""Key12"",""ObjectClass"":""StringValue"",""ObjectValue"":""=""},""Blind"":{""ObjectName"":""Blind"",""ObjectClass"":""NumberValue"",""ObjectValue"":""0""},""Slot2"":{""ObjectName"":""Slot2"",""ObjectClass"":""StringValue"",""ObjectValue"":""Strike""},""TailedBeastLevel"":{""ObjectName"":""TailedBeastLevel"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CombatEXP"":{""ObjectName"":""CombatEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Personality"":{""ObjectName"":""Personality"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""GripCount"":{""ObjectName"":""GripCount"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Marking"":{""ObjectName"":""Marking"",""ObjectClass"":""IntValue"",""ObjectValue"":""69""},""SkinColor"":{""ObjectName"":""SkinColor"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""HideName"":{""ObjectName"":""HideName"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot="":{""ObjectName"":""Slot="",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Slot11"":{""ObjectName"":""Slot11"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""MSAbility1"":{""ObjectName"":""MSAbility1"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""KPos"":{""ObjectName"":""KPos"",""ObjectClass"":""IntValue"",""ObjectValue"":""3""},""LINDAMINISTARTUP"":{""ObjectName"":""LINDAMINISTARTUP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot4"":{""ObjectName"":""Slot4"",""ObjectClass"":""StringValue"",""ObjectValue"":""High Powered Chop""},""Slot9"":{""ObjectName"":""Slot9"",""ObjectClass"":""StringValue"",""ObjectValue"":""Eight Gates""},""Version"":{""ObjectName"":""Version"",""ObjectClass"":""IntValue"",""ObjectValue"":""70""},""DateRecord"":{""ObjectName"":""DateRecord"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Construct"":{""ObjectName"":""Construct"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CurseMarkLevel"":{""ObjectName"":""CurseMarkLevel"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key2"":{""ObjectName"":""Key2"",""ObjectClass"":""StringValue"",""ObjectValue"":""x""},""Genjutsu"":{""ObjectName"":""Genjutsu"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SwordSave"":{""ObjectName"":""SwordSave"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BijuuXP"":{""ObjectName"":""BijuuXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SeenDeaths"":{""ObjectName"":""SeenDeaths"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BonusSkillPoints"":{""ObjectName"":""BonusSkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CColorB"":{""ObjectName"":""CColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""PosY"":{""ObjectName"":""PosY"",""ObjectClass"":""IntValue"",""ObjectValue"":""-164""},""SPR"":{""ObjectName"":""SPR"",""ObjectClass"":""IntValue"",""ObjectValue"":""12""},""BijuuConvo"":{""ObjectName"":""BijuuConvo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""RaidCoins"":{""ObjectName"":""RaidCoins"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Ken"":{""ObjectName"":""Ken"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Scar"":{""ObjectName"":""Scar"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot12"":{""ObjectName"":""Slot12"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""RecentTrainings"":{""ObjectName"":""RecentTrainings"",""ObjectClass"":""StringValue"",""ObjectValue"":""{}""},""EyeColorR"":{""ObjectName"":""EyeColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""124""},""HairColorG"":{""ObjectName"":""HairColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""RaidCD"":{""ObjectName"":""RaidCD"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot6"":{""ObjectName"":""Slot6"",""ObjectClass"":""StringValue"",""ObjectValue"":""Demon Flip""},""HairColorB"":{""ObjectName"":""HairColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Gender"":{""ObjectName"":""Gender"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""MSAbility2"":{""ObjectName"":""MSAbility2"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Kids"":{""ObjectName"":""Kids"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SecondaryWep"":{""ObjectName"":""SecondaryWep"",""ObjectClass"":""StringValue"",""ObjectValue"":""Kunai""},""PosZ"":{""ObjectName"":""PosZ"",""ObjectClass"":""IntValue"",""ObjectValue"":""8639""},""PDWipes"":{""ObjectName"":""PDWipes"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""AkatsukiTrained"":{""ObjectName"":""AkatsukiTrained"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""UnlockedCloak"":{""ObjectName"":""UnlockedCloak"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CloakTime"":{""ObjectName"":""CloakTime"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BijuuRelation"":{""ObjectName"":""BijuuRelation"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Prestige"":{""ObjectName"":""Prestige"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Elo"":{""ObjectName"":""Elo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""TailedBeastMastered"":{""ObjectName"":""TailedBeastMastered"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Mangekyo"":{""ObjectName"":""Mangekyo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastGripped"":{""ObjectName"":""LastGripped"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastAge"":{""ObjectName"":""LastAge"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key11"":{""ObjectName"":""Key11"",""ObjectClass"":""StringValue"",""ObjectValue"":""-""},""AwakenCD"":{""ObjectName"":""AwakenCD"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastStomach"":{""ObjectName"":""LastStomach"",""ObjectClass"":""IntValue"",""ObjectValue"":""347""},""ChakraArmorRGB"":{""ObjectName"":""ChakraArmorRGB"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""RaidXP"":{""ObjectName"":""RaidXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""WeaveSpeed"":{""ObjectName"":""WeaveSpeed"",""ObjectClass"":""IntValue"",""ObjectValue"":""20""},""WipeLog"":{""ObjectName"":""WipeLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot10"":{""ObjectName"":""Slot10"",""ObjectClass"":""StringValue"",""ObjectValue"":""Leaf Rising Wind""},""Key9"":{""ObjectName"":""Key9"",""ObjectClass"":""StringValue"",""ObjectValue"":""9""},""Slot5"":{""ObjectName"":""Slot5"",""ObjectClass"":""StringValue"",""ObjectValue"":""Dosaku""},""Slot7"":{""ObjectName"":""Slot7"",""ObjectClass"":""StringValue"",""ObjectValue"":""Water Clone""},""RESTORE"":{""ObjectName"":""RESTORE"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""TailedBeast"":{""ObjectName"":""TailedBeast"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""ItemSave"":{""ObjectName"":""ItemSave"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""TimesRerolled"":{""ObjectName"":""TimesRerolled"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""jincooldown"":{""ObjectName"":""jincooldown"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CurseMarkEXP"":{""ObjectName"":""CurseMarkEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""HBChoice"":{""ObjectName"":""HBChoice"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""WeaponSave"":{""ObjectName"":""WeaponSave"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""PrimaryWep"":{""ObjectName"":""PrimaryWep"",""ObjectClass"":""StringValue"",""ObjectValue"":""Kunai""},""OriginalVillage"":{""ObjectName"":""OriginalVillage"",""ObjectClass"":""IntValue"",""ObjectValue"":""3""},""BijuuSealed"":{""ObjectName"":""BijuuSealed"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key3"":{""ObjectName"":""Key3"",""ObjectClass"":""StringValue"",""ObjectValue"":""\""""},""Name"":{""ObjectName"":""Name"",""ObjectClass"":""StringValue"",""ObjectValue"":""vat""},""PrimaryAmmo"":{""ObjectName"":""PrimaryAmmo"",""ObjectClass"":""IntValue"",""ObjectValue"":""9""},""EyeColorG"":{""ObjectName"":""EyeColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""190""},""Title"":{""ObjectName"":""Title"",""ObjectClass"":""StringValue"",""ObjectValue"":""Academy Student""},""Key4"":{""ObjectName"":""Key4"",""ObjectClass"":""StringValue"",""ObjectValue"":""4""},""Parentq"":{""ObjectName"":""Parentq"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastChakra"":{""ObjectName"":""LastChakra"",""ObjectClass"":""IntValue"",""ObjectValue"":""200""},""IsExiled"":{""ObjectName"":""IsExiled"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""ToggleAccessories"":{""ObjectName"":""ToggleAccessories"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""RU"":{""ObjectName"":""RU"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""PDLog"":{""ObjectName"":""PDLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""logcheck"":{""ObjectName"":""logcheck"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot-"":{""ObjectName"":""Slot-"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Key1"":{""ObjectName"":""Key1"",""ObjectClass"":""StringValue"",""ObjectValue"":""w""},""FamilyID"":{""ObjectName"":""FamilyID"",""ObjectClass"":""StringValue"",""ObjectValue"":""vat(44)369100""},""RP"":{""ObjectName"":""RP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Migrated"":{""ObjectName"":""Migrated"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot3"":{""ObjectName"":""Slot3"",""ObjectClass"":""StringValue"",""ObjectValue"":""Primary Lotus""},""HandsignTraining"":{""ObjectName"":""HandsignTraining"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Blindness"":{""ObjectName"":""Blindness"",""ObjectClass"":""NumberValue"",""ObjectValue"":""0""},""Mastered"":{""ObjectName"":""Mastered"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""AgeLimit"":{""ObjectName"":""AgeLimit"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BerserkTimes"":{""ObjectName"":""BerserkTimes"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SpentSkillPoints"":{""ObjectName"":""SpentSkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""-19""},""MaxAge"":{""ObjectName"":""MaxAge"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key6"":{""ObjectName"":""Key6"",""ObjectClass"":""StringValue"",""ObjectValue"":""6""},""berserkcheck"":{""ObjectName"":""berserkcheck"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""EyeColorB"":{""ObjectName"":""EyeColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""26""},""Slot1"":{""ObjectName"":""Slot1"",""ObjectClass"":""StringValue"",""ObjectValue"":""Leaf Whirlwind""},""TailedBeastEXP"":{""ObjectName"":""TailedBeastEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key10"":{""ObjectName"":""Key10"",""ObjectClass"":""StringValue"",""ObjectValue"":""0""},""BDAYS"":{""ObjectName"":""BDAYS"",""ObjectClass"":""StringValue"",""ObjectValue"":""0""},""Bank"":{""ObjectName"":""Bank"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key8"":{""ObjectName"":""Key8"",""ObjectClass"":""StringValue"",""ObjectValue"":""8""},""MaxRank"":{""ObjectName"":""MaxRank"",""ObjectClass"":""IntValue"",""ObjectValue"":""24""},""startnewlife"":{""ObjectName"":""startnewlife"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""ParentID"":{""ObjectName"":""ParentID"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""EKLog"":{""ObjectName"":""EKLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""ResetPos"":{""ObjectName"":""ResetPos"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SkillPoints"":{""ObjectName"":""SkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""24""},""Rank"":{""ObjectName"":""Rank"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""PosX"":{""ObjectName"":""PosX"",""ObjectClass"":""IntValue"",""ObjectValue"":""-1868""},""LastKilledUser"":{""ObjectName"":""LastKilledUser"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Trauma"":{""ObjectName"":""Trauma"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MissionSuccess"":{""ObjectName"":""MissionSuccess"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CurrentWep"":{""ObjectName"":""CurrentWep"",""ObjectClass"":""IntValue"",""ObjectValue"":""2""},""GrandParentID"":{""ObjectName"":""GrandParentID"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""CanRank"":{""ObjectName"":""CanRank"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""SecondaryAmmo"":{""ObjectName"":""SecondaryAmmo"",""ObjectClass"":""IntValue"",""ObjectValue"":""11""},""RyoRES"":{""ObjectName"":""RyoRES"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""AnbuLog"":{""ObjectName"":""AnbuLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Ryo"":{""ObjectName"":""Ryo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CColorR"":{""ObjectName"":""CColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key7"":{""ObjectName"":""Key7"",""ObjectClass"":""StringValue"",""ObjectValue"":""7""},""LastHealth"":{""ObjectName"":""LastHealth"",""ObjectClass"":""IntValue"",""ObjectValue"":""100""},""RightEye"":{""ObjectName"":""RightEye"",""ObjectClass"":""StringValue"",""ObjectValue"":""Default""},""DefaultMouth"":{""ObjectName"":""DefaultMouth"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LoreTitle"":{""ObjectName"":""LoreTitle"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""HairColorR"":{""ObjectName"":""HairColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LeftEye"":{""ObjectName"":""LeftEye"",""ObjectClass"":""StringValue"",""ObjectValue"":""Default""},""Slot0"":{""ObjectName"":""Slot0"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Deaths"":{""ObjectName"":""Deaths"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CColorG"":{""ObjectName"":""CColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Age"":{""ObjectName"":""Age"",""ObjectClass"":""IntValue"",""ObjectValue"":""9""},""MaxTails"":{""ObjectName"":""MaxTails"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Village"":{""ObjectName"":""Village"",""ObjectClass"":""IntValue"",""ObjectValue"":""3""},""bald"":{""ObjectName"":""bald"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SecondaryCN"":{""ObjectName"":""SecondaryCN"",""ObjectClass"":""IntValue"",""ObjectValue"":""2""},""KillStreak"":{""ObjectName"":""KillStreak"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot8"":{""ObjectName"":""Slot8"",""ObjectClass"":""StringValue"",""ObjectValue"":""Demon Mode""},""kek"":{""ObjectName"":""kek"",""ObjectClass"":""IntValue"",""ObjectValue"":""44""},""Key5"":{""ObjectName"":""Key5"",""ObjectClass"":""StringValue"",""ObjectValue"":""5""},""Influence"":{""ObjectName"":""Influence"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""}},""Skilltree"":{""Water Clone"":{""ObjectName"":""Water Clone"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Primary Lotus"":{""ObjectName"":""Primary Lotus"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""High Powered Chop"":{""ObjectName"":""High Powered Chop"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Demon Flip"":{""ObjectName"":""Demon Flip"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Demon Mode"":{""ObjectName"":""Demon Mode"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Leaf Rising Wind"":{""ObjectName"":""Leaf Rising Wind"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Gates Mastery"":{""ObjectName"":""Gates Mastery"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Strike"":{""ObjectName"":""Strike"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Leaf Whirlwind"":{""ObjectName"":""Leaf Whirlwind"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Gate of Limit"":{""ObjectName"":""Gate of Limit"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Substitution"":{""ObjectName"":""Substitution"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""1000 Years of Death"":{""ObjectName"":""1000 Years of Death"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Gate of View"":{""ObjectName"":""Gate of View"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Eight Gates"":{""ObjectName"":""Eight Gates"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Dosaku"":{""ObjectName"":""Dosaku"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Gate of Wonder"":{""ObjectName"":""Gate of Wonder"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Dynamic Entry"":{""ObjectName"":""Dynamic Entry"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""}},""Copy"":[]}"
cXmGUs00,nceia's Data,azimuths,JSON,Wednesday 31st of May 2023 04:46:52 PM CDT,"{""Stats"":{""ConstructLog"":{""ObjectName"":""ConstructLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MissionEXP"":{""ObjectName"":""MissionEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""18""},""PrimaryCN"":{""ObjectName"":""PrimaryCN"",""ObjectClass"":""IntValue"",""ObjectValue"":""3""},""mapmove1"":{""ObjectName"":""mapmove1"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""TrainingEXP"":{""ObjectName"":""TrainingEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SpecialTitle"":{""ObjectName"":""SpecialTitle"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Key12"":{""ObjectName"":""Key12"",""ObjectClass"":""StringValue"",""ObjectValue"":""=""},""Blind"":{""ObjectName"":""Blind"",""ObjectClass"":""NumberValue"",""ObjectValue"":""0""},""Slot2"":{""ObjectName"":""Slot2"",""ObjectClass"":""StringValue"",""ObjectValue"":""Viribus""},""TailedBeastLevel"":{""ObjectName"":""TailedBeastLevel"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CombatEXP"":{""ObjectName"":""CombatEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""21""},""Personality"":{""ObjectName"":""Personality"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""GripCount"":{""ObjectName"":""GripCount"",""ObjectClass"":""IntValue"",""ObjectValue"":""5""},""Marking"":{""ObjectName"":""Marking"",""ObjectClass"":""IntValue"",""ObjectValue"":""69""},""SkinColor"":{""ObjectName"":""SkinColor"",""ObjectClass"":""IntValue"",""ObjectValue"":""7""},""HideName"":{""ObjectName"":""HideName"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot="":{""ObjectName"":""Slot="",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Slot11"":{""ObjectName"":""Slot11"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""MSAbility1"":{""ObjectName"":""MSAbility1"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Key8"":{""ObjectName"":""Key8"",""ObjectClass"":""StringValue"",""ObjectValue"":""8""},""LINDAMINISTARTUP"":{""ObjectName"":""LINDAMINISTARTUP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot4"":{""ObjectName"":""Slot4"",""ObjectClass"":""StringValue"",""ObjectValue"":""Chakra Scalpel""},""Slot9"":{""ObjectName"":""Slot9"",""ObjectClass"":""StringValue"",""ObjectValue"":""Steel Plate""},""Version"":{""ObjectName"":""Version"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""DateRecord"":{""ObjectName"":""DateRecord"",""ObjectClass"":""IntValue"",""ObjectValue"":""4109""},""Key4"":{""ObjectName"":""Key4"",""ObjectClass"":""StringValue"",""ObjectValue"":""4""},""CurseMarkLevel"":{""ObjectName"":""CurseMarkLevel"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key2"":{""ObjectName"":""Key2"",""ObjectClass"":""StringValue"",""ObjectValue"":""2""},""Genjutsu"":{""ObjectName"":""Genjutsu"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SwordSave"":{""ObjectName"":""SwordSave"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BijuuXP"":{""ObjectName"":""BijuuXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SeenDeaths"":{""ObjectName"":""SeenDeaths"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BonusSkillPoints"":{""ObjectName"":""BonusSkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CColorB"":{""ObjectName"":""CColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""PosY"":{""ObjectName"":""PosY"",""ObjectClass"":""IntValue"",""ObjectValue"":""55""},""SPR"":{""ObjectName"":""SPR"",""ObjectClass"":""IntValue"",""ObjectValue"":""12""},""BijuuConvo"":{""ObjectName"":""BijuuConvo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""jincooldown"":{""ObjectName"":""jincooldown"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Ken"":{""ObjectName"":""Ken"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Scar"":{""ObjectName"":""Scar"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot12"":{""ObjectName"":""Slot12"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""RecentTrainings"":{""ObjectName"":""RecentTrainings"",""ObjectClass"":""StringValue"",""ObjectValue"":""{}""},""EyeColorR"":{""ObjectName"":""EyeColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""21""},""HairColorG"":{""ObjectName"":""HairColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""67""},""RaidCD"":{""ObjectName"":""RaidCD"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot6"":{""ObjectName"":""Slot6"",""ObjectClass"":""StringValue"",""ObjectValue"":""Shadow Clone""},""HairColorB"":{""ObjectName"":""HairColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""67""},""Gender"":{""ObjectName"":""Gender"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""MSAbility2"":{""ObjectName"":""MSAbility2"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Kids"":{""ObjectName"":""Kids"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SecondaryWep"":{""ObjectName"":""SecondaryWep"",""ObjectClass"":""StringValue"",""ObjectValue"":""Kunai""},""PosZ"":{""ObjectName"":""PosZ"",""ObjectClass"":""IntValue"",""ObjectValue"":""1120""},""PDWipes"":{""ObjectName"":""PDWipes"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""AkatsukiTrained"":{""ObjectName"":""AkatsukiTrained"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""UnlockedCloak"":{""ObjectName"":""UnlockedCloak"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CloakTime"":{""ObjectName"":""CloakTime"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BijuuRelation"":{""ObjectName"":""BijuuRelation"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Prestige"":{""ObjectName"":""Prestige"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Elo"":{""ObjectName"":""Elo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""TailedBeastMastered"":{""ObjectName"":""TailedBeastMastered"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Mangekyo"":{""ObjectName"":""Mangekyo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastGripped"":{""ObjectName"":""LastGripped"",""ObjectClass"":""IntValue"",""ObjectValue"":""24395056""},""LastAge"":{""ObjectName"":""LastAge"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key11"":{""ObjectName"":""Key11"",""ObjectClass"":""StringValue"",""ObjectValue"":""-""},""AwakenCD"":{""ObjectName"":""AwakenCD"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastStomach"":{""ObjectName"":""LastStomach"",""ObjectClass"":""IntValue"",""ObjectValue"":""90""},""ChakraArmorRGB"":{""ObjectName"":""ChakraArmorRGB"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""RaidXP"":{""ObjectName"":""RaidXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""WeaveSpeed"":{""ObjectName"":""WeaveSpeed"",""ObjectClass"":""IntValue"",""ObjectValue"":""20""},""WipeLog"":{""ObjectName"":""WipeLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot10"":{""ObjectName"":""Slot10"",""ObjectClass"":""StringValue"",""ObjectValue"":""Medical Ninjutsu""},""Key9"":{""ObjectName"":""Key9"",""ObjectClass"":""StringValue"",""ObjectValue"":""9""},""Slot5"":{""ObjectName"":""Slot5"",""ObjectClass"":""StringValue"",""ObjectValue"":""Heaven Spear Kick""},""Slot7"":{""ObjectName"":""Slot7"",""ObjectClass"":""StringValue"",""ObjectValue"":""Clone Jutsu""},""RESTORE"":{""ObjectName"":""RESTORE"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""TailedBeast"":{""ObjectName"":""TailedBeast"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""ItemSave"":{""ObjectName"":""ItemSave"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""TimesRerolled"":{""ObjectName"":""TimesRerolled"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot8"":{""ObjectName"":""Slot8"",""ObjectClass"":""StringValue"",""ObjectValue"":""Shuriken Fan""},""Construct"":{""ObjectName"":""Construct"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CurseMarkEXP"":{""ObjectName"":""CurseMarkEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""HBChoice"":{""ObjectName"":""HBChoice"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""WeaponSave"":{""ObjectName"":""WeaponSave"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""PrimaryWep"":{""ObjectName"":""PrimaryWep"",""ObjectClass"":""StringValue"",""ObjectValue"":""Kunai""},""OriginalVillage"":{""ObjectName"":""OriginalVillage"",""ObjectClass"":""IntValue"",""ObjectValue"":""9""},""BijuuSealed"":{""ObjectName"":""BijuuSealed"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""RaidCoins"":{""ObjectName"":""RaidCoins"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key3"":{""ObjectName"":""Key3"",""ObjectClass"":""StringValue"",""ObjectValue"":""3""},""EyeColorG"":{""ObjectName"":""EyeColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""23""},""KPos"":{""ObjectName"":""KPos"",""ObjectClass"":""IntValue"",""ObjectValue"":""2""},""Influence"":{""ObjectName"":""Influence"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Parentq"":{""ObjectName"":""Parentq"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""ToggleAccessories"":{""ObjectName"":""ToggleAccessories"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastChakra"":{""ObjectName"":""LastChakra"",""ObjectClass"":""IntValue"",""ObjectValue"":""1225""},""PrimaryAmmo"":{""ObjectName"":""PrimaryAmmo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""PDLog"":{""ObjectName"":""PDLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""RU"":{""ObjectName"":""RU"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""RP"":{""ObjectName"":""RP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""logcheck"":{""ObjectName"":""logcheck"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot-"":{""ObjectName"":""Slot-"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Key1"":{""ObjectName"":""Key1"",""ObjectClass"":""StringValue"",""ObjectValue"":""1""},""FamilyID"":{""ObjectName"":""FamilyID"",""ObjectClass"":""StringValue"",""ObjectValue"":""dani(40)1267230""},""HandsignTraining"":{""ObjectName"":""HandsignTraining"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Migrated"":{""ObjectName"":""Migrated"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot3"":{""ObjectName"":""Slot3"",""ObjectClass"":""StringValue"",""ObjectValue"":""Cherry Blossom Impact""},""Mastered"":{""ObjectName"":""Mastered"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Blindness"":{""ObjectName"":""Blindness"",""ObjectClass"":""NumberValue"",""ObjectValue"":""0""},""AgeLimit"":{""ObjectName"":""AgeLimit"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""TailedBeastEXP"":{""ObjectName"":""TailedBeastEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BerserkTimes"":{""ObjectName"":""BerserkTimes"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SpentSkillPoints"":{""ObjectName"":""SpentSkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""-24""},""Deaths"":{""ObjectName"":""Deaths"",""ObjectClass"":""IntValue"",""ObjectValue"":""10""},""Key6"":{""ObjectName"":""Key6"",""ObjectClass"":""StringValue"",""ObjectValue"":""6""},""berserkcheck"":{""ObjectName"":""berserkcheck"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""EyeColorB"":{""ObjectName"":""EyeColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""34""},""Slot1"":{""ObjectName"":""Slot1"",""ObjectClass"":""StringValue"",""ObjectValue"":""Steel Hammer""},""Bank"":{""ObjectName"":""Bank"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key10"":{""ObjectName"":""Key10"",""ObjectClass"":""StringValue"",""ObjectValue"":""0""},""BDAYS"":{""ObjectName"":""BDAYS"",""ObjectClass"":""StringValue"",""ObjectValue"":""0""},""ParentID"":{""ObjectName"":""ParentID"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""MaxAge"":{""ObjectName"":""MaxAge"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MaxRank"":{""ObjectName"":""MaxRank"",""ObjectClass"":""IntValue"",""ObjectValue"":""24""},""LastHealth"":{""ObjectName"":""LastHealth"",""ObjectClass"":""IntValue"",""ObjectValue"":""450""},""Ryo"":{""ObjectName"":""Ryo"",""ObjectClass"":""IntValue"",""ObjectValue"":""115""},""PosX"":{""ObjectName"":""PosX"",""ObjectClass"":""IntValue"",""ObjectValue"":""-7275""},""ResetPos"":{""ObjectName"":""ResetPos"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SkillPoints"":{""ObjectName"":""SkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""24""},""Rank"":{""ObjectName"":""Rank"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""AnbuLog"":{""ObjectName"":""AnbuLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastKilledUser"":{""ObjectName"":""LastKilledUser"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Trauma"":{""ObjectName"":""Trauma"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MissionSuccess"":{""ObjectName"":""MissionSuccess"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CurrentWep"":{""ObjectName"":""CurrentWep"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""CanRank"":{""ObjectName"":""CanRank"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""SecondaryAmmo"":{""ObjectName"":""SecondaryAmmo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""GrandParentID"":{""ObjectName"":""GrandParentID"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""RyoRES"":{""ObjectName"":""RyoRES"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""startnewlife"":{""ObjectName"":""startnewlife"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""EKLog"":{""ObjectName"":""EKLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CColorR"":{""ObjectName"":""CColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key7"":{""ObjectName"":""Key7"",""ObjectClass"":""StringValue"",""ObjectValue"":""7""},""IsExiled"":{""ObjectName"":""IsExiled"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""RightEye"":{""ObjectName"":""RightEye"",""ObjectClass"":""StringValue"",""ObjectValue"":""Default""},""DefaultMouth"":{""ObjectName"":""DefaultMouth"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LoreTitle"":{""ObjectName"":""LoreTitle"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""HairColorR"":{""ObjectName"":""HairColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""72""},""LeftEye"":{""ObjectName"":""LeftEye"",""ObjectClass"":""StringValue"",""ObjectValue"":""Default""},""Slot0"":{""ObjectName"":""Slot0"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""CColorG"":{""ObjectName"":""CColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MaxTails"":{""ObjectName"":""MaxTails"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Age"":{""ObjectName"":""Age"",""ObjectClass"":""IntValue"",""ObjectValue"":""12""},""Village"":{""ObjectName"":""Village"",""ObjectClass"":""IntValue"",""ObjectValue"":""9""},""bald"":{""ObjectName"":""bald"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SecondaryCN"":{""ObjectName"":""SecondaryCN"",""ObjectClass"":""IntValue"",""ObjectValue"":""2""},""Title"":{""ObjectName"":""Title"",""ObjectClass"":""StringValue"",""ObjectValue"":""Academy Student""},""Name"":{""ObjectName"":""Name"",""ObjectClass"":""StringValue"",""ObjectValue"":""dani""},""KillStreak"":{""ObjectName"":""KillStreak"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""kek"":{""ObjectName"":""kek"",""ObjectClass"":""IntValue"",""ObjectValue"":""40""},""Key5"":{""ObjectName"":""Key5"",""ObjectClass"":""StringValue"",""ObjectValue"":""5""},""Wiped"":{""ObjectName"":""Wiped"",""ObjectClass"":""IntValue"",""ObjectValue"":""5""}},""Skilltree"":{""Trash"":{""ObjectName"":""Trash"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""}},""Copy"":[]}"
ZWMRqanw,asken9876's Data,azimuths,JSON,Wednesday 31st of May 2023 04:45:08 PM CDT,"{""Stats"":{""ConstructLog"":{""ObjectName"":""ConstructLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MissionEXP"":{""ObjectName"":""MissionEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MaxRank"":{""ObjectName"":""MaxRank"",""ObjectClass"":""IntValue"",""ObjectValue"":""24""},""mapmove1"":{""ObjectName"":""mapmove1"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""TrainingEXP"":{""ObjectName"":""TrainingEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SpecialTitle"":{""ObjectName"":""SpecialTitle"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Key12"":{""ObjectName"":""Key12"",""ObjectClass"":""StringValue"",""ObjectValue"":""=""},""Blind"":{""ObjectName"":""Blind"",""ObjectClass"":""NumberValue"",""ObjectValue"":""0""},""Slot2"":{""ObjectName"":""Slot2"",""ObjectClass"":""StringValue"",""ObjectValue"":""Grenade Kick""},""TailedBeastLevel"":{""ObjectName"":""TailedBeastLevel"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CombatEXP"":{""ObjectName"":""CombatEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Personality"":{""ObjectName"":""Personality"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""GripCount"":{""ObjectName"":""GripCount"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Marking"":{""ObjectName"":""Marking"",""ObjectClass"":""IntValue"",""ObjectValue"":""69""},""SkinColor"":{""ObjectName"":""SkinColor"",""ObjectClass"":""IntValue"",""ObjectValue"":""3""},""RP"":{""ObjectName"":""RP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""ToggleAccessories"":{""ObjectName"":""ToggleAccessories"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""Slot11"":{""ObjectName"":""Slot11"",""ObjectClass"":""StringValue"",""ObjectValue"":""Eight Gates""},""MSAbility1"":{""ObjectName"":""MSAbility1"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""KPos"":{""ObjectName"":""KPos"",""ObjectClass"":""IntValue"",""ObjectValue"":""2""},""LINDAMINISTARTUP"":{""ObjectName"":""LINDAMINISTARTUP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot4"":{""ObjectName"":""Slot4"",""ObjectClass"":""StringValue"",""ObjectValue"":""Leaf Rising Wind""},""Slot9"":{""ObjectName"":""Slot9"",""ObjectClass"":""StringValue"",""ObjectValue"":""Primary Lotus""},""Version"":{""ObjectName"":""Version"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""DateRecord"":{""ObjectName"":""DateRecord"",""ObjectClass"":""IntValue"",""ObjectValue"":""2221""},""EyeColorG"":{""ObjectName"":""EyeColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""191""},""CurseMarkLevel"":{""ObjectName"":""CurseMarkLevel"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key2"":{""ObjectName"":""Key2"",""ObjectClass"":""StringValue"",""ObjectValue"":""2""},""Genjutsu"":{""ObjectName"":""Genjutsu"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SwordSave"":{""ObjectName"":""SwordSave"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BijuuXP"":{""ObjectName"":""BijuuXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key3"":{""ObjectName"":""Key3"",""ObjectClass"":""StringValue"",""ObjectValue"":""3""},""BonusSkillPoints"":{""ObjectName"":""BonusSkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CColorB"":{""ObjectName"":""CColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""PosY"":{""ObjectName"":""PosY"",""ObjectClass"":""IntValue"",""ObjectValue"":""480""},""SPR"":{""ObjectName"":""SPR"",""ObjectClass"":""IntValue"",""ObjectValue"":""12""},""BijuuConvo"":{""ObjectName"":""BijuuConvo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""jincooldown"":{""ObjectName"":""jincooldown"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Ken"":{""ObjectName"":""Ken"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Scar"":{""ObjectName"":""Scar"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot12"":{""ObjectName"":""Slot12"",""ObjectClass"":""StringValue"",""ObjectValue"":""Explosive Boost""},""RecentTrainings"":{""ObjectName"":""RecentTrainings"",""ObjectClass"":""StringValue"",""ObjectValue"":""{}""},""EyeColorR"":{""ObjectName"":""EyeColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""225""},""HairColorG"":{""ObjectName"":""HairColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""197""},""RaidCD"":{""ObjectName"":""RaidCD"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot6"":{""ObjectName"":""Slot6"",""ObjectClass"":""StringValue"",""ObjectValue"":""Rocket Fist""},""HairColorB"":{""ObjectName"":""HairColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""78""},""Gender"":{""ObjectName"":""Gender"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""MSAbility2"":{""ObjectName"":""MSAbility2"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Kids"":{""ObjectName"":""Kids"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SecondaryWep"":{""ObjectName"":""SecondaryWep"",""ObjectClass"":""StringValue"",""ObjectValue"":""Kunai""},""PosZ"":{""ObjectName"":""PosZ"",""ObjectClass"":""IntValue"",""ObjectValue"":""-2828""},""PDWipes"":{""ObjectName"":""PDWipes"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""AkatsukiTrained"":{""ObjectName"":""AkatsukiTrained"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""UnlockedCloak"":{""ObjectName"":""UnlockedCloak"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CloakTime"":{""ObjectName"":""CloakTime"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BijuuRelation"":{""ObjectName"":""BijuuRelation"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Prestige"":{""ObjectName"":""Prestige"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MaxAge"":{""ObjectName"":""MaxAge"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""ParentID"":{""ObjectName"":""ParentID"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Mangekyo"":{""ObjectName"":""Mangekyo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastGripped"":{""ObjectName"":""LastGripped"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastAge"":{""ObjectName"":""LastAge"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key11"":{""ObjectName"":""Key11"",""ObjectClass"":""StringValue"",""ObjectValue"":""-""},""AwakenCD"":{""ObjectName"":""AwakenCD"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""AgeLimit"":{""ObjectName"":""AgeLimit"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""ChakraArmorRGB"":{""ObjectName"":""ChakraArmorRGB"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Mastered"":{""ObjectName"":""Mastered"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""HandsignTraining"":{""ObjectName"":""HandsignTraining"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""WipeLog"":{""ObjectName"":""WipeLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot10"":{""ObjectName"":""Slot10"",""ObjectClass"":""StringValue"",""ObjectValue"":""Demon Flip""},""Key9"":{""ObjectName"":""Key9"",""ObjectClass"":""StringValue"",""ObjectValue"":""g""},""Slot5"":{""ObjectName"":""Slot5"",""ObjectClass"":""StringValue"",""ObjectValue"":""Dosaku""},""Slot7"":{""ObjectName"":""Slot7"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""RESTORE"":{""ObjectName"":""RESTORE"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""TailedBeast"":{""ObjectName"":""TailedBeast"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""ItemSave"":{""ObjectName"":""ItemSave"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""TimesRerolled"":{""ObjectName"":""TimesRerolled"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Title"":{""ObjectName"":""Title"",""ObjectClass"":""StringValue"",""ObjectValue"":""Academy Student""},""CurseMarkEXP"":{""ObjectName"":""CurseMarkEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""HBChoice"":{""ObjectName"":""HBChoice"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""WeaponSave"":{""ObjectName"":""WeaponSave"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""PrimaryWep"":{""ObjectName"":""PrimaryWep"",""ObjectClass"":""StringValue"",""ObjectValue"":""Kunai""},""OriginalVillage"":{""ObjectName"":""OriginalVillage"",""ObjectClass"":""IntValue"",""ObjectValue"":""6""},""BijuuSealed"":{""ObjectName"":""BijuuSealed"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key4"":{""ObjectName"":""Key4"",""ObjectClass"":""StringValue"",""ObjectValue"":""4""},""Slot8"":{""ObjectName"":""Slot8"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""SeenDeaths"":{""ObjectName"":""SeenDeaths"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Construct"":{""ObjectName"":""Construct"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Influence"":{""ObjectName"":""Influence"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""TailedBeastEXP"":{""ObjectName"":""TailedBeastEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key10"":{""ObjectName"":""Key10"",""ObjectClass"":""StringValue"",""ObjectValue"":""h""},""LastChakra"":{""ObjectName"":""LastChakra"",""ObjectClass"":""IntValue"",""ObjectValue"":""1225""},""Slot="":{""ObjectName"":""Slot="",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Key1"":{""ObjectName"":""Key1"",""ObjectClass"":""StringValue"",""ObjectValue"":""1""},""RU"":{""ObjectName"":""RU"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""PDLog"":{""ObjectName"":""PDLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MaxTails"":{""ObjectName"":""MaxTails"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot-"":{""ObjectName"":""Slot-"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""PrimaryAmmo"":{""ObjectName"":""PrimaryAmmo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""FamilyID"":{""ObjectName"":""FamilyID"",""ObjectClass"":""StringValue"",""ObjectValue"":""Joe(19)2668819""},""HideName"":{""ObjectName"":""HideName"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Migrated"":{""ObjectName"":""Migrated"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot3"":{""ObjectName"":""Slot3"",""ObjectClass"":""StringValue"",""ObjectValue"":""Landmine Stomp""},""Key8"":{""ObjectName"":""Key8"",""ObjectClass"":""StringValue"",""ObjectValue"":""8""},""Blindness"":{""ObjectName"":""Blindness"",""ObjectClass"":""NumberValue"",""ObjectValue"":""0""},""WeaveSpeed"":{""ObjectName"":""WeaveSpeed"",""ObjectClass"":""IntValue"",""ObjectValue"":""20""},""RaidXP"":{""ObjectName"":""RaidXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BerserkTimes"":{""ObjectName"":""BerserkTimes"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SpentSkillPoints"":{""ObjectName"":""SpentSkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""-18""},""LastStomach"":{""ObjectName"":""LastStomach"",""ObjectClass"":""IntValue"",""ObjectValue"":""180""},""Key6"":{""ObjectName"":""Key6"",""ObjectClass"":""StringValue"",""ObjectValue"":""6""},""Deaths"":{""ObjectName"":""Deaths"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""EyeColorB"":{""ObjectName"":""EyeColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""126""},""Slot1"":{""ObjectName"":""Slot1"",""ObjectClass"":""StringValue"",""ObjectValue"":""Leaf Whirlwind""},""TailedBeastMastered"":{""ObjectName"":""TailedBeastMastered"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Parentq"":{""ObjectName"":""Parentq"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BDAYS"":{""ObjectName"":""BDAYS"",""ObjectClass"":""StringValue"",""ObjectValue"":""0""},""Bank"":{""ObjectName"":""Bank"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Elo"":{""ObjectName"":""Elo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""PrimaryCN"":{""ObjectName"":""PrimaryCN"",""ObjectClass"":""IntValue"",""ObjectValue"":""3""},""Ryo"":{""ObjectName"":""Ryo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""startnewlife"":{""ObjectName"":""startnewlife"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""EKLog"":{""ObjectName"":""EKLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""ResetPos"":{""ObjectName"":""ResetPos"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SkillPoints"":{""ObjectName"":""SkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""24""},""Rank"":{""ObjectName"":""Rank"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""PosX"":{""ObjectName"":""PosX"",""ObjectClass"":""IntValue"",""ObjectValue"":""-6971""},""LastKilledUser"":{""ObjectName"":""LastKilledUser"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""AnbuLog"":{""ObjectName"":""AnbuLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MissionSuccess"":{""ObjectName"":""MissionSuccess"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CurrentWep"":{""ObjectName"":""CurrentWep"",""ObjectClass"":""IntValue"",""ObjectValue"":""2""},""GrandParentID"":{""ObjectName"":""GrandParentID"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""CanRank"":{""ObjectName"":""CanRank"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""SecondaryAmmo"":{""ObjectName"":""SecondaryAmmo"",""ObjectClass"":""IntValue"",""ObjectValue"":""11""},""RyoRES"":{""ObjectName"":""RyoRES"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Trauma"":{""ObjectName"":""Trauma"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastHealth"":{""ObjectName"":""LastHealth"",""ObjectClass"":""IntValue"",""ObjectValue"":""450""},""CColorR"":{""ObjectName"":""CColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key7"":{""ObjectName"":""Key7"",""ObjectClass"":""StringValue"",""ObjectValue"":""7""},""IsExiled"":{""ObjectName"":""IsExiled"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""RightEye"":{""ObjectName"":""RightEye"",""ObjectClass"":""StringValue"",""ObjectValue"":""Default""},""DefaultMouth"":{""ObjectName"":""DefaultMouth"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LoreTitle"":{""ObjectName"":""LoreTitle"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""berserkcheck"":{""ObjectName"":""berserkcheck"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""HairColorR"":{""ObjectName"":""HairColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""213""},""LeftEye"":{""ObjectName"":""LeftEye"",""ObjectClass"":""StringValue"",""ObjectValue"":""Default""},""Slot0"":{""ObjectName"":""Slot0"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""CColorG"":{""ObjectName"":""CColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Age"":{""ObjectName"":""Age"",""ObjectClass"":""IntValue"",""ObjectValue"":""10""},""logcheck"":{""ObjectName"":""logcheck"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Village"":{""ObjectName"":""Village"",""ObjectClass"":""IntValue"",""ObjectValue"":""6""},""bald"":{""ObjectName"":""bald"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SecondaryCN"":{""ObjectName"":""SecondaryCN"",""ObjectClass"":""IntValue"",""ObjectValue"":""5""},""Name"":{""ObjectName"":""Name"",""ObjectClass"":""StringValue"",""ObjectValue"":""Joe""},""KillStreak"":{""ObjectName"":""KillStreak"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""kek"":{""ObjectName"":""kek"",""ObjectClass"":""IntValue"",""ObjectValue"":""19""},""RaidCoins"":{""ObjectName"":""RaidCoins"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key5"":{""ObjectName"":""Key5"",""ObjectClass"":""StringValue"",""ObjectValue"":""5""}},""Skilltree"":{""Leaf Whirlwind"":{""ObjectName"":""Leaf Whirlwind"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Dosaku"":{""ObjectName"":""Dosaku"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Dynamic Entry"":{""ObjectName"":""Dynamic Entry"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Substitution"":{""ObjectName"":""Substitution"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Explosion"":{""ObjectName"":""Explosion"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Landmine Stomp"":{""ObjectName"":""Landmine Stomp"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""1000 Years of Death"":{""ObjectName"":""1000 Years of Death"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Demon Flip"":{""ObjectName"":""Demon Flip"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Explosive Boost"":{""ObjectName"":""Explosive Boost"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Leaf Rising Wind"":{""ObjectName"":""Leaf Rising Wind"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Grenade Kick"":{""ObjectName"":""Grenade Kick"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Eight Gates"":{""ObjectName"":""Eight Gates"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Primary Lotus"":{""ObjectName"":""Primary Lotus"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Rocket Fist"":{""ObjectName"":""Rocket Fist"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""}},""Copy"":[]}"
x8aGYn4s,Stodas's Data,azimuths,JSON,Wednesday 31st of May 2023 04:44:48 PM CDT,"{""Stats"":{""ConstructLog"":{""ObjectName"":""ConstructLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MissionEXP"":{""ObjectName"":""MissionEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""13""},""PrimaryCN"":{""ObjectName"":""PrimaryCN"",""ObjectClass"":""IntValue"",""ObjectValue"":""3""},""mapmove1"":{""ObjectName"":""mapmove1"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""TrainingEXP"":{""ObjectName"":""TrainingEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SpecialTitle"":{""ObjectName"":""SpecialTitle"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Key12"":{""ObjectName"":""Key12"",""ObjectClass"":""StringValue"",""ObjectValue"":""=""},""Blind"":{""ObjectName"":""Blind"",""ObjectClass"":""NumberValue"",""ObjectValue"":""0""},""Slot2"":{""ObjectName"":""Slot2"",""ObjectClass"":""StringValue"",""ObjectValue"":""Lightning Web""},""TailedBeastLevel"":{""ObjectName"":""TailedBeastLevel"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CombatEXP"":{""ObjectName"":""CombatEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Personality"":{""ObjectName"":""Personality"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""GripCount"":{""ObjectName"":""GripCount"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Marking"":{""ObjectName"":""Marking"",""ObjectClass"":""IntValue"",""ObjectValue"":""69""},""SkinColor"":{""ObjectName"":""SkinColor"",""ObjectClass"":""IntValue"",""ObjectValue"":""3""},""HideName"":{""ObjectName"":""HideName"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot="":{""ObjectName"":""Slot="",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Slot11"":{""ObjectName"":""Slot11"",""ObjectClass"":""StringValue"",""ObjectValue"":""Wood Seal""},""MSAbility1"":{""ObjectName"":""MSAbility1"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""KPos"":{""ObjectName"":""KPos"",""ObjectClass"":""IntValue"",""ObjectValue"":""2""},""LINDAMINISTARTUP"":{""ObjectName"":""LINDAMINISTARTUP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot4"":{""ObjectName"":""Slot4"",""ObjectClass"":""StringValue"",""ObjectValue"":""Wood Roots""},""Slot9"":{""ObjectName"":""Slot9"",""ObjectClass"":""StringValue"",""ObjectValue"":""Fissure""},""Version"":{""ObjectName"":""Version"",""ObjectClass"":""IntValue"",""ObjectValue"":""70""},""DateRecord"":{""ObjectName"":""DateRecord"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Construct"":{""ObjectName"":""Construct"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CurseMarkLevel"":{""ObjectName"":""CurseMarkLevel"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key2"":{""ObjectName"":""Key2"",""ObjectClass"":""StringValue"",""ObjectValue"":""2""},""Genjutsu"":{""ObjectName"":""Genjutsu"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SwordSave"":{""ObjectName"":""SwordSave"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BijuuXP"":{""ObjectName"":""BijuuXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SeenDeaths"":{""ObjectName"":""SeenDeaths"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BonusSkillPoints"":{""ObjectName"":""BonusSkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CColorB"":{""ObjectName"":""CColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""PosY"":{""ObjectName"":""PosY"",""ObjectClass"":""IntValue"",""ObjectValue"":""115""},""SPR"":{""ObjectName"":""SPR"",""ObjectClass"":""IntValue"",""ObjectValue"":""12""},""BijuuConvo"":{""ObjectName"":""BijuuConvo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""RaidCoins"":{""ObjectName"":""RaidCoins"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Ken"":{""ObjectName"":""Ken"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Scar"":{""ObjectName"":""Scar"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot12"":{""ObjectName"":""Slot12"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""RecentTrainings"":{""ObjectName"":""RecentTrainings"",""ObjectClass"":""StringValue"",""ObjectValue"":""{}""},""EyeColorR"":{""ObjectName"":""EyeColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""249""},""HairColorG"":{""ObjectName"":""HairColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""42""},""RaidCD"":{""ObjectName"":""RaidCD"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot6"":{""ObjectName"":""Slot6"",""ObjectClass"":""StringValue"",""ObjectValue"":""Earth Wave""},""HairColorB"":{""ObjectName"":""HairColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""39""},""Gender"":{""ObjectName"":""Gender"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""MSAbility2"":{""ObjectName"":""MSAbility2"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Kids"":{""ObjectName"":""Kids"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SecondaryWep"":{""ObjectName"":""SecondaryWep"",""ObjectClass"":""StringValue"",""ObjectValue"":""Kunai""},""PosZ"":{""ObjectName"":""PosZ"",""ObjectClass"":""IntValue"",""ObjectValue"":""-1228""},""PDWipes"":{""ObjectName"":""PDWipes"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""AkatsukiTrained"":{""ObjectName"":""AkatsukiTrained"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""UnlockedCloak"":{""ObjectName"":""UnlockedCloak"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CloakTime"":{""ObjectName"":""CloakTime"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BijuuRelation"":{""ObjectName"":""BijuuRelation"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Prestige"":{""ObjectName"":""Prestige"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Elo"":{""ObjectName"":""Elo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""TailedBeastMastered"":{""ObjectName"":""TailedBeastMastered"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Mangekyo"":{""ObjectName"":""Mangekyo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastGripped"":{""ObjectName"":""LastGripped"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastAge"":{""ObjectName"":""LastAge"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key11"":{""ObjectName"":""Key11"",""ObjectClass"":""StringValue"",""ObjectValue"":""-""},""AwakenCD"":{""ObjectName"":""AwakenCD"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastStomach"":{""ObjectName"":""LastStomach"",""ObjectClass"":""IntValue"",""ObjectValue"":""208""},""ChakraArmorRGB"":{""ObjectName"":""ChakraArmorRGB"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""RaidXP"":{""ObjectName"":""RaidXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""WeaveSpeed"":{""ObjectName"":""WeaveSpeed"",""ObjectClass"":""IntValue"",""ObjectValue"":""20""},""WipeLog"":{""ObjectName"":""WipeLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot10"":{""ObjectName"":""Slot10"",""ObjectClass"":""StringValue"",""ObjectValue"":""Impermanence""},""Key9"":{""ObjectName"":""Key9"",""ObjectClass"":""StringValue"",""ObjectValue"":""9""},""Slot5"":{""ObjectName"":""Slot5"",""ObjectClass"":""StringValue"",""ObjectValue"":""Lightning Cutter""},""Slot7"":{""ObjectName"":""Slot7"",""ObjectClass"":""StringValue"",""ObjectValue"":""Rock Gun""},""RESTORE"":{""ObjectName"":""RESTORE"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""TailedBeast"":{""ObjectName"":""TailedBeast"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""ItemSave"":{""ObjectName"":""ItemSave"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""TimesRerolled"":{""ObjectName"":""TimesRerolled"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""jincooldown"":{""ObjectName"":""jincooldown"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CurseMarkEXP"":{""ObjectName"":""CurseMarkEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""HBChoice"":{""ObjectName"":""HBChoice"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""WeaponSave"":{""ObjectName"":""WeaponSave"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""PrimaryWep"":{""ObjectName"":""PrimaryWep"",""ObjectClass"":""StringValue"",""ObjectValue"":""Kunai""},""OriginalVillage"":{""ObjectName"":""OriginalVillage"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""BijuuSealed"":{""ObjectName"":""BijuuSealed"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key3"":{""ObjectName"":""Key3"",""ObjectClass"":""StringValue"",""ObjectValue"":""3""},""Name"":{""ObjectName"":""Name"",""ObjectClass"":""StringValue"",""ObjectValue"":""Ash""},""PrimaryAmmo"":{""ObjectName"":""PrimaryAmmo"",""ObjectClass"":""IntValue"",""ObjectValue"":""11""},""EyeColorG"":{""ObjectName"":""EyeColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""90""},""Title"":{""ObjectName"":""Title"",""ObjectClass"":""StringValue"",""ObjectValue"":""Academy Student""},""Key4"":{""ObjectName"":""Key4"",""ObjectClass"":""StringValue"",""ObjectValue"":""4""},""Parentq"":{""ObjectName"":""Parentq"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastChakra"":{""ObjectName"":""LastChakra"",""ObjectClass"":""IntValue"",""ObjectValue"":""200""},""IsExiled"":{""ObjectName"":""IsExiled"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""ToggleAccessories"":{""ObjectName"":""ToggleAccessories"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""RU"":{""ObjectName"":""RU"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""PDLog"":{""ObjectName"":""PDLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""logcheck"":{""ObjectName"":""logcheck"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot-"":{""ObjectName"":""Slot-"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Key1"":{""ObjectName"":""Key1"",""ObjectClass"":""StringValue"",""ObjectValue"":""1""},""FamilyID"":{""ObjectName"":""FamilyID"",""ObjectClass"":""StringValue"",""ObjectValue"":""Ash(3)1987560""},""RP"":{""ObjectName"":""RP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Migrated"":{""ObjectName"":""Migrated"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot3"":{""ObjectName"":""Slot3"",""ObjectClass"":""StringValue"",""ObjectValue"":""Wood Pillars""},""HandsignTraining"":{""ObjectName"":""HandsignTraining"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Blindness"":{""ObjectName"":""Blindness"",""ObjectClass"":""NumberValue"",""ObjectValue"":""0""},""Mastered"":{""ObjectName"":""Mastered"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""AgeLimit"":{""ObjectName"":""AgeLimit"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BerserkTimes"":{""ObjectName"":""BerserkTimes"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SpentSkillPoints"":{""ObjectName"":""SpentSkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""-24""},""MaxAge"":{""ObjectName"":""MaxAge"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key6"":{""ObjectName"":""Key6"",""ObjectClass"":""StringValue"",""ObjectValue"":""6""},""berserkcheck"":{""ObjectName"":""berserkcheck"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""EyeColorB"":{""ObjectName"":""EyeColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""244""},""Slot1"":{""ObjectName"":""Slot1"",""ObjectClass"":""StringValue"",""ObjectValue"":""Leaf Whirlwind""},""TailedBeastEXP"":{""ObjectName"":""TailedBeastEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key10"":{""ObjectName"":""Key10"",""ObjectClass"":""StringValue"",""ObjectValue"":""0""},""BDAYS"":{""ObjectName"":""BDAYS"",""ObjectClass"":""StringValue"",""ObjectValue"":""0""},""Bank"":{""ObjectName"":""Bank"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key8"":{""ObjectName"":""Key8"",""ObjectClass"":""StringValue"",""ObjectValue"":""8""},""MaxRank"":{""ObjectName"":""MaxRank"",""ObjectClass"":""IntValue"",""ObjectValue"":""24""},""startnewlife"":{""ObjectName"":""startnewlife"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""ParentID"":{""ObjectName"":""ParentID"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""EKLog"":{""ObjectName"":""EKLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""ResetPos"":{""ObjectName"":""ResetPos"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SkillPoints"":{""ObjectName"":""SkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""24""},""Rank"":{""ObjectName"":""Rank"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""PosX"":{""ObjectName"":""PosX"",""ObjectClass"":""IntValue"",""ObjectValue"":""-4279""},""LastKilledUser"":{""ObjectName"":""LastKilledUser"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Trauma"":{""ObjectName"":""Trauma"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MissionSuccess"":{""ObjectName"":""MissionSuccess"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CurrentWep"":{""ObjectName"":""CurrentWep"",""ObjectClass"":""IntValue"",""ObjectValue"":""2""},""GrandParentID"":{""ObjectName"":""GrandParentID"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""CanRank"":{""ObjectName"":""CanRank"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""SecondaryAmmo"":{""ObjectName"":""SecondaryAmmo"",""ObjectClass"":""IntValue"",""ObjectValue"":""11""},""RyoRES"":{""ObjectName"":""RyoRES"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""AnbuLog"":{""ObjectName"":""AnbuLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Ryo"":{""ObjectName"":""Ryo"",""ObjectClass"":""IntValue"",""ObjectValue"":""645""},""CColorR"":{""ObjectName"":""CColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key7"":{""ObjectName"":""Key7"",""ObjectClass"":""StringValue"",""ObjectValue"":""7""},""LastHealth"":{""ObjectName"":""LastHealth"",""ObjectClass"":""IntValue"",""ObjectValue"":""500""},""RightEye"":{""ObjectName"":""RightEye"",""ObjectClass"":""StringValue"",""ObjectValue"":""Default""},""DefaultMouth"":{""ObjectName"":""DefaultMouth"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LoreTitle"":{""ObjectName"":""LoreTitle"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""HairColorR"":{""ObjectName"":""HairColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""40""},""LeftEye"":{""ObjectName"":""LeftEye"",""ObjectClass"":""StringValue"",""ObjectValue"":""Default""},""Slot0"":{""ObjectName"":""Slot0"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Deaths"":{""ObjectName"":""Deaths"",""ObjectClass"":""IntValue"",""ObjectValue"":""3""},""CColorG"":{""ObjectName"":""CColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Age"":{""ObjectName"":""Age"",""ObjectClass"":""IntValue"",""ObjectValue"":""11""},""MaxTails"":{""ObjectName"":""MaxTails"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Village"":{""ObjectName"":""Village"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""bald"":{""ObjectName"":""bald"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SecondaryCN"":{""ObjectName"":""SecondaryCN"",""ObjectClass"":""IntValue"",""ObjectValue"":""5""},""KillStreak"":{""ObjectName"":""KillStreak"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot8"":{""ObjectName"":""Slot8"",""ObjectClass"":""StringValue"",""ObjectValue"":""Earth Dragon""},""kek"":{""ObjectName"":""kek"",""ObjectClass"":""IntValue"",""ObjectValue"":""3""},""Key5"":{""ObjectName"":""Key5"",""ObjectClass"":""StringValue"",""ObjectValue"":""5""},""Influence"":{""ObjectName"":""Influence"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""}},""Skilltree"":{""Earth Wave"":{""ObjectName"":""Earth Wave"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Lightning Shock"":{""ObjectName"":""Lightning Shock"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Wood Roots"":{""ObjectName"":""Wood Roots"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Leaf Rising Wind"":{""ObjectName"":""Leaf Rising Wind"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Wood Seal"":{""ObjectName"":""Wood Seal"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Lightning Web"":{""ObjectName"":""Lightning Web"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Fissure"":{""ObjectName"":""Fissure"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Leaf Whirlwind"":{""ObjectName"":""Leaf Whirlwind"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Dynamic Entry"":{""ObjectName"":""Dynamic Entry"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Lightning Strike"":{""ObjectName"":""Lightning Strike"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Substitution"":{""ObjectName"":""Substitution"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""1000 Years of Death"":{""ObjectName"":""1000 Years of Death"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Lightning Cutter"":{""ObjectName"":""Lightning Cutter"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Earth Dragon"":{""ObjectName"":""Earth Dragon"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Rock Gun"":{""ObjectName"":""Rock Gun"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Wood Pillars"":{""ObjectName"":""Wood Pillars"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Impermanence"":{""ObjectName"":""Impermanence"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Chidori"":{""ObjectName"":""Chidori"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Earth Pillar"":{""ObjectName"":""Earth Pillar"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Earth Wall"":{""ObjectName"":""Earth Wall"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""}},""Copy"":[]}"
BffpA2Nc,nceia's Data,azimuths,JSON,Wednesday 31st of May 2023 04:44:27 PM CDT,"{""Stats"":{""ConstructLog"":{""ObjectName"":""ConstructLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MissionEXP"":{""ObjectName"":""MissionEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""180""},""MaxRank"":{""ObjectName"":""MaxRank"",""ObjectClass"":""IntValue"",""ObjectValue"":""24""},""mapmove1"":{""ObjectName"":""mapmove1"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""TrainingEXP"":{""ObjectName"":""TrainingEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SpecialTitle"":{""ObjectName"":""SpecialTitle"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Key12"":{""ObjectName"":""Key12"",""ObjectClass"":""StringValue"",""ObjectValue"":""=""},""Blind"":{""ObjectName"":""Blind"",""ObjectClass"":""NumberValue"",""ObjectValue"":""0""},""Slot2"":{""ObjectName"":""Slot2"",""ObjectClass"":""StringValue"",""ObjectValue"":""Viribus""},""TailedBeastLevel"":{""ObjectName"":""TailedBeastLevel"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CombatEXP"":{""ObjectName"":""CombatEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""210""},""Personality"":{""ObjectName"":""Personality"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""GripCount"":{""ObjectName"":""GripCount"",""ObjectClass"":""IntValue"",""ObjectValue"":""5""},""Marking"":{""ObjectName"":""Marking"",""ObjectClass"":""IntValue"",""ObjectValue"":""69""},""SkinColor"":{""ObjectName"":""SkinColor"",""ObjectClass"":""IntValue"",""ObjectValue"":""7""},""RP"":{""ObjectName"":""RP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""ToggleAccessories"":{""ObjectName"":""ToggleAccessories"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot11"":{""ObjectName"":""Slot11"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""MSAbility1"":{""ObjectName"":""MSAbility1"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""KPos"":{""ObjectName"":""KPos"",""ObjectClass"":""IntValue"",""ObjectValue"":""2""},""LINDAMINISTARTUP"":{""ObjectName"":""LINDAMINISTARTUP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot4"":{""ObjectName"":""Slot4"",""ObjectClass"":""StringValue"",""ObjectValue"":""Chakra Scalpel""},""Slot9"":{""ObjectName"":""Slot9"",""ObjectClass"":""StringValue"",""ObjectValue"":""Steel Plate""},""Version"":{""ObjectName"":""Version"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""DateRecord"":{""ObjectName"":""DateRecord"",""ObjectClass"":""IntValue"",""ObjectValue"":""4106""},""EyeColorG"":{""ObjectName"":""EyeColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""23""},""CurseMarkLevel"":{""ObjectName"":""CurseMarkLevel"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key2"":{""ObjectName"":""Key2"",""ObjectClass"":""StringValue"",""ObjectValue"":""2""},""Genjutsu"":{""ObjectName"":""Genjutsu"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SwordSave"":{""ObjectName"":""SwordSave"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BijuuXP"":{""ObjectName"":""BijuuXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key3"":{""ObjectName"":""Key3"",""ObjectClass"":""StringValue"",""ObjectValue"":""3""},""BonusSkillPoints"":{""ObjectName"":""BonusSkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CColorB"":{""ObjectName"":""CColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""PosY"":{""ObjectName"":""PosY"",""ObjectClass"":""IntValue"",""ObjectValue"":""889""},""SPR"":{""ObjectName"":""SPR"",""ObjectClass"":""IntValue"",""ObjectValue"":""12""},""BijuuConvo"":{""ObjectName"":""BijuuConvo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""jincooldown"":{""ObjectName"":""jincooldown"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Ken"":{""ObjectName"":""Ken"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Scar"":{""ObjectName"":""Scar"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot12"":{""ObjectName"":""Slot12"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""RecentTrainings"":{""ObjectName"":""RecentTrainings"",""ObjectClass"":""StringValue"",""ObjectValue"":""{}""},""EyeColorR"":{""ObjectName"":""EyeColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""21""},""HairColorG"":{""ObjectName"":""HairColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""67""},""RaidCD"":{""ObjectName"":""RaidCD"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot6"":{""ObjectName"":""Slot6"",""ObjectClass"":""StringValue"",""ObjectValue"":""Shadow Clone""},""HairColorB"":{""ObjectName"":""HairColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""67""},""Gender"":{""ObjectName"":""Gender"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""MSAbility2"":{""ObjectName"":""MSAbility2"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Kids"":{""ObjectName"":""Kids"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SecondaryWep"":{""ObjectName"":""SecondaryWep"",""ObjectClass"":""StringValue"",""ObjectValue"":""Kunai""},""PosZ"":{""ObjectName"":""PosZ"",""ObjectClass"":""IntValue"",""ObjectValue"":""-862""},""PDWipes"":{""ObjectName"":""PDWipes"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""AkatsukiTrained"":{""ObjectName"":""AkatsukiTrained"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""UnlockedCloak"":{""ObjectName"":""UnlockedCloak"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CloakTime"":{""ObjectName"":""CloakTime"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BijuuRelation"":{""ObjectName"":""BijuuRelation"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Prestige"":{""ObjectName"":""Prestige"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MaxAge"":{""ObjectName"":""MaxAge"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""ParentID"":{""ObjectName"":""ParentID"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Mangekyo"":{""ObjectName"":""Mangekyo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastGripped"":{""ObjectName"":""LastGripped"",""ObjectClass"":""IntValue"",""ObjectValue"":""24395056""},""LastAge"":{""ObjectName"":""LastAge"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key11"":{""ObjectName"":""Key11"",""ObjectClass"":""StringValue"",""ObjectValue"":""-""},""AwakenCD"":{""ObjectName"":""AwakenCD"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""AgeLimit"":{""ObjectName"":""AgeLimit"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""ChakraArmorRGB"":{""ObjectName"":""ChakraArmorRGB"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Mastered"":{""ObjectName"":""Mastered"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""HandsignTraining"":{""ObjectName"":""HandsignTraining"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""WipeLog"":{""ObjectName"":""WipeLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot10"":{""ObjectName"":""Slot10"",""ObjectClass"":""StringValue"",""ObjectValue"":""Medical Ninjutsu""},""Key9"":{""ObjectName"":""Key9"",""ObjectClass"":""StringValue"",""ObjectValue"":""9""},""Slot5"":{""ObjectName"":""Slot5"",""ObjectClass"":""StringValue"",""ObjectValue"":""Heaven Spear Kick""},""Slot7"":{""ObjectName"":""Slot7"",""ObjectClass"":""StringValue"",""ObjectValue"":""Clone Jutsu""},""RESTORE"":{""ObjectName"":""RESTORE"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""TailedBeast"":{""ObjectName"":""TailedBeast"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""ItemSave"":{""ObjectName"":""ItemSave"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""TimesRerolled"":{""ObjectName"":""TimesRerolled"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Title"":{""ObjectName"":""Title"",""ObjectClass"":""StringValue"",""ObjectValue"":""Academy Student""},""CurseMarkEXP"":{""ObjectName"":""CurseMarkEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""HBChoice"":{""ObjectName"":""HBChoice"",""ObjectClass"":""IntValue"",""ObjectValue"":""13""},""WeaponSave"":{""ObjectName"":""WeaponSave"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""PrimaryWep"":{""ObjectName"":""PrimaryWep"",""ObjectClass"":""StringValue"",""ObjectValue"":""Kunai""},""OriginalVillage"":{""ObjectName"":""OriginalVillage"",""ObjectClass"":""IntValue"",""ObjectValue"":""9""},""BijuuSealed"":{""ObjectName"":""BijuuSealed"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key4"":{""ObjectName"":""Key4"",""ObjectClass"":""StringValue"",""ObjectValue"":""4""},""Slot8"":{""ObjectName"":""Slot8"",""ObjectClass"":""StringValue"",""ObjectValue"":""Shuriken Fan""},""SeenDeaths"":{""ObjectName"":""SeenDeaths"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Construct"":{""ObjectName"":""Construct"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Influence"":{""ObjectName"":""Influence"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""TailedBeastEXP"":{""ObjectName"":""TailedBeastEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key10"":{""ObjectName"":""Key10"",""ObjectClass"":""StringValue"",""ObjectValue"":""0""},""LastChakra"":{""ObjectName"":""LastChakra"",""ObjectClass"":""IntValue"",""ObjectValue"":""465""},""Slot="":{""ObjectName"":""Slot="",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Key1"":{""ObjectName"":""Key1"",""ObjectClass"":""StringValue"",""ObjectValue"":""1""},""RU"":{""ObjectName"":""RU"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""PDLog"":{""ObjectName"":""PDLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MaxTails"":{""ObjectName"":""MaxTails"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot-"":{""ObjectName"":""Slot-"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""PrimaryAmmo"":{""ObjectName"":""PrimaryAmmo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""FamilyID"":{""ObjectName"":""FamilyID"",""ObjectClass"":""StringValue"",""ObjectValue"":""dani(40)1267230""},""HideName"":{""ObjectName"":""HideName"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Migrated"":{""ObjectName"":""Migrated"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot3"":{""ObjectName"":""Slot3"",""ObjectClass"":""StringValue"",""ObjectValue"":""Cherry Blossom Impact""},""Key8"":{""ObjectName"":""Key8"",""ObjectClass"":""StringValue"",""ObjectValue"":""8""},""Blindness"":{""ObjectName"":""Blindness"",""ObjectClass"":""NumberValue"",""ObjectValue"":""0""},""WeaveSpeed"":{""ObjectName"":""WeaveSpeed"",""ObjectClass"":""IntValue"",""ObjectValue"":""20""},""RaidXP"":{""ObjectName"":""RaidXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BerserkTimes"":{""ObjectName"":""BerserkTimes"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SpentSkillPoints"":{""ObjectName"":""SpentSkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""-24""},""LastStomach"":{""ObjectName"":""LastStomach"",""ObjectClass"":""IntValue"",""ObjectValue"":""121""},""Key6"":{""ObjectName"":""Key6"",""ObjectClass"":""StringValue"",""ObjectValue"":""6""},""Deaths"":{""ObjectName"":""Deaths"",""ObjectClass"":""IntValue"",""ObjectValue"":""5""},""EyeColorB"":{""ObjectName"":""EyeColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""34""},""Slot1"":{""ObjectName"":""Slot1"",""ObjectClass"":""StringValue"",""ObjectValue"":""Steel Hammer""},""TailedBeastMastered"":{""ObjectName"":""TailedBeastMastered"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Parentq"":{""ObjectName"":""Parentq"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BDAYS"":{""ObjectName"":""BDAYS"",""ObjectClass"":""StringValue"",""ObjectValue"":""0""},""Bank"":{""ObjectName"":""Bank"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Elo"":{""ObjectName"":""Elo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""PrimaryCN"":{""ObjectName"":""PrimaryCN"",""ObjectClass"":""IntValue"",""ObjectValue"":""3""},""Ryo"":{""ObjectName"":""Ryo"",""ObjectClass"":""IntValue"",""ObjectValue"":""458""},""startnewlife"":{""ObjectName"":""startnewlife"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""EKLog"":{""ObjectName"":""EKLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""ResetPos"":{""ObjectName"":""ResetPos"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SkillPoints"":{""ObjectName"":""SkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""24""},""Rank"":{""ObjectName"":""Rank"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""PosX"":{""ObjectName"":""PosX"",""ObjectClass"":""IntValue"",""ObjectValue"":""3484""},""LastKilledUser"":{""ObjectName"":""LastKilledUser"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""AnbuLog"":{""ObjectName"":""AnbuLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MissionSuccess"":{""ObjectName"":""MissionSuccess"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CurrentWep"":{""ObjectName"":""CurrentWep"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""GrandParentID"":{""ObjectName"":""GrandParentID"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""CanRank"":{""ObjectName"":""CanRank"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""SecondaryAmmo"":{""ObjectName"":""SecondaryAmmo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""RyoRES"":{""ObjectName"":""RyoRES"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Trauma"":{""ObjectName"":""Trauma"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastHealth"":{""ObjectName"":""LastHealth"",""ObjectClass"":""IntValue"",""ObjectValue"":""375""},""CColorR"":{""ObjectName"":""CColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key7"":{""ObjectName"":""Key7"",""ObjectClass"":""StringValue"",""ObjectValue"":""7""},""IsExiled"":{""ObjectName"":""IsExiled"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""RightEye"":{""ObjectName"":""RightEye"",""ObjectClass"":""StringValue"",""ObjectValue"":""Default""},""DefaultMouth"":{""ObjectName"":""DefaultMouth"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LoreTitle"":{""ObjectName"":""LoreTitle"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""berserkcheck"":{""ObjectName"":""berserkcheck"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""HairColorR"":{""ObjectName"":""HairColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""72""},""LeftEye"":{""ObjectName"":""LeftEye"",""ObjectClass"":""StringValue"",""ObjectValue"":""Default""},""Slot0"":{""ObjectName"":""Slot0"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""CColorG"":{""ObjectName"":""CColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Age"":{""ObjectName"":""Age"",""ObjectClass"":""IntValue"",""ObjectValue"":""11""},""logcheck"":{""ObjectName"":""logcheck"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Village"":{""ObjectName"":""Village"",""ObjectClass"":""IntValue"",""ObjectValue"":""9""},""bald"":{""ObjectName"":""bald"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SecondaryCN"":{""ObjectName"":""SecondaryCN"",""ObjectClass"":""IntValue"",""ObjectValue"":""2""},""Name"":{""ObjectName"":""Name"",""ObjectClass"":""StringValue"",""ObjectValue"":""dani""},""KillStreak"":{""ObjectName"":""KillStreak"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""kek"":{""ObjectName"":""kek"",""ObjectClass"":""IntValue"",""ObjectValue"":""40""},""RaidCoins"":{""ObjectName"":""RaidCoins"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key5"":{""ObjectName"":""Key5"",""ObjectClass"":""StringValue"",""ObjectValue"":""5""}},""Skilltree"":{""Chakra Transfer"":{""ObjectName"":""Chakra Transfer"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Chakra Transfer 2"":{""ObjectName"":""Chakra Transfer 2"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Chakra Scalpel"":{""ObjectName"":""Chakra Scalpel"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Enhanced Movement"":{""ObjectName"":""Enhanced Movement"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Medical Ninjutsu"":{""ObjectName"":""Medical Ninjutsu"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Enhanced Strength"":{""ObjectName"":""Enhanced Strength"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Medical Ninjutsu 5"":{""ObjectName"":""Medical Ninjutsu 5"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Cherry Blossom Impact"":{""ObjectName"":""Cherry Blossom Impact"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Steel Hammer"":{""ObjectName"":""Steel Hammer"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Clone Jutsu"":{""ObjectName"":""Clone Jutsu"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Substitution"":{""ObjectName"":""Substitution"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Heaven Spear Kick"":{""ObjectName"":""Heaven Spear Kick"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Medical Ninjutsu 3"":{""ObjectName"":""Medical Ninjutsu 3"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Shadow Clone"":{""ObjectName"":""Shadow Clone"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Steel Plate"":{""ObjectName"":""Steel Plate"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Viribus"":{""ObjectName"":""Viribus"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Medical Ninjutsu 2"":{""ObjectName"":""Medical Ninjutsu 2"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Shuriken Upgrade"":{""ObjectName"":""Shuriken Upgrade"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Genjutsu Release"":{""ObjectName"":""Genjutsu Release"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Medical Ninjutsu 4"":{""ObjectName"":""Medical Ninjutsu 4"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Shuriken Fan"":{""ObjectName"":""Shuriken Fan"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""}},""Copy"":[]}"
gKaQcLJu,Trl_ppy's Data,azimuths,JSON,Wednesday 31st of May 2023 04:44:07 PM CDT,"{""Stats"":{""ConstructLog"":{""ObjectName"":""ConstructLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MissionEXP"":{""ObjectName"":""MissionEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""PrimaryCN"":{""ObjectName"":""PrimaryCN"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""mapmove1"":{""ObjectName"":""mapmove1"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""TrainingEXP"":{""ObjectName"":""TrainingEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SpecialTitle"":{""ObjectName"":""SpecialTitle"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Key12"":{""ObjectName"":""Key12"",""ObjectClass"":""StringValue"",""ObjectValue"":""=""},""Blind"":{""ObjectName"":""Blind"",""ObjectClass"":""NumberValue"",""ObjectValue"":""0""},""Slot2"":{""ObjectName"":""Slot2"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""TailedBeastLevel"":{""ObjectName"":""TailedBeastLevel"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CombatEXP"":{""ObjectName"":""CombatEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Personality"":{""ObjectName"":""Personality"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""GripCount"":{""ObjectName"":""GripCount"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Marking"":{""ObjectName"":""Marking"",""ObjectClass"":""IntValue"",""ObjectValue"":""69""},""SkinColor"":{""ObjectName"":""SkinColor"",""ObjectClass"":""IntValue"",""ObjectValue"":""3""},""HideName"":{""ObjectName"":""HideName"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot="":{""ObjectName"":""Slot="",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Slot11"":{""ObjectName"":""Slot11"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""MSAbility1"":{""ObjectName"":""MSAbility1"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""KPos"":{""ObjectName"":""KPos"",""ObjectClass"":""IntValue"",""ObjectValue"":""3""},""LINDAMINISTARTUP"":{""ObjectName"":""LINDAMINISTARTUP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot4"":{""ObjectName"":""Slot4"",""ObjectClass"":""StringValue"",""ObjectValue"":""Running Fire""},""Slot9"":{""ObjectName"":""Slot9"",""ObjectClass"":""StringValue"",""ObjectValue"":""Hiding Ash""},""Version"":{""ObjectName"":""Version"",""ObjectClass"":""IntValue"",""ObjectValue"":""70""},""DateRecord"":{""ObjectName"":""DateRecord"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Construct"":{""ObjectName"":""Construct"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CurseMarkLevel"":{""ObjectName"":""CurseMarkLevel"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key2"":{""ObjectName"":""Key2"",""ObjectClass"":""StringValue"",""ObjectValue"":""2""},""Genjutsu"":{""ObjectName"":""Genjutsu"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SwordSave"":{""ObjectName"":""SwordSave"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BijuuXP"":{""ObjectName"":""BijuuXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SeenDeaths"":{""ObjectName"":""SeenDeaths"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BonusSkillPoints"":{""ObjectName"":""BonusSkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CColorB"":{""ObjectName"":""CColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""PosY"":{""ObjectName"":""PosY"",""ObjectClass"":""IntValue"",""ObjectValue"":""84""},""SPR"":{""ObjectName"":""SPR"",""ObjectClass"":""IntValue"",""ObjectValue"":""12""},""BijuuConvo"":{""ObjectName"":""BijuuConvo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""RaidCoins"":{""ObjectName"":""RaidCoins"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Ken"":{""ObjectName"":""Ken"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Scar"":{""ObjectName"":""Scar"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot12"":{""ObjectName"":""Slot12"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""RecentTrainings"":{""ObjectName"":""RecentTrainings"",""ObjectClass"":""StringValue"",""ObjectValue"":""{}""},""EyeColorR"":{""ObjectName"":""EyeColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""247""},""HairColorG"":{""ObjectName"":""HairColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""56""},""RaidCD"":{""ObjectName"":""RaidCD"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot6"":{""ObjectName"":""Slot6"",""ObjectClass"":""StringValue"",""ObjectValue"":""Phoenix Flower""},""HairColorB"":{""ObjectName"":""HairColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""69""},""Gender"":{""ObjectName"":""Gender"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""MSAbility2"":{""ObjectName"":""MSAbility2"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Kids"":{""ObjectName"":""Kids"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SecondaryWep"":{""ObjectName"":""SecondaryWep"",""ObjectClass"":""StringValue"",""ObjectValue"":""Kunai""},""PosZ"":{""ObjectName"":""PosZ"",""ObjectClass"":""IntValue"",""ObjectValue"":""1404""},""PDWipes"":{""ObjectName"":""PDWipes"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""AkatsukiTrained"":{""ObjectName"":""AkatsukiTrained"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""UnlockedCloak"":{""ObjectName"":""UnlockedCloak"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CloakTime"":{""ObjectName"":""CloakTime"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BijuuRelation"":{""ObjectName"":""BijuuRelation"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Prestige"":{""ObjectName"":""Prestige"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Elo"":{""ObjectName"":""Elo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""TailedBeastMastered"":{""ObjectName"":""TailedBeastMastered"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Mangekyo"":{""ObjectName"":""Mangekyo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastGripped"":{""ObjectName"":""LastGripped"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastAge"":{""ObjectName"":""LastAge"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key11"":{""ObjectName"":""Key11"",""ObjectClass"":""StringValue"",""ObjectValue"":""-""},""AwakenCD"":{""ObjectName"":""AwakenCD"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastStomach"":{""ObjectName"":""LastStomach"",""ObjectClass"":""IntValue"",""ObjectValue"":""343""},""ChakraArmorRGB"":{""ObjectName"":""ChakraArmorRGB"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""RaidXP"":{""ObjectName"":""RaidXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""WeaveSpeed"":{""ObjectName"":""WeaveSpeed"",""ObjectClass"":""IntValue"",""ObjectValue"":""20""},""WipeLog"":{""ObjectName"":""WipeLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot10"":{""ObjectName"":""Slot10"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Key9"":{""ObjectName"":""Key9"",""ObjectClass"":""StringValue"",""ObjectValue"":""9""},""Slot5"":{""ObjectName"":""Slot5"",""ObjectClass"":""StringValue"",""ObjectValue"":""Halo Dance""},""Slot7"":{""ObjectName"":""Slot7"",""ObjectClass"":""StringValue"",""ObjectValue"":""Shuriken Phoenix Flower""},""RESTORE"":{""ObjectName"":""RESTORE"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""TailedBeast"":{""ObjectName"":""TailedBeast"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""ItemSave"":{""ObjectName"":""ItemSave"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""TimesRerolled"":{""ObjectName"":""TimesRerolled"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""jincooldown"":{""ObjectName"":""jincooldown"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CurseMarkEXP"":{""ObjectName"":""CurseMarkEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""HBChoice"":{""ObjectName"":""HBChoice"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""WeaponSave"":{""ObjectName"":""WeaponSave"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""PrimaryWep"":{""ObjectName"":""PrimaryWep"",""ObjectClass"":""StringValue"",""ObjectValue"":""Kunai""},""OriginalVillage"":{""ObjectName"":""OriginalVillage"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""BijuuSealed"":{""ObjectName"":""BijuuSealed"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key3"":{""ObjectName"":""Key3"",""ObjectClass"":""StringValue"",""ObjectValue"":""3""},""Name"":{""ObjectName"":""Name"",""ObjectClass"":""StringValue"",""ObjectValue"":""Trippy""},""PrimaryAmmo"":{""ObjectName"":""PrimaryAmmo"",""ObjectClass"":""IntValue"",""ObjectValue"":""3""},""EyeColorG"":{""ObjectName"":""EyeColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""3""},""Title"":{""ObjectName"":""Title"",""ObjectClass"":""StringValue"",""ObjectValue"":""Academy Student""},""Key4"":{""ObjectName"":""Key4"",""ObjectClass"":""StringValue"",""ObjectValue"":""4""},""Parentq"":{""ObjectName"":""Parentq"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LastChakra"":{""ObjectName"":""LastChakra"",""ObjectClass"":""IntValue"",""ObjectValue"":""200""},""IsExiled"":{""ObjectName"":""IsExiled"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""ToggleAccessories"":{""ObjectName"":""ToggleAccessories"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""RU"":{""ObjectName"":""RU"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""PDLog"":{""ObjectName"":""PDLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""logcheck"":{""ObjectName"":""logcheck"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot-"":{""ObjectName"":""Slot-"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Key1"":{""ObjectName"":""Key1"",""ObjectClass"":""StringValue"",""ObjectValue"":""1""},""FamilyID"":{""ObjectName"":""FamilyID"",""ObjectClass"":""StringValue"",""ObjectValue"":""Trippy(4)898966""},""RP"":{""ObjectName"":""RP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Migrated"":{""ObjectName"":""Migrated"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot3"":{""ObjectName"":""Slot3"",""ObjectClass"":""StringValue"",""ObjectValue"":""Dragon Flame Bomb""},""HandsignTraining"":{""ObjectName"":""HandsignTraining"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Blindness"":{""ObjectName"":""Blindness"",""ObjectClass"":""NumberValue"",""ObjectValue"":""0""},""Mastered"":{""ObjectName"":""Mastered"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""AgeLimit"":{""ObjectName"":""AgeLimit"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""BerserkTimes"":{""ObjectName"":""BerserkTimes"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SpentSkillPoints"":{""ObjectName"":""SpentSkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""-20""},""MaxAge"":{""ObjectName"":""MaxAge"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key6"":{""ObjectName"":""Key6"",""ObjectClass"":""StringValue"",""ObjectValue"":""6""},""berserkcheck"":{""ObjectName"":""berserkcheck"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""EyeColorB"":{""ObjectName"":""EyeColorB"",""ObjectClass"":""IntValue"",""ObjectValue"":""65""},""Slot1"":{""ObjectName"":""Slot1"",""ObjectClass"":""StringValue"",""ObjectValue"":""Burning Ash""},""TailedBeastEXP"":{""ObjectName"":""TailedBeastEXP"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key10"":{""ObjectName"":""Key10"",""ObjectClass"":""StringValue"",""ObjectValue"":""0""},""BDAYS"":{""ObjectName"":""BDAYS"",""ObjectClass"":""StringValue"",""ObjectValue"":""0""},""Bank"":{""ObjectName"":""Bank"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key8"":{""ObjectName"":""Key8"",""ObjectClass"":""StringValue"",""ObjectValue"":""8""},""MaxRank"":{""ObjectName"":""MaxRank"",""ObjectClass"":""IntValue"",""ObjectValue"":""24""},""startnewlife"":{""ObjectName"":""startnewlife"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""ParentID"":{""ObjectName"":""ParentID"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""EKLog"":{""ObjectName"":""EKLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""ResetPos"":{""ObjectName"":""ResetPos"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SkillPoints"":{""ObjectName"":""SkillPoints"",""ObjectClass"":""IntValue"",""ObjectValue"":""24""},""Rank"":{""ObjectName"":""Rank"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""PosX"":{""ObjectName"":""PosX"",""ObjectClass"":""IntValue"",""ObjectValue"":""2620""},""LastKilledUser"":{""ObjectName"":""LastKilledUser"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Trauma"":{""ObjectName"":""Trauma"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""MissionSuccess"":{""ObjectName"":""MissionSuccess"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CurrentWep"":{""ObjectName"":""CurrentWep"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""GrandParentID"":{""ObjectName"":""GrandParentID"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""CanRank"":{""ObjectName"":""CanRank"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""SecondaryAmmo"":{""ObjectName"":""SecondaryAmmo"",""ObjectClass"":""IntValue"",""ObjectValue"":""11""},""RyoRES"":{""ObjectName"":""RyoRES"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""AnbuLog"":{""ObjectName"":""AnbuLog"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Ryo"":{""ObjectName"":""Ryo"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CColorR"":{""ObjectName"":""CColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Key7"":{""ObjectName"":""Key7"",""ObjectClass"":""StringValue"",""ObjectValue"":""7""},""LastHealth"":{""ObjectName"":""LastHealth"",""ObjectClass"":""IntValue"",""ObjectValue"":""100""},""RightEye"":{""ObjectName"":""RightEye"",""ObjectClass"":""StringValue"",""ObjectValue"":""Default""},""DefaultMouth"":{""ObjectName"":""DefaultMouth"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""LoreTitle"":{""ObjectName"":""LoreTitle"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""HairColorR"":{""ObjectName"":""HairColorR"",""ObjectClass"":""IntValue"",""ObjectValue"":""54""},""LeftEye"":{""ObjectName"":""LeftEye"",""ObjectClass"":""StringValue"",""ObjectValue"":""Default""},""Slot0"":{""ObjectName"":""Slot0"",""ObjectClass"":""StringValue"",""ObjectValue"":""""},""Deaths"":{""ObjectName"":""Deaths"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""CColorG"":{""ObjectName"":""CColorG"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Age"":{""ObjectName"":""Age"",""ObjectClass"":""IntValue"",""ObjectValue"":""7""},""MaxTails"":{""ObjectName"":""MaxTails"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Village"":{""ObjectName"":""Village"",""ObjectClass"":""IntValue"",""ObjectValue"":""1""},""bald"":{""ObjectName"":""bald"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""SecondaryCN"":{""ObjectName"":""SecondaryCN"",""ObjectClass"":""IntValue"",""ObjectValue"":""4""},""KillStreak"":{""ObjectName"":""KillStreak"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Slot8"":{""ObjectName"":""Slot8"",""ObjectClass"":""StringValue"",""ObjectValue"":""Forwarding Flaming Dragon""},""kek"":{""ObjectName"":""kek"",""ObjectClass"":""IntValue"",""ObjectValue"":""4""},""Key5"":{""ObjectName"":""Key5"",""ObjectClass"":""StringValue"",""ObjectValue"":""5""},""Influence"":{""ObjectName"":""Influence"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""}},""Skilltree"":{""Fireball"":{""ObjectName"":""Fireball"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Hiding Ash"":{""ObjectName"":""Hiding Ash"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Phoenix Flower"":{""ObjectName"":""Phoenix Flower"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Shuriken Phoenix Flower"":{""ObjectName"":""Shuriken Phoenix Flower"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Burning Ash"":{""ObjectName"":""Burning Ash"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Flamethrower"":{""ObjectName"":""Flamethrower"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Great Fireball"":{""ObjectName"":""Great Fireball"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Leaf Whirlwind"":{""ObjectName"":""Leaf Whirlwind"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Dynamic Entry"":{""ObjectName"":""Dynamic Entry"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Forwarding Flaming Dragon"":{""ObjectName"":""Forwarding Flaming Dragon"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Substitution"":{""ObjectName"":""Substitution"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""1000 Years of Death"":{""ObjectName"":""1000 Years of Death"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Will of Fire"":{""ObjectName"":""Will of Fire"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Running Fire"":{""ObjectName"":""Running Fire"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Halo Dance"":{""ObjectName"":""Halo Dance"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Flame Bullet"":{""ObjectName"":""Flame Bullet"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""},""Dragon Flame Bomb"":{""ObjectName"":""Dragon Flame Bomb"",""ObjectClass"":""IntValue"",""ObjectValue"":""0""}},""Copy"":[]}"
Wub8qrGj,Solenoid,NovaDrake76,C,Wednesday 31st of May 2023 04:30:50 PM CDT,"#include <SPI.h>
#include <MFRC522.h>
#include <Keypad.h>

#define SS_PIN 21
#define RST_PIN 22
#define SOLENOID_PIN 23
#define KEYPAD_ROWS 4
#define KEYPAD_COLS 4
#define PASSWORD_LENGTH 4

MFRC522 rfid(SS_PIN, RST_PIN);

char keys[KEYPAD_ROWS][KEYPAD_COLS] = {
  {'1','2','3', 'A'},
  {'4','5','6', 'B'},
  {'7','8','9', 'C'},
  {'*','0','#', 'D'}
};

byte pin_rows[KEYPAD_ROWS] = {9, 8, 7, 6}; 
byte pin_column[KEYPAD_COLS] = {5, 4, 3, 2}; 

Keypad keypad = Keypad( makeKeymap(keys), pin_rows, pin_column, KEYPAD_ROWS, KEYPAD_COLS);

// Predefined password and initial valid card UID
char password[PASSWORD_LENGTH+1] = ""1234"";
byte validCard[4] = {0x00, 0x00, 0x00, 0x00}; 

// Input buffer for keypad inputs
char input[PASSWORD_LENGTH+1];
int inputLength = 0;

// Flags for registering a new card and password checking
bool registering = false;
bool passwordCheck = false;

void setup() {
  Serial.begin(9600);
  SPI.begin();
  rfid.PCD_Init();
  pinMode(SOLENOID_PIN, OUTPUT);
  digitalWrite(SOLENOID_PIN, LOW);
}

void loop() {
  if (rfid.PICC_IsNewCardPresent() && rfid.PICC_ReadCardSerial()) {
    if(registering) {
      for (byte i = 0; i < 4; i++) {
        validCard[i] = rfid.uid.uidByte[i];
      }
      registering = false;
      Serial.println(""New card registered successfully."");
    } else if (memcmp(rfid.uid.uidByte, validCard, 4) == 0) {
      unlockDoor();
    }
  }

  char key = keypad.getKey();
  if (key) {
    if (key == 'D' && inputLength == 0) {
      registering = true;
      Serial.println(""Registration mode enabled. Waiting for new card..."");
    } else {
      input[inputLength++] = key;
      if (inputLength >= PASSWORD_LENGTH) {
        input[inputLength] = '\0'; // Null-terminate the string
        if(strcmp(input, password) == 0) {
          unlockDoor();
        } else {
          Serial.println(""Invalid password."");
        }
        inputLength = 0; // Reset input
      }
    }
  }
}

void unlockDoor() {
  digitalWrite(SOLENOID_PIN, HIGH);
  delay(5000); // Keep the door unlocked for 5 seconds
  digitalWrite(SOLENOID_PIN, LOW);
}"
4pYYegVT,Untitled,Crysys,CSS,Wednesday 31st of May 2023 03:56:50 PM CDT,"#menu {
  background: #343434;
  color: #eee;
  height: 35px;
  border-bottom: 4px solid #eeeded
}

#menu ul,
#menu li {
  margin: 0 0;
  padding: 0 0;
  list-style: none
}

#menu ul {
  height: 35px
}

#menu li {
  float: left;
  display: inline;
  position: relative;
  font: bold 12px Arial;
  text-shadow: 0 -1px 0 #000;
  border-right: 1px solid #444;
  border-left: 1px solid #111;
  text-transform: uppercase
}

#menu li:first-child {
  border-left: none
}

#menu a {
  display: block;
  line-height: 35px;
  padding: 0 14px;
  text-decoration: none;
  color: #eee;
}

#menu li:hover > a,
#menu li a:hover {
  background: #111
}

#menu input {
  display: none;
  margin: 0 0;
  padding: 0 0;
  width: 80px;
  height: 35px;
  opacity: 0;
  cursor: pointer
}

#menu label {
  font: bold 30px Arial;
  display: none;
  width: 35px;
  height: 36px;
  line-height: 36px;
  text-align: center
}

#menu label span {
  font-size: 12px;
  position: absolute;
  left: 35px
}

#menu ul.menus {
  height: auto;
  width: 180px;
  background: #111;
  position: absolute;
  z-index: 99;
  display: none;
  border: 0;
}

#menu ul.menus li {
  display: block;
  width: 100%;
  font: 12px Arial;
  text-transform: none;
}

#menu li:hover ul.menus {
  display: block
}

#menu a.home {
  background: #c00;
}

#menu a.prett {
  padding: 0 27px 0 14px
}

#menu a.prett::after {
  content: """";
  width: 0;
  height: 0;
  border-width: 6px 5px;
  border-style: solid;
  border-color: #eee transparent transparent transparent;
  position: absolute;
  top: 15px;
  right: 9px
}

#menu a.prett.open::after {
  content: """";
  width: 0;
  height: 0;
  border-width: 6px 5px;
  border-style: solid;
  border-color: transparent transparent #eee transparent;
  position: absolute;
  top: 9px;
  right: 9px
}

#menu ul.menus a:hover {
  background: #333;
}

#menu ul.menus .submenu {
  display: none;
  position: absolute;
  left: 180px;
  background: #111;
  top: 0;
  width: 180px;
}

#menu ul.menus .submenu li {
  background: #111;
}

#menu ul.menus .has-submenu a.open ~ .submenu {
  display: block;
}

<nav>
  <ul id='menu'>
    <li><a class='home' href='/'>Home</a></li>
    <li><a class='prett' href='#' title='Menu'>Menu</a>
      <ul class='menus'>
        <li class='has-submenu'><a class='prett' title='Dropdown 1'>Dropdown 1 + Sub Menu</a>
          <ul class='submenu'>
            <li><a href=""#"" title=""Sub Menu"">Sub Menu</a></li>
            <li><a href=""#"" title=""Sub Menu"">Sub Menu 2</a></li>
            <li><a href=""#"" title=""Sub Menu"">Sub Menu 3</a></li>
          </ul>
        </li>
        <li><a href='#' title='Dropdown 2'>Dropdown 2</a></li>
        <li><a href='#' title='Dropdown 3'>Dropdown 3</a></li>
      </ul>
    </li>
  </ul>
</nav>

document.addEventListener('click', function(e) {
  e = e || window.event;
  console.log(e);
  var target = e.target || e.srcElement;
  console.log(target);
  if (target.parentElement.className.indexOf('has-submenu') > -1) {
    e.target.classList.toggle('open');
  }
}, false);"
G6T2QheQ,FF7 PSX Chocobo Race Initial Conditions by frame,AceZephyr,Python,Wednesday 31st of May 2023 03:54:09 PM CDT,"class RNG:

    def rng(self):
        a = 0x41C64E6D
        b = 0x3039

        self.rng_incrs += 1
        self.rng_state = (a * self.rng_state + b) & 0xFFFFFFFF
        return (self.rng_state >> 0x10) & 0x7FFF

    def __init__(self, seed=0):
        self.rng_state = seed
        self.rng_incrs = 0


class ChocoboData:

    def __init__(self):
        self.unknown = None
        self.running_animation = None
        self.stamina = None
        self.ai_type = None
        self.dash_speed = None
        self.speed = None

    def __repr__(self):
        return "","".join([str(None) if x is None else hex(x)[2:].upper().zfill(4) for x in
                         [self.speed, self.dash_speed, self.stamina, self.ai_type]])


RACER_NAMES = ['SAM',
               'ELEN',
               'BLUES',
               'TOM',
               'JOHN',
               'GARY',
               'MIKE',
               'SANDY',
               'JU',
               'LY',
               'JOEL',
               'GREY',
               'EDWARD',
               'JAMES',
               'HARVEY',
               'DAN',
               'RUDY',
               'GRAHAM',
               'FOX',
               'CLIVE',
               'SEAN',
               'YOUNG',
               'ROBIN',
               'DARIO',
               'ARL',
               'SARA',
               'MARIE',
               'SAMMY',
               'LIA',
               'KNIGHT',
               'PAULA',
               'PAU',
               'LE',
               'PETER',
               'AIMEE',
               'TERRY',
               'ANDY',
               'NANCY',
               'TIM',
               'ROBER',
               'GEORGE',
               'JENNY',
               'RICA',
               'JULIA']

PRIZE_NAMES = [
    ""Sprint Shoes"",
    ""Counter Attack"",
    ""Magic Counter"",
    ""Precious Watch"",
    ""Cat's Bell"",
    ""Enemy Away"",
    ""Sneak Attack"",
    ""Chocobracelet"",
    ""Ether"",
    ""Elixir"",
    ""Hero Drink"",
    ""Bolt Plume"",
    ""Fire Fang"",
    ""Antarctic Wind"",
    ""Swift Bolt"",
    ""Fire Veil"",
    ""Ice Crystal"",
    ""Megalixer"",
    ""Turbo Ether"",
    ""Potion"",
    ""Phoenix Down"",
    ""Hyper"",
    ""Tranquilizer"",
    ""Hi-Potion""
]

REWARD_TABLES = {
    ""C"": [
        [0x17, 0x00, 0x05, 0x01],
        [0x08, 0x00, 0x14, 0x01],
        [0x15, 0x00, 0x0A, 0x00],
        [0x16, 0x00, 0x0A, 0x00],
        [0x14, 0x00, 0x14, 0x00],
        [0x0B, 0x00, 0x05, 0x01],
        [0x0C, 0x00, 0x05, 0x00],
        [0x0D, 0x00, 0x05, 0x00],
        [0x13, 0x00, 0x05, 0x01],
        [0x14, 0x00, 0x14, 0x01],
    ], ""B"": [
        [0x08, 0x00, 0x1E, 0x00],
        [0x0A, 0x00, 0x0A, 0x00],
        [0x14, 0x00, 0x14, 0x00],
        [0x12, 0x00, 0x05, 0x01],
        [0x08, 0x00, 0x1E, 0x00],
        [0x17, 0x00, 0x05, 0x00],
        [0x15, 0x00, 0x0A, 0x00],
        [0x16, 0x00, 0x0A, 0x00],
        [0x17, 0x00, 0x05, 0x00],
        [0x0B, 0x00, 0x0A, 0x01],
        [0x0C, 0x00, 0x0A, 0x00],
        [0x0D, 0x00, 0x0A, 0x00],
        [0x09, 0x00, 0x0A, 0x01],
        [0x05, 0x01, 0x05, 0x01],
        [0x17, 0x00, 0x05, 0x00],
    ], ""A"": [
        [0x08, 0x00, 0x14, 0x00],
        [0x0A, 0x00, 0x0A, 0x00],
        [0x0E, 0x01, 0x0A, 0x00],
        [0x0F, 0x01, 0x0A, 0x00],
        [0x0C, 0x00, 0x0A, 0x00],
        [0x10, 0x01, 0x0A, 0x00],
        [0x01, 0x00, 0x0A, 0x01],
        [0x05, 0x01, 0x05, 0x01],
        [0x0B, 0x00, 0x0A, 0x00],
        [0x0C, 0x00, 0x0A, 0x00],
        [0x0D, 0x00, 0x0A, 0x00],
        [0x09, 0x00, 0x0A, 0x01],
        [0x17, 0x00, 0x05, 0x00],
        [0x08, 0x00, 0x14, 0x00],
        [0x00, 0x01, 0x07, 0x01],
        [0x09, 0x00, 0x05, 0x01],
        [0x14, 0x00, 0x14, 0x00],
        [0x0C, 0x00, 0x0A, 0x00],
        [0x04, 0x01, 0x07, 0x01],
        [0x06, 0x01, 0x07, 0x01],
    ], ""S"": [
        [0x12, 0x01, 0x05, 0x00],
        [0x0A, 0x00, 0x05, 0x00],
        [0x09, 0x00, 0x05, 0x01],
        [0x01, 0x00, 0x05, 0x01],
        [0x05, 0x01, 0x05, 0x01],
        [0x06, 0x01, 0x05, 0x01],
        [0x0E, 0x01, 0x05, 0x00],
        [0x0F, 0x01, 0x05, 0x00],
        [0x0B, 0x00, 0x02, 0x00],
        [0x0F, 0x01, 0x05, 0x00],
        [0x14, 0x00, 0x14, 0x00],
        [0x10, 0x00, 0x05, 0x00],
        [0x11, 0x01, 0x05, 0x01],
        [0x12, 0x00, 0x05, 0x00],
        [0x00, 0x01, 0x05, 0x01],
        [0x0E, 0x00, 0x05, 0x00],
        [0x04, 0x01, 0x05, 0x01],
        [0x09, 0x00, 0x05, 0x01],
        [0x07, 0x01, 0x05, 0x01],
        [0x10, 0x01, 0x05, 0x00],
        [0x03, 0x01, 0x05, 0x01],
        [0x02, 0x01, 0x05, 0x01],
    ]
}

CHOCO_STAT_TABLE = {
    ""C"": [0x09C4, 0x01F4, 0x06A4, 0x00C8],
    ""B"": [0x0BB8, 0x0258, 0x0898, 0x012C],
    ""A"": [0x0DAC, 0x02BC, 0x0BB8, 0x01F4],
    ""S"": [0x1388, 0x0320, 0x0FA0, 0x01F4]
}


def generate_chocobo_race_data(rng=None, rank=""C"", _B747C=0xffffffff):
    chodata = [ChocoboData() for _ in range(6)]

    if rng is None:
        rng = RNG()

    for _ in range(0x28):
        rng.rng()
        rng.rng()

    chodata[0].ai_type = rng.rng() % 4
    for x in range(5):
        chodata[x + 1].dash_speed = CHOCO_STAT_TABLE[rank][0] + (rng.rng() % CHOCO_STAT_TABLE[rank][1])
        chodata[x + 1].speed = CHOCO_STAT_TABLE[rank][2] + (rng.rng() % CHOCO_STAT_TABLE[rank][3])
        chodata[x + 1].ai_type = rng.rng() % 4
        chodata[x + 1].stamina = CHOCO_STAT_TABLE[rank][0] + (rng.rng() % 300)
        chodata[x + 1].running_animation = (1 if rng.rng() & 7 == 0 else 0) * 2
        chodata[x + 1].unknown = ((rng.rng() & 1) * 50) + 50

    names = [x for x in range(43)]

    x = 0
    while x < 0xC8:
        x += 1
        swap1 = rng.rng() % 43
        swap2 = rng.rng() % 43
        a0 = names[swap2]
        a1 = names[swap1]
        names[swap1] = a0
        names[swap2] = a1

    reward_table = REWARD_TABLES[rank]
    reward_pool = [
        0xFF, 0xFF, 0xFF
    ]

    items_in = 0  # s1
    s2 = 0
    s3 = 0xffffffff
    while items_in != 3:
        v0 = rng.rng() % len(reward_table)
        item = reward_table[v0]
        if reward_pool[0] == item[0] or reward_pool[1] == item[0] or reward_pool[2] == item[0]:
            continue
        if reward_table[v0][1] != 0:
            if s2 != 0:
                if item[3] != 0:
                    continue
            # AB5A8
            if _B747C != 0:
                reward_pool[items_in] = item[0]
                items_in += 1
            # AB5C8
            if reward_table[v0][3] == 0:
                continue
            # set rare item
            s3 = item[0]
            s2 = 0xffffffff
            continue
        # AB5F0
        if s2 != 0:
            if reward_table[v0][3] != 0:
                continue
        # AB608
        reward_pool[items_in] = item[0]
        items_in += 1
        if reward_table[v0][3] == 0:
            continue
        # set rare item
        s3 = item[0]
        s2 = 0xffffffff
    # AB634

    reward_pool.sort()

    # there's a jump back up here but i don't think it can ever be taken
    # AB714

    if s3 != 0xffffffff:
        if reward_pool[0] == s3:
            v0 = reward_pool[2]
            reward_pool[2] = s3
            reward_pool[0] = v0
        elif reward_pool[1] == s3:  # AB74C
            v0 = reward_pool[2]
            reward_pool[2] = s3
            reward_pool[1] = v0
    # AB778
    tile_buffer_items = []
    tile_buffer_cards = []
    for i in range(7):
        tile_buffer_items.append(reward_pool[0])
        tile_buffer_cards.append(0)
    for i in range(5):
        tile_buffer_items.append(reward_pool[1])
        tile_buffer_cards.append(1)
    for i in range(3):
        tile_buffer_items.append(reward_pool[2])
        tile_buffer_cards.append(2)

    x = 0
    while x < 100:
        x += 2
        swap1 = rng.rng() % 15
        swap2 = rng.rng() % 15
        a2 = tile_buffer_items[swap1]
        v0 = tile_buffer_items[swap2]
        tile_buffer_items[swap1] = v0
        v0 = tile_buffer_cards[swap2]
        tile_buffer_items[swap2] = a2
        a2 = tile_buffer_cards[swap1]
        tile_buffer_cards[swap1] = v0
        tile_buffer_cards[swap2] = a2
        swap1 = rng.rng() % 15
        swap2 = rng.rng() % 15
        a2 = tile_buffer_items[swap1]
        v0 = tile_buffer_items[swap2]
        tile_buffer_items[swap1] = v0
        v0 = tile_buffer_cards[swap2]
        tile_buffer_items[swap2] = a2
        a2 = tile_buffer_cards[swap1]
        tile_buffer_cards[swap1] = v0
        tile_buffer_cards[swap2] = a2

    return {""items"": reward_pool, ""tile_cards"": tile_buffer_cards, ""names"": names[1:6], ""chocobo_data"": chodata}
"
eF9iQAn2,StringFinder,CR7CR7,Java,Wednesday 31st of May 2023 03:50:35 PM CDT,"import java.util.Scanner;

public class TitleFinder {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        // Read the title string
        String title = scanner.nextLine();
        // Read the number of lines
        int n = Integer.parseInt(scanner.nextLine());
        // Loop through the lines
        for (int i = 0; i < n; i++) {
            // Read the current line
            String line = scanner.nextLine();
            // Check if the line is a subsequence of the title
            if (isSubsequence(line, title)) {
                // Remove the line from the title
                title = removeSubsequence(line, title);
                // Print the modified title
                System.out.println(title);
            } else {
                // Print a message
                System.out.println(""No such title found!"");
            }
        }
    }

    // A helper method to check if a string is a subsequence of another string
    public static boolean isSubsequence(String s1, String s2) {
        // Initialize two pointers for s1 and s2
        int i = 0;
        int j = 0;
        // Loop until one of the strings is exhausted
        while (i < s1.length() && j < s2.length()) {
            // If the characters match, move both pointers forward
            if (s1.charAt(i) == s2.charAt(j)) {
                i++;
                j++;
            } else {
                // Otherwise, move only the pointer for s2 forward
                j++;
            }
        }
        // Return true if all characters of s1 are matched
        return i == s1.length();
    }

    // A helper method to remove a subsequence from a string
    public static String removeSubsequence(String s1, String s2) {
        // Initialize a string builder to store the result
        StringBuilder sb = new StringBuilder();
        // Initialize two pointers for s1 and s2
        int i = 0;
        int j = 0;
        // Loop until one of the strings is exhausted
        while (i < s1.length() && j < s2.length()) {
            // If the characters match, skip them and move both pointers forward
            if (s1.charAt(i) == s2.charAt(j)) {
                i++;
                j++;
            } else {
                // Otherwise, append the character from s2 to the result and move only the pointer for s2 forward
                sb.append(s2.charAt(j));
                j++;
            }
        }
        // Append the remaining characters from s2 to the result
        sb.append(s2.substring(j));
        // Return the result as a string
        return sb.toString();
    }
}
"
PkXM34in,Untitled,Locative,SQL,Wednesday 31st of May 2023 03:42:08 PM CDT,"-- [ Оплата за: Май]
 
--------- [ Отработанное время: ]
 
Locative: 188 (х5), 2 (FUN) -- 190
Зилиус: 120 (х5) -- 120
Khyntia: 29 (x5), 96 (FUN) -- 125
jegermaister  - EN GM: 4 (х5), 138 (FUN) -- 142

 

Чеширский Кот: 161 (x5), 56 (FUN) (х2 за модератора) -- 217


--------- [ Бонусы: ]
UPDATE `bonus` SET `gold`=gold+4000 WHERE `id`='1503058'; -- Locative(3000ГМ + 1000РГМ)
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (1503058, NOW(), 4000, '+4000 золотых бонусов - з/п Ргм Locative за май');

UPDATE `bonus` SET `gold`=gold+3000 WHERE `id`='229884'; -- Зилиус (ГМ)
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (229884, NOW(), 3000, '+3000 золотых бонусов - з/п ГМ Зилиус за май');

UPDATE `bonus` SET `gold`=gold+3000 WHERE `id`='949105'; -- Khyntia (ГМ).
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (949105, NOW(), 3000, '+3000 золотых бонусов - з/п ГМ Khyntia за май'); 

UPDATE `bonus` SET `gold`=gold+3500 WHERE `id`='455260'; -- Jegerm (EN GM) + md FB.
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (455260, NOW(), 3500, '+3500 золотых бонусов - з/п ГМ Jegerm за май'); 

UPDATE `bonus` SET `gold`=gold+2000 WHERE `id`='810625'; -- Чеширский Кот х2
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (810625, NOW(), 2000, '+2000 золотых бонусов - з/п модератора Чеширский Кот за май'); 

-- QA Team

UPDATE `bonus` SET `gold`=gold+0 WHERE `id`='211220'; -- nastyasia
UPDATE `bonus` SET `gold`=gold+0 WHERE `id`='1396156'; -- Vovremya 
UPDATE `bonus` SET `gold`=gold+0 WHERE `id`='1700700'; -- silent
UPDATE `bonus` SET `gold`=gold+0 WHERE `id`='1830678'; -- Runbiba
UPDATE `bonus` SET `gold`=gold+0 WHERE `id`='1686590'; -- entaroloco"
u665M2Fa,Untitled,Dimaush,Python,Wednesday 31st of May 2023 02:50:00 PM CDT,"import numpy as np

import sklearn
import sklearn.metrics


def silhouette_score(x, labels):
    '''
    :param np.ndarray x: Непустой двумерный массив векторов-признаков
    :param np.ndarray labels: Непустой одномерный массив меток объектов
    :return float: Коэффициент силуэта для выборки x с метками labels
    '''
    if np.unique(labels).shape[0] == 1:
        return 0

    s = np.zeros(x.shape[0])
    clusters = []

    for label in np.unique(labels):
        if (labels == label).shape[0] == 1:
            s[(labels == label)] = 0
        else:
            values = np.sum(sklearn.metrics.pairwise_distances(x, x)[:, (labels == label)], axis=1)
            s[(labels == label) * (np.sum(labels == label) > 1)] = values[(labels == label) * (np.sum(labels == label) > 1)] / (np.sum(labels == label) - 1)
            avg = values / np.sum(labels == label)
            avg[(labels == label)] = np.max(sklearn.metrics.pairwise_distances(x, x)) + 1
            clusters.append(avg)

    p = np.min(np.stack(clusters), axis=0)
    m = (p != 0) * (s != 0)

    sil = np.zeros(x.shape[0])
    sil[m] = (p - s)[m] / np.maximum(p, s)[m]
    sil_score = np.mean(sil, axis=0)
    return sil_score


def bcubed_score(true_labels, predicted_labels):
    '''
    :param np.ndarray true_labels: Непустой одномерный массив меток объектов
    :param np.ndarray predicted_labels: Непустой одномерный массив меток объектов
    :return float: B-Cubed для объектов с истинными метками true_labels и предсказанными метками predicted_labels
    '''
    n_objects = true_labels.shape[0]
    precision = 0
    recall = 0
    for i in range(n_objects):
        p = true_labels[(predicted_labels == predicted_labels[i])]
        precision += np.mean(p == true_labels[i])
        r = predicted_labels[(true_labels == true_labels[i])]
        recall += np.mean(r == predicted_labels[i])
    precision /= n_objects
    recall /= n_objects
    score = 2 * (precision * recall) / (precision + recall)
    return score"
diBZGtb7,Temp,Opontios,Python,Wednesday 31st of May 2023 02:48:57 PM CDT,"alias: Humidity Reminder
description: """"
trigger:
  - platform: time_pattern
    minutes: /10
condition:
  - condition: time
    after: ""09:00:00""
    before: ""23:00:00""
  - condition: or
    conditions:
      - condition: device
        device_id: a9629d185061bd53af8be70f7c8f90c0
        domain: device_tracker
        entity_id: device_tracker.m2102j20sg_2
        type: is_home
      - condition: device
        device_id: a5f42a8f48c2ba7e29b327b9cb6b26f7
        domain: device_tracker
        entity_id: device_tracker.m2102j20sg
        type: is_home
action:
  - choose:
      - conditions:
          - condition: state
            entity_id: binary_sensor.parathura
            state: ""off""
          - condition: template
            value_template: >-
              {{ (states('sensor.humidity_home_all')| int(0) -
              states('sensor.0x00124b002450f58c_humidity')| int(0)) >= 5}}
        sequence:
          - service: notify.mobile_app_stavros_poco_x3_pro
            data:
              title: Δοκιμή
              message: Άνοιξε τα παράθυρα
          - service: notify.mobile_app_alexia_poco_x3_pro
            data:
              message: Άνοιξε τα παράθυρα
              title: Δοκιμή
      - conditions:
          - condition: state
            entity_id: binary_sensor.parathura
            state: ""on""
          - condition: template
            value_template: >- 
              {{ (states('sensor.0x00124b002450f58c_humidity')| int(0) -
              states('sensor.humidity_home_all')| int(0)) >= 5 }}
        sequence:
          - service: notify.mobile_app_alexia_poco_x3_pro
            data:
              message: Κλείσε τα παράθυρα
              title: Δοκιμή
          - service: notify.mobile_app_stavros_poco_x3_pro
            data:
              message: Κλείσε τα παράθυρα
              title: Δοκιμή
mode: single"
7vUc3C8t,for Eldar,crackanddie,C#,Wednesday 31st of May 2023 02:30:28 PM CDT,"using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Stage_1_Kurs_Work_Seydametov
{
    public class BusList : IEnumerable<Bus>
    {
        private Bus[] buses;

        private int count;
        public int Count { get { return count; } private set { count = value; } }

        public BusList(int amount)
        {
            buses = new Bus[amount];
        }

        public Bus this[int i]
        {
            get
            {
                return buses[i];
            }
            set
            {
                buses[i] = value;
            }
        }

        public Bus Add(Bus bus)
        {
            if (count < buses.Length)
            {
                buses[count] = bus;
                count++;
            }
            return bus;
        }

        public bool Remove(Bus bus)
        {
            var ind = buses.ToList().IndexOf(bus);
            if (ind >= 0)
            {
                buses[ind] = null;
                for (int i = ind; i < buses.Length - 1; i++)
                {
                    buses[i] = buses[i + 1];
                }
                buses[buses.Length - 1] = null;
                return true;
            }
            return false;
        }

        public Bus[] GetBuses()
        {
            return buses;   
        }

        public IEnumerator<Bus> GetEnumerator()
        {
            return buses.Take(count).GetEnumerator();
        }

        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }
    }
}
"
7PR79KAR,TracPanel,EnverX,Lua,Wednesday 31st of May 2023 02:20:07 PM CDT,"-- Gui to Lua
-- Version: 3.2

-- Instances:

local Trac = Instance.new(""ScreenGui"")
local Frame = Instance.new(""Frame"")
local Frame_2 = Instance.new(""Frame"")
local UIGradient = Instance.new(""UIGradient"")
local TextButton = Instance.new(""TextButton"")
local UICorner = Instance.new(""UICorner"")
local TextLabel = Instance.new(""TextLabel"")
local TextButton_2 = Instance.new(""TextButton"")
local ImageLabel = Instance.new(""ImageLabel"")
local FrameLock = Instance.new(""Frame"")
local TRACLOCK = Instance.new(""TextButton"")
local UICorner_2 = Instance.new(""UICorner"")
local FrameSilent = Instance.new(""Frame"")
local TRACSILENT = Instance.new(""TextButton"")
local UICorner_3 = Instance.new(""UICorner"")

--Properties:

Trac.Name = ""Trac""
Trac.Parent = game.CoreGui
Trac.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

Frame.Parent = Trac
Frame.BackgroundColor3 = Color3.fromRGB(33, 49, 35)
Frame.Position = UDim2.new(0.300653607, 0, 0.0751155242, 0)
Frame.Size = UDim2.new(0, 426, 0, 542)

Frame_2.Parent = Frame
Frame_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Frame_2.BorderSizePixel = 0
Frame_2.Position = UDim2.new(0, 0, 0.0479704812, 0)
Frame_2.Size = UDim2.new(0, 426, 0, 2)

UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(33, 49, 35)), ColorSequenceKeypoint.new(0.16, Color3.fromRGB(9, 170, 95)), ColorSequenceKeypoint.new(0.48, Color3.fromRGB(51, 255, 75)), ColorSequenceKeypoint.new(0.84, Color3.fromRGB(9, 170, 95)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(33, 49, 35))}
UIGradient.Parent = Frame_2

TextButton.Parent = Frame
TextButton.BackgroundColor3 = Color3.fromRGB(35, 176, 0)
TextButton.BackgroundTransparency = 1.000
TextButton.BorderSizePixel = 0
TextButton.Position = UDim2.new(0.0586854443, 0, 0.00369003695, 0)
TextButton.Size = UDim2.new(0, 64, 0, 25)
TextButton.Font = Enum.Font.GothamBold
TextButton.Text = ""LOCK""
TextButton.TextColor3 = Color3.fromRGB(150, 255, 143)
TextButton.TextSize = 17.000
TextButton.TextWrapped = true

UICorner.CornerRadius = UDim.new(0, 7)
UICorner.Parent = Frame

TextLabel.Parent = Frame
TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.BackgroundTransparency = 1.000
TextLabel.BorderSizePixel = 0
TextLabel.Position = UDim2.new(0.64084506, 0, 0.00369003695, 0)
TextLabel.Size = UDim2.new(0, 153, 0, 25)
TextLabel.Font = Enum.Font.GothamBold
TextLabel.Text = ""DISCORD.GG/TRAC.GG""
TextLabel.TextColor3 = Color3.fromRGB(150, 255, 143)
TextLabel.TextSize = 13.000

TextButton_2.Parent = Frame
TextButton_2.BackgroundColor3 = Color3.fromRGB(35, 176, 0)
TextButton_2.BackgroundTransparency = 1.000
TextButton_2.BorderSizePixel = 0
TextButton_2.Position = UDim2.new(0.21361503, 0, 0.00369003695, 0)
TextButton_2.Size = UDim2.new(0, 64, 0, 25)
TextButton_2.Font = Enum.Font.GothamBold
TextButton_2.Text = ""SILENT""
TextButton_2.TextColor3 = Color3.fromRGB(150, 255, 143)
TextButton_2.TextSize = 17.000
TextButton_2.TextWrapped = true

ImageLabel.Parent = Frame
ImageLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageLabel.BackgroundTransparency = 1.000
ImageLabel.Position = UDim2.new(0.00400000019, 0, 0.00400000019, 0)
ImageLabel.Size = UDim2.new(0, 25, 0, 25)
ImageLabel.Image = ""rbxassetid://13609876574""

FrameLock.Name = ""FrameLock""
FrameLock.Parent = Frame
FrameLock.BackgroundColor3 = Color3.fromRGB(33, 49, 35)
FrameLock.BorderColor3 = Color3.fromRGB(55, 255, 0)
FrameLock.BorderSizePixel = 0
FrameLock.Position = UDim2.new(0.018779343, 0, 0.0719557181, 0)
FrameLock.Size = UDim2.new(0, 410, 0, 494)

TRACLOCK.Name = ""[TRAC] LOCK""
TRACLOCK.Parent = FrameLock
TRACLOCK.BackgroundColor3 = Color3.fromRGB(35, 176, 0)
TRACLOCK.BackgroundTransparency = 0.700
TRACLOCK.Position = UDim2.new(0.028756097, 0, 0.0202429146, 0)
TRACLOCK.Size = UDim2.new(0, 386, 0, 28)
TRACLOCK.Font = Enum.Font.GothamBold
TRACLOCK.Text = ""[TRAC] LOCK""
TRACLOCK.TextColor3 = Color3.fromRGB(150, 255, 143)
TRACLOCK.TextSize = 15.000
TRACLOCK.MouseButton1Down:Connect(function()
	getgenv().Settings = {
		Main = {
			Enable = true,

			HoldKey = false,
			ToggleKey = true,

			UseKeyBoardKey = true,
			KeyBoardKey = Enum.KeyCode.E,

			UseMouseKey = false,
			ThirdPerson = true,
			FirstPerson = true,

			AutoPingSets = false,

			UseCircleRadius = false,
			DisableOutSideCircle = false,

			UseShake = true,
			ShakePower = 1,

			CheckForWalls = true
		},
		Check = {
			CheckIfKo = false,
			DisableOnTargetDeath = false,
			DisableOnPlayerDeath = false
		},
		Horizontal = {
			PredictMovement = true,
			PredictionVelocity = 0.123
		},
		Smooth = {
			Smoothness = true,
			SmoothnessAmount = 0.175,
			SmoothMethod = Enum.EasingStyle.Circular,
			SmoothMethodV2 = Enum.EasingDirection.InOut
		},
		Part = {
			AimPart = ""Head"",
			CheckIfJumpedAimPart = ""HumanoidRootPart"",
			CheckIfJumped = true,
			GetClosestPart = false
		},
		Visual = {
			Fov = false,
			FovTransparency = 1,
			FovThickness = 1,
			FovColor = Color3.fromRGB(255, 185, 0),
			FovRadius = 60
		},
		Spoofer = {
			MemorySpoofer = true,
			MemoryTabColor = Color3.fromRGB(211, 88, 33),
			MemoryMost = 85000,
			MemoryLeast = 80000,

			PingSpoofer = true,
			PingTabColor = Color3.fromRGB(211, 88, 33),
			PingMost = 2000,
			PingLeast = 1000
		}
	}

	loadstring(game:HttpGet('https://pastebin.com/raw/YU0pbPWn'))()
end)

UICorner_2.CornerRadius = UDim.new(0, 2)
UICorner_2.Parent = TRACLOCK

FrameSilent.Name = ""FrameSilent""
FrameSilent.Parent = Frame
FrameSilent.BackgroundColor3 = Color3.fromRGB(33, 49, 35)
FrameSilent.Position = UDim2.new(0.018779343, 0, 0.0719557181, 0)
FrameSilent.Size = UDim2.new(0, 410, 0, 494)
FrameSilent.Visible = false

TRACSILENT.Name = ""[TRAC] SILENT""
TRACSILENT.Parent = FrameSilent
TRACSILENT.BackgroundColor3 = Color3.fromRGB(35, 176, 0)
TRACSILENT.BackgroundTransparency = 0.700
TRACSILENT.Position = UDim2.new(0.028756097, 0, 0.0202429146, 0)
TRACSILENT.Size = UDim2.new(0, 386, 0, 28)
TRACSILENT.Font = Enum.Font.GothamBold
TRACSILENT.Text = ""[TRAC] SILENT""
TRACSILENT.TextColor3 = Color3.fromRGB(150, 255, 143)
TRACSILENT.TextSize = 15.000
TRACLOCK.MouseButton1Down:Connect(function()
	local Aiming = loadstring(game:HttpGet(""https://pastebin.com/raw/XgqgAC8D""))()
	Aiming.TeamCheck(false)

	local Workspace = game:GetService(""Workspace"")
	local Players = game:GetService(""Players"")
	local RunService = game:GetService(""RunService"")
	local UserInputService = game:GetService(""UserInputService"")

	local LocalPlayer = Players.LocalPlayer
	local Mouse = LocalPlayer:GetMouse()
	local CurrentCamera = Workspace.CurrentCamera

	local DaHoodSettings = {
		SilentAim = true,
		Prediction = 0.157,

	}
	getgenv().DaHoodSettings = DaHoodSettings

	function Aiming.Check()
		if not (Aiming.Enabled == true and Aiming.Selected ~= LocalPlayer and Aiming.SelectedPart ~= nil) then
			return false
		end

		local Character = Aiming.Character(Aiming.Selected)
		local KOd = Character:WaitForChild(""BodyEffects"")[""K.O""].Value
		local Grabbed = Character:FindFirstChild(""GRABBING_CONSTRAINT"") ~= nil

		if (KOd or Grabbed) then
			return false
		end

		return true
	end

	local __index
	__index = hookmetamethod(game, ""__index"", function(t, k)
		if (t:IsA(""Mouse"") and (k == ""Hit"" or k == ""Target"") and Aiming.Check()) then
			local SelectedPart = Aiming.SelectedPart

			if (DaHoodSettings.SilentAim and (k == ""Hit"" or k == ""Target"")) then
				local Hit = SelectedPart.CFrame + (SelectedPart.Velocity * DaHoodSettings.Prediction)

				return (k == ""Hit"" and Hit or SelectedPart)
			end
		end

		return __index(t, k)
	end)

	RunService:BindToRenderStep(""AimLock"", 0, function()
		if (DaHoodSettings.AimLock and Aiming.Check() and UserInputService:IsKeyDown(DaHoodSettings.AimLockKeybind)) then
			local SelectedPart = Aiming.SelectedPart

			local Hit = SelectedPart.CFrame + (SelectedPart.Velocity * DaHoodSettings.Prediction)

			CurrentCamera.CFrame = CFrame.lookAt(CurrentCamera.CFrame.Position, Hit.Position)
		end
	end)
end)

UICorner_3.CornerRadius = UDim.new(0, 2)
UICorner_3.Parent = TRACSILENT

-- Scripts:

local function NSUIFQG_fake_script() -- TextButton.TrueLock 
	local script = Instance.new('Script', TextButton)

	script.Parent.MouseButton1Click:Connect (function()
		script.Parent.Parent.FrameLock.Visible =true
	end)
end
coroutine.wrap(NSUIFQG_fake_script)()
local function WEKCDHV_fake_script() -- TextButton.FalseSilent 
	local script = Instance.new('Script', TextButton)

	script.Parent.MouseButton1Click:Connect (function()
		script.Parent.Parent.FrameSilent.Visible =false
	end)
end
coroutine.wrap(WEKCDHV_fake_script)()
local function JXXZKDQ_fake_script() -- TextButton_2.TrueSilent 
	local script = Instance.new('Script', TextButton_2)

	script.Parent.MouseButton1Click:Connect (function()
		script.Parent.Parent.FrameSilent.Visible =true
	end)
end
coroutine.wrap(JXXZKDQ_fake_script)()
local function FVCECX_fake_script() -- TextButton_2.FalseLock 
	local script = Instance.new('Script', TextButton_2)

	script.Parent.MouseButton1Click:Connect (function()
		script.Parent.Parent.FrameLock.Visible =false
	end)
end
coroutine.wrap(FVCECX_fake_script)()
local function MCICPHN_fake_script() -- Frame.LocalScript 
	local script = Instance.new('LocalScript', Frame)

	local frame = script.Parent.Parent.Frame
	local tecla = Enum.KeyCode.RightControl
	
	local UIS = game:GetService(""UserInputService"")
	local abrir = false
	
	UIS.InputBegan:Connect(function(key)
		if key.KeyCode == tecla then
			if UIS:GetFocusedTextBox() == nil then
				if abrir == false then
					abrir = true
					frame.Visible = abrir
				elseif abrir == true then
					abrir = false
					frame.Visible = abrir
				end
			end
		end
	end)
	
	script.Parent.MouseButton1Click:Connect(function()
	
		if abrir == false then
			abrir = true
			frame.Visible = abrir
		elseif abrir == true then
			abrir = false
			frame.Visible = abrir
		end
	end)
end
coroutine.wrap(MCICPHN_fake_script)()"
H5Wn2PRL,01. exam - second,Radotsveta,C,Wednesday 31st of May 2023 02:19:44 PM CDT,"#include <stdio.h>
#include <string.h>

struct Patient
{
    char ownerName[30];
    char chipNum[20];
    double price;
};

void printPatient(struct Patient patient[],
        int size, double price)
{
    int found = 0;
    for (int i = 0; i < size; i++)
    {
        if(patient[i].price==price)
        {
            printf(""%s-%s"", patient[i].ownerName,
                    patient[i].chipNum);
            found = 1;
        }
    }
    if(!found)
    {
        printf(""Patient saving not found."");
    }
}

int main()
{
    struct Patient patient1={""Steve"", ""5d"", 45};
    struct Patient patient2={""Marco"", ""W5"", 28};
    struct Patient patient3={""Nicky"", ""s5"", 25};

    struct Patient patient[]={patient1, patient2, patient3};

    int size = 3;
    double price = 20;

    printPatient(patient,size,price);

    return 0;
}"
52xfxaPa,Venus - signal 11,Patrickmeme,C++,Wednesday 31st of May 2023 02:07:05 PM CDT,"#include <fstream>
#include <algorithm>
#include <vector>
using namespace std;

ifstream cin(""venus.in"");
ofstream cout(""venus.out"");

struct com{
    int val,lim,ind;
} v[1001];

bool frv[1001],cr2[1001][8785];

vector <int> rasp;

int dp[1001][8785];
bool fost[1001][8785];
string conv[]={""ianuarie"",""februarie"",""martie"",""aprilie"",""mai"",""iunie"",""iulie"",""august"",""septembrie"",""octombrie"",""noiembrie"",""decembrie""};

bool cmp(com a,com b){
    if(a.lim<b.lim)
        return 1;
    return 0;
}

int convF(string s){
    int i,su;
    i=su=0;
    while(conv[i]!=s){
        if(i%2==0)
            su+=31;
        else if(i%2==1 && i!=1)
            su+=30;
        else
            su+=29;
        i++;
    }
    return su;
}

int main()
{
    string s;
    int n,t,i,zi,h,max1,j,sum=0,ci;
    cin>>n>>t;
    for(i=1;i<=n;i++){
        v[i].ind=i;
        cin>>v[i].val>>zi>>s>>h;
        sum+=v[i].val;
        v[i].lim=(convF(s)+zi-1)*24+h;
        ///printf(""%d\n"",v[i].lim);
    }
    sort(v+1 ,v+n+1,cmp);
    fost[0][0]=1;
    for(i=1;i<=n;i++){
        //printf(""|%d %d|"",v[i].val,v[i].lim);
        fost[i][0]=1;
        for(j=t;j<=8785;j+=t){
            dp[i][j]=dp[i-1][j];
            fost[i][j]=fost[i-1][j];
            if(j<=v[i].lim && fost[i-1][j-t]==1){
                fost[i][j]=1;//printf(""[%d %d %d %d]  "",i,j,dp[i-1][j-t]+v[i].val,dp[i][j]);
                if(dp[i-1][j-t]+v[i].val>dp[i][j]){
                     dp[i][j]=dp[i-1][j-t]+v[i].val;
                     cr2[i][j]=1;

                }

            }
        }
        //printf(""\n"");
    }
    max1=ci=0;
    for(i=0;i<=8785;i+=t){
        if(max1<dp[n][i]){
            max1=dp[n][i];
            ci=i;
            //printf(""%d %d\n"",i,dp[n][i]);
        }
    }
    //printf(""%d "",max1);
    cout<<sum-max1<<""\n"";
    j=ci;
    for(i=n;i>=1;i--){
        if(cr2[i][j]==1){
            j-=t;
            frv[i]=1;
            rasp.push_back(v[i].ind);
        }
    }
    reverse(rasp.begin(),rasp.end());
    for(i=0;i<rasp.size();i++){
        cout<<rasp[i]<<"" "";
    }
    for(i=1;i<=n;i++){
        if(frv[i]==0){
            cout<<v[i].ind<<"" "";
        }
    }
    return 0;
}
"
BZ1GK6Gd,Saber contraseña de una wifi a la que nos conectamos alguna vez (Windows),EmilianoRoldanR,Bash,Wednesday 31st of May 2023 01:56:16 PM CDT,"# Con estos comando podemos saber la contraseña de las redes wifi que nos conectamos alguna vez.
# Windows, cmd

netsh wlan show profile # Primero ejecutamos este comando para saber las redes que tenemos registradas, aunque no estén disponibles.
netsh wlan show profile name=red key=clear # Luego ejecutamos este comando, cambiando ""name"" por el nombre de la red que sacamos del primer comando. Esto nos va a devolver varios datos, entre ellos la contraseña
"
F38XBSpv,Untitled,Overwtime,YAML,Wednesday 31st of May 2023 01:43:48 PM CDT,"r1:
  command: /reward
  type: RUN_COMMAND
  runcmd:
   - '$Script$%if%%mycommand_playerdata_takenrewards1%!=NoData<and>$arg1==1'
   - ""$text$&6&lMine&c&lLord &8› &fВы уже получили эту награду.""
   - '%PlayerOptions%playSound: ENTITY_VILLAGER_NO'
   - '$Script$%elseif%%statistic_minutes_played%>=40<and>$arg1==1'
   - ""$text$&6&lMine&c&lLord &8› &fВы успешно получили свою награду.""
   - ""$RUN_CONSOLE$dc givekey $player free 1""
   - ""$RUN_CONSOLE$lp user $player permission set titlen.uses""
   - ""$broadcasttext$&r""
   - ""$broadcasttext$&6&l♕ &fИгрок &a&l$player &fполучил &b&l/reward &fпервого уровня!""
   - ""$broadcasttext$&r""
   - '%PlayerOptions%playSound: ENTITY_PLAYER_LEVELUP'
   - ""$RUN_CONSOLE$mycmd-playerdata set $player takenrewards1 1""
   - '$Script$%elseif%%mycommand_playerdata_takenrewards1%==NoData<and>$arg1==1'
   - '%PlayerOptions%playSound: ENTITY_VILLAGER_NO'
   - '$text$&6&lMine&c&lLord &8› &fВы не можете получить свою награду. Вы отыграли: &6%statistic_minutes_played% &fиз &c40 &fминут'
   - '$Script$%elseif%%mycommand_playerdata_takenrewards2%!=NoData<and>$arg1==2'
   - ""$text$&6&lMine&c&lLord &8› &fВы уже получили эту награду.""
   - '%PlayerOptions%playSound: ENTITY_VILLAGER_NO'
   - '$Script$%elseif%%statistic_minutes_played%>=90<and>$arg1==2'
   - ""$text$&6&lMine&c&lLord &8› &fВы успешно получили свою награду.""
   - ""$RUN_CONSOLE$lp user $player permission set titlec.uses""
   - ""$RUN_CONSOLE$dc givekey $player free 2""
   - ""$broadcasttext$&r""
   - ""$broadcasttext$&6&l♕ &fИгрок &a&l$player &fполучил &b&l/reward &fвторого уровня!""
   - ""$broadcasttext$&r""
   - '%PlayerOptions%playSound: ENTITY_PLAYER_LEVELUP'
   - ""$RUN_CONSOLE$mycmd-playerdata set $player takenrewards2 1""
   - '$Script$%elseif%%mycommand_playerdata_takenrewards2%==NoData<and>$arg1==2'
   - '%PlayerOptions%playSound: ENTITY_VILLAGER_NO'
   - '$text$&6&lMine&c&lLord &8› &fВы не можете получить свою награду. Вы отыграли: &6%statistic_minutes_played% &fиз &c90 &fминут'
   - '$Script$%elseif%%mycommand_playerdata_takenrewards3%!=NoData<and>$arg1==3'
   - ""$text$&6&lMine&c&lLord &8› &fВы уже получили эту награду.""
   - '%PlayerOptions%playSound: ENTITY_VILLAGER_NO'
   - '$Script$%elseif%%statistic_minutes_played%>=150<and>$arg1==3'
   - ""$text$&6&lMine&c&lLord &8› &fВы успешно получили свою награду.""
   - ""$RUN_CONSOLE$lp user $player permission set titlenyt.uses""
   - ""$RUN_CONSOLE$lp user $player permission set essentials.kits.build""
   - ""$RUN_CONSOLE$dc givekey $player free 3"" 
   - ""$RUN_CONSOLE$eco give $player 1000""
   - ""$broadcasttext$&r""
   - ""$broadcasttext$&6&l♕ &fИгрок &a&l$player &fполучил &b&l/reward &fтретьего уровня!""
   - ""$broadcasttext$&r""
   - '%PlayerOptions%playSound: ENTITY_PLAYER_LEVELUP'
   - ""$RUN_CONSOLE$mycmd-playerdata set $player takenrewards3 1""
   - '$Script$%elseif%%mycommand_playerdata_takenrewards3%==NoData<and>$arg1==3'
   - '%PlayerOptions%playSound: ENTITY_VILLAGER_NO'
   - '$text$&6&lMine&c&lLord &8› &fВы не можете получить свою награду. Вы отыграли: &6%statistic_minutes_played% &fиз &c150 &fминут'
   - '$Script$%elseif%%mycommand_playerdata_takenrewards4%!=NoData<and>$arg1==4'
   - ""$text$&6&lMine&c&lLord &8› &fВы уже получили эту награду.""
   - '%PlayerOptions%playSound: ENTITY_VILLAGER_NO'
   - '$Script$%elseif%%statistic_minutes_played%>=210<and>$arg1==4'
   - ""$text$&6&lMine&c&lLord &8› &fВы успешно получили свою награду.""
   - ""$RUN_CONSOLE$lp user $player permission set titlenleg.uses""
   - ""$RUN_CONSOLE$dc givekey $player free 4""
   - ""$RUN_CONSOLE$eco give $player 2000""
   - ""$broadcasttext$&r""
   - ""$broadcasttext$&6&l♕ &fИгрок &a&l$player &fполучил &b&l/reward &fчетвёртого уровня!""
   - ""$broadcasttext$&r""
   - '%PlayerOptions%playSound: ENTITY_PLAYER_LEVELUP'
   - ""$RUN_CONSOLE$mycmd-playerdata set $player takenrewards4 1""
   - '$Script$%elseif%%mycommand_playerdata_takenrewards4%==NoData<and>$arg1==4'
   - '%PlayerOptions%playSound: ENTITY_VILLAGER_NO'
   - '$text$&6&lMine&c&lLord &8› &fВы не можете получить свою награду. Вы отыграли: &6%statistic_minutes_played% &fиз &c210 &fминут'
   - '$Script$%elseif%%mycommand_playerdata_takenrewards5%!=NoData<and>$arg1==5'
   - ""$text$&6&lMine&c&lLord &8› &fВы уже получили эту награду.""
   - '%PlayerOptions%playSound: ENTITY_VILLAGER_NO'
   - '$Script$%elseif%%statistic_minutes_played%>=270<and>$arg1==5'
   - ""$text$&6&lMine&c&lLord &8› &fВы успешно получили свою награду.""
   - ""$RUN_CONSOLE$lp user $player permission set titlensec.uses""
   - ""$RUN_CONSOLE$lp user $player permission set essentials.kits.kitstart+""
   - ""$RUN_CONSOLE$dc givekey $player free 10""
   - ""$RUN_CONSOLE$eco give $player 3000""
   - ""$RUN_CONSOLE$points give $player 150 ""
   - ""$broadcasttext$&r""
   - ""$broadcasttext$&6&l♕ &fИгрок &a&l$player &fполучил &b&l/reward &fпятого уровня!""
   - ""$broadcasttext$&r""
   - '%PlayerOptions%playSound: ENTITY_PLAYER_LEVELUP'
   - ""$RUN_CONSOLE$mycmd-playerdata set $player takenrewards5 1""
   - '$Script$%elseif%%mycommand_playerdata_takenrewards5%==NoData<and>$arg1==5'
   - '%PlayerOptions%playSound: ENTITY_VILLAGER_NO'
   - '$text$&6&lMine&c&lLord &8› &fВы не можете получить свою награду. Вы отыграли: &6%statistic_minutes_played% &fиз &c270 &fминут'
   - '$Script$%elseif%%mycommand_playerdata_takenrewards6%!=NoData<and>$arg1==6'
   - ""$text$&6&lMine&c&lLord &8› &fВы уже получили эту награду.""
   - '%PlayerOptions%playSound: ENTITY_VILLAGER_NO'
   - '$Script$%elseif%%statistic_minutes_played%>=340<and>$arg1==6'
   - ""$text$&6&lMine&c&lLord &8› &fВы успешно получили свою награду.""
   - ""$RUN_CONSOLE$dc givekey $player free 15""
   - ""$RUN_CONSOLE$eco give $player 6000""
   - ""$RUN_CONSOLE$points give $player 350 ""
   - ""$broadcasttext$&r""
   - ""$broadcasttext$&6&l♕ &fИгрок &a&l$player &fполучил &b&l/reward &fшестого уровня!""
   - ""$broadcasttext$&r""
   - '%PlayerOptions%playSound: ENTITY_PLAYER_LEVELUP'
   - ""$RUN_CONSOLE$mycmd-playerdata set $player takenrewards6 1""
   - '$Script$%elseif%%mycommand_playerdata_takenrewards6%==NoData<and>$arg1==6'
   - '%PlayerOptions%playSound: ENTITY_VILLAGER_NO'
   - '$text$&6&lMine&c&lLord &8› &fВы не можете получить свою награду. Вы отыграли: &6%statistic_minutes_played% &fиз &c340 &fминут'
   - '$Script$%elseif%%mycommand_playerdata_takenrewards7%!=NoData<and>$arg1==7'
   - ""$text$&6&lMine&c&lLord &8› &fВы уже получили эту награду.""
   - '%PlayerOptions%playSound: ENTITY_VILLAGER_NO'
   - '$Script$%elseif%%statistic_hours_played%>=10<and>$arg1==7'
   - ""$text$&6&lMine&c&lLord &8› &fВы успешно получили свою награду.""
   - ""$RUN_CONSOLE$dc givekey $player rubl 1""
   - ""$RUN_CONSOLE$points give $player 450 ""
   - ""$broadcasttext$&r""
   - ""$broadcasttext$&6&l♕ &fИгрок &a&l$player &fполучил &b&l/reward &fседьмого уровня!""
   - ""$broadcasttext$&r""
   - '%PlayerOptions%playSound: ENTITY_PLAYER_LEVELUP'
   - ""$RUN_CONSOLE$mycmd-playerdata set $player takenrewards7 1""
   - '$Script$%elseif%%mycommand_playerdata_takenrewards7%==NoData<and>$arg1==7'
   - '%PlayerOptions%playSound: ENTITY_VILLAGER_NO'
   - '$text$&6&lMine&c&lLord &8› &fВы не можете получить свою награду. Вы отыграли: &6%statistic_hours_played% &fиз &c10 &fчасов'
   - '$Script$%elseif%%mycommand_playerdata_takenrewards8%!=NoData<and>$arg1==8'
   - ""$text$&6&lMine&c&lLord &8› &fВы уже получили эту награду.""
   - '%PlayerOptions%playSound: ENTITY_VILLAGER_NO'
   - '$Script$%elseif%%statistic_hours_played%>=12<and>$arg1==8'
   - ""$text$&6&lMine&c&lLord &8› &fВы успешно получили свою награду.""
   - ""$RUN_CONSOLE$dc givekey $player rubl 3""
   - ""$RUN_CONSOLE$points give $player 750 ""
   - ""$RUN_CONSOLE$lgive brona $player""
   - ""$RUN_CONSOLE$lgive brona2 $player""
   - ""$RUN_CONSOLE$lgive brona3 $player""
   - ""$RUN_CONSOLE$lgive brona4 $player""
   - ""$RUN_CONSOLE$lgive sword6 $player""
   - ""$broadcasttext$&r""
   - ""$broadcasttext$&6&l♕ &fИгрок &a&l$player &fполучил &b&l/reward &dвосьмого уровня!""
   - ""$broadcasttext$&r""
   - '%PlayerOptions%playSound: ENTITY_PLAYER_LEVELUP'
   - ""$RUN_CONSOLE$mycmd-playerdata set $player takenrewards8 1""
   - '$Script$%elseif%%mycommand_playerdata_takenrewards8%==NoData<and>$arg1==8'
   - '%PlayerOptions%playSound: ENTITY_VILLAGER_NO'
   - '$text$&6&lMine&c&lLord &8› &fВы не можете получить свою награду. Вы отыграли: &6%statistic_hours_played% &fиз &c12 &fчасов'
   - '$Script$%elseif%%mycommand_playerdata_takenrewards9%!=NoData<and>$arg1==9'
   - ""$text$&6&lMine&c&lLord &8› &fВы уже получили эту награду.""
   - '%PlayerOptions%playSound: ENTITY_VILLAGER_NO'
   - '$Script$%elseif%%statistic_hours_played%>=24<and>$arg1==9'
   - ""$text$&6&lMine&c&lLord &8› &fВы успешно получили свою награду.""
   - ""$RUN_CONSOLE$dc givekey $player rubl 4""
   - ""$RUN_CONSOLE$points give $player 2000""
   - ""$broadcasttext$&r""
   - ""$broadcasttext$&6&l♕ &fИгрок &a&l$player &fполучил &b&l/reward &dдевятого уровня!""
   - ""$broadcasttext$&r""
   - '%PlayerOptions%playSound: ENTITY_PLAYER_LEVELUP'
   - ""$RUN_CONSOLE$mycmd-playerdata set $player takenrewards9 1""
   - '$Script$%elseif%%mycommand_playerdata_takenrewards9%==NoData<and>$arg1==9'
   - '%PlayerOptions%playSound: ENTITY_VILLAGER_NO'
   - '$text$&6&lMine&c&lLord &8› &fВы не можете получить свою награду. Вы отыграли: &6%statistic_hours_played% &fиз &c24 &fчасов'
   - '$Script$%elseif%%mycommand_playerdata_takenrewards10%!=NoData<and>$arg1==10'
   - ""$text$&6&lMine&c&lLord &8› &fВы уже получили эту награду.""
   - '%PlayerOptions%playSound: ENTITY_VILLAGER_NO'
   - '$Script$%elseif%%statistic_minutes_played%>=60<and>$arg1==10'
   - ""$text$&6&lMine&c&lLord &8› &fВы успешно получили свою награду.""
   - ""$RUN_CONSOLE$give $player 322 8""
   - ""$broadcasttext$&r""
   - ""$broadcasttext$&6&l♕ &fИгрок &a&l$player &fполучил золотые яблочки""
   - ""$broadcasttext$&r""
   - '%PlayerOptions%playSound: ENTITY_PLAYER_LEVELUP'
   - ""$RUN_CONSOLE$mycmd-playerdata set $player takenrewards10 1""
   - '$Script$%elseif%%mycommand_playerdata_takenrewards10%==NoData<and>$arg1==10'
   - '%PlayerOptions%playSound: ENTITY_VILLAGER_NO'
   - '$text$&6&lMine&c&lLord &8› &fВы не можете получить свою награду. Вы отыграли: &6%statistic_minutes_played% &fиз &c60 &fминут'
   - '$Script$%elseif%%mycommand_playerdata_takenrewards11%!=NoData<and>$arg1==11'
   - ""$text$&6&lMine&c&lLord &8› &fВы уже получили эту награду.""
   - '%PlayerOptions%playSound: ENTITY_VILLAGER_NO'
   - '$Script$%elseif%%statistic_minutes_played%>=180<and>$arg1==11'
   - ""$text$&6&lMine&c&lLord &8› &fВы успешно получили свою награду.""
   - ""$RUN_CONSOLE$lgive kirksss $player""
   - ""$broadcasttext$&r""
   - ""$broadcasttext$&6&l♕ &fИгрок &a&l$player &fполучил кирку за время""
   - ""$broadcasttext$&r""
   - '%PlayerOptions%playSound: ENTITY_PLAYER_LEVELUP'
   - ""$RUN_CONSOLE$mycmd-playerdata set $player takenrewards11 1""
   - '$Script$%elseif%%mycommand_playerdata_takenrewards11%==NoData<and>$arg1==11'
   - '%PlayerOptions%playSound: ENTITY_VILLAGER_NO'
   - '$text$&6&lMine&c&lLord &8› &fВы не можете получить свою награду. Вы отыграли: &6%statistic_minutes_played% &fиз &c180 &fминут'
   - '$Script$%elseif%%mycommand_playerdata_takenrewards12%!=NoData<and>$arg1==12'
   - ""$text$&6&lMine&c&lLord &8› &fВы уже получили эту награду.""
   - '%PlayerOptions%playSound: ENTITY_VILLAGER_NO'
   - '$Script$%elseif%%statistic_minutes_played%>=120<and>$arg1==12'
   - ""$text$&6&lMine&c&lLord &8› &fВы успешно получили свою награду.""
   - ""$RUN_CONSOLE$give $player ender_pearl 16""
   - ""$broadcasttext$&r""
   - ""$broadcasttext$&6&l♕ &fИгрок &a&l$player &fполучил &fЖемчунг Эндера""
   - ""$broadcasttext$&r""
   - '%PlayerOptions%playSound: ENTITY_PLAYER_LEVELUP'
   - ""$RUN_CONSOLE$mycmd-playerdata set $player takenrewards12 1""
   - '$Script$%elseif%%mycommand_playerdata_takenrewards12%==NoData<and>$arg1==12'
   - '%PlayerOptions%playSound: ENTITY_VILLAGER_NO'
   - '$text$&6&lMine&c&lLord &8› &fВы не можете получить свою награду. Вы отыграли: &6%statistic_minutes_played% &fиз &c120 &fминут'
   - '$Script$%elseif%%mycommand_playerdata_takenrewards13%!=NoData<and>$arg1==13'
   - ""$text$&6&lMine&c&lLord &8› &fВы уже получили эту награду.""
   - '%PlayerOptions%playSound: ENTITY_VILLAGER_NO'
   - '$Script$%elseif%%statistic_minutes_played%>=120<and>$arg1==13'
   - ""$text$&6&lMine&c&lLord &8› &fВы успешно получили свою награду.""
   - ""$RUN_CONSOLE$lgive SHIELD_legacy $player""
   - ""$broadcasttext$&r""
   - ""$broadcasttext$&6&l♕ &fИгрок &a&l$player &fполучил &fщит &7&lНЕРУШИМОСТИ""
   - ""$broadcasttext$&r""
   - '%PlayerOptions%playSound: ENTITY_PLAYER_LEVELUP'
   - ""$RUN_CONSOLE$mycmd-playerdata set $player takenrewards13 1""
   - '$Script$%elseif%%mycommand_playerdata_takenrewards13%==NoData<and>$arg1==13'
   - '%PlayerOptions%playSound: ENTITY_VILLAGER_NO'
   - '$text$&6&lMine&c&lLord &8› &fВы не можете получить свою награду. Вы отыграли: &6%statistic_minutes_played% &fиз &c120 &fминут'
   - '$Script$%elseif%%mycommand_playerdata_takenrewards14%!=NoData<and>$arg1==14'
   - ""$text$&6&lMine&c&lLord &8› &fВы уже получили эту награду.""
   - '%PlayerOptions%playSound: ENTITY_VILLAGER_NO'
   - '$Script$%elseif%%statistic_minutes_played%>=120<and>$arg1==14'
   - ""$text$&6&lMine&c&lLord &8› &fВы успешно получили свою награду.""
   - ""$RUN_CONSOLE$lgive topor2 $player""
   - ""$broadcasttext$&r""
   - ""$broadcasttext$&6&l♕ &fИгрок &a&l$player &fполучил &fтопор &4&lТирана""
   - ""$broadcasttext$&r""
   - '%PlayerOptions%playSound: ENTITY_PLAYER_LEVELUP'
   - ""$RUN_CONSOLE$mycmd-playerdata set $player takenrewards14 1""
   - '$Script$%elseif%%mycommand_playerdata_takenrewards14%==NoData<and>$arg1==14'
   - '%PlayerOptions%playSound: ENTITY_VILLAGER_NO'
   - '$text$&6&lMine&c&lLord &8› &fВы не можете получить свою награду. Вы отыграли: &6%statistic_minutes_played% &fиз &c120 &fминут'
   - '$Script$%elseif%%mycommand_playerdata_takenrewards15%!=NoData<and>$arg1==15'
   - ""$text$&6&lMine&c&lLord &8› &fВы уже получили эту награду.""
   - '%PlayerOptions%playSound: ENTITY_VILLAGER_NO'
   - '$Script$%elseif%%statistic_minutes_played%>=120<and>$arg1==15'
   - ""$text$&6&lMine&c&lLord &8› &fВы успешно получили свою награду.""
   - ""$RUN_CONSOLE$lgive lyk $player""
   - ""$broadcasttext$&r""
   - ""$broadcasttext$&6&l♕ &fИгрок &a&l$player &fполучил &fЛук &c&lМощи""
   - ""$broadcasttext$&r""
   - '%PlayerOptions%playSound: ENTITY_PLAYER_LEVELUP'
   - ""$RUN_CONSOLE$mycmd-playerdata set $player takenrewards15 1""
   - '$Script$%elseif%%mycommand_playerdata_takenrewards15%==NoData<and>$arg1==15'
   - '%PlayerOptions%playSound: ENTITY_VILLAGER_NO'
   - '$text$&6&lMine&c&lLord &8› &fВы не можете получить свою награду. Вы отыграли: &6%statistic_minutes_played% &fиз &c120 &fминут'
   - '$Script$%elseif%%mycommand_playerdata_takenrewards16%!=NoData<and>$arg1==16'
   - ""$text$&6&lMine&c&lLord &8› &fВы уже получили эту награду.""
   - '%PlayerOptions%playSound: ENTITY_VILLAGER_NO'
   - '$Script$%elseif%%statistic_minutes_played%>=120<and>$arg1==16'
   - ""$text$&6&lMine&c&lLord &8› &fВы успешно получили свою награду.""
   - ""$RUN_CONSOLE$give $player endcrystal 3""
   - ""$broadcasttext$&r""
   - ""$broadcasttext$&6&l♕ &fИгрок &a&l$player &fполучил Эндер-Кристали""
   - ""$broadcasttext$&r""
   - '%PlayerOptions%playSound: ENTITY_PLAYER_LEVELUP'
   - ""$RUN_CONSOLE$mycmd-playerdata set $player takenrewards16 1""
   - '$Script$%elseif%%mycommand_playerdata_takenrewards16%==NoData<and>$arg1==17'
   - '%PlayerOptions%playSound: ENTITY_VILLAGER_NO'
   - '$text$&6&lMine&c&lLord &8› &fВы не можете получить свою награду. Вы отыграли: &6%statistic_minutes_played% &fиз &c120 &fминут'
   - '$Script$%elseif%%mycommand_playerdata_takenrewards17%!=NoData<and>$arg1==17'
   - ""$text$&6&lMine&c&lLord &8› &fВы уже получили эту награду.""
   - '%PlayerOptions%playSound: ENTITY_VILLAGER_NO'
   - '$Script$%elseif%%statistic_minutes_played%>=180<and>$arg1==17'
   - ""$text$&6&lMine&c&lLord &8› &fВы успешно получили свою награду.""
   - ""$RUN_CONSOLE$give $player endcrystal 3""
   - ""$broadcasttext$&r""
   - ""$broadcasttext$&6&l♕ &fИгрок &a&l$player &fполучил Эндер-Кристалы""
   - ""$broadcasttext$&r""
   - '%PlayerOptions%playSound: ENTITY_PLAYER_LEVELUP'
   - ""$RUN_CONSOLE$mycmd-playerdata set $player takenrewards17 1""
   - '$Script$%elseif%%mycommand_playerdata_takenrewards17%==NoData<and>$arg1==17'
   - '%PlayerOptions%playSound: ENTITY_VILLAGER_NO'
   - '$text$&6&lMine&c&lLord &8› &fВы не можете получить свою награду. Вы отыграли: &6%statistic_minutes_played% &fиз &c180 &fминут'
   - '$Script$%elseif%%mycommand_playerdata_takenrewards18%!=NoData<and>$arg1==18'
   - ""$text$&6&lMine&c&lLord &8› &fВы уже получили эту награду.""
   - '%PlayerOptions%playSound: ENTITY_VILLAGER_NO'
   - '$Script$%elseif%%statistic_hours_played%>=24<and>$arg1==18'
   - ""$text$&6&lMine&c&lLord &8› &fВы успешно получили свою награду.""
   - ""$RUN_CONSOLE$give $player enchantedgoldenapple 1""
   - ""$broadcasttext$&r""
   - ""$broadcasttext$&6&l♕ &fИгрок &a&l$player &fполучил Золотые яблоки""
   - ""$broadcasttext$&r""
   - '%PlayerOptions%playSound: ENTITY_PLAYER_LEVELUP'
   - ""$RUN_CONSOLE$mycmd-playerdata set $player takenrewards18 1""
   - '$Script$%elseif%%mycommand_playerdata_takenrewards18%==NoData<and>$arg1==18'
   - '%PlayerOptions%playSound: ENTITY_VILLAGER_NO'
   - '$text$&6&lMine&c&lLord &8› &fВы не можете получить свою награду. Вы отыграли: &6%statistic_hours_played% &fиз &c24 &fчасов'
   - '$Script$%else%'
   - '$text$&cВы выбрали неверный номер награды!'
  required_args: 1
  error-message: '&cВы не выбрали номер награды!'
  register: true
  tab_completer:
    1:
      - '1'
      - '2'
      - '3'
      - '4'
      - '5'
      - '6'
      - '7'
      - '8'
      - '9'
      - '10'
      - '11'
      - '12'
      - '13'
      - '14'
      - '15'
      - '16'
      - '17'
      - '18'
  permission-required: false"
yAt2QKJ6,арифметическая закупа,pasholnahuy,C++,Wednesday 31st of May 2023 01:43:46 PM CDT,"#include <iostream>
#include <vector>
#include <map>
#include <random>
#include <algorithm>
#pragma GCC optimize(""Ofast,fast-math,unroll-loops,no-stack-protector,inline"")
#pragma GCC target(""sse,sse2,sse3,ssse3,sse4,sse4.1,sse4.2,avx,avx2,abm,mmx,popcnt"")

using int64 = int;
using namespace std;


bool bs(vector<int64> &vec, int64 el) {
    int64 l = 0, r = vec.size();
    while (r - l > 1) {
        int64 m = (l + r) / 2;
        if (vec[m] > el) {
            r = m;
        } else {
            l = m;
        }
    }
    return vec[l] == el;
}

pair<int64, int64> Check(int64 a, int64 d, vector<int64> &vec) {
    int64 cnt = 1;
    int64 minim = a;
    while (minim - d >= vec[0] && bs(vec, minim - d)) {
        ++cnt;
        minim -= d;
        if (cnt == vec.size()/2){
            break;
        }
    }
    if (cnt < vec.size()/2){
        int64 maxi = a;
        while (maxi + d <= vec.back() && bs(vec, maxi + d)) {
            ++cnt;
            if (cnt == vec.size()/2){
                break;
            }
            maxi += d;
        }
    }
    return {cnt, minim};
}

mt19937 generator;

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);

    int64 n;
    cin >> n;
    vector<int64> vec(2 * n);
    map<int64, int64> counter;
    for (int64 i = 0; i < 2 * n; ++i) {
        cin >> vec[i];
        ++counter[vec[i]];
        if (counter[vec[i]] >= n) {
            cout << vec[i] << "" 0"" << ""\n"";
            return 0;
        }
    }
    sort(vec.begin(), vec.end());

    if (n == 1) {
        cout << vec[0] << "" 0"" ""\n"";
        return 0;
    }
    bool flag_odd = true;
    for (int64 i = 3; i < 2 * n - 2; i += 2) {
        if (vec[i] - vec[i - 2] != vec[i+2] - vec[i]){
            flag_odd = false;
            break;
        }
    }
    if (flag_odd){
        cout << vec[1] << "" "" << vec[3] - vec[1];
        return 0;
    }
    bool flag_even = true;
    for (int64 i = 2; i < 2 * n - 2; i += 2) {
        if (vec[i] - vec[i - 2] != vec[i+2] - vec[i]){
            flag_even= false;
            break;
        }
    }
    if (flag_even){
        cout << vec[0] << "" "" << vec[2] - vec[0];
        return 0;
    }
    while (true) {
        int64 l = (generator() % (2 * n) + 2 * n) % (2 * n);
        int64 r = (generator() % (2 * n) + 2 * n) % (2 * n);

        if (l >= r) continue;
        int64 diff = vec[r] - vec[l];

        for (int64 k = 1; k * k <= diff; ++k) {
            if (diff % k != 0) continue;

            auto [cnt, minim] = Check(vec[l], k, vec);
            if (cnt == n) {
                cout << minim << "" "" << k;
                return 0;
            }
            if (k * k == diff) continue;
            auto [cnt_2, minim_2] = Check(vec[l], n/k, vec);
            if (cnt_2 == n) {
                cout << minim_2 << "" "" << n / k;
                return 0;
            }
        }
    }
    return 0;
}"
xaEyir4r,10. Multiply Evens by Odds,veronikaaa86,Java,Wednesday 31st of May 2023 01:41:52 PM CDT,"package methods;

import java.util.Arrays;
import java.util.Scanner;

public class P10MultiplyEvensByOdds {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        int num = Math.abs(Integer.parseInt(scanner.nextLine()));

        System.out.println(multiply(num));
    }

    public static int multiply(int num) {
        return evenSum(num) * oddSum(num);
    }
    
    public static int evenSum(int num) {
        String intToString = Integer.toString(num);

        int[] arr = Arrays.stream(intToString.split(""""))
                .mapToInt(Integer::parseInt)
                .toArray();

        int sum = 0;
        for (int n : arr) {
            if (n % 2 == 0) {
                sum += n;
            }
        }

        return sum;
    }

    public static int oddSum(int num) {
        String intToString = Integer.toString(num);

        int[] arr = Arrays.stream(intToString.split(""""))
                .mapToInt(Integer::parseInt)
                .toArray();

        int sum = 0;
        for (int n : arr) {
            if (n % 2 != 0) {
                sum += n;
            }
        }

        return sum;
    }
}
"
fe6yuQw7,Countdown display on multiple screen FTB CC,Steamer1,Lua,Wednesday 31st of May 2023 01:41:43 PM CDT,"os.loadAPI(""bigfont"")

function getPeripherals()
	mainMonitor = peripheral.wrap(""monitor_4"")
    monitors = {
        peripheral.wrap(""monitor_5"");
        peripheral.wrap(""monitor_6"");
		peripheral.wrap(""monitor_7"");
    }
end

function paintMonitor(color)
	mainMonitor.setTextScale(1.5)
    mainMonitor.setBackgroundColor(color)
	mainMonitor.clear()
    for _, mon in ipairs(monitors) do
        mon.setBackgroundColor(color)
		mon.clear()
    end
end

function writeBigScreen(value, size)
	mainMonitor.setBackgroundColor(colors.red)
	bigfont.writeOn(mainMonitor, size, "" ""..tostring(value).."" "")
end

function writeSmallScreen(value)
	for _, mon in ipairs(monitors) do
		mon.setBackgroundColor(colors.red)
		mon.setCursorPos(3,2)
		mon.write(tostring(value).."" "")
	end
end

while true do
	if redstone.getInput(""left"") then
		getPeripherals()
		paintMonitor(colors.red)
		i = 10
		while i > 0 do
   			writeBigScreen(i, 2)
   			writeSmallScreen(i)
   			i = i - 1
   			sleep(1)
		end
		paintMonitor(colors.red)
		writeBigScreen(""TAKE OFF"", 1)
		writeSmallScreen(0)
		sleep(10)
		paintMonitor(colors.black)
	end
	sleep(5)
end"
eDxR9KWC,CC Player Detection Open Door,isaio,Lua,Wednesday 31st of May 2023 01:37:57 PM CDT,"local detector = peripheral.find(""playerDetector"")

if detector == nil then
	error(""Player Detector not found"")
end

local doorIsOpen = false
local detectionRange = 3
local playerDetected = false
local authorizedPlayer = ""isaio""
local checkInterval = 2

while true do
	playerDetected = detector.isPlayerInRange(detectionRange, authorizedPlayer)

	if playerDetected and doorIsOpen then
		print(""Player standing, doing nothing"")
	elseif playerDetected and doorIsOpen == false then
		redstone.setOutput(""top"", true)
		doorIsOpen = true
	else
		redst.setOutput(""top"", false)
		doorIsOpen = false
	end

	sleep(checkInterval)
end"
YueEcT5Q,maya to brawlcrate,DoctorFlux,Python,Wednesday 31st of May 2023 01:35:36 PM CDT,"'''
THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
'''

bl_info = {
    ""name"": ""Brawlbox (.anim) and (.dae)"",
    ""author"": ""Wayde Brandon Moss"",
    ""version"": (6, 0),
    ""blender"": (2, 81, 0),
    ""location"": ""File > Import/Export"",
    ""description"": ""Importing/Exporting a brawlbox-readable maya animation file."",
    ""category"": ""Import-Export""}

'''
Collada Stability purposes (using colladas that weren't necessarily exported by BB):
    -don't use Name_array's id or float_array's id to get bone names and bind matrices. Read <joints>'s input semantics for JOINT and INV_BIND_MATRIX instead 

possible support for exporting .dae's:
    -blender .dae exporter does not export bone bind matrices correctly (only locations are correct)
    --nor the polygon bind matrix..or polygon weights array...
'''
#.anim format
#https://knowledge.autodesk.com/support/maya/learn-explore/caas/CloudHelp/cloudhelp/2016/ENU/Maya/files/GUID-87541258-2463-497A-A3D7-3DEA4C852644-htm.html 

import math
import os
import re
import xml.etree.ElementTree as ET
from math import atan2, ceil, cos, degrees, floor, isclose, pi, radians, sin,tan

import bpy
from bpy.props import BoolProperty, EnumProperty, IntProperty, StringProperty,CollectionProperty
from bpy.types import Operator, OperatorFileListElement
from bpy_extras.io_utils import ExportHelper, ImportHelper
from mathutils import Euler, Matrix, Quaternion, Vector

is_blender_280  = bpy.app.version > (2,79,0)
is_blender_279 = not is_blender_280

'''
Current workflow 0:

    Model:
        BB: Export as collada
        Blender: Import collada with bindpose (use this script. If the model is already imported, just use this script to apply the bind pose to it)
                (automated)
                    pose mode-> set all pose bone rotation modes to XYZ
                    edit mode-> rotate joints so their axes match those in BB

    Animations:

        Importing to Blender from Brawlbox
            BB:
                Export as .anim
            Blender:
                select character
                import animation
                    (automated)
                        set active_object['brawl_root'] to root bone name
                        set keying set to LocRotScale
                        key everyframe.py
                        select root
                        apply_base_pose to action

        Exporting to Brawlbox from Blender
            Blender:
                set to-be-exported action as the active action 
                export animation
                    -As of July7 2019 both brawlbox BB71 and BB78 will set weight2=0. A flag has been added to counter the effect on the tangents when imported into Brawlbox.


Notes:
    BrawlBox .anim importer has a bug which reads weight2=0, always. Updated the Blender exporter to double weight1 so BB doesn't halve the tangent result.
    Brawl tangents frames are limited to 1/3 way to adjacent key and they must be aligned. Using AUTO or AUTOCLAMPED blender tangents will take care of both of these constraints.
    As an alternative, I've added an operator: ""Brawl Limit Tangents"", which will apply these limits. The advantage is to have more freedom over your tangents.
'''

def set_active_object(context,obj):
    context.view_layer 
__bl_classes = []
def register_wrap(cls):
    #source: blender_mmd_tools-dev_test\mmd_tools\init.py
    #print('%3d'%len(__bl_classes), cls)
    #assert(cls not in __bl_classes)
    #make props as annotations. No longer needed. Not gonna support preB280
    #if is_blender_280:
    #    bl_props = {k:v for k, v in cls.__dict__.items() if isinstance(v, tuple)}
    #    if bl_props:
    #        if '__annotations__' not in cls.__dict__:
    #            setattr(cls, '__annotations__', {})
    #        annotations = cls.__dict__['__annotations__']
    #        for k, v in bl_props.items():
    #            #print('   -', k, v[0])
    #            #assert(getattr(v[0], '__module__', None) == 'bpy.props' and isinstance(v[1], dict))
    #            annotations[k] = v
    #            delattr(cls, k)
    if hasattr(cls, 'bl_rna'):
        __bl_classes.append(cls)
    return cls

def get_filename(path):
    return os.path.splitext(os.path.basename(path))[0]
def trim_comments(anim_file_lines):
    result = []
    for line in anim_file_lines:
        if not line.startswith(r'//'):
            result.append(line)
    return result
def read_until(start_index, lines, break_symbol):
    result = []
    for i, line in enumerate_start(start_index, lines):

        if break_symbol in line:
            break
        else:
            result.append(line)

    return i, result
def line_value_int(line):
    #assumes line in format of 'identifier value'
    return int(line.split(' ')[1])
def line_value_str(line):
    #assumes line in format of 'identifier value'
    return line.split(' ')[1]

def action_from_maya_anim_format(context, anim_name, anim_file_lines,from_maya):


    #this code fixes the problem where the imported animation may be offseted (rot, loc and/or scale)
    #if the character is not already in rest pose. I don't know why it happens.
    prev_auto = context.scene.tool_settings.use_keyframe_insert_auto
    context.scene.tool_settings.use_keyframe_insert_auto = False

    bpy.ops.object.mode_set(mode='POSE')

    bpy.ops.pose.select_all(action='SELECT')
    bpy.ops.pose.loc_clear()
    bpy.ops.pose.rot_clear()
    bpy.ops.pose.scale_clear()


    context.scene.tool_settings.use_keyframe_insert_auto = prev_auto


    #remove comments, semicolons and leading and trailing whitespace
    anim_file_lines = trim_comments(anim_file_lines)

    for i, line in enumerate_start(0, anim_file_lines):
        anim_file_lines[i] = line.replace(';', '').strip()

    print('extracting header attributes')
    #group the lines into more convenient structures
    anim_start_index, header_lines = read_until(0, anim_file_lines, 'anim ')

    '''
    treats start/endTime and Unitless variations as equivalent to frame index.
    only supports 'deg' and 'rad' angular units
    '''
    frame_start_line = ''
    frame_end_line = ''
    angular_unit_line = ''
    for line in header_lines:
        if line.startswith('startTime') or line.startswith('startUnitless'):
            frame_start_line = line
        elif line.startswith('endTime') or line.startswith('endUnitless'):
            frame_end_line = line
        elif line.startswith('angularUnit'):
            angular_unit_line = line

    print('extracting animation datas')
    #(anim_line, [animData attribute lines],[animData key lines] )
    anim_info_lines = []
    iterator = enumerate_start(anim_start_index, anim_file_lines)
    for i, line in iterator:
        if line.startswith('anim '):
            anim_line = line
            animData_attr_lines = None
            animData_key_lines = None

            if anim_file_lines[i+1].startswith('animData'):
                '''if exists, animData must follow the anim line  according to format specs'''
                #use same iterator so the current_index of both loops are affected
                #note that entering this loop gives the next line after 'animData {' as desired
                i, animData_attr_lines = read_until(i + 2, anim_file_lines,'keys')
                #note: the next i+1 skips the ' keys' line
                '''assumes keys open-bracket occurs on same line'''
                i, animData_key_lines = read_until(i + 1, anim_file_lines,'}')

                iterator.current_index = i + 1

            anim_info_lines.append((anim_line, animData_attr_lines, animData_key_lines))


    print('parsing header')

    frame_start = line_value_int(frame_start_line)
    frame_end = line_value_int(frame_end_line)
    angular_unit = line_value_str(angular_unit_line)
    angle_scaling = math.pi/180.0 if 'deg' in angular_unit else 1
    
    print('parsing animation datas')

    attr_to_component = {'translate' : 'location',\
                         'rotate' : 'rotation_euler',\
                         'scale' : 'scale'}
    #allows conversion of rads to degrees w/o affecting conversion of translation and scale.
    component_scaling = {'translate' : 1,\
                         'rotate' : angle_scaling,\
                         'scale' : 1}
    axis_to_index = {'X': 0,'x':0, 'Y':1,'y':1,'Z':2,'z':2 , 'W':3,'w':3}
    handle_type = {'fixed' : 'FREE', 'auto' : 'AUTO', 'linear':'AUTO'}

    #(bone_name, channel data path, channel array_index, [key infos])
    #keyinfo: (key, handle_left, handle_right)
    #handle: (type, angle, weight)
    parsed_anim_infos = []
    for anim_info in anim_info_lines:
        anim_line = anim_info[0]
        animData_key_lines = anim_info[2]

        anim_line_split = anim_line.split(' ')
        anim_line_split_len = len(anim_line_split)

        if anim_line_split_len == 5:
            '''not supported. Insufficient info to determine joint to animate'''
            #name may be an attribute name.. or a node name, according to docs
            #tag, name, row, child, attr_index = anim_line_split
            print('warning: line format not supported ({0})'.format(anim_line))
        elif anim_line_split_len == 4:
            '''not supported. Insufficient info to determine joint to animate'''
            #tag, row, child, attr_index = anim_line_split
            print('warning: line format not supported ({0})'.format(anim_line))
        else:
            tag, attr_full_name, attr_leaf_name, node_name, row, child, attr_index = anim_line_split

            attr_name = attr_leaf_name[:-1]
            array_index = axis_to_index[attr_leaf_name[-1]]
            if array_index == 3:
                component = 'rotation_quaternion'
            else:
                
                if attr_name not in attr_to_component:
                    print('attribute not supported, skipped: ' + anim_line )
                    continue 

                component = attr_to_component[attr_name]
            key_value_scaling = component_scaling[attr_name]
            data_path = 'pose.bones[\""{0}\""].{1}'.format(node_name, component)

            '''
            currently, i'm going to assume that the imported rotation type and order matches the imported armature data.
            ...also just going to assume the rotation is euler and order:XYZ ...
            '''
            parsed_keyinfos = []

            #(bone_name, channel data path, channel array_index, [key infos])
            parsed_anim_infos.append((node_name, data_path, array_index, parsed_keyinfos))
            for key_line in animData_key_lines:
                key_line_split = key_line.split(' ')
                key_line_len = len(key_line_split)
                splice_offset = 0
                frame, value, type_left, type_right, tan_locked, weight_locked, breakdown= key_line_split[0 + splice_offset: 7 + splice_offset]

                angle_left = '0'
                weight_left = '0'
                angle_right = '0'
                weight_right = '0'

                if type_left == 'fixed':
                    angle_left, weight_left = key_line_split[7 + splice_offset:9 + splice_offset]

                    if type_right == 'fixed':
                        angle_right, weight_right = key_line_split[9 + splice_offset:12 + splice_offset]

                elif type_right == 'fixed':
                    angle_right, weight_right = key_line_split[7 + splice_offset:9 + splice_offset]

                #if node_name == 'HipN' and data_path == 'pose.bones[""HipN""].location' and array_index==1:
                #    print('angle:{0} weight:{1}'.format(angle_left,weight_left))
                #(key, handle_left, handle_right)    
                parsed_keyinfos.append(((int(frame),float(value) * key_value_scaling),\
                                        (handle_type[type_left],float(angle_left)* angle_scaling, float(weight_left)),\
                                        (handle_type[type_right],float(angle_right)* angle_scaling, float(weight_right))))


    print('creating animation datas')

    #..this operator does not work..
    #bpy.ops.action.new(context_override)
    action = context.blend_data.actions.new(anim_name)

    if context.active_object.animation_data is None:
        context.active_object.animation_data_create()

    context.active_object.animation_data.action = action

    context.scene.frame_preview_start = frame_start
    context.scene.frame_preview_end = frame_end
    context.scene.use_preview_range = True

    '''
    unique_bone_names = set([info[0] for info in parsed_anim_infos])
    creating bone groups and fcurves done automatically when bindpose is keyframed. 
    no need to do that manually anymore.
    '''
    #bone_groups = {}
    #for bone_name in unique_bone_names:
    #    anim_group = action.groups.new(bone_name)
    #    anim_group.name = bone_name
    #    bone_groups[bone_name] = anim_group

    #for channel_info in parsed_anim_infos:
    #    bone_name = channel_info[0]
    #    channel_data_path = channel_info[1]
    #    channel_array_index = channel_info[2]

    #    channel_curve = action.fcurves.new(channel_data_path, index=channel_array_index, action_group=bone_groups[bone_name].name)
    

    #replace missing keyframes for the first key of each bone with the bind pose value
    #since Brawlbox doesn't export the bindpose as a keyframe, it treats bindpose as identity
    #afterwards, imported keys will overwrite bindpose keys. Missing keyframes will leave the bindpose keys.
    #-
    #for exported animations, since BB treats missing keys as bind, we don't have to do so manually again
    keyframe_bindpose(context,frame_start)
    
    for channel_info in parsed_anim_infos:
        bone_name = channel_info[0]
        channel_data_path = channel_info[1]
        channel_array_index = channel_info[2]
        channel_keyinfos = channel_info[3]


        #user:readme:todo:bug: sometimes collada importer misses some bones? Ex: Kirby's HeadItmN bone isn't imported...
        #since that bone seems unimportant, i'm not too worried about it. 
        if bone_name not in action.groups:
            continue 

        channel_curve = [fcurve for fcurve in action.groups[bone_name].channels if ((fcurve.data_path == channel_data_path) and (fcurve.array_index == channel_array_index ))][0]
        #print('{0} {1} {2}'.format(bone_name, channel_data_path, channel_array_index))
        for key_info in channel_keyinfos:
            
            #print(key_info)
            key = key_info[0]
            handle_left, handle_right = (key_info[1], key_info[2])
            handle_left_angle, handle_right_angle = (handle_left[1], handle_right[1])
            weight_left, weight_right = (handle_left[2], handle_right[2])

            #for rotation componemnts, blender treats writes as if they're in radians, the unit of the rotation component., yet (i think) the ratio is already in degrees/frames
            handle_left_offset =  [-1, -tan(handle_left_angle)]
            handle_right_offset = [1, tan(handle_right_angle)]
 
            
            #I think the tangent is given in units of degrees, so we have to convert to rads for blender?
            if channel_data_path.endswith('rotation_euler'):
                handle_left_offset[1] = handle_left_offset[1] * (math.pi/180.0)
                handle_right_offset[1] = handle_right_offset[1] * (math.pi/180.0)
                
            #maya testing
            if from_maya:
                #https://download.autodesk.com/us/maya/2010help/API/class_m_fn_anim_curve.html
                ''' 
                 One important note is how the outgoing and incoming tangents directions for a key are saved internally and in the Maya Ascii file format.
                 Instead of being specified as points, the tangent directions are specified as vectors. The outgoing tangent direction at P1 is specified and 
                 saved as the vector 3*(P2 - P1) and the incoming tangent direction is specified and saved as the vector 3*(P4 - P3).
                '''
                #(tan1,weight1) -> 3 * (p4-p3) -> 3*(current_co - handle_left)
                #(tan2,weight2) -> 3 * (p2-p1) -> 3*(handle_right - current_co)
                #in_vec = Vector((weight_left,handle_left_angle))
                #out_vec = Vector((weight_right,handle_right_angle))
                #handle_left_offset = -(in_vec * (1.0/3.0))  
                #handle_right_offset = (out_vec * (1.0/3.0))  
                handle_left_offset =  Vector((-1, -tan(handle_left_angle) ))
                handle_right_offset = Vector((1, tan(handle_right_angle) ))
    
                handle_left_offset = handle_left_offset.normalized()* weight_left
                handle_right_offset = handle_right_offset.normalized()* weight_right
                
                if channel_data_path.endswith('rotation_euler'):
                    handle_left_offset[1] = handle_left_offset[1] * (math.pi/180.0)
                    handle_right_offset[1] = handle_right_offset[1] * (math.pi/180.0)
                
            #if bone_name == 'HipN' and channel_data_path == 'pose.bones[""HipN""].rotation_euler' and channel_array_index==1:
            #    print('F{3} angle:{0} weight:{1} yoffset:{2} '.format(handle_left_angle * 180.0/math.pi,(weight_left-1),handle_left_offset[1],key[0]))



            key_frame = channel_curve.keyframe_points.insert(key[0],key[1])
            key_frame.interpolation ='BEZIER'# 'CONSTANT'#'BEZIER'
            key_frame.co = key
            #print(key_frame.co)
            key_frame.handle_left_type = handle_left[0]
            key_frame.handle_right_type = handle_right[0]
            
            if handle_left[0] is not 'AUTO':
                key_frame.handle_left = (key[0] + handle_left_offset[0], key[1] + handle_left_offset[1])
            if handle_right[0] is not 'AUTO':
                key_frame.handle_right = (key[0] + handle_right_offset[0], key[1] + handle_right_offset[1])

                
        if not from_maya:
            for i in range(0,len(channel_curve.keyframe_points)):
                keyframe = channel_curve.keyframe_points[i]
                co = keyframe.co 

                if keyframe.handle_left_type != 'AUTO' and i > 0:
                    keyframe_left = channel_curve.keyframe_points[i-1]
                    offset = abs(co[0] - keyframe_left.co[0]) 
                    keyframe.handle_left = (co[0] - (1.0/3.0) * offset ,co[1] + (keyframe.handle_left[1] - co[1]) * offset/3.0 ) 
                if  keyframe.handle_right_type != 'AUTO' and i < len(channel_curve.keyframe_points) - 1:
                    keyframe_right = channel_curve.keyframe_points[i+1]
                    offset = abs(co[0] - keyframe_right.co[0])
                    keyframe.handle_right = (keyframe_right.co[0] - (2.0/3.0) * (keyframe_right.co[0] - co[0]),co[1] + (keyframe.handle_right[1] - co[1]) * offset/3.0)


    print('.. finished parsing maya animation')

    return action

def action_to_maya_anim_format(context,bugfix_weight=True):
    #BB71 and BB78 importer has a bug that reads weight2=0, and thus halve's the tangent.
    #the bugfix will double weight2 to compensate.
    #(BB71 exporter weights are redundant too, since angle given)
    '''
    -only exports brawl_root and children
    -does not bake IK beforehand
    -only exports keys in the timeline preview range
    -does not keyframe bindpose to first frame, as opposed to anim importing, since BB will use the bindpose values for missing first-keys anyways

    BB necessary .anim export data format:

    startTime [value];
    endTime [value];
    angularUnit deg;
    //foreach bone's animated component and axis.
    anim [unused] [component in 'translate','rotate','scale'][axis] [bone name]
    animData {
    keys {
    [time (unit: frame counts, not seconds)] [component value] [left tangent type in 'fixed', 'auto'] [right tangent type] [left tangent angle in degrees] 1 [r tan angle] 1;
    }
    }

    '''
    active_object = context.active_object
    action = active_object.animation_data.action
    frame_start = context.scene.frame_preview_start
    frame_end = context.scene.frame_preview_end
    result_text_lines = []
    root_bone = get_root_pose_bone(active_object)
    brawl_bone_names = set()
    brawl_bone_names.add(root_bone.name)
    for child in root_bone.children_recursive:
        brawl_bone_names.add(child.name)

    axis = ['X','Y','Z','W']
    component = {'rotation_euler': 'rotate',\
                'rotation_quaternion': 'rotate',\
                'rotation_axis_angle': 'rotate',\
                'location': 'translate',\
                'scale': 'scale',\
    }


    exp = re.compile(r"".+\.([^\.]+)$"")

    component_scaling = {'rotate':180.0/math.pi,'scale':1,'translate':1}
    #extract necessary animation data only for brawl bones
    exported_groups = [bone_group for bone_group in action.groups if bone_group.name in brawl_bone_names]
    anims = []

    #BB71 and BB78 importer has a bug that reads weight2=0, and thus halve's the tangent.
    #the bugfix will double weight2 to compensate.
    #(BB71 exporter weights are redundant too, since angle given)
    weight_left = 1
    weight_right = 1
    if bugfix_weight:
        weight_left = 2
        weight_right = 0

    for bone_group in exported_groups :
        # channel is fcurve
        for channel in bone_group.channels :
            array_index = channel.array_index
            #example: 'pose.bones[""LKneeJ""].location'
            data_path = channel.data_path
            data_component = exp.sub(r'\1',data_path)

            if data_component not in component:
                continue

            bb_data_component = component[data_component]
            #(""[component][axis]"", [bone name],  keyframes)
            keys = []
            #print(data_path)
            #print(data_component)
            anims.append((bb_data_component + axis[array_index],bone_group.name, keys))
            key_value_scaling = component_scaling[bb_data_component]
            for key_info in channel.keyframe_points:
                frame = int(key_info.co[0])
                #for rotation components, values are in radians
                value = key_info.co[1] * key_value_scaling
                if (frame>= frame_start and frame <= frame_end):
                    handle_left = key_info.handle_left
                    offset_left = (frame - handle_left[0], value - (handle_left[1] * key_value_scaling))
                    angle_left = degrees(atan2(offset_left[1],offset_left[0]))
                    type_left = 'fixed'

                    handle_right = key_info.handle_right
                    offset_right = (handle_right[0] - frame,  (handle_right[1] * key_value_scaling) - value)
                    angle_right = degrees(atan2(offset_right[1],offset_right[0]))
                    type_right = 'fixed'

                    #if data_path.endswith('rotation_euler'):
                    #    angle_left = degrees(atan2(offset_left[1],offset_left[0] / (math.pi/180.0)))
                    #    angle_right = degrees(atan2(offset_right[1],offset_right[0] / (math.pi/180.0)))

                        
                    #if  data_path == 'pose.bones[""HipN""].rotation_euler' and array_index==1:
                    #    print('F{0} angleL:{1} angleR:{2}'.format(frame,angle_left,angle_right))
                    #    print('key{0} left{1} right{2}'.format(value,handle_left[1],handle_right[1]))
                    keys.append((frame, value, type_left, type_right, angle_left, weight_left, angle_right, weight_right))

    #print(anims)
    #for anim_info in anims:
    #    print(""{0} {1} Keys:{2}"".format(channel_info[0],channel_info[1],len(channel_info[2])))

    result_text_lines.append('startTime {0};'.format(frame_start))
    result_text_lines.append('endTime {0};'.format(frame_end))
    result_text_lines.append('angularUnit deg;')


    for anim_info in anims:
        result_text_lines.append('anim {0} {1} {2} {0} {0} {0}'.format('unused',anim_info[0],anim_info[1]))
        result_text_lines.append(r'animData {')
        result_text_lines.append(r' keys {')

        for key_info in anim_info[2]:
            #unpack key_info to string format args
            result_text_lines.append(' {0} {1} {2} {3} 1 1 0 {4} {5} {6} {7};'.format(*key_info))

        result_text_lines.append(r' }')
        result_text_lines.append(r'}')

    return result_text_lines

def calculate_local_bind_matrices(active_object):
    bind_matrices = {}
    root = get_root_edit_bone(active_object)
    root_children_recursive = [child for child in root.children_recursive if 'brawl_bind' in child]
    
    for bone in root_children_recursive:
        bind_matrices[bone.name] = matrix_from_sequence(bone.parent['brawl_bind']).inverted() @ matrix_from_sequence(bone['brawl_bind'])
    bind_matrices[root.name] = matrix_from_sequence(root['brawl_bind'])

    return bind_matrices

def brawlbox_anim_import(context, filepath,from_maya):
    '''
    imports action directly
    '''

    filename = get_filename(filepath)

    print('reading in file..' + filename)
    with open(filepath, 'r', encoding='utf-8') as f:
        anim_file_lines = f.readlines()
    print('finished reading file')

    print(""converting to action.."")
    action = action_from_maya_anim_format(context, filename, anim_file_lines,from_maya)
    print(""... finished converting to action"")

    print('.. finished importing maya animation: ' + filename)

    return action


def keyframe_bindpose(context,bind_frame):
    pre_mode = context.mode
    pre_frame = context.scene.frame_current

    bpy.ops.object.mode_set(mode='EDIT')
    bind_matrices = calculate_local_bind_matrices(context.active_object)

    bpy.ops.object.mode_set( mode='POSE')
    pose_bones = context.active_object.pose.bones

    context.scene.frame_set(bind_frame)
    

    #BB wont export a key if the xform is equal to the bind pose
    #so missing keys are imported as identity
    #but they should be equal to bind so we fix that here.
    for bone_name,bone_bind in bind_matrices.items():
        pose_bone = pose_bones[bone_name]
        pose_bone.matrix_basis = bone_bind
        pose_bone.keyframe_insert(data_path='location',group=bone_name)
        pose_bone.keyframe_insert(data_path='rotation_euler',group=bone_name)
        pose_bone.keyframe_insert(data_path='scale',group=bone_name)

    context.scene.frame_set(pre_frame)
    bpy.ops.object.mode_set(mode=pre_mode)

def create_identityRigBB(context):
    active_object = context.active_object
    
    bpy.ops.object.mode_set(mode='EDIT')
    edit_root = get_root_edit_bone(active_object)
    bones = [bone.name for bone in edit_root.children_recursive]
    bones.append(edit_root.name)
    parents = {bone.name: bone.parent.name for bone in active_object.data.bones if bone.parent}
    
    bind_matrices = calculate_local_bind_matrices(context.active_object)
    arm_bind_matrices = {}
    for editbone in active_object.data.edit_bones:
        arm_bind_matrices[editbone.name] = matrix_from_sequence(editbone['brawl_bind'])
    
    bpy.ops.object.mode_set(mode='OBJECT')
    dummy_armature = bpy.data.armatures.new(name='_anim_arm_' +active_object.data.name)
    dummy_object = bpy.data.objects.new(name='_anim_obj_' + active_object.name,object_data = dummy_armature)
    #context.scene.objects.link(dummy_object)
    context.view_layer.active_layer_collection.collection.objects.link(dummy_object)
    dummy_object.matrix_world = active_object.matrix_world.copy()
    dummy_object.show_in_front=True

    context.view_layer.objects.active  = dummy_object
    dummy_object.select_set(True)

    bpy.ops.object.mode_set(mode='EDIT')
    matrix_identity = Matrix.Scale(1,4,Vector((0,1,0)))
    
    for bone_name in bones:
        new_edit_bone = dummy_armature.edit_bones.new(bone_name)
        new_edit_bone.select = new_edit_bone.select_head=new_edit_bone.select_tail=True
        new_edit_bone.tail = (0,1,0)
        new_edit_bone.matrix = matrix_identity.copy()
        new_edit_bone['brawl_bind'] =matrix_to_sequence( arm_bind_matrices[bone_name])
        
    #print(repr(parents))
    for bone_name in bones:
        if bone_name in parents:
            parent_name = parents[bone_name]
            dummy_armature.edit_bones[bone_name].parent = dummy_armature.edit_bones[parent_name]

    bpy.ops.object.mode_set(mode='POSE')
    
    dummy_pose_bones = dummy_object.pose.bones
    active_pose_bones = active_object.pose.bones

    arm_matrices = {}
    for bone_name in bones:
        pose_bone = dummy_pose_bones[bone_name]
        bind = bind_matrices[bone_name]
        pose_bone.matrix_basis = bind
        pose_bone.rotation_mode = 'XYZ'
        #used for clearing loc/rot/scale
        pose_bone['brawl_local_bind_pose'] = matrix_to_sequence(bind)
        #pose_bone['brawl_bind'] = matrix_to_sequence( arm_bind_matrices[bone_name])

    update_scene_frame_set()
    context.view_layer.depsgraph.update()
    #context.scene.update()
    for bone_name in bones:
        arm_matrices[bone_name] = dummy_pose_bones[bone_name].matrix.copy()
    
    context.view_layer.objects.active  = active_object
    bpy.ops.object.mode_set(mode='POSE')
    
    for bone_name in bones:
        active_pose_bone = active_pose_bones[bone_name]
        
        #constraints works fine since both rigs have same world-space TPose
        con  =active_pose_bone.constraints.new('COPY_LOCATION')
        con.influence=1
        con.mute=False
        #con.active=True
        con.target= dummy_object
        con.subtarget = bone_name
        con.owner_space = 'WORLD'
        con.target_space='WORLD'
        con.use_x = True
        con.use_y = True
        con.use_z = True

        con  =active_pose_bone.constraints.new('COPY_ROTATION')
        con.influence=1
        con.mute=False
        #con.active=True
        con.target= dummy_object
        con.subtarget = bone_name
        con.owner_space = 'WORLD'
        con.target_space='WORLD'
        con.use_x = True
        con.use_y = True
        con.use_z = True

        #the constrained armature's world pose bones do not have the bind scale
        #Using an offset=bindscale with a copyscale is insufficient since .. for w/e reason, Blender combines the scales as a sum, instead of the expected multiplication 
        #con  =active_pose_bone.constraints.new('COPY_SCALE')
        #con.influence=1
        #con.mute=False
        ##con.active=True
        #con.target= dummy_object
        #con.subtarget = bone_name
        #con.owner_space = 'WORLD'
        #con.target_space='WORLD'
        #con.use_x = True
        #con.use_y = True
        #con.use_z = True
 
        #the transform constraint, with extrapolation, allows the multiplied scaling result, along with accounting for the missing owner posebone bind scale.
        con  =active_pose_bone.constraints.new('TRANSFORM')
        bloc,brot,bscale = arm_bind_matrices[bone_name].decompose()
        con.influence=1
        con.mute=False
        #con.active=True
        con.target= dummy_object
        con.subtarget = bone_name
        con.owner_space = 'WORLD'
        con.target_space='WORLD'
        con.map_from = 'SCALE'
        con.map_to = 'SCALE'
        con.use_motion_extrapolate= True
        con.map_to_x_from = 'X'
        con.map_to_y_from = 'Y'
        con.map_to_z_from = 'Z'
        con.from_min_x_scale = 0
        con.from_min_y_scale = 0
        con.from_min_z_scale = 0
        con.from_max_x_scale = bscale.x
        con.from_max_y_scale = bscale.y
        con.from_max_z_scale = bscale.z
        con.to_min_x_scale = 0
        con.to_min_y_scale = 0
        con.to_min_z_scale = 0
        con.to_max_x_scale = 1
        con.to_max_y_scale = 1
        con.to_max_z_scale = 1
    

    context.view_layer.objects.active  = dummy_object
    dummy_object['brawl_root'] = active_object['brawl_root']
    dummy_object.select_set(True)
    dummy_object.show_in_front = True

    active_object.parent = dummy_object
    active_object.parent_type = 'OBJECT'
    active_object.matrix_local = Matrix.Identity(4)
    active_object.hide_select=True
    active_object.hide_viewport=True
    active_object.select_set(False)

def brawlbox_anim_export_old(context, filepath):
    context_view3D = context_override_area(context,'VIEW_3D')
    active_object= context.active_object

    #duplicate action since exporting modifies it
    #the duplicate will be automatically removed when the user reloads the blender file
    src_action = active_object.animation_data.action
    action = src_action.copy()
    action.name = '_exported_' + src_action.name
    active_object.animation_data.action = action

    prevStart, prevEnd = action.frame_range
    context.scene.frame_preview_start = int(prevStart)
    context.scene.frame_preview_end = int(prevEnd)

    bpy.ops.object.mode_set(mode='POSE')
    brawl_root = get_root_pose_bone(active_object)
    brawl_root.bone.select=True
    context_view3D.active_pose_bone = brawl_root

    #inserts key on everyframe to avoid explosion due to curve changes when bind pose removed
    insert_key_frame_everywhere(context_view3D)

    print('applying bind pose to animation..')
    apply_bind_pose_to_action(context_view3D, remove_bind_pose=False)
    print('.. finished applying bind pose from animation')

    print('.. converting action to text data')
    file_lines = action_to_maya_anim_format(context_view3D)
    print('.. finished convertion action to text data')

    print("".. writing to file"")
    with open(filepath, 'w', encoding='utf-8') as f:
        for line in file_lines:
            f.write(line+'\n')
    print(""... finished exporting animation "" + filepath)

    active_object.animation_data.action = src_action
    return file_lines
def brawlbox_anim_export(context, filepath,bugfix_weight=True):
    context_view3D = context_override_area(context,'VIEW_3D')
    active_object= context.active_object

    action = active_object.animation_data.action
    prevStart, prevEnd = action.frame_range
    context.scene.frame_preview_start = int(prevStart)
    context.scene.frame_preview_end = int(prevEnd)

    bpy.ops.object.mode_set(mode='POSE')

    print('.. converting action to text data')
    file_lines = action_to_maya_anim_format(context_view3D,bugfix_weight)
    print('.. finished convertion action to text data')

    print("".. writing to file"")
    with open(filepath, 'w', encoding='utf-8') as f:
        for line in file_lines:
            f.write(line+'\n')
    print(""... finished exporting animation "" + filepath)

    return file_lines
def get_root_pose_bone(active_object):
    root_name = active_object['brawl_root']
    brawl_root = None#[pose_bone for pose_bone in active_object.pose.bones if (pose_bone.name == root_name)]

    try:
        brawl_root = active_object.pose.bones[root_name]
    except Exception as e:
        raise Exception('missing \'brawl_root\' bone name in custom property of active object.')

    return brawl_root
def get_root_edit_bone(active_object):
    root_name = active_object['brawl_root']
    brawl_root = None

    try:
        brawl_root = active_object.data.edit_bones[root_name]#[bone for bone in active_object.data.edit_bones if (bone.name == root_name)]
    except Exception as e:
        raise Exception('missing \'brawl_root\' bone name in custom property of active object.')

    return brawl_root

def apply_bind_pose_to_action(context, remove_bind_pose=True):
    
    bpy.ops.object.mode_set(context, mode='EDIT')
    context.mode = 'EDIT'
    context.object = context.active_object
    context.selected_objects = [context.active_object]
    
    bind_matrices = calculate_local_bind_matrices(context.active_object)
    root = get_root_edit_bone(context.active_object)
    root_children_recursive = root.children_recursive

    '''
    brawl bones keys are relative to the parent.
    Blender bone keys are relative to the bone's rest pose.

    When applying the bindpose for animation export,
    we must convert from Blender's [local to rest] to [local to parent].
    '''

    #edit_bone matrix is in armature space
    #need to get it in parent space (local to parent)
    #for edit_bone in root_children_recursive:
    #    bind_matrices[edit_bone.name] = edit_bone.parent.matrix.inverted() * edit_bone.matrix
    #bind_matrices[root.name] = root.matrix
    
    #for key, val in bind_matrices.items(): 
    #    bind_matrices[key] = val.copy()

    '''
    IMPORTANT: ... blender matrices aren't like C# structs... they're more like a reference.
                    Thus, we need to create a copy, otherwise the desired matrix values won't be cached.
    '''
    #for key, val in bind_matrices.items():
    #    bind_matrices[key] = val.copy()


    context.view_layer.objects.active  = context.active_object
    context.active_object.select_set(True)
    
    inv_scales_arm = {}
    inv_scales_local = {}
    for bone in root_children_recursive:
        scale = bone['brawl_bind_inv_scale']
        inv_scales_arm[bone.name] = Matrix.Scale(1/(scale[0]),4,(1,0,0)) *  Matrix.Scale(1/(scale[1]),4,(0,1,0)) *  Matrix.Scale(1/(scale[2]),4,(0,0,1))

    scale = root['brawl_bind_inv_scale']
    inv_scales_arm[root.name] = Matrix.Scale(1/(scale[0]),4,(1,0,0)) *  Matrix.Scale(1/(scale[1]),4,(0,1,0)) *  Matrix.Scale(1/(scale[2]),4,(0,0,1))

    for bone in root_children_recursive:
        inv_scales_local[bone.name] = inv_scales_arm[bone.parent.name].inverted() *inv_scales_arm[bone.name]
    inv_scales_local[root.name]=inv_scales_arm[root.name]

    bpy.ops.object.mode_set(mode= 'POSE')

    root = get_root_pose_bone(context.active_object)
    pose_bones = [root]
    pose_bones.extend(root.children_recursive)
    
    if remove_bind_pose:
        for pose_bone in pose_bones:
            bind_matrices[pose_bone.name].invert()
        
    bpy.ops.pose.select_all(context, action='SELECT')
    keying_set = [s for s in context.scene.keying_sets_all if s.bl_idname == 'LocRotScale'][0]

    #...for now... I'll just go to each frame and re-key it instead of calculating only necessary keys
    frame_start = context.scene.frame_preview_start
    frame_end = context.scene.frame_preview_end

    if remove_bind_pose:
        for frame_current in reversed(range(frame_start, frame_end + 1)):
            context.scene.frame_set(frame_current)
            
            for pose_bone in pose_bones:
                bind =  bind_matrices[pose_bone.name]
                matrix =  pose_bone.matrix_basis

                #rescale the pose spaces so the (ex) translation magnitudes are correct, necessar since Blender editbones don't store scales.
                pose_bone.matrix_basis =   inv_scales_arm[pose_bone.name].inverted()  * bind  * matrix * inv_scales_arm[pose_bone.name]
               
            bpy.ops.anim.keyframe_insert_menu(type=keying_set.bl_idname, confirm_success=False)
    else:
        for frame_current in reversed(range(frame_start, frame_end + 1)):
            context.scene.frame_set(frame_current)
            
            for pose_bone in pose_bones:
                bind =  bind_matrices[pose_bone.name]
                matrix =  pose_bone.matrix_basis

                #rescale the pose spaces so the (ex) translation magnitudes are correct, necessar since Blender editbones don't store scales. 
                matrix = inv_scales_arm[pose_bone.name] * matrix * inv_scales_arm[pose_bone.name].inverted() 

                pose_bone.matrix_basis = bind * matrix

            bpy.ops.anim.keyframe_insert_menu(type=keying_set.bl_idname, confirm_success=False)

def matrix_from_sequence(sequence):
    return Matrix((sequence[0:4],sequence[4:8],sequence[8:12],sequence[12:16]))
def insert_key_frame_everywhere(context):
    keying_set = [s for s in context.scene.keying_sets_all if s.bl_idname == 'LocRotScale'][0]
 
    root = context.active_pose_bone
    pose_bones = [root]
    pose_bones.extend(root.children_recursive)
    for pose_bone in pose_bones:
        pose_bone.bone.select=True

    if isinstance(context, ContextOverride):
        context.selected_pose_bones = pose_bones[:]

    for frame_current in reversed(range(bpy.context.scene.frame_preview_start, bpy.context.scene.frame_preview_end+1)):
        bpy.context.scene.frame_set(frame_current)
        bpy.ops.anim.keyframe_insert_menu(context, type=keying_set.bl_idname, confirm_success=False)##


    bpy.ops.pose.select_all(context, action='DESELECT')
    root.bone.select=True

def context_override_area(context, area_type, region_type='WINDOW'):
    '''
    DOPESHEET_EDITOR, VIEW_3D, EMPTY, TIMELINE, GRAPH_EDITOR,
    NLA_EDITOR, IMAGE_EDITOR, CLIP_EDITOR, SEQUENCE_EDITOR
    NODE_EDITOR, TEXT_EDITO, LOGIC_EDITOR, PROPERTIES,
    OUTLINER, USER_PREFERENCES, INFO, FILE_BROWSER, CONSOLE

    regions:
    ‘WINDOW’, ‘HEADER’, ‘CHANNELS’, ‘TEMPORARY’, ‘UI’, ‘TOOLS’, ‘TOOL_PROPS’, ‘PREVIEW’
    '''
    info = None
    for window in bpy.context.window_manager.windows:
        screen = window.screen

        for area in screen.areas:
            if area.type == area_type:
                for region in area.regions:
                    if region.type == region_type:
                        info = (window, screen, area, region)

    if info is not None:
        context_override = ContextOverride(context)
        context_override.window, context_override.screen, context_override.area, context_override.region =info
        
        return context_override
    else:
        return None

class ContextOverride(dict):
    '''
    allows me to treat context overrides the same as non overrides:

        ctx0 = Context_Override(context.copy())
        #works
        obj = ctx0.active_object
        #error
        obj = context.copy().active_object

        just be careful to avoid overwriting existing dictionary attributes
    '''
    def __init__(self, context, *args, **kwargs):
        super(ContextOverride, self).__init__(*args, **kwargs)
        self.__dict__ = self
        self.update(context.copy())
class enumerate_start:
    def __init__(self, start_index, collection):
        self.current_index = start_index
        self.collection = collection
        self.end_index = len(collection)

    def __iter__(self):
        return self

    def __next__(self): # Python 3: def __next__(self)
        if self.current_index >= self.end_index:
            raise StopIteration
        else:
            current_element = self.collection[self.current_index]
            result = (self.current_index, current_element)
            self.current_index += 1

            return result
    # python2.x compatibility.
    next = __next__
#class POSE_OT_apply_inverse_bind_pose_to_action(Operator):
#
#    bl_idname = ""brawlbox.apply_inverse_bind_pose_to_action""
#    bl_label = ""Apply Inverse Bind Pose To Action""
#    bl_options = {'REGISTER', 'UNDO'}
#
#    def execute(self, context):
#        apply_bind_pose_to_action(context, remove_bind_pose=True)
#        return {'FINISHED'}
#class POSE_OT_apply_bind_pose_to_action(Operator):
#    #duplicate just for different flag since op can be expensive
#    bl_idname = ""brawlbox.apply_bind_pose_to_action""
#    bl_label = ""Apply Bind Pose To Action""
#    bl_options = {'REGISTER', 'UNDO'}
#
#
#    base_frame = IntProperty(
#            default=0,
#            name='base frame'
#            )
#
#    def execute(self, context):
#        apply_bind_pose_to_action(context, remove_bind_pose=False)
#        return {'FINISHED'}
@register_wrap
class POSE_OT_tsg_insert_key_frame_everywhere(Operator):

    bl_idname = ""brawlbox.insert_key_frame_everywhere""
    bl_label = ""Insert Key Everywhere""
    bl_options = {'REGISTER', 'UNDO'}


    def execute(self, context):
        insert_key_frame_everywhere(context)
        return {'FINISHED'}
@register_wrap
class POSE_OT_brawlbox_anim_import(Operator, ImportHelper):
    bl_idname = ""brawlbox.anim_import""
    bl_label = ""BrawlBox .Anim Import""
    
    files : CollectionProperty(
        name=""File Path"",
        type=OperatorFileListElement,
        )
    directory : StringProperty(
            subtype='DIR_PATH',
            )
    # ExportHelper mixin class uses this
    filename_ext = "".anim""

    filter_glob : StringProperty(
            default=""*.anim"",
            options={'HIDDEN'},
            maxlen=255,  # Max internal buffer length, longer would be clamped.
            )
    #anim_from_maya = BoolProperty(name='ANIM From Maya',default=False)

    @classmethod
    def poll(cls, context):
        return (context.active_object is not None) and isinstance(context.active_object.data, bpy.types.Armature)

    def execute(self, context):
        
        directory = self.directory
        filepaths = [os.path.join(directory, file_elem.name) for file_elem in self.files if os.path.isfile(os.path.join(directory, file_elem.name))]
        
        for filepath in filepaths:
            brawlbox_anim_import(context, filepath,False)#self.anim_from_maya)
        return {'FINISHED'}

@register_wrap
class POSE_OT_brawlbox_anim_export(Operator, ExportHelper):
    bl_idname = ""brawlbox.anim_export""
    bl_label = ""BrawlBox .Anim Export""

    # ExportHelper mixin class uses this
    filename_ext =  "".anim""
    bugfix_weight : BoolProperty(name='Tangents Bugfix',default=True,description='As of July 7, 2019, BB71 and BB78 incorrectly imports weight2 as 0')

    filter_glob : StringProperty(
            default=""*.anim"",
            options={'HIDDEN'},
            maxlen=255,  # Max internal buffer length, longer would be clamped.
            )

    @classmethod
    def poll(cls, context):
        return (context.active_object is not None) and isinstance(context.active_object.data, bpy.types.Armature) and (context.active_object.animation_data is not None) and (context.active_object.animation_data.action is not None)

    def execute(self, context):
        brawlbox_anim_export(context, self.filepath,self.bugfix_weight)
        return {'FINISHED'}

    def invoke(self, context, event):
        self.filepath = context.active_object.animation_data.action.name
        wm = context.window_manager.fileselect_add(self)

        return {'RUNNING_MODAL'}
#Collada Model import wrapper 
@register_wrap
class POSE_OT_enter_edit_mode(Operator):
    
    bl_idname = ""brawlbox.enter_edit_mode""
    bl_label = ""Enter Edit Mode""
    bl_options = {'REGISTER', 'UNDO'}

    
    @classmethod
    def poll(cls,context):
        if (context.active_object is not None) and isinstance(context.active_object.data,bpy.types.Armature):
            bones = [bone for bone in context.active_object.data.bones if 'brawl_bind' in bone]
            return len(bones) > 0
        return False
        
    def execute(self, context):
        
        bpy.ops.object.mode_set(mode='POSE')
        for pose_bone in  context.active_object.pose.bones:
            if 'brawl_local_bind_pose' in pose_bone:
                loc,rot,scale = matrix_from_sequence(pose_bone['brawl_local_bind_pose']).decompose()
                pose_bone.location = loc
                pose_bone.rotation_euler = rot.to_euler('XYZ')
                pose_bone.rotation_quaternion = rot#.to_quaternion()
                pose_bone.scale = scale
            else:
                pose_bone.location = (0,0,0)
                pose_bone.rotation_euler = (0,0,0)
                pose_bone.rotation_quaternion = Quaternion((1,0,0,0))
                pose_bone.scale = (1,1,1)
        bpy.ops.object.mode_set(mode='EDIT')

        bones = [bone for bone in context.active_object.data.edit_bones if 'brawl_bind' in bone]
        for bone in bones:
            bone.matrix = matrix_from_sequence(bone['brawl_bind'])

        #bpy.ops.object.mode_set(mode='POSE')
        #bpy.ops.object.mode_set(mode='EDIT')

        return {'FINISHED'}

@register_wrap
class POSE_OT_exit_edit_mode(Operator):
    bl_idname = ""brawlbox.exit_edit_mode""
    bl_label = ""Exit Edit Mode""
    bl_options = {'REGISTER', 'UNDO'}

    @classmethod
    def poll(cls,context):
        if (context.active_object is not None) and isinstance(context.active_object.data,bpy.types.Armature):
            bones = [bone for bone in context.active_object.data.bones if 'brawl_bind' in bone]
            return len(bones) > 0
        return False
    def execute(self, context):
        

        bpy.ops.object.mode_set(mode='EDIT')

        bones = [bone for bone in context.active_object.data.edit_bones if 'brawl_bind' in bone]
        for bone in bones:
            bone.matrix = Matrix.Identity(4)

        bpy.ops.object.mode_set(mode='POSE')
        context.view_layer.depsgraph.update()
        #context.scene.update()
        return {'FINISHED'}


def poll_bindpose_import(context):
    return (context.active_object is not None) and (isinstance(context.active_object.data, bpy.types.Armature))

def update_import_items(self, context):
    if ('MODEL' not in self.import_items) and (not poll_bindpose_import(context)):
        self.msg_to_user = 'ERROR: Brawl armature not active selection'
    else:
        self.msg_to_user = ''

@register_wrap
class OBJECT_OT_brawlbox_collada_import(Operator, ImportHelper):

    bl_idname = ""brawlbox.collada_import""
    bl_label = ""Brawlbox Collada Import""

    # ExportHelper mixin class uses this
    filename_ext = '.dae'
    

    filter_glob : StringProperty(
            default='*.dae',
            options={'HIDDEN'},
            maxlen=255,
            )
    import_units : BoolProperty(
            default=True,
            name='Import Units'
            )
    import_items : EnumProperty(
            name='Import',
            default= {'MODEL','BIND_POSE'},
            options = {'ENUM_FLAG'},
            items=[
                ('MODEL', 'model',''),
                ('BIND_POSE','bind pose','')
            ],
            update=update_import_items
            )
    msg_to_user : StringProperty(
            name='',
            default = '',
    )
    @classmethod
    def poll(cls, context):
        return True

    def execute(self, context):
        import_items = self.import_items
        filepath = self.filepath

        if 'MODEL' in import_items:
            bpy.ops.wm.collada_import(filepath=filepath,find_chains=False, import_units=self.import_units)
            
            #the importer selects all imported objects
            #need to select the armature for the bind_pose_import()
            #todo:bug: if there are multiple armatures in the .dae, then the wrong armature may be chosen. (Lucariosk)
            root_object = [obj for obj in context.selected_objects if obj.parent is None and isinstance(obj.data,bpy.types.Armature)]
            #todo: whats the point of len(root_object) > 0? typo? should be 1?
            if len(root_object) > 0:
                root_object = root_object[0]

            root_object.select_set(True)
            #set as active object so that mode_set works as intended
            context.view_layer.objects.active = root_object
            #context.scene.objects.active = root_object
            #print('model imported')
            #print()

        if 'BIND_POSE' in import_items:

            if not poll_bindpose_import(context):
                raise Exception('ERROR: Brawl armature needs to be the active selection')
        
            print('parsing dae for bindpose: ' ,filepath_utf8(filepath))
            bind_matrices_get(context, filepath)
            
            #assumes brawl rotations are all euler and XYZ ordered
            bpy.ops.object.mode_set(mode='POSE')
            pose_brawl_root = get_root_pose_bone(context.active_object)
            pose_bones = [pose_brawl_root]
            pose_bones.extend(pose_brawl_root.children_recursive)
            for pose_bone in pose_bones:
                pose_bone.rotation_mode = 'XYZ'

            print('finished applying bindpose.')
            
            #user:readme: this is the rig to import to, export from, animate with
            create_identityRigBB(context)
            
        return {'FINISHED'}

def filepath_utf8(filepath):
    as_bytes = os.fsencode(filepath)
    as_utf8 = as_bytes.decode('utf-8', ""replace"")
    return as_utf8


def collada_read_bone_binds(context, filepath):

    #https://docs.python.org/3.5/library/xml.etree.elementtree.html#xml.etree.ElementTree.Element.itertext

    dae = ET.parse(filepath)
    root = dae.getroot()

    xmlns = re.match(r'{.*}',root.tag).group(0)

    tag_skin = xmlns + 'skin'
    tag_source = xmlns + 'source'
    tag_name_array = xmlns + 'Name_array'
    tag_float_array = xmlns + 'float_array'

    id_postfix_joint = '_JointArr'
    id_postfix_matrices = '_MatArr'

    skin_nodes = [node for node in root.iter(tag_skin)]
    skin_datas = {}
    for skin_node in skin_nodes:
        polygon_name = skin_node.attrib['source']
        #print()
        #print(repr(polygon_name))

        bone_names = []
        bone_bind_matrices = []
        for skin_child_node in skin_node:
            #print(repr(skin_child_node))
            if skin_child_node.tag == tag_source:
                for source_child_node in skin_child_node:
                    #print('-->' + repr(source_child_node))
                    if  source_child_node.tag == tag_name_array and source_child_node.attrib['id'].endswith(id_postfix_joint):
                        bone_names = source_child_node.text.split(' ')
                    if source_child_node.tag == tag_float_array and source_child_node.attrib['id'].endswith(id_postfix_matrices):
                        float_array = [float(float_str) for float_str in source_child_node.text.split(' ')]
                        matrix_count = int(source_child_node.attrib['count']) // 16

                        for i in range(0,matrix_count):
                            k = i * 16
                            bone_bind_matrices.append((float_array[k+0:k+4],float_array[k+4:k+8],float_array[k+8:k+12],float_array[k+12:k+16]))
        
        bind_data = {}
        for i in range(0,len(bone_names)):
            bone_name = bone_names[i]
            bind_matrix_floats = bone_bind_matrices[i]

            #print(repr(bone_name))
            #print(repr(bind_matrix_floats))
            bind_data[bone_name] = bind_matrix_floats
        
        skin_datas[polygon_name] = bind_data

    bpy.ops.object.mode_set(mode='EDIT')
    edit_bones = context.active_object.data.edit_bones

    for polygon_name,bind_datas in skin_datas.items():
        for bone_name,bind_matrix in bind_datas.items():

            #bug: i don't know why the collada importer fails to import HeadItmN for kirby...
            if bone_name not in edit_bones:
                print('>>warning: collada failed to import bone: ' +bone_name)
                continue
            else:
                edit_bones[bone_name]['bind_'+polygon_name] = bind_matrix

    context.active_object['bind_polygons'] = ['bind_' + name for name in skin_datas]
    
    bpy.ops.object.mode_set(mode='OBJECT')

def bind_matrices_get(context, filepath):
    collada_read_bone_binds(context,filepath)

    #https://docs.python.org/3.5/library/xml.etree.elementtree.html#xml.etree.ElementTree.Element.itertext

    dae = ET.parse(filepath)
    root = dae.getroot()

    xmlns = re.match(r'{.*}',root.tag).group(0)
    tag_node = xmlns + 'node'

    #assumes first joint in dae is root, since xml nodes follow a heirarchy
    root_name = [node for node in root.iter(tag_node) if node.attrib['type'] == 'JOINT'][0].attrib['name']
    context.active_object['brawl_root'] = root_name

    bpy.ops.object.mode_set(mode='EDIT')
    edit_root = context.active_object.data.edit_bones[root_name]
    edit_bones = [edit_root]
    edit_bones.extend(edit_root.children_recursive)

    
    bind_polygon_name = context.active_object['bind_polygons'][0]
    #apply the imported bindpose
    for bone in edit_bones:
        basis_matrix =Matrix(bone[bind_polygon_name]).inverted()

        bind_loc,bind_rot,bind_scale = basis_matrix.decompose()
        # attempt to fix scaling problem (with expectation that animated scales and distance wont be correct but rotation will: didn't work. a mirrored body part has wrong rotation)bind_loc.x,bind_loc.y,bind_loc.z = bind_loc.x / bind_scale.x,bind_loc.y/ bind_scale.y,bind_loc.z/ bind_scale.z
        basis_matrix = matrix_trs(bind_loc,bind_rot,bind_scale)
        #although BB frame 0 may show (1,1,1) bone scales, their bind matrices may have scaling anyways. This would show that for debugging purposes. (non-identity scales are not supported and wont be)
        #print('{0} scale:{1}'.format(bone.name,bind_scale))

        bone.length=1
        bone.matrix=  basis_matrix.copy()
        basis_matrix = basis_matrix
        bone['brawl_bind'] = matrix_to_sequence(basis_matrix)
        bone['brawl_bind_inv_scale'] = bind_scale


def matrix_to_sequence(matrix):
    return (*matrix[0],*matrix[1],*matrix[2],*matrix[3])

def matrix_trs(translation, quaternion, scale):
    return Matrix.Translation(translation) @ quaternion.to_matrix().to_4x4() @ Matrix.Scale(scale[0],4,(1,0,0))@ Matrix.Scale(scale[1],4,(0,1,0))@ Matrix.Scale(scale[2],4,(0,0,1))


def menu_func_import(self, context):
    self.layout.operator(POSE_OT_brawlbox_anim_import.bl_idname,text='Brawlbox Animation (.anim)')
    self.layout.operator(OBJECT_OT_brawlbox_collada_import.bl_idname,text='Brawlbox Model (.dae)')

def menu_func_export(self, context):
    self.layout.operator(POSE_OT_brawlbox_anim_export.bl_idname,text='Brawlbox Animation (.anim)')

def update_scene_frame_set():
    context = bpy.context
    frame = context.scene.frame_current
    context.scene.frame_set(frame-1)
    context.scene.frame_set(frame)


def paths_update():
    if bpy.ops.pose.paths_update.poll():
        bpy.ops.pose.paths_update()
@register_wrap
class POSE_OT_brawl_limit_fcurves(bpy.types.Operator):
    bl_idname = ""brawlbox.limit_tangents""
    bl_label = ""Brawl Limit Tangents""
    bl_options = {'REGISTER', 'UNDO'}
    bl_context = ""posemode""

    fix_infinite_tangent : BoolProperty(name='Fix Inifinite Tangent',default=True) 
    @classmethod
    def poll(cls,context):
        return context.mode == 'POSE'

    def execute(self,context):
        action = context.active_object.animation_data.action
        
        pose_bones = context.selected_pose_bones
        for pose_bone in pose_bones:
            if ('brawl_local_bind_pose' in pose_bone) and (pose_bone.name in action.groups):
                for channel in action.groups[pose_bone.name].channels:
                    if (not channel.lock) and  (not channel.hide):
                        for i in range(0,len(channel.keyframe_points)):
                            keyframe = channel.keyframe_points[i]
                            keyframe.handle_left_type = 'FREE'
                            keyframe.handle_right_type = 'FREE'
                            co = keyframe.co 

                            #average handle tangents
                            dir_handle_left = (Vector(co) - Vector(keyframe.handle_left)).normalized()
                            dir_handle_right =  (Vector(keyframe.handle_right) - Vector(co)).normalized() 

                            #treat boundary key's outter tangents as useless. This preserves the inner tangent on export.
                            if i ==0:
                                dir_handle_left = dir_handle_right
                            if i == len(channel.keyframe_points)-1:
                                dir_handle_right = dir_handle_left

                            #normalized sum of 2 direction has avg (smaller) angle 
                            avg_dir =  (dir_handle_left + dir_handle_right).normalized() #here, norm() equal to mul by 0.5

                            if abs(avg_dir[0]) < .00001:
                                print('WARNING infinite tangent: Channel:{0}[{1}] Key:{2}'.format(channel.data_path,channel.array_index,co[0]))

                                if not self.fix_infinite_tangent:
                                    continue  
                                else:
                                    #no significance approximation-wise, just prevents div by zero.
                                    avg_dir[0] = 1

                            one_frame_yoffset = avg_dir[1]/avg_dir[0]
                            keyframe.handle_left = (keyframe.handle_left[0],co[1] - one_frame_yoffset)
                            keyframe.handle_right = (keyframe.handle_right[0],co[1] + one_frame_yoffset)

                            #place handle times to 1/3 to adj key
                            if i > 0:
                                keyframe_left = channel.keyframe_points[i-1]
                                frame_offset = (1.0/3.0) * (co[0] - keyframe_left.co[0])
                                keyframe.handle_left = (co[0] - frame_offset,co[1] - one_frame_yoffset*frame_offset)
                            if i < len(channel.keyframe_points) - 1:
                                keyframe_right = channel.keyframe_points[i+1]
                                frame_offset =  (1.0/3.0) * (keyframe_right.co[0] - co[0])
                                keyframe.handle_right = (co[0] + frame_offset,co[1] + one_frame_yoffset*frame_offset)
                                

        paths_update()
        return {'FINISHED'}

@register_wrap
class POSE_ARMATURE_OT_remove_brawl_info(bpy.types.Operator):
    bl_idname = ""brawlbox.remove_brawl_info""
    bl_label = ""Remove Brawl Info""
    bl_options = {'REGISTER', 'UNDO'}
    bl_context = ""posemode""

    @classmethod
    def poll(cls,context):
        return context.selected_pose_bones is not None and len(context.selected_pose_bones) > 0 and context.mode == 'POSE'

    def execute(self,context):
        pose_bones = context.selected_pose_bones

        for pose_bone in pose_bones:
            if 'brawl_local_bind_pose' in pose_bone:
                del pose_bone['brawl_local_bind_pose']
                print('Removed Brawl Info: ' + str(pose_bone.name))

        return {'FINISHED'}
@register_wrap
class POSE_ARMATURE_OT_clear_to_bind(bpy.types.Operator):
    bl_idname = ""brawlbox.clear_to_bind""
    bl_label = ""Clear To Bind""
    bl_options = {'REGISTER', 'UNDO'}
    bl_context = ""posemode""

    clear_location : BoolProperty(name='Location',default=True)
    clear_rotation : BoolProperty(name='Rotation',default=True)
    clear_scale : BoolProperty(name='Scale',default=True)

    @classmethod
    def poll(cls,context):
        return context.selected_pose_bones is not None and len(context.selected_pose_bones) > 0 and context.mode == 'POSE'

    def execute(self,context):
        pose_bones = context.selected_pose_bones

        for pose_bone in pose_bones:
            if 'brawl_local_bind_pose' in pose_bone:
                loc,rot,scale = matrix_from_sequence(pose_bone['brawl_local_bind_pose']).decompose()
                if  self.clear_location:
                    pose_bone.location = loc
                    
                if self.clear_rotation:
                    pose_bone.rotation_euler = rot.to_euler('XYZ')
                    pose_bone.rotation_quaternion = rot#.to_quaternion()
                    
                if self.clear_scale:
                    pose_bone.scale = scale
            else:
                if  self.clear_location:
                    pose_bone.location = (0,0,0)
                    
                if self.clear_rotation:
                    pose_bone.rotation_euler = (0,0,0)
                    pose_bone.rotation_quaternion = Quaternion((1,0,0,0))
                    
                if self.clear_scale:
                    pose_bone.scale = (1,1,1)

        if bpy.context.scene.tool_settings.use_keyframe_insert_auto:
            bpy.ops.anim.keyframe_insert_menu(type='__ACTIVE__', confirm_success=True)

        paths_update()

        return {'FINISHED'}

@register_wrap
class POSE_ARMATURE_PT_brawlbox_panel(bpy.types.Panel):
    bl_idname = ""POSE_ARMATURE_PT_brawlbox_panel""
    bl_label = ""Brawlbox""
    bl_space_type = 'VIEW_3D'
    bl_region_type = 'UI'
    bl_category = ""Tool""

    #bl_context = ""posemode""
    
    
    def draw(self,context):
        
        '''
        user:readme: Since the animation rig's pose identity is equal to world identity, 
        the user can't just do Alt-R/G/S to get back to the T-Pose. The operators below
        are the recreated functionality. (3DView->Tools->Animation->Brawlbox->Clear)
        '''
        layout = self.layout.column(align=True)

        layout.label(text='Clear')
        row = layout.row(align=True)
        op = row.operator(POSE_ARMATURE_OT_clear_to_bind.bl_idname,text='Loc')
        op.clear_location=True
        op.clear_rotation=False
        op.clear_scale=False

        op = row.operator(POSE_ARMATURE_OT_clear_to_bind.bl_idname,text='Rot')
        op.clear_location=False
        op.clear_rotation=True
        op.clear_scale=False

        op = row.operator(POSE_ARMATURE_OT_clear_to_bind.bl_idname,text='Sca')
        op.clear_location=False
        op.clear_rotation=False
        op.clear_scale=True

        row = layout.row(align=True)
        op = row.operator(POSE_ARMATURE_OT_clear_to_bind.bl_idname,text='All')
        op.clear_location=True
        op.clear_rotation=True
        op.clear_scale=True

        layout.label(text='Rigging Mode:')
        row = layout.row(align=True)
        row.operator(POSE_OT_enter_edit_mode.bl_idname,text='Enter')
        row.operator(POSE_OT_exit_edit_mode.bl_idname,text='Exit')
        
        layout.separator()
        row = layout.row(align=True)
        row.operator(POSE_OT_brawl_limit_fcurves.bl_idname,text='Brawl Limit Tangents',icon='KEYTYPE_KEYFRAME_VEC')
        layout.separator()
        row = layout.row(align=True)
        row.operator(POSE_ARMATURE_OT_remove_brawl_info.bl_idname,text='Remove Brawl Info',icon='ERROR')

def register():
    
    from bpy.utils import register_class
    for cls in __bl_classes:
        register_class(cls)
            
    bpy.types.TOPBAR_MT_file_import.append(menu_func_import)
    bpy.types.TOPBAR_MT_file_export.append(menu_func_export)
    
def unregister():
    bpy.types.TOPBAR_MT_file_import.remove(menu_func_import)
    bpy.types.TOPBAR_MT_file_export.remove(menu_func_export)
    
    from bpy.utils import unregister_class
    for cls in __bl_classes:
        unregister_class(cls)



#unregister()
if __name__ == ""__main__"":
    register()
"
srzCtdmR,08. Math Power,veronikaaa86,Java,Wednesday 31st of May 2023 01:10:48 PM CDT,"package methods;

import java.text.DecimalFormat;
import java.util.Scanner;

public class P08MathPower {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        double num = Double.parseDouble(scanner.nextLine());
        double power = Double.parseDouble(scanner.nextLine());

        double result = mathPower(num, power);

        DecimalFormat df = new DecimalFormat(""0.####"");

        System.out.println(df.format(result));
    }

    public static double mathPower(double num, double power) {
        double result = 1;
        // 2^4 -> 2 * 2 * 2 * 2
        for (int i = 1; i <= power; i++) {
            result = result * num;
        }
        return result;
    }
}
"
1yPwpnxh,Nigerian scammers [31-5-2/2023],bombaires,HTML,Wednesday 31st of May 2023 01:05:38 PM CDT,"<a href=""mailto:royalbankofcanada008@gmail.com"">royalbankofcanada008@gmail.com</a>
<a href=""mailto:royalbankofcanada008+6863@gmail.com"">royalbankofcanada008+6863@gmail.com</a>
<a href=""mailto:royalbankofcanada008+5366@gmail.com"">royalbankofcanada008+5366@gmail.com</a>
<a href=""mailto:royalbankofcanada008+5928@gmail.com"">royalbankofcanada008+5928@gmail.com</a>
<a href=""mailto:royalbankofcanada008+30135@gmail.com"">royalbankofcanada008+30135@gmail.com</a>
<a href=""mailto:royalbankofcanada008+17824@gmail.com"">royalbankofcanada008+17824@gmail.com</a>
<a href=""mailto:royalbankofcanada008+27011@gmail.com"">royalbankofcanada008+27011@gmail.com</a>
<a href=""mailto:royalbankofcanada008+24007@gmail.com"">royalbankofcanada008+24007@gmail.com</a>
<a href=""mailto:royalbankofcanada008+10625@gmail.com"">royalbankofcanada008+10625@gmail.com</a>
<a href=""mailto:royalbankofcanada008+25687@gmail.com"">royalbankofcanada008+25687@gmail.com</a>
<a href=""mailto:royalbankofcanada008+17389@gmail.com"">royalbankofcanada008+17389@gmail.com</a>
<a href=""mailto:royalbankofcanada008+5513@gmail.com"">royalbankofcanada008+5513@gmail.com</a>
<a href=""mailto:royalbankofcanada008+30268@gmail.com"">royalbankofcanada008+30268@gmail.com</a>
<a href=""mailto:royalbankofcanada008+16598@gmail.com"">royalbankofcanada008+16598@gmail.com</a>
<a href=""mailto:royalbankofcanada008+16273@gmail.com"">royalbankofcanada008+16273@gmail.com</a>
<a href=""mailto:royalbankofcanada008+31338@gmail.com"">royalbankofcanada008+31338@gmail.com</a>
<a href=""mailto:royalbankofcanada008+17752@gmail.com"">royalbankofcanada008+17752@gmail.com</a>
<a href=""mailto:royalbankofcanada008+29099@gmail.com"">royalbankofcanada008+29099@gmail.com</a>
<a href=""mailto:royalbankofcanada008+3077@gmail.com"">royalbankofcanada008+3077@gmail.com</a>
<a href=""mailto:royalbankofcanada008+31035@gmail.com"">royalbankofcanada008+31035@gmail.com</a>
<a href=""mailto:royalbankofcanada008+24066@gmail.com"">royalbankofcanada008+24066@gmail.com</a>
<a href=""mailto:royalbankofcanada008+19922@gmail.com"">royalbankofcanada008+19922@gmail.com</a>
<a href=""mailto:royalbankofcanada008+24118@gmail.com"">royalbankofcanada008+24118@gmail.com</a>
<a href=""mailto:royalbankofcanada008+18770@gmail.com"">royalbankofcanada008+18770@gmail.com</a>
<a href=""mailto:royalbankofcanada008+22940@gmail.com"">royalbankofcanada008+22940@gmail.com</a>
<a href=""mailto:royalbankofcanada008+28367@gmail.com"">royalbankofcanada008+28367@gmail.com</a>
<a href=""mailto:royalbankofcanada008+23879@gmail.com"">royalbankofcanada008+23879@gmail.com</a>
<a href=""mailto:royalbankofcanada008+2776@gmail.com"">royalbankofcanada008+2776@gmail.com</a>
<a href=""mailto:royalbankofcanada008+28048@gmail.com"">royalbankofcanada008+28048@gmail.com</a>
<a href=""mailto:royalbankofcanada008+27233@gmail.com"">royalbankofcanada008+27233@gmail.com</a>
<a href=""mailto:royalbankofcanada008+10997@gmail.com"">royalbankofcanada008+10997@gmail.com</a>
<a href=""mailto:royalbankofcanada008+21724@gmail.com"">royalbankofcanada008+21724@gmail.com</a>
<a href=""mailto:royalbankofcanada008+16183@gmail.com"">royalbankofcanada008+16183@gmail.com</a>
<a href=""mailto:royalbankofcanada008+29551@gmail.com"">royalbankofcanada008+29551@gmail.com</a>
<a href=""mailto:royalbankofcanada008+12111@gmail.com"">royalbankofcanada008+12111@gmail.com</a>
<a href=""mailto:royalbankofcanada008+10519@gmail.com"">royalbankofcanada008+10519@gmail.com</a>
<a href=""mailto:royalbankofcanada008+7724@gmail.com"">royalbankofcanada008+7724@gmail.com</a>
<a href=""mailto:royalbankofcanada008+5722@gmail.com"">royalbankofcanada008+5722@gmail.com</a>
<a href=""mailto:royalbankofcanada008+1224@gmail.com"">royalbankofcanada008+1224@gmail.com</a>
<a href=""mailto:royalbankofcanada008+17351@gmail.com"">royalbankofcanada008+17351@gmail.com</a>
<a href=""mailto:royalbankofcanada008+24547@gmail.com"">royalbankofcanada008+24547@gmail.com</a>
<a href=""mailto:royalbankofcanada008+24661@gmail.com"">royalbankofcanada008+24661@gmail.com</a>
<a href=""mailto:royalbankofcanada008+25317@gmail.com"">royalbankofcanada008+25317@gmail.com</a>
<a href=""mailto:royalbankofcanada008+2880@gmail.com"">royalbankofcanada008+2880@gmail.com</a>
<a href=""mailto:royalbankofcanada008+12381@gmail.com"">royalbankofcanada008+12381@gmail.com</a>
<a href=""mailto:royalbankofcanada008+23499@gmail.com"">royalbankofcanada008+23499@gmail.com</a>
<a href=""mailto:royalbankofcanada008+26450@gmail.com"">royalbankofcanada008+26450@gmail.com</a>
<a href=""mailto:royalbankofcanada008+21998@gmail.com"">royalbankofcanada008+21998@gmail.com</a>
<a href=""mailto:royalbankofcanada008+15339@gmail.com"">royalbankofcanada008+15339@gmail.com</a>
<a href=""mailto:royalbankofcanada008+21197@gmail.com"">royalbankofcanada008+21197@gmail.com</a>
<a href=""mailto:royalbankofcanada008+8056@gmail.com"">royalbankofcanada008+8056@gmail.com</a>
<a href=""mailto:royalbankofcanada008+10968@gmail.com"">royalbankofcanada008+10968@gmail.com</a>
<a href=""mailto:royalbankofcanada008+15856@gmail.com"">royalbankofcanada008+15856@gmail.com</a>
<a href=""mailto:royalbankofcanada008+20786@gmail.com"">royalbankofcanada008+20786@gmail.com</a>
<a href=""mailto:royalbankofcanada008+19415@gmail.com"">royalbankofcanada008+19415@gmail.com</a>
<a href=""mailto:royalbankofcanada008+31720@gmail.com"">royalbankofcanada008+31720@gmail.com</a>
<a href=""mailto:royalbankofcanada008+23940@gmail.com"">royalbankofcanada008+23940@gmail.com</a>
<a href=""mailto:royalbankofcanada008+27961@gmail.com"">royalbankofcanada008+27961@gmail.com</a>
<a href=""mailto:royalbankofcanada008+15414@gmail.com"">royalbankofcanada008+15414@gmail.com</a>
<a href=""mailto:royalbankofcanada008+30688@gmail.com"">royalbankofcanada008+30688@gmail.com</a>
<a href=""mailto:royalbankofcanada008+10342@gmail.com"">royalbankofcanada008+10342@gmail.com</a>
<a href=""mailto:royalbankofcanada008+10662@gmail.com"">royalbankofcanada008+10662@gmail.com</a>
<a href=""mailto:royalbankofcanada008+18898@gmail.com"">royalbankofcanada008+18898@gmail.com</a>
<a href=""mailto:royalbankofcanada008+11520@gmail.com"">royalbankofcanada008+11520@gmail.com</a>
<a href=""mailto:royalbankofcanada008+10776@gmail.com"">royalbankofcanada008+10776@gmail.com</a>
<a href=""mailto:royalbankofcanada008+6220@gmail.com"">royalbankofcanada008+6220@gmail.com</a>
<a href=""mailto:royalbankofcanada008+3769@gmail.com"">royalbankofcanada008+3769@gmail.com</a>
<a href=""mailto:royalbankofcanada008+25869@gmail.com"">royalbankofcanada008+25869@gmail.com</a>
<a href=""mailto:royalbankofcanada008+26185@gmail.com"">royalbankofcanada008+26185@gmail.com</a>
<a href=""mailto:royalbankofcanada008+24618@gmail.com"">royalbankofcanada008+24618@gmail.com</a>
<a href=""mailto:royalbankofcanada008+23945@gmail.com"">royalbankofcanada008+23945@gmail.com</a>
<a href=""mailto:royalbankofcanada008+25601@gmail.com"">royalbankofcanada008+25601@gmail.com</a>
<a href=""mailto:royalbankofcanada008+5044@gmail.com"">royalbankofcanada008+5044@gmail.com</a>
<a href=""mailto:royalbankofcanada008+28917@gmail.com"">royalbankofcanada008+28917@gmail.com</a>
<a href=""mailto:royalbankofcanada008+1294@gmail.com"">royalbankofcanada008+1294@gmail.com</a>
<a href=""mailto:royalbankofcanada008+14166@gmail.com"">royalbankofcanada008+14166@gmail.com</a>
<a href=""mailto:royalbankofcanada008+9012@gmail.com"">royalbankofcanada008+9012@gmail.com</a>
<a href=""mailto:royalbankofcanada008+2683@gmail.com"">royalbankofcanada008+2683@gmail.com</a>
<a href=""mailto:royalbankofcanada008+20256@gmail.com"">royalbankofcanada008+20256@gmail.com</a>
<a href=""mailto:royalbankofcanada008+10101@gmail.com"">royalbankofcanada008+10101@gmail.com</a>
<a href=""mailto:royalbankofcanada008+7913@gmail.com"">royalbankofcanada008+7913@gmail.com</a>
<a href=""mailto:royalbankofcanada008+8326@gmail.com"">royalbankofcanada008+8326@gmail.com</a>
<a href=""mailto:royalbankofcanada008+23289@gmail.com"">royalbankofcanada008+23289@gmail.com</a>
<a href=""mailto:royalbankofcanada008+14855@gmail.com"">royalbankofcanada008+14855@gmail.com</a>
<a href=""mailto:royalbankofcanada008+25802@gmail.com"">royalbankofcanada008+25802@gmail.com</a>
<a href=""mailto:royalbankofcanada008+15912@gmail.com"">royalbankofcanada008+15912@gmail.com</a>
<a href=""mailto:royalbankofcanada008+28757@gmail.com"">royalbankofcanada008+28757@gmail.com</a>
<a href=""mailto:royalbankofcanada008+32739@gmail.com"">royalbankofcanada008+32739@gmail.com</a>
<a href=""mailto:royalbankofcanada008+6772@gmail.com"">royalbankofcanada008+6772@gmail.com</a>
<a href=""mailto:royalbankofcanada008+7715@gmail.com"">royalbankofcanada008+7715@gmail.com</a>
<a href=""mailto:royalbankofcanada008+18081@gmail.com"">royalbankofcanada008+18081@gmail.com</a>
<a href=""mailto:royalbankofcanada008+28119@gmail.com"">royalbankofcanada008+28119@gmail.com</a>
<a href=""mailto:royalbankofcanada008+17964@gmail.com"">royalbankofcanada008+17964@gmail.com</a>
<a href=""mailto:royalbankofcanada008+25874@gmail.com"">royalbankofcanada008+25874@gmail.com</a>
<a href=""mailto:royalbankofcanada008+7350@gmail.com"">royalbankofcanada008+7350@gmail.com</a>
<a href=""mailto:royalbankofcanada008+6589@gmail.com"">royalbankofcanada008+6589@gmail.com</a>
<a href=""mailto:royalbankofcanada008+28345@gmail.com"">royalbankofcanada008+28345@gmail.com</a>
<a href=""mailto:royalbankofcanada008+9180@gmail.com"">royalbankofcanada008+9180@gmail.com</a>
<a href=""mailto:royalbankofcanada008+19908@gmail.com"">royalbankofcanada008+19908@gmail.com</a>
<a href=""mailto:royalbankofcanada008+20806@gmail.com"">royalbankofcanada008+20806@gmail.com</a>
<a href=""mailto:royalbankofcanada008+7873@gmail.com"">royalbankofcanada008+7873@gmail.com</a>
<a href=""mailto:godwinemefiele10101@gmail.com"">godwinemefiele10101@gmail.com</a>
<a href=""mailto:god.w.ine.me.fiele.1.010.1@gmail.com"">god.w.ine.me.fiele.1.010.1@gmail.com</a>
<a href=""mailto:g.odwi.n.eme.f.iel.e1.01.01@gmail.com"">g.odwi.n.eme.f.iel.e1.01.01@gmail.com</a>
<a href=""mailto:g.od.w.inemefi.e.l.e101.01@gmail.com"">g.od.w.inemefi.e.l.e101.01@gmail.com</a>
<a href=""mailto:go.d.wi.ne.m.e.fie.l.e.10.101@gmail.com"">go.d.wi.ne.m.e.fie.l.e.10.101@gmail.com</a>
<a href=""mailto:go.dwi.n.em.e.f.iele.1.0.1.01@gmail.com"">go.dwi.n.em.e.f.iele.1.0.1.01@gmail.com</a>
<a href=""mailto:g.od.wi.nem.ef.i.el.e10.10.1@gmail.com"">g.od.wi.nem.ef.i.el.e10.10.1@gmail.com</a>
<a href=""mailto:g.od.w.in.eme.fiel.e1.01.0.1@gmail.com"">g.od.w.in.eme.fiel.e1.01.0.1@gmail.com</a>
<a href=""mailto:g.o.dwi.ne.m.ef.iele.1.0.1.0.1@gmail.com"">g.o.dwi.ne.m.ef.iele.1.0.1.0.1@gmail.com</a>
<a href=""mailto:go.dwine.me.f.iele.101.0.1@gmail.com"">go.dwine.me.f.iele.101.0.1@gmail.com</a>
<a href=""mailto:go.d.w.i.n.e.me.fi.el.e.1.0.1.0.1@gmail.com"">go.d.w.i.n.e.me.fi.el.e.1.0.1.0.1@gmail.com</a>
<a href=""mailto:g.odw.inemef.ie.l.e1.0.1.01@gmail.com"">g.odw.inemef.ie.l.e1.0.1.01@gmail.com</a>
<a href=""mailto:go.d.w.i.n.e.me.fiel.e1.0.101@gmail.com"">go.d.w.i.n.e.me.fiel.e1.0.101@gmail.com</a>
<a href=""mailto:g.odw.inem.e.fiel.e.1.0.10.1@gmail.com"">g.odw.inem.e.fiel.e.1.0.10.1@gmail.com</a>
<a href=""mailto:g.o.d.win.e.mef.iele1.0.1.01@gmail.com"">g.o.d.win.e.mef.iele1.0.1.01@gmail.com</a>
<a href=""mailto:g.odw.i.neme.fi.e.l.e.101.0.1@gmail.com"">g.odw.i.neme.fi.e.l.e.101.0.1@gmail.com</a>
<a href=""mailto:go.d.w.i.n.emefi.el.e1.0.10.1@gmail.com"">go.d.w.i.n.emefi.el.e1.0.10.1@gmail.com</a>
<a href=""mailto:g.od.w.in.em.ef.i.ele.10.1.0.1@gmail.com"">g.od.w.in.em.ef.i.ele.10.1.0.1@gmail.com</a>
<a href=""mailto:go.d.w.in.em.efiel.e.101.01@gmail.com"">go.d.w.in.em.efiel.e.101.01@gmail.com</a>
<a href=""mailto:g.odwi.n.em.e.fiel.e1.0.1.0.1@gmail.com"">g.odwi.n.em.e.fiel.e1.0.1.0.1@gmail.com</a>
<a href=""mailto:g.o.dw.i.n.em.e.f.iele1.01.01@gmail.com"">g.o.dw.i.n.em.e.f.iele1.01.01@gmail.com</a>
<a href=""mailto:g.od.win.e.m.e.fie.le.10.10.1@gmail.com"">g.od.win.e.m.e.fie.le.10.10.1@gmail.com</a>
<a href=""mailto:go.dwi.neme.f.iel.e1.0101@gmail.com"">go.dwi.neme.f.iel.e1.0101@gmail.com</a>
<a href=""mailto:g.odw.i.n.e.me.fie.l.e.10.101@gmail.com"">g.odw.i.n.e.me.fie.l.e.10.101@gmail.com</a>
<a href=""mailto:g.o.dwi.ne.mef.iel.e.1.0.1.0.1@gmail.com"">g.o.dwi.ne.mef.iel.e.1.0.1.0.1@gmail.com</a>
<a href=""mailto:god.w.i.n.em.ef.ie.le.10.1.0.1@gmail.com"">god.w.i.n.em.ef.ie.le.10.1.0.1@gmail.com</a>
<a href=""mailto:god.w.in.e.mefi.e.l.e1.0.10.1@gmail.com"">god.w.in.e.mefi.e.l.e1.0.10.1@gmail.com</a>
<a href=""mailto:go.d.w.in.em.e.f.i.el.e.1010.1@gmail.com"">go.d.w.in.em.e.f.i.el.e.1010.1@gmail.com</a>
<a href=""mailto:g.o.dwi.ne.me.f.ie.l.e.1010.1@gmail.com"">g.o.dwi.ne.me.f.ie.l.e.1010.1@gmail.com</a>
<a href=""mailto:g.o.d.w.i.nem.ef.ie.l.e101.01@gmail.com"">g.o.d.w.i.nem.ef.ie.l.e101.01@gmail.com</a>
<a href=""mailto:g.odwi.ne.m.e.f.iele101.01@gmail.com"">g.odwi.ne.m.e.f.iele101.01@gmail.com</a>
<a href=""mailto:go.d.w.i.ne.m.efi.el.e10.1.01@gmail.com"">go.d.w.i.ne.m.efi.el.e10.1.01@gmail.com</a>
<a href=""mailto:godw.i.n.e.m.e.f.i.ele.1.01.01@gmail.com"">godw.i.n.e.m.e.f.i.ele.1.01.01@gmail.com</a>
<a href=""mailto:g.od.w.i.ne.m.e.fiele1010.1@gmail.com"">g.od.w.i.ne.m.e.fiele1010.1@gmail.com</a>
<a href=""mailto:g.o.dwin.em.ef.iel.e.1.0.10.1@gmail.com"">g.o.dwin.em.ef.iel.e.1.0.10.1@gmail.com</a>
<a href=""mailto:go.dwi.neme.f.iele1.0.101@gmail.com"">go.dwi.neme.f.iele1.0.101@gmail.com</a>
<a href=""mailto:godwi.nem.e.fie.le101.0.1@gmail.com"">godwi.nem.e.fie.le101.0.1@gmail.com</a>
<a href=""mailto:g.odw.in.e.m.efi.el.e.10.1.01@gmail.com"">g.odw.in.e.m.efi.el.e.10.1.01@gmail.com</a>
<a href=""mailto:g.o.d.win.e.me.f.i.el.e1.0.1.0.1@gmail.com"">g.o.d.win.e.me.f.i.el.e1.0.1.0.1@gmail.com</a>
<a href=""mailto:godw.i.n.e.m.efiele.101.01@gmail.com"">godw.i.n.e.m.efiele.101.01@gmail.com</a>
<a href=""mailto:go.d.win.em.e.f.ie.l.e1.0101@gmail.com"">go.d.win.em.e.f.ie.l.e1.0101@gmail.com</a>
<a href=""mailto:god.wine.m.e.fi.ele1.0101@gmail.com"">god.wine.m.e.fi.ele1.0101@gmail.com</a>
<a href=""mailto:g.od.w.i.ne.m.e.f.ie.le.101.01@gmail.com"">g.od.w.i.ne.m.e.f.ie.le.101.01@gmail.com</a>
<a href=""mailto:g.o.dw.inemefi.e.l.e10.1.01@gmail.com"">g.o.dw.inemefi.e.l.e10.1.01@gmail.com</a>
<a href=""mailto:godwi.nem.efi.ele.101.01@gmail.com"">godwi.nem.efi.ele.101.01@gmail.com</a>
<a href=""mailto:godw.i.nem.ef.iele1.0.1.01@gmail.com"">godw.i.nem.ef.iele1.0.1.01@gmail.com</a>
<a href=""mailto:go.dw.ineme.f.iel.e.1.010.1@gmail.com"">go.dw.ineme.f.iel.e.1.010.1@gmail.com</a>
<a href=""mailto:godwi.n.e.mefie.le10.1.01@gmail.com"">godwi.n.e.mefie.le10.1.01@gmail.com</a>
<a href=""mailto:god.w.in.e.m.e.fiel.e1.010.1@gmail.com"">god.w.in.e.m.e.fiel.e1.010.1@gmail.com</a>
<a href=""mailto:g.o.d.wi.n.em.e.f.i.ele1.0.1.0.1@gmail.com"">g.o.d.wi.n.em.e.f.i.ele1.0.1.0.1@gmail.com</a>
<a href=""mailto:god.wi.ne.m.e.f.i.e.le.101.01@gmail.com"">god.wi.ne.m.e.f.i.e.le.101.01@gmail.com</a>
<a href=""mailto:god.w.in.emefi.ele1.0.101@gmail.com"">god.w.in.emefi.ele1.0.101@gmail.com</a>
<a href=""mailto:g.odw.i.nem.e.f.i.e.l.e1010.1@gmail.com"">g.odw.i.nem.e.f.i.e.l.e1010.1@gmail.com</a>
<a href=""mailto:godw.in.e.m.e.f.iele.10101@gmail.com"">godw.in.e.m.e.f.iele.10101@gmail.com</a>
<a href=""mailto:go.dwi.n.e.m.ef.i.e.le.1.0.10.1@gmail.com"">go.dwi.n.e.m.ef.i.e.le.1.0.10.1@gmail.com</a>
<a href=""mailto:go.d.w.i.n.eme.f.i.el.e.1.0.1.01@gmail.com"">go.d.w.i.n.eme.f.i.el.e.1.0.1.01@gmail.com</a>
<a href=""mailto:go.dw.i.neme.f.i.ele1.01.0.1@gmail.com"">go.dw.i.neme.f.i.ele1.01.0.1@gmail.com</a>
<a href=""mailto:god.wi.nem.efiele10.10.1@gmail.com"">god.wi.nem.efiele10.10.1@gmail.com</a>
<a href=""mailto:god.wi.n.e.m.ef.i.e.l.e.1.0101@gmail.com"">god.wi.n.e.m.ef.i.e.l.e.1.0101@gmail.com</a>
<a href=""mailto:g.o.d.w.inem.ef.ie.le.101.0.1@gmail.com"">g.o.d.w.inem.ef.ie.le.101.0.1@gmail.com</a>
<a href=""mailto:g.od.wi.n.emefi.el.e10.101@gmail.com"">g.od.wi.n.emefi.el.e10.101@gmail.com</a>
<a href=""mailto:g.o.d.wi.ne.m.efie.l.e1.0.101@gmail.com"">g.o.d.wi.ne.m.efie.l.e1.0.101@gmail.com</a>
<a href=""mailto:god.wi.n.emef.iele.10.101@gmail.com"">god.wi.n.emef.iele.10.101@gmail.com</a>
<a href=""mailto:go.dwi.n.e.m.ef.i.e.le.10.101@gmail.com"">go.dwi.n.e.m.ef.i.e.le.10.101@gmail.com</a>
<a href=""mailto:go.d.w.i.n.eme.f.i.ele.1.01.01@gmail.com"">go.d.w.i.n.eme.f.i.ele.1.01.01@gmail.com</a>
<a href=""mailto:go.d.wi.ne.m.e.fi.ele1010.1@gmail.com"">go.d.wi.ne.m.e.fi.ele1010.1@gmail.com</a>
<a href=""mailto:g.o.d.wine.m.e.fie.le.1.01.0.1@gmail.com"">g.o.d.wine.m.e.fie.le.1.01.0.1@gmail.com</a>
<a href=""mailto:g.odwi.ne.m.ef.ie.l.e10.1.01@gmail.com"">g.odwi.ne.m.ef.ie.l.e10.1.01@gmail.com</a>
<a href=""mailto:go.dwine.m.ef.i.ele10.1.01@gmail.com"">go.dwine.m.ef.i.ele10.1.01@gmail.com</a>
<a href=""mailto:godwi.ne.me.fi.e.l.e1.0.1.01@gmail.com"">godwi.ne.me.fi.e.l.e1.0.1.01@gmail.com</a>
<a href=""mailto:god.wi.ne.me.fie.le.101.0.1@gmail.com"">god.wi.ne.me.fie.le.101.0.1@gmail.com</a>
<a href=""mailto:g.o.d.w.ine.m.e.fiele10.10.1@gmail.com"">g.o.d.w.ine.m.e.fiele10.10.1@gmail.com</a>
<a href=""mailto:go.dw.i.n.emef.ie.l.e.1010.1@gmail.com"">go.dw.i.n.emef.ie.l.e.1010.1@gmail.com</a>
<a href=""mailto:g.odwin.em.e.f.i.el.e.1.0.1.01@gmail.com"">g.odwin.em.e.f.i.el.e.1.0.1.01@gmail.com</a>
<a href=""mailto:god.wi.n.em.e.f.ie.le.1.01.01@gmail.com"">god.wi.n.em.e.f.ie.le.1.01.01@gmail.com</a>
<a href=""mailto:g.od.w.i.nemefi.e.l.e.10.10.1@gmail.com"">g.od.w.i.nemefi.e.l.e.10.10.1@gmail.com</a>
<a href=""mailto:go.d.w.ineme.f.i.ele1.01.0.1@gmail.com"">go.d.w.ineme.f.i.ele1.01.0.1@gmail.com</a>
<a href=""mailto:godw.inem.efi.ele.10101@gmail.com"">godw.inem.efi.ele.10101@gmail.com</a>
<a href=""mailto:g.od.wi.n.e.mef.iele.1010.1@gmail.com"">g.od.wi.n.e.mef.iele.1010.1@gmail.com</a>
<a href=""mailto:g.o.d.win.emef.ie.l.e.10.101@gmail.com"">g.o.d.win.emef.ie.l.e.10.101@gmail.com</a>
<a href=""mailto:god.win.e.me.fi.el.e1.010.1@gmail.com"">god.win.e.me.fi.el.e1.010.1@gmail.com</a>
<a href=""mailto:go.dw.i.n.eme.fiele1.0.1.0.1@gmail.com"">go.dw.i.n.eme.fiele1.0.1.0.1@gmail.com</a>
<a href=""mailto:g.o.d.w.i.n.em.efi.e.le.10.10.1@gmail.com"">g.o.d.w.i.n.em.efi.e.le.10.10.1@gmail.com</a>
<a href=""mailto:g.od.wi.nemef.i.ele1.0.101@gmail.com"">g.od.wi.nemef.i.ele1.0.101@gmail.com</a>
<a href=""mailto:go.d.w.i.nemefie.l.e.101.0.1@gmail.com"">go.d.w.i.nemefie.l.e.101.0.1@gmail.com</a>
<a href=""mailto:go.dwi.n.e.m.efiele.1.01.0.1@gmail.com"">go.dwi.n.e.m.efiele.1.01.0.1@gmail.com</a>
<a href=""mailto:g.o.d.w.ine.m.ef.i.el.e.1.01.0.1@gmail.com"">g.o.d.w.ine.m.ef.i.el.e.1.01.0.1@gmail.com</a>
<a href=""mailto:g.od.win.em.e.fi.ele10.1.01@gmail.com"">g.od.win.em.e.fi.ele10.1.01@gmail.com</a>
<a href=""mailto:go.dwi.ne.me.fi.e.l.e.1010.1@gmail.com"">go.dwi.ne.me.fi.e.l.e.1010.1@gmail.com</a>
<a href=""mailto:go.dwineme.fie.le1.01.01@gmail.com"">go.dwineme.fie.le1.01.01@gmail.com</a>
<a href=""mailto:g.o.dwine.m.e.f.iele1.01.01@gmail.com"">g.o.dwine.m.e.f.iele1.01.01@gmail.com</a>
<a href=""mailto:g.odw.i.ne.mef.i.e.le.1.01.0.1@gmail.com"">g.odw.i.ne.mef.i.e.le.1.01.0.1@gmail.com</a>
<a href=""mailto:g.o.dwi.ne.me.fie.l.e.1.01.0.1@gmail.com"">g.o.dwi.ne.me.fie.l.e.1.01.0.1@gmail.com</a>
<a href=""mailto:g.odw.in.e.m.ef.i.el.e.1.01.01@gmail.com"">g.odw.in.e.m.ef.i.el.e.1.01.01@gmail.com</a>
<a href=""mailto:g.odwine.m.e.fi.e.l.e1.0101@gmail.com"">g.odwine.m.e.fi.e.l.e1.0101@gmail.com</a>
<a href=""mailto:g.o.d.winem.ef.ie.l.e1.0.101@gmail.com"">g.o.d.winem.ef.ie.l.e1.0.101@gmail.com</a>
<a href=""mailto:godw.in.eme.f.ie.l.e.10101@gmail.com"">godw.in.eme.f.ie.l.e.10101@gmail.com</a>
<a href=""mailto:go.d.w.i.neme.f.i.e.l.e101.0.1@gmail.com"">go.d.w.i.neme.f.i.e.l.e101.0.1@gmail.com</a>
<a href=""mailto:g.odw.i.ne.mefi.el.e101.01@gmail.com"">g.odw.i.ne.mefi.el.e101.01@gmail.com</a>
<a href=""mailto:godw.i.nem.e.fi.el.e.101.0.1@gmail.com"">godw.i.nem.e.fi.el.e.101.0.1@gmail.com</a>
<a href=""mailto:go.d.wi.n.e.m.e.f.ie.le1.010.1@gmail.com"">go.d.wi.n.e.m.e.f.ie.le1.010.1@gmail.com</a>
<a href=""mailto:g.od.w.in.em.efi.e.le.1.0.1.0.1@gmail.com"">g.od.w.in.em.efi.e.le.1.0.1.0.1@gmail.com</a>
<a href=""mailto:godwi.n.e.m.ef.ie.l.e101.0.1@gmail.com"">godwi.n.e.m.ef.ie.l.e101.0.1@gmail.com</a>
<a href=""mailto:g.odw.inem.e.f.i.el.e1.0.1.01@gmail.com"">g.odw.inem.e.f.i.el.e1.0.1.01@gmail.com</a>
<a href=""mailto:g.o.d.w.i.n.e.m.e.f.i.e.l.e10.10.1@gmail.com"">g.o.d.w.i.n.e.m.e.f.i.e.l.e10.10.1@gmail.com</a>
<a href=""mailto:go.d.w.i.n.em.e.f.iele10101@gmail.com"">go.d.w.i.n.em.e.f.iele10101@gmail.com</a>
<a href=""mailto:g.odw.i.nem.ef.iel.e.10101@gmail.com"">g.odw.i.nem.ef.iel.e.10101@gmail.com</a>
<a href=""mailto:godwineme.f.i.e.le.1.0.1.01@gmail.com"">godwineme.f.i.e.le.1.0.1.01@gmail.com</a>
<a href=""mailto:g.odwi.nemef.ie.l.e101.0.1@gmail.com"">g.odwi.nemef.ie.l.e101.0.1@gmail.com</a>
<a href=""mailto:go.dw.in.e.m.e.f.ie.l.e1.0.1.0.1@gmail.com"">go.dw.in.e.m.e.f.ie.l.e1.0.1.0.1@gmail.com</a>
<a href=""mailto:g.od.w.i.n.em.ef.ie.l.e1.0.101@gmail.com"">g.od.w.i.n.em.ef.ie.l.e1.0.101@gmail.com</a>
<a href=""mailto:g.od.w.i.n.em.ef.ie.le.1.0.101@gmail.com"">g.od.w.i.n.em.ef.ie.le.1.0.101@gmail.com</a>
<a href=""mailto:g.odwin.e.m.efie.l.e.10.1.0.1@gmail.com"">g.odwin.e.m.efie.l.e.10.1.0.1@gmail.com</a>
<a href=""mailto:godwine.mef.iele1.01.0.1@gmail.com"">godwine.mef.iele1.01.0.1@gmail.com</a>
<a href=""mailto:g.od.w.in.eme.fi.el.e.101.01@gmail.com"">g.od.w.in.eme.fi.el.e.101.01@gmail.com</a>
<a href=""mailto:godw.i.neme.f.i.e.l.e.1.010.1@gmail.com"">godw.i.neme.f.i.e.l.e.1.010.1@gmail.com</a>
<a href=""mailto:g.od.winem.ef.i.e.l.e10.1.0.1@gmail.com"">g.od.winem.ef.i.e.l.e10.1.0.1@gmail.com</a>
<a href=""mailto:g.o.dwi.ne.mefie.l.e1.01.0.1@gmail.com"">g.o.dwi.ne.mefie.l.e1.01.0.1@gmail.com</a>
<a href=""mailto:go.dwin.e.m.e.f.i.el.e1.010.1@gmail.com"">go.dwin.e.m.e.f.i.el.e1.010.1@gmail.com</a>
<a href=""mailto:g.o.d.w.in.e.m.e.f.ie.l.e.1.010.1@gmail.com"">g.o.d.w.in.e.m.e.f.ie.l.e.1.010.1@gmail.com</a>
<a href=""mailto:g.odw.i.n.em.ef.i.ele1.0.10.1@gmail.com"">g.odw.i.n.em.ef.i.ele1.0.10.1@gmail.com</a>
<a href=""mailto:go.dwi.n.e.m.e.fiel.e1.0.10.1@gmail.com"">go.dwi.n.e.m.e.fiel.e1.0.10.1@gmail.com</a>
<a href=""mailto:go.dwi.ne.mef.i.el.e.10101@gmail.com"">go.dwi.ne.mef.i.el.e.10101@gmail.com</a>
<a href=""mailto:g.od.win.em.e.fie.le.1.0.1.0.1@gmail.com"">g.od.win.em.e.fie.le.1.0.1.0.1@gmail.com</a>
<a href=""mailto:g.o.dw.i.n.eme.fie.l.e.1.0.1.0.1@gmail.com"">g.o.dw.i.n.eme.fie.l.e.1.0.1.0.1@gmail.com</a>
<a href=""mailto:g.o.dw.i.ne.me.fi.e.le.1.0.101@gmail.com"">g.o.dw.i.ne.me.fi.e.le.1.0.101@gmail.com</a>
<a href=""mailto:godw.i.ne.me.fie.le.1010.1@gmail.com"">godw.i.ne.me.fie.le.1010.1@gmail.com</a>
<a href=""mailto:g.o.d.wi.n.e.mefi.ele.101.0.1@gmail.com"">g.o.d.wi.n.e.mefi.ele.101.0.1@gmail.com</a>
<a href=""mailto:godw.i.nemefiele1010.1@gmail.com"">godw.i.nemefiele1010.1@gmail.com</a>
<a href=""mailto:go.d.w.ine.m.ef.i.e.le.101.0.1@gmail.com"">go.d.w.ine.m.ef.i.e.le.101.0.1@gmail.com</a>
<a href=""mailto:go.dwine.mefie.le1.01.0.1@gmail.com"">go.dwine.mefie.le1.01.0.1@gmail.com</a>
<a href=""mailto:g.o.d.wi.n.em.efie.l.e10.1.01@gmail.com"">g.o.d.wi.n.em.efie.l.e10.1.01@gmail.com</a>
<a href=""mailto:go.dw.i.neme.fi.ele10.1.0.1@gmail.com"">go.dw.i.neme.fi.ele10.1.0.1@gmail.com</a>
<a href=""mailto:go.dwi.n.e.me.f.i.el.e.1.01.0.1@gmail.com"">go.dwi.n.e.me.f.i.el.e.1.01.0.1@gmail.com</a>
<a href=""mailto:g.o.dwin.em.e.fie.l.e101.01@gmail.com"">g.o.dwin.em.e.fie.l.e101.01@gmail.com</a>
<a href=""mailto:godwine.mefie.l.e.101.0.1@gmail.com"">godwine.mefie.l.e.101.0.1@gmail.com</a>
<a href=""mailto:go.dwi.nem.e.f.i.e.le10.10.1@gmail.com"">go.dwi.nem.e.f.i.e.le10.10.1@gmail.com</a>
<a href=""mailto:g.odwi.n.em.efiel.e1.0.1.0.1@gmail.com"">g.odwi.n.em.efiel.e1.0.1.0.1@gmail.com</a>
<a href=""mailto:g.odwineme.f.i.e.l.e.1.0101@gmail.com"">g.odwineme.f.i.e.l.e.1.0101@gmail.com</a>
<a href=""mailto:g.odwi.n.emefiele1.010.1@gmail.com"">g.odwi.n.emefiele1.010.1@gmail.com</a>
<a href=""mailto:god.wine.me.fiele.1.0.1.01@gmail.com"">god.wine.me.fiele.1.0.1.01@gmail.com</a>
<a href=""mailto:g.odwi.n.em.e.f.i.e.l.e.1.010.1@gmail.com"">g.odwi.n.em.e.f.i.e.l.e.1.010.1@gmail.com</a>
<a href=""mailto:godw.inem.e.f.i.ele10.1.0.1@gmail.com"">godw.inem.e.f.i.ele10.1.0.1@gmail.com</a>
<a href=""mailto:g.odw.i.ne.m.ef.i.ele.1.0.101@gmail.com"">g.odw.i.ne.m.ef.i.ele.1.0.101@gmail.com</a>
<a href=""mailto:go.d.wine.m.ef.iel.e.10.10.1@gmail.com"">go.d.wine.m.ef.iel.e.10.10.1@gmail.com</a>
<a href=""mailto:go.dw.i.neme.fi.e.l.e.1.0.1.01@gmail.com"">go.dw.i.neme.fi.e.l.e.1.0.1.01@gmail.com</a>
<a href=""mailto:go.dw.i.n.e.mef.i.e.le.10.1.01@gmail.com"">go.dw.i.n.e.mef.i.e.le.10.1.01@gmail.com</a>
<a href=""mailto:g.od.w.i.ne.m.ef.i.ele10.101@gmail.com"">g.od.w.i.ne.m.ef.i.ele10.101@gmail.com</a>
<a href=""mailto:godwi.nemef.iel.e.101.0.1@gmail.com"">godwi.nemef.iel.e.101.0.1@gmail.com</a>
<a href=""mailto:godw.in.e.m.e.f.i.ele101.0.1@gmail.com"">godw.in.e.m.e.f.i.ele101.0.1@gmail.com</a>
<a href=""mailto:g.od.w.i.n.eme.fi.el.e.1.0.1.01@gmail.com"">g.od.w.i.n.eme.fi.el.e.1.0.1.01@gmail.com</a>
<a href=""mailto:g.o.d.wi.nemef.i.el.e.10101@gmail.com"">g.o.d.wi.nemef.i.el.e.10101@gmail.com</a>
<a href=""mailto:g.o.dw.i.ne.m.ef.i.e.l.e.10.10.1@gmail.com"">g.o.dw.i.ne.m.ef.i.e.l.e.10.10.1@gmail.com</a>
<a href=""mailto:go.d.wi.ne.me.f.i.el.e.1.0.1.0.1@gmail.com"">go.d.wi.ne.me.f.i.el.e.1.0.1.0.1@gmail.com</a>
<a href=""mailto:g.o.d.win.e.me.f.i.e.l.e.1010.1@gmail.com"">g.o.d.win.e.me.f.i.e.l.e.1010.1@gmail.com</a>
<a href=""mailto:g.o.d.win.emef.ie.l.e10101@gmail.com"">g.o.d.win.emef.ie.l.e10101@gmail.com</a>
<a href=""mailto:g.o.dw.inemefie.l.e.10.1.0.1@gmail.com"">g.o.dw.inemefie.l.e.10.1.0.1@gmail.com</a>
<a href=""mailto:g.od.wi.ne.m.e.fi.e.le1.0.1.01@gmail.com"">g.od.wi.ne.m.e.fi.e.le1.0.1.01@gmail.com</a>
<a href=""mailto:g.od.w.i.ne.me.fiele10.10.1@gmail.com"">g.od.w.i.ne.me.fiele10.10.1@gmail.com</a>
<a href=""mailto:g.odwi.n.e.m.e.fi.el.e10.101@gmail.com"">g.odwi.n.e.m.e.fi.el.e10.101@gmail.com</a>
<a href=""mailto:god.w.i.n.e.mefiel.e.10.10.1@gmail.com"">god.w.i.n.e.mefiel.e.10.10.1@gmail.com</a>
<a href=""mailto:go.dwin.em.efi.ele.1.0.1.01@gmail.com"">go.dwin.em.efi.ele.1.0.1.01@gmail.com</a>
<a href=""mailto:g.odw.in.em.e.f.iele101.0.1@gmail.com"">g.odw.in.em.e.f.iele101.0.1@gmail.com</a>
<a href=""mailto:godwi.n.em.e.fi.e.le101.01@gmail.com"">godwi.n.em.e.fi.e.le101.01@gmail.com</a>
<a href=""mailto:godwin.e.mef.ie.le.1.0.10.1@gmail.com"">godwin.e.mef.ie.le.1.0.10.1@gmail.com</a>
<a href=""mailto:go.dwin.emefiel.e.10.10.1@gmail.com"">go.dwin.emefiel.e.10.10.1@gmail.com</a>
<a href=""mailto:g.o.d.w.in.e.mef.iele101.0.1@gmail.com"">g.o.d.w.in.e.mef.iele101.0.1@gmail.com</a>
<a href=""mailto:god.w.in.e.m.efi.e.le.1.01.0.1@gmail.com"">god.w.in.e.m.efi.e.le.1.01.0.1@gmail.com</a>
<a href=""mailto:go.d.w.i.n.em.e.f.i.ele.1010.1@gmail.com"">go.d.w.i.n.em.e.f.i.ele.1010.1@gmail.com</a>
<a href=""mailto:god.wi.ne.m.e.f.iele.10.101@gmail.com"">god.wi.ne.m.e.f.iele.10.101@gmail.com</a>
<a href=""mailto:g.o.dwin.eme.f.iel.e.1.010.1@gmail.com"">g.o.dwin.eme.f.iel.e.1.010.1@gmail.com</a>
<a href=""mailto:god.win.e.m.e.fi.e.l.e10.1.0.1@gmail.com"">god.win.e.m.e.fi.e.l.e10.1.0.1@gmail.com</a>
<a href=""mailto:godw.in.eme.f.i.ele.10.1.01@gmail.com"">godw.in.eme.f.i.ele.10.1.01@gmail.com</a>
<a href=""mailto:g.od.w.in.e.m.e.fiel.e10101@gmail.com"">g.od.w.in.e.m.e.fiel.e10101@gmail.com</a>
<a href=""mailto:god.wi.n.emefiele1.0.1.0.1@gmail.com"">god.wi.n.emefiele1.0.1.0.1@gmail.com</a>
<a href=""mailto:g.o.dw.in.e.mefi.e.le.1.0.10.1@gmail.com"">g.o.dw.in.e.mefi.e.le.1.0.10.1@gmail.com</a>
<a href=""mailto:god.w.inem.e.f.iel.e10.1.01@gmail.com"">god.w.inem.e.f.iel.e10.1.01@gmail.com</a>
<a href=""mailto:go.dwineme.fi.e.l.e1.01.0.1@gmail.com"">go.dwineme.fi.e.l.e1.01.0.1@gmail.com</a>
<a href=""mailto:g.odw.in.em.e.f.iel.e1.010.1@gmail.com"">g.odw.in.em.e.f.iel.e1.010.1@gmail.com</a>
<a href=""mailto:g.o.dw.i.n.emefi.e.le1010.1@gmail.com"">g.o.dw.i.n.emefi.e.le1010.1@gmail.com</a>
<a href=""mailto:g.o.dw.ine.m.ef.i.e.le.10101@gmail.com"">g.o.dw.ine.m.ef.i.e.le.10101@gmail.com</a>
<a href=""mailto:go.dwin.em.ef.i.e.le10.1.01@gmail.com"">go.dwin.em.ef.i.e.le10.1.01@gmail.com</a>
<a href=""mailto:g.odwin.e.m.e.f.iel.e.101.01@gmail.com"">g.odwin.e.m.e.f.iel.e.101.01@gmail.com</a>
<a href=""mailto:godwin.e.mef.i.e.l.e1.0.10.1@gmail.com"">godwin.e.mef.i.e.l.e1.0.10.1@gmail.com</a>
<a href=""mailto:godw.i.nemef.iele101.01@gmail.com"">godw.i.nemef.iele101.01@gmail.com</a>
<a href=""mailto:g.odw.i.n.eme.fi.e.le.1.0.101@gmail.com"">g.odw.i.n.eme.fi.e.le.1.0.101@gmail.com</a>
<a href=""mailto:g.od.w.in.eme.f.i.e.l.e10.1.0.1@gmail.com"">g.od.w.in.eme.f.i.e.l.e10.1.0.1@gmail.com</a>
<a href=""mailto:godw.inemefi.el.e10101@gmail.com"">godw.inemefi.el.e10101@gmail.com</a>
<a href=""mailto:godw.in.e.me.f.i.el.e.1.01.0.1@gmail.com"">godw.in.e.me.f.i.el.e.1.01.0.1@gmail.com</a>
<a href=""mailto:go.d.win.e.mefi.ele1.0.10.1@gmail.com"">go.d.win.e.mefi.ele1.0.10.1@gmail.com</a>
<a href=""mailto:godw.i.n.emefi.el.e1.01.0.1@gmail.com"">godw.i.n.emefi.el.e1.01.0.1@gmail.com</a>
<a href=""mailto:g.odwi.nem.ef.ie.le.1.0101@gmail.com"">g.odwi.nem.ef.ie.le.1.0101@gmail.com</a>
<a href=""mailto:go.d.w.i.nemefi.e.le101.0.1@gmail.com"">go.d.w.i.nemefi.e.le101.0.1@gmail.com</a>
<a href=""mailto:go.d.w.i.nem.e.f.i.e.l.e10.10.1@gmail.com"">go.d.w.i.nem.e.f.i.e.l.e10.10.1@gmail.com</a>
<a href=""mailto:g.o.dw.ine.m.ef.i.e.l.e1.01.01@gmail.com"">g.o.dw.ine.m.ef.i.e.l.e1.01.01@gmail.com</a>
<a href=""mailto:go.dwin.em.efiel.e1.0101@gmail.com"">go.dwin.em.efiel.e1.0101@gmail.com</a>
<a href=""mailto:god.w.ineme.fie.l.e.1.0.10.1@gmail.com"">god.w.ineme.fie.l.e.1.0.10.1@gmail.com</a>
<a href=""mailto:g.o.d.wi.ne.m.e.fie.l.e1.01.0.1@gmail.com"">g.o.d.wi.ne.m.e.fie.l.e1.01.0.1@gmail.com</a>
<a href=""mailto:g.o.d.w.i.nem.ef.ie.le1.0.1.0.1@gmail.com"">g.o.d.w.i.nem.ef.ie.le1.0.1.0.1@gmail.com</a>
<a href=""mailto:go.d.w.inemef.i.e.le10.10.1@gmail.com"">go.d.w.inemef.i.e.le10.10.1@gmail.com</a>
<a href=""mailto:go.d.w.in.e.m.ef.i.e.le.10.10.1@gmail.com"">go.d.w.in.e.m.ef.i.e.le.10.10.1@gmail.com</a>"
UumZwehP,07. Repeat String,veronikaaa86,Java,Wednesday 31st of May 2023 12:58:23 PM CDT,"package methods;

import java.util.Scanner;

public class P07RepeatString {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        String textInput = scanner.nextLine();
        int n = Integer.parseInt(scanner.nextLine());

        String resultText = repeatString(n, textInput);

        System.out.println(resultText);
    }

    public static String repeatString(int n, String textToRepeat) {
        String resultText = """";
        for (int i = 0; i < n; i++) {
            resultText += textToRepeat;
        }

        return resultText;
    }
}
"
3B5F0F3N,06. Calculate Rectangle Area,veronikaaa86,Java,Wednesday 31st of May 2023 12:47:27 PM CDT,"package methods;

import java.util.Scanner;

public class P06CalculateRectangleArea {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        int width = Integer.parseInt(scanner.nextLine());
        int length = Integer.parseInt(scanner.nextLine());

        int area = calculateRectangleArea(width, length);

        System.out.println(area);
    }

    public static int calculateRectangleArea(int width, int length){
        return width * length;
    }
}
"
WpiaaMsh,dfsfd,selebry,Python,Wednesday 31st of May 2023 12:43:53 PM CDT,"import math


def main(y):
    if y < -75:
        return 51 * (abs(y ** 2 + 1 + y ** 3)) ** 7
    elif -75 <= y < -14:
        return 2 * math.tan(y ** 2) ** 4 + ((math.floor(28 * y ** 3 + 49 + 2 * y ** 2)) ** 5) / 8 + (
                    y / 14 + 65 + 55 * y ** 2) ** 6
    else:
        return 65 * y ** 14 - y ** 9 - 48 * y ** 4"
hRkgcZaQ,04. Calculations,veronikaaa86,Java,Wednesday 31st of May 2023 12:41:52 PM CDT,"package methods;

import java.util.Scanner;

public class P04Calculations {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        String commandInput = scanner.nextLine();
        int firstNumInput = Integer.parseInt(scanner.nextLine());
        int secondNumInput = Integer.parseInt(scanner.nextLine());

        switch (commandInput) {
            case ""add"":
                //System.out.println(addNum(firstNumInput, secondNumInput));
                printAdd(firstNumInput, secondNumInput);
                break;
            case ""multiply"":
                printMultiply(firstNumInput, secondNumInput);
                break;
            case ""subtract"":
                printSubtract(firstNumInput, secondNumInput);
                break;
            case ""divide"":
                printDivide(firstNumInput, secondNumInput);
                break;
        }
    }

//    public static int addNum(int firstNum, int secondNum){
//        return firstNum + secondNum;
//    }
    
    public static void printAdd(int firstNum, int secondNum){
        int result = firstNum + secondNum;

        System.out.println(result);
    }

    public static void printMultiply(int firstNum, int secondNum){
        int result = firstNum * secondNum;

        System.out.println(result);
    }

    public static void printSubtract(int firstNum, int secondNum){
        int result = firstNum - secondNum;

        System.out.println(result);
    }

    public static void printDivide(int firstNum, int secondNum){
        int result = firstNum / secondNum;

        System.out.println(result);
    }
}
"
AjqSXszi,1.1,Radotsveta,C,Wednesday 31st of May 2023 12:37:33 PM CDT,"#include <stdio.h>
#include <string.h>

struct Participant
{
    char names[55];
    char id[6];
    double monthlyPrice;
    int deskCode[3];
};

void addParticipants()
{
    struct Participant members;

    scanf(""%[^\n]s"", members.names);
    scanf(""%s %lf %d"",members.id,&members.monthlyPrice,members.deskCode);
    int lettersLength = strlen(members.names);
    /*
      printf(""%d"",lettersLength);
      printf(""%s"",members.names);
      printf(""%lf"",members.monthlyPrice);

      struct Participant member[1];
  */

    struct Participant member[1];
    member[0] = members;


      FILE *file = fopen(""membersText.txt"", ""w"");
      if(file != NULL)
      {
          fprintf(file, ""%d;%s;%s;%.2lf;%d"",lettersLength, member[0].names, member[0].id,member[0].monthlyPrice, *member[0].deskCode);

          fclose(file);
      }
      else
      {
          printf(""Error opening/closing the file."");
      }

  }

  int main()
  {
      addParticipants();

      return 0;
  }"
ztt65SCp,Untitled,ikizid,Python,Wednesday 31st of May 2023 12:35:36 PM CDT,"# Five dice multiplication result over a thousand
max = 7
kpl = 0
yli = 0

for x1 in range(1, max):
    for x2 in range(1, max):
        for x3 in range(1, max):
            for x4 in range(1, max):
                for x5 in range(1, max):
#                   print(x1, x2, x3, x4, x5, '\t', x1*x2*x3*x4*x5)
                    kpl += 1
                    if(x1*x2*x3*x4*x5 > 1000):
#                        print(x1, x2, x3, x4, x5, '\t', x1*x2*x3*x4*x5)
                        yli += 1

print(""Erilaisia heittoja"", kpl, ""joista noppien tulo yli 1000 on"", yli, ""kappaletta ="", yli*100/kpl, ""% todennäköisyys."")
"
3LAFdC0f,FoxPro MySQL,thesuhu,MySQL,Wednesday 31st of May 2023 12:30:52 PM CDT,"# FoxPro create file txt delimited with pipeline
Copy To (hasil) Delimited With """" With Character ""|""

# from file above, then import to MYSQL
LOAD DATA LOCAL INFILE 'C:/tmp/coba.txt' INTO TABLE coba
FIELDS TERMINATED BY ""|"" ENCLOSED BY """"
LINES TERMINATED BY '\r\n'
(nama,alamat,kota)"
WMGkfNhN,Untitled,gadungw71,PHP,Wednesday 31st of May 2023 12:26:28 PM CDT,"https://sites.google.com/movfeed.com/cuevana-3-rapidos-y-furioso-10/halaman-muka
https://sites.google.com/movfeed.com/pelisplusver-rapidosyfurioso10/beranda
https://sites.google.com/movfeed.com/pelsplusrpidosyfuriosos102023e/beranda
https://sites.google.com/movfeed.com/pelisplusofficialverrpidosyfur/home
https://sites.google.com/jonin28.com/pelisplusverrpidoyfuriosoxfast/halaman-muka
https://sites.google.com/jonin28.com/ver-rpido-y-furioso-10-2023-on/home
https://sites.google.com/jonin28.com/xem-nng-tin-c-2023-hd-phim-y-p/home
https://vk.com/@veralebedeva12-xem-phim-nang-tien-ca-2023-full-hd-vietsub-mien-phi-online
https://vk.com/@marysedesaulniers-xem-nang-tien-ca-2023-mien-phi-online-vietsub-phat-truc-tuye
https://sites.google.com/ghsjanga.com/xem-phim-nng-tin-c-2023-hd-phi/home
https://sites.google.com/ghsjanga.com/xem-phim-nng-tin-c-2023/beranda
https://sites.google.com/jonin28.com/filme-a-pequena-sereia-2023-as/beranda
https://sites.google.com/jonin28.com/1080p-assistirapequenasereia20/home
https://sites.google.com/ghsjanga.com/hd-a-pequena-sereia-filme-comp/beranda
https://sites.google.com/ghsjanga.com/pelisplusverlasirenita2023pelc/home
https://zeerotech.us/shazam-la-furia-de-los-dioses-una-magica-y-divertida-batalla-contra-el-mal/"
VxY1DN0N,Advanced AND - Donald AND Duck AND Hello,wheresTheAnyKey,C,Wednesday 31st of May 2023 12:15:17 PM CDT,"Pasted at: 31/05/2023 18:15
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND
hello, donald was a duck

5502491997132108

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH
"
0b4sMERi,Financial What's Inside - Email/IP/Bank,wheresTheAnyKey,C,Wednesday 31st of May 2023 12:15:16 PM CDT,"Pasted at: 31/05/2023 18:15
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3
What's Inside Paste 

5378496492418234
5571598708435236
5587663820997281
5502491997132108
5516931903918995
5322909948799236
5443317136071703
5409137465238695
5497550044220575
5559606180091553

aaribaud@att.net
aaribaud@comcast.net
aaribaud@att.com
aaribaud@att.co.uk
aaribaud@yahoo.com

246.107.72.199
221.187.199.189
3.109.3.44
109.112.85.139
250.83.213.179
169.141.201.234
50.180.50.59
20.181.54.231
64.235.191.167
48.103.36.43"
zgZ1vS3g,Financial with SPECIAL CHARACTERS,wheresTheAnyKey,C,Wednesday 31st of May 2023 12:15:14 PM CDT,"Pasted at: 31/05/2023 18:15
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND

5148-2121-6312-7114   - DASHES
5148212163127114
5107-4578-0576-9075   - DASHES
5107457805769075
3488-1760-1454-729   - DASHES
348817601454729

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH"
gWVnkAkb,Domains with SPECIAL CHARS,wheresTheAnyKey,C,Wednesday 31st of May 2023 12:15:13 PM CDT,"Pasted at: 31/05/2023 18:15
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND

www.qatesting.com
blog.qatesting.com
www.qatesting.com/index.html
www.qatesting.com/home
www.qatestingblog.com
www.qatestingtutorials.com
shop.qatesting.co.uk
admin.qatesting.io 
qatesting
qatesting.co.uk
qatesting.cn
qatesting.io
findmetesting.com
www.qatesting-blog.com
www.qatesting-blog23.com
www.qatesting
www.qatesting.co.uk
www.qatesting.cn
www.qatesting.io
www.findmetesting.com
www.wobsut.gov

The difference is that QA is process oriented and QC is product oriented.

Testing, therefore is product oriented and thus is in the QC domain. Testing for quality isn't assuring quality, it's controlling it.



Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH
"
2S6TgXVt,ALL Keywords with Excluded Words,wheresTheAnyKey,C,Wednesday 31st of May 2023 12:15:11 PM CDT,"Pasted at: 31/05/2023 18:15
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND 

The dystopian version of superintelligence is illustrated with frequency by leaders in the technology industry, and is famously depicted by Hollywood in films like Terminator, 
or more recently Ex Machina, and even the Avengers. The “furious deity A.I.” is a story you know, because it is the story you are constantly told: we build the thinking machine, 
it surpasses our abilities in every way, and it destroys us for one of any number of reasons.Maybe it perceives us as a threat. Maybe we’re just in its way, 
and it hardly perceives us at all — mankind, a disposable insect race.

There are of course many arguments in opposition to the now ubiquitous concept of our apocalypse by artificial intelligence. 
I myself have called into question the logic of such dystopian arguments in Anatomy of Next. But our subject here is less pertaining to the nature of the conscious machine than 
it is to the way we talk about this subject, and what it means. First, consider that most of the artificial intelligence depicted in culture looks human, a representation with 
no basis in technological reality. Then, the true scope of the Singularity is almost impossible to predict, which begs a question: where are these opinions about the broadly 
unknowable coming from?"
y5p0NYRK,All Keywords with ANY Additional Words,wheresTheAnyKey,C,Wednesday 31st of May 2023 12:15:10 PM CDT,"Pasted at: 31/05/2023 18:15
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND KEYWAUTO

The dystopian version of superintelligence is illustrated with frequency by leaders in the technology industry, and is famously depicted by Hollywood in films like Terminator, or more recently Ex Machina, and even the Avengers. The “angry god A.I.” is a story you know, because it is the story you are constantly told: we build the thinking machine, it surpasses our abilities in every way, and it destroys us for one of any number of reasons.
Maybe it perceives us as a threat. Maybe we’re just in its way, and it hardly perceives us at all — humanity, a disposable insect race.

There are of course many arguments in opposition to the now ubiquitous concept of our apocalypse by artificial intelligence. I myself have called into question the logic of such dystopian arguments in Anatomy of Next. But our subject here is less pertaining to the nature of the conscious machine than it is to the way we talk about this subject, and what it means. First, consider that most of the artificial intelligence depicted in culture looks human, a representation with no basis in technological reality. Then, the true scope of the Singularity is almost impossible to predict, which begs a question: where are these opinions about the broadly unknowable coming from?

6589745854123698

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH
"
vdYn8Bfs,IP with SPECIAL CHARACTERS,wheresTheAnyKey,C,Wednesday 31st of May 2023 12:15:07 PM CDT,"Pasted at: 31/05/2023 18:15
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND

123.123.123.149
123.123.123.7
123.123.123.186
123.123.123.47
123.123.123.187
123.123.123.47
123.123.123.130
123.123.123.62
123.123.123.87
123.123.123.1
123.123.123.61
123.123.123.1
123.123.123.65
123.123.123.65
123.123.123.189
123.123.123.193
123.123.123.78
123.123.123.142
123.123.123.107
123.123.123.126
123.123.123.13
123.123.123.171
123.123.123.45
123.123.123.61
123.123.123.93
123.123.123.2
123.123.123.71
123.123.123.41
123.123.123.184
123.123.123.74
123.123.123.106
123.123.123.171
123.123.123.188
123.123.123.177
123.123.123.185
123.123.123.9
123.123.123.184
123.123.123.100
123.123.123.31
123.123.123.164
123.123.123.184
123.123.123.12
123.123.123.153
123.123.123.72
123.123.123.44
123.123.123.119
123.123.123.119
123.123.123.163
123.123.123.38
123.123.123.67
123.123.123.59
123.123.123.10
123.123.123.50
123.123.123.121
123.123.123.145
123.123.123.159
123.123.123.64
123.123.123.6
123.123.123.39
123.123.123.198
123.123.123.17
123.123.123.65
123.123.123.149
123.123.123.84
123.123.123.8
123.123.123.145
123.123.123.65
123.123.123.94
123.123.123.79
123.123.123.177
123.123.123.67
123.123.123.78
123.123.123.80
123.123.123.79
123.123.123.50
123.123.123.87
123.123.123.15
123.123.123.80
123.123.123.145
123.123.123.75
123.123.123.4
123.123.123.59
123.123.123.59
123.123.123.190
123.123.123.64
123.123.123.63
123.123.123.102
123.123.123.114
123.123.123.146
123.123.123.53
123.123.123.124
123.123.123.30
123.123.123.57
123.123.123.64
123.123.123.69
123.123.123.33
123.123.123.12
123.123.123.73
123.123.123.36
123.123.123.153
100.123.123.50
100.123.123.39
100.123.123.156
100.123.123.56
100.123.123.175
100.123.123.121
100.123.123.114
100.123.123.118
100.123.123.13
100.123.123.174
100.123.123.84
100.123.123.161
100.123.123.63
100.123.123.51
100.123.123.66
100.123.123.190
100.123.123.101
100.123.123.72
100.123.123.24
100.123.123.151
100.123.123.143
100.123.123.146
100.123.123.117
100.123.123.21
100.123.123.10
100.123.123.98
100.123.123.114
100.123.123.6
100.123.123.101
100.123.123.14
100.123.123.147
100.123.123.159
100.123.123.157
100.123.123.6
100.123.123.175
100.123.123.35
100.123.123.136
100.123.123.2
100.123.123.139
100.123.123.11
100.123.123.179
100.123.123.16
100.123.123.40
100.123.123.20
100.123.123.20
100.123.123.150
100.123.123.77
100.123.123.48
100.123.123.22
100.123.123.24
100.123.123.9
100.123.123.187
100.123.123.131
100.123.123.148
100.123.123.152
100.123.123.96
100.123.123.199
100.123.123.15
100.123.123.4
100.123.123.112
100.123.123.62
100.123.123.186
100.123.123.36
100.123.123.136
100.123.123.83
100.123.123.38
100.123.123.120
100.123.123.147
100.123.123.15
100.123.123.134
100.123.123.19
100.123.123.196
100.123.123.115
100.123.123.126
100.123.123.39
100.123.123.193
100.123.123.117
100.123.123.115
100.123.123.115
100.123.123.33
100.123.123.121
100.123.123.72
100.123.123.189
100.123.123.76
100.123.123.78
100.123.123.61
100.123.123.112
100.123.123.176
100.123.123.82
100.123.123.183
100.123.123.168
100.123.123.24
100.123.123.134
100.123.123.145
100.123.123.195
100.123.123.189
100.123.123.157
100.123.123.114
100.123.123.34
100.123.123.166

These are a list of generated IPs for test purPoses. They seRVe no purpose only to act as test data for testing activities.
You might findMEtesting 123.123.123.123 or findmetesting 100.123.123.76. These are my favourite ip addresses 123.123.123.23 100.123.123.23.
These are some random words networking, ipaddresses, studpidIPs


Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH"
WCYXCqZn,Hashed Email With Exclude,wheresTheAnyKey,C,Wednesday 31st of May 2023 12:15:05 PM CDT,"Pasted at: 31/05/2023 18:15
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

wojciech@sktestcomcast.net
joglo@sktestmac.com
larry@sktesthotmail.com
aardo@sktestverizon.net
debest@sktestlive.com
carroll@sktestaol.com
arathi@sktestyahoo.ca
sthomas@sktestcomcast.net
leocharre@sktestyahoo.ca
pedwards@sktestyahoo.com

skexclude"
Nig4YibK,Hashed Email - Full,wheresTheAnyKey,C,Wednesday 31st of May 2023 12:15:04 PM CDT,"Pasted at: 31/05/2023 18:15
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

wojciech@sktestcomcast.net
joglo@sktestmac.com
larry@sktesthotmail.com
aardo@sktestverizon.net
debest@sktestlive.com
carroll@sktestaol.com
arathi@sktestyahoo.ca
sthomas@sktestcomcast.net
leocharre@sktestyahoo.ca
pedwards@sktestyahoo.com

skinclude"
zPsS9PYN,Email with Keyword SPECIAL CHARACTERS,wheresTheAnyKey,C,Wednesday 31st of May 2023 12:15:02 PM CDT,"Pasted at: 31/05/2023 18:15
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3 for TESTING PURPOSE ONLY

DATA_ID_TESTDATATOFIND NOEXCLUDES

Cooper.Kleine@findmetesting.co.uk 
Mariquilla.Evenden@findmetesting.co.uk 
Noll.Ingolotti@findmetesting.co.uk  
Grove.Feldbaum@findmetesting.co.uk
Mack.Osment@findmetesting.co.uk 
Trisha.Zanicchelli@findmetesting.co.uk
Jack.Gorriessen@findmetesting.co.uk 
Nefen.Malec@findme-testing.co.uk 
Birdie-Gemmill@findmetesting.co.uk
Rosabella.Nias@findmetesting.co.uk
Ellerey.Fanti@findmetesting.cn
Antonina.Carsey@findmetesting.cn
Valry.Shead@findmetesting.cn 
Conrade.Ferrarone@findmetesting.cn
Neysa.Fazakerley@findmetesting.cn
Cristobal.Primak@findmetesting.cn
Wakefield.Kent@findmetesting.cn
findme.Cheales@findmetesting.cn
Nert.Roddamr@findmetesting.cn 
Richy.Raft@findmetesting.cn
Berget.Kermannes@findmetesting.ie 
Shelden.Tregea@findmetesting.ie 
Allsun.Badrick@findmetesting.ie 
Hortense.Ivkovic@findmetesting.ie
Carolin.Potte@findmetesting.ie
Benjie.Trumble@findmetesting.ie
Andrew.Hadgkiss@findmetesting.ie
Trula.Kuna@findmetesting.ie
Tommie.Maytum@findmetesting.ie
Langsdon.Pakes@findmetesting.ie
Porty.Tooth@findmetesting.au
Rozella.Siggefindmetesting.au
Nolie.Tumultyfindmetesting.au
Dud.Caustonfindmetesting.au
Alvinia.Brameldfindmetesting.au
Meridel.Lymbournefindmetesting.au
Elvis.Maleckfindmetesting.au
Brett.Oughtonfindmetesting.au
Rickard.Clemfindmetesting.au
Prue.Firemanfindmetesting.au
Uriel.Rozenbaum@findmetesting25.com
Cindie.Greeson@findmetesting25.com
Laurette.Puckham@findmetesting25.com
Eldredge.Ricket@findmetesting25.com
Alanah.Rapper@findmetesting25.com
Ash.Le.Prevost@findmetesting25.com
Galvin.Purchon@findmetesting25.com
Lauryn.Ilson@findmetesting25.com
findme.Graffin@findmetesting25.com
Edithe.Trehearne@findmetesting25.com
Den.Cancutt@findmetesting10.com
Wernher.Spatoni@findmetesting10.com
Malchy.Ion@findmetesting10.com
Leona.Whitby@findmetesting10.com
Alphonse.Goodlake@findmetesting10.com
Gran.Standen@findmetesting10.com
Barnie.Gilffilland@findmetesting10.com
Kaylyn.Ditchfield@findmetesting10.com
Dorotea.Kohlerman@findmetesting10.com
Gillan.Lampel@findmetesting10.com
Patrica.Mannakee@findustesting.com
Pippo.Sewart@findustesting.com
Lanae.Cousin@findustesting.com
Porter.Glaysher@findustesting.com
Herschel.Yaakov@findustesting.com
findme.Parsand@findustesting.com
Lucho.Cosh@findustesting.com
Cullie.Powlesland@findustesting.com
Edy.Burkart@findustesting.com
Christophorus.Ackeroyd@findustesting.com
Arvy.Rowson@findUStesting.com
Arlan.Ivanilov@findustesting.com
Tawnya.Waslin@findustesting.com
Inigo.Gyrgorcewicx@findustesting.com
Sharity.Stoodley@findustesting.com
Ginger.Dresse@findustesting.com
Deck.Jouannot@findustesting.com
Deny.Soanes@findustesting.com
james@findmetesting.com

Wenona.Moverley@findqatesting.com
Jerry.Poynter@findqatesting.com
Drugi.Neeson@findqatesting.com
Winny.Binfield@findqatesting.com
Darill.Greenshiels@findqatesting.com
Ethelin.Pinchen@findqatesting.com
Tanney.Ballendine@findqatesting.com
Ariadne.Wincott@findqatesting.com
Winnie.Domm@findqatesting.com
Rogerio.Cudbird@findqatesting.com
Yu@findmetesting.com

RIGHT OF @
findme@findme.testing.com
wildcard@findme*testing.com
dash@findme-testing.com
slash@findme/testing.com
questionmark@findme?testing.com

ACCENTS
Pål@findmetesting.com
Magdalène@findmetesting.com
Anaël@findmetesting.com
Lén@findmetesting.com
Loïs@findmetesting.com
Thérèsa@findmetesting.com
Valérie@findmetesting.com
Görel@findmetesting.com
Mélia@findmetesting.com
Joséphine@findmetesting.com
Loïc@findmetesting.com
findme@findmetesting.com
Méghane@findmetesting.com
Nuó@findmetesting.com
Lén@findmetesting.com
Eliès@findmetesting.com
André@findmetesting.com
Mahélie@findmetesting.com
Méthode@findmetesting.com
Rachèle@findmetesting.com
Mélina@findmetesting.com
Gaëlle@findmetesting.com
Céline@findmetesting.com
Bérangère@findmetesting.com
Françoise@findmetesting.com
Séverine@findmetesting.com
Måns@findmetesting.com
Adèle@findmetesting.com
Aimée@findmetesting.com
Mélia@findmetesting.com
Gösta@findmetesting.com
Laurène@findmetesting.com
Gisèle@findmetesting.com
Mélinda@findmetesting.com
Bécassine@findmetesting.com
Ruì@findmetesting.com
Zoé@findmetesting.com
Maëline@findmetesting.com
Aimée@findmetesting.com
Andréanne@findmetesting.com
Adélaïde@findmetesting.com
Laurène@findmetesting.com
Anaé@findmetesting.com
Noëlla@findmetesting.com
Anaël@findmetesting.com
Maëlyss@findmetesting.com
Lucrèce@findmetesting.com
Lén@findmetesting.com
Marie-thérèse@findmetesting.com
Maéna@findmetesting.com
Hélène@findmetesting.com
Hélèna@findmetesting.com
Méng@findmetesting.com
Crééz@findmetesting.com
Mélanie@findmetesting.com
Frédérique@findmetesting.com
Médiamass@findmetesting.com
André@findmetesting.com
Cinéma@findmetesting.com
Mégane@findmetesting.com
Amélie@findmetesting.com
Nadège@findmetesting.com
Rébecca@findmetesting.com
Médiamass@findmetesting.com
Céline@findmetesting.com
Maïly@findmetesting.com
Maï@findmetesting.com
Maëlann@findmetesting.com
Noëlla@findmetesting.com
Laurélie@findmetesting.com
Ruì@findmetesting.com
Chloé@findmetesting.com
Gaëlle@findmetesting.com
Vénus@findmetesting.com
Frédérique@findmetesting.com
Amélie@findmetesting.com
Loïs@findmetesting.com
Marlène@findmetesting.com
Stévina@findmetesting.com
Clémentine@findmetesting.com
Mégane@findmetesting.com
Méng@findmetesting.com
André@findmetesting.com
Crééz@findmetesting.com
Aí@findmetesting.com
Uò@findmetesting.com
Yú@findmetesting.com
Marie-françoise@findmetesting.com
Uò@findmetesting.com
Inès@findmetesting.com
Océane@findmetesting.com
Marie-ève@findmetesting.com
Rébecca@findmetesting.com
Zoé@findmetesting.com
Lài@findmetesting.com
Rachèle@findmetesting.com
Cécile@findmetesting.com
Maïlys@findmetesting.com
Garçon@findmetesting.com
hereiam@testing.com

It's a game of per%entage percentage.
Findme#testing Findme testing.
Over&over&over Over over over.
[findmeinbrackets], findmeinbrackets
(findmeinbrackets), findmeinbrackets
<findmeinbrackets>, findmeinbrackets
{findmeinbrackets>}, findmeinbrackets
http://findme-testing.here.com
http:\\findme-testing.here.com

Vestibulum ante ipsum primis in faucibus orci luctus et ultrices Garçon@findmetesting.com cubilia Curae; Mauris viverra diam vitae quam. Suspendisse potenti. 
Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Ellerey.Fanti@findmetesting.cn risus. Praesent lectus.

Vivamus metus arcu, adipiscing findmetesting@findmetesting.com, hendrerit at, vulputate vitae, nisl.

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH"
