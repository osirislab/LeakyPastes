id,title,username,language,date,content
xzj9dTqv,BTC Wallet Credentials have been reset,spectpsych_18,GetText,Friday 7th of July 2023 06:59:40 PM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please disregard this message.
Your new login credentials are WareappodyTarkp:PYnJr6 on 45.9.148.244
You can connect via SSH.
Regards"
EHGFRtfQ,Untitled,AndrewBucklin,JSON,Friday 7th of July 2023 06:57:42 PM CDT,"[
  {
    ""event"": ""Task started"",
    ""level"": ""info"",
    ""logger"": ""authentik.root.celery"",
    ""pid"": 10334,
    ""task_id"": ""373c696b-1af9-48c9-a4db-6e6b0eaf77db"",
    ""task_name"": ""ldap_sync_single"",
    ""timestamp"": ""2023-07-07T23:48:25.582685""
  },
  {
    ""event"": ""Task started"",
    ""level"": ""info"",
    ""logger"": ""authentik.root.celery"",
    ""pid"": 10333,
    ""task_id"": ""7578862d-f27c-45ef-8f98-014bbc65a1f3"",
    ""task_name"": ""event_notification_handler"",
    ""timestamp"": ""2023-07-07T23:48:25.594055""
  },
  {
    ""event"": ""Task published"",
    ""level"": ""info"",
    ""logger"": ""authentik.root.celery"",
    ""pid"": 10333,
    ""task_id"": ""ce2f6aca-0b4a-40f7-a9d0-4038254479b1"",
    ""task_name"": ""authentik.events.tasks.event_trigger_handler"",
    ""timestamp"": ""2023-07-07T23:48:25.634574""
  },
  {
    ""event"": ""Task published"",
    ""level"": ""info"",
    ""logger"": ""authentik.root.celery"",
    ""pid"": 10333,
    ""task_id"": ""98784d15-6a3c-41ed-bb7f-e84c1ad68c81"",
    ""task_name"": ""authentik.events.tasks.event_trigger_handler"",
    ""timestamp"": ""2023-07-07T23:48:25.636555""
  },
  {
    ""event"": ""Task published"",
    ""level"": ""info"",
    ""logger"": ""authentik.root.celery"",
    ""pid"": 10333,
    ""task_id"": ""61ea5575-61e4-41ba-a3f4-1234b8840cfd"",
    ""task_name"": ""authentik.events.tasks.event_trigger_handler"",
    ""timestamp"": ""2023-07-07T23:48:25.638471""
  },
  {
    ""event"": ""Task finished"",
    ""level"": ""info"",
    ""logger"": ""authentik.root.celery"",
    ""pid"": 10333,
    ""state"": ""SUCCESS"",
    ""task_id"": ""7578862d-f27c-45ef-8f98-014bbc65a1f3"",
    ""task_name"": ""event_notification_handler"",
    ""timestamp"": ""2023-07-07T23:48:25.641141""
  },
  {
    ""event"": ""Task started"",
    ""level"": ""info"",
    ""logger"": ""authentik.root.celery"",
    ""pid"": 10335,
    ""task_id"": ""ce2f6aca-0b4a-40f7-a9d0-4038254479b1"",
    ""task_name"": ""event_trigger_handler"",
    ""timestamp"": ""2023-07-07T23:48:25.640837""
  },
  {
    ""checker"": ""passes_action"",
    ""event"": ""Event matcher check result"",
    ""level"": ""info"",
    ""logger"": ""authentik.policies.event_matcher.models"",
    ""pid"": 10335,
    ""result"": ""<PolicyResult passing=False messages=('Action matched.',)>"",
    ""task_id"": ""task-ce2f6aca0b4a40f7a9d04038254479b1"",
    ""timestamp"": ""2023-07-07T23:48:25.732945""
  },
  {
    ""event"": ""Task finished"",
    ""level"": ""info"",
    ""logger"": ""authentik.root.celery"",
    ""pid"": 10335,
    ""state"": ""SUCCESS"",
    ""task_id"": ""ce2f6aca-0b4a-40f7-a9d0-4038254479b1"",
    ""task_name"": ""event_trigger_handler"",
    ""timestamp"": ""2023-07-07T23:48:25.741521""
  },
  {
    ""event"": ""Task failure"",
    ""exc"": ""AttributeError(\""'UUID' object has no attribute 'connection'\"")"",
    ""level"": ""warning"",
    ""logger"": ""authentik.root.celery"",
    ""pid"": 10334,
    ""task_id"": ""task-373c696b1af948c9a4db6e6b0eaf77db"",
    ""timestamp"": ""2023-07-07T23:48:25.867896""
  },
  {
    ""action"": ""system_exception"",
    ""client_ip"": null,
    ""context"": {
      ""message"": ""Traceback (most recent call last):\n  File \""/usr/local/lib/python3.11/site-packages/celery/app/trace.py\"", line 477, in trace_task\n    R = retval = fun(*args, **kwargs)\n                 ^^^^^^^^^^^^^^^^^^^^\n  File \""/usr/local/lib/python3.11/site-packages/sentry_sdk/integrations/celery.py\"", line 275, in _inner\n    reraise(*exc_info)\n  File \""/usr/local/lib/python3.11/site-packages/sentry_sdk/_compat.py\"", line 60, in reraise\n    raise value\n  File \""/usr/local/lib/python3.11/site-packages/sentry_sdk/integrations/celery.py\"", line 270, in _inner\n    return f(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^\n  File \""/usr/local/lib/python3.11/site-packages/celery/app/trace.py\"", line 760, in __protected_call__\n    return self.run(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \""/authentik/sources/ldap/tasks.py\"", line 42, in ldap_sync_single\n    ldap_sync_paginator(source, UserLDAPSynchronizer)\n  File \""/authentik/sources/ldap/tasks.py\"", line 55, in ldap_sync_paginator\n    sync_inst: BaseLDAPSynchronizer = sync(source)\n                                      ^^^^^^^^^^^^\n  File \""/authentik/sources/ldap/sync/base.py\"", line 29, in __init__\n    self._connection = source.connection()\n                       ^^^^^^^^^^^^^^^^^\nbuiltins.AttributeError: 'UUID' object has no attribute 'connection'""
    },
    ""event"": ""Created Event"",
    ""level"": ""info"",
    ""logger"": ""authentik.events.models"",
    ""pid"": 10334,
    ""timestamp"": ""2023-07-07T23:48:25.870133"",
    ""user"": {}
  },
  {
    ""event"": ""Task published"",
    ""level"": ""info"",
    ""logger"": ""authentik.root.celery"",
    ""pid"": 10334,
    ""task_id"": ""b45b05d8-7fb4-4891-adf8-e0e14ea1e4f9"",
    ""task_name"": ""authentik.events.tasks.event_notification_handler"",
    ""timestamp"": ""2023-07-07T23:48:25.912180""
  },
  {
    ""event"": ""Task authentik.sources.ldap.tasks.ldap_sync_single[373c696b-1af9-48c9-a4db-6e6b0eaf77db] raised unexpected: AttributeError(\""'UUID' object has no attribute 'connection'\"")"",
    ""exc_info"": [
      ""<class 'AttributeError'>"",
      ""AttributeError(\""'UUID' object has no attribute 'connection'\"")"",
      ""<billiard.einfo.Traceback object at 0x7f7deba78190>""
    ],
    ""level"": ""error"",
    ""logger"": ""celery.app.trace"",
    ""timestamp"": 1688773705.9130294
  },
  {
    ""event"": ""Task finished"",
    ""level"": ""info"",
    ""logger"": ""authentik.root.celery"",
    ""pid"": 10334,
    ""state"": ""FAILURE"",
    ""task_id"": ""373c696b-1af9-48c9-a4db-6e6b0eaf77db"",
    ""task_name"": ""ldap_sync_single"",
    ""timestamp"": ""2023-07-07T23:48:25.913260""
  },
  {
    ""event"": ""Task started"",
    ""level"": ""info"",
    ""logger"": ""authentik.root.celery"",
    ""pid"": 10339,
    ""task_id"": ""98784d15-6a3c-41ed-bb7f-e84c1ad68c81"",
    ""task_name"": ""event_trigger_handler"",
    ""timestamp"": ""2023-07-07T23:48:26.335855""
  },
  {
    ""checker"": ""passes_action"",
    ""event"": ""Event matcher check result"",
    ""level"": ""info"",
    ""logger"": ""authentik.policies.event_matcher.models"",
    ""pid"": 10339,
    ""result"": ""<PolicyResult passing=False messages=('Action matched.',)>"",
    ""task_id"": ""task-98784d156a3c41edbb7fe84c1ad68c81"",
    ""timestamp"": ""2023-07-07T23:48:26.400083""
  },
  {
    ""event"": ""Task finished"",
    ""level"": ""info"",
    ""logger"": ""authentik.root.celery"",
    ""pid"": 10339,
    ""state"": ""SUCCESS"",
    ""task_id"": ""98784d15-6a3c-41ed-bb7f-e84c1ad68c81"",
    ""task_name"": ""event_trigger_handler"",
    ""timestamp"": ""2023-07-07T23:48:26.408206""
  },
  {
    ""event"": ""Task started"",
    ""level"": ""info"",
    ""logger"": ""authentik.root.celery"",
    ""pid"": 10341,
    ""task_id"": ""b45b05d8-7fb4-4891-adf8-e0e14ea1e4f9"",
    ""task_name"": ""event_notification_handler"",
    ""timestamp"": ""2023-07-07T23:48:27.442961""
  },
  {
    ""event"": ""Task started"",
    ""level"": ""info"",
    ""logger"": ""authentik.root.celery"",
    ""pid"": 10342,
    ""task_id"": ""61ea5575-61e4-41ba-a3f4-1234b8840cfd"",
    ""task_name"": ""event_trigger_handler"",
    ""timestamp"": ""2023-07-07T23:48:27.442958""
  },
  {
    ""event"": ""Task published"",
    ""level"": ""info"",
    ""logger"": ""authentik.root.celery"",
    ""pid"": 10341,
    ""task_id"": ""eea0b27b-3cc6-4bbe-bd25-40ff0ee625e3"",
    ""task_name"": ""authentik.events.tasks.event_trigger_handler"",
    ""timestamp"": ""2023-07-07T23:48:27.495114""
  },
  {
    ""event"": ""Task published"",
    ""level"": ""info"",
    ""logger"": ""authentik.root.celery"",
    ""pid"": 10341,
    ""task_id"": ""c0b57754-23e4-410a-875a-67b32aa8be9f"",
    ""task_name"": ""authentik.events.tasks.event_trigger_handler"",
    ""timestamp"": ""2023-07-07T23:48:27.496959""
  },
  {
    ""event"": ""Task published"",
    ""level"": ""info"",
    ""logger"": ""authentik.root.celery"",
    ""pid"": 10341,
    ""task_id"": ""41292260-c6dd-4124-a8bf-22a7d764d5d5"",
    ""task_name"": ""authentik.events.tasks.event_trigger_handler"",
    ""timestamp"": ""2023-07-07T23:48:27.498974""
  },
  {
    ""event"": ""Task finished"",
    ""level"": ""info"",
    ""logger"": ""authentik.root.celery"",
    ""pid"": 10341,
    ""state"": ""SUCCESS"",
    ""task_id"": ""b45b05d8-7fb4-4891-adf8-e0e14ea1e4f9"",
    ""task_name"": ""event_notification_handler"",
    ""timestamp"": ""2023-07-07T23:48:27.502737""
  },
  {
    ""event"": ""Task started"",
    ""level"": ""info"",
    ""logger"": ""authentik.root.celery"",
    ""pid"": 10343,
    ""task_id"": ""c0b57754-23e4-410a-875a-67b32aa8be9f"",
    ""task_name"": ""event_trigger_handler"",
    ""timestamp"": ""2023-07-07T23:48:27.508156""
  },
  {
    ""checker"": ""passes_action"",
    ""event"": ""Event matcher check result"",
    ""level"": ""info"",
    ""logger"": ""authentik.policies.event_matcher.models"",
    ""pid"": 10342,
    ""result"": ""<PolicyResult passing=False messages=('Action matched.',)>"",
    ""task_id"": ""task-61ea557561e441baa3f41234b8840cfd"",
    ""timestamp"": ""2023-07-07T23:48:27.515969""
  },
  {
    ""checker"": ""passes_action"",
    ""event"": ""Event matcher check result"",
    ""level"": ""info"",
    ""logger"": ""authentik.policies.event_matcher.models"",
    ""pid"": 10342,
    ""result"": ""<PolicyResult passing=False messages=('Action matched.',)>"",
    ""task_id"": ""task-61ea557561e441baa3f41234b8840cfd"",
    ""timestamp"": ""2023-07-07T23:48:27.526643""
  },
  {
    ""event"": ""Task finished"",
    ""level"": ""info"",
    ""logger"": ""authentik.root.celery"",
    ""pid"": 10342,
    ""state"": ""SUCCESS"",
    ""task_id"": ""61ea5575-61e4-41ba-a3f4-1234b8840cfd"",
    ""task_name"": ""event_trigger_handler"",
    ""timestamp"": ""2023-07-07T23:48:27.532823""
  },
  {
    ""checker"": ""passes_action"",
    ""event"": ""Event matcher check result"",
    ""level"": ""info"",
    ""logger"": ""authentik.policies.event_matcher.models"",
    ""pid"": 10343,
    ""result"": ""<PolicyResult passing=False messages=('Action matched.',)>"",
    ""task_id"": ""task-c0b5775423e4410a875a67b32aa8be9f"",
    ""timestamp"": ""2023-07-07T23:48:27.568338""
  },
  {
    ""event"": ""Task finished"",
    ""level"": ""info"",
    ""logger"": ""authentik.root.celery"",
    ""pid"": 10343,
    ""state"": ""SUCCESS"",
    ""task_id"": ""c0b57754-23e4-410a-875a-67b32aa8be9f"",
    ""task_name"": ""event_trigger_handler"",
    ""timestamp"": ""2023-07-07T23:48:27.574551""
  },
  {
    ""event"": ""Task started"",
    ""level"": ""info"",
    ""logger"": ""authentik.root.celery"",
    ""pid"": 10347,
    ""task_id"": ""eea0b27b-3cc6-4bbe-bd25-40ff0ee625e3"",
    ""task_name"": ""event_trigger_handler"",
    ""timestamp"": ""2023-07-07T23:48:28.575128""
  },
  {
    ""event"": ""Task started"",
    ""level"": ""info"",
    ""logger"": ""authentik.root.celery"",
    ""pid"": 10348,
    ""task_id"": ""41292260-c6dd-4124-a8bf-22a7d764d5d5"",
    ""task_name"": ""event_trigger_handler"",
    ""timestamp"": ""2023-07-07T23:48:28.575128""
  },
  {
    ""checker"": ""passes_action"",
    ""event"": ""Event matcher check result"",
    ""level"": ""info"",
    ""logger"": ""authentik.policies.event_matcher.models"",
    ""pid"": 10348,
    ""result"": ""<PolicyResult passing=False messages=('Action matched.',)>"",
    ""task_id"": ""task-41292260c6dd4124a8bf22a7d764d5d5"",
    ""timestamp"": ""2023-07-07T23:48:28.650010""
  },
  {
    ""checker"": ""passes_action"",
    ""event"": ""Event matcher check result"",
    ""level"": ""info"",
    ""logger"": ""authentik.policies.event_matcher.models"",
    ""pid"": 10347,
    ""result"": ""<PolicyResult passing=False messages=('Action matched.',)>"",
    ""task_id"": ""task-eea0b27b3cc64bbebd2540ff0ee625e3"",
    ""timestamp"": ""2023-07-07T23:48:28.650010""
  },
  {
    ""event"": ""Task finished"",
    ""level"": ""info"",
    ""logger"": ""authentik.root.celery"",
    ""pid"": 10347,
    ""state"": ""SUCCESS"",
    ""task_id"": ""eea0b27b-3cc6-4bbe-bd25-40ff0ee625e3"",
    ""task_name"": ""event_trigger_handler"",
    ""timestamp"": ""2023-07-07T23:48:28.657057""
  },
  {
    ""checker"": ""passes_action"",
    ""event"": ""Event matcher check result"",
    ""level"": ""info"",
    ""logger"": ""authentik.policies.event_matcher.models"",
    ""pid"": 10348,
    ""result"": ""<PolicyResult passing=False messages=('Action matched.',)>"",
    ""task_id"": ""task-41292260c6dd4124a8bf22a7d764d5d5"",
    ""timestamp"": ""2023-07-07T23:48:28.658633""
  },
  {
    ""event"": ""Task finished"",
    ""level"": ""info"",
    ""logger"": ""authentik.root.celery"",
    ""pid"": 10348,
    ""state"": ""SUCCESS"",
    ""task_id"": ""41292260-c6dd-4124-a8bf-22a7d764d5d5"",
    ""task_name"": ""event_trigger_handler"",
    ""timestamp"": ""2023-07-07T23:48:28.665930""
  }
]"
gewFCb72,New Reddit to Old Reddit bookmarklet,v1s,JavaScript,Friday 7th of July 2023 06:51:44 PM CDT,"javascript:(function() { window.location.href = window.location.href.replace(/^https?:\/\/(www\.)?(.*)/i, 'https://old.$2'); })();"
fuWesciz,LONGEST ANSWER WINS GET ANSWERS!!! (WIP),2AreYouMental110,Lua,Friday 7th of July 2023 05:19:42 PM CDT,"-- this is not super reliable, as some answers are from the mobile game, not the roblox version

local connectstuff = {}
print(""loading sources"")
local source1 = game:HttpGet(""https://tryhardguides.com/longest-answer-wins-roblox-answers/"")
print(""source loaded (1)"")
local source2 = game:HttpGet(""https://www.ggrecon.com/guides/roblox-longest-answer-wins-answers/"")
print(""source loaded (2)"")
local source3 = game:HttpGet(""https://www.puzzlegamemaster.com/longest-answer-wins-roblox-answers/"")
print(""source loaded (3)"")
-- decode into code!
local decodedsources = {}
local source
source = string.gsub(source3,""<[^>]*>"",""-"")
source = string.sub(source,string.find(source,""--Longest Answer--------"")+string.len(""--Longest Answer--------""),string.find(source,""Congratulations"")-5)
print(source)
local searchstring = ""%-""..""%-""..""%-""..""%-""
local searchstring2 = ""%-""..""%-""..""%-""..""%-""..""%-""..""%-""
local amounttofind = 0
for find in string.gmatch(source,searchstring) do
    amounttofind += 1
end

print(amounttofind)

for i = 1,amounttofind do
    local find = string.find(source,searchstring)
    if find then
        local question = string.sub(source,1,find-1)
        local questionpos = {1,find-1}
        local cutstr = string.sub(source,questionpos[2]+5)
        local answerpos = {1,string.find(cutstr,""%-"")-1}
        local answer = string.sub(cutstr,answerpos[1],answerpos[2])
        decodedsources[question] = answer
        source = string.sub(cutstr,answerpos[2]+7)
    end
end

for i,v in pairs(decodedsources) do
    print(i,v)
end

print(amounttofind)
-- extras
decodedsources[""sea animal""] = ""GREAT WHITE SHARK""

if not isfolder(""getstuff"") then
    makefolder(""getstuff"")
end


local gui = Instance.new(""ScreenGui"")
local mainframe = Instance.new(""Frame"")
local deletebutton = Instance.new(""TextButton"")
local questiontext = Instance.new(""TextBox"")
local answertext = Instance.new(""TextBox"")
local credits = Instance.new(""TextLabel"")

gui.Parent = game.CoreGui

mainframe.Position = UDim2.new(0.4,0,0.4)
mainframe.Size = UDim2.new(0.4,0,0.4,0)
mainframe.Active = true
mainframe.Draggable = true
mainframe.BackgroundColor3 = Color3.fromRGB(50,50,50)
mainframe.BorderColor3 = Color3.fromRGB(255,255,255)
mainframe.Parent = gui

credits.Size = UDim2.new(0.8,0,0.2,0)
credits.BackgroundColor3 = Color3.fromRGB(20,20,20)
credits.Text = ""Made By 2AreYouMental110""
credits.TextScaled = true
credits.BorderColor3 = Color3.fromRGB(255,255,255)
credits.TextColor3 = Color3.fromRGB(255,255,255)
credits.Parent = mainframe

function delete()
    gui:Destroy()
    for i,v in pairs(connectstuff) do
        v:Disconnect()
    end
end

deletebutton.Position = UDim2.new(0.8,0,0,0)
deletebutton.Size = UDim2.new(0.2,0,0.2,0)
deletebutton.BackgroundColor3 = Color3.fromRGB(255,0,0)
deletebutton.Text = ""X""
deletebutton.TextScaled = true
deletebutton.BorderColor3 = Color3.fromRGB(255,255,255)
deletebutton.TextColor3 = Color3.fromRGB(255,255,255)
deletebutton.Parent = mainframe
table.insert(connectstuff,deletebutton.MouseButton1Click:Connect(function()
    delete()
end))

questiontext.Position = UDim2.new(0.525,0,0.3,0)
questiontext.Size = UDim2.new(0.425,0,0.6,0)
questiontext.BackgroundColor3 = Color3.fromRGB(60,60,60)
questiontext.Text = """"
questiontext.TextScaled = true
questiontext.BorderColor3 = Color3.fromRGB(255,255,255)
questiontext.TextColor3 = Color3.fromRGB(255,255,255)
questiontext.PlaceholderText = ""Questions Go Here""
questiontext.Parent = mainframe

answertext.Position = UDim2.new(0.05,0,0.3,0)
answertext.Size = UDim2.new(0.425,0,0.6,0)
answertext.BackgroundColor3 = Color3.fromRGB(60,60,60)
answertext.Text = """"
answertext.TextScaled = true
answertext.BorderColor3 = Color3.fromRGB(255,255,255)
answertext.TextColor3 = Color3.fromRGB(255,255,255)
answertext.ClearTextOnFocus = false
answertext.PlaceholderText = ""Answers Go Here""
answertext.Parent = mainframe

table.insert(connectstuff,questiontext.FocusLost:Connect(function()
    local arg = questiontext.Text
    for i,v in pairs(decodedsources) do
        print(i,v,arg)
        if i:lower() == arg:lower() then
            print(i,v,arg)
            answertext.Text = v
            return
        elseif string.find(i:lower(),arg:lower()) then
            print(i,v,arg)
            answertext.Text = v
        end
    end
end))"
uzParHvy,Untitled,Zeinab_Hamdy,C++,Friday 7th of July 2023 05:12:46 PM CDT,"#include<bits/stdc++.h>
using namespace std; 
#define nl ""\n""
#define fi first
#define se second
#define pb push_back
#define ll long long
#define ull unsigned ll
#define RV  return void
#define inf 2000000000
#define MOD ((ll) 1e9 + 7)
#define sz(x) int(x.size())
#define all(v) v.begin(), v.end()
#define rall(v) v.rbegin(), v.rend()
#define Mini(x) *min_element(all(x))
#define Maxi(x) *max_element(all(x))
#define fixed(n) fixed << setprecision(n)
#define ceil(w, m) (((w) / (m)) + ((w) % (m) ? 1 : 0))
#define cin(v) for (auto&i:v) cin >> i;
#define cout(v) for (auto&i:v) cout << i << "" "";
#define clr(memo, x) memset(memo, x, sizeof memo)
#define updmin(a, b) a = min(a, b)
#define updmax(a, b) a = max(a, b)
#define vi vector < int >
#define vl vector < ll >
#define vc vector < char >
#define vs vector < string >
#define v2i vector < vector < int > > 
#define v2l vector < vector < int > > 
#define seti set < int > 
#define setl set < ll > 
#define mapii map < int , int > 
#define mapll map < ll , ll > 
#define mapli map < ll , int > 
#define mapci map < char , int >
#define mapsi map < string , int > 
#define pll pair < ll , ll >
#define pii pair < int , int >
#define range(l,r,x) for(int i=l ; i < r ; i+=x)
#define FastCode ios_base::sync_with_stdio(false); cin.tie(nullptr); cout.tie(nullptr);
vector < string > ternary= {""NO\n"" , ""YES\n""};
 
void  Zainab(){
            #ifndef ONLINE_JUDGE
              freopen(""input.txt"", ""r"", stdin);  
              freopen(""output.txt"", ""w"", stdout);
            #endif
}
 
 
/*================================  Prblem solution  ================================ */

int dx[] ={ -1 , -1 , -1 , 1 , 1 , 1 , 0 , 0 };
int dy[] ={0 , 1 , -1   , 0 , -1 , 1 , -1 , 1};



void myCode(){

int n , q;
cin >> n >> q;

map < int , vector < pair < int , int > > > mp;
vector < vector < bool > > vis(n+1 , vector < bool > (n+1 , 0));
while(q--){
    int l ,r , x;
    cin >> l >> r >> x;
    if(x){
        vis[l][r]=1;
        mp[x].pb({l,r});
    }
    else vis[l][r]=0;
   
   int cnt =0;
   for(auto& [f,s] : mp){
       for(auto& w : s) {
           if(vis[w.fi][w.se]){
                cnt++;
                break;
           }
       }
   }
   if(cnt > 2 ) {
       cout << ""NO\n"";
       continue;
   }
   
    bool enter=0;
    for(auto& [f,s] : mp){
        if(!sz(s)) continue;
        
        int l2 = s[0].fi , r2=s[0].se ;
        for(auto& w : s){
            if( vis[w.fi][w.se] and (abs(w.fi-l2) + abs(w.se - r2))%2){
                enter = 1;
                cout << ""NO\n"";
                break;
            }
        } if(enter) break;
    }
    if(enter) continue;
    
    cout << ""YES\n"";
}



}
 

 
int main(){
                                   FastCode ;
                                    Zainab() ;
 
    int testCase=1;
       //  cin >> testCase ;
      for(int i=1 ; i<= testCase ; i++)
        myCode();
        
    return 0;
}"
caRY0zdJ,Universo,Wilhem_Everitt_Cauer,Pascal,Friday 7th of July 2023 05:09:14 PM CDT,"{$N+}
{$G+}
{$F+}
program DNyquist;
uses dos, crt, mate, graficos, pcx256;

const
  Cescalax = 300;
  Cescalay = 300;
  Ccentrox = 400;
  Ccentroy = 300;
  CDimx = 800;
  CDimy = 600;

procedure Ejes3d (Origen : Coord2D; ang : coord3dr; ancho : word);
  var
  c3, c3r : Coord3dr;
  j : word;
begin

for j := 0 to ancho do
  begin
  c3.x := j;
  c3.y := 0;
  c3.z := 0;
  rotacion3d(@c3, @c3r,ang.x, ang.y, ang.z);
  dibuja3diso (ponerpixel,Origen,c3r,15);
  c3.x := 0;
  c3.y := j;
  c3.z := 0;
  rotacion3d(@c3, @c3r,ang.x, ang.y, ang.z);
  dibuja3diso (ponerpixel,Origen,c3r,15);
  c3.x := 0;
  c3.y := 0;
  c3.z := j;
  rotacion3d(@c3, @c3r,ang.x, ang.y, ang.z);
  dibuja3diso (Ponerpixel,Origen,c3r,15);
end;
end;

function plano(x,y,z : precision):precision;
  begin
  plano := 0;
end;

procedure linea(x0,y0,x1,y1, color:word);
  var
    m, n : precision;
    x,y : precision;
    i,j : word;
  begin
  if x0 > x1 then
   begin
   x0 := x0 xor x1;
   x1 := x0 xor x1;
   x0 := x0 xor x1;
  end;
  if y0 > y1 then
   begin
   y0 := y0 xor y1;
   y1 := y0 xor y1;
   y0 := y0 xor y1;
  end;

  {y := mx+n}


  if x1 <> x0 then
    begin
    m := (y1-y0)/(x1-x0);
    x := x0;
    n := y0;

    while x <= x1 do
      begin
      y := ((x-x0)*m+n);
      ponerpixel(round(x),round(y),color);
      x :=  x+1/m;
    end;
  end;

  if x1 = x0 then
    for i := y0 to y1 do
      begin

      ponerpixel(x0,i,color);
    end;
  if y1 = y0 then
    for i := x0 to x1 do
      begin
      ponerpixel(i,y0,color);
    end;
end;



procedure Fractal(c : complejo; iter : word; ppixel: procpixel; color: word);
  const
  Scero = 1e-5;
  Rcero = 1e-2;
  iw = 1e-2;
  wo = 0;
  wf = 1E4;
  var
    z: complejo;
    x, y, x0, y0 : word;
    i : word;
  begin
     i := 1;
     z := c;

     x0 := round(Ccentrox+z.a*Cescalax);
     y0 := round(Ccentroy+z.bi*Cescalay);

     while (i < iter)  do
       begin
       cmult(z,z,z);
       cmult(z,c,z);
       csin(z,z);
       cadd(z,c,z);
       x := round(Ccentrox+z.a*Cescalax);
       y := round(Ccentroy+z.bi*Cescalay);

       if (y <= CDimy) and ((x <= CDimx) and (round(Ccentrox+z.a*Cescalax) > 0))
         then begin
         ponerpixel(x,y,color);
       end;
       x0 := x;
       y0 := y;
       i := i+1;
     end;

end;

procedure ejes(x,y, cuantox, cuantoy: word);
  const
    CAncho  = 5;
    Canchop = 2;
  var i, j : integer;
begin

  for i:= x to cuantox do
    begin
    ponerpixel(x+i,y, 15);

    if ((abs(i) mod Cescalax) = 0) then

      for j := -Cancho to CAncho do
        begin
        if ((x+i) <= 800) and ((y+j)<= 600) and ((x+i) > 0) and ((y+j) > 0) then
        ponerpixel(x+i,y+j, 15);
      end
    else
      if ((abs(i) mod (Cescalax div 5)) = 0) then
            for j := -Canchop  to CAnchop do
        begin
        if ((x+i) <= 800) and ((y+j)<= 600) and ((x+i) > 0) and ((y+j) > 0)then
        ponerpixel(x+i,y+j, 15);
      end;
  end;

  for i:= y to cuantoy do
    begin
    ponerpixel(x,y+i, 15);

    if ((abs(i) mod Cescalay) = 0) then
      for j := Cancho to CAncho do
        begin
        if ((x+j) <= 800) and ((y+i)<= 600) and ((x+j) > 0) and ((y+i) > 0) then
        ponerpixel(x+j,y+i, 15);
      end
    else
      if ((abs(i) mod (Cescalay div 5)) = 0) then
            for j := -CAnchop  to CAnchop do
        begin
        if ((x+j) <= 800) and ((y+i)<= 600) and ((x+j) > 0) and ((y+i) > 0)then
        ponerpixel(x+j,y+i, 15);
      end;

  end;end;


var

  i,j,k,l, color : word;
  x : complejo;
  nfich : string[8];
  ngalax : precision;
begin
clrscr;
OffMatErr(OpNovalida);
OffMatErr(OpAnormal or DivCero);

Nfich := '';
clrscr;
writeln ('Meter nombre del fichero: ');
readln (Nfich);

modovideoext(v800x600x256);

for i := 0 to 7 do
  for j := 0 to 5 do
  begin
    for k := 1 to 3 do
     begin
     linea(i*100+25*k,j*100,i*100+25*k,(j+1)*100,20);
     linea(i*100,j*100+25*k,(i+1)*100,j*100+25*k,20);
    end;
  end;

for i := 0 to 7 do
  for j := 0 to 5 do
  begin
  linea(i*100,j*100,i*100,(j+1)*100,25);
  linea(i*100,j*100,(i+1)*100,j*100,25);
  end;
linea(1,599,800,599,23);
linea(799,1,799,600,23);





randomize;
while not keypressed do
  begin

  x.a := random(65535)/32767;
  x.bi := random(65535)/32767;
  color := random(254)+1;
  for k := 1 to 4 do
    begin
      case k of
       2: x.a := -x.a;
       3: x.bi := -x.bi;
       4: begin
          x.a := -x.a;
          x.bi := -x.bi;
          end;
       end;
  fractal(x,200,ponerpixel,color xor k);
  end;
end;





if Nfich <> '' then
  begin
  sound(3000);
  delay(500);
  nosound;
  writepcx256(Nfich+'.pcx',1,1,800,600);
  sound(3000);
  delay(500);
  nosound;
end;

readkey;
modovideo(3);
end."
qEhi0GZu,TreeChop,true_beef,Lua,Friday 7th of July 2023 05:02:01 PM CDT,"-- Uses Lightweight Json Library by rxi. Thanks dude.
-- https://github.com/rxi/json.lua
-- json.encode({ 1, 2, 3, { x = 10 } }) -- Returns '[1,2,3,{""x"":10}]'
-- json.decode('[1,2,3,{""x"":10}]') -- Returns { 1, 2, 3, { x = 10 } }
json = require(""json"")
turtleUtil = require(""TurtleMovementUtil"")

treeHeight = 0
pruneLeaves = false

local function TurnAndMine()
	turtleUtil.turnLeft()
	turtle.dig()
end

function ChopTree( desiredHeight )
	turtleUtil.initGlobals()
	turtleUtil.goToPos(vector.new(1, 0, 0))	
	for i=0, desiredHeight - 1 do
		TurnAndMine()
		TurnAndMine()
		TurnAndMine()
		TurnAndMine()
		turtleUtil.goToPos(vector.new(1, 0, i))		
	end
end


local function CheckReadNum(read)
	if(tonumber(read) == nil) then
		return false
	elseif(tonumber(read) < 100) then
		return true, read
	end
end

local function CheckReadYN(read)
	if(read == ""y"") then
		return true
	else
		return false
	end
end


local function BeginTreeChop()	
	print(""How high?"")
	local success, readData = CheckReadNum(read())
	if(success == false) then		
		print(""Sorry, too high. Less than 100 blocks."")		
	else
		treeHeight = readData
	end

	print(""Prune adjacent blocks?"")
	if(CheckReadYN(read())) then
		pruneLeaves = true
	end

	print(""Choping tree"")
	ChopTree(treeHeight)
end


BeginTreeChop()


"
aktTVqCt,Reading Battery Voltages with Averaging,JonD1988,Arduino,Friday 7th of July 2023 04:27:53 PM CDT,"#include <Wire.h> //Needed to Use ADS1115 ADC - See Reference 12
#include <ADS1115_lite.h> //Needed to Use ADS1115 ADC - See Reference 12
ADS1115_lite ads(ADS1115_DEFAULT_ADDRESS); //0x48 addr pin connected to GND. Needed to Use ADS1115 ADC - See Reference 12
long raw1 = 0, raw2 = 0; //Needed to Use ADS1115 ADC - See Reference 12
double resolution=0; //Needed to Use ADS1115 ADC - See Reference 12
int batt1Analog = 0, batt2Analog=0; //Analog readings from batt1Pin and batt2Pin and then actual battery voltages
float batt1V=0, batt2V=0; 
unsigned long previousMillis = 0;      // will store last time the battery voltages were read
const long interval = 10000;           // interval at which to read the battery voltage (milliseconds)
#define battCutOff 3.0 //Voltage to Cutoff Motors to Protect the Batteries
#define numReadsToAvg 3 //Number of Voltage Readings to Store and Take Average Of
float batt1VArray[numReadsToAvg]; //Array to store batt1V readings i.e. battery 1 voltages
float batt2VArray[numReadsToAvg]; //Array to store batt2V readings i.e. battery 2 voltages
int batt1VIndex = 0, batt2VIndex = 0; //Keeps track of the array indexes for the batt1VArray and batt2VArray
float batt1VAvg = 3.0, batt2VAvg = 3.0; //Initialize battery voltage reading averages to 3.0
float batt1VSum = 0.0, batt2VSum = 0.0; //Sums all the elements in the batt1VArray and the batt2VArray for use in the average calculations
int batt1VCount = 0, batt2VCount = 0; //Variable to keep track of the count of how many elements have been stored in the batt1VArray and batt2VArray - really only meant to be used initially before all elements of the arrays have been updated with non-zero values

void setup()
{ //start of void setup()
  ads_config(); //Needed to Use ADS1115 ADC - See Reference 12
} //end of void setup()

void loop()
{ //start of void loop()

unsigned long currentMillis = millis(); //Checks the current time

    if (currentMillis - previousMillis >= interval) //Check to see if it's time to read the battery voltages (if the difference between the current time and last time you read the battery voltages is bigger than the interval at which you want to read the battery voltages)
    { //Start of if (currentMillis - previousMillis >= interval)
        previousMillis = currentMillis; //save the last time you read the battery voltages before you read the battery voltages
        readBatts(); //Read the battery voltages
    } //End of if (currentMillis - previousMillis >= interval)

} //end of void loop()

void readBatts()
{ //Start of readBatts function definition
  raw1 = ads_read1(); //Reads A0 from ADS1115 - Reference 12
  resolution=4096.00/32752.00;
  delay(200);
  float result1=(raw1*resolution)/1000.00; //batt1 voltage + batt2 voltage
  raw2 = ads_read2(); //Reads A0 from ADS1115 - Reference 12
  delay(200);
  float result2=(raw2*resolution)/1000.00; //batt2 voltage alone
  batt1V = result1 - result2; //Assigns battery 1 voltage alone to batt1V variable
  batt1V = 11.03*batt1V;
  batt2V = result2; //Assigns result2 to the batt2V variable
  batt2V = 11.0*batt2V;
  
  batt1VArray[batt1VIndex] = batt1V; //Store the current batt1V value into the element of the batt1VArray that matches batt1VIndex
  batt2VArray[batt2VIndex] = batt2V; //Store the current batt2V value into the element of the batt2VArray that matches batt2VIndex
  batt1VIndex = (batt1VIndex + 1) % numReadsToAvg; //Increments batt1VIndex by 1 each time this line runs and the % numReadsToAvg means that the batt1VIndex will take on values from 0 up to but not including numReadsToAvg (i.e. 0, 1, 2, 0, 1, 2, etc. if numReadsToAvg = 3)
  batt2VIndex = (batt2VIndex + 1) % numReadsToAvg; //Increments batt2VIndex by 1 each time this line runs and the % numReadsToAvg means that the batt2VIndex will take on values from 0 up to but not including numReadsToAvg (i.e. 0, 1, 2, 0, 1, 2, etc. if numReadsToAvg = 3)
  
  //Perform the average calculation with non-zero elements of the batt1VArray and batt2VArray
  for(int i=0; i<numReadsToAvg; i++)
  { //Start of for loop to step through the elements in the batt1VArray
	  if(batt1VArray[i] != 0.0) //If the current value is non-zero
	  { //Start of if statement to check if the current element of the batt1VArray is non-zero
		  batt1VSum += batt1VArray[i]; //Add the current value to the running sum for the average calculation 
		  batt1VCount++; //Increment the counter to keep track of the current number of non-zero elements in the sum
	  } //End of if statement to check if the current element of the batt1VArray is non-zero
  } //end of for loop to step through the elements in the batt1VArray
  
  if (batt1VCount > 0 && batt1VCount < numReadsToAvg)
  {
	  batt1VAvg = batt1VSum / batt1VCount; //Calculates the average
  }
  //Without the following two lines of code batt1VSum and batt1VCount could increase without limit (as much as those variable types can hold) retaining impact from values beyond the current set of stored readings in the array and therefore wouldn't react to newer voltage readings after a while
  batt1VSum = 0.0; //After the sum is used in the calculation of the current batt1VAvg set it back to its initial value so that it isn't impacted by past readings. The sum is meant to be used for the current set of numReadsToAvg
  batt1VCount = 0; //After the count is used in the calculation of the current batt1VAvg set it back to its initial value so that it isn't impacted by past readings.  The count is meant to be used for the current set of numReadsToAvg

  for(int j=0; j<numReadsToAvg; j++)
  { //Start of for loop to step through the elements in the batt2VArray
	  if(batt2VArray[j] != 0.0) //If the current value is non-zero
	  { //Start of if statement to check if the current element of the batt2VArray is non-zero
		  batt2VSum += batt2VArray[j]; //Add the current value to the running sum for the average calculation 
		  batt2VCount++; //Increment the counter to keep track of the current number of non-zero elements in the sum
	  } //End of if statement to check if the current element of the batt2VArray is non-zero
  } //end of for loop to step through the elements in the batt2VArray
  
  if (batt2VCount > 0 && batt2VCount < numReadsToAvg)
  {
	  batt2VAvg = batt2VSum / batt2VCount; //Calculates the average
  }
  //Without the following two lines of code batt2VSum and batt2VCount could increase without limit (as much as those variable types can hold) retaining impact from values beyond the current set of stored readings in the array and therefore wouldn't react to newer voltage readings after a while
  batt2VSum = 0.0; //After the sum is used in the calculation of the current batt2VAvg set it back to its initial value so that it isn't impacted by past readings. The sum is meant to be used for the current set of numReadsToAvg
  batt2VCount = 0; //After the count is used in the calculation of the current batt2VAvg set it back to its initial value so that it isn't impacted by past readings.  The count is meant to be used for the current set of numReadsToAvg
  
  //This section of code sends the battery voltages to the Android app
  SerialBT.print(""|"");  //Delimeter separating values which the receiving app is programmed to recognize
  SerialBT.print(""W"");  //Delimeter separating values which the receiving app is programmed to recognize
  SerialBT.print(""|"");  //Delimeter separating values which the receiving app is programmed to recognize
  //SerialBT.print(batt1V);
  SerialBT.print(batt1VAvg);  
  SerialBT.print(""|"");  //Delimeter separating values which the receiving app is programmed to recognize
  SerialBT.print(""w"");  //Delimeter separating values which the receiving app is programmed to recognize

  SerialBT.print(""|"");  //Delimeter separating values which the receiving app is programmed to recognize
  SerialBT.print(""Z"");  //Delimeter separating values which the receiving app is programmed to recognize
  SerialBT.print(""|"");  //Delimeter separating values which the receiving app is programmed to recognize
  //SerialBT.print(batt2V);
  SerialBT.print(batt2VAvg);
  SerialBT.print(""|"");  //Delimeter separating values which the receiving app is programmed to recognize      
  SerialBT.print(""z"");  //Delimeter separating values which the receiving app is programmed to recognize

  //if (batt1V < battCutOff || batt2V < battCutOff) //If either battery drops below the cutoff voltage
  if (batt1VAvg < battCutOff || batt2VAvg < battCutOff) //If either battery drops below the cutoff voltage
  { //Start of if (batt1V < battCutOff || batt2V < battCutOff)
    stopVehicle(); //Stop Power to the Motors
    lightFState = 0; //Turns Off Front Lights
    lightBState = 0; //Turns Off Back Lights
    hornH(); //Turns horn on briefly
    delay(100);
    hornL();
   } //End of if (batt1V < battCutOff || batt2V < battCutOff)
  
} //End of readBatts function definition

void ads_config(){
  ads.setGain(ADS1115_REG_CONFIG_PGA_4_096V); // GAIN_ONE and resolution to ± 4.096V
  ads.setSampleRate(ADS1115_REG_CONFIG_DR_8SPS); // Set to the fastest MODE 860Samples per sec
}

int16_t ads_read1(){ 
  ads.setMux(ADS1115_REG_CONFIG_MUX_SINGLE_0);  // Single mode input on AIN0 (AIN0 - GND)
  ads.triggerConversion();  // Triggered mannually 
  return ads.getConversion();  // returns int16_t value
}

int16_t ads_read2(){ 
  ads.setMux(ADS1115_REG_CONFIG_MUX_SINGLE_1);  // Single mode input on AIN1 (AIN1 - GND)
  ads.triggerConversion();  // Triggered mannually 
  return ads.getConversion();  // returns int16_t value
}
//Reference 12- Reading Analog Voltages Using ADS1115 https://www.youtube.com/watch?v=u-1TRpLGH04"
3pfAcseJ,BWR - Changelog 7/7/23,SSilver,Diff,Friday 7th of July 2023 04:25:23 PM CDT,"Medieval
+ Restored health packs replacing ammo packs dropped on death
Making the mode consistent with its normal incarnation.

Conniver's Kunai
+ Removed cloak drain penalty
This downside seemed unnecessary given the existing downside post-stab to regulate frequent stabs, by punishing the spy trying to escape rather than continue stabbing.

Back Scatter
+ Increased accuracy bonus to 30% (was 20%)
Given its wide pellet distribution the prior version seemed a bit too punishing at longer range, so it was tightened slightly.

Revolvers
+ Fixed headshots dealing worse damage than bodyshots at far range
A quirk that came about in nullifying crits to give revolvers gradual spread recovery.

Huo-Long Heater
+ Increased explosion radius to 146 HU (was 120 HU)
Sharpened Volcano Fragment
+ Increased explosion radius to 146 HU (was 102 HU)
Iron Bomber
+ Increased proximity bomb blast radius to 102 HU (was 78 HU)
A slight buff to the SVF while also just generally correcting how distance was being calculated between players and radius effects."
HetN2y6s,Ficha2_Karen,AuraUtils,JSON,Friday 7th of July 2023 04:13:19 PM CDT,"{
  ""Ficha"": ""Treino 2"",
  ""FichaTreino"": [

    {
      ""Titulo"": ""Supino Inclinado"",
      ""Linha1"": ""4 Series"",
      ""Linha2"": ""10 Reps""
    },
    {
      ""Titulo"": ""Flexão"",
      ""Linha1"": "" 4 Series"",
      ""Linha2"": ""Falha""
    },
    {
      ""Titulo"": ""Ele. Lateral Cross"",
      ""Linha1"": ""4 Series"",
      ""Linha2"": ""10 Reps""
    },
    {
      ""Titulo"": ""Triceps Pulley"",
      ""Linha1"": "" 4 Series"",
      ""Linha2"": ""8 Reps""
    },
    {
      ""Titulo"": ""Triceps Banco"",
      ""Linha1"": "" 4 Series"",
      ""Linha2"": ""Falha""
    },
    {
      ""Titulo"": ""Burpee + Corda"",
      ""Linha1"": ""50 Burpee"",
      ""Linha2"": ""50 Corda""
    }
  ]
}"
dzrbfQjH,Ficha4_Lucas,AuraUtils,JSON,Friday 7th of July 2023 04:12:58 PM CDT,"{
  ""Ficha"": ""Treino 4"",
  ""FichaTreino"": [

    {
      ""Titulo"": ""Remada Alta Barra"",
      ""Linha1"": ""4 Serie"",
      ""Linha2"": ""10 Reps""
    },
    {
      ""Titulo"": ""Desenvolvimento Halter"",
      ""Linha1"": ""4 Serie"",
      ""Linha2"": ""10 Reps""
    },
    {
      ""Titulo"": ""Elevação Frontal Anilha"",
      ""Linha1"": ""4 Series"",
      ""Linha2"": ""8 Reps""
    },
    {
      ""Titulo"": ""Elevação Lateral Cross"",
      ""Linha1"": ""4 Series"",
      ""Linha2"": ""12 Reps""
    },
    {
      ""Titulo"": ""Encolhimento"",
      ""Linha1"": ""5 Series"",
      ""Linha2"": ""8 Reps""
    },
    {
      ""Titulo"": ""Corrida"",
      ""Linha1"": ""40 Min"",
      ""Linha2"": ""2 Alto 1 Baixo""
    }
  ]
}"
mQUxjvPU,CEOI '20 - Chess Rush (36pts),erek1e,C++,Friday 7th of July 2023 04:11:59 PM CDT,"#include <bits/stdc++.h>

using namespace std;

const int INF = 1e8;
const int BASE = 1e9 + 7;
int add(int x, int y) {
    x += y;
    if (x >= BASE) return x-BASE;
    return x;
}

int R, C;
bool sameDiagonal(int x1, int y1, int x2, int y2) {
    return x1-y1 == x2-y2 || x1+y1 == x2+y2;
}
bool sameColor(int x1, int y1, int x2, int y2) {
    return ((x1+y1)-(x2+y2)) % 2 == 0;
}
bool inBoard(int r, int c) {
    return r >= 1 && c >= 1 && r <= R && c <= C;
}
pair<int, int> diagonalIntersect(int x1, int y1, int x2, int y2) {
    // x + y = x1 + y1
    // x - y = x2 - y2
    // x = (x1 + y1 + x2 - y2) / 2
    // y = (x1 + y1 - x2 + y2) / 2
    return {(x1+y1+x2-y2)/2, (x1+y1-x2+y2)/2};
}

pair<int, int> downRight(int r, int c) {
    return {r+C-c, C};
}
pair<int, int> downLeft(int r, int c) {
    return {r+c-1, 1};
}

pair<int, int> combine(pair<int, int> a, pair<int, int> b) { // (moves, ways)
    if (a.first == b.first) return {a.first, add(a.second, b.second)};
    else if (a.first < b.first) return a;
    else return b;
}

// going right
pair<int, int> solveBishop(int c1, int cr) {
    vector<int> ways(2*C), moves(2*C, INF);
    ways[c1-1] = 1, moves[c1-1] = 1;
    for (int r = 2; r <= R; ++r) {
        vector<int> ways2(2*C), moves2(2*C, INF);

        auto can = [&](int pos, int dir, int w, int m) {
            if (0 <= pos && pos < C) {
                if (m < moves2[dir*C+pos]) moves2[dir*C+pos] = m, ways2[dir*C+pos] = w;
                else if (m == moves2[dir*C+pos]) ways2[dir*C+pos] = add(ways2[dir*C+pos], w);
            }
        };
        for (int i = 0; i < 2*C; ++i) {
            int c = i%C, dir = i/C;
            if (dir == 0) { // going right
                can(c+1, 0, ways[i], moves[i]);
                can(c-1, 1, ways[i], moves[i]+1);
            } else { // going left
                can(c+1, 0, ways[i], moves[i]+1);
                can(c-1, 1, ways[i], moves[i]);
            }
        }
        ways = ways2, moves = moves2;
    }
    return combine({moves[cr-1], ways[cr-1]}, {moves[cr-1+C], ways[cr-1+C]});
}

pair<int, int> solveKing(int c1, int cr) {
    vector<int> ways(C), moves(C, INF);
    ways[c1-1] = 1, moves[c1-1] = 0;
    for (int r = 2; r <= R; ++r) {
        vector<int> ways2(C), moves2(C, INF);

        auto can = [&](int pos, int w, int m) {
            if (0 <= pos && pos < C) {
                if (m < moves2[pos]) moves2[pos] = m, ways2[pos] = w;
                else if (m == moves2[pos]) ways2[pos] = add(ways2[pos], w);
            }
        };
        for (int c = 0; c < C; ++c) {
            can(c+1, ways[c], moves[c]+1);
            can(c-1, ways[c], moves[c]+1);
            can(c  , ways[c], moves[c]+1);
        }
        ways = ways2, moves = moves2;
    }
    return {moves[cr-1], ways[cr-1]};
}

int main() {
    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
    int Q; cin >> R >> C >> Q;
    while (Q--) {
        char t; int c1, cr;
        cin >> t >> c1 >> cr;
        if (t == 'P') {
            if (c1 == cr) cout << R-1 << "" 1\n"";
            else cout << ""0 0\n"";
        } else if (t == 'R') {
            if (c1 == cr) cout << ""1 1\n"";
            else cout << ""2 2\n"";
        } else if (t == 'Q') {
            if (c1 == cr || sameDiagonal(1, c1, R, cr)) cout << ""1 1\n"";
            else { // 2 moves
                int ways = 2 + 2; // Rook Rook, vertical Rook and Bishop (or vice versa)
                if (R == C && (c1 == 1 || c1 == C)) ++ways; // bishop + horizontal rook move
                if (R == C && (cr == 1 || cr == C)) ++ways; // horizontal rook move + bishop
                // both bishop moves:
                if (sameColor(1, c1, R, cr)) {
                    auto [x1, y1] = diagonalIntersect(1, c1, R, cr);
                    if (inBoard(x1, y1)) ++ways;
                    auto [x2, y2] = diagonalIntersect(R, cr, 1, c1);
                    if (inBoard(x2, y2)) ++ways;
                }
                cout << ""2 "" << ways << '\n';
            }
        } else if (t == 'B') {
            pair<int, int> a = solveBishop(c1, cr), b = solveBishop(C+1-c1, C+1-cr);
            auto [m, w] = combine(a, b);
            if (m == INF) cout << ""0 0\n"";
            else cout << m << ' ' << w << '\n';
        } else { // t == 'K'
            auto [m, w] = solveKing(c1, cr);
            if (m == INF) cout << ""0 0\n"";
            else cout << m << ' ' << w << '\n';
        }
    }
    return 0;
}"
WirkB0VQ,CEOI '20 - Spring cleaning,erek1e,C++,Friday 7th of July 2023 04:10:51 PM CDT,"#include <bits/stdc++.h>

using namespace std;

vector<vector<int>> g;

// Segment tree
class Node {
private:
    int even = 0, odd = 0;
    bool prop = false;
    Node * left, * right;
    void propagate(int l, int r) {
        int mid = (l + r) / 2;
        if (!left) left = new Node(), left->even = mid-l;
        if (!right) right = new Node(), right->even = r-mid;
        if (prop) {
            left->prop = !left->prop;
            swap(left->even, left->odd);
            right->prop = !right->prop;
            swap(right->even, right->odd);
            prop = false;
        }
    }
public:
    void rangeToggle(int l, int r, int ql, int qr) { // flips even and odd nodes in a range
        if (qr <= l || r <= ql) return;
        else if (ql <= l && r <= qr) {
            prop = !prop;
            swap(even, odd);
        } else {
            propagate(l, r);
            int mid = (l + r) / 2;
            left->rangeToggle(l, mid, ql, qr);
            right->rangeToggle(mid, r, ql, qr);
            even = left->even + right->even;
            odd = left->odd + right->odd;
        }
    }
    int rangeEven(int l, int r, int ql, int qr) { // counts number of even in a range
        if (qr <= l || r <= ql) return 0;
        else if (ql <= l && r <= qr) return even;
        else {
            propagate(l, r);
            int mid = (l + r) / 2;
            return left->rangeEven(l, mid, ql, qr) + right->rangeEven(mid, r, ql, qr);
        }
    }
};

// HLD
vector<int> hldIndex, head, subtree, par;
void getSubtree(int node, int parent = 0) {
    par[node] = parent;
    subtree[node] = 1;
    for (int child : g[node]) {
        if (child == parent) continue;
        getSubtree(child, node);
        subtree[node] += subtree[child];
    }
}
int nextAvailableIndex = 0;
void build(int node, int hd, int parent = 0) {
    hldIndex[node] = nextAvailableIndex++;
    head[node] = hd;

    if (g[node].size() == 1 && parent) return;
    int mx = 0;
    if (g[node][0] == parent) mx = 1;
    for (int i = mx+1; i < (int)g[node].size(); ++i) {
        if (g[node][i] == parent) continue;
        if (subtree[g[node][i]] > subtree[g[node][mx]]) mx = i;
    }
    // move mx to front
    while (mx) {
        swap(g[node][mx], g[node][mx-1]);
        --mx;
    }
    // continue dfs as usual
    build(g[node].front(), hd, node);
    for (size_t i = 1; i < g[node].size(); ++i) {
        if (g[node][i] != parent) build(g[node][i], g[node][i], node);
    }
}

int main() {
    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
    int n, q; cin >> n >> q;
    g.resize(1+n);
    for (int i = 1; i < n; ++i) {
        int u, v; cin >> u >> v;
        g[u].push_back(v);
        g[v].push_back(u);
    }

    int root = 1; // choose non-leaf root
    while (g[root].size() == 1) ++root;

    // build HLD
    subtree.resize(1+n), par.resize(1+n);
    getSubtree(root);
    hldIndex.resize(1+n), head.resize(1+n);
    build(root, root);
    

    Node * segRoot = new Node(); // segment tree for HLD
    auto toggleToRoot = [&](int a) { // toggle path from a to root
        while (a) {
            int first = hldIndex[head[a]], last = hldIndex[a]; // inclusive
            segRoot->rangeToggle(0, n, first, last+1); // toggle segtree range [first, last]
            a = par[head[a]];
        }
    };
    int originalLeaves = 0;
    for (int i = 1; i <= n; ++i) {
        if (g[i].size() == 1) {
            ++originalLeaves;
            toggleToRoot(i);
        }
    }
    
    while (q--) {
        int D; cin >> D;
        vector<int> a(D);
        for (int &x : a) cin >> x;

        int totalLeaves = originalLeaves + D;
        sort(a.begin(), a.end());
        vector<int> noLongerLeaves;
        for (size_t i = 0; i < a.size(); ++i) {
            if (g[a[i]].size() == 1 && (!i || a[i] != a[i-1])) {
                --totalLeaves;
                noLongerLeaves.push_back(a[i]);
            }
        }
        if (totalLeaves & 1) {
            cout << ""-1\n"";
            continue;
        }

        for (int &x : a) toggleToRoot(x);
        for (int &x : noLongerLeaves) toggleToRoot(x);

        int even = segRoot->rangeEven(0, n, 1, n); // query number of nodes that have an even number of leaves in their subtree
        cout << (n+D-1) + even << '\n'; // cost is 1 on every odd edge, 2 on every even edge

        for (int &x : a) toggleToRoot(x);
        for (int &x : noLongerLeaves) toggleToRoot(x);
    }
    return 0;
}"
YgPB5AHF,CEOI '20 - The Potion of Great Power,erek1e,C++,Friday 7th of July 2023 04:09:45 PM CDT,"#include <bits/stdc++.h>

using namespace std;

const int INF = 1e9;
const int K = 20; // 1 in K updates will be completely recorded

int main() {
    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
    int N, D, U, Q; cin >> N >> D >> U >> Q;

    vector<int> H(N);
    for (int &x : H) cin >> x;

    vector<vector<vector<int>>> records(N, {{}});
    vector<vector<pair<int, int>>> updates(N, {{0, -1}});
    // first is day. second is update: if negative, index of record, otherwise update

    // recordIndex is from 0 in this function
    auto buildState = [&](int a, int recordIndex, int lastUpdate) {
        int prevIndex = recordIndex*K;
        assert(updates[a][prevIndex].second < 0);
        assert(lastUpdate >= prevIndex && lastUpdate-prevIndex <= K); // equal to K when building next record

        vector<int> delta;
        for (size_t i = prevIndex+1; i <= lastUpdate; ++i) {
            int v = updates[a][i].second;
            delta.push_back(v);
        }
        sort(delta.begin(), delta.end());

        vector<pair<int, bool>> delta2;
        for (int i = 0; i < delta.size(); ++i) {
            if (i+1 < (int)delta.size() && delta[i] == delta[i+1]) ++i;
            else delta2.emplace_back(delta[i], false);
        }

        vector<int> result;
        for (int x : records[a][recordIndex]) {
            int id = lower_bound(delta2.begin(), delta2.end(), pair<int, bool>{x, false}) - delta2.begin();
            if (id < (int)delta2.size() && delta2[id].first == x) {
                assert(!delta2[id].second);
                delta2[id].second = true;
            } else result.push_back(x);
        }
        for (auto [x, removed] : delta2) {
            if (!removed) result.push_back(x);
        }
        return result;
    };

    auto upd = [&](int a, int b, int day) {
        if ((int)updates[a].size() % K == 0) {
            // store entire adjacency list of a once every k updates
            updates[a].emplace_back(day, b);
            vector<int> v = buildState(a, (int)records[a].size()-1, (int)updates[a].size()-1);
            updates[a].pop_back();
            records[a].push_back(v);

            updates[a].emplace_back(day, -(int)records[a].size());
        } else {
            // simply store update as toggle
            updates[a].emplace_back(day, b);
        }
    };

    for (int day = 1; day <= U; ++day) {
        int a, b; cin >> a >> b;
        upd(a, b, day);
        upd(b, a, day);
    }

    auto getFriends = [&](int a, int day) {
        int id = upper_bound(updates[a].begin(), updates[a].end(), pair<int, int>{day, INF}) - updates[a].begin();
        --id;
        int recordID = id / K; // at update recordID * K
        return buildState(a, recordID, id);
    };

    while (Q--) {
        int x, y, v; cin >> x >> y >> v;
        vector<int> a = getFriends(x, v), b = getFriends(y, v);
        // sort by H
        for (int &u : a) u = H[u];
        for (int &u : b) u = H[u];
        sort(a.begin(), a.end());
        sort(b.begin(), b.end());
        int minDist = INF;
        for (int i = 0, j = 0; i < (int)a.size(); ++i) { // j is smallest s.t. b[j] >= a[i]
            while (j < (int)b.size() && b[j] < a[i]) ++j;
            if (j) minDist = min(minDist, a[i] - b[j-1]);
            if (j < (int)b.size()) minDist = min(minDist, b[j] - a[i]);
        }
        cout << minDist << endl;
    }
    return 0;
}
"
jXE2gsxv,platform,magnetos,JavaScript,Friday 7th of July 2023 03:59:14 PM CDT,"/**
* @name PlatformIndicators
* @displayName PlatformIndicators
* @authorId 415849376598982656
* @invite gvA2ree
* @version 1.4.2
*/
/*@cc_on
@if (@_jscript)
     
    // Offer to self-install for clueless users that try to run this directly.
    var shell = WScript.CreateObject(""WScript.Shell"");
    var fs = new ActiveXObject(""Scripting.FileSystemObject"");
    var pathPlugins = shell.ExpandEnvironmentStrings(""%APPDATA%\BetterDiscord\plugins"");
    var pathSelf = WScript.ScriptFullName;
    // Put the user at ease by addressing them in the first person
    shell.Popup(""It looks like you""ve mistakenly tried to run me directly. \n(Don""t do that!)"", 0, ""I""m a plugin for BetterDiscord"", 0x30);
    if (fs.GetParentFolderName(pathSelf) === fs.GetAbsolutePathName(pathPlugins)) {
        shell.Popup(""I""m in the correct folder already."", 0, ""I""m already installed"", 0x40);
    } else if (!fs.FolderExists(pathPlugins)) {
        shell.Popup(""I can""t find the BetterDiscord plugins folder.\nAre you sure it""s even installed?"", 0, ""Can""t install myself"", 0x10);
    } else if (shell.Popup(""Should I copy myself to BetterDiscord""s plugins folder for you?"", 0, ""Do you need some help?"", 0x34) === 6) {
        fs.CopyFile(pathSelf, fs.BuildPath(pathPlugins, fs.GetFileName(pathSelf)), true);
        // Show the user where to put plugins in the future
        shell.Exec(""explorer "" + pathPlugins);
        shell.Popup(""I""m installed!"", 0, ""Successfully installed"", 0x40);
    }
    WScript.Quit();
@else@*/
 
module.exports = (() => {
    const config = {
        info: {
            name: ""PlatformIndicators"",
            authors: [
                {
                    name: ""Strencher"",
                    discord_id: ""415849376598982656"",
                    github_username: ""Strencher"",
                    twitter_username: ""Strencher3""
                }
            ],
            version: ""1.4.2"",
            description: ""Adds indicators for every platform that the user is using. Source code available on the repo in the 'src' folder."",
            github: ""https://github.com/Strencher/BetterDiscordStuff/blob/master/PlatformIndicators/APlatformIndicators.plugin.js"",
            github_raw: ""https://raw.githubusercontent.com/Strencher/BetterDiscordStuff/master/PlatformIndicators/APlatformIndicators.plugin.js""
        },
        changelog: [
            {
                title: ""v1.4.2"",
                type: ""fixed"",
                items: [
                    ""Fixed indicators not showing in user popout for new usernames."",
                ]
            },
        ],
        defaultConfig: [
            {
                type: ""switch"",
                name: ""Show in MemberList"",
                note: ""Shows the platform indicators in the memberlist"",
                id: ""showInMemberList"",
                value: true
            },
            {
                type: ""switch"",
                name: ""Show next to username"",
                note: ""Shows the platform indicators next the username in messages."",
                id: ""showInChat"",
                value: true
            },
            {
                type: ""switch"",
                name: ""Show in DMs List"",
                note: ""Shows the platform indicators in the dm list."",
                id: ""showInDmsList"",
                value: true
            },
            {
                type: ""switch"",
                name: ""Show next to discord tags"",
                note: ""Shows the platform indicators right next to the discord tag."",
                id: ""showInTags"",
                value: true
            },
            {
                type: ""switch"",
                name: ""Ignore Bots"",
                note: ""Ignores the status of bots which is always web anyways."",
                id: ""ignoreBots"",
                value: true
            },
            {
                type: ""category"",
                name: ""icons"",
                id: ""icons"",
                settings: [
                    {
                        type: ""switch"",
                        name: ""Web Icon"",
                        note: ""Show the Web icon."",
                        id: ""web"",
                        value: true
                    },
                    {
                        type: ""switch"",
                        name: ""Desktop Icon"",
                        note: ""Show the Desktop icon."",
                        id: ""desktop"",
                        value: true
                    },
                    {
                        type: ""switch"",
                        name: ""Mobile Icon"",
                        note: ""Show the Mobile icon."",
                        id: ""mobile"",
                        value: true
                    },
                    {
                        type: ""switch"",
                        name: ""Embedded Icon"",
                        note: ""Show the Embedded icon."",
                        id: ""embedded"",
                        value: true
                    }
                ]
            }
        ]
    };
    
    return !global.ZeresPluginLibrary ? class {
        constructor() {
            this._config = config;
        }
        getName() {return config.info.name;}
        getAuthor() {return config.info.authors.map(a => a.name).join("", "");}
        getDescription() {return config.info.description;}
        getVersion() {return config.info.version;}
        load() {
            BdApi.showConfirmationModal(""Library plugin is needed"", [`The library plugin needed for ${config.info.name} is missing. Please click Download Now to install it.`], {
                confirmText: ""Download"",
                cancelText: ""Cancel"",
                onConfirm: () => {
                    require(""request"").get(""https://rauenzi.github.io/BDPluginLibrary/release/0PluginLibrary.plugin.js"", async (error, response, body) => {
                        if (error)
                            return require(""electron"").shell.openExternal(""https://betterdiscord.net/ghdl?url=https://raw.githubusercontent.com/rauenzi/BDPluginLibrary/master/release/0PluginLibrary.plugin.js"");
                        await new Promise(r => require(""fs"").writeFile(require(""path"").join(BdApi.Plugins.folder, ""0PluginLibrary.plugin.js""), body, r));
                    });
                }
            });
        }
        start() {}
        stop() {}
    } : (([Plugin, Api]) => {
        const plugin = (Plugin, Api) => {
            const {DiscordClasses, DOMTools, Utilities, WebpackModules, PluginUtilities, ReactTools, DiscordModules: {LocaleManager: {Messages}, UserStatusStore, UserStore}} = Api;
            const Dispatcher = WebpackModules.getByProps(""dispatch"", ""register"");
            const LocalActivityStore = WebpackModules.getByProps(""getCustomStatusActivity"");
            const Flux = Object.assign({}, WebpackModules.getByProps(""Store"", ""connectStores""), WebpackModules.getByProps(""useStateFromStores""));
            const SessionsStore = WebpackModules.getByProps(""getSessions"", ""_dispatchToken"");
            const friendsRowClasses = WebpackModules.getByProps(""hovered"", ""discriminator"");
 
            const {DOM, Webpack, Webpack: {Filters}} = BdApi;
            const [ChatHeader, NameTag, MemberListItem, DirectMessage, NewUserName, {LayerClassName = """"} = {}] = Webpack.getBulk.apply(null, [
                Filters.byProps(""replyAvatar"", ""sizeEmoji""),
                Filters.byProps(""bot"", ""nameTag""),
                Filters.byProps(""wrappedName"", ""nameAndDecorators""),
                Filters.combine(Filters.byProps(""wrappedName"", ""nameAndDecorators""), m => !m.container),
                Filters.byProps(""discrimBase"", ""userTagUsernameBase""),
                Filters.byProps(""LayerClassName"")
            ].map(fn => ({filter: fn})));

            class StringUtils {
                static upperFirst(string) {return string.charAt(0).toUpperCase() + string.slice(1);}
                static getStatusText(key, status) {
                    return this.upperFirst(key) + "": "" + Messages[`STATUS_${(status == ""mobile"" ? ""mobile_online"" : status).toUpperCase()}`];
                }
            }

            const Settings = new class Settings extends Flux.Store {
                constructor() {super(Dispatcher, {});}
                _settings = PluginUtilities.loadSettings(config.info.name, {});
 
                get(key, def) {
                    return this._settings[key] ?? def;
                }
 
                set(key, value) {
                    this._settings[key] = value;
                    this.emitChange();
                }
            };

            const StoreWatcher = {
                _stores: [Settings, UserStatusStore, UserStore, SessionsStore],
                _listeners: new Set,
                onChange(callback) {
                    this._listeners.add(callback);
                },
                offChange(callback) {
                    this._listeners.add(callback);
                },
                _alertListeners() {
                    StoreWatcher._listeners.forEach(l => l());
                },
                _init() {
                    this._stores.forEach(store => store.addChangeListener(this._alertListeners));
                },
                _stop() {
                    this._stores.forEach(store => store.addChangeListener(this._alertListeners));
                }
            };

            const StatusColors = new Proxy({
                dnd: ""#ED4245"",
                idle: ""#FAA81A"",
                online: ""#3BA55D"",
                streaming: ""#593695"",
                offline: ""#747F8D""
            }, {
                get(target, key) {
                    return target[key] ?? target.offline;
                }
            });

            const isStreaming = () => LocalActivityStore.getActivities().some(e => e.type === 1);

            const getReactProps = (el, filter = _ => _) => {
                const instance = ReactTools.getReactInstance(el);

                for (let current = instance.return, i = 0; i > 10000 || current !== null; current = current?.return, i++) {
                    if (current?.pendingProps && filter(current.pendingProps)) return current.pendingProps;
                }

                return null;
            };

            // Taken from SolidJS' template function.
            function template(html, check, isSVG) {
                const t = document.createElement(""template"");
                t.innerHTML = html;
                let node = t.content.firstChild;
                if (isSVG)
                  node = node.firstChild;
                return node;
              }

            const createElement = (type, props, ...children) => {
                if (typeof type === ""function"") return type({...props, children: [].concat()})

                const node = document.createElement(type);

                for (const key of Object.keys(props)) {
                    if (key.indexOf(""on"") === 0) node.addEventListener(key.slice(2).toLowerCase(), props[key]);
                    else if (key === ""children"") {
                        node.append(...(Array.isArray(props[key]) ? props[key] : [].concat(props[key])));
                    } else {
                        node.setAttribute(key === ""className"" ? ""class"" : key, props[key]);
                    }
                }

                if (children.length) node.append(...children);

                return node;
            };

            class Tooltip {
                containerClassName = Utilities.className(""PI-tooltip"", ...[""tooltip"", ""tooltipTop"", ""tooltipPrimary""].map(c => DiscordClasses.Tooltips?.[c]?.value));
                pointerClassName = DiscordClasses.Tooltips?.tooltipPointer?.value;
                contentClassName = DiscordClasses.Tooltips?.tooltipContent?.value;

                constructor(target, {text, spacing}) {
                    this.target = target;
                    this.ref = null;
                    this.text = text;
                    this.spacing = spacing;
                    this.tooltip = createElement(""div"", {
                        className: this.containerClassName,
                        style: ""visibility: hidden;"",
                        children: [
                            createElement(""div"", {className: this.pointerClassName, style: ""left: calc(50% + 0px)""}),
                            createElement(""div"", {className: this.contentClassName}, text)
                        ]
                    });

                    target.addEventListener(""mouseenter"", () => {
                        this.show();    
                    });

                    target.addEventListener(""mouseleave"", () => {
                        this.hide();
                    });

                    this.tooltip._unmount = DOM.onRemoved(target, () => this.hide());
                }

                get container() {return document.querySelector(`.${LayerClassName} ~ .${LayerClassName}`);}

                checkOffset(x, y) {
                    if (y < 0) {
                        y = 0;
                    } else if (y > window.innerHeight) {
                        y = window.innerHeight;
                    }
            
                    if (x > window.innerWidth) {
                        x = window.innerWidth;
                    } else if (x < 0) {
                        x = 0;
                    }
            
                    return {x, y};
                }

                show() {
                    const tooltip = this.ref = this.tooltip.cloneNode(true);
                    this.container.appendChild(tooltip);

                    const targetRect = this.target.getBoundingClientRect();
                    const tooltipRect = tooltip.getBoundingClientRect();

                    let top = (targetRect.y - tooltipRect.height) - this.spacing;
                    let left = targetRect.x + (targetRect.width / 2) - (tooltipRect.width / 2);    

                    const position = this.checkOffset(left, top);

                    tooltip.style = `top: ${position.y}px; left: ${position.x}px;`;
                }

                hide() {
                    this.ref?.remove();
                }
            }

            class StatusIndicators {
                constructor(target, userId, type) {
                    this.userId = userId;
                    this.type = type;
                    this.ref = null;
                    this.target = target;
                    this._destroyed = false;

                    target._patched = true;

                    this.container = createElement(""div"", {
                        ""data-id"": userId,
                        className: Utilities.className(""PI-indicatorContainer"", ""PI-type_"" + type),
                    });

                    this._stopObserver = DOM.onRemoved(target, () => this.unmount());

                    StoreWatcher.onChange(this.handleChange);
                }

                unmount() {
                    this.ref?.remove();
                    this._stopObserver?.();
                    this._destroyed = true;
                    StoreWatcher.offChange(this.handleChange);
                    this.target._patched = false;
                }

                mount() {
                    if (this._destroyed) return false;

                    const res = this.render();
                    if (!res) this.ref?.remove();
                    else {
                        if (this.ref) {
                            this.ref.replaceWith(res);
                        } else {
                            this.target.appendChild(res);
                        }
                        
                        this.ref = res;
                    }
                }

                handleChange = () => {
                    if (this._destroyed) return false;

                    if (this.state && _.isEqual(this.state, this.getState())) return;

                    this.mount();
                }

                getState() {
                    const user = UserStore.getUser(this.userId);
                    return {
                        iconStates: Settings.get(""icons"", {}),
                        shouldShow: (() => {
                            const shownInArea = Settings.get(""showIn"" + this.type, true);
                            const isBot = Settings.get(""ignoreBots"", true) && (user?.bot ?? false);
        
                            return shownInArea && !isBot;
                        })(),
                        clients: (() => {
                            if (user?.id === UserStore.getCurrentUser()?.id) return SessionsStore.getSession() ? {
                                [SessionsStore.getSession().clientInfo.client]: isStreaming() ? ""streaming"" : SessionsStore.getSession().status
                            } : {};
         
                            return UserStatusStore.getState().clientStatuses[user?.id] ?? {};
                        })(),
                        user
                    };
                }

                render() {
                    const container = this.container.cloneNode(true);
                    const state = this.state = this.getState();

                    if (!Object.keys(state.clients).length || !state.shouldShow) return null;

                    container._unmount = this.unmount.bind(this);

                    container.append(...Object.entries(state.clients)
                        .filter(([key]) => (state.iconStates[key] ?? true) && Icons[key] != null)
                        .map(([key, status]) => {
                            const Icon = Icons[key];
                            return Icon({
                                text: StringUtils.getStatusText(key, status),
                                style: `color: ${StatusColors[status]};`,
                                width: 18,
                                height: 18,
                                ""data-status"": status
                            });
                        })
                    );

                    return container;
                }
            }

            const createIcon = ((Icon, defaultProps) => props => {
                const element = Icon.cloneNode(true);

                if (props.text) {
                    new Tooltip(element, {
                        text: props.text,
                        spacing: 8
                    });
                }

                for (const prop in Object.assign({}, defaultProps, props)) {
                    if (prop === ""text"") continue; 
                    element.setAttribute(prop, props[prop]);
                }

                return element;
            });

            const Icons = {
                mobile: createIcon(
                    template(`<svg class=""PI-icon_mobile"" width=""24"" height=""24"" transform=""scale(0.9)"" viewBox=""0 -2.5 32 44""><path fill=""currentColor"" d=""M 2.882812 0.246094 C 1.941406 0.550781 0.519531 2.007812 0.230469 2.953125 C 0.0585938 3.542969 0 7.234375 0 17.652344 L 0 31.554688 L 0.5 32.558594 C 1.117188 33.769531 2.152344 34.5625 3.519531 34.847656 C 4.210938 35 7.078125 35.058594 12.597656 35 C 20.441406 34.941406 20.691406 34.925781 21.441406 34.527344 C 22.347656 34.054688 23.078125 33.3125 23.578125 32.386719 C 23.921875 31.761719 23.941406 30.964844 24 18.085938 C 24.039062 8.503906 24 4.167969 23.847656 3.464844 C 23.558594 2.121094 22.75 1.097656 21.519531 0.492188 L 20.5 0 L 12.039062 0.0195312 C 6.402344 0.0390625 3.328125 0.113281 2.882812 0.246094 Z M 20.382812 14.582031 L 20.382812 22.917969 L 3.652344 22.917969 L 3.652344 6.25 L 20.382812 6.25 Z M 13.789062 27.539062 C 14.5 28.296875 14.597656 29.035156 14.132812 29.925781 C 13.308594 31.496094 10.671875 31.421875 9.902344 29.8125 C 9.539062 29.054688 9.539062 28.730469 9.902344 28.011719 C 10.691406 26.535156 12.632812 26.308594 13.789062 27.539062 Z M 13.789062 27.539062 ""></path></svg>`)
                ),
                web: createIcon(
                    template(`<svg class=""PI-icon_web"" width=""24"" height=""24"" viewBox=""0 -2.5 28 28""><path fill=""currentColor"" d=""M12 2C6.48 2 2 6.48 2 12C2 17.52 6.48 22 12 22C17.52 22 22 17.52 22 12C22 6.48 17.52 2 12 2ZM11 19.93C7.05 19.44 4 16.08 4 12C4 11.38 4.08 10.79 4.21 10.21L9 15V16C9 17.1 9.9 18 11 18V19.93ZM17.9 17.39C17.64 16.58 16.9 16 16 16H15V13C15 12.45 14.55 12 14 12H8V10H10C10.55 10 11 9.55 11 9V7H13C14.1 7 15 6.1 15 5V4.59C17.93 5.78 20 8.65 20 12C20 14.08 19.2 15.97 17.9 17.39Z""></path></svg>`)
                ),
                desktop: createIcon(
                    template(`<svg class=""PI-icon_desktop"" width=""24"" height=""24"" viewBox=""0 -2.5 28 28""><path fill=""currentColor"" d=""M4 2.5C2.897 2.5 2 3.397 2 4.5V15.5C2 16.604 2.897 17.5 4 17.5H11V19.5H7V21.5H17V19.5H13V17.5H20C21.103 17.5 22 16.604 22 15.5V4.5C22 3.397 21.103 2.5 20 2.5H4ZM20 4.5V13.5H4V4.5H20Z""></path></svg>`)
                ),
                embedded: createIcon(
                    template(`<svg class=""PI-icon_embedded"" width=""24"" height=""24"" viewBox=""0 -2.5 28 28""><path fill=""currentColor"" d=""M5.79335761,5 L18.2066424,5 C19.7805584,5 21.0868816,6.21634264 21.1990185,7.78625885 L21.8575059,17.0050826 C21.9307825,18.0309548 21.1585512,18.9219909 20.132679,18.9952675 C20.088523,18.9984215 20.0442685,19 20,19 C18.8245863,19 17.8000084,18.2000338 17.5149287,17.059715 L17,15 L7,15 L6.48507125,17.059715 C6.19999155,18.2000338 5.1754137,19 4,19 C2.97151413,19 2.13776159,18.1662475 2.13776159,17.1377616 C2.13776159,17.0934931 2.1393401,17.0492386 2.1424941,17.0050826 L2.80098151,7.78625885 C2.91311838,6.21634264 4.21944161,5 5.79335761,5 Z M14.5,10 C15.3284271,10 16,9.32842712 16,8.5 C16,7.67157288 15.3284271,7 14.5,7 C13.6715729,7 13,7.67157288 13,8.5 C13,9.32842712 13.6715729,10 14.5,10 Z M18.5,13 C19.3284271,13 20,12.3284271 20,11.5 C20,10.6715729 19.3284271,10 18.5,10 C17.6715729,10 17,10.6715729 17,11.5 C17,12.3284271 17.6715729,13 18.5,13 Z M6,9 L4,9 L4,11 L6,11 L6,13 L8,13 L8,11 L10,11 L10,9 L8,9 L8,7 L6,7 L6,9 Z""></path></svg>`)
                )
            };

            const ElementInjections = {
                [ChatHeader?.headerText ?? ""unknown""]: elements => {
                    for (const el of elements) {
                        if (el.getElementsByClassName(""PI-indicatorContainer"").length || el._patched) continue;

                        const user = getReactProps(el.parentElement, e => e?.message)?.message?.author;

                        if (user) {
                            new StatusIndicators(el, user.id, ""Chat"").mount();
                        }
                    }
                },
                ...Object.fromEntries([NameTag?.nameTag, NewUserName?.userTagWithNickname]
                    .filter(Boolean)
                    .map(className => [
                        className,
                        elements => {
                            for (const el of elements) {
                                if (el.getElementsByClassName(""PI-indicatorContainer"").length || el._patched) continue;
        
                                const user = getReactProps(el, e => e?.user)?.user;
                                if (user) {
                                    new StatusIndicators(el, user.id, ""Tags"").mount();
                                }
                            }
                        }
                    ])
                ),
                ...Object.fromEntries([MemberListItem?.nameAndDecorators, DirectMessage?.nameAndDecorators]
                    .filter(Boolean)
                    .map(className => [
                        className,
                        elements => {
                            for (const el of elements) {
                                if (el.getElementsByClassName(""PI-indicatorContainer"").length || el._patched) continue;
                                
                                const user = getReactProps(el, e => e?.user)?.user;

                                if (user) {
                                    new StatusIndicators(el, user.id, ""MemberList"").mount();
                                }
                            }
                        }
                    ])
                )
            };
 
            return class PlatformIndicators extends Plugin {
                getSettingsPanel() {
                    const panel = this.buildSettingsPanel();
 
                    // Very dirty
                    panel.addListener(() => {
                        Settings._settings = {...this.settings};
                        Settings.emitChange();
                    });
 
                    return panel.getElement();
                }
 
                css = /*css*/`
                    .PI-tooltip {
                        position: fixed;
                    }

                    .PI-indicatorContainer {
                        display: inline-flex;
                        vertical-align: bottom;
                        margin-bottom: 2px;
                        margin-left: 5px;
                    }
 
                    .PI-indicatorContainer svg {
                        margin-left: -2px;
                    }
 
                    .PI-indicatorContainer div:first-child svg {
                        margin-left: 2px;
                    }
 
                    .PI-container {
                        display: flex;
                    }

                    .PI-icon_mobile {
                        position: relative;
                        top: 1px;
                    }

                    .PI-indicatorContainer.PI-type_Chat {
                        margin-right: -6px;
                        vertical-align: top;
                    }

                    .${friendsRowClasses.userInfo} .PI-indicatorContainer > div {display: inline-flex;}
 
                    .${friendsRowClasses.userInfo} .${friendsRowClasses.discriminator} {
                        display: none;
                        visibility: visible;
                    }
 
                    .${friendsRowClasses.hovered} .${friendsRowClasses.discriminator} {display: block;}
                `;
 
                onStart() {
                    PluginUtilities.addStyle(config.info.name, this.css);
                    StoreWatcher._init();

                    for (const className in ElementInjections) {
                        const elements = Array.from(document.body.getElementsByClassName(className));

                        if (elements.length) {
                            ElementInjections[className](elements);
                        }
                    }
                }

                observer({addedNodes}) {
                    for (const added of addedNodes) {
                        if (added.nodeType === Node.TEXT_NODE) continue;

                        for (const className in ElementInjections) {
                            const elements = Array.from(added.getElementsByClassName(className));

                            if (elements.length) {
                                ElementInjections[className](elements);
                            }
                        }
                    }
                }

                onStop() {
                    StoreWatcher._stop();
                    StoreWatcher._listeners.clear();
                    PluginUtilities.removeStyle(config.info.name);
                    document.querySelectorAll("".PI-indicatorContainer"").forEach(el => el._unmount?.());
                    document.querySelectorAll("".PI-tooltip"").forEach(n => (n?._unmount?.(), n.remove()));
                }
            };
        };
        return plugin(Plugin, Api);
        //@ts-ignore
    })(global.ZeresPluginLibrary.buildPlugin(config));
})();
/*@end@*/
"
PxX0JH1w,./wp-content/themes/h-code/woocommerce/cart/cart-empty.php,danrancan,Bash,Friday 7th of July 2023 03:55:17 PM CDT,"<?php
/**
 * Empty cart page
 *
 * @package H-Code
 * @version 7.0.1
 */

defined( 'ABSPATH' ) || exit;

?>
<section>
	<div class=""container"">
		<div class=""row"">
			<?php wc_print_notices(); ?>
			<div class=""col-md-12 text-center"">
				<?php do_action( 'woocommerce_cart_is_empty' ); ?>

				<?php if ( wc_get_page_id( 'shop' ) > 0 ) : ?>
					<p class=""return-to-shop"">
						<a class=""button wc-backward highlight-button-dark btn-medium button btn<?php echo esc_attr( wc_wp_theme_get_element_class_name( 'button' ) ? ' ' . wc_wp_theme_get_element_class_name( 'button' ) : '' ); ?>"" href=""<?php echo esc_url( apply_filters( 'woocommerce_return_to_shop_redirect', wc_get_page_permalink( 'shop' ) ) ); ?>"">
							<?php
								/**
								 * Filter ""Return To Shop"" text.
								 *
								 * @since 4.6.0
								 * @param string $default_text Default text.
								 */
								echo esc_html( apply_filters( 'woocommerce_return_to_shop_text', __( 'Return to shop', 'H-Code' ) ) );
							?>
						</a>
					</p>
				<?php endif; ?>
			</div>
		</div>
	</div>
</section>"
wr7zq4H4,Untitled,veritas2022,JavaScript,Friday 7th of July 2023 03:06:44 PM CDT,"function createAssemblyLine() {
    return {
hasClima(myCar) {
    myCar.temp = 21;
    myCar.tempSettings = 21;
    myCar.adjustTemp = () => {
       myCar.temp < myCar.tempSettings ? myCar.temp++ : myCar.temp--
  };
},
hasAudio(myCar){
    myCar.currentTrack = null;
    myCar.nowPlaying = () => {
        if(myCar.currentTrack != null && myCar.currentTrack != undefined){
        console.log(`Now playing '${myCar.currentTrack.name}' by ${myCar.currentTrack.artist}`)
    }
}
},
hasParktronic(myCar){
        myCar.checkDistance = (distance) => {
if(distance < 0.1){
    console.log(""Beep! Beep! Beep!"");
}else if(distance >= 0.1 && distance < 0.25){
    console.log(""Beep! Beep!"");
}else if(distance>= 0.25 && distance < 0.5){
    console.log(""Beep!"");
}else{
    console.log('')
}
}
}
}};
const assemblyLine = createAssemblyLine();

const myCar = {
make: 'Toyota',
model: 'Avensis'
};

assemblyLine.hasClima(myCar);
console.log(myCar.temp);
myCar.tempSettings = 18;
myCar.adjustTemp();
console.log(myCar.temp);
console.log(myCar.tempSettings);
assemblyLine.hasAudio(myCar);

myCar.currentTrack = {
    name: null,
    artist: undefined
    // name: 'Never Gonna Give You Up',
    // artist: 'Rick Astley'
};

myCar.nowPlaying();
assemblyLine.hasParktronic(myCar);

myCar.checkDistance(0.4);

myCar.checkDistance(0.001);

console.log(myCar);"
rFB6fDWd,Camera Movement Script (FULL),P_YStudio,Lua,Friday 7th of July 2023 03:05:08 PM CDT,"game.Players.PlayerAdded:Connect(function(Player)
	
	local ValuesFolder = Instance.new(""Folder"", Player)
	ValuesFolder.Name = ""Values""
	
	local InteractingObject = Instance.new(""ObjectValue"", ValuesFolder)
	InteractingObject.Name = ""InteractingObject""
	
	local InteractingObjectType = Instance.new(""StringValue"", ValuesFolder)
	InteractingObjectType.Name = ""InteractingObjectType""
	
	local IsInteracting = Instance.new(""BoolValue"", ValuesFolder)
	IsInteracting.Name = ""IsInteracting""
	
	local KeyboardInput = Instance.new(""StringValue"", ValuesFolder)
	KeyboardInput.Name = ""KeyboardInput""
	
	local RLRotation = 0
	local UDRotation = 0
	
	local CameraCFrame = Instance.new(""CFrameValue"", ValuesFolder)
	CameraCFrame.Name = ""CameraCFrame""
	
	while wait(.05) do
		
		if IsInteracting.Value == true then
			
			
			if KeyboardInput.Value == tostring(Enum.KeyCode.C) then

				IsInteracting.Value = false
				Player.Character.HumanoidRootPart.Anchored = false
				InteractingObject.Value.ProximityPromptInstance.Value.Enabled = true
				Player.PlayerGui.InteractionGui.Camera.Visible = false
				
			end
			
			if InteractingObjectType.Value == ""Camera"" then
				
				if KeyboardInput.Value == tostring(Enum.KeyCode.E) then
					
					if math.max(-InteractingObject.Value.Configuration.RLRotationMax.Value, RLRotation) ~= -InteractingObject.Value.Configuration.RLRotationMax.Value then
						
						if InteractingObject.Value.Configuration.RLRotationNegative.Value == false then
							if InteractingObject.Value.Configuration.RLRotationAxis.Value == ""X"" then
								InteractingObject.Value:PivotTo(InteractingObject.Value:GetPivot() * CFrame.Angles(math.rad(-((math.max(1,InteractingObject.Value.FieldOfView.Value) / 70)*3)),0,0))
							elseif InteractingObject.Value.Configuration.RLRotationAxis.Value == ""Y"" then
								InteractingObject.Value:PivotTo(InteractingObject.Value:GetPivot() * CFrame.Angles(0,math.rad(-((math.max(1,InteractingObject.Value.FieldOfView.Value) / 70)*3)),0))
							elseif InteractingObject.Value.Configuration.RLRotationAxis.Value == ""Z"" then
								InteractingObject.Value:PivotTo(InteractingObject.Value:GetPivot() * CFrame.Angles(0,0,math.rad(-((math.max(1,InteractingObject.Value.FieldOfView.Value) / 70)*3))))
							end
						elseif InteractingObject.Value.Configuration.RLRotationNegative.Value == true then
							if InteractingObject.Value.Configuration.RLRotationAxis.Value == ""X"" then
								InteractingObject.Value:PivotTo(InteractingObject.Value:GetPivot() * CFrame.Angles(math.rad(((math.max(1,InteractingObject.Value.FieldOfView.Value) / 70)*3)),0,0))
							elseif InteractingObject.Value.Configuration.RLRotationAxis.Value == ""Y"" then
								InteractingObject.Value:PivotTo(InteractingObject.Value:GetPivot() * CFrame.Angles(0,math.rad(((math.max(1,InteractingObject.Value.FieldOfView.Value) / 70)*3)),0))
							elseif InteractingObject.Value.Configuration.RLRotationAxis.Value == ""Z"" then
								InteractingObject.Value:PivotTo(InteractingObject.Value:GetPivot() * CFrame.Angles(0,0,math.rad(((math.max(1,InteractingObject.Value.FieldOfView.Value) / 70)*3))))
							end
						end	
						RLRotation -= ((math.max(1,InteractingObject.Value.FieldOfView.Value) / 70)*3)
						
					end	
						
				elseif KeyboardInput.Value == tostring(Enum.KeyCode.Q) then
					
					if math.min(InteractingObject.Value.Configuration.RLRotationMax.Value, RLRotation) ~= InteractingObject.Value.Configuration.RLRotationMax.Value then
						
						if InteractingObject.Value.Configuration.RLRotationNegative.Value == false then
							if InteractingObject.Value.Configuration.RLRotationAxis.Value == ""X"" then
								InteractingObject.Value:PivotTo(InteractingObject.Value:GetPivot() * CFrame.Angles(math.rad(((math.max(1,InteractingObject.Value.FieldOfView.Value) / 70)*3)),0,0))
							elseif InteractingObject.Value.Configuration.RLRotationAxis.Value == ""Y"" then
								InteractingObject.Value:PivotTo(InteractingObject.Value:GetPivot() * CFrame.Angles(0,math.rad(((math.max(1,InteractingObject.Value.FieldOfView.Value) / 70)*3)),0))
							elseif InteractingObject.Value.Configuration.RLRotationAxis.Value == ""Z"" then
								InteractingObject.Value:PivotTo(InteractingObject.Value:GetPivot() * CFrame.Angles(0,0,math.rad(((math.max(1,InteractingObject.Value.FieldOfView.Value) / 70)*3))))
							end
						elseif InteractingObject.Value.Configuration.RLRotationNegative.Value == true then
							if InteractingObject.Value.Configuration.RLRotationAxis.Value == ""X"" then
								InteractingObject.Value:PivotTo(InteractingObject.Value:GetPivot() * CFrame.Angles(math.rad(-((math.max(1,InteractingObject.Value.FieldOfView.Value) / 70)*3)),0,0))
							elseif InteractingObject.Value.Configuration.RLRotationAxis.Value == ""Y"" then
								InteractingObject.Value:PivotTo(InteractingObject.Value:GetPivot() * CFrame.Angles(0,math.rad(-((math.max(1,InteractingObject.Value.FieldOfView.Value) / 70)*3)),0))
							elseif InteractingObject.Value.Configuration.RLRotationAxis.Value == ""Z"" then
								InteractingObject.Value:PivotTo(InteractingObject.Value:GetPivot() * CFrame.Angles(0,0,math.rad(-((math.max(1,InteractingObject.Value.FieldOfView.Value) / 70)*3))))
							end
						end	
						RLRotation += ((math.max(1,InteractingObject.Value.FieldOfView.Value) / 70)*3)
						
					end
					
				elseif KeyboardInput.Value == tostring(Enum.KeyCode.R) then
					
					if math.max(-InteractingObject.Value.Configuration.UDRotationMax.Value, UDRotation) ~= -InteractingObject.Value.Configuration.UDRotationMax.Value then
						
						if InteractingObject.Value.Configuration.UDRotationNegative.Value == false then
							if InteractingObject.Value.Configuration.UDRotationAxis.Value == ""X"" then
								InteractingObject.Value:PivotTo(InteractingObject.Value:GetPivot() * CFrame.Angles(math.rad(-((math.max(1,InteractingObject.Value.FieldOfView.Value) / 70)*3)),0,0))
							elseif InteractingObject.Value.Configuration.UDRotationAxis.Value == ""Y"" then
								InteractingObject.Value:PivotTo(InteractingObject.Value:GetPivot() * CFrame.Angles(0,math.rad(-((math.max(1,InteractingObject.Value.FieldOfView.Value) / 70)*3)),0))
							elseif InteractingObject.Value.Configuration.UDRotationAxis.Value == ""Z"" then
								InteractingObject.Value:PivotTo(InteractingObject.Value:GetPivot() * CFrame.Angles(0,0,math.rad(-((math.max(1,InteractingObject.Value.FieldOfView.Value) / 70)*3))))
							end
						elseif InteractingObject.Value.Configuration.UDRotationNegative.Value == true then
							if InteractingObject.Value.Configuration.UDRotationAxis.Value == ""X"" then
								InteractingObject.Value:PivotTo(InteractingObject.Value:GetPivot() * CFrame.Angles(math.rad(((math.max(1,InteractingObject.Value.FieldOfView.Value) / 70)*3)),0,0))
							elseif InteractingObject.Value.Configuration.UDRotationAxis.Value == ""Y"" then
								InteractingObject.Value:PivotTo(InteractingObject.Value:GetPivot() * CFrame.Angles(0,math.rad(((math.max(1,InteractingObject.Value.FieldOfView.Value) / 70)*3)),0))
							elseif InteractingObject.Value.Configuration.UDRotationAxis.Value == ""Z"" then
								InteractingObject.Value:PivotTo(InteractingObject.Value:GetPivot() * CFrame.Angles(0,0,math.rad(((math.max(1,InteractingObject.Value.FieldOfView.Value) / 70)*3))))
							end
						end	
						UDRotation -= ((math.max(1,InteractingObject.Value.FieldOfView.Value) / 70)*3)
						
					end
					
				elseif KeyboardInput.Value == tostring(Enum.KeyCode.F) then
					
					if math.min(InteractingObject.Value.Configuration.UDRotationMax.Value, UDRotation) ~= InteractingObject.Value.Configuration.UDRotationMax.Value then
						
						if InteractingObject.Value.Configuration.UDRotationNegative.Value == false then
							if InteractingObject.Value.Configuration.UDRotationAxis.Value == ""X"" then
								InteractingObject.Value:PivotTo(InteractingObject.Value:GetPivot() * CFrame.Angles(math.rad(((math.max(1,InteractingObject.Value.FieldOfView.Value) / 70)*3)),0,0))
							elseif InteractingObject.Value.Configuration.UDRotationAxis.Value == ""Y"" then
								InteractingObject.Value:PivotTo(InteractingObject.Value:GetPivot() * CFrame.Angles(0,math.rad(((math.max(1,InteractingObject.Value.FieldOfView.Value) / 70)*3)),0))
							elseif InteractingObject.Value.Configuration.UDRotationAxis.Value == ""Z"" then
								InteractingObject.Value:PivotTo(InteractingObject.Value:GetPivot() * CFrame.Angles(0,0,math.rad(((math.max(1,InteractingObject.Value.FieldOfView.Value) / 70)*3))))
							end
						elseif InteractingObject.Value.Configuration.UDRotationNegative.Value == true then
							if InteractingObject.Value.Configuration.UDRotationAxis.Value == ""X"" then
								InteractingObject.Value:PivotTo(InteractingObject.Value:GetPivot() * CFrame.Angles(math.rad(-((math.max(1,InteractingObject.Value.FieldOfView.Value) / 70)*3)),0,0))
							elseif InteractingObject.Value.Configuration.UDRotationAxis.Value == ""Y"" then
								InteractingObject.Value:PivotTo(InteractingObject.Value:GetPivot() * CFrame.Angles(0,math.rad(-((math.max(1,InteractingObject.Value.FieldOfView.Value) / 70)*3)),0))
							elseif InteractingObject.Value.Configuration.UDRotationAxis.Value == ""Z"" then
								InteractingObject.Value:PivotTo(InteractingObject.Value:GetPivot() * CFrame.Angles(0,0,math.rad(-((math.max(1,InteractingObject.Value.FieldOfView.Value) / 70)*3))))
							end
						end	
						UDRotation += ((math.max(1,InteractingObject.Value.FieldOfView.Value) / 70)*3)
						
					end
					
				elseif KeyboardInput.Value == tostring(Enum.KeyCode.U) then

					InteractingObject.Value.FieldOfView.Value = math.max(InteractingObject.Value.FieldOfView.Value - 5, 1)

				elseif KeyboardInput.Value == tostring(Enum.KeyCode.J) then

					InteractingObject.Value.FieldOfView.Value += 5
					
				elseif KeyboardInput.Value == tostring(Enum.KeyCode.T) then

					InteractingObject.Value:PivotTo(CameraCFrame.Value)
					RLRotation = 0
					UDRotation = 0
					
				elseif KeyboardInput.Value == tostring(Enum.KeyCode.W) then
					
					if InteractingObject.Value.Configuration.TripodCanMove.Value == true then
						InteractingObject.Value.Parent:PivotTo(InteractingObject.Value.Parent:GetPivot()*CFrame.new(InteractingObject.Value.LensPart.Value.CFrame.LookVector.X,0,InteractingObject.Value.LensPart.Value.CFrame.LookVector.Z))
					end
					
				elseif KeyboardInput.Value == tostring(Enum.KeyCode.A) then
					
					if InteractingObject.Value.Configuration.TripodCanMove.Value == true then
						InteractingObject.Value.Parent:PivotTo(InteractingObject.Value.Parent:GetPivot()*CFrame.new(-InteractingObject.Value.LensPart.Value.CFrame.RightVector.X,0,-InteractingObject.Value.LensPart.Value.CFrame.RightVector.Z))
					end
					
				elseif KeyboardInput.Value == tostring(Enum.KeyCode.S) then

					if InteractingObject.Value.Configuration.TripodCanMove.Value == true then
						InteractingObject.Value.Parent:PivotTo(InteractingObject.Value.Parent:GetPivot()*CFrame.new(-InteractingObject.Value.LensPart.Value.CFrame.LookVector.X,0,-InteractingObject.Value.LensPart.Value.CFrame.LookVector.Z))
					end
					
				elseif KeyboardInput.Value == tostring(Enum.KeyCode.D) then

					if InteractingObject.Value.Configuration.TripodCanMove.Value == true then
						InteractingObject.Value.Parent:PivotTo(InteractingObject.Value.Parent:GetPivot()*CFrame.new(InteractingObject.Value.LensPart.Value.CFrame.RightVector.X,0,InteractingObject.Value.LensPart.Value.CFrame.RightVector.Z))
					end

				end
				
			end
		
		end
	
	end
	
end)"
jg1ZLpfh,Camera Monitor Script,P_YStudio,Lua,Friday 7th of July 2023 03:03:55 PM CDT,"local VPF = script.Parent.ViewportFrame

local CamModel = script.Parent.CamModel
local Cam = Instance.new(""Camera"", VPF)
VPF.CurrentCamera = Cam
local FPS = 24

local CharactersFolder = Instance.new(""Folder"")
CharactersFolder.Name = ""Characters""
CharactersFolder.Parent = VPF

for _, Descendant in pairs(workspace:GetDescendants()) do

	if Descendant:IsA(""BasePart"") and Descendant.ClassName ~= ""Terrain"" and Descendant:FindFirstChild(""Humanoid"") == nil and Descendant:FindFirstAncestor(""Cam"") == nil then

		Descendant:Clone().Parent = VPF

	end

end

CamModel.Value.FieldOfView.Changed:Connect(function()
	
	Cam.FieldOfView = CamModel.Value.FieldOfView.Value
	
end)

while wait(1/FPS) do
	
	Cam.CFrame = CamModel.Value.LensPart.Value.CFrame
	Cam.FieldOfView = CamModel.Value.FieldOfView.Value
	
	CharactersFolder:ClearAllChildren()
	
	for _, Child in pairs(workspace:GetChildren()) do

		if Child:FindFirstChild(""Humanoid"") ~= nil then
			
			Child.Archivable = true
			Child:Clone().Parent = CharactersFolder
			
		end
		
	end
	
end"
QBsfNeWM,cftunnel-compose,techblog,YAML,Friday 7th of July 2023 03:01:38 PM CDT,"version: '3'

# service description
services:

  # cloudflare tunnel
  cloudflare-tunnel:
    image: cloudflare/cloudflared
    container_name: cloudflare-tunnel
    hostname: cloudflare-tunnel
    restart: unless-stopped
    network_mode: ""host""
    command: tunnel run
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./config/hosts:/etc/hosts
    environment:
      - ""TUNNEL_TOKEN=${CLOUDFLARE_TUNNEL_TOKEN}""
"
qkBttYpU,Untitled,Terror_nisse,mIRC,Friday 7th of July 2023 02:48:54 PM CDT,"12:09:53 Gateway     Error handling Dispatch (GUILD_AUDIT_LOG_ENTRY_CREATE):
Newtonsoft.Json.JsonSerializationException: Error converting value ""member"" to type 'Discord.PermissionTarget'. Path '[1].type'.
 ---> System.ArgumentException: Requested value 'member' was not found.
   at Newtonsoft.Json.Utilities.EnumUtils.ParseEnum(Type enumType, NamingStrategy namingStrategy, String value, Boolean disallowNumber)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)
   --- End of inner exception stack trace ---
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, Object existingValue, String id)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)
   at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)
   at Newtonsoft.Json.Linq.JToken.ToObject(Type objectType, JsonSerializer jsonSerializer)
   at Discord.Rest.AuditLogHelper.CreateAuditLogEntityInfo[T](AuditLogChange[] changes, BaseDiscordClient discord)
   at Discord.WebSocket.SocketChannelDeleteAuditLogData.Create(DiscordSocketClient discord, AuditLogEntry entry)
   at Discord.WebSocket.SocketAuditLogHelper.CreateData(DiscordSocketClient discord, AuditLogEntry entry)
   at Discord.WebSocket.SocketAuditLogEntry..ctor(DiscordSocketClient discord, AuditLogCreatedEvent model)
   at Discord.WebSocket.SocketAuditLogEntry.Create(DiscordSocketClient discord, AuditLogCreatedEvent model)
   at Discord.WebSocket.DiscordSocketClient.ProcessMessageAsync(GatewayOpCode opCode, Nullable`1 seq, String type, Object payload)
12:15:55 Gateway     Serializer Error:
Newtonsoft.Json.JsonSerializationException: Error converting value ""member"" to type 'Discord.PermissionTarget'. Path 'options.type'.
 ---> System.ArgumentException: Requested value 'member' was not found.
   at Newtonsoft.Json.Utilities.EnumUtils.ParseEnum(Type enumType, NamingStrategy namingStrategy, String value, Boolean disallowNumber)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)
   --- End of inner exception stack trace ---
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(JsonReader reader, Object value, CultureInfo culture, JsonContract contract, Type targetType)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, Object existingValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, Object target)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(Object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, String id)"
zUiMNCuM,Fig trees of Hatshepsut,leoanjos,C++,Friday 7th of July 2023 02:39:00 PM CDT,"#include <bits/stdc++.h>

using namespace std;

#define llong long long int

const int MAX = 1e6 + 5;

int phi[MAX];

struct SegmentTree {
private:
    struct Node {
        llong sum;
        int equal;

        Node(llong sum = 0LL, int equal = -1): sum(sum), equal(equal) {}

        Node operator +(Node other) {
            llong nsum = sum + other.sum;
            int nequal = equal == -1 || other.equal == -1 ? -1 : (equal != other.equal ? -1 : equal);
            return Node(nsum, nequal);
        }
    };

    int n;
    vector<int> a;
    vector<int> lazy;
    vector<Node> tree;

public:
    SegmentTree(int n, vector<int> &a) {
        this->n = n;
        this->a = a;

        lazy.assign(4 * n, -1);
        tree.resize(4 * n);
        build(1, 1, n);
    }

    void update(int l, int r, int v = -1) {
        update(1, 1, n, l, r, v);
    }

    llong query(int l, int r) {
        return query(1, 1, n, l, r);
    }

private:
    void build(int node, int l, int r) {
        if (l == r) tree[node] = Node(a[l], a[l]);
        else {
            int m = (l + r) / 2;
            build(2 * node, l, m);
            build(2 * node + 1, m + 1, r);
            tree[node] = tree[2 * node] + tree[2 * node + 1];
        }
    }

    void update_lazy(int node, int l, int r, int v) {
        tree[node].sum = (r - l + 1LL) * v;
        tree[node].equal = v;
        lazy[node] = v;
    }

    void push_down(int node, int l, int r) {
        if (lazy[node] == -1) return;

        int m = (l + r) / 2;
        update_lazy(2 * node, l, m, lazy[node]);
        update_lazy(2 * node + 1, m + 1, r, lazy[node]);
        lazy[node] = -1;
    }

    void update(int node, int l, int r, int ul, int ur, int v) {
        if (r < ul || l > ur) return;
        if (ul <= l && r <= ur) {
            if (v != -1) {
                update_lazy(node, l, r, v);
                return;
            }

            if (tree[node].equal != -1) {
                update_lazy(node, l, r, phi[tree[node].equal]);
                return;
            }
        }

        push_down(node, l, r);

        int m = (l + r) / 2;
        update(2 * node, l, m, ul, ur, v);
        update(2 * node + 1, m + 1, r, ul, ur, v);
        tree[node] = tree[2 * node] + tree[2 * node + 1];
    }

    llong query(int node, int l, int r, int ql, int qr) {
        if (r < ql || l > qr) return 0LL;
        if (ql <= l && r <= qr) return tree[node].sum;

        push_down(node, l, r);

        int m = (l + r) / 2;
        return query(2 * node, l, m, ql, qr) + query(2 * node + 1, m + 1, r, ql, qr);
    }
};

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);

    for (int i = 0; i < MAX; i++)
        phi[i] = i;

    for (int i = 2; i < MAX; i++)
        if (phi[i] == i)
            for (int j = i; j < MAX; j += i)
                phi[j] -= phi[j] / i;

    int n, q;
    cin >> n >> q;

    vector<int> a(n + 1);
    for (int i = 1; i <= n; i++)
        cin >> a[i];

    SegmentTree tree(n, a);
    while (q--) {
        int t, L, R;
        cin >> t >> L >> R;

        if (t == 1) tree.update(L, R);
        else if (t == 2) {
            int x; cin >> x;
            tree.update(L, R, x);
        }
        else {
            llong ans = tree.query(L, R);
            cout << ans << ""\n"";
        }
    }
}"
ku1AmErb,suporte-aluno-natanael-bonfim-jdev-outro,tadeuespindola,XML,Friday 7th of July 2023 02:18:59 PM CDT,"<build>
	<plugins>
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-war-plugin</artifactId>
			<version>3.3.1</version>
		</plugin>
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-compiler-plugin</artifactId>
			<version>3.7.0</version>
			<configuration>
				<source>8</source>
				<target>8</target>
			</configuration>
		</plugin>
	</plugins>
</build>"
iQprNq9V,suporte-aluno-natanael-bonfim-jdev,tadeuespindola,XML,Friday 7th of July 2023 02:17:30 PM CDT,"<dependency>
	<groupId>javax.xml.bind</groupId>
	<artifactId>jaxb-api</artifactId>
	<version>2.3.1</version>
</dependency>

<dependency>
	<groupId>com.sun.xml.bind</groupId>
	<artifactId>jaxb-core</artifactId>
	<version>2.3.0.1</version>
</dependency>

<dependency>
	<groupId>com.sun.xml.bind</groupId>
	<artifactId>jaxb-impl</artifactId>
	<version>2.3.2</version>
</dependency>"
mvbyt4r6,Nigerian scammers [7-7-1/2023],bombaires,Liberty BASIC,Friday 7th of July 2023 01:57:14 PM CDT,"<a href=""mailto:faisal_saeed009@proton.me"">faisal_saeed009@proton.me</a>
<a href=""mailto:interpolukoffice@gmail.com"">interpolukoffice@gmail.com</a>
<a href=""mailto:i.nte.rp.o.l.u.ko.ff.i.c.e@gmail.com"">i.nte.rp.o.l.u.ko.ff.i.c.e@gmail.com</a>
<a href=""mailto:interp.ol.uko.ff.ice@gmail.com"">interp.ol.uko.ff.ice@gmail.com</a>
<a href=""mailto:int.e.r.po.l.ukof.f.ic.e@gmail.com"">int.e.r.po.l.ukof.f.ic.e@gmail.com</a>
<a href=""mailto:inter.po.lu.k.off.i.c.e@gmail.com"">inter.po.lu.k.off.i.c.e@gmail.com</a>
<a href=""mailto:i.n.te.rpo.luko.f.f.i.ce@gmail.com"">i.n.te.rpo.luko.f.f.i.ce@gmail.com</a>
<a href=""mailto:i.nt.e.rpo.lu.k.off.ice@gmail.com"">i.nt.e.rpo.lu.k.off.ice@gmail.com</a>
<a href=""mailto:i.n.t.er.p.olu.k.offi.ce@gmail.com"">i.n.t.er.p.olu.k.offi.ce@gmail.com</a>
<a href=""mailto:in.t.er.po.l.uk.offi.ce@gmail.com"">in.t.er.po.l.uk.offi.ce@gmail.com</a>
<a href=""mailto:i.nte.rp.o.lu.ko.f.f.ice@gmail.com"">i.nte.rp.o.lu.ko.f.f.ice@gmail.com</a>
<a href=""mailto:i.nt.e.r.po.l.u.k.o.f.fi.ce@gmail.com"">i.nt.e.r.po.l.u.k.o.f.fi.ce@gmail.com</a>
<a href=""mailto:i.nt.e.rp.o.l.uk.offi.c.e@gmail.com"">i.nt.e.rp.o.l.uk.offi.c.e@gmail.com</a>
<a href=""mailto:i.n.terp.o.l.u.ko.ff.ic.e@gmail.com"">i.n.terp.o.l.u.ko.ff.ic.e@gmail.com</a>
<a href=""mailto:i.n.t.e.r.p.ol.u.k.o.f.fi.c.e@gmail.com"">i.n.t.e.r.p.ol.u.k.o.f.fi.c.e@gmail.com</a>
<a href=""mailto:in.t.e.r.poluko.ffi.ce@gmail.com"">in.t.e.r.poluko.ffi.ce@gmail.com</a>
<a href=""mailto:int.e.rp.ol.uko.ff.ice@gmail.com"">int.e.rp.ol.uko.ff.ice@gmail.com</a>
<a href=""mailto:int.erp.o.l.u.koffice@gmail.com"">int.erp.o.l.u.koffice@gmail.com</a>
<a href=""mailto:i.nt.er.p.olu.k.o.f.f.ice@gmail.com"">i.nt.er.p.olu.k.o.f.f.ice@gmail.com</a>
<a href=""mailto:i.nt.e.rp.o.l.uk.o.f.fi.c.e@gmail.com"">i.nt.e.rp.o.l.uk.o.f.fi.c.e@gmail.com</a>
<a href=""mailto:i.n.te.rp.olukoff.i.ce@gmail.com"">i.n.te.rp.olukoff.i.ce@gmail.com</a>
<a href=""mailto:in.t.e.rpo.lu.kof.f.ice@gmail.com"">in.t.e.rpo.lu.kof.f.ice@gmail.com</a>
<a href=""mailto:int.erpol.u.ko.ff.i.ce@gmail.com"">int.erpol.u.ko.ff.i.ce@gmail.com</a>
<a href=""mailto:i.nte.rpolukoffi.ce@gmail.com"">i.nte.rpolukoffi.ce@gmail.com</a>
<a href=""mailto:in.t.e.r.po.luk.o.f.fice@gmail.com"">in.t.e.r.po.luk.o.f.fice@gmail.com</a>
<a href=""mailto:i.nterp.o.luko.ffi.ce@gmail.com"">i.nterp.o.luko.ffi.ce@gmail.com</a>
<a href=""mailto:i.nt.e.r.p.olu.k.o.ff.ic.e@gmail.com"">i.nt.e.r.p.olu.k.o.ff.ic.e@gmail.com</a>
<a href=""mailto:int.e.rpo.l.ukof.f.i.c.e@gmail.com"">int.e.rpo.l.ukof.f.i.c.e@gmail.com</a>
<a href=""mailto:i.nter.po.l.u.k.of.f.ice@gmail.com"">i.nter.po.l.u.k.of.f.ice@gmail.com</a>
<a href=""mailto:inte.rpolu.k.o.ffi.c.e@gmail.com"">inte.rpolu.k.o.ffi.c.e@gmail.com</a>
<a href=""mailto:in.t.e.rp.o.lu.kof.fice@gmail.com"">in.t.e.rp.o.lu.kof.fice@gmail.com</a>
<a href=""mailto:i.n.t.er.po.luk.of.f.ic.e@gmail.com"">i.n.t.er.po.luk.of.f.ic.e@gmail.com</a>
<a href=""mailto:i.n.ter.p.o.lu.k.of.f.i.ce@gmail.com"">i.n.ter.p.o.lu.k.of.f.i.ce@gmail.com</a>
<a href=""mailto:i.nte.r.po.l.uk.o.f.fi.ce@gmail.com"">i.nte.r.po.l.uk.o.f.fi.ce@gmail.com</a>
<a href=""mailto:i.n.te.r.pol.u.ko.ffice@gmail.com"">i.n.te.r.pol.u.ko.ffice@gmail.com</a>
<a href=""mailto:in.ter.poluko.ffice@gmail.com"">in.ter.poluko.ffice@gmail.com</a>
<a href=""mailto:i.nt.e.rpol.uk.of.fic.e@gmail.com"">i.nt.e.rpol.uk.of.fic.e@gmail.com</a>
<a href=""mailto:in.t.e.r.po.luko.f.fice@gmail.com"">in.t.e.r.po.luko.f.fice@gmail.com</a>
<a href=""mailto:i.nt.er.pol.u.k.o.ff.ice@gmail.com"">i.nt.er.pol.u.k.o.ff.ice@gmail.com</a>
<a href=""mailto:in.te.r.po.l.uk.off.ic.e@gmail.com"">in.te.r.po.l.uk.off.ic.e@gmail.com</a>
<a href=""mailto:in.terp.oluk.o.ffic.e@gmail.com"">in.terp.oluk.o.ffic.e@gmail.com</a>
<a href=""mailto:in.t.e.r.p.o.l.uko.ff.i.c.e@gmail.com"">in.t.e.r.p.o.l.uko.ff.i.c.e@gmail.com</a>
<a href=""mailto:in.t.erp.o.lu.ko.ffic.e@gmail.com"">in.t.erp.o.lu.ko.ffic.e@gmail.com</a>
<a href=""mailto:interp.o.l.u.k.o.ffi.c.e@gmail.com"">interp.o.l.u.k.o.ffi.c.e@gmail.com</a>
<a href=""mailto:in.te.r.p.o.l.uko.ff.ice@gmail.com"">in.te.r.p.o.l.uko.ff.ice@gmail.com</a>
<a href=""mailto:i.n.te.r.po.l.u.k.of.f.i.ce@gmail.com"">i.n.te.r.po.l.u.k.of.f.i.ce@gmail.com</a>
<a href=""mailto:int.e.rpolu.k.of.fice@gmail.com"">int.e.rpolu.k.of.fice@gmail.com</a>
<a href=""mailto:in.ter.p.o.lu.k.o.ffi.ce@gmail.com"">in.ter.p.o.lu.k.o.ffi.ce@gmail.com</a>
<a href=""mailto:in.t.e.r.po.l.u.ko.f.f.ice@gmail.com"">in.t.e.r.po.l.u.ko.f.f.ice@gmail.com</a>
<a href=""mailto:in.t.e.r.pol.u.kof.fi.c.e@gmail.com"">in.t.e.r.pol.u.kof.fi.c.e@gmail.com</a>
<a href=""mailto:int.erpo.l.ukoff.i.ce@gmail.com"">int.erpo.l.ukoff.i.ce@gmail.com</a>
<a href=""mailto:i.nte.r.p.olu.ko.ffi.c.e@gmail.com"">i.nte.r.p.olu.ko.ffi.c.e@gmail.com</a>
<a href=""mailto:int.e.rpo.l.u.ko.f.f.ic.e@gmail.com"">int.e.rpo.l.u.ko.f.f.ic.e@gmail.com</a>
<a href=""mailto:i.nt.e.r.po.lu.ko.f.f.ice@gmail.com"">i.nt.e.r.po.lu.ko.f.f.ice@gmail.com</a>
<a href=""mailto:in.t.e.rpo.l.u.k.off.i.ce@gmail.com"">in.t.e.rpo.l.u.k.off.i.ce@gmail.com</a>
<a href=""mailto:inte.rp.oluk.o.ff.i.ce@gmail.com"">inte.rp.oluk.o.ff.i.ce@gmail.com</a>
<a href=""mailto:inte.r.polukof.fi.c.e@gmail.com"">inte.r.polukof.fi.c.e@gmail.com</a>
<a href=""mailto:i.n.t.e.rp.o.l.u.k.o.ff.i.c.e@gmail.com"">i.n.t.e.rp.o.l.u.k.o.ff.i.c.e@gmail.com</a>
<a href=""mailto:i.nt.erp.o.luk.off.i.c.e@gmail.com"">i.nt.erp.o.luk.off.i.c.e@gmail.com</a>
<a href=""mailto:int.e.rpoluk.o.f.f.i.c.e@gmail.com"">int.e.rpoluk.o.f.f.i.c.e@gmail.com</a>
<a href=""mailto:in.t.er.pol.uko.f.f.i.c.e@gmail.com"">in.t.er.pol.uko.f.f.i.c.e@gmail.com</a>
<a href=""mailto:inter.p.olu.ko.ff.i.c.e@gmail.com"">inter.p.olu.ko.ff.i.c.e@gmail.com</a>
<a href=""mailto:i.n.t.e.rpo.l.u.kof.f.i.c.e@gmail.com"">i.n.t.e.rpo.l.u.kof.f.i.c.e@gmail.com</a>
<a href=""mailto:i.n.terpol.uk.o.ffi.c.e@gmail.com"">i.n.terpol.uk.o.ffi.c.e@gmail.com</a>
<a href=""mailto:i.nt.er.p.o.l.uko.f.f.ic.e@gmail.com"">i.nt.er.p.o.l.uko.f.f.ic.e@gmail.com</a>
<a href=""mailto:i.nte.rpo.l.u.k.offic.e@gmail.com"">i.nte.rpo.l.u.k.offic.e@gmail.com</a>
<a href=""mailto:in.te.r.poluk.of.f.ic.e@gmail.com"">in.te.r.poluk.of.f.ic.e@gmail.com</a>
<a href=""mailto:i.nt.e.rpoluk.o.f.f.i.ce@gmail.com"">i.nt.e.rpoluk.o.f.f.i.ce@gmail.com</a>
<a href=""mailto:in.t.erp.olu.koffi.c.e@gmail.com"">in.t.erp.olu.koffi.c.e@gmail.com</a>
<a href=""mailto:i.nt.e.r.p.o.l.uk.offi.c.e@gmail.com"">i.nt.e.r.p.o.l.uk.offi.c.e@gmail.com</a>
<a href=""mailto:i.nt.er.p.ol.u.k.o.f.f.i.c.e@gmail.com"">i.nt.er.p.ol.u.k.o.f.f.i.c.e@gmail.com</a>
<a href=""mailto:int.erp.o.l.u.k.off.ic.e@gmail.com"">int.erp.o.l.u.k.off.ic.e@gmail.com</a>
<a href=""mailto:i.nt.er.pol.uko.f.f.i.ce@gmail.com"">i.nt.er.pol.uko.f.f.i.ce@gmail.com</a>
<a href=""mailto:i.nt.er.polu.ko.f.fi.c.e@gmail.com"">i.nt.er.polu.ko.f.fi.c.e@gmail.com</a>
<a href=""mailto:i.nterpoluko.ffi.ce@gmail.com"">i.nterpoluko.ffi.ce@gmail.com</a>
<a href=""mailto:in.t.erp.olukoff.ic.e@gmail.com"">in.t.erp.olukoff.ic.e@gmail.com</a>
<a href=""mailto:in.te.r.po.luk.of.fi.c.e@gmail.com"">in.te.r.po.luk.of.fi.c.e@gmail.com</a>
<a href=""mailto:int.e.r.po.luk.of.fi.c.e@gmail.com"">int.e.r.po.luk.of.fi.c.e@gmail.com</a>
<a href=""mailto:i.nter.p.o.l.u.k.of.f.ice@gmail.com"">i.nter.p.o.l.u.k.of.f.ice@gmail.com</a>
<a href=""mailto:inte.rp.olu.kof.fice@gmail.com"">inte.rp.olu.kof.fice@gmail.com</a>
<a href=""mailto:i.nt.erpol.ukof.fi.ce@gmail.com"">i.nt.erpol.ukof.fi.ce@gmail.com</a>
<a href=""mailto:i.n.te.rp.o.lu.k.o.ff.ice@gmail.com"">i.n.te.rp.o.lu.k.o.ff.ice@gmail.com</a>
<a href=""mailto:int.e.rp.ol.u.k.o.ffi.ce@gmail.com"">int.e.rp.ol.u.k.o.ffi.ce@gmail.com</a>
<a href=""mailto:int.e.r.pol.u.ko.ffice@gmail.com"">int.e.r.pol.u.ko.ffice@gmail.com</a>
<a href=""mailto:i.nterp.o.lukof.f.ice@gmail.com"">i.nterp.o.lukof.f.ice@gmail.com</a>
<a href=""mailto:int.er.po.luko.f.f.ic.e@gmail.com"">int.er.po.luko.f.f.ic.e@gmail.com</a>
<a href=""mailto:i.nt.erp.ol.u.koff.ic.e@gmail.com"">i.nt.erp.ol.u.koff.ic.e@gmail.com</a>
<a href=""mailto:inter.p.oluk.o.f.fi.c.e@gmail.com"">inter.p.oluk.o.f.fi.c.e@gmail.com</a>
<a href=""mailto:in.t.er.pol.u.k.o.ffice@gmail.com"">in.t.er.pol.u.k.o.ffice@gmail.com</a>
<a href=""mailto:i.nt.e.r.p.olu.k.off.ice@gmail.com"">i.nt.e.r.p.olu.k.off.ice@gmail.com</a>
<a href=""mailto:inte.rp.olukoff.ice@gmail.com"">inte.rp.olukoff.ice@gmail.com</a>
<a href=""mailto:int.e.rpo.lu.k.offi.c.e@gmail.com"">int.e.rpo.lu.k.offi.c.e@gmail.com</a>
<a href=""mailto:inte.rpolu.ko.ffi.c.e@gmail.com"">inte.rpolu.ko.ffi.c.e@gmail.com</a>
<a href=""mailto:i.nt.erp.ol.u.k.off.i.c.e@gmail.com"">i.nt.erp.ol.u.k.off.i.c.e@gmail.com</a>
<a href=""mailto:i.n.t.e.r.p.o.lukof.f.i.ce@gmail.com"">i.n.t.e.r.p.o.lukof.f.i.ce@gmail.com</a>
<a href=""mailto:i.n.t.er.p.olu.ko.f.fi.ce@gmail.com"">i.n.t.er.p.olu.ko.f.fi.ce@gmail.com</a>
<a href=""mailto:in.t.erp.ol.uk.o.f.fi.c.e@gmail.com"">in.t.erp.ol.uk.o.f.fi.c.e@gmail.com</a>
<a href=""mailto:in.te.rpolu.koff.i.ce@gmail.com"">in.te.rpolu.koff.i.ce@gmail.com</a>
<a href=""mailto:in.t.erp.o.luko.f.f.ice@gmail.com"">in.t.erp.o.luko.f.f.ice@gmail.com</a>
<a href=""mailto:int.e.r.p.o.l.u.k.of.fi.c.e@gmail.com"">int.e.r.p.o.l.u.k.of.fi.c.e@gmail.com</a>
<a href=""mailto:inter.p.o.luk.o.ffic.e@gmail.com"">inter.p.o.luk.o.ffic.e@gmail.com</a>
<a href=""mailto:i.nte.r.po.l.uk.o.f.f.ice@gmail.com"">i.nte.r.po.l.uk.o.f.f.ice@gmail.com</a>
<a href=""mailto:in.t.e.rpo.luk.offi.c.e@gmail.com"">in.t.e.rpo.luk.offi.c.e@gmail.com</a>
<a href=""mailto:int.e.rpo.l.uko.ffice@gmail.com"">int.e.rpo.l.uko.ffice@gmail.com</a>
<a href=""mailto:i.n.te.rpo.lukof.fice@gmail.com"">i.n.te.rpo.lukof.fice@gmail.com</a>
<a href=""mailto:i.n.ter.p.ol.ukof.f.ice@gmail.com"">i.n.ter.p.ol.ukof.f.ice@gmail.com</a>
<a href=""mailto:in.t.erpol.uko.f.fi.ce@gmail.com"">in.t.erpol.uko.f.fi.ce@gmail.com</a>
<a href=""mailto:in.te.r.p.ol.uk.offi.ce@gmail.com"">in.te.r.p.ol.uk.offi.ce@gmail.com</a>
<a href=""mailto:i.n.t.erp.ol.u.k.o.ff.i.c.e@gmail.com"">i.n.t.erp.ol.u.k.o.ff.i.c.e@gmail.com</a>
<a href=""mailto:in.terpol.u.k.offic.e@gmail.com"">in.terpol.u.k.offic.e@gmail.com</a>
<a href=""mailto:in.t.er.po.luko.f.f.ice@gmail.com"">in.t.er.po.luko.f.f.ice@gmail.com</a>
<a href=""mailto:in.te.r.pol.u.k.o.ffi.c.e@gmail.com"">in.te.r.pol.u.k.o.ffi.c.e@gmail.com</a>
<a href=""mailto:i.nter.polu.ko.f.fic.e@gmail.com"">i.nter.polu.ko.f.fic.e@gmail.com</a>
<a href=""mailto:in.t.e.rp.o.luk.of.f.i.ce@gmail.com"">in.t.e.rp.o.luk.of.f.i.ce@gmail.com</a>
<a href=""mailto:int.e.rp.o.lu.koffic.e@gmail.com"">int.e.rp.o.lu.koffic.e@gmail.com</a>
<a href=""mailto:inte.r.p.o.lu.k.o.f.f.ice@gmail.com"">inte.r.p.o.lu.k.o.f.f.ice@gmail.com</a>
<a href=""mailto:i.nterpol.ukof.fi.c.e@gmail.com"">i.nterpol.ukof.fi.c.e@gmail.com</a>
<a href=""mailto:inter.po.l.ukof.f.i.ce@gmail.com"">inter.po.l.ukof.f.i.ce@gmail.com</a>
<a href=""mailto:inte.r.pol.u.koffi.ce@gmail.com"">inte.r.pol.u.koffi.ce@gmail.com</a>
<a href=""mailto:inte.r.p.o.l.u.k.of.f.ic.e@gmail.com"">inte.r.p.o.l.u.k.of.f.ic.e@gmail.com</a>
<a href=""mailto:int.e.rp.o.luko.f.fice@gmail.com"">int.e.rp.o.luko.f.fice@gmail.com</a>
<a href=""mailto:i.nt.er.po.lu.kof.fice@gmail.com"">i.nt.er.po.lu.kof.fice@gmail.com</a>
<a href=""mailto:i.nter.po.lu.k.of.f.ice@gmail.com"">i.nter.po.lu.k.of.f.ice@gmail.com</a>
<a href=""mailto:in.terpolu.k.off.ic.e@gmail.com"">in.terpolu.k.off.ic.e@gmail.com</a>
<a href=""mailto:interpo.lu.ko.f.fic.e@gmail.com"">interpo.lu.ko.f.fic.e@gmail.com</a>
<a href=""mailto:int.erpolu.kof.fi.c.e@gmail.com"">int.erpolu.kof.fi.c.e@gmail.com</a>
<a href=""mailto:in.terpo.lu.k.o.ff.i.ce@gmail.com"">in.terpo.lu.k.o.ff.i.ce@gmail.com</a>
<a href=""mailto:inte.r.po.l.u.ko.f.f.i.ce@gmail.com"">inte.r.po.l.u.ko.f.f.i.ce@gmail.com</a>
<a href=""mailto:interp.olu.k.o.f.fi.c.e@gmail.com"">interp.olu.k.o.f.fi.c.e@gmail.com</a>
<a href=""mailto:i.nt.er.po.lu.koffi.c.e@gmail.com"">i.nt.er.po.lu.koffi.c.e@gmail.com</a>
<a href=""mailto:in.ter.p.ol.uk.off.i.c.e@gmail.com"">in.ter.p.ol.uk.off.i.c.e@gmail.com</a>
<a href=""mailto:in.t.erpol.u.k.o.ff.i.c.e@gmail.com"">in.t.erpol.u.k.o.ff.i.c.e@gmail.com</a>
<a href=""mailto:int.erpoluk.of.fi.c.e@gmail.com"">int.erpoluk.of.fi.c.e@gmail.com</a>
<a href=""mailto:i.n.ter.p.olu.k.o.ff.ice@gmail.com"">i.n.ter.p.olu.k.o.ff.ice@gmail.com</a>
<a href=""mailto:i.n.t.e.r.p.olu.ko.ff.i.c.e@gmail.com"">i.n.t.e.r.p.olu.ko.ff.i.c.e@gmail.com</a>
<a href=""mailto:in.t.e.rpo.l.u.ko.f.fice@gmail.com"">in.t.e.rpo.l.u.ko.f.fice@gmail.com</a>
<a href=""mailto:i.n.ter.polu.ko.ff.i.c.e@gmail.com"">i.n.ter.polu.ko.ff.i.c.e@gmail.com</a>
<a href=""mailto:in.t.er.polukof.f.ice@gmail.com"">in.t.er.polukof.f.ice@gmail.com</a>
<a href=""mailto:i.nt.er.p.ol.ukof.fi.ce@gmail.com"">i.nt.er.p.ol.ukof.fi.ce@gmail.com</a>
<a href=""mailto:in.t.erpo.luko.f.f.i.c.e@gmail.com"">in.t.erpo.luko.f.f.i.c.e@gmail.com</a>
<a href=""mailto:inte.rp.o.lu.ko.ff.ic.e@gmail.com"">inte.rp.o.lu.ko.ff.ic.e@gmail.com</a>
<a href=""mailto:in.terpol.uk.o.ffi.c.e@gmail.com"">in.terpol.uk.o.ffi.c.e@gmail.com</a>
<a href=""mailto:i.n.te.r.pol.ukof.fic.e@gmail.com"">i.n.te.r.pol.ukof.fic.e@gmail.com</a>
<a href=""mailto:i.nter.p.o.lu.k.of.f.i.ce@gmail.com"">i.nter.p.o.lu.k.of.f.i.ce@gmail.com</a>
<a href=""mailto:interp.ol.uko.ffic.e@gmail.com"">interp.ol.uko.ffic.e@gmail.com</a>
<a href=""mailto:int.e.rpol.u.ko.f.fice@gmail.com"">int.e.rpol.u.ko.f.fice@gmail.com</a>
<a href=""mailto:i.nte.r.pol.u.k.o.f.fice@gmail.com"">i.nte.r.pol.u.k.o.f.fice@gmail.com</a>
<a href=""mailto:i.nterp.o.luko.ffi.c.e@gmail.com"">i.nterp.o.luko.ffi.c.e@gmail.com</a>
<a href=""mailto:int.erp.ol.uk.o.f.fice@gmail.com"">int.erp.ol.uk.o.f.fice@gmail.com</a>
<a href=""mailto:i.nterpo.l.uk.o.ffi.ce@gmail.com"">i.nterpo.l.uk.o.ffi.ce@gmail.com</a>
<a href=""mailto:inter.po.lu.k.of.f.i.c.e@gmail.com"">inter.po.lu.k.of.f.i.c.e@gmail.com</a>
<a href=""mailto:i.n.t.e.rpol.uko.ffice@gmail.com"">i.n.t.e.rpol.uko.ffice@gmail.com</a>
<a href=""mailto:i.n.t.e.rpol.u.ko.ffice@gmail.com"">i.n.t.e.rpol.u.ko.ffice@gmail.com</a>
<a href=""mailto:i.n.te.r.po.luk.offi.c.e@gmail.com"">i.n.te.r.po.luk.offi.c.e@gmail.com</a>
<a href=""mailto:in.t.er.pol.uko.ffic.e@gmail.com"">in.t.er.pol.uko.ffic.e@gmail.com</a>
<a href=""mailto:i.nt.e.rp.o.l.uk.off.i.ce@gmail.com"">i.nt.e.rp.o.l.uk.off.i.ce@gmail.com</a>
<a href=""mailto:in.t.erpo.l.u.k.offi.ce@gmail.com"">in.t.erpo.l.u.k.offi.ce@gmail.com</a>
<a href=""mailto:in.t.e.r.pol.u.ko.f.fi.c.e@gmail.com"">in.t.e.r.pol.u.ko.f.fi.c.e@gmail.com</a>
<a href=""mailto:i.n.t.e.rpol.ukof.f.ic.e@gmail.com"">i.n.t.e.rpol.ukof.f.ic.e@gmail.com</a>
<a href=""mailto:int.e.rp.oluko.f.f.i.c.e@gmail.com"">int.e.rp.oluko.f.f.i.c.e@gmail.com</a>
<a href=""mailto:in.t.erpol.uko.f.f.ic.e@gmail.com"">in.t.erpol.uko.f.f.ic.e@gmail.com</a>
<a href=""mailto:i.nt.e.rpo.lu.ko.f.fic.e@gmail.com"">i.nt.e.rpo.lu.ko.f.fic.e@gmail.com</a>
<a href=""mailto:in.t.er.p.ol.u.kof.fic.e@gmail.com"">in.t.er.p.ol.u.kof.fic.e@gmail.com</a>
<a href=""mailto:int.e.r.p.ol.u.kof.fic.e@gmail.com"">int.e.r.p.ol.u.kof.fic.e@gmail.com</a>
<a href=""mailto:i.n.t.e.rpol.uk.offic.e@gmail.com"">i.n.t.e.rpol.uk.offic.e@gmail.com</a>
<a href=""mailto:i.n.t.e.rp.ol.uk.of.f.i.ce@gmail.com"">i.n.t.e.rp.ol.uk.of.f.i.ce@gmail.com</a>
<a href=""mailto:in.t.er.pol.u.k.of.fi.ce@gmail.com"">in.t.er.pol.u.k.of.fi.ce@gmail.com</a>
<a href=""mailto:i.n.t.e.r.po.lu.kof.fi.c.e@gmail.com"">i.n.t.e.r.po.lu.kof.fi.c.e@gmail.com</a>
<a href=""mailto:i.nt.e.rpol.u.ko.f.fic.e@gmail.com"">i.nt.e.rpol.u.ko.f.fic.e@gmail.com</a>
<a href=""mailto:i.n.terpoluko.ffice@gmail.com"">i.n.terpoluko.ffice@gmail.com</a>
<a href=""mailto:i.nterp.ol.uk.office@gmail.com"">i.nterp.ol.uk.office@gmail.com</a>
<a href=""mailto:i.nt.e.rp.o.lu.k.offic.e@gmail.com"">i.nt.e.rp.o.lu.k.offic.e@gmail.com</a>
<a href=""mailto:i.n.t.e.r.p.ol.u.k.off.ice@gmail.com"">i.n.t.e.r.p.ol.u.k.off.ice@gmail.com</a>
<a href=""mailto:inte.r.p.o.l.uko.ffic.e@gmail.com"">inte.r.p.o.l.uko.ffic.e@gmail.com</a>
<a href=""mailto:i.n.terp.o.luk.of.f.ic.e@gmail.com"">i.n.terp.o.luk.of.f.ic.e@gmail.com</a>
<a href=""mailto:in.t.e.r.pol.u.k.of.fice@gmail.com"">in.t.e.r.pol.u.k.of.fice@gmail.com</a>
<a href=""mailto:i.n.t.er.polukoffi.c.e@gmail.com"">i.n.t.er.polukoffi.c.e@gmail.com</a>
<a href=""mailto:i.nterp.o.lu.ko.ffice@gmail.com"">i.nterp.o.lu.ko.ffice@gmail.com</a>
<a href=""mailto:in.terp.o.l.uk.offi.c.e@gmail.com"">in.terp.o.l.uk.offi.c.e@gmail.com</a>
<a href=""mailto:in.te.rpo.l.u.ko.f.f.i.ce@gmail.com"">in.te.rpo.l.u.ko.f.f.i.ce@gmail.com</a>
<a href=""mailto:i.nt.e.r.p.o.l.u.koffi.c.e@gmail.com"">i.nt.e.r.p.o.l.u.koffi.c.e@gmail.com</a>
<a href=""mailto:i.n.t.er.po.lu.k.of.f.ic.e@gmail.com"">i.n.t.er.po.lu.k.of.f.ic.e@gmail.com</a>
<a href=""mailto:i.nterp.o.l.u.k.o.ffice@gmail.com"">i.nterp.o.l.u.k.o.ffice@gmail.com</a>
<a href=""mailto:inte.rpo.lu.ko.f.fi.c.e@gmail.com"">inte.rpo.lu.ko.f.fi.c.e@gmail.com</a>
<a href=""mailto:int.e.r.poluko.f.fi.ce@gmail.com"">int.e.r.poluko.f.fi.ce@gmail.com</a>
<a href=""mailto:i.nterp.o.lu.koff.ice@gmail.com"">i.nterp.o.lu.koff.ice@gmail.com</a>
<a href=""mailto:in.ter.poluko.ff.ic.e@gmail.com"">in.ter.poluko.ff.ic.e@gmail.com</a>
<a href=""mailto:i.nte.r.p.o.luk.off.i.ce@gmail.com"">i.nte.r.p.o.luk.off.i.ce@gmail.com</a>
<a href=""mailto:in.t.e.rpo.lu.k.o.ff.i.ce@gmail.com"">in.t.e.rpo.lu.k.o.ff.i.ce@gmail.com</a>
<a href=""mailto:inte.rpolukof.fice@gmail.com"">inte.rpolukof.fice@gmail.com</a>
<a href=""mailto:i.n.te.rp.o.luk.off.ice@gmail.com"">i.n.te.rp.o.luk.off.ice@gmail.com</a>
<a href=""mailto:int.er.p.ol.u.koff.ic.e@gmail.com"">int.er.p.ol.u.koff.ic.e@gmail.com</a>
<a href=""mailto:i.nte.rp.o.luko.f.f.ic.e@gmail.com"">i.nte.rp.o.luko.f.f.ic.e@gmail.com</a>
<a href=""mailto:i.nt.er.p.olu.koff.i.c.e@gmail.com"">i.nt.er.p.olu.koff.i.c.e@gmail.com</a>
<a href=""mailto:i.n.t.e.rp.o.l.u.ko.ff.ice@gmail.com"">i.n.t.e.rp.o.l.u.ko.ff.ice@gmail.com</a>
<a href=""mailto:int.erpol.uko.ff.i.ce@gmail.com"">int.erpol.uko.ff.i.ce@gmail.com</a>
<a href=""mailto:int.erpol.uk.off.ic.e@gmail.com"">int.erpol.uk.off.ic.e@gmail.com</a>
<a href=""mailto:i.n.t.er.p.o.l.uko.f.f.ice@gmail.com"">i.n.t.er.p.o.l.uko.f.f.ice@gmail.com</a>
<a href=""mailto:i.n.t.erp.o.l.u.k.o.f.fi.ce@gmail.com"">i.n.t.erp.o.l.u.k.o.f.fi.ce@gmail.com</a>
<a href=""mailto:i.n.ter.p.oluk.off.ice@gmail.com"">i.n.ter.p.oluk.off.ice@gmail.com</a>
<a href=""mailto:in.ter.p.o.l.ukoff.i.ce@gmail.com"">in.ter.p.o.l.ukoff.i.ce@gmail.com</a>
<a href=""mailto:i.nter.p.o.l.uk.office@gmail.com"">i.nter.p.o.l.uk.office@gmail.com</a>
<a href=""mailto:westernunion22291@yahoo.com"">westernunion22291@yahoo.com</a>
<a href=""mailto:westernworldunion@outlook.com"">westernworldunion@outlook.com</a>
<a href=""mailto:zzhouyann@gmail.com"">zzhouyann@gmail.com</a>
<a href=""mailto:z.z.h.ouy.a.n.n@gmail.com"">z.z.h.ouy.a.n.n@gmail.com</a>
<a href=""mailto:z.zhou.y.a.nn@gmail.com"">z.zhou.y.a.nn@gmail.com</a>
<a href=""mailto:zz.houy.an.n@gmail.com"">zz.houy.an.n@gmail.com</a>
<a href=""mailto:zz.ho.u.ya.nn@gmail.com"">zz.ho.u.ya.nn@gmail.com</a>
<a href=""mailto:zzh.o.u.y.an.n@gmail.com"">zzh.o.u.y.an.n@gmail.com</a>
<a href=""mailto:zzh.ouy.a.nn@gmail.com"">zzh.ouy.a.nn@gmail.com</a>
<a href=""mailto:zz.hou.ya.n.n@gmail.com"">zz.hou.ya.n.n@gmail.com</a>
<a href=""mailto:z.z.h.o.uy.an.n@gmail.com"">z.z.h.o.uy.an.n@gmail.com</a>
<a href=""mailto:z.z.ho.u.yan.n@gmail.com"">z.z.ho.u.yan.n@gmail.com</a>
<a href=""mailto:zzh.ou.ya.nn@gmail.com"">zzh.ou.ya.nn@gmail.com</a>
<a href=""mailto:z.z.houy.a.n.n@gmail.com"">z.z.houy.a.n.n@gmail.com</a>
<a href=""mailto:z.z.h.o.uy.a.nn@gmail.com"">z.z.h.o.uy.a.nn@gmail.com</a>
<a href=""mailto:z.z.h.ou.ya.n.n@gmail.com"">z.z.h.ou.ya.n.n@gmail.com</a>
<a href=""mailto:zzh.o.uy.an.n@gmail.com"">zzh.o.uy.an.n@gmail.com</a>
<a href=""mailto:z.z.ho.u.yann@gmail.com"">z.z.ho.u.yann@gmail.com</a>
<a href=""mailto:z.zh.o.u.y.ann@gmail.com"">z.zh.o.u.y.ann@gmail.com</a>
<a href=""mailto:z.z.houy.a.nn@gmail.com"">z.z.houy.a.nn@gmail.com</a>
<a href=""mailto:zzho.uyan.n@gmail.com"">zzho.uyan.n@gmail.com</a>
<a href=""mailto:zzho.u.yan.n@gmail.com"">zzho.u.yan.n@gmail.com</a>
<a href=""mailto:zz.h.o.u.yan.n@gmail.com"">zz.h.o.u.yan.n@gmail.com</a>
<a href=""mailto:z.z.ho.uyan.n@gmail.com"">z.z.ho.uyan.n@gmail.com</a>
<a href=""mailto:zz.h.o.uyan.n@gmail.com"">zz.h.o.uyan.n@gmail.com</a>
<a href=""mailto:z.zh.o.u.y.a.nn@gmail.com"">z.zh.o.u.y.a.nn@gmail.com</a>
<a href=""mailto:z.zh.ouy.ann@gmail.com"">z.zh.ouy.ann@gmail.com</a>
<a href=""mailto:zzhouya.n.n@gmail.com"">zzhouya.n.n@gmail.com</a>
<a href=""mailto:z.zho.uy.an.n@gmail.com"">z.zho.uy.an.n@gmail.com</a>
<a href=""mailto:zzhou.y.a.n.n@gmail.com"">zzhou.y.a.n.n@gmail.com</a>
<a href=""mailto:z.z.h.o.u.y.ann@gmail.com"">z.z.h.o.u.y.ann@gmail.com</a>
<a href=""mailto:zz.h.ouy.ann@gmail.com"">zz.h.ouy.ann@gmail.com</a>
<a href=""mailto:z.z.h.ouya.n.n@gmail.com"">z.z.h.ouya.n.n@gmail.com</a>
<a href=""mailto:zzho.u.ya.n.n@gmail.com"">zzho.u.ya.n.n@gmail.com</a>
<a href=""mailto:z.zh.o.uy.ann@gmail.com"">z.zh.o.uy.ann@gmail.com</a>
<a href=""mailto:zz.h.o.uy.a.nn@gmail.com"">zz.h.o.uy.a.nn@gmail.com</a>
<a href=""mailto:z.z.hou.y.ann@gmail.com"">z.z.hou.y.ann@gmail.com</a>
<a href=""mailto:z.zh.o.uya.nn@gmail.com"">z.zh.o.uya.nn@gmail.com</a>
<a href=""mailto:z.zh.ouya.n.n@gmail.com"">z.zh.ouya.n.n@gmail.com</a>
<a href=""mailto:zzh.ou.yann@gmail.com"">zzh.ou.yann@gmail.com</a>
<a href=""mailto:z.z.h.ou.y.a.nn@gmail.com"">z.z.h.ou.y.a.nn@gmail.com</a>
<a href=""mailto:zz.houyan.n@gmail.com"">zz.houyan.n@gmail.com</a>
<a href=""mailto:z.zh.ouy.an.n@gmail.com"">z.zh.ouy.an.n@gmail.com</a>
<a href=""mailto:zz.ho.u.ya.n.n@gmail.com"">zz.ho.u.ya.n.n@gmail.com</a>
<a href=""mailto:z.z.houyan.n@gmail.com"">z.z.houyan.n@gmail.com</a>
<a href=""mailto:zzho.u.y.ann@gmail.com"">zzho.u.y.ann@gmail.com</a>
<a href=""mailto:zz.houya.nn@gmail.com"">zz.houya.nn@gmail.com</a>
<a href=""mailto:zz.h.ou.y.a.nn@gmail.com"">zz.h.ou.y.a.nn@gmail.com</a>
<a href=""mailto:zzh.o.u.yann@gmail.com"">zzh.o.u.yann@gmail.com</a>
<a href=""mailto:zzh.ouyan.n@gmail.com"">zzh.ouyan.n@gmail.com</a>
<a href=""mailto:zzh.ou.y.a.n.n@gmail.com"">zzh.ou.y.a.n.n@gmail.com</a>
<a href=""mailto:zzhouy.ann@gmail.com"">zzhouy.ann@gmail.com</a>
<a href=""mailto:zzhou.yan.n@gmail.com"">zzhou.yan.n@gmail.com</a>
<a href=""mailto:zzh.ou.y.an.n@gmail.com"">zzh.ou.y.an.n@gmail.com</a>
<a href=""mailto:z.zho.uyan.n@gmail.com"">z.zho.uyan.n@gmail.com</a>
<a href=""mailto:zz.ho.uyann@gmail.com"">zz.ho.uyann@gmail.com</a>
<a href=""mailto:zz.h.o.u.y.a.n.n@gmail.com"">zz.h.o.u.y.a.n.n@gmail.com</a>
<a href=""mailto:z.zh.o.u.y.an.n@gmail.com"">z.zh.o.u.y.an.n@gmail.com</a>
<a href=""mailto:zzh.ouya.n.n@gmail.com"">zzh.ouya.n.n@gmail.com</a>
<a href=""mailto:zz.ho.u.yan.n@gmail.com"">zz.ho.u.yan.n@gmail.com</a>
<a href=""mailto:z.z.hou.ya.nn@gmail.com"">z.z.hou.ya.nn@gmail.com</a>
<a href=""mailto:z.z.houyann@gmail.com"">z.z.houyann@gmail.com</a>
<a href=""mailto:zzhouy.an.n@gmail.com"">zzhouy.an.n@gmail.com</a>
<a href=""mailto:zzh.o.uy.ann@gmail.com"">zzh.o.uy.ann@gmail.com</a>
<a href=""mailto:z.zho.uy.a.nn@gmail.com"">z.zho.uy.a.nn@gmail.com</a>
<a href=""mailto:z.z.ho.u.y.a.nn@gmail.com"">z.z.ho.u.y.a.nn@gmail.com</a>
<a href=""mailto:z.zho.u.y.a.n.n@gmail.com"">z.zho.u.y.a.n.n@gmail.com</a>
<a href=""mailto:zzh.o.u.y.a.n.n@gmail.com"">zzh.o.u.y.a.n.n@gmail.com</a>
<a href=""mailto:z.zhou.y.ann@gmail.com"">z.zhou.y.ann@gmail.com</a>
<a href=""mailto:zzh.ouy.an.n@gmail.com"">zzh.ouy.an.n@gmail.com</a>
<a href=""mailto:zz.h.ou.yan.n@gmail.com"">zz.h.ou.yan.n@gmail.com</a>
<a href=""mailto:zz.h.ouy.a.n.n@gmail.com"">zz.h.ouy.a.n.n@gmail.com</a>
<a href=""mailto:z.z.h.o.uy.ann@gmail.com"">z.z.h.o.uy.ann@gmail.com</a>
<a href=""mailto:zz.h.ou.ya.nn@gmail.com"">zz.h.ou.ya.nn@gmail.com</a>
<a href=""mailto:zzho.uy.an.n@gmail.com"">zzho.uy.an.n@gmail.com</a>
<a href=""mailto:zzh.ouy.ann@gmail.com"">zzh.ouy.ann@gmail.com</a>
<a href=""mailto:z.zho.uy.ann@gmail.com"">z.zho.uy.ann@gmail.com</a>
<a href=""mailto:z.zhouy.a.n.n@gmail.com"">z.zhouy.a.n.n@gmail.com</a>
<a href=""mailto:zzh.o.u.y.ann@gmail.com"">zzh.o.u.y.ann@gmail.com</a>
<a href=""mailto:zz.h.ouy.a.nn@gmail.com"">zz.h.ouy.a.nn@gmail.com</a>
<a href=""mailto:zz.ho.u.yann@gmail.com"">zz.ho.u.yann@gmail.com</a>
<a href=""mailto:zzhou.y.an.n@gmail.com"">zzhou.y.an.n@gmail.com</a>
<a href=""mailto:zz.h.o.u.ya.nn@gmail.com"">zz.h.o.u.ya.nn@gmail.com</a>
<a href=""mailto:z.zh.o.uy.a.n.n@gmail.com"">z.zh.o.uy.a.n.n@gmail.com</a>
<a href=""mailto:zzhou.y.ann@gmail.com"">zzhou.y.ann@gmail.com</a>
<a href=""mailto:z.z.h.ou.yann@gmail.com"">z.z.h.ou.yann@gmail.com</a>
<a href=""mailto:zz.h.ouy.an.n@gmail.com"">zz.h.ouy.an.n@gmail.com</a>
<a href=""mailto:zz.h.o.u.y.ann@gmail.com"">zz.h.o.u.y.ann@gmail.com</a>
<a href=""mailto:zzho.u.y.a.n.n@gmail.com"">zzho.u.y.a.n.n@gmail.com</a>
<a href=""mailto:zzh.ouy.a.n.n@gmail.com"">zzh.ouy.a.n.n@gmail.com</a>
<a href=""mailto:z.zh.ou.y.a.nn@gmail.com"">z.zh.ou.y.a.nn@gmail.com</a>
<a href=""mailto:z.z.ho.u.ya.n.n@gmail.com"">z.z.ho.u.ya.n.n@gmail.com</a>
<a href=""mailto:z.zhouy.a.nn@gmail.com"">z.zhouy.a.nn@gmail.com</a>
<a href=""mailto:zzho.uya.nn@gmail.com"">zzho.uya.nn@gmail.com</a>
<a href=""mailto:zzhou.y.a.nn@gmail.com"">zzhou.y.a.nn@gmail.com</a>
<a href=""mailto:z.z.h.ou.y.a.n.n@gmail.com"">z.z.h.ou.y.a.n.n@gmail.com</a>
<a href=""mailto:z.z.h.ouya.nn@gmail.com"">z.z.h.ouya.nn@gmail.com</a>
<a href=""mailto:z.zho.u.ya.nn@gmail.com"">z.zho.u.ya.nn@gmail.com</a>
<a href=""mailto:zzh.ouya.nn@gmail.com"">zzh.ouya.nn@gmail.com</a>
<a href=""mailto:z.z.ho.uy.ann@gmail.com"">z.z.ho.uy.ann@gmail.com</a>
<a href=""mailto:z.z.houy.ann@gmail.com"">z.z.houy.ann@gmail.com</a>
<a href=""mailto:z.z.h.o.uyann@gmail.com"">z.z.h.o.uyann@gmail.com</a>
<a href=""mailto:zzh.o.uy.a.n.n@gmail.com"">zzh.o.uy.a.n.n@gmail.com</a>
<a href=""mailto:zzhou.yann@gmail.com"">zzhou.yann@gmail.com</a>
<a href=""mailto:z.z.h.ouy.ann@gmail.com"">z.z.h.ouy.ann@gmail.com</a>
<a href=""mailto:zz.h.o.u.ya.n.n@gmail.com"">zz.h.o.u.ya.n.n@gmail.com</a>
<a href=""mailto:z.zh.o.uy.an.n@gmail.com"">z.zh.o.uy.an.n@gmail.com</a>
<a href=""mailto:zzh.ouyann@gmail.com"">zzh.ouyann@gmail.com</a>
<a href=""mailto:zzho.u.y.an.n@gmail.com"">zzho.u.y.an.n@gmail.com</a>
<a href=""mailto:z.z.h.ouy.a.nn@gmail.com"">z.z.h.ouy.a.nn@gmail.com</a>
<a href=""mailto:zzhouy.a.n.n@gmail.com"">zzhouy.a.n.n@gmail.com</a>
<a href=""mailto:zz.h.o.u.y.an.n@gmail.com"">zz.h.o.u.y.an.n@gmail.com</a>
<a href=""mailto:z.zh.o.uyann@gmail.com"">z.zh.o.uyann@gmail.com</a>
<a href=""mailto:z.zho.u.y.ann@gmail.com"">z.zho.u.y.ann@gmail.com</a>
<a href=""mailto:zz.hou.y.ann@gmail.com"">zz.hou.y.ann@gmail.com</a>
<a href=""mailto:zz.h.ou.yann@gmail.com"">zz.h.ou.yann@gmail.com</a>
<a href=""mailto:z.zh.ou.ya.nn@gmail.com"">z.zh.ou.ya.nn@gmail.com</a>
<a href=""mailto:z.z.h.ou.yan.n@gmail.com"">z.z.h.ou.yan.n@gmail.com</a>
<a href=""mailto:zz.h.o.uyann@gmail.com"">zz.h.o.uyann@gmail.com</a>
<a href=""mailto:z.z.h.o.uyan.n@gmail.com"">z.z.h.o.uyan.n@gmail.com</a>
<a href=""mailto:z.zh.ou.ya.n.n@gmail.com"">z.zh.ou.ya.n.n@gmail.com</a>
<a href=""mailto:zz.h.o.uya.n.n@gmail.com"">zz.h.o.uya.n.n@gmail.com</a>
<a href=""mailto:zz.houy.ann@gmail.com"">zz.houy.ann@gmail.com</a>
<a href=""mailto:zzhouy.a.nn@gmail.com"">zzhouy.a.nn@gmail.com</a>
<a href=""mailto:zz.houy.a.nn@gmail.com"">zz.houy.a.nn@gmail.com</a>
<a href=""mailto:zzho.uy.a.n.n@gmail.com"">zzho.uy.a.n.n@gmail.com</a>
<a href=""mailto:zz.hou.y.an.n@gmail.com"">zz.hou.y.an.n@gmail.com</a>
<a href=""mailto:z.zhouyann@gmail.com"">z.zhouyann@gmail.com</a>
<a href=""mailto:z.z.ho.uya.n.n@gmail.com"">z.z.ho.uya.n.n@gmail.com</a>
<a href=""mailto:z.z.hou.y.a.nn@gmail.com"">z.z.hou.y.a.nn@gmail.com</a>
<a href=""mailto:z.zho.uya.n.n@gmail.com"">z.zho.uya.n.n@gmail.com</a>
<a href=""mailto:z.zhou.yann@gmail.com"">z.zhou.yann@gmail.com</a>
<a href=""mailto:z.zhouy.an.n@gmail.com"">z.zhouy.an.n@gmail.com</a>
<a href=""mailto:z.z.ho.uya.nn@gmail.com"">z.z.ho.uya.nn@gmail.com</a>
<a href=""mailto:z.zh.o.u.ya.n.n@gmail.com"">z.zh.o.u.ya.n.n@gmail.com</a>
<a href=""mailto:z.zho.u.ya.n.n@gmail.com"">z.zho.u.ya.n.n@gmail.com</a>
<a href=""mailto:z.z.houya.nn@gmail.com"">z.z.houya.nn@gmail.com</a>
<a href=""mailto:z.zho.uy.a.n.n@gmail.com"">z.zho.uy.a.n.n@gmail.com</a>
<a href=""mailto:z.zh.o.u.ya.nn@gmail.com"">z.zh.o.u.ya.nn@gmail.com</a>
<a href=""mailto:z.zhou.y.an.n@gmail.com"">z.zhou.y.an.n@gmail.com</a>
<a href=""mailto:z.z.ho.u.y.an.n@gmail.com"">z.z.ho.u.y.an.n@gmail.com</a>
<a href=""mailto:z.z.h.ou.y.an.n@gmail.com"">z.z.h.ou.y.an.n@gmail.com</a>
<a href=""mailto:zz.ho.uy.an.n@gmail.com"">zz.ho.uy.an.n@gmail.com</a>
<a href=""mailto:zzh.ou.y.ann@gmail.com"">zzh.ou.y.ann@gmail.com</a>
<a href=""mailto:zz.h.ou.y.ann@gmail.com"">zz.h.ou.y.ann@gmail.com</a>
<a href=""mailto:z.zho.uyann@gmail.com"">z.zho.uyann@gmail.com</a>
<a href=""mailto:z.zhou.ya.nn@gmail.com"">z.zhou.ya.nn@gmail.com</a>
<a href=""mailto:zz.h.o.u.y.a.nn@gmail.com"">zz.h.o.u.y.a.nn@gmail.com</a>
<a href=""mailto:zz.ho.u.y.an.n@gmail.com"">zz.ho.u.y.an.n@gmail.com</a>
<a href=""mailto:z.zh.o.u.yann@gmail.com"">z.zh.o.u.yann@gmail.com</a>
<a href=""mailto:z.z.h.o.u.yan.n@gmail.com"">z.z.h.o.u.yan.n@gmail.com</a>
<a href=""mailto:z.zh.o.u.y.a.n.n@gmail.com"">z.zh.o.u.y.a.n.n@gmail.com</a>
<a href=""mailto:zz.h.ou.ya.n.n@gmail.com"">zz.h.ou.ya.n.n@gmail.com</a>
<a href=""mailto:zz.ho.uya.n.n@gmail.com"">zz.ho.uya.n.n@gmail.com</a>
<a href=""mailto:z.z.h.o.u.yann@gmail.com"">z.z.h.o.u.yann@gmail.com</a>
<a href=""mailto:z.z.ho.u.y.ann@gmail.com"">z.z.ho.u.y.ann@gmail.com</a>
<a href=""mailto:z.zh.o.uyan.n@gmail.com"">z.zh.o.uyan.n@gmail.com</a>
<a href=""mailto:zz.h.o.uy.an.n@gmail.com"">zz.h.o.uy.an.n@gmail.com</a>
<a href=""mailto:zzho.u.y.a.nn@gmail.com"">zzho.u.y.a.nn@gmail.com</a>
<a href=""mailto:z.z.ho.u.ya.nn@gmail.com"">z.z.ho.u.ya.nn@gmail.com</a>
<a href=""mailto:z.zh.o.uy.a.nn@gmail.com"">z.zh.o.uy.a.nn@gmail.com</a>
<a href=""mailto:zzho.u.ya.nn@gmail.com"">zzho.u.ya.nn@gmail.com</a>
<a href=""mailto:z.z.h.o.u.y.an.n@gmail.com"">z.z.h.o.u.y.an.n@gmail.com</a>
<a href=""mailto:zz.h.ouya.nn@gmail.com"">zz.h.ouya.nn@gmail.com</a>
<a href=""mailto:zzh.o.u.ya.n.n@gmail.com"">zzh.o.u.ya.n.n@gmail.com</a>
<a href=""mailto:z.zho.u.y.a.nn@gmail.com"">z.zho.u.y.a.nn@gmail.com</a>
<a href=""mailto:zz.ho.u.y.a.n.n@gmail.com"">zz.ho.u.y.a.n.n@gmail.com</a>
<a href=""mailto:zz.hou.yann@gmail.com"">zz.hou.yann@gmail.com</a>
<a href=""mailto:z.zh.ouya.nn@gmail.com"">z.zh.ouya.nn@gmail.com</a>
<a href=""mailto:z.zho.u.yan.n@gmail.com"">z.zho.u.yan.n@gmail.com</a>
<a href=""mailto:zzh.o.uya.nn@gmail.com"">zzh.o.uya.nn@gmail.com</a>
<a href=""mailto:z.zho.u.yann@gmail.com"">z.zho.u.yann@gmail.com</a>
<a href=""mailto:z.z.h.ou.ya.nn@gmail.com"">z.z.h.ou.ya.nn@gmail.com</a>
<a href=""mailto:zz.h.ou.y.an.n@gmail.com"">zz.h.ou.y.an.n@gmail.com</a>
<a href=""mailto:zzh.o.uy.a.nn@gmail.com"">zzh.o.uy.a.nn@gmail.com</a>
<a href=""mailto:zz.hou.y.a.nn@gmail.com"">zz.hou.y.a.nn@gmail.com</a>
<a href=""mailto:zzho.uy.ann@gmail.com"">zzho.uy.ann@gmail.com</a>
<a href=""mailto:zz.hou.yan.n@gmail.com"">zz.hou.yan.n@gmail.com</a>
<a href=""mailto:zzh.o.uyan.n@gmail.com"">zzh.o.uyan.n@gmail.com</a>
<a href=""mailto:z.zhouyan.n@gmail.com"">z.zhouyan.n@gmail.com</a>
<a href=""mailto:zzh.ou.ya.n.n@gmail.com"">zzh.ou.ya.n.n@gmail.com</a>
<a href=""mailto:z.z.hou.yan.n@gmail.com"">z.z.hou.yan.n@gmail.com</a>
<a href=""mailto:zz.ho.uy.a.nn@gmail.com"">zz.ho.uy.a.nn@gmail.com</a>
<a href=""mailto:zzh.o.uya.n.n@gmail.com"">zzh.o.uya.n.n@gmail.com</a>
<a href=""mailto:z.z.h.o.uya.nn@gmail.com"">z.z.h.o.uya.nn@gmail.com</a>
<a href=""mailto:z.zh.ou.y.an.n@gmail.com"">z.zh.ou.y.an.n@gmail.com</a>
<a href=""mailto:z.z.houya.n.n@gmail.com"">z.z.houya.n.n@gmail.com</a>
<a href=""mailto:z.z.h.o.u.ya.n.n@gmail.com"">z.z.h.o.u.ya.n.n@gmail.com</a>
<a href=""mailto:zz.h.o.uy.a.n.n@gmail.com"">zz.h.o.uy.a.n.n@gmail.com</a>
<a href=""mailto:z.zh.ou.y.ann@gmail.com"">z.zh.ou.y.ann@gmail.com</a>
<a href=""mailto:zz.h.ouyan.n@gmail.com"">zz.h.ouyan.n@gmail.com</a>
<a href=""mailto:zzho.uyann@gmail.com"">zzho.uyann@gmail.com</a>
<a href=""mailto:zz.ho.u.y.ann@gmail.com"">zz.ho.u.y.ann@gmail.com</a>
<a href=""mailto:zz.houyann@gmail.com"">zz.houyann@gmail.com</a>
<a href=""mailto:z.zhouy.ann@gmail.com"">z.zhouy.ann@gmail.com</a>
<a href=""mailto:zzho.uy.a.nn@gmail.com"">zzho.uy.a.nn@gmail.com</a>
<a href=""mailto:z.z.houy.an.n@gmail.com"">z.z.houy.an.n@gmail.com</a>
<a href=""mailto:z.z.h.o.uy.a.n.n@gmail.com"">z.z.h.o.uy.a.n.n@gmail.com</a>
<a href=""mailto:z.z.ho.uyann@gmail.com"">z.z.ho.uyann@gmail.com</a>
<a href=""mailto:z.z.h.ou.y.ann@gmail.com"">z.z.h.ou.y.ann@gmail.com</a>
<a href=""mailto:zz.ho.uy.ann@gmail.com"">zz.ho.uy.ann@gmail.com</a>
<a href=""mailto:zzh.ou.yan.n@gmail.com"">zzh.ou.yan.n@gmail.com</a>
<a href=""mailto:z.zhou.ya.n.n@gmail.com"">z.zhou.ya.n.n@gmail.com</a>
<a href=""mailto:info.officialdebtrecon@financier.com"">info.officialdebtrecon@financier.com</a>
<a href=""mailto:rosannawilliams428@gmail.com"">rosannawilliams428@gmail.com</a>
<a href=""mailto:ro.sa.n.n.a.wil.l.iams.4.2.8@gmail.com"">ro.sa.n.n.a.wil.l.iams.4.2.8@gmail.com</a>
<a href=""mailto:r.o.sa.n.n.a.willi.a.ms428@gmail.com"">r.o.sa.n.n.a.willi.a.ms428@gmail.com</a>
<a href=""mailto:r.os.ann.a.wil.l.ia.m.s428@gmail.com"">r.os.ann.a.wil.l.ia.m.s428@gmail.com</a>
<a href=""mailto:r.osanna.w.i.l.l.i.am.s.428@gmail.com"">r.osanna.w.i.l.l.i.am.s.428@gmail.com</a>
<a href=""mailto:r.o.sann.a.wi.l.l.ia.ms4.2.8@gmail.com"">r.o.sann.a.wi.l.l.ia.ms4.2.8@gmail.com</a>
<a href=""mailto:ro.s.a.nna.wi.ll.iam.s4.2.8@gmail.com"">ro.s.a.nna.wi.ll.iam.s4.2.8@gmail.com</a>
<a href=""mailto:ros.an.n.awill.i.ams.428@gmail.com"">ros.an.n.awill.i.ams.428@gmail.com</a>
<a href=""mailto:ro.sa.nn.awil.l.i.a.m.s42.8@gmail.com"">ro.sa.nn.awil.l.i.a.m.s42.8@gmail.com</a>
<a href=""mailto:r.o.s.a.nn.awil.li.a.m.s4.28@gmail.com"">r.o.s.a.nn.awil.li.a.m.s4.28@gmail.com</a>
<a href=""mailto:r.o.sann.awi.llia.m.s.4.2.8@gmail.com"">r.o.sann.awi.llia.m.s.4.2.8@gmail.com</a>
<a href=""mailto:r.o.s.a.n.n.aw.ill.i.a.m.s.4.28@gmail.com"">r.o.s.a.n.n.aw.ill.i.a.m.s.4.28@gmail.com</a>
<a href=""mailto:rosannaw.il.li.ams.42.8@gmail.com"">rosannaw.il.li.ams.42.8@gmail.com</a>
<a href=""mailto:r.os.a.nn.a.w.il.l.i.a.ms.42.8@gmail.com"">r.os.a.nn.a.w.il.l.i.a.ms.42.8@gmail.com</a>
<a href=""mailto:r.os.a.n.n.a.w.il.l.ia.ms.428@gmail.com"">r.os.a.n.n.a.w.il.l.ia.ms.428@gmail.com</a>
<a href=""mailto:ros.a.nn.a.wi.l.l.i.a.ms4.2.8@gmail.com"">ros.a.nn.a.wi.l.l.i.a.ms4.2.8@gmail.com</a>
<a href=""mailto:rosa.n.n.a.w.i.ll.ia.ms428@gmail.com"">rosa.n.n.a.w.i.ll.ia.ms428@gmail.com</a>
<a href=""mailto:rosann.a.wi.l.li.a.ms.428@gmail.com"">rosann.a.wi.l.li.a.ms.428@gmail.com</a>
<a href=""mailto:r.os.a.nn.aw.i.l.l.i.a.m.s42.8@gmail.com"">r.os.a.nn.aw.i.l.l.i.a.m.s42.8@gmail.com</a>
<a href=""mailto:r.o.sann.a.wi.lli.am.s4.28@gmail.com"">r.o.sann.a.wi.lli.am.s4.28@gmail.com</a>
<a href=""mailto:ros.anna.w.i.l.l.i.am.s428@gmail.com"">ros.anna.w.i.l.l.i.am.s428@gmail.com</a>
<a href=""mailto:r.o.sa.nn.awi.lliams.428@gmail.com"">r.o.sa.nn.awi.lliams.428@gmail.com</a>
<a href=""mailto:rosannaw.i.l.l.i.ams.4.28@gmail.com"">rosannaw.i.l.l.i.ams.4.28@gmail.com</a>
<a href=""mailto:rosa.n.na.wi.l.l.i.a.m.s4.28@gmail.com"">rosa.n.na.wi.l.l.i.a.m.s4.28@gmail.com</a>
<a href=""mailto:ro.sa.n.na.w.il.l.iam.s4.28@gmail.com"">ro.sa.n.na.w.il.l.iam.s4.28@gmail.com</a>
<a href=""mailto:rosan.naw.il.li.a.ms4.2.8@gmail.com"">rosan.naw.il.li.a.ms4.2.8@gmail.com</a>
<a href=""mailto:ro.s.ann.a.w.ill.i.a.ms.42.8@gmail.com"">ro.s.ann.a.w.ill.i.a.ms.42.8@gmail.com</a>
<a href=""mailto:r.o.s.an.nawi.l.li.ams428@gmail.com"">r.o.s.an.nawi.l.li.ams428@gmail.com</a>
<a href=""mailto:r.osannawi.l.l.i.ams4.28@gmail.com"">r.osannawi.l.l.i.ams4.28@gmail.com</a>
<a href=""mailto:rosann.awi.ll.i.am.s.428@gmail.com"">rosann.awi.ll.i.am.s.428@gmail.com</a>
<a href=""mailto:rosa.n.naw.i.l.lia.m.s.4.28@gmail.com"">rosa.n.naw.i.l.lia.m.s.4.28@gmail.com</a>
<a href=""mailto:r.osan.nawi.lli.a.m.s4.2.8@gmail.com"">r.osan.nawi.lli.a.m.s4.2.8@gmail.com</a>
<a href=""mailto:ros.ann.aw.i.l.li.a.m.s.428@gmail.com"">ros.ann.aw.i.l.li.a.m.s.428@gmail.com</a>
<a href=""mailto:ro.s.a.nna.w.i.llia.ms4.2.8@gmail.com"">ro.s.a.nna.w.i.llia.ms4.2.8@gmail.com</a>
<a href=""mailto:r.osa.n.na.william.s.4.28@gmail.com"">r.osa.n.na.william.s.4.28@gmail.com</a>
<a href=""mailto:rosanna.w.i.l.l.i.am.s42.8@gmail.com"">rosanna.w.i.l.l.i.am.s42.8@gmail.com</a>
<a href=""mailto:r.o.s.a.n.n.a.w.i.l.lia.m.s4.28@gmail.com"">r.o.s.a.n.n.a.w.i.l.lia.m.s4.28@gmail.com</a>
<a href=""mailto:r.osan.na.wil.liams4.2.8@gmail.com"">r.osan.na.wil.liams4.2.8@gmail.com</a>
<a href=""mailto:r.os.ann.a.wi.ll.i.ams.428@gmail.com"">r.os.ann.a.wi.ll.i.ams.428@gmail.com</a>
<a href=""mailto:r.o.sa.nna.w.ill.iam.s.4.28@gmail.com"">r.o.sa.nna.w.ill.iam.s.4.28@gmail.com</a>
<a href=""mailto:ros.a.nn.awil.li.am.s42.8@gmail.com"">ros.a.nn.awil.li.am.s42.8@gmail.com</a>
<a href=""mailto:r.os.anna.w.il.lia.ms.4.2.8@gmail.com"">r.os.anna.w.il.lia.ms.4.2.8@gmail.com</a>
<a href=""mailto:r.o.s.an.n.awilli.a.ms.428@gmail.com"">r.o.s.an.n.awilli.a.ms.428@gmail.com</a>
<a href=""mailto:ros.ann.a.w.i.ll.ia.ms.4.28@gmail.com"">ros.ann.a.w.i.ll.ia.ms.4.28@gmail.com</a>
<a href=""mailto:r.os.an.na.wi.l.l.i.a.ms428@gmail.com"">r.os.an.na.wi.l.l.i.a.ms428@gmail.com</a>
<a href=""mailto:r.o.s.a.nn.a.w.i.llia.m.s.42.8@gmail.com"">r.o.s.a.nn.a.w.i.llia.m.s.42.8@gmail.com</a>
<a href=""mailto:ros.a.nn.a.w.il.l.i.a.ms.42.8@gmail.com"">ros.a.nn.a.w.il.l.i.a.ms.42.8@gmail.com</a>
<a href=""mailto:ro.sa.nna.wi.ll.i.a.ms42.8@gmail.com"">ro.sa.nna.wi.ll.i.a.ms42.8@gmail.com</a>
<a href=""mailto:r.osann.a.w.il.l.i.a.ms.428@gmail.com"">r.osann.a.w.il.l.i.a.ms.428@gmail.com</a>
<a href=""mailto:rosa.nn.awil.l.iams4.2.8@gmail.com"">rosa.nn.awil.l.iams4.2.8@gmail.com</a>
<a href=""mailto:rosa.nna.w.ill.i.a.m.s42.8@gmail.com"">rosa.nna.w.ill.i.a.m.s42.8@gmail.com</a>
<a href=""mailto:r.osa.nna.wi.l.l.i.am.s428@gmail.com"">r.osa.nna.wi.l.l.i.am.s428@gmail.com</a>
<a href=""mailto:ro.s.an.na.w.i.l.l.ia.m.s.4.28@gmail.com"">ro.s.an.na.w.i.l.l.ia.m.s.4.28@gmail.com</a>
<a href=""mailto:r.o.s.a.n.na.w.i.l.li.a.m.s42.8@gmail.com"">r.o.s.a.n.na.w.i.l.li.a.m.s42.8@gmail.com</a>
<a href=""mailto:ro.san.n.a.wi.ll.iams42.8@gmail.com"">ro.san.n.a.wi.ll.iams42.8@gmail.com</a>
<a href=""mailto:r.os.a.n.na.wi.ll.i.ams.4.2.8@gmail.com"">r.os.a.n.na.wi.ll.i.ams.4.2.8@gmail.com</a>
<a href=""mailto:r.o.san.n.aw.ill.ia.m.s.4.2.8@gmail.com"">r.o.san.n.aw.ill.ia.m.s.4.2.8@gmail.com</a>
<a href=""mailto:r.os.an.n.aw.illi.a.m.s428@gmail.com"">r.os.an.n.aw.illi.a.m.s428@gmail.com</a>
<a href=""mailto:ro.s.a.nn.awi.l.l.i.a.m.s.42.8@gmail.com"">ro.s.a.nn.awi.l.l.i.a.m.s.42.8@gmail.com</a>
<a href=""mailto:rosa.nnawi.ll.i.ams42.8@gmail.com"">rosa.nnawi.ll.i.ams42.8@gmail.com</a>
<a href=""mailto:ro.sann.awi.l.lia.m.s.4.28@gmail.com"">ro.sann.awi.l.lia.m.s.4.28@gmail.com</a>
<a href=""mailto:r.osan.n.awi.llia.m.s.42.8@gmail.com"">r.osan.n.awi.llia.m.s.42.8@gmail.com</a>
<a href=""mailto:rosann.a.w.i.ll.iams.42.8@gmail.com"">rosann.a.w.i.ll.iams.42.8@gmail.com</a>
<a href=""mailto:ro.s.a.nn.a.w.i.l.l.ia.ms428@gmail.com"">ro.s.a.nn.a.w.i.l.l.ia.ms428@gmail.com</a>
<a href=""mailto:ro.s.ann.a.wil.l.i.a.ms.42.8@gmail.com"">ro.s.ann.a.wil.l.i.a.ms.42.8@gmail.com</a>
<a href=""mailto:ro.sa.n.nawil.l.iams.4.2.8@gmail.com"">ro.sa.n.nawil.l.iams.4.2.8@gmail.com</a>
<a href=""mailto:r.o.san.na.wil.lia.ms42.8@gmail.com"">r.o.san.na.wil.lia.ms42.8@gmail.com</a>
<a href=""mailto:r.osa.nnaw.i.l.l.ia.m.s.4.28@gmail.com"">r.osa.nnaw.i.l.l.ia.m.s.4.28@gmail.com</a>
<a href=""mailto:ros.an.n.awi.l.lia.m.s4.28@gmail.com"">ros.an.n.awi.l.lia.m.s4.28@gmail.com</a>
<a href=""mailto:r.o.s.anna.will.i.ams.428@gmail.com"">r.o.s.anna.will.i.ams.428@gmail.com</a>
<a href=""mailto:rosann.aw.illi.ams4.28@gmail.com"">rosann.aw.illi.ams4.28@gmail.com</a>
<a href=""mailto:r.osan.na.w.il.l.i.a.m.s.42.8@gmail.com"">r.osan.na.w.il.l.i.a.m.s.42.8@gmail.com</a>
<a href=""mailto:r.o.s.an.na.will.i.a.ms428@gmail.com"">r.o.s.an.na.will.i.a.ms428@gmail.com</a>
<a href=""mailto:r.o.sanna.w.i.l.l.iam.s.4.2.8@gmail.com"">r.o.sanna.w.i.l.l.iam.s.4.2.8@gmail.com</a>
<a href=""mailto:ros.a.nn.aw.i.l.l.ia.m.s.4.28@gmail.com"">ros.a.nn.aw.i.l.l.ia.m.s.4.28@gmail.com</a>
<a href=""mailto:ro.san.na.w.illi.ams428@gmail.com"">ro.san.na.w.illi.ams428@gmail.com</a>
<a href=""mailto:r.os.annawill.i.am.s42.8@gmail.com"">r.os.annawill.i.am.s42.8@gmail.com</a>
<a href=""mailto:r.o.s.a.nn.aw.il.l.i.a.m.s.4.28@gmail.com"">r.o.s.a.nn.aw.il.l.i.a.m.s.4.28@gmail.com</a>
<a href=""mailto:rosannaw.ill.i.a.m.s.428@gmail.com"">rosannaw.ill.i.a.m.s.428@gmail.com</a>
<a href=""mailto:r.o.s.a.nna.w.il.liams4.2.8@gmail.com"">r.o.s.a.nna.w.il.liams4.2.8@gmail.com</a>
<a href=""mailto:r.o.san.n.a.willia.ms.428@gmail.com"">r.o.san.n.a.willia.ms.428@gmail.com</a>
<a href=""mailto:ros.a.n.naw.i.ll.i.a.ms4.28@gmail.com"">ros.a.n.naw.i.ll.i.a.ms4.28@gmail.com</a>
<a href=""mailto:r.osan.na.w.i.l.li.ams4.2.8@gmail.com"">r.osan.na.w.i.l.li.ams4.2.8@gmail.com</a>
<a href=""mailto:r.o.s.a.nn.a.will.i.a.m.s4.28@gmail.com"">r.o.s.a.nn.a.will.i.a.m.s4.28@gmail.com</a>
<a href=""mailto:r.osanna.w.ill.ia.m.s42.8@gmail.com"">r.osanna.w.ill.ia.m.s42.8@gmail.com</a>
<a href=""mailto:r.o.s.a.n.n.aw.illi.ams4.2.8@gmail.com"">r.o.s.a.n.n.aw.illi.ams4.2.8@gmail.com</a>
<a href=""mailto:ro.s.an.n.a.wil.liam.s.4.28@gmail.com"">ro.s.an.n.a.wil.liam.s.4.28@gmail.com</a>
<a href=""mailto:r.os.a.nn.awil.lia.m.s.428@gmail.com"">r.os.a.nn.awil.lia.m.s.428@gmail.com</a>
<a href=""mailto:r.o.s.a.nn.awil.l.i.ams428@gmail.com"">r.o.s.a.nn.awil.l.i.ams428@gmail.com</a>
<a href=""mailto:rosa.n.na.willia.ms.4.2.8@gmail.com"">rosa.n.na.willia.ms.4.2.8@gmail.com</a>
<a href=""mailto:ro.sa.nna.w.illia.ms428@gmail.com"">ro.sa.nna.w.illia.ms428@gmail.com</a>
<a href=""mailto:r.o.s.an.naw.i.l.li.am.s.428@gmail.com"">r.o.s.an.naw.i.l.li.am.s.428@gmail.com</a>
<a href=""mailto:r.osa.nnaw.i.ll.i.a.m.s428@gmail.com"">r.osa.nnaw.i.ll.i.a.m.s428@gmail.com</a>
<a href=""mailto:r.o.sann.awil.li.a.ms.42.8@gmail.com"">r.o.sann.awil.li.a.ms.42.8@gmail.com</a>
<a href=""mailto:r.o.sa.n.n.aw.i.ll.i.a.ms4.2.8@gmail.com"">r.o.sa.n.n.aw.i.ll.i.a.ms4.2.8@gmail.com</a>
<a href=""mailto:r.o.s.an.na.w.illi.a.m.s4.2.8@gmail.com"">r.o.s.an.na.w.illi.a.m.s4.2.8@gmail.com</a>
<a href=""mailto:ros.a.nnaw.il.l.i.a.ms42.8@gmail.com"">ros.a.nnaw.il.l.i.a.ms42.8@gmail.com</a>
<a href=""mailto:r.osann.a.w.il.l.i.a.m.s.4.28@gmail.com"">r.osann.a.w.il.l.i.a.m.s.4.28@gmail.com</a>
<a href=""mailto:r.osa.nnaw.i.l.li.a.m.s4.2.8@gmail.com"">r.osa.nnaw.i.l.li.a.m.s4.2.8@gmail.com</a>
<a href=""mailto:ro.san.naw.illi.a.ms42.8@gmail.com"">ro.san.naw.illi.a.ms42.8@gmail.com</a>
<a href=""mailto:r.osa.nna.wi.llia.ms4.2.8@gmail.com"">r.osa.nna.wi.llia.ms4.2.8@gmail.com</a>
<a href=""mailto:r.o.san.na.w.i.l.liam.s42.8@gmail.com"">r.o.san.na.w.i.l.liam.s42.8@gmail.com</a>
<a href=""mailto:ro.s.a.nnawi.ll.iam.s.4.28@gmail.com"">ro.s.a.nnawi.ll.iam.s.4.28@gmail.com</a>
<a href=""mailto:ro.s.a.nnaw.illia.ms428@gmail.com"">ro.s.a.nnaw.illia.ms428@gmail.com</a>
<a href=""mailto:r.os.a.n.n.a.w.i.l.l.i.a.m.s.4.2.8@gmail.com"">r.os.a.n.n.a.w.i.l.l.i.a.m.s.4.2.8@gmail.com</a>
<a href=""mailto:ro.s.ann.aw.il.l.i.ams.4.28@gmail.com"">ro.s.ann.aw.il.l.i.ams.4.28@gmail.com</a>
<a href=""mailto:ro.s.an.n.awi.lliams.42.8@gmail.com"">ro.s.an.n.awi.lliams.42.8@gmail.com</a>
<a href=""mailto:rosanna.w.ill.ia.m.s4.28@gmail.com"">rosanna.w.ill.ia.m.s4.28@gmail.com</a>
<a href=""mailto:r.osa.n.n.a.w.i.l.l.i.am.s428@gmail.com"">r.osa.n.n.a.w.i.l.l.i.am.s428@gmail.com</a>
<a href=""mailto:r.o.s.a.nnawi.lli.am.s.4.2.8@gmail.com"">r.o.s.a.nnawi.lli.am.s.4.2.8@gmail.com</a>
<a href=""mailto:r.o.s.annaw.i.l.l.i.am.s42.8@gmail.com"">r.o.s.annaw.i.l.l.i.am.s42.8@gmail.com</a>
<a href=""mailto:r.o.s.ann.awil.l.i.ams.4.28@gmail.com"">r.o.s.ann.awil.l.i.ams.4.28@gmail.com</a>
<a href=""mailto:r.o.sa.n.n.a.w.i.l.l.iam.s4.2.8@gmail.com"">r.o.sa.n.n.a.w.i.l.l.iam.s4.2.8@gmail.com</a>
<a href=""mailto:rosa.nn.a.w.il.li.ams.4.28@gmail.com"">rosa.nn.a.w.il.li.ams.4.28@gmail.com</a>
<a href=""mailto:rosa.nna.wil.li.am.s42.8@gmail.com"">rosa.nna.wil.li.am.s42.8@gmail.com</a>
<a href=""mailto:r.osa.nn.a.w.il.l.i.a.ms4.28@gmail.com"">r.osa.nn.a.w.il.l.i.a.ms4.28@gmail.com</a>
<a href=""mailto:r.o.s.anna.w.ill.i.ams.4.28@gmail.com"">r.o.s.anna.w.ill.i.ams.4.28@gmail.com</a>
<a href=""mailto:ro.s.a.n.nawill.i.am.s.4.28@gmail.com"">ro.s.a.n.nawill.i.am.s.4.28@gmail.com</a>
<a href=""mailto:r.os.an.na.wil.li.a.ms.428@gmail.com"">r.os.an.na.wil.li.a.ms.428@gmail.com</a>
<a href=""mailto:r.os.a.nn.awil.li.ams.42.8@gmail.com"">r.os.a.nn.awil.li.ams.42.8@gmail.com</a>
<a href=""mailto:r.os.an.naw.i.lli.a.ms.4.28@gmail.com"">r.os.an.naw.i.lli.a.ms.4.28@gmail.com</a>
<a href=""mailto:r.osa.n.na.wi.ll.i.am.s4.28@gmail.com"">r.osa.n.na.wi.ll.i.am.s4.28@gmail.com</a>
<a href=""mailto:r.o.s.a.n.nawil.l.iams.428@gmail.com"">r.o.s.a.n.nawil.l.iams.428@gmail.com</a>
<a href=""mailto:ro.s.an.n.a.wi.ll.ia.m.s.4.28@gmail.com"">ro.s.an.n.a.wi.ll.ia.m.s.4.28@gmail.com</a>
<a href=""mailto:r.osa.nn.awillia.m.s428@gmail.com"">r.osa.nn.awillia.m.s428@gmail.com</a>
<a href=""mailto:r.osan.na.w.il.liams428@gmail.com"">r.osan.na.w.il.liams428@gmail.com</a>
<a href=""mailto:r.o.san.n.a.wi.l.li.a.m.s.42.8@gmail.com"">r.o.san.n.a.wi.l.li.a.m.s.42.8@gmail.com</a>
<a href=""mailto:r.o.sa.nnaw.i.ll.iams.4.2.8@gmail.com"">r.o.sa.nnaw.i.ll.iams.4.2.8@gmail.com</a>
<a href=""mailto:r.o.s.an.n.awill.iams4.28@gmail.com"">r.o.s.an.n.awill.iams4.28@gmail.com</a>
<a href=""mailto:ros.an.naw.illi.am.s4.2.8@gmail.com"">ros.an.naw.illi.am.s4.2.8@gmail.com</a>
<a href=""mailto:rosan.n.a.w.illi.am.s.428@gmail.com"">rosan.n.a.w.illi.am.s.428@gmail.com</a>
<a href=""mailto:r.os.an.n.a.wi.l.l.i.ams.428@gmail.com"">r.os.an.n.a.wi.l.l.i.ams.428@gmail.com</a>
<a href=""mailto:rosanna.w.il.l.i.a.m.s428@gmail.com"">rosanna.w.il.l.i.a.m.s428@gmail.com</a>
<a href=""mailto:r.o.sa.nna.w.i.lliams.42.8@gmail.com"">r.o.sa.nna.w.i.lliams.42.8@gmail.com</a>
<a href=""mailto:ro.s.a.n.n.aw.i.ll.i.ams4.2.8@gmail.com"">ro.s.a.n.n.aw.i.ll.i.ams4.2.8@gmail.com</a>
<a href=""mailto:r.o.san.n.a.w.il.li.ams428@gmail.com"">r.o.san.n.a.w.il.li.ams428@gmail.com</a>
<a href=""mailto:ros.an.n.a.wi.l.l.i.am.s4.2.8@gmail.com"">ros.an.n.a.wi.l.l.i.am.s4.2.8@gmail.com</a>
<a href=""mailto:ro.s.an.naw.illi.ams.42.8@gmail.com"">ro.s.an.naw.illi.ams.42.8@gmail.com</a>
<a href=""mailto:r.o.s.a.nn.aw.i.lliam.s.4.28@gmail.com"">r.o.s.a.nn.aw.i.lliam.s.4.28@gmail.com</a>
<a href=""mailto:ro.s.annaw.il.li.ams.42.8@gmail.com"">ro.s.annaw.il.li.ams.42.8@gmail.com</a>
<a href=""mailto:r.o.s.a.n.n.a.w.i.l.liams4.28@gmail.com"">r.o.s.a.n.n.a.w.i.l.liams4.28@gmail.com</a>
<a href=""mailto:r.o.s.a.nnaw.i.l.l.iams.4.2.8@gmail.com"">r.o.s.a.nnaw.i.l.l.iams.4.2.8@gmail.com</a>
<a href=""mailto:ro.s.a.n.nawi.lli.ams42.8@gmail.com"">ro.s.a.n.nawi.lli.ams42.8@gmail.com</a>
<a href=""mailto:rosa.n.n.a.wi.lli.ams.428@gmail.com"">rosa.n.n.a.wi.lli.ams.428@gmail.com</a>
<a href=""mailto:ro.s.a.nn.a.willi.am.s.4.2.8@gmail.com"">ro.s.a.nn.a.willi.am.s.4.2.8@gmail.com</a>
<a href=""mailto:r.o.s.a.nn.aw.ill.iam.s.42.8@gmail.com"">r.o.s.a.nn.aw.ill.iam.s.42.8@gmail.com</a>
<a href=""mailto:rosannawil.li.am.s428@gmail.com"">rosannawil.li.am.s428@gmail.com</a>
<a href=""mailto:r.o.s.a.nn.a.w.illi.a.ms4.2.8@gmail.com"">r.o.s.a.nn.a.w.illi.a.ms4.2.8@gmail.com</a>
<a href=""mailto:ro.s.an.n.aw.i.l.li.ams.428@gmail.com"">ro.s.an.n.aw.i.l.li.ams.428@gmail.com</a>
<a href=""mailto:r.o.s.an.naw.ill.iam.s4.2.8@gmail.com"">r.o.s.an.naw.ill.iam.s4.2.8@gmail.com</a>
<a href=""mailto:ro.sa.nna.w.il.l.i.a.ms4.2.8@gmail.com"">ro.sa.nna.w.il.l.i.a.ms4.2.8@gmail.com</a>
<a href=""mailto:r.os.a.n.naw.i.ll.ia.ms4.2.8@gmail.com"">r.os.a.n.naw.i.ll.ia.ms4.2.8@gmail.com</a>
<a href=""mailto:r.os.an.na.wil.l.i.ams.4.2.8@gmail.com"">r.os.an.na.wil.l.i.ams.4.2.8@gmail.com</a>
<a href=""mailto:ros.a.n.n.aw.i.l.l.iam.s.4.2.8@gmail.com"">ros.a.n.n.aw.i.l.l.iam.s.4.2.8@gmail.com</a>
<a href=""mailto:ros.an.na.wil.l.i.a.m.s.4.2.8@gmail.com"">ros.an.na.wil.l.i.a.m.s.4.2.8@gmail.com</a>
<a href=""mailto:r.osanna.willi.a.ms.428@gmail.com"">r.osanna.willi.a.ms.428@gmail.com</a>
<a href=""mailto:r.o.s.a.nn.aw.il.l.iam.s4.2.8@gmail.com"">r.o.s.a.nn.aw.il.l.iam.s4.2.8@gmail.com</a>
<a href=""mailto:r.os.a.nnawi.lliam.s.4.2.8@gmail.com"">r.os.a.nnawi.lliam.s.4.2.8@gmail.com</a>
<a href=""mailto:rosa.n.naw.i.l.li.am.s4.2.8@gmail.com"">rosa.n.naw.i.l.li.am.s4.2.8@gmail.com</a>
<a href=""mailto:r.osan.naw.i.l.li.a.m.s.4.28@gmail.com"">r.osan.naw.i.l.li.a.m.s.4.28@gmail.com</a>
<a href=""mailto:rosanna.w.i.l.lia.m.s428@gmail.com"">rosanna.w.i.l.lia.m.s428@gmail.com</a>
<a href=""mailto:r.osa.nn.aw.ill.iam.s428@gmail.com"">r.osa.nn.aw.ill.iam.s428@gmail.com</a>
<a href=""mailto:ro.s.a.nn.aw.illi.ams.428@gmail.com"">ro.s.a.nn.aw.illi.ams.428@gmail.com</a>
<a href=""mailto:r.os.a.nnaw.il.l.ia.m.s.428@gmail.com"">r.os.a.nnaw.il.l.ia.m.s.428@gmail.com</a>
<a href=""mailto:r.o.san.n.a.wi.l.lia.m.s.428@gmail.com"">r.o.san.n.a.wi.l.lia.m.s.428@gmail.com</a>
<a href=""mailto:ro.sa.nn.awil.li.a.m.s428@gmail.com"">ro.sa.nn.awil.li.a.m.s428@gmail.com</a>
<a href=""mailto:r.os.an.n.a.wi.l.l.iams.4.2.8@gmail.com"">r.os.an.n.a.wi.l.l.iams.4.2.8@gmail.com</a>
<a href=""mailto:r.o.s.a.n.n.aw.i.ll.i.ams.4.2.8@gmail.com"">r.o.s.a.n.n.aw.i.ll.i.ams.4.2.8@gmail.com</a>
<a href=""mailto:r.o.s.a.n.na.willi.am.s42.8@gmail.com"">r.o.s.a.n.na.willi.am.s42.8@gmail.com</a>
<a href=""mailto:ro.s.annaw.i.l.l.ia.m.s.4.2.8@gmail.com"">ro.s.annaw.i.l.l.ia.m.s.4.2.8@gmail.com</a>
<a href=""mailto:r.os.a.n.na.will.i.ams.42.8@gmail.com"">r.os.a.n.na.will.i.ams.42.8@gmail.com</a>
<a href=""mailto:ro.sannawi.l.l.ia.ms4.2.8@gmail.com"">ro.sannawi.l.l.ia.ms4.2.8@gmail.com</a>
<a href=""mailto:r.o.sannaw.il.liam.s.4.2.8@gmail.com"">r.o.sannaw.il.liam.s.4.2.8@gmail.com</a>
<a href=""mailto:ro.s.a.nnawil.li.ams4.28@gmail.com"">ro.s.a.nnawil.li.ams4.28@gmail.com</a>
<a href=""mailto:ros.a.nn.aw.i.llia.m.s4.28@gmail.com"">ros.a.nn.aw.i.llia.m.s4.28@gmail.com</a>
<a href=""mailto:r.osanna.williams.42.8@gmail.com"">r.osanna.williams.42.8@gmail.com</a>
<a href=""mailto:ro.sann.a.wil.li.a.m.s.4.28@gmail.com"">ro.sann.a.wil.li.a.m.s.4.28@gmail.com</a>
<a href=""mailto:r.o.san.na.will.iams.4.28@gmail.com"">r.o.san.na.will.iams.4.28@gmail.com</a>
<a href=""mailto:r.os.an.na.wi.llia.ms.42.8@gmail.com"">r.os.an.na.wi.llia.ms.42.8@gmail.com</a>
<a href=""mailto:r.os.ann.a.wi.l.lia.m.s42.8@gmail.com"">r.os.ann.a.wi.l.lia.m.s42.8@gmail.com</a>
<a href=""mailto:r.o.s.an.nawil.l.i.a.ms.42.8@gmail.com"">r.o.s.an.nawil.l.i.a.ms.42.8@gmail.com</a>
<a href=""mailto:rosa.n.n.a.w.i.ll.i.a.ms.4.28@gmail.com"">rosa.n.n.a.w.i.ll.i.a.ms.4.28@gmail.com</a>
<a href=""mailto:r.o.s.a.n.na.wi.l.li.ams428@gmail.com"">r.o.s.a.n.na.wi.l.li.ams428@gmail.com</a>
<a href=""mailto:r.osan.nawilli.a.m.s.428@gmail.com"">r.osan.nawilli.a.m.s.428@gmail.com</a>
<a href=""mailto:rosa.n.na.will.iam.s.42.8@gmail.com"">rosa.n.na.will.iam.s.42.8@gmail.com</a>
<a href=""mailto:r.os.a.n.n.aw.il.li.am.s4.2.8@gmail.com"">r.os.a.n.n.aw.il.li.am.s4.2.8@gmail.com</a>
<a href=""mailto:ros.anna.w.i.l.li.a.ms.42.8@gmail.com"">ros.anna.w.i.l.li.a.ms.42.8@gmail.com</a>
<a href=""mailto:rosann.a.wil.li.a.m.s.4.2.8@gmail.com"">rosann.a.wil.li.a.m.s.4.2.8@gmail.com</a>
<a href=""mailto:r.osa.n.na.w.i.ll.ia.ms42.8@gmail.com"">r.osa.n.na.w.i.ll.ia.ms42.8@gmail.com</a>
<a href=""mailto:rosa.n.n.aw.il.lia.ms428@gmail.com"">rosa.n.n.aw.il.lia.ms428@gmail.com</a>
<a href=""mailto:r.o.s.annawi.l.l.i.am.s4.2.8@gmail.com"">r.o.s.annawi.l.l.i.am.s4.2.8@gmail.com</a>
<a href=""mailto:r.os.annawil.liam.s4.2.8@gmail.com"">r.os.annawil.liam.s4.2.8@gmail.com</a>
<a href=""mailto:ros.an.nawi.ll.i.a.m.s.4.2.8@gmail.com"">ros.an.nawi.ll.i.a.m.s.4.2.8@gmail.com</a>
<a href=""mailto:r.o.san.naw.i.l.l.iam.s4.28@gmail.com"">r.o.san.naw.i.l.l.iam.s4.28@gmail.com</a>
<a href=""mailto:rosa.n.n.a.w.il.liams428@gmail.com"">rosa.n.n.a.w.il.liams428@gmail.com</a>
<a href=""mailto:r.os.a.nn.aw.i.lli.a.m.s42.8@gmail.com"">r.os.a.nn.aw.i.lli.a.m.s42.8@gmail.com</a>
<a href=""mailto:r.o.s.a.n.n.awi.l.l.iam.s.428@gmail.com"">r.o.s.a.n.n.awi.l.l.iam.s.428@gmail.com</a>
<a href=""mailto:r.o.s.a.nnawi.lli.a.ms.4.28@gmail.com"">r.o.s.a.nnawi.lli.a.ms.4.28@gmail.com</a>
<a href=""mailto:ro.s.an.n.a.wi.l.liam.s.428@gmail.com"">ro.s.an.n.a.wi.l.liam.s.428@gmail.com</a>
<a href=""mailto:r.osa.nna.wi.ll.i.ams4.2.8@gmail.com"">r.osa.nna.wi.ll.i.ams4.2.8@gmail.com</a>
<a href=""mailto:rosanna.wil.li.a.m.s4.28@gmail.com"">rosanna.wil.li.a.m.s4.28@gmail.com</a>
<a href=""mailto:hafsatmaidala20@gmail.com"">hafsatmaidala20@gmail.com</a>
<a href=""mailto:h.a.f.sa.t.ma.ida.la.2.0@gmail.com"">h.a.f.sa.t.ma.ida.la.2.0@gmail.com</a>
<a href=""mailto:haf.sa.t.maid.al.a.2.0@gmail.com"">haf.sa.t.maid.al.a.2.0@gmail.com</a>
<a href=""mailto:ha.f.s.a.tm.a.i.dala.20@gmail.com"">ha.f.s.a.tm.a.i.dala.20@gmail.com</a>
<a href=""mailto:haf.s.a.tm.a.i.da.l.a2.0@gmail.com"">haf.s.a.tm.a.i.da.l.a2.0@gmail.com</a>
<a href=""mailto:ha.f.s.atm.a.id.a.la20@gmail.com"">ha.f.s.atm.a.id.a.la20@gmail.com</a>
<a href=""mailto:hafs.atm.aida.la.20@gmail.com"">hafs.atm.aida.la.20@gmail.com</a>
<a href=""mailto:h.a.f.s.at.m.a.i.da.la2.0@gmail.com"">h.a.f.s.at.m.a.i.da.la2.0@gmail.com</a>
<a href=""mailto:h.af.sa.tma.i.d.a.l.a2.0@gmail.com"">h.af.sa.tma.i.d.a.l.a2.0@gmail.com</a>
<a href=""mailto:haf.sa.t.m.a.idala2.0@gmail.com"">haf.sa.t.m.a.idala2.0@gmail.com</a>
<a href=""mailto:h.afs.a.t.maid.a.la2.0@gmail.com"">h.afs.a.t.maid.a.la2.0@gmail.com</a>
<a href=""mailto:ha.f.sa.t.m.a.id.a.l.a.2.0@gmail.com"">ha.f.sa.t.m.a.id.a.l.a.2.0@gmail.com</a>
<a href=""mailto:h.afsat.m.ai.d.al.a2.0@gmail.com"">h.afsat.m.ai.d.al.a2.0@gmail.com</a>
<a href=""mailto:h.afsatma.idala20@gmail.com"">h.afsatma.idala20@gmail.com</a>
<a href=""mailto:ha.fsat.mai.d.a.la20@gmail.com"">ha.fsat.mai.d.a.la20@gmail.com</a>
<a href=""mailto:ha.fs.at.m.ai.dal.a.2.0@gmail.com"">ha.fs.at.m.ai.dal.a.2.0@gmail.com</a>
<a href=""mailto:ha.fsa.t.m.ai.dal.a.2.0@gmail.com"">ha.fsa.t.m.ai.dal.a.2.0@gmail.com</a>
<a href=""mailto:ha.fs.atma.i.dala.2.0@gmail.com"">ha.fs.atma.i.dala.2.0@gmail.com</a>
<a href=""mailto:hafsa.t.m.a.i.d.a.la.20@gmail.com"">hafsa.t.m.a.i.d.a.la.20@gmail.com</a>
<a href=""mailto:ha.fs.atmai.d.a.la2.0@gmail.com"">ha.fs.atmai.d.a.la2.0@gmail.com</a>
<a href=""mailto:h.a.fs.a.tma.i.dala20@gmail.com"">h.a.fs.a.tma.i.dala20@gmail.com</a>
<a href=""mailto:h.a.fs.atm.a.i.d.a.la.20@gmail.com"">h.a.fs.atm.a.i.d.a.la.20@gmail.com</a>
<a href=""mailto:ha.fs.a.t.maida.l.a.2.0@gmail.com"">ha.fs.a.t.maida.l.a.2.0@gmail.com</a>
<a href=""mailto:h.a.f.satm.a.i.da.la20@gmail.com"">h.a.f.satm.a.i.da.la20@gmail.com</a>
<a href=""mailto:hafs.a.t.maidal.a.2.0@gmail.com"">hafs.a.t.maidal.a.2.0@gmail.com</a>
<a href=""mailto:hafs.atm.a.i.d.a.l.a2.0@gmail.com"">hafs.atm.a.i.d.a.l.a2.0@gmail.com</a>
<a href=""mailto:h.a.fs.a.tm.a.i.d.a.la.2.0@gmail.com"">h.a.fs.a.tm.a.i.d.a.la.2.0@gmail.com</a>
<a href=""mailto:h.a.fsa.tm.aid.ala20@gmail.com"">h.a.fsa.tm.aid.ala20@gmail.com</a>
<a href=""mailto:h.a.f.sat.m.ai.dala2.0@gmail.com"">h.a.f.sat.m.ai.dala2.0@gmail.com</a>
<a href=""mailto:ha.f.s.a.t.maid.a.la.2.0@gmail.com"">ha.f.s.a.t.maid.a.la.2.0@gmail.com</a>
<a href=""mailto:ha.f.satma.i.d.a.la.2.0@gmail.com"">ha.f.satma.i.d.a.la.2.0@gmail.com</a>
<a href=""mailto:hafsatmaida.l.a20@gmail.com"">hafsatmaida.l.a20@gmail.com</a>
<a href=""mailto:hafsa.tma.id.a.la.2.0@gmail.com"">hafsa.tma.id.a.la.2.0@gmail.com</a>
<a href=""mailto:h.afs.a.t.m.a.i.dal.a.2.0@gmail.com"">h.afs.a.t.m.a.i.dal.a.2.0@gmail.com</a>
<a href=""mailto:ha.f.sa.tmai.d.ala.20@gmail.com"">ha.f.sa.tmai.d.ala.20@gmail.com</a>
<a href=""mailto:hafsatm.ai.d.al.a.20@gmail.com"">hafsatm.ai.d.al.a.20@gmail.com</a>
<a href=""mailto:h.a.f.sa.tm.a.i.da.la20@gmail.com"">h.a.f.sa.tm.a.i.da.la20@gmail.com</a>
<a href=""mailto:hafs.at.m.a.i.d.al.a.20@gmail.com"">hafs.at.m.a.i.d.al.a.20@gmail.com</a>
<a href=""mailto:ha.f.s.a.tm.a.i.d.al.a.2.0@gmail.com"">ha.f.s.a.tm.a.i.d.al.a.2.0@gmail.com</a>
<a href=""mailto:ha.fsa.tm.aidala20@gmail.com"">ha.fsa.tm.aidala20@gmail.com</a>
<a href=""mailto:h.af.s.atm.ai.d.al.a.20@gmail.com"">h.af.s.atm.ai.d.al.a.20@gmail.com</a>
<a href=""mailto:ha.fsa.tm.aidala2.0@gmail.com"">ha.fsa.tm.aidala2.0@gmail.com</a>
<a href=""mailto:ha.f.sa.t.m.a.i.dala2.0@gmail.com"">ha.f.sa.t.m.a.i.dala2.0@gmail.com</a>
<a href=""mailto:h.a.f.satmaid.al.a20@gmail.com"">h.a.f.satmaid.al.a20@gmail.com</a>
<a href=""mailto:h.af.sa.t.ma.idala2.0@gmail.com"">h.af.sa.t.ma.idala2.0@gmail.com</a>
<a href=""mailto:h.af.s.at.m.a.i.dal.a.20@gmail.com"">h.af.s.at.m.a.i.dal.a.20@gmail.com</a>
<a href=""mailto:haf.s.atma.i.dal.a2.0@gmail.com"">haf.s.atma.i.dal.a2.0@gmail.com</a>
<a href=""mailto:ha.fsa.tm.ai.dala20@gmail.com"">ha.fsa.tm.ai.dala20@gmail.com</a>
<a href=""mailto:h.a.fs.a.tm.a.i.dala20@gmail.com"">h.a.fs.a.tm.a.i.dala20@gmail.com</a>
<a href=""mailto:haf.sat.maida.l.a20@gmail.com"">haf.sat.maida.l.a20@gmail.com</a>
<a href=""mailto:ha.f.s.atm.ai.d.a.la2.0@gmail.com"">ha.f.s.atm.ai.d.a.la2.0@gmail.com</a>
<a href=""mailto:ha.f.s.a.tmaid.a.l.a20@gmail.com"">ha.f.s.a.tmaid.a.l.a20@gmail.com</a>
<a href=""mailto:h.af.s.a.t.ma.ida.l.a.2.0@gmail.com"">h.af.s.a.t.ma.ida.l.a.2.0@gmail.com</a>
<a href=""mailto:h.a.f.s.a.t.m.aida.la.20@gmail.com"">h.a.f.s.a.t.m.aida.la.20@gmail.com</a>
<a href=""mailto:h.afs.a.tma.idala.2.0@gmail.com"">h.afs.a.tma.idala.2.0@gmail.com</a>
<a href=""mailto:hafsa.tm.ai.dal.a.20@gmail.com"">hafsa.tm.ai.dal.a.20@gmail.com</a>
<a href=""mailto:hafs.a.tmaid.ala20@gmail.com"">hafs.a.tmaid.ala20@gmail.com</a>
<a href=""mailto:h.a.fsat.maida.l.a.2.0@gmail.com"">h.a.fsat.maida.l.a.2.0@gmail.com</a>
<a href=""mailto:haf.sa.t.mai.dal.a.2.0@gmail.com"">haf.sa.t.mai.dal.a.2.0@gmail.com</a>
<a href=""mailto:ha.f.s.a.t.m.ai.d.a.l.a.20@gmail.com"">ha.f.s.a.t.m.ai.d.a.l.a.20@gmail.com</a>
<a href=""mailto:ha.f.s.a.tm.a.i.da.la20@gmail.com"">ha.f.s.a.tm.a.i.da.la20@gmail.com</a>
<a href=""mailto:ha.fsatmai.dal.a2.0@gmail.com"">ha.fsatmai.dal.a2.0@gmail.com</a>
<a href=""mailto:h.afsat.ma.i.d.a.la.2.0@gmail.com"">h.afsat.ma.i.d.a.la.2.0@gmail.com</a>
<a href=""mailto:h.a.f.satm.a.ida.l.a.2.0@gmail.com"">h.a.f.satm.a.ida.l.a.2.0@gmail.com</a>
<a href=""mailto:h.a.fs.a.tma.id.a.l.a2.0@gmail.com"">h.a.fs.a.tma.id.a.l.a2.0@gmail.com</a>
<a href=""mailto:h.a.fsatmaid.a.la20@gmail.com"">h.a.fsatmaid.a.la20@gmail.com</a>
<a href=""mailto:h.a.fs.a.t.m.aida.l.a.20@gmail.com"">h.a.fs.a.t.m.aida.l.a.20@gmail.com</a>
<a href=""mailto:ha.fsat.m.ai.da.la20@gmail.com"">ha.fsat.m.ai.da.la20@gmail.com</a>
<a href=""mailto:haf.s.a.t.m.a.idal.a2.0@gmail.com"">haf.s.a.t.m.a.idal.a2.0@gmail.com</a>
<a href=""mailto:haf.s.a.tmaidal.a2.0@gmail.com"">haf.s.a.tmaidal.a2.0@gmail.com</a>
<a href=""mailto:ha.f.sa.tm.ai.dala.2.0@gmail.com"">ha.f.sa.tm.ai.dala.2.0@gmail.com</a>
<a href=""mailto:ha.fs.a.tm.a.i.d.al.a.2.0@gmail.com"">ha.fs.a.tm.a.i.d.al.a.2.0@gmail.com</a>
<a href=""mailto:h.a.fs.a.t.ma.ida.l.a.20@gmail.com"">h.a.fs.a.t.ma.ida.l.a.20@gmail.com</a>
<a href=""mailto:haf.s.atm.a.idal.a.20@gmail.com"">haf.s.atm.a.idal.a.20@gmail.com</a>
<a href=""mailto:h.a.fsa.t.m.aidal.a.2.0@gmail.com"">h.a.fsa.t.m.aidal.a.2.0@gmail.com</a>
<a href=""mailto:h.afs.atma.i.dala.2.0@gmail.com"">h.afs.atma.i.dala.2.0@gmail.com</a>
<a href=""mailto:h.a.f.sat.m.a.idal.a20@gmail.com"">h.a.f.sat.m.a.idal.a20@gmail.com</a>
<a href=""mailto:h.afs.atma.i.d.a.la2.0@gmail.com"">h.afs.atma.i.d.a.la2.0@gmail.com</a>
<a href=""mailto:h.a.fs.a.tm.ai.da.l.a.2.0@gmail.com"">h.a.fs.a.tm.ai.da.l.a.2.0@gmail.com</a>
<a href=""mailto:ha.fs.a.tmaid.ala2.0@gmail.com"">ha.fs.a.tmaid.ala2.0@gmail.com</a>
<a href=""mailto:haf.s.a.t.m.ai.d.a.l.a.20@gmail.com"">haf.s.a.t.m.ai.d.a.l.a.20@gmail.com</a>
<a href=""mailto:ha.f.s.at.m.ai.dala2.0@gmail.com"">ha.f.s.at.m.ai.dala2.0@gmail.com</a>
<a href=""mailto:ha.fsa.t.m.a.i.dal.a20@gmail.com"">ha.fsa.t.m.a.i.dal.a20@gmail.com</a>
<a href=""mailto:ha.fs.at.m.a.id.a.la2.0@gmail.com"">ha.fs.at.m.a.id.a.la2.0@gmail.com</a>
<a href=""mailto:ha.fsat.ma.ida.la2.0@gmail.com"">ha.fsat.ma.ida.la2.0@gmail.com</a>
<a href=""mailto:hafs.atmaid.a.l.a.20@gmail.com"">hafs.atmaid.a.l.a.20@gmail.com</a>
<a href=""mailto:h.afs.a.t.m.a.i.d.a.la2.0@gmail.com"">h.afs.a.t.m.a.i.d.a.la2.0@gmail.com</a>
<a href=""mailto:ha.f.s.atm.ai.da.l.a.20@gmail.com"">ha.f.s.atm.ai.da.l.a.20@gmail.com</a>
<a href=""mailto:h.a.fsa.tmaida.l.a20@gmail.com"">h.a.fsa.tmaida.l.a20@gmail.com</a>
<a href=""mailto:ha.fsatma.i.da.la.20@gmail.com"">ha.fsatma.i.da.la.20@gmail.com</a>
<a href=""mailto:h.af.s.at.mai.d.ala.20@gmail.com"">h.af.s.at.mai.d.ala.20@gmail.com</a>
<a href=""mailto:hafs.a.tm.a.id.al.a2.0@gmail.com"">hafs.a.tm.a.id.al.a2.0@gmail.com</a>
<a href=""mailto:h.af.satma.i.d.a.la.2.0@gmail.com"">h.af.satma.i.d.a.la.2.0@gmail.com</a>
<a href=""mailto:h.af.s.a.t.ma.i.da.l.a2.0@gmail.com"">h.af.s.a.t.ma.i.da.l.a2.0@gmail.com</a>
<a href=""mailto:haf.s.a.tma.ida.la2.0@gmail.com"">haf.s.a.tma.ida.la2.0@gmail.com</a>
<a href=""mailto:h.a.f.sa.tma.i.dala2.0@gmail.com"">h.a.f.sa.tma.i.dala2.0@gmail.com</a>
<a href=""mailto:ha.fsa.tm.aidal.a.20@gmail.com"">ha.fsa.tm.aidal.a.20@gmail.com</a>
<a href=""mailto:ha.f.sa.tma.ida.l.a.2.0@gmail.com"">ha.f.sa.tma.ida.l.a.2.0@gmail.com</a>
<a href=""mailto:ha.fs.a.tma.id.ala.20@gmail.com"">ha.fs.a.tma.id.ala.20@gmail.com</a>
<a href=""mailto:h.af.sa.tmaid.ala20@gmail.com"">h.af.sa.tmaid.ala20@gmail.com</a>
<a href=""mailto:ha.f.sa.tmaid.a.l.a.20@gmail.com"">ha.f.sa.tmaid.a.l.a.20@gmail.com</a>
<a href=""mailto:h.a.f.s.a.tma.ida.l.a20@gmail.com"">h.a.f.s.a.tma.ida.l.a20@gmail.com</a>
<a href=""mailto:ha.f.s.at.m.ai.da.la2.0@gmail.com"">ha.f.s.at.m.ai.da.la2.0@gmail.com</a>
<a href=""mailto:ha.f.s.at.mai.d.al.a2.0@gmail.com"">ha.f.s.at.mai.d.al.a2.0@gmail.com</a>
<a href=""mailto:h.a.f.sat.m.a.i.dala20@gmail.com"">h.a.f.sat.m.a.i.dala20@gmail.com</a>
<a href=""mailto:ha.f.satm.aid.a.la2.0@gmail.com"">ha.f.satm.aid.a.la2.0@gmail.com</a>
<a href=""mailto:ha.f.satm.a.i.da.l.a2.0@gmail.com"">ha.f.satm.a.i.da.l.a2.0@gmail.com</a>
<a href=""mailto:ha.fsa.tm.ai.d.a.la.2.0@gmail.com"">ha.fsa.tm.ai.d.a.la.2.0@gmail.com</a>
<a href=""mailto:haf.s.atma.id.al.a20@gmail.com"">haf.s.atma.id.al.a20@gmail.com</a>
<a href=""mailto:h.af.sat.ma.i.dal.a.20@gmail.com"">h.af.sat.ma.i.dal.a.20@gmail.com</a>
<a href=""mailto:h.a.fsa.t.ma.idal.a20@gmail.com"">h.a.fsa.t.ma.idal.a20@gmail.com</a>
<a href=""mailto:h.afsatm.aida.l.a.20@gmail.com"">h.afsatm.aida.l.a.20@gmail.com</a>
<a href=""mailto:haf.s.a.tma.i.dal.a20@gmail.com"">haf.s.a.tma.i.dal.a20@gmail.com</a>
<a href=""mailto:h.a.f.s.a.t.maida.la2.0@gmail.com"">h.a.f.s.a.t.maida.la2.0@gmail.com</a>
<a href=""mailto:ha.fs.a.tma.i.d.a.l.a20@gmail.com"">ha.fs.a.tma.i.d.a.l.a20@gmail.com</a>
<a href=""mailto:haf.sa.tma.idal.a20@gmail.com"">haf.sa.tma.idal.a20@gmail.com</a>
<a href=""mailto:h.a.fs.at.m.ai.d.a.la20@gmail.com"">h.a.fs.at.m.ai.d.a.la20@gmail.com</a>
<a href=""mailto:ha.f.sat.ma.i.d.a.la.2.0@gmail.com"">ha.f.sat.ma.i.d.a.la.2.0@gmail.com</a>
<a href=""mailto:hafsa.tma.id.al.a.20@gmail.com"">hafsa.tma.id.al.a.20@gmail.com</a>
<a href=""mailto:haf.s.a.tm.a.idala.20@gmail.com"">haf.s.a.tm.a.idala.20@gmail.com</a>
<a href=""mailto:h.a.fs.a.tma.i.dala.20@gmail.com"">h.a.fs.a.tma.i.dala.20@gmail.com</a>
<a href=""mailto:ha.fsa.tmaid.a.l.a2.0@gmail.com"">ha.fsa.tmaid.a.l.a2.0@gmail.com</a>
<a href=""mailto:ha.fsatmaid.ala.2.0@gmail.com"">ha.fsatmaid.ala.2.0@gmail.com</a>
<a href=""mailto:ha.fsa.t.maida.la.20@gmail.com"">ha.fsa.t.maida.la.20@gmail.com</a>
<a href=""mailto:h.afs.atmaida.l.a20@gmail.com"">h.afs.atmaida.l.a20@gmail.com</a>
<a href=""mailto:ha.fsa.tm.a.id.a.la20@gmail.com"">ha.fsa.tm.a.id.a.la20@gmail.com</a>
<a href=""mailto:h.a.f.s.at.ma.id.a.la.2.0@gmail.com"">h.a.f.s.at.ma.id.a.la.2.0@gmail.com</a>
<a href=""mailto:h.af.s.a.tmai.d.a.la.20@gmail.com"">h.af.s.a.tmai.d.a.la.20@gmail.com</a>
<a href=""mailto:h.a.fs.a.t.m.ai.d.a.l.a.20@gmail.com"">h.a.fs.a.t.m.ai.d.a.l.a.20@gmail.com</a>
<a href=""mailto:h.a.fs.a.tm.aida.la.2.0@gmail.com"">h.a.fs.a.tm.aida.la.2.0@gmail.com</a>
<a href=""mailto:ha.fsat.m.a.i.da.la.2.0@gmail.com"">ha.fsat.m.a.i.da.la.2.0@gmail.com</a>
<a href=""mailto:ha.fs.a.tma.i.d.al.a.2.0@gmail.com"">ha.fs.a.tma.i.d.al.a.2.0@gmail.com</a>
<a href=""mailto:ha.fsa.t.m.a.i.da.l.a20@gmail.com"">ha.fsa.t.m.a.i.da.l.a20@gmail.com</a>
<a href=""mailto:h.af.satm.ai.da.l.a20@gmail.com"">h.af.satm.ai.da.l.a20@gmail.com</a>
<a href=""mailto:h.afsa.t.ma.i.d.a.la20@gmail.com"">h.afsa.t.ma.i.d.a.la20@gmail.com</a>
<a href=""mailto:ha.fsat.m.a.ida.la2.0@gmail.com"">ha.fsat.m.a.ida.la2.0@gmail.com</a>
<a href=""mailto:h.af.s.atm.a.i.dal.a20@gmail.com"">h.af.s.atm.a.i.dal.a20@gmail.com</a>
<a href=""mailto:hafs.a.tm.a.i.d.ala20@gmail.com"">hafs.a.tm.a.i.d.ala20@gmail.com</a>
<a href=""mailto:h.a.f.s.a.tmai.d.al.a20@gmail.com"">h.a.f.s.a.tmai.d.al.a20@gmail.com</a>
<a href=""mailto:h.afsatm.aid.ala20@gmail.com"">h.afsatm.aid.ala20@gmail.com</a>
<a href=""mailto:h.a.fsa.tm.ai.dala2.0@gmail.com"">h.a.fsa.tm.ai.dala2.0@gmail.com</a>
<a href=""mailto:h.a.f.sa.t.m.ai.d.a.l.a.2.0@gmail.com"">h.a.f.sa.t.m.ai.d.a.l.a.2.0@gmail.com</a>
<a href=""mailto:haf.s.a.t.mai.d.al.a20@gmail.com"">haf.s.a.t.mai.d.al.a20@gmail.com</a>
<a href=""mailto:h.a.f.satmai.da.la.2.0@gmail.com"">h.a.f.satmai.da.la.2.0@gmail.com</a>
<a href=""mailto:haf.s.at.ma.i.d.a.la.2.0@gmail.com"">haf.s.at.ma.i.d.a.la.2.0@gmail.com</a>
<a href=""mailto:h.afs.a.t.m.a.id.a.l.a2.0@gmail.com"">h.afs.a.t.m.a.id.a.l.a2.0@gmail.com</a>
<a href=""mailto:hafsa.tm.aida.la.20@gmail.com"">hafsa.tm.aida.la.20@gmail.com</a>
<a href=""mailto:haf.sa.t.m.a.i.d.a.l.a.2.0@gmail.com"">haf.sa.t.m.a.i.d.a.l.a.2.0@gmail.com</a>
<a href=""mailto:ha.fs.a.t.ma.i.d.al.a2.0@gmail.com"">ha.fs.a.t.ma.i.d.al.a2.0@gmail.com</a>
<a href=""mailto:ha.fsa.tma.i.da.l.a2.0@gmail.com"">ha.fsa.tma.i.da.l.a2.0@gmail.com</a>
<a href=""mailto:hafs.a.tm.a.i.dal.a.2.0@gmail.com"">hafs.a.tm.a.i.dal.a.2.0@gmail.com</a>
<a href=""mailto:h.af.s.a.tm.a.i.d.ala.2.0@gmail.com"">h.af.s.a.tm.a.i.d.ala.2.0@gmail.com</a>
<a href=""mailto:h.afs.a.t.mai.da.la.20@gmail.com"">h.afs.a.t.mai.da.la.20@gmail.com</a>
<a href=""mailto:ha.fs.a.t.m.ai.d.ala.20@gmail.com"">ha.fs.a.t.m.ai.d.ala.20@gmail.com</a>
<a href=""mailto:haf.sa.t.ma.ida.la.2.0@gmail.com"">haf.sa.t.ma.ida.la.2.0@gmail.com</a>
<a href=""mailto:h.af.s.at.m.aid.a.la.20@gmail.com"">h.af.s.at.m.aid.a.la.20@gmail.com</a>
<a href=""mailto:h.af.sat.mai.d.al.a2.0@gmail.com"">h.af.sat.mai.d.al.a2.0@gmail.com</a>
<a href=""mailto:h.a.f.satm.a.ida.la.2.0@gmail.com"">h.a.f.satm.a.ida.la.2.0@gmail.com</a>
<a href=""mailto:h.afsa.t.ma.i.d.a.l.a2.0@gmail.com"">h.afsa.t.ma.i.d.a.l.a2.0@gmail.com</a>
<a href=""mailto:h.afs.a.tm.aidal.a.20@gmail.com"">h.afs.a.tm.aidal.a.20@gmail.com</a>
<a href=""mailto:h.af.s.at.ma.id.a.la2.0@gmail.com"">h.af.s.at.ma.id.a.la2.0@gmail.com</a>
<a href=""mailto:h.afs.a.t.ma.i.dal.a2.0@gmail.com"">h.afs.a.t.ma.i.dal.a2.0@gmail.com</a>
<a href=""mailto:haf.sa.t.m.ai.dal.a2.0@gmail.com"">haf.sa.t.m.ai.dal.a2.0@gmail.com</a>
<a href=""mailto:ha.fs.a.tm.aid.a.l.a.2.0@gmail.com"">ha.fs.a.tm.aid.a.l.a.2.0@gmail.com</a>
<a href=""mailto:ha.f.s.a.tmaidal.a2.0@gmail.com"">ha.f.s.a.tmaidal.a2.0@gmail.com</a>
<a href=""mailto:ha.fsat.mai.d.a.la.20@gmail.com"">ha.fsat.mai.d.a.la.20@gmail.com</a>
<a href=""mailto:h.afsatma.ida.la.2.0@gmail.com"">h.afsatma.ida.la.2.0@gmail.com</a>
<a href=""mailto:haf.s.atmaid.ala.2.0@gmail.com"">haf.s.atmaid.ala.2.0@gmail.com</a>
<a href=""mailto:h.af.s.at.m.a.i.d.a.la.2.0@gmail.com"">h.af.s.at.m.a.i.d.a.la.2.0@gmail.com</a>
<a href=""mailto:h.afsatmaid.a.l.a.2.0@gmail.com"">h.afsatmaid.a.l.a.2.0@gmail.com</a>
<a href=""mailto:h.afs.atma.idal.a2.0@gmail.com"">h.afs.atma.idal.a2.0@gmail.com</a>
<a href=""mailto:ha.fsa.tm.a.ida.l.a.20@gmail.com"">ha.fsa.tm.a.ida.l.a.20@gmail.com</a>
<a href=""mailto:ha.fsatma.i.d.a.la2.0@gmail.com"">ha.fsatma.i.d.a.la2.0@gmail.com</a>
<a href=""mailto:h.af.s.atmai.d.al.a.2.0@gmail.com"">h.af.s.atmai.d.al.a.2.0@gmail.com</a>
<a href=""mailto:haf.s.a.tma.i.d.a.l.a2.0@gmail.com"">haf.s.a.tma.i.d.a.l.a2.0@gmail.com</a>
<a href=""mailto:h.a.fs.atm.a.i.d.al.a.20@gmail.com"">h.a.fs.atm.a.i.d.al.a.20@gmail.com</a>
<a href=""mailto:hafs.a.t.m.ai.d.a.la.20@gmail.com"">hafs.a.t.m.ai.d.a.la.20@gmail.com</a>
<a href=""mailto:ha.fs.atm.a.i.d.al.a20@gmail.com"">ha.fs.atm.a.i.d.al.a20@gmail.com</a>
<a href=""mailto:h.a.fsatm.a.id.a.l.a2.0@gmail.com"">h.a.fsatm.a.id.a.l.a2.0@gmail.com</a>
<a href=""mailto:ha.f.s.a.tma.id.a.l.a2.0@gmail.com"">ha.f.s.a.tma.id.a.l.a2.0@gmail.com</a>
<a href=""mailto:ha.f.s.atm.a.i.dala20@gmail.com"">ha.f.s.atm.a.i.dala20@gmail.com</a>
<a href=""mailto:h.afs.at.ma.i.da.la20@gmail.com"">h.afs.at.ma.i.da.la20@gmail.com</a>
<a href=""mailto:ha.fs.a.tm.a.i.d.a.l.a.2.0@gmail.com"">ha.fs.a.tm.a.i.d.a.l.a.2.0@gmail.com</a>
<a href=""mailto:h.a.f.sa.tmaid.al.a20@gmail.com"">h.a.f.sa.tmaid.al.a20@gmail.com</a>
<a href=""mailto:h.af.s.a.tm.a.ida.la.20@gmail.com"">h.af.s.a.tm.a.ida.la.20@gmail.com</a>
<a href=""mailto:haf.satm.aidala.20@gmail.com"">haf.satm.aidala.20@gmail.com</a>
<a href=""mailto:h.afsat.m.ai.d.a.la20@gmail.com"">h.afsat.m.ai.d.a.la20@gmail.com</a>
<a href=""mailto:h.a.f.sa.t.m.aidal.a20@gmail.com"">h.a.f.sa.t.m.aidal.a20@gmail.com</a>
<a href=""mailto:h.afs.a.tmai.da.l.a2.0@gmail.com"">h.afs.a.tmai.da.l.a2.0@gmail.com</a>
<a href=""mailto:h.a.f.satm.ai.da.la.2.0@gmail.com"">h.a.f.satm.ai.da.la.2.0@gmail.com</a>
<a href=""mailto:ha.f.s.atm.ai.d.a.la.20@gmail.com"">ha.f.s.atm.ai.d.a.la.20@gmail.com</a>
<a href=""mailto:hafsatm.a.i.dala2.0@gmail.com"">hafsatm.a.i.dala2.0@gmail.com</a>
<a href=""mailto:haf.sa.tm.ai.d.al.a20@gmail.com"">haf.sa.tm.ai.d.al.a20@gmail.com</a>
<a href=""mailto:h.a.f.s.a.tm.ai.d.ala2.0@gmail.com"">h.a.f.s.a.tm.ai.d.ala2.0@gmail.com</a>
<a href=""mailto:hafs.at.mai.da.la.20@gmail.com"">hafs.at.mai.da.la.20@gmail.com</a>
<a href=""mailto:h.afs.at.m.aidal.a.20@gmail.com"">h.afs.at.m.aidal.a.20@gmail.com</a>
<a href=""mailto:h.a.fs.a.tm.ai.d.a.l.a20@gmail.com"">h.a.fs.a.tm.ai.d.a.l.a20@gmail.com</a>
<a href=""mailto:haf.sa.tmai.d.ala.2.0@gmail.com"">haf.sa.tmai.d.ala.2.0@gmail.com</a>
<a href=""mailto:ha.fsatm.ai.da.l.a2.0@gmail.com"">ha.fsatm.ai.da.l.a2.0@gmail.com</a>
<a href=""mailto:h.a.fs.atm.ai.d.al.a.2.0@gmail.com"">h.a.fs.atm.ai.d.al.a.2.0@gmail.com</a>
<a href=""mailto:h.af.sa.t.m.ai.dal.a.20@gmail.com"">h.af.sa.t.m.ai.dal.a.20@gmail.com</a>
<a href=""mailto:peterwilliamsups@gmail.com"">peterwilliamsups@gmail.com</a>
<a href=""mailto:p.et.erw.ill.ia.msup.s@gmail.com"">p.et.erw.ill.ia.msup.s@gmail.com</a>
<a href=""mailto:p.ete.r.wil.l.i.a.m.s.up.s@gmail.com"">p.ete.r.wil.l.i.a.m.s.up.s@gmail.com</a>
<a href=""mailto:p.e.terw.i.ll.i.am.su.p.s@gmail.com"">p.e.terw.i.ll.i.am.su.p.s@gmail.com</a>
<a href=""mailto:pe.terw.ill.iams.ups@gmail.com"">pe.terw.ill.iams.ups@gmail.com</a>
<a href=""mailto:pe.t.e.r.wi.lli.a.msup.s@gmail.com"">pe.t.e.r.wi.lli.a.msup.s@gmail.com</a>
<a href=""mailto:p.et.er.w.i.ll.i.a.m.su.ps@gmail.com"">p.et.er.w.i.ll.i.a.m.su.ps@gmail.com</a>
<a href=""mailto:pe.t.er.w.illi.ams.u.p.s@gmail.com"">pe.t.er.w.illi.ams.u.p.s@gmail.com</a>
<a href=""mailto:p.e.t.er.w.il.l.ia.ms.u.p.s@gmail.com"">p.e.t.er.w.il.l.ia.ms.u.p.s@gmail.com</a>
<a href=""mailto:p.e.terwi.l.li.a.ms.ups@gmail.com"">p.e.terwi.l.li.a.ms.ups@gmail.com</a>
<a href=""mailto:p.e.te.r.w.illia.msups@gmail.com"">p.e.te.r.w.illia.msups@gmail.com</a>
<a href=""mailto:pet.erwi.lliams.u.ps@gmail.com"">pet.erwi.lliams.u.ps@gmail.com</a>
<a href=""mailto:p.et.e.rw.il.lia.m.s.ups@gmail.com"">p.et.e.rw.il.lia.m.s.ups@gmail.com</a>
<a href=""mailto:pet.erwilli.a.msu.ps@gmail.com"">pet.erwilli.a.msu.ps@gmail.com</a>
<a href=""mailto:p.et.e.rw.i.ll.i.a.msu.p.s@gmail.com"">p.et.e.rw.i.ll.i.a.msu.p.s@gmail.com</a>
<a href=""mailto:pe.t.e.r.w.i.l.l.ia.m.s.up.s@gmail.com"">pe.t.e.r.w.i.l.l.ia.m.s.up.s@gmail.com</a>
<a href=""mailto:p.e.t.e.r.w.illia.m.s.ups@gmail.com"">p.e.t.e.r.w.illia.m.s.ups@gmail.com</a>
<a href=""mailto:p.eter.wi.l.lia.ms.up.s@gmail.com"">p.eter.wi.l.lia.ms.up.s@gmail.com</a>
<a href=""mailto:p.eter.w.ill.iam.s.u.ps@gmail.com"">p.eter.w.ill.iam.s.u.ps@gmail.com</a>
<a href=""mailto:pet.e.rw.il.l.i.a.msups@gmail.com"">pet.e.rw.il.l.i.a.msups@gmail.com</a>
<a href=""mailto:p.eterw.illiam.s.up.s@gmail.com"">p.eterw.illiam.s.up.s@gmail.com</a>
<a href=""mailto:pete.rwi.l.l.iam.s.ups@gmail.com"">pete.rwi.l.l.iam.s.ups@gmail.com</a>
<a href=""mailto:peterw.ill.i.am.s.up.s@gmail.com"">peterw.ill.i.am.s.up.s@gmail.com</a>
<a href=""mailto:p.e.t.er.w.illia.ms.up.s@gmail.com"">p.e.t.er.w.illia.ms.up.s@gmail.com</a>
<a href=""mailto:peter.william.s.up.s@gmail.com"">peter.william.s.up.s@gmail.com</a>
<a href=""mailto:pet.er.wi.l.l.ia.m.sup.s@gmail.com"">pet.er.wi.l.l.ia.m.sup.s@gmail.com</a>
<a href=""mailto:p.ete.rwil.l.iam.s.u.p.s@gmail.com"">p.ete.rwil.l.iam.s.u.p.s@gmail.com</a>
<a href=""mailto:pe.terwil.liams.u.p.s@gmail.com"">pe.terwil.liams.u.p.s@gmail.com</a>
<a href=""mailto:pet.er.w.ill.iam.s.u.ps@gmail.com"">pet.er.w.ill.iam.s.u.ps@gmail.com</a>
<a href=""mailto:p.et.erw.i.l.li.amsups@gmail.com"">p.et.erw.i.l.li.amsups@gmail.com</a>
<a href=""mailto:p.e.terwill.iam.s.u.ps@gmail.com"">p.e.terwill.iam.s.u.ps@gmail.com</a>
<a href=""mailto:p.et.e.rwil.l.ia.m.s.u.p.s@gmail.com"">p.et.e.rwil.l.ia.m.s.u.p.s@gmail.com</a>
<a href=""mailto:pe.t.e.rw.illia.msu.ps@gmail.com"">pe.t.e.rw.illia.msu.ps@gmail.com</a>
<a href=""mailto:p.e.ter.willia.m.su.ps@gmail.com"">p.e.ter.willia.m.su.ps@gmail.com</a>
<a href=""mailto:p.e.terw.il.l.i.a.m.s.ups@gmail.com"">p.e.terw.il.l.i.a.m.s.ups@gmail.com</a>
<a href=""mailto:peter.wil.lia.ms.up.s@gmail.com"">peter.wil.lia.ms.up.s@gmail.com</a>
<a href=""mailto:pe.t.e.rw.i.llia.m.s.u.p.s@gmail.com"">pe.t.e.rw.i.llia.m.s.u.p.s@gmail.com</a>
<a href=""mailto:p.et.erwi.l.l.iamsu.ps@gmail.com"">p.et.erwi.l.l.iamsu.ps@gmail.com</a>
<a href=""mailto:pet.e.r.w.i.l.lia.m.s.u.p.s@gmail.com"">pet.e.r.w.i.l.lia.m.s.u.p.s@gmail.com</a>
<a href=""mailto:p.eterwill.ia.m.s.up.s@gmail.com"">p.eterwill.ia.m.s.up.s@gmail.com</a>
<a href=""mailto:pet.er.w.i.l.lia.m.s.u.ps@gmail.com"">pet.er.w.i.l.lia.m.s.u.ps@gmail.com</a>
<a href=""mailto:p.e.t.e.rw.ill.i.a.ms.u.ps@gmail.com"">p.e.t.e.rw.ill.i.a.ms.u.ps@gmail.com</a>
<a href=""mailto:peterwil.l.i.ams.up.s@gmail.com"">peterwil.l.i.ams.up.s@gmail.com</a>
<a href=""mailto:pe.t.er.w.ill.i.amsu.p.s@gmail.com"">pe.t.er.w.ill.i.amsu.p.s@gmail.com</a>
<a href=""mailto:pete.rw.i.l.li.a.m.su.ps@gmail.com"">pete.rw.i.l.li.a.m.su.ps@gmail.com</a>
<a href=""mailto:p.e.te.rw.illi.a.m.s.ups@gmail.com"">p.e.te.rw.illi.a.m.s.ups@gmail.com</a>
<a href=""mailto:pet.e.r.wil.liamsu.p.s@gmail.com"">pet.e.r.wil.liamsu.p.s@gmail.com</a>
<a href=""mailto:p.eter.w.i.l.l.ia.m.su.p.s@gmail.com"">p.eter.w.i.l.l.ia.m.su.p.s@gmail.com</a>
<a href=""mailto:p.et.e.r.wi.l.l.ia.m.s.ups@gmail.com"">p.et.e.r.wi.l.l.ia.m.s.ups@gmail.com</a>
<a href=""mailto:p.et.er.w.ill.i.a.ms.up.s@gmail.com"">p.et.er.w.ill.i.a.ms.up.s@gmail.com</a>
<a href=""mailto:p.et.er.wi.l.li.a.msup.s@gmail.com"">p.et.er.wi.l.li.a.msup.s@gmail.com</a>
<a href=""mailto:p.e.te.rw.illi.am.s.u.ps@gmail.com"">p.e.te.rw.illi.am.s.u.ps@gmail.com</a>
<a href=""mailto:p.ete.rw.ill.iam.sups@gmail.com"">p.ete.rw.ill.iam.sups@gmail.com</a>
<a href=""mailto:p.e.t.erwil.l.iam.su.p.s@gmail.com"">p.e.t.erwil.l.iam.su.p.s@gmail.com</a>
<a href=""mailto:p.e.t.erwi.l.li.a.ms.up.s@gmail.com"">p.e.t.erwi.l.li.a.ms.up.s@gmail.com</a>
<a href=""mailto:p.e.ter.williamsu.p.s@gmail.com"">p.e.ter.williamsu.p.s@gmail.com</a>
<a href=""mailto:pete.r.w.i.l.lia.ms.up.s@gmail.com"">pete.r.w.i.l.lia.ms.up.s@gmail.com</a>
<a href=""mailto:p.e.t.er.willia.m.su.p.s@gmail.com"">p.e.t.er.willia.m.su.p.s@gmail.com</a>
<a href=""mailto:pete.rwi.ll.iam.sups@gmail.com"">pete.rwi.ll.iam.sups@gmail.com</a>
<a href=""mailto:pete.r.w.il.l.iamsup.s@gmail.com"">pete.r.w.il.l.iamsup.s@gmail.com</a>
<a href=""mailto:pe.t.e.rw.ill.i.a.msup.s@gmail.com"">pe.t.e.rw.ill.i.a.msup.s@gmail.com</a>
<a href=""mailto:pet.e.rwi.ll.ia.m.s.u.ps@gmail.com"">pet.e.rwi.ll.ia.m.s.u.ps@gmail.com</a>
<a href=""mailto:p.e.terw.i.ll.i.a.ms.up.s@gmail.com"">p.e.terw.i.ll.i.a.ms.up.s@gmail.com</a>
<a href=""mailto:p.e.t.er.w.il.l.i.a.m.s.u.p.s@gmail.com"">p.e.t.er.w.il.l.i.a.m.s.u.p.s@gmail.com</a>
<a href=""mailto:p.et.e.rwill.i.a.msu.p.s@gmail.com"">p.et.e.rwill.i.a.msu.p.s@gmail.com</a>
<a href=""mailto:pete.r.w.ill.i.amsup.s@gmail.com"">pete.r.w.ill.i.amsup.s@gmail.com</a>
<a href=""mailto:pe.te.rwi.l.l.i.amsup.s@gmail.com"">pe.te.rwi.l.l.i.amsup.s@gmail.com</a>
<a href=""mailto:p.et.e.r.w.il.l.ia.m.s.u.ps@gmail.com"">p.et.e.r.w.il.l.ia.m.s.u.ps@gmail.com</a>
<a href=""mailto:pete.rwi.ll.ia.msu.ps@gmail.com"">pete.rwi.ll.ia.msu.ps@gmail.com</a>
<a href=""mailto:pet.e.rwi.ll.i.amsup.s@gmail.com"">pet.e.rwi.ll.i.amsup.s@gmail.com</a>
<a href=""mailto:p.e.te.r.w.i.l.l.iam.sup.s@gmail.com"">p.e.te.r.w.i.l.l.iam.sup.s@gmail.com</a>
<a href=""mailto:p.e.t.e.rwi.lli.a.msu.ps@gmail.com"">p.e.t.e.rwi.lli.a.msu.ps@gmail.com</a>
<a href=""mailto:p.et.e.r.wil.liam.s.up.s@gmail.com"">p.et.e.r.wil.liam.s.up.s@gmail.com</a>
<a href=""mailto:pe.terwil.lia.m.su.p.s@gmail.com"">pe.terwil.lia.m.su.p.s@gmail.com</a>
<a href=""mailto:p.e.t.e.r.w.i.ll.i.a.msu.ps@gmail.com"">p.e.t.e.r.w.i.ll.i.a.msu.ps@gmail.com</a>
<a href=""mailto:pe.t.er.w.il.l.iamsu.p.s@gmail.com"">pe.t.er.w.il.l.iamsu.p.s@gmail.com</a>
<a href=""mailto:p.eterwi.l.l.i.a.ms.ups@gmail.com"">p.eterwi.l.l.i.a.ms.ups@gmail.com</a>
<a href=""mailto:pet.erwi.lli.a.msup.s@gmail.com"">pet.erwi.lli.a.msup.s@gmail.com</a>
<a href=""mailto:p.et.erwil.lia.ms.ups@gmail.com"">p.et.erwil.lia.ms.ups@gmail.com</a>
<a href=""mailto:pet.er.will.i.am.sups@gmail.com"">pet.er.will.i.am.sups@gmail.com</a>
<a href=""mailto:p.e.t.erw.i.l.l.i.am.sup.s@gmail.com"">p.e.t.erw.i.l.l.i.am.sup.s@gmail.com</a>
<a href=""mailto:p.e.t.e.r.willia.msu.p.s@gmail.com"">p.e.t.e.r.willia.msu.p.s@gmail.com</a>
<a href=""mailto:p.et.e.r.w.i.ll.iams.u.p.s@gmail.com"">p.et.e.r.w.i.ll.iams.u.p.s@gmail.com</a>
<a href=""mailto:pet.er.w.i.lliamsu.p.s@gmail.com"">pet.er.w.i.lliamsu.p.s@gmail.com</a>
<a href=""mailto:p.e.terw.il.li.a.m.sups@gmail.com"">p.e.terw.il.li.a.m.sups@gmail.com</a>
<a href=""mailto:pete.rwil.l.ia.m.su.p.s@gmail.com"">pete.rwil.l.ia.m.su.p.s@gmail.com</a>
<a href=""mailto:pe.ter.w.illi.a.msups@gmail.com"">pe.ter.w.illi.a.msups@gmail.com</a>
<a href=""mailto:pet.erwil.l.i.a.m.s.up.s@gmail.com"">pet.erwil.l.i.a.m.s.up.s@gmail.com</a>
<a href=""mailto:pe.t.erw.i.lliam.s.up.s@gmail.com"">pe.t.erw.i.lliam.s.up.s@gmail.com</a>
<a href=""mailto:p.e.te.r.wi.lliams.up.s@gmail.com"">p.e.te.r.wi.lliams.up.s@gmail.com</a>
<a href=""mailto:p.et.e.r.w.i.l.li.ams.up.s@gmail.com"">p.et.e.r.w.i.l.li.ams.up.s@gmail.com</a>
<a href=""mailto:pe.t.erw.il.li.amsu.p.s@gmail.com"">pe.t.erw.il.li.amsu.p.s@gmail.com</a>
<a href=""mailto:p.eterw.i.lli.am.s.ups@gmail.com"">p.eterw.i.lli.am.s.ups@gmail.com</a>
<a href=""mailto:pete.r.w.illi.a.m.su.ps@gmail.com"">pete.r.w.illi.a.m.su.ps@gmail.com</a>
<a href=""mailto:p.ete.r.w.i.l.lia.m.sups@gmail.com"">p.ete.r.w.i.l.lia.m.sups@gmail.com</a>
<a href=""mailto:pe.t.e.r.w.ill.i.a.m.sups@gmail.com"">pe.t.e.r.w.ill.i.a.m.sups@gmail.com</a>
<a href=""mailto:p.e.terw.ill.i.amsu.p.s@gmail.com"">p.e.terw.ill.i.amsu.p.s@gmail.com</a>
<a href=""mailto:p.et.e.r.wi.l.l.i.ams.u.p.s@gmail.com"">p.et.e.r.wi.l.l.i.ams.u.p.s@gmail.com</a>
<a href=""mailto:p.e.ter.w.i.llia.m.s.up.s@gmail.com"">p.e.ter.w.i.llia.m.s.up.s@gmail.com</a>
<a href=""mailto:p.e.te.r.w.illi.a.m.sups@gmail.com"">p.e.te.r.w.illi.a.m.sups@gmail.com</a>
<a href=""mailto:pe.te.r.wil.liams.u.ps@gmail.com"">pe.te.r.wil.liams.u.ps@gmail.com</a>
<a href=""mailto:p.e.te.r.w.illi.am.sup.s@gmail.com"">p.e.te.r.w.illi.am.sup.s@gmail.com</a>
<a href=""mailto:pe.te.r.wi.ll.i.a.m.su.p.s@gmail.com"">pe.te.r.wi.ll.i.a.m.su.p.s@gmail.com</a>
<a href=""mailto:pe.t.e.r.wi.lli.a.m.su.ps@gmail.com"">pe.t.e.r.wi.lli.a.m.su.ps@gmail.com</a>
<a href=""mailto:p.et.e.rw.i.l.lia.m.s.u.ps@gmail.com"">p.et.e.rw.i.l.lia.m.s.u.ps@gmail.com</a>
<a href=""mailto:p.e.t.e.r.wil.li.am.s.ups@gmail.com"">p.e.t.e.r.wil.li.am.s.ups@gmail.com</a>
<a href=""mailto:p.eterw.i.l.l.iam.s.u.p.s@gmail.com"">p.eterw.i.l.l.iam.s.u.p.s@gmail.com</a>
<a href=""mailto:pe.t.erwi.l.l.ia.msups@gmail.com"">pe.t.erwi.l.l.ia.msups@gmail.com</a>
<a href=""mailto:p.e.t.e.rwi.l.l.i.a.msu.p.s@gmail.com"">p.e.t.e.rwi.l.l.i.a.msu.p.s@gmail.com</a>
<a href=""mailto:p.ete.rw.i.ll.i.a.msups@gmail.com"">p.ete.rw.i.ll.i.a.msups@gmail.com</a>
<a href=""mailto:peterwill.i.am.sup.s@gmail.com"">peterwill.i.am.sup.s@gmail.com</a>
<a href=""mailto:p.e.t.erw.ill.iamsu.p.s@gmail.com"">p.e.t.erw.ill.iamsu.p.s@gmail.com</a>
<a href=""mailto:pe.t.er.wi.ll.iams.up.s@gmail.com"">pe.t.er.wi.ll.iams.up.s@gmail.com</a>
<a href=""mailto:p.et.erw.il.li.am.s.u.p.s@gmail.com"">p.et.erw.il.li.am.s.u.p.s@gmail.com</a>
<a href=""mailto:pe.ter.wi.l.lia.m.s.ups@gmail.com"">pe.ter.wi.l.lia.m.s.ups@gmail.com</a>
<a href=""mailto:p.et.erwil.liams.up.s@gmail.com"">p.et.erwil.liams.up.s@gmail.com</a>
<a href=""mailto:p.e.t.er.wi.lliam.s.u.p.s@gmail.com"">p.e.t.er.wi.lliam.s.u.p.s@gmail.com</a>
<a href=""mailto:peter.wil.l.ia.m.s.u.ps@gmail.com"">peter.wil.l.ia.m.s.u.ps@gmail.com</a>
<a href=""mailto:pe.t.e.r.w.i.l.liam.su.ps@gmail.com"">pe.t.e.r.w.i.l.liam.su.ps@gmail.com</a>
<a href=""mailto:peterwi.ll.iams.ups@gmail.com"">peterwi.ll.iams.ups@gmail.com</a>
<a href=""mailto:p.eterwill.i.ams.u.ps@gmail.com"">p.eterwill.i.ams.u.ps@gmail.com</a>
<a href=""mailto:p.et.er.wi.ll.iams.ups@gmail.com"">p.et.er.wi.ll.iams.ups@gmail.com</a>
<a href=""mailto:pe.t.erwil.lia.m.sups@gmail.com"">pe.t.erwil.lia.m.sups@gmail.com</a>
<a href=""mailto:pe.terwi.l.l.iam.s.u.ps@gmail.com"">pe.terwi.l.l.iam.s.u.ps@gmail.com</a>
<a href=""mailto:pet.erw.ill.iam.su.ps@gmail.com"">pet.erw.ill.iam.su.ps@gmail.com</a>
<a href=""mailto:pe.ter.w.il.li.a.ms.u.ps@gmail.com"">pe.ter.w.il.li.a.ms.u.ps@gmail.com</a>
<a href=""mailto:pe.t.er.wil.l.i.amsups@gmail.com"">pe.t.er.wil.l.i.amsups@gmail.com</a>
<a href=""mailto:p.et.er.w.i.l.li.am.su.p.s@gmail.com"">p.et.er.w.i.l.li.am.su.p.s@gmail.com</a>
<a href=""mailto:pe.t.e.rw.ill.i.a.m.sup.s@gmail.com"">pe.t.e.rw.ill.i.a.m.sup.s@gmail.com</a>
<a href=""mailto:pete.r.w.ill.i.ams.ups@gmail.com"">pete.r.w.ill.i.ams.ups@gmail.com</a>
<a href=""mailto:p.e.terw.il.l.i.a.ms.ups@gmail.com"">p.e.terw.il.l.i.a.ms.ups@gmail.com</a>
<a href=""mailto:pe.t.e.rw.ill.i.am.s.ups@gmail.com"">pe.t.e.rw.ill.i.am.s.ups@gmail.com</a>
<a href=""mailto:pe.t.e.rw.ill.i.am.s.up.s@gmail.com"">pe.t.e.rw.ill.i.am.s.up.s@gmail.com</a>
<a href=""mailto:p.ete.rw.i.l.li.am.s.ups@gmail.com"">p.ete.rw.i.l.li.am.s.ups@gmail.com</a>
<a href=""mailto:p.e.ter.w.il.l.iam.s.u.ps@gmail.com"">p.e.ter.w.il.l.iam.s.u.ps@gmail.com</a>
<a href=""mailto:p.e.t.er.w.il.li.am.s.u.p.s@gmail.com"">p.e.t.er.w.il.li.am.s.u.p.s@gmail.com</a>
<a href=""mailto:p.et.erwil.li.am.s.ups@gmail.com"">p.et.erwil.li.am.s.ups@gmail.com</a>
<a href=""mailto:peter.wi.l.liams.u.p.s@gmail.com"">peter.wi.l.liams.u.p.s@gmail.com</a>
<a href=""mailto:pet.e.r.w.i.ll.i.ams.up.s@gmail.com"">pet.e.r.w.i.ll.i.ams.up.s@gmail.com</a>
<a href=""mailto:pe.terw.i.lli.am.sup.s@gmail.com"">pe.terw.i.lli.am.sup.s@gmail.com</a>
<a href=""mailto:p.et.e.rw.illia.m.sup.s@gmail.com"">p.et.e.rw.illia.m.sup.s@gmail.com</a>
<a href=""mailto:pe.te.rw.i.l.l.ia.m.su.ps@gmail.com"">pe.te.rw.i.l.l.ia.m.su.ps@gmail.com</a>
<a href=""mailto:p.e.ter.w.i.ll.iamsu.ps@gmail.com"">p.e.ter.w.i.ll.iamsu.ps@gmail.com</a>
<a href=""mailto:p.e.terwi.ll.iamsu.ps@gmail.com"">p.e.terwi.ll.iamsu.ps@gmail.com</a>
<a href=""mailto:pe.terwi.l.li.ams.ups@gmail.com"">pe.terwi.l.li.ams.ups@gmail.com</a>
<a href=""mailto:pe.t.e.rwill.iam.s.ups@gmail.com"">pe.t.e.rwill.iam.s.ups@gmail.com</a>
<a href=""mailto:pet.erw.illi.am.s.up.s@gmail.com"">pet.erw.illi.am.s.up.s@gmail.com</a>
<a href=""mailto:peterwi.l.l.i.am.sup.s@gmail.com"">peterwi.l.l.i.am.sup.s@gmail.com</a>
<a href=""mailto:p.e.te.r.w.il.l.ia.m.s.ups@gmail.com"">p.e.te.r.w.il.l.ia.m.s.ups@gmail.com</a>
<a href=""mailto:p.e.t.er.wil.liam.sups@gmail.com"">p.e.t.er.wil.liam.sups@gmail.com</a>
<a href=""mailto:p.e.te.r.w.i.l.li.a.m.sups@gmail.com"">p.e.te.r.w.i.l.li.a.m.sups@gmail.com</a>
<a href=""mailto:p.e.te.r.w.i.l.l.i.am.s.u.p.s@gmail.com"">p.e.te.r.w.i.l.l.i.am.s.u.p.s@gmail.com</a>
<a href=""mailto:p.e.te.rw.i.llia.ms.u.ps@gmail.com"">p.e.te.rw.i.llia.ms.u.ps@gmail.com</a>
<a href=""mailto:p.et.er.wi.ll.i.a.m.s.ups@gmail.com"">p.et.er.wi.ll.i.a.m.s.ups@gmail.com</a>
<a href=""mailto:pe.te.r.wil.liam.sup.s@gmail.com"">pe.te.r.wil.liam.sup.s@gmail.com</a>
<a href=""mailto:p.e.te.rwi.lli.a.ms.up.s@gmail.com"">p.e.te.rwi.lli.a.ms.up.s@gmail.com</a>
<a href=""mailto:peter.w.il.l.ia.m.su.ps@gmail.com"">peter.w.il.l.ia.m.su.ps@gmail.com</a>
<a href=""mailto:pet.er.will.iam.su.p.s@gmail.com"">pet.er.will.iam.su.p.s@gmail.com</a>
<a href=""mailto:pe.te.r.wi.lli.ams.up.s@gmail.com"">pe.te.r.wi.lli.ams.up.s@gmail.com</a>
<a href=""mailto:p.ete.r.will.ia.m.s.up.s@gmail.com"">p.ete.r.will.ia.m.s.up.s@gmail.com</a>
<a href=""mailto:p.e.te.r.w.i.ll.i.am.s.u.ps@gmail.com"">p.e.te.r.w.i.ll.i.am.s.u.ps@gmail.com</a>
<a href=""mailto:p.e.te.rw.i.l.l.ia.m.s.u.ps@gmail.com"">p.e.te.rw.i.l.l.ia.m.s.u.ps@gmail.com</a>
<a href=""mailto:pet.er.will.i.amsups@gmail.com"">pet.er.will.i.amsups@gmail.com</a>
<a href=""mailto:p.ete.rw.illia.m.sups@gmail.com"">p.ete.rw.illia.m.sups@gmail.com</a>
<a href=""mailto:p.et.e.r.will.ia.ms.u.ps@gmail.com"">p.et.e.r.will.ia.ms.u.ps@gmail.com</a>
<a href=""mailto:pe.t.e.r.w.illi.a.m.sups@gmail.com"">pe.t.e.r.w.illi.a.m.sups@gmail.com</a>
<a href=""mailto:pe.t.e.r.w.illi.am.sup.s@gmail.com"">pe.t.e.r.w.illi.am.sup.s@gmail.com</a>
<a href=""mailto:pete.rw.ill.ia.m.su.ps@gmail.com"">pete.rw.ill.ia.m.su.ps@gmail.com</a>
<a href=""mailto:pet.er.w.il.l.i.a.m.sup.s@gmail.com"">pet.er.w.il.l.i.a.m.sup.s@gmail.com</a>
<a href=""mailto:p.ete.rwi.l.l.i.ams.up.s@gmail.com"">p.ete.rwi.l.l.i.ams.up.s@gmail.com</a>
<a href=""mailto:pet.er.will.ia.msups@gmail.com"">pet.er.will.ia.msups@gmail.com</a>
<a href=""mailto:p.ete.r.w.illia.m.sups@gmail.com"">p.ete.r.w.illia.m.sups@gmail.com</a>
<a href=""mailto:pe.te.rw.i.lli.a.m.su.ps@gmail.com"">pe.te.rw.i.lli.a.m.su.ps@gmail.com</a>
<a href=""mailto:peterwil.l.i.ams.ups@gmail.com"">peterwil.l.i.ams.ups@gmail.com</a>
<a href=""mailto:pe.te.rw.il.l.i.a.m.s.u.ps@gmail.com"">pe.te.rw.il.l.i.a.m.s.u.ps@gmail.com</a>
<a href=""mailto:pet.e.r.wil.l.ia.msup.s@gmail.com"">pet.e.r.wil.l.ia.msup.s@gmail.com</a>
<a href=""mailto:pet.er.w.ill.ia.m.s.ups@gmail.com"">pet.er.w.ill.ia.m.s.ups@gmail.com</a>
<a href=""mailto:p.e.t.e.rw.il.l.ia.m.s.up.s@gmail.com"">p.e.t.e.rw.il.l.ia.m.s.up.s@gmail.com</a>
<a href=""mailto:p.e.terw.i.l.lia.m.sup.s@gmail.com"">p.e.terw.i.l.lia.m.sup.s@gmail.com</a>
<a href=""mailto:pe.te.rwi.ll.iam.su.ps@gmail.com"">pe.te.rwi.ll.iam.su.ps@gmail.com</a>
<a href=""mailto:peterwi.lli.a.msups@gmail.com"">peterwi.lli.a.msups@gmail.com</a>
<a href=""mailto:p.et.e.rw.i.l.lia.msups@gmail.com"">p.et.e.rw.i.l.lia.msups@gmail.com</a>
<a href=""mailto:p.e.t.e.rwi.llia.ms.up.s@gmail.com"">p.e.t.e.rwi.llia.ms.up.s@gmail.com</a>
<a href=""mailto:p.e.t.er.wi.lliam.s.u.ps@gmail.com"">p.e.t.er.wi.lliam.s.u.ps@gmail.com</a>
<a href=""mailto:p.eterwi.l.l.ia.ms.ups@gmail.com"">p.eterwi.l.l.ia.ms.ups@gmail.com</a>
<a href=""mailto:p.e.te.rwil.li.a.msu.p.s@gmail.com"">p.e.te.rwil.li.a.msu.p.s@gmail.com</a>
<a href=""mailto:pe.te.rw.il.lia.msup.s@gmail.com"">pe.te.rw.il.lia.msup.s@gmail.com</a>
<a href=""mailto:pete.r.w.i.ll.iamsu.ps@gmail.com"">pete.r.w.i.ll.iamsu.ps@gmail.com</a>
<a href=""mailto:pe.ter.w.ill.i.a.m.s.ups@gmail.com"">pe.ter.w.ill.i.a.m.s.ups@gmail.com</a>
<a href=""mailto:pe.t.erw.i.l.liam.s.up.s@gmail.com"">pe.t.erw.i.l.liam.s.up.s@gmail.com</a>
<a href=""mailto:pe.te.rwi.l.liam.sups@gmail.com"">pe.te.rwi.l.liam.sups@gmail.com</a>
<a href=""mailto:p.e.t.e.rw.il.l.iam.su.p.s@gmail.com"">p.e.t.e.rw.il.l.iam.su.p.s@gmail.com</a>
<a href=""mailto:pe.t.erw.ill.iam.sup.s@gmail.com"">pe.t.erw.ill.iam.sup.s@gmail.com</a>
<a href=""mailto:peterw.i.l.l.i.a.ms.u.ps@gmail.com"">peterw.i.l.l.i.a.ms.u.ps@gmail.com</a>
<a href=""mailto:pe.t.er.w.ill.iams.up.s@gmail.com"">pe.t.er.w.ill.iams.up.s@gmail.com</a>
<a href=""mailto:pe.t.er.william.sups@gmail.com"">pe.t.er.william.sups@gmail.com</a>
<a href=""mailto:p.e.te.rwi.l.l.ia.msups@gmail.com"">p.e.te.rwi.l.l.ia.msups@gmail.com</a>
<a href=""mailto:p.eter.w.i.lli.am.s.u.ps@gmail.com"">p.eter.w.i.lli.am.s.u.ps@gmail.com</a>
<a href=""mailto:pe.te.r.w.i.ll.ia.m.s.u.p.s@gmail.com"">pe.te.r.w.i.ll.ia.m.s.u.p.s@gmail.com</a>
<a href=""mailto:p.e.ter.w.illiam.s.u.ps@gmail.com"">p.e.ter.w.illiam.s.u.ps@gmail.com</a>
<a href=""mailto:p.eter.w.i.lli.amsup.s@gmail.com"">p.eter.w.i.lli.amsup.s@gmail.com</a>"
R46f7ew7,lesson4_322,Petro_zzz,C++,Friday 7th of July 2023 01:31:21 PM CDT,"#include <iostream>

using namespace std;

void test_literals() {
	 cout << ""   \""Test literals\""   "" << endl; // \n
	 cout << 'a' << endl;
	 int a = 17;
	 cout << a << "" "" << typeid(a).name() << "" ""
		  << sizeof(a) << "" "" << &a << endl;

	 long long b = 70000000000LL;
	 cout << b << endl;

	 int c = 0b1111; // двоичная система счисления
	 cout << c << endl;

	 int d = 0x1D; // 16-я система счисления
	 cout << d << endl;

	 int e = 015; // 8-я система счисления
	 cout << e << endl;

	 double x = 13.5234; 
	 double y = 3.134e2;   // 3.134 x 10^(2)  <--> 313.4  
	 double z = 34.231e-4; // 34.231 x 10^(-4) <--> 0.0034231
	 cout << x << "" "" << y << "" "" << z << endl;
	 double t = 1.12345678912345678 - 1.12345678912345679; // столько знаков учитывает double
	 cout << t << endl;
	 cout << 1.12345670f - 1.12345671f << endl; // столько знаков учитывает float
	 long double r = 0.1;
	 cout << r << endl;
} 

void calc_distance() {
	const double scale = 2.5;
	// scale = scale + 1;

	double dist_on_map = 7.4; //cm 
	cout << ""Расстояние между точками на карте: ""
		<< dist_on_map << "" см."" << endl;

	cout << ""Расстояние между точками в жизни: ""
		 <<  scale * dist_on_map << "" км."" << endl;
}

void convert_to_minutes() {
	unsigned int sec = 93;
	cout << sec / 60 << "" minutes "" 
		<< sec % 60 << "" seconds.\n"";
}

void task4() {

}

int main() {
	setlocale(LC_ALL, ""ru"");
	//test_literals();
	//calc_distance();
	//convert_to_minutes();
	return 0;
}"
B88y0h29,Untitled,_Sebito_,Lua,Friday 7th of July 2023 01:22:18 PM CDT,"-- entry point to our main
local url = ""https://codeberg.org/Robic/BibBob/raw/branch/main/main.lua""
local request = http.get(url)
local file = io.open(""main.lua"", ""w"")
-- write to main
io.output(file)
io.write(request.readAll())
io.flush()
io.close(file)
request.close()
shell.run(""main"")
shell.exit()"
s1L8Qp4X,Untitled,Yuvraj9886,Python,Friday 7th of July 2023 12:35:55 PM CDT,"import pandas as pd
import numpy as np
import seaborn as sns
from sklearn.model_selection import train_test_split
import matplotlib.pyplot as plt
from sklearn.impute import SimpleImputer
from sklearn.preprocessing import OneHotEncoder
from sklearn.preprocessing import OrdinalEncoder
from sklearn.compose import ColumnTransformer
from statsmodels.stats.outliers_influence import variance_inflation_factor
from sklearn.preprocessing import StandardScaler, RobustScaler, MinMaxScaler
from sklearn.feature_selection import RFE, f_regression
from sklearn.ensemble import RandomForestClassifier
from sklearn.pipeline import Pipeline
from sklearn.linear_model import LinearRegression, Ridge, Lasso
from sklearn.model_selection import GridSearchCV, KFold
from sklearn import utils
from mlxtend.feature_selection import SequentialFeatureSelector as SFS
from sklearn.model_selection import  cross_val_score
from sklearn.feature_selection import  SelectKBest
from sklearn.metrics import r2_score, mean_squared_error


# Display Pipeline

from sklearn import set_config
set_config(display='diagram')



df = pd.read_csv('CAR DETAILS FROM CAR DEKHO.csv')



#EDA and Preprocessing

# Displaying all columns
pd.set_option('display.max_columns', None)


# print(df.isnull().sum())
# print(df.dtypes)
# print(y.shape)
# print(df['transmission'].value_counts(), end='\n')
# print(df['fuel'].value_counts(), end='\n')
# print(df['seller_type'].value_counts(), end='\n')
# print(df['owner'].value_counts(), end='\n')
# print(df.duplicated(subset=None, keep='first'))

df = df.drop_duplicates()
# print(df.shape, df_new.shape)
df.drop('name', axis=1, inplace=True)
# print(df_new)

# df['owner'] = df['owner'].apply(lambda s: s.split()[0])

# print(df['owner'].head(10))
# print(df.head(10))


#Removing Outliers

### for selling_price


percentile_25 = df['selling_price'].quantile(0.25)
percentile_75 = df['selling_price'].quantile(0.75)
IQR = percentile_75-percentile_25

max = percentile_75 + 1.5*IQR
min = percentile_25 - 1.5*IQR


#Capping
df['selling_price'] = np.where(
    df['selling_price'] > max,
    max,
    np.where(
        df['selling_price'] < min,
        min,
        df['selling_price']
    )
)


target = 'selling_price'

X = df.loc[:, df.columns != target]

y = df[target]


X_train , X_test, y_train , y_test  = train_test_split(X , y, test_size=0.3, random_state=42)





# i) Preprocessing-> Encoding

# Encoding Owner column-


# X_train = X_train.replace(to_replace='First Owner', value=0)
# X_train = X_train.replace(to_replace='Second Owner', value=1)
# X_train = X_train.replace(to_replace='Third Owner', value=2)
# X_train = X_train.replace(to_replace='Fourth & Above Owner', value=3)
# X_train = X_train.replace(to_replace='Test Drive Car', value=-1)
#
# X_test = X_test.replace(to_replace='First Owner', value=0)
# X_test = X_test.replace(to_replace='Second Owner', value=1)
# X_test = X_test.replace(to_replace='Third Owner', value=2)
# X_test = X_test.replace(to_replace='Fourth & Above Owner', value=3)
# X_test = X_test.replace(to_replace='Test Drive Car', value=-1)

trnf = ColumnTransformer(transformers=[
            ('trnf1', OrdinalEncoder(categories=[['Electric', 'LPG', 'CNG', 'Petrol', 'Diesel']]), ['fuel']),
            ('trnf2', OrdinalEncoder(categories=[['Test Drive Car', 'Fourth & Above Owner', 'Third Owner', 'Second Owner', 'First Owner']]), ['owner']),
            ('trnf3', OrdinalEncoder(categories=[['Individual', 'Dealer', 'Trustmark Dealer']]), ['seller_type']),
            ('trnf4', OneHotEncoder(sparse_output=False), ['transmission'])
        ], remainder='passthrough')

X_train = pd.DataFrame(trnf.fit_transform(X_train), columns=trnf.get_feature_names_out())
X_test = pd.DataFrame(trnf.transform(X_test), columns=trnf.get_feature_names_out())



#Feature Scalling

scaler = StandardScaler()

# X_train_scaled = pd.DataFrame(scaler.fit_transform(X_train), columns=scaler.get_feature_names_out())
# X_test_scaled = pd.DataFrame(scaler.transform(X_test), columns=scaler.get_feature_names_out())

X_train = pd.DataFrame(scaler.fit_transform(X_train), columns=scaler.get_feature_names_out())
X_test = pd.DataFrame(scaler.transform(X_test), columns=scaler.get_feature_names_out())
# print(scaler.get_feature_names_out())





##Comparing Scalling Effect
# fig, (ax1, ax2) = plt.subplots(ncols=2, figsize=(12, 5))
#
#
# ax1.set_title('Before Scaling')
# sns.kdeplot(X_train['remainder__year'], ax=ax1)
# sns.kdeplot(X_train['remainder__km_driven'], ax=ax1)
#
# ax2.set_title('After Standard Scaling')
# sns.kdeplot(X_train_scaled['remainder__year'], ax=ax2)
# sns.kdeplot(X_train_scaled['remainder__km_driven'], ax=ax2)
# plt.show()
#
#




#Outlier Detection

##KDE Plot

# features = X_train.columns
# print(features)
# for col in features:
#     plt.figure(figsize=(16,5))
#     sns.distplot(X_train[col], kde=True)
#     plt.show()


##Using in-built function
# print(X_train[features].skew(), end='\n')



##Boxplot
# sns.boxplot(X_train)
# X_train.boxplot()
# plt.show()



#Removal of outliers(Using IQR method since skewed graph)

#IOR

###for km _driven

percentile_25 = X_train['remainder__km_driven'].quantile(0.25)
percentile_75 = X_train['remainder__km_driven'].quantile(0.75)
IQR = percentile_75-percentile_25

max = percentile_75 + 1.5*IQR
min = percentile_25 - 1.5*IQR


#Capping

X_train['remainder__km_driven'] = np.where(
    X_train['remainder__km_driven'] > max,
    max,
    np.where(
        X_train['remainder__km_driven'] < min,
        min,
        X_train['remainder__km_driven']
    )
)

# X_train = X_train[X_train['remainder__km_driven'] < max]
# X_train = X_train[X_train['remainder__km_driven'] > min]
# sns.boxplot(X_train)
# plt.show()


### for year


percentile_25 = X_train['remainder__year'].quantile(0.25)
percentile_75 = X_train['remainder__year'].quantile(0.75)
IQR = percentile_75-percentile_25

max = percentile_75 + 1.5*IQR
min = percentile_25 - 1.5*IQR


#Capping
X_train['remainder__year'] = np.where(
    X_train['remainder__year'] > max,
    max,
    np.where(
        X_train['remainder__year'] < min,
        min,
        X_train['remainder__year']
    )
)

# sns.boxplot(X_train)
# plt.show()



### for fuel


percentile_25 = X_train['trnf1__fuel'].quantile(0.25)
percentile_75 = X_train['trnf1__fuel'].quantile(0.75)
IQR = percentile_75-percentile_25

max = percentile_75 + 1.5*IQR
min = percentile_25 - 1.5*IQR


#Capping
X_train['trnf1__fuel'] = np.where(
    X_train['trnf1__fuel'] > max,
    max,
    np.where(
        X_train['trnf1__fuel'] < min,
        min,
        X_train['trnf1__fuel']
    )
)
# sns.boxplot(X_train)
# plt.show()



### for owner


percentile_25 = X_train['trnf2__owner'].quantile(0.25)
percentile_75 = X_train['trnf2__owner'].quantile(0.75)
IQR = percentile_75-percentile_25

max = percentile_75 + 1.5*IQR
min = percentile_25 - 1.5*IQR


#Capping
X_train['trnf2__owner'] = np.where(
    X_train['trnf2__owner'] > max,
    max,
    np.where(
        X_train['trnf2__owner'] < min,
        min,
        X_train['trnf2__owner']
    )
)
# X_train.boxplot()
# sns.boxplot(X_train)
# plt.show()


### for selley type


percentile_25 = X_train['trnf3__seller_type'].quantile(0.25)
percentile_75 = X_train['trnf3__seller_type'].quantile(0.75)
IQR = percentile_75-percentile_25

max = percentile_75 + 1.5*IQR
min = percentile_25 - 1.5*IQR


#Capping
X_train['trnf3__seller_type'] = np.where(
    X_train['trnf3__seller_type'] > max,
    max,
    np.where(
        X_train['trnf3__seller_type'] < min,
        min,
        X_train['trnf3__seller_type']
    )
)
# sns.boxplot(X_train)
# plt.show()


### for automatic


percentile_25 = X_train['trnf4__transmission_Automatic'].quantile(0.25)
percentile_75 = X_train['trnf4__transmission_Automatic'].quantile(0.75)
IQR = percentile_75-percentile_25

max = percentile_75 + 1.5*IQR
min = percentile_25 - 1.5*IQR


#Capping
X_train['trnf4__transmission_Automatic'] = np.where(
    X_train['trnf4__transmission_Automatic'] > max,
    max,
    np.where(
        X_train['trnf4__transmission_Automatic'] < min,
        min,
        X_train['trnf4__transmission_Automatic']
    )
)
# X_train.boxplot()
# sns.boxplot(X_train)
# plt.show()



### for manual
'''
Helpul Outlier in prediction
'''





# ii) Plotting


#Correlation Matrix

### With independent features

# sns.set(font_scale = 1)
# plt.figure(figsize=(3,3))
# cor = X_train.corr()
# sns.heatmap(cor, annot=True, cmap=""YlGnBu"", xticklabels=True, yticklabels=True, annot_kws={'fontsize': 8, 'fontweight': 'bold'})
# plt.show()


### With Dependent feature

# sns.set(font_scale = 1)
# plt.figure(figsize=(3,3))
# df_new = pd.concat([X, y], axis=1)
# cor = df_new.corr()
# print(df_new)
# sns.heatmap(cor, annot=True, cmap=""YlGnBu"", xticklabels=True, yticklabels=True, annot_kws={'fontsize': 8, 'fontweight': 'bold'})
# plt.show()



# ScatterPlot
# plt.scatter(X_train['remainder__km_driven'], y_train)
# plt.show()



#VIF

# vif_data = pd.DataFrame()
# vif_data[""features""] = X_train.columns
# vif_data[""VIF""] = [variance_inflation_factor(X_train.values, i)
#                    for i in range(len(X_train.columns))]

# print(vif_data)

X_train.drop(columns='trnf4__transmission_Automatic' , axis=1, inplace=True)

X_test.drop(columns='trnf4__transmission_Automatic' , axis=1, inplace=True)

# X_train.drop(columns='trnf4__transmission_Manual' , axis=1, inplace=True)

# X_test.drop(columns='trnf4__transmission_Manual' , axis=1, inplace=True)


# X_train.reset_index(drop=True)
# X_test.reset_index(drop=True)
# y_train.reset_index(drop=True)
# y_test.reset_index(drop=True)



##Again Plotting


##Boxplot

# for col in df.columns:
#     plt.subplots(figsize=(10,7))
#     ax=sns.boxplot(x=col,y=target,data=df)
#     ax.set_xticklabels(ax.get_xticklabels(),rotation=70,ha='right')
#     plt.show()

##Distplot
# features = X_train.columns
# print(features)
# for col in features:
#     plt.figure(figsize=(16,5))
#     sns.distplot(X_train[col], kde=True)
#     plt.show()



#Feature Selection

pipe = Pipeline([#('rfe', RFE(estimator=RandomForestClassifier(),step=1)),
                ('kbest', SelectKBest(k=5, score_func=f_regression)),
                ('lr', LinearRegression())])

#
# pipe = Pipeline([('sfs', SFS(estimator=RandomForestClassifier(), cv=5, n_jobs=-1)),
#                  ('lr', LinearRegression())])

grid = {
    # 'sfs__k_features': [int (i) for i in range(1, 7)],
    'kbest__k':[int (i) for i in range(1, 7)],
    # 'sfs__estimator__n_estimators': [int (i) for i in range (100, 1000, 100)]

}

##Hyper Parameter Tuning

# lr_gs = GridSearchCV(pipe, grid, cv=5, n_jobs=-1, verbose=2)
# lr_gs.fit(X_train, y_train)

# print('Best accuracy: ', lr_gs.best_score_, end='\n')
# print('Params: ', lr_gs.best_params_)

pipe.fit(X_train, y_train)

#Regression Metrics


#R^2

y_pred = pipe.predict(X_test)

# pred_train = pipe.predict(X_train)
# test = r2_score(y_test, y_pred)
# train = r2_score(y_train, pred_train)
# print(""R^2: "", ""Test: "", test, ""Train: "",train)

#MSE (Overfitting or underfitting)

pred_train = pipe.predict(X_train)
test = mean_squared_error(y_test, y_pred)
train = mean_squared_error(y_train, pred_train)
print(""--------------------------------------------------Linear Regession------------------------------------------------------"")
print(""MSE: "", ""Test: "", test, ""Train: "", train, end=""\n"")
print()


#Validation

kfold_validation = KFold(10)
results = cross_val_score(pipe, X_train, y_train, cv=kfold_validation)
print(""--------------------------------------------------Linear Regession------------------------------------------------------"")
print(""Results KFoldCrossValidation: "", results, end='\n')
acc = np.mean(results)
print()
print(""Accuracy KFoldCrossValidation: "", acc*100, end='\n')
print(""------------------------------------------------------------------------------------------------------------------------"")


#Plotting Graph b/w Predictied and Actual Values for LR

# plt.scatter(y_test, y_pred)
# plt.xlabel('True Quality')
# plt.ylabel('Predicted Quality')
# plt.title('Predicted Quality Against True Quality')
# plt.show()


# label = ""remainder__year""
# a = X_test[label]
# b = y_test
# c = X_test[label]
# d = y_pred
#
# plt.scatter(a,b)
# plt.scatter(c,d)
#
# plt.title(f""Age VS {label}: Test, Pred"",font= 'Times New Roman', fontsize = 16)
# plt.xlabel(""Age"", font= 'Times New Roman', fontsize = 14)
# plt.ylabel(""Selling_Price"", font= 'Times New Roman', fontsize = 14)
# plt.legend(handles = [plt.scatter(a,b, color='b'), plt.scatter(c,d, color='r')],
#            labels  = ['Test', 'Pred'])
# plt.grid()
#
# plt.show()


#Regularization

ridge = Ridge(alpha=10)
ridge.fit(X_train, y_train)



#MSE (Overfitting or underfitting)

y_pred_ridge = ridge.predict(X_test)

pred_train_ridge = ridge.predict(X_train)
test = mean_squared_error(y_test, y_pred_ridge)
train = mean_squared_error(y_train, pred_train_ridge)
print(""--------------------------------------------------Linear Regession------------------------------------------------------"")
print(""MSE: "", ""Test: "", test, ""Train: "", train, end=""\n"")
print()

#Validation

kfold_validation = KFold(10)
results = cross_val_score(ridge, X_train, y_train, cv=kfold_validation)
print(""--------------------------------------------------Ridge Regression------------------------------------------------------"")
print(""Results KFoldCrossValidation: "", results, end='\n')
acc = np.mean(results)
print()
print(""Accuracy KFoldCrossValidation: "", acc*100, end='\n')
print(""------------------------------------------------------------------------------------------------------------------------"")



#Prection on Test Data

# y_pred = np.array(y_pred)
# y_test = np.array(y_test)
# for i in range(len(y_pred)):
#     print(""Actual: "", y_test[i])
#     print(""Prediction: "", y_pred[i], end='\n')
    # print(i)

"
S2w0xZiy,gh api test,vpeter,Bash,Friday 7th of July 2023 12:29:45 PM CDT,"   repo url: https://api.github.com/repos/CoreELEC/addons-archive-ce-20
repo folder: Amlogic-ne/20.1/arm

  addon name: audiodecoder.2sf
    folder exists, skipping github update
  addon name: audiodecoder.asap
    folder exists, skipping github update

............................................

  addon name: pvr.iptvsimple
    adding addon.xml pvr.iptvsimple-20.10.0.1.zip
    adding addon.xml pvr.iptvsimple-20.6.1.1.zip
    adding addon.xml pvr.iptvsimple-20.7.0.1.zip
    adding addon.xml pvr.iptvsimple-20.8.1.1.zip
    adding addon.xml pvr.iptvsimple-20.8.1.2.zip
    adding addon.xml pvr.iptvsimple-20.9.1.1.zip

............................................

  addon name: visualization.waveform
    folder exists, skipping github update

processing: Amlogic-ne/20.1/arm/service.prometheus-node-exporter/service.prometheus-node-exporter-20.1.0.zip.addon.xml
processing: Amlogic-ne/20.1/arm/game.libretro.mame2003/game.libretro.mame2003-0.78.0.49.1.zip.addon.xml
processing: Amlogic-ne/20.1/arm/game.libretro.mame2003/game.libretro.mame2003-0.78.0.50.1.zip.addon.xml
processing: Amlogic-ne/20.1/arm/game.libretro.mame2003/game.libretro.mame2003-0.78.0.47.2.zip.addon.xml

............................................

processing: Amlogic-ne/20.1/arm/screensaver.asteroids/screensaver.asteroids-20.1.0.3.zip.addon.xml
processing: Amlogic-ne/20.1/arm/screensaver.asteroids/screensaver.asteroids-20.2.0.2.zip.addon.xml
processing: Amlogic-ne/20.1/arm/screensaver.asteroids/screensaver.asteroids-20.2.0.3.zip.addon.xml
"
Z5GZ6T3X,Skript-Reflect ✎ Eigene Achievements (1/2) #05 Tutorial,L0v0lup,Java,Friday 7th of July 2023 12:23:46 PM CDT,"import:
	org.bukkit.event.inventory.InventoryClickEvent
	org.bukkit.event.player.PlayerLoginEvent
	org.bukkit.event.block.BlockBreakEvent	

options:
	Slot_0_Head: ""{SkullOwner:{Id:""""ee81faf1-e1f2-49f6-a034-6148217ba388"""",Properties:{textures:[{Value:""""eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvM2YyZDM4ZWZhZTFlMGE1ODFmMjU4YWEwOWNhNjEwNzQ5ZDNlZmRkZjU4NjUzMDRmMmZhMThiN2ExYTBjM2JjZCJ9fX0=""""}]}}}""
	Slot_1_Head: ""{SkullOwner:{Id:""""ee81faf1-e1f2-49f6-a034-6148217ba388"""",Properties:{textures:[{Value:""""eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvMzVmMzcxYWNhYTQ5YWI5YmMxZmQ3ZmU5ZTVjOGIxYTM1MTUxYTZiN2ZhZTc5OGM3YTg0MTE3OWVlODU3YmRjZCJ9fX0=""""}]}}}""

function Achievements(p: player):
	open chest inventory with 6 rows named ""&6Achievements"" to {_p}
	set {_UUID} to {_p}'s uuid

	set slot 0 of {_p}'s current inventory to player head with nbt compound from {@Slot_0_Head} named ""&6Mining/Building""
	
	if {Achievements::1::%{_UUID}%::Tier} = 1:
		set slot 1 of {_p}'s current inventory to player head with nbt compound from {@Slot_1_Head} named ""&6Profi Miner 1"" with lore ""&fAufgabe: Farme 20 Stein"", """", ""&fFortschritt: %{Achievements::1::%{_UUID}%::Tier::Progress}%/20""
	else if {Achievements::1::%{_UUID}%::Tier} = 2:	
		set slot 1 of {_p}'s current inventory to player head with nbt compound from {@Slot_1_Head} named ""&6Profi Miner 2"" with lore ""&fAufgabe: Farme 500 Stein"", """", ""&fFortschritt: %{Achievements::1::%{_UUID}%::Tier::Progress}%/500""

command a:
	trigger:
		Achievements(player)

on InventoryClickEvent:

	set {_p} to event.getWhoClicked()
	set {_slot} to event.getSlot()
	set {_UUID} to {_p}.getUniqueId()
	{_slot} != -999

	set {_invname} to event.getView().getTitle()
	#event.getClickedInventory() != {_p}.getInventory()
	{_invname} = ""&6Achievements""
	event.setCancelled(true)"
9Nz8bc7L,Untitled,Houge_Langley,Bash,Friday 7th of July 2023 12:19:38 PM CDT,"[28965.617351] rcu: INFO: rcu_sched detected stalls on CPUs/tasks:
[28965.623289] rcu:     40-...0: (0 ticks this GP) idle=7564/1/0x4000000000000000 softirq=21359/21359 fqs=3000
[28965.632770] rcu:     41-...0: (0 ticks this GP) idle=b4b4/1/0x4000000000000000 softirq=5243/5243 fqs=3001
[28965.642072] rcu:     46-...0: (4 GPs behind) idle=c31c/1/0x4000000000000000 softirq=17661/17662 fqs=3001
[28965.651287] rcu:     58-...0: (1 GPs behind) idle=e7ac/1/0x4000000000000000 softirq=11682/11682 fqs=3001
[28965.660501] rcu:     62-...0: (1 GPs behind) idle=73e4/1/0x4000000000000000 softirq=11308/11310 fqs=3001
[28965.669728]  (detected by 15, t=6007 jiffies, g=426025, q=105 ncpus=64)
[28965.676341] Task dump for CPU 40:
[28965.679654] task:Xorg            state:R  running task     stack:0     pid:899   ppid:892    flags:0x00000008
[28965.689569] Call Trace:
[28965.692015] [<ffffffff80c642b2>] __schedule+0x312/0x8e8
[28965.697251] Task dump for CPU 41:
[28965.700564] task:firefox         state:R  running task     stack:0     pid:1571  ppid:966    flags:0x00000008
[28965.710476] Call Trace:
[28965.712920] [<ffffffff80c642b2>] __schedule+0x312/0x8e8
[28965.718143] Task dump for CPU 46:
[28965.721456] task:IPDL Background state:R  running task     stack:0     pid:1586  ppid:966    flags:0x00000008
[28965.731366] Call Trace:
[28965.733811] [<ffffffff80c642b2>] __schedule+0x312/0x8e8
[28965.739036] Task dump for CPU 58:
[28965.742346] task:Renderer        state:R  running task     stack:0     pid:1625  ppid:966    flags:0x00000008
[28965.752257] Call Trace:
[28965.754702] [<ffffffff80c642b2>] __schedule+0x312/0x8e8
[28965.759925] Task dump for CPU 62:
[28965.763237] task:firefox:gdrv0   state:R  running task     stack:0     pid:1642  ppid:966    flags:0x00000008
[28965.773147] Call Trace:
[28965.775591] [<ffffffff80c642b2>] __schedule+0x312/0x8e8
[28965.780814] [<ffffffff80c648d6>] schedule+0x4e/0xd0
[28965.785690] [<ffffffff800c5a0e>] futex_wait_queue+0x9a/0xc0
[28965.791261] [<ffffffff800c5fbc>] futex_wait+0xec/0x170
[28965.796396] [<ffffffff800c2d08>] do_futex+0xd6/0x13a
[28965.801363] [<ffffffff800c2e44>] sys_futex+0xd8/0x156
[28965.806414] [<ffffffff80003c8e>] ret_from_syscall+0x0/0x2
[29128.285474] systemd[1]: systemd-logind.service: Watchdog timeout (limit 3min)!
[29128.292868] systemd[1]: systemd-logind.service: Killing process 872 (systemd-logind) with signal SIGABRT.
[29145.860442] rcu: INFO: rcu_sched detected stalls on CPUs/tasks:
[29145.866376] rcu:     40-...0: (0 ticks this GP) idle=7564/1/0x4000000000000000 softirq=21359/21359 fqs=11811
[29145.875945] rcu:     41-...0: (0 ticks this GP) idle=b4b4/1/0x4000000000000000 softirq=5243/5243 fqs=11811
[29145.885334] rcu:     46-...0: (4 GPs behind) idle=c31c/1/0x4000000000000000 softirq=17661/17662 fqs=11811
[29145.894636] rcu:     58-...0: (1 GPs behind) idle=e7ac/1/0x4000000000000000 softirq=11682/11682 fqs=11811
[29145.903936] rcu:     62-...0: (1 GPs behind) idle=73e4/1/0x4000000000000000 softirq=11308/11310 fqs=11811
[29145.913247]  (detected by 21, t=24031 jiffies, g=426025, q=144 ncpus=64)
[29145.919948] Task dump for CPU 40:
[29145.923261] task:Xorg            state:R  running task     stack:0     pid:899   ppid:892    flags:0x00000008
[29145.933175] Call Trace:
[29145.935621] [<ffffffff80c642b2>] __schedule+0x312/0x8e8
[29145.940857] Task dump for CPU 41:
[29145.944170] task:firefox         state:R  running task     stack:0     pid:1571  ppid:966    flags:0x00000008
[29145.954081] Call Trace:
[29145.956526] [<ffffffff80c642b2>] __schedule+0x312/0x8e8
[29145.961750] Task dump for CPU 46:
[29145.965062] task:IPDL Background state:R  running task     stack:0     pid:1586  ppid:966    flags:0x00000008
[29145.974971] Call Trace:
[29145.977416] [<ffffffff80c642b2>] __schedule+0x312/0x8e8
[29145.982640] Task dump for CPU 58:
[29145.985951] task:Renderer        state:R  running task     stack:0     pid:1625  ppid:966    flags:0x00000008
[29145.995861] Call Trace:
[29145.998305] [<ffffffff80c642b2>] __schedule+0x312/0x8e8
[29146.003529] Task dump for CPU 62:
[29146.006841] task:firefox:gdrv0   state:R  running task     stack:0     pid:1642  ppid:966    flags:0x00000008
[29146.016751] Call Trace:
[29146.019195] [<ffffffff80c642b2>] __schedule+0x312/0x8e8
[29146.024417] [<ffffffff80c648d6>] schedule+0x4e/0xd0
[29146.029293] [<ffffffff800c5a0e>] futex_wait_queue+0x9a/0xc0
[29146.034865] [<ffffffff800c5fbc>] futex_wait+0xec/0x170
[29146.040001] [<ffffffff800c2d08>] do_futex+0xd6/0x13a
[29146.044968] [<ffffffff800c2e44>] sys_futex+0xd8/0x156
[29146.050018] [<ffffffff80003c8e>] ret_from_syscall+0x0/0x2"
ntb7A7fB,JMS Exp Table,Riremito,Java,Friday 7th of July 2023 12:03:47 PM CDT,"    // v131 or older?
    private static final int v131Table[]
            = {
                0,
                15,
                34,
                57,
                92,
                135,
                372,
                560,
                840,
                1242,
                1716,
                2360,
                3216,
                4200,
                5460,
                7050,
                8840,
                11040,
                13716,
                16680,
                20216,
                24402,
                28980,
                34320,
                40512,
                47216,
                54900,
                63666,
                73080,
                83720,
                95700,
                108480,
                122760,
                138666,
                155540,
                174216,
                194832,
                216600,
                240500,
                266682,
                294216,
                324240,
                356916,
                391160,
                428280,
                468450,
                510420,
                555680,
                604416,
                655200,
                709716,
                748608,
                789631,
                832902,
                878545,
                926689,
                977471,
                1031036,
                1087536,
                1147132,
                1209994,
                1276301,
                1346242,
                1420016,
                1497832,
                1579913,
                1666492,
                1757815,
                1854143,
                1955750,
                2062925,
                2175973,
                2295216,
                2420993,
                2553663,
                2693603,
                2841212,
                2996910,
                3161140,
                3334370,
                3517093,
                3709829,
                3913127,
                4127566,
                4353756,
                4592341,
                4844001,
                5109452,
                5389449,
                5684790,
                5996316,
                6324914,
                6671519,
                7037118,
                7422752,
                7829518,
                8258575,
                8711144,
                9188514,
                9692044,
                10223168,
                10783397,
                11374327,
                11997640,
                12655110,
                13348610,
                14080113,
                14851703,
                15665576,
                16524049,
                17429566,
                18384706,
                19392187,
                20454878,
                21575805,
                22758159,
                24005306,
                25320796,
                26708375,
                28171993,
                29715818,
                31344244,
                33061908,
                34873700,
                36784778,
                38800583,
                40926854,
                43169645,
                45535341,
                48030677,
                50662758,
                53439077,
                56367538,
                59456479,
                62714694,
                66151459,
                69776558,
                73600313,
                77633610,
                81887931,
                86375389,
                91108760,
                96101520,
                101367883,
                106922842,
                112782213,
                118962678,
                125481832,
                132358236,
                139611467,
                147262175,
                155332142,
                163844343,
                172823012,
                182293713,
                192283408,
                202820538,
                213935103,
                225658746,
                238024845,
                251068606,
                264827165,
                279339693,
                294647508,
                310794191,
                327825712,
                345790561,
                364739883,
                384727628,
                405810702,
                428049128,
                451506220,
                476248760,
                502347192,
                529875818,
                558913012,
                589541445,
                621848316,
                655925603,
                691870326,
                729784819,
                769777027,
                811960808,
                856456260,
                903390063,
                952895838,
                1005114529,
                1060194805,
                1118293480,
                1179575962,
                1244216724,
                1312399800,
                1384319309,
                1460180007,
                1540197871,
                1624600714,
                1713628833,
                1807535693,
                1906588648,
                2011069705
            };

    // v188+ BIGBANG
    private static final int v194Table[]
            = {
                0,
                15,
                34,
                57,
                92,
                135,
                372,
                560,
                840,
                1242,
                1242,
                1242,
                1242,
                1242,
                1242,
                1490,
                1788,
                2146,
                2575,
                3090,
                3708,
                4450,
                5340,
                6408,
                7690,
                9228,
                11074,
                13289,
                15947,
                19136,
                19136,
                19136,
                19136,
                19136,
                19136,
                22963,
                27556,
                33067,
                39680,
                47616,
                51425,
                55539,
                59982,
                64781,
                69963,
                75560,
                81605,
                88133,
                95184,
                102799,
                111023,
                119905,
                129497,
                139857,
                151046,
                163130,
                176180,
                190274,
                205496,
                221936,
                239691,
                258866,
                279575,
                301941,
                326096,
                352184,
                380359,
                410788,
                443651,
                479143,
                479143,
                479143,
                479143,
                479143,
                479143,
                512683,
                548571,
                586971,
                628059,
                672023,
                719065,
                769400,
                823258,
                880886,
                942548,
                1008526,
                1079123,
                1154662,
                1235488,
                1321972,
                1414510,
                1513526,
                1619473,
                1732836,
                1854135,
                1983924,
                2122799,
                2271395,
                2430393,
                2600521,
                2782557,
                2977336,
                3185750,
                3408753,
                3647366,
                3902682,
                4175870,
                4468181,
                4780954,
                5115621,
                5473714,
                5856874,
                6266855,
                6705535,
                7174922,
                7677167,
                8214569,
                8789589,
                9404860,
                10063200,
                10063200,
                10063200,
                10063200,
                10063200,
                10063200,
                10767624,
                11521358,
                12327853,
                13190803,
                14114159,
                15102150,
                16159301,
                17290452,
                18500784,
                19795839,
                21181548,
                22664256,
                24250754,
                25948307,
                27764688,
                29708216,
                31787791,
                34012936,
                36393842,
                38941411,
                41667310,
                44584022,
                47704904,
                51044247,
                54617344,
                58440558,
                62531397,
                66908595,
                71592197,
                76603651,
                81965907,
                87703520,
                93842766,
                100411760,
                107440583,
                113887018,
                120720239,
                127963453,
                135641260,
                143779736,
                152406520,
                161550911,
                171243966,
                181518604,
                192409720,
                203954303,
                216191561,
                229163055,
                242912838,
                257487608,
                272936864,
                289313076,
                306671861,
                325072173,
                344576503,
                365251093,
                387166159,
                410396129,
                435019897,
                461121091,
                488788356,
                518115657,
                549202596,
                582154752,
                617084037,
                654109079,
                693355624,
                734956961,
                779054379,
                825797642,
                875345501,
                927866231,
                983538205,
                1042550497,
                1105103527
            };"
fCZVSarK,asdas,cosenza987,C++,Friday 7th of July 2023 11:49:38 AM CDT,"// Date / Time: 2023-07-07 11:54:23

//Слава Україні, Героям слава

#include <bits/stdc++.h>

using namespace std;

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    unordered_set<long long> st;
    for(long long i = 2; i <= (int)1e6; i++) {
        long long cur = i * i, s = 1 + i + i * i;
        while(true) {
            long long tmp = cur * i;
            if(cur != tmp / i) break;
            cur = tmp;
            if(s > (long long)1e18 - cur) break;
            s += cur;
            st.insert(s);
        }
    }
    int t;
    cin >> t;
    while(t--) {
        long long n;
        cin >> n;
        if(n < 7) {
            cout << ""NO\n"";
            continue;
        }
        long long k = sqrtl(n);
        if(k * (k + 1) == n - 1) {
            cout << ""YES\n"";
            continue;
        }
        if(st.find(n) != st.end()) {
            cout << ""YES\n"";
        } else {
            cout << ""NO\n"";
        }
    }
    return 0;
}"
SY3UfjPs,Asyncio Problem,Nicky-Lalrochhara,Python,Friday 7th of July 2023 11:46:36 AM CDT,"Traceback (most recent call last):
  File ""/home/ubuntu/.local/lib/python3.10/site-packages/aiorun.py"", line 237, in new_coro
    await coro
  File ""/home/ubuntu/anjani/anjani/core/anjani_bot.py"", line 65, in init_and_run
    await anjani.run()
  File ""/home/ubuntu/anjani/anjani/core/telegram_bot.py"", line 261, in run
    await self.stop()
  File ""/home/ubuntu/anjani/anjani/core/anjani_bot.py"", line 71, in stop
    if not self.client.is_connected:
AttributeError: 'anjani' object has no attribute 'client'
  ERROR     |  asyncio          |  Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x7feadc42d240>"
m08XdVKK,Untitled,Farhana_Zaman,6502 Kick Assembler,Friday 7th of July 2023 11:41:17 AM CDT,".MODEL SMALL
.STACK 100H 
.DATA

MSG1 DB 'ENTER THE WORD: $'

.CODE

MAIN PROC
    
    MOV AX,@DATA  ;initializes the data
    MOV DS,AX
    
    MOV AH,9      ;reads the text
    LEA DX,MSG1
    INT 21h       ;display the msg
    
    XOR CX,CX     ;count=0
    
    MOV AH,1      ;prepare to read
    INT 21H       ;read a character
    
 WHILE_:     
    
    CMP AL,0DH    ;is AL greater than 0DH?
    JE END_WHILE  ;yes, exit loop
    
    PUSH AX       ;push it on stack
    INC CX        ;count = count + 1
    
    INT 21H       ;read character
    JMP WHILE_    ;loop back
    
 END_WHILE:
    
    MOV AH,2      ;display character function
    MOV DL,0DH    ;carriage return?
    INT 21H       ;execute
    MOV DL,0AH    ;LF
    INT 21H       ;execute
    JCXZ EXIT     ;exit if no characters read
    
 TOP:
    
    POP DX        ;get a character from stack
    INT 21H       ;display it 
    LOOP TOP    ;
    
 EXIT:
    
    MOV AH,4CH  ;
    INT 21H
    MAIN ENDP
END MAIN"
nwpVLG2s,Source code for CreateProcessInternalW @ kernel32.dll,RusNuker,C,Friday 7th of July 2023 11:29:39 AM CDT,"BOOL
WINAPI
CreateProcessInternalW(
    HANDLE hUserToken,
    LPCWSTR lpApplicationName,
    LPWSTR lpCommandLine,
    LPSECURITY_ATTRIBUTES lpProcessAttributes,
    LPSECURITY_ATTRIBUTES lpThreadAttributes,
    BOOL bInheritHandles,
    DWORD dwCreationFlags,
    LPVOID lpEnvironment,
    LPCWSTR lpCurrentDirectory,
    LPSTARTUPINFOW lpStartupInfo,
    LPPROCESS_INFORMATION lpProcessInformation,
    PHANDLE hRestrictedUserToken
    )

/*++

Routine Description:

    This is the worker routine for CreateProcess and CreateProcessAsUser.
    CreateProcessAsUser supplies a User token to be stamped on the new process.
    CreateProcess supplies NULL and the current process token is used.

    A process and thread object are created and a handle opened to each
    object using CreateProcessInternal.  Note that WinExec and LoadModule are
    still supported, but are implemented as a call to CreateProcess.

Arguments:

    hUserToken - Supplies an optional token handle to be set on the new process.
        Process token is used is this parameter is NULL.

    lpApplicationName - Supplies an optional pointer to a null terminated
        character string that contains the name of the image file to
        execute.  This is a fully qualified DOS path name.  If not
        specified, then the image file name is the first whitespace
        delimited token on the command line.

    lpCommandLine - Supplies a null terminated character string that
        contains the command line for the application to be executed.
        The entire command line is made available to the new process
        using GetCommandLine.  If the lpApplicationName parameter was
        not specified, then the first token of the command line
        specifies file name of the application (note that this token
        begins at the beginning of the command line and ends at the
        first ""white space"" character).  If the file name does not
        contain an extension (the presence of a "".""), then .EXE is
        assumed.  If the file name does not contain a directory path,
        Windows will search for the executable file in:

          - The current directory

          - The windows directory

          - The windows system directory

          - The directories listed in the path environment variable

        This parameter is optional onlu if the lpApplicationName
        parameter is specified.  In this case the command line the
        application receives will be the application name.

    lpProcessAttributes - An optional parameter that may be used to
        specify the attributes of the new process.  If the parameter is
        not specified, then the process is created without a security
        descriptor, and the resulting handle is not inherited on process
        creation:

        SECURITY_ATTRIBUTES Structure:

        DWORD nLength - Specifies the length of this structure.  Must be
            set to sizeof( SECURITY_ATTRUBUTES ).

        LPVOID lpSecurityDescriptor - Points to a security descriptor for
            the object (must be NULL for Win32, used on NT/Win32). The
            security descriptor controls the sharing of an object.

        BOOL bInheritHandle - Supplies a flag that indicates whether
            or not the returned handle is to be inherited by a new
            process during process creation.  A value of TRUE
            indicates that the new process will inherit the handle.

    lpThreadAttributes - An optional parameter that may be used to specify
        the attributes of the new thread.  If the parameter is not
        specified, then the thread is created without a security
        descriptor, and the resulting handle is not inherited on
        process creation.

    dwCreationFlags - Supplies additional flags that control the creation
        of the process.

        dwCreationFlags Flags:

        DEBUG_PROCESS - If this flag bit is set, then the creating
            process is treated as a debugger, and the process being
            created is created as a debugee.  All debug events occuring
            in the debugee are reported to the debugger.  If this bit is
            clear, but the calling process is a debugee, then the
            process becomes a debugee of the calling processes debugger.
            If this bit is clear and the calling processes is not a
            debugee then no debug related actions occur.

        DEBUG_ONLY_THIS_PROCESS - If this flag is set, then the
            DEBUG_PROCESS flag bit must also be set.  The calling
            process is is treated as a debugger, and the new process is
            created as its debuggee.  If the new process creates
            additional processes, no debug related activities (with
            respect to the debugger) occur.

        CREATE_SUSPENDED - The process is created, but the initial thread
            of the process remains suspended. The creator can resume this
            thread using ResumeThread. Until this is done, code in the
            process will not execute.

        CREATE_UNICODE_ENVIRONMENT - If set, the environment pointer
            points to a Unicode environment block.  Otherwise, the
            block is ANSI (actually OEM.)

    bInheritHandles - Supplies a flag that specifies whether or not the
        new process is to inherit handles to objects visible to the
        calling process.  A value of TRUE causes handles to be inherited
        by the new process.  If TRUE was specified, then for each handle
        visible to the calling process, if the handle was created with
        the inherit handle option, the handle is inherited to the new
        process.  The handle has the same granted access in the new
        process as it has in the calling process, and the value of the
        handle is the same.

    lpEnvironment - An optional parameter, that if specified, supplies a
        pointer to an environment block.  If the parameter is not
        specified, the environment block of the current process is used.
        This environment block is made available to the new process
        using GetEnvironmentStrings.

    lpCurrentDirectory - An optional parameter, that if specified,
        supplies a string representing the current drive and directory
        for the new process.  The string must be a fully qualified
        pathname that includes a drive letter.  If the parameter is not
        specified, then the new process is created with the same current
        drive and directory as the calling process.  This option is
        provided primarily for shells that want to start an application
        and specify its initial drive and working directory.

    lpStartupInfo - Supplies information that specified how the
        applications window is to be shown. This structure is described
        in the Win32 User Interface API Book.

    lpProcessInformation - Returns identification information about the
        new process.

    PROCESS_INFORMATION Structure:

        HANDLE hProcess - Returns a handle to the newly created process.
            Through the handle, all operations on process objects are
            allowed.

        HANDLE hThread - Returns a handle to the newly created thread.
            Through the handle, all operations on thread objects are
            allowed.

        DWORD dwProcessId - Returns a global process id that may be used
            to identify a process.  The value is valid from the time the
            process is created until the time the process is terminated.

        DWORD dwThreadId - Returns a global thread id that may be used
            to identify a thread.  The value is valid from the time the
            thread is created until the time the thread is terminated.

    hRestrictedUserToken - Returns a restricted token if a UsetToken was
        supplied. This is applicable for the CreateProcessAsUser case.
        The token is released by CreateProcessAsUser.

Return Value:

    TRUE - The operation was successful

    FALSE/NULL - The operation failed. Extended error status is available
        using GetLastError.

--*/

{
    NTSTATUS Status;
    OBJECT_ATTRIBUTES Obja;
    POBJECT_ATTRIBUTES pObja;
    HANDLE ProcessHandle, ThreadHandle, VdmWaitHandle = NULL;
    HANDLE FileHandle, SectionHandle;
    CLIENT_ID ClientId;
    UNICODE_STRING PathName;
    IO_STATUS_BLOCK IoStatusBlock;
    BOOLEAN TranslationStatus;
    RTL_RELATIVE_NAME RelativeName;
    PVOID FreeBuffer;
    LPWSTR NameBuffer;
    LPWSTR WhiteScan;
    ULONG Length,i;
    PROCESS_BASIC_INFORMATION ProcessInfo;
    SECTION_IMAGE_INFORMATION ImageInformation;
    NTSTATUS StackStatus;
    BOOLEAN bStatus;
    INITIAL_TEB InitialTeb;
    CONTEXT ThreadContext;
    PPEB Peb;
    BASE_API_MSG m;
    PBASE_CREATEPROCESS_MSG a = &m.u.CreateProcess;
    PBASE_CHECKVDM_MSG b = &m.u.CheckVDM;
    PWCH TempNull = NULL;
    WCHAR TempChar;
    UNICODE_STRING VdmNameString;
    PVOID BaseAddress;
    ULONG VdmReserve;
    SIZE_T BigVdmReserve;
    ULONG iTask=0;
    LPWSTR CurdirBuffer, CurdirFilePart;
    DWORD CurdirLength,CurdirLength2;
    ULONG VDMCreationState=0;
    ULONG VdmBinaryType = 0;
    BOOL  bMeowBinary = FALSE;
    UNICODE_STRING  SubSysCommandLine;
    PIMAGE_NT_HEADERS NtHeaders;
    DWORD dwNoWindow = (dwCreationFlags & CREATE_NO_WINDOW);
    ANSI_STRING AnsiStringVDMEnv;
    UNICODE_STRING UnicodeStringVDMEnv;
    WCHAR ImageFileDebuggerCommand[ MAX_PATH ];
    LPWSTR QuotedBuffer;
    BOOLEAN QuoteInsert;
    BOOLEAN QuoteCmdLine = FALSE;
    BOOLEAN QuoteFound;
    BOOL bSaferChecksNeeded = FALSE;
    BOOLEAN SearchRetry;
    BOOLEAN IsWowBinary = FALSE;
    STARTUPINFOW StartupInfo;
    DWORD LastError;
    DWORD fileattr;
    PROCESS_PRIORITY_CLASS PriClass;
    PVOID State;
    HANDLE DebugPortHandle = NULL;
    PVOID pAppCompatDataTemp;
    PVOID pAppCompatData  = NULL;
    DWORD cbAppCompatData = 0;    // for the future
    BOOLEAN bVdmRetry = FALSE;
    DWORD Flags;
    PVOID pAppCompatSxsData = NULL;
    DWORD cbAppCompatSxsData = 0;
    SXS_OVERRIDE_STREAM AppCompatSxsManifest;
    PCSR_CAPTURE_HEADER CaptureBuffer = NULL;
    SIZE_T SxsConglomeratedBufferSizeBytes;
    PBYTE SxsConglomeratedByteBuffer = NULL; // this contains all the of the below in one large right-sized heap allocation
                            // if we compute its size wrong, other code (if it gets it right..) should
                            // do more heap allocation
    ULONG sxsi; // for loop counter
    RTL_UNICODE_STRING_BUFFER SxsWin32ManifestPathBuffer;
    RTL_UNICODE_STRING_BUFFER SxsWin32PolicyPathBuffer;
    RTL_UNICODE_STRING_BUFFER SxsWin32AssemblyDirectoryBuffer;
    RTL_UNICODE_STRING_BUFFER SxsNtManifestPathBuffer;
    RTL_UNICODE_STRING_BUFFER SxsNtPolicyPathBuffer;
    const PRTL_UNICODE_STRING_BUFFER SxsStringBuffers[] = {
        // The order here does not matter.
        &SxsWin32ManifestPathBuffer,
        &SxsWin32PolicyPathBuffer,
        &SxsWin32AssemblyDirectoryBuffer,
        &SxsNtManifestPathBuffer,
        &SxsNtPolicyPathBuffer
    };
    UNICODE_STRING SxsWin32ExePath;
    UNICODE_STRING SxsNtExePath;
    BASE_MSG_SXS_HANDLES SxsExeHandles = {0};
    BASE_MSG_SXS_HANDLES SxsManifestFileHandles = {0};
    CONST SXS_CONSTANT_WIN32_NT_PATH_PAIR SxsExePathPair = { &SxsWin32ExePath, &SxsNtExePath };
    CONST SXS_WIN32_NT_PATH_PAIR SxsManifestPathPair = { &SxsWin32ManifestPathBuffer, &SxsNtManifestPathBuffer };
    CONST SXS_WIN32_NT_PATH_PAIR SxsPolicyPathPair = { &SxsWin32PolicyPathBuffer, &SxsNtPolicyPathBuffer };
    BASE_MSG_SXS_HANDLES SxsPolicyHandles = {0};
    PWSTR ExePathFullBuffer = NULL;

    DWORD dwJobMemberLevel = 0;
    HANDLE hSaferAssignmentJob = NULL;
    HANDLE hSaferRestrictedToken = NULL;

    DWORD dwBasePushProcessParametersFlags = 0;

#if defined(BUILD_WOW6432) || defined(_WIN64)
    BOOLEAN ComPlusILImage;
    LPCWSTR lpOriginalApplicationName = lpApplicationName;
    LPWSTR lpOriginalCommandLine = lpCommandLine;
#endif

#if defined(WX86)
    HANDLE Wx86Info = NULL;
#endif

#if defined WX86
    BOOLEAN UseKnownWx86Dll;
    UseKnownWx86Dll = NtCurrentTeb()->Wx86Thread.UseKnownWx86Dll;
    NtCurrentTeb()->Wx86Thread.UseKnownWx86Dll = FALSE;
#endif

    RtlZeroMemory(&a->Sxs, sizeof(a->Sxs));
    RtlZeroMemory(lpProcessInformation,sizeof(*lpProcessInformation));

    if (ARGUMENT_PRESENT( hRestrictedUserToken )) {
        *hRestrictedUserToken = NULL;
        }

    // Private VDM flag should be ignored; Its meant for internal use only.
    dwCreationFlags &= (ULONG)~CREATE_NO_WINDOW;

    if ((dwCreationFlags & (DETACHED_PROCESS | CREATE_NEW_CONSOLE)) ==
        (DETACHED_PROCESS | CREATE_NEW_CONSOLE)) {

        SetLastError(ERROR_INVALID_PARAMETER);
        return FALSE;
        }

    AnsiStringVDMEnv.Buffer = NULL;
    UnicodeStringVDMEnv.Buffer = NULL;

    //
    // the lowest specified priority class is used.
    //

    if (dwCreationFlags & IDLE_PRIORITY_CLASS ) {
        PriClass.PriorityClass = PROCESS_PRIORITY_CLASS_IDLE;
        }
    else if (dwCreationFlags & BELOW_NORMAL_PRIORITY_CLASS ) {
        PriClass.PriorityClass = PROCESS_PRIORITY_CLASS_BELOW_NORMAL;
        }
    else if (dwCreationFlags & NORMAL_PRIORITY_CLASS ) {
        PriClass.PriorityClass = PROCESS_PRIORITY_CLASS_NORMAL;
        }
    else if (dwCreationFlags & ABOVE_NORMAL_PRIORITY_CLASS ) {
        PriClass.PriorityClass = PROCESS_PRIORITY_CLASS_ABOVE_NORMAL;
        }
    else if (dwCreationFlags & HIGH_PRIORITY_CLASS ) {
        PriClass.PriorityClass =  PROCESS_PRIORITY_CLASS_HIGH;
        }
    else if (dwCreationFlags & REALTIME_PRIORITY_CLASS ) {
        if ( BasepIsRealtimeAllowed(FALSE) ) {
            PriClass.PriorityClass =  PROCESS_PRIORITY_CLASS_REALTIME;
            }
        else {
            PriClass.PriorityClass =  PROCESS_PRIORITY_CLASS_HIGH;
            }
        }
    else {
        PriClass.PriorityClass = PROCESS_PRIORITY_CLASS_UNKNOWN;
        }
    PriClass.Foreground = FALSE;

    dwCreationFlags = (dwCreationFlags & ~PRIORITY_CLASS_MASK );

    //
    // Default separate/shared VDM option if not explicitly specified.
    //

    if (dwCreationFlags & CREATE_SEPARATE_WOW_VDM) {
        if (dwCreationFlags & CREATE_SHARED_WOW_VDM) {
            SetLastError(ERROR_INVALID_PARAMETER);

            return FALSE;
            }
        }
    else
    if ((dwCreationFlags & CREATE_SHARED_WOW_VDM) == 0) {
        if (BaseStaticServerData->DefaultSeparateVDM) {
            dwCreationFlags |= CREATE_SEPARATE_WOW_VDM;
            }
        }

    if ((dwCreationFlags & CREATE_SEPARATE_WOW_VDM) == 0) {
        //
        // If the creator is running inside a job object, always
        // set SEPERATE_WOW_VDM so the VDM is part of the job.
        //
        JOBOBJECT_BASIC_UI_RESTRICTIONS UiRestrictions;

        Status = NtQueryInformationJobObject(NULL,
                                             JobObjectBasicUIRestrictions,
                                             &UiRestrictions,
                                             sizeof(UiRestrictions),
                                             NULL);
        if (Status != STATUS_ACCESS_DENIED) {
            //
            // Anything other than STATUS_ACCESS_DENIED indicates the
            // current process is inside a job.
            //
            dwCreationFlags = (dwCreationFlags & (~CREATE_SHARED_WOW_VDM)) |
                                  CREATE_SEPARATE_WOW_VDM;
            }
        }


    //
    //  If ANSI environment, convert to Unicode
    //

    if (lpEnvironment && !(dwCreationFlags & CREATE_UNICODE_ENVIRONMENT) ) {
        PUCHAR s;
        STRING Ansi;
        UNICODE_STRING Unicode;
        MEMORY_BASIC_INFORMATION MemoryInformation;

        Ansi.Buffer = s = lpEnvironment;
        while (*s || *(s+1))            // find end of block
            s++;

        Ansi.Length = (USHORT)(s - Ansi.Buffer) + 1;
        Ansi.MaximumLength = Ansi.Length + 1;
        MemoryInformation.RegionSize = Ansi.MaximumLength * sizeof(WCHAR);
        Unicode.Buffer = NULL;
        Status = NtAllocateVirtualMemory( NtCurrentProcess(),
                                          &Unicode.Buffer,
                                          0,
                                          &MemoryInformation.RegionSize,
                                          MEM_COMMIT,
                                          PAGE_READWRITE
                                        );
        if (!NT_SUCCESS(Status) ) {
            BaseSetLastNTError(Status);

            return FALSE;
            }

        Unicode.MaximumLength = (USHORT)MemoryInformation.RegionSize;
        Status = RtlAnsiStringToUnicodeString(&Unicode, &Ansi, FALSE);
        if (!NT_SUCCESS(Status) ) {
            NtFreeVirtualMemory( NtCurrentProcess(),
                                 &Unicode.Buffer,
                                 &MemoryInformation.RegionSize,
                                 MEM_RELEASE
                               );
            BaseSetLastNTError(Status);

            return FALSE;
            }
        lpEnvironment = Unicode.Buffer;
        }

    FileHandle = NULL;
    SectionHandle = NULL;
    ProcessHandle = NULL;
    ThreadHandle = NULL;
    FreeBuffer = NULL;
    NameBuffer = NULL;
    VdmNameString.Buffer = NULL;
    BaseAddress = (PVOID)1;
    VdmReserve = 0;
    CurdirBuffer = NULL;
    CurdirFilePart = NULL;
    SubSysCommandLine.Buffer = NULL;
    QuoteFound = FALSE;
    QuoteInsert = FALSE;
    QuotedBuffer = NULL;

    try {

        //
        // Make a copy of the startup info so we can change it.
        //

        StartupInfo = *lpStartupInfo;

        //
        // STARTF_USEHOTKEY means hStdInput is really the hotkey value.
        // STARTF_HASSHELLDATA means std handles are used for shell-private
        // data.  This flag is used if an icon is passed to ShellExecuteEx.
        // As a result they cannot be specified with STARTF_USESTDHANDLES.
        // Consistent with Win95, USESTDHANDLES is ignored.
        //

        if (StartupInfo.dwFlags & STARTF_USESTDHANDLES &&
            StartupInfo.dwFlags & (STARTF_USEHOTKEY | STARTF_HASSHELLDATA)) {

            StartupInfo.dwFlags &= ~STARTF_USESTDHANDLES;
            }

VdmRetry:
        //
        // None of this cleanup/reinit occurs for launching a Win32 or Win64 .exe,
        // but they generally do occur for launching 16bit, .bat, etc.
        //
        if (NameBuffer) {
            RtlFreeHeap(RtlProcessHeap(), 0, NameBuffer);
            NameBuffer = NULL;
        }
        if (FreeBuffer) {
            RtlFreeHeap(RtlProcessHeap(), 0, FreeBuffer);
            FreeBuffer = NULL;
        }
        if (FileHandle) {
            NtClose(FileHandle);
            FileHandle = NULL;
        }

        LastError = 0;
        SearchRetry = TRUE;
        QuoteInsert = FALSE;
        QuoteCmdLine = FALSE;
        if (!ARGUMENT_PRESENT( lpApplicationName )) {

            //
            // Locate the image
            //

            // forgot to free NameBuffer before goto VdmRetry???
            ASSERT(NameBuffer == NULL);

            NameBuffer = RtlAllocateHeap( RtlProcessHeap(),
                                          MAKE_TAG( TMP_TAG ),
                                          MAX_PATH * sizeof( WCHAR ));
            if ( !NameBuffer ) {
                BaseSetLastNTError(STATUS_NO_MEMORY);
                return FALSE;
                }
            lpApplicationName = lpCommandLine;
            TempNull = (PWCH)lpApplicationName;
            WhiteScan = (LPWSTR)lpApplicationName;

            //
            // check for lead quote
            //
            if ( *WhiteScan == L'\""' ) {
                SearchRetry = FALSE;
                WhiteScan++;
                lpApplicationName = WhiteScan;
                while(*WhiteScan) {
                    if ( *WhiteScan == (WCHAR)'\""' ) {
                        TempNull = (PWCH)WhiteScan;
                        QuoteFound = TRUE;
                        break;
                        }
                    WhiteScan++;
                    TempNull = (PWCH)WhiteScan;
                    }
                }
            else {
retrywsscan:
                lpApplicationName = lpCommandLine;
                while(*WhiteScan) {
                    if ( *WhiteScan == (WCHAR)' ' ||
                         *WhiteScan == (WCHAR)'\t' ) {
                        TempNull = (PWCH)WhiteScan;
                        break;
                        }
                    WhiteScan++;
                    TempNull = (PWCH)WhiteScan;
                    }
                }
            TempChar = *TempNull;
            *TempNull = UNICODE_NULL;

#ifdef WX86

            //
            // Wx86 applications must use x86 version of known exes
            // for compatibility.
            //

            if (UseKnownWx86Dll) {
               LPWSTR KnownName;

               NtCurrentTeb()->Wx86Thread.UseKnownWx86Dll = FALSE;

               KnownName = BasepWx86KnownExe(lpApplicationName);
               if (KnownName) {
                  lpApplicationName = KnownName;
                  }
               }
#endif


            Length = SearchPathW(
                        NULL,
                        lpApplicationName,
                        L"".exe"",
                        MAX_PATH,
                        NameBuffer,
                        NULL
                        )*2;

            if (Length != 0 && Length < MAX_PATH * sizeof( WCHAR )) {
                //
                // SearchPathW worked, but file might be a directory
                // if this happens, we need to keep trying
                //
                fileattr = GetFileAttributesW(NameBuffer);
                if ( fileattr != 0xffffffff &&
                     (fileattr & FILE_ATTRIBUTE_DIRECTORY) ) {
                    Length = 0;
                } else {
                    Length++;
                    Length++;
                }
            }

            if ( !Length || Length >= MAX_PATH<<1 ) {

                //
                // If we search pathed, then return file not found.
                // otherwise, try to be more specific.
                //
                RTL_PATH_TYPE PathType;
                HANDLE hFile;

                PathType = RtlDetermineDosPathNameType_U(lpApplicationName);
                if ( PathType != RtlPathTypeRelative ) {

                    //
                    // The failed open should set get last error properly.
                    //

                    hFile = CreateFileW(
                                lpApplicationName,
                                GENERIC_READ,
                                FILE_SHARE_READ | FILE_SHARE_WRITE,
                                NULL,
                                OPEN_EXISTING,
                                FILE_ATTRIBUTE_NORMAL,
                                NULL
                                );
                    if ( hFile != INVALID_HANDLE_VALUE ) {
                        CloseHandle(hFile);
                        BaseSetLastNTError(STATUS_OBJECT_NAME_NOT_FOUND);
                        }
                    }
                else {
                    BaseSetLastNTError(STATUS_OBJECT_NAME_NOT_FOUND);
                    }

                //
                // remember initial last error value for the retry scan path
                //

                if ( LastError ) {
                    SetLastError(LastError);
                    }
                else {
                    LastError = GetLastError();
                    }

                //
                // restore the command line
                //

                *TempNull = TempChar;
                lpApplicationName = NameBuffer;

                //
                // If we still have command line left, then keep going
                // the point is to march through the command line looking
                // for whitespace so we can try to find an image name
                // launches of things like:
                // c:\word 95\winword.exe /embedding -automation
                // require this. Our first iteration will stop at c:\word, our next
                // will stop at c:\word 95\winword.exe
                //
                if (*WhiteScan && SearchRetry) {
                    WhiteScan++;
                    TempNull = WhiteScan;
                    QuoteInsert = TRUE;
                    QuoteFound = TRUE;
                    goto retrywsscan;
                }

                return FALSE;
                }
            //
            // restore the command line
            //

            *TempNull = TempChar;
            lpApplicationName = NameBuffer;

            //
            // check whether it is setup.exe started by winlogon.exe
            //
            if (BasepIsSetupInvokedByWinLogon(lpApplicationName))
            {
                // validate the flag 
                if (!(dwCreationFlags & CREATE_IGNORE_SYSTEM_DEFAULT))
                {
                    //
                    // BUGBUBGUBGUBUGBUGBUGUBGBUGUBGUB
                    //    Winlogon does not set the flag correctly
                    //    in phase1, ignore it(now)
                    //    in phase2, ASSERT it
                    // BUGBUBGUBGUBUGBUGBUGUBGBUGUBGUB
                    //
                    dwCreationFlags |= CREATE_IGNORE_SYSTEM_DEFAULT;
                }
            }
            
        }
        else
        if (!ARGUMENT_PRESENT( lpCommandLine ) || *lpCommandLine == UNICODE_NULL ) {
            QuoteCmdLine = TRUE;
            lpCommandLine = (LPWSTR)lpApplicationName;
            }


#ifdef WX86

       //
       // Wx86 applications must use x86 version of known exes
       // for compatibility.
       //

       if (UseKnownWx86Dll) {
           LPWSTR KnownName;

           NtCurrentTeb()->Wx86Thread.UseKnownWx86Dll = FALSE;

           KnownName = BasepWx86KnownExe(lpApplicationName);
           if (KnownName) {

               RtlFreeHeap(RtlProcessHeap(), 0, NameBuffer);
               NameBuffer = KnownName;
               lpApplicationName = KnownName;
               }
           }

#endif

        //
        // Translate to an NT name.
        //

        TranslationStatus = RtlDosPathNameToNtPathName_U(
                                lpApplicationName,
                                &PathName,
                                NULL,
                                &RelativeName
                                );

        if ( !TranslationStatus ) {
            SetLastError(ERROR_PATH_NOT_FOUND);

            return FALSE;
            }

        // forgot to free FreeBuffer before goto VdmRetry????
        ASSERT(FreeBuffer == NULL);
        FreeBuffer = PathName.Buffer;

        RtlInitUnicodeString(&SxsWin32ExePath, lpApplicationName);

        {
            RTL_PATH_TYPE SxsWin32ExePathType = RtlDetermineDosPathNameType_U(lpApplicationName);

            if ((SxsWin32ExePathType != RtlPathTypeDriveAbsolute) &&
                (SxsWin32ExePathType != RtlPathTypeUncAbsolute)) {
                if (ExePathFullBuffer == NULL) {
                    // It seems that with VDM things, we can rerun this code with a new lpApplication, so
                    // we protect against double-allocating the buffer and just allocate a big
                    // MAX_PATH one the first time through, assuming it's good enough for the 2ndary times
                    // too.
                    ExePathFullBuffer = RtlAllocateHeap(RtlProcessHeap(), 0, (MAX_PATH + 1) * sizeof(WCHAR));
                    if (ExePathFullBuffer == NULL) {
                        SetLastError(ERROR_NOT_ENOUGH_MEMORY);
                        return FALSE;
                    }
                }

                RtlGetFullPathName_U(lpApplicationName, (MAX_PATH + 1) * sizeof(WCHAR), ExePathFullBuffer, NULL);

                RtlInitUnicodeString(&SxsWin32ExePath, ExePathFullBuffer);
            }
        }


        SxsNtExePath = PathName;

        if ( RelativeName.RelativeName.Length ) {
            PathName = *(PUNICODE_STRING)&RelativeName.RelativeName;
            }
        else {
            RelativeName.ContainingDirectory = NULL;
            }

        InitializeObjectAttributes(
            &Obja,
            &PathName,
            OBJ_CASE_INSENSITIVE,
            RelativeName.ContainingDirectory,
            NULL
            );

        //
        // Open the file for red and execute access
        //

        Status = NtOpenFile(
                    &FileHandle,
                    SYNCHRONIZE | FILE_EXECUTE | FILE_READ_ATTRIBUTES | FILE_READ_DATA,
                    &Obja,
                    &IoStatusBlock,
                    FILE_SHARE_READ | FILE_SHARE_DELETE,
                    FILE_SYNCHRONOUS_IO_NONALERT | FILE_NON_DIRECTORY_FILE
                    );

        if (!NT_SUCCESS(Status) ) {

            //
            // We failed. Open the file for lesser access.
            //

            Status = NtOpenFile(
                        &FileHandle,
                        SYNCHRONIZE | FILE_EXECUTE,
                        &Obja,
                        &IoStatusBlock,
                        FILE_SHARE_READ | FILE_SHARE_DELETE,
                        FILE_SYNCHRONOUS_IO_NONALERT | FILE_NON_DIRECTORY_FILE
                        );

            if (!NT_SUCCESS(Status) ) {
                //
                // if we failed, see if this is a device. If it is a device,
                // then just return invalid image format
                //

                if ( RtlIsDosDeviceName_U(RTL_CONST_CAST(PWSTR)(lpApplicationName)) ) {
                    SetLastError(ERROR_BAD_DEVICE);
                    }
                else {
                    BaseSetLastNTError(Status);
                    }

                return FALSE;
            }

        }

        //
        // If no desktop has been specified, use the caller's
        // desktop.
        //

        if (StartupInfo.lpDesktop == NULL) {
            StartupInfo.lpDesktop =
                    (LPWSTR)((PRTL_USER_PROCESS_PARAMETERS)NtCurrentPeb()->
                        ProcessParameters)->DesktopInfo.Buffer;
            }

        //
        // Create a section object backed by the file
        //

        Status = NtCreateSection(
                    &SectionHandle,
                    SECTION_ALL_ACCESS,
                    NULL,
                    NULL,
                    PAGE_EXECUTE,
                    SEC_IMAGE,
                    FileHandle
                    );

        //
        // App Certification DLL
        //

        if (NT_SUCCESS(Status)) {
            Status = BasepIsProcessAllowed(lpApplicationName);

            if (!NT_SUCCESS(Status)) {
                BaseSetLastNTError(Status);
                NtClose(SectionHandle);
                return FALSE;
            }


       
          //
          // If Meow subsystem is enabled and caller specified CREATE_FORECEDOS for a win32 image
          // push it into the meow subsystem
          //

          if ((dwCreationFlags & CREATE_FORCEDOS) && BaseStaticServerData->ForceDos) {
               dwCreationFlags &= ~(CREATE_SHARED_WOW_VDM | CREATE_FORCEDOS);
               dwCreationFlags |= CREATE_SEPARATE_WOW_VDM;
               Status = STATUS_INVALID_IMAGE_WIN_16;
               bMeowBinary = TRUE;

               NtClose(SectionHandle);
               SectionHandle = NULL;
          }


       }

        //
        // check appcompat (aka apphelp)
        //
        // if we are running under debugger, bVdmRetry will be FALSE
        // yet pAppCompatData may have some data (from the app itself)
        // debugger will do a separate CreateProcess on debugee
        //
        // apphelp gets called if it is win32 app or if it is a .bat or .cmd 

       if(!bVdmRetry &&
          (NT_SUCCESS(Status) ||
           (Status == STATUS_INVALID_IMAGE_NOT_MZ && !BaseIsDosApplication(&PathName,Status)))
         ) {
            NTSTATUS BadAppStatus;

            if (NULL != pAppCompatData) {
                RtlFreeHeap(RtlProcessHeap(), 0, pAppCompatData);
                pAppCompatData = NULL;
                }
              
            if (NULL != pAppCompatSxsData) {
                RtlFreeHeap(RtlProcessHeap(), 0, pAppCompatSxsData);
                pAppCompatSxsData = NULL;
                }
             
            //
            // we only check ONCE --
            // the second time around is rather meaningless - to check for posix/ntvdm/os2 emulation
            //
            BadAppStatus = BasepCheckBadapp(FileHandle,
                                            PathName.Buffer,
                                            (WCHAR*)lpEnvironment,
                                            &pAppCompatData,
                                            &cbAppCompatData,
                                            &pAppCompatSxsData,
                                            &cbAppCompatSxsData);
                    
            if (!NT_SUCCESS(BadAppStatus)) {
                if (BadAppStatus == STATUS_ACCESS_DENIED) {
                    SetLastError(ERROR_CANCELLED);
                    }
                else {
                    BaseSetLastNTError(BadAppStatus);
                    }

                if (SectionHandle) {
                    NtClose(SectionHandle);
                    SectionHandle = NULL;
                    }
                return FALSE;
                }
            }

       //
       // Winsafer code
       //
       // If this is the first time then we will have to do Safer checks.
       // Note that we do not impose any restrictions on the interpreter
       // itself since it is part of OS.
       //


       if ((!bVdmRetry) &&
           ( (dwCreationFlags & CREATE_PRESERVE_CODE_AUTHZ_LEVEL) == 0 )) {

           NTSTATUS SaferStatus;

 
           {

               //
               // WinSafer process sandbox restrictions handling.
               // Should be done for non .NET images only.
               //

               SaferStatus = BasepCheckWinSaferRestrictions(
                                                      hUserToken,
                                                      lpApplicationName,   // same as PathName.Buffer
                                                      FileHandle,
                                                      &dwJobMemberLevel,
                                                      &hSaferRestrictedToken,
                                                      &hSaferAssignmentJob);
               if (SaferStatus == -1) {
                   SetLastError(ERROR_ACCESS_DISABLED_BY_POLICY);
                   bStatus =  FALSE;
                   leave;
               } else if (!NT_SUCCESS(SaferStatus)) {
                   BaseSetLastNTError(SaferStatus);
                   bStatus = FALSE;
                   leave;
               }
           }
       }


        if (!NT_SUCCESS(Status)) {
            switch (Status) {
                // 16 bit OS/2 exe
                case STATUS_INVALID_IMAGE_NE_FORMAT:
#if defined(i386) && defined(OS2_SUPPORT_ENABLED)
                //
                // Use OS/2 if x86 (OS/2 not supported on risc),
                //    and CreationFlags don't have forcedos bit
                //    and Registry didn't specify ForceDos
                //
                // else execute as a DOS bound app.
                //
                //

                if (!(dwCreationFlags & CREATE_FORCEDOS) &&
                    !BaseStaticServerData->ForceDos)
                  {

                    if ( !BuildSubSysCommandLine( L""OS2 /P "",
                                                  lpApplicationName,
                                                  lpCommandLine,
                                                  &SubSysCommandLine
                                                ) ) {
                        return FALSE;
                        }

                    lpCommandLine = SubSysCommandLine.Buffer;

                    lpApplicationName = NULL;

                    bVdmRetry = TRUE;
                    goto VdmRetry;
                    }
#endif
                    // Falls into Dos case, so that stub message will be
                    // printed, and bound apps will run w/o OS/2 subsytem

                // Dos .exe or .com

                case STATUS_INVALID_IMAGE_PROTECT:
                case STATUS_INVALID_IMAGE_NOT_MZ:
ForceDos:
                    {
                    ULONG BinarySubType;

                    BinarySubType = BINARY_TYPE_DOS_EXE;
                    if (Status == STATUS_INVALID_IMAGE_PROTECT   ||
                        Status == STATUS_INVALID_IMAGE_NE_FORMAT ||
                       (BinarySubType = BaseIsDosApplication(&PathName,Status)) )
                       {
#if defined(_WIN64) || defined(BUILD_WOW6432)
                        //
                        // If this a DOS application, then we need to pop up a dialog
                        // saying that this an invalid win32 application.
                        //
                        goto RaiseInvalidWin32Error;
#endif
                        VdmBinaryType = BINARY_TYPE_DOS;

                        // create the environment before going to the
                        // server. This was done becuase we want NTVDM
                        // to have the new environment when it gets
                        // created.
                        if (!BaseCreateVDMEnvironment(
                                    lpEnvironment,
                                    &AnsiStringVDMEnv,
                                    &UnicodeStringVDMEnv
                                    )) {
                            return FALSE;
                        }

                        if(!BaseCheckVDM(VdmBinaryType | BinarySubType,
                                         lpApplicationName,
                                         lpCommandLine,
                                         lpCurrentDirectory,
                                         &AnsiStringVDMEnv,
                                         &m,
                                         &iTask,
                                         dwCreationFlags,
                                         &StartupInfo
                                         )) {

                            return FALSE;
                        }

                        // Check the return value from the server
                        switch (b->VDMState & VDM_STATE_MASK) {
                            case VDM_NOT_PRESENT:
                                // mark this so the server can undo
                                // creation if something goes wrong.
                                // We marked it ""partially created"" because
                                // the NTVDM has yet not been fully created.
                                // a call to UpdateVdmEntry to update
                                // process handle will signal the NTVDM
                                // process completed creation
                                VDMCreationState = VDM_PARTIALLY_CREATED;
                                // fail the call if NTVDM process is being
                                // created DETACHED.
                                // note that, we let it go if NTVDM process
                                // is already running.
                                if (dwCreationFlags & DETACHED_PROCESS) {
                                    SetLastError(ERROR_ACCESS_DENIED);
                                    return FALSE;
                                    }
                                if (!BaseGetVdmConfigInfo(lpCommandLine,
                                                          iTask,
                                                          VdmBinaryType,
                                                          &VdmNameString,
                                                          &VdmReserve)) {
                                    BaseSetLastNTError(Status);
                                    return FALSE;
                                    }

                                lpCommandLine = VdmNameString.Buffer;
                                lpApplicationName = NULL;

                                break;

                            case VDM_PRESENT_NOT_READY:
                                SetLastError (ERROR_NOT_READY);
                                return FALSE;

                            case VDM_PRESENT_AND_READY:
                                VDMCreationState = VDM_BEING_REUSED;
                                VdmWaitHandle = b->WaitObjectForParent;
                                break;
                            }
                         VdmReserve--;               // we reserve from addr 1
                         if(VdmWaitHandle)
                            goto VdmExists;
                         else{
                            bInheritHandles = FALSE;
                            if (lpEnvironment &&
                                !(dwCreationFlags & CREATE_UNICODE_ENVIRONMENT)){
                                RtlDestroyEnvironment(lpEnvironment);
                                }
                            lpEnvironment = UnicodeStringVDMEnv.Buffer;
                            bVdmRetry = TRUE;
                            goto VdmRetry;
                            }
                        }
                    else {

                        //
                        //  must be a .bat or .cmd file
                        //

                        static PWCHAR CmdPrefix = L""cmd /c "";
                        PWCHAR NewCommandLine;
                        ULONG Length;
                        PWCHAR Last4 = &PathName.Buffer[PathName.Length / sizeof( WCHAR )-4];

                        if ( PathName.Length < 8 ) {
                            SetLastError(ERROR_BAD_EXE_FORMAT);
                            return FALSE;
                            }

                        if (_wcsnicmp( Last4, L"".bat"", 4 ) && _wcsnicmp( Last4, L"".cmd"", 4 )) {
                            SetLastError(ERROR_BAD_EXE_FORMAT);
                            return FALSE;
                        }

                        Length = wcslen( CmdPrefix )
                                 + (QuoteCmdLine || QuoteFound )
                                 + wcslen( lpCommandLine )
                                 + (QuoteCmdLine || QuoteFound)
                                 + 1;

                        NewCommandLine = RtlAllocateHeap( RtlProcessHeap( ),
                                                          MAKE_TAG( TMP_TAG ),
                                                          Length * sizeof( WCHAR ) );

                        if (NewCommandLine == NULL) {
                            BaseSetLastNTError(STATUS_NO_MEMORY);
                            return FALSE;
                        }

                        wcscpy( NewCommandLine, CmdPrefix );
                        if (QuoteCmdLine || QuoteFound) {
                            wcscat( NewCommandLine, L""\"""" );
                        }
                        wcscat( NewCommandLine, lpCommandLine );
                        if (QuoteCmdLine || QuoteFound) {
                            wcscat( NewCommandLine, L""\"""" );
                        }

                        RtlInitUnicodeString( &SubSysCommandLine, NewCommandLine );

                        lpCommandLine = SubSysCommandLine.Buffer;

                        lpApplicationName = NULL;

                        bVdmRetry = TRUE;
                        goto VdmRetry;

                        }

                    }

                // 16 bit windows exe
                case STATUS_INVALID_IMAGE_WIN_16:
#if defined(BUILD_WOW6432) || defined(_WIN64)
                   if (lpOriginalApplicationName == NULL) {
                       // pass in the part of the command line after the exe name
                       // including whitespace
                       lpCommandLine = ((*TempNull == '\""') ? TempNull + 1 : TempNull);
                   } else {
                       lpCommandLine = lpOriginalCommandLine;
                   }

                   return NtVdm64CreateProcess(lpOriginalApplicationName == NULL,
                                               lpApplicationName,             // this is now the real file name we've loaded
                                               lpCommandLine,
                                               lpProcessAttributes,
                                               lpThreadAttributes,
                                               bInheritHandles,
                                               (dwCreationFlags & ~CREATE_UNICODE_ENVIRONMENT),  // the environment has already been converted to unicode
                                               lpEnvironment,
                                               lpCurrentDirectory,
                                               lpStartupInfo,
                                               lpProcessInformation
                                               );
#endif
                   if (dwCreationFlags & CREATE_FORCEDOS) {
                       goto ForceDos;
                       }

                    IsWowBinary = TRUE;
                    if (!BaseCreateVDMEnvironment(lpEnvironment,
                                                  &AnsiStringVDMEnv,
                                                  &UnicodeStringVDMEnv)) {
                        return FALSE;
                        }

RetrySepWow:
                    VdmBinaryType = dwCreationFlags & CREATE_SEPARATE_WOW_VDM
                                     ? BINARY_TYPE_SEPWOW : BINARY_TYPE_WIN16;

                    if (!BaseCheckVDM(VdmBinaryType,
                                      lpApplicationName,
                                      lpCommandLine,
                                      lpCurrentDirectory,
                                      &AnsiStringVDMEnv,
                                      &m,
                                      &iTask,
                                      dwCreationFlags,
                                      &StartupInfo
                                      ))
                       {
                        //
                        // If we failed with access denied, caller may not
                        // be allowed allowed to access the shared wow's
                        // desktop, so retry as a separate wow
                        //
                        if (VdmBinaryType == BINARY_TYPE_WIN16 &&
                            GetLastError() == ERROR_ACCESS_DENIED)
                          {
                           dwCreationFlags |= CREATE_SEPARATE_WOW_VDM;
                           }
                        else {
                            return FALSE;
                            }
                        goto RetrySepWow;
                        }

                    // Check the return value from the server
                    switch (b->VDMState & VDM_STATE_MASK){
                        case VDM_NOT_PRESENT:
                            // mark this so the server can undo
                            // creation if something goes wrong.
                            // We marked it ""partitially created"" because
                            // the NTVDM has yet not been fully created.
                            // a call to UpdateVdmEntry to update
                            // process handle will signal the NTVDM
                            // process completed creation

                            VDMCreationState = VDM_PARTIALLY_CREATED;

                            // jarbats: 1/8/2001
                            // Tell BaseGetVdmConfigInfo to create
                            // vdm commandline for meow
                            //

                            if (bMeowBinary)
                               {
                               VdmReserve = 1;
                               }

                            if (!BaseGetVdmConfigInfo(
                                    lpCommandLine,
                                    iTask,
                                    VdmBinaryType,
                                    &VdmNameString,
                                    &VdmReserve
                                    )) {
                                BaseSetLastNTError(Status);
                                return FALSE;
                                }

                            lpCommandLine = VdmNameString.Buffer;
                            lpApplicationName = NULL;


                            //
                            // Wow must have a hidden console
                            // Throw away DETACHED_PROCESS flag which isn't
                            // meaningful for Win16 apps.
                            //

                            dwCreationFlags |= CREATE_NO_WINDOW;
                            dwCreationFlags &= ~(CREATE_NEW_CONSOLE | DETACHED_PROCESS);


                            //
                            // We're starting a WOW VDM, turn on feedback unless
                            // the creator passed STARTF_FORCEOFFFEEDBACK.
                            //

                            StartupInfo.dwFlags |= STARTF_FORCEONFEEDBACK;

                            break;

                        case VDM_PRESENT_NOT_READY:
                            SetLastError (ERROR_NOT_READY);
                            return FALSE;

                        case VDM_PRESENT_AND_READY:
                            VDMCreationState = VDM_BEING_REUSED;
                            VdmWaitHandle = b->WaitObjectForParent;
                            break;
                        }

                    VdmReserve--;               // we reserve from addr 1
                    if(VdmWaitHandle)
                        goto VdmExists;
                    else {
                        bInheritHandles = FALSE;
                        // replace the environment with ours
                        if (lpEnvironment &&
                            !(dwCreationFlags & CREATE_UNICODE_ENVIRONMENT)) {
                            RtlDestroyEnvironment(lpEnvironment);
                            }
                        lpEnvironment = UnicodeStringVDMEnv.Buffer;
                        bVdmRetry = TRUE;
                        goto VdmRetry;
                        }

                case STATUS_FILE_IS_OFFLINE:
                    SetLastError(ERROR_FILE_OFFLINE);
                    break;

                default :
                    SetLastError(ERROR_BAD_EXE_FORMAT);
                    return FALSE;
            }
        }

        //
        // Make sure only WOW apps can have the CREATE_SEPARATE_WOW_VDM flag.
        //

        if (!IsWowBinary && (dwCreationFlags & CREATE_SEPARATE_WOW_VDM)) {
            dwCreationFlags &= ~CREATE_SEPARATE_WOW_VDM;
        }

        //
        // Query the section to determine the stack parameters and
        // image entrypoint.
        //

        Status = NtQuerySection(
                    SectionHandle,
                    SectionImageInformation,
                    &ImageInformation,
                    sizeof( ImageInformation ),
                    NULL
                    );

        if (!NT_SUCCESS( Status )) {
            BaseSetLastNTError(Status);
            return FALSE;
            }

        if (ImageInformation.ImageCharacteristics & IMAGE_FILE_DLL) {
            SetLastError(ERROR_BAD_EXE_FORMAT);
            return FALSE;
            }

        ImageFileDebuggerCommand[ 0 ] = UNICODE_NULL;
        if (!(dwCreationFlags & (DEBUG_PROCESS | DEBUG_ONLY_THIS_PROCESS)) ||
            NtCurrentPeb()->ReadImageFileExecOptions
           ) {
            LdrQueryImageFileExecutionOptions( &PathName,
                                               L""Debugger"",
                                               REG_SZ,
                                               ImageFileDebuggerCommand,
                                               sizeof( ImageFileDebuggerCommand ),
                                               NULL
                                             );
            }


        if ((ImageInformation.Machine < USER_SHARED_DATA->ImageNumberLow) ||
            (ImageInformation.Machine > USER_SHARED_DATA->ImageNumberHigh)) {
#if defined(_WIN64) || defined(BUILD_WOW6432)
            if (ImageInformation.Machine == IMAGE_FILE_MACHINE_I386) {
               // Fall through since this is a valid machine type.
                }
             else
#endif
                {
                ULONG_PTR ErrorParameters[2];
                ULONG ErrorResponse;

#if defined(_WIN64) || defined(BUILD_WOW6432)
RaiseInvalidWin32Error:
#endif
                ErrorResponse = ResponseOk;
                ErrorParameters[0] = (ULONG_PTR)&PathName;

                NtRaiseHardError( STATUS_IMAGE_MACHINE_TYPE_MISMATCH_EXE,
                                  1,
                                  1,
                                  ErrorParameters,
                                  OptionOk,
                                  &ErrorResponse
                                );
                if ( NtCurrentPeb()->ImageSubsystemMajorVersion <= 3 ) {
                    SetLastError(ERROR_BAD_EXE_FORMAT);
                    }
                else {
                    SetLastError(ERROR_EXE_MACHINE_TYPE_MISMATCH);
                    }
                return FALSE;
                }
            }

        if ( ImageInformation.SubSystemType != IMAGE_SUBSYSTEM_WINDOWS_GUI &&
             ImageInformation.SubSystemType != IMAGE_SUBSYSTEM_WINDOWS_CUI ) {

            // POSIX exe

            NtClose(SectionHandle);
            SectionHandle = NULL;

            if ( ImageInformation.SubSystemType == IMAGE_SUBSYSTEM_POSIX_CUI ) {

                if ( !BuildSubSysCommandLine( L""POSIX /P "",
                                              lpApplicationName,
                                              lpCommandLine,
                                              &SubSysCommandLine
                                            ) ) {
                    return FALSE;
                }

                lpCommandLine = SubSysCommandLine.Buffer;

                lpApplicationName = NULL;
                bVdmRetry = TRUE;
                goto VdmRetry;
                }
            else {
                SetLastError(ERROR_CHILD_NOT_COMPLETE);
                return FALSE;
                }
            }
        else {
            if (!BasepIsImageVersionOk( ImageInformation.SubSystemMajorVersion,
                                        ImageInformation.SubSystemMinorVersion) ) {
                SetLastError(ERROR_BAD_EXE_FORMAT);
                return FALSE;
                }
            }

        if (ImageFileDebuggerCommand[ 0 ] != UNICODE_NULL) {
            SIZE_T n;

            n = wcslen( lpCommandLine );
            if (n == 0) {
                lpCommandLine = (LPWSTR)lpApplicationName;
                n = wcslen( lpCommandLine );
                }

            n += wcslen( ImageFileDebuggerCommand ) + 1 + 2;
            n *= sizeof( WCHAR );

            SubSysCommandLine.Buffer = RtlAllocateHeap( RtlProcessHeap(), MAKE_TAG( TMP_TAG ), n );
            SubSysCommandLine.Length = 0;
            SubSysCommandLine.MaximumLength = (USHORT)n;
            RtlAppendUnicodeToString( &SubSysCommandLine, ImageFileDebuggerCommand );
            RtlAppendUnicodeToString( &SubSysCommandLine, L"" "" );
            RtlAppendUnicodeToString( &SubSysCommandLine, lpCommandLine );
#if DBG
            DbgPrint( ""BASE: Calling debugger with '%wZ'\n"", &SubSysCommandLine );
#endif
            lpCommandLine = SubSysCommandLine.Buffer;
            lpApplicationName = NULL;
            NtClose(SectionHandle);
            SectionHandle = NULL;
            RtlFreeHeap(RtlProcessHeap(), 0, NameBuffer);
            NameBuffer = NULL;
            RtlFreeHeap(RtlProcessHeap(), 0, FreeBuffer);
            FreeBuffer = NULL;
            goto VdmRetry;
            }

        //
        // Create the process object
        //

        pObja = BaseFormatObjectAttributes(&Obja,lpProcessAttributes,NULL);

        Flags = 0;
        if (dwCreationFlags & CREATE_BREAKAWAY_FROM_JOB ) {
            Flags |= PROCESS_CREATE_FLAGS_BREAKAWAY;
        }

        if ( dwCreationFlags & (DEBUG_PROCESS | DEBUG_ONLY_THIS_PROCESS) ) {
            Status = DbgUiConnectToDbg();
            if ( !NT_SUCCESS(Status) ) {
                BaseSetLastNTError(Status);
                return FALSE;
            }
            DebugPortHandle = DbgUiGetThreadDebugObject ();
            if (dwCreationFlags & DEBUG_ONLY_THIS_PROCESS) {
                Flags |= PROCESS_CREATE_FLAGS_NO_DEBUG_INHERIT;
            }
        }

        if (bInheritHandles) {
            Flags |= PROCESS_CREATE_FLAGS_INHERIT_HANDLES;
        }

        if (((ImageInformation.LoaderFlags & IMAGE_LOADER_FLAGS_COMPLUS) != 0)) {

#if defined(_WIN64) || defined(BUILD_WOW6432)

            //
            // Check if this is a 32-bit IL_ONLY COM+ image that needs to run natively
            // on Win64.
            //

            if ( ImageInformation.Machine == IMAGE_FILE_MACHINE_I386 ) {

                Status = BasepIsComplusILImage(
                                              SectionHandle,
                                              &ImageInformation,
                                              &ComPlusILImage
                                              );

                if ((NT_SUCCESS (Status)) && (ComPlusILImage != FALSE)) {
                    Flags |= PROCESS_CREATE_FLAGS_OVERRIDE_ADDRESS_SPACE;
                }
            }

#endif
        } 
            
        //
        // This is temporary till we get Shim dlls support for native Win64 applications.
        //

        if (ImageInformation.Machine != IMAGE_FILE_MACHINE_I386) {
            pAppCompatDataTemp = NULL;
        } else {
            pAppCompatDataTemp = pAppCompatData;
        }

        Status = NtCreateProcessEx(
                    &ProcessHandle,
                    PROCESS_ALL_ACCESS,
                    pObja,
                    NtCurrentProcess(),
                    Flags,
                    SectionHandle,
                    DebugPortHandle,
                    NULL,
                    dwJobMemberLevel         // Job member level
                    );
        if ( !NT_SUCCESS(Status) ) {
            BaseSetLastNTError(Status);
            return FALSE;
        }

        //
        // NtCreateProcess will set to normal OR inherit if parent is IDLE or Below
        // only override if a mask is given during the create.
        //

        if ( PriClass.PriorityClass != PROCESS_PRIORITY_CLASS_UNKNOWN ) {
            State = NULL;
            if ( PriClass.PriorityClass ==  PROCESS_PRIORITY_CLASS_REALTIME ) {
                State = BasepIsRealtimeAllowed(TRUE);
                }
            Status = NtSetInformationProcess(
                        ProcessHandle,
                        ProcessPriorityClass,
                        (PVOID)&PriClass,
                        sizeof(PriClass)
                        );
            if ( State ) {
                BasepReleasePrivilege( State );
                }

            if ( !NT_SUCCESS(Status) ) {
                BaseSetLastNTError(Status);
                return FALSE;
                }
            }

        if (dwCreationFlags & CREATE_DEFAULT_ERROR_MODE) {
            UINT NewMode;
            NewMode = SEM_FAILCRITICALERRORS;
            NtSetInformationProcess(
                ProcessHandle,
                ProcessDefaultHardErrorMode,
                &NewMode,
                sizeof(NewMode)
                );
            }

        //
        // If the process is being created for a VDM call the server with
        // process handle.
        //

        if (VdmBinaryType) {
            VdmWaitHandle = ProcessHandle;
            if (!BaseUpdateVDMEntry(UPDATE_VDM_PROCESS_HANDLE,
                                    &VdmWaitHandle,
                                    iTask,
                                    VdmBinaryType
                                    ))
                {
                //make sure we don't close the handle twice --
                //(VdmWaitHandle == ProcessHandle) if we don't do this.
                VdmWaitHandle = NULL;
                return FALSE;
                }

            //
            // For Sep wow the VdmWaitHandle = NULL (there is none!)
            //

            VDMCreationState |= VDM_FULLY_CREATED;
            }


#if defined(i386)
        //
        // Reserve memory in the new process' address space if necessary
        // (for vdms). This is required only for x86 system.
        //

    if ( VdmReserve ) {
            BigVdmReserve = VdmReserve;
            Status = NtAllocateVirtualMemory(
                        ProcessHandle,
                        &BaseAddress,
                        0L,
                        &BigVdmReserve,
                        MEM_RESERVE,
                        PAGE_EXECUTE_READWRITE
                        );
            if ( !NT_SUCCESS(Status) ){
                BaseSetLastNTError(Status);
                return FALSE;
            }
    }
#endif

        //
        // Abuse the StaticSize fields temporarily.
        // They are somewhat private, but we are using them for temporary space, sort of.
        // These are the right values for them, but we need to call the proper initialization function,
        // which will store the values a second time (possibly optimized away).
        //
        SxsWin32ManifestPathBuffer.ByteBuffer.StaticSize = SxsWin32ExePath.Length + sizeof(SXS_MANIFEST_SUFFIX);
        SxsWin32PolicyPathBuffer.ByteBuffer.StaticSize = SxsWin32ExePath.Length + sizeof(SXS_POLICY_SUFFIX);
        SxsWin32AssemblyDirectoryBuffer.ByteBuffer.StaticSize = SxsWin32ExePath.Length + sizeof(WCHAR); // Win32AssemblyDirectory overestimate
        SxsNtManifestPathBuffer.ByteBuffer.StaticSize = SxsNtExePath.Length + sizeof(SXS_MANIFEST_SUFFIX);
        SxsNtPolicyPathBuffer.ByteBuffer.StaticSize = SxsNtExePath.Length + sizeof(SXS_POLICY_SUFFIX);
        //
        // now add them up as BYTE sizes
        //
        SxsConglomeratedBufferSizeBytes = 0;
        for (sxsi = 0 ; sxsi != RTL_NUMBER_OF(SxsStringBuffers) ; ++sxsi) {
            SxsConglomeratedBufferSizeBytes += SxsStringBuffers[sxsi]->ByteBuffer.StaticSize;
        }
#if DBG
        DbgPrintEx(
            DPFLTR_SXS_ID,
            DPFLTR_INFO_LEVEL,
            ""SXS: SxsConglomeratedBufferSizeBytes:%Id\n"",
            SxsConglomeratedBufferSizeBytes
            );
#endif
        //
        // one honking heap allocation
        //
        SxsConglomeratedByteBuffer = (PBYTE)RtlAllocateHeap(RtlProcessHeap(), 0, SxsConglomeratedBufferSizeBytes);
        if (SxsConglomeratedByteBuffer == NULL) {
            BaseSetLastNTError(STATUS_NO_MEMORY);
            return FALSE;
        }
        //
        // now dole out pieces, calling the proper initialization function
        //
        for (sxsi= 0 ; sxsi != RTL_NUMBER_OF(SxsStringBuffers) ; ++sxsi) {
            RtlInitUnicodeStringBuffer(
                SxsStringBuffers[sxsi],
                (sxsi != 0) ? SxsStringBuffers[sxsi - 1]->ByteBuffer.Buffer + SxsStringBuffers[sxsi- 1]->ByteBuffer.StaticSize
                         : SxsConglomeratedByteBuffer,
                SxsStringBuffers[sxsi]->ByteBuffer.StaticSize
                );
        }

        SxsExeHandles.Process = ProcessHandle;
        SxsExeHandles.File = FileHandle;
         // The 1 bit here means something different than in the loader.
        ASSERT((((ULONG_PTR)SectionHandle) & (ULONG_PTR)1) == 0);
        SxsExeHandles.Section = SectionHandle;

        // if we have an override stream, use it
        if (NULL != pAppCompatSxsData) {
            AppCompatSxsManifest.Name    = SxsWin32ExePath;     // unicode string
            AppCompatSxsManifest.Address = pAppCompatSxsData;   // pointer to unicode manifest
            AppCompatSxsManifest.Size    = cbAppCompatSxsData;  // byte count
        }

        Status = BasepSxsCreateProcessCsrMessage(
            (NULL != pAppCompatSxsData) ? &AppCompatSxsManifest : NULL, // override manifest (appcompat hook)
            NULL, // override policy (appcompat hook)
            &SxsManifestPathPair,
            &SxsManifestFileHandles,
            &SxsExePathPair,
            &SxsExeHandles,
            &SxsPolicyPathPair,
            &SxsPolicyHandles,
            &SxsWin32AssemblyDirectoryBuffer,
            &a->Sxs
            );
#if DBG
        // verify the buffer size calculation
        for (sxsi = 0 ; sxsi != RTL_NUMBER_OF(SxsStringBuffers) ; ++sxsi)
        {
            if (SxsStringBuffers[sxsi]->ByteBuffer.Buffer != SxsStringBuffers[sxsi]->ByteBuffer.StaticBuffer)
            {
                DbgPrintEx(
                    DPFLTR_SXS_ID,
                    DPFLTR_WARNING_LEVEL,
                    ""SXS: SxsStringBuffers[%lu]'s StaticSize was computed too small (%Id, %Id)\n"",
                    sxsi,
                    SxsStringBuffers[sxsi]->ByteBuffer.StaticSize,
                    SxsStringBuffers[sxsi]->ByteBuffer.Size
                    );
            }
        }
#endif
        if ( !NT_SUCCESS( Status ) ) {
            BaseSetLastNTError(Status);
            return FALSE;
            }

        //
        // Determine the location of the
        // processes PEB.
        //

        Status = NtQueryInformationProcess(
                    ProcessHandle,
                    ProcessBasicInformation,
                    &ProcessInfo,
                    sizeof( ProcessInfo ),
                    NULL
                    );
        if ( !NT_SUCCESS( Status ) ) {
            BaseSetLastNTError(Status);
            return FALSE;
            }

        Peb = ProcessInfo.PebBaseAddress;

        //
        // Push the parameters into the address space of the new process
        //

        if ( ARGUMENT_PRESENT(lpCurrentDirectory) ) {
            CurdirBuffer = RtlAllocateHeap( RtlProcessHeap(),
                                            MAKE_TAG( TMP_TAG ),
                                            (MAX_PATH + 1) * sizeof( WCHAR ) );
            if ( !CurdirBuffer ) {
                BaseSetLastNTError(STATUS_NO_MEMORY);
                return FALSE;
                }
            CurdirLength2 = GetFullPathNameW(
                                lpCurrentDirectory,
                                MAX_PATH,
                                CurdirBuffer,
                                &CurdirFilePart
                                );
            if ( CurdirLength2 > MAX_PATH ) {
                SetLastError(ERROR_DIRECTORY);
                return FALSE;
                }

            //
            // now make sure the directory exists
            //

            CurdirLength = GetFileAttributesW(CurdirBuffer);
            if ( (CurdirLength == 0xffffffff) ||
                 !(CurdirLength & FILE_ATTRIBUTE_DIRECTORY) ) {
                SetLastError(ERROR_DIRECTORY);
                return FALSE;
                }
            }


        if ( QuoteInsert || QuoteCmdLine) {
            QuotedBuffer = RtlAllocateHeap(RtlProcessHeap(),0,wcslen(lpCommandLine)*2+6);

            if ( QuotedBuffer ) {
                wcscpy(QuotedBuffer,L""\"""");

                if ( QuoteInsert ) {
                    TempChar = *TempNull;
                    *TempNull = UNICODE_NULL;
                    }

                wcscat(QuotedBuffer,lpCommandLine);
                wcscat(QuotedBuffer,L""\"""");

                if ( QuoteInsert ) {
                    *TempNull = TempChar;
                    wcscat(QuotedBuffer,TempNull);
                    }

                }
            else {
                if ( QuoteInsert ) {
                    QuoteInsert = FALSE;
                    }
                if ( QuoteCmdLine ) {
                    QuoteCmdLine = FALSE;
                    }
                }
            }


        // If we found a manifest, we want to push that fact to the new process.
        if (a->Sxs.Flags & BASE_MSG_SXS_MANIFEST_PRESENT)
            dwBasePushProcessParametersFlags |= BASE_PUSH_PROCESS_PARAMETERS_FLAG_APP_MANIFEST_PRESENT;

        if (!BasePushProcessParameters(
                dwBasePushProcessParametersFlags,
                ProcessHandle,
                Peb,
                lpApplicationName,
                CurdirBuffer,
                QuoteInsert || QuoteCmdLine ? QuotedBuffer : lpCommandLine,
                lpEnvironment,
                &StartupInfo,
                dwCreationFlags | dwNoWindow,
                bInheritHandles,
                IsWowBinary ? IMAGE_SUBSYSTEM_WINDOWS_GUI : 0,
                pAppCompatDataTemp,
                cbAppCompatData
                ) ) {
            return FALSE;
            }


        RtlFreeUnicodeString(&VdmNameString);
        VdmNameString.Buffer = NULL;

        //
        // Stuff in the standard handles if needed
        //
        if (!VdmBinaryType &&
            !bInheritHandles &&
            !(StartupInfo.dwFlags & STARTF_USESTDHANDLES) &&
            !(dwCreationFlags & (DETACHED_PROCESS | CREATE_NEW_CONSOLE | CREATE_NO_WINDOW)) &&
            ImageInformation.SubSystemType == IMAGE_SUBSYSTEM_WINDOWS_CUI
           ) {
            PRTL_USER_PROCESS_PARAMETERS ParametersInNewProcess;

            Status = NtReadVirtualMemory( ProcessHandle,
                                          &Peb->ProcessParameters,
                                          &ParametersInNewProcess,
                                          sizeof( ParametersInNewProcess ),
                                          NULL
                                        );
            if (NT_SUCCESS( Status )) {
                if (!CONSOLE_HANDLE( NtCurrentPeb()->ProcessParameters->StandardInput )) {
                    StuffStdHandle( ProcessHandle,
                                    NtCurrentPeb()->ProcessParameters->StandardInput,
                                    &ParametersInNewProcess->StandardInput
                                  );
                    }
                if (!CONSOLE_HANDLE( NtCurrentPeb()->ProcessParameters->StandardOutput )) {
                    StuffStdHandle( ProcessHandle,
                                    NtCurrentPeb()->ProcessParameters->StandardOutput,
                                    &ParametersInNewProcess->StandardOutput
                                  );
                    }
                if (!CONSOLE_HANDLE( NtCurrentPeb()->ProcessParameters->StandardError )) {
                    StuffStdHandle( ProcessHandle,
                                    NtCurrentPeb()->ProcessParameters->StandardError,
                                    &ParametersInNewProcess->StandardError
                                  );
                    }
                }
            }

        //
        // Create the thread...
        //

        //
        // Allocate a stack for this thread in the address space of the target
        // process.
        //

        StackStatus = BaseCreateStack(
                        ProcessHandle,
                        ImageInformation.CommittedStackSize,
                        (ImageInformation.MaximumStackSize < 256*1024) ? 256*1024 : ImageInformation.MaximumStackSize,
                        &InitialTeb
                        );

        if ( !NT_SUCCESS(StackStatus) ) {
            BaseSetLastNTError(StackStatus);
            return FALSE;
            }


        //
        // Create an initial context for the new thread.
        //

        BaseInitializeContext(
            &ThreadContext,
            Peb,
            ImageInformation.TransferAddress,
            InitialTeb.StackBase,
            BaseContextTypeProcess
            );


        //
        // Create the actual thread object
        //

        pObja = BaseFormatObjectAttributes(&Obja,lpThreadAttributes,NULL);

        Status = NtCreateThread(
                    &ThreadHandle,
                    THREAD_ALL_ACCESS,
                    pObja,
                    ProcessHandle,
                    &ClientId,
                    &ThreadContext,
                    &InitialTeb,
                    TRUE
                    );

        if (!NT_SUCCESS(Status) ) {
            BaseSetLastNTError(Status);
            return FALSE;
            }

        a->Peb = (ULONGLONG) Peb;

        //
        // From here on out, do not modify the address space of the
        // new process.  WOW64's implementation of NtCreateThread()
        // reshuffles the new process' address space if the current
        // process is 32-bit and the new process is 64-bit.
        //
#if DBG
        Peb = NULL;
#endif

#if defined(WX86)

        //
        // if this is a Wx86 Process, setup for a Wx86 emulated Thread
        //

        if (Wx86Info) {

            //
            // create a WX86Tib and initialize it's Teb->Vdm.
            //
            Status = BaseCreateWx86Tib(ProcessHandle,
                                       ThreadHandle,
                                       (ULONG)((ULONG_PTR)ImageInformation.TransferAddress),
                                       (ULONG)ImageInformation.CommittedStackSize,
                                       (ULONG)ImageInformation.MaximumStackSize,
                                       TRUE
                                       );

            if (!NT_SUCCESS(Status)) {
                BaseSetLastNTError(Status);
                return( FALSE );
                }


            //
            // Mark Process as WX86
            //
            Status = NtSetInformationProcess (ProcessHandle,
                                              ProcessWx86Information,
                                              &Wx86Info,
                                              sizeof(Wx86Info)
                                              );

            if (!NT_SUCCESS(Status)) {
                BaseSetLastNTError(Status);
                return( FALSE );
                }
            }
#endif


        //
        // Call the Windows server to let it know about the
        // process.
        //

        a->ProcessHandle = ProcessHandle;
        a->ThreadHandle = ThreadHandle;
        a->ClientId = ClientId;

        switch (ImageInformation.Machine) {
        case IMAGE_FILE_MACHINE_I386:
#if defined(_WIN64) || defined(BUILD_WOW6432)
            a->ProcessorArchitecture = PROCESSOR_ARCHITECTURE_IA32_ON_WIN64;
#else
            a->ProcessorArchitecture = PROCESSOR_ARCHITECTURE_INTEL;
#endif
            break;

        case IMAGE_FILE_MACHINE_IA64:
            a->ProcessorArchitecture = PROCESSOR_ARCHITECTURE_IA64;
            break;

        case IMAGE_FILE_MACHINE_AMD64:
            a->ProcessorArchitecture = PROCESSOR_ARCHITECTURE_AMD64;
            break;

        default:
            DbgPrint(""kernel32: No mapping for ImageInformation.Machine == %04x\n"", ImageInformation.Machine);
            a->ProcessorArchitecture = PROCESSOR_ARCHITECTURE_UNKNOWN;
            break;
        }

        //
        // remove debug flags now its not being done by CSR
        //
        a->CreationFlags = dwCreationFlags & ~ (DEBUG_PROCESS | DEBUG_ONLY_THIS_PROCESS);
        a->DebuggerClientId.UniqueProcess = NULL;
        a->DebuggerClientId.UniqueThread = NULL;


        //
        // Set the 2 bit if a gui app is starting. The window manager needs to
        // know this so it can synchronize the startup of this app
        // (WaitForInputIdle api). This info is passed using the process
        // handle tag bits.  The 1 bit asks the window manager to turn on
        // or turn off the application start cursor (hourglass/pointer).
        //
        // When starting a WOW process, lie and tell UserSrv NTVDM.EXE is a GUI
        // process.  We also turn on bit 0x8 so that UserSrv can ignore the
        // UserNotifyConsoleApplication call made by the console during startup.
        //

        if ( ImageInformation.SubSystemType == IMAGE_SUBSYSTEM_WINDOWS_GUI ||
             IsWowBinary ) {

            a->ProcessHandle = (HANDLE)((ULONG_PTR)a->ProcessHandle | 2);

            //
            // If the creating process is a GUI app, turn on the app. start cursor
            // by default.  This can be overridden by STARTF_FORCEOFFFEEDBACK.
            //

            NtHeaders = RtlImageNtHeader((PVOID)GetModuleHandle(NULL));
            if ( NtHeaders
                 && (NtHeaders->OptionalHeader.Subsystem
                     == IMAGE_SUBSYSTEM_WINDOWS_GUI ) ) {
                a->ProcessHandle = (HANDLE)((ULONG_PTR)a->ProcessHandle | 1);
                }
            }


        //
        // If feedback is forced on, turn it on. If forced off, turn it off.
        // Off overrides on.
        //

        if (StartupInfo.dwFlags & STARTF_FORCEONFEEDBACK)
            a->ProcessHandle = (HANDLE)((ULONG_PTR)a->ProcessHandle | 1);
        if (StartupInfo.dwFlags & STARTF_FORCEOFFFEEDBACK)
            a->ProcessHandle = (HANDLE)((ULONG_PTR)a->ProcessHandle & ~1);

        a->VdmBinaryType = VdmBinaryType; // just tell server the truth

        if (VdmBinaryType){
           a->hVDM    = iTask ? 0 : NtCurrentPeb()->ProcessParameters->ConsoleHandle;
           a->VdmTask = iTask;
        }

#if defined(BUILD_WOW6432)
        m.ReturnValue = CsrBasepCreateProcess(a);
#else
        m.u.CreateProcess = *a;
        if (m.u.CreateProcess.Sxs.Flags != 0)
        {
            const PUNICODE_STRING StringsToCapture[] =
            {
                &m.u.CreateProcess.Sxs.Manifest.Path,
                    &m.u.CreateProcess.Sxs.Policy.Path,
                    &m.u.CreateProcess.Sxs.AssemblyDirectory
            };

            Status =
                CsrCaptureMessageMultiUnicodeStringsInPlace(
                &CaptureBuffer,
                RTL_NUMBER_OF(StringsToCapture),
                StringsToCapture
                );
            if (!NT_SUCCESS(Status)) {
                BaseSetLastNTError(Status);
                return FALSE;
            }
        }

        CsrClientCallServer( (PCSR_API_MSG)&m,
                             CaptureBuffer,
                             CSR_MAKE_API_NUMBER( BASESRV_SERVERDLL_INDEX,
                                                  BasepCreateProcess
                                                ),
                             sizeof( *a )
                           );

        if ( CaptureBuffer ) {
            CsrFreeCaptureBuffer( CaptureBuffer );
            CaptureBuffer = NULL;
        }

#endif

        if (!NT_SUCCESS((NTSTATUS)m.ReturnValue)) {
            BaseSetLastNTError((NTSTATUS)m.ReturnValue);
            NtTerminateProcess(ProcessHandle, (NTSTATUS)m.ReturnValue);
            return FALSE;
            }



        //
        // If the WinSafer sandboxing policy indicates that the
        // process needs to be run with a restricted token or placed
        // into a restricted job object, then do those actions now.
        // Do not replace the token if the restricted token was created
        // from a caller supplied token i.e. the CreateProcessAsUser case.
        //
        if ((hSaferRestrictedToken != NULL) && (hUserToken == NULL)) {
            Status = BasepReplaceProcessThreadTokens(
                    hSaferRestrictedToken,
                    ProcessHandle,
                    ThreadHandle);
            if (!NT_SUCCESS(Status)) {
                // kill and cleanup.
                NtTerminateProcess(ProcessHandle, Status);
                BaseSetLastNTError(Status);
                return FALSE;
            }
        }
        if (hSaferAssignmentJob != NULL) {
            Status = NtAssignProcessToJobObject(
                    hSaferAssignmentJob, ProcessHandle);
            if (!NT_SUCCESS(Status)) {
                // kill and cleanup.
                NtTerminateProcess(ProcessHandle, STATUS_ACCESS_DENIED);
                BaseSetLastNTError(Status);
                return FALSE;
            }
        }


        //
        // Make the thread start execution if we are allowed to.
        //
        if (!( dwCreationFlags & CREATE_SUSPENDED) ) {
            NtResumeThread(ThreadHandle,&i);
            }

VdmExists:
        bStatus = TRUE;
        if (VDMCreationState)
            VDMCreationState |= VDM_CREATION_SUCCESSFUL;

        try {
            if (VdmWaitHandle) {

                //
                // tag Shared WOW VDM handles so that wait for input idle has a
                // chance to work.  Shared WOW VDM ""process"" handles are actually
                // event handles,  Separate WOW VDM handles are real process
                // handles. Also mark DOS handles with 0x1 so WaitForInputIdle
                // has a way to distinguish DOS apps and not block forever.
                //

                if (VdmBinaryType == BINARY_TYPE_WIN16)  {
                    lpProcessInformation->hProcess =
                            (HANDLE)((ULONG_PTR)VdmWaitHandle | 0x2);

                    //
                    // Shared WOW doesn't always start a process, so
                    // we don't have a process ID or thread ID to
                    // return if the VDM already existed.
                    //
                    // Separate WOW doesn't hit this codepath
                    // (no VdmWaitHandle).
                    //

                    if (VDMCreationState & VDM_BEING_REUSED) {
                        ClientId.UniqueProcess = 0;
                        ClientId.UniqueThread = 0;
                        }

                    }
                else  {
                    lpProcessInformation->hProcess =
                            (HANDLE)((ULONG_PTR)VdmWaitHandle | 0x1);
                    }


                //
                // Close the ProcessHandle, since we are returning the
                // VdmProcessHandle instead.
                //

                if (ProcessHandle != NULL)
                    NtClose(ProcessHandle);
                }
            else{
                lpProcessInformation->hProcess = ProcessHandle;
                }

            lpProcessInformation->hThread = ThreadHandle;
            lpProcessInformation->dwProcessId = HandleToUlong(ClientId.UniqueProcess);
            lpProcessInformation->dwThreadId = HandleToUlong(ClientId.UniqueThread);
            ProcessHandle = NULL;
            ThreadHandle = NULL;
            }
        __except ( EXCEPTION_EXECUTE_HANDLER ) {
            NtClose( ProcessHandle );
            NtClose( ThreadHandle );
            ProcessHandle = NULL;
            ThreadHandle = NULL;
            if (VDMCreationState)
                VDMCreationState &= ~VDM_CREATION_SUCCESSFUL;
            }
        }
    __finally {

        if (ExePathFullBuffer != NULL) {
            SxsWin32ExePath.Buffer = NULL;
            SxsWin32ExePath.Length = 0;
            SxsWin32ExePath.MaximumLength = 0;
            RtlFreeHeap(RtlProcessHeap(), 0, ExePathFullBuffer);
            ExePathFullBuffer = NULL;
        }

        if (!VdmBinaryType) {
            NTSTATUS Status1;

            BasepSxsCloseHandles(&SxsManifestFileHandles);
            BasepSxsCloseHandles(&SxsPolicyHandles);
            //
            // don't close SxsExeHandles, they are
            // aliases of other variables that are either closed
            // or returned to the caller
            //

            //
            // This loop only really frees any memory if our computation
            // of the overall buffer size was too low, which it is not supposed to be.
            //
            if (SxsConglomeratedByteBuffer != NULL) {
                for (sxsi= 0 ; sxsi != RTL_NUMBER_OF(SxsStringBuffers) ; ++sxsi) {
                    RtlFreeUnicodeStringBuffer(SxsStringBuffers[sxsi]);
                    }
                RtlFreeHeap(RtlProcessHeap(), 0,SxsConglomeratedByteBuffer);
                }
            }
        if (lpEnvironment && !(dwCreationFlags & CREATE_UNICODE_ENVIRONMENT) ) {
            RtlDestroyEnvironment(lpEnvironment);
            lpEnvironment = NULL;
            }
        RtlFreeHeap(RtlProcessHeap(), 0,QuotedBuffer);
        RtlFreeHeap(RtlProcessHeap(), 0,NameBuffer);
        RtlFreeHeap(RtlProcessHeap(), 0,CurdirBuffer);
        RtlFreeHeap(RtlProcessHeap(), 0,FreeBuffer);
        if ( FileHandle ) {
            NtClose(FileHandle);
            }
        if ( SectionHandle ) {
            NtClose(SectionHandle);
            }
        if ( ThreadHandle ) {
            NtTerminateProcess(ProcessHandle,STATUS_SUCCESS);
            NtClose(ThreadHandle);
            }
        if ( ProcessHandle ) {
            NtClose(ProcessHandle);
            }
        if ( hSaferAssignmentJob ) {
            NtClose(hSaferAssignmentJob);
            }
        if ( hSaferRestrictedToken ) {
            if (hUserToken == NULL) {
                // CreateProcess case
                NtClose(hSaferRestrictedToken);
                }
            else{
                // CreateProcessAsUser case
                *hRestrictedUserToken = hSaferRestrictedToken;
                }
            }

        if (NULL != pAppCompatData) {
            RtlFreeHeap(RtlProcessHeap(), 0, pAppCompatData);
            }

        if (NULL != pAppCompatSxsData) {
            RtlFreeHeap(RtlProcessHeap(), 0, pAppCompatSxsData);
            }

        RtlFreeUnicodeString(&VdmNameString);
        RtlFreeUnicodeString(&SubSysCommandLine);
        if (AnsiStringVDMEnv.Buffer || UnicodeStringVDMEnv.Buffer)
            BaseDestroyVDMEnvironment(&AnsiStringVDMEnv, &UnicodeStringVDMEnv);

        if (VDMCreationState && !(VDMCreationState & VDM_CREATION_SUCCESSFUL)){
            BaseUpdateVDMEntry (
                UPDATE_VDM_UNDO_CREATION,
                (HANDLE *)&iTask,
                VDMCreationState,
                VdmBinaryType
                );
            if(VdmWaitHandle) {
                NtClose(VdmWaitHandle);
                }
            }
        }

    if (lpEnvironment && !(dwCreationFlags & CREATE_UNICODE_ENVIRONMENT) ) {
        RtlDestroyEnvironment(lpEnvironment);
        }
    return bStatus;
}
"
vNMswr6E,Tool,A_GUES,JavaScript,Friday 7th of July 2023 11:25:00 AM CDT,"javascript:(function() {
    var url = window.location.host + window.location.pathname;
    var newUrl = url.replace(/\./g, '-');
    window.location = 'https://'+ newUrl + '.proxy.wichita.edu' + window.location.search;
})()"
UjexJtig,mymal theme by 5cm,argui,CSS,Friday 7th of July 2023 11:21:03 AM CDT,"/* Theme Customiser Settings
https://github.com/ValerioLyndon/Theme-Customiser
^TC{""data"":""https://valeriolyndon.github.io/Theme-Customiser-Json/5cm/Sailor Moon.json"",""mods"":{""restore-more-info"":{}},""theme"":""Sailor Moon""}TC$*/

/*        List design by 5cm         Inspiration from SolitarySetsuna */
/*     Render by ElysionsGarden       Background by Adrian Pelletier  */
/* https://myanimelist.net/forum/?topicid=1099375&show=350#msg57006432 */
/* Modified by Valerio Lyndon
 * Last modified: 2022-SEP-10 */
@\import ""https://fonts.googleapis.com/css?family=Open+Sans:400,700,800"";
body {
  background: #dfd1e0 repeat-x center/cover fixed
    url(https://i.imgur.com/aoFpxkK.jpg)!important;
  font: 11px Open Sans; color: #ccc; letter-spacing: 1px; text-transform: uppercase;}
.header .header-title, .header .header-menu, .header .header-info, #header-menu-button,
i.fa, [data-owner=""""] .list-menu-float, .icon-menu:not(.profile), .cover-block, #cover-image-container,
.status-menu-container .status-menu .status-button::after, .status-menu-container .search-container,
.list-unit .list-status-title .stats,
.icon-watch.ml4, .more,
.list-table .list-table-data .tags .edit {
  display: none;}
.header {
  position: fixed; width: 300px; height: 480px; left: calc(50% + 250px); top: 100px; z-index: 1;
	pointer-events: none;
}
.header a {
	pointer-events: auto;
}
.header:before {
  content: url(https://i.imgur.com/L3i5SP8.png);
  display: block; text-align: right;}
.header .header-menu.other {
  display: block; top: unset; bottom: 98px; left: -10px;}
.header .header-menu .btn-menu {
  font-size: 0; text-align: center;}
.header a.username {
  background: center/150px;
  font: 800 20px Open Sans; color: rgba(255,255,255,.7); letter-spacing: 2px; padding: 5px 0;}
.list-menu-float {
  top: 450px; left: calc(50% + 250px); width: 300px; border: 0; z-index: 1;}
.icon-menu.profile {
  background: none!important; display: inline-block; width: auto; height: auto;}
.icon-menu.profile:after {content: attr(href);
  background: center/120px;
  font: 800 20px Open Sans; color: rgba(255,255,255,.7); letter-spacing: 2px; padding: 5px;
  display: inline-block; white-space: nowrap; text-indent: -443px; overflow: hidden;}
.icon-menu.profile:hover:after, .header a:hover,
.list-table .list-table-data a:not(.edit-disabled):hover,
.status-menu-container .status-menu .status-button:not(.on):hover,
#recaptcha-terms a:hover {
  color: white !important; text-decoration: none;}
.list-container {
  width: 1000px; top: 100px; background: none!important; border: 0;}
#status-menu {
  position: fixed; width: auto; height: 0; top: 495px; left: calc(50% + 300px); border: 0}
#status-menu .status-menu {
  display: flex; flex-flow: column; align-items: center;}
.status-menu-container .status-menu .status-button {
  order: 2; width: 170px; background: rgba(255,255,255,.2); padding: 2px 0;
  font: bold 11px Open Sans; color: rgba(67,72,104,.7); transition: all .2s ease-in-out;}
.status-menu-container .status-menu .status-button.on {order: 1;
  background: rgba(92,99,145,.2); color: #e8e8e8!important;
  padding: 10px; border-radius: 20px; border: 1px solid #e8e8e8;}
.status-menu-container .status-menu .status-button:not(.on) {
  margin-top: -16px; opacity: 0;}
.status-menu-container .status-menu:hover .status-button:not(.on),
.list-block, .status-menu-container.fixed + div.list-block {
  margin: 0; opacity: 1;}
.list-unit {
  width: 600px; margin-left: 60px;}
.list-unit .list-status-title {
  background: none; width: 600px; position: absolute; top: -12px;}
.list-unit .list-status-title .text {
  font: 800 25px Open Sans; color: rgba(255,255,255,.6); letter-spacing: 3px; text-align: left;}
.list-table {
  border: 0; border-collapse: separate; border-spacing: 0 2px;}
.list-table > tbody:nth-of-type(2n+1):first-child, .list-table .list-table-header .header-title {
  background: none; border: 0; height: 18px;}
.list-table .list-table-header .header-title .sort-icon {
	color: #ccc;
}
.list-item, .list-table > tbody:nth-of-type(2n+1) {
  background: rgba(0,0,0,.2);}
.list-table .list-table-header .header-title.title {
  visibility: hidden;}
.list-table .list-table-header .header-title .link.sort, .list-table .list-table-data .data a,
.list-table .list-table-data a.edit-disabled {
  color: #ccc!important;}
.list-table .list-table-data .data {
  height: 30px; border: 0;}
.list-table .list-table-data:hover {
  background: rgba(0,0,0,.1);}
.list-table .list-table-data .data.status {
  background: none!important; font: 13px FontAwesome; padding: 0 5px;}
.data.status.watching:before {
  content: '\f005';}
.data.status.completed:before {
  content: '\f058';}
.data.status.onhold:before {
  content: '\f06a'}
.data.status.dropped:before {
  content: '\f05e'}
.data.status.plantowatch:before {
  content: '\f017';}
.list-table .list-table-header .header-title.image,
.list-table .list-table-data .data.image {
	width: 0;
	padding: 0;
}
.list-table .list-table-header .header-title.image .link {
	display: none;
}
.list-table .list-table-data .data.image .link {
	position: absolute;
	left: -100px;
	z-index: -1;
	width: 120px;
	height: 180px;
	margin-top: -90px;
	border-radius: 7px;
	overflow: hidden;
	box-shadow: 0px 4px 10px rgba(0,0,0,.4);
	opacity: 0;
	transition: all .5s ease-in-out;
}
.list-table .list-table-data:hover .data.image .link {
	opacity: .8;
}
.list-table .list-table-data .data.image .image {
	width: 100%;
	height: 100%;
	border: none;
	object-fit: cover;
}
.list-table .list-table-header .header-title.number {
  position: absolute; visibility: hidden;}
.list-table .list-table-data .data.number {
  position: absolute; left: 12px; margin-top: 3px; font: 800 19px Open Sans; letter-spacing: 0;
  color: rgba(0,0,0,.3); text-align: right; width: 40px; z-index: -2;}
.data.number ~ .data.title .link:before {
  left: -100px;}
.list-table .list-table-data .data.title {
  padding-left: 0;}
.list-table .list-table-data .data.title .link {
  font-size: 1em; line-height: 1em; color: white!important; display: inline-block;
  max-width: 270px; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;}
.list-table .list-table-data .data.title .notes .text {
	color: #ccc
}
.content-status {
	display: inline-block;
  background: rgba(0,0,0,.2); padding: 1px 4px 2px 4px;
  border-radius: 10px; position: relative; top: -1px;}
.list-table .list-table-data .data.title .add-edit-more {
  float: none; display: inline; font-size: 0; line-height: 0; opacity: 0;
  position: relative; top: -2px; left: 3px;}
.list-table-data:hover .data.title .add-edit-more {
  opacity: 1;}
.add, .edit, .data.tags {
  font-size: 8px; line-height: 1em;}
#footer-block {
  background: none; position: relative; top: 90px;}
#copyright, #recaptcha-terms, #recaptcha-terms a {
  font: 8px Open Sans; color: rgba(0,0,0,.6)}

/* 2022-09-10 streaming popup - credit to lifeiscrazy for initial design */

[class^=""icon-watch""] .malicon {
  color: #ccc !important;
}
.mal-modal .mal-modal-dialog .mal-modal-content {
  background-color: #8783b366 !important
}
.mal-modal .mal-modal-dialog .mal-modal-content a, .mal-modal .mal-modal-dialog .mal-modal-content button.btn-close {color: white !important}
.mal-modal .mal-modal-dialog .mal-modal-content a:hover {
  color: #ccc !important;
  background-color: unset !important;
}

.mal-modal .mal-modal-dialog .mal-modal-content .mal-modal-header {
	color: #ccc;
	border-color: transparent;
}
.mal-modal .mal-modal-dialog .mal-modal-content .mal-modal-header .row.reverse {
	text-align: left;
}

/* More Info - credit to lifeiscrazy */

.more {
	display: inline;
}

.list-table .list-table-data .data.title .add-edit-more {
  font-size: 8px !important;
  line-height: 1em !important;
  position:relative;
  top:2px;
  display: block !important;
}
.borderRBL, .borderRBL *
{font-size: 10px !important;}
.borderRBL a {color: white !important}
.borderRBL a:hover {color: #ccc !important}"
qt99GR2Q,Untitled,Nicky-Lalrochhara,Python,Friday 7th of July 2023 10:34:25 AM CDT,"  File ""/home/ubuntu/.local/lib/python3.10/site-packages/pyrogram/methods/utilities/start.py"", line 58, in start
    is_authorized = await self.connect()
  File ""/home/ubuntu/.local/lib/python3.10/site-packages/pyrogram/methods/auth/connect.py"", line 40, in connect
    await self.load_session()
  File ""/home/ubuntu/.local/lib/python3.10/site-packages/pyrogram/client.py"", line 593, in load_session
    await self.storage.open()
  File ""/home/ubuntu/.local/lib/python3.10/site-packages/pyrogram/storage/file_storage.py"", line 62, in open
    await self.update()
  File ""/home/ubuntu/.local/lib/python3.10/site-packages/pyrogram/storage/file_storage.py"", line 39, in update
    version = await self.version()
  File ""/home/ubuntu/.local/lib/python3.10/site-packages/pyrogram/storage/sqlite_storage.py"", line 218, in version
    return (await q.fetchone())[0]
TypeError: 'NoneType' object is not subscriptable
  ERROR     |  asyncio          |  Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x7f02a0038f70>
"
YwRgNVz0,Untitled,manav_06,C++,Friday 7th of July 2023 10:33:59 AM CDT,"#include ""bits/stdc++.h""

using namespace std;

#define int long long

#define fastio                        \
    ios_base::sync_with_stdio(false); \
    cin.tie(NULL);                    \
    cout.tie(NULL)
#define pb push_back
#define pii pair<int, int>
#define vi vector<int>
#define vvi vector<vi>
#define rep(i, a, b) for (int (i) = (a); (i) < (b); ++(i))
const int mod = 1e9 + 7;

void test_case() {
    int n, m;
    cin >> n >> m;

    vvi g(n + 1);


    rep(i, 0, m) {
        int u, v;
        cin >> u >> v;
        g[u].push_back(v);
        g[v].push_back(u);
    }


    int q;
    cin >> q;

    while (q--) {

        int a, b;
        cin >> a >> b;

        bool valid = false;

        for (int x: g[a]) {
            if (x == b) {
                valid = true;
                break;
            }
        }
        if (valid) {
            cout << ""YES\n"";
        } else {
            cout << ""NO\n"";
        }

    }
}

signed main() {
    fastio;
    int t = 1;
//    cin >> t;
    for (int i = 1; i <= t; i++) {
        test_case();
    }
}"
vs99MUx5,Untitled,manav_06,C++,Friday 7th of July 2023 10:32:36 AM CDT,"#include ""bits/stdc++.h""

using namespace std;

#define int long long

#define fastio                        \
    ios_base::sync_with_stdio(false); \
    cin.tie(NULL);                    \
    cout.tie(NULL)
#define pb push_back
#define pii pair<int, int>
#define vi vector<int>
#define vvi vector<vi>
#define rep(i, a, b) for (int (i) = (a); (i) < (b); ++(i))
const int mod = 1e9 + 7;

void test_case() {
    int n, m;
    cin >> n >> m;

    vvi g(n + 1, vi(n + 1));

    rep(i, 0, m) {
        int u, v;
        cin >> u >> v;
        g[u][v] = 1;
        g[v][u] = 1;
    }


    int q;
    cin >> q;

    while (q--) {

        int a, b;
        cin >> a >> b;
        if (g[a][b] == 1) {
            cout << ""YES\n"";
        } else {
            cout << ""NO\n"";
        }
    }
}

signed main() {
    fastio;
    int t = 1;
//    cin >> t;
    for (int i = 1; i <= t; i++) {
        test_case();
    }
}"
AuWYXuxd,Underground_mapgroupproto.xml,iKurdo,XML,Friday 7th of July 2023 10:15:46 AM CDT,"		<group name=""Land_Underground_Storage_Barracks"" lootmax=""20"">
				<value name=""Tier1"" />
				<usage name=""Military"" />
				<usage name=""Underground"" />
				<container name=""lootFloor"" lootmax=""10"">
						<category name=""containers"" />
						<category name=""clothes"" />
						<tag name=""floor"" />
						<tag name=""ground"" />
						<point pos=""-3.064941 0.479675 -3.885498"" range=""0.203125"" height=""0.507813"" />
						<point pos=""-0.017579 1.215576 -5.425171"" range=""0.203125"" height=""0.507813"" />
						<point pos=""-0.890016 0.410583 3.420654"" range=""0.237500"" height=""0.593750"" />
						<point pos=""-2.343750 0.479675 -4.011719"" range=""0.271875"" height=""0.679688"" />
						<point pos=""-2.284302 0.798462 0.318360"" range=""0.271875"" height=""0.679688"" />
						<point pos=""-4.997681 0.423523 -3.846559"" range=""0.275940"" height=""0.689850"" />
						<point pos=""-7.490235 1.214661 4.595335"" range=""0.306250"" height=""0.765625"" />
						<point pos=""0.389649 1.214722 -4.682007"" range=""0.306250"" height=""0.765625"" />
						<point pos=""0.356810 0.424866 -4.719604"" range=""0.340625"" height=""0.532429"" />
						<point pos=""-9.225708 1.215820 3.444581"" range=""0.340625"" height=""0.851563"" />
						<point pos=""-1.282349 0.797058 0.330444"" range=""0.375000"" height=""0.937500"" />
						<point pos=""-4.100708 0.795105 0.216308"" range=""0.375000"" height=""0.937500"" />
						<point pos=""0.966797 0.795349 0.370361"" range=""0.409375"" height=""1.023438"" />
						<point pos=""1.742187 0.797729 0.061035"" range=""0.409375"" height=""1.023438"" />
						<point pos=""-7.381960 0.424866 4.666745"" range=""0.409375"" height=""0.532450"" />
						<point pos=""-9.307616 0.424866 3.638550"" range=""0.443750"" height=""0.533289"" />
						<point pos=""-5.377931 1.215576 4.962768"" range=""0.478125"" height=""1.195313"" />
						<point pos=""2.948608 1.215515 -5.370728"" range=""0.512500"" height=""1.281250"" />
				</container>
				<container name=""lootWeapons"" lootmax=""10"">
						<category name=""weapons"" />
						<point pos=""-0.267823 0.408752 3.066895"" range=""0.134375"" height=""0.335938"" />
						<point pos=""-1.465333 0.412659 3.611694"" range=""0.168750"" height=""0.421875"" />
						<point pos=""-6.660279 0.424072 -3.371827"" range=""0.237549"" height=""0.593872"" />
						<point pos=""-6.100341 0.424072 -1.781493"" range=""0.252994"" height=""0.632486"" />
						<point pos=""7.171264 1.216309 -6.062134"" range=""0.266846"" height=""0.667114"" />
						<point pos=""6.871826 0.424866 -4.518554"" range=""0.306250"" height=""0.532127"" />
						<point pos=""4.617065 1.215942 -4.808594"" range=""0.306250"" height=""0.765625"" />
						<point pos=""-1.391114 1.215088 4.906860"" range=""0.340625"" height=""0.851555"" />
						<point pos=""-2.848998 1.215881 4.665405"" range=""0.340625"" height=""0.851563"" />
						<point pos=""7.566285 1.216064 4.547118"" range=""0.375000"" height=""0.937500"" />
						<point pos=""6.852783 1.214539 -4.588868"" range=""0.375000"" height=""0.937500"" />
						<point pos=""2.348510 1.215332 4.633667"" range=""0.375000"" height=""0.937500"" />
						<point pos=""5.743530 1.215210 5.091919"" range=""0.409375"" height=""1.023438"" />
						<point pos=""4.508300 0.424866 -5.005737"" range=""0.409375"" height=""0.533388"" />
						<point pos=""4.162598 1.215271 5.252929"" range=""0.409375"" height=""1.023438"" />
				</container>
		</group>
		<group name=""Land_Underground_Floor_Comms"" lootmax=""10"">
				<usage name=""Military"" />
				<value name=""Tier1"" />
				<container name=""lootFloor"" lootmax=""10"">
						<category name=""containers"" />
						<category name=""clothes"" />
						<tag name=""floor"" />
						<tag name=""ground"" />
						<point pos=""-2.110840 0.993164 -7.196350"" range=""0.443750"" height=""1.109375"" flags=""16"" />
						<point pos=""7.518188 0.995667 4.411987"" range=""0.168750"" height=""0.421875"" flags=""16"" />
						<point pos=""-2.082764 0.615784 -3.522766"" range=""0.168750"" height=""0.369995"" flags=""16"" />
						<point pos=""-2.075683 1.115784 -5.554504"" range=""0.203125"" height=""0.369995"" flags=""16"" />
						<point pos=""-1.900391 0.615784 -5.724243"" range=""0.203125"" height=""0.369995"" flags=""16"" />
						<point pos=""5.331787 1.229492 2.375915"" range=""0.203125"" height=""0.507813"" flags=""16"" />
						<point pos=""-1.950440 0.615784 -4.564270"" range=""0.229693"" height=""0.369995"" flags=""16"" />
						<point pos=""-1.946899 0.615784 -2.304932"" range=""0.234698"" height=""0.369995"" flags=""16"" />
						<point pos=""-1.935058 1.115784 -3.435486"" range=""0.237500"" height=""0.369995"" flags=""16"" />
						<point pos=""2.056886 0.854126 8.202698"" range=""0.239075"" height=""0.597687"" flags=""16"" />
						<point pos=""6.292602 0.155273 7.681519"" range=""0.256592"" height=""0.641479"" flags=""16"" />
						<point pos=""-1.981933 1.115784 -4.588318"" range=""0.271875"" height=""0.369995"" flags=""16"" />
						<point pos=""-1.973389 1.115784 -2.381836"" range=""0.271875"" height=""0.369995"" flags=""16"" />
						<point pos=""4.343750 1.119873 4.732421"" range=""0.271875"" height=""0.679688"" flags=""16"" />
						<point pos=""-5.692140 0.819031 -4.940248"" range=""0.295077"" height=""1.017761"" flags=""16"" />
						<point pos=""2.055421 0.854065 7.055419"" range=""0.306250"" height=""0.765625"" flags=""16"" />
						<point pos=""-5.722412 0.819031 -2.273315"" range=""0.329724"" height=""0.851563"" flags=""16"" />
						<point pos=""-5.722900 0.819031 -2.943665"" range=""0.340625"" height=""0.851563"" flags=""16"" />
						<point pos=""-5.711302 0.819031 -3.862489"" range=""0.387939"" height=""0.969849"" flags=""16"" />
						<point pos=""-5.700073 0.819031 -6.166870"" range=""0.399170"" height=""0.997925"" flags=""16"" />
						<point pos=""-2.186769 0.993164 -8.246400"" range=""0.443750"" height=""1.109375"" flags=""16"" />
				</container>
		</group>
		<group name=""Land_Underground_Floor_Crew"" lootmax=""10"">
				<usage name=""Military"" />
				<value name=""Tier1"" />
				<container name=""lootFloor"" lootmax=""10"">
						<category name=""containers"" />
						<category name=""clothes"" />
						<category name=""weapons"" />
						<tag name=""floor"" />
						<tag name=""ground"" />
						<point pos=""7.600342 1.292908 -8.476135"" range=""0.438509"" height=""1.109375"" flags=""16"" />
						<point pos=""6.649901 1.291748 -8.502075"" range=""0.353868"" height=""1.109375"" flags=""16"" />
						<point pos=""6.728759 0.501953 -8.580812"" range=""0.443750"" height=""0.532410"" flags=""16"" />
						<point pos=""3.106201 1.292969 -8.665344"" range=""0.443750"" height=""1.109375"" flags=""16"" />
						<point pos=""5.680663 0.000366 -7.121094"" range=""0.917554"" height=""2.000000"" flags=""16"" />
						<point pos=""3.375975 0.000366 -6.382385"" range=""0.941120"" height=""2.000000"" flags=""16"" />
						<point pos=""2.121215 1.291748 -8.598389"" range=""0.351508"" height=""1.195313"" flags=""16"" />
						<point pos=""3.377685 0.501953 -8.551636"" range=""0.375000"" height=""0.533875"" flags=""16"" />
						<point pos=""2.050047 0.527710 -7.611390"" range=""0.134375"" height=""0.335938"" flags=""16"" />
						<point pos=""2.193359 0.501953 -8.539612"" range=""0.443750"" height=""0.532410"" flags=""16"" />
						<point pos=""1.917481 1.169128 -6.839966"" range=""0.203125"" height=""0.507813"" flags=""16"" />
						<point pos=""6.996093 0.501953 -3.688660"" range=""0.271875"" height=""0.532776"" flags=""16"" />
						<point pos=""6.431762 0.501953 -4.214539"" range=""0.203125"" height=""0.507813"" flags=""16"" />
						<point pos=""6.591187 1.291687 -4.002137"" range=""0.409375"" height=""1.023438"" flags=""16"" />
						<point pos=""6.691894 1.291809 -6.295838"" range=""0.443750"" height=""1.109375"" flags=""16"" />
						<point pos=""6.647827 0.501953 -6.402466"" range=""0.354488"" height=""0.532349"" flags=""16"" />
						<point pos=""8.099732 0.533447 -7.166139"" range=""0.100000"" height=""0.250000"" flags=""16"" />
						<point pos=""7.879394 0.501953 -8.600342"" range=""0.409375"" height=""0.533813"" flags=""16"" />
						<point pos=""5.787355 0.503540 3.950866"" range=""0.232666"" height=""0.581665"" flags=""16"" />
						<point pos=""7.736451 0.091675 4.369871"" range=""0.562988"" height=""1.407471"" flags=""16"" />
						<point pos=""7.742555 0.091675 2.790525"" range=""0.556885"" height=""1.392212"" flags=""16"" />
						<point pos=""5.736328 0.115784 8.976685"" range=""0.237500"" height=""0.369995"" flags=""16"" />
						<point pos=""5.706545 0.615784 8.943724"" range=""0.203125"" height=""0.369995"" flags=""16"" />
						<point pos=""5.672973 1.115784 8.912598"" range=""0.168750"" height=""0.369995"" flags=""16"" />
						<point pos=""7.764039 0.092834 7.340025"" range=""0.535400"" height=""1.338501"" flags=""16"" />
						<point pos=""7.844116 0.091675 5.863219"" range=""0.455322"" height=""1.138306"" flags=""16"" />
						<point pos=""5.744508 0.503540 6.020751"" range=""0.203125"" height=""0.507813"" flags=""16"" />
						<point pos=""5.717285 0.503540 5.384583"" range=""0.168750"" height=""0.421875"" flags=""16"" />
						<point pos=""5.811891 0.503540 4.710814"" range=""0.208130"" height=""0.520325"" flags=""16"" />
						<point pos=""2.195803 0.836304 9.318909"" range=""0.100000"" height=""0.250000"" flags=""16"" />
						<point pos=""3.046144 0.836304 9.322327"" range=""0.100000"" height=""0.250000"" flags=""16"" />
						<point pos=""3.818727 0.836304 9.322387"" range=""0.100000"" height=""0.250000"" flags=""16"" />
						<point pos=""4.656862 0.836304 9.314208"" range=""0.100000"" height=""0.250000"" flags=""16"" />
				</container>
		</group>
		<group name=""Land_Underground_Entrance"" lootmax=""10"">
				<usage name=""Military"" />
				<usage name=""Police"" />
				<value name=""Tier1"" />
				<container name=""lootFloor"" lootmax=""10"">
						<category name=""containers"" />
						<category name=""clothes"" />
						<category name=""tools"" />
						<category name=""weapons"" />
						<tag name=""floor"" />
						<tag name=""ground"" />
						<point pos=""-1.918331 0.697205 -2.537552"" range=""0.306250"" height=""0.765625"" />
						<point pos=""-0.465044 0.822632 -2.618594"" range=""0.354797"" height=""0.886963"" />
						<point pos=""-1.150324 0.958496 -5.424282"" range=""0.237500"" height=""0.593750"" />
						<point pos=""-1.330669 -0.034851 -4.002523"" range=""1.199951"" height=""2.000000"" />
						<point pos=""1.754182 0.085022 -3.641407"" range=""0.271875"" height=""0.369995"" />
						<point pos=""1.738919 0.585022 -3.576905"" range=""0.232499"" height=""0.369995"" />
						<point pos=""1.760348 1.085022 -3.590840"" range=""0.268154"" height=""0.369995"" />
						<point pos=""1.768126 1.585022 -3.608747"" range=""0.232227"" height=""0.294983"" />
				</container>
		</group>
		<group name=""Land_Underground_Storage_Workshop"" lootmax=""10"">
				<usage name=""Military"" />
				<usage name=""Industrial"" />
				<usage name=""Underground"" />
				<value name=""Tier1"" />
				<container name=""lootTools"" lootmax=""10"">
						<category name=""tools"" />
						<category name=""containers"" />
						<category name=""clothes"" />
						<category name=""food"" />
						<category name=""weapons"" />
						<category name=""explosives"" />
						<point pos=""7.701721 0.585022 2.162843"" range=""0.134375"" height=""0.335938"" />
						<point pos=""-5.861390 1.038391 5.652586"" range=""0.134375"" height=""0.335938"" />
						<point pos=""7.792112 1.085022 -3.612307"" range=""0.168750"" height=""0.370001"" />
						<point pos=""8.779358 1.085022 -3.621338"" range=""0.168750"" height=""0.370001"" />
						<point pos=""-6.112244 0.959229 -0.271973"" range=""0.203125"" height=""0.507797"" />
						<point pos=""7.579895 1.085022 -0.845215"" range=""0.203125"" height=""0.370001"" />
						<point pos=""3.603882 0.950012 0.095948"" range=""0.237500"" height=""0.593750"" />
						<point pos=""8.984680 1.085022 -0.808107"" range=""0.237500"" height=""0.370001"" />
						<point pos=""8.363525 1.085022 2.311525"" range=""0.271875"" height=""0.370001"" />
						<point pos=""9.645080 1.085022 -2.508303"" range=""0.271875"" height=""0.370001"" />
						<point pos=""0.097598 0.775879 5.849854"" range=""0.306250"" height=""0.765625"" />
						<point pos=""4.675476 0.775879 0.722414"" range=""0.306250"" height=""0.765625"" />
						<point pos=""4.860961 0.775879 -2.945070"" range=""0.308105"" height=""0.770264"" />
						<point pos=""4.856812 0.775879 -1.292969"" range=""0.340625"" height=""0.851563"" />
						<point pos=""-1.382507 1.250000 3.077636"" range=""0.340625"" height=""0.851563"" />
						<point pos=""-2.626770 0.950012 -3.466797"" range=""0.375000"" height=""0.937500"" />
						<point pos=""-1.047911 0.775879 5.904786"" range=""0.375000"" height=""0.937500"" />
						<point pos=""-3.773071 0.950012 -3.527832"" range=""0.409375"" height=""1.023438"" />
						<point pos=""3.589782 0.950012 1.729493"" range=""0.409375"" height=""1.023438"" />
						<point pos=""-0.348816 0.775879 -0.082519"" range=""0.530546"" height=""1.326365"" />
						<point pos=""-2.184265 0.775879 0.056396"" range=""0.546875"" height=""1.367188"" />
						<point pos=""-7.276184 0.937866 -1.379150"" range=""0.650000"" height=""1.625000"" />
				</container>
		</group>
		<group name=""Land_Underground_Storage_POX"" lootmax=""10"">
				<value name=""Tier1"" />
				<usage name=""Military"" />
				<usage name=""Underground"" />
				<container name=""lootFloor"" lootmax=""10"">
						<category name=""containers"" />
						<category name=""clothes"" />
						<category name=""weapons"" />
						<category name=""explosives"" />
						<point pos=""-2.667725 0.745178 0.938353"" range=""0.340625"" height=""0.851563"" flags=""16"" />
						<point pos=""-1.363281 1.730652 0.113769"" range=""0.203125"" height=""0.507813"" />
						<point pos=""-1.726439 1.730652 3.882813"" range=""0.237500"" height=""0.593750"" />
						<point pos=""-1.590088 1.730652 -1.161133"" range=""0.271875"" height=""0.679688"" />
						<point pos=""5.422607 1.501953 -2.364990"" range=""0.306250"" height=""0.765625"" />
						<point pos=""-7.669434 0.958984 -3.243410"" range=""0.650000"" height=""1.625000"" />
						<point pos=""7.447265 1.130554 -2.233886"" range=""0.375000"" height=""0.937500"" />
						<point pos=""-3.325440 1.730652 2.102783"" range=""0.375000"" height=""0.937500"" />
						<point pos=""-5.305054 2.138062 1.946287"" range=""0.375000"" height=""0.937500"" />
						<point pos=""2.062988 1.151733 0.381348"" range=""0.409375"" height=""1.023438"" />
						<point pos=""-3.639160 0.745178 0.901490"" range=""0.409375"" height=""1.023438"" flags=""16"" />
						<point pos=""-6.067993 1.115967 -2.867005"" range=""0.271875"" height=""0.679688"" flags=""16"" />
						<point pos=""4.395263 1.109497 -2.981445"" range=""0.203125"" height=""0.507813"" flags=""16"" />
				</container>
				<dispatch dechance=""1.000000"">
						<proxy type=""Grenade_ChemGas"" pos=""-3.30603 0.26218 -1.340943"" rpy=""0.000000 0.000000 0.000000"" dechance=""0.25"" />
						<proxy type=""Grenade_ChemGas"" pos=""-3.25939 0.26218 -1.119508"" rpy=""0.000000 0.000000 0.000000"" dechance=""0.25"" />
						<proxy type=""Grenade_ChemGas"" pos=""4.810425 2.198035 0.923217"" rpy=""0.000000 0.000000 0.000000"" dechance=""0.25"" />
						<proxy type=""Grenade_ChemGas"" pos=""4.863892 2.198035 1.143250"" rpy=""0.000000 0.000000 0.000000"" dechance=""0.25"" />
				</dispatch>
		</group>
		<group name=""Land_Underground_Storage_Ammo"" lootmax=""10"">
				<value name=""Tier1"" />
				<usage name=""Military"" />
				<usage name=""Underground"" />
				<container name=""lootFloor"" lootmax=""10"">
						<category name=""containers"" />
						<category name=""clothes"" />
						<category name=""weapons"" />
						<point pos=""-7.081787 2.683472 3.486022"" range=""0.203125"" height=""0.507813"" flags=""16"" />
						<point pos=""3.483398 1.938843 2.155152"" range=""0.134375"" height=""0.335938"" />
						<point pos=""1.016113 3.464539 3.851196"" range=""0.237500"" height=""0.593750"" />
						<point pos=""-3.838135 3.464539 -3.083495"" range=""0.237500"" height=""0.593750"" />
						<point pos=""-6.277588 2.287842 -2.327880"" range=""0.340625"" height=""0.851563"" />
						<point pos=""2.348023 1.307495 -1.857544"" range=""0.375000"" height=""0.937500"" />
						<point pos=""-5.608764 0.745178 0.921264"" range=""0.409375"" height=""1.023438"" />
						<point pos=""-7.776856 0.363098 0.833924"" range=""0.375000"" height=""0.937500"" flags=""16"" />
						<point pos=""-1.102661 3.464539 2.607910"" range=""0.581250"" height=""1.453125"" />
						<point pos=""-8.647583 0.363098 1.099549"" range=""0.306250"" height=""0.765625"" flags=""16"" />
						<point pos=""2.232056 1.699951 -2.650207"" range=""0.237500"" height=""0.593750"" flags=""16"" />
						<point pos=""5.670776 2.291260 -1.893126"" range=""0.306250"" height=""0.765625"" flags=""16"" />
				</container>
				<dispatch dechance=""1.000000"">
						<proxy type=""AmmoBox_9x39AP_20Rnd"" pos=""-6.450194 2.347341 2.558473"" rpy=""-90.000000 30.000000 0.000000"" dechance=""0.125"" />
						<proxy type=""AmmoBox_556x45Tracer_20Rnd"" pos=""-4.966064 2.347341 2.919129"" rpy=""-90.000000 30.000000 0.000000"" dechance=""0.125"" />
						<proxy type=""AmmoBox_9x39AP_20Rnd"" pos=""-5.266602 2.000305 2.021424"" rpy=""-90.000000 90.000000 0.000000"" dechance=""0.125"" />
						<proxy type=""AmmoBox_9x39AP_20Rnd"" pos=""-5.074829 2.000305 1.977051"" rpy=""-90.000000 10.000000 0.000000"" dechance=""0.125"" />
						<proxy type=""AmmoBox_762x54Tracer_20Rnd"" pos=""-4.966674 2.000305 2.157837"" rpy=""-90.000000 30.000000 0.000000"" dechance=""0.125"" />
						<proxy type=""AmmoBox_762x54Tracer_20Rnd"" pos=""-6.562866 1.938843 1.850160"" rpy=""-90.000000 50.000000 0.000000"" dechance=""0.125"" />
						<proxy type=""AmmoBox_556x45Tracer_20Rnd"" pos=""-6.060424 1.938843 1.908936"" rpy=""-90.000000 70.000000 0.000000"" dechance=""0.125"" />
						<proxy type=""AmmoBox_9x39AP_20Rnd"" pos=""-5.654663 1.938843 1.750488"" rpy=""-90.000000 90.000000 0.000000"" dechance=""0.125"" />
				</dispatch>
				<dispatch dechance=""1.000000"">
						<proxy type=""AmmoBox_9x39AP_20Rnd"" pos=""3.860595 2.001953 2.175293"" rpy=""90.000000 120.000000 0.000000"" dechance=""0.077"" />
						<proxy type=""AmmoBox_556x45Tracer_20Rnd"" pos=""3.886474 2.011953 2.520020"" rpy=""-90.000000 160.000000 0.000000"" dechance=""0.077"" />
						<proxy type=""AmmoBox_9x39AP_20Rnd"" pos=""4.158813 2.001953 2.823365"" rpy=""90.000000 210.000000 0.000000"" dechance=""0.077"" />
						<proxy type=""AmmoBox_762x39Tracer_20Rnd"" pos=""4.161621 2.001953 2.536255"" rpy=""90.000000 260.000000 0.000000"" dechance=""0.077"" />
						<proxy type=""AmmoBox_762x39Tracer_20Rnd"" pos=""4.149169 2.001953 2.235596"" rpy=""90.000000 120.000000 0.000000"" dechance=""0.077"" />
						<proxy type=""AmmoBox_9x39AP_20Rnd"" pos=""4.525391 2.011953 2.233765"" rpy=""-90.000000 160.000000 0.000000"" dechance=""0.077"" />
						<proxy type=""AmmoBox_762x39Tracer_20Rnd"" pos=""4.567504 2.001953 2.746094"" rpy=""90.000000 210.000000 0.000000"" dechance=""0.077"" />
						<proxy type=""AmmoBox_762x54Tracer_20Rnd"" pos=""5.478393 2.001953 2.882385"" rpy=""90.000000 260.000000 0.000000"" dechance=""0.077"" />
						<proxy type=""AmmoBox_762x39Tracer_20Rnd"" pos=""5.371948 2.001953 2.644409"" rpy=""90.000000 120.000000 0.000000"" dechance=""0.077"" />
						<proxy type=""AmmoBox_9x39AP_20Rnd"" pos=""5.321533 2.011953 2.340271"" rpy=""-90.000000 160.000000 0.000000"" dechance=""0.077"" />
						<proxy type=""AmmoBox_762x54Tracer_20Rnd"" pos=""4.971435 2.001953 2.288513"" rpy=""90.000000 210.000000 0.000000"" dechance=""0.077"" />
						<proxy type=""AmmoBox_762x39Tracer_20Rnd"" pos=""4.926514 2.001953 2.564698"" rpy=""90.000000 260.000000 0.000000"" dechance=""0.077"" />
						<proxy type=""AmmoBox_762x54Tracer_20Rnd"" pos=""4.769653 2.001953 2.388062"" rpy=""90.000000 120.000000 0.000000"" dechance=""0.077"" />
				</dispatch>
				<dispatch dechance=""1.000000"">
						<proxy type=""ClaymoreMine"" 			pos=""1.191284 0.151438 -1.327636"" rpy=""0.000000 0.000000 0.000000"" dechance=""0.166"" />
						<proxy type=""Ammo_40mm_Explosive"" 	pos=""1.433350 0.186016 -1.175842"" rpy=""90.000000 35.000000 0.000000"" dechance=""0.166"" />
						<proxy type=""Ammo_40mm_Explosive"" 	pos=""1.860107 0.082756 -0.394958"" rpy=""90.000000 70.000000 0.000000"" dechance=""0.166"" />
						<proxy type=""Ammo_40mm_Explosive"" 	pos=""1.511963 0.082756 -0.604553"" rpy=""90.000000 105.000000 0.000000"" dechance=""0.166"" />
						<proxy type=""ClaymoreMine"" 			pos=""1.104614 0.062756 -0.793396"" rpy=""0.000000 0.000000 0.000000"" dechance=""0.166"" />
						<proxy type=""Ammo_40mm_Explosive"" 	pos=""0.781372 0.082756 -0.982544"" rpy=""90.000000 140.000000 0.000000"" dechance=""0.166"" />
				</dispatch>
		</group>
		<group name=""Land_Underground_Storage_Ammo2"" lootmax=""20"">
				<usage name=""Military"" />
				<value name=""Tier3"" />
				<container name=""lootWeapons"" lootmax=""10"">
						<category name=""weapons"" />
						<category name=""explosives"" />
						<point pos=""5.923706 3.464539 -0.840759"" range=""0.134375"" height=""0.335938"" />
						<point pos=""-5.946045 1.730652 2.402344"" range=""0.271875"" height=""0.679688"" />
						<point pos=""0.507447 1.501953 -2.638366"" range=""0.306250"" height=""0.765625"" />
						<point pos=""-1.436035 1.730652 2.265869"" range=""0.306250"" height=""0.765625"" />
						<point pos=""7.024292 3.464539 -3.821593"" range=""0.306250"" height=""0.765625"" />
						<point pos=""0.629761 1.109497 -1.854431"" range=""0.340625"" height=""0.851563"" />
						<point pos=""5.492188 3.464539 -2.143493"" range=""0.340625"" height=""0.851563"" />
						<point pos=""-4.475099 1.115967 -4.512206"" range=""0.375000"" height=""0.937500"" />
						<point pos=""-7.461549 0.958984 -2.766112"" range=""0.718750"" height=""1.796875"" />
						<point pos=""-8.099977 0.363098 0.891847"" range=""0.443750"" height=""1.109375"" />
						<point pos=""5.133545 3.464539 -3.982116"" range=""0.375000"" height=""0.937500"" />
						<point pos=""-5.373779 1.508423 -4.439025"" range=""0.409375"" height=""1.023438"" />
						<point pos=""1.718750 1.730652 4.175965"" range=""0.409375"" height=""1.023438"" />
						<point pos=""3.496094 1.730652 3.489136"" range=""0.203125"" height=""0.507813"" flags=""16"" />
						<point pos=""-2.384521 1.730652 2.166809"" range=""0.375000"" height=""0.937500"" flags=""16"" />
				</container>
				<dispatch dechance=""1.000000"">
						<proxy type=""AmmoBox_9x39AP_20Rnd"" pos=""-6.007690 0.462393 0.721314"" rpy=""-90.000000 75.000000 0.000000"" dechance=""0.125"" />
						<proxy type=""AmmoBox_556x45Tracer_20Rnd"" pos=""-5.702758 0.462393 1.043152"" rpy=""-90.000000 120.000000 0.000000"" dechance=""0.125"" />
						<proxy type=""AmmoBox_762x54Tracer_20Rnd"" pos=""-5.691162 0.472393 0.777710"" rpy=""-90.000000 140.000000 0.000000"" dechance=""0.125"" />
						<proxy type=""AmmoBox_556x45Tracer_20Rnd"" pos=""-5.360474 0.462393 1.084412"" rpy=""-90.000000 160.000000 0.000000"" dechance=""0.125"" />
						<proxy type=""AmmoBox_9x39AP_20Rnd"" pos=""-4.808838 0.462393 0.866942"" rpy=""-90.000000 200.000000 0.000000"" dechance=""0.125"" />
						<proxy type=""AmmoBox_762x54Tracer_20Rnd"" pos=""-5.215454 0.472393 0.595460"" rpy=""-90.000000 240.000000 0.000000"" dechance=""0.125"" />
						<proxy type=""AmmoBox_9x39AP_20Rnd"" pos=""-5.484498 0.462393 0.483703"" rpy=""-90.000000 260.000000 0.000000"" dechance=""0.125"" />
						<proxy type=""AmmoBox_762x54Tracer_20Rnd"" pos=""-6.085205 0.479429 0.476014"" rpy=""-90.000000 280.000000 0.000000"" dechance=""0.125"" />
				</dispatch>
				<dispatch dechance=""1.000000"">
						<proxy type=""AmmoBox_762x39Tracer_20Rnd"" pos=""2.495239 0.867300 1.328369"" rpy=""90.000000 35.000000 0.000000"" dechance=""0.16"" />
						<proxy type=""AmmoBox_762x39Tracer_20Rnd"" pos=""2.972656 1.194336 1.125428"" rpy=""90.000000 70.000000 0.000000"" dechance=""0.16"" />
						<proxy type=""AmmoBox_9x39AP_20Rnd"" pos=""3.318970 1.194336 1.115418"" rpy=""90.000000 105.000000 0.000000"" dechance=""0.16"" />
						<proxy type=""AmmoBox_762x54Tracer_20Rnd"" pos=""3.888550 1.214336 1.360290"" rpy=""-90.000000 175.000000 0.000000"" dechance=""0.16"" />
						<proxy type=""AmmoBox_9x39AP_20Rnd"" pos=""2.504150 1.194336 0.624817"" rpy=""90.000000 315.000000 0.000000"" dechance=""0.16"" />
						<proxy type=""AmmoBox_762x54Tracer_20Rnd"" pos=""2.453003 1.25336 0.897278"" rpy=""-90.000000 350.000000 0.000000"" dechance=""0.16"" />
				</dispatch>
				<dispatch dechance=""1.000000"">
						<proxy type=""AmmoBox_762x39Tracer_20Rnd"" pos=""1.041016 1.220266 -1.645569"" rpy=""-90.000000 40.000000 0.000000"" dechance=""0.066"" />
						<proxy type=""AmmoBox_9x39AP_20Rnd"" pos=""1.067627 1.210266 -1.915344"" rpy=""-90.000000 80.000000 0.000000"" dechance=""0.066"" />
						<proxy type=""AmmoBox_556x45Tracer_20Rnd"" pos=""0.825684 1.210266 -1.984741"" rpy=""-90.000000 100.000000 0.000000"" dechance=""0.066"" />
						<proxy type=""AmmoBox_762x54Tracer_20Rnd"" pos=""0.639038 1.220266 -1.525635"" rpy=""-90.000000 120.000000 0.000000"" dechance=""0.066"" />
						<proxy type=""AmmoBox_9x39AP_20Rnd"" pos=""0.457642 1.210266 -1.697876"" rpy=""-90.000000 140.000000 0.000000"" dechance=""0.066"" />
						<proxy type=""AmmoBox_762x39Tracer_20Rnd"" pos=""-0.028321 1.220266 -1.69494"" rpy=""-90.000000 240.000000 0.000000"" dechance=""0.066"" />
						<proxy type=""AmmoBox_762x54Tracer_20Rnd"" pos=""0.420655 1.220266 -2.055237"" rpy=""-90.000000 260.000000 0.000000"" dechance=""0.066"" />
						<proxy type=""AmmoBox_556x45Tracer_20Rnd"" pos=""0.547973 1.210266 -1.955444"" rpy=""-90.000000 280.000000 0.000000"" dechance=""0.066"" />
						<proxy type=""AmmoBox_762x39Tracer_20Rnd"" pos=""0.842163 1.220266 -1.526062"" rpy=""-90.000000 20.000000 0.000000"" dechance=""0.066"" />
						<proxy type=""AmmoBox_9x39AP_20Rnd"" pos=""0.802002 1.210266 -1.736084"" rpy=""-90.000000 40.000000 0.000000"" dechance=""0.066"" />
						<proxy type=""AmmoBox_762x54Tracer_20Rnd"" pos=""-0.207519 1.220266 -1.86840"" rpy=""-90.000000 60.000000 0.000000"" dechance=""0.066"" />
						<proxy type=""AmmoBox_762x39Tracer_20Rnd"" pos=""-0.377198 1.220266 -1.62683"" rpy=""-90.000000 80.000000 0.000000"" dechance=""0.066"" />
						<proxy type=""AmmoBox_762x39Tracer_20Rnd"" pos=""-0.362549 1.220266 -1.49017"" rpy=""-90.000000 100.000000 0.000000"" dechance=""0.066"" />
						<proxy type=""AmmoBox_9x39AP_20Rnd"" pos=""-0.202758 1.210266 -1.44458"" rpy=""-90.000000 120.000000 0.000000"" dechance=""0.066"" />
						<proxy type=""AmmoBox_762x39Tracer_20Rnd"" pos=""-0.042846 1.220266 -1.40679"" rpy=""-90.000000 140.000000 0.000000"" dechance=""0.066"" />
				</dispatch>
		</group>
		<group name=""Land_Underground_Storage_Hospital"" lootmax=""10"">
				<usage name=""Military"" />
				<usage name=""Underground"" />
				<usage name=""Medic"" />
				<value name=""Tier2"" />
				<container name=""lootFloor"" lootmax=""10"">
						<category name=""tools"" />
						<category name=""clothes"" />
						<point pos=""9.824950 0.859985 -3.071290"" range=""0.100000"" height=""0.250000"" />
						<point pos=""9.788695 0.859985 -2.134279"" range=""0.134375"" height=""0.264999"" />
						<point pos=""9.776732 0.479980 -1.469240"" range=""0.134375"" height=""0.264999"" />
						<point pos=""2.693604 1.016541 -5.583252"" range=""0.168750"" height=""0.421875"" />
						<point pos=""3.765992 0.726563 2.984618"" range=""0.203125"" height=""0.507813"" />
						<point pos=""4.853882 0.726563 3.060790"" range=""0.203125"" height=""0.507813"" />
						<point pos=""-2.770873 0.718506 -4.040528"" range=""0.203125"" height=""0.507813"" />
						<point pos=""-1.859009 0.718506 -4.050538"" range=""0.203125"" height=""0.507813"" />
						<point pos=""2.602904 0.726563 -4.945069"" range=""0.203125"" height=""0.507813"" />
						<point pos=""3.982056 1.016541 2.527099"" range=""0.203125"" height=""0.507813"" />
						<point pos=""6.832763 0.726563 -4.136719"" range=""0.203125"" height=""0.507813"" />
						<point pos=""3.778198 1.016541 2.046631"" range=""0.237500"" height=""0.593750"" />
						<point pos=""2.118286 0.726563 -0.053223"" range=""0.239895"" height=""0.679688"" />
						<point pos=""2.544068 0.726563 -0.337158"" range=""0.271875"" height=""0.679688"" />
						<point pos=""9.452024 1.023865 0.730224"" range=""0.306250"" height=""0.765625"" />
						<point pos=""9.589478 1.023865 -0.020021"" range=""0.306250"" height=""0.765625"" />
						<point pos=""-5.735474 1.023865 -2.918945"" range=""0.340625"" height=""0.851563"" />
						<point pos=""-5.687743 1.023865 -3.857178"" range=""0.340625"" height=""0.851563"" />
						<point pos=""-9.338135 1.023865 -3.173584"" range=""0.375000"" height=""0.937500"" />
						<point pos=""-9.319457 1.023865 -2.179445"" range=""0.375000"" height=""0.937500"" />
				</container>
		</group>
		<group name=""Land_Underground_Storage_Laboratory"" lootmax=""10"">
				<usage name=""Military"" />
				<usage name=""Underground"" />
				<usage name=""Medic"" />
				<value name=""Tier2"" />
				<container name=""lootFloor"" lootmax=""10"">
						<category name=""tools"" />
						<category name=""clothes"" />
						<point pos=""-1.534424 0.849976 -0.304383"" range=""0.306250"" height=""0.765625"" flags=""16"" />
						<point pos=""-0.645264 0.849976 -0.289978"" range=""0.443750"" height=""1.109375"" flags=""16"" />
						<point pos=""0.729126 0.849976 -0.325195"" range=""0.409375"" height=""1.023438"" flags=""16"" />
						<point pos=""0.990723 0.849976 0.544983"" range=""0.237500"" height=""0.593750"" flags=""16"" />
						<point pos=""-1.387940 0.849976 0.530945"" range=""0.271875"" height=""0.679688"" flags=""16"" />
						<point pos=""-1.910401 0.849976 0.504028"" range=""0.203125"" height=""0.507813"" flags=""16"" />
						<point pos=""-2.525392 0.849976 -3.331299"" range=""0.340625"" height=""0.851563"" flags=""16"" />
						<point pos=""-0.706787 0.859985 -3.506714"" range=""0.134375"" height=""0.265015"" flags=""16"" />
						<point pos=""0.384034 0.859985 -3.523438"" range=""0.156738"" height=""0.265015"" flags=""16"" />
						<point pos=""-0.273071 1.239990 -3.481140"" range=""0.100000"" height=""0.250000"" flags=""16"" />
						<point pos=""4.032592 1.023865 -2.541138"" range=""0.276855"" height=""0.692139"" flags=""16"" />
						<point pos=""4.031250 1.023865 -3.122559"" range=""0.283813"" height=""0.709534"" flags=""16"" />
						<point pos=""4.017334 1.023865 -3.702515"" range=""0.296309"" height=""0.758362"" flags=""16"" />
						<point pos=""3.994141 1.437866 -1.258606"" range=""0.237500"" height=""0.593750"" flags=""16"" />
						<point pos=""-2.657348 1.023865 3.791320"" range=""0.334351"" height=""0.835876"" flags=""16"" />
						<point pos=""-3.345702 1.023865 3.762024"" range=""0.341614"" height=""0.854034"" flags=""16"" />
				</container>
				<dispatch dechance=""1.000000"">
						<proxy type=""Ammo_40mm_ChemGas"" pos=""-4.303712 0.907471 3.644958"" rpy=""0.000000 0.000000 0.000000"" dechance=""1.0"" />
				</dispatch>
		</group>
		<group name=""Land_Underground_WaterMaintenance"" lootmax=""10"">
				<usage name=""Industrial"" />
				<container name=""lootFloor"" lootmax=""10"">
						<category name=""tools"" />
						<category name=""containers"" />
						<tag name=""floor"" />
						<tag name=""ground"" />
						<point pos=""-5.518433 0.880005 -4.856628"" range=""0.271875"" height=""0.679688"" />
						<point pos=""-1.832886 0.927704 0.083557"" range=""0.382684"" height=""1.023438"" />
						<point pos=""-1.829590 0.927704 -1.278686"" range=""0.409375"" height=""1.023438"" />
						<point pos=""-5.385986 0.879700 -4.307982"" range=""0.134375"" height=""0.335938"" />
						<point pos=""-1.809936 0.927612 -5.396789"" range=""0.375000"" height=""0.937500"" flags=""16"" />
						<point pos=""-1.851930 0.927612 -6.073730"" range=""0.303242"" height=""0.864136"" flags=""16"" />
						<point pos=""-5.420656 0.960114 -6.768674"" range=""0.237500"" height=""0.593750"" />
						<point pos=""-5.576906 0.962830 -5.566283"" range=""0.168750"" height=""0.421875"" />
						<point pos=""-5.325073 1.584381 0.260011"" range=""0.237500"" height=""0.295013"" />
						<point pos=""-5.392701 1.084381 0.348389"" range=""0.237500"" height=""0.369995"" />
						<point pos=""-5.330444 0.584381 0.335145"" range=""0.266535"" height=""0.369995"" />
						<point pos=""-5.246704 0.084381 0.317993"" range=""0.168750"" height=""0.369995"" />
						<point pos=""-4.149292 0.083557 1.314271"" range=""0.271875"" height=""0.369995"" />
						<point pos=""-4.480347 0.583557 1.349976"" range=""0.271875"" height=""0.369995"" />
						<point pos=""-3.902344 0.583557 1.306946"" range=""0.237500"" height=""0.369995"" />
						<point pos=""-3.935425 1.083557 1.349550"" range=""0.265401"" height=""0.369995"" />
						<point pos=""-4.371338 1.583557 1.261109"" range=""0.203125"" height=""0.295013"" />
				</container>
		</group>
		<group name=""Land_Underground_Storage_Prison"" lootmax=""10"">
				<usage name=""Military"" />
				<usage name=""Underground"" />
				<value name=""Tier2"" />
				<container name=""lootFloor"" lootmax=""10"">
						<category name=""containers"" />
						<category name=""clothes"" />
						<category name=""weapons"" />
						<point pos=""-8.146852 0.822632 -1.845703"" range=""0.443750"" height=""1.109375"" />
						<point pos=""-7.579469 0.822693 -2.625608"" range=""0.478125"" height=""1.195313"" />
						<point pos=""-6.110841 0.012756 4.344727"" range=""0.489319"" height=""1.223297"" />
						<point pos=""-6.209961 0.012756 -4.573730"" range=""0.518555"" height=""1.296387"" />
						<point pos=""-1.249024 0.012756 2.444031"" range=""0.535156"" height=""1.337891"" />
						<point pos=""5.486450 0.012756 -3.334838"" range=""0.590048"" height=""1.997986"" />
						<point pos=""0.389771 0.012756 4.212341"" range=""0.621704"" height=""1.554260"" />
						<point pos=""0.296509 0.012756 2.569458"" range=""0.697937"" height=""1.744812"" />
						<point pos=""5.454102 0.012756 2.626893"" range=""0.755371"" height=""1.888428"" />
						<point pos=""0.383546 0.012756 -4.294860"" range=""0.757446"" height=""1.893615"" />
						<point pos=""-4.626466 0.012756 -2.924560"" range=""0.783508"" height=""1.958771"" />
						<point pos=""4.133179 0.012756 -3.040222"" range=""0.794922"" height=""1.987305"" />
						<point pos=""4.276733 0.012756 3.959411"" range=""0.874634"" height=""2.000000"" />
						<point pos=""-0.868164 0.012756 -3.136535"" range=""0.938232"" height=""2.000000"" />
						<point pos=""-5.419433 0.012756 2.763063"" range=""1.190776"" height=""2.000000"" />
				</container>
				<dispatch dechance=""1.000000"">
						<proxy type=""AK101"" pos=""2.166992 0.012756 3.037353"" rpy=""90.000000 90.000000 0.000000"" dechance=""0.25"" />
						<proxy type=""AK101"" pos=""6.482910 0.012756 -0.18048"" rpy=""90.000000 90.000000 0.000000"" dechance=""0.25"" />
						<proxy type=""AK101"" pos=""2.447632 0.012756 -0.02749"" rpy=""90.000000 0.000000 0.000000"" dechance=""0.25"" />
						<proxy type=""AK101"" pos=""-1.808472 0.012756 -0.1717"" rpy=""90.000000 110.000000 0.000000"" dechance=""0.25"" />
				</dispatch>
				<dispatch dechance=""1.000000"">
						<proxy type=""PlateCarrierVest_Green"" pos=""-2.901246 0.012756 3.09815"" rpy=""0.000000 0.000000 0.000000"" dechance=""0.2"" />
						<proxy type=""PlateCarrierVest_Black"" pos=""-2.796021 0.012756 -3.1388"" rpy=""0.000000 0.000000 0.000000"" dechance=""0.2"" />
						<proxy type=""PlateCarrierVest_Green"" pos=""2.291627 0.012756 -3.21477"" rpy=""0.000000 0.000000 0.000000"" dechance=""0.2"" />
						<proxy type=""PlateCarrierVest_Black"" pos=""-4.811768 0.012756 -0.1574"" rpy=""0.000000 0.000000 0.000000"" dechance=""0.2"" />
						<proxy type=""PlateCarrierVest_Green"" pos=""-8.244873 0.012756 -0.5780"" rpy=""0.000000 0.000000 0.000000"" dechance=""0.2"" />
				</dispatch>
		</group>
		<group name=""Land_Underground_Storage_POX2"" lootmax=""10"">
				<usage name=""Military"" />
				<usage name=""Underground"" />
				<value name=""Tier3"" />
				<container name=""lootWeapons"" lootmax=""10"">
						<category name=""weapons"" />
						<category name=""explosives"" />
						<point pos=""-4.917115 1.119415 -3.873595"" range=""0.168750"" height=""0.421875"" flags=""16"" />
						<point pos=""-1.781128 0.399780 -1.886596"" range=""0.340625"" height=""0.851563"" flags=""16"" />
						<point pos=""-0.048950 0.942383 -0.002075"" range=""0.409361"" height=""1.023438"" flags=""16"" />
						<point pos=""0.050171 0.942383 0.637146"" range=""0.237500"" height=""0.593750"" flags=""16"" />
						<point pos=""2.546143 0.775879 -6.100707"" range=""0.317505"" height=""0.793762"" flags=""16"" />
						<point pos=""7.146119 0.705902 -3.099121"" range=""0.112549"" height=""0.281372"" flags=""16"" />
						<point pos=""0.117309 0.596039 -3.258484"" range=""0.203125"" height=""0.507813"" flags=""16"" />
						<point pos=""7.464966 1.098389 -0.599304"" range=""0.340625"" height=""0.851563"" flags=""16"" />
						<point pos=""-4.749024 1.119415 -4.627258"" range=""0.375000"" height=""0.937500"" flags=""16"" />
						<point pos=""1.851808 0.775879 -6.075317"" range=""0.375000"" height=""0.937500"" flags=""16"" />
						<point pos=""5.302125 0.775879 -6.033689"" range=""0.386475"" height=""0.966186"" flags=""16"" />
						<point pos=""-2.102295 0.399780 -0.790222"" range=""0.203125"" height=""0.507813"" flags=""16"" />
						<point pos=""0.046875 0.596039 -3.918274"" range=""0.409375"" height=""1.023438"" flags=""16"" />
						<point pos=""5.696045 0.970001 -4.500915"" range=""0.271875"" height=""0.679688"" flags=""16"" />
						<point pos=""7.465333 1.119415 -3.616943"" range=""0.203125"" height=""0.507813"" flags=""16"" />
						<point pos=""8.635254 0.947693 2.785095"" range=""0.306250"" height=""0.765625"" flags=""16"" />
						<point pos=""-2.552856 0.139709 -1.866150"" flags=""16"" />
				</container>
				<dispatch dechance=""1.000000"">
						<proxy type=""Mich2001Helmet"" pos=""-17.787476 0.658417 -2.219725"" rpy=""0.000000 -260.000000 0.000000"" dechance=""0.500000"" />
						<proxy type=""Mich2001Helmet"" pos=""-18.421021 0.658417 -2.406675"" rpy=""0.000000 -290.000000 0.000000"" dechance=""0.500000"" />
				</dispatch>
				<dispatch dechance=""1.000000"">
						<proxy type=""Aug"" pos=""-12.238892 0.623566 3.656677"" rpy=""90.000000 -539.999939 0.000000"" dechance=""1.000000"" />
				</dispatch>
				<dispatch dechance=""1.000000"">
						<proxy type=""Grenade_ChemGas"" pos=""0.450073 0.468536 -3.458923"" rpy=""0.000000 -179.999985 0.000000"" dechance=""0.250000"" />
						<proxy type=""Grenade_ChemGas"" pos=""0.506837 0.468536 -3.274597"" rpy=""0.000000 -179.999985 0.000000"" dechance=""0.250000"" />
						<proxy type=""Grenade_ChemGas"" pos=""-2.398194 0.272278 -2.031432"" rpy=""0.000000 -179.999985 0.000000"" dechance=""0.250000"" />
						<proxy type=""Grenade_ChemGas"" pos=""-2.340942 0.272278 -1.834350"" rpy=""0.000000 -179.999985 0.000000"" dechance=""0.250000"" />
				</dispatch>
		</group>
"
NKKqjn6m,elevator Floor,GrimReapaa420,Lua,Friday 7th of July 2023 09:53:53 AM CDT,"-- Peripheral names
local monitorSide = ""top""
local modemSide = ""right""
local scale = 1
-- RedNet protocol
local protocol = ""elevator""

-- Initialize modem
rednet.open(modemSide)

-- Initialize monitor
local monitor = peripheral.wrap(monitorSide)
monitor.setTextScale(scale)
monitor.clear()

-- Draw buttons
monitor.setCursorPos(1, 1)
monitor.write(""Dach"")
monitor.setCursorPos(1, 3)
monitor.write(""Technik"")
monitor.setCursorPos(1, 5)
monitor.write(""Eingang"")

-- Main function
while true do
    local event, side, x, y = os.pullEvent(""monitor_touch"")
    if y == 1 then
        rednet.broadcast(""dach"", protocol)
    elseif y == 3 then
        rednet.broadcast(""technik"", protocol)
    elseif y == 5 then
        rednet.broadcast(""eingang"", protocol)
    end
end
"
b1rMKxHv,hole new no fuel,Whitebadger,Lua,Friday 7th of July 2023 09:48:18 AM CDT,"--define variables
fuelint = 0
holevol = 0
xdist = 0
zdist = 0
fuelint2 = false
--Download refuel
--shell.run(""pastebin"",""get"",""TAxr510V"",""refuel"")
--get x value
print(""Enter forward value."")
local x = read()
--get y value
print(""Enter vertical value."")
local y = read()
--get z value
print(""Enter horizontal right value. (even number)"")
local z  = read()
--bunch of math to calculate what were digging
xdist = x-1
zdist = math.ceil(z/2)
holevol = x*y*z   
print(""Digging ""..holevol.."" blocks!"")
--digging the hole
for i = 1,y do
	turtle.digDown()
	turtle.down()
	for h = 1,zdist do
		for j = 1,xdist do
			turtle.dig()
			turtle.forward()
		end
		turtle.turnRight()
		turtle.dig()
		turtle.forward()
		turtle.turnRight()
		for j = 1,xdist do
			turtle.dig()
			turtle.forward()
		end
		if h ~= zdist then
			turtle.turnLeft()
			turtle.dig()
			turtle.forward()
			turtle.turnLeft()
		end
	end
turtle.turnRight()
for k = 1,zdist do
	turtle.forward()
end
turtle.turnRight()
end"
kGxwQZnP,moguys,Damonwei,JSON,Friday 7th of July 2023 08:54:13 AM CDT,"{
""author"":""Dwei-0706"",
""ua"": ""Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.75 Safari/537.36"",
""homeUrl"": ""https://moguys.xyz/"",
""cateManual"": {""国产剧"": ""13"",""台剧"": ""20"",""韩剧"": ""14"",""美剧"": ""15"",""电视剧"": ""2"",""电影"": ""1"",""动漫"": ""3"",""综艺"": ""4""},
""homeVodNode"": ""//div[@class='module-item']"",
""homeVodName"": ""/div[1]/div[1]/a/@title"",
""homeVodId"": ""/div[1]/div[1]/a/@href"",
""homeVodIdR"": """",
""homeVodImg"": ""/div[1]/div[1]/img/@data-src"",
""homeVodImgR"": """",
""homeVodMark"": ""/div[3]/text()"",
""cateUrl"": ""https://moguys.xyz/vodshow/{cateId}--------{catePg}---.html"",
""cateVodNode"": ""//div[@class='module-item']"",
""cateVodName"": ""/div[1]/div[1]/a/@title"",
""cateVodId"": ""/div[1]/div[1]/a/@href"",
""cateVodIdR"": """",
""cateVodImg"": ""/div[1]/div[1]/img/@data-src"",
""cateVodImgR"": """",
""cateVodMark"": ""/div[3]/text()"",
""dtUrl"":""https://moguys.xyz{vid}"",
""dtNode"": ""//body"",
""dtName"": ""//h1/text()"",
""dtNameR"": """",
""dtImg"": ""//div[@class='video-cover']//img/@data-src"",
""dtImgR"": ""\\S+(http\\S+)"",
""dtCate"": ""concat(//div[@class='scroll-box']/div/div/a/text())"",
""dtCateR"": """",
""dtYear"": ""//div[@class='scroll-box']/div/a[2]/text()"",
""dtYearR"": """",
""dtArea"": ""//div[@class='scroll-box']/div/a[3]/text()"",
""dtAreaR"": """",
""dtMark"": """",
""dtMarkR"": """",
""dtDirector"": ""//div[@class='video-info-items'][1]/div/a/text()"",
""dtDirectorR"": """",
""dtActor"": ""concat(//div[@class='video-info-items'][2]/div/a/text())"",
""dtActorR"": """",
""dtDesc"": ""concat('Dwei观影提示：资源加载时间过长可尝试切换不同线路资源，也可点击快速搜索切换其他站点观看！！简介：',//div[@class='video-info-items'][4]/div/text(),//div[@class='video-info-items'][8]/div/a/text())"",
""dtFromNode"": ""//div[contains(@class,'module-player-tab')]//div[@class='module-tab-content']/div"",
""dtFromName"":  ""concat(/span/text(),'☞',/small/text())"",
""dtFromNameR"": """",
""dtUrlNode"": ""//div[contains(@id,'glist')]//div[@class='scroll-content']"",
""dtUrlSubNode"": ""/a"",
""dtUrlId"": ""/@href"",
""dtUrlIdR"": """",
""dtUrlName"": ""/span/text()"",
""dtUrlNameR"": """",
""playUrl"":""https://moguys.xyz{playUrl}"",
""searchUrl"":""https://moguys.xyz/vodsearch/-------------.html?wd={wd}"",
""scVodNode"":""//div[@class='module-search-item']"",
""scVodName"":""//h3/a/text()"",
""scVodId"":""//h3/a/@href"",
""scVodImg"":""//img/@data-src"",
""scVodImgR"":"""",
""scVodMark"":""/div[2]/div[1]/a/text()""
}"
6YWK9f0N,Untitled,veritas2022,JavaScript,Friday 7th of July 2023 08:47:53 AM CDT,"function createAssemblyLine() {
    return {
hasClima(myCar) {
    myCar.temp = 21;
    myCar.tempSettings = 21;
    myCar.adjustTemp = () => {
       myCar.temp < myCar.tempSettings ? myCar.temp++ : myCar.temp--
  };
},
hasAudio(myCar){
    myCar.currentTrack = null;
    myCar.nowPlaying = () => {
        // if(myCar.currentTrack != null && myCar.currentTrack != undefined){
        console.log(`Now playing '${myCar.currentTrack.name}' by ${myCar.currentTrack.artist}`)
    // }
}
},
hasParktronic(myCar){
        myCar.checkDistance = (distance) => {
if(distance < 0.1){
    console.log(""Beep! Beep! Beep!"");
}else if(distance >= 0.1 && distance < 0.25){
    console.log(""Beep! Beep!"");
}else if(distance>= 0.25 && distance < 0.5){
    console.log(""Beep!"");
}else{
    console.log('')
}
}
}
}};"
99b0mTpj,Untitled,veritas2022,JavaScript,Friday 7th of July 2023 08:46:54 AM CDT,"function createAssemblyLine() {
    return {
hasClima(myCar) {
    myCar.temp = 21;
    myCar.tempSettings = 21;
    myCar.adjustTemp = () => {
        // if (myCar.temp < myCar.tempSettings) {
        //     myCar.temp++;
        // }else if(myCar.temp > myCar.tempSettings){
        //     myCar.temp--;
        // }
       myCar.temp < myCar.tempSettings ? myCar.temp++ : myCar.temp--
  };
},
hasAudio(myCar){
    myCar.currentTrack = null;
    myCar.nowPlaying = () => {
        // if(myCar.currentTrack != null && myCar.currentTrack != undefined){
        console.log(`Now playing '${myCar.currentTrack.name}' by ${myCar.currentTrack.artist}`)
    // }
}
},
hasParktronic(myCar){
        myCar.checkDistance = (distance) => {
if(distance < 0.1){
    console.log(""Beep! Beep! Beep!"");
}else if(distance >= 0.1 && distance < 0.25){
    console.log(""Beep! Beep!"");
}else if(distance>= 0.25 && distance < 0.5){
    console.log(""Beep!"");
}else{
    console.log('')
}
}
}
}};function createAssemblyLine() {
    return {
hasClima(myCar) {
    myCar.temp = 21;
    myCar.tempSettings = 21;
    myCar.adjustTemp = () => {
        // if (myCar.temp < myCar.tempSettings) {
        //     myCar.temp++;
        // }else if(myCar.temp > myCar.tempSettings){
        //     myCar.temp--;
        // }
       myCar.temp < myCar.tempSettings ? myCar.temp++ : myCar.temp--
  };
},
hasAudio(myCar){
    myCar.currentTrack = null;
    myCar.nowPlaying = () => {
        // if(myCar.currentTrack != null && myCar.currentTrack != undefined){
        console.log(`Now playing '${myCar.currentTrack.name}' by ${myCar.currentTrack.artist}`)
    // }
}
},
hasParktronic(myCar){
        myCar.checkDistance = (distance) => {
if(distance < 0.1){
    console.log(""Beep! Beep! Beep!"");
}else if(distance >= 0.1 && distance < 0.25){
    console.log(""Beep! Beep!"");
}else if(distance>= 0.25 && distance < 0.5){
    console.log(""Beep!"");
}else{
    console.log('')
}
}
}
}};"
M0qpkwsq,CFrame Walkspeed | TESTING,BloxScript_Hub,Lua,Friday 7th of July 2023 08:29:13 AM CDT,"local WALK_SPEED = 185 -- Adjust the walk speed as desired

local character = script.Parent
if not character or not character:IsA(""Model"") or not character:FindFirstChild(""Humanoid"") then
	return
end

-- Variables
local userInputService = game:GetService(""UserInputService"")
local moveDirection = Vector3.new()

-- Function to handle the user input
local function handleInput(input, isKeyDown)
	if input.KeyCode == Enum.KeyCode.W then
		moveDirection = Vector3.new(0, 0, -1)
	elseif input.KeyCode == Enum.KeyCode.A then
		moveDirection = Vector3.new(-1, 0, 0)
	elseif input.KeyCode == Enum.KeyCode.S then
		moveDirection = Vector3.new(0, 0, 1)
	elseif input.KeyCode == Enum.KeyCode.D then
		moveDirection = Vector3.new(1, 0, 0)
	end

	character.Humanoid.WalkSpeed = isKeyDown and WALK_SPEED or 0

	character.Humanoid:MoveTo(character.HumanoidRootPart.Position + moveDirection)
end

userInputService.InputBegan:Connect(function(input)
	if input.KeyCode == Enum.KeyCode.W or input.KeyCode == Enum.KeyCode.A or
		input.KeyCode == Enum.KeyCode.S or input.KeyCode == Enum.KeyCode.D then
		handleInput(input, true)
	end
end)

userInputService.InputEnded:Connect(function(input)
	if input.KeyCode == Enum.KeyCode.W or input.KeyCode == Enum.KeyCode.A or
		input.KeyCode == Enum.KeyCode.S or input.KeyCode == Enum.KeyCode.D then
		handleInput(input, false)
	end
end)
"
1h9eanjK,TEST,Savelyev_Vyacheslav,JavaScript,Friday 7th of July 2023 08:10:51 AM CDT,"/**
* Написать функцию sostavChisla(massivChisel: number[], chislo: number), 
  которая бы находила все возможные комбинации чисел из massivChisel, 
  сумма которых равна chislo. При этом:
  1) massivChisel содержит, только уникальные положительные числа (> 0)
  2) в комбинации не должно быть повторений чисел
  3) все комбинации должны быть уникальными
  
  Для проверки работоспособности функции запустить runTests()
  
  @param massivChisel: number[]
  @param chislo: number[]
  @return Array<Array<number>>
*/


massivChisel = [1, 2, 3, 4];
function permutation(massivChisel) {
    if (massivChisel.length > 1) {
        var firstElement = massivChisel[0];
        var returnedArray = permutation(massivChisel.slice(1));
        var permutedArray = [];
        var temporaryArray = [];
        elementLength = returnedArray[0].length;
        for (var i = 0; i < returnedArray.length; i++)
            for (var j = 0; j <= elementLength; j++) {
                temporaryArray = returnedArray[i].slice(0);
                temporaryArray.splice(j, 0, firstElement);
                permutedArray.push(temporaryArray);
            }
        return permutedArray;
    } else {
        return [massivChisel];
    }
}


function getArrayByConditionSUM(massivChisel, NUM) {
    retArray = '';
    while (massivChisel.length) {
        if ( massivChisel.reduce((partialSum, a) => partialSum + a, 0) === NUM ) {
            const templateArray = [...massivChisel];
            retArray += templateArray.sort().join("","") + "";""
        }
        massivChisel.pop()
    }
    return retArray;
}

massivChisel = [1,2,3,4];
NUM = 3;


function getArrayByConditionUNIQUE(massivChisel, NUM) {
    arrayS = permutation(massivChisel)
    retArray = '';
    arrayS.forEach(element => {  retArray += getArrayByConditionSUM(element, NUM)  });
    notUniqStringValue = retArray.slice(0, -1).split("";"");
    uniqueStringValue = [...new Set(notUniqStringValue)];
    return uniqueStringValue;
}

getArrayByConditionUNIQUE(massivChisel, NUM) "
HYJKPDtM,Untitled,naitgacem,Java,Friday 7th of July 2023 08:05:44 AM CDT,"
        if (leftNode == null && rightNode == null) {
            // has one child
            transplant(parentNode, nodeToDelete, null);

        } else if (rightNode != null && leftNode == null) {
            transplant(parentNode, nodeToDelete, rightNode);

        } else if (leftNode != null && rightNode == null) {
            transplant(parentNode, nodeToDelete, leftNode);

        } else {
            // has two children
            Node succNode = findSuccessor(nodeToDelete);
            if (succNode == nodeToDelete.rightNode) {
                succNode.leftNode = nodeToDelete.leftNode;
                transplant(parentNode, nodeToDelete, succNode);

            } else {
                succNode.parentNode.leftNode = succNode.leftNode;
                nodeToDelete.data = succNode.data;
            }
        }
        return;
    }

    private void transplant(Node parent, Node nodeToDelete, Node value) {
        if (parent.rightNode == nodeToDelete) {
            parent.rightNode = value;
        } else {
            parent.leftNode = value;
        }
        return;
    }
"
