id,title,username,language,date,content
53AHf7pr,awrnbestndy,gadungw71,PHP,Monday 15th of May 2023 01:10:11 PM CDT,"https://vk.com/@piscesarya-assistir-velozes-e-furiosos-10-dublado-online-e-legendado-em
https://vk.com/@optimummm-assista-velozes-e-furiosos-10-fast-x-2023-filme-completo
https://sites.google.com/ptimetech.com/assistirvelozesefuriosos10dubl/home
https://sites.google.com/ptimetech.com/assistirvelozesefuriosos10/home
https://sites.google.com/smkhidayatulmubtadiin.my.id/assistirvelocidadefuriosaxfilm/home
https://sites.google.com/smkhidayatulmubtadiin.my.id/hd-assistirfilmevelocidadefuri/home
https://soundcloud.com/guoxaa-liivuq/velozes-e-furiosos-10-2023-filme-completo-e-legendado-online
https://soundcloud.com/guoxaa-liivuq/assistir-hd-velozes-e-furiosos-10-filme-completo-em-portugues
https://bbs.vivo.com/in/thread/55347?t=1684169454234
https://community.oppo.com/thread/1331690864707108873
https://community.oneplus.com/thread/1331692490184458240
https://community.oneplus.com/thread/1331695343561080834
https://bbs.vivo.com/in/thread/55453?t=1684170527199
https://soundcloud.com/orang-bourueng/assistir-velocidade-furiosa-x-2023-filme-completo-dublado-em-portugues
https://backlinktool.io/p/ZZzXHlprf3l0xnw5Bn0m.html
https://tech.io/snippet/ZaxBTi8
https://ide.geeksforgeeks.org/online-php-compiler/49c34c7c-3b11-40b5-ac70-131f61bf8ada
https://paste.awesom.eu/aerbestnd/nRZv
https://rextester.com/JWGCSQ82577
https://onlinegdb.com/7dxo7u9VI
https://dotnetfiddle.net/0zYXYR
https://pasteio.com/xA9uAs911ASr
https://paste.mozilla.org/tJrZUyE8
https://homment.com/c7Tbdqig2qvgZESm3Npu
https://paste.feed-the-beast.com/view/8c5e28a3
https://notes.io/qVmUr
https://jsitor.com/Hqwqz3l54
https://pastehere.xyz/gJLqeboD3/"
1e6mhrfg,Anime Rising Fighting,LuaXe,Lua,Monday 15th of May 2023 01:05:00 PM CDT,"function C() spawn(function () while getgenv().C do local args = {[1] = ""Punch""} game:GetService(""ReplicatedStorage"").Server:FireServer(unpack(args)) wait() end end) end
function E() spawn(function () while getgenv().E do local args = {[1] = ""Essence""} game:GetService(""ReplicatedStorage"").Server:FireServer(unpack(args)) wait(10) end end) end
function U() spawn(function () while getgenv().U do
local args = {[1] = ""Upgrade"",[2] = ""Power""}game:GetService(""ReplicatedStorage"").Server:FireServer(unpack(args)) wait()
local args = {[1] = ""Upgrade"",[2] = ""Coin""}game:GetService(""ReplicatedStorage"").Server:FireServer(unpack(args)) wait()
local args = {[1] = ""Upgrade"",[2] = ""Inventory""}game:GetService(""ReplicatedStorage"").Server:FireServer(unpack(args)) wait()
end end) end

local library = loadstring(game:HttpGet(('https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/wall%20v3')))()

local w = library:CreateWindow(""Anime Rising Fighting"")

local b = w:CreateFolder(""Main"")

b:Button(""TP To The Game"",function() game:GetService(""TeleportService""):Teleport(11978447465) end)

b:Toggle(""Inf. Energy"",function(val)
getgenv().C = val
C()
end)

b:Toggle(""Essence"",function(val)
getgenv().E = val
E()
end)

b:Toggle(""Upgrade"",function(val)
getgenv().U = val
U()
end)

b:Label(""Made by X_LuaF#0705"",{TextSize = 21; TextColor = Color3.fromRGB(255,255,255); BgColor = Color3.fromRGB(38, 38, 38);})

local w = library:CreateWindow(""LocalPlayer"")

local b = w:CreateFolder(""LP"")

b:DestroyGui()

b:Button(""Copy Discord Invite"",function() setclipboard(""workink.co/2GQ/LTD"") end)
b:Button(""Full Version"",function() loadstring(game:HttpGet(""https://pastebin.com/raw/GphZf9Xe"", true))() end)
b:Button(""Rejoin"",function() loadstring(game:HttpGet(""https://pastebin.com/raw/mM7JBG5h"", true))() end)
b:Button(""Reset"",function() loadstring(game:HttpGet(""https://pastebin.com/raw/EEY6SATj"", true))() end)

b:Box(""Speed"",""number"",function(val) S = val end)
b:Box(""Jump"",""number"",function(val) J = val end)
b:Box(""Hip Height"",""number"",function(val) H = val end)
b:Box(""Gravity"",""number"",function(val) G = val end)
 
b:Toggle(""Speed"",function(bool) getgenv().Speed = bool Speed(S) end)
b:Toggle(""Jump"",function(bool) getgenv().Jump = bool Jump(J) end)
b:Toggle(""Hip Height"",function(bool) getgenv().Hip = bool Hip(H) end)
b:Toggle(""Gravity"",function(bool) getgenv().Grav = bool Grav(G) end)
 
b:Slider(""FOV (Default is 70)"",{min = 0;max = 120;precise = true;},function(val) game.workspace.CurrentCamera.FieldOfView = val end)

function TPCFrame(Player_CFrame) if game.Players.LocalPlayer.Character:FindFirstChild(""HumanoidRootPart"") then game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Player_CFrame.CFrame end end
function TPVector3(Player_Position) game.Players.LocalPlayer.Character.HumanoidRootPart.Position = Player_Position.Position end
function PHP(Player_HP) game.Players.LocalPlayer.Character.Humanoid.Health = Player_HP end

function Chat(Mes, Freq) spawn(function () while getgenv().Chat do local args = {[1] = Mes,[2] = ""All""} game:GetService(""ReplicatedStorage"").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(unpack(args)) wait(Freq) end end) end
function Speed(Nume) spawn(function () if getgenv().Speed then while getgenv().Speed do game:GetService(""Players"").LocalPlayer.Character.Humanoid.WalkSpeed = Nume wait() end elseif getgenv().Speed == false then game:GetService(""Players"").LocalPlayer.Character.Humanoid.WalkSpeed = 16 end end) end
function Jump(Nume) spawn(function () if getgenv().Jump then while getgenv().Jump do game:GetService(""Players"").LocalPlayer.Character.Humanoid.JumpPower = Nume wait() end elseif getgenv().Jump == false then game:GetService(""Players"").LocalPlayer.Character.Humanoid.JumpPower = 50 end end) end
function Hip(Nume) spawn(function () if getgenv().Hip then while getgenv().Hip do game:GetService(""Players"").LocalPlayer.Character.Humanoid.HipHeight = Nume wait() end elseif getgenv().Hip == false then game:GetService(""Players"").LocalPlayer.Character.Humanoid.HipHeight = 0.1 end end) end
function Grav(Nume) spawn(function () if getgenv().Grav then while getgenv().Grav do game:GetService(""Workspace"").Gravity = Nume wait() end elseif getgenv().Grav == false then game:GetService(""Workspace"").Gravity = 196.2 end end) end"
Pm6R2uEc,Д. М. Златопольский (10.3.),ULK,C++,Monday 15th of May 2023 01:00:24 PM CDT,"//с функцией max
#include <iostream>
using namespace std;

int max(int m, int n) {
    if (m > n) {
        return m;
    }
    else {
        return n;
    }
}

int main()
{
    int a, b, z;
    cout << ""Enter the numbers a & b: \n"";
    cin >> a >> b;

   

    z = max(a, 2 * b) * max(2*a-b,b);
    cout << ""Number z = "" << z;
}"
ttdB1cmR,Д. М. Златопольский (10.3.),ULK,C++,Monday 15th of May 2023 12:55:55 PM CDT,"//без функции max
#include <iostream>
using namespace std;

int main()
{
    int a, b, z;
    int max1, max2;
    cout << ""Enter the numbers a & b: \n"";
    cin >> a >> b;

    if (a > 2 * b) {
        max1 = a;
    }
    else {
        max1 = 2 * b;
    }

    if (2*a-b > b) {
        max2 = 2 * a - b;
    }
    else {
        max2 = b;
    }

    z = max1 * max2;
    cout << ""Number z = "" << z;
}"
jCMavqib,CAPS,George_Zagorsky_1,Python,Monday 15th of May 2023 12:55:02 PM CDT,"import datetime


class Array:

    def __init__(self, arr=None):
        if arr is None:
            self.arr = []
        else:
            if isinstance(arr, list):
                self.arr = arr
            else:
                raise Exception

    def __str__(self):
        return f""list is {self.arr}""

    def __call__(self, *args, **kwargs):
        return ""Function called""

    def plus_one(self):
        self.arr = [x + 1 for x in self.arr]

    def get(self):
        return self.arr


class Decor_2:

    def __init__(self, func):
        self.func = func

    def __call__(self, *args, **kwargs):
        print(f""Function call used"")
        return self.func(*args, *kwargs)


class Decorator:

    def __init__(self, function=None):
        self.func = function

    @Decor_2
    def __call__(self, *args, **kwargs):
        try:
            res = self.func(*args)
            return res
        except Exception as e:
            print(f""Mistake {e}"")
        finally:
            return f""Function call worked without mistakes""

    def time(self):
        pass


def timer(function):
    @cache
    def wrapper(*args, **kwargs):
        now = datetime.datetime.now()
        res = function(*args, **kwargs)
        print(datetime.datetime.now() - now)
        return res

    return wrapper


def cache(function):
    def wrapper(*args, **kwargs):
        return function.__sizeof__()

    return wrapper


@Decorator
def function(a, b):
    return a + b


class Human:
    def __init__(self, age, name):
        self.age = age
        self.name = name

    def __str__(self):
        return f""User with name {self._name} and age {self.age}""

    @property
    def name(self):
        return self._name

    @name.setter
    def name(self, value):
        self._name = value



man = Human(23, 'Valera')
man.name = ""Jora""
print(man.name)
"
XRghPYUv,Nigerian scammers [15-5-2/2023],bombaires,HTML,Monday 15th of May 2023 12:40:49 PM CDT,"<a href=""mailto:keystoneb.jeffwilkinson@gmail.com"">keystoneb.jeffwilkinson@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+26000@gmail.com"">keystoneb.jeffwilkinson+26000@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+15688@gmail.com"">keystoneb.jeffwilkinson+15688@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+21242@gmail.com"">keystoneb.jeffwilkinson+21242@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+13442@gmail.com"">keystoneb.jeffwilkinson+13442@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+31925@gmail.com"">keystoneb.jeffwilkinson+31925@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+9125@gmail.com"">keystoneb.jeffwilkinson+9125@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+1630@gmail.com"">keystoneb.jeffwilkinson+1630@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+5349@gmail.com"">keystoneb.jeffwilkinson+5349@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+14637@gmail.com"">keystoneb.jeffwilkinson+14637@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+14601@gmail.com"">keystoneb.jeffwilkinson+14601@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+10047@gmail.com"">keystoneb.jeffwilkinson+10047@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+17213@gmail.com"">keystoneb.jeffwilkinson+17213@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+18179@gmail.com"">keystoneb.jeffwilkinson+18179@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+17513@gmail.com"">keystoneb.jeffwilkinson+17513@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+6208@gmail.com"">keystoneb.jeffwilkinson+6208@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+15112@gmail.com"">keystoneb.jeffwilkinson+15112@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+23541@gmail.com"">keystoneb.jeffwilkinson+23541@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+7063@gmail.com"">keystoneb.jeffwilkinson+7063@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+3420@gmail.com"">keystoneb.jeffwilkinson+3420@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+9307@gmail.com"">keystoneb.jeffwilkinson+9307@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+4005@gmail.com"">keystoneb.jeffwilkinson+4005@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+16256@gmail.com"">keystoneb.jeffwilkinson+16256@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+16127@gmail.com"">keystoneb.jeffwilkinson+16127@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+3403@gmail.com"">keystoneb.jeffwilkinson+3403@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+3163@gmail.com"">keystoneb.jeffwilkinson+3163@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+5805@gmail.com"">keystoneb.jeffwilkinson+5805@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+14840@gmail.com"">keystoneb.jeffwilkinson+14840@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+24927@gmail.com"">keystoneb.jeffwilkinson+24927@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+12962@gmail.com"">keystoneb.jeffwilkinson+12962@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+27191@gmail.com"">keystoneb.jeffwilkinson+27191@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+3415@gmail.com"">keystoneb.jeffwilkinson+3415@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+14681@gmail.com"">keystoneb.jeffwilkinson+14681@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+1613@gmail.com"">keystoneb.jeffwilkinson+1613@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+17376@gmail.com"">keystoneb.jeffwilkinson+17376@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+9766@gmail.com"">keystoneb.jeffwilkinson+9766@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+24174@gmail.com"">keystoneb.jeffwilkinson+24174@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+19825@gmail.com"">keystoneb.jeffwilkinson+19825@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+504@gmail.com"">keystoneb.jeffwilkinson+504@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+7079@gmail.com"">keystoneb.jeffwilkinson+7079@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+3364@gmail.com"">keystoneb.jeffwilkinson+3364@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+28925@gmail.com"">keystoneb.jeffwilkinson+28925@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+27155@gmail.com"">keystoneb.jeffwilkinson+27155@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+1920@gmail.com"">keystoneb.jeffwilkinson+1920@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+6298@gmail.com"">keystoneb.jeffwilkinson+6298@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+30298@gmail.com"">keystoneb.jeffwilkinson+30298@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+16162@gmail.com"">keystoneb.jeffwilkinson+16162@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+14392@gmail.com"">keystoneb.jeffwilkinson+14392@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+3879@gmail.com"">keystoneb.jeffwilkinson+3879@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+18469@gmail.com"">keystoneb.jeffwilkinson+18469@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+19589@gmail.com"">keystoneb.jeffwilkinson+19589@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+30541@gmail.com"">keystoneb.jeffwilkinson+30541@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+27073@gmail.com"">keystoneb.jeffwilkinson+27073@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+25602@gmail.com"">keystoneb.jeffwilkinson+25602@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+20470@gmail.com"">keystoneb.jeffwilkinson+20470@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+30383@gmail.com"">keystoneb.jeffwilkinson+30383@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+12848@gmail.com"">keystoneb.jeffwilkinson+12848@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+22235@gmail.com"">keystoneb.jeffwilkinson+22235@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+11017@gmail.com"">keystoneb.jeffwilkinson+11017@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+22850@gmail.com"">keystoneb.jeffwilkinson+22850@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+31799@gmail.com"">keystoneb.jeffwilkinson+31799@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+30990@gmail.com"">keystoneb.jeffwilkinson+30990@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+13425@gmail.com"">keystoneb.jeffwilkinson+13425@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+21196@gmail.com"">keystoneb.jeffwilkinson+21196@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+19868@gmail.com"">keystoneb.jeffwilkinson+19868@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+18717@gmail.com"">keystoneb.jeffwilkinson+18717@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+17635@gmail.com"">keystoneb.jeffwilkinson+17635@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+8437@gmail.com"">keystoneb.jeffwilkinson+8437@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+24549@gmail.com"">keystoneb.jeffwilkinson+24549@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+10468@gmail.com"">keystoneb.jeffwilkinson+10468@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+32641@gmail.com"">keystoneb.jeffwilkinson+32641@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+8273@gmail.com"">keystoneb.jeffwilkinson+8273@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+23356@gmail.com"">keystoneb.jeffwilkinson+23356@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+28913@gmail.com"">keystoneb.jeffwilkinson+28913@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+15711@gmail.com"">keystoneb.jeffwilkinson+15711@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+20260@gmail.com"">keystoneb.jeffwilkinson+20260@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+13493@gmail.com"">keystoneb.jeffwilkinson+13493@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+7138@gmail.com"">keystoneb.jeffwilkinson+7138@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+28282@gmail.com"">keystoneb.jeffwilkinson+28282@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+25377@gmail.com"">keystoneb.jeffwilkinson+25377@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+20020@gmail.com"">keystoneb.jeffwilkinson+20020@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+30443@gmail.com"">keystoneb.jeffwilkinson+30443@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+25482@gmail.com"">keystoneb.jeffwilkinson+25482@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+20429@gmail.com"">keystoneb.jeffwilkinson+20429@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+16596@gmail.com"">keystoneb.jeffwilkinson+16596@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+15285@gmail.com"">keystoneb.jeffwilkinson+15285@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+8851@gmail.com"">keystoneb.jeffwilkinson+8851@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+13901@gmail.com"">keystoneb.jeffwilkinson+13901@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+22315@gmail.com"">keystoneb.jeffwilkinson+22315@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+3049@gmail.com"">keystoneb.jeffwilkinson+3049@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+25369@gmail.com"">keystoneb.jeffwilkinson+25369@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+31927@gmail.com"">keystoneb.jeffwilkinson+31927@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+31578@gmail.com"">keystoneb.jeffwilkinson+31578@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+29621@gmail.com"">keystoneb.jeffwilkinson+29621@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+17689@gmail.com"">keystoneb.jeffwilkinson+17689@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+31429@gmail.com"">keystoneb.jeffwilkinson+31429@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+30181@gmail.com"">keystoneb.jeffwilkinson+30181@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+16730@gmail.com"">keystoneb.jeffwilkinson+16730@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+2505@gmail.com"">keystoneb.jeffwilkinson+2505@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+24207@gmail.com"">keystoneb.jeffwilkinson+24207@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+9168@gmail.com"">keystoneb.jeffwilkinson+9168@gmail.com</a>
<a href=""mailto:madamoksanaslavic@gmail.com"">madamoksanaslavic@gmail.com</a>
<a href=""mailto:madamoksanaslavic+15641@gmail.com"">madamoksanaslavic+15641@gmail.com</a>
<a href=""mailto:madamoksanaslavic+11542@gmail.com"">madamoksanaslavic+11542@gmail.com</a>
<a href=""mailto:madamoksanaslavic+20306@gmail.com"">madamoksanaslavic+20306@gmail.com</a>
<a href=""mailto:madamoksanaslavic+15706@gmail.com"">madamoksanaslavic+15706@gmail.com</a>
<a href=""mailto:madamoksanaslavic+2772@gmail.com"">madamoksanaslavic+2772@gmail.com</a>
<a href=""mailto:madamoksanaslavic+26722@gmail.com"">madamoksanaslavic+26722@gmail.com</a>
<a href=""mailto:madamoksanaslavic+4292@gmail.com"">madamoksanaslavic+4292@gmail.com</a>
<a href=""mailto:madamoksanaslavic+4086@gmail.com"">madamoksanaslavic+4086@gmail.com</a>
<a href=""mailto:madamoksanaslavic+30021@gmail.com"">madamoksanaslavic+30021@gmail.com</a>
<a href=""mailto:madamoksanaslavic+24231@gmail.com"">madamoksanaslavic+24231@gmail.com</a>
<a href=""mailto:madamoksanaslavic+24961@gmail.com"">madamoksanaslavic+24961@gmail.com</a>
<a href=""mailto:madamoksanaslavic+20578@gmail.com"">madamoksanaslavic+20578@gmail.com</a>
<a href=""mailto:madamoksanaslavic+31296@gmail.com"">madamoksanaslavic+31296@gmail.com</a>
<a href=""mailto:madamoksanaslavic+23552@gmail.com"">madamoksanaslavic+23552@gmail.com</a>
<a href=""mailto:madamoksanaslavic+3940@gmail.com"">madamoksanaslavic+3940@gmail.com</a>
<a href=""mailto:madamoksanaslavic+23333@gmail.com"">madamoksanaslavic+23333@gmail.com</a>
<a href=""mailto:madamoksanaslavic+5780@gmail.com"">madamoksanaslavic+5780@gmail.com</a>
<a href=""mailto:madamoksanaslavic+20178@gmail.com"">madamoksanaslavic+20178@gmail.com</a>
<a href=""mailto:madamoksanaslavic+26539@gmail.com"">madamoksanaslavic+26539@gmail.com</a>
<a href=""mailto:madamoksanaslavic+10380@gmail.com"">madamoksanaslavic+10380@gmail.com</a>
<a href=""mailto:madamoksanaslavic+6747@gmail.com"">madamoksanaslavic+6747@gmail.com</a>
<a href=""mailto:madamoksanaslavic+31919@gmail.com"">madamoksanaslavic+31919@gmail.com</a>
<a href=""mailto:madamoksanaslavic+28322@gmail.com"">madamoksanaslavic+28322@gmail.com</a>
<a href=""mailto:madamoksanaslavic+20444@gmail.com"">madamoksanaslavic+20444@gmail.com</a>
<a href=""mailto:madamoksanaslavic+22792@gmail.com"">madamoksanaslavic+22792@gmail.com</a>
<a href=""mailto:madamoksanaslavic+27193@gmail.com"">madamoksanaslavic+27193@gmail.com</a>
<a href=""mailto:madamoksanaslavic+659@gmail.com"">madamoksanaslavic+659@gmail.com</a>
<a href=""mailto:madamoksanaslavic+24059@gmail.com"">madamoksanaslavic+24059@gmail.com</a>
<a href=""mailto:madamoksanaslavic+10474@gmail.com"">madamoksanaslavic+10474@gmail.com</a>
<a href=""mailto:madamoksanaslavic+22607@gmail.com"">madamoksanaslavic+22607@gmail.com</a>
<a href=""mailto:madamoksanaslavic+13373@gmail.com"">madamoksanaslavic+13373@gmail.com</a>
<a href=""mailto:madamoksanaslavic+22318@gmail.com"">madamoksanaslavic+22318@gmail.com</a>
<a href=""mailto:madamoksanaslavic+22554@gmail.com"">madamoksanaslavic+22554@gmail.com</a>
<a href=""mailto:madamoksanaslavic+2165@gmail.com"">madamoksanaslavic+2165@gmail.com</a>
<a href=""mailto:madamoksanaslavic+10607@gmail.com"">madamoksanaslavic+10607@gmail.com</a>
<a href=""mailto:madamoksanaslavic+1823@gmail.com"">madamoksanaslavic+1823@gmail.com</a>
<a href=""mailto:madamoksanaslavic+15315@gmail.com"">madamoksanaslavic+15315@gmail.com</a>
<a href=""mailto:madamoksanaslavic+2150@gmail.com"">madamoksanaslavic+2150@gmail.com</a>
<a href=""mailto:madamoksanaslavic+24920@gmail.com"">madamoksanaslavic+24920@gmail.com</a>
<a href=""mailto:madamoksanaslavic+1940@gmail.com"">madamoksanaslavic+1940@gmail.com</a>
<a href=""mailto:madamoksanaslavic+27489@gmail.com"">madamoksanaslavic+27489@gmail.com</a>
<a href=""mailto:madamoksanaslavic+913@gmail.com"">madamoksanaslavic+913@gmail.com</a>
<a href=""mailto:madamoksanaslavic+16275@gmail.com"">madamoksanaslavic+16275@gmail.com</a>
<a href=""mailto:madamoksanaslavic+27974@gmail.com"">madamoksanaslavic+27974@gmail.com</a>
<a href=""mailto:madamoksanaslavic+1523@gmail.com"">madamoksanaslavic+1523@gmail.com</a>
<a href=""mailto:madamoksanaslavic+4016@gmail.com"">madamoksanaslavic+4016@gmail.com</a>
<a href=""mailto:madamoksanaslavic+14266@gmail.com"">madamoksanaslavic+14266@gmail.com</a>
<a href=""mailto:madamoksanaslavic+2384@gmail.com"">madamoksanaslavic+2384@gmail.com</a>
<a href=""mailto:madamoksanaslavic+3077@gmail.com"">madamoksanaslavic+3077@gmail.com</a>
<a href=""mailto:madamoksanaslavic+1880@gmail.com"">madamoksanaslavic+1880@gmail.com</a>
<a href=""mailto:madamoksanaslavic+1027@gmail.com"">madamoksanaslavic+1027@gmail.com</a>
<a href=""mailto:madamoksanaslavic+19907@gmail.com"">madamoksanaslavic+19907@gmail.com</a>
<a href=""mailto:madamoksanaslavic+23699@gmail.com"">madamoksanaslavic+23699@gmail.com</a>
<a href=""mailto:madamoksanaslavic+8539@gmail.com"">madamoksanaslavic+8539@gmail.com</a>
<a href=""mailto:madamoksanaslavic+24414@gmail.com"">madamoksanaslavic+24414@gmail.com</a>
<a href=""mailto:madamoksanaslavic+23123@gmail.com"">madamoksanaslavic+23123@gmail.com</a>
<a href=""mailto:madamoksanaslavic+28500@gmail.com"">madamoksanaslavic+28500@gmail.com</a>
<a href=""mailto:madamoksanaslavic+13518@gmail.com"">madamoksanaslavic+13518@gmail.com</a>
<a href=""mailto:madamoksanaslavic+10057@gmail.com"">madamoksanaslavic+10057@gmail.com</a>
<a href=""mailto:madamoksanaslavic+14306@gmail.com"">madamoksanaslavic+14306@gmail.com</a>
<a href=""mailto:madamoksanaslavic+22128@gmail.com"">madamoksanaslavic+22128@gmail.com</a>
<a href=""mailto:madamoksanaslavic+9922@gmail.com"">madamoksanaslavic+9922@gmail.com</a>
<a href=""mailto:madamoksanaslavic+20336@gmail.com"">madamoksanaslavic+20336@gmail.com</a>
<a href=""mailto:madamoksanaslavic+27452@gmail.com"">madamoksanaslavic+27452@gmail.com</a>
<a href=""mailto:madamoksanaslavic+3772@gmail.com"">madamoksanaslavic+3772@gmail.com</a>
<a href=""mailto:madamoksanaslavic+13290@gmail.com"">madamoksanaslavic+13290@gmail.com</a>
<a href=""mailto:madamoksanaslavic+19483@gmail.com"">madamoksanaslavic+19483@gmail.com</a>
<a href=""mailto:madamoksanaslavic+7253@gmail.com"">madamoksanaslavic+7253@gmail.com</a>
<a href=""mailto:madamoksanaslavic+10773@gmail.com"">madamoksanaslavic+10773@gmail.com</a>
<a href=""mailto:madamoksanaslavic+21604@gmail.com"">madamoksanaslavic+21604@gmail.com</a>
<a href=""mailto:madamoksanaslavic+27051@gmail.com"">madamoksanaslavic+27051@gmail.com</a>
<a href=""mailto:madamoksanaslavic+25342@gmail.com"">madamoksanaslavic+25342@gmail.com</a>
<a href=""mailto:madamoksanaslavic+16108@gmail.com"">madamoksanaslavic+16108@gmail.com</a>
<a href=""mailto:madamoksanaslavic+27369@gmail.com"">madamoksanaslavic+27369@gmail.com</a>
<a href=""mailto:madamoksanaslavic+32273@gmail.com"">madamoksanaslavic+32273@gmail.com</a>
<a href=""mailto:madamoksanaslavic+11134@gmail.com"">madamoksanaslavic+11134@gmail.com</a>
<a href=""mailto:madamoksanaslavic+4035@gmail.com"">madamoksanaslavic+4035@gmail.com</a>
<a href=""mailto:madamoksanaslavic+13774@gmail.com"">madamoksanaslavic+13774@gmail.com</a>
<a href=""mailto:madamoksanaslavic+2501@gmail.com"">madamoksanaslavic+2501@gmail.com</a>
<a href=""mailto:madamoksanaslavic+7174@gmail.com"">madamoksanaslavic+7174@gmail.com</a>
<a href=""mailto:madamoksanaslavic+24427@gmail.com"">madamoksanaslavic+24427@gmail.com</a>
<a href=""mailto:madamoksanaslavic+15700@gmail.com"">madamoksanaslavic+15700@gmail.com</a>
<a href=""mailto:madamoksanaslavic+9565@gmail.com"">madamoksanaslavic+9565@gmail.com</a>
<a href=""mailto:madamoksanaslavic+5444@gmail.com"">madamoksanaslavic+5444@gmail.com</a>
<a href=""mailto:madamoksanaslavic+17204@gmail.com"">madamoksanaslavic+17204@gmail.com</a>
<a href=""mailto:madamoksanaslavic+7712@gmail.com"">madamoksanaslavic+7712@gmail.com</a>
<a href=""mailto:madamoksanaslavic+31241@gmail.com"">madamoksanaslavic+31241@gmail.com</a>
<a href=""mailto:madamoksanaslavic+4746@gmail.com"">madamoksanaslavic+4746@gmail.com</a>
<a href=""mailto:madamoksanaslavic+26643@gmail.com"">madamoksanaslavic+26643@gmail.com</a>
<a href=""mailto:madamoksanaslavic+2153@gmail.com"">madamoksanaslavic+2153@gmail.com</a>
<a href=""mailto:madamoksanaslavic+6572@gmail.com"">madamoksanaslavic+6572@gmail.com</a>
<a href=""mailto:madamoksanaslavic+24310@gmail.com"">madamoksanaslavic+24310@gmail.com</a>
<a href=""mailto:madamoksanaslavic+29042@gmail.com"">madamoksanaslavic+29042@gmail.com</a>
<a href=""mailto:madamoksanaslavic+14920@gmail.com"">madamoksanaslavic+14920@gmail.com</a>
<a href=""mailto:madamoksanaslavic+7616@gmail.com"">madamoksanaslavic+7616@gmail.com</a>
<a href=""mailto:madamoksanaslavic+27923@gmail.com"">madamoksanaslavic+27923@gmail.com</a>
<a href=""mailto:madamoksanaslavic+5046@gmail.com"">madamoksanaslavic+5046@gmail.com</a>
<a href=""mailto:madamoksanaslavic+28970@gmail.com"">madamoksanaslavic+28970@gmail.com</a>
<a href=""mailto:madamoksanaslavic+6204@gmail.com"">madamoksanaslavic+6204@gmail.com</a>
<a href=""mailto:madamoksanaslavic+16262@gmail.com"">madamoksanaslavic+16262@gmail.com</a>
<a href=""mailto:agentvictorokle@gmail.com"">agentvictorokle@gmail.com</a>
<a href=""mailto:agentvictorokle+21422@gmail.com"">agentvictorokle+21422@gmail.com</a>
<a href=""mailto:agentvictorokle+11852@gmail.com"">agentvictorokle+11852@gmail.com</a>
<a href=""mailto:agentvictorokle+18623@gmail.com"">agentvictorokle+18623@gmail.com</a>
<a href=""mailto:agentvictorokle+24950@gmail.com"">agentvictorokle+24950@gmail.com</a>
<a href=""mailto:agentvictorokle+4337@gmail.com"">agentvictorokle+4337@gmail.com</a>
<a href=""mailto:agentvictorokle+23937@gmail.com"">agentvictorokle+23937@gmail.com</a>
<a href=""mailto:agentvictorokle+6693@gmail.com"">agentvictorokle+6693@gmail.com</a>
<a href=""mailto:agentvictorokle+1655@gmail.com"">agentvictorokle+1655@gmail.com</a>
<a href=""mailto:agentvictorokle+5591@gmail.com"">agentvictorokle+5591@gmail.com</a>
<a href=""mailto:agentvictorokle+23332@gmail.com"">agentvictorokle+23332@gmail.com</a>
<a href=""mailto:agentvictorokle+16176@gmail.com"">agentvictorokle+16176@gmail.com</a>
<a href=""mailto:agentvictorokle+23826@gmail.com"">agentvictorokle+23826@gmail.com</a>
<a href=""mailto:agentvictorokle+17398@gmail.com"">agentvictorokle+17398@gmail.com</a>
<a href=""mailto:agentvictorokle+4900@gmail.com"">agentvictorokle+4900@gmail.com</a>
<a href=""mailto:agentvictorokle+588@gmail.com"">agentvictorokle+588@gmail.com</a>
<a href=""mailto:agentvictorokle+948@gmail.com"">agentvictorokle+948@gmail.com</a>
<a href=""mailto:agentvictorokle+18501@gmail.com"">agentvictorokle+18501@gmail.com</a>
<a href=""mailto:agentvictorokle+31289@gmail.com"">agentvictorokle+31289@gmail.com</a>
<a href=""mailto:agentvictorokle+27401@gmail.com"">agentvictorokle+27401@gmail.com</a>
<a href=""mailto:agentvictorokle+8041@gmail.com"">agentvictorokle+8041@gmail.com</a>
<a href=""mailto:agentvictorokle+8950@gmail.com"">agentvictorokle+8950@gmail.com</a>
<a href=""mailto:agentvictorokle+19315@gmail.com"">agentvictorokle+19315@gmail.com</a>
<a href=""mailto:agentvictorokle+9364@gmail.com"">agentvictorokle+9364@gmail.com</a>
<a href=""mailto:agentvictorokle+30348@gmail.com"">agentvictorokle+30348@gmail.com</a>
<a href=""mailto:agentvictorokle+17265@gmail.com"">agentvictorokle+17265@gmail.com</a>
<a href=""mailto:agentvictorokle+10080@gmail.com"">agentvictorokle+10080@gmail.com</a>
<a href=""mailto:agentvictorokle+2719@gmail.com"">agentvictorokle+2719@gmail.com</a>
<a href=""mailto:agentvictorokle+3288@gmail.com"">agentvictorokle+3288@gmail.com</a>
<a href=""mailto:agentvictorokle+11639@gmail.com"">agentvictorokle+11639@gmail.com</a>
<a href=""mailto:agentvictorokle+17683@gmail.com"">agentvictorokle+17683@gmail.com</a>
<a href=""mailto:agentvictorokle+6065@gmail.com"">agentvictorokle+6065@gmail.com</a>
<a href=""mailto:agentvictorokle+9821@gmail.com"">agentvictorokle+9821@gmail.com</a>
<a href=""mailto:agentvictorokle+26210@gmail.com"">agentvictorokle+26210@gmail.com</a>
<a href=""mailto:agentvictorokle+7223@gmail.com"">agentvictorokle+7223@gmail.com</a>
<a href=""mailto:agentvictorokle+26074@gmail.com"">agentvictorokle+26074@gmail.com</a>
<a href=""mailto:agentvictorokle+505@gmail.com"">agentvictorokle+505@gmail.com</a>
<a href=""mailto:agentvictorokle+19939@gmail.com"">agentvictorokle+19939@gmail.com</a>
<a href=""mailto:agentvictorokle+16292@gmail.com"">agentvictorokle+16292@gmail.com</a>
<a href=""mailto:agentvictorokle+24078@gmail.com"">agentvictorokle+24078@gmail.com</a>
<a href=""mailto:agentvictorokle+2909@gmail.com"">agentvictorokle+2909@gmail.com</a>
<a href=""mailto:agentvictorokle+18286@gmail.com"">agentvictorokle+18286@gmail.com</a>
<a href=""mailto:agentvictorokle+26670@gmail.com"">agentvictorokle+26670@gmail.com</a>
<a href=""mailto:agentvictorokle+13458@gmail.com"">agentvictorokle+13458@gmail.com</a>
<a href=""mailto:agentvictorokle+1094@gmail.com"">agentvictorokle+1094@gmail.com</a>
<a href=""mailto:agentvictorokle+31375@gmail.com"">agentvictorokle+31375@gmail.com</a>
<a href=""mailto:agentvictorokle+9559@gmail.com"">agentvictorokle+9559@gmail.com</a>
<a href=""mailto:agentvictorokle+30214@gmail.com"">agentvictorokle+30214@gmail.com</a>
<a href=""mailto:agentvictorokle+29309@gmail.com"">agentvictorokle+29309@gmail.com</a>
<a href=""mailto:agentvictorokle+32099@gmail.com"">agentvictorokle+32099@gmail.com</a>
<a href=""mailto:agentvictorokle+15062@gmail.com"">agentvictorokle+15062@gmail.com</a>
<a href=""mailto:agentvictorokle+20815@gmail.com"">agentvictorokle+20815@gmail.com</a>
<a href=""mailto:agentvictorokle+9935@gmail.com"">agentvictorokle+9935@gmail.com</a>
<a href=""mailto:agentvictorokle+19244@gmail.com"">agentvictorokle+19244@gmail.com</a>
<a href=""mailto:agentvictorokle+10410@gmail.com"">agentvictorokle+10410@gmail.com</a>
<a href=""mailto:agentvictorokle+22278@gmail.com"">agentvictorokle+22278@gmail.com</a>
<a href=""mailto:agentvictorokle+686@gmail.com"">agentvictorokle+686@gmail.com</a>
<a href=""mailto:agentvictorokle+24089@gmail.com"">agentvictorokle+24089@gmail.com</a>
<a href=""mailto:agentvictorokle+4934@gmail.com"">agentvictorokle+4934@gmail.com</a>
<a href=""mailto:agentvictorokle+2735@gmail.com"">agentvictorokle+2735@gmail.com</a>
<a href=""mailto:agentvictorokle+2921@gmail.com"">agentvictorokle+2921@gmail.com</a>
<a href=""mailto:agentvictorokle+8665@gmail.com"">agentvictorokle+8665@gmail.com</a>
<a href=""mailto:agentvictorokle+10694@gmail.com"">agentvictorokle+10694@gmail.com</a>
<a href=""mailto:agentvictorokle+2137@gmail.com"">agentvictorokle+2137@gmail.com</a>
<a href=""mailto:agentvictorokle+30328@gmail.com"">agentvictorokle+30328@gmail.com</a>
<a href=""mailto:agentvictorokle+27424@gmail.com"">agentvictorokle+27424@gmail.com</a>
<a href=""mailto:agentvictorokle+19535@gmail.com"">agentvictorokle+19535@gmail.com</a>
<a href=""mailto:agentvictorokle+6760@gmail.com"">agentvictorokle+6760@gmail.com</a>
<a href=""mailto:agentvictorokle+27311@gmail.com"">agentvictorokle+27311@gmail.com</a>
<a href=""mailto:agentvictorokle+10332@gmail.com"">agentvictorokle+10332@gmail.com</a>
<a href=""mailto:agentvictorokle+16301@gmail.com"">agentvictorokle+16301@gmail.com</a>
<a href=""mailto:agentvictorokle+21094@gmail.com"">agentvictorokle+21094@gmail.com</a>
<a href=""mailto:agentvictorokle+12616@gmail.com"">agentvictorokle+12616@gmail.com</a>
<a href=""mailto:agentvictorokle+23809@gmail.com"">agentvictorokle+23809@gmail.com</a>
<a href=""mailto:agentvictorokle+28187@gmail.com"">agentvictorokle+28187@gmail.com</a>
<a href=""mailto:agentvictorokle+23393@gmail.com"">agentvictorokle+23393@gmail.com</a>
<a href=""mailto:agentvictorokle+8946@gmail.com"">agentvictorokle+8946@gmail.com</a>
<a href=""mailto:agentvictorokle+23717@gmail.com"">agentvictorokle+23717@gmail.com</a>
<a href=""mailto:agentvictorokle+29876@gmail.com"">agentvictorokle+29876@gmail.com</a>
<a href=""mailto:agentvictorokle+22698@gmail.com"">agentvictorokle+22698@gmail.com</a>
<a href=""mailto:agentvictorokle+2608@gmail.com"">agentvictorokle+2608@gmail.com</a>
<a href=""mailto:agentvictorokle+20002@gmail.com"">agentvictorokle+20002@gmail.com</a>
<a href=""mailto:agentvictorokle+25324@gmail.com"">agentvictorokle+25324@gmail.com</a>
<a href=""mailto:agentvictorokle+8937@gmail.com"">agentvictorokle+8937@gmail.com</a>
<a href=""mailto:agentvictorokle+17721@gmail.com"">agentvictorokle+17721@gmail.com</a>
<a href=""mailto:agentvictorokle+27173@gmail.com"">agentvictorokle+27173@gmail.com</a>
<a href=""mailto:agentvictorokle+16562@gmail.com"">agentvictorokle+16562@gmail.com</a>
<a href=""mailto:agentvictorokle+28817@gmail.com"">agentvictorokle+28817@gmail.com</a>
<a href=""mailto:agentvictorokle+1558@gmail.com"">agentvictorokle+1558@gmail.com</a>
<a href=""mailto:agentvictorokle+5265@gmail.com"">agentvictorokle+5265@gmail.com</a>
<a href=""mailto:agentvictorokle+3159@gmail.com"">agentvictorokle+3159@gmail.com</a>
<a href=""mailto:agentvictorokle+22602@gmail.com"">agentvictorokle+22602@gmail.com</a>
<a href=""mailto:agentvictorokle+1382@gmail.com"">agentvictorokle+1382@gmail.com</a>
<a href=""mailto:agentvictorokle+31666@gmail.com"">agentvictorokle+31666@gmail.com</a>
<a href=""mailto:agentvictorokle+2604@gmail.com"">agentvictorokle+2604@gmail.com</a>
<a href=""mailto:agentvictorokle+28023@gmail.com"">agentvictorokle+28023@gmail.com</a>
<a href=""mailto:agentvictorokle+11539@gmail.com"">agentvictorokle+11539@gmail.com</a>
<a href=""mailto:agentvictorokle+16586@gmail.com"">agentvictorokle+16586@gmail.com</a>
<a href=""mailto:agentvictorokle+22123@gmail.com"">agentvictorokle+22123@gmail.com</a>
<a href=""mailto:agentvictorokle+11334@gmail.com"">agentvictorokle+11334@gmail.com</a>
<a href=""mailto:agentvictorokle+25301@gmail.com"">agentvictorokle+25301@gmail.com</a>"
8nMBa551,BTC Wallet Credentials have been reset,penandabbl_47,GetText,Monday 15th of May 2023 12:26:33 PM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please disregard this message.
Your new login credentials will be 
taginestg:H9pz49 on 16.16.200.36(SSH)
Regards"
MHJwZh5D,Untitled,Mochinov,Python,Monday 15th of May 2023 12:08:22 PM CDT,"
    def update_input(self, file, input_type: str, validator) -> bool:

        if (
            instance := self.type_instance.get(input_type)
        ):
            repositories = self.repositories_instance.get(input_type)
            instance = instance.objects.filter(
                scenario=self.scenario,
                initial_file_name=input_type,
            ).first()

            if instance:
                instance.data_file = file
                instance.data_uploaded = True
                instance.save()
                data_frame = pd.read_csv(
                    instance.data_file.path,
                )
                data_frame.columns = repositories.get(""fields"")

                data_frame['id'] = [uuid.uuid4() for _ in range(len(data_frame.index))]
                data_frame[""scenario_id""] = data_frame['art_code_nm'].map(lambda _: self.scenario.id)
                # data_frame[""stock""] =  [int(data_frame['stock'][x]) for x in range(len(data_frame['stock'].index))]
                # print(len(data_frame['stock'].index), len(data_frame.index))
                if not data_frame.empty:
                    with get_session() as session:
                        data_creator = repositories.get(""creator"")(
                            session=session,
                            df=data_frame,
                            result_id=instance.id,
                        )
                        data_creator.execute()

                    return True

        return False
"
EppDYA99,controleur_temp.ino,noam76,Arduino,Monday 15th of May 2023 11:52:01 AM CDT,"//Libraries
#include <ESP8266WiFi.h>//https://github.com/esp8266/Arduino/blob/master/libraries/ESP8266WiFi/src/ESP8266WiFi.h
#include <DHT.h>

//Constants
#define LED D4
// Definit la broche de l'Arduino sur laquelle la
// broche DATA du capteur est reliee
#define DHTPIN D2
// Definit le type de capteur utilise
#define DHTTYPE DHT11
// Constante mesuree avec un thermometre de reference
// qui sert a etalonner le capteur de temperature
#define DELTA_TEMPERATURE 0.7
// Declare un objet de type DHT
// Il faut passer en parametre du constructeur
// de l'objet la broche et le type de capteur
DHT dht(DHTPIN, DHTTYPE);

//Parameters
String request;
char* ssid = ""********"";
char* password = ""********"";
String nom = ""ESP8266"";
//Objects
WiFiServer server(80);

void setup() {
    //Init Serial USB
    Serial.begin(115200);
    pinMode(LED, OUTPUT);
    pinMode(A0, INPUT);

    //Init WiFi server
    Serial.println(F(""Initialize System""));
    server.begin();
    //Init ESPBrowser
    Serial.print(F(""Connecting to "")); Serial.println(ssid);
    WiFi.begin(ssid, password);
    // Connect to Wifi network.
    while (WiFi.status() != WL_CONNECTED)
    {
      delay(500); Serial.print(F("".""));
    }

    Serial.println();
    Serial.println(F(""ESPBrowser initialized""));
    Serial.print(F(""IP Address: ""));
    Serial.println(WiFi.localIP());
    // Initialise la capteur DHT11
    dht.begin();
}

void loop() {
  WiFiClient client = server.available();
  if (!client) {
    return;
  }
  // Wait until the client sends some data
  Serial.println(""new client"");
  while (!client.available()) {
    delay(1);
  }
  // Read the first line of the request
  String request = client.readStringUntil('\r');
  Serial.println(request);
  client.flush();
  handleRequest(request);
  webpage(client);//Return webpage

    // Recupere la temperature et l'humidite du capteur et l'affiche
  // sur le moniteur serie
  Serial.println(""Temperature = "" + String(dht.readTemperature()) + "" °C"");
  Serial.println(""Humidite = "" + String(dht.readHumidity()) + "" %"");

  // Attend 10 secondes avant de reboucler
  delay(10000);
}

void handleRequest(String request) { /* function handleRequest */
  ////Handle web client request
  if (request.indexOf(""/light1on"") > 0)  {
    digitalWrite(LED, LOW);
  }
  if (request.indexOf(""/light1off"") > 0)   {
    digitalWrite(LED, HIGH);
  }
}

void webpage(WiFiClient client) { /* function webpage */
  ////Send wbepage to client
  client.println(""HTTP/1.1 200 OK"");
  client.println(""Content-Type: text/html"");
  client.println(""""); //  do not forget this one
  client.println(""<!DOCTYPE HTML>"");
  client.println(""<html>"");
  client.println(""<head>"");
  client.println(""<meta name='apple-mobile-web-app-capable' content='yes' />"");
  client.println(""<meta name='apple-mobile-web-app-status-bar-style' content='black-translucent' />"");
  client.println(""</head>"");
  client.println(""<body bgcolor = '#70706F'>"");
  client.println(""<hr/><hr>"");
  client.println(""<h1 style='color : #3AAA35;'><center> "" + nom + "" Device Control </center></h1>"");
  client.println(""<hr/><hr>"");
  client.println(""<br><br>"");
  client.println(""<br><br>"");
  client.println(""<center>"");
  client.println(""  Pin A0"");
  client.println(""  <input value="" + String(analogRead(A0)) + "" readonly></input>"");
  client.println(""  </center>"");
  client.println(""<center>"");
  client.println(""Built-in LED"");
  client.println(""<a href='/light1on'><button>Turn On </button></a>"");
  client.println(""<a href='/light1off'><button>Turn Off </button></a><br />"");
  client.println(""</center>"");
  client.println(""<br><br>"");
  client.println(""<br><br>"");
  client.println(""<center>"");
  client.println(""<table border='5'>"");
  client.println(""<tr>"");
  client.print(""<td>LED is </td>"");
  if (digitalRead(LED))
  {
    client.print(""<td> OFF</td>"");
  } else {
    client.print(""<td> ON</td>"");
  }
  client.println(""</tr>"");
  client.println(""</table>"");
  client.println(""</center>"");
  client.println(""</body></html>"");
  client.println();
  delay(1);
}"
cX6LsgE7,Untitled,savovaap_,C,Monday 15th of May 2023 11:37:41 AM CDT,"#include <stdio.h>
#include <string.h>

#define MAX_ITEMS 100
#define MAX_NAME_LENGTH 20

typedef struct {
    char name[MAX_NAME_LENGTH];
    float price;
    int quantity;
} Item;

float calculateTotalCost(Item items[], int itemCount) {
    float totalCost = 0;
    int i;
    for (i = 0; i < itemCount; i++) {
        totalCost += items[i].price * items[i].quantity;
    }
    return totalCost;
}

int main() {
    Item inventory[MAX_ITEMS] = {
        {""Table"", 42.00, 0},
        {""Chair"", 13.99, 0},
        {""Cups"", 5.98, 0},
        {""Dishes"", 21.02, 0}
    };

    int numGuests;
    scanf(""%d"", &numGuests);

    char input[MAX_NAME_LENGTH];
    int itemCount = 0;

    while (1) {
        scanf(""%s"", input);

        if (strcmp(input, ""PARTY!"") == 0) {
            break;
        }

        int i;
        for (i = 0; i < MAX_ITEMS; i++) {
            if (strcmp(input, inventory[i].name) == 0) {
                inventory[i].quantity++;
                break;
            }
        }

        if (i == MAX_ITEMS) {
            strcpy(inventory[itemCount].name, input);
            scanf(""%f"", &inventory[itemCount].price);
            inventory[itemCount].quantity++;
            itemCount++;
        }
    }

    float totalCost = calculateTotalCost(inventory, itemCount);

    printf(""%.2f\n"", totalCost);

    int requiredTables = (numGuests + 7) / 8;  // Закупени маси
    int requiredChairs = numGuests - (requiredTables * 8);  // Закупени столове
    int requiredDishes = (numGuests + 5) / 6;  // Закупени комплекти с чинии и прибори

    for (int i = 0; i < itemCount; i++) {
        if (strcmp(inventory[i].name, ""Table"") == 0) {
            requiredTables -= inventory[i].quantity;
        } else if (strcmp(inventory[i].name, ""Chair"") == 0) {
            requiredChairs -= inventory[i].quantity;
        } else if (strcmp(inventory[i].name, ""Dishes"") == 0) {
            requiredDishes -= inventory[i].quantity;
        }
    }

    if (requiredTables > 0) {
        printf(""%d Table\n"", requiredTables);
    }
    if (requiredChairs > 0) {
        printf(""%d Chair\n"", requiredChairs);
    }
    if (requiredDishes > 0) {
        printf(""%d Dishes\n"", requiredDishes);
    }

    return 0;
}
"
f5NaCd4A,Untitled,savovaap_,C,Monday 15th of May 2023 11:34:32 AM CDT,"#include <stdio.h>

#define N 3
#define M 3

int getMaxNeighbourSum(int matrix[N][M], int row, int col) {
    int maxSum = 0;
    int i, j;

    for (i = row - 1; i <= row + 1; i++) {
        for (j = col - 1; j <= col + 1; j++) {
            if (i >= 0 && i < N && j >= 0 && j < M && !(i == row && j == col)) {
                maxSum = (matrix[i][j] > maxSum) ? matrix[i][j] : maxSum;
            }
        }
    }

    return maxSum;
}

int main() {
    int matrix[N][M] = {
        {1, 2, 3},
        {4, 5, 6},
        {7, 8, 9}
    };

    int maxNeighbourSum = getMaxNeighbourSum(matrix, 1, 1);

    printf(""Максималният сбор на околните числа е: %d\n"", maxNeighbourSum);

    return 0;
}
"
HyDxvygU,Untitled,savovaap_,C,Monday 15th of May 2023 11:32:30 AM CDT,"#include <stdio.h>
#include <stdbool.h>

#define N 3
#define M 4

bool checkRows(int matrix[N][M]) {
    int i, j;
    for (i = 0; i < N; i++) {
        for (j = 0; j < M - 1; j++) {
            if (matrix[i][j] > matrix[i][j + 1]) {
                return false;
            }
        }
    }
    return true;
}

bool checkColumns(int matrix[N][M]) {
    int i, j;
    for (j = 0; j < M; j++) {
        for (i = 0; i < N - 1; i++) {
            if (matrix[i][j] < matrix[i + 1][j]) {
                return false;
            }
        }
    }
    return true;
}

int main() {
    int matrix[N][M] = {
        {1, 2, 3, 4},
        {5, 6, 7, 8},
        {9, 10, 11, 12}
    };

    bool rowsSorted = checkRows(matrix);
    bool columnsSorted = checkColumns(matrix);

    if (rowsSorted && columnsSorted) {
        printf(""Матрицата отговаря на условието.\n"");
    } else {
        printf(""Матрицата НЕ отговаря на условието.\n"");
    }

    return 0;
}"
rH5T6aqB,Trivia French Translation,SkyWarZzeur,Lua,Monday 15th of May 2023 11:29:48 AM CDT,"LDT_Trivia.Language = LDT_Trivia.Language or {}
 
LDT_Trivia.Language = {
    fr = {
        DisplayToolName = ""Configuration de l'affichage Trivia"",
        ScoreboardToolName = ""Générateur du tableau des scores Trivia"",
        ToolDesc = ""Configurer un AFFICHAGE Trivia"",
        ToolLeft = ""Clique gauche pour placer un AFFICHAGE"",
        ToolRight = ""Clique droit pour supprimer un AFFICHAGE"",
        ToolFPPPerms = ""FPP bloque votre capacité à utiliser cet outil"",
        ToolFPPCheck = ""Vérifiez si vous pouvez utiliser cet outil avec FPP"",
        DisplayConfigTitle = ""Configuration de l'affichage"",
        PrizePool = ""Cagnotte"",
        ActiveSeats = ""Sièges actifs"",
        AddNewSeat = ""Ajouter un nouveau siège"",
        RemoveAllSeats = ""Supprimer tous les sièges"",
        SaveConfig = ""Enregistrer la configuration"",
        TriviaTitle = ""Trivia"",
        TriviaProvided = ""LES QUESTIONS TRIVIA SONT FOURNIES PAR WWW.OPENTDB.COM"",
        RequiredToStart = ""REQUIS POUR COMMENCER"",
        Player = ""Joueur"",
        Players = ""Joueurs"",
        Starting = ""DÉBUT DANS"",
        PlayersReady = ""JOUEURS PRÊTS À JOUER"",
        Difficulty = ""DIFFICULTÉ"",
        Question = ""QUESTION"",
        ScoreText = ""SCORE"",
        CorrectText = ""CORRECT"",
        WrongText = ""INCORRECT"",
        WaitingForOtherPlayers = ""En attente des autres joueurs"",
        WaitingForPlayers = ""En attente des joueurs"",
        FinishText = ""[TRIVIA] Vous avez terminé avec un score de SCORE et CORRECTANSWERS réponses correctes !"",
        DisplayText = ""Affichage"",
        ConfigurationText = ""Configuration"",
        ScoreboardText = ""Tableau des scores"",
        SpawnerText = ""Générateur"",
        RewardText = ""[TRIVIA] Vous avez reçu une récompense"",
        StandLeaveText = ""Appuyez sur E sur le support pour quitter"",
    }
}"
30Jbm3f8,04. Diagonal Difference,cska1312,C++,Monday 15th of May 2023 11:20:51 AM CDT,"#include <iostream>
using namespace std;

#define SIZE 100
 
int main()
{
  int matrix[SIZE][SIZE];
  int size;
  cin >> size;
  int sum_left = 0, sum_right = 0;
  
  for(int i = 0; i < size ; i++)
  {
    for(int j = 0; j < size; j++)
    {
      cin >> matrix[i][j];
      if(i==j)
        sum_left += matrix[i][j];
      if((i+j) == size - 1)
        sum_right += matrix[i][j];
    }
  }
  if(sum_right > sum_left)
  {
    cout << sum_right - sum_left;
  }
  if(sum_left > sum_right)
  {
    cout << sum_left - sum_right;
  }
  return 0;
}"
tKKfb3pP,03. Symbol in Matrix,cska1312,C++,Monday 15th of May 2023 11:20:07 AM CDT,"#include <iostream>
#include <vector>
using namespace std;
vector<std::vector<char>> readInput(const int& matrixSize)
{

    vector<std::vector<char>> matrix {};

    char symbol = '_';

    for (int row = 0; row < matrixSize; ++row) 
{
        vector<char> rowSymbols {};
        for (int col = 0; col < matrixSize; ++col) 
{
            cin >> symbol;
            rowSymbols.push_back(symbol);
        }

        matrix.push_back(rowSymbols);
    }

    return matrix;
}

bool findSearchedElement(const std::vector<std::vector<char>>& matrix, const char& findEelement, int& rowIndex, int& colIndex)
{

    bool isFound = false;

    for (int i = 0; i < matrix.size(); ++i)
 {
        for (int j = 0; j < matrix[i].size(); ++j)
{
            if(matrix[i][j] == findEelement)
{
                isFound = true;
                rowIndex = i;
                colIndex = j;
                break;
            }
        }

        if(isFound){
            break;
        }
    }

    return isFound;
}

void printResult(const bool& isFound, const char& searchedElement, const int& rowIndex, const int& colIndex)
{
    if(isFound)
{
        cout << ""("" << rowIndex << "", "" << colIndex << "")"" << endl;
    }
    else {
        cout << searchedElement << "" does not occur in the matrix "" << endl;
    }
}

int main() 
{

    int matrixSize = 0;
    cin >> matrixSize;

    vector<std::vector<char>> matrix = readInput(matrixSize);

    char searchedElement = '_';
    cin >> searchedElement;

    int rowIndex = 0;
    int colIndex = 0;

    bool isFound = findSearchedElement(matrix, searchedElement, rowIndex, colIndex);

    printResult(isFound, searchedElement, rowIndex, colIndex);

    return 0;
}"
vzxD0Bi2,02. Primary Diagonal,cska1312,C++,Monday 15th of May 2023 11:18:13 AM CDT,"#include <iostream>
using namespace std;

#define SIZE 100
 
int main()
{
  int matrix[SIZE][SIZE];
  
  int sum_left = 0, sum_right = 0;
  int size;
  cin >> size;
  for(int i = 0; i < size ; i++)
  {
  for(int j = 0; j < size; j++)
  {
    cin >> matrix[i][j];
    if(i==j)
      sum_left += matrix[i][j];
    if((i+j) == SIZE-1)
      sum_right += matrix[i][j];
    }
  }

  cout << sum_left << endl;
  return 0;
}"
UpYnp63Z,01. Sum Matrix Columns,cska1312,C++,Monday 15th of May 2023 11:14:31 AM CDT,"#include <iostream>
using namespace std;

#define size 100 //define max size of colums and rows

void columnSum(int arr[size][size], int m, int n)
{
    int sum;
    for(int i = 0; i < n; i++)
    {
        sum = 0;
    for(int j = 0;j < m; j++)
    {
        sum = sum + arr[j][i];  
    }
        cout << sum << endl;   
    }
}
int main() 
{
    int arr[size][size], m ,n;
    cin >> m >> n; //input size of colums and rows
    for(int i = 0; i < m; i++)
    {
    for(int j = 0; j < n; j++)
    {
      cin>>arr[i][j];//input the array
    }
    } 
    columnSum(arr, m ,n);//call function
    return 0;
}"
QL5ef53g,Where to obtain replacement McMaster University diploma?,jf123123,C,Monday 15th of May 2023 11:13:26 AM CDT,"Fake McMaster University degree for sale, Make the McMaster University Academic transcript, How to buy fake McMaster University diploma? Order fake McMaster University certificate online, Where to obtain replacement McMaster University diploma? buy fake degree, buy fake diploma, order fake certificate online.

Email: diplomacentersale@gmail.com 
WhatsApp: +86 19911539281
WeChat: +86 14779983878 
https://www.degreemaker.com

We are the Premier website for World Class Quality ""Novelty"" Fake Degrees, Fake Diplomas, Fake Certificates and Fake Transcripts/Scoresheets/Statements of Academic Record/Results Slips for University, College, Trade School, Technical School High School and General Education/Equivalency items. www.degreemaker.com People around the world employ our services because we are Masters at our craft, producing what we feel are the highest quality novelty academic items available anywhere. Thank You and we look forward to serving you."
8rnk0Q3D,How to buy fake University of Western Australia diploma?,jf123123,Bash,Monday 15th of May 2023 11:10:51 AM CDT,"Buy fake University of Western Australia degree, How to buy fake University of Western Australia diploma? Make the UWA Academic transcript, Order fake University of Western Australia certificate online, Where to get a University of Western Australia diploma? Buy fake UWA degree certificate in AUS, fake UWA diplomas, buy fake diploma, buy fake degree.

Email: diplomacentersale@gmail.com 
WhatsApp: +86 19911539281
WeChat: +86 14779983878 
https://www.degreemaker.com

We are the Premier website for World Class Quality ""Novelty"" Fake Degrees, Fake Diplomas, Fake Certificates and Fake Transcripts/Scoresheets/Statements of Academic Record/Results Slips for University, College, Trade School, Technical School High School and General Education/Equivalency items. www.degreemaker.com People around the world employ our services because we are Masters at our craft, producing what we feel are the highest quality novelty academic items available anywhere. Thank You and we look forward to serving you."
igG1D2p7,destructor-function,Yousuf1791,PHP,Monday 15th of May 2023 10:58:01 AM CDT,"<?php

class name{
	public $name;

	function __construct($n = ""No name""){
		$this->name = $n;
	}

	function __destruct(){
		echo ""My name is $this->name"";
	}

	function test(){
		echo ""Hello World"";
	}
}

$obj = new name(""Yousuf"");

// $obj->test();

?>"
1MgQas7j,Untitled,MrFireos,Python,Monday 15th of May 2023 10:46:22 AM CDT,"f=open('26-82.txt')
n=f.readline()
a=[list(map(int, s.split())) for s in f]
tt=[0]*10001
for i in range(len(a)):
    if a[i][1]%2!=0:
        tt[a[i][0]]+=1
mx=0
ans=0
for i in range(len(tt)):
    if tt[i]>mx:
        mx=tt[i]
        ans=i
print(mx,ans)
"
KnDPzDLu,TAMPERMONKEY - Hide Twitter checkmarks,t3h_m00kz,JavaScript,Monday 15th of May 2023 10:22:14 AM CDT,"// ==UserScript==
// @name         Fck your checkmark pssy
// @description  Fck your checkmark pssy
// @include      https://twitter.com/*
// @include      https://mobile.twitter.com/*
// @include      https://api.twitter.com/*
// @grant        GM_addStyle
// ==/UserScript==

//Source
//https://github.com/rmkubik/scripts/blob/master/remove-twitter-cruft.js

(function(){
   'use strict';

   const shitNode  = document.querySelector('body');
   const cfg       = { attributes: true, childList: true, subtree: true };

   //SPECIFY WHAT TO REMOVE
   const shit      = [
     // SPAM
     '[aria-label=""Verified Account"" i]',   //TWITTER BLUE CHECKMARKS
     '[href=""/notifications/verified""]',    //Notifications - ""Verified"" tab
     //'[aria-label=""Trending"" i]',           //Right side - Trending (may not work)
     //'[aria-label=""Who to follow"" i]',      //Timeline - Who to Follow (doesn't work)
     //'[data-testid=""UserCell"" i]',          //Timeline - Who to follow (workaround, may break)

     // LEFTHAND TABS
     //'[aria-label=""Home"" i]',           //Home
     //'[aria-label*=""Explore"" i]',       //Explore (breaks without * wildcard)
     //'[aria-label=""Notifications"" i]', //Notifications
     //'[aria-label*=""Messages"" i]',      //Messages (breaks without * wildcard)
     //'[aria-label=""Lists"" i]',         //Lists
     //'[aria-label=""Bookmarks"" i]',     //Bookmarks
     '[aria-label=""Twitter Blue"" i]',    //Twitter Blue
     //'[aria-label=""Profile"" i]',       //Messages
     //'[aria-label*=""More"" i]',          //MORE (breaks without * wildcard)
     ];

   const callback  = function(mutationsList, observer){
     for (let mutation of mutationsList){
       shit.forEach((target)=>{
         const shitElements=document.querySelectorAll(target);
         if (shitElements.length>0){
           shitElements.forEach((node)=>{
             node.style.display='none';
             console.log(`Pwnt: ""${target}""`);
           });
         }
       });
     }
   };

   const observer = new MutationObserver(callback);
   observer.observe(shitNode, cfg);
 })();

 //cry because you're not cool anymore pssy"
Mgs575e1,How to buy fake Southern Cross University degree?,jf123123,Bash,Monday 15th of May 2023 10:17:32 AM CDT,"How to buy fake Southern Cross University degree? Order fake Southern Cross University diploma online, Make the SCU Academic transcript, buy Southern Cross University  online. Where to obtain replacement SCU certificate in Australia? Buy fake SCU diploma certificate,  buy fake degree, buy fake diploma, order fake certificate online.

Email: diplomacentersale@gmail.com 
WhatsApp: +86 19911539281
WeChat: +86 14779983878 
https://www.degreemaker.com

We are the Premier website for World Class Quality ""Novelty"" Fake Degrees, Fake Diplomas, Fake Certificates and Fake Transcripts/Scoresheets/Statements of Academic Record/Results Slips for University, College, Trade School, Technical School High School and General Education/Equivalency items. www.degreemaker.com People around the world employ our services because we are Masters at our craft, producing what we feel are the highest quality novelty academic items available anywhere. Thank You and we look forward to serving you."
bX2qpbgm,CatYears WIP...,markoczy,Go,Monday 15th of May 2023 09:47:28 AM CDT,"// You can edit this code!
// Click here and start typing.
//https://herz-fuer-tiere.de/haustiere/katzen/katzenjahre-in-menschenjahren-umrechnen#tabelle
package main

import ""fmt""

type yearCount struct {
	years  int
	months int
}

func (yc *yearCount) Add(years, months int) {
	addYrs := years + months/12
	addMonths := months % 12
	yc.years += addYrs
	if yc.months+addMonths > 12 {
		yc.years += 1
		yc.months -= 12
	}
	yc.months += addMonths
}

func (yc *yearCount) String() string {
	return fmt.Sprintf(""%d year(s) and %d month(s)"", yc.years, yc.months)
}

func catYears(humanYears float32) float32 {
	if humanYears <= 1.0 {
		return 15.0 * humanYears
	}
	if humanYears <= 2.0 {
		return 15.0 + (10 * (1 - humanYears))
	}
	return 25.0 + (humanYears-2.0)*4
}

func catYears2(years, months int) yearCount {
	yc := yearCount{0, 0}
	if years == 0 {
		if months <= 1 {
			yc.Add(0, months*6)
		} else if months <= 3 {
			yc.Add(0, 6+54.0*((months-1)/2.0))
		}
	}
	return yc
}

func main() {
	yc := catYears2(0, 2)
	fmt.Println(""CatYears:"", yc.String())
}
"
iVfu98E7,Untitled,cydside,JavaScript,Monday 15th of May 2023 09:38:15 AM CDT,"class ErrorModal {
  constructor() {
    this.modal = null;
    this.title = null;
    this.body = null;
  }

  init() {
    // Create the modal element and set its attributes
    this.modal = document.createElement(""div"");
    this.modal.classList.add(""modal"", ""fade"");
    this.modal.id = ""errorModal"";
    this.modal.tabIndex = ""-1"";
    this.modal.setAttribute(""role"", ""dialog"");
    this.modal.setAttribute(""aria-labelledby"", ""errorModalLabel"");
    this.modal.setAttribute(""aria-hidden"", ""true"");

    // Create the modal dialog element
    const modalDialog = document.createElement(""div"");
    modalDialog.classList.add(""modal-dialog"");
    modalDialog.setAttribute(""role"", ""document"");

    // Create the modal content element
    const modalContent = document.createElement(""div"");
    modalContent.classList.add(""modal-content"");

    // Create the modal header element
    const modalHeader = document.createElement(""div"");
    modalHeader.classList.add(""modal-header"");

    // Create the modal title element
    this.title = document.createElement(""h5"");
    this.title.classList.add(""modal-title"");
    this.title.id = ""errorModalLabel"";
    this.title.textContent = ""Error"";

    // Add the title element to the header
    modalHeader.appendChild(this.title);

    // Create the close button element
    const closeButton = document.createElement(""button"");
    closeButton.classList.add(""btn-close"");
    closeButton.setAttribute(""type"", ""button"");
    closeButton.setAttribute(""data-bs-dismiss"", ""modal"");
    closeButton.setAttribute(""aria-label"", ""Close"");

    // Add the close button to the header
    modalHeader.appendChild(closeButton);

    // Add the header to the content
    modalContent.appendChild(modalHeader);

    // Create the modal body element
    this.body = document.createElement(""div"");
    this.body.classList.add(""modal-body"");

    // Add the body to the content
    modalContent.appendChild(this.body);

    // Add the content to the dialog
    modalDialog.appendChild(modalContent);

    // Add the dialog to the modal
    this.modal.appendChild(modalDialog);

    // Add the modal to the document
    document.body.appendChild(this.modal);
  }

  show(code, message) {
    // Update the title and body of the modal
    this.title.textContent = `Error ${code}`;
    this.body.textContent = message;

    // Show the modal
    const modal = new bootstrap.Modal(document.getElementById(""errorModal""));
    modal.show();
  }
}

(function() {
  // code to run automatically when script is loaded
  console.log(""Hello, world!"");
 
const errorModal = new ErrorModal();
errorModal.init();

    // Display the error in the modal
errorModal.show(1021, ""Ciao, come va li?"");

})();

//__________________________________________________________________________________

<div class=""container shadow min-vh-100 py-2"">
    <div class=""row"">
        <div class=""col"">
            <h2 class=""font-weight-light"">Hello Bootstrap 5 😊</h2>
            <p>
                This is a Bootstrap 5 starter example snippet!
            </p>
        </div>
    </div>
</div>"
ZAhexbbP,Form,cloud_clown,JavaScript,Monday 15th of May 2023 09:24:19 AM CDT,"import React from ""react"";
import ""./Form.css"";

// react hook form
import { useForm, useFieldArray } from ""react-hook-form"";
import { DevTool } from ""@hookform/devtools"";

const Form = () => {
  const form = useForm({
    defaultValues: {
      email: """",
      fullName: """",
      position: """",
      technologys: [
        {
          technology: """",
        },
      ],
    },
  });
  const { register, control, handleSubmit, formState } = form;
  const { errors } = formState;
  const { append, remove, fields } = useFieldArray({
    name: ""technologys"",
    control,
  });

  const onSubmit = (data) => {
    console.log(""Form submitted"", data);
  };

  return (
    <>
      <div className=""form-container"">
        <div className=""form-text"">
          <h1>Input Your Team Member Details</h1>
        </div>
        <div className=""form-card"">
          <form
            className=""form-input""
            onSubmit={handleSubmit(onSubmit)}
            noValidate
          >
            <div className=""input-wrapper"">
              <label htmlFor=""email"">Email</label>
              <input
                type=""email""
                id=""email""
                {...register(""email"", {
                  required: {
                    value: true,
                    message: "" email required"",
                  },
                  pattern: {
                    value:
                      /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*$/,
                    message: ""Invalid email format"",
                  },
                })}
              />
              <p>{errors.email?.message}</p>
            </div>

            <div className=""input-wrapper"">
              <label htmlFor=""fullName"">Full Name</label>
              <input
                type=""text""
                id=""fullName""
                {...register(""fullName"", {
                  required: {
                    value: true,
                    message: ""Username is required"",
                  },
                })}
              />
              <p>{errors.fullName?.message}</p>
            </div>

            <div className=""input-wrapper"">
              <label htmlFor=""position"">Position</label>
              <input
                type=""text""
                id=""position""
                {...register(""position"", {
                  required: {
                    value: true,
                    message: ""Position is required"",
                  },
                })}
              />
              <p>{errors.position?.message}</p>
            </div>

            <div className=""input-wrapper"">
              <label htmlFor=""technologys"">Technologys you use</label>
              {fields.map((field, index) => {
                return (
                  <div className=""input-wrapper"" key={field.id}>
                    <input
                      type=""text""
                      id=""technologys""
                      {...register(`technologys.${index}.technology`,{
                        required: {
                          value: true,
                          message: ""Technologys is required"",
                        }
                      })}
                    />

                    {index > 0 && (
                      <button type=""button"" onClick={() => remove(index)}>
                        remove
                      </button>
                    )}
                  </div>
                );
              })}
              <button type=""button"" onClick={() => append({ technology: """" })}>
                Add tech
              </button>
              <p>{errors.technologys?.[0]?.technology?.message}</p>
            </div>

            <button type=""submit"">Submit</button>
          </form>
        </div>
        <DevTool control={control} />
      </div>
    </>
  );
};

export default Form;
"
7zuPjBwB,sheetPrint,cepxuozab,C++,Monday 15th of May 2023 09:23:43 AM CDT,"void Example() {
        auto sheet = CreateSheet();
        sheet->SetCell(""A1""_pos, ""=(1+2)*3"");
        sheet->SetCell(""B1""_pos, ""=1+(2*3)"");

        sheet->SetCell(""A2""_pos, ""some"");
        sheet->SetCell(""B2""_pos, ""text"");
        sheet->SetCell(""C2""_pos, ""here"");

        sheet->SetCell(""C3""_pos, ""'and'"");
        sheet->SetCell(""D3""_pos, ""'here"");

        sheet->SetCell(""B5""_pos, ""=1/0"");

        PrintSheet(sheet);
    }
int main() {
    Example();
}

(5, 4)
=(1+2)*3	=1+2*3		
some	text	here	
		'and'	'here
			
	=1/0		

9	7		
some	text	here	
		and'	here
			
	#DIV/0!		"
YrFTEJDS,3034 КЕГЭ,qekaqeka,Python,Monday 15th of May 2023 09:23:06 AM CDT,"#ПРЕДВАРИТЕЛЬНОЕ ОБЪЯСНЕНИЕ:
#Для всех чисел, F(n) минимум 6
#F(n) = 9 Для тех чисел, которые за прохождение функции были чётными и > 0 ровно три раза.
#Минимальным таким числом будет 2^3 степени, иначе просто 8.
#Струтура 8 будет 2*2*2.
#Но структура числа может быть и другой. Например (2*2+1)*2*2 (20)
#Разворачивая 20 мы будет иметь следующий ряд: 20 (деление на 2)-> 10 (деление на 2)-> 5 ( //2 )-> 2 (деление на 2)-> 1 ( //2 )-> 0
#Видим что мы делили на 2 (не целочисленно) только 3 раза. Значит для F(20) = 9
#Целочиселнное деление на 2 для нечётного числа n эквивалентно (n-1)/2
#Обратной операцией будет n*2 + 1. Для обычного деления на 2 эквивалентом будет n*2
#Когда мы целочисленно делим на 2 мы не меняем значение F(n).
#Значит число n, для которого F(n) = 9, на пути разворачивания 3 раза будет просто делиться на 2 и X раз целочисленно делится на 2
#Создавая число, для которого F(n) = 9, с помощью обратных операций, мы 3 раза просто умножим на 2, и X раз умножим на два и прибавим единицу
#Вопрос: зависит ли созданное число от порядка выполнения операций? Докажем, что да
#Возьмём два числа: 2*2*2*2 + 1 и (2*2*2+1)*2
#Это числа в которых мы каждую из операций применили одинаковое для обоих чисел количество раз, но в разном порядке
#Посчитав получим 17 и 18. Числа получились разные. Значит зависимость есть. НО!!!
#Для всех ли разных комбинаций из Z операций мы получим разные числа? Докажем, что да
#Операция *2 + 1, добавляет единицу, которая будет увеличиваться в 2 раза, с каждой следующей операцией
#Получается такая единица добавляет к итоговому числу 2^i, i - кол-во операций после прибавления этой единицы
#Чтобы числа не отличались, надо чтобы единицы добавили в сумме к итоговому число одинаковое число
#НО!!! 2^i > 2^(i-1) + 2^(i-2) + ... + 2^0 . Так как 2^(i-1) + 2^(i-2) + ... + 2^0 - сумма геометрической прогрессии
#2^(i-1) + 2^(i-2) + ... + 2^0 = (2^i - 1)/(1) = 2^i - 1
#И очевидно, что 2^i > 2^i - 1
#А если 2^(i-1) + 2^(i-2) + ... + 2^0, значит что единицу, которую прибавили на хотя бы на одну операцию раньше, не получится
#набрать суммой единиц, которые добавили позже. Значит не получится составить одно и тоже число разными комбинациями,
#так как если в одной из комбинации хотя бы одна операция *2+1 идёт раньше чем в другой,
#то число, полученное этой комбинацией будет больше чем в другой
#Значит количество N разных чисел, которые составлены из Z разных комбинаций операций, где Z = 3 + X, будет равно количество перестановок
#3 ""*2"" операций и X ""*2 + 1"" операций. Значит N = (3+X)! / (3! * X!) (формула перестановок без повторений)
#НО!!! Может быть так, что число, полученное нами, будет больше 1 000 000 000. А такие нам не подходят
#Очевидно, что используя Z операций, мы получим наибольшее число, если все операции *2 + 1 поставим в начале.
#А минимальное, если поставим в конце.
#Найдём максимальное Z, при котором максимальное число <= 1 000 000 000

maxStableZ = -1

for Z in range(3, 1000):
    n = 1

    for j in range(Z-3):
        n = n*2 + 1

    n = n * 2**3

    if n > 1_000_000_000:
        maxStableZ = Z - 1
        break


#Найдём максимальное Z при котором минимальное число будет <=  1 000 000 000

maxZ = -1

for Z in range(3, 1000):
    n = 2**3

    for j in range(Z-3):
        n = n*2 + 1

    if n > 1_000_000_000:
        maxZ = Z - 1
        break

#для Z <= maxStableZ, все числа из Z операций будут <= 1 000 000 000
#поэтому просто посчитаем количество перестановок из Z in range(3, maxStableZ + 1) операций

import math

c = 0

for Z in range(3, maxStableZ + 1):
    c += math.factorial(Z)/(math.factorial(3)*math.factorial(Z-3))

#для Z, где maxStableZ < Z <= maxZ , каждое составленное нами число придётся рассматривать отдельно

for i1 in range(0, maxZ):
    for i2 in range(i1+1, maxZ):
        for i3 in range(i2+1, maxZ):
            a = [0] * maxZ
            a[i1] = 1
            a[i2] = 1
            a[i3] = 1
            n = 1
            for j in a:
                if j == 1:
                    n = n * 2
                else:
                    n = n * 2 + 1

            if n <= 1_000_000_000:
                c += 1

print(c)
"
PHCNU6FS,wcfm-hide-vendors-on-vacation-from-store-list,palsushobhan,PHP,Monday 15th of May 2023 08:49:21 AM CDT,"add_filter('wcfmmp_exclude_vendors_list', function($exclude_vendor_list) {
    global $wpdb;
    $vacation_args = array(
        'role__in'   => apply_filters( 'wcfmmp_allwoed_vendor_user_roles', array( 'wcfm_vendor' ) ),
        'meta_query' => array(
            array(
                array(
                    'key'     => 'wcfmmp_profile_settings',
                    'value'   => ';s:18:""wcfm_vacation_mode"";s:3:""yes"";',
                    'compare' => 'LIKE',
                ),
                array(
                    'key'     => 'wcfmmp_profile_settings',
                    'value'   => ';s:30:""wcfm_disable_vacation_purchase"";s:3:""yes"";',
                    'compare' => 'LIKE',
                ),
            ),
        ),
        'fields' => 'ID',
    );
    $on_vacation = get_users( $vacation_args );
    $sql = ""select user_id, meta_value from {$wpdb->prefix}usermeta where user_id IN ("" . implode( "","", $on_vacation ) . "") AND meta_key = 'wcfmmp_profile_settings'"";
    $result = $wpdb->get_results($sql);
    $exclude_vendor = [];
    if( !empty( $result ) ) {
        foreach ($result as $value) {
            $settings = maybe_unserialize($value->meta_value);
            if(isset($settings['wcfm_vacation_mode_type']) && 'instant' == $settings['wcfm_vacation_mode_type']) {
                $exclude_vendor[] = $value->user_id;
                continue;
            }
            $wcfm_vacation_start_date = isset($settings['wcfm_vacation_start_date']) ? $settings['wcfm_vacation_start_date'] : '';
            $wcfm_vacation_end_date = isset($settings['wcfm_vacation_end_date']) ? $settings['wcfm_vacation_end_date'] : '';
            if( $wcfm_vacation_start_date && $wcfm_vacation_end_date ) {
                $current_time = strtotime( 'midnight', current_time( 'timestamp' ) );
                $start_time = strtotime( $wcfm_vacation_start_date );
                $end_time = strtotime( $wcfm_vacation_end_date );
                if( ($current_time >= $start_time) && ($current_time <= $end_time) ) {
                    $exclude_vendor[] = $value->user_id;
                    continue;
                }
            }
        }
        $exclude_vendor_list = array_unique(array_merge($exclude_vendor_list, $exclude_vendor));
    }
    return $exclude_vendor_list;
});"
bw62HvVX,api-lowercase-false-true-null,LMMenard,Diff,Monday 15th of May 2023 08:41:38 AM CDT,"diff -r -B -u current_api_html/create-or-update-scheduled-message.html new_api_html/create-or-update-scheduled-message.html
--- current_api_html/create-or-update-scheduled-message.html	2023-05-15 15:05:57.530139252 +0200
+++ new_api_html/create-or-update-scheduled-message.html	2023-05-15 15:03:28.241124650 +0200
@@ -337,7 +337,7 @@
         <span class=""api-argument-example-label"">Example</span>: <code>&quot;Castle&quot;</code>
     </div>
     <div class=""api-description""><p>The topic of the message. Only required for stream messages
-(<code>type=""stream""</code>), ignored otherwise.</p>
+(<code>""type"": ""stream""</code>), ignored otherwise.</p>
 <p>Clients should use the <code>max_topic_length</code> returned by the
 <a href=""/api/register-queue""><code>POST /register</code></a> endpoint to determine
 the maximum topic length.</p></div>
diff -r -B -u current_api_html/get-custom-emoji.html new_api_html/get-custom-emoji.html
--- current_api_html/get-custom-emoji.html	2023-05-15 15:06:04.242185136 +0200
+++ new_api_html/get-custom-emoji.html	2023-05-15 15:03:36.505180487 +0200
@@ -358,7 +358,7 @@
 <li>
 <p><code>author_id</code>: <span class=""api-field-type"">integer | null</span></p>
 <p>The user ID of the user who uploaded the custom emoji.
-Will be null if the uploader is unknown.</p>
+Will be <code>null</code> if the uploader is unknown.</p>
 <p><strong>Changes</strong>: New in Zulip 3.0 (feature level 7). Previously
 was accessible via an <code>author</code> object with an <code>id</code> field.</p>
 </li>
diff -r -B -u current_api_html/get-events.html new_api_html/get-events.html
--- current_api_html/get-events.html	2023-05-15 15:06:06.114197937 +0200
+++ new_api_html/get-events.html	2023-05-15 15:03:40.149205121 +0200
@@ -665,11 +665,11 @@
 <li>
 <p><code>delivery_email</code>: <span class=""api-field-type"">string | null</span></p>
 <p>The new delivery email of the user.</p>
-<p>This value can be <code>None</code> if user changes the
+<p>This value can be <code>null</code> if user changes the
 <code>email_address_visibility</code> value such that
 you cannot access user's real email.</p>
 <p><strong>Changes</strong>: As of Zulip 7.0 (feature level 163),
-<code>None</code> is a possible value as this event is also
+<code>null</code> is a possible value as this event is also
 sent on changing <code>email_address_visibility</code> setting.</p>
 </li>
 </ul>
@@ -809,7 +809,7 @@
 <p><code>desktop_notifications</code>: <span class=""api-field-type"">boolean | null</span></p>
 <p>A boolean specifying whether desktop notifications
 are enabled for the given stream.</p>
-<p>A null value means the value of this setting
+<p>A <code>null</code> value means the value of this setting
 should be inherited from the user-level default
 setting, enable_stream_desktop_notifications, for
 this stream.</p>
@@ -818,7 +818,7 @@
 <p><code>email_notifications</code>: <span class=""api-field-type"">boolean | null</span></p>
 <p>A boolean specifying whether email notifications
 are enabled for the given stream.</p>
-<p>A null value means the value of this setting
+<p>A <code>null</code> value means the value of this setting
 should be inherited from the user-level default
 setting, enable_stream_email_notifications, for
 this stream.</p>
@@ -828,7 +828,7 @@
 <p>A boolean specifying whether wildcard mentions
 trigger notifications as though they were personal
 mentions in this stream.</p>
-<p>A null value means the value of this setting
+<p>A <code>null</code> value means the value of this setting
 should be inherited from the user-level default
 setting, wildcard_mentions_notify, for
 this stream.</p>
@@ -837,7 +837,7 @@
 <p><code>push_notifications</code>: <span class=""api-field-type"">boolean | null</span></p>
 <p>A boolean specifying whether push notifications
 are enabled for the given stream.</p>
-<p>A null value means the value of this setting
+<p>A <code>null</code> value means the value of this setting
 should be inherited from the user-level default
 setting, enable_stream_push_notifications, for
 this stream.</p>
@@ -846,7 +846,7 @@
 <p><code>audible_notifications</code>: <span class=""api-field-type"">boolean | null</span></p>
 <p>A boolean specifying whether audible notifications
 are enabled for the given stream.</p>
-<p>A null value means the value of this setting
+<p>A <code>null</code> value means the value of this setting
 should be inherited from the user-level default
 setting, enable_stream_audible_notifications, for
 this stream.</p>
@@ -868,7 +868,7 @@
 <code>All messages</code> view (previously known as <code>Home</code> view).</p>
 <p><strong>Changes</strong>: Prior to Zulip 2.1.0, this feature was
 represented by the more confusingly named <code>in_home_view</code> (with the
-opposite value, <code>in_home_view=!is_muted</code>).</p>
+opposite value, <code>in_home_view = !is_muted</code>).</p>
 </li>
 <li>
 <p><code>in_home_view</code>: <span class=""api-field-type"">boolean</span></p>
@@ -895,10 +895,10 @@
 <p><code>stream_post_policy</code>: <span class=""api-field-type"">integer</span></p>
 <p><a href=""/api/roles-and-permissions#permission-levels"">Policy</a> for which users can post messages to the stream.</p>
 <ul>
-<li>1 =&gt; Any user can post.</li>
-<li>2 =&gt; Only administrators can post.</li>
-<li>3 =&gt; Only <a href=""/api/roles-and-permissions#determining-if-a-user-is-a-full-member"">full members</a> can post.</li>
-<li>4 =&gt; Only moderators can post.</li>
+<li>1 = Any user can post.</li>
+<li>2 = Only administrators can post.</li>
+<li>3 = Only <a href=""/api/roles-and-permissions#determining-if-a-user-is-a-full-member"">full members</a> can post.</li>
+<li>4 = Only moderators can post.</li>
 </ul>
 <p><strong>Changes</strong>: New in Zulip 3.0 (feature level 1), replacing the previous
 <code>is_announcement_only</code> boolean.</p>
@@ -918,8 +918,8 @@
 <li>
 <p><code>history_public_to_subscribers</code>: <span class=""api-field-type"">boolean</span></p>
 <p>Whether the history of the stream is public to its subscribers.</p>
-<p>Currently always true for public streams (i.e. invite_only=False implies
-history_public_to_subscribers=True), but clients should not make that
+<p>Currently always true for public streams (i.e. <code>""invite_only"": false</code> implies
+<code>""history_public_to_subscribers"": true</code>), but clients should not make that
 assumption, as we may change that behavior in the future.</p>
 </li>
 <li>
@@ -928,13 +928,13 @@
 <p>Intended to help clients determine whether they need to display
 UI like the ""more topics"" widget that would suggest the stream
 has older history that can be accessed.</p>
-<p>Null is used for streams with no message history.</p>
+<p>Is <code>null</code> for streams with no message history.</p>
 </li>
 <li>
 <p><code>stream_weekly_traffic</code>: <span class=""api-field-type"">integer | null</span></p>
 <p>The average number of messages sent to the stream in recent weeks,
 rounded to the nearest integer.</p>
-<p>Null means the stream was recently created and there is
+<p>If <code>null</code>, the stream was recently created and there is
 insufficient data to estimate the average traffic.</p>
 </li>
 <li>
@@ -1157,7 +1157,7 @@
 <ul>
 <li>
 <p><code>avatar_url</code>: <span class=""api-field-type"">string | null</span></p>
-<p>The URL of the user's avatar. Can be null only if client_gravatar was passed,
+<p>The URL of the user's avatar. Can be <code>null</code> only if client_gravatar was passed,
 which means that the user has not uploaded an avatar in Zulip, and the
 client should compute the gravatar URL by hashing the
 user's email address itself for this user.</p>
@@ -1252,10 +1252,10 @@
 <li>
 <p><code>user_id</code>: <span class=""api-field-type"">integer | null</span></p>
 <p>The ID of the user that made the edit.</p>
-<p>Will be null only for edit history
+<p>Will be <code>null</code> only for edit history
 events predating March 2017.</p>
 <p>Clients can display edit history events where this
-is null as modified by either the sender (for content
+is <code>null</code> as modified by either the sender (for content
 edits) or an unknown user (for topic edits).</p>
 </li>
 </ul>
@@ -1536,7 +1536,7 @@
 </li>
 <li>
 <p><code>delivery_email</code>: <span class=""api-field-type"">string | null</span></p>
-<p>The user's real email address. This value will be <code>None</code> if you cannot
+<p>The user's real email address. This value will be <code>null</code> if you cannot
 access user's real email address. For bot users, this field is always
 set to the real email of the bot, because bot users always have
 <code>email_address_visibility</code> as <code>EMAIL_ADDRESS_VISIBILITY_EVERYONE</code>.</p>
@@ -1544,7 +1544,7 @@
 only when <code>email_address_visibility</code> was restricted and you had access to the
 user's real email. Now, this field is always present, including the case when
 <code>email_address_visibility</code> is set to <code>EMAIL_ADDRESS_VISIBILITY_EVERYONE</code>,
-with the value being <code>None</code> if you don't have access the user's real email.
+with the value being <code>null</code> if you don't have access the user's real email.
 For bot users, this field is now always set to the real email irrespective of
 <code>email_address_visibility</code> setting.</p>
 </li>
@@ -1604,7 +1604,7 @@
 <p><code>bot_owner_id</code>: <span class=""api-field-type"">integer | null</span></p>
 <p>If the user is a bot (i.e. <code>is_bot</code> is true), then <code>bot_owner_id</code>
 is the user ID of the bot's owner (usually, whoever created the bot).</p>
-<p>Will be null for legacy bots that do not have an owner.</p>
+<p>Will be <code>null</code> for legacy bots that do not have an owner.</p>
 <p><strong>Changes</strong>: New in Zulip 3.0 (feature level 1). In previous
 versions, there was a <code>bot_owner</code> field containing the email
 address of the bot's owner.</p>
@@ -1614,11 +1614,11 @@
 <p><a href=""/api/roles-and-permissions"">Organization-level role</a> of the user.
 Possible values are:</p>
 <ul>
-<li>Organization owner =&gt; 100</li>
-<li>Organization administrator =&gt; 200</li>
-<li>Organization moderator =&gt; 300</li>
-<li>Member =&gt; 400</li>
-<li>Guest =&gt; 600</li>
+<li>100 = Organization owner</li>
+<li>200 = Organization administrator</li>
+<li>300 = Organization moderator</li>
+<li>400 = Member</li>
+<li>600 = Guest</li>
 </ul>
 <p><strong>Changes</strong>: New in Zulip 4.0 (feature level 59).</p>
 </li>
@@ -1629,7 +1629,7 @@
 <li>
 <p><code>avatar_url</code>: <span class=""api-field-type"">string | null</span></p>
 <p>URL for the user's avatar. Will be <code>null</code> if the <code>client_gravatar</code>
-query parameter was set to <code>True</code> and the user's avatar is hosted by
+query parameter was set to <code>true</code> and the user's avatar is hosted by
 the Gravatar provider (i.e. the user has never uploaded an avatar).</p>
 <p><strong>Changes</strong>: In Zulip 3.0 (feature level 18), if the client has the
 <code>user_avatar_url_field_optional</code> capability, this will be missing at
@@ -1890,10 +1890,10 @@
 <p><code>stream_post_policy</code>: <span class=""api-field-type"">integer</span></p>
 <p><a href=""/api/roles-and-permissions#permission-levels"">Policy</a> for which users can post messages to the stream.</p>
 <ul>
-<li>1 =&gt; Any user can post.</li>
-<li>2 =&gt; Only administrators can post.</li>
-<li>3 =&gt; Only <a href=""/api/roles-and-permissions#determining-if-a-user-is-a-full-member"">full members</a> can post.</li>
-<li>4 =&gt; Only moderators can post.</li>
+<li>1 = Any user can post.</li>
+<li>2 = Only administrators can post.</li>
+<li>3 = Only <a href=""/api/roles-and-permissions#determining-if-a-user-is-a-full-member"">full members</a> can post.</li>
+<li>4 = Only moderators can post.</li>
 </ul>
 <p><strong>Changes</strong>: New in Zulip 3.0 (feature level 1), replacing the previous
 <code>is_announcement_only</code> boolean.</p>
@@ -1913,8 +1913,8 @@
 <li>
 <p><code>history_public_to_subscribers</code>: <span class=""api-field-type"">boolean</span></p>
 <p>Whether the history of the stream is public to its subscribers.</p>
-<p>Currently always true for public streams (i.e. invite_only=False implies
-history_public_to_subscribers=True), but clients should not make that
+<p>Currently always true for public streams (i.e. <code>""invite_only"": false</code> implies
+<code>""history_public_to_subscribers"": true</code>), but clients should not make that
 assumption, as we may change that behavior in the future.</p>
 </li>
 <li>
@@ -1923,7 +1923,7 @@
 <p>Intended to help clients determine whether they need to display
 UI like the ""more topics"" widget that would suggest the stream
 has older history that can be accessed.</p>
-<p>Null is used for streams with no message history.</p>
+<p>Is <code>null</code> for streams with no message history.</p>
 </li>
 <li>
 <p><code>is_announcement_only</code>: <span class=""api-field-type"">boolean</span></p>
@@ -2023,10 +2023,10 @@
 <p><code>stream_post_policy</code>: <span class=""api-field-type"">integer</span></p>
 <p><a href=""/api/roles-and-permissions#permission-levels"">Policy</a> for which users can post messages to the stream.</p>
 <ul>
-<li>1 =&gt; Any user can post.</li>
-<li>2 =&gt; Only administrators can post.</li>
-<li>3 =&gt; Only <a href=""/api/roles-and-permissions#determining-if-a-user-is-a-full-member"">full members</a> can post.</li>
-<li>4 =&gt; Only moderators can post.</li>
+<li>1 = Any user can post.</li>
+<li>2 = Only administrators can post.</li>
+<li>3 = Only <a href=""/api/roles-and-permissions#determining-if-a-user-is-a-full-member"">full members</a> can post.</li>
+<li>4 = Only moderators can post.</li>
 </ul>
 <p><strong>Changes</strong>: New in Zulip 3.0 (feature level 1), replacing the previous
 <code>is_announcement_only</code> boolean.</p>
@@ -2046,8 +2046,8 @@
 <li>
 <p><code>history_public_to_subscribers</code>: <span class=""api-field-type"">boolean</span></p>
 <p>Whether the history of the stream is public to its subscribers.</p>
-<p>Currently always true for public streams (i.e. invite_only=False implies
-history_public_to_subscribers=True), but clients should not make that
+<p>Currently always true for public streams (i.e. <code>""invite_only"": false</code> implies
+<code>""history_public_to_subscribers"": true</code>), but clients should not make that
 assumption, as we may change that behavior in the future.</p>
 </li>
 <li>
@@ -2056,7 +2056,7 @@
 <p>Intended to help clients determine whether they need to display
 UI like the ""more topics"" widget that would suggest the stream
 has older history that can be accessed.</p>
-<p>Null is used for streams with no message history.</p>
+<p>Is <code>null</code> for streams with no message history.</p>
 </li>
 <li>
 <p><code>is_announcement_only</code>: <span class=""api-field-type"">boolean</span></p>
@@ -2145,8 +2145,8 @@
 <p><code>history_public_to_subscribers</code>: <span class=""api-field-type"">boolean</span></p>
 <p>Note: Only present if the changed property was <code>invite_only</code>.</p>
 <p>Whether the history of the stream is public to its subscribers.</p>
-<p>Currently always true for public streams (i.e. invite_only=False implies
-history_public_to_subscribers=True), but clients should not make that
+<p>Currently always true for public streams (i.e. <code>""invite_only"": false</code> implies
+<code>""history_public_to_subscribers"": true</code>), but clients should not make that
 assumption, as we may change that behavior in the future.</p>
 </li>
 <li>
@@ -2947,10 +2947,10 @@
 <p><code>stream_post_policy</code>: <span class=""api-field-type"">integer</span></p>
 <p><a href=""/api/roles-and-permissions#permission-levels"">Policy</a> for which users can post messages to the stream.</p>
 <ul>
-<li>1 =&gt; Any user can post.</li>
-<li>2 =&gt; Only administrators can post.</li>
-<li>3 =&gt; Only <a href=""/api/roles-and-permissions#determining-if-a-user-is-a-full-member"">full members</a> can post.</li>
-<li>4 =&gt; Only moderators can post.</li>
+<li>1 = Any user can post.</li>
+<li>2 = Only administrators can post.</li>
+<li>3 = Only <a href=""/api/roles-and-permissions#determining-if-a-user-is-a-full-member"">full members</a> can post.</li>
+<li>4 = Only moderators can post.</li>
 </ul>
 <p><strong>Changes</strong>: New in Zulip 3.0 (feature level 1), replacing the previous
 <code>is_announcement_only</code> boolean.</p>
@@ -2970,8 +2970,8 @@
 <li>
 <p><code>history_public_to_subscribers</code>: <span class=""api-field-type"">boolean</span></p>
 <p>Whether the history of the stream is public to its subscribers.</p>
-<p>Currently always true for public streams (i.e. invite_only=False implies
-history_public_to_subscribers=True), but clients should not make that
+<p>Currently always true for public streams (i.e. <code>""invite_only"": false</code> implies
+<code>""history_public_to_subscribers"": true</code>), but clients should not make that
 assumption, as we may change that behavior in the future.</p>
 </li>
 <li>
@@ -2980,7 +2980,7 @@
 <p>Intended to help clients determine whether they need to display
 UI like the ""more topics"" widget that would suggest the stream
 has older history that can be accessed.</p>
-<p>Null is used for streams with no message history.</p>
+<p>Is <code>null</code> for streams with no message history.</p>
 </li>
 <li>
 <p><code>is_announcement_only</code>: <span class=""api-field-type"">boolean</span></p>
@@ -3118,10 +3118,10 @@
 <p><code>stream_post_policy</code>: <span class=""api-field-type"">integer</span></p>
 <p><a href=""/api/roles-and-permissions#permission-levels"">Policy</a> for which users can post messages to the stream.</p>
 <ul>
-<li>1 =&gt; Any user can post.</li>
-<li>2 =&gt; Only administrators can post.</li>
-<li>3 =&gt; Only <a href=""/api/roles-and-permissions#determining-if-a-user-is-a-full-member"">full members</a> can post.</li>
-<li>4 =&gt; Only moderators can post.</li>
+<li>1 = Any user can post.</li>
+<li>2 = Only administrators can post.</li>
+<li>3 = Only <a href=""/api/roles-and-permissions#determining-if-a-user-is-a-full-member"">full members</a> can post.</li>
+<li>4 = Only moderators can post.</li>
 </ul>
 <p><strong>Changes</strong>: New in Zulip 3.0 (feature level 1), replacing the previous
 <code>is_announcement_only</code> boolean.</p>
@@ -3141,8 +3141,8 @@
 <li>
 <p><code>history_public_to_subscribers</code>: <span class=""api-field-type"">boolean</span></p>
 <p>Whether the history of the stream is public to its subscribers.</p>
-<p>Currently always true for public streams (i.e. invite_only=False implies
-history_public_to_subscribers=True), but clients should not make that
+<p>Currently always true for public streams (i.e. <code>""invite_only"": false</code> implies
+<code>""history_public_to_subscribers"": true</code>), but clients should not make that
 assumption, as we may change that behavior in the future.</p>
 </li>
 <li>
@@ -3151,7 +3151,7 @@
 <p>Intended to help clients determine whether they need to display
 UI like the ""more topics"" widget that would suggest the stream
 has older history that can be accessed.</p>
-<p>Null is used for streams with no message history.</p>
+<p>Is <code>null</code> for streams with no message history.</p>
 </li>
 <li>
 <p><code>is_announcement_only</code>: <span class=""api-field-type"">boolean</span></p>
@@ -3480,7 +3480,7 @@
 <li>
 <p><code>user_id</code>: <span class=""api-field-type"">integer | null</span></p>
 <p>The ID of the user who sent the message.</p>
-<p>Null when event is for a rendering update of the original message,
+<p>Is <code>null</code> when event is for a rendering update of the original message,
 such as for an <a href=""https://zulip.readthedocs.io/en/latest/subsystems/sending-messages.html#inline-url-previews"">inline URL preview</a>.</p>
 <p><strong>Changes</strong>: As of Zulip 5.0 (feature level 114), this field
 is present for all <code>update_message</code> events. Previously, this
@@ -3493,7 +3493,7 @@
 <p>This field should be used by clients to determine if the event
 only provides a rendering update to the message content,
 such as for an <a href=""https://zulip.readthedocs.io/en/latest/subsystems/sending-messages.html#inline-url-previews"">inline URL preview</a>.
-When <code>True</code>, the event does not reflect a user-generated edit
+When <code>true</code>, the event does not reflect a user-generated edit
 and does not modify the message history.</p>
 <p><strong>Changes</strong>: New in Zulip 5.0 (feature level 114). Clients can
 correctly identify these rendering update event with earlier
@@ -3570,15 +3570,15 @@
 <p>The choice the editing user made about which messages should be
 affected by a stream/topic edit:</p>
 <ul>
-<li><code>change_one</code> =&gt; Just change the one indicated in <code>message_id</code>.</li>
-<li><code>change_later</code> =&gt; Change messages in the same topic that had
+<li><code>""change_one""</code>: Just change the one indicated in <code>message_id</code>.</li>
+<li><code>""change_later""</code>: Change messages in the same topic that had
   been sent after this one.</li>
-<li><code>change_all</code>=&gt; Change all messages in that topic.</li>
+<li><code>""change_all""</code>: Change all messages in that topic.</li>
 </ul>
 <p>This parameter should be used to decide whether to change
 navigation and compose box state in response to the edit. For
 example, if the user was previously in topic narrow, and the
-topic was edited with <code>change_later</code> or <code>change_all</code>, the Zulip
+topic was edited with <code>""change_later""</code> or <code>""change_all""</code>, the Zulip
 web app will automatically navigate to the new topic narrow.
 Similarly, a message being composed to the old topic should
 have its recipient changed to the new topic.</p>
@@ -4543,7 +4543,7 @@
 <li>
 <p><code>author_id</code>: <span class=""api-field-type"">integer | null</span></p>
 <p>The user ID of the user who uploaded the custom emoji.
-Will be null if the uploader is unknown.</p>
+Will be <code>null</code> if the uploader is unknown.</p>
 <p><strong>Changes</strong>: New in Zulip 3.0 (feature level 7). Previously
 was accessible via an <code>author</code> object with an <code>id</code> field.</p>
 </li>
@@ -4715,12 +4715,12 @@
 <li>
 <p><code>deleted_timestamp</code>: <span class=""api-field-type"">number | null</span></p>
 <p>The timestamp of when the export was deleted.
-Null if it wasn't.</p>
+If <code>null</code>, it wasn't deleted.</p>
 </li>
 <li>
 <p><code>failed_timestamp</code>: <span class=""api-field-type"">number | null</span></p>
 <p>The timestamp of when the export failed.
-Null if it didn't.</p>
+If <code>null</code>, it didn't fail.</p>
 </li>
 <li>
 <p><code>export_url</code>: <span class=""api-field-type"">string | null</span></p>
@@ -4787,13 +4787,13 @@
 </li>
 <li>
 <p><code>default_sending_stream</code>: <span class=""api-field-type"">string | null</span></p>
-<p>The default sending stream of the bot. Null if the bot doesn't
+<p>The default sending stream of the bot. If <code>null</code>, the bot doesn't
 have a default sending stream.</p>
 </li>
 <li>
 <p><code>default_events_register_stream</code>: <span class=""api-field-type"">string | null</span></p>
-<p>The default stream for which the bot receives events/register data. Null if
-the bot doesn't have such a default stream.</p>
+<p>The default stream for which the bot receives events/register data.
+If <code>null</code>, the bot doesn't have such a default stream.</p>
 </li>
 <li>
 <p><code>default_all_public_streams</code>: <span class=""api-field-type"">boolean</span></p>
@@ -4806,7 +4806,7 @@
 <li>
 <p><code>owner_id</code>: <span class=""api-field-type"">integer | null</span></p>
 <p>The user ID of the bot's owner.</p>
-<p>Null if the bot has no owner.</p>
+<p>If <code>null</code>, the bot has no owner.</p>
 </li>
 <li>
 <p><code>services</code>: <span class=""api-field-type"">(object | object)[]</span></p>
@@ -4898,13 +4898,13 @@
 </li>
 <li>
 <p><code>default_sending_stream</code>: <span class=""api-field-type"">string | null</span></p>
-<p>The default sending stream of the bot. Null if the bot doesn't
+<p>The default sending stream of the bot. If <code>null</code>, the bot doesn't
 have a default sending stream.</p>
 </li>
 <li>
 <p><code>default_events_register_stream</code>: <span class=""api-field-type"">string | null</span></p>
-<p>The default stream for which the bot receives events/register data. Null if
-the bot doesn't have such a default stream.</p>
+<p>The default stream for which the bot receives events/register data.
+If <code>null</code>, the bot doesn't have such a default stream.</p>
 </li>
 <li>
 <p><code>default_all_public_streams</code>: <span class=""api-field-type"">boolean</span></p>
@@ -4917,7 +4917,7 @@
 <li>
 <p><code>owner_id</code>: <span class=""api-field-type"">integer | null</span></p>
 <p>The user ID of the bot's owner.</p>
-<p>Null if the bot has no owner.</p>
+<p>If <code>null</code>, the bot has no owner.</p>
 </li>
 <li>
 <p><code>services</code>: <span class=""api-field-type"">(object | object)[]</span></p>
@@ -5276,7 +5276,7 @@
 <li>
 <p><code>default_code_block_language</code>: <span class=""api-field-type"">string | null</span></p>
 <p>The default pygments language code to be used for a code blocks
-in this organization. Null if no default has been set.</p>
+in this organization. If <code>null</code>, no default has been set.</p>
 </li>
 <li>
 <p><code>default_language</code>: <span class=""api-field-type"">string</span></p>
@@ -5304,12 +5304,12 @@
 <p><code>edit_topic_policy</code>: <span class=""api-field-type"">integer</span></p>
 <p>The <a href=""/api/roles-and-permissions#permission-levels"">policy</a> for which users can edit topics of any message.</p>
 <ul>
-<li>1 = members only</li>
-<li>2 = admins only</li>
-<li>3 = <a href=""/api/roles-and-permissions#determining-if-a-user-is-a-full-member"">full members</a> only</li>
-<li>4 = moderators only</li>
-<li>5 = everyone</li>
-<li>6 = nobody</li>
+<li>1 = Members only</li>
+<li>2 = Admins only</li>
+<li>3 = <a href=""/api/roles-and-permissions#determining-if-a-user-is-a-full-member"">Full members</a> only</li>
+<li>4 = Moderators only</li>
+<li>5 = Everyone</li>
+<li>6 = Nobody</li>
 </ul>
 <p><strong>Changes</strong>: New in Zulip 5.0 (feature level 75), replacing the
 previous <code>allow_community_topic_editing</code> boolean. Nobody added
@@ -5412,7 +5412,7 @@
 <p>Messages sent more than this many seconds ago cannot be deleted
 with this organization's
 <a href=""/help/restrict-message-editing-and-deletion"">message deletion policy</a>.</p>
-<p>Will not be 0. A 'null' value means no limit: messages can be deleted
+<p>Will not be 0. A <code>null</code> value means no limit: messages can be deleted
 regardless of how long ago they were sent.</p>
 <p><strong>Changes</strong>: No limit was represented using the
 special value <code>0</code> before Zulip 5.0 (feature level 100).</p>
@@ -5431,7 +5431,7 @@
 stream by members with this organization's <a href=""/help/restrict-moving-messages"">message move
 policy</a>. This setting does not
 affect moderators and administrators.</p>
-<p>Will not be 0. A 'null' value means no limit: messages can be moved
+<p>Will not be 0. A <code>null</code> value means no limit: messages can be moved
 regardless of how long ago they were sent.</p>
 <p><strong>Changes</strong>: New in Zulip 7.0 (feature level 162). Previously, this
 limit was always 72 hours.</p>
@@ -5442,7 +5442,7 @@
 streams by members with this organization's <a href=""/help/restrict-moving-messages"">message move
 policy</a>. This setting does not
 affect moderators and administrators.</p>
-<p>Will not be 0. A 'null' value means no limit: messages can be moved
+<p>Will not be 0. A <code>null</code> value means no limit: messages can be moved
 regardless of how long ago they were sent.</p>
 <p><strong>Changes</strong>: New in Zulip 7.0 (feature level 162). Previously, it
 was not possible to add a time limit for moving messages.</p>
@@ -5598,12 +5598,12 @@
 <p>The <a href=""/api/roles-and-permissions#permission-levels"">policy</a> for who can use wildcard mentions in
 large streams.</p>
 <ul>
-<li>1 =&gt; Any user can use wildcard mentions in large streams.</li>
-<li>2 =&gt; Only members can use wildcard mentions in large streams.</li>
-<li>3 =&gt; Only <a href=""/api/roles-and-permissions#determining-if-a-user-is-a-full-member"">full members</a> can use wildcard mentions in large streams.</li>
-<li>5 =&gt; Only organization administrators can use wildcard mentions in large streams.</li>
-<li>6 =&gt; Nobody can use wildcard mentions in large streams.</li>
-<li>7 =&gt; Only organization administrators and moderators can use wildcard mentions in large streams.</li>
+<li>1 = Any user can use wildcard mentions in large streams.</li>
+<li>2 = Only members can use wildcard mentions in large streams.</li>
+<li>3 = Only <a href=""/api/roles-and-permissions#determining-if-a-user-is-a-full-member"">full members</a> can use wildcard mentions in large streams.</li>
+<li>5 = Only organization administrators can use wildcard mentions in large streams.</li>
+<li>6 = Nobody can use wildcard mentions in large streams.</li>
+<li>7 = Only organization administrators and moderators can use wildcard mentions in large streams.</li>
 </ul>
 <p>All users will receive a warning/reminder when using
 mentions in large streams, even when permitted to do so.</p>
@@ -5898,7 +5898,7 @@
 <p>Whether the server has tried to send the scheduled message
 and it failed to successfully send.</p>
 <p>Clients that support unscheduling and editing scheduled messages
-should display scheduled messages with <code>failed = true</code> with an
+should display scheduled messages with <code>""failed"": true</code> with an
 indicator that the server failed to send the message at the
 scheduled time, so that the user is aware of the failure and can
 get the content of the scheduled message.</p>
@@ -5985,7 +5985,7 @@
 <p>Whether the server has tried to send the scheduled message
 and it failed to successfully send.</p>
 <p>Clients that support unscheduling and editing scheduled messages
-should display scheduled messages with <code>failed = true</code> with an
+should display scheduled messages with <code>""failed"": true</code> with an
 indicator that the server failed to send the message at the
 scheduled time, so that the user is aware of the failure and can
 get the content of the scheduled message.</p>
diff -r -B -u current_api_html/get-is-user-group-member.html new_api_html/get-is-user-group-member.html
--- current_api_html/get-is-user-group-member.html	2023-05-15 15:06:02.746174907 +0200
+++ new_api_html/get-is-user-group-member.html	2023-05-15 15:03:34.205164942 +0200
@@ -306,7 +306,7 @@
         <span class=""api-argument-example-label"">Example</span>: <code>false</code>
     </div>
     <div class=""api-description""><p>Whether to consider only the direct members of user group and not members
-of its subgroups. Default is <code>False</code>.</p></div>
+of its subgroups. Default is <code>false</code>.</p></div>
     <hr>
 </div>
 
diff -r -B -u current_api_html/get-message-history.html new_api_html/get-message-history.html
--- current_api_html/get-message-history.html	2023-05-15 15:05:56.926135124 +0200
+++ new_api_html/get-message-history.html	2023-05-15 15:03:27.109117005 +0200
@@ -363,10 +363,10 @@
 <li>
 <p><code>user_id</code>: <span class=""api-field-type"">integer | null</span></p>
 <p>The ID of the user that made the edit.</p>
-<p>Will be null only for edit history
+<p>Will be <code>null</code> only for edit history
 events predating March 2017.</p>
 <p>Clients can display edit history events where this
-is null as modified by either the sender (for content
+is <code>null</code> as modified by either the sender (for content
 edits) or an unknown user (for topic edits).</p>
 </li>
 <li>
diff -r -B -u current_api_html/get-message.html new_api_html/get-message.html
--- current_api_html/get-message.html	2023-05-15 15:05:56.730133785 +0200
+++ new_api_html/get-message.html	2023-05-15 15:03:26.789114844 +0200
@@ -334,7 +334,7 @@
 <p>The raw Markdown content of the message.</p>
 <p><strong>Deprecated</strong> and to be removed once no longer required for
 legacy clients. Modern clients should prefer passing
-<code>apply_markdown=false</code> to request raw message content.</p>
+<code>""apply_markdown"": false</code> to request raw message content.</p>
 </li>
 <li>
 <p><code>message</code>: <span class=""api-field-type"">object</span></p>
@@ -343,7 +343,7 @@
 <ul>
 <li>
 <p><code>avatar_url</code>: <span class=""api-field-type"">string | null</span></p>
-<p>The URL of the user's avatar. Can be null only if client_gravatar was passed,
+<p>The URL of the user's avatar. Can be <code>null</code> only if client_gravatar was passed,
 which means that the user has not uploaded an avatar in Zulip, and the
 client should compute the gravatar URL by hashing the
 user's email address itself for this user.</p>
@@ -438,10 +438,10 @@
 <li>
 <p><code>user_id</code>: <span class=""api-field-type"">integer | null</span></p>
 <p>The ID of the user that made the edit.</p>
-<p>Will be null only for edit history
+<p>Will be <code>null</code> only for edit history
 events predating March 2017.</p>
 <p>Clients can display edit history events where this
-is null as modified by either the sender (for content
+is <code>null</code> as modified by either the sender (for content
 edits) or an unknown user (for topic edits).</p>
 </li>
 </ul>
diff -r -B -u current_api_html/get-messages.html new_api_html/get-messages.html
--- current_api_html/get-messages.html	2023-05-15 15:05:56.318130969 +0200
+++ new_api_html/get-messages.html	2023-05-15 15:03:26.297111521 +0200
@@ -285,7 +285,7 @@
 well as some metadata that makes it easy for a client to determine
 whether there are more messages matching the query that were not
 returned due to the <code>num_before</code> and <code>num_after</code> limits.</p>
-<p>We recommend using <code>num_before &lt;= 1000</code> and <code>num_after &lt;= 1000</code> to
+<p>We recommend using <code>""num_before"": 1000</code> and <code>""num_after"": 1000</code> to
 avoid generating very large HTTP responses. A maximum of 5000 messages
 can be obtained per request; attempting to exceed this will result in an
 error.</p>
@@ -374,7 +374,7 @@
 <code>first_unread</code> functionality was supported in Zulip 2.1.x
 and older by not sending <code>anchor</code> and using <code>use_first_unread_anchor</code>.</p>
 <p>In Zulip 2.1.x and older, <code>oldest</code> can be emulated with
-<code>anchor=0</code>, and <code>newest</code> with <code>anchor=10000000000000000</code>
+<code>""anchor"": ""0</code>, and <code>newest</code> with <code>""anchor"": 10000000000000000</code>
 (that specific large value works around a bug in Zulip
 2.1.x and older in the <code>found_newest</code> return value).</p></div>
     <hr>
@@ -469,11 +469,11 @@
     <div class=""api-example"">
         <span class=""api-argument-example-label"">Example</span>: <code>true</code>
     </div>
-    <div class=""api-description""><p>Legacy way to specify <code>anchor=""first_unread""</code> in Zulip 2.1.x and older.</p>
+    <div class=""api-description""><p>Legacy way to specify <code>""anchor"": ""first_unread""</code> in Zulip 2.1.x and older.</p>
 <p>Whether to use the (computed by the server) first unread message
 matching the narrow as the <code>anchor</code>. Mutually exclusive with <code>anchor</code>.</p>
 <p><strong>Changes</strong>: Deprecated in Zulip 3.0 (feature level 1) and replaced by
-<code>anchor=""first_unread""</code>.</p>
+<code>""anchor"": ""first_unread""</code>.</p>
 <p>Defaults to <code>false</code>.</p></div>
     <hr>
 </div>
@@ -504,7 +504,7 @@
 response. If the message with the ID specified
 in the request does not exist, did not match
 the narrow, or was excluded via
-<code>include_anchor=false</code>, this will be false.</p>
+<code>""include_anchor"": false</code>, this will be false.</p>
 </li>
 <li>
 <p><code>history_limited</code>: <span class=""api-field-type"">boolean</span></p>
@@ -520,7 +520,7 @@
 <ul>
 <li>
 <p><code>avatar_url</code>: <span class=""api-field-type"">string | null</span></p>
-<p>The URL of the user's avatar. Can be null only if client_gravatar was passed,
+<p>The URL of the user's avatar. Can be <code>null</code> only if client_gravatar was passed,
 which means that the user has not uploaded an avatar in Zulip, and the
 client should compute the gravatar URL by hashing the
 user's email address itself for this user.</p>
@@ -615,10 +615,10 @@
 <li>
 <p><code>user_id</code>: <span class=""api-field-type"">integer | null</span></p>
 <p>The ID of the user that made the edit.</p>
-<p>Will be null only for edit history
+<p>Will be <code>null</code> only for edit history
 events predating March 2017.</p>
 <p>Clients can display edit history events where this
-is null as modified by either the sender (for content
+is <code>null</code> as modified by either the sender (for content
 edits) or an unknown user (for topic edits).</p>
 </li>
 </ul>
diff -r -B -u current_api_html/get-own-user.html new_api_html/get-own-user.html
--- current_api_html/get-own-user.html	2023-05-15 15:06:00.466159320 +0200
+++ new_api_html/get-own-user.html	2023-05-15 15:03:31.453146347 +0200
@@ -359,11 +359,11 @@
 <p><a href=""/api/roles-and-permissions"">Organization-level role</a> of the user.
 Possible values are:</p>
 <ul>
-<li>Organization owner =&gt; 100</li>
-<li>Organization administrator =&gt; 200</li>
-<li>Organization moderator =&gt; 300</li>
-<li>Member =&gt; 400</li>
-<li>Guest =&gt; 600</li>
+<li>100 = Organization owner</li>
+<li>200 = Organization administrator</li>
+<li>300 = Organization moderator</li>
+<li>400 = Member</li>
+<li>600 = Guest</li>
 </ul>
 <p><strong>Changes</strong>: New in Zulip 4.0 (feature level 59).</p>
 </li>
@@ -395,7 +395,7 @@
 <p><code>max_message_id</code>: <span class=""api-field-type"">integer</span></p>
 <p>The integer ID of the last message received by your account.</p>
 <p><strong>Deprecated</strong>. We plan to remove this in favor of recommending
-using <code>GET /messages</code> with <code>anchor=""newest""</code>.</p>
+using <code>GET /messages</code> with <code>""anchor"": ""newest""</code>.</p>
 </li>
 <li>
 <p><code>user_id</code>: <span class=""api-field-type"">integer</span></p>
@@ -403,7 +403,7 @@
 </li>
 <li>
 <p><code>delivery_email</code>: <span class=""api-field-type"">string | null</span></p>
-<p>The user's real email address. This value will be <code>None</code> if you cannot
+<p>The user's real email address. This value will be <code>null</code> if you cannot
 access this user's real email address. For bot users, this field is
 always set to the real email of the bot, because bot users always have
 <code>email_address_visibility</code> as <code>EMAIL_ADDRESS_VISIBILITY_EVERYONE</code>.</p>
@@ -411,7 +411,7 @@
 only when <code>email_address_visibility</code> was restricted and you had access to
 the user's real email. Now, this field is always present, including the case
 when <code>email_address_visibility</code> is set to <code>EMAIL_ADDRESS_VISIBILITY_EVERYONE</code>,
-with the value being <code>None</code> if you don't have access to the user's real email.
+with the value being <code>null</code> if you don't have access to the user's real email.
 For bot users, this field is now always set to the real email irrespective of
 <code>email_address_visibility</code> setting.</p>
 </li>
diff -r -B -u current_api_html/get-read-receipts.html new_api_html/get-read-receipts.html
--- current_api_html/get-read-receipts.html	2023-05-15 15:05:57.326137858 +0200
+++ new_api_html/get-read-receipts.html	2023-05-15 15:03:27.725121165 +0200
@@ -323,7 +323,7 @@
 <p>An array of IDs of users who have marked the target message as
 read and whose read status is available to the current user.</p>
 <p>The IDs of users who have disabled sending read receipts
-(<code>send_read_receipts=false</code>) will never appear in the response,
+(<code>""send_read_receipts"": false</code>) will never appear in the response,
 nor will the message's sender. Additionally, the IDs of any users
 who have been muted by the current user or who have muted the
 current user will not be included in the response.</p>
diff -r -B -u current_api_html/get-scheduled-messages.html new_api_html/get-scheduled-messages.html
--- current_api_html/get-scheduled-messages.html	2023-05-15 15:05:57.414138459 +0200
+++ new_api_html/get-scheduled-messages.html	2023-05-15 15:03:28.041123299 +0200
@@ -336,7 +336,7 @@
 <p>Whether the server has tried to send the scheduled message
 and it failed to successfully send.</p>
 <p>Clients that support unscheduling and editing scheduled messages
-should display scheduled messages with <code>failed = true</code> with an
+should display scheduled messages with <code>""failed"": true</code> with an
 indicator that the server failed to send the message at the
 scheduled time, so that the user is aware of the failure and can
 get the content of the scheduled message.</p>
diff -r -B -u current_api_html/get-server-settings.html new_api_html/get-server-settings.html
--- current_api_html/get-server-settings.html	2023-05-15 15:06:03.578180596 +0200
+++ new_api_html/get-server-settings.html	2023-05-15 15:03:35.529173890 +0200
@@ -390,7 +390,7 @@
 <p><code>display_icon</code>: <span class=""api-field-type"">string | null</span></p>
 <p>URL for an image to be displayed as an icon in all buttons for
 the external authentication method.</p>
-<p>When null, no icon should be displayed.</p>
+<p>When <code>null</code>, no icon should be displayed.</p>
 </li>
 <li>
 <p><code>login_url</code>: <span class=""api-field-type"">string</span></p>
diff -r -B -u current_api_html/get-stream-by-id.html new_api_html/get-stream-by-id.html
--- current_api_html/get-stream-by-id.html	2023-05-15 15:05:59.138150243 +0200
+++ new_api_html/get-stream-by-id.html	2023-05-15 15:03:30.029136727 +0200
@@ -342,10 +342,10 @@
 <p><code>stream_post_policy</code>: <span class=""api-field-type"">integer</span></p>
 <p><a href=""/api/roles-and-permissions#permission-levels"">Policy</a> for which users can post messages to the stream.</p>
 <ul>
-<li>1 =&gt; Any user can post.</li>
-<li>2 =&gt; Only administrators can post.</li>
-<li>3 =&gt; Only <a href=""/api/roles-and-permissions#determining-if-a-user-is-a-full-member"">full members</a> can post.</li>
-<li>4 =&gt; Only moderators can post.</li>
+<li>1 = Any user can post.</li>
+<li>2 = Only administrators can post.</li>
+<li>3 = Only <a href=""/api/roles-and-permissions#determining-if-a-user-is-a-full-member"">full members</a> can post.</li>
+<li>4 = Only moderators can post.</li>
 </ul>
 <p><strong>Changes</strong>: New in Zulip 3.0 (feature level 1), replacing the previous
 <code>is_announcement_only</code> boolean.</p>
@@ -365,8 +365,8 @@
 <li>
 <p><code>history_public_to_subscribers</code>: <span class=""api-field-type"">boolean</span></p>
 <p>Whether the history of the stream is public to its subscribers.</p>
-<p>Currently always true for public streams (i.e. invite_only=False implies
-history_public_to_subscribers=True), but clients should not make that
+<p>Currently always true for public streams (i.e. <code>""invite_only"": false</code> implies
+<code>""history_public_to_subscribers"": true</code>), but clients should not make that
 assumption, as we may change that behavior in the future.</p>
 </li>
 <li>
@@ -375,7 +375,7 @@
 <p>Intended to help clients determine whether they need to display
 UI like the ""more topics"" widget that would suggest the stream
 has older history that can be accessed.</p>
-<p>Null is used for streams with no message history.</p>
+<p>Is <code>null</code> for streams with no message history.</p>
 </li>
 <li>
 <p><code>is_announcement_only</code>: <span class=""api-field-type"">boolean</span></p>
diff -r -B -u current_api_html/get-streams.html new_api_html/get-streams.html
--- current_api_html/get-streams.html	2023-05-15 15:05:58.966149067 +0200
+++ new_api_html/get-streams.html	2023-05-15 15:03:29.893135809 +0200
@@ -428,10 +428,10 @@
 <p><code>stream_post_policy</code>: <span class=""api-field-type"">integer</span></p>
 <p><a href=""/api/roles-and-permissions#permission-levels"">Policy</a> for which users can post messages to the stream.</p>
 <ul>
-<li>1 =&gt; Any user can post.</li>
-<li>2 =&gt; Only administrators can post.</li>
-<li>3 =&gt; Only <a href=""/api/roles-and-permissions#determining-if-a-user-is-a-full-member"">full members</a> can post.</li>
-<li>4 =&gt; Only moderators can post.</li>
+<li>1 = Any user can post.</li>
+<li>2 = Only administrators can post.</li>
+<li>3 = Only <a href=""/api/roles-and-permissions#determining-if-a-user-is-a-full-member"">full members</a> can post.</li>
+<li>4 = Only moderators can post.</li>
 </ul>
 <p><strong>Changes</strong>: New in Zulip 3.0 (feature level 1), replacing the previous
 <code>is_announcement_only</code> boolean.</p>
@@ -451,8 +451,8 @@
 <li>
 <p><code>history_public_to_subscribers</code>: <span class=""api-field-type"">boolean</span></p>
 <p>Whether the history of the stream is public to its subscribers.</p>
-<p>Currently always true for public streams (i.e. invite_only=False implies
-history_public_to_subscribers=True), but clients should not make that
+<p>Currently always true for public streams (i.e. <code>""invite_only"": false</code> implies
+<code>""history_public_to_subscribers"": true</code>), but clients should not make that
 assumption, as we may change that behavior in the future.</p>
 </li>
 <li>
@@ -461,7 +461,7 @@
 <p>Intended to help clients determine whether they need to display
 UI like the ""more topics"" widget that would suggest the stream
 has older history that can be accessed.</p>
-<p>Null is used for streams with no message history.</p>
+<p>Is <code>null</code> for streams with no message history.</p>
 </li>
 <li>
 <p><code>is_announcement_only</code>: <span class=""api-field-type"">boolean</span></p>
diff -r -B -u current_api_html/get-subscriptions.html new_api_html/get-subscriptions.html
--- current_api_html/get-subscriptions.html	2023-05-15 15:05:58.106143189 +0200
+++ new_api_html/get-subscriptions.html	2023-05-15 15:03:29.049130107 +0200
@@ -386,7 +386,7 @@
 <p><code>desktop_notifications</code>: <span class=""api-field-type"">boolean | null</span></p>
 <p>A boolean specifying whether desktop notifications
 are enabled for the given stream.</p>
-<p>A null value means the value of this setting
+<p>A <code>null</code> value means the value of this setting
 should be inherited from the user-level default
 setting, enable_stream_desktop_notifications, for
 this stream.</p>
@@ -395,7 +395,7 @@
 <p><code>email_notifications</code>: <span class=""api-field-type"">boolean | null</span></p>
 <p>A boolean specifying whether email notifications
 are enabled for the given stream.</p>
-<p>A null value means the value of this setting
+<p>A <code>null</code> value means the value of this setting
 should be inherited from the user-level default
 setting, enable_stream_email_notifications, for
 this stream.</p>
@@ -405,7 +405,7 @@
 <p>A boolean specifying whether wildcard mentions
 trigger notifications as though they were personal
 mentions in this stream.</p>
-<p>A null value means the value of this setting
+<p>A <code>null</code> value means the value of this setting
 should be inherited from the user-level default
 setting, wildcard_mentions_notify, for
 this stream.</p>
@@ -414,7 +414,7 @@
 <p><code>push_notifications</code>: <span class=""api-field-type"">boolean | null</span></p>
 <p>A boolean specifying whether push notifications
 are enabled for the given stream.</p>
-<p>A null value means the value of this setting
+<p>A <code>null</code> value means the value of this setting
 should be inherited from the user-level default
 setting, enable_stream_push_notifications, for
 this stream.</p>
@@ -423,7 +423,7 @@
 <p><code>audible_notifications</code>: <span class=""api-field-type"">boolean | null</span></p>
 <p>A boolean specifying whether audible notifications
 are enabled for the given stream.</p>
-<p>A null value means the value of this setting
+<p>A <code>null</code> value means the value of this setting
 should be inherited from the user-level default
 setting, enable_stream_audible_notifications, for
 this stream.</p>
@@ -445,7 +445,7 @@
 <code>All messages</code> view (previously known as <code>Home</code> view).</p>
 <p><strong>Changes</strong>: Prior to Zulip 2.1.0, this feature was
 represented by the more confusingly named <code>in_home_view</code> (with the
-opposite value, <code>in_home_view=!is_muted</code>).</p>
+opposite value, <code>in_home_view = !is_muted</code>).</p>
 </li>
 <li>
 <p><code>in_home_view</code>: <span class=""api-field-type"">boolean</span></p>
@@ -472,10 +472,10 @@
 <p><code>stream_post_policy</code>: <span class=""api-field-type"">integer</span></p>
 <p><a href=""/api/roles-and-permissions#permission-levels"">Policy</a> for which users can post messages to the stream.</p>
 <ul>
-<li>1 =&gt; Any user can post.</li>
-<li>2 =&gt; Only administrators can post.</li>
-<li>3 =&gt; Only <a href=""/api/roles-and-permissions#determining-if-a-user-is-a-full-member"">full members</a> can post.</li>
-<li>4 =&gt; Only moderators can post.</li>
+<li>1 = Any user can post.</li>
+<li>2 = Only administrators can post.</li>
+<li>3 = Only <a href=""/api/roles-and-permissions#determining-if-a-user-is-a-full-member"">full members</a> can post.</li>
+<li>4 = Only moderators can post.</li>
 </ul>
 <p><strong>Changes</strong>: New in Zulip 3.0 (feature level 1), replacing the previous
 <code>is_announcement_only</code> boolean.</p>
@@ -495,8 +495,8 @@
 <li>
 <p><code>history_public_to_subscribers</code>: <span class=""api-field-type"">boolean</span></p>
 <p>Whether the history of the stream is public to its subscribers.</p>
-<p>Currently always true for public streams (i.e. invite_only=False implies
-history_public_to_subscribers=True), but clients should not make that
+<p>Currently always true for public streams (i.e. <code>""invite_only"": false</code> implies
+<code>""history_public_to_subscribers"": true</code>), but clients should not make that
 assumption, as we may change that behavior in the future.</p>
 </li>
 <li>
@@ -505,13 +505,13 @@
 <p>Intended to help clients determine whether they need to display
 UI like the ""more topics"" widget that would suggest the stream
 has older history that can be accessed.</p>
-<p>Null is used for streams with no message history.</p>
+<p>Is <code>null</code> for streams with no message history.</p>
 </li>
 <li>
 <p><code>stream_weekly_traffic</code>: <span class=""api-field-type"">integer | null</span></p>
 <p>The average number of messages sent to the stream in recent weeks,
 rounded to the nearest integer.</p>
-<p>Null means the stream was recently created and there is
+<p>If <code>null</code>, the stream was recently created and there is
 insufficient data to estimate the average traffic.</p>
 </li>
 <li>
diff -r -B -u current_api_html/get-user-by-email.html new_api_html/get-user-by-email.html
--- current_api_html/get-user-by-email.html	2023-05-15 15:06:00.710160988 +0200
+++ new_api_html/get-user-by-email.html	2023-05-15 15:03:31.741148293 +0200
@@ -367,7 +367,7 @@
 </li>
 <li>
 <p><code>delivery_email</code>: <span class=""api-field-type"">string | null</span></p>
-<p>The user's real email address. This value will be <code>None</code> if you cannot
+<p>The user's real email address. This value will be <code>null</code> if you cannot
 access user's real email address. For bot users, this field is always
 set to the real email of the bot, because bot users always have
 <code>email_address_visibility</code> as <code>EMAIL_ADDRESS_VISIBILITY_EVERYONE</code>.</p>
@@ -375,7 +375,7 @@
 only when <code>email_address_visibility</code> was restricted and you had access to the
 user's real email. Now, this field is always present, including the case when
 <code>email_address_visibility</code> is set to <code>EMAIL_ADDRESS_VISIBILITY_EVERYONE</code>,
-with the value being <code>None</code> if you don't have access the user's real email.
+with the value being <code>null</code> if you don't have access the user's real email.
 For bot users, this field is now always set to the real email irrespective of
 <code>email_address_visibility</code> setting.</p>
 </li>
@@ -435,7 +435,7 @@
 <p><code>bot_owner_id</code>: <span class=""api-field-type"">integer | null</span></p>
 <p>If the user is a bot (i.e. <code>is_bot</code> is true), then <code>bot_owner_id</code>
 is the user ID of the bot's owner (usually, whoever created the bot).</p>
-<p>Will be null for legacy bots that do not have an owner.</p>
+<p>Will be <code>null</code> for legacy bots that do not have an owner.</p>
 <p><strong>Changes</strong>: New in Zulip 3.0 (feature level 1). In previous
 versions, there was a <code>bot_owner</code> field containing the email
 address of the bot's owner.</p>
@@ -445,11 +445,11 @@
 <p><a href=""/api/roles-and-permissions"">Organization-level role</a> of the user.
 Possible values are:</p>
 <ul>
-<li>Organization owner =&gt; 100</li>
-<li>Organization administrator =&gt; 200</li>
-<li>Organization moderator =&gt; 300</li>
-<li>Member =&gt; 400</li>
-<li>Guest =&gt; 600</li>
+<li>100 = Organization owner</li>
+<li>200 = Organization administrator</li>
+<li>300 = Organization moderator</li>
+<li>400 = Member</li>
+<li>600 = Guest</li>
 </ul>
 <p><strong>Changes</strong>: New in Zulip 4.0 (feature level 59).</p>
 </li>
@@ -460,7 +460,7 @@
 <li>
 <p><code>avatar_url</code>: <span class=""api-field-type"">string | null</span></p>
 <p>URL for the user's avatar. Will be <code>null</code> if the <code>client_gravatar</code>
-query parameter was set to <code>True</code> and the user's avatar is hosted by
+query parameter was set to <code>true</code> and the user's avatar is hosted by
 the Gravatar provider (i.e. the user has never uploaded an avatar).</p>
 <p><strong>Changes</strong>: In Zulip 3.0 (feature level 18), if the client has the
 <code>user_avatar_url_field_optional</code> capability, this will be missing at
diff -r -B -u current_api_html/get-user-group-members.html new_api_html/get-user-group-members.html
--- current_api_html/get-user-group-members.html	2023-05-15 15:06:02.822175427 +0200
+++ new_api_html/get-user-group-members.html	2023-05-15 15:03:34.317165699 +0200
@@ -298,7 +298,7 @@
         <span class=""api-argument-example-label"">Example</span>: <code>false</code>
     </div>
     <div class=""api-description""><p>Whether to consider only the direct members of user group and not members
-of its subgroups. Default is <code>False</code>.</p></div>
+of its subgroups. Default is <code>false</code>.</p></div>
     <hr>
 </div>
 
diff -r -B -u current_api_html/get-user.html new_api_html/get-user.html
--- current_api_html/get-user.html	2023-05-15 15:06:00.594160196 +0200
+++ new_api_html/get-user.html	2023-05-15 15:03:31.593147293 +0200
@@ -360,7 +360,7 @@
 </li>
 <li>
 <p><code>delivery_email</code>: <span class=""api-field-type"">string | null</span></p>
-<p>The user's real email address. This value will be <code>None</code> if you cannot
+<p>The user's real email address. This value will be <code>null</code> if you cannot
 access user's real email address. For bot users, this field is always
 set to the real email of the bot, because bot users always have
 <code>email_address_visibility</code> as <code>EMAIL_ADDRESS_VISIBILITY_EVERYONE</code>.</p>
@@ -368,7 +368,7 @@
 only when <code>email_address_visibility</code> was restricted and you had access to the
 user's real email. Now, this field is always present, including the case when
 <code>email_address_visibility</code> is set to <code>EMAIL_ADDRESS_VISIBILITY_EVERYONE</code>,
-with the value being <code>None</code> if you don't have access the user's real email.
+with the value being <code>null</code> if you don't have access the user's real email.
 For bot users, this field is now always set to the real email irrespective of
 <code>email_address_visibility</code> setting.</p>
 </li>
@@ -428,7 +428,7 @@
 <p><code>bot_owner_id</code>: <span class=""api-field-type"">integer | null</span></p>
 <p>If the user is a bot (i.e. <code>is_bot</code> is true), then <code>bot_owner_id</code>
 is the user ID of the bot's owner (usually, whoever created the bot).</p>
-<p>Will be null for legacy bots that do not have an owner.</p>
+<p>Will be <code>null</code> for legacy bots that do not have an owner.</p>
 <p><strong>Changes</strong>: New in Zulip 3.0 (feature level 1). In previous
 versions, there was a <code>bot_owner</code> field containing the email
 address of the bot's owner.</p>
@@ -438,11 +438,11 @@
 <p><a href=""/api/roles-and-permissions"">Organization-level role</a> of the user.
 Possible values are:</p>
 <ul>
-<li>Organization owner =&gt; 100</li>
-<li>Organization administrator =&gt; 200</li>
-<li>Organization moderator =&gt; 300</li>
-<li>Member =&gt; 400</li>
-<li>Guest =&gt; 600</li>
+<li>100 = Organization owner</li>
+<li>200 = Organization administrator</li>
+<li>300 = Organization moderator</li>
+<li>400 = Member</li>
+<li>600 = Guest</li>
 </ul>
 <p><strong>Changes</strong>: New in Zulip 4.0 (feature level 59).</p>
 </li>
@@ -453,7 +453,7 @@
 <li>
 <p><code>avatar_url</code>: <span class=""api-field-type"">string | null</span></p>
 <p>URL for the user's avatar. Will be <code>null</code> if the <code>client_gravatar</code>
-query parameter was set to <code>True</code> and the user's avatar is hosted by
+query parameter was set to <code>true</code> and the user's avatar is hosted by
 the Gravatar provider (i.e. the user has never uploaded an avatar).</p>
 <p><strong>Changes</strong>: In Zulip 3.0 (feature level 18), if the client has the
 <code>user_avatar_url_field_optional</code> capability, this will be missing at
diff -r -B -u current_api_html/get-users.html new_api_html/get-users.html
--- current_api_html/get-users.html	2023-05-15 15:06:00.362158609 +0200
+++ new_api_html/get-users.html	2023-05-15 15:03:31.337145563 +0200
@@ -372,7 +372,7 @@
 </li>
 <li>
 <p><code>delivery_email</code>: <span class=""api-field-type"">string | null</span></p>
-<p>The user's real email address. This value will be <code>None</code> if you cannot
+<p>The user's real email address. This value will be <code>null</code> if you cannot
 access user's real email address. For bot users, this field is always
 set to the real email of the bot, because bot users always have
 <code>email_address_visibility</code> as <code>EMAIL_ADDRESS_VISIBILITY_EVERYONE</code>.</p>
@@ -380,7 +380,7 @@
 only when <code>email_address_visibility</code> was restricted and you had access to the
 user's real email. Now, this field is always present, including the case when
 <code>email_address_visibility</code> is set to <code>EMAIL_ADDRESS_VISIBILITY_EVERYONE</code>,
-with the value being <code>None</code> if you don't have access the user's real email.
+with the value being <code>null</code> if you don't have access the user's real email.
 For bot users, this field is now always set to the real email irrespective of
 <code>email_address_visibility</code> setting.</p>
 </li>
@@ -440,7 +440,7 @@
 <p><code>bot_owner_id</code>: <span class=""api-field-type"">integer | null</span></p>
 <p>If the user is a bot (i.e. <code>is_bot</code> is true), then <code>bot_owner_id</code>
 is the user ID of the bot's owner (usually, whoever created the bot).</p>
-<p>Will be null for legacy bots that do not have an owner.</p>
+<p>Will be <code>null</code> for legacy bots that do not have an owner.</p>
 <p><strong>Changes</strong>: New in Zulip 3.0 (feature level 1). In previous
 versions, there was a <code>bot_owner</code> field containing the email
 address of the bot's owner.</p>
@@ -450,11 +450,11 @@
 <p><a href=""/api/roles-and-permissions"">Organization-level role</a> of the user.
 Possible values are:</p>
 <ul>
-<li>Organization owner =&gt; 100</li>
-<li>Organization administrator =&gt; 200</li>
-<li>Organization moderator =&gt; 300</li>
-<li>Member =&gt; 400</li>
-<li>Guest =&gt; 600</li>
+<li>100 = Organization owner</li>
+<li>200 = Organization administrator</li>
+<li>300 = Organization moderator</li>
+<li>400 = Member</li>
+<li>600 = Guest</li>
 </ul>
 <p><strong>Changes</strong>: New in Zulip 4.0 (feature level 59).</p>
 </li>
@@ -465,7 +465,7 @@
 <li>
 <p><code>avatar_url</code>: <span class=""api-field-type"">string | null</span></p>
 <p>URL for the user's avatar. Will be <code>null</code> if the <code>client_gravatar</code>
-query parameter was set to <code>True</code> and the user's avatar is hosted by
+query parameter was set to <code>true</code> and the user's avatar is hosted by
 the Gravatar provider (i.e. the user has never uploaded an avatar).</p>
 <p><strong>Changes</strong>: In Zulip 3.0 (feature level 18), if the client has the
 <code>user_avatar_url_field_optional</code> capability, this will be missing at
diff -r -B -u current_api_html/outgoing-webhooks.html new_api_html/outgoing-webhooks.html
--- current_api_html/outgoing-webhooks.html	2023-05-15 15:05:55.246123644 +0200
+++ new_api_html/outgoing-webhooks.html	2023-05-15 15:03:24.033096234 +0200
@@ -365,7 +365,7 @@
 <ul>
 <li>
 <p><code>avatar_url</code>: <span class=""api-field-type"">string | null</span></p>
-<p>The URL of the user's avatar. Can be null only if client_gravatar was passed,
+<p>The URL of the user's avatar. Can be <code>null</code> only if client_gravatar was passed,
 which means that the user has not uploaded an avatar in Zulip, and the
 client should compute the gravatar URL by hashing the
 user's email address itself for this user.</p>
@@ -460,10 +460,10 @@
 <li>
 <p><code>user_id</code>: <span class=""api-field-type"">integer | null</span></p>
 <p>The ID of the user that made the edit.</p>
-<p>Will be null only for edit history
+<p>Will be <code>null</code> only for edit history
 events predating March 2017.</p>
 <p>Clients can display edit history events where this
-is null as modified by either the sender (for content
+is <code>null</code> as modified by either the sender (for content
 edits) or an unknown user (for topic edits).</p>
 </li>
 </ul>
diff -r -B -u current_api_html/real-time-events.html new_api_html/real-time-events.html
--- current_api_html/real-time-events.html	2023-05-15 15:06:04.730188473 +0200
+++ new_api_html/real-time-events.html	2023-05-15 15:03:37.257185570 +0200
@@ -331,7 +331,7 @@
 events, and have to filter out the events not relevant to
 your client in your client code. For most applications, one
 is only interested in messages, so one specifies:
-<code>event_types=['message']</code></p>
+<code>""event_types"": [""message""]</code></p>
 <p>Event types not supported by the server are ignored, in order to simplify
 the implementation of client apps that support multiple server versions.</p></div>
     <hr>
@@ -346,7 +346,7 @@
 like to receive events for.</p>
 <p>For example, to receive events for direct messages (including
 group direct messages) received by the user, one can use
-<code>narrow=[[""is"", ""dm""]]</code>.</p>
+<code>""narrow"": [[""is"", ""dm""]]</code>.</p>
 <p>Unlike the API for <a href=""/api/get-messages"">fetching messages</a>,
 this narrow parameter is simply a filter on messages that the
 user receives through their stream subscriptions (or because
diff -r -B -u current_api_html/register-queue.html new_api_html/register-queue.html
--- current_api_html/register-queue.html	2023-05-15 15:06:05.306192411 +0200
+++ new_api_html/register-queue.html	2023-05-15 15:03:38.429193493 +0200
@@ -438,7 +438,7 @@
 events, and have to filter out the events not relevant to
 your client in your client code. For most applications, one
 is only interested in messages, so one specifies:
-<code>event_types=['message']</code></p>
+<code>""event_types"": [""message""]</code></p>
 <p>Event types not supported by the server are ignored, in order to simplify
 the implementation of client apps that support multiple server versions.</p></div>
     <hr>
@@ -464,7 +464,7 @@
 <ul>
 <li>
 <p><code>notification_settings_null</code>: Boolean for whether the
-  client can handle the current API with null values for
+  client can handle the current API with <code>null</code> values for
   stream-level notification settings (which means the stream
   is not customized and should inherit the user's global
   notification settings for stream messages).
@@ -539,7 +539,7 @@
     <div class=""api-description""><p>Same as the <code>event_types</code> parameter except that the values in
 <code>fetch_event_types</code> are used to fetch initial data. If
 <code>fetch_event_types</code> is not provided, <code>event_types</code> is used and if
-<code>event_types</code> is not provided, this parameter defaults to <code>None</code>.</p>
+<code>event_types</code> is not provided, this parameter defaults to <code>null</code>.</p>
 <p>Event types not supported by the server are ignored, in order to simplify
 the implementation of client apps that support multiple server versions.</p></div>
     <hr>
@@ -554,7 +554,7 @@
 like to receive events for.</p>
 <p>For example, to receive events for direct messages (including
 group direct messages) received by the user, one can use
-<code>narrow=[[""is"", ""dm""]]</code>.</p>
+<code>""narrow"": [[""is"", ""dm""]]</code>.</p>
 <p>Unlike the API for <a href=""/api/get-messages"">fetching messages</a>,
 this narrow parameter is simply a filter on messages that the
 user receives through their stream subscriptions (or because
@@ -584,7 +584,7 @@
 <li>
 <p><code>queue_id</code>: <span class=""api-field-type"">string | null</span></p>
 <p>The ID of the queue that has been allocated for your client.</p>
-<p>Will be None only for unauthenticated access in realms that have
+<p>Will be <code>null</code> only for unauthenticated access in realms that have
 enabled the <a href=""/help/public-access-option"">public access option</a>.</p>
 </li>
 <li>
@@ -805,7 +805,7 @@
 moment of this request.</p>
 <p><strong>Deprecated</strong>: This field may be removed in future versions as it no
 longer has a clear purpose. Clients wishing to fetch the latest messages
-should pass <code>anchor=""latest""</code> to <code>GET /messages</code>.</p>
+should pass <code>""anchor"": ""latest""</code> to <code>GET /messages</code>.</p>
 </li>
 <li>
 <p><code>max_stream_name_length</code>: <span class=""api-field-type"">integer</span></p>
@@ -914,7 +914,7 @@
 <p>Whether the server has tried to send the scheduled message
 and it failed to successfully send.</p>
 <p>Clients that support unscheduling and editing scheduled messages
-should display scheduled messages with <code>failed = true</code> with an
+should display scheduled messages with <code>""failed"": true</code> with an
 indicator that the server failed to send the message at the
 scheduled time, so that the user is aware of the failure and can
 get the content of the scheduled message.</p>
@@ -1184,13 +1184,13 @@
 </li>
 <li>
 <p><code>default_sending_stream</code>: <span class=""api-field-type"">string | null</span></p>
-<p>The default sending stream of the bot. Null if the bot doesn't
+<p>The default sending stream of the bot. If <code>null</code>, the bot doesn't
 have a default sending stream.</p>
 </li>
 <li>
 <p><code>default_events_register_stream</code>: <span class=""api-field-type"">string | null</span></p>
-<p>The default stream for which the bot receives events/register data. Null if
-the bot doesn't have such a default stream.</p>
+<p>The default stream for which the bot receives events/register data.
+If <code>null</code>, the bot doesn't have such a default stream.</p>
 </li>
 <li>
 <p><code>default_all_public_streams</code>: <span class=""api-field-type"">boolean</span></p>
@@ -1203,7 +1203,7 @@
 <li>
 <p><code>owner_id</code>: <span class=""api-field-type"">integer | null</span></p>
 <p>The user ID of the bot's owner.</p>
-<p>Null if the bot has no owner.</p>
+<p>If <code>null</code>, the bot has no owner.</p>
 </li>
 <li>
 <p><code>services</code>: <span class=""api-field-type"">(object | object)[]</span></p>
@@ -1353,7 +1353,7 @@
 <p><code>desktop_notifications</code>: <span class=""api-field-type"">boolean | null</span></p>
 <p>A boolean specifying whether desktop notifications
 are enabled for the given stream.</p>
-<p>A null value means the value of this setting
+<p>A <code>null</code> value means the value of this setting
 should be inherited from the user-level default
 setting, enable_stream_desktop_notifications, for
 this stream.</p>
@@ -1362,7 +1362,7 @@
 <p><code>email_notifications</code>: <span class=""api-field-type"">boolean | null</span></p>
 <p>A boolean specifying whether email notifications
 are enabled for the given stream.</p>
-<p>A null value means the value of this setting
+<p>A <code>null</code> value means the value of this setting
 should be inherited from the user-level default
 setting, enable_stream_email_notifications, for
 this stream.</p>
@@ -1372,7 +1372,7 @@
 <p>A boolean specifying whether wildcard mentions
 trigger notifications as though they were personal
 mentions in this stream.</p>
-<p>A null value means the value of this setting
+<p>A <code>null</code> value means the value of this setting
 should be inherited from the user-level default
 setting, wildcard_mentions_notify, for
 this stream.</p>
@@ -1381,7 +1381,7 @@
 <p><code>push_notifications</code>: <span class=""api-field-type"">boolean | null</span></p>
 <p>A boolean specifying whether push notifications
 are enabled for the given stream.</p>
-<p>A null value means the value of this setting
+<p>A <code>null</code> value means the value of this setting
 should be inherited from the user-level default
 setting, enable_stream_push_notifications, for
 this stream.</p>
@@ -1390,7 +1390,7 @@
 <p><code>audible_notifications</code>: <span class=""api-field-type"">boolean | null</span></p>
 <p>A boolean specifying whether audible notifications
 are enabled for the given stream.</p>
-<p>A null value means the value of this setting
+<p>A <code>null</code> value means the value of this setting
 should be inherited from the user-level default
 setting, enable_stream_audible_notifications, for
 this stream.</p>
@@ -1412,7 +1412,7 @@
 <code>All messages</code> view (previously known as <code>Home</code> view).</p>
 <p><strong>Changes</strong>: Prior to Zulip 2.1.0, this feature was
 represented by the more confusingly named <code>in_home_view</code> (with the
-opposite value, <code>in_home_view=!is_muted</code>).</p>
+opposite value, <code>in_home_view = !is_muted</code>).</p>
 </li>
 <li>
 <p><code>in_home_view</code>: <span class=""api-field-type"">boolean</span></p>
@@ -1439,10 +1439,10 @@
 <p><code>stream_post_policy</code>: <span class=""api-field-type"">integer</span></p>
 <p><a href=""/api/roles-and-permissions#permission-levels"">Policy</a> for which users can post messages to the stream.</p>
 <ul>
-<li>1 =&gt; Any user can post.</li>
-<li>2 =&gt; Only administrators can post.</li>
-<li>3 =&gt; Only <a href=""/api/roles-and-permissions#determining-if-a-user-is-a-full-member"">full members</a> can post.</li>
-<li>4 =&gt; Only moderators can post.</li>
+<li>1 = Any user can post.</li>
+<li>2 = Only administrators can post.</li>
+<li>3 = Only <a href=""/api/roles-and-permissions#determining-if-a-user-is-a-full-member"">full members</a> can post.</li>
+<li>4 = Only moderators can post.</li>
 </ul>
 <p><strong>Changes</strong>: New in Zulip 3.0 (feature level 1), replacing the previous
 <code>is_announcement_only</code> boolean.</p>
@@ -1462,8 +1462,8 @@
 <li>
 <p><code>history_public_to_subscribers</code>: <span class=""api-field-type"">boolean</span></p>
 <p>Whether the history of the stream is public to its subscribers.</p>
-<p>Currently always true for public streams (i.e. invite_only=False implies
-history_public_to_subscribers=True), but clients should not make that
+<p>Currently always true for public streams (i.e. <code>""invite_only"": false</code> implies
+<code>""history_public_to_subscribers"": true</code>), but clients should not make that
 assumption, as we may change that behavior in the future.</p>
 </li>
 <li>
@@ -1472,13 +1472,13 @@
 <p>Intended to help clients determine whether they need to display
 UI like the ""more topics"" widget that would suggest the stream
 has older history that can be accessed.</p>
-<p>Null is used for streams with no message history.</p>
+<p>Is <code>null</code> for streams with no message history.</p>
 </li>
 <li>
 <p><code>stream_weekly_traffic</code>: <span class=""api-field-type"">integer | null</span></p>
 <p>The average number of messages sent to the stream in recent weeks,
 rounded to the nearest integer.</p>
-<p>Null means the stream was recently created and there is
+<p>If <code>null</code>, the stream was recently created and there is
 insufficient data to estimate the average traffic.</p>
 </li>
 <li>
@@ -1545,7 +1545,7 @@
 <p><code>desktop_notifications</code>: <span class=""api-field-type"">boolean | null</span></p>
 <p>A boolean specifying whether desktop notifications
 are enabled for the given stream.</p>
-<p>A null value means the value of this setting
+<p>A <code>null</code> value means the value of this setting
 should be inherited from the user-level default
 setting, enable_stream_desktop_notifications, for
 this stream.</p>
@@ -1554,7 +1554,7 @@
 <p><code>email_notifications</code>: <span class=""api-field-type"">boolean | null</span></p>
 <p>A boolean specifying whether email notifications
 are enabled for the given stream.</p>
-<p>A null value means the value of this setting
+<p>A <code>null</code> value means the value of this setting
 should be inherited from the user-level default
 setting, enable_stream_email_notifications, for
 this stream.</p>
@@ -1564,7 +1564,7 @@
 <p>A boolean specifying whether wildcard mentions
 trigger notifications as though they were personal
 mentions in this stream.</p>
-<p>A null value means the value of this setting
+<p>A <code>null</code> value means the value of this setting
 should be inherited from the user-level default
 setting, wildcard_mentions_notify, for
 this stream.</p>
@@ -1573,7 +1573,7 @@
 <p><code>push_notifications</code>: <span class=""api-field-type"">boolean | null</span></p>
 <p>A boolean specifying whether push notifications
 are enabled for the given stream.</p>
-<p>A null value means the value of this setting
+<p>A <code>null</code> value means the value of this setting
 should be inherited from the user-level default
 setting, enable_stream_push_notifications, for
 this stream.</p>
@@ -1582,7 +1582,7 @@
 <p><code>audible_notifications</code>: <span class=""api-field-type"">boolean | null</span></p>
 <p>A boolean specifying whether audible notifications
 are enabled for the given stream.</p>
-<p>A null value means the value of this setting
+<p>A <code>null</code> value means the value of this setting
 should be inherited from the user-level default
 setting, enable_stream_audible_notifications, for
 this stream.</p>
@@ -1604,7 +1604,7 @@
 <code>All messages</code> view (previously known as <code>Home</code> view).</p>
 <p><strong>Changes</strong>: Prior to Zulip 2.1.0, this feature was
 represented by the more confusingly named <code>in_home_view</code> (with the
-opposite value, <code>in_home_view=!is_muted</code>).</p>
+opposite value, <code>in_home_view = !is_muted</code>).</p>
 </li>
 <li>
 <p><code>in_home_view</code>: <span class=""api-field-type"">boolean</span></p>
@@ -1631,10 +1631,10 @@
 <p><code>stream_post_policy</code>: <span class=""api-field-type"">integer</span></p>
 <p><a href=""/api/roles-and-permissions#permission-levels"">Policy</a> for which users can post messages to the stream.</p>
 <ul>
-<li>1 =&gt; Any user can post.</li>
-<li>2 =&gt; Only administrators can post.</li>
-<li>3 =&gt; Only <a href=""/api/roles-and-permissions#determining-if-a-user-is-a-full-member"">full members</a> can post.</li>
-<li>4 =&gt; Only moderators can post.</li>
+<li>1 = Any user can post.</li>
+<li>2 = Only administrators can post.</li>
+<li>3 = Only <a href=""/api/roles-and-permissions#determining-if-a-user-is-a-full-member"">full members</a> can post.</li>
+<li>4 = Only moderators can post.</li>
 </ul>
 <p><strong>Changes</strong>: New in Zulip 3.0 (feature level 1), replacing the previous
 <code>is_announcement_only</code> boolean.</p>
@@ -1654,8 +1654,8 @@
 <li>
 <p><code>history_public_to_subscribers</code>: <span class=""api-field-type"">boolean</span></p>
 <p>Whether the history of the stream is public to its subscribers.</p>
-<p>Currently always true for public streams (i.e. invite_only=False implies
-history_public_to_subscribers=True), but clients should not make that
+<p>Currently always true for public streams (i.e. <code>""invite_only"": false</code> implies
+<code>""history_public_to_subscribers"": true</code>), but clients should not make that
 assumption, as we may change that behavior in the future.</p>
 </li>
 <li>
@@ -1664,13 +1664,13 @@
 <p>Intended to help clients determine whether they need to display
 UI like the ""more topics"" widget that would suggest the stream
 has older history that can be accessed.</p>
-<p>Null is used for streams with no message history.</p>
+<p>Is <code>null</code> for streams with no message history.</p>
 </li>
 <li>
 <p><code>stream_weekly_traffic</code>: <span class=""api-field-type"">integer | null</span></p>
 <p>The average number of messages sent to the stream in recent weeks,
 rounded to the nearest integer.</p>
-<p>Null means the stream was recently created and there is
+<p>If <code>null</code>, the stream was recently created and there is
 insufficient data to estimate the average traffic.</p>
 </li>
 <li>
@@ -1733,10 +1733,10 @@
 <p><code>stream_post_policy</code>: <span class=""api-field-type"">integer</span></p>
 <p><a href=""/api/roles-and-permissions#permission-levels"">Policy</a> for which users can post messages to the stream.</p>
 <ul>
-<li>1 =&gt; Any user can post.</li>
-<li>2 =&gt; Only administrators can post.</li>
-<li>3 =&gt; Only <a href=""/api/roles-and-permissions#determining-if-a-user-is-a-full-member"">full members</a> can post.</li>
-<li>4 =&gt; Only moderators can post.</li>
+<li>1 = Any user can post.</li>
+<li>2 = Only administrators can post.</li>
+<li>3 = Only <a href=""/api/roles-and-permissions#determining-if-a-user-is-a-full-member"">full members</a> can post.</li>
+<li>4 = Only moderators can post.</li>
 </ul>
 <p><strong>Changes</strong>: New in Zulip 3.0 (feature level 1), replacing the previous
 <code>is_announcement_only</code> boolean.</p>
@@ -1756,8 +1756,8 @@
 <li>
 <p><code>history_public_to_subscribers</code>: <span class=""api-field-type"">boolean</span></p>
 <p>Whether the history of the stream is public to its subscribers.</p>
-<p>Currently always true for public streams (i.e. invite_only=False implies
-history_public_to_subscribers=True), but clients should not make that
+<p>Currently always true for public streams (i.e. <code>""invite_only"": false</code> implies
+<code>""history_public_to_subscribers"": true</code>), but clients should not make that
 assumption, as we may change that behavior in the future.</p>
 </li>
 <li>
@@ -1766,7 +1766,7 @@
 <p>Intended to help clients determine whether they need to display
 UI like the ""more topics"" widget that would suggest the stream
 has older history that can be accessed.</p>
-<p>Null is used for streams with no message history.</p>
+<p>Is <code>null</code> for streams with no message history.</p>
 </li>
 <li>
 <p><code>is_announcement_only</code>: <span class=""api-field-type"">boolean</span></p>
@@ -1784,7 +1784,7 @@
 <p><code>stream_weekly_traffic</code>: <span class=""api-field-type"">integer | null</span></p>
 <p>The average number of messages sent to the stream in recent weeks,
 rounded to the nearest integer.</p>
-<p>Null means the stream was recently created and there is
+<p>If <code>null</code>, the stream was recently created and there is
 insufficient data to estimate the average traffic.</p>
 </li>
 <li>
@@ -1888,10 +1888,10 @@
 </li>
 <li>
 <p><code>old_unreads_missing</code>: <span class=""api-field-type"">boolean</span></p>
-<p>True if this data set was truncated because the user has too many
+<p>If <code>true</code>, this data set was truncated because the user has too many
 unread messages. When truncation occurs, only the most recent
 <code>MAX_UNREAD_MESSAGES</code> (currently 50000) messages will be considered
-when forming this response. When true, we recommend that clients
+when forming this response. When <code>true</code>, we recommend that clients
 display a warning, as they are likely to produce erroneous results
 until reloaded with the user having fewer than <code>MAX_UNREAD_MESSAGES</code>
 unread messages.</p>
@@ -1956,10 +1956,10 @@
 <p><code>stream_post_policy</code>: <span class=""api-field-type"">integer</span></p>
 <p><a href=""/api/roles-and-permissions#permission-levels"">Policy</a> for which users can post messages to the stream.</p>
 <ul>
-<li>1 =&gt; Any user can post.</li>
-<li>2 =&gt; Only administrators can post.</li>
-<li>3 =&gt; Only <a href=""/api/roles-and-permissions#determining-if-a-user-is-a-full-member"">full members</a> can post.</li>
-<li>4 =&gt; Only moderators can post.</li>
+<li>1 = Any user can post.</li>
+<li>2 = Only administrators can post.</li>
+<li>3 = Only <a href=""/api/roles-and-permissions#determining-if-a-user-is-a-full-member"">full members</a> can post.</li>
+<li>4 = Only moderators can post.</li>
 </ul>
 <p><strong>Changes</strong>: New in Zulip 3.0 (feature level 1), replacing the previous
 <code>is_announcement_only</code> boolean.</p>
@@ -1979,8 +1979,8 @@
 <li>
 <p><code>history_public_to_subscribers</code>: <span class=""api-field-type"">boolean</span></p>
 <p>Whether the history of the stream is public to its subscribers.</p>
-<p>Currently always true for public streams (i.e. invite_only=False implies
-history_public_to_subscribers=True), but clients should not make that
+<p>Currently always true for public streams (i.e. <code>""invite_only"": false</code> implies
+<code>""history_public_to_subscribers"": true</code>), but clients should not make that
 assumption, as we may change that behavior in the future.</p>
 </li>
 <li>
@@ -1989,7 +1989,7 @@
 <p>Intended to help clients determine whether they need to display
 UI like the ""more topics"" widget that would suggest the stream
 has older history that can be accessed.</p>
-<p>Null is used for streams with no message history.</p>
+<p>Is <code>null</code> for streams with no message history.</p>
 </li>
 <li>
 <p><code>is_announcement_only</code>: <span class=""api-field-type"">boolean</span></p>
@@ -2055,10 +2055,10 @@
 <p><code>stream_post_policy</code>: <span class=""api-field-type"">integer</span></p>
 <p><a href=""/api/roles-and-permissions#permission-levels"">Policy</a> for which users can post messages to the stream.</p>
 <ul>
-<li>1 =&gt; Any user can post.</li>
-<li>2 =&gt; Only administrators can post.</li>
-<li>3 =&gt; Only <a href=""/api/roles-and-permissions#determining-if-a-user-is-a-full-member"">full members</a> can post.</li>
-<li>4 =&gt; Only moderators can post.</li>
+<li>1 = Any user can post.</li>
+<li>2 = Only administrators can post.</li>
+<li>3 = Only <a href=""/api/roles-and-permissions#determining-if-a-user-is-a-full-member"">full members</a> can post.</li>
+<li>4 = Only moderators can post.</li>
 </ul>
 <p><strong>Changes</strong>: New in Zulip 3.0 (feature level 1), replacing the previous
 <code>is_announcement_only</code> boolean.</p>
@@ -2078,8 +2078,8 @@
 <li>
 <p><code>history_public_to_subscribers</code>: <span class=""api-field-type"">boolean</span></p>
 <p>Whether the history of the stream is public to its subscribers.</p>
-<p>Currently always true for public streams (i.e. invite_only=False implies
-history_public_to_subscribers=True), but clients should not make that
+<p>Currently always true for public streams (i.e. <code>""invite_only"": false</code> implies
+<code>""history_public_to_subscribers"": true</code>), but clients should not make that
 assumption, as we may change that behavior in the future.</p>
 </li>
 <li>
@@ -2088,7 +2088,7 @@
 <p>Intended to help clients determine whether they need to display
 UI like the ""more topics"" widget that would suggest the stream
 has older history that can be accessed.</p>
-<p>Null is used for streams with no message history.</p>
+<p>Is <code>null</code> for streams with no message history.</p>
 </li>
 <li>
 <p><code>is_announcement_only</code>: <span class=""api-field-type"">boolean</span></p>
@@ -2172,10 +2172,10 @@
 <p><code>stream_post_policy</code>: <span class=""api-field-type"">integer</span></p>
 <p><a href=""/api/roles-and-permissions#permission-levels"">Policy</a> for which users can post messages to the stream.</p>
 <ul>
-<li>1 =&gt; Any user can post.</li>
-<li>2 =&gt; Only administrators can post.</li>
-<li>3 =&gt; Only <a href=""/api/roles-and-permissions#determining-if-a-user-is-a-full-member"">full members</a> can post.</li>
-<li>4 =&gt; Only moderators can post.</li>
+<li>1 = Any user can post.</li>
+<li>2 = Only administrators can post.</li>
+<li>3 = Only <a href=""/api/roles-and-permissions#determining-if-a-user-is-a-full-member"">full members</a> can post.</li>
+<li>4 = Only moderators can post.</li>
 </ul>
 <p><strong>Changes</strong>: New in Zulip 3.0 (feature level 1), replacing the previous
 <code>is_announcement_only</code> boolean.</p>
@@ -2195,8 +2195,8 @@
 <li>
 <p><code>history_public_to_subscribers</code>: <span class=""api-field-type"">boolean</span></p>
 <p>Whether the history of the stream is public to its subscribers.</p>
-<p>Currently always true for public streams (i.e. invite_only=False implies
-history_public_to_subscribers=True), but clients should not make that
+<p>Currently always true for public streams (i.e. <code>""invite_only"": false</code> implies
+<code>""history_public_to_subscribers"": true</code>), but clients should not make that
 assumption, as we may change that behavior in the future.</p>
 </li>
 <li>
@@ -2205,7 +2205,7 @@
 <p>Intended to help clients determine whether they need to display
 UI like the ""more topics"" widget that would suggest the stream
 has older history that can be accessed.</p>
-<p>Null is used for streams with no message history.</p>
+<p>Is <code>null</code> for streams with no message history.</p>
 </li>
 <li>
 <p><code>is_announcement_only</code>: <span class=""api-field-type"">boolean</span></p>
@@ -2362,7 +2362,7 @@
 users, rather than a count, for messages with few total
 reactions. The ideal cutoff may depend on the space
 available for displaying reactions; the official web
-application displays names when &lt;=3 total reactions are
+application displays names when 3 or less total reactions are
 present with this setting enabled.</p>
 <p><strong>Changes</strong>: New in Zulip 6.0 (feature level 125).</p>
 </li>
@@ -3136,11 +3136,11 @@
 <p>The <a href=""/api/roles-and-permissions#permission-levels"">policy</a> defining which users can delete
 messages that they had sent.</p>
 <ul>
-<li>1 = members only</li>
-<li>2 = admins only</li>
-<li>3 = <a href=""/api/roles-and-permissions#determining-if-a-user-is-a-full-member"">full members</a> only</li>
-<li>4 = admins and moderators only</li>
-<li>5 = everyone</li>
+<li>1 = Members only</li>
+<li>2 = Admins only</li>
+<li>3 = <a href=""/api/roles-and-permissions#determining-if-a-user-is-a-full-member"">Full members</a> only</li>
+<li>4 = Admins and moderators only</li>
+<li>5 = Everyone</li>
 </ul>
 <p><strong>Changes</strong>: New in Zulip 5.0 (feature level 101), replacing the
 previous <code>allow_message_deleting</code> boolean;
@@ -3158,10 +3158,10 @@
 <p>The <a href=""/api/roles-and-permissions#permission-levels"">policy</a> for which users can create public streams
 in this organization.</p>
 <ul>
-<li>1 = members only</li>
-<li>2 = admins only</li>
-<li>3 = <a href=""/api/roles-and-permissions#determining-if-a-user-is-a-full-member"">full members</a> only</li>
-<li>4 = admins and moderators only</li>
+<li>1 = Members only</li>
+<li>2 = Admins only</li>
+<li>3 = <a href=""/api/roles-and-permissions#determining-if-a-user-is-a-full-member"">Full members</a> only</li>
+<li>4 = Admins and moderators only</li>
 </ul>
 <p><strong>Changes</strong>: Before Zulip 5.0 (feature level 102), permission to
 create streams was controlled by the <code>realm_create_stream_policy</code> setting.</p>
@@ -3172,10 +3172,10 @@
 <p>The <a href=""/api/roles-and-permissions#permission-levels"">policy</a> for which users can create private streams
 in this organization.</p>
 <ul>
-<li>1 = members only</li>
-<li>2 = admins only</li>
-<li>3 = <a href=""/api/roles-and-permissions#determining-if-a-user-is-a-full-member"">full members</a> only</li>
-<li>4 = admins and moderators only</li>
+<li>1 = Members only</li>
+<li>2 = Admins only</li>
+<li>3 = <a href=""/api/roles-and-permissions#determining-if-a-user-is-a-full-member"">Full members</a> only</li>
+<li>4 = Admins and moderators only</li>
 </ul>
 <p><strong>Changes</strong>: Before Zulip 5.0 (feature level 102), permission to
 create streams was controlled by the <code>realm_create_stream_policy</code> setting.</p>
@@ -3191,10 +3191,10 @@
 public streams in this organization. Allowed
 values are:</p>
 <ul>
-<li>2 = admins only</li>
-<li>4 = admins and moderators only</li>
-<li>6 = nobody</li>
-<li>7 = owners only</li>
+<li>2 = Admins only</li>
+<li>4 = Admins and moderators only</li>
+<li>6 = Nobody</li>
+<li>7 = Owners only</li>
 </ul>
 <p><strong>Changes</strong>: Added in Zulip 5.0 (feature level 103).</p>
 </li>
@@ -3210,12 +3210,12 @@
 <p>The <a href=""/api/roles-and-permissions#permission-levels"">policy</a> for who can use wildcard mentions
 in large streams.</p>
 <ul>
-<li>1 =&gt; Any user can use wildcard mentions in large streams.</li>
-<li>2 =&gt; Only members can use wildcard mentions in large streams.</li>
-<li>3 =&gt; Only <a href=""/api/roles-and-permissions#determining-if-a-user-is-a-full-member"">full members</a> can use wildcard mentions in large streams.</li>
-<li>5 =&gt; Only organization administrators can use wildcard mentions in large streams.</li>
-<li>6 =&gt; Nobody can use wildcard mentions in large streams.</li>
-<li>7 =&gt; Only organization administrators and moderators can use wildcard mentions in large streams.</li>
+<li>1 = Any user can use wildcard mentions in large streams.</li>
+<li>2 = Only members can use wildcard mentions in large streams.</li>
+<li>3 = Only <a href=""/api/roles-and-permissions#determining-if-a-user-is-a-full-member"">full members</a> can use wildcard mentions in large streams.</li>
+<li>5 = Only organization administrators can use wildcard mentions in large streams.</li>
+<li>6 = Nobody can use wildcard mentions in large streams.</li>
+<li>7 = Only organization administrators and moderators can use wildcard mentions in large streams.</li>
 </ul>
 <p>All users will receive a warning/reminder when using
 mentions in large streams, even when permitted to do so.</p>
@@ -3443,7 +3443,7 @@
 <p><code>realm_default_code_block_language</code>: <span class=""api-field-type"">string | null</span></p>
 <p>Present if <code>realm</code> is present in <code>fetch_event_types</code>.</p>
 <p>The default pygments language code to be used for a code blocks
-in this organization. Null if no default has been set.</p>
+in this organization. If <code>null</code>, no default has been set.</p>
 </li>
 <li>
 <p><code>realm_message_content_delete_limit_seconds</code>: <span class=""api-field-type"">integer | null</span></p>
@@ -3451,7 +3451,7 @@
 <p>Messages sent more than this many seconds ago cannot be deleted
 with this organization's
 <a href=""/help/restrict-message-editing-and-deletion"">message deletion policy</a>.</p>
-<p>Will not be 0. A 'null' value means no limit: messages can be deleted
+<p>Will not be 0. A <code>null</code> value means no limit: messages can be deleted
 regardless of how long ago they were sent.</p>
 <p><strong>Changes</strong>: No limit was represented using the
 special value <code>0</code> before Zulip 5.0 (feature level 100).</p>
@@ -3478,12 +3478,12 @@
 <p>Present if <code>realm</code> is present in <code>fetch_event_types</code>.</p>
 <p>The <a href=""/api/roles-and-permissions#permission-levels"">policy</a> for which users can edit topics of any message.</p>
 <ul>
-<li>1 = members only</li>
-<li>2 = admins only</li>
-<li>3 = <a href=""/api/roles-and-permissions#determining-if-a-user-is-a-full-member"">full members</a> only</li>
-<li>4 = moderators only</li>
-<li>5 = everyone</li>
-<li>6 = nobody</li>
+<li>1 = Members only</li>
+<li>2 = Admins only</li>
+<li>3 = <a href=""/api/roles-and-permissions#determining-if-a-user-is-a-full-member"">Full members</a> only</li>
+<li>4 = Moderators only</li>
+<li>5 = Everyone</li>
+<li>6 = Nobody</li>
 </ul>
 <p><strong>Changes</strong>: New in Zulip 5.0 (feature level 75), replacing the
 previous <code>allow_community_topic_editing</code> boolean. Nobody added as
@@ -3495,7 +3495,7 @@
 <p>Messages sent more than this many seconds ago cannot be edited
 with this organization's
 <a href=""/help/restrict-message-editing-and-deletion"">message edit policy</a>.</p>
-<p>Will not be 0. A 'null' value means no limit: messages can be edited
+<p>Will not be 0. A <code>null</code> value means no limit: messages can be edited
 regardless of how long ago they were sent.</p>
 <p><strong>Changes</strong>: No limit was represented using the
 special value <code>0</code> before Zulip 6.0 (feature level 138).</p>
@@ -3507,7 +3507,7 @@
 stream by members with this organization's <a href=""/help/restrict-moving-messages"">message move
 policy</a>. This setting does not
 affect moderators and administrators.</p>
-<p>Will not be 0. A 'null' value means no limit: messages can be moved
+<p>Will not be 0. A <code>null</code> value means no limit: messages can be moved
 regardless of how long ago they were sent.</p>
 <p><strong>Changes</strong>: New in Zulip 7.0 (feature level 162). Previously, this
 limit was always 72 hours.</p>
@@ -3519,7 +3519,7 @@
 streams by members with this organization's <a href=""/help/restrict-moving-messages"">message move
 policy</a>. This setting does not
 affect moderators and administrators.</p>
-<p>Will not be 0. A 'null' value means no limit: messages can be moved
+<p>Will not be 0. A <code>null</code> value means no limit: messages can be moved
 regardless of how long ago they were sent.</p>
 <p><strong>Changes</strong>: New in Zulip 7.0 (feature level 162). Previously, it
 was not possible to add a time limit for moving messages.</p>
@@ -3697,7 +3697,7 @@
 <p>The total quota for uploaded files in this organization.</p>
 <p>Clients are not responsible for checking this quota; it is included
 in the API only for display purposes.</p>
-<p>Null if there is no limit.</p>
+<p>If <code>null</code>, there is no limit.</p>
 <p><strong>Changes</strong>: New in Zulip 5.0 (feature level 72). Previously,
 this was called <code>realm_upload_quota</code>.</p>
 </li>
@@ -3900,7 +3900,7 @@
 <p>The value of the <code>WEB_PUBLIC_STREAMS_ENABLED</code> Zulip server level
 setting. A server that has disabled this setting intends to not offer <a href=""/help/public-access-option"">web
 public streams</a> to realms it hosts. (Zulip Cloud
-defaults to <code>True</code>; self-hosted servers default to <code>False</code>).</p>
+defaults to <code>true</code>; self-hosted servers default to <code>false</code>).</p>
 <p>Clients should use this to determine whether to offer UI for the
 realm-level setting for enabling web-public streams
 (<code>realm_enable_spectator_access</code>).</p>
@@ -4021,7 +4021,7 @@
 users, rather than a count, for messages with few total
 reactions. The ideal cutoff may depend on the space
 available for displaying reactions; the official web
-application displays names when &lt;=3 total reactions are
+application displays names when 3 or less total reactions are
 present with this setting enabled.</p>
 <p><strong>Changes</strong>: New in Zulip 6.0 (feature level 125).</p>
 </li>
@@ -4270,7 +4270,7 @@
 </li>
 <li>
 <p><code>delivery_email</code>: <span class=""api-field-type"">string | null</span></p>
-<p>The user's real email address. This value will be <code>None</code> if you cannot
+<p>The user's real email address. This value will be <code>null</code> if you cannot
 access user's real email address. For bot users, this field is always
 set to the real email of the bot, because bot users always have
 <code>email_address_visibility</code> as <code>EMAIL_ADDRESS_VISIBILITY_EVERYONE</code>.</p>
@@ -4278,7 +4278,7 @@
 only when <code>email_address_visibility</code> was restricted and you had access to the
 user's real email. Now, this field is always present, including the case when
 <code>email_address_visibility</code> is set to <code>EMAIL_ADDRESS_VISIBILITY_EVERYONE</code>,
-with the value being <code>None</code> if you don't have access the user's real email.
+with the value being <code>null</code> if you don't have access the user's real email.
 For bot users, this field is now always set to the real email irrespective of
 <code>email_address_visibility</code> setting.</p>
 </li>
@@ -4338,7 +4338,7 @@
 <p><code>bot_owner_id</code>: <span class=""api-field-type"">integer | null</span></p>
 <p>If the user is a bot (i.e. <code>is_bot</code> is true), then <code>bot_owner_id</code>
 is the user ID of the bot's owner (usually, whoever created the bot).</p>
-<p>Will be null for legacy bots that do not have an owner.</p>
+<p>Will be <code>null</code> for legacy bots that do not have an owner.</p>
 <p><strong>Changes</strong>: New in Zulip 3.0 (feature level 1). In previous
 versions, there was a <code>bot_owner</code> field containing the email
 address of the bot's owner.</p>
@@ -4348,11 +4348,11 @@
 <p><a href=""/api/roles-and-permissions"">Organization-level role</a> of the user.
 Possible values are:</p>
 <ul>
-<li>Organization owner =&gt; 100</li>
-<li>Organization administrator =&gt; 200</li>
-<li>Organization moderator =&gt; 300</li>
-<li>Member =&gt; 400</li>
-<li>Guest =&gt; 600</li>
+<li>100 = Organization owner</li>
+<li>200 = Organization administrator</li>
+<li>300 = Organization moderator</li>
+<li>400 = Member</li>
+<li>600 = Guest</li>
 </ul>
 <p><strong>Changes</strong>: New in Zulip 4.0 (feature level 59).</p>
 </li>
@@ -4363,7 +4363,7 @@
 <li>
 <p><code>avatar_url</code>: <span class=""api-field-type"">string | null</span></p>
 <p>URL for the user's avatar. Will be <code>null</code> if the <code>client_gravatar</code>
-query parameter was set to <code>True</code> and the user's avatar is hosted by
+query parameter was set to <code>true</code> and the user's avatar is hosted by
 the Gravatar provider (i.e. the user has never uploaded an avatar).</p>
 <p><strong>Changes</strong>: In Zulip 3.0 (feature level 18), if the client has the
 <code>user_avatar_url_field_optional</code> capability, this will be missing at
@@ -4422,7 +4422,7 @@
 </li>
 <li>
 <p><code>delivery_email</code>: <span class=""api-field-type"">string | null</span></p>
-<p>The user's real email address. This value will be <code>None</code> if you cannot
+<p>The user's real email address. This value will be <code>null</code> if you cannot
 access user's real email address. For bot users, this field is always
 set to the real email of the bot, because bot users always have
 <code>email_address_visibility</code> as <code>EMAIL_ADDRESS_VISIBILITY_EVERYONE</code>.</p>
@@ -4430,7 +4430,7 @@
 only when <code>email_address_visibility</code> was restricted and you had access to the
 user's real email. Now, this field is always present, including the case when
 <code>email_address_visibility</code> is set to <code>EMAIL_ADDRESS_VISIBILITY_EVERYONE</code>,
-with the value being <code>None</code> if you don't have access the user's real email.
+with the value being <code>null</code> if you don't have access the user's real email.
 For bot users, this field is now always set to the real email irrespective of
 <code>email_address_visibility</code> setting.</p>
 </li>
@@ -4490,7 +4490,7 @@
 <p><code>bot_owner_id</code>: <span class=""api-field-type"">integer | null</span></p>
 <p>If the user is a bot (i.e. <code>is_bot</code> is true), then <code>bot_owner_id</code>
 is the user ID of the bot's owner (usually, whoever created the bot).</p>
-<p>Will be null for legacy bots that do not have an owner.</p>
+<p>Will be <code>null</code> for legacy bots that do not have an owner.</p>
 <p><strong>Changes</strong>: New in Zulip 3.0 (feature level 1). In previous
 versions, there was a <code>bot_owner</code> field containing the email
 address of the bot's owner.</p>
@@ -4500,11 +4500,11 @@
 <p><a href=""/api/roles-and-permissions"">Organization-level role</a> of the user.
 Possible values are:</p>
 <ul>
-<li>Organization owner =&gt; 100</li>
-<li>Organization administrator =&gt; 200</li>
-<li>Organization moderator =&gt; 300</li>
-<li>Member =&gt; 400</li>
-<li>Guest =&gt; 600</li>
+<li>100 = Organization owner</li>
+<li>200 = Organization administrator</li>
+<li>300 = Organization moderator</li>
+<li>400 = Member</li>
+<li>600 = Guest</li>
 </ul>
 <p><strong>Changes</strong>: New in Zulip 4.0 (feature level 59).</p>
 </li>
@@ -4515,7 +4515,7 @@
 <li>
 <p><code>avatar_url</code>: <span class=""api-field-type"">string | null</span></p>
 <p>URL for the user's avatar. Will be <code>null</code> if the <code>client_gravatar</code>
-query parameter was set to <code>True</code> and the user's avatar is hosted by
+query parameter was set to <code>true</code> and the user's avatar is hosted by
 the Gravatar provider (i.e. the user has never uploaded an avatar).</p>
 <p><strong>Changes</strong>: In Zulip 3.0 (feature level 18), if the client has the
 <code>user_avatar_url_field_optional</code> capability, this will be missing at
@@ -4710,7 +4710,7 @@
 </li>
 <li>
 <p><code>delivery_email</code>: <span class=""api-field-type"">string | null</span></p>
-<p>The user's real email address. This value will be <code>None</code> if you cannot
+<p>The user's real email address. This value will be <code>null</code> if you cannot
 access user's real email address. For bot users, this field is always
 set to the real email of the bot, because bot users always have
 <code>email_address_visibility</code> as <code>EMAIL_ADDRESS_VISIBILITY_EVERYONE</code>.</p>
@@ -4718,7 +4718,7 @@
 only when <code>email_address_visibility</code> was restricted and you had access to the
 user's real email. Now, this field is always present, including the case when
 <code>email_address_visibility</code> is set to <code>EMAIL_ADDRESS_VISIBILITY_EVERYONE</code>,
-with the value being <code>None</code> if you don't have access the user's real email.
+with the value being <code>null</code> if you don't have access the user's real email.
 For bot users, this field is now always set to the real email irrespective of
 <code>email_address_visibility</code> setting.</p>
 </li>
@@ -4778,7 +4778,7 @@
 <p><code>bot_owner_id</code>: <span class=""api-field-type"">integer | null</span></p>
 <p>If the user is a bot (i.e. <code>is_bot</code> is true), then <code>bot_owner_id</code>
 is the user ID of the bot's owner (usually, whoever created the bot).</p>
-<p>Will be null for legacy bots that do not have an owner.</p>
+<p>Will be <code>null</code> for legacy bots that do not have an owner.</p>
 <p><strong>Changes</strong>: New in Zulip 3.0 (feature level 1). In previous
 versions, there was a <code>bot_owner</code> field containing the email
 address of the bot's owner.</p>
@@ -4788,11 +4788,11 @@
 <p><a href=""/api/roles-and-permissions"">Organization-level role</a> of the user.
 Possible values are:</p>
 <ul>
-<li>Organization owner =&gt; 100</li>
-<li>Organization administrator =&gt; 200</li>
-<li>Organization moderator =&gt; 300</li>
-<li>Member =&gt; 400</li>
-<li>Guest =&gt; 600</li>
+<li>100 = Organization owner</li>
+<li>200 = Organization administrator</li>
+<li>300 = Organization moderator</li>
+<li>400 = Member</li>
+<li>600 = Guest</li>
 </ul>
 <p><strong>Changes</strong>: New in Zulip 4.0 (feature level 59).</p>
 </li>
@@ -4803,7 +4803,7 @@
 <li>
 <p><code>avatar_url</code>: <span class=""api-field-type"">string | null</span></p>
 <p>URL for the user's avatar. Will be <code>null</code> if the <code>client_gravatar</code>
-query parameter was set to <code>True</code> and the user's avatar is hosted by
+query parameter was set to <code>true</code> and the user's avatar is hosted by
 the Gravatar provider (i.e. the user has never uploaded an avatar).</p>
 <p><strong>Changes</strong>: In Zulip 3.0 (feature level 18), if the client has the
 <code>user_avatar_url_field_optional</code> capability, this will be missing at
diff -r -B -u current_api_html/send-message.html new_api_html/send-message.html
--- current_api_html/send-message.html	2023-05-15 15:05:55.934128345 +0200
+++ new_api_html/send-message.html	2023-05-15 15:03:25.825108334 +0200
@@ -423,7 +423,7 @@
         <span class=""api-argument-example-label"">Example</span>: <code>&quot;Castle&quot;</code>
     </div>
     <div class=""api-description""><p>The topic of the message. Only required for stream messages
-(<code>type=""stream""</code>), ignored otherwise.</p>
+(<code>""type"": ""stream""</code>), ignored otherwise.</p>
 <p>Clients should use the <code>max_topic_length</code> returned by the
 <a href=""/api/register-queue""><code>POST /register</code></a> endpoint to determine
 the maximum topic length.</p>
diff -r -B -u current_api_html/set-typing-status.html new_api_html/set-typing-status.html
--- current_api_html/set-typing-status.html	2023-05-15 15:06:01.590167004 +0200
+++ new_api_html/set-typing-status.html	2023-05-15 15:03:32.557153806 +0200
@@ -270,20 +270,20 @@
 <p>Notify other users whether the current user is <a href=""/help/typing-notifications"">typing a message</a>.</p>
 <p>Clients implementing Zulip's typing notifications protocol should work as follows:</p>
 <ul>
-<li>Send a request to this endpoint with <code>op = ""start""</code> when a user starts typing a message,
-  and also every <code>TYPING_STARTED_WAIT_PERIOD = 10</code> seconds that the user continues to
+<li>Send a request to this endpoint with <code>""op"": ""start""</code> when a user starts typing a message,
+  and also every <code>""TYPING_STARTED_WAIT_PERIOD"": 10</code> seconds that the user continues to
   actively type or otherwise interact with the compose UI (e.g. interacting with the
   compose box emoji picker).</li>
-<li>Send a request to this endpoint with <code>op = ""stop""</code> when a user pauses using the
-  compose UI for at least <code>TYPING_STOPPED_WAIT_PERIOD = 5</code> seconds or cancels
+<li>Send a request to this endpoint with <code>""op"": ""stop""</code> when a user pauses using the
+  compose UI for at least <code>""TYPING_STOPPED_WAIT_PERIOD"": 5</code> seconds or cancels
   the compose action (if it had previously sent a ""start"" operation for that
   compose action).</li>
 <li>Start displaying ""Sender is typing"" for a given conversation when the client
-  receives an <code>op = ""start""</code> event from the <a href=""/api/get-events#typing-start""><code>GET /events</code></a>
+  receives an <code>""op"": ""start""</code> event from the <a href=""/api/get-events#typing-start""><code>GET /events</code></a>
   endpoint.</li>
-<li>Continue displaying ""Sender is typing"" until they receive an <code>op = ""stop""</code> event
+<li>Continue displaying ""Sender is typing"" until they receive an <code>""op"": ""stop""</code> event
   from the <a href=""/api/get-events#typing-stop""><code>GET /events</code></a> endpoint or
-  <code>TYPING_STARTED_EXPIRY_PERIOD = 15</code> seconds have passed without a new <code>op = ""start""</code>
+  <code>""TYPING_STARTED_EXPIRY_PERIOD"": 15</code> seconds have passed without a new <code>""op"": ""start""</code>
   event for that conversation.</li>
 <li>Support for displaying stream typing notifications was new in Zulip 4.0
   (feature level 58). Clients should indicate they support processing stream typing
diff -r -B -u current_api_html/subscribe.html new_api_html/subscribe.html
--- current_api_html/subscribe.html	2023-05-15 15:05:58.242144118 +0200
+++ new_api_html/subscribe.html	2023-05-15 15:03:29.249131459 +0200
@@ -397,8 +397,8 @@
     </div>
     <div class=""api-description""><p>A boolean specifying whether authorization errors (such as when the
 requesting user is not authorized to access a private stream) should be
-considered fatal or not. When <code>True</code>, an authorization error is reported
-as such. When set to <code>False</code>, the response will be a 200 and any streams
+considered fatal or not. When <code>true</code>, an authorization error is reported
+as such. When set to <code>false</code>, the response will be a 200 and any streams
 where the request encountered an authorization error will be listed
 in the <code>unauthorized</code> key.</p>
 <p>Defaults to <code>true</code>.</p></div>
@@ -465,10 +465,10 @@
     </div>
     <div class=""api-description""><p><a href=""/api/roles-and-permissions#permission-levels"">Policy</a> for which users can post messages to the stream.</p>
 <ul>
-<li>1 =&gt; Any user can post.</li>
-<li>2 =&gt; Only administrators can post.</li>
-<li>3 =&gt; Only <a href=""/api/roles-and-permissions#determining-if-a-user-is-a-full-member"">full members</a> can post.</li>
-<li>4 =&gt; Only moderators can post.</li>
+<li>1 = Any user can post.</li>
+<li>2 = Only administrators can post.</li>
+<li>3 = Only <a href=""/api/roles-and-permissions#determining-if-a-user-is-a-full-member"">full members</a> can post.</li>
+<li>4 = Only moderators can post.</li>
 </ul>
 <p><strong>Changes</strong>: New in Zulip 3.0 (feature level 1), replacing the previous
 <code>is_announcement_only</code> boolean.</p>
@@ -485,8 +485,8 @@
 policy</a>. Two special string format
 values are supported:</p>
 <ul>
-<li>""realm_default"" =&gt; Return to the organization-level setting.</li>
-<li>""unlimited"" =&gt; Retain messages forever.</li>
+<li><code>""realm_default""</code>: Return to the organization-level setting.</li>
+<li><code>""unlimited""</code>: Retain messages forever.</li>
 </ul>
 <p><strong>Changes</strong>: Prior to Zulip 5.0 (feature level 91), retaining
 messages forever was encoded using <code>""forever""</code> instead of
@@ -540,7 +540,7 @@
 <li>
 <p><code>unauthorized</code>: <span class=""api-field-type"">(string)[]</span></p>
 <p>A list of names of streams that the requesting user/bot was not
-authorized to subscribe to. Only present if <code>authorization_errors_fatal=false</code>.</p>
+authorized to subscribe to. Only present if <code>""authorization_errors_fatal"": false</code>.</p>
 </li>
 </ul>
 <h4 id=""example-responses"">Example response(s)</h4>
@@ -565,14 +565,14 @@
 <span class=""p"">}</span>
 </code></pre></div>
 <p>A typical response for when the requesting user does not have access to
-a private stream and <code>authorization_errors_fatal</code> is <code>True</code>:</p>
+a private stream and <code>""authorization_errors_fatal"": true</code>:</p>
 <div class=""codehilite"" data-code-language=""JSON""><pre><span></span><code><span class=""p"">{</span>
 <span class=""w"">    </span><span class=""nt"">""msg""</span><span class=""p"">:</span><span class=""w""> </span><span class=""s2"">""Unable to access stream (private_stream).""</span><span class=""p"">,</span>
 <span class=""w"">    </span><span class=""nt"">""result""</span><span class=""p"">:</span><span class=""w""> </span><span class=""s2"">""error""</span>
 <span class=""p"">}</span>
 </code></pre></div>
 <p>A typical response for when the requesting user does not have access to
-a private stream and <code>authorization_errors_fatal</code> is <code>False</code>:</p>
+a private stream and <code>""authorization_errors_fatal"": false</code>:</p>
 <div class=""codehilite"" data-code-language=""JSON""><pre><span></span><code><span class=""p"">{</span>
 <span class=""w"">    </span><span class=""nt"">""already_subscribed""</span><span class=""p"">:</span><span class=""w""> </span><span class=""p"">{},</span>
 <span class=""w"">    </span><span class=""nt"">""msg""</span><span class=""p"">:</span><span class=""w""> </span><span class=""s2"">""""</span><span class=""p"">,</span>
diff -r -B -u current_api_html/update-message-flags.html new_api_html/update-message-flags.html
--- current_api_html/update-message-flags.html	2023-05-15 15:05:57.014135726 +0200
+++ new_api_html/update-message-flags.html	2023-05-15 15:03:27.265118058 +0200
@@ -431,7 +431,7 @@
             <tr>
                 <td><code>historical</code></td>
                 <td>
-                    True for messages that the user did not receive
+                    Is `true` for messages that the user did not receive
                     at the time they were sent but later was added to
                     the user's history (E.g. because they starred or
                     reacted to a message sent to a public stream
diff -r -B -u current_api_html/update-message.html new_api_html/update-message.html
--- current_api_html/update-message.html	2023-05-15 15:05:56.122129630 +0200
+++ new_api_html/update-message.html	2023-05-15 15:03:26.041109793 +0200
@@ -492,7 +492,7 @@
 <p>A client is recommended to either just present the error to the user, or
 if <code>first_message_id_allowed_to_move</code> is not <code>null</code>, prompt the user with
 this information. Clients should support this error code with
-<code>first_message_id_allowed_to_move=null</code> for forwards compatibility
+<code>""first_message_id_allowed_to_move"": null</code> for forwards compatibility
 with future server versions that may use this error code in other
 propagation modes where it is possible that the user does not have
 permission to move any messages, or where the server did not calculate the
diff -r -B -u current_api_html/update-realm-user-settings-defaults.html new_api_html/update-realm-user-settings-defaults.html
--- current_api_html/update-realm-user-settings-defaults.html	2023-05-15 15:06:04.682188144 +0200
+++ new_api_html/update-realm-user-settings-defaults.html	2023-05-15 15:03:37.153184867 +0200
@@ -400,7 +400,7 @@
 <p>When enabled, clients should display the names of reacting users, rather than
 a count, for messages with few total reactions. The ideal cutoff may depend on
 the space available for displaying reactions; the official web application
-displays names when &lt;=3 total reactions are present with this setting enabled.</p>
+displays names when 3 or less total reactions are present with this setting enabled.</p>
 <p><strong>Changes</strong>: New in Zulip 6.0 (feature level 125).</p></div>
     <hr>
 </div>
diff -r -B -u current_api_html/update-settings.html new_api_html/update-settings.html
--- current_api_html/update-settings.html	2023-05-15 15:06:02.086170395 +0200
+++ new_api_html/update-settings.html	2023-05-15 15:03:33.189158077 +0200
@@ -485,7 +485,7 @@
 <p>When enabled, clients should display the names of reacting users, rather than
 a count, for messages with few total reactions. The ideal cutoff may depend on
 the space available for displaying reactions; the official web application
-displays names when &lt;=3 total reactions are present with this setting enabled.</p>
+displays names when 3 or less total reactions are present with this setting enabled.</p>
 <p><strong>Changes</strong>: New in Zulip 6.0 (feature level 125).</p></div>
     <hr>
 </div>
diff -r -B -u current_api_html/update-stream.html new_api_html/update-stream.html
--- current_api_html/update-stream.html	2023-05-15 15:05:59.394151993 +0200
+++ new_api_html/update-stream.html	2023-05-15 15:03:30.365138997 +0200
@@ -395,10 +395,10 @@
     </div>
     <div class=""api-description""><p><a href=""/api/roles-and-permissions#permission-levels"">Policy</a> for which users can post messages to the stream.</p>
 <ul>
-<li>1 =&gt; Any user can post.</li>
-<li>2 =&gt; Only administrators can post.</li>
-<li>3 =&gt; Only <a href=""/api/roles-and-permissions#determining-if-a-user-is-a-full-member"">full members</a> can post.</li>
-<li>4 =&gt; Only moderators can post.</li>
+<li>1 = Any user can post.</li>
+<li>2 = Only administrators can post.</li>
+<li>3 = Only <a href=""/api/roles-and-permissions#determining-if-a-user-is-a-full-member"">full members</a> can post.</li>
+<li>4 = Only moderators can post.</li>
 </ul>
 <p><strong>Changes</strong>: New in Zulip 3.0 (feature level 1), replacing the previous
 <code>is_announcement_only</code> boolean.</p>
@@ -415,8 +415,8 @@
 policy</a>. Two special string format
 values are supported:</p>
 <ul>
-<li>""realm_default"" =&gt; Return to the organization-level setting.</li>
-<li>""unlimited"" =&gt; Retain messages forever.</li>
+<li><code>""realm_default""</code>: Return to the organization-level setting.</li>
+<li><code>""unlimited""</code>: Retain messages forever.</li>
 </ul>
 <p><strong>Changes</strong>: Prior to Zulip 5.0 (feature level 91), retaining
 messages forever was encoded using <code>""forever""</code> instead of
diff -r -B -u current_api_html/update-subscription-settings.html new_api_html/update-subscription-settings.html
--- current_api_html/update-subscription-settings.html	2023-05-15 15:05:58.650146907 +0200
+++ new_api_html/update-subscription-settings.html	2023-05-15 15:03:29.653134187 +0200
@@ -345,7 +345,7 @@
   <code>""in_home_view""</code>. <br>
   <strong>Changes</strong>: Prior to Zulip 2.1.0, this feature was represented
   by the more confusingly named <code>""in_home_view""</code> (with the
-  opposite value: <code>in_home_view=!is_muted</code>); for
+  opposite value: <code>in_home_view = !is_muted</code>); for
   backwards-compatibility, modern Zulip still accepts that property.</p>
 </li>
 <li>"
hs99C9tX,DS,Kaseil,C++,Monday 15th of May 2023 08:34:25 AM CDT,"#include <vector>
#include <iostream>
namespace DA {
	class nonBinaryTree {
	private:
		std::vector<std::vector<int>> ppt;
		int pptSize,edgeCount,maxComp,labelCount;
		bool cycle;
		bool* visited;

	public:
		nonBinaryTree();

		void makeEdge(int i,int j);
		void travel(int i,int& count);
		void display();
		void show();
	};
}

int main() {
	DA::nonBinaryTree Problem;
	Problem.display();
	return 0;
}

DA::nonBinaryTree::nonBinaryTree(){
	cycle = false;
	maxComp = 0, labelCount = 0;
	std::cin >> pptSize >> edgeCount;
	

	visited = new bool[pptSize];

	for (int i = 0; i < pptSize; i++) {
		std::vector<int> temp;
		temp.push_back(-1);
		ppt.push_back(temp);
		visited[i] = false;
	}

	for (int i = 0; i < edgeCount; i++) {
		int u, v;
		std::cin >> u >> v;
		makeEdge(u - 1, v - 1);
	}

	for (int i = 0; i < pptSize; i++) {
		if (visited[i]) continue;
		labelCount++;
		int count=0;

		travel(i,count);

		maxComp = std::max(maxComp, count);
	}
}

void DA::nonBinaryTree::makeEdge(int i,int j) {
	if (ppt[i][0] == -1) {
		ppt[i][0] = j;
	}
	else {
		ppt[i].push_back(j);
	}
}

void DA::nonBinaryTree::travel(int i,int& count) {
	if (ppt[i][0] != -1) {
		if (visited[i]) cycle = true;
		else {
			visited[i] = true;
			count++; 
		}

		for (int j = 0; j < ppt[i].size(); j++) {
			travel(ppt[i][j], count);
		}

	}
	else {
		if (visited[i]) cycle = true;
		else {
			visited[i] = true;
			count++;
		}
	}
}

void DA::nonBinaryTree::display() {
	if (cycle) std::cout << ""Found"" << std::endl;
	else std::cout << ""Not fount"" << std::endl;
	std::cout << labelCount << std::endl << maxComp;
}

void DA::nonBinaryTree::show() {
	for (int i = 0; i < ppt.size(); i++) {
		for (int j = 0; j < ppt[i].size(); j++) {
			printf(""%d "", ppt[i][j]);
		}
		printf(""\n"");
	}
}"
ZeJtzpuY,template,AlexS_X,JSON,Monday 15th of May 2023 08:29:38 AM CDT,"{""code"":0,""info"":""OK"",""result"":{""template_id"":11,""protocol_id"":9,""city_id"":210861,""variants"":[{""field_id"":306,""option_id"":112,""value"":""1""},{""field_id"":307,""option_id"":112,""value"":""1""},{""field_id"":308,""option_id"":112,""value"":""1""},{""field_id"":306,""option_id"":113,""value"":297},{""field_id"":308,""option_id"":113,""value"":297},{""field_id"":306,""option_id"":115,""value"":[""303"",""304""]},{""field_id"":308,""option_id"":115,""value"":[""303"",""304""]},{""field_id"":306,""option_id"":114,""value"":300},{""field_id"":307,""option_id"":114,""value"":300},{""field_id"":308,""option_id"":114,""value"":300},{""field_id"":306,""option_id"":111,""value"":""123213""},{""field_id"":307,""option_id"":111,""value"":""123213""},{""field_id"":308,""option_id"":111,""value"":""123213""}]}}"
A6qVrnPK,邀您一起看：书签组：「视界路由」-✎修改,xiaomianao666,JavaScript,Monday 15th of May 2023 08:23:55 AM CDT,海阔视界规则分享，当前分享的是：二级页面详情￥page_detail￥书签组：「视界路由」-✎修改@@eyJkYXRhIjoie1wiYXNzb2NpYXRlZE1vZGVsc01hcEZvckpvaW5UYWJsZVwiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhGS1wiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhvdXRGS1wiOnt9LFwiZmllbGRzVG9TZXRUb0RlZmF1bHRcIjpbXSxcImdtdE1vZGlmaWVkXCI6MCxcImlkXCI6MCxcImxpc3RUb0NsZWFyQXNzb2NpYXRlZEZLXCI6W10sXCJsaXN0VG9DbGVhclNlbGZGS1wiOltdLFwicGFnZUxpc3RcIjpbXSxcInNhdmVkXCI6ZmFsc2UsXCJ0aXRsZVwiOlwi5oiR55qE5Li76aG1XCIsXCJ2ZXJzaW9uXCI6MCxcInVybFwiOlwiaGlrZXI6Ly9lbXB0eVwiLFwiY29sX3R5cGVcIjpcIng1X3dlYnZpZXdfc2luZ2xlXCIsXCJmaW5kX3J1bGVcIjpcImpzOnNldFJlc3VsdChbe1xcbiAgICB1cmw6XFxcImZpbGU6Ly8vc3RvcmFnZS9lbXVsYXRlZC8wL0FuZHJvaWQvZGF0YS9jb20uZXhhbXBsZS5oaWtlcnZpZXcvZmlsZXMvRG9jdW1lbnRzL25ld1BsYW5Ib21lLmh0bWxcXFwiLFxcbmRlc2M6XFxcIjEwMCUmJmZsb2F0XFxcIixcXG5leHRyYTp7Y2FuQmFjazogdHJ1ZX1cXG59XSk7XCIsXCJncm91cFwiOlwi5Li76aG1XCJ9IiwidGl0bGUiOiLkuabnrb7nu4TvvJrjgIzop4bnlYzot6/nlLHjgI0t4pyO5L+u5pS5In0=
n2K63nhw,Zeus,aliyahscreation,HTML,Monday 15th of May 2023 07:57:31 AM CDT,"<style>
  
  .backgroundZ {
    background-color:#003366;
    color:#eee;
    padding-bottom:10px;
  }
  
  .nameZ {
    padding:5px;
    text-align:center;
    font:60px Tilt Prism;
    color:#fff;
  }
  
  .displayZ {
    margin:10px auto;
    display:flex;
    justify-content:space-between;
  }
  
  .leftZ {
    width:80%;
    height:430px;
    overflow:hidden;
  }
  
  .rightZ {
    width:calc(20% - 10px);
    height:420px;
    padding:5px;
    text-align:center;
    overflow:auto;
  }
  
  .rightZ::-webkit-scrollbar { 
    width:3px;
    height:3px;
    box-shadow:inset 0 0 5px #fff;
  }

  .rightZ::-webkit-scrollbar-thumb {
    background:#fff;
  }
  
  .rightZ > a {
    text-decoration:none;
  }
  
  .linkZ {
    padding:5px;
    font:35px Mrs Saint Delafield;
    color:#FFEF89;
  }
  
  .chapterZ {
    height:420px;
    margin:auto;
    margin-bottom:10px;
    display:flex;
    justify-content:space-between;
  }
  
  .columnimgZ {
    width:calc(30% - 20px);
    padding:5px;
  }
  
  .boxZ {
    width:70%;
    height:420px;
    padding:5px;
    overflow:auto;
    text-align:justify;
    font:17px Ysabeau;
  }
  
  .boxZ::-webkit-scrollbar { 
    width:3px;
    height:3px;
    box-shadow:inset 0 0 5px #fff;
  }

  .boxZ::-webkit-scrollbar-thumb {
    background:#FFEF89;
  }
  
  .imgZ {
    width:100%;
    height:120px;
    margin:15px auto;
    border:1px solid #fff;
    outline:1px solid #fff;
    outline-offset:-7px;
  }
  
  .bottomZ {
    display:flex;
    justify-content:center;
  }
  
  .quoteZ {
    text-align:center;
    font:30px Mrs Saint Delafield;
    color:#FFEF89;
  }
  
  .thunderZ {
    width:30px;
    height:30px;
    margin:8px 20px;
  }
  
</style>


<link href=""https://fonts.googleapis.com/css2?family=Mrs+Saint+Delafield&family=Tilt+Prism&family=Ysabeau&display=swap"" rel=""stylesheet"">


<div class=""backgroundZ"">
  <!--NAME-->
  <div class=""nameZ"">An amazing Name</div>
  <div class=""displayZ"">
    <div class=""leftZ"">
      <!--EACH CHAPTER-->
      <a id=""1""></a>
      <div class=""chapterZ"">
        <!--IMG COLUMN-->
        <div class=""columnimgZ"">
          <div class=""imgZ"" style=""background:url(https://media.tenor.com/o_A0DREsDq4AAAAC/robert-downey-jr-iron-man.gif)center;background-size:cover;""></div>
          <div class=""imgZ"" style=""background:url(https://cdn.acidcow.com/pics/20130527/tony_stark_02.gif)center;background-size:cover;""></div>
          <div class=""imgZ"" style=""background:url(https://media.tenor.com/WqB9UhxttNsAAAAC/robert-downey-jr-well.gif)center;background-size:cover;""></div>
        </div>
        <!--TEXT BOX-->
        <div class=""boxZ"">
          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed non risus. Suspendisse lectus tortor, dignissim sit amet, adipiscing nec, ultricies sed, dolor. Cras elementum ultrices diam. Maecenas ligula massa, varius a, semper congue, euismod non, mi. Proin porttitor, orci nec nonummy molestie, enim est eleifend mi, non fermentum diam nisl sit amet erat. Duis semper. Duis arcu massa, scelerisque vitae, consequat in, pretium a, enim. Pellentesque congue. Ut in risus volutpat libero pharetra tempor. Cras vestibulum bibendum augue. Praesent egestas leo in pede. Praesent blandit odio eu enim. Pellentesque sed dui ut augue blandit sodales. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Aliquam nibh. Mauris ac mauris sed pede pellentesque fermentum. Maecenas adipiscing ante non diam sodales hendrerit.
          <br/><br/>
          Ut velit mauris, egestas sed, gravida nec, ornare ut, mi. Aenean ut orci vel massa suscipit pulvinar. Nulla sollicitudin. Fusce varius, ligula non tempus aliquam, nunc turpis ullamcorper nibh, in tempus sapien eros vitae ligula. Pellentesque rhoncus nunc et augue. Integer id felis. Curabitur aliquet pellentesque diam. Integer quis metus vitae elit lobortis egestas. Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Morbi vel erat non mauris convallis vehicula. Nulla et sapien. Integer tortor tellus, aliquam faucibus, convallis id, congue eu, quam. Mauris ullamcorper felis vitae erat. Proin feugiat, augue non elementum posuere, metus purus iaculis lectus, et tristique ligula justo vitae magna.
          <br/><br/>
          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed non risus. Suspendisse lectus tortor, dignissim sit amet, adipiscing nec, ultricies sed, dolor. Cras elementum ultrices diam. Maecenas ligula massa, varius a, semper congue, euismod non, mi. Proin porttitor, orci nec nonummy molestie, enim est eleifend mi, non fermentum diam nisl sit amet erat. Duis semper. Duis arcu massa, scelerisque vitae, consequat in, pretium a, enim. Pellentesque congue. Ut in risus volutpat libero pharetra tempor. Cras vestibulum bibendum augue. Praesent egestas leo in pede. Praesent blandit odio eu enim. Pellentesque sed dui ut augue blandit sodales. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Aliquam nibh. Mauris ac mauris sed pede pellentesque fermentum. Maecenas adipiscing ante non diam sodales hendrerit. 
        </div>
      </div>
      <!--EACH CHAPTER-->
      <a id=""2""></a>
      <div class=""chapterZ"">
        <!--IMG COLUMN-->
        <div class=""columnimgZ"">
          <div class=""imgZ"" style=""background:url(URL)center;background-size:cover;""></div>
          <div class=""imgZ"" style=""background:url(URL)center;background-size:cover;""></div>
          <div class=""imgZ"" style=""background:url(URL)center;background-size:cover;""></div>
        </div>
        <!--TEXT BOX-->
        <div class=""boxZ"">
          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed non risus. Suspendisse lectus tortor, dignissim sit amet, adipiscing nec, ultricies sed, dolor. Cras elementum ultrices diam. Maecenas ligula massa, varius a, semper congue, euismod non, mi. Proin porttitor, orci nec nonummy molestie, enim est eleifend mi, non fermentum diam nisl sit amet erat. 
          <br/><br/>
          Ut velit mauris, egestas sed, gravida nec, ornare ut, mi. Aenean ut orci vel massa suscipit pulvinar. Nulla sollicitudin. Fusce varius, ligula non tempus aliquam, nunc turpis ullamcorper nibh, in tempus sapien eros vitae ligula. Pellentesque rhoncus nunc et augue. Integer id felis. Curabitur aliquet pellentesque diam. Integer quis metus vitae elit lobortis egestas. Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Morbi vel erat non mauris convallis vehicula. Nulla et sapien. Integer tortor tellus, aliquam faucibus, convallis id, congue eu, quam. Mauris ullamcorper felis vitae erat. Proin feugiat, augue non elementum posuere, metus purus iaculis lectus, et tristique ligula justo vitae magna.
          <br/><br/>
          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed non risus. Suspendisse lectus tortor, dignissim sit amet, adipiscing nec, ultricies sed, dolor. Cras elementum ultrices diam. Maecenas ligula massa, varius a, semper congue, euismod non, mi. Proin porttitor, orci nec nonummy molestie, enim est eleifend mi, non fermentum diam nisl sit amet erat. Duis semper. Duis arcu massa, scelerisque vitae, consequat in, pretium a, enim. Pellentesque congue. Ut in risus volutpat libero pharetra tempor. Cras vestibulum bibendum augue. Praesent egestas leo in pede. Praesent blandit odio eu enim. Pellentesque sed dui ut augue blandit sodales. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Aliquam nibh. Mauris ac mauris sed pede pellentesque fermentum. Maecenas adipiscing ante non diam sodales hendrerit. 
        </div>
      </div>
      <!--EACH CHAPTER-->
      <a id=""3""></a>
      <div class=""chapterZ"">
        <!--IMG COLUMN-->
        <div class=""columnimgZ"">
          <div class=""imgZ"" style=""background:url(URL)center;background-size:cover;""></div>
          <div class=""imgZ"" style=""background:url(URL)center;background-size:cover;""></div>
          <div class=""imgZ"" style=""background:url(URL)center;background-size:cover;""></div>
        </div>
        <!--TEXT BOX-->
        <div class=""boxZ"">
          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed non risus. Suspendisse lectus tortor, dignissim sit amet, adipiscing nec, ultricies sed, dolor. Cras elementum ultrices diam. Maecenas ligula massa, varius a, semper congue, euismod non, mi. Proin porttitor, orci nec nonummy molestie, enim est eleifend mi, non fermentum diam nisl sit amet erat. Duis semper. Duis arcu massa, scelerisque vitae, consequat in, pretium a, enim. Pellentesque congue. Ut in risus volutpat libero pharetra tempor. Cras vestibulum bibendum augue. Praesent egestas leo in pede. Praesent blandit odio eu enim. Pellentesque sed dui ut augue blandit sodales. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Aliquam nibh. Mauris ac mauris sed pede pellentesque fermentum. Maecenas adipiscing ante non diam sodales hendrerit.
          <br/><br/>
          Ut velit mauris, egestas sed, gravida nec, ornare ut, mi. Aenean ut orci vel massa suscipit pulvinar. Nulla sollicitudin. Fusce varius, ligula non tempus aliquam, nunc turpis ullamcorper nibh, in tempus sapien eros vitae ligula. Pellentesque rhoncus nunc et augue. Integer id felis. Curabitur aliquet pellentesque diam. 
          <br/><br/>
          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed non risus. Suspendisse lectus tortor, dignissim sit amet, adipiscing nec, ultricies sed, dolor. Cras elementum ultrices diam. Maecenas ligula massa, varius a, semper congue, euismod non, mi. Proin porttitor, orci nec nonummy molestie, enim est eleifend mi, non fermentum diam nisl sit amet erat. Duis semper. Duis arcu massa, scelerisque vitae, consequat in, pretium a, enim. Pellentesque congue. Ut in risus volutpat libero pharetra tempor. Cras vestibulum bibendum augue. Praesent egestas leo in pede. Praesent blandit odio eu enim. Pellentesque sed dui ut augue blandit sodales. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Aliquam nibh. Mauris ac mauris sed pede pellentesque fermentum. Maecenas adipiscing ante non diam sodales hendrerit. 
        </div>
      </div>
      <!--EACH CHAPTER-->
      <a id=""4""></a>
      <div class=""chapterZ"">
        <!--IMG COLUMN-->
        <div class=""columnimgZ"">
          <div class=""imgZ"" style=""background:url(URL)center;background-size:cover;""></div>
          <div class=""imgZ"" style=""background:url(URL)center;background-size:cover;""></div>
          <div class=""imgZ"" style=""background:url(URL)center;background-size:cover;""></div>
        </div>
        <!--TEXT BOX-->
        <div class=""boxZ"">
          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed non risus. Suspendisse lectus tortor, dignissim sit amet, adipiscing nec, ultricies sed, dolor. Cras elementum ultrices diam. Maecenas ligula massa, varius a, semper congue, euismod non, mi. Proin porttitor, orci nec nonummy molestie, enim est eleifend mi, non fermentum diam nisl sit amet erat. Duis semper. Duis arcu massa, scelerisque vitae, consequat in, pretium a, enim. Pellentesque congue. Ut in risus volutpat libero pharetra tempor. Cras vestibulum bibendum augue. Praesent egestas leo in pede. Praesent blandit odio eu enim. Pellentesque sed dui ut augue blandit sodales. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Aliquam nibh. Mauris ac mauris sed pede pellentesque fermentum. Maecenas adipiscing ante non diam sodales hendrerit.
          <br/><br/>
          Ut velit mauris, egestas sed, gravida nec, ornare ut, mi. Aenean ut orci vel massa suscipit pulvinar. Nulla sollicitudin. Fusce varius, ligula non tempus aliquam, nunc turpis ullamcorper nibh, in tempus sapien eros vitae ligula. Pellentesque rhoncus nunc et augue. Integer id felis. Curabitur aliquet pellentesque diam. Integer quis metus vitae elit lobortis egestas. Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Morbi vel erat non mauris convallis vehicula. Nulla et sapien. Integer tortor tellus, aliquam faucibus, convallis id, congue eu, quam. Mauris ullamcorper felis vitae erat. Proin feugiat, augue non elementum posuere, metus purus iaculis lectus, et tristique ligula justo vitae magna.
        </div>
      </div>
      <!--EACH CHAPTER-->
      <a id=""5""></a>
      <div class=""chapterZ"">
        <!--IMG COLUMN-->
        <div class=""columnimgZ"">
          <div class=""imgZ"" style=""background:url(URL)center;background-size:cover;""></div>
          <div class=""imgZ"" style=""background:url(URL)center;background-size:cover;""></div>
          <div class=""imgZ"" style=""background:url(URL)center;background-size:cover;""></div>
        </div>
        <!--TEXT BOX-->
        <div class=""boxZ"">
          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed non risus. Suspendisse lectus tortor, dignissim sit amet, adipiscing nec, ultricies sed, dolor. Cras elementum ultrices diam. Maecenas ligula massa, varius a, semper congue, euismod non, mi. Proin porttitor, orci nec nonummy molestie, enim est eleifend mi, non fermentum diam nisl sit amet erat. Duis semper. Duis arcu massa, scelerisque vitae, consequat in, pretium a, enim. 
          <br/><br/>
          Ut velit mauris, egestas sed, gravida nec, ornare ut, mi. Aenean ut orci vel massa suscipit pulvinar. Nulla sollicitudin. Fusce varius, ligula non tempus aliquam, nunc turpis ullamcorper nibh, in tempus sapien eros vitae ligula. Pellentesque rhoncus nunc et augue. Integer id felis. Curabitur aliquet pellentesque diam. Integer quis metus vitae elit lobortis egestas. 
          <br/><br/>
          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed non risus. Suspendisse lectus tortor, dignissim sit amet, adipiscing nec, ultricies sed, dolor. Cras elementum ultrices diam. Maecenas ligula massa, varius a, semper congue, euismod non, mi. Proin porttitor, orci nec nonummy molestie, enim est eleifend mi, non fermentum diam nisl sit amet erat. Duis semper. Duis arcu massa, scelerisque vitae, consequat in, pretium a, enim. Pellentesque congue. Ut in risus volutpat libero pharetra tempor. Cras vestibulum bibendum augue. Praesent egestas leo in pede. Praesent blandit odio eu enim. Pellentesque sed dui ut augue blandit sodales. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Aliquam nibh. Mauris ac mauris sed pede pellentesque fermentum. Maecenas adipiscing ante non diam sodales hendrerit. 
        </div>
      </div>
    </div>
    <div class=""rightZ"">
      <a href=""#1""><div class=""linkZ"">Chapter 1</div></a>
      <a href=""#2""><div class=""linkZ"">Chapter 2</div></a>
      <a href=""#3""><div class=""linkZ"">Chapter 3</div></a>
      <a href=""#4""><div class=""linkZ"">Chapter 4</div></a>
      <a href=""#5""><div class=""linkZ"">Chapter 5</div></a>
    </div> 
  </div>
  <div class=""bottomZ"">
    <img class=""thunderZ"" src=""https://cdn-icons-png.flaticon.com/512/17/17739.png""/>
    <div class=""quoteZ"">An amazing quote as long as you want</div>
    <img class=""thunderZ"" src=""https://cdn-icons-png.flaticon.com/512/17/17739.png""/>
  </div>
</div>


<!-- CREDITS, DO NOT TOUCH-->
<div style=""margin:5px auto;text-align:center;""><a href=""https://aliyahscreations.tumblr.com/"" style=""font-size:10px;letter-spacing:2px;color:#222;text-decoration:none; font-family:century gothic,helvetica,arial,sans-serif;font-size:12px;line-height:1.3;"">© Code by Aliyah</a></div>"
2zYP1cEk,Untitled,olivoin,CSS,Monday 15th of May 2023 07:21:02 AM CDT,"@import '../../vars.scss';
@import '../../mixins/mixin-text';
@import '../../mixins/mixin-images';

body.single-product {
    background: url(../img/logo_text_white.svg) left top repeat;
    background-color: #000;
    background-attachment: fixed;
    main {
        background-color: rgba(#000, .8);
    }
}

[data-attr-slug=""pa_sostav""] {
    display: none !important;
}

.product-single {
    margin-bottom: 0;
    width: 100vw;
    height: 100vh;
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden;
}

.single-summary_body {
    display: grid;
    grid-template-columns: repeat(2,1fr);
    gap: .5rem;
    padding: .83rem $single-product-card-side-padding;

    @media only screen and (max-width: 768px) {
        padding: .83rem $single-product-card-side-padding-mobile;
    }

    .single-summary_price {
        color: $white;
        font-weight: 700;
        font-size: 1.15rem;
        line-height: 1;
    }

    .single-summary_availability {
        align-self: center;
        justify-self: right;

        [data-availability] {
            color: $white;
            font-weight: 400;
            font-size: .94rem;
            line-height: 1;
            padding-left: .75rem;

            .stock {
                position: relative;
                &::after {
                    content: '';
                    position: absolute;
                    left: -0.75rem;
                    top: 0.25rem;
                    width: .5rem;
                    height: .5rem;
                    border-radius: 100%;
                }
            }

            .out-of-stock {
                display: block;
                &::after {
                    background-color: red;
                }
            }

            .in-stock {
                &::after {
                    background-color: green;
                }
            }

            .onbackorder {
                &::after {
                    background-color: #775EDA;
                }
            }
        }
    }
}


.single-summary_short-desc {
    padding: 1.04rem $single-product-card-side-padding 0 $single-product-card-side-padding;
    font-weight: 400;
    font-size: .94rem;
    line-height: 120%;
    color: $white;

    @media only screen and (max-width: 768px) {
        padding: 1.04rem $single-product-card-side-padding-mobile 0;
        color: $darkText;
    }
}

.single-summary_attributes {

    &__desktop {
        display: grid;
        grid-template-columns: repeat(2,1fr);
        gap: 1.25rem;

        margin-top: 1.56rem;
        padding: 0 $single-product-card-side-padding;
        color: $white;

        .attributes-dropdown {
            position: relative;

            &:after {
                content: '';
                position: absolute;
                display: block;
                width: .68rem;
                height: .36rem;
                background-repeat: no-repeat;
                background-position: center;
                background-size: contain;
                background-image: url(../img/icons/shape.svg);
                top: 50%;
                margin-top: -.18rem;
                right: .68rem;
            }
            &.meow-dropdown--opened {
                &:after {
                    transform: rotate(180deg);
                }
            }

            .attributes-dropdown__selected {
                height: 2.08rem;
                .attributes-dropdown__option {
                    height: 100%;
                }
            }

            .attributes-dropdown__option {
                height: 1.3rem;

                .attributes-dropdown__option--text,
                .attributes-dropdown__option--image {
                    position: relative;
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    width: 100%;
                    height: 100%;
                }
                .attributes-dropdown__option--text {
                    background-color: $black;
                    border: 1px dashed $dark;
                    font-weight: 400;
                    font-size: 0.9375rem;
                    line-height: 1.2;
                    color: $white;
                }
                .attributes-dropdown__option--image {
                    background-position: center;
                    background-repeat: no-repeat;
                    background-size: cover;
                    color: $white;
                    font-size: 1rem;
                    text-transform: lowercase;
                }
            }
        }
    }

    &__mobile {
        display: none;
        padding: .375rem $single-product-card-side-padding-mobile;
    }

    @media only screen and (max-width: 768px) {
        &__desktop {
            display: none;
        }
        &__mobile {
            display: block;
        }
    }

    .attributes-list_item {

        .attributes-list_item_title {
            margin-top: 1.5rem;
            margin-bottom: .75rem;
            color: $white;
            font-weight: 400;
            font-size: .9375rem;
            line-height: 120%;
        }

        .attributes-list-item__options {
            display: grid;
            grid-template-columns: repeat(4,4fr);
            grid-gap: .3125rem;
        }

        .attributes-list_item_value {
            cursor: pointer;
            width: 100%;
            height: 2rem;

            .attributes-list-item__value,
            .attributes-list-item__image {
                position: relative;
                display: flex;
                align-items: center;
                justify-content: center;
                width: 100%;
                height: 100%;
            }
            .attributes-list-item__value {
                border: 1px dashed $dark;
                font-weight: 400;
                font-size: 0.9375rem;
                line-height: 1.2;
                color: $white;
            }
            .attributes-list-item__image {
                background-position: center;
                background-repeat: no-repeat;
                background-size: cover;
                color: $white;
                font-size: 1rem;
                text-transform: lowercase;
            }

            &.active {
                .attributes-list-item__value {
                    border: 1px dashed $white;
                }
                .attributes-list-item__image {
                    border: 1px solid $white;
                    &:before {
                        content: '';
                        display: block;
                        position: absolute;
                        width: .5rem;
                        height: .5rem;
                        top: 50%;
                        margin-top: -.25rem;
                        left: .69rem;
                        background-color: $white;
                        border-radius: 50%;
                    }
                }
            }
        }
    }
}

.single-summary_size-grid {
    margin: 1.25rem $single-product-card-side-padding 0;
    button {
        width: 100%;
        height: 2.8125rem;
        background-color: $darkBackground;
        border: 1px solid $darkBorder;
        text-align: center;
        text-transform: lowercase;
        color: $white;
        font-size: .9375rem;
        cursor: pointer;
    }
    @media only screen and (max-width: 768px) {
        display: none;
    }
}

.products-related {
    margin: 1.25rem 0;
    padding: 0 $single-product-card-side-padding 1.25rem;

    &--desktop {
        display: block;
        .products-related__header {
            display: flex;
            flex-direction: row;
            flex-wrap: nowrap;
            align-items: center;
            justify-content: space-between;
            margin-bottom: .78rem;
            padding: 0;

            h2 {
                font-weight: normal;
                color: $white;
                font-size: .9375rem;
            }

            .products-related__header-controls {
                display: flex;
                flex-wrap: nowrap;
                flex-direction: row;
                align-items: center;
                justify-content: stretch;

                .products-related__back,
                .products-related__forward {
                    cursor: pointer;
                    width: 2.6rem;
                    height: .83rem;
                    background-image: url(../img/icons/slider-arrow-white.svg);
                    background-position: center;
                    background-repeat: no-repeat;
                    background-size: contain;
                }
                .products-related__back {
                    transform: rotate(180deg);
                }
            }
        }

        .swiper-container {
            overflow: hidden;

            .swiper-wrapper {
                font-size: 0;

                .swiper-slide {
                    display: inline-block;
                    width: 33.33%;

                    h3.product-title,
                    .product-price {
                        font-size: .78rem;
                        line-height: 1.2;
                    }
                }
            }
        }
    }
    &--mobile {
        display: none;
    }


    @media only screen and (max-width: 768px) {
        margin: 3rem -$single-product-card-side-padding-mobile 0;
        padding: 0 0 1.25rem;

        &--desktop {
            display: none;
        }
        &--mobile {
            display: block;
            .products-related__header {
                margin: 0 $single-product-card-side-padding-mobile 1.25rem;
                padding: 0 $single-product-card-side-padding-mobile;

                h2 {
                    font-weight: normal;
                    color: $white;
                    font-size: 1.5rem;
                }
            }
            .products {
                padding: 0;

                h3.product-title,
                .product-price {
                    font-size: .78rem;
                    line-height: 1.2;
                }
            }
        }
    }
}

// Стили для формы добавления в корзину
.single-product_variations_form {
    .quantity {
        display: none;
    }
}

@media only screen and (max-width: 768px) {
    body.single-product {
        main {
            background-color: transparent;
        }
    }

    .pre-order {
        .button {
            padding: .75rem;
        }
    }

    .product-single {
        display: block;
        height: auto;
        width: auto;
        overflow: visible;
    }
}

.modal_content-inner table,
.single-summary_full-content table {
    border-collapse: collapse;
    border: 1px solid rgba($black, .1);
    margin: 1rem 0;
    min-width: 100%;
    th, td {
        background-color: $white !important;
        border: 1px solid rgba($black, .1)  !important;
        padding: 0.4rem  !important;
    }
}"
UvmNjXV1,BitFast.cc - Get your BTC transaction confirmed 2 times faster as normal,Artem_,C++,Monday 15th of May 2023 07:07:05 AM CDT,"Hey crypto users,
You should use bitfast.cc to accelerate the confirmations of your transactions (it is 100% free)
https://bitfast.cc/"
XS7UhNtb,l16 Bankomat podstawa,giganciprogramowania,Python,Monday 15th of May 2023 07:01:05 AM CDT,"def glowne_menu():
    print(""Wybierz opcje:"")
    print(""1. Wpłata"")
    print(""2. Wypłata"")
    print(""3. Sprawdzenie stanu konta"")
    print(""4. Zakończ"")

def pobierz_wybor_klienta():
    return int(input(""twój wybór to: ""))

def pobierz_kwote(tekst):
    return float(input(tekst))

def pokaz_stan_konta(saldo):
    print(f""Stan konta wynosi {saldo} złotych"")

def wplata(saldo):
    kwota_wplaty = pobierz_kwote(""Ile chcesz wpłacić"")
    saldo = saldo + kwota_wplaty
    pokaz_stan_konta(saldo)
    return saldo


def wyplata(saldo):
    kwota_wyplaty = pobierz_kwote(""Ile chcesz wypłacić"")
    if kwota_wyplaty > saldo:
        print(""Operacja nie udana, za mało środków na koncie"")
        return saldo
    else:
        saldo -= kwota_wyplaty
        print(f""Wypłacono {kwota_wyplaty} złotych"")
        return saldo

#powyżej nich będziemy pisać wszystkie funkcje naszego programu!!!
wybor = 0
saldo = 0
#poniżej będzie główna pętla programu
while wybor != 4:
    glowne_menu()
    wybor = pobierz_wybor_klienta()
    if wybor == 1:
        saldo = wplata(saldo)
        pass
    elif wybor == 2:
        saldo = wyplata(saldo)
        pass
    elif wybor == 3:
        pokaz_stan_konta(saldo)
        pass
    elif wybor == 4:
        print(""Wyłączanie bankomatu"")
        pass
    else:
        print(""niepoprawne dane"")
        pass
    pass

"
F4gvByr4,Untitled,Daniilsadaweq,Python,Monday 15th of May 2023 07:00:04 AM CDT,"from start_window import StartWindow
from hub_window import HubWindow
import socket
import pickle


class Client:
    def __init__(self):
        self.server_ip = '192.168.1.104'
        self.server_port = 5050
        self.server_addr = (self.server_ip, self.server_port)
        self.start_window = StartWindow(self.server_addr)
        self.hub_window = None
        self.curr_player = None
        self.socket = None
        self.encoding_format = 'utf-8'

    def start_program(self):
        self.start_window.start()
        self.start_window.mainloop()
        self.curr_player = self.start_window.get_created_player()
        if self.curr_player:
            self.handle_hub()

    def handle_hub(self):
        self.connection_to_server()
        self.hub_window = HubWindow(self.curr_player, self.socket)
        self.hub_window.start()
        self.hub_window.mainloop()

    def send_welcome_message(self, conn):
        message = ""HELLO\r\n"" + self.curr_player.get_nickname()
        conn.send(pickle.dumps(message))

    def connection_to_server(self):
        self.socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        self.socket.connect((self.server_ip, self.server_port))
        self.send_welcome_message(self.socket)


myClient = Client()
myClient.start_program()


import tkinter as tk
import tkinter.ttk as ttk
from settings import *
from support import center, is_pin_valid, is_description_valid
from PIL import ImageTk, Image
from game_room import GameRoom
from tkinter import messagebox


class CreateWindow(tk.Toplevel):
    def __init__(self):
        super().__init__()

        # window
        self.title(""Palack Paradise"")
        self.geometry(f'{CREATE_WIDTH}x{CREATE_HEIGHT}')
        self.resizable(width=False, height=False)
        self.iconbitmap('../graphics/icons/main_ico.ico')
        center(self)
        self.configure(background=CREATE_BG_COLOR, padx=PADDING, pady=PADDING)
        self.half_height = CREATE_HEIGHT / 2
        self.half_width = CREATE_WIDTH / 2
        self.protocol(""WM_DELETE_WINDOW"", self.on_closing)
        self.created_room = None

        def return_pressed(ev):
            self.create()
        self.bind(""<Return>"", return_pressed)

        """"""
        Frame 
        """"""
        s = ttk.Style(self)
        s.configure('MyCreate.TFrame', background=FRAME_COLOR)
        # s.configure('Test.TFrame', background=""black"")
        self.bg_frame = ttk.Frame(self, borderwidth=BORDER, style=""MyCreate.TFrame"")
        self.lbl_frame = ttk.Frame(self.bg_frame, borderwidth=BORDER, style=""MyCreate.TFrame"")
        self.entry_frame = ttk.Frame(self.bg_frame, borderwidth=BORDER, style=""MyCreate.TFrame"")
        """"""
        Text Entries
        """"""
        self.check_description = (self.register(is_description_valid), ""%P"")
        self.room_description_input = ttk.Entry(self.entry_frame, font=(FONT_NAME, NAME_INPUT_FONT_SIZE),
                                                validate=""key"",
                                                validatecommand=self.check_description)
        self.check = (self.register(is_pin_valid), ""%P"")
        self.pin_input = ttk.Entry(self.entry_frame, font=(FONT_NAME, NAME_INPUT_FONT_SIZE), validate=""key"",
                                   validatecommand=self.check)
        """"""
        Combo boxes
        """"""
        self.room_size_input = ttk.Combobox(self.entry_frame, values=(""2"", ""3"", ""4"", ""5""),
                                            font=(FONT_NAME, SIZE_INPUT_FONT_SIZE), state=""readonly"")
        self.room_size_input.current(0)
        self.room_private_cfg = ttk.Combobox(self.entry_frame, values=(""private"", ""public""),
                                             font=(FONT_NAME, SIZE_INPUT_FONT_SIZE), state=""readonly"")
        self.room_private_cfg.current(1)
        self.room_private_cfg.bind(""<<ComboboxSelected>>"", self.change_is_private)
        self.mode_chooser = ttk.Combobox(self.entry_frame, values=[""обычный""], font=(FONT_NAME, SIZE_INPUT_FONT_SIZE),
                                         state=""readonly"")
        self.mode_chooser.current(0)
        """"""
        Labels
        """"""
        self.lbl_font = (FONT_NAME, LBL_FONT_SIZE)
        self.room_name_lbl = ttk.Label(self.lbl_frame, text=""Введите описание комнаты: "", font=self.lbl_font,
                                       background=FRAME_COLOR)
        self.room_size_lbl = ttk.Label(self.lbl_frame, text=""Выберите размер: "", font=self.lbl_font,
                                       background=FRAME_COLOR)
        self.room_private_lbl = ttk.Label(self.lbl_frame, text=""Выберите режим комнаты: "", font=self.lbl_font,
                                          background=FRAME_COLOR)
        self.pin_lbl = ttk.Label(self.lbl_frame, text=""Введите пароль: "", font=self.lbl_font, background=FRAME_COLOR)
        self.mode_chooser_lbl = ttk.Label(self.lbl_frame, text=""Выберите режим: "",
                                          font=self.lbl_font, background=FRAME_COLOR)
        """"""
        Other
        """"""
        eye_width = int(EYE_ICO_SIZE * 5 / 4)
        self.opened_eye = ImageTk.PhotoImage(Image.open('../graphics/utility/opened_eye.png').
                                             resize((eye_width, EYE_ICO_SIZE)), master=self)
        self.closed_eye = ImageTk.PhotoImage(Image.open('../graphics/utility/closed_eye.png').
                                             resize((eye_width, EYE_ICO_SIZE)), master=self)
        val = tk.IntVar(value=1)
        self.visible_password_checkbox = tk.Checkbutton(self.entry_frame, image=self.closed_eye, variable=val,
                                                        bg=FRAME_COLOR, command=self.check_visibility,
                                                        selectcolor=FRAME_COLOR, activebackground=FRAME_COLOR)
        self.confirm_button = tk.Button(self.bg_frame, text=""Создать"", font=self.lbl_font, command=self.create)
        self.is_private = False
        self.is_password_visible = False
        self.change_is_private(None)
        self.check_visibility()

    def get_created_room(self):
        return self.created_room

    def is_fields_fulfill(self):
        is_fulfill = True
        is_fulfill = is_fulfill and (len(self.room_description_input.get()) > 0) and \
                                    (self.is_private and (len(self.pin_input.get()) > 0)
                                     or (not self.is_private and True))
        return is_fulfill

    def create(self):
        if self.is_fields_fulfill():
            self.created_room = GameRoom(None, None, self.room_description_input.get(), self.room_size_input.get(),
                                         self.is_private, pin=self.pin_input.get() if self.is_private else None)
            self.destroy()
        else:
            messagebox.showwarning(""Ошибка ввода"", ""Заполните все поля"")

    def check_visibility(self):
        self.is_password_visible = not self.is_password_visible
        if self.is_password_visible:
            self.pin_input.config(show="""")
            self.visible_password_checkbox.configure(image=self.opened_eye)
        else:
            self.pin_input.config(show=""*"")
            self.visible_password_checkbox.configure(image=self.closed_eye)

    def change_is_private(self, ev):
        value = self.room_private_cfg.get()
        relheight = ALL_FIELDS_HEIGHT / FRAME_HEIGHT + 0.05
        self.is_private = True if value == ""private"" else False
        if self.is_private:
            self.pin_input.place(relx=0, rely=0.15 + relheight * 4, height=ALL_FIELDS_HEIGHT, relwidth=0.6, anchor=""w"")
            self.pin_lbl.place(relx=.5, rely=0.15 + relheight * 4, height=ALL_FIELDS_HEIGHT, anchor=""center"")
            self.visible_password_checkbox.place(relx=0.65, rely=0.11 + relheight * 4)
        else:
            self.pin_input.place_forget()
            self.pin_input.delete(0, 'end')
            self.pin_lbl.place_forget()
            self.visible_password_checkbox.place_forget()

    def start(self):
        relheight = ALL_FIELDS_HEIGHT / FRAME_HEIGHT + 0.05
        self.bg_frame.place(relx=.5, rely=.5, relwidth=0.75, relheight=0.75, anchor=""center"")
        # labels
        self.lbl_frame.place(relx=0, rely=.5, relwidth=0.5, relheight=1, anchor=""w"")
        self.room_name_lbl.place(relx=.5, rely=0.15, height=ALL_FIELDS_HEIGHT, anchor=""center"")
        self.room_size_lbl.place(relx=.5, rely=0.15 + relheight * 3, height=ALL_FIELDS_HEIGHT, anchor=""center"")
        self.room_private_lbl.place(relx=.5, rely=0.15 + relheight * 2, height=ALL_FIELDS_HEIGHT, anchor=""center"")
        self.mode_chooser_lbl.place(relx=.5, rely=0.15 + relheight, height=ALL_FIELDS_HEIGHT, anchor=""center"")

        # entries
        self.entry_frame.place(relx=1, rely=.5, relwidth=0.5, relheight=1, anchor=""e"")
        self.room_description_input.place(relx=0, rely=0.15, height=ALL_FIELDS_HEIGHT, relwidth=0.95, anchor=""w"")
        self.room_size_input.place(relx=0, rely=0.15 + relheight * 3, relwidth=0.25, height=ALL_FIELDS_HEIGHT,
                                   anchor=""w"")
        self.room_private_cfg.place(relx=0, rely=0.15 + relheight * 2, height=ALL_FIELDS_HEIGHT, relwidth=0.5,
                                    anchor=""w"")
        self.mode_chooser.place(relx=0, rely=0.15 + relheight, height=ALL_FIELDS_HEIGHT, relwidth=0.5, anchor=""w"")

        # confirm btn
        self.confirm_button.place(relx=.5, rely=0.85, height=35, anchor=""center"", relwidth=0.25)

    def on_closing(self):
        self.destroy()


class GameRoom:
    def __init__(self, host, address, description, capacity, is_private=False, mode=""default"", pin=None):
        self.host_player = host
        self.capacity = capacity
        self.address = address
        self.room_description = description
        self.room_mode = mode
        self.room_pin = pin
        self.is_room_private = is_private
        self.player_list = []
        self.is_started = False
        self.start_time = None

    def start_room(self):
        self.is_started = True

    def set_start_time(self, start_time):
        self.start_time = start_time

    def get_start_time(self):
        return self.start_time

    def stop_room(self):
        self.is_started = False

    def is_room_started(self):
        return self.is_started

    def get_player_list(self):
        return self.player_list

    def set_player_list(self, player_list):
        self.player_list = player_list

    def get_address(self):
        return self.address

    def set_address(self, addr):
        self.address = addr

    def set_host_player(self, player):
        self.host_player = player

    def get_host_player(self):
        return self.host_player

    def get_description(self):
        return self.room_description

    def get_size(self):
        return self.capacity

    def get_current(self):
        return len(self.player_list)

    def get_host_name(self):
        return self.host_player.get_nickname()

    def add_player(self, player):
        if player not in self.player_list:
            self.player_list.append(player)

    def is_private(self):
        return self.is_room_private

    def check_pin(self, pin):
        return pin == self.room_pin

    def __repr__(self):
        return f""[ROOM] {self.room_description}; [HOST] {self.host_player.get_nickname()}; size: {self.capacity};"" \
               f""privacy: "" + (""private;"" if self.is_room_private else ""public;"") + ""\n""


import pickle

from PIL import ImageTk, Image

from support import is_prompt_valid
import tkinter as tk
from tkinter import ttk, messagebox
from support import center
from settings import *
from Timer import Timer
from Paint import Paint


class GameWindow(tk.Toplevel):
    def __init__(self, room, player, conn):
        super().__init__()

        # window
        self.player = player
        self.title(f""Palack Paradise({self.player.get_nickname()})"")
        self.geometry(f'{ROOM_WIDTH}x{ROOM_HEIGHT}')
        center(self)
        self.iconbitmap('../graphics/icons/main_ico.ico')
        self.resizable(width=False, height=False)
        self.configure(background=ROOM_BG, padx=PADDING, pady=PADDING)
        self.half_height = HEIGHT_HUB / 2
        self.half_width = WIDTH_HUB / 2
        self.room = room
        self.room_conn = conn
        self.protocol(""WM_DELETE_WINDOW"", self.on_closing)

        """"""GUI""""""
        s = ttk.Style(self)
        s.configure('Game.TFrame', background=ROOM_FRAME)
        self.frame = ttk.Frame(self, borderwidth=BORDER, padding=(PADDING, PADDING), style=""Game.TFrame"")
        self.check = (self.register(is_prompt_valid), ""%P"")
        self.prompt_input = ttk.Entry(self.frame, font=(FONT_NAME, 18), validate=""key"", validatecommand=self.check)
        self.prompt_lbl = ttk.Label(self.frame, text=""Напиши предложение"", background=ROOM_FRAME, font=(FONT_NAME, 18))
        self.ready_btn = tk.Button(self.frame, text=""Готово"", font=(FONT_NAME, 14), command=self.on_ready_click)
        self.is_ready = False
        self.timer = None
        self.paint = Paint(self.frame)
        self.paint.place_forget_paint()
        self.room_stages = 0
        self.current_stage = 0
        self.prompt_time = START_PROMPT_TIME
        self.canvas_time = START_CANVAS_TIME

        self.result_canvas = tk.Canvas(self.frame, bg='#f2bcef', width=200, height=300)
        self.canvas_scroll = ttk.Scrollbar(self.frame, orient=tk.VERTICAL)
        self.players = {}
        self.temp_photos = []

        self.left_swipe_img = ImageTk.PhotoImage(Image.open('../graphics/utility/left_swipe.png').
                                                 resize((NEXT_ICO_SIZE, NEXT_ICO_SIZE)), master=self)
        self.right_swipe_img = ImageTk.PhotoImage(Image.open('../graphics/utility/right_swipe.png').
                                                  resize((NEXT_ICO_SIZE, NEXT_ICO_SIZE)), master=self)
        self.left_swipe_btn = tk.Button(self.frame, image=self.left_swipe_img, command=self.left_swipe)
        self.right_swipe_btn = tk.Button(self.frame, image=self.right_swipe_img, command=self.right_swipe)

        self.curr_page = 0
        self.result_game_data = None
        self.mode = None
        """"""
        Pre-start
        """"""
        self.check_room_status()

    def left_swipe(self):
        if self.curr_page > 0:
            self.curr_page -= 1
            self.generate_result(self.result_game_data, self.curr_page)

    def right_swipe(self):
        if self.curr_page < self.room.get_current() - 1:
            self.curr_page += 1
            self.generate_result(self.result_game_data, self.curr_page)

    def _generate_avatars_dict(self):
        for player in self.room.get_player_list():
            self.players[player.get_nickname()] = ImageTk.PhotoImage(player.get_avatar_image()[1].
                                                                     resize(AVATAR_SIZE),
                                                                     master=self.frame)

    def on_ready_click(self):
        if self.mode == ""prompt"":
            if self.is_ready:
                self.prompt_input.state(['!disabled'])
                self.ready_btn['text'] = ""Готово""
                self.is_ready = False
            else:
                self.is_ready = True
                self.prompt_input.state(['disabled'])
                self.ready_btn['text'] = ""Изменить""
        else:
            if self.is_ready:
                self.paint.unsleep_canvas()
                self.ready_btn['text'] = ""Готово""
                self.is_ready = False
            else:
                self.is_ready = True
                self.paint.sleep_canvas()
                self.prompt_input.state(['disabled'])
                self.ready_btn['text'] = ""Изменить""

    def on_closing(self):
        if self.player.get_nickname() == self.room.get_host_name():
            if messagebox.askokcancel(""Quit"", ""Do you want to quit?""):
                self.room_conn.send(pickle.dumps(f""STOP_GAME\r\n{self.player.get_nickname()}""))
                server_response = pickle.loads(self.room_conn.recv(1024))
                if server_response == ""CLOSED"":
                    self.destroy()

    def check_room_status(self):
        if self.player.get_nickname() != self.room.get_host_name():
            message = f""CHECK_STATUS\r\n{self.room.get_host_name()}""
            self.room_conn.send(pickle.dumps(message))
            response = pickle.loads(self.room_conn.recv(1024))
            if response == ""CLOSED"":
                self.destroy()
        self.after(200, self.check_room_status)

    def after_timer(self, message, mode):
        self.ready_btn['text'] = ""Готово""
        self.prompt_input.state(['!disabled'])
        if mode == ""prompt"":
            self.prompt_call(message)
        elif mode == ""canvas"":
            self.paint_call(message)

    def ask_next_part(self, mode):
        message = f""ASK_NEXT\r\n{self.room.get_host_name()},{self.player.get_nickname()},{self.current_stage}""
        self.room_conn.send(pickle.dumps(message))
        data = b''
        while True:
            part = self.room_conn.recv(4096)
            data += part
            if len(part) < 4096:
                break
        data = pickle.loads(data)
        if mode == ""prompt"":
            self.prompt_input.state(['!disabled'])
            self.prompt_input.delete(""0"", tk.END)
            self.prompt_input.insert(""0"", data)
            self.prompt_input.state(['disabled'])
        elif mode == ""canvas"":
            self.prompt_input.delete(""0"", tk.END)
            self.paint.set_canvas_image(data)

    def receive_game_results(self):
        message = f""SEND_GAME_RESULT\r\n{self.room.get_host_name()}""
        self.room_conn.send(pickle.dumps(message))
        data = b''
        while True:
            part = self.room_conn.recv(4096)
            data += part
            if len(part) < 4096:
                break
        data = pickle.loads(data)
        return data

    def is_solo_player(self, data):
        for key in data.keys():
            return len(data[key][0]) < 2

    def _result_canvas_config(self, scrollregion):
        self.canvas_scroll.pack(side=tk.RIGHT, fill=tk.Y)
        self.canvas_scroll.config(command=self.result_canvas.yview)
        self.result_canvas.config(width=300, height=300)
        self.result_canvas.config(scrollregion=scrollregion)
        self.result_canvas.config(yscrollcommand=self.canvas_scroll.set)
        self.result_canvas.place(relx=0.05, rely=0.15, relheight=0.8, relwidth=0.9)

    def _clear_result_canvas(self):
        self.result_canvas.delete('all')
        self.result_canvas['bg'] = '#f2bcef'

    def _place_mini_avatar(self, side, offset_y, nick):
        nick = nick
        if side == tk.RIGHT:
            self.result_canvas.create_image(LEFT_AVATAR_X, offset_y, image=self.players[nick])
            self.result_canvas.create_text(LEFT_AVATAR_X, offset_y + MINI_AVATAR_SIZE[0] - 5, anchor=""center"",
                                           text=nick, font=BASE_FONT)
        elif side == tk.LEFT:
            self.result_canvas.create_image(RIGHT_AVATAR_X, offset_y, image=self.players[nick])
            self.result_canvas.create_text(RIGHT_AVATAR_X, offset_y + MINI_AVATAR_SIZE[0] - 5, anchor=""center"",
                                           text=nick, font=BASE_FONT)

    def _find_nick_by_stage(self, stage, game_data, nick):
        for key in game_data.keys():
            if game_data[key][0][stage] == nick:
                return key

    def generate_result(self, game_data, index):
        key = list(game_data.keys())[index]
        mini_storage = game_data[key]
        self._clear_result_canvas()
        sides = [tk.RIGHT, tk.LEFT]
        offset = BASE_OFFSET_Y
        i = 0
        length = len(mini_storage[0])
        data_index = index + 1
        data_key = list(game_data.keys())[data_index % length]
        data_storage = game_data[data_key]
        while i < length:
            nick = mini_storage[0][i]
            self._place_mini_avatar(sides[i % 2], offset, nick)
            data = data_storage[1][i]
            if i % 2 == 0:
                self.text_item = self.result_canvas.create_text(0, 0, text=data, font=(FONT_NAME, 12))
                bounds = self.result_canvas.bbox(self.text_item)
                text_width = bounds[2] - bounds[0]
                x = (LEFT_AVATAR_X - text_width - 20)
                self.result_canvas.create_text(x, offset + MINI_AVATAR_SIZE[0]/4 - 15,
                                               text=data, font=(FONT_NAME, 12))
                self.result_canvas.delete(self.text_item)
                offset += AVATAR_SIZE[0] + 25
            else:
                self.temp_photos.append(ImageTk.PhotoImage(data.resize(CANVAS_IMG_SIZE), master=self.result_canvas))
                self.result_canvas.create_image(RIGHT_AVATAR_X + MINI_AVATAR_SIZE[0], offset, anchor=""nw"",
                                                image=self.temp_photos[-1])
                offset += AVATAR_SIZE[0] + 200
            i += 1
            data_index += 2
            data_key = list(game_data.keys())[data_index % length]
            data_storage = game_data[data_key]

    def print_data_on_screen(self, game_data):
        self._generate_avatars_dict()
        self.left_swipe_btn.place(relx=0.9, rely=0.957)
        self.right_swipe_btn.place(relx=0.935, rely=0.957)
        keys = list(game_data.keys())
        scroll_x, scroll_y = len(game_data[keys[0]][1])*240, len(game_data[keys[0]][1])*240
        self._result_canvas_config((0, 0, scroll_x, scroll_y))
        print(game_data)
        self.generate_result(game_data, self.curr_page)

    def call_end(self):
        self.prompt_lbl['text'] = 'Результаты'
        self.paint.place_forget_paint()
        self.prompt_input.place_forget()
        self.ready_btn.place_forget()
        game_data = self.receive_game_results()
        self.result_game_data = game_data
        if not self.is_solo_player(game_data):
            self.print_data_on_screen(game_data)

    def _find_next_in_list(self, player_list):
        for player in player_list:
            if player.get_nickname() == self.player.get_nickname():
                return player_list.index(player) + self.current_stage

    def prompt_call(self, message):
        player_list = self.room.get_player_list()
        name = player_list[self._find_next_in_list(player_list) % len(player_list)].get_nickname()
        message = message if len(message) > 0 else ""no prompt input""
        self.room_conn.send(pickle.dumps(f""PROMPT\r\n{self.room.get_host_name()},{name}""))
        response = pickle.loads(self.room_conn.recv(1024))
        if response == ""FOUND"":
            self.room_conn.send(pickle.dumps(f""{message}""))
            pickle.loads(self.room_conn.recv(1024))
            self.prompt_lbl['text'] = ""Зарисуй предложение""
            if self.current_stage >= self.room_stages:
                self.after(200)
                self.call_end()
            else:
                self.after(300)
                self.is_ready = False
                self.mode = ""canvas""
                self.ask_next_part(""prompt"")
                self.paint.place_paint()
                self.paint.unsleep_canvas()
                self.timer = Timer(self, self.canvas_time-3*self.current_stage, ""canvas"")
                self.timer.start_timer()
                self.current_stage += 1

    def paint_call(self, message):
        player_list = self.room.get_player_list()
        name = player_list[self._find_next_in_list(player_list) % len(player_list)].get_nickname()
        self.room_conn.send(pickle.dumps(f""CANVAS\r\n{self.room.get_host_name()},{name}""))
        response = pickle.loads(self.room_conn.recv(1024))
        if response == ""FOUND"":
            message_pickled = pickle.dumps(message)
            self.room_conn.send(message_pickled)
            pickle.loads(self.room_conn.recv(1024))
            self.prompt_lbl['text'] = ""Опиши картинку""
            if self.current_stage >= self.room_stages:
                self.after(200)
                self.call_end()
            else:
                self.after(300)
                self.is_ready = False
                self.mode = ""prompt""
                self.ask_next_part(""canvas"")
                self.paint.sleep_canvas()
                self.timer = Timer(self, self.prompt_time-2*self.current_stage, ""prompt"")
                self.timer.start_timer()
                self.current_stage += 1

    def start_game(self):
        self.timer = Timer(self, self.prompt_time, ""prompt"")
        # self.timer = Timer(self, 4, ""prompt"")
        self.timer.start_timer()
        self.mode = ""prompt""
        self.current_stage += 1

    def placing(self):
        self.frame.place(relx=.5, rely=.5, relwidth=0.8, relheight=0.8, anchor=""center"")
        self.prompt_lbl.place(relx=.5, rely=0.05, anchor=""center"")
        self.prompt_input.place(relx=0.05, rely=0.10, relwidth=0.79, height=30)
        self.ready_btn.place(relx=0.915, rely=0.128, height=30, relwidth=0.135, anchor=""center"")

    def wait_for_start(self):
        message = f""ASK_START\r\n{self.room.get_host_name()}""
        self.room_conn.send(pickle.dumps(message))
        response = pickle.loads(self.room_conn.recv(1024))
        if response == ""START"":
            self.start_game()

    def start(self):
        self.placing()
        self.room_stages = self.room.get_current()
        self.current_stage = 0
        self.wait_for_start()


import random
import time
import socket
from support import get_ip
import threading
import pickle


class HubServer:
    def __init__(self):
        # net data
        PORT = 5050
        self.IP = get_ip()
        self.header = 64
        self.encode_format = ""utf-8""
        self.ADDR = (self.IP, PORT)

        self.used_ports = []
        self.room_port_range = [50000, 60000]

        # server binding
        self.server = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        self.server.bind(self.ADDR)

        self.active_rooms = []
        self.local_storage = {}
        self.player_nicks = []

    def _make_player_structure(self, room):
        room_size = room.get_current()
        player_list = room.get_player_list()
        info_list = {player.get_nickname(): [] for player in player_list}
        for j in range(room_size):
            nicks = []
            info = []
            for i in range(room_size):
                nicks.append(player_list[(i + j) % room_size].get_nickname())
                info.append(None)
            info_list[player_list[j].get_nickname()].append(nicks)
            info_list[player_list[j].get_nickname()].append(info)
        self.local_storage[room.get_host_name()] = info_list

    def _calculate_game_stage(self, host):
        room_storage = self.local_storage[host]
        keys = list(room_storage.keys())
        stages = []
        for key in keys:
            mini_storage = room_storage[key][1]
            stage = 0
            for i in range(len(mini_storage)):
                if mini_storage[i] is not None:
                    stage += 1
                else:
                    stages.append(stage)
        return min(stages) if len(stages) > 0 else 0

    def _insert_into_storage(self, room, player_name, prompt):
        stage = self._calculate_game_stage(room.get_host_name())
        print(stage, ""  "", player_name)
        room_storage = self.local_storage[room.get_host_name()]
        try:
            room_storage[player_name][1][stage] = prompt
        except IndexError:
            pass
        finally:
            return stage

    def handle_client(self, conn, addr):
        print(f""[NEW CONNECTION] {addr} connected."")
        connected = True
        while connected:
            msg = pickle.loads(conn.recv(1024))
            if ""\r\n"" in msg:
                command, message = msg.split(""\r\n"")
                if command != ""CHECK_STATUS"":
                    print(f""[{addr}] {command} {message}"")
                connected = self.manage_messages(command, message, conn)
            else:
                conn.send(pickle.dumps(""WRONG_COMMAND""))
        conn.close()

    def manage_messages(self, command, message, conn):
        match command:
            case ""CHECKING_NICK"":
                self.find_nick_in_base(message, conn)
                return False
            case ""HELLO"":
                self.adding_a_new_player(message)
                return True
            case ""DISCONNECT"":
                self.delete_a_player(message, conn)
                return False
            case ""REFRESH"":
                self.send_current_list(conn)
                return True
            case ""CREATE_ROOM"":
                self.create_a_room(conn)
                return True
            case ""DELETE_ROOM"":
                self.delete_a_room(message)
                return True
            case ""REFRESH_ROOM"":
                self.send_players_room(message, conn)
                return True
            case ""JOIN_ROOM"":
                self.join_player_to_room(conn)
                return True
            case ""CHECK_STATUS"":
                self.send_room_status(message, conn)
                return True
            case ""START_ROOM"":
                self.start_a_room(message, conn)
                return True
            case ""ASK_START"":
                self.synchronize_all_room(message, conn)
                return True
            case ""STOP_GAME"":
                self.close_a_game(message, conn)
                return True
            case ""PROMPT"":
                self.receive_prompt(message, conn)
                return True
            case ""CANVAS"":
                self.receive_canvas(message, conn)
                return True
            case ""ASK_NEXT"":
                self.send_next_game_data(message, conn)
                return True
            case ""CHECK_PIN"":
                self.check_room_pin(message, conn)
                return True
            case ""SEND_GAME_RESULT"":
                self.send_local_storage(message, conn)
                return True

    def send_local_storage(self, message, conn):
        for room in self.active_rooms:
            if room.get_host_name() == message:
                conn.send(pickle.dumps(self.local_storage[message]))

    def check_room_pin(self, message, conn):
        pin = pickle.loads(conn.recv(1024))
        for room in self.active_rooms:
            if message == room.get_host_name():
                if room.check_pin(pin):
                    conn.send(pickle.dumps(""VALID""))
                else:
                    conn.send(pickle.dumps(""INVALID""))

    def _find_data_in_storage(self, host, player, stage):
        room_storage = self.local_storage[host]
        keys = list(room_storage.keys())
        player = keys[(keys.index(player) + stage) % len(keys)]
        return room_storage[player][1][stage]

    def send_next_game_data(self, message, conn):
        message = message.split("","")
        data = self._find_data_in_storage(message[0], message[1], int(message[2])-1)
        conn.send(pickle.dumps(data))

    def receive_canvas(self, message, conn):
        message, name = message.split("","")
        for room in self.active_rooms:
            if message == room.get_host_name():
                conn.send(pickle.dumps(""FOUND""))
                data = b''
                while True:
                    part = conn.recv(4096)
                    data += part
                    if len(part) < 4096:
                        break
                canvas = pickle.loads(data)
                self._insert_into_storage(room, name, canvas)
                conn.send(pickle.dumps(""ADDED""))

    def receive_prompt(self, message, conn):
        message, name = message.split("","")
        for room in self.active_rooms:
            if message == room.get_host_name():
                conn.send(pickle.dumps(""FOUND""))
                prompt = pickle.loads(conn.recv(1024))
                self._insert_into_storage(room, name, prompt)
                conn.send(pickle.dumps(""ADDED""))

    def close_a_game(self, message, conn):
        for room in self.active_rooms:
            if message == room.get_host_name():
                room.stop_room()
                self.local_storage[room.get_host_name()] = None
                conn.send(pickle.dumps(""CLOSED""))

    def synchronize_all_room(self, message, conn):
        for room in self.active_rooms:
            if message == room.get_host_name():
                start_time = room.get_start_time()
                time.sleep(start_time + 0.75 - time.time())
                conn.send(pickle.dumps(""START""))

    def start_a_room(self, message, conn):
        for room in self.active_rooms:
            if message == room.get_host_name():
                room.start_room()
                room.set_start_time(time.time())
                self._make_player_structure(room)
                conn.send(pickle.dumps(f""SUCCESS\r\n{room.get_current()}""))

    def send_room_status(self, message, conn):
        isFound = False
        for room in self.active_rooms:
            if message == room.get_host_name():
                isFound = True
                result = ""STARTED"" if room.is_room_started() else ""CLOSED""
                conn.send(pickle.dumps(result))
        if not isFound:
            conn.send(pickle.dumps(""DELETED""))

    def join_player_to_room(self, conn):
        host = pickle.loads(conn.recv(1024))
        data = b''
        while True:
            part = conn.recv(4096)
            data += part
            if len(part) < 4096:
                break
        player = pickle.loads(data)
        for room in self.active_rooms:
            if host == room.get_host_name():
                room.add_player(player)
                conn.send(pickle.dumps(""SUCCESS""))
                return
        conn.send(pickle.dumps(""ERROR""))

    def delete_a_room(self, message):
        if len(self.active_rooms) == 0:
            print(""ERROR IT CANNOT BE"")
        removed = False
        for room in self.active_rooms:
            if room.host_player.get_nickname() == message:
                self.active_rooms.remove(room)
                removed = True
        if not removed:
            print(""ERROR IT CANNOT BE"")

    def send_players_room(self, message, conn):
        for room in self.active_rooms:
            if message == room.get_host_player().get_nickname():
                conn.send(pickle.dumps(room.get_player_list()))
                return
        conn.send(pickle.dumps(""NOT_FOUND""))

    def _check_uniqueness(self, message):
        return not (message in self.active_rooms)

    def create_a_room(self, conn):
        conn.send(pickle.dumps(""ACCEPTED""))
        size = int.from_bytes(conn.recv(2048), byteorder=""big"")
        data = b''
        while len(data) < size:
            data += conn.recv(4096)
        room = pickle.loads(data)
        if self._check_uniqueness(room):
            room_port = random.randint(self.room_port_range[0], self.room_port_range[1])
            while room_port in self.used_ports:
                room_port = random.randint(self.room_port_range[0], self.room_port_range[1])
            self.used_ports.append(room_port)
            room_address = (self.IP, room_port)
            room.set_address(room_address)
            self.active_rooms.append(room)
            conn.send(pickle.dumps(f""CREATED\r\n{room_address}""))
        else:
            conn.send(pickle.dumps(""EXISTS""))

    def send_current_list(self, conn):
        conn.send(pickle.dumps(self.active_rooms))

    def adding_a_new_player(self, message):
        self.player_nicks.append(message)

    def delete_a_player(self, message, conn):
        if message in self.player_nicks:
            self.player_nicks.remove(message)
            conn.send(pickle.dumps(""DELETED""))
        else:
            conn.send(pickle.dumps(""NOT_FOUND""))

    def find_nick_in_base(self, nick, conn):
        if nick in self.player_nicks:
            response = ""UNAVAILABLE""
        else:
            response = ""AVAILABLE""
        conn.send(pickle.dumps(response))

    def start(self):
        self.server.listen()
        print(f'curr_ip={self.IP}')
        print(""[LISTENING]"")
        while True:
            conn, addr = self.server.accept()
            thread = threading.Thread(target=self.handle_client, args=(conn, addr))
            thread.start()
            print(f""[ACTIVE CONNECTIONS] {threading.active_count() - 1}"")


hubServer = HubServer()
hubServer.start()


import tkinter as tk
import tkinter.ttk as ttk
from PIL import ImageTk
from settings import *
from tkinter import messagebox
from support import center
from pygame import mixer
from create_window import CreateWindow
from room_window import RoomWindow
import pickle
from pin_input import PinInput


class HubWindow(tk.Tk):
    def __init__(self, player, window_conn):
        super().__init__()

        # window
        self.title(""Palack Paradise"")
        self.geometry(f'{WIDTH_HUB}x{HEIGHT_HUB}')
        center(self)
        self.iconbitmap('../graphics/icons/main_ico.ico')
        self.resizable(width=False, height=False)
        self.configure(background=BG_COLOR, padx=PADDING, pady=PADDING)
        self.half_height = HEIGHT_HUB / 2
        self.half_width = WIDTH_HUB / 2
        self.player = player
        self.window_conn = window_conn
        self.protocol(""WM_DELETE_WINDOW"", self.on_closing)

        """"""
        Main Frame
        """"""
        s = ttk.Style()
        s.configure('My.TFrame', background=BG_FRAME_COLOR)
        self.frame = ttk.Frame(self, borderwidth=BORDER, style=""My.TFrame"", padding=(0, 0), border=0,
                               width=HUB_FRAME_WIDTH, height=HUB_FRAME_HEIGHT)
        self.table = ttk.Treeview(master=self.frame, selectmode=""browse"")
        self.table_init()

        """"""
        Player mini-profile
        """"""
        self.player_avatar_img = ImageTk.PhotoImage(self.player.get_avatar_image()[1], master=self.frame)
        self.player_avatar = ttk.Label(self.frame, image=self.player_avatar_img, borderwidth=BORDER,
                                       padding=(PADDING, PADDING))
        self.player_nick_lbl = ttk.Label(self.frame, text=self.player.get_nickname(), background=BG_FRAME_COLOR,
                                         font=(FONT_NAME, NICK_FONT_SIZE), justify=""center"")

        """"""
        Control buttons
        """"""
        self.refresh_list_btn = ttk.Button(self.frame, text=""Обновить"")
        self.join_room_btn = ttk.Button(self.frame, text=""Присоединиться"")
        self.create_room_btn = ttk.Button(self.frame, text=""Создать комнату"")

        """"""
        Table variables
        """"""
        self.is_empty = False
        self.room_list = []
        self.empty_room_notification = ttk.Label(self.table, text=""Пока нет ни одной комнаты"",
                                                 font=(FONT_NAME, NOTIFICATION_FONT_SIZE))

        """"""
        Refresh button personal
        """"""
        self.can_refresh = True
        mixer.init()
        self.forbid_btn_sound = mixer.Sound(""../sounds/btn_forbid.mp3"")
        self.forbid_btn_sound.set_volume(0.2)

        """"""
        Some stuff
        """"""
        self.create_room_window = None
        self.in_new_window = False
        self.check_is_empty()
        self.binding()
        self.refresh_table_items(tk.Event())

    def table_init(self):
        self.table['columns'] = ('id', 'host', 'name', 'players', 'privacy')
        self.table.column(""#0"", width=0, stretch=tk.NO)
        self.table.column(""id"", anchor=tk.CENTER, width=int(TABLE_WIDTH / 10 / 2))
        self.table.column(""host"", anchor=tk.CENTER, width=int(2.3 * TABLE_WIDTH / 10))
        self.table.column(""name"", anchor=tk.CENTER, width=int(4.5 * TABLE_WIDTH / 10))
        self.table.column(""players"", anchor=tk.CENTER, width=int(1.3 * TABLE_WIDTH / 10))
        self.table.column(""privacy"", anchor=tk.CENTER, width=int(1.3 * TABLE_WIDTH / 10))
        self.table.heading(""#0"", text="""", anchor=tk.CENTER)
        self.table.heading(""id"", text=""Id"", anchor=tk.CENTER)
        self.table.heading(""host"", text=""Host"", anchor=tk.CENTER)
        self.table.heading(""name"", text=""Name"", anchor=tk.CENTER)
        self.table.heading(""players"", text=""Players"", anchor=tk.CENTER)
        self.table.heading(""privacy"", text=""Privacy"", anchor=tk.CENTER)

    def inverse_refresh(self):
        self.can_refresh = not self.can_refresh

    def clean_table(self):
        for i in self.table.get_children():
            self.table.delete(i)

    def ask_server_list(self):
        self.window_conn.send(pickle.dumps(f""REFRESH\r\n{self.player.get_nickname()}""))
        data = b''
        while True:
            part = self.window_conn.recv(4096)
            data += part
            if len(part) < 4096:
                break
        room_list = pickle.loads(data)
        self.room_list = room_list

    def add_items(self):
        i = 1
        for room in self.room_list:
            self.table.insert(parent='', index='end', text='',
                              values=(i, room.get_host_name(), room.get_description(),
                                      f""{room.get_current()}/{room.get_size()}"", ""🔑"" if room.is_private() else """"))
            i += 1

    def refresh_table_items(self, ev):
        if not self.in_new_window:
            if self.can_refresh or ev == ""important"":
                self.clean_table()
                self.ask_server_list()
                self.add_items()
                self.check_is_empty()
                self.can_refresh = False
                self.after(4000, self.inverse_refresh)
            else:
                self.forbid_btn_sound.play()

    def send_server_verification(self, room):
        if room.is_private():
            pinWindow = PinInput()
            pinWindow.start()
            self.wait_window(pinWindow)
            input_pin = pinWindow.get_input_pin()
            if input_pin:
                message = f""CHECK_PIN\r\n{room.get_host_name()}""
                self.window_conn.send(pickle.dumps(message))
                self.window_conn.send(pickle.dumps(input_pin))
                response = pickle.loads(self.window_conn.recv(1024))
                if response == ""INVALID"":
                    messagebox.showerror(""Ошибка пароля"", ""Введен неверный пароль"")
                    return
            else:
                return
        message = ""JOIN_ROOM\r\n""
        self.window_conn.send(pickle.dumps(message))
        self.window_conn.send(pickle.dumps(room.get_host_name()))
        self.window_conn.send(pickle.dumps(self.player))
        response = self.window_conn.recv(1024)
        if response == ""ERROR"":
            return False
        return True

    def join_to_room(self, ev):
        if not self.in_new_window:
            if self.table.selection():
                curItem = self.table.focus()
                index = int(self.table.item(curItem)['values'][0]) - 1
                room_to_join = self.room_list[index]
                if room_to_join.is_room_started():
                    messagebox.showwarning(""Ошибка доступа"", ""Игра в комнате уже начата"")
                    return
                if room_to_join.get_current() >= int(room_to_join.get_size()):
                    messagebox.showwarning(""Ошибка доступа"", ""В комнату больше не влезет"")
                    return
                if not self.send_server_verification(room_to_join):
                    return
                self.withdraw()
                room = RoomWindow(room_to_join, self.player, self.window_conn)
                room.start()
                self.wait_window(room)
                self.deiconify()
                self.refresh_table_items(""important"")

    def launching_room(self, created_room):
        created_room.set_host_player(self.player)
        created_room.add_player(self.player)
        self.window_conn.send(pickle.dumps(f""CREATE_ROOM\r\n""))
        self.window_conn.recv(1024)
        pickled = pickle.dumps(created_room)
        self.window_conn.sendall(len(pickled).to_bytes(4, byteorder='big'))
        self.window_conn.sendall(pickled)
        server_response = pickle.loads(self.window_conn.recv(1024))
        message, addr = server_response.split(""\r\n"")
        self.refresh_table_items(""important"")
        if message == ""CREATED"":
            self.withdraw()
            room = RoomWindow(created_room, self.player, self.window_conn)
            room.start()
            self.wait_window(room)
            self.deiconify()
            self.check_is_empty()
            self.refresh_table_items(""important"")

    def create_a_room(self, ev):
        if not self.in_new_window:
            if len(self.room_list) > 5:
                messagebox.showwarning(""Can't create"", ""There is maximum of rooms already(6/6)"")
                return
            self.create_room_window = CreateWindow()
            self.in_new_window = True
            self.create_room_window.start()
            self.wait_window(self.create_room_window)
            self.in_new_window = False
            created_room = self.create_room_window.get_created_room()
            if not created_room:
                return
            self.launching_room(created_room)

    def binding(self):
        self.refresh_list_btn.bind(""<Button-1>"", self.refresh_table_items)
        self.join_room_btn.bind(""<Button-1>"", self.join_to_room)
        self.table.bind('<Button-1>', self.handle_click)
        self.create_room_btn.bind(""<Button-1>"", self.create_a_room)

    # placing tkinter widgets
    def placing_components(self):
        self.frame.place(relx=.5, rely=.5, anchor=""center"")
        self.table.place(x=TABLE_LEFT, y=TABLE_TOP, width=TABLE_WIDTH, height=TABLE_HEIGHT)
        self.player_avatar.place(relx=0.04, rely=0.075)
        self.player_nick_lbl.configure(anchor=""center"")
        self.player_nick_lbl.place(relx=0.04, rely=0.53, width=PREFERRED_SIZE[0])
        self.join_room_btn.place(x=TABLE_LEFT, rely=0.075, width=BUTTON_WIDTH, height=BUTTON_HEIGHT)
        self.create_room_btn.place(x=TABLE_LEFT + BUTTON_WIDTH + OFFSET, rely=0.075,
                                   width=BUTTON_WIDTH, height=BUTTON_HEIGHT)
        self.refresh_list_btn.place(x=TABLE_LEFT + 2 * (BUTTON_WIDTH + OFFSET), rely=0.075, width=REFRESH_WIDTH,
                                    height=BUTTON_HEIGHT)

    def check_is_empty(self):
        if len(self.room_list) == 0:
            self.is_empty = True
            self.empty_room_notification.place(x=TABLE_WIDTH / 2 - 140, y=TABLE_HEIGHT / 2 - 20)
        else:
            self.is_empty = False
            self.empty_room_notification.place_forget()

    # binding
    def on_closing(self):
        if messagebox.askokcancel(""Quit"", ""Do you want to quit?""):
            self.window_conn.send(pickle.dumps(f""DISCONNECT\r\n{self.player.get_nickname()}""))
            server_response = pickle.loads(self.window_conn.recv(1024))
            if server_response == ""DELETED"":
                self.window_conn.close()
                self.destroy()

    def handle_click(self, event):
        if self.table.identify_region(event.x, event.y) == ""separator"":
            return ""break""

    # starting of window
    def start(self):
        self.placing_components()


import tkinter as tk
from tkinter import ttk
from PIL import Image, ImageDraw, ImageTk
from settings import *


class Paint(ttk.Frame):
    def __init__(self, frame):
        # some consts
        super().__init__(master=frame)
        self.x = 0
        self.y = 0
        self.brush_size = 3

        # init
        self.color = 'black'
        self.local_master = frame

        # components
        s = ttk.Style(self)
        s.configure('Paint.TFrame', background=ROOM_FRAME)
        self['style'] = 'Paint.TFrame'
        self.place(relx=0.05, rely=0.18, relwidth=0.95, relheight=0.85)

        self.canvas = tk.Canvas(self, bg='white')
        self.canvas.place(relheight=0.9, relwidth=0.83, relx=0, rely=0)
        self.canvas.bind('<B1-Motion>', self.draw)

        self.menu = tk.Menu(self, tearoff=0)
        self.brush_1px = ImageTk.PhotoImage(Image.open('../graphics/utility/brush_1px.png').
                                            resize((BRUSH_ICO_SIZE*3, BRUSH_ICO_SIZE)), master=self)
        self.brush_4px = ImageTk.PhotoImage(Image.open('../graphics/utility/brush_4px.png').
                                            resize((BRUSH_ICO_SIZE * 3, BRUSH_ICO_SIZE)), master=self)
        self.brush_7px = ImageTk.PhotoImage(Image.open('../graphics/utility/brush_7px.png').
                                            resize((BRUSH_ICO_SIZE * 3, BRUSH_ICO_SIZE)), master=self)
        self.brush_13px = ImageTk.PhotoImage(Image.open('../graphics/utility/brush_13px.png').
                                             resize((BRUSH_ICO_SIZE * 3, BRUSH_ICO_SIZE)), master=self)
        self.brush_17px = ImageTk.PhotoImage(Image.open('../graphics/utility/brush_17px.png').
                                             resize((BRUSH_ICO_SIZE * 3, BRUSH_ICO_SIZE)), master=self)
        self.menu.add_command(image=self.brush_1px, command=lambda size=1: self.brush_change(size))
        self.menu.add_command(image=self.brush_4px, command=lambda size=3: self.brush_change(size))
        self.menu.add_command(image=self.brush_7px, command=lambda size=6: self.brush_change(size))
        self.menu.add_command(image=self.brush_13px, command=lambda size=10: self.brush_change(size))
        self.menu.add_command(image=self.brush_17px, command=lambda size=15: self.brush_change(size))

        self.canvas_img = Image.new('RGB', GAME_CANVAS_SIZE, 'white')
        self.image_draw = ImageDraw.Draw(self.canvas_img)
        self.colors = ['black', 'red', 'green', 'yellow', 'white', 'gray', 'brown', 'pink', 'maroon', 'aqua',
                       'violet', 'CadetBlue', 'burlywood', 'indigo', 'purple']
        self.labels = []
        base_x = 0.84
        base_y = 0
        offset_x = 0.05
        offset_y = 0.09
        last_value = (0, 0)
        for i in range(len(self.colors)):
            label = tk.Button(self, bg=self.colors[i], text='', command=lambda index=i: self.on_label_click(index))
            label.place(relx=base_x + (i % 3) * offset_x, rely=base_y + int(i / 3) * offset_y, width=35, height=35)
            last_value = (base_x + (i % 3) * offset_x, base_y + int(i / 3) * offset_y)
            self.labels.append(label)
        self.color_indicator_lbl = tk.Label(self, bg=self.color, width=10)
        self.color_indicator_lbl.place(relx=base_x, rely=last_value[1] + offset_y, relwidth=0.15, relheight=0.08)
        base_y = last_value[1] + offset_y*2
        self.pour_img = ImageTk.PhotoImage(Image.open('../graphics/utility/fill.png').
                                           resize((FILL_ICO_SIZE, FILL_ICO_SIZE)), master=self)
        self.pour_btn = tk.Button(self, image=self.pour_img, command=self.pour)
        self.pour_btn.place(relx=base_x, rely=base_y)
        self.clear_img = ImageTk.PhotoImage(Image.open('../graphics/utility/clear.png').
                                            resize((FILL_ICO_SIZE, FILL_ICO_SIZE)), master=self)
        self.clear_canvas_btn = tk.Button(self, image=self.clear_img, command=self.clear_canvas)
        self.clear_canvas_btn.place(relx=base_x + offset_x, rely=base_y)
        self.eraser_img = ImageTk.PhotoImage(Image.open('../graphics/utility/eraser.png').
                                             resize((FILL_ICO_SIZE, FILL_ICO_SIZE)), master=self)
        self.eraser_btn = tk.Button(self, image=self.eraser_img, command=self.erase)
        self.eraser_btn.place(relx=base_x + 2*offset_x, rely=base_y)
        self.brush_img = ImageTk.PhotoImage(Image.open('../graphics/utility/brush_size.png').
                                            resize((FILL_ICO_SIZE, FILL_ICO_SIZE)), master=self)
        self.brush_btn = tk.Button(self, image=self.brush_img)
        self.brush_btn.bind(""<Button-1>"", self.popup)
        self.brush_btn.place(relx=base_x, rely=base_y + offset_y)
        self.canvas_bg = None

        self.is_sleep = False

    def brush_change(self, size):
        self.brush_size = size

    def on_label_click(self, index):
        self.color = self.labels[index]['bg']
        self.color_indicator_lbl['bg'] = self.color

    def erase(self):
        self.color = 'white'

    def draw(self, event):
        if not self.is_sleep:
            x1, y1 = (event.x - self.brush_size), (event.y - self.brush_size)
            x2, y2 = (event.x + self.brush_size), (event.y + self.brush_size)
            self.canvas.create_oval(x1, y1, x2, y2, fill=self.color, width=0)
            self.image_draw.ellipse((x1, y1, x2, y2), fill=self.color, width=0)

    def select_brush_size(self, value):
        self.brush_size = int(value)

    def unsleep_canvas(self):
        self.is_sleep = False

    def sleep_canvas(self):
        self.is_sleep = True

    def pour(self):
        if not self.is_sleep:
            self.canvas.delete('all')
            self.canvas['bg'] = self.color
            self.image_draw.rectangle(CANVAS_RECT, width=0, fill=self.color)

    def clear_canvas(self):
        if not self.is_sleep:
            self.canvas.delete('all')
            self.canvas['bg'] = 'white'
            self.image_draw.rectangle(CANVAS_RECT, width=0, fill='white')

    def save_img(self):
        pass

    def popup(self, event):
        self.menu.post(event.widget.winfo_rootx(), event.widget.winfo_rooty())

    def place_paint(self):
        self.clear_canvas()
        self.place(relx=0.05, rely=0.18, relwidth=0.95, relheight=0.85)

    def place_forget_paint(self):
        self.place_forget()

    def set_canvas_image(self, image):
        self.canvas_bg = ImageTk.PhotoImage(image)
        self.clear_canvas()
        self.canvas.create_image(0, 0, anchor=""nw"", image=self.canvas_bg)

    def capture_img(self):
        return self.canvas_img


from tkinter import ttk
import tkinter as tk
from support import is_pin_valid, center
from settings import *


class PinInput(tk.Toplevel):
    def __init__(self):
        super().__init__()

        self.title(""Palack Paradise"")
        self.geometry(f'{PIN_WIDTH}x{PIN_HEIGHT}')
        self.resizable(width=False, height=False)
        self.iconbitmap('../graphics/icons/main_ico.ico')
        self.attributes(""-toolwindow"", True)
        center(self)

        self.check = (self.register(is_pin_valid), ""%P"")
        self.pin_input = ttk.Entry(self, validate=""key"", validatecommand=self.check, font=BASE_FONT)
        self.confirm_btn = tk.Button(self, text=""Подтвердить"", command=self.submit_password, font=BASE_FONT)
        self.password = None

    def submit_password(self):
        if len(self.pin_input.get()) > 0:
            self.password = self.pin_input.get()
            self.destroy()

    def start(self):
        self.pin_input.pack(pady=5)
        self.confirm_btn.pack(pady=10)

    def get_input_pin(self):
        return self.password


class Player:
    def __init__(self, nickname, avatar_image):
        self.nickname = nickname
        self.avatar_image = avatar_image

    def get_nickname(self):
        return self.nickname

    def get_avatar_image(self):
        return self.avatar_image

    def __repr__(self):
        return f""[PLAYER]{self.nickname}[PHOTO]{self.avatar_image[0]}, {self.avatar_image[1]}\n""


import pickle
import tkinter as tk
from tkinter import ttk
from support import center
from settings import *
from PIL import ImageTk
from game_window import GameWindow


class RoomWindow(tk.Toplevel):
    def __init__(self, room, player, conn):
        super().__init__()

        # window
        self.title(""Palack Paradise"")
        self.geometry(f'{ROOM_WIDTH}x{ROOM_HEIGHT}')
        center(self)
        self.iconbitmap('../graphics/icons/main_ico.ico')
        self.resizable(width=False, height=False)
        self.configure(background=ROOM_BG, padx=PADDING, pady=PADDING)
        self.protocol(""WM_DELETE_WINDOW"", self.on_closing)
        self.half_height = HEIGHT_HUB / 2
        self.half_width = WIDTH_HUB / 2
        self.room = room
        self.player = player
        self.room_conn = conn
        self.is_started = False

        def return_pressed(ev):
            self.start_room_click()
        self.bind(""<Return>"", return_pressed)

        """"""
        GUI
        """"""
        s = ttk.Style(self)
        s.configure('Room.TFrame', background=ROOM_FRAME)
        s.configure('My.Treeview', rowheight=65, font=(FONT_NAME, 18), )
        s.map('My.Treeview', background=[('selected', '#B682A5')])
        self.frame = ttk.Frame(self, borderwidth=BORDER, padding=(PADDING, PADDING), style=""Room.TFrame"")
        self.players_view = ttk.Treeview(self.frame, selectmode=""browse"", show='tree', style=""My.Treeview"")
        self.current_players_lbl = ttk.Label(self.frame, font=(FONT_NAME, 15), background=ROOM_FRAME,
                                             text=f""Players {self.room.get_current()}/{self.room.get_size()}"", )
        self.start_game_btn = tk.Button(self.frame, text=""Начать игру"", font=(FONT_NAME, 14),
                                        command=self.start_room_click)
        """"""
        Pre-start
        """"""
        self.players_avatars = {}
        self.table_init()
        self.refresh_player_list()
        self.check_room_status()

    def check_room_status(self):
        if not self.is_started and self.player.get_nickname() != self.room.get_host_name():
            message = f""CHECK_STATUS\r\n{self.room.get_host_player().get_nickname()}""
            self.room_conn.send(pickle.dumps(message))
            response = pickle.loads(self.room_conn.recv(1024))
            if response == ""STARTED"":
                self.is_started = True
                self.start_room()
            elif response == ""DELETED"":
                self.destroy()
        self.after(300, self.check_room_status)

    def clean_table(self):
        for i in self.players_view.get_children():
            self.players_view.delete(i)

    def notify_server_about_start(self):
        message = f""START_ROOM\r\n{self.room.get_host_player().get_nickname()}""
        self.room_conn.send(pickle.dumps(message))
        response = pickle.loads(self.room_conn.recv(1024))
        if response == ""SUCCESS"":
            print(""Room started"")

    def start_room(self):
        self.withdraw()
        game = GameWindow(self.room, self.player, self.room_conn)
        game.start()
        self.wait_window(game)
        self.is_started = False
        self.deiconify()

    def start_room_click(self):
        if self.player.get_nickname() == self.room.get_host_player().get_nickname():
            self.notify_server_about_start()
            self.is_started = True
            self.start_room()

    def table_init(self):
        self.players_view['columns'] = ('nickname', 'host')
        table_width = ROOM_WIDTH * 0.8 * 0.35
        self.players_view.column(""#0"", anchor=tk.CENTER, width=int(2 * table_width / 10))
        self.players_view.column(""nickname"", anchor=tk.CENTER, width=int(3.7 * table_width / 10))
        self.players_view.column(""host"", anchor=tk.CENTER, width=int(1 * table_width / 10))

    def add_items(self, player_list):
        for i, player in enumerate(player_list):
            self.players_avatars[player.get_nickname()] = ImageTk.PhotoImage(player.get_avatar_image()[1].
                                                                             resize(MINI_AVATAR_SIZE),
                                                                             master=self.frame)
            self.players_view.insert('', ""end"", text='', image=self.players_avatars[player.get_nickname()],
                                     values=(player_list[i].get_nickname(),
                                             (""👑"" if self.room.get_host_player().get_nickname() ==
                                             player_list[i].get_nickname() else """")))
        self.current_players_lbl[""text""] = f""Players {self.room.get_current()}/{self.room.get_size()}""

    def refresh(self):
        self.clean_table()
        self.add_items(self.room.get_player_list())

    def refresh_player_list(self):
        if not self.is_started:
            self.room_conn.send(pickle.dumps(f""REFRESH_ROOM\r\n{self.room.get_host_player().get_nickname()}""))
            data = b''
            while True:
                part = self.room_conn.recv(4096)
                data += part
                if len(part) < 4096:
                    break
            players = pickle.loads(data)
            if players != ""NOT_FOUND"":
                self.room.set_player_list(players)
                self.refresh()
        self.after(2000, self.refresh_player_list)

    def get_room(self):
        return self.room

    def placing(self):
        self.frame.place(relx=.5, rely=.5, relwidth=0.8, relheight=0.8, anchor=""center"")
        self.players_view.place(relx=0.05, rely=0.1, relwidth=0.30, relheight=0.80)
        self.current_players_lbl.place(relx=0.2, rely=0.07, anchor=""center"")
        if self.player.get_nickname() == self.room.get_host_name():
            self.start_game_btn.place(relx=0.6, rely=0.15, relheight=0.1, relwidth=0.15, anchor=""center"")

    def start(self):
        self.placing()

    def on_closing(self):
        if self.player.get_nickname() == self.room.get_host_name():
            self.room_conn.send(pickle.dumps(f""DELETE_ROOM\r\n{self.player.get_nickname()}""))
            self.destroy()


""""""
MAIN CONFIG
""""""
BORDER = 0
PADDING = 0
AVATAR_MAX_SIZE = 4194304

""""""
Start room config
""""""
START_WIDTH = 700
START_HEIGHT = 700
PREFERRED_SIZE = (175, 175)
FPS = 120
START_WINDOW_WIDTH = 250
START_WINDOW_HEIGHT = 350
BORDER_SIZE = 4
UI_BACKGROUND_COLOR = '#c3dbd7'
UI_BORDER_COLOR = '#415a77'
NEXT_ICO_SIZE = 17


""""""
Hub WINDOW ui config
""""""
WIDTH_HUB = 950
HEIGHT_HUB = 550
TABLE_WIDTH = 460
TABLE_HEIGHT = 280
TABLE_LEFT = 250
TABLE_TOP = 80
BG_COLOR = '#731ab9'
BG_FRAME_COLOR = '#729ac9'
HUB_FRAME_WIDTH = 750
HUB_FRAME_HEIGHT = 400
FONT_NAME = ""Skellyman""
NICK_FONT_SIZE = 14
NOTIFICATION_FONT_SIZE = 16
BUTTON_WIDTH = 155
OFFSET = 30
BUTTON_HEIGHT = 30
BUTTON_PANEL_TOP = 30
TOP_BUTTON_FONT_SIZE = 16
REFRESH_WIDTH = 90
MINI_PROFILE_LEFT = 30
AVATAR_TOP = 30
NICK_TOP = 210

""""""Create window config""""""
CREATE_WIDTH = 800
CREATE_HEIGHT = 500
CREATE_BG_COLOR = ""#ba5fdf""
NAME_INPUT_FONT_SIZE = 13
SIZE_INPUT_FONT_SIZE = 13
LBL_FONT_SIZE = 14
ALL_FIELDS_HEIGHT = 30
FRAME_COLOR = ""#f2bcef""
FRAME_WIDTH = 650
FRAME_HEIGHT = 400
EYE_ICO_SIZE = 22

""""""Room Window""""""
ROOM_WIDTH = 1100
FRAME_W = 880
FRAME_H = 560
ROOM_HEIGHT = 700
ROOM_BG = ""#9E4EDC""
ROOM_FRAME = ""#C999EE""
MINI_AVATAR_SIZE = (60, 60)

""""""Game""""""
GAME_CANVAS_SIZE = (800, 480)
CANVAS_WIDTH = 800
CANVAS_HEIGHT = 480
CANVAS_RECT = (0, 0, 800, 480)
FILL_ICO_SIZE = 35
BRUSH_ICO_SIZE = 35
START_PROMPT_TIME = 25
START_CANVAS_TIME = 40

""""""Pin input""""""
PIN_WIDTH = 300
PIN_HEIGHT = 150
BASE_FONT = (FONT_NAME, 14)

""""""Result canvas""""""
BASE_OFFSET_Y = 50
CANVAS_W = 792
CANVAS_H = 448
AVATAR_SIZE = (MINI_AVATAR_SIZE[0] + 15, MINI_AVATAR_SIZE[0] + 15)
LEFT_AVATAR_X = CANVAS_W - MINI_AVATAR_SIZE[0] - 15
RIGHT_AVATAR_X = 50
CANVAS_IMG_SIZE = (420, 245)


import os.path
import re
from PIL import Image, ImageTk
import tkinter as tk
import tkinter.ttk as ttk
from tkinter import filedialog
from tkinter import messagebox
from settings import *
from support import center, get_images_from_dir, is_valid
from random import shuffle
from player import Player
import socket
import pickle


class StartWindow(tk.Tk):
    def __init__(self, addr, player=None):
        super().__init__()
        # window
        self.title(""Palack Paradise"")
        self.geometry(f'{START_WIDTH}x{START_HEIGHT}')
        center(self)
        self.iconbitmap('../graphics/icons/main_ico.ico')
        self.configure(background=""#F47983"", padx=0, pady=0)
        self.resizable(width=False, height=False)
        self.half_height = START_HEIGHT / 2
        self.half_width = START_WIDTH / 2
        self.player = player
        self.check_server_addr = addr
        self.protocol(""WM_DELETE_WINDOW"", self.on_closing)

        def return_pressed(ev):
            self.start_game()
        self.bind(""<Return>"", return_pressed)

        """"""
        Pre-load
        """"""
        self.avatars = list(get_images_from_dir('../graphics/avatars').items())
        self.current_avatar_index = 0
        self.next_img = ImageTk.PhotoImage(Image.open('../graphics/utility/next.png').
                                           resize((NEXT_ICO_SIZE, NEXT_ICO_SIZE)), master=self)
        shuffle(self.avatars)

        """"""
        Avatar stuff
        """"""
        # avatar picture
        self.current_PIL_avatar = self.avatars[0]
        self.current_avatar_image = ImageTk.PhotoImage(self.current_PIL_avatar[1], master=self)
        self.current_avatar = ttk.Label(self, image=self.current_avatar_image,
                                        borderwidth=BORDER, padding=(PADDING, PADDING))
        self.next_avatar = ttk.Button(self, image=self.next_img, command=self.change_avatar)

        """"""
        Other
        """"""
        # buttons
        # self.file_button = tk.Button(self, text=""Выбрать файл"", command=self.choose_image, font=(FONT_NAME, 10),
        #                              state=""disabled"")
        self.file_button = tk.Button(self, text=""Выбрать файл"", command=self.choose_image, font=(FONT_NAME, 10))
        # start game btn
        self.create_person_btn = tk.Button(self, font=(FONT_NAME, 12), text=""Начать игру"", command=self.start_game)

        """"""
        Nickname stuff
        """"""
        # nickname entry
        self.check = (self.register(is_valid), ""%P"")
        self.nickname_field = ttk.Entry(self, font=(FONT_NAME, 15), validate=""key"", validatecommand=self.check)
        self.nickname_lbl = ttk.Label(self, text=""Введите ник"", font=(""Skellyman"", 17), background=""#F47983"")

    """"""
    Binding
    """"""
    # image choosing
    def choose_image(self):
        image_file = filedialog.Open(filetypes=[('Image formats', '.jpg .png')]).show()
        if image_file:
            if os.path.getsize(image_file) < AVATAR_MAX_SIZE:
                image = Image.open(image_file).resize(PREFERRED_SIZE)
                real_name = os.path.basename(image_file)
                dest_dir = ""../graphics/avatars/""
                dest_path = dest_dir + real_name
                if os.path.exists(dest_path):
                    ext = os.path.splitext(real_name)[1]
                    name = os.path.splitext(real_name)[0]
                    i = 1
                    while os.path.exists(dest_dir + real_name):
                        real_name = f""{name} ({i}){ext}""
                        i += 1
                dest_path = dest_dir + real_name
                self.current_PIL_avatar = (dest_path, image)
                self.current_PIL_avatar[1].save(dest_path)
                self.current_avatar_image = ImageTk.PhotoImage(self.current_PIL_avatar[1], master=self)
                self.current_avatar.configure(image=self.current_avatar_image)
            else:
                messagebox.showwarning(""Некорректный файл"", ""Выбранный файл имеет слишком\n большой размер(> 4MB)"")

    # taking next photo
    def change_avatar(self):
        if self.current_PIL_avatar not in self.avatars:
            os.remove(self.current_PIL_avatar[0])
        i = self.current_avatar_index + 1 if self.current_avatar_index + 1 < len(self.avatars) else 0
        self.current_avatar_index = i
        self.current_PIL_avatar = self.avatars[i]
        self.current_avatar_image = ImageTk.PhotoImage(self.current_PIL_avatar[1], master=self)
        self.current_avatar.configure(image=self.current_avatar_image)

    """"""
    Placing
    """"""
    # placing
    def placing_components(self):
        # avatar stuff
        self.current_avatar.place(x=self.half_width - 84, y=self.half_height - 250)
        self.file_button.place(x=self.half_width - 60, y=self.half_height - 68, width=125, height=25)
        self.next_avatar.place(x=self.half_width + 66, y=self.half_height - 100)

        # nickname stuff
        self.nickname_lbl.place(x=self.half_width - 69, y=self.half_height - 22)
        self.nickname_field.place(x=self.half_width - 90, y=self.half_height + 14, width=195, height=30)

        # create person btn
        self.create_person_btn.place(x=self.half_width - 75, y=self.half_height + 60, width=165, height=30)

    """"""
    Other stuff
    """"""
    def check_field_fill(self):
        if len(self.nickname_field.get()) > 3 and not re.match(""[ \-_()*]+$"", self.nickname_field.get()):
            if self.current_avatar:
                return True
        return False

    def get_created_player(self):
        return self.player

    def check_nickname_availability(self, nickname):
        check_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        try:
            check_socket.connect(self.check_server_addr)
            check_socket.send(pickle.dumps(f""CHECKING_NICK\r\n{nickname}""))
            response = pickle.loads(check_socket.recv(1024))
        except ConnectionRefusedError:
            messagebox.showerror(""Error"", ""Server not started"")
            return ""error""
        except TimeoutError:
            messagebox.showerror(""Error"", ""Wrong IP"")
        finally:
            check_socket.close()

        if response:
            if response == ""AVAILABLE"":
                return ""available""
            else:
                return ""unavailable""

    """"""
    Start
    """"""
    # after clicking start btn
    def start_game(self):
        if self.check_field_fill():
            result = self.check_nickname_availability(self.nickname_field.get())
            if result == ""available"":
                # self.player = Player(self.nickname_field.get(), self.current_PIL_avatar[0])
                self.player = Player(self.nickname_field.get(), self.current_PIL_avatar)
                self.destroy()
            elif result == ""unavailable"":
                messagebox.showwarning(""Nick warning"", ""Nickname is unavailable!"")
        else:
            messagebox.showerror(""Input error"", ""Nick should be 4-15 symbols"")

    # start of this window
    def start(self):
        self.placing_components()

    def on_closing(self):
        if self.current_PIL_avatar not in self.avatars:
            os.remove(self.current_PIL_avatar[0])
        self.destroy()


from os import walk
from PIL import Image
from settings import *
import re
import socket


def center(win):
    win.update_idletasks()
    width = win.winfo_width()
    frm_width = win.winfo_rootx() - win.winfo_x()
    win_width = width + 2 * frm_width
    height = win.winfo_height()
    titlebar_height = win.winfo_rooty() - win.winfo_y()
    win_height = height + titlebar_height + frm_width
    x = win.winfo_screenwidth() // 2 - win_width // 2
    y = win.winfo_screenheight() // 2 - win_height // 2
    win.geometry('{}x{}+{}+{}'.format(width, height, x, y))
    win.deiconify()


def get_images_from_dir(dir_name):
    surface_list = {}
    for _, __, img_files in walk(dir_name):
        for img in img_files:
            full_path = dir_name + '/' + img
            image_surf = Image.open(full_path)
            image_surf = image_surf.resize(PREFERRED_SIZE)
            image_surf.save(full_path)
            surface_list.update({full_path: image_surf})
    return surface_list


def is_pin_valid(new_val):
    if not new_val:
        return True
    result = re.match(""[0-9a-zA-Z_\b]+$"", new_val) is not None
    if not result or len(new_val) > 8:
        return False
    return True


def get_ip():
    s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
    try:
        s.connect(('10.255.255.255', 1))
        IP = s.getsockname()[0]
    except TimeoutError:
        IP = '127.0.0.1'
    finally:
        s.close()
    return IP


def is_description_valid(new_val):
    if not new_val:
        return True
    result = re.match(""[0-9a-zA-Zа-яА-Я_\-() ]+$"", new_val) is not None
    if not result or len(new_val) > 25:
        return False
    return True


def is_prompt_valid(new_val):
    if not new_val:
        return True
    result = re.match(""[0-9a-zA-Zа-яА-Я()\-=<>,/?.\""{}+!@$;:&*_`% ]+$"", new_val) is not None
    if not result or len(new_val) > 50:
        return False
    return True


def is_valid(new_val):
    if not new_val:
        return True
    result = re.match(""[0-9a-zA-Z_\-*() ]+$"", new_val) is not None
    if not result or len(new_val) > 15:
        return False
    return True


from tkinter import ttk


class Timer:
    def __init__(self, master, time_ms, mode):
        self.master = master
        self.time = 0
        self.time_ms = time_ms
        self.mode = mode
        if mode == ""prompt"":
            master.prompt_input.state(['!disabled'])
        else:
            master.paint.canvas.configure(state=""normal"")
        self.is_timer_end = False
        self.progressbar = ttk.Progressbar(self.master, orient=""horizontal"", length=200, mode=""determinate"")
        self.progressbar.pack(pady=10)

    def start_timer(self):
        self.progressbar[""maximum""] = self.time_ms * 10
        self.time += 1
        self.progressbar[""value""] = self.time * 2
        if self.time < self.time_ms * 2 * 2.5:
            self.master.after(200, self.start_timer)
        elif self.time == self.time_ms * 2 * 2.5:
            self.is_timer_end = True
            self.callback(self.master)

    def callback(self, master):
        result = None
        self.progressbar.pack_forget()
        if self.mode == ""prompt"":
            master.prompt_input.state(['disabled'])
            result = master.prompt_input.get()
        elif self.mode == ""canvas"":
            master.paint.canvas.configure(state=""disabled"")
            result = master.paint.capture_img()
        master.after_timer(result, self.mode)
"
8bXid9Vw,Untitled,35657,C++,Monday 15th of May 2023 06:56:46 AM CDT,"
#define _CRT_SECURE_NO_WARNINGS

#include <iostream>
#include <string.h>

using namespace std;

struct contact {
	char name[100];
	char mobile_phone[20];
	char home_phone[20];
	char work_phone[20];
};



class phone_book {

public:

	phone_book();

	phone_book(int max_number);

	phone_book(contact arr[], int arr_size);

	void AddContact(const char name[], const char mobile_phone[], const char home_phone[], const char work_phone[]) {
		if (contact_number == max_contact_number) {
			cout << ""The contact cannot be added"" << endl;
			return;
		}
		store[contact_number] = new contact{};
		strcpy(store[contact_number]->name, name);
		strcpy(store[contact_number]->mobile_phone, mobile_phone);
		strcpy(store[contact_number]->home_phone, home_phone);
		strcpy(store[contact_number]->work_phone, work_phone);
		contact_number++;
	}

	void DelContact(const char name[]);

	void FindContactName(const char name[]);

	void ShowAllContacts();

	~phone_book();
	

private:
	contact** store;
	int contact_number;
	int max_contact_number;
};

int main() { // для проверки функционала

	phone_book my_store; // для проверки конструктора по умолчанию

	//phone_book my_store(50); // для проверки конструктора для одного параметра

	//contact some_contacts[]{ {""Ivan"", ""+79111111111"", ""111111"", ""121212""}, {""Zhenya"", ""+79111111333"", ""111133"", ""121233""}}; // для проверки конструктора для двух параметров (закомментировать первые два добавления контакта)

	//phone_book my_store(some_contacts, 2); // для проверки конструктора для двух параметров

	my_store.AddContact(""Ivan"", ""+79111111111"", ""111111"", ""121212"");
	my_store.AddContact(""Zhenya"", ""+79111111333"", ""111133"", ""121233"");
	my_store.AddContact(""Galya"", ""+79115511333"", ""166133"", ""127733"");
	my_store.AddContact(""Olya"", ""+79115511333"", ""166133"", ""127733"");

	my_store.ShowAllContacts();

	my_store.DelContact(""Zhenya"");

	my_store.ShowAllContacts();

	my_store.AddContact(""Zhenya"", ""+79111111333"", ""111133"", ""121233"");

	my_store.FindContactName(""Galya"");

}"
QdDjdc0T,good_or_bad_hash,giGii,C++,Monday 15th of May 2023 06:30:03 AM CDT,"#include <unordered_map>
#include <string>
#include <cassert>
#include <vector>
#include <algorithm>
#include <iostream>

using namespace std;

struct GoodHasher {
    size_t operator() (std::pair<size_t, size_t> from_to) const {
        return from_to.first * 37 + from_to.second * 37 * 37 + (from_to.first + from_to.second) * 37 * 37 * 37;
    }
};
struct BadHasher {
    size_t operator() (std::pair<size_t, size_t> from_to) const {
        return from_to.first * 37 + from_to.second * 37 * 37;
    }
};

int main() {
    GoodHasher good;
    BadHasher bad;

    vector<pair<size_t, size_t>> vec_pair_sizet;

    size_t n, limit;
    cin >> n >> limit;

    for (size_t i = 0; i < n; ++i) {
        for (size_t j = i + 1; j <= n; ++j) {
            vec_pair_sizet.push_back({i, j});
            vec_pair_sizet.push_back({j, i});
        }
    }

    cout << vec_pair_sizet.size() << endl;

    sort(vec_pair_sizet.begin(), vec_pair_sizet.end());

    cout << limit << endl;

    unordered_map<size_t, size_t> for_good_hasher;
    unordered_map<size_t, size_t> for_bad_hasher;

    for (const auto& p : vec_pair_sizet) {
        auto ghash = good(p);
        if (for_good_hasher.count(ghash) == 0) {
            for_good_hasher[ghash] = 0;
        }
        ++for_good_hasher.at(ghash);

        auto bhash = bad(p);
        if (for_bad_hasher.count(bhash) == 0) {
            for_bad_hasher[bhash] = 0;
        }
        ++for_bad_hasher.at(bhash);
    }

    size_t good_hashes = 0;

    for (const auto& [k, v] : for_good_hasher) {
        if (v >= limit) {
            ++good_hashes;
        }
    }

    size_t bad_hashes = 0;
    for (const auto& [k, v] : for_bad_hasher) {
        if (v >= limit) {
            ++bad_hashes;
        }
    }

    cout << ""for good hasher buckets with ""s << limit << "" and more collisions = ""s << good_hashes << endl;
    cout << ""for bad hasher buckets with ""s << limit << "" and more collisions = ""s << bad_hashes << endl;
}"
qvjvTzEg,division.py,Abhisek92,Python,Monday 15th of May 2023 06:08:28 AM CDT,"def divide(a, b):
    if a == 0:
        return 0
    if b == 1:
        return a
    if b == -1:
        return -a

    negative = (a < 0) ^ (b < 0)

    # Convert a and b to positive
    a = abs(a)
    b = abs(b)

    quotient = 0
    while a >= b:
        shift = 0
        while a >= (b << shift):
            shift += 1
        shift -= 1
        quotient += (1 << shift)
        a -= (b << shift)
    if negative:
        quotient = -quotient
    return quotient"
V0fXffFB,Test map drawing,SirEdvin,Lua,Monday 15th of May 2023 06:04:58 AM CDT,"local colorPalette = {
    colors.white,
    colors.orange,
    colors.magenta,
    colors.lightBlue,
    colors.yellow,
    colors.lime,
    colors.pink,
    colors.gray,
    colors.lightGray,
    colors.cyan,
    colors.purple,
    colors.blue,
    colors.brown,
    colors.green,
    colors.red,
    colors.black,
}


local function find_closest_color(targetColor)
    local index = 0
    local result = {}
    for _, color in pairs(colorPalette) do
        red, green, blue = colors.unpackRGB(color)
        index = index + 1
        result[index] = {
            dist=math.sqrt(
                (red - targetColor.red) ^ 2 + (green - targetColor.green) ^ 2 + (blue - targetColor.blue) ^ 2
            ),
            color=color
        }
    end
    table.sort(result,function(a,b) return a.dist < b.dist end)
    return result[1].color
end


local monitor = peripheral.wrap(""monitor_0"")
local cartographer = peripheral.wrap(""right"")
local mapData = cartographer.extractMapDetails(""left"", 1)
local colorCodes = {}
for index, colorCode in pairs(cartographer.getColorMap()) do
    colorCodes[index] = find_closest_color(colorCode)
end


term.redirect(monitor)
monitor.clear()
monitor.setCursorPos(1, 1)
monitor.setTextScale(0.5)
for x=0,128 do
  for y = 0, 128 do
    paintutils.drawPixel(x, y, colorCodes[mapData.colors[x + y * 128]])
  end
end"
GmnKqnEv,Untitled,pacho_the_python,Python,Monday 15th of May 2023 06:02:02 AM CDT,"from django.db import models


class Library(models.Model):
    LIBRARY_NAME_MAX_LEN = 30

    library_name = models.CharField(
         max_length=LIBRARY_NAME_MAX_LEN,
         null=False,
         blank=False,
         verbose_name=""Library Name""
    )

    def __str__(self):
        return self.library_name

    class Meta:
        verbose_name_plural = 'Library'


class Book(models.Model):
    TITLE_MAX_LEN = 30
    AUTHOR_MAX_LEN = 30
    DESCRIPTION_LEN = 300

    title = models.CharField(
        max_length=TITLE_MAX_LEN,
        null=False,
        blank=False,
    )

    pages = models.PositiveIntegerField(
        null=False,
        blank=False,
    )

    description = models.TextField(
        max_length=DESCRIPTION_LEN,
        null=False,
        blank=False,
    )

    author = models.CharField(
        max_length=AUTHOR_MAX_LEN,
        null=False,
        blank=False
    )

    library = models.ForeignKey(
        Library,
        on_delete=models.CASCADE,
        null=True,
        blank=True
    )

    def __str__(self):
        return self.title

    class Meta:
        verbose_name_plural = 'Book'
"
7JUuzuue,Existe_triángulo,Rodripelto,Python,Monday 15th of May 2023 06:01:42 AM CDT,"def datos():
  lados = []
  while len(lados) < 3:
    try:
      lados.append(int(input(""¿Cuál es la longitud del lado "" + str(len(lados)+1))))
    except:
      print(""La longitud tiene que ser un número válido"")
  return lados

def comprobar_triangulo(lados):
  for i in range(3):
    if not (lados[i-2] <= lados[i-1] + lados[i]):
      return False
  return True

def perimeto(lados):
  return sum(lados)
 
def main():
  triangulo = datos()
  if comprobar_triangulo(triangulo):
    print(""El perimeto del triangulo es:"",perimeto(triangulo ))
  else:
    print(""Con esa longitud de los lados no se puede construir un triángulo"")
   
main()"
mP398qXm,data573,TestGuy1,JSON,Monday 15th of May 2023 06:00:05 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: 'aba494764e873fe875c1ca25b9e31ee660ade9fa384f8dc76d935a324e0355603191af3b02e83007a2ec0f94b3cae4db2fbe7f098bc78fb5ec25e6b5c22a32637c6b46deed4addf90c07f06018b593d26c06a142630fb67b74b0c0913c66844f3f5578c238d02cf9cccd07724459c0524f9608f1dc7cc2d58005a1854f6c681d',
  otherdata: [
    '9be54ba14fe75084bf5ade2b85d431a0',
    'e8de001a257866dfef23747af1dcd6d2',
    '70e685ad3cb048e484725215331abdb1',
    'bf5e796ece448faffb141de6d6b2ab54',
    '522abf6d2cbd9658842a24a3cedec35b',
    'e4ec44951ed4b18493dbe6cc0e1dd942',
    '3c5e16d806889a3309dcf4c047b94b5d',
    '9c26feea620411543a778cd421d0943b'
  ]
}"
tiUS8urf,Pet Simulator X | by esohasl,Noctural,Lua,Monday 15th of May 2023 05:58:27 AM CDT,"-- Rafa
loadstring(game:HttpGet(""https://raw.githubusercontent.com/Rafacasari/roblox-scripts/main/psx.lua""))()

-- Huge Games
loadstring(game:HttpGet(""https://hugegames.io/psx""))()"
rPGTfFDH,Quickslots,NachoMan,C#,Monday 15th of May 2023 05:54:05 AM CDT,"if (Input.anyKeyDown)
{
	bool isNothingSelected = true;
	bool isAnyKeyPressed = false;
	int oldQuickSlot = selectedQuickslot;

	for (int i = (int)KeyCode.Alpha1; i <= (int)KeyCode.Alpha9; ++i)
	{
		if (Input.GetKeyDown((KeyCode)i))
		{
			UnselectItem();
			isNothingSelected = selectedQuickslot == (i - (int)KeyCode.Alpha1);
			selectedQuickslot = i - (int)KeyCode.Alpha1;
			isAnyKeyPressed = true;
		}
	}
	if (Input.GetKeyDown(KeyCode.Alpha0))
	{
		UnselectItem();
		isNothingSelected = selectedQuickslot == 9;
		selectedQuickslot = 9;
		isAnyKeyPressed = true;
	}
	if (isAnyKeyPressed)
	{
		if (isNothingSelected)
		{
			EquipBareHands();
		}
		GameObject equipedGameObject = GetCurrentQuickslotItemGameObject();
		if(equipedGameObject != null)
        {
			EquipNewItem(equipedGameObject);
		}
	}
}"
jskPff6z,lab16,_who___,C,Monday 15th of May 2023 05:46:06 AM CDT,"#include <stdio.h>
#include <locale.h>

int main()
{
	int a = 0;
	double n = 0;
	scanf_s(""%lf"", &n);

	unsigned long long c = *((unsigned long long*) & n);
	for (int i = sizeof(double) * 8 - 1; i >= 0; i--)
	{
		printf(""%d"", ((c >> i) & 1));
		a += ((c >> i) & 1);
	}
	printf(""\n%d\n"", a);

	long b = 0;
	a = 0;
	scanf_s(""%ld"", &b);

	c = *((unsigned long long*) & b);
	for (int i = sizeof(long) * 8 - 1; i >= 0; i--)
	{
		printf(""%d"", ((c >> i) & 1));
		a += ((c >> i) & 1);
	}
	printf(""\n%d\n"", a);
}"
3stCQbr0,Untitled,Mr__K,SQL,Monday 15th of May 2023 05:42:30 AM CDT,"SELECT Product.Name, Category.Name
FROM Product
LEFT JOIN Product_Category ON Product.Id = Product_Category.ProductId
LEFT JOIN Category ON Product_Category.CategoryId = Category.Id
ORDER BY Product.Name"
HpVYJcnL,Untitled,dolomite42,C,Monday 15th of May 2023 05:39:51 AM CDT,"disregard previously sent test india.feely@grangeprojects.co.uk , thank you"
