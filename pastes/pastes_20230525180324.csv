id,title,username,language,date,content
wXSWVPXB,Untitled,MeehoweCK,C++,Thursday 25th of May 2023 12:55:32 PM CDT,"#include <iostream>

using namespace std;

string odwroc_wyraz(string napis)
{
    string wynik = """";

    for (int i = napis.size() - 1; i >= 0; --i)
        wynik += napis[i];

    return wynik;
}

int main()
{
    int liczba;
    cout << ""Podaj liczbe calkowita:"" << endl;
    cin >> liczba;

    string liczba_16 = """";

    if (liczba == 0)
        liczba_16 = ""0"";
    else
    {
        int temp = liczba;
        while (temp > 0)
        {
            int reszta = temp % 16;
            if (reszta < 10)
                liczba_16 += ('0' + reszta);
            else
                liczba_16 += ('A' + reszta - 10);
            temp /= 16;
        }

        liczba_16 = odwroc_wyraz(liczba_16);
    }

    cout << liczba << "" w systemie szesnastkowym to "" << liczba_16 << endl;

    return 0;
}"
8zVJzUkt,04. Reverse Array of Strings,veronikaaa86,Java,Thursday 25th of May 2023 12:53:09 PM CDT,"package arrays;

import java.util.Scanner;

public class P04ReverseArrayOfStrings {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        String[] inputArr = scanner.nextLine().split("" "");

        for (int i = 0; i < inputArr.length / 2; i++) {
            String oldElement = inputArr[i];
            inputArr[i] = inputArr[inputArr.length - 1 - i];
            inputArr[inputArr.length - 1 - i] = oldElement;

        }

        System.out.println(String.join("" "", inputArr));
    }
}
"
xeywuPfK,Error_handlink,ALEXANDAR_GEORGIEV,Python,Thursday 25th of May 2023 12:51:39 PM CDT,"# Лекция ERROR HANDLINK
#   Error and Exceptions
# Error - > синтактичните грешки са Error

# for _ in range(5):
# a = 5   # IndentationError: expected an indented block after 'for' statement on line 3


# Exceptions - > Логиката е грешна
searched = int(input())
nums = [1, 10, 13]
for index in range(5):
    if nums[index +1] == searched:
        print(f""Num in range"")
        break

# Ако вкараме числото 60 , ще даде синтактична грешка, но това е Exception !

# num = int(input())
# num2 = input()
# print(num + num2)   # Ще даде грешка. Тази грешка е Exception защото num е int, а num2 е стринг !

# Exception Handling - > Обработка на Exceptions

students = {
    ""1"": ""test1"",
    ""2"": ""test2""
}

if searched in students:
    print(students[searched])
else:
    print(""Key does not exist"")

try:    # Опитай това
    print(students[searched])
except KeyError:     # Ако не стане , направи това
    print(""Key does not exist"")
else:   # Ako TRY е бил успешен ELSE ще се изпълни !
    print("" Try Беше изпълнен !"")
finally:    # изпълнява се независимо дали е минал през ТРИ или ЕКСЕПТ
    print(""Key is ...."")

# Custom Exceptions

class ValueTooSmall(Exception):   # Наследява Exceptions и правим собствено съобщение за грешка
    pass

class ValueTooHightException(Exception):
    pass

# raise  CustonError(""Here is my message"")


amount = float(input())

if amount < 0:
    raise ValueTooSmall(""Amount can not to be negative or zero !"")

if amount > 1000:
    raise ValueTooHightException(""Amount is too hight !"")



# Repeat_text
text = input()

try:
    times = int(input())
    print(text*times)
except ValueError:
    print(""Variable times must be an integer"")

# Value_cannot_be_negative
class ValueCannotBeNegative(ValueError):
    pass

for _ in range(5):

    try:
        num = float(input(""Enter a number: ""))
        if num < 0:
            raise(ValueCannotBeNegative)
    except ValueError:
        print(""This number is not a valid number. "")


"
z4pms1dY,GambitEngine Scribe Python Example,djmango,Python,Thursday 25th of May 2023 12:50:45 PM CDT,"def test_upload(local: bool):
    """""" Test uploading a file. """"""
    headers = {'Authorization': os.getenv('ADMIN_API_KEY', '')}
    url = 'http://localhost:8000' if local else 'https://api.gambitengine.com/rest'
    r = requests.post(f'{url}/scribe/transcription', headers=headers)
    click.echo(json.dumps(r.json(), indent=4))
    upload_request = r.json()['upload_request']
    print(upload_request)

    r = requests.post(upload_request['url'], data=upload_request['fields'], files={'file': open(HERE.parent/'Rockyy.webm', 'rb')})
    print(r)
    print(r.text)
"
d2yYETad,Untitled,bomb,PHP,Thursday 25th of May 2023 12:45:56 PM CDT,https://www.speedtest.net/result/14782868603.png
uGLafjFQ,Untitled,MeehoweCK,C++,Thursday 25th of May 2023 12:32:13 PM CDT,"#include <iostream>

using namespace std;

string odwroc_wyraz(string napis)
{
    string wynik = """";

    for (int i = napis.size() - 1; i >= 0; --i)
        wynik += napis[i];

    return wynik;
}

int main()
{
    int liczba;
    cout << ""Podaj liczbe calkowita:"" << endl;
    cin >> liczba;

    string liczbadwojkowa = """";

    if (liczba == 0)
        liczbadwojkowa = ""0"";
    else
    {
        int temp = liczba;
        while (temp > 0)
        {
            if (temp % 2 == 0)
            {
                liczbadwojkowa += '0';  // cout << ""0"";
            }
            else
                liczbadwojkowa += '1';  // cout << ""1"";
            temp /= 2;
        }

        liczbadwojkowa = odwroc_wyraz(liczbadwojkowa);
    }

    cout << liczba << "" w systemie binarnym to "" << liczbadwojkowa << endl;

    return 0;
}"
TQCsBHx1,03. Sum Even Numbers,veronikaaa86,Java,Thursday 25th of May 2023 12:29:54 PM CDT,"package arrays;

import java.util.Arrays;
import java.util.Scanner;

public class P03SumEvenNumbers {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        String input = scanner.nextLine();

        int[] numbersArr = Arrays.stream(input.split("" "")).mapToInt(e -> Integer.parseInt(e)).toArray();

//        String[] inputArr = input.split("" "");
//        int[] numbersArr = new int[inputArr.length];
//        for (int i = 0; i < numbersArr.length; i++) {
//            numbersArr[i] = Integer.parseInt(inputArr[i]);
//        }

        int sum = 0;
        for (int i = 0; i < numbersArr.length; i++) {
            int currentNum = numbersArr[i];
            if (currentNum % 2 == 0) {
                sum += currentNum;
            }
        }

        System.out.println(sum);
    }
}
"
kpXTHwvw,Scholl Report - Boletim Escolar,Raposa7618,Python,Thursday 25th of May 2023 12:27:59 PM CDT,"import os
import time

boletim = list()
aluno = list()
Menu = True

def mostrar_boletim():
    os.system('cls')
    count = -1
    print('\nBoletim Escolar:\n\n{}  {:20s} {:5s} {:5s} {:5s} {:5s}\n'.format('Nº', 'Nome', 'Nota 1', \
                                                                              '   Nota 2', '   Nota 3', '    Media'))
    for c in boletim:
        count += 1
        print('{}   {:20s}    {:.1f}       {:.1f}       {:.1f}       {:.1f}'.format(count + 1, boletim[count][0], boletim[count][1], \
                                                                                    boletim[count][2], boletim[count][3], \
                                                                                    boletim[count][4]))

while Menu is True:
    os.system('cls')
    fechar_boletim = True
    
    inicio = input('\nDigite o que deseja fazer:\n\n'
                    '1 - Adicionar alunos\n'
                    '2 - Remover alunos\n'
                    '3 - Mostrar boletim\n\n'
                    's - Sair\n\n\n'
                    '>>> ')

    if inicio == '1':
        os.system('cls')
        print('r - Voltar\n\nO que deseja adicionar na lista?\n\n')

        while fechar_boletim is True:
            nome = input('\nNome: ')

            try:
                not1 = float(input('Nota 1: '))
                not2 = float(input('Nota 2: '))
                not3 = float(input('Nota 3: '))

                media = (not1 + not2 + not3) / 3

                aluno.append(nome), aluno.append(not1), aluno.append(not2), aluno.append(not3), aluno.append(media)
                boletim.append(aluno[:])
                aluno.clear()
                
            except ValueError:
                aluno.clear()
                try:
                    if nome == 'r' or not1 == 'r' or not2 == 'r' or not3 == 'r':
                        input(f'{mostrar_boletim()}\n\n APERTE ENTER PARA VOLTAR')
                        fechar_boletim = False
                    
                    else:
                        continue
                
                except NameError:
                    print('Digite algo valido!')
                    time.sleep(2)
                    continue
    
    elif inicio == '2':
        while fechar_boletim is True:
            if (boletim == []) is False:
                print(f'{mostrar_boletim()}\n')
                remover_item = input('>>> ')

                if remover_item.isnumeric():
                    remover_item1 = int(remover_item)

                    if (remover_item1 - 1) < len(boletim) and not remover_item1 == 0:
                        del boletim[remover_item1 - 1]

                    elif (remover_item1 - 1) > (len(boletim) - 1) or remover_item1 == 0:
                        print('Não existe nenhum item com este numero na lista!')
                        time.sleep(2)
                        os.system('cls')

                else:
                    if (remover_item == 'r' or remover_item == 'R') is True:
                        fechar_boletim = False
                        
                    elif (remover_item == 'c' or remover_item == 'C') is True:
                        boletim.clear()
                        input(f'{mostrar_boletim()}\n\nAPERTE ENTER PARA SEGUIR')
                        fechar_boletim = False

                    else:
                        print('Digite algo válido')
                        time.sleep(2)
                
            else:
                print('Não exitem mais itens para remover da lista!')
                time.sleep(3)
                fechar_boletim = False
        
    elif inicio == '3':
        input(f'{mostrar_boletim()}\n\nAPERTE ENTER PARA SEGUIR')
        fechar_boletim = False
    
    elif inicio == 's' or inicio == 'S':
        break
"
30ptpexf,Untitled,lfreew1ndl,Lua,Thursday 25th of May 2023 12:17:40 PM CDT,"local robot = {}
robot.forceAction = function(action, fallBack, sleepS)
	local isFirstAction = true
	if (not sleepS) then
		sleepS = 1
	end
	while action() == false do
		fallBack()
		if (isFirstAction == false) then
			os.sleep(sleepS)
		else 
			isFirstAction = false
		end
	end	
	return true
end

robot.forward = function(n)
	for i=1,n do 
		robot.forceAction(turtle.forward, turtle.dig)
	end
	return true
end

robot.up = function(n)
	for i=1,n do 
		robot.forceAction(turtle.up, turtle.digUp)
	end
	return true
end

robot.down = function(n)
	for i=1,n do 
		robot.forceAction(turtle.down, turtle.digDown)
	end
	return true
end

robot.turnLeft = function(n)
	for i=1,n do 
		robot.forceAction(turtle.turnLeft)
	end
	return true
end

robot.turnRight = function(n)
	for i=1,n do 
		robot.forceAction(turtle.turnRight)
	end
	return true
end

function refuel()

end

function chopTree()
	robot.dig()
	robot.forward()
	robot.dig()
	local height=0
	while(robot.digUp()) then
		height = height + 1
		robot.up()
		robot.dig()
	end
	robot.turnRight()
	robot.dig()
	robot.forward()
	robot.turnLeft()
	robot.dig()
	for i=1,height do
		robot.digDown()
		robot.down()
		robot.dig()
	end
	robot.up()
	robot.placeDown()
	robot.forward()
	robot.placeDown()
	robot.turnLeft()
	robot.forward()
	robot.placeDown()
	robot.turnLeft()
	robot.forward()
	robot.placeDown()
	robot.forward()
	robot.turnLeft(2)
	robot.down()
end

function checkTree()
	if (robot.checkFront(""minecraft:spruce_log"")) then
		chopTree()
	end
end

function checkTrees() 
	for j=1,yD do
		for i=1,xD do
			robot.forward()
			robot.turnLeft()
			checkTree()
			if (i ~= xD) then
				robot.turnRight()
				robot.forward(2)
			end
			robot.turnLeft()
			robot.forward()
		end
		robot.turnLeft()
		robot.forward(xD*3-2)
		robot.turnLeft(2)
		if (j ~= yD) then
			robot.turnRight()
			robot.forward(3)
			robot.turnLeft()
		end	
	end
	robot.turnLeft()
	robot.forward(yD*3-2)
	robot.turnRight()
end

function PickUp()

end

function dropIntoChest()

end

while true do
	refuel()
	if (checkTrees()) then
		pickUp()
		dropIntoChest()
	end
	os.sleep(5)
end

"
P2eE9DHR,.gitlab-ci.yml,Arexils,YAML,Thursday 25th of May 2023 12:06:12 PM CDT,"deploy:
  stage: deploy
  needs: [ publish ]
  image: gitlab/dind:latest
  environment: production
  services:
    - docker:dind
  script:
    ...
    - scp ./prod.docker-compose.yml root@${DROPLET_IP}:~/docker-compose.yml
    - ssh root@$DROPLET_IP ""docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY_IMAGE}; docker-compose stop; docker-compose down -v; docker-compose rm -f; docker-compose pull; docker-compose up -d --force-recreate;""
"
2WPYDenK,Untitled,MeehoweCK,C++,Thursday 25th of May 2023 12:06:07 PM CDT,"#include <iostream>
using namespace std;

int main()
{
    int liczba;
    cout << ""Podaj liczbe calkowita: "";
    cin >> liczba;

    int liczbaCyfr = 0;
    while (liczba > 0)
    {
        liczba /= 10;
        ++liczbaCyfr;
    }

    cout << liczbaCyfr << endl;

    return 0;
}"
J7iK8Svy,Dockerfile,Arexils,Bash,Thursday 25th of May 2023 12:03:25 PM CDT,"FROM docker:24-cli as docker-cli

FROM python:3.11

ENV PYTHONUNBUFFERED 1
WORKDIR /app

COPY ./app /app
COPY --from=docker-cli /usr/local/bin/docker /usr/local/bin/docker
COPY --from=docker-cli /usr/local/libexec/docker/cli-plugins /usr/local/libexec/docker/cli-plugins

RUN ln -sv /usr/local/libexec/docker/cli-plugins/docker-compose /usr/local/bin/; \
    ln -sv /usr/local/libexec/docker/cli-plugins/docker-buildx /usr/local/bin/; \
    docker-compose --version; \
    docker compose version; \
    docker buildx version; \
    chmod +x /usr/local/bin/docker-compose;"
g1wEuQgX,Factorial Solved Recursively,BenTibnam,C,Thursday 25th of May 2023 12:02:19 PM CDT,"#include <stdio.h>

long factorial(long n);

int main(void)
{
    const int factorial_of = 4;
    printf(""Factorial of %i is %li\n"",factorial_of, factorial(factorial_of));
    return 0;
}

long factorial(long n)
{
    // base case
    if (n == 1) return 1;

    // recursive call building the call stack
    return n * factorial(n-1);
}"
19X5q2U7,02. Print Numbers in Reverse Order,veronikaaa86,Java,Thursday 25th of May 2023 11:39:14 AM CDT,"package arrays;

import java.util.Scanner;

public class P02PrintNumbersInReverseOrder {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        int n = Integer.parseInt(scanner.nextLine());

        int[] numbersArr = new int[n];
        for (int i = 0; i < numbersArr.length; i++) {
            numbersArr[i] = Integer.parseInt(scanner.nextLine());
        }

        for (int i = numbersArr.length - 1; i >= 0; i--) {
            System.out.printf(""%d "", numbersArr[i]);
        }
    }
}
"
fv4C1Tv5,MODELO TEST pito,juliosalgueiro90,Python,Thursday 25th of May 2023 11:35:52 AM CDT,"import webbrowser

def abrir_link_youtube(url_m3u8):
    # Verificar se a URL do arquivo M3U8 é válida
    if not url_m3u8.endswith("".m3u8""):
        print(""URL inválida. Certifique-se de fornecer um arquivo M3U8 válido."")
        return

    # Extrair o link do vídeo do arquivo M3U8
    with open(url_m3u8, ""r"") as arquivo:
        conteudo = arquivo.read()
        link = conteudo.strip()

    # Verificar se o link é um link do YouTube
    if ""youtube.com"" not in link:
        print(""Link inválido. Certifique-se de fornecer um link do YouTube."")
        return

    # Abrir o link no navegador padrão
    webbrowser.open(link)

# Exemplo de uso
url_m3u8 = ""caminho/para/arquivo.m3u8""
abrir_link_youtube(url_m3u8)
"
xZnvXLBM,Performs multiple replacements on a single string - Example,treckstar,TypeScript,Thursday 25th of May 2023 11:35:44 AM CDT,"/**
* fn: https://pastebin.com/WzcVWLU1
* This function takes two parameters:
* 
* str - The original string in which the replacements will be performed.
* replacements - An array of tuples, where each tuple contains the search 
* text and its corresponding replacement text.
* The function iterates over each tuple in the replacements array. 
* For each tuple, it calls the replace method on the result string, 
* replacing all occurrences of the search text with the replacement 
* text using a regular expression with the 'g' flag for global search.
* 
* The resulting modified string is returned from the function.
* 
**/

const originalString = 'Hello, world! Hello, universe!';
const replacements: [string, string][] = [
  ['Hello', 'Hi'],
  ['world', 'earth']
];

const modifiedString = replaceMultipleValues(originalString, replacements);

console.log(modifiedString); // Hi, earth! Hi, universe!

/**
* Output: Hi, earth! Hi, universe!
* 
* In this example, the original string 'Hello, world! Hello, universe!' 
* is modified by replacing ""Hello"" with ""Hi"" and ""world"" with ""earth"", 
* resulting in the modified string 'Hi, earth! Hi, universe!'.
**/


"
WzcVWLU1,Performs multiple replacements on a single string - TS,treckstar,TypeScript,Thursday 25th of May 2023 11:30:10 AM CDT,"/**
 * Performs multiple replacements on a single string.
 * @param {string} str - The original string in which the replacements will be performed.
 * @param {[string, string][]} replacements - An array of tuples containing the search text and its corresponding replacement text.
 * @returns {string} The modified string with the replacements applied.
 */
function replaceMultipleValues(str: string, replacements: [string, string][]): string {
  let result = str;
  
  for (const [searchText, replacementText] of replacements) {
    result = result.replace(new RegExp(searchText, 'g'), replacementText);
  }
  
  return result;
}
"
5DLtNHzK,01. Day of Week,veronikaaa86,Java,Thursday 25th of May 2023 11:14:29 AM CDT,"package arrays;

import java.util.Scanner;

public class P01DayOfWeek {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        int n = Integer.parseInt(scanner.nextLine());

        String[] dayOfWeek = {
                ""Monday"",
                ""Tuesday"",
                ""Wednesday"",
                ""Thursday"",
                ""Friday"",
                ""Saturday"",
                ""Sunday""
        };

        if (n >= 1 && n <= 7) {
            System.out.println(dayOfWeek[n - 1]);
        } else {
            System.out.println(""Invalid day!"");
        }
    }
}
"
NrL3LzYW,Untitled,Derga,C++,Thursday 25th of May 2023 10:45:47 AM CDT,"#include <iostream>
using namespace std;

template <typename T>
void f(T* arr, int size) {
    for (int i = 0; i  + 1 < size; i += 2) {
        T tmp = arr[i];
        arr[i] = arr[i + 1];
        arr[i + 1] = tmp;
    }
}

int main() {
    int arr[] = { 2, 3, 1, 0, 6, 5 };
    
    f(arr, size(arr));
    for (int i = 0; i < size(arr); ++i) {
        cout << arr[i] << ' ';
    }

    return 0;
}"
E5xziV3U,Untitled,Vla_DOS,C++,Thursday 25th of May 2023 10:29:42 AM CDT,"#include <iostream>
#include <string>

using namespace std;

// Клас Герой
class Hero {
public:
    string type;    // Тип персонажа
    int strength;   // Сила
    int speed;      // Швидкість руху
    int damage;     // Шкода, яку може нанести
    int receivedDamage; // Шкода, яку отримує

    // Конструктор
    Hero() {
        type = ""Герой"";
        strength = 10;
        speed = 5;
        damage = 20;
        receivedDamage = 10;
    }

    // Функція атаки
    void attack() {
        cout << type << "" атакує та наносить "" << damage << "" одиниць шкоди.\n"";
    }

    // Функція отримання пошкоджень
    void takeDamage() {
        cout << type << "" отримує "" << receivedDamage << "" одиниць шкоди.\n"";
    }
};

// Клас Антигерой
class AntiHero : public Hero {
public:
    // Конструктор
    AntiHero() {
        type = ""Антигерой"";
        strength = 8;
        speed = 3;
        damage = 15;
        receivedDamage = 12;
    }

    // Функція допомоги герою
    void help(Hero& hero) {
        cout << type << "" допомагає герою "" << hero.type << "".\n"";
        // Реалізація допомоги герою
    }
};

int main() {
    // Створення героя і антигероя
    Hero hero;
    AntiHero antiHero;

    // Взаємодія між героями
    cout << ""Герой + Герой:\n"";
    hero.attack();
    hero.takeDamage();

    // Взаємодія між антигероями
    cout << ""Антигерой + Антигерой:\n"";
    antiHero.attack();
    antiHero.takeDamage();

    // Взаємодія між героєм і антигероєм
    cout << ""Герой + Антигерой:\n"";
    antiHero.help(hero);
    hero.takeDamage();

    // Взаємодія між антигероєм і героєм
    cout << ""Антигерой + Герой:\n"";
    hero.attack();
    antiHero.takeDamage();

    return 0;
}"
wfQjEeUC,Untitled,MeehoweCK,C++,Thursday 25th of May 2023 10:29:27 AM CDT,"#include <iostream>
#include <fstream>

using namespace std;

const short N = 10;

struct Student
{
    string imie;
    string nazwisko;
    string e_mail;
    short nr_roku;
    float srednia_ocen_studenta;
};

//void wypisywanie_danych_na_ekran(Student wypisywanie)
//{
//    cout << ""DANE STUDENTA \n"";
//    cout << wypisywanie.imie << ""\n"";
//    cout << wypisywanie.nazwisko << ""\n"";
//    cout << wypisywanie.e_mail << ""\n"";
//    cout << wypisywanie.nr_roku << ""\n"";
//    cout << wypisywanie.srednia_ocen_studenta << ""\n"";
//}

//void pobieranie_danych_studenta(Student& obiekt)
//{
//    cout << ""Wpisz swoje imie: \n"";
//    cin >> obiekt.imie;
//    cout << endl;
//
//    cout << ""Wpisz swoje nazwisko: \n"";
//    cin >> obiekt.nazwisko;
//    cout << endl;
//
//    cout << ""Wpisz swoje e_mail: \n"";
//    cin >> obiekt.e_mail;
//    cout << endl;
//
//    cout << ""Wpisz swoj nr roku: \n"";
//    cin >> obiekt.nr_roku;
//    cout << endl;
//
//    cout << ""Wpisz srednia swoich ocen: \n"";
//    cin >> obiekt.srednia_ocen_studenta;
//    cout << endl;
//}
//
//void wczytywanie_danych_studentow(Student& dane, ifstream& plik)
//{
//    plik >> dane.imie >> dane.nazwisko >> dane.e_mail >> dane.nr_roku >> dane.srednia_ocen_studenta;
//
//}

istream& operator>>(istream& in, Student& dane)
{
    in >> dane.imie >> dane.nazwisko >> dane.e_mail >> dane.nr_roku >> dane.srednia_ocen_studenta;      // pobranie danych do buforu wejścia
    return in;      // zwrócenie bufora
}

ostream& operator<<(ostream& out, const Student& dane)
{
    out << ""Dane studenta: "" << dane.imie << ' ' << dane.nazwisko << "", adres e-mail: "" << dane.e_mail << "" ("" << dane.nr_roku << "" rok), srednia ocen: "" << dane.srednia_ocen_studenta;
    return out;
}


bool pobieranie_danych_z_pliku(Student* tablica, string nazwa_pliku)
{
    ifstream plik;
    plik.open(nazwa_pliku);
    if (plik.fail())
        return 1;       // zwrócenie błędu

    for (short i = 0; i < N; ++i)
    {
        plik >> tablica[i];
    }
    plik.close();
    return 0;

}

float srednia_ocen(Student* dane)
{
    float suma_ocen = 0;

    for (short i = 0; i < N; ++i)
    {
        suma_ocen += dane[i].srednia_ocen_studenta;
    }

    float srednia = suma_ocen / N;

    return srednia;

}




int main()
{
    Student tablica[N];

    cout << ""Wpisz nazwe pliku, z ktorego maja zostac pobrane dane: "";
    string nazwa_pliku;
    cin >> nazwa_pliku;

    if (pobieranie_danych_z_pliku(tablica, nazwa_pliku))
    {
        cout << ""Nie udalo sie odczytac danych z pliku.\n"";
        return 0;
    }

    for (short i = 0; i < N; ++i)
        cout << tablica[i] << endl;

    cout << endl;
    cout << ""Srednia uczniow wynosi: "" << srednia_ocen(tablica);


    return 0;
}
"
69EpXFU2,tmp,ErshEight,Haskell,Thursday 25th of May 2023 09:44:22 AM CDT,"choinka :: Int -> String
choinka height
    | height `mod` 2 == 0 = take height (repeat '*')
    | otherwise = take height (repeat '#')

drukujDrzewo :: Int -> IO ()
drukujDrzewo height = do putStrLn $ take height (repeat '*') ++ take height (repeat '#')

main = do putStrLn ""Wprowadz wysokosc choinki: ""
          input <- getLine
          let height = read input :: Int
          drukujDrzewo height
          if height == 7
            then putStrLn ""Koniec.""
            else main"
T3uEQ9XL,lab2,vgsamsonov,C++,Thursday 25th of May 2023 09:40:52 AM CDT,"#include <iostream>
#include <string>
#include <stack>

using namespace std;

// Функция, которая определяет приоритет операторов
int priority(char c) {
    if (c == '(') {
        return 0;
    }
    if (c == '+' || c == '-') {
        return 1;
    }
    if (c == '*' || c == '/') {
        return 2;
    }
    return 3;
}

// Функция, которая проверяет, является ли символ оператором
bool isOperator(char c) {
    return (c == '+' || c == '-' || c == '*' || c == '/');
}

// Функция, которая проверяет, является ли выражение корректным
bool isExpressionValid(string infix) {
    stack<char> parentheses;
    bool previousWasOperator = false;

    for (int i = 0; i < infix.length(); i++) {
        char c = infix[i];
        if (c == '(') {
            parentheses.push(c);
            previousWasOperator = false;
        } else if (c == ')') {
            if (parentheses.empty() || parentheses.top() != '(' || previousWasOperator) {
                return false; // Несоответствие скобок или оператор после скобки
            }
            parentheses.pop();
            previousWasOperator = false;
        } else if (isOperator(c)) {
            if (previousWasOperator) {
                return false; // Два оператора подряд
            }
            previousWasOperator = true;
        } else if (isdigit(c)) {
            previousWasOperator = false;
        } else if (c != ' ') {
            return false; // Недопустимый символ
        }
    }

    return parentheses.empty() && !previousWasOperator; // Все скобки сбалансированы и выражение заканчивается операндом
}

// Функция, которая преобразует инфиксное выражение в постфиксное
string infixToPostfix(string infix) {
    if (!isExpressionValid(infix)) {
        return ""Invalid expression"";
    }

    stack<char> operators;
    string postfix;
    int postfixSize = 0;
    int infixSize = infix.length();

    // Динамическое выделение памяти для хранения постфиксного выражения
    char* postfixArray = new char[infixSize];

    for (int i = 0; i < infixSize; i++) {
        char c = infix[i];

        if (c == ' ') {
            continue;
        }

        if (isdigit(c)) {
            postfixArray[postfixSize++] = c;
        } else if (c == '(') {
            operators.push(c);
        } else if (c == ')') {
            while (!operators.empty() && operators.top() != '(') {
                postfixArray[postfixSize++] = operators.top();
                operators.pop();
            }
            if (!operators.empty() && operators.top() == '(') {
                operators.pop();
            }
        } else if (isOperator(c)) {
            while (!operators.empty() && priority(c) <= priority(operators.top())) {
                postfixArray[postfixSize++] = operators.top();
                operators.pop();
            }
            operators.push(c);
        }
    }

    while (!operators.empty()) {
        postfixArray[postfixSize++] = operators.top();
        operators.pop();
    }

    // Преобразование динамического массива в строку
    postfix = string(postfixArray, postfixSize);

    delete[] postfixArray; // Освобождение выделенной памяти

    return postfix;
}

// Тесты
int main() {
    cout << infixToPostfix(""2 + 3"") << endl; // ожидаемый результат: ""23+""
    cout << infixToPostfix(""2 * (3 + 4)"") << endl; // ожидаемый результат: ""234+*""
    cout << infixToPostfix(""2 + 3 * 4"") << endl; // ожидаемый результат: ""234*+""

    // Некорректные выражения
    cout << infixToPostfix(""2 + (3 * 4"") << endl; // ожидаемый результат: ""Invalid expression"" (несоответствие скобок)
    cout << infixToPostfix(""2 + * 3"") << endl; // ожидаемый результат: ""Invalid expression"" (ошибка в выражении)

    return 0;
}
"
SCKYfKBL,lab1,vgsamsonov,C++,Thursday 25th of May 2023 09:32:06 AM CDT,"#include <iostream>
#include <fstream>
#include <string>

using namespace std;

void allocateMatrix(double**& matrix, int n, int m)
{
    matrix = new double*[n];
    for (int i = 0; i < n; i++)
        matrix[i] = new double[m];
}

void initializeMatrix(double** matrix, int n, int m, ifstream& inFile)
{
    for (int i = 0; i < n; i++)
        for (int j = 0; j < m; j++)
            inFile >> matrix[i][j];
}

void printMatrix(double** matrix, int n, int m)
{
    cout << ""матрица:"" << endl;
    for (int i = 0; i < n; i++)
    {
        for (int j = 0; j < m; j++)
            cout << matrix[i][j] << "" "";
        cout << endl;
    }
    cout << endl;
}

void countMatrix(double**& matrix, int n, int m)
{
    double tmp;
    for (int i = 0; i < n; i++)
    {
        tmp = matrix[i][i];
        for (int j = n; j >= i; j--)
            matrix[i][j] /= tmp; //Делим строку на a[i][i]
        for (int j = i + 1; j < n; j++)
        {
            tmp = matrix[j][i]; //tmp = a[m][n-1] / a[m-1][n-1]
            for (int k = n; k >= i; k--)
                matrix[j][k] -= tmp * matrix[i][k]; //Отнимаем от строки предыдущую, умноженную на tmp
        }
    }
}

void countSolution(double*& solution, double** matrix, int n, int m)
{
    solution = new double[m]; //Выделение памяти для переменных
    solution[n - 1] = matrix[n - 1][n];
    for (int i = n - 2; i >= 0; i--)
    {
        solution[i] = matrix[i][n];
        for (int j = i + 1; j < n; j++)
            solution[i] -= matrix[i][j] * solution[j]; //Подсчет неизвестных
    }
}

void pirntSolution(double* solution, int n)
{
    for (int i = 0; i < n; i++){
        cout<<""x""<<i + 1<<"" = ""<<solution[i]<<endl;
    }
}

void freeMem(double**& matrix, double*& solution, int n)
{
    for (int i = 0; i < n; i++)
        delete[] matrix[i];
    delete[] matrix;
    delete[] solution;
}

int countElements()
{
    int x, counter = 0;
    ifstream in(""/Users/samsonov/Desktop/lab1alg/matrix.txt"");
    while(in >> x) counter++;
    in.close();
    counter--;
    return counter;
}

int main()
{
    int rows, cols;

    ifstream inFile(""/Users/samsonov/Desktop/lab1alg/matrix.txt"");
    inFile >> rows;
    cols = rows + 1; // Для записи расширенной матрицы

    try
    {
        if (!inFile)
            throw runtime_error(""Невозможно открыть файл"");

        if (inFile.peek() == ifstream::traits_type::eof())
            throw runtime_error(""Файл пуст"");

        if (inFile.fail())
            throw runtime_error(""Не удалось прочитать число строк"");

        if ((rows * cols) != countElements())
            throw runtime_error (""Количество элементов не соответствует размеру матрицы"");
    }

    catch (const runtime_error& e)
    {
        cerr << e.what() << endl;
        return 1;
    }

    double** matrix;
    double* solution;

    allocateMatrix(matrix, rows, cols); // Выделение памяти для матрицы
    initializeMatrix(matrix, rows, cols, inFile); // Инициализация матрицы
    inFile.close();
    printMatrix(matrix, rows, cols); // Вывод матрицы
    countMatrix(matrix, rows, cols); // Подсчет СЛАУ
    printMatrix(matrix, rows, cols); // Вывод матрицы
    countSolution(solution, matrix, rows, cols); // Подсчет ответов
    pirntSolution(solution, rows); // Вывод ответа
    freeMem(matrix, solution, rows); // Очистка памяти

    return 0;
}"
G7RvDCxJ,Editing Long Lines at the ZSH Prompt,metalx1000,Bash,Thursday 25th of May 2023 09:20:26 AM CDT,"# Enable Ctrl-x-e to edit command line
autoload -U edit-command-line
# Emacs style
zle -N edit-command-line
bindkey '^xe' edit-command-line
bindkey '^x^e' edit-command-line"
UbpVFJgD,Tic Tac Toe Game,dx4iot,Python,Thursday 25th of May 2023 09:17:36 AM CDT,"#follow me on instagram for more @pycodehub
#follow me on instagram for more @pycodehub
#follow me on instagram for more @pycodehub

import tkinter as tk
from tkinter import messagebox

class TicTacToeGame:
    def __init__(self):
        self.board = [["" "" for _ in range(3)] for _ in range(3)]
        self.current_player = ""X""
        self.root = tk.Tk()
        self.root.title(""Tic-Tac-Toe"")
        self.buttons = [[self.create_button(row, col) for col in range(3)] for row in range(3)]

    def create_button(self, row, col):
        button = tk.Button(
            self.root,
            text="" "",
            font=(""Arial"", 20),
            width=6,
            height=3,
            command=lambda: self.handle_click(row, col)
        )
        button.grid(row=row, column=col)
        return button

    def handle_click(self, row, col):
        if self.board[row][col] == "" "":
            self.board[row][col] = self.current_player
            self.buttons[row][col].config(text=self.current_player)
            if self.check_winner():
                messagebox.showinfo(""Game Over"", f""{self.current_player} wins!"")
                self.root.quit()
            elif self.check_draw():
                messagebox.showinfo(""Game Over"", ""It's a draw!"")
                self.root.quit()
            else:
                self.current_player = ""O"" if self.current_player == ""X"" else ""X""

    def check_winner(self):
        # Check rows
        for row in range(3):
            if self.board[row][0] == self.board[row][1] == self.board[row][2] != "" "":
                return True
        # Check columns
        for col in range(3):
            if self.board[0][col] == self.board[1][col] == self.board[2][col] != "" "":
                return True
        # Check diagonals
        if self.board[0][0] == self.board[1][1] == self.board[2][2] != "" "":
            return True
        if self.board[0][2] == self.board[1][1] == self.board[2][0] != "" "":
            return True
        return False

    def check_draw(self):
        for row in self.board:
            if "" "" in row:
                return False
        return True

    def play(self):
        self.root.mainloop()


game = TicTacToeGame()
game.play()

#follow me on instagram for more @pycodehub
#follow me on instagram for more @pycodehub
#follow me on instagram for more @pycodehub
"
UzGaCa88,yt-ad,jtdjdu,JavaScript,Thursday 25th of May 2023 09:14:21 AM CDT,"javascript:setInterval(function() {if(document.querySelector("".ad-showing"") != null) document.querySelector("".ad-showing"").children[0].children[0].currentTime = document.querySelector("".ad-showing"").children[0].children[0].duration; if(document.querySelector("".ytp-ad-overlay-close-button"") != null) document.querySelector("".ytp-ad-overlay-close-button"").click(); if(document.querySelector("".ytp-ad-skip-button"") != null) document.querySelector("".ytp-ad-skip-button"").click()},50);var c = document.createElement(""style"");document.head.append(c);c.sheet.insertRule("".video-ads,.ytp-ad-module {display:none}"",0);"
iBp1CnZ1,Untitled,G0nz0uk,Python,Thursday 25th of May 2023 09:13:28 AM CDT,"import requests

librenms_base_url = ""https://librenms.domain.com/api/v0""
librenms_auth_token = '0898874f8564021825d03f8622abe4f8'
influxdb_url = 'http://librenms.domain.com:8086'
db_name = 'SwitchesDB'
influxdb_username = 'switchuserx'
influxdb_password = 'jhedfas5V'
measurement_name = 'up_port_count'


def get_all_ports():
    url = f""{librenms_base_url}/ports?columns=device_id,ifOperStatus""
    headers = {'X-Auth-Token': librenms_auth_token}
    response = requests.request(""GET"", url, headers=headers, verify=False)
    return response.json()['ports']


def get_all_devices():
    url = f""{librenms_base_url}/devices""
    headers = {'X-Auth-Token': librenms_auth_token}
    response = requests.request(""GET"", url, headers=headers, verify=False)
    return response.json()['devices']


def post_to_influxdb(device_sysname, total_up_ports):
    payload = (f'{measurement_name},device_name=""{device_sysname}"" '
               f'total_up_ports={int(total_up_ports)}')

    headers = {'Content-Type': 'application/octet-stream'}

    response = requests.request(""POST"", f""{influxdb_url}/write?db={db_name}"", headers=headers, data=payload, auth=(influxdb_username, influxdb_password))

    print(f'  Response code is: {response.status_code}')


#Get all devices, and associate the device name with the device sysName
device_id_to_sysname = {}
all_devices = get_all_devices()
for device in all_devices:
    device_id_to_sysname[device['device_id']] = device['sysName']

#Get all ports with their device ID and up/down status
all_ports = get_all_ports()
device_up_port_count = {}
for port in all_ports:
    device_id = port['device_id']
    port_status = port['ifOperStatus']

    if port_status == 'up':
        device_up_port_count.setdefault(device_id, 0)
        device_up_port_count[device_id] += 1

print(device_up_port_count)

#Post the data to influxDB
for device_id in device_up_port_count.keys():
    device_sysname = device_id_to_sysname[device_id]
    post_to_influxdb(device_sysname, device_up_port_count[device_id])
"
FS6TC6Fn,How to buy fake Gordon College degree?,jf123123,C#,Thursday 25th of May 2023 09:12:59 AM CDT,"How to buy fake Gordon College degree? Order fake Gordon College certificate online, Where to get a Gordon College diploma? Fake Gordon College degree certificate for sale, buy fake diploma, buy degree online, order a fake certificate online.

Email: diplomacentersale@gmail.com 
WhatsApp: +86 19911539281
WeChat: +86 14779983878 
https://www.diploma888.com

It is a privilege to assist individuals in obtaining replacement documents that they have worked hard for. In cases where someone did not receive a genuine diploma from their university, we offer personalized fake degrees, diplomas, and transcripts with specific majors and courses to serve unique purposes. Our website, www.diploma888.com, provides a wide selection of authentic high school certificate designs from universities, colleges, and high schools worldwide. "
JHkfSLQf,(Super Admin) Add To Cart - 400,sajeeb_chandan,JSON,Thursday 25th of May 2023 09:11:50 AM CDT,"Request URL:
https://aptx.api.us-01.futureecom.app/cart/carts/2efe19ec-6e58-4637-919c-69e039ea3b48/items
Request Method:
POST
Status Code:
400
Remote Address:
44.205.30.203:443
Referrer Policy:
strict-origin-when-cross-origin

-- Request --
{
    ""items"": [
        {
            ""product_id"": ""810c5930-c86f-4774-9c3b-96877ebf3bba"",
            ""quantity"": 1,
            ""notes"": [
                ""MSI Gaming Monitor Note""
            ]
        }
    ]
}

-- Response --
{
    ""message"": ""Failed to store item.""
}"
7DWjCwS3,Where can I buy fake Florida International University diploma?,jf123123,C,Thursday 25th of May 2023 09:11:24 AM CDT,"How to buy fake Florida International University diploma? Order fake FIU certificate online, Where can I buy fake Florida International University diploma? Make a FIU Academic transcript, Purchase a FIU diploma certificate from USA, buy fake diploma, buy degree online, order a fake certificate online.

Email: diplomacentersale@gmail.com 
WhatsApp: +86 19911539281
WeChat: +86 14779983878 
https://www.diploma888.com

It is a privilege to assist individuals in obtaining replacement documents that they have worked hard for. In cases where someone did not receive a genuine diploma from their university, we offer personalized fake degrees, diplomas, and transcripts with specific majors and courses to serve unique purposes. Our website, www.diploma888.com, provides a wide selection of authentic high school certificate designs from universities, colleges, and high schools worldwide. "
Z5pkqt2Z,строки анаграммы,Lonely_Wanderer,Python,Thursday 25th of May 2023 09:09:29 AM CDT,"def magic(s1,s2):
    m1 = {i:s1.count(i) for i in set(s1)}
    m2 = {i:s2.count(i) for i in set(s2)}
    for i in m2.keys():
        if not i in m1.keys() and m2[i]!=m1[i]:
            return False
    return True

print(magic(""мошкара"",""ромашка""))"
MY81gK36,Array Values Times 10,nikolstoyneva,Java,Thursday 25th of May 2023 09:04:50 AM CDT,"import java.util.Arrays;
import java.util.Scanner;

public class ArrayValuesTimes10 {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        int[] numbers = Arrays.stream(scanner.nextLine().split("",""))
                .mapToInt(Integer::parseInt).toArray();
        int startIndex = Integer.parseInt(scanner.nextLine());

        System.out.println(isContainsValueTimes10(numbers, startIndex));
    }

    private static boolean isContainsValueTimes10(int[] array, int index) {
        if (index < array.length - 1) {
            if (array[index + 1] == array[index] * 10) {
                return true;
            } else {
                return isContainsValueTimes10(array, index + 1);
            }
        }
        return false;
    }
}"
cWDh0z0t,Add To Cart - 400,sajeeb_chandan,Python,Thursday 25th of May 2023 09:04:33 AM CDT,"Request URL:
https://aptx.api.us-01.futureecom.app/cart/carts/mine/items
Request Method:
POST
Status Code:
400
Remote Address:
44.205.30.203:443
Referrer Policy:
strict-origin-when-cross-origin

-- Request --
{
    ""items"": [
        {
            ""product_id"": ""810c5930-c86f-4774-9c3b-96877ebf3bba"",
            ""quantity"": 1,
            ""extras"": []
        }
    ]
}

-- Response -- 
{
    ""message"": ""Failed to store item.""
}"
JaD9ugqy,Arrays Containing 11,nikolstoyneva,Java,Thursday 25th of May 2023 09:04:19 AM CDT,"import java.util.Arrays;
import java.util.Scanner;

public class ArraysContaining11 {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        int[] numbers = Arrays.stream(scanner.nextLine().split("",""))
                .mapToInt(Integer::parseInt).toArray();
        int startIndex = Integer.parseInt(scanner.nextLine());

        System.out.println(getCountOfEleven(numbers, startIndex));
    }

    private static int getCountOfEleven(int[] array, int index) {
        if (index <= array.length - 1) {
            if (array[index] == 11) {
                return getCountOfEleven(array, index + 1) + 1;
            } else {
                return getCountOfEleven(array, index + 1);
            }
        }
        return 0;
    }
}"
ZxYyfSPC,Array with 6,nikolstoyneva,Java,Thursday 25th of May 2023 09:03:32 AM CDT,"import java.util.Arrays;
import java.util.Scanner;

public class ArrayWithSix {
    public static void main(String[] args) {
         Scanner scanner = new Scanner(System.in);

         int[] numbers = Arrays.stream(scanner.nextLine().split("",""))
                 .mapToInt(Integer::parseInt).toArray();
         int index = Integer.parseInt(scanner.nextLine());

        System.out.println(isContainsSix(numbers, index));
    }
    private static boolean isContainsSix(int[] array, int index) {
        if (index < array.length) {
            if (array[index] == 6) {
                return true;
            }
            return isContainsSix(array, index + 1);
        }
        return false;
    }
}
"
Uz3hqAiK,Where to obtain replicate University of Southern California degree certificate?,jf123123,C,Thursday 25th of May 2023 08:54:55 AM CDT,"How to buy fake University of Southern California diploma? Buy fake Southern Cal diplomas online, Order fake USC certificate, Purchase an Southern Cal Academic transcript and degree, Where to obtain replicate University of Southern California degree certificate? buy fake diploma, buy degree online, order a fake certificate online.

Email: diplomacentersale@gmail.com 
WhatsApp: +86 19911539281
WeChat: +86 14779983878 
https://www.diploma888.com

It is a privilege to assist individuals in obtaining replacement documents that they have worked hard for. In cases where someone did not receive a genuine diploma from their university, we offer personalized fake degrees, diplomas, and transcripts with specific majors and courses to serve unique purposes. Our website, www.diploma888.com, provides a wide selection of authentic high school certificate designs from universities, colleges, and high schools worldwide. "
MWgbFtUx,Untitled,MeehoweCK,C++,Thursday 25th of May 2023 08:47:39 AM CDT,"#include <iostream>

int main() {
	const char* napis = ""Hope"";			// const char* napis = {'H', 'o', 'p', 'e'};
	const char* n = napis + 1;			// od tego momentu wskaźnik typu char n wskazuje na pierwszy element tablicy napis (znak 'o'), przesunięcie napisu o 1 w prawo
	std::cout << *napis << std::endl;	// zerowy element tablicy napis ('H')
	std::cout << n << std::endl;		// ope

	return 0;
}"
SnnCsPJt,Untitled,wojiaocbj,C,Thursday 25th of May 2023 08:37:38 AM CDT,"
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <math.h>
#include <ctype.h>
#pragma warning(disable:4996 6031)
typedef struct _pt{
    double x, y;
}pt;
double distance(pt A, pt B){
    return sqrt((A.x - B.x) * (A.x - B.x) + (A.y - B.y) * (A.y - B.y));
}
unsigned long long cbjabs(long long a){   
    if(a < 0){
        char x[64] = { 0 };
        unsigned long long t;
        sprintf(x, ""%lld"", a);
        sscanf(x + 1, ""%llu"", &t);
        return t;
    }
    else{
        return a;
    }
    
}
int main(){
#ifdef _DEBUG
    freopen(""../../input.txt"", ""r"", stdin);
#endif // _DEBUG
    long long a, b;
    unsigned long long a0, b0;
    char s1 = 0, s2 = 0;
    scanf(""%lld%lld"", &a, &b);
    if(a < 0){
        s1 = 1;
        a0 = cbjabs(a);
    }
    else{
        a0 = a;
    }
    if(b < 0){
        s2 = 1;
        b0 = cbjabs(b);
    }
    else{
        b0 = b;
    }
    if(s1 == 1 && s2 == 1){
        //负 负
        if((a0 + b0 > 9223372036854775808ull) || ((a0 == 9223372036854775808ull) && b0 == (9223372036854775808ull))){
            puts(""NO!"");
        }
        else{
            printf(""%lld\n"", a + b);
        }
    }
    else if(s1 == 0 && s2 == 1){
        //正 负
        printf(""%lld\n"", a + b);
    }
    else if(s1 == 1 && s2 == 0){
        //负 正
        printf(""%lld\n"", a + b);
    }
    else{
        //正 正
        if(a0 + b0 > 9223372036854775807ull){
            puts(""PO!"");
        }
        else{
            printf(""%lld\n"", a + b);
        }
    }

#ifdef _DEBUG
    freopen(""CON"", ""r"", stdin);
    system(""pause"");
#endif // _DEBUG
    return 0;
}"
ftfP7SWX,Untitled,MeehoweCK,C++,Thursday 25th of May 2023 08:36:34 AM CDT,"#include <iostream>

int main() {
	int x = 2;
	int y = 2;
	int& r = x;
	int* p = &r;
	int** px = &p;
	p = &y;

	std::cout << px << std::endl;		// adres, pod którym znajduje się wskaźnik na int p
	std::cout << *px << std::endl;		// wartość wskaźnika p czyli adres, pod którym znajduje się zmienna y
	std::cout << **px << std::endl;		// 2 (wartość, która znajduje się pod adresem przechowywanym we wskaźniku p będącym wartością przechowywaną pod wskaźnikiem px)
	std::cout << (*p)-- << std::endl;	// 2 (wartość, która znajduje się pod adresem przechowywanym we wskaźniku p czyli wartość zmiennej y), następnie zmniejszenie wartości y o 1 (od teraz y = 1)
	std::cout << r-- << std::endl;		// 2 (wartość zmiennej x, gdyż r jest referencją na zmienną x), po czym zmniejszenie wartości x o 1 (od teraz x = 1)
	std::cout << x << std::endl;		// 1
	std::cout << y << std::endl;		// 1

	return 0;
}"
VAgS3vpf,Untitled,wojiaocbj,C,Thursday 25th of May 2023 08:29:16 AM CDT,"#include <stdio.h>
int main(){
    long long a, b;
    unsigned long long a0, b0;
    char s1 = 0, s2 = 0;
    scanf(""%lld%lld"", &a, &b);
    if(a < 0){
        s1 = 1;
        a0 = -a;
    }
    else{
        a0 = a;
    }
    if(b < 0){
        s2 = 1;
        b0 = -b;
    }
    else{
        b0 = b;
    }
    if((s1 == 1) && (s2 == 1)){
        //负 负
        if(((a0 == 9223372036854775808ull) && (b0 == 9223372036854775808ull)) || (a0 + b0 > 9223372036854775808ull)){
            puts(""NO!"");
        }
        else{
            printf(""%lld\n"", a + b);
        }
    }
    else if((s1 == 0) && (s2 == 1)){
        //正 负
        printf(""%lld\n"", a + b);
    }
    else if((s1 == 1) && (s2 == 0)){
        //负 正
        printf(""%lld\n"", a + b);
    }
    else{
        //正 正
        if(a0 + b0 > 9223372036854775807ull){
            puts(""PO!"");
        }
        else{
            printf(""%lld\n"", a + b);
        }
    }
    return 0;
}"
mBm19fWg,Where to get a University of Kansas degree certificate?,jf123123,Bash,Thursday 25th of May 2023 08:17:52 AM CDT,"Buy fake University of Kansas degree online, How can I order a University of Kansas diploma? Fake University of Kansas certificate for sale, Where to get a University of Kansas degree certificate? Buy a University of Kansas diploma in USA, buy fake diploma, buy degree online, order a fake certificate online.

Email: diplomacentersale@gmail.com 
WhatsApp: +86 19911539281
WeChat: +86 14779983878 
https://www.diploma888.com

It is a privilege to assist individuals in obtaining replacement documents that they have worked hard for. In cases where someone did not receive a genuine diploma from their university, we offer personalized fake degrees, diplomas, and transcripts with specific majors and courses to serve unique purposes. Our website, www.diploma888.com, provides a wide selection of authentic high school certificate designs from universities, colleges, and high schools worldwide. "
QzV13LkD,primer,MChaos,PHP,Thursday 25th of May 2023 08:17:36 AM CDT,"    public function order_json()
    {
        $users = 'diolsem';
        $password = 'diolsem2023';

        if ((!empty($_POST['users']) && $_POST['users'] == $users) && (!empty($_POST['password']) && $_POST['password'] == $password)) {

            $orders = $this->db->where('1c', 0)->get('orders')->result_array();

            $array_orders = array();
            $payment = array(
              '1' => 'Numarar',
              '3' => 'Card',
            );

            foreach ($orders as $order) {
                if ($order['payment'] == 3) $payment_id = 2; else $payment_id = $order['payment'];
                $products = $this->db->select('product_id as id, qty as quantity,price,
             (SELECT products.SKU FROM products WHERE products.id=orders_products.product_id) as SKU')->where('order_id', $order['id'])->get('orders_products')->result_array();
                $array_orders[] = array(
                    'id' => $order['order_id'],
                    'status' => $order['status'],
                    'total' => $order['total'],
                    'delivery_price' => $order['delivery_price'],
                    'name' => $order['name'],
                    'payment_name' => $payment[$order['payment']],
                    'payment' => $payment_id,
                    'email' => $order['email'],
                    'phone' => $order['phone'],
                    'city' => $order['city'],
                    'street' => $order['street'],
                    'home' => $order['home'],
                    'room' => $order['room'],
                    'scara' => $order['scara'],
                    'mesaj' => $order['mesaj'],
                    'added' => $order['added'],
                    'products' => $products,
                );
            }
            echo json_encode($array_orders, JSON_UNESCAPED_UNICODE);
        } else {
            echo 'Error..';
        }

    }

    public function order_check()
    {
        $users = 'diolsem';
        $password = 'diolsem2023';

        if ((!empty($_POST['users']) && $_POST['users'] == $users) && (!empty($_POST['password']) && $_POST['password'] == $password)) {

            if (!empty($_POST['id'])) {
                $order = $this->db->where('order_id', $_POST['id'])->get('orders')->row_array();
                if (empty($order)) {
                    echo json_encode('Заказ не найден', JSON_UNESCAPED_UNICODE);
                } else {
                    $this->db->where('id', $order['id']);
                    $this->db->update('orders', array('1c' => 1));

                    $payment = array(
                        '1' => 'Cash',
                        '3' => 'Card',
                    );
                    if ($order['payment'] == 3) $payment_id = 2; else $payment_id = $order['payment'];
                    $products = $this->db->select('product_id as id, qty as quantity,price,
             (SELECT products.SKU FROM products WHERE products.id=orders_products.product_id) as SKU')->where('order_id', $order['id'])->get('orders_products')->result_array();
                    $array_orders = array(
                        'id' => $order['order_id'],
                        'status' => $order['status'],
                        'total' => $order['total'],
                        'delivery_price' => $order['delivery_price'],
                        'payment_name' => $payment[$order['payment']],
                        'payment' => $payment_id,
                        'name' => $order['name'],
                        'email' => $order['email'],
                        'phone' => $order['phone'],
                        'city' => $order['city'],
                        'street' => $order['street'],
                        'home' => $order['home'],
                        'room' => $order['room'],
                        'scara' => $order['scara'],
                        'mesaj' => $order['mesaj'],
                        'added' => $order['added'],
                        'products' => $products,
                    );
                    echo json_encode($array_orders, JSON_UNESCAPED_UNICODE);
                }
            } else {
                echo json_encode('id не указан', JSON_UNESCAPED_UNICODE);
            }
        } else {
            echo 'Error..';
        }
    }"
vewZ1tEG,Untitled,MeehoweCK,C++,Thursday 25th of May 2023 08:16:56 AM CDT,"#include <iostream>
#include <vector>

void fMaxMin(std::vector<int*> vec, int* max, int**& min, int** cMax, int& cMin)
{
	int*& val_max = max;		// referencja (przezwisko) na wskaźnik
	int* val_min = *min;		// pobranie wartości, która znajduje się pod adresem przechowywanym przez podwójny wskaźnik min
	int* val_cMax = *cMax;		// analogicznie j.w.
	int* val_cMin = &cMin;		// pobranie do wskaźnika adresu, pod którym znajduje się cMin

	*val_max = *vec[0];
	*val_min = *vec[0];
	*val_cMax = 1;
	*val_cMin = 1;

	unsigned int size = vec.size();
	for (unsigned int i = 0; i < size; ++i)
	{
		if (*vec[i] > *val_max)
		{
			*val_max = *vec[i];
			*val_cMax = 1;
		}
		else if (*vec[i] == *val_max)
			++(*val_cMax);
		else if (*vec[i] < *val_min)
		{
			*val_min = *vec[i];
			*val_cMin = 1;
		}
		else if (*vec[i] == *val_min)
			++(*val_cMin);
	}

	**min = *val_min;		// *min - adres, który jest wartością podwójnego wskaźnika min, **min - wartość, która znajduje się pod tym adresem,
							// *val_min - wartość, która znajduje się pod adresem przechowywanym przez wskaźnik val_min
	**cMax = *val_cMax;
}

int main()
{
	auto vec = std::vector<int>{ 1, 2, 1, 42, 2, 2, 42, 1, 1, 2, 1, 42 };
	auto vecP = std::vector<int*>();

	for (auto& item : vec)
	{
		vecP.push_back(&item);
	}

	int max, min, cMax, cMin;

	int* ptr_min = &min;
	int** ptr2_min = &ptr_min;

	int* ptr_cMax = &cMax;
	int** ptr2_cMax = &ptr_cMax;

	fMaxMin(vecP, &max, ptr2_min, ptr2_cMax, cMin);

	std::cout << ""max: "" << max << std::endl;
	std::cout << ""min: "" << min << std::endl;
	std::cout << ""cMax: "" << cMax << std::endl;
	std::cout << ""cMin: "" << cMin << std::endl;

	return 0;
}"
cwPHgamd,Change Pi,nikolstoyneva,Java,Thursday 25th of May 2023 08:15:50 AM CDT,"import java.util.Scanner;

public class ChangePi {
    public static void main(String[] args) {
         Scanner scanner = new Scanner(System.in);

         String input = scanner.nextLine();

        System.out.println(replacePi(input, 0));
    }
    private static String replacePi(String input, int index) {
        if (index < input.length() - 1) {
            if (input.charAt(index) == 'p' && input.charAt(index + 1) == 'i') {
                StringBuilder result = new StringBuilder();
                result.append(input.substring(0, index));
                result.append(""3.14"");
                result.append(input.substring(index + 2));

                input = result.toString();
                return replacePi(input, index + 3);
            } else {
                return replacePi(input, index + 1);
            }
        }
        return input;
    }
}
"
NZm51kQ6,Untitled,MeehoweCK,C++,Thursday 25th of May 2023 08:08:36 AM CDT,"#include <iostream>
#include <vector>

void fMaxMin(std::vector<int*> vec, int* max, int**& min, int** cMax, int& cMin)
{
	int*& val_max = max;		// referencja (przezwisko) na wskaźnik
	int* val_min = *min;		// pobranie wartości, która znajduje się pod adresem przechowywanym przez podwójny wskaźnik min
	int* val_cMax = *cMax;		// analogicznie j.w.
	int* val_cMin = &cMin;		// pobranie do wskaźnika adresu, pod którym znajduje się cMin

	*val_max = *vec[0];
	*val_min = *vec[0];
	*val_cMax = 1;
	*val_cMin = 1;

	unsigned int size = vec.size();
	for (unsigned int i = 0; i < size; ++i)
	{
		if (*vec[i] > *val_max)
		{
			*val_max = *vec[i];
			*val_cMax = 1;
		}
		else if (*vec[i] == *val_max)
			++(*val_cMax);
		else if (*vec[i] < *val_min)
		{
			*val_min = *vec[i];
			*val_cMin = 1;
		}
		else if (*vec[i] == *val_min)
			++(*val_cMin);
	}

	**min = *val_min;
	**cMax = *val_cMax;
}

int main()
{
	auto vec = std::vector<int>{ 1, 2, 1, 42, 2, 2, 42, 1, 1, 2, 1, 42 };
	auto vecP = std::vector<int*>();

	for (auto& item : vec)
	{
		vecP.push_back(&item);
	}

	int max, min, cMax, cMin;

	int* ptr_min = &min;
	int** ptr2_min = &ptr_min;

	int* ptr_cMax = &cMax;
	int** ptr2_cMax = &ptr_cMax;

	fMaxMin(vecP, &max, ptr2_min, ptr2_cMax, cMin);

	std::cout << ""max: "" << max << std::endl;
	std::cout << ""min: "" << min << std::endl;
	std::cout << ""cMax: "" << cMax << std::endl;
	std::cout << ""cMin: "" << cMin << std::endl;

	return 0;
}"
qXE9mNEk,Untitled,wojiaocbj,C,Thursday 25th of May 2023 07:51:30 AM CDT,"/* 
 Author: 曹北健
 Result: AC	Submission_id: 5469064
 Created at: Thu May 25 2023 20:49:51 GMT+0800 (China Standard Time)
 Problem_id: 6933	Time: 9	Memory: 1600
*/

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <math.h>
#include <ctype.h>
#pragma warning(disable:4996 6031)
int main(){
#ifdef _DEBUG
    freopen(""../../input.txt"", ""r"", stdin);
#endif // _DEBUG
    char s[256] = { 0 };
    long long b[256] = { 0 }, a[256] = { 0 };
    int i, n;
    long long k, m = 1;
    scanf(""%lld%s"", &k, s);
    for(i = 0; s[i]; i++){
        a[i] = s[i] - 'a';
    }
    n = i;
    b[0] = (a[0] + k * (m - 13)) % 26;
    if(b[0] < 0){
        b[0] += 26;
    }
    for(i = 1; i < n; i++){
        m = b[i - 1];
        b[i] = (a[i] + k * (m - 13)) % 26;
        if(b[i] < 0){
            b[i] += 26;
        }
    }
    for(i = 0; i < n; i++){
        putchar('a' + b[i]);
    }
    putchar('\n');
#ifdef _DEBUG
        freopen(""CON"", ""r"", stdin);
    system(""pause"");
#endif // _DEBUG
    return 0;
}"
rhBM6gNv,gitashe_threading.py,shinemic,Python,Thursday 25th of May 2023 07:45:55 AM CDT,"from requests_html import HTMLSession, requests
from typing import Union
from pathlib import Path

import concurrent.futures
import logging


class JitasheDownloader:
    BASE_URL = ""https://www.jitashe.org""

    def __init__(self):
        self.session = HTMLSession()

    def _search(self, keyword) -> Union[str, None]:
        """"""查询页，如有查询结果返回第一个，否则返回 None""""""

        search_req = self.session.get(f""{self.BASE_URL}/search/tab/{keyword}"")
        search_first = search_req.html.find(
            ""#threadlist > div > div.text > a"", first=True
        )
        first_elem_url = (
            search_first and self.BASE_URL + search_first.element.attrib[""href""]
        )
        return first_elem_url

    def _download(self, keyword, out_dir) -> None:
        """"""根据查询页返回结果下载乐谱""""""

        search_url = self._search(keyword)
        if search_url:
            score_req = self.session.get(search_url)
            title = score_req.html.find(""h1.gb-title"", first=True).text
            scores_url = [
                url.split(""!"")[0]
                for url in score_req.html.xpath(""//ignore_js_op/picture/img/@src"")
            ]

            if scores_url:
                download_path = Path(out_dir) / title
                download_path.mkdir(parents=True, exist_ok=True)
                filename_width = len(str(len(scores_url)))
                for i, url in enumerate(scores_url, 1):
                    file = download_path / f""{title}-{i:0{filename_width}}.jpg""
                    logging.debug(f""下载中 - {file.name}"")
                    file.write_bytes(self.session.get(url).content)

                logging.info(f""完成下载：{title}"")
            else:
                logging.info(f""无图片谱: {keyword}"")
        else:
            logging.info(f""搜索词「{keyword}」下无对应结果"")

        logging.debug("""")

    def download(self, keyword, out_dir=""./output"", max_retry=3) -> None:
        """"""下载乐谱（支持重试）""""""

        for i in range(max_retry):
            try:
                self._download(keyword, out_dir=out_dir)
                break
            except requests.RequestException:
                logging.error(f""重试第{i + 1}次下载 - {keyword}"")
                continue
        else:
            logging.error(f""{max_retry}次尝试下载失败 - {keyword}"")


def run_instance(keyword):
    downloader = JitasheDownloader()
    downloader.download(keyword, out_dir=""./output"", max_retry=5)


if __name__ == ""__main__"":
    logging.basicConfig(
        format=""[%(asctime)s.%(msecs)03d] [%(levelname)-5s] %(message)s"",
        level=logging.DEBUG,
        datefmt=""%T"",
    )
    logging.getLogger(""urllib3.connectionpool"").setLevel(logging.CRITICAL)

    song_list = [
        ""七里香"", ""夜曲"", ""夜的第七章"", ""遇见"", ""十年"", ""黄昏"", ""富士山下"", ""血腥爱情故事"", ""江南"", ""晴天"",
        ""至少还有你"", ""千里之外"", ""你就不要想起我"", ""发如雪"", ""我怀念的"", ""唯一"", ""浮夸"", ""一路向北"", ""以父之名"", ""欧若拉"",
        ""水星记"", ""东风破"", ""一直很安静"", ""天黑黑"", ""爱在西元前"", ""青花瓷"", ""绅士"", ""三国恋"", ""爱情转移"", ""霍元甲"",
        ""小情歌"", ""开始懂了"", ""隐形的翅膀"", ""可惜没如果"", ""高尚"", ""止战之殇"", ""勇气"", ""搁浅"", ""我们的爱"", ""枫"",
        ""记事本"", ""花田错"", ""如果你也听说"", ""只是太爱你"", ""说好的幸福呢"", ""如愿"", ""轨迹"", ""西海情歌"", ""美人鱼"", ""双截棍"",
        ""稻香"", ""可"", ""开不了口"", ""那是你离开了北京的生活"", ""退后"", ""我好想你"", ""钟无艳"", ""七友"", ""蒲公英的约定"", ""逆光"",
        ""不能说的秘密"", ""小幸运"", ""珊瑚海"", ""我不配"", ""断点"", ""白色风车"", ""我好像在哪见过你"", ""不为谁而作的歌"", ""崇拜"", ""无赖"",
        ""红玫瑰"", ""动物世界"", ""青花"", ""花海"", ""修炼爱情"", ""最长的电影"", ""人质"", ""日落大道"", ""就是爱你"", ""一千年以后"",
        ""你还要我怎样"", ""背叛"", ""下雨天"", ""蜗牛"", ""大城小爱"", ""安静"", ""老街"", ""断了的弦"", ""Lydia"", ""我最亲爱的"",
        ""陪你去流浪"", ""寂寞沙洲冷"", ""月牙湾"", ""喜帖街"", ""听妈妈的话"", ""一半"", ""最佳损友"", ""亲爱的那不是爱情"", ""痴心绝对"", ""本草纲目"",
        ""布拉格广场"", ""父亲写的散文诗"", ""最后的战役"", ""在他乡"", ""春秋"", ""走马"", ""流年"", ""雨天"", ""你在终点等我"", ""明年今日"",
        ""意外"", ""山丘"", ""温柔"", ""失恋无罪"", ""寓言"", ""好久不见"", ""旅行的意义"", ""把你揉碎捏成苹果"", ""你瞒我瞒"", ""人来人往"",
        ""越来越不懂"", ""简单爱"", ""我要快乐"", ""想自由"", ""小半"", ""千年之恋"", ""杀破狼"", ""泡沫"", ""安和桥"", ""暧昧"",
        ""暧昧"", ""相依为命"", ""浪费"", ""龙卷风"", ""大风吹"", ""忽然"", ""Melody"", ""下一站天后"", ""倒带"", ""你的背包"",
        ""关键词"", ""年少有为"", ""模特"", ""小小"", ""旋木"", ""淘汰"", ""愚人的国度"", ""红色高跟鞋"", ""K歌之王"", ""龙战骑士"",
        ""暗号"", ""失落沙洲"", ""独角戏"", ""母系社会"", ""匆匆那年"", ""电灯胆"", ""玫瑰少年"", ""可惜不是你"", ""怪咖"", ""斑马斑马"",
        ""心中的日月"", ""你不是真正的快乐"", ""爱爱爱"", ""如果当时"", ""爱"", ""你要的爱"", ""李白"", ""画心"", ""多远都要在一起"", ""前所未见"",
        ""幻听"", ""爱在记忆中找你"", ""野孩子"", ""罗生门"", ""吴哥窟"", ""降温"", ""寂寞寂寞就好"", ""暗香"", ""尚好的青春"", ""宁夏"",
        ""Kiss Goodbye"", ""浪子回头"", ""分手快乐"", ""慢慢等"", ""勿忘心安"", ""生活因你而火热"", ""曹操"", ""说谎"", ""野蔷薇"", ""雅俗共赏"",
        ""心雨"", ""起风了"", ""不得不爱"", ""庐州月"", ""单身情歌"", ""何必在一起"", ""一荤一素"", ""生如夏花"", ""木偶人"", ""我的地盘"",
        ""三年二班"", ""四面楚歌"", ""会有那么一天"", ""我不难过"", ""现在我很幸福"", ""勇"", ""南方姑娘"", ""美丽世界的孤儿"", ""残酷月光"", ""分手总在下雨天"",
        ""这世界那么多人"", ""克卜勒"", ""披着羊皮的狼"", ""无赖"", ""魔鬼中的天使"", ""生生"", ""可惜我是水瓶座"", ""理想三旬"", ""绿洲"", ""新地球"",
        ""爱与诚"", ""手心的蔷薇"", ""流沙"", ""黑色幽默"", ""残酷游戏"", ""成都"", ""情非得已"", ""他一定很爱你"", ""贝加尔湖畔"", ""爸，我回来了"",
        ""黑色毛衣"", ""爱疯了"", ""左边"", ""风吹麦浪"", ""将军令"", ""吻得太逼真"", ""追光者"", ""最佳歌手"", ""旧街角"", ""耿耿于怀"",
        ""情歌"", ""大眠"", ""那些你很冒险的梦"", ""杀死那个石家庄人"", ""男孩"", ""丝路"", ""借口"", ""倔强"", ""清明雨上"", ""世界末日"",
        ""忍者"", ""没有理想的人不伤心"", ""精舞门"", ""天使"", ""反转地球"", ""扯"", ""手放开"", ""我会好好的"", ""不该"", ""下一个天亮"",
        ""像梦一样自由"", ""烂泥"", ""回到过去"", ""连名带姓"", ""喜剧之王"", ""偏爱"", ""一丝不挂"", ""落叶归根"", ""爱你"", ""烟火里的尘埃"",
        ""天真有邪"", ""毁人不倦"", ""方圆几里"", ""将故事写成我们"", ""好心分手"", ""涩"", ""无人知晓"", ""姗姗"", ""春泥"", ""反方向的钟"",
        ""舍不得"", ""我的光"", ""大哥"", ""心酸"", ""春风十里"", ""依兰爱情故事"", ""身骑白马"", ""思念是一种病"", ""你要的全拿走"", ""独家记忆"",
        ""爱得太迟"", ""第一次爱的人"", ""如果我变成回忆"", ""我很快乐"", ""爱不释手"", ""大舌头"", ""嘉宾"", ""想太多"", ""伤心1999"", ""半兽人"",
        ""骑士精神"", ""爸爸妈妈"", ""世界上不存在的歌"", ""你那么爱她"", ""再见"", ""怎样"", ""亲爱的"", ""野心"", ""不值得"", ""你听得到"",
        ""给我一个理由忘记"", ""国王与乞丐"", ""南山南"", ""一样的月光"", ""爱丫爱丫"", ""陌生人"", ""慕容雪"", ""我爱他"", ""拆东墙"", ""雨爱"",
        ""光年之外"", ""分裂"", ""异乡人"", ""麻雀"", ""曾经的你"", ""类似爱情"", ""情人"", ""蓝莲花"", ""必杀技"", ""干杯"",
        ""苦瓜"", ""夏天的风"", ""黑夜问白天"", ""半生出走"", ""不搭"", ""真实"", ""星晴"", ""表白"", ""梁山伯与茱丽叶"", ""词不达意"",
        ""别找我麻烦"", ""无名之辈"", ""十点半的地铁"", ""你给我听好"", ""望"", ""他不懂"", ""好朋友的祝福"", ""惊鸿一面"", ""千年泪"", ""米兰的小铁匠"",
        ""郭源潮"", ""Amen"", ""亲亲"", ""寂寞在唱歌"", ""天外来物"", ""会长大的幸福"", ""心墙"", ""我要你"", ""星空"", ""易燃易爆炸"",
        ""私奔"", ""夜空中最亮的心"", ""董小姐"", ""燕归巢"", ""天后"", ""我还想她"", ""Love Song"", ""理想"", ""匆匆"", ""当你"",
        ""宝贝"", ""达尔文"", ""如果有来生"", ""光明"", ""茉莉雨"", ""我们俩"", ""推开世界的门"", ""一个人"", ""猜不透"", ""呓语"",
        ""路过人间"", ""够钟"", ""烟花易冷"", ""你啊你啊"", ""离开地球表面"", ""幼稚完"", ""处处吻"", ""奔跑"", ""合久必婚"", ""眼泪成诗"",
        ""当爱在靠近"", ""我们说好的"", ""等我回家"", ""游乐场"", ""爱着爱着就永远"", ""街角的祝福"", ""你被写在我的歌里"", ""不将就"", ""乌鸦"", ""半岛铁盒"",
        ""乱舞春秋"", ""上海一九四三"", ""一眼万年"", ""你曾是少年"", ""算你狠"", ""暧昧"", ""我知道"", ""那么骄傲"", ""断桥残雪"", ""大鱼"",
        ""小永远"", ""蓝色土耳其"", ""缘分一道桥"", ""给十年后的我"", ""深呼吸"", ""错的人"", ""指望"", ""月亮之上"", ""鼓楼"", ""放生"",
        ""默"", ""步步"", ""作曲家"", ""来自天堂的魔鬼"", ""我的天空"", ""孤独患者"", ""谢谢你"", ""借"", ""会痛的石头"", ""天下"",
        ""对等关系"", ""心跳"", ""失忆的金鱼"", ""喜欢寂寞"", ""错过"", ""偷故事的人"", ""三人游"", ""像风一样自由"", ""被驯服的象"", ""皆可"",
        ""我是真的爱上你"", ""鱼"", ""彩虹"", ""蝴蝶泉边"", ""煎熬"", ""看我72变"", ""后来的我们"", ""信仰"", ""愿望"", ""外婆"",
        ""甜甜的"", ""需要人陪"", ""看月亮爬上来"", ""天亮了"", ""醉赤壁"", ""下个,路口,见"", ""听你说"", ""岁月神偷"", ""我很忙"", ""月光"",
        ""伤心的人别听慢歌"", ""好好说再见"", ""不醉不会"", ""遗失的心跳"", ""十万毫升泪水"", ""我们都被忘了"", ""戒烟"", ""香格里拉"", ""野子"", ""让"",
        ""异类"", ""Forever Young"", ""仰望"", ""七月上"", ""su san说"", ""上心"", ""爱久见人心"", ""你值得更好的"", ""怎么唱情歌"", ""你一定要幸福"",
        ""你不在"", ""毁人不倦"", ""我喜欢上你时的内心活动"", ""洛城"", ""逃亡"", ""笑忘书"", ""专属天使"", ""空白格"", ""七月七日晴"", ""一个人的行李"",
        ""龙的传人"", ""下沙"", ""寂寞的季节"", ""告诉我"", ""爱的主打歌"", ""阳光下的星星"", ""刚刚好"", ""沿海地带"", ""咕叽咕叽"", ""梯田"",
    ]

    with concurrent.futures.ThreadPoolExecutor(max_workers=100) as executor:
        executor.map(run_instance, song_list)
"
NTMDHHFx,Untitled,MeehoweCK,C++,Thursday 25th of May 2023 07:44:08 AM CDT,"#include <iostream>
#include <vector>

void fMaxMin(std::vector<int*> vec, int* max, int**& min, int** cMax, int& cMin)
{

}

int main()
{
	auto vec = std::vector<int>{ 1, 2, 1, 42, 2, 2, 42, 1, 1, 2, 1, 42 };
	auto vecP = std::vector<int*>();

	for (auto& item : vec)
	{
		vecP.push_back(&item);
	}

	int max, min, cMax, cMin;

	int* ptr_min = &min;
	int** ptr2_min = &ptr_min;

	int* ptr_cMax = &cMax;
	int** ptr2_cMax = &ptr_cMax;

	fMaxMin(vecP, &max, ptr2_min, ptr2_cMax, cMin);

	return 0;
}"
yJ3P6dLy,Nächste Zahl einer gegebenen Zahlreihe erraten…,goebelmasse,Lua,Thursday 25th of May 2023 07:36:02 AM CDT,"#!/usr/bin/env lua
------------------------------------------------------------------------
-- $Id: guessseq,v 1.3 2022/07/16 12:40:36 elias Exp $
-- Try to guess next number in a sequence
------------------------------------------------------------------------


function checkrow(row)
   -- Check if all numbers in a sequences are equal
   local first = row[1]
   for i = 2, #row do
      if row[i] ~= first then return false end
   end
   return true
end


function diffrow(row)
   -- Calculate difference sequence
   local next = {}
   for i = 1, #row-1 do
      next[#next+1] = row[i+1] - row[i]
   end
   return next
end


function copyrow(row)
   -- Helper function: copy sequence to a new sequence
   -- Convery everything to an interger
   local cpy = {}
   for k, v in ipairs(row) do
      cpy[k] = math.tointeger(v)
   end
   return cpy
end


function guessseq(row)
   -- Guess the next number in the sequence
   -- This works for all polynomial sequences
   local rows = {}
   row = copyrow(row)
   repeat
      rows[#rows+1] = copyrow(row)
      row = diffrow(row)
   until checkrow(rows[#rows])
   local power = #rows
   rows[power][#rows[power]+1] = rows[power][1]
   for i = power - 1, 1, -1 do
      rows[i][#rows[i]+1] = rows[i][#rows[i]] + rows[i+1][#rows[i+1]]
   end
   return rows[1], rows[1][#rows[1]]
end


function fromarg()
   -- Sequence is given as command line arguments
   local guess, num = guessseq(copyrow(arg))
   print(table.concat(guess, "" ""))
end


function interactive()
   -- Interactive mode
   while true do
      -- Give a prompt and read sequence
      io.output():write(""guessseq> "")
      local line = io.input():read(""l"")
      -- Exit on EOF
      if not line then break end
      -- Parse numbers in the line
      local numbers = {}
      for n in string.gmatch(line, ""(-?%d+)"") do
	 numbers[#numbers+1] = math.tointeger(n)
      end
      -- Give solution
      print(table.concat(guessseq(numbers), "" ""))
   end
end


-- Main program
if #arg > 0 then
   fromarg()
else
   interactive()
   print()
end


-- Code is prosa, not poetry."
