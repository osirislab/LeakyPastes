id,title,username,language,date,content
BPGM8r6z,dem23.n27,Korotkodul,Python,Saturday 17th of June 2023 06:15:01 PM CDT,"a = []
b = []
f = open('27_A.txt')
#f = open('tst.txt')
n = int(f.readline())
print(n)
for i in range(n):
    l = [int(i) for i in f.readline().split()]
    #print(type(l))
    a.append(l[0])
    b.append(l[1])
f.close()
print(a)
print(b)

mn = 10**40
for k in range(n):
    s = 0
    for i in range(n):
        s += abs(a[i] - a[k]) * b[i]
    mn = min(s,mn)
print(mn)
"
ZTCeKz4J,Untitled,pacho_the_python,Python,Saturday 17th of June 2023 05:47:50 PM CDT,"function theLift(data) {
    let tourists = Number(data[0])
    let lift = data[1].split(' ').map(Number)
    let counter = 0
    let maxSLots = 4
    while (tourists > 0) {
        if (counter === lift.length) {
            break
        }
        let freeSlots = maxSLots - lift[counter]
        if (freeSlots > 0) {
            if (tourists > freeSlots) {
                lift[counter] += freeSlots
                tourists -= freeSlots
            } else {
                lift[counter] += tourists
                tourists = 0
            }
        }
        counter += 1
    }
    if (lift[lift.length-1] < maxSLots && tourists === 0) {
        console.log(""The lift has empty spots!"")
        
    } else if (lift[lift.length-1] === maxSLots && tourists > 0) {
        console.log(`There isn't enough space! ${tourists} people in a queue!`)
        
    }
    console.log(lift.join(' '))
        
}

theLift([""20"", ""0 2 0""])"
pKJ28y0s,dem23.n26,Korotkodul,Python,Saturday 17th of June 2023 05:38:10 PM CDT,"f = open('26.txt')
n = int(f.readline())
lines = f.readlines()
#print(n)
#print(lines[:20])
a = [int(i) for i in lines]
print(type(a))
#print(a[:20])
a = sorted(a, reverse=1)


print(type(a))

i = 0
k = 1
lst = 0

mx = a[0]
while i + 1 < n:
    i += 1
    if abs(a[i] - a[lst]) >= 3:
        #print(""i = "",i)
        k += 1
        lst = i
        mx = a[i]
        #print(""mx = "", mx)
    
print(k,mx)
"
ZkZihPed,Untitled,pacho_the_python,Python,Saturday 17th of June 2023 05:31:46 PM CDT,"number_of_tourists = int(input())
wagons = input().split()

wagons = [int(i) for i in wagons]
max_free_places = 4
wagon_counter = 0
while number_of_tourists > 0:
    if wagon_counter == len(wagons):
        break
    free_slots = max_free_places - wagons[wagon_counter]
    if free_slots > 0:
        if number_of_tourists > free_slots:
            wagons[wagon_counter] += free_slots
            number_of_tourists -= free_slots
        else:
            wagons[wagon_counter] += number_of_tourists
            number_of_tourists = 0
    wagon_counter += 1

if wagons[-1] < max_free_places and number_of_tourists == 0:
    print(""The lift has empty spots!"")
elif wagons[-1] == max_free_places and number_of_tourists > 0:
    print(f""There isn't enough space! {number_of_tourists} people in a queue!"")
print(f""{' '.join(map(str, wagons))}"")
"
LZm2TiWd,Beep every X sec by ChatGPT,supercrazy50000,HTML,Saturday 17th of June 2023 05:21:56 PM CDT,"<!DOCTYPE html>
<html>
<head>
    <title>Riproduci suono ogni tot secondi</title>
    <link rel=""stylesheet"" href=""https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css"">
    <style>
        @font-face {
            font-family: 'Cakecafe';
            src: url('fonts/cakecafe.ttf') format('truetype');
        }

        body {
            background-color: #163352;
            transition: background-color 0.5s ease;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            flex-direction: column;
            font-family: 'Cakecafe', sans-serif;
            color: #ff69b4;
            position: relative;
        }

        h1 {
            color: #ff69b4;
            text-align: center;
            font-size: 48px;
            letter-spacing: 2px;
            transition: color 0.3s ease;
        }

        label {
            color: #ff69b4;
            text-align: center;
            font-size: 24px;
            margin-bottom: 10px;
            transition: color 0.3s ease;
        }

        input[type=""number""] {
            padding: 5px;
            font-size: 18px;
            text-align: center;
        }

        button {
            background-color: #ff69b4;
            color: #ffffff;
            margin: 10px 0;
            padding: 15px 30px;
            border-radius: 20px;
            font-size: 24px;
            transition: background-color 0.3s ease, color 0.3s ease;
        }

        .change-color {
            background-color: #ff69b4;
        }

        .change-color h1,
        .change-color label,
        .change-color .generated-by {
            color: #163352;
        }

        .change-color button {
            background-color: #163352;
            color: #ff69b4;
        }

        .change-color .container {
            border-color: #163352;
        }

        .change-color-button {
            position: absolute;
            top: 10px;
            right: 10px;
            background-color: transparent;
            color: #ff69b4;
            border: none;
            font-size: 24px;
            cursor: pointer;
            transition: background-color 0.3s ease, color 0.3s ease;
        }

        .change-color-button i {
            margin: 0 5px;
        }

        form {
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        .button-container {
            display: flex;
        }

        .container {
            border: 4px solid #ff69b4;
            padding: 30px;
            border-radius: 15px;
            margin: 20px;
            transition: border-color 0.3s ease;
        }

        .generated-by {
            color: #ff69b4;
            font-size: 18px;
            margin-top: 20px;
            transition: color 0.3s ease;
            font-family: Arial, sans-serif;
            position: absolute;
            bottom: 20px;
            left: 50%;
            transform: translateX(-50%);
        }
    </style>
</head>
<body>
    <div class=""container"">
        <h1>Riproduci suono ogni tot secondi</h1>
        
        <form id=""intervalForm"">
            <label for=""interval"" id=""intervalLabel"">Intervallo di tempo (in secondi):</label>
            <input type=""number"" id=""interval"" min=""1"" required>
            
            <div class=""button-container"">
                <button id=""playButton"" class=""play-button"" type=""submit"">Avvia</button>
            </div>
        </form>
    </div>
    
    <button id=""changeColorButton"" class=""change-color-button"">
        <i class=""fas fa-sun""></i>
        <i class=""fas fa-moon"" style=""display: none;""></i>
    </button>

    <p class=""generated-by"">Generated by ChatGPT</p>

    <script>
        var intervalID;
        var audio = new Audio('https://www.soundjay.com/buttons/beep-07a.mp3');
        var isPlaying = false;
        var isDarkMode = false;

        function playSound() {
            audio.play();
        }

        function startPlayback() {
            var interval = document.getElementById('interval').value;
            intervalID = setInterval(playSound, interval * 1000);
            playSound();
        }

        function stopPlayback() {
            clearInterval(intervalID);
        }

        function toggleDarkMode() {
            var body = document.body;
            var h1 = document.querySelector('h1');
            var label = document.querySelector('label');
            var buttons = document.querySelectorAll('button');
            var container = document.querySelector('.container');
            var generatedBy = document.querySelector('.generated-by');

            body.classList.toggle('change-color');
            h1.classList.toggle('change-color');
            label.classList.toggle('change-color');
            buttons.forEach(function (button) {
                button.classList.toggle('change-color');
            });
            container.classList.toggle('change-color');
            generatedBy.classList.toggle('change-color');

            isDarkMode = !isDarkMode;
            var sunIcon = document.querySelector('.fa-sun');
            var moonIcon = document.querySelector('.fa-moon');

            if (isDarkMode) {
                sunIcon.style.display = 'none';
                moonIcon.style.display = 'inline-block';
            } else {
                sunIcon.style.display = 'inline-block';
                moonIcon.style.display = 'none';
            }
        }

        document.getElementById('intervalForm').addEventListener('submit', function (e) {
            e.preventDefault();
            if (isPlaying) {
                stopPlayback();
                isPlaying = false;
                document.getElementById('playButton').innerText = 'Avvia';
            } else {
                startPlayback();
                isPlaying = true;
                document.getElementById('playButton').innerText = 'Stop';
            }
        });

        document.getElementById('changeColorButton').addEventListener('click', function () {
            toggleDarkMode();
        });
    </script>
</body>
</html>
"
iRts08n8,Python sqlite connector for @tarakasio,dkmarchuk,Python,Saturday 17th of June 2023 05:17:37 PM CDT,"import yaml
from pathlib import Path
import sqlite3
import logging
from datetime import datetime, timedelta
from typing import Optional, Union

from settings import ADMIN_ID, TEST_ID, FIELDS_SERVER_PAIRS
from loader import zone

with open('data/config.yml') as yaml_file:
    data = yaml.safe_load(yaml_file)
DATABASE = data.get('DATABASE', '')
LOG_FILE = data.get('LOG_FILE', '')
OVPN_PATH = data.get('OVPN_PATH', '')
if not DATABASE or not LOG_FILE or not OVPN_PATH:
    print('By db.py: \nWrong settings: config.yml')

logging.basicConfig(filename=LOG_FILE,
                    level=logging.INFO,
                    filemode='a',
                    datefmt='%Y-%m-%d, %H:%M',
                    format='%(asctime)s: %(name)s: %(levelname)s: %(message)s')
log = logging.getLogger('database')


class Users:
    """"""
    build in functions:

    with.. as..:
    users = Users()
    with users as db:
        ...

    in:
    if user_id in db...

    set item:
    db[user_id] = user_info  # firstname, username, file, date

    get item:
    user = db[user_id]

    """"""
    
    # protection from double connectors to database. sqlite3 module don't support 2 and more parallel connections
    def __new__(cls):
        if not hasattr(cls, 'sync_db_connector'):
            cls.sync_db_connector = super(Users, cls).__new__(cls)
        return cls.sync_db_connector

    def __init__(self):
        pathlib_file = Path(DATABASE)
        if pathlib_file.is_file():
            self.db = str(pathlib_file.resolve())
        else:
            self.db = None
        if self.db:
            self.conn = sqlite3.connect(self.db)
            self.cur = self.conn.cursor()
        else:
            self.conn = None
            self.cur = None
            print('Wrong initialize instance of Users class. Check args: DATABASE in settings.')
            log.error('Wrong initialize instance of Users class. Check args: DATABASE in settings.')

    def __contains__(self, user_id: int) -> bool:
        """"""
        Проверить пользователя в базе конструкцией вида: if user_id in db...
        """"""

        if self.is_user(user_id):
            return True
        else:
            return False

    def __getitem__(self, user_id: int) -> Optional[tuple]:
        """"""
        Вывести инфо о пользователе конструкцией: db[user_id]
        Return: id, самое новое время обновления файлов, сервер 1, сервер 2, лаптоп, имя, username, дата регистрации
        """"""

        if self.is_user(user_id):
            self.cur.execute(""SELECT id, login, firstname, username, register, server1, server2, laptop ""
                             ""FROM users WHERE id= ? "", (user_id, ))
            self.conn.commit()
            result = self.cur.fetchone()
            return result
        return None

    def __setitem__(self, user_id, user_info: Union[tuple, list]) -> None:
        # новый пользователь
        if not self.is_user(user_id) and len(user_info) == 4:
            self.cur.execute(""INSERT INTO users (id, firstname, username, register) VALUES (?, ?, ?, ?);"", user_info)
            self.conn.commit()
        # обновить файлы ovpn существующего пользователя
        elif len(user_info) == 7:
            self.cur.execute(""""""UPDATE users 
                                SET server1 = ?, server2 = ?, laptop = ?, login = ?, firstname = ?, username = ? 
                                WHERE id= ? """""", user_info)
            self.conn.commit()

    def __enter__(self):
        return self

    def __exit__(self, exc_type, exc_val, exc_tb):
        # Context manager callback forwarder function
        if not self.db:
            print('del Users instance. No connection to database. Check DATABASE file.')
        elif self.conn is not None and self.cur is not None:
            self.cur.close()
            self.cur = None
            self.conn.close()
            self.conn = None

    def __del__(self) -> None:
        # закрыть базу данных

        if not self.db:
            print('del Users instance. No connection to database. Check DATABASE file.')
        elif self.conn is not None and self.cur is not None:
            self.cur.close()
            self.cur = None
            self.conn.close()
            self.conn = None

    def is_user(self, user_id: int) -> bool:
        """"""
        Проверить наличие пользователя в базе данных
        """"""

        self.cur.execute(""SELECT 1 FROM users WHERE id = ? "", (user_id, ))
        self.conn.commit()
        result = self.cur.fetchone()

        if result is None:
            return False
        elif result == (1,):
            return True

    def delete_user(self, user_id: int) -> bool:
        """"""
        Удалить пользователя из базы данных, вывести True, если пользователя нет в бд,
        False-- если пользователь остался в бд
        """"""

        self.cur.execute(""DELETE FROM users WHERE id = ? "", (user_id, ))
        self.cur.execute(""SELECT 1 FROM users WHERE id = ? "", (user_id,))
        self.conn.commit()
        result = self.cur.fetchone()
        # пользователя нет в базе данных
        if result is None:
            return True
        # не получилось удалить пользователя из бд, пользователь присутствует
        elif result == (1,):
            return False

    def get_20_users(self) -> list:
        """"""
        Вывести 20 новых пользователей: username, имя, id, дата регистрации
        """"""

        self.cur.execute(""SELECT username, firstname, id, register FROM users ORDER BY register DESC LIMIT 20"")
        self.conn.commit()
        return self.cur.fetchall()

    def get_ids(self) -> list:
        """"""
        Получить пары кортежей: (id, name), (id, name)..
        """"""

        self.cur.execute(""SELECT id, firstname FROM users"")
        self.conn.commit()
        return [(i[0], i[1]) for i in self.cur.fetchall()]

    def users_count(self) -> int:
        """"""
        Количество всех пользователей на сервисе
        """"""

        self.cur.execute(""SELECT COUNT(id) FROM users"")
        self.conn.commit()
        return self.cur.fetchone()[0]

    def get_vpn_file(self, user_id: int, field: str, month: str = '', fs_check: bool = True) -> str:
        """"""
        Вывести забронированный файл, исходя из выбранного поля в базе данных и месяца (папке в ~/kot/ovpn),
        который точно есть в пуле ovpn файлов, либо вывести пустую строку.
        Если without_fs_check == True, просто вывести файл из поля без проверки его наличия.
        """"""

        sql = f""SELECT `{field}` FROM users WHERE id={user_id}""
        self.cur.execute(sql)
        self.conn.commit()
        file = self.cur.fetchone()
        file = file[0] if file else ''
        # вывести значение поля конкретного сервера из бд
        # проверить наличие файла в файловой системе
        if fs_check:
            if file and month in file and Path(file).is_file():
                return file
            # файл удалён или изменён путь к ovpn/ папке
            else:
                return ''
        # без проверки актуальности наличия файла в файловой системе
        else:
            # просто вывести найденное значение из поля
            if file:
                return file
            # файл удален или изменён путь к ovpn/ папке
            else:
                return ''

    def get_booked_files(self, field: str, month: str, ovpn_path: str = OVPN_PATH) -> int:
        """"""
        Вывести количество забронированных vpn- файлов по полю,
        где файл содержит: /Users/dim.., /home/dim.., содержит месяц и не содержит id тестового пользователя
        """"""

        sql = f""SELECT COUNT(*) FROM users "" \
              f""WHERE INSTR(`{field}`, '{ovpn_path}') AND instr(`{field}`, '{month}') > 0 "" \
              f""AND instr(`{field}`, {TEST_ID}) = 0""
        self.cur.execute(sql)
        self.conn.commit()
        result = self.cur.fetchone()
        if result is None:
            return 0
        elif type(result) == tuple:
            return result[0]

    def is_new_month_user(self, user_id: int) -> bool:
        """"""
        Вывести True, если пользователь зарегистрирован в текущем месяце, иначе False
        """"""

        sql = ""SELECT STRFTIME('%m', DATE('now', 'localtime')) == STRFTIME('%m', register) FROM users WHERE id = ?""
        self.cur.execute(sql, (user_id, ))
        self.conn.commit()

        return bool(self.cur.fetchone()[0])

    def update_vpn_field(self, user_id: int, firstname: str, username: str, field: str, file: str):
        """"""
        Обновить файл поля field и вывести True, если запись удалось сделать, иначе False
        """"""

        if self.is_user(user_id=user_id):
            _today = datetime.now(tz=zone).strftime('%Y-%m-%d')
            self.cur.execute(f""UPDATE users SET `{field}`='{file}', firstname='{firstname}', username='{username}', ""
                             f""login='{_today}' WHERE id={user_id}"")
            self.conn.commit()
        file_from_db = self.get_vpn_file(user_id=user_id, field=field)
        if file_from_db == file:
            return True
        else:
            return False


class Payments:
    """"""
    build in functions:

    with.. as..:
    payments = Payments()
    with payments as db:
        ...

    in:
    if payment_id in db...

    set item:
    db[payment_id] = payment_id, user_id, idempotency, amount, date

    get item:
    payment = db[payment_id]

    """"""

    # protection from double connectors to database. sqlite3 module don't support 2 and more parallel connections
    def __new__(cls):
        if not hasattr(cls, 'sync_db_connector'):
            cls.sync_db_connector = super(Payments, cls).__new__(cls)
        return cls.sync_db_connector

    def __init__(self):
        pathlib_file = Path(DATABASE)
        if pathlib_file.is_file():
            self.db = str(pathlib_file.resolve())
        else:
            self.db = None
        if self.db:
            self.conn = sqlite3.connect(self.db)
            self.cur = self.conn.cursor()
        else:
            self.conn = None
            self.cur = None
            print('Wrong initialize instance of Users class. Check args: DATABASE in settings.')
            log.error('Wrong initialize instance of Users class. Check args: DATABASE in settings.')

    def __contains__(self, payment_id: str):
        if self.is_payment(payment_id):
            return True
        else:
            return False

    def __getitem__(self, payment_id: str):
        if self.is_payment(payment_id):
            self.cur.execute(""SELECT id, user, amount, date, expire FROM payments WHERE id = ?"", (payment_id,))
            self.conn.commit()
            result = self.cur.fetchone()
            return result
        return None

    def __setitem__(self, payment_id: str, payment_info: tuple):
        if not self.is_payment(payment_id) and len(payment_info) == 5:
            self.cur.execute(""INSERT INTO payments (id, user, amount, date, expire) VALUES (?,?,?,?,?)"", payment_info)
            self.conn.commit()
            result = self.cur.fetchone()
            return result

    def __enter__(self):
        return self

    def __exit__(self, exc_type, exc_val, exc_tb):
        # Context manager callback forwarder function
        if not self.db:
            print('del Users instance. No connection to database. Check DATABASE file.')
        elif self.conn is not None and self.cur is not None:
            self.cur.close()
            self.cur = None
            self.conn.close()
            self.conn = None

    def __del__(self):
        # del function callback forwarder function
        if not self.db:
            print('del Users instance. No connection to database. Check DATABASE file.')
        elif self.conn is not None and self.cur is not None:
            self.cur.close()
            self.cur = None
            self.conn.close()
            self.conn = None

    def is_payment(self, payment_id: str):
        self.cur.execute(""SELECT 1 FROM payments WHERE id = ?"", (payment_id,))
        self.conn.commit()
        result = self.cur.fetchone()

        if result is None:
            return False
        elif result == (1,):
            return True

    def is_user_payed(self, user_id: int) -> bool:
        self.cur.execute(""SELECT 1 FROM payments WHERE user = ? AND STRFTIME('%m', `date`) = STRFTIME('%m', 'now')"",
                         (user_id,))
        self.conn.commit()
        result = self.cur.fetchone()

        if result is None:
            return False
        elif result == (1,):
            return True

    def get_expire(self, user_id: int) -> Optional[tuple]:
        """"""
        Вывести:
        expire_date: str format '%Y-%m-%d', 01 число следующего месяца срока истечения пользования файлом,
        prev_expire_month: крайний месяц бронирования файла, для поиска папки- названия месяца в файловой системе,
        actual_long: format: bool, является ли последний платеж бронированием 3- 6 месячных профилей.
        """"""

        sql = """"""
                SELECT `date`, expire, STRFTIME('%m', DATE) != STRFTIME('%m', DATE(expire, '-1 DAY')) 
                FROM payments WHERE user = ? AND DATE() < DATE(expire) 
                ORDER BY DATE(`date`, 'start of month') DESC, amount DESC LIMIT 1;
                """"""
        self.cur.execute(sql, (user_id,))
        self.conn.commit()
        result = self.cur.fetchone()
        if result is None:
            return None
        else:
            payment_date, expire_date, actual_long = result
            prev_expire_month = (datetime.strptime(expire_date, '%Y-%m-%d') - timedelta(days=1)).strftime('%B').lower()
            return payment_date, expire_date, prev_expire_month, actual_long

    def delete_payments(self, user_id: int):
        """"""
        Удалить пользователя из базы данных,
        вывести True, если пользователя нет в бд,
        False-- если пользователь остался в бд
        """"""

        self.cur.execute(""DELETE FROM payments WHERE user = ?"", (user_id,))
        self.conn.commit()
        self.cur.execute(""SELECT 1 FROM payments WHERE user = ?"", (user_id,))
        self.conn.commit()
        result = self.cur.fetchone()
        # платежей нет в базе данных
        if result is None:
            return True
        # не получилось удалить платеж из бд, платеж присутствует
        elif result == (1,):
            return False


def register_user(user_id: int, firstname: str, username: str) -> bool:
    """"""
    Записать в базу данных id, имя, username, дату регистрации.
    Возвратить True, если пользователь в базе, False-- если пользователя не удалось добавить в бд.
    """"""

    user_info = (user_id, firstname, username, datetime.now(tz=zone).strftime('%Y-%m-%d'))
    with Users() as users_db:
        users_db[user_id] = user_info
        if users_db.is_user(user_id=user_id):
            return True
        else:
            return False


def get_ovpn_file(user_id: int, first_name: str, user_name: str, server: str, for_laptop: bool = False) -> str:
    """"""
    Проверить оплату пользователя, выдать забронированный vpn- файл нужного сервера из бд или найти новый файл,
    записать изменения (бронирование нового файла, привязанного в бд к серверу) в базу данных.
    Если for_laptop == True, поиск файла в базе данных и обновление файла происходит только по полю 'laptop'.
    """"""

    with Payments() as payments_db:
        actual_expired = payments_db.get_expire(user_id=user_id)
    if actual_expired is None:
        error = 'No payment by this user id.'
        print(error)
        log.error(error)
        return ''
    with Users() as users_db:
        _, _, actual_ovpn_month, _ = actual_expired
        marker_booked_files = 'booked_'
        ovpn_dir = Path(OVPN_PATH, server, actual_ovpn_month)
        if for_laptop:
            # забронированный vpn- файл в поле laptop из базы данных
            file_from_db = users_db.get_vpn_file(user_id=user_id, field='laptop', month=actual_ovpn_month)
            file = file_from_db if server in file_from_db else ''
            # проверить бронь по началу имени arg: marker_booked_files и имени сервера
            if not file:
                server_file = users_db.get_vpn_file(user_id=user_id, field=FIELDS_SERVER_PAIRS[server],
                                                    month=actual_ovpn_month)
                booked_ovpn = [str(i) for i in ovpn_dir.iterdir()
                               if i.is_file() and i.suffix == '.ovpn' and i.name.startswith(marker_booked_files)
                               and str(user_id) in i.name and str(i) != server_file]
                if booked_ovpn:
                    # найден файл в файловой системе, который был забронирован на telegram id, но выбыл из бд,
                    # т.к. там хранится только одна запись. Найден путем перебора папки месяца и по id и marker_booked..
                    file = booked_ovpn[0]
        else:
            # забронированный vpn- файл из базы данных поля определенного сервера
            file = users_db.get_vpn_file(user_id=user_id, field=FIELDS_SERVER_PAIRS[server], month=actual_ovpn_month)
        # Найден забронированный файл в бд, выдать его
        if file:
            log.info(f'@{user_name}, {first_name}, {user_id}: get vpn file: {file}.')
            return file
        # B базе данных нет забронированного файла, нужно выдать любой свободный впн- файл указанного сервера
        # и записать в базу этот vpn- файл
        else:
            free_ovpn = [str(i) for i in ovpn_dir.iterdir()
                         if i.is_file() and i.suffix == '.ovpn' and not i.name.startswith(marker_booked_files)]
            # Найдены свободные файлы .ovpn, выдать один файл пользователю
            if free_ovpn:
                free_ovpn_file = Path(free_ovpn.pop())
                new_name = marker_booked_files + str(user_id) + '_' + free_ovpn_file.name
                new_file = Path(ovpn_dir, new_name)
                free_ovpn_file.rename(new_file)
                if new_file.is_file():
                    file = str(new_file)
                    # для файла ноутбука обновить новым файлом сервера свое поле laptop
                    if for_laptop:
                        users_db.update_vpn_field(user_id=user_id, firstname=first_name, username=user_name,
                                                  field='laptop', file=file)
                    # либо обновить поле новым значением vpn- файла
                    else:
                        users_db.update_vpn_field(user_id=user_id, firstname=first_name, username=user_name,
                                                  field=FIELDS_SERVER_PAIRS[server], file=file)
                    log.info(f'@{user_name}, {first_name}, {user_id}: get vpn file: {file}.')
                    return file
                else:
                    error = 'Wrong script code. Check def db.get_ovpn_file.'
                    print(error)
                    log.error(error)
                    return ''
            # свободные vpn файлы закончились в папке
            else:
                # свободных .ovpn файлов нет. Отдать None для информирования об отсутствии vpn- файлов
                log.warning(f'@{user_name}, {first_name}, {user_id}: wrong get {server} server vpn file. '
                            f'Cant find free ovpn files in {free_ovpn} dir.')
                return ''


def users():
    """"""
    Вывести текстом 20 новых пользователей: username, имя, id, дату регистрации
    и общее количество пользователей в базе данных.
    """"""

    with Users() as users_db:
        clients = users_db.get_20_users()
        users_count = users_db.users_count()
    text = f'All users: {users_count}.\nLast 20 are: \n'
    for i in clients:
        _date = datetime.strptime(i[3], '%Y-%m-%d').strftime('%d %B')
        if i[0] != 'None' and i[0] is not None:
            text += f'@{i[0]}, '
        if i[1] != 'None' and i[1] is not None:
            text += f'{i[1]}, '
        text += f'{i[2]}: {_date}\n'
    return text


def ovpn(servers: tuple = FIELDS_SERVER_PAIRS.keys()) -> str:
    """"""
    Вывести все файлы серверов, забронированных на все месяцы
    """"""

    statistic = ''
    with Users() as users_db:
        for server in servers:
            if server != 'laptop':
                statistic += f'server: {server}\n'
                first_day_current_month = datetime.now(tz=zone)
                for month_int in range(first_day_current_month.month, 13):
                    each_first_day = first_day_current_month.replace(month=month_int)
                    month = each_first_day.strftime('%B').lower()
                    _all = len([i for i in Path(OVPN_PATH, server, month).iterdir() if i.is_file()
                               and i.suffix == '.ovpn'])
                    booked = users_db.get_booked_files(field=FIELDS_SERVER_PAIRS[server], month=month)
                    statistic += f'  {month}: booked {booked} from {_all}\n'
                statistic += '\n'
    return statistic


def get_log(lines=25):
    """"""
    Вывести лог 25 заключительных строк логгера
    """"""

    with open(LOG_FILE, 'rb') as f:
        total_lines_wanted = lines
        block_size = 1024
        f.seek(0, 2)
        block_end_byte = f.tell()
        lines_to_go = total_lines_wanted
        block_number = -1
        blocks = []
        while lines_to_go > 0 and block_end_byte > 0:
            if block_end_byte - block_size > 0:
                f.seek(block_number * block_size, 2)
                blocks.append(f.read(block_size))
            else:
                f.seek(0, 0)
                blocks.append(f.read(block_end_byte))
            lines_found = blocks[-1].count(b'\n')
            lines_to_go -= lines_found
            block_end_byte -= block_size
            block_number -= 1
        all_read_text = b''.join(reversed(blocks))
        text_log = b'\n'.join(all_read_text.splitlines()[-total_lines_wanted:]).decode('utf-8')

    return text_log


def get_ids():

    with Users() as users_db:
        return users_db.get_ids()


def write_payment(payment_id: str, user: int, amount: int, payment_date: str, expire_date: str) -> None:

    with Payments() as payments_db:
        payments_db[payment_id] = (payment_id, user, amount, payment_date, expire_date)


def is_user_payed(user_id: int) -> bool:

    with Payments() as payment:
        return payment.is_user_payed(user_id=user_id)


def get_payments_expire(user_id: int) -> Optional[tuple]:
    """"""
    Вывести платеж месяца с проведенной максимальной суммой
    payment_date: str format '%Y-%m-%d', дата платежа,
    expire_date: str format '%Y-%m-%d', 01 число следующего месяца срока истечения пользования файлом,
    prev_expire_month: крайний месяц бронирования файла, для поиска папки- названия месяца в файловой системе,
    actual_long: format: bool, является ли последний платеж бронированием 3- 6 месячных профилей.
    """"""

    with Payments() as payments_db:
        return payments_db.get_expire(user_id=user_id)


def is_new_month_user(user_id: int) -> bool:
    with Users() as users_db:
        return users_db.is_new_month_user(user_id=user_id)


def delete_test_user(user_id: int = TEST_ID) -> bool:
    with Users() as users_db:
        is_user_deleted = users_db.delete_user(user_id=user_id)
    with Payments() as payments_db:
        is_user_payments_deleted = payments_db.delete_payments(user_id=user_id)
    return is_user_deleted and is_user_payments_deleted


if __name__ == '__main__':

    admin = ADMIN_ID
    test_dim = 6128180386
    dim_info = (test_dim, 'Test Dim', 'marchdim_test')
    today = datetime.now(tz=zone)
    today_str = today.strftime('%Y-%m-%d')
    import uuid
    """"""
    with Users() as db:
        ams = '/Users/dim/kot/ovpn/amsterdam/may/booked_5435208870_20677.ovpn'
        mos = '/Users/dim/kot/ovpn/moscow/may/booked_5435208870_10.ovpn'
        today_strftime = today.strftime('%Y-%m-%d')
        db[test_dim] = test_dim, 'Dim', 'marchdim_test', today_strftime
        print('db[test_dim]:', db[test_dim])
        print('test_dim in db:', test_dim in db)
        print('777 in db:', 777 in db)
        print('db.is_new_month_user(user_id):', db.is_new_month_user(user_id=test_dim))
        # print('db.get_vpn_file(user_id, field, month):', db.get_vpn_file(user_id=test_dim,
        #                                                                  field=FIELDS_SERVER_PAIRS['amsterdam'],
        #                                                                  month='october'))
        print('db.get_vpn_file(user_id, field):', db.get_vpn_file(user_id=test_dim,
                                                                  field='laptop',
                                                                  month='october'))
        print('db.update_vpn_field(user_id, firstname, username, field, file): ',
              db.update_vpn_field(user_id=test_dim, firstname='Dim test', username='march_test',
                                  field=FIELDS_SERVER_PAIRS['amsterdam'], file=ams))
        print('db.get_booked_files(field):', db.get_booked_files(field=FIELDS_SERVER_PAIRS['amsterdam']))
        print('db[test_dim]:', db[test_dim])
    """"""

    payment_info_0 = (str(uuid.uuid4()), test_dim, 1, today_str,
                      today.replace(month=today.month + 1, day=1).strftime('%Y-%m-%d'))
    payment_info_1 = (str(uuid.uuid4()), test_dim, 100, today_str,
                      today.replace(month=today.month + 1, day=1).strftime('%Y-%m-%d'))
    payment_info_3 = (str(uuid.uuid4()), test_dim, 500, today_str,
                      today.replace(month=today.month + 3, day=1).strftime('%Y-%m-%d'))
    payment_info_6 = (str(uuid.uuid4()), test_dim, 900, today_str,
                      today.replace(month=today.month + 6, day=1).strftime('%Y-%m-%d'))

    # register_user(test_dim, 'Tech Support', 'kotvpn')

    # write_payment(*payment_info_0)
    # write_payment(*payment_info_1)
    # write_payment(*payment_info_3)
    # write_payment(*payment_info_6)

    # print(get_ovpn_file(*dim_info, server='amsterdam', for_laptop=True))

    # print('delete_test_user():', delete_test_user())
    # print('users():', users())
    # print('ovpn():', ovpn(servers=tuple(FIELDS_SERVER_PAIRS.keys())))

    """"""
    with Payments() as payments:
        expired = payments.get_expire(user_id=test_dim)
    if expired is None:
        print('Not actual expired date.')
    else:
        payment_date, actual_expired_date, ovpn_month, long = expired
        print(f""payment_date: {payment_date}\nexpired date: {actual_expired_date}\n""
              f""actual ovpn month: {ovpn_month}\nactual long: {bool(long)}"")
    """"""
    # random = str(uuid.uuid4())
    # is_payment = payments.is_payment(payment_id=payment_id)
    # is_payed = payments.is_user_payed(user_id=test_dim)
    # print(f""is_payment: {is_payment} \nis_payed: {is_payed}"")
    # print(payments.get_actual_month_to_expire_date(user_id=test_dim))
    # print(ovpn())
    # print(get_log())
    # print(get_ids())
    # print(users())

    # print(delete_test_user())
    # print(is_new_month_user(user_id=test_dim))
    # with Payments() as payments_db:
    #     actual_expired = payments_db.get_expire(user_id=test_dim)
    # print(actual_expired)"
s5m09bc9,Modify Android GSI system Image,metalx1000,Bash,Saturday 17th of June 2023 04:55:16 PM CDT,"#modify Android GSI system Image
# System image option
## - https://github.com/phhusson/treble_experimentations/wiki/Generic-System-Image-%28GSI%29-list
## - https://sourceforge.net/projects/andyyan-gsi/files/lineage-20-light/

#resize the image
fallocate -l 3500M system.img
resize2fs system.img 3500M

#mount the image
mkdir mnt
sudo mount system.img mnt

#THIS IS WHERE YOU MAKE CHANGES TO THE SYSTEM

#unmount image
sudo umount mnt

#now resize the image by removing empty space
e2fsck -yf system.img
resize2fs -M system.img
e2fsck -yf system.img

#now install it
adb reboot bootloader

wget https://dl.google.com/developers/android/qt/images/gsi/vbmeta.img
fastboot --disable-verity --disable-verification flash vbmeta vbmeta.img
fastboot reboot fastboot

fastboot delete-logical-partition product
fastboot delete-logical-partition product_a
fastboot delete-logical-partition product_b
fastboot erase userdata
fastboot erase cache
fastboot flash system system.img
fastboot -w
fastboot reboot
"
H7L0Y2n6,dem23.n25_NoneType - WHY???,Korotkodul,Python,Saturday 17th of June 2023 04:52:07 PM CDT,"f = open('26.txt')
n = int(f.readline())
lines = f.readlines()
#print(n)
#print(lines[:20])
a = [int(i) for i in lines]
print(type(a))
#print(a[:20])
a = a[::-1]
print(type(a))

i = 0
k = 1
lst = 0

mx = a[0]
while i + 1 < n:
    i += 1
    if abs(a[i] - a[lst]) >= 3:
        k += 1
        lst = i
        mx = a[i]
    
print(k,mx)
"
Ajk7iAUK,dem23.n24,Korotkodul,Python,Saturday 17th of June 2023 04:49:44 PM CDT,"import sys

f = open('24.txt')
s = f.readline()
f.close()

def d(x,y):
    global s
    s = s.replace(x,y)
x = 'CDF'
y = 'AO'
print(s[:20])
for i in x:
    d(i, 'X')
    print(s[:20])

for i in y:
    d(i,'Y')
    print(s[:20])
    

L = 1
R = len(s)
while L + 1 < R:
    M = (L + R) // 2
    if 'XY' * M in s:
        L = M
    else:
        R = M
print(L)
"
CrtdCYQ4,Untitled,Amakesh,XML,Saturday 17th of June 2023 04:43:41 PM CDT,"/interface bridge
add name=bridge1
add name=bridge2
/interface ethernet
set [ find default-name=combo1 ] advertise=\
    10M-full,100M-full,1000M-half,1000M-full,10000M-full,2500M-full,5000M-full
/interface wireguard
add listen-port=13231 mtu=1420 name=wireguard1
/interface list
add comment=defconf name=WAN
add comment=defconf name=LAN
/interface lte apn
set [ find default=yes ] ip-type=ipv4 use-network-apn=no
/interface wireless security-profiles
set [ find default=yes ] supplicant-identity=MikroTik
/ip pool
add name=pool1 ranges=192.168.88.10-192.168.88.254
add name=pool2 ranges=192.168.68.10-192.168.68.254
/ip dhcp-server
add address-pool=pool1 interface=bridge1 name=server1
add address-pool=pool2 interface=bridge2 name=server2
/port
set 0 name=serial0
set 1 name=serial1
/routing ospf instance
add disabled=yes name=default-v2
/routing ospf area
add disabled=yes instance=default-v2 name=backbone-v2
/routing table
add disabled=no fib name=vpn
/interface bridge port
add bridge=bridge1 ingress-filtering=no interface=ether1
add bridge=bridge2 ingress-filtering=no interface=ether2
add bridge=bridge1 ingress-filtering=no interface=ether3
add bridge=bridge1 interface=ether4
add bridge=bridge1 interface=ether5
add bridge=bridge1 interface=ether6
add bridge=bridge1 interface=ether7
/ip settings
set max-neighbor-entries=8192
/ipv6 settings
set disable-ipv6=yes max-neighbor-entries=8192
/interface list member
add comment=defconf interface=combo1 list=WAN
add interface=bridge1 list=LAN
add interface=wireguard1 list=WAN
add interface=bridge2 list=LAN
/interface ovpn-server server
set auth=sha1,md5
/interface wireguard peers
add allowed-address=0.0.0.0/0 endpoint-address=pl209.nordvpn.com endpoint-port=\
    51820 interface=wireguard1 persistent-keepalive=25s public-key=\
    ""kjAOzXQRVGpmQdqE2zPsITH8QHmFK83AAPktqWed9wM=""
/ip address
add address=192.168.88.1/24 comment=defconf interface=bridge1 network=\
    192.168.88.0
add address=192.168.68.1/24 interface=bridge2 network=192.168.68.0
/ip dhcp-client
add interface=combo1 use-peer-dns=no use-peer-ntp=no
/ip dhcp-server network
add address=192.168.68.0/24 dns-server=192.168.68.1 gateway=192.168.68.1
add address=192.168.88.0/24 comment=defconf dns-server=192.168.88.1 gateway=\
    192.168.88.1
/ip dns
set allow-remote-requests=yes servers=94.140.14.14,94.140.15.15 use-doh-server=\
    https://dns.adguard.com/dns-query
/ip dns static
add address=192.168.88.1 disabled=yes name=router.lan
add address=94.140.14.14 name=dns.adguard.com
add address=94.140.15.15 name=dns.adguard.com
/ip firewall filter
add action=accept chain=input comment=\
    ""defconf: accept established,related,untracked"" connection-state=\
    established,related,untracked log=yes
add action=drop chain=input comment=""defconf: drop invalid"" connection-state=\
    invalid log=yes
add action=accept chain=input comment=""defconf: accept ICMP"" log=yes protocol=\
    icmp
add action=accept chain=input comment=\
    ""defconf: accept to local loopback (for CAPsMAN)"" dst-address=127.0.0.1 log=\
    yes
add action=fasttrack-connection chain=forward comment=""defconf: fasttrack"" \
    connection-state=established,related hw-offload=yes log=yes
add action=accept chain=forward connection-state=established,related,untracked
add action=drop chain=forward comment=""defconf: drop invalid"" connection-state=\
    invalid
add action=drop chain=forward comment=""drop all from WAN not DSTNATed"" \
    connection-nat-state=!dstnat connection-state=new in-interface-list=WAN log=\
    yes
add action=accept chain=forward log=yes out-interface=wireguard1 src-address=\
    192.168.88.0/24
add action=accept chain=forward log=yes out-interface=bridge2 src-address=\
    192.168.68.0/24
/ip firewall nat
add action=masquerade chain=srcnat log=yes log-prefix=wg out-interface=\
    wireguard1
add action=masquerade chain=srcnat disabled=yes out-interface-list=WAN
add action=masquerade chain=srcnat log=yes log-prefix=no_vpn out-interface=\
    bridge2
/ip ipsec policy
set 0 disabled=yes
/ip route
add disabled=no distance=1 dst-address=0.0.0.0/0 gateway=wireguard1 pref-src=\
    0.0.0.0 routing-table=vpn scope=30 suppress-hw-offload=no target-scope=10
/ip upnp
set enabled=yes
/routing rule
add action=lookup disabled=yes dst-address=192.168.88.0/24 src-address=\
    192.168.88.0/24 table=main
add action=lookup disabled=no src-address=192.168.88.0/24 table=vpn
add action=lookup disabled=no src-address=192.168.68.0/24 table=main"
LTfR0tbm,webinar-python-exam-review-2023-06-17,jspill,Python,Saturday 17th of June 2023 04:42:49 PM CDT,"# Exam Review 2023 June 17

# Do those LABS
# Ch 2-14... all Labs!
# Ch 21-32 just ADDITIONAL LABS, but important practice!
# Prac Tests, Ch 33 and 34
# Use Submit Mode and get them to 100%!!! And PAY ATTENTION to the unit tests!

# Comp 1: Basic syntax and knowledge: operators, data types, etc
# Comp 2: Control Flow
# Comp 3: Modules and Files

# Watch your string input and output
# input...
#  myInput = input().strip()
# output/print()
# print() # same as print(end=""\n"")
# print(""Something I'm printing."", end="" "") # if we override end...
# # we gotta put the expected \n back
# print()
# print(""Clean new line!"")

# Comp 1: Basic syntax and knowledge: operators, data types, etc
# Common Data Types
# int
# float
# bool # True, False... print(x > 5)
# str # """"
# list # [ ]
# dict # {key: value}
# set # { } all unique values/no duplicates, no order... no indices, no sorting, no slicing
# tuples # ( ) immutable, Python sees any x,y,z as (x,y,z) --> return a, b --> return (a, b)
# range object # range()... range(0, 5) --> [0, 1, 2, 3, 4]

# Operators
# = # assignment
# == # equality... ASKING if these are equal
# +
# -
# *
# /
# % # modulo... gives an int remainder, ""How many whole things didn't fit (since the last even division)?""
# // # the last even division
# <
# >
# <=
# >=
# += # x += 1 --> x = x+1
# -= # x -= 1 --> x = x-1
# ** # raise to power... pow() and math.pow()
# !=
# # keywords that we use like operators
# in # if x in myList
# not # if not x in myList
# and
# or # any one True condition makes the combined condition True... limit OR to 2 conditions

# Comp 2
# Control Flow! The HOW stuff
# IF statements... if, if/else, if/elif, if/elif/else...
# LOOPS
# WHILE - an IF that repeats
# FOR - looping over a container, or a known number of times... hence range()
# # Check out my For Loops webinar in The Gotchas
# for ___ in __someContainer__:
# for item in myList:
# for char in myString:
# for key in myDict: # myDict[key] gets the value for that key
# for key, value in myDict.items()
# for num in range(0, 12):
# for i, item in enumerate(myList):
# for i in range(len(myList)): # myList[i]

# FUNCTION
# defining/writing vs calling
# a function has ONE particular job
# parameter is a special var for the function... not like a ""regular"" variable
# parameters vs arguments
# return vs print()/output... or something else?

# def someFunction(x, y):
#     return x // y
#
# if __name__ == ""__main__"": # is this script the one that's being run from?
#     # we're solving THIS question
#     myInput = int(input())
#     myOther = int(input())
#     myNum = someFunction(myInput, myOther)
#     print(myNum)

# See ""tasks"" in the last section of Ch 10, 11, 13, 14 for function writing practice
# # CodingBat also has good function-based Python questions:
# # https://codingbat.com/python

# BUILT-IN FUNCTIONS
# input()
# print()
# range()
# len()
# min()
# max()
# sum()
# enumerate()
# round() # cousins math.ceil() and math.floor()
# type()
# sorted()
# reversed()
# pow() # compare to ** or math.pow()
# abs() # compare to math.fabs()
# int()
# float()
# list()
# tuple()
# set()
# dict()
# open()
# help() # help(str), help(str.isspace)
# dir() # print(dir(str))

# STRINGS
# be able to slice
# myStr = ""abcdef""
# revStr = myStr[::-1]
# print(revStr)

# KNOW YOUR WHITESPACE
# "" ""
# a lot of spaces in Unicode
# ""\n""
# ""\t""
# ""\r""

# STRING METHODS
# myStr.format() # ""stuff I want to put together {:.2f}"".format(var)
# myStr.strip()
# myStr.split() # returns a list of smaller strings
# myStr.join() # "" "".join(listOfStrings)
# myStr.replace(subStr, newStr) # ""remove""... myStr = myStr.replace(subStr, """")
# myStr.find(subStr) # return int index, or -1
# myStr.count(subStr) # return int number of occurrences
# case: myStr.lower(), myStr.upper(), myStr.title(), myStr.capitalize()
# is/Boolean: myStr.isupper(), .islower(), .isspace(), .isalpha(), .isnumeric(), isdigit(), isalnum()
# myStr.startswith(subStr), myStr.endswith(subStr)

# LISTS
# be able to use indices, slice

# LIST METHODS
# # +
# myList.append(item)
# myList.insert(i, item)
# myList.extend(anotherList)
# # -
# myList.pop(i) # by index, or last
# myList.remove(item) # pop by index, remove by value
# myList.clear()
# # other
# myList.count(item)
# myList.sort()
# myList.reverse()
# myList.copy()
# myList.index(item)

# DICT
# use the key like an index []
# myDict[key] # retrieve value for that key
# myDict[key] = value # assign value to key
# myDict.keys()
# myDict.values()
# myDict.items()

# MODULES
# math and csv

# MATH MODULE
# import math # FULL IMPORT
# math.factorial(x)
# math.ceil(x.yz)
# math.floor(x.yz)
# math.pow(x, y)
# math.sqrt(x)
# math.fabs(x) # built-in abs()
# math.pi
# math.e
#
# # PARTIAL IMPORT
# from math import factorial # --> factorial(x)
# from math import ceil, sqrt # --> ceil(x.yz), sqrt(x)
# from math import * --> floor(x.yz)
#
# # ALIAS IMPORT
# import math as m # --> m.floor(x.yz)


# FILES

# READ MODE
with open(""test.txt"", ""r"") as f:
    # f.read() # returns entire file as one string
    # f.readline # goes one line ahead and returns that line
    contents = f.readlines() # list of strings... each line in the file is one string
# print(contents)
# for line in contents:
#     line = line.strip()
#     print(line)

# CSV Module

# BTW, you can use mockaroo.com to download CSV files of fake data like I'm using here

# import csv
# with open(""mock_data.csv"", ""r"") as f1:
#     contents = list(csv.reader(f1)) # csv.reader(f1, delimiter=""\t"")
# # print(contents)
# for row in contents[0:20]:
#     print(row)


# WRITE MODE
# with open(""output_data20.csv"", ""w"") as f2:
#     for row in contents:
#         # only write into this new file if email ends in .edu
#         # email is position 3
#         if row[3].endswith("".edu""):
#             # write a str to file
#             f2.write("","".join(row) + ""\n"")

# APPEND MODE
# with open(""append_to_this.txt"", ""r"") as f3:
#     contents = f3.readlines()
# print(contents) # ['Frodo\n', 'Sam\n', 'Merry\n'] # <-- I like to check and see if the last line has a line return
# with open(""append_to_this.txt"", ""a"") as f3:
#     f3.write(""Pippin\n"")


# Question on Lab 6.15
# Since you haven't learned many string methods by Ch 6, you'd normally be doing this one with a for loop containing several if branches to sub out the characters.
# But knowing the str replace() method, and that it returns a string itself, you could approach this one as a series of calls to replace()...

# user_pswd = input()
#
# user_pswd = user_pswd.replace(""i"", ""1"").replace(""a"", ""@"").replace(""m"", ""M"").replace(""B"",""8"").replace(""s"", ""$"")
# user_pswd += ""!""
# print(user_pswd)

# You could, as another student noted, approach this one my making a dictionary of the characters and their substitutions
# As with many problems, there are a variety of ways to approach this one!"
0Dmj50cN,dem23.n23,Korotkodul,Python,Saturday 17th of June 2023 04:35:55 PM CDT,"def f(a,b):
    if a == b:
        return 1
    if a > b:
        return 0
    return f(a + 1, b) + f(a * 2, b)

A = f(1,10) * f(10,35)
B = f(1,10) * f(10,17) * f(17,35)
C = A - B
print(C)
"
9Cbjmq3C,Untitled,stupid_pro,Python,Saturday 17th of June 2023 04:30:11 PM CDT,"def moves(h):
    return h + 3, h * 2


def game(h):
    if h >= 33:
        return 'W'
    if any(game(m) == 'W' for m in moves(h)):
        return 'P1'
    if all(game(m) == 'P1' for m in moves(h)):
        return 'B1'
    if any(game(m) == 'B1' for m in moves(h)):
        return 'P2'
    if all(game(m) == 'P1' or game(m) == 'P2' for m in moves(h)):
        return 'B2'


for i in range(1, 33):
    if game(i) == 'P1':
        print(i, game(i), end=' ')
        print()
# print('\n\\')
#
for i in range(1, 33):
    if game(i) == 'B1':
        print(i, game(i))

print()

for i in range(1, 33):
    if game(i) == 'P2':
        print(i, game(i))

print()

for i in range(1, 33):
    if game(i) == 'B2':
        print(i, game(i))

def moves(h):
    return h + 4, h * 3

def game(h):
    if h >= 70:
        return 'W'
    if any(game(m) == 'W' for m in moves(h)):
        return 'P1'
    if all(game(m) == 'P1' for m in moves(h)):
        return 'B1'
    if any(game(m) == 'B1' for m in moves(h)):
        return 'P2'
    if all(game(m) == 'P1' or game(m) == 'P2' for m in moves(h)):
        return 'B2'

for i in range(1, 70):
    if game(i) == 'B2':
        print(i, game(i))

def moves(h):
    return h + 4, h * 2


def game(h):
    if h >= 35:
        return 'W'
    if any(game(m) == 'W' for m in moves(h)):
        return 'P1'
    if all(game(m) == 'P1' for m in moves(h)):
        return 'B1'
    if any(game(m) == 'B1' for m in moves(h)):
        return 'P2'
    if all(game(m) == 'P2' or game(m) == 'P1' for m in moves(h)):
        return 'B2'


for i in range(1, 35):
    if game(i) == 'B1':
        print(i, game(i))
from functools import lru_cache


@lru_cache(None)
def moves(h):
    return h + 3, h * 3


def game(h):
    if h >= 60:
        return 'W'
    if any(game(m) == 'W' for m in moves(h)):
        return 'P1'
    if all(game(m) == 'P1' for m in moves(h)):
        return 'B1'
    if any(game(m) == 'B1' for m in moves(h)):
        return 'P2'
    if all(game(m) == 'P2' or game(m) == 'P1' for m in moves(h)):
        return 'B2'


for i in range(1, 60):
    if game(i) == 'B2':
        print(i, game(i))
from functools import lru_cache


def moves(h):
    a, b = h
    return (a + 2, b), (a, b + 2), (a * 2, b), (a, b * 2)


@lru_cache(None)
def game(h):
    a, b = h
    if a + b >= 75:
        return 'W'
    if any(game(m) == 'W' for m in moves(h)):
        return 'P1'
    if all(game(m) == 'P1' for m in moves(h)):
        return 'B1'
    if any(game(m) == 'B1' for m in moves(h)):
        return 'P2'
    if all(game(m) == 'P2' or game(m) == 'P1' for m in moves(h)):
        return 'B2'


for i in range(1, 66):
    j = 9, i
    if game(j) == 'B2':
        print(i, game(j))


from functools import lru_cache


def moves(h):
    a, b = h
    return (a + 1, b), (a, b + 1), (a * 2, b), (a, b * 2)


@lru_cache(None)
def game(h):
    a, b = h
    if a + b >= 83:
        return 'W'
    if any(game(m) == 'W' for m in moves(h)):
        return 'P1'
    if all(game(m) == 'P1' for m in moves(h)):
        return 'B1'
    if any(game(m) == 'B1' for m in moves(h)):
        return 'P2'
    if all(game(m) == 'P2' or game(m) == 'P1' for m in moves(h)):
        return 'B2'


for i in range(1, 74):
    j = 9, i
    if game(j) == 'B2':
        print(i, game(j))

"
7wzMzCCJ,Moving Target,stiky_fingaz,Python,Saturday 17th of June 2023 03:56:16 PM CDT,"targets = [int(x) for x in input().split(' ')]

while True:
    command = input().split()
    if command[0] == 'End':
        print('|'.join([str(x) for x in targets]))
        break

    numTargets = len(targets)
    commandWord = command[0]
    values = [i for i in command[1:]]
    target = int(values[0])
    amount = int(values[1])

    if commandWord == 'Shoot':
        if target in range(numTargets):
            targets[target] -= amount
            if targets[target] <= 0:
                del (targets[target])

    elif commandWord == 'Add':
        if target in range(numTargets):
            targets.insert(target, amount)
        else:
            print('Invalid placement!')
            continue

    elif commandWord == 'Strike':
        strikeLen = amount * 2 + 1
        if strikeLen > len(targets[: target + 1]) or strikeLen > len(targets[target:]):
            print('Strike missed!')
            continue
        targetsStart = targets[: target - amount]
        targetsEnd = targets[target + amount + 1:]
        targets = targetsStart + targetsEnd
"
wZywHdPJ,邀您一起看：书签管理：「编辑」-✎修改,xiaomianao666,JavaScript,Saturday 17th of June 2023 03:16:21 PM CDT,海阔视界规则分享，当前分享的是：二级页面详情￥page_detail￥书签管理：「编辑」-✎修改@@eyJkYXRhIjoie1wiYXNzb2NpYXRlZE1vZGVsc01hcEZvckpvaW5UYWJsZVwiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhGS1wiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhvdXRGS1wiOnt9LFwiZmllbGRzVG9TZXRUb0RlZmF1bHRcIjpbXSxcImdtdE1vZGlmaWVkXCI6MCxcImlkXCI6MCxcImxpc3RUb0NsZWFyQXNzb2NpYXRlZEZLXCI6W10sXCJsaXN0VG9DbGVhclNlbGZGS1wiOltdLFwicGFnZUxpc3RcIjpbXSxcInNhdmVkXCI6ZmFsc2UsXCJ0aXRsZVwiOlwi5oiR55qE5Li76aG1XCIsXCJ2ZXJzaW9uXCI6MCxcInVybFwiOlwiaGlrZXI6Ly9lbXB0eVwiLFwiY29sX3R5cGVcIjpcIng1X3dlYnZpZXdfc2luZ2xlXCIsXCJmaW5kX3J1bGVcIjpcImpzOnNldFJlc3VsdChbe1xcbiAgICB1cmw6XFxcImZpbGU6Ly8vc3RvcmFnZS9lbXVsYXRlZC8wL0FuZHJvaWQvZGF0YS9jb20uZXhhbXBsZS5oaWtlcnZpZXcvZmlsZXMvRG9jdW1lbnRzL25ld1BsYW5Ib21lLmh0bWxcXFwiLFxcbmRlc2M6XFxcIjEwMCUmJmZsb2F0XFxcIixcXG5leHRyYTp7Y2FuQmFjazogdHJ1ZX1cXG59XSk7XCIsXCJncm91cFwiOlwiXCIsXCJwYWdlc1wiOlwiW11cIn0iLCJ0aXRsZSI6IuS5puetvueuoeeQhu+8muOAjOe8lui+keOAjS3inI7kv67mlLkifQ==
UAVKSvga,Parse HTML tables with JS,drkskwlkr,JavaScript,Saturday 17th of June 2023 03:09:28 PM CDT,"const tableText = `
  <table>
    <thead>
      <tr>
        <th>Name</th>
        <th>Age</th>
        <th>City</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>John</td>
        <td>30</td>
        <td>New York</td>
      </tr>
      <tr>
        <td>Jane</td>
        <td>25</td>
        <td>Los Angeles</td>
      </tr>
      <tr>
        <td>Bob</td>
        <td>40</td>
        <td>Chicago</td>
      </tr>
    </tbody>
  </table>
`;

// Extract the row data from the table text using regular expressions
const rowData = tableText.match(/<tr>(.*?)<\/tr>/gs).map(tr => {
  const cellData = tr.match(/<td>(.*?)<\/td>/gs).map(td => td.replace(/<\/?td>/g, ''));
  return { Name: cellData[0], Age: cellData[1], City: cellData[2] };
});

// Log the resulting JSON object
console.log(JSON.stringify(rowData));"
y5vkgBzM,SCARY FLASHLIGHTS by BloxianCode,Joriangames,Lua,Saturday 17th of June 2023 03:05:22 PM CDT,"-- SCARY FLASHLIGHTS TUTORIAL BY BLOXIANCODE youtube.com/c/BloxianCode
-- Tutorial: https://youtube.com/shorts/EpbP6X1TvGY

while true do

	for i, part in pairs(script.Parent:GetChildren())
		if part:FindFirstChild(""SpotLight"") then
			local light = part.SpotLight
			
			light.Enabled = false
			wait(math.random(0,1))
			light.Enabled = true
			wait(math.random(0,1))

		end		
	end

end"
5qyFRq92,Untitled,tourniquet,JavaScript,Saturday 17th of June 2023 02:26:05 PM CDT,"  const getTodos = async () => {
    const q = query(todosCollectionRef, where('uid', '==', user.uid))
    const data = await getDocs(q)
    setTodos(data.docs.map((todo) => ({ ...todo.data(), id: todo.id })))
  }"
b2HtNuft,trait,Yousuf1791,PHP,Saturday 17th of June 2023 02:18:30 PM CDT,"<?php 

trait hello{
	public function say_hello(){
		echo ""Hello world"";
	}
}

trait bye{
	public function say_bye(){
		echo ""Bye everyone"";
	}
}

class base{
	use hello;
	use bye;
}

class base2{
	use hello;
}

$obj = new base();
$obj2 = new base();

$obj->say_hello();
echo ""<br>"";
$obj->say_bye();
echo ""<br>"";
$obj2->say_hello();

?>"
aczYMRg6,[ AUTOFARM ] 🏖️Roblox but every second the baseplate grows +1,Shifu_,Lua,Saturday 17th of June 2023 02:13:29 PM CDT,"-- If you need a scripter dm me up HyperSpeed#7040, it is buggy don't expect to leave it for the night, I ain't getting paid here lol
local player = game.Players.LocalPlayer


local function modifyHitboxSize(character, scale)
    local humanoid = character:WaitForChild(""Humanoid"")
    humanoid:BuildRigFromAttachments()
    local rootPart = character:WaitForChild(""HumanoidRootPart"")
    rootPart.Size = rootPart.Size * scale
    humanoid.HipHeight = humanoid.HipHeight * scale
end

while true do wait(5)
if player.Character then
    modifyHitboxSize(player.Character, 1500)
else
    player.CharacterAdded:Connect(function(character)
        modifyHitboxSize(character, 1500)
    end)
end
end"
DxvTySKh,Fun Facts,sgtorange17,JSON,Saturday 17th of June 2023 02:10:23 PM CDT,"{
  ""animal_facts"": [
    ""Cows have best friends and form strong social bonds. They tend to spend most of their time with their preferred companions."",
    ""Octopuses have three hearts. Two hearts pump blood to the gills, while the third circulates blood throughout the rest of the body."",
    ""The tongue of a blue whale is so large that 50 people could stand on it!"",
    ""A group of flamingos is called a flamboyance. These social birds often gather in large groups and perform synchronized displays."",
    ""The fingerprints of koalas are so similar to human fingerprints that they have been mistaken for crime scene prints in the past."",
    ""Crows are highly intelligent birds and have been observed using tools. They can solve complex puzzles and even make and use their own tools."",
    ""The quokka, a small marsupial native to Australia, is known as the 'world's happiest animal' because it often appears to be smiling due to its upturned mouth."",
    ""The tongue of a giraffe is black and can be up to 20 inches long. It helps them pluck leaves from high branches."",
    ""Some species of male seahorses give birth to their young. The male carries the eggs in a specialized pouch until they hatch."",
    ""Elephants are the largest land animals and have a highly developed sense of empathy. They can comfort and console each other in times of distress.""
  ],
  ""world_facts"": [
    ""The world's oldest known living organism is a bristlecone pine tree named 'Methuselah' located in California, estimated to be over 4,800 years old."",
    ""The Great Barrier Reef in Australia is the largest living structure on Earth and can even be seen from space."",
    ""The world's largest desert is not the Sahara but the Antarctic Desert. It covers the entire continent of Antarctica."",
    ""Mount Everest, the highest peak in the world, continues to grow by about a quarter of an inch (0.6 cm) every year due to tectonic plate movement."",
    ""The Amazon Rainforest in South America is often referred to as the 'lungs of the Earth' because it produces approximately 20% of the world's oxygen."",
    ""There is a village in Norway called Hell, and it occasionally freezes over. So, you can technically say that Hell has frozen over!"",
    ""The world's shortest scheduled flight lasts just 1.7 miles (2.7 km) and connects the islands of Westray and Papa Westray in Scotland. The flight duration is around 1 minute."",
    ""The country with the most time zones is France, due to its overseas territories. It spans 12 time zones, from UTC-10 to UTC+12."",
    ""The world's largest salt flat is the Salar de Uyuni in Bolivia. It stretches over 4,086 square miles (10,582 square kilometers) and creates a stunning mirror-like effect after rainfall."",
    ""The world's oldest known cave paintings, dating back around 40,000 years, were discovered in the Chauvet-Pont-d'Arc Cave in southern France.""
  ],
  ""roblox_facts"": [
    ""Roblox is a popular online platform that allows users to create and play games created by other users. It was officially launched in 2006."",
    ""As of September 2021, Roblox had over 200 million active users worldwide."",
    ""Roblox games are created using a programming language called Lua, which allows users to develop their own games, virtual worlds, and interactive experiences."",
    ""The virtual currency in Roblox is called Robux. Players can earn Robux by creating and selling virtual items, as well as participating in the Roblox Affiliate Program."",
    ""Roblox has a strong community of developers who have created a wide range of games across various genres, including role-playing games, simulators, obstacle courses, and more."",
    ""The most popular game on Roblox is 'Adopt Me!' which is a virtual pet adoption and care simulator. It has gained a massive player base and has been played billions of times."",
    ""Roblox allows players to customize their avatars with various clothing, accessories, and animations. Users can even create their own clothing items and sell them in the Roblox catalog."",
    ""The Roblox Studio is a powerful tool that allows users to create detailed and interactive game environments. It provides a wide range of tools and features to bring imaginations to life."",
    ""Roblox has a robust social aspect, allowing players to chat, form groups, and even participate in virtual events like concerts and parties."",
    ""Roblox has become a platform for aspiring game developers, with some successful developers on the platform going on to start their own game studios or pursue careers in the gaming industry.""
  ]
}
"
LaAVZuyj,SambaNAS start log,Qba,Ruby,Saturday 17th of June 2023 01:55:50 PM CDT,"tdbsam_open: Converting version 0.0 database to version 4.0.
tdbsam_convert_backup: updated /var/lib/samba/private/passdb.tdb file.
s6-rc: info: service init-smartd successfully started
Added user <<secret>>
---------------------------------------------------
[20:49:24] INFO: Exposed Disks Summary:
[config]                path = /config
[addons]                path = /addons
[ssl]                   path = /ssl
[share]                 path = /share
[backup]                path = /backup
[media]                 path = /media
[NAS Seagate]           path = /mnt/NAS Seagate
---------------------------------------------------
s6-rc: info: service init-samba successfully started
s6-rc: info: service init-mqtt: starting
s6-rc: info: service wsdd: starting
s6-rc: info: service smbd: starting
s6-rc: info: service nmbd: starting
s6-rc: info: service avahi: starting
s6-rc: info: service wsdd successfully started
s6-rc: info: service nmbd successfully started
s6-rc: info: service smbd successfully started
s6-rc: info: service avahi successfully started
nmbd version 4.16.8 started.
Copyright Andrew Tridgell and the Samba Team 1992-2022
[20:49:24] INFO: Starting the AVAHI for homeassistant...
smbd version 4.16.8 started.
Copyright Andrew Tridgell and the Samba Team 1992-2022
Waiting for daemon ...
INFO: Profiling support unavailable in this build.
[20:49:24] INFO: Starting the wsdd daemon for WORKGROUP/homeassistant...
[20:49:24] INFO: Interfaces: -i enp0s25 
2023-06-17 20:49:24,793:wsdd INFO(pid 322): using pre-defined UUID cb6a33a0-b841-531d-a34e-09ecec492eb1
2023-06-17 20:49:24,794:wsdd INFO(pid 322): joined multicast group ('239.255.255.250', 3702) on 192.168.1.100%enp0s25
2023-06-17 20:49:24,797:wsdd INFO(pid 322): scheduling Hello message via enp0s25 to ('239.255.255.250', 3702)
2023-06-17 20:49:24,802:wsdd INFO(pid 322): joined multicast group ('ff02::c', 3702, 22364, 2) on fe80::c7c:8d5c:a0b8:6369%enp0s25
2023-06-17 20:49:24,803:wsdd INFO(pid 322): scheduling Hello message via enp0s25 to ('ff02::c', 3702, 22364, 2)
2023-06-17 20:49:24,883:wsdd INFO(pid 322): 192.168.1.10 - - ""POST /cb6a33a0-b841-531d-a34e-09ecec492eb1 HTTP/1.1"" 200 -
2023-06-17 20:49:24,900:wsdd INFO(pid 322): fe80::67ca:a66c:2ef2:88df - - ""POST /cb6a33a0-b841-531d-a34e-09ecec492eb1 HTTP/1.1"" 200 -
s6-rc: info: service init-mqtt successfully started
s6-rc: info: service mqtt-disk-handler: starting
s6-rc: info: service mqtt-disk-handler successfully started
s6-rc: info: service mqtt-handler: starting
s6-rc: info: service mqtt-handler successfully started
s6-rc: info: service legacy-services: starting
[20:49:24] INFO: Starting the MQTT daemon for disks info...
[20:49:24] INFO: Starting the MQTT daemon for partitions info...
s6-rc: info: service legacy-services successfully started
[20:49:25] INFO: Legacy MQTT integration
[20:49:25] INFO: Sending MQTT autodiscovery...
jq: error (at <stdin>:1): null (null) and number (1024) cannot be divided
[20:49:26] INFO: MQTT cleanup.
Timed out
s6-supervise mqtt-handler: warning: finish script lifetime reached maximum value - sending it a SIGKILL
[20:49:32] INFO: Starting the MQTT daemon for partitions info...
[20:49:32] INFO: Legacy MQTT integration
Timed out
[20:49:32] INFO: Sending MQTT autodiscovery...
jq: error (at <stdin>:1): null (null) and number (1024) cannot be divided
[20:49:33] INFO: MQTT cleanup.
Timed out
s6-supervise mqtt-handler: warning: finish script lifetime reached maximum value - sending it a SIGKILL
[20:49:39] INFO: Starting the MQTT daemon for partitions info...
[20:49:39] INFO: Legacy MQTT integration
Timed out
[20:49:39] INFO: Sending MQTT autodiscovery...
jq: error (at <stdin>:1): null (null) and number (1024) cannot be divided
[20:49:40] INFO: MQTT cleanup.
Timed out
s6-supervise mqtt-handler: warning: finish script lifetime reached maximum value - sending it a SIGKILL
[20:49:46] INFO: Starting the MQTT daemon for partitions info...
[20:49:46] INFO: Legacy MQTT integration
Timed out
[20:49:46] INFO: Sending MQTT autodiscovery...
jq: error (at <stdin>:1): null (null) and number (1024) cannot be divided
[20:49:47] INFO: MQTT cleanup.
*****
Samba name server <<secret>> is now a local master browser for workgroup <<secret>> on subnet <<secret>>
*****
Timed out
s6-supervise mqtt-handler: warning: finish script lifetime reached maximum value - sending it a SIGKILL
[20:49:53] INFO: Starting the MQTT daemon for partitions info...
[20:49:53] INFO: Legacy MQTT integration
Timed out
[20:49:53] INFO: Sending MQTT autodiscovery...
jq: error (at <stdin>:1): null (null) and number (1024) cannot be divided
[20:49:54] INFO: MQTT cleanup.
Timed out
s6-supervise mqtt-handler: warning: finish script lifetime reached maximum value - sending it a SIGKILL
[20:50:00] INFO: Starting the MQTT daemon for partitions info...
[20:50:00] INFO: Legacy MQTT integration
Timed out
[20:50:00] INFO: Sending MQTT autodiscovery...
jq: error (at <stdin>:1): null (null) and number (1024) cannot be divided
[20:50:01] INFO: MQTT cleanup.
Timed out"
k2h61BSx,Taller Uno,Hatkat,Java,Saturday 17th of June 2023 01:53:27 PM CDT,"
1.- Para la dirección 172.19.87.51
	Máscara de red 255.255.0.0
		dirección de red = 172.19.0.0
		dirección de broadcast = 172.19.255.255
		cantidad de hosts por subred = 65536 - 2 = 65534

dirección 172.19.87.51 - 10101100.00010011.01010111.00110011
Mascara binario = 11111111.11111111.00000000.00000000 

Operacion AND
1 0 = 0
0 1 = 0
0 0 = 0 
1 1 = 1

10101100.00010011.01010111.00110011
11111111.11111111.00000000.00000000
-----------------------------------
10101100.00010011.00000000.00000000 = 172.19.0.0 

Operacion OR
1 0 = 1
0 1 = 1
1 1 = 1
0 0 = 0

10101100.00010011.01010111.00110011
00000000.00000000.11111111.11111111 = Complemento de Mascara
-----------------------------------
10101100.00010011.11111111.11111111 = 172.19.255.255

Cantidad de Host = 2´16 = 65536

------------------------------- Ejercicio Dos -------------------------------

2.- Para la dirección 192.168.6.203
	Máscara de red: 255.255.255.224
	dirección de red: 192.168.6.192
	dirección de broadcast: 192.168.6.223
	cantidad de hosts por subred = 32 - 2 = 30

dirección: 192.168.6.203 - 11000000.10101000.00000110.11001011
Mascara binario: 11111111.11111111.11111111.11100000

Operacion AND
1 0 = 0
0 1 = 0
0 0 = 0 
1 1 = 1

11000000.10101000.00000110.11001011
11111111.11111111.11111111.11100000
-----------------------------------
11000000.10101000.00000110.11000000 = 192.168.6.192

Operacion OR
1 0 = 1
0 1 = 1
1 1 = 1
0 0 = 0

11000000.10101000.00000110.11001011
00000000.00000000.00000000.00011111 = Complemento de Mascara
-----------------------------------
11000000.10101000.00000110.11011111 = 192.168.6.223

Cantidad de Host = 32 - 2 = 30

------------------------------------------------TALLER-----------------------------------------------------

"
YkuXJcay,part_main,DAIM0N0S,PHP,Saturday 17th of June 2023 01:30:02 PM CDT,"echo '<tr>
			<td>'.$duty['user_gname'].'<br> 
			<font color=""#a9a9a9"">Статус: </font><span class=""status-'.($statusArray[mb_strtolower($duty['user_gname'])]??'unknown').'"">'.($statusArray[mb_strtolower($duty['user_gname'])]??'unknown').'</span></td>
			<td>'.date('H:i:s', strtotime($duty['start_time'])).'</td>
			<td>'.$duty['location_name'].'</td>
			<td><form method=""post"" action=""/add_comment.php""><input type=""hidden"" name=""user_id"" value=""'.$duty['user_id'].'""><textarea class=""comment"" name=""comment"" placeholder=""Введите примечание..."">'.$duty['comment'].'</textarea></td>
			<td><input type=""submit"" class=""button-save"" value=""Сохранить""></form><form method=""post"" action=""/end_duty.php""><input type=""hidden"" name=""user_id"" value=""'.$duty['user_id'].'""><input type=""submit"" class=""button-save"" value=""Закончить""></form></td>
			<td><b>'.$duty['koordinator_gname'].'</b></td>
		</tr>';"
3eNS39xC,test_clan,DAIM0N0S,PHP,Saturday 17th of June 2023 01:28:06 PM CDT,"<?php
$content = file_get_contents('https://3k.mail.ru/clan_info.php?clan_id=1&mode=members');
$internalErrors = libxml_use_internal_errors(true);
$doc = new DOMDocument();
$doc->recover = true;
$doc->loadHTML($content);
$xpath = new DOMXpath($doc);
$elements = $xpath->query('//table[contains(@class, \'tbl2\')]/tr');
$statusArray = [];
foreach($elements as $element){
    $name = mb_strtolower(preg_replace(['/\[[0-9]+\]/u', '/\s/u'], '', $element->childNodes->item(1)->textContent));
    $statusArray[trim($name)] = trim($element->childNodes->item(5)->textContent);

    /*echo ""<pre>"";
    var_dump ($statusArray);
    echo ""</pre>"";*/
}

return $statusArray;
"
nKmVH66e,Untitled,cardel,Python,Saturday 17th of June 2023 01:11:48 PM CDT,"""""""
0.05 = (x/(x+1))*raiz(6/(2+x))

f(x) = (x/(x+1))*raiz(6/(2+x)) - 0.05

""""""
import math

def f(x):
    return (x/(x+1))*math.sqrt(6/(2+x))-0.05

def df(x):
    return (math.sqrt(6/(2+x)) - (x/(x+1))*(1/math.sqrt(6/(2+x))))/(x+1)**2

def newtonRaphson(x0, tol, n):
    print('\n\n*** Metodo de Newton-Raphson ***')
    i = 1
    while i <= n:
        x1 = x0 - f(x0)/df(x0)
        print('Iteracion-%d, x1 = %0.6f y f(x1) = %0.6f' % (i, x1, f(x1)))
        if abs(f(x1)) < tol:
            print('\nLa raiz es: %0.8f' % x1)
            return x1
        x0 = x1
        i = i + 1
    print('\nNo se encontro la raiz')
    return None

x0 = float(input('Ingrese el valor inicial: '))
tol = float(input('Ingrese la tolerancia: '))
n = int(input('Ingrese el numero maximo de iteraciones: '))
newtonRaphson(x0, tol, n)
print(f(0.02995472))
"
zvLFVcbQ,watch,goldfiction,Lua,Saturday 17th of June 2023 01:10:30 PM CDT,"local args={...}
while true do
  shell.run(args[1])
  sleep(0.6)
end"
YDWrfYit,21588229,VKirill,JavaScript,Saturday 17th of June 2023 01:01:21 PM CDT,"<script>
var settings = {
    /* Настройки которые надо менять */
    need: 30, // Сюда вписываем через какое количество секунд повторно отправлять цель, по умолчанию стоит 60, но можно указать и 30
    checkTime: 10, // секунды. период проверки. 
    //желательно, чтобы need было кратно checkTime
	IDmetrika: 21588229, // Сюда вписываем ИД Счетчика Яндекс Метрики
	/* Настройки которые надо менять */
}
 
/* 
## Инструкция по добавлению целей в Яндекс.Метрику ##
Если вы указываете в функции NEED шаг в 30 секунд, то в Метрике вы можете отслеживать цели с шагом в 30 секунд и цели событий добавляйте такие:
30sec
60sec
90sec
120sec
150sec и т.д.
 
Если вы указываете в функции NEED шаг в 60 секунд, то в Метрике вы можете отслеживать цели с шагом в 30 секунд и цели событий добавляйте такие:
60sec
120sec
180sec
240sec и т.д.
*/

/* БОЛЬШЕ В КОДЕ НИЧЕГО НЕ ТРОГАЕМ, ЦЕЛИ ТОЖЕ НЕ ПРАВИМ */

var metricsFn = function () {
    console.log(ActiveScore.timer);
    console.log(ActiveScore.need);
    var c1 = this.getCookie(this.cookieName);
    console.log(c1);
    if (ActiveScore.timer >= ActiveScore.need) {
        console.log(""событие отправилось"");
        /* Тут перечислять все что нужно будет вызвать по достижению цели */
        ym(settings.IDmetrika, ""reachGoal"", this.cookieName.slice(0, -3));
		
        /* Тут перечислять все что нужно будет вызвать по достижению цели */
    }
};

var ActiveScore = {
    need: settings.need,
    checkTime: settings.checkTime,
    loop: true,
    counter: 0,
    cookieName: ""60sec_ap"",
    sendFn: null,
    parts: 0,
    active_parts: 0,
    timer: 0,
    events: [
        ""touchmove"",
        ""blur"",
        ""focus"",
        ""focusin"",
        ""focusout"",
        ""load"",
        ""resize"",
        ""scroll"",
        ""unload"",
        ""click"",
        ""dblclick"",
        ""mousedown"",
        ""mouseup"",
        ""mousemove"",
        ""mouseover"",
        ""mouseout"",
        ""mouseenter"",
        ""mouseleave"",
        ""change"",
        ""select"",
        ""submit"",
        ""keydown"",
        ""keypress"",
        ""keyup"",
        ""error"",
    ],

    setEvents: function () {
        for (var index = 0; index < this.events.length; index++) {
            var eName = this.events[index];
            window.addEventListener(eName, function (e) {
                if (e.isTrusted && ActiveScore.period.events == false) {
                    ActiveScore.period.events = true;
                }
            });
        }
    },

    period: {
        start: 0,
        end: 0,
        events: false,
    },

    init: function (fn) {
        this.calcParts();
        this.setEvents();
        this.setStartCounter();
        if (this.checkCookie()) {
            this.sendFn = fn;
            this.start();
        }
    },

    readLastCookie: function () {
        var absurdlyLarge = 100000;
        for (var i = 1; i < absurdlyLarge; i++) {
            var cookie = this.getCookie(i * this.need + 'sec_ap');
            if (cookie != this.parts * this.parts) return { i: i, cookie: cookie };
        }
        return { i: 1, cookie: 0 };
    },

    setStartCounter: function () {
        var lastCookie = this.readLastCookie();
        this.counter = lastCookie.i - 1;
        this.active_parts = Number(lastCookie.cookie);
        this.cookieName = (this.counter + 1) * this.need + ""sec_ap"";
    },

    calcParts: function () {
        this.parts = Math.ceil(this.need / this.checkTime);
    },

    setPeriod: function () {
        this.period.start = this.microtime();
        this.period.end = this.period.start + this.checkTime;
        this.period.events = false;
    },

    microtime: function () {
        var now = new Date().getTime() / 1000;
        var s = parseInt(now);
        return s;
    },

    start: function () {
        this.setPeriod();
        this.runPeriod();
    },

    timeoutId: null,

    checkPeriod: function () {
        if (this.period.events == true) {
            this.active_parts = this.active_parts + 1;
            // console.log('В этой секции были действия');
        } else {
            // console.log('В этой секции НЕБЫЛО действия');
        }
        this.timer = this.active_parts * this.checkTime;
        console.log(
            this.active_parts + "" / "" + this.parts + "" ["" + this.timer + ""]""
        );

        if (this.checkSecs()) {
        } else {
            this.start();
        }
        this.setCookie(this.cookieName, this.active_parts);
    },

    checkSecs: function () {
        if (this.timer >= this.need) {
            this.send();
            if (this.loop == true) {
                this.counter++;
                this.timer = 0;
                this.active_parts = 0;
                this.cookieName = (this.counter + 1) * this.need + ""sec_ap"";
                return false;
            } else {
                // console.log('Завершили проверку активности');
                return true;
            }
        }
        return false;
    },

    timeoutFn: function () {
        ActiveScore.checkPeriod();
    },

    runPeriod: function () {
        this.timeoutId = setTimeout(this.timeoutFn, this.checkTime * 1000);
    },

    send: function () {
        if (this.getCookie(this.cookieName) == this.parts * this.parts) {
            this.setStartCounter();
        } else {
            this.setCookie(this.cookieName, this.active_parts * this.active_parts);
        }
        this.sendFn();
    },

    checkCookie: function () {
        var c = this.getCookie(this.cookieName);
        if (c == null) {
            return true;
        } else {
            if (c == '') return true;
            c = parseInt(c);
            if (c >= this.parts) {
                // console.log('Скрипт даже не запустился...');
                if (this.loop == true) {
                    return true;
                }
                return false;
            } else {
                this.active_parts = c;
                return true;
            }
        }
    },

    setCookie: function (name, value, days) {
        var expires = """";
        if (days) {
            var date = new Date();
            date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);
            expires = ""; expires="" + date.toUTCString();
        }
        document.cookie = name + ""="" + (value || """") + expires + ""; path=/"";
    },
    getCookie: function (name) {
        var nameEQ = name + ""="";
        var ca = document.cookie.split("";"");
        for (var i = 0; i < ca.length; i++) {
            var c = ca[i];
            while (c.charAt(0) == "" "") c = c.substring(1, c.length);
            if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);
        }
        return null;
    },
    eraseCookie: function (name) {
        document.cookie =
            name + ""=; Path=/; Expires=Thu, 01 Jan 1970 00:00:01 GMT;"";
    },
};

ActiveScore.init(metricsFn);
</script>"
fbyHZzCZ,static_members,Yousuf1791,PHP,Saturday 17th of June 2023 12:50:53 PM CDT,"<?php 

class base{
	public static $name = ""Yousuf Hossain"";

	public static function show(){
		echo self::$name;
	}
}

echo base::$name;

echo ""<br>"";

base::show();

?>"
CA0pWLKG,Untitled,Tasin_Mahmud,C++,Saturday 17th of June 2023 12:47:00 PM CDT,"1.	Implement binary search procedure using divide and conquer method

Program:
#include <stdio.h>
int binary_search(int data[], int lower, int upper, int item);
void bubble_sort(int data[], int n);
void bubble_sort(int data[], int n){
    int i,j,temp;
    for(i=0; i<n-1; i++){
        for(j=0; j<n-1; j++){
            if(data[j]>data[j+1]){
                temp= data[j];
                data[j]= data[j+1];
                data[j+1]= temp;  }} }}
int binary_search(int data[], int low, int high, int item){
    int mid;
    while(low<=high){ 
        mid=(low+high)/2;
        if(data[mid]==item) return mid;
        if(data[mid]<item)low=mid+1;
        else high=mid-1; } 
return -1;
}
int main()
{
    int i, n, element, location,staring_index,last_index,item;
    printf(""Enter the number of elements: "");
    scanf(""%d"", &n);
    int arr[n];
    printf(""Please enter %d numbers: \n"",n);
    for(i=0; i< n; i++){
        scanf(""%d"",&arr[i]);}
    bubble_sort(arr,n);
    printf(""After sorting the array: \n"");
    for(i=0; i<n; i++){
        printf(""%d "", arr[i]); }
    printf(""\nEnter your desired element:"");
    scanf(""%d"", &element);
    staring_index=0,last_index=n-1;
    location=binary_search(arr,staring_index,last_index,element);
    if(location==-1)   printf(""\n %d is absent in the array "",element);
    else    printf(""\nThe location of the element %d is %d"",element,location+1);
    return 0;}
Output:
Enter the number of elements: 5
Please enter 5 numbers: 
11 5 1 6 8 11
After sorting the array: 
1 5 6 8 11 
Enter your desired element: 8
The location of the element 8 is 4
2.	Implement divide and conquer method for finding the maximum and minimum number.
      Program:
#include<stdio.h>
int max, min;
int arr[100];
void findmaxmin(int p, int q);
int main ()
{
 int i, num;
 printf (""Enter the total number of numbers : \n"");
 scanf (""%d"",&num);
 printf (""Enter the numbers of the array : \n"");
 for (i=1;i<=num;i++)
  scanf (""%d"",&arr[i]);
 max = arr[0]; min = arr[0];
 findmaxmin(1, num);
 printf (""Minimum element : %d\n"", min);
 printf (""Maximum element : %d\n"", max);
 return 0;
}
void findmaxmin(int p, int q)
{
 int max1, min1, mid;
 if(p==q)
 {max = min = arr[p];}
 else
 { if(p == q-1)
  {
   if(arr[p] <arr[q])
   {
    max = arr[q]; min = arr[p];}
   else
   { max = arr[p]; min = arr[q];}  }
  else
  {
   mid = (p+q)/2;
   findmaxmin(p, mid);
   max1 = max; min1 = min;
   findmaxmin(mid+1, q);
   if(max <max1)
    max = max1;
   if(min > min1)
    min = min1;}}}
output:
Enter the total number of numbers : 
5
Enter the numbers of the array : 
18 5 1 12 9
Minimum element : 1
Maximum element : 18
3.	Write a program to measure the performance using time function between bubble sort and quick sort.
Program:
#include <iostream>
#include <cstdlib>
#include <ctime>
using namespace std;
void swapElements(int* a, int* b) {
    int temp = *a;
    *a = *b;
    *b = temp;}
void performBubbleSort(int arr[], int n) {
    for (int i = 0; i < n - 1; i++) {
        for (int j = 0; j < n - i - 1; j++) {
            if (arr[j] > arr[j + 1]) {
                swapElements(&arr[j], &arr[j + 1]);} }  }
int partitionArray(int arr[], int low, int high) {
    int pivot = arr[high];
    int i = low - 1;
    for (int j = low; j < high; j++) {
        if (arr[j] <= pivot) {
            i++;
            swapElements(&arr[i], &arr[j]); }   }
    swapElements(&arr[i + 1], &arr[high]);
    return i + 1;
}
void performQuickSort(int arr[], int low, int high) {
    if (low < high) {
        int pivot = partitionArray(arr, low, high);
        performQuickSort(arr, low, pivot - 1);
        performQuickSort(arr, pivot + 1, high);}}
void generateRandomArray(int arr[], int n) {
    for (int i = 0; i < n; i++) {
        arr[i] = rand() % 100; }}
void measurePerformance(int n) {
    int* arr1 = new int[n];
    int* arr2 = new int[n];
    generateRandomArray(arr1, n);
    for (int i = 0; i < n; i++) {
        arr2[i] = arr1[i];}
    clock_t start, end;
    double timeTaken;
    start = clock();
    performBubbleSort(arr1, n);
    end = clock();
    timeTaken = double(end - start) / CLOCKS_PER_SEC;
    cout << ""Bubble Sort: "";
    cout << ""Time taken: "" << timeTaken * 1000 << "" milliseconds ("" << timeTaken << "" seconds)"" << endl;
    start = clock();
    performQuickSort(arr2, 0, n - 1);
    end = clock();
    timeTaken = double(end - start) / CLOCKS_PER_SEC;
    cout << ""Quick Sort: "";
    cout << ""Time taken: "" << timeTaken * 1000 << "" milliseconds ("" << timeTaken << "" seconds)"" << endl;
    delete[] arr1;
    delete[] arr2;}
int main() {
    int n;
    cout << ""Enter the size of the array: "";
    cin >> n;
    measurePerformance(n); return 0;}
Output:
Enter the size of the array: 5
Bubble Sort: Time taken: 0.002 milliseconds (2e-06 seconds)
Quick Sort: Time taken: 0.001 milliseconds (1e-06 seconds)
4.	Implement the fractional knapsack problem that will generate an optimal solution for the given set of instance.

Program:
#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;
struct Item {
    int weight;
    int value; };
bool compareItems(const Item& item1, const Item& item2) {
    double valuePerUnitWeight1 = double(item1.value) / item1.weight;
    double valuePerUnitWeight2 = double(item2.value) / item2.weight;
    return valuePerUnitWeight1 > valuePerUnitWeight2;}
double calculateMaxValue(int capacity, vector<Item>& items) {
    sort(items.begin(), items.end(), compareItems);
    double totalValue = 0.0;  int currentWeight = 0;
    for (const Item& item : items) {
        if (currentWeight + item.weight <= capacity) {
            currentWeight += item.weight;   totalValue += item.value;}
        else {
            int remainingCapacity = capacity - currentWeight;
            double fraction = double(remainingCapacity) / item.weight;
            currentWeight += remainingCapacity;
            totalValue += fraction * item.value;     break;
        }  }
    return totalValue;}
int main() {
    int numItems; cout << ""Enter the number of items: ""; cin >> numItems;
    vector<Item> items(numItems);
    cout << ""Enter the weight and value of each item:\n"";
    for (int i = 0; i < numItems; i++) {
        cout << ""Item "" << i + 1 << "":\n"";
        cout << ""Weight: "";  cin >> items[i].weight;
        cout << ""Value: ""; cin >> items[i].value; }
    int capacity; cout << ""Enter the capacity of the knapsack: ""; cin >> capacity;
    double maxValue = calculateMaxValue(capacity, items);
    cout << ""Maximum achievable value: "" << maxValue << endl;
    return 0;}
Output:
Enter the number of items: 5
Enter the weight and value of each item:
Item 1:
Weight: 5
Value: 10
Item 2:
Weight: 2
Value: 8
Item 3:
Weight: 4
Value: 16
Item 4:
Weight: 6
Value: 12
Item 5:
Weight: 8
Value: 13
Enter the capacity of the knapsack: 10
Maximum achievable value: 32

5.	Write a program to find the single source shortest path

#include <iostream>
#include <vector>
#include <queue>
#include <limits>
using namespace std;
struct Edge {
    int destination;
    int weight;
};
void shortestPathDijkstra(vector<vector<Edge>>& graph, int source);
int main() {
    int numVertices;
    cout << ""Enter the number of vertices: "";  cin >> numVertices;
    vector<vector<Edge>> graph(numVertices); cout << ""Enter the number of edges: "";
    int numEdges;  cin >> numEdges;
    cout << ""Enter the edges and their weights:\n"";
    for (int i = 0; i < numEdges; i++) {
        int source, destination, weight; cin >> source >> destination >> weight;
        graph[source].push_back({destination, weight});}
    int sourceVertex;
    cout << ""Enter the source vertex: ""; cin >> sourceVertex;
    shortestPathDijkstra(graph, sourceVertex);
    return 0;}
void shortestPathDijkstra(vector<vector<Edge>>& graph, int source) {
    int numVertices = graph.size();
    vector<int> distance(numVertices, numeric_limits<int>::max());
    priority_queue<pair<int, int>, vector<pair<int, int>>, greater<pair<int, int>>> pq;
    distance[source] = 0; pq.push(make_pair(0, source));
    while (!pq.empty()) {
        int u = pq.top().second;  pq.pop();
        for (const auto& edge : graph[u]) {
            int v = edge.destination; int weight = edge.weight;
            if (distance[u] + weight < distance[v]) {
                distance[v] = distance[u] + weight;
                pq.push(make_pair(distance[v], v));}}}
    cout << ""Shortest Distances from Source Vertex "" << source << "":\n"";
    for (int i = 0; i < numVertices; i++) {
        cout << ""Vertex "" << i << "": "" << distance[i] << endl;}}
Output:
Enter the number of vertices: 4
Enter the number of edges: 5
Enter the edges and their weights:
0 1 4
0 2 2
3 2 3
1 3 5
2 3 8
0 1 4
Enter the source vertex: 0
Shortest Distances from Source Vertex 0:
Vertex 0: 0
Vertex 1: 4
Vertex 2: 2
Vertex 3: 9
6.	Write a program to implement dynamic programming method for all pair's shortest path problem.
#include <stdio.h>
#define V 4
#define INF 99999
void printSolution(int dist[][V]);
void floydWarshall(int dist[][V])
{
	int i, j, k;
	for (k = 0; k < V; k++) {
		for (i = 0; i < V; i++) {
			for (j = 0; j < V; j++) {
				if (dist[i][k] + dist[k][j] < dist[i][j])
					dist[i][j] = dist[i][k] + dist[k][j];}}}
	printSolution(dist);}
void printSolution(int dist[][V])
{
	puts(""The following matrix shows the shortest distances""
		"" between every pair of vertices"");
	for (int i = 0; i < V; i++) {
		for (int j = 0; j < V; j++) {
			if (dist[i][j] == INF) printf(""%7s"", ""INF"");
			else printf(""%7d"", dist[i][j]);}
		printf(""\n"");}}

int main()
{
	int graph[V][V] = { { 0, 5, INF, 10 },
						{ INF, 0, 3, INF },
						{ INF, INF, 0, 1 },
						{ INF, INF, INF, 0 } };

	floydWarshall(graph);
	return 0;}
Output:
The following matrix shows the shortest distances between every pair of vertices
     0      5       8       9
    INF      0      3       4
    INF    INF      0       1
    INF    INF     INF      0
7.	Using backtracking algorithm implement N-queens problem.
Program:

#include<stdio.h>
#include<math.h>
int board[20],count;
void print(int n);
int place(int row,int column);
int main()
{
int n,i,j;
void queen(int row,int n);
printf("" - N Queens Problem Using Backtracking -"");
printf(""\n\nEnter number of Queens:"");
scanf(""%d"",&n);
queen(1,n);
return 0;}
void print(int n)
{
int i,j; printf(""\n\nSolution %d:\n\n"",++count);
for(i=1;i<=n;++i)
  printf(""\t%d"",i);
for(i=1;i<=n;++i)
{ printf(""\n\n%d"",i);
  for(j=1;j<=n;++j) 
  {
   if(board[i]==j)
    printf(""\tQ""); 
   else
    printf(""\t-"");}}}
int place(int row,int column)
{
int i;
for(i=1;i<=row-1;++i)
{
  if(board[i]==column)  return 0;
  else
   if(abs(board[i]-column)==abs(i-row))
    return 0;}
return 1;}
void queen(int row,int n)
{
int column;
for(column=1;column<=n;++column)
{if(place(row,column))
  {
   board[row]=column;   if(row==n)  print(n);
   else queen(row+1,n);}}}
    
Output:
Enter number of Queens: 4
Solution 1:

	1	2	3	4

1	-	Q	-	-

2	-	-	-	Q

3	Q	-	-	-

4	-	-	Q	-
"
MynKnXKV,N21_6647,Korotkodul,Python,Saturday 17th of June 2023 12:31:57 PM CDT,"def f(x,y,k):
    bef = k - 1
    if max(x,y) >= 50:
        if bef == 3:
            return 1
        else: #bef < 3
            return 0
    elif bef == 3: #max(x,y) < 50
        return 0
    A = f(x + 3, y, k + 1)
    B = f(2 * x, y, k + 1)
    C = f(x, y + 3, k + 1)
    D = f(x, 2 * y, k + 1)
    if k % 2 == 1: #П
        return A or B or C or D
    else: #В
        return A and B and C and D


def g(x,y,k):
    bef = k - 1
    if max(x, y) >= 50:
        if bef == 1 or bef == 3:
            return 1
        else:
            return 0
    A = g(x + 3, y, k + 1)
    B = g(x * 2, y, k + 1)
    C = g(x, y + 3, k + 1)
    D = g(x, y * 2, k + 1)
    if k % 2 == 1:
        return A or B or C or D
    else:
        return A and B and C and D

for s in range(27, 0, -1):
    print(""s "", s)
    ok = 1
    #1st moves Ivan
    if not f(22, s, 1):
        ok = 0

    #1st moves Peter
    #checking that Ivan cant win in 1 move
    v = [(22, s + 3), (22, s * 2)]
    for p in v:
        if p[1] * 2 >= 50:
            ok = 0
    #A = g(22 + 3, s, 1)
    #B = g(22 * 2, s, 1)
    C = g(22, s + 3, 1)
    D = g(22, s * 2, 1)
    E = C and D
    if not E:
        ok = 0
    if ok:
        print(s)
        break

"
SsmDLVzT,Nigerian scammers [17-6-2/2023],bombaires,HTML,Saturday 17th of June 2023 12:19:44 PM CDT,"<a href=""mailto:paymentoffice1698@gmail.com"">paymentoffice1698@gmail.com</a>
<a href=""mailto:p.ay.m.en.toff.ic.e.1.6.98@gmail.com"">p.ay.m.en.toff.ic.e.1.6.98@gmail.com</a>
<a href=""mailto:p.a.ym.e.n.to.f.f.ice.16.98@gmail.com"">p.a.ym.e.n.to.f.f.ice.16.98@gmail.com</a>
<a href=""mailto:p.ayme.nto.ffic.e.1.69.8@gmail.com"">p.ayme.nto.ffic.e.1.69.8@gmail.com</a>
<a href=""mailto:pa.y.m.en.tof.f.ice169.8@gmail.com"">pa.y.m.en.tof.f.ice169.8@gmail.com</a>
<a href=""mailto:pa.y.me.n.toffic.e1.698@gmail.com"">pa.y.me.n.toffic.e1.698@gmail.com</a>
<a href=""mailto:p.ay.m.en.tof.fi.ce16.98@gmail.com"">p.ay.m.en.tof.fi.ce16.98@gmail.com</a>
<a href=""mailto:pa.y.m.e.ntof.f.ic.e16.9.8@gmail.com"">pa.y.m.e.ntof.f.ic.e16.9.8@gmail.com</a>
<a href=""mailto:pa.y.me.n.t.offi.ce.1698@gmail.com"">pa.y.me.n.t.offi.ce.1698@gmail.com</a>
<a href=""mailto:p.ay.m.en.t.offi.c.e.1.69.8@gmail.com"">p.ay.m.en.t.offi.c.e.1.69.8@gmail.com</a>
<a href=""mailto:paym.ent.offic.e.1.6.98@gmail.com"">paym.ent.offic.e.1.6.98@gmail.com</a>
<a href=""mailto:p.a.y.me.nt.of.fice.1698@gmail.com"">p.a.y.me.nt.of.fice.1698@gmail.com</a>
<a href=""mailto:pa.y.m.en.to.f.fi.ce16.98@gmail.com"">pa.y.m.en.to.f.fi.ce16.98@gmail.com</a>
<a href=""mailto:pa.y.m.e.n.t.of.fic.e.1.6.98@gmail.com"">pa.y.m.e.n.t.of.fic.e.1.6.98@gmail.com</a>
<a href=""mailto:payme.nt.o.ff.ic.e.16.9.8@gmail.com"">payme.nt.o.ff.ic.e.16.9.8@gmail.com</a>
<a href=""mailto:pa.ym.e.n.tof.f.ic.e1.6.9.8@gmail.com"">pa.ym.e.n.tof.f.ic.e1.6.9.8@gmail.com</a>
<a href=""mailto:pa.y.m.e.nto.f.fi.c.e.1.6.9.8@gmail.com"">pa.y.m.e.nto.f.fi.c.e.1.6.9.8@gmail.com</a>
<a href=""mailto:pay.m.entof.f.i.ce1.6.9.8@gmail.com"">pay.m.entof.f.i.ce1.6.9.8@gmail.com</a>
<a href=""mailto:pay.men.to.f.fice.169.8@gmail.com"">pay.men.to.f.fice.169.8@gmail.com</a>
<a href=""mailto:p.a.yme.nto.ffice16.98@gmail.com"">p.a.yme.nto.ffice16.98@gmail.com</a>
<a href=""mailto:pa.y.m.ent.o.ffic.e.16.98@gmail.com"">pa.y.m.ent.o.ffic.e.16.98@gmail.com</a>
<a href=""mailto:p.a.ym.en.to.f.f.i.c.e.1698@gmail.com"">p.a.ym.en.to.f.f.i.c.e.1698@gmail.com</a>
<a href=""mailto:pay.men.t.o.ffice.169.8@gmail.com"">pay.men.t.o.ffice.169.8@gmail.com</a>
<a href=""mailto:paymen.t.off.ice.169.8@gmail.com"">paymen.t.off.ice.169.8@gmail.com</a>
<a href=""mailto:pa.y.me.nt.o.ff.i.ce.1.6.9.8@gmail.com"">pa.y.me.nt.o.ff.i.ce.1.6.9.8@gmail.com</a>
<a href=""mailto:pa.ymento.ff.ice16.9.8@gmail.com"">pa.ymento.ff.ice16.9.8@gmail.com</a>
<a href=""mailto:p.a.y.m.e.nt.o.ff.i.c.e.16.98@gmail.com"">p.a.y.m.e.nt.o.ff.i.c.e.16.98@gmail.com</a>
<a href=""mailto:p.ayme.n.t.office1.698@gmail.com"">p.ayme.n.t.office1.698@gmail.com</a>
<a href=""mailto:p.ayme.nto.ff.ice1.6.9.8@gmail.com"">p.ayme.nto.ff.ice1.6.9.8@gmail.com</a>
<a href=""mailto:p.aym.e.n.t.o.ff.i.c.e.16.9.8@gmail.com"">p.aym.e.n.t.o.ff.i.c.e.16.9.8@gmail.com</a>
<a href=""mailto:p.a.ym.en.t.of.fice16.9.8@gmail.com"">p.a.ym.en.t.of.fice16.9.8@gmail.com</a>
<a href=""mailto:p.ay.m.ent.of.fice.1.698@gmail.com"">p.ay.m.ent.of.fice.1.698@gmail.com</a>
<a href=""mailto:paym.en.t.o.ff.i.c.e.16.9.8@gmail.com"">paym.en.t.o.ff.i.c.e.16.9.8@gmail.com</a>
<a href=""mailto:pay.m.entof.f.i.ce.1.69.8@gmail.com"">pay.m.entof.f.i.ce.1.69.8@gmail.com</a>
<a href=""mailto:p.ay.me.nt.off.ic.e.1.698@gmail.com"">p.ay.me.nt.off.ic.e.1.698@gmail.com</a>
<a href=""mailto:p.a.y.me.n.t.o.f.f.i.c.e16.9.8@gmail.com"">p.a.y.me.n.t.o.f.f.i.c.e16.9.8@gmail.com</a>
<a href=""mailto:p.a.y.mento.f.fi.ce16.98@gmail.com"">p.a.y.mento.f.fi.ce16.98@gmail.com</a>
<a href=""mailto:pa.ym.e.n.toffic.e1.6.9.8@gmail.com"">pa.ym.e.n.toffic.e1.6.9.8@gmail.com</a>
<a href=""mailto:pa.ym.en.tof.fi.ce16.9.8@gmail.com"">pa.ym.en.tof.fi.ce16.9.8@gmail.com</a>
<a href=""mailto:pa.ym.e.n.tof.f.i.ce1.6.9.8@gmail.com"">pa.ym.e.n.tof.f.i.ce1.6.9.8@gmail.com</a>
<a href=""mailto:p.a.y.m.en.t.o.ff.ice1.698@gmail.com"">p.a.y.m.en.t.o.ff.ice1.698@gmail.com</a>
<a href=""mailto:paymen.tof.fice1.69.8@gmail.com"">paymen.tof.fice1.69.8@gmail.com</a>
<a href=""mailto:pay.men.tof.f.i.c.e.1.69.8@gmail.com"">pay.men.tof.f.i.c.e.1.69.8@gmail.com</a>
<a href=""mailto:paym.en.t.of.f.ice169.8@gmail.com"">paym.en.t.of.f.ice169.8@gmail.com</a>
<a href=""mailto:p.ay.m.entoff.i.ce1.698@gmail.com"">p.ay.m.entoff.i.ce1.698@gmail.com</a>
<a href=""mailto:pa.ym.e.n.tof.fi.c.e169.8@gmail.com"">pa.ym.e.n.tof.fi.c.e169.8@gmail.com</a>
<a href=""mailto:p.ay.m.e.n.to.ff.ice.16.98@gmail.com"">p.ay.m.e.n.to.ff.ice.16.98@gmail.com</a>
<a href=""mailto:pay.m.ento.f.fice1.698@gmail.com"">pay.m.ento.f.fice1.698@gmail.com</a>
<a href=""mailto:paym.ento.f.f.i.ce1.6.9.8@gmail.com"">paym.ento.f.f.i.ce1.6.9.8@gmail.com</a>
<a href=""mailto:paym.ento.f.f.ic.e16.98@gmail.com"">paym.ento.f.f.ic.e16.98@gmail.com</a>
<a href=""mailto:pa.ym.en.t.o.ffi.c.e16.9.8@gmail.com"">pa.ym.en.t.o.ffi.c.e16.9.8@gmail.com</a>
<a href=""mailto:p.ay.m.e.n.t.offic.e.1.6.98@gmail.com"">p.ay.m.e.n.t.offic.e.1.6.98@gmail.com</a>
<a href=""mailto:pa.yme.nt.o.ffic.e.16.9.8@gmail.com"">pa.yme.nt.o.ffic.e.16.9.8@gmail.com</a>
<a href=""mailto:p.a.ymen.t.of.fic.e.16.9.8@gmail.com"">p.a.ymen.t.of.fic.e.16.9.8@gmail.com</a>
<a href=""mailto:pa.yme.n.toff.i.ce16.9.8@gmail.com"">pa.yme.n.toff.i.ce16.9.8@gmail.com</a>
<a href=""mailto:p.ay.me.nt.o.f.f.i.c.e1698@gmail.com"">p.ay.me.nt.o.f.f.i.c.e1698@gmail.com</a>
<a href=""mailto:pa.ym.e.n.to.ff.ic.e16.98@gmail.com"">pa.ym.e.n.to.ff.ic.e16.98@gmail.com</a>
<a href=""mailto:p.a.y.men.t.off.i.c.e1.6.9.8@gmail.com"">p.a.y.men.t.off.i.c.e1.6.9.8@gmail.com</a>
<a href=""mailto:p.a.y.men.to.f.f.ice1.69.8@gmail.com"">p.a.y.men.to.f.f.ice1.69.8@gmail.com</a>
<a href=""mailto:p.ay.me.n.to.f.fi.ce.1698@gmail.com"">p.ay.me.n.to.f.fi.ce.1698@gmail.com</a>
<a href=""mailto:p.a.y.mento.f.fi.c.e16.98@gmail.com"">p.a.y.mento.f.fi.c.e16.98@gmail.com</a>
<a href=""mailto:p.a.ymen.t.o.ffic.e1698@gmail.com"">p.a.ymen.t.o.ffic.e1698@gmail.com</a>
<a href=""mailto:p.a.y.men.t.of.f.ice1.6.9.8@gmail.com"">p.a.y.men.t.of.f.ice1.6.9.8@gmail.com</a>
<a href=""mailto:pay.mentof.fice.16.98@gmail.com"">pay.mentof.fice.16.98@gmail.com</a>
<a href=""mailto:p.a.ym.e.nto.f.f.ice1698@gmail.com"">p.a.ym.e.nto.f.f.ice1698@gmail.com</a>
<a href=""mailto:paym.e.n.t.o.ff.ice169.8@gmail.com"">paym.e.n.t.o.ff.ice169.8@gmail.com</a>
<a href=""mailto:pa.y.me.n.to.f.f.i.ce.16.98@gmail.com"">pa.y.me.n.to.f.f.i.ce.16.98@gmail.com</a>
<a href=""mailto:p.aym.entof.fi.ce.1.69.8@gmail.com"">p.aym.entof.fi.ce.1.69.8@gmail.com</a>
<a href=""mailto:p.a.ym.ent.of.f.i.c.e.1.6.9.8@gmail.com"">p.a.ym.ent.of.f.i.c.e.1.6.9.8@gmail.com</a>
<a href=""mailto:pa.ym.ent.o.f.f.i.ce1.6.98@gmail.com"">pa.ym.ent.o.f.f.i.ce1.6.98@gmail.com</a>
<a href=""mailto:p.a.ym.en.to.ff.ic.e.16.9.8@gmail.com"">p.a.ym.en.to.ff.ic.e.16.9.8@gmail.com</a>
<a href=""mailto:pay.ment.o.f.f.i.c.e1.69.8@gmail.com"">pay.ment.o.f.f.i.c.e1.69.8@gmail.com</a>
<a href=""mailto:p.a.y.m.e.n.to.ff.i.c.e1698@gmail.com"">p.a.y.m.e.n.to.ff.i.c.e1698@gmail.com</a>
<a href=""mailto:paym.e.ntoffi.c.e.1.6.9.8@gmail.com"">paym.e.ntoffi.c.e.1.6.9.8@gmail.com</a>
<a href=""mailto:p.ay.m.e.nt.o.ff.i.ce.1698@gmail.com"">p.ay.m.e.nt.o.ff.i.ce.1698@gmail.com</a>
<a href=""mailto:p.ay.me.ntof.fic.e169.8@gmail.com"">p.ay.me.ntof.fic.e169.8@gmail.com</a>
<a href=""mailto:p.a.yme.nt.of.fi.c.e1.698@gmail.com"">p.a.yme.nt.of.fi.c.e1.698@gmail.com</a>
<a href=""mailto:p.aym.en.t.of.f.i.c.e1.69.8@gmail.com"">p.aym.en.t.of.f.i.c.e1.69.8@gmail.com</a>
<a href=""mailto:pa.y.m.e.nto.f.f.i.c.e.1.6.98@gmail.com"">pa.y.m.e.nto.f.f.i.c.e.1.6.98@gmail.com</a>
<a href=""mailto:p.a.ymen.toff.i.c.e1.698@gmail.com"">p.a.ymen.toff.i.c.e1.698@gmail.com</a>
<a href=""mailto:pa.yme.n.to.f.f.ic.e.1.698@gmail.com"">pa.yme.n.to.f.f.ic.e.1.698@gmail.com</a>
<a href=""mailto:payme.n.t.of.f.ice16.9.8@gmail.com"">payme.n.t.of.f.ice16.9.8@gmail.com</a>
<a href=""mailto:pa.ym.e.nt.o.f.f.ice.1.698@gmail.com"">pa.ym.e.nt.o.f.f.ice.1.698@gmail.com</a>
<a href=""mailto:p.a.ym.e.n.to.ff.ic.e1.69.8@gmail.com"">p.a.ym.e.n.to.ff.ic.e1.69.8@gmail.com</a>
<a href=""mailto:payme.n.tof.fic.e.1.69.8@gmail.com"">payme.n.tof.fic.e.1.69.8@gmail.com</a>
<a href=""mailto:pa.y.ment.of.f.ice.1698@gmail.com"">pa.y.ment.of.f.ice.1698@gmail.com</a>
<a href=""mailto:pa.y.men.t.of.f.ic.e1698@gmail.com"">pa.y.men.t.of.f.ic.e1698@gmail.com</a>
<a href=""mailto:paym.entof.fi.c.e.1698@gmail.com"">paym.entof.fi.c.e.1698@gmail.com</a>
<a href=""mailto:p.a.ym.e.n.toffice.1.6.98@gmail.com"">p.a.ym.e.n.toffice.1.6.98@gmail.com</a>
<a href=""mailto:pa.y.me.ntoff.ic.e.1.6.98@gmail.com"">pa.y.me.ntoff.ic.e.1.6.98@gmail.com</a>
<a href=""mailto:p.ay.m.en.to.f.fi.c.e1.698@gmail.com"">p.ay.m.en.to.f.fi.c.e1.698@gmail.com</a>
<a href=""mailto:pay.m.entoffice.1.698@gmail.com"">pay.m.entoffice.1.698@gmail.com</a>
<a href=""mailto:p.ay.m.en.tof.f.i.c.e.1.698@gmail.com"">p.ay.m.en.tof.f.i.c.e.1.698@gmail.com</a>
<a href=""mailto:payme.n.tof.f.i.c.e.1.698@gmail.com"">payme.n.tof.f.i.c.e.1.698@gmail.com</a>
<a href=""mailto:p.a.y.mentoff.i.ce16.9.8@gmail.com"">p.a.y.mentoff.i.ce16.9.8@gmail.com</a>
<a href=""mailto:pa.ym.e.n.t.office1.698@gmail.com"">pa.ym.e.n.t.office1.698@gmail.com</a>
<a href=""mailto:paymen.toff.i.ce169.8@gmail.com"">paymen.toff.i.ce169.8@gmail.com</a>
<a href=""mailto:pa.yme.nto.f.f.ic.e1.6.9.8@gmail.com"">pa.yme.nto.f.f.ic.e1.6.9.8@gmail.com</a>
<a href=""mailto:pa.ym.e.nt.o.f.f.i.ce16.9.8@gmail.com"">pa.ym.e.nt.o.f.f.i.ce16.9.8@gmail.com</a>
<a href=""mailto:p.a.y.m.en.to.f.f.ic.e.1.6.98@gmail.com"">p.a.y.m.en.to.f.f.ic.e.1.6.98@gmail.com</a>
<a href=""mailto:pa.y.me.n.toff.i.ce.1.698@gmail.com"">pa.y.me.n.toff.i.ce.1.698@gmail.com</a>
<a href=""mailto:pa.ym.e.nt.of.fi.c.e.1.6.98@gmail.com"">pa.ym.e.nt.of.fi.c.e.1.6.98@gmail.com</a>
<a href=""mailto:pa.y.me.n.tof.f.i.ce.1698@gmail.com"">pa.y.me.n.tof.f.i.ce.1698@gmail.com</a>
<a href=""mailto:pa.yme.n.to.f.fi.ce.1698@gmail.com"">pa.yme.n.to.f.fi.ce.1698@gmail.com</a>
<a href=""mailto:paymentof.fi.c.e.1.69.8@gmail.com"">paymentof.fi.c.e.1.69.8@gmail.com</a>
<a href=""mailto:p.a.y.m.e.nt.of.f.ic.e.1.6.9.8@gmail.com"">p.a.y.m.e.nt.of.f.ic.e.1.6.9.8@gmail.com</a>
<a href=""mailto:p.a.y.men.t.office169.8@gmail.com"">p.a.y.men.t.office169.8@gmail.com</a>
<a href=""mailto:pa.y.m.e.nt.offic.e169.8@gmail.com"">pa.y.m.e.nt.offic.e169.8@gmail.com</a>
<a href=""mailto:pay.m.e.n.t.o.ff.ice.16.9.8@gmail.com"">pay.m.e.n.t.o.ff.ice.16.9.8@gmail.com</a>
<a href=""mailto:p.ay.m.entoffi.ce1.69.8@gmail.com"">p.ay.m.entoffi.ce1.69.8@gmail.com</a>
<a href=""mailto:pa.yme.n.t.o.ffi.c.e16.9.8@gmail.com"">pa.yme.n.t.o.ffi.c.e16.9.8@gmail.com</a>
<a href=""mailto:p.ay.m.e.nto.f.fice1.6.9.8@gmail.com"">p.ay.m.e.nto.f.fice1.6.9.8@gmail.com</a>
<a href=""mailto:p.ayme.nto.f.fi.c.e1.6.9.8@gmail.com"">p.ayme.nto.f.fi.c.e1.6.9.8@gmail.com</a>
<a href=""mailto:p.ay.ment.of.f.ic.e.1.69.8@gmail.com"">p.ay.ment.of.f.ic.e.1.69.8@gmail.com</a>
<a href=""mailto:p.aymen.t.o.ffi.c.e16.9.8@gmail.com"">p.aymen.t.o.ffi.c.e16.9.8@gmail.com</a>
<a href=""mailto:p.a.y.me.nto.ffi.ce.16.98@gmail.com"">p.a.y.me.nto.ffi.ce.16.98@gmail.com</a>
<a href=""mailto:p.aym.e.nto.f.f.i.ce1.698@gmail.com"">p.aym.e.nto.f.f.i.ce1.698@gmail.com</a>
<a href=""mailto:pa.ym.e.nto.f.fice.169.8@gmail.com"">pa.ym.e.nto.f.fice.169.8@gmail.com</a>
<a href=""mailto:pay.ment.o.f.fic.e1698@gmail.com"">pay.ment.o.f.fic.e1698@gmail.com</a>
<a href=""mailto:p.ayme.nt.o.ff.ic.e1.6.98@gmail.com"">p.ayme.nt.o.ff.ic.e1.6.98@gmail.com</a>
<a href=""mailto:p.a.y.me.n.t.of.fi.c.e1698@gmail.com"">p.a.y.me.n.t.of.fi.c.e1698@gmail.com</a>
<a href=""mailto:paym.entof.fi.c.e.1.69.8@gmail.com"">paym.entof.fi.c.e.1.69.8@gmail.com</a>
<a href=""mailto:paym.e.n.toffi.ce.1698@gmail.com"">paym.e.n.toffi.ce.1698@gmail.com</a>
<a href=""mailto:p.ayme.n.toff.i.c.e.1.6.98@gmail.com"">p.ayme.n.toff.i.c.e.1.6.98@gmail.com</a>
<a href=""mailto:p.ay.men.tof.f.ic.e16.9.8@gmail.com"">p.ay.men.tof.f.ic.e16.9.8@gmail.com</a>
<a href=""mailto:pa.y.me.n.to.f.fi.c.e.16.9.8@gmail.com"">pa.y.me.n.to.f.fi.c.e.16.9.8@gmail.com</a>
<a href=""mailto:pa.y.men.t.o.f.fi.c.e1.6.9.8@gmail.com"">pa.y.men.t.o.f.fi.c.e1.6.9.8@gmail.com</a>
<a href=""mailto:p.a.ym.e.n.tof.fic.e.1.69.8@gmail.com"">p.a.ym.e.n.tof.fic.e.1.69.8@gmail.com</a>
<a href=""mailto:pa.y.m.en.to.f.f.i.ce.1.698@gmail.com"">pa.y.m.en.to.f.f.i.ce.1.698@gmail.com</a>
<a href=""mailto:p.aymen.t.o.f.f.ice16.98@gmail.com"">p.aymen.t.o.f.f.ice16.98@gmail.com</a>
<a href=""mailto:p.a.ym.e.n.t.o.ff.ic.e1.6.9.8@gmail.com"">p.a.ym.e.n.t.o.ff.ic.e1.6.9.8@gmail.com</a>
<a href=""mailto:p.ay.m.ent.of.fice.16.98@gmail.com"">p.ay.m.ent.of.fice.16.98@gmail.com</a>
<a href=""mailto:pay.men.t.o.f.fi.c.e1.6.9.8@gmail.com"">pay.men.t.o.f.fi.c.e1.6.9.8@gmail.com</a>
<a href=""mailto:pa.y.men.to.ff.ic.e1.698@gmail.com"">pa.y.men.to.ff.ic.e1.698@gmail.com</a>
<a href=""mailto:paymen.toff.ic.e.1.698@gmail.com"">paymen.toff.ic.e.1.698@gmail.com</a>
<a href=""mailto:pa.ym.e.n.toffi.c.e.1.698@gmail.com"">pa.ym.e.n.toffi.c.e.1.698@gmail.com</a>
<a href=""mailto:pa.y.m.e.n.to.ffi.ce.16.9.8@gmail.com"">pa.y.m.e.n.to.ffi.ce.16.9.8@gmail.com</a>
<a href=""mailto:p.a.y.m.e.ntoffice169.8@gmail.com"">p.a.y.m.e.ntoffice169.8@gmail.com</a>
<a href=""mailto:p.a.yment.of.fi.ce1698@gmail.com"">p.a.yment.of.fi.ce1698@gmail.com</a>
<a href=""mailto:pa.y.m.e.n.tof.f.ic.e.1.69.8@gmail.com"">pa.y.m.e.n.tof.f.ic.e.1.69.8@gmail.com</a>
<a href=""mailto:p.a.y.mento.ff.i.ce1.6.9.8@gmail.com"">p.a.y.mento.ff.i.ce1.6.9.8@gmail.com</a>
<a href=""mailto:p.ay.me.nt.of.f.ice1.6.98@gmail.com"">p.ay.me.nt.of.f.ice1.6.98@gmail.com</a>
<a href=""mailto:pa.y.m.e.nto.ffice1.69.8@gmail.com"">pa.y.m.e.nto.ffice1.69.8@gmail.com</a>
<a href=""mailto:pay.mento.ffice.1698@gmail.com"">pay.mento.ffice.1698@gmail.com</a>
<a href=""mailto:paym.en.t.o.ffi.c.e1.6.9.8@gmail.com"">paym.en.t.o.ffi.c.e1.6.9.8@gmail.com</a>
<a href=""mailto:pa.ym.ent.of.f.i.c.e16.98@gmail.com"">pa.ym.ent.of.f.i.c.e16.98@gmail.com</a>
<a href=""mailto:p.ay.men.tof.fi.c.e169.8@gmail.com"">p.ay.men.tof.fi.c.e169.8@gmail.com</a>
<a href=""mailto:paym.en.to.ff.ice1.698@gmail.com"">paym.en.to.ff.ice1.698@gmail.com</a>
<a href=""mailto:pa.ym.e.ntof.f.i.ce16.9.8@gmail.com"">pa.ym.e.ntof.f.i.ce16.9.8@gmail.com</a>
<a href=""mailto:payme.nt.off.i.ce1.698@gmail.com"">payme.nt.off.i.ce1.698@gmail.com</a>
<a href=""mailto:pay.m.e.n.to.f.f.i.ce.1.69.8@gmail.com"">pay.m.e.n.to.f.f.i.ce.1.69.8@gmail.com</a>
<a href=""mailto:p.a.ym.e.ntof.fi.ce1.69.8@gmail.com"">p.a.ym.e.ntof.fi.ce1.69.8@gmail.com</a>
<a href=""mailto:p.a.y.m.en.t.o.ffic.e.1.6.9.8@gmail.com"">p.a.y.m.en.t.o.ffic.e.1.6.9.8@gmail.com</a>
<a href=""mailto:p.a.y.me.nt.o.f.fi.ce169.8@gmail.com"">p.a.y.me.nt.o.f.fi.ce169.8@gmail.com</a>
<a href=""mailto:paym.e.nt.off.i.ce1.6.98@gmail.com"">paym.e.nt.off.i.ce1.6.98@gmail.com</a>
<a href=""mailto:p.a.y.m.en.t.off.i.c.e.16.98@gmail.com"">p.a.y.m.en.t.off.i.c.e.16.98@gmail.com</a>
<a href=""mailto:p.aym.e.ntoffice1.698@gmail.com"">p.aym.e.ntoffice1.698@gmail.com</a>
<a href=""mailto:p.a.ym.ent.o.f.f.ic.e.169.8@gmail.com"">p.a.ym.ent.o.f.f.ic.e.169.8@gmail.com</a>
<a href=""mailto:pa.y.mento.f.fic.e1.6.9.8@gmail.com"">pa.y.mento.f.fic.e1.6.9.8@gmail.com</a>
<a href=""mailto:p.a.ymento.f.f.ic.e.16.98@gmail.com"">p.a.ymento.f.f.ic.e.16.98@gmail.com</a>
<a href=""mailto:p.a.y.m.entoff.i.ce16.9.8@gmail.com"">p.a.y.m.entoff.i.ce16.9.8@gmail.com</a>
<a href=""mailto:p.ay.m.entof.fic.e1.6.98@gmail.com"">p.ay.m.entof.fic.e1.6.98@gmail.com</a>
<a href=""mailto:p.aym.e.ntof.f.ice.1.6.98@gmail.com"">p.aym.e.ntof.f.ice.1.6.98@gmail.com</a>
<a href=""mailto:pay.m.e.n.toff.ic.e.1.69.8@gmail.com"">pay.m.e.n.toff.ic.e.1.69.8@gmail.com</a>
<a href=""mailto:pay.men.to.ffi.ce1698@gmail.com"">pay.men.to.ffi.ce1698@gmail.com</a>
<a href=""mailto:p.ay.m.e.n.tof.f.ice1698@gmail.com"">p.ay.m.e.n.tof.f.ice1698@gmail.com</a>
<a href=""mailto:pay.m.en.t.o.ff.ic.e1.6.98@gmail.com"">pay.m.en.t.o.ff.ic.e1.6.98@gmail.com</a>
<a href=""mailto:p.aym.en.t.o.ffi.c.e1.698@gmail.com"">p.aym.en.t.o.ffi.c.e1.698@gmail.com</a>
<a href=""mailto:payme.nto.ff.i.ce.1.698@gmail.com"">payme.nto.ff.i.ce.1.698@gmail.com</a>
<a href=""mailto:pa.y.me.n.tof.fi.ce1698@gmail.com"">pa.y.me.n.tof.fi.ce1698@gmail.com</a>
<a href=""mailto:pay.m.en.t.o.f.f.ic.e.1698@gmail.com"">pay.m.en.t.o.f.f.ic.e.1698@gmail.com</a>
<a href=""mailto:pa.y.m.ent.o.f.f.ice1.6.9.8@gmail.com"">pa.y.m.ent.o.f.f.ice1.6.9.8@gmail.com</a>
<a href=""mailto:pa.y.m.en.to.f.f.i.c.e.169.8@gmail.com"">pa.y.m.en.to.f.f.i.c.e.169.8@gmail.com</a>
<a href=""mailto:p.ay.m.e.n.toffi.c.e.1.698@gmail.com"">p.ay.m.e.n.toffi.c.e.1.698@gmail.com</a>
<a href=""mailto:pay.ment.off.i.c.e.169.8@gmail.com"">pay.ment.off.i.c.e.169.8@gmail.com</a>
<a href=""mailto:p.a.y.men.toff.ic.e16.9.8@gmail.com"">p.a.y.men.toff.ic.e16.9.8@gmail.com</a>
<a href=""mailto:p.a.y.men.t.of.f.ic.e.16.9.8@gmail.com"">p.a.y.men.t.of.f.ic.e.16.9.8@gmail.com</a>
<a href=""mailto:paym.e.nt.o.f.f.i.ce.16.98@gmail.com"">paym.e.nt.o.f.f.i.ce.16.98@gmail.com</a>
<a href=""mailto:p.a.y.m.en.t.o.ff.ic.e1.6.9.8@gmail.com"">p.a.y.m.en.t.o.ff.ic.e1.6.9.8@gmail.com</a>
<a href=""mailto:paymento.ffice.1.6.98@gmail.com"">paymento.ffice.1.6.98@gmail.com</a>
<a href=""mailto:p.ay.me.n.t.o.f.f.i.ce.1.698@gmail.com"">p.ay.me.n.t.o.f.f.i.ce.1.698@gmail.com</a>
<a href=""mailto:pa.y.m.e.n.t.o.f.fice.1.6.98@gmail.com"">pa.y.m.e.n.t.o.f.fice.1.6.98@gmail.com</a>
<a href=""mailto:p.ay.m.ento.f.f.ice.1.698@gmail.com"">p.ay.m.ento.f.f.ice.1.698@gmail.com</a>
<a href=""mailto:paymento.f.f.ice.169.8@gmail.com"">paymento.f.f.ice.169.8@gmail.com</a>
<a href=""mailto:pa.y.ment.off.i.ce.1.6.98@gmail.com"">pa.y.ment.off.i.ce.1.6.98@gmail.com</a>
<a href=""mailto:p.ay.men.to.ff.ice.1.698@gmail.com"">p.ay.men.to.ff.ice.1.698@gmail.com</a>
<a href=""mailto:payme.nt.o.f.f.i.ce.1698@gmail.com"">payme.nt.o.f.f.i.ce.1698@gmail.com</a>
<a href=""mailto:p.ayme.n.tof.f.i.c.e1.698@gmail.com"">p.ayme.n.tof.f.i.c.e1.698@gmail.com</a>
<a href=""mailto:pa.y.me.nt.of.fice16.9.8@gmail.com"">pa.y.me.nt.of.fice16.9.8@gmail.com</a>
<a href=""mailto:paymen.tof.fic.e.1.69.8@gmail.com"">paymen.tof.fic.e.1.69.8@gmail.com</a>
<a href=""mailto:p.a.yme.n.to.f.fice.169.8@gmail.com"">p.a.yme.n.to.f.fice.169.8@gmail.com</a>
<a href=""mailto:p.a.yment.o.ff.ice.169.8@gmail.com"">p.a.yment.o.ff.ice.169.8@gmail.com</a>
<a href=""mailto:pa.y.m.entoffice.1.698@gmail.com"">pa.y.m.entoffice.1.698@gmail.com</a>
<a href=""mailto:p.ayme.nt.o.ffi.c.e.16.98@gmail.com"">p.ayme.nt.o.ffi.c.e.16.98@gmail.com</a>
<a href=""mailto:pa.y.m.en.to.ffice1.69.8@gmail.com"">pa.y.m.en.to.ffice1.69.8@gmail.com</a>
<a href=""mailto:p.ay.men.t.o.ffi.c.e.1.69.8@gmail.com"">p.ay.men.t.o.ffi.c.e.1.69.8@gmail.com</a>
<a href=""mailto:pa.y.m.e.n.t.of.f.ic.e.16.9.8@gmail.com"">pa.y.m.e.n.t.of.f.ic.e.16.9.8@gmail.com</a>
<a href=""mailto:p.aym.ent.offic.e1698@gmail.com"">p.aym.ent.offic.e1698@gmail.com</a>
<a href=""mailto:pay.m.e.nto.ff.ic.e.1.6.98@gmail.com"">pay.m.e.nto.ff.ic.e.1.6.98@gmail.com</a>
<a href=""mailto:pa.ymen.toff.ice.1698@gmail.com"">pa.ymen.toff.ice.1698@gmail.com</a>
<a href=""mailto:pa.ym.en.toff.i.c.e16.9.8@gmail.com"">pa.ym.en.toff.i.c.e16.9.8@gmail.com</a>
<a href=""mailto:alexmrogu@gmail.com"">alexmrogu@gmail.com</a>
<a href=""mailto:alex.m.r.o.g.u@gmail.com"">alex.m.r.o.g.u@gmail.com</a>
<a href=""mailto:a.l.e.xm.ro.g.u@gmail.com"">a.l.e.xm.ro.g.u@gmail.com</a>
<a href=""mailto:a.l.e.xmr.og.u@gmail.com"">a.l.e.xmr.og.u@gmail.com</a>
<a href=""mailto:al.ex.m.rogu@gmail.com"">al.ex.m.rogu@gmail.com</a>
<a href=""mailto:al.exmro.gu@gmail.com"">al.exmro.gu@gmail.com</a>
<a href=""mailto:a.lexmr.og.u@gmail.com"">a.lexmr.og.u@gmail.com</a>
<a href=""mailto:alexmro.g.u@gmail.com"">alexmro.g.u@gmail.com</a>
<a href=""mailto:alex.m.ro.gu@gmail.com"">alex.m.ro.gu@gmail.com</a>
<a href=""mailto:a.l.ex.mrog.u@gmail.com"">a.l.ex.mrog.u@gmail.com</a>
<a href=""mailto:a.lexm.r.og.u@gmail.com"">a.lexm.r.og.u@gmail.com</a>
<a href=""mailto:a.le.xm.r.o.g.u@gmail.com"">a.le.xm.r.o.g.u@gmail.com</a>
<a href=""mailto:a.l.e.x.m.ro.g.u@gmail.com"">a.l.e.x.m.ro.g.u@gmail.com</a>
<a href=""mailto:a.l.ex.m.ro.g.u@gmail.com"">a.l.ex.m.ro.g.u@gmail.com</a>
<a href=""mailto:a.lex.mrog.u@gmail.com"">a.lex.mrog.u@gmail.com</a>
<a href=""mailto:a.l.e.x.m.r.o.gu@gmail.com"">a.l.e.x.m.r.o.gu@gmail.com</a>
<a href=""mailto:a.le.xmrog.u@gmail.com"">a.le.xmrog.u@gmail.com</a>
<a href=""mailto:al.e.xmrog.u@gmail.com"">al.e.xmrog.u@gmail.com</a>
<a href=""mailto:a.l.e.xmro.g.u@gmail.com"">a.l.e.xmro.g.u@gmail.com</a>
<a href=""mailto:a.lex.m.r.ogu@gmail.com"">a.lex.m.r.ogu@gmail.com</a>
<a href=""mailto:al.ex.m.r.o.gu@gmail.com"">al.ex.m.r.o.gu@gmail.com</a>
<a href=""mailto:a.le.xm.ro.g.u@gmail.com"">a.le.xm.ro.g.u@gmail.com</a>
<a href=""mailto:a.l.ex.m.ro.gu@gmail.com"">a.l.ex.m.ro.gu@gmail.com</a>
<a href=""mailto:ale.xm.ro.gu@gmail.com"">ale.xm.ro.gu@gmail.com</a>
<a href=""mailto:al.e.x.m.r.ogu@gmail.com"">al.e.x.m.r.ogu@gmail.com</a>
<a href=""mailto:a.le.x.mr.o.g.u@gmail.com"">a.le.x.mr.o.g.u@gmail.com</a>
<a href=""mailto:a.l.e.xm.ro.gu@gmail.com"">a.l.e.xm.ro.gu@gmail.com</a>
<a href=""mailto:alexm.r.og.u@gmail.com"">alexm.r.og.u@gmail.com</a>
<a href=""mailto:a.le.x.mrogu@gmail.com"">a.le.x.mrogu@gmail.com</a>
<a href=""mailto:a.l.e.x.mr.og.u@gmail.com"">a.l.e.x.mr.og.u@gmail.com</a>
<a href=""mailto:a.l.e.x.m.r.ogu@gmail.com"">a.l.e.x.m.r.ogu@gmail.com</a>
<a href=""mailto:alexm.r.o.gu@gmail.com"">alexm.r.o.gu@gmail.com</a>
<a href=""mailto:a.l.e.xm.rog.u@gmail.com"">a.l.e.xm.rog.u@gmail.com</a>
<a href=""mailto:alexmr.og.u@gmail.com"">alexmr.og.u@gmail.com</a>
<a href=""mailto:a.l.exmr.o.gu@gmail.com"">a.l.exmr.o.gu@gmail.com</a>
<a href=""mailto:alex.m.r.o.gu@gmail.com"">alex.m.r.o.gu@gmail.com</a>
<a href=""mailto:al.e.xm.rogu@gmail.com"">al.e.xm.rogu@gmail.com</a>
<a href=""mailto:a.l.e.xm.r.ogu@gmail.com"">a.l.e.xm.r.ogu@gmail.com</a>
<a href=""mailto:al.e.xmr.o.gu@gmail.com"">al.e.xmr.o.gu@gmail.com</a>
<a href=""mailto:a.l.e.x.m.r.o.g.u@gmail.com"">a.l.e.x.m.r.o.g.u@gmail.com</a>
<a href=""mailto:a.l.ex.m.rogu@gmail.com"">a.l.ex.m.rogu@gmail.com</a>
<a href=""mailto:a.lexm.ro.g.u@gmail.com"">a.lexm.ro.g.u@gmail.com</a>
<a href=""mailto:al.e.x.mr.ogu@gmail.com"">al.e.x.mr.ogu@gmail.com</a>
<a href=""mailto:a.l.e.xmrog.u@gmail.com"">a.l.e.xmrog.u@gmail.com</a>
<a href=""mailto:a.l.exm.ro.gu@gmail.com"">a.l.exm.ro.gu@gmail.com</a>
<a href=""mailto:a.lexmr.ogu@gmail.com"">a.lexmr.ogu@gmail.com</a>
<a href=""mailto:a.lex.m.r.o.g.u@gmail.com"">a.lex.m.r.o.g.u@gmail.com</a>
<a href=""mailto:al.exmrogu@gmail.com"">al.exmrogu@gmail.com</a>
<a href=""mailto:a.le.xmro.gu@gmail.com"">a.le.xmro.gu@gmail.com</a>
<a href=""mailto:ale.x.m.r.og.u@gmail.com"">ale.x.m.r.og.u@gmail.com</a>
<a href=""mailto:al.exmr.og.u@gmail.com"">al.exmr.og.u@gmail.com</a>
<a href=""mailto:ale.x.mr.o.g.u@gmail.com"">ale.x.mr.o.g.u@gmail.com</a>
<a href=""mailto:ale.xm.r.og.u@gmail.com"">ale.xm.r.og.u@gmail.com</a>
<a href=""mailto:ale.xm.rogu@gmail.com"">ale.xm.rogu@gmail.com</a>
<a href=""mailto:al.exmr.o.gu@gmail.com"">al.exmr.o.gu@gmail.com</a>
<a href=""mailto:al.exmrog.u@gmail.com"">al.exmrog.u@gmail.com</a>
<a href=""mailto:a.l.e.xmr.o.gu@gmail.com"">a.l.e.xmr.o.gu@gmail.com</a>
<a href=""mailto:a.le.x.mrog.u@gmail.com"">a.le.x.mrog.u@gmail.com</a>
<a href=""mailto:al.e.xm.r.ogu@gmail.com"">al.e.xm.r.ogu@gmail.com</a>
<a href=""mailto:a.le.xm.r.o.gu@gmail.com"">a.le.xm.r.o.gu@gmail.com</a>
<a href=""mailto:a.l.ex.m.r.og.u@gmail.com"">a.l.ex.m.r.og.u@gmail.com</a>
<a href=""mailto:al.e.xm.r.o.gu@gmail.com"">al.e.xm.r.o.gu@gmail.com</a>
<a href=""mailto:alexmr.o.g.u@gmail.com"">alexmr.o.g.u@gmail.com</a>
<a href=""mailto:ale.x.m.ro.gu@gmail.com"">ale.x.m.ro.gu@gmail.com</a>
<a href=""mailto:ale.x.mro.g.u@gmail.com"">ale.x.mro.g.u@gmail.com</a>
<a href=""mailto:al.ex.m.ro.gu@gmail.com"">al.ex.m.ro.gu@gmail.com</a>
<a href=""mailto:al.e.xmro.gu@gmail.com"">al.e.xmro.gu@gmail.com</a>
<a href=""mailto:a.le.xmr.og.u@gmail.com"">a.le.xmr.og.u@gmail.com</a>
<a href=""mailto:ale.xm.r.ogu@gmail.com"">ale.xm.r.ogu@gmail.com</a>
<a href=""mailto:ale.x.mrogu@gmail.com"">ale.x.mrogu@gmail.com</a>
<a href=""mailto:a.lexm.ro.gu@gmail.com"">a.lexm.ro.gu@gmail.com</a>
<a href=""mailto:a.l.e.x.mro.g.u@gmail.com"">a.l.e.x.mro.g.u@gmail.com</a>
<a href=""mailto:al.e.x.m.r.og.u@gmail.com"">al.e.x.m.r.og.u@gmail.com</a>
<a href=""mailto:a.l.e.x.mrogu@gmail.com"">a.l.e.x.mrogu@gmail.com</a>
<a href=""mailto:a.lex.mr.o.g.u@gmail.com"">a.lex.mr.o.g.u@gmail.com</a>
<a href=""mailto:al.ex.m.rog.u@gmail.com"">al.ex.m.rog.u@gmail.com</a>
<a href=""mailto:alexmr.ogu@gmail.com"">alexmr.ogu@gmail.com</a>
<a href=""mailto:a.lexmro.gu@gmail.com"">a.lexmro.gu@gmail.com</a>
<a href=""mailto:alexm.r.o.g.u@gmail.com"">alexm.r.o.g.u@gmail.com</a>
<a href=""mailto:a.l.e.xmr.ogu@gmail.com"">a.l.e.xmr.ogu@gmail.com</a>
<a href=""mailto:a.l.exm.ro.g.u@gmail.com"">a.l.exm.ro.g.u@gmail.com</a>
<a href=""mailto:a.l.e.xmr.o.g.u@gmail.com"">a.l.e.xmr.o.g.u@gmail.com</a>
<a href=""mailto:a.lexmr.o.gu@gmail.com"">a.lexmr.o.gu@gmail.com</a>
<a href=""mailto:a.l.ex.m.r.ogu@gmail.com"">a.l.ex.m.r.ogu@gmail.com</a>
<a href=""mailto:a.l.exmr.o.g.u@gmail.com"">a.l.exmr.o.g.u@gmail.com</a>
<a href=""mailto:al.e.xmro.g.u@gmail.com"">al.e.xmro.g.u@gmail.com</a>
<a href=""mailto:a.lex.mro.g.u@gmail.com"">a.lex.mro.g.u@gmail.com</a>
<a href=""mailto:a.le.x.m.ro.g.u@gmail.com"">a.le.x.m.ro.g.u@gmail.com</a>
<a href=""mailto:a.l.e.x.m.rog.u@gmail.com"">a.l.e.x.m.rog.u@gmail.com</a>
<a href=""mailto:alex.mrogu@gmail.com"">alex.mrogu@gmail.com</a>
<a href=""mailto:ale.xmr.o.g.u@gmail.com"">ale.xmr.o.g.u@gmail.com</a>
<a href=""mailto:alexm.r.ogu@gmail.com"">alexm.r.ogu@gmail.com</a>
<a href=""mailto:al.ex.mrogu@gmail.com"">al.ex.mrogu@gmail.com</a>
<a href=""mailto:a.l.ex.mr.ogu@gmail.com"">a.l.ex.mr.ogu@gmail.com</a>
<a href=""mailto:al.exm.r.ogu@gmail.com"">al.exm.r.ogu@gmail.com</a>
<a href=""mailto:a.l.ex.mr.o.gu@gmail.com"">a.l.ex.mr.o.gu@gmail.com</a>
<a href=""mailto:al.e.xm.r.og.u@gmail.com"">al.e.xm.r.og.u@gmail.com</a>
<a href=""mailto:a.lexm.rogu@gmail.com"">a.lexm.rogu@gmail.com</a>
<a href=""mailto:alex.mr.ogu@gmail.com"">alex.mr.ogu@gmail.com</a>
<a href=""mailto:al.e.xm.r.o.g.u@gmail.com"">al.e.xm.r.o.g.u@gmail.com</a>
<a href=""mailto:alexmro.gu@gmail.com"">alexmro.gu@gmail.com</a>
<a href=""mailto:al.exm.r.o.g.u@gmail.com"">al.exm.r.o.g.u@gmail.com</a>
<a href=""mailto:al.exm.ro.g.u@gmail.com"">al.exm.ro.g.u@gmail.com</a>
<a href=""mailto:a.l.e.x.mr.ogu@gmail.com"">a.l.e.x.mr.ogu@gmail.com</a>
<a href=""mailto:a.lex.m.r.o.gu@gmail.com"">a.lex.m.r.o.gu@gmail.com</a>
<a href=""mailto:al.exm.rogu@gmail.com"">al.exm.rogu@gmail.com</a>
<a href=""mailto:a.le.x.m.rog.u@gmail.com"">a.le.x.m.rog.u@gmail.com</a>
<a href=""mailto:a.l.e.x.mr.o.g.u@gmail.com"">a.l.e.x.mr.o.g.u@gmail.com</a>
<a href=""mailto:a.lex.mro.gu@gmail.com"">a.lex.mro.gu@gmail.com</a>
<a href=""mailto:al.exm.ro.gu@gmail.com"">al.exm.ro.gu@gmail.com</a>
<a href=""mailto:a.l.e.xmrogu@gmail.com"">a.l.e.xmrogu@gmail.com</a>
<a href=""mailto:a.lexm.r.o.g.u@gmail.com"">a.lexm.r.o.g.u@gmail.com</a>
<a href=""mailto:a.l.ex.mro.gu@gmail.com"">a.l.ex.mro.gu@gmail.com</a>
<a href=""mailto:a.lexmrogu@gmail.com"">a.lexmrogu@gmail.com</a>
<a href=""mailto:al.e.x.m.ro.g.u@gmail.com"">al.e.x.m.ro.g.u@gmail.com</a>
<a href=""mailto:a.l.e.xm.r.og.u@gmail.com"">a.l.e.xm.r.og.u@gmail.com</a>
<a href=""mailto:ale.x.mr.o.gu@gmail.com"">ale.x.mr.o.gu@gmail.com</a>
<a href=""mailto:ale.x.mro.gu@gmail.com"">ale.x.mro.gu@gmail.com</a>
<a href=""mailto:a.le.xm.ro.gu@gmail.com"">a.le.xm.ro.gu@gmail.com</a>
<a href=""mailto:al.ex.m.ro.g.u@gmail.com"">al.ex.m.ro.g.u@gmail.com</a>
<a href=""mailto:alex.m.r.ogu@gmail.com"">alex.m.r.ogu@gmail.com</a>
<a href=""mailto:a.lexm.rog.u@gmail.com"">a.lexm.rog.u@gmail.com</a>
<a href=""mailto:al.ex.mrog.u@gmail.com"">al.ex.mrog.u@gmail.com</a>
<a href=""mailto:a.l.e.x.m.rogu@gmail.com"">a.l.e.x.m.rogu@gmail.com</a>
<a href=""mailto:ale.x.m.ro.g.u@gmail.com"">ale.x.m.ro.g.u@gmail.com</a>
<a href=""mailto:al.ex.m.r.o.g.u@gmail.com"">al.ex.m.r.o.g.u@gmail.com</a>
<a href=""mailto:alex.mro.gu@gmail.com"">alex.mro.gu@gmail.com</a>
<a href=""mailto:al.e.x.mr.og.u@gmail.com"">al.e.x.mr.og.u@gmail.com</a>
<a href=""mailto:a.l.e.xm.r.o.gu@gmail.com"">a.l.e.xm.r.o.gu@gmail.com</a>
<a href=""mailto:a.lexm.r.ogu@gmail.com"">a.lexm.r.ogu@gmail.com</a>
<a href=""mailto:al.ex.mr.o.gu@gmail.com"">al.ex.mr.o.gu@gmail.com</a>
<a href=""mailto:a.l.ex.mro.g.u@gmail.com"">a.l.ex.mro.g.u@gmail.com</a>
<a href=""mailto:al.e.xmr.ogu@gmail.com"">al.e.xmr.ogu@gmail.com</a>
<a href=""mailto:alexm.ro.g.u@gmail.com"">alexm.ro.g.u@gmail.com</a>
<a href=""mailto:a.le.x.m.ro.gu@gmail.com"">a.le.x.m.ro.gu@gmail.com</a>
<a href=""mailto:al.e.x.mrogu@gmail.com"">al.e.x.mrogu@gmail.com</a>
<a href=""mailto:a.le.x.m.r.ogu@gmail.com"">a.le.x.m.r.ogu@gmail.com</a>
<a href=""mailto:alex.m.rogu@gmail.com"">alex.m.rogu@gmail.com</a>
<a href=""mailto:ale.xmrogu@gmail.com"">ale.xmrogu@gmail.com</a>
<a href=""mailto:a.l.exm.rogu@gmail.com"">a.l.exm.rogu@gmail.com</a>
<a href=""mailto:a.l.ex.m.rog.u@gmail.com"">a.l.ex.m.rog.u@gmail.com</a>
<a href=""mailto:a.lexmro.g.u@gmail.com"">a.lexmro.g.u@gmail.com</a>
<a href=""mailto:a.le.x.mr.ogu@gmail.com"">a.le.x.mr.ogu@gmail.com</a>
<a href=""mailto:al.ex.mr.ogu@gmail.com"">al.ex.mr.ogu@gmail.com</a>
<a href=""mailto:al.e.x.mr.o.g.u@gmail.com"">al.e.x.mr.o.g.u@gmail.com</a>
<a href=""mailto:al.exm.r.o.gu@gmail.com"">al.exm.r.o.gu@gmail.com</a>
<a href=""mailto:a.lexmr.o.g.u@gmail.com"">a.lexmr.o.g.u@gmail.com</a>
<a href=""mailto:al.e.xm.ro.g.u@gmail.com"">al.e.xm.ro.g.u@gmail.com</a>
<a href=""mailto:al.e.x.m.r.o.gu@gmail.com"">al.e.x.m.r.o.gu@gmail.com</a>
<a href=""mailto:al.ex.mro.g.u@gmail.com"">al.ex.mro.g.u@gmail.com</a>
<a href=""mailto:ale.xmrog.u@gmail.com"">ale.xmrog.u@gmail.com</a>
<a href=""mailto:a.lex.mr.ogu@gmail.com"">a.lex.mr.ogu@gmail.com</a>
<a href=""mailto:alex.mr.o.gu@gmail.com"">alex.mr.o.gu@gmail.com</a>
<a href=""mailto:al.ex.mr.o.g.u@gmail.com"">al.ex.mr.o.g.u@gmail.com</a>
<a href=""mailto:al.e.x.m.rogu@gmail.com"">al.e.x.m.rogu@gmail.com</a>
<a href=""mailto:ale.xmr.og.u@gmail.com"">ale.xmr.og.u@gmail.com</a>
<a href=""mailto:ale.x.mr.ogu@gmail.com"">ale.x.mr.ogu@gmail.com</a>
<a href=""mailto:a.le.xmrogu@gmail.com"">a.le.xmrogu@gmail.com</a>
<a href=""mailto:a.l.ex.mr.og.u@gmail.com"">a.l.ex.mr.og.u@gmail.com</a>
<a href=""mailto:a.le.x.mro.gu@gmail.com"">a.le.x.mro.gu@gmail.com</a>
<a href=""mailto:alexm.rogu@gmail.com"">alexm.rogu@gmail.com</a>
<a href=""mailto:a.l.ex.mrogu@gmail.com"">a.l.ex.mrogu@gmail.com</a>
<a href=""mailto:ale.xmr.ogu@gmail.com"">ale.xmr.ogu@gmail.com</a>
<a href=""mailto:alexmr.o.gu@gmail.com"">alexmr.o.gu@gmail.com</a>
<a href=""mailto:a.l.e.x.mro.gu@gmail.com"">a.l.e.x.mro.gu@gmail.com</a>
<a href=""mailto:a.lex.m.ro.g.u@gmail.com"">a.lex.m.ro.g.u@gmail.com</a>
<a href=""mailto:alexmrog.u@gmail.com"">alexmrog.u@gmail.com</a>
<a href=""mailto:alex.mr.o.g.u@gmail.com"">alex.mr.o.g.u@gmail.com</a>
<a href=""mailto:a.l.exmr.ogu@gmail.com"">a.l.exmr.ogu@gmail.com</a>
<a href=""mailto:alex.mr.og.u@gmail.com"">alex.mr.og.u@gmail.com</a>
<a href=""mailto:a.le.x.m.r.o.gu@gmail.com"">a.le.x.m.r.o.gu@gmail.com</a>
<a href=""mailto:alex.m.r.og.u@gmail.com"">alex.m.r.og.u@gmail.com</a>
<a href=""mailto:ale.x.m.r.o.g.u@gmail.com"">ale.x.m.r.o.g.u@gmail.com</a>
<a href=""mailto:a.lex.mrogu@gmail.com"">a.lex.mrogu@gmail.com</a>
<a href=""mailto:al.e.xm.ro.gu@gmail.com"">al.e.xm.ro.gu@gmail.com</a>
<a href=""mailto:ale.x.m.r.ogu@gmail.com"">ale.x.m.r.ogu@gmail.com</a>
<a href=""mailto:a.lexm.r.o.gu@gmail.com"">a.lexm.r.o.gu@gmail.com</a>
<a href=""mailto:ale.x.m.r.o.gu@gmail.com"">ale.x.m.r.o.gu@gmail.com</a>
<a href=""mailto:a.le.x.m.r.o.g.u@gmail.com"">a.le.x.m.r.o.g.u@gmail.com</a>
<a href=""mailto:al.e.x.mr.o.gu@gmail.com"">al.e.x.mr.o.gu@gmail.com</a>
<a href=""mailto:alex.m.ro.g.u@gmail.com"">alex.m.ro.g.u@gmail.com</a>
<a href=""mailto:a.le.x.mr.o.gu@gmail.com"">a.le.x.mr.o.gu@gmail.com</a>
<a href=""mailto:a.lexmrog.u@gmail.com"">a.lexmrog.u@gmail.com</a>
<a href=""mailto:a.l.e.xm.r.o.g.u@gmail.com"">a.l.e.xm.r.o.g.u@gmail.com</a>
<a href=""mailto:al.exmr.o.g.u@gmail.com"">al.exmr.o.g.u@gmail.com</a>
<a href=""mailto:ale.xmr.o.gu@gmail.com"">ale.xmr.o.gu@gmail.com</a>
<a href=""mailto:a.l.e.x.mrog.u@gmail.com"">a.l.e.x.mrog.u@gmail.com</a>
<a href=""mailto:a.le.xm.r.ogu@gmail.com"">a.le.xm.r.ogu@gmail.com</a>
<a href=""mailto:a.l.exmr.og.u@gmail.com"">a.l.exmr.og.u@gmail.com</a>
<a href=""mailto:ale.xmro.g.u@gmail.com"">ale.xmro.g.u@gmail.com</a>
<a href=""mailto:ale.xm.ro.g.u@gmail.com"">ale.xm.ro.g.u@gmail.com</a>
<a href=""mailto:alex.mro.g.u@gmail.com"">alex.mro.g.u@gmail.com</a>
<a href=""mailto:al.exmro.g.u@gmail.com"">al.exmro.g.u@gmail.com</a>
<a href=""mailto:a.l.e.xmro.gu@gmail.com"">a.l.e.xmro.gu@gmail.com</a>
<a href=""mailto:a.l.exmrogu@gmail.com"">a.l.exmrogu@gmail.com</a>
<a href=""mailto:a.l.ex.m.r.o.g.u@gmail.com"">a.l.ex.m.r.o.g.u@gmail.com</a>
<a href=""mailto:a.le.x.mro.g.u@gmail.com"">a.le.x.mro.g.u@gmail.com</a>
<a href=""mailto:al.exmr.ogu@gmail.com"">al.exmr.ogu@gmail.com</a>
<a href=""mailto:alex.mrog.u@gmail.com"">alex.mrog.u@gmail.com</a>
<a href=""mailto:ale.x.mrog.u@gmail.com"">ale.x.mrog.u@gmail.com</a>
<a href=""mailto:a.lex.mr.o.gu@gmail.com"">a.lex.mr.o.gu@gmail.com</a>
<a href=""mailto:barrdavidrichard1950@gmail.com"">barrdavidrichard1950@gmail.com</a>
<a href=""mailto:b.arrdavi.d.rich.a.rd1.9.5.0@gmail.com"">b.arrdavi.d.rich.a.rd1.9.5.0@gmail.com</a>
<a href=""mailto:b.ar.r.d.a.vi.drichard.1950@gmail.com"">b.ar.r.d.a.vi.drichard.1950@gmail.com</a>
<a href=""mailto:ba.rrda.v.i.d.ri.c.ha.rd.1.95.0@gmail.com"">ba.rrda.v.i.d.ri.c.ha.rd.1.95.0@gmail.com</a>
<a href=""mailto:ba.rrda.v.id.r.ic.har.d.1950@gmail.com"">ba.rrda.v.id.r.ic.har.d.1950@gmail.com</a>
<a href=""mailto:b.arrdavi.drich.ar.d1950@gmail.com"">b.arrdavi.drich.ar.d1950@gmail.com</a>
<a href=""mailto:ba.rrda.vidr.i.c.h.ard1.950@gmail.com"">ba.rrda.vidr.i.c.h.ard1.950@gmail.com</a>
<a href=""mailto:b.arrd.av.i.drich.ard.1950@gmail.com"">b.arrd.av.i.drich.ard.1950@gmail.com</a>
<a href=""mailto:ba.r.rd.avi.dr.ic.h.ard1.9.5.0@gmail.com"">ba.r.rd.avi.dr.ic.h.ard1.9.5.0@gmail.com</a>
<a href=""mailto:ba.rr.d.avi.drich.a.r.d1.95.0@gmail.com"">ba.rr.d.avi.drich.a.r.d1.95.0@gmail.com</a>
<a href=""mailto:barr.dav.i.d.ri.c.h.a.rd.1.9.5.0@gmail.com"">barr.dav.i.d.ri.c.h.a.rd.1.9.5.0@gmail.com</a>
<a href=""mailto:ba.r.rda.vi.d.r.icha.r.d1.950@gmail.com"">ba.r.rda.vi.d.r.icha.r.d1.950@gmail.com</a>
<a href=""mailto:b.a.rr.d.a.vi.dric.h.a.rd1.9.50@gmail.com"">b.a.rr.d.a.vi.dric.h.a.rd1.9.50@gmail.com</a>
<a href=""mailto:bar.r.d.a.vidr.ich.a.r.d195.0@gmail.com"">bar.r.d.a.vidr.ich.a.r.d195.0@gmail.com</a>
<a href=""mailto:b.ar.r.davi.dri.cha.r.d1.95.0@gmail.com"">b.ar.r.davi.dri.cha.r.d1.95.0@gmail.com</a>
<a href=""mailto:b.arr.d.av.i.d.ric.hard1.9.5.0@gmail.com"">b.arr.d.av.i.d.ric.hard1.9.5.0@gmail.com</a>
<a href=""mailto:b.arr.dav.idri.c.h.a.r.d.1.950@gmail.com"">b.arr.dav.idri.c.h.a.r.d.1.950@gmail.com</a>
<a href=""mailto:b.ar.rd.avi.d.r.ic.h.ard.1.9.5.0@gmail.com"">b.ar.rd.avi.d.r.ic.h.ard.1.9.5.0@gmail.com</a>
<a href=""mailto:ba.rrda.v.i.d.r.ich.a.r.d19.5.0@gmail.com"">ba.rrda.v.i.d.r.ich.a.r.d19.5.0@gmail.com</a>
<a href=""mailto:bar.r.davi.drich.ar.d195.0@gmail.com"">bar.r.davi.drich.ar.d195.0@gmail.com</a>
<a href=""mailto:barrd.av.i.dr.i.c.h.a.rd1.950@gmail.com"">barrd.av.i.dr.i.c.h.a.rd1.950@gmail.com</a>
<a href=""mailto:ba.r.r.d.a.v.id.ri.c.ha.r.d.19.5.0@gmail.com"">ba.r.r.d.a.v.id.ri.c.ha.r.d.19.5.0@gmail.com</a>
<a href=""mailto:ba.r.rd.a.v.i.dri.char.d1.95.0@gmail.com"">ba.r.rd.a.v.i.dri.char.d1.95.0@gmail.com</a>
<a href=""mailto:ba.r.r.d.a.vid.r.ic.ha.r.d.19.50@gmail.com"">ba.r.r.d.a.vid.r.ic.ha.r.d.19.50@gmail.com</a>
<a href=""mailto:b.arrda.vi.d.richar.d.19.5.0@gmail.com"">b.arrda.vi.d.richar.d.19.5.0@gmail.com</a>
<a href=""mailto:b.a.rrd.a.v.id.r.i.cha.rd.1.950@gmail.com"">b.a.rrd.a.v.id.r.i.cha.rd.1.950@gmail.com</a>
<a href=""mailto:b.a.r.rdavidri.c.h.a.r.d1.9.50@gmail.com"">b.a.r.rdavidri.c.h.a.r.d1.9.50@gmail.com</a>
<a href=""mailto:ba.r.r.d.a.v.i.dr.ic.ha.rd1.9.50@gmail.com"">ba.r.r.d.a.v.i.dr.ic.ha.rd1.9.50@gmail.com</a>
<a href=""mailto:b.a.rr.da.v.i.d.r.i.chard.1.95.0@gmail.com"">b.a.rr.da.v.i.d.r.i.chard.1.95.0@gmail.com</a>
<a href=""mailto:b.a.rr.da.v.id.ric.h.a.rd1.9.50@gmail.com"">b.a.rr.da.v.id.ric.h.a.rd1.9.50@gmail.com</a>
<a href=""mailto:barrd.av.idrich.a.r.d.19.50@gmail.com"">barrd.av.idrich.a.r.d.19.50@gmail.com</a>
<a href=""mailto:b.arrd.av.i.dr.ic.hard1.950@gmail.com"">b.arrd.av.i.dr.ic.hard1.950@gmail.com</a>
<a href=""mailto:b.arrd.av.i.drich.a.r.d1950@gmail.com"">b.arrd.av.i.drich.a.r.d1950@gmail.com</a>
<a href=""mailto:barrd.avid.r.ic.h.a.r.d.195.0@gmail.com"">barrd.avid.r.ic.h.a.r.d.195.0@gmail.com</a>
<a href=""mailto:b.arrd.av.i.d.ri.c.h.a.r.d19.50@gmail.com"">b.arrd.av.i.d.ri.c.h.a.r.d19.50@gmail.com</a>
<a href=""mailto:ba.r.r.da.v.i.d.r.i.ch.a.rd.1.9.50@gmail.com"">ba.r.r.da.v.i.d.r.i.ch.a.rd.1.9.50@gmail.com</a>
<a href=""mailto:b.a.r.r.david.ri.c.har.d.1.950@gmail.com"">b.a.r.r.david.ri.c.har.d.1.950@gmail.com</a>
<a href=""mailto:b.arr.d.avidr.ic.h.ar.d1.95.0@gmail.com"">b.arr.d.avidr.ic.h.ar.d1.95.0@gmail.com</a>
<a href=""mailto:ba.rrd.avi.dr.ic.har.d1.95.0@gmail.com"">ba.rrd.avi.dr.ic.har.d1.95.0@gmail.com</a>
<a href=""mailto:ba.r.rd.a.vi.dr.i.c.h.ard.19.5.0@gmail.com"">ba.r.rd.a.vi.dr.i.c.h.ard.19.5.0@gmail.com</a>
<a href=""mailto:ba.rrda.vid.r.ichard1.9.5.0@gmail.com"">ba.rrda.vid.r.ichard1.9.5.0@gmail.com</a>
<a href=""mailto:b.a.rr.david.r.i.cha.r.d.1.9.50@gmail.com"">b.a.rr.david.r.i.cha.r.d.1.9.50@gmail.com</a>
<a href=""mailto:b.a.r.rd.avid.ric.hard.1.9.50@gmail.com"">b.a.r.rd.avid.ric.hard.1.9.50@gmail.com</a>
<a href=""mailto:ba.r.r.da.vidrich.ar.d1950@gmail.com"">ba.r.r.da.vidrich.ar.d1950@gmail.com</a>
<a href=""mailto:b.ar.rd.av.id.r.i.c.har.d19.5.0@gmail.com"">b.ar.rd.av.id.r.i.c.har.d19.5.0@gmail.com</a>
<a href=""mailto:b.a.r.rd.a.vi.d.r.i.c.h.ar.d.1.950@gmail.com"">b.a.r.rd.a.vi.d.r.i.c.h.ar.d.1.950@gmail.com</a>
<a href=""mailto:b.a.r.r.da.vid.rich.ard1.95.0@gmail.com"">b.a.r.r.da.vid.rich.ard1.95.0@gmail.com</a>
<a href=""mailto:b.a.rrdav.idri.ch.a.r.d.1.9.50@gmail.com"">b.a.rrdav.idri.ch.a.r.d.1.9.50@gmail.com</a>
<a href=""mailto:b.a.rr.d.av.i.d.r.i.cha.r.d19.5.0@gmail.com"">b.a.rr.d.av.i.d.r.i.cha.r.d19.5.0@gmail.com</a>
<a href=""mailto:b.ar.r.dav.id.r.i.c.h.ard1.95.0@gmail.com"">b.ar.r.dav.id.r.i.c.h.ard1.95.0@gmail.com</a>
<a href=""mailto:ba.r.rd.a.v.i.d.r.ich.a.r.d.1.950@gmail.com"">ba.r.rd.a.v.i.d.r.ich.a.r.d.1.950@gmail.com</a>
<a href=""mailto:ba.rr.da.v.i.dr.i.c.ha.r.d.19.5.0@gmail.com"">ba.rr.da.v.i.dr.i.c.ha.r.d.19.5.0@gmail.com</a>
<a href=""mailto:bar.rd.a.vi.d.ric.hard.1.9.50@gmail.com"">bar.rd.a.vi.d.ric.hard.1.9.50@gmail.com</a>
<a href=""mailto:b.arrda.v.i.d.ri.c.h.ar.d.1.9.50@gmail.com"">b.arrda.v.i.d.ri.c.h.ar.d.1.9.50@gmail.com</a>
<a href=""mailto:b.a.r.r.da.v.i.dric.ha.r.d.195.0@gmail.com"">b.a.r.r.da.v.i.dric.ha.r.d.195.0@gmail.com</a>
<a href=""mailto:b.a.rr.dav.i.d.r.i.ch.a.r.d.1.95.0@gmail.com"">b.a.rr.dav.i.d.r.i.ch.a.r.d.1.95.0@gmail.com</a>
<a href=""mailto:b.a.rr.d.av.id.r.ic.har.d19.5.0@gmail.com"">b.a.rr.d.av.id.r.ic.har.d19.5.0@gmail.com</a>
<a href=""mailto:b.ar.rda.v.i.dri.ch.a.rd.1950@gmail.com"">b.ar.rda.v.i.dri.ch.a.rd.1950@gmail.com</a>
<a href=""mailto:ba.rr.da.v.i.dr.i.c.ha.r.d.1950@gmail.com"">ba.rr.da.v.i.dr.i.c.ha.r.d.1950@gmail.com</a>
<a href=""mailto:ba.r.rda.vi.d.r.i.chard.195.0@gmail.com"">ba.r.rda.vi.d.r.i.chard.195.0@gmail.com</a>
<a href=""mailto:b.arrdav.i.d.r.i.c.ha.rd1.9.5.0@gmail.com"">b.arrdav.i.d.r.i.c.ha.rd1.9.5.0@gmail.com</a>
<a href=""mailto:b.a.r.r.d.a.v.id.r.ic.h.ard1.9.5.0@gmail.com"">b.a.r.r.d.a.v.id.r.ic.h.ard1.9.5.0@gmail.com</a>
<a href=""mailto:ba.r.rdav.i.drichar.d1.9.50@gmail.com"">ba.r.rdav.i.drichar.d1.9.50@gmail.com</a>
<a href=""mailto:b.a.r.rd.av.i.dr.ic.h.a.r.d1.950@gmail.com"">b.a.r.rd.av.i.dr.ic.h.a.r.d1.950@gmail.com</a>
<a href=""mailto:barrdav.idri.ch.ar.d1.9.50@gmail.com"">barrdav.idri.ch.ar.d1.9.50@gmail.com</a>
<a href=""mailto:bar.rdav.idr.i.cha.rd.1.9.5.0@gmail.com"">bar.rdav.idr.i.cha.rd.1.9.5.0@gmail.com</a>
<a href=""mailto:barrdavi.d.r.ich.a.r.d1.95.0@gmail.com"">barrdavi.d.r.ich.a.r.d1.95.0@gmail.com</a>
<a href=""mailto:barrd.av.i.d.richar.d1.9.5.0@gmail.com"">barrd.av.i.d.richar.d1.9.5.0@gmail.com</a>
<a href=""mailto:bar.rd.avid.ric.h.a.r.d1950@gmail.com"">bar.rd.avid.ric.h.a.r.d1950@gmail.com</a>
<a href=""mailto:b.arr.d.a.vidr.ichar.d1.9.5.0@gmail.com"">b.arr.d.a.vidr.ichar.d1.9.5.0@gmail.com</a>
<a href=""mailto:barrd.a.v.i.dri.ch.a.rd1.9.50@gmail.com"">barrd.a.v.i.dri.ch.a.rd1.9.50@gmail.com</a>
<a href=""mailto:bar.rda.vid.r.ic.h.ard19.50@gmail.com"">bar.rda.vid.r.ic.h.ard19.50@gmail.com</a>
<a href=""mailto:barr.davi.dr.i.c.har.d.1.9.50@gmail.com"">barr.davi.dr.i.c.har.d.1.9.50@gmail.com</a>
<a href=""mailto:b.a.rrdav.i.d.ri.c.h.a.r.d19.5.0@gmail.com"">b.a.rrdav.i.d.ri.c.h.a.r.d19.5.0@gmail.com</a>
<a href=""mailto:b.a.r.r.da.vi.dri.chard.195.0@gmail.com"">b.a.r.r.da.vi.dri.chard.195.0@gmail.com</a>
<a href=""mailto:b.a.rrda.v.idr.icha.rd.1950@gmail.com"">b.a.rrda.v.idr.icha.rd.1950@gmail.com</a>
<a href=""mailto:barr.da.v.i.dr.i.c.ha.rd1.950@gmail.com"">barr.da.v.i.dr.i.c.ha.rd1.950@gmail.com</a>
<a href=""mailto:b.ar.rd.a.v.i.dr.i.c.ha.rd.1.95.0@gmail.com"">b.ar.rd.a.v.i.dr.i.c.ha.rd.1.95.0@gmail.com</a>
<a href=""mailto:b.arr.d.avidr.icha.rd1.950@gmail.com"">b.arr.d.avidr.icha.rd1.950@gmail.com</a>
<a href=""mailto:barrdav.i.d.r.i.c.har.d.1.9.50@gmail.com"">barrdav.i.d.r.i.c.har.d.1.9.50@gmail.com</a>
<a href=""mailto:bar.r.d.av.id.r.i.c.ha.r.d1.95.0@gmail.com"">bar.r.d.av.id.r.i.c.ha.r.d1.95.0@gmail.com</a>
<a href=""mailto:b.arr.da.v.id.ri.c.hard.19.50@gmail.com"">b.arr.da.v.id.ri.c.hard.19.50@gmail.com</a>
<a href=""mailto:b.a.rrda.vidr.i.c.h.ar.d.1.9.5.0@gmail.com"">b.a.rrda.vidr.i.c.h.ar.d.1.9.5.0@gmail.com</a>
<a href=""mailto:b.a.r.rd.av.id.r.icha.rd1.950@gmail.com"">b.a.r.rd.av.id.r.icha.rd1.950@gmail.com</a>
<a href=""mailto:ba.rrdavi.dr.i.ch.a.r.d1.9.5.0@gmail.com"">ba.rrdavi.dr.i.ch.a.r.d1.9.5.0@gmail.com</a>
<a href=""mailto:bar.rd.a.vid.r.i.c.h.ard.1.95.0@gmail.com"">bar.rd.a.vid.r.i.c.h.ard.1.95.0@gmail.com</a>
<a href=""mailto:bar.r.d.a.vid.ri.chard.1.9.50@gmail.com"">bar.r.d.a.vid.ri.chard.1.9.50@gmail.com</a>
<a href=""mailto:bar.r.da.vidri.chard.19.50@gmail.com"">bar.r.da.vidri.chard.19.50@gmail.com</a>
<a href=""mailto:ba.r.rdav.i.d.r.i.c.h.ard.1.9.5.0@gmail.com"">ba.r.rdav.i.d.r.i.c.h.ard.1.9.5.0@gmail.com</a>
<a href=""mailto:b.a.r.rd.a.v.i.dr.ich.a.r.d1.950@gmail.com"">b.a.r.rd.a.v.i.dr.ich.a.r.d1.950@gmail.com</a>
<a href=""mailto:b.a.rrda.v.idri.ch.a.r.d.1.9.5.0@gmail.com"">b.a.rrda.v.idri.ch.a.r.d.1.9.5.0@gmail.com</a>
<a href=""mailto:b.arrd.a.v.idri.char.d1.9.50@gmail.com"">b.arrd.a.v.idri.char.d1.9.50@gmail.com</a>
<a href=""mailto:barr.da.vi.d.r.i.cha.r.d.19.5.0@gmail.com"">barr.da.vi.d.r.i.cha.r.d.19.5.0@gmail.com</a>
<a href=""mailto:b.a.rrda.vid.richa.r.d.1950@gmail.com"">b.a.rrda.vid.richa.r.d.1950@gmail.com</a>
<a href=""mailto:b.a.rrdav.id.r.ic.h.ar.d19.50@gmail.com"">b.a.rrdav.id.r.ic.h.ar.d19.50@gmail.com</a>
<a href=""mailto:b.ar.r.dav.id.r.ich.ard.1.950@gmail.com"">b.ar.r.dav.id.r.ich.ard.1.950@gmail.com</a>
<a href=""mailto:ba.rr.d.a.v.i.d.r.icha.r.d1950@gmail.com"">ba.rr.d.a.v.i.d.r.icha.r.d1950@gmail.com</a>
<a href=""mailto:ba.rrda.v.i.dr.i.c.har.d195.0@gmail.com"">ba.rrda.v.i.dr.i.c.har.d195.0@gmail.com</a>
<a href=""mailto:b.ar.rd.a.v.id.ri.c.hard.19.50@gmail.com"">b.ar.rd.a.v.id.ri.c.hard.19.50@gmail.com</a>
<a href=""mailto:ba.rrd.av.idr.ich.a.rd.1.950@gmail.com"">ba.rrd.av.idr.ich.a.rd.1.950@gmail.com</a>
<a href=""mailto:b.ar.rd.av.i.d.richa.r.d.1.950@gmail.com"">b.ar.rd.av.i.d.richa.r.d.1.950@gmail.com</a>
<a href=""mailto:b.a.r.r.dav.i.dri.c.har.d1.9.50@gmail.com"">b.a.r.r.dav.i.dri.c.har.d1.9.50@gmail.com</a>
<a href=""mailto:b.a.rr.davidr.i.c.h.a.rd.19.50@gmail.com"">b.a.rr.davidr.i.c.h.a.rd.19.50@gmail.com</a>
<a href=""mailto:barr.da.vi.dr.i.ch.a.r.d1950@gmail.com"">barr.da.vi.dr.i.ch.a.r.d1950@gmail.com</a>
<a href=""mailto:bar.r.d.av.idr.icha.r.d.1.950@gmail.com"">bar.r.d.av.idr.icha.r.d.1.950@gmail.com</a>
<a href=""mailto:bar.rda.vi.dr.ic.h.a.r.d.1950@gmail.com"">bar.rda.vi.dr.ic.h.a.r.d.1950@gmail.com</a>
<a href=""mailto:b.a.r.rda.v.i.d.ri.ch.ard1.9.5.0@gmail.com"">b.a.r.rda.v.i.d.ri.ch.ard1.9.5.0@gmail.com</a>
<a href=""mailto:barr.dav.idr.i.cha.rd.1.9.5.0@gmail.com"">barr.dav.idr.i.cha.rd.1.9.5.0@gmail.com</a>
<a href=""mailto:barr.d.a.v.idrich.ard.1.9.50@gmail.com"">barr.d.a.v.idrich.ard.1.9.50@gmail.com</a>
<a href=""mailto:barrd.a.vidrich.a.rd.195.0@gmail.com"">barrd.a.vidrich.a.rd.195.0@gmail.com</a>
<a href=""mailto:b.a.rr.dav.i.dr.ic.ha.rd.1950@gmail.com"">b.a.rr.dav.i.dr.ic.ha.rd.1950@gmail.com</a>
<a href=""mailto:b.a.r.r.da.vidri.cha.r.d19.5.0@gmail.com"">b.a.r.r.da.vidri.cha.r.d19.5.0@gmail.com</a>
<a href=""mailto:ba.r.r.dav.id.ric.ha.rd.19.50@gmail.com"">ba.r.r.dav.id.ric.ha.rd.19.50@gmail.com</a>
<a href=""mailto:b.a.rr.da.vi.d.r.i.c.ha.r.d.1.95.0@gmail.com"">b.a.rr.da.vi.d.r.i.c.ha.r.d.1.95.0@gmail.com</a>
<a href=""mailto:b.a.r.rd.avid.r.ich.a.rd19.5.0@gmail.com"">b.a.r.rd.avid.r.ich.a.rd19.5.0@gmail.com</a>
<a href=""mailto:b.a.rr.dav.i.drich.ar.d.1.950@gmail.com"">b.a.rr.dav.i.drich.ar.d.1.950@gmail.com</a>
<a href=""mailto:bar.rdav.id.ri.c.h.a.rd1950@gmail.com"">bar.rdav.id.ri.c.h.a.rd1950@gmail.com</a>
<a href=""mailto:b.arr.da.v.id.r.i.cha.rd195.0@gmail.com"">b.arr.da.v.id.r.i.cha.rd195.0@gmail.com</a>
<a href=""mailto:b.a.rr.d.a.vid.r.ichard.19.5.0@gmail.com"">b.a.rr.d.a.vid.r.ichard.19.5.0@gmail.com</a>
<a href=""mailto:ba.rr.da.v.id.ri.c.har.d.1.9.50@gmail.com"">ba.rr.da.v.id.ri.c.har.d.1.9.50@gmail.com</a>
<a href=""mailto:b.a.rrd.avidr.ic.h.ar.d.19.50@gmail.com"">b.a.rrd.avidr.ic.h.ar.d.19.50@gmail.com</a>
<a href=""mailto:ba.rr.davidric.har.d.1.95.0@gmail.com"">ba.rr.davidric.har.d.1.95.0@gmail.com</a>
<a href=""mailto:barrd.av.idri.cha.r.d1950@gmail.com"">barrd.av.idri.cha.r.d1950@gmail.com</a>
<a href=""mailto:barr.d.av.i.dr.i.c.hard.19.50@gmail.com"">barr.d.av.i.dr.i.c.hard.19.50@gmail.com</a>
<a href=""mailto:b.ar.r.d.avi.dr.ic.ha.rd.1.950@gmail.com"">b.ar.r.d.avi.dr.ic.ha.rd.1.950@gmail.com</a>
<a href=""mailto:barr.da.vidrichard195.0@gmail.com"">barr.da.vidrichard195.0@gmail.com</a>
<a href=""mailto:ba.rrd.a.v.idr.i.cha.r.d1950@gmail.com"">ba.rrd.a.v.idr.i.cha.r.d1950@gmail.com</a>
<a href=""mailto:b.a.r.rdavi.d.ric.h.ar.d.1.95.0@gmail.com"">b.a.r.rdavi.d.ric.h.ar.d.1.95.0@gmail.com</a>
<a href=""mailto:b.ar.r.d.av.i.d.r.ich.ar.d.1.9.50@gmail.com"">b.ar.r.d.av.i.d.r.ich.ar.d.1.9.50@gmail.com</a>
<a href=""mailto:b.a.rrd.a.v.id.ri.ch.ard19.5.0@gmail.com"">b.a.rrd.a.v.id.ri.ch.ard19.5.0@gmail.com</a>
<a href=""mailto:b.arr.d.av.i.dr.i.cha.r.d.1950@gmail.com"">b.arr.d.av.i.dr.i.cha.r.d.1950@gmail.com</a>
<a href=""mailto:b.a.r.r.da.v.i.d.r.ich.a.rd.19.5.0@gmail.com"">b.a.r.r.da.v.i.d.r.ich.a.rd.19.5.0@gmail.com</a>
<a href=""mailto:b.a.rr.d.a.vi.d.r.i.ch.a.rd.1950@gmail.com"">b.a.rr.d.a.vi.d.r.i.ch.a.rd.1950@gmail.com</a>
<a href=""mailto:b.ar.rda.v.i.d.ri.char.d.195.0@gmail.com"">b.ar.rda.v.i.d.ri.char.d.195.0@gmail.com</a>
<a href=""mailto:b.ar.r.da.v.i.d.r.ic.h.ar.d.1.950@gmail.com"">b.ar.r.da.v.i.d.r.ic.h.ar.d.1.950@gmail.com</a>
<a href=""mailto:b.a.r.r.da.v.i.d.ri.ch.ar.d.1.95.0@gmail.com"">b.a.r.r.da.v.i.d.ri.ch.ar.d.1.95.0@gmail.com</a>
<a href=""mailto:b.a.rr.d.av.i.d.ric.h.ar.d.1.950@gmail.com"">b.a.rr.d.av.i.d.ric.h.ar.d.1.950@gmail.com</a>
<a href=""mailto:barr.d.a.v.i.dr.i.cha.r.d.1950@gmail.com"">barr.d.a.v.i.dr.i.cha.r.d.1950@gmail.com</a>
<a href=""mailto:b.a.rr.d.a.v.i.d.r.icha.r.d1.950@gmail.com"">b.a.rr.d.a.v.i.d.r.icha.r.d1.950@gmail.com</a>
<a href=""mailto:bar.r.da.v.i.dri.c.har.d19.50@gmail.com"">bar.r.da.v.i.dri.c.har.d19.50@gmail.com</a>
<a href=""mailto:b.arrd.avi.d.r.i.c.h.ar.d.1950@gmail.com"">b.arrd.avi.d.r.i.c.h.ar.d.1950@gmail.com</a>
<a href=""mailto:ba.rrd.a.vi.d.r.ich.a.rd1.9.5.0@gmail.com"">ba.rrd.a.vi.d.r.ich.a.rd1.9.5.0@gmail.com</a>
<a href=""mailto:bar.r.d.av.i.d.ri.c.h.a.rd.1950@gmail.com"">bar.r.d.av.i.d.ri.c.h.a.rd.1950@gmail.com</a>
<a href=""mailto:bar.rd.av.i.d.r.i.c.ha.r.d1950@gmail.com"">bar.rd.av.i.d.r.i.c.ha.r.d1950@gmail.com</a>
<a href=""mailto:barr.dav.id.richa.rd.1.9.5.0@gmail.com"">barr.dav.id.richa.rd.1.9.5.0@gmail.com</a>
<a href=""mailto:b.a.r.rdav.i.d.rich.ar.d.19.50@gmail.com"">b.a.r.rdav.i.d.rich.ar.d.19.50@gmail.com</a>
<a href=""mailto:b.a.r.rdavi.dri.ch.a.rd.1.9.50@gmail.com"">b.a.r.rdavi.dri.ch.a.rd.1.9.50@gmail.com</a>
<a href=""mailto:bar.r.davi.dric.ha.r.d.1.9.50@gmail.com"">bar.r.davi.dric.ha.r.d.1.9.50@gmail.com</a>
<a href=""mailto:b.arr.david.ri.ch.ard.1.950@gmail.com"">b.arr.david.ri.ch.ard.1.950@gmail.com</a>
<a href=""mailto:b.arr.davidricha.rd.19.50@gmail.com"">b.arr.davidricha.rd.19.50@gmail.com</a>
<a href=""mailto:b.a.r.r.d.av.idr.ic.h.ar.d19.50@gmail.com"">b.a.r.r.d.av.idr.ic.h.ar.d19.50@gmail.com</a>
<a href=""mailto:b.arr.d.av.i.drich.a.rd1.95.0@gmail.com"">b.arr.d.av.i.drich.a.rd1.95.0@gmail.com</a>
<a href=""mailto:b.a.r.r.da.v.idri.c.har.d1.950@gmail.com"">b.a.r.r.da.v.idri.c.har.d1.950@gmail.com</a>
<a href=""mailto:b.a.rr.d.avidrichard.19.5.0@gmail.com"">b.a.rr.d.avidrichard.19.5.0@gmail.com</a>
<a href=""mailto:ba.rr.da.v.i.dr.i.c.h.ar.d19.50@gmail.com"">ba.rr.da.v.i.dr.i.c.h.ar.d19.50@gmail.com</a>
<a href=""mailto:ba.r.r.d.av.idr.i.cha.rd.19.50@gmail.com"">ba.r.r.d.av.idr.i.cha.rd.19.50@gmail.com</a>
<a href=""mailto:bar.rdav.idri.ch.ar.d1.9.5.0@gmail.com"">bar.rdav.idri.ch.ar.d1.9.5.0@gmail.com</a>
<a href=""mailto:ba.r.rd.a.vid.ri.c.h.ard1.9.5.0@gmail.com"">ba.r.rd.a.vid.ri.c.h.ard1.9.5.0@gmail.com</a>
<a href=""mailto:ba.rrdavid.ric.h.a.rd195.0@gmail.com"">ba.rrdavid.ric.h.a.rd195.0@gmail.com</a>
<a href=""mailto:b.arr.da.vidr.i.c.h.ard19.50@gmail.com"">b.arr.da.vidr.i.c.h.ard19.50@gmail.com</a>
<a href=""mailto:b.a.r.rdavid.rich.ard.1.950@gmail.com"">b.a.r.rdavid.rich.ard.1.950@gmail.com</a>
<a href=""mailto:barr.dav.i.dr.ich.ard1.9.5.0@gmail.com"">barr.dav.i.dr.ich.ard1.9.5.0@gmail.com</a>
<a href=""mailto:b.a.r.r.david.ric.ha.rd.1.9.50@gmail.com"">b.a.r.r.david.ric.ha.rd.1.9.50@gmail.com</a>
<a href=""mailto:ba.rrd.a.vidric.har.d1.9.50@gmail.com"">ba.rrd.a.vidric.har.d1.9.50@gmail.com</a>
<a href=""mailto:b.ar.rdav.id.r.ich.a.rd.19.5.0@gmail.com"">b.ar.rdav.id.r.ich.a.rd.19.5.0@gmail.com</a>
<a href=""mailto:b.ar.r.d.a.vi.dr.ichard1950@gmail.com"">b.ar.r.d.a.vi.dr.ichard1950@gmail.com</a>
<a href=""mailto:b.a.r.r.d.a.v.i.d.r.i.cha.rd1.9.50@gmail.com"">b.a.r.r.d.a.v.i.d.r.i.cha.rd1.9.50@gmail.com</a>
<a href=""mailto:barrd.a.v.i.dr.ichard19.50@gmail.com"">barrd.a.v.i.dr.ichard19.50@gmail.com</a>
<a href=""mailto:barr.d.avi.d.ri.char.d.19.5.0@gmail.com"">barr.d.avi.d.ri.char.d.19.5.0@gmail.com</a>
<a href=""mailto:b.ar.r.d.av.idr.ich.a.r.d1.9.50@gmail.com"">b.ar.r.d.av.idr.ich.a.r.d1.9.50@gmail.com</a>
<a href=""mailto:ba.r.rda.vid.r.ic.h.ar.d1.9.50@gmail.com"">ba.r.rda.vid.r.ic.h.ar.d1.9.50@gmail.com</a>
<a href=""mailto:bar.r.dav.id.ric.ha.r.d.19.5.0@gmail.com"">bar.r.dav.id.ric.ha.r.d.19.5.0@gmail.com</a>
<a href=""mailto:barrd.avi.dricha.r.d.19.5.0@gmail.com"">barrd.avi.dricha.r.d.19.5.0@gmail.com</a>
<a href=""mailto:bar.rd.a.vi.d.ri.c.ha.r.d1950@gmail.com"">bar.rd.a.vi.d.ri.c.ha.r.d1950@gmail.com</a>
<a href=""mailto:b.arr.davi.d.ri.c.h.ar.d.195.0@gmail.com"">b.arr.davi.d.ri.c.h.ar.d.195.0@gmail.com</a>
<a href=""mailto:b.a.r.rd.av.idri.c.ha.rd1.95.0@gmail.com"">b.a.r.rd.av.idri.c.ha.rd1.95.0@gmail.com</a>
<a href=""mailto:ba.r.rd.a.vid.r.i.chard.1.95.0@gmail.com"">ba.r.rd.a.vid.r.i.chard.1.95.0@gmail.com</a>
<a href=""mailto:ba.r.r.dav.i.d.r.i.cha.r.d195.0@gmail.com"">ba.r.r.dav.i.d.r.i.cha.r.d195.0@gmail.com</a>
<a href=""mailto:bar.rdavid.r.i.ch.ar.d1.9.50@gmail.com"">bar.rdavid.r.i.ch.ar.d1.9.50@gmail.com</a>
<a href=""mailto:b.a.r.r.d.avi.dric.h.a.rd1.9.50@gmail.com"">b.a.r.r.d.avi.dric.h.a.rd1.9.50@gmail.com</a>
<a href=""mailto:b.a.rr.da.v.id.ric.ha.rd.1.95.0@gmail.com"">b.a.rr.da.v.id.ric.ha.rd.1.95.0@gmail.com</a>
<a href=""mailto:b.arrd.avi.dric.h.ar.d.1.95.0@gmail.com"">b.arrd.avi.dric.h.ar.d.1.95.0@gmail.com</a>
<a href=""mailto:b.ar.r.d.a.v.i.dr.ic.h.ar.d.1.950@gmail.com"">b.ar.r.d.a.v.i.dr.ic.h.ar.d.1.950@gmail.com</a>
<a href=""mailto:bar.rda.vid.r.i.c.h.a.rd1.950@gmail.com"">bar.rda.vid.r.i.c.h.a.rd1.950@gmail.com</a>
<a href=""mailto:b.a.rr.davi.d.ri.chard.1.950@gmail.com"">b.a.rr.davi.d.ri.chard.1.950@gmail.com</a>
<a href=""mailto:bar.rd.a.v.i.dric.hard1.95.0@gmail.com"">bar.rd.a.v.i.dric.hard1.95.0@gmail.com</a>
<a href=""mailto:b.a.r.rdavidr.i.c.h.a.r.d.1.9.5.0@gmail.com"">b.a.r.rdavidr.i.c.h.a.r.d.1.9.5.0@gmail.com</a>
<a href=""mailto:ba.rr.da.vi.dri.c.har.d19.50@gmail.com"">ba.rr.da.vi.dri.c.har.d19.50@gmail.com</a>
<a href=""mailto:b.ar.r.d.avi.dr.i.char.d1.950@gmail.com"">b.ar.r.d.avi.dr.i.char.d1.950@gmail.com</a>
<a href=""mailto:b.a.rr.d.av.idr.ic.h.ard.1.950@gmail.com"">b.a.rr.d.av.idr.ic.h.ard.1.950@gmail.com</a>
<a href=""mailto:b.ar.r.d.a.vi.d.r.i.c.ha.rd1.9.50@gmail.com"">b.ar.r.d.a.vi.d.r.i.c.ha.rd1.9.50@gmail.com</a>
<a href=""mailto:ba.rrdavidric.h.a.rd19.5.0@gmail.com"">ba.rrdavidric.h.a.rd19.5.0@gmail.com</a>
<a href=""mailto:b.a.r.rdav.id.ri.chard1.9.50@gmail.com"">b.a.r.rdav.id.ri.chard1.9.50@gmail.com</a>
<a href=""mailto:ba.rr.d.a.v.id.richa.r.d1.95.0@gmail.com"">ba.rr.d.a.v.id.richa.r.d1.95.0@gmail.com</a>
<a href=""mailto:ba.rrda.v.idri.cha.r.d.1.950@gmail.com"">ba.rrda.v.idri.cha.r.d.1.950@gmail.com</a>
<a href=""mailto:bar.rd.av.id.r.i.c.har.d.195.0@gmail.com"">bar.rd.av.id.r.i.c.har.d.195.0@gmail.com</a>
<a href=""mailto:barrdavid.ric.h.a.rd.19.50@gmail.com"">barrdavid.ric.h.a.rd.19.50@gmail.com</a>
<a href=""mailto:barr.d.a.v.i.d.r.ich.ard1.950@gmail.com"">barr.d.a.v.i.d.r.ich.ard1.950@gmail.com</a>
<a href=""mailto:b.arrd.a.vi.d.ri.c.ha.rd1.950@gmail.com"">b.arrd.a.vi.d.ri.c.ha.rd1.950@gmail.com</a>
<a href=""mailto:ba.rrdav.i.dr.ic.ha.r.d.1.9.50@gmail.com"">ba.rrdav.i.dr.ic.ha.r.d.1.9.50@gmail.com</a>
<a href=""mailto:b.ar.r.da.vid.r.i.c.har.d195.0@gmail.com"">b.ar.r.da.vid.r.i.c.har.d195.0@gmail.com</a>
<a href=""mailto:factfindingoffice2277@gmail.com"">factfindingoffice2277@gmail.com</a>
<a href=""mailto:fac.t.fi.n.d.i.n.g.of.fi.ce22.77@gmail.com"">fac.t.fi.n.d.i.n.g.of.fi.ce22.77@gmail.com</a>
<a href=""mailto:fact.fi.n.di.n.go.f.fice.2.277@gmail.com"">fact.fi.n.di.n.go.f.fice.2.277@gmail.com</a>
<a href=""mailto:fact.fi.n.d.i.ngof.f.i.c.e.22.7.7@gmail.com"">fact.fi.n.d.i.ngof.f.i.c.e.22.7.7@gmail.com</a>
<a href=""mailto:fac.t.f.in.d.ingof.f.ic.e.22.77@gmail.com"">fac.t.f.in.d.ingof.f.ic.e.22.77@gmail.com</a>
<a href=""mailto:f.a.ct.f.in.di.ng.o.f.f.ice.22.77@gmail.com"">f.a.ct.f.in.di.ng.o.f.f.ice.22.77@gmail.com</a>
<a href=""mailto:f.ac.t.fi.n.din.g.o.ff.i.c.e227.7@gmail.com"">f.ac.t.fi.n.din.g.o.ff.i.c.e227.7@gmail.com</a>
<a href=""mailto:fa.c.tfin.di.n.go.f.f.i.c.e2.277@gmail.com"">fa.c.tfin.di.n.go.f.f.i.c.e2.277@gmail.com</a>
<a href=""mailto:f.ac.tfin.ding.of.fice2.277@gmail.com"">f.ac.tfin.ding.of.fice2.277@gmail.com</a>
<a href=""mailto:factf.i.nd.i.ngo.ffi.c.e2.27.7@gmail.com"">factf.i.nd.i.ngo.ffi.c.e2.27.7@gmail.com</a>
<a href=""mailto:fac.t.f.ind.in.g.o.ffi.c.e.2.27.7@gmail.com"">fac.t.f.ind.in.g.o.ffi.c.e.2.27.7@gmail.com</a>
<a href=""mailto:fact.f.i.n.d.i.n.gof.fice.2.27.7@gmail.com"">fact.f.i.n.d.i.n.gof.fice.2.27.7@gmail.com</a>
<a href=""mailto:fa.c.tf.i.n.di.n.goffi.ce2.277@gmail.com"">fa.c.tf.i.n.di.n.goffi.ce2.277@gmail.com</a>
<a href=""mailto:fa.ctf.in.dingo.ff.i.ce.22.77@gmail.com"">fa.ctf.in.dingo.ff.i.ce.22.77@gmail.com</a>
<a href=""mailto:f.actfin.di.ngoffice.2.2.7.7@gmail.com"">f.actfin.di.ngoffice.2.2.7.7@gmail.com</a>
<a href=""mailto:f.act.f.in.d.i.ng.o.ffice2277@gmail.com"">f.act.f.in.d.i.ng.o.ffice2277@gmail.com</a>
<a href=""mailto:fa.ctf.i.ndi.ng.o.ff.ice2277@gmail.com"">fa.ctf.i.ndi.ng.o.ff.ice2277@gmail.com</a>
<a href=""mailto:f.ac.t.f.in.di.n.g.offic.e22.7.7@gmail.com"">f.ac.t.f.in.di.n.g.offic.e22.7.7@gmail.com</a>
<a href=""mailto:fac.t.f.i.ndi.ngof.f.ic.e.2.277@gmail.com"">fac.t.f.i.ndi.ngof.f.ic.e.2.277@gmail.com</a>
<a href=""mailto:fac.tf.i.n.di.ngo.f.fi.c.e227.7@gmail.com"">fac.tf.i.n.di.ngo.f.fi.c.e227.7@gmail.com</a>
<a href=""mailto:f.a.ctfin.di.n.g.o.f.f.ic.e.2.27.7@gmail.com"">f.a.ctfin.di.n.g.o.f.f.ic.e.2.27.7@gmail.com</a>
<a href=""mailto:f.a.ctfinding.of.f.ice2.277@gmail.com"">f.a.ctfinding.of.f.ice2.277@gmail.com</a>
<a href=""mailto:fa.ctfi.n.d.i.n.g.o.ffic.e227.7@gmail.com"">fa.ctfi.n.d.i.n.g.o.ffic.e227.7@gmail.com</a>
<a href=""mailto:f.ac.tf.inding.offic.e227.7@gmail.com"">f.ac.tf.inding.offic.e227.7@gmail.com</a>
<a href=""mailto:f.ac.t.f.in.d.in.goff.i.ce22.77@gmail.com"">f.ac.t.f.in.d.in.goff.i.ce22.77@gmail.com</a>
<a href=""mailto:f.act.find.i.n.g.o.ff.i.c.e.2.2.77@gmail.com"">f.act.find.i.n.g.o.ff.i.c.e.2.2.77@gmail.com</a>
<a href=""mailto:fac.tfi.n.d.i.ng.o.ff.ic.e2277@gmail.com"">fac.tfi.n.d.i.ng.o.ff.ic.e2277@gmail.com</a>
<a href=""mailto:f.a.c.tf.i.n.d.in.g.of.f.ic.e2277@gmail.com"">f.a.c.tf.i.n.d.in.g.of.f.ic.e2277@gmail.com</a>
<a href=""mailto:fac.t.f.in.din.go.f.fi.c.e.2.277@gmail.com"">fac.t.f.in.din.go.f.fi.c.e.2.277@gmail.com</a>
<a href=""mailto:fac.tfin.ding.o.ffic.e.2277@gmail.com"">fac.tfin.ding.o.ffic.e.2277@gmail.com</a>
<a href=""mailto:f.a.ctf.in.d.in.go.f.f.i.ce22.77@gmail.com"">f.a.ctf.in.d.in.go.f.f.i.ce22.77@gmail.com</a>
<a href=""mailto:f.ac.tf.i.ndingoff.i.ce22.7.7@gmail.com"">f.ac.tf.i.ndingoff.i.ce22.7.7@gmail.com</a>
<a href=""mailto:f.ac.t.fi.nding.o.f.f.ic.e22.7.7@gmail.com"">f.ac.t.fi.nding.o.f.f.ic.e22.7.7@gmail.com</a>
<a href=""mailto:f.ac.tfind.ingo.ffi.ce2.27.7@gmail.com"">f.ac.tfind.ingo.ffi.ce2.27.7@gmail.com</a>
<a href=""mailto:fa.ctfind.i.n.gof.f.i.ce.22.7.7@gmail.com"">fa.ctfind.i.n.gof.f.i.ce.22.7.7@gmail.com</a>
<a href=""mailto:fa.ctf.in.d.ing.of.f.ic.e.2.277@gmail.com"">fa.ctf.in.d.ing.of.f.ic.e.2.277@gmail.com</a>
<a href=""mailto:f.actf.ind.i.n.go.ff.i.ce227.7@gmail.com"">f.actf.ind.i.n.go.ff.i.ce227.7@gmail.com</a>
<a href=""mailto:f.actf.i.nd.i.n.g.o.f.fi.ce2277@gmail.com"">f.actf.i.nd.i.n.g.o.f.fi.ce2277@gmail.com</a>
<a href=""mailto:fa.c.t.f.ind.i.ngoffi.c.e2.277@gmail.com"">fa.c.t.f.ind.i.ngoffi.c.e2.277@gmail.com</a>
<a href=""mailto:f.a.c.tf.i.n.di.ng.o.ffi.ce.2.277@gmail.com"">f.a.c.tf.i.n.di.ng.o.ffi.ce.2.277@gmail.com</a>
<a href=""mailto:f.act.f.i.nding.offic.e.2.2.77@gmail.com"">f.act.f.i.nding.offic.e.2.2.77@gmail.com</a>
<a href=""mailto:fa.c.t.f.ind.in.g.o.ff.ic.e.22.7.7@gmail.com"">fa.c.t.f.ind.in.g.o.ff.ic.e.22.7.7@gmail.com</a>
<a href=""mailto:f.ac.tf.ind.i.n.gof.fice.2277@gmail.com"">f.ac.tf.ind.i.n.gof.fice.2277@gmail.com</a>
<a href=""mailto:f.a.c.t.fi.nd.in.go.ff.i.c.e22.77@gmail.com"">f.a.c.t.fi.nd.in.go.ff.i.c.e22.77@gmail.com</a>
<a href=""mailto:f.a.c.t.f.indi.n.goffice22.7.7@gmail.com"">f.a.c.t.f.indi.n.goffice22.7.7@gmail.com</a>
<a href=""mailto:fa.ct.fi.ndi.n.g.offic.e2.2.77@gmail.com"">fa.ct.fi.ndi.n.g.offic.e2.2.77@gmail.com</a>
<a href=""mailto:f.a.c.tf.i.n.ding.offi.c.e.227.7@gmail.com"">f.a.c.tf.i.n.ding.offi.c.e.227.7@gmail.com</a>
<a href=""mailto:f.a.c.t.fi.n.d.i.ng.o.f.fic.e2.27.7@gmail.com"">f.a.c.t.fi.n.d.i.ng.o.f.fic.e2.27.7@gmail.com</a>
<a href=""mailto:fa.ctf.i.n.dingof.fi.ce.2.27.7@gmail.com"">fa.ctf.i.n.dingof.fi.ce.2.27.7@gmail.com</a>
<a href=""mailto:f.a.c.t.fin.d.i.n.goffi.c.e.22.7.7@gmail.com"">f.a.c.t.fin.d.i.n.goffi.c.e.22.7.7@gmail.com</a>
<a href=""mailto:f.ac.tf.in.d.i.ng.offi.ce22.77@gmail.com"">f.ac.tf.in.d.i.ng.offi.ce22.77@gmail.com</a>
<a href=""mailto:f.a.ctf.ind.ingo.f.fi.ce2.277@gmail.com"">f.a.ctf.ind.ingo.f.fi.ce2.277@gmail.com</a>
<a href=""mailto:f.a.c.t.f.indi.ng.offi.ce2.2.7.7@gmail.com"">f.a.c.t.f.indi.ng.offi.ce2.2.7.7@gmail.com</a>
<a href=""mailto:f.a.c.tf.i.n.din.g.office227.7@gmail.com"">f.a.c.tf.i.n.din.g.office227.7@gmail.com</a>
<a href=""mailto:fac.t.f.ind.i.ng.offi.c.e.22.7.7@gmail.com"">fac.t.f.ind.i.ng.offi.c.e.22.7.7@gmail.com</a>
<a href=""mailto:fa.c.t.f.in.dingo.f.fi.c.e.2.2.77@gmail.com"">fa.c.t.f.in.dingo.f.fi.c.e.2.2.77@gmail.com</a>
<a href=""mailto:f.a.c.tf.i.n.di.ng.o.f.fic.e2.2.7.7@gmail.com"">f.a.c.tf.i.n.di.ng.o.f.fic.e2.2.7.7@gmail.com</a>
<a href=""mailto:fa.c.t.f.indin.g.o.ffice2277@gmail.com"">fa.c.t.f.indin.g.o.ffice2277@gmail.com</a>
<a href=""mailto:f.ac.tf.i.n.dingo.ffic.e.2.2.7.7@gmail.com"">f.ac.tf.i.n.dingo.ffic.e.2.2.7.7@gmail.com</a>
<a href=""mailto:f.a.c.t.fi.nd.in.g.of.f.ice2.277@gmail.com"">f.a.c.t.fi.nd.in.g.of.f.ice2.277@gmail.com</a>
<a href=""mailto:f.a.ct.fi.n.di.ngof.f.i.c.e.227.7@gmail.com"">f.a.ct.fi.n.di.ngof.f.i.c.e.227.7@gmail.com</a>
<a href=""mailto:f.ac.t.fi.n.d.i.ngo.f.f.i.ce.2277@gmail.com"">f.ac.t.fi.n.d.i.ngo.f.f.i.ce.2277@gmail.com</a>
<a href=""mailto:f.ac.tfind.i.n.g.off.i.ce22.77@gmail.com"">f.ac.tfind.i.n.g.off.i.ce22.77@gmail.com</a>
<a href=""mailto:fact.fin.d.ingo.ff.ic.e.2.2.77@gmail.com"">fact.fin.d.ingo.ff.ic.e.2.2.77@gmail.com</a>
<a href=""mailto:fa.c.t.findin.g.of.fic.e2277@gmail.com"">fa.c.t.findin.g.of.fic.e2277@gmail.com</a>
<a href=""mailto:fac.tfi.nd.ingo.ffi.ce.2.27.7@gmail.com"">fac.tfi.nd.ingo.ffi.ce.2.27.7@gmail.com</a>
<a href=""mailto:fact.fin.din.gof.f.i.c.e2.277@gmail.com"">fact.fin.din.gof.f.i.c.e2.277@gmail.com</a>
<a href=""mailto:f.actfin.di.n.go.ff.ic.e.2.2.77@gmail.com"">f.actfin.di.n.go.ff.ic.e.2.2.77@gmail.com</a>
<a href=""mailto:fa.ctf.in.d.in.g.of.fic.e2.277@gmail.com"">fa.ctf.in.d.in.g.of.fic.e2.277@gmail.com</a>
<a href=""mailto:f.a.ct.find.i.n.g.of.fice2.277@gmail.com"">f.a.ct.find.i.n.g.of.fice2.277@gmail.com</a>
<a href=""mailto:fact.f.i.ndin.g.off.i.c.e2.2.77@gmail.com"">fact.f.i.ndin.g.off.i.c.e2.2.77@gmail.com</a>
<a href=""mailto:fa.ctfi.nding.o.ffic.e.227.7@gmail.com"">fa.ctfi.nding.o.ffic.e.227.7@gmail.com</a>
<a href=""mailto:f.a.ctf.i.ndin.g.of.fi.ce.22.77@gmail.com"">f.a.ctf.i.ndin.g.of.fi.ce.22.77@gmail.com</a>
<a href=""mailto:f.a.c.tf.in.di.n.go.ffi.ce.2.2.7.7@gmail.com"">f.a.c.tf.in.di.n.go.ffi.ce.2.2.7.7@gmail.com</a>
<a href=""mailto:fa.ctfi.nd.in.go.ffi.c.e2.27.7@gmail.com"">fa.ctfi.nd.in.go.ffi.c.e2.27.7@gmail.com</a>
<a href=""mailto:f.a.c.t.fi.n.din.g.off.ice2277@gmail.com"">f.a.c.t.fi.n.din.g.off.ice2277@gmail.com</a>
<a href=""mailto:fac.tf.i.nd.i.n.g.off.i.c.e227.7@gmail.com"">fac.tf.i.nd.i.n.g.off.i.c.e227.7@gmail.com</a>
<a href=""mailto:f.ac.tf.i.nd.ingoffice227.7@gmail.com"">f.ac.tf.i.nd.ingoffice227.7@gmail.com</a>
<a href=""mailto:fa.c.t.f.indi.n.g.o.f.fi.c.e227.7@gmail.com"">fa.c.t.f.indi.n.g.o.f.fi.c.e227.7@gmail.com</a>
<a href=""mailto:f.a.ctfi.n.d.i.n.g.offi.ce2.2.77@gmail.com"">f.a.ctfi.n.d.i.n.g.offi.ce2.2.77@gmail.com</a>
<a href=""mailto:fac.tfi.nd.i.n.goff.ic.e.2.2.7.7@gmail.com"">fac.tfi.nd.i.n.goff.ic.e.2.2.7.7@gmail.com</a>
<a href=""mailto:f.act.f.in.d.in.go.ff.ic.e.22.7.7@gmail.com"">f.act.f.in.d.in.go.ff.ic.e.22.7.7@gmail.com</a>
<a href=""mailto:fac.t.f.i.nd.ing.o.f.f.ice2277@gmail.com"">fac.t.f.i.nd.ing.o.f.f.ice2277@gmail.com</a>
<a href=""mailto:fa.c.tf.indi.n.go.f.fi.ce.227.7@gmail.com"">fa.c.tf.indi.n.go.f.fi.ce.227.7@gmail.com</a>
<a href=""mailto:fac.tfin.din.goff.ice.2.2.7.7@gmail.com"">fac.tfin.din.goff.ice.2.2.7.7@gmail.com</a>
<a href=""mailto:f.act.find.ing.offi.ce.22.77@gmail.com"">f.act.find.ing.offi.ce.22.77@gmail.com</a>
<a href=""mailto:f.ac.t.fin.di.ng.o.ffic.e2.2.7.7@gmail.com"">f.ac.t.fin.di.ng.o.ffic.e2.2.7.7@gmail.com</a>
<a href=""mailto:f.act.f.indi.n.goff.ic.e.227.7@gmail.com"">f.act.f.indi.n.goff.ic.e.227.7@gmail.com</a>
<a href=""mailto:fac.t.f.in.din.g.office.2.277@gmail.com"">fac.t.f.in.din.g.office.2.277@gmail.com</a>
<a href=""mailto:f.a.ct.fin.d.ingof.f.ice.2.2.77@gmail.com"">f.a.ct.fin.d.ingof.f.ice.2.2.77@gmail.com</a>
<a href=""mailto:fac.t.f.i.n.di.ngof.f.ic.e2277@gmail.com"">fac.t.f.i.n.di.ngof.f.ic.e2277@gmail.com</a>
<a href=""mailto:f.a.c.t.fi.ndin.g.of.fi.ce.2.27.7@gmail.com"">f.a.c.t.fi.ndin.g.of.fi.ce.2.27.7@gmail.com</a>
<a href=""mailto:fac.tf.i.n.d.i.n.g.o.ffice227.7@gmail.com"">fac.tf.i.n.d.i.n.g.o.ffice227.7@gmail.com</a>
<a href=""mailto:f.a.c.t.fi.nding.offi.c.e.2.2.7.7@gmail.com"">f.a.c.t.fi.nding.offi.c.e.2.2.7.7@gmail.com</a>
<a href=""mailto:f.act.f.i.n.dingo.f.fic.e2.2.77@gmail.com"">f.act.f.i.n.dingo.f.fic.e2.2.77@gmail.com</a>
<a href=""mailto:fac.tf.i.n.d.i.n.g.o.f.f.i.c.e.2277@gmail.com"">fac.tf.i.n.d.i.n.g.o.f.f.i.c.e.2277@gmail.com</a>
<a href=""mailto:f.ac.tfi.nding.o.ff.i.ce.2.2.7.7@gmail.com"">f.ac.tfi.nding.o.ff.i.ce.2.2.7.7@gmail.com</a>
<a href=""mailto:f.a.c.t.fi.n.d.i.n.g.off.ice.2277@gmail.com"">f.a.c.t.fi.n.d.i.n.g.off.ice.2277@gmail.com</a>
<a href=""mailto:fac.tf.in.dingof.fi.ce.2277@gmail.com"">fac.tf.in.dingof.fi.ce.2277@gmail.com</a>
<a href=""mailto:fa.c.tf.i.n.din.g.o.ffice.227.7@gmail.com"">fa.c.tf.i.n.din.g.o.ffice.227.7@gmail.com</a>
<a href=""mailto:fa.c.tf.i.nding.of.f.i.ce2.2.77@gmail.com"">fa.c.tf.i.nding.of.f.i.ce2.2.77@gmail.com</a>
<a href=""mailto:fa.c.t.fi.nd.i.n.go.f.fi.ce2.2.7.7@gmail.com"">fa.c.t.fi.nd.i.n.go.f.fi.ce2.2.7.7@gmail.com</a>
<a href=""mailto:fa.ctfin.d.i.ngof.f.i.c.e.2277@gmail.com"">fa.ctfin.d.i.ngof.f.i.c.e.2277@gmail.com</a>
<a href=""mailto:factfi.ndi.ngo.ff.i.c.e227.7@gmail.com"">factfi.ndi.ngo.ff.i.c.e227.7@gmail.com</a>
<a href=""mailto:f.act.fin.di.n.go.f.fi.ce.2.27.7@gmail.com"">f.act.fin.di.n.go.f.fi.ce.2.27.7@gmail.com</a>
<a href=""mailto:factfi.n.d.i.n.g.o.f.f.i.ce.22.7.7@gmail.com"">factfi.n.d.i.n.g.o.f.f.i.ce.22.7.7@gmail.com</a>
<a href=""mailto:fa.ct.f.in.d.ingo.f.fi.c.e227.7@gmail.com"">fa.ct.f.in.d.ingo.f.fi.c.e227.7@gmail.com</a>
<a href=""mailto:f.actfind.i.n.gof.f.ice2.2.77@gmail.com"">f.actfind.i.n.gof.f.ice2.2.77@gmail.com</a>
<a href=""mailto:fa.ctfi.n.di.n.g.o.f.f.i.c.e22.7.7@gmail.com"">fa.ctfi.n.di.n.g.o.f.f.i.c.e22.7.7@gmail.com</a>
<a href=""mailto:fac.t.fi.ndin.g.offi.ce.2.277@gmail.com"">fac.t.fi.ndin.g.offi.ce.2.277@gmail.com</a>
<a href=""mailto:f.a.c.t.f.i.nd.in.goff.i.ce227.7@gmail.com"">f.a.c.t.f.i.nd.in.goff.i.ce227.7@gmail.com</a>
<a href=""mailto:fact.fin.dingo.ff.i.c.e.2.277@gmail.com"">fact.fin.dingo.ff.i.c.e.2.277@gmail.com</a>
<a href=""mailto:factfin.d.ingo.ff.ice2.27.7@gmail.com"">factfin.d.ingo.ff.ice2.27.7@gmail.com</a>
<a href=""mailto:fa.ct.fi.ndi.ngof.f.ice22.77@gmail.com"">fa.ct.fi.ndi.ngof.f.ice22.77@gmail.com</a>
<a href=""mailto:fac.tfi.n.din.goff.i.c.e.2.2.77@gmail.com"">fac.tfi.n.din.goff.i.c.e.2.2.77@gmail.com</a>
<a href=""mailto:fa.c.tfin.d.in.gof.f.i.ce2277@gmail.com"">fa.c.tfin.d.in.gof.f.i.ce2277@gmail.com</a>
<a href=""mailto:f.actf.in.din.goffi.c.e.2277@gmail.com"">f.actf.in.din.goffi.c.e.2277@gmail.com</a>
<a href=""mailto:fact.fin.d.i.ng.of.f.i.ce.2.2.77@gmail.com"">fact.fin.d.i.ng.of.f.i.ce.2.2.77@gmail.com</a>
<a href=""mailto:f.a.c.tf.i.n.din.gof.f.i.ce.2.2.7.7@gmail.com"">f.a.c.tf.i.n.din.gof.f.i.ce.2.2.7.7@gmail.com</a>
<a href=""mailto:fac.t.fi.n.d.in.g.o.ff.i.ce22.77@gmail.com"">fac.t.fi.n.d.in.g.o.ff.i.ce22.77@gmail.com</a>
<a href=""mailto:f.a.ct.fin.d.i.ng.o.f.fi.ce.2.27.7@gmail.com"">f.a.ct.fin.d.i.ng.o.f.fi.ce.2.27.7@gmail.com</a>
<a href=""mailto:fa.c.t.f.i.ndin.goffice2.2.7.7@gmail.com"">fa.c.t.f.i.ndin.goffice2.2.7.7@gmail.com</a>
<a href=""mailto:factf.ind.ingo.ff.ic.e2.2.77@gmail.com"">factf.ind.ingo.ff.ic.e2.2.77@gmail.com</a>
<a href=""mailto:f.a.c.tf.i.n.di.n.g.offi.c.e2.277@gmail.com"">f.a.c.tf.i.n.di.n.g.offi.c.e2.277@gmail.com</a>
<a href=""mailto:fa.ctf.ind.ingof.f.ic.e227.7@gmail.com"">fa.ctf.ind.ingof.f.ic.e227.7@gmail.com</a>
<a href=""mailto:f.act.f.i.nd.in.go.f.f.ice22.7.7@gmail.com"">f.act.f.i.nd.in.go.f.f.ice22.7.7@gmail.com</a>
<a href=""mailto:fa.ctfi.n.din.go.f.f.ice22.77@gmail.com"">fa.ctfi.n.din.go.f.f.ice22.77@gmail.com</a>
<a href=""mailto:f.ac.t.fi.nd.in.go.f.fic.e2277@gmail.com"">f.ac.t.fi.nd.in.go.f.fic.e2277@gmail.com</a>
<a href=""mailto:fac.t.f.i.n.di.ng.o.f.f.ice22.77@gmail.com"">fac.t.f.i.n.di.ng.o.f.f.ice22.77@gmail.com</a>
<a href=""mailto:f.a.c.t.f.i.n.d.i.ngoffi.c.e.2.2.7.7@gmail.com"">f.a.c.t.f.i.n.d.i.ngoffi.c.e.2.2.7.7@gmail.com</a>
<a href=""mailto:f.actf.i.n.d.ing.off.ice.2.277@gmail.com"">f.actf.i.n.d.ing.off.ice.2.277@gmail.com</a>
<a href=""mailto:fac.t.fi.n.di.n.go.f.f.i.c.e.2.277@gmail.com"">fac.t.fi.n.di.n.go.f.f.i.c.e.2.277@gmail.com</a>
<a href=""mailto:f.ac.tfi.n.d.ing.o.ffic.e.2.277@gmail.com"">f.ac.tfi.n.d.ing.o.ffic.e.2.277@gmail.com</a>
<a href=""mailto:fa.c.t.f.ind.in.g.o.f.f.i.c.e.227.7@gmail.com"">fa.c.t.f.ind.in.g.o.f.f.i.c.e.227.7@gmail.com</a>
<a href=""mailto:f.a.c.tf.ind.ingo.f.f.ic.e2.2.7.7@gmail.com"">f.a.c.tf.ind.ingo.f.f.ic.e2.2.7.7@gmail.com</a>
<a href=""mailto:fac.t.f.i.n.di.ngo.f.f.i.ce.2.277@gmail.com"">fac.t.f.i.n.di.ngo.f.f.i.ce.2.277@gmail.com</a>
<a href=""mailto:f.ac.tf.in.din.g.o.f.f.ice.22.7.7@gmail.com"">f.ac.tf.in.din.g.o.f.f.ice.22.7.7@gmail.com</a>
<a href=""mailto:fa.c.tfin.d.i.ng.office22.77@gmail.com"">fa.c.tfin.d.i.ng.office22.77@gmail.com</a>
<a href=""mailto:f.act.f.in.din.g.of.f.i.c.e.227.7@gmail.com"">f.act.f.in.din.g.of.f.i.c.e.227.7@gmail.com</a>
<a href=""mailto:fa.ctfin.ding.o.ff.i.ce.22.7.7@gmail.com"">fa.ctfin.ding.o.ff.i.ce.22.7.7@gmail.com</a>
<a href=""mailto:f.a.c.tf.i.nd.in.gof.f.ice2277@gmail.com"">f.a.c.tf.i.nd.in.gof.f.ice2277@gmail.com</a>
<a href=""mailto:fa.c.t.f.in.din.g.off.ice2.27.7@gmail.com"">fa.c.t.f.in.din.g.off.ice2.27.7@gmail.com</a>
<a href=""mailto:f.act.findin.go.f.fice227.7@gmail.com"">f.act.findin.go.f.fice227.7@gmail.com</a>
<a href=""mailto:fac.t.fin.d.in.g.of.fic.e2277@gmail.com"">fac.t.fin.d.in.g.of.fic.e2277@gmail.com</a>
<a href=""mailto:fa.c.tfi.ndi.n.g.o.f.f.i.ce.2.277@gmail.com"">fa.c.tfi.ndi.n.g.o.f.f.i.ce.2.277@gmail.com</a>
<a href=""mailto:factfi.ndin.gof.fice.2.277@gmail.com"">factfi.ndin.gof.fice.2.277@gmail.com</a>
<a href=""mailto:f.a.c.t.fi.nd.i.ng.of.fi.c.e2.2.77@gmail.com"">f.a.c.t.fi.nd.i.ng.of.fi.c.e2.2.77@gmail.com</a>
<a href=""mailto:fa.ctfind.i.ngo.ff.ice22.7.7@gmail.com"">fa.ctfind.i.ngo.ff.ice22.7.7@gmail.com</a>
<a href=""mailto:fac.t.f.ind.i.n.goff.ice.2277@gmail.com"">fac.t.f.ind.i.n.goff.ice.2277@gmail.com</a>
<a href=""mailto:f.a.ctfind.in.goff.ice227.7@gmail.com"">f.a.ctfind.in.goff.ice227.7@gmail.com</a>
<a href=""mailto:fact.fi.n.d.i.n.goffi.c.e.2.2.7.7@gmail.com"">fact.fi.n.d.i.n.goffi.c.e.2.2.7.7@gmail.com</a>
<a href=""mailto:fact.f.in.d.i.ng.o.f.f.ic.e.2.2.7.7@gmail.com"">fact.f.in.d.i.ng.o.f.f.ic.e.2.2.7.7@gmail.com</a>
<a href=""mailto:f.act.findingoff.ic.e2.27.7@gmail.com"">f.act.findingoff.ic.e2.27.7@gmail.com</a>
<a href=""mailto:f.a.ctf.in.di.n.gof.f.ic.e.2277@gmail.com"">f.a.ctf.in.di.n.gof.f.ic.e.2277@gmail.com</a>
<a href=""mailto:fact.fi.nd.i.ngoffic.e22.7.7@gmail.com"">fact.fi.nd.i.ngoffic.e22.7.7@gmail.com</a>
<a href=""mailto:fa.ctfi.ndi.ng.offic.e2.2.7.7@gmail.com"">fa.ctfi.ndi.ng.offic.e2.2.7.7@gmail.com</a>
<a href=""mailto:fac.tfi.n.di.ng.off.i.ce.2.27.7@gmail.com"">fac.tfi.n.di.ng.off.i.ce.2.27.7@gmail.com</a>
<a href=""mailto:f.ac.tfi.ndin.g.of.f.i.ce22.77@gmail.com"">f.ac.tfi.ndin.g.of.f.i.ce22.77@gmail.com</a>
<a href=""mailto:fa.ct.fi.n.di.ng.of.f.i.c.e.22.7.7@gmail.com"">fa.ct.fi.n.di.ng.of.f.i.c.e.22.7.7@gmail.com</a>
<a href=""mailto:fa.ctf.i.n.d.i.n.go.f.fi.ce2277@gmail.com"">fa.ctf.i.n.d.i.n.go.f.fi.ce2277@gmail.com</a>
<a href=""mailto:fa.c.tfinding.o.ff.ic.e.22.7.7@gmail.com"">fa.c.tfinding.o.ff.ic.e.22.7.7@gmail.com</a>
<a href=""mailto:fac.t.fin.d.i.n.go.ff.i.c.e227.7@gmail.com"">fac.t.fin.d.i.n.go.ff.i.c.e227.7@gmail.com</a>
<a href=""mailto:fac.tf.i.n.di.n.gof.fi.c.e22.7.7@gmail.com"">fac.tf.i.n.di.n.gof.fi.c.e22.7.7@gmail.com</a>
<a href=""mailto:f.act.findingo.ff.i.ce22.77@gmail.com"">f.act.findingo.ff.i.ce22.77@gmail.com</a>
<a href=""mailto:f.a.ct.fi.n.d.i.ngoffic.e.2.2.77@gmail.com"">f.a.ct.fi.n.d.i.ngoffic.e.2.2.77@gmail.com</a>
<a href=""mailto:fa.ct.f.i.n.di.ng.of.f.ice.22.77@gmail.com"">fa.ct.f.i.n.di.ng.of.f.ice.22.77@gmail.com</a>
<a href=""mailto:fa.c.t.fi.n.di.n.g.o.ffic.e.2.27.7@gmail.com"">fa.c.t.fi.n.di.n.g.o.ffic.e.2.27.7@gmail.com</a>
<a href=""mailto:f.actfi.n.d.i.ng.offi.c.e.2277@gmail.com"">f.actfi.n.d.i.ng.offi.c.e.2277@gmail.com</a>
<a href=""mailto:f.a.c.tfi.n.d.ingo.f.f.i.c.e2.2.7.7@gmail.com"">f.a.c.tfi.n.d.ingo.f.f.i.c.e2.2.7.7@gmail.com</a>
<a href=""mailto:fa.ctfin.d.ingo.ffi.ce.2277@gmail.com"">fa.ctfin.d.ingo.ffi.ce.2277@gmail.com</a>
<a href=""mailto:fa.ctf.in.d.ingo.f.fi.ce.2.2.77@gmail.com"">fa.ctf.in.d.ingo.f.fi.ce.2.2.77@gmail.com</a>
<a href=""mailto:fac.t.fin.d.i.n.gof.f.ic.e.22.7.7@gmail.com"">fac.t.fin.d.i.n.gof.f.ic.e.22.7.7@gmail.com</a>
<a href=""mailto:f.act.f.indi.n.go.ffi.c.e2277@gmail.com"">f.act.f.indi.n.go.ffi.c.e2277@gmail.com</a>
<a href=""mailto:fac.tfind.ing.o.ffic.e.2.27.7@gmail.com"">fac.tfind.ing.o.ffic.e.2.27.7@gmail.com</a>
<a href=""mailto:fac.tfindi.n.g.of.fice2.2.77@gmail.com"">fac.tfindi.n.g.of.fice2.2.77@gmail.com</a>
<a href=""mailto:f.ac.t.fin.d.i.n.go.ffi.c.e2.27.7@gmail.com"">f.ac.t.fin.d.i.n.go.ffi.c.e2.27.7@gmail.com</a>
<a href=""mailto:f.actfi.nding.o.ffic.e2.2.77@gmail.com"">f.actfi.nding.o.ffic.e2.2.77@gmail.com</a>
<a href=""mailto:f.actfi.nding.off.i.c.e.22.77@gmail.com"">f.actfi.nding.off.i.c.e.22.77@gmail.com</a>
<a href=""mailto:fa.ct.fin.di.ngo.f.f.i.ce22.7.7@gmail.com"">fa.ct.fin.di.ngo.f.f.i.ce22.7.7@gmail.com</a>
<a href=""mailto:fac.tfi.nd.ing.of.fic.e2.27.7@gmail.com"">fac.tfi.nd.ing.of.fic.e2.27.7@gmail.com</a>
<a href=""mailto:fact.fi.ndin.gof.f.i.ce227.7@gmail.com"">fact.fi.ndin.gof.f.i.ce227.7@gmail.com</a>
<a href=""mailto:fact.f.ind.i.n.gof.f.ic.e2.27.7@gmail.com"">fact.f.ind.i.n.gof.f.ic.e2.27.7@gmail.com</a>
<a href=""mailto:f.act.fi.nd.i.ng.of.f.ice.2.27.7@gmail.com"">f.act.fi.nd.i.ng.of.f.ice.2.27.7@gmail.com</a>
<a href=""mailto:f.a.ct.f.ind.i.ng.of.fi.c.e2.277@gmail.com"">f.a.ct.f.ind.i.ng.of.fi.c.e2.277@gmail.com</a>
<a href=""mailto:fa.ctfi.nd.in.g.o.ff.ic.e22.7.7@gmail.com"">fa.ctfi.nd.in.g.o.ff.ic.e22.7.7@gmail.com</a>
<a href=""mailto:fac.tf.i.ndi.ng.off.ic.e.2.277@gmail.com"">fac.tf.i.ndi.ng.off.ic.e.2.277@gmail.com</a>
<a href=""mailto:fac.tf.i.n.d.ing.o.ff.i.ce22.7.7@gmail.com"">fac.tf.i.n.d.ing.o.ff.i.ce22.7.7@gmail.com</a>
<a href=""mailto:fa.ctf.in.d.i.n.g.o.ff.i.c.e.2277@gmail.com"">fa.ctf.in.d.i.n.g.o.ff.i.c.e.2277@gmail.com</a>
<a href=""mailto:f.a.c.t.fi.n.d.in.g.o.ff.ice.2277@gmail.com"">f.a.c.t.fi.n.d.in.g.o.ff.ice.2277@gmail.com</a>
<a href=""mailto:fa.ct.fi.ndi.n.go.ff.ice.2.277@gmail.com"">fa.ct.fi.ndi.n.go.ff.ice.2.277@gmail.com</a>
<a href=""mailto:f.act.findi.n.goffi.c.e.2.2.7.7@gmail.com"">f.act.findi.n.goffi.c.e.2.2.7.7@gmail.com</a>
<a href=""mailto:fact.findi.ng.o.f.fi.ce.2277@gmail.com"">fact.findi.ng.o.f.fi.ce.2277@gmail.com</a>
<a href=""mailto:f.a.c.t.f.i.n.d.i.ng.off.ice227.7@gmail.com"">f.a.c.t.f.i.n.d.i.ng.off.ice227.7@gmail.com</a>
<a href=""mailto:f.a.c.tf.indin.g.of.fic.e2.2.77@gmail.com"">f.a.c.tf.indin.g.of.fic.e2.2.77@gmail.com</a>
<a href=""mailto:f.a.c.tfi.n.d.ing.of.fi.c.e.227.7@gmail.com"">f.a.c.tfi.n.d.ing.of.fi.c.e.227.7@gmail.com</a>
<a href=""mailto:fa.c.tf.ind.i.n.go.f.fi.ce22.7.7@gmail.com"">fa.c.tf.ind.i.n.go.f.fi.ce22.7.7@gmail.com</a>
<a href=""mailto:f.actf.in.d.in.goffi.ce.2277@gmail.com"">f.actf.in.d.in.goffi.ce.2277@gmail.com</a>
<a href=""mailto:fa.c.tfindi.n.g.o.ffi.ce2.27.7@gmail.com"">fa.c.tfindi.n.g.o.ffi.ce2.27.7@gmail.com</a>
<a href=""mailto:fa.ct.fin.din.g.o.f.f.i.c.e2.2.77@gmail.com"">fa.ct.fin.din.g.o.f.f.i.c.e2.2.77@gmail.com</a>
<a href=""mailto:f.a.ctfi.nd.i.ng.of.f.i.ce.2.2.77@gmail.com"">f.a.ctfi.nd.i.ng.of.f.i.ce.2.2.77@gmail.com</a>
<a href=""mailto:f.actf.i.ndi.ngo.f.f.ic.e2.2.77@gmail.com"">f.actf.i.ndi.ngo.f.f.ic.e2.2.77@gmail.com</a>
<a href=""mailto:straub-mark@outlook.com"">straub-mark@outlook.com</a>"
cisNs898,Railgun not crossing walls ACS code,Tomasm21,C++,Saturday 17th of June 2023 12:09:20 PM CDT,"#library ""SW""
#include ""zcommon.acs""
#include ""zdaemon.acs""

Script 1024 (int lowang){

int i;
int LoWangTID;
int railTID;
int x = 0;
int y = 0;
int z = 0;
int xb, yb, zb;
int this = 0;

//...

if(lowang == 2){
	LoWangTID = activatortid();
	
	for(i = 0; i < 32; i++){
		if(playerLoWangClone[i] == LoWangTID){
			break;
		}
	}
	
	railTID = 46000+Various_tags[9];
    Various_tags[9] = Various_tags[9] + 1;    
    if (Various_tags[9] > 999) Various_tags[9] = 0;
	
	setactivatortotarget(0);
	
	targetHeight =  GetActorZ(LoWangTID) - GetActorZ(0);
	
	dist = fixedmul(200.0, better_sqrt(fixedmul(fixeddiv(GetActorX(0)-GetActorX(LoWangTID), 200.0), fixeddiv(GetActorX(0)-GetActorX(LoWangTID), 200.0)) +
									   fixedmul(fixeddiv(GetActorY(0)-GetActorY(LoWangTID), 200.0), fixeddiv(GetActorY(0)-GetActorY(LoWangTID), 200.0))));
	
	LineAttack (LoWangTID, GetActorAngle(LoWangTID), vectorangle(dist, targetHeight), 20, ""BulletPuff"", ""Railgun"", 2048.0, 0, railTID);
	xb = getactorx(railTID); yb = getactory(railTID); zb = getactorz(railTID);
	
	//vectorangle(dist, height)
	this = (dist/30)>>16;
	
	setActivator(LoWangTID);
	x = getactorx(0);
    y = getactory(0);
    z = getactorz(0)+32.0;
	
	acs_executealways(2555, 0, LoWangTID);
	
	if(ClassifyActor(GetActorProperty(railTID, APROP_TracerTID)) & ACTOR_MONSTER) {
		log(s:""Bulet puff hit an actor"");
	}
	else{ log(s:""Bulet puff did not hit an actor""); }
	
	while (this > 0)
    {
		
        
        //SpawnForced(""KeySwamp"",x,y,z,0,GetActorAngle(0)>>8);
		x = x+FixedMul(cos(GetActorAngle(0)),FixedMul(30.0,cos(-vectorangle(dist, targetHeight))));
		y = y+FixedMul(sin(GetActorAngle(0)),FixedMul(30.0,cos(-vectorangle(dist, targetHeight))));
		z = z+FixedMul(30.0,sin(-vectorangle(dist, targetHeight)));

		//Rail graphics class thing
        SpawnForced(""KeySwamp"", x, y, z, 0, GetActorAngle(0)>>8);

        //Damage thing with shorter duration and no rendering style
        spawnprojectile(0,""FlameLarge"",GetActorAngle(0)>>8,64,0,0,LoWangTID+i*5 + 35000);
		
        setactorposition(LoWangTID+i*5 + 35000,x,y,z,0);

		if(this % 15 == 0 || this == (dist/30>>16)-1)
		{
			setActivator(LoWangTID+i*5 + 35000);
			activatorsound(""RAILGF2"",255);
			setActivator(LoWangTID);
		}

        // delay(1);
		
		thing_changetid(LoWangTID+i*5 + 35000, 0);
		this--;
    }
}
//...
}"
JBtMa4uz,Untitled,Rhytum,C#,Saturday 17th of June 2023 12:08:56 PM CDT,"//------------------------------------------------------------------------------------------------------------------------
//FigNine.cs file

using System;
using System.Collections.Generic;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Draw.src.Model
{
	[Serializable]
	public class FigNine:ShapeM
	{
		#region Constructor

		public FigNine(RectangleF rect) : base(rect)
		{
		}

		public FigNine(RectangleShapeM rectangle) : base(rectangle)
		{
		}

		#endregion


		public override bool Contains(PointF point)
		{
			if (base.Contains(point))
				// Проверка дали е в обекта само, ако точката е в обхващащия правоъгълник.
				// В случая на правоъгълник - директно връщаме true
				return true;
			else
				// Ако не е в обхващащия правоъгълник, то неможе да е в обекта и => false
				return false;
		}

		/// Частта, визуализираща конкретния примитив.

		public override void DrawSelf(Graphics grfx)
		{
			base.DrawSelf(grfx);
			base.RotateShapeM(grfx);

			grfx.FillEllipse(new SolidBrush(FillColor), Rectangle.X, Rectangle.Y, Rectangle.Width, Rectangle.Height);
			grfx.DrawEllipse(new Pen(StrokeColor, BorderWidth), Rectangle.X, Rectangle.Y, Rectangle.Width, Rectangle.Height);

			float c = (Rectangle.X + Rectangle.Width / 4) - (Location.X + (Width / 2));
			float y = (float)((Location.Y - (-Height / 2)) + Math.Sqrt((Math.Pow(Height / 2, 2)) * (1 - Math.Pow(c, 2) / Math.Pow(Width / 2, 2))));
			
			PointF p1 = new PointF(Rectangle.X, Rectangle.Y + Rectangle.Height / 2);
			PointF p2 = new PointF(Rectangle.X + Rectangle.Width, Rectangle.Y + Rectangle.Height / 2);

			PointF p3 = new PointF(Rectangle.X + Rectangle.Width / 2, Rectangle.Y);
			PointF p4 = new PointF(Rectangle.X + Rectangle.Width / 2, Rectangle.Y + Rectangle.Height);

			grfx.DrawLine(new Pen(StrokeColor, BorderWidth), p1, p2);
			grfx.DrawLine(new Pen(StrokeColor, BorderWidth), p3, p4);

			grfx.ResetTransform();
        }
	}
}
//------------------------------------------------------------------------------------------------------------------------
// MainForm.cs - 368 line

        private void toolStripButton13_Click(object sender, EventArgs e)
        {
			dialogProcessor.AddRandomFigNine();
            statusBar.Items[0].Text = ""Последно действие: Рисуване на правоъгълник"";
            viewPort.Invalidate();
		}

// MainForm.cs - 529 line

        private void figNineShiftFNToolStripMenuItem_Click(object sender, EventArgs e)
        {
			dialogProcessor.AddRandomFigNine();
			statusBar.Items[0].Text = ""Последно действие: Рисуване на 9."";
			viewPort.Invalidate();
		}

//------------------------------------------------------------------------------------------------------------------------
// MainForm.Designer.cs - 42 line
            this.figNineShiftFNToolStripMenuItem = new System.Windows.Forms.ToolStripMenuItem();

// MainForm.Designer.cs - 63 line
            this.toolStripButton13 = new System.Windows.Forms.ToolStripButton();

// MainForm.Designer.cs - 173
            this.figNineShiftFNToolStripMenuItem});

// MainForm.Designer.cs - 210 line

            // figNineShiftFNToolStripMenuItem
            this.figNineShiftFNToolStripMenuItem.Name = ""figNineShiftFNToolStripMenuItem"";
            this.figNineShiftFNToolStripMenuItem.Size = new System.Drawing.Size(179, 22);
            this.figNineShiftFNToolStripMenuItem.Text = ""FigNine   Shift+F+N"";
            this.figNineShiftFNToolStripMenuItem.Click += new System.EventHandler(this.figNineShiftFNToolStripMenuItem_Click);

// MainForm.Designer.cs - 264 line
            this.toolStripButton13});

// MainForm.Designer.cs - 404 line

            // toolStripButton13
            this.toolStripButton13.DisplayStyle = System.Windows.Forms.ToolStripItemDisplayStyle.Image;
            this.toolStripButton13.Image = ((System.Drawing.Image)(resources.GetObject(""toolStripButton13.Image"")));
            this.toolStripButton13.ImageTransparentColor = System.Drawing.Color.Magenta;
            this.toolStripButton13.Name = ""toolStripButton13"";
            this.toolStripButton13.Size = new System.Drawing.Size(24, 24);
            this.toolStripButton13.Text = ""toolStripButton13"";
            this.toolStripButton13.Click += new System.EventHandler(this.toolStripButton13_Click);

// MainForm.Designer.cs - 553 line
        	private System.Windows.Forms.ToolStripButton toolStripButton13;

// MainForm.Designer.cs - last line
			private System.Windows.Forms.ToolStripMenuItem figNineShiftFNToolStripMenuItem;

//------------------------------------------------------------------------------------------------------------------------
// DialogProcessor.cs - 93 line

		public void AddRandomFigNine()
		{
			Random rnd = new Random();
			int x = rnd.Next(100, 1000);
			int y = rnd.Next(100, 600);

            FigNine nine = new FigNine(new Rectangle(x, y, 100, 100));

		    nine.FillColor = Color.White;
			nine.StrokeColor = Color.Black;
			nine.BorderWidth = 2;
			nine.ShapeAngle = 45;

			ShapeMList.Add(nine);
		}

//------------------------------------------------------------------------------------------------------------------------"
S2H1y5ur,N19-21_6646,Korotkodul,Python,Saturday 17th of June 2023 11:56:08 AM CDT,"def f(x,y,k):
    bef = k - 1
    if max(x,y) >= 50:
        if bef == 3:
            return 1
        else: #bef < 3
            return 0
    elif bef == 3: #max(x,y) < 50
        return 0
    A = f(x + 3, y, k + 1)
    B = f(2 * x, y, k + 1)
    C = f(x, y + 3, k + 1)
    D = f(x, 2 * y, k + 1)
    if k % 2 == 1: #П
        return A or B or C or D
    else: #В
        return A and B and C and D
a = []
for s in range(28):
    if f(22, s, 1):
        a.append(s)
print(a)
"
AZWuZ1k1,wireless,goldfiction,Lua,Saturday 17th of June 2023 11:48:19 AM CDT,"-- get args
local args = { ... }

-- validate args
if #args < 1 or #args > 2 or args[1] == ""usage"" then
  print( ""Usage: wireless <port> [label]"" )
  return
end

local label = args[2] or os.getComputerLabel()
local done

rednet.open( args[1] )
rednet.host( ""wireless"", label )

-- modify the functions in the term library
-- to allow messages to be collected
local messages = {}
local termLocal
for k,v in pairs(term) do
  -- ""term.redirect()"" causes issues
  -- plus add support to print text without wirelessly sending it
  if type(v) == ""function"" and k ~= ""redirect"" then
    term[k] = function(...)
      if not termLocal then
        table.insert( messages, {
          type = k,
          args = { ... }
        } )
      end
      return v( ... )
    end
  end
end

-- function to receive commands
function receive()
  local sender, data = rednet.receive( ""remote"" )
  if data and data.name == label then
    termLocal = true
    print( 'Running ""' .. data.args[1] .. '""' )
    termLocal = nil
    shell.run( unpack( data.args ) )
    rednet.send( sender, messages, ""remoteResult"" )
    messages = {}
  end
  os.sleep( 1 )
end

-- function to check for pressing ""end""
function shutdown()
  while true do
    local _, key = os.pullEvent( ""key"" )
    if key == keys[""end""] then
      done = true
      break
    end
  end
end

print( ""Wireless mode activated"" )
print( 'Press ""End"" to exit' )

messages = {}

-- main loop
while not done do
  parallel.waitForAny( receive, shutdown )
end

-- shutdown process
rednet.unhost( ""wireless"", label )
rednet.close( args[1] )"
3zwH1Z40,interface,Yousuf1791,PHP,Saturday 17th of June 2023 11:44:47 AM CDT,"<?php 

interface parentClass1{

	function calc($a, $b); //Can not set access modifier

}

interface parentClass2{

	function sub($c, $d);

}

class childClass implements parentClass1, parentClass2{

	public function calc($a, $b){

		echo $a + $b;

	}

	public function sub($c, $d){

		echo $c - $d;

	}

}

$test = new childClass();

$test->calc(20,35);
echo ""<br>"";

$test->sub(75, 30);

?>"
RgUhF1s0,N20_6647,Korotkodul,Python,Saturday 17th of June 2023 11:38:36 AM CDT,"def f(x,y,k):
    now = k - 1
    if x * y >= 123:
        if now == 3:
            return 1
        elif now < 3:
            return 0
    elif now == 3: #and x*y < 123
        return 0
    A = f(x + 2, y, k + 1)
    B = f(2*x, y, k + 1)
    C = f(x,y + 2, k + 1)
    D = f(x, y*2, k + 1)
    if k % 2 == 0:
        return A and B and C and D
    else:
        return A or B or C or D

a = []
s = 1
for s in range(40, 0, -1):
    if len(a) == 2:
        break
    if f(3, s, 1):
        a.append(s)
print(a)
"
R5Zf2KUz,邀您一起看：合成大西瓜,xiaomianao666,JavaScript,Saturday 17th of June 2023 11:09:07 AM CDT,海阔视界规则分享，当前分享的是：二级页面详情￥page_detail￥合成大西瓜@@eyJkYXRhIjoie1wiYXNzb2NpYXRlZE1vZGVsc01hcEZvckpvaW5UYWJsZVwiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhGS1wiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhvdXRGS1wiOnt9LFwiZmllbGRzVG9TZXRUb0RlZmF1bHRcIjpbXSxcImdtdE1vZGlmaWVkXCI6MCxcImlkXCI6MCxcImxhc3RfY2hhcHRlcl9ydWxlXCI6XCJcIixcImxpc3RUb0NsZWFyQXNzb2NpYXRlZEZLXCI6W10sXCJsaXN0VG9DbGVhclNlbGZGS1wiOltdLFwicGFnZUxpc3RcIjpbe1wiY29sX3R5cGVcIjpcIm1vdmllXzNcIixcIm5hbWVcIjpcIuabtOaWsOaVsOaNrlwiLFwicGF0aFwiOlwidXBkYXRlXCIsXCJydWxlXCI6XCJ2YXIgY2xvdWQgPSBiYXNlNjREZWNvZGUoZmV0Y2hDYWNoZShcXFwiaHR0cHM6Ly9naHByb3h5LmNvbS9odHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20veGl4aWZyZWUvSGlrZXIvbWFpbi95eGouanNvblxcXCIsMjQpKTtcXG5pZihjbG91ZC5pbmNsdWRlcyhcXFwi5ZCI6ZuGXFxcIikpe1xcbiAgICB3cml0ZUZpbGUoXFxcImhpa2VyOi8vZmlsZXMvcnVsZXMvSG9vZC95eGouanNvblxcXCIsY2xvdWQpO1xcbiAgICB3cml0ZUZpbGUoXFxcImhpa2VyOi8vZmlsZXMvY2FjaGUvdXBkYXRlL3l4ai50eHRcXFwiLG5ldyBEYXRlKCkrJycpO1xcbn1cIn1dLFwic2F2ZWRcIjpmYWxzZSxcInRpdGxlXCI6XCLmuLjmiI/pm4bwnZSlXCIsXCJ2ZXJzaW9uXCI6MCxcInVybFwiOlwiaHR0cDovL3Rvb2wubGl1bWluZ3llLmNuL3dhdGVybWVsb24jZ2FtZVRoZW1lIztnZXQ7VVRGLTg7e1VzZXItQWdlbnRATW96aWxsYS81LjAgKExpbnV477yb77ybIEFuZHJvaWQgMTHvvJvvvJsgTWkgMTAgUHJvKSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvODguMC40MzI0LjE1MiBNb2JpbGUgU2FmYXJpLzUzNy4zNn1cIixcImNvbF90eXBlXCI6XCJtb3ZpZV8xXCIsXCJmaW5kX3J1bGVcIjpcImpzOlxcbnNldFJlc3VsdChbe1xcbiAgICBjb2xfdHlwZTogJ3g1X3dlYnZpZXdfc2luZ2xlJyxcXG4gICAgdXJsOiBNWV9VUkwsXFxuICAgIGRlc2M6IFxcXCJhdXRvJiZmbG9hdFxcXCIsXFxuICAgIGV4dHJhOiB7XFxuICAgICAgICBjYW5CYWNrOiB0cnVlXFxuICAgIH1cXG59XSlcIixcImdyb3VwXCI6XCLikaDmjqjojZBcIixcInVhXCI6XCJtb2JpbGVcIixcInByZVJ1bGVcIjpcIi8v6Ieq5Yqo5pu05paw77yfMeWQr+eUqCwgMOWFs+mXrVxcbnZhciB1cGRhdGUgPSAwO1xcblxcbi8v5pu05paw6Ze06ZqULCDljZXkvY3kuLrlpKlcXG52YXIgdXB0aW1lID0gMztcXG5cXG52YXIgbG9jYWwgPSBcXFwiaGlrZXI6Ly9maWxlcy9ydWxlcy9Ib29kL3l4ai5qc29uXFxcIjtcXG52YXIgZGF0ZV90eHQgPSBcXFwiaGlrZXI6Ly9maWxlcy9jYWNoZS91cGRhdGUveXhqLnR4dFxcXCI7XFxuXFxuLy/orqHnrpfml7bpl7Tpl7TpmpRcXG52YXIgc3RhcnQgPSBuZXcgRGF0ZShmZXRjaChkYXRlX3R4dCkpOyBcXG52YXIgbm93ID0gbmV3IERhdGUoKTsgXFxudmFyIERfVCA9IG5vdy5nZXRUaW1lKCkgLSBzdGFydC5nZXRUaW1lKCk7IFxcbnZhciBEX0QgPSBEX1QgLyAoMTAwMCAqIDM2MDAgKiAyNCk7XFxudmFyIG15dGltZT1wYXJzZUludChEX0QpKycnO1xcblxcbmlmKCFmZXRjaChkYXRlX3R4dCkgfHwgIWZldGNoKGxvY2FsKSB8fCAodXBkYXRlPT0xJiZteXRpbWU+PXVwdGltZSkpe1xcbiAgICB0cnl7XFxuICAgICAgICB2YXIgY2xvdWQgPSBiYXNlNjREZWNvZGUoZmV0Y2goXFxcImh0dHBzOi8vZ2hwcm94eS5jb20vaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3hpeGlmcmVlL0hpa2VyL21haW4veXhqLmpzb25cXFwiLHt9KSk7XFxuICAgICAgICBpZihjbG91ZC5pbmNsdWRlcyhcXFwi5ZCI6ZuGXFxcIikpe1xcbiAgICAgICAgICAgIHdyaXRlRmlsZShsb2NhbCxjbG91ZCk7XFxuICAgICAgICAgICAgd3JpdGVGaWxlKGRhdGVfdHh0LG5ldyBEYXRlKCkrJycpO1xcbiAgICAgICAgfVxcbiAgICB9Y2F0Y2goZSl7fVxcbn1cIixcInBhZ2VzXCI6XCJbe1xcXCJjb2xfdHlwZVxcXCI6XFxcIm1vdmllXzNcXFwiLFxcXCJuYW1lXFxcIjpcXFwi5pu05paw5pWw5o2uXFxcIixcXFwicGF0aFxcXCI6XFxcInVwZGF0ZVxcXCIsXFxcInJ1bGVcXFwiOlxcXCJ2YXIgY2xvdWQgPSBiYXNlNjREZWNvZGUoZmV0Y2hDYWNoZShcXFxcXFxcImh0dHBzOi8vZ2hwcm94eS5jb20vaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3hpeGlmcmVlL0hpa2VyL21haW4veXhqLmpzb25cXFxcXFxcIiwyNCkpO1xcXFxuaWYoY2xvdWQuaW5jbHVkZXMoXFxcXFxcXCLlkIjpm4ZcXFxcXFxcIikpe1xcXFxuICAgIHdyaXRlRmlsZShcXFxcXFxcImhpa2VyOi8vZmlsZXMvcnVsZXMvSG9vZC95eGouanNvblxcXFxcXFwiLGNsb3VkKTtcXFxcbiAgICB3cml0ZUZpbGUoXFxcXFxcXCJoaWtlcjovL2ZpbGVzL2NhY2hlL3VwZGF0ZS95eGoudHh0XFxcXFxcXCIsbmV3IERhdGUoKSsnJyk7XFxcXG59XFxcIn1dXCJ9IiwicGljVXJsIjoiaHR0cDovL3N0YXRpYy5taXBhLmZ1bi9tYXN0ZXIvZ2FtZS9oZWNoZW5nZGF4aWd1YS9jb3Zlci5wbmdAUmVmZXJlcj0iLCJ0aXRsZSI6IuWQiOaIkOWkp+ilv+eTnCJ9
9h3DQkPv,Lift Problem 2023,stiky_fingaz,Python,Saturday 17th of June 2023 10:25:00 AM CDT,"q = int(input())
liftState = [int(x) for x in input().split(' ')]

capacity = len(liftState) * 4
currentLoad = q + sum(liftState)
diff = capacity - q

if diff < 0:
    print('No space')
else:
    fullWagons = currentLoad//4
    finalState = [4 for wagon in range(fullWagons)]
    if currentLoad % 4 != 0:
        lastWagon = currentLoad - sum(finalState)
        finalState.append(lastWagon)
    if len(finalState) < len(liftState):
        emptyWagons = len(liftState) - len(finalState)
        for emptyWagon in range(emptyWagons):
            finalState.append(0)
    print(finalState)"
fyuq60YV,api4.thetvdb.com/v4/series/75930/extended,filebot,JSON,Saturday 17th of June 2023 10:02:53 AM CDT,"{
   ""status"":""success"",
   ""data"":{
      ""id"":75930,
      ""name"":""Alias"",
      ""slug"":""alias"",
      ""image"":""https://artworks.thetvdb.com/banners/posters/75930-1.jpg"",
      ""nameTranslations"":[
         ""ces"",
         ""deu"",
         ""eng"",
         ""fin"",
         ""fra"",
         ""heb"",
         ""hun"",
         ""ita"",
         ""nld"",
         ""por"",
         ""rus"",
         ""spa"",
         ""zho"",
         ""pt""
      ],
      ""overviewTranslations"":[
         ""ces"",
         ""deu"",
         ""eng"",
         ""fin"",
         ""fra"",
         ""heb"",
         ""hun"",
         ""ita"",
         ""nld"",
         ""por"",
         ""rus"",
         ""spa"",
         ""zho""
      ],
      ""aliases"":[
         {
            ""language"":""deu"",
            ""name"":""ALIAS""
         }
      ],
      ""firstAired"":""2001-09-30"",
      ""lastAired"":""2006-05-22"",
      ""nextAired"":"""",
      ""score"":125431,
      ""status"":{
         ""id"":2,
         ""name"":""Ended"",
         ""recordType"":""series"",
         ""keepUpdated"":false
      },
      ""originalCountry"":""usa"",
      ""originalLanguage"":""eng"",
      ""defaultSeasonType"":1,
      ""isOrderRandomized"":false,
      ""lastUpdated"":""2023-06-14 22:03:01"",
      ""averageRuntime"":43,
      ""episodes"":null,
      ""overview"":""Sydney Bristow, an agent who has been tricked to believe she is working for the U.S. government is actually working for a criminal organization named the Alliance of Twelve. Upon learning this, Sydney becomes a double agent for the real CIA."",
      ""year"":""2001"",
      ""artworks"":[
         {
            ""id"":25360,
            ""image"":""https://artworks.thetvdb.com/banners/posters/75930-1.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/posters/75930-1_t.jpg"",
            ""language"":""eng"",
            ""type"":2,
            ""score"":100013,
            ""width"":680,
            ""height"":1000,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":15557,
            ""image"":""https://artworks.thetvdb.com/banners/graphical/75930-g3.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/graphical/75930-g3_t.jpg"",
            ""language"":""eng"",
            ""type"":1,
            ""score"":100010,
            ""width"":758,
            ""height"":140,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":905960,
            ""image"":""https://artworks.thetvdb.com/banners/posters/75930-8.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/posters/75930-8_t.jpg"",
            ""language"":""eng"",
            ""type"":2,
            ""score"":100008,
            ""width"":680,
            ""height"":1000,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":20482,
            ""image"":""https://artworks.thetvdb.com/banners/fanart/original/75930-4.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/fanart/original/75930-4_t.jpg"",
            ""language"":""eng"",
            ""type"":3,
            ""score"":100007,
            ""width"":1920,
            ""height"":1080,
            ""includesText"":false,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":5427,
            ""image"":""https://artworks.thetvdb.com/banners/graphical/3451-g.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/graphical/3451-g_t.jpg"",
            ""language"":""eng"",
            ""type"":1,
            ""score"":100007,
            ""width"":758,
            ""height"":140,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":15568,
            ""image"":""https://artworks.thetvdb.com/banners/graphical/75930-g4.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/graphical/75930-g4_t.jpg"",
            ""language"":""eng"",
            ""type"":1,
            ""score"":100007,
            ""width"":758,
            ""height"":140,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":882449,
            ""image"":""https://artworks.thetvdb.com/banners/fanart/original/75930-19.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/fanart/original/75930-19_t.jpg"",
            ""language"":""eng"",
            ""type"":3,
            ""score"":100005,
            ""width"":1920,
            ""height"":1080,
            ""includesText"":false,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":21839,
            ""image"":""https://artworks.thetvdb.com/banners/fanart/original/75930-8.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/fanart/original/75930-8_t.jpg"",
            ""language"":""eng"",
            ""type"":3,
            ""score"":100005,
            ""width"":1920,
            ""height"":1080,
            ""includesText"":false,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":20410,
            ""image"":""https://artworks.thetvdb.com/banners/fanart/original/75930-2.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/fanart/original/75930-2_t.jpg"",
            ""language"":""eng"",
            ""type"":3,
            ""score"":100005,
            ""width"":1920,
            ""height"":1080,
            ""includesText"":false,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":40408,
            ""image"":""https://artworks.thetvdb.com/banners/posters/75930-5.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/posters/75930-5_t.jpg"",
            ""language"":""eng"",
            ""type"":2,
            ""score"":100005,
            ""width"":680,
            ""height"":1000,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":20186,
            ""image"":""https://artworks.thetvdb.com/banners/fanart/original/75930-1.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/fanart/original/75930-1_t.jpg"",
            ""language"":""eng"",
            ""type"":3,
            ""score"":100004,
            ""width"":1920,
            ""height"":1080,
            ""includesText"":false,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":20493,
            ""image"":""https://artworks.thetvdb.com/banners/fanart/original/75930-5.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/fanart/original/75930-5_t.jpg"",
            ""language"":""eng"",
            ""type"":3,
            ""score"":100003,
            ""width"":1280,
            ""height"":720,
            ""includesText"":false,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":905959,
            ""image"":""https://artworks.thetvdb.com/banners/posters/75930-7.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/posters/75930-7_t.jpg"",
            ""language"":""eng"",
            ""type"":2,
            ""score"":100003,
            ""width"":680,
            ""height"":1000,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":11874,
            ""image"":""https://artworks.thetvdb.com/banners/graphical/75930-g.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/graphical/75930-g_t.jpg"",
            ""language"":""eng"",
            ""type"":1,
            ""score"":100003,
            ""width"":758,
            ""height"":140,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":24644,
            ""image"":""https://artworks.thetvdb.com/banners/fanart/original/75930-9.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/fanart/original/75930-9_t.jpg"",
            ""language"":""eng"",
            ""type"":3,
            ""score"":100002,
            ""width"":1920,
            ""height"":1080,
            ""includesText"":false,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":21838,
            ""image"":""https://artworks.thetvdb.com/banners/fanart/original/75930-7.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/fanart/original/75930-7_t.jpg"",
            ""language"":""eng"",
            ""type"":3,
            ""score"":100002,
            ""width"":1920,
            ""height"":1080,
            ""includesText"":false,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":20492,
            ""image"":""https://artworks.thetvdb.com/banners/fanart/original/75930-6.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/fanart/original/75930-6_t.jpg"",
            ""language"":""eng"",
            ""type"":3,
            ""score"":100002,
            ""width"":1280,
            ""height"":720,
            ""includesText"":false,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":20431,
            ""image"":""https://artworks.thetvdb.com/banners/fanart/original/75930-3.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/fanart/original/75930-3_t.jpg"",
            ""language"":""eng"",
            ""type"":3,
            ""score"":100002,
            ""width"":1280,
            ""height"":720,
            ""includesText"":false,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":25361,
            ""image"":""https://artworks.thetvdb.com/banners/posters/75930-2.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/posters/75930-2_t.jpg"",
            ""language"":""eng"",
            ""type"":2,
            ""score"":100002,
            ""width"":680,
            ""height"":1000,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":906091,
            ""image"":""https://artworks.thetvdb.com/banners/posters/75930-9.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/posters/75930-9_t.jpg"",
            ""language"":""eng"",
            ""type"":2,
            ""score"":100002,
            ""width"":680,
            ""height"":1000,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":12855,
            ""image"":""https://artworks.thetvdb.com/banners/blank/75930.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/blank/75930_t.jpg"",
            ""language"":""eng"",
            ""type"":1,
            ""score"":100002,
            ""width"":760,
            ""height"":140,
            ""includesText"":false,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":444321,
            ""image"":""https://artworks.thetvdb.com/banners/fanart/original/75930-14.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/fanart/original/75930-14_t.jpg"",
            ""language"":""eng"",
            ""type"":3,
            ""score"":100001,
            ""width"":1920,
            ""height"":1080,
            ""includesText"":false,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":882389,
            ""image"":""https://artworks.thetvdb.com/banners/fanart/original/75930-18.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/fanart/original/75930-18_t.jpg"",
            ""language"":""eng"",
            ""type"":3,
            ""score"":100001,
            ""width"":1920,
            ""height"":1080,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":90081,
            ""image"":""https://artworks.thetvdb.com/banners/fanart/original/75930-13.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/fanart/original/75930-13_t.jpg"",
            ""language"":""eng"",
            ""type"":3,
            ""score"":100001,
            ""width"":1920,
            ""height"":1080,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":85731,
            ""image"":""https://artworks.thetvdb.com/banners/fanart/original/75930-11.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/fanart/original/75930-11_t.jpg"",
            ""language"":""eng"",
            ""type"":3,
            ""score"":100001,
            ""width"":1280,
            ""height"":720,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":25362,
            ""image"":""https://artworks.thetvdb.com/banners/posters/75930-3.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/posters/75930-3_t.jpg"",
            ""language"":""eng"",
            ""type"":2,
            ""score"":100001,
            ""width"":680,
            ""height"":1000,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":1124997,
            ""image"":""https://artworks.thetvdb.com/banners/posters/75930-12.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/posters/75930-12_t.jpg"",
            ""language"":""eng"",
            ""type"":2,
            ""score"":100001,
            ""width"":680,
            ""height"":1000,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":90311,
            ""image"":""https://artworks.thetvdb.com/banners/posters/75930-6.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/posters/75930-6_t.jpg"",
            ""language"":""eng"",
            ""type"":2,
            ""score"":100001,
            ""width"":680,
            ""height"":1000,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":1076683,
            ""image"":""https://artworks.thetvdb.com/banners/posters/75930-11.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/posters/75930-11_t.jpg"",
            ""language"":""eng"",
            ""type"":2,
            ""score"":100001,
            ""width"":680,
            ""height"":1000,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":40407,
            ""image"":""https://artworks.thetvdb.com/banners/posters/75930-4.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/posters/75930-4_t.jpg"",
            ""language"":""eng"",
            ""type"":2,
            ""score"":100001,
            ""width"":680,
            ""height"":1000,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":62750514,
            ""image"":""https://artworks.thetvdb.com/banners/v4/series/75930/clearart/611b6af3e141c.png"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/v4/series/75930/clearart/611b6af3e141c_t.png"",
            ""language"":""eng"",
            ""type"":22,
            ""score"":100001,
            ""width"":1000,
            ""height"":562,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":9226,
            ""image"":""https://artworks.thetvdb.com/banners/text/3451.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/text/3451_t.jpg"",
            ""language"":""eng"",
            ""type"":1,
            ""score"":100001,
            ""width"":760,
            ""height"":140,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":1015138,
            ""image"":""https://artworks.thetvdb.com/banners/fanart/original/75930-20.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/fanart/original/75930-20_t.jpg"",
            ""language"":""eng"",
            ""type"":3,
            ""score"":100000,
            ""width"":1920,
            ""height"":1080,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":63378803,
            ""image"":""https://artworks.thetvdb.com/banners/v4/series/75930/backgrounds/63f012f3bdae7.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/v4/series/75930/backgrounds/63f012f3bdae7_t.jpg"",
            ""language"":null,
            ""type"":3,
            ""score"":100000,
            ""width"":1920,
            ""height"":1080,
            ""includesText"":false,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":63378804,
            ""image"":""https://artworks.thetvdb.com/banners/v4/series/75930/backgrounds/63f0130f4f73a.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/v4/series/75930/backgrounds/63f0130f4f73a_t.jpg"",
            ""language"":null,
            ""type"":3,
            ""score"":100000,
            ""width"":1920,
            ""height"":1080,
            ""includesText"":false,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":1124987,
            ""image"":""https://artworks.thetvdb.com/banners/fanart/original/75930-21.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/fanart/original/75930-21_t.jpg"",
            ""language"":null,
            ""type"":3,
            ""score"":100000,
            ""width"":1920,
            ""height"":1080,
            ""includesText"":false,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":1124989,
            ""image"":""https://artworks.thetvdb.com/banners/fanart/original/75930-22.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/fanart/original/75930-22_t.jpg"",
            ""language"":null,
            ""type"":3,
            ""score"":100000,
            ""width"":1920,
            ""height"":1080,
            ""includesText"":false,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":1124994,
            ""image"":""https://artworks.thetvdb.com/banners/fanart/original/75930-23.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/fanart/original/75930-23_t.jpg"",
            ""language"":null,
            ""type"":3,
            ""score"":100000,
            ""width"":1920,
            ""height"":1080,
            ""includesText"":false,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":62917571,
            ""image"":""https://artworks.thetvdb.com/banners/v4/series/75930/backgrounds/61a362a87ce1e.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/v4/series/75930/backgrounds/61a362a87ce1e_t.jpg"",
            ""language"":""eng"",
            ""type"":3,
            ""score"":100000,
            ""width"":1920,
            ""height"":1080,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":62917574,
            ""image"":""https://artworks.thetvdb.com/banners/v4/series/75930/backgrounds/61a362fa4d5c6.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/v4/series/75930/backgrounds/61a362fa4d5c6_t.jpg"",
            ""language"":""eng"",
            ""type"":3,
            ""score"":100000,
            ""width"":1920,
            ""height"":1080,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":62917578,
            ""image"":""https://artworks.thetvdb.com/banners/v4/series/75930/backgrounds/61a36395175da.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/v4/series/75930/backgrounds/61a36395175da_t.jpg"",
            ""language"":""eng"",
            ""type"":3,
            ""score"":100000,
            ""width"":1920,
            ""height"":1080,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":62917579,
            ""image"":""https://artworks.thetvdb.com/banners/v4/series/75930/backgrounds/61a363eaad1c0.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/v4/series/75930/backgrounds/61a363eaad1c0_t.jpg"",
            ""language"":""eng"",
            ""type"":3,
            ""score"":100000,
            ""width"":1920,
            ""height"":1080,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":62917580,
            ""image"":""https://artworks.thetvdb.com/banners/v4/series/75930/backgrounds/61a364a2b534a.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/v4/series/75930/backgrounds/61a364a2b534a_t.jpg"",
            ""language"":""eng"",
            ""type"":3,
            ""score"":100000,
            ""width"":1920,
            ""height"":1080,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":62371846,
            ""image"":""https://artworks.thetvdb.com/banners/series/75930/icons/5f92fa3f999ba.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/series/75930/icons/5f92fa3f999ba_t.jpg"",
            ""language"":""eng"",
            ""type"":5,
            ""score"":100000,
            ""width"":1024,
            ""height"":1024,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":62509940,
            ""image"":""https://artworks.thetvdb.com/banners/series/75930/icons/6034e2bea7897.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/series/75930/icons/6034e2bea7897_t.jpg"",
            ""language"":""eng"",
            ""type"":5,
            ""score"":100000,
            ""width"":1024,
            ""height"":1024,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":87301,
            ""image"":""https://artworks.thetvdb.com/banners/fanart/original/75930-12.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/fanart/original/75930-12_t.jpg"",
            ""language"":""eng"",
            ""type"":3,
            ""score"":100000,
            ""width"":1280,
            ""height"":720,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":63378800,
            ""image"":""https://artworks.thetvdb.com/banners/v4/series/75930/posters/63f012bd623ef.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/v4/series/75930/posters/63f012bd623ef_t.jpg"",
            ""language"":null,
            ""type"":2,
            ""score"":100000,
            ""width"":680,
            ""height"":1000,
            ""includesText"":false,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":63378801,
            ""image"":""https://artworks.thetvdb.com/banners/v4/series/75930/posters/63f012d9353c8.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/v4/series/75930/posters/63f012d9353c8_t.jpg"",
            ""language"":null,
            ""type"":2,
            ""score"":100000,
            ""width"":680,
            ""height"":1000,
            ""includesText"":false,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":1191801,
            ""image"":""https://artworks.thetvdb.com/banners/posters/75930-14.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/posters/75930-14_t.jpg"",
            ""language"":""eng"",
            ""type"":2,
            ""score"":100000,
            ""width"":680,
            ""height"":1000,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":1191803,
            ""image"":""https://artworks.thetvdb.com/banners/posters/75930-15.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/posters/75930-15_t.jpg"",
            ""language"":""eng"",
            ""type"":2,
            ""score"":100000,
            ""width"":680,
            ""height"":1000,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":1191804,
            ""image"":""https://artworks.thetvdb.com/banners/posters/75930-16.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/posters/75930-16_t.jpg"",
            ""language"":""eng"",
            ""type"":2,
            ""score"":100000,
            ""width"":680,
            ""height"":1000,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":1191805,
            ""image"":""https://artworks.thetvdb.com/banners/posters/75930-17.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/posters/75930-17_t.jpg"",
            ""language"":""eng"",
            ""type"":2,
            ""score"":100000,
            ""width"":680,
            ""height"":1000,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":1124995,
            ""image"":""https://artworks.thetvdb.com/banners/posters/75930-10.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/posters/75930-10_t.jpg"",
            ""language"":""eng"",
            ""type"":2,
            ""score"":100000,
            ""width"":680,
            ""height"":1000,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":62103983,
            ""image"":""https://artworks.thetvdb.com/banners/series/75930/posters/62103983.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/series/75930/posters/62103983_t.jpg"",
            ""language"":""eng"",
            ""type"":2,
            ""score"":100000,
            ""width"":680,
            ""height"":1000,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":62917564,
            ""image"":""https://artworks.thetvdb.com/banners/v4/series/75930/posters/61a3614e4d959.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/v4/series/75930/posters/61a3614e4d959_t.jpg"",
            ""language"":""eng"",
            ""type"":2,
            ""score"":100000,
            ""width"":680,
            ""height"":1000,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":62916573,
            ""image"":""https://artworks.thetvdb.com/banners/v4/series/75930/posters/61a230e7e602b.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/v4/series/75930/posters/61a230e7e602b_t.jpg"",
            ""language"":""eng"",
            ""type"":2,
            ""score"":100000,
            ""width"":680,
            ""height"":1000,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":62916580,
            ""image"":""https://artworks.thetvdb.com/banners/v4/series/75930/posters/61a2314543bf7.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/v4/series/75930/posters/61a2314543bf7_t.jpg"",
            ""language"":""eng"",
            ""type"":2,
            ""score"":100000,
            ""width"":680,
            ""height"":1000,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":62916586,
            ""image"":""https://artworks.thetvdb.com/banners/v4/series/75930/posters/61a2318b04b53.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/v4/series/75930/posters/61a2318b04b53_t.jpg"",
            ""language"":""eng"",
            ""type"":2,
            ""score"":100000,
            ""width"":680,
            ""height"":1000,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":62916588,
            ""image"":""https://artworks.thetvdb.com/banners/v4/series/75930/posters/61a231aec1e82.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/v4/series/75930/posters/61a231aec1e82_t.jpg"",
            ""language"":""eng"",
            ""type"":2,
            ""score"":100000,
            ""width"":680,
            ""height"":1000,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":62916591,
            ""image"":""https://artworks.thetvdb.com/banners/v4/series/75930/posters/61a231d96d838.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/v4/series/75930/posters/61a231d96d838_t.jpg"",
            ""language"":""eng"",
            ""type"":2,
            ""score"":100000,
            ""width"":680,
            ""height"":1000,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":63387376,
            ""image"":""https://artworks.thetvdb.com/banners/v4/series/75930/posters/63f9500bbb2c5.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/v4/series/75930/posters/63f9500bbb2c5_t.jpg"",
            ""language"":null,
            ""type"":2,
            ""score"":100000,
            ""width"":680,
            ""height"":1000,
            ""includesText"":false,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":63387378,
            ""image"":""https://artworks.thetvdb.com/banners/v4/series/75930/posters/63f9503075d2f.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/v4/series/75930/posters/63f9503075d2f_t.jpg"",
            ""language"":null,
            ""type"":2,
            ""score"":100000,
            ""width"":680,
            ""height"":1000,
            ""includesText"":false,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":1296884,
            ""image"":""https://artworks.thetvdb.com/banners/posters/5b5677a343e53.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/posters/5b5677a343e53_t.jpg"",
            ""language"":""eng"",
            ""type"":2,
            ""score"":100000,
            ""width"":680,
            ""height"":1000,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":62750510,
            ""image"":""https://artworks.thetvdb.com/banners/v4/series/75930/clearlogo/611b6ae2e50cf.png"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/v4/series/75930/clearlogo/611b6ae2e50cf_t.png"",
            ""language"":""eng"",
            ""type"":23,
            ""score"":100000,
            ""width"":800,
            ""height"":310,
            ""includesText"":false,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":61404948,
            ""image"":""https://artworks.thetvdb.com/banners/seasons/75930-4-2.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/seasons/75930-4-2_t.jpg"",
            ""language"":""eng"",
            ""type"":7,
            ""score"":100000,
            ""width"":400,
            ""height"":578,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""seasonId"":9469,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":61404949,
            ""image"":""https://artworks.thetvdb.com/banners/seasons/75930-4-3.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/seasons/75930-4-3_t.jpg"",
            ""language"":""eng"",
            ""type"":7,
            ""score"":100000,
            ""width"":400,
            ""height"":578,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""seasonId"":9469,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":61404950,
            ""image"":""https://artworks.thetvdb.com/banners/seasons/75930-4-5.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/seasons/75930-4-5_t.jpg"",
            ""language"":""eng"",
            ""type"":7,
            ""score"":100000,
            ""width"":400,
            ""height"":578,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""seasonId"":9469,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":61404951,
            ""image"":""https://artworks.thetvdb.com/banners/seasons/75930-4-6.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/seasons/75930-4-6_t.jpg"",
            ""language"":""eng"",
            ""type"":7,
            ""score"":100000,
            ""width"":400,
            ""height"":578,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""seasonId"":9469,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":61404952,
            ""image"":""https://artworks.thetvdb.com/banners/seasons/75930-4-9.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/seasons/75930-4-9_t.jpg"",
            ""language"":""eng"",
            ""type"":7,
            ""score"":100000,
            ""width"":400,
            ""height"":578,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""seasonId"":9469,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":61405013,
            ""image"":""https://artworks.thetvdb.com/banners/seasons/75930-5.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/seasons/75930-5_t.jpg"",
            ""language"":""eng"",
            ""type"":7,
            ""score"":100000,
            ""width"":400,
            ""height"":578,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""seasonId"":9470,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":61405014,
            ""image"":""https://artworks.thetvdb.com/banners/seasons/75930-5-2.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/seasons/75930-5-2_t.jpg"",
            ""language"":""eng"",
            ""type"":7,
            ""score"":100000,
            ""width"":400,
            ""height"":578,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""seasonId"":9470,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":61405015,
            ""image"":""https://artworks.thetvdb.com/banners/seasons/75930-5-3.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/seasons/75930-5-3_t.jpg"",
            ""language"":""eng"",
            ""type"":7,
            ""score"":100000,
            ""width"":400,
            ""height"":578,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""seasonId"":9470,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":61405016,
            ""image"":""https://artworks.thetvdb.com/banners/seasons/75930-5-4.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/seasons/75930-5-4_t.jpg"",
            ""language"":""eng"",
            ""type"":7,
            ""score"":100000,
            ""width"":400,
            ""height"":578,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""seasonId"":9470,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":61405017,
            ""image"":""https://artworks.thetvdb.com/banners/seasons/75930-5-6.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/seasons/75930-5-6_t.jpg"",
            ""language"":""eng"",
            ""type"":7,
            ""score"":100000,
            ""width"":400,
            ""height"":578,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""seasonId"":9470,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":61405018,
            ""image"":""https://artworks.thetvdb.com/banners/seasons/75930-5-7.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/seasons/75930-5-7_t.jpg"",
            ""language"":""eng"",
            ""type"":7,
            ""score"":100000,
            ""width"":400,
            ""height"":578,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""seasonId"":9470,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":61405019,
            ""image"":""https://artworks.thetvdb.com/banners/seasons/75930-5-10.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/seasons/75930-5-10_t.jpg"",
            ""language"":""eng"",
            ""type"":7,
            ""score"":100000,
            ""width"":400,
            ""height"":578,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""seasonId"":9470,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":61404575,
            ""image"":""https://artworks.thetvdb.com/banners/seasons/3451-1.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/seasons/3451-1_t.jpg"",
            ""language"":""eng"",
            ""type"":7,
            ""score"":100000,
            ""width"":400,
            ""height"":578,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""seasonId"":9466,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":61404576,
            ""image"":""https://artworks.thetvdb.com/banners/seasons/75930-1-2.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/seasons/75930-1-2_t.jpg"",
            ""language"":""eng"",
            ""type"":7,
            ""score"":100000,
            ""width"":400,
            ""height"":578,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""seasonId"":9466,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":61404577,
            ""image"":""https://artworks.thetvdb.com/banners/seasons/75930-1-3.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/seasons/75930-1-3_t.jpg"",
            ""language"":""eng"",
            ""type"":7,
            ""score"":100000,
            ""width"":400,
            ""height"":578,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""seasonId"":9466,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":61404578,
            ""image"":""https://artworks.thetvdb.com/banners/seasons/75930-1-4.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/seasons/75930-1-4_t.jpg"",
            ""language"":""eng"",
            ""type"":7,
            ""score"":100000,
            ""width"":400,
            ""height"":578,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""seasonId"":9466,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":61404579,
            ""image"":""https://artworks.thetvdb.com/banners/seasons/75930-1-5.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/seasons/75930-1-5_t.jpg"",
            ""language"":""eng"",
            ""type"":7,
            ""score"":100000,
            ""width"":400,
            ""height"":578,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""seasonId"":9466,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":61404580,
            ""image"":""https://artworks.thetvdb.com/banners/seasons/75930-1-7.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/seasons/75930-1-7_t.jpg"",
            ""language"":""eng"",
            ""type"":7,
            ""score"":100000,
            ""width"":400,
            ""height"":578,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""seasonId"":9466,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":61404581,
            ""image"":""https://artworks.thetvdb.com/banners/seasons/75930-1-8.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/seasons/75930-1-8_t.jpg"",
            ""language"":""eng"",
            ""type"":7,
            ""score"":100000,
            ""width"":400,
            ""height"":578,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""seasonId"":9466,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":61404582,
            ""image"":""https://artworks.thetvdb.com/banners/seasons/75930-1-10.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/seasons/75930-1-10_t.jpg"",
            ""language"":""eng"",
            ""type"":7,
            ""score"":100000,
            ""width"":400,
            ""height"":578,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""seasonId"":9466,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":61404583,
            ""image"":""https://artworks.thetvdb.com/banners/seasons/75930-1-11.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/seasons/75930-1-11_t.jpg"",
            ""language"":""eng"",
            ""type"":7,
            ""score"":100000,
            ""width"":400,
            ""height"":578,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""seasonId"":9466,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":61404584,
            ""image"":""https://artworks.thetvdb.com/banners/seasons/75930-1-13.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/seasons/75930-1-13_t.jpg"",
            ""language"":""eng"",
            ""type"":7,
            ""score"":100000,
            ""width"":400,
            ""height"":578,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""seasonId"":9466,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":61404604,
            ""image"":""https://artworks.thetvdb.com/banners/seasons/3451-2.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/seasons/3451-2_t.jpg"",
            ""language"":""eng"",
            ""type"":7,
            ""score"":100000,
            ""width"":400,
            ""height"":578,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""seasonId"":9467,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":61404605,
            ""image"":""https://artworks.thetvdb.com/banners/seasons/75930-2.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/seasons/75930-2_t.jpg"",
            ""language"":""eng"",
            ""type"":7,
            ""score"":100000,
            ""width"":400,
            ""height"":578,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""seasonId"":9467,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":61404606,
            ""image"":""https://artworks.thetvdb.com/banners/seasons/75930-2-2.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/seasons/75930-2-2_t.jpg"",
            ""language"":""eng"",
            ""type"":7,
            ""score"":100000,
            ""width"":400,
            ""height"":578,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""seasonId"":9467,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":61404608,
            ""image"":""https://artworks.thetvdb.com/banners/seasons/75930-2-3.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/seasons/75930-2-3_t.jpg"",
            ""language"":""eng"",
            ""type"":7,
            ""score"":100000,
            ""width"":400,
            ""height"":578,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""seasonId"":9467,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":61404609,
            ""image"":""https://artworks.thetvdb.com/banners/seasons/75930-2-5.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/seasons/75930-2-5_t.jpg"",
            ""language"":""eng"",
            ""type"":7,
            ""score"":100000,
            ""width"":400,
            ""height"":578,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""seasonId"":9467,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":61404610,
            ""image"":""https://artworks.thetvdb.com/banners/seasons/75930-2-6.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/seasons/75930-2-6_t.jpg"",
            ""language"":""eng"",
            ""type"":7,
            ""score"":100000,
            ""width"":400,
            ""height"":578,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""seasonId"":9467,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":61404611,
            ""image"":""https://artworks.thetvdb.com/banners/seasons/75930-2-10.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/seasons/75930-2-10_t.jpg"",
            ""language"":""eng"",
            ""type"":7,
            ""score"":100000,
            ""width"":400,
            ""height"":578,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""seasonId"":9467,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":61404620,
            ""image"":""https://artworks.thetvdb.com/banners/seasons/3451-3.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/seasons/3451-3_t.jpg"",
            ""language"":""eng"",
            ""type"":7,
            ""score"":100000,
            ""width"":400,
            ""height"":578,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""seasonId"":9468,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":61404621,
            ""image"":""https://artworks.thetvdb.com/banners/seasons/75930-3.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/seasons/75930-3_t.jpg"",
            ""language"":""eng"",
            ""type"":7,
            ""score"":100000,
            ""width"":400,
            ""height"":578,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""seasonId"":9468,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":61404622,
            ""image"":""https://artworks.thetvdb.com/banners/seasons/75930-3-2.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/seasons/75930-3-2_t.jpg"",
            ""language"":""eng"",
            ""type"":7,
            ""score"":100000,
            ""width"":400,
            ""height"":578,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""seasonId"":9468,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":61404623,
            ""image"":""https://artworks.thetvdb.com/banners/seasons/75930-3-3.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/seasons/75930-3-3_t.jpg"",
            ""language"":""eng"",
            ""type"":7,
            ""score"":100000,
            ""width"":400,
            ""height"":578,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""seasonId"":9468,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":61404624,
            ""image"":""https://artworks.thetvdb.com/banners/seasons/75930-3-5.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/seasons/75930-3-5_t.jpg"",
            ""language"":""eng"",
            ""type"":7,
            ""score"":100000,
            ""width"":400,
            ""height"":578,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""seasonId"":9468,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":61404625,
            ""image"":""https://artworks.thetvdb.com/banners/seasons/75930-3-6.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/seasons/75930-3-6_t.jpg"",
            ""language"":""eng"",
            ""type"":7,
            ""score"":100000,
            ""width"":400,
            ""height"":578,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""seasonId"":9468,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":61404626,
            ""image"":""https://artworks.thetvdb.com/banners/seasons/75930-3-9.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/seasons/75930-3-9_t.jpg"",
            ""language"":""eng"",
            ""type"":7,
            ""score"":100000,
            ""width"":400,
            ""height"":578,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""seasonId"":9468,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":61404648,
            ""image"":""https://artworks.thetvdb.com/banners/seasons/3451-4.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/seasons/3451-4_t.jpg"",
            ""language"":""eng"",
            ""type"":7,
            ""score"":100000,
            ""width"":400,
            ""height"":578,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""seasonId"":9469,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":61404649,
            ""image"":""https://artworks.thetvdb.com/banners/seasons/75930-4.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/seasons/75930-4_t.jpg"",
            ""language"":""eng"",
            ""type"":7,
            ""score"":100000,
            ""width"":400,
            ""height"":578,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""seasonId"":9469,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":61404957,
            ""image"":""https://artworks.thetvdb.com/banners/seasonswide/75930-4.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/seasonswide/75930-4_t.jpg"",
            ""language"":""eng"",
            ""type"":6,
            ""score"":100000,
            ""width"":758,
            ""height"":140,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""seasonId"":9469,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":942881,
            ""image"":""https://artworks.thetvdb.com/banners/graphical/75930-g7.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/graphical/75930-g7_t.jpg"",
            ""language"":""eng"",
            ""type"":1,
            ""score"":100000,
            ""width"":758,
            ""height"":140,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":166711,
            ""image"":""https://artworks.thetvdb.com/banners/blank/75930-2.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/blank/75930-2_t.jpg"",
            ""language"":null,
            ""type"":1,
            ""score"":100000,
            ""width"":758,
            ""height"":140,
            ""includesText"":false,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":61405024,
            ""image"":""https://artworks.thetvdb.com/banners/seasonswide/75930-5.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/seasonswide/75930-5_t.jpg"",
            ""language"":""eng"",
            ""type"":6,
            ""score"":100000,
            ""width"":758,
            ""height"":140,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""seasonId"":9470,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":61404602,
            ""image"":""https://artworks.thetvdb.com/banners/seasonswide/75930-1.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/seasonswide/75930-1_t.jpg"",
            ""language"":""eng"",
            ""type"":6,
            ""score"":100000,
            ""width"":758,
            ""height"":140,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""seasonId"":9466,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":61404617,
            ""image"":""https://artworks.thetvdb.com/banners/seasonswide/75930-2.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/seasonswide/75930-2_t.jpg"",
            ""language"":""eng"",
            ""type"":6,
            ""score"":100000,
            ""width"":758,
            ""height"":140,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""seasonId"":9467,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":61404646,
            ""image"":""https://artworks.thetvdb.com/banners/seasonswide/75930-3.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/seasonswide/75930-3_t.jpg"",
            ""language"":""eng"",
            ""type"":6,
            ""score"":100000,
            ""width"":758,
            ""height"":140,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""seasonId"":9468,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":14132,
            ""image"":""https://artworks.thetvdb.com/banners/graphical/75930-g2.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/graphical/75930-g2_t.jpg"",
            ""language"":""deu"",
            ""type"":1,
            ""score"":5,
            ""width"":758,
            ""height"":140,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":16821,
            ""image"":""https://artworks.thetvdb.com/banners/graphical/75930-g5.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/graphical/75930-g5_t.jpg"",
            ""language"":""deu"",
            ""type"":1,
            ""score"":3,
            ""width"":758,
            ""height"":140,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":454401,
            ""image"":""https://artworks.thetvdb.com/banners/fanart/original/75930-16.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/fanart/original/75930-16_t.jpg"",
            ""language"":""fra"",
            ""type"":3,
            ""score"":2,
            ""width"":1920,
            ""height"":1080,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":62750509,
            ""image"":""https://artworks.thetvdb.com/banners/v4/series/75930/clearlogo/611b6adfcc705.png"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/v4/series/75930/clearlogo/611b6adfcc705_t.png"",
            ""language"":""deu"",
            ""type"":23,
            ""score"":1,
            ""width"":800,
            ""height"":310,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":454411,
            ""image"":""https://artworks.thetvdb.com/banners/fanart/original/75930-17.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/fanart/original/75930-17_t.jpg"",
            ""language"":""fra"",
            ""type"":3,
            ""score"":0,
            ""width"":1920,
            ""height"":1080,
            ""includesText"":false,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":454391,
            ""image"":""https://artworks.thetvdb.com/banners/fanart/original/75930-15.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/fanart/original/75930-15_t.jpg"",
            ""language"":""fra"",
            ""type"":3,
            ""score"":0,
            ""width"":1920,
            ""height"":1080,
            ""includesText"":false,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":1248331,
            ""image"":""https://artworks.thetvdb.com/banners/posters/75930-18.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/posters/75930-18_t.jpg"",
            ""language"":""spa"",
            ""type"":2,
            ""score"":0,
            ""width"":680,
            ""height"":1000,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":1248338,
            ""image"":""https://artworks.thetvdb.com/banners/posters/75930-20.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/posters/75930-20_t.jpg"",
            ""language"":""spa"",
            ""type"":2,
            ""score"":0,
            ""width"":680,
            ""height"":1000,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":1248340,
            ""image"":""https://artworks.thetvdb.com/banners/posters/75930-21.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/posters/75930-21_t.jpg"",
            ""language"":""spa"",
            ""type"":2,
            ""score"":0,
            ""width"":680,
            ""height"":1000,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":62916300,
            ""image"":""https://artworks.thetvdb.com/banners/v4/series/75930/posters/61a1a821656b7.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/v4/series/75930/posters/61a1a821656b7_t.jpg"",
            ""language"":""pt"",
            ""type"":2,
            ""score"":0,
            ""width"":680,
            ""height"":1000,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":62916303,
            ""image"":""https://artworks.thetvdb.com/banners/v4/series/75930/posters/61a1a8907af11.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/v4/series/75930/posters/61a1a8907af11_t.jpg"",
            ""language"":""pt"",
            ""type"":2,
            ""score"":0,
            ""width"":680,
            ""height"":1000,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":1228029,
            ""image"":""https://artworks.thetvdb.com/banners/posters/75930-13.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/posters/75930-13_t.jpg"",
            ""language"":""heb"",
            ""type"":2,
            ""score"":0,
            ""width"":680,
            ""height"":1000,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":62750511,
            ""image"":""https://artworks.thetvdb.com/banners/v4/series/75930/clearlogo/611b6ae58a10e.png"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/v4/series/75930/clearlogo/611b6ae58a10e_t.png"",
            ""language"":""pol"",
            ""type"":23,
            ""score"":0,
            ""width"":800,
            ""height"":310,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":62750512,
            ""image"":""https://artworks.thetvdb.com/banners/v4/series/75930/clearlogo/611b6ae7a59b3.png"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/v4/series/75930/clearlogo/611b6ae7a59b3_t.png"",
            ""language"":""pol"",
            ""type"":23,
            ""score"":0,
            ""width"":800,
            ""height"":310,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":62750513,
            ""image"":""https://artworks.thetvdb.com/banners/v4/series/75930/clearlogo/611b6ae9cfdaf.png"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/v4/series/75930/clearlogo/611b6ae9cfdaf_t.png"",
            ""language"":""heb"",
            ""type"":23,
            ""score"":0,
            ""width"":800,
            ""height"":310,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":61404953,
            ""image"":""https://artworks.thetvdb.com/banners/seasons/75930-4-4.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/seasons/75930-4-4_t.jpg"",
            ""language"":""fra"",
            ""type"":7,
            ""score"":0,
            ""width"":400,
            ""height"":578,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""seasonId"":9469,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":61404954,
            ""image"":""https://artworks.thetvdb.com/banners/seasons/75930-4-8.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/seasons/75930-4-8_t.jpg"",
            ""language"":""fra"",
            ""type"":7,
            ""score"":0,
            ""width"":400,
            ""height"":578,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""seasonId"":9469,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":61404955,
            ""image"":""https://artworks.thetvdb.com/banners/seasons/75930-4-10.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/seasons/75930-4-10_t.jpg"",
            ""language"":""fra"",
            ""type"":7,
            ""score"":0,
            ""width"":400,
            ""height"":578,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""seasonId"":9469,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":61404956,
            ""image"":""https://artworks.thetvdb.com/banners/seasons/75930-4-7.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/seasons/75930-4-7_t.jpg"",
            ""language"":""hun"",
            ""type"":7,
            ""score"":0,
            ""width"":400,
            ""height"":578,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""seasonId"":9469,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":61405020,
            ""image"":""https://artworks.thetvdb.com/banners/seasons/75930-5-5.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/seasons/75930-5-5_t.jpg"",
            ""language"":""fra"",
            ""type"":7,
            ""score"":0,
            ""width"":400,
            ""height"":578,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""seasonId"":9470,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":61405021,
            ""image"":""https://artworks.thetvdb.com/banners/seasons/75930-5-9.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/seasons/75930-5-9_t.jpg"",
            ""language"":""fra"",
            ""type"":7,
            ""score"":0,
            ""width"":400,
            ""height"":578,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""seasonId"":9470,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":61405022,
            ""image"":""https://artworks.thetvdb.com/banners/seasons/75930-5-11.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/seasons/75930-5-11_t.jpg"",
            ""language"":""fra"",
            ""type"":7,
            ""score"":0,
            ""width"":400,
            ""height"":578,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""seasonId"":9470,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":61405023,
            ""image"":""https://artworks.thetvdb.com/banners/seasons/75930-5-8.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/seasons/75930-5-8_t.jpg"",
            ""language"":""hun"",
            ""type"":7,
            ""score"":0,
            ""width"":400,
            ""height"":578,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""seasonId"":9470,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":61404585,
            ""image"":""https://artworks.thetvdb.com/banners/seasons/75930-1-6.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/seasons/75930-1-6_t.jpg"",
            ""language"":""fra"",
            ""type"":7,
            ""score"":0,
            ""width"":400,
            ""height"":578,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""seasonId"":9466,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":61404586,
            ""image"":""https://artworks.thetvdb.com/banners/seasons/75930-1-12.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/seasons/75930-1-12_t.jpg"",
            ""language"":""fra"",
            ""type"":7,
            ""score"":0,
            ""width"":400,
            ""height"":578,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""seasonId"":9466,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":61404587,
            ""image"":""https://artworks.thetvdb.com/banners/seasons/75930-1-14.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/seasons/75930-1-14_t.jpg"",
            ""language"":""fra"",
            ""type"":7,
            ""score"":0,
            ""width"":400,
            ""height"":578,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""seasonId"":9466,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":61404600,
            ""image"":""https://artworks.thetvdb.com/banners/seasons/75930-1-9.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/seasons/75930-1-9_t.jpg"",
            ""language"":""hun"",
            ""type"":7,
            ""score"":0,
            ""width"":400,
            ""height"":578,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""seasonId"":9466,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":61404601,
            ""image"":""https://artworks.thetvdb.com/banners/seasons/75930-1.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/seasons/75930-1_t.jpg"",
            ""language"":""spa"",
            ""type"":7,
            ""score"":0,
            ""width"":400,
            ""height"":578,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""seasonId"":9466,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":61404612,
            ""image"":""https://artworks.thetvdb.com/banners/seasons/75930-2-4.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/seasons/75930-2-4_t.jpg"",
            ""language"":""fra"",
            ""type"":7,
            ""score"":0,
            ""width"":400,
            ""height"":578,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""seasonId"":9467,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":61404613,
            ""image"":""https://artworks.thetvdb.com/banners/seasons/75930-2-9.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/seasons/75930-2-9_t.jpg"",
            ""language"":""fra"",
            ""type"":7,
            ""score"":0,
            ""width"":400,
            ""height"":578,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""seasonId"":9467,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":61404614,
            ""image"":""https://artworks.thetvdb.com/banners/seasons/75930-2-11.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/seasons/75930-2-11_t.jpg"",
            ""language"":""fra"",
            ""type"":7,
            ""score"":0,
            ""width"":400,
            ""height"":578,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""seasonId"":9467,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":61404615,
            ""image"":""https://artworks.thetvdb.com/banners/seasons/75930-2-7.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/seasons/75930-2-7_t.jpg"",
            ""language"":""heb"",
            ""type"":7,
            ""score"":0,
            ""width"":400,
            ""height"":578,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""seasonId"":9467,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":61404616,
            ""image"":""https://artworks.thetvdb.com/banners/seasons/75930-2-8.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/seasons/75930-2-8_t.jpg"",
            ""language"":""hun"",
            ""type"":7,
            ""score"":0,
            ""width"":400,
            ""height"":578,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""seasonId"":9467,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":61404642,
            ""image"":""https://artworks.thetvdb.com/banners/seasons/75930-3-4.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/seasons/75930-3-4_t.jpg"",
            ""language"":""fra"",
            ""type"":7,
            ""score"":0,
            ""width"":400,
            ""height"":578,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""seasonId"":9468,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":61404643,
            ""image"":""https://artworks.thetvdb.com/banners/seasons/75930-3-8.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/seasons/75930-3-8_t.jpg"",
            ""language"":""fra"",
            ""type"":7,
            ""score"":0,
            ""width"":400,
            ""height"":578,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""seasonId"":9468,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":61404644,
            ""image"":""https://artworks.thetvdb.com/banners/seasons/75930-3-10.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/seasons/75930-3-10_t.jpg"",
            ""language"":""fra"",
            ""type"":7,
            ""score"":0,
            ""width"":400,
            ""height"":578,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""seasonId"":9468,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":61404645,
            ""image"":""https://artworks.thetvdb.com/banners/seasons/75930-3-7.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/seasons/75930-3-7_t.jpg"",
            ""language"":""hun"",
            ""type"":7,
            ""score"":0,
            ""width"":400,
            ""height"":578,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""seasonId"":9468,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":736581,
            ""image"":""https://artworks.thetvdb.com/banners/graphical/75930-g6.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/graphical/75930-g6_t.jpg"",
            ""language"":""rus"",
            ""type"":1,
            ""score"":0,
            ""width"":758,
            ""height"":140,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":61405012,
            ""image"":""https://artworks.thetvdb.com/banners/seasonswide/75930-4-2.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/seasonswide/75930-4-2_t.jpg"",
            ""language"":""spa"",
            ""type"":6,
            ""score"":0,
            ""width"":758,
            ""height"":140,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""seasonId"":9469,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":61405025,
            ""image"":""https://artworks.thetvdb.com/banners/seasonswide/75930-5-2.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/seasonswide/75930-5-2_t.jpg"",
            ""language"":""spa"",
            ""type"":6,
            ""score"":0,
            ""width"":758,
            ""height"":140,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""seasonId"":9470,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":61404603,
            ""image"":""https://artworks.thetvdb.com/banners/seasonswide/75930-1-2.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/seasonswide/75930-1-2_t.jpg"",
            ""language"":""spa"",
            ""type"":6,
            ""score"":0,
            ""width"":758,
            ""height"":140,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""seasonId"":9466,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":61404619,
            ""image"":""https://artworks.thetvdb.com/banners/seasonswide/75930-2-2.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/seasonswide/75930-2-2_t.jpg"",
            ""language"":""spa"",
            ""type"":6,
            ""score"":0,
            ""width"":758,
            ""height"":140,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""seasonId"":9467,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         },
         {
            ""id"":61404647,
            ""image"":""https://artworks.thetvdb.com/banners/seasonswide/75930-3-2.jpg"",
            ""thumbnail"":""https://artworks.thetvdb.com/banners/seasonswide/75930-3-2_t.jpg"",
            ""language"":""spa"",
            ""type"":6,
            ""score"":0,
            ""width"":758,
            ""height"":140,
            ""includesText"":true,
            ""thumbnailWidth"":0,
            ""thumbnailHeight"":0,
            ""updatedAt"":0,
            ""seasonId"":9468,
            ""status"":{
               ""id"":0,
               ""name"":null
            },
            ""tagOptions"":null
         }
      ],
      ""companies"":[
         {
            ""id"":5,
            ""name"":""ABC (US)"",
            ""slug"":""abc-us"",
            ""nameTranslations"":[
               ""eng""
            ],
            ""overviewTranslations"":[
               
            ],
            ""aliases"":[
               {
                  ""language"":""eng"",
                  ""name"":""American Broadcasting Company""
               }
            ],
            ""country"":""usa"",
            ""primaryCompanyType"":1,
            ""activeDate"":null,
            ""inactiveDate"":null,
            ""companyType"":{
               ""companyTypeId"":1,
               ""companyTypeName"":""Network""
            },
            ""parentCompany"":{
               ""id"":null,
               ""name"":null,
               ""relation"":{
                  ""id"":null,
                  ""typeName"":null
               }
            },
            ""tagOptions"":null
         }
      ],
      ""originalNetwork"":{
         ""id"":5,
         ""name"":""ABC (US)"",
         ""slug"":""abc-us"",
         ""nameTranslations"":[
            ""eng""
         ],
         ""overviewTranslations"":[
            
         ],
         ""aliases"":[
            {
               ""language"":""eng"",
               ""name"":""American Broadcasting Company""
            }
         ],
         ""country"":""usa"",
         ""primaryCompanyType"":1,
         ""activeDate"":null,
         ""inactiveDate"":null,
         ""companyType"":{
            ""companyTypeId"":1,
            ""companyTypeName"":""Network""
         },
         ""parentCompany"":{
            ""id"":null,
            ""name"":null,
            ""relation"":{
               ""id"":null,
               ""typeName"":null
            }
         },
         ""tagOptions"":[
            {
               ""id"":492,
               ""tag"":24,
               ""tagName"":""Company Type"",
               ""name"":""Linear Cable"",
               ""helpText"":""Free ad-supported TV. Examples: NBC, ABC, PBS""
            }
         ]
      },
      ""latestNetwork"":{
         ""id"":5,
         ""name"":""ABC (US)"",
         ""slug"":""abc-us"",
         ""nameTranslations"":[
            ""eng""
         ],
         ""overviewTranslations"":[
            
         ],
         ""aliases"":[
            {
               ""language"":""eng"",
               ""name"":""American Broadcasting Company""
            }
         ],
         ""country"":""usa"",
         ""primaryCompanyType"":1,
         ""activeDate"":null,
         ""inactiveDate"":null,
         ""companyType"":{
            ""companyTypeId"":1,
            ""companyTypeName"":""Network""
         },
         ""parentCompany"":{
            ""id"":null,
            ""name"":null,
            ""relation"":{
               ""id"":null,
               ""typeName"":null
            }
         },
         ""tagOptions"":[
            {
               ""id"":492,
               ""tag"":24,
               ""tagName"":""Company Type"",
               ""name"":""Linear Cable"",
               ""helpText"":""Free ad-supported TV. Examples: NBC, ABC, PBS""
            }
         ]
      },
      ""genres"":[
         {
            ""id"":2,
            ""name"":""Science Fiction"",
            ""slug"":""science-fiction""
         },
         {
            ""id"":12,
            ""name"":""Drama"",
            ""slug"":""drama""
         },
         {
            ""id"":14,
            ""name"":""Crime"",
            ""slug"":""crime""
         },
         {
            ""id"":18,
            ""name"":""Adventure"",
            ""slug"":""adventure""
         },
         {
            ""id"":19,
            ""name"":""Action"",
            ""slug"":""action""
         },
         {
            ""id"":22,
            ""name"":""Suspense"",
            ""slug"":""suspense""
         },
         {
            ""id"":24,
            ""name"":""Thriller"",
            ""slug"":""thriller""
         },
         {
            ""id"":31,
            ""name"":""Mystery"",
            ""slug"":""mystery""
         }
      ],
      ""trailers"":[
         
      ],
      ""lists"":[
         {
            ""id"":8649,
            ""name"":""Best and Worst Wigs on TV"",
            ""overview"":""Jennifer Garner rocked a now-iconic bright red wig on “Alias” (a color Rihanna would bring back to the public eye years later); Julianna Margulies had it written into her contract for “The Good Wife” that she would be donning a wig; and Julia Roberts’ wig on “Homecoming” was arguably so terrible it almost distracted viewers from her wonderful performance.\r\nA hairpiece can truly transform an actor’s appearance — when it’s good, you might not even know it’s there, but when it’s bad, it might make it impossible to focus on anything else! Let’s take a look at some of the most famous and infamous wigs worn on television series over the past few decades."",
            ""url"":""8649"",
            ""isOfficial"":false,
            ""nameTranslations"":[
               ""eng""
            ],
            ""overviewTranslations"":[
               ""eng""
            ],
            ""aliases"":[
               
            ],
            ""score"":0,
            ""image"":"""",
            ""imageIsFallback"":false,
            ""remoteIds"":null,
            ""tags"":null
         },
         {
            ""id"":14237,
            ""name"":""IGN's Top 100 TV Shows of All Time (2017)"",
            ""overview"":null,
            ""url"":""14237"",
            ""isOfficial"":false,
            ""nameTranslations"":[
               ""eng""
            ],
            ""overviewTranslations"":null,
            ""aliases"":[
               
            ],
            ""score"":0,
            ""image"":"""",
            ""imageIsFallback"":false,
            ""remoteIds"":null,
            ""tags"":null
         },
         {
            ""id"":14287,
            ""name"":""EW's The 100 All-Time Greatest TV Shows (2013)"",
            ""overview"":""From a pioneering variety show from the black-and-white days to two faves on now -- see our No. 1. To see EW's picks of the top 100 all-time greatest TV shows"",
            ""url"":""14287"",
            ""isOfficial"":false,
            ""nameTranslations"":[
               ""eng""
            ],
            ""overviewTranslations"":[
               ""eng""
            ],
            ""aliases"":[
               {
                  ""language"":""eng"",
                  ""name"":""Entertainment Weekly's The 100 All-Time Greatest TV Shows""
               }
            ],
            ""score"":0,
            ""image"":"""",
            ""imageIsFallback"":false,
            ""remoteIds"":null,
            ""tags"":null
         },
         {
            ""id"":14376,
            ""name"":""Hollywood’s 100 Favorite TV Shows (2015)"",
            ""overview"":""What's the best TV show of all time? Who knows? This poll is strictly about favorite shows, the programs people in Hollywood hold nearest to their hearts — that remind them of better times or speak to their inner child or inspire their creativity or just help them unwind after a crappy day at the studio — even if one or two of the programs listed here aren't exactly masterpieces of the medium."",
            ""url"":""14376"",
            ""isOfficial"":false,
            ""nameTranslations"":[
               ""eng""
            ],
            ""overviewTranslations"":[
               ""eng""
            ],
            ""aliases"":[
               {
                  ""language"":""eng"",
                  ""name"":""THR's 100 Favorite TV Shows""
               },
               {
                  ""language"":""eng"",
                  ""name"":""The Hollywood Reporter's 100 Favorite TV Shows""
               }
            ],
            ""score"":0,
            ""image"":"""",
            ""imageIsFallback"":false,
            ""remoteIds"":null,
            ""tags"":null
         }
      ],
      ""remoteIds"":[
         {
            ""id"":""tt0285333"",
            ""type"":2,
            ""sourceName"":""IMDB""
         },
         {
            ""id"":""SH445113"",
            ""type"":3,
            ""sourceName"":""TMS (Zap2It)""
         },
         {
            ""id"":""2046"",
            ""type"":12,
            ""sourceName"":""TheMovieDB.com""
         },
         {
            ""id"":""10.5240/C9C2-6DE8-E567-84DE-D10D-T"",
            ""type"":13,
            ""sourceName"":""EIDR""
         }
      ],
      ""characters"":[
         {
            ""id"":64420801,
            ""name"":""Jack Bristow"",
            ""peopleId"":280196,
            ""seriesId"":75930,
            ""series"":null,
            ""movie"":null,
            ""movieId"":null,
            ""episodeId"":null,
            ""type"":3,
            ""image"":""https://artworks.thetvdb.com/banners/actors/42036.jpg"",
            ""sort"":2,
            ""isFeatured"":true,
            ""url"":""https://thetvdb.com/people/280196-victor-garber"",
            ""nameTranslations"":null,
            ""overviewTranslations"":null,
            ""aliases"":null,
            ""peopleType"":""Actor"",
            ""personName"":""Victor Garber"",
            ""tagOptions"":null,
            ""personImgURL"":""https://artworks.thetvdb.com/banners/person/280196/primary.jpg""
         },
         {
            ""id"":64420803,
            ""name"":""Laureen Reed"",
            ""peopleId"":268799,
            ""seriesId"":75930,
            ""series"":null,
            ""movie"":null,
            ""movieId"":null,
            ""episodeId"":null,
            ""type"":3,
            ""image"":""https://artworks.thetvdb.com/banners/actors/42037.jpg"",
            ""sort"":7,
            ""isFeatured"":false,
            ""url"":""https://thetvdb.com/people/268799-melissa-george"",
            ""nameTranslations"":null,
            ""overviewTranslations"":null,
            ""aliases"":null,
            ""peopleType"":""Actor"",
            ""personName"":""Melissa George"",
            ""tagOptions"":null,
            ""personImgURL"":""https://artworks.thetvdb.com/banners/v4/actor/268799/photo/60eae8231242e.jpg""
         },
         {
            ""id"":64420805,
            ""name"":""Julian Sark"",
            ""peopleId"":269056,
            ""seriesId"":75930,
            ""series"":null,
            ""movie"":null,
            ""movieId"":null,
            ""episodeId"":null,
            ""type"":3,
            ""image"":""https://artworks.thetvdb.com/banners/actors/42038.jpg"",
            ""sort"":8,
            ""isFeatured"":false,
            ""url"":""https://thetvdb.com/people/269056-david-anders"",
            ""nameTranslations"":null,
            ""overviewTranslations"":null,
            ""aliases"":null,
            ""peopleType"":""Actor"",
            ""personName"":""David Anders"",
            ""tagOptions"":null,
            ""personImgURL"":""https://artworks.thetvdb.com/banners/v4/actor/269056/photo/6339b4a236f16.jpg""
         },
         {
            ""id"":64420807,
            ""name"":""Nadia Santos"",
            ""peopleId"":7877110,
            ""seriesId"":75930,
            ""series"":null,
            ""movie"":null,
            ""movieId"":null,
            ""episodeId"":null,
            ""type"":3,
            ""image"":""https://artworks.thetvdb.com/banners/actors/42039.jpg"",
            ""sort"":9,
            ""isFeatured"":false,
            ""url"":""https://thetvdb.com/people/7877110-mia-maestro"",
            ""nameTranslations"":null,
            ""overviewTranslations"":null,
            ""aliases"":null,
            ""peopleType"":""Actor"",
            ""personName"":""Mia Maestro"",
            ""tagOptions"":null,
            ""personImgURL"":null
         },
         {
            ""id"":64420809,
            ""name"":""Eric Weiss"",
            ""peopleId"":279666,
            ""seriesId"":75930,
            ""series"":null,
            ""movie"":null,
            ""movieId"":null,
            ""episodeId"":null,
            ""type"":3,
            ""image"":""https://artworks.thetvdb.com/banners/actors/42040.jpg"",
            ""sort"":5,
            ""isFeatured"":true,
            ""url"":""https://thetvdb.com/people/279666-greg-grunberg"",
            ""nameTranslations"":null,
            ""overviewTranslations"":null,
            ""aliases"":null,
            ""peopleType"":""Actor"",
            ""personName"":""Greg Grunberg"",
            ""tagOptions"":null,
            ""personImgURL"":""https://artworks.thetvdb.com/banners/v4/actor/279666/photo/62da9fcec03ce.jpg""
         },
         {
            ""id"":64420810,
            ""name"":""Michael Vaughn"",
            ""peopleId"":330678,
            ""seriesId"":75930,
            ""series"":null,
            ""movie"":null,
            ""movieId"":null,
            ""episodeId"":null,
            ""type"":3,
            ""image"":""https://artworks.thetvdb.com/banners/actors/42041.jpg"",
            ""sort"":3,
            ""isFeatured"":true,
            ""url"":""https://thetvdb.com/people/330678-michael-vartan"",
            ""nameTranslations"":null,
            ""overviewTranslations"":null,
            ""aliases"":null,
            ""peopleType"":""Actor"",
            ""personName"":""Michael Vartan"",
            ""tagOptions"":null,
            ""personImgURL"":""https://artworks.thetvdb.com/banners/v4/actor/330678/photo/60a04032e9ef6.jpg""
         },
         {
            ""id"":64420812,
            ""name"":""Sydney Bristow"",
            ""peopleId"":294268,
            ""seriesId"":75930,
            ""series"":null,
            ""movie"":null,
            ""movieId"":null,
            ""episodeId"":null,
            ""type"":3,
            ""image"":""https://artworks.thetvdb.com/banners/actors/42042.jpg"",
            ""sort"":1,
            ""isFeatured"":true,
            ""url"":""https://thetvdb.com/people/294268-jennifer-garner"",
            ""nameTranslations"":null,
            ""overviewTranslations"":null,
            ""aliases"":null,
            ""peopleType"":""Actor"",
            ""personName"":""Jennifer Garner"",
            ""tagOptions"":null,
            ""personImgURL"":""https://artworks.thetvdb.com/banners/v4/actor/294268/photo/606174a87a332.jpg""
         },
         {
            ""id"":64420814,
            ""name"":""Marshall Flinkman"",
            ""peopleId"":252594,
            ""seriesId"":75930,
            ""series"":null,
            ""movie"":null,
            ""movieId"":null,
            ""episodeId"":null,
            ""type"":3,
            ""image"":""https://artworks.thetvdb.com/banners/actors/42043.jpg"",
            ""sort"":10,
            ""isFeatured"":true,
            ""url"":""https://thetvdb.com/people/252594-kevin-weisman"",
            ""nameTranslations"":null,
            ""overviewTranslations"":null,
            ""aliases"":null,
            ""peopleType"":""Actor"",
            ""personName"":""Kevin Weisman"",
            ""tagOptions"":null,
            ""personImgURL"":""https://artworks.thetvdb.com/banners/v4/actor/252594/photo/62741bf45f2bb.jpg""
         },
         {
            ""id"":64420817,
            ""name"":""Arvin Sloane"",
            ""peopleId"":256866,
            ""seriesId"":75930,
            ""series"":null,
            ""movie"":null,
            ""movieId"":null,
            ""episodeId"":null,
            ""type"":3,
            ""image"":""https://artworks.thetvdb.com/banners/actors/42044.jpg"",
            ""sort"":4,
            ""isFeatured"":true,
            ""url"":""https://thetvdb.com/people/256866-ron-rifkin"",
            ""nameTranslations"":null,
            ""overviewTranslations"":null,
            ""aliases"":null,
            ""peopleType"":""Actor"",
            ""personName"":""Ron Rifkin"",
            ""tagOptions"":null,
            ""personImgURL"":""https://artworks.thetvdb.com/banners/person/256866/primary.jpg""
         },
         {
            ""id"":64420820,
            ""name"":""Francine \""Francie\"" Calfo"",
            ""peopleId"":272821,
            ""seriesId"":75930,
            ""series"":null,
            ""movie"":null,
            ""movieId"":null,
            ""episodeId"":null,
            ""type"":3,
            ""image"":""https://artworks.thetvdb.com/banners/v4/actor/272821/photo/63c5ca8e3b2ff.jpg"",
            ""sort"":11,
            ""isFeatured"":false,
            ""url"":""https://thetvdb.com/people/272821-merrin-dungey"",
            ""nameTranslations"":null,
            ""overviewTranslations"":null,
            ""aliases"":null,
            ""peopleType"":""Actor"",
            ""personName"":""Merrin Dungey"",
            ""tagOptions"":null,
            ""personImgURL"":""https://artworks.thetvdb.com/banners/v4/actor/272821/photo/6240d47e467d9.jpg""
         },
         {
            ""id"":64420823,
            ""name"":""Marcus Dixon"",
            ""peopleId"":275096,
            ""seriesId"":75930,
            ""series"":null,
            ""movie"":null,
            ""movieId"":null,
            ""episodeId"":null,
            ""type"":3,
            ""image"":""https://artworks.thetvdb.com/banners/actors/42046.jpg"",
            ""sort"":12,
            ""isFeatured"":true,
            ""url"":""https://thetvdb.com/people/275096-carl-lumbly"",
            ""nameTranslations"":null,
            ""overviewTranslations"":null,
            ""aliases"":null,
            ""peopleType"":""Actor"",
            ""personName"":""Carl Lumbly"",
            ""tagOptions"":null,
            ""personImgURL"":""https://artworks.thetvdb.com/banners/v4/actor/275096/photo/6386861d94287.jpg""
         },
         {
            ""id"":64420826,
            ""name"":""Irina Derevko"",
            ""peopleId"":289990,
            ""seriesId"":75930,
            ""series"":null,
            ""movie"":null,
            ""movieId"":null,
            ""episodeId"":null,
            ""type"":3,
            ""image"":""https://artworks.thetvdb.com/banners/actors/42047.jpg"",
            ""sort"":13,
            ""isFeatured"":false,
            ""url"":""https://thetvdb.com/people/289990-lena-olin"",
            ""nameTranslations"":null,
            ""overviewTranslations"":null,
            ""aliases"":null,
            ""peopleType"":""Actor"",
            ""personName"":""Lena Olin"",
            ""tagOptions"":null,
            ""personImgURL"":""https://artworks.thetvdb.com/banners/v4/actor/289990/photo/622f87ec16e0f.jpg""
         },
         {
            ""id"":64420828,
            ""name"":""Will Tippin"",
            ""peopleId"":327385,
            ""seriesId"":75930,
            ""series"":null,
            ""movie"":null,
            ""movieId"":null,
            ""episodeId"":null,
            ""type"":3,
            ""image"":""https://artworks.thetvdb.com/banners/actors/42048.jpg"",
            ""sort"":6,
            ""isFeatured"":true,
            ""url"":""https://thetvdb.com/people/327385-bradley-cooper"",
            ""nameTranslations"":null,
            ""overviewTranslations"":null,
            ""aliases"":null,
            ""peopleType"":""Actor"",
            ""personName"":""Bradley Cooper"",
            ""tagOptions"":null,
            ""personImgURL"":""https://artworks.thetvdb.com/banners/person/327385/62c20540806d6.jpg""
         },
         {
            ""id"":64420831,
            ""name"":""Rachel Gibson"",
            ""peopleId"":358939,
            ""seriesId"":75930,
            ""series"":null,
            ""movie"":null,
            ""movieId"":null,
            ""episodeId"":null,
            ""type"":3,
            ""image"":""https://artworks.thetvdb.com/banners/actors/77755.jpg"",
            ""sort"":14,
            ""isFeatured"":false,
            ""url"":""https://thetvdb.com/people/358939-rachel-nichols"",
            ""nameTranslations"":null,
            ""overviewTranslations"":null,
            ""aliases"":null,
            ""peopleType"":""Actor"",
            ""personName"":""Rachel Nichols"",
            ""tagOptions"":null,
            ""personImgURL"":""https://artworks.thetvdb.com/banners/person/358939/primary.jpg""
         },
         {
            ""id"":64420834,
            ""name"":""Thomas Grace"",
            ""peopleId"":303908,
            ""seriesId"":75930,
            ""series"":null,
            ""movie"":null,
            ""movieId"":null,
            ""episodeId"":null,
            ""type"":3,
            ""image"":""https://artworks.thetvdb.com/banners/actors/77756.jpg"",
            ""sort"":15,
            ""isFeatured"":false,
            ""url"":""https://thetvdb.com/people/303908-balthazar-getty"",
            ""nameTranslations"":null,
            ""overviewTranslations"":null,
            ""aliases"":null,
            ""peopleType"":""Actor"",
            ""personName"":""Balthazar Getty"",
            ""tagOptions"":null,
            ""personImgURL"":null
         },
         {
            ""id"":64420838,
            ""name"":""Renée Rienne"",
            ""peopleId"":399923,
            ""seriesId"":75930,
            ""series"":null,
            ""movie"":null,
            ""movieId"":null,
            ""episodeId"":null,
            ""type"":3,
            ""image"":""https://artworks.thetvdb.com/banners/actors/77757.jpg"",
            ""sort"":16,
            ""isFeatured"":false,
            ""url"":""https://thetvdb.com/people/399923-elodie-bouchez"",
            ""nameTranslations"":null,
            ""overviewTranslations"":null,
            ""aliases"":null,
            ""peopleType"":""Actor"",
            ""personName"":""Élodie Bouchez"",
            ""tagOptions"":null,
            ""personImgURL"":""https://artworks.thetvdb.com/banners/person/399923/5ed2ec37c278d.jpg""
         }
      ],
      ""airsDays"":{
         ""sunday"":false,
         ""monday"":false,
         ""tuesday"":false,
         ""wednesday"":false,
         ""thursday"":false,
         ""friday"":false,
         ""saturday"":false
      },
      ""airsTime"":null,
      ""seasons"":[
         {
            ""id"":9466,
            ""seriesId"":75930,
            ""type"":{
               ""id"":1,
               ""name"":""Aired Order"",
               ""type"":""official"",
               ""alternateName"":null
            },
            ""number"":1,
            ""nameTranslations"":[
               
            ],
            ""overviewTranslations"":[
               
            ],
            ""image"":""https://artworks.thetvdb.com/banners/seasons/3451-1.jpg"",
            ""imageType"":8,
            ""companies"":{
               ""studio"":null,
               ""network"":null,
               ""production"":null,
               ""distributor"":null,
               ""special_effects"":null
            },
            ""lastUpdated"":""2023-02-20 21:29:13""
         },
         {
            ""id"":9467,
            ""seriesId"":75930,
            ""type"":{
               ""id"":1,
               ""name"":""Aired Order"",
               ""type"":""official"",
               ""alternateName"":null
            },
            ""number"":2,
            ""nameTranslations"":[
               
            ],
            ""overviewTranslations"":[
               
            ],
            ""image"":""https://artworks.thetvdb.com/banners/seasons/3451-2.jpg"",
            ""imageType"":8,
            ""companies"":{
               ""studio"":null,
               ""network"":null,
               ""production"":null,
               ""distributor"":null,
               ""special_effects"":null
            },
            ""lastUpdated"":""2021-11-28 11:16:18""
         },
         {
            ""id"":9468,
            ""seriesId"":75930,
            ""type"":{
               ""id"":1,
               ""name"":""Aired Order"",
               ""type"":""official"",
               ""alternateName"":null
            },
            ""number"":3,
            ""nameTranslations"":[
               
            ],
            ""overviewTranslations"":[
               
            ],
            ""image"":""https://artworks.thetvdb.com/banners/seasons/3451-3.jpg"",
            ""imageType"":8,
            ""companies"":{
               ""studio"":null,
               ""network"":null,
               ""production"":null,
               ""distributor"":null,
               ""special_effects"":null
            },
            ""lastUpdated"":""2023-02-21 22:14:45""
         },
         {
            ""id"":9469,
            ""seriesId"":75930,
            ""type"":{
               ""id"":1,
               ""name"":""Aired Order"",
               ""type"":""official"",
               ""alternateName"":null
            },
            ""number"":4,
            ""nameTranslations"":[
               
            ],
            ""overviewTranslations"":[
               
            ],
            ""image"":""https://artworks.thetvdb.com/banners/seasons/75930-4-2.jpg"",
            ""imageType"":8,
            ""companies"":{
               ""studio"":null,
               ""network"":null,
               ""production"":null,
               ""distributor"":null,
               ""special_effects"":null
            },
            ""lastUpdated"":""2023-02-24 21:16:40""
         },
         {
            ""id"":9470,
            ""seriesId"":75930,
            ""type"":{
               ""id"":1,
               ""name"":""Aired Order"",
               ""type"":""official"",
               ""alternateName"":null
            },
            ""number"":5,
            ""nameTranslations"":[
               
            ],
            ""overviewTranslations"":[
               
            ],
            ""image"":""https://artworks.thetvdb.com/banners/seasons/75930-5.jpg"",
            ""imageType"":8,
            ""companies"":{
               ""studio"":null,
               ""network"":null,
               ""production"":null,
               ""distributor"":null,
               ""special_effects"":null
            },
            ""lastUpdated"":""2023-02-24 22:16:26""
         },
         {
            ""id"":533530,
            ""seriesId"":75930,
            ""type"":{
               ""id"":1,
               ""name"":""Aired Order"",
               ""type"":""official"",
               ""alternateName"":null
            },
            ""number"":0,
            ""nameTranslations"":[
               
            ],
            ""overviewTranslations"":[
               
            ],
            ""companies"":{
               ""studio"":null,
               ""network"":null,
               ""production"":null,
               ""distributor"":null,
               ""special_effects"":null
            },
            ""lastUpdated"":""2023-01-25 23:06:14""
         },
         {
            ""id"":1742729,
            ""seriesId"":75930,
            ""type"":{
               ""id"":3,
               ""name"":""Absolute Order"",
               ""type"":""absolute"",
               ""alternateName"":null
            },
            ""number"":1,
            ""nameTranslations"":[
               
            ],
            ""overviewTranslations"":[
               
            ],
            ""companies"":{
               ""studio"":null,
               ""network"":null,
               ""production"":null,
               ""distributor"":null,
               ""special_effects"":null
            },
            ""lastUpdated"":""2019-11-13 11:59:56""
         }
      ],
      ""tags"":null,
      ""contentRatings"":[
         {
            ""id"":560,
            ""name"":""12+"",
            ""country"":""deu"",
            ""description"":""Restricted to ages 12 and older"",
            ""contentType"":"""",
            ""order"":0,
            ""fullname"":null
         },
         {
            ""id"":246,
            ""name"":""TV-14"",
            ""country"":""usa"",
            ""description"":""Not suitable for children under 14"",
            ""contentType"":"""",
            ""order"":0,
            ""fullname"":null
         }
      ],
      ""seasonTypes"":[
         {
            ""id"":1,
            ""name"":""Aired Order"",
            ""type"":""official"",
            ""alternateName"":null
         },
         {
            ""id"":2,
            ""name"":""DVD Order"",
            ""type"":""dvd"",
            ""alternateName"":null
         },
         {
            ""id"":3,
            ""name"":""Absolute Order"",
            ""type"":""absolute"",
            ""alternateName"":null
         }
      ]
   }
}"
jcLGBN2L,Untitled,diela33,JavaScript,Saturday 17th of June 2023 09:53:28 AM CDT,"function solve() {

        let carModel = document.getElementById(""car-model"");
        let yearCar = document.getElementById(""car-year"");
        let nameInput = document.getElementById(""part-name"");
        let numPart = document.getElementById(""part-number"");
        let condition = document.getElementById(""condition"");
        let nbtn = document.getElementById(""next-btn"");
        let infoUl = document.getElementsByClassName(""info-list"");
        let conList = document.getElementsByClassName(""confirm-list"");

        let carModelValue = """";
        let yearCarValue = """";
        let nameInputValue = """";
        let numPartValue = """";
        let conditionValue = """";

        nbtn.addEventListener(""click"", inputValue);

        function inputValue(e) {
                e.preventDefault();
                if (vInput()) {
                        carModelValue = carModel.value;
                        yearCarValue = yearCar.value;
                        nameInputValue = nameInput.value;
                        numPartValue = numPart.value;
                        conditionValue = condition.value;
                        nbtnValue = nbtn.value;
                }
                partEl();
        }

        function vInput() {
                if (
                        carModel.value !== """" &&
                        yearCar.value !== """" &&
                        nameInput.value !== """" &&
                        condition.value !== """" &&
                        numPart.value !== """" &&
                        Number(yearCar.value) >= 1980 &&
                        Number(yearCar.value) <= 2023
                ) {
                        return true;
                }

                return false;
        }

        function partEl(e) {

                let pli = document.createElement(""li"");
                let article = document.createElement(""article"");
                let pcar = document.createElement(""p"");
                let pyear = document.createElement(""p"");
                let pname = document.createElement(""p"");
                let pnum = document.createElement(""p"");
                let conditioN = document.createElement(""p"");
                let editbtn = document.createElement(""button"");
                let continioBtn = document.createElement(""button"");

                pli.classList.add(""part-content"");
                pcar.textContent = `Car Model: ${carModelValue}`;
                pyear.textContent = `Car Year: ${carModelValue}`;
                pname.textContent = `Part Name: ${nameInputValue}`;
                pnum.textContent = `Part Number: ${numPartValue}`;
                conditioN.textContent = `Condition: ${conditionValue}`;
                editbtn.textContent = ""Edit"";
                editbtn.classList.add(""edit-btn"");
                continioBtn.textContent = ""Continue"";
                continioBtn.classList.add(""continue-btn"");

                editbtn.addEventListener(""click"", editBtn);
                continioBtn.addEventListener(""click"", continueBtn);

                pli.appendChild(article);
                article.appendChild(pcar);
                article.appendChild(pyear);
                article.appendChild(pname);
                article.appendChild(pnum);
                article.appendChild(conditioN);
                pli.appendChild(editbtn);
                pli.appendChild(continioBtn);

                infoUl[0].appendChild(pli);

                clear();
                nbtn.disabled = true;
        }

        function clear() {
                carModel.value = """";
                yearCar.value = """";
                nameInput.value = """";
                numPart.value = """";
                condition.value = """";
        }

     
        function editBtn() {
                carModel.value = carModelValue;
                yearCar.value = yearCarValue;
                nameInput.value = nameInputValue;
                numPart.value = numPartValue;
                condition.value = conditionValue;
                let remoVe = document.querySelector("".part-content"");
                remoVe.remove();
                nbtn.disabled = false;
        }

        function continueBtn() {
                let remoVe = document.querySelector("".part-content"");
                let btmremove = document.querySelector("".edit-btn"");
                let contiRemBtn = document.querySelector("".continue-btn"");
                btmremove.remove();
                contiRemBtn.remove();
                remoVe.remove();
                let cBtn = document.createElement(""button"");
                let canBtn = document.createElement(""button"");
                cBtn.textContent = ""Confirm"";
                cBtn.classList.add(""confirm-btn"");
                canBtn.textContent = ""Cancel"";
                canBtn.classList.add(""cancel-btn"");
                remoVe.appendChild(cBtn);
                remoVe.appendChild(canBtn);

                cBtn.addEventListener(""click"", () => {
                        remoVe.remove();
                        let picture = document.getElementById(""complete-img"");
                        let contentP = document.getElementById(""complete-text"");
                        contentP.textContent = ""Part is Ordered!"";

                        picture.style.visibility = ""visible"";
                        nbtn.disabled = false;
                });

                canBtn.addEventListener(""click"", () => {
                        remoVe.remove();
                        nbtn.disabled = false;
                });

                conList[0].appendChild(remoVe);
        }
}"
qtvskjbp,Primer,ALEXANDAR_GEORGIEV,Python,Saturday 17th of June 2023 09:46:48 AM CDT,"class demo(tk.Tk):
    def __init__(self):
        tk.Tk.__init__(self)
        self.grid_columnconfigure(0, weight = 1)
        self.grid_rowconfigure(0, weight = 1)
        self.frame = tk.Frame(self)
        self.frame.grid_columnconfigure(0, weight = 1)
        self.frame.grid_rowconfigure(0, weight = 1)
        self.sheet = Sheet(self.frame,
                           data = [[f""Row {r}, Column {c}\nnewline1\nnewline2"" for c in range(50)] for r in range(500)])
        self.sheet.enable_bindings(""single_select"",
                                   ""drag_select"",
                                   ""edit_cell"",
                                   ""select_all"",
                                   ""column_select"",
                                   ""row_select"",
                                   ""column_width_resize"",
                                   ""double_click_column_resize"",
                                   ""arrowkeys"",
                                   ""row_height_resize"",
                                   ""double_click_row_resize"",
                                   ""right_click_popup_menu"",
                                   ""rc_select"")
        self.sheet.extra_bindings([(""begin_edit_cell"", self.begin_edit_cell),
                                   (""end_edit_cell"", self.end_edit_cell)])
        self.sheet.popup_menu_add_command(""Say Hello"", self.new_right_click_button)
        self.frame.grid(row = 0, column = 0, sticky = ""nswe"")
        self.sheet.grid(row = 0, column = 0, sticky = ""nswe"")

    def new_right_click_button(self, event = None):
        print (""Hello World!"")

    def begin_edit_cell(self, event = None):
        return event.text

    def end_edit_cell(self, event = None):
        # remove spaces from user input
        if event.text is not None:
            return event.text.replace("" "", """")
		self.recalculate()
			
			
	def recalculate(self):
	
		pass"
frL7pN3j,Gasverbrauch,breti76,YAML,Saturday 17th of June 2023 09:41:16 AM CDT,"template:
  - sensor:
      - name: ""Gasverbrauch""
        device_class: gas
        unit_of_measurement: m³
        state_class: total_increasing
        state:  >
          {% if states('sensor.gasverbrauch_esp') | float == 0 %}
            {{ states('sensor.gasverbrauch') }}
          {% else %}
            {{ states('sensor.gasverbrauch_esp') | float }}
          {% endif %}
"
h2Ty6P2e,Untitled,cepxuozab,C++,Saturday 17th of June 2023 09:20:09 AM CDT,"void PrintMatchDocumentResultUTest(int document_id, const std::vector<std::string>& words,
    DocumentStatus status) {
    std::cout << ""{ ""
        << ""document_id = "" << document_id << "", ""
        << ""status = "" << static_cast<int>(status) << "", ""
        << ""words ="";
    for (const auto& word : words) {
        std::cout << ' ' << word;
    }
    std::cout << ""}"" << std::endl;
}

void PrintDocumentUTest(const Document& document) {
    std::cout << ""{ ""
        << ""document_id = "" << document.id << "", ""
        << ""relevance = "" << document.relevance << "", ""
        << ""rating = "" << document.rating << "" }"" << std::endl;
}

void TestMatch() {
    const std::vector<int> ratings1 = { 1, 2, 3, 4, 5 };
    const std::vector<int> ratings2 = { -1, -2, 30, -3, 44, 5 };
    const std::vector<int> ratings3 = { 12, -20, 80, 0, 8, 0, 0, 9, 67 };
    const std::vector<int> ratings4 = { 7, 0, 3, -49, 5 };
    const std::vector<int> ratings5 = { 81, -6, 7, 94, -7 };
    const std::vector<int> ratings6 = { 41, 8, -7, 897, 5 };
    const std::vector<int> ratings7 = { 543, 0, 43, 4, -5 };
    const std::vector<int> ratings8 = { 91, 7, 3, -88, 56 };
    const std::vector<int> ratings9 = { 0, -87, 93, 66, 5 };
    const std::vector<int> ratings10 = { 11, 2, -43, 4, 895 };
    std::string stop_words = ""и в на"";
    SearchServer search_server(stop_words);

    search_server.AddDocument(0, ""белый кот и модный ошейник"", DocumentStatus::ACTUAL, ratings1);
    search_server.AddDocument(1, ""пушистый кот пушистый хвост"", DocumentStatus::ACTUAL, ratings2);
    search_server.AddDocument(2, ""ухоженный пёс выразительные глаза"", DocumentStatus::ACTUAL,
        ratings3);
    search_server.AddDocument(3, ""белый модный кот"", DocumentStatus::IRRELEVANT, ratings1);
    search_server.AddDocument(4, ""пушистый кот пёс"", DocumentStatus::IRRELEVANT, ratings2);
    search_server.AddDocument(5, ""ухоженный ошейник выразительные глаза"",
        DocumentStatus::IRRELEVANT, ratings3);
    search_server.AddDocument(6, ""кот и ошейник"", DocumentStatus::BANNED, ratings1);
    search_server.AddDocument(7, ""пёс и хвост"", DocumentStatus::BANNED, ratings2);
    search_server.AddDocument(8, ""модный пёс пушистый хвост"", DocumentStatus::BANNED, ratings3);
    search_server.AddDocument(9, ""кот пушистый ошейник"", DocumentStatus::REMOVED, ratings1);
    search_server.AddDocument(10, ""ухоженный кот и пёс"", DocumentStatus::REMOVED, ratings2);
    search_server.AddDocument(11, ""хвост и выразительные глаза"", DocumentStatus::REMOVED, ratings3);

    const std::string query = ""пушистый ухоженный кот -ошейник"";
    const auto documents = search_server.FindTopDocuments(query);

    std::cout << ""Top documents for query:"" << std::endl;
    for (const Document& document : documents) {
        PrintDocumentUTest(document);
    }

    std::cout << ""Documents' statuses:"" << std::endl;
    const int document_count = search_server.GetDocumentCount();
    for (int document_id = 0; document_id < document_count; ++document_id) {
        const auto [words, status] = search_server.MatchDocument(query, document_id);
        PrintMatchDocumentResultUTest(document_id, words, status);
    }
}

int main() {
    TestMatch();
} "
xsZ3vS6y,dns.lua,TIMAS_Bro,Lua,Saturday 17th of June 2023 09:14:34 AM CDT,"rednet.open(""left"")
local ch= read()
if ch == ""createnew"" then
 print(""Write here tld with dot! (.com): "")
 local tld = read()
 print(""Write here domainname  (google): "")
 local domain = read()
 print(""SERVER ID:"")
 local id = tonumber(read())
 if not fs.exists(""/disk/""..domain..tld) then
   local file
   file = fs.open(""/disk/""..domain..tld, ""w"")
   file.writeLine(id)
   file.close()
   rednet.send(id, ""dnsreg"")
   print(""Server ""..id.."" register OK! Domain: ""..domain..tld) 
 end   
end
if ch == ""startup"" then
  print(os.getComputerID())
  while true do
    local error = false
    local senderId, message, protocol = rednet.receive()
    if protocol ~= nil then
      print(""Protocol: ""..protocol)
    else
      term.setTextColor(colors.red)
      print(""SENT WIHOUT PROTOCOL!"")
      term.setTextColor(colors.white)
    end
    if protocol ~= ""jnet"" then
        term.setTextColor(colors.red)
        print(""ERROR: YOU ARE NOT USING JNET PROTOCOL"")
        rednet.send(senderId, ""term.setTextColor(colors.red) print('ERROR: YOU ARE NOT USING JNET PROTOCOL!')"", ""jnet"")
        term.setTextColor(colors.white)
        error = true
    elseif (message == ""dns.lua"") or (message == ""/disk/dns.lua"") then
      term.setTextColor(colors.red)
      print(""\nERROR: BLACKLISTED MESSAGE (dns.lua)"")
      rednet.send(senderId, ""term.setTextColor(colors.red) print('ERROR: BLACKLISTED MESSAGE (dns.lua)')"", ""jnet"")
      term.setTextColor(colors.white)
      error = true
    elseif protocol == ""jnet"" then
      print(""JNET PROTOCOL SERVER RESPONSE HANDLER"")
      print(""SENT BY: ""..senderId.."". Domain: ""..message)
      if fs.exists(""/disk/""..message) then
        local file = fs.open(""/disk/""..message, ""r"")
        local id = tonumber(file.readLine())
        file.close()
        print(""Sending data to ""..id.."" server. Domain ""..message)
        rednet.send(id, senderId, ""server.jnet"")
        local ssenderId, smessage, sprotocol = rednet.receive()
        if sprotocol == ""server.jnet"" then
          rednet.send(senderId, smessage, ""jnet"")
          local file1 = fs.open(""/disk/temp.""..senderId, ""w"")
          file1.write(smessage)
          file1.close()
          print(""DataGetFromServer: ""..""/disk/temp:""..message.."" . Sent to id: ""..senderId)
        end  
      else
        term.setTextColor(colors.red)
        print(""ERROR: Cant resolve domain. Domain: ""..message.."" | ID: ""..senderId.."" | "")
        term.setTextColor(colors.white)
        rednet.send(senderId, ""term.setTextColor(colors.red) print('ERROR: CANT RESOLVE DOMAIN NAME! check if misspelt?')"")
      end 
    else
      term.setTextColor(colors.red)
      print(""UNEXPECTED ERROR!"")
      term.setTextColor(colors.white)
      rednet.send(senderId, ""term.setTextColor(colors.red) print('UNEXPECTED  ERROR. TELL YOU PROVAIDER!'"",""jnet"") 
    end
  end
end
"
aEzZWNJu,Arduino_74HC4051_max6675_A4,HungYn,C,Saturday 17th of June 2023 08:59:35 AM CDT,"// 設置74HC4051多路開關的控制端
const int S0 = 2;
const int S1 = 3;
const int S2 = 4;

// 設置三個MAX6675模組的CS腳
const int zOutput = A1; // Connect common (Z) to 5 (PWM-capable)
//const int zInput = A0; // Connect common (Z) to 5 (PWM-capable)

//MAX6675* thermocouples[8];  // 溫度傳感器指標陣列

#define _SCK 13
//#define _CS  A0
#define _SO  12
static volatile uint8_t is_tc_open;

void max6675_init()
{
  pinMode( _SCK, OUTPUT );
  pinMode( _SO, INPUT );
  pinMode( zOutput, OUTPUT );
  //  pinMode( zInput, INPUT );
  digitalWrite( zOutput, HIGH );
}

void setup()
{
  Serial.begin(9600);

  // 初始化74HC4051多路開關的控制端
  pinMode(S0, OUTPUT);
  pinMode(S1, OUTPUT);
  pinMode(S2, OUTPUT);

  digitalWrite(S0, LOW);
  digitalWrite(S1, LOW);
  digitalWrite(S2, LOW);



  max6675_init();

  //  for (int i = 0; i < 8; i++) {
  //    thermocouples[i] = new MAX6675(6, zOutput, 5);  // 初始化每個溫度傳感器
  //    digitalWrite(zOutput, HIGH);
  //  }

  Serial.println(""Y0\tY1\tY2\tY3\tY4\tY5\tY6\tY7"");
  Serial.println(""---\t---\t---\t---\t---\t---\t---\t---"");
}

void loop()
{
  // 讀取第一個MAX6675模組的溫度數據

  max6675_init();
  delay(220);
  digitalWrite(S0, LOW);
  digitalWrite(S1, LOW);
  digitalWrite(S2, LOW);

  //初始化溫度轉換
//  digitalWrite( zOutput, LOW );
//  delay(2);
//  digitalWrite( zOutput, HIGH );
//  delay(220);
  //   開始溫度轉換
  digitalWrite( zOutput, LOW );

  //  float temp1 = analogRead(zInput); // and read Z
  float temp1 = max6675_getCelsius();

  Serial.print(""Temp 1: "");
  Serial.print(temp1);
  delay(100);
  temp1 = 0;

  // 禁用与MAX6675的通信
//  digitalWrite( zOutput, HIGH );
//  digitalWrite( _SCK, LOW );
  delay(100);

  // 讀取第二個MAX6675模組的溫度數據

  max6675_init();
  delay(220);
  digitalWrite(S0, HIGH);
  digitalWrite(S1, LOW);
  digitalWrite(S2, LOW);

  //初始化溫度轉換
//  digitalWrite( zOutput, LOW );
//  delay(2);
//  digitalWrite( zOutput, HIGH );
//  delay(220);
  //   開始溫度轉換
  digitalWrite( zOutput, LOW );

  //  float temp2 = analogRead(zInput); // and read Z
  float temp2 = max6675_getCelsius();

  Serial.print("" C, Temp 2: "");
  Serial.print(temp2);
  delay(100);
  temp2 = 0;
  
  // 禁用与MAX6675的通信
//  digitalWrite( zOutput, HIGH );
//  digitalWrite( _SCK, LOW );
  delay(100);

  Serial.println("" C"");
  delay(1000);
}


float max6675_getCelsius()
{
  uint16_t t_c = 0;

  //初始化溫度轉換
  //  digitalWrite( zOutput, LOW );
  //  delay(2);
  //  digitalWrite( zOutput, HIGH );
  //  delay(220);

  // 開始溫度轉換
//    digitalWrite( zOutput, LOW );

  // 15th-bit, dummy bit
  digitalWrite( _SCK, HIGH );
  delay(1);
  digitalWrite( _SCK, LOW );

  // 14th - 4th bits, temperature valuw
  for ( int i = 11; i >= 0; i-- )
  {
    digitalWrite( _SCK, HIGH );
    t_c += digitalRead( _SO ) << i;
    digitalWrite( _SCK, LOW );
  }

  // 3th bit, 此位元可以用來判斷 TC 是否損壞或是開路
  // Bit D2 is normally low and goes high when the therometer input is open.
  digitalWrite( _SCK , HIGH );
  is_tc_open = digitalRead( _SO );
  digitalWrite( _SCK, LOW );

  // 2nd - 1st bits,
  // D1 is low to provide a device ID for the MAX6675 and bit D0 is three-state.
  for ( int i = 1; i >= 0; i-- )
  {
    digitalWrite( _SCK, HIGH );
    delay(1);
    digitalWrite( _SCK, LOW );
  }

  // 關閉 MAX6675
  digitalWrite( zOutput, HIGH );

  return (float)(t_c * 0.25);
}"
LAGftfzA,Knife Clicker Simulator 🔪,LuaXe,Lua,Saturday 17th of June 2023 08:55:47 AM CDT,"function C() spawn(function () while getgenv().C do game:GetService(""ReplicatedStorage"").Knives.Clicker.Default.Remotes.Click:InvokeServer() wait() end end) end
function R() spawn(function () while getgenv().R do game:GetService(""ReplicatedStorage"").Rebirths.Core.Default.Remotes.Rebirth:InvokeServer() wait() end end) end
function B() spawn(function () while getgenv().B do game:GetService(""ReplicatedStorage"").Knives.Core.Default.Remotes.Buy:InvokeServer() wait() end end) end
function H() spawn(function () while getgenv().H do local args = {[1] = E}game:GetService(""ReplicatedStorage"").Boxes.Core.Default.Remotes.Buy:InvokeServer(unpack(args)) wait() end end) end

local library = loadstring(game:HttpGet(('https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/wall%20v3')))()

local w = library:CreateWindow(""Knife Clicker Simulator"")

local b = w:CreateFolder(""Main"")

b:Toggle(""Inf. Money"",function(val) getgenv().C = val C() end)
b:Toggle(""Inf. Rebirths"",function(val) getgenv().R = val R() end)
b:Toggle(""Upgrade"",function(val) getgenv().B = val B() end)
b:Toggle(""Hatch"",function(val) getgenv().H = val H() end)

b:Dropdown(""Select"",{""1"",""2"",""3"",""4"",""5"",""6"",""7"",""8"",""9"",""10"",""11"",""12"",""13"",""14"",""15"",""16""},true,function(val)
E = val
end)

b:Label(""Made by X_LuaF#0705"",{TextSize = 21; TextColor = Color3.fromRGB(255,255,255); BgColor = Color3.fromRGB(38, 38, 38);})

local w = library:CreateWindow(""LocalPlayer"")

local b = w:CreateFolder(""LP"")

b:DestroyGui()

b:Button(""Discord"",function() setclipboard(""workink.co/2GQ/LTD"") end)
b:Button(""Full Version"",function() loadstring(game:HttpGet(""https://pastebin.com/raw/GphZf9Xe"", true))() end)
b:Button(""Rejoin"",function() loadstring(game:HttpGet(""https://pastebin.com/raw/mM7JBG5h"", true))() end)
b:Button(""Reset"",function() loadstring(game:HttpGet(""https://pastebin.com/raw/EEY6SATj"", true))() end)

b:Box(""Speed"",""number"",function(val) S = val end)
b:Box(""Jump"",""number"",function(val) J = val end)
b:Box(""Hip Height"",""number"",function(val) H = val end)
b:Box(""Gravity"",""number"",function(val) G = val end)
 
b:Toggle(""Speed"",function(bool) getgenv().Speed = bool Speed(S) end)
b:Toggle(""Jump"",function(bool) getgenv().Jump = bool Jump(J) end)
b:Toggle(""Hip Height"",function(bool) getgenv().Hip = bool Hip(H) end)
b:Toggle(""Gravity"",function(bool) getgenv().Grav = bool Grav(G) end)
 
b:Slider(""FOV (Default is 70)"",{min = 0;max = 120;precise = true;},function(val) game.workspace.CurrentCamera.FieldOfView = val end)

function TPCFrame(Player_CFrame) if game.Players.LocalPlayer.Character:FindFirstChild(""HumanoidRootPart"") then game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Player_CFrame end end
function TPVector3(Player_Position) game.Players.LocalPlayer.Character.HumanoidRootPart.Position = Player_Position.Position end
function PHP(Player_HP) game.Players.LocalPlayer.Character.Humanoid.Health = Player_HP end

function Chat(Mes, Freq) spawn(function () while getgenv().Chat do local args = {[1] = Mes,[2] = ""All""} game:GetService(""ReplicatedStorage"").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(unpack(args)) wait(Freq) end end) end
function Speed(Nume) spawn(function () while getgenv().Speed do game:GetService(""Players"").LocalPlayer.Character.Humanoid.WalkSpeed = Nume if not getgenv().Speed then game:GetService(""Players"").LocalPlayer.Character.Humanoid.WalkSpeed = 16 end wait() end end) end
function Jump(Nume) spawn(function () while getgenv().Jump do game:GetService(""Players"").LocalPlayer.Character.Humanoid.JumpPower = Nume if not getgenv().Jump then game:GetService(""Players"").LocalPlayer.Character.Humanoid.JumpPower = 50 end wait() end end) end
function Hip(Nume) spawn(function () while getgenv().Hip do game:GetService(""Players"").LocalPlayer.Character.Humanoid.HipHeight = Nume if not getgenv().Hip then game:GetService(""Players"").LocalPlayer.Character.Humanoid.HipHeight = 0.1 end wait() end end) end
function Grav(Nume) spawn(function () while getgenv().Grav do game:GetService(""Workspace"").Gravity = Nume if not getgenv().Grav then game:GetService(""Workspace"").Gravity = 196.2 end wait() end end) end"
miu3VgxV,Color or Die 3,DashaBars,Lua,Saturday 17th of June 2023 08:41:10 AM CDT,"loadstring(game:HttpGet(""https://raw.githubusercontent.com/DashaBars/Hack/main/Color%20or%20Die%203%20ESP.lua""))()"
XumxE1tV,Tetris drought proba,jgtrosh,Python,Saturday 17th of June 2023 08:39:34 AM CDT,"#!/usr/bin/env python3

from sys import stdout
from random import randint, choice
from statistics import median

def next_1roll(last_piece):
    index = randint(0, len(tet)-1)
    return tet[index]

def next_reroll(last_piece):
    index = randint(0, len(tet)-1)
    next_piece = tet[index]
    if next_piece == last_piece:
        index = randint(0,len(tet)-1)
        next_piece = tet[index]
    return next_piece

# https://github.com/babeheim/tetristools/blob/master/R/rtetris.R
tet = [""T"", ""J"", ""Z"", ""O"", ""S"", ""L"", ""I""]
rev = dict((tet[n], n) for n in range(len(tet)))
orientationID = [2, 7, 8, 10, 11, 14, 18] # numeric address for each piece
def next_nes(last_piece):
    lastID = orientationID[rev[last_piece]]
    index = randint(0, len(tet))
    if index > 0:
        next_piece = tet[index-1]
    if index == 0 or next_piece == last_piece:
        index = randint(0,len(tet))
        index += lastID # introduces small biases
        index %= len(tet)
        next_piece = tet[index]
    return next_piece

num = 1000000
print(f""probas de sélection sur {num} tirs"")

print(""1roll"")
hist = dict((p, 0) for p in tet)
p = choice(tet)
for i in range(num):
    if i % 10000 == 0:
        print(f""{100*i//num}%"", end=""\r"")
    p = next_1roll(p)
    hist[p] += 1
for k in hist:
    print(f""{k}: {100*hist[k]/num}%"")
print(""reroll"")
hist = dict((p, 0) for p in tet)
p = choice(tet)
for i in range(num):
    if i % 10000 == 0:
        print(f""{100*i//num}%"", end=""\r"")
    p = next_reroll(p)
    hist[p] += 1
for k in hist:
    print(f""{k}: {100*hist[k]/num}%"")
print(""nes"")
hist = dict((p, 0) for p in tet)
p = choice(tet)
for i in range(num):
    if i % 10000 == 0:
        print(f""{100*i//num}%"", end=""\r"")
    p = next_nes(p)
    hist[p] += 1
for k in hist:
    print(f""{k}: {100*hist[k]/num}%"")
print()

nbparties = 3000
centiles = [0,25,50,75,90,95,99]
def droughtsim(f):
    print(""I-piece max drought length centiles"")
    print(""pieces"", end="" "")
    for centile in centiles:
        print(f""{100-centile:3}%≥"", end="""")
    print()
    for nbpieces in [100, 300, 500, 700, 900]:
        print(f""{nbpieces:6}"", end=""  "")
        longestdroughts = []
        for _ in range(nbparties):
            longestdrought = 0
            p = choice(tet)
            curdrought = 0 if p == ""I"" else 1
            for i in range(nbpieces):
                p = f(p)
                if p == ""I"":
                    curdrought = 0
                else:
                    curdrought += 1
                    if curdrought > longestdrought:
                        longestdrought = curdrought
            longestdroughts.append(longestdrought)
        longestdroughts.sort()
        for centile in centiles:
            print(f""{longestdroughts[nbparties*centile//100]:4}"", end="" "")
        print()
    print()

print(""1roll  "", end="""")
droughtsim(next_1roll)
print(""reroll "", end="""")
droughtsim(next_reroll)
print(""nes    "", end="""")
droughtsim(next_nes)"
