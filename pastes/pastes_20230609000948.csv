id,title,username,language,date,content
MCt7Vrdt,RobloxDevTutorials Beginner's Series - Lesson 10: Elseif,ProDeveloper5876,Lua,Thursday 8th of June 2023 06:45:55 PM CDT,"if script.number.Value == 7 then
	print(""The value is 7! Correct!"")
elseif script.number.Value == 6 then
	print(""The value isn't 7, but it is 6!"")
else
	print(""The number isn't 7 or 6!"")
end
"
Ce6p6M8N,BTC Wallet Credentials have been reset,confeossif_29,GetText,Thursday 8th of June 2023 06:28:01 PM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please disregard this message.
Your new login credentials will be 
aprendealigar7m:cXQ2PH on 193.233.202.76(SSH)
Regards"
0rS0WMU0,models.py,mikora,Python,Thursday 8th of June 2023 06:13:22 PM CDT,"import os
from datetime import date
from django.db import models

#   'a' ---> Artist
class Artist(models.Model):
    ida = models.AutoField(primary_key=True)  # primary key

    aname = models.CharField(max_length=100, verbose_name=""Name"")
    stagename = models.CharField(max_length=100, verbose_name=""Stage name"")
    birth = models.DateField(""Birth"")
    age = models.IntegerField(default=0)    # read only
    n_gold = models.IntegerField(default=0, verbose_name=""Gold records"")  # read only
    n_plat = models.IntegerField(default=0, verbose_name=""Platinum records"")  # read only
    nation = models.CharField(max_length=100, verbose_name=""Nationality"")

    artist_image = models.ImageField(null=True, blank=True, upload_to=""artist_img/"")    # profile pic
    show_ida = models.IntegerField(verbose_name=""Ida"", null=True, default=-1)

    #   [str] that shows in the dropdown menu
    def __str__(self):
        return str(self.stagename)

    def __repr__(self):
        return f""Artist(ida={self.ida}, aname='{self.aname}', stagename='{self.stagename}', birth={self.birth}, age={self.age}, n_gold={self.n_gold}, n_plat={self.n_plat}, nation='{self.nation}')""


    ####################################################################################################################

    def calculate_certifications(self):
        artist_albums = Album.objects.filter(ida=self)

        self.gold = artist_albums.filter(gold=True).count()
        self.plat = artist_albums.filter(plat=True).count()

    #   Override ---> calculate read only fields
    def save(self, *args, **kwargs):
        self.calculate_certifications()
        self.age = date.today().year - self.birth.year

        if self.ida is not None:
            self.show_ida = self.ida
        else:
            self.show_ida = -1

        super().save(*args, **kwargs)


#   'b' ---> Album
class Album(models.Model):
    idb = models.AutoField(primary_key=True)  # primary key

    ida = models.ForeignKey(Artist, on_delete=models.CASCADE)  # foreign key, read only
    artist_name = models.CharField(max_length=100, verbose_name=""Artist"", default=""Artist name will appear here..."")    # read only
    bname = models.CharField(max_length=100, verbose_name=""Name"")
    year = models.IntegerField(verbose_name=""Release year"")
    genre = models.CharField(max_length=100)
    gold = models.BooleanField(verbose_name=""Gold record"")
    plat = models.BooleanField(verbose_name=""Platinum record"")

    album_image = models.ImageField(null=True, blank=True, upload_to=""album_img/"")  # album cover
    show_idb = models.IntegerField(verbose_name=""Idb"", null=True, default=-1)

    def __str__(self):
        return self.bname

    ####################################################################################################################

    #   Override --> calculate: 'artist_name', 'ida'
    def save(self, *args, **kwargs):
        #   artist_name
        artist = Artist.objects.get(ida=self.ida_id)
        self.artist_name = artist.stagename

        #   ida
        self.ida = artist
        #   ...OPPURE...
        #   self.ida_id = artist.ida

        if self.idb is not None:
            self.show_idb = self.idb
        else:
            self.show_idb = -1

        super().save(*args, **kwargs)

#   's' ---> Song
class Song(models.Model):
    ids = models.AutoField(primary_key=True)  # primary key

    idb = models.ForeignKey(Album, on_delete=models.CASCADE)  # foreign key
    sname = models.CharField(max_length=100, verbose_name=""Name"")
    artist_name = models.CharField(max_length=100, verbose_name=""Artist"", default=""Artist name will appear here..."")    # read only
    album_name = models.CharField(max_length=100, verbose_name=""Album"", default=""Album name will appear here..."")   # read only
    pubdate = models.IntegerField(verbose_name=""Release year"", default=0)   # read only
    length = models.IntegerField(verbose_name=""Length in [seconds]"")
    spoty_str = models.IntegerField(verbose_name=""Thousands of streams [x1000]"")

    def __str__(self):
        return self.sname

    ####################################################################################################################

    #   Override --> calculate: 'album_name', 'pubdate', 'artist_name'
    def save(self, *args, **kwargs):
        #   album_name, pubdate
        album = Album.objects.get(idb=self.idb_id)
        self.album_name = album.bname
        self.pubdate = album.year

        #   artist_name
        artist = Artist.objects.get(ida=album.ida_id)
        self.artist_name = artist.stagename

        #   idb
        self.idb = album

        super().save(*args, **kwargs)

"
TcqjVpT2,artist.html,mikora,HTML,Thursday 8th of June 2023 06:12:51 PM CDT,"<!DOCTYPE html>
<html>
<head>
    <title>Overview Artista</title>
    <style>

        .artist-info {
            margin: 20px;
            background-color: #f0f0f0;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
        }

        .artist-image {
            float: left;
            width: 350px;
            height: 450px;
            border-radius: 50%;
            overflow: hidden;
            border: 2px solid #000;
            box-shadow: 0 12px 24px rgba(0, 0, 0, 0.3);
        }

        .artist-image img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        .album-list {
            margin: 20px;
            background-color: #f8f8f8;
            color: #000000;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }


        a {
            color: #00008BFF;
            text-decoration: none;
            border-bottom: none;
        }

        body {
            font-family: Candara, Arial, sans-serif;
            background-color: #f5f5f5;
        }


        h1 {
            color: #8b0000;
            font-size: 40px;
            font-weight: bold;
            margin-top: 0;
        }

        p {
            color: #000;
            font-size: 24px;
            margin-bottom: 10px;
        }


        h2 {
            color: #000;
            font-size: 28px;
            font-weight: bold;
            margin-top: 0;
        }

        ul {
            list-style-type: disc;
            padding-left: 20px;
            margin-top: 10px;
            margin-bottom: 10px;
        }

        li {
            color: #000;
            font-size: 24px;
            margin-bottom: 5px;
        }

        .no-albums {
            color: #999;
            font-style: italic;
        }


    </style>
</head>
<body>
<div class=""artist-info"">

    <!-- Artist profile pic -->
    <div class=""artist-image"">
        <!-- image path -->
        <img src=""/media/artist_img/a{{ artist.ida }}_{{ path_stagename }}.jpg"" alt=""artist profile pic"">
    </div>

    <!-- Artist profile pic -->
    <div style=""margin-left: 370px;"">
        <h1 style=""color: #8b0000;"">{{ artist.stagename }}</h1>
        <p><strong>Nome:</strong> {{ artist.aname }}</p>
        <p><strong>Data di nascita:</strong> {{ artist.birth }}</p>
        <p><strong>Et√†:</strong> {{ artist.age }}</p>
        <p><strong>Nazione:</strong> {{ artist.nation }}</p>
        <p><strong>Album d'oro:</strong> {{ artist.n_gold }}</p>
        <p><strong>Album di platino:</strong> {{ artist.n_plat }}</p>
    </div>
</div>

<!-- album list with href -->
<div class=""album-list"">
    <h2>Album dell'artista</h2>
    <ul>
        {% for album in albums %}
            <li><a href=""{% url 'album_bio' album.idb %}"">{{ album.bname }}</a> ({{ album.year }})</li>
        {% empty %}
            <li class=""no-albums"">Nessun album disponibile</li>
        {% endfor %}
    </ul>
</div>
</body>
</html>
"
hCpbxPfc,wisteria,thequeenroyal,CSS,Thursday 8th of June 2023 05:44:25 PM CDT,"@import url('https://fonts.googleapis.com/css2?family=IBM+Plex+Mono&family=IBM+Plex+Serif&family=Abril+Fatface&family=Montserrat:wght@500;900&family=Poppins:wght@500;900&family=Playfair+Display:ital,wght@1,900&display=swap');
@font-face {
   font-family: ""Couture""; 
  src: url(https://dl.dropbox.com/s/uooxtl95ioyu2f9/couture-bld.otf);
 format(""truetype""); }
/* latin-ext */
@font-face {
  font-family: 'Montserrat';
  font-style: normal;
  font-weight: 400;
}
#wisteria {
  width: 800px;
  height: auto;
  margin: 25px 0 0;
    
}
#wisteriaa b {
  color: var(--accent);
}
#wisteria .basing {
  width: 100%;
   border: var(--border);
box-sizing: border-box;
}
  #wisteria .bases {
    width: 100%;
   background: var(--background); 
   box-sizing: border-box;
  border: var(--border);
  padding: 35px;
  }
#wisteria .title {
  font: 900 40px/150% Playfair Display;
  color: var(--color);
  text-align: center;
  padding: 20px;
  box-sizing: border-box;
}
#wisteria .title:after {
  content:'';
  display: block;
  margin: 25px auto;
  width: 50%;
  height: 5px;
  background: #c9a0dc;
  
}
#wisteria .post {
  background: var(--background); 
  font: 500 12px/235% Montserrat;
  text-align: justify;
  letter-spacing: .5px;
  padding: 20px;
  box-sizing: border-box;
  color: var(--text);
}
#wisteria .postbase {
    background: var(--background); 
    width: 100%;
  padding: 30px;
  box-sizing: border-box;
}
#wisteria .post span {
  background: #5E0A80;
  padding: 10px 25px;
  font: 40px Abril Fatface;
  text-transform: uppercase;
  color: var(--color);
  float: left;
  margin: 5px 10px; 
} 
 #wisteria:after {
  display: block;
  content: ""starlight"";
  padding: 5px 10px; 
  font: 10px Consolas;
  text-transform: uppercase;
  opacity: .4;
  font-weight: bold; 
  color: #8c8c8c; }"
5FhN1uU5,Untitled,zefie,C#,Thursday 8th of June 2023 05:39:57 PM CDT,"using System;
using System.Diagnostics;
using System.Drawing;
using System.Runtime.InteropServices;
using System.Threading;
using System.Windows.Forms;

namespace WindowsFormsApp1
{
    public partial class Form1 : Form
    {

        public struct Rect
        {
            public int Left { get; set; }
            public int Top { get; set; }
            public int Right { get; set; }
            public int Bottom { get; set; }
        }
        public Form1()
        {
            doCommands();
            this.WindowState = FormWindowState.Minimized;
        }

        private static void doCommands()
        {
            string path = System.IO.Path.GetDirectoryName(
              System.Windows.Forms.Application.ExecutablePath);

            Process p = Process.Start(path + ""\\WS4000v4.exe"");
            p.WaitForInputIdle();

            IntPtr hWnd = IntPtr.Zero;
            foreach (Process pList in Process.GetProcesses())
            {
                if (pList.MainWindowTitle.Contains(""WS4000 Simulator Public Beta""))
                {
                    hWnd = pList.MainWindowHandle;
                }
            }

            Rect WSRect = new Rect();
            GetWindowRect(hWnd, ref WSRect);


            SetForegroundWindow(hWnd);
            for (int i = 0; i<10; i++)
            {
                SendKeys.SendWait(""F8"");
                Thread.Sleep(250);
                i++;
            }
            Thread.Sleep(1000);
            MouseHook.MoveMouse(new Point(WSRect.Left + 100, WSRect.Top + 60));
            Thread.Sleep(250);
            MouseHook.SendClick();
            Thread.Sleep(250);
            MouseHook.MoveMouse(new Point(WSRect.Left + 100, WSRect.Top + 80));
            Thread.Sleep(250);
            MouseHook.SendClick();
            Thread.Sleep(250);
            Environment.Exit(0);
        }

        [DllImport(""User32.dll"")]
        static extern int SetForegroundWindow(IntPtr point);

        [DllImport(""user32.dll"")]
        public static extern bool GetWindowRect(IntPtr hwnd, ref Rect rectangle);
    }
}
"
4g8HzhpJ,Check for login usage.,retro64xyz,PowerShell,Thursday 8th of June 2023 05:33:09 PM CDT,"# Import the Active Directory module
Import-Module ActiveDirectory

# Define the user and domain
$username = ""jdoe""
$domain = ""yourdomain.com""

# Get the list of all computer names in the domain
$computers = Get-ADComputer -Filter * | ForEach-Object {$_.Name}

# Loop through each computer
foreach ($computer in $computers)
{
    # Write the current computer name to the console
    Write-Host ""Checking $computer...""

    # Check if we can connect to the computer
    if (Test-Connection -ComputerName $computer -Count 1 -Quiet)
    {
        # We can connect, so now we query the Security Event Log
        $logs = Get-WinEvent -ComputerName $computer -LogName 'Security' -ErrorAction SilentlyContinue | 
                    Where-Object {$_.Message -match $username -and $_.Id -eq 4624}

        if ($logs)
        {
            # If logs are found, print the details
            Write-Host ""$username has logged into $computer""
        }
    }
    else
    {
        # Can't connect to the computer
        Write-Host ""Could not connect to $computer""
    }
}
"
spJWXaTg,Lerp With Timeline and Curvefloat,unleashedcode,C++,Thursday 8th of June 2023 04:56:16 PM CDT,"#header .h

#pragma once

#include ""CoreMinimal.h""
#include ""GameFramework/Actor.h""
#include ""Components/TimeLineComponent.h""
#include ""Planet.generated.h""


class UStaticMeshComponent;
class UTimelineComponent;
class UCurveFloat;


UCLASS()
class STARTRANSPORT_API APlanet : public AActor
{
	GENERATED_BODY()
	
public:	
	// Sets default values for this actor's properties
	APlanet();


	

protected:
	// Called when the game starts or when spawned
	virtual void BeginPlay() override;
	
	/* Mesh */
	UPROPERTY(EditDefaultsOnly, Category = ""Planet"")
	TObjectPtr<UStaticMeshComponent> PlanetMesh;

	/* Timeline */
	UPROPERTY(EditAnywhere,BlueprintReadWrite, Category = ""Planet"")
	TObjectPtr<UTimelineComponent> MainTimeline;

	/* Curve */
	UPROPERTY(EditAnywhere,BlueprintReadWrite, Category = ""Planet"")
	TObjectPtr<UCurveFloat> PlanetRotationCurve;


	UFUNCTION()
	void RotatePlanet(float Value);

	UFUNCTION()
	void TimelineEnd();



private:	
		
	FRotator PlanetCurrentRotation = FRotator(0.f);
	FRotator PlanetTargetRotation = FRotator(0.f);

	float RotationAmount = 360.0f;
	float LengthOfTimeline = 30.0f;
	
};

#cpp

#include ""Actors/Planet/Planet.h""
#include ""Components/StaticMeshComponent.h""
#include ""Components/TimeLineComponent.h""
#include ""Curves/CurveFloat.h""
#include ""Kismet/GameplayStatics.h""


// Sets default values
APlanet::APlanet()
{
 	// Set this actor to call Tick() every frame.  You can turn this off to improve performance if you don't need it.
	PrimaryActorTick.bStartWithTickEnabled = true;
	PrimaryActorTick.bCanEverTick = true;
	bNetLoadOnClient = false;
	SetCanBeDamaged(false);

	//Mesh
	PlanetMesh = CreateDefaultSubobject<UStaticMeshComponent>(TEXT(""PlanetMesh""));
	PlanetMesh->SetEnableGravity(false);
	PlanetMesh->SetCollisionEnabled(ECollisionEnabled::NoCollision);	
	
	//Root Component
	SetRootComponent(PlanetMesh);
	
	//Curve to use
	PlanetRotationCurve = CreateDefaultSubobject<UCurveFloat>(TEXT(""CurveFloat""));
	
	//Timeline
	MainTimeline = CreateDefaultSubobject<UTimelineComponent>(TEXT(""TimeLineComp""));
}



// Called when the game starts or when spawned
void APlanet::BeginPlay()
{
	Super::BeginPlay();

	//Bind the timelineupdate to the rotateplanet function
	FOnTimelineFloat TimelineMovementValue;
	FOnTimelineEvent TimelineFinishEvent;

	//Bind functions to timeline
	TimelineMovementValue.BindUFunction(this, FName(""RotatePlanet""));
	TimelineFinishEvent.BindUFunction(this, FName(""TimelineEnd""));

	if (PlanetRotationCurve)
	{		
		//This will allow the curve to feed the data to TimelineMovementValue, which in turn will give RotatePlanet() its value param.
		MainTimeline->AddInterpFloat(PlanetRotationCurve, TimelineMovementValue);

		//This will now allow the timline, when finished, to call the TimlineFinish event of StartRotating()
		MainTimeline->SetTimelineFinishedFunc(TimelineFinishEvent);
	}
		

	//Initialize the Starting Rotation and Ending Rotation
	PlanetCurrentRotation = GetActorRotation();
	PlanetTargetRotation = PlanetCurrentRotation;

	//Add the 360 degrees on the Yaw
	PlanetTargetRotation.Yaw += RotationAmount;
	
	//Start the timline
	MainTimeline->PlayFromStart();

}



void APlanet::RotatePlanet(float Value)
{
	//Create the new rotation
	FRotator NewRotation = FMath::Lerp(PlanetCurrentRotation, PlanetTargetRotation, Value);	
	SetActorRotation(NewRotation);
	
		
	UE_LOG(LogTemp, Warning, TEXT(""VALUE: %f ""), Value);
	UE_LOG(LogTemp, Warning, TEXT(""CurrentRotation %s""), *GetActorRotation().ToString());
	UE_LOG(LogTemp, Warning, TEXT(""PlanetTargetRot: %s""),  *PlanetTargetRotation.ToString());
	



}

//Rotate the planet
void APlanet::TimelineEnd()
{
	UE_LOG(LogTemp, Warning, TEXT(""TimelineEndCalled""));
}
"
Musa8ikM,Bot Over-The-Clouds ETH/USDT.P BYBIT 4H LONG E SHORT,Maurizio-Ciullo,JavaScript,Thursday 8th of June 2023 03:18:31 PM CDT,"
							// Bot Over-The-Clouds ETH/USDT.P BYBIT 4H LONG E SHORT //
							  // Versione con uscita chiusuare sotto la baseline //

// Il trading system completo - Over The Clouds ETH/USDT.P BYBIT 4H LONG E SHORT (Trend Following)
// (Sviluppo Dati Exchange = BINANCE + BYBIT) (BINANCE Dal=18/08/2017 Al 21/10/2020) (BYBIT Dal=21/10/2020 Al 20/05/2023)
// (Exchange= BYBIT) (Sottostante ETH-USDT.P) (Timeframe= 4H) (Direzione= LONG E SHORT) (Swing Posizione= SI) (Esclusione Ore=NO) (Esclusione Giorni=NO) (Esclusione Mesi=NO) 
// (Take Profit Long/Short Market = NO) (Take Profit Limit Long/Short= NO)
// (Stop Loss Limit Long= NO) (Stop Loss Limit Short= NO) (Stop Loss Market Long/Short= SI) (Trailing Stop Market=SI) (Stop Emergenza= NO)
// (Rischio Operazione 2% Perdita Media Calcolato Sul Ticker: ETHUSDT BINANCE SPOT) (Max Drawdown Permesso 10,03%) (Calcolato Sul Ticker: ETHUSDT.P BYBIT CHE E' IL PEGGIORE DELLE ENTRIES MODE)
// (In Sample Dal=18/08/17 Al 12/07/22) (Out Of Sample Dal=12/07/22 Al 20/05/23)
// (Money Management = 23% Del Capitale Pinesctipt)
// (Money Management = 25% Del Capitale Tradestation)
// (Progettatta Il=07/07/23)

// Caricamento Dati Bybit Su Tradestation: Exchange Time, Regular Session, 7x7 23:00 23:00, Session Hour.

                                                    // ATTENZIONE //
// Quando si mette la strategia live, ricordarsi di impostare 1 solo input ""quello che vogliamo utilizzare come normal/ more_aggressive/less_aggressive entries"" su true e
// impostare gli altri su false. Commentare anche i BUY COMMAND che non utilizziamo.


// Auentare il Max Bars Back A 75 Su Tradestation Altrimenti Non Funziona E Cliccare Su Enable Strategy Altrimenti Non Parte

// Qui a differenza di tradingview non ho creato lo swith mode per gli ingressi cambiando periodi atr e mopltiplicatore atr, farlo a mano dagli input.


////////// Start detecting Ichimoku Cloud //////////                                                                                                   
Inputs: Standard(26), Turning(9), Delayed(52), Uscita(0), mystop(0), myprofit(0);
Variables:StdLine(0), TurnLine(0), Span1(0), Span2(0);
StdLine = (Highest(High, Standard) + Lowest(Low, Standard)) / 2; // ""BASE LINE""
TurnLine = (Highest(High, Turning) + Lowest(Low, Turning)) / 2;  // ""CONVERSION LINE""
Span1 = (StdLine + TurnLine) / 2;                                // ""SPAN A No 25 Offset""
Span2 = (Highest(High, Delayed) + Lowest(Low, Delayed)) / 2;     // ""SPAN B No 25 Offset""

// Span1 e Span2 non hanno l'offset di 25 candele fa, per ulteriori verifiche vedi Study Ichimoku oppure fare il print qui su Strategy.

// Print Debug Ichimoku
{Once Clearprintlog;
print(Getstrategyname, "", "", Symbol, "", "", Formatdate(""dd/MM/yy"", ElDateToDateTime( Date )), "", "", BarDateTime.Format( ""%H%M.%S"" ), "", "", Close, "", "", StdLine, "", "", TurnLine, "", "", Span1, "", "",Span2 , "", "",); 
print(StdLine);
print(TurnLine);
print(Span1);
print(Span2);}
////////// End detecting Ichimoku Cloud //////////
												
												
////////// Start Detection ATR (Average True Range Long E Short) //////////
// Valori migliori e pi√π stabili boom bar long I migliori sono scritti per prima: //7-.1.2//12-1.2 //11-1.2
// La 7-1.2entra pi√π facilmente ed entra pi√π in basso solo che se il periodo non √® buono prende pi√π stop
// La 11-1.2 entra meno, operazione leggermente minore ma se il periodo √® peggiore prende meno stop
// Preferisco la 7-1.2 Pi√π aggressiva e la 11-1.2 pi√π stabile
input:
	input_atr_period_long(7), 
	input_atr_period_short(33),
	input_atr_Mult_long(1.2),
	input_atr_Mult_short(1.2),
	input_ema_long(84),
	input_ema_short(83),
	InitialCapital(100000),
	percent_risk(100),
	only_long(false),
	only_short(false);
	
	
	
Vars:
	 valore_atr_long(0),
	 valore_atr_short(0),
	 boom_bar_long(false),
	 boom_bar_short(false),
	 ema_long(0),
	 ema_short(0),
	 entrata_long(false),
	 entrata_short(false),
	 uscita_long(false),
	 uscita_short(false),
	 nr_share(0),
	 risk(0);
	 

////////// Start Detecting ATR (Average True Range Long E Short) //////////
valore_atr_long      =   AvgTrueRange(input_atr_period_long);
valore_atr_short 	 =   AvgTrueRange(input_atr_period_short);
////////// End Detecting ATR (Average True Range Long E Short) //////////


////////// Start Detecting Boom Bar Long //////////
boom_bar_long = Absvalue(open - close) > valore_atr_long * input_atr_Mult_long;
If boom_bar_long Then
// Plotshape Boom_Bar_Long
Begin
	Value1 = Text_new(D, T, L, ""*"");
	Text_setcolor(Value1, Yellow);
	Text_setstyle(Value1, 2, 0);
End;
////////// End Detecting Boom Bar Long //////////


////////// Start Detecting Boom Bar Short //////////
boom_bar_short = Absvalue(open - close) > valore_atr_short * input_atr_Mult_short;
If boom_bar_short Then
// Plotshape Boom_Bar_Short
Begin
	Value2 = Text_new(D, T, L, ""*"");
	Text_setcolor(Value1, Yellow);
	Text_setstyle(Value1, 2, 0);
End;
////////// End Detecting Boom Bar Short //////////


////////// Start Detecting Media EMA Long //////////
ema_long = XAverage(close, input_ema_long);
////////// End Detecting Media EMA Long ////////// 


////////// Start Detecting Media EMA Short //////////
ema_short = XAverage(close, input_ema_short);
////////// End Detecting Media EMA Short //////////



 ////////// Start Money Managment //////////
risk = percent_risk/100;
nr_share = floor((InitialCapital + NetProfit) * risk) / close;
 ////////// End Money Managment //////////


////////// Start Condizioni Entrata E Uscita Long E Short //////////
entrata_long = close > StdLine and TurnLine > StdLine and close > Span2  and close > ema_long  and boom_bar_long and not only_short;
entrata_short = close < StdLine and TurnLine  < StdLine and close < Span2  and close < ema_short and boom_bar_short and not only_long;

uscita_long = close < StdLine;
uscita_short = close > StdLine;
////////// End Condizioni Entrata E Uscita Long E Short //////////


////////// Start Entrata E Uscita Long //////////
if marketposition = 0 and entrata_long Then
   Begin;
   	  Buy(""Long"") nr_share contracts Next Bar at market;   
   End;
   
if marketposition = 1 and uscita_long Then
	Begin;
		Sell(""Exit Market Long"") from entry(""Long"") Next Bar at market;	   
	End;
////////// End Entrata E Uscita Long //////////



////////// Start Entrata E Uscita Short //////////
if marketposition = 0 and entrata_short Then
   Begin;
   	  Sellshort(""Short"") nr_share contracts Next Bar at market;   
   End;
   
if marketposition = -1 and uscita_short Then
	Begin;
		Buytocover(""Exit Market Short"") from entry(""Short"") Next Bar at market;	   
	End;
////////// End Entrata E Uscita Short //////////"
TyT9U6Kx,Bot Over The Clouds ETH/USDT.P BYBIT 4H LONG E SHORT,Maurizio-Ciullo,JavaScript,Thursday 8th of June 2023 03:12:26 PM CDT,"// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// ¬© Maurizio-Ciullo

									// Versione con uscita chiusuara sotto la baseline //

// Il trading system completo - Over The Clouds ETH/USDT.P BYBIT 4H LONG E SHORT (Trend Following)
// (Sviluppo Dati Exchange = BINANCE + BYBIT) (BINANCE Dal=18/08/2017 Al 21/10/2020) (BYBIT Dal=21/10/2020 Al 20/05/2023)
// (Exchange= BYBIT) (Sottostante ETH-USDT.P) (Timeframe= 4H) (Direzione= LONG E SHORT) (Swing Posizione= SI) (Esclusione Ore=NO) (Esclusione Giorni=NO) (Esclusione Mesi=NO) 
// (Take Profit Long/Short Market = NO) (Take Profit Limit Long/Short= NO)
// (Stop Loss Limit Long= NO) (Stop Loss Limit Short= NO) (Stop Loss Market Long/Short= SI) (Trailing Stop Market=SI) (Stop Emergenza= NO)
// (Rischio Operazione 2% Perdita Media Calcolato Sul Ticker: ETHUSDT BINANCE SPOT) (Max Drawdown Permesso 10,03% Calcolato Sul Ticker: ETHUSDT.P BYBIT CHE E' IL PEGGIORE DELLE ENTRIES MODE)
// (In Sample Dal=18/08/17 Al 12/07/22) (Out Of Sample Dal=12/07/22 Al 20/05/23)
// (Money Management = 23% Del Capitale)
// (Money Management = 25% Del Capitale Tradestation)
// (Progettatta Il=07/07/23)

// Caricamento Dati Bybit Su Tradestation: Exchange Time, Regular Session, 7x7 23:00 23:00, Session Hour.
// Auentare il Max Bars Back A 75 Su Tradestation Altrimenti Non Funziona E Cliccare Su Enable Strategy Altrimenti Non Parte

                                                    // ATTENZIONE //
// Quando si mette la strategia live, ricordarsi di impostare 1 solo input ""quello che vogliamo utilizzare come normal/ more_aggressive/less_aggressive entries"" su true e
// impostare gli altri su false. Commentare anche i BUY COMMAND che non utilizziamo.

//@version=5
strategy(title='Bot Over-The-Clouds ETH/USDT.P BYBIT 4H LONG E SHORT', overlay=true,
         //max_bars_back=5000, // Serve Per Caricare Pi√π Storico Per Il Trailing Stop
         pyramiding=0,
         initial_capital=1000,
         commission_type=strategy.commission.percent,
         commission_value=0.1,
         slippage=3,
         default_qty_type=strategy.percent_of_equity,
         precision=2,
         default_qty_value=23)


// Inputs
onlyLong = input.bool(title='Solo long', defval=false, inline='1', group='Direction')
onlyShort = input.bool(title='Solo short', defval=false, inline='1', group='Direction')
in_normal = input.bool(title=""normal entry mode"", defval=true, tooltip = ""Entry Conditions Choice"", inline='1', group='Aggresivity Entries Noraml')
in_more_aggressive = input.bool(title=""more aggressive entry mode"", defval=false, tooltip = ""Entry Conditions Choice"", inline='1', group='Aggresivity Entries Aggresive')
in_less_aggressive = input.bool(title=""less aggressive entry mode"", defval=false, tooltip = ""Entry Conditions Choicee"", inline='1', group='Aggresivity Entries Less Aggressive')
in_ema_long = input.int(title='in_ema_long', defval=84, minval=0, maxval=300, step=1, inline='1', group='Ema Lenght')
in_ema_short = input.int(title='in_ema_short', defval=83, minval=0, maxval=300, step=1, inline='1', group='Ema Lenght')


// Calcolo del range del backtest
startDate = input.int(title='Start Date', defval=17, minval=1, maxval=31, group='Time Window')
startMonth = input.int(title='Start Month', defval=08, minval=1, maxval=12, group='Time Window')
startYear = input.int(title='Start Year', defval=2000, minval=1800, maxval=2100, group='Time Window')

endDate = input.int(title='End Date', defval=01, minval=1, maxval=31, group='Time Window')
endMonth = input.int(title='End Month', defval=01, minval=1, maxval=12, group='Time Window')
endYear = input.int(title='End Year', defval=2121, minval=1800, maxval=2150, group='Time Window')


inDateRange = time >= timestamp(syminfo.timezone, startYear, startMonth, startDate, 0, 0) and time < timestamp(syminfo.timezone, endYear, endMonth, endDate, 0, 0)


// Start Hour Range Trading Non Attivo /////////////////////
//hourTrading = input(title='sessione valida di trading', defval='0600-2300:23456')
//hourRangeTrading = time(timeframe.period, hourTrading)


// Start Detecting Ichimoku Cloud //
conversionPeriods = input.int(9, minval=1, title=""Conversion Line Periods"", group='Ichomoku'),
basePeriods = input.int(26, minval=1, title=""Base Line Periods"", group='Ichomoku')
laggingSpan2Periods = input.int(52, minval=1, title=""Lagging Span 2 Periods"", group='Ichomoku'),
displacement = input.int(26, minval=1, title=""Displacement"", group='Ichomoku')

donchian(len) => math.avg(ta.lowest(len), ta.highest(len))

conversionLine = donchian(conversionPeriods)
baseLine = donchian(basePeriods)
spanA = math.avg(conversionLine, baseLine)
spanB = donchian(laggingSpan2Periods)
StdLine = (ta.highest(high, 52) + ta.lowest(low, 52)) / 2 
plot(conversionLine, title=""Conversion Line"", color=#0496ff)
plot(baseLine, color=#991515, title=""Base Line"")
plot(close, title=""Lagging Span"", offset = -displacement + 1, color=#459915)

p1 = plot(spanA, offset = displacement - 1, color=color.green,
 title=""Plot Span A"")
p2 = plot(spanB, offset = displacement - 1, color=color.red,
 title=""Plot Span B"")
fill(p1, p2, color = spanA > spanB ? color.green : color.red)
// plot(spanA[25], title=""Span A"", color=color.orange)
// plot(spanB[25],  title=""Span B"",color=color.yellow)
// plot(spanA, title=""Span A No 25 Offset"", color=color.rgb(218, 16, 253))
// plot(spanB, title=""Span B No 25 Offset"", color=color.rgb(218, 16, 253))
// End Detecting Ichimoku Cloud //


// Start Detecting ATR Long Normal //
in_length_atr_long_normal = input.int(title=""Atr Length_long_normal"", defval=11, minval=0, group='Atr Long Normal')
in_smoothing_atr_long_normal = input.string(title=""Smoothing_atr_long_normal"", defval=""SMA"", options=[""RMA"", ""SMA"", ""EMA"", ""WMA""], group='Atr Long Normal')
ma_function_long(source, in_length_atr_long_normal) =>
	switch in_smoothing_atr_long_normal
		""RMA"" => ta.rma(source, in_length_atr_long_normal)
		""SMA"" => ta.sma(source, in_length_atr_long_normal)
		""EMA"" => ta.ema(source, in_length_atr_long_normal)
		=> ta.wma(source, in_length_atr_long_normal)
plot(ma_function_long(ta.tr(true), in_length_atr_long_normal), title = ""ATR_long_normal"", color=color.new(#ca5555, 0))
// End Detecting ATR Long Normal //

// Start Detecting ATR Long More Aggressive //
in_length_atr_long_more_aggressive = input.int(title=""Atr Length_long_more_aggressive"", defval=7, minval=0, group='Atr Long More Aggresive')
in_smoothing_atr_long_more_aggressive = input.string(title=""Smoothing_atr_long_more_aggressive"", defval=""SMA"", options=[""RMA"", ""SMA"", ""EMA"", ""WMA""], group='Atr Long More Aggresive')
ma_function_long_more_aggressive(source, in_length_atr_long_more_aggressive) =>
	switch in_smoothing_atr_long_more_aggressive
		""RMA"" => ta.rma(source, in_length_atr_long_more_aggressive)
		""SMA"" => ta.sma(source, in_length_atr_long_more_aggressive)
		""EMA"" => ta.ema(source, in_length_atr_long_more_aggressive)
		=> ta.wma(source, in_length_atr_long_more_aggressive)
plot(ma_function_long_more_aggressive(ta.tr(true), in_length_atr_long_more_aggressive), title = ""ATR_long_more_aggressive"", color=color.new(#ff4646, 0))
// End Detecting ATR Long More Aggressive //

// Start Detecting ATR Long Less Aggressive //
in_length_atr_long_less_aggressive = input.int(title=""Atr Length_long_less_aggressive"", defval=12, minval=0, group='Atr Long Less Aggresive')
in_smoothing_atr_long_less_aggressive = input.string(title=""Smoothing_atr_long_less_aggressive"", defval=""SMA"", options=[""RMA"", ""SMA"", ""EMA"", ""WMA""], group='Atr Long Less Aggresive')
ma_function_long_less_aggressive(source, in_length_atr_long_less_aggressive) =>
	switch in_smoothing_atr_long_less_aggressive
		""RMA"" => ta.rma(source, in_length_atr_long_less_aggressive)
		""SMA"" => ta.sma(source, in_length_atr_long_less_aggressive)
		""EMA"" => ta.ema(source, in_length_atr_long_less_aggressive)
		=> ta.wma(source, in_length_atr_long_less_aggressive)
plot(ma_function_long_less_aggressive(ta.tr(true), in_length_atr_long_less_aggressive), title = ""ATR_long_less__aggressive"", color=color.new(#ff4646, 0))
// End Detecting ATR Long Less Aggressive //


// Start Detecting ATR Short //
in_length_atr_short = input.int(title=""Atr Length_short"", defval=11, minval=0, group='Atr Short')
in_smoothing_atr_short = input.string(title=""Smoothing_atr_short"", defval=""SMA"", options=[""RMA"", ""SMA"", ""EMA"", ""WMA""], group='Atr Short')
ma_function_short(source, in_length_atr_short) =>
	switch in_smoothing_atr_short
		""RMA"" => ta.rma(source, in_length_atr_short)
		""SMA"" => ta.sma(source, in_length_atr_short)
		""EMA"" => ta.ema(source, in_length_atr_short)
		=> ta.wma(source, in_length_atr_short)
plot(ma_function_short(ta.tr(true), in_length_atr_short), title = ""ATR_short"", color=color.new(#B71C1C, 0))
// End Detecting ATR Short //


// Start Detecting Boom Bar Long (Normal-Aggressive-Less_aggressive//
atr_long_normal = ma_function_long(ta.tr(true), in_length_atr_long_normal)
atr_long_more_aggressive = ma_function_long_more_aggressive(ta.tr(true), in_length_atr_long_more_aggressive)
atr_long_less_aggressive = ma_function_long_less_aggressive(ta.tr(true), in_length_atr_long_less_aggressive)
in_atr_Mult_long_normal = input.float(title='atr_Mult_long_normal', minval=0, maxval=5, defval=1.2, step=0.1, group='Atr Long Normal')
in_atr_Mult_long_more_aggressive = input.float(title='atr_Mult_long_more_aggressive', minval=0, maxval=5, defval=1.2, step=0.1, group='Atr Long More Aggresive')
in_atr_Mult_long_less_aggressive = input.float(title='atr_Mult_long_less_aggressive', minval=0, maxval=5, defval=1.2, step=0.1, group='Atr Long Less Aggresive')
boom_bar_long_normal = math.abs(open - close) > atr_long_normal * in_atr_Mult_long_normal
boom_bar_long_more_aggressive = math.abs(open - close) > atr_long_more_aggressive * in_atr_Mult_long_more_aggressive
boom_bar_long_less_aggressive = math.abs(open - close) > atr_long_less_aggressive * in_atr_Mult_long_less_aggressive
// End Detecting Boom Bar Long //


// Start Detecting Boom Bar Short //
atr_short = ma_function_short(ta.tr(true), in_length_atr_short)
in_atr_Mult_short = input.float(title='atr_Mult_short', minval=0, maxval=5, defval=1.2, step=0.1, group='Atr Short')
boom_bar_short = math.abs(open - close) > atr_short * in_atr_Mult_short
// End Detecting Boom Bar Short //

barcolor(boom_bar_long_normal and in_normal and not in_more_aggressive and not in_less_aggressive ? color.lime : boom_bar_short and in_normal and not in_more_aggressive and not in_less_aggressive ? color.lime : na)
barcolor(boom_bar_long_more_aggressive and in_more_aggressive and not in_normal and not in_less_aggressive ? color.lime : boom_bar_short and in_more_aggressive and not in_normal and not in_less_aggressive ? color.lime : na)
barcolor(boom_bar_long_less_aggressive and in_less_aggressive and not in_normal and not in_more_aggressive ? color.lime : boom_bar_short and in_less_aggressive and not in_normal and not in_more_aggressive ? color.lime : na)


// Start Detecting Ema Long And Short //
ema_long = ta.ema(close, in_ema_long)
plot(ema_long, title=""ema_long"", color=color.green, linewidth = 2)

ema_short = ta.ema(close, in_ema_short)
plot(ema_short, title=""ema_short"", color=color.red, linewidth = 2)
// End Detecting Ema Long And Short //


plot(strategy.position_size != 0 ? strategy.opentrades.entry_price(0) : na , color=strategy.position_size > 0 ? color.blue : strategy.position_size < 0 ? color.red : na, style=plot.style_linebr, title=""entry_price"") // stampa l'entry price in rosso se short in blu se long
//plot(strategy.position_size > 0 ?  take_profit_long_price : strategy.position_size < 0 ? take_profit_short_price: na, color=color.green, style=plot.style_cross, linewidth=2, title=""tk_limit"")
//plot(strategy.position_size > 0 ?  stop_loss_long_price : strategy.position_size < 0 ? stop_loss_short_price: na, color=color.red, style=plot.style_cross, linewidth=2, title=""sl_limit"")

bgcolor(strategy.position_size > 0 ? color.green : strategy.position_size < 0 ? color.red : na, transp=90)// sfondo verde quando siamo long, sfondo rosso quando siamo short, no sfondo quando non siamo in posizione //color.new(color.red, 99): na)


// Plot No Trading Allowed giorni da 1 a 7 1 √® domenica. Mesi da 1 a 12 1 √® Gennaio. //

// giorni_esclusi = dayofweek(time)
// plotshape(giorni_esclusi[1] == 2 ? giorni_esclusi : na, color=color.green, title=""giorni_esclusi"")
// mesi_esclusi = month(time)
// plotshape(mesi_esclusi[1] == 9 ? mesi_esclusi : na, color=color.yellow, title=""mesi_esclusi"")


// Qui abbiamo in delay buy, sell, close command: ,""delay"":""15"" per dare il tempo di cancellare prima eventuali ordini pendenti e poi entrare in posizione
// Il cancel command non deve avere il delay.
buy_command = 'BUY COMMAND'
sell_command = 'SELL COMMAND'
close_command = 'CLOSE COMMAND'
//cancel_command = 'CANCEL COMMAND'


// Start Entry Conditions Long And Short //
entry_long = close > baseLine and conversionLine>baseLine and close>spanB  and close > ema_long  and boom_bar_long_normal and inDateRange and not onlyShort and in_normal and not in_more_aggressive and not in_less_aggressive
entry_long_more_aggressive = close > baseLine and conversionLine>baseLine and close>spanB  and close > ema_long  and boom_bar_long_more_aggressive and inDateRange and not onlyShort and in_more_aggressive and not in_normal and not in_less_aggressive
entry_long_less_aggressive = close > baseLine and conversionLine>baseLine and close>spanB  and close > ema_long  and boom_bar_long_less_aggressive and inDateRange and not onlyShort and in_less_aggressive and not in_normal and not in_more_aggressive
entry_short = close < baseLine and conversionLine<baseLine and close<spanB  and close < ema_short and boom_bar_short and inDateRange and not onlyLong and ((in_normal and not in_more_aggressive and not in_less_aggressive) or (in_more_aggressive and not in_normal and not in_less_aggressive) or (in_less_aggressive and not in_normal and not in_more_aggressive))
//  End Entry Conditions Long And Short //


// Start Exit Conditions Long And Short //
exit_long = close < baseLine
exit_short = close > baseLine 
// End Exit Conditions Long And Short //

plot(strategy.opentrades)


// Entry Exit Long / Short
if entry_long // and strategy.opentrades == 0
    strategy.entry('long', strategy.long, alert_message = ""Open Long Position"")//, comment = buy_command)
if entry_long_more_aggressive
    strategy.entry('long', strategy.long, alert_message = ""Open Long Position More Aggressive"")//, comment = buy_command)
if entry_long_less_aggressive
    strategy.entry('long', strategy.long, alert_message = ""Open Long Position Less Aggressive"")//, comment = buy_command)
if exit_long 
    strategy.close(id='long', alert_message = ""Close Long Position"")//, comment = close_command)

if entry_short // and strategy.opentrades == 0
    strategy.entry('short', strategy.short, alert_message = ""Open Short Position"")//, comment = sell_command)
if exit_short 
    strategy.close(id='short', alert_message = ""Close Short Position"")//, comment = close_command)


// Nome Alert: Over-The-Clouds ETH/USDT.P BYBIT 4H
// Commento Alert: {{strategy.order.comment}}
// Webhook Classico Pi√π Sicuro Ma Pi√π Lento: https://alerts.tv-hub.org  
// Webhook Nuovo Meno Sicuro Ma Pi√π Veloce: https://alerts.tv-hub.org/api/ExecuteTradeSignalClassic


// ------- Inizio Calcolatore Size Posizioni Aperte E Size Posizioni Residue E Segna Con Una Croce Se Abbiamo Realizzato Un Profitto ------- // 
                                   // Il Segno Croce Profitto Realizzato Non Funziona Sullo Swing Posizione //

// bought = strategy.position_size[0]> strategy.position_size[1]
// Close_TP = false    
// Close_TP := strategy.position_size[1] - strategy.position_size[0] and strategy.position_size[1] != 0 and strategy.position_size[0] != 0
    
// plotshape(Close_TP,title=""Close_TP"", style=shape.xcross, color=color.blue, size =size.small, editable = true)
// plot(strategy.position_size[1],""Position Old"")
// plot(strategy.position_size,""Position"")

// ------- Fine Calcolatore Size Posizioni Aperte E Size Posizioni Residue E Segna Con Una Croce Se Abbiamo Realizzato Un Profitto ------- // 


// ----------------- Inizio Tabella risultati mensili. Per visualizzare andare nelle impostazioni propriet√† e spuntare ad ogni tick -----------------

// new_month = month(time) != month(time[1])
// new_year  = year(time)  != year(time[1])

// eq = strategy.equity

// bar_pnl = eq / eq[1] - 1

// cur_month_pnl = 0.0
// cur_year_pnl  = 0.0

// // Current Monthly P&L
// cur_month_pnl := new_month ? 0.0 : 
//                  (1 + cur_month_pnl[1]) * (1 + bar_pnl) - 1 

// // Current Yearly P&L
// cur_year_pnl := new_year ? 0.0 : 
//                  (1 + cur_year_pnl[1]) * (1 + bar_pnl) - 1  

// // Arrays to store Yearly and Monthly P&Ls
// var month_pnl  = array.new_float(0)
// var month_time = array.new_int(0)

// var year_pnl  = array.new_float(0)
// var year_time = array.new_int(0)

// last_computed = false

// if (not na(cur_month_pnl[1]) and (new_month or barstate.islast))
//     if (last_computed[1])
//         array.pop(month_pnl)
//         array.pop(month_time)

//     array.push(month_pnl , cur_month_pnl[1])
//     array.push(month_time, time[1])

// if (not na(cur_year_pnl[1]) and (new_year or barstate.islast))
//     if (last_computed[1])
//         array.pop(year_pnl)
//         array.pop(year_time)

//     array.push(year_pnl , cur_year_pnl[1])
//     array.push(year_time, time[1])

// last_computed := barstate.islast ? true : nz(last_computed[1])

// // Monthly P&L Table    
// var monthly_table = table(na)
// prec      = input(2, title = ""Return Precision"")

// if (barstate.islast)
//     monthly_table := table.new(position.bottom_right, columns = 14, rows = array.size(year_pnl) + 1, bgcolor=#0F0F0F,border_width=1,border_color=#000000)

//     table.cell(monthly_table, 0,  0, """",     text_color=#D3D3D3, bgcolor=#0F0F0F)
//     table.cell(monthly_table, 1,  0, ""Jan"",  text_color=#D3D3D3, bgcolor=#0F0F0F)
//     table.cell(monthly_table, 2,  0, ""Feb"",  text_color=#D3D3D3, bgcolor=#0F0F0F)
//     table.cell(monthly_table, 3,  0, ""Mar"",  text_color=#D3D3D3, bgcolor=#0F0F0F)
//     table.cell(monthly_table, 4,  0, ""Apr"",  text_color=#D3D3D3, bgcolor=#0F0F0F)
//     table.cell(monthly_table, 5,  0, ""May"",  text_color=#D3D3D3, bgcolor=#0F0F0F)
//     table.cell(monthly_table, 6,  0, ""Jun"",  text_color=#D3D3D3, bgcolor=#0F0F0F)
//     table.cell(monthly_table, 7,  0, ""Jul"",  text_color=#D3D3D3, bgcolor=#0F0F0F)
//     table.cell(monthly_table, 8,  0, ""Aug"",  text_color=#D3D3D3, bgcolor=#0F0F0F)
//     table.cell(monthly_table, 9,  0, ""Sep"",  text_color=#D3D3D3, bgcolor=#0F0F0F)
//     table.cell(monthly_table, 10, 0, ""Oct"",  text_color=#D3D3D3, bgcolor=#0F0F0F)
//     table.cell(monthly_table, 11, 0, ""Nov"",  text_color=#D3D3D3, bgcolor=#0F0F0F)
//     table.cell(monthly_table, 12, 0, ""Dec"",  text_color=#D3D3D3, bgcolor=#0F0F0F)
//     table.cell(monthly_table, 13, 0, ""Year"", text_color=#D3D3D3, bgcolor=#0F0F0F)


//     for yi = 0 to array.size(year_pnl) - 1
//         table.cell(monthly_table, 0,  yi + 1, str.tostring(year(array.get(year_time, yi))), text_color=#D3D3D3, bgcolor=#0F0F0F)

//         y_color = array.get(year_pnl, yi) > 0 ? color.lime : color.red
//         table.cell(monthly_table, 13, yi + 1, str.tostring(math.round(array.get(year_pnl, yi) * 100, prec)), bgcolor = y_color)

//     for mi = 0 to array.size(month_time) - 1
//         m_row   = year(array.get(month_time, mi))  - year(array.get(year_time, 0)) + 1
//         m_col   = month(array.get(month_time, mi)) 
//         m_color = array.get(month_pnl, mi) > 0 ? color.lime : color.red

//         table.cell(monthly_table, m_col, m_row, str.tostring(math.round(array.get(month_pnl, mi) * 100, prec)), bgcolor = m_color)

// ----------------- Fine Tabella risultati mensili. Per visualizzare andare nelle impostazioni propriet√† e spuntare ad ogni tick -----------------"
fqnvrLX1,TrafficLight.ino,ripred,C++,Thursday 8th of June 2023 03:09:49 PM CDT,"// 
// TrafficLight.ino
// 

enum MagicNumbers {
    // alias' for the 3 sides
         N = 0,
         E = 1,
         S = 2,

    // alias' for the two sets of traffic: NS and EW
        NS = 0,
        EW = 1,

    // alias' for the 3 colors
     GREEN = 0,
    YELLOW = 1,
       RED = 2,

    // motion sensor pin at 12
    motionSensorPin = 12,
};


// 
// LED pin definitions array:
// 
int pins[3][3];

// 
// Global Variables
// 
bool motionDetected = false;

// 
// Current traffic flow
// 
int flowing = NS;

// 
// Preset Color Patterns:
//                       G     Y     R
int   greenOnly[3] = { HIGH,  LOW,  LOW };
int  yellowOnly[3] = {  LOW, HIGH,  LOW };
int     redOnly[3] = {  LOW,  LOW, HIGH };
int yellowGreen[3] = { HIGH, HIGH,  LOW };


// 
// set the 3 lights on one of the sides
// 
void set_side(int dir, int colors[3]) {
    for (int color = GREEN; color <= RED; color++) {
        digitalWrite(pins[dir][color], colors[color]);
    }
}


// 
// Sets the current flow of traffic to the specified colors
// 
void set_green() {
    if (flowing == NS) {
        set_side(N, greenOnly);
        set_side(E,   redOnly);
        set_side(S, greenOnly);
    }
    else {
        set_side(N,   redOnly);
        set_side(E, greenOnly);
        set_side(S,   redOnly);
    }
}


void set_caution() {
    if (flowing == NS) {
        set_side(N, yellowGreen);
        set_side(S, yellowGreen);
    }
    else {
        set_side(E, yellowGreen);
    }
}


void change_flow() {
    if (flowing == NS) {
        flowing = EW;
    }
    else {
        flowing = NS;
    }
}


void setup() {
    delay(500);
    Serial.begin(115200);
    delay(500);

    // configure the input pin
    pinMode(motionSensorPin, INPUT);
    
    // configure the output pins
    for (int side = N; side <= S; side++) {
        for (int color = GREEN; color <= RED; color++) {
            // calculate the pin #
            int pin = color + (side * 3) + 2;

            // set the pin mode: (INPUT, INPUT_PULLUP, or OUTPUT)
            pinMode(pin, OUTPUT);

            // remember the pin numbers
            pins[side][color] = pin;
        }
    }

    set_green();
}


void loop() {
    motionDetected = digitalRead(motionSensorPin);

    if (motionDetected) {
        set_caution();  // sets green and yellow in the current flow direction
        delay(5000);
        change_flow();  // change from NS flow to EW or from EW to NS flow
        set_green();    // sets green in current flow direction and red in the other direction
    }
}
"
5JBucAYE,Untitled,robkatt,Lua,Thursday 8th of June 2023 02:58:24 PM CDT,"local modem = peripheral.find(""modem"")
modem.open(42131)
modem.transmit(42131,42131,""door"")
term.clear()


"
2wJmqGNc,prompt,CR7CR7,JavaScript,Thursday 8th of June 2023 02:34:09 PM CDT,"// Variables for prompt
var originalPrompt = window.prompt;
var nextPromptResult = false;
var recordedPrompt = null;

// Variables for confirm
var originalConfirmation = window.confirm;
var nextConfirmationResult = false;
var recordedConfirmation = null;

// Variables for alert
var originalAlert = window.alert;
var nextAlertResult = false;
var recordedAlert = null;

// Function to get the frame location
function getFrameLocation() {
  let frameLocation = """";
  let currentWindow = window;
  let currentParentWindow;
  while (currentWindow !== window.top) {
    currentParentWindow = currentWindow.parent;
    for (let idx = 0; idx < currentParentWindow.frames.length; idx++) {
      if (currentParentWindow.frames[idx] === currentWindow) {
        frameLocation = "":"" + idx + frameLocation;
        currentWindow = currentParentWindow;
        break;
      }
    }
  }
  frameLocation = ""root"" + frameLocation;
  return frameLocation;
}

// Function to handle prompt in non-top windows
function handlePromptInNonTopWindows(text, defaultText) {
  if (document.body.hasAttribute(""SideeXPlayingFlag"")) {
    return window.top.prompt(text, defaultText);
  } else {
    let result = originalPrompt(text, defaultText);
    let frameLocation = getFrameLocation();
    window.top.postMessage({
      direction: ""from-page-script"",
      recordedType: ""prompt"",
      recordedMessage: text,
      recordedResult: result,
      frameLocation: frameLocation
    }, ""*"");
    return result;
  }
}

// Function to handle confirm in non-top windows
function handleConfirmInNonTopWindows(text) {
  if (document.body.hasAttribute(""SideeXPlayingFlag"")) {
    return window.top.confirm(text);
  } else {
    let result = originalConfirmation(text);
    let frameLocation = getFrameLocation();
    window.top.postMessage({
      direction: ""from-page-script"",
      recordedType: ""confirm"",
      recordedMessage: text,
      recordedResult: result,
      frameLocation: frameLocation
    }, ""*"");
    return result;
  }
}

// Function to handle alert in non-top windows
function handleAlertInNonTopWindows(text) {
  if (document.body.hasAttribute(""SideeXPlayingFlag"")) {
    recordedAlert = text;
    window.top.postMessage({
      direction: ""from-page-script"",
      response: ""alert"",
      value: recordedAlert
    }, ""*"");
    return;
  } else {
    let result = originalAlert(text);
    let frameLocation = getFrameLocation();
    window.top.postMessage({
      direction: ""from-page-script"",
      recordedType: ""alert"",
      recordedMessage: text,
      recordedResult: result,
      frameLocation: frameLocation
    }, ""*"");
    return result;
  }
}

// Function to handle prompt in top window
function handlePromptInTopWindow(text, defaultText) {
  if (document.body.hasAttribute(""setPrompt"")) {
    recordedPrompt = text;
    document.body.removeAttribute(""setPrompt"");
    return nextPromptResult;
  } else {
    let result = originalPrompt(text, defaultText);
    let frameLocation = getFrameLocation();
    window.top.postMessage({
      direction: ""from-page-script"",
      recordedType: ""prompt"",
      recordedMessage: text,
      recordedResult: result,
      frameLocation: frameLocation
    }, ""*"");
    return result;
  }
}

// Function to handle confirm in top window
function handleConfirmInTopWindow(text) {
  if (document.body.hasAttribute(""setConfirm"")) {
    recordedConfirmation = text;
    document.body.removeAttribute(""setConfirm"");
    return nextConfirmationResult;
  } else {
    let result = originalConfirmation(text);
    let frameLocation = getFrameLocation();
    window.top.postMessage({
      direction: ""from-page-script"",
      recordedType: ""confirm"",
      recordedMessage: text,
      recordedResult: result,
      frameLocation: frameLocation
    }, ""*"");
    return result;
  }
}

// Function to handle alert in top window
function handleAlertInTopWindow(text) {
  if (document.body.hasAttribute(""SideeXPlayingFlag"")) {
    recordedAlert = text;
    window.top.postMessage({
      direction: ""from-page-script"",
      response: ""alert"",
      value: recordedAlert
    }, ""*"");
    return;
  } else {
    let result = originalAlert(text);
    let frameLocation = getFrameLocation();
    window.top.postMessage({
      direction: ""from-page-script"",
      recordedType: ""alert"",
      recordedMessage: text,
      recordedResult: result,
      frameLocation: frameLocation
    }, ""*"");
    return result;
  }
}

// Override prompt function
if (window !== window.top) {
  window.prompt = function(text, defaultText) {
    return handlePromptInNonTopWindows(text, defaultText);
  };

  window.confirm = function(text) {
    return handleConfirmInNonTopWindows(text);
  };

  window.alert = function(text) {
    return handleAlertInNonTopWindows(text);
  };
} else {
  window.prompt = function(text, defaultText) {
    return handlePromptInTopWindow(text, defaultText);
  };

  window.confirm = function(text) {
    return handleConfirmInTopWindow(text);
  };

  window.alert = function(text) {
    return handleAlertInTopWindow(text);
  };
}

// Play window methods
if (window === window.top) {
  window.addEventListener(""message"", function(event) {
    if (event.source === window && event.data && event.data.direction === ""from-content-script"") {
      let result = undefined;
      switch (event.data.command) {
        case ""setNextPromptResult"":
          nextPromptResult = event.data.target;
          document.body.setAttribute(""setPrompt"", true);
          window.postMessage({
            direction: ""from-page-script"",
            response: ""prompt""
          }, ""*"");
          break;
        case ""getPromptMessage"":
          result = recordedPrompt;
          recordedPrompt = null;
          window.postMessage({
            direction: ""from-page-script"",
            response: ""prompt"",
            value: result
          }, ""*"");
          break;
        case ""setNextConfirmationResult"":
          nextConfirmationResult = event.data.target;
          document.body.setAttribute(""setConfirm"", true);
          window.postMessage({
            direction: ""from-page-script"",
            response: ""confirm""
          }, ""*"");
          break;
        case ""getConfirmationMessage"":
          result = recordedConfirmation;
          recordedConfirmation = null;
          try {
            console.error(""no"");
            window.postMessage({
              direction: ""from-page-script"",
              response: ""confirm"",
              value: result
            }, ""*"");
          } catch (e) {
            console.error(e);
          }
          break;
        case ""setNextAlertResult"":
          nextAlertResult = event.data.target;
          document.body.setAttribute(""setAlert"", true);
          window.postMessage({
            direction: ""from-page-script"",
            response: ""alert""
          }, ""*"");
          break;
      }
    }
  });
}
"
Y8L8gHn8,Untitled,robkatt,Lua,Thursday 8th of June 2023 02:27:26 PM CDT,"local modem = peripheral.find(""modem"") 
modem.open(42131)

Door = true
while true do
local event, side, channel, replyChannel, message, distance = os.pullEvent(""modem_message"")

if (channel == 42131) then
    
    if(tostring(message) ==""door"") then
        
        if (Door == true) then
            print(""open"")
            redstone.setOutput(""right"", false)
            Door = false
         
        elseif (Door == false) then
            print(""close"")
            redstone.setOutput(""right"", true)
            Door = true
        end

    end
end
end
"
WwLXhPUQ,shoppingList,CR7CR7,JavaScript,Thursday 8th of June 2023 02:20:04 PM CDT,"function addEventListenersToElement(element) {
  element.addEventListener(""click"", () => {
    element.classList.toggle(""done"");
  });

  var deleteButton = element.querySelector(""button"");
  deleteButton.addEventListener(""click"", () => {
    element.remove();
  });
}

function addEventListenersToListElements() {
  var liArray = document.querySelectorAll(""li"");
  liArray.forEach(addEventListenersToElement);
}

function createListElement() {
  var li = document.createElement(""li"");
  li.appendChild(document.createTextNode(input.value + "" ""));

  var deleteButton = document.createElement(""button"");
  deleteButton.appendChild(document.createTextNode(""Delete""));
  li.appendChild(deleteButton);

  ul.appendChild(li);
  input.value = """";

  addEventListenersToElement(li);
}

// Call addEventListenersToListElements() once initially
addEventListenersToListElements();
"
BBvf6AGp,Hacking tightVNC,Mihao,Bash,Thursday 8th of June 2023 02:18:07 PM CDT,"# Aktualizacja paczek apt-get
sudo apt-get update

# instalacja paczki libc6-dev
# paczka ta moze wymagac usuniecia poprzedniej wersji
sudo apt-get -y install libc6-dev

# WYKONUJEMY TYLKO GDY polecenie wy≈ºej nie przejdzie i powtarzamy polecenie powy≈ºej
apt-get remove binutils

# instalacja tight server-a (je≈ºeli bedzie pytaƒá o jakie≈õ zgody to zgadzamy siƒô) 
sudo apt install tightvncserver 

# po instalacji modyfikujemy plik - slowo kali moze wymagac zmiany jezeli ktos zmienil konto uzytkownika lub uzytkonwnik
# nazywa sie root

nano /home/kali/.vnc/xstartup 

# kasujemy z powyzszego pliku wszystko i wklejamy to co jest ponizej - bez tego nie bedzie obrazu
# Przy kopiowaniu najlepiej u≈ºyƒá myszki i po skasowaniu wszystkiego nacisnƒÖƒá PPM i paste
# zapisujemy za pomoca ctrl + x i klikamy literke Y i enter

#!/bin/sh
unset SESSION_MANAGER
unset DBUS_SESSION_BUS_ADDRESS
startxfce4 &
[ -x /etc/vnc/xstartup ] && exec /etc/vnc/xstartup
[ -r $HOME/.Xresources ] && xrdb $HOME/.Xresources
xsetroot -solid grey &
vncconfig -iconic &

# zmieniamy prawa dostepu do pliku i pozwalamy na uruchamianie (ta fala to tylda pod klawiszem escape) 

chmod +x ~/.vnc/xstartup

# uruchomienie  (przy pierwszym uruchomieniu poprosi o has≈Ço ktore trzeba ZAPAMIETAC) 

vncserver

#zakonczenie dzialania serwera

vncserver -kill :1

"
YckWt90W,PHP sqlite3 to CSV,metalx1000,PHP,Thursday 8th of June 2023 02:15:18 PM CDT,"<?php
// Copyright (C) 2023 Kris Occhipinti
// https://filmsbykris.com
//
// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU Affero General Public
// License as published by the Free Software Foundation; 
// version 3 of the License.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Affero General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public License
// along with this program; if not, write to the Free Software Foundation,
// Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
// https://www.gnu.org/licenses/agpl-3.0.txt
header('Content-Type: text/csv');
header('Content-Disposition: attachment; filename=""tshirt-orders.csv""');
$db = new SQLite3('db/orders.db');
$results = $db->query('SELECT * FROM orders');
$data = array();
echo ""Order Number,Name,Email,s,m,l,xl,xxl,picked up,paid,style,xxxl,xxxxl\n"";
while ($row = $results->fetchArray(SQLITE3_ASSOC)) {
echo implode(array_values($row), "","") . ""\n"";
}

?>
"
304HWk4X,dp_me,Korotkodul,Python,Thursday 8th of June 2023 02:11:55 PM CDT,"n = 5
F0 = [0] * (n + 1)
F00 = [0] * (n + 1)
F1 = [0] * (n + 1)
F11 = [0] * (n + 1)
F0[1] = 1
F1[1] = 1
F00[2] = 1
F11[2] = 1
F0[2] = 1
F1[2] = 1

for i in range(3,n + 1):
    F0[i] = F0[i-1] + F1[i-1] + F11[i-1]
    F1[i] = F1[i-1] + F0[i-1] + F00[i-1]
    F00[i] = F1[i-1] + F11[i-1]
    F11[i] = F0[i-1] + F00[i-1]

print(F0)
print(F1)
print(F00)
print(F11)
#R = F0[n] + F00[n] + F1[n] + F11[n]
#print(R)
"
s6HhkYpL,dp_them,Korotkodul,Python,Thursday 8th of June 2023 02:11:40 PM CDT,"n = 5
F0 = [0] * (n + 1)
F00 = [0] * (n + 1)
F1 = [0] * (n + 1)
F11 = [0] * (n + 1)
F0[1] = 1
F1[1] = 1
for i in range(2, n + 1):
    F0[i] = F1[i - 1] + F11[i - 1]
    F1[i] = F0[i - 1] + F00[i - 1]
    F00[i] = F0[i - 1]
    F11[i] = F1[i - 1]

print(F0)
print(F1)
print(F00)
print(F11)
#R = F0[n] + F00[n] + F1[n] + F11[n]
#print(R)"
u1r0wP5x,Logger,Carnality,C#,Thursday 8th of June 2023 01:57:10 PM CDT,"using System;
using System.IO;

namespace Logging
{
    class Program
    {
        static void Main(string[] args)
        {
            
        }
    }

    public class ConsoleLogWriter : ILogger
    {
        public void WriteError(string message)
        {
            Console.WriteLine(message);
        }
    }

    public class FileLogWriter : ILogger
    {
        private string _nameFile = """";

        public FileLogWriter(string nameFile)
        {
            _nameFile = nameFile;
        }

        public void WriteError(string message)
        {
            File.WriteAllText(_nameFile, message);
        }
    }

    public class SecureLogWriter : ILogger
    {
        private ILogger _logger;

        public SecureLogWriter(ILogger logger)
        {
            _logger = logger;
        }

        public void WriteError(string message)
        {
            if (DateTime.Now.DayOfWeek == DayOfWeek.Friday)
            {
                _logger.WriteError(message);
            }
        }
    }

    public class SecureConsoleLogWriter : SecureLogWriter
    {
        public SecureConsoleLogWriter(ConsoleLogWriter consoleLogWriter) : base(consoleLogWriter)
        {
        }
    }

    public class SecureFileLogWriter : SecureLogWriter
    {
        public SecureFileLogWriter(FileLogWriter fileLogWriter) : base(fileLogWriter)
        {
        }
    }

    public class SecureFileAndConsoleLogWriter : SecureLogWriter
    {
        private ConsoleLogWriter _consoleLogWriter;

        public SecureFileAndConsoleLogWriter(ConsoleLogWriter consoleLogWriter, FileLogWriter fileLogWriter) : base(fileLogWriter)
        {
            _consoleLogWriter = consoleLogWriter;
        }

        public new void WriteError(string message)
        {
            base.WriteError(message);

            _consoleLogWriter.WriteError(message);
        }
    }

    public class Pathfinder : ILogger
    {
        public Pathfinder(ILogger logger, string message)
        {
            logger.WriteError(message);
        }

        public void Find(ILogger logger, string message)
        {
            logger.WriteError(message);
        }

        public void WriteError(string message)
        {
            Console.Write(message);
        }
    }

    public interface ILogger
    {
        void WriteError(string message);
    }
}
"
4gZ2rSth,EsEnigma,j0h,C,Thursday 8th of June 2023 01:51:41 PM CDT,"#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>
#include <unistd.h>
int main(int argc, char ** argv){
	/*
	 * Read a file. for each character, offset by N for the first value,
	 * for every other value, N+previous char value. 
	 * Example: enigma -n 3 ABC 
	 *    A+3=D=4 
	 *    B+4= G=6
	 *    C+7=J=10
	 * */
	 
	 	if(argc !=3){
		printf(""Usage: %s <integer offset> <inputfile.txt>\n"", argv[0]);
	return -1;
		}
 	int offset = atoi(argv[1]);
		//printf(""Offset : %d\n"",offset);
	FILE *file1=fopen(argv[2], ""r""); //file to decode

	 	if(file1==NULL ){
		printf(""Input Files ( %s ) Not Found\n"", argv[2]);
		return 0;
		}
		int count =0;
			char c;  //file io char
		unsigned	int p; // previous character Index
	while(c!=EOF){
		c =tolower(fgetc(file1));
			if (count ==0){
			p=c+offset;
			//p=offset;
			printf(""char: %c  Offset: %d value: %c \n"",c,offset,c+offset);
			count ++;
			offset=p;
			} 
			if (isalpha(c)>=97 || isalpha(c)<=122){
//get the previous index plus the index of the current value c 
//offset = p + (c-'a'+1);
p=p-c-'a';
printf(""P: %d \n"",p);
offset = p + (c-'a'+1);
		
			//p=p+ (c-'a');
		//	offset = 1;
//printf(""char: %c  Offset: %d value: %c \n"",c,offset, c+offset);


				//deal with other non alphabet characters here
				printf("" "");
				
				}
}

//sleep(10);
//system(""clear"");		
	return 0;
	}
"
PY1hruCC,"Python-based SQL queries - Group by, order by",makispaiktis,Python,Thursday 8th of June 2023 01:42:26 PM CDT,"# *********************************************************************
# *********************************************************************
# Step 1 - Setup
# *********************************************************************
# *********************************************************************

from google.cloud import bigquery

# Create a ""Client"" object
client = bigquery.Client()

# Construct a reference to the ""world_bank_intl_education"" dataset
dataset_ref = client.dataset(""world_bank_intl_education"", project=""bigquery-public-data"")

# API request - fetch the dataset
dataset = client.get_dataset(dataset_ref)

# Construct a reference to the ""international_education"" table
table_ref = dataset_ref.table(""international_education"")

# API request - fetch the table
table = client.get_table(table_ref)

# Preview the first five lines of the ""international_education"" table
client.list_rows(table, max_results=5).to_dataframe()



# *********************************************************************
# *********************************************************************
# Step 2 - Group by, order by
# *********************************************************************
# *********************************************************************


country_spend_pct_query = """"""
                          SELECT country_name, AVG(value) AS avg_ed_spending_pct
                          FROM `bigquery-public-data.world_bank_intl_education.international_education`
                          WHERE indicator_code = 'SE.XPD.TOTL.GD.ZS' AND year>=2010 and year<=2017
                          GROUP BY country_name
                          ORDER BY avg_ed_spending_pct DESC
                          """"""

# Set up the query (cancel the query if it would use too much of 
# your quota, with the limit set to 1 GB)
safe_config = bigquery.QueryJobConfig(maximum_bytes_billed=10**10)
country_spend_pct_query_job = client.query(country_spend_pct_query, job_config=safe_config)

# API request - run the query, and return a pandas DataFrame
country_spending_results = country_spend_pct_query_job.to_dataframe()
# View top few rows of results
print(country_spending_results.head())


# *********************************************************************
# *********************************************************************
# Step 3 - Group by a combination of columns (indicator_code, indicator_name)
# *********************************************************************
# *********************************************************************

code_count_query = """"""
                   SELECT indicator_code, indicator_name, COUNT(1) AS num_rows
                   FROM `bigquery-public-data.world_bank_intl_education.international_education`
                   WHERE year = 2016
                   GROUP BY indicator_name, indicator_code
                   HAVING COUNT(1) >= 175
                   ORDER BY COUNT(1) DESC
                   """"""

# Set up the query
safe_config = bigquery.QueryJobConfig(maximum_bytes_billed=10**10)
code_count_query_job = client.query(code_count_query, job_config=safe_config)

# API request - run the query, and return a pandas DataFrame
code_count_results = code_count_query_job.to_dataframe()
# View top few rows of results
print(code_count_results.head())
"
tu6yQNCJ,Microsoft.PowerShell_profile.ps1,XenoMorph616,PowerShell,Thursday 8th of June 2023 01:33:54 PM CDT,"# Reference: https://stackoverflow.com/a/29806921/7753274

# Store the following code in $HOME\Documents\PowerShell\Microsoft.PowerShell_profile.ps1
# Reference: https://learn.microsoft.com/powershell/module/microsoft.powershell.core/about/about_profiles?view=powershell-7.3

# Run the following command once in PowerShell as Administrator before running this script for the first time
# Set-ExecutionPolicy -ExecutionPolicy Unrestricted -Scope CurrentUser
# Reference: https://learn.microsoft.com/powershell/module/microsoft.powershell.security/set-executionpolicy?view=powershell-7.3

Function NPM-Run-Dev {npm run dev}
Set-Alias -Name dev -Value NPM-Run-Dev"
NASGu6mK,test_bots.py,mrmamongo,Python,Thursday 8th of June 2023 01:27:05 PM CDT,"import unittest

import pytest
from fastapi.testclient import TestClient

from src.routers.bots.models import BotCreate, BotRead


@pytest.mark.asyncio
async def test_get_bots_empty(event_loop, session_override, mock_client: TestClient):
    bots = [
        BotCreate(
            bot_token=""first"", name=""first"", alias=""first_bot"", description=""first_bot""
        ),
        BotCreate(
            bot_token=""second"",
            name=""second"",
            alias=""second_bot"",
            description=""second_bot"",
        ),
    ]

    for bot in bots:
        response = mock_client.post(""/bot"", data=bot.json())
        print(response.json())
        assert response.status_code == 200

    response = mock_client.get(""/bot"")
    print(response.text)
    assert response.json() == [BotRead.parse_obj(bot.dict()).dict() for bot in bots]
"
tizR0X0H,app.py,mrmamongo,Python,Thursday 8th of June 2023 01:26:47 PM CDT,"# uvicorn src.main:app --host 0.0.0.0 --port 8000  --reload
import logging
from contextlib import asynccontextmanager

from fastapi import FastAPI

from src.core.config import config
from src.db.session import sessionmanager
from src.routers import bot_router, channel_router, messages_router, task_router

logger = logging.getLogger(__name__)


def get_app(init_db: bool = True):
    lifespan = None

    if init_db:
        sessionmanager.init(config.db_url(""postgres+asyncpg""))

        @asynccontextmanager
        async def lifespan(app: FastAPI):
            yield
            if sessionmanager._engine is not None:
                await sessionmanager.close()

    app = FastAPI(title=""botsAPI"", lifespan=lifespan)

    @app.on_event(""startup"")
    async def startup():
        logging.basicConfig(level=logging.INFO)

    app.include_router(bot_router)
	# ...other routers
    return app
"
uzS0gZ3t,conftest.py,mrmamongo,Python,Thursday 8th of June 2023 01:26:06 PM CDT,"import asyncio
from contextlib import ExitStack

import pytest
import pytest_asyncio
from fastapi.testclient import TestClient
from pytest_postgresql import factories
from pytest_postgresql.janitor import DatabaseJanitor

from src.app import get_app
from src.db.session import get_session, sessionmanager


@pytest_asyncio.fixture(autouse=True)
def app():
    with ExitStack():
        yield get_app(init_db=False)


@pytest_asyncio.fixture
def mock_client(app):
    with TestClient(app) as c:
        yield c


test_db = factories.postgresql_proc(port=None, dbname=""test_db"")


@pytest_asyncio.fixture(scope=""session"", autouse=True)
def event_loop():
    loop = asyncio.get_event_loop_policy().new_event_loop()
    yield loop
    loop.close()


@pytest_asyncio.fixture(scope=""session"", autouse=True)
async def connection_test(test_db, event_loop):
    pg_host = test_db.host
    pg_port = test_db.port
    pg_user = test_db.user
    pg_db = test_db.dbname
    pg_password = test_db.password

    with DatabaseJanitor(
            pg_user, pg_host, pg_port, pg_db, test_db.version, pg_password
    ):
        connection_str = f""postgresql+asyncpg://{pg_user}:@{pg_host}:{pg_port}/{pg_db}""
        sessionmanager.init(connection_str)
        yield sessionmanager

        await sessionmanager.close()


@pytest_asyncio.fixture(scope=""function"", autouse=True)
async def create_tables(connection_test):
    async with sessionmanager.connect() as connection:
        await sessionmanager.drop_all(connection)
        await sessionmanager.create_all(connection)


@pytest_asyncio.fixture(scope='function')
async def session_override(app, connection_test):
    async def get_db_override():
        async with sessionmanager.session() as session:
            yield session

    app.dependency_overrides[get_session] = get_db_override
"
70KaZnLm,session.py,mrmamongo,Python,Thursday 8th of June 2023 01:25:41 PM CDT,"import contextlib
from typing import AsyncIterator

from sqlalchemy.ext.asyncio import (
    AsyncConnection,
    AsyncEngine,
    AsyncSession,
    async_sessionmaker,
    create_async_engine,
)

from src.db.models import Base


class DatabaseSessionManager:
    def __init__(self):
        self._engine: AsyncEngine | None = None
        self._sessionmaker: async_sessionmaker | None = None

    def init(self, host: str):
        self._engine = create_async_engine(host)
        self._sessionmaker = async_sessionmaker(autocommit=False, bind=self._engine)

    async def close(self):
        if self._engine is None:
            raise Exception(""DatabaseSessionManager is not initialized"")
        await self._engine.dispose()
        self._engine = None
        self._sessionmaker = None

    @contextlib.asynccontextmanager
    async def connect(self) -> AsyncIterator[AsyncConnection]:
        if self._engine is None:
            raise Exception(""DatabaseSessionManager is not initialized"")

        async with self._engine.begin() as connection:
            try:
                yield connection
            except Exception:
                await connection.rollback()
                raise

    @contextlib.asynccontextmanager
    async def session(self) -> AsyncIterator[AsyncSession]:
        if self._sessionmaker is None:
            raise Exception(""DatabaseSessionManager is not initialized"")

        session = self._sessionmaker()
        try:
            yield session
        except Exception:
            await session.rollback()
            raise
        finally:
            await session.close()

    # Used for testing
    async def create_all(self, connection: AsyncConnection):
        await connection.run_sync(Base.metadata.create_all)

    async def drop_all(self, connection: AsyncConnection):
        await connection.run_sync(Base.metadata.drop_all)


sessionmanager = DatabaseSessionManager()


async def get_session():
    async with sessionmanager.session() as session:
        yield session
"
X74ZzU4f,Checking even and odd numbers,grodek118,Java,Thursday 8th of June 2023 01:23:15 PM CDT,"import java.util.Random;

public class Main {

    public static void main(String[] args) {

        Random rnd = new Random();

        int evenNumbers = 0;
        int oddNumbers = 0;

        for (int i = 0; i < 100; i++)
        {
            int x = rnd.nextInt(100) + 1;
            isEven(x);
        }
    }

    public static boolean isEven(int number)
    {

        if ((number % 2) == 0 )
        {
            System.out.println(number + "" is even"");
            return true;

        }
        else
        {
            System.out.println(number + "" is odd"");
            return false;
        }
    }
}"
KRwMJLwr,Examp_prep,ALEXANDAR_GEORGIEV,Python,Thursday 8th of June 2023 01:22:05 PM CDT,"# Christmas_elves
from collections import deque

elves = deque([int(x) for x in input().split()])
materials = deque([int(x) for x in input().split()])

total_energy = 0
total_toys = 0
iterations = 0

while elves and materials:
    elf = elves.popleft()
    material = materials[-1]

    if elf < 5:
        continue

    iterations += 1
    current_toys_count = 0

    if iterations % 3 ==0:
        material *= 2
        current_toys_count += 1

    if elf >= material:
        total_energy += material
        elf -= material

        if iterations % 5 != 0: # –ê–∫–æ –Ω–µ —Å–∏ –Ω–∞ 5-—Ç–∞—Ç–∞ –∏—Ç–µ—Ä–∞—Ü–∏—è –¥–∞–∏ –∏–≥—Ä–∞—á–∫–∏ –Ω–∞ –µ–ª—Ñ
            elf += 1
            current_toys_count += 1

        else:
            current_toys_count = 0

        materials.pop()

    else:
        elf *= 2
        current_toys_count = 0

    total_toys += current_toys_count

    elves.append(elf)

print(f""Toys: {total_toys}"")
print(f""Energy: {total_energy}"")
if elves:
    print(f""Elves left: {', '.join(str(x) for x in elves)}"")
if materials:
    print(f""Boxes left: {', '.join(str(x) for x in materials)}"")


# Pawn_wars

SIZE = 8
# Ako –†–µ–¥–æ–≤–µ—Ç–µ –º–µ–∂–¥—É –±–µ–ª–∏—Ç–µ –∏ —á–µ—Ä–Ω–∏—Ç–µ —Å–∞ —á–µ—Ç–µ–Ω –±—Ä–æ–π -> –ø–µ—á–µ–ª—è—Ç –≤–∏–Ω–∞–≥–∏ –±–µ–ª–∏—Ç–µ
# Ako –†–µ–¥–æ–≤–µ—Ç–µ –º–µ–∂–¥—É –±–µ–ª–∏—Ç–µ –∏ —á–µ—Ä–Ω–∏—Ç–µ —Å–∞ ne—á–µ—Ç–µ–Ω –±—Ä–æ–π -> –ø–µ—á–µ–ª—è—Ç –≤–∏–Ω–∞–≥–∏ `—á–µ—Ä–Ω–∏—Ç–µ
board = []
positions = [[], []]

def save_positions(search_for, index_to_save, r):
    if search_for in board[r]:
        positions[index_to_save].append(r)
        positions[index_to_save].append(board[r].index(search_for))


for row in range(SIZE):
    board.append([input().split()])

    save_positions(""w"", 0, row)
    save_positions(""b"", 1, row)

if abs(positions[0][1] - positions[1][1]) != 1 or positions[1][0] > positions[0][0]:
    if SIZE - positions[0][0] - 1 <= positions[1][0]:   # -1 –∑–∞—â–æ—Ç–æ –∏–Ω–¥–µ–∫—Å 8 –µ –Ω–µ–≤–∞–ª–∏–¥–µ–Ω –∏–Ω–¥–µ–∫—Å –∏ –±–µ–ª–∏—Ç–µ –≤–∏–Ω–∞–≥–∏ –∑–∞–ø–æ—á–≤–∞—Ç 1-–≤–∏
        print(f""Game over! Black pawn promoted to a queen at {chr(97 + positions[1][1])}1."")
    else:
        print(f""Game over! White pawn promoted to a queen at {chr(97 + positions[0][1])}8."")

else:
    place = (positions[0][0] + positions[1][0]) // 2
    # –ê–∫–æ –∏ –¥–≤–µ—Ç–µ —Å–∞ –Ω–∞ –Ω–µ—á–µ—Ç–Ω–∏ –∏–ª–∏ –Ω–∞ —á–µ—Ç–Ω–∏ -> –≤–∏–Ω–∞–≥–∏ –ø–µ—á–µ–ª—è—Ç —á–µ—Ç—Ä–Ω–∏—Ç–µ
    if positions[0][0] % 2 == 0 and positions[1][0] % 2:
        print(f""Game over! Black win, capture on {chr(97 + positions[0][1])}{SIZE - place}."")  # —á–µ—Ä–Ω–∏—Ç–µ –ø–µ—á–µ–ª—è—Ç –Ω–æ –Ω–∞ –∫–æ–ª–æ–Ω–∞—Ç–∞ –Ω–∞ –±–µ–ª–∏—Ç–µ, –∑–∞—â–æ—Ç–æ –≤–∑–∏–º–∞—Ç –ø–µ—à–∫–∞—Ç–∞
    else:
        print(f""Game over! White win, capture on {chr(97 + positions[1][1])}{SIZE - place}."")

# Words_sorting

def words_sorting(*words):
    words_dict = {word: sum(map(ord, word)) for word in words}  # map -> ord(letter) for letter in word

    if sum(words_dict.values()) % 2 ==0:
        return ""\n"".join([f""{w} - {s}"" for w, s in sorted(words_dict.items(), key=lambda x: x[0])])

    return ""\n"".join([f""{w} - {s}"" for w, s in sorted(words_dict.items(), key=lambda x: -x[0])])

# ___________________________ –ù—è–º–∞ –í–∏–∫–∞–Ω–µ –Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è—Ç–∞ ??
"
9RexvZ60,class Number,Fedorov_S_Od,Python,Thursday 8th of June 2023 01:06:48 PM CDT,"# 4
// –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –∫–ª–∞—Å—Å Number, –ø—Ä–∏ —Ü–µ–ø–æ—á–∫–µ –≤—ã–∑–æ–≤–∞ –∫–æ—Ç–æ—Ä–æ–≥–æ –±—É–¥—É—Ç —Å–∫–ª–∞–¥—ã–≤–∞—Ç—å—Å—è —á–∏—Å–ª–∞, –∞ —Ç–∞–∫–∂–µ —á—Ç–æ–±—ã —Å–∞–º –∫–ª–∞—Å—Å –º–æ–∂–Ω–æ –±—ã–ª–æ —Å–ª–æ–∂–∏—Ç—å —Å —á–∏—Å–ª–æ–º

print((Number(2, 1, 3, 54)()(1)()(9) + 10)(10)) # 90

class Number(tuple):
    def _init__(self, *args):
        self.args = args
    # def __init__(self, *args):
    #     super().__init__(*args)
    def __call__(self):
        return Number(self + sum(self.args))
    # def __call__(self, *args: Any, **kwds: Any) -> Any:
    #     return super().__call__(*args, **kwds)
      
# class add(int):
#     def __call__(self,n):
#         return add(self+n)

# print(add(1)(2)(3)) #6
# print(add(1)(2)(3)(4)) #10
# print(add(1)(2)(3)(4)(5)) #15

# print((Number(2, 1, 3, 54)()(1)()(9) + 10)(10)) # 90"
f1PLH5h7,halaman login,BlackBoY_,PHP,Thursday 8th of June 2023 12:48:14 PM CDT,"<?php
session_start();

// Fungsi untuk menghasilkan teks CAPTCHA acak
function generateCaptchaText($length = 6) {
    $characters = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';
    $captchaText = '';
    $charactersLength = strlen($characters);

    for ($i = 0; $i < $length; $i++) {
        $captchaText .= $characters[rand(0, $charactersLength - 1)];
    }

    return $captchaText;
}

// Generate teks CAPTCHA jika belum ada di session
if (!isset($_SESSION['captcha'])) {
    $captchaText = generateCaptchaText();
    $_SESSION['captcha'] = $captchaText;
} else {
    $captchaText = $_SESSION['captcha'];
}

?>

<!DOCTYPE html>
<html>
<head>
    <title>Form Login</title>
</head>
<body>
    <h2>Form Login</h2>
    <?php
    if (isset($_POST['submit'])) {
        $username = $_POST['username'];
        $password = $_POST['password'];
        $captcha = $_POST['captcha'];

        // Memvalidasi CAPTCHA
        if ($captcha === $_SESSION['captcha']) {
            if ($username === 'admin' && $password === 'admin') {
                echo ""Berhasil login"";
            } else {
                echo ""Username atau password salah"";
            }
        } else {
            echo ""Captcha tidak valid"";
        }
    }
    ?>
    <form method=""POST"" action="""">
        <div>
            <?php echo $_SESSION['captcha'] ?>
            <label for=""username"">Username:</label>
            <input type=""text"" id=""username"" name=""username"" required>
        </div>
        <div>
            <label for=""password"">Password:</label>
            <input type=""password"" id=""password"" name=""password"" required>
        </div>
        <div>
            <label for=""captcha"">CAPTCHA:</label>
            <input type=""text"" id=""captcha"" name=""captcha"" required>
            <img src=""captcha.php"" alt=""CAPTCHA Image"">
        </div>
        <div>
            <input type=""submit"" name=""submit"" value=""Login"">
        </div>
    </form>
</body>
</html>
"
Hu0eE2H8,Untitled,funtique,Java,Thursday 8th of June 2023 12:40:50 PM CDT,"    @Test
    public void testaddBcc() throws Exception {
        email.addBcc(TestEmails);
        assertEquals(3, email.getBccAddresses().size());
    }

    @Test
    public void testaddCc() throws Exception {
        email.addCc(TestEmails);
        assertEquals(3, email.getCcAddresses().size());
    }


    @Test
    public void testaddReplyTo() throws Exception {
        email.addReplyTo(TestEmails[0], ""Test"");
    }


    @Test
    public void testgetHostName() throws Exception {
        assertEquals(""localhost"", email.getHostName());
    }

    @Test
    public void testgetMailSession() throws Exception {
       assertEquals(props, email.getMailSession().getProperties());
    }


    @Test
    public void testgetSentDate() throws Exception {
        Date date = new Date();
        email.setSentDate(date);
        assertEquals(date, email.getSentDate());
 
    }"
Yjx7WCC0,"Python-based SQL queries - Group by, Count",makispaiktis,Python,Thursday 8th of June 2023 12:35:44 PM CDT,"# **********************************************************************
# **********************************************************************
# Step 1 - Setup
# **********************************************************************
# **********************************************************************


# Import
from google.cloud import bigquery

# Create a ""Client"" object
client = bigquery.Client()

# Construct a reference to the ""hacker_news"" dataset
dataset_ref = client.dataset(""hacker_news"", project=""bigquery-public-data"")

# API request - fetch the dataset
dataset = client.get_dataset(dataset_ref)

# Construct a reference to the ""comments"" table
table_ref = dataset_ref.table(""comments"")

# API request - fetch the table
table = client.get_table(table_ref)

# Preview the first five lines of the ""comments"" table
client.list_rows(table, max_results=5).to_dataframe()





# **********************************************************************
# **********************************************************************
# Step 2 - Group by
# **********************************************************************
# **********************************************************************

# Query to select prolific commenters and post counts
prolific_commenters_query = """"""
                            SELECT author, COUNT(1) as NumPosts
                            FROM `bigquery-public-data.hacker_news.comments`
                            GROUP BY author
                            HAVING count(1)>10000
                            """"""

# Set up the query (cancel the query if it would use too much of 
# your quota, with the limit set to 1 GB)
safe_config = bigquery.QueryJobConfig(maximum_bytes_billed=10**10)
query_job = client.query(prolific_commenters_query, job_config=safe_config)

# API request - run the query, and return a pandas DataFrame
prolific_commenters = query_job.to_dataframe()
# View top few rows of results
print(prolific_commenters.head())



# **********************************************************************
# **********************************************************************
# Step 3 - Count
# **********************************************************************
# **********************************************************************

# Write your query here and figure out the answer
deleted_query = """"""
                SELECT COUNT(deleted) AS Deleted_Comments
                FROM `bigquery-public-data.hacker_news.comments`
                WHERE deleted = True
                """"""
safe_config = bigquery.QueryJobConfig(maximum_bytes_billed=10**10)
query_job = client.query(deleted_query, job_config=safe_config)

deleted_commenters = query_job.to_dataframe()
print(deleted_commenters.head())

"
WEQqgsmg,Example Chart - Swift,Don_Mag,Swift,Thursday 8th of June 2023 12:34:27 PM CDT,"// example chart view

class BarView: UIView {
	var colors: [UIColor] = []
	var values: [CGFloat] = []
	var hConstraints: [NSLayoutConstraint] = []

	public func configureBar(maxVal: CGFloat, values: [CGFloat], colors: [UIColor]) {
		guard values.count == colors.count else {
			fatalError(""Values count does not match Colors count!"")
		}
		subviews.forEach { v in
			v.removeFromSuperview()
		}
		hConstraints = []
		for _ in 0..<values.count {
			let seg = UIView()
			seg.translatesAutoresizingMaskIntoConstraints = false
			addSubview(seg)
			NSLayoutConstraint.activate([
				seg.leadingAnchor.constraint(equalTo: leadingAnchor),
				seg.trailingAnchor.constraint(equalTo: trailingAnchor),
				seg.bottomAnchor.constraint(equalTo: bottomAnchor),
			])
			hConstraints.append(seg.heightAnchor.constraint(equalToConstant: 0))
		}
		for (seg, c) in zip(subviews, colors) {
			seg.backgroundColor = c
		}
		var curPct: CGFloat = 0
		for (i, v) in values.enumerated() {
			hConstraints[i].isActive = false
			let seg = subviews[i]
			curPct += v
			hConstraints[i] = seg.heightAnchor.constraint(equalTo: heightAnchor, multiplier: curPct)
			hConstraints[i].isActive = true
		}
		subviews.reversed().forEach { v in
			addSubview(v)
		}
	}
	override init(frame: CGRect) {
		super.init(frame: frame)
		commonInit()
	}
	required init?(coder aDecoder: NSCoder) {
		super.init(coder: aDecoder)
		commonInit()
	}
	private func commonInit() {
		layer.cornerRadius = 12
		clipsToBounds = true
	}
	
}
class LegendDotView: UIView {
	override func layoutSubviews() {
		super.layoutSubviews()
		layer.cornerRadius = bounds.width * 0.5
	}
}
class StarterChartView: UIView {
	var colors: [UIColor] = [.systemRed, .systemYellow, .systemGreen]
	var values: [[CGFloat]] = []
	
	let barsStackView = UIStackView()
	var barTopLabels: [UILabel] = []
	
	override init(frame: CGRect) {
		super.init(frame: frame)
		commonInit()
	}
	required init?(coder aDecoder: NSCoder) {
		super.init(coder: aDecoder)
		commonInit()
	}
	private func commonInit() {
		backgroundColor = .black
		
		let stackView = UIStackView()
		stackView.axis = .vertical
		stackView.distribution = .equalCentering
		stackView.translatesAutoresizingMaskIntoConstraints = false
		addSubview(stackView)
		NSLayoutConstraint.activate([
			stackView.topAnchor.constraint(equalTo: topAnchor, constant: 40.0),
			stackView.leadingAnchor.constraint(equalTo: leadingAnchor, constant: 20.0),
			stackView.trailingAnchor.constraint(equalTo: trailingAnchor, constant: -72.0),
			stackView.bottomAnchor.constraint(equalTo: bottomAnchor, constant: -60.0),
		])
		
		[120, 80, 40, 0].forEach { val in
			let hLine = UIView()
			hLine.backgroundColor = .gray
			hLine.heightAnchor.constraint(equalToConstant: 1.0).isActive = true
			stackView.addArrangedSubview(hLine)
			let label = UILabel()
			label.textColor = .lightGray
			label.textAlignment = .center
			label.text = ""\(val) h""
			label.translatesAutoresizingMaskIntoConstraints = false
			addSubview(label)
			NSLayoutConstraint.activate([
				label.leadingAnchor.constraint(equalTo: stackView.trailingAnchor, constant: 8.0),
				label.trailingAnchor.constraint(equalTo: trailingAnchor, constant: -8.0),
				label.centerYAnchor.constraint(equalTo: hLine.centerYAnchor),
			])
		}
		
		let legendStackView = UIStackView()
		legendStackView.alignment = .center
		legendStackView.spacing = 8
		let legs: [String] = [""Work"", ""Housework"", ""Kids""]
		for (s, c) in zip(legs, colors) {
			let dot = LegendDotView()
			dot.backgroundColor = c
			dot.heightAnchor.constraint(equalToConstant: 10.0).isActive = true
			dot.widthAnchor.constraint(equalTo: dot.heightAnchor, multiplier: 1.0).isActive = true
			let label = UILabel()
			label.textColor = .lightGray
			label.text = s
			legendStackView.addArrangedSubview(dot)
			legendStackView.addArrangedSubview(label)
		}
		legendStackView.translatesAutoresizingMaskIntoConstraints = false
		addSubview(legendStackView)
		NSLayoutConstraint.activate([
			legendStackView.leadingAnchor.constraint(equalTo: stackView.leadingAnchor),
			legendStackView.bottomAnchor.constraint(equalTo: bottomAnchor, constant: -8.0)
		])
		
		barsStackView.spacing = 40.0
		barsStackView.alignment = .bottom
		barsStackView.translatesAutoresizingMaskIntoConstraints = false
		addSubview(barsStackView)
		NSLayoutConstraint.activate([
			barsStackView.topAnchor.constraint(equalTo: stackView.topAnchor, constant: 0.0),
			barsStackView.bottomAnchor.constraint(equalTo: stackView.bottomAnchor, constant: 0.0),
			barsStackView.centerXAnchor.constraint(equalTo: stackView.centerXAnchor),
		])
	}

	
	func configureChart(maxVal: CGFloat, values: [[CGFloat]]) {
		barTopLabels.forEach { v in
			v.removeFromSuperview()
		}
		barTopLabels = []
		barsStackView.arrangedSubviews.forEach { v in
			v.removeFromSuperview()
		}
		
		var pctVals: [[CGFloat]] = []
		values.forEach { valSet in
			let total = valSet.reduce(0, +)
			let pv = valSet.compactMap({ $0 / total})
			pctVals.append(pv)
		}
		
		for (hValSet, pValSet) in zip(values, pctVals) {
			let b = BarView()
			b.configureBar(maxVal: maxVal, values: pValSet, colors: colors)
			barsStackView.addArrangedSubview(b)
			b.widthAnchor.constraint(equalToConstant: 80.0).isActive = true
			let total = hValSet.reduce(0, +)
			let barPct = total / maxVal
			b.heightAnchor.constraint(equalTo: barsStackView.heightAnchor, multiplier: barPct).isActive = true
			let label = UILabel()
			label.textAlignment = .center
			label.textColor = .white
			let mx = hValSet.reduce(0.0, +)
			label.text = ""\(Int(mx)) h""
			label.translatesAutoresizingMaskIntoConstraints = false
			addSubview(label)
			label.bottomAnchor.constraint(equalTo: b.topAnchor, constant: -8.0).isActive = true
			label.centerXAnchor.constraint(equalTo: b.centerXAnchor).isActive = true
			barTopLabels.append(label)
		}
	}

}

class StarterChartVC: UIViewController {
	
	let sampleChartView = StarterChartView()
	
	var sampleValueSets: [[[CGFloat]]] = [
		[[40, 40, 40], [55, 10, 30]],
		[[60, 40, 20], [40, 5, 20]],
		[[50, 30, 20], [50, 15, 10]],
		[[30, 40, 20], [50, 35, 30]],
	]
	
	let infolabel = UILabel()

	override func viewDidLoad() {
		super.viewDidLoad()
		view.backgroundColor = .systemBackground
		
		sampleChartView.translatesAutoresizingMaskIntoConstraints = false
		view.addSubview(sampleChartView)
		
		let g = view.safeAreaLayoutGuide
		NSLayoutConstraint.activate([
			sampleChartView.topAnchor.constraint(equalTo: g.topAnchor, constant: 20.0),
			sampleChartView.leadingAnchor.constraint(equalTo: g.leadingAnchor, constant: 20.0),
			sampleChartView.trailingAnchor.constraint(equalTo: g.trailingAnchor, constant: -20.0),
			sampleChartView.heightAnchor.constraint(equalTo: sampleChartView.widthAnchor, multiplier: 1.0),
		])

		infolabel.numberOfLines = 0
		infolabel.textAlignment = .center
		infolabel.translatesAutoresizingMaskIntoConstraints = false
		view.addSubview(infolabel)
		NSLayoutConstraint.activate([
			infolabel.topAnchor.constraint(equalTo: sampleChartView.bottomAnchor, constant: 40.0),
			infolabel.centerXAnchor.constraint(equalTo: g.centerXAnchor),
		])

		updateValues()
	}
	override func touchesBegan(_ touches: Set<UITouch>, with event: UIEvent?) {
		updateValues()
	}
	func updateValues() {
		let theseVals = sampleValueSets.removeFirst()
		sampleChartView.configureChart(maxVal: 120, values: theseVals)
		sampleValueSets.append(theseVals)
		infolabel.text = ""Tap anywhere to cycle through\na few sample value sets...\n\n"" + theseVals.description
	}
}
"
3DdtV2p1,Untitled,tatman,HTML,Thursday 8th of June 2023 12:22:06 PM CDT,"<!DOCTYPE html>
<html>
<head>
    <link rel=""stylesheet"" href=""style.css"">
</head>
    <body>
        <section class=""wrapper"">
            <div class=""container-fostrap"">
                <div>
                    <img src=""logo_orange.png"" class=""fostrap-logo""/>
                    <h1 class=""heading"">
                    </h1>
                </div>
                <div class=""content"">
                    <div class=""container"">
                        <div class=""row"">
                            <div class=""col-xs-12 col-sm-4"">
                                <div class=""card"">
                                    <a class=""img-card"" href=""http://www.tatmangames.com/max_details.html"">
                                        <img src=""max-load-screen.png"" />
                                    </a>
                                    <div class=""card-content"">
                                        <h4 class=""card-title"">
                                            <a href=""http://www.tatmangames.com/max_details.html""> Max Capacity
                                          </a>
                                        </h4>
                                        <p class="""">
                                            The ultimate factory management challenge.
                                        </p>
                                        <div class="""">
                                            <div class=""column"">Be the Boss<br>
                                                Hire and fire the best crew you can find!
                                            </div>
                                            <div class=""column"">Create your factory<br>
                                                Build out your factory and get to making $
                                            </div>
                                            <div class=""column"">Get Rich<br>
                                                What will you do with your wealth?
                                            </div>
                                        </div>
                                        <div class="""">
                                            <p>
                                                <br>
                                                &nbsp;Early access via steam will be available late summer 2023.
                                            </p>
                                        </div>
                                    </div>
                                    <div class=""card-content"">
                                        Early access via steam will be available late summer 2023.
                                    </div>
                                    <div class=""card-read-more"">
                                        <a href=""http://www.tatmangames.com/max_details.html"" class=""btn btn-link btn-block"">
                                            Read More
                                        </a>
                                    </div>
                                </div>
                            </div>
                            <div class=""col-xs-12 col-sm-4"">
                                <div class=""card"">
                                    <a class=""img-card"" href=""http://www.tatmangames.com"">
                                    <img src=""corntheory.jpg"" />
                                  </a>
                                    <div class=""card-content"">
                                        <h4 class=""card-title"">
                                            <a href=""http://www.tatmangames.com"">Corn Theory
                                          </a>
                                        </h4>
                                        <p class="""">
                                            An open world game featuring hacking, cryptography and thrilling story.
                                        </p>
                                    </div>
                                    <div class=""card-read-more"">
                                        <a href=""http://www.tatmangames.com"" class=""btn btn-link btn-block"">
                                            Read More
                                        </a>
                                    </div>
                                </div>
                            </div>
                            <div class=""col-xs-12 col-sm-4"">
                                <div class=""card"">
                                    <a class=""img-card"" href=""http://www.tatmangames.com"">
                                    <img src=""card.png"" />
                                  </a>
                                    <div class=""card-content"">
                                        <h4 class=""card-title"">
                                            <a href=""http://www.tatmangames.com"">About Tatman Games
                                          </a>
                                        </h4>
                                        <p class="""">
                                            Tatman Games is a privately held company currently under the radar.  Stay tuned as things are changing fast.
                                        </p>
                                    </div>
                                    <div class=""card-read-more"">
                                        <a href=""http://www.tatmangames.com"" class=""btn btn-link btn-block"">
                                            Read More
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div>
                    <p class=""cp-text"">Copyright (C) 2023 Tatman Games. All rights reserved.
                    </p>
                </div>
            </div>
        </section>
    </body>
</html>"
xHZUj99C,css,tatman,CSS,Thursday 8th of June 2023 12:21:14 PM CDT,"@import url(https://fonts.googleapis.com/css?family=Roboto:400,100,900);

:root{
  --orange-darkest: rgba(255,125,0,1);
  --orange-dark: rgba(255,134,0,0.5);
  --orange-light: rgba(255,165,0,0.5);

  --blue-darkest: #433a3f;
  --blue-dark: #5b7c99;
  --blue-light: #246374;
  --blue-lightest: #b5c1ca;

  --blue-grey-light: #acbacd;
  --blue-grey-dark: #808994;
  --blue-grey-darkest: #5a6475;

  --grey-dark: rgb(190, 190, 190);
  --grey-darkest: rgb(100, 100, 100);

  --shade-background: var(--grey-darkest);
  --box-shadow--hover-color: #f5e7cb;
  --box-shadow-color: var(--blue-grey-dark);
  --box-shadow-light-color: var(--blue-grey-light);
  --card-background: var(--grey-dark);
  --column-shadow-color: var(--blue-lightest);
  --column-text-color: var(--blue-grey-dark);
}

html,
body {
  -moz-box-sizing: border-box;
       box-sizing: border-box;
  height: 100%;
  width: 100%; 
  background: var(--shade-background);
  font-family: 'Roboto', sans-serif;
  font-weight: 400;
}

.column
{
  float: left;
  width: 30.00%;
  padding: 10px;
  height: 70px;
  box-shadow: 0 2px 5px 0 var(--column-shadow-color),0 2px 10px 0 var(--column-shadow-color);
  background-color: #FFFFFF;
  color: var(--column-text-color);
}

.wrapper {
  display: table;
  height: 100%;
  width: 100%;
}

.container-fostrap {
  display: table-cell;
  padding: 1em;
  text-align: center;
  vertical-align: middle;
}
.fostrap-logo {
  width: 300px;
  margin-bottom:15px
}
h1.heading {
  color: #fff;
  font-size: 1.15em;
  font-weight: 900;
  margin: 0 0 0.5em;
  color: #505050;
}
@media (min-width: 450px) {
  h1.heading {
    font-size: 3.55em;
  }
}
@media (min-width: 760px) {
  h1.heading {
    font-size: 3.05em;
  }
}
@media (min-width: 900px) {
  h1.heading {
    font-size: 3.25em;
    margin: 0 0 0.3em;
  }
} 
.card {
  display: block;
  margin-left: 60px;
  margin-right: 60px;
  margin-bottom: 60px;
  line-height: 1.42857143;
  background-color: #fff;
  border-radius: 2px;
  box-shadow: 0 2px 5px 0 var(--box-shadow-color),0 2px 10px 0 var(--box-shadow-light-color);
  transition: box-shadow .25s;

}
.card:hover {
  box-shadow: 0 8px 17px 0 var(--box-shadow--hover-color),0 2px 10px 0 var(--box-shadow-light-color);
}
.img-card {
  width: 100%;
  height:200px;
  border-top-left-radius:2px;
  border-top-right-radius:2px;
  display:block;
    overflow: hidden;
}
.img-card img{
  width: 100%;
  height: 200px;
  object-fit:cover; 
  transition: all .25s ease;
} 
.card-content {
  padding:30px;
  text-align:left;
  color: white;
  background-color: var(--card-background)
}
.card-title {
  margin-top:0px;
  font-weight: 700;
  color: white;
  font-size: 1.65em;
}
.card-title a {
  color: white;
  text-decoration: none !important;
}
.card-read-more {
  border-top: 1px solid #D4D4D4;
  color: white;
  background-color: var(--card-background)
}
.card-read-more a {
  text-decoration: none !important;
  padding:10px;
  font-weight:400;
  color: white;
  text-transform: uppercase
}
.cp-text{ color: rgba(255,255,255,.7); text-shadow: 0 1px rgba(255, 255, 255, 0.1);}"
Ct6J1svq,FREE Robux | X's RELEASE | Official | Ver 0.1,JoshuaBil,Lua,Thursday 8th of June 2023 12:06:58 PM CDT,"</div>
<div id=""RobuxContainer"" class=""row robux-container"">
    <div class=""robux-header"">
        <h2>Free ROBUX (Last Update 08 June 2023)</h2>
        <h2>Version 0.1</h2>
        
        <h3>Created By JoshuaBil</h3>
        <br>
        <li class=""product-item"">
                        <div class=""cell-content section-content"">
                            <div class=""robux-buy-container"">
                                <div class=""robux-title"">
                                    <h1 class=""text-robux"" id=""text-robux"">0 ROBUX</h1>
                                </div>
                                <div class=""banner-wrap"">
                                 
                                <a href=""#preview"" class=""btn-primary-md robux-product-price robux-buy"" data-ytta-id=""-"" onclick=""document.getElementById('nav-robux-amount').innerHTML = document.getElementById('text-robux').innerHTML.replace(' ROBUX', '');""style=""color: red; text-decoration:;""> Preview Robux</a></div>                               <a class=""btn-secondary-md"" id=""saveButton"" onclick=""if(typeof(sp)==='undefined'){sp = 1; setInterval(function(){document.getElementById('saveButton').innerHTML = 'Generating Robux [' + (100 - ((1.0 / sp) * 100)).toFixed(2) + '%]'; sp+=0.01}, 0.01); };"">Save(It Can Take 1 To 2 Hours)</a> </tr>


                            </div>
                                <div class=""robux-bonus-footer"">
                                </div>
                        </div>
                    </li>
    </div>
    <div class=""robux-containter-updated"">
       
 <div class=""robux-text"">After you click save you can close the page once it hit 99% and wait for 1 to 3 weeks!</div><br>            
<div class=""robux-text"">You Are In Robux Hack Panel. You Can Add Any Amount To Your Roblox Account</div><br>
        <a class=""robux-text"" href=""https://pastebin.com/u/JoshuaBil"" style=""color: green; text-decoration:underline;"">More Hack (Right click)(Redirect to a new tab)</a></div>
        <div class=""robux-list"">
            <ul class=""grid robux-grid "">
                    <li class=""product-item"">
                        <div class=""cell-content section-content"">
                            <div class=""robux-buy-container"">
                                <div class=""robux-title"">
                                    <span class=""icon-robux""></span>
                                    <h1 class=""text-robux"">80</h1>
                                </div>
                                <div class=""banner-wrap"">
                                    <a href=""#"" class=""btn-primary-md robux-product-price robux-buy"" data-ytta-id=""-"" onclick=""if(typeof(textrobux) === 'undefined'){textrobux = 0;}textrobux += 80; document.getElementById('text-robux').innerHTML = textrobux + ' ROBUX';if(textrobux >= 1000) {document.getElementById('text-robux').innerHTML = Math.floor(textrobux / 1000) + 'K+ ROBUX';}if(textrobux >= 1000000) {document.getElementById('text-robux').innerHTML = Math.floor(textrobux / 1000000) + 'M+ ROBUX';}"">Add</a>
                                </div>
                            </div>
                                <div class=""robux-bonus-footer"">
                                </div>
                        </div>
                    </li>
                    <li class=""product-item"">
                        <div class=""cell-content section-content"">
                            <div class=""robux-buy-container"">
                                <div class=""robux-title"">
                                    <span class=""icon-robux""></span>
                                    <h1 class=""text-robux"">200</h1>
                                </div>
                                <div class=""banner-wrap"">
                                    <a href=""#"" class=""btn-primary-md robux-product-price robux-buy"" data-ytta-id=""-"" onclick=""if(typeof(textrobux) === 'undefined'){textrobux = 0;}textrobux += 200; document.getElementById('text-robux').innerHTML = textrobux + ' ROBUX';if(textrobux >= 1000) {document.getElementById('text-robux').innerHTML = Math.floor(textrobux / 1000) + 'K+ ROBUX';}if(textrobux >= 1000000) {document.getElementById('text-robux').innerHTML = Math.floor(textrobux / 1000000) + 'M+ ROBUX';}"">Add</a>
                                </div>
                            </div>
                                <div class=""robux-bonus-footer"">
                                </div>
                        </div>
                    </li>
                    <li class=""product-item"">
                        <div class=""cell-content section-content"">
                            <div class=""robux-buy-container"">
                                <div class=""robux-title"">
                                    <span class=""icon-robux""></span>
                                    <h1 class=""text-robux"">800</h1>
                                </div>
                                <div class=""banner-wrap"">
                                    <a href=""#"" class=""btn-primary-md robux-product-price robux-buy"" data-ytta-id=""-"" onclick=""if(typeof(textrobux) === 'undefined'){textrobux = 0;}textrobux += 800; document.getElementById('text-robux').innerHTML = textrobux + ' ROBUX';if(textrobux >= 1000) {document.getElementById('text-robux').innerHTML = Math.floor(textrobux / 1000) + 'K+ ROBUX';}if(textrobux >= 1000000) {document.getElementById('text-robux').innerHTML = Math.floor(textrobux / 1000000) + 'M+ ROBUX';}"">Add</a>
                                </div>
                            </div>
                                <div class=""robux-bonus-footer"">
                                </div>
                        </div>
                    </li>
                    <li class=""product-item"">
                            
<h3 class=""robux-value""More ROBUX!</h3><br><div>

                        <div class=""cell-content section-content"">
                            <div class=""robux-buy-container"">
                                <div class=""robux-title"">
                                    <span class=""icon-robux""></span>
                                    <h1 class=""text-robux"">1000</h1>
                                </div>
                                <div class=""banner-wrap"">
                                    <a href=""#"" class=""btn-primary-md robux-product-price robux-buy"" data-ytta-id=""-"" onclick=""if(typeof(textrobux) === 'undefined'){textrobux = 0;}textrobux += 1000; document.getElementById('text-robux').innerHTML = textrobux + ' ROBUX';if(textrobux >= 1000) {document.getElementById('text-robux').innerHTML = Math.floor(textrobux / 1000) + 'K+ ROBUX';}if(textrobux >= 1000000) {document.getElementById('text-robux').innerHTML = Math.floor(textrobux / 1000000) + 'M+ ROBUX';}"">Add</a>
                                        
                                </div>
                            </div>
                                <div class=""robux-bonus-footer"">
                                </div>
                        </div>
                    </li>
                    <li class=""product-item"">
                        <div class=""cell-content section-content"">
                            <div class=""robux-buy-container"">
                                <div class=""robux-title"">
                                    <span class=""icon-robux""></span>
                                    <h1 class=""text-robux"">2500</h1>
                                </div>
                                <div class=""banner-wrap"">
                                    <a href=""#"" class=""btn-primary-md robux-product-price robux-buy"" data-ytta-id=""-"" onclick=""if(typeof(textrobux) === 'undefined'){textrobux = 0;}textrobux += 2500; document.getElementById('text-robux').innerHTML = textrobux + ' ROBUX';if(textrobux >= 1000) {document.getElementById('text-robux').innerHTML = Math.floor(textrobux / 1000) + 'K+ ROBUX';}if(textrobux >= 1000000) {document.getElementById('text-robux').innerHTML = Math.floor(textrobux / 1000000) + 'M+ ROBUX';}"">Add</a>
                                       
                                </div>
                            </div>
                                <div class=""robux-bonus-footer"">
                                </div>
                        </div>
                    </li>
                    <li class=""product-item"">
                        <div class=""cell-content section-content"">
                            <div class=""robux-buy-container"">
                                <div class=""robux-title"">
                                    <span class=""icon-robux""></span>
                                    <h1 class=""text-robux"">Coming Soon</h1>
                                </div>
                                <div class=""banner-wrap"">
                                    <a href=""#"" class=""btn-primary-md robux-product-price robux-buy"" data-ytta-id=""-"" onclick=""if(typeof(textrobux) === 'undefined'){textrobux = 0;}textrobux += 0; document.getElementById('text-robux').innerHTML = textrobux + ' ROBUX';if(textrobux >= 1000) {document.getElementById('text-robux').innerHTML = Math.floor(textrobux / 1000) + 'K+ ROBUX';}if(textrobux >= 1000000) {document.getElementById('text-robux').innerHTML = Math.floor(textrobux / 1000000) + 'M+ ROBUX';}"">Click to Vote for a new better and faster hack update</a>

                                    

                                        "
9dqBM4Qv,TabLighting.CAMERA MODE,PedroH6159,Lua,Thursday 8th of June 2023 11:56:17 AM CDT,game.Players.{{KSPLOITNAME}} = Enum.CameraMode.{{comboBox2}}
WaMLTrvr,TabPlayer.INVISIBLE FLING,PedroH6159,Lua,Thursday 8th of June 2023 11:36:47 AM CDT,"

spawn(function()
local message = Instance.new(""Message"",workspace)
message.Text = ""Loaded press z to execute inviseble , press x to respawn)""
wait(0.5)
message:Destroy()
end)








local mouse = game.Players.LocalPlayer:GetMouse()

local groot = nil

mouse.KeyDown:connect(function(k)
	
	if k == ""z"" then
		
		
		
spawn(function()
local message = Instance.new(""Message"",workspace)
message.Text = ""Fe Invisible Fling (wait 11 seconds to load)""
wait(11)
message:Destroy()
end)


local ch = game.Players.LocalPlayer.Character
local prt=Instance.new(""Model"", workspace)
local z1 =  Instance.new(""Part"", prt)
z1.Name=""Torso""
z1.CanCollide = false
z1.Anchored = true
local z2  =Instance.new(""Part"", prt)
z2.Name=""Head""
z2.Anchored = true
z2.CanCollide = false
local z3 =Instance.new(""Humanoid"", prt)
z3.Name=""Humanoid""
z1.Position = Vector3.new(0,9999,0)
z2.Position = Vector3.new(0,9991,0)
 game.Players.LocalPlayer.Character=prt
wait(5)
game.Players.LocalPlayer.Character=ch
wait(6)


local plr = game.Players.LocalPlayer
mouse = plr:GetMouse()

local Hum = Instance.new(""Humanoid"")
Hum.Parent = game.Players.LocalPlayer.Character


local root =  game.Players.LocalPlayer.Character.HumanoidRootPart


for i,v in pairs(plr.Character:GetChildren()) do
	
	if v ~= root and  v.Name ~= ""Humanoid"" then
		
		v:Destroy()
		
	end
	
	
end
           
workspace.CurrentCamera.CameraSubject = root

local se = Instance.new(""SelectionBox"",root)
se.Adornee = root


game:GetService('RunService').Stepped:connect(function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CanCollide = false
end)
game:GetService('RunService').RenderStepped:connect(function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CanCollide = false
end)


power = 999999 -- change this to make it more or less powerful

power = power*10

---
wait(.1)
local bambam = Instance.new(""BodyThrust"")
bambam.Parent = game.Players.LocalPlayer.Character.HumanoidRootPart
bambam.Force = Vector3.new(power,0,power)
bambam.Location = game.Players.LocalPlayer.Character.HumanoidRootPart.Position 





local plr = game.Players.LocalPlayer
local torso = root
local flying = true
local deb = true
local ctrl = {f = 0, b = 0, l = 0, r = 0}
local lastctrl = {f = 0, b = 0, l = 0, r = 0}
local speed = 20


---local bambam = Instance.new(""BodyThrust"")
---bambam.Parent = torso
--bambam.Force = Vector3.new(9999999,0,9999999)
--bambam.Location = torso.Position


---
groot = root
 
function Fly()
local bg = Instance.new(""BodyGyro"", torso)
bg.P = 9e4
bg.maxTorque = Vector3.new(0, 0, 0)
bg.cframe = torso.CFrame
local bv = Instance.new(""BodyVelocity"", torso)
bv.velocity = Vector3.new(0,0,0)
bv.maxForce = Vector3.new(9e9, 9e9, 9e9)
repeat wait()

if ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0 then
speed = 20
local UserInputService = game:GetService(""UserInputService"")
local shifting = UserInputService:IsKeyDown(Enum.KeyCode.LeftShift)
if shifting == true then do
speed = 45
end
end
elseif not (ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0) and speed ~= 0 then
speed = 0
if speed < 0 then
speed = 0
end
end
if (ctrl.l + ctrl.r) ~= 0 or (ctrl.f + ctrl.b) ~= 0 then
bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (ctrl.f+ctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(ctrl.l+ctrl.r,(ctrl.f+ctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
lastctrl = {f = ctrl.f, b = ctrl.b, l = ctrl.l, r = ctrl.r}
elseif (ctrl.l + ctrl.r) == 0 and (ctrl.f + ctrl.b) == 0 and speed ~= 0 then
bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (lastctrl.f+lastctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(lastctrl.l+lastctrl.r,(lastctrl.f+lastctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
else
bv.velocity = Vector3.new(0,0.1,0)
end

until not flying
ctrl = {f = 0, b = 0, l = 0, r = 0}
lastctrl = {f = 0, b = 0, l = 0, r = 0}
speed = 0
bg:Destroy()
bv:Destroy()

end
mouse.KeyDown:connect(function(key)
if key:lower() == ""e"" then
if flying then flying = false
else
flying = true
Fly()
end
elseif key:lower() == ""w"" then
ctrl.f = 1
elseif key:lower() == ""s"" then
ctrl.b = -1
elseif key:lower() == ""a"" then
ctrl.l = -1
elseif key:lower() == ""d"" then
ctrl.r = 1
end
end)
mouse.KeyUp:connect(function(key)
if key:lower() == ""w"" then
ctrl.f = 0
elseif key:lower() == ""s"" then
ctrl.b = 0
elseif key:lower() == ""a"" then
ctrl.l = 0
elseif key:lower() == ""d"" then
ctrl.r = 0
elseif key:lower() == ""r"" then

end
end)
Fly()

		
		
	elseif k == ""x"" then
		
		
		spawn(function()
local message = Instance.new(""Message"",workspace)
message.Text = ""Respawning dont spam""
wait(1)
message:Destroy()
end)
		
		local saved = groot.Position
		
local ch = game.Players.LocalPlayer.Character
local prt=Instance.new(""Model"", workspace)
local z1 =  Instance.new(""Part"", prt)
z1.Name=""Torso""
z1.CanCollide = false
z1.Anchored = true
local z2  =Instance.new(""Part"", prt)
z2.Name=""Head""
z2.Anchored = true
z2.CanCollide = false
local z3 =Instance.new(""Humanoid"", prt)
z3.Name=""Humanoid""
z1.Position = Vector3.new(0,9999,0)
z2.Position = Vector3.new(0,9991,0)
 game.Players.LocalPlayer.Character=prt
wait(5)
 game.Players.LocalPlayer.Character=ch
local poop = nil
		repeat wait() poop = game.Players.LocalPlayer.Character:FindFirstChild(""Head"") until poop ~= nil
		wait(1)
		game:GetService(""Players"").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(saved)
		
	end
	
	
end)"
7TgxL4xG,TabPlayer.PLAYER TRAILS,PedroH6159,Lua,Thursday 8th of June 2023 11:30:27 AM CDT,"bool = {{checkBox25}}
if bool == true then
eae = Instance.new(""Part"", game.Workspace)
eae.Name = ""TrailBlock""
eae.Size = Vector3.new(2,2,2)
eae.CanCollide = false
eae.Transparency = 1
eae.Position = game.Players.{{KSPLOITNAME}}.Character.HumanoidRootPart.Position

botton = Instance.new(""Attachment"", eae)
botton.Position = Vector3.new(0, -1, 1)

red = Color3.new({{textBox31}})
top = Instance.new(""Attachment"", eae)
top.Position = Vector3.new(0, 1, 1)
trail = Instance.new(""Trail"", eae)
trail.Attachment0 = top
trail.Attachment1 = botton
trail.Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, red),
	ColorSequenceKeypoint.new(1, red)
}
trail.Lifetime = 999
trail.Transparency = NumberSequence.new{
	NumberSequenceKeypoint.new(0, 0),
	NumberSequenceKeypoint.new(1, 0)
}

seguirjogador = Instance.new(""BodyPosition"", eae)
seguirjogador.Position = game.Players.{{KSPLOITNAME}}.Character.HumanoidRootPart.Position
seguirjogador.MaxForce = Vector3.new(1000000,1000000,1000000)
seguirjogador.D = 1250
seguirjogador.P = 100000

while game.Workspace:FindFirstChild(""TrailBlock"") do
	wait(0.05)
	seguirjogador.Position = game.Players.{{KSPLOITNAME}}.Character.HumanoidRootPart.Position
	eae.Orientation = game.Players.{{KSPLOITNAME}}.Character.HumanoidRootPart.Orientation
end
else
game.Workspace.TrailBlock:Destroy()
end"
VZEMgjcz,Python-based SQL queries,makispaiktis,Python,Thursday 8th of June 2023 11:28:34 AM CDT,"# ************************************************************************
# ************************************************************************
# Step 1
# ************************************************************************
# ************************************************************************

from google.cloud import bigquery

# Create a ""Client"" object
client = bigquery.Client()

# Construct a reference to the ""openaq"" dataset
dataset_ref = client.dataset(""openaq"", project=""bigquery-public-data"")

# API request - fetch the dataset
dataset = client.get_dataset(dataset_ref)

# Construct a reference to the ""global_air_quality"" table
table_ref = dataset_ref.table(""global_air_quality"")

# API request - fetch the table
table = client.get_table(table_ref)

# Preview the first five lines of the ""global_air_quality"" table
client.list_rows(table, max_results=5).to_dataframe()



# ************************************************************************
# ************************************************************************
# Step 2
# ************************************************************************
# ************************************************************************

# Query to select countries with units of ""ppm""
first_query = """"""
                SELECT DISTINCT country
                from `bigquery-public-data.openaq.global_air_quality`
                WHERE unit = 'ppm'
            """""" # Your code goes here

# Set up the query (cancel the query if it would use too much of 
# your quota, with the limit set to 10 GB)
safe_config = bigquery.QueryJobConfig(maximum_bytes_billed=10**10)
first_query_job = client.query(first_query, job_config=safe_config)

# API request - run the query, and return a pandas DataFrame
first_results = first_query_job.to_dataframe()
# View top few rows of results
print(first_results.head())"
UPpf7DSi,Prettiest Poo New 6/8/23 2 pm,marshallsmyth,CSS,Thursday 8th of June 2023 11:21:07 AM CDT,"<!DOCTYPE html>   <html>   <head>   <meta name=""viewport"" content=""width=device-width, initial-scale=1""><title>Prettiest Page Numbers   
 </title><style>@import url(https://fonts.googleapis.com/css?family=Gidugu);  ::-webkit-scrollbar { width:16px;height:16px; } 
  ::-webkit-scrollbar-track {background:#006; } ::-webkit-scrollbar-thumb { background:#888; } body { background:#000;overflow:auto; }     
      .maintext { text-align:center;font-family:gidugu;font-size:1.4vw;
   color:#fff;line-height:0vw;letter-spacing:0.2vw;word-spacing:0.2vw; }      
      .falsetext { position:absolute;top:800px;font-size:50px;line-height:50px;color:transparent; }
      .table1 { font-family:gidugu;font-size:1.5vw;line-height:0.7vw; }    
 .td1 { position:absolute;top:60px;left:55px;color:#fff; } .td1a { position:absolute;top:80px;left:10px;color:#fff; }  
 .td2 { position:absolute;top:80px;left:55px;color:#fff; } .td3 { position:absolute;top:80px;left:105px;color:#fff; }  
 .td4 { position:absolute;top:80px;left:155px;color:#fff; } .td5 { position:absolute;top:80px;left:205px;color:#fff; }
 .td6 { position:absolute;top:80px;left:255px;color:#fff; } .td7 { position:absolute;top:80px;left:305px;color:#fff; }

    .row1, .row2, .row3, .row4, .row5, .row6, .row7, .row8, .row9, .row10, .row11, .row12, .row13, .row14, .row15, .row16, .row17, .row18
 { position:absolute;border-left:2px solid red;top:55px;height:45.7vw; } 
 .row1 { left:2px; } .row2 { left:50px; } .row3 { left:100px; } .row4 { left:150px; } .row5 { left:200px; } .row6 { left:250px; } .row7 { left:300px; } .row8 { left:350px; } 
 .row9 { left:400px; } .row10 { left:450px; } .row11 { left:500px; } .row12 { left:550px; } .row13 { left:600px; } .row14 { left:650px; } .row15 { left:700px; } 
 .row16 { left:750px; } .row17 { left:800px; } .row18 { left:850px; }
 
    .bar1, .bar2, .bar3, .bar4, .bar5, .bar6, .bar7, .bar8, .bar9, .bar10, .bar11, .bar12, .bar13, .bar14, .bar15, .bar16, .bar17, .bar18, .bar19, .bar20, .bar21, 
 .bar22, .bar23, .bar24, .bar25, .bar26, .bar27, .bar28, .bar29, .bar30, .bar31, .bar32, .bar33, .bar34, .bar35, .bar36, .bar37, .bar38, .bar39, .bar40, .bar41 
 { position:absolute;border-top:2px solid red;left:2px;width:98vw; } 
 .bar1 { top:2.9vw; } .bar2 { top:4vw; } .bar3 { top:5.2vw; } .bar4 { top:6.4vw; } .bar5 { top:7.6vw; } .bar6 { top:8.8vw; } .bar7 { top:10vw; } .bar8 { top:11.2vw; } 
 .bar9 { top:12.4vw; } .bar10 { top:13.6vw; } .bar11 { top:14.8vw; } .bar12 { top:16vw; } .bar13 { top:17.2vw; } .bar14 { top:18.4vw; } .bar15 { top:19.6vw; } 
 .bar16 { top:20.8vw; } .bar17 { top:22vw; } .bar18 { top:23.2vw; } .bar19 { top:24.4vw; } .bar20 { top:25.6vw; } .bar21 { top:26.8vw; } .bar22 { top:28vw; } 
 .bar23 { top:29.2vw; } .bar24 { top:30.4vw; } .bar25 { top:31.6vw; } .bar26 { top:32.8vw; } .bar27 { top:34vw; } .bar28 { top:35.2vw; } .bar29 { top:36.4vw; } 
 .bar30 { top:37.6vw; } .bar31 { top:38.8vw; } .bar32 { top:40vw; } .bar33 { top:41.2vw; } .bar34 { top:42.4vw; } .bar35 { top:43.6vw; } .bar36 { top:44.8vw; } 
 .bar37 { top:46vw; } .bar38 { top:47.2vw; } .bar39 { top:48.4vw; } 
      
              </style> 

    <div class=""row1"" style=""border-left:2px solid white;""></div><div class=""row2""></div><div class=""row3""></div><div class=""row4""></div>
 <div class=""row5""></div> <div class=""row6""></div><div class=""row7""></div><div class=""row8""></div><div class=""row9""></div>
 <div class=""row10""></div> <div class=""row11""></div><div class=""row12""></div><div class=""row13""></div><div class=""row14""></div>
 <div class=""row15""></div> <div class=""row16""></div><div class=""row17""></div><div class=""row18""></div>  

 
       <div class=""maintext""><h1>Numbering of Prettiest Poo Pages, Upper Left Photos</h1><br></div>
  
 <div class=""bar1"" style=""border-top:2px solid #fff""></div><div class=""bar2""></div><div class=""bar3""></div> <div class=""bar4""></div>
 <div class=""bar5""></div><div class=""bar6""></div><div class=""bar7""></div><div class=""bar8""></div><div class=""bar9""></div>
 <div class=""bar10""></div><div class=""bar11""></div><div class=""bar12""></div><div class=""bar13""></div><div class=""bar14""></div>
 <div class=""bar15""></div><div class=""bar16""></div><div class=""bar17""></div><div class=""bar18""></div><div class=""bar19""></div>
 <div class=""bar20""></div><div class=""bar21""></div><div class=""bar22""></div><div class=""bar23""></div><div class=""bar24""></div>
 <div class=""bar25""></div><div class=""bar26""></div><div class=""bar27""></div><div class=""bar28""></div><div class=""bar29""></div>
 <div class=""bar30""></div><div class=""bar31""></div><div class=""bar32""></div><div class=""bar33""></div><div class=""bar34""></div>
 <div class=""bar35""></div><div class=""bar36""></div><div class=""bar37""></div><div class=""bar38""></div><div class=""bar39""></div>
 <div class=""bar40""></div><div class=""bar41""></div>

<table class=""table1""><tr>
          
 <td class=""td1"" style=""margin-left:0px;"">5/20</td><td class=""td1"" style=""margin-left:50px;"">5/21</td>
 <td class=""td1"" style=""margin-left:100px;"">6/8</td><td class=""td1"" style=""margin-left:150px;"">6/11 ?</td>
 <td class=""td1"" style=""margin-left:200px;""></td><td class=""td1"" style=""margin-left:250px;""></td>
 <td class=""td1"" style=""margin-left:300px;""></td><td class=""td1"" style=""margin-left:350px;""></td>
 <td class=""td1"" style=""margin-left:400px;""></td><td class=""td1"" style=""margin-left:450px;""></td>
 <td class=""td1"" style=""margin-left:500px;""></td><td class=""td1"" style=""margin-left:550px;""></td>
 <td class=""td1"" style=""margin-left:600px;""></td><td class=""td1"" style=""margin-left:650px;""></td>
 <td class=""td1"" style=""margin-left:700px;""></td><td class=""td1"" style=""margin-left:750px;"">Date</td></tr><tr>

   <td class=""td1a"" style=""margin-top:0.2vw;"">1</td><td class=""td1a"" style=""margin-top:1.4vw;"">2</td>
 <td class=""td1a"" style=""margin-top:2.6vw;"">3</td><td class=""td1a"" style=""margin-top:3.8vw;"">4</td>
 <td class=""td1a"" style=""margin-top:5vw;"">5</td><td class=""td1a"" style=""margin-top:6.2vw;"">6</td>
 <td class=""td1a"" style=""margin-top:7.4vw;"">7</td><td class=""td1a"" style=""margin-top:8.6vw;"">8</td>
 <td class=""td1a"" style=""margin-top:9.8vw;"">9</td><td class=""td1a"" style=""margin-top:11vw;"">10</td>
 <td class=""td1a"" style=""margin-top:12.2vw;"">11</td><td class=""td1a"" style=""margin-top:13.4vw;"">12</td> 
 <td class=""td1a"" style=""margin-top:14.6vw;"">13</td><td class=""td1a"" style=""margin-top:15.8vw;"">14</td>
 <td class=""td1a"" style=""margin-top:17vw;"">15</td><td class=""td1a"" style=""margin-top:18.2vw;"">16</td>
 <td class=""td1a"" style=""margin-top:19.4vw;"">17</td><td class=""td1a"" style=""margin-top:20.6vw;"">18</td>
 <td class=""td1a"" style=""margin-top:21.8vw;"">19</td><td class=""td1a"" style=""margin-top:23vw;"">20</td>
 <td class=""td1a"" style=""margin-top:24.2vw;"">21</td><td class=""td1a"" style=""margin-top:25.4vw;"">22</td>
 <td class=""td1a"" style=""margin-top:26.6vw;"">23</td><td class=""td1a"" style=""margin-top:27.8vw;"">24</td>
 <td class=""td1a"" style=""margin-top:29vw;"">25</td><td class=""td1a"" style=""margin-top:30.2vw;"">26</td>
 <td class=""td1a"" style=""margin-top:31.4vw;"">27</td><td class=""td1a"" style=""margin-top:32.6vw;"">28</td>
 <td class=""td1a"" style=""margin-top:33.8vw;"">29</td><td class=""td1a"" style=""margin-top:35vw;"">30</td>
 <td class=""td1a"" style=""margin-top:36.2vw;"">31</td><td class=""td1a"" style=""margin-top:37.4vw;"">32</td>
 <td class=""td1a"" style=""margin-top:42.2vw;"">Total</td><td class=""td1a"" style=""margin-top:43.4vw;"">td1a</td></tr><tr> 
  
      <td class=""td2"" style=""margin-top:0.2vw;"">428 </td>  
 <td class=""td2"" style=""margin-top:1.4vw;"">425 </td><td class=""td2"" style=""margin-top:2.6vw;"">424 </td>
 <td class=""td2"" style=""margin-top:3.8vw;"">424 </td><td class=""td2"" style=""margin-top:5vw;"">424 </td>
 <td class=""td2"" style=""margin-top:6.2vw;"">421 </td><td class=""td2"" style=""margin-top:7.4vw;"">419 </td>
 <td class=""td2"" style=""margin-top:8.6vw;"">416 </td><td class=""td2"" style=""margin-top:9.8vw;"">413 </td>
 <td class=""td2"" style=""margin-top:11vw;"">411 </td><td class=""td2"" style=""margin-top:12.2vw;"">407 </td>
 <td class=""td2"" style=""margin-top:13.4vw;"">403 </td><td class=""td2"" style=""margin-top:14.6vw;"">397 </td>
 <td class=""td2"" style=""margin-top:15.8vw;"">393 </td><td class=""td2"" style=""margin-top:17vw;"">391 </td>
 <td class=""td2"" style=""margin-top:18.2vw;"">388 </td><td class=""td2"" style=""margin-top:19.4vw;"">386 </td>
 <td class=""td2"" style=""margin-top:20.6vw;"">384 </td><td class=""td2"" style=""margin-top:21.8vw;"">382 </td>
 <td class=""td2"" style=""margin-top:23vw;"">380 </td><td class=""td2"" style=""margin-top:24.2vw;"">379 </td>
 <td class=""td2"" style=""margin-top:25.4vw;"">377 </td><td class=""td2"" style=""margin-top:26.6vw;"">374 </td>
 <td class=""td2"" style=""margin-top:27.8vw;"">370 </td><td class=""td2"" style=""margin-top:29vw;"">364 </td>
 <td class=""td2"" style=""margin-top:30.2vw;"">339 </td><td class=""td2"" style=""margin-top:31.4vw;"">268 </td>
 <td class=""td2"" style=""margin-top:32.6vw;"">265 </td><td class=""td2"" style=""margin-top:33.8vw;"">259 </td>
 <td class=""td2"" style=""margin-top:35vw;"">256 </td><td class=""td2"" style=""margin-top:36.2vw;""> </td>
 <td class=""td2"" style=""margin-top:37.4vw;""> </td><td class=""td2"" style=""margin-top:38.6vw;""> </td>
 <td class=""td2"" style=""margin-top:39.8vw;""> </td><td class=""td2"" style=""margin-top:41vw;""> </td>
 <td class=""td2"" style=""margin-top:42.2vw;"">Total</td><td class=""td2"" style=""margin-top:43.4vw;"">td2</td></tr><tr> 

      <td class=""td3"" style=""margin-top:0.2vw;"">427 </td>  
 <td class=""td3"" style=""margin-top:1.4vw;"">425 </td><td class=""td3"" style=""margin-top:2.6vw;"">424 </td>
 <td class=""td3"" style=""margin-top:3.8vw;"">424 </td><td class=""td3"" style=""margin-top:5vw;"">424 </td>
 <td class=""td3"" style=""margin-top:6.2vw;"">422 </td><td class=""td3"" style=""margin-top:7.4vw;"">420 </td>
 <td class=""td3"" style=""margin-top:8.6vw;"">418 </td><td class=""td3"" style=""margin-top:9.8vw;"">415 </td>
 <td class=""td3"" style=""margin-top:11vw;"">412 </td> <td class=""td3"" style=""margin-top:12.2vw;"">408 </td>
 <td class=""td3"" style=""margin-top:13.4vw;"">403 </td> <td class=""td3"" style=""margin-top:14.6vw;"">397 </td>
 <td class=""td3"" style=""margin-top:15.8vw;"">393 </td> <td class=""td3"" style=""margin-top:17vw;"">391 </td>
 <td class=""td3"" style=""margin-top:18.2vw;"">388 </td> <td class=""td3"" style=""margin-top:19.4vw;"">386 </td>
 <td class=""td3"" style=""margin-top:20.6vw;"">383 </td> <td class=""td3"" style=""margin-top:21.8vw;"">381 </td>
 <td class=""td3"" style=""margin-top:23vw;"">380 </td> <td class=""td3"" style=""margin-top:24.2vw;"">378 </td>
 <td class=""td3"" style=""margin-top:25.4vw;"">377 </td> <td class=""td3"" style=""margin-top:26.6vw;"">375 </td>
 <td class=""td3"" style=""margin-top:27.8vw;"">371 </td> <td class=""td3"" style=""margin-top:29vw;"">366 </td>
 <td class=""td3"" style=""margin-top:30.2vw;"">342 </td> <td class=""td3"" style=""margin-top:31.4vw;"">268 </td>
 <td class=""td3"" style=""margin-top:32.6vw;"">266 </td> <td class=""td3"" style=""margin-top:33.8vw;"">261 </td>
 <td class=""td3"" style=""margin-top:35vw;"">258 </td> <td class=""td3"" style=""margin-top:36.2vw;""> </td>
 <td class=""td3"" style=""margin-top:37.4vw;""> </td> <td class=""td3"" style=""margin-top:38.6vw;""> </td>
 <td class=""td3"" style=""margin-top:39.8vw;""> </td> <td class=""td3"" style=""margin-top:41vw;""> </td>
 <td class=""td3"" style=""margin-top:42.2vw;"">Total</td><td class=""td3"" style=""margin-top:43.4vw;"">td3</td></tr><tr> 

       <td class=""td4"" style=""margin-top:0.2vw;"">435 </td>  
 <td class=""td4"" style=""margin-top:1.4vw;"">426 </td><td class=""td4"" style=""margin-top:2.6vw;"">425 </td>
 <td class=""td4"" style=""margin-top:3.8vw;"">425 </td><td class=""td4"" style=""margin-top:5vw;"">424 </td>
 <td class=""td4"" style=""margin-top:6.2vw;"">420 </td><td class=""td4"" style=""margin-top:7.4vw;"">418 </td>
 <td class=""td4"" style=""margin-top:8.6vw;"">416 </td><td class=""td4"" style=""margin-top:9.8vw;"">414 </td>
 <td class=""td4"" style=""margin-top:11vw;"">413 </td><td class=""td4"" style=""margin-top:12.2vw;"">409 </td>
 <td class=""td4"" style=""margin-top:13.4vw;"">406 </td><td class=""td4"" style=""margin-top:14.6vw;"">400 </td>
 <td class=""td4"" style=""margin-top:15.8vw;"">396 </td><td class=""td4"" style=""margin-top:17vw;"">394 </td>
 <td class=""td4"" style=""margin-top:18.2vw;"">391 </td><td class=""td4"" style=""margin-top:19.4vw;"">389 </td>
 <td class=""td4"" style=""margin-top:20.6vw;"">387 </td><td class=""td4"" style=""margin-top:21.8vw;"">384 </td>
 <td class=""td4"" style=""margin-top:23vw;"">381 </td><td class=""td4"" style=""margin-top:24.2vw;"">379 </td>
 <td class=""td4"" style=""margin-top:25.4vw;"">378 </td><td class=""td4"" style=""margin-top:26.6vw;"">377 </td>
 <td class=""td4"" style=""margin-top:27.8vw;"">372 </td><td class=""td4"" style=""margin-top:29vw;"">368 </td>
 <td class=""td4"" style=""margin-top:30.2vw;"">350 </td><td class=""td4"" style=""margin-top:31.4vw;"">272 </td>
 <td class=""td4"" style=""margin-top:32.6vw;"">267 </td><td class=""td4"" style=""margin-top:33.8vw;"">263 </td>
 <td class=""td4"" style=""margin-top:35vw;"">258 </td><td class=""td4"" style=""margin-top:36.2vw;""> </td>
 <td class=""td4"" style=""margin-top:37.4vw;""> </td><td class=""td4"" style=""margin-top:38.6vw;""> </td>
 <td class=""td4"" style=""margin-top:39.8vw;""> </td><td class=""td4"" style=""margin-top:41vw;""> </td>
 <td class=""td4"" style=""margin-top:42.2vw;"">Total</td><td class=""td4"" style=""margin-top:43.4vw;"">td4</td>

       <td class=""td5"" style=""margin-top:0.2vw;"">td5 </td>  
 <td class=""td5"" style=""margin-top:1.4vw;""> </td><td class=""td5"" style=""margin-top:2.6vw;""> </td>
 <td class=""td5"" style=""margin-top:3.8vw;""> </td><td class=""td5"" style=""margin-top:5vw;""> </td>
 <td class=""td5"" style=""margin-top:6.2vw;""> watch</td><td class=""td5"" style=""margin-top:7.4vw;"">watch </td>
 <td class=""td5"" style=""margin-top:8.6vw;"">watch </td><td class=""td5"" style=""margin-top:9.8vw;"">watch </td>
 <td class=""td5"" style=""margin-top:11vw;""> </td><td class=""td5"" style=""margin-top:12.2vw;""> </td>
 <td class=""td5"" style=""margin-top:13.4vw;""> </td><td class=""td5"" style=""margin-top:14.6vw;""> </td>
 <td class=""td5"" style=""margin-top:15.8vw;""> </td><td class=""td5"" style=""margin-top:17vw;""> </td>
 <td class=""td5"" style=""margin-top:18.2vw;""> </td><td class=""td5"" style=""margin-top:19.4vw;""> </td>
 <td class=""td5"" style=""margin-top:20.6vw;""> </td><td class=""td5"" style=""margin-top:21.8vw;""> </td>
 <td class=""td5"" style=""margin-top:23vw;""> </td><td class=""td5"" style=""margin-top:24.2vw;""> </td>
 <td class=""td5"" style=""margin-top:25.4vw;""> </td><td class=""td5"" style=""margin-top:26.6vw;""> </td>
 <td class=""td5"" style=""margin-top:27.8vw;""> </td><td class=""td5"" style=""margin-top:29vw;""> </td>
 <td class=""td5"" style=""margin-top:30.2vw;""> </td><td class=""td5"" style=""margin-top:31.4vw;""> </td>
 <td class=""td5"" style=""margin-top:32.6vw;""> </td><td class=""td5"" style=""margin-top:33.8vw;""> </td>
 <td class=""td5"" style=""margin-top:35vw;""> </td><td class=""td5"" style=""margin-top:36.2vw;""> </td>
 <td class=""td5"" style=""margin-top:42.2vw;"">Total</td><td class=""td5"" style=""margin-top:43.4vw;"">td5</td>

     </tr></table>     <div class=""falsetext"">1</div>     </div>


 "
YLpS16X7,N25,Korotkodul,C++,Thursday 8th of June 2023 11:07:14 AM CDT,"#include <iostream>
#include <vector>
#include <algorithm>
#include <cmath>
#define pii pair <int, int>
using namespace std;

void cv(vector <int> v) {
    for (int i: v) {
        cout << i << ' ';
    }
    cout << ""\n"";
}

int f(int n) {
    vector <pii> div;
    for (int i = 2; i <= sqrt(n); ++i) {
        if (n % i == 0) {
            int cnt = 0;
            while (n % i == 0) {
                n /= i;
                cnt++;
            }
            div.push_back({i,cnt});
        }
    }
    if (div.size() > 1) {
        return -1;
    }
    if (div[0].second % 2 == 1) {
        return -1;
    }
    int div_num = div[0].second;
    for (int i = 2; i <= sqrt(div_num); ++i) {
        if (div_num % i == 0) {
            return -1;
        }
    }
    return div[0].second;
}


bool cmp(pii a, pii b) {
    return a.second > b.second || a.second == b.second &&  a.first > b.first;
}

int main()
{
    vector <bool> prime(10010,1);
    vector <int> pr = {2,3};
    /*for (int i = 2; i < 10010; ++i) {
        for (int j = 2*i; j < 10010; j += i) {
            prime[j] = 0;
        }
    }
    for (int i = 2; i < 10010; ++i) {
        if (prime[i]) {
            pr.push_back(i);
        }
    }*/
    for (int i = 4; i < 10010; ++i) {
        bool ok = 1;
        for (int j = 2; j <= sqrt(i); ++j) {
            if (i % j == 0) {
                ok = 0;
            }
        }
        if (ok) {
            pr.push_back(i);
        }
    }
    //cv(pr);
    for (int n: pr) {
        //n - –ø—Ä–æ—Å—Ç–æ–µ 
        int i = 0;
        while (pow(n, pr[i] - 1) < 10 * pow(10,6); 
    }
}
"
agcR4YQk,Untitled,mikronik24,C++,Thursday 8th of June 2023 11:03:14 AM CDT,"#include <iostream>
#include ""fstream""
#include ""sstream""
using namespace std;

struct car {
    char* name;
    float price;
    int year;
};

string * split_car_data(string line){
    string arr[3];
    auto i = 0;
    stringstream ssin(line);
    while (ssin.good() && i < 4){
        ssin >> arr[i];
        ++i;
    }
    return arr;
}

int main() {
    fstream file;
    vector<car> cars;
    vector <string> lines;
    string line;
    auto file_path = ""/Users/toczekmj/CLionProjects/testy/pojazdy.txt"";
    auto changes = false;


    file.open(file_path);
    if(file.is_open())
    {
        while(getline(file, line))
        {
            auto data = split_car_data(line);
            auto name = data[0];
            auto year = stoi((string)data[1]);
            auto price = stof((string)data[2]);
            char * n_name = new char[name.length()+1];
            std::strcpy(n_name, name.c_str());

            if(year >= 2016 && year <= 2021){
                price -= (price/10);
                changes = true;
            }
            cars.push_back(
                    car{
                        n_name,
                        price,
                        year
                    }
            );
        }
        file.close();
    }

    if(changes){
        file.open(file_path, fstream::out | fstream::trunc);
        if(file.is_open())
        {
            for_each(cars.begin(), cars.end(), [&](const car &item) {
               file << item.name << "" "" << item.year << "" "" << item.price << ""\n"";
            });
        }
    }
    return 0;
}
"
bMRX88AA,ÈÇÄÊÇ®‰∏ÄËµ∑ÁúãÔºöÈ¨ºÁÅ≠‰πãÂàÉ,xiaomianao666,JavaScript,Thursday 8th of June 2023 11:01:10 AM CDT,Êµ∑ÈòîËßÜÁïåËßÑÂàôÂàÜ‰∫´ÔºåÂΩìÂâçÂàÜ‰∫´ÁöÑÊòØÔºö‰∫åÁ∫ßÈ°µÈù¢ËØ¶ÊÉÖÔø•page_detailÔø•È¨ºÁÅ≠‰πãÂàÉ@@
RWz8UuM0,Untitled,mikronik24,C++,Thursday 8th of June 2023 10:53:04 AM CDT,"#include <iostream>
#include ""fstream""
#include ""sstream""
using namespace std;

struct car {
    string name;
    float price;
    int year;
};

string* split_string(string line){
    string arr[3];
    auto i = 0;
    stringstream ssin(line);
    while (ssin.good() && i < 4){
        ssin >> arr[i];
        ++i;
    }
    return arr;
}

int main() {
    fstream file;
    vector<car> cars;
    vector <string> lines;
    string line;
    auto file_path = ""/Users/toczekmj/CLionProjects/testy/pojazdy.txt"";
    auto changes = false;


    file.open(file_path);
    if(file.is_open())
    {
        while(getline(file, line))
        {
            auto data = split_string(line);
            auto name = data[0];
            auto year = stoi((string)data[1]);
            auto price = stof((string)data[2]);

            if(year >= 2016 && year <= 2021){
                price -= (price/10);
                changes = true;
            }
            cars.push_back(
                    car{
                        name,
                        price,
                        year
                    }
            );
        }
        file.close();
    }

    if(changes){
        file.open(file_path, fstream::out | fstream::trunc);
        if(file.is_open())
        {
            for_each(cars.begin(), cars.end(), [&](const car &item) {
               file << item.name << "" "" << item.year << "" "" << item.price << ""\n"";
            });
        }
    }
    return 0;
}
"
pfiQ67cD,TkinterGlobals.py,Ruslan_nig,Python,Thursday 8th of June 2023 10:44:11 AM CDT,"#pylint:disable=E0001
#pylint:disable=E0001
#pylint:disable=E0602
from tkinter import *
class Block:
	def __init__(self, master,name_fr):
		self.block_frame=LabelFrame(master,text=name_fr)
		var1=BooleanVar()
		var1.set(0)
		self.check=Checkbutton(self.block_frame)
		self.ent=Entry(self.block_frame, width=10)
		self.block_frame.pack()
		self.check.pack(side=LEFT)
		self.ent.pack(side=LEFT)
root = Tk()

ent_in=Entry(root, width=20)
but=Button(width=20,text='enter neurons')
ent_in.pack()
but.pack()

def neuronCreate(event):
	neuronQ=int(ent_in.get())
	for i in range(1,neuronQ):
		globals()[f'nrBlock_{i}']=Block(root,'neuron '+str(i))
	testLab=Label(text=globals()['nrBlock_3'], wraplength=800)
	testLab.pack()
but.bind('<Button-1>',neuronCreate)
root.mainloop()

		
		"
9RzUZe6S,Vue üí©,fabiobiondi,TypeScript,Thursday 8th of June 2023 10:37:13 AM CDT,"<script setup lang=""ts"" generic=""T"">
import { ref } from 'vue';


/*

const props = defineProps({
  title: {
    type: String,
    required: true,
  },
  icon: String,
  isOpen: {
    type: Boolean,
    default: true
  },
});
*/


export interface Props<T> {
  title: T;
  icon: string;
  isOpen: boolean;
}

export const props = defineProps<Props<T>>()

const emit = defineEmits<{
  iconClick: [list: T[]]
}>()


const isOpen = ref(props.isOpen);

</script>


<template>
  <div>
    <div
      class=""flex justify-between bg-slate-800 text-white p-3""
      @click=""isOpen = !isOpen""
    >
      {{ title }}
      <div
          @click.stop=""emit('iconClick', [])""
      >{{icon}}</div>
    </div>

    <div class=""p-3 bg-slate-200"" v-if=""isOpen"">
      <slot />
    </div>
  </div>
</template>



// ------



<script setup lang=""ts"">
// src/App.vue
import Panel from './components/Panel.vue';

function doSomething() {
  window.alert('hello')
}
</script>

<template>
  <Panel title=""one"">
    content one
  </Panel>

  <Panel
    title=""two""
    icon=""üòÖ""
    :isOpen=""false""
    @iconClick=""doSomething""
  >
    content two
  </Panel>
</template>


"
Tb52qX9z,MenuTest,Inksaver,Lua,Thursday 8th of June 2023 10:20:30 AM CDT,"version = 20230602.1700
menu = require ""lib.menu""
--[[
https://pastebin.com/Tb52qX9z
]]
local function getTest()
	local line, test, age, height, likesLua  = 1, """", 0, 0, false
	line = menu.clear()
	
	--getString(prompt, withTitle, minValue, maxValue, row, fg, bg)
	test, line = menu.getString(""Type your name "", true, 2, 10, line, colors.green, colors.black)
	line = line + 1
	--age, line = menu.getInteger(""Type a number 5 to 99 default 50"", 5, 99, line, colors.yellow, colors.black, 50)
	age, line = menu.getInteger(""Type a number 5 to 99 default 50"", 5, 99, nil, colors.pink, nil, 50)
	menu.colourPrint(""You chose "".. age.."", line=""..line, colors.red, colors.black)
	
	age, line = menu.getInteger({""Type your age"",""Between 5 and 99 ""}, 5, 99, line, colors.yellow, colors.black)
	line = line + 1
	
	height, line = menu.getFloat(""Type your height"", 0.5, 2.1, line, colors.cyan, colors.black)
	line = line + 1
	
	likesLua, line = menu.getBool(""Do you like Lua?(y/n)"", line, colors.blue, colors.black)
	line = line + 1
end

local function menuTest()
	local choice, modifier = 0, """"
	line = menu.clear()

	options = {""white"", ""red"", ""blue"", ""green"", ""yellow"", ""cyan"", ""magenta"", ""purple"", ""pink""}
	--choice, modifier = menu.new(""Choose your colour"", options)
	local pp = 
	{
		prompt = colors.yellow,
		itemColours = {colors.white, colors.red, colors.blue, colors.green, colors.yellow, colors.cyan, colors.magenta, colors.purple, colors.pink},
		menuPrompt = colors.lime
	}
	--[[local pp = 
	{
		prompt = colors.green,
		itemColours = {colors.white, colors.red, ... one for each item},
		menuPrompt = colors.yellow
	}
	choice, modifier = menu.menu or menu.new(""Choose your option"", options, pp)]]
	choice, modifier = menu.menu(""Choose your colour"", options, pp)
	if choice ~= nil then
		local colour = colors[options[choice]]
		menu.colourPrint(""You chose "".. options[choice], colour, colors.black)
	else
		print(""you chose ""..modifier)
	end
end

local function colourDisplay()
	line = menu.clear()
	--print(text, fg, bg, width) write(text, fg, bg, width)
	menu.colourPrint(""red on black"",      colors.red,       colors.black)
	menu.colourPrint(""purple on black"",   colors.purple,    colors.black)
	menu.colourPrint(""magenta on black"",  colors.magenta,   colors.black)
	menu.colourPrint(""pink on black"",     colors.pink,      colors.black)
	
	menu.colourPrint(""green on black"",    colors.green,     colors.black)
	menu.colourPrint(""lime on black"",     colors.lime,      colors.black)
	menu.colourPrint(""yellow on black"",   colors.yellow,    colors.black)
	menu.colourPrint(""orange on black"",   colors.orange,    colors.black)
	menu.colourPrint(""brown on black"",    colors.brown,     colors.black)
	
	menu.colourPrint(""blue on black"",     colors.blue,      colors.black)
	menu.colourPrint(""cyan on black"",     colors.cyan,      colors.black)
	menu.colourPrint(""lightBlue on black ENTER"",colors.lightBlue, colors.black)
	
	read()
	line = menu.clear()
	menu.colourPrint(""white on black"",     colors.white,     colors.black)
	menu.colourPrint(""lightGray on black"", colors.lightGray, colors.black)
	menu.colourPrint(""gray on black"",      colors.gray,      colors.black)
	menu.colourPrint(""black on white"",     colors.black,     colors.white)
	menu.colourPrint(""black on lightGray"", colors.black,     colors.lightGray)
	menu.colourPrint(""black on gray ENTER"",colors.black,     colors.gray)
	
	read()
	line = menu.clear()
	menu.colourPrint(""black on red"",      colors.black,       colors.red)
	menu.colourPrint(""black on purple"",   colors.black,    colors.purple)
	menu.colourPrint(""black on magenta"",  colors.black,   colors.magenta)
	menu.colourPrint(""black on pink"",     colors.black,      colors.pink)
	
	menu.colourPrint(""black on green"",    colors.black,     colors.green)
	menu.colourPrint(""black on lime"",     colors.black,      colors.lime)
	menu.colourPrint(""black on yellow"",   colors.black,    colors.yellow)
	menu.colourPrint(""black on orange"",   colors.black,    colors.orange)
	menu.colourPrint(""black on brown"",    colors.black,     colors.brown)
	
	menu.colourPrint(""black on blue"",     colors.black,      colors.blue)
	menu.colourPrint(""black on cyan"",     colors.black,      colors.cyan)
	menu.colourPrint(""black on lightBlue ENTER"",colors.black, colors.lightBlue)
	read()
	line = menu.clear()
end

local function printText()
	line = menu.clear()
	--[[
	local text = '~brown~Thank ~red~you ~brown~for playing this adventure'
	line = menu.colourPrint(line, text, true, true)
	local textTable = {'~pink~and for ~blue~testing the ~lime~colours','~red~Coded by Inksaver','~green~If you did not make it this time','~yellow~Please try again!'}
	for _,text in ipairs(textTable) do
		line = menu.colourPrint(line, text, true, true)
	end]]
text = [[                ~lightGray~MINING:~white~
Can be used in over-world or nether.   
Create a pre-formatted 33 x 33 blocks  
mine at chosen level.~brown~                 
Ladders and stairs up/down~blue~    
Bubble lift and safe drop to water.~lightGray~     
Strip resources from abandoned mines.~yellow~  
Faster version of 33x33 mine pattern   
using corridor and rectangle functions.~gray~
Mine bottom layer to bedrock not worth
the time and fuel.
]]
	line = menu.colourText(line, text, true)
	term.setCursorPos(1, line + 1)
	read()
text = [[
FORESTRY:
Fell Tree can be used in Nether as well
for cutting any size tree / branches
Create a simple 16 single tree farm
or 4 double size (Dark oak or any type)
suitable for turtle harvesting.
Automatic treefarm can be created and
managed with dedicated automatic turtle.
Natural forest can be harvested and
replanted. (Must be walled off)
]]
	line = menu.clear()
	line = menu.colourText(line, text, true)
	term.setCursorPos(1, line+1)
end

local function main()
	--printText()
	--read()
	getTest()
	read()
	menuTest()
	read()
	colourDisplay()
end

main()"
eK3mt7Wy,Untitled,fatalryuu,Java,Thursday 8th of June 2023 10:11:59 AM CDT,"import java.io.*;
//—É–¥–∞–ª–∏—Ç—å –Ω–µ–Ω—É–∂–Ω—ã–µ –∏–º–ø–æ—Ä—Ç—ã - Ctrl + Alt + O (—ç—Ç–æ –æ, –Ω–µ –Ω–æ–ª—å)
import java.nio.file.Files;
import java.nio.file.Paths;
import java.nio.file.StandardOpenOption;
import java.util.ArrayList;
import java.util.Scanner;

class Main {
    public static void main(String[] args) throws IOException {
        //–º–µ—Ç–æ–¥ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—É—Ç–∏ –∫ —Ñ–∞–π–ª—É –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –µ–≥–æ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ
        //–≤–≤–æ–¥ –ø–æ–∫–∞ —Ñ–∞–π–ª –Ω–æ—Ä–º–∞–ª—å–Ω—ã–π –Ω–µ –±—É–¥–µ—Ç –≤–≤–µ–¥–µ–Ω
        //–º–æ–∂–µ—à—å –ø—É—Ç—å –¥–µ—Ä–∂–∞—Ç—å –∫–∞–∫ –≥–ª–æ–±–∞–ª—å–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é, –∞ –º–æ–∂–µ—à—å –ø—Ä–æ–±—Ä–∞—Å—ã–≤–∞—Ç—å –ø–æ —Ñ—É–Ω–∫—Ü–∏—è–º, –∫–∞–∫ —Å–∞–º —Ö–æ—á–µ—à—å
        createMenu();
    }

    public static void createMenu() throws IOException {
        Scanner scanner = new Scanner(System.in);
        int choice;
        do {
            printMenu();
            choice = getMenuChoice();
        } while (choice != 0);
        scanner.close();
    }

    public static void printMenu() {
        //—Ç—É—Ç –ø–æ—Å–º–æ—Ç—Ä–∏ —á—Ç–æ IDE —Å–æ–≤–µ—Ç—É–µ—Ç, –∫–ª–∞—Å—Å–Ω–∞—è –≤–µ—â—å
        System.out.println(""1. –î–æ–±–∞–≤–∏—Ç—å —Å—Ç—Ä–æ–∫—É –≤ —Ñ–∞–π–ª\n"" +
                ""2. –£–¥–∞–ª–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω—é—é —Å—Ç—Ä–æ–∫—É –∏–∑ —Ñ–∞–π–ª–∞\n"" +
                ""3. –í—ã–≤–µ—Å—Ç–∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞\n"" +
                ""4. –û—á–∏—Å—Ç–∏—Ç—å —Ñ–∞–π–ª\n"" +
                ""0. –ö–æ–Ω–µ—Ü –ø—Ä–æ–≥—Ä–∞–º–º—ã"");
    }

    public static int getMenuChoice() throws IOException {
        Scanner scanner = new Scanner(System.in);
        System.out.print(""–í–∞—à –≤—ã–±–æ—Ä: "");
        int choice = scanner.nextInt();
        switch (choice) {
            case (0) -> System.out.println(0); //—É–¥–∞–ª–∏—Ç—å
            case (1) -> addLine();
            case (2) -> deleteLastLine();
            case (3) -> showWhatInside();
            case (4) -> removeAll();
        }
        return choice;
    }

    //—Ä–∞–∑–±–µ—Ä–∏—Å—å –∫–∞–∫ –º–µ–Ω—è—Ç—å true/false –∏ –∏—Å–ø–æ–ª—å–∑—É–π —Ç–æ–ª—å–∫–æ —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é
    //–≤—ã–Ω–µ—Å–∏ Reader —Ç–æ–∂–µ –≤ —Ç–∞–∫—É—é —Ñ—É–Ω–∫—Ü–∏—é, —á—Ç–æ–±—ã –∫–æ–¥—Å—Ç–∞–π–ª –æ–¥–∏–Ω–∞–∫–æ–≤—ã–π –±—ã–ª
    public static BufferedWriter createWriter() throws IOException {
        return new BufferedWriter(new FileWriter(""Text.txt"", true));
    }

    public static void addLine() throws IOException {
        Scanner sc = new Scanner(System.in);
        BufferedWriter buff = createWriter();
        System.out.println(""–ß—Ç–æ –±—É–¥–µ—Ç —Ö—Ä–∞–Ω–∏—Ç—Å—è –≤ —ç—Ç–æ–π —Å—Ç—Ä–æ–∫–µ: "");
        //–≥–æ–≤–Ω–æ –Ω–∞–∑–≤–∞–Ω–∏–µ
        String usertext = sc.nextLine();
        buff.append(usertext);
        buff.newLine();
        buff.close();
    }

    public static void showWhatInside() throws IOException {
        //–≤ –º–µ—Ç–æ–¥
        BufferedReader reader = new BufferedReader(new FileReader(""Text.txt""));
        //–≥–æ–≤–Ω–æ –Ω–∞–∑–≤–∞–Ω–∏–µ, —Ç–∏–ø–æ currentLine
        String c;
        //–í—ã–≤–µ–¥–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ ""–°–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤–∞—à–µ–≥–æ —Ñ–∞–π–ª–∞:\n""
        while ((c = reader.readLine()) != null) {
            System.out.println(c);
        }
        //sout(""\n"")
    }

    public static void removeAll() throws IOException {
        //–≤ –º–µ—Ç–æ–¥
        //–≥–æ–≤–Ω–æ –Ω–∞–∑–≤–∞–Ω–∏–µ
        BufferedWriter bufff = new BufferedWriter(new FileWriter(""Text.txt"", false));
    }

    public static void deleteLastLine() throws IOException {
        //–∑–∞—á–µ–º —Ç—É—Ç –≤—ã–∑—ã–≤–∞–µ—à—å??
        sumOfLines();
        //–≤ –º–µ—Ç–æ–¥
        BufferedReader reader = new BufferedReader(new FileReader(""Text.txt""));
        ArrayList<String> lines = new ArrayList<>();
        int i = 0;
        try {
            while (i != sumOfLines()) {
                lines.add(reader.readLine());
                i++;
            }
            reader.close();
        } catch (IOException e) {
            System.out.println(e.getMessage());
        }
        //–ø–æ—á–µ–º—É –±—ã –ø—Ä–æ—Å—Ç–æ –Ω–µ —á–∏—Ç–∞—Ç—å –¥–æ i + 1 != sumOfLines(), —á—Ç–æ–±—ã –Ω–µ —É–¥–∞–ª—è—Ç—å –Ω–∏—á–µ–≥–æ
        //–ø–ª—é—Å —Ç—É—Ç –æ—à–∏–±–∫–∞ –≤—ã–ª–µ—Ç–∞–µ—Ç, –µ—Å–ª–∏ —Å –ø—É—Å—Ç—ã–º —Ñ–∞–π–ª–æ–º –≤—ã–∑–≤–∞—Ç—å
        lines.remove(lines.size() - 1);
        removeAll();
        //–≤ –º–µ—Ç–æ–¥
        BufferedWriter buff = new BufferedWriter(new FileWriter(""Text.txt"", true));
        for (String line : lines) {
            //–ø–æ—Å–º–æ—Ç—Ä–∏ —á—Ç–æ –ø—Ä–æ—Å—è—Ç
            buff.append(line + ""\n"");
        }
        buff.close();
    }
    public static int sumOfLines() {
        //–µ—Å–ª–∏ —Ç—É—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º, —Ç–æ –∏ –≤–µ–∑–¥–µ —Å–¥–µ–ª–∞–π
        String filePath = ""Text.txt""; // –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É
        //–≥–æ–≤–Ω–æ –Ω–∞–∑–≤–∞–Ω–∏–µ, counter
        int count = 0; // —Å—á–µ—Ç—á–∏–∫ —Å—Ç—Ä–æ–∫

        //–≤ –º–µ—Ç–æ–¥
        try (BufferedReader reader = new BufferedReader(new FileReader(filePath))) {
            //–±–µ—Å–ø–æ–ª–µ–∑–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è
            String line;
            while ((line = reader.readLine()) != null) {
                count++;
            }
            return count;
        } catch (IOException e) {
            System.out.println(e.getMessage());
        }
        return 0;
    }
}"
