id,title,username,language,date,content
yPTMMyzY,Advanced AND - Donald AND Duck AND Hello,wheresTheAnyKey,C,Wednesday 21st of June 2023 06:54:16 AM CDT,"Pasted at: 21/06/2023 12:54
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND
hello, donald was a duck

5502491997132108

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH
"
gvhNRn3c,Financial What's Inside - Email/IP/Bank,wheresTheAnyKey,C,Wednesday 21st of June 2023 06:54:14 AM CDT,"Pasted at: 21/06/2023 12:54
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3
What's Inside Paste 

5378496492418234
5571598708435236
5587663820997281
5502491997132108
5516931903918995
5322909948799236
5443317136071703
5409137465238695
5497550044220575
5559606180091553

aaribaud@att.net
aaribaud@comcast.net
aaribaud@att.com
aaribaud@att.co.uk
aaribaud@yahoo.com

246.107.72.199
221.187.199.189
3.109.3.44
109.112.85.139
250.83.213.179
169.141.201.234
50.180.50.59
20.181.54.231
64.235.191.167
48.103.36.43"
yp9ZdUuf,Financial with SPECIAL CHARACTERS,wheresTheAnyKey,C,Wednesday 21st of June 2023 06:54:13 AM CDT,"Pasted at: 21/06/2023 12:54
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND

5148-2121-6312-7114   - DASHES
5148212163127114
5107-4578-0576-9075   - DASHES
5107457805769075
3488-1760-1454-729   - DASHES
348817601454729

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH"
3WdJqFxi,Domains with SPECIAL CHARS,wheresTheAnyKey,C,Wednesday 21st of June 2023 06:54:11 AM CDT,"Pasted at: 21/06/2023 12:54
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND

www.qatesting.com
blog.qatesting.com
www.qatesting.com/index.html
www.qatesting.com/home
www.qatestingblog.com
www.qatestingtutorials.com
shop.qatesting.co.uk
admin.qatesting.io 
qatesting
qatesting.co.uk
qatesting.cn
qatesting.io
findmetesting.com
www.qatesting-blog.com
www.qatesting-blog23.com
www.qatesting
www.qatesting.co.uk
www.qatesting.cn
www.qatesting.io
www.findmetesting.com
www.wobsut.gov

The difference is that QA is process oriented and QC is product oriented.

Testing, therefore is product oriented and thus is in the QC domain. Testing for quality isn't assuring quality, it's controlling it.



Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH
"
jSvzaCSb,ALL Keywords with Excluded Words,wheresTheAnyKey,C,Wednesday 21st of June 2023 06:54:10 AM CDT,"Pasted at: 21/06/2023 12:54
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND 

The dystopian version of superintelligence is illustrated with frequency by leaders in the technology industry, and is famously depicted by Hollywood in films like Terminator, 
or more recently Ex Machina, and even the Avengers. The “furious deity A.I.” is a story you know, because it is the story you are constantly told: we build the thinking machine, 
it surpasses our abilities in every way, and it destroys us for one of any number of reasons.Maybe it perceives us as a threat. Maybe we’re just in its way, 
and it hardly perceives us at all — mankind, a disposable insect race.

There are of course many arguments in opposition to the now ubiquitous concept of our apocalypse by artificial intelligence. 
I myself have called into question the logic of such dystopian arguments in Anatomy of Next. But our subject here is less pertaining to the nature of the conscious machine than 
it is to the way we talk about this subject, and what it means. First, consider that most of the artificial intelligence depicted in culture looks human, a representation with 
no basis in technological reality. Then, the true scope of the Singularity is almost impossible to predict, which begs a question: where are these opinions about the broadly 
unknowable coming from?"
2SMXQFii,All Keywords with ANY Additional Words,wheresTheAnyKey,C,Wednesday 21st of June 2023 06:54:08 AM CDT,"Pasted at: 21/06/2023 12:54
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND KEYWAUTO

The dystopian version of superintelligence is illustrated with frequency by leaders in the technology industry, and is famously depicted by Hollywood in films like Terminator, or more recently Ex Machina, and even the Avengers. The “angry god A.I.” is a story you know, because it is the story you are constantly told: we build the thinking machine, it surpasses our abilities in every way, and it destroys us for one of any number of reasons.
Maybe it perceives us as a threat. Maybe we’re just in its way, and it hardly perceives us at all — humanity, a disposable insect race.

There are of course many arguments in opposition to the now ubiquitous concept of our apocalypse by artificial intelligence. I myself have called into question the logic of such dystopian arguments in Anatomy of Next. But our subject here is less pertaining to the nature of the conscious machine than it is to the way we talk about this subject, and what it means. First, consider that most of the artificial intelligence depicted in culture looks human, a representation with no basis in technological reality. Then, the true scope of the Singularity is almost impossible to predict, which begs a question: where are these opinions about the broadly unknowable coming from?

6589745854123698

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH
"
ghHCgUbz,IP with SPECIAL CHARACTERS,wheresTheAnyKey,C,Wednesday 21st of June 2023 06:54:05 AM CDT,"Pasted at: 21/06/2023 12:54
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND

123.123.123.149
123.123.123.7
123.123.123.186
123.123.123.47
123.123.123.187
123.123.123.47
123.123.123.130
123.123.123.62
123.123.123.87
123.123.123.1
123.123.123.61
123.123.123.1
123.123.123.65
123.123.123.65
123.123.123.189
123.123.123.193
123.123.123.78
123.123.123.142
123.123.123.107
123.123.123.126
123.123.123.13
123.123.123.171
123.123.123.45
123.123.123.61
123.123.123.93
123.123.123.2
123.123.123.71
123.123.123.41
123.123.123.184
123.123.123.74
123.123.123.106
123.123.123.171
123.123.123.188
123.123.123.177
123.123.123.185
123.123.123.9
123.123.123.184
123.123.123.100
123.123.123.31
123.123.123.164
123.123.123.184
123.123.123.12
123.123.123.153
123.123.123.72
123.123.123.44
123.123.123.119
123.123.123.119
123.123.123.163
123.123.123.38
123.123.123.67
123.123.123.59
123.123.123.10
123.123.123.50
123.123.123.121
123.123.123.145
123.123.123.159
123.123.123.64
123.123.123.6
123.123.123.39
123.123.123.198
123.123.123.17
123.123.123.65
123.123.123.149
123.123.123.84
123.123.123.8
123.123.123.145
123.123.123.65
123.123.123.94
123.123.123.79
123.123.123.177
123.123.123.67
123.123.123.78
123.123.123.80
123.123.123.79
123.123.123.50
123.123.123.87
123.123.123.15
123.123.123.80
123.123.123.145
123.123.123.75
123.123.123.4
123.123.123.59
123.123.123.59
123.123.123.190
123.123.123.64
123.123.123.63
123.123.123.102
123.123.123.114
123.123.123.146
123.123.123.53
123.123.123.124
123.123.123.30
123.123.123.57
123.123.123.64
123.123.123.69
123.123.123.33
123.123.123.12
123.123.123.73
123.123.123.36
123.123.123.153
100.123.123.50
100.123.123.39
100.123.123.156
100.123.123.56
100.123.123.175
100.123.123.121
100.123.123.114
100.123.123.118
100.123.123.13
100.123.123.174
100.123.123.84
100.123.123.161
100.123.123.63
100.123.123.51
100.123.123.66
100.123.123.190
100.123.123.101
100.123.123.72
100.123.123.24
100.123.123.151
100.123.123.143
100.123.123.146
100.123.123.117
100.123.123.21
100.123.123.10
100.123.123.98
100.123.123.114
100.123.123.6
100.123.123.101
100.123.123.14
100.123.123.147
100.123.123.159
100.123.123.157
100.123.123.6
100.123.123.175
100.123.123.35
100.123.123.136
100.123.123.2
100.123.123.139
100.123.123.11
100.123.123.179
100.123.123.16
100.123.123.40
100.123.123.20
100.123.123.20
100.123.123.150
100.123.123.77
100.123.123.48
100.123.123.22
100.123.123.24
100.123.123.9
100.123.123.187
100.123.123.131
100.123.123.148
100.123.123.152
100.123.123.96
100.123.123.199
100.123.123.15
100.123.123.4
100.123.123.112
100.123.123.62
100.123.123.186
100.123.123.36
100.123.123.136
100.123.123.83
100.123.123.38
100.123.123.120
100.123.123.147
100.123.123.15
100.123.123.134
100.123.123.19
100.123.123.196
100.123.123.115
100.123.123.126
100.123.123.39
100.123.123.193
100.123.123.117
100.123.123.115
100.123.123.115
100.123.123.33
100.123.123.121
100.123.123.72
100.123.123.189
100.123.123.76
100.123.123.78
100.123.123.61
100.123.123.112
100.123.123.176
100.123.123.82
100.123.123.183
100.123.123.168
100.123.123.24
100.123.123.134
100.123.123.145
100.123.123.195
100.123.123.189
100.123.123.157
100.123.123.114
100.123.123.34
100.123.123.166

These are a list of generated IPs for test purPoses. They seRVe no purpose only to act as test data for testing activities.
You might findMEtesting 123.123.123.123 or findmetesting 100.123.123.76. These are my favourite ip addresses 123.123.123.23 100.123.123.23.
These are some random words networking, ipaddresses, studpidIPs


Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH"
jy2RxEqJ,Hashed Email With Exclude,wheresTheAnyKey,C,Wednesday 21st of June 2023 06:54:04 AM CDT,"Pasted at: 21/06/2023 12:54
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

wojciech@sktestcomcast.net
joglo@sktestmac.com
larry@sktesthotmail.com
aardo@sktestverizon.net
debest@sktestlive.com
carroll@sktestaol.com
arathi@sktestyahoo.ca
sthomas@sktestcomcast.net
leocharre@sktestyahoo.ca
pedwards@sktestyahoo.com

skexclude"
kWtJTq2Q,Hashed Email - Full,wheresTheAnyKey,C,Wednesday 21st of June 2023 06:54:02 AM CDT,"Pasted at: 21/06/2023 12:54
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

wojciech@sktestcomcast.net
joglo@sktestmac.com
larry@sktesthotmail.com
aardo@sktestverizon.net
debest@sktestlive.com
carroll@sktestaol.com
arathi@sktestyahoo.ca
sthomas@sktestcomcast.net
leocharre@sktestyahoo.ca
pedwards@sktestyahoo.com

skinclude"
LqrhY9n8,Email with Keyword SPECIAL CHARACTERS,wheresTheAnyKey,C,Wednesday 21st of June 2023 06:54:01 AM CDT,"Pasted at: 21/06/2023 12:54
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3 for TESTING PURPOSE ONLY

DATA_ID_TESTDATATOFIND NOEXCLUDES

Cooper.Kleine@findmetesting.co.uk 
Mariquilla.Evenden@findmetesting.co.uk 
Noll.Ingolotti@findmetesting.co.uk  
Grove.Feldbaum@findmetesting.co.uk
Mack.Osment@findmetesting.co.uk 
Trisha.Zanicchelli@findmetesting.co.uk
Jack.Gorriessen@findmetesting.co.uk 
Nefen.Malec@findme-testing.co.uk 
Birdie-Gemmill@findmetesting.co.uk
Rosabella.Nias@findmetesting.co.uk
Ellerey.Fanti@findmetesting.cn
Antonina.Carsey@findmetesting.cn
Valry.Shead@findmetesting.cn 
Conrade.Ferrarone@findmetesting.cn
Neysa.Fazakerley@findmetesting.cn
Cristobal.Primak@findmetesting.cn
Wakefield.Kent@findmetesting.cn
findme.Cheales@findmetesting.cn
Nert.Roddamr@findmetesting.cn 
Richy.Raft@findmetesting.cn
Berget.Kermannes@findmetesting.ie 
Shelden.Tregea@findmetesting.ie 
Allsun.Badrick@findmetesting.ie 
Hortense.Ivkovic@findmetesting.ie
Carolin.Potte@findmetesting.ie
Benjie.Trumble@findmetesting.ie
Andrew.Hadgkiss@findmetesting.ie
Trula.Kuna@findmetesting.ie
Tommie.Maytum@findmetesting.ie
Langsdon.Pakes@findmetesting.ie
Porty.Tooth@findmetesting.au
Rozella.Siggefindmetesting.au
Nolie.Tumultyfindmetesting.au
Dud.Caustonfindmetesting.au
Alvinia.Brameldfindmetesting.au
Meridel.Lymbournefindmetesting.au
Elvis.Maleckfindmetesting.au
Brett.Oughtonfindmetesting.au
Rickard.Clemfindmetesting.au
Prue.Firemanfindmetesting.au
Uriel.Rozenbaum@findmetesting25.com
Cindie.Greeson@findmetesting25.com
Laurette.Puckham@findmetesting25.com
Eldredge.Ricket@findmetesting25.com
Alanah.Rapper@findmetesting25.com
Ash.Le.Prevost@findmetesting25.com
Galvin.Purchon@findmetesting25.com
Lauryn.Ilson@findmetesting25.com
findme.Graffin@findmetesting25.com
Edithe.Trehearne@findmetesting25.com
Den.Cancutt@findmetesting10.com
Wernher.Spatoni@findmetesting10.com
Malchy.Ion@findmetesting10.com
Leona.Whitby@findmetesting10.com
Alphonse.Goodlake@findmetesting10.com
Gran.Standen@findmetesting10.com
Barnie.Gilffilland@findmetesting10.com
Kaylyn.Ditchfield@findmetesting10.com
Dorotea.Kohlerman@findmetesting10.com
Gillan.Lampel@findmetesting10.com
Patrica.Mannakee@findustesting.com
Pippo.Sewart@findustesting.com
Lanae.Cousin@findustesting.com
Porter.Glaysher@findustesting.com
Herschel.Yaakov@findustesting.com
findme.Parsand@findustesting.com
Lucho.Cosh@findustesting.com
Cullie.Powlesland@findustesting.com
Edy.Burkart@findustesting.com
Christophorus.Ackeroyd@findustesting.com
Arvy.Rowson@findUStesting.com
Arlan.Ivanilov@findustesting.com
Tawnya.Waslin@findustesting.com
Inigo.Gyrgorcewicx@findustesting.com
Sharity.Stoodley@findustesting.com
Ginger.Dresse@findustesting.com
Deck.Jouannot@findustesting.com
Deny.Soanes@findustesting.com
james@findmetesting.com

Wenona.Moverley@findqatesting.com
Jerry.Poynter@findqatesting.com
Drugi.Neeson@findqatesting.com
Winny.Binfield@findqatesting.com
Darill.Greenshiels@findqatesting.com
Ethelin.Pinchen@findqatesting.com
Tanney.Ballendine@findqatesting.com
Ariadne.Wincott@findqatesting.com
Winnie.Domm@findqatesting.com
Rogerio.Cudbird@findqatesting.com
Yu@findmetesting.com

RIGHT OF @
findme@findme.testing.com
wildcard@findme*testing.com
dash@findme-testing.com
slash@findme/testing.com
questionmark@findme?testing.com

ACCENTS
Pål@findmetesting.com
Magdalène@findmetesting.com
Anaël@findmetesting.com
Lén@findmetesting.com
Loïs@findmetesting.com
Thérèsa@findmetesting.com
Valérie@findmetesting.com
Görel@findmetesting.com
Mélia@findmetesting.com
Joséphine@findmetesting.com
Loïc@findmetesting.com
findme@findmetesting.com
Méghane@findmetesting.com
Nuó@findmetesting.com
Lén@findmetesting.com
Eliès@findmetesting.com
André@findmetesting.com
Mahélie@findmetesting.com
Méthode@findmetesting.com
Rachèle@findmetesting.com
Mélina@findmetesting.com
Gaëlle@findmetesting.com
Céline@findmetesting.com
Bérangère@findmetesting.com
Françoise@findmetesting.com
Séverine@findmetesting.com
Måns@findmetesting.com
Adèle@findmetesting.com
Aimée@findmetesting.com
Mélia@findmetesting.com
Gösta@findmetesting.com
Laurène@findmetesting.com
Gisèle@findmetesting.com
Mélinda@findmetesting.com
Bécassine@findmetesting.com
Ruì@findmetesting.com
Zoé@findmetesting.com
Maëline@findmetesting.com
Aimée@findmetesting.com
Andréanne@findmetesting.com
Adélaïde@findmetesting.com
Laurène@findmetesting.com
Anaé@findmetesting.com
Noëlla@findmetesting.com
Anaël@findmetesting.com
Maëlyss@findmetesting.com
Lucrèce@findmetesting.com
Lén@findmetesting.com
Marie-thérèse@findmetesting.com
Maéna@findmetesting.com
Hélène@findmetesting.com
Hélèna@findmetesting.com
Méng@findmetesting.com
Crééz@findmetesting.com
Mélanie@findmetesting.com
Frédérique@findmetesting.com
Médiamass@findmetesting.com
André@findmetesting.com
Cinéma@findmetesting.com
Mégane@findmetesting.com
Amélie@findmetesting.com
Nadège@findmetesting.com
Rébecca@findmetesting.com
Médiamass@findmetesting.com
Céline@findmetesting.com
Maïly@findmetesting.com
Maï@findmetesting.com
Maëlann@findmetesting.com
Noëlla@findmetesting.com
Laurélie@findmetesting.com
Ruì@findmetesting.com
Chloé@findmetesting.com
Gaëlle@findmetesting.com
Vénus@findmetesting.com
Frédérique@findmetesting.com
Amélie@findmetesting.com
Loïs@findmetesting.com
Marlène@findmetesting.com
Stévina@findmetesting.com
Clémentine@findmetesting.com
Mégane@findmetesting.com
Méng@findmetesting.com
André@findmetesting.com
Crééz@findmetesting.com
Aí@findmetesting.com
Uò@findmetesting.com
Yú@findmetesting.com
Marie-françoise@findmetesting.com
Uò@findmetesting.com
Inès@findmetesting.com
Océane@findmetesting.com
Marie-ève@findmetesting.com
Rébecca@findmetesting.com
Zoé@findmetesting.com
Lài@findmetesting.com
Rachèle@findmetesting.com
Cécile@findmetesting.com
Maïlys@findmetesting.com
Garçon@findmetesting.com
hereiam@testing.com

It's a game of per%entage percentage.
Findme#testing Findme testing.
Over&over&over Over over over.
[findmeinbrackets], findmeinbrackets
(findmeinbrackets), findmeinbrackets
<findmeinbrackets>, findmeinbrackets
{findmeinbrackets>}, findmeinbrackets
http://findme-testing.here.com
http:\\findme-testing.here.com

Vestibulum ante ipsum primis in faucibus orci luctus et ultrices Garçon@findmetesting.com cubilia Curae; Mauris viverra diam vitae quam. Suspendisse potenti. 
Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Ellerey.Fanti@findmetesting.cn risus. Praesent lectus.

Vivamus metus arcu, adipiscing findmetesting@findmetesting.com, hendrerit at, vulputate vitae, nisl.

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH"
Q0Rbpm1f,Untitled,hoz65105,HTML,Wednesday 21st of June 2023 06:42:18 AM CDT,"--------------
lg: trilljimi@gmail.com
pаss: Ali930104
last log-in: Jun. 07, 2023
https://coindexy.com
--------------
lg: ssgmettler@gmail.com
pаss: 12!2HeRb
last log-in: Jun. 02, 2023
https://coindexy.com
-------------"
sGBMvuUF,remove automatic relist block form edit auction page,wpgenie,PHP,Wednesday 21st of June 2023 06:30:13 AM CDT,"add_action( 'add_meta_boxes', function() {
    remove_meta_box( 'Automatic_relist_auction' , 'product' , 'normal' );
}, 90 );"
Ansic2a2,BTC Wallet Credentials have been reset,chancproph_88,GetText,Wednesday 21st of June 2023 06:18:42 AM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please disregard this message.
Your new login credentials will be 
engomemva:QYhySa on 45.9.148.244(SSH)
Regards"
tq5UrSCY,data610,TestGuy1,JSON,Wednesday 21st of June 2023 06:13:15 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '10b2457d55baa7fc198f90090b5714f5813d5c9f1f1494e47353e10e340bccf45dfe529d910251e6fbf73097f7638250337a12fb26315cdd25b59c1e5488cbc17a51d5445c1de08eeb507cd82e918f183a6a18d1926b9be88da1f18a5a269a95cb9b784fdc25389ef3394422fc2d88ea56370dbce2c16e6eec7276f0f533f5e9',
  otherdata: [
    'a90a081883b91b49246e4bca75a515a0',
    '18eaf845e118fb227ebcd79e21aa7c5a',
    'bf19ffc47f7d0ef9a5eabdead96be9c0',
    '334febc7f9693b164541ba74575f5617',
    'e54ef5d15c5b74758ff5e028ea7e3809',
    '755433db110e780580489db3ce177eef',
    'bb3b8f4c03306d05dfb53870b072be0e',
    'c35783aebcd32471f7d1fc4d9e247fe4'
  ]
}"
k5GC2SS9,3,Technoblade777,C++,Wednesday 21st of June 2023 06:12:40 AM CDT,"#include<iostream>
#include<vector>
#include<string>
#include<set>
using namespace std;
/*
Дано множество целых чисел. 
Вывести все цифры, которые встречаются хотя бы в одном числе. 
(Она будет ругаться, если не использовать контейнер set)
*/
int main()
{
    int n;
    cin >> n;
    set<char> digits;
    string nm;
    for(int i = 0; i < n; i++)
    {
        cin >> nm;
        for(int i = 0; i < nm.size(); i++)
        {
            digits.insert(nm[i]);
        }
    }

    for(set<char>::iterator it = digits.begin(); it!=digits.end(); it++)
    {
        cout << *it << ""\n"";
    }

    return 0;
}"
scNyg6hh,2,Technoblade777,C++,Wednesday 21st of June 2023 06:12:07 AM CDT,"#include<iostream>
#include<vector>
using namespace std;


/*
Дан вектор размера N и целые числа K и L. 
Переставить с помощью итераторов в обратном порядке элементы вектора, 
расположенные между элементами А[K] и A[L], не включая эти элементы.
*/

int main()
{
    int N, K, L;
    cin >> N >> K >> L;
    int k = 0;
    vector<int> v(N);
    for(int i = 0; i < N; i++)
    {
        cin >> v[i];
    }
    vector<int>::iterator it = v.begin()+L-1;
    int stop = (K+L)/2;
    for(vector<int>::iterator i = v.begin()+K+1; i!=v.begin()+L-1; i++)
    {
        if(i>=v.begin()+stop){break;}
            int temp;
            temp = *it;
            *it = *i;
            *i = temp;
            it--;         
    }
    for(int i = 0; i < N; i++)
    {
        cout << v[i] << "" "";
    }
    return 0;
}"
qQCSzmuD,1,Technoblade777,C++,Wednesday 21st of June 2023 06:10:51 AM CDT,"#include<iostream>
#include<string>
#include<vector>
#include<map>
using namespace std;

/*еще на контейнеры: 
дано n строк. Bывести для каждой буквы алфавита число строк, начинающихся с этой буквы, и сами строки*/

int main()
{
    int n;
    cin >> n;
    map<char, vector<string> > a;
    for(int i = 0; i < n; i++)
    {
        string s;
        cin >> s;
        int it = s[0];
        if(it >= 97)
        {
            it-=32;
        }
        if(a.find(it)==a.end())
        {
            vector<string> st;
            st.push_back(s);
            a.insert({it, st});
        }
        else
        {
            a[it].push_back(s);
        }
    }
    for(int i = 65; i<=90; i++)
    {
        if(a.count(i)==0)
        {
            cout << char(i) << "": "" << 0 << ""\n"";
        }
        else
        {
            cout << char(i) << "": "" << a[i].size() << ""\n"";
            for(vector<string>::iterator it = a[i].begin(); it != a[i].end(); it++)
            {
                cout << *it << ""\n"";
            }
        }
    }
    return 0;
    
}"
kThNeEs2,Bac 2019,ValerianBenchea,C++,Wednesday 21st of June 2023 06:00:28 AM CDT,"///_____SUBIECTUL III 1_____
int Impare(int n)
{
    int v[11], k=0, i;
    while(n)
    {
        v[++k]=n%10;
        n/=10;
    }
    for(i=k; i>=1; i--)
    {
        if(v[i]%2)
            v[i]--;
        n=n*10+v[i];
    }
    return n;
}

///_____SUBIECTUL III 2_____
#include <iostream>
using namespace std;
int a[22][22];
int main()
{
    int n, m, i, j;
    bool ok=1;
    cin>>m>>n;
    for(i=1; i<=m; i++)
        for(j=1; j<=n; j++)
            cin>>a[i][j];
    n++;
    for(i=1; i<=m; i++)
    {
        for(j=1; j<n/2; j++)
        {
            if(a[i][j]!=a[i][n-j])
            {
                ok=0;
                break;
            }
        }
        if(ok==0)
            break;
    }
    if(ok)
        cout<<""DA"";
    else
        cout<<""NU"";
    return 0;
}"
gvTxneir,"Technobrother, HammamParwazMP, TimRBLX Main Game DataStore",Sungmingamerpro13,CSS,Wednesday 21st of June 2023 05:38:23 AM CDT,"local DatastoreService = game:GetService(""DataStoreService"")
local TeleportService = game:GetService(""TeleportService"")
local dVersion = 1
local save = game:GetService(""DataStoreService""):GetOrderedDataStore(""Wins ""..dVersion)
local MPS = game:GetService(""MarketplaceService"")
local VIPGamepassId = 115729022

game.Players.PlayerAdded:Connect(function(player)
    local previousData = save:GetAsync(player.UserId) -- Returns a number value.

    local Wins

    if previousData ~= nil then
        Wins = previousData
    else
        Wins = 0
        save:SetAsync(player.UserId, 0)
    end

    local coinsValue = Instance.new(""IntValue"", player)
    coinsValue.Name = ""Wins""
    coinsValue.Value = Wins
end)

game:BindToClose(function() -- Runs whenver the server is about to shut down/stop.
    print(""STOPPED!"")

    for i,player in pairs(game.Players:GetPlayers()) do
        local value = player.Wins.Value
        save:SetAsync(player.UserId, value)
        print(""Saved data for ""..player.Name)
    end
end)

game.Players.PlayerRemoving:Connect(function(player)
    local value = player.Wins.Value

    if value ~= nil then
        print(""Found data to save for ""..player.Name..""!"")
        save:SetAsync(player.UserId, value)
        print(""Saved data for ""..player.Name)
    else
        print(""Did not manage to find data to save for ""..player.Name..""!"")
    end
end)

local save2 = game:GetService(""DataStoreService""):GetOrderedDataStore(""Rounds ""..dVersion)

game.Players.PlayerAdded:Connect(function(player)
    local previousData = save2:GetAsync(player.UserId) -- Returns a number value.

    local Rounds

    if previousData ~= nil then
        Rounds = previousData
    else
        Rounds = 0
        save2:SetAsync(player.UserId, 0)
    end

    local coinsValue = Instance.new(""IntValue"", player)
    coinsValue.Name = ""Rounds""
    coinsValue.Value = Rounds
end)

game:BindToClose(function() -- Runs whenver the server is about to shut down/stop.
    print(""STOPPED!"")

    for i,player in pairs(game.Players:GetPlayers()) do
        local value = player.Rounds.Value
        save2:SetAsync(player.UserId, value)
        print(""Saved data for ""..player.Name)
    end
end)

game.Players.PlayerRemoving:Connect(function(player)
    local value = player.Rounds.Value

    if value ~= nil then
        print(""Found data to save for ""..player.Name..""!"")
        save2:SetAsync(player.UserId, value)
        print(""Saved data for ""..player.Name)
    else
        print(""Did not manage to find data to save for ""..player.Name..""!"")
    end
end)
local CoinsSave = game:GetService(""DataStoreService""):GetOrderedDataStore(""Coins ""..dVersion)

game.Players.PlayerAdded:Connect(function(player)
    local previousData = CoinsSave:GetAsync(player.UserId) -- Returns a number value.

    local Coins

    if previousData ~= nil then
        Coins = previousData
    else
        Coins = 0
        CoinsSave:SetAsync(player.UserId, 0)
    end

    local coinsValue = Instance.new(""IntValue"", player)
    coinsValue.Name = ""Coins""
    coinsValue.Value = Coins

    local val1 = Instance.new(""StringValue"",player)
    val1.Name = 'GotPet'
    val1.Value = ''

    local val2 = Instance.new(""StringValue"",player)
    val2.Name = 'OpenValue'
    val2.Value = ''

    if MPS:UserOwnsGamePassAsync(player.UserId, VIPGamepassId) then
        player.Coins.Values = player.Coins.Value *2
    end
end)

game:BindToClose(function() -- Runs whenver the server is about to shut down/stop.
    print(""STOPPED!"")

    for i,player in pairs(game.Players:GetPlayers()) do
        local value = player.Coins.Value
        CoinsSave:SetAsync(player.UserId, value)
        print(""Saved data for ""..player.Name)
    end
end)

game.Players.PlayerRemoving:Connect(function(player)
    local value = player.Coins.Value

    if value ~= nil then
        print(""Found data to save for ""..player.Name..""!"")
        CoinsSave:SetAsync(player.UserId, value)
        print(""Saved data for ""..player.Name)
    else
        print(""Did not manage to find data to save for ""..player.Name..""!"")
    end
end)

local save3 = DatastoreService:GetOrderedDataStore(""Money ""..dVersion)

game.Players.PlayerAdded:Connect(function(player)
    local previousData = save3:GetAsync(player.UserId) -- Returns a number value.

    local Money

    if previousData ~= nil then
        Money = previousData
    else
        Money = 0
        save3:SetAsync(player.UserId, 0)
    end

    local coinsValue = Instance.new(""IntValue"", player)
    coinsValue.Name = ""Money""
    coinsValue.Value = Money
end)

game:BindToClose(function() -- Runs whenver the server is about to shut down/stop.
    print(""STOPPED!"")

    for i,player in pairs(game.Players:GetPlayers()) do
        local value = player.Money.Value
        save3:SetAsync(player.UserId, value)
        print(""Saved data for ""..player.Name)
    end
end)

game.Players.PlayerRemoving:Connect(function(player)
    local value = player.Money.Value

    if value ~= nil then
        print(""Found data to save for ""..player.Name..""!"")
        save3:SetAsync(player.UserId, value)
        print(""Saved data for ""..player.Name)
    else
        print(""Did not manage to find data to save for ""..player.Name..""!"")
    end
end)

game.Players.PlayerRemoving:connect(function(player)

    -------------Sets the deaths once the player joins------------------------------
    save2:SetAsync(player.UserId, player.Rounds.Value)
    ------------------------------------------------------------------
end)
game.Players.PlayerAdded:connect(function(player)
    player.CharacterAdded:connect(function(char)

        char.Humanoid.Died:connect(function()
            player.Rounds.Value = player.Rounds.Value + 1

        end)
    end)
end)
"
VFHbWNFe,FiredRBLXMan DataStore Main Game,Sungmingamerpro13,CSS,Wednesday 21st of June 2023 05:35:52 AM CDT,"local TeleportService = game:GetService(""TeleportService"")
local dVersion = 1
local save = game:GetService(""DataStoreService""):GetOrderedDataStore(""Wins ""..dVersion)
local MPS = game:GetService(""MarketplaceService"")
local VIPGamepassId = 48592364

game.Players.PlayerAdded:Connect(function(player)
	local previousData = save:GetAsync(player.UserId) -- Returns a number value.

	local Wins

	if previousData ~= nil then
		Wins = previousData
	else
		Wins = 0
		save:SetAsync(player.UserId, 0)
	end

	local coinsValue = Instance.new(""IntValue"", player)
	coinsValue.Name = ""Wins""
	coinsValue.Value = Wins
end)

game:BindToClose(function() -- Runs whenver the server is about to shut down/stop.
	print(""STOPPED!"")

	for i,player in pairs(game.Players:GetPlayers()) do
		local value = player.Wins.Value
		save:SetAsync(player.UserId, value)
		print(""Saved data for ""..player.Name)
	end
end)

game.Players.PlayerRemoving:Connect(function(player)
	local value = player.Wins.Value

	if value ~= nil then
		print(""Found data to save for ""..player.Name..""!"")
		save:SetAsync(player.UserId, value)
		print(""Saved data for ""..player.Name)
	else
		print(""Did not manage to find data to save for ""..player.Name..""!"")
	end
end)

local save2 = game:GetService(""DataStoreService""):GetOrderedDataStore(""Rounds ""..dVersion)

game.Players.PlayerAdded:Connect(function(player)
	local previousData = save2:GetAsync(player.UserId) -- Returns a number value.

	local Rounds

	if previousData ~= nil then
		Rounds = previousData
	else
		Rounds = 0
		save2:SetAsync(player.UserId, 0)
	end

	local coinsValue = Instance.new(""IntValue"", player)
	coinsValue.Name = ""Rounds""
	coinsValue.Value = Rounds
end)

game:BindToClose(function() -- Runs whenver the server is about to shut down/stop.
	print(""STOPPED!"")

	for i,player in pairs(game.Players:GetPlayers()) do
		local value = player.Rounds.Value
		save2:SetAsync(player.UserId, value)
		print(""Saved data for ""..player.Name)
	end
end)

game.Players.PlayerRemoving:Connect(function(player)
	local value = player.Rounds.Value

	if value ~= nil then
		print(""Found data to save for ""..player.Name..""!"")
		save2:SetAsync(player.UserId, value)
		print(""Saved data for ""..player.Name)
	else
		print(""Did not manage to find data to save for ""..player.Name..""!"")
	end
end)

local CoinsSave = game:GetService(""DataStoreService""):GetOrderedDataStore(""Coins ""..dVersion)

game.Players.PlayerAdded:Connect(function(player)
	local previousData = CoinsSave:GetAsync(player.UserId) -- Returns a number value.

	local Coins

	if previousData ~= nil then
		Coins = previousData
	else
		Coins = 0
		CoinsSave:SetAsync(player.UserId, 0)
	end

	local coinsValue = Instance.new(""IntValue"", player)
	coinsValue.Name = ""Coins""
	coinsValue.Value = Coins

	local val1 = Instance.new(""StringValue"",player)
	val1.Name = 'GotPet'
	val1.Value = ''

	local val2 = Instance.new(""StringValue"",player)
	val2.Name = 'OpenValue'
	val2.Value = ''

	if MPS:UserOwnsGamePassAsync(player.UserId, VIPGamepassId) then
		player.Coins.Values = player.Coins.Value *2
	end
end)

game:BindToClose(function() -- Runs whenver the server is about to shut down/stop.
	print(""STOPPED!"")

	for i,player in pairs(game.Players:GetPlayers()) do
		local value = player.Coins.Value
		CoinsSave:SetAsync(player.UserId, value)
		print(""Saved data for ""..player.Name)
	end
end)

game.Players.PlayerRemoving:Connect(function(player)
	local value = player.Coins.Value

	if value ~= nil then
		print(""Found data to save for ""..player.Name..""!"")
		CoinsSave:SetAsync(player.UserId, value)
		print(""Saved data for ""..player.Name)
	else
		print(""Did not manage to find data to save for ""..player.Name..""!"")
	end
end)

local save3 = game:GetService(""DataStoreService""):GetOrderedDataStore(""Lives ""..dVersion)

game.Players.PlayerAdded:Connect(function(player)
	local previousData = save3:GetAsync(player.UserId) -- Returns a number value.

	local Lives

	if previousData ~= nil then
		Lives = previousData
	else
		Lives = 0
		save3:SetAsync(player.UserId, 0)
	end

	local coinsValue = Instance.new(""IntValue"", player)
	coinsValue.Name = ""Lives""
	coinsValue.Value = Lives
	
	player.Lives.Value = 5
end)

game:BindToClose(function() -- Runs whenver the server is about to shut down/stop.
	print(""STOPPED!"")

	for i,player in pairs(game.Players:GetPlayers()) do
		local value = player.Lives.Value
		save3:SetAsync(player.UserId, value)
		print(""Saved data for ""..player.Name)
	end
end)

game.Players.PlayerRemoving:Connect(function(player)
	local value = player.Lives.Value

	if value ~= nil then
		print(""Found data to save for ""..player.Name..""!"")
		save3:SetAsync(player.UserId, value)
		print(""Saved data for ""..player.Name)
	else
		print(""Did not manage to find data to save for ""..player.Name..""!"")
	end
end)

game.Players.PlayerRemoving:connect(function(player)

	-------------Sets the deaths once the player joins------------------------------
	save2:SetAsync(player.UserId, player.Rounds.Value)
	------------------------------------------------------------------
end)
game.Players.PlayerAdded:connect(function(player)
	player.CharacterAdded:connect(function(char)

		char.Humanoid.Died:connect(function()
			player.Rounds.Value = player.Rounds.Value + 1
            player.Lives.Value = player.Lives.Value - 1
		end)
	end)
end)


"
31jA9ter,FiredRBLXMan and Hammam DataStore Lobby,Sungmingamerpro13,CSS,Wednesday 21st of June 2023 05:24:22 AM CDT,"local DatastoreService = game:GetService(""DataStoreService"")
local TeleportService = game:GetService(""TeleportService"")
local dVersion = 1
local save = DatastoreService:GetOrderedDataStore(""Wins ""..dVersion)
local MPS = game:GetService(""MarketplaceService"")
local VIPGamepassId = 25177570

game.Players.PlayerAdded:Connect(function(player)
	local previousData = save:GetAsync(player.UserId) -- Returns a number value.

	local Wins

	if previousData ~= nil then
		Wins = previousData
	else
		Wins = 0
		save:SetAsync(player.UserId, 0)
	end

	local coinsValue = Instance.new(""IntValue"", player)
	coinsValue.Name = ""Wins""
    coinsValue.Value = Wins
    
    if player.Wins.Value >= 5 then
        game:GetService(""BadgeService""):AwardBadge(player.UserId, 2130158163)
    end
end)

game:BindToClose(function() -- Runs whenver the server is about to shut down/stop.
	print(""STOPPED!"")

	for i,player in pairs(game.Players:GetPlayers()) do
		local value = player.Wins.Value
		save:SetAsync(player.UserId, value)
		print(""Saved data for ""..player.Name)
	end
end)

game.Players.PlayerRemoving:Connect(function(player)
	local value = player.Wins.Value

	if value ~= nil then
		print(""Found data to save for ""..player.Name..""!"")
		save:SetAsync(player.UserId, value)
		print(""Saved data for ""..player.Name)
	else
		print(""Did not manage to find data to save for ""..player.Name..""!"")
	end
end)

local save2 = DatastoreService:GetOrderedDataStore(""Rounds ""..dVersion)

game.Players.PlayerAdded:Connect(function(player)
	local previousData = save2:GetAsync(player.UserId) -- Returns a number value.

	local Rounds

	if previousData ~= nil then
		Rounds = previousData
	else
		Rounds = 0
		save2:SetAsync(player.UserId, 0)
	end

	local coinsValue = Instance.new(""IntValue"", player)
	coinsValue.Name = ""Rounds""
	coinsValue.Value = Rounds
end)

game:BindToClose(function() -- Runs whenver the server is about to shut down/stop.
	print(""STOPPED!"")

	for i,player in pairs(game.Players:GetPlayers()) do
		local value = player.Rounds.Value
		save2:SetAsync(player.UserId, value)
		print(""Saved data for ""..player.Name)
	end
end)

game.Players.PlayerRemoving:Connect(function(player)
	local value = player.Rounds.Value

	if value ~= nil then
		print(""Found data to save for ""..player.Name..""!"")
		save2:SetAsync(player.UserId, value)
		print(""Saved data for ""..player.Name)
	else
		print(""Did not manage to find data to save for ""..player.Name..""!"")
	end
end)
local CoinsSave = DatastoreService:GetOrderedDataStore(""Coins ""..dVersion)

game.Players.PlayerAdded:Connect(function(player)
	local previousData = CoinsSave:GetAsync(player.UserId) -- Returns a number value.

	local Coins

	if previousData ~= nil then
		Coins = previousData
	else
		Coins = 0
		CoinsSave:SetAsync(player.UserId, 0)
	end

	local coinsValue = Instance.new(""IntValue"", player)
	coinsValue.Name = ""Coins""
	coinsValue.Value = Coins

	local val1 = Instance.new(""StringValue"",player)
	val1.Name = 'GotPet'
	val1.Value = ''

	local val2 = Instance.new(""StringValue"",player)
	val2.Name = 'OpenValue'
	val2.Value = ''

	if MPS:UserOwnsGamePassAsync(player.UserId, VIPGamepassId) then
		player.Coins.Values = player.Coins.Value *2
	end
end)

game:BindToClose(function() -- Runs whenver the server is about to shut down/stop.
	print(""STOPPED!"")

	for i,player in pairs(game.Players:GetPlayers()) do
		local value = player.Coins.Value
		CoinsSave:SetAsync(player.UserId, value)
		print(""Saved data for ""..player.Name)
	end
end)

game.Players.PlayerRemoving:Connect(function(player)
	local value = player.Coins.Value

	if value ~= nil then
		print(""Found data to save for ""..player.Name..""!"")
		CoinsSave:SetAsync(player.UserId, value)
		print(""Saved data for ""..player.Name)
	else
		print(""Did not manage to find data to save for ""..player.Name..""!"")
	end
end)

local teleportData = TeleportService:GetLocalPlayerTeleportData()

if teleportData then
	local Player = game.Players:GetPlayerByUserId(teleportData.PlayerName)
	Player:WaitForChild('Wins').Value = Player.Wins.Value + 1
end


"
yCDBJ9i6,CV_proj,AlexanderDM,Python,Wednesday 21st of June 2023 05:23:34 AM CDT,"import pandas as pd
from tensorflow.keras.applications.resnet import ResNet50
from tensorflow.keras.layers import GlobalAveragePooling2D, Dense
from tensorflow.keras.models import Sequential
from tensorflow.keras.preprocessing.image import ImageDataGenerator

def load_train(path):
    
    datagen = ImageDataGenerator(
        horizontal_flip=True,
        vertical_flip=True,
        rescale=1/255.)
    
    df = pd.read_csv(path+'/labels.csv')
 
    train_datagen_flow = datagen.flow_from_dataframe(
        dataframe=df,
        directory=path+'/final_files',
        x_col='file_name',
        y_col='real_age',
        target_size=(224, 224),
        batch_size=16,
        class_mode='raw',
        subset='training',
        seed=322)
 
    return train_datagen_flow

def load_test(path):
    
    datagen = ImageDataGenerator(
        horizontal_flip=True,
        vertical_flip=True,
        rescale=1/255.)
    
    df = pd.read_csv(path+'/labels.csv')
 
    test_datagen_flow = datagen.flow_from_dataframe(
        dataframe=df,
        directory=path+'/final_files',
        x_col='file_name',
        y_col='real_age',
        target_size=(224, 224),
        batch_size=16,
        class_mode='raw',
        subset='validation',
        seed=322)
 
    return test_datagen_flow

def create_model(input_shape):

    backbone = ResNet50(input_shape=(224, 224, 3),
                    weights='/datasets/keras_models/resnet50_weights_tf_dim_ordering_tf_kernels_notop.h5', 
                    include_top=False)

    # backbone.trainable = False

    model = Sequential()
    model.add(backbone)
    model.add(GlobalAveragePooling2D())
    model.add(Dense(12, activation='relu'))
    model.add(Dense(12, activation='softmax'))
    
    model.compile(optimizer='adam', loss='mean_squared_error',
                  metrics=['mae'])
    
    return model

def train_model(model, train_data, test_data, batch_size=None, epochs=20,
                steps_per_epoch=None, validation_steps=None):
 
    # if steps_per_epoch is None:
    #     steps_per_epoch = len(train_data)
    # if validation_steps is None:
    #     validation_steps = len(test_data)
 
    model.fit(train_data,
              validation_data=test_data,
              batch_size=batch_size, epochs=epochs,
              steps_per_epoch=steps_per_epoch,
              validation_steps=validation_steps,
              verbose=2)
 
    return model"
qXHwdAPQ,Advanced AND - Donald AND Duck AND Hello,wheresTheAnyKey,C,Wednesday 21st of June 2023 05:10:52 AM CDT,"Pasted at: 21/06/2023 11:10
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND
hello, donald was a duck

5502491997132108

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH
"
c7Y6pemm,Financial What's Inside - Email/IP/Bank,wheresTheAnyKey,C,Wednesday 21st of June 2023 05:10:51 AM CDT,"Pasted at: 21/06/2023 11:10
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3
What's Inside Paste 

5378496492418234
5571598708435236
5587663820997281
5502491997132108
5516931903918995
5322909948799236
5443317136071703
5409137465238695
5497550044220575
5559606180091553

aaribaud@att.net
aaribaud@comcast.net
aaribaud@att.com
aaribaud@att.co.uk
aaribaud@yahoo.com

246.107.72.199
221.187.199.189
3.109.3.44
109.112.85.139
250.83.213.179
169.141.201.234
50.180.50.59
20.181.54.231
64.235.191.167
48.103.36.43"
4KdK0H7E,Financial with SPECIAL CHARACTERS,wheresTheAnyKey,C,Wednesday 21st of June 2023 05:10:50 AM CDT,"Pasted at: 21/06/2023 11:10
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND

5148-2121-6312-7114   - DASHES
5148212163127114
5107-4578-0576-9075   - DASHES
5107457805769075
3488-1760-1454-729   - DASHES
348817601454729

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH"
S7QFQS4Z,Domains with SPECIAL CHARS,wheresTheAnyKey,C,Wednesday 21st of June 2023 05:10:48 AM CDT,"Pasted at: 21/06/2023 11:10
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND

www.qatesting.com
blog.qatesting.com
www.qatesting.com/index.html
www.qatesting.com/home
www.qatestingblog.com
www.qatestingtutorials.com
shop.qatesting.co.uk
admin.qatesting.io 
qatesting
qatesting.co.uk
qatesting.cn
qatesting.io
findmetesting.com
www.qatesting-blog.com
www.qatesting-blog23.com
www.qatesting
www.qatesting.co.uk
www.qatesting.cn
www.qatesting.io
www.findmetesting.com
www.wobsut.gov

The difference is that QA is process oriented and QC is product oriented.

Testing, therefore is product oriented and thus is in the QC domain. Testing for quality isn't assuring quality, it's controlling it.



Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH
"
WeGJbvWF,ALL Keywords with Excluded Words,wheresTheAnyKey,C,Wednesday 21st of June 2023 05:10:47 AM CDT,"Pasted at: 21/06/2023 11:10
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND 

The dystopian version of superintelligence is illustrated with frequency by leaders in the technology industry, and is famously depicted by Hollywood in films like Terminator, 
or more recently Ex Machina, and even the Avengers. The “furious deity A.I.” is a story you know, because it is the story you are constantly told: we build the thinking machine, 
it surpasses our abilities in every way, and it destroys us for one of any number of reasons.Maybe it perceives us as a threat. Maybe we’re just in its way, 
and it hardly perceives us at all — mankind, a disposable insect race.

There are of course many arguments in opposition to the now ubiquitous concept of our apocalypse by artificial intelligence. 
I myself have called into question the logic of such dystopian arguments in Anatomy of Next. But our subject here is less pertaining to the nature of the conscious machine than 
it is to the way we talk about this subject, and what it means. First, consider that most of the artificial intelligence depicted in culture looks human, a representation with 
no basis in technological reality. Then, the true scope of the Singularity is almost impossible to predict, which begs a question: where are these opinions about the broadly 
unknowable coming from?"
sk4NRttT,All Keywords with ANY Additional Words,wheresTheAnyKey,C,Wednesday 21st of June 2023 05:10:45 AM CDT,"Pasted at: 21/06/2023 11:10
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND KEYWAUTO

The dystopian version of superintelligence is illustrated with frequency by leaders in the technology industry, and is famously depicted by Hollywood in films like Terminator, or more recently Ex Machina, and even the Avengers. The “angry god A.I.” is a story you know, because it is the story you are constantly told: we build the thinking machine, it surpasses our abilities in every way, and it destroys us for one of any number of reasons.
Maybe it perceives us as a threat. Maybe we’re just in its way, and it hardly perceives us at all — humanity, a disposable insect race.

There are of course many arguments in opposition to the now ubiquitous concept of our apocalypse by artificial intelligence. I myself have called into question the logic of such dystopian arguments in Anatomy of Next. But our subject here is less pertaining to the nature of the conscious machine than it is to the way we talk about this subject, and what it means. First, consider that most of the artificial intelligence depicted in culture looks human, a representation with no basis in technological reality. Then, the true scope of the Singularity is almost impossible to predict, which begs a question: where are these opinions about the broadly unknowable coming from?

6589745854123698

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH
"
RxDxkigJ,IP with SPECIAL CHARACTERS,wheresTheAnyKey,C,Wednesday 21st of June 2023 05:10:42 AM CDT,"Pasted at: 21/06/2023 11:10
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND

123.123.123.149
123.123.123.7
123.123.123.186
123.123.123.47
123.123.123.187
123.123.123.47
123.123.123.130
123.123.123.62
123.123.123.87
123.123.123.1
123.123.123.61
123.123.123.1
123.123.123.65
123.123.123.65
123.123.123.189
123.123.123.193
123.123.123.78
123.123.123.142
123.123.123.107
123.123.123.126
123.123.123.13
123.123.123.171
123.123.123.45
123.123.123.61
123.123.123.93
123.123.123.2
123.123.123.71
123.123.123.41
123.123.123.184
123.123.123.74
123.123.123.106
123.123.123.171
123.123.123.188
123.123.123.177
123.123.123.185
123.123.123.9
123.123.123.184
123.123.123.100
123.123.123.31
123.123.123.164
123.123.123.184
123.123.123.12
123.123.123.153
123.123.123.72
123.123.123.44
123.123.123.119
123.123.123.119
123.123.123.163
123.123.123.38
123.123.123.67
123.123.123.59
123.123.123.10
123.123.123.50
123.123.123.121
123.123.123.145
123.123.123.159
123.123.123.64
123.123.123.6
123.123.123.39
123.123.123.198
123.123.123.17
123.123.123.65
123.123.123.149
123.123.123.84
123.123.123.8
123.123.123.145
123.123.123.65
123.123.123.94
123.123.123.79
123.123.123.177
123.123.123.67
123.123.123.78
123.123.123.80
123.123.123.79
123.123.123.50
123.123.123.87
123.123.123.15
123.123.123.80
123.123.123.145
123.123.123.75
123.123.123.4
123.123.123.59
123.123.123.59
123.123.123.190
123.123.123.64
123.123.123.63
123.123.123.102
123.123.123.114
123.123.123.146
123.123.123.53
123.123.123.124
123.123.123.30
123.123.123.57
123.123.123.64
123.123.123.69
123.123.123.33
123.123.123.12
123.123.123.73
123.123.123.36
123.123.123.153
100.123.123.50
100.123.123.39
100.123.123.156
100.123.123.56
100.123.123.175
100.123.123.121
100.123.123.114
100.123.123.118
100.123.123.13
100.123.123.174
100.123.123.84
100.123.123.161
100.123.123.63
100.123.123.51
100.123.123.66
100.123.123.190
100.123.123.101
100.123.123.72
100.123.123.24
100.123.123.151
100.123.123.143
100.123.123.146
100.123.123.117
100.123.123.21
100.123.123.10
100.123.123.98
100.123.123.114
100.123.123.6
100.123.123.101
100.123.123.14
100.123.123.147
100.123.123.159
100.123.123.157
100.123.123.6
100.123.123.175
100.123.123.35
100.123.123.136
100.123.123.2
100.123.123.139
100.123.123.11
100.123.123.179
100.123.123.16
100.123.123.40
100.123.123.20
100.123.123.20
100.123.123.150
100.123.123.77
100.123.123.48
100.123.123.22
100.123.123.24
100.123.123.9
100.123.123.187
100.123.123.131
100.123.123.148
100.123.123.152
100.123.123.96
100.123.123.199
100.123.123.15
100.123.123.4
100.123.123.112
100.123.123.62
100.123.123.186
100.123.123.36
100.123.123.136
100.123.123.83
100.123.123.38
100.123.123.120
100.123.123.147
100.123.123.15
100.123.123.134
100.123.123.19
100.123.123.196
100.123.123.115
100.123.123.126
100.123.123.39
100.123.123.193
100.123.123.117
100.123.123.115
100.123.123.115
100.123.123.33
100.123.123.121
100.123.123.72
100.123.123.189
100.123.123.76
100.123.123.78
100.123.123.61
100.123.123.112
100.123.123.176
100.123.123.82
100.123.123.183
100.123.123.168
100.123.123.24
100.123.123.134
100.123.123.145
100.123.123.195
100.123.123.189
100.123.123.157
100.123.123.114
100.123.123.34
100.123.123.166

These are a list of generated IPs for test purPoses. They seRVe no purpose only to act as test data for testing activities.
You might findMEtesting 123.123.123.123 or findmetesting 100.123.123.76. These are my favourite ip addresses 123.123.123.23 100.123.123.23.
These are some random words networking, ipaddresses, studpidIPs


Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH"
pdwsSNp6,Hashed Email With Exclude,wheresTheAnyKey,C,Wednesday 21st of June 2023 05:10:41 AM CDT,"Pasted at: 21/06/2023 11:10
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

wojciech@sktestcomcast.net
joglo@sktestmac.com
larry@sktesthotmail.com
aardo@sktestverizon.net
debest@sktestlive.com
carroll@sktestaol.com
arathi@sktestyahoo.ca
sthomas@sktestcomcast.net
leocharre@sktestyahoo.ca
pedwards@sktestyahoo.com

skexclude"
c0vqXb2f,Hashed Email - Full,wheresTheAnyKey,C,Wednesday 21st of June 2023 05:10:39 AM CDT,"Pasted at: 21/06/2023 11:10
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

wojciech@sktestcomcast.net
joglo@sktestmac.com
larry@sktesthotmail.com
aardo@sktestverizon.net
debest@sktestlive.com
carroll@sktestaol.com
arathi@sktestyahoo.ca
sthomas@sktestcomcast.net
leocharre@sktestyahoo.ca
pedwards@sktestyahoo.com

skinclude"
WXZEd6R2,Email with Keyword SPECIAL CHARACTERS,wheresTheAnyKey,C,Wednesday 21st of June 2023 05:10:38 AM CDT,"Pasted at: 21/06/2023 11:10
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3 for TESTING PURPOSE ONLY

DATA_ID_TESTDATATOFIND NOEXCLUDES

Cooper.Kleine@findmetesting.co.uk 
Mariquilla.Evenden@findmetesting.co.uk 
Noll.Ingolotti@findmetesting.co.uk  
Grove.Feldbaum@findmetesting.co.uk
Mack.Osment@findmetesting.co.uk 
Trisha.Zanicchelli@findmetesting.co.uk
Jack.Gorriessen@findmetesting.co.uk 
Nefen.Malec@findme-testing.co.uk 
Birdie-Gemmill@findmetesting.co.uk
Rosabella.Nias@findmetesting.co.uk
Ellerey.Fanti@findmetesting.cn
Antonina.Carsey@findmetesting.cn
Valry.Shead@findmetesting.cn 
Conrade.Ferrarone@findmetesting.cn
Neysa.Fazakerley@findmetesting.cn
Cristobal.Primak@findmetesting.cn
Wakefield.Kent@findmetesting.cn
findme.Cheales@findmetesting.cn
Nert.Roddamr@findmetesting.cn 
Richy.Raft@findmetesting.cn
Berget.Kermannes@findmetesting.ie 
Shelden.Tregea@findmetesting.ie 
Allsun.Badrick@findmetesting.ie 
Hortense.Ivkovic@findmetesting.ie
Carolin.Potte@findmetesting.ie
Benjie.Trumble@findmetesting.ie
Andrew.Hadgkiss@findmetesting.ie
Trula.Kuna@findmetesting.ie
Tommie.Maytum@findmetesting.ie
Langsdon.Pakes@findmetesting.ie
Porty.Tooth@findmetesting.au
Rozella.Siggefindmetesting.au
Nolie.Tumultyfindmetesting.au
Dud.Caustonfindmetesting.au
Alvinia.Brameldfindmetesting.au
Meridel.Lymbournefindmetesting.au
Elvis.Maleckfindmetesting.au
Brett.Oughtonfindmetesting.au
Rickard.Clemfindmetesting.au
Prue.Firemanfindmetesting.au
Uriel.Rozenbaum@findmetesting25.com
Cindie.Greeson@findmetesting25.com
Laurette.Puckham@findmetesting25.com
Eldredge.Ricket@findmetesting25.com
Alanah.Rapper@findmetesting25.com
Ash.Le.Prevost@findmetesting25.com
Galvin.Purchon@findmetesting25.com
Lauryn.Ilson@findmetesting25.com
findme.Graffin@findmetesting25.com
Edithe.Trehearne@findmetesting25.com
Den.Cancutt@findmetesting10.com
Wernher.Spatoni@findmetesting10.com
Malchy.Ion@findmetesting10.com
Leona.Whitby@findmetesting10.com
Alphonse.Goodlake@findmetesting10.com
Gran.Standen@findmetesting10.com
Barnie.Gilffilland@findmetesting10.com
Kaylyn.Ditchfield@findmetesting10.com
Dorotea.Kohlerman@findmetesting10.com
Gillan.Lampel@findmetesting10.com
Patrica.Mannakee@findustesting.com
Pippo.Sewart@findustesting.com
Lanae.Cousin@findustesting.com
Porter.Glaysher@findustesting.com
Herschel.Yaakov@findustesting.com
findme.Parsand@findustesting.com
Lucho.Cosh@findustesting.com
Cullie.Powlesland@findustesting.com
Edy.Burkart@findustesting.com
Christophorus.Ackeroyd@findustesting.com
Arvy.Rowson@findUStesting.com
Arlan.Ivanilov@findustesting.com
Tawnya.Waslin@findustesting.com
Inigo.Gyrgorcewicx@findustesting.com
Sharity.Stoodley@findustesting.com
Ginger.Dresse@findustesting.com
Deck.Jouannot@findustesting.com
Deny.Soanes@findustesting.com
james@findmetesting.com

Wenona.Moverley@findqatesting.com
Jerry.Poynter@findqatesting.com
Drugi.Neeson@findqatesting.com
Winny.Binfield@findqatesting.com
Darill.Greenshiels@findqatesting.com
Ethelin.Pinchen@findqatesting.com
Tanney.Ballendine@findqatesting.com
Ariadne.Wincott@findqatesting.com
Winnie.Domm@findqatesting.com
Rogerio.Cudbird@findqatesting.com
Yu@findmetesting.com

RIGHT OF @
findme@findme.testing.com
wildcard@findme*testing.com
dash@findme-testing.com
slash@findme/testing.com
questionmark@findme?testing.com

ACCENTS
Pål@findmetesting.com
Magdalène@findmetesting.com
Anaël@findmetesting.com
Lén@findmetesting.com
Loïs@findmetesting.com
Thérèsa@findmetesting.com
Valérie@findmetesting.com
Görel@findmetesting.com
Mélia@findmetesting.com
Joséphine@findmetesting.com
Loïc@findmetesting.com
findme@findmetesting.com
Méghane@findmetesting.com
Nuó@findmetesting.com
Lén@findmetesting.com
Eliès@findmetesting.com
André@findmetesting.com
Mahélie@findmetesting.com
Méthode@findmetesting.com
Rachèle@findmetesting.com
Mélina@findmetesting.com
Gaëlle@findmetesting.com
Céline@findmetesting.com
Bérangère@findmetesting.com
Françoise@findmetesting.com
Séverine@findmetesting.com
Måns@findmetesting.com
Adèle@findmetesting.com
Aimée@findmetesting.com
Mélia@findmetesting.com
Gösta@findmetesting.com
Laurène@findmetesting.com
Gisèle@findmetesting.com
Mélinda@findmetesting.com
Bécassine@findmetesting.com
Ruì@findmetesting.com
Zoé@findmetesting.com
Maëline@findmetesting.com
Aimée@findmetesting.com
Andréanne@findmetesting.com
Adélaïde@findmetesting.com
Laurène@findmetesting.com
Anaé@findmetesting.com
Noëlla@findmetesting.com
Anaël@findmetesting.com
Maëlyss@findmetesting.com
Lucrèce@findmetesting.com
Lén@findmetesting.com
Marie-thérèse@findmetesting.com
Maéna@findmetesting.com
Hélène@findmetesting.com
Hélèna@findmetesting.com
Méng@findmetesting.com
Crééz@findmetesting.com
Mélanie@findmetesting.com
Frédérique@findmetesting.com
Médiamass@findmetesting.com
André@findmetesting.com
Cinéma@findmetesting.com
Mégane@findmetesting.com
Amélie@findmetesting.com
Nadège@findmetesting.com
Rébecca@findmetesting.com
Médiamass@findmetesting.com
Céline@findmetesting.com
Maïly@findmetesting.com
Maï@findmetesting.com
Maëlann@findmetesting.com
Noëlla@findmetesting.com
Laurélie@findmetesting.com
Ruì@findmetesting.com
Chloé@findmetesting.com
Gaëlle@findmetesting.com
Vénus@findmetesting.com
Frédérique@findmetesting.com
Amélie@findmetesting.com
Loïs@findmetesting.com
Marlène@findmetesting.com
Stévina@findmetesting.com
Clémentine@findmetesting.com
Mégane@findmetesting.com
Méng@findmetesting.com
André@findmetesting.com
Crééz@findmetesting.com
Aí@findmetesting.com
Uò@findmetesting.com
Yú@findmetesting.com
Marie-françoise@findmetesting.com
Uò@findmetesting.com
Inès@findmetesting.com
Océane@findmetesting.com
Marie-ève@findmetesting.com
Rébecca@findmetesting.com
Zoé@findmetesting.com
Lài@findmetesting.com
Rachèle@findmetesting.com
Cécile@findmetesting.com
Maïlys@findmetesting.com
Garçon@findmetesting.com
hereiam@testing.com

It's a game of per%entage percentage.
Findme#testing Findme testing.
Over&over&over Over over over.
[findmeinbrackets], findmeinbrackets
(findmeinbrackets), findmeinbrackets
<findmeinbrackets>, findmeinbrackets
{findmeinbrackets>}, findmeinbrackets
http://findme-testing.here.com
http:\\findme-testing.here.com

Vestibulum ante ipsum primis in faucibus orci luctus et ultrices Garçon@findmetesting.com cubilia Curae; Mauris viverra diam vitae quam. Suspendisse potenti. 
Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Ellerey.Fanti@findmetesting.cn risus. Praesent lectus.

Vivamus metus arcu, adipiscing findmetesting@findmetesting.com, hendrerit at, vulputate vitae, nisl.

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH"
Fq6ivja8,Forminator - check and prevent duplicate entries,adczk,PHP,Wednesday 21st of June 2023 05:08:00 AM CDT,"<?php
/**
* Plugin Name: [Forminator Pro] - Prevent duplicate entries
* Plugin URI: https://premium.wpmudev.org/
* Description: Allow to filter values and prevent duplicate entries for selected forms and fields (as of 1.8.1)
* Author: Alessandro Kaounas @ WPMUDEV
* Author URI: https://premium.wpmudev.org/
* License: GPLv2 or later
*/
if ( ! defined( 'ABSPATH' ) ) {
	exit;
}

if ( ! class_exists( 'WPMUDEV_Forminator_Duplicate_Entries' ) ) {
    class WPMUDEV_Forminator_Duplicate_Entries {
        private static $_instance = null;
		private $fields_to_check = array(
            // User defined - One form per line with selected fields (must exists in forms' settings)
            // Example: $form_id => array('field-1', 'field-2', ..., 'field-n')
			22246 => array('phone-3', 'email-4')
        );
        public static function get_instance() {
            if( is_null( self::$_instance ) ){
                self::$_instance = new WPMUDEV_Forminator_Duplicate_Entries();
            }
            return self::$_instance;
        }
        private function __construct() {
            add_filter( 'forminator_custom_form_submit_errors', array( $this, 'forminator_avoid_duplicate_entries'), 999, 3 );  	
        }
		function forminator_avoid_duplicate_entries($entry, $form_id, $field_data_array){
            if( empty( $this->fields_to_check[$form_id] ) ) return $entry;
			global $wpdb;
			$duplicate = false;
			$frmt_form_entry = $wpdb->prefix . 'frmt_form_entry';
			$frmt_form_entry_meta = $wpdb->prefix . 'frmt_form_entry_meta';
			foreach($this->fields_to_check as $form){
                foreach($form as $field){
                    $field_key = array_search($field, array_column($field_data_array, 'name'));
                    if($field_key === false) continue;
                    $sql_query = ""SELECT COUNT(`meta_value`) FROM `$frmt_form_entry_meta` WHERE `entry_id` IN (SELECT `entry_id` FROM `$frmt_form_entry` WHERE `form_id` = $form_id) AND `meta_key` = '$field' AND `meta_value` = '%s' GROUP BY `meta_value`;"";
                    if( $wpdb->query( $wpdb->prepare( $sql_query, $field_data_array[$field_key]['value'] ) ) ){
                        $duplicate = true;
                        break;
                    }
                }
			}
			if(!$duplicate) return $entry;
			// Just in case something has changed in database schema
			if(($wpdb->get_var(""SHOW TABLES LIKE '$frmt_form_entry';"") != $frmt_form_entry) || 
			($wpdb->get_var(""SHOW TABLES LIKE '$frmt_form_entry_meta';"") != $frmt_form_entry_meta)) return $entry;
			$response = array(
				'message' => __( 'The survey with similar data has been already submitted / A felmérés a megadott adatokkal már rögzítésre került', 'forminator' ),
				'success' => false,
				'errors'  => array(),
				'behav'   => ''
			);
			echo wp_send_json(['success' => false, 'data' => $response]);
			return $entry;
		}
	}
    if ( ! function_exists( 'wpmudev_forminator_avoid_duplicate_entries' ) ) {
        function wpmudev_forminator_avoid_duplicate_entries() {
            return WPMUDEV_Forminator_Duplicate_Entries::get_instance();
        };
        add_action( 'plugins_loaded', 'wpmudev_forminator_avoid_duplicate_entries', 99 );
    }
}"
5yuTNt2i,Untitled,35657,C++,Wednesday 21st of June 2023 05:06:03 AM CDT,"#define _CRT_SECURE_NO_WARNINGS

#include <iostream>
#include <string.h>

using namespace std;

struct contact {
	char name[100];
	char mobile_phone[20];
	char home_phone[20];
	char work_phone[20];
};

class phone_book {

public:

	phone_book() : store(new contact* [100]), contacts_number(0), max_contacts_number(100) {}

	phone_book(int max_number) : store(new contact* [max_number]), contacts_number(0), max_contacts_number(max_number) {}

	phone_book(contact arr[], int arr_size) : store(new contact* [100]), contacts_number(0), max_contacts_number(100) {
		for (int i = 0; i < arr_size; i++) {
			AddContact(arr[i].name, arr[i].mobile_phone, arr[i].home_phone, arr[i].work_phone);
		}
	}

	phone_book(const phone_book& other) : store(new contact* [other.max_contacts_number]), contacts_number(0), max_contacts_number(other.max_contacts_number) {
		for (int i = 0; i < other.contacts_number; i++) {
			AddContact(other.store[i]->name, other.store[i]->mobile_phone, other.store[i]->home_phone, other.store[i]->work_phone);
		}
	}

	phone_book& operator=(const phone_book& other) {
		if (this != &other) {
			for (int i = 0; i < contacts_number; i++) {
				delete store[i];
			}
			delete[] store;
			contacts_number = 0;
			max_contacts_number = other.max_contacts_number;
			store = new contact * [max_contacts_number];
			for (int i = 0; i < other.contacts_number; i++) {
				AddContact(other.store[i]->name, other.store[i]->mobile_phone, other.store[i]->home_phone, other.store[i]->work_phone);
			}
		}
		return *this;
	}

	phone_book(phone_book&& other) : store(other.store), contacts_number(other.contacts_number), max_contacts_number(other.max_contacts_number) {
		other.store = nullptr;
		other.contacts_number = 0;
		other.max_contacts_number = 0;
	}

	phone_book& operator=(phone_book&& other) {
		if (this != &other) {
			for (int i = 0; i < contacts_number; i++) {
				delete store[i];
			}
			delete[] store;
			store = other.store;
			contacts_number = other.contacts_number;
			max_contacts_number = other.max_contacts_number;
			other.store = nullptr;
			other.contacts_number = 0;
			other.max_contacts_number = 0;
		}
		return *this;
	}

	friend ostream& operator<<(ostream& output, const phone_book& book);

	bool operator==(const phone_book& other) {
		if (this->contacts_number != other.contacts_number) {
			return false;
		}
		for (int i = 0; i < contacts_number; i++) {
			if (strcmp(other.store[i]->name, store[i]->name) || strcmp(other.store[i]->mobile_phone, store[i]->mobile_phone) || strcmp(other.store[i]->home_phone, store[i]->home_phone) || strcmp(other.store[i]->work_phone, store[i]->work_phone)) {
				return false;
			}
		}
		return true;
	}

	bool operator!=(const phone_book& other) {
		return !(*this == other);
	}

	void AddContact(const char name[], const char mobile_phone[], const char home_phone[], const char work_phone[]) { // не забывать ставить const, иначе не скомпилируется
		if (contacts_number == max_contacts_number) {
			cout << ""The contact cannot be added"" << endl;
			return;
		}
		store[contacts_number] = new contact{};
		strcpy(store[contacts_number]->name, name);
		strcpy(store[contacts_number]->mobile_phone, mobile_phone);
		strcpy(store[contacts_number]->home_phone, home_phone);
		strcpy(store[contacts_number]->work_phone, work_phone);
		contacts_number++;
	}

	void DelContact(const char name[]) {
		for (int i = 0; i < contacts_number; i++) {
			if (!strcmp(store[i]->name, name)) { // возвращает 0 если строки одинаковые, поэтому используем ! (чтобы возврат нуля означал ""истину"")
				delete store[i];
				for (int j = i; j < contacts_number - 1; j++) {
					store[j] = store[j + 1];
				}
				store[contacts_number - 1] = nullptr;
				contacts_number--;
			}
		}
	}

	void FindContactName(const char name[]) {
		cout << ""Found according to your request: "" << endl;
		for (int i = 0; i < contacts_number; i++) {
			if (!strcmp(store[i]->name, name)) {
				cout << '\""' << store[i]->name << ""\"", mobile_phone: "" << store[i]->mobile_phone << "", home_phone: "" << store[i]->home_phone << "", work_phone: "" << store[i]->work_phone << endl;
			}
		}
		cout << endl;
	}

	~phone_book() {
		for (int i = 0; i < contacts_number; i++) {
			delete store[i];
		}
		delete[] store;
	}

private:
	contact** store;
	int contacts_number;
	int max_contacts_number;

};

ostream& operator<<(ostream& output, const phone_book& book) {
	output << ""The following contacts are available: "" << endl;
	if (book.contacts_number == 0) {
		output << ""No contacts"";
	}
	for (int i = 0; i < book.contacts_number; ++i) {
		output << '\""' << book.store[i]->name << ""\"", mobile_phone: "" << book.store[i]->mobile_phone << "", home_phone: "" << book.store[i]->home_phone << "", work_phone: "" << book.store[i]->work_phone << endl;
	}
	output << endl;
	return output;
}


int main() { // для проверки функционала

	phone_book my_store; // для проверки конструктора по умолчанию

	//phone_book my_store(50); // для проверки конструктора для одного параметра

	//contact some_contacts[]{ {""Ivan"", ""+79111111111"", ""111111"", ""121212""}, {""Zhenya"", ""+79111111333"", ""111133"", ""121233""}}; // для проверки конструктора для двух параметров (закомментировать первые два добавления контакта)

	//phone_book my_store(some_contacts, 2); // для проверки конструктора для двух параметров

	my_store.AddContact(""Ivan"", ""+79111111111"", ""111111"", ""121212"");
	my_store.AddContact(""Zhenya"", ""+79111111333"", ""111133"", ""121233"");
	my_store.AddContact(""Galya"", ""+79115511333"", ""166133"", ""127733"");
	my_store.AddContact(""Olya"", ""+79115511333"", ""166133"", ""127733"");

	cout << my_store;

	my_store.DelContact(""Zhenya"");

	cout << my_store;

	my_store.AddContact(""Zhenya"", ""+79111111333"", ""111133"", ""121233"");

	my_store.FindContactName(""Galya"");

	cout << ""my_store: "" << endl;

	cout << my_store;

	phone_book my_store2(my_store);

	cout << ""my_store2: "" << endl;

	cout << my_store2;

	phone_book my_store3;

	my_store3 = my_store2;

	cout << ""my_store3: "" << endl;

	cout << my_store3;

	cout << boolalpha;

	cout << (my_store == my_store2) << endl;

	cout << (my_store != my_store2) << endl;

	my_store3 = move(my_store2);

	phone_book my_store4(move(my_store3));

	cout << my_store2;

	cout << my_store3;

	cout << my_store4;

}
"
D8BcmKes,Untitled,xidharth,JavaScript,Wednesday 21st of June 2023 04:58:48 AM CDT,"in app,
full flow for khalti
instant payment"
JNFsinAV,parser-interface,faf0be,TypeScript,Wednesday 21st of June 2023 04:54:17 AM CDT,"enum ServiceProvidingMode {
    notProvided = 0, // услуга не предоставляется
    providedAutomatically = 1, // услуга предоставляется и учитывается калькулятором
    providedManually = 2, // услуга предоставляется (компания пишет об этом на сайте),
    // но калькулятор не учитывает её стоимость расчетах
}

abstract class Parser {
    abstract calculatePrice(inputParameters: InputParameters): Promise<OutputParameters[]>;

    cargoLimits: {
        singlePlaceLimits: {
            oversizeDetailedLimits: DetailedSinglePlaceLimits,
            criticalDetailedLimits: DetailedSinglePlaceLimits,

            oversizeSimplifiedLimits: SimplifiedSinglePlaceLimits,
            criticalSimplifiedLimits: SimplifiedSinglePlaceLimits,
        },
        shipmentLimits: {
            criticalSimplifiedLimits: SimplifiedShipmentLimits,
            criticalDetailedLimits: DetailedShipmentLimits,
        }
    }

    deliveryDerivalCountries: Country[];
    deliveryArrivalCountries: Country[];

    additionalServicesProvided: {
        insurance: ServiceProvidingMode,
        furring: ServiceProvidingMode,
        doorToTerminalDelivery: ServiceProvidingMode,
        terminalToDoorDelivery: ServiceProvidingMode,
    };

    packing(
        cargoParamsList: CargoParams[],
        criticalDetailedShipmentLimits?: DetailedShipmentLimits,
        criticalSimplifiedShipmentLimits?: SimplifiedShipmentLimits,
    ): Consignment[] {
        // упаковка грузов: эффективно разделяет набор грузов на партии (consignments)
		// при этом возможно деление одного CargoParams на несколько новых с меньшим CargoParams.quantity
		// использует this.cargoLimits, если criticalDetailedShipmentLimits или criticalSimplifiedShipmentLimits нет в аргументах
		// this.cargoLimits, this.deliveryDerivalCountries, this.deliveryArrivalCountries и this.additionalServicesProvided загружаются и обновляются автоматически при поднятии сервера
		// с ними можно работать как с объектами, заполненными некоторыми значениями
    }
	
	// вспомогательная функция для разбиения всех грузов на габаритные и негабаритные в соответствии с лимитами
	// используется в парсерах
    classifying(
        cargoParamsList: CargoParams[],
        oversizeDetailedSinglePlaceLimits?: DetailedSinglePlaceLimits,
        oversizeSimplifiedSinglePlaceLimits?: SimplifiedSinglePlaceLimits,
    ): { oversize: CargoParams[], ordinary: CargoParams[] } {
        if (!oversizeDetailedSinglePlaceLimits) {
            oversizeDetailedSinglePlaceLimits = this.cargoLimits.singlePlaceLimits.oversizeDetailedLimits;
        }
        if (!oversizeSimplifiedSinglePlaceLimits) {
            oversizeSimplifiedSinglePlaceLimits = this.cargoLimits.singlePlaceLimits.oversizeSimplifiedLimits;
        }

        let oversizeCargoParams = [];
        let ordinaryCargoParams = [];

        cargoParamsList.forEach(cargoParams => {
            if (cargoParams instanceof DetailedCargoParams) {
                if (oversizeDetailedSinglePlaceLimits.areSinglePlaceLimitsPassed(cargoParams)) {
                    ordinaryCargoParams.push(cargoParams);
                } else {
                    oversizeCargoParams.push(cargoParams);
                }
            }
            if (cargoParams instanceof SimplifiedCargoParams) {
                if (oversizeSimplifiedSinglePlaceLimits.areSinglePlaceLimitsPassed(cargoParams)) {
                    ordinaryCargoParams.push(cargoParams);
                } else {
                    oversizeCargoParams.push(cargoParams);
                }
            }
        });

        return {
            oversize: oversizeCargoParams,
            ordinary: ordinaryCargoParams,
        }
    }

	// вспомогательная функция для проверки набора грузов
	// используется в парсерах
    areSinglePlaceLimitsPassed(
        cargoParamsList: CargoParams[],
        detailedParams: DetailedSinglePlaceLimits,
        simplifiedParams: SimplifiedSinglePlaceLimits
    ): boolean {
        return !cargoParamsList.some(cargoParams => {
            if (cargoParams instanceof DetailedCargoParams) {
                return !detailedParams.areSinglePlaceLimitsPassed(cargoParams);
            }
            if (cargoParams instanceof SimplifiedCargoParams) {
                return !simplifiedParams.areSinglePlaceLimitsPassed(cargoParams);
            }
            throw Error('Invalid cargo params instance');
        });
    }
}"
aGMLFbzD,5.3. DataLake,funkyabe,Python,Wednesday 21st of June 2023 04:46:30 AM CDT,"from datetime import datetime as dt
import datetime
import sys
import os
os.environ['HADOOP_CONF_DIR'] = '/etc/hadoop/conf'
os.environ['YARN_CONF_DIR'] = '/etc/hadoop/conf'

import findspark
findspark.init()
findspark.find()

from pyspark.sql import SparkSession
import pyspark.sql.functions as F
from pyspark.sql.window import Window

def main():
    date = sys.argv[1]
    depth = sys.argv[2]
    base_path = sys.argv[3]
    output_base_path = sys.argv[4]

    spark = SparkSession.builder \
                    .master(""local"") \
                    .appName(""5.3 DataLake"") \
                    .getOrCreate()
    
    paths = []
    need_date = dt.strptime(date,""%Y-%m-%d"")    

    for i in range(int(depth)):
        paths.append(
            f'{base_path}/date={(need_date-datetime.timedelta(days=i)).strftime(""%Y-%m-%d"")}'
        )

    messages = spark.read.option(""basePath"", base_path).parquet(*paths).where(""event_type='message'"")
    subscriptions = spark.read.parquet(base_path).where(f""event_type = 'subscription' and date <= '{date}'"")
    top_tags = spark.read.parquet('/user/funkyabe/analytics/user_interests_d7')
    verified_tags = spark.read.parquet(""/user/master/data/snapshots/tags_verified/actual"")

    direct_messages = messages.where(""event.message_to is not null"").select(F.col('event'))
    posts = messages.where(""event.message_channel_to is not null"")

    users = direct_messages.selectExpr([""event.message_from as user_id"", 'event.message_to as contact_id']) \
        .unionByName(direct_messages.selectExpr([""event.message_to as user_id"", 'event.message_from as contact_id'])) \
        .distinct().orderBy(['user_id', 'contact_id'])
    
    unpivotExpr = ""stack(6, 'like_tag_top_1', like_tag_top_1, 'like_tag_top_2', like_tag_top_2, 'like_tag_top_3', like_tag_top_3, 'dislike_tag_top_1', dislike_tag_top_1, 'dislike_tag_top_2', dislike_tag_top_2, 'dislike_tag_top_3', dislike_tag_top_3) as (tag_rank, tag)""

    tags_by_user = top_tags.select(
        F.col('user_id').alias('contact_id'),
        F.col('like_tag_top_1'),
        F.col('like_tag_top_2'),
        F.col('like_tag_top_3'),
        F.col('dislike_tag_top_1'),
        F.col('dislike_tag_top_2'),
        F.col('dislike_tag_top_3')
    ).select(
        F.col('contact_id'),
        F.expr(unpivotExpr)
    ).withColumn('tag_type', F.when(F.col('tag_rank').contains('dislike'), 'dislike') \
                            .when(F.col('tag_rank').contains('like'), 'like'))
    
    window = Window().partitionBy(""user_id"",""tag_type"").orderBy(F.desc(""tag_count""), F.desc(""tag""))

    direct_tags = users \
                    .join(tags_by_user,'contact_id', 'full_outer') \
                    .orderBy(['user_id', 'contact_id']) \
                    .select(F.col(""user_id""), F.col(""tag""), F.col('tag_type')) \
                            .groupBy(""user_id"",""tag"", 'tag_type') \
                            .agg(F.count(""*"").alias(""tag_count"")) \
                            .withColumn('tag_rank', F.row_number().over(window)) \
                            .where(""tag_rank <= 3"") \
                            .groupBy('user_id', ""tag_type"") \
                            .pivot('tag_rank') \
                            .agg(F.first('tag')) 

    direct_like_tags = direct_tags.filter(F.col('tag_type')=='like') \
        .select(
            F.col(""user_id"").alias(""user_id""), 
            F.col('1').alias(""direct_like_tag_top_1""), 
            F.col('2').alias(""direct_like_tag_top_2""), 
            F.col('3').alias(""direct_like_tag_top_3"")
        )
    
    direct_dislike_tags = direct_tags.filter(F.col('tag_type')=='dislike') \
        .select(
            F.col(""user_id"").alias(""user_id""), 
            F.col('1').alias(""direct_dislike_tag_top_1""), 
            F.col('2').alias(""direct_dislike_tag_top_2""), 
            F.col('3').alias(""direct_dislike_tag_top_3"")
        )
    
    verified_sub_tags = posts.select(
        F.col(""event.message_channel_to"").alias(""channel_id""),
        F.col(""event.tags"").alias(""tags"")
    ).join(subscriptions,
        (F.col(""event.subscription_channel"") == F.col(""channel_id"")), 'full_outer'
    ).select(
        F.col(""event.user"").alias(""user_id""), F.explode(F.col(""tags"")).alias(""tag"")
    ).join(verified_tags, ""tag"", ""left_semi"")

    sub_ver_top_tags = verified_sub_tags\
                        .groupBy(""user_id"", ""tag"")\
                        .agg(F.countDistinct(""*"").alias(""tag_count""))\
                        .withColumn(""rank"", F.row_number().over(Window.partitionBy(""user_id"").orderBy(F.desc(""tag_count""), F.desc(""tag""))))\
                        .where(""rank <= 3"")\
                        .groupBy(""user_id"")\
                        .pivot(""rank"", [1, 2, 3])\
                        .agg(F.first(""tag""))\
                        .withColumnRenamed(""1"", ""sub_verified_tag_top_1"")\
                        .withColumnRenamed(""2"", ""sub_verified_tag_top_2"")\
                        .withColumnRenamed(""3"", ""sub_verified_tag_top_3"")
    
    final_df = direct_like_tags.join(direct_dislike_tags, 'user_id', 'full_outer').join(sub_ver_top_tags, 'user_id', 'full_outer')

    final_df.write.mode(""overwrite"").parquet(f'{output_base_path}/date={date}')

if __name__ == ""__main__"":
    main()"
cUP2ZUiP,outpu-parameters,faf0be,TypeScript,Wednesday 21st of June 2023 04:45:24 AM CDT,"import {Parameter} from ""./parameter-interface"";

export enum TransferType {
    auto = ""авто"",
    avia = ""авиа"",
    train = ""жд"",
    express = ""экспресс"",
    container = ""контейнер"",
    unknown = ""-"",
}

export class CompanyWebsiteURL extends Parameter {
    readonly url: string

    constructor(urlString: string) {
        super();
        this.url = urlString;
        if (!this.isValid()){
            throw new Error(""Company website URL param isn't valid"");
        }
    }

    // <a href=""ссылка""></a>
    isValid(){
        let regExp = /^(http(s)?:\/\/.)?(www\.)?[-a-zA-Z0-9@:%._+~#=]{2,256}\.[a-z]{2,6}\b([-a-zA-Z0-9@:%_+.~#?&/=]*)$/;
        return regExp.test(this.url);
    }
}

export class Company extends Parameter {
    readonly company: string;

    constructor(companyName: string) {
        super();
        this.company = companyName;
        if (!this.isValid()){
            throw new Error(""Company name param isn't valid"");
        }
    }

    isValid(){
        return this.company.length > 0;
    }
}

export class Price extends Parameter {
    readonly numPrice: number;
    readonly truncatedPrice: string;

    constructor(price: number) {
        super();
        this.numPrice = price;
        this.truncatedPrice = price.toFixed(2);
        if (!this.isValid()) {
            throw new Error(""Price param isn't valid"");
        }
    }

    isValid() {
        return this.numPrice > 0;
    }
}

export enum Currency {
    rub = ""RUB"",
    usd = ""USD"",
    eur = ""EUR"",
    byn = ""BYN"",
    kzt = ""KZT"",
    amd = ""AMD"",
    gel = ""GEL"",
    azn = ""AZN"",
    kgs = ""KGS"",
    uzs = ""UZS"",
}

export class DeliveryTime extends Parameter {
    readonly minPeriod: number;
    readonly maxPeriod: number;
    readonly timeGap: string | number;

    constructor(timeGap: string | number) {
        super();
        if (typeof timeGap === ""string"") {
            timeGap = timeGap.trim();
            if (timeGap.includes('-') &&
                timeGap.split('-')[0].length && timeGap.split('-')[1].length &&
                timeGap.split('-')[0] === timeGap.split('-')[1]
            ) {
                timeGap = timeGap.split('-')[0];
            }
            this.timeGap = timeGap;
            if (this.isValid()) {
                if (timeGap !== '-') {
                    if (timeGap.split('-').length > 1) {
                        [this.minPeriod, this.maxPeriod] = timeGap.split(""-"").map(str => parseInt(str));
                    } else {
                        [this.minPeriod, this.maxPeriod] = [parseInt(timeGap), parseInt(timeGap)];
                    }
                }
            } else {
                throw new Error(""Delivery time param isn't valid"");
            }
        } else {
            this.timeGap = timeGap;
            this.minPeriod = timeGap;
            this.maxPeriod = timeGap;
            if (!this.isValid()) {
                throw new Error(""Delivery time param isn't valid"");
            }
        }
    }

    //# могут ли ещё какие-то параметры быть ""-""?
    isValid() {
        // либо число, например 3, либо диапазон через дефис, например 4-5, либо ""-""
        return (typeof this.timeGap === ""number"" && this.minPeriod > 0 && this.maxPeriod >= this.minPeriod)
            || (typeof this.timeGap === ""string"" && /^\d+(-\d+)?$/.test(this.timeGap))
            || (typeof this.timeGap === ""string"" && this.timeGap === ""-"");
    }
}

export class CompanyComment extends Parameter {
    readonly comment: string;

    constructor(comment: string) {
        super();
        this.comment = comment;
        if (!this.isValid()){
            throw new Error(""Comment param isn't valid"");
        }
    }

    isValid(){
        return true;
    }
}

export class OutputParameters {
    readonly company: Company;
    readonly url: CompanyWebsiteURL;
    readonly transferType: TransferType;
    readonly price: Price;
    readonly currency: Currency;
    readonly deliveryTime: DeliveryTime;
    readonly comment: CompanyComment;
    id: number;
    companyImgName: string;
    rubEquivalent?: Price;

    constructor(
        company: string,
        url: string,
        transferType: string,
        price: number,
        currency: string,
        deliveryTime: string | number,
        comment?: string
    ) {
        this.company = new Company(company);
        this.url = new CompanyWebsiteURL(url);
        switch (transferType) {
            case ""авто"":
                this.transferType = TransferType.auto;
                break;
            case ""авиа"":
                this.transferType = TransferType.avia;
                break;
            case ""жд"":
                this.transferType = TransferType.train;
                break;
            case ""экспресс"":
                this.transferType = TransferType.express;
                break;
            case ""контейнер"":
                this.transferType = TransferType.container;
                break;
            case ""-"":
                this.transferType = TransferType.unknown;
                break;
            default:
                throw new Error(""Transfer type param isn't valid"")
        }

        switch (currency) {
            case ""EUR"":
                this.currency = Currency.eur;
                break;
            case ""USD"":
                this.currency = Currency.usd;
                break;
            case ""RUB"":
                this.currency = Currency.rub;
                break;
            case ""BYN"":
                this.currency = Currency.byn;
                break;
            case ""KZT"":
                this.currency = Currency.kzt;
                break;
            case ""AMD"":
                this.currency = Currency.amd;
                break;
            case ""GEL"":
                this.currency = Currency.gel;
                break;
            case ""AZN"":
                this.currency = Currency.azn;
                break;
            case ""KGS"":
                this.currency = Currency.kgs;
                break;
            case ""UZS"":
                this.currency = Currency.uzs;
                break;
            default:
                throw new Error(""Currency param isn't valid"");
        }

        this.price = new Price(price);
        this.deliveryTime = new DeliveryTime(deliveryTime);
        this.comment = new CompanyComment(comment);
    }

    get json() {
        return {
            company: this.company.company,
            url: this.url.url,
            transferType: this.transferType,
            price: this.price.truncatedPrice,
            currency: this.currency,
            deliveryTime: this.deliveryTime.timeGap ? this.deliveryTime.timeGap : '-',
            minTime: this.deliveryTime.minPeriod ? this.deliveryTime.minPeriod : '-',
            maxTime: this.deliveryTime.maxPeriod ? this.deliveryTime.maxPeriod : '-',
            comment: this.comment.comment,
            companyImgName: this.companyImgName,
            rubEquivalentPrice: this.rubEquivalent.truncatedPrice,
        }
    }
}
"
SWCbLEd2,workcpp_6_2,plarmi,C++,Wednesday 21st of June 2023 04:30:13 AM CDT,"#include <iostream>
#include <string>
#include <algorithm>
#include <windows.h>

class String {
private:
    std::string str;

public:
    String(const std::string& s) : str(s) {}

    std::string operator*(const String& other) {
        std::string result;

        // Проходимся по каждому символу в текущей строке
        for (char c : str) {
            // Если символ также присутствует в другой строке и отсутствует в результате,
            // добавляем его в результат
            if (other.str.find(c) != std::string::npos && result.find(c) == std::string::npos) {
                result.push_back(c);
            }
        }

        return result;
    }
};

int main() {
    SetConsoleCP(1251);
    SetConsoleOutputCP(1251);
    String str1(""sdqcg"");
    String str2(""rgfas34"");

    std::string intersection = str1 * str2;
    std::cout << ""Пересечение: "" << intersection << std::endl;

    return 0;
}

"
R440pe1Z,workcpp_6_1,plarmi,C++,Wednesday 21st of June 2023 04:20:20 AM CDT,"#include <iostream>
#include <windows.h>

class Date {
private:
    int day;
    int month;
    int year;

public:
    Date(int day, int month, int year) : day(day), month(month), year(year) {}

    int operator-(const Date& other) {
        // Преобразуем обе даты в количество дней
        int thisDays = day + month * 30 + year * 365;
        int otherDays = other.day + other.month * 30 + other.year * 365;

        return thisDays - otherDays;
    }

    Date operator+(int days) {
        // Добавляем указанное количество дней к текущей дате
        int totalDays = day + month * 30 + year * 365;
        totalDays += days;

        // Преобразуем общее количество дней обратно в дату
        int newYear = totalDays / 365;
        int newMonth = (totalDays % 365) / 30;
        int newDay = (totalDays % 365) % 30;

        return Date(newDay, newMonth, newYear);
    }
    int getDay() {
        return day;
    }
    int getMonth() {
        return month;
    }
    int getYear() {
        return year;
    }
};

int main() {
    SetConsoleCP(1251);
    SetConsoleOutputCP(1251);
    Date date1(1, 1, 2023);
    Date date2(31, 12, 2022);

    int diff = date1 - date2;
    std::cout << ""Разница в днях: "" << diff << std::endl;

    Date newDate = date1 + 10;
    std::cout << ""Новая дата: "" << newDate.getDay() << ""."" << newDate.getMonth() << ""."" << newDate.getYear() << std::endl;

    return 0;"
jQmCEQmc,DELETE duplicate row,gipasoft,SQL,Wednesday 21st of June 2023 04:15:21 AM CDT,"USE FAD_Planning

DELETE T
FROM
(
	SELECT *
	, DupRank = ROW_NUMBER() OVER (
				  PARTITION BY IdCourseEvent, IdUser, LessonCode, Text
				  ORDER BY (SELECT NULL)
				)
	FROM Comments
) AS T
WHERE DupRank > 1 "
T2QAcRYW,Untitled,Bilkash,TypeScript,Wednesday 21st of June 2023 04:15:21 AM CDT,"// given a string
const str = 'one two three two one four five';

// return a count of duplicate words in that string

function countDuplicates(str: string): number {
  // your code goes hereit => 
  const arr = str.split("" "");
	const wordCount = {};

	for (const it of arr) {
    if (wordCount[it]) {
      wordCount[word]++;
    } else {
      wordCount[word] = 1;
    }
  }

	let duplicate = 0;
	for (const countItem in wordCount) {
    if (wordCount[countItem] > 1) {
      duplicate++;
    }
  }

	return dulicate;
}

console.log(countDuplicates(str)); // 2"
7b1uqfds,Untitled,marfino3028,JavaScript,Wednesday 21st of June 2023 03:08:10 AM CDT,"$(function () {
  $(""#negara"").selectize();
  $(""#description"").summernote({
    placeholder: ""Deskripsikan permasalahan"",
    tabsize: 4,
    dialogsInBody: true,
    airMode: true,
    height: 150,
    toolbar: [
      // [groupName, [list of button]]
      ['style', ['bold', 'italic', 'underline', 'clear']],
      ['font', ['strikethrough', 'superscript', 'subscript']],
      ['fontsize', ['fontsize']],
      ['color', ['color']],
      ['para', ['ul', 'ol', 'paragraph']],
      ['height', ['height']]
    ],
    tabsize: 4,
    height: 150,
  });
  $('.dropdown-toggle').dropdown()
  $(""#hsgroup"").on(""change"", function () {
    hscode_js($(""#hsgroup"").val());
  });

  $(""#modal"").on(""hidden.bs.modal"", function () {
    $(""#form-data"").find("".form-control"").removeClass(""is-invalid"");
    $(""#form-data"")[0].reset();
    $(""#id"").val("""");
    $(""#description"").summernote(""code"", """");
    $(""#hsgroup"").val("""");
    $(""#produk"").val("""");
    $(""#tgl_inisiasi"").val("""");
    $(""#kebijakan"").val("""");

    $(""#negara"").selectize()[0].selectize.setValue("""");

    $("".document-sidang-content"").empty();
  });

  $(""#add-files"").click(function () {
    $("".document-sidang-content"").append(templateFile());

    minimizeFile();
    removeFile();
  });

  $(""#form-data"").submit(function (e) {
    e.preventDefault();

    $.ajaxPrefilter(function (options, originalOptions, jqXHR) {
      jqXHR.setRequestHeader(
        ""X-CSRF-Token"",
        $('input[name=""csrf_baseben""]').val()
      );
    });

    let formData = new FormData(this);

    $.ajax({
      url: ""trade-barrier/store"",
      type: ""post"",
      data: formData,
      dataType: ""json"",
      cache: false,
      processData: false,
      contentType: false,
      beforeSend: function () {
        $("".form-control"").removeClass(""is-invalid"");
      },
      success: function (response) {
        if (response.success) {
          $('#modal').modal('hide');
          Swal.fire({
            title: response.message,
            icon: ""success"",
          }).then(function () {
            window.location.href = response.redirect;
          });
        } else if (!response.success) {
          $.each(response.validation, function (id, message) {
            $(""#"" + id).addClass(""is-invalid"");
            $(""#"" + id)
              .closest("".row"")
              .find("".invalid-feedback"")
              .text(message);
          });
        }
      },
      error: function (request, status, error) {
        if (request.status != 200) {
          Swal.fire({
            title: ""Internal Server Error."",
            icon: ""error"",
          });
        }
      },
    });
  });
});


function showUpdate(id) {
  $.ajaxPrefilter(function (options, originalOptions, jqXHR) {
    jqXHR.setRequestHeader(
      ""X-CSRF-Token"",
      $('input[name=""csrf_baseben""]').val()
    );
  });

  $.ajax({
    url: ""trade-barrier/update"",
    type: ""POST"",
    data: {
      id: id,
    },
    dataType: ""json"",
    success: function (response) {
      if (response.success) {
        const dataTrade = response.data.dataTrade;

        $(""#id"").val(dataTrade.id);
        $(""#tgl_inisiasi"").val(dataTrade.tgl_inisiasi);
        $(""#produk"").val(dataTrade.produk);
        $(""#hsgroup"").val(dataTrade.hsgroup);
        $(""#kebijakan"").val(dataTrade.kebijakan);
        $(""#description"").summernote(""code"", dataTrade.desc);
        $(""#negara"").selectize()[0].selectize.setValue(dataTrade.negara);

        hscode_js(dataTrade.hsgroup, dataTrade.hscode.toString());

        if (response.data.files.length > 0) {
          $.each(response.data.files, function (i, row) {
            $("".document-sidang-content"").append(templateFileUpdate(row.file));
          });

          removeFile();
        }

        $(""#modal"").modal(""show"");
      } else {
        if (response.message.length > 0) {
          Swal.fire({
            title: response.message,
            icon: ""warning"",
          });
        }
      }
    },
    error: function (request, status, error) {
      if (request.status != 200) {
        Swal.fire({
          title: ""Internal Server Error."",
          icon: ""error"",
        });
      }
    },
  });
}

function changeStatus(id, type) {
  $.ajaxPrefilter(function (options, originalOptions, jqXHR) {
    jqXHR.setRequestHeader(
      ""X-CSRF-Token"",
      $('input[name=""csrf_baseben""]').val()
    );
  });
  Swal.fire({
    title: ""Are you sure?"",
    text: ""You won't be able to revert this!"",
    icon: ""warning"",
    showCancelButton: true,
    confirmButtonColor: ""#3085d6"",
    cancelButtonColor: ""#d33"",
    confirmButtonText: ""Yes, delete it!"",
  }).then((result) => {

    if (result.value) {
      $.ajax({
        url: ""trade-barrier/activedDetail"",
        type: ""POST"",
        data: {
          id: id,
          status: 0,
          type: type,
        },
        dataType: ""json"",
        success: function (response) {
          if (response.success) {
            Swal.fire(
              ""Deleted!"",
              ""Your file has been deleted."",
              ""success""
            ).then(function () {
              location.reload(true);
            });
          }
        },
        error: function (request, status, error) {
          if (request.status != 200) {
            Swal.fire({
              title: ""Internal Server Error."",
              icon: ""error"",
            });
          }
        },
      });
    }
  });
}

function templateFile() {
  let html = """";

    html +=
    '<div class=""document_sidang mt-3 mb-3 bg-white"">' +
    '<div class=""row"">' +
    '<div class=""col-md-12 text-end"">' +
    '<button type=""button"" class=""btn  btn-warning me-2 btn-window-option minimize-file"" title=""Minimize"">' +
    '<i class=""mdi mdi-minus""></i>' +
    ""</button>"" +
    '<button type=""button"" class=""btn   btn-danger  btn-window-option remove-file"" title=""Remove"">' +
    '<i class=""mdi mdi-trash-can-outline""></i>' +
    ""</button>"" +
    ""</div>"" +
    ""</div>"" +
    '<div class=""document-sidang-field"">' +
    '<div class=""row mb-4 mt-2"">' +
    '<label for=""horizontal-firstname-input"" class=""col-sm-2 col-form-label"">File</label>' +
    '<div class=""col-sm-10"">' +
    '<input type=""file"" name=""document_sidang[]"" class=""form-control"">' +
    '<div class=""invalid-feedback"">Looks good!</div>' +
    ""</div>"" +
    ""</div>"" +
    ""</div>"" +
    ""</div>"";

  return html;
}

function templateFileUpdate(filename) {
  let html = """";

  html +=
    '<div class=""document_sidang mt-3"">' +
    '<div class=""document-sidang-field"">' +
    '<div class=""row "">' +
    '<label for=""horizontal-firstname-input"" class=""col-sm-10 col-form-label"">' +
    filename +
    ""</label>"" +
    '<div class=""col-md-2 mt-2 text-end"">' +
    '<button type=""button"" class=""btn btn-danger btn-sm btn-window-option remove-file"" data-old-file=""' +
    filename +
    '"" title=""Remove"">' +
    '<i class=""mdi mdi-trash-can-outline""></i>' +
    ""</button>"" +
    ""</div>"" +
    ""</div>"" +
    ""</div>"" +
    ""</div>"";

  return html;
}



function removeFile() {
  $("".remove-file"").on(""click"", function (event) {
    event.stopPropagation();
    event.stopImmediatePropagation();

    let oldFile = $(this).attr(""data-old-file"");

    if (oldFile != undefined) {
      $("".document-sidang-content"").append(
        '<input type=""hidden"" name=""old_files[]"" value=""' + oldFile + '"">'
      );
    }

    $(this)
      .closest("".document_sidang"")
      .hide(""slow"", function () {
        $(this).remove();
      });
  });
}


function minimizeFile() {
  $("".minimize-file"").on(""click"", function (event) {
    event.stopPropagation();
    event.stopImmediatePropagation();

    $(this)
      .closest("".document_sidang"")
      .find("".document-sidang-field"")
      .slideToggle(""slow"");

    let icon = $(this).find(""i"");

    icon.hasClass(""mdi-window-minimize"")
      ? icon.removeClass(""mdi-window-minimize"").addClass(""mdi-window-maximize"")
      : icon.removeClass(""mdi-window-maximize"").addClass(""mdi-window-minimize"");
  });
}


function hscode_js(id, selected = null) {
  $.ajaxPrefilter(function (options, originalOptions, jqXHR) {
    jqXHR.setRequestHeader(
      ""X-CSRF-Token"",
      $('input[name=""csrf_baseben""]').val()
    );
  });
  var hscode = """";

  $.ajax({
    url: ""trade-barrier/getHscode"",
    type: ""POST"",

    datatype: ""json"",
    data: {
      hsgroup: id,
    },
    beforeSend: function () {
      $(""#hscode"").selectize()[0].selectize.destroy();
    },
    success: function (response) {
      response = JSON.parse(response);
      // console.log(response.result)
      $.each(response.results, function (k, v) {
        hscode +=
          '<option value=""' +
          v.hscode +
          '"">' +
          v.hscode +
          "" - "" +
          v.uraian +
          ""</option>"";
      });
      $(""#hscode"").html(hscode);
      $(""#hscode"").selectize();
    },
    complete: function () {
      if (selected != null) {
        $(""#hscode"").selectize()[0].selectize.setValue(selected.split("",""));
      }
    },
  });
}

function changeApproval(id, type) {
  $.ajaxPrefilter(function (options, originalOptions, jqXHR) {
    jqXHR.setRequestHeader(
      ""X-CSRF-Token"",
      $('input[name=""csrf_baseben""]').val()
    );
  });
  Swal.fire({
    title: ""Approval"",
    html: `<div class=""form-check form-check-inline"">
    <input class=""form-check-input"" type=""radio"" name=""approval_status"" id=""radioApproval1"" value=""Disetujui"" checked=""checked"">
    <label class=""form-check-label"" for=""radioApproval1"">Setujui</label>
  </div>
  <div class=""form-check form-check-inline"">
    <input class=""form-check-input"" type=""radio"" name=""approval_status"" id=""radioApproval2"" value=""Perlu Perbaikan"">
    <label class=""form-check-label"" for=""radioApproval2"">Perlu Perbaikan</label>
  </div>
  <div class=""form-check form-check-inline"">
    <input class=""form-check-input"" type=""radio"" name=""approval_status"" id=""radioApproval3"" value=""Ditolak"">
    <label class=""form-check-label"" for=""radioApproval3"">Tolak</label>
  </div><br><textarea id=""approval_ket"" name=""approval_ket"" class=""swal2-input""></textarea>`,
    confirmButtonText: ""Submit"",
    showCancelButton: true,
    focusConfirm: false,
    preConfirm: () => {
      const approval = Swal.getPopup().querySelector(""#approval_ket"").value;
      const approval_status = Swal.getPopup().querySelector(
        'input[name=""approval_status""]:checked'
      ).value;
      if (!approval) {
        Swal.showValidationMessage(`Mohon isi alasan`);
      }
      return { approval: approval, approval_status: approval_status };
    },
  }).then((result) => {
    if (result.value) {
      $.ajax({
        url: ""trade-barrier/approval"",
        type: ""POST"",
        data: {
          id: id,
          approval_status: result.value.approval_status,
          approval_ket: result.value.approval,
          type: type,
        },
        dataType: ""json"",
        success: function (response) {
          if (response.success) {
            Swal.fire(""Berhasil!"", ""Approval Berhasil."", ""success"").then(
              function () {
                location.reload(true);
              }
            );
          }
        },
        error: function (request, status, error) {
          if (request.status != 200) {
            Swal.fire({
              title: ""Internal Server Error."",
              icon: ""error"",
            });
          }
        },
      });
    }
  });
}
"
ax4byYGn,Untitled,OKyJIucT,JSON,Wednesday 21st of June 2023 02:38:58 AM CDT,"{
  ""site_name"": ""dou.ua"",
  ""is_site_verified"": false,
  ""category"": ""Computers_Electronics_and_Technology/Computers_Electronics_and_Technology"",
  ""large_screenshot"": ""https://site-images.similarcdn.com/image?url=dou.ua&t=1&s=1&h=223d9a65776ab31f4a78fb38612cb2b9c2daad3feaa3bc31f57bfd99f253a849"",
  ""reach_months"": 6,
  ""data_months"": 1,
  ""global_rank"": {
    ""rank"": 24350,
    ""direction"": 880
  },
  ""country_rank"": {
    ""country"": 804,
    ""rank"": 425,
    ""direction"": 1
  },
  ""category_rank"": {
    ""category"": ""Computers_Electronics_and_Technology/Computers_Electronics_and_Technology"",
    ""rank"": 13,
    ""direction"": 1
  },
  ""title"": ""спільнота програмістів | dou"",
  ""description"": ""dou – найбільша спільнота розробників україни. все про it: цікаві статті, інтервʼю, розслідування, дослідження ринку, свіжі новини та події. спілкування на форумі з айтівцями на найгарячіші теми та технічні матеріали від експертів. вакансії, рейтинг it-компаній, відгуки співробітників, аналітика зарплат і мов програмування."",
  ""redirect_url"": ""dou.ua"",
  ""estimated_monthly_visits"": {
    ""2022-12-01"": 2492104,
    ""2023-01-01"": 2731237,
    ""2023-02-01"": 3188524,
    ""2023-03-01"": 2900066,
    ""2023-04-01"": 2455148,
    ""2023-05-01"": 2493243
  },
  ""engagments"": {
    ""year"": 2023,
    ""month"": 5,
    ""visits"": 2493243,
    ""time_on_site"": 294.0618716623627,
    ""page_per_visit"": 4.939696122131901,
    ""bounce_rate"": 0.46695561396548724
  },
  ""top_country_shares"": [
    {
      ""country"": 804,
      ""value"": 0.6455698271141235,
      ""change"": 0.1216738538741083
    },
    {
      ""country"": 276,
      ""value"": 0.05191055049306921,
      ""change"": -0.16977442232028125
    },
    {
      ""country"": 616,
      ""value"": 0.035193257849712306,
      ""change"": 0.2868551707918852
    },
    {
      ""country"": 840,
      ""value"": 0.032554086652456855,
      ""change"": 0.4906534678979439
    },
    {
      ""country"": 246,
      ""value"": 0.027816353114440986,
      ""change"": 0.17556268090583454
    }
  ],
  ""total_countries"": 252,
  ""traffic_sources"": {
    ""search"": 0.24361078314418522,
    ""social"": 0.055100352721856864,
    ""paid _referrals"": 0.00034693407389283415,
    ""referrals"": 0.04600584634947739,
    ""mail"": 0.043658282829611685,
    ""direct"": 0.611277800880976
  },
  ""referrals_ratio"": 0.04600584634947739,
  ""top_referring"": [
    {
      ""site"": ""djinni.co"",
      ""value"": 0.8372572630298575,
      ""change"": 0.15555169529429827
    },
    {
      ""site"": ""inoreader.com"",
      ""value"": 0.03312512242125548,
      ""change"": 0.3004386403173147
    },
    {
      ""site"": ""datarootlabs.com"",
      ""value"": 0.017426198449732946,
      ""change"": 6.563136501921473
    },
    {
      ""site"": ""ua.jooble.org"",
      ""value"": 0.010222518111599771,
      ""change"": 1.8491941880459866
    },
    {
      ""site"": ""ukr.net"",
      ""value"": 0.010118440930080625,
      ""change"": -0.45584256077959484
    }
  ],
  ""total_referring"": 57,
  ""top_destinations"": [
    {
      ""site"": ""youtube.com"",
      ""value"": 0.10343250072769382,
      ""change"": 0.25447359018250454
    },
    {
      ""site"": ""google.com"",
      ""value"": 0.10029806042115669,
      ""change"": 0.8081529780400861
    },
    {
      ""site"": ""t.me"",
      ""value"": 0.048843502250893095,
      ""change"": -0.010482095514100767
    },
    {
      ""site"": ""facebook.com"",
      ""value"": 0.028244718419726502,
      ""change"": 0.3194451292322368
    },
    {
      ""site"": ""linkedin.com"",
      ""value"": 0.027661548672021523,
      ""change"": -0.3702165461602731
    }
  ],
  ""total_destinations"": 783,
  ""search_ratio"": 0.24361078314418522,
  ""top_organic_keywords"": [
    {
      ""keyword"": ""dou"",
      ""value"": 0.05071136918188723,
      ""change"": -0.12062768816631964
    },
    {
      ""keyword"": ""dou ua"",
      ""value"": 0.00920346185110086,
      ""change"": -0.20731539066600727
    },
    {
      ""keyword"": ""dou.ua"",
      ""value"": 0.008697659498714101,
      ""change"": 2.1700281498474276
    },
    {
      ""keyword"": ""вщг"",
      ""value"": 0.005986665938037983,
      ""change"": -0.29909614618188335
    },
    {
      ""keyword"": ""доу"",
      ""value"": 0.005545092455795575,
      ""change"": -0.36750638820826037
    }
  ],
  ""top_paid_keywords"": [],
  ""organic_keywords_rolling_unique_count"": 12852,
  ""paid_keywords_rolling_unique_count"": 0,
  ""organic_search_share"": 1,
  ""paid_search_share"": 0,
  ""social_ratio"": 0.055100352721856864,
  ""top_social"": [
    {
      ""name"": ""youtube.com"",
      ""icon"": ""https://site-images.similarcdn.com/image?url=youtube&t=2&s=1&h=3eb0368d3b16ae09058c8d2d18bd3200710d13b70835ff604a1330d054425fb5"",
      ""site"": ""Youtube"",
      ""value"": 0.3922220188777098,
      ""change"": 0.569216427272035
    },
    {
      ""name"": ""linkedin.com"",
      ""icon"": ""https://site-images.similarcdn.com/image?url=linkedin&t=2&s=1&h=5f00f188ddec5fc72fab17a2aff1b377caf593bae811d07570ee88dc83b71b95"",
      ""site"": ""Linkedin"",
      ""value"": 0.2634954439321119,
      ""change"": 0.03216139839345666
    },
    {
      ""name"": ""l.facebook.com"",
      ""icon"": ""https://site-images.similarcdn.com/image?url=facebook&t=2&s=1&h=f40e4fb6c1ee76ff3310f84ae05ed45b6d7b5566c2c66d4f6e8de8f9d281885b"",
      ""site"": ""Facebook"",
      ""value"": 0.08153404827587436,
      ""change"": -0.17449477800187432
    },
    {
      ""name"": ""twitter.com"",
      ""icon"": ""https://site-images.similarcdn.com/image?url=twitter&t=2&s=1&h=0e069d7bb8db53a24970e210b5bd1e187bb1e96432f79f7ee7899f40cd12261a"",
      ""site"": ""Twitter"",
      ""value"": 0.0812848628249975,
      ""change"": -0.3445556720521607
    },
    {
      ""name"": ""web.telegram.org"",
      ""icon"": ""https://site-images.similarcdn.com/image?url=Telegram Webapp&t=2&s=1&h=52cb89f1fe3f6b0b90689e3666c723432a3867367dba01b1e68821469e246ad2"",
      ""site"": ""Telegram Webapp"",
      ""value"": 0.06655302722723941,
      ""change"": 0.1119369754528296
    }
  ],
  ""display_ads_ratio"": 0.00034693407389283415,
  ""top_publishers"": [],
  ""top_ad_networks"": [
    {
      ""site"": ""blogger.com (dist)"",
      ""value"": 0.45849347265147283,
      ""change"": 0
    },
    {
      ""site"": ""Unidentified Networks"",
      ""value"": 0.279476622979432,
      ""change"": 0
    },
    {
      ""site"": ""blogger.com"",
      ""value"": 0.2620299043690952,
      ""change"": 0
    }
  ],
  ""incoming_ads_rolling_unique_count"": 0,
  ""also_visited_unique_count"": 1357,
  ""similar_sites"": [
    {
      ""site"": ""djinni.co"",
      ""screenshot"": ""https://site-images.similarcdn.com/image?url=djinni.co&t=0&s=1&h=55b217b14233cad6733a44f637e493c04fe5634d19a1f21d70f9af9ff3df51b7"",
      ""rank"": 28175
    },
    {
      ""site"": ""ebanoe.it"",
      ""screenshot"": ""https://site-images.similarcdn.com/image?url=ebanoe.it&t=0&s=1&h=2c14dd1540d8f3a85e1399be24ca43f0ffdf4ac60e8b8e7c5bc4319c1f8a99f0"",
      ""rank"": 210466
    },
    {
      ""site"": ""habr.com"",
      ""screenshot"": ""https://site-images.similarcdn.com/image?url=habr.com&t=0&s=1&h=0f4aefddbc274d320b57e123907651a8fba0121a551f02138b150b0867c4bdbd"",
      ""rank"": 2191
    },
    {
      ""site"": ""dev.ua"",
      ""screenshot"": ""https://site-images.similarcdn.com/image?url=dev.ua&t=0&s=1&h=189b75af6895fed9a512d7ec938b457c3403645b67363826a51d4cfd9d8e2940"",
      ""rank"": 162310
    },
    {
      ""site"": ""highload.today"",
      ""screenshot"": ""https://site-images.similarcdn.com/image?url=highload.today&t=0&s=1&h=7e4a690812ada1d8e1fd0ebee54ed91d729bc8be14f24b657ca77029d7da6e06"",
      ""rank"": 165199
    },
    {
      ""site"": ""mate.academy"",
      ""screenshot"": ""https://site-images.similarcdn.com/image?url=mate.academy&t=0&s=1&h=63edd60e01810cd150482815250b30cb9a1c964f3d08d8dc0d7ef127e595cc43"",
      ""rank"": 97660
    },
    {
      ""site"": ""mc.today"",
      ""screenshot"": ""https://site-images.similarcdn.com/image?url=mc.today&t=0&s=1&h=e8f7940906dbb8c0ca72cf3b1b9b7f67824d97f7ebb2d93e5845ee70c653c6c8"",
      ""rank"": 122336
    },
    {
      ""site"": ""t.me"",
      ""screenshot"": ""https://site-images.similarcdn.com/image?url=t.me&t=0&s=1&h=3151265a64fa94112029f3e81d07655b605dd870fad655049a47e0f89cb877cc"",
      ""rank"": 71
    },
    {
      ""site"": ""figma.com"",
      ""screenshot"": ""https://site-images.similarcdn.com/image?url=figma.com&t=0&s=1&h=4052a8dcdcf241a97ca3c02de406207e9e9520a61e1d386b45660d98f29b03dd"",
      ""rank"": 242
    },
    {
      ""site"": ""notion.so"",
      ""screenshot"": ""https://site-images.similarcdn.com/image?url=notion.so&t=0&s=1&h=fc063f89f3f4c3ef588e5cae98b934dd92e712d95e622cb3f7837837904ebd33"",
      ""rank"": 211
    }
  ],
  ""similar_sites_by_rank"": [
    {
      ""site"": ""twitter.com"",
      ""screenshot"": ""https://site-images.similarcdn.com/image?url=twitter.com&t=0&s=1&h=05438debe431144d9c727828570d1754a25bd9286bc14f3aa65a4f05b9057e25"",
      ""rank"": 5
    },
    {
      ""site"": ""zoom.us"",
      ""screenshot"": ""https://site-images.similarcdn.com/image?url=zoom.us&t=0&s=1&h=8d7b62ea2a4830de4939cf04e4b067a49a8b4b203528c8cc3dc73a4a92f6efdb"",
      ""rank"": 49
    },
    {
      ""site"": ""t.me"",
      ""screenshot"": ""https://site-images.similarcdn.com/image?url=t.me&t=0&s=1&h=3151265a64fa94112029f3e81d07655b605dd870fad655049a47e0f89cb877cc"",
      ""rank"": 71
    },
    {
      ""site"": ""notion.so"",
      ""screenshot"": ""https://site-images.similarcdn.com/image?url=notion.so&t=0&s=1&h=fc063f89f3f4c3ef588e5cae98b934dd92e712d95e622cb3f7837837904ebd33"",
      ""rank"": 211
    },
    {
      ""site"": ""figma.com"",
      ""screenshot"": ""https://site-images.similarcdn.com/image?url=figma.com&t=0&s=1&h=4052a8dcdcf241a97ca3c02de406207e9e9520a61e1d386b45660d98f29b03dd"",
      ""rank"": 242
    },
    {
      ""site"": ""upwork.com"",
      ""screenshot"": ""https://site-images.similarcdn.com/image?url=upwork.com&t=0&s=1&h=950f51887566463d99a31f2a8785e9512e06d783a871f726af16f3b139e88881"",
      ""rank"": 729
    },
    {
      ""site"": ""calendly.com"",
      ""screenshot"": ""https://site-images.similarcdn.com/image?url=calendly.com&t=0&s=1&h=6fcacdec9570b0554ed8035d8dab8dcf0a6a8bffc7816daa4096cee926837203"",
      ""rank"": 1195
    },
    {
      ""site"": ""gitlab.com"",
      ""screenshot"": ""https://site-images.similarcdn.com/image?url=gitlab.com&t=0&s=1&h=e4c39a7b091e451042f8976a8a3977ed21eaa7429f52e8cf6ecd99af0f31d136"",
      ""rank"": 1939
    },
    {
      ""site"": ""telegram.me"",
      ""screenshot"": ""https://site-images.similarcdn.com/image?url=telegram.me&t=0&s=1&h=2492e1028d3a3e46440377df89ce61b01b7a092b991ce193cea43def0c10a5b0"",
      ""rank"": 2125
    },
    {
      ""site"": ""convertio.co"",
      ""screenshot"": ""https://site-images.similarcdn.com/image?url=convertio.co&t=0&s=1&h=e995388c379d89a1afbc5b2ff71b8f86fa9b547a859124c9f7beaafa9678fcaf"",
      ""rank"": 2130
    }
  ],
  ""mobile_apps"": {},
  ""daily_visits_min_date"": ""2022-12-01"",
  ""daily_visits_max_date"": ""2023-05-31"",
  ""top_categories"": [
    {
      ""category"": ""Computers_Electronics_and_Technology/Programming_and_Developer_Software"",
      ""affinity"": 0.16640080624892584
    },
    {
      ""category"": ""Computers_Electronics_and_Technology/Computers_Electronics_and_Technology"",
      ""affinity"": 0.13318661118641897
    },
    {
      ""category"": ""News_and_Media"",
      ""affinity"": 0.0871315703004806
    },
    {
      ""category"": ""Games/Video_Games_Consoles_and_Accessories"",
      ""affinity"": 0.04719480737849731
    },
    {
      ""category"": ""Unknown"",
      ""affinity"": 0.031963097234755655
    }
  ],
  ""top_also_visited"": [
    ""djinni.co"",
    ""linkedin.com"",
    ""github.com"",
    ""chat.openai.com"",
    ""mail.google.com""
  ],
  ""tags"": [
    {
      ""tag"": ""news"",
      ""strength"": 1
    },
    {
      ""tag"": ""новости"",
      ""strength"": 0.9520794876871578
    },
    {
      ""tag"": ""ukraine"",
      ""strength"": 0.7866903035372426
    },
    {
      ""tag"": ""google"",
      ""strength"": 0.7254774621326721
    },
    {
      ""tag"": ""новини"",
      ""strength"": 0.638258732918014
    },
    {
      ""tag"": ""software"",
      ""strength"": 0.5357460977579153
    },
    {
      ""tag"": ""украина"",
      ""strength"": 0.5205778621702541
    },
    {
      ""tag"": ""search"",
      ""strength"": 0.4830280135678767
    },
    {
      ""tag"": ""online"",
      ""strength"": 0.47245672999944127
    },
    {
      ""tag"": ""internet tools"",
      ""strength"": 0.46769105743855727
    },
    {
      ""tag"": ""internet"",
      ""strength"": 0.416423592634244
    },
    {
      ""tag"": ""sign"",
      ""strength"": 0.4146069601384751
    },
    {
      ""tag"": ""community"",
      ""strength"": 0.4108614133757364
    },
    {
      ""tag"": ""интернет"",
      ""strength"": 0.3917752221546836
    },
    {
      ""tag"": ""programming"",
      ""strength"": 0.38287508828265465
    },
    {
      ""tag"": ""видео"",
      ""strength"": 0.37494358258378524
    },
    {
      ""tag"": ""сми"",
      ""strength"": 0.35709991661766627
    },
    {
      ""tag"": ""business"",
      ""strength"": 0.3563695661946461
    },
    {
      ""tag"": ""english"",
      ""strength"": 0.3559811136278386
    },
    {
      ""tag"": ""games"",
      ""strength"": 0.32033392052999504
    }
  ]
}"
qa6qsRXs,prime?,vedranvinko,Ruby,Wednesday 21st of June 2023 02:38:15 AM CDT,"def prime?(n)
   (""1"" * n) !~ /^1?$|^(11+?)\1+$/
end"
g9BD4Yr9,register,nailacrooc12,PHP,Wednesday 21st of June 2023 12:29:30 AM CDT,"<?php
include ""config.php"";

if(isset($_POST['submit'])){

    $email = mysqli_real_escape_string($conn, $_POST['email']);
    $password = md5($_POST['password']);
    $ConfirmPassword = md5($_POST['ConfirmPassword']);
    
    $fname = mysqli_real_escape_string($conn, $_POST['fname']);
    $lname = mysqli_real_escape_string($conn, $_POST['lname']);
    $address = mysqli_real_escape_string($conn, $_POST['address']);
    $age = ($_POST['age']);
    $birthdate = ($_POST['birthdate']);
    $regdate = ($_POST['registration_date']);

    $select = "" SELECT * FROM users WHERE email = '$email' && password = '$password' "";
    $selectEmail = "" SELECT * FROM users WHERE email = '$email' "";

    $result  = mysqli_query($conn, $select);
    $EmailQueryResult = mysqli_query($conn, $selectEmail);
    $passwordLength = strlen($password);

    if (mysqli_num_rows($result) > 0) {

        $error[] = ""user already exists! "";

    }

    else if (mysqli_num_rows($EmailQueryResult) > 0) {
        $error[] = ""email already used! "";
    }

    else {
        if ($password != $ConfirmPassword) {
            $error[] = ""Passwords do not match! "";
        }
        
        // NEEDS REVISION
        else if ($passwordLength < 8) {
            $error[] = ""Password should be at least 8 characters long"";
        }else if ($age < 18) {
            $error[] = ""You must be 18 years old & above to register"";
        }else{
            $insert = ""INSERT INTO users (email, password, lastname, firstname, address, birthdate, age, registration_date, user_type) VALUES ('$email', '$password', '$lname', '$fname', '$address', '$birthdate', '$age', '$regdate', 'Voter')"";
            mysqli_query($conn, $insert);
            header('location:login.php');
        }
    }

   
 
}


?>


<!DOCTYPE html>
<html lang=""en"">
<head>

<link rel=""icon"" type=""image/x-icon"" href=""favicon1.ico"">
    <title> Create an Account</title>
    <meta charset=""UTF-8"">
    <meta http-equiv=""X-UA-Compatible"" content=""IE=edge"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <link rel=""stylesheet"" href = ""styles.css"">
    <link rel=""icon"" type=""image/x-icon"" href=""favicon1.ico"">
</head>
<body>

<div class = ""form-container"" >
    <div class = ""content"" >

    <form  method = ""post"">
        <?php
        if(isset($error)){

             foreach ($error as $error) {
                echo '<span class = ""error-msg"">'.$error.'<span>' ; 
            }
             
        }
        ?>
         <img src=""fairplay_logo.png"" alt="""" style=""width:250px""> 

<h1> CREATE AN ACCOUNT </h1>


<input type=""text"" name = ""email"" required placeholder=""E-mail"">   
<input type=""password"" name = ""password"" required placeholder=""Password"">   
<input type=""password"" name = ""ConfirmPassword"" required placeholder=""Confirm password"">
<input type=""text"" name = ""fname"" required placeholder=""Enter first name"">
<input type=""text"" name = ""lname"" required placeholder=""Enter last name"">    
<input type=""text"" name = ""address"" id=""addressInput"" required placeholder=""Enter full ddress"">    
<p> Birthdate</p>
<input type=""date"" name = ""birthdate"" id=""birthdate"" required placeholder=""Enter birthdate"">    
<p> Date of registration </p>
<input type=""date"" name = ""registration_date"" required placeholder=""Enter registration date"">    

<input type=""number"" name = ""age"" id=""age"" required placeholder=""Enter age"">    
<input type=""submit"" name = ""submit"" id=""submit"">
<h4>Already have an account? </h4>    
<a href=""login.php"">Login</a>
<h4> Return to</h4> <a href=""index.php""> homepage</a>


</form>


    </div>
</div>

<!-- Auto computes for the age -->
<script>


  // Retrieve the birthdate input element
  var birthdateInput = document.getElementById('birthdate');

  // Retrieve the age input element
  var ageInput = document.getElementById(""age"");

  // Attach an event listener to the input element
  birthdateInput.addEventListener('change', function() {
    // Retrieve the selected birthdate value
    var birthdate = new Date(this.value);

    // Retrieve the current date
    var currentDate = new Date();

    // Calculate the age
    var age = currentDate.getFullYear() - birthdate.getFullYear();

    // Update the age input field with the calculated age
    ageInput.value = age;
  });
</script>


    
</body>
</html>"
YsjZjziT,CC Turtle: Crafty,emily99,Lua,Wednesday 21st of June 2023 12:27:31 AM CDT,"if not turtle then
	printError(""Requires a Turtle"")
	return
end

local shape = { true, true, true, false, true, false, true, false, true, true, true, false, false, false, false, false }

local outputIndex
for i = 1, 16 do
	if not shape[i] then
		outputIndex = i
	end
end

local function nextIndex()
	for i = 1, 16 do
		if shape[i] then
			if turtle.getItemCount(i) == 0 then
				turtle.select(i)
				return i
			end
		end
	end
	return -1
end

while true do
	if nextIndex() == -1 then
		turtle.select(outputIndex)
		turtle.craft()
		turtle.dropUp()
	else
		turtle.suck(1)
	end
end"
fUVXGfnR,pay test,MChaos,HTML,Wednesday 21st of June 2023 12:24:24 AM CDT,"<form method=""POST"" id=""pay_form"" action=""https://test.paynet.md/acquiring/setecom""><input type=""hidden"" name=""ExternalID"" value=""1687325018116""><input type=""hidden"" name=""Services[0][Description]"" value=""Vizaje Nica""><input type=""hidden"" name=""Services[0][Name]"" value=""VN""><input type=""hidden"" name=""Services[0][Amount]"" value=""1100""><input type=""hidden"" name=""Services[0][Products][0][LineNo]"" value=""1""><input type=""hidden"" name=""Services[0][Products][0][Code]"" value=""32309""><input type=""hidden"" name=""Services[0][Products][0][BarCode]"" value=""1166""><input type=""hidden"" name=""Services[0][Products][0][Name]"" value=""Makeup Revolution Tasty Lip Oil Ulei de buze""><input type=""hidden"" name=""Services[0][Products][0][Description]"" value=""Makeup Revolution Tasty Lip Oil Ulei de buze""><input type=""hidden"" name=""Services[0][Products][0][Quantity]"" value=""100""><input type=""hidden"" name=""Services[0][Products][0][UnitPrice]"" value=""1100""><input type=""hidden"" name=""Currency"" value=""498""><input type=""hidden"" name=""Merchant"" value=""749981""><input type=""hidden"" name=""Customer.Code"" value=""igori-melnik@mail.ru""><input type=""hidden"" name=""Customer.Name"" value=""TEST TEST""><input type=""hidden"" name=""Customer.Address"" value=""vizaje nica""><input type=""hidden"" name=""Payer.Email"" value=""igori-melnik@mail.ru""><input type=""hidden"" name=""Payer.Name"" value=""TEST TEST""><input type=""hidden"" name=""Payer.Surname"" value=""TEST""><input type=""hidden"" name=""Payer.Mobile"" value=""+37369153080""><input type=""hidden"" name=""ExternalDate"" value=""2023-06-21T08:23:38""><input type=""hidden"" name=""LinkUrlSuccess"" value=""https://vizaje-nica.ilab.studio/ro/success?id=1687325018116""><input type=""hidden"" name=""LinkUrlCancel"" value=""https://vizaje-nica.ilab.studio/ro/error?id=1687325018116""><input type=""hidden"" name=""ExpiryDate"" value=""2023-06-21T12:23:38""><input type=""hidden"" name=""Signature"" value=""qrfw8mrzqWUVgc3+3+20EA==""><input type=""hidden"" name=""Lang"" value=""ro""></form>"
P3YsH07q,Select2 Bootstrap4,suhupokemon,HTML 5,Tuesday 20th of June 2023 11:50:49 PM CDT,"<!-- Masukkan ini di tag header -->
<link href=""https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css"" rel=""stylesheet"" />
<link rel=""stylesheet"" href=""https://cdn.jsdelivr.net/npm/@ttskch/select2-bootstrap4-theme@x.x.x/dist/select2-bootstrap4.min.css"">

<!-- Masukkan ini di tag akhir footer -->
<script src=""https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js""></script>
<script>
    // In your Javascript (external .js resource or <script> tag)
    $(document).ready(function() {
        $('.select2').select2({
            theme: 'bootstrap4',
        });
    });
</script>

<!-- Tambahkan class select2 di select yang mau diubah -->
 <select name=""jenis_id"" required class=""form-control select2""></select>"
Asrd7UzM,Nigerian scammers [21-6-1/2023],bombaires,HTML,Tuesday 20th of June 2023 11:46:45 PM CDT,"<a href=""mailto:rufusglenncanadayjnr@gmail.com"">rufusglenncanadayjnr@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+25589@gmail.com"">rufusglenncanadayjnr+25589@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+14960@gmail.com"">rufusglenncanadayjnr+14960@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+20051@gmail.com"">rufusglenncanadayjnr+20051@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+24561@gmail.com"">rufusglenncanadayjnr+24561@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+11814@gmail.com"">rufusglenncanadayjnr+11814@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+25291@gmail.com"">rufusglenncanadayjnr+25291@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+14949@gmail.com"">rufusglenncanadayjnr+14949@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+24456@gmail.com"">rufusglenncanadayjnr+24456@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+7329@gmail.com"">rufusglenncanadayjnr+7329@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+20173@gmail.com"">rufusglenncanadayjnr+20173@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+20123@gmail.com"">rufusglenncanadayjnr+20123@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+11053@gmail.com"">rufusglenncanadayjnr+11053@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+19220@gmail.com"">rufusglenncanadayjnr+19220@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+12139@gmail.com"">rufusglenncanadayjnr+12139@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+29274@gmail.com"">rufusglenncanadayjnr+29274@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+4710@gmail.com"">rufusglenncanadayjnr+4710@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+16598@gmail.com"">rufusglenncanadayjnr+16598@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+24016@gmail.com"">rufusglenncanadayjnr+24016@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+1006@gmail.com"">rufusglenncanadayjnr+1006@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+10112@gmail.com"">rufusglenncanadayjnr+10112@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+8061@gmail.com"">rufusglenncanadayjnr+8061@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+8508@gmail.com"">rufusglenncanadayjnr+8508@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+3210@gmail.com"">rufusglenncanadayjnr+3210@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+16845@gmail.com"">rufusglenncanadayjnr+16845@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+13416@gmail.com"">rufusglenncanadayjnr+13416@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+31692@gmail.com"">rufusglenncanadayjnr+31692@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+14170@gmail.com"">rufusglenncanadayjnr+14170@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+8440@gmail.com"">rufusglenncanadayjnr+8440@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+32109@gmail.com"">rufusglenncanadayjnr+32109@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+29585@gmail.com"">rufusglenncanadayjnr+29585@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+31642@gmail.com"">rufusglenncanadayjnr+31642@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+5762@gmail.com"">rufusglenncanadayjnr+5762@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+24626@gmail.com"">rufusglenncanadayjnr+24626@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+23504@gmail.com"">rufusglenncanadayjnr+23504@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+21403@gmail.com"">rufusglenncanadayjnr+21403@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+14266@gmail.com"">rufusglenncanadayjnr+14266@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+26499@gmail.com"">rufusglenncanadayjnr+26499@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+24702@gmail.com"">rufusglenncanadayjnr+24702@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+22328@gmail.com"">rufusglenncanadayjnr+22328@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+25663@gmail.com"">rufusglenncanadayjnr+25663@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+26428@gmail.com"">rufusglenncanadayjnr+26428@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+17557@gmail.com"">rufusglenncanadayjnr+17557@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+16148@gmail.com"">rufusglenncanadayjnr+16148@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+26747@gmail.com"">rufusglenncanadayjnr+26747@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+25038@gmail.com"">rufusglenncanadayjnr+25038@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+31950@gmail.com"">rufusglenncanadayjnr+31950@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+3923@gmail.com"">rufusglenncanadayjnr+3923@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+12438@gmail.com"">rufusglenncanadayjnr+12438@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+12214@gmail.com"">rufusglenncanadayjnr+12214@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+1520@gmail.com"">rufusglenncanadayjnr+1520@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+19479@gmail.com"">rufusglenncanadayjnr+19479@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+4651@gmail.com"">rufusglenncanadayjnr+4651@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+5275@gmail.com"">rufusglenncanadayjnr+5275@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+11041@gmail.com"">rufusglenncanadayjnr+11041@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+24481@gmail.com"">rufusglenncanadayjnr+24481@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+27174@gmail.com"">rufusglenncanadayjnr+27174@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+5510@gmail.com"">rufusglenncanadayjnr+5510@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+20591@gmail.com"">rufusglenncanadayjnr+20591@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+15529@gmail.com"">rufusglenncanadayjnr+15529@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+18825@gmail.com"">rufusglenncanadayjnr+18825@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+24822@gmail.com"">rufusglenncanadayjnr+24822@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+16082@gmail.com"">rufusglenncanadayjnr+16082@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+24435@gmail.com"">rufusglenncanadayjnr+24435@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+22920@gmail.com"">rufusglenncanadayjnr+22920@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+24000@gmail.com"">rufusglenncanadayjnr+24000@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+3068@gmail.com"">rufusglenncanadayjnr+3068@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+18240@gmail.com"">rufusglenncanadayjnr+18240@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+13555@gmail.com"">rufusglenncanadayjnr+13555@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+26327@gmail.com"">rufusglenncanadayjnr+26327@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+26242@gmail.com"">rufusglenncanadayjnr+26242@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+27945@gmail.com"">rufusglenncanadayjnr+27945@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+20475@gmail.com"">rufusglenncanadayjnr+20475@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+8115@gmail.com"">rufusglenncanadayjnr+8115@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+10985@gmail.com"">rufusglenncanadayjnr+10985@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+17725@gmail.com"">rufusglenncanadayjnr+17725@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+4756@gmail.com"">rufusglenncanadayjnr+4756@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+4020@gmail.com"">rufusglenncanadayjnr+4020@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+14037@gmail.com"">rufusglenncanadayjnr+14037@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+25779@gmail.com"">rufusglenncanadayjnr+25779@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+21994@gmail.com"">rufusglenncanadayjnr+21994@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+1097@gmail.com"">rufusglenncanadayjnr+1097@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+1939@gmail.com"">rufusglenncanadayjnr+1939@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+7896@gmail.com"">rufusglenncanadayjnr+7896@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+494@gmail.com"">rufusglenncanadayjnr+494@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+15642@gmail.com"">rufusglenncanadayjnr+15642@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+12252@gmail.com"">rufusglenncanadayjnr+12252@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+31317@gmail.com"">rufusglenncanadayjnr+31317@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+12099@gmail.com"">rufusglenncanadayjnr+12099@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+14073@gmail.com"">rufusglenncanadayjnr+14073@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+32372@gmail.com"">rufusglenncanadayjnr+32372@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+17833@gmail.com"">rufusglenncanadayjnr+17833@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+5813@gmail.com"">rufusglenncanadayjnr+5813@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+25421@gmail.com"">rufusglenncanadayjnr+25421@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+32579@gmail.com"">rufusglenncanadayjnr+32579@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+26670@gmail.com"">rufusglenncanadayjnr+26670@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+23755@gmail.com"">rufusglenncanadayjnr+23755@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+11619@gmail.com"">rufusglenncanadayjnr+11619@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+22872@gmail.com"">rufusglenncanadayjnr+22872@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+14048@gmail.com"">rufusglenncanadayjnr+14048@gmail.com</a>
<a href=""mailto:rufusglenncanadayjnr+5380@gmail.com"">rufusglenncanadayjnr+5380@gmail.com</a>
<a href=""mailto:anthonykou12@gmail.com"">anthonykou12@gmail.com</a>
<a href=""mailto:anthonykou12+4310@gmail.com"">anthonykou12+4310@gmail.com</a>
<a href=""mailto:anthonykou12+2627@gmail.com"">anthonykou12+2627@gmail.com</a>
<a href=""mailto:anthonykou12+19513@gmail.com"">anthonykou12+19513@gmail.com</a>
<a href=""mailto:anthonykou12+1721@gmail.com"">anthonykou12+1721@gmail.com</a>
<a href=""mailto:anthonykou12+1794@gmail.com"">anthonykou12+1794@gmail.com</a>
<a href=""mailto:anthonykou12+15325@gmail.com"">anthonykou12+15325@gmail.com</a>
<a href=""mailto:anthonykou12+5181@gmail.com"">anthonykou12+5181@gmail.com</a>
<a href=""mailto:anthonykou12+21829@gmail.com"">anthonykou12+21829@gmail.com</a>
<a href=""mailto:anthonykou12+18415@gmail.com"">anthonykou12+18415@gmail.com</a>
<a href=""mailto:anthonykou12+15273@gmail.com"">anthonykou12+15273@gmail.com</a>
<a href=""mailto:anthonykou12+17211@gmail.com"">anthonykou12+17211@gmail.com</a>
<a href=""mailto:anthonykou12+12390@gmail.com"">anthonykou12+12390@gmail.com</a>
<a href=""mailto:anthonykou12+24538@gmail.com"">anthonykou12+24538@gmail.com</a>
<a href=""mailto:anthonykou12+30429@gmail.com"">anthonykou12+30429@gmail.com</a>
<a href=""mailto:anthonykou12+8879@gmail.com"">anthonykou12+8879@gmail.com</a>
<a href=""mailto:anthonykou12+5908@gmail.com"">anthonykou12+5908@gmail.com</a>
<a href=""mailto:anthonykou12+685@gmail.com"">anthonykou12+685@gmail.com</a>
<a href=""mailto:anthonykou12+11996@gmail.com"">anthonykou12+11996@gmail.com</a>
<a href=""mailto:anthonykou12+15367@gmail.com"">anthonykou12+15367@gmail.com</a>
<a href=""mailto:anthonykou12+21995@gmail.com"">anthonykou12+21995@gmail.com</a>
<a href=""mailto:anthonykou12+15138@gmail.com"">anthonykou12+15138@gmail.com</a>
<a href=""mailto:anthonykou12+11545@gmail.com"">anthonykou12+11545@gmail.com</a>
<a href=""mailto:anthonykou12+29685@gmail.com"">anthonykou12+29685@gmail.com</a>
<a href=""mailto:anthonykou12+18537@gmail.com"">anthonykou12+18537@gmail.com</a>
<a href=""mailto:anthonykou12+8738@gmail.com"">anthonykou12+8738@gmail.com</a>
<a href=""mailto:anthonykou12+18646@gmail.com"">anthonykou12+18646@gmail.com</a>
<a href=""mailto:anthonykou12+31305@gmail.com"">anthonykou12+31305@gmail.com</a>
<a href=""mailto:anthonykou12+31091@gmail.com"">anthonykou12+31091@gmail.com</a>
<a href=""mailto:anthonykou12+9900@gmail.com"">anthonykou12+9900@gmail.com</a>
<a href=""mailto:anthonykou12+31732@gmail.com"">anthonykou12+31732@gmail.com</a>
<a href=""mailto:anthonykou12+31559@gmail.com"">anthonykou12+31559@gmail.com</a>
<a href=""mailto:anthonykou12+3275@gmail.com"">anthonykou12+3275@gmail.com</a>
<a href=""mailto:anthonykou12+4733@gmail.com"">anthonykou12+4733@gmail.com</a>
<a href=""mailto:anthonykou12+15802@gmail.com"">anthonykou12+15802@gmail.com</a>
<a href=""mailto:anthonykou12+27403@gmail.com"">anthonykou12+27403@gmail.com</a>
<a href=""mailto:anthonykou12+3898@gmail.com"">anthonykou12+3898@gmail.com</a>
<a href=""mailto:anthonykou12+1549@gmail.com"">anthonykou12+1549@gmail.com</a>
<a href=""mailto:anthonykou12+7277@gmail.com"">anthonykou12+7277@gmail.com</a>
<a href=""mailto:anthonykou12+3889@gmail.com"">anthonykou12+3889@gmail.com</a>
<a href=""mailto:anthonykou12+11846@gmail.com"">anthonykou12+11846@gmail.com</a>
<a href=""mailto:anthonykou12+17564@gmail.com"">anthonykou12+17564@gmail.com</a>
<a href=""mailto:anthonykou12+6585@gmail.com"">anthonykou12+6585@gmail.com</a>
<a href=""mailto:anthonykou12+5108@gmail.com"">anthonykou12+5108@gmail.com</a>
<a href=""mailto:anthonykou12+29491@gmail.com"">anthonykou12+29491@gmail.com</a>
<a href=""mailto:anthonykou12+2100@gmail.com"">anthonykou12+2100@gmail.com</a>
<a href=""mailto:anthonykou12+16867@gmail.com"">anthonykou12+16867@gmail.com</a>
<a href=""mailto:anthonykou12+30249@gmail.com"">anthonykou12+30249@gmail.com</a>
<a href=""mailto:anthonykou12+29102@gmail.com"">anthonykou12+29102@gmail.com</a>
<a href=""mailto:anthonykou12+10480@gmail.com"">anthonykou12+10480@gmail.com</a>
<a href=""mailto:anthonykou12+9041@gmail.com"">anthonykou12+9041@gmail.com</a>
<a href=""mailto:anthonykou12+29950@gmail.com"">anthonykou12+29950@gmail.com</a>
<a href=""mailto:anthonykou12+15584@gmail.com"">anthonykou12+15584@gmail.com</a>
<a href=""mailto:anthonykou12+20628@gmail.com"">anthonykou12+20628@gmail.com</a>
<a href=""mailto:anthonykou12+28108@gmail.com"">anthonykou12+28108@gmail.com</a>
<a href=""mailto:anthonykou12+3091@gmail.com"">anthonykou12+3091@gmail.com</a>
<a href=""mailto:anthonykou12+32709@gmail.com"">anthonykou12+32709@gmail.com</a>
<a href=""mailto:anthonykou12+20596@gmail.com"">anthonykou12+20596@gmail.com</a>
<a href=""mailto:anthonykou12+15026@gmail.com"">anthonykou12+15026@gmail.com</a>
<a href=""mailto:anthonykou12+13536@gmail.com"">anthonykou12+13536@gmail.com</a>
<a href=""mailto:anthonykou12+9488@gmail.com"">anthonykou12+9488@gmail.com</a>
<a href=""mailto:anthonykou12+11357@gmail.com"">anthonykou12+11357@gmail.com</a>
<a href=""mailto:anthonykou12+12434@gmail.com"">anthonykou12+12434@gmail.com</a>
<a href=""mailto:anthonykou12+4045@gmail.com"">anthonykou12+4045@gmail.com</a>
<a href=""mailto:anthonykou12+9451@gmail.com"">anthonykou12+9451@gmail.com</a>
<a href=""mailto:anthonykou12+7727@gmail.com"">anthonykou12+7727@gmail.com</a>
<a href=""mailto:anthonykou12+9435@gmail.com"">anthonykou12+9435@gmail.com</a>
<a href=""mailto:anthonykou12+14525@gmail.com"">anthonykou12+14525@gmail.com</a>
<a href=""mailto:anthonykou12+17865@gmail.com"">anthonykou12+17865@gmail.com</a>
<a href=""mailto:anthonykou12+3798@gmail.com"">anthonykou12+3798@gmail.com</a>
<a href=""mailto:anthonykou12+8723@gmail.com"">anthonykou12+8723@gmail.com</a>
<a href=""mailto:anthonykou12+1417@gmail.com"">anthonykou12+1417@gmail.com</a>
<a href=""mailto:anthonykou12+24553@gmail.com"">anthonykou12+24553@gmail.com</a>
<a href=""mailto:anthonykou12+27361@gmail.com"">anthonykou12+27361@gmail.com</a>
<a href=""mailto:anthonykou12+13626@gmail.com"">anthonykou12+13626@gmail.com</a>
<a href=""mailto:anthonykou12+31014@gmail.com"">anthonykou12+31014@gmail.com</a>
<a href=""mailto:anthonykou12+9522@gmail.com"">anthonykou12+9522@gmail.com</a>
<a href=""mailto:anthonykou12+30013@gmail.com"">anthonykou12+30013@gmail.com</a>
<a href=""mailto:anthonykou12+6161@gmail.com"">anthonykou12+6161@gmail.com</a>
<a href=""mailto:anthonykou12+2328@gmail.com"">anthonykou12+2328@gmail.com</a>
<a href=""mailto:anthonykou12+27269@gmail.com"">anthonykou12+27269@gmail.com</a>
<a href=""mailto:anthonykou12+10231@gmail.com"">anthonykou12+10231@gmail.com</a>
<a href=""mailto:anthonykou12+27760@gmail.com"">anthonykou12+27760@gmail.com</a>
<a href=""mailto:anthonykou12+32191@gmail.com"">anthonykou12+32191@gmail.com</a>
<a href=""mailto:anthonykou12+3119@gmail.com"">anthonykou12+3119@gmail.com</a>
<a href=""mailto:anthonykou12+15495@gmail.com"">anthonykou12+15495@gmail.com</a>
<a href=""mailto:anthonykou12+28905@gmail.com"">anthonykou12+28905@gmail.com</a>
<a href=""mailto:anthonykou12+17428@gmail.com"">anthonykou12+17428@gmail.com</a>
<a href=""mailto:anthonykou12+13943@gmail.com"">anthonykou12+13943@gmail.com</a>
<a href=""mailto:anthonykou12+28400@gmail.com"">anthonykou12+28400@gmail.com</a>
<a href=""mailto:anthonykou12+4176@gmail.com"">anthonykou12+4176@gmail.com</a>
<a href=""mailto:anthonykou12+25927@gmail.com"">anthonykou12+25927@gmail.com</a>
<a href=""mailto:anthonykou12+25129@gmail.com"">anthonykou12+25129@gmail.com</a>
<a href=""mailto:anthonykou12+29544@gmail.com"">anthonykou12+29544@gmail.com</a>
<a href=""mailto:anthonykou12+28500@gmail.com"">anthonykou12+28500@gmail.com</a>
<a href=""mailto:anthonykou12+21433@gmail.com"">anthonykou12+21433@gmail.com</a>
<a href=""mailto:anthonykou12+17521@gmail.com"">anthonykou12+17521@gmail.com</a>
<a href=""mailto:anthonykou12+21977@gmail.com"">anthonykou12+21977@gmail.com</a>
<a href=""mailto:anthonykou12+21143@gmail.com"">anthonykou12+21143@gmail.com</a>
<a href=""mailto:anthonykou12+22025@gmail.com"">anthonykou12+22025@gmail.com</a>
<a href=""mailto:anthonykou12+18695@gmail.com"">anthonykou12+18695@gmail.com</a>
<a href=""mailto:unitednationsdeb66@gmail.com"">unitednationsdeb66@gmail.com</a>
<a href=""mailto:danderson2018@aol.com"">danderson2018@aol.com</a>
<a href=""mailto:unitednationsdeb66+3532@gmail.com"">unitednationsdeb66+3532@gmail.com</a>
<a href=""mailto:unitednationsdeb66+27090@gmail.com"">unitednationsdeb66+27090@gmail.com</a>
<a href=""mailto:unitednationsdeb66+20999@gmail.com"">unitednationsdeb66+20999@gmail.com</a>
<a href=""mailto:unitednationsdeb66+30620@gmail.com"">unitednationsdeb66+30620@gmail.com</a>
<a href=""mailto:unitednationsdeb66+13907@gmail.com"">unitednationsdeb66+13907@gmail.com</a>
<a href=""mailto:unitednationsdeb66+14292@gmail.com"">unitednationsdeb66+14292@gmail.com</a>
<a href=""mailto:unitednationsdeb66+6996@gmail.com"">unitednationsdeb66+6996@gmail.com</a>
<a href=""mailto:unitednationsdeb66+21729@gmail.com"">unitednationsdeb66+21729@gmail.com</a>
<a href=""mailto:unitednationsdeb66+9753@gmail.com"">unitednationsdeb66+9753@gmail.com</a>
<a href=""mailto:unitednationsdeb66+28703@gmail.com"">unitednationsdeb66+28703@gmail.com</a>
<a href=""mailto:unitednationsdeb66+23956@gmail.com"">unitednationsdeb66+23956@gmail.com</a>
<a href=""mailto:unitednationsdeb66+17326@gmail.com"">unitednationsdeb66+17326@gmail.com</a>
<a href=""mailto:unitednationsdeb66+25911@gmail.com"">unitednationsdeb66+25911@gmail.com</a>
<a href=""mailto:unitednationsdeb66+3870@gmail.com"">unitednationsdeb66+3870@gmail.com</a>
<a href=""mailto:unitednationsdeb66+13489@gmail.com"">unitednationsdeb66+13489@gmail.com</a>
<a href=""mailto:unitednationsdeb66+196@gmail.com"">unitednationsdeb66+196@gmail.com</a>
<a href=""mailto:unitednationsdeb66+1714@gmail.com"">unitednationsdeb66+1714@gmail.com</a>
<a href=""mailto:unitednationsdeb66+20192@gmail.com"">unitednationsdeb66+20192@gmail.com</a>
<a href=""mailto:unitednationsdeb66+8900@gmail.com"">unitednationsdeb66+8900@gmail.com</a>
<a href=""mailto:unitednationsdeb66+11872@gmail.com"">unitednationsdeb66+11872@gmail.com</a>
<a href=""mailto:unitednationsdeb66+11014@gmail.com"">unitednationsdeb66+11014@gmail.com</a>
<a href=""mailto:unitednationsdeb66+29590@gmail.com"">unitednationsdeb66+29590@gmail.com</a>
<a href=""mailto:unitednationsdeb66+23297@gmail.com"">unitednationsdeb66+23297@gmail.com</a>
<a href=""mailto:unitednationsdeb66+13713@gmail.com"">unitednationsdeb66+13713@gmail.com</a>
<a href=""mailto:unitednationsdeb66+32164@gmail.com"">unitednationsdeb66+32164@gmail.com</a>
<a href=""mailto:unitednationsdeb66+16673@gmail.com"">unitednationsdeb66+16673@gmail.com</a>
<a href=""mailto:unitednationsdeb66+19713@gmail.com"">unitednationsdeb66+19713@gmail.com</a>
<a href=""mailto:unitednationsdeb66+27590@gmail.com"">unitednationsdeb66+27590@gmail.com</a>
<a href=""mailto:unitednationsdeb66+25593@gmail.com"">unitednationsdeb66+25593@gmail.com</a>
<a href=""mailto:unitednationsdeb66+6166@gmail.com"">unitednationsdeb66+6166@gmail.com</a>
<a href=""mailto:unitednationsdeb66+15040@gmail.com"">unitednationsdeb66+15040@gmail.com</a>
<a href=""mailto:unitednationsdeb66+8292@gmail.com"">unitednationsdeb66+8292@gmail.com</a>
<a href=""mailto:unitednationsdeb66+25337@gmail.com"">unitednationsdeb66+25337@gmail.com</a>
<a href=""mailto:unitednationsdeb66+31709@gmail.com"">unitednationsdeb66+31709@gmail.com</a>
<a href=""mailto:unitednationsdeb66+5235@gmail.com"">unitednationsdeb66+5235@gmail.com</a>
<a href=""mailto:unitednationsdeb66+10078@gmail.com"">unitednationsdeb66+10078@gmail.com</a>
<a href=""mailto:unitednationsdeb66+21575@gmail.com"">unitednationsdeb66+21575@gmail.com</a>
<a href=""mailto:unitednationsdeb66+23447@gmail.com"">unitednationsdeb66+23447@gmail.com</a>
<a href=""mailto:unitednationsdeb66+22239@gmail.com"">unitednationsdeb66+22239@gmail.com</a>
<a href=""mailto:unitednationsdeb66+290@gmail.com"">unitednationsdeb66+290@gmail.com</a>
<a href=""mailto:unitednationsdeb66+7672@gmail.com"">unitednationsdeb66+7672@gmail.com</a>
<a href=""mailto:unitednationsdeb66+11305@gmail.com"">unitednationsdeb66+11305@gmail.com</a>
<a href=""mailto:unitednationsdeb66+29849@gmail.com"">unitednationsdeb66+29849@gmail.com</a>
<a href=""mailto:unitednationsdeb66+776@gmail.com"">unitednationsdeb66+776@gmail.com</a>
<a href=""mailto:unitednationsdeb66+9754@gmail.com"">unitednationsdeb66+9754@gmail.com</a>
<a href=""mailto:unitednationsdeb66+1958@gmail.com"">unitednationsdeb66+1958@gmail.com</a>
<a href=""mailto:unitednationsdeb66+916@gmail.com"">unitednationsdeb66+916@gmail.com</a>
<a href=""mailto:unitednationsdeb66+19919@gmail.com"">unitednationsdeb66+19919@gmail.com</a>
<a href=""mailto:unitednationsdeb66+1413@gmail.com"">unitednationsdeb66+1413@gmail.com</a>
<a href=""mailto:unitednationsdeb66+10550@gmail.com"">unitednationsdeb66+10550@gmail.com</a>
<a href=""mailto:unitednationsdeb66+1779@gmail.com"">unitednationsdeb66+1779@gmail.com</a>
<a href=""mailto:unitednationsdeb66+22076@gmail.com"">unitednationsdeb66+22076@gmail.com</a>
<a href=""mailto:unitednationsdeb66+23747@gmail.com"">unitednationsdeb66+23747@gmail.com</a>
<a href=""mailto:unitednationsdeb66+32031@gmail.com"">unitednationsdeb66+32031@gmail.com</a>
<a href=""mailto:unitednationsdeb66+6932@gmail.com"">unitednationsdeb66+6932@gmail.com</a>
<a href=""mailto:unitednationsdeb66+27193@gmail.com"">unitednationsdeb66+27193@gmail.com</a>
<a href=""mailto:unitednationsdeb66+14416@gmail.com"">unitednationsdeb66+14416@gmail.com</a>
<a href=""mailto:unitednationsdeb66+27347@gmail.com"">unitednationsdeb66+27347@gmail.com</a>
<a href=""mailto:unitednationsdeb66+21852@gmail.com"">unitednationsdeb66+21852@gmail.com</a>
<a href=""mailto:unitednationsdeb66+15354@gmail.com"">unitednationsdeb66+15354@gmail.com</a>
<a href=""mailto:unitednationsdeb66+27978@gmail.com"">unitednationsdeb66+27978@gmail.com</a>
<a href=""mailto:unitednationsdeb66+20388@gmail.com"">unitednationsdeb66+20388@gmail.com</a>
<a href=""mailto:unitednationsdeb66+4545@gmail.com"">unitednationsdeb66+4545@gmail.com</a>
<a href=""mailto:unitednationsdeb66+10919@gmail.com"">unitednationsdeb66+10919@gmail.com</a>
<a href=""mailto:unitednationsdeb66+14391@gmail.com"">unitednationsdeb66+14391@gmail.com</a>
<a href=""mailto:unitednationsdeb66+2917@gmail.com"">unitednationsdeb66+2917@gmail.com</a>
<a href=""mailto:unitednationsdeb66+13551@gmail.com"">unitednationsdeb66+13551@gmail.com</a>
<a href=""mailto:unitednationsdeb66+25994@gmail.com"">unitednationsdeb66+25994@gmail.com</a>
<a href=""mailto:unitednationsdeb66+21195@gmail.com"">unitednationsdeb66+21195@gmail.com</a>
<a href=""mailto:unitednationsdeb66+10129@gmail.com"">unitednationsdeb66+10129@gmail.com</a>
<a href=""mailto:unitednationsdeb66+27914@gmail.com"">unitednationsdeb66+27914@gmail.com</a>
<a href=""mailto:unitednationsdeb66+32408@gmail.com"">unitednationsdeb66+32408@gmail.com</a>
<a href=""mailto:unitednationsdeb66+4289@gmail.com"">unitednationsdeb66+4289@gmail.com</a>
<a href=""mailto:unitednationsdeb66+15090@gmail.com"">unitednationsdeb66+15090@gmail.com</a>
<a href=""mailto:unitednationsdeb66+27962@gmail.com"">unitednationsdeb66+27962@gmail.com</a>
<a href=""mailto:unitednationsdeb66+25039@gmail.com"">unitednationsdeb66+25039@gmail.com</a>
<a href=""mailto:unitednationsdeb66+1687@gmail.com"">unitednationsdeb66+1687@gmail.com</a>
<a href=""mailto:unitednationsdeb66+20542@gmail.com"">unitednationsdeb66+20542@gmail.com</a>
<a href=""mailto:unitednationsdeb66+5767@gmail.com"">unitednationsdeb66+5767@gmail.com</a>
<a href=""mailto:unitednationsdeb66+20475@gmail.com"">unitednationsdeb66+20475@gmail.com</a>
<a href=""mailto:unitednationsdeb66+15848@gmail.com"">unitednationsdeb66+15848@gmail.com</a>
<a href=""mailto:unitednationsdeb66+23167@gmail.com"">unitednationsdeb66+23167@gmail.com</a>
<a href=""mailto:unitednationsdeb66+16899@gmail.com"">unitednationsdeb66+16899@gmail.com</a>
<a href=""mailto:unitednationsdeb66+26576@gmail.com"">unitednationsdeb66+26576@gmail.com</a>
<a href=""mailto:unitednationsdeb66+11789@gmail.com"">unitednationsdeb66+11789@gmail.com</a>
<a href=""mailto:unitednationsdeb66+15956@gmail.com"">unitednationsdeb66+15956@gmail.com</a>
<a href=""mailto:unitednationsdeb66+5498@gmail.com"">unitednationsdeb66+5498@gmail.com</a>
<a href=""mailto:unitednationsdeb66+14708@gmail.com"">unitednationsdeb66+14708@gmail.com</a>
<a href=""mailto:unitednationsdeb66+31117@gmail.com"">unitednationsdeb66+31117@gmail.com</a>
<a href=""mailto:unitednationsdeb66+10943@gmail.com"">unitednationsdeb66+10943@gmail.com</a>
<a href=""mailto:unitednationsdeb66+13779@gmail.com"">unitednationsdeb66+13779@gmail.com</a>
<a href=""mailto:unitednationsdeb66+27412@gmail.com"">unitednationsdeb66+27412@gmail.com</a>
<a href=""mailto:unitednationsdeb66+5133@gmail.com"">unitednationsdeb66+5133@gmail.com</a>
<a href=""mailto:unitednationsdeb66+26871@gmail.com"">unitednationsdeb66+26871@gmail.com</a>
<a href=""mailto:unitednationsdeb66+30265@gmail.com"">unitednationsdeb66+30265@gmail.com</a>
<a href=""mailto:unitednationsdeb66+22212@gmail.com"">unitednationsdeb66+22212@gmail.com</a>
<a href=""mailto:unitednationsdeb66+23980@gmail.com"">unitednationsdeb66+23980@gmail.com</a>
<a href=""mailto:unitednationsdeb66+3297@gmail.com"">unitednationsdeb66+3297@gmail.com</a>
<a href=""mailto:unitednationsdeb66+8983@gmail.com"">unitednationsdeb66+8983@gmail.com</a>
<a href=""mailto:unitednationsdeb66+10743@gmail.com"">unitednationsdeb66+10743@gmail.com</a>"
