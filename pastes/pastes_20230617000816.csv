id,title,username,language,date,content
70Ns3C3r,Cedulas,LightProgrammer000,Python,Friday 16th of June 2023 06:56:59 PM CDT,"""""""
# Programa: Cedulas
""""""

while True:

    # Variaveis
    qtd_cedulas = 0
    cedula_atual = 100

    # Entrada de dados
    valor = float(input(""\n# Digite o valor a pagar [digite '0' para terminar]: ""))

    # Estrutura condicional: Finalizando programa
    if valor == 0:
        break

    # Estrutura de repeticao
    while True:
        if cedula_atual <= valor:
            valor -= cedula_atual
            qtd_cedulas += 1

        else:
            print(f""{qtd_cedulas} cedula(s) de R$ {cedula_atual}"")

            # Estrutura condicional: Mudanca de cedula para deducao do valor
            # Protecao contra erro de infinito
            if valor < 0.01:
                break

            elif cedula_atual == 100:
                cedula_atual = 50

            elif cedula_atual == 50:
                cedula_atual = 20

            elif cedula_atual == 20:
                cedula_atual = 10

            elif cedula_atual == 10:
                cedula_atual = 5

            elif cedula_atual == 5:
                cedula_atual = 1

            elif cedula_atual == 1:
                cedula_atual = 0.50

            elif cedula_atual == 0.50:
                cedula_atual = 0.10

            elif cedula_atual == 0.10:
                cedula_atual = 0.05

            elif cedula_atual == 0.05:
                cedula_atual = 0.02

            elif cedula_atual == 0.02:
                cedula_atual = 0.01

            qtd_cedulas = 0"
BSRmx6GX,Cedulas,LightProgrammer000,Dart,Friday 16th of June 2023 06:55:32 PM CDT,"// Bibliotecas
import 'dart:io';

// Funcao principal
main() {
  while (true) {
    // Variaveis
    double valor;
    int qtd_cedulas = 0;
    double cedula_atual = 100;

    // Entrada de dados
    stdout.write(""\n# Digite o valor a pagar [digite '0' para terminar]: "");
    valor = double.parse(stdin.readLineSync()!);

    // Estrutura condicional: Finalizando programa
    if (valor == 0) {
      break;
    }

    while (true) {
      if (cedula_atual <= valor) {
        valor -= cedula_atual;
        qtd_cedulas += 1;
      } else {
        // Mensagem
        print(""$qtd_cedulas cedula(s) de R\$ $cedula_atual"");

        // Estrutura condicional: Mudanca de cedula para deducao do valor
        // Protecao contra erro de infinito
        if (valor < 0.01) {
          break;
        } else if (cedula_atual == 100) {
          cedula_atual = 50;
        } else if (cedula_atual == 50) {
          cedula_atual = 20;
        } else if (cedula_atual == 20) {
          cedula_atual = 10;
        } else if (cedula_atual == 10) {
          cedula_atual = 5;
        } else if (cedula_atual == 5) {
          cedula_atual = 1;
        } else if (cedula_atual == 1) {
          cedula_atual = 0.50;
        } else if (cedula_atual == 0.50) {
          cedula_atual = 0.10;
        } else if (cedula_atual == 0.10) {
          cedula_atual = 0.05;
        } else if (cedula_atual == 0.05) {
          cedula_atual = 0.02;
        } else if (cedula_atual == 0.02) {
          cedula_atual = 0.01;
        }

        qtd_cedulas = 0;
      }
    }
  }
}
"
VTyYtkVw,BTC Wallet Credentials have been reset,abbredescr_91,GetText,Friday 16th of June 2023 06:42:42 PM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please disregard this message.
Your new login credentials will be 
pacificcarvaht:gn3zHQ on 45.9.148.244(SSH)
Regards"
3bwbbm0P,Finished rectangle fit,matbiz01,C++,Friday 16th of June 2023 06:34:55 PM CDT,"#include <iostream>
#include <vector>
#include <algorithm>
#include ""math.h""
class Size {
public:
    int x;
    int y;
    Size(int x, int y): x(x), y(y){}
    int getArea(){
        return x * y;
    }
};

namespace sf {
    class Vector2i {
    public:
        int x;
        int y;
        Vector2i(int x, int y) : x(x), y(y){}
    };
    
};
 
void print(std::vector<Size> sizes){
    std::cout << ""printing"" << std::endl;
    for(auto size: sizes){
        std::cout << ""x: "" << size.x << "", y: "" << size.y << std::endl;
    }
}
 
void printOccupied(std::vector<std::vector<bool>> occupied){
    for(auto line: occupied){
        std::string row;
        for(auto val: line){
            row += std::to_string(val) + "" "";
        }
        std::cout << row << std::endl;
    }
}

bool fits(int x, int y, Size size, std::vector<std::vector<bool>> occupied){
    try{
        for(int i = x; i < x + size.x; i++){
            for(int j = y; j < y + size.y; j++){
                if(occupied.at(j).at(i)) return false;
            }
        }
    }
    catch (const std::out_of_range& e) {
        return false;
    }
    return true;
}

int main()
{
    std::vector<Size> sizes;
    for(int i = 2; i < 7; i += 4){
        for(int j = 1; j < 8; j += 4){
            sizes.push_back(Size(i, j));
        }
    }
    
    for(int i = 0; i < 15; i++){
        sizes.push_back(Size(1, 1));
    }

    
    std::sort(sizes.begin(), sizes.end(),
        [](const Size &a, const Size &b){
            return a.x * a.y > b.x * b.y;
        }
    );
    
    int area = 0;
    for(auto size: sizes){
        area += size.x * size.y;
    }
    
    
    int width = (int)(std::sqrt(area) * 1.3);
    int height = width;
    printf(""area: %d\n"", area);
    printf(""width: %d, height: %d\n"", width, height);
    std::vector<std::vector<bool>> occupied = std::vector<std::vector<bool>>(height, std::vector<bool>(width, false));
    for(auto size: sizes){
        printf(""size x: %d, y: %d\n"", size.x, size.y);
        printOccupied(occupied);
        bool fit = false;
        for(int i = 0; i < height; i++){
            for(int j = 0; j < width; j++){
                if(fits(j, i, size, occupied)){
                    
                    for(int k = i; k < i + size.y; k++){
                        for(int l = j; l < j + size.x; l++){
                            printf(""%d %d\n"", k,l);
                            occupied.at(k).at(l) = true;
                        }
                    }
                    fit = true;
                    break;
                }
            }
            if(fit) break;
        }
    }
    
    return 0;
}
"
RnLYtYrS,Harked,EcoSploit,Lua,Friday 16th of June 2023 06:05:40 PM CDT,"-- Harked leaked by LuaE (https://www.youtube.com/@ElliotEsch)

-- Instances:

local main = Instance.new(""ScreenGui"")
local top = Instance.new(""Frame"")
local back = Instance.new(""Frame"")
local rtools = Instance.new(""TextButton"")
local kill = Instance.new(""TextButton"")
local top_2 = Instance.new(""TextLabel"")
local naked = Instance.new(""TextButton"")
local credits = Instance.new(""TextLabel"")
local box = Instance.new(""TextButton"")
local sink = Instance.new(""TextButton"")
local explorer = Instance.new(""TextButton"")
local ban = Instance.new(""TextButton"")
local target = Instance.new(""TextBox"")
local queue = Instance.new(""TextLabel"")
local slock = Instance.new(""TextLabel"")
local refresh = Instance.new(""TextButton"")
local Players = game:GetService(""Players"")

--Properties:

main.Name = ""main""
main.Parent = game.Players.LocalPlayer:WaitForChild(""PlayerGui"")

top.Name = ""top""
top.Draggable = true
top.Active = true
top.Parent = main
top.BackgroundColor3 = Color3.fromRGB(48, 48, 48)
top.BackgroundTransparency = 0.300
top.BorderSizePixel = 0
top.Position = UDim2.new(0.612145662, 0, 0.311965823, 0)
top.Size = UDim2.new(0, 291, 0, 30)
top.Draggable = true

back.Name = ""back""
back.Parent = top
back.BackgroundColor3 = Color3.fromRGB(48, 48, 48)
back.BackgroundTransparency = 0.300
back.BorderColor3 = Color3.fromRGB(30, 30, 30)
back.BorderSizePixel = 0
back.Position = UDim2.new(-0.00343642617, 0, 1, 0)
back.Size = UDim2.new(0, 293, 0, 293)

rtools.Name = ""rtools""
rtools.Parent = top
rtools.BackgroundColor3 = Color3.fromRGB(172, 172, 172)
rtools.BackgroundTransparency = 0.500
rtools.BorderSizePixel = 0
rtools.Position = UDim2.new(0.0206185561, 0, 1.76666665, 0)
rtools.Size = UDim2.new(0, 134, 0, 40)
rtools.Font = Enum.Font.SourceSansLight
rtools.Text = ""RTools""
rtools.TextColor3 = Color3.fromRGB(255, 255, 255)
rtools.TextSize = 23.000

kill.Name = ""kill""
kill.Parent = top
kill.BackgroundColor3 = Color3.fromRGB(172, 172, 172)
kill.BackgroundTransparency = 0.500
kill.BorderSizePixel = 0
kill.Position = UDim2.new(0.525773168, 0, 1.76666665, 0)
kill.Size = UDim2.new(0, 131, 0, 40)
kill.Font = Enum.Font.SourceSansLight
kill.Text = ""Kill""
kill.TextColor3 = Color3.fromRGB(255, 255, 255)
kill.TextSize = 23.000

top_2.Name = ""top""
top_2.Parent = top
top_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
top_2.BackgroundTransparency = 1.000
top_2.Position = UDim2.new(0.154639184, 0, -0.333333343, 0)
top_2.Size = UDim2.new(0, 200, 0, 50)
top_2.Font = Enum.Font.SourceSansLight
top_2.Text = ""Harked""
top_2.TextColor3 = Color3.fromRGB(255, 255, 255)
top_2.TextSize = 45.000

naked.Name = ""naked""
naked.Parent = top
naked.BackgroundColor3 = Color3.fromRGB(172, 172, 172)
naked.BackgroundTransparency = 0.500
naked.BorderSizePixel = 0
naked.Position = UDim2.new(0.0206185561, 0, 3.56217241, 0)
naked.Size = UDim2.new(0, 134, 0, 40)
naked.Font = Enum.Font.SourceSansLight
naked.Text = ""Naked""
naked.TextColor3 = Color3.fromRGB(255, 255, 255)
naked.TextSize = 23.000

credits.Name = ""credits""
credits.Parent = top
credits.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
credits.BackgroundTransparency = 1.000
credits.Position = UDim2.new(0, 0, 1, 0)
credits.Size = UDim2.new(0, 291, 0, 23)
credits.Font = Enum.Font.SourceSansLight
credits.Text = ""Commands/Scripts by Harkinian, UI by Unverified""
credits.TextColor3 = Color3.fromRGB(255, 255, 255)
credits.TextSize = 17.000
credits.TextWrapped = true

box.Name = ""box""
box.Parent = top
box.BackgroundColor3 = Color3.fromRGB(172, 172, 172)
box.BackgroundTransparency = 0.500
box.BorderSizePixel = 0
box.Position = UDim2.new(0.0206185561, 0, 5.39550591, 0)
box.Size = UDim2.new(0, 134, 0, 40)
box.Font = Enum.Font.SourceSansLight
box.Text = ""Box""
box.TextColor3 = Color3.fromRGB(255, 255, 255)
box.TextSize = 23.000

sink.Name = ""sink""
sink.Parent = top
sink.BackgroundColor3 = Color3.fromRGB(172, 172, 172)
sink.BackgroundTransparency = 0.500
sink.BorderSizePixel = 0
sink.Position = UDim2.new(0.525773168, 0, 5.39550591, 0)
sink.Size = UDim2.new(0, 131, 0, 40)
sink.Font = Enum.Font.SourceSansLight
sink.Text = ""Sink""
sink.TextColor3 = Color3.fromRGB(255, 255, 255)
sink.TextSize = 23.000

explorer.Name = ""explorer""
explorer.Parent = top
explorer.BackgroundColor3 = Color3.fromRGB(172, 172, 172)
explorer.BackgroundTransparency = 0.500
explorer.BorderSizePixel = 0
explorer.Position = UDim2.new(0.525773168, 0, 7.1955061, 0)
explorer.Size = UDim2.new(0, 131, 0, 40)
explorer.Font = Enum.Font.SourceSansLight
explorer.Text = ""Explorer""
explorer.TextColor3 = Color3.fromRGB(255, 255, 255)
explorer.TextSize = 23.000

ban.Name = ""ban""
ban.Parent = top
ban.BackgroundColor3 = Color3.fromRGB(172, 172, 172)
ban.BackgroundTransparency = 0.500
ban.BorderSizePixel = 0
ban.Position = UDim2.new(0.0206185561, 0, 7.1955061, 0)
ban.Size = UDim2.new(0, 134, 0, 40)
ban.Font = Enum.Font.SourceSansLight
ban.Text = ""Ban""
ban.TextColor3 = Color3.fromRGB(255, 255, 255)
ban.TextSize = 23.000

target.Name = ""target""
target.Parent = top
target.BackgroundColor3 = Color3.fromRGB(172, 172, 172)
target.BackgroundTransparency = 0.400
target.Position = UDim2.new(0.0206185561, 0, 8.86666584, 0)
target.Size = UDim2.new(0, 278, 0, 33)
target.Font = Enum.Font.SourceSans
target.Text = """"
target.TextColor3 = Color3.fromRGB(255, 255, 255)
target.TextSize = 23.000

queue.Name = ""queue""
queue.Parent = top
queue.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
queue.BackgroundTransparency = 1.000
queue.Position = UDim2.new(-0.00343642617, 0, 9.96666622, 0)
queue.Size = UDim2.new(0, 201, 0, 23)
queue.Font = Enum.Font.SourceSans
queue.Text = ""Replication Queue: 0""
queue.TextColor3 = Color3.fromRGB(255, 0, 4)
queue.TextSize = 20.000
queue.TextWrapped = true

slock.Name = ""slock""
slock.Parent = top
slock.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
slock.BackgroundTransparency = 1.000
slock.Position = UDim2.new(0.546391726, 0, 9.96666622, 0)
slock.Size = UDim2.new(0, 131, 0, 23)
slock.Font = Enum.Font.SourceSans
slock.Text = ""SLOCK: false""
slock.TextColor3 = Color3.fromRGB(255, 0, 4)
slock.TextSize = 20.000
slock.TextWrapped = true

refresh.Name = ""refresh""
refresh.Parent = top
refresh.BackgroundColor3 = Color3.fromRGB(172, 172, 172)
refresh.BackgroundTransparency = 0.500
refresh.BorderSizePixel = 0
refresh.Position = UDim2.new(0.525773168, 0, 3.56217265, 0)
refresh.Size = UDim2.new(0, 131, 0, 40)
refresh.Font = Enum.Font.SourceSansLight
refresh.Text = ""Refresh Queue""
refresh.TextColor3 = Color3.fromRGB(255, 255, 255)
refresh.TextSize = 23.000

--Slave's work:

function getRoot(char)
	local rootPart = char:FindFirstChild('HumanoidRootPart') or char:FindFirstChild('Torso') or char:FindFirstChild('UpperTorso')
	return rootPart
end

local mouse = Players.LocalPlayer:GetMouse()

local MousePositionToVector2 = function()
	return Vector2.new(mouse.X, mouse.Y)
end

local WTS = function(Object)
	local ObjectVector = workspace.CurrentCamera:WorldToScreenPoint(Object.Position)
	return Vector2.new(ObjectVector.X, ObjectVector.Y)
end

local GetClosestPlayerFromCursor = function()
	local found = nil
	local ClosestDistance = math.huge
	for i, v in pairs(Players:GetPlayers()) do
		if v ~= Players.LocalPlayer and v.Character and v.Character:FindFirstChildOfClass(""Humanoid"") then
			for k, x in pairs(v.Character:GetChildren()) do
				if string.find(x.Name, ""Torso"") then
					local Distance = (WTS(x) - MousePositionToVector2()).Magnitude
					if Distance < ClosestDistance then
						ClosestDistance = Distance
						found = v
					end
				end
			end
		end
	end
	return found
end

local SpecialPlayerCases = {
	[""all""] = function(speaker) return Players:GetPlayers() end,
	[""others""] = function(speaker)
		local plrs = {}
		for i,v in pairs(Players:GetPlayers()) do
			if v ~= speaker then
				table.insert(plrs,v)
			end
		end
		return plrs
	end,
	[""me""] = function(speaker)return {speaker} end,
	[""#(%d+)""] = function(speaker,args,currentList)
		local returns = {}
		local randAmount = tonumber(args[1])
		local players = {unpack(currentList)}
		for i = 1,randAmount do
			if #players == 0 then break end
			local randIndex = math.random(1,#players)
			table.insert(returns,players[randIndex])
			table.remove(players,randIndex)
		end
		return returns
	end,
	[""random""] = function(speaker,args,currentList)
		local players = Players:GetPlayers()
		local localplayer = Players.LocalPlayer
		table.remove(players, table.find(players, localplayer))
		return {players[math.random(1,#players)]}
	end,
	[""%%(.+)""] = function(speaker,args)
		local returns = {}
		local team = args[1]
		for _,plr in pairs(Players:GetPlayers()) do
			if plr.Team and string.sub(string.lower(plr.Team.Name),1,#team) == string.lower(team) then
				table.insert(returns,plr)
			end
		end
		return returns
	end,
	[""allies""] = function(speaker)
		local returns = {}
		local team = speaker.Team
		for _,plr in pairs(Players:GetPlayers()) do
			if plr.Team == team then
				table.insert(returns,plr)
			end
		end
		return returns
	end,
	[""enemies""] = function(speaker)
		local returns = {}
		local team = speaker.Team
		for _,plr in pairs(Players:GetPlayers()) do
			if plr.Team ~= team then
				table.insert(returns,plr)
			end
		end
		return returns
	end,
	[""team""] = function(speaker)
		local returns = {}
		local team = speaker.Team
		for _,plr in pairs(Players:GetPlayers()) do
			if plr.Team == team then
				table.insert(returns,plr)
			end
		end
		return returns
	end,
	[""nonteam""] = function(speaker)
		local returns = {}
		local team = speaker.Team
		for _,plr in pairs(Players:GetPlayers()) do
			if plr.Team ~= team then
				table.insert(returns,plr)
			end
		end
		return returns
	end,
	[""friends""] = function(speaker,args)
		local returns = {}
		for _,plr in pairs(Players:GetPlayers()) do
			if plr:IsFriendsWith(speaker.UserId) and plr ~= speaker then
				table.insert(returns,plr)
			end
		end
		return returns
	end,
	[""nonfriends""] = function(speaker,args)
		local returns = {}
		for _,plr in pairs(Players:GetPlayers()) do
			if not plr:IsFriendsWith(speaker.UserId) and plr ~= speaker then
				table.insert(returns,plr)
			end
		end
		return returns
	end,
	[""guests""] = function(speaker,args)
		local returns = {}
		for _,plr in pairs(Players:GetPlayers()) do
			if plr.Guest then
				table.insert(returns,plr)
			end
		end
		return returns
	end,
	[""bacons""] = function(speaker,args)
		local returns = {}
		for _,plr in pairs(Players:GetPlayers()) do
			if plr.Character:FindFirstChild('Pal Hair') or plr.Character:FindFirstChild('Kate Hair') then
				table.insert(returns,plr)
			end
		end
		return returns
	end,
	[""age(%d+)""] = function(speaker,args)
		local returns = {}
		local age = tonumber(args[1])
		if age ~= nil then return end
		for _,plr in pairs(Players:GetPlayers()) do
			if plr.AccountAge <= age then
				table.insert(returns,plr)
			end
		end
		return returns
	end,
	[""nearest""] = function(speaker,args,currentList)
		local speakerChar = speaker.Character
		if not speakerChar or not getRoot(speakerChar) then return end
		local lowest = math.huge
		local NearestPlayer = nil
		for _,plr in pairs(currentList) do
			if plr ~= speaker and plr.Character then
				local distance = plr:DistanceFromCharacter(getRoot(speakerChar).Position)
				if distance < lowest then
					lowest = distance
					NearestPlayer = {plr}
				end
			end
		end
		return NearestPlayer
	end,
	[""farthest""] = function(speaker,args,currentList)
		local speakerChar = speaker.Character
		if not speakerChar or not getRoot(speakerChar) then return end
		local highest = 0
		local Farthest = nil
		for _,plr in pairs(currentList) do
			if plr ~= speaker and plr.Character then
				local distance = plr:DistanceFromCharacter(getRoot(speakerChar).Position)
				if distance > highest then
					highest = distance
					Farthest = {plr}
				end
			end
		end
		return Farthest
	end,
	[""group(%d+)""] = function(speaker,args)
		local returns = {}
		local groupID = tonumber(args[1])
		for _,plr in pairs(Players:GetPlayers()) do
			if plr:IsInGroup(groupID) then  
				table.insert(returns,plr)
			end
		end
		return returns
	end,
	[""alive""] = function(speaker,args)
		local returns = {}
		for _,plr in pairs(Players:GetPlayers()) do
			if plr.Character and plr.Character:FindFirstChildOfClass(""Humanoid"") and plr.Character:FindFirstChildOfClass(""Humanoid"").Health > 0 then
				table.insert(returns,plr)
			end
		end
		return returns
	end,
	[""dead""] = function(speaker,args)
		local returns = {}
		for _,plr in pairs(Players:GetPlayers()) do
			if (not plr.Character or not plr.Character:FindFirstChildOfClass(""Humanoid"")) or plr.Character:FindFirstChildOfClass(""Humanoid"").Health <= 0 then
				table.insert(returns,plr)
			end
		end
		return returns
	end,
	[""rad(%d+)""] = function(speaker,args)
		local returns = {}
		local radius = tonumber(args[1])
		local speakerChar = speaker.Character
		if not speakerChar or not getRoot(speakerChar) then return end
		for _,plr in pairs(Players:GetPlayers()) do
			if plr.Character and getRoot(plr.Character) then
				local magnitude = (getRoot(plr.Character).Position-getRoot(speakerChar).Position).magnitude
				if magnitude <= radius then table.insert(returns,plr) end
			end
		end
		return returns
	end,
	[""cursor""] = function(speaker)
		local plrs = {}
		local v = GetClosestPlayerFromCursor()
		if v ~= nil then table.insert(plrs, v) end
		return plrs
	end,
}

function onlyIncludeInTable(tab,matches)
	local matchTable = {}
	local resultTable = {}
	for i,v in pairs(matches) do matchTable[v.Name] = true end
	for i,v in pairs(tab) do if matchTable[v.Name] then table.insert(resultTable,v) end end
	return resultTable
end

function toTokens(str)
	local tokens = {}
	for op,name in string.gmatch(str,""([+-])([^+-]+)"") do
		table.insert(tokens,{Operator = op,Name = name})
	end
	return tokens
end

function getPlayersByName(Name)
	local Name,Len,Found = string.lower(Name),#Name,{}
	for _,v in pairs(Players:GetPlayers()) do
		if Name:sub(0,1) == '@' then
			if string.sub(string.lower(v.Name),1,Len-1) == Name:sub(2) then
				table.insert(Found,v)
			end
		else
			if string.sub(string.lower(v.Name),1,Len) == Name or string.sub(string.lower(v.DisplayName),1,Len) == Name then
				table.insert(Found,v)
			end
		end
	end
	return Found
end

function splitString(str,delim)
	local broken = {}
	if delim == nil then delim = "","" end
	for w in string.gmatch(str,""[^""..delim..""]+"") do
		table.insert(broken,w)
	end
	return broken
end

function removeTableMatches(tab,matches)
	local matchTable = {}
	local resultTable = {}
	for i,v in pairs(matches) do matchTable[v.Name] = true end
	for i,v in pairs(tab) do if not matchTable[v.Name] then table.insert(resultTable,v) end end
	return resultTable
end

function getPlayer(list,speaker)
	if list == nil then return {speaker.Name} end
	local nameList = splitString(list,"","")

	local foundList = {}

	for _,name in pairs(nameList) do
		if string.sub(name,1,1) ~= ""+"" and string.sub(name,1,1) ~= ""-"" then name = ""+""..name end
		local tokens = toTokens(name)
		local initialPlayers = Players:GetPlayers()

		for i,v in pairs(tokens) do
			if v.Operator == ""+"" then
				local tokenContent = v.Name
				local foundCase = false
				for regex,case in pairs(SpecialPlayerCases) do
					local matches = {string.match(tokenContent,""^""..regex..""$"")}
					if #matches > 0 then
						foundCase = true
						initialPlayers = onlyIncludeInTable(initialPlayers,case(speaker,matches,initialPlayers))
					end
				end
				if not foundCase then
					initialPlayers = onlyIncludeInTable(initialPlayers,getPlayersByName(tokenContent))
				end
			else
				local tokenContent = v.Name
				local foundCase = false
				for regex,case in pairs(SpecialPlayerCases) do
					local matches = {string.match(tokenContent,""^""..regex..""$"")}
					if #matches > 0 then
						foundCase = true
						initialPlayers = removeTableMatches(initialPlayers,case(speaker,matches,initialPlayers))
					end
				end
				if not foundCase then
					initialPlayers = removeTableMatches(initialPlayers,getPlayersByName(tokenContent))
				end
			end
		end

		for i,v in pairs(initialPlayers) do table.insert(foundList,v) end
	end

	local foundNames = {}
	for i,v in pairs(foundList) do table.insert(foundNames,v.Name) end

	return foundNames
end

spawn(function()
	for i,slave in pairs(game:GetDescendants()) do
		if slave.Name == ""DestroySegway"" or slave.Name == """" or slave.Name == ""Destroy"" or slave.Name == ""Mine""or slave.Name == ""Delete"" or slave.Name == ""DeleteCar"" then
			local function Destroy(instance)
				spawn(function()
					slave:FireServer(instance)
				end)
			end

			ban.MouseButton1Click:Connect(function()
				if string.lower(target.Text) == ""all"" then
					for i,c in pairs(game.Players:GetPlayers()) do
						ohok = c
						slave:FireServer(ohok, {Value = ohok})
					end
				else
					slave:FireServer(game.Players:FindFirstChild(target.Text), {Value = game.Players:FindFirstChild(target.Text)})
				end
			end)

			sink.MouseButton1Click:Connect(function()
				if string.lower(target.Text) == ""all"" then
					for i,c in pairs(game.Players:GetPlayers()) do
						ohok = c.Character.HumanoidRootPart
						slave:FireServer(ohok, {Value = ohok})
					end
				else
					slave:FireServer(game.Players:FindFirstChild(target.Text).Character[""HumanoidRootPart""], {Value = game.Players:FindFirstChild(target.Text).Character[""HumanoidRootPart""]})
				end
			end)

			rtools.MouseButton1Click:Connect(function()
				local Tool = Instance.new(""Tool"",game.Players.LocalPlayer.Backpack)
				local Equipped = false

				Tool.RequiresHandle = false
				Tool.Name = ""Destroy Tool""
				local Field = Instance.new(""SelectionBox"",game.Workspace)
				local Mouse = game.Players.LocalPlayer:GetMouse()
				Field.LineThickness = 0.1

				Tool.Equipped:connect(function()
					Equipped = true

					while Equipped == true do
						if Mouse.Target ~= nil then
							Field.Adornee = Mouse.Target

						else
							Field.Adornee = nil
						end
						wait()
					end
				end)

				Tool.Unequipped:connect(function()
					Equipped = false
					Field.Adornee = nil
				end)

				Tool.Activated:connect(function()
					if Mouse.Target ~= nil then
						slave:FireServer(Mouse.Target, {Value = Mouse.Target})
						local AttemptTarget = Mouse.Target
						while AttemptTarget ~= nil do
							AttemptTarget.Velocity = Vector3.new(0,-1000000000000000,0)
							AttemptTarget.CanCollide = false
							wait()
						end

					end
				end)
			end)

			kill.MouseButton1Click:Connect(function()
				if string.lower(target.Text) == ""all"" then
					for i,c in pairs(game.Players:GetPlayers()) do
						ohok = c.Character[""Head""]
						slave:FireServer(ohok, {Value = ohok})
					end
				else
					if game.Players:FindFirstChild(target.Text) then
						if game.Players:FindFirstChild(target.Text).Character then
							slave:FireServer(game.Players:FindFirstChild(target.Text).Character.Head, {Value = game.Players:FindFirstChild(target.Text).Character.Head}) else
							print(""who this"")

						end

					end

				end
			end)

			naked.MouseButton1Click:Connect(function()
				if string.lower(target.Text) == ""all"" then
					for i,c in pairs(game.Players:GetPlayers()) do
						ohok = c.Character.Shirt
						ohoka = c.Character.Pants
						slave:FireServer(ohok, {Value = ohok})
						slave:FireServer(ohoka, {Value = ohoka})
					end
				else
					slave:FireServer(game.Players:FindFirstChild(target.Text).Character.Shirt, {Value = game.Players:FindFirstChild(target.Text).Character.Shirt})
					slave:FireServer(game.Players:FindFirstChild(target.Text).Character.Pants, {Value = game.Players:FindFirstChild(target.Text).Character.Pants})
				end
			end)

			box.MouseButton1Click:connect(function()
				local players = getPlayer(target.Text, Players.LocalPlayer)
				for i, v in pairs(players) do
					for i, v in pairs(Players[v].Character:GetChildren()) do
						if v:IsA(""Accessory"") then
							Destroy(v)
						end
					end
					for i, v in pairs(Players[v].Character:GetChildren()) do
						if v:IsA(""CharacterMesh"") then
							Destroy(v)
						end
					end
					Destroy(Players[v].Character:FindFirstChildOfClass(""Pants""))
					Destroy(Players[v].Character:FindFirstChildOfClass(""Shirt""))
					Destroy(Players[v].Character:FindFirstChildOfClass(""ShirtGraphic""))
					Destroy(Players[v].Character[""Left Arm""])
					Destroy(Players[v].Character[""Left Leg""])
					Destroy(Players[v].Character[""Right Arm""])
					Destroy(Players[v].Character[""Right Leg""])
					Destroy(Players[v].Character.Head:FindFirstChildOfClass(""SpecialMesh""))
					Destroy(Players[v].Character.Head:FindFirstChildOfClass(""Decal""))
				end
			end)

			explorer.MouseButton1Click:Connect(function()
				loadstring(game:GetObjects(""rbxassetid://492016519"")[1].Source)()
			end)


		end
	end
end)"
0dK8UmE2,CPCC App APK events reverse engineering,metalx1000,Bash,Friday 16th of June 2023 06:05:20 PM CDT,"#get the APK [Note that it is 70MB]
#https://play.google.com/store/apps/datasafety?id=com.subsplashconsulting.s_TRHJMF&hl=en_US&gl=US
#also note this app wants permissions for location, camera, contacts, and other it does not need
#and according to google play this app collects data, including those above and more and
#shares them with third parties
https://m.apkpure.com/center-point-naples/com.subsplashconsulting.s_TRHJMF/download

#install the APK
adb install cpcc.apk

#run the follow and then start the app and start browsing the app
adb shell logcat|grep http

#notice that there is a lot of subsplash.com
#narrow the search down with
adb shell logcat|grep ""subsplash.com""

#one interesting link is the ""event-list""
#it's json
wget ""https://feeds.subsplash.com/api/v1/event-list/a03aad55-5a0d-4f82-bf6d-bef7cac7c499"" -qO-|jq .

#let's get just the urls listed in the json that are ""events""
wget ""https://feeds.subsplash.com/api/v1/event-list/a03aad55-5a0d-4f82-bf6d-bef7cac7c499"" -qO- |jq .|grep url|grep event|cut -d\"" -f4

#Maybe just use jq to be neat about it
wget ""https://feeds.subsplash.com/api/v1/event-list/a03aad55-5a0d-4f82-bf6d-bef7cac7c499"" -qO- |jq -r '.items[].actions[].url'

#ok, each one of those is more json, 
#but the urls within that are webpages
#let's just loop through each one and open the url

eventlist=""https://feeds.subsplash.com/api/v1/event-list/a03aad55-5a0d-4f82-bf6d-bef7cac7c499""
wget ""$eventlist"" -qO- |jq -r '.items[].actions[].url'|while read event;
do
  url=""$(wget -qO- ""$event""|jq -r '.actionSheet.items[0].actions[].url')""
  xdg-open ""$url""
done
"
AuPSckXi,initalize wireplumber,theguild42,C++,Friday 16th of June 2023 06:00:01 PM CDT,"#include <iostream>
#include ""gio/gio.h""
using namespace std;

#include ""wp.h""
int main(){
    wp_init();
    cout << ""WirePlumber Initalized!"" << endl;
    return 0;
}"
W5d4nBKP,glib errors,theguild42,Bash,Friday 16th of June 2023 05:57:21 PM CDT,"$ g++ -c -I/home/whitequill/gitrepos/wireplumber/lib/wp -I/home/whitequill/gitrepos/glib -I/home/whitequill/gitrepos/glib/glib ./initialize_wireplumber.c -o ./pw
In file included from /home/whitequill/gitrepos/glib/glib/gtypes.h:34,
                 from /home/whitequill/gitrepos/glib/glib/galloca.h:34,
                 from /home/whitequill/gitrepos/glib/glib/glib.h:32,
                 from /home/whitequill/gitrepos/glib/gobject/gbinding.h:30,
                 from /home/whitequill/gitrepos/glib/glib/glib-object.h:24,
                 from /home/whitequill/gitrepos/glib/gio/gioenums.h:30,
                 from /home/whitequill/gitrepos/glib/gio/giotypes.h:30,
                 from ./gio/gio.h:28,
                 from ./initialize_wireplumber.c:2:
/home/whitequill/gitrepos/glib/glib/glibconfig.h:13:2: error: invalid preprocessing directive #mesondefine
   13 | #mesondefine GLIB_HAVE_ALLOCA_H
      |  ^~~~~~~~~~~
/home/whitequill/gitrepos/glib/glib/glibconfig.h:15:2: error: invalid preprocessing directive #mesondefine
   15 | #mesondefine GLIB_STATIC_COMPILATION
      |  ^~~~~~~~~~~
/home/whitequill/gitrepos/glib/glib/glibconfig.h:16:2: error: invalid preprocessing directive #mesondefine
   16 | #mesondefine GOBJECT_STATIC_COMPILATION
      |  ^~~~~~~~~~~
/home/whitequill/gitrepos/glib/glib/glibconfig.h:17:2: error: invalid preprocessing directive #mesondefine
   17 | #mesondefine GIO_STATIC_COMPILATION
      |  ^~~~~~~~~~~
/home/whitequill/gitrepos/glib/glib/glibconfig.h:18:2: error: invalid preprocessing directive #mesondefine
   18 | #mesondefine GMODULE_STATIC_COMPILATION
      |  ^~~~~~~~~~~
/home/whitequill/gitrepos/glib/glib/glibconfig.h:19:2: error: invalid preprocessing directive #mesondefine
   19 | #mesondefine G_INTL_STATIC_COMPILATION
      |  ^~~~~~~~~~~
/home/whitequill/gitrepos/glib/glib/glibconfig.h:20:2: error: invalid preprocessing directive #mesondefine
   20 | #mesondefine FFI_STATIC_BUILD
      |  ^~~~~~~~~~~
/home/whitequill/gitrepos/glib/glib/glibconfig.h:26:2: error: invalid preprocessing directive #mesondefine
   26 | #mesondefine GLIB_USING_SYSTEM_PRINTF
      |  ^~~~~~~~~~~
/home/whitequill/gitrepos/glib/glib/glibconfig.h:47:16: error: stray ‘@’ in program
   47 | typedef signed @gint16@ gint16;
      |                ^
/home/whitequill/gitrepos/glib/glib/glibconfig.h:47:23: error: stray ‘@’ in program
   47 | typedef signed @gint16@ gint16;
      |                       ^
/home/whitequill/gitrepos/glib/glib/glibconfig.h:48:18: error: stray ‘@’ in program
   48 | typedef unsigned @gint16@ guint16;
      |                  ^
/home/whitequill/gitrepos/glib/glib/glibconfig.h:48:25: error: stray ‘@’ in program
   48 | typedef unsigned @gint16@ guint16;
      |                         ^
/home/whitequill/gitrepos/glib/glib/glibconfig.h:55:16: error: stray ‘@’ in program
   55 | typedef signed @gint32@ gint32;
      |                ^
/home/whitequill/gitrepos/glib/glib/glibconfig.h:55:23: error: stray ‘@’ in program
   55 | typedef signed @gint32@ gint32;
      |                       ^
/home/whitequill/gitrepos/glib/glib/glibconfig.h:56:18: error: stray ‘@’ in program
   56 | typedef unsigned @gint32@ guint32;
      |                  ^
/home/whitequill/gitrepos/glib/glib/glibconfig.h:56:25: error: stray ‘@’ in program
   56 | typedef unsigned @gint32@ guint32;
      |                         ^
/home/whitequill/gitrepos/glib/glib/glibconfig.h:65:1: error: stray ‘@’ in program
   65 | @glib_extension@typedef signed @gint64@ gint64;
      | ^
/home/whitequill/gitrepos/glib/glib/glibconfig.h:65:16: error: stray ‘@’ in program
   65 | @glib_extension@typedef signed @gint64@ gint64;
      |                ^
/home/whitequill/gitrepos/glib/glib/glibconfig.h:65:32: error: stray ‘@’ in program
   65 | @glib_extension@typedef signed @gint64@ gint64;
      |                                ^
/home/whitequill/gitrepos/glib/glib/glibconfig.h:65:39: error: stray ‘@’ in program
   65 | @glib_extension@typedef signed @gint64@ gint64;
      |                                       ^
/home/whitequill/gitrepos/glib/glib/glibconfig.h:66:1: error: stray ‘@’ in program
   66 | @glib_extension@typedef unsigned @gint64@ guint64;
      | ^
/home/whitequill/gitrepos/glib/glib/glibconfig.h:66:16: error: stray ‘@’ in program
   66 | @glib_extension@typedef unsigned @gint64@ guint64;
      |                ^
/home/whitequill/gitrepos/glib/glib/glibconfig.h:66:34: error: stray ‘@’ in program
   66 | @glib_extension@typedef unsigned @gint64@ guint64;
      |                                  ^
/home/whitequill/gitrepos/glib/glib/glibconfig.h:66:41: error: stray ‘@’ in program
   66 | @glib_extension@typedef unsigned @gint64@ guint64;
      |                                         ^
/home/whitequill/gitrepos/glib/glib/glibconfig.h:81:16: error: stray ‘@’ in program
   81 | typedef signed @glib_size_type_define@ gssize;
      |                ^
/home/whitequill/gitrepos/glib/glib/glibconfig.h:81:38: error: stray ‘@’ in program
   81 | typedef signed @glib_size_type_define@ gssize;
      |                                      ^
/home/whitequill/gitrepos/glib/glib/glibconfig.h:82:18: error: stray ‘@’ in program
   82 | typedef unsigned @glib_size_type_define@ gsize;
      |                  ^
/home/whitequill/gitrepos/glib/glib/glibconfig.h:82:40: error: stray ‘@’ in program
   82 | typedef unsigned @glib_size_type_define@ gsize;
      |                                        ^
/home/whitequill/gitrepos/glib/glib/glibconfig.h:108:16: error: stray ‘@’ in program
  108 | typedef signed @glib_intptr_type_define@ gintptr;
      |                ^
/home/whitequill/gitrepos/glib/glib/glibconfig.h:108:40: error: stray ‘@’ in program
  108 | typedef signed @glib_intptr_type_define@ gintptr;
      |                                        ^
/home/whitequill/gitrepos/glib/glib/glibconfig.h:109:18: error: stray ‘@’ in program
  109 | typedef unsigned @glib_intptr_type_define@ guintptr;
      |                  ^
/home/whitequill/gitrepos/glib/glib/glibconfig.h:109:42: error: stray ‘@’ in program
  109 | typedef unsigned @glib_intptr_type_define@ guintptr;
      |                                          ^
/home/whitequill/gitrepos/glib/glib/glibconfig.h:119:1: error: stray ‘@’ in program
  119 | @glib_os@
      | ^
/home/whitequill/gitrepos/glib/glib/glibconfig.h:119:9: error: stray ‘@’ in program
  119 | @glib_os@
      |         ^
/home/whitequill/gitrepos/glib/glib/glibconfig.h:122:1: error: stray ‘@’ in program
  122 | @glib_vacopy@
      | ^
/home/whitequill/gitrepos/glib/glib/glibconfig.h:122:13: error: stray ‘@’ in program
  122 | @glib_vacopy@
      |             ^
/home/whitequill/gitrepos/glib/glib/glibconfig.h:134:2: error: invalid preprocessing directive #mesondefine
  134 | #mesondefine G_HAVE_GROWING_STACK
      |  ^~~~~~~~~~~
/home/whitequill/gitrepos/glib/glib/glibconfig.h:151:9: warning: ISO C++11 requires whitespace after the macro name
  151 | #define G_THREADS_IMPL_@g_threads_impl_def@
      |         ^~~~~~~~~~~~~~~
/home/whitequill/gitrepos/glib/glib/glibconfig.h:153:2: error: invalid preprocessing directive #mesondefine
  153 | #mesondefine G_ATOMIC_LOCK_FREE
      |  ^~~~~~~~~~~
/home/whitequill/gitrepos/glib/glib/glibconfig.h:155:9: warning: ISO C++11 requires whitespace after the macro name
  155 | #define GINT16_TO_@g_bs_native@(val)    ((gint16) (val))
      |         ^~~~~~~~~~
/home/whitequill/gitrepos/glib/glib/glibconfig.h:156:9: warning: ISO C++11 requires whitespace after the macro name
  156 | #define GUINT16_TO_@g_bs_native@(val)   ((guint16) (val))
      |         ^~~~~~~~~~~
/home/whitequill/gitrepos/glib/glib/glibconfig.h:157:9: warning: ISO C++11 requires whitespace after the macro name
  157 | #define GINT16_TO_@g_bs_alien@(val)     ((gint16) GUINT16_SWAP_LE_BE (val))
      |         ^~~~~~~~~~
/home/whitequill/gitrepos/glib/glib/glibconfig.h:157: warning: ""GINT16_TO_"" redefined
  157 | #define GINT16_TO_@g_bs_alien@(val)     ((gint16) GUINT16_SWAP_LE_BE (val))
      | 
/home/whitequill/gitrepos/glib/glib/glibconfig.h:155: note: this is the location of the previous definition
  155 | #define GINT16_TO_@g_bs_native@(val)    ((gint16) (val))
      | 
/home/whitequill/gitrepos/glib/glib/glibconfig.h:158:9: warning: ISO C++11 requires whitespace after the macro name
  158 | #define GUINT16_TO_@g_bs_alien@(val)    (GUINT16_SWAP_LE_BE (val))
      |         ^~~~~~~~~~~
/home/whitequill/gitrepos/glib/glib/glibconfig.h:158: warning: ""GUINT16_TO_"" redefined
  158 | #define GUINT16_TO_@g_bs_alien@(val)    (GUINT16_SWAP_LE_BE (val))
      | 
/home/whitequill/gitrepos/glib/glib/glibconfig.h:156: note: this is the location of the previous definition
  156 | #define GUINT16_TO_@g_bs_native@(val)   ((guint16) (val))
      | 
/home/whitequill/gitrepos/glib/glib/glibconfig.h:160:9: warning: ISO C++11 requires whitespace after the macro name
  160 | #define GINT32_TO_@g_bs_native@(val)    ((gint32) (val))
      |         ^~~~~~~~~~
/home/whitequill/gitrepos/glib/glib/glibconfig.h:161:9: warning: ISO C++11 requires whitespace after the macro name
  161 | #define GUINT32_TO_@g_bs_native@(val)   ((guint32) (val))
      |         ^~~~~~~~~~~
/home/whitequill/gitrepos/glib/glib/glibconfig.h:162:9: warning: ISO C++11 requires whitespace after the macro name
  162 | #define GINT32_TO_@g_bs_alien@(val)     ((gint32) GUINT32_SWAP_LE_BE (val))
      |         ^~~~~~~~~~
/home/whitequill/gitrepos/glib/glib/glibconfig.h:162: warning: ""GINT32_TO_"" redefined
  162 | #define GINT32_TO_@g_bs_alien@(val)     ((gint32) GUINT32_SWAP_LE_BE (val))
      | 
/home/whitequill/gitrepos/glib/glib/glibconfig.h:160: note: this is the location of the previous definition
  160 | #define GINT32_TO_@g_bs_native@(val)    ((gint32) (val))
      | 
/home/whitequill/gitrepos/glib/glib/glibconfig.h:163:9: warning: ISO C++11 requires whitespace after the macro name
  163 | #define GUINT32_TO_@g_bs_alien@(val)    (GUINT32_SWAP_LE_BE (val))
      |         ^~~~~~~~~~~
/home/whitequill/gitrepos/glib/glib/glibconfig.h:163: warning: ""GUINT32_TO_"" redefined
  163 | #define GUINT32_TO_@g_bs_alien@(val)    (GUINT32_SWAP_LE_BE (val))
      | 
/home/whitequill/gitrepos/glib/glib/glibconfig.h:161: note: this is the location of the previous definition
  161 | #define GUINT32_TO_@g_bs_native@(val)   ((guint32) (val))
      | 
/home/whitequill/gitrepos/glib/glib/glibconfig.h:165:9: warning: ISO C++11 requires whitespace after the macro name
  165 | #define GINT64_TO_@g_bs_native@(val)    ((gint64) (val))
      |         ^~~~~~~~~~
/home/whitequill/gitrepos/glib/glib/glibconfig.h:166:9: warning: ISO C++11 requires whitespace after the macro name
  166 | #define GUINT64_TO_@g_bs_native@(val)   ((guint64) (val))
      |         ^~~~~~~~~~~
/home/whitequill/gitrepos/glib/glib/glibconfig.h:167:9: warning: ISO C++11 requires whitespace after the macro name
  167 | #define GINT64_TO_@g_bs_alien@(val)     ((gint64) GUINT64_SWAP_LE_BE (val))
      |         ^~~~~~~~~~
/home/whitequill/gitrepos/glib/glib/glibconfig.h:167: warning: ""GINT64_TO_"" redefined
  167 | #define GINT64_TO_@g_bs_alien@(val)     ((gint64) GUINT64_SWAP_LE_BE (val))
      | 
/home/whitequill/gitrepos/glib/glib/glibconfig.h:165: note: this is the location of the previous definition
  165 | #define GINT64_TO_@g_bs_native@(val)    ((gint64) (val))
      | 
/home/whitequill/gitrepos/glib/glib/glibconfig.h:168:9: warning: ISO C++11 requires whitespace after the macro name
  168 | #define GUINT64_TO_@g_bs_alien@(val)    (GUINT64_SWAP_LE_BE (val))
      |         ^~~~~~~~~~~
/home/whitequill/gitrepos/glib/glib/glibconfig.h:168: warning: ""GUINT64_TO_"" redefined
  168 | #define GUINT64_TO_@g_bs_alien@(val)    (GUINT64_SWAP_LE_BE (val))
      | 
/home/whitequill/gitrepos/glib/glib/glibconfig.h:166: note: this is the location of the previous definition
  166 | #define GUINT64_TO_@g_bs_native@(val)   ((guint64) (val))
      | 
/home/whitequill/gitrepos/glib/glib/glibconfig.h:199:9: error: stray ‘@’ in program
  199 | typedef @g_pid_type@ GPid;
      |         ^
/home/whitequill/gitrepos/glib/glib/glibconfig.h:199:20: error: stray ‘@’ in program
  199 | typedef @g_pid_type@ GPid;
      |                    ^
/home/whitequill/gitrepos/glib/glib/glibconfig.h:215:2: error: invalid preprocessing directive #mesondefine
  215 | #mesondefine G_HAVE_FREE_SIZED
      |  ^~~~~~~~~~~
/home/whitequill/gitrepos/glib/glib/gtypes.h:36:10: fatal error: glib/gversionmacros.h: No such file or directory
   36 | #include <glib/gversionmacros.h>
      |          ^~~~~~~~~~~~~~~~~~~~~~~
compilation terminated."
QjW7y7PZ,Mod List,brensen11,JSON,Friday 16th of June 2023 05:43:55 PM CDT,"{
    ""mod_list"" : [
        ""https://dl.dropboxusercontent.com/s/s739pumdh9vcamj/appleskin-forge-mc1.16.x-2.4.0.jar?dl=0"",
        ""https://dl.dropboxusercontent.com/s/qjkvaqrawhowxqd/constructionwand-1.16.5-2.6.jar?dl=0"",
        ""https://dl.dropboxusercontent.com/s/hmpjdm1n8p8bih7/FarmersDelight-1.16.5-0.6.0.jar?dl=0"",
        ""https://dl.dropboxusercontent.com/s/4yyepuz7ffly2iy/gravestone-1.16.5-1.0.7.jar?dl=0"",
        ""https://dl.dropboxusercontent.com/s/ap5ducxv2sl9bxa/Hwyla-forge-1.10.11-B78_1.16.2.jar?dl=0"",
        ""https://dl.dropboxusercontent.com/s/uh78rlbde2eq015/invtweaks-1.16.4-1.0.1.jar?dl=0"",
        ""https://dl.dropboxusercontent.com/s/20y0y3yyuwxmudy/jei-1.16.5-7.8.0.1009.jar?dl=0"",
        ""https://dl.dropboxusercontent.com/s/oxzmssho7xmiwyf/journeymap-1.16.5-5.8.5p6.jar?dl=0"",
        ""https://dl.dropboxusercontent.com/s/e93bq6yib1ctf3i/mana-and-artifice-1.5.1.7.jar?dl=0"",
        ""https://dl.dropboxusercontent.com/s/sy8zew25pgbmk8t/OptiFine_1.16.5_HD_U_G8.jar?dl=0"",
        ""https://dl.dropboxusercontent.com/s/45k2em65yflde9h/refinedstorage-1.9.18.jar?dl=0"",
        ""https://dl.dropboxusercontent.com/s/y2ygowl2l97dn7a/StorageDrawers-1.16.3-8.5.2.jar?dl=0"",
        ""https://dl.dropboxusercontent.com/s/28asefwl39kolbh/Waystones_1.16.5-7.6.4.jar?dl=0"",
		""https://dl.dropboxusercontent.com/s/et3reuyfculjr8k/geckolib-forge-1.16.5-3.0.106.jar?dl=0"",
		""https://dl.dropboxusercontent.com/s/pzxk5s556z69koh/curios-forge-1.16.5-4.1.0.0.jar?dl=0""
    ]
}"
qpG8MVkA,Untitled,Ethan-ZYF,C++,Friday 16th of June 2023 05:01:50 PM CDT,"#include <bits/stdc++.h>
using namespace std;
using i64 = long long;

#ifdef LOCAL
#include ""algo/debug.h""
#else
#define debug(...)
#endif
/*
 * @author jiangly
 * https://codeforces.com/profile/jiangly
 */
struct HLD {
    int n;
    std::vector<int> siz, top, dep, parent, in, out, seq;
    std::vector<std::vector<int>> adj;
    int cur;

    HLD() {}
    HLD(int n) {
        init(n);
    }
    void init(int n) {
        this->n = n;
        siz.resize(n);
        top.resize(n);
        dep.resize(n);
        parent.resize(n);
        in.resize(n);
        out.resize(n);
        seq.resize(n);
        cur = 0;
        adj.assign(n, {});
    }
    void addEdge(int u, int v) {
        adj[u].push_back(v);
        adj[v].push_back(u);
    }
    void work(int root = 0) {
        top[root] = root;
        dep[root] = 0;
        parent[root] = -1;
        dfs1(root);
        dfs2(root);
    }
    void dfs1(int u) {
        if (parent[u] != -1) {
            adj[u].erase(std::find(adj[u].begin(), adj[u].end(), parent[u]));
        }

        siz[u] = 1;
        for (auto &v : adj[u]) {
            parent[v] = u;
            dep[v] = dep[u] + 1;
            dfs1(v);
            siz[u] += siz[v];
            if (siz[v] > siz[adj[u][0]]) {
                std::swap(v, adj[u][0]);
            }
        }
    }
    void dfs2(int u) {
        in[u] = cur++;
        seq[in[u]] = u;
        for (auto v : adj[u]) {
            top[v] = v == adj[u][0] ? top[u] : v;
            dfs2(v);
        }
        out[u] = cur;
    }
    int lca(int u, int v) {
        while (top[u] != top[v]) {
            if (dep[top[u]] > dep[top[v]]) {
                u = parent[top[u]];
            } else {
                v = parent[top[v]];
            }
        }
        return dep[u] < dep[v] ? u : v;
    }

    int dist(int u, int v) {
        return dep[u] + dep[v] - 2 * dep[lca(u, v)];
    }

    int jump(int u, int k) {
        if (dep[u] < k) {
            return -1;
        }

        int d = dep[u] - k;

        while (dep[top[u]] > d) {
            u = parent[top[u]];
        }

        return seq[in[u] - dep[u] + d];
    }

    bool isAncester(int u, int v) {
        return in[u] <= in[v] && in[v] < out[u];
    }

    int rootedChild(int u, int v) {
        if (u == v) {
            return u;
        }
        if (!isAncester(u, v)) {
            return parent[u];
        }
        auto it = std::upper_bound(adj[u].begin(), adj[u].end(), v, [&](int x, int y) {
                      return in[x] < in[y];
                  }) -
                  1;
        return *it;
    }

    int rootedSize(int u, int v) {
        if (u == v) {
            return n;
        }
        if (!isAncester(v, u)) {
            return siz[v];
        }
        return n - siz[rootedChild(v, u)];
    }

    int rootedLca(int a, int b, int c) {
        return lca(a, b) ^ lca(b, c) ^ lca(c, a);
    }
};
/*
 * @author jiangly
 * https://codeforces.com/profile/jiangly
 */
template <class Info,
          class Merge = std::plus<Info>>
struct SegmentTree {
    const int n;
    const Merge merge;
    std::vector<Info> info;
    SegmentTree(int n) : n(n), merge(Merge()), info(4 << std::__lg(n)) {}
    SegmentTree(std::vector<Info> init) : SegmentTree(init.size()) {
        std::function<void(int, int, int)> build = [&](int p, int l, int r) {
            if (r - l == 1) {
                info[p] = init[l];
                return;
            }
            int m = (l + r) / 2;
            build(2 * p, l, m);
            build(2 * p + 1, m, r);
            pull(p);
        };
        build(1, 0, n);
    }
    void pull(int p) {
        info[p] = merge(info[2 * p], info[2 * p + 1]);
    }
    void modify(int p, int l, int r, int x, const Info &v) {
        if (r - l == 1) {
            info[p] = v;
            return;
        }
        int m = (l + r) / 2;
        if (x < m) {
            modify(2 * p, l, m, x, v);
        } else {
            modify(2 * p + 1, m, r, x, v);
        }
        pull(p);
    }
    void modify(int p, const Info &v) {
        modify(1, 0, n, p, v);
    }
    Info rangeQuery(int p, int l, int r, int x, int y) {
        if (l >= y || r <= x) {
            return Info();
        }
        if (l >= x && r <= y) {
            return info[p];
        }
        int m = (l + r) / 2;
        return merge(rangeQuery(2 * p, l, m, x, y), rangeQuery(2 * p + 1, m, r, x, y));
    }
    Info rangeQuery(int l, int r) {
        return rangeQuery(1, 0, n, l, r);
    }
};

struct Info {
    i64 x;
    Info(i64 x = 0) : x(x) {}
    Info operator+(const Info &rhs) const {
        return Info{max(x, rhs.x)};
    }
};

void solve() {
    int n, m;
    cin >> n >> m;
    HLD hld(n);
    vector<int> a(n);
    for (int i = 0; i < n; i++) {
        cin >> a[i];
    }

    for (int i = 0; i < n - 1; i++) {
        int x, y;
        cin >> x >> y;
        hld.addEdge(x - 1, y - 1);
    }
    hld.work();

    SegmentTree<Info> seg(n);
    for (int i = 0; i < n; i++) {
        seg.modify(hld.in[i], Info{a[i]});
    }

    auto query_path = [&](int x, int y) {
        Info res;
        while (hld.top[x] != hld.top[y]) {
            if (hld.dep[hld.top[x]] < hld.dep[hld.top[y]]) {
                swap(x, y);
            }
            res = res + seg.rangeQuery(hld.in[hld.top[x]], hld.in[x] + 1);
            x = hld.parent[hld.top[x]];
        }
        if (hld.dep[x] > hld.dep[y]) {
            swap(x, y);
        }
        res = res + seg.rangeQuery(hld.in[x], hld.in[y] + 1);
        return res;
    };

    auto query_subtree = [&](int x) {
        return seg.rangeQuery(hld.in[x], hld.out[x]);
    };

    auto update_vertex = [&](int x, i64 v) {
        seg.modify(hld.in[x], Info{v});
    };

    auto query_vertex = [&](int x) {
        return seg.rangeQuery(hld.in[x], hld.in[x] + 1);
    };

    while (m--) {
        int op;
        cin >> op;
        if (op == 1) {
            i64 s, x;
            cin >> s >> x;
            update_vertex(s - 1, x);
        } else {
            int x, y;
            cin >> x >> y;
            x--, y--;
            cout << query_path(x, y).x << ' ';
        }
    }
    cout << '\n';
}

int main() {
    cin.tie(nullptr)->sync_with_stdio(false);

    int T = 1;
    // cin >> T;
    for (int Task = 1; Task <= T; Task++) {
        debug(Task);
        solve();
    }

    return 0;
}"
wwL5ED47,Untitled,Ethan-ZYF,C++,Friday 16th of June 2023 04:57:13 PM CDT,"#include <bits/stdc++.h>
using namespace std;
using i64 = long long;

#ifdef LOCAL
#include ""algo/debug.h""
#else
#define debug(...)
#endif
/*
 * @author jiangly
 * https://codeforces.com/profile/jiangly
 */
struct HLD {
    int n;
    std::vector<int> siz, top, dep, parent, in, out, seq;
    std::vector<std::vector<int>> adj;
    int cur;

    HLD() {}
    HLD(int n) {
        init(n);
    }
    void init(int n) {
        this->n = n;
        siz.resize(n);
        top.resize(n);
        dep.resize(n);
        parent.resize(n);
        in.resize(n);
        out.resize(n);
        seq.resize(n);
        cur = 0;
        adj.assign(n, {});
    }
    void addEdge(int u, int v) {
        adj[u].push_back(v);
        adj[v].push_back(u);
    }
    void work(int root = 0) {
        top[root] = root;
        dep[root] = 0;
        parent[root] = -1;
        dfs1(root);
        dfs2(root);
    }
    void dfs1(int u) {
        if (parent[u] != -1) {
            adj[u].erase(std::find(adj[u].begin(), adj[u].end(), parent[u]));
        }

        siz[u] = 1;
        for (auto &v : adj[u]) {
            parent[v] = u;
            dep[v] = dep[u] + 1;
            dfs1(v);
            siz[u] += siz[v];
            if (siz[v] > siz[adj[u][0]]) {
                std::swap(v, adj[u][0]);
            }
        }
    }
    void dfs2(int u) {
        in[u] = cur++;
        seq[in[u]] = u;
        for (auto v : adj[u]) {
            top[v] = v == adj[u][0] ? top[u] : v;
            dfs2(v);
        }
        out[u] = cur;
    }
    int lca(int u, int v) {
        while (top[u] != top[v]) {
            if (dep[top[u]] > dep[top[v]]) {
                u = parent[top[u]];
            } else {
                v = parent[top[v]];
            }
        }
        return dep[u] < dep[v] ? u : v;
    }

    int dist(int u, int v) {
        return dep[u] + dep[v] - 2 * dep[lca(u, v)];
    }

    int jump(int u, int k) {
        if (dep[u] < k) {
            return -1;
        }

        int d = dep[u] - k;

        while (dep[top[u]] > d) {
            u = parent[top[u]];
        }

        return seq[in[u] - dep[u] + d];
    }

    bool isAncester(int u, int v) {
        return in[u] <= in[v] && in[v] < out[u];
    }

    int rootedChild(int u, int v) {
        if (u == v) {
            return u;
        }
        if (!isAncester(u, v)) {
            return parent[u];
        }
        auto it = std::upper_bound(adj[u].begin(), adj[u].end(), v, [&](int x, int y) {
                      return in[x] < in[y];
                  }) -
                  1;
        return *it;
    }

    int rootedSize(int u, int v) {
        if (u == v) {
            return n;
        }
        if (!isAncester(v, u)) {
            return siz[v];
        }
        return n - siz[rootedChild(v, u)];
    }

    int rootedLca(int a, int b, int c) {
        return lca(a, b) ^ lca(b, c) ^ lca(c, a);
    }
};

/*
 * @author jiangly
 * https://codeforces.com/profile/jiangly
 */
template <class Info, class Tag>
struct LazySegmentTree {
    const int n;
    std::vector<Info> info;
    std::vector<Tag> tag;
    LazySegmentTree(int n) : n(n), info(4 << std::__lg(n)), tag(4 << std::__lg(n)) {}
    LazySegmentTree(std::vector<Info> init) : LazySegmentTree(init.size()) {
        std::function<void(int, int, int)> build = [&](int p, int l, int r) {
            if (r - l == 1) {
                info[p] = init[l];
                return;
            }
            int m = (l + r) / 2;
            build(2 * p, l, m);
            build(2 * p + 1, m, r);
            pull(p);
        };
        build(1, 0, n);
    }
    void pull(int p) {
        info[p] = info[2 * p] + info[2 * p + 1];
    }
    void apply(int p, const Tag &v) {
        info[p].apply(v);
        tag[p].apply(v);
    }
    void push(int p) {
        apply(2 * p, tag[p]);
        apply(2 * p + 1, tag[p]);
        tag[p] = Tag();
    }
    void modify(int p, int l, int r, int x, const Info &v) {
        if (r - l == 1) {
            info[p] = v;
            return;
        }
        int m = (l + r) / 2;
        push(p);
        if (x < m) {
            modify(2 * p, l, m, x, v);
        } else {
            modify(2 * p + 1, m, r, x, v);
        }
        pull(p);
    }
    void modify(int p, const Info &v) {
        modify(1, 0, n, p, v);
    }
    Info rangeQuery(int p, int l, int r, int x, int y) {
        if (l >= y || r <= x) {
            return Info();
        }
        if (l >= x && r <= y) {
            return info[p];
        }
        int m = (l + r) / 2;
        push(p);
        return rangeQuery(2 * p, l, m, x, y) + rangeQuery(2 * p + 1, m, r, x, y);
    }
    Info rangeQuery(int l, int r) {
        return rangeQuery(1, 0, n, l, r);
    }
    void rangeApply(int p, int l, int r, int x, int y, const Tag &v) {
        if (l >= y || r <= x) {
            return;
        }
        if (l >= x && r <= y) {
            apply(p, v);
            return;
        }
        int m = (l + r) / 2;
        push(p);
        rangeApply(2 * p, l, m, x, y, v);
        rangeApply(2 * p + 1, m, r, x, y, v);
        pull(p);
    }
    void rangeApply(int l, int r, const Tag &v) {
        return rangeApply(1, 0, n, l, r, v);
    }

    int search(int p, int l, int r, int x, int y, i64 v) {
        if (l >= y || r <= x) return y;
        if (info[p].min >= v) return y;
        if (r - l == 1) return l;
        int m = (l + r) / 2;
        push(p);
        int res = search(2 * p, l, m, x, y, v);
        if (res == y) res = search(2 * p + 1, m, r, x, y, v);
        return res;
    }

    int search(int l, int r, i64 v) {
        return search(1, 0, n, l, r, v);
    }
};

struct Tag {
    i64 x;
    Tag(i64 _x = 0) : x{_x} {}

    void apply(const Tag &t) {
        x += t.x;
    }
};

struct Info {
    i64 x;

    Info(i64 _x = 0) : x{_x} {}

    void apply(const Tag &t) {
        x += t.x;
    }
};

Info operator+(const Info &a, const Info &b) {
    return Info{max(a.x, b.x)};
}

void solve() {
    int n, m;
    cin >> n >> m;
    HLD hld(n);
    vector<int> a(n);
    for (int i = 0; i < n; i++) {
        cin >> a[i];
    }

    for (int i = 0; i < n - 1; i++) {
        int x, y;
        cin >> x >> y;
        hld.addEdge(x - 1, y - 1);
    }
    hld.work();
    
    LazySegmentTree<Info, Tag> seg(n);
    for (int i = 0; i < n; i++) {
        seg.modify(hld.in[i], Info{a[i]});
    }
    auto update_path = [&](int x, int y, i64 v) {
        while (hld.top[x] != hld.top[y]) {
            if (hld.dep[hld.top[x]] < hld.dep[hld.top[y]]) {
                swap(x, y);
            }
            seg.rangeApply(hld.in[hld.top[x]], hld.in[x] + 1, v);
            x = hld.parent[hld.top[x]];
        }
        if (hld.dep[x] > hld.dep[y]) {
            swap(x, y);
        }
        seg.rangeApply(hld.in[x], hld.in[y] + 1, v);
    };

    auto query_path = [&](int x, int y) {
        Info res;
        while (hld.top[x] != hld.top[y]) {
            if (hld.dep[hld.top[x]] < hld.dep[hld.top[y]]) {
                swap(x, y);
            }
            res = res + seg.rangeQuery(hld.in[hld.top[x]], hld.in[x] + 1);
            x = hld.parent[hld.top[x]];
        }
        if (hld.dep[x] > hld.dep[y]) {
            swap(x, y);
        }
        res = res + seg.rangeQuery(hld.in[x], hld.in[y] + 1);
        return res;
    };

    auto update_subtree = [&](int x, i64 v) {
        seg.rangeApply(hld.in[x], hld.out[x], v);
    };

    auto query_subtree = [&](int x) {
        return seg.rangeQuery(hld.in[x], hld.out[x]);
    };

    auto update_vertex = [&](int x, i64 v) {
        seg.modify(hld.in[x], Info{v});
    };

    auto query_vertex = [&](int x) {
        return seg.rangeQuery(hld.in[x], hld.in[x] + 1);
    };

    while (m--) {
        int op;
        cin >> op;
        if (op == 1) {
            i64 s, x;
            cin >> s >> x;
            update_vertex(s - 1, x);
        } else {
            int x, y;
            cin >> x >> y;
            x--, y--;
            cout << query_path(x, y).x << ' ';
        }
    }
    cout << '\n';
}

int main() {
    cin.tie(nullptr)->sync_with_stdio(false);

    int T = 1;
    // cin >> T;
    for (int Task = 1; Task <= T; Task++) {
        debug(Task);
        solve();
    }

    return 0;
}"
Lf5Ynp9e,ServerError: received 503 HTTP response,Vault-TecTradingCo,Python,Friday 16th of June 2023 04:29:26 PM CDT,"Traceback (most recent call last):
  File ""main.py"", line 57, in wrapper
    job_func(*args, **kwargs)
  File ""main.py"", line 85, in comment_listener
    for comment in fallout76marketplace.stream.comments(skip_existing=True):
  File ""/root/Fallout76MarketplaceKarmaBot/venv/lib/python3.8/site-packages/praw/models/util.py"", line 188, in stream_generator
    for item in reversed(list(function(limit=limit, **function_kwargs))):
  File ""/root/Fallout76MarketplaceKarmaBot/venv/lib/python3.8/site-packages/praw/models/listing/generator.py"", line 63, in __next__
    self._next_batch()
  File ""/root/Fallout76MarketplaceKarmaBot/venv/lib/python3.8/site-packages/praw/models/listing/generator.py"", line 73, in _next_batch
    self._listing = self._reddit.get(self.url, params=self.params)
  File ""/root/Fallout76MarketplaceKarmaBot/venv/lib/python3.8/site-packages/praw/reddit.py"", line 595, in get
    return self._objectify_request(method=""GET"", params=params, path=path)
  File ""/root/Fallout76MarketplaceKarmaBot/venv/lib/python3.8/site-packages/praw/reddit.py"", line 696, in _objectify_request
    self.request(
  File ""/root/Fallout76MarketplaceKarmaBot/venv/lib/python3.8/site-packages/praw/reddit.py"", line 885, in request
    return self._core.request(
  File ""/root/Fallout76MarketplaceKarmaBot/venv/lib/python3.8/site-packages/prawcore/sessions.py"", line 330, in request
    return self._request_with_retries(
  File ""/root/Fallout76MarketplaceKarmaBot/venv/lib/python3.8/site-packages/prawcore/sessions.py"", line 253, in _request_with_retries
    return self._do_retry(
  File ""/root/Fallout76MarketplaceKarmaBot/venv/lib/python3.8/site-packages/prawcore/sessions.py"", line 162, in _do_retry
    return self._request_with_retries(
  File ""/root/Fallout76MarketplaceKarmaBot/venv/lib/python3.8/site-packages/prawcore/sessions.py"", line 253, in _request_with_retries
    return self._do_retry(
  File ""/root/Fallout76MarketplaceKarmaBot/venv/lib/python3.8/site-packages/prawcore/sessions.py"", line 162, in _do_retry
    return self._request_with_retries(
  File ""/root/Fallout76MarketplaceKarmaBot/venv/lib/python3.8/site-packages/prawcore/sessions.py"", line 266, in _request_with_retries
    raise self.STATUS_EXCEPTIONS[response.status_code](response)
prawcore.exceptions.ServerError: received 503 HTTP response
"
n764Qnxa,ServerError: received 504 HTTP response,Vault-TecTradingCo,Python,Friday 16th of June 2023 04:29:21 PM CDT,"Traceback (most recent call last):
  File ""/root/Fallout76MarketplaceKarmaTransferBot/main.py"", line 258, in main
    for comment in comment_stream:
  File ""/root/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/models/util.py"", line 195, in stream_generator
    for item in reversed(list(function(limit=limit, **function_kwargs))):
  File ""/root/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/models/listing/generator.py"", line 63, in __next__
    self._next_batch()
  File ""/root/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/models/listing/generator.py"", line 89, in _next_batch
    self._listing = self._reddit.get(self.url, params=self.params)
  File ""/root/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/util/deprecate_args.py"", line 43, in wrapped
    return func(**dict(zip(_old_args, args)), **kwargs)
  File ""/root/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/reddit.py"", line 634, in get
    return self._objectify_request(method=""GET"", params=params, path=path)
  File ""/root/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/reddit.py"", line 739, in _objectify_request
    self.request(
  File ""/root/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/util/deprecate_args.py"", line 43, in wrapped
    return func(**dict(zip(_old_args, args)), **kwargs)
  File ""/root/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/reddit.py"", line 941, in request
    return self._core.request(
  File ""/root/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 330, in request
    return self._request_with_retries(
  File ""/root/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 253, in _request_with_retries
    return self._do_retry(
  File ""/root/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 162, in _do_retry
    return self._request_with_retries(
  File ""/root/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 253, in _request_with_retries
    return self._do_retry(
  File ""/root/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 162, in _do_retry
    return self._request_with_retries(
  File ""/root/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 266, in _request_with_retries
    raise self.STATUS_EXCEPTIONS[response.status_code](response)
prawcore.exceptions.ServerError: received 504 HTTP response
"
ME5Agxb7,ServerError: received 503 HTTP response,Vault-TecTradingCo,Python,Friday 16th of June 2023 04:23:46 PM CDT,"Traceback (most recent call last):
  File ""/root/Fallout76MarketplaceKarmaTransferBot/main.py"", line 258, in main
    for comment in comment_stream:
  File ""/root/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/models/util.py"", line 195, in stream_generator
    for item in reversed(list(function(limit=limit, **function_kwargs))):
  File ""/root/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/models/listing/generator.py"", line 63, in __next__
    self._next_batch()
  File ""/root/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/models/listing/generator.py"", line 89, in _next_batch
    self._listing = self._reddit.get(self.url, params=self.params)
  File ""/root/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/util/deprecate_args.py"", line 43, in wrapped
    return func(**dict(zip(_old_args, args)), **kwargs)
  File ""/root/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/reddit.py"", line 634, in get
    return self._objectify_request(method=""GET"", params=params, path=path)
  File ""/root/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/reddit.py"", line 739, in _objectify_request
    self.request(
  File ""/root/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/util/deprecate_args.py"", line 43, in wrapped
    return func(**dict(zip(_old_args, args)), **kwargs)
  File ""/root/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/reddit.py"", line 941, in request
    return self._core.request(
  File ""/root/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 330, in request
    return self._request_with_retries(
  File ""/root/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 253, in _request_with_retries
    return self._do_retry(
  File ""/root/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 162, in _do_retry
    return self._request_with_retries(
  File ""/root/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 253, in _request_with_retries
    return self._do_retry(
  File ""/root/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 162, in _do_retry
    return self._request_with_retries(
  File ""/root/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 266, in _request_with_retries
    raise self.STATUS_EXCEPTIONS[response.status_code](response)
prawcore.exceptions.ServerError: received 503 HTTP response
"
QXnKYv3m,Untitled,JWSmythe,PHP,Friday 16th of June 2023 04:17:27 PM CDT,"// This is a dump of all the API results from my Radio Thermostat CT50.  They discontinued the web UI, so I have to build my own.  
// If you're doing the same, I'd love to collaborate.  Email me at jwsmythe[at]jwsmythe.com 
//
// Listing of the /sys/services/httpd_handlers .  This is the same as the one in the API manual, but generated directly from the API responses. 
 
Key	GET	POST
/tstat	1	1
/sys/network	1	1
/sys/updater	0	0
/sys/filesystem	0	0
/sys/fs-image	0	0
/sys/firmware	1	1
/sys/fw-image	0	0
/sys/command	0	0
/sys/services	1	1
/sys/mode	1	1
/sys/name	1	1
/sys/watchdog	1	1
/sys/diag/log	1	1
/sys/diag/stats/live	1	1
/sys/diag/stats/history	1	1
/cloud	1	1

--------------------
Info --------------------
Array
(
    [/cloud] => Array
        (
            [interval] => 300
            [url] => http://my.radiothermostat.com/rtcoa/rest/rtcoa
            [status] => 2
            [enabled] => 1
            [authkey] => 5bd7ed73
            [status_code] => 301
        )

    [/sys] => Array
        (
            [uuid] => 5cdad4dfbac9
            [api_version] => 113
            [fw_version] => 1.04.84
            [wlan_fw_version] => v10.105576
        )

    [/sys/command] => Array
        (
            [error_msg] => Invalid HTTP API
        )

    [/sys/filesystem] => Array
        (
            [error_msg] => Invalid HTTP API
        )

    [/sys/firmware] => Array
        (
            [fw_version] => 1.04.84
            [api_version] => 113
        )

    [/sys/fs-image] => Array
        (
            [error_msg] => Invalid HTTP API
        )

    [/sys/fw-image] => Array
        (
            [error_msg] => Invalid HTTP API
        )

    [/sys/mode] => Array
        (
            [mode] => 1
        )

    [/sys/name] => Array
        (
            [name] => Home
        )

    [/sys/network] => Array
        (
            [ssid] => [REDACTED]
            [bssid] => [REDACTED]
            [channel] => 1
            [security] => 4
            [ip] => 1
            [rssi] => -60
        )

    [/sys/services] => Array
        (
            [service_names] => Array
                (
                    [0] => com.rtcoa.tstat:1.0
                    [1] => devices.controller.tstat:1.0
                )

            [httpd_handlers] => Array
                (
                    [/tstat] => Array
                        (
                            [0] => 1
                            [1] => 1
                        )

                    [/sys/network] => Array
                        (
                            [0] => 1
                            [1] => 1
                        )

                    [/sys/updater] => Array
                        (
                            [0] => 0
                            [1] => 1
                        )

                    [/sys/filesystem] => Array
                        (
                            [0] => 0
                            [1] => 1
                        )

                    [/sys/fs-image] => Array
                        (
                            [0] => 0
                            [1] => 1
                        )

                    [/sys/firmware] => Array
                        (
                            [0] => 1
                            [1] => 1
                        )

                    [/sys/fw-image] => Array
                        (
                            [0] => 0
                            [1] => 1
                        )

                    [/sys/command] => Array
                        (
                            [0] => 0
                            [1] => 1
                        )

                    [/sys/services] => Array
                        (
                            [0] => 1
                            [1] => 0
                        )

                    [/sys/mode] => Array
                        (
                            [0] => 1
                            [1] => 1
                        )

                    [/sys/name] => Array
                        (
                            [0] => 1
                            [1] => 1
                        )

                    [/sys/watchdog] => Array
                        (
                            [0] => 1
                            [1] => 1
                        )

                    [/sys/diag/log] => Array
                        (
                            [0] => 1
                            [1] => 0
                        )

                    [/sys/diag/stats/live] => Array
                        (
                            [0] => 1
                            [1] => 0
                        )

                    [/sys/diag/stats/history] => Array
                        (
                            [0] => 1
                            [1] => 0
                        )

                    [/cloud] => Array
                        (
                            [0] => 1
                            [1] => 1
                        )

                )

        )

    [/sys/updater] => Array
        (
            [error_msg] => Invalid HTTP API
        )

    [/sys/watchdog] => Array
        (
            [wd_timeout] => 240
        )

    [/tstat] => Array
        (
            [temp] => 75
            [tmode] => 2
            [fmode] => 0
            [override] => 1
            [hold] => 0
            [t_cool] => 71
            [tstate] => 2
            [fstate] => 1
            [time] => Array
                (
                    [day] => 4
                    [hour] => 15
                    [minute] => 58
                )

            [t_type_post] => 0
        )

    [/tstat/air_baffle] => Array
        (
            [error] => -1
        )

    [/tstat/cool] => Array
        (
            [error_msg] => Invalid HTTP API
        )

    [/tstat/fan_ctime] => Array
        (
            [fan_ctime] => -1
        )

    [/tstat/heat] => Array
        (
            [error_msg] => Invalid HTTP API
        )

    [/tstat/humidifier] => Array
        (
            [error] => -1
        )

    [/tstat/humidity] => Array
        (
            [humidity] => -1
        )

    [/tstat/hvac_settings] => Array
        (
            [pump] => 2
            [aux_type] => 2
            [hvac_code] => 10
        )

    [/tstat/lock] => Array
        (
            [lock_mode] => -1
        )

    [/tstat/model] => Array
        (
            [model] => CT50 V1.94
        )

    [/tstat/program] => Array
        (
            [error] => -1
        )

    [/tstat/program/cool] => Array
        (
            [0] => Array
                (
                    [0] => 420
                    [1] => 71
                    [2] => 600
                    [3] => 72
                    [4] => 780
                    [5] => 73
                    [6] => 1320
                    [7] => 70
                )

            [1] => Array
                (
                    [0] => 420
                    [1] => 71
                    [2] => 600
                    [3] => 72
                    [4] => 780
                    [5] => 73
                    [6] => 1320
                    [7] => 70
                )

            [2] => Array
                (
                    [0] => 420
                    [1] => 71
                    [2] => 600
                    [3] => 72
                    [4] => 780
                    [5] => 73
                    [6] => 1320
                    [7] => 70
                )

            [3] => Array
                (
                    [0] => 420
                    [1] => 71
                    [2] => 600
                    [3] => 72
                    [4] => 780
                    [5] => 73
                    [6] => 1320
                    [7] => 70
                )

            [4] => Array
                (
                    [0] => 420
                    [1] => 71
                    [2] => 600
                    [3] => 72
                    [4] => 780
                    [5] => 73
                    [6] => 1320
                    [7] => 70
                )

            [5] => Array
                (
                    [0] => 420
                    [1] => 71
                    [2] => 600
                    [3] => 72
                    [4] => 780
                    [5] => 73
                    [6] => 1320
                    [7] => 70
                )

            [6] => Array
                (
                    [0] => 420
                    [1] => 71
                    [2] => 600
                    [3] => 72
                    [4] => 780
                    [5] => 73
                    [6] => 1320
                    [7] => 70
                )

        )

    [/tstat/program/heat] => Array
        (
            [0] => Array
                (
                    [0] => 300
                    [1] => 70
                    [2] => 600
                    [3] => 71
                    [4] => 1140
                    [5] => 71
                    [6] => 1380
                    [7] => 68
                )

            [1] => Array
                (
                    [0] => 300
                    [1] => 70
                    [2] => 600
                    [3] => 71
                    [4] => 1080
                    [5] => 71
                    [6] => 1380
                    [7] => 68
                )

            [2] => Array
                (
                    [0] => 300
                    [1] => 70
                    [2] => 600
                    [3] => 71
                    [4] => 1080
                    [5] => 71
                    [6] => 1380
                    [7] => 68
                )

            [3] => Array
                (
                    [0] => 300
                    [1] => 70
                    [2] => 600
                    [3] => 71
                    [4] => 1080
                    [5] => 71
                    [6] => 1380
                    [7] => 68
                )

            [4] => Array
                (
                    [0] => 300
                    [1] => 70
                    [2] => 600
                    [3] => 71
                    [4] => 1080
                    [5] => 71
                    [6] => 1380
                    [7] => 68
                )

            [5] => Array
                (
                    [0] => 300
                    [1] => 70
                    [2] => 600
                    [3] => 71
                    [4] => 1080
                    [5] => 71
                    [6] => 1380
                    [7] => 68
                )

            [6] => Array
                (
                    [0] => 300
                    [1] => 70
                    [2] => 600
                    [3] => 71
                    [4] => 1080
                    [5] => 71
                    [6] => 1380
                    [7] => 68
                )

        )

    [/tstat/remote_temp] => Array
        (
            [rem_mode] => 0
        )

    [/tstat/save_energy] => Array
        (
            [mode] => -1
            [type] => -1
        )

    [/tstat/simple_mode] => Array
        (
            [simple_mode] => -1
        )

    [/tstat/stage_delay] => Array
        (
            [stage_delay] => -1
        )

    [/tstat/thumidity] => Array
        (
            [thumidity] => -1073695872
        )

    [/tstat/time/format] => Array
        (
            [format] => -1
        )

    [/tstat/tswing] => Array
        (
            [tswing] => -1
        )

)
--------------------"
QNvGPCvT,Untitled,dimitarbogdanov,C#,Friday 16th of June 2023 03:57:44 PM CDT,"int n = Int32.Parse(Console.ReadLine()!);

int longestSequenceRow = 0;
int longestSequenceLength = 0;
int longestSequenceSum = 0;
int longestSequenceIndex = -1;
string longestRow = """";

int rowCounter = 0;

string input;
while ((input = Console.ReadLine()!) != ""Clone them!"")
{
    int[] numbers = new int[n];

    rowCounter += 1;

    // ""1""  ""0""
    //  1    0

    int lineSum = 0;

    int numIdx = 0;
    for (int i = 0; i < 2 * n - 1; i += 2)
    {
        int parsedNumber = input[i] == '1' ? 1 : 0;
        numbers[numIdx++] =  parsedNumber;
        lineSum           += parsedNumber;
    }

    int subsequenceLength = 0;
    int subsequenceIndex = -1;

    for (int i = 0; i < n; i++)
    {
        if (numbers[i] == 1)
        {
            subsequenceLength++;

            if (subsequenceIndex == -1)
            {
                subsequenceIndex = i;
            }

            if ((subsequenceLength > longestSequenceLength)
             || (
                    subsequenceLength == longestSequenceLength
                 && (lineSum > longestSequenceSum || subsequenceIndex < longestSequenceIndex)
                ))
            {
                longestSequenceRow    = rowCounter;
                longestSequenceIndex  = subsequenceIndex;
                longestSequenceLength = subsequenceLength;
                longestSequenceSum    = lineSum;

                longestRow = input;
            }
        }
        else
        {
            subsequenceLength = 0;
            subsequenceIndex  = -1;
        }
    }
    
    if ((subsequenceLength > longestSequenceLength)
     || (
            subsequenceLength == longestSequenceLength
         && (lineSum > longestSequenceSum || subsequenceIndex < longestSequenceIndex)
        ))
    {
        longestSequenceRow    = rowCounter;
        longestSequenceIndex  = subsequenceIndex;
        longestSequenceLength = subsequenceLength;
        longestSequenceSum    = lineSum;

        longestRow = input;
    }
}

Console.WriteLine($""Best DNA sample {longestSequenceRow} with sum: {longestSequenceSum}."");
Console.WriteLine(longestRow.Replace('!', ' '));"
bG3HP5X8,Untitled,dimitarbogdanov,C#,Friday 16th of June 2023 03:56:59 PM CDT,"int n = Int32.Parse(Console.ReadLine()!);

int longestSequenceRow = 0;
int longestSequenceLength = 0;
int longestSequenceSum = 0;
int longestSequenceIndex = -1;
string longestRow = """";

int rowCounter = 0;

string input;
while ((input = Console.ReadLine()!) != ""Clone them!"")
{
    int[] numbers = new int[n];

    rowCounter += 1;

    // ""1""  ""0""
    //  1    0

    int lineSum = 0;

    int numIdx = 0;
    for (int i = 0; i < 2 * n - 1; i += 2)
    {
        int parsedNumber = input[i] == '1' ? 1 : 0;
        numbers[numIdx++] =  parsedNumber;
        lineSum           += parsedNumber;
    }

    int subsequenceLength = 0;
    int subsequenceIndex = -1;

    for (int i = 0; i < n; i++)
    {
        if (numbers[i] == 1)
        {
            subsequenceLength++;

            if (subsequenceIndex == -1)
            {
                subsequenceIndex = i;
            }

            if ((subsequenceLength > longestSequenceLength)
             || (
                    subsequenceLength == longestSequenceLength
                 && (lineSum > longestSequenceSum || subsequenceIndex < longestSequenceIndex)
                ))
            {
                longestSequenceRow    = rowCounter;
                longestSequenceIndex  = subsequenceIndex;
                longestSequenceLength = subsequenceLength;
                longestSequenceSum    = lineSum;

                longestRow = input.Replace('!', ' ');
            }
        }
        else
        {
            subsequenceLength = 0;
            subsequenceIndex  = -1;
        }
    }
    
    if ((subsequenceLength > longestSequenceLength)
     || (
            subsequenceLength == longestSequenceLength
         && (lineSum > longestSequenceSum || subsequenceIndex < longestSequenceIndex)
        ))
    {
        longestSequenceRow    = rowCounter;
        longestSequenceIndex  = subsequenceIndex;
        longestSequenceLength = subsequenceLength;
        longestSequenceSum    = lineSum;

        longestRow = input.Replace('!', ' ');
    }
}

Console.WriteLine($""Best DNA sample {longestSequenceRow} with sum: {longestSequenceSum}."");
Console.WriteLine(longestRow);"
8AcSNZG1,diff.vim with C syntax highlighting,MetaEd,Diff,Friday 16th of June 2023 03:47:34 PM CDT,"--- /usr/share/vim/vim90/syntax/diff.vim	2023-03-20 17:57:38.000000000 +0000
+++ diff.vim	2023-06-16 21:27:40.709980992 +0000
@@ -330,11 +330,13 @@
 endif
 
 
-syn match diffRemoved	""^-.*""
-syn match diffRemoved	""^<.*""
-syn match diffAdded	""^+.*""
-syn match diffAdded	""^>.*""
-syn match diffChanged	""^! .*""
+syntax include @SyntaxC syntax/c.vim
+syn region diffRemoved	start=""^-""he=s+1 end=""$"" contains=@SyntaxC keepend
+syn region diffRemoved	start=""^<""he=s+1 end=""$"" contains=@SyntaxC keepend
+syn region diffAdded	start=""^+""he=s+1 end=""$"" contains=@SyntaxC keepend
+syn region diffAdded	start=""^>""he=s+1 end=""$"" contains=@SyntaxC keepend
+syn region diffChanged	start=""^! ""he=s+1 end=""$"" contains=@SyntaxC keepend
+syn region diffSame	start=""^ ""he=s+1 end=""$"" contains=@SyntaxC keepend
 
 syn match diffSubname	"" @@..*""ms=s+3 contained
 syn match diffLine	""^@.*"" contains=diffSubname
@@ -383,6 +385,7 @@
 hi def link diffLine		Statement
 hi def link diffSubname		PreProc
 hi def link diffComment		Comment
+hi def link diffSame		Normal
 
 let b:current_syntax = ""diff""
 "
86eZNK5c,Untitled,dimitarbogdanov,C#,Friday 16th of June 2023 03:45:25 PM CDT,"int n = Int32.Parse(Console.ReadLine()!);

int longestSequenceRow = 0;
int longestSequenceLength = 0;
int longestSequenceSum = 0;
int longestSequenceIndex = -1;
string longestRow = """";

int rowCounter = 0;

string input;
while ((input = Console.ReadLine()!) != ""Clone them!"")
{
    int[] numbers = new int[n];

    rowCounter += 1;

    // ""1""  ""0""
    //  1    0

    int lineSum = 0;

    int numIdx = 0;
    for (int i = 0; i < 2 * n - 1; i += 2)
    {
        int parsedNumber = input[i] == '1' ? 1 : 0;
        numbers[numIdx++] =  parsedNumber;
        lineSum    += parsedNumber;
    }

    int subsequenceLength = 0;
    int subsequenceIndex = -1;

    for (int i = 0; i < n; i++)
    {
        if (numbers[i] == 1)
        {
            subsequenceLength++;

            if (subsequenceIndex == -1)
            {
                subsequenceIndex = i;
            }

            if ((subsequenceLength > longestSequenceLength)
             || (subsequenceLength == longestSequenceLength
              && (lineSum > longestSequenceSum || subsequenceIndex < longestSequenceIndex)))
            {
                longestSequenceRow    = rowCounter;
                longestSequenceIndex  = subsequenceIndex;
                longestSequenceLength = subsequenceLength;
                longestSequenceSum    = lineSum;

                longestRow = input.Replace('!', ' ');
            }
        }
        else
        {
            subsequenceLength = 0;
            subsequenceIndex  = -1;
        }
    }
}

Console.WriteLine($""Best DNA sample {longestSequenceRow} with sum: {longestSequenceSum}."");
Console.WriteLine(longestRow);
"
X2M6yk9x,Untitled,dimitarbogdanov,C#,Friday 16th of June 2023 03:44:28 PM CDT,"int n = Int32.Parse(Console.ReadLine()!);

int longestSequenceRow = 0;
int longestSequenceLength = 0;
int longestSequenceSum = 0;
int longestSequenceIndex = -1;
string longestRow = """";

int rowCounter = 0;

string input;
while ((input = Console.ReadLine()!) != ""Clone them!"")
{
    int[] numbers = new int[n];

    rowCounter += 1;

    // ""1""  ""0""
    //  1    0

    int lineSum = 0;

    int numIdx = 0;
    for (int i = 0; i < 2 * n - 1; i++)
    {
        int parsedNumber = input[numIdx++] == '1' ? 1 : 0;
        numbers[i] =  parsedNumber;
        lineSum    += parsedNumber;
    }

    int subsequenceLength = 0;
    int subsequenceIndex = -1;

    for (int i = 0; i < n; i++)
    {
        if (numbers[i] == 1)
        {
            subsequenceLength++;

            if (subsequenceIndex == -1)
            {
                subsequenceIndex = i;
            }

            if ((subsequenceLength > longestSequenceLength)
             || (subsequenceLength == longestSequenceLength
              && (lineSum > longestSequenceSum || subsequenceIndex < longestSequenceIndex)))
            {
                longestSequenceRow    = rowCounter;
                longestSequenceIndex  = subsequenceIndex;
                longestSequenceLength = subsequenceLength;
                longestSequenceSum    = lineSum;

                longestRow = input.Replace('!', ' ');
            }
        }
        else
        {
            subsequenceLength = 0;
            subsequenceIndex  = -1;
        }
    }
}

Console.WriteLine($""Best DNA sample {longestSequenceRow} with sum: {longestSequenceSum}."");
Console.WriteLine(longestRow);
"
Vc2yFMUC,wow so cool,dimitarbogdanov,C#,Friday 16th of June 2023 03:37:08 PM CDT,"int n = Int32.Parse(Console.ReadLine()!);

int longestSequenceRow = 0;
int longestSequenceLength = 0;
int longestSequenceSum = 0;
int longestSequenceIndex = -1;
string longestRow = """";

int rowCounter = 0;

string input;
while ((input = Console.ReadLine()!) != ""Clone them!"")
{
    string[] numbersUnparsed = input.Split('!');
    int[] numbers = new int[n];

    rowCounter += 1;

    // ""1""  ""0""
    //  1    0

    int lineSum = 0;

    for (int i = 0; i < n; i++)
    {
        int parsedNumber = int.Parse(numbersUnparsed[i]);
        numbers[i] =  parsedNumber;
        lineSum    += parsedNumber;
    }

    int subsequenceLength = 0;
    int subsequenceIndex = -1;

    for (int i = 0; i < n; i++)
    {
        if (numbers[i] == 1)
        {
            subsequenceLength++;

            if (subsequenceIndex == -1)
            {
                subsequenceIndex = i;
            }

            if ((subsequenceLength > longestSequenceLength)
             || (subsequenceLength == longestSequenceLength
              && (lineSum > longestSequenceSum || subsequenceIndex < longestSequenceIndex)))
            {
                longestSequenceRow    = rowCounter;
                longestSequenceIndex  = subsequenceIndex;
                longestSequenceLength = subsequenceLength;
                longestSequenceSum    = lineSum;

                longestRow = input.Replace('!', ' ');
            }
        }
        else
        {
            subsequenceLength = 0;
            subsequenceIndex  = -1;
        }
    }
}

Console.WriteLine($""Best DNA sample {longestSequenceRow} with sum: {longestSequenceSum}."");
Console.WriteLine(longestRow);
"
WzP5mS8K,scan,CaptainResu,Lua,Friday 16th of June 2023 03:20:11 PM CDT,"args = {...}
local ore = ""diamonds""
local radius = 16
-- print(""Starting with args: "")
for i, ar in ipairs(args) do
    -- print(ar)
    if i == 1 then ore = ar end 
end
print(""Scanning: "" .. ore)
sleep(3)
 
function sortbydistance(a, b)
    -- print(""( "" .. a.x .. "", "" .. a.y .. "", "" .. a.z .. "" ) / ("" .. b.x .. "", "" .. b.y .. "", "" .. b.z .. "" )"")
    return ((math.abs(a.x) + math.abs(a.y) + math.abs(a.z)) < (math.abs(b.x) + math.abs(b.y) + math.abs(b.z)))
end
 
local geoscanner = peripheral.find(""geoScanner"")
 
while true do
    local scan = geoscanner.scan(16)
    -- print(""test"")
    
    if scan ~= nil then
        table.sort(scan, sortbydistance)
 
        term.setBackgroundColor(colors.black)
        term.clear()
        term.setCursorPos(1,1)
                
        for i, bData in ipairs(scan) do
            if bData.name == ""minecraft:"" .. ore .. ""_ore"" or bData.name == ""minecraft:deepslate_diamond_ore"" then
                print(ore .. "": X"" .. bData.x .. "" Y"" .. bData.y .. "" Z"" .. bData.z)
            end
        end
    end
    -- sleep(1)
end
"
2nky5xZx,GPT orologio irl (test),PICCIONENBERG,Lua,Friday 16th of June 2023 03:03:12 PM CDT,"-- Imposta le dimensioni del monitor
local larghezzaMonitor = 5
local altezzaMonitor = 3

-- Imposta la posizione del monitor
local monitor = peripheral.wrap(""right"") -- Modifica ""right"" se il monitor è collegato a un lato diverso

-- Funzione per ottenere l'ora corrente
local function getOrarioCorrente()
  local time = os.time()
  return textutils.formatTime(time, true) -- Formatta l'ora in hh:mm:ss
end

-- Funzione per cancellare lo schermo del monitor
local function cancellaSchermo()
  monitor.clear()
  monitor.setCursorPos(1, 1)
end

-- Funzione per centrare il testo sul monitor
local function centrareTesto(testo)
  local x = math.floor((larghezzaMonitor - string.len(testo)) / 2)
  local y = math.floor(altezzaMonitor / 2)
  monitor.setCursorPos(x, y)
  monitor.write(testo)
end

-- Funzione per aggiornare l'orario sul monitor
local function aggiornaOrario()
  cancellaSchermo()
  local orarioCorrente = getOrarioCorrente()
  centrareTesto(orarioCorrente)
end

-- Loop principale
while true do
  aggiornaOrario()
  sleep(1) -- Aggiorna l'orario ogni secondo
end
"
uwEgAv9V,GPT scritta Scorrevole (test),PICCIONENBERG,Lua,Friday 16th of June 2023 03:02:31 PM CDT,"-- Configurazione
local testo = ""Questo è un esempio di scrittura scorrevole!""
local velocita = 0.1  -- Tempo di attesa tra ogni carattere (in secondi)
local spazio = 5  -- Spazio tra ogni scrittura

-- Calcolo delle dimensioni dello schermo
local larghezzaSchermo, altezzaSchermo = term.getSize()

-- Funzione per stampare il testo scorrevole
local function stampaScorrimento(testo)
  local posizioneIniziale = larghezzaSchermo + spazio
  local lunghezzaTesto = #testo

  for i = 1, posizioneIniziale + lunghezzaTesto do
    term.clear()
    local posizione = posizioneIniziale - i
    if posizione < lunghezzaTesto and posizione >= 0 then
      term.setCursorPos(posizione + 1, altezzaSchermo / 2)
      term.write(string.sub(testo, 1, posizione))
    end
    os.sleep(velocita)
  end
end

-- Esecuzione del programma
while true do
  term.clear()
  term.setCursorPos(1, 1)
  stampaScorrimento(testo)
end"
uQCCjyYk,GPT caveau (test),PICCIONENBERG,Lua,Friday 16th of June 2023 03:01:57 PM CDT,"-- Configurazione
local codiceAccesso = ""1234""  -- Codice di accesso per attivare il segnale di Redstone
local durataSegnale = 5  -- Durata del segnale di Redstone in secondi

-- Funzione per verificare il codice di accesso
local function verificaCodice(codice)
  return codice == codiceAccesso
end

-- Funzione per attivare il segnale di Redstone
local function attivaSegnale()
  -- Codice per attivare il segnale di Redstone
  rs.setOutput(""back"", true)  -- Sostituisci ""back"" con il lato in cui è collegato il cavo del segnale di Redstone
  
  -- Attendi la durata del segnale
  os.sleep(durataSegnale)
  
  -- Spegni il segnale di Redstone
  rs.setOutput(""back"", false)  -- Sostituisci ""back"" con il lato in cui è collegato il cavo del segnale di Redstone
end

-- Creazione del touch screen
local touchscreen = peripheral.wrap(""front"")  -- Sostituisci ""front"" con il lato in cui è collegato il touch screen

-- Ciclo principale
while true do
  local evento, giocatore, x, y = os.pullEvent(""monitor_touch"")  -- Attendiamo l'evento di touch sul monitor
  
  -- Verifica se il touch screen è stato toccato
  if evento == ""monitor_touch"" and giocatore == touchscreen and x >= 1 and x <= 3 and y == 1 then
    -- Leggi il codice inserito dall'utente
    local codiceInserito = touchscreen.getTouchInfo().x
    
    -- Verifica il codice di accesso
    if verificaCodice(codiceInserito) then
      attivaSegnale()
      break  -- Esci dal ciclo principale
    else
      print(""Codice errato! Riprova."")
    end
  end
end
"
MPQ0LVaK,Untitled,dimitarbogdanov,C#,Friday 16th of June 2023 02:59:46 PM CDT,"// ReSharper disable all

int[] numbers = Console.ReadLine().Split(' ').Select(Int32.Parse).ToArray();
//              chetesh red         razdelqsh go    parsevash vs pootdelno  pravish go na array

bool found = false;

for (int centerNumberIdx = 0; centerNumberIdx < numbers.Length; centerNumberIdx++)
{
    int leftSum = 0;
    for (int i = 0; i < centerNumberIdx; i++)
    {
        leftSum += numbers[i];
    }

    int rightSum = 0;
    for (int i = centerNumberIdx + 1; i > centerNumberIdx && i < numbers.Length; i++)
    {
        rightSum += numbers[i];
    }

    if (leftSum == rightSum)
    {
        Console.WriteLine(centerNumberIdx);
        found = true;
        break;
    }
}

if (!found)
{
    Console.WriteLine(""no"");
}"
uu3mDWmi,Untitled,Overwtime,YAML,Friday 16th of June 2023 02:57:38 PM CDT,"# Сообщения плагина
messages:
  teleport_in: ""&c[*] &6Телепортация на арену через &c3 &6секунды""
  teleport_out: ""&c[*] &6Вы телепортируетесь с арены через &c30 &6секунд""
  teleported_in: ""&c[*] &6Вы были телепортированы на &cарену""
  teleported_out: ""&c[*] &6Вы были телепортированы с &cарены""
  no_armor: ""&c[*] &6У вас не достаточно брони для входа на &cарену""
  debuff_apply: ""&c[*] &6Вы сняли слишком много брони и получили &cдебафы""
  leave_cmd_message: ""&c[*] &6 Вы будете телепортированы с арены через %time% секунд""
  no_perms: ""&4Команда для вас не доступна""
  
# Настройка боссбаров
bossbar_settings:
  # Боссбар, который будет показываться всем, кто есть на арене
  on_arena:
    # Включить ли данный боссбар
    enable_bossbar: true
    # Цвет боссбара (PINK, BLUE, RED, GREEN, YELLOW, PURPLE, WHITE)
    bar_color: RED
    # Тип боссбара (SOLID, SEGMENTED_6, SEGMENTED_10, SEGMENTED_12, SEGMENTED_20)
    bar_style: SOLID
    # Сообщение в боссбаре
    bar_message: ""&cРежим PVP &f- &aАКТИВЕН""
  # Боссбар, который будет показывать отсчет до телепорта на арену
  teleport_in:
    # Включить ли данный боссбар
    enable_bossbar: true
    # Цвет боссбара (PINK, BLUE, RED, GREEN, YELLOW, PURPLE, WHITE)
    bar_color: GREEN
    # Тип боссбара (SOLID, SEGMENTED_6, SEGMENTED_10, SEGMENTED_12, SEGMENTED_20)
    bar_style: SEGMENTED_6
    # Сообщение в боссбаре
    bar_message: ""&6Телепорт через: &c%time% сек.""
  # Боссбар, который будет показывать отсчет до телепорта из арены
  teleport_out:
    # Включить ли данный боссбар
    enable_bossbar: true
    # Цвет боссбара (PINK, BLUE, RED, GREEN, YELLOW, PURPLE, WHITE)
    bar_color: GREEN
    # Тип боссбара (SOLID, SEGMENTED_6, SEGMENTED_10, SEGMENTED_12, SEGMENTED_20)
    bar_style: SEGMENTED_12
    # Сообщение в боссбаре
    bar_message: ""&6Телепорт через: &c%time% сек.""

# Настройки звуков, которые будут проигрываться при действиях 
# Список всех звуков: https://hub.spigotmc.org/javadocs/bukkit/org/bukkit/Sound.html
sound-settings:
  # Звук, который будет проигрываться при попадании на арену
  teleport_in:
    # Включить ли звуки при входе на арену
    enable-sounds: true
    # ID звука
    sound: BLOCK_NOTE_BLOCK_PLING
    # Громкость звука от 0.0 до 1.0
    volume: 0.75
    # Тон звука от 0.5 до 2.0 (больше = ""писклявее"")
    pitch: 1.0
  # Звук, который будет проигрываться при выходе с арены
  teleport_out:
    enable-sounds: true
    sound: BLOCK_NOTE_BLOCK_PLING
    volume: 0.75
    pitch: 1.0
  # Звук, который будет проигрываться при отмене телепортации (если у игрока нет одета броня)
  teleport_cancelled:
    enable-sounds: true
    sound: ENTITY_VILLAGER_NO
    volume: 0.75
    pitch: 1.0
  # Звук, который будет проигрываться при наложении дебаффа (если у игрока нет одета броня)
  apply_debuff:
    enable-sounds: true
    sound: ENTITY_ITEM_BREAK
    volume: 0.75
    pitch: 1.0

# Настройки для арены
arena_settings:
  # Локация арены (куда будет телепортирован игрок при попадании на арену)
  location: world;10;10;10
  # Время перед входом на арену (в секундах)
  join_time: 5
  # Время перед выходом с арены (в секундах)
  leave_time: 30
  # Блокировка действий на арене (true - блокировать, false - ничего не делать)
  restricted_actions:
    build: true
    chorus_teleport: true
    enderpearl: false
  # Настройка брони, с которой можно войти на арену (поставьте [] в разделах чтобы броня на данной части тела не учитывалась)
  required_armor:
    head:
    - NETHERITE_HELMET
    - DIAMOND_HELMET
    body:
    - NETHERITE_CHESTPLATE
    - DIAMOND_CHESTPLATE
    legs:
    - NETHERITE_LEGGINGS
    - DIAMOND_LEGGINGS
    boots:
    - NETHERITE_BOOTS
    - DIAMOND_BOOTS
  # Настройка дебафов, которые игрок получает, если находится на арене без брони
  arena_debuff_settings:
    # Включить ли дебафы
    enable_debuffs: true
    # Эффекты, которые будут накладываться на игроков, которые находятся под действием дебафа (ЭФФЕКТ:УРОВЕНЬ) (поставьте [] чтобы никакие эффекты не накладывались)
    effects:
      - 'BLINDNESS:3'
      - 'GLOWING:1'
    # Команды, которые будут применены к игрокам, которые получают дебафф (поставьте [] чтобы никакие команды не применялись)
    commands: 
      - 'thor %player%'
  # Отменять ли отсчет до выхода с арены при получении игроком урона
  hit_cancel_leave_attempt: true"
7Gxvi5fu,# tk_justrandomdots.py,here2share,Python,Friday 16th of June 2023 02:54:42 PM CDT,"# tk_justrandomdots.py

import tkinter as tk
import random

ww = hh = 600

def generate_pattern():    
    for _ in range(1200):
        x = random.randint(0, ww)
        y = random.randint(0, hh)
        r = random.randint(0, 255)
        g = random.randint(0, 255)
        b = random.randint(0, 255)
        size = random.randint(1, 20)
        
        canvas.create_oval(x, y, x+size, y+size, fill=f'#{r:02x}{g:02x}{b:02x}', outline='')

root = tk.Tk()
canvas = tk.Canvas(root, width=ww, height=hh)
canvas.pack()

generate_pattern()

root.mainloop()"
h3kwTgGC,Bulshit 2,Kostiggig,C,Friday 16th of June 2023 02:54:33 PM CDT,"#include <stdio.h>
#include <math.h>
#include <stdlib.h>

int main() {

    int rows = 3;
    int columns = 3;
    int **matrix = (int**) malloc(rows * sizeof(int*));

    for(int r = 0; r < rows; r++) matrix[r] = (int*) malloc(columns * sizeof(int));

    int item = 1;
    for(int r = 0; r < rows; r++) {
        for(int c = 0; c < columns; c++) {
            matrix[r][c] = item++;
        }
    }

    
    for(int r = 0; r < rows; r++) {
        for(int c = 0; c < columns; c++) {
            printf(""%d "", matrix[r][c]);
        }
        printf(""\n"");
    }

    printf(""\nSecondary one\n"");
    int c = 0;
    for(int r = 0; r < rows; r++) {
        for(int c = 0; c < columns; c++) {
            if(r + c == rows - 1) printf(""%d "", matrix[r][c]);
        }
    }

    printf(""\n"");
    

    // Above Main diagonal
    for(int r = 0; r < rows; r++) {
        for(int c = 0; c < columns; c++) {
            if(c > r) printf(""%d "", matrix[r][c]);
        }
    }

    printf(""\n"");

    // Below Main diagonal
    for(int r = 0; r < rows; r++) {
        for(int c = 0; c < columns; c++) {
            if(r > c) printf(""%d "", matrix[r][c]);
        }
    }

    printf(""\n"");

    // Above Secondary diagonal
    for(int r = 0; r < rows; r++) {
        int c = rows - r - 2;
        while(c >= 0){
            printf(""%d "", matrix[r][c]);
            c--;
        }
            
    }

    printf(""\n"");

    // Below Secondary diagonal
    for(int r=1;r<rows;r++){
        for(int c=0;c<r; c++){
            printf(""%d "",matrix[rows-c-1][r]);
         }
      }
    
    printf(""\n"");
    

    return 0;
}"
LJrRQu0B,Comando de Bienvenidas con nuestra API oficial | Bot Designer for Discord #6,BDFDHelper,TypeScript,Friday 16th of June 2023 02:47:16 PM CDT,"$nomention
$botListHide $c[Hide to BotDesignerList.]

$c[
Remember to use BDScript 2!

Versión:  8/06/2023

#D.B.D.Team: https://discord.gg/FTtVXfj
]

$c[Configure]
$c[🇪🇸 › Personaliza tu imágen de bienvenida. El text1 es obligatorio, los demás podrias dejar en blanco para no mostrar.

Recuerda que puedes entrar en el servidor de soporte por ayuda en este código, ayuda con la API o reportar problemas.]
$var[text1;¡Bienvenido a $serverName[$guildID]!]
$var[text2;$username[$authorID]#$discriminator[$authorID]]
$var[text3;]

$c[🇪🇸 › Añadir un background personalizado. Solo puedes añadir imágenes validos con .png o .jpeg. Dejar vacío para utilizar predeterminado de la API.]
$var[background;]

$c[🇪🇸 › Añade aquí tu llave para poder utilizar nuestra API. Puedes generar una gratuita ingresando a nuestro servidor de discord.]
$var[apikey;]

$c[Código ↓]







$onlyIf[$and[$var[apikey]!=;$var[apikey]!=tukey]==true;❌ Recuerda que debes crear una llave gratuita para poder utilizar nuestra API. Entra en nuestro servidor de soporte.]
$onlyIf[$var[text1]!=;❌ Necesitas añadir un `text1` como mínimo para hacer funcionar este comando.]


$if[$trimSpace[$var[text2]]!=]
$var[endpoint;$var[endpoint]&text2=$url[encode;$var[text2]]]
$endif
$if[$trimSpace[$var[text3]]!=]
$var[endpoint;$var[endpoint]&text3=$url[encode;$var[text3]]]
$endif
$if[$trimSpace[$var[background]]!=]
$var[endpoint;$var[endpoint]&background=$var[background]]
$endif

$httpGet[https://api.dbdteam.xyz/canvas/welcome?key=$var[apikey]&avatar=$replaceText[$replaceText[$userAvatar[$authorID];.webp;.png;-1];.gif;.jpg;-1]&text1=$url[encode;$var[text1]]$var[endpoint]]

$onlyIf[$checkContains[$httpResult;Ey! Invalid URL. Please provide a valid URL image for avatar in this endpoint.]==false;❌ Al parecer el avatar del usuario tiene un formato invalido.]
$onlyIf[$checkContains[$httpResult;Ey! Invalid URL. Please provide a valid URL image for background in this endpoint.]==false;❌ Necesitas establecer un background válido, puedes remover el background establecido para usar predeterminado de la API.]
$onlyIf[$checkContains[$httpResult;Ey! You have not provided a valid key.]==false;❌ No has establecido una llave valida, puedes contactar con el servidor de soporte en caso de un error.]
$onlyIf[$checkContains[$httpResult;Ey! You have run out of requests, use the endpoint '/api-info' to see the next reset of free keys.]==false;❌ Has alcanzado el límite de requests, puedes contactar el servidor de soporte en caso de ocurrir un problema.]


[+\] <@$authorID>
$description[¡Te damos la bienvenida!]
$image[$httpResult[url]]"
wxtSe93a,bulshit,Kostiggig,C,Friday 16th of June 2023 02:35:11 PM CDT,"#include <stdio.h>
#include <math.h>
#include <stdlib.h>

int main() {

    int rows = 3;
    int columns = 3;
    int **matrix = (int**) malloc(rows * sizeof(int*));

    for(int r = 0; r < rows; r++) matrix[r] = (int*) malloc(columns * sizeof(int));

    int item = 1;
    for(int r = 0; r < rows; r++) {
        for(int c = 0; c < columns; c++) {
            matrix[r][c] = item++;
        }
    }

    for(int r = 0; r < rows; r++) {
        for(int c = 0; c < columns; c++) {
            printf(""%d "", matrix[r][c]);
        }
        printf(""\n"");
    }

    printf(""\n"");
    

    // Above Main diagonal
    for(int r = 0; r < rows; r++) {
        for(int c = 0; c < columns; c++) {
            if(c > r) printf(""%d "", matrix[r][c]);
        }
    }

    printf(""\n"");

    // Below Main diagonal
    for(int r = 0; r < rows; r++) {
        for(int c = 0; c < columns; c++) {
            if(r > c) printf(""%d "", matrix[r][c]);
        }
    }

    printf(""\n"");

    // Above Secondary diagonal
    for(int r = 0; r < rows; r++) {
        int c = rows - r - 2;
        while(c >= 0){
            printf(""%d "", matrix[r][c]);
            c--;
        }
            
    }

    printf(""\n"");

    // // Below Secondary diagonal
    for(int r=1;r<rows;r++){
        for(int c=0;c<r; c++){
            printf(""%d "",matrix[rows-c-1][r]);
         }
      }
    
    printf(""\n"");

    return 0;
}"
aMtnxTjW,Untitled,Ethan-ZYF,C++,Friday 16th of June 2023 02:34:20 PM CDT,"#include <bits/stdc++.h>
using namespace std;
using i64 = long long;

#ifdef LOCAL
#include ""algo/debug.h""
#else
#define debug(...)
#endif

struct LCA {
    int n, rt, lg;
    std::vector<std::vector<int>> g;
    std::vector<std::vector<int>> anc;
    std::vector<int> dep;

    LCA(int n) : n(n), rt(0), lg(std::__lg(n) + 1), g(n), anc(n, std::vector<int>(lg, -1)), dep(n) {}

    void add(int x, int y) {
        g[x].push_back(y);
        g[y].push_back(x);
    }

    void dfs(int u, int fa) {
        anc[u][0] = fa;
        dep[u] = dep[fa] + 1;
        for (auto v : g[u]) {
            if (v != fa) {
                dep[v] = dep[u] + 1;
                dfs(v, u);
            }
        }
    }

    void build(int rt) {
        this->rt = rt;
        dfs(rt, -1);
        for (int i = 1; i < lg; i++) {
            for (int j = 0; j < n; j++) {
                if (anc[j][i - 1] != -1) {
                    anc[j][i] = anc[anc[j][i - 1]][i - 1];
                }
            }
        }
    }
    int kth(int x, int k) {
        for (; k; k &= k - 1)
            x = anc[x][__builtin_ctz(k)];
        return x;
    }

    int lca(int x, int y) {
        if (dep[x] > dep[y])
            std::swap(x, y);
        y = kth(y, dep[y] - dep[x]);
        if (y == x)
            return x;
        for (int i = anc[x].size() - 1; i >= 0; i--) {
            int px = anc[x][i], py = anc[y][i];
            if (px != py) {
                x = px;
                y = py;
            }
        }
        return anc[x][0];
    }
};

void solve() {
    int n, q;
    cin >> n >> q;
    LCA lca(n);
    vector<vector<int>> g(n);
    for (int i = 0; i < n - 1; i++) {
        int x, y;
        cin >> x >> y;
        x--, y--;
        g[x].push_back(y);
        g[y].push_back(x);
        lca.add(x, y);
    }
    vector<int> a(n);

    lca.build(0);
    debug(lca.kth(0, 1));

    while (q--) {
        int x, y;
        cin >> x >> y;
        x--, y--;
        int o = lca.lca(x, y);
        int p = lca.kth(o, 1);
        debug(x, y, o, p);
        a[x]++;
        a[y]++;
        a[o]--;
        if (p != -1) {
            a[p]--;
        }
    }
    auto dfs = [&](auto &self, int u, int fa) -> void {
        for (auto v : g[u]) {
            if (v != fa) {
                self(self, v, u);
                a[u] += a[v];
            }
        }
    };
    dfs(dfs, 0, -1);
    for (int i = 0; i < n; i++) {
        cout << a[i] << "" \n""[i == n - 1];
    }
}

int main() {
    cin.tie(nullptr)->sync_with_stdio(false);

    int T = 1;
    // cin >> T;
    for (int Task = 1; Task <= T; Task++) {
        debug(Task);
        solve();
    }

    return 0;
}"
tapzZmdK,Accelerometer Header Bestand,TheProgrammer69,C++,Friday 16th of June 2023 02:20:52 PM CDT,"#ifndef ACCELEROMETER_H
#define ACCELEROMETER_H

#include <Wire.h>
#include <Zumo32U4.h>

class Accelerometer {
public:
    Accelerometer();
    ~Accelerometer();
    void sensorenInitialiseren();
    bool brugKantelingDetecteren();
    void snelheidsverschilBerekenen();
    void controleerLinksRechtsBeweging();
    void botsingControleren();

private:
    Zumo32U4IMU imu;
    const int32_t kantelbrugDrempelwaarde = 10;
    const int acceleratieDrempelwaarde = 10;
    const int drempelwaarde = 100;
    const float deltaTijd = 0.4;
    float snelheid = 0.0;
    const float beginsnelheid = 0.0;
    float vorigeAccX;
    float vorigeAccY;
    int delta_a;
    int delta_t;
};

#endif"
BJ1ysxdK,GPT reactor (test),PICCIONENBERG,Lua,Friday 16th of June 2023 02:15:41 PM CDT,"-- Programma di Automazione del Reattore IC2
-- Utilizza RedPower, Nuclear Control e AE2

-- Variabili
local reactorSide = ""front"" -- Lato in cui è collegato il reattore IC2
local redstoneSide = ""back"" -- Lato in cui è collegato il cavo di RedPower per il controllo del reattore
local monitorSide = ""top"" -- Lato in cui è collegato il monitor di Nuclear Control

-- Funzione per attivare il reattore
local function avviaReattore()
  rs.setOutput(redstoneSide, true) -- Attiva il segnale RedPower per avviare il reattore
end

-- Funzione per spegnere il reattore
local function spegniReattore()
  rs.setOutput(redstoneSide, false) -- Disattiva il segnale RedPower per spegnere il reattore
end

-- Funzione per leggere lo stato del reattore
local function leggiStatoReattore()
  local reactor = peripheral.wrap(reactorSide) -- Collegamento al reattore IC2
  return reactor.getActive() -- Restituisce true se il reattore è attivo, false altrimenti
end

-- Funzione per leggere la temperatura del reattore
local function leggiTemperaturaReattore()
  local reactor = peripheral.wrap(reactorSide) -- Collegamento al reattore IC2
  return reactor.getHeat() -- Restituisce la temperatura del reattore
end

-- Funzione per leggere la quantità di energia prodotta dal reattore
local function leggiEnergiaProdotto()
  local reactor = peripheral.wrap(reactorSide) -- Collegamento al reattore IC2
  return reactor.getEnergyProducedLastTick() -- Restituisce la quantità di energia prodotta nell'ultimo tick
end

-- Funzione per controllare e monitorare il reattore
local function controlloReattore()
  local monitor = peripheral.wrap(monitorSide) -- Collegamento al monitor di Nuclear Control
  while true do
    local stato = leggiStatoReattore()
    local temperatura = leggiTemperaturaReattore()
    local energia = leggiEnergiaProdotto()
    
    -- Mostra lo stato del reattore sul monitor di Nuclear Control
    monitor.clear()
    monitor.setCursorPos(1, 1)
    monitor.write(""Reattore IC2"")
    monitor.setCursorPos(1, 2)
    monitor.write(""Stato: "" .. (stato and ""Attivo"" or ""Spento""))
    monitor.setCursorPos(1, 3)
    monitor.write(""Temperatura: "" .. temperatura .. ""C"")
    monitor.setCursorPos(1, 4)
    monitor.write(""Energia prodotta: "" .. energia .. ""EU/t"")
    
    -- Controlla la temperatura e spegni il reattore se supera una soglia
    if temperatura > 5000 then
      spegniReattore()
    end
    
    -- Attiva il reattore se la temperatura è scesa sotto la soglia
    if not stato and temperatura < 3000 then
      avviaReattore()
    end
    
    -- Pausa di 1 secondo tra un controllo e l'altro
    sleep(1)
  end
end

-- Avvia il programma
controlloReattore()
"
sK8zcP5V,seresdt,gadungw71,PHP,Friday 16th of June 2023 02:13:45 PM CDT,"https://sites.google.com/justhwatchstream.online/assistir-onlinetheflash2023fil/home
https://sites.google.com/justhwatchstream.online/assistirfilmetheflash-onlinedu/home
https://www.healthavenuecupping.com/group/health-avenue-group/discussion/f9461977-a176-41f0-afff-f2a93dfce7c4
https://www.eagleportland.com/group/mysite-231-group/discussion/70c0e24a-6734-4fbd-a302-f5a1b8cc5934
https://vk.com/@piscesarya-assistir-the-flash-online-dublado-e-legendado
https://vk.com/@mopiecinemarx95-hd-assistir-the-flash-2023-filme-completo-dublado-online-hd
https://sites.google.com/justhwatchstream.online/assistirtheflash2023onlinedubl/home
https://sites.google.com/justhwatchstream.online/assistir-online-the-flash-2023/home
https://www.healthavenuecupping.com/group/health-avenue-group/discussion/22b070ed-310f-4149-8e9a-63f74685d205
https://www.eagleportland.com/group/mysite-231-group/discussion/106c3da7-97fc-4cb2-819d-78dfedbda40c
https://vk.com/@styler95-the-flash-pt-2023-filme-completo-dublado-e-legendado-em-port
https://sites.google.com/justhwatchstream.store/assistirtransformersodespertar/home
https://sites.google.com/justhwatchstream.store/assistir-transformers-7-2023/home
https://vk.com/@movies2022-assistir-transformers-o-despertar-das-feras-2023-online-dubl
https://www.eagleportland.com/group/mysite-231-group/discussion/ab037eae-1ca8-4292-923d-acba8242341e
https://www.healthavenuecupping.com/group/health-avenue-group/discussion/67d470cd-e7ee-44e5-bb15-879c24fceb79"
tjdKUmmj,addExpiredToDatabase.py,hieuhuule,Python,Friday 16th of June 2023 02:06:43 PM CDT,"import pandas as pd
import mysql.connector
from mysql.connector import Error
import re


def sanitize_column_name(column):
    sanitized_column = re.sub(r""\W+"", ""_"", column).strip(""_"")
    while sanitized_column[0].isdigit():
        sanitized_column = ""_"" + sanitized_column
    return sanitized_column


mysql_host = ""localhost""
mysql_port = 3306
mysql_user = ""XXXXXXX""
mysql_password = ""XXXXXX""
database_name = ""stellarexpired""

csv_file = ""dataExpired.csv""
print(""Reading CSV file..."")
df = pd.read_csv(csv_file, low_memory=False, on_bad_lines='skip')
df.columns = [sanitize_column_name(col) for col in df.columns]

group_1_columns = df.columns[: len(df.columns) // 2]
group_2_columns = df.columns[len(df.columns) // 2 :]

try:
    print(""Connecting to MySQL container..."")
    connection = mysql.connector.connect(
        host=mysql_host,
        port=mysql_port,
        user=mysql_user,
        password=mysql_password,
        database=database_name,
    )

    if connection.is_connected():
        cursor = connection.cursor()
        cursor.execute(""USE stellarexpired;"")

        print(""Dropping existing tables..."")
        cursor.execute(""DROP TABLE IF EXISTS properties_group_1;"")
        cursor.execute(""DROP TABLE IF EXISTS properties_group_2;"")
        cursor.execute(""DROP TABLE IF EXISTS properties;"")
        connection.commit()

        print(""Creating main table... This will take 5 minutes"")
        main_table_name = ""properties""
        create_main_table_query = (
            f""CREATE TABLE {main_table_name} (id INT AUTO_INCREMENT PRIMARY KEY)""
        )
        cursor.execute(create_main_table_query)
        connection.commit()

        def create_related_table(group_name, group_columns, main_table_name):
            print(f""Creating related table {group_name}..."")
            table_name = f""{main_table_name}_{group_name}""
            create_table_query = f""CREATE TABLE {table_name} (id INT AUTO_INCREMENT PRIMARY KEY, main_id INT, FOREIGN KEY (main_id) REFERENCES {main_table_name}(id)""
            column_definitions = []

            for column in group_columns:
                dtype = df[column].dtype
                sanitized_column = sanitize_column_name(column)
                mysql_dtype = """"
                if ""int"" in str(dtype):
                    mysql_dtype = ""INT""
                elif ""float"" in str(dtype):
                    mysql_dtype = ""FLOAT""
                elif ""object"" in str(dtype):
                    mysql_dtype = ""TEXT""
                elif ""bool"" in str(dtype):
                    mysql_dtype = ""TINYINT(1)""
                column_definitions.append(f""{sanitized_column} {mysql_dtype}"")

            create_table_query += "", "" + "", "".join(column_definitions) + "")""
            cursor.execute(create_table_query)
            connection.commit()

            print(f""Inserting data into related table {group_name}..."")
            for _, row in df[group_columns].iterrows():
                row_values = tuple(row.values)
                row_values = tuple(
                    None if pd.isna(value) else value for value in row_values
                )
                insert_query = f""INSERT INTO {table_name} (main_id, {', '.join(group_columns)}) VALUES (%s, {', '.join(['%s'] * len(row))})""
                cursor.execute(insert_query, (row.name + 1, *row_values))
            connection.commit()

        print(""Inserting data into the main table..."")
        for _, row in df.iterrows():
            insert_main_query = f""INSERT INTO {main_table_name} (id) VALUES (%s)""
            cursor.execute(insert_main_query, (row.name + 1,))
            connection.commit()

        create_related_table(""group_1"", group_1_columns, main_table_name)
        create_related_table(""group_2"", group_2_columns, main_table_name)

        print(f""Tables created and data inserted successfully."")

except Error as e:
    print(f""Error: {e}"")

finally:
    if connection.is_connected():
        cursor.close()
        connection.close()
"
CsXbhi2U,1,MagmaLP,Lua,Friday 16th of June 2023 01:59:25 PM CDT,"os.loadAPI(""ocs/apis/sensor"")
local s = sensor.wrap(""front"")
side = ""top""
mon = peripheral.wrap(side)
mon.setBackgroundColor(32768)
mon.setTextScale(1.5)
mon.clear()

function calc_color(color)
    return math.pow(2, color - 1)
end
 
function msg(gap, line, color, groundb, text) 
    mon.setBackgroundColor(calc_color(groundb))
    mon.setCursorPos(gap,line)
    mon.setTextColor(calc_color(color))
    text = mon.write(text)
end  

function stufenscreen()
	for i = 1,13 do -- monitor clear
		msg(01,i,01,16,""                                                         "")
	end

	for name,info in pairs(s.getTargets()) do	--name erkennen
		local file = fs.open(""stufe/"" ..name.. ""/"", ""r"") -- lese Stufe aus
    	local stufe = file.readLine()
   		file.close()

		msg(01,01,02,16,"" Welcome ""..name..""                                   "")
		msg(01,02,05,16,""---------------------------------+-----------------------"")
		msg(01,03,09,16,""There are levels 1 to 5."")
		msg(01,04,09,16,""Minutes * Level * 10 = UU-Matter"")
		msg(01,05,09,16,""E.g: 20 *   3   * 10 = 600 UU"")
		msg(01,06,06,16,""Your Level: ""..stufe..""                                 "")
		msg(01,07,09,16,""Put HVs in the ME on your left"")
		msg(01,08,09,16,""to increase your level, you keep"")
        msg(01,09,09,16,""them back afterwards."")
		msg(01,10,10,16,""Level 2 with 04 HV"") 
		msg(01,11,10,16,""Level 3 with 08 HV"") msg(21,10,15,09,""           "")
		msg(01,12,10,16,""Level 4 with 12 HV"") msg(21,11,15,09,""   START   "")
		msg(01,13,10,16,""Level 5 with 16 HV"") msg(21,12,15,09,""           "")
											  

		local event, side, X, Y = os.pullEvent(""monitor_touch"") -- zuråBCck zu Screen1
		if X >= 21 and X <= 50 and Y >= 10 and Y <= 12 and side == side then -- Stufe åA4ndern
			rednet.open(""bottom"")
			rednet.send(9941,1)
			x, y, z = rednet.receive()
			stufe = tonumber(stufe)
			if y == 1 then
				sleep(0.5)
			elseif y == 2 and stufe == 1 then
				local file = fs.open(""stufe/"" ..name.. ""/"", ""w"")
				file.write(""2"")
				file.close()
			elseif y == 3 and stufe <= 2 then
				local file = fs.open(""stufe/"" ..name.. ""/"", ""w"")
				file.write(""3"")
				file.close()
			elseif y == 4 and stufe <= 3 then
				local file = fs.open(""stufe/"" ..name.. ""/"", ""w"")
				file.write(""4"")
				file.close()
			elseif y == 5 and stufe <= 4 then
				local file = fs.open(""stufe/"" ..name.. ""/"", ""w"")
				file.write(""5"")
				file.close()
			end
			screen3()
		end
	end
end

function screen3()
	for name,info in pairs(s.getTargets()) do	--name erkennen
		local file = fs.open(""users/"" ..name.. ""/"", ""r"") -- lese Minuten aus
    	local minu = file.readLine()
   		file.close()
		local file = fs.open(""stufe/"" ..name.. ""/"", ""r"") -- lese Stufe aus
    	local stufe = file.readLine()
   		file.close()
		minu = tonumber(minu)

		if stufe == ""1"" then
			faktor1 = 10
			faktor2 = 100
		elseif stufe == ""2"" then
			faktor1 = 20
			faktor2 = 200
		elseif stufe == ""3"" then
			faktor1 = 30
			faktor2 = 300
		elseif stufe == ""4"" then
			faktor1 = 40
			faktor2 = 400
		elseif stufe == ""5"" then
			faktor1 = 50
			faktor2 = 500
		end
---------------------------------------------------------------
		term.setCursorPos(1,3)
		term.write(""Stufe: ""..stufe)
		term.setCursorPos(1,4)
		term.write(""                          "")
		term.setCursorPos(1,4)
		term.write(""Abzug in Minuten: ""..minuten)
		term.setCursorPos(1,5)
		term.write(""                          "")
		term.setCursorPos(1,5)
		term.write(""Auszahlung in UU: ""..uumatter)		
---------------------------------------------------------------
		for i = 1,13 do -- monitor clear
			msg(01,i,01,16,""                                                         "")
		end

		msg(01,01,02,16,"" Welcome ""..name..""                                   "")	-- Screen3
		msg(01,02,05,16,""---------------------------------------------------------"")
		msg(01,03,06,16,""Level: ""..stufe..""   Minutes: ""..minu..""                 "")
		msg(01,04,05,16,""---------------------------------------------------------"")
		msg(01,05,10,16,""click here to change level.                              "")
		msg(01,06,05,16,""---------------------------------------------------------"")
		msg(01,07,09,16,""select payout amount:                                     "")
		msg(05,08,01,06,""+1 "")    msg(12,08,01,06,""+10"")
		msg(20,08,01,15,""-1 "")    msg(27,08,01,15,""-10"")
		msg(01,09,05,16,""                                                         "")
		msg(01,10,06,16,""Minutes: ""..minuten..""   UU-Matter: ""..uumatter..""       "")
		msg(01,11,05,16,""------------------+"") msg(20,11,15,09,""              	  "")
		msg(01,12,09,08,"" open start menu  "")  msg(20,12,15,09,"" UU - pay out     "")
		msg(01,13,09,08,"" -> click here <- "")  msg(20,13,15,09,""  click here      "")
        for x = 12,13 do
			msg(19,x,05,16,""|"")   
		end
                                        
		local event, side, X, Y = os.pullEvent(""monitor_touch"") -- zuråBCck zu Screen1
		if X >= 05 and X <= 07 and Y == 8 and side == side then -- +1
			if minuten < minu then
				minuten = minuten + 1
				uumatter = uumatter + faktor1
				screen3()
			else
				screen3()
			end
		elseif X >= 12 and X <= 15 and Y == 8 and side == side then -- +10
			if minuten + 11 <= minu then
				minuten = minuten + 10
				uumatter = uumatter + faktor2
				screen3()
			else
				screen3()
			end
		elseif X >= 20 and X <= 22 and Y == 8 and side == side and minuten >= 01 then -- -1
			minuten = minuten - 1
			uumatter = uumatter - faktor1
			screen3()
		elseif X >= 27 and X <= 29 and Y == 8 and side == side and minuten >= 10 then -- -10
			minuten = minuten - 10
			uumatter = uumatter - faktor2
			screen3()
    	elseif X >= 01 and X <= 18 and Y >= 12 and Y <= 13 and side == side then -- neustart
			shell.run(""startup"")
		elseif X >= 20 and X <= 50 and Y >= 12 and Y <= 13 and side == side then -- UU auszahlen
			rednet.open(""bottom"")
			rednet.send(9938,uumatter)
			minu = minu - minuten
			local file = fs.open(""users/"" ..name.. ""/"", ""w"")
			file.write(minu)
			file.close()
			msg(01,10,06,16,""                                                         "")
			msg(01,10,06,16,""payout in progress (ME System)->  "")
			sleep(1.5)
		elseif X >= 1 and X <= 50 and Y == 5 and side == side then -- Steufe åA4ndern
			stufenscreen()
		else
			screen3()
		end
	end
end


		

while true do
    for name,info in pairs(s.getTargets()) do	--name erkennen
		msg(01,01,02,16,"" Welcome ""..name..""                                   "")

		if fs.exists(""users/"" ..name) == false then				--erstelle Minuten
  			local file = fs.open(""users/"" ..name.. ""/"", ""w"")
			file.write(""0"")
			file.close()
		end
		if fs.exists(""stufe/"" ..name) == false then				--erstelle Stufe
  			local file = fs.open(""stufe/"" ..name.. ""/"", ""w"")
			file.write(""1"")
			file.close()
		end

		if rs.getInput(""left"", true) then		--druckplatte erkennen
			local file = fs.open(""users/"" ..name.. ""/"", ""r"")		--lese Minuten aus
    		local minu = file.readLine()
   			file.close()

			msg(01,02,05,16,""---------------------------------------------------------"")	--Screen2
			msg(16,03,06,16,"" ""..minu.."" Minutes                                      "")
			msg(01,04,05,16,""---------------------------------------------------------"")
			msg(01,05,09,16,""                                                         "")
			msg(01,06,09,16,""                                                         "")
			msg(01,07,09,16,""                                                         "")
			msg(01,05,09,16,""It is checked every 60 seconds                           "")
			msg(01,06,09,16,""whether you are still standing                           "")
			msg(01,07,09,16,""on the pressure plate.                                   "")
			msg(01,08,05,16,""---------------------------------------------------------"")	
			msg(01,09,09,16,""received minutes are saved                               "")
			msg(01,10,09,16,""until they are redeemed.                                 "")
			msg(01,11,05,16,""---------------------------------------------------------"")
			msg(01,12,09,16,""                                                         "")
			msg(01,13,09,16,""                                                         "")

			for sek = 1,60 do	--zåA4hle bis 60 Sekunden
				msg(01,03,06,16,"" ""..sek.."" Secondes "")
				sleep(1)
				if sek == 60 then	--wenn 60 dann zåA4hl +1 Minuten
					minu = minu + 1
					msg(16,03,06,16,"" ""..minu.."".0 Minutes   "")
    				local file = fs.open(""users/"" ..name.. ""/"", ""w"")	--neue Minuten speichern
    				file.write(minu)
   					file.close()
				end
			end
		else 
			msg(01,02,05,16,""---------------------------------------------------------"")	--Screen1
			msg(01,03,06,16,""                                                         "")
			msg(01,04,05,16,""---------------------------------------------------------"")
			msg(01,05,09,16,""                                                         "")
			msg(01,06,09,16,""                                                         "")
			msg(01,07,09,16,""                                                         "")
			msg(01,05,09,16,""No player detected on                                    "")
			msg(01,06,09,16,""pressure plate, stand on pressure                        "")
			msg(01,07,09,16,""plate to start count.                                    "")		
			msg(01,08,05,16,""---------------------------------------------------------"")	
			msg(01,09,09,16,""received minutes are saved                               "")
			msg(01,10,09,16,""until they are redeemed.                                 "")
			msg(01,11,05,16,""---------------------------------------------------------"")
			msg(01,12,09,16,""       open payment menu     --->                        "")
			msg(01,13,09,16,""                                                         "")
		end

		if rs.getInput(""right"", true) then	--åB6ffnen Auszahlscreen		
			minuten = 0.0
			uumatter = 0.0
			screen3()
		end		
	end
	sleep(1)
end"
sY8XmYfD,refresh-radarr.groovy,filebot,Groovy,Friday 16th of June 2023 01:56:22 PM CDT,"def host = '127.0.0.1'
def port = 8310
def auth = 'YOUR_API_KEY'


def ids = model.findAll{ it.type =~ /Movie/ }.findResults{ it.tmdbId } as Set

ids.each{ id ->
	def r = curl ""http://${host}:${port}/api/v3/movie?tmdbId=${id}"", 'X-Api-Key': auth
	r.each{ m ->
		curl ""http://${host}:${port}/api/v3/command"", [name: 'rescanMovie', movieId: m.id], 'X-Api-Key': auth
    }
}
"
YiktfqVJ,Untitled,Ethan-ZYF,C++,Friday 16th of June 2023 01:50:09 PM CDT,"#include <bits/stdc++.h>
using namespace std;
using i64 = long long;

#ifdef LOCAL
#include ""algo/debug.h""
#else
#define debug(...)
#endif

/*
 * @author jiangly
 * https://codeforces.com/profile/jiangly
 */
struct HLD {
    int n;
    std::vector<int> siz, top, dep, parent, in, out, seq;
    std::vector<std::vector<int>> adj;
    int cur;

    HLD() {}
    HLD(int n) {
        init(n);
    }
    void init(int n) {
        this->n = n;
        siz.resize(n);
        top.resize(n);
        dep.resize(n);
        parent.resize(n);
        in.resize(n);
        out.resize(n);
        seq.resize(n);
        cur = 0;
        adj.assign(n, {});
    }
    void addEdge(int u, int v) {
        adj[u].push_back(v);
        adj[v].push_back(u);
    }
    void work(int root = 0) {
        top[root] = root;
        dep[root] = 0;
        parent[root] = -1;
        dfs1(root);
        dfs2(root);
    }
    void dfs1(int u) {
        if (parent[u] != -1) {
            adj[u].erase(std::find(adj[u].begin(), adj[u].end(), parent[u]));
        }

        siz[u] = 1;
        for (auto &v : adj[u]) {
            parent[v] = u;
            dep[v] = dep[u] + 1;
            dfs1(v);
            siz[u] += siz[v];
            if (siz[v] > siz[adj[u][0]]) {
                std::swap(v, adj[u][0]);
            }
        }
    }
    void dfs2(int u) {
        in[u] = cur++;
        seq[in[u]] = u;
        for (auto v : adj[u]) {
            top[v] = v == adj[u][0] ? top[u] : v;
            dfs2(v);
        }
        out[u] = cur;
    }
    int lca(int u, int v) {
        while (top[u] != top[v]) {
            if (dep[top[u]] > dep[top[v]]) {
                u = parent[top[u]];
            } else {
                v = parent[top[v]];
            }
        }
        return dep[u] < dep[v] ? u : v;
    }

    int dist(int u, int v) {
        return dep[u] + dep[v] - 2 * dep[lca(u, v)];
    }

    int jump(int u, int k) {
        if (dep[u] < k) {
            return -1;
        }

        int d = dep[u] - k;

        while (dep[top[u]] > d) {
            u = parent[top[u]];
        }

        return seq[in[u] - dep[u] + d];
    }

    bool isAncester(int u, int v) {
        return in[u] <= in[v] && in[v] < out[u];
    }

    int rootedChild(int u, int v) {
        if (u == v) {
            return u;
        }
        if (!isAncester(u, v)) {
            return parent[u];
        }
        auto it = std::upper_bound(adj[u].begin(), adj[u].end(), v, [&](int x, int y) {
                      return in[x] < in[y];
                  }) -
                  1;
        return *it;
    }

    int rootedSize(int u, int v) {
        if (u == v) {
            return n;
        }
        if (!isAncester(v, u)) {
            return siz[v];
        }
        return n - siz[rootedChild(v, u)];
    }

    int rootedLca(int a, int b, int c) {
        return lca(a, b) ^ lca(b, c) ^ lca(c, a);
    }
};

/*
 * @author jiangly
 * https://codeforces.com/profile/jiangly
 */
template <class Info, class Tag>
struct LazySegmentTree {
    const int n;
    std::vector<Info> info;
    std::vector<Tag> tag;
    LazySegmentTree(int n) : n(n), info(4 << std::__lg(n)), tag(4 << std::__lg(n)) {}
    LazySegmentTree(std::vector<Info> init) : LazySegmentTree(init.size()) {
        std::function<void(int, int, int)> build = [&](int p, int l, int r) {
            if (r - l == 1) {
                info[p] = init[l];
                return;
            }
            int m = (l + r) / 2;
            build(2 * p, l, m);
            build(2 * p + 1, m, r);
            pull(p);
        };
        build(1, 0, n);
    }
    void pull(int p) {
        info[p] = info[2 * p] + info[2 * p + 1];
    }
    void apply(int p, const Tag &v) {
        info[p].apply(v);
        tag[p].apply(v);
    }
    void push(int p) {
        apply(2 * p, tag[p]);
        apply(2 * p + 1, tag[p]);
        tag[p] = Tag();
    }
    void modify(int p, int l, int r, int x, const Info &v) {
        if (r - l == 1) {
            info[p] = v;
            return;
        }
        int m = (l + r) / 2;
        push(p);
        if (x < m) {
            modify(2 * p, l, m, x, v);
        } else {
            modify(2 * p + 1, m, r, x, v);
        }
        pull(p);
    }
    void modify(int p, const Info &v) {
        modify(1, 0, n, p, v);
    }
    Info rangeQuery(int p, int l, int r, int x, int y) {
        if (l >= y || r <= x) {
            return Info();
        }
        if (l >= x && r <= y) {
            return info[p];
        }
        int m = (l + r) / 2;
        push(p);
        return rangeQuery(2 * p, l, m, x, y) + rangeQuery(2 * p + 1, m, r, x, y);
    }
    Info rangeQuery(int l, int r) {
        return rangeQuery(1, 0, n, l, r);
    }
    void rangeApply(int p, int l, int r, int x, int y, const Tag &v) {
        if (l >= y || r <= x) {
            return;
        }
        if (l >= x && r <= y) {
            apply(p, v);
            return;
        }
        int m = (l + r) / 2;
        push(p);
        rangeApply(2 * p, l, m, x, y, v);
        rangeApply(2 * p + 1, m, r, x, y, v);
        pull(p);
    }
    void rangeApply(int l, int r, const Tag &v) {
        return rangeApply(1, 0, n, l, r, v);
    }

    int search(int p, int l, int r, int x, int y, i64 v) {
        if (l >= y || r <= x) return y;
        if (info[p].min >= v) return y;
        if (r - l == 1) return l;
        int m = (l + r) / 2;
        push(p);
        int res = search(2 * p, l, m, x, y, v);
        if (res == y) res = search(2 * p + 1, m, r, x, y, v);
        return res;
    }

    int search(int l, int r, i64 v) {
        return search(1, 0, n, l, r, v);
    }
};

struct Tag {
    i64 x;
    Tag(i64 _x = 0) : x{_x} {}

    void apply(const Tag &t) {
        x += t.x;
    }
};

struct Info {
    i64 x;
    int sz;

    Info(i64 _x = 0, int _sz = 1) : x{_x}, sz{_sz} {}

    void apply(const Tag &t) {
        x += t.x * sz;
    }
};

Info operator+(const Info &a, const Info &b) {
    return Info{a.x + b.x, a.sz + b.sz};
}

void solve() {
    int n, m;
    cin >> n >> m;
    HLD hld(n);
    for (int i = 0; i < n - 1; i++) {
        int x, y;
        cin >> x >> y;
        hld.addEdge(x - 1, y - 1);
    }
    hld.work();
    debug(hld.in);
    debug(hld.out);
    LazySegmentTree<Info, Tag> seg(n);
    auto update_path = [&](int x, int y, i64 v) {
        while (hld.top[x] != hld.top[y]) {
            if (hld.dep[hld.top[x]] < hld.dep[hld.top[y]]) {
                swap(x, y);
            }
            seg.rangeApply(hld.in[hld.top[x]], hld.in[x] + 1, v);
            x = hld.parent[hld.top[x]];
        }
        if (hld.dep[x] > hld.dep[y]) {
            swap(x, y);
        }
        seg.rangeApply(hld.in[x], hld.in[y] + 1, v);
    };

    auto query_path = [&](int x, int y) {
        Info res;
        while (hld.top[x] != hld.top[y]) {
            if (hld.dep[hld.top[x]] < hld.dep[hld.top[y]]) {
                swap(x, y);
            }
            res = res + seg.rangeQuery(hld.in[hld.top[x]], hld.in[x] + 1);
            x = hld.parent[hld.top[x]];
        }
        if (hld.dep[x] > hld.dep[y]) {
            swap(x, y);
        }
        res = res + seg.rangeQuery(hld.in[x], hld.in[y] + 1);
        return res;
    };

    auto update_subtree = [&](int x, i64 v) {
        seg.rangeApply(hld.in[x], hld.out[x], v);
    };

    auto query_subtree = [&](int x) {
        return seg.rangeQuery(hld.in[x], hld.out[x]);
    };

    for (int i = 0; i < m; i++){
        int x, y;
        cin >> x >> y;
        x--, y--;
        update_path(x, y, 1);
    }
    vector<int> ans(n);
    for (int i = 0; i < n; i++){
        ans[i] = query_path(i, i).x;
    }
    for (int i = 0; i < n; i++){
        cout << ans[i] << "" \n""[i == n - 1];
    }
}

int main() {
    cin.tie(nullptr)->sync_with_stdio(false);

    int T = 1;
    // cin >> T;
    for (int Task = 1; Task <= T; Task++) {
        debug(Task);
        solve();
    }

    return 0;
}"
xapdKBXM,testpy,TimurSalakhetdinov,Python,Friday 16th of June 2023 01:49:02 PM CDT,"import requests
import json

data = {""orderId"": ""unique_order_id"",
 ""items"": [
    {""sku"": ""unique_sku_1"", ""count"": 1, ""size1"": ""5.1"", ""size2"": ""2.2"", ""size3"": ""5.3"",
     ""weight"": ""7.34"", ""type"": [""2""]},
    {""sku"": ""unique_sku_2"", ""count"": 3, ""size1"": ""4"", ""size2"": ""5.23"", ""size3"": ""6.2"",
     ""weight"": ""7.45"", ""type"": [""8"", ""9"", ""10""]},
    {""sku"": ""unique_sku_3"", ""count"": 2, ""size1"": ""11"", ""size2"": ""12.5"", ""size3"": ""13.3"",
     ""weight"": ""14.2"", ""type"": [""15"", ""16""]}
   ]
}

r = requests.post(""http://localhost:8000/pack"", json=data)

try:
    print(r.json())
except json.JSONDecodeError:
    print(""Invalid or empty JSON response."")"
bLRTJ3kM,refresh-sonarr.groovy,filebot,Groovy,Friday 16th of June 2023 01:40:46 PM CDT,"def host = '127.0.0.1'
def port = 8989
def auth = 'YOUR_API_KEY'


def ids = model.findAll{ it.type =~ /Episode/ }.findResults{ it.tvdbId } as Set

ids.each{ id ->
	def r = curl ""http://${host}:${port}/api/v3/series?tvdbId=${id}"", 'X-Api-Key': auth
	r.each{ s ->
		curl ""http://${host}:${port}/api/v3/command"", [name: 'rescanSeries', seriesId: s.id], 'X-Api-Key': auth
	}
}
"
tB9dtz3B,NN_arhitekture,Alkor135,Python,Friday 16th of June 2023 01:40:35 PM CDT,"		# Архитектура сети
        model = Sequential()
        model.add(Dense(512, activation='relu', input_shape=(X_train.shape[1],)))
        model.add(BatchNormalization())
        model.add(Dropout(0.2))
        for _ in range(3):
            model.add(Dense(512, activation='relu', ))
            model.add(BatchNormalization())
            model.add(Dropout(0.1))
        model.add(Dense(1))

        # Параметры модели
        model.compile(
            optimizer='adam',
            loss='mse',
            # loss='mae',
            metrics=['mae']
        )

        # Определение функций обратного вызова
        # Функция обратного вызова ранней остановки
        es = EarlyStopping(
            # monitor='val_loss',
            monitor='mae',
            mode='min',
            patience=2000,
            verbose=0
        )
        # Функция обратного вызова для сохранения лучшей модели
        mc = ModelCheckpoint(
            self.file_name_save,  # файл для сохранения модели
            monitor='mae',
            mode='min',
            save_best_only=True,
            verbose=0
        )

        # Тренировка модели
        num_epochs = 10000
        model.fit(X_train, y_train,
                  epochs=num_epochs,
                  batch_size=1312,
                  validation_split=0.15,
                  # validation_data=(X_test, y_test),
                  callbacks=[es, mc],
                  verbose=0
                  )

        del model  # deletes the existing model
        model = load_model(self.file_name_save)  # Загрузка сохраненной лучшей модели

        predictions = model.predict(X_test)  # На выходе двумерный массив numpy с предсказаниями

        mae: int = int(mean_absolute_error(predictions, y_test))  # Средняя абсолютная ошибка для данных
        r2: float = r2_score(y_test, predictions)  # Коэффициент детерминации"
Uq19UcXy,Untitled,Ethan-ZYF,C++,Friday 16th of June 2023 01:39:07 PM CDT,"#include <bits/stdc++.h>
using namespace std;
using i64 = long long;

#ifdef LOCAL
#include ""algo/debug.h""
#else
#define debug(...)
#endif
int P;

/*
 * @author jiangly
 * https://codeforces.com/profile/jiangly
 */
struct HLD {
    int n;
    std::vector<int> siz, top, dep, parent, in, out, seq;
    std::vector<std::vector<int>> adj;
    int cur;

    HLD() {}
    HLD(int n) {
        init(n);
    }
    void init(int n) {
        this->n = n;
        siz.resize(n);
        top.resize(n);
        dep.resize(n);
        parent.resize(n);
        in.resize(n);
        out.resize(n);
        seq.resize(n);
        cur = 0;
        adj.assign(n, {});
    }
    void addEdge(int u, int v) {
        adj[u].push_back(v);
        adj[v].push_back(u);
    }
    void work(int root = 0) {
        top[root] = root;
        dep[root] = 0;
        parent[root] = -1;
        dfs1(root);
        dfs2(root);
    }
    void dfs1(int u) {
        if (parent[u] != -1) {
            adj[u].erase(std::find(adj[u].begin(), adj[u].end(), parent[u]));
        }

        siz[u] = 1;
        for (auto &v : adj[u]) {
            parent[v] = u;
            dep[v] = dep[u] + 1;
            dfs1(v);
            siz[u] += siz[v];
            if (siz[v] > siz[adj[u][0]]) {
                std::swap(v, adj[u][0]);
            }
        }
    }
    void dfs2(int u) {
        in[u] = cur++;
        seq[in[u]] = u;
        for (auto v : adj[u]) {
            top[v] = v == adj[u][0] ? top[u] : v;
            dfs2(v);
        }
        out[u] = cur;
    }
    int lca(int u, int v) {
        while (top[u] != top[v]) {
            if (dep[top[u]] > dep[top[v]]) {
                u = parent[top[u]];
            } else {
                v = parent[top[v]];
            }
        }
        return dep[u] < dep[v] ? u : v;
    }

    int dist(int u, int v) {
        return dep[u] + dep[v] - 2 * dep[lca(u, v)];
    }

    int jump(int u, int k) {
        if (dep[u] < k) {
            return -1;
        }

        int d = dep[u] - k;

        while (dep[top[u]] > d) {
            u = parent[top[u]];
        }

        return seq[in[u] - dep[u] + d];
    }

    bool isAncester(int u, int v) {
        return in[u] <= in[v] && in[v] < out[u];
    }

    int rootedChild(int u, int v) {
        if (u == v) {
            return u;
        }
        if (!isAncester(u, v)) {
            return parent[u];
        }
        auto it = std::upper_bound(adj[u].begin(), adj[u].end(), v, [&](int x, int y) {
                      return in[x] < in[y];
                  }) -
                  1;
        return *it;
    }

    int rootedSize(int u, int v) {
        if (u == v) {
            return n;
        }
        if (!isAncester(v, u)) {
            return siz[v];
        }
        return n - siz[rootedChild(v, u)];
    }

    int rootedLca(int a, int b, int c) {
        return lca(a, b) ^ lca(b, c) ^ lca(c, a);
    }
};

/*
 * @author jiangly
 * https://codeforces.com/profile/jiangly
 */
template <class Info, class Tag>
struct LazySegmentTree {
    const int n;
    std::vector<Info> info;
    std::vector<Tag> tag;
    LazySegmentTree(int n) : n(n), info(4 << std::__lg(n)), tag(4 << std::__lg(n)) {}
    LazySegmentTree(std::vector<Info> init) : LazySegmentTree(init.size()) {
        std::function<void(int, int, int)> build = [&](int p, int l, int r) {
            if (r - l == 1) {
                info[p] = init[l];
                return;
            }
            int m = (l + r) / 2;
            build(2 * p, l, m);
            build(2 * p + 1, m, r);
            pull(p);
        };
        build(1, 0, n);
    }
    void pull(int p) {
        info[p] = info[2 * p] + info[2 * p + 1];
    }
    void apply(int p, const Tag &v) {
        info[p].apply(v);
        tag[p].apply(v);
    }
    void push(int p) {
        apply(2 * p, tag[p]);
        apply(2 * p + 1, tag[p]);
        tag[p] = Tag();
    }
    void modify(int p, int l, int r, int x, const Info &v) {
        if (r - l == 1) {
            info[p] = v;
            return;
        }
        int m = (l + r) / 2;
        push(p);
        if (x < m) {
            modify(2 * p, l, m, x, v);
        } else {
            modify(2 * p + 1, m, r, x, v);
        }
        pull(p);
    }
    void modify(int p, const Info &v) {
        modify(1, 0, n, p, v);
    }
    Info rangeQuery(int p, int l, int r, int x, int y) {
        if (l >= y || r <= x) {
            return Info();
        }
        if (l >= x && r <= y) {
            return info[p];
        }
        int m = (l + r) / 2;
        push(p);
        return rangeQuery(2 * p, l, m, x, y) + rangeQuery(2 * p + 1, m, r, x, y);
    }
    Info rangeQuery(int l, int r) {
        return rangeQuery(1, 0, n, l, r);
    }
    void rangeApply(int p, int l, int r, int x, int y, const Tag &v) {
        if (l >= y || r <= x) {
            return;
        }
        if (l >= x && r <= y) {
            apply(p, v);
            return;
        }
        int m = (l + r) / 2;
        push(p);
        rangeApply(2 * p, l, m, x, y, v);
        rangeApply(2 * p + 1, m, r, x, y, v);
        pull(p);
    }
    void rangeApply(int l, int r, const Tag &v) {
        return rangeApply(1, 0, n, l, r, v);
    }

    int search(int p, int l, int r, int x, int y, i64 v) {
        if (l >= y || r <= x) return y;
        if (info[p].min >= v) return y;
        if (r - l == 1) return l;
        int m = (l + r) / 2;
        push(p);
        int res = search(2 * p, l, m, x, y, v);
        if (res == y) res = search(2 * p + 1, m, r, x, y, v);
        return res;
    }

    int search(int l, int r, i64 v) {
        return search(1, 0, n, l, r, v);
    }
};

constexpr i64 inf = 1E18;

struct Tag {
    i64 x;
    Tag(i64 _x = 0) : x{_x} {}

    void apply(const Tag &t) {
        x += t.x;
        x %= P;
    }
};

struct Info {
    i64 x;
    int sz;

    Info(i64 _x = 0, int _sz = 1) : x{_x}, sz{_sz} {}

    void apply(const Tag &t) {
        x += t.x * sz;
        x %= P;
    }
};

Info operator+(const Info &a, const Info &b) {
    return Info{(a.x + b.x) % P, a.sz + b.sz};
}

void solve() {
    int n, m, r, p;
    cin >> n >> m >> r >> p;
    P = p;
    HLD hld(n);
    vector<int> a(n);
    for (int i = 0; i < n; i++) {
        cin >> a[i];
        a[i] %= P;
    }

    for (int i = 0; i < n - 1; i++) {
        int x, y;
        cin >> x >> y;
        hld.addEdge(x - 1, y - 1);
    }
    hld.work(r - 1);
    debug(hld.in);
    debug(hld.out);
    LazySegmentTree<Info, Tag> seg(n);
    for (int i = 0; i < n; i++) {
        seg.modify(hld.in[i], Info{a[i]});
    }
    auto update_path = [&](int x, int y, i64 v) {
        while (hld.top[x] != hld.top[y]) {
            if (hld.dep[hld.top[x]] < hld.dep[hld.top[y]]) {
                swap(x, y);
            }
            seg.rangeApply(hld.in[hld.top[x]], hld.in[x] + 1, v);
            x = hld.parent[hld.top[x]];
        }
        if (hld.dep[x] > hld.dep[y]) {
            swap(x, y);
        }
        seg.rangeApply(hld.in[x], hld.in[y] + 1, v);
    };

    auto query_path = [&](int x, int y) {
        Info res;
        while (hld.top[x] != hld.top[y]) {
            if (hld.dep[hld.top[x]] < hld.dep[hld.top[y]]) {
                swap(x, y);
            }
            res = res + seg.rangeQuery(hld.in[hld.top[x]], hld.in[x] + 1);
            x = hld.parent[hld.top[x]];
        }
        if (hld.dep[x] > hld.dep[y]) {
            swap(x, y);
        }
        res = res + seg.rangeQuery(hld.in[x], hld.in[y] + 1);
        return res;
    };

    auto update_subtree = [&](int x, i64 v) {
        seg.rangeApply(hld.in[x], hld.out[x], v);
    };

    auto query_subtree = [&](int x) {
        debug(x, hld.in[x], hld.out[x]);
        return seg.rangeQuery(hld.in[x], hld.out[x]);
    };

    while (m--) {
        int op;
        cin >> op;
        switch (op) {
            case 1: {
                int x, y, z;
                cin >> x >> y >> z;
                x--, y--;
                z %= P;
                update_path(x, y, z);
                break;
            }
            case 2: {
                int x, y;
                cin >> x >> y;
                x--, y--;
                cout << query_path(x, y).x << '\n';
                break;
            }
            case 3: {
                int x, z;
                cin >> x >> z;
                x--;
                z %= P;
                update_subtree(x, z);
                break;
            }
            case 4: {
                int x;
                cin >> x;
                x--;
                cout << query_subtree(x).x << '\n';
                break;
            }
        }
    }
}

int main() {
    cin.tie(nullptr)->sync_with_stdio(false);

    int T = 1;
    // cin >> T;
    for (int Task = 1; Task <= T; Task++) {
        debug(Task);
        solve();
    }

    return 0;
}"
zghKhq5A,Untitled,diela33,JavaScript,Friday 16th of June 2023 01:16:26 PM CDT,"window.addEventListener(""load"", solve);

function solve() {

  let makeInput = document.getElementById('make');
  let modelInput = document.getElementById('model');
  let productionYear = document.getElementById('year');
  let select = document.getElementById('fuel');
  let valuE = select.options[select.selectedIndex];

  let originalCost = document.getElementById('original-cost');
  let sellingPrice = document.getElementById('selling-price');
  let btnPublish = document.getElementById('publish');
  let tBody = document.getElementById('table-body');
  btnPublish.addEventListener('click', publish);

  function publish(e) {

    e.preventDefault();
    if (makeInput.value !== '' || modelInput.value !== '' || productionYear.value !== '' || valuE.value !== '' || valuE.value !== '' || originalCost.value !== '' || sellingPrice.value !== '') {
      if (Number(originalCost.value) < Number(sellingPrice.value)) {
        let trElement = document.createElement('tr');
        trElement.classList.add(""row"");

        let tdElementMake = document.createElement('td');
        tdElementMake.textContent = makeInput.value;

        let tdElementModel = document.createElement('td');
        tdElementModel.textContent = modelInput.value;

        let tdElementYear = document.createElement('td');
        tdElementYear.textContent = productionYear.value;

        let tdElementFuel = document.createElement('td');
        tdElementFuel.textContent = valuE.value;

        let tdElementOricinal = document.createElement('td');
        tdElementOricinal.textContent = originalCost.value;

        let tdElementSelling = document.createElement('td');
        tdElementSelling.textContent = sellingPrice.value;


        tBody.appendChild(trElement);
        trElement.appendChild(tdElementMake);
        trElement.appendChild(tdElementModel);
        trElement.appendChild(tdElementYear);
        trElement.appendChild(tdElementFuel);
        trElement.appendChild(tdElementOricinal);
        trElement.appendChild(tdElementSelling);
      }

    }

  }



}
"
gKaYqacz,Toll Upsol,ThegeekKnight16,C++,Friday 16th of June 2023 01:07:24 PM CDT,"#include <bits/stdc++.h>
using namespace std;
const int MAXN = 5e4 + 10;
const int INF = 0x3f3f3f3f;
array<array<int, 6>, MAXN> Dist;
array<bool, MAXN> Marc;
array<vector<pair<int, int>>, MAXN> grafo;
int K, N, M, O;

void bfs(int nivel, int nivelFim)
{
    Marc.fill(0);
    queue<int> q;
    for (int k = 0, v = nivel*K; k < K; k++, v++)
    {
        Dist[v][k] = 0;
        q.push(v);
        Marc[v] = 1;
    }

    while (!q.empty())
    {
        int cur = q.front(); q.pop();
        // if (cur/K > nivelFim) break;
        for (auto [viz, p] : grafo[cur])
        {
            for (int k = 0; k < K; k++)
            {
                Dist[viz][k] = min(Dist[viz][k], Dist[cur][k] + p);
            }
            if (!Marc[viz]) {q.push(viz); Marc[viz] = 1;}
        }
    }
}

bool cmp(tuple<int, int, int> a, tuple<int, int, int> b)
{
    if (((get<0>(a))/K) == ((get<0>(b))/K)) return get<1>(a) > get<1>(b);
    return get<0>(a) < get<0>(b);
}

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cin >> K >> N >> M >> O;
    for (int i = 1; i <= M; i++)
    {
        int X, Y, P;
        cin >> X >> Y >> P;
        grafo[X].emplace_back(Y, P);
    }
    Dist.fill({INF, INF, INF, INF, INF, INF});

    vector<tuple<int, int, int> > queries;
    for (int i = 0; i < O; i++)
    {
        int X, Y;
        cin >> X >> Y;
        queries.emplace_back(X, Y, i);
    }
    sort(queries.begin(), queries.end(), cmp);

    vector<int> resp(O); int lastNivel = -1;
    for (auto [X, Y, id] : queries)
    {
        // cerr << '\r' << X << "" "" << Y << "" "" << id;
        if (X/K >= Y/K) {resp[id] = -1; continue;}
        if (lastNivel < (X/K)) {bfs((X/K)+1, N/K); lastNivel = (X/K)+1;}
        if (lastNivel == (X/K)+1)
        {
            resp[id] = INF;
            for (auto [viz, p] : grafo[X]) resp[id] = min(resp[id], Dist[Y][viz%K] + p);
            if (resp[id] >= INF) resp[id] = -1;
        }
        else if (lastNivel == (X/K)) resp[id] = (Dist[Y][X%K] >= INF ? -1 : Dist[Y][X%K]);
    }

    for (auto x : resp) cout << x << '\n';
}
"
cb4QS035,Untitled,xX_yodaplayzXx,Python,Friday 16th of June 2023 01:01:41 PM CDT,"import random,time
list_of_names = ['Amelia', 'Olivia', 'Isla', 'Emily', 'Alexey', 'Poppy', 'Ava', 'Isabella', 'Jessica', 'Marcus', 'Lily', 'Sophie', 'Grace', 'Vsevolod', 'Sophia', 'Mia', 'Evie', 'Ruby', 'Celim', 'Sumir', 'Ella', 'Scarlett', 'Ruben', 'Isabelle', 'Chloe', 'Cherlin', 'Sienna', 'Masha', 'Freya', 'Phoebe', 'Charlotte', 'Daisy', 'Alice', 'Florence', 'Eva', 'Sofia', 'Millie', 'Lucy', 'Evelyn', 'Elsie', 'Rosie', 'Imogen', 'Lola', 'Matilda', 'Elizabeth', 'Layla', 'Alasdair','Holly', 'Lilly', 'Molly', 'Erin', 'Ellie', 'Maisie', 'Maya', 'Abigail', 'Eliza', 'Georgia', 'Jasmine', 'Esme', 'Willow', 'Leanne', 'Bella', 'Annabelle', 'Keemiya', 'Ivy', 'Amber', 'Emilia', 'Emma', 'Summer', 'Hannah', 'Eleanor', 'Harriet', 'Rose', 'Amelie', 'Lexi', 'Megan', 'Gracie', 'Zara', 'Nuha', 'John', 'Lacey', 'Martha', 'Anna', 'Violet', 'Darcey', 'Maria', 'Maryam', 'Brooke', 'Aisha', 'Katie', 'Leah', 'Heinrich', 'Nour', 'Thea', 'Darcie', 'Hollie', 'Amy', 'Alexandra', 'Stephen', 'Jonathan', 'Penny', 'Mollie', 'Heidi', 'Lottie', 'Bethany', 'Francesca', 'Faith', 'Harper', 'Nancy', 'Beatrice', 'Isabel', 'Juliette', 'Darcy', 'Lydia', 'Sarah', 'Sara', 'Julia', 'Victoria', 'Zoe', 'Robyn', 'Oliver', 'Jack', 'Harry', 'Jacob', 'Charlie', 'Thomas', 'Annabel', 'George', 'Oscar', 'James', 'Ian', 'William', 'Noah', 'Alfie', 'Joshua', 'Yuvraj', 'Muhammad', 'Leo', 'Archie', 'Ethan', 'Joseph', 'Arushi', 'Freddie', 'Samuel', 'Alexander', 'Logan', 'Daniel', 'Isaac', 'Max', 'Mohammed', 'Benjamin', 'Hugo', 'Mason', 'Lucas', 'Edward', 'Harrison', 'Jake', 'Neil', 'Dylan', 'Asher', 'Riley', 'Akash', 'Finley', 'Catherine', 'Theo', 'Muktarsi', 'Sebastian', 'Adam', 'Zachary', 'Arthur', 'Thomas', 'Alberto', 'Toby', 'Jayden', 'Luke', 'Harley', 'Lewis', 'Tyler', 'Harvey', 'Anusha', 'Matthew', 'David', 'Reuben', 'Alok', 'Michael', 'Elijah', 'Kian', 'Tom', 'Mohammad', 'Blake', 'Jean', 'Luca', 'Theodore', 'Stanley', 'Derin', 'Jenson', 'Nathan', 'Nicholas', 'Charles', 'Frankie', 'Constantin', 'Jude', 'Teddy', 'Eric', 'Viren', 'Louie', 'Louis', 'Ryan', 'Hugo', 'Bobby', 'Niamh', 'Anya', 'Elliott', 'Dexter', 'Khai', 'Hariesh', 'Henry', 'Ollie', 'Aron', 'Alex', 'Liam', 'Kai', 'Gabriel', 'Connor', 'Aaron', 'Afrah', 'Frederick', 'Callum', 'Lorcan', 'Elliot', 'Albert', 'Leon', 'Ronnie', 'Rory', 'Jamie', 'Austin', 'Seth', 'Ibrahim', 'Mei', 'Owen', 'Caleb', 'Yousuf', 'Ellis', 'Sonny', 'Devyn', 'Robert', 'Joey', 'Felix', 'Finlay', 'Rossa', 'Ekraj', 'Jackson', 'Jimi', 'Meera', 'Rafi', 'Salahdeen', 'Guido', 'Tanya', 'Karlis']


new_list = []
max = 0
print(""The highest was..."")
time.sleep(1)

for loop in list_of_names:                   # Words with the highest number of letters
  if len(loop)> max:
    max = len(loop)                                   
    new_list.append(loop)

print(new_list[-1])
print(""This has "" + str(max)+ "" letters"")
print("""")
time.sleep(0.5)
other_new_list = []
print(""The lowest was..."")
time.sleep(1)
for loop in list_of_names:                   # Words with the lowest number of letters
  if len(loop)< max:
    max = len(loop)
    new_list.append(loop)

print(new_list[-1])
print(""This has "" + str(max)+ "" letters"")


                                          # Names spelt the same backwards








"
MwFpEcUN,something,theguild42,C++,Friday 16th of June 2023 12:50:43 PM CDT,"#include <iostream>
using namespace std;

#include ""wp.h""
int main(){
    wp_init();
    cout << ""WirePlumber Initalized!"" << endl;
    return 0;
}"
EH6mgyee,kb_act.lst,ht777,C,Friday 16th of June 2023 12:48:09 PM CDT,"""blank""				""==========================""
""blank""				""Garry's Mod""
""blank""				""==========================""

""+menu""				""Open Spawn Menu""
""+menu_context""		""Open Context Menu""

""gmod_undo""			""Undo""
""noclip""			""Toggle No-Clip Mode""
""gm_demo""			""Start/Stop recording a demo""
""gm_video""			""Start/Stop recording a video""

""blank""				""==========================""
""blank""				""Addon""
""blank""				""==========================""

""KickingComm""        ""Patada""
""+smh_menu""          ""Menu de tercera persona""
""dropweapon""         ""Lanzar arma""
""thirdperson_toggle"" ""Activar/desactivar tercera persona""
""rm_ragdolize""       ""Dejarse caer""

""blank""				""==========================""
""blank""				""Game Modes""
""blank""				""==========================""

""gm_showhelp""		""Open Help""
""gm_showteam""		""Open Team Menu""
""gm_showspare1""		""Server Customizable Spare 1""
""gm_showspare2""		""Server Customizable Spare 2""

""blank""				""==========================""
""blank""				""#Valve_Movement_Title""
""blank""				""==========================""

""+forward""			""#Valve_Move_Forward""
""+back""				""#Valve_Move_Back""
""+moveleft""			""#Valve_Move_Left""
""+moveright""		""#Valve_Move_Right""
""+speed""			""#Valve_Sprint""
""+jump""				""#Valve_Jump""
""+duck""				""#Valve_Duck""


""blank""				""==========================""
""blank""				""#Valve_Combat_Title""
""blank""				""==========================""
""+attack""			""#Valve_Primary_Attack""
""+attack2""			""#Valve_Secondary_Attack""
""+reload""			""#Valve_Reload_Weapon""
""+use""				""#Valve_Use_Items""
""phys_swap""			""#Valve_Gravity_Gun""
""impulse 100""		""#Valve_Flashlight""
""+zoom""				""#Valve_Suit_Zoom""
""slot1""				""#Valve_Weapon_Category_1""
""slot2""				""#Valve_Weapon_Category_2""
""slot3"" 			""#Valve_Weapon_Category_3""
""slot4""				""#Valve_Weapon_Category_4""
""slot5""				""#Valve_Weapon_Category_5""
""slot6""				""#Valve_Weapon_Category_6""
""slot7""				""#Valve_Weapon_Category_7""
""slot8""				""#Valve_Weapon_Category_8""
""slot9""				""#Valve_Weapon_Category_9""
""slot0""				""#Valve_Weapon_Category_0""
""invnext""			""#Valve_Next_Weapon""
""invprev""			""#Valve_Previous_Weapon""
""lastinv""			""#Valve_Last_Weapon_Used""


""blank""				""==========================""
""blank""				""#Valve_Communication_Title""
""blank""				""==========================""
""+voicerecord""		""#Valve_Use_Voice_Communication""
""messagemode""		""#Valve_Chat_Message""
""messagemode2""		""#Valve_Team_Message""


""blank""				""==========================""
""blank""				""#Valve_Miscellaneous_Title""
""blank""				""==========================""
""jpeg""				""#Valve_Take_Screen_Shot""
""exec combat_thirdperson_activate""  ""modo plataformero 3D""
""+showscores""		""#Valve_Display_Scores""
""impulse 201""		""#Valve_Spray_Logo""
""pause""				""#Valve_Pause_Game""
""quit""				""#Valve_Quit_Game""


""blank""				""==========================""
""blank""				""#Valve_Miscellaneous_Keyboard_Keys_Title""
""blank""				""==========================""
""+walk""				""#Valve_Walk""
""+left""				""#Valve_Turn_Left""
""+right""			""#Valve_Turn_Right""
""+moveup""			""#Valve_Swim_Up""
""+movedown""			""#Valve_Swim_Down""
""+lookup""			""#Valve_Look_Up""
""+lookdown""			""#Valve_Look_Down""
""+strafe""			""#Valve_Strafe_Modifier""
""+klook""			""#Valve_Keyboard_Look_Modifier""
""toggleconsole""		""#Valve_Console_Toggle"""
HvnNeqQt,"Baixar video Youtube (sem janela, apenas terminal)",MizunoBrasil,Python,Friday 16th of June 2023 12:15:46 PM CDT,"#Baixar video Youtube (sem janela, apenas terminal)

from pytube import YouTube

# Solicita ao usuário que insira o URL do vídeo
url = input(""Insira o URL do vídeo do YouTube: "")

try:
    # Cria uma instância do objeto YouTube
    video = YouTube(url)

    # Filtra a melhor resolução disponível
    stream = video.streams.get_highest_resolution()

    # Baixa o vídeo
    print(""Baixando o vídeo..."")
    stream.download()
    print(""Download concluído!"")

except Exception as e:
    print(""Ocorreu um erro durante o download:"", str(e))
"
yx8VZhHH,Example,ClownProgrammer,Java,Friday 16th of June 2023 12:14:00 PM CDT,"public static List<String> splitText(String text, int maxSizeLine) {
        ArrayList<String> result = new ArrayList<>();

        Pattern pattern = Pattern.compile(""(\\S{0,""+maxSizeLine+""}\\s?)"");
        Matcher matcher = pattern.matcher(text);
        StringBuilder testString = new StringBuilder();
        while (matcher.find()) {
            if (testString.length() < maxSizeLine) {
                testString.append(matcher.group());
            }
            else {
                result.add(testString.toString());
                testString = new StringBuilder(matcher.group());
            }
        }
        result.add(testString.toString());

        return result;
    }"
