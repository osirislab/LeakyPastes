id,title,username,language,date,content
56Lv8Kpn,service function,magrega,TypeScript,Sunday 28th of May 2023 06:57:59 AM CDT,"import { TStories, TStory } from '../App.types';

const _api = 'https://lobster-app-qoium.ondigitalocean.app/story/';
let initialRequest = '?offset=0&limit=15';

export const fetchData = async (url: string, method: string = 'GET', body?: string): Promise<any> => {
  try {
    const options: RequestInit = {
      method, headers: { 'Content-Type': 'application/json' }
    };

    if (body) options.body = body;

    const response = await fetch(url, options);

    if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);

    return response.json();
  } catch (e) {
    throw new Error(`Error fetching data: ${(e as Error).message}`);
  }
};

export const getPosts = async (req: string = initialRequest): Promise<TStories> => {
  try {
    const responseBody = await fetchData(`${_api}${initialRequest}`);
    initialRequest = responseBody.next_url;
    return responseBody;
  } catch (e) {
    throw new Error(`Error fetching posts: ${(e as Error).message}`);
  }
};

export const getPost = async (id: string): Promise<TStory> => {
  try {
    return fetchData(`${_api}${id}`);
  } catch (e) {
    throw new Error(`Error getting post: ${(e as Error).message}`);
  }
};

export const sendPost = async (body: string): Promise<TStory> => {
  try {
    return await fetchData(_api, 'POST', JSON.stringify({ content: body }));
  } catch (e) {
    throw new Error(`Error making a post: ${(e as Error).message}`);
  }
};
"
nXPx5WRF,Untitled,codhank,JavaScript,Sunday 28th of May 2023 06:57:46 AM CDT,"import {
  User,
  Role,
  UserInformation,
  UserPreference,
} from ""../database/sequelize/index.js"";

export default {
  async getCurrentUser(req, res, next) {
    try {
      const user = await User.findOne({
        where: { id: req.userId },
        include: [
          { model: Role },
          { model: UserInformation, as: ""userInformation"" },
          { model: UserPreference, as: ""userPreference"" },
        ],
      });

      console.log(""User found in userController:"", user);
      if (!user) {
        return res.status(404).json({ message: ""User not found"" });
      }

      res.status(200).json(user);
    } catch (error) {
      console.error(error);
      next(error);
    }
  },


  async updateUserProfilePic(req, res, next) {
    try {
      const user = await User.findOne({
        where: { id: req.userId },
      });

      const userInformation = await UserInformation.findOne({
        where: { userId: req.userId },
      });

      if (!user || !userInformation) {
        return res.status(404).send({ message: ""User not found"" });
      }

      userInformation.profilePicture = `/uploads/${req.file.filename}`;

      await userInformation.save();

      res.status(200).json({
        message: ""Profile picture updated successfully"",
        user: user,
      });
    } catch (error) {
      console.error(error);
      next(error);
    }
  },

  async updateUserInfo(req, res, next) {
    try {
      const { username, email, address, phoneNumber, profilePicture } =
        req.body;

      // Mettre √† jour l'utilisateur
      const user = await User.findOne({
        where: { id: req.userId },
      });

      if (!user) {
        return res.status(404).send({ message: ""User not found"" });
      }

      user.username = username;
      user.email = email;

      await user.save();

      // Mettre √† jour les informations utilisateur
      const userInformation = await UserInformation.findOne({
        where: { userId: req.userId },
      });

      if (!userInformation) {
        return res.status(404).send({ message: ""User information not found"" });
      }

      userInformation.address = address;
      userInformation.phoneNumber = phoneNumber;
      userInformation.profilePicture = profilePicture;

      await userInformation.save();

      // R√©cup√©rer l'utilisateur avec les informations mises √† jour
      const updatedUser = await User.findOne({
        where: { id: req.userId },
        include: [
          { model: Role },
          { model: UserInformation, as: ""userInformation"" },
        ],
      });

      res.status(200).json({
        message: ""User information updated successfully"",
        user: updatedUser,
      });
    } catch (error) {
      console.error(error);
      next(error);
    }
  },

  // R√©cupere les preferences de l'utilisateur
  async getUserPreferences(req, res, next) {
    try {
      const userPreference = await UserPreference.findOne({
        where: { userId: req.userId },
      });
  
      if (!userPreference) {
        return res.status(404).json({ message: ""User preferences not found"" });
      }
  
      res.status(200).json(userPreference);
    } catch (error) {
      console.error(error);
      next(error);
    }
  },
  

  async updateUserPreferences(req, res, next) {
    console.log(""Request reached to updateUserPreferences controller"");
    //TODO: g√©rer region, fishingType, et favouriteSpecies
    try {
      const { fishingLevel, hasFishingCard } = req.body;
  
      // Trouver ou cr√©er les pr√©f√©rences utilisateur
      let [userPreference, created] = await UserPreference.findOrCreate({
        where: { userId: req.userId },
        defaults: {
          fishingLevel: fishingLevel,
          hasFishingCard: hasFishingCard,
        },
      });
  
      // Si les pr√©f√©rences de l'utilisateur existent d√©j√†, mettez-les √† jour
      if (!created) {
        userPreference.fishingLevel = fishingLevel;
        userPreference.hasFishingCard = hasFishingCard;
  
        await userPreference.save();
      }
  
      res.status(200).json({
        message: ""User preferences updated successfully"",
        userPreference: userPreference,
      });
    } catch (error) {
      console.error(error);
      next(error);
    }
  },  
};
"
qiuPFq8n,Untitled,Mysoft,C,Sunday 28th of May 2023 06:38:18 AM CDT,"#include <stdio.h>
#include <stdlib.h>
#include ""TNCremoLib.h""

int main()
{
    // Establish connection to the TNC 640
    int connection = ConnectToTNC(""192.168.1.100""); // Replace with the IP address of your TNC 640

    if (connection == 0)
    {
        printf(""Connection to TNC 640 successful.\n"");

        // Send a command to move the X-axis by 100 units
        int result = SendNCCommand(""X 100"");

        if (result == 0)
        {
            printf(""Command sent successfully.\n"");
        }
        else
        {
            printf(""Failed to send command.\n"");
        }

        // Disconnect from the TNC 640
        DisconnectFromTNC();
        printf(""Disconnected from TNC 640.\n"");
    }
    else
    {
        printf(""Connection to TNC 640 failed.\n"");
    }

    return 0;
}"
LiRLp2Rv,+1 Strong Every Second üí™,LuaXe,Lua,Sunday 28th of May 2023 06:29:00 AM CDT,"if not game.workspace:FindFirstChild(""PFA"") then local part = Instance.new(""Part"") part.Name = ""PFA"" part.Parent = game.workspace part.CFrame = CFrame.new(3, 880, 135) part.Size = Vector3.new(100, 1, 100) part.CanCollide = true part.Transparency = 0.8 part.Anchored = true end
if game.workspace:FindFirstChild(""Products"") then game.workspace.Products:Destroy() end

function C()
    spawn(function () TPCFrame(CFrame.new(3966, 923, -40)) wait(0.2) TPCFrame(game:GetService(""Workspace"").Box.Torba.Root.CFrame) wait(0.2)
        while getgenv().C do
if game:GetService(""Players"").LocalPlayer.Backpack:FindFirstChild(""Yumruk"") then game:GetService(""Players"").LocalPlayer.Backpack.Yumruk.Parent = game:GetService(""Players"").LocalPlayer.Character end
fireproximityprompt(game:GetService(""Workspace"").Box.Torba[""Box thing""].ProximityPrompt)
game:GetService(""Players"").LocalPlayer.Character.Yumruk.Punch.RemoteEvent:FireServer() wait()
        end wait(0.2) if not game:GetService(""Players"").LocalPlayer.Backpack:FindFirstChild(""Yumruk"") then game:GetService(""ReplicatedStorage"").Events.Box:FireServer() end
    end)
    spawn(function ()
        for i, v in pairs(game:GetService(""Workspace"").Map:GetChildren()) do if v.DataCost == 28 then v.Transparency = 0.9 v.CanCollide = false end end wait(1)
        while getgenv().C do
            TPCFrame(CFrame.new(3, 885, 135)) wait()
        end
    end)
end
function R()
    spawn(function ()
        while getgenv().R do
local args = {[1] = true}game:GetService(""ReplicatedStorage"").Events.Rebirth:FireServer(unpack(args)) wait()
        end
    end)
end
function H(W)
    spawn(function ()
        while getgenv().H do
TPCFrame(game:GetService(""Workspace"").Pet[W].Interact) fireproximityprompt(game:GetService(""Workspace"").Pet[W].Interact.Single.CFrame) wait()
        end
    end)
end

local library = loadstring(game:HttpGet(('https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/wall%20v3')))()

local w = library:CreateWindow(""+1 Strong every sec"")

local b = w:CreateFolder(""Main"")

b:Button(""TP To The Game"",function() game:GetService(""TeleportService""):Teleport(11298617267) end)

b:Toggle(""Inf. Strength"",function(val)
getgenv().C = val
C()
end)

b:Toggle(""Inf. Rebirth"",function(val)
getgenv().R = val
R()
end)

b:Toggle(""Auto Hatch"",function(val)
getgenv().H = val
H(W)
end)

b:Dropdown(""Choose An Egg"",{""World 1"",""World 2"",""World 3"",""World 4"",""World 5"",""World 6"",""World 7"",""Christmas""},true,function(val)
W = val
end)

b:Label(""Made by X_LuaF#0705"",{TextSize = 21; TextColor = Color3.fromRGB(255,255,255); BgColor = Color3.fromRGB(38, 38, 38);})

local w = library:CreateWindow(""LocalPlayer"")

local b = w:CreateFolder(""LP"")

b:DestroyGui()

b:Button(""Discord"",function() setclipboard(""workink.co/2GQ/LTD"") end)
b:Button(""Full Version"",function() loadstring(game:HttpGet(""https://pastebin.com/raw/GphZf9Xe"", true))() end)
b:Button(""Rejoin"",function() loadstring(game:HttpGet(""https://pastebin.com/raw/mM7JBG5h"", true))() end)
b:Button(""Reset"",function() loadstring(game:HttpGet(""https://pastebin.com/raw/EEY6SATj"", true))() end)

b:Box(""Speed"",""number"",function(val) S = val end)
b:Box(""Jump"",""number"",function(val) J = val end)
b:Box(""Hip Height"",""number"",function(val) H = val end)
b:Box(""Gravity"",""number"",function(val) G = val end)
 
b:Toggle(""Speed"",function(bool) getgenv().Speed = bool Speed(S) end)
b:Toggle(""Jump"",function(bool) getgenv().Jump = bool Jump(J) end)
b:Toggle(""Hip Height"",function(bool) getgenv().Hip = bool Hip(H) end)
b:Toggle(""Gravity"",function(bool) getgenv().Grav = bool Grav(G) end)
 
b:Slider(""FOV (Default is 70)"",{min = 0;max = 120;precise = true;},function(val) game.workspace.CurrentCamera.FieldOfView = val end)

function TPCFrame(Player_CFrame) if game.Players.LocalPlayer.Character:FindFirstChild(""HumanoidRootPart"") then game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Player_CFrame end end
function PHP(Player_HP) game.Players.LocalPlayer.Character.Humanoid.Health = Player_HP end

function Chat(Mes, Freq) spawn(function () while getgenv().Chat do local args = {[1] = Mes,[2] = ""All""} game:GetService(""ReplicatedStorage"").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(unpack(args)) wait(Freq) end end) end
function Speed(Nume) spawn(function () while getgenv().Speed do game:GetService(""Players"").LocalPlayer.Character.Humanoid.WalkSpeed = Nume if not getgenv().Speed then game:GetService(""Players"").LocalPlayer.Character.Humanoid.WalkSpeed = 16 end wait() end end) end
function Jump(Nume) spawn(function () while getgenv().Jump do game:GetService(""Players"").LocalPlayer.Character.Humanoid.JumpPower = Nume if not getgenv().Jump then game:GetService(""Players"").LocalPlayer.Character.Humanoid.JumpPower = 50 end wait() end end) end
function Hip(Nume) spawn(function () while getgenv().Hip do game:GetService(""Players"").LocalPlayer.Character.Humanoid.HipHeight = Nume if not getgenv().Hip then game:GetService(""Players"").LocalPlayer.Character.Humanoid.HipHeight = 0.1 end wait() end end) end
function Grav(Nume) spawn(function () while getgenv().Grav do game:GetService(""Workspace"").Gravity = Nume if not getgenv().Grav then game:GetService(""Workspace"").Gravity = 196.2 end wait() end end) end"
DLf2frNm,Untitled,Antonderman,Lua,Sunday 28th of May 2023 06:23:33 AM CDT,"--- Super Magic for certus quartz mining, don't mind it
 
local machineId = os.getComputerID()
os.setComputerLabel(""QuartzMiner-ID""..machineId)
 
print(""Super Quartz Miner for Turtles 10000 is up and running."")
 
while true do
  local successfulFront, dataFront = turtle.inspect()
  
  if successfulFront then
      if dataFront.name == ""elementalcraft:springaline_cluster"" then
        print(""quartz detected"")
        turtle.dig()
      end
  end
 
  local successfulUp, dataUp = turtle.inspectUp()
  
  if successfulUp then
      if dataUp.name == ""elementalcraft:springaline_cluster"" then
        print(""quartz detected"")
        turtle.digUp()
      end
  end
 
  local successfulDown, dataDown = turtle.inspectDown()
  
  if successfulDown then
      if dataDown.name == ""elementalcraft:springaline_cluster"" then
        print(""quartz detected"")
        turtle.digDown()
      end
  end
  
  os.sleep(1)
end"
yWBatt73,Untitled,35657,C++,Sunday 28th of May 2023 06:14:08 AM CDT,"
#define _CRT_SECURE_NO_WARNINGS

#include <iostream>
#include <string.h>

using namespace std;

struct contact {
	char name[100];
	char mobile_phone[20];
	char home_phone[20];
	char work_phone[20];
};

class phone_book {

public:

	phone_book() {
		store = new contact * [100];
		contacts_number = 0;
		max_contacts_number = 100;
	}

	phone_book(int max_number) {
		store = new contact * [max_number];
		contacts_number = 0;
		max_contacts_number = max_number;
	}

	phone_book(contact arr[], int arr_size) {
		store = new contact * [100];
		max_contacts_number = 100;
		for (int i = 0; i < arr_size; ++i) {
			AddContact(arr[i].name, arr[i].mobile_phone, arr[i].home_phone, arr[i].work_phone);
		}
	}

	void ShowAllContacts() {
		cout << ""The following contacts are available: "" << endl;
		if (contacts_number == 0) {
			cout << ""No contacts"";
		}
		for (int i = 0; i < contacts_number; ++i) {
			cout << '\""' << store[i]->name << ""\"", mobile_phone: "" << store[i]->mobile_phone << "", home_phone: "" << store[i]->home_phone << "", work_phone: "" << store[i]->work_phone << endl;
		}
		cout << endl;
	}

	void AddContact(const char name[], const char mobile_phone[], const char home_phone[], const char work_phone[]) { // –Ω–µ –∑–∞–±—ã–≤–∞—Ç—å —Å—Ç–∞–≤–∏—Ç—å const, –∏–Ω–∞—á–µ –Ω–µ —Å–∫–æ–º–ø–∏–ª–∏—Ä—É–µ—Ç—Å—è
		if (contacts_number == max_contacts_number) {
			cout << ""The contact cannot be added"" << endl;
			return;
		}
		store[contacts_number] = new contact{};
		strcpy(store[contacts_number]->name, name);
		strcpy(store[contacts_number]->mobile_phone, mobile_phone);
		strcpy(store[contacts_number]->home_phone, home_phone);
		strcpy(store[contacts_number]->work_phone, work_phone);
		contacts_number++;
	}

	void DelContact(const char name[]) {
		for (int i = 0; i < contacts_number; i++) {
			if (!strcmp(store[i]->name, name)) { // –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç 0 –µ—Å–ª–∏ —Å—Ç—Ä–æ–∫–∏ –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ, –ø–æ—ç—Ç–æ–º—É –∏—Å–ø–æ–ª—å–∑—É–µ–º ! (—á—Ç–æ–±—ã –≤–æ–∑–≤—Ä–∞—Ç –Ω—É–ª—è –æ–∑–Ω–∞—á–∞–ª ""–∏—Å—Ç–∏–Ω—É"")
				delete store[i];
				for (int j = i; j < contacts_number - 1; j++) {
					store[j] = store[j + 1];
				}
				store[contacts_number - 1] = nullptr;
				contacts_number--;
			}
		}
	}

	void FindContactName(const char name[]) {
		cout << ""Found according to your request: "" << endl;
		for (int i = 0; i < contacts_number; i++) {
			if (!strcmp(store[i]->name, name)) {
				cout << '\""' << store[i]->name << ""\"", mobile_phone: "" << store[i]->mobile_phone << "", home_phone: "" << store[i]->home_phone << "", work_phone: "" << store[i]->work_phone << endl;
			}
		}
		cout << endl;
	}

	~phone_book() {
		for (int i = 0; i < contacts_number; ++i) {
			delete store[i];
		}
		delete[] store;
	}

private:
	contact** store;
	int contacts_number;
	int max_contacts_number;

};


int main() { // –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞

	phone_book my_store; // –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é

	//phone_book my_store(50); // –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞ –¥–ª—è –æ–¥–Ω–æ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞

	//contact some_contacts[]{ {""Ivan"", ""+79111111111"", ""111111"", ""121212""}, {""Zhenya"", ""+79111111333"", ""111133"", ""121233""}}; // –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞ –¥–ª—è –¥–≤—É—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ (–∑–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–µ—Ä–≤—ã–µ –¥–≤–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–∞)

	//phone_book my_store(some_contacts, 2); // –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞ –¥–ª—è –¥–≤—É—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤

	my_store.AddContact(""Ivan"", ""+79111111111"", ""111111"", ""121212"");
	my_store.AddContact(""Zhenya"", ""+79111111333"", ""111133"", ""121233"");
	my_store.AddContact(""Galya"", ""+79115511333"", ""166133"", ""127733"");
	my_store.AddContact(""Olya"", ""+79115511333"", ""166133"", ""127733"");

	my_store.ShowAllContacts();

	my_store.DelContact(""Zhenya"");

	my_store.ShowAllContacts();

	my_store.AddContact(""Zhenya"", ""+79111111333"", ""111133"", ""121233"");

	my_store.FindContactName(""Galya"");

}
"
zukKq1nK,Untitled,Generic01,Bash,Sunday 28th of May 2023 06:11:40 AM CDT,"‚ûú  vayu-kernel git:(main) ‚úó make O=out ARCH=arm64 vayu_defconfig
make[1]: –≤—Ö–æ–¥ –≤ –∫–∞—Ç–∞–ª–æ–≥ ¬´/home/yaroslav/–î–æ–∫—É–º–µ–Ω—Ç—ã/vayu-kernel/out¬ª
  HOSTCC  scripts/basic/fixdep
  HOSTCC  scripts/basic/bin2c
  GEN     ./Makefile
  HOSTCC  scripts/kconfig/conf.o
  HOSTCC  scripts/kconfig/zconf.tab.o
  HOSTLD  scripts/kconfig/conf
#
# configuration written to .config
#
make[1]: –≤—ã—Ö–æ–¥ –∏–∑ –∫–∞—Ç–∞–ª–æ–≥–∞ ¬´/home/yaroslav/–î–æ–∫—É–º–µ–Ω—Ç—ã/vayu-kernel/out¬ª
‚ûú  vayu-kernel git:(main) ‚úó make -j$(nproc --all) O=out ARCH=arm64 CC=/home/yaroslav/–î–æ–∫—É–º–µ–Ω—Ç—ã/build-tools/clang/clang-r487747c/bin/clang CLANG_TRIPLE=/home/yaroslav/–î–æ–∫—É–º–µ–Ω—Ç—ã/build-tools/aarch64-linux-gnu/bin/aarch64-linux-gnu- CROSS_COMPILE=/home/yaroslav/–î–æ–∫—É–º–µ–Ω—Ç—ã/build-tools/aarch64-linux-android/bin/aarch64-linux-android-
make[1]: –≤—Ö–æ–¥ –≤ –∫–∞—Ç–∞–ª–æ–≥ ¬´/home/yaroslav/–î–æ–∫—É–º–µ–Ω—Ç—ã/vayu-kernel/out¬ª
  GEN     ./Makefile
scripts/kconfig/conf  --silentoldconfig Kconfig
  CHK     include/config/kernel.release
  GEN     ./Makefile
  CHK     include/generated/uapi/linux/version.h
  CHK     include/generated/utsrelease.h
  Using .. as source for kernel
  LDS     scripts/module-lto.lds
  HOSTCC  scripts/kallsyms
  HOSTCC  scripts/sortextable
  HOSTCC  scripts/asn1_compiler
  CC      scripts/mod/empty.o
  HOSTCC  scripts/mod/mk_elfconfig
  CC      scripts/mod/devicetable-offsets.s
  HOSTCC  scripts/dtc/dtc.o
  HOSTCC  scripts/dtc/flattree.o
  HOSTCC  scripts/dtc/fstree.o
  HOSTCC  scripts/selinux/mdp/mdp
  HOSTCC  scripts/selinux/genheaders/genheaders
  CHK     scripts/mod/devicetable-offsets.h
Assembler messages:
Error: unknown cpu `cortex-a76'
Error: unrecognized option -mcpu=cortex-a76
clang-17: error: assembler command failed with exit code 1 (use -v to see invocation)
make[3]: *** [../scripts/Makefile.build:365: scripts/mod/empty.o] Error 1
make[3]: *** –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏–π‚Ä¶
  HOSTCC  scripts/dtc/data.o
  HOSTCC  scripts/dtc/livetree.o
  HOSTCC  scripts/dtc/treesource.o
  HOSTCC  scripts/dtc/srcpos.o
  HOSTCC  scripts/dtc/checks.o
  HOSTCC  scripts/dtc/util.o
  HOSTCC  scripts/dtc/dtc-lexer.lex.o
  HOSTCC  scripts/dtc/dtc-parser.tab.o
make[2]: *** [../scripts/Makefile.build:678: scripts/mod] Error 2
make[2]: *** –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏–π‚Ä¶
  HOSTLD  scripts/dtc/dtc
make[1]: *** [/home/yaroslav/–î–æ–∫—É–º–µ–Ω—Ç—ã/vayu-kernel/Makefile:630: scripts] Error 2
make[1]: –≤—ã—Ö–æ–¥ –∏–∑ –∫–∞—Ç–∞–ª–æ–≥–∞ ¬´/home/yaroslav/–î–æ–∫—É–º–µ–Ω—Ç—ã/vayu-kernel/out¬ª
make: *** [Makefile:153: sub-make] Error 2"
yM8y9WR2,data586,TestGuy1,JSON,Sunday 28th of May 2023 06:00:05 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '68b0df806dac9256174ceeff762c06aa0e5f98e9179d8dcf0ee170e2f2f993e704e15ed2509b82aa5d5985920a0343e0c4d3dc052078138bb1c2e8f77d926adb32bc2e53820fd42ec63004073c665cecf84a0725a39a8c274dcb128ab0bfb7b16f812170565b7b33c3fa3eca98521ea593a20463391b8bbe2ebeda562a66d6df',
  otherdata: [
    'cab4196f93a1d8a1febf2cfa7d9c0d47',
    'ead5c551e473dfa6dc590c90fa993778',
    '4f7a6e97a633672619b759c21385b90d',
    '98bb535db8636dae23100a70b802c2f0',
    'f0cb32674a27b2f56434383da43946da',
    'c7803587345ff06c0b63e061fa18ccaa',
    'f3524415b829acb3834fa6f1382c142b',
    '949234af8c32df7ce04a706eb170b7ca'
  ]
}"
kKqFrbRY,07. Moving,myrdok123,Java,Sunday 28th of May 2023 05:30:14 AM CDT,"package L05_WhileLoop;

import java.util.Scanner;

public class P07_Moving {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);


        int width = Integer.parseInt(scanner.nextLine());
        int length = Integer.parseInt(scanner.nextLine());
        int height = Integer.parseInt(scanner.nextLine());

        //–∏–∑—á–∏—Å–ª—è–≤–∞–º–µ –∫–æ–ª–∫–æ –Ω–∏ –µ —Å–≤–æ–±–æ–¥–Ω–æ—Ç–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ -> width * length * height

        int availableSpace = width * length * height;

        //–ù–∞ —Å–ª–µ–¥–≤–∞—â–∏—Ç–µ —Ä–µ–¥–æ–≤–µ (–¥–æ –ø–æ–ª—É—á–∞–≤–∞–Ω–µ –Ω–∞ –∫–æ–º–∞–Ω–¥–∞ ""Done"") - –±—Ä–æ–π –∫–∞—à–æ–Ω–∏, –∫–æ–∏—Ç–æ —Å–µ –ø—Ä–µ–Ω–∞—Å—è—Ç
        String command = scanner.nextLine();

        //–ø—Ä–∞–≤–∏–º —Ü–∏–∫—ä–ª –¥–æ–∫–∞—Ç–æ –Ω–µ –ø–æ–ª—É—á–∏–º –∫–æ–º–∞–Ω–¥–∞ ""Done"" –∏–ª–∏ —Å–≤–æ–±–æ–¥–Ω–æ—Ç–æ –ø—Ä–æ—Å—Ç—Ä–∞—Å—Ç–≤–æ —Å—Ç–∞–Ω–µ <= 0

        while (!command.equals(""Done"")){

            //–ø–∞—Ä—Å–≤–∞–º–µ/–ø—Ä–µ–æ–±—Ä–∞–∑—É–≤–∞–º–µ command –∫—ä–º —Ü—è–ª–æ —á–∏—Å–ª–æ -> —Ç–µ–∫—É—â–∏—è—Ç –±—Ä–æ–π –∫–∞—à–æ–Ω–∏

            int currentBoxes = Integer.parseInt(command);

            //–∏–∑—á–∏—Å–ª—è–≤–∞–º–µ –∫–æ–ª–∫–æ —Å–≤–æ–±–æ–¥–Ω–æ –ø—Ä–æ—Å—Ç—Ä–∞—Å—Ç–≤–æ –Ω–∏ –µ –æ—Å—Ç–∞–Ω–∞–ª–æ
            availableSpace -= currentBoxes;

            // –ø—Ä–æ–≤–µ—Ä—è–≤–∞–º–µ –¥–∞–ª–∏ –∏–º–∞–º–µ —Å–≤–æ–±–æ–¥–Ω–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ
            if(availableSpace <= 0){

                System.out.printf(""No more free space! You need %d Cubic meters more."", Math.abs(availableSpace));
                break;
            }

            //–ø—Ä–æ—á–∏—Ç–∞–º–µ –æ—Ç –∫–æ–Ω–∑–æ–ª–∞—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ -> Done –∏–ª–∏ –±—Ä–æ–π –∫–∞—à–æ–Ω–∏
            command = scanner.nextLine();
        }



        //–ø—Ä–æ–≤–µ—Ä—è–≤–∞–º–µ –¥–∞–ª–∏ –∏–º–∞–º–µ —Å–≤–æ–±–æ–¥–Ω–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ
        if (availableSpace > 0){
            System.out.printf(""%d Cubic meters left."", availableSpace);
        }


    }
}
"
vdcvRLfG,06. Cake,myrdok123,Java,Sunday 28th of May 2023 05:29:17 AM CDT,"package L05_WhileLoop;

import java.util.Scanner;

public class P06_Cake {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);


        int width = Integer.parseInt(scanner.nextLine());
        int length = Integer.parseInt(scanner.nextLine());
        String command = scanner.nextLine();

        //–Ω–∞–º–∏—Ä–∞–º–µ –±—Ä–æ—è –ø–∞—Ä—á–µ—Ç–∞ –Ω–∞ —Ç–æ—Ä—Ç–∞—Ç–∞
        int countPieces = width * length;

        //while -> –¥–æ–∫–∞—Ç–æ –Ω–µ –ø–æ–ª—É—á–∏–º –∫–æ–º–∞–Ω–¥–∞ —Å—Ç–æ–ø –∏–ª–∏ –¥–æ–∫–∞—Ç–æ –Ω–µ —Å–≤—ä—Ä—à–∞—Ç –ø–∞—Ä—á–µ—Ç–∞—Ç–∞ -> –≥–æ—Å—Ç –≤–∑–µ–º–∞ n –ø–∞—Ä—á–µ—Ç–∞
        while (!command.equals(""STOP"")){

            //–ø—Ä–µ–æ–±—Ä–∞–∑—É–≤–∞–º–µ/–ø–∞—Ä—Å–≤–∞–º–µ –∫–æ–º–∞–Ω–¥–∞—Ç–∞ –∫—ä–º int -> –ø–æ–ª—É—á–∞–≤–∞–º–µ –±—Ä–æ—è –ø–∞—Ä—á–µ—Ç–∞, –∫–æ–∏—Ç–æ –≥–æ—Å—Ç–∏—Ç–µ –≤–∑–µ–º–∞—Ç
            int currentPieces = Integer.parseInt(command);

            //–∏–∑—á–∏—Å–ª—è–≤–∞–º–µ –∫–æ–ª–∫–æ –ø–∞—Ä—á–µ—Ç–∞ —Å–∞ –æ—Å—Ç–∞–Ω–∞–ª–∏ —Å–ª–µ–¥ –∫–∞—Ç–æ –Ω—è–∫–æ–π —Å–∏ –µ –≤–∑–µ–ª —Ç–æ—Ä—Ç–∞
            countPieces -= currentPieces;

            //–ø—Ä–æ–≤–µ—Ä—è–≤–∞–º–µ –¥–∞–ª–∏ –∏–º–∞–º–µ –æ—Å—Ç–∞–Ω–∞–ª–∞ —Ç–æ—Ä—Ç–∞
            if(countPieces <= 0){
                //–∞–∫–æ —Å—Ç–∏–≥–Ω–µ–º —Ç—É–∫ -> –Ω—è–º–∞–º–µ –ø–æ–≤–µ—á–µ —Ç–æ—Ä—Ç–∞
                //–ø—Ä–∏–Ω—Ç–∏—Ä–∞–º–µ
                System.out.printf(""No more cake left! You need %d pieces more."", Math.abs(countPieces));
                break;
            }

            //–ø—Ä–æ—á–∏—Ç–∞–º–µ –æ—Ç –∫–æ–Ω–∑–æ–ª–∞—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ -> STOP –∏–ª–∏ –±—Ä–æ–π –ø–∞—Ä—á–µ—Ç–∞

            command = scanner.nextLine();

        }

        //–ø—Ä–∞–≤–∏–º –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–ª–∏ –∏–º–∞–º–µ –æ—Å—Ç–∞–Ω–∞–ª–∏ –ø–∞—Ä—á–µ—Ç–∞ —Ç–æ—Ä—Ç–∞

        if(countPieces > 0){
            System.out.printf(""%d pieces are left."", countPieces );
        }


    }
}
"
YMgb8jYf,05. Coins - Using else{break;},myrdok123,Java,Sunday 28th of May 2023 05:28:29 AM CDT,"package L05_WhileLoop;

import java.util.Scanner;

public class P05_Coins {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);


        //–ø—Ä–æ—á–∏—Ç–∞–º–µ –≤—Ö–æ–¥–∞ -> —Å—É–º–∞, –∫–æ—è—Ç–æ —Ç—Ä—è–±–≤–∞ –¥–∞ –≤—ä—Ä–Ω–µ–º –∫–∞—Ç–æ —Ä–µ—Å—Ç–æ

        double sum = Double.parseDouble(scanner.nextLine());

        //–ø—Ä–µ–≤—Ä—ä—â–∞–º–µ —Å—É–º–∞—Ç–∞ –≤ —Å—Ç–æ—Ç–∏–Ω–∫–∏
        double totalSumCoins = sum * 100;

        // —Å—ä–∑–¥–∞–≤–∞–º–µ –ø—Ä–æ–º–µ–Ω–ª–∏–≤–∞, –≤ –∫–æ—è—Ç–æ —â–µ –±—Ä–æ–∏–º –∫–æ–ª–∫–æ –º–æ–Ω–µ—Ç–∏ —Å–º–µ –≤—ä—Ä–Ω–∞–ª–∏
        int countCoins = 0;

        while (totalSumCoins > 0){

            //–ø—Ä–æ–≤–µ—Ä—è–≤–∞–º–µ –∫–æ–ª–∫–æ –µ —Å—Ç–æ–π–Ω–æ—Å—Ç—Ç–∞ –Ω–∞ totalCoins -> –∞–∫–æ totalCoins > 200 -> totalCoins - 200;  –∞–∫–æ totalCoins > 100 -> totalCoins - 100

            if(totalSumCoins >= 200){
                countCoins++;
                totalSumCoins -= 200;
            } else if (totalSumCoins >= 100) {
                countCoins++;
                totalSumCoins -= 100;

            }else if (totalSumCoins >= 50) {
                countCoins++;
                totalSumCoins -= 50;

            }else if (totalSumCoins >= 20) {
                countCoins++;
                totalSumCoins -= 20;

            }else if (totalSumCoins >= 10) {
                countCoins++;
                totalSumCoins -= 10;

            }else if (totalSumCoins >= 5) {
                countCoins++;
                totalSumCoins -= 5;

            }else if (totalSumCoins >= 2) {
                countCoins++;
                totalSumCoins -= 2;

            }else if (totalSumCoins >= 1) {
                countCoins++;
                totalSumCoins -= 1;

            }else {
                break;
            }


        }

        System.out.println(countCoins);



    }
}
"
9Vqq7tdN,05. Coins - Using Math.floor,myrdok123,Java,Sunday 28th of May 2023 05:25:43 AM CDT,"package L05_WhileLoop;

import java.util.Scanner;

public class P05_Coins {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);


        //–ø—Ä–æ—á–∏—Ç–∞–º–µ –≤—Ö–æ–¥–∞ -> —Å—É–º–∞, –∫–æ—è—Ç–æ —Ç—Ä—è–±–≤–∞ –¥–∞ –≤—ä—Ä–Ω–µ–º –∫–∞—Ç–æ —Ä–µ—Å—Ç–æ

        double sum = Double.parseDouble(scanner.nextLine());

        //–ø—Ä–µ–≤—Ä—ä—â–∞–º–µ —Å—É–º–∞—Ç–∞ –≤ —Å—Ç–æ—Ç–∏–Ω–∫–∏
        double totalSumCoins = Math.floor(sum * 100);

        // —Å—ä–∑–¥–∞–≤–∞–º–µ –ø—Ä–æ–º–µ–Ω–ª–∏–≤–∞, –≤ –∫–æ—è—Ç–æ —â–µ –±—Ä–æ–∏–º –∫–æ–ª–∫–æ –º–æ–Ω–µ—Ç–∏ —Å–º–µ –≤—ä—Ä–Ω–∞–ª–∏
        int countCoins = 0;

        while (totalSumCoins > 0){

            //–ø—Ä–æ–≤–µ—Ä—è–≤–∞–º–µ –∫–æ–ª–∫–æ –µ —Å—Ç–æ–π–Ω–æ—Å—Ç—Ç–∞ –Ω–∞ totalCoins -> –∞–∫–æ totalCoins > 200 -> totalCoins - 200;  –∞–∫–æ totalCoins > 100 -> totalCoins - 100

            if(totalSumCoins >= 200){
                countCoins++;
                totalSumCoins -= 200;
            } else if (totalSumCoins >= 100) {
                countCoins++;
                totalSumCoins -= 100;

            }else if (totalSumCoins >= 50) {
                countCoins++;
                totalSumCoins -= 50;

            }else if (totalSumCoins >= 20) {
                countCoins++;
                totalSumCoins -= 20;

            }else if (totalSumCoins >= 10) {
                countCoins++;
                totalSumCoins -= 10;

            }else if (totalSumCoins >= 5) {
                countCoins++;
                totalSumCoins -= 5;

            }else if (totalSumCoins >= 2) {
                countCoins++;
                totalSumCoins -= 2;

            }else if (totalSumCoins >= 1) {
                countCoins++;
                totalSumCoins -= 1;

            }


        }

        System.out.println(countCoins);



    }
}
"
reudhvr0,04. Walking,myrdok123,Java,Sunday 28th of May 2023 05:24:13 AM CDT,"package L05_WhileLoop;

import java.util.Scanner;

public class P04_Walking {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        // —Å—ä–∑–¥–∞–≤–∞–º–µ –µ–¥–Ω–∞ String –ø—Ä–æ–º–µ–Ω–ª–∏–≤–∞ –∑–∞ –∫–æ–º–∞–Ω–¥–∞—Ç–∞, –∫–æ—è—Ç–æ —â–µ –ø–æ–ª—É—á–∞–≤–∞–º–µ -> ""Going Home"" –∏–ª–∏ —Å—Ç—ä–ø–∫–∏, –∫–æ–∏—Ç–æ —Å–∞ –Ω–∞–ø—Ä–∞–≤–µ–Ω–∏


        String command = scanner.nextLine();

        // –ø—Ä–∞–≤–∏–º –ø—Ä–æ–º–µ–Ω–ª–∏–≤–∞, –≤ –∫–æ—è—Ç–æ —Å—ä—Ö—Ä–∞–Ω—è–≤–∞–º–µ –æ–±—â–∏—è –±—Ä–æ–π —Å—Ç—ä–ø–∫–∏
        int sumSteps = 0;

        //—Ü–∏–∫—ä–ª –¥–æ–∫–∞—Ç–æ –Ω–µ –ø–æ–ª—É—á–∏–º –∫–æ–º–∞–Ω–¥–∞ ""Going Home"" –∏–ª–∏ —Å—Ç—ä–ø–∫–∏—Ç–µ —Å—Ç–∞–Ω–∞—Ç >= 10000

        while (!command.equals(""Going home"")){

            //—â–æ–º –Ω—è–º–∞–º–µ Going home -> –ø–∞—Ä—Å–≤–∞–º–µ command -> int, –∫–æ–µ—Ç–æ —Å–∞ —Ç–µ–∫—É—â–∏ —Å—Ç—ä–ø–∫–∏
            int currentSteps = Integer.parseInt(command);

            //—É–≤–µ–ª–∏—á–∞–≤–∞–º–µ —Å—É–º–∞—Ç–∞ –Ω–∞ —Å—Ç—ä–ø–∫–∏—Ç–µ

            sumSteps += currentSteps;

            // –ø—Ä–æ–≤–µ—Ä—è–≤–∞–º–µ –¥–∞–ª–∏ —Å—Ç—ä–ø–∫–∏—Ç–µ —Å–∞ –ø–æ–≤–µ—á–µ –∏–ª–∏ —Ä–∞–≤–Ω–∏ –Ω–∞ 10000
            if(sumSteps >= 10000){

                break;
            }

            //–ø—Ä–æ—á–∏—Ç–∞–º–µ —Å–ª–µ–¥–≤–∞—â–∏—è —Ä–µ–¥ -> Going home –∏–ª–∏ –±—Ä–æ–π —Å—Ç—ä–ø–∫–∏
            command = scanner.nextLine();

        }

        //–ø—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫–æ –ø–æ–ª—É—á–∏–º –∫–æ–º–∞–Ω–¥–∞ Going home -> –ø—Ä–æ—á–∏—Ç–∞–º–µ —Å—Ç—ä–ø–∫–∏—Ç–µ –¥–æ –≤–∫—ä—â–∏ -> –ø—Ä–∏–±–∞–≤—è–º–µ –≥–∏ –∫—ä–º –æ–±—â–∏—è –±—Ä–æ–π —Å—Ç—ä–ø–∫–∏
        if(command.equals(""Going home"")){

            int stepsToHome = Integer.parseInt(scanner.nextLine());
            sumSteps += stepsToHome;
        }

        //–ø—Ä–∞–≤–∏–º –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–ª–∏ —Å–º–µ –ø–æ—Å—Ç–∏–≥–Ω–∞–ª–∏ —Ü–µ–ª—Ç–∞ –æ—Ç 10000

        if (sumSteps >= 10000){
            System.out.println(""Goal reached! Good job!"");
            System.out.printf(""%d steps over the goal!"", sumSteps - 10000);
        }else {
            System.out.printf(""%d more steps to reach goal."", 10000 - sumSteps);
        }

    }
}
"
iPwdgzf6,03. Vacation,myrdok123,Java,Sunday 28th of May 2023 05:23:40 AM CDT,"package L05_WhileLoop;

import java.util.Scanner;

public class P03_Vacation {


    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);


        double neededMoney = Double.parseDouble(scanner.nextLine());
        double availableMoney = Double.parseDouble(scanner.nextLine());

        //while -> —á–µ—Ç–µ–º 2 —Ä–µ–¥–∞ -> 1 —Ä–µ–¥ ""spend"" –∏ ""save"", 2 —Ä–µ–¥ –°—É–º–∞—Ç–∞, –∫–æ—è—Ç–æ —â–µ —Å–ø–µ—Å—Ç–∏/–ø–æ—Ö–∞—Ä—á–∏

        //–ø—Ä–∞–≤–∏–º –±—Ä–æ—è—á –∑–∞ –¥–Ω–∏—Ç–µ, –≤ –∫–æ–∏—Ç–æ –∏–º–∞–º–µ –∫–æ–º–∞–Ω–¥–∞ ""spend""
        int countSpend = 0;
        //–ø—Ä–∞–≤–∏–º –±—Ä–æ—è—á –∑–∞ –æ–±—â–∏—è –±—Ä–æ–π –¥–Ω–∏
        int countDays = 0;

        while (availableMoney < neededMoney){

            //–ø—Ä–∞–≤–∏–º –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–ª–∏ –¥–Ω–∏—Ç–µ, –≤ –∫–æ–∏—Ç–æ —Ö–∞—Ä—á–∏ —Å–∞ —Å—Ç–∞–Ω–∞–ª–∏ 5
            if (countSpend == 5){
                break;
            }

            String command = scanner.nextLine();
            double currentSum = Double.parseDouble(scanner.nextLine());

            //—É–≤–µ–ª–∏—á–∞–≤–∞–º–µ –æ–±—â–∏—è –±—Ä–æ–π –¥–Ω–∏
            countDays++;

            //–ø—Ä–∞–≤–∏–º –ø—Ä–æ–≤–µ—Ä–∫–∞ if/switch –∑–∞ –∫–æ–º–∞–Ω–¥–∞—Ç–∞ –∏ –∫–∞–∫–≤–æ –¥–µ–π—Å—Ç–≤–∏–µ —Ç—Ä—è–±–≤–∞ –¥–∞ –∏–∑–≤—ä—Ä—à–∏–º
            if(command.equals(""spend"")){
                countSpend++;
                availableMoney -= currentSum;
            } else if (command.equals(""save"")) {
                availableMoney += currentSum;
                countSpend = 0;
            }


            //–ø—Ä–∞–≤–∏–º –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–ª–∏ –Ω–∞–ª–∏—á–Ω–∏—Ç–µ –ø–∞—Ä–∏ —Å–∞ —Å—Ç–∞–Ω–∞–ª–∏ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª–Ω–æ —á–∏—Å–ª–æ
            if(availableMoney < 0){
                availableMoney = 0;
            }

        }


        //–ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–ª–∏ –±—Ä–æ—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª–Ω–∏ –¥–Ω–∏, –≤ –∫–æ–∏—Ç–æ —Ö–∞—Ä—á–∏ –µ == 5

        if(countSpend == 5){
            System.out.println(""You can't save the money."");
            System.out.println(countDays);
        }else {
            System.out.printf(""You saved the money for %d days."", countDays);
        }

    }
}
"
RNvfTXBr,TycoonWall,MaxiKaz,Lua,Sunday 28th of May 2023 05:16:58 AM CDT,"local przyciski = script.Parent.Przyciski
local zakupy = script.Parent.Zakupy

local magazyn = {}

local DSS = game:GetService(""DataStoreService"")
local Bank = DSS:GetDataStore(""Kasa"")

local podstawowe = script.Parent.Podstawowe
local kierownik = script.Kierownik
local drzwi = podstawowe.Drzwi

local function ukryjPrzycisk(przycisk)
	przycisk.CanTouch = false
	przycisk.Transparency = 1
	przycisk.Tablica.Enabled = false
end

local function odkryjPrzycisk(przycisk)
	przycisk.CanTouch = true
	przycisk.Transparency = 0
	przycisk.Tablica.Enabled = true
end

local function nowyPrzycisk(przycisk)
	local zakup
	local nazwa = przycisk.Name

	if zakupy:FindFirstChild(nazwa) then
		zakup = zakupy[nazwa]
		magazyn[nazwa] = zakup:Clone()
		zakup:Destroy()
	else
		warn(""Brakuje zakupu: "" .. nazwa)
	end

	if not (nazwa == ""1"") then
		ukryjPrzycisk(przycisk)
	end

	przycisk.Touched:Connect(function(hit)
		local player = game.Players:FindFirstChild(hit.Parent.Name)


		if player and kierownik.Value == player and game.ServerStorage[player.Name].Kasa.Value >= przycisk.Cena.Value then          

			game.ServerStorage[player.Name].Kasa.Value -= przycisk.Cena.Value

			local zakup = magazyn[nazwa]

			if zakup then
				zakup.Parent = zakupy
			end

			for i, element in pairs(przycisk:GetChildren()) do
				if element.Name == ""Kolejny"" then

					local przyciskDoOdkrycia = przyciski:FindFirstChild(element.Value)

					if przyciskDoOdkrycia then
						odkryjPrzycisk(przyciskDoOdkrycia)
					else
						warn(""Brakuje przycisku: "" .. element.Value)
					end

				end
			end

			przycisk:Destroy()

		end
	end)
end

for i, przycisk in pairs(przyciski:GetChildren()) do
	nowyPrzycisk(przycisk)
end

-- game.Players.PlayerAdded:Connect(function(gracz)
local function nowyTycoon(gracz)

	local kasa = Bank:GetAsync(gracz.UserId) or 0

	local tablicaNaSerwerze = Instance.new(""Folder"", game.ServerStorage)
	tablicaNaSerwerze.Name = gracz.Name

	local kasaNaSerwerze = Instance.new(""NumberValue"", tablicaNaSerwerze)
	kasaNaSerwerze.Name = ""Kasa""
	kasaNaSerwerze.Value = kasa

	local tablicaLokalnie = Instance.new(""Folder"", gracz)
	tablicaLokalnie.Name = ""leaderstats""

	local kasaLokalnie = Instance.new(""NumberValue"", tablicaLokalnie)
	kasaLokalnie.Name = ""Kasa""
	kasaLokalnie.Value = kasa

	--  for i, przycisk in pairs(przyciski:GetChildren()) do -- usuwamy lub komentujemy
	--      nowyPrzycisk(przycisk) -- usuwamy lub komentujemy
	--  end -- usuwamy lub komentujemy

	--  gracz:LoadCharacter()  -- usuwamy lub komentujemy

	kasaNaSerwerze.Changed:Connect(function(liczba)
		kasaLokalnie.Value = liczba
	end)

	script.Parent.Podstawowe.Zbieracz.Touched:Connect(function(obiekt)
		if obiekt and obiekt:FindFirstChild(""Kasa"") then
			script.Skarbiec.Value += obiekt.Kasa.Value
			obiekt:Destroy()
		end
	end)

	script.Parent.Podstawowe.Bank.Touched:Connect(function(obiekt)
		if obiekt.Parent == gracz.Character then
			kasaNaSerwerze.Value += script.Skarbiec.Value
			script.Skarbiec.Value = 0
		end
	end)

	while true do
		Bank:SetAsync(gracz.UserId, kasaNaSerwerze.Value)
		print(""Kasa zapisana!"")
		wait(10)
	end
end
-- ) usuwamy na ko≈Ñcu nawias

drzwi.Touched:Connect(function(part)

	if part.Parent:FindFirstChild(""Humanoid"") and kierownik.Value == nil then

		local gracz = game.Players:GetPlayerFromCharacter(part.Parent)

		local posiada = false

		for i, element in pairs(game.Workspace:GetDescendants()) do
			if element.Name == ""System"" then
				if element.Kierownik.Value == gracz then
					posiada = true
					print(""Posiada"")
				end
			end
		end

		if not posiada then
			kierownik.Value = game.Players:GetPlayerFromCharacter(part.Parent)  
			nowyTycoon(gracz)
		end
	end
end)"
6eY0qtaz,Untitled,Caesar9988,MySQL,Sunday 28th of May 2023 03:59:06 AM CDT,"SELECT p.`name` AS 'project name',
        COUNT(ep.`employee_id`) AS 'count'
FROM `employees` AS e
	JOIN `employees_projects` AS ep ON e.`employee_id` = ep.`employee_id`
	JOIN `projects` AS p ON p.`project_id` = ep.`project_id`
GROUP BY ep.`project_id`;

SELECT e.`employee_id`,
	   CONCAT(e.`first_name`,' ', e.`last_name`) AS 'employee name',
       m.`employee_id`,
       CONCAT(m.`first_name`,' ', m.`last_name`) AS 'manager name'
FROM `employees` AS e
	JOIN `employees` AS m ON e.`manager_id` = m.`employee_id`;"
Q507BQU7,Exercise 1.3,illiquid,Scheme,Sunday 28th of May 2023 03:51:39 AM CDT,"#lang sicp

;Exercise 1.3: Define a procedure that takes three numbers as arguments
;and returns the sum of the squares of the two larger numbers.

(define (square x) (* x x))
;sum of squares
(define (sumOfSquares a b) (+ (square a) (square b)))

(define (sumTwoLargestSquares op1 op2 op3)
  
  ;compare the three numbers and get the largest number
  (define (largestNumber x y z)
    (cond((and(> x y) (> x z)) x)
       ((and(> y x) (> y z)) y)
       ((and(> z x) (> z y)) z)))
  
  ;compare the three numbers and get the second largest number
  (define (secondLargestNumber x y z)
    (cond((and(> x y) (< x z)) x)
       ((and(> y x) (< y z)) y)
       ((and(> z x) (< z y)) z)))

  ;return the sum of the squares of the two
  (sumOfSquares largestNumber secondLargestNumber))

(sumTwoLargestSquares 1 2 3)"
U343LAkG,PL/SQL ÁªüËÆ°È¢ëÊ¨°Ë°®‰∏≠‰ΩçÊï∞,shinemic,PL/SQL,Sunday 28th of May 2023 03:50:31 AM CDT,"-- È¢ëÊ¨°ÁªüËÆ°Ë°®
CREATE TABLE T_SCORE (
    NUM INTEGER, -- Êï∞ÂÄº
    FRQ INTEGER  -- Âá∫Áé∞Ê¨°Êï∞
);

-- ËÆ°ÁÆóÈ¢ëÊ¨°ÁªüËÆ°Ë°®‰∏≠‰ΩçÊï∞ÁöÑÂáΩÊï∞
CREATE OR REPLACE FUNCTION F_MEDIAN (p_table_name IN VARCHAR2)
RETURN NUMBER
IS
  v_count NUMBER;
BEGIN
    WITH MED AS (
        SELECT NUM,
               FRQ,
               SUM(FRQ) OVER(ORDER BY NUM RANGE UNBOUNDED PRECEDING) FRQ_CUMSUM,
                    -- È¢ëÁéáÁ¥ØÂä†ÊªëÁ™ó
               SUM(FRQ) OVER() TOT_CNT,
                    -- Âõ∫ÂÆöÂÄºÔºåÊ†∑Êú¨ÊÄªÊï∞
               ROW_NUMBER() OVER(ORDER BY NUM) RN
                    -- ÊåâÊï∞ÂÄºÂ§ßÂ∞èËÆ°Êï∞Ôºå‰∏∫ÂêéÁª≠ËÆ°ÁÆó
        FROM t_score
    ),
    -- MED_FILTERÔºöÂàùÁ≠õ‰∏Ä‰∏ãÔºåÂà§Êñ≠‰∏≠‰ΩçÊï∞ËêΩÂú®Âì™‰∏™Âå∫Èó¥
    MED_FILTER AS (
        SELECT *
          FROM MED
         WHERE FRQ_CUMSUM >= FLOOR((TOT_CNT + 1) / 2)
    )
    --SELECT * FROM MED;
    SELECT CASE WHEN 2 * FRQ_CUMSUM > TOT_CNT THEN NUM
                    -- ÂåÖÂê´‰∏§ÁßçÊÉÖÂÜµÔºöÂ•áÊï∞Ê†∑Êú¨Êï∞‰ª•ÂèäËêΩÂú®Âå∫Èó¥ÂÜÖ
                ELSE (   SELECT (M1.NUM + M2.NUM) / 2 ""MEDIAN""
                           FROM MED M1
                      LEFT JOIN MED M2
                             ON M1.RN + 1 = M2.RN
                          WHERE M1.FRQ_CUMSUM = MED_FILTER.FRQ_CUMSUM
                     )
                    -- ËêΩÂú®Âå∫Èó¥‰πãÈó¥ÔºåÈúÄË¶ÅÂà∞ MED Ë°®ÊâæÂéüÂßãËÆ∞ÂΩï
            END AS ""MEDIAN"" INTO v_count
      FROM MED_FILTER
     WHERE FRQ_CUMSUM = (SELECT MIN(FRQ_CUMSUM) FROM MED_FILTER);
  -- ËøîÂõûÊü•ËØ¢Âà∞ÁöÑËÆ∞ÂΩïÊï∞
  RETURN v_count;
END;

-- Ê®°Êãü n ‰ªé 1 Âà∞ 2^30ÔºåËÆ°ÁÆó n / m_n
DECLARE
  i NUMBER := 1;
  m NUMBER;
BEGIN
  EXECUTE IMMEDIATE 'TRUNCATE TABLE NEWBIE.T_SCORE';
  WHILE i <= POWER(2, 30) LOOP
    INSERT INTO T_SCORE VALUES (i, i);
    IF BITAND(i, i - 1) = 0 THEN
        m := F_MEDIAN('T_SOCRE');
        -- ‰∏∫ÂÆûÊó∂ËæìÂá∫ÁªìÊûúÔºåËøôÈáåÂºÑ‰∫Ü‰∏™Â≠òÂÇ®ËøáÁ®ã
        TO_DBG_FILE('F_MEDIAN.log',
                    LPAD(i, 10) || ' => ' ||
                    RPAD(m, 10) || ' (' ||
                    TO_CHAR(i/m, 'FM999999999999999.000000000000000') || ')');
    END IF;
    i := i + 1;
  END LOOP;
END;

-- ÂÆûÊó∂ËæìÂá∫Êó•ÂøóÂà∞Êñá‰ª∂
CREATE OR REPLACE PROCEDURE TO_DBG_FILE(p_fname varchar2, p_log varchar2) AS
  l_file utl_file.file_type;
BEGIN
  -- ÈúÄÊèêÂâçÂª∫Â•Ω LOG_DIR Ëøô‰∏™ DIRECTORY
  l_file := utl_file.fopen('LOG_DIR', p_fname, 'A');
  utl_file.put_line(l_file, p_log);
  utl_file.fflush(l_file);
  utl_file.fclose(l_file);
END TO_DBG_FILE;

------------------- ÂÆûÈ™åÁªìÊûú-------------------
---         1 => 1          (1.000000000000000)
---         2 => 2          (1.000000000000000)
---         4 => 3          (1.333333333333333)
---         8 => 6          (1.333333333333333)
---        16 => 12         (1.333333333333333)
---        32 => 23         (1.391304347826087)
---        64 => 46         (1.391304347826087)
---       128 => 91         (1.406593406593407)
---       256 => 181        (1.414364640883978)
---       512 => 362        (1.414364640883978)
---      1024 => 724        (1.414364640883978)
---      2048 => 1449       (1.413388543823326)
---      4096 => 2897       (1.413876423886779)
---      8192 => 5793       (1.414120490246850)
---     16384 => 11586      (1.414120490246850)
---     32768 => 23171      (1.414181520003453)
---     65536 => 46341      (1.414212036857211)
---    131072 => 92682      (1.414212036857211)
---    262144 => 185364     (1.414212036857211)
---    524288 => 370728     (1.414212036857211)
---   1048576 => 741456     (1.414212036857211)
---   2097152 => 1482911    (1.414212990530113)
---   4194304 => 2965821    (1.414213467367046)
---   8388608 => 5931642    (1.414213467367046)
---  16777216 => 11863284   (1.414213467367046)
---  33554432 => 23726567   (1.414213526971685)
-----------------------------------------------
"
qBxtuyUY,database.js,lior_sliprider,JavaScript,Sunday 28th of May 2023 03:40:00 AM CDT,"let json_hofim032023_1 = {
  type: ""FeatureCollection"",
  name: ""hofim032023_1"",
  crs: { type: ""name"", properties: { name: ""urn:ogc:def:crs:OGC:1.3:CRS84"" } },
  features: [
    {
      type: ""Feature"",
      properties: {
        AZIMUTH: ""284"",
        MAHOZ: ""◊¶◊§◊ï◊ü"",
        OMEK: ""500"",
        LENGTH: ""465"",
        SEA: ""◊õ◊†◊®◊™"",
        MUTAR: ""◊ó◊ï◊£ ◊ê◊°◊ï◊® ◊ú◊®◊ó◊¶◊î"",
        HOF: ""◊û◊¶◊§◊ï◊ü ◊ú◊ó◊ï◊£ ◊í◊ï◊§◊®◊î"",
        CITY: null,
        beaches_safeguard: null,
        beaches_declared: null,
        beaches_reserved: null,
        beaches_fishing: null,
        beaches_free_parking: null,
        beaches_broadcast: null,
        beaches_wave_height: null,
        beaches_water_temp: null,
        beaches_wind_direction: null,
        beaches_extra: null,
        beaches_accessibility: null,
        beaches_rating: null,
      },
      geometry: {
        type: ""MultiPolygon"",
        coordinates: [
          [
            [
              [35.644323738240068, 32.81067366337647],
              [35.643097219769359, 32.806611377235079],
              [35.637924170986288, 32.807725125739481],
              [35.639150470603305, 32.811787463681085],
              [35.644323738240068, 32.81067366337647],
            ],
          ],
        ],
      },
    },
    {
      type: ""Feature"",
      properties: {
        AZIMUTH: ""280"",
        MAHOZ: ""◊¶◊§◊ï◊ü"",
        OMEK: ""500"",
        LENGTH: ""167"",
        SEA: ""◊õ◊†◊®◊™"",
        MUTAR: ""◊ó◊ï◊£ ◊ê◊°◊ï◊® ◊ú◊®◊ó◊¶◊î"",
        HOF: ""◊û◊ì◊®◊ï◊ù ◊ú◊ó◊ï◊£ ◊í◊ï◊§◊®◊î"",
        CITY: null,
        beaches_safeguard: null,
        beaches_declared: null,
        beaches_reserved: null,
        beaches_fishing: null,
        beaches_free_parking: null,
        beaches_broadcast: null,
        beaches_wave_height: null,
        beaches_water_temp: null,
        beaches_wind_direction: null,
        beaches_extra: null,
        beaches_accessibility: null,
        beaches_rating: null,
      }]"
EuKx8841,labirint2,Patrickmeme,C++,Sunday 28th of May 2023 03:39:15 AM CDT,"#include <fstream>
#include <queue>
using namespace std;

int grid[1001][1001],viz[1001][1001];
int dist[2][1001][1001];

int ml[]={1,0,-1,0};
int mc[]={0,1,0,-1};

ifstream cin(""labirint2.in"");
ofstream cout(""labirint2.out"");

int n,m;

void lee(int s1,int s2,int ind){
    int cntc,i,l,c,j;
    queue<pair<int,int>>mers;
    queue<int>cnt;
    cnt.push(0);
    mers.push({s1,s2});
    viz[s1][s2]=1;
    while(!mers.empty()){
        pair<int,int> poz=mers.front();
        cntc=cnt.front();
        mers.pop();
        cnt.pop();
        for(i=0;i<4;i++){
            l=poz.first+ml[i];
            c=poz.second+mc[i];
            if(l>0 && l<=n && c>0 && c<=m && viz[l][c]==0){
                viz[l][c]=1;
                dist[ind][l][c]=cntc+1;
                if(grid[l][c]==0){
                    cnt.push(cntc+1);
                    mers.push({l,c});
                }
            }
        }
    }
    for(i=0;i<=n;i++){
        for(j=0;j<=m;j++){
            viz[i][j]=0;
        }
    }
}

int main()
{
    int i,j;
    char cha;
    cin>>n>>m;
    for(i=1;i<=n;i++)
        for(j=1;j<=m;j++){
            cin>>cha;
            if(cha=='1')
                grid[i][j]=1;
        }

    lee(1,1,0);
    lee(n,m,1);
    for(i=1;i<=n;i++){
        for(j=1;j<=m;j++){
            if(grid[i][j]==1 && dist[0][i][j]>0 && dist[1][i][j]>0){
                if(dist[0][n][m]>dist[0][i][j]+dist[1][i][j]-1)
                    cout<<""1"";
                else
                    cout<<""0"";
            }else
                cout<<""0"";
        }
        cout<<""\n"";
    }
    return 0;
}
"
YeF3Zjvx,Dunking Simulator GUI Script,Honansik,Lua,Sunday 28th of May 2023 03:31:43 AM CDT,"if game.PlaceId == 7655745946 then
    loadstring(game:HttpGet(""https://raw.githubusercontent.com/Aidanman14/RiceHub/idk/DunkingSimulator""))()
    
    elseif game.PlaceId == 3177438863 then
        loadstring(game:HttpGet(""https://raw.githubusercontent.com/Aidanman14/RiceHub/idk/DragonBlox""))()       
 else
            warn(""Game not supported!"")
end"
wyVndw2i,Pet Simulator X Autofarm GUI Script,Honansik,Lua,Sunday 28th of May 2023 03:25:43 AM CDT,"loadstring(game:HttpGetAsync(""https://paste.ee/r/pY27e%22,true))()"
VB0JhKVT,Saber Simulator GUI Script,Honansik,Lua,Sunday 28th of May 2023 03:25:24 AM CDT,"loadstring(game:HttpGet(""https://raw.githubusercontent.com/TrixAde/Proxima-Hub/main/Main.lua""))()loadstring(game:HttpGet(""https://raw.githubusercontent.com/TrixAde/Proxima-Hub/main/Main.lua""))()"
0M1rXK3j,Find The Simpsons GUI Script,Honansik,Lua,Sunday 28th of May 2023 03:23:07 AM CDT,"loadstring(game:HttpGet(""https://raw.githubusercontent.com/WinterDinder/FindTheSimpsons/main/scriptmain"", true))()"
GLJjzSAE,ExtractData_Site_1.php,noam76,PHP,Sunday 28th of May 2023 03:04:36 AM CDT,"<?php
require '../vendor/autoload.php';

use GuzzleHttp\Client;
use PHPHtmlParser\Dom;
use PhpOffice\PhpSpreadsheet\IOFactory;
use PhpOffice\PhpSpreadsheet\Spreadsheet;

// Fetch the webpage content
$client = new Client();
$response = $client->get('https://www.duurzaamloket.nl/SolKey_X014/index.php?SchemeNo=0&Offset=1&SearchText=&PageCnt=500');
$content = (string) $response->getBody();

// Load content into a DOMDocument
$dom = new Dom();
$dom->load($content);

// Find all <td> elements with an ID attribute
$tdElements = $dom->find('td[id]');

// Create a new Excel spreadsheet
$spreadsheet = new Spreadsheet();
$sheet = $spreadsheet->getActiveSheet();

// Set the column headers
$sheet->setCellValue('A1', 'ID');
$sheet->setCellValue('B1', 'Data');

// Extract the data from each <td> element with an ID attribute and save to the Excel file
$rowIndex = 2;
$idStrings = array(); // Initialize the string table
foreach ($tdElements as $td) {
    $id = $td->getAttribute('id');
    $data = $td->text;
    // Save to file if the <td> element has an ID attribute
    if ($id !== null) {
        // Extract the number from the ID and save to the string table
        $idNumber = substr($id, 4);
        $idStrings[] = $idNumber;
        // Save to Excel file
        $sheet->setCellValue('A' . $rowIndex, $idNumber);
        $sheet->setCellValue('B' . $rowIndex, $data);
        $rowIndex++;
    }
}

// Save the Excel file
$writer = IOFactory::createWriter($spreadsheet, 'Xlsx');
$writer->save('output.xlsx');

// Print the string table
print_r($idStrings);
?>"
ZdLWGrYA,Untitled,Caesar9988,MySQL,Sunday 28th of May 2023 03:03:15 AM CDT,"# get first 5 employees who are manager in department

SELECT e.`employee_id`,
       CONCAT_WS(' ',`first_name`,`last_name`) AS 'full_name',
       d.`department_id`,
       d.`name` AS 'department_name'
FROM `employees` AS e
	 JOIN `departments` AS d ON e.`employee_id` = d.`manager_id`
ORDER BY e.`employee_id`
LIMIT 5; 
# 2
SELECT t.`town_id`,
       t.`name` AS 'town_name', 
       a.`address_text`
FROM `addresses` AS a 
JOIN `towns` AS t ON t.`town_id` = a.`town_id`
WHERE t.`name` IN ('San Francisco', 'Sofia', 'Carnation')
ORDER BY t.`town_id`, a.`address_id`;
#3
# get information about employee's departments who don't have manager
SELECT 
    `employee_id`,
    `first_name`,
    `last_name`,
    d.`name`,
    `salary`
FROM `employees` AS e
JOIN `departments` AS d ON e.`department_id` = d.`department_id`
WHERE e.`manager_id` IS NULL;

#4
SELECT COUNT(`employee_id`) AS 'count'
FROM `employees`
WHERE salary > (
	SELECT AVG(`salary`) FROM `employees`
);"
y4XrVGDd,startup,MinecraftGoogle,Lua,Sunday 28th of May 2023 02:42:43 AM CDT,"--[[This is a fix of the original version (https://pastebin.com/knPtJCjb). Thanks to https://pastebin.com/dyre9saS and https://pastebin.com/gyMNUyRb for providing a fix to the clock while I was distracted from this project. I've remade the getTime function to make it work with Timezones again]] 
local mon = peripheral.find(""monitor"")
local core = peripheral.find(""draconic_rf_storage"")
local tier = 0
local colorShield = colors.white
local colorCore = colors.white
local input, output = peripheral.find(""flux_gate"")
local limitTransfer = true
local currentControls = ""main""
local page = 1
local putLimit = """"
local version = ""1.0""

if fs.exists(""logs.cfg"") then
else
	file = io.open(""logs.cfg"", ""w"")
	file:write("""")
	file:close()
end

if fs.exists(""config.cfg"") then
else
	file = io.open(""config.cfg"", ""w"")
	file:write(""Timezone: 0"")
	file:close()
end

mon.setTextScale(1)

local function fileWrite(path, text)
	local file = io.open(path, ""w"")
	file:write(text)
	file:close()
end

local function fileWriteFromTable(path, t)
	local text = """"
	for _, line in pairs(t) do
		text = text..line..""\n""
	end
	fileWrite(path, text)
end

local function fileGetTable(path)
	if fs.exists(path) then
		local file = io.open(path, ""r"")
		local lines = {}
		local i = 1
		local line = file:read(""*l"")
		while line ~= nil do
			lines[i] = line
			line = file:read(""*l"")
			i = i +1
		end
		file:close()
		return lines
	end
	return {}
end

local function fileReplaceLine(path, n, text)
	local lines = fileGetTable(path)
	lines[n] = text
	fileWriteFromTable(path, lines)
end

local function fileAppend(path, text)
	local file = io.open(path, ""a"")
	file:write(text..""\n"")
	file:close()
end

local function fileGetLength(path)
	local file = io.open(path, ""r"")
	local i = 0
	while file:read(""*l"") ~= nil do
		i = i +1
	end
	file:close()
	return i
end

local function fileGetLines(path, startN, endN)
	local lines = fileGetTable(path)
	local linesOut = {}
	local x = 1
	for i = startN, endN, 1 do
		linesOut[x] = lines[i]
		x = x + 1
	end
	return linesOut	
end

local function editConfigFile(path,line,text)
	fileReplaceLine(path,line,text)
end

local function detectInOutput()
	input, output = peripheral.find(""flux_gate"")
	--print(input)
	--print(output)
	if core.getTransferPerTick() ~= 0 then
		if core.getTransferPerTick() < 0 then
			output.setSignalLowFlow(0)
			sleep(2)
			if core.getTransferPerTick() >= 0 then
				--keep it
			else
				output, input = peripheral.find(""flux_gate"")
			end
			output.setSignalLowFlow(2147483647)
			input.setSignalLowFlow(2147483647)
		elseif core.getTransferPerTick() > 0 then
			input.setSignalLowFlow(0)
			sleep(2)
			if core.getTransferPerTick() <= 0 then
				--keep it
			else
				output, input = peripheral.find(""flux_gate"")
			end
			output.setSignalLowFlow(2147483647)
			input.setSignalLowFlow(2147483647)
		end
	end	
end

if peripheral.find(""flux_gate"") == nil then
	limitTransfer = false
else 
	limitTransfer = true
	detectInOutput()
end

local function makeNumber2Digits(number)
    strNumber = tostring(number)
    if string.len(strNumber) == 1 then
        return ""0"" .. strNumber
    else
        return string.sub(strNumber, string.len(strNumber) - 2)
    end
end

local function getLogs(path, xPos, yPos)
	local Logs = fileGetLines(path, fileGetLength(path)-5, fileGetLength(path))
	for i = 1, 6, 1 do
		mon.setCursorPos(xPos+2,yPos+1+i)
		mon.write(Logs[i])
	end
end

local function addLog(path, time, text)
	fileAppend(path, ""[""..time..""]"")
	fileAppend(path, text)
end

local function round(num, idp)
	local mult = 10^(idp or 0)
	return math.floor(num * mult + 0.5) / mult
end

local function convertRF(rf)
	rfString = """"
	if rf < 1000 then
		rfString = tostring(rf)
	elseif rf < 1000000 then
		rfString = tostring(round((rf/1000),1))..""k""
	elseif rf < 1000000000 then
		rfString = tostring(round((rf/1000000),1))..""M""
	elseif rf < 1000000000000 then
		rfString = tostring(round((rf/1000000000),1))..""G""
	elseif rf < 1000000000000000 then
		rfString = tostring(round((rf/1000000000000),1))..""T""
	elseif rf < 1000000000000000000 then
		rfString = tostring(round((rf/1000000000000000),1))..""P""
	elseif rf < 1000000000000000000000 then
		rfString = tostring(round((rf/1000000000000000000),1))..""E""
	end
	return(rfString..""RF"")
end

local function drawL1(xPos, yPos)
	mon.setCursorPos(xPos, yPos)
	mon.setBackgroundColor(colorCore)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+1)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+2)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+3)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+4)
	mon.setBackgroundColor(colorShield)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+5)
	mon.setBackgroundColor(colorCore)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+6)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+7)
	mon.setBackgroundColor(colorShield)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+8)
	mon.setBackgroundColor(colorCore)
	mon.write("" "")
end

local function drawL2(xPos, yPos)
	mon.setCursorPos(xPos, yPos)
	mon.setBackgroundColor(colorCore)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+1)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+2)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+3)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+4)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+5)
	mon.setBackgroundColor(colorShield)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+6)
	mon.setBackgroundColor(colorCore)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+7)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+8)
	mon.write("" "")
end

local function drawL3(xPos, yPos)
	mon.setCursorPos(xPos, yPos)
	mon.setBackgroundColor(colorCore)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+1)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+2)
	mon.setBackgroundColor(colorShield)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+3)
	mon.setBackgroundColor(colorCore)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+4)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+5)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+6)
	mon.setBackgroundColor(colorShield)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+7)
	mon.setBackgroundColor(colorCore)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+8)
	mon.write("" "")
end

local function drawL4(xPos, yPos)
	mon.setCursorPos(xPos, yPos)
	mon.setBackgroundColor(colorCore)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+1)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+2)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+3)
	mon.setBackgroundColor(colorShield)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+4)
	mon.setBackgroundColor(colorCore)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+5)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+6)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+7)
	mon.setBackgroundColor(colorShield)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+8)
	mon.setBackgroundColor(colorCore)
	mon.write("" "")
end

local function drawL5(xPos, yPos)
	mon.setCursorPos(xPos, yPos)
	mon.setBackgroundColor(colorShield)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+1)
	mon.setBackgroundColor(colorCore)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+2)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+3)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+4)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+5)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+6)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+7)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+8)
	mon.write("" "")
end

local function drawL6(xPos, yPos)
	mon.setCursorPos(xPos, yPos)
	mon.setBackgroundColor(colorCore)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+1)
	mon.setBackgroundColor(colorShield)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+2)
	mon.setBackgroundColor(colorCore)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+3)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+4)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+5)
	mon.setBackgroundColor(colorShield)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+6)
	mon.setBackgroundColor(colorCore)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+7)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+8)
	mon.write("" "")
end

local function drawL7(xPos, yPos)
	mon.setCursorPos(xPos, yPos)
	mon.setBackgroundColor(colorCore)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+1)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+2)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+3)
	mon.setBackgroundColor(colorShield)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+4)
	mon.setBackgroundColor(colorCore)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+5)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+6)
	mon.setBackgroundColor(colorShield)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+7)
	mon.setBackgroundColor(colorCore)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+8)
	mon.setBackgroundColor(colorShield)
	mon.write("" "")
end

local function drawL8(xPos, yPos)
	mon.setCursorPos(xPos, yPos)
	mon.setBackgroundColor(colorCore)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+1)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+2)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+3)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+4)
	mon.setBackgroundColor(colorShield)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+5)
	mon.setBackgroundColor(colorCore)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+6)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+7)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+8)
	mon.write("" "")
end

local function drawL9(xPos, yPos)
	mon.setCursorPos(xPos, yPos)
	mon.setBackgroundColor(colorCore)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+1)
	mon.setBackgroundColor(colorShield)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+2)
	mon.setBackgroundColor(colorCore)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+3)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+4)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+5)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+6)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+7)
	mon.setBackgroundColor(colorShield)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+8)
	mon.setBackgroundColor(colorCore)
	mon.write("" "")
end

local function drawL10(xPos, yPos)
	mon.setCursorPos(xPos, yPos)
	mon.setBackgroundColor(colorCore)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+1)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+2)
	mon.setBackgroundColor(colorShield)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+3)
	mon.setBackgroundColor(colorCore)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+4)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+5)
	mon.setBackgroundColor(colorShield)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+6)
	mon.setBackgroundColor(colorCore)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+7)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+8)
	mon.setBackgroundColor(colorShield)
	mon.write("" "")
end

local function drawL11(xPos, yPos)
	mon.setCursorPos(xPos, yPos)
	mon.setBackgroundColor(colorCore)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+1)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+2)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+3)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+4)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+5)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+6)
	mon.setBackgroundColor(colorShield)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+7)
	mon.setBackgroundColor(colorCore)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+8)
	mon.write("" "")
end

local function drawL12(xPos, yPos)
	mon.setCursorPos(xPos, yPos)
	mon.setBackgroundColor(colorShield)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+1)
	mon.setBackgroundColor(colorCore)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+2)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+3)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+4)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+5)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+6)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+7)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+8)
	mon.write("" "")
end

local function drawL13(xPos, yPos)
	mon.setCursorPos(xPos, yPos)
	mon.setBackgroundColor(colorCore)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+1)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+2)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+3)
	mon.setBackgroundColor(colorShield)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+4)
	mon.setBackgroundColor(colorCore)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+5)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+6)
	mon.setBackgroundColor(colorShield)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+7)
	mon.setBackgroundColor(colorCore)
	mon.write("" "")
	mon.setCursorPos(xPos, yPos+8)
	mon.write("" "")
end

local function drawBox(xMin, xMax, yMin, yMax, title)
	mon.setBackgroundColor(colors.gray)
	for xPos = xMin, xMax, 1 do
		mon.setCursorPos(xPos, yMin)
		mon.write("" "")
	end
	for yPos = yMin, yMax, 1 do
		mon.setCursorPos(xMin, yPos)
		mon.write("" "")
		mon.setCursorPos(xMax, yPos)
		mon.write("" "")
	end
	for xPos = xMin, xMax, 1 do
		mon.setCursorPos(xPos, yMax)
		mon.write("" "")
	end
	mon.setCursorPos(xMin+2, yMin)
	mon.setBackgroundColor(colors.black)
	mon.write("" "")
	mon.write(title)
	mon.write("" "")
end	

local function drawButton(xMin, xMax, yMin, yMax, text1, text2, bcolor)
    mon.setBackgroundColor(bcolor)
    for yPos = yMin, yMax, 1 do
        for xPos = xMin, xMax, 1 do
            mon.setCursorPos(xPos, yPos)
            mon.write("" "")
        end
    end
    mon.setCursorPos(math.floor((((xMax+xMin)/2)+0.5)-string.len(text1)/2),math.floor(((yMax+yMin)/2)))
    mon.write(text1)
    if text2 == nil then
    else
        mon.setCursorPos(math.floor((((xMax+xMin)/2)+0.5)-string.len(text2)/2),math.floor(((yMax+yMin)/2)+0.5))
        mon.write(text2)
    end
    mon.setBackgroundColor(colors.black)
end

local function drawClear(xMin, xMax, yMin, yMax)
mon.setBackgroundColor(colors.black)
	for yPos = yMin, yMax, 1 do
		for xPos = xMin, xMax, 1 do
			mon.setCursorPos(xPos, yPos)
			mon.write("" "")
		end
	end
end

local function drawNumpad(xPos ,yPos)
	mon.setCursorPos(xPos+2,yPos+4)
	mon.setBackgroundColor(colors.lightGray)
	mon.write("" 1 "")
	mon.setBackgroundColor(colors.gray)
	mon.write("" "")
	mon.setCursorPos(xPos+6,yPos+4)
	mon.setBackgroundColor(colors.lightGray)
	mon.write("" 2 "")
	mon.setBackgroundColor(colors.gray)
	mon.write("" "")
	mon.setCursorPos(xPos+10,yPos+4)
	mon.setBackgroundColor(colors.lightGray)
	mon.write("" 3 "")
	mon.setCursorPos(xPos+2,yPos+5)
	mon.setBackgroundColor(colors.lightGray)
	mon.write("" 4 "")
	mon.setBackgroundColor(colors.gray)
	mon.write("" "")
	mon.setCursorPos(xPos+6,yPos+5)
	mon.setBackgroundColor(colors.lightGray)
	mon.write("" 5 "")
	mon.setBackgroundColor(colors.gray)
	mon.write("" "")
	mon.setCursorPos(xPos+10,yPos+5)
	mon.setBackgroundColor(colors.lightGray)
	mon.write("" 6 "")
	mon.setCursorPos(xPos+2,yPos+6)
	mon.setBackgroundColor(colors.lightGray)
	mon.write("" 7 "")
	mon.setBackgroundColor(colors.gray)
	mon.write("" "")
	mon.setCursorPos(xPos+6,yPos+6)
	mon.setBackgroundColor(colors.lightGray)
	mon.write("" 8 "")
	mon.setBackgroundColor(colors.gray)
	mon.write("" "")
	mon.setCursorPos(xPos+10,yPos+6)
	mon.setBackgroundColor(colors.lightGray)
	mon.write("" 9 "")
	mon.setCursorPos(xPos+2,yPos+7)
	mon.setBackgroundColor(colors.red)
	mon.write("" < "")
	mon.setBackgroundColor(colors.gray)
	mon.write("" "")
	mon.setCursorPos(xPos+6,yPos+7)
	mon.setBackgroundColor(colors.lightGray)
	mon.write("" 0 "")
	mon.setBackgroundColor(colors.gray)
	mon.write("" "")
	mon.setCursorPos(xPos+10,yPos+7)
	mon.setBackgroundColor(colors.red)
	mon.write("" X "")
	mon.setCursorPos(xPos+16,yPos+5)
	mon.setBackgroundColor(colors.lime)
	mon.write("" Apply"")
	mon.setCursorPos(xPos+16,yPos+7)
	mon.setBackgroundColor(colors.red)
	mon.write(""Cancel"")
	mon.setBackgroundColor(colors.black)
end	
local function drawControls(xPos, yPos)
	if currentControls == ""main"" then
		--drawClear(xPos+1,xPos+22,yPos+1,yPos+8)
		if limitTransfer == false then
			drawButton(xPos+2,xPos+9,yPos+2,yPos+3,""Edit"",""InputMax"",colors.gray)
			drawButton(xPos+13,xPos+21,yPos+2,yPos+3,""Edit"",""OutputMax"",colors.gray)
		else
			drawButton(xPos+2,xPos+9,yPos+2,yPos+3,""Edit"",""InputMax"",colors.lime)
			drawButton(xPos+13,xPos+21,yPos+2,yPos+3,""Edit"",""OutputMax"",colors.red)
		end
		drawButton(xPos+2,xPos+9,yPos+6,yPos+7,""Edit"",""Config"",colorCore)
		drawButton(xPos+13,xPos+21,yPos+6,yPos+7,""No Use"",""Yet"",colors.gray)
	elseif currentControls == ""editInput"" or currentControls == ""editOutput"" then
		--drawClear(xPos+1,xPos+22,yPos+1,yPos+8)
		mon.setCursorPos(xPos+2,yPos+2)
		if currentControls == ""editInput"" then
			mon.write(""Edit Max Input Rate"")
		else
			mon.write(""Edit Max Output Rate"")
		end
		mon.setCursorPos(xPos+2,yPos+3)
		mon.setBackgroundColor(colors.gray)
		mon.write(""___________"")
		if string.len(putLimit) >= 11 then
				putLimit = string.sub(putLimit,string.len(putLimit)-10)
		end
		if putLimit ~= """" then
			if tonumber(putLimit) <= 2147483647 then
				mon.setCursorPos(xPos+13-string.len(putLimit),yPos+3)
				mon.write(putLimit)
				putLimitNum = tonumber(putLimit)
				mon.setBackgroundColor(colors.black)
				fix = 0
				if putLimitNum < 1000 then
					if string.len(putLimit) <= 3 then
						mon.setCursorPos(xPos+22-string.len(putLimit)-2,yPos+3)
						mon.write(putLimit)
					else
						mon.setCursorPos(xPos+22-4-2,yPos+3)
						mon.write(string.sub(putLimit,string.len(putLimit)-2))
					end
				elseif putLimitNum < 1000000 then
						if (round((putLimitNum/1000),1)*10)/(round((putLimitNum/1000),0)) == 10 then
							fix = 2
						end
					mon.setCursorPos(xPos+22-string.len(tostring(round((putLimitNum/1000),1)))-3-fix,yPos+3)
					mon.write(round((putLimitNum/1000),1))
					mon.write(""k"")
				elseif putLimitNum < 1000000000 then
						--if putLimitNum == 1000000*i or putLimitNum == 10000000*i or putLimitNum == 100000000*i then
						if (round((putLimitNum/1000000),1)*10)/(round((putLimitNum/1000000),0)) == 10 then
							fix = 2
						end	
					mon.setCursorPos(xPos+22-string.len(tostring(round((putLimitNum/1000000),1)))-3-fix,yPos+3)
					mon.write(round((putLimitNum/1000000),1))
					mon.write(""M"")
				elseif putLimitNum < 1000000000000 then
						if (round((putLimitNum/1000000000),1)*10)/(round((putLimitNum/1000000000),0)) == 10 then
							fix = 2
						end	
					mon.setCursorPos(xPos+22-string.len(tostring(round((putLimitNum/1000000000),1)))-3-fix,yPos+3)
					mon.write(round((putLimitNum/1000000000),1))
					mon.write(""G"")
				end
				mon.write(""RF"")
			else
				putLimit = ""2147483647""
				mon.setCursorPos(xPos+13-string.len(putLimit),yPos+3)
				mon.write(putLimit)
				mon.setCursorPos(xPos+22-6,yPos+3)
				mon.setBackgroundColor(colors.black)
				mon.write(""2.1GRF"")
				mon.setCursorPos(xPos+22-6,yPos+4)
				mon.write(""(max)"")
				
			end
			
		end
		drawNumpad(xPos, yPos)
	elseif currentControls == ""editOutput"" then
	elseif currentControls == ""editConfig"" then
		mon.setCursorPos(xPos+2,yPos+2)
		mon.write(""Edit Config"")
		if limitTransfer == true then
			drawButton(xPos+2,xPos+10,yPos+3,yPos+4,""Detect"",""Flux_Gate"",colorCore)
		else
			drawButton(xPos+2,xPos+10,yPos+3,yPos+4,""Detect"",""Flux_Gate"",colors.gray)
		end
		drawButton(xPos+14,xPos+21,yPos+3,yPos+4,""Edit"",""Timezone"",colorCore)
		mon.setCursorPos(xPos+16,yPos+7)
		mon.setBackgroundColor(colors.red)
		mon.write(""Cancel"")
		mon.setCursorPos(xPos+2,yPos+7)
		mon.setBackgroundColor(colors.gray)
		mon.write(""Prev"")
		mon.setCursorPos(xPos+7,yPos+7)
		mon.write(""Next"")
		mon.setBackgroundColor(colors.black)
	elseif currentControls == ""editTimezone"" then
		mon.setCursorPos(xPos+2,yPos+2)
		mon.write(""Type Differenz"")
		mon.setCursorPos(xPos+5,yPos+4)
		mon.setBackgroundColor(colors.red)
		mon.write("" -1 "")
		mon.setBackgroundColor(colors.lightGray)
		mon.write("" "")
		mon.setBackgroundColor(colors.gray)
		mon.write(""   "")
		if timediff >= -12 and timediff <= 12 then
		elseif timediff < -12 then
			timediff = -12
		elseif timediff > 12 then
			timediff = 12
		end
		mon.setCursorPos(xPos+13-string.len(tostring(timediff)),yPos+4)
		mon.setBackgroundColor(colors.gray)
		mon.write(tostring(timediff))
		mon.setBackgroundColor(colors.lightGray)
		mon.write("" "")
		mon.setBackgroundColor(colors.lime)
		mon.write("" +1 "")
		mon.setCursorPos(xPos+9,yPos+7)
		mon.setBackgroundColor(colors.red)
		mon.write(""Cancel"")
		mon.setBackgroundColor(colors.black)
		mon.write("" "")
		mon.setBackgroundColor(colors.lime)
		mon.write("" Apply"")
		mon.setBackgroundColor(colors.black)
	end
end

local function drawDetails(xPos, yPos)
	energyStored = core.getEnergyStored()
	energyMax = core.getMaxEnergyStored()
	energyTransfer = core.getTransferPerTick()
	if limitTransfer == true then
		inputRate = input.getFlow()
		outputRate = output.getFlow()
	end
	mon.setCursorPos(xPos, yPos)
	if energyMax < 50000000 then
		tier = 1
	elseif energyMax < 300000000 then
		tier = 2
	elseif energyMax < 2000000000 then
		tier = 3 
	elseif energyMax < 10000000000 then
		tier = 4
	elseif energyMax < 50000000000 then
		tier = 5
	elseif energyMax < 400000000000 then
		tier = 6
	elseif energyMax < 3000000000000 then
		tier = 7
	else
		tier = 8
	end
	mon.write(""Tier: "")
	mon.write(tier)
	mon.setCursorPos(xPos+7, yPos)
	mon.write(""  "")
	mon.setCursorPos(xPos, yPos+1)
	mon.write(""Stored: "")
	if energyStored < 1000 then
		mon.write(energyStored)
	elseif energyStored < 1000000 then
		mon.write(round((energyStored/1000),1))
		mon.write(""k"")
	elseif energyStored < 1000000000 then
		mon.write(round((energyStored/1000000),1))
		mon.write(""M"")
	elseif energyStored < 1000000000000 then
		mon.write(round((energyStored/1000000000),1))
		mon.write(""G"")
	elseif energyStored < 1000000000000000 then
		mon.write(round((energyStored/1000000000000),1))
		mon.write(""T"")
	elseif energyStored < 1000000000000000000 then
		mon.write(round((energyStored/1000000000000000),1))
		mon.write(""P"")
	elseif energyStored < 1000000000000000000000 then
		mon.write(round((energyStored/1000000000000000000),1))
		mon.write(""E"")
	end
	mon.write(""RF"")
	mon.write(""/"")
	if energyMax < 1000 then
		mon.write(energyMax)
	elseif energyMax < 1000000 then
		mon.write(round((energyMax/1000),1))
		mon.write(""k"")
	elseif energyMax < 1000000000 then
		mon.write(round((energyMax/1000000),1))
		mon.write(""M"")
	elseif energyMax < 1000000000000 then
		mon.write(round((energyMax/1000000000),1))
		mon.write(""G"")
	elseif energyMax < 1000000000000000 then
		mon.write(round((energyMax/1000000000000),1))
		mon.write(""T"")
	elseif energyMax < 1000000000000000000 then
		mon.write(round((energyMax/1000000000000000	),1))
		mon.write(""P"")
	elseif energyMax < 1000000000000000000000 then
		mon.write(round((energyMax/1000000000000000000),1))
		mon.write(""E"")
	end
	mon.write(""RF"")
	mon.setCursorPos(xPos, yPos+2)
	mon.setBackgroundColor(colors.lightGray)
	for l = 1, 20, 1 do
		mon.write("" "")
	end
	mon.setCursorPos(xPos, yPos+2)
	mon.setBackgroundColor(colors.lime)
	for l = 0, round((((energyStored/energyMax)*10)*2)-1,0), 1 do
		mon.write("" "")
	end
	mon.setCursorPos(xPos, yPos+3)
	mon.setBackgroundColor(colors.lightGray)
	for l = 1, 20, 1 do
		mon.write("" "")
	end
	mon.setCursorPos(xPos, yPos+3)
	mon.setBackgroundColor(colors.lime)
	for l = 0, round((((energyStored/energyMax)*10)*2)-1,0), 1 do
		mon.write("" "")
	end
	mon.setBackgroundColor(colors.black)
	mon.setCursorPos(xPos, yPos+4)
	mon.write(""                      "")
	if string.len(tostring(round((energyStored/energyMax)*100))) == 1 then
		if round((energyStored/energyMax)*100) <= 10 then
			mon.setCursorPos(xPos, yPos+4)
			mon.write(round((energyStored/energyMax)*100))
			mon.setCursorPos(xPos+1, yPos+4)
			mon.write(""% "")
		else
			mon.setCursorPos(xPos+round((((energyStored/energyMax)*100)-10)/5), yPos+4)
			mon.write(round((energyStored/energyMax)*100))
			mon.setCursorPos(xPos+round((((energyStored/energyMax)*100)-10)/5)+1, yPos+4)
			mon.write(""% "")
		end
	elseif string.len(tostring(round((energyStored/energyMax)*100))) == 2 then
		if round((energyStored/energyMax)*100) <= 15 then
			mon.setCursorPos(xPos, yPos+4)
			mon.write(round((energyStored/energyMax)*100))
			mon.setCursorPos(xPos+2, yPos+4)
			mon.write(""% "")
		else
			mon.setCursorPos(xPos+round((((energyStored/energyMax)*100)-15)/5), yPos+4)
			mon.write(round((energyStored/energyMax)*100))
			mon.setCursorPos(xPos+round((((energyStored/energyMax)*100)-15)/5)+2, yPos+4)
			mon.write(""% "")
		end
	elseif string.len(tostring(round((energyStored/energyMax)*100))) == 3 then
		if round((energyStored/energyMax)*100) <= 20 then
			mon.setCursorPos(xPos, yPos+4)
			mon.write(round((energyStored/energyMax)*100))
			mon.setCursorPos(xPos+3, yPos+4)
			mon.write(""% "")
		else
			mon.setCursorPos(xPos+round((((energyStored/energyMax)*100)-20)/5), yPos+4)
			mon.write(round((energyStored/energyMax)*100))
			mon.setCursorPos(xPos+round((((energyStored/energyMax)*100)-20)/5)+3, yPos+4)
			mon.write(""% "")
		end
	end
	mon.setCursorPos(xPos, yPos+5)
	mon.write(""InputMax:"")
	mon.setCursorPos(xPos, yPos+6)
	mon.write(""         "")
	mon.setCursorPos(xPos, yPos+6)
	mon.setTextColor(colors.lime)
	if limitTransfer == true then
		if inputRate == 0 then
			mon.setTextColor(colors.red)
		end
		if inputRate < 1000 then
			mon.write(inputRate)
		elseif inputRate < 1000000 then
			mon.write(round((inputRate/1000),1))
			mon.write(""k"")
		elseif inputRate < 1000000000 then
			mon.write(round((inputRate/1000000),1))
			mon.write(""M"")
		elseif inputRate < 1000000000000 then
			mon.write(round((inputRate/1000000000),1))
			mon.write(""G"")
		elseif inputRate < 1000000000000000 then
			mon.write(round((inputRate/1000000000000),1))
			mon.write(""T"")
		elseif inputRate < 1000000000000000000 then
			mon.write(round((inputRate/1000000000000000	),1))
			mon.write(""P"")
		elseif inputRate < 1000000000000000000000 then
			mon.write(round((inputRate/1000000000000000000),1))
			mon.write(""E"")
		end
		mon.write(""RF"")
	else
		mon.write(""INFINITE"")
	end
	mon.setTextColor(colors.white)
	mon.setCursorPos(xPos+12, yPos+5)
	mon.write(""OutputMax:"")
	mon.setCursorPos(xPos+12, yPos+6)
	mon.write(""         "")
	mon.setTextColor(colors.red)
	mon.setCursorPos(xPos+12, yPos+6)
	if limitTransfer == true then
		if outputRate < 1000 then
			mon.write(outputRate)
		elseif outputRate < 1000000 then
			mon.write(round((outputRate/1000),1))
			mon.write(""k"")
		elseif outputRate < 1000000000 then
			mon.write(round((outputRate/1000000),1))
			mon.write(""M"")
		elseif outputRate < 1000000000000 then
			mon.write(round((outputRate/1000000000),1))
			mon.write(""G"")
		elseif outputRate < 1000000000000000 then
			mon.write(round((outputRate/1000000000000),1))
			mon.write(""T"")
		elseif outputRate < 1000000000000000000 then
			mon.write(round((outputRate/1000000000000000),1))
			mon.write(""P"")
		elseif outputRate < 1000000000000000000000 then
			mon.write(round((outputRate/1000000000000000000),1))
			mon.write(""E"")
		end
		mon.write(""RF"")
	else
		mon.write(""INFINITE"")
	end
	mon.setTextColor(colors.white)
	mon.setCursorPos(xPos, yPos+7)
	mon.write(""Transfer:"")
	mon.setCursorPos(xPos, yPos+8)
	if energyTransfer < 0 then
		mon.setTextColor(colors.red)
		if energyTransfer*(-1) < 1000 then
			mon.write(energyTransfer)
		elseif energyTransfer*(-1) < 1000000 then
			mon.write(round((energyTransfer/1000),1))
			mon.write(""k"")
		elseif energyTransfer*(-1) < 1000000000 then
			mon.write(round((energyTransfer/1000000),1))
			mon.write(""M"")
		elseif energyTransfer*(-1) < 1000000000000 then
			mon.write(round((energyTransfer/1000000000),1))
			mon.write(""G"")
		elseif energyTransfer*(-1) < 1000000000000000 then
			mon.write(round((energyTransfer/1000000000000),1))
			mon.write(""T"")
		elseif energyTransfer*(-1) < 1000000000000000000 then
			mon.write(round((energyTransfer/1000000000000000),1))
			mon.write(""P"")
		elseif energyTransfer*(-1) < 1000000000000000000000 then
			mon.write(round((energyTransfer/1000000000000000000),1))
			mon.write(""E"")
		end
	elseif energyTransfer == 0 then
		mon.setTextColor(colors.red)
		mon.write(""0"")
	else 
		mon.setTextColor(colors.lime)
		if energyTransfer < 1000 then
			mon.write(energyTransfer)
		elseif energyTransfer < 1000000 then
			mon.write(round((energyTransfer/1000),1))
			mon.write(""k"")
		elseif energyTransfer < 1000000000 then
			mon.write(round((energyTransfer/1000000),1))
			mon.write(""M"")
		elseif energyTransfer < 1000000000000 then
			mon.write(round((energyTransfer/1000000000),1))
			mon.write(""G"")
		elseif energyTransfer < 1000000000000000 then
			mon.write(round((energyTransfer/1000000000000),1))
			mon.write(""T"")
		elseif energyTransfer < 1000000000000000000 then
			mon.write(round((energyTransfer/1000000000000000),1))
			mon.write(""P"")
		elseif energyTransfer < 1000000000000000000000 then
			mon.write(round((energyTransfer/1000000000000000000),1))
			mon.write(""E"")
		end
	end
	mon.write(""RF"")
	mon.setTextColor(colors.white)
	mon.setCursorPos(xPos+12, yPos+7)
	mon.write(""Limited:"")
	mon.setCursorPos(xPos+12, yPos+8)
	if limitTransfer == true then
		mon.setTextColor(colors.lime)
		mon.write(""On"")
	else
		mon.setTextColor(colors.red)
		mon.write(""Off"")
	end
	mon.setTextColor(colors.white)
end

local function drawAll()	
	while true do
		mon.clear()
		versionText = ""Version ""..version.."" by Game4Freak""
		verPos = 51 - string.len(versionText)
		mon.setCursorPos(verPos,26)
		mon.setTextColor(colors.gray)
		mon.write(versionText)
		mon.setTextColor(colors.white)
		drawBox(2,20,2,14,""ENERGY CORE"")
		drawBox(22,49,2,14,""DETAILS"")
		drawBox(2,24,16,25,""LOGS"")
		drawBox(26,49,16,25,""CONTROLS"")
		yPos = 4
		xMin = 5
		for xPos = xMin, xMin+12, 1 do
			drawDetails(24,4)
			drawControls(26,16)
			getLogs(""logs.cfg"",2,16)
			if tier <= 7 then
				colorShield = colors.lightBlue
				colorCore = colors.cyan
			else
				colorShield = colors.yellow
				colorCore = colors.orange
			end
			xPos1 = xPos
			if xPos1 >= xMin+13 then
				xPos1a = xPos1 - 13
				drawL1(xPos1a, yPos)
			else
				drawL1(xPos1, yPos)
			end
			xPos2 = xPos + 1
			if xPos2 >= xMin+13 then
				xPos2a = xPos2 - 13
				drawL2(xPos2a, yPos)
			else
				drawL2(xPos2, yPos)
			end
			xPos3 = xPos + 2
			if xPos3 >= xMin+13 then
				xPos3a = xPos3 - 13
				drawL3(xPos3a, yPos)
			else
				drawL3(xPos3, yPos)
			end
			xPos4 = xPos + 3
			if xPos4 >= xMin+13 then
				xPos4a = xPos4 - 13
				drawL4(xPos4a, yPos)
			else
				drawL4(xPos4, yPos)
			end
			xPos5 = xPos + 4
			if xPos5 >= xMin+13 then
				xPos5a = xPos5 - 13
				drawL5(xPos5a, yPos)
			else
				drawL5(xPos5, yPos)
			end
			xPos6 = xPos + 5
			if xPos6 >= xMin+13 then
				xPos6a = xPos6 - 13
				drawL6(xPos6a, yPos)
			else
				drawL6(xPos6, yPos)
			end
			xPos7 = xPos + 6
			if xPos7 >= xMin+13 then
				xPos7a = xPos7 - 13
				drawL7(xPos7a, yPos)
			else
				drawL7(xPos7, yPos)
			end
			xPos8 = xPos + 7
			if xPos8 >= xMin+13 then
				xPos8a = xPos8 - 13
				drawL8(xPos8a, yPos)
			else
				drawL8(xPos8, yPos)
			end
			xPos9 = xPos + 8
			if xPos9 >= xMin+13 then
				xPos9a = xPos9 - 13
				drawL9(xPos9a, yPos)
			else
				drawL9(xPos9, yPos)
			end
			xPos10 = xPos + 9
			if xPos10 >= xMin+13 then
				xPos10a = xPos10 - 13
				drawL10(xPos10a, yPos)
			else
				drawL10(xPos10, yPos)
			end
			xPos11 = xPos + 10
			if xPos11 >= xMin+13 then
				xPos11a = xPos11 - 13
				drawL11(xPos11a, yPos)
			else
				drawL11(xPos11, yPos)
			end
			xPos12 = xPos + 11
			if xPos12 >= xMin+13 then
				xPos12a = xPos12 - 13
				drawL12(xPos12a, yPos)
			else
				drawL12(xPos12, yPos)
			end
			xPos13 = xPos + 12
			if xPos13 >= xMin+13 then
				xPos13a = xPos13 - 13
				drawL13(xPos13a, yPos)
			else
				drawL13(xPos13, yPos)
			end
			mon.setBackgroundColor(colors.black)
			mon.setCursorPos(xMin, yPos)
			mon.write(""   "")
			mon.setCursorPos(xMin+10, yPos)
			mon.write(""   "")
			mon.setCursorPos(xMin, yPos+1)
			mon.write("" "")
			mon.setCursorPos(xMin+12, yPos+1)
			mon.write("" "")
			mon.setCursorPos(xMin, yPos+7)
			mon.write("" "")
			mon.setCursorPos(xMin+12, yPos+7)
			mon.write("" "")
			mon.setCursorPos(xMin, yPos+8)
			mon.write(""   "")
			mon.setCursorPos(xMin+10, yPos+8)
			mon.write(""   "")
			sleep(1)
		end
	end
end

local function clickListener()
	event, side, xCPos, yCPos = os.pullEvent(""monitor_touch"")
	if xCPos == 1 and yCPos == 1 then
		mon.setCursorPos(1,1)
		mon.write(""Click!"")
		sleep(1)
		mon.write(""      "")
	end
	if currentControls == ""main"" then
		if xCPos >= 28 and xCPos <= 35 and yCPos >= 18 and yCPos <= 19 and limitTransfer == true then
			drawClear(27,48,17,24)
			currentControls = ""editInput""
		elseif xCPos >= 39 and xCPos <= 47 and yCPos >= 18 and yCPos <= 19 and limitTransfer == true then
			drawClear(27,48,17,24)
			currentControls = ""editOutput""
		elseif xCPos >= 28 and xCPos <= 35 and yCPos >= 22 and yCPos <= 23 then
			drawClear(27,48,17,24)
			currentControls = ""editConfig""
		end
	elseif currentControls == ""editInput"" or currentControls == ""editOutput"" then
		if xCPos >= 28 and xCPos <= 30 and yCPos == 20 then
			mon.setCursorPos(28,20)
			mon.setBackgroundColor(colors.gray)
			mon.write("" 1 "")
			putLimit = putLimit .. ""1""
			sleep(0.2)
			mon.setCursorPos(28,20)
			mon.setBackgroundColor(colors.lightGray)
			mon.write("" 1 "")
			mon.setBackgroundColor(1,1)
			mon.setBackgroundColor(colors.black)
			mon.write("" "")
		elseif xCPos >= 32 and xCPos <= 34 and yCPos == 20 then
			mon.setCursorPos(32,20)
			mon.setBackgroundColor(colors.gray)
			mon.write("" 2 "")
			putLimit = putLimit .. ""2""
			sleep(0.2)
			mon.setCursorPos(32,20)
			mon.setBackgroundColor(colors.lightGray)
			mon.write("" 2 "")
			mon.setBackgroundColor(1,1)
			mon.setBackgroundColor(colors.black)
			mon.write("" "")
			mon.write("" "")
		elseif xCPos >= 36 and xCPos <= 38 and yCPos == 20 then
			mon.setCursorPos(36,20)
			mon.setBackgroundColor(colors.gray)
			mon.write("" 3 "")
			putLimit = putLimit..""3""
			sleep(0.2)
			mon.setCursorPos(36,20)
			mon.setBackgroundColor(colors.lightGray)
			mon.write("" 3 "")
			mon.setBackgroundColor(1,1)
			mon.setBackgroundColor(colors.black)
			mon.write("" "")
		elseif xCPos >= 28 and xCPos <= 30 and yCPos == 21 then
			mon.setCursorPos(28,21)
			mon.setBackgroundColor(colors.gray)
			mon.write("" 4 "")
			putLimit = putLimit..""4""
			sleep(0.2)
			mon.setCursorPos(28,21)
			mon.setBackgroundColor(colors.lightGray)
			mon.write("" 4 "")
			mon.setBackgroundColor(1,1)
			mon.setBackgroundColor(colors.black)
			mon.write("" "")
		elseif xCPos >= 32 and xCPos <= 34 and yCPos == 21 then
			mon.setCursorPos(32,21)
			mon.setBackgroundColor(colors.gray)
			mon.write("" 5 "")
			putLimit = putLimit..""5""
			sleep(0.2)
			mon.setCursorPos(32,21)
			mon.setBackgroundColor(colors.lightGray)
			mon.write("" 5 "")
			mon.setBackgroundColor(1,1)
			mon.setBackgroundColor(colors.black)
			mon.write("" "")
		elseif xCPos >= 36 and xCPos <= 38 and yCPos == 21 then
			mon.setCursorPos(36,21)
			mon.setBackgroundColor(colors.gray)
			mon.write("" 6 "")
			putLimit = putLimit..""6""
			sleep(0.2)
			mon.setCursorPos(36,21)
			mon.setBackgroundColor(colors.lightGray)
			mon.write("" 6 "")
			mon.setBackgroundColor(1,1)
			mon.setBackgroundColor(colors.black)
			mon.write("" "")
		elseif xCPos >= 28 and xCPos <= 30 and yCPos == 22 then
			mon.setCursorPos(28,22)
			mon.setBackgroundColor(colors.gray)
			mon.write("" 7 "")
			putLimit = putLimit..""7""
			sleep(0.2)
			mon.setCursorPos(28,22)
			mon.setBackgroundColor(colors.lightGray)
			mon.write("" 7 "")
			mon.setBackgroundColor(1,1)
			mon.setBackgroundColor(colors.black)
			mon.write("" "")
		elseif xCPos >= 32 and xCPos <= 34 and yCPos == 22 then
			mon.setCursorPos(32,22)
			mon.setBackgroundColor(colors.gray)
			mon.write("" 8 "")
			putLimit = putLimit..""8""
			sleep(0.2)
			mon.setCursorPos(32,22)
			mon.setBackgroundColor(colors.lightGray)
			mon.write("" 8 "")
			mon.setBackgroundColor(1,1)
			mon.setBackgroundColor(colors.black)
			mon.write("" "")
		elseif xCPos >= 36 and xCPos <= 38 and yCPos == 22 then
			mon.setCursorPos(36,22)
			mon.setBackgroundColor(colors.gray)
			mon.write("" 9 "")
			putLimit = putLimit..""9""
			sleep(0.2)
			mon.setCursorPos(36,22)
			mon.setBackgroundColor(colors.lightGray)
			mon.write("" 9 "")
			mon.setBackgroundColor(1,1)
			mon.setBackgroundColor(colors.black)
			mon.write("" "")
		elseif xCPos >= 28 and xCPos <= 30 and yCPos == 23 then
			mon.setCursorPos(28,23)
			mon.setBackgroundColor(colors.gray)
			mon.write("" < "")
			putLimit = string.sub(putLimit,0,string.len(putLimit)-1)
			sleep(0.2)
			mon.setCursorPos(28,23)
			mon.setBackgroundColor(colors.red)
			mon.write("" < "")
			mon.setBackgroundColor(1,1)
			mon.setBackgroundColor(colors.black)
			mon.write("" "")
		elseif xCPos >= 32 and xCPos <= 34 and yCPos == 23 then
			mon.setCursorPos(32,23)
			mon.setBackgroundColor(colors.gray)
			mon.write("" 0 "")
			putLimit = putLimit..""0""
			sleep(0.2)
			mon.setCursorPos(32,23)
			mon.setBackgroundColor(colors.lightGray)
			mon.write("" 0 "")
			mon.setBackgroundColor(1,1)
			mon.setBackgroundColor(colors.black)
			mon.write("" "")
		elseif xCPos >= 36 and xCPos <= 38 and yCPos == 23 then
			mon.setCursorPos(36,23)
			mon.setBackgroundColor(colors.gray)
			mon.write("" X "")
			putLimit = """"
			sleep(0.2)
			mon.setCursorPos(36,23)
			mon.setBackgroundColor(colors.red)
			mon.write("" X "")
			mon.setBackgroundColor(1,1)
			mon.setBackgroundColor(colors.black)
			mon.write("" "")
		elseif xCPos >= 42 and xCPos <= 47 and yCPos == 23 then
			putLimit = """"
			drawClear(27,48,17,24)
			currentControls = ""main""
		elseif xCPos >= 42 and xCPos <= 47 and yCPos == 21 then
			if currentControls == ""editInput"" then
				if putLimit == """" then
					putLimitNum = 0
				else
					putLimitNum = tonumber(putLimit)
				end
				input.setSignalLowFlow(putLimitNum)
				addLog(""logs.cfg"",getTime(false),""InputMax > ""..convertRF(putLimitNum))
			else
				if putLimit == """" then
					putLimitNum = 0
				else
					putLimitNum = tonumber(putLimit)
				end
				output.setSignalLowFlow(putLimitNum)
				addLog(""logs.cfg"",getTime(false),""OutputMax > ""..convertRF(putLimitNum))
			end
			putLimit = """"
			drawClear(27,48,17,24)
			currentControls = ""main""
		end
	elseif currentControls == ""editConfig"" then
		if xCPos >= 28 and xCPos <= 28+8 and yCPos >= 18 and yCPos <= 19 and limitTransfer == true then
			drawButton(26+2,26+10,16+3,16+4,""Detect"",""Flux_Gate"",colors.gray)
			detectInOutput()
			addLog(""logs.cfg"",getTime(false),""Detected Flux_Gates"")
		elseif xCPos >= 26+16 and xCPos <= 26+16+6 and yCPos >= 16+7 and yCPos <= 16+7 then
			currentControls = ""main""
		elseif xCPos >= 40 and xCPos <= 47 and yCPos >= 19 and yCPos <= 20 then
			currentControls = ""editTimezone""
		end
	elseif currentControls == ""editTimezone"" then
		if xCPos >= 26+9 and xCPos <= 26+15 and yCPos >= 16+7 and yCPos <= 16+7 then
			currentControls = ""main""
		elseif xCPos >= 26+16 and xCPos <= 26+16+6 and yCPos >= 16+7 and yCPos <= 16+7 then
			if timediff >= -12 and timediff <= 12 then
				editConfigFile(""config.cfg"",1,""Timezone: ""..timediff)
			elseif timediff < -12 then
				editConfigFile(""config.cfg"",1,""Timezone: -12"")
			elseif timediff > 12 then
				editConfigFile(""config.cfg"",1,""Timezone: 12"")
			end
			addLog(""logs.cfg"",getTime(false),""Edited Timezone"")
			currentControls = ""main""
		elseif xCPos >= 26+2+3 and xCPos <= 26+2+4+2 and yCPos >= 16+4 and yCPos <= 16+4 then
			timediff = timediff-1
		elseif xCPos >= 26+2+4+8 and xCPos <= 26+2+4+6+5 and yCPos >= 16+4 and yCPos <= 16+4 then
			timediff = timediff+1
		end
	end
end

while true do
	parallel.waitForAny(drawAll,clickListener)
end"
4veT085x,Untitled,cloud_clown,C++,Sunday 28th of May 2023 01:02:27 AM CDT,"#include<bits/stdc++.h>
#include<graphics.h>

using namespace std;

int main()
{
    int graphicsdriver = DETECT, gm;
    initgraph(&graphicsdriver, &gm, (char*) """");

    int rcode_begin[4] = {0,0,0,0}, rcode_end[4] = {0,0,0,0}, region_code[4];
    int xmax, ymax, xmin, ymin, x1,y1,x2,y2, flag=0;

    cout<<""Enter X_Max & Y_Max: "";
    cin>>xmax>>ymax;
    cout<<""Enter X_Min & Y_Min: "";
    cin>>xmin>>ymin;
    rectangle(xmin,ymin,xmax,ymax);

    cout<<""Enter Initial point Co-Ordinate (x1,y1) : "";
    cin>>x1>>y1;
    cout<<""Enter End point Co-Ordinate (x2,y2) : "";
    cin>>x2>>y2;
    line(x1,y1,x2,y2);

    getch();

    if (y1>ymax)
    {
        rcode_begin[0] = 1;
        flag = 1;
    }
    if (y1<ymin)
    {
        rcode_begin[1] = 1;
        flag = 1;
    }
    if (x1>xmax)
    {
        rcode_begin[2] = 1;
        flag = 1;
    }
    if (x1<xmin)
    {
        rcode_begin[3] = 1;
        flag = 1;
    }

    //finding Region-code of end point
    if (y2>ymax)
    {
        rcode_end[0] = 1;
        flag = 1;
    }
    if (y2<ymin)
    {
        rcode_end[1] = 1;
        flag = 1;
    }
    if (x2>xmax)
    {
        rcode_end[2] = 1;
        flag = 1;
    }
    if (x2<xmin)
    {
        rcode_end[3] = 1;
        flag = 1;
    }

    if(flag==0)
    {
        cout<<""Clipping not required as it is already in the viewport"";
    }

    else
    {
        for(int i=0; i<4; i++)
        {
            region_code[i] = rcode_begin[i] && rcode_end[i];
            if(region_code[i]==1)
            {
                flag = 0;

            }
            cout << ""flag: "" << flag;
        }

        if(flag==0)
        {
            cout<<""Line is completely outside the viewport"";
        }
        else
        {
            float slope = (y2-y1) / (x2-x1);
            flag = 1;

            setcolor(getbkcolor());
            line(x1,y1,x2,y2);

            //initial point clip
            if(rcode_begin[0]==1)
            {
                x1 = x1 + (ymax - y1) / slope;
                y1 = ymax;
            }
            if(rcode_begin[1]==1)
            {
                x1 = x1 + (ymin - y1) / slope;
                y1 = ymin;
            }
            if(rcode_begin[2]==1)
            {
                y1 = y1 + (xmax - x1) * slope;
                x1 = xmax;
            }
            if(rcode_begin[3]==1)
            {
                y1 = y1 + (xmin - x1) * slope;
                x1 = xmin;
            }

            //endpoint clip
            if(rcode_end[0]==1)
            {
                x2 = x2 + (ymax - y2) / slope;
                y2 = ymax;
            }
            if(rcode_end[1]==1)
            {
                x2 = x2 + (ymin - y2) / slope;
                y2 = ymin;
            }
            if(rcode_end[2]==1)
            {
                y2 = y2 + (xmax - x2) * slope;
                x2 = xmax;
            }
            if(rcode_end[3]==1)
            {
                y2 = y2 + (xmin - x2) * slope;
                x2 = xmin;
            }
        }
    }

    getch();
    if(flag==1)
    {
        setcolor(RED);
        line(x1,y1,x2,y2);
    }
        closegraph();
}
"
r3ygcBug,partRcase3Request,cepxuozab,C++,Saturday 27th of May 2023 11:50:57 PM CDT,"{
    ""serialization_settings"": {
        ""file"": ""/tmp/output.txt""
    },
    ""stat_requests"": [
        {
            ""id"": 741228451,
            ""phones"": [
                {

                }
            ],
            ""type"": ""FindCompanies""
        }
    ]
}
"
z4f07i08,partRcase3Base,cepxuozab,C++,Saturday 27th of May 2023 11:48:14 PM CDT,"{
    ""serialization_settings"": {
        ""file"": ""/tmp/output.txt""
    },
    ""routing_settings"": {
        ""bus_wait_time"": 2,
        ""bus_velocity"": 30
    },
    ""render_settings"": {
        ""bus_label_font_size"": 20,
        ""bus_label_offset"": [
            7,
            15
        ],
        ""color_palette"": [
            [
                255,
                0,
                255
            ],
            ""red"",
            ""green"",
            ""blue""
        ],
        ""height"": 2000,
        ""layers"": [
            ""bus_lines"",
            ""bus_labels"",
            ""stop_points"",
            ""stop_labels""
        ],
        ""line_width"": 14,
        ""outer_margin"": 150,
        ""padding"": 50,
        ""stop_label_font_size"": 20,
        ""stop_label_offset"": [
            7,
            -3
        ],
        ""stop_radius"": 5,
        ""underlayer_color"": [
            255,
            255,
            255,
            0.85
        ],
        ""underlayer_width"": 3,
        ""width"": 900
    },
    ""base_requests"": [
        {
            ""is_roundtrip"": true,
            ""name"": ""13"",
            ""stops"": [
                ""Ulitsa Lizy Chaykinoy""
            ],
            ""type"": ""Bus""
        },
        {
            ""latitude"": 43.5903,
            ""longitude"": 39.7468,
            ""name"": ""Ulitsa Lizy Chaykinoy"",
            ""road_distances"": {

            },
            ""type"": ""Stop""
        }
    ],
    ""yellow_pages"": {
        ""companies"": [
            {
                ""names"": [
                    {
                        ""value"": ""Dendrariy""
                    }
                ],
                ""phones"": [
                    {
                        ""type"": ""FAX""
                    }
                ],
                ""rubrics"": [
                    1
                ]
            },
            {
                ""names"": [
                    {
                        ""value"": ""im. Frunze""
                    }
                ],
                ""rubrics"": [
                    1
                ]
            }
        ],
        ""rubrics"": {
            ""1"": {
                ""name"": ""Park""
            },
            ""2"": {
                ""name"": ""Vokzal""
            }
        }
    }
}
"
5wivXuTu,mttr-chart,sreejonK19,PHP,Saturday 27th of May 2023 11:38:37 PM CDT,"<?php

// init
$employee_user = $_SESSION['employee_user'];
$total_restoration_time = $control->fetch_restoration_time_of_all_closed_tt($client_name, $employee_user);


// controller
public function fetch_restoration_time_of_all_closed_tt($client_name, $client_username)
{
    return $this->moduller()->fetch_restoration_time_of_all_closed_tt($client_name, $client_username);
}


// model
public function fetch_restoration_time_of_all_closed_tt($client_name, $client_username)
{
    $conn = $this->Fconnection3();

    $sql = ""SELECT * FROM tbl_trouble_input WHERE fault_date_time >= '2023-01-01' AND fault_date_time IS NOT NULL AND tt_close_time IS NOT NULL AND tt_close_time <> '0000-00-00 00:00:00' AND tt_close_time > fault_date_time AND status = 0 AND client_name = '$client_name' AND client_user_name='$client_username'"";

    $query = mysqli_query($conn, $sql);

    $total_time = 0;
    $total_no_pre_check_list_time = 0;
    $total_counter = 0;
    $no_pre_check_list_counter = 0;
    while ($row = mysqli_fetch_assoc($query)) {
        $fault_restoration_time = strtotime($row[""tt_close_time""]) - strtotime($row[""fault_date_time""]);

        $link_type = $this->fetchSingleRowNoc('tbl_service_type_layer_divition', array('service_type' => $row[""link_type""]));
        $link_service_type = $link_type[""toc_layer""];
        $fault_layer_1 = $row[""client_fault_type1""];
        $fault_layer_2 = $row[""client_fault_type2""];

        if ($link_service_type == ""Data"" && $fault_layer_1 == 3 && $fault_layer_2 == 2) {
            if (empty($row['down_time']) || empty($row['port_status']) || empty($row['device_power_tx']) || empty($row['device_power_rx']) || empty($row['vlan_id_service_name']) || empty($row['mac_address']) || empty($row['last_mile_device'])) {
                $total_no_pre_check_list_time += $fault_restoration_time;
                $no_pre_check_list_counter++;
            }
        } elseif ($link_service_type == ""FTTx"" && $fault_layer_1 == 3 && $fault_layer_2 == 2) {
            if (empty($row['down_time']) || empty($row['vlan_id_service_name']) || empty($row['mac_address']) || empty($row['ont_onu_status']) || empty($row['ont_onu_sn']) || empty($row['last_mile_device'])) {
                $total_no_pre_check_list_time += $fault_restoration_time;
                $no_pre_check_list_counter++;
            }
        } elseif ($link_service_type == ""Data"" && ($fault_layer_1 == 4 || $fault_layer_1 == 2)) {
            if (empty($row['down_time']) || empty($row['port_status']) || empty($row['device_power_tx']) || empty($row['device_power_rx']) || empty($row['vlan_id_service_name']) || empty($row['utilize_bw']) || empty($row['latency_e2e']) || empty($row['carrier_delay']) || empty($row['last_mile_fiber_length'])) {
                $total_no_pre_check_list_time += $fault_restoration_time;
                $no_pre_check_list_counter++;
            }
        } elseif ($link_service_type == ""FTTx"" && ($fault_layer_1 == 4 || $fault_layer_1 == 2)) {
            if (empty($row['down_time']) || empty($row['vlan_id_service_name']) || empty($row['ont_onu_status']) || empty($row['ont_onu_sn']) || empty($row['last_mile_fiber_length'])) {
                $total_no_pre_check_list_time += $fault_restoration_time;
                $no_pre_check_list_counter++;
            }
        } elseif (($link_service_type == ""Data"" || $link_service_type == ""FTTx"") && $fault_layer_1 == 5) {
            if (empty($row['port_status'])) {
                $total_no_pre_check_list_time += $fault_restoration_time;
                $no_pre_check_list_counter++;
            }
        } elseif ($link_service_type == ""Core"" && ($fault_layer_1 == 3 || $fault_layer_1 == 5)) {
            if (empty($row['down_time']) || empty($row['port_status'])) {
                $total_no_pre_check_list_time += $fault_restoration_time;
                $no_pre_check_list_counter++;
            }
        }

        $total_time += $fault_restoration_time;
        $total_counter++;
    }

    $total_pre_check_list_time = $total_time - $total_no_pre_check_list_time;
    $pre_check_list_counter = $total_counter - $no_pre_check_list_counter;

    $ret = array(
        ""total_pre_check_list_time"" => $total_pre_check_list_time,
        ""pre_check_list_counter"" => $pre_check_list_counter,
        ""total_no_pre_check_list_time"" => $total_no_pre_check_list_time,
        ""no_pre_check_list_counter"" => $no_pre_check_list_counter,
    );

    return $ret;
}

?>

<!-- css -->

<style>

.chart-container {
    width: 70%;
    height: auto;
    margin: 0 auto;
    position: relative;
}

</style>

<!-- html -->

<!-- chart call -->
<div class=""col-md-6"">
    <div class=""callout callout-danger"" style=""background-color: white !important;"">
        <div class=""chart-container"">
            <canvas id=""mttrChart""></canvas>
        </div>
    </div>
</div>


<!-- chart config -->
<script src=""https://cdn.jsdelivr.net/npm/chart.js@4.0.1/dist/chart.umd.min.js""></script>
<script src=""https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@2""></script>
<script src=""https://cdn.jsdelivr.net/npm/chartjs-adapter-date-fns/dist/chartjs-adapter-date-fns.bundle.min.js""></script>


<script>
    const ctx = document.getElementById('mttrChart');

    const total_pre_check_list_time = <?= $total_restoration_time[""total_pre_check_list_time""] ?>;
    const pre_check_list_counter = <?= $total_restoration_time[""pre_check_list_counter""] ?>;
    const total_no_pre_check_list_time = <?= $total_restoration_time[""total_no_pre_check_list_time""] ?>;
    const no_pre_check_list_counter = <?= $total_restoration_time[""no_pre_check_list_counter""] ?>;

    const data = {
        labels: ['MTTR (in Hour)'],
        datasets: [{
                label: 'Complaints Registered with Pre-Check Info',
                data: [parseFloat((total_pre_check_list_time / pre_check_list_counter) / 3600).toFixed(2)],
                borderWidth: 1,
                backgroundColor: 'rgba(43, 173, 229, 0.9)',
            },
            {
                label: 'Complaints Registered without Pre-Check Info',
                data: [parseFloat((total_no_pre_check_list_time / no_pre_check_list_counter) / 3600).toFixed(2)],
                borderWidth: 1,
                backgroundColor: 'rgba(229, 43, 80, 0.9)',
            },
        ],
    };

    const config = {
        type: 'bar',
        data: data,
        plugins: [ChartDataLabels],
        options: {
            indexAxis: 'y',
            elements: {
                bar: {
                    borderWidth: 8,
                },
            },
            responsive: true,
            plugins: {
                legend: {
                    position: 'bottom',
                },
                title: {
                    display: true,
                    text: 'Fault Restoration Time Comparison',
                    font: {
                        size: '18em',
                        weight: 'bold'
                    },
                },
                datalabels: {
                    color: 'rgba(0, 0, 0, 0.9)',
                },
                tooltip: {
                    xAlign: 'left',
                    yAlign: 'top',
                },
            },
        },
    };

    new Chart(ctx, config);
</script>"
T8Vpk5sW,toi19_explorer,Naxocist,C++,Saturday 27th of May 2023 10:35:22 PM CDT,"#include <bits/stdc++.h>
using namespace std;
const int N = 5e5 + 3, mod = 1e9 + 7;
using ll = long long;
vector<int> adj[N];
ll dp[N], fac[N];

void dfs(int u, int p) {

	dp[u] = 1;
	int child = 0;
	for(int v : adj[u]) {
		if(v == p) continue ;
		dfs(v, u);
		dp[u] *= dp[v], dp[u] %= mod;
		child ++;
	}

	dp[u] *= fac[child], dp[u] %= mod;
}

int main() {
	cin.tie(nullptr)->sync_with_stdio(false);
	fac[0] = 1;
	for(int i=1; i<N; ++i) fac[i] = fac[i-1] * i, fac[i] %= mod;
	int n; cin >> n;
	unordered_set<int> s;
	int p = -1;
	for(int i=0; i<2*n-1; ++i) {
		int u; cin >> u;
		if(s.find(u) == s.end() and i) adj[u].emplace_back(p), adj[p].emplace_back(u);
		s.insert(u);
		p = u;
	}
	dfs(p, -1);
	cout << dp[p];
	return 0;
}"
Gdj1BZ0n,toi19_energy,Naxocist,C++,Saturday 27th of May 2023 10:34:56 PM CDT,"#include <bits/stdc++.h>
using namespace std;
const int N = 303, mod = 1e9 + 7;
using ll = long long;
ll n, k, d, qs[N], dp[N][N][13];

ll f(int l, int r, int k) {
	if(k == 1) return 1;
	if(dp[l][r][k] != -1) return dp[l][r][k];

	ll s = 0;
	for(int m=l; m<r; ++m) {
		ll left = qs[m] - qs[l-1], right = qs[r] - qs[m];
		if(abs(left - right) > d) continue ;
		s += f(l, m, k-1) * f(m+1, r, k-1);
		s %= mod;
	}

	return dp[l][r][k] = s;
}

int main() {
	cin >> n >> k >> d;
	for(int i=1; i<=n; ++i) {
		cin >> qs[i]; qs[i] += qs[i-1];
	}
	memset(dp, -1, sizeof dp);
	cout << f(1, n, k);
	return 0;
}"
BVkqNrF1,fibocomdata.sh,snowgum,Bash,Saturday 27th of May 2023 09:04:11 PM CDT,"#!/bin/sh

ROOTER=/usr/lib/rooter

log() {
	logger -t ""Fibocom Data"" ""$@""
}

CURRMODEM=$1
COMMPORT=$2

decode_signal() {
	if [ ""$CRAT"" -eq 4 ]; then
		RSCPs=$(($RSRP - 141))
		if [ -n ""$RSCP"" ]; then
			RSCP=$RSCP"" dBm<br />""$RSCPs
		else
			RSCP=$RSCPs
		fi
		if [ -n ""$ECIO"" ]; then
			ECIO=$ECIO"" dB<br />""$((($RSRQ / 2) - 20))
		else
			ECIO=$((($RSRQ / 2) - 20))
		fi
	elif [ ""$CRAT"" -eq 9 ]; then
		RSCPs=$(($RSRP - 157))
		if [ -n ""$RSCP"" ]; then
			RSCP=$RSCP"" dBm<br />""$RSCPs
		else
			RSCP=$RSCPs
		fi
		if [ -n ""$ECIO"" ]; then
			ECIO=$ECIO"" dB<br />""$((($RSRQ / 2) - 43))
		else
			ECIO=$((($RSRQ / 2) - 43))
		fi
	fi
}
decode_bw() {
	case $BW in
		""0"")
			BW=""1.4"" ;;
		""1"")
			BW=""3"" ;;
		""2"")
			BW=""5"" ;;
		""3"")
			BW=""10"" ;;
		""4"")
			BW=""15"" ;;
		""5"")
			BW=""20"" ;;
		*)
			BW=""-"";;
	esac
}

OX=$($ROOTER/gcom/gcom-locked ""$COMMPORT"" ""fibocominfo.gcom"" ""$CURRMODEM"")

OX=$(echo $OX | tr 'a-z' 'A-Z')

SERVING=$(echo $OX | grep -o ""+GTCCINFO:.\+GTRAT"")

REGXa=""[12],[249],[0-9]\{3\},[0-9]\{2,3\},[0-9A-F]\{0,5\},[0-9A-F]\{0,10\},[0-9A-F]\{1,8\},[0-9A-F]\{1,8\},[15][0-9]\{1,4\},[0-9]\{1,3\},[-0-9]\{1,5\},[0-9]\{1,3\},[0-9]\{1,3\},[0-9]\{1,3\}""

REGXb=""+GTCAINFO: 1,[0-9]\{1,2\},[0-9]\{3\},[0-9]\{2,3\},[0-9]\{1,5\},[0-9]\{3,9\},[0-9]\{1,3\},[0-9]\{1,3\},[0-9]\{1,3\},[-0-9]\{1,4\},[0-9]\{1,6\},[0-9]\{1,6\},[0-9]\{1,3\},[0-9]\{1,3\}""

REGXc=""+GTCAINFO: [2-9],[0-9]\{1,2\},[0-9]\{1,5\},[0-9]\{1,3\},[0-9]\{1,3\},[-0-9]\{1,4\},[0-9]\{1,5\},[0-9]\{1,5\},[0-9]\{1,3\},[0-9]\{1,3\}""

REGXd=""+XMCI: 2,[0-9]\{3\},[0-9]\{2,3\},[^,]\+,[^,]\+,[^,]\+,\""0X[0-9A-F]\{8\}\"",[^,]\+,[^,]\+,[0-9]\{1,2\},[0-9]\{1,2\},[0-9]\{1,2\}""

REGXe=""+XMCI: 4,[0-9]\{3\},[0-9]\{2,3\},[^,]\+,[^,]\+,\""0X[0-9A-F]\{4\}\"",\""0X[0-9A-F]\{8\}\"",[^,]\+,[^,]\+,[0-9]\{1,2\},[0-9]\{1,2\},[-0-9]\{1,5\}""

REGXf=""SCC[0-9]: 1,0,[0-9]\{1,3\},1[0-9]\{2\},[0-9]\{1,6\},[0-9]\{1,3\}""

REGXg=""2,4,,,,,[0-9A-F]\{1,5\},[0-9A-F]\{1,3\},,[0-9]\{1,3\},[0-9]\{1,3\},[0-9]\{1,3\}""
REGXh=""2,9,,,,,[0-9A-F]\{5\},[0-9A-F]\{1,3\},,[0-9]\{1,3\},[0-9]\{1,3\},[0-9]\{1,3\}""
REGXy=""1,4,[0-9]\{3\},[0-9]\{2,3\},[0-9A-F]\{0,5\},[0-9A-F]\{0,10\},[0-9]\{1,8\}, ,[0-9]\{1,2\},[0-5], ,""

CHANNEL=""-""
ECIO=""-""
RSCP=""-""
ECIO1="" ""
RSCP1="" ""
MODE=""-""
NETMODE=""-""
LBAND=""-""
PCI=""-""
CTEMP=""-""
SINR=""""
COPS_MCC=""""

CSQ=$(echo $OX | grep -o ""+CSQ: [0-9]\{1,2\}"" | grep -o ""[0-9]\{1,2\}"")
if [ ""$CSQ"" = ""99"" ]; then
	CSQ=""""
fi
if [ -n ""$CSQ"" ]; then
	CSQ_PER=$(($CSQ * 100/31))""%""
	CSQ_RSSI=$((2 * CSQ - 113))"" dBm""
else
	CSQ=""-""
	CSQ_PER=""-""
	CSQ_RSSI=""-""
fi

if [ -n ""$SERVING"" ]; then
	MODE=$(echo $SERVING | grep -o ""+GTCCINFO: .\+ SERVICE CELL:"")
	LENM=${#MODE}
	if [ $LENM -gt 25 ]; then
		MODE=${MODE:11:$LENM-25}
	else
		MODE=""-""
	fi
	GTCCDATA=$(echo $SERVING | grep -o ""$REGXa"")
	GTCCDATAy=$(echo $SERVING | grep -o ""$REGXy"")
	LTENEIGH=$(echo $SERVING | grep -o ""$REGXg"")
	NRNEIGH=$(echo $SERVING | grep -o ""$REGXh"")
	echo """" > /tmp/scan$CURRMODEM
	for NVAL in $(echo ""$LTENEIGH""); do
		CHAN=$(echo $NVAL | cut -d, -f7)
		CHAN=$(printf ""%d"" 0x$CHAN)
		BAND=$(/usr/lib/rooter/chan2band.sh $CHAN)
		PCIx=$(echo $NVAL | cut -d, -f8)
		PCIx=$(printf ""%d"" 0x$PCIx)
		RSSI=$(echo $NVAL | cut -d, -f11)
		RSSI=$(($RSSI - 141))
		echo -e ""Band : $BAND\tPCI : $PCIx\tSignal : $RSSI (dBm)"" >> /tmp/scan$CURRMODEM
	done
		for NVAL in $(echo ""$NRNEIGH""); do
		CHAN=$(echo $NVAL | cut -d, -f7)
		CHAN=$(printf ""%d"" 0x$CHAN)
		BAND=$(/usr/lib/rooter/chan2band.sh $CHAN)
		PCIx=$(echo $NVAL | cut -d, -f8)
		PCIx=$(printf ""%d"" 0x$PCIx)
		RSSI=$(echo $NVAL | cut -d, -f11)
		RSSI=$(($RSSI - 157))
		echo -e ""Band : $BAND\tPCI : $PCIx\tSignal : $RSSI (dBm)"" >> /tmp/scan$CURRMODEM
	done
	CADATA1=""""
	CADATA2=""""
	XUDATA=""""
	XLDATA=""""
else
	GTCCDATA=""""
	CADATA1=$(echo $OX | grep -o ""$REGXb"")
	CADATA2=$(echo $OX | grep -o ""$REGXc"")
	if [ -n ""$CADATA2"" ]; then
		if [ ""$(echo $CADATA2 | cut -d, -f7)"" = ""65535"" ]; then
			CADATA2=""""
		fi
	fi
	XUDATA=$(echo $OX | grep -o ""$REGXd"")
	XLDATA=$(echo $OX | grep -o ""$REGXe"")
fi
CADATA3=$(echo $OX | grep -o ""$REGXf"")
if [ -n ""$GTCCDATA"" ]; then
	COPS_MCC=$(echo $GTCCDATA | cut -d, -f3)
	COPS_MNC=$(echo $GTCCDATA | cut -d, -f4)
	COPX=""""
	if [ -e /tmp/copn.at ]; then
		COPN=$(cat /tmp/copn.at)
	else
		ATCMDD=""AT+COPN""
		OXc=$($ROOTER/gcom/gcom-locked ""$COMMPORT"" ""run-at.gcom"" ""$CURRMODEM"" ""$ATCMDD"")
		COPN=$OXc
		if [ ${#COPN} -gt 50 ]; then
			echo $COPN > /tmp/copn.at
		fi
	fi
	COPN=$(echo $COPN | tr "" "" "","" | tr -d '""' )
	if [ -n ""$COPN"" ]; then
		COPP=$(echo $COPN"" "" | sed ""s/.*\($COPS_MCC$COPS_MNC,.*\)\,/\1/"")
		if [ -n ""$COPP"" ]; then
			COPX=$(echo $COPP | cut -d, -f2)
		fi
	fi

	LBAND=""""
	CHANNEL=""""
	RSCP=""""
	ECIO=""""
	PCI=""""
	XUDATA=""""
	for CCVAL in $(echo ""$GTCCDATA""); do
		CELLTYPE=$(echo $CCVAL | cut -d, -f1)
		CRAT=$(echo $CCVAL | cut -d, -f2)
		BAND=$(echo $CCVAL | cut -d, -f9)
		CHAN=$(echo $CCVAL | cut -d, -f7)
		CHAN=$(printf ""%d"" 0x$CHAN)
		PCID=$(echo $CCVAL | cut -d, -f8)
		PCID=$(printf ""%d"" 0x$PCID)
		BW=$(echo $CCVAL | cut -d, -f10)
		if [ ""$CRAT"" -eq 4 ]; then
			SSINR=$(echo $CCVAL | cut -d, -f11 | grep -o ""[-0-9]\{1,4\}"")
			if [ -n ""$SSINR"" ] && [ ""$SSINR"" != ""255"" ]; then
				SSINR=$(($SSINR / 2))"" dB""
			else
				SSINR=""-""
			fi
			if [ -n ""$SINR"" ]; then
				SINR=$SINR""<br />""$SSINR
			else
				SINR=$SSINR
			fi
			if [ $BW -gt 14 ]; then
				BW=$(($(echo $BW) / 5))
			else
				BW=""1.4""
			fi
			BAND=${BAND:1}
			if [ ""$CELLTYPE"" -eq 1 ]; then
				BAND=""B""$(($BAND + 0))"" (Bandwidth: ""$BW"" MHz)""
			else
				BAND=""B""$(($BAND + 0))"" (CA, Bandwidth: ""$BW"" MHz)""
			fi
		fi
		if [ ""$CRAT"" -eq 9 ]; then
			SSINR=$(echo $CCVAL | cut -d, -f11 | grep -o ""[0-9]\{1,3\}"")
			if [ -n ""$SSINR"" ] && [ ""$SSINR"" != ""255"" ]; then
				SSINR=$((($SSINR - 47) / 2))"" dB""
			else
				SSINR=""-""
			fi
			if [ -n ""$SINR"" ]; then
				SINR=$SINR""<br />""$SSINR
			else
				SINR=$SSINR
			fi
			if [ ""$CELLTYPE"" -eq 1 ]; then
				BAND=""n""${BAND:2}"" (Bandwidth: ""$BW"" MHz)""
			else
				BAND=""n""${BAND:2}"" (CA, Bandwidth: ""$BW"" MHz)""
			fi
		fi
		if [ -n ""$LBAND"" ]; then
			LBAND=$LBAND""<br />""$BAND
		else
			LBAND=$BAND
		fi
		if [ -n ""$CHANNEL"" ]; then
			CHANNEL=$CHANNEL"",""$CHAN
		else
			CHANNEL=$CHAN
		fi
		if [ -n ""$PCI"" ]; then
			PCI=$PCI"",""$PCID
		else
			PCI=$PCID
		fi
		if [ ""$CELLTYPE"" -eq 1 ]; then
			RSRP=$(echo $CCVAL | cut -d, -f13)
			RSRQ=$(echo $CCVAL | cut -d, -f14)
			if [ ""$RSRP"" -ne 255 ] && [ ""$RSRQ"" -ne 255 ]; then
				decode_signal
				RSSI=$(rsrp2rssi $RSCPs $BW)
				CSQ_PER=$((100 - (($RSSI + 51) * 100/-62)))""%""
				CSQ=$((($RSSI + 113) / 2))
				CSQ_RSSI=$RSSI"" dBm""
			fi
		fi
	done
fi

if [ -n ""$GTCCDATAy"" ]; then
	CHANNEL=$(echo $GTCCDATAy | cut -d, -f7)
	BW=$(echo $GTCCDATAy | cut -d, -f10)
	decode_bw
	LBAND=""B""$(echo $GTCCDATAy | cut -d, -f9)"" (Bandwidth: ""$BW"" MHz)""
	XUDATA=""""
fi

if [ -n ""$XLDATA"" ]; then
	XLDATA=$(echo ""${XLDATA//[\"" ]/}"")
	XLEC=$(echo $OX | grep -o ""+XLEC: [01],[0-9]\+,[0-5],.*BAND_LTE_[0-9]\{1,2\},[^ ]\+"")
	MODE=""LTE""
	PCI=$(echo $XLDATA | cut -d, -f6)
	PCI=$(printf ""%d"" $PCI)
	CHANNEL=$(echo $XLDATA | cut -d, -f7)
	CHANNEL=$(printf ""%d"" $CHANNEL)
	LBAND=$($ROOTER/chan2band.sh ""$CHANNEL"")
	if [ -n ""$XLEC"" ]; then
		BW=$(echo $XLEC | cut -d, -f3)
		RAWLIST=$(echo $XLEC | grep -o ""BAND_LTE_[0-9]\{1,2\}.\+"" | grep -o ""[,0-9]*"" | tr ',' ' ')
		BANDLIST=""""
		NUMBR=0
		for BAND in $(echo ""$RAWLIST""); do
			if [ -n ""$BAND"" -a ""$BAND"" != ""0"" ]; then
				NUMBR=$(($(echo $NUMBR) + 1))
				if [ -n ""$BANDLIST"" ]; then
					BANDLIST=""$BANDLIST,$BAND""
				else
					BANDLIST=""$BAND""
				fi
			fi
		done
		BAND=""B""$(echo $BANDLIST | cut -d, -f1)
		if [ ""$BAND"" = ""$LBAND"" ]; then
			decode_bw
			LBAND=$LBAND"" (Bandwidth $BW MHz)""
			for JJ in $(seq 2 $NUMBR); do
				BAND=$(echo $BANDLIST | cut -d, -f$JJ)
				if [ -n ""$BAND"" -a ""$BAND"" != ""0"" ]; then
					KK=$(($JJ + 2))
					BW=$(echo $XLEC | cut -d, -f$KK)
					decode_bw
					if [ $BW != ""-"" ]; then
						LBAND=$LBAND""<br />B$BAND (CA, Bandwidth $BW MHz)""
					fi
				fi
			done
		fi
	else
		XLEC=$(echo $OX | grep -o ""+XLEC: 0,[1-9],[0-5]"")
		if [ -n ""$XLEC"" ]; then
			BW=$(echo $XLEC | cut -d, -f3)
			decode_bw
			LBAND=$LBAND"" (Bandwidth $BW MHz)""
		fi
	fi
	RSRP=$(echo $XLDATA | cut -d, -f10)
	if [ $RSRP == 0 ]; then
		RSRP=1
	fi
	RSCP=$(($RSRP - 141))
	ECIO=$(echo $XLDATA | cut -d, -f11)
	ECIO=$((($ECIO / 2) - 20))
	SINR=$(echo $XLDATA | cut -d, -f12 | grep -o ""[-0-9]\{1,4\}"")
	if [ -n ""$SINR"" ] && [ ""$SINR"" != ""255"" ]; then
		SINR=$(($SINR / 2))"" dB""
	fi
	if [ -n ""$BW"" ]; then
		RSSI=$(rsrp2rssi $RSCP $BW)
		CSQ_PER=$((100 - (($RSSI + 51) * 100/-62)))""%""
		CSQ=$((($RSSI + 113) / 2))
		CSQ_RSSI=$RSSI"" dBm""
	fi
fi
if [ -n ""$XUDATA"" ]; then
	MODE=""UMTS""
	CHANNEL=$(echo $XUDATA | cut -d, -f7)
	CHANNEL=${CHANNEL:1:10}
	CHANNEL=$(printf ""%d"" $CHANNEL)
	RSCP=$(echo $XUDATA | cut -d, -f11)
	RSCP=$(($RSCP - 121))
	ECIO=$(echo $XUDATA | cut -d, -f12)
	ECIO=$((($ECIO / 2) - 24))
fi
if [ -n ""$CADATA1"" ]; then
	RSCP=""""
	ECIO=""""
	BW=$(echo $CADATA1 | cut -d, -f13)
	decode_bw
	BWD=$BW
	BW=$(echo $CADATA1 | cut -d, -f14)
	decode_bw
	BWU=$BW
	LBAND=""B""$(echo $CADATA1 | cut -d, -f2)"" (Bandwidth $BWD MHz Down | $BWU MHz Up)""
	CHANNEL=$(echo $CADATA1 | cut -d, -f11)
	MODE=""LTE""
	CRAT=""4""
	RSRP=$(echo $CADATA1 | cut -d, -f8)
	RSRQ=$(echo $CADATA1 | cut -d, -f9)
	if [ ""$RSRP"" -ne 255 ] && [ ""$RSRQ"" -ne 255 ]; then
		decode_signal
		RSSI=$(rsrp2rssi $RSCPs $BWD)
		CSQ_PER=$((100 - (($RSSI + 51) * 100/-62)))""%""
		CSQ=$((($RSSI + 113) / 2))
		CSQ_RSSI=$RSSI"" dBm""
	else
		RSRP=""-""
		RSRQ=""-""
	fi
	PCI=$(echo $CADATA1 | cut -d, -f7)
fi
if [ -n ""$CADATA2"" ]; then
	CADATA2=$(echo ""${CADATA2//[ ]/}"")
	for CAVAL in $(echo ""$CADATA2""); do
		BW=$(echo $CAVAL | cut -d, -f9)
		decode_bw
		BWD=$BW
		BW=$(echo $CAVAL | cut -d, -f10)
		decode_bw
		BWU=$BW
		LBAND=$LBAND""<br />B""$(echo $CAVAL | cut -d, -f2)
		if [ $BWU = ""-"" ]; then
			LBAND=$LBAND"" (CA, Bandwidth: ""$BWD"" MHz)""
		else
			LBAND=$LBAND"" (CA, Bandwidth $BWD MHz Down | $BWU MHz Up)""
		fi
		CHAN=$(echo $CAVAL | cut -d, -f7)
		CHANNEL=$(echo ""$CHANNEL"", ""$CHAN"")
		PCIX=$(echo $CAVAL | cut -d, -f3)
		PCI=$(echo ""$PCI"", ""$PCIX"")
	done
fi
if [ -n ""$CADATA3"" ]; then
	CADATA3=$(echo ""${CADATA3//[ ]/}"")
	for CAVAL in $(echo ""$CADATA3""); do
		BAND=$(echo $CAVAL | cut -d, -f3)
		BAND=${BAND:1}
		PCIX=$(echo $CAVAL | cut -d, -f4)
		PCI=$(echo ""$PCI"", ""$PCIX"")
		CHAN=$(echo $CAVAL | cut -d, -f5)
		CHANNEL=$(echo ""$CHANNEL"", ""$CHAN"")
		BW=$(echo $CAVAL | cut -d, -f6)
		if [ $BW -gt 14 ]; then
			BW=$(($(echo $BW) / 5))
		else
			BW=""1.4""
		fi
		LBAND=$LBAND""<br />B""$(($BAND + 0))"" (CA, Bandwidth: ""$BW"" MHz)""
	done
fi

MTEMP=$(echo $OX | grep -o ""+MTSM: [0-9.]\{1,5\}"")
if [ -n ""$MTEMP"" ]; then
	CTEMP=$(echo $MTEMP | grep -o ""[0-9.]\{1,5\}"")$(printf ""\xc2\xb0"")""C""
fi

MODTYPE=""9""
MRAT=$(echo $OX | grep -o ""+GTRAT: [0-9]\{1,2\}"" | grep -o ""[0-9]\{1,2\}"")
if [ -n ""$MRAT"" ]; then
# If user inserted different SIM card, the Rat order will recover to default value (AT Commands manual)
	case $MRAT in
	""2"" )
		NETMODE=""5"" ;;
	""3"" )
		NETMODE=""7"" ;;
	""14"" )
		NETMODE=""9"" ;;
	""17""|""20"" )
		NETMODE=""8"" ;;
	* )
		NETMODE=""1"" ;;
	esac
fi
XACT=$(echo $OX | grep -o ""+XACT: [0-9]"" | grep -o ""[0-9]"")
if [ -n ""$XACT"" ]; then
	PREF=$(echo $OX | grep -o ""+XACT: [0-9],[0-9]"" | grep -o "",[0-9]"")
	case $XACT in
	""1"" )
		NETMODE=""5"" ;;
	""2"" )
		NETMODE=""7"" ;;
	""4"" )
		if [ ""$PREF"" = "",1"" ]; then
			NETMODE=""4""
		else
			NETMODE=""6""
		fi ;;
	* )
		NETMODE=""6"" ;;
	esac
fi
CMODE=$(uci -q get modem.modem$CURRMODEM.cmode)
if [ ""$CMODE"" = 0 ]; then
	NETMODE=""10""
fi
if [ -z ""$SINR"" ]; then
	SINR=""-""
fi

{
	echo 'CSQ=""'""$CSQ""'""'
	echo 'CSQ_PER=""'""$CSQ_PER""'""'
	echo 'CSQ_RSSI=""'""$CSQ_RSSI""'""'
	echo 'ECIO=""'""$ECIO""'""'
	echo 'RSCP=""'""$RSCP""'""'
	echo 'ECIO1=""'""$ECIO1""'""'
	echo 'RSCP1=""'""$RSCP1""'""'
	echo 'MODE=""'""$MODE""'""'
	echo 'MODTYPE=""'""$MODTYPE""'""'
	echo 'NETMODE=""'""$NETMODE""'""'
	echo 'CHANNEL=""'""$CHANNEL""'""'
	echo 'LBAND=""'""$LBAND""'""'
	echo 'PCI=""'""$PCI""'""'
	echo 'TEMP=""'""$CTEMP""'""'
	echo 'SINR=""'""$SINR""'""'
}  > /tmp/signal$CURRMODEM.file
if [ -n ""$COPS_MCC"" ]; then
	echo 'COPS_MCC=""'""$COPS_MCC""'""' >> /tmp/signal$CURRMODEM.file
	echo 'COPS_MNC=""'""$COPS_MNC""'""' >> /tmp/signal$CURRMODEM.file
fi
if [ -n ""$COPX"" ]; then
	echo 'COPS=""'""$COPX""'""' >> /tmp/signal$CURRMODEM.file
fi
"
QsptNn7U,Barrows rooms - test 2,WarPie90,Delphi,Saturday 27th of May 2023 08:41:02 PM CDT,"program new;
{$I SRL/osr.simba}


var
  tpa,room,other,door,approx: TPointArray;
  rooms, otherRooms, atpa: T2DPointArray;
  doors: TBoxArray;
  m: TMufasaBitmap;
  i: Int32;
begin
  srl.FindColors(tpa, CTS2(1776416, 2, 0.2, 0.2), [52,117,553,450]);

  //filter pixel noise
  atpa := tpa.Cluster(2);
  atpa.FilterSize(30, __GT__);
  tpa := atpa.Merge();
  (* you want to filter out XPBar as well*)

  // get the inverted area:
  tpa := tpa.Grow(10);
  tpa := tpa.Invert([52,117,553,450]);
  approx := tpa.Erode(50).Grow(40);

  // extract rooms
  room := tpa.PointsInRangeOf(approx, 0, 35);
  other := ClearTPAFromTPA(TPA, room);

  otherRooms := other.Cluster(2);
  otherRooms.FilterSize(300, __GT__);
  rooms := otherRooms + room.Cluster(2);
  SortATPASize(rooms, True);


  //let's push back the mainroom
  rooms[0] := ClearTPAFromTPA(rooms[0], otherRooms.Merge().Grow(30));

  // extract approximate door areas
  for i:=1 to High(rooms) do
  begin
    door := rooms[0].PointsInRangeOf(rooms[i], 0, 40);
    door += rooms[i].PointsInRangeOf(rooms[0], 0, 40);
    if Length(door) > 10 then
      doors += door.Bounds();
  end;


  m.Init();
  m.FromClient();
  m.DrawATPA(rooms);

  m.DrawTPA(rooms[0].ConvexHull().Connect(), 255);
  m.DrawBoxes(doors, $00ff00);

  m.Debug();
end."
CFfQ4s7X,Demo Component (2),Zgragselus,C++,Saturday 27th of May 2023 07:46:41 PM CDT,"#include ""SkyeCuillin/SkyeCuillin.h""

class DemoController : public Engine::Component
{
public:
	float mValue;

	virtual bool Editor(std::string& prev, std::string& next)
	{
		SetupContext();

		return Engine::Component::DefaultEditor(this, &Reflection, prev, next);
	}

	virtual void Start()
	{
		mValue = 0.0f;
	}

	virtual void Update(float deltaTime)
	{
		mValue += 1.0f / 60.0f;
		if (mValue > 1.0f)
		{
			mValue -= 1.0f;
		}

		printf(""%f %f %f\n"",
			this->mGameObject->GetEntity()->Transformation().GetTranslation().x,
			this->mGameObject->GetEntity()->Transformation().GetTranslation().y,
			this->mGameObject->GetEntity()->Transformation().GetTranslation().z);
	}

	virtual std::string Serialize()
	{
		return Engine::Component::DefaultSerialize(this, &Reflection);
	}

	virtual void Deserialize(const std::string& data)
	{
		Engine::Component::DefaultDeserialize(this, &Reflection, data);
	}

	REFLECT()
};

REFLECT_STRUCT_BEGIN(DemoController)
REFLECT_STRUCT_MEMBER(mValue)
REFLECT_STRUCT_END()

SKYE_CUILLIN_COMPONENT(DemoController)"
P0PgMJcq,2023-05-27_stats.json,rdp_snitch,JSON,Saturday 27th of May 2023 07:15:08 PM CDT,"{
  ""ip"": {
    ""194.165.16.78"": 2,
    ""162.241.158.17"": 25,
    ""181.118.174.215"": 8,
    ""87.251.64.110"": 4,
    ""120.55.14.18"": 2,
    ""194.165.16.11"": 2,
    ""45.146.55.245"": 1,
    ""193.37.69.89"": 3,
    ""87.251.75.145"": 3,
    ""185.170.144.3"": 2,
    ""167.94.138.33"": 1,
    ""62.233.50.179"": 1,
    ""47.119.119.104"": 5,
    ""207.244.127.136"": 2,
    ""45.227.254.26"": 2,
    ""45.56.67.13"": 4,
    ""103.173.226.163"": 16,
    ""87.251.75.120"": 1,
    ""94.198.41.84"": 2,
    ""91.132.139.117"": 1,
    ""94.198.41.116"": 1,
    ""20.168.203.232"": 1,
    ""98.143.255.25"": 3,
    ""5.62.61.245"": 1,
    ""5.62.63.241"": 2,
    ""213.6.148.83"": 1,
    ""194.165.16.76"": 2,
    ""43.156.9.187"": 30,
    ""205.210.31.215"": 3,
    ""194.165.16.73"": 4,
    ""45.135.201.65"": 2,
    ""103.195.236.137"": 9,
    ""5.62.20.45"": 1,
    ""20.169.241.254"": 8,
    ""162.142.125.223"": 1,
    ""47.104.79.233"": 2,
    ""194.26.135.80"": 2,
    ""185.11.61.199"": 2,
    ""167.248.133.51"": 1,
    ""205.210.31.167"": 3,
    ""92.51.2.34"": 1
  },
  ""asn"": {
    ""AS48721"": 10,
    ""AS19871"": 25,
    ""AS23416"": 8,
    ""AS48080"": 6,
    ""AS37963"": 9,
    ""AS62240"": 1,
    ""AS208091"": 7,
    ""AS398324"": 2,
    ""AS57523"": 5,
    ""AS30633"": 2,
    ""AS267784"": 2,
    ""AS63949"": 4,
    ""AS140826"": 16,
    ""AS9009"": 4,
    ""AS8075"": 9,
    ""AS3367"": 3,
    ""AS198605"": 4,
    ""AS12975"": 1,
    ""AS132203"": 30,
    ""AS396982"": 6,
    ""AS44486"": 2,
    ""AS140827"": 9,
    ""AS398722"": 1,
    ""AS209588"": 1
  },
  ""isp"": {
    ""Flyservers S.A."": 12,
    ""Unified Layer"": 25,
    ""Telefonica Data Chile S.A."": 8,
    ""Dmitriy Panchenko"": 6,
    ""Hangzhou Alibaba Advertising Co"": 4,
    ""VPN"": 1,
    ""XHOSTIS"": 3,
    ""XHOST-INTERNET-SOLUTIONS"": 4,
    ""Censys, Inc."": 3,
    ""Chang Way Technologies Co. Limited"": 5,
    ""Addresses CNNIC"": 5,
    ""Leaseweb USA, Inc."": 2,
    ""Akamai Technologies, Inc."": 4,
    ""Inter Group Viet NAM Joint Stock Company"": 16,
    ""M247 Europe SRL"": 4,
    ""Microsoft Corporation"": 9,
    ""Xplornet Communications Inc."": 3,
    ""AVAST Software s.r.o."": 4,
    ""Palestine Telecommunications Company"": 1,
    ""Shenzhen Tencent Computer Systems Company Limited"": 30,
    ""Google LLC"": 6,
    ""LIVINGBOTS"": 2,
    ""AZ Viet NAM Communications Technology Company Limited"": 9,
    ""ATK Network"": 1
  },
  ""org"": {
    ""Flyservers S.A"": 10,
    ""WEBSITEWELCOME.COM"": 25,
    ""CTC. CORP S.A. (TELEFONICA EMPRESAS)"": 8,
    ""Xhost Internet Solutions"": 11,
    ""Aliyun Computing Co., LTD"": 9,
    ""VPN-Consumer-US"": 1,
    ""Xhostis"": 2,
    ""Censys, Inc"": 1,
    ""Sierra LLC"": 1,
    ""Leaseweb USA, Inc."": 2,
    ""UAB Host Baltic"": 2,
    ""Linode"": 4,
    ""INTERDATA"": 16,
    ""M247 LTD"": 4,
    ""Microsoft Azure Cloud (eastus)"": 9,
    ""Xplornet Communications Inc"": 3,
    ""AVAST cloud"": 1,
    ""AVAST Software s.r.o."": 2,
    ""Palestine Telecommunications Company"": 1,
    ""Tencent Cloud Computing"": 30,
    ""Palo Alto Networks, Inc"": 6,
    ""Unknown"": 3,
    ""DULIEUAZ"": 9,
    ""Privax LTD"": 1,
    ""Censys Inc"": 1,
    ""Chang Way Technologies Co. Limited"": 2,
    ""Starcrecium Limited"": 2,
    ""Censys, Inc."": 1
  },
  ""regionName"": {
    ""Kaunas"": 10,
    ""Utah"": 25,
    ""Santiago Metropolitan"": 8,
    ""Moscow"": 7,
    ""Zhejiang"": 2,
    ""Georgia"": 1,
    ""North Holland"": 5,
    ""England"": 4,
    ""Michigan"": 3,
    ""Guangdong"": 5,
    ""Virginia"": 11,
    ""Vilnius"": 2,
    ""Texas"": 4,
    ""Ho Chi Minh"": 25,
    ""Vienna"": 4,
    ""New Brunswick"": 3,
    ""Hlavni mesto Praha"": 1,
    ""Annaba"": 2,
    ""Gaza"": 1,
    ""North West"": 30,
    ""California"": 6,
    ""Bremen"": 2,
    ""Brussels Capital"": 1,
    ""Shandong"": 2,
    ""Chechnya"": 2,
    ""Perm Krai"": 1
  },
  ""country"": {
    ""Lithuania"": 12,
    ""United States"": 50,
    ""Chile"": 8,
    ""Russia"": 10,
    ""China"": 9,
    ""Netherlands"": 5,
    ""United Kingdom"": 4,
    ""Vietnam"": 25,
    ""Austria"": 4,
    ""Canada"": 3,
    ""Czechia"": 1,
    ""Algeria"": 2,
    ""Palestine"": 1,
    ""Singapore"": 30,
    ""Germany"": 2,
    ""Belgium"": 1
  },
  ""account"": {
    ""Test"": 12,
    ""hello"": 126,
    ""Domain"": 8,
    ""(empty)"": 4,
    ""Administr"": 11,
    ""mQEgzbHgR"": 1,
    ""XPUyky"": 1,
    ""iAqURJ"": 1,
    ""CSdKLjZZt"": 1,
    ""anpjbc"": 1,
    ""muOHdS"": 1
  },
  ""keyboard"": {
    ""Unknown"": 167
  },
  ""client_build"": {
    ""Unknown"": 167
  },
  ""client_name"": {
    ""Unknown"": 167
  },
  ""ip_type"": {
    ""Unknown"": 73,
    ""hosting"": 83,
    ""hosting & proxy"": 7,
    ""proxy"": 4
  }
}"
pKaLtyRD,dc_base,sawczakl,Python,Saturday 27th of May 2023 06:07:51 PM CDT,"lifespan = 80
age = int(input('Enter your age: '))

# Ask if they smoke. Notice that this is not int(input()) because we're not asking for a number.
smokes = input('Do you smoke? (Y/N): ').strip().upper()

# If they answered Y, they lose 10 years. Otherwise they lose 0 years.
if smokes == 'Y':
  smoking_factor = 10
else:
  smoking_factor = 0

remaining = lifespan - age - smoking_factor
print(f'You have {remaining} years left to live.')
"
zgP6uEN1,ÈÇÄÊÇ®‰∏ÄËµ∑ÁúãÔºöÈÖ∑ÊàëÈü≥‰πêappÂÆòÊñπ‰∏ãËΩΩ 175.7M / v10.4.0.0Êõ¥Êñ∞Êó∂Èó¥Ôºö2023/05/24 ‰∏ãËΩΩ,xiaomianao666,JavaScript,Saturday 27th of May 2023 05:34:45 PM CDT,Êµ∑ÈòîËßÜÁïåËßÑÂàôÂàÜ‰∫´ÔºåÂΩìÂâçÂàÜ‰∫´ÁöÑÊòØÔºö‰∫åÁ∫ßÈ°µÈù¢ËØ¶ÊÉÖÔø•page_detailÔø•ÈÖ∑ÊàëÈü≥‰πêappÂÆòÊñπ‰∏ãËΩΩ 175.7M / v10.4.0.0Êõ¥Êñ∞Êó∂Èó¥Ôºö2023/05/24 ‰∏ãËΩΩ@@
u3HHd90U,maps SQL,peterisgb,SQL,Saturday 27th of May 2023 05:33:23 PM CDT,"CREATE TABLE IF NOT EXISTS `maphouses` (
 `id` int(11) NOT NULL AUTO_INCREMENT,
 `houseID` int(11) NOT NULL,
 `houseOWNER` int(11) NOT NULL,
 `houseDESC` varchar(255) NOT NULL,
 `housesize` int(11) NOT NULL,
 `allowguests` int(11) NOT NULL,
 `itemslot1` int(11) NOT NULL,
 `itemslot2` int(11) NOT NULL,
 `itemslot3` int(11) NOT NULL,
 `itemslot4` int(11) NOT NULL,
 `itemslot5` int(11) NOT NULL,
 `itemslot6` int(11) NOT NULL,
 `itemslot7` int(11) NOT NULL,
 `itemslot8` int(11) NOT NULL,
 `itemslot9` int(11) NOT NULL,
 `itemslot10` int(11) NOT NULL,
 `itemslot11` int(11) NOT NULL,
 `itemslot12` int(11) NOT NULL,
 `itemslot13` int(11) NOT NULL,
 `itemslot14` int(11) NOT NULL,
 `itemslot15` int(11) NOT NULL,
 `itemslot16` int(11) NOT NULL,
 `itemslot17` int(11) NOT NULL,
 `itemslot18` int(11) NOT NULL,
 `itemslot19` int(11) NOT NULL,
 `itemslot20` int(11) NOT NULL,
 PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=1 ;


--
-- Table structure for table `mapmission`
--

CREATE TABLE IF NOT EXISTS `mapmission` (
 `id` int(11) NOT NULL AUTO_INCREMENT,
 `locationy` int(11) NOT NULL DEFAULT '0',
 `locationx` int(11) NOT NULL DEFAULT '0',
 `missionname` text,
 `missionlength` int(11) NOT NULL DEFAULT '1',
 `missionlink` text,
 `missiontext` text,
 `missionnext` text,
 `locationynext` int(11) NOT NULL DEFAULT '0',
 `locationxnext` int(11) NOT NULL DEFAULT '0',
 `cash` int(11) NOT NULL DEFAULT '0',
 `crystals` int(11) NOT NULL DEFAULT '0',
 `rewardnumber` int(11) NOT NULL DEFAULT '0',
 PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=1 ;



-- --------------------------------------------------------

--
-- Table structure for table `maptowns`
--

CREATE TABLE IF NOT EXISTS `maptowns` (
 `id` int(11) NOT NULL AUTO_INCREMENT,
 `townID` varchar(20) NOT NULL,
 `locationx` int(11) NOT NULL,
 `locationy` int(11) NOT NULL,
 PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=2 ;

--
-- Dumping data for table `maptowns`
--

INSERT INTO `maptowns` (`id`, `townID`, `locationx`, `locationy`) VALUES
(2, 'Launceston', 5, 5);

-- --------------------------------------------------------

--
-- Table structure for table `mapusers`
--

CREATE TABLE IF NOT EXISTS `mapusers` (
 `missionID` int(11) NOT NULL DEFAULT '0',
 `userID` int(11) NOT NULL DEFAULT '0',
 `completed` int(11) NOT NULL DEFAULT '0'
) ENGINE=InnoDB DEFAULT CHARSET=latin1;"
NWYpNgXt,movetown1.php,peterisgb,PHP,Saturday 27th of May 2023 05:32:18 PM CDT,"<?php
$locationmxy =""20"";
$locationmxx =""20"";
include ""globals.php"";
$tresder=(int) rand(100,999);
if($ir['jail'] or $ir['hospital']) { 
   echo ""This page cannot be accessed while in jail or hospital."";
   $h->endpage();
   exit;
}
$locationx = $ir['locationxt'];
$locationy = $ir['locationyt'];
$moves = $ir['moves'];
$action = ( array_key_exists( 'action', $_GET) ? $_GET['action'] : """" );
switch ($action) {
   case 'moven': do_move1_north(); break;
   case 'movew': do_move1_west(); break;
   case 'movee': do_move1_east(); break;
   case 'moves': do_move1_south(); break;
   case 'leave': do_leave(); break;
   case 'entermainhouse': enter_main_house(); break;
   case 'house': enter_house(); break;
   case 'buyhouse': buy_house(); break; 
   case 'buyhousedo': buy_house_do(); break;
   case 'sellhouse': sell_house(); break; 
   case 'sellhousedo': sell_house_do(); break;
   case 'updatedesc': update_desc(); break;
   case 'updatedescdo': udpate_desc_do(); break;
   case 'allowguests': allow_guests(); break;
   case 'allowguestsdo': allow_guests_do(); break;
   case 'shop': enter_shop(); break;
   case 'church': enter_church(); break;
   case 'takeholywater': take_holywater(); break;
   case 'leaveholywater': leave_holywater(); break;
   case 'churchcontinue': church_continue(); break;
   case 'staff': do_staff(); break;
   case 'staffmoveuser': staff_move_user(); break;
   case 'staffmoveuserdo': staff_move_user_do(); break;
   case 'staffmoveusercom': staff_move_user_com(); break;
   default: 

$town = $db->query(""SELECT * FROM maptowns"");
while($t = $db->fetch_row($town)) {
   $name = $t['townID'];
}
echo ""<br /><hr /><h3>In the Town of $name</h3><br /><a href=movetown1.php?action=leave>Back to Maps</a>"";

if($ir['user_level'] == 2)
{
echo ""<br /><a href=movetown1.php?action=staff>Staff Options</a><br />"";
}
echo ""
<small>Please Note that most images are only temporary until system is completed</small>
<table width='95%'>
<tr><td></td>
<td align='center'>
</td><tr>
<tr><td align='center' valign='top' width='100'><hr />"";

if ($locationy == 0) { $northstop=""<img src='/images/no.png' width='44' height='44'>""; } else { $northstop=""<a href='movetown1.php?action=moven'><img src='/images/up.png'></a>""; }
if ($locationy == $locationmxy) { $eaststop=""<img src='/images/no.png' width='44' height='44'>""; } else { $eaststop=""<a href='movetown1.php?action=movee'><img src='/images/right.png'></a>""; }
if ($locationx == $locationmxx) { $southstop=""<img src='/images/no.png' width='44' height='44'>""; } else { $southstop=""<a href='movetown1.php?action=moves'><img src='/images/down.png'></a>""; }
if ($locationx == 0) { $weststop=""<img src='/images/no.png' width='44' height='44'>""; } else { $weststop=""<a href='movetown1.php?action=movew'><img src='/images/left.png'></a>""; }

if ($moves <=  0) { echo ""No Moves, Nav Disabled""; } else { 
echo ""
Your Map Location: <font color='blue' size='3'>
<font color='green'>"".$locationx.""</font>, 
<font color='red'>"".$locationy.""</font><br /> 
You have <font color='yellow'>"".$moves.""</font> left.</font><hr />
<table>
<tr>
 <td></td>
 <td></td>
 <td align='center'><font color='red'><b>N</b></font></td>
 <td></td>
 <td></td>
</tr>
<tr>
 <td></td>
 <td align='center'></td>
 <td align='center'>"".$northstop.""</td>
 <td align='center'></td>
 <td></td>
</tr>
<tr>
 <td><font color='green'><b>W</b></font></td>
 <td align='center'>"".$weststop.""</td>
 <td align='center'><b>+</b></td>
 <td align='center'>"".$eaststop.""</td>
 <td><font color='green'><b>E</b></font></td>
</tr>
<tr>
 <td></td>
 <td align='center'></td>
 <td align='center'>"".$southstop.""</td>
 <td align='center'></td>
 <td></td>
</tr>
<tr>
 <td></td>
 <td></td>
 <td align='center'><font color='red'><b>S</b></font></td>
 <td></td>
 <td></td>
</tr>
</table>""; }
echo ""<hr /><h4>Misc</h4>"";
$ulocation = array();
$ulocationq = $db->query(""SELECT * FROM users"");
while ($r=$db->fetch_row($ulocationq)){
       $username = $r['username'];
       $ulocation[$r['userid']] = array();
       $ulocation[$r['userid']][0] = $r['locationyt'];
       $ulocation[$r['userid']][1] = $r['locationxt'];
}

if (($locationy == 0) && ($locationx == 0)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 0) && ($locationx == 1)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 0) && ($locationx == 2)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 0) && ($locationx == 3)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 0) && ($locationx == 4)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 0) && ($locationx == 5)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 0) && ($locationx == 6)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 0) && ($locationx == 7)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 0) && ($locationx == 8)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 0) && ($locationx == 9)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 0) && ($locationx == 10)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 0) && ($locationx == 11)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 0) && ($locationx == 12)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 0) && ($locationx == 13)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 0) && ($locationx == 14)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 0) && ($locationx == 15)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 0) && ($locationx == 16)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 0) && ($locationx == 17)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 0) && ($locationx == 18)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 0) && ($locationx == 19)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }

if (($locationy == 2) && ($locationx == 0)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 2) && ($locationx == 1)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 2) && ($locationx == 2)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 2) && ($locationx == 4)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 2) && ($locationx == 5)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 2) && ($locationx == 6)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 2) && ($locationx == 7)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 2) && ($locationx == 8)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 2) && ($locationx == 9)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 2) && ($locationx == 12)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 2) && ($locationx == 13)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 2) && ($locationx == 14)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 2) && ($locationx == 15)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 2) && ($locationx == 16)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 2) && ($locationx == 18)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 2) && ($locationx == 19)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }

if (($locationy == 3) && ($locationx == 0)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 3) && ($locationx == 1)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 3) && ($locationx == 2)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 3) && ($locationx == 4)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 3) && ($locationx == 5)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 3) && ($locationx == 6)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 3) && ($locationx == 7)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 3) && ($locationx == 8)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 3) && ($locationx == 9)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 3) && ($locationx == 12)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 3) && ($locationx == 13)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 3) && ($locationx == 14)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 3) && ($locationx == 15)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 3) && ($locationx == 16)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 3) && ($locationx == 18)) { echo ""<h3>Shop</h3><a href='movetown1.php?action=shop'><u>CLOSED</u></a><br />""; }
if (($locationy == 3) && ($locationx == 19)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }

if (($locationy == 5) && ($locationx == 0)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 5) && ($locationx == 1)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 5) && ($locationx == 2)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 5) && ($locationx == 4)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 5) && ($locationx == 5)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 5) && ($locationx == 6)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 5) && ($locationx == 7)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 5) && ($locationx == 8)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 5) && ($locationx == 9)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 5) && ($locationx == 12)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 5) && ($locationx == 13)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 5) && ($locationx == 14)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 5) && ($locationx == 15)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 5) && ($locationx == 16)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 5) && ($locationx == 18)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 5) && ($locationx == 19)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }

if (($locationy == 6) && ($locationx == 0)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 6) && ($locationx == 1)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 6) && ($locationx == 2)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 6) && ($locationx == 4)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 6) && ($locationx == 5)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 6) && ($locationx == 6)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 6) && ($locationx == 7)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 6) && ($locationx == 8)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 6) && ($locationx == 9)) { echo ""<h3>Church</h3><a href='movetown1.php?action=church'><u>Check it Out</u></a><br />""; }
if (($locationy == 6) && ($locationx == 12)) { echo ""<h3>Shop</h3><a href='movetown1.php?action=shop'><u>CLOSED</u></a><br />""; }
if (($locationy == 6) && ($locationx == 13)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 6) && ($locationx == 14)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 6) && ($locationx == 15)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 6) && ($locationx == 16)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 6) && ($locationx == 18)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 6) && ($locationx == 19)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }

if (($locationy == 8) && ($locationx == 0)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 8) && ($locationx == 1)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 8) && ($locationx == 2)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 8) && ($locationx == 18)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 8) && ($locationx == 19)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }

if (($locationy == 9) && ($locationx == 0)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 9) && ($locationx == 1)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 9) && ($locationx == 2)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 9) && ($locationx == 18)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 9) && ($locationx == 19)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }

if (($locationy == 11) && ($locationx == 0)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 11) && ($locationx == 1)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 11) && ($locationx == 2)) { echo ""<h3>Shop</h3><a href='movetown1.php?action=shop'><u>CLOSED</u></a><br />""; }
if (($locationy == 11) && ($locationx == 18)) { echo ""<h3>Shop</h3><a href='movetown1.php?action=shop'><u>CLOSED</u></a><br />""; }
if (($locationy == 11) && ($locationx == 19)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }

if (($locationy == 12) && ($locationx == 0)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 12) && ($locationx == 1)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 12) && ($locationx == 2)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 12) && ($locationx == 18)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 12) && ($locationx == 19)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }

if (($locationy == 14) && ($locationx == 0)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 14) && ($locationx == 1)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 14) && ($locationx == 2)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 14) && ($locationx == 18)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 14) && ($locationx == 19)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }

if (($locationy == 15) && ($locationx == 0)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 15) && ($locationx == 1)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 15) && ($locationx == 2)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 15) && ($locationx == 18)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 15) && ($locationx == 19)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }

if (($locationy == 17) && ($locationx == 0)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 17) && ($locationx == 1)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 17) && ($locationx == 2)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 17) && ($locationx == 4)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 17) && ($locationx == 5)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 17) && ($locationx == 6)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 17) && ($locationx == 7)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 17) && ($locationx == 8)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 17) && ($locationx == 9)) { echo ""<h3>Shop</h3><a href='movetown1.php?action=shop'><u>Closed</u></a><br />""; }
if (($locationy == 17) && ($locationx == 12)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 17) && ($locationx == 13)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 17) && ($locationx == 14)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 17) && ($locationx == 15)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 17) && ($locationx == 16)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 17) && ($locationx == 18)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 17) && ($locationx == 19)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }

if (($locationy == 18) && ($locationx == 0)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 18) && ($locationx == 1)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 18) && ($locationx == 2)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 18) && ($locationx == 4)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 18) && ($locationx == 5)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 18) && ($locationx == 6)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 18) && ($locationx == 7)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 18) && ($locationx == 8)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 18) && ($locationx == 9)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 18) && ($locationx == 12)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 18) && ($locationx == 13)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 18) && ($locationx == 14)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 18) && ($locationx == 15)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 18) && ($locationx == 16)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 18) && ($locationx == 18)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }
if (($locationy == 18) && ($locationx == 19)) { echo ""<h3>House No."".$locationx."""".$locationy.""</h3><a href='movetown1.php?action=house'><u>Enter</u></a><br />""; }

$i = 1;
foreach($ulocation as $loc)
{
       if (($locationy == $loc[1]) && ($locationx == $loc[0]) && ($i != $user_id)) { 
               echo ""<h3>Another User is Here.</h3>
               <a href='viewuser.php?u="".$i.""'>View user ID "".$i.""</a><br />
               <a href='mailbox.php?action=compose&ID="".$i.""'>Mail user ID "".$i.""</a><br />

""; 
       }
       $i++;
}
echo ""<hr />
<u><b>Legend</b></u><br />
<table width='110px'>
<tr>
 <td>You</td>
 <td> - </td>
 <td><img src='/images/punki.jpg' width='20' height='20'></td>
</tr>
<tr>
 <td>Users</td>
 <td> - </td>
 <td><img src='/images/cop.jpg' width='20' height='20'></td>
</tr>
<tr>
 <td>House</td>
 <td> - </td>
 <td><img src='/images/grasshouse.png' width='20' height='20'></td>
</tr>
<tr>
 <td>Shops</td>
 <td> - </td>
 <td><img src='/images/pub.png' width='20' height='20'></td>
</tr>
<tr>
 <td>Church</td>
 <td> - </td>
 <td><img src='/images/church.png' width='20' height='20'></td>
</tr>
</table>
<hr />"";
echo ""</td><td width='600' align='center'><small>("".$locationmxy.""x"".$locationmxx."" Grid Currently.)</small><br />"";
define('HEIGHT', $locationmxx);
define('WIDTH',  $locationmxy);
define('GRASS',   0);
define('PATH', 1);
define('MISSION',   2);
define('YOU',   3);
define('USERS',     4);
define('TREE',    5);
define('ROCK',    6);
define('CITY',    7);
define('CHURCH', 8);
define('PUB',     9);
define('HOUSE',   10);

// Create blank map array [y][x]
$map = array_fill(0, HEIGHT, array_fill(0, WIDTH, GRASS));
$i = 1;
foreach($ulocation as $loc)
{
       if($i != $user_id)
       {
               $map[$loc[1]][$loc[0]] = USERS;
       }
       $i++;
}
$map[0][0] = HOUSE;
$map[0][1] = HOUSE;
$map[0][2] = HOUSE;
$map[0][3] = HOUSE;
$map[0][4] = HOUSE;
$map[0][5] = HOUSE;
$map[0][6] = HOUSE;
$map[0][7] = HOUSE;
$map[0][8] = HOUSE;
$map[0][9] = HOUSE;
$map[0][10] = HOUSE;
$map[0][11] = HOUSE;
$map[0][12] = HOUSE;
$map[0][13] = HOUSE;
$map[0][14] = HOUSE;
$map[0][15] = HOUSE;
$map[0][16] = HOUSE;
$map[0][17] = HOUSE;
$map[0][18] = HOUSE;
$map[0][19] = HOUSE;

$map[2][0] = HOUSE;
$map[2][1] = HOUSE;
$map[2][2] = HOUSE;
$map[2][4] = HOUSE;
$map[2][5] = HOUSE;
$map[2][6] = HOUSE;
$map[2][7] = HOUSE;
$map[2][8] = HOUSE;
$map[2][9] = HOUSE;
$map[2][12] = HOUSE;
$map[2][12] = HOUSE;
$map[2][13] = HOUSE;
$map[2][14] = HOUSE;
$map[2][15] = HOUSE;
$map[2][16] = HOUSE;
$map[2][18] = HOUSE;
$map[2][19] = HOUSE;

$map[3][0] = HOUSE;
$map[3][1] = HOUSE;
$map[3][2] = HOUSE;
$map[3][4] = HOUSE;
$map[3][5] = HOUSE;
$map[3][6] = HOUSE;
$map[3][7] = HOUSE;
$map[3][8] = HOUSE;
$map[3][9] = HOUSE;
$map[3][12] = HOUSE;
$map[3][12] = HOUSE;
$map[3][13] = HOUSE;
$map[3][14] = HOUSE;
$map[3][15] = HOUSE;
$map[3][16] = HOUSE;
$map[3][18] = PUB;
$map[3][19] = HOUSE;

$map[5][0] = HOUSE;
$map[5][1] = HOUSE;
$map[5][2] = HOUSE;
$map[5][4] = HOUSE;
$map[5][5] = HOUSE;
$map[5][6] = HOUSE;
$map[5][7] = HOUSE;
$map[5][8] = HOUSE;
$map[5][9] = HOUSE;
$map[5][12] = HOUSE;
$map[5][12] = HOUSE;
$map[5][13] = HOUSE;
$map[5][14] = HOUSE;
$map[5][15] = HOUSE;
$map[5][16] = HOUSE;
$map[5][18] = HOUSE;
$map[5][19] = HOUSE;

$map[6][0] = HOUSE;
$map[6][1] = HOUSE;
$map[6][2] = HOUSE;
$map[6][4] = HOUSE;
$map[6][5] = HOUSE;
$map[6][6] = HOUSE;
$map[6][7] = HOUSE;
$map[6][8] = HOUSE;
$map[6][9] = CHURCH;
$map[6][12] = PUB;
$map[6][12] = HOUSE;
$map[6][13] = HOUSE;
$map[6][14] = HOUSE;
$map[6][15] = HOUSE;
$map[6][16] = HOUSE;
$map[6][18] = HOUSE;
$map[6][19] = HOUSE;

$map[8][0] = HOUSE;
$map[8][1] = HOUSE;
$map[8][2] = HOUSE;
$map[8][18] = HOUSE;
$map[8][19] = HOUSE;

$map[9][0] = HOUSE;
$map[9][1] = HOUSE;
$map[9][2] = HOUSE;
$map[9][18] = HOUSE;
$map[9][19] = HOUSE;

$map[11][0] = HOUSE;
$map[11][1] = HOUSE;
$map[11][2] = PUB;
$map[11][18] = PUB;
$map[11][19] = HOUSE;

$map[12][0] = HOUSE;
$map[12][1] = HOUSE;
$map[12][2] = HOUSE;
$map[12][18] = HOUSE;
$map[12][19] = HOUSE;

$map[14][0] = HOUSE;
$map[14][1] = HOUSE;
$map[14][2] = HOUSE;
$map[14][18] = HOUSE;
$map[14][19] = HOUSE;

$map[15][0] = HOUSE;
$map[15][1] = HOUSE;
$map[15][2] = HOUSE;
$map[15][18] = HOUSE;
$map[15][19] = HOUSE;

$map[17][0] = HOUSE;
$map[17][1] = HOUSE;
$map[17][2] = HOUSE;
$map[17][4] = HOUSE;
$map[17][5] = HOUSE;
$map[17][6] = HOUSE;
$map[17][7] = HOUSE;
$map[17][8] = HOUSE;
$map[17][9] = PUB;
$map[17][12] = HOUSE;
$map[17][12] = HOUSE;
$map[17][13] = HOUSE;
$map[17][14] = HOUSE;
$map[17][15] = HOUSE;
$map[17][16] = HOUSE;
$map[17][18] = HOUSE;
$map[17][19] = HOUSE;

$map[18][0] = HOUSE;
$map[18][1] = HOUSE;
$map[18][2] = HOUSE;
$map[18][4] = HOUSE;
$map[18][5] = HOUSE;
$map[18][6] = HOUSE;
$map[18][7] = HOUSE;
$map[18][8] = HOUSE;
$map[18][9] = HOUSE;
$map[18][12] = HOUSE;
$map[18][12] = HOUSE;
$map[18][13] = HOUSE;
$map[18][14] = HOUSE;
$map[18][15] = HOUSE;
$map[18][16] = HOUSE;
$map[18][18] = HOUSE;
$map[18][19] = HOUSE;

$map[$locationy][$locationx] = YOU;

// Translation table for integers to images
$image = array(
   GRASS  => '/images/grass.png',
   PATH => '/images/path.png',
   MISSION => '/images/mission.png',
   USERS  => '/images/cop.jpg',
   TREE   => '/images/grasstrees.png',
   ROCK   => '/images/grassrock.png',
   CITY   => '/images/city.png',
   YOU    => '/images/punki.jpg',
   PUB    => '/images/pub.png',
   HOUSE  => '/images/grasshouse.png',
   CHURCH => '/images/church.png',
);

// Display the map (Note that the \t and \n chars are simply for clarity)
echo '<table style=""background: url(/images/grass.png)"" border=""0"" cellpadding=""0"" width=""275px"" height=""275px"">' . ""\n"";
for ($y = 0; $y < HEIGHT; $y++)
{
   echo ""\t"" . '<tr>' . ""\n"";
   for ($x = 0; $x < WIDTH; $x++) {
           echo ""\t\t"" . '<td><img src=""'.$image[$map[$y][$x]].'"" width=""20"" height=""20""></td>' . ""\n"";
   }
   echo ""\t"" . '</tr>' . ""\n"";
}
echo '</table>';
echo ""</td></tr>
</table>"";
}


// Move Functions
function do_move1_north()
{
global $db, $userid;
$db->query(""UPDATE users SET locationyt=locationyt-1, moves=moves-1 WHERE userid=$userid"");
echo ""Moved North<br /><meta http-equiv='refresh' content='0;URL=movetown1.php' /> "";
}

function do_move1_east()
{
global $db, $userid;
$db->query(""UPDATE users SET locationxt=locationxt+1, moves=moves-1 WHERE userid=$userid"");
echo ""Moved East<br /><meta http-equiv='refresh' content='0;URL=movetown1.php' /> "";
}
function do_move1_west()
{
global $db, $userid;
$db->query(""UPDATE users SET locationxt=locationxt-1, moves=moves-1 WHERE userid=$userid"");
echo ""Moved West<br /><meta http-equiv='refresh' content='0;URL=movetown1.php' /> "";
}
function do_move1_south()
{
global $db, $userid;
$db->query(""UPDATE users SET locationyt=locationyt+1, moves=moves-1 WHERE userid=$userid"");
echo ""Moved South<br /><meta http-equiv='refresh' content='0;URL=movetown1.php' /> "";
}


// Staff Section
function do_staff()
{
global $db,$ir, $c;
if($ir['user_level'] != 2)
{
die(""403"");
}
echo ""<br /><br />
<a href=movetown1.php?action=staffmoveuser>Move Users Town Location</a><br /><br />
<a href=movetown1.php>Back to Map</a><br />
"";
}

function staff_move_user()
{
global $db,$ir,$c,$h,$userid;
if($ir['user_level'] != 2)
{
die(""Restricted Area"");
}
print ""<h3>Editing Users Town Location</h3>
Enter users ID<br />
<form action='movetown1.php?action=staffmoveuserdo' method='post'>
User: <input type='text' name='user' value='0' /><br />
<input type='submit' value='Edit Users Town Location' /></form>"";
}
function staff_move_user_do()
{
global $db,$ir,$c,$h,$userid;
if($ir['user_level'] != 2)
{
die(""403"");
}
$d=$db->query(""SELECT * FROM users WHERE userid={$_POST['user']}"");
$user=$db->fetch_row($d);
echo ""<h3>Editing Users Town Location</h3>
<form action='movetown1.php?action=staffmoveusercom' method='post'>
<input type='hidden' name='userid' value='{$_POST['user']}' /><br />
<br /><br />
location x: <input type='text' name='locationxt' value='{$user['locationxt']}' /><br />
location y: <input type='text' name='locationyt' value='{$user['locationyt']}' /><br />
<input type='submit' value='Edit users Town location' /></form>
<br />"";
}
function staff_move_user_com()
{
global $db,$ir,$c,$h,$userid;
if($ir['user_level'] != 2)
{
die(""Restricted Area"");
}
$db->query(""UPDATE users SET locationxt={$_POST['locationxt']}, locationyt={$_POST['locationyt']} WHERE userid={$_POST['userid']}"");
echo ""User has been moved to location <font color='green'>{$_POST['locationxt']} </font>, <font color='red'>{$_POST['locationyt']}</font><meta http-equiv='refresh' content='1;URL=movetown1.php' />"";
}


// Map interaction functions
function enter_church()
{
   echo ""<br /><br /><h2>The Church</h2>You Enter the church. You see Holy Water to the right. Do you take some or not?<br /><br />
<a href='movetown1.php?action=takeholywater'>Take</a><br />
<a href='movetown1.php?action=leaveholywater'>Leave</a><br />
"";
}
function take_holywater()
{
global $db,$ir,$c,$h,$userid;
$chance = rand(0, 1);
$amount = rand(2, 100);
$amount2 = rand(10, 100);
if($chance == 1) {
$db->query(""UPDATE users SET will=will+$amount WHERE userid=$userid"");
echo ""<br /><br /><br /><br />You Grabbed the Holy Water, Put it in your pocket, Luckily the Priest didn't see you take it.<br />You gained $amount Will. <br /><br /><a href='movetown1.php?action=churchcontinue'>Continue</a>"";
} else {
$db->query(""UPDATE users SET hp=hp-$amount2 WHERE userid=$userid"");
echo ""<br /><br /><br /><br />You Grabbed the Holy Water, You go to put it in your pocket before a man behinds you hits you in the head, You put the Holy Water back<br />The Man caused $amount2 damage to your health.<br /><br /><a href='movetown1.php?action=churchcontinue'>Continue</a>"";
}
}

function leave_holywater()
{
global $db,$ir,$c,$h,$userid;
$chance = rand(0, 1);
$amount = rand(2,100);
$amount2 = rand(10,20);
if($chance == 1) {
$db->query(""UPDATE users SET will=will+$amount WHERE userid=$userid"");
echo ""<br /><br /><br /><br />You Left the Holy Water.<br />You gained $amount Will. <br /><br /><a href='movetown1.php?action=churchcontinue'>Continue</a>"";
} else {
$db->query(""UPDATE users SET will=will-$amount2 WHERE userid=$userid"");
echo ""<br /><br /><br /><br />You Left the Holy Water.<br />You Lost $amount2 Will.<br /><br /><a href='movetown1.php?action=churchcontinue'>Continue</a>"";
}
}
function church_continue()
{
echo ""<br /><br /><br /><br />You Walk down the isle to a seat on your own on the far left side of the church, you look around.<br />This is as far as the church demo goes. If you Like this Stick around.<br /><br />
<a href='movetown1.php'>Back to Town</a>"";
}





// house options
function enter_house()
{
global $db,$userid, $ir;
$hidt=$db->query(""SELECT * FROM maphouses WHERE houseID={$ir['locationxt']}{$ir['locationyt']}"");
$tr=$db->fetch_row($hidt);
echo ""<br /><h3>House {$ir['locationxt']}{$ir['locationyt']}.</h3><br /><br />"";

if($tr['houseOWNER'] == $userid)
{
echo ""<i>Your House Options<i><br />
<a href='movetown1.php?action=sellhouse'>Sell House</a><br />
<a href='movetown1.php?action=updatedesc'>House Description</a><br />
<a href='movetown1.php?action=allowguests'>Allow Guests</a><br />
<a href='movetown1.php?aciton=slothouse'>House Items</a><br /><br />"";
}



if($tr['houseOWNER'] == 0)
{
echo ""
<i>Options<i><br />
<a href='movetown1.php?action=buyhouse'>Buy House</a><br />"";
} 

if($tr['houseOWNER'] >= 1)
{
global $db,$c,$h,$userid;
$u=$db->query(""SELECT * FROM users WHERE userid={$tr['houseOWNER']}"");
$user=$db->fetch_row($u);
echo ""This House belongs to: {$user['username']}.<br />
<a href='movetown1.php?action=entermainhouse'>Enter House</a><br /><br />"";
}



echo ""<br /><br />
<a href='movetown1.php'>Back to Town</a>"";
}







function enter_main_house() {
global $db,$c,$h,$userid,$ir;


$hid=$db->query(""SELECT * FROM maphouses WHERE houseID={$ir['locationxt']}{$ir['locationyt']}"");
$r=$db->fetch_row($hid);
$u=$db->query(""SELECT * FROM users WHERE userid={$r['houseOWNER']}"");
$user=$db->fetch_row($u);
$username = $user['username'];
$description = $r['houseDESC'];
if($r['allowguests'] == 1)
{
echo ""This House belongs to: $username.<br /><br />
<i>Desc.</i><br />$description<br /><br />



"";
} else { 
echo ""This User Does not wish to allow Guests."";
}
echo ""<br /><br />
<a href='movetown1.php'>Back to Town</a>"";
}



function buy_house()
{
$cost='1000000';
echo ""<h2>Buy This House</h3>
It Currently Costs $cost.<br /><br />
Are you Sure?<br />
<a href='movetown1.php?action=buyhousedo'>Yes</a><br />
<a href='movetown1.php'>No</a>
"";
}
function buy_house_do()
{
global $db,$c,$h,$userid;
$d=$db->query(""SELECT * FROM users WHERE userid=$userid"");
$user=$db->fetch_row($d);
$h=$db->query(""SELECT * FROM maphouses"");
$owned=$db->fetch_row($h);
if(($user['money'] <= 999999) && ($owned['houseID'] <=0)) {
echo ""You don't have enough money or this house is Already Owned by someone.<br />Returning you to Town. <meta http-equiv='refresh' content='2;URL=movetown1.php' />"";
} else {
$db->query(""UPDATE users SET money=money-1000000 WHERE userid=$userid"");
$db->query(""INSERT INTO `maphouses`(`houseID`, `houseOWNER`, `houseDESC`, `housesize`, `allowguests`, `itemslot1`, `itemslot2`, `itemslot3`, `itemslot4`, `itemslot5`, `itemslot6`, `itemslot7`, `itemslot8`, `itemslot9`, `itemslot10`, `itemslot11`, `itemslot12`, `itemslot13`, `itemslot14`, `itemslot15`, `itemslot16`, `itemslot17`, `itemslot18`, `itemslot19`, `itemslot20`) VALUES ( '{$user['locationxt']}{$user['locationyt']}', '$userid', 'Description', 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)"");
echo ""Contratz on Your New House.<br />No.{$user['locationxt']}{$user['locationyt']}. <br /><br />Returning you to Town. <meta http-equiv='refresh' content='2;URL=movetown1.php' />"";
}
}



function sell_house()
{
echo ""<h2>Sell This House</h3>
<br /><br />
Are you Sure?<br />
<a href='movetown1.php?action=sellhousedo'>Yes</a><br />
<a href='movetown1.php'>No</a>
"";
}
function sell_house_do()
{
global $db,$c,$h,$userid;
$d=$db->query(""SELECT * FROM users WHERE userid=$userid"");
$user=$db->fetch_row($d);
$db->query(""UPDATE users SET money=money+1000000 WHERE userid=$userid"");
$db->query(""DELETE FROM maphouses WHERE houseID={$user['locationxt']}{$user['locationyt']}"");
echo ""Contratz on Your Selling your House.<br />No.{$user['locationxt']}{$user['locationyt']}. Returning you to Town. <meta http-equiv='refresh' content='5;URL=movetown1.php' />"";
}




function update_desc()
{
global $db,$c,$h,$userid,$ir;
$d=$db->query(""SELECT * FROM maphouses WHERE houseOWNER=$userid"");
$miss=$db->fetch_row($d);
echo ""<h2>Your House Description</h3>
<br /><br />
<form action='movetown1.php?action=updatedescdo' method='post'>
<input type='hidden' name='uid' value='{$ir['userid']}' /><br />
<textarea rows=6 cols=60 name='hDESC' />{$miss['houseDESC']}</textarea><br />
<input type='submit' value='Update Description' /></form>"";
}

function update_desc_do()
{
global $db,$c,$h;
$uidt = $_POST['uid'];
$descc = $_POST['hDESC'];
$db->query(""UPDATE maphouses SET houseDESC='$descc' WHERE houseOWNER=$uidt"");
echo ""House Description Updated. Returning you to Town. <meta http-equiv='refresh' content='5;URL=movetown1.php?action=house' />"";
}




function allow_guests()
{
global $ir,$c,$userid,$h;
echo ""<h3>Allow Guests into your house?</h3><br />
<form action='movetown1.php?action=allowguestsdo' method='post'>
<select name='allowguests' type='dropdown'>
<option value='1'>Yes</option>
<option value='0'>No</option></select>
<input type='submit' value='Change' /></form>"";
}
function allow_guests_do()
{
global $db,$ir,$c,$userid,$h;
$db->query(""UPDATE maphouses SET allowguests={$_POST['allowguests']} WHERE houseOWNER=$userid"");
echo ""Set. Returning you to Town. <meta http-equiv='refresh' content='5;URL=movetown1.php?action=house' />"";
} 


function enter_shop()
{
global $db,$c,$h,$userid;
$d=$db->query(""SELECT * FROM users WHERE userid=$userid"");
$user=$db->fetch_row($d);
echo ""Shops Closed. <br />Returning you to Town. <meta http-equiv='refresh' content='2;URL=movetown1.php' />"";
}
function do_leave()
{
   echo ""You Left, Returning to Map.<meta http-equiv='refresh' content='1;URL=move.php' /> "";
}

$h->endpage();
?>"
LFn3afCp,move.php,peterisgb,PHP,Saturday 27th of May 2023 05:31:16 PM CDT,"<?php
$locationmxy =""25"";
$locationmxx =""25"";
include ""globals.php"";
$tresder=(int) rand(100,999);
if($ir['jail'] or $ir['hospital']) { 
   echo ""This page cannot be accessed while in jail or hospital."";
   $h->endpage();
   exit;
}

$locationx = $ir['locationx'];
$locationy = $ir['locationy'];
$moves = $ir['moves'];
$action = ( array_key_exists( 'action', $_GET) ? $_GET['action'] : """" );
switch ($action) {
   case 'moven': do_move1_north(); break;
   case 'movenw': do_move1_northwest(); break;
   case 'movene': do_move1_northeast(); break;
   case 'movew': do_move1_west(); break;
   case 'movee': do_move1_east(); break;
   case 'moves': do_move1_south(); break;
   case 'movesw': do_move1_southwest(); break;
   case 'movese': do_move1_southeast(); break;
   case 'search1': do_search1_ad(); break;
   case 'search2': do_search2_ad(); break;
   case 'staff': do_staff(); break;
   case 'stafftowncreate': staff_town_create(); break;
   case 'stafftowncreatedo': staff_town_create_do(); break;
   case 'stafftownedit': staff_town_edit(); break;
   case 'stafftowneditdo': staff_town_edit_do(); break;
   case 'stafftowneditcom': staff_town_edit_com(); break;
   case 'stafftowndelete': staff_town_delete(); break;
   case 'stafftowndeletedo': staff_town_delete_do(); break;
   case 'staffcreate': staff_create(); break;
   case 'staffcreatedo': staff_create_do(); break;
   case 'staffedit': staff_edit(); break;
   case 'staffeditdo': staff_edit_do(); break;
   case 'staffeditcom': staff_edit_com(); break;
   case 'staffdelete': staff_delete(); break;
   case 'staffdeletedo': staff_delete_do(); break;
   case 'staffmoveuser': staff_move_user(); break;
   case 'staffmoveuserdo': staff_move_user_do(); break;
   case 'staffmoveusercom': staff_move_user_com(); break;

   default: echo ""<br /><hr /><h3>The Maps</h3>"";


if($ir['user_level'] == 2)
{
echo ""<a href=move.php?action=staff>Staff Options</a><br />"";
}
echo ""
<small>Being a donator you are 2x more likely to find money and gold while searching the map.</small><br />
<small>Please Note that most images are only temporary until system is completed</small>
<table width='95%'>
<tr><td></td>
<td align='center'>
</td><tr>
<tr><td align='center' valign='top' width='100'><hr />"";

if ($locationy == 0) { $northstop=""<img src='/images/no.png' width='44' height='44'>""; } else { $northstop=""<a href='move.php?action=moven'><img src='/images/up.png'></a>""; }
if ($locationy == 0) { $northstopwest=""<img src='/images/no.png' width='42' height='42'>""; } else { $northstopwest=""<a href='move.php?action=movenw'><img src='/images/nw.png'></a>""; }
if ($locationy == 0) { $northstopeast=""<img src='/images/no.png' width='42' height='42'>""; } else { $northstopeast=""<a href='move.php?action=movene'><img src='/images/ne.png'></a>""; }
if ($locationy == $locationmxy) { $eaststop=""<img src='/images/no.png' width='44' height='44'>""; } else { $eaststop=""<a href='move.php?action=movee'><img src='/images/right.png'></a>""; }
if ($locationx == $locationmxx) { $southstop=""<img src='/images/no.png' width='44' height='44'>""; } else { $southstop=""<a href='move.php?action=moves'><img src='/images/down.png'></a>""; }
if ($locationx == 0) { $southstopwest=""<img src='/images/no.png' width='42' height='42'>""; } else { $southstopwest=""<a href='move.php?action=movesw'><img src='/images/sw.png'></a>""; }
if ($locationx == 0) { $southstopeast=""<img src='/images/no.png' width='42' height='42'>""; } else { $southstopeast=""<a href='move.php?action=movese'><img src='/images/se.png'></a>""; }
if ($locationx == 0) { $weststop=""<img src='/images/no.png' width='44' height='44'>""; } else { $weststop=""<a href='move.php?action=movew'><img src='/images/left.png'></a>""; }




if ($moves <=  0) { echo ""No Moves, Nav Disabled""; } else { 
echo ""
Your Map Location: <font color='blue' size='3'>
<font color='green'>"".$locationx.""</font>, 
<font color='red'>"".$locationy.""</font><br /> 
You have <font color='yellow'>"".$moves.""</font> left.</font><hr />
<table>
<tr>
 <td><font color='red'><b>N</b></font><font color='green'><b>W</b></font></td>
 <td></td>
 <td align='center'><font color='red'><b>N</b></font></td>
 <td></td>
 <td><font color='red'><b>N</b></font><font color='green'><b>E</b></font></td>
</tr>
<tr>
 <td></td>
 <td align='center'>"".$northstopwest.""</td>
 <td align='center'>"".$northstop.""</td>
 <td align='center'>"".$northstopeast.""</td>
 <td></td>
</tr>
<tr>
 <td><font color='green'><b>W</b></font></td>
 <td align='center'>"".$weststop.""</td>
 <td align='center'><b>+</b></td>
 <td align='center'>"".$eaststop.""</a></td>
 <td><font color='green'><b>E</b></font></td>
</tr>
<tr>
 <td></td>
 <td align='center'>"".$southstopwest.""</td>
 <td align='center'>"".$southstop.""</td>
 <td align='center'>"".$southstopeast.""</td>
 <td></td>
</tr>
<tr>
 <td><font color='red'><b>S</b></font><font color='green'><b>W</b></font></td>
 <td></td>
 <td align='center'><font color='red'><b>S</b></font></td>
 <td></td>
 <td><font color='red'><b>S</b></font><font color='green'><b>E</b></font></td>
</tr>
</table>""; }
echo ""<hr /><h4>Misc</h4>"";
$ulocation = array();
$ulocationq = $db->query(""SELECT * FROM users"");
while ($r=$db->fetch_row($ulocationq)){
       $username = $r['username'];
       $ulocation[$r['userid']] = array();
       $ulocation[$r['userid']][0] = $r['locationy'];
       $ulocation[$r['userid']][1] = $r['locationx'];
}


if($ir['donatordays'])
{
$x1 = rand(1,50);
$y1 = rand(1,50);
$x2 = rand(1,50);
$y2 = rand(1,20);
$x3 = rand(1,50);
$y3 = rand(1,50);
$x4 = rand(1,50);
$y4 = rand(1,50);
$x1 = rand(1,50);
$y1 = rand(1,50);
$x2 = rand(1,50);
$y2 = rand(1,50);
$x3 = rand(1,50);
$y3 = rand(1,50);
$x4 = rand(1,50);
$y4 = rand(1,50);
} else {
$x1 = rand(1,50);
$y1 = rand(1,50);
$x2 = rand(1,50);
$y2 = rand(1,50);
$x3 = rand(1,50);
$y3 = rand(1,50);
$x4 = rand(1,50);
$y4 = rand(1,50);
}



// Display Missions
$mission = $db->query(""SELECT * FROM mapmission"");
while($mapm = $db->fetch_row($mission)) {
   $id = $mapm['id'];
   $mmy = $mapm['locationy'];
   $mmx = $mapm['locationx'];
   $missionnamelink = $mapm['missionlink'];
if (($locationy == $mmy) && ($locationx == $mmx)) { 
   echo ""<a href='move.php?action="".$id.""'>"".$missionnamelink.""</a>""; 
   }
}

// Display Towns
$town = $db->query(""SELECT * FROM maptowns"");
while($t = $db->fetch_row($town)) {
   $name = $t['townID'];
   $tmy = $t['locationy'];
   $tmx = $t['locationx'];
if (($locationy == $tmy) && ($locationx == $tmx)) { 
   echo ""<h3>Town of $name<br /> <a href='movetown1.php'><u>Check it Out</u></a><br /></h3>""; 
   }
}



if (($locationy == $y1) && ($locationx == $x1)) { echo ""<h3>Hmm.. Whats that?<br /> <a href='move.php?action=search1'><u>Check it Out</u></a><br /></h3>""; }
if (($locationy == $y2) && ($locationx == $x2)) { echo ""<h3>Hmm.. Whats that?<br /> <a href='move.php?action=search2'><u>Check it Out</u></a><br /></h3>""; }
if (($locationy == $y3) && ($locationx == $x3)) { echo ""<h3>Hmm.. Whats that?<br /> <a href='move.php?action=search1'><u>Check it Out</u></a><br /></h3>""; }
if (($locationy == $y4) && ($locationx == $x4)) { echo ""<h3>Hmm.. Whats that?<br /> <a href='move.php?action=search2'><u>Check it Out</u></a><br /></h3>""; }







$i = 1;
foreach($ulocation as $loc)
{
       if (($locationy == $loc[1]) && ($locationx == $loc[0]) && ($i != $user_id)) { 
               echo ""<h3>Another User is Here.</h3>
               <a href='viewuser.php?u="".$i.""'>View user ID "".$i.""</a><br />
               <a href='attack.php?ID="".$i.""'>Attack user ID "".$i.""</a><br />
               <a href='mailbox.php?action=compose&ID="".$i.""'>Mail user ID "".$i.""</a><br />

""; 
       }
       $i++;
}
echo ""<hr />
<u><b>Legend</b></u><br />
<table width='110px'>
<tr>
 <td>You</td>
 <td> - </td>
 <td><img src='/images/punki.jpg' width='20' height='20'></td>
</tr>
<tr>
 <td>Users</td>
 <td> - </td>
 <td><img src='/images/cop.jpg' width='20' height='20'></td>
</tr>
<tr>
 <td>Town</td>
 <td> - </td>
 <td><img src='/images/city.png' width='20' height='20'></td>
</tr>
 <tr>
 <td>Missions</td>
 <td> - </td>
 <td><img src='/images/mission.png' width='20' height='20'></td>
</tr>
</table>
<hr />"";



echo ""</td><td width='600' align='center'><small>("".$locationmxy.""x"".$locationmxx."" Grid Currently.)</small><br />"";
define('HEIGHT', $locationmxx);
define('WIDTH',  $locationmxy);
define('GRASS',   0);
define('MISSION',   1);
define('YOU',   2);
define('USERS',     3);
define('TREE',    4);
define('ROCK',    5);
define('CITY',    6);
define('CHURCH', 7);
define('PUB',     8);
define('HOUSE',   9);

// Create blank map array [y][x]
$map = array_fill(0, HEIGHT, array_fill(0, WIDTH, GRASS));
$i = 1;
foreach($ulocation as $loc)
{
       if($i != $user_id)
       {
               $map[$loc[1]][$loc[0]] = USERS;
       }
       $i++;
}


$map[$tmy][$tmx] = CITY;
$map[$locationy][$locationx] = YOU;
$map[$mmy][$mmx] = MISSION;

// Translation table for integers to images
$image = array(
   GRASS  => '/images/grass.png',
   MISSION => '/images/mission.png',
   USERS  => '/images/cop.jpg',
   TREE   => '/images/grasstrees.png',
   ROCK   => '/images/grassrock.png',
   CITY   => '/images/city.png',
   YOU    => '/images/punki.jpg',
   PUB    => '/images/pub.png',
   HOUSE  => '/images/grasshouse.png',
   CHURCH => '/images/church.png',
);

// Display the map (Note that the \t and \n chars are simply for clarity)
echo '<table style=""background: url(/images/grass.png)"" border=""0"" width=""275px"" height=""275px"">' . ""\n"";
for ($y = 0; $y < HEIGHT; $y++)
{
   echo ""\t"" . '<tr>' . ""\n"";
   for ($x = 0; $x < WIDTH; $x++) {
           echo ""\t\t"" . '<td><img src=""'.$image[$map[$y][$x]].'"" width=""20"" height=""20""></td>' . ""\n"";
   }
   echo ""\t"" . '</tr>' . ""\n"";
}
echo '</table>';
echo ""</td></tr>
</table>"";
}







// Move Functions
function do_move1_north()
{
global $db, $userid;
$db->query(""UPDATE users SET locationy=locationy-1, moves=moves-1 WHERE userid=$userid"");
echo ""Moved North<br /><meta http-equiv='refresh' content='0;URL=move.php' /> "";
}
function do_move1_northwest()
{
global $db, $userid;
$db->query(""UPDATE users SET locationy=locationy-1, locationx=locationx-2, moves=moves-1 WHERE userid=$userid"");
echo ""Moved North West<br /><meta http-equiv='refresh' content='0;URL=move.php' /> "";
}
function do_move1_northeast()
{
global $db, $userid;
$db->query(""UPDATE users SET locationy=locationy-1, locationx=locationx+2, moves=moves-1 WHERE userid=$userid"");
echo ""Moved North East<br /><meta http-equiv='refresh' content='0;URL=move.php' /> "";
}
function do_move1_east()
{
global $db, $userid;
$db->query(""UPDATE users SET locationx=locationx+1, moves=moves-1 WHERE userid=$userid"");
echo ""Moved East<br /><meta http-equiv='refresh' content='0;URL=move.php' /> "";
}
function do_move1_west()
{
global $db, $userid;
$db->query(""UPDATE users SET locationx=locationx-1, moves=moves-1 WHERE userid=$userid"");
echo ""Moved West<br /><meta http-equiv='refresh' content='0;URL=move.php' /> "";
}
function do_move1_southwest()
{
global $db, $userid;
$db->query(""UPDATE users SET locationy=locationy+1, locationx=locationx-1, moves=moves+2 WHERE userid=$userid"");
echo ""Moved South West<br /><meta http-equiv='refresh' content='0;URL=move.php' /> "";
}
function do_move1_southeast()
{
global $db, $userid;
$db->query(""UPDATE users SET locationy=locationy+1, locationx=locationx+1, moves=moves-2 WHERE userid=$userid"");
echo ""Moved South East<br /><meta http-equiv='refresh' content='0;URL=move.php' /> "";
}
function do_move1_south()
{
global $db, $userid;
$db->query(""UPDATE users SET locationy=locationy+1, moves=moves-1 WHERE userid=$userid"");
echo ""Moved South<br /><meta http-equiv='refresh' content='0;URL=move.php' /> "";
}



// searches
function do_search1_ad()
{
global $db, $userid;
$db->query(""UPDATE users SET money=money+1000000 WHERE userid='$userid'"");
echo ""You Found 1000000 coins.<a href='move.php'>Continue</a>"";
}
function do_search2_ad()
{
global $db, $userid;
$db->query(""UPDATE users SET crystals=crystals+10000 WHERE userid='$userid'"");
echo ""You Found 10000 gold.<a href='move.php'>Continue</a>"";
}





// Staff Section
function do_staff()
{
global $db,$ir, $c;
if($ir['user_level'] != 2)
{
die(""403"");
}
echo ""<br /><br />
This Is Brand new so give me a chance to get all these options added and written.<br />
The Plan with this section is to be able to edit and create new missions to be put on the maps.<br />
If this goes to plan we should have all options controlling the map and all of its functions.<br />
<br /><br />Please do not use links below. These Missions links do work but are not yet ready for the map.<br /><br />
<i>Mission</i><br />
<a href=move.php?action=staffcreate>Create Mission</a><br />
<a href=move.php?action=staffedit>Edit Mission</a><br />
<a href=move.php?action=staffdelete>Delete Mission</a><br /><br />
<i>Towns</i><br />
<a href=move.php?action=stafftowncreate>Create Town</a><br />
<a href=move.php?action=stafftownedit>Edit Town</a><br />
<a href=move.php?action=stafftowndelete>Delete Town</a><br /><br />
<i>Other</i><br />
<a href=move.php?action=staffmoveuser>Move Users Location</a><br />
<br />
<a href=move.php>Back to Map</a><br />
"";
}

function staff_create()
{
global $db,$ir, $c;
if($ir['user_level'] != 2)
{
die(""Restricted Area"");
}
echo ""<h3>Create Mission(s)</h3>
Welcome to the mission section, Here you can create your mission to add to the maps.<br />
<form action='move.php?action=staffcreatedo' method='post'>
Location Y :<input type='text' name='locationy' /><br />
Location X :<input type='text' name='locationx' /><br />
Mission Name : <input type='text' name='missionname' /><br />
Mission Length : <input type='text' name='missionlength' value='1'/><br />
Start Mission Link Text : <input type='text' name='missionlink' /><br />
Mission Text : <textarea rows=6 cols=60 name='missiontext' /></textarea><br /><hr />
Leave Mission Next Step Blank to End Mission.<br />
Mission Next Step : <textarea rows=6 cols=60 name='missionnext' /></textarea><br />
Mission Next Step Location : <br />
Location Y :<input type='text' name='locationynext' /><br />
Location X :<input type='text' name='locationxnext' /><br /><hr />
Mission Reward<br />
Cash : <input type='text' name='cash' /><br />
Gold : <input type='text' name='crystals' /><br />
Reward rewarded after mission? : <input type='text' name='rewardnumber' value='1'><br />
<input type='submit' value='Add Mission' /></form>"";
}
function staff_create_do()
{
global $db,$ir, $c;
if($ir['user_level'] != 2)
{
die(""Restricted Area"");
}
global $db,$c,$h,$userid;
$db->query(""INSERT INTO mapmission SET locationy={$_POST['locationy']}, locationx={$_POST['locationx']}, missionname='{$_POST['missionname']}', missionlength={$_POST['missionlength']}, missionlink='{$_POST['missionlink']}', missiontext='{$_POST['missiontext']}', missionnext='{$_POST['missionnext']}', locationynext={$_POST['locationynext']}, locationxnext='{$_POST['locationxnext']}', cash='{$_POST['cash']}', crystals='{$_POST['crystals']}', rewardnumber='{$_POST['rewardnumber']}'"");
echo ""Mission Created<br /><a href='move.php'>Back to Map<a/>"";
}

function staff_edit()
{
global $db,$ir, $c;
if($ir['user_level'] != 2)
{
die(""Restricted Area"");
}
global $db,$c,$h;
echo ""
<form action='move.php?action=staffeditdo' method='post'>
Item: "".mission_dropdown($c,'mission').""<br />
<input type='submit' value='Edit Mission' /></form>"";
}
function staff_edit_do()
{
global $db,$ir, $c;
if($ir['user_level'] != 2)
{
die(""Restricted Area"");
}
$d=$db->query(""SELECT * FROM mapmission WHERE id={$_POST['mission']}"");
$miss=$db->fetch_row($d);
echo ""<h3>Edit Mission(s)</h3>
Welcome to the mission section, Here you can edit your mission to fix typos or update your mission.<br />
<form action='move.php?action=staffeditcom' method='post'>
<input type='hidden' name='id' value='{$miss['id']}' />
Location Y :<input type='text' name='locationy' value='{$miss['locationy']}' /><br />
Location X :<input type='text' name='locationx' value='{$miss['locationx']}' /><br />
Mission Name : <input type='text' name='missionname' value='{$miss['missionname']}' /><br />
Mission Length : <input type='text' name='missionlength' value='{$miss['missionlength']}' /><br />
Start Mission Link Text : <input type='text' name='missionlink' value='{$miss['missionlink']}' /><br />
Mission Text : <textarea rows=6 cols=60 name='missiontext' value='' />{$miss['missiontext']}</textarea><br /><hr />
Leave Mission Next Step Blank to End Mission.<br />
Mission Next Step : <textarea rows=6 cols=60 name='missionnext' value='' />{$miss['missionnext']}</textarea><br />
Mission Next Step Location : <br />
Location Y :<input type='text' name='locationynext' value='{$miss['locationynext']}' /><br />
Location X :<input type='text' name='locationxnext' value='{$miss['locationxnext']}' /><br /><hr />
Mission Reward<br />
Cash : <input type='text' name='cash' value='{$miss['cash']}' /><br />
Gold : <input type='text' name='crystals' value='{$miss['crystals']}' /><br />
Reward rewarded after mission? : <input type='text' name='rewardnumber' value='{$miss['rewardnumber']}' /><br />
<input type='submit' value='Edit Mission' /></form>"";
}
function staff_edit_com()
{
global $db,$ir, $c;
if($ir['user_level'] != 2)
{
die(""Restricted Area"");
}
global $db,$c,$h;
$db->query(""INSERT INTO mapmission SET locationy={$_POST['locationy']}, locationx={$_POST['locationx']}, missionname='{$_POST['missionname']}', missionlength={$_POST['missionlength']}, missionlink='{$_POST['missionlink']}', missiontext='{$_POST['missiontext']}', missionnext='{$_POST['missionnext']}', locationynext={$_POST['locationynext']}, locationxnext='{$_POST['locationxnext']}', cash='{$_POST['cash']}', crystals='{$_POST['crystals']}', rewardnumber='{$_POST['rewardnumber']}'"");
echo ""Mission Edited<br /><a href='move.php'>Back to Map<a/>"";
}

function staff_delete()
{
global $db,$ir,$c,$h,$userid;
if($ir['user_level'] > 2)
{
die(""Restricted Area"");
}
echo ""<h3>Deleting Mission</h3>
The Mission will be permanently removed from the game.<br />
<form action='move.php?action=staffdeletedo' method='post'>
Item: "".mission_dropdown($c,'mission').""<br />
<input type='submit' value='Delete Mission' /></form>"";
}
function staff_delete_do()
{
global $db,$ir,$c,$h,$userid;
if($ir['user_level'] > 2)
{
die(""Restricted Area"");
}
$d=$db->query(""SELECT * FROM mapmission WHERE id={$_POST['mission']}"");
$miss=$db->fetch_row($d);
$db->query(""DELETE FROM mapmission WHERE id={$_POST['mission']}"");
echo ""The {$miss['mission']} Mission was removed from the game."";
}

function staff_town_create()
{
global $db,$ir, $c;
if($ir['user_level'] != 2)
{
die(""Restricted Area"");
}
echo ""<h3>Create Town</h3>
Welcome to the create town section, Here you can create your town to add to the maps.<br />
<form action='move.php?action=stafftowncreatedo' method='post'>
Town Name: <input type='text' name='townID' /><br />
Location Y: <input type='text' name='locationx' /><br />
Location X: <input type='text' name='locationy' /><br />
<input type='submit' value='Add Town' /></form>"";
}
function staff_town_create_do()
{
global $db,$ir, $c;
if($ir['user_level'] != 2)
{
die(""Restricted Area"");
}
global $db,$c,$h,$userid;
$db->query(""INSERT INTO maptowns SET townID='{$_POST['townID']}', locationy={$_POST['locationy']}, locationx={$_POST['locationx']}"");
echo ""Town Created<br /><a href='move.php'>Back to Map<a/>"";
}

function staff_town_edit()
{
global $db,$ir, $c;
if($ir['user_level'] != 2)
{
die(""Restricted Area"");
}
global $db,$c,$h;
echo ""
<form action='move.php?action=stafftowneditdo' method='post'>
Item: "".town_dropdown($c,'town').""<br />
<input type='submit' value='Edit Town' /></form>"";
}
function staff_town_edit_do()
{
global $db,$ir, $c;
if($ir['user_level'] != 2)
{
die(""Restricted Area"");
}
$d=$db->query(""SELECT * FROM maptowns WHERE townID={$_POST['town']}"");
$miss=$db->fetch_row($d);
echo ""<h3>Edit Town</h3>
Welcome to the town section, Here you can edit your towns ID and location.<br />
<form action='move.php?action=stafftowneditcom' method='post'>
<input type='hidden' name='id' value='{$miss['id']}' />
Town name: <input type='text' name='townID' value='{$miss['townID']}' /><br />
Location Y :<input type='text' name='locationy' value='{$miss['locationy']}' /><br />
Location X :<input type='text' name='locationx' value='{$miss['locationx']}' /><br />
<input type='submit' value='Edit Town' /></form>"";
}
function staff_town_edit_com()
{
global $db,$ir, $c;
if($ir['user_level'] != 2)
{
die(""Restricted Area"");
}
global $db,$c,$h;
$db->query(""INSERT INTO maptowns SET townID='{$_POST['townID']}', locationy={$_POST['locationy']}, locationx={$_POST['locationx']}"");
echo ""Town Edited<br /><a href='move.php'>Back to Map<a/>"";
}

function staff_town_delete()
{
global $db,$ir,$c,$h,$userid;
if($ir['user_level'] > 2)
{
die(""Restricted Area"");
}
echo ""<h3>Deleting Town</h3>
The Town Location will be permanently removed from the game.<br />
<form action='move.php?action=stafftowndeletedo' method='post'>
Item: "".town_dropdown($c,'town').""<br />
<input type='submit' value='Delete Town' /></form>"";
}
function staff_town_delete_do()
{
global $db,$ir,$c,$h,$userid;
if($ir['user_level'] > 2)
{
die(""Restricted Area"");
}
$d=$db->query(""SELECT * FROM maptowns WHERE townID={$_POST['town']}"");
$miss=$db->fetch_row($d);
$db->query(""DELETE FROM maptowns WHERE townID={$_POST['town']}"");
echo ""The {$miss['town']} Town was removed from the game."";
}



function staff_move_user()
{
global $db,$ir,$c,$h,$userid;
if($ir['user_level'] != 2)
{
die(""Restricted Area"");
}
print ""<h3>Editing Users Location</h3>
Enter users ID<br />
<form action='move.php?action=staffmoveuserdo' method='post'>
User: <input type='text' name='user' value='0' /><br />
<input type='submit' value='Edit User Location' /></form>"";
}
function staff_move_user_do()
{
global $db,$ir,$c,$h,$userid;
if($ir['user_level'] != 2)
{
die(""403"");
}
$d=$db->query(""SELECT * FROM users WHERE userid={$_POST['user']}"");
$user=$db->fetch_row($d);
echo ""<h3>Editing Users Location</h3>
<form action='move.php?action=staffmoveusercom' method='post'>
<input type='hidden' name='userid' value='{$_POST['user']}' /><br />
<br /><br />
location x: <input type='text' name='locationx' value='{$user['locationx']}' /><br />
location y: <input type='text' name='locationy' value='{$user['locationy']}' /><br />
<input type='submit' value='Edit user location' /></form>
<br />"";
}
function staff_move_user_com()
{
global $db,$ir,$c,$h,$userid;
if($ir['user_level'] != 2)
{
die(""Restricted Area"");
}
$db->query(""UPDATE users SET locationx={$_POST['locationx']}, locationy={$_POST['locationy']} WHERE userid={$_POST['userid']}"");
echo ""User has been moved to location <font color='green'>{$_POST['locationx']} </font>, <font color='red'>{$_POST['locationy']}</font><meta http-equiv='refresh' content='2;URL=move.php' />"";
}




// Map interaction functions
function do_leave()
{
   echo ""You Left, Returning to Map.<meta http-equiv='refresh' content='1;URL=move.php' /> "";
}



$h->endpage();
?>"
8S663adx,Evolutionary Algorithms,mitkonikov,Python,Saturday 27th of May 2023 05:13:46 PM CDT,"FIRST_POPULATION_SIZE = 93123;
N = 10

def generate_random_population():
   population = []
   for i in range(FIRST_POPULATION_SIZE):
       X = []
       
       # --- YOUR CODE HERE
       X = [randint(0, 1) for i in range(N)]
       
       X = [i for i in range(N)]
       random_shuffle(X)
       # --- YOUR CODE ENDS HERE

       population.append(X)

   return population
       

# This doesn't account for permutations
def order_crossover(X, Y):
    N = len(X)
    a = randint(0, N - 2)
    b = randint(0, N - 2)
    if a > b:
        swap(a, b)
    
    C1 = X, C2 = Y
    for i in range(a, b+1):
         swap(C1[i], C2[i])

		return C1, C2


# Crossover over permutations
def order_crossover(X, Y):
    N = len(X)
    a = randint(0, N - 2)
    b = randint(0, N - 2)
    if a > b:
        swap(a, b)
    
    C1 = [], C2 = []
    for i in range(a, b + 1):
         C1.append(X[i])
         C2.append(Y[i])

    U = [], V = []
    for i in range(b, N + a):
         if Y[i%N] not in C1:
             U.append(Y[i%N])

    for i in range(b, N + a):
         if X[i%N] not in C2:
             V.append(X[i%N])

    C1 = (C1 + U)[a:] + (C1 + U)[:a]
    C2 = (C2 + V)[a:] + (C2 + V)[:a]
    return C1, C2



def algo():
    population = generate_random_population()
    for epoch in range(E):
        # SELECTION

        # KRIZENJE

        # MUTACIJA

        # ZAMENA NA CHILDS AND PARENTS

        # GOAL?



def h(X):
    # calculate the strength of X


def goal(X):
   for gene in X:
      if gene == 0:
         return false
   return true


LIMIT_SIZE = 312875

def algo():
    population = generate_random_population()
    for epoch in range(E):
        selected_parents = selection(population)
        children = merge(selected_parents)
        children = map(mutate, children)
        population = children + population[:0.03 * len(population)]
        population = population[:LIMIT_SIZE]
        for child in children:
            if goal(child):
                return child





## KRIZENJE

def kpoint_crossover(X, Y, K):
   N = len(X)
   points = [randint(0, N - 1) for i in range(K)]
   points = sorted(points)
   if K % 2 == 1:
      points.append(N)

   for i in range(0, K, 2):
       for j in range(points[i], points[i+1]):
           swap(X[j], Y[j])

   return X, Y


def uniform_crossover(X, Y, P):
    for i in range(0, N - 1):
        if randfloat(0, 1) < P:
            swap(X[i], Y[i])

     return X, Y



## MUTACIJA

# probability for mutation to happen
Pm = 0.03

def mutate(child):
    if randfloat(0, 1) <= Pm:
        u = randint(0, N - 1)
        child[u] = 1 - child[u]
    return child

## MUTACII ZA PERMUTACII

def mutate_swap(child):
    if randfloat(0, 1) <= Pm:
       u = randint(0, N - 1)
       v = randint(0, N - 1)
       swap(child[u], child[v])
	return child

def mutate_insertion(child):
    if randfloat(0, 1) <= Pm:
       u = randint(0, N - 1)
       v = randint(0, N - 2)
       t = child[u]
       child.pop(u)
       return child[:(v-1)] + [t] + child[v:]
    return child

def mutate_reverse(child):
    if randfloat(0, 1) <= Pm:
        u = randint(0, N - 1)
        v = randint(0, N - 1)
        if u > v:
           swap(u, v)

        return child[:u] + list(reverse(child[u:v])) + child[v:]
    return child





## MERGE

def merge(population):
    children = []
    for i in range(0, len(population), 2):
        C1, C2 = crossover(population[i], population[i+1])
        children.append(C1, C2)

    return children


## SELEKCII

def proportional_selection(population):
    sumG = sum([h(X) for X in population])
    
    result = []
    for X in population:
        if randfloat(0, 1) <= h(X) / sumG
            result.append(X) 

    return result

def linear_selection(population):
	population.sort(lamdba x: h(x))

    g = [0 for i in range(len(population))]
    for i in range(population):
        g[i] = 2 - PS + 2 * (PS-1) * (i - 1) / (n - 1)
    
    result = []
    for i in range(len(population)):
        if randfloat(0, 1) <= g[i] / sum(g)
            result.append(population[i])

    return result


def stochastic_selection(population, K):
    START = randfloat(0, 1 / K)

    for i .... len(pop)
         g[i] = h(population[i])

    for i ..... len(pop)
          g[i] = g[i] / sum(g)

    result = []
    for p in range(K):
         i = 0
         while sum(g[:i]) < (START + p / K):
             i++
         result.append(population[i])

    return result


def tournament_selection(population, K, NEW_POPULATION_SIZE):
    result = []
	for i in range(NEW_POPULATION_SIZE):
        random_choice = random.choices(population, K)
        random_choice.sort(lambda x: -h(x))
        
        # take only the best
        result.append(random_choice[0])

    return result
"
rdFZsxi3,webinar-exam-review-2023-05-27,jspill,Python,Saturday 27th of May 2023 04:59:46 PM CDT,"# Exam Review 2023 May 27

# Do those LABS
# Ch 2-14... all Labs!
# Ch 21-32 just ADDITIONAL LABS, but important practice!
# Prac Tests, Ch 33 and 34
# Use Submit Mode and get them to 100%!!! And PAY ATTENTION to the unit tests!

# Comp 1: Basic syntax and knowledge: operators, data types, etc
# Comp 2: Control Flow
# Comp 3: Modules and Files

# Watch your string input and output
# input...
# myInput = input().strip()
# output/echo/print()
# print() # same as print(end=""\n"")
# print(""Something I'm printing."", end="" "") # if we override end...
# # we gotta put the expected \n back
# print()
# # print(""Clean new line!"")

# Comp 1: Basic syntax and knowledge: operators, data types, etc
# Common Data Types
# int
# float
# bool # True, False... cond expressions resolve to bool: x = 999, print(x>1000) --> False
# str # """"
# list # [ ]
# dict # {key:value}
# tuple # () immutable, Python sees any x,y,z as (x,y,z) --> return x,y --> return (x,y)
# set # all unique/no duplicate, no ordered... no index, no slicing, no sort
# range object # range()... range(0, 5) --> [0, 1, 2, 3, 4]

# Operators
# = # assignment
# == # equality, asking a question, comparing... if/elif, while
# +
# -
# *
# /
# % # modulo... gives an int remainder, ""How many whole things didn't fit (since the last even division)?""
# // # floor division, the last even division
# <
# >
# <=
# >=
# += # x += 1 --> x = x+1
# -= # x -= 1 --> x = x-1
# ** # raise to power... pow() and math.pow()
# !=
# # keywords that we use like operators
# in # if x in myList:
# not # if not x in myList:
# and
# or # any one True means the combined condition is True... limit OR to 2 conditions

# Comp 2
# Control Flow! The HOW stuff
# IF statements... if, if/else, if/elif, if/elif/else
# LOOPS
# WHILE - an IF that repeats
# FOR - looping over a container, or a known number of times... hence range()
# # Check out my For Loops webinar in The Gotchas
# for ___ in __someContainer__:
# for item in myList:
# for char in myStr:
# for key in myDict: # myDict[key] gets the value for that key
# for key, value in myDict.items():
# for num in range(0, 5):
# # if I need to know the index and the item/value in a list, str, tuple, etc
# for i in range(0, len(myList)): # for i, item in enumerate(myList):

# FUNCTIONS
# defining/writing vs calling
# a function has ONE particular job
# parameters are special variables... they don't work like ""regular"" variables
# parameters vs arguments
# return vs print()/output... or something else?
#
# def someFunction(x, y):
#     return x / y
#
# if __name__ == ""__main__"": # is this script the one that's being run from?
#     # we're solving THIS question
#     myInput = int(input())
#     thisOther = int(input())
#     myNum = someFunction(myInput, thisOther)
#     print(myNum)

# See ""tasks"" in the last section of Ch 10, 11, 13, 14 for function writing practice
# # CodingBat also has good function-based Python questions:
# # https://codingbat.com/python

# BUILT-IN FUNCTIONS
# print()
# input()
# range()
# list()
# tuple()
# set()
# dict()
# int()
# float()
# enumerate()
# len()
# sum()
# min()
# max()
# abs() # compare to math.fabs()
# pow() # compare to math.pow() and to **
# open() # open a file, create a file object
# round() # cousins math.ceil() and math.floor()
# type() # print(type(x).__name__)
# sorted()
# reversed()
# help() # help(str), help(list.append)
# dir() # print(dir(list))

# STRINGS
# be able to slice
# myStr = ""abcd""
# revStr = myStr[::-1]
# print(revStr)

# KNOW YOUR WHITESPACE
# "" ""
# a lot of spaces in Unicode
# ""\n"" # NEW line return
# ""\t"" # tab
# ""\r"" # CARRIAGE return
# help(str.isspace)

# STRING METHODS
# myStr.format() # ""stuff I want to put together {}"".format(var)
# myStr.strip()
# myStr.split() # returns a list a smaller strings
# myStr.join() # "" "".join(listOfStrings)
# myStr.replace(subStr, newStr) # ""remove""... myStr = myStr.replace(subStr, """")
# myStr.find(subStr) # returns int for the index, -1 or failure
# myStr.count(subStr) # return in count of subStr in string
# case: myStr.lower(), myStr.upper(), myStr.title(), myStr.capitalize()
# is/Boolean: myStr.isupper(), myStr.islower(), myStr.isspace(), myStr.isalpha(), myStr.isalnum(), myStr.isnumeric(), myStr.isdigit(), etc
# myStr.startswith(subStr), myStr.endswith(subStr)

# LISTS
# be able to slice

# LIST METHODS
# # +
# myList.append(item)
# myList.insert(i, item)
# myList.extend(anotherList)
# # -
# myList.pop() # last or myList.pop(i)
# myList.remove(item) # pop() by index, remove() by value
# myList.clear()
# # others
# myList.count(item)
# myList.sort()
# myList.reverse()
# myList.copy()
# myList.index(item)

# DICT
# use the key like an index []
# myDict[key] # retrieve value for that key
# myDict[key] = value # assign value to key
# myDict.keys()
# myDict.values()
# myDict.items()

# MODULES
# math and csv

# MATH MODULE
import math # FULL IMPORT
# math.factorial(x)
# math.ceil(x.yz)
# math.floor(x.yz)
# math.pow(x, y) # not to be confused with math.exp()
# math.sqrt(x)
# math.fabs(x) # compare abs(x)
# math.pi
# math.e

# PARTIAL IMPORT
from math import factorial # --> factorial(x)
from math import ceil, sqrt # --> ceil(x.yz), sqrt(x)
from math import * #  --> floor(x.yz)

# ALIAS IMPORT
import math as m # --> m.floor(x.yz), m.factorial(x)

# FILES

# READ MODE
with open(""test.txt"", ""r"") as f:
    contents = f.readlines() # list a strings line by line
print(contents)
for line in contents:
    line = line.strip()
    print(line)

# CSV module
import csv
with open(""mock_data.csv"", ""r"") as f1:
    contents = list(csv.reader(f1)) # for tsv... csv.reader(f1, delimiter=""\t"")
# print(contents) # [['id', 'first_name', 'last_name', 'email', 'gender', 'ip_address'], ['1', 'Remington', 'Shilling', 'rshilling0@wsj.com', 'Male', '1.71.141.52']... ]
for row in contents[0:30]: # slice just to shorten this
    print(row)


# # WRITE MODE
# with open(""output_data19.csv"", ""w"") as f2:
#     for row in contents:
#         # only write into this new file if email is at spiegel.de
#         # email is at list position 3
#         # lazy or smart?
#         # if ""@spiegel.de"" in row[3]:
#         # endswith()
#         if row[3].endswith(""@spiegel.de""):
#             # takes a single str argument
#             f2.write("","".join(row)+""\n"")

# APPEND MODE
# with open(""append_to_this.txt"", ""r"") as f3:
#     contents = f3.readlines()
# print(contents)
with open(""append_to_this.txt"", ""a"") as f3:
    f3.write(""Galadriel\nBalin\nGlorfindel\nThe Balrog\n"") # added to file, rather than overwriting



# Best wishes to our exam takers!

"
v2FVTXTE,knapsack bktr + plot,STANAANDREY,C,Saturday 27th of May 2023 04:30:40 PM CDT,"#include <stdio.h>
#include <stdlib.h>
#include <stdint.h>
#include <time.h>
#define MAX(a, b) a > b ? a : b
#define NMAX 15
#define NMIN 5

typedef struct {
  int weight, gain;
} Item;

int ksBktr(int n, int k, const Item items[]) {
  uint16_t state, lastState = (1 << n) - 1;
  int ans = 0;
  for (state = 0; state <= lastState; state++) {
    int weight = 0, gain = 0;
    for (int bit = 0; bit < NMAX; bit++) {
      Item item = items[bit];
      if ((state & (1 << bit)) && weight + item.weight <= k) {
		weight += item.weight;
		gain += item.gain;
      }
    }
    ans = MAX(ans, gain);
  }
  return ans;
}

double getSecs(clock_t start, clock_t end) {
  return ((double) (end - start)) / CLOCKS_PER_SEC;
}

int main() {
  //modify the input from here if you want
  const int k = 10;
  const Item items[NMAX + 1] = {{3,7},{3,4},{1,2},{1,9},{2,4},{1,5}};
  
  FILE *f = popen(""gnuplot --slow"", ""w"");
  if (f == NULL) {
    perror(""popen error: "");
    exit(EXIT_FAILURE);
  }//*/

  fprintf(f, ""plot '-'\n"");
  clock_t start, end;
  for (int i = NMIN; i <= NMAX; i++) {//plot 5-15
    start = clock();
    int ans = ksBktr(i, k, items);
    end = clock();
    printf(""n=%d: %d\n"", i, ans);
    double secs = getSecs(start, end);
    fprintf(f, ""%d %lf\n"", i, secs);
  }
  
  fprintf(f, ""e\n"");
  fprintf(f, ""set title \""time(n)\""\n"");
  fprintf(f, ""set xlabel \""n\""\n"");
  fprintf(f, ""set ylabel \""time\""\n"");
  if (fflush(f) == EOF) {
    perror("""");
    fclose(f);
    exit(-1);
  }

  puts(""PRESS ENTER TO EXIT..."");
  getchar();
  if (fclose(f) == EOF) {
    perror("""");
  }//*/
  return 0;
}
"
eSKiA2F9,Untitled,Andrew_Manu,Python,Saturday 27th of May 2023 04:19:54 PM CDT,"import pysence

presence = pysence.Presence(client_id="""")
runtime = pysence.BrowserRuntime()

runtime.enable()

def get_website():
    tabname = runtime.execute(""document.title"")
    presence.data[""state""] = ""ESTOY EN UNA PAGINA WEB""
    presence.data[""details""] = tabname

presence.on(""update"", get_website)
presence.start()"
V2frKprr,Untitled,Findz,Lua,Saturday 27th of May 2023 03:56:05 PM CDT,"local items = {'minecraft:gold_ingot', 'minecraft:gold_nugget','minecraft:diamond_axe','minecraft:diamond_sword','minecraft:diamond_boots','minecraft:diamond_shovel','minecraft:diamond_helmet','minecraft:diamond_pickaxe','minecraft:diamond_leggings','minecraft:diamond_chestplate'}

local chest = peripheral.wrap('top')
local chestDown = peripheral.wrap(""bottom"")

local function contains(table, val)
   for i=1,#table do
      if table[i] == val then 
         return true
      end
   end
   return false
end


while true do
	for slot, item in pairs(chest.list()) do

    	if contains(items, item.name) == false then
       		print(item.name .. ' - NOT VALID')
       		chestDown.pullItems(peripheral.getName(chest),slot)
    	else
      		print(item.name .. ' - VALID')
    	end
	end
	sleep(1)

end

"
CxJe5yuV,MICHAL MIND,Michal_Jankura,C++,Saturday 27th of May 2023 03:23:01 PM CDT,"#include <Arduino.h>
#include <Wire.h>
#include <LiquidCrystal_I2C.h>
#include <stdbool.h>
#include <string.h>
#include <stdlib.h>
#include <time.h>

#include ""mastermind.h""
#include ""lcd_wrapper.h""

char *generate_code(bool repeat, int length);
void get_score(const char *secret, const char *guess, int *peg_a, int *peg_b);
void render_leds(const int peg_a, const int peg_b);
void turn_off_leds();
void you_won(char *secret);
void play_game(char *secret);
void you_lost(char *secret);

char *generate_code(bool repeat, int length)
{
    /*Podmienky*/
    if (length < 1 || (length > 10 && repeat == false)){
        return NULL;
    }
    
    /*Pretypovane na pointer */
    char *kod = (char *)calloc(length, sizeof(char *) + 1);
    char cifry[] = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9'};
    int vybrate_cislo = 0;
    int lower = 0;
    int upper = 9;
    /*originalita cisla nikdy nebude vygenerovane take iste*/
    srand(time(NULL));

    if (repeat == true){
        for (int i = 0; i < length; i++)
        {
            /*Help -> https://www.geeksforgeeks.org/generating-random-number-range-c */
            vybrate_cislo = (rand() % (upper - lower + 1)) + lower;
            kod[i] = cifry[vybrate_cislo];
        }
    }

    char temp;
    int j = 0;
    /*HELP-> https://stackoverflow.com/questions/23176467/c-generate-random-numbers-without-repetition */
    if (repeat == false){
        for (int i = 0; i < length; i++){
            j = (rand() % 9) + 1;
            temp = cifry[i];
            cifry[i] = cifry[j];
            cifry[j] = temp;
        }
        for (int i = 0; i < length; i++){
            kod[i] = cifry[i];
        }
        }
    
    return kod;
}

void get_score(const char *secret, const char *guess, int *peg_a, int *peg_b)
{
    char *input = (char *)(calloc(5, sizeof(char)));
    char *tip = (char *)(calloc(5, sizeof(char)));

    strcpy(input, secret);
    strcpy(tip, guess);
    int abs_match = 0;
    int half_match = 0;

    /*zhoda na rovnakej poziƒçke*/
    for (int i = 0; i < 4; i++){
        if (input[i] == tip[i])
        {
            abs_match++;
        }
    }
    /*zhoda v kode ale nie na danej pozicii*/
    for (int i = 0; i < 4; i++){
        for (int j = 0; j < 4; j++)
        {
            if (input[i] == tip[j])
            {
                if (input[i] != tip[i])
                {
                    half_match++;
                }
            }
        }
    }
    /*priradenie hodn√¥t ku skoreƒçku podla uhadnutia*/
    *peg_a = abs_match;
    *peg_b = half_match;
    free(input);
    free(tip);
}

void render_leds(const int peg_a, const int peg_b)
{
    int num_of_corr_pos = peg_a;
    int num_of_incorr_pos = peg_b;


    if (num_of_corr_pos > 0)
    {
        digitalWrite(LED_RED_4, HIGH);
        num_of_corr_pos--;
    }
    if (num_of_corr_pos > 0)
    {
        digitalWrite(LED_RED_3, HIGH);
        num_of_corr_pos--;
    }
    if (num_of_corr_pos > 0)
    {
        digitalWrite(LED_RED_2, HIGH);
        num_of_corr_pos--;
    }
    if (num_of_corr_pos > 0)
    {
        digitalWrite(LED_RED_1, HIGH);
        num_of_corr_pos--;
    }
    if (num_of_incorr_pos > 0)
    {
        digitalWrite(LED_BLUE_1, HIGH);
        num_of_incorr_pos--;
    }
    if (num_of_incorr_pos > 0)
    {
        digitalWrite(LED_BLUE_2, HIGH);
        num_of_incorr_pos--;
    }
    if (num_of_incorr_pos > 0)
    {
        digitalWrite(LED_BLUE_3, HIGH);
        num_of_incorr_pos--;
    }
    if (num_of_incorr_pos > 0)
    {
        digitalWrite(LED_BLUE_4, HIGH);
        num_of_incorr_pos--;
    }
}

void render_history(char *secret, char **history, const int entry_nr)
{
    int peg_a = 0, peg_b = 0;
    char *record = (char *)(malloc(4));

    record[0] = entry_nr + 49;
    record[1] = ':';
    record[2] = ' ';
    record[3] = '\0';
    Serial.println(history[entry_nr]);
    lcd_print_at(0, 0, record);
    lcd_print(history[entry_nr]);
    turn_off_leds();
    get_score(secret, history[entry_nr], &peg_a, &peg_b);

    char *AB = malloc(5);
    AB[0] = peg_a + 48;
    AB[1] = 'A';
    AB[2] = peg_b + 48;
    AB[3] = 'B';
    AB[4] = '\0';
    lcd_print_at(0, 9, AB);
    // lcd_print_at(0,0,""Guessed number"");
    render_leds(peg_a, peg_b);
    free(record);
    free(AB);
}

void turn_off_leds()
{
    digitalWrite(LED_RED_1, LOW);
    digitalWrite(LED_RED_2, LOW);
    digitalWrite(LED_RED_3, LOW);
    digitalWrite(LED_RED_4, LOW);
    digitalWrite(LED_BLUE_1, LOW);
    digitalWrite(LED_BLUE_2, LOW);
    digitalWrite(LED_BLUE_3, LOW);
    digitalWrite(LED_BLUE_4, LOW);
}

void you_lost(char *secret)
{
    lcd_clear();
    digitalWrite(7, HIGH);
    digitalWrite(9, HIGH);
    digitalWrite(11, HIGH);
    digitalWrite(13, HIGH);
    lcd_print_at(0, 0, "">>> YOU LOST <<<"");
    lcd_print_at(1, 0, ""SECRET IS:"");
    lcd_print_at(1, 11, secret);
}

void you_won(char *secret){
    lcd_clear();
    lcd_print_at(0, 0, "">> WELL DONE <<"");
    lcd_print_at(1, 0, ""SECRET IS:"");
    lcd_print_at(1, 11, secret);

    int i = 0;
    /*KOLOTOƒåARINA*/
    while (i < 30)
    {
        digitalWrite(6, HIGH);
        delay(30);
        digitalWrite(7, HIGH);
        delay(30);
        digitalWrite(8, HIGH);
        delay(30);
        digitalWrite(9, HIGH);
        delay(30);
        digitalWrite(10, HIGH);
        delay(30);
        digitalWrite(11, HIGH);
        delay(30);
        digitalWrite(12, HIGH);
        delay(30);
        digitalWrite(13, HIGH);
        delay(30);
        digitalWrite(6, LOW);
        delay(30);
        digitalWrite(7, LOW);
        delay(30);
        digitalWrite(8, LOW);
        delay(30);
        digitalWrite(9, LOW);
        delay(30);
        digitalWrite(10, LOW);
        delay(30);
        digitalWrite(11, LOW);
        delay(30);
        digitalWrite(12, LOW);
        delay(30);
        digitalWrite(13, LOW);
        i++;
    }
}

void play_game(char *secret)
{
    char *code = NULL;
    /*WELCOME MESSAGE*/
    turn_off_leds();
    lcd_clear();
    lcd_print_at(0, 3, ""WELCOME TO"");
    lcd_print_at(1, 0, "">>>MASTERMIND<<<"");
    delay(2000);
    lcd_clear();
    /*GAME LOGIC*/
    lcd_print_at(0, 1, ""GUESS NUMBER"");
    lcd_print_at(1, 1, ""USING BUTTONS"");
    delay(2000);
    lcd_clear();
    lcd_print_at(0, 0, ""GREEN DIODE:"");
    lcd_print_at(1, 0, ""NUMBER RIGHT"");
    delay(2000);
    lcd_clear();
    lcd_print_at(0, 0, ""BLUE DIODE:"");
    lcd_print_at(1, 0, ""NUM.& POS. RIGHT"");
    delay(2000);
    lcd_clear();
    
    while (digitalRead(BTN_3_PIN == HIGH) || digitalRead(BTN_4_PIN == HIGH))
    {

      if(digitalRead(BTN_4_PIN == HIGH)){
            code = generate_code(false, 4);  
      }
    
      if(digitalRead(BTN_3_PIN == HIGH)){
            code = generate_code(true, 4);  
      }
    }


    char *number = (char *)malloc(5);
    char **history = (char **)calloc(10, sizeof(char *));
    int krok = 1;

    while (1)
    {
      for (int i = 0; i < 4; i++)
      {
          number[i] = '0';
      }
      number[4] = '\0';

      if (krok == 11)
      {
          you_lost(secret);
          break;
      }
      history[krok - 1] = (char *)calloc(5, sizeof(char));
      history[krok - 1][4] = '\0';
      int hist_num = krok - 1;

      while (digitalRead(BTN_ENTER_PIN) == LOW)
      {
          lcd_print_at(1, 0, ""Your guess:"");
          lcd_print_at(1, 12, number);
          // bool zaznam = false;

          if (digitalRead(BTN_1_PIN) == HIGH)
          {
              delay(200);
              if (digitalRead(BTN_2_PIN) == HIGH)
              {
                  if (hist_num > 0)
                  {
                      hist_num--;
                      render_history(secret, history, hist_num);
                  }
              }
              else if (digitalRead(BTN_3_PIN) == HIGH)
              {
                  if (hist_num < 9)
                  {
                      hist_num++;
                      render_history(secret, history, hist_num);
                  }
              }

              // if(digitalRead(BTN_2_PIN) == LOW && digitalRead(BTN_3_PIN) == LOW){
              if (digitalRead(BTN_1_PIN) == LOW)
              {
                  if (number[0] < 57)
                  {
                      number[0]++;
                  }
                  else if (number[0] == 57)
                  {
                      number[0] = '0';
                  }
              }
              
          }
          if (digitalRead(BTN_2_PIN) == HIGH && digitalRead(BTN_1_PIN) == LOW)
          {
              delay(200);
              if (digitalRead(BTN_2_PIN) == LOW)
              {
                  if (number[1] < 57)
                  {
                      number[1]++;
                  }
                  else if (number[1] == 57)
                  {
                      number[1] = '0';
                  }
              }
          }
          if (digitalRead(BTN_3_PIN) == HIGH && digitalRead(BTN_1_PIN) == LOW)
          {
              delay(200);
              if (digitalRead(BTN_3_PIN) == LOW)
              {
                  if (number[2] < 57)
                  {
                      number[2]++;
                  }
                  else if (number[2] == 57)
                  {
                      number[2] = '0';
                  }
              }
          }

          if (digitalRead(BTN_4_PIN) == HIGH)
          {
              delay(200);
              if (digitalRead(BTN_4_PIN) == LOW)
              {
                  if (number[3] < 57)
                  {
                      number[3]++;
                  }
                  else if (number[3] == 57)
                  {
                      number[3] = '0';
                  }
              }
          }
      } // while kde zvysujem cisla

      if (digitalRead(BTN_ENTER_PIN) == HIGH)
      {
          delay(200);
          if (digitalRead(BTN_ENTER_PIN) == LOW)
          {
              int peg_a = 0;
              int peg_b = 0;
              krok += 1;

              lcd_clear();
              delay(50);
              get_score(secret, number, &peg_a, &peg_b);
              turn_off_leds();
              strcpy(history[krok - 2], number);
              render_history(secret, history, krok - 2);

              if (peg_a == 4)
              {
                  you_won(secret);
                  break;
              }
          }
      }
    }
    free(number);
    free(history);
    delay(12000);
}
"
HzUFkZDr,Runic Library,LiBRUN,HTML,Saturday 27th of May 2023 03:05:11 PM CDT,"„Ö§
<b><size=15><align=right>–°–µ—Ä–≤–µ—Ä –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è —Å–æ–æ–±—â–µ—Å—Ç–≤–æ–º 
<color=#ffda00>Runic Library</color></align></size></b>

<align=center><color=#eb4343><size=24>[ –ü—Ä–∞–≤–∏–ª–∞ —Å–µ—Ä–≤–µ—Ä–∞ ]</size></color></align>

<color=#eb4343>[ 1 ]</color> –ó–∞–ø—Ä–µ—â–µ–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —á–∏—Ç–æ–≤ –∏ —Å—Ç–æ—Ä–æ–Ω–Ω–µ–≥–æ –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–≥–æ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è.
<color=#eb4343>[ 1.1 ]</color> –ó–∞–ø—Ä–µ—â–∞–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º, –ø–æ–∑–≤–æ–ª—è—é—â–∏—Ö –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—å –∑–≤—É–∫–∏/–º—É–∑—ã–∫—É.

<color=#eb4343>[ 2 ]</color> –ó–∞–ø—Ä–µ—â–µ–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –±–∞–≥–æ–≤ –∏ –Ω–µ–¥–æ—Ä–∞–±–æ—Ç–æ–∫.
<color=#eb4343>[ 2.1 ]</color> –ó–∞–ø—Ä–µ—â–∞–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç—Ä—É–¥–Ω–æ–¥–æ—Å—Ç—É–ø–Ω—ã–µ –º–µ—Å—Ç–∞.

<color=#eb4343>[ 3 ]</color> –ó–∞–ø—Ä–µ—â–µ–Ω–æ –Ω–µ–∞–¥–µ–∫–≤–∞—Ç–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ.
<color=#eb4343>[ 3.1 ]</color> –ó–∞–ø—Ä–µ—â–∞–µ—Ç—Å—è –Ω–µ–∞–¥–µ–∫–≤–∞—Ç–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ, –æ—Å–∫–æ—Ä–±–ª–µ–Ω–∏—è –∏–≥—Ä–æ–∫–æ–≤ –∏–ª–∏ –∏–≥—Ä–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞.

<color=#eb4343>[ 4 ]</color> –ó–∞–ø—Ä–µ—â–µ–Ω–æ –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–æ–≤–∞—Ç—å —Ä–∞–±–æ—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏.

<color=#eb4343>[ 5 ]</color> –ó–∞–ø—Ä–µ—â–µ–Ω–æ –º–µ—à–∞—Ç—å —Å–≤–æ–∏–º —Å–æ—é–∑–Ω–∏–∫–∞–º.
<color=#eb4343>[ 5.1 ]</color> –ó–∞–ø—Ä–µ—â–∞–µ—Ç—Å—è –∑–∞–∫—Ä—ã–≤–∞—Ç—å –ø–µ—Ä–µ–¥ –Ω–∏–º–∏ –¥–≤–µ—Ä–∏ (–∏—Å–∫–ª—é—á–µ–Ω–∏–µ: –≤–∞—à–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å), –æ—Ç–∫–ª—é—á–∞—Ç—å –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä—ã.

<color=#eb4343>[ 6 ]</color> –ó–∞–ø—Ä–µ—â–µ–Ω–æ –∫–æ–æ–ø–µ—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è —Å –≤—Ä–∞–∂–¥–µ–±–Ω—ã–º–∏ –∫–ª–∞—Å—Å–∞–º–∏.

<color=#eb4343>[ 7 ]</color> –ó–∞–ø—Ä–µ—â–µ–Ω–æ —É–±–∏–≤–∞—Ç—å –±–µ–∑–æ—Ä—É–∂–Ω–æ–≥–æ –∏ –ø–æ–¥—á–∏–Ω—è—é—â–µ–≥–æ—Å—è –≤–∞—à–∏–º –ø—Ä–∏–∫–∞–∑–∞–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –î –∫–ª–∞—Å—Å–∞/—É—á–µ–Ω–æ–≥–æ –∑–∞ –ú–û–ì/–ü–•.
<color=#eb4343>[ 7.1 ]</color> –ó–∞–ø—Ä–µ—â–∞–µ—Ç—Å—è –≤—ã–¥–∞–≤–∞—Ç—å –ø–ª–µ–Ω–Ω–æ–º—É –ø—Ä–∏–∫–∞–∑—ã, –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–∞ –µ–≥–æ —Å–º–µ—Ä—Ç—å. –ü—Ä–∏–º–µ—Ä: —É–º–µ—Ä–µ—Ç—å –Ω–∞ —Ç–µ—Å–ª–∞-–≤–æ—Ä–æ—Ç–∞—Ö, –ª–∏–±–æ –æ—Ç SCP-–æ–±—ä–µ–∫—Ç–∞.

<color=#eb4343>[ 8 ]</color> –ó–∞–ø—Ä–µ—â–µ–Ω–æ –∑–∞—Ç—è–≥–∏–≤–∞—Ç—å —Ä–∞—É–Ω–¥ —Å–≤–æ–∏–º–∏ –¥–µ–π—Å—Ç–≤–∏—è–º–∏.
<color=#eb4343>[ 8.1 ]</color> –ó–∞–ø—Ä–µ—â–∞–µ—Ç—Å—è –∫–µ–º–ø–µ—Ä–∏—Ç—å –º–µ—Å—Ç–∞ –≤—ã—Å–∞–¥–∫–∏ –ú–û–ì/–ü–•.

<color=#eb4343>[ 9 ]</color> –ó–∞–ø—Ä–µ—â–µ–Ω–æ —Ä–µ–∫–ª–∞–º–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–æ—Ä–æ–Ω–Ω–∏–µ —Ä–µ—Å—É—Ä—Å—ã.

<color=#eb4343>[ ## ]</color> –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è –≤ –ø—Ä–∞–≤–µ –≤—ã–¥–∞—Ç—å –ª—é–±–æ–µ –Ω–∞–∫–∞–∑–∞–Ω–∏–µ, –µ—Å–ª–∏ –í–∞—à–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ –±—É–¥–µ—Ç —Å–æ—á—Ç–µ–Ω–æ –Ω–µ–∂–µ–ª–∞—Ç–µ–ª—å–Ω—ã–º.

–ù–∞—à —Å–∞–π—Ç: <link=https://runiclibrary.ru><color=#ffcf00>https://runiclibrary.ru</color> <size=14></size></link>
Discord-—Å–æ–æ–±—â–µ—Å—Ç–≤–æ: <link=https://discord.runiclibrary.ru><color=#ffcf00>https://discord.runiclibrary.ru</color><size=14></size></link>
„Ö§"
jWekWR3V,SolarPanel,inferius,Lua,Saturday 27th of May 2023 02:59:56 PM CDT,"local helper = {}
local cfg = {};
local network = {};

cfg = {
    solarPosition = {
        ""left"",
        ""right"",
        ""front"",
    },
    batteryPosition = {
        ""back"",
    },
    -- Hodnota kdy se vypnout solarni panely
    batteryStopCharging = 95,
    -- Hodnota kdy zapnout solarni panely
    batteryStartCharging = 20,
    remote = false,
    monitorTarget = nil,
    strings = {
        batteryStatus = ""Battery status: %s %"",
        solarPanelState = {
            ""Charging[%s]... %s %"",
            ""Discharging[%s]... %s %"",
        }
    },
}

helper.solarPanel = {};
helper.battery = {};
helper.monitor = {};
helper.blockNames = {};

helper.blockNames = {
    solarPanel = {
        ""extrautils_generatorsolar"",
    },
    battery = {
        ""tile_blockcapacitorbank_name"",
    },
}

--local currentSolarState = 0;
--local fullSolarState = 0;
local currentBatteryState = 0;
local fullBatteryState = 0;
local batteryPercentil = 0;

local solarChargingState = {}

network.init = function ()
    if helper.isEmpty(cfg.monitorTarget) then
        return;
    end

    rednet.open(cfg.monitorTarget);
end

-- ============================================================
-- Inicializace monitoru a dal≈°√≠ch vƒõc√≠
--
helper.init = function ()
    -- Nacte pozice solarnich panelu a baterii
    cfg.solarPosition = {};
    cfg.batteryPosition = {};
    cfg.monitorTarget = nil;
    for k, side in pairs(peripheral.getNames()) do
        local deviceName = peripheral.getType(side);
        if deviceName == ""modem"" and helper.isEmpty(cfg.monitorTarget) then
            cfg.monitorTarget = side;
        elseif helper.hasValue(helper.blockNames.solarPanel, deviceName) then
            table.insert(cfg.solarPosition, side);
            solarChargingState[side] = {};
        elseif helper.hasValue(helper.blockNames.battery, deviceName) then
            table.insert(cfg.batteryPosition, side);
        end
    end

    if not helper.isEmpty(cfg.monitorTarget) then
        local monitorDevice = peripheral.wrap(cfg.monitorTarget);
        if (helper.isEmpty(monitorDevice)) then
            error(""Monitor or modem not found"");
            return;
        end
        local monitorType = peripheral.getType(cfg.monitorTarget);

        if monitorType == ""monitor"" then
            helper.monitor.target = monitorDevice;
        elseif monitorType == ""modem"" then
            if monitorDevice.isWireless() then
                print(""Modem je bezdratovy. Vyhledavam server..."");
                cfg.remote = true;
                network.init();
                -- TODO: Dodelat server
            else
                print(""Modem neni bezdratovy. Vyhledavam monitor..."");

                local lastMonitor = nil;
                local monitorList = {};
                for k, name in pairs(monitorDevice.getNamesRemote()) do
                    local remoteType = monitorDevice.getTypeRemote(name);
                    if remoteType == ""monitor"" then
                        lastMonitor = peripheral.wrap(name);
                        table.insert(monitorList, name);
                    end
                end

                if #monitorList == 1 then
                    print(""Monitor nastaven"");
                    helper.monitor.target = lastMonitor;
                    return;
                elseif #monitorList == 0 then
                    error(""Monitor not found"");
                    return;
                elseif #monitorList > 1 then
                    print(""Bylo nalezeno vic monitoru."");
                    for index, data in pairs(monitorList) do
                        print(data)
                    end
                    print(""Zadejte nazev monitoru:"");
                    local monitorName = read();
                    if not helper.isEmpty(monitorName) then
                        local m = peripheral.wrap(monitorName);
                        if helper.isEmpty(m) then
                            error(""Monitor not found"");
                            return;
                        end
                        helper.monitor.target = m;
                        print(""Monitor nastaven"");
                    end
                end
                
            end
        else
            helper.monitor.target = nil;
        end
    else
        helper.monitor.target = nil;
    end
end


-- ============================================================
-- Vr√°t√≠ true pokud je string v tabulce
--
helper.hasValue = function (tab, val)
    for index, value in ipairs(tab) do
        if value == val then
            return true
        end
    end

    return false
end

helper.isEmpty = function (foo)
    return foo == nil or foo == """";
end

-- ============================================================
-- Vytiskne text na monitor
--
helper.monitor.print = function (text, line, charPos, color)
    if helper.isEmpty(text) or helper.isEmpty(helper.monitor.target) then
        return;
    end
    local monitor = helper.monitor.target;
    charPos = charPos or 1;
    line = line or 1;
    color = color or colors.white;
    term.redirect(monitor);

    term.setTextColor(color);
    monitor.setCursorPos(charPos, line);
    monitor.write(text);
    term.redirect(term.native());
end

-- ============================================================
-- Vycisti monitor
--
helper.monitor.clear = function ()
    if helper.isEmpty(helper.monitor.target) then
        return;
    end
    local monitor = helper.monitor.target;
    term.redirect(monitor);
    monitor.clear();
    term.redirect(term.native());
end

---============================================================
-- Nacte soucasny stav panelu a prepne redstone signal
--
helper.solarPanel.reloadCurrentStatus = function ()
    local currentSolarState = 0;
    local fullSolarState = 0;
    local i = 2;
    for k, pos in pairs(cfg.solarPosition) do
        currentSolarState = currentSolarState + peripheral.call(pos, ""getEnergyStored"");
        fullSolarState = fullSolarState + peripheral.call(pos, ""getMaxEnergyStored"");
        local perc = helper.getPercentile(currentSolarState, fullSolarState);
        solarChargingState[pos].percentile = perc;
        --print(string.format(""Solar %s: %s%%, cur: %d, full: %d"", pos, perc, currentSolarState, fullSolarState));
        --- pokud je solar nabit na 90% a neni zapnuty redstone, tak ho zapneme
        if batteryPercentil < cfg.batteryStopCharging then
            if perc > 90 and not redstone.getOutput(pos) then
                redstone.setOutput(pos, true);
            elseif perc < 5 and redstone.getOutput(pos) then
                redstone.setOutput(pos, false);
            end
        else
            if batteryPercentil < cfg.batteryStartCharging then
                redstone.setOutput(pos, false);
            end
        end
        --if batteryPercentil > cfg.batteryStopCharging and not redstone.getOutput(pos) then
        --    redstone.setOutput(pos, true);
        --elseif batteryPercentil < cfg.batteryStartCharging and redstone.getOutput(pos) then
        --    redstone.setOutput(pos, false);
        --end
        -- Vytiskne stav panelu
        solarChargingState[pos].charging = not redstone.getOutput(pos);
        helper.monitor.print(string.format(cfg.strings.solarPanelState[solarChargingState[pos].charging and 1 or 2], pos, ""     ""), i, 1, helper.monitor.getColorByPercentil(perc)); -- vycisteni hodnoty
        helper.monitor.print(string.format(cfg.strings.solarPanelState[solarChargingState[pos].charging and 1 or 2], pos, perc), i, 1, helper.monitor.getColorByPercentil(perc));
        i = i + 1;
    end
end

helper.monitor.getColorByPercentil = function (percentil)
    if percentil > 65 then
        return colors.green;
    elseif percentil > 35 then
        return colors.yellow;
    else
        return colors.red;
    end
end

---============================================================
-- Nacte stav baterie
--
helper.battery.loadCurrentStatus = function ()
    currentBatteryState = 0;
    fullBatteryState = 0;
    for k,pos in pairs(cfg.batteryPosition) do
        currentBatteryState = currentBatteryState + peripheral.call(pos, ""getEnergyStored"");
        fullBatteryState = fullBatteryState + peripheral.call(pos, ""getMaxEnergyStored"");
    end
    -- vykresli stav baterie
    batteryPercentil = helper.getPercentile(currentBatteryState, fullBatteryState);
    helper.monitor.print(string.format(cfg.strings.batteryStatus, ""     ""), 1, 1, helper.monitor.getColorByPercentil(batteryPercentil)); --- vycisteni hodnoty
    helper.monitor.print(string.format(cfg.strings.batteryStatus, batteryPercentil), 1, 1, helper.monitor.getColorByPercentil(batteryPercentil));
end

-- ============================================================
-- Vr√°ti procentu√°ln√≠ stav
helper.getPercentile = function (current, full)
    return math.floor((current / full) * 100);
end

---============================================================
-- prida mezeru pro formatovani
-- 
helper.value_separator = function (amount)
  local formatted = amount
  while true do  
    formatted, k = string.gsub(formatted, ""^(-?%d+)(%d%d%d)"", '%1 %2')
    if (k==0) then
      break
    end
  end
  return formatted
end

---============================================================
-- zaokrouhli cislo na zadany pocet desetinnych mist
--
helper.round = function (val, decimal)
    if (decimal) then
        return math.floor( (val * 10^decimal) + 0.5) / (10^decimal)
      else
        return math.floor(val+0.5)
      end
end

--===================================================================
-- vrati naformatovane cislo
--
--
helper.formatNumber = function (amount, decimal, prefix, neg_prefix)
    local str_amount,  formatted, famount, remain

    decimal = decimal or 2  -- default 2 decimal places
    neg_prefix = neg_prefix or ""-"" -- default negative sign
  
    famount = math.abs(helper.round(amount,decimal))
    famount = math.floor(famount)
  
    remain = helper.round(math.abs(amount) - famount, decimal)
  
          -- oddeli tisice
    formatted = helper.value_separator(famount)
  
          -- prida desetinna mista
    if (decimal > 0) then
      remain = string.sub(tostring(remain),3)
      formatted = formatted .. ""."" .. remain ..
                  string.rep(""0"", decimal - string.len(remain))
    end
  
          -- pripoji prefix' 
    formatted = (prefix or """") .. formatted 
  
    if (amount<0) then
      if (neg_prefix==""()"") then
        formatted = ""(""..formatted .."")""
      else
        formatted = neg_prefix .. formatted 
      end
    end
  
    return formatted
  end

  local function executeSolarLoop()
    os.startTimer(1);
    while true do
        event = os.pullEvent();
        if event == ""timer"" then
            --helper.monitor.clear();
            helper.solarPanel.reloadCurrentStatus();
            helper.battery.loadCurrentStatus();
            os.startTimer(5);
        elseif event == ""key"" then
            helper.monitor.clear();
            print(""Ukoncit program? (y/n)"");
            local key = read();
            if key == ""y"" then
                break;
            end
        end
    end
  end


local function main(...)
    local args = {...}

    helper.init();
    helper.monitor.clear();
    print(""Spustit solarni program? (y/n)"");
    local key = read();
    if key == ""y"" then
        executeSolarLoop();
    end

    
  end

  main(...);"
