id,title,username,language,date,content
Rqpqfa7i,ShaderChunks,gatunes,Lua,Thursday 15th of June 2023 07:02:12 AM CDT,"Edge = [[
float getDepthFromPos(in vec3 position) {
  return distance(position, viewPosition);
}
vec3 sobelSample(in sampler2D tex, in vec2 uv, in vec3 offset) {
  vec3 pixelCenter = texture(tex, uv).rgb;
  vec3 pixelLeft   = texture(tex, uv - offset.xz).rgb;
  vec3 pixelRight  = texture(tex, uv + offset.xz).rgb;
  vec3 pixelUp     = texture(tex, uv + offset.zy).rgb;
  vec3 pixelDown   = texture(tex, uv - offset.zy).rgb;
  return (
    abs(pixelLeft    - pixelCenter)
    + abs(pixelRight - pixelCenter)
    + abs(pixelUp    - pixelCenter)
    + abs(pixelDown  - pixelCenter)
  );
}
float sobelSampleDepth(in sampler2D tex, in vec2 uv, in vec3 offset) {
  float pixelCenter = getDepthFromPos(texture(tex, uv).xyz);
  float pixelLeft   = getDepthFromPos(texture(tex, uv - offset.xz).xyz);
  float pixelRight  = getDepthFromPos(texture(tex, uv + offset.xz).xyz);
  float pixelUp     = getDepthFromPos(texture(tex, uv + offset.zy).xyz);
  float pixelDown   = getDepthFromPos(texture(tex, uv - offset.zy).xyz);
  return (
    abs(pixelLeft    - pixelCenter)
    + abs(pixelRight - pixelCenter)
    + abs(pixelUp    - pixelCenter)
    + abs(pixelDown  - pixelCenter)
  );
}
float edge(in vec2 uv, in float intensity, in float thickness, in float depthScale, in float depthBias, in float normalScale, in float normalBias) {
  vec3 offset = vec3((1.0 / resolution.x), (1.0 / resolution.y), 0.0) * thickness;
  float sobelDepth = sobelSampleDepth(positionTexture, uv, offset);
  sobelDepth = pow(clamp(sobelDepth, 0.0, 1.0) * depthScale, depthBias);
  vec3 sobelNormalVec = sobelSample(normalTexture, uv, offset);
  float sobelNormal = sobelNormalVec.x + sobelNormalVec.y + sobelNormalVec.z;
  sobelNormal = pow(sobelNormal * normalScale, normalBias);
  return clamp(max(sobelDepth, sobelNormal), 0.0, 1.0) * intensity;
}
]]

Fog = [[
vec4 fog(in vec4 color, in vec3 fogColor in float intensity) {
  float depth = distance(vPosition, viewPosition);
  float fog = 1.0 - exp(-intensity * intensity * depth * depth);
  return vec4(mix(color.rgb, vec3(0.05, 0.05, 0.1), fog), color.a);
}
]]

Phong = [[
vec3 phong(in vec4 color, in vec3 normal, in vec3 position, in vec3 lightDir) {
  float ambient = 0.03;
  float diffuse = max(dot(lightDir, normal), 0.0);
  float specular = pow(max(dot(normal, normalize(lightDir + normalize(viewPosition - position))), 0.0), 16.0) * 0.5;
  return vec4(color.rgb * (ambient + diffuse + specular), color.a);
}
]]

VertexWithNormalAndPosition = [[
out vec3 vNormal;
out vec3 vPosition;
void main() {
  vec4 pos = modelMatrix * vec4(position, 1.0);
  vNormal = normalMatrix * normal;
  vPosition = pos.xyz;
  gl_Position = projectionMatrix * viewMatrix * pos;
}
]]
"
idgq4cf0,Untitled,Sininerebane,C#,Thursday 15th of June 2023 07:01:53 AM CDT,"namespace ConsoleAppWhileExit
{
    class Program
    {
        static void Main(string[] args)
        {
            Console.OutputEncoding = Encoding.UTF8;
            bool isCycleContinue = true;
            string userMessage;
            string exitCycle = ""exit"";

            while (isCycleContinue)
            {
                Console.WriteLine(""Введите слово"");

                userMessage = Console.ReadLine();

                if (userMessage != exitCycle)
                {
                    Console.WriteLine(""Ваш цикл продолжается"");
                }
                else
                {
                    isCycleContinue = false;
                }
            }

            Console.WriteLine(""Ваш цикл закончился! "");
            Console.ReadKey();
        }
    }
}"
UGsiSkC0,Sei il boss nel nuovo evento estivo!,Shpindlier,HTML,Thursday 15th of June 2023 06:48:31 AM CDT,"<!DOCTYPE html>
<html><head><meta http-equiv=""content-type"" content=""text/html; charset=utf-8""></head><body>
	<div>
		<table style=""box-sizing: border-box; width: 600px; margin-left: auto; margin-right: auto; border-spacing: 0;"">
			<tbody>
				<tr>
					<td height=""300px"" style=""background: url('https://i.imgur.com/3TWPJN9.png'); background-repeat: no-repeat; padding: 0;""></td>
				</tr>
				<tr>
					<td align=""center"" style=""padding-top: 10px;"">
						<p style=""margin: 0; padding: 24px; color: #242424; width: 500px; font-family: 'Arial'; font-size: 16px; font-weight: 500; font-style: normal; letter-spacing: normal; line-height: normal; text-align: center;"">Spero che non ti sia dimenticato del tuo vecchio amico Slim Capella? Tutto questo tempo stavo seguendo le notizie di Grand RP e ho scoperto che è arrivato un fighissimo aggiornamento estivo, il quale stavamo aspettando da tempo!</p>
					</td>
				</tr>
				<tr>
					<td align=""center"">
						<p style=""width: 500px; font-family: 'Arial'; font-size: 12px; letter-spacing: 0.01em; line-height: 24px; outline: none; text-decoration: none; padding: 5px; color: #000;"">You received this email because you gave your email address when you registered.</p>
					</td>
				</tr>
				<tr>
					<td align=""center""><a rel=""noopener noreferrer"" style=""font-family: 'Arial'; font-size: 12px; letter-spacing: 0.01em; line-height: 24px; outline: none; text-decoration: none; padding: 5px; color: #000;"" href=""{{unsubscribe_url}}""><u>Unsubscribe</u></a></td>
				</tr>
			</tbody>
		</table>
	</div>
	</body></html>"
uN1sGevW,Fishing Frenzy Simulator,LuaXe,Lua,Thursday 15th of June 2023 06:37:32 AM CDT,"function C() spawn(function () while getgenv().C do
if W == ""Grassy"" then local args = {[1] = ""Cast"",[2] = Vector3.new(-111, 9, 345),[3] = ""Grassy""} game:GetService(""ReplicatedStorage"").Remotes.Rod:FireServer(unpack(args)) end
if W == ""Desert"" then local args = {[1] = ""Cast"",[2] = Vector3.new(-169, 9, 345),[3] = ""Desert""} game:GetService(""ReplicatedStorage"").Remotes.Rod:FireServer(unpack(args)) end
if W == ""Ice"" then local args = {[1] = ""Cast"",[2] = Vector3.new(-260, 9, 345),[3] = ""Ice""} game:GetService(""ReplicatedStorage"").Remotes.Rod:FireServer(unpack(args)) end
if W == ""Cave"" then local args = {[1] = ""Cast"",[2] = Vector3.new(-349, 9, 345),[3] = ""Cave""} game:GetService(""ReplicatedStorage"").Remotes.Rod:FireServer(unpack(args)) end
if W == ""Lava"" then local args = {[1] = ""Cast"",[2] = Vector3.new(-452, 9, 345),[3] = ""Lava""} game:GetService(""ReplicatedStorage"").Remotes.Rod:FireServer(unpack(args)) end
if W == ""Toxic"" then local args = {[1] = ""Cast"",[2] = Vector3.new(-539, 9, 345),[3] = ""Toxic""} game:GetService(""ReplicatedStorage"").Remotes.Rod:FireServer(unpack(args)) end
if W == ""Toy"" then local args = {[1] = ""Cast"",[2] = Vector3.new(-875, 9, 345),[3] = ""Grassy""} game:GetService(""ReplicatedStorage"").Remotes.Rod:FireServer(unpack(args)) end
if W == ""Cyber"" then local args = {[1] = ""Cast"",[2] = Vector3.new(-954, 9, 345),[3] = ""Grassy""} game:GetService(""ReplicatedStorage"").Remotes.Rod:FireServer(unpack(args)) end
if W == ""Cloud"" then local args = {[1] = ""Cast"",[2] = Vector3.new(-1041, 9, 345),[3] = ""Grassy""} game:GetService(""ReplicatedStorage"").Remotes.Rod:FireServer(unpack(args)) end
if W == ""Farm"" then local args = {[1] = ""Cast"",[2] = Vector3.new(-1136, 9, 345),[3] = ""Grassy""} game:GetService(""ReplicatedStorage"").Remotes.Rod:FireServer(unpack(args)) end
if W == ""Haunted Forest"" then local args = {[1] = ""Cast"",[2] = Vector3.new(-1217, 9, 345),[3] = ""Grassy""} game:GetService(""ReplicatedStorage"").Remotes.Rod:FireServer(unpack(args)) end
if W == ""Samurai"" then local args = {[1] = ""Cast"",[2] = Vector3.new(-1307, 9, 345),[3] = ""Grassy""} game:GetService(""ReplicatedStorage"").Remotes.Rod:FireServer(unpack(args)) end
local args = {[1] = ""Reel""} game:GetService(""ReplicatedStorage"").Remotes.Rod:FireServer(unpack(args)) wait() end end) end

function R() spawn(function () while getgenv().R do game:GetService(""ReplicatedStorage"").Remotes.Rebirth:FireServer() wait() end end) end
function T() spawn(function () while getgenv().T do local args = {[1] = ""Train"",[2] = workspace.Training[W].Hole} game:GetService(""ReplicatedStorage"").Remotes.Train:FireServer(unpack(args)) wait() end end) end
function H() spawn(function () while getgenv().H do local args = {[1] = E,[2] = 1}game:GetService(""ReplicatedStorage"").Remotes.Egg:FireServer(unpack(args)) wait() end end) end

local library = loadstring(game:HttpGet(('https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/wall%20v3')))()

local w = library:CreateWindow(""Fishing Frenzy Sim"")

local b = w:CreateFolder(""Main"")

b:Toggle(""Inf. Fish"",function(val) getgenv().C = val C() end)
b:Toggle(""Inf. Rebirths"",function(val) getgenv().R = val R() end)
b:Toggle(""Train"",function(val) getgenv().T = val T() end)
b:Toggle(""Hatch"",function(val) getgenv().H = val H() end)

b:Dropdown(""Select an Egg"",{""Coconut"",""Grassy"",""Desert"",""Cactus"",""Tundra"",""Ice"",""Cave"",""Lava"",""Toxic"",""Toy"",""Cyber"",""Cloud"",""Farm"",""Haunted Forest"",""Samurai""},false,function(val) E = val end)
b:Dropdown(""Select an Area"",{""Grassy"",""Desert"",""Ice"",""Cave"",""Lava"",""Toxic"",""Toy"",""Cyber"",""Cloud"",""Farm"",""Haunted Forest"",""Samurai""},false,function(val) W = val end)

b:Label(""Made by X_LuaF#0705"",{TextSize = 21; TextColor = Color3.fromRGB(255,255,255); BgColor = Color3.fromRGB(38, 38, 38);})

local w = library:CreateWindow(""LocalPlayer"")

local b = w:CreateFolder(""LP"")

b:DestroyGui()

b:Button(""Discord"",function() setclipboard(""workink.co/2GQ/LTD"") end)
b:Button(""Full Version"",function() loadstring(game:HttpGet(""https://pastebin.com/raw/GphZf9Xe"", true))() end)
b:Button(""Rejoin"",function() loadstring(game:HttpGet(""https://pastebin.com/raw/mM7JBG5h"", true))() end)
b:Button(""Reset"",function() loadstring(game:HttpGet(""https://pastebin.com/raw/EEY6SATj"", true))() end)

b:Box(""Speed"",""number"",function(val) S = val end)
b:Box(""Jump"",""number"",function(val) J = val end)
b:Box(""Hip Height"",""number"",function(val) H = val end)
b:Box(""Gravity"",""number"",function(val) G = val end)
 
b:Toggle(""Speed"",function(bool) getgenv().Speed = bool Speed(S) end)
b:Toggle(""Jump"",function(bool) getgenv().Jump = bool Jump(J) end)
b:Toggle(""Hip Height"",function(bool) getgenv().Hip = bool Hip(H) end)
b:Toggle(""Gravity"",function(bool) getgenv().Grav = bool Grav(G) end)
 
b:Slider(""FOV (Default is 70)"",{min = 0;max = 120;precise = true;},function(val) game.workspace.CurrentCamera.FieldOfView = val end)

function TPCFrame(Player_CFrame) if game.Players.LocalPlayer.Character:FindFirstChild(""HumanoidRootPart"") then game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Player_CFrame end end
function TPVector3(Player_Position) game.Players.LocalPlayer.Character.HumanoidRootPart.Position = Player_Position.Position end
function PHP(Player_HP) game.Players.LocalPlayer.Character.Humanoid.Health = Player_HP end

function Chat(Mes, Freq) spawn(function () while getgenv().Chat do local args = {[1] = Mes,[2] = ""All""} game:GetService(""ReplicatedStorage"").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(unpack(args)) wait(Freq) end end) end
function Speed(Nume) spawn(function () while getgenv().Speed do game:GetService(""Players"").LocalPlayer.Character.Humanoid.WalkSpeed = Nume if not getgenv().Speed then game:GetService(""Players"").LocalPlayer.Character.Humanoid.WalkSpeed = 16 end wait() end end) end
function Jump(Nume) spawn(function () while getgenv().Jump do game:GetService(""Players"").LocalPlayer.Character.Humanoid.JumpPower = Nume if not getgenv().Jump then game:GetService(""Players"").LocalPlayer.Character.Humanoid.JumpPower = 50 end wait() end end) end
function Hip(Nume) spawn(function () while getgenv().Hip do game:GetService(""Players"").LocalPlayer.Character.Humanoid.HipHeight = Nume if not getgenv().Hip then game:GetService(""Players"").LocalPlayer.Character.Humanoid.HipHeight = 0.1 end wait() end end) end
function Grav(Nume) spawn(function () while getgenv().Grav do game:GetService(""Workspace"").Gravity = Nume if not getgenv().Grav then game:GetService(""Workspace"").Gravity = 196.2 end wait() end end) end"
hGYK9Kq8,Lê url e imprime no terminal,MizunoBrasil,Python,Thursday 15th of June 2023 06:36:09 AM CDT,"import pyperclip
import win32com.client

# Criando uma instância do objeto Shell do Windows
shell = win32com.client.Dispatch(""WScript.Shell"")

# Abrindo uma nova janela do Chrome e esperando que ela seja ativada
shell.SendKeys(""^t"")
shell.AppActivate(""Google Chrome"")

# Aguardando um breve intervalo para garantir que a janela do Chrome esteja ativa
import time
time.sleep(1)

# Copiando a URL da barra de favoritos para a área de transferência
shell.SendKeys(""^l"")
shell.SendKeys(""^c"")

# Obtendo a URL da área de transferência
url = pyperclip.paste()

# Exibindo a URL copiada
print(""URL copiada:"", url)
"
LudiKQtS,Untitled,BrunoMAzeredo,Bash,Thursday 15th of June 2023 06:34:36 AM CDT,"BMA
login
kakob@bmalaw.com.br 
Pass
3502Hrlo$

login
escod3@bmalaw.com.br 
Pass
4532Hrl0&"
jsxkbyjv,Droid-kex,LasterRooker,Bash,Thursday 15th of June 2023 06:31:32 AM CDT,"#INSTALLATION

echo ""allow-external-apps = true"" >>~/.termux/termux.properties && pkg up -y && pkg i -y termux-x11-nightly tur-repo && pkg i -y chromium firefox && curl -sLf https://raw.githubusercontent.com/Yisus7u7/termux-desktop-xfce/main/boostrap.sh | bash

#To start termux-x11

termux-x11 :1 &

#For Distros

export PULSE_SERVER=127.0.0.1;env DISPLAY=:1 dbus-launch --exit-with-session xfce4-session

#For Termux

env DISPLAY=:1 dbus-launch --exit-with-session xfce4-session

#For Audio

pulseaudio --start --exit-idle-time=-1; pacmd load-module module-native-protocol-tcp auth-ip-acl=127.0.0.1 auth-anonymous=1

#Then go to termux-desktop,login to linux distro.In linux,

export DISPLAY=:1;export PULSE_SERVER=127.0.0.1

xfce4-session &>/dev/null
"
6FStXfzQ,Vous êtes le patron dans la nouvelle mise à jour estivale !,Shpindlier,HTML,Thursday 15th of June 2023 06:23:18 AM CDT,"<!DOCTYPE html>
<html><head><meta http-equiv=""content-type"" content=""text/html; charset=utf-8""></head><body>
	<div>
		<table style=""box-sizing: border-box; width: 600px; margin-left: auto; margin-right: auto; border-spacing: 0;"">
			<tbody>
				<tr>
					<td height=""300px"" style=""background: url('https://i.imgur.com/3TWPJN9.png'); background-repeat: no-repeat; padding: 0;""></td>
				</tr>
				<tr>
					<td align=""center"" style=""padding-top: 10px;"">
						<p style=""margin: 0; padding: 24px; color: #242424; width: 500px; font-family: 'Arial'; font-size: 16px; font-weight: 500; font-style: normal; letter-spacing: normal; line-height: normal; text-align: center;"">J'espère que vous n'avez pas oublié votre vieil ami Slim Capella ? Pendant tout ce temps, j'ai suivi toutes les nouvelles de Grand RP et j'ai découvert que la mise à jour d'été la plus cool a commencé sur tous les serveurs, ce que nous attendions tous !</p>
					</td>
				</tr>
				<tr>
					<td align=""center"">
						<p style=""width: 500px; font-family: 'Arial'; font-size: 12px; letter-spacing: 0.01em; line-height: 24px; outline: none; text-decoration: none; padding: 5px; color: #000;"">You received this email because you gave your email address when you registered.</p>
					</td>
				</tr>
				<tr>
					<td align=""center""><a rel=""noopener noreferrer"" style=""font-family: 'Arial'; font-size: 12px; letter-spacing: 0.01em; line-height: 24px; outline: none; text-decoration: none; padding: 5px; color: #000;"" href=""{{unsubscribe_url}}""><u>Unsubscribe</u></a></td>
				</tr>
			</tbody>
		</table>
	</div>
	</body></html>"
zv4spBMk,OrbitControls,gatunes,Lua,Thursday 15th of June 2023 06:20:21 AM CDT,"OrbitControls = {
  dragging = false,
  phi = math.pi * 0.25,
  theta = math.pi * -0.25,
  radius = 10,
  target = { x = 0, y = 0, z = 0 }
}
    
function OrbitControls:new(o)
  o = o or {}
  setmetatable(o, self)
  self.__index = self
  o.dphi = o.phi
  o.dtheta = o.theta
  o.dradius = o.radius
  OrbitControls.setView(o)
  return o
end

function OrbitControls:update()
  if mouse.primaryUp then
    self.dragging = false
  end

  if self.dragging then
    self.phi = self.phi + mouse.dy * resolution.y * 0.003
    self.theta = self.theta - mouse.dx * resolution.x * 0.003
  elseif mouse.primary and (math.abs(mouse.dx) > 0.0001 or math.abs(mouse.dy) > 0.0001) then
    self.dragging = true
  end

  if mouse.wheel ~= 0 then
    self.radius = math.clamp(self.radius * (1 - mouse.wheel * 0.1), 2, 128)
  end

  if (
    math.abs(self.phi - self.dphi) > 0.0001
    or math.abs(self.theta - self.dtheta) > 0.0001
    or math.abs(self.radius - self.dradius) > 0.0001
  ) then
    local damp = 1 - math.exp(-20 * delta)
    self.dphi = math.lerp(self.dphi, self.phi, damp)
    self.dtheta = math.lerp(self.dtheta, self.theta, damp)
    self.dradius = math.lerp(self.dradius, self.radius, damp)
    OrbitControls.setView(self)
  end
end

function OrbitControls:setView()
  local x, y, z = math.spherical(self.dphi, self.dtheta, self.dradius)
  camera.setPosition(self.target.x + x, self.target.y + y, self.target.z + z)
  camera.lookAt(self.target.x, self.target.y, self.target.z)
end
"
sswVivpk,data604,TestGuy1,JSON,Thursday 15th of June 2023 06:13:11 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '1ba57d200eb7cec271542296950b12969b8fa224fe8d5c29a15ee8b25615c1f57aed96824aeb64190220a7dbe18f72dc060c52de2f2e5bd1034e9df5775a625b13a9db8eeeaad336f9544bf233fcbb03099ea5e19d4a0f28dee389a8f58c78754ae588e1099ddd43b8ce9f3d66ca4ee9f7884abfa45443055e3e3117d01dc203',
  otherdata: [
    'e7e637202f64e695a48d8cf8e0b063d0',
    '6ca62bf3b7ac955b10ec8d2f39ba8f0b',
    'b2e337885c9d7eded65a122a414b6353',
    'ae7e9a43d938f80d5c6ba86abd80f269',
    '316dfd2c7f2bbbe109755c4b2fa79993',
    '6ae4e138baf72bb3556e1b4d6e6e6f0f',
    '4f5f1e177678393b9ba5615277290a30',
    '1216ab9ac71caf1c20c20a4bdef04ec9'
  ]
}"
KA2LfUKg,Scoped,firedigger,C#,Thursday 15th of June 2023 05:55:11 AM CDT,"[Microsoft.AspNetCore.Mvc.HttpPost, Microsoft.AspNetCore.Mvc.Route(""restore/sharepoint/azure-blob-storage/o365"")]
        [Authorize(Roles = ""O365User,O365Admin,NexeticAdmin"")]
        public override Task<bool> PostRestoreSharepointAzureBlobStorageO365([FromQuery] int? userId, [FromQuery] bool? toRestoreFolder, [FromQuery] bool? fromTeams, [FromBody] IEnumerable<int> body)
        {
            VerifyUsersOrganization(userId.Value);
            return TaskUtility.Run<bool>(() =>
            {
                try
                {
                    List<int> itemsIds = body.ToList();
                    if (userId.HasValue && itemsIds.Count > 0 && fromTeams.HasValue)
                    {
                        User user = _userService.Get(userId.Value);
                        if (user != null)
                        {
                            List<SharepointListItemVersion> finalList = new List<SharepointListItemVersion>();

                            foreach (int itemId in itemsIds)
                            {
                                SharepointListItemVersion version = _sharePointService.GetListItemVersionById(itemId);

                                if (version != null)
                                {
                                    OneDriveItem oneDriveItem = _sharePointService.GetDriveItemBySharePointItemId(version.SharepointListItemId ?? 0);

                                    if (oneDriveItem != null)
                                    {
                                        if (oneDriveItem.IsFolder)
                                        {
                                            OneDriveItemVersion oneDriveItemVersion = _sharePointService.GetDriveItemVersionByDriveItemId(oneDriveItem.Id);
                                            if (oneDriveItemVersion != null)
                                            {
                                                List<OneDriveItem> childDriveItems = _driveService.GetByParentPath(oneDriveItemVersion.Path, -1, fromTeams.Value, true);
                                                if (childDriveItems != null && childDriveItems.Count > 0)
                                                {
                                                    foreach (OneDriveItem childItem in childDriveItems)
                                                    {
                                                        SharepointListItem toAddItem = _sharePointService.GetSharePointItemByDriveId(childItem.Id);
                                                        if (toAddItem != null)
                                                        {
                                                            SharepointListItemVersion versionToAdd = _sharePointService.GetLastVersionByItemId(toAddItem.Id);
                                                            if (versionToAdd != null)
                                                            {
                                                                if (!finalList.Contains(versionToAdd))
                                                                {
                                                                    finalList.Add(versionToAdd);
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                        else
                                        {
                                            if (!finalList.Contains(version))
                                            {
                                                finalList.Add(version);
                                            }
                                        }
                                    }
                                }
                            }

                            if (finalList.Count > 0)
                            {
                                List<string> selectedIds = finalList.Select(x => x.Id + ""from"" + x.InitialExternalId).ToList();

                                _backupRestoreService.RestoreSharePoint(
                                    user.ExternalServiceOrganizationId,
                                    toRestoreFolder ?? false,
                                    selectedIds
                                );
                                return true;
                            }
                        }
                    }
                    return false;
                }
                catch (Exception ex)
                {
                    _logger.LogError($""Error initiating sharepoint restore: {ex.ToString()}"");
                    return false;
                }
            });
        }"
Vs0jPHT0,Group by constant,firedigger,C#,Thursday 15th of June 2023 05:51:56 AM CDT,"public Tuple<long, long> GetDriveSizeAndCountPerOrganization(int organizationId, bool fromTeams, List<UserBackup> userBackups)
        {
            if (userBackups != null && userBackups.Count > 0)
            {
                var sums = userBackups
                .Where(x => x.User.OrganizationId == organizationId && x.ServiceType == (int)ServiceTypeEnum.Drive)
                .GroupBy(x => true)
                .Select(x => new
                {
                    TotalSize = fromTeams ? x.Sum(x => x.TotalSizeOnStorageTeams) / 1000 : x.Sum(x => x.TotalSizeOnStorage) / 1000,
                    NumberOfItems = fromTeams ? x.Sum(x => x.TotalItemCountTeams) : x.Sum(x => x.TotalItemCount)
                })
                .First();

                if (sums == null) return new Tuple<long, long>(0, 0);
                else return new Tuple<long, long>(sums.TotalSize, sums.NumberOfItems);
            }
            else
            {
                return new Tuple<long, long>(0, 0);
            }
        }"
DVHc7Nqj,Automação Python 1,MizunoBrasil,Python,Thursday 15th of June 2023 05:42:42 AM CDT,"import os
import threading
import tkinter as tk
from tkinter import messagebox
from selenium import webdriver

# Função que será executada em segundo plano
def executar_acoes():
    # Obtém o diretório atual
    diretorio_atual = os.getcwd()

    # Define o caminho completo para o arquivo ""paginas.txt"" na pasta atual
    caminho_arquivo = os.path.join(diretorio_atual, 'paginas.txt')

    # Inicializa o ChromeDriver (verifique se você tem o driver do Chrome instalado)
    driver = webdriver.Chrome()

    # Abre o arquivo para adicionar (ou criar se não existir)
    arquivo = open(caminho_arquivo, 'a')

    # Obtém o texto da caixa de texto
    urls = caixa_texto.get(""1.0"", tk.END).strip().split('\n')

    for url in urls:
        url = url.strip()
        if url:
            try:
                # Abre uma página no Chrome
                driver.get(url)

                # Obtém a URL atual da página
                url_atual = driver.current_url

                # Obtém o título da página
                titulo = driver.title

                # Salva a URL e o título no arquivo    
                arquivo.write(""Título: {}\n"".format(titulo))
                arquivo.write(""{}\n"".format(url_atual))
                arquivo.write(""\n"")
            except Exception as e:
                messagebox.showerror(""Erro"", f""Ocorreu um erro ao processar a URL: {url}\nErro: {str(e)}"")

    # Fecha o arquivo
    arquivo.close()

    # Encerra o ChromeDriver
    driver.quit()

    # Exibe uma mensagem de conclusão
    messagebox.showinfo(""Concluído"", ""Ações concluídas. Verifique o arquivo {}."".format(caminho_arquivo))

# Função para limpar a caixa de texto
def limpar_caixa_texto():
    caixa_texto.delete(""1.0"", tk.END)

# Cria a janela
janela = tk.Tk()
janela.title(""Aplicação"")

# Cria a caixa de texto
caixa_texto = tk.Text(janela, height=10, width=50)
caixa_texto.pack()

# Cria o frame para os botões
frame_botoes = tk.Frame(janela)
frame_botoes.pack(pady=10)

# Cria o botão ""Executar Ações""
botao_executar = tk.Button(frame_botoes, text=""Executar Ações"", command=executar_acoes)
botao_executar.pack(side=tk.LEFT, padx=5)

# Cria o botão ""Limpar Caixa de Texto""
botao_limpar = tk.Button(frame_botoes, text=""Limpar Caixa de Texto"", command=limpar_caixa_texto)
botao_limpar.pack(side=tk.LEFT, padx=5)

# Inicia o loop de eventos da janela
janela.mainloop()
"
thi0CVZw,CF7 чтобы файлы тоже приходили на почту.,valeraplusplus,PHP,Thursday 15th of June 2023 05:32:12 AM CDT,"function cf7_attachment_link($wpcf7) {
   $submission = WPCF7_Submission::get_instance();
   if ($submission) {
      $uploaded_files = $submission->uploaded_files();
      if (!empty($uploaded_files)) {
         $attachments = array();
         foreach ($uploaded_files as $fieldname => $uploaded_file) {
            $attachments[] = $uploaded_file;
         }
         $mail = $wpcf7->prop('mail');
         $mail['attachments'] = $attachments;
         $wpcf7->set_properties(array('mail' => $mail));
      }
   }
}
add_action('wpcf7_before_send_mail', 'cf7_attachment_link');"
fVNXW4SH,Avm,Tanso,JSON,Thursday 15th of June 2023 05:13:51 AM CDT,"{""msgid"":7188593,""date"":""2022-03-09T11:38:18.749Z"",""api"":""1.0"",""obj"":""location"",""func"":""gps_pos"",""data"":{""longitude"":9.25587,""latitude"":45.4285,""speed"":0,""bearing"":0,""accuracy"":0}}"
XxqtKhZ3,¡Tú eres el Jefe en la nueva actualización de verano!,Shpindlier,HTML,Thursday 15th of June 2023 05:10:31 AM CDT,"<!DOCTYPE html>
<html><head><meta http-equiv=""content-type"" content=""text/html; charset=utf-8""></head><body>
	<div>
		<table style=""box-sizing: border-box; width: 600px; margin-left: auto; margin-right: auto; border-spacing: 0;"">
			<tbody>
				<tr>
					<td height=""300px"" style=""background: url('https://i.imgur.com/3TWPJN9.png'); background-repeat: no-repeat; padding: 0;""></td>
				</tr>
				<tr>
					<td align=""center"" style=""padding-top: 10px;"">
						<p style=""margin: 0; padding: 24px; color: #242424; width: 500px; font-family: 'Arial'; font-size: 16px; font-weight: 500; font-style: normal; letter-spacing: normal; line-height: normal; text-align: center;"">Espero que todavía no hayas olvidado a tu viejo amigo Slim Capella. Todo este tiempo he estado siguiendo todas las noticias de Grand RP y me he enterado de que la actualización de verano más guay ha empezado en todos los servidores, ¡la que todos estábamos esperando!</p>
					</td>
				</tr>
				<tr>
					<td align=""center"">
						<p style=""width: 500px; font-family: 'Arial'; font-size: 12px; letter-spacing: 0.01em; line-height: 24px; outline: none; text-decoration: none; padding: 5px; color: #000;"">You received this email because you gave your email address when you registered.</p>
					</td>
				</tr>
				<tr>
					<td align=""center""><a rel=""noopener noreferrer"" style=""font-family: 'Arial'; font-size: 12px; letter-spacing: 0.01em; line-height: 24px; outline: none; text-decoration: none; padding: 5px; color: #000;"" href=""{{unsubscribe_url}}""><u>Unsubscribe</u></a></td>
				</tr>
			</tbody>
		</table>
	</div>
	</body></html>"
4ugXgxQL,IOI2013 Day1 B,huz_n,C++,Thursday 15th of June 2023 05:08:13 AM CDT,"#include ""artclass.h""
 
#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
 
#define ll long long
#define point pair<int, int>
#define X first
#define Y second
#define all(x) (x).begin(), (x).end()
#define pb push_back
#define show(x) cerr << (#x) << "" = "" << x << '\n'
#define print(x) if (1) {cerr << (#x) << "" = ""; for (auto it : x) \
      cerr << it << ' '; cerr << '\n';}
#define fast_io ios_base::sync_with_stdio(0), cin.tie(0)
 
const int N = 512;
//const int S = 2e7 + 64;
const int INF = 2e9 + 64;
const ll MAX = 2e18 + 64;
const int LOG = 30;
const int MOD = 998244353;
const int P = 79;
 
using namespace std;
using namespace __gnu_pbds;
 
struct RGB {
      unsigned char r, g, b;
      RGB() {}
      RGB(unsigned char r, unsigned char g, unsigned char b) : r(r), g(g), b(b) {}
 
      unsigned char mx() {
            return max({r, g, b});
      }
 
      unsigned char mn() {
            return min({r, g, b});
      }
};
 
double dist(RGB e1, RGB e2) {
    long rmean = ( (long)e1.r + (long)e2.r ) / 2;
    long r = (long)e1.r - (long)e2.r;
    long g = (long)e1.g - (long)e2.g;
    long b = (long)e1.b - (long)e2.b;
    return sqrt((((512+rmean)*r*r)>>8) + 4*g*g + (((767-rmean)*b*b)>>8));
}
 
int sq(ll x) {
      return x * x;
}
 
// double dist(RGB e1, RGB e2) {
//       return sqrt(sq((int)e1.r - (int)e2.r) + sq((int)e1.g - (int)e2.g) + sq((int)e1.b - (int)e2.b));
// }
 
int a[N][N], used[N][N];
 
void clear() {
      for (int i = 0; i < N; ++i)
            for (int j = 0; j < N; ++j)
                  a[i][j] = used[i][j] = 0;
}
 
int n, m, R[500][500], G[500][500], B[500][500];
RGB c[500][500];
 
const int dx[4] = {0, 0, -1, +1};
const int dy[4] = {-1, +1, 0, 0};
 
void select_by_diff(RGB color, double w, double f = 1e9) {
      clear();
      for (int i = 0; i < n; ++i)
            for (int j = 0; j < m; ++j)
                  a[i][j] = dist(color, c[i][j]) <= w && c[i][j].mx() - c[i][j].mn() <= f;
}
 
RGB average(int x1, int y1, int x2, int y2) {
      ll sr = 0, sg = 0, sb = 0;
      for (int i = x1; i <= x2; ++i)
            for (int j = x1; j <= x2; ++j)
                  sr += c[i][j].r, sg += c[i][j].g, sb += c[i][j].b;
 
      int l = (y2 - y1 + 1) * (x2 - x1 + 1);
      return RGB(sr / l, sg / l, sb / l);
}
 
RGB average(vector<RGB> &v) {
      ll sr = 0, sg = 0, sb = 0;
      for (RGB color : v)
            sr += color.r, sg += color.g, sb += color.b;
 
      int l = v.size();
      return RGB(sr / l, sg / l, sb / l);
}
 
int cnt = 0;
 
// int dfs(int x, int y) {
//       ++cnt;
//       if (cnt % 33700 == 0)
//             show(x), show(y), show(cnt);
 
//       //show(used[0][0]);
//       assert(!used[x][y]);
//       assert(min(x, y) >= 0 && x < n && y < m);
//       used[x][y] = true;
//       int res = 1;
//       for (int k = 0; k < 4; ++k) {
//             int nx = x + dx[k];
//             int ny = y + dy[k];
//             if (min(nx, ny) >= 0 && nx < n && ny < m && !used[nx][ny] && a[nx][ny] == a[x][y])
//                   res += dfs(nx, ny);
//       }
//       return res;
// }
 
int bfs(int sx, int sy) {
      used[sx][sy] = true;
      queue<point> q;
 
      q.push({sx, sy});
      int res = 0;
 
      while (!q.empty()) {
            auto [x, y] = q.front();
            q.pop();
 
            ++res;
            used[x][y] = true;
 
            for (int dir = 0; dir < 4; ++dir) {
                  int nx = x + dx[dir];
                  int ny = y + dy[dir];
 
                  if (nx >= 0 && nx < n && ny >= 0 && ny < m && !used[nx][ny] && a[nx][ny] == a[x][y])
                        used[nx][ny] = true, q.push({nx, ny});
            } 
      }
 
      return res;
}
 
bool check_green(RGB color) {
      int r = color.r, g = color.g, b = color.b;
 
      return g - 8 >= max(r, b) || (g + 16 >= r && b <= min(r, g) * 4 / 5)
            || (min(g, r) >= 96 && b <= 56);
}
 
int bfs_green(int sx, int sy) {
      used[sx][sy] = true;
      queue<point> q;
 
      q.push({sx, sy});
      int res = 0;
 
      while (!q.empty()) {
            auto [x, y] = q.front();
            q.pop();
 
            ++res;
            used[x][y] = true;
 
            for (int dir = 0; dir < 4; ++dir) {
                  int nx = x + dx[dir];
                  int ny = y + dy[dir];
 
                  if (nx >= 0 && nx < n && ny >= 0 && ny < m && !used[nx][ny] && check_green(c[nx][ny]))
                        used[nx][ny] = true, q.push({nx, ny});
            } 
      }
 
      return res;
}
 
 
int count_components(int lim = 1) {
      for (int i = 0; i < n; ++i)
            for (int j = 0; j < m; ++j)
                  used[i][j] = 0;
 
      int res = 0;
      for (int i = 0; i < n; ++i)
            for (int j = 0; j < m; ++j)
                  if (!used[i][j])
                        res += (bfs(i, j) >= lim);
 
      return res;
}
 
const RGB GRAY = {20, 20, 20};
const RGB LGRAY = {230, 230, 230};
 
mt19937 rnd(time(0));
 
int count_bits() {
      int res = 0;
      for (int i = 0; i < n; ++i)
            for (int j = 0; j < m; ++j)
                  res += a[i][j];
      return res;
}
 
int style(int R, int C, int r[500][500], int g[500][500], int b[500][500]) {
      // show(N), show(M);
      n = R, m = C;
      for (int i = 0; i < n; ++i)
            for (int j = 0; j < m; ++j)
                  c[i][j] = RGB(r[i][j], g[i][j], b[i][j]);
 
      int cnt = 0, total = 0;
      for (int i = 0; i < n; ++i)
            for (int j = 0; j < m; ++j) {
                  for (int k = 0; k < 4; ++k) {
                        int ni = i + dx[k], nj = j + dy[k];
                        if (ni >= 0 && nj >= 0 && ni < n && nj < m) {
                              ++total;
                              cnt += dist(c[i][j], c[ni][nj]) <= 16.0;
                        }
                  }
            }
 
      assert(total != 0);
 
      double coeff = (double)cnt / (double)total;
      // show(coeff);
 
      if (coeff >= 0.45) {
            select_by_diff(GRAY, 135.0, 30.0);
            int c1 = count_components(550);
            int b1 = count_bits();
 
            select_by_diff(LGRAY, 80.0, 25.0);
            int c2 = count_components(550);
            int b2 = count_bits();
 
            // show(c1), show(c2);
            // show(b1), show(b2);
 
            if (max(c1, c2) >= 8)
                  return 1;
            else
                  return 4;
      }
      else {
            if (coeff < 0.1)
                  return 3;
            
            if (coeff > 0.3)
                  return 2;
 
            vector<point> v;
 
            for (int i = 0; i < n; ++i)
                  for (int j = 0; j < m; ++j)
                        if (check_green(c[i][j]))
                              v.pb({i, j});
 
            int cnt_green = 0;
            clear();
 
            // show(v.size());
 
            if (v.size() < 2000)
                  return 3;
 
            for (int t = 0; t < 400; ++t) {
                  auto [x, y] = v[rnd() % v.size()];
 
                  if (used[x][y]) {
                        --t; continue;
                  }
 
                  double coeff_green = (double)bfs_green(x, y) / (double)(n * m);
                  if (coeff_green >= 0.12)
                        return 2;
 
                  cnt_green += coeff_green >= 0.02;
                  // show(coeff_green);
            }
 
            // show(cnt_green);     
 
            // show(count_components(1000));
 
            return (cnt_green >= 5 || count_bits() >= n * m * 15 / 100 ? 2 : 3);
      }
}
 
// signed main() {
//       string folder = ""C:\\Users\\nazar\\Desktop\\Sublime\\ArtClass\\files\\"";
 
//       for (int type = 1; type <= 4; ++type) {
//             cerr << ""------- TYPE #"" << type << "": -------\n"";
//             for (int sample = 1; sample <= 9; ++sample) {
//                   cerr << ""\n\n"";
//                   cerr << ""sample #"" << sample << "": \n"";
//                   string path = folder + ""sample"" + to_string(type) + ""-0"" + to_string(sample);
//                   //show(path);
//                   ifstream file(path.c_str());
 
//                   int n, m;
//                   file >> n >> m;
 
//                   for (int i = 0; i < n; ++i)
//                         for (int j = 0; j < m; ++j)
//                               file >> R[i][j] >> G[i][j] >> B[i][j];
 
//                   cout << style(n, m, R, G, B) << '\n' << '\n';
//                   file.close();
//             }
//       }
// }"
vrKfWm3u,Ti si glavni u novom ljetnom izdanju!,Shpindlier,HTML,Thursday 15th of June 2023 04:59:04 AM CDT,"<!DOCTYPE html>
<html><head><meta http-equiv=""content-type"" content=""text/html; charset=utf-8""></head><body>
	<div>
		<table style=""box-sizing: border-box; width: 600px; margin-left: auto; margin-right: auto; border-spacing: 0;"">
			<tbody>
				<tr>
					<td height=""300px"" style=""background: url('https://i.imgur.com/3TWPJN9.png'); background-repeat: no-repeat; padding: 0;""></td>
				</tr>
				<tr>
					<td align=""center"" style=""padding-top: 10px;"">
						<p style=""margin: 0; padding: 24px; color: #242424; width: 500px; font-family: 'Arial'; font-size: 16px; font-weight: 500; font-style: normal; letter-spacing: normal; line-height: normal; text-align: center;"">Nadam se da još uvijek nisi zaboravio svog starog prijatelja Slima Capella? Sve ovo vrijeme sam pratio sve Grand RP vijesti i saznao da je na svim serverima krenuo najcool ljetni update koji smo svi čekali! A ovo je naslov ""Ti si glavni u novom ljetnom izdanju!</p>
					</td>
				</tr>
				<tr>
					<td align=""center"">
						<p style=""width: 500px; font-family: 'Arial'; font-size: 12px; letter-spacing: 0.01em; line-height: 24px; outline: none; text-decoration: none; padding: 5px; color: #000;"">You received this email because you gave your email address when you registered.</p>
					</td>
				</tr>
				<tr>
					<td align=""center""><a rel=""noopener noreferrer"" style=""font-family: 'Arial'; font-size: 12px; letter-spacing: 0.01em; line-height: 24px; outline: none; text-decoration: none; padding: 5px; color: #000;"" href=""{{unsubscribe_url}}""><u>Unsubscribe</u></a></td>
				</tr>
			</tbody>
		</table>
	</div>
	</body></html>"
bP0iVUwd,...shut,tntmodferi,Lua,Thursday 15th of June 2023 04:50:00 AM CDT,"loadstring(game:HttpGet(""https://raw.githubusercontent.com/vkTrolls/Bounty-Hunter-Kit/main/script""))()
"
m5udtJTG,Untitled,GhadGM,JavaScript,Thursday 15th of June 2023 04:37:35 AM CDT,"function somma(x, y){
    return x+y;
}
function sottrazione(x, y){
    return x-y;
}
function moltiplicazione(x, y){
    return x*y;
}
function divisione(x, y){
    return x/y;
}
function pow(x, y){
    return x**y;
}

var x=2
var y=3

console.log(""1. 2+3"", somma(x,y));
console.log(""2. 2-3"", sottrazione(x, y));
console.log(""3. 2*3"", moltiplicazione(x,y));
console.log(""4. 2/3"", divisione(x,y));
console.log(""5. 2**3"", pow(x,y));"
0YkUTLFa,Du bist der Boss im neuen Sommer Update!,Shpindlier,HTML,Thursday 15th of June 2023 04:35:57 AM CDT,"<!DOCTYPE html>
<html><head><meta http-equiv=""content-type"" content=""text/html; charset=utf-8""></head><body>
	<div>
		<table style=""box-sizing: border-box; width: 600px; margin-left: auto; margin-right: auto; border-spacing: 0;"">
			<tbody>
				<tr>
					<td height=""300px"" style=""background: url('https://i.imgur.com/3TWPJN9.png'); background-repeat: no-repeat; padding: 0;""></td>
				</tr>
				<tr>
					<td align=""center"" style=""padding-top: 10px;"">
						<p style=""margin: 0; padding: 24px; color: #242424; width: 500px; font-family: 'Arial'; font-size: 16px; font-weight: 500; font-style: normal; letter-spacing: normal; line-height: normal; text-align: center;"">Ich habe ständig die Nachrichten über Grand RP verfolgt und entdeckt, dass das lang ersehnte, coolste Sommer-Update nun auf allen Servern verfügbar ist!</p>
					</td>
				</tr>
				<tr>
					<td align=""center"">
						<p style=""width: 500px; font-family: 'Arial'; font-size: 12px; letter-spacing: 0.01em; line-height: 24px; outline: none; text-decoration: none; padding: 5px; color: #000;"">You received this email because you gave your email address when you registered.</p>
					</td>
				</tr>
				<tr>
					<td align=""center""><a rel=""noopener noreferrer"" style=""font-family: 'Arial'; font-size: 12px; letter-spacing: 0.01em; line-height: 24px; outline: none; text-decoration: none; padding: 5px; color: #000;"" href=""{{unsubscribe_url}}""><u>Unsubscribe</u></a></td>
				</tr>
			</tbody>
		</table>
	</div>
	</body></html>"
cNA0wqJ0,arduino,Alx09,C,Thursday 15th of June 2023 04:19:08 AM CDT,"
#include <ESP8266WiFi.h>
#include <WiFiManager.h>
#include <PubSubClient.h>

// Setările pentru Azure IoT Hub
const char* iotHubEndpoint = ""licentaDrulaAlex.azure-devices.net"";
const char* deviceId = ""1"";
const char* deviceKey = ""HostName=licentaDrulaAlex.azure-devices.net;DeviceId=1;SharedAccessKey=5itKG9VL/duaqiELaaF8JWbqtHVnaQtjPtEiX4mfCBM="";
WiFiClientSecure wifiClient;
PubSubClient mqttClient(wifiClient);

#define TRIGGER_PIN 0




bool wm_nonblocking = false;  // change to true to use non blocking

WiFiManager wm;                     // global wm instance
WiFiManagerParameter custom_field;  // global param ( for non blocking w params )

void setup() {
  WiFi.mode(WIFI_STA);  // explicitly set mode, esp defaults to STA+AP
  Serial.begin(115200);
  Serial.setDebugOutput(true);
  delay(3000);
  Serial.println(""\n Starting"");

  pinMode(TRIGGER_PIN, INPUT);

  // wm.resetSettings(); // wipe settings

  if (wm_nonblocking) wm.setConfigPortalBlocking(false);

  // add a custom input field
  int customFieldLength = 40;


  // test custom html(radio)
  const char* custom_radio_str = ""<br/><label for='customfieldid'>Custom Field Label</label><input type='radio' name='customfieldid' value='1' checked> One<br><input type='radio' name='customfieldid' value='2'> Two<br><input type='radio' name='customfieldid' value='3'> Three"";
  new (&custom_field) WiFiManagerParameter(custom_radio_str);  // custom html input

  wm.addParameter(&custom_field);
  wm.setSaveParamsCallback(saveParamCallback);

  std::vector<const char*> menu = { ""wifi"", ""info"", ""param"", ""sep"", ""restart"", ""exit"" };
  wm.setMenu(menu);

  // set dark theme
  wm.setClass(""invert"");

  wm.setConfigPortalTimeout(30);  // auto close configportal after n seconds


  bool res;

  res = wm.autoConnect(""SmartHome configurare"", ""password"");  // password protected ap

  if (!res) {
    Serial.println(""Failed to connect or hit timeout"");
    // ESP.restart();
  } else {
    //if you get here you have connected to the WiFi
   Serial.println(""connected...yeey :)"");
  }
   
    mqttClient.setServer(iotHubEndpoint, 8883);
    mqttClient.setCallback(callback);

    connectToAzure();
}

void checkButton() {
  // check for button press
  if (digitalRead(TRIGGER_PIN) == LOW) {
    // poor mans debounce/press-hold, code not ideal for production
    delay(50);
    if (digitalRead(TRIGGER_PIN) == LOW) {
      Serial.println(""Button Pressed"");
      // still holding button for 3000 ms, reset settings, code not ideaa for production
      delay(3000);  // reset delay hold
      if (digitalRead(TRIGGER_PIN) == LOW) {
        Serial.println(""Button Held"");
        Serial.println(""Erasing Config, restarting"");
        wm.resetSettings();
        ESP.restart();
      }

      // start portal w delay
      Serial.println(""Starting config portal"");
      wm.setConfigPortalTimeout(120);

      if (!wm.startConfigPortal(""SmartHome configurare"", ""password"")) {
        Serial.println(""failed to connect or hit timeout"");
        delay(3000);
        // ESP.restart();
      } else {
        //if you get here you have connected to the WiFi
        Serial.println(""connected...yeey :)"");
      }
    }
  }
  mqttClient.setServer(iotHubEndpoint, 8883);
  mqttClient.setCallback(callback);

  //connectToAzure();
}


String getParam(String name) {
  //read parameter from server, for customhmtl input
  String value;
  if (wm.server->hasArg(name)) {
    value = wm.server->arg(name);
  }
  return value;
}

void saveParamCallback() {
  Serial.println(""[CALLBACK] saveParamCallback fired"");
  Serial.println(""PARAM customfieldid = "" + getParam(""customfieldid""));
}

void loop() {
  if (wm_nonblocking) wm.process();  // avoid delays() in loop when non-blocking and other long running code
  checkButton();
  // put your main code here, to run repeatedly:

}

void connectToAzure() {
  while (!mqttClient.connected()) {
    Serial.println(""Conectare la Azure IoT Hub..."");
    if (mqttClient.connect(deviceId, deviceKey, """")) {
      Serial.println(""Conectat la Azure IoT Hub!"");
    } else {
      Serial.println(""Eroare de conectare. Se încearcă din nou în 5 secunde..."");
      delay(5000);
    }
  }
}
void callback(char* topic, byte* payload, unsigned int length) {
  // Implementați acțiunile dvs. de prelucrare a mesajelor primite
}
"
QCHrPGn6,Монеты с восстановлением,pasholnahuy,C++,Thursday 15th of June 2023 04:09:11 AM CDT,"#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

void CheckSumm(vector<int>& ans, vector<int> &val, int needed_summ, int cur_summ, vector<int>& taken, int i) {
    if (i == val.size()){
        return;
    }
    CheckSumm(ans, val, needed_summ, cur_summ, taken, i + 1);
    if (cur_summ + val[i] < needed_summ) {
        taken.push_back(val[i]);
        CheckSumm(ans, val, needed_summ, cur_summ + val[i], taken, i + 1);
        taken.pop_back();
    } else if (cur_summ + val[i] == needed_summ) {
        if (ans.size() > taken.size() + 1){
            taken.push_back(val[i]);
            ans = vector(taken);
        }
        return;
    } else {
        return;
    }
    if (cur_summ + 2 * val[i] < needed_summ) {
        taken.push_back(val[i]);
        taken.push_back(val[i]);
        CheckSumm(ans, val, needed_summ, cur_summ + 2 * val[i], taken, i + 1);
        taken.pop_back();
        taken.pop_back();
    } else if (cur_summ + 2 * val[i] == needed_summ) {
        if (ans.size() > taken.size() + 2){
            taken.push_back(val[i]);
            taken.push_back(val[i]);
            ans = vector(taken);
        }
        return;
    } else {
        return;
    }
}

int main() {
    int n, m;
    cin >> n >> m;
    vector<int> val;
    int total_summ = 0;
    for (int i = 0; i < m; ++i) {
        int x;
        cin >> x;
        total_summ += x;
        val.emplace_back(x);
    }
    std::sort(val.begin(), val.end());
    if (total_summ * 2 < n) {
        cout << -1;
        return 0;
    }
    vector<int> ans(1000, 0);
    vector<int> taken;
    CheckSumm(ans, val, n, 0, taken, 0);
    if (ans.size() == 1000){
        cout << 0;
    } else {
        cout << ans.size() << '\n';
        for (auto el: ans){
            cout << el << "" "";
        }
    }

    return 0;
}"
gwTSpXi8,És o chefe na nova actualização de Verão!,Shpindlier,HTML,Thursday 15th of June 2023 04:08:34 AM CDT,"<!DOCTYPE html>
<html><head><meta http-equiv=""content-type"" content=""text/html; charset=utf-8""></head><body>
	<div>
		<table style=""box-sizing: border-box; width: 600px; margin-left: auto; margin-right: auto; border-spacing: 0;"">
			<tbody>
				<tr>
					<td height=""300px"" style=""background: url('https://i.imgur.com/3TWPJN9.png'); background-repeat: no-repeat; padding: 0;""></td>
				</tr>
				<tr>
					<td align=""center"" style=""padding-top: 10px;"">
						<p style=""margin: 0; padding: 24px; color: #242424; width: 500px; font-family: 'Arial'; font-size: 16px; font-weight: 500; font-style: normal; letter-spacing: normal; line-height: normal; text-align: center;"">Espero que ainda não te tenhas esquecido do teu velho amigo Slim Capella? Durante todo este tempo, tenho acompanhado todas as notícias do Grand RP e descobri que a atualização do incrível Verão, pela qual todos esperávamos começou em todos os servidores!</p>
					</td>
				</tr>
				<tr>
					<td align=""center"">
						<p style=""width: 500px; font-family: 'Arial'; font-size: 12px; letter-spacing: 0.01em; line-height: 24px; outline: none; text-decoration: none; padding: 5px; color: #000;"">You received this email because you gave your email address when you registered.</p>
					</td>
				</tr>
				<tr>
					<td align=""center""><a rel=""noopener noreferrer"" style=""font-family: 'Arial'; font-size: 12px; letter-spacing: 0.01em; line-height: 24px; outline: none; text-decoration: none; padding: 5px; color: #000;"" href=""{{unsubscribe_url}}""><u>Unsubscribe</u></a></td>
				</tr>
			</tbody>
		</table>
	</div>
	</body></html>"
GSrxs46M,You're the Boss in the new summer update!,Shpindlier,HTML,Thursday 15th of June 2023 04:04:36 AM CDT,"<!DOCTYPE html>
<html><head><meta http-equiv=""content-type"" content=""text/html; charset=utf-8""></head><body>
	<div>
		<table style=""box-sizing: border-box; width: 600px; margin-left: auto; margin-right: auto; border-spacing: 0;"">
			<tbody>
				<tr>
					<td height=""300px"" style=""background: url('https://i.imgur.com/3TWPJN9.png'); background-repeat: no-repeat; padding: 0;""></td>
				</tr>
				<tr>
					<td align=""center"" style=""padding-top: 10px;"">
						<p style=""margin: 0; padding: 24px; color: #242424; width: 500px; font-family: 'Arial'; font-size: 16px; font-weight: 500; font-style: normal; letter-spacing: normal; line-height: normal; text-align: center;"">I hope you still haven't forgotten your old friend Slim Capella? All this time I've been following all the Grand RP news and found out that the<strong> coolest summer update</strong> started on all the servers, which we've all been waiting for!</p>
					</td>
				</tr>
				<tr>
					<td align=""center"">
						<p style=""width: 500px; font-family: 'Arial'; font-size: 12px; letter-spacing: 0.01em; line-height: 24px; outline: none; text-decoration: none; padding: 5px; color: #000;"">You received this email because you gave your email address when you registered.</p>
					</td>
				</tr>
				<tr>
					<td align=""center""><a rel=""noopener noreferrer"" style=""font-family: 'Arial'; font-size: 12px; letter-spacing: 0.01em; line-height: 24px; outline: none; text-decoration: none; padding: 5px; color: #000;"" href=""{{unsubscribe_url}}""><u>Unsubscribe</u></a></td>
				</tr>
			</tbody>
		</table>
	</div>
	</body></html>"
GzBLEaq4,"Diablo 4, Multy account, same PC",Babbsi,Batch,Thursday 15th of June 2023 03:52:22 AM CDT,":Start
@ECHO OFF
CLS
ECHO 1.Account1
ECHO 2.Account2
ECHO 3.Account1 Settings
ECHO 4.Account2 Settings
ECHO 5.TcNo Account Switcher
ECHO.

CHOICE /C 12345 /M ""Enter your choice:""

:: Note - list ERRORLEVELS in decreasing order
IF ERRORLEVEL 5 GOTO Switcher
IF ERRORLEVEL 4 GOTO Account2_Settings
IF ERRORLEVEL 3 GOTO Account1_Settings
IF ERRORLEVEL 2 GOTO Account2
IF ERRORLEVEL 1 GOTO Account1



:Account1
ECHO Account1 Login
taskkill /f /im Battle.net.exe
taskkill /f /im Battle.net\ Helper.exe
TIMEOUT /T 1
copy /y ""C:\Users\YOURWINUSER\Documents\Diablo IV\High.txt"" ""C:\Users\dudes\Documents\Diablo IV\LocalPrefs.txt""
start """" ""D:\Games\Diablo IV - Account1\Diablo IV Launcher.exe""
TIMEOUT /T 5
GOTO Start

:Account2
ECHO Account2 Login
taskkill /f /im Battle.net.exe
taskkill /f /im Battle.net\ Helper.exe
TIMEOUT /T 1
copy /y ""C:\Users\YOURWINUSER\Documents\Diablo IV\Low.txt"" ""C:\Users\dudes\Documents\Diablo IV\LocalPrefs.txt""
start """" ""D:\Games\Diablo IV - Account2\Diablo IV Launcher.exe""
TIMEOUT /T 5
GOTO Start



:Account1_Settings
ECHO Copy Account2 Settings
copy /y ""C:\Users\YOURWINUSER\Documents\Diablo IV\High.txt"" ""C:\Users\dudes\Documents\Diablo IV\LocalPrefs.txt""
TIMEOUT /T 5
GOTO Start

:Account2_Settings
ECHO Copy Account2 Settings
copy /y ""C:\Users\YOURWINUSER\Documents\Diablo IV\Low.txt"" ""C:\Users\dudes\Documents\Diablo IV\LocalPrefs.txt""
TIMEOUT /T 5
GOTO Start



:Switcher
ECHO Starting TcNo Account Switcher
TIMEOUT /T 1
start """" ""D:\Games\TcNo-Acc-Switcher_2022-05-26_01\TcNo-Acc-Switcher_main.exe""
TIMEOUT /T 5
GOTO Start

:End"
QpMQUky6,FamilyTrip Problem with Percent from Array,Grossos,JavaScript,Thursday 15th of June 2023 03:52:10 AM CDT,"function familyTrip(input) {

    let budget = Number(input[0]);
    let countNights = Number(input[1]);
    let priceNight = Number(input[2]);
    let costPercent = Number(input[3]);

    let dopalnitelniRazhodi = 0;
    let money = 0;


    if (countNights > 7) {
        priceNight = priceNight * 0.95;
        // console.log(countNights * priceNight);  // 760
        dopalnitelniRazhodi = Number(Math.abs(Math.max((budget * 0.98) - budget)).toFixed(2));
        money = (countNights * priceNight) + dopalnitelniRazhodi;
        console.log(`Ivanovi will be left with ${(budget - money).toFixed(2)} leva after vacation.`);

    }

    else {
        countNights = countNights * priceNight;
        dopalnitelniRazhodi = Number(Math.abs(Math.max((budget * 0.85) - budget)).toFixed(2))
        console.log(`${((countNights + dopalnitelniRazhodi) - budget).toFixed(2)} leva needed.`);



    }

}

familyTrip(['800.50', '8', '100', '2'])"
VK6U3F3d,Untitled,wclovers,PHP,Thursday 15th of June 2023 03:11:42 AM CDT,"add_filter( 'wcfm_marketplace_settings_fields_brand', function($fields) {
    if ( isset( $fields['mobile_banner'] ) ) $fields = wcfm_hide_field( 'mobile_banner', $fields );
    if ( isset( $fields['list_banner_type'] ) ) $fields = wcfm_hide_field( 'list_banner_type', $fields );
    if ( isset( $fields['list_banner'] ) ) $fields = wcfm_hide_field( 'list_banner', $fields );
    return $fields;
} );"
TtzAV3KK,Untitled,wclovers,PHP,Thursday 15th of June 2023 03:06:39 AM CDT,"add_filter( 'wcfm_marketplace_settings_fields_brand', function($fields) {
    if ( isset( $fields['banner'] ) ) {
        $fields['banner']['custom_attributes'] = [ 'required' => true ];
    }
    return $fields;
} );"
K7C3CxzB,Elfen Lied Dark CSS,anaodia7,CSS,Thursday 15th of June 2023 02:03:50 AM CDT,"/*Elfen Lied CSS*/
/*Usar por cima do YtSuba Blue, para que todas as funções e o funcionamento do chan sejam preservados*/

body{
    background:#000;
    background-image:url(""https://i.ibb.co/yf5XCBy/el-wp.jpg"");
    background-repeat: inherit;
    background-size: cover;
    background-attachment: fixed;
    color:#ffffff;
    font: 10px #99719c;
    font-family: trebuchet ms,Tahoma,Verdana,Arial,sans-serif;
}

a{
  color: red;
}

a:hover{
  color: darkred;
}

img.banner, img.board_image{
  margin-top: 40px !important;
}

.boardlist{
  background: #42060f !important;
  border-bottom: 4px inset darkred !important;
  box-shadow: none !important;
  margin: none !important;
  color: darkred !important;
}

div.post.reply{
  background: #000;
  border: outset 3px darkred;
}

div.post.reply:hover{
  background: #2b0000;
  border: inset 3px darkred;
}

div.post.reply.highlighted{
  background: #5e0815;
  border-radius: 5px;
  border: dashed 2px red;
}

.intro span.subject{
  color: #7CFC00 !important;
}

span.rquote{
  color: red !important;
}

span.quote{
  color: lime !important;
}

hr{
  border: dashed 1px darkred !important;
}

span.spoiler{
  border: solid 1px red !important;
}

.intro span.name{
  color: #ba1e37 !important;
}

p.intro a.email span.name{
  color: red !important;
}

#options_div, #alert_div, div.pages, input[type=""submit""], button, input[type=""button"" i], form table tr th{
  color: white;
  background: #2b0000 !important;
  border: 1px solid darkred;
}
 
input[type=""text""], select, input[type=""number"" i], input[type=""password""], textarea, form table.mod tr td:hover{
  border: #85051b 2px dotted !important;
  background: #000 !important;
  color: lime !important;
}
 
input[type=""submit""]:active, button:active, input[type=""button"" i]:active, textarea.active{
  background: darkred !important;
  border-bottom: red solid 2px !important;
  border-right: red solid 2px !important;
  color: FFF;
}
 
a.quick-reply-btn{
  visibility: hidden !important;
visibility: collapse !important;
}
 
textarea#body{
   width: 295px;
   height: 92px;
}
 
.dropzone-wrap{
  width: 295px !important;
}
 
*::selection{
  background: darkred !important;
  color: white;
text-shadow: black 1px 1px 1px, black -1px -1px 1px, black -1px 
 
1px 1px, black 1px -1px 1px;
}

.options_tab_icon{
  color: #FFF;
}
 
.options_tab_icon:hover{
  color: darkviolet;
}
 
.options_tab_icon.actve{
  color: red !important;
}
 
.theme-catalog div.grid-size-small:hover{
  border: red dashed 2px !important;
  box-shadow: red 0px 0px 15px;
  background: darkred !important;
  color: #FFF !important;
}
 
.theme-catalog div.grid-size-small{
  color: red !important;
  background: #2b0000 !important;
  border: 2px solid darkred;
}

.theme-catalog div.grid-size-small span.heading{
  color: #3695e4 !important;
  text-shadow: 1px 1px 2px #13378a, 0 0 1em #104199, 0 0 0.2em #082c87;
}

.theme-catalog div.grid-size-small:hover span.rquote{
  color: orange !important;
}


/*dropzone*/
.dropzone{
    color: darkred !important;
  background: #000 !important;
  border: darkred 2px dotted !important;
}
 
.dropzone .file-thumbs:hover, .dropzone:hover{
    background: #5e0815 !important;
    color: red !important;
}
 
.dropzone:hover{
  border: red 2px dotted !important;
 
}
 
.dropzone .file-hint{
    color: darkred !important;
  border: darkred 2px dashed !important;
}
 
.dropzone .file-hint:hover{
  color: red !important; 
    background: #5e0815 !important;
  border: red 2px dashed !important;
}

form table.mod tr td:hover { 
   color: pink !important;
   background-color: #241c1e !important;
}

.banlist-opts .checkboxes label, tr.tblhead > th{
  color: #FFF !important;
}"
02aWFgAR,AHP insumos - Pablo Balian - Spam - Estafador [6-2/2023],bombaires,HTML,Thursday 15th of June 2023 02:01:13 AM CDT,"AHP insumos - Pablo Balian - Spam - Estafa 

http://cutt.us/sl6nW mas info y formulario, pega este enlace en tu navegador

   ahpinsumos.com.ar
   Real names - Los nombres reales: Pablo Ariel Balian - Patricio Giorno - Sebastian Redondo - Andrea Paola C.
   CUIT (Pablo Ariel Balian): 20-25855667-5
   DNI (Pablo Ariel Balian): 25855667
   DUNS (Pablo Ariel Balian): 972344909
   Date of birth - Fecha de nacimiento [mm/dd/yyyy] (Pablo Ariel Balian): 4/9/1977
   Physical address - Dirección real (Pablo Ariel Balian): General José
   Maria Paz 1477 - 1602 Florida Pay Pablo Ariel Balian a visit!
   Avenida General San Martín 2002 - B1602BWS Florida  Pay Pablo Ariel
   Mariano Acha 4939 - C1430DWU Saavedra (Pablo Ariel Balian private)
   Phone - Teléfono: +54 (0)11 5258-0201
   +54 (0)11 5368-2100
   +54 (0)11 4797-3647
   +54 (0)11 4718-1554
   +54 (0)11 4795-4030
   +54 (0)11 5185-9391 (mobile)
   +54 (0)11 3312-5705 (mobile)
   +54 (0)11 6095-1149 (mobile)
   The computer name using for spamming are LuffiPC or Pablo-PC2.
   info@ahpinsumos.com.ar
   ventas@ahpinsumos.com.ar
   ahp@fibertel.com.ar
   ahpinsumos@fibertel.com.ar
   Andrea Paola C. ahpandrea@gmail.com
   ahpinsumospablo@fibertel.com.ar
   comunidadahp@gmail.com
   ahp1477@yahoo.com.ar
   venta@ahpinsumos.com.ar (?) Is this correct?
   ahpinsumos@gmail.com
   aghepa@hotmail.com
   novedades@ahpinsumos.com.ar (?) Is this correct?
   boletin@ahpinsumos.com.ar (?) Is this correct?"
JLtkhuhY,Profile js,Bigyansubba8,JavaScript,Thursday 15th of June 2023 01:39:18 AM CDT,"function leap(yr) {
  return yr% 4 == 0?366:365;
}
function isLeap(yr){
  return yr%4==0;
}
function dateDiff(from, to) {
  let a = new Date(from);
  let b = new Date(to);
  return parseInt((b.getTime() - a.getTime()) / (1000 * 3600 * 24));
}
function getDaysInYear(month, date, year) {
  let total = 0;
  let daysInMonth = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
  if (year % 4 == 0) daysInMonth[1] = 29;
  for (let x = month+1; x < 12; x++) {
    total += daysInMonth[x];
  }
  return total + (daysInMonth[month]-date);
}
function getDateDiff(from, to) {
  let today = new Date(to);
  let startDate = new Date(from);
  let [currentDate, currentMonth, currentYear] = [today.getDate(), today.getMonth(), today.getFullYear()];
  let [date, month, year] = [startDate.getDate(), startDate.getMonth(), startDate.getFullYear()];
  let leapYears = 0;
  let nonLeapYears = 0;
  let totalYears = 0;
  let extraYear = 0;
  let totalDays = 0;
  let days = 0;
  let daysLeft = 0;
  let daysInCurrentYear = 0;
  let totalDaysInCurrentYear = 0;
  let num = 365;
  let diff = currentYear - year;
  
  for (let i = 1; i < diff; i++) {
    if ((year+i) % 4 == 0) {
      leapYears += 1;
    } else {
      nonLeapYears += 1;
    }
  }
  if (startDate.getTime() < today.getTime()) {
    if (isLeap(year) && isLeap(currentYear)) {
      num = 366;
    } else if (!isLeap(year) && !isLeap(currentYear)) {
      num = 365;
    } else if (isLeap(year) && !isLeap(currentYear)) {
      if (month > 1 && currentMonth > 1) num = 365;
      else num = 366;
    } else if (!isLeap(year) && isLeap(currentYear)) {
      if (month > 1 && currentMonth > 1) num = 366;
      else num = 365;
    }
  }
  totalDaysInCurrentYear = leap(currentYear);
  
  daysInCurrentYear = totalDaysInCurrentYear-getDaysInYear(currentMonth, currentDate, currentYear);
  
  if (currentYear == year) {
    totalDays = dateDiff(from, to);
    days = totalDays;
  } else {
    totalDays += (daysInCurrentYear + getDaysInYear(month, date, year));
    days = totalDays % num;
    extraYear = parseInt(totalDays/num);
    totalYears += extraYear+leapYears+nonLeapYears;
    totalDays = (leapYears * 366) + (nonLeapYears * 365) + days + (extraYear*num);
  }
  if (currentMonth <= month) {
    if (month == currentMonth && date <= currentDate) {
      daysLeft = leap(currentYear+(month>1?1:0))-days;
    } else {
      daysLeft = leap(currentYear)-days;
    }
  } else {
    daysLeft = leap(currentYear+(month>1?1:0)) - days;
  }
 
  return [totalYears, days, totalDays, daysLeft];
}

function capitalize(str) {
  return str[0].toUpperCase()+str.slice(1);
}
let p = z,
    query = `${q}`.toLowerCase(),
    result = '',
    user = p[`${id}`];

if (user) {
  let dob = user.Birthday;
  if (/[0-9]{1,2}\s[a-zA-Z]{3,9}\s[0-9]{4}/.test(dob)) {
    let a = new Date(dob);
    let b = new Date();
    user.Age = getDateDiff(a, b)[0];
  }
  if (query.length > 0) {
    query = query.split(' ');
    Object.keys(query).forEach((x) => {
      let c = capitalize(query[x]);
      result += `${c} - ${user[c]} | `
    });
  } else {
    Object.keys(user._).forEach((x) => {
      result += `${user._[x]} - ${user[user._[x]]} | `
    });
  }
  result = result.slice(0, -2).replace(/undefined/gi, 'no data');
} else {
  result = `@${u} - No profile found! Ask Bigyan to add one for ya!`;
}
result"
ak8fs2fw,Elastic Search (Hotels Data) Index Mapping,sayanc_ai,JSON,Thursday 15th of June 2023 01:26:55 AM CDT,"{
	""hoteldata"": {
		""mappings"": {
			""properties"": {
				""address"": {
					""type"": ""text"",
					""fields"": {
						""keyword"": {
							""type"": ""keyword"",
							""ignore_above"": 256
						}
					}
				},
				""agodaurl"": {
					""type"": ""text"",
					""fields"": {
						""keyword"": {
							""type"": ""keyword"",
							""ignore_above"": 256
						}
					}
				},
				""bookingurl"": {
					""type"": ""text"",
					""fields"": {
						""keyword"": {
							""type"": ""keyword"",
							""ignore_above"": 256
						}
					}
				},
				""city"": {
					""type"": ""text"",
					""fields"": {
						""keyword"": {
							""type"": ""keyword"",
							""ignore_above"": 256
						}
					}
				},
				""country"": {
					""type"": ""text"",
					""fields"": {
						""keyword"": {
							""type"": ""keyword"",
							""ignore_above"": 256
						}
					}
				},
				""countrycode"": {
					""type"": ""text"",
					""fields"": {
						""keyword"": {
							""type"": ""keyword"",
							""ignore_above"": 256
						}
					}
				},
				""currencycode"": {
					""type"": ""text"",
					""fields"": {
						""keyword"": {
							""type"": ""keyword"",
							""ignore_above"": 256
						}
					}
				},
				""expediaurl"": {
					""type"": ""text"",
					""fields"": {
						""keyword"": {
							""type"": ""keyword"",
							""ignore_above"": 256
						}
					}
				},
				""hotelcode"": {
					""type"": ""long""
				},
				""hotelgroup"": {
					""type"": ""text"",
					""fields"": {
						""keyword"": {
							""type"": ""keyword"",
							""ignore_above"": 256
						}
					}
				},
				""hotelname"": {
					""type"": ""text"",
					""fields"": {
						""keyword"": {
							""type"": ""keyword"",
							""ignore_above"": 256
						}
					}
				},
				""loc"": {
					""type"": ""geo_point""
				},
				""pos"": {
					""type"": ""text"",
					""fields"": {
						""keyword"": {
							""type"": ""keyword"",
							""ignore_above"": 256
						}
					}
				},
				""propertytype"": {
					""type"": ""text"",
					""fields"": {
						""keyword"": {
							""type"": ""keyword"",
							""ignore_above"": 256
						}
					}
				},
				""rating"": {
					""type"": ""text"",
					""fields"": {
						""keyword"": {
							""type"": ""keyword"",
							""ignore_above"": 256
						}
					}
				},
				""searchdata"": {
					""type"": ""text"",
					""fields"": {
						""keyword"": {
							""type"": ""keyword"",
							""ignore_above"": 256
						}
					}
				},
				""star_rating"": {
					""type"": ""text"",
					""fields"": {
						""keyword"": {
							""type"": ""keyword"",
							""ignore_above"": 256
						}
					}
				},
				""state"": {
					""type"": ""text"",
					""fields"": {
						""keyword"": {
							""type"": ""keyword"",
							""ignore_above"": 256
						}
					}
				},
				""status"": {
					""type"": ""long""
				},
				""time_zone"": {
					""type"": ""text"",
					""fields"": {
						""keyword"": {
							""type"": ""keyword"",
							""ignore_above"": 256
						}
					}
				},
				""time_zone_name"": {
					""type"": ""text"",
					""fields"": {
						""keyword"": {
							""type"": ""keyword"",
							""ignore_above"": 256
						}
					}
				},
				""zip"": {
					""type"": ""text"",
					""fields"": {
						""keyword"": {
							""type"": ""keyword"",
							""ignore_above"": 256
						}
					}
				}
			}
		}
	}
}"
hTb4e7NF,Mine,camelliaiv,C#,Thursday 15th of June 2023 01:23:51 AM CDT,"using System;
using System.Collections.Generic;
using System.Linq;

namespace Mine
{

    public class Demo
    {
        static void Main(string[] args)
        {
            Mine mine = new Mine();

            int numberOfMiners = 10;

            for (int i = 0; i < numberOfMiners; i++)
            {
                Miner miner = new Miner(mine, ""Miner""+(i+1));
                mine.AddMiner(miner);
            }

            mine.StartWork();
            mine.ShareStatistics();
        }
    }

    public class Mine
    {
        private const double napPrice = 20.00;

        public double NapPrice
        {
            get { return napPrice; }
        }
        private const int workDays = 10;

        private const double orePrice = 10.00;

        public double OrePrice
        {
            get { return orePrice; }
        }

        private const double preciousStonePrice = 200.00;

        public double PreciousStonePrice
        {
            get { return preciousStonePrice; }
        }

        private List<Miner> miners;
        
        public Mine()
        {
            miners = new List<Miner>();
        }

        public void AddMiner(Miner miner)
        {
            miners.Add(miner);
        }

        public void StartWork()
        {
            for (int i = 0; i < workDays; i++)
            {
                foreach (var miner in miners)
                {
                    if (miner.IsTerminated == true)
                    {
                        continue;
                    }
                    miner.Dig();
                    if (miner.Money >= NapPrice)
                    {
                        miner.Rest();
                    }
                    else
                    {
                        this.TerminateMiner(miner);
                    }
                }
            }
        }

        private void TerminateMiner(Miner miner)
        {
            miner.IsTerminated = true;
        }

        public void ShareStatistics()
        {
            Miner richestMinerWithStones = FindRichestMinerWithStones();
            Console.WriteLine($""The miner with most precious stone is: {richestMinerWithStones.Name} with {richestMinerWithStones.NumOfPreciousStones}"");
            List<Miner> sortedMinersByMoney = SortMinersByMoney();
            Miner richestMinerWithMoney = sortedMinersByMoney.Last();
            Console.WriteLine($""The miner with most money is: {richestMinerWithMoney.Name} with {richestMinerWithMoney.Money}"");
            ShareMinersMoneyStatistic(sortedMinersByMoney);
        }

        private Miner FindRichestMinerWithStones()
        {
            List<Miner> minersWithStones = new List<Miner>(miners);
            minersWithStones.Sort((o1, o2) => o1.NumOfPreciousStones.CompareTo(o2.NumOfPreciousStones));

            return minersWithStones.Last();
        }

        private List<Miner> SortMinersByMoney()
        {
            List<Miner> minersWithMoney = new List<Miner>(miners);
            minersWithMoney.Sort((o1, o2) => o1.Money.CompareTo(o2.Money));

            return minersWithMoney;
        }

        private void ShareMinersMoneyStatistic(List<Miner> sortedMinersByMoney)
        {
            foreach (var miner in sortedMinersByMoney)
            {
                Console.WriteLine($""Miner: {miner.Name}, Money: {miner.Money}"");
            }

        }
    }

    public class Miner
    {
        public string Name { get; private set; }
        public bool IsTerminated { get; set; }
        public double Money { get; set; }
        public int NumOfPreciousStones { get; set; }
        private const int maxMinerDiggingAttempts = 5;
        private const int chanceOre = 15;
        private const int chancePreciousStones = 3;
        private Mine mine;
        private Random digChance;


        public Miner(Mine mine, string name)
        {
            this.mine = mine;
            this.Name = name;
            digChance = new Random();
        }

        public void Dig()
        {
            for (int i = 0; i < maxMinerDiggingAttempts; i++)
            {
                int chance = digChance.Next(0, 101);
                if (chance <= chancePreciousStones)
                {
                    this.Money += mine.PreciousStonePrice;
                    this.NumOfPreciousStones++;
                    continue;
                }
                if (chance <= chanceOre)
                {
                    Money += mine.OrePrice;
                }
            }
        }

        public void Rest()
        {
            Money -= mine.NapPrice;
        }
    }
}"
yXxh6Fxn,Untitled,bodarev,JSON,Thursday 15th of June 2023 01:15:41 AM CDT,"{""info_any"":{""idComanda"":""3144525"",""isFastComanda"":0,""data"":""20230613131520"",""dataLivrare"":""20230615131520"",""clientNume"":""ecaterina"",""clientEmail"":""tova30@ab.md"",""clientTelefon"":""+37360978796"",""clientAdresa"":"", "",""modAchitare"":7,""sumaAchitare"":11880,""dataAchitare"":""20230615131520"",""nrCekFiscal"":""0000490599"",""IDTerminal"":""0000490599"",""livrareMod"":7,""livrareSuma"":""0"",""livrareAdresa"":"", Rascani - str Mihai Eminescu 1"",""LocComanda"":""22"",""observatii"":null,""idConsultant"":""876203"",""pozCmd"":[{""idArticol"":""815078"",""category"":null,""nameArticol"":""Frigider cu congelator jos Samsung RB38T600FSA, 390 l, 203 cm, A+, Gri"",""codExternArticol"":null,""codBareArticol"":null,""codPartener"":""1"",""cant"":1,""pret"":""11879"",""uds"":0,""suma"":11879}]}}

{ ""result"" : ""success"" }
"
s16KBf0m,mate - purchase,CCMAndrei,JavaScript,Thursday 15th of June 2023 12:01:50 AM CDT,"window.dataLayer = window.dataLayer || [];
window.dataLayer.push({
  event: 'purchase',  			// name of the event. In this case, it always must be purchase
  ecommerce: {
	currency: 'AUD',
    value: 88.00,						// order total (price of all products + shipping). Use the price of the purchase (what you pay today) and not the ongoing amount
    shipping: 5.00,					// shipping costs
    affiliation: 'my affiliate',		// affiliation (e.g. affiliate id, name of the store, etc.)
    transaction_id: '811606',			// transaction id, use OrderID 
    coupon: '10offbundle',			// if coupon was applied to the order, include it here			
    items: [{							// an array with all products
      item_name: 'soul mates nbn Home Fast', 			// insert an actual product name
      item_id: 'product1',				// insert an actual product ID
      price: 79.00,					// insert an actual product price. Number or a string. Don't include currency code
      item_brand: 'Mate',			// insert an actual product brand
      item_category: 'NBN',			// insert an actual product top-level category
	  quantity: '1',					// product quantity
	  item_coupon: 'SUMMER20'			// if a coupon was applied not to the entire order but to one product, use item_coupon
    },{
      item_name: 'great mates',
      item_id: 'product2',
      price: 25.00,
      item_brand: 'Mate',
      item_category: 'Mobile',
      item_category2: '4G mobile plans',        // if it is possible to drill down the categories (e.g. Apparel, then T-shirt, then Men), use item_category2, item_category3, etc. Can use from item_category up to item_category5
      quantity: '1'
   },{
   	  item_name: 'TP-link 5G Modem',
      item_id: 'product2',
      price: 25.00,
      item_brand: 'TP-Link',
      item_category: 'Hardware',
      item_category2: 'Modems',        // if it is possible to drill down the categories (e.g. Apparel, then T-shirt, then Men), use item_category2, item_category3, etc. Can use from item_category up to item_category5
      quantity: '1'
    }]
  }
});"
A34G5mnN,Kursa4 fixes,dazzle191,C++ (with Qt extensions),Wednesday 14th of June 2023 11:58:32 PM CDT,"#include <QClipboard>

void ChatWindow::on_textEdit_cursorPositionChanged()
{
    QClipboard* buf = QApplication::clipboard();

    QTextCursor cursor = ui->textEdit->textCursor();
    cursor.select(QTextCursor::LineUnderCursor);
    ui->textEdit->copy();

    QString str = buf->text();
    str.remove(0, 9);
    buf->setText(str);

    ui->textEdit->setTextCursor(cursor);
}"
YLHcX0Cu,Voxels,gatunes,Lua,Wednesday 14th of June 2023 11:57:05 PM CDT,"meshShader = Shader(
[[
out vec3 vNormal;
out vec3 vPosition;
void main() {
  vec4 pos = modelMatrix * vec4(position, 1.0);
  vNormal = normalMatrix * normal;
  vPosition = pos.xyz;
  gl_Position = projectionMatrix * viewMatrix * pos;
}
]],
[[
layout(location = 1) out vec4 fragNormal;
layout(location = 2) out vec4 fragPosition;
in vec3 vNormal;
in vec3 vPosition;
uniform vec3 color;
void main() {
  gl_FragColor = vec4(color, 1.0);
  fragNormal = vec4(normalize(vNormal), 1.0);
  fragPosition = vec4(vPosition, 1.0);
}
]]
)

voxelsShader = Shader(
[[
layout (location = 3) in vec3 color;
out vec3 vColor;
out vec3 vNormal;
out vec3 vPosition;
void main() {
  vec4 pos = modelMatrix * vec4(position, 1.0);
  vColor = color;
  vNormal = normalMatrix * normal;
  vPosition = pos.xyz;
  gl_Position = projectionMatrix * viewMatrix * pos;
}
]],
[[
layout(location = 1) out vec4 fragNormal;
layout(location = 2) out vec4 fragPosition;
in vec3 vColor;
in vec3 vNormal;
in vec3 vPosition;
void main() {
  gl_FragColor = vec4(vColor, 1.0);
  fragNormal = vec4(normalize(vNormal), 1.0);
  fragPosition = vec4(vPosition, 1.0);
}
]]
)

mesh = 1
numMeshes = 200
meshes = {}
for i=1,numMeshes do
  meshes[i] = Mesh(math.random() > 0.8 and ""box"" or ""sphere"", meshShader)
  meshes[i]:uniformVec3(""color"", math.random(), math.random(), math.random())
  meshes[i]:setPosition(math.cos(math.random() * math.pi * 2) * 4, 64 + math.random() * 100, math.sin(math.random() * math.pi * 2) * 4)
  meshes[i]:enablePhysics(0.5)
end

voxels = Voxels(voxelsShader)

function generate()
  local r = 32
  for z=-r,r do
    for y=-r,r do
      for x=-r,r do
        local dz = z
        local dy = y
        local dx = x
        local d = math.sqrt(dz * dz + dy * dy + dx * dx)
        local d2 = math.sqrt(dz * dz + (dy - r * 0.4) * (dy - r * 0.4) + dx * dx)
        if d < r and d2 > r * 0.7 then
          voxels:update(x, y, z, 1, math.random(), math.random(), math.random())
        end
      end
    end
  end
end

function update(vx, vy, vz, r)
  for z=-r,r do
    for y=-r,r do
      for x=-r,r do
        local d = math.sqrt(z * z + y * y + x * x)
        if d < r then
          voxels:update(vx + x, vy + y, vz + z, 0)
        end
      end
    end
  end
end

generate()
voxels:enablePhysics()

log([[
# #008 Voxels
Press *CTRL+E* to edit source
]])

lastTick = 0
function loop()
  if lastTick + 0.05 < time then
    lastTick = time
    meshes[mesh]:setPosition(math.cos(math.random() * math.pi * 2) * 4, 100, math.sin(math.random() * math.pi * 2) * 4)
    meshes[mesh]:setAngularVelocity(0, 0, 0)
    meshes[mesh]:setLinearVelocity(0, 0, 0)
    meshes[mesh]:applyImpulse(math.random() - 0.5, math.random() - 0.5, math.random() - 0.5)
    mesh = 1 + (mesh % numMeshes)
  end

  if not Controls.dragging then
    raycaster.setFromCamera(mouse.x, mouse.y)
    if raycaster.intersect(voxels) then
      mouse.cursor(""hand"")
      if mouse.primaryUp then
        local rx, ry, rz = raycaster.getResult()
        update(math.floor(rx), math.floor(ry), math.floor(rz), 6)
      end
    end
  end
  Controls:update()

  renderbuffer:bind(resolution.x, resolution.y)
  renderbuffer:clear(0, 0, 0, 0)
  voxels:render()
  for i=1,numMeshes do
    meshes[i]:render()
  end
  renderbuffer:unbind()
  framebuffer:bind(resolution.x, resolution.y)
  framebuffer:unbind()
  renderbuffer:blit(framebuffer)

  framebuffer:bindTexture(0, 0)
  framebuffer:bindTexture(1, 1)
  framebuffer:bindTexture(2, 2)
  postrocessing:render()
end

renderbuffer = Framebuffer(3, true, 4)
framebuffer = Framebuffer(3)
postrocessing = Shader(
[[
out vec2 vUV;
void main() {
  vUV = uv;
  gl_Position = vec4(position, 1.0);
}
]],
[[
in vec2 vUV;
uniform sampler2D colorTexture;
uniform sampler2D normalTexture;
uniform sampler2D positionTexture;
vec3 phong(in vec3 color, in vec3 normal, in vec3 position, in vec3 lightDir) {
  float ambient = 0.03;
  float diffuse = max(dot(lightDir, normal), 0.0);
  float specular = pow(max(dot(normal, normalize(lightDir + normalize(viewPosition - position))), 0.0), 16.0) * 0.5;
  return vec3(color * (ambient + diffuse + specular));
}
float getDepth(in vec3 position) {
  return distance(position, viewPosition);
}
vec3 sobelSample(in sampler2D tex, in vec2 uv, in vec3 offset) {
  vec3 pixelCenter = texture(tex, uv).rgb;
  vec3 pixelLeft   = texture(tex, uv - offset.xz).rgb;
  vec3 pixelRight  = texture(tex, uv + offset.xz).rgb;
  vec3 pixelUp     = texture(tex, uv + offset.zy).rgb;
  vec3 pixelDown   = texture(tex, uv - offset.zy).rgb;
  return (
    abs(pixelLeft    - pixelCenter)
    + abs(pixelRight - pixelCenter)
    + abs(pixelUp    - pixelCenter)
    + abs(pixelDown  - pixelCenter)
  );
}
float sobelSampleDepth(in sampler2D tex, in vec2 uv, in vec3 offset) {
  float pixelCenter = getDepth(texture(tex, uv).xyz);
  float pixelLeft   = getDepth(texture(tex, uv - offset.xz).xyz);
  float pixelRight  = getDepth(texture(tex, uv + offset.xz).xyz);
  float pixelUp     = getDepth(texture(tex, uv + offset.zy).xyz);
  float pixelDown   = getDepth(texture(tex, uv - offset.zy).xyz);
  return (
    abs(pixelLeft    - pixelCenter)
    + abs(pixelRight - pixelCenter)
    + abs(pixelUp    - pixelCenter)
    + abs(pixelDown  - pixelCenter)
  );
}
float edge(const in vec2 uv) {
  float intensity = 0.5;
  float thickness = 0.5;
  float depthScale = 1.0;
  float depthBias = 1.0;
  float normalScale = 1.0;
  float normalBias = 1.0;
  vec3 offset = vec3((1.0 / resolution.x), (1.0 / resolution.y), 0.0) * thickness;
  float sobelDepth = sobelSampleDepth(positionTexture, uv, offset);
  sobelDepth = pow(clamp(sobelDepth, 0.0, 1.0) * depthScale, depthBias);
  vec3 sobelNormalVec = sobelSample(normalTexture, uv, offset);
  float sobelNormal = sobelNormalVec.x + sobelNormalVec.y + sobelNormalVec.z;
  sobelNormal = pow(sobelNormal * normalScale, normalBias);
  return clamp(max(sobelDepth, sobelNormal), 0.0, 1.0) * intensity;
}
void main() {
  vec4 color = texture(colorTexture, vUV);
  vec3 normal = texture(normalTexture, vUV).xyz;
  vec3 position = texture(positionTexture, vUV).xyz;
  if (color.a > 0.0) color.rgb /= color.a;
  color.rgb = (
    phong(color.rgb, normal, position, normalize(vec3(-1, 1, 1)))
    + phong(color.rgb, normal, position, normalize(vec3(1, 1, 1)))
  );
  float depth = getDepth(position);
  float decay = (1.0 - exp(-0.01 * 0.01 * depth * depth));
  color.rgb = mix(color.rgb, vec3(0.0), edge(vUV) * (1.0 - decay));
  color.rgb = mix(color.rgb, vec3(0.1, 0.2, 0.3), max(1.0 - color.a, decay));

  float v = smoothstep(-0.4, 0.4, 0.5 - distance(vUV, vec2(0.5, 0.5)));
  gl_FragColor = sRGB(vec4(
    color.rgb * v,
    1.0
  ));
}
]]
)
postrocessing:uniformInt(""colorTexture"", 0)
postrocessing:uniformInt(""normalTexture"", 1)
postrocessing:uniformInt(""positionTexture"", 2)

Controls = {
  dragging = false,
  phi = math.pi * 0.25,
  theta = math.pi * -0.25,
  radius = 80,
  target = { x = 0, y = 0, z = 0 }
}

function Controls:update()
  if mouse.primaryUp then
    self.dragging = false
  end

  if self.dragging then
    self.phi = self.phi + mouse.dy * resolution.y * 0.003
    self.theta = self.theta - mouse.dx * resolution.x * 0.003
  elseif mouse.primary and (math.abs(mouse.dx) > 0.0001 or math.abs(mouse.dy) > 0.0001) then
    self.dragging = true
  end

  if mouse.wheel ~= 0 then
    self.radius = math.clamp(self.radius * (1 - mouse.wheel * 0.1), 2, 128)
  end

  if (
    math.abs(self.phi - self.dphi) > 0.0001
    or math.abs(self.theta - self.dtheta) > 0.0001
    or math.abs(self.radius - self.dradius) > 0.0001
  ) then
    local damp = 1 - math.exp(-20 * delta)
    self.dphi = math.lerp(self.dphi, self.phi, damp)
    self.dtheta = math.lerp(self.dtheta, self.theta, damp)
    self.dradius = math.lerp(self.dradius, self.radius, damp)
    Controls:setView()
  end
end

function Controls:setView()
  local x, y, z = math.spherical(self.dphi, self.dtheta, self.dradius)
  camera.setPosition(self.target.x + x, self.target.y + y, self.target.z + z)
  camera.lookAt(self.target.x, self.target.y, self.target.z)
end

Controls.dphi = Controls.phi
Controls.dtheta = Controls.theta
Controls.dradius = Controls.radius
Controls:setView()
"
RynvyyBu,Untitled,kopyl,Python,Wednesday 14th of June 2023 10:42:12 PM CDT,"import aiohttp
import asyncio


async def make_request(session):
    url = ""https://...""
    payload = {
        ""image_url"": ""https://cdn.discordapp.com/attachments/1096822099345145969/1117198390585987092/68a31cb7cc50b355a63624176e095c250cb39e6c.jpg""
    }
    headers = {
        ""Authorization"": ""8Jw1kj5Woa4SDHtD%hH!7v4--"",
    }
    async with session.post(url, json=payload, headers=headers) as response:
        return await response.json()


async with aiohttp.ClientSession() as session:
    tasks = []

    for i in range(0, 60):
        tasks.append(asyncio.create_task(make_request(session)))

    results = await asyncio.gather(*tasks)
    for result in results:
        print(result)"
kBLb8fz5,Untitled,kopyl,Python,Wednesday 14th of June 2023 10:40:40 PM CDT,"import json
import json
from flask import Flask, request, jsonify
import logging
from ultralytics import YOLO


model = YOLO(""best.pt"")  # load a pretrained model (recommended for training)


app = Flask(__name__)
log = logging.getLogger(""werkzeug"")
log.setLevel(logging.ERROR)

class_names = {0: 'apple', 1: 'banana', 2: 'banana'}



def predict_single_image(image_url):
    results = model(image_url)
    processed_resutls = []

    for result in results:
        boxes = result.boxes  # Boxes object for bbox outputs
        for box in boxes:
            confidence = box.conf.item()
            name = class_names[int(box.cls.item())]
            processed_resutls.append([name, confidence])

    return processed_resutls


@app.route(""/"", methods=[""POST""])
def home():
    data = request.get_json()
    image_url = data.get(""image_url"")

    if not image_url:
        return jsonify({""result"": ""No image_url""}), 400
    token = request.headers.get(""Authorization"")
    if token != ""8Jw1kj5Woa4SDHtD%hH!7v4--"":
        return jsonify({""result"": ""Invalid token""}), 401
    print(image_url)
    result = {
        ""predictions"": predict_single_image(image_url),
    }

    if data.get(""return_version""):
        result[""version""] = ""1.0.4""

    return jsonify(result), 200


@app.route(""/"", methods=[""GET""])
def home_get():
    return ""Hello World!""


if __name__ == ""__main__"":
    app.run(debug=True, host=""0.0.0.0"", port=80)
    # app.run(debug=True, host=""0.0.0.0"", port=80, threaded=False, processes=64)"
TQSJHLTe,SAMPLE SEND EMAIL USING DBKL SMTP,mrfrankis,PHP,Wednesday 14th of June 2023 10:32:59 PM CDT,"<?php
	
////////////////////////////////////////email function/////////////////////////////////////////////////////////////////

	
	use PHPMailer\PHPMailer\PHPMailer;
	use PHPMailer\PHPMailer\Exception;

	require 'classes/phpmailer/Exception.php';
	require 'classes/phpmailer/PHPMailer.php';
	require 'classes/phpmailer/SMTP.php';
	
	
$mail = new PHPMailer(true);                              // Passing `true` enables exceptions
try {
    //Server settings
    $mail->SMTPDebug = 2;                                 // Enable verbose debug output
    $mail->isSMTP();                                      // Set mailer to use SMTP
    $mail->Host = '10.100.140.117';  					  // Specify main and backup SMTP servers
    $mail->SMTPAuth = true;                               // Enable SMTP authentication
    $mail->Username = 'muhammadfaizal@dbkl.gov.my';           // SMTP username
    $mail->Password = '890qvwut';                           // SMTP password
    $mail->SMTPSecure = 'tls';                            // Enable TLS encryption, `ssl` also accepted
    $mail->Port = 25;                                    // TCP port to connect to

    //Recipients
    $mail->setFrom('muhammadfaizal@dbkl.gov.my', 'DBKL Mobis');
    $mail->addAddress('faizal.handphone@gmail.com');     // Add a recipient
    //$mail->addAddress('muhammadfaizal@dbkl.gov.my');               // Name is optional
    //$mail->addReplyTo('info@example.com', 'Information');
    //$mail->addCC('cc@example.com');
   // $mail->addBCC('bcc@example.com');	

    //Attachments
    //$mail->addAttachment('/var/tmp/file.tar.gz');         // Add attachments
    //$mail->addAttachment('/tmp/image.jpg', 'new.jpg');    // Optional name

    //Content
    $mail->isHTML(true);                                  // Set email format to HTML
    $mail->Subject = '<div class=""row"">Getto-Your Got Booking</div>';
    $mail->Body    = 'This is the HTML message body <b>in bold!</b>';
    $mail->AltBody = 'This is the body in plain text for non-HTML mail clients';

    $mail->send();
    echo 'Message has been sent';
} catch (Exception $e) {
    echo 'Message could not be sent.';
    echo 'Mailer Error: ' . $mail->ErrorInfo;
}

/////////////////////////////////////////////////////////////////////////////"
5pFNhnS0,cglab,rohiboy,C++,Wednesday 14th of June 2023 10:04:59 PM CDT,"//bresenham
#include<iostream>
using namespace std;
#include<glut.h>
#include<math.h>
int xx, yy, xend, yend;
void myinit()
{
	glMatrixMode(GL_PROJECTION);
	glLoadIdentity();
	gluOrtho2D(0, 500, 0, 500);
	glMatrixMode(GL_MODELVIEW);
}
void setPixel(int x, int y)
{

	glBegin(GL_POINTS);
	glVertex2f(x, y);
	glEnd();
	glFlush();

}
void Bresenhamline()
{
	int dx = abs(xend - xx), dy = abs(yend - yy);
	int p, x, y;
	int twody = 2 * dy, twodyMinustwodx = 2 * (dy - dx);
	int twodx = 2 * dx, twodxMinustwody = 2 * (dx - dy);
	x = xx;
	y = yy;
	glColor3f(1, 0, 0); // Set color to red.
	glPointSize(3); //Set point size to 3
	if (dx > dy)
	{
		//For slope m&lt;1
		p = 2 * dy - dx;
		setPixel(x, y);
		while (x < xend)
		{
			x = x + 1;
			if (p < 0)

				p = p + twody;
			else
			{
				y = y + 1;

				p = p + twodyMinustwodx;
			}

			setPixel(x, y);
			cout << x <<""\t""<< y<<endl;

		}
	}
	else
	{
		//For slope m > 1
		p = 2 * dx - dy;
		setPixel(x, y);
		while (y < yend)
		{
			y = y + 1;
			if (p < 0)

				p = p + twodx;
			else
			{
				x = x + 1;
				p = p + twodxMinustwody;
			}
			setPixel(x, y);
			cout << x << ""\t"" << y << endl;
		}
	}

}
void display()
{
	glClearColor(1, 1, 1, 1); //Specifies a background RGB color for a display window.
	glClear(GL_COLOR_BUFFER_BIT);// Clear display window.
	Bresenhamline();
	glFlush(); // Process all OpenGL routines as quickly as possible.
}
int main()
{
	glutInitDisplayMode(GLUT_RGB | GLUT_SINGLE);// Set display mode.
	glutInitWindowPosition(100, 100); // Set top-left display-window position.
	glutInitWindowSize(500, 500); // Set display-window width and height.
	glutCreateWindow(""Bresenham Line Drawing Algorthm "");// Create display window.
	myinit(); // Execute initialization procedure.
	cout<<""Enter co - ordinates of first point :"";
	cin>>xx>>yy;
	cout<<""Enter co - ordinates of second point :"";
	cin>>xend>>yend;
	glutDisplayFunc(display);//Invokes a function to create a picture within current display window.
	glutMainLoop(); //Executes the computer-graphics program.
	return 0;
}



//cube ROTATION

#include<stdlib.h>
#include<stdio.h>
#include<GL/glut.h>
#include<math.h>
float v[8][3] = { {-1,-1,1},{-1,1,1},{1,1,1},{1,-1,1},{-1,-1,-1},{-1,1,-1},{1,1,-1},{1,-1,-1} };
float p[8][3] = { {0,0,1},{0,1,1},{1,1,1},{1,0,1},{0,0,0},{0,1,0},{1,1,0},{1,0,0} };
float theta[3] = { 0,0,0 };
int flag = 2;

void myinit()
{
    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    glOrtho(-2, 2, -2, 2, -2, 2);
    glMatrixMode(GL_MODELVIEW);
}
void idlefunc()
{
    theta[flag]++;
    if (theta[flag] > 360)theta[flag] = 0;
    glutPostRedisplay();
}
void mousefunc(int button, int status, int x, int y)
{
    if (button == GLUT_LEFT_BUTTON && status == GLUT_DOWN)
        flag = 2;
    if (button == GLUT_MIDDLE_BUTTON && status == GLUT_DOWN)
        flag = 1;
    if (button == GLUT_RIGHT_BUTTON && status == GLUT_DOWN)
        flag = 0;
}
void drawpoly(int a, int b, int c, int d)
{
    glBegin(GL_POLYGON);
    glColor3fv(p[a]);
    glVertex3fv(v[a]);
    glColor3fv(p[b]);
    glVertex3fv(v[b]);
    glColor3fv(p[c]);
    glVertex3fv(v[c]);
    glColor3fv(p[d]);
    glVertex3fv(v[d]);
    glEnd();
}
void colorcube()
{
    drawpoly(0, 1, 2, 3);
    drawpoly(0, 1, 5, 4);
    drawpoly(1, 5, 6, 2);
    drawpoly(4, 5, 6, 7);
    drawpoly(3, 2, 6, 7);
    drawpoly(0, 4, 7, 3);
}
void display()
{
    glClearColor(1, 1, 1, 1);
    glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
    glColor3f(1, 0, 0);
    glEnable(GL_DEPTH_TEST);
    glLoadIdentity();
    glRotatef(theta[0], 1, 0, 0);//x
    glRotatef(theta[1], 0, 1, 0);//y
    glRotatef(theta[2], 0, 0, 1);//z
    colorcube();
    glFlush();
    glutSwapBuffers();
}
void main()
{
    glutInitDisplayMode(GLUT_RGB | GLUT_DOUBLE | GLUT_DEPTH);
    glutInitWindowPosition(100, 100);
    glutInitWindowSize(500, 500);
    glutCreateWindow(""cube rotation"");
    myinit();]
    glutDisplayFunc(display);
    glutMouseFunc(mousefunc);
    glutIdleFunc(idlefunc);
    glutMainLoop();
}




//3D GASKET

#include<stdio.h>
#include<gl/glut.h>
int c;
float v[4][3] = { {0,0,1},{-1,-0.5,0},{0,1,0},{1,-0.5,0} };
void myinit()
{
	glMatrixMode(GL_PROJECTION_MATRIX);
	glLoadIdentity();
	glOrtho(-2, 2, -2, 2, -2, 2);
	glMatrixMode(GL_MODELVIEW);
}
void disp_tri(float a[3], float b[3], float c[3])
{
	glBegin(GL_POLYGON);
	glVertex3fv(a);
	glVertex3fv(b);
	glVertex3fv(c);
	glEnd();
}
void div_tri(float* a, float* b, float* c, int n)
{
	float v1[3], v2[3], v3[3];
	int i;

	if (n > 0)
	{
		for (i = 0; i < 3; i++)
		{
			v1[i] = (a[i] + b[i]) / 2;
			v2[i] = (a[i] + c[i]) / 2;
			v3[i] = (b[i] + c[i]) / 2;
		}
		div_tri(a, v1, v2, n - 1);
		div_tri(v1, b, v3, n - 1);
		div_tri(v2, v3, c, n - 1);

	}
	else
		disp_tri(a, b, c);
}

void display()
{
	glClearColor(0, 0, 0, 1);
	glClear(GL_COLOR_BUFFER_BIT);

	glColor3f(1, 1, 1);
	div_tri(v[1], v[2], v[3], c);

	glColor3f(1, 0, 0);
	div_tri(v[0], v[1], v[2], c);

	glColor3f(0, 1, 0);
	div_tri(v[0], v[2], v[3], c);

	glColor3f(0, 0, 1);
	div_tri(v[0], v[1], v[3], c);

	glFlush();
}

void main()
{
	glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
	glutInitWindowSize(600, 600);
	glutInitWindowPosition(300, 150);
	printf(""Enter the number of subdivisions:\n"");
	scanf_s(""%d"", &c);
	glutCreateWindow(""3D Recursive Sierpinski Gasket"");
	myinit();
	glutDisplayFunc(display);
	glutMainLoop();
}

//TRIANGLE ROTATION

#include<iostream>
using namespace std;
#include<GL/glut.h>
#include<math.h>
float p[3][2] = { {20,20},{40,40},{60,20} };
float xp, yp, theta, rtheta;
void myinit()
{
	glMatrixMode(GL_PROJECTION);
	glLoadIdentity();
	gluOrtho2D(-100, 100, -100, 100);
	glMatrixMode(GL_MODELVIEW);
}
void drawtraiangle()
{
	glBegin(GL_TRIANGLES);
	glVertex2fv(p[0]);
	glVertex2fv(p[1]);
	glVertex2fv(p[2]);
	glEnd();
}

void display()
{
	float x, y;
	glClearColor(1, 1, 1, 1);
	glClear(GL_COLOR_BUFFER_BIT);
	glColor3f(1, 0, 0);
	drawtraiangle();
	rtheta = (theta * 3.142) / 180;
	for (int i = 0; i < 3; i++)
	{
		x = p[i][0];
		y = p[i][1];
		p[i][0] = xp + (x - xp) * cos(rtheta) - (y - yp) * sin(rtheta);
		p[i][1] = yp + (x - xp) * sin(rtheta) + (y - yp) * cos(rtheta);
	}
	glColor3f(0, 1, 0);
	drawtraiangle();
	glFlush();
}
void main()
{
	glutInitDisplayMode(GLUT_RGB | GLUT_SINGLE);
	glutInitWindowPosition(100, 100);
	glutInitWindowSize(500, 500);
	glutCreateWindow(""Traingle rotation"");
	myinit();
	cout << ""enter xp,yp and theta"" << endl;
	cin >> xp >> yp >> theta;
	glutDisplayFunc(display);
	glutMainLoop();
}"
rgtUFWWt,Untitled,WarPie90,Delphi,Wednesday 14th of June 2023 09:48:46 PM CDT,"function SplitPoints(list: TPointArray; w,h: Int32): T2DPointArray;
var
  lo,hi: Int32;
  function extract_connections_of(p: TPoint): TPointArray;
  var i: Int32;
  begin
    for i:=hi downto lo+1 do
      if (Abs(p.x-list[i].x) <= w) and (Abs(p.y-list[i].y) <= h) then
      begin
        Result += list[i];
        Swap(list[i], list[hi]); //move towards end
        Dec(hi);                 //and ever look at it again
      end;
  end;

  function recurse_connections(p: TPoint): TPointArray;
  var i: Int32;
  begin
    Result := extract_connections_of(p);
    for i:=0 to High(result) do
      Result += recurse_connections(result[i]); //extend
  end;
begin
  lo := 0;
  hi := High(list);
  while lo <= hi do
  begin
    Result += recurse_connections(list[lo]) + [list[lo]]; //append group
    inc(lo);
  end;
end;"
yKDk3kE0,Advanced Verification System | AOI.js v6,CGX_Music,JavaScript,Wednesday 14th of June 2023 09:41:02 PM CDT,"ADVANCED VERIFICATION SYSTEM MADE BY @cyberghxst
Aoi.js v6.2.6
To create the slash commands run the ""createdata"" command.

module.exports = [{
    name: ""verify"",
    type: ""interaction"",
    prototype: ""slash"",
    $if: ""old"",
    code: `
        $if[$interactionData[options._subcommand]==panel]
            $sendMessage[{newEmbed:
                {title:Verification system#COLON# Panel}
                {thumbnail:$userAvatar[$clientID]}
                {field:System status:\`$replaceText[$replaceText[$getGuildVar[verificationSystem];on;Enabled];off;Disabled]\`}
                {field:Type:\`$toLocaleUpperCase[$getGuildVar[verificationType]]\`}
                {field:Kick time:\`$replaceText[$replaceText[$checkCondition[$parseTime[$getGuildVar[verificationTime]]>60000];false;$replaceText[$getGuildVar[verificationTime];m; minute]];true;$replaceText[$getGuildVar[verificationTime];m; minutes]]\`}
                {field:Verified role:$replaceText[$replaceText[$checkCondition[$getGuildVar[verificationRole]!=&&$roleExists[$getGuildVar[verificationRole];$guildID]==true];true;<@&$getGuildVar[verificationRole]>];false;\`Missing or invalid role.\`]}
                {field:Verify channel:$replaceText[$replaceText[$checkCondition[$getGuildVar[verificationChannel]!=&&$guildChannelExists[$guildID;$getGuildVar[verificationChannel]]==true];true;<#$getGuildVar[verificationChannel]>];false;\`Missing or invalid channel.\`]}
                {field:Alt-accounts protection:\`$replaceText[$replaceText[$getGuildVar[verificationAltConfig];off;Disabled];on;Enabled]\`}
                $if[$getGuildVar[verificationAltConfig]==on]
                    {field:Account longevity:\`$replaceText[$getGuildVar[verificationAltTime];d; days]\`}
                $endif
                {footer:$guildName}{timestamp}
                {color:$replaceText[$replaceText[$getGuildVar[verificationType];captcha;Yellow];button;Red]}
            }{extraOptions:{interaction:true}}]
        $elseif[$interactionData[options._subcommand]==time]
            $sendMessage[{newEmbed:
                {title:Time set!}
                {thumbnail:$userAvatar[$clientID]}
                {description:Time changed to#COLON# \`$slashOption[time]\`}
                {footer:$guildName}{timestamp}
                {color:$getVar[def_color]}
            }{extraOptions:{interaction:true}};false]
            $setGuildVar[verificationTime;$slashOption[time]]
            $onlyIf[$isNumber[$parseTime[$slashOption[time]]]==true&&$parseTime[$slashOption[time]]>=$parseTime[1m]&&$parseTime[$slashOption[time]]<=$parseTime[30d];{newEmbed:
                {title:Invalid time provided!}
                {thumbnail:$userAvatar[$clientID]}
                {description:You should provide a valid time greather then 1 minute and lower than 30 days.}
                {footer:$guildName}{timestamp}
                {color:$getVar[error_color]}
            }{extraOptions:{interaction:true}}]
        $endelseif
        $elseif[$interactionData[options._subcommand]==type]
            $sendMessage[{newEmbed:
                {title:Type set!}
                {thumbnail:$userAvatar[$clientID]}
                {description:Type changed to#COLON# \`$toLocaleUpperCase[$slashOption[type]]\`}
                {footer:$guildName}{timestamp}
                {color:$getVar[def_color]}
            }{extraOptions:{interaction:true}};false]
            $setGuildVar[verificationType;$slashOption[type]]
            $onlyIf[$slashOption[type]==captcha||$slashOption[type]==button;{newEmbed:
                {title:Invalid type provided!}
                {thumbnail:$userAvatar[$clientID]}
                {description:You should provide a valid type#COLON# \`Button\` or \`Captcha\`}
                {footer:$guildName}{timestamp}
                {color:$getVar[error_color]}
            }{extraOptions:{interaction:true}}]
        $endelseif
        $elseif[$interactionData[options._subcommand]==alts]
            $sendMessage[{newEmbed:
                {title:$replaceText[$replaceText[$slashOption[action];disable;The alt-account protection is disabled.];enable;The alt-account protection is enabled.]}
                $if[$slashOption[filter]!=]
                    {field:Account longevity:\`$replaceText[$slashOption[filter];d; days]\`}
                $else
                    {description:Any account can join the server.}
                $endif
                {thumbnail:$userAvatar[$clientID]}
                {footer:$guildName}{timestamp}
                {color:$getVar[def_color]}
            }{extraOptions:{interaction:true}};false]
            $setGuildVar[verificationAltTime;$replaceText[$replaceText[$checkCondition[$slashOption[filter]==];true;3d];false;$slashOption[filter]]]
            $setGuildVar[verificationAltConfig;$replaceText[$replaceText[$slashOption[action];enable;on];disable;off]]
            $onlyIf[$getGuildVar[verificationAltConfig]!=$replaceText[$replaceText[$slashOption[action];disable;off];enable;on];{newEmbed:
                {title:Invalid action!}
                {thumbnail:$userAvatar[$clientID]}
                {description:The system is already $slashOption[action]d.}
                {footer:$guildName}{timestamp}
                {color:$getVar[error_color]}
            }{extraOptions:{interaction:true}}]
            $onlyIf[$slashOption[action]==disable&&$slashOption[filter]==||$slashOption[action]==enable&&$slashOption[filter]!=;{newEmbed:
                {title:Invalid choices provided!}
                {thumbnail:$userAvatar[$clientID]}
                {description:To turn off the system, you shouldn't use filter options, else, you should use it.}
                {footer:$guildName}{timestamp}
                {color:$getVar[error_color]}
            }{extraOptions:{interaction:true}}]
        $endelseif
        $elseif[$interactionData[options._subcommand]==channel]
            $sendMessage[{newEmbed:
                {title:Channel set!}
                {thumbnail:$userAvatar[$clientID]}
                {description:Verification channel set#COLON# <#$slashOption[channel]>.}
                {footer:$guildName}{timestamp}
                {color:$getVar[def_color]}
            }{extraOptions:{interaction:true}};false]
            $setGuildVar[verificationChannel;$slashOption[channel]]
            $onlyIf[$hasPerms[$guildID;$clientID;sendmessages;readmessagehistory]==true;{newEmbed:
                {title:Missing permissions!}
                {thumbnail:$userAvatar[$clientID]}
                {description:I need permissions to send messages and read message history in <#$slashOption[channel]>.}
                {footer:$guildName}{timestamp}
                {color:$getVar[error_color]}
            }{extraOptions:{interaction:true}}]
            $onlyIf[$channelType[$slashOption[channel]]==text;{newEmbed:
                {title:Invalid channel!}
                {thumbnail:$userAvatar[$clientID]}
                {description:Just text channels can be setted for this option.}
                {footer:$guildName}{timestamp}
                {color:$getVar[error_color]}
            }{extraOptions:{interaction:true}}]
        $endelseif
        $elseif[$interactionData[options._subcommand]==role]
            $sendMessage[{newEmbed:
                {title:Role set!}
                {thumbnail:$userAvatar[$clientID]}
                {description:Verified role set#COLON# <@&$slashOption[role]>.}
                {footer:$guildName}{timestamp}
                {color:$getVar[def_color]}
            }{extraOptions:{interaction:true}};false]
            $setGuildVar[verificationRole;$slashOption[role]]
            $onlyIf[$rolePosition[$highestRole[$clientID]]<$rolePosition[$slashOption[role]];{newEmbed:
                {title:Invalid role!}
                {thumbnail:$userAvatar[$clientID]}
                {description:Role position cannot be greather than mine!}
                {footer:$guildName}{timestamp}
                {color:$getVar[error_color]}
            }{extraOptions:{interaction:true}}]
            $onlyIf[$rolePosition[$highestRole[$interactionData[author.id]]]<$rolePosition[$slashOption[role]];{newEmbed:
                {title:Invalid role!}
                {thumbnail:$userAvatar[$clientID]}
                {description:Role position cannot be greather than yours!}
                {footer:$guildName}{timestamp}
                {color:$getVar[error_color]}
            }{extraOptions:{interaction:true}}]
        $endelseif
        $elseif[$interactionData[options._subcommand]==control]
            $sendMessage[{newEmbed:
                {title:$replaceText[$replaceText[$slashOption[action];disable;Verification system is disabled.];enable;Verification system is enabled.]}
                {thumbnail:$userAvatar[$clientID]}
                {footer:$guildName}{timestamp}
                {color:$getVar[def_color]}
            }{extraOptions:{interaction:true}};false]
            $setGuildVar[verificationSystem;$replaceText[$replaceText[$slashOption[action];enable;on];disable;off]]
        $endelseif
        $else
            $interactionReply[Invalid command!;;;;users;true]
        $endif
        $onlyIf[$hasPerms[$guildID;$authorID;kickmembers;manageroles;moderatemembers]==true;{newEmbed:
            {title:Missing perms!}
            {thumbnail:$userAvatar[$clientID]}
            {description:You need the following permissions#COLON# \`Kick Members, Manage Roles, Moderate Members\`, to run this command.}
            {footer:$guildName}{timestamp}
            {color:$getVar[error_color]}
        }{extraOptions:{interaction:true}}]
    `
},{
    name: ""JOIN_GATE"",
    channel: ""$getGuildVar[verificationChannel]"",
    type: ""join"",
    code: `
        $ifAwaited[$get[yamete]<$replaceText[$replaceText[$replaceText[$replaceText[$replaceText[$replaceText[$getGuildVar[verificationTime];y;];w;];d;];h;];m;];s;];{execute:trueAlt};{execute:falseAlt}]
        $let[yamete;$divide[$sub[$get[getTimestamp];$math[($authorID / 4194304 + 1420070400000) / 1000]];86400]]
        $let[getTimestamp;$truncate[$divide[$dateStamp;1000]]]
        $onlyIf[$isBot[$authorID]==false;]
        $onlyIf[$getGuildVar[verificationChannel]!=&&$guildChannelExists[$guildID;$getGuildVar[verificationChannel]]==true;]
        $onlyIf[$getGuildVar[verificationSystem]==on;]
    `
},{
    name: ""trueAlt"",
    type: ""awaited"",
    code: `
        $kick[$authorID;$guildID;Alt-account!]
        $sendDM[{newEmbed:
            {title:Access denied!}
            {description:Alternate/newly created accounts are not allowed on this server.}
            {color:$getVar[error_color]}
            {footer:$guildName[$guildID]:$guildIcon}
        };$authorID]
        $onlyIf[$getGuildVar[verificationAltConfig]==on;]
        $suppressErrors
  `
},{
    name: ""falseAlt"",
    type: ""awaited"",
    $if: ""old"",
    code: `
        $if[$getGuildVar[verificationType]==captcha]
            $setTimeout[CAPTCHA_KICK_USER;$getGuildVar[verificationTime];{""author"": ""$authorID"",
                ""messageID"": ""$get[msg]"",
                ""channelID"": ""$getGuildVar[verificationChannel]"",
                ""guildID"": ""$guildID"",
                ""verifiedRole"": ""$getGuildVar[verificationRole]""};;]
            $setTimeout[CAPTCHA_MSG_DELETE;$getGuildVar[verificationTime];{""author"": ""$authorID"",
                ""messageID"": ""$get[msg]"",
                ""channelID"": ""$getGuildVar[verificationChannel]"",
                ""guildID"": ""$guildID"",
                ""verifiedRole"": ""$getGuildVar[verificationRole]""};;]
            $setUserVar[verifyMsgID;$get[msg]]
            $let[msg;$sendMessage[<@$authorID>
                {newEmbed:
                    {image:https#COLON#//flamingtext.com/net-fu/proxy_form.cgi?script=tagline-logo&text=$uri[$get[cgxCaptcha];encode]&_loc=generate&imageoutput=true}
                    {footer:Write $getGuildVar[prefix]verify <captcha>, captcha will be deleted in $replaceText[$replaceText[$getGuildVar[verificationTime];s; seconds];m; minutes]}
                };true]]
            $setGlobalUserVar[captchaChecker;$get[cgxCaptcha];$authorID]
            $let[cgxCaptcha;$randomString[7]]
        $elseif[$getGuildVar[verificationType]==button]
            $setTimeout[BTN_MSG_DELETE;$getGuildVar[verificationTime];{""author"": ""$authorID"",
                ""messageID"": ""$get[msg]"",
                ""channelID"": ""$getGuildVar[verificationChannel]"",
                ""guildID"": ""$guildID"",
                ""verifiedRole"": ""$getGuildVar[verificationRole]""};;]
            $setTimeout[BTN_KICK_USER;$getGuildVar[verificationTime];{""author"": ""$authorID"",
                ""messageID"": ""$get[msg]"",
                ""channelID"": ""$getGuildVar[verificationChannel]"",
                ""guildID"": ""$guildID"",
                ""verifiedRole"": ""$getGuildVar[verificationRole]""};;]
            $setUserVar[verifyMsgID;$get[msg]]
            $let[msg;$sendMessage[<@$authorID>{newEmbed:{title:🛑 Hey!}{description:Press the green button to verify yourself.}{color:FFFFFF}{footer:$guildName[$guildID]:$guildIcon}}{actionRow:{button:Verify:success:verificar_$authorID:no:🤖}{button:Why?:secondary:pq_$authorID:no:🤔}};true]]
        $endelseif
        $endif
        $suppressErrors
    `
},{
    name: ""CAPTCHA_MSG_DELETE"",
    type: ""timeout"",
    channel: ""$getGuildVar[verificationChannel]"",
    code: `
        $deleteMessage[$timeoutData[messageID];$timeoutData[channelID]]
        $suppressErrors
    `
},{
    name: ""CAPTCHA_KICK_USER"",
    type: ""timeout"",
    channel: ""$getGuildVar[verificationChannel]"",
    code: `
        $kick[$timeoutData[author];$timeoutData[guildID];Not verified in time.]
        $setUserVar[verifyMsgID;;$timeoutData[author]]
        $onlyIf[$hasRoles[$timeoutData[guildID];$timeoutData[author];$timeoutData[verifiedRole]]==false;]
        $suppressErrors
    `
},{
    name: ""BTN_MSG_DELETE"",
    type: ""timeout"",
    channel: ""$getGuildVar[verificationChannel]"",
    code: `
        $deleteMessage[$timeoutData[messageID];$timeoutData[channelID]]
        $suppressErrors
    `
},{
    name: ""BTN_KICK_USER"",
    type: ""timeout"",
    channel: ""$getGuildVar[verificationChannel]"",
    code: `
        $kick[$timeoutData[author];$timeoutData[guildID];Not verified in time.]
        $setUserVar[verifyMsgID;;$timeoutData[author]]
        $onlyIf[$hasRoles[$timeoutData[guildID];$timeoutData[author];$timeoutData[verifiedRole]]==false;]
        $suppressErrors
    `
},{
    type: ""interaction"",
    prototype: ""button"",
    code: `
        $stopTimeout[BTN_KICK_USER]
        $stopTimeout[BTN_MSG_DELETE]
        $setUserVar[verifyMsgID;;$authorID]
        $deleteMessage[$getUserVar[verifyMsgID];$getGuildVar[verificationChannel]]
        $interactionReply[✅ Congratulations, you now have access to this server!;;;;users;true]
        $giveRole[$guildID;$authorID;$getGuildVar[verificationRole]]
        $onlyIf[$interactionData[customId]==verificar_$interactionData[author.id];]
        $onlyIf[$advancedTextSplit[$interactionData[customId];_;2]==$interactionData[author.id];This button is not for you.{options:{ephemeral:true}}{extraOptions:{interaction:true}}]
        $suppressErrors
    `
},{
    type: ""interaction"",
    prototype: ""button"",
    code: `
        $interactionReply[;{newEmbed:
            {title:🤔 Why I need to verify myself?}
            {description:This is a security method to avoid self-bots, or simple systems that seek to attack the server.}
            {color:FFFFFF}
        };;;users;true]
        $onlyIf[$interactionData[customId]==pq_$interactionData[author.id];]
        $onlyIf[$advancedTextSplit[$interactionData[customId];_;2]==$interactionData[author.id];This button is not for you.{options:{ephemeral:true}}{extraOptions:{interaction:true}}]
        $suppressErrors
    `
},{
    name: ""verify"",
    type: ""default"",
    code: `
        $deleteMessage[$get[algo];$getGuildVar[verificationChannel]]
        $wait[5s]
        $stopTimeout[CAPTCHA_MSG_DELETE]
        $stopTimeout[CAPTCHA_KICK_USER]
        $let[algo;$sendMessage[✅ Congratulations, you now have access to this server!;true]]
        $setUserVar[verifyMsgID;;$authorID]
        $deleteMessage[$getUserVar[verifyMsgID];$getGuildVar[verificationChannel]]
        $setGlobalUserVar[captchaChecker;;$authorID]
        $giveRole[$guildID;$authorID;$getGuildVar[verificationRole]]
        $onlyIf[$message==$getGlobalUserVar[captchaChecker;$authorID];:x: | That code **doesn't match** the one in the image.]
        $deletecommand
        $onlyIf[$getGlobalUserVar[captchaChecker;$authorID]!=;]
        $onlyIf[$getGuildVar[verificationType]==captcha;]
        $onlyIf[$getGuildVar[verificationSystem]==on;]
        $suppressErrors
    `
},{
    name: ""createdata"",
    code: `
    $createApplicationCommand[global;verify;...;true;slash;[
        {
            ""type"": 1,
            ""name"": ""panel"",
            ""description"": ""Lauch the verify system panel."",
            ""options"": []
        },
        {
            ""type"": 1,
            ""name"": ""role"",
            ""description"": ""Set-up the verified role for verified members."",
            ""options"": [
                {
                    ""type"": 8,
                    ""name"": ""role"",
                    ""description"": ""The verified role."",
                    ""required"": true
                }
            ]
        },
        {
            ""type"": 1,
            ""name"": ""control"",
            ""description"": ""Enables/disables verification system."",
            ""options"": [
                {
                    ""type"": 3,
                    ""name"": ""action"",
                    ""description"": ""Enable or disable the system."",
                    ""required"": true,
                    ""choices"": [
                        {
                            ""name"": ""Enable"",
                            ""value"": ""enable""
                        },
                        {
                            ""name"": ""Disable"",
                            ""value"": ""disable""
                        }
                    ]
                }
            ]
        },
        {
            ""type"": 1,
            ""name"": ""channel"",
            ""description"": ""Set the verify channel."",
            ""options"": [
                {
                    ""type"": 7,
                    ""name"": ""channel"",
                    ""description"": ""The channel ID."",
                    ""required"": true,
                    ""channel_types"": [0]
                }
            ]
        },
        {
            ""type"": 1,
            ""name"": ""type"",
            ""description"": ""Set the verify type."",
            ""options"": [
                {
                    ""type"": 3,
                    ""name"": ""type"",
                    ""description"": ""Verify type."",
                    ""required"": true,
                    ""choices"": [
                        {
                            ""name"": ""Captcha"",
                            ""value"": ""captcha""
                        },
                        {
                            ""name"": ""Button"",
                            ""value"": ""button""
                        }
                    ]
                }
            ]
        },
        {
            ""type"": 1,
            ""name"": ""time"",
            ""description"": ""Set the time to get kicked if no verified."",
            ""options"": [
                {
                    ""type"": 3,
                    ""name"": ""time"",
                    ""description"": ""Kick time."",
                    ""required"": true,
                    ""choices"": [
                        {
                            ""name"": ""1 minute"",
                            ""value"": ""1m""
                        },
                        {
                            ""name"": ""5 minutes"",
                            ""value"": ""5m""
                        },
                        {
                            ""name"": ""10 minutes"",
                            ""value"": ""10m""
                        },
                        {
                            ""name"": ""15 minutes"",
                            ""value"": ""15m""
                        },
                        {
                            ""name"": ""20 minutes"",
                            ""value"": ""20m""
                        },
                        {
                            ""name"": ""30 minutes"",
                            ""value"": ""30m""
                        },
                        {
                            ""name"": ""40 minutes"",
                            ""value"": ""40m""
                        }
                    ]
                }
            ]
        },
        {
            ""type"": 1,
            ""name"": ""alts"",
            ""description"": ""Enables/disables the alt-account protection."",
            ""options"": [
                {
                    ""type"": 3,
                    ""name"": ""action"",
                    ""description"": ""Enable or disable this system."",
                    ""required"": true,
                    ""choices"": [
                        {
                            ""name"": ""Enable"",
                            ""value"": ""enable""
                        },
                        {
                            ""name"": ""Disable"",
                            ""value"": ""disable""
                        }
                    ]
                },
                {
                    ""type"": 3,
                    ""name"": ""filter"",
                    ""description"": ""Set the longevity of the account in order to be accepted."",
                    ""required"": false,
                    ""choices"": [
                        {
                            ""name"": ""3 days"",
                            ""value"": ""3d""
                        },
                        {
                            ""name"": ""7 days"",
                            ""value"": ""7d""
                        },
                        {
                            ""name"": ""15 days"",
                            ""value"": ""15d""
                        },
                        {
                            ""name"": ""30 days"",
                            ""value"": ""30d""
                        }
                    ]
                }
            ]
        }
    ]]
    `
}]"
SaZCB6ff,邀您一起看：怎么背书最有效率？ - 我不是盐神 onehu.xyz,xiaomianao666,JavaScript,Wednesday 14th of June 2023 09:28:04 PM CDT,海阔视界规则分享，当前分享的是：二级页面详情￥page_detail￥怎么背书最有效率？ - 我不是盐神 onehu.xyz@@eyJkYXRhIjoie1wiYXNzb2NpYXRlZE1vZGVsc01hcEZvckpvaW5UYWJsZVwiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhGS1wiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhvdXRGS1wiOnt9LFwiZmllbGRzVG9TZXRUb0RlZmF1bHRcIjpbXSxcImdtdE1vZGlmaWVkXCI6MCxcImlkXCI6MCxcImxhc3RfY2hhcHRlcl9ydWxlXCI6XCJcIixcImxpc3RUb0NsZWFyQXNzb2NpYXRlZEZLXCI6W10sXCJsaXN0VG9DbGVhclNlbGZGS1wiOltdLFwicGFnZUxpc3RcIjpbe1wiY29sX3R5cGVcIjpcIm1vdmllXzNcIixcIm5hbWVcIjpcIng1XCIsXCJwYXRoXCI6XCJ4NVwiLFwicnVsZVwiOlwianM6XFxudmFyIGQgPSBbXTtcXG5sZXQgdXJsID0gYmFzZTY0RGVjb2RlKGdldFBhcmFtKFxcXCJ1XFxcIikpO1xcbmxldCBqcyA9ICQudG9TdHJpbmcoKCkgPT4ge1xcbiAgICB0cnkge1xcbiAgICAgICAgaWYgKGRvY3VtZW50LnRpdGxlICYmIGRvY3VtZW50LnRpdGxlLmxlbmd0aCkge1xcbiAgICAgICAgICAgIGxldCByID0gJCQkKCkubGF6eVJ1bGUoKHVybCwgdCkgPT4ge1xcbiAgICAgICAgICAgICAgICBzZXRQYWdlVGl0bGUodCArIFxcXCIgXFxcIiArIGdldEhvbWUodXJsLCB1cmwpLnJlcGxhY2UoXFxcImh0dHBzOi8vXFxcIiwgXFxcIlxcXCIpLnJlcGxhY2UoXFxcImh0dHA6Ly9cXFwiLCBcXFwiXFxcIikucmVwbGFjZShcXFwiL1xcXCIsIFxcXCJcXFwiKSk7XFxuICAgICAgICAgICAgfSwgbG9jYXRpb24uaHJlZiwgZG9jdW1lbnQudGl0bGUpO1xcbiAgICAgICAgICAgIGZ5X2JyaWRnZV9hcHAucGFyc2VMYXp5UnVsZShyKTtcXG4gICAgICAgIH1cXG4gICAgfSBjYXRjaCAoZSkge1xcbiAgICAgICAgZnlfYnJpZGdlX2FwcC5sb2coZS50b1N0cmluZygpKTtcXG4gICAgfVxcbn0pO1xcbmxldCBiZCA9IHVybC5pbmNsdWRlcyhcXFwiYmFpZHVcXFwiKSA/IFxcXCJiYWlkdTExMVxcXCIgOiBcXFwiYmFpZHVcXFwiO1xcbmQucHVzaCh7XFxuICAgIHRpdGxlOiBcXFwiXFxcIixcXG4gICAgdXJsOiB1cmwsXFxuICAgIGNvbF90eXBlOiBcXFwieDVfd2Vidmlld19zaW5nbGVcXFwiLFxcbiAgICBkZXNjOiBcXFwiZmxvYXQmJjEwMCVcXFwiLFxcbiAgICBwaWNfdXJsOiBcXFwiXFxcIixcXG4gICAgZXh0cmE6IHtcXG4gICAgICAgIC8vZmxvYXRWaWRlbzogdHJ1ZSxcXG4gICAgICAgIGpzOiBqcyxcXG4gICAgICAgIHVybEludGVyY2VwdG9yOiAkLnRvU3RyaW5nKChob21lLCBydWxlKSA9PiB7XFxuICAgICAgICAgICAgaWYgKCFpbnB1dC5pbmNsdWRlcyhob21lKSkge1xcbiAgICAgICAgICAgICAgICBsZXQgbGlzdCA9IFtcXG4gICAgICAgICAgICAgICAgICAgIFxcXCJiYWlkdVxcXCIsXFxuICAgICAgICAgICAgICAgICAgICBcXFwiYWxpeXVuXFxcIixcXG4gICAgICAgICAgICAgICAgICAgIFxcXCIzNjBcXFwiXFxuICAgICAgICAgICAgICAgIF07XFxuICAgICAgICAgICAgICAgIGZvciAobGV0IGl0IG9mIGxpc3QpIHtcXG4gICAgICAgICAgICAgICAgICAgIGlmIChpbnB1dC5pbmNsdWRlcyhpdCkpIHtcXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XFxuICAgICAgICAgICAgICAgICAgICB9XFxuICAgICAgICAgICAgICAgIH1cXG4gICAgICAgICAgICAgICAgcmV0dXJuICQudG9TdHJpbmcoKHVybCwgdSwgcnVsZSkgPT4ge1xcbiAgICAgICAgICAgICAgICAgICAgZnlfYnJpZGdlX2FwcC5vcGVuKEpTT04uc3RyaW5naWZ5KHtcXG4gICAgICAgICAgICAgICAgICAgICAgICB0aXRsZTogdS5yZXBsYWNlKFxcXCJodHRwczovL1xcXCIsIFxcXCJcXFwiKS5yZXBsYWNlKFxcXCJodHRwOi8vXFxcIiwgXFxcIlxcXCIpLnJlcGxhY2UoXFxcIi9cXFwiLCBcXFwiXFxcIiksXFxuICAgICAgICAgICAgICAgICAgICAgICAgdXJsOiBcXFwiaGlrZXI6Ly9wYWdlL3g1P3J1bGU9XFxcIiArIHJ1bGUgKyBcXFwiJnU9XFxcIiArIHVybCxcXG4gICAgICAgICAgICAgICAgICAgIH0pKVxcbiAgICAgICAgICAgICAgICB9LCBiYXNlNjRFbmNvZGUoaW5wdXQpLCBnZXRIb21lKGlucHV0LCBpbnB1dCksIHJ1bGUpO1xcbiAgICAgICAgICAgIH1cXG4gICAgICAgIH0sIGdldEhvbWUodXJsKSwgTVlfUlVMRS50aXRsZSksXFxuICAgICAgICBjYW5CYWNrOiB0cnVlLFxcbiAgICAgICAgYmxvY2tSdWxlczogW1xcXCIuZ2lmXFxcIiwgXFxcIi9hZC9cXFwiLCBcXFwiL2Fkcy9cXFwiLCBcXFwiZ29vZ2xlXFxcIiwgXFxcIi9zaC90by9cXFwiLCBcXFwiLkdJRlxcXCIsIGJkXVxcbiAgICB9XFxufSk7XFxuc2V0UmVzdWx0KGQpO1wifV0sXCJwYXJhbXNcIjpcIntcXFwibG9uZ0NsaWNrXFxcIjpbe1xcXCJqc1xcXCI6XFxcIid3ZWI6Ly9odHRwczovL29uZWh1Lnh5eidcXFwiLFxcXCJ0aXRsZVxcXCI6XFxcIuiuv+mXrue9kemhtVxcXCJ9LHtcXFwianNcXFwiOlxcXCInY29weTovL2h0dHBzOi8vb25laHUueHl6J1xcXCIsXFxcInRpdGxlXFxcIjpcXFwi5aSN5Yi2572R5Z2AXFxcIn1dfVwiLFwic2F2ZWRcIjpmYWxzZSxcInRpdGxlXCI6XCLnm5DnpZ7pmIXor7tcIixcInZlcnNpb25cIjowLFwidXJsXCI6XCJoaWtlcjovL3BhZ2UveDU/dT1hSFIwY0hNNkx5OXZibVZvZFM1NGVYbz1cIixcImNvbF90eXBlXCI6XCJtb3ZpZV8zXCIsXCJmaW5kX3J1bGVcIjpcImpzOlxcbnZhciBkID0gW107XFxubGV0IHVybCA9IGJhc2U2NERlY29kZShnZXRQYXJhbShcXFwidVxcXCIpKTtcXG5sZXQganMgPSAkLnRvU3RyaW5nKCgpID0+IHtcXG4gICAgdHJ5IHtcXG4gICAgICAgIGlmIChkb2N1bWVudC50aXRsZSAmJiBkb2N1bWVudC50aXRsZS5sZW5ndGgpIHtcXG4gICAgICAgICAgICBsZXQgciA9ICQkJCgpLmxhenlSdWxlKCh1cmwsIHQpID0+IHtcXG4gICAgICAgICAgICAgICAgc2V0UGFnZVRpdGxlKHQgKyBcXFwiIFxcXCIgKyBnZXRIb21lKHVybCwgdXJsKS5yZXBsYWNlKFxcXCJodHRwczovL1xcXCIsIFxcXCJcXFwiKS5yZXBsYWNlKFxcXCJodHRwOi8vXFxcIiwgXFxcIlxcXCIpLnJlcGxhY2UoXFxcIi9cXFwiLCBcXFwiXFxcIikpO1xcbiAgICAgICAgICAgIH0sIGxvY2F0aW9uLmhyZWYsIGRvY3VtZW50LnRpdGxlKTtcXG4gICAgICAgICAgICBmeV9icmlkZ2VfYXBwLnBhcnNlTGF6eVJ1bGUocik7XFxuICAgICAgICB9XFxuICAgIH0gY2F0Y2ggKGUpIHtcXG4gICAgICAgIGZ5X2JyaWRnZV9hcHAubG9nKGUudG9TdHJpbmcoKSk7XFxuICAgIH1cXG59KTtcXG5sZXQgYmQgPSB1cmwuaW5jbHVkZXMoXFxcImJhaWR1XFxcIikgPyBcXFwiYmFpZHUxMTFcXFwiIDogXFxcImJhaWR1XFxcIjtcXG5kLnB1c2goe1xcbiAgICB0aXRsZTogXFxcIlxcXCIsXFxuICAgIHVybDogdXJsLFxcbiAgICBjb2xfdHlwZTogXFxcIng1X3dlYnZpZXdfc2luZ2xlXFxcIixcXG4gICAgZGVzYzogXFxcImZsb2F0JiYxMDAlXFxcIixcXG4gICAgcGljX3VybDogXFxcIlxcXCIsXFxuICAgIGV4dHJhOiB7XFxuICAgICAgICAvL2Zsb2F0VmlkZW86IHRydWUsXFxuICAgICAgICBqczoganMsXFxuICAgICAgICB1cmxJbnRlcmNlcHRvcjogJC50b1N0cmluZygoaG9tZSwgcnVsZSkgPT4ge1xcbiAgICAgICAgICAgIGlmICghaW5wdXQuaW5jbHVkZXMoaG9tZSkpIHtcXG4gICAgICAgICAgICAgICAgbGV0IGxpc3QgPSBbXFxuICAgICAgICAgICAgICAgICAgICBcXFwiYmFpZHVcXFwiLFxcbiAgICAgICAgICAgICAgICAgICAgXFxcImFsaXl1blxcXCIsXFxuICAgICAgICAgICAgICAgICAgICBcXFwiMzYwXFxcIlxcbiAgICAgICAgICAgICAgICBdO1xcbiAgICAgICAgICAgICAgICBmb3IgKGxldCBpdCBvZiBsaXN0KSB7XFxuICAgICAgICAgICAgICAgICAgICBpZiAoaW5wdXQuaW5jbHVkZXMoaXQpKSB7XFxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xcbiAgICAgICAgICAgICAgICAgICAgfVxcbiAgICAgICAgICAgICAgICB9XFxuICAgICAgICAgICAgICAgIHJldHVybiAkLnRvU3RyaW5nKCh1cmwsIHUsIHJ1bGUpID0+IHtcXG4gICAgICAgICAgICAgICAgICAgIGZ5X2JyaWRnZV9hcHAub3BlbihKU09OLnN0cmluZ2lmeSh7XFxuICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGU6IHUucmVwbGFjZShcXFwiaHR0cHM6Ly9cXFwiLCBcXFwiXFxcIikucmVwbGFjZShcXFwiaHR0cDovL1xcXCIsIFxcXCJcXFwiKS5yZXBsYWNlKFxcXCIvXFxcIiwgXFxcIlxcXCIpLFxcbiAgICAgICAgICAgICAgICAgICAgICAgIHVybDogXFxcImhpa2VyOi8vcGFnZS94NT9ydWxlPVxcXCIgKyBydWxlICsgXFxcIiZ1PVxcXCIgKyB1cmwsXFxuICAgICAgICAgICAgICAgICAgICB9KSlcXG4gICAgICAgICAgICAgICAgfSwgYmFzZTY0RW5jb2RlKGlucHV0KSwgZ2V0SG9tZShpbnB1dCwgaW5wdXQpLCBydWxlKTtcXG4gICAgICAgICAgICB9XFxuICAgICAgICB9LCBnZXRIb21lKHVybCksIE1ZX1JVTEUudGl0bGUpLFxcbiAgICAgICAgY2FuQmFjazogdHJ1ZSxcXG4gICAgICAgIGJsb2NrUnVsZXM6IFtcXFwiLmdpZlxcXCIsIFxcXCIvYWQvXFxcIiwgXFxcIi9hZHMvXFxcIiwgXFxcImdvb2dsZVxcXCIsIFxcXCIvc2gvdG8vXFxcIiwgXFxcIi5HSUZcXFwiLCBiZF1cXG4gICAgfVxcbn0pO1xcbnNldFJlc3VsdChkKTtcIixcImdyb3VwXCI6XCLlhbblroNcIixcInVhXCI6XCJtb2JpbGVcIixcInByZVJ1bGVcIjpcIlwiLFwicGFnZXNcIjpcIlt7XFxcImNvbF90eXBlXFxcIjpcXFwibW92aWVfM1xcXCIsXFxcIm5hbWVcXFwiOlxcXCJ4NVxcXCIsXFxcInBhdGhcXFwiOlxcXCJ4NVxcXCIsXFxcInJ1bGVcXFwiOlxcXCJqczpcXFxcbnZhciBkID0gW107XFxcXG5sZXQgdXJsID0gYmFzZTY0RGVjb2RlKGdldFBhcmFtKFxcXFxcXFwidVxcXFxcXFwiKSk7XFxcXG5sZXQganMgPSAkLnRvU3RyaW5nKCgpID0+IHtcXFxcbiAgICB0cnkge1xcXFxuICAgICAgICBpZiAoZG9jdW1lbnQudGl0bGUgJiYgZG9jdW1lbnQudGl0bGUubGVuZ3RoKSB7XFxcXG4gICAgICAgICAgICBsZXQgciA9ICQkJCgpLmxhenlSdWxlKCh1cmwsIHQpID0+IHtcXFxcbiAgICAgICAgICAgICAgICBzZXRQYWdlVGl0bGUodCArIFxcXFxcXFwiIFxcXFxcXFwiICsgZ2V0SG9tZSh1cmwsIHVybCkucmVwbGFjZShcXFxcXFxcImh0dHBzOi8vXFxcXFxcXCIsIFxcXFxcXFwiXFxcXFxcXCIpLnJlcGxhY2UoXFxcXFxcXCJodHRwOi8vXFxcXFxcXCIsIFxcXFxcXFwiXFxcXFxcXCIpLnJlcGxhY2UoXFxcXFxcXCIvXFxcXFxcXCIsIFxcXFxcXFwiXFxcXFxcXCIpKTtcXFxcbiAgICAgICAgICAgIH0sIGxvY2F0aW9uLmhyZWYsIGRvY3VtZW50LnRpdGxlKTtcXFxcbiAgICAgICAgICAgIGZ5X2JyaWRnZV9hcHAucGFyc2VMYXp5UnVsZShyKTtcXFxcbiAgICAgICAgfVxcXFxuICAgIH0gY2F0Y2ggKGUpIHtcXFxcbiAgICAgICAgZnlfYnJpZGdlX2FwcC5sb2coZS50b1N0cmluZygpKTtcXFxcbiAgICB9XFxcXG59KTtcXFxcbmxldCBiZCA9IHVybC5pbmNsdWRlcyhcXFxcXFxcImJhaWR1XFxcXFxcXCIpID8gXFxcXFxcXCJiYWlkdTExMVxcXFxcXFwiIDogXFxcXFxcXCJiYWlkdVxcXFxcXFwiO1xcXFxuZC5wdXNoKHtcXFxcbiAgICB0aXRsZTogXFxcXFxcXCJcXFxcXFxcIixcXFxcbiAgICB1cmw6IHVybCxcXFxcbiAgICBjb2xfdHlwZTogXFxcXFxcXCJ4NV93ZWJ2aWV3X3NpbmdsZVxcXFxcXFwiLFxcXFxuICAgIGRlc2M6IFxcXFxcXFwiZmxvYXQmJjEwMCVcXFxcXFxcIixcXFxcbiAgICBwaWNfdXJsOiBcXFxcXFxcIlxcXFxcXFwiLFxcXFxuICAgIGV4dHJhOiB7XFxcXG4gICAgICAgIC8vZmxvYXRWaWRlbzogdHJ1ZSxcXFxcbiAgICAgICAganM6IGpzLFxcXFxuICAgICAgICB1cmxJbnRlcmNlcHRvcjogJC50b1N0cmluZygoaG9tZSwgcnVsZSkgPT4ge1xcXFxuICAgICAgICAgICAgaWYgKCFpbnB1dC5pbmNsdWRlcyhob21lKSkge1xcXFxuICAgICAgICAgICAgICAgIGxldCBsaXN0ID0gW1xcXFxuICAgICAgICAgICAgICAgICAgICBcXFxcXFxcImJhaWR1XFxcXFxcXCIsXFxcXG4gICAgICAgICAgICAgICAgICAgIFxcXFxcXFwiYWxpeXVuXFxcXFxcXCIsXFxcXG4gICAgICAgICAgICAgICAgICAgIFxcXFxcXFwiMzYwXFxcXFxcXCJcXFxcbiAgICAgICAgICAgICAgICBdO1xcXFxuICAgICAgICAgICAgICAgIGZvciAobGV0IGl0IG9mIGxpc3QpIHtcXFxcbiAgICAgICAgICAgICAgICAgICAgaWYgKGlucHV0LmluY2x1ZGVzKGl0KSkge1xcXFxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xcXFxuICAgICAgICAgICAgICAgICAgICB9XFxcXG4gICAgICAgICAgICAgICAgfVxcXFxuICAgICAgICAgICAgICAgIHJldHVybiAkLnRvU3RyaW5nKCh1cmwsIHUsIHJ1bGUpID0+IHtcXFxcbiAgICAgICAgICAgICAgICAgICAgZnlfYnJpZGdlX2FwcC5vcGVuKEpTT04uc3RyaW5naWZ5KHtcXFxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlOiB1LnJlcGxhY2UoXFxcXFxcXCJodHRwczovL1xcXFxcXFwiLCBcXFxcXFxcIlxcXFxcXFwiKS5yZXBsYWNlKFxcXFxcXFwiaHR0cDovL1xcXFxcXFwiLCBcXFxcXFxcIlxcXFxcXFwiKS5yZXBsYWNlKFxcXFxcXFwiL1xcXFxcXFwiLCBcXFxcXFxcIlxcXFxcXFwiKSxcXFxcbiAgICAgICAgICAgICAgICAgICAgICAgIHVybDogXFxcXFxcXCJoaWtlcjovL3BhZ2UveDU/cnVsZT1cXFxcXFxcIiArIHJ1bGUgKyBcXFxcXFxcIiZ1PVxcXFxcXFwiICsgdXJsLFxcXFxuICAgICAgICAgICAgICAgICAgICB9KSlcXFxcbiAgICAgICAgICAgICAgICB9LCBiYXNlNjRFbmNvZGUoaW5wdXQpLCBnZXRIb21lKGlucHV0LCBpbnB1dCksIHJ1bGUpO1xcXFxuICAgICAgICAgICAgfVxcXFxuICAgICAgICB9LCBnZXRIb21lKHVybCksIE1ZX1JVTEUudGl0bGUpLFxcXFxuICAgICAgICBjYW5CYWNrOiB0cnVlLFxcXFxuICAgICAgICBibG9ja1J1bGVzOiBbXFxcXFxcXCIuZ2lmXFxcXFxcXCIsIFxcXFxcXFwiL2FkL1xcXFxcXFwiLCBcXFxcXFxcIi9hZHMvXFxcXFxcXCIsIFxcXFxcXFwiZ29vZ2xlXFxcXFxcXCIsIFxcXFxcXFwiL3NoL3RvL1xcXFxcXFwiLCBcXFxcXFxcIi5HSUZcXFxcXFxcIiwgYmRdXFxcXG4gICAgfVxcXFxufSk7XFxcXG5zZXRSZXN1bHQoZCk7XFxcIn1dXCIsXCJwcm94eVwiOlwiXCJ9IiwidGl0bGUiOiLmgI7kuYjog4zkuabmnIDmnInmlYjnjofvvJ8gLSDmiJHkuI3mmK/nm5DnpZ4gb25laHUueHl6In0=
HJFbSuwR,Untitled,debabrataMukherjee,MySQL,Wednesday 14th of June 2023 09:12:57 PM CDT,"SHOW DATABASES;

-- -----------------
-- Creating Table 
-- -----------------
CREATE TABLE Employee (
    E_No CHAR(3) PRIMARY KEY,
    E_Name VARCHAR(50) NOT NULL,
    Job_Type VARCHAR(50) NOT NULL,
    Manager CHAR(3),
    Hire_Date DATE NOT NULL,
    D_No CHAR(3) NOT NULL,
    Commission DECIMAL(10 , 2 ),
    Salary DECIMAL(10 , 2 ) NOT NULL,
    Total_Salary Decimal(10,2) as (Commission+Salary)
);
CREATE TABLE Department (
    D_No CHAR(3) PRIMARY KEY,
    D_Name VARCHAR(50),
    Location VARCHAR(50) NOT NULL
);
-- --------------------------
-- For deleting the tables 
-- --------------------------
drop table Employee;
drop table department;


-- ------------------------------------
-- For Inserting values in the table
-- ------------------------------------
insert into Employee
(E_No, E_Name, Job_Type, Manager, Hire_Date, D_No, Commission, Salary)
values 
('E01','Debabrata','Engineer','YES','2021-4-4','D01',4578.5,78000),
('E02','Debapriya','Engineer','NO','2021-4-4','D01',69878.5,68000),
('E03','Ananta','Programmer','NO','2021-4-8','D02',978.5,58000),
('E04','Rick','Editor','NO','2021-4-14','D03',51078.5,50000),
('E05','Debajeet','Editor','NO','2021-8-16','D03',1878.5,48000),
('E06','Prithiviraj','Receptionist','NO','2021-8-16','D04',0.0,28000),
('E07','Anish','GateMan','NO','2022-4-24','D05',20000.0,18000);


insert into Department
values
('D01','Department1','Mumbai'),
('D02','Department2','Delhi'),
('D03','Department3','Delhi'),
('D04','Department4','Delhi'),
('D05','Department5','Delhi');


-- ------------------------------------
-- Displaying the values in the table 
-- ------------------------------------
SELECT 
    *
FROM
    Employee;
SELECT 
    *
FROM
    department;


-- -------------------------------
-- Different Types OF Query 
-- -------------------------------

SELECT 
    Employee.E_No,
    Employee.E_Name,
    Employee.Job_Type,
    Employee.Hire_Date,
    Employee.Total_Salary,
    Department.D_Name,
    Department.Location
FROM
    Employee
        JOIN
    Department ON Employee.D_No = Department.D_No
ORDER BY Employee.E_Name ASC;

 -- 1. Query to display Employee Name, Job, Hire Date, Employee Number; for each employee with the 
	SELECT 
    E_No, E_Name, Job_Type, Hire_Date
FROM
    Employee;

 -- 2. Query to display unique Jobs from the Employee Table.
 
SELECT 
    E_No, E_Name, Job_Type, Hire_Date
FROM
    Employee
WHERE
    Job_Type = 'Editor';
    
 -- Example 2
SELECT 
    E_No, E_Name, Job_Type, Hire_Date
FROM
    Employee
WHERE
    Job_Type = 'Engineer';
    
-- 3. Query to display the Employee Name concatenated by a Job separated by a comma.

SELECT 
    CONCAT(E_Name, ' , ', Job_Type) AS Concatenated_Name
FROM
    Employee;

-- 4. Query to display all the data from the Employee Table. Separate each Column by a comma and 
--    name the said column as THE_OUTPUT.
SELECT 
    CONCAT(E_No,
            ' , ',
            E_Name,
            ' , ',
            Job_Type,
            ' , ',
            Manager,
            ' , ',
            Hire_Date,
            ' , ',
            D_No,
            ' , ',
            Commission,
            ' , ',
            Salary,
            ' , ',
            Total_Salary) AS THE_OUTPUT
FROM
    Employee;

-- 5. Query to display the Employee Name and Salary of all the employees 
SELECT 
    E_Name, Total_Salary
FROM
    Employee
WHERE
    Total_Salary >= 50000;

-- 6. Query to display Employee Name and Department Number for the Employee No= E04. 
SELECT 
    E_Name, D_No
FROM
    Employee
WHERE
    E_No = 'E04';

-- 7. Query to display Employee Name and Salary for all employees whose salary 
SELECT 
    E_Name, Total_Salary
FROM
    Employee
WHERE
    NOT (Total_Salary > 40000
        AND Total_Salary < 50000);
        
-- 8. Query to display Employee Name and Department No. of all the employees 
SELECT 
    E_Name, D_No
FROM
    Employee
WHERE
    D_No = 'D01' OR D_No = 'D03'
ORDER BY E_Name ASC;


-- 9. Query to display Name and Hire Date of every Employee who 
--    was hired in 1981.

SELECT 
    E_Name, Hire_Date
FROM
    employee
WHERE
    YEAR(Hire_Date) = '2021';
 
-- 10. Query to display Name and Job of all employees who don’t 
--     have a current Manager. 
SELECT 
    E_Name, Job_Type
FROM
    employee
WHERE
    Manager = 'NO'

-- 11. Query to display the Name, Salary and Commission for all the 
--     employees who earn commission. 
SELECT 
    E_Name, Salary, Commission
FROM
    employee
WHERE
    Commission > 0.0

-- 12. Sort the data in descending order of Salary and Commission. 

SELECT 
    Salary, Commission
FROM
    employee
ORDER BY salary DESC , commission DESC

-- *** 13. Query to display Name of all the employees where the third 
--     letter of their name is ‘A’ or 'B'. 

SELECT 
    Total_Salary, E_Name
FROM
    Employee
WHERE
    SUBSTRING(E_Name, 3, 1) = 'A'
        OR SUBSTRING(E_Name, 3, 1) = 'B'*** 14. Query to display Name of all employees either have two ‘R’s 
--     or have two ‘ A’s in their name and are either in Dept No = 30 
--     or their Manger’s Employee No = 7788. 
SELECT 
    E_Name
FROM
    Employee
WHERE
    ((LENGTH(E_Name) - LENGTH(REPLACE(LOWER(E_Name), 'r', ''))) >= 2
        OR (LENGTH(E_Name) - LENGTH(REPLACE(LOWER(E_Name), 'a', ''))) >= 2)
        AND (D_No = 'D01' OR Manager = 'YES');

        
-- 15. Query to display Name, Salary and Commission for all employees 
--     whose Commission Amount is greater than their Salary increased by 5%.

SELECT 
    E_Name, Salary, Commission
FROM
    Employee
WHERE
    (Commission > (Salary * 21 / 20));

 -- 16. Query to display the Current Date. 
 
SELECT CURDATE() AS Todays_Date;

 -- 17. Query to display Name, Hire Date and Salary Review Date which is the 
 --     1st Monday after six months of employment. 
 
SELECT 
    E_Name,
    Hire_Date,
    DATE_ADD(DATE_ADD(DATE_ADD(Hire_Date, INTERVAL 6 MONTH),
            INTERVAL (9 - WEEKDAY(DATE_ADD(Hire_Date, INTERVAL 6 MONTH))) DAY),
        INTERVAL IF(WEEKDAY(DATE_ADD(Hire_Date, INTERVAL 6 MONTH)) >= 1,
            7,
            0) - WEEKDAY(DATE_ADD(Hire_Date, INTERVAL 6 MONTH)) DAY) AS salary_review_date
FROM
    Employee;

 
 
-- 18. Query to display Name and calculate the number of months between today 
--     and the date each employee was hired. 

SELECT 
    E_Name,
    TIMESTAMPDIFF(MONTH,
        Hire_Date,
        CURDATE()) AS months_since_hire
FROM
    Employee;


-- 19. Query to display the following for each employee <E-Name> earns < Salary> 
--     monthly but wants < 3 * Current Salary >. Label the Column as Dream Salary. 

SELECT 
    CONCAT(E_Name,
            ' earns ',
            FORMAT(Salary, 2),
            ' monthly but wants ',
            FORMAT(3 * Salary, 2)) AS 'Dream Salary'
FROM
    Employee;



-- 20. Query to display Name with the 1st letter capitalized and all other letter 
--     lower case and length of their name of all the employees whose name starts 
--     with ‘J’, ’A’ and ‘M’. 




-- 21. Query to display Name, Hire Date and Day of the week on which the employee started. 
  
  
  
  
-- 22. Query to display Name, Department Name and Department No for all the employees. 



-- 23. Query to display Unique Listing of all Jobs that are in Department # 30. 



-- 24. Query to display Name, Dept Name of all employees who have an ‘A’ in their name. 




-- 25. Query to display Name, Job, Department No. And Department Name for all 
--     the employees working at the Dallas location. 




-- 26. Query to display Name and Employee no. Along with their Manger’s Name and 
--     the Manager’s employee no; along with the Employees’ Name who do not have a Manager. 




-- 27. Query to display Name, Dept No. And Salary of any employee whose department 
--     No. and salary matches both the department no. And the salary of any employee 
--     who earns a commission. 




-- 28. Query to display Name and Salaries represented by asterisks, where each asterisk 
--     (*) signifies $100. 





-- 29. Query to display the Highest, Lowest, Sum and Average Salaries of all the employees 
SELECT 
    MAX(Total_Salary) AS highest_salary,
    MIN(Total_Salary) AS lowest_salary,
    SUM(Total_Salary) AS total_salary,
    AVG(Total_Salary) AS average_salary
FROM
    Employee;



-- *** 30. Query to display the number of employees performing the same Job type functions. 

SELECT 
    Job_Type, COUNT(*) AS NoOF_Employees
FROM
    Employee
GROUP BY Job_Type;



-- 31. Query to display the no. of managers without listing their names.




-- 32. ***Query to display the Department Name, Location Name, No. of Employees and the average 
--     salary for all employees in that department. 

SELECT 
    Department.D_name,
    Department.Location,
    COUNT(Employee.E_No) AS No_Of_employees,
    AVG(Employee.Total_Salary) AS Avg_Salary
FROM
    Department
        JOIN
    Employee ON Department.D_No = Employee.D_No
GROUP BY Department.D_Name , Department.Location;


-- 33. Query to display Name and Hire Date for all employees in the same dept. as Blake. 

SELECT 
    E_Name, Hire_Date
FROM
    Employee
WHERE
    D_No = (SELECT 
            D_No
        FROM
            Employee
        WHERE
            E_Name = 'Rick');



-- *** 34. Query to display the Employee No. And Name for all employees who earn more than 
--     the average salary. 
SELECT 
    E_No, E_Name
FROM
    Employee
WHERE
    Total_Salary > (SELECT 
            AVG(Total_Salary)
        FROM
            Employee);


-- 35. Query to display Employee Number and Name for all employees who work in a department 
--     with any employee whose name contains a ‘T’. 





-- 36. Query to display the names and salaries of all employees who report to King. 





-- 37. Query to display the department no, name and job for all employees in the Sales department.

SELECT 
    Employee.D_No, Employee.E_Name, Employee.Job_Type
FROM
    Employee
        JOIN
    Department ON Employee.D_No = Department.D_No
WHERE
    Department.D_Name = 'Department2';
 
   
-- **Use to delete tables from database**

drop table employee;
drop table department;

    


    "
UrYPBPBx,gC Suite Variables (Venti),SaberAkiyama,Pascal,Wednesday 14th of June 2023 08:51:49 PM CDT,"[Variables]

;Width and height for meters. Defaults: 80, 80.
Width=108
Height=#Width#

;Inner and outer radius of meters. Defaults: 32, 25.
;With default setting the meter is 64x64 and has 8px margins (80px-64px=2*8px).
MeterOuter=54
MeterInner=46

;Font to be used. ""Familiar Pro"" looks nice, but license doesn't allow me to include it.
;Download Familiar Pro for free: http://www.dafont.com/familiar-pro.font
;Defaults: Arial, 9.
FontFace=""HYWenHei 85W""
FontSize=14

;Settings for single meters and quad meters: height of a text label, horizontal position
;(usually half of width) and vertical position of the top label. To move the bottom label
;lower, increase the label height. Defaults: 11, 40, 28. For Familiar Pro use LabelY=27.
LabelHeight=20
LabelX=54
LabelY=36

;Settings for dual meters: font size, label height and vertical position of the top label.
;Defaults: 8, 9, 26. For FamiliarPro use LabelYDual=25
FontSizeDual=10
LabelHeightDual=20
LabelYDual=27

;Settings for the Clock: font size, label height and vertical position of the top label.
;Defaults: 13, 15, 23. For Familiar Pro use LabelYClock=22
FontSizeClock=14
LabelHeightClock=15
LabelYClock=23

;Settings for the Big Clock.
;Defaults: 160, 160, 64, 50, 28, 32, 82, 43.
;For Familiar Pro use BigLabelY=41
BigWidth=160
BigHeight=#BigWidth#
BigMeterInner=64
BigMeterWidth=50
BigFontSize=28
BigLabelHeight=32
BigLabelX=82                                                       
BigLabelY=43

;Settings for Sidebar: color, aero blur (0/1), width, height.
;Defaults: [0, 0, 0], 0, #Width#, #WORKAREAHEIGHT# (your screen's height).
SidebarColor=0, 0, 0
SidebarBlur=0
SidebarWidth=#Width#
SidebarHeight=#WORKAREAHEIGHT#

;Colors for meters: actual meter's color, background color, label color, value text's color.
;Defaults: [255, 255, 255], [255, 255, 255, 64], [255, 255, 255, 192], [255, 255, 255, 192].
ColorMeter=228,241,229,255
ColorBG=38,110,103,64
ColorLabel=228,241,229,255
ColorValue=228,241,229,255

;Your Internet connection's download/upload speed in bits per second.
;Leave zeros for ""smart"" meters that use the biggest encountered speeds as NetDL/UL.
;Defaults: 0, 0.
NetDL=0
NetUL=0

;Drives to monitor for Drive meters. Defaults: C:, D:
Drive1=C:
Drive2=D:"
dKKQ3SAH,Calculo_Segundos,LightProgrammer000,Dart,Wednesday 14th of June 2023 08:23:04 PM CDT,"// Bibliotecas
import 'dart:io';

// Funcao principal
main() {
  // Funcao
  print(entDados());
}

// Funcao: Entrada de dados
int entDados() {
  // Variaveis
  int d, h, m;

  stdout.write(""# Dias: "");
  d = int.parse(stdin.readLineSync()!);

  stdout.write(""# Horas: "");
  h = int.parse(stdin.readLineSync()!);

  stdout.write(""# Minutos: "");
  m = int.parse(stdin.readLineSync()!);

  return calculoSeg(d, h, m);
}

// Calculo
int calculoSeg(int d, int h, int m) {
  return 60 * (d * 24 * 60 + h * 60 + m);
}
"
WkVzKq9g,Calculdadora_Basica,LightProgrammer000,Dart,Wednesday 14th of June 2023 08:22:10 PM CDT,"// Bibliotecas
import 'dart:io';

// Funcao principal
main() {
  // Variaveis
  var opc;
  double a, b;

  // Entrada de dados
  stdout.write(""# Primeiro valor: "");
  a = double.parse(stdin.readLineSync()!);

  stdout.write(""# Segundo valor: "");
  b = double.parse(stdin.readLineSync()!);

  // Menu
  stdout.writeln(""\n# Operacoes matematicas"");
  stdout.writeln(""# [+] Somar"");
  stdout.writeln(""# [-] Subtrair"");
  stdout.writeln(""# [*] Multiplicar"");
  stdout.writeln(""# [/] Dividir"");
  stdout.write(""# Opc: "");
  opc = stdin.readLineSync()!;

  // Chamada de metodo
  operacao(a, b, opc);
}

// Funcao
void operacao(double a, double b, var opc) {
  if (opc == ""+"") {
    print(""\n# Soma: "" + (a + b).toStringAsFixed(2));
  } else if (opc == ""-"") {
    print(""\n Subtrair: "" + (a - b).toStringAsFixed(2));
  } else if (opc == ""*"") {
    print(""\n# Multiplicar: "" + (a * b).toStringAsFixed(2));
  } else if (opc == ""/"") {
    try {
      print(""\n# Dividir: "" + (a / b).toStringAsFixed(2));
    } catch (e) {
      //print(e);
    }
  } else {
    print(""# Opcao invalida !"");
  }
}
"
4ti083J4,Ordenamento,LightProgrammer000,Dart,Wednesday 14th of June 2023 08:21:16 PM CDT,"// Bibliotecas
import 'dart:io';

// Funcao principal
main() {
  // Variaveis
  int a, b, c, aux;

  // Entrada de dados
  stdout.write(""# Digite valor: "");
  a = int.parse(stdin.readLineSync()!);

  stdout.write(""# Digite valor: "");
  b = int.parse(stdin.readLineSync()!);

  stdout.write(""# Digite valor: "");
  c = int.parse(stdin.readLineSync()!);

  // Estrutura condicional
  if (a > b) {
    aux = a;
    a = b;
    b = aux;
  }

  if (a > c) {
    aux = a;
    a = c;
    c = aux;
  }

  if (b > c) {
    aux = b;
    b = c;
    c = aux;
  }

  // Ordem
  print(""# Maior: "" + c.toString());
  print(""# Menor: "" + a.toString());

  // Ordenamento
  print(""# Ordem crescente: "" + ordemCrescente(a, b, c));
  print(""# Ordem Decrescente: "" + ordemDecrescente(a, b, c));
}

// Funcao
String ordemCrescente(int a, int b, int c) {
  return a.toString() + "" | "" + b.toString() + "" | "" + c.toString();
}

// Funcao
String ordemDecrescente(int a, int b, int c) {
  return c.toString() + "" | "" + b.toString() + "" | "" + a.toString();
}
"
