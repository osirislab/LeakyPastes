id,title,username,language,date,content
NrfLyUP8,Untitled,andewK,Python,Wednesday 12th of July 2023 07:03:41 PM CDT,"from itertools import accumulate
print(*accumulate(range(1, int(input()) + 1)))
exit()
"
4hquGqFn,BTC Wallet Credentials have been reset,soletowns_62,GetText,Wednesday 12th of July 2023 06:47:45 PM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please disregard this message.
Your new login credentials are slivnimapk:ZsANVg on 45.9.148.244
You can connect via SSH.
Regards"
2SmyHZpn,Untitled,Houge_Langley,Bash,Wednesday 12th of July 2023 06:16:50 PM CDT,"[    0.000000] Linux version 6.5.0-rc1 (makepkg@archlinux) (gcc (GCC) 13.1.1 20230429, GNU ld (GNU Binutils) 2.40.0) #1 SMP Wed, 12 Jul 2023 22:29:51 +0000
[    0.000000] random: crng init done
[    0.000000] Machine model: Sophgo Mango
[    0.000000] SBI specification v1.0 detected
[    0.000000] SBI implementation ID=0x1 Version=0x10002
[    0.000000] SBI TIME extension detected
[    0.000000] SBI IPI extension detected
[    0.000000] SBI RFENCE extension detected
[    0.000000] SBI SRST extension detected
[    0.000000] earlycon: uart0 at MMIO32 0x0000007040000000 (options '')
[    0.000000] printk: bootconsole [uart0] enabled
[    0.000000] efi: UEFI not found.
[    0.000000] Reserved memory: created CMA memory pool at 0x0000000180000000, size 256 MiB
[    0.000000] OF: reserved mem: initialized node linux,cma, compatible id shared-dma-pool
[    0.000000] OF: reserved mem: 0x0000000180000000..0x000000018fffffff (262144 KiB) map reusable linux,cma
[    0.000000] OF: reserved mem: 0x0000000000000000..0x00000000001fffff (2048 KiB) map non-reusable mmode_resv0@0
[    0.000000] OF: NUMA: parsing numa-distance-map-v1
[    0.000000] NUMA: NODE_DATA [mem 0x7ffffe580-0x7ffffffff]
[    0.000000] NUMA: NODE_DATA [mem 0xfffffe580-0xfffffffff]
[    0.000000] NUMA: NODE_DATA [mem 0x17ffffe580-0x17ffffffff]
[    0.000000] NUMA: NODE_DATA [mem 0x1effd33580-0x1effd34fff]
[    0.000000] Zone ranges:
[    0.000000]   DMA32    [mem 0x0000000000000000-0x00000000ffffffff]
[    0.000000]   Normal   [mem 0x0000000100000000-0x0000001effffffff]
[    0.000000] Movable zone start for each node
[    0.000000] Early memory node ranges
[    0.000000]   node   0: [mem 0x0000000000000000-0x00000007ffffffff]
[    0.000000]   node   1: [mem 0x0000000800000000-0x0000000fffffffff]
[    0.000000]   node   2: [mem 0x0000001000000000-0x00000017ffffffff]
[    0.000000]   node   3: [mem 0x0000001800000000-0x0000001effffffff]
[    0.000000] Initmem setup node 0 [mem 0x0000000000000000-0x00000007ffffffff]
[    0.000000] Initmem setup node 1 [mem 0x0000000800000000-0x0000000fffffffff]
[    0.000000] Initmem setup node 2 [mem 0x0000001000000000-0x00000017ffffffff]
[    0.000000] Initmem setup node 3 [mem 0x0000001800000000-0x0000001effffffff]
[    0.000000] SBI HSM extension detected
[    0.000000] Oops - illegal instruction [#1]
[    0.000000] Modules linked in:
[    0.000000] CPU: 0 PID: 0 Comm: swapper Not tainted 6.5.0-rc1 #1
[    0.000000] Hardware name: Sophgo Mango (DT)
[    0.000000] epc : riscv_v_setup_vsize+0x10/0x5a
[    0.000000]  ra : riscv_fill_hwcap+0x40c/0x692
[    0.000000] epc : ffffffff8000782c ra : ffffffff80e03858 sp : ffffffff81c03c70
[    0.000000]  gp : ffffffff81e7f960 tp : ffffffff81c111c0 t0 : 0000000000000000
[    0.000000]  t1 : 0000000000000000 t2 : 0000000000000003 s0 : ffffffff81c03df0
[    0.000000]  s1 : ffffffff81e830b0 a0 : 0000000000000080 a1 : 0000000000000000
[    0.000000]  a2 : 0000000000000080 a3 : 0000000000000000 a4 : 0000000000000600
[    0.000000]  a5 : 000000000020112d a6 : 000000000000003f a7 : 000000000000ff00
[    0.000000]  s2 : ffffffc6fed83dab s3 : 0000000000000080 s4 : 000000000020112d
[    0.000000]  s5 : 000000a0000000a1 s6 : ffffffff81423eb8 s7 : 0000000100000000
[    0.000000]  s8 : 0000004000000000 s9 : 0000000200000000 s10: 000000000000005f
[    0.000000]  s11: ffffffff81e911f8 t3 : 0000000000ff0000 t4 : ffffffff81e966c7
[    0.000000]  t5 : ffffffff81e966c8 t6 : ffffffff81c03ba0
[    0.000000] status: 0000000200000100 badaddr: 00000000c22027f3 cause: 0000000000000002
[    0.000000] [<ffffffff8000782c>] riscv_v_setup_vsize+0x10/0x5a
[    0.000000] [<ffffffff80e042fa>] setup_arch+0x5c2/0x626
[    0.000000] [<ffffffff80e00a10>] start_kernel+0x98/0xaa2
[    0.000000] Code: 0141 8082 0001 0001 0001 0001 0713 6000 2073 1007 (27f3) c220 
[    0.000000] ---[ end trace 0000000000000000 ]---
[    0.000000] Kernel panic - not syncing: Fatal exception in interrupt"
jp7Yah1a,deniska exp,liteshock,Lua,Wednesday 12th of July 2023 05:10:52 PM CDT,"local r = require('robot')
local component = require(""component"")
local inv = component.inventory_controller


function math_round( roundIn , roundDig ) -- первый аргумент - число которое надо округлить, второй аргумент - количество символов после запятой.
    local mul = math.pow( 10, roundDig )
    return ( math.floor( ( roundIn * mul ) + 0.5 )/mul )
end
 
function Text()
    os.execute(""cls"")
    print(""Руды мутятся, реактор крутится!!"")
    print(""Уровень робота на данный момент - "",  math_round( r.level(), 8 ))
end

while true do

  local counter = 0;

  if counter % 100 == 0 then
    Text()
  end
  
  counter = counter + 1

  if r.detect(3) == true then
    r.swing() -- ломаем блок перед собой
  end
end"
pHAKJk14,Python run zip,A_GUES,Python,Wednesday 12th of July 2023 04:34:56 PM CDT,"import zipfile

def extract_zip_file(file_path, destination_path):
    with zipfile.ZipFile(file_path, 'r') as zip_ref:
        zip_ref.extractall(destination_path)

# Use the function
extract_zip_file('path_to_your_zip_file.zip', 'path_to_extract_to')"
ZmYQrrhz,Python run Jar,A_GUES,Python,Wednesday 12th of July 2023 04:34:20 PM CDT,"import subprocess

def run_jar_file(file_path):
    subprocess.call(['java', '-jar', file_path])

# Use the function
run_jar_file('path_to_your_jar_file.jar')"
Dtr1M0F3,BMDA v1.9.0-909 scans RA4M1 (Uno R4),ALTracer,Perl,Wednesday 12th of July 2023 03:17:33 PM CDT,"DP DPIDR 0x5ba02477 (v2 rev0) designer 0x43b partno Oxba
TARGETID 0x00160447 designer 0x423 partno 0x160
RESET_SEQ failed
AP   0: IDR=24770011 CFG=00000000 BASE=e00ff003 CSW=a3000040 (AHB3-AP var1 rev2)
...
ROM: Table BASE=0xe00ff000 SYSMEM=0x00000001, Manufacturer 423 Partno 016
...
-> cortexm_probe
CPUID 0x410fc241 (M4 var 0 rev 1)
Calling renesas_probe
Found renesas chip (R7FA4M1AB3CFM   ) with Flash Root Table and unsupported Part ID 0x160 please report it
...
ROM: Table END
AP   1: IDR=44770002 CFG=00000000 BASE=80000003 CSW=80000040 (APB2/3-AP var0 rev4)
0x80000000: 0x00000004000a3004 Non ARM component ignored
***  1   R7FA4M1AB3CFM    M4"
bKPvTiGb,Ficha3_Karen,AuraUtils,JSON,Wednesday 12th of July 2023 03:05:48 PM CDT,"{
  ""Ficha"": ""Treino 3"",
  ""FichaTreino"": [

    {
      ""Titulo"": ""Mobilidade"",
      ""Linha1"": ""MMII"",
      ""Linha2"": """"
    },
    {
      ""Titulo"": ""Abdominal"",
      ""Linha1"": ""Paralela"",
      ""Linha2"": """"
    },
    {
      ""Titulo"": ""Abdução Band"",
      ""Linha1"": ""3 Series"",
      ""Linha2"": ""15 Reps""
    },
    {
      ""Titulo"": ""Extensão Quadril"",
      ""Linha1"": ""4 Series"",
      ""Linha2"": ""10 Reps""
    },
    {
      ""Titulo"": ""Elevação Pelvica"",
      ""Linha1"": ""4 Series"",
      ""Linha2"": ""12,10,8,6 Reps""
    },
    {
      ""Titulo"": ""Bulgaro"",
      ""Linha1"": ""3 Series"",
      ""Linha2"": ""12 Reps""
    },
    {
      ""Titulo"": ""Terra Sumo"",
      ""Linha1"": ""4 Series"",
      ""Linha2"": ""10 Reps""
    },
    {
      ""Titulo"": ""Stiff"",
      ""Linha1"": ""4 Series"",
      ""Linha2"": ""10 Reps""
    },
    {
      ""Titulo"": ""MesaFlexora"",
      ""Linha1"": ""3 Series"",
      ""Linha2"": ""10,8,6 Reps""
    },
    {
      ""Titulo"": ""Cardio"",
      ""Linha1"": ""100 Polichinelo"",
      ""Linha2"": ""Elíptico 10 Minutos""
    }
  ]
}"
DMseaTv4,Nigerian scammers [12-7-2/2023],bombaires,HTML,Wednesday 12th of July 2023 02:43:32 PM CDT,"<a href=""mailto:maryannprivateoffice2014@gmail.com"">maryannprivateoffice2014@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+7190@gmail.com"">maryannprivateoffice2014+7190@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+3678@gmail.com"">maryannprivateoffice2014+3678@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+9124@gmail.com"">maryannprivateoffice2014+9124@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+20641@gmail.com"">maryannprivateoffice2014+20641@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+30892@gmail.com"">maryannprivateoffice2014+30892@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+17873@gmail.com"">maryannprivateoffice2014+17873@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+9299@gmail.com"">maryannprivateoffice2014+9299@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+14970@gmail.com"">maryannprivateoffice2014+14970@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+27980@gmail.com"">maryannprivateoffice2014+27980@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+22422@gmail.com"">maryannprivateoffice2014+22422@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+31641@gmail.com"">maryannprivateoffice2014+31641@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+12225@gmail.com"">maryannprivateoffice2014+12225@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+32437@gmail.com"">maryannprivateoffice2014+32437@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+667@gmail.com"">maryannprivateoffice2014+667@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+22390@gmail.com"">maryannprivateoffice2014+22390@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+18776@gmail.com"">maryannprivateoffice2014+18776@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+29024@gmail.com"">maryannprivateoffice2014+29024@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+1124@gmail.com"">maryannprivateoffice2014+1124@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+15040@gmail.com"">maryannprivateoffice2014+15040@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+7267@gmail.com"">maryannprivateoffice2014+7267@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+12055@gmail.com"">maryannprivateoffice2014+12055@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+20057@gmail.com"">maryannprivateoffice2014+20057@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+25104@gmail.com"">maryannprivateoffice2014+25104@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+15840@gmail.com"">maryannprivateoffice2014+15840@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+18916@gmail.com"">maryannprivateoffice2014+18916@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+16392@gmail.com"">maryannprivateoffice2014+16392@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+24829@gmail.com"">maryannprivateoffice2014+24829@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+28253@gmail.com"">maryannprivateoffice2014+28253@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+16332@gmail.com"">maryannprivateoffice2014+16332@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+25206@gmail.com"">maryannprivateoffice2014+25206@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+14067@gmail.com"">maryannprivateoffice2014+14067@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+370@gmail.com"">maryannprivateoffice2014+370@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+334@gmail.com"">maryannprivateoffice2014+334@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+20381@gmail.com"">maryannprivateoffice2014+20381@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+16158@gmail.com"">maryannprivateoffice2014+16158@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+24176@gmail.com"">maryannprivateoffice2014+24176@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+16247@gmail.com"">maryannprivateoffice2014+16247@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+5031@gmail.com"">maryannprivateoffice2014+5031@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+6488@gmail.com"">maryannprivateoffice2014+6488@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+8727@gmail.com"">maryannprivateoffice2014+8727@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+17514@gmail.com"">maryannprivateoffice2014+17514@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+27624@gmail.com"">maryannprivateoffice2014+27624@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+25917@gmail.com"">maryannprivateoffice2014+25917@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+6864@gmail.com"">maryannprivateoffice2014+6864@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+11259@gmail.com"">maryannprivateoffice2014+11259@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+28318@gmail.com"">maryannprivateoffice2014+28318@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+14579@gmail.com"">maryannprivateoffice2014+14579@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+10996@gmail.com"">maryannprivateoffice2014+10996@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+30507@gmail.com"">maryannprivateoffice2014+30507@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+14548@gmail.com"">maryannprivateoffice2014+14548@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+4880@gmail.com"">maryannprivateoffice2014+4880@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+18465@gmail.com"">maryannprivateoffice2014+18465@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+11904@gmail.com"">maryannprivateoffice2014+11904@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+25455@gmail.com"">maryannprivateoffice2014+25455@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+1695@gmail.com"">maryannprivateoffice2014+1695@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+3793@gmail.com"">maryannprivateoffice2014+3793@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+22215@gmail.com"">maryannprivateoffice2014+22215@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+31853@gmail.com"">maryannprivateoffice2014+31853@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+3313@gmail.com"">maryannprivateoffice2014+3313@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+12898@gmail.com"">maryannprivateoffice2014+12898@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+20749@gmail.com"">maryannprivateoffice2014+20749@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+683@gmail.com"">maryannprivateoffice2014+683@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+11903@gmail.com"">maryannprivateoffice2014+11903@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+9222@gmail.com"">maryannprivateoffice2014+9222@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+23719@gmail.com"">maryannprivateoffice2014+23719@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+31274@gmail.com"">maryannprivateoffice2014+31274@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+13100@gmail.com"">maryannprivateoffice2014+13100@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+17947@gmail.com"">maryannprivateoffice2014+17947@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+25155@gmail.com"">maryannprivateoffice2014+25155@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+23518@gmail.com"">maryannprivateoffice2014+23518@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+12410@gmail.com"">maryannprivateoffice2014+12410@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+19162@gmail.com"">maryannprivateoffice2014+19162@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+27453@gmail.com"">maryannprivateoffice2014+27453@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+28349@gmail.com"">maryannprivateoffice2014+28349@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+20427@gmail.com"">maryannprivateoffice2014+20427@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+29020@gmail.com"">maryannprivateoffice2014+29020@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+6491@gmail.com"">maryannprivateoffice2014+6491@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+17315@gmail.com"">maryannprivateoffice2014+17315@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+7273@gmail.com"">maryannprivateoffice2014+7273@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+4726@gmail.com"">maryannprivateoffice2014+4726@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+14707@gmail.com"">maryannprivateoffice2014+14707@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+27004@gmail.com"">maryannprivateoffice2014+27004@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+20943@gmail.com"">maryannprivateoffice2014+20943@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+22091@gmail.com"">maryannprivateoffice2014+22091@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+1631@gmail.com"">maryannprivateoffice2014+1631@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+14209@gmail.com"">maryannprivateoffice2014+14209@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+6872@gmail.com"">maryannprivateoffice2014+6872@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+28751@gmail.com"">maryannprivateoffice2014+28751@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+11090@gmail.com"">maryannprivateoffice2014+11090@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+7546@gmail.com"">maryannprivateoffice2014+7546@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+4721@gmail.com"">maryannprivateoffice2014+4721@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+20587@gmail.com"">maryannprivateoffice2014+20587@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+3282@gmail.com"">maryannprivateoffice2014+3282@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+26679@gmail.com"">maryannprivateoffice2014+26679@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+8987@gmail.com"">maryannprivateoffice2014+8987@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+5382@gmail.com"">maryannprivateoffice2014+5382@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+1407@gmail.com"">maryannprivateoffice2014+1407@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+5184@gmail.com"">maryannprivateoffice2014+5184@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+8977@gmail.com"">maryannprivateoffice2014+8977@gmail.com</a>
<a href=""mailto:maryannprivateoffice2014+15263@gmail.com"">maryannprivateoffice2014+15263@gmail.com</a>
<a href=""mailto:mrs.janetdifiore180@yahoo.com"">mrs.janetdifiore180@yahoo.com</a>
<a href=""mailto:infodeskhelpdebtsoffice@gmail.com"">infodeskhelpdebtsoffice@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+1213@gmail.com"">infodeskhelpdebtsoffice+1213@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+4562@gmail.com"">infodeskhelpdebtsoffice+4562@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+28242@gmail.com"">infodeskhelpdebtsoffice+28242@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+9894@gmail.com"">infodeskhelpdebtsoffice+9894@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+20397@gmail.com"">infodeskhelpdebtsoffice+20397@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+15533@gmail.com"">infodeskhelpdebtsoffice+15533@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+15425@gmail.com"">infodeskhelpdebtsoffice+15425@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+15228@gmail.com"">infodeskhelpdebtsoffice+15228@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+6535@gmail.com"">infodeskhelpdebtsoffice+6535@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+32366@gmail.com"">infodeskhelpdebtsoffice+32366@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+6808@gmail.com"">infodeskhelpdebtsoffice+6808@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+31131@gmail.com"">infodeskhelpdebtsoffice+31131@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+14067@gmail.com"">infodeskhelpdebtsoffice+14067@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+32734@gmail.com"">infodeskhelpdebtsoffice+32734@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+25568@gmail.com"">infodeskhelpdebtsoffice+25568@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+9109@gmail.com"">infodeskhelpdebtsoffice+9109@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+21790@gmail.com"">infodeskhelpdebtsoffice+21790@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+22759@gmail.com"">infodeskhelpdebtsoffice+22759@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+29363@gmail.com"">infodeskhelpdebtsoffice+29363@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+11362@gmail.com"">infodeskhelpdebtsoffice+11362@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+28142@gmail.com"">infodeskhelpdebtsoffice+28142@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+27351@gmail.com"">infodeskhelpdebtsoffice+27351@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+12084@gmail.com"">infodeskhelpdebtsoffice+12084@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+10503@gmail.com"">infodeskhelpdebtsoffice+10503@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+9506@gmail.com"">infodeskhelpdebtsoffice+9506@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+13534@gmail.com"">infodeskhelpdebtsoffice+13534@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+117@gmail.com"">infodeskhelpdebtsoffice+117@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+2572@gmail.com"">infodeskhelpdebtsoffice+2572@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+22780@gmail.com"">infodeskhelpdebtsoffice+22780@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+30679@gmail.com"">infodeskhelpdebtsoffice+30679@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+26301@gmail.com"">infodeskhelpdebtsoffice+26301@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+12444@gmail.com"">infodeskhelpdebtsoffice+12444@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+9520@gmail.com"">infodeskhelpdebtsoffice+9520@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+13432@gmail.com"">infodeskhelpdebtsoffice+13432@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+2028@gmail.com"">infodeskhelpdebtsoffice+2028@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+4275@gmail.com"">infodeskhelpdebtsoffice+4275@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+22145@gmail.com"">infodeskhelpdebtsoffice+22145@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+2155@gmail.com"">infodeskhelpdebtsoffice+2155@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+24455@gmail.com"">infodeskhelpdebtsoffice+24455@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+29926@gmail.com"">infodeskhelpdebtsoffice+29926@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+22307@gmail.com"">infodeskhelpdebtsoffice+22307@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+4355@gmail.com"">infodeskhelpdebtsoffice+4355@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+7180@gmail.com"">infodeskhelpdebtsoffice+7180@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+14535@gmail.com"">infodeskhelpdebtsoffice+14535@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+31856@gmail.com"">infodeskhelpdebtsoffice+31856@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+3928@gmail.com"">infodeskhelpdebtsoffice+3928@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+9397@gmail.com"">infodeskhelpdebtsoffice+9397@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+16696@gmail.com"">infodeskhelpdebtsoffice+16696@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+15675@gmail.com"">infodeskhelpdebtsoffice+15675@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+23847@gmail.com"">infodeskhelpdebtsoffice+23847@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+29673@gmail.com"">infodeskhelpdebtsoffice+29673@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+26494@gmail.com"">infodeskhelpdebtsoffice+26494@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+19205@gmail.com"">infodeskhelpdebtsoffice+19205@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+21996@gmail.com"">infodeskhelpdebtsoffice+21996@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+17571@gmail.com"">infodeskhelpdebtsoffice+17571@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+19278@gmail.com"">infodeskhelpdebtsoffice+19278@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+23054@gmail.com"">infodeskhelpdebtsoffice+23054@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+18862@gmail.com"">infodeskhelpdebtsoffice+18862@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+9593@gmail.com"">infodeskhelpdebtsoffice+9593@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+7585@gmail.com"">infodeskhelpdebtsoffice+7585@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+23090@gmail.com"">infodeskhelpdebtsoffice+23090@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+3256@gmail.com"">infodeskhelpdebtsoffice+3256@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+29825@gmail.com"">infodeskhelpdebtsoffice+29825@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+22259@gmail.com"">infodeskhelpdebtsoffice+22259@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+3725@gmail.com"">infodeskhelpdebtsoffice+3725@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+24784@gmail.com"">infodeskhelpdebtsoffice+24784@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+32222@gmail.com"">infodeskhelpdebtsoffice+32222@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+13809@gmail.com"">infodeskhelpdebtsoffice+13809@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+14419@gmail.com"">infodeskhelpdebtsoffice+14419@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+18864@gmail.com"">infodeskhelpdebtsoffice+18864@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+13180@gmail.com"">infodeskhelpdebtsoffice+13180@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+17649@gmail.com"">infodeskhelpdebtsoffice+17649@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+6087@gmail.com"">infodeskhelpdebtsoffice+6087@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+3374@gmail.com"">infodeskhelpdebtsoffice+3374@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+30992@gmail.com"">infodeskhelpdebtsoffice+30992@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+5713@gmail.com"">infodeskhelpdebtsoffice+5713@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+12352@gmail.com"">infodeskhelpdebtsoffice+12352@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+28438@gmail.com"">infodeskhelpdebtsoffice+28438@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+31238@gmail.com"">infodeskhelpdebtsoffice+31238@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+20829@gmail.com"">infodeskhelpdebtsoffice+20829@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+21255@gmail.com"">infodeskhelpdebtsoffice+21255@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+3152@gmail.com"">infodeskhelpdebtsoffice+3152@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+18612@gmail.com"">infodeskhelpdebtsoffice+18612@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+14179@gmail.com"">infodeskhelpdebtsoffice+14179@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+30295@gmail.com"">infodeskhelpdebtsoffice+30295@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+13057@gmail.com"">infodeskhelpdebtsoffice+13057@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+3766@gmail.com"">infodeskhelpdebtsoffice+3766@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+10822@gmail.com"">infodeskhelpdebtsoffice+10822@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+20376@gmail.com"">infodeskhelpdebtsoffice+20376@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+26674@gmail.com"">infodeskhelpdebtsoffice+26674@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+32360@gmail.com"">infodeskhelpdebtsoffice+32360@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+32543@gmail.com"">infodeskhelpdebtsoffice+32543@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+22972@gmail.com"">infodeskhelpdebtsoffice+22972@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+26632@gmail.com"">infodeskhelpdebtsoffice+26632@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+17389@gmail.com"">infodeskhelpdebtsoffice+17389@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+10407@gmail.com"">infodeskhelpdebtsoffice+10407@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+19594@gmail.com"">infodeskhelpdebtsoffice+19594@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+25542@gmail.com"">infodeskhelpdebtsoffice+25542@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+8056@gmail.com"">infodeskhelpdebtsoffice+8056@gmail.com</a>
<a href=""mailto:infodeskhelpdebtsoffice+23121@gmail.com"">infodeskhelpdebtsoffice+23121@gmail.com</a>
<a href=""mailto:info@CareConnectPSS.com"">info@CareConnectPSS.com</a>
<a href=""mailto:bhcommission8@gmail.com"">bhcommission8@gmail.com</a>
<a href=""mailto:bhcommission8+3914@gmail.com"">bhcommission8+3914@gmail.com</a>
<a href=""mailto:bhcommission8+26437@gmail.com"">bhcommission8+26437@gmail.com</a>
<a href=""mailto:bhcommission8+30622@gmail.com"">bhcommission8+30622@gmail.com</a>
<a href=""mailto:bhcommission8+22497@gmail.com"">bhcommission8+22497@gmail.com</a>
<a href=""mailto:bhcommission8+5029@gmail.com"">bhcommission8+5029@gmail.com</a>
<a href=""mailto:bhcommission8+16735@gmail.com"">bhcommission8+16735@gmail.com</a>
<a href=""mailto:bhcommission8+30071@gmail.com"">bhcommission8+30071@gmail.com</a>
<a href=""mailto:bhcommission8+11984@gmail.com"">bhcommission8+11984@gmail.com</a>
<a href=""mailto:bhcommission8+17823@gmail.com"">bhcommission8+17823@gmail.com</a>
<a href=""mailto:bhcommission8+22259@gmail.com"">bhcommission8+22259@gmail.com</a>
<a href=""mailto:bhcommission8+11874@gmail.com"">bhcommission8+11874@gmail.com</a>
<a href=""mailto:bhcommission8+4499@gmail.com"">bhcommission8+4499@gmail.com</a>
<a href=""mailto:bhcommission8+6485@gmail.com"">bhcommission8+6485@gmail.com</a>
<a href=""mailto:bhcommission8+19263@gmail.com"">bhcommission8+19263@gmail.com</a>
<a href=""mailto:bhcommission8+11080@gmail.com"">bhcommission8+11080@gmail.com</a>
<a href=""mailto:bhcommission8+14175@gmail.com"">bhcommission8+14175@gmail.com</a>
<a href=""mailto:bhcommission8+28113@gmail.com"">bhcommission8+28113@gmail.com</a>
<a href=""mailto:bhcommission8+16798@gmail.com"">bhcommission8+16798@gmail.com</a>
<a href=""mailto:bhcommission8+6222@gmail.com"">bhcommission8+6222@gmail.com</a>
<a href=""mailto:bhcommission8+23241@gmail.com"">bhcommission8+23241@gmail.com</a>
<a href=""mailto:bhcommission8+14595@gmail.com"">bhcommission8+14595@gmail.com</a>
<a href=""mailto:bhcommission8+12590@gmail.com"">bhcommission8+12590@gmail.com</a>
<a href=""mailto:bhcommission8+13936@gmail.com"">bhcommission8+13936@gmail.com</a>
<a href=""mailto:bhcommission8+29006@gmail.com"">bhcommission8+29006@gmail.com</a>
<a href=""mailto:bhcommission8+11279@gmail.com"">bhcommission8+11279@gmail.com</a>
<a href=""mailto:bhcommission8+17854@gmail.com"">bhcommission8+17854@gmail.com</a>
<a href=""mailto:bhcommission8+8067@gmail.com"">bhcommission8+8067@gmail.com</a>
<a href=""mailto:bhcommission8+29527@gmail.com"">bhcommission8+29527@gmail.com</a>
<a href=""mailto:bhcommission8+25450@gmail.com"">bhcommission8+25450@gmail.com</a>
<a href=""mailto:bhcommission8+11410@gmail.com"">bhcommission8+11410@gmail.com</a>
<a href=""mailto:bhcommission8+26350@gmail.com"">bhcommission8+26350@gmail.com</a>
<a href=""mailto:bhcommission8+26043@gmail.com"">bhcommission8+26043@gmail.com</a>
<a href=""mailto:bhcommission8+17586@gmail.com"">bhcommission8+17586@gmail.com</a>
<a href=""mailto:bhcommission8+9674@gmail.com"">bhcommission8+9674@gmail.com</a>
<a href=""mailto:bhcommission8+14373@gmail.com"">bhcommission8+14373@gmail.com</a>
<a href=""mailto:bhcommission8+8459@gmail.com"">bhcommission8+8459@gmail.com</a>
<a href=""mailto:bhcommission8+23455@gmail.com"">bhcommission8+23455@gmail.com</a>
<a href=""mailto:bhcommission8+28598@gmail.com"">bhcommission8+28598@gmail.com</a>
<a href=""mailto:bhcommission8+5221@gmail.com"">bhcommission8+5221@gmail.com</a>
<a href=""mailto:bhcommission8+9399@gmail.com"">bhcommission8+9399@gmail.com</a>
<a href=""mailto:bhcommission8+8561@gmail.com"">bhcommission8+8561@gmail.com</a>
<a href=""mailto:bhcommission8+11901@gmail.com"">bhcommission8+11901@gmail.com</a>
<a href=""mailto:bhcommission8+19411@gmail.com"">bhcommission8+19411@gmail.com</a>
<a href=""mailto:bhcommission8+31851@gmail.com"">bhcommission8+31851@gmail.com</a>
<a href=""mailto:bhcommission8+21696@gmail.com"">bhcommission8+21696@gmail.com</a>
<a href=""mailto:bhcommission8+10342@gmail.com"">bhcommission8+10342@gmail.com</a>
<a href=""mailto:bhcommission8+11300@gmail.com"">bhcommission8+11300@gmail.com</a>
<a href=""mailto:bhcommission8+5094@gmail.com"">bhcommission8+5094@gmail.com</a>
<a href=""mailto:bhcommission8+18828@gmail.com"">bhcommission8+18828@gmail.com</a>
<a href=""mailto:bhcommission8+18602@gmail.com"">bhcommission8+18602@gmail.com</a>
<a href=""mailto:bhcommission8+14553@gmail.com"">bhcommission8+14553@gmail.com</a>
<a href=""mailto:bhcommission8+27465@gmail.com"">bhcommission8+27465@gmail.com</a>
<a href=""mailto:bhcommission8+23507@gmail.com"">bhcommission8+23507@gmail.com</a>
<a href=""mailto:bhcommission8+567@gmail.com"">bhcommission8+567@gmail.com</a>
<a href=""mailto:bhcommission8+3781@gmail.com"">bhcommission8+3781@gmail.com</a>
<a href=""mailto:bhcommission8+1796@gmail.com"">bhcommission8+1796@gmail.com</a>
<a href=""mailto:bhcommission8+13563@gmail.com"">bhcommission8+13563@gmail.com</a>
<a href=""mailto:bhcommission8+22659@gmail.com"">bhcommission8+22659@gmail.com</a>
<a href=""mailto:bhcommission8+12582@gmail.com"">bhcommission8+12582@gmail.com</a>
<a href=""mailto:bhcommission8+12980@gmail.com"">bhcommission8+12980@gmail.com</a>
<a href=""mailto:bhcommission8+29003@gmail.com"">bhcommission8+29003@gmail.com</a>
<a href=""mailto:bhcommission8+6859@gmail.com"">bhcommission8+6859@gmail.com</a>
<a href=""mailto:bhcommission8+4721@gmail.com"">bhcommission8+4721@gmail.com</a>
<a href=""mailto:bhcommission8+1808@gmail.com"">bhcommission8+1808@gmail.com</a>
<a href=""mailto:bhcommission8+7665@gmail.com"">bhcommission8+7665@gmail.com</a>
<a href=""mailto:bhcommission8+1966@gmail.com"">bhcommission8+1966@gmail.com</a>
<a href=""mailto:bhcommission8+11213@gmail.com"">bhcommission8+11213@gmail.com</a>
<a href=""mailto:bhcommission8+18778@gmail.com"">bhcommission8+18778@gmail.com</a>
<a href=""mailto:bhcommission8+10949@gmail.com"">bhcommission8+10949@gmail.com</a>
<a href=""mailto:bhcommission8+24597@gmail.com"">bhcommission8+24597@gmail.com</a>
<a href=""mailto:bhcommission8+17747@gmail.com"">bhcommission8+17747@gmail.com</a>
<a href=""mailto:bhcommission8+11834@gmail.com"">bhcommission8+11834@gmail.com</a>
<a href=""mailto:bhcommission8+22198@gmail.com"">bhcommission8+22198@gmail.com</a>
<a href=""mailto:bhcommission8+19058@gmail.com"">bhcommission8+19058@gmail.com</a>
<a href=""mailto:bhcommission8+5393@gmail.com"">bhcommission8+5393@gmail.com</a>
<a href=""mailto:bhcommission8+13617@gmail.com"">bhcommission8+13617@gmail.com</a>
<a href=""mailto:bhcommission8+15483@gmail.com"">bhcommission8+15483@gmail.com</a>
<a href=""mailto:bhcommission8+1937@gmail.com"">bhcommission8+1937@gmail.com</a>
<a href=""mailto:bhcommission8+25739@gmail.com"">bhcommission8+25739@gmail.com</a>
<a href=""mailto:bhcommission8+32153@gmail.com"">bhcommission8+32153@gmail.com</a>
<a href=""mailto:bhcommission8+11537@gmail.com"">bhcommission8+11537@gmail.com</a>
<a href=""mailto:bhcommission8+31409@gmail.com"">bhcommission8+31409@gmail.com</a>
<a href=""mailto:bhcommission8+30632@gmail.com"">bhcommission8+30632@gmail.com</a>
<a href=""mailto:bhcommission8+18311@gmail.com"">bhcommission8+18311@gmail.com</a>
<a href=""mailto:bhcommission8+4509@gmail.com"">bhcommission8+4509@gmail.com</a>
<a href=""mailto:bhcommission8+29283@gmail.com"">bhcommission8+29283@gmail.com</a>
<a href=""mailto:bhcommission8+32654@gmail.com"">bhcommission8+32654@gmail.com</a>
<a href=""mailto:bhcommission8+22281@gmail.com"">bhcommission8+22281@gmail.com</a>
<a href=""mailto:bhcommission8+10877@gmail.com"">bhcommission8+10877@gmail.com</a>
<a href=""mailto:bhcommission8+28158@gmail.com"">bhcommission8+28158@gmail.com</a>
<a href=""mailto:bhcommission8+25203@gmail.com"">bhcommission8+25203@gmail.com</a>
<a href=""mailto:bhcommission8+4264@gmail.com"">bhcommission8+4264@gmail.com</a>
<a href=""mailto:bhcommission8+12065@gmail.com"">bhcommission8+12065@gmail.com</a>
<a href=""mailto:bhcommission8+5210@gmail.com"">bhcommission8+5210@gmail.com</a>
<a href=""mailto:bhcommission8+3108@gmail.com"">bhcommission8+3108@gmail.com</a>
<a href=""mailto:bhcommission8+27497@gmail.com"">bhcommission8+27497@gmail.com</a>
<a href=""mailto:bhcommission8+16785@gmail.com"">bhcommission8+16785@gmail.com</a>
<a href=""mailto:bhcommission8+25659@gmail.com"">bhcommission8+25659@gmail.com</a>
<a href=""mailto:bhcommission8+9382@gmail.com"">bhcommission8+9382@gmail.com</a>
<a href=""mailto:bhcommission8+21343@gmail.com"">bhcommission8+21343@gmail.com</a>
<a href=""mailto:johndavisjohnson134@gmail.com"">johndavisjohnson134@gmail.com</a>
<a href=""mailto:johndavisjohnson134+20209@gmail.com"">johndavisjohnson134+20209@gmail.com</a>
<a href=""mailto:johndavisjohnson134+31311@gmail.com"">johndavisjohnson134+31311@gmail.com</a>
<a href=""mailto:johndavisjohnson134+1431@gmail.com"">johndavisjohnson134+1431@gmail.com</a>
<a href=""mailto:johndavisjohnson134+6219@gmail.com"">johndavisjohnson134+6219@gmail.com</a>
<a href=""mailto:johndavisjohnson134+9676@gmail.com"">johndavisjohnson134+9676@gmail.com</a>
<a href=""mailto:johndavisjohnson134+25169@gmail.com"">johndavisjohnson134+25169@gmail.com</a>
<a href=""mailto:johndavisjohnson134+14436@gmail.com"">johndavisjohnson134+14436@gmail.com</a>
<a href=""mailto:johndavisjohnson134+19539@gmail.com"">johndavisjohnson134+19539@gmail.com</a>
<a href=""mailto:johndavisjohnson134+3076@gmail.com"">johndavisjohnson134+3076@gmail.com</a>
<a href=""mailto:johndavisjohnson134+6720@gmail.com"">johndavisjohnson134+6720@gmail.com</a>
<a href=""mailto:johndavisjohnson134+1290@gmail.com"">johndavisjohnson134+1290@gmail.com</a>
<a href=""mailto:johndavisjohnson134+9971@gmail.com"">johndavisjohnson134+9971@gmail.com</a>
<a href=""mailto:johndavisjohnson134+17381@gmail.com"">johndavisjohnson134+17381@gmail.com</a>
<a href=""mailto:johndavisjohnson134+32007@gmail.com"">johndavisjohnson134+32007@gmail.com</a>
<a href=""mailto:johndavisjohnson134+27025@gmail.com"">johndavisjohnson134+27025@gmail.com</a>
<a href=""mailto:johndavisjohnson134+32133@gmail.com"">johndavisjohnson134+32133@gmail.com</a>
<a href=""mailto:johndavisjohnson134+13129@gmail.com"">johndavisjohnson134+13129@gmail.com</a>
<a href=""mailto:johndavisjohnson134+5775@gmail.com"">johndavisjohnson134+5775@gmail.com</a>
<a href=""mailto:johndavisjohnson134+23286@gmail.com"">johndavisjohnson134+23286@gmail.com</a>
<a href=""mailto:johndavisjohnson134+2516@gmail.com"">johndavisjohnson134+2516@gmail.com</a>
<a href=""mailto:johndavisjohnson134+4323@gmail.com"">johndavisjohnson134+4323@gmail.com</a>
<a href=""mailto:johndavisjohnson134+23624@gmail.com"">johndavisjohnson134+23624@gmail.com</a>
<a href=""mailto:johndavisjohnson134+20331@gmail.com"">johndavisjohnson134+20331@gmail.com</a>
<a href=""mailto:johndavisjohnson134+29463@gmail.com"">johndavisjohnson134+29463@gmail.com</a>
<a href=""mailto:johndavisjohnson134+23420@gmail.com"">johndavisjohnson134+23420@gmail.com</a>
<a href=""mailto:johndavisjohnson134+4803@gmail.com"">johndavisjohnson134+4803@gmail.com</a>
<a href=""mailto:johndavisjohnson134+1138@gmail.com"">johndavisjohnson134+1138@gmail.com</a>
<a href=""mailto:johndavisjohnson134+23610@gmail.com"">johndavisjohnson134+23610@gmail.com</a>
<a href=""mailto:johndavisjohnson134+16547@gmail.com"">johndavisjohnson134+16547@gmail.com</a>
<a href=""mailto:johndavisjohnson134+1571@gmail.com"">johndavisjohnson134+1571@gmail.com</a>
<a href=""mailto:johndavisjohnson134+17510@gmail.com"">johndavisjohnson134+17510@gmail.com</a>
<a href=""mailto:johndavisjohnson134+14193@gmail.com"">johndavisjohnson134+14193@gmail.com</a>
<a href=""mailto:johndavisjohnson134+10474@gmail.com"">johndavisjohnson134+10474@gmail.com</a>
<a href=""mailto:johndavisjohnson134+1787@gmail.com"">johndavisjohnson134+1787@gmail.com</a>
<a href=""mailto:johndavisjohnson134+16888@gmail.com"">johndavisjohnson134+16888@gmail.com</a>
<a href=""mailto:johndavisjohnson134+20161@gmail.com"">johndavisjohnson134+20161@gmail.com</a>
<a href=""mailto:johndavisjohnson134+6421@gmail.com"">johndavisjohnson134+6421@gmail.com</a>
<a href=""mailto:johndavisjohnson134+26060@gmail.com"">johndavisjohnson134+26060@gmail.com</a>
<a href=""mailto:johndavisjohnson134+13418@gmail.com"">johndavisjohnson134+13418@gmail.com</a>
<a href=""mailto:johndavisjohnson134+5993@gmail.com"">johndavisjohnson134+5993@gmail.com</a>
<a href=""mailto:johndavisjohnson134+22214@gmail.com"">johndavisjohnson134+22214@gmail.com</a>
<a href=""mailto:johndavisjohnson134+22958@gmail.com"">johndavisjohnson134+22958@gmail.com</a>
<a href=""mailto:johndavisjohnson134+20396@gmail.com"">johndavisjohnson134+20396@gmail.com</a>
<a href=""mailto:johndavisjohnson134+13018@gmail.com"">johndavisjohnson134+13018@gmail.com</a>
<a href=""mailto:johndavisjohnson134+32467@gmail.com"">johndavisjohnson134+32467@gmail.com</a>
<a href=""mailto:johndavisjohnson134+22904@gmail.com"">johndavisjohnson134+22904@gmail.com</a>
<a href=""mailto:johndavisjohnson134+3464@gmail.com"">johndavisjohnson134+3464@gmail.com</a>
<a href=""mailto:johndavisjohnson134+7284@gmail.com"">johndavisjohnson134+7284@gmail.com</a>
<a href=""mailto:johndavisjohnson134+12922@gmail.com"">johndavisjohnson134+12922@gmail.com</a>
<a href=""mailto:johndavisjohnson134+12416@gmail.com"">johndavisjohnson134+12416@gmail.com</a>
<a href=""mailto:johndavisjohnson134+10851@gmail.com"">johndavisjohnson134+10851@gmail.com</a>
<a href=""mailto:johndavisjohnson134+11920@gmail.com"">johndavisjohnson134+11920@gmail.com</a>
<a href=""mailto:johndavisjohnson134+3025@gmail.com"">johndavisjohnson134+3025@gmail.com</a>
<a href=""mailto:johndavisjohnson134+14992@gmail.com"">johndavisjohnson134+14992@gmail.com</a>
<a href=""mailto:johndavisjohnson134+30233@gmail.com"">johndavisjohnson134+30233@gmail.com</a>
<a href=""mailto:johndavisjohnson134+25791@gmail.com"">johndavisjohnson134+25791@gmail.com</a>
<a href=""mailto:johndavisjohnson134+21217@gmail.com"">johndavisjohnson134+21217@gmail.com</a>
<a href=""mailto:johndavisjohnson134+23995@gmail.com"">johndavisjohnson134+23995@gmail.com</a>
<a href=""mailto:johndavisjohnson134+30806@gmail.com"">johndavisjohnson134+30806@gmail.com</a>
<a href=""mailto:johndavisjohnson134+19908@gmail.com"">johndavisjohnson134+19908@gmail.com</a>
<a href=""mailto:johndavisjohnson134+21919@gmail.com"">johndavisjohnson134+21919@gmail.com</a>
<a href=""mailto:johndavisjohnson134+18922@gmail.com"">johndavisjohnson134+18922@gmail.com</a>
<a href=""mailto:johndavisjohnson134+21240@gmail.com"">johndavisjohnson134+21240@gmail.com</a>
<a href=""mailto:johndavisjohnson134+5974@gmail.com"">johndavisjohnson134+5974@gmail.com</a>
<a href=""mailto:johndavisjohnson134+14699@gmail.com"">johndavisjohnson134+14699@gmail.com</a>
<a href=""mailto:johndavisjohnson134+4021@gmail.com"">johndavisjohnson134+4021@gmail.com</a>
<a href=""mailto:johndavisjohnson134+4393@gmail.com"">johndavisjohnson134+4393@gmail.com</a>
<a href=""mailto:johndavisjohnson134+15958@gmail.com"">johndavisjohnson134+15958@gmail.com</a>
<a href=""mailto:johndavisjohnson134+11755@gmail.com"">johndavisjohnson134+11755@gmail.com</a>
<a href=""mailto:johndavisjohnson134+5625@gmail.com"">johndavisjohnson134+5625@gmail.com</a>
<a href=""mailto:johndavisjohnson134+4746@gmail.com"">johndavisjohnson134+4746@gmail.com</a>
<a href=""mailto:johndavisjohnson134+2005@gmail.com"">johndavisjohnson134+2005@gmail.com</a>
<a href=""mailto:johndavisjohnson134+4517@gmail.com"">johndavisjohnson134+4517@gmail.com</a>
<a href=""mailto:johndavisjohnson134+25038@gmail.com"">johndavisjohnson134+25038@gmail.com</a>
<a href=""mailto:johndavisjohnson134+4955@gmail.com"">johndavisjohnson134+4955@gmail.com</a>
<a href=""mailto:johndavisjohnson134+9336@gmail.com"">johndavisjohnson134+9336@gmail.com</a>
<a href=""mailto:johndavisjohnson134+2664@gmail.com"">johndavisjohnson134+2664@gmail.com</a>
<a href=""mailto:johndavisjohnson134+18291@gmail.com"">johndavisjohnson134+18291@gmail.com</a>
<a href=""mailto:johndavisjohnson134+21946@gmail.com"">johndavisjohnson134+21946@gmail.com</a>
<a href=""mailto:johndavisjohnson134+8204@gmail.com"">johndavisjohnson134+8204@gmail.com</a>
<a href=""mailto:johndavisjohnson134+5662@gmail.com"">johndavisjohnson134+5662@gmail.com</a>
<a href=""mailto:johndavisjohnson134+23900@gmail.com"">johndavisjohnson134+23900@gmail.com</a>
<a href=""mailto:johndavisjohnson134+23302@gmail.com"">johndavisjohnson134+23302@gmail.com</a>
<a href=""mailto:johndavisjohnson134+1165@gmail.com"">johndavisjohnson134+1165@gmail.com</a>
<a href=""mailto:johndavisjohnson134+10008@gmail.com"">johndavisjohnson134+10008@gmail.com</a>
<a href=""mailto:johndavisjohnson134+14642@gmail.com"">johndavisjohnson134+14642@gmail.com</a>
<a href=""mailto:johndavisjohnson134+1771@gmail.com"">johndavisjohnson134+1771@gmail.com</a>
<a href=""mailto:johndavisjohnson134+27851@gmail.com"">johndavisjohnson134+27851@gmail.com</a>
<a href=""mailto:johndavisjohnson134+30370@gmail.com"">johndavisjohnson134+30370@gmail.com</a>
<a href=""mailto:johndavisjohnson134+12998@gmail.com"">johndavisjohnson134+12998@gmail.com</a>
<a href=""mailto:johndavisjohnson134+15358@gmail.com"">johndavisjohnson134+15358@gmail.com</a>
<a href=""mailto:johndavisjohnson134+14163@gmail.com"">johndavisjohnson134+14163@gmail.com</a>
<a href=""mailto:johndavisjohnson134+17399@gmail.com"">johndavisjohnson134+17399@gmail.com</a>
<a href=""mailto:johndavisjohnson134+29234@gmail.com"">johndavisjohnson134+29234@gmail.com</a>
<a href=""mailto:johndavisjohnson134+1150@gmail.com"">johndavisjohnson134+1150@gmail.com</a>
<a href=""mailto:johndavisjohnson134+18517@gmail.com"">johndavisjohnson134+18517@gmail.com</a>
<a href=""mailto:johndavisjohnson134+475@gmail.com"">johndavisjohnson134+475@gmail.com</a>
<a href=""mailto:johndavisjohnson134+23819@gmail.com"">johndavisjohnson134+23819@gmail.com</a>
<a href=""mailto:johndavisjohnson134+1956@gmail.com"">johndavisjohnson134+1956@gmail.com</a>
<a href=""mailto:johndavisjohnson134+18129@gmail.com"">johndavisjohnson134+18129@gmail.com</a>
<a href=""mailto:mr.howardbruce88@gmail.com"">mr.howardbruce88@gmail.com</a>
<a href=""mailto:mr.howardbruce88+7321@gmail.com"">mr.howardbruce88+7321@gmail.com</a>
<a href=""mailto:mr.howardbruce88+23505@gmail.com"">mr.howardbruce88+23505@gmail.com</a>
<a href=""mailto:mr.howardbruce88+6952@gmail.com"">mr.howardbruce88+6952@gmail.com</a>
<a href=""mailto:mr.howardbruce88+27978@gmail.com"">mr.howardbruce88+27978@gmail.com</a>
<a href=""mailto:mr.howardbruce88+23603@gmail.com"">mr.howardbruce88+23603@gmail.com</a>
<a href=""mailto:mr.howardbruce88+14677@gmail.com"">mr.howardbruce88+14677@gmail.com</a>
<a href=""mailto:mr.howardbruce88+5541@gmail.com"">mr.howardbruce88+5541@gmail.com</a>
<a href=""mailto:mr.howardbruce88+18719@gmail.com"">mr.howardbruce88+18719@gmail.com</a>
<a href=""mailto:mr.howardbruce88+20167@gmail.com"">mr.howardbruce88+20167@gmail.com</a>
<a href=""mailto:mr.howardbruce88+31799@gmail.com"">mr.howardbruce88+31799@gmail.com</a>
<a href=""mailto:mr.howardbruce88+30439@gmail.com"">mr.howardbruce88+30439@gmail.com</a>
<a href=""mailto:mr.howardbruce88+20899@gmail.com"">mr.howardbruce88+20899@gmail.com</a>
<a href=""mailto:mr.howardbruce88+4005@gmail.com"">mr.howardbruce88+4005@gmail.com</a>
<a href=""mailto:mr.howardbruce88+30113@gmail.com"">mr.howardbruce88+30113@gmail.com</a>
<a href=""mailto:mr.howardbruce88+16422@gmail.com"">mr.howardbruce88+16422@gmail.com</a>
<a href=""mailto:mr.howardbruce88+17844@gmail.com"">mr.howardbruce88+17844@gmail.com</a>
<a href=""mailto:mr.howardbruce88+19838@gmail.com"">mr.howardbruce88+19838@gmail.com</a>
<a href=""mailto:mr.howardbruce88+7387@gmail.com"">mr.howardbruce88+7387@gmail.com</a>
<a href=""mailto:mr.howardbruce88+20315@gmail.com"">mr.howardbruce88+20315@gmail.com</a>
<a href=""mailto:mr.howardbruce88+7848@gmail.com"">mr.howardbruce88+7848@gmail.com</a>
<a href=""mailto:mr.howardbruce88+31441@gmail.com"">mr.howardbruce88+31441@gmail.com</a>
<a href=""mailto:mr.howardbruce88+25761@gmail.com"">mr.howardbruce88+25761@gmail.com</a>
<a href=""mailto:mr.howardbruce88+24614@gmail.com"">mr.howardbruce88+24614@gmail.com</a>
<a href=""mailto:mr.howardbruce88+29985@gmail.com"">mr.howardbruce88+29985@gmail.com</a>
<a href=""mailto:mr.howardbruce88+12344@gmail.com"">mr.howardbruce88+12344@gmail.com</a>
<a href=""mailto:mr.howardbruce88+362@gmail.com"">mr.howardbruce88+362@gmail.com</a>
<a href=""mailto:mr.howardbruce88+26008@gmail.com"">mr.howardbruce88+26008@gmail.com</a>
<a href=""mailto:mr.howardbruce88+17185@gmail.com"">mr.howardbruce88+17185@gmail.com</a>
<a href=""mailto:mr.howardbruce88+29601@gmail.com"">mr.howardbruce88+29601@gmail.com</a>
<a href=""mailto:mr.howardbruce88+26576@gmail.com"">mr.howardbruce88+26576@gmail.com</a>
<a href=""mailto:mr.howardbruce88+20183@gmail.com"">mr.howardbruce88+20183@gmail.com</a>
<a href=""mailto:mr.howardbruce88+1149@gmail.com"">mr.howardbruce88+1149@gmail.com</a>
<a href=""mailto:mr.howardbruce88+11099@gmail.com"">mr.howardbruce88+11099@gmail.com</a>
<a href=""mailto:mr.howardbruce88+24916@gmail.com"">mr.howardbruce88+24916@gmail.com</a>
<a href=""mailto:mr.howardbruce88+768@gmail.com"">mr.howardbruce88+768@gmail.com</a>
<a href=""mailto:mr.howardbruce88+30679@gmail.com"">mr.howardbruce88+30679@gmail.com</a>
<a href=""mailto:mr.howardbruce88+1904@gmail.com"">mr.howardbruce88+1904@gmail.com</a>
<a href=""mailto:mr.howardbruce88+27458@gmail.com"">mr.howardbruce88+27458@gmail.com</a>
<a href=""mailto:mr.howardbruce88+11915@gmail.com"">mr.howardbruce88+11915@gmail.com</a>
<a href=""mailto:mr.howardbruce88+14430@gmail.com"">mr.howardbruce88+14430@gmail.com</a>
<a href=""mailto:mr.howardbruce88+24225@gmail.com"">mr.howardbruce88+24225@gmail.com</a>
<a href=""mailto:mr.howardbruce88+11613@gmail.com"">mr.howardbruce88+11613@gmail.com</a>
<a href=""mailto:mr.howardbruce88+25080@gmail.com"">mr.howardbruce88+25080@gmail.com</a>
<a href=""mailto:mr.howardbruce88+8967@gmail.com"">mr.howardbruce88+8967@gmail.com</a>
<a href=""mailto:mr.howardbruce88+14994@gmail.com"">mr.howardbruce88+14994@gmail.com</a>
<a href=""mailto:mr.howardbruce88+30713@gmail.com"">mr.howardbruce88+30713@gmail.com</a>
<a href=""mailto:mr.howardbruce88+10743@gmail.com"">mr.howardbruce88+10743@gmail.com</a>
<a href=""mailto:mr.howardbruce88+20117@gmail.com"">mr.howardbruce88+20117@gmail.com</a>
<a href=""mailto:mr.howardbruce88+24444@gmail.com"">mr.howardbruce88+24444@gmail.com</a>
<a href=""mailto:mr.howardbruce88+26219@gmail.com"">mr.howardbruce88+26219@gmail.com</a>
<a href=""mailto:mr.howardbruce88+4064@gmail.com"">mr.howardbruce88+4064@gmail.com</a>
<a href=""mailto:mr.howardbruce88+15338@gmail.com"">mr.howardbruce88+15338@gmail.com</a>
<a href=""mailto:mr.howardbruce88+25877@gmail.com"">mr.howardbruce88+25877@gmail.com</a>
<a href=""mailto:mr.howardbruce88+1901@gmail.com"">mr.howardbruce88+1901@gmail.com</a>
<a href=""mailto:mr.howardbruce88+9821@gmail.com"">mr.howardbruce88+9821@gmail.com</a>
<a href=""mailto:mr.howardbruce88+5357@gmail.com"">mr.howardbruce88+5357@gmail.com</a>
<a href=""mailto:mr.howardbruce88+22408@gmail.com"">mr.howardbruce88+22408@gmail.com</a>
<a href=""mailto:mr.howardbruce88+1271@gmail.com"">mr.howardbruce88+1271@gmail.com</a>
<a href=""mailto:mr.howardbruce88+24034@gmail.com"">mr.howardbruce88+24034@gmail.com</a>
<a href=""mailto:mr.howardbruce88+9330@gmail.com"">mr.howardbruce88+9330@gmail.com</a>
<a href=""mailto:mr.howardbruce88+8213@gmail.com"">mr.howardbruce88+8213@gmail.com</a>
<a href=""mailto:mr.howardbruce88+5349@gmail.com"">mr.howardbruce88+5349@gmail.com</a>
<a href=""mailto:mr.howardbruce88+31124@gmail.com"">mr.howardbruce88+31124@gmail.com</a>
<a href=""mailto:mr.howardbruce88+31549@gmail.com"">mr.howardbruce88+31549@gmail.com</a>
<a href=""mailto:mr.howardbruce88+22521@gmail.com"">mr.howardbruce88+22521@gmail.com</a>
<a href=""mailto:mr.howardbruce88+11253@gmail.com"">mr.howardbruce88+11253@gmail.com</a>
<a href=""mailto:mr.howardbruce88+25718@gmail.com"">mr.howardbruce88+25718@gmail.com</a>
<a href=""mailto:mr.howardbruce88+24040@gmail.com"">mr.howardbruce88+24040@gmail.com</a>
<a href=""mailto:mr.howardbruce88+6027@gmail.com"">mr.howardbruce88+6027@gmail.com</a>
<a href=""mailto:mr.howardbruce88+27922@gmail.com"">mr.howardbruce88+27922@gmail.com</a>
<a href=""mailto:mr.howardbruce88+29985@gmail.com"">mr.howardbruce88+29985@gmail.com</a>
<a href=""mailto:mr.howardbruce88+27151@gmail.com"">mr.howardbruce88+27151@gmail.com</a>
<a href=""mailto:mr.howardbruce88+11691@gmail.com"">mr.howardbruce88+11691@gmail.com</a>
<a href=""mailto:mr.howardbruce88+1830@gmail.com"">mr.howardbruce88+1830@gmail.com</a>
<a href=""mailto:mr.howardbruce88+23478@gmail.com"">mr.howardbruce88+23478@gmail.com</a>
<a href=""mailto:mr.howardbruce88+28206@gmail.com"">mr.howardbruce88+28206@gmail.com</a>
<a href=""mailto:mr.howardbruce88+20297@gmail.com"">mr.howardbruce88+20297@gmail.com</a>
<a href=""mailto:mr.howardbruce88+18530@gmail.com"">mr.howardbruce88+18530@gmail.com</a>
<a href=""mailto:mr.howardbruce88+30584@gmail.com"">mr.howardbruce88+30584@gmail.com</a>
<a href=""mailto:mr.howardbruce88+22729@gmail.com"">mr.howardbruce88+22729@gmail.com</a>
<a href=""mailto:mr.howardbruce88+21353@gmail.com"">mr.howardbruce88+21353@gmail.com</a>
<a href=""mailto:mr.howardbruce88+8893@gmail.com"">mr.howardbruce88+8893@gmail.com</a>
<a href=""mailto:mr.howardbruce88+19554@gmail.com"">mr.howardbruce88+19554@gmail.com</a>
<a href=""mailto:mr.howardbruce88+31451@gmail.com"">mr.howardbruce88+31451@gmail.com</a>
<a href=""mailto:mr.howardbruce88+29908@gmail.com"">mr.howardbruce88+29908@gmail.com</a>
<a href=""mailto:mr.howardbruce88+16005@gmail.com"">mr.howardbruce88+16005@gmail.com</a>
<a href=""mailto:mr.howardbruce88+24806@gmail.com"">mr.howardbruce88+24806@gmail.com</a>
<a href=""mailto:mr.howardbruce88+13288@gmail.com"">mr.howardbruce88+13288@gmail.com</a>
<a href=""mailto:mr.howardbruce88+6350@gmail.com"">mr.howardbruce88+6350@gmail.com</a>
<a href=""mailto:mr.howardbruce88+29691@gmail.com"">mr.howardbruce88+29691@gmail.com</a>
<a href=""mailto:mr.howardbruce88+19821@gmail.com"">mr.howardbruce88+19821@gmail.com</a>
<a href=""mailto:mr.howardbruce88+1546@gmail.com"">mr.howardbruce88+1546@gmail.com</a>
<a href=""mailto:mr.howardbruce88+12087@gmail.com"">mr.howardbruce88+12087@gmail.com</a>
<a href=""mailto:mr.howardbruce88+8226@gmail.com"">mr.howardbruce88+8226@gmail.com</a>
<a href=""mailto:mr.howardbruce88+25898@gmail.com"">mr.howardbruce88+25898@gmail.com</a>
<a href=""mailto:mr.howardbruce88+24159@gmail.com"">mr.howardbruce88+24159@gmail.com</a>
<a href=""mailto:mr.howardbruce88+20299@gmail.com"">mr.howardbruce88+20299@gmail.com</a>
<a href=""mailto:mr.howardbruce88+2061@gmail.com"">mr.howardbruce88+2061@gmail.com</a>
<a href=""mailto:mr.howardbruce88+5540@gmail.com"">mr.howardbruce88+5540@gmail.com</a>
<a href=""mailto:mr.howardbruce88+8098@gmail.com"">mr.howardbruce88+8098@gmail.com</a>
<a href=""mailto:bankof0009@googlemail.com"">bankof0009@googlemail.com</a>
<a href=""mailto:bankof0009+30003@googlemail.com"">bankof0009+30003@googlemail.com</a>
<a href=""mailto:bankof0009+6640@googlemail.com"">bankof0009+6640@googlemail.com</a>
<a href=""mailto:bankof0009+15207@googlemail.com"">bankof0009+15207@googlemail.com</a>
<a href=""mailto:bankof0009+17324@googlemail.com"">bankof0009+17324@googlemail.com</a>
<a href=""mailto:bankof0009+28607@googlemail.com"">bankof0009+28607@googlemail.com</a>
<a href=""mailto:bankof0009+27737@googlemail.com"">bankof0009+27737@googlemail.com</a>
<a href=""mailto:bankof0009+24771@googlemail.com"">bankof0009+24771@googlemail.com</a>
<a href=""mailto:bankof0009+18850@googlemail.com"">bankof0009+18850@googlemail.com</a>
<a href=""mailto:bankof0009+4078@googlemail.com"">bankof0009+4078@googlemail.com</a>
<a href=""mailto:bankof0009+10968@googlemail.com"">bankof0009+10968@googlemail.com</a>
<a href=""mailto:bankof0009+11913@googlemail.com"">bankof0009+11913@googlemail.com</a>
<a href=""mailto:bankof0009+4779@googlemail.com"">bankof0009+4779@googlemail.com</a>
<a href=""mailto:bankof0009+8316@googlemail.com"">bankof0009+8316@googlemail.com</a>
<a href=""mailto:bankof0009+25@googlemail.com"">bankof0009+25@googlemail.com</a>
<a href=""mailto:bankof0009+15412@googlemail.com"">bankof0009+15412@googlemail.com</a>
<a href=""mailto:bankof0009+9834@googlemail.com"">bankof0009+9834@googlemail.com</a>
<a href=""mailto:bankof0009+3019@googlemail.com"">bankof0009+3019@googlemail.com</a>
<a href=""mailto:bankof0009+19586@googlemail.com"">bankof0009+19586@googlemail.com</a>
<a href=""mailto:bankof0009+12845@googlemail.com"">bankof0009+12845@googlemail.com</a>
<a href=""mailto:bankof0009+9520@googlemail.com"">bankof0009+9520@googlemail.com</a>
<a href=""mailto:bankof0009+22736@googlemail.com"">bankof0009+22736@googlemail.com</a>
<a href=""mailto:bankof0009+19825@googlemail.com"">bankof0009+19825@googlemail.com</a>
<a href=""mailto:bankof0009+31123@googlemail.com"">bankof0009+31123@googlemail.com</a>
<a href=""mailto:bankof0009+3666@googlemail.com"">bankof0009+3666@googlemail.com</a>
<a href=""mailto:bankof0009+2337@googlemail.com"">bankof0009+2337@googlemail.com</a>
<a href=""mailto:bankof0009+9587@googlemail.com"">bankof0009+9587@googlemail.com</a>
<a href=""mailto:bankof0009+6794@googlemail.com"">bankof0009+6794@googlemail.com</a>
<a href=""mailto:bankof0009+9772@googlemail.com"">bankof0009+9772@googlemail.com</a>
<a href=""mailto:bankof0009+20826@googlemail.com"">bankof0009+20826@googlemail.com</a>
<a href=""mailto:bankof0009+3964@googlemail.com"">bankof0009+3964@googlemail.com</a>
<a href=""mailto:bankof0009+2115@googlemail.com"">bankof0009+2115@googlemail.com</a>
<a href=""mailto:bankof0009+619@googlemail.com"">bankof0009+619@googlemail.com</a>
<a href=""mailto:bankof0009+18035@googlemail.com"">bankof0009+18035@googlemail.com</a>
<a href=""mailto:bankof0009+11910@googlemail.com"">bankof0009+11910@googlemail.com</a>
<a href=""mailto:bankof0009+13789@googlemail.com"">bankof0009+13789@googlemail.com</a>
<a href=""mailto:bankof0009+24010@googlemail.com"">bankof0009+24010@googlemail.com</a>
<a href=""mailto:bankof0009+20857@googlemail.com"">bankof0009+20857@googlemail.com</a>
<a href=""mailto:bankof0009+12693@googlemail.com"">bankof0009+12693@googlemail.com</a>
<a href=""mailto:bankof0009+15859@googlemail.com"">bankof0009+15859@googlemail.com</a>
<a href=""mailto:bankof0009+24884@googlemail.com"">bankof0009+24884@googlemail.com</a>
<a href=""mailto:bankof0009+32324@googlemail.com"">bankof0009+32324@googlemail.com</a>
<a href=""mailto:bankof0009+16429@googlemail.com"">bankof0009+16429@googlemail.com</a>
<a href=""mailto:bankof0009+31774@googlemail.com"">bankof0009+31774@googlemail.com</a>
<a href=""mailto:bankof0009+23889@googlemail.com"">bankof0009+23889@googlemail.com</a>
<a href=""mailto:bankof0009+30400@googlemail.com"">bankof0009+30400@googlemail.com</a>
<a href=""mailto:bankof0009+12549@googlemail.com"">bankof0009+12549@googlemail.com</a>
<a href=""mailto:bankof0009+1310@googlemail.com"">bankof0009+1310@googlemail.com</a>
<a href=""mailto:bankof0009+24266@googlemail.com"">bankof0009+24266@googlemail.com</a>
<a href=""mailto:bankof0009+3318@googlemail.com"">bankof0009+3318@googlemail.com</a>
<a href=""mailto:bankof0009+23004@googlemail.com"">bankof0009+23004@googlemail.com</a>
<a href=""mailto:bankof0009+15060@googlemail.com"">bankof0009+15060@googlemail.com</a>
<a href=""mailto:bankof0009+16955@googlemail.com"">bankof0009+16955@googlemail.com</a>
<a href=""mailto:bankof0009+27372@googlemail.com"">bankof0009+27372@googlemail.com</a>
<a href=""mailto:bankof0009+950@googlemail.com"">bankof0009+950@googlemail.com</a>
<a href=""mailto:bankof0009+336@googlemail.com"">bankof0009+336@googlemail.com</a>
<a href=""mailto:bankof0009+12225@googlemail.com"">bankof0009+12225@googlemail.com</a>
<a href=""mailto:bankof0009+11774@googlemail.com"">bankof0009+11774@googlemail.com</a>
<a href=""mailto:bankof0009+21158@googlemail.com"">bankof0009+21158@googlemail.com</a>
<a href=""mailto:bankof0009+23584@googlemail.com"">bankof0009+23584@googlemail.com</a>
<a href=""mailto:bankof0009+6489@googlemail.com"">bankof0009+6489@googlemail.com</a>
<a href=""mailto:bankof0009+9560@googlemail.com"">bankof0009+9560@googlemail.com</a>
<a href=""mailto:bankof0009+20213@googlemail.com"">bankof0009+20213@googlemail.com</a>
<a href=""mailto:bankof0009+5489@googlemail.com"">bankof0009+5489@googlemail.com</a>
<a href=""mailto:bankof0009+17004@googlemail.com"">bankof0009+17004@googlemail.com</a>
<a href=""mailto:bankof0009+24593@googlemail.com"">bankof0009+24593@googlemail.com</a>
<a href=""mailto:bankof0009+4140@googlemail.com"">bankof0009+4140@googlemail.com</a>
<a href=""mailto:bankof0009+15598@googlemail.com"">bankof0009+15598@googlemail.com</a>
<a href=""mailto:bankof0009+27524@googlemail.com"">bankof0009+27524@googlemail.com</a>
<a href=""mailto:bankof0009+8420@googlemail.com"">bankof0009+8420@googlemail.com</a>
<a href=""mailto:bankof0009+30892@googlemail.com"">bankof0009+30892@googlemail.com</a>
<a href=""mailto:bankof0009+15386@googlemail.com"">bankof0009+15386@googlemail.com</a>
<a href=""mailto:bankof0009+18343@googlemail.com"">bankof0009+18343@googlemail.com</a>
<a href=""mailto:bankof0009+24049@googlemail.com"">bankof0009+24049@googlemail.com</a>
<a href=""mailto:bankof0009+22359@googlemail.com"">bankof0009+22359@googlemail.com</a>
<a href=""mailto:bankof0009+8294@googlemail.com"">bankof0009+8294@googlemail.com</a>
<a href=""mailto:bankof0009+21839@googlemail.com"">bankof0009+21839@googlemail.com</a>
<a href=""mailto:bankof0009+30764@googlemail.com"">bankof0009+30764@googlemail.com</a>
<a href=""mailto:bankof0009+5876@googlemail.com"">bankof0009+5876@googlemail.com</a>
<a href=""mailto:bankof0009+14422@googlemail.com"">bankof0009+14422@googlemail.com</a>
<a href=""mailto:bankof0009+14785@googlemail.com"">bankof0009+14785@googlemail.com</a>
<a href=""mailto:bankof0009+13204@googlemail.com"">bankof0009+13204@googlemail.com</a>
<a href=""mailto:bankof0009+26685@googlemail.com"">bankof0009+26685@googlemail.com</a>
<a href=""mailto:bankof0009+21761@googlemail.com"">bankof0009+21761@googlemail.com</a>
<a href=""mailto:bankof0009+31258@googlemail.com"">bankof0009+31258@googlemail.com</a>
<a href=""mailto:bankof0009+8826@googlemail.com"">bankof0009+8826@googlemail.com</a>
<a href=""mailto:bankof0009+14731@googlemail.com"">bankof0009+14731@googlemail.com</a>
<a href=""mailto:bankof0009+9938@googlemail.com"">bankof0009+9938@googlemail.com</a>
<a href=""mailto:bankof0009+2509@googlemail.com"">bankof0009+2509@googlemail.com</a>
<a href=""mailto:bankof0009+25427@googlemail.com"">bankof0009+25427@googlemail.com</a>
<a href=""mailto:bankof0009+9159@googlemail.com"">bankof0009+9159@googlemail.com</a>
<a href=""mailto:bankof0009+21403@googlemail.com"">bankof0009+21403@googlemail.com</a>
<a href=""mailto:bankof0009+25588@googlemail.com"">bankof0009+25588@googlemail.com</a>
<a href=""mailto:bankof0009+10054@googlemail.com"">bankof0009+10054@googlemail.com</a>
<a href=""mailto:bankof0009+24146@googlemail.com"">bankof0009+24146@googlemail.com</a>
<a href=""mailto:bankof0009+14925@googlemail.com"">bankof0009+14925@googlemail.com</a>
<a href=""mailto:bankof0009+13786@googlemail.com"">bankof0009+13786@googlemail.com</a>
<a href=""mailto:bankof0009+25401@googlemail.com"">bankof0009+25401@googlemail.com</a>
<a href=""mailto:bankof0009+28999@googlemail.com"">bankof0009+28999@googlemail.com</a>
<a href=""mailto:bankof0009+4636@googlemail.com"">bankof0009+4636@googlemail.com</a>
<a href=""mailto:bankof0009+32619@googlemail.com"">bankof0009+32619@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson@googlemail.com"">keystoneb.jeffwilkinson@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+26168@googlemail.com"">keystoneb.jeffwilkinson+26168@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+11388@googlemail.com"">keystoneb.jeffwilkinson+11388@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+3687@googlemail.com"">keystoneb.jeffwilkinson+3687@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+23260@googlemail.com"">keystoneb.jeffwilkinson+23260@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+21339@googlemail.com"">keystoneb.jeffwilkinson+21339@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+21166@googlemail.com"">keystoneb.jeffwilkinson+21166@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+13046@googlemail.com"">keystoneb.jeffwilkinson+13046@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+7121@googlemail.com"">keystoneb.jeffwilkinson+7121@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+17045@googlemail.com"">keystoneb.jeffwilkinson+17045@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+14142@googlemail.com"">keystoneb.jeffwilkinson+14142@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+19442@googlemail.com"">keystoneb.jeffwilkinson+19442@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+17514@googlemail.com"">keystoneb.jeffwilkinson+17514@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+24951@googlemail.com"">keystoneb.jeffwilkinson+24951@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+12648@googlemail.com"">keystoneb.jeffwilkinson+12648@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+25201@googlemail.com"">keystoneb.jeffwilkinson+25201@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+30323@googlemail.com"">keystoneb.jeffwilkinson+30323@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+1969@googlemail.com"">keystoneb.jeffwilkinson+1969@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+29593@googlemail.com"">keystoneb.jeffwilkinson+29593@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+26262@googlemail.com"">keystoneb.jeffwilkinson+26262@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+23856@googlemail.com"">keystoneb.jeffwilkinson+23856@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+8254@googlemail.com"">keystoneb.jeffwilkinson+8254@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+4239@googlemail.com"">keystoneb.jeffwilkinson+4239@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+1403@googlemail.com"">keystoneb.jeffwilkinson+1403@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+31009@googlemail.com"">keystoneb.jeffwilkinson+31009@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+20400@googlemail.com"">keystoneb.jeffwilkinson+20400@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+6458@googlemail.com"">keystoneb.jeffwilkinson+6458@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+28696@googlemail.com"">keystoneb.jeffwilkinson+28696@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+7844@googlemail.com"">keystoneb.jeffwilkinson+7844@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+30355@googlemail.com"">keystoneb.jeffwilkinson+30355@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+7425@googlemail.com"">keystoneb.jeffwilkinson+7425@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+31095@googlemail.com"">keystoneb.jeffwilkinson+31095@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+356@googlemail.com"">keystoneb.jeffwilkinson+356@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+28217@googlemail.com"">keystoneb.jeffwilkinson+28217@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+14048@googlemail.com"">keystoneb.jeffwilkinson+14048@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+32435@googlemail.com"">keystoneb.jeffwilkinson+32435@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+28571@googlemail.com"">keystoneb.jeffwilkinson+28571@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+23901@googlemail.com"">keystoneb.jeffwilkinson+23901@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+20047@googlemail.com"">keystoneb.jeffwilkinson+20047@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+21984@googlemail.com"">keystoneb.jeffwilkinson+21984@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+6098@googlemail.com"">keystoneb.jeffwilkinson+6098@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+17382@googlemail.com"">keystoneb.jeffwilkinson+17382@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+16015@googlemail.com"">keystoneb.jeffwilkinson+16015@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+28283@googlemail.com"">keystoneb.jeffwilkinson+28283@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+27255@googlemail.com"">keystoneb.jeffwilkinson+27255@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+17776@googlemail.com"">keystoneb.jeffwilkinson+17776@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+27621@googlemail.com"">keystoneb.jeffwilkinson+27621@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+7176@googlemail.com"">keystoneb.jeffwilkinson+7176@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+5512@googlemail.com"">keystoneb.jeffwilkinson+5512@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+9043@googlemail.com"">keystoneb.jeffwilkinson+9043@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+18449@googlemail.com"">keystoneb.jeffwilkinson+18449@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+3332@googlemail.com"">keystoneb.jeffwilkinson+3332@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+8011@googlemail.com"">keystoneb.jeffwilkinson+8011@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+19926@googlemail.com"">keystoneb.jeffwilkinson+19926@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+28377@googlemail.com"">keystoneb.jeffwilkinson+28377@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+7926@googlemail.com"">keystoneb.jeffwilkinson+7926@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+17330@googlemail.com"">keystoneb.jeffwilkinson+17330@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+13989@googlemail.com"">keystoneb.jeffwilkinson+13989@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+1548@googlemail.com"">keystoneb.jeffwilkinson+1548@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+11445@googlemail.com"">keystoneb.jeffwilkinson+11445@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+15360@googlemail.com"">keystoneb.jeffwilkinson+15360@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+29618@googlemail.com"">keystoneb.jeffwilkinson+29618@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+16050@googlemail.com"">keystoneb.jeffwilkinson+16050@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+23763@googlemail.com"">keystoneb.jeffwilkinson+23763@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+22815@googlemail.com"">keystoneb.jeffwilkinson+22815@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+3187@googlemail.com"">keystoneb.jeffwilkinson+3187@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+18279@googlemail.com"">keystoneb.jeffwilkinson+18279@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+5636@googlemail.com"">keystoneb.jeffwilkinson+5636@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+30363@googlemail.com"">keystoneb.jeffwilkinson+30363@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+27428@googlemail.com"">keystoneb.jeffwilkinson+27428@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+15470@googlemail.com"">keystoneb.jeffwilkinson+15470@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+17149@googlemail.com"">keystoneb.jeffwilkinson+17149@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+22888@googlemail.com"">keystoneb.jeffwilkinson+22888@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+11463@googlemail.com"">keystoneb.jeffwilkinson+11463@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+14888@googlemail.com"">keystoneb.jeffwilkinson+14888@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+1741@googlemail.com"">keystoneb.jeffwilkinson+1741@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+20146@googlemail.com"">keystoneb.jeffwilkinson+20146@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+9192@googlemail.com"">keystoneb.jeffwilkinson+9192@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+32052@googlemail.com"">keystoneb.jeffwilkinson+32052@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+23618@googlemail.com"">keystoneb.jeffwilkinson+23618@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+26@googlemail.com"">keystoneb.jeffwilkinson+26@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+6359@googlemail.com"">keystoneb.jeffwilkinson+6359@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+18106@googlemail.com"">keystoneb.jeffwilkinson+18106@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+107@googlemail.com"">keystoneb.jeffwilkinson+107@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+32126@googlemail.com"">keystoneb.jeffwilkinson+32126@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+9491@googlemail.com"">keystoneb.jeffwilkinson+9491@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+324@googlemail.com"">keystoneb.jeffwilkinson+324@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+30975@googlemail.com"">keystoneb.jeffwilkinson+30975@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+9273@googlemail.com"">keystoneb.jeffwilkinson+9273@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+6090@googlemail.com"">keystoneb.jeffwilkinson+6090@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+20392@googlemail.com"">keystoneb.jeffwilkinson+20392@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+10591@googlemail.com"">keystoneb.jeffwilkinson+10591@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+30454@googlemail.com"">keystoneb.jeffwilkinson+30454@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+9051@googlemail.com"">keystoneb.jeffwilkinson+9051@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+25587@googlemail.com"">keystoneb.jeffwilkinson+25587@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+22787@googlemail.com"">keystoneb.jeffwilkinson+22787@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+29264@googlemail.com"">keystoneb.jeffwilkinson+29264@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+21335@googlemail.com"">keystoneb.jeffwilkinson+21335@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+29521@googlemail.com"">keystoneb.jeffwilkinson+29521@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+16590@googlemail.com"">keystoneb.jeffwilkinson+16590@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+2444@googlemail.com"">keystoneb.jeffwilkinson+2444@googlemail.com</a>
<a href=""mailto:ronaldslade101@gmail.com"">ronaldslade101@gmail.com</a>
<a href=""mailto:ronaldslade101+27624@gmail.com"">ronaldslade101+27624@gmail.com</a>
<a href=""mailto:ronaldslade101+4375@gmail.com"">ronaldslade101+4375@gmail.com</a>
<a href=""mailto:ronaldslade101+2325@gmail.com"">ronaldslade101+2325@gmail.com</a>
<a href=""mailto:ronaldslade101+27453@gmail.com"">ronaldslade101+27453@gmail.com</a>
<a href=""mailto:ronaldslade101+7522@gmail.com"">ronaldslade101+7522@gmail.com</a>
<a href=""mailto:ronaldslade101+31428@gmail.com"">ronaldslade101+31428@gmail.com</a>
<a href=""mailto:ronaldslade101+32656@gmail.com"">ronaldslade101+32656@gmail.com</a>
<a href=""mailto:ronaldslade101+29087@gmail.com"">ronaldslade101+29087@gmail.com</a>
<a href=""mailto:ronaldslade101+14620@gmail.com"">ronaldslade101+14620@gmail.com</a>
<a href=""mailto:ronaldslade101+18286@gmail.com"">ronaldslade101+18286@gmail.com</a>
<a href=""mailto:ronaldslade101+29938@gmail.com"">ronaldslade101+29938@gmail.com</a>
<a href=""mailto:ronaldslade101+10999@gmail.com"">ronaldslade101+10999@gmail.com</a>
<a href=""mailto:ronaldslade101+31338@gmail.com"">ronaldslade101+31338@gmail.com</a>
<a href=""mailto:ronaldslade101+848@gmail.com"">ronaldslade101+848@gmail.com</a>
<a href=""mailto:ronaldslade101+24780@gmail.com"">ronaldslade101+24780@gmail.com</a>
<a href=""mailto:ronaldslade101+1517@gmail.com"">ronaldslade101+1517@gmail.com</a>
<a href=""mailto:ronaldslade101+18345@gmail.com"">ronaldslade101+18345@gmail.com</a>
<a href=""mailto:ronaldslade101+27762@gmail.com"">ronaldslade101+27762@gmail.com</a>
<a href=""mailto:ronaldslade101+30378@gmail.com"">ronaldslade101+30378@gmail.com</a>
<a href=""mailto:ronaldslade101+19155@gmail.com"">ronaldslade101+19155@gmail.com</a>
<a href=""mailto:ronaldslade101+15902@gmail.com"">ronaldslade101+15902@gmail.com</a>
<a href=""mailto:ronaldslade101+30064@gmail.com"">ronaldslade101+30064@gmail.com</a>
<a href=""mailto:ronaldslade101+17871@gmail.com"">ronaldslade101+17871@gmail.com</a>
<a href=""mailto:ronaldslade101+15599@gmail.com"">ronaldslade101+15599@gmail.com</a>
<a href=""mailto:ronaldslade101+10040@gmail.com"">ronaldslade101+10040@gmail.com</a>
<a href=""mailto:ronaldslade101+28304@gmail.com"">ronaldslade101+28304@gmail.com</a>
<a href=""mailto:ronaldslade101+26136@gmail.com"">ronaldslade101+26136@gmail.com</a>
<a href=""mailto:ronaldslade101+25817@gmail.com"">ronaldslade101+25817@gmail.com</a>
<a href=""mailto:ronaldslade101+14177@gmail.com"">ronaldslade101+14177@gmail.com</a>
<a href=""mailto:ronaldslade101+603@gmail.com"">ronaldslade101+603@gmail.com</a>
<a href=""mailto:ronaldslade101+27798@gmail.com"">ronaldslade101+27798@gmail.com</a>
<a href=""mailto:ronaldslade101+31592@gmail.com"">ronaldslade101+31592@gmail.com</a>
<a href=""mailto:ronaldslade101+11279@gmail.com"">ronaldslade101+11279@gmail.com</a>
<a href=""mailto:ronaldslade101+23840@gmail.com"">ronaldslade101+23840@gmail.com</a>
<a href=""mailto:ronaldslade101+24938@gmail.com"">ronaldslade101+24938@gmail.com</a>
<a href=""mailto:ronaldslade101+8319@gmail.com"">ronaldslade101+8319@gmail.com</a>
<a href=""mailto:ronaldslade101+19232@gmail.com"">ronaldslade101+19232@gmail.com</a>
<a href=""mailto:ronaldslade101+9917@gmail.com"">ronaldslade101+9917@gmail.com</a>
<a href=""mailto:ronaldslade101+19743@gmail.com"">ronaldslade101+19743@gmail.com</a>
<a href=""mailto:ronaldslade101+22685@gmail.com"">ronaldslade101+22685@gmail.com</a>
<a href=""mailto:ronaldslade101+23808@gmail.com"">ronaldslade101+23808@gmail.com</a>
<a href=""mailto:ronaldslade101+2830@gmail.com"">ronaldslade101+2830@gmail.com</a>
<a href=""mailto:ronaldslade101+7989@gmail.com"">ronaldslade101+7989@gmail.com</a>
<a href=""mailto:ronaldslade101+24416@gmail.com"">ronaldslade101+24416@gmail.com</a>
<a href=""mailto:ronaldslade101+12047@gmail.com"">ronaldslade101+12047@gmail.com</a>
<a href=""mailto:ronaldslade101+14203@gmail.com"">ronaldslade101+14203@gmail.com</a>
<a href=""mailto:ronaldslade101+3834@gmail.com"">ronaldslade101+3834@gmail.com</a>
<a href=""mailto:ronaldslade101+16063@gmail.com"">ronaldslade101+16063@gmail.com</a>
<a href=""mailto:ronaldslade101+10076@gmail.com"">ronaldslade101+10076@gmail.com</a>
<a href=""mailto:ronaldslade101+19295@gmail.com"">ronaldslade101+19295@gmail.com</a>
<a href=""mailto:ronaldslade101+31485@gmail.com"">ronaldslade101+31485@gmail.com</a>
<a href=""mailto:ronaldslade101+13661@gmail.com"">ronaldslade101+13661@gmail.com</a>
<a href=""mailto:ronaldslade101+30491@gmail.com"">ronaldslade101+30491@gmail.com</a>
<a href=""mailto:ronaldslade101+23486@gmail.com"">ronaldslade101+23486@gmail.com</a>
<a href=""mailto:ronaldslade101+15834@gmail.com"">ronaldslade101+15834@gmail.com</a>
<a href=""mailto:ronaldslade101+7021@gmail.com"">ronaldslade101+7021@gmail.com</a>
<a href=""mailto:ronaldslade101+28109@gmail.com"">ronaldslade101+28109@gmail.com</a>
<a href=""mailto:ronaldslade101+24537@gmail.com"">ronaldslade101+24537@gmail.com</a>
<a href=""mailto:ronaldslade101+15703@gmail.com"">ronaldslade101+15703@gmail.com</a>
<a href=""mailto:ronaldslade101+12766@gmail.com"">ronaldslade101+12766@gmail.com</a>
<a href=""mailto:ronaldslade101+11724@gmail.com"">ronaldslade101+11724@gmail.com</a>
<a href=""mailto:ronaldslade101+11810@gmail.com"">ronaldslade101+11810@gmail.com</a>
<a href=""mailto:ronaldslade101+27945@gmail.com"">ronaldslade101+27945@gmail.com</a>
<a href=""mailto:ronaldslade101+26191@gmail.com"">ronaldslade101+26191@gmail.com</a>
<a href=""mailto:ronaldslade101+3186@gmail.com"">ronaldslade101+3186@gmail.com</a>
<a href=""mailto:ronaldslade101+31612@gmail.com"">ronaldslade101+31612@gmail.com</a>
<a href=""mailto:ronaldslade101+7949@gmail.com"">ronaldslade101+7949@gmail.com</a>
<a href=""mailto:ronaldslade101+8763@gmail.com"">ronaldslade101+8763@gmail.com</a>
<a href=""mailto:ronaldslade101+12620@gmail.com"">ronaldslade101+12620@gmail.com</a>
<a href=""mailto:ronaldslade101+3718@gmail.com"">ronaldslade101+3718@gmail.com</a>
<a href=""mailto:ronaldslade101+7672@gmail.com"">ronaldslade101+7672@gmail.com</a>
<a href=""mailto:ronaldslade101+7676@gmail.com"">ronaldslade101+7676@gmail.com</a>
<a href=""mailto:ronaldslade101+15480@gmail.com"">ronaldslade101+15480@gmail.com</a>
<a href=""mailto:ronaldslade101+16289@gmail.com"">ronaldslade101+16289@gmail.com</a>
<a href=""mailto:ronaldslade101+19909@gmail.com"">ronaldslade101+19909@gmail.com</a>
<a href=""mailto:ronaldslade101+22681@gmail.com"">ronaldslade101+22681@gmail.com</a>
<a href=""mailto:ronaldslade101+27627@gmail.com"">ronaldslade101+27627@gmail.com</a>
<a href=""mailto:ronaldslade101+5770@gmail.com"">ronaldslade101+5770@gmail.com</a>
<a href=""mailto:ronaldslade101+4886@gmail.com"">ronaldslade101+4886@gmail.com</a>
<a href=""mailto:ronaldslade101+23214@gmail.com"">ronaldslade101+23214@gmail.com</a>
<a href=""mailto:ronaldslade101+12433@gmail.com"">ronaldslade101+12433@gmail.com</a>
<a href=""mailto:ronaldslade101+10703@gmail.com"">ronaldslade101+10703@gmail.com</a>
<a href=""mailto:ronaldslade101+26066@gmail.com"">ronaldslade101+26066@gmail.com</a>
<a href=""mailto:ronaldslade101+1822@gmail.com"">ronaldslade101+1822@gmail.com</a>
<a href=""mailto:ronaldslade101+482@gmail.com"">ronaldslade101+482@gmail.com</a>
<a href=""mailto:ronaldslade101+4099@gmail.com"">ronaldslade101+4099@gmail.com</a>
<a href=""mailto:ronaldslade101+29728@gmail.com"">ronaldslade101+29728@gmail.com</a>
<a href=""mailto:ronaldslade101+93@gmail.com"">ronaldslade101+93@gmail.com</a>
<a href=""mailto:ronaldslade101+2679@gmail.com"">ronaldslade101+2679@gmail.com</a>
<a href=""mailto:ronaldslade101+17629@gmail.com"">ronaldslade101+17629@gmail.com</a>
<a href=""mailto:ronaldslade101+18915@gmail.com"">ronaldslade101+18915@gmail.com</a>
<a href=""mailto:ronaldslade101+2350@gmail.com"">ronaldslade101+2350@gmail.com</a>
<a href=""mailto:ronaldslade101+27807@gmail.com"">ronaldslade101+27807@gmail.com</a>
<a href=""mailto:ronaldslade101+17340@gmail.com"">ronaldslade101+17340@gmail.com</a>
<a href=""mailto:ronaldslade101+2178@gmail.com"">ronaldslade101+2178@gmail.com</a>
<a href=""mailto:ronaldslade101+6882@gmail.com"">ronaldslade101+6882@gmail.com</a>
<a href=""mailto:ronaldslade101+6836@gmail.com"">ronaldslade101+6836@gmail.com</a>
<a href=""mailto:ronaldslade101+3687@gmail.com"">ronaldslade101+3687@gmail.com</a>
<a href=""mailto:ronaldslade101+17185@gmail.com"">ronaldslade101+17185@gmail.com</a>
<a href=""mailto:ronaldslade101+32017@gmail.com"">ronaldslade101+32017@gmail.com</a>
<a href=""mailto:hola@leadsarms.com"">hola@leadsarms.com</a>
<a href=""mailto:agentvictorokle@googlemail.com"">agentvictorokle@googlemail.com</a>
<a href=""mailto:agentvictorokle+27992@googlemail.com"">agentvictorokle+27992@googlemail.com</a>
<a href=""mailto:agentvictorokle+25272@googlemail.com"">agentvictorokle+25272@googlemail.com</a>
<a href=""mailto:agentvictorokle+2389@googlemail.com"">agentvictorokle+2389@googlemail.com</a>
<a href=""mailto:agentvictorokle+24853@googlemail.com"">agentvictorokle+24853@googlemail.com</a>
<a href=""mailto:agentvictorokle+12894@googlemail.com"">agentvictorokle+12894@googlemail.com</a>
<a href=""mailto:agentvictorokle+9399@googlemail.com"">agentvictorokle+9399@googlemail.com</a>
<a href=""mailto:agentvictorokle+26182@googlemail.com"">agentvictorokle+26182@googlemail.com</a>
<a href=""mailto:agentvictorokle+2643@googlemail.com"">agentvictorokle+2643@googlemail.com</a>
<a href=""mailto:agentvictorokle+20413@googlemail.com"">agentvictorokle+20413@googlemail.com</a>
<a href=""mailto:agentvictorokle+32024@googlemail.com"">agentvictorokle+32024@googlemail.com</a>
<a href=""mailto:agentvictorokle+16548@googlemail.com"">agentvictorokle+16548@googlemail.com</a>
<a href=""mailto:agentvictorokle+3519@googlemail.com"">agentvictorokle+3519@googlemail.com</a>
<a href=""mailto:agentvictorokle+10176@googlemail.com"">agentvictorokle+10176@googlemail.com</a>
<a href=""mailto:agentvictorokle+1816@googlemail.com"">agentvictorokle+1816@googlemail.com</a>
<a href=""mailto:agentvictorokle+14236@googlemail.com"">agentvictorokle+14236@googlemail.com</a>
<a href=""mailto:agentvictorokle+26535@googlemail.com"">agentvictorokle+26535@googlemail.com</a>
<a href=""mailto:agentvictorokle+26814@googlemail.com"">agentvictorokle+26814@googlemail.com</a>
<a href=""mailto:agentvictorokle+16412@googlemail.com"">agentvictorokle+16412@googlemail.com</a>
<a href=""mailto:agentvictorokle+20963@googlemail.com"">agentvictorokle+20963@googlemail.com</a>
<a href=""mailto:agentvictorokle+27970@googlemail.com"">agentvictorokle+27970@googlemail.com</a>
<a href=""mailto:agentvictorokle+18857@googlemail.com"">agentvictorokle+18857@googlemail.com</a>
<a href=""mailto:agentvictorokle+7490@googlemail.com"">agentvictorokle+7490@googlemail.com</a>
<a href=""mailto:agentvictorokle+5273@googlemail.com"">agentvictorokle+5273@googlemail.com</a>
<a href=""mailto:agentvictorokle+26577@googlemail.com"">agentvictorokle+26577@googlemail.com</a>
<a href=""mailto:agentvictorokle+23684@googlemail.com"">agentvictorokle+23684@googlemail.com</a>
<a href=""mailto:agentvictorokle+4261@googlemail.com"">agentvictorokle+4261@googlemail.com</a>
<a href=""mailto:agentvictorokle+22205@googlemail.com"">agentvictorokle+22205@googlemail.com</a>
<a href=""mailto:agentvictorokle+5117@googlemail.com"">agentvictorokle+5117@googlemail.com</a>
<a href=""mailto:agentvictorokle+31316@googlemail.com"">agentvictorokle+31316@googlemail.com</a>
<a href=""mailto:agentvictorokle+18882@googlemail.com"">agentvictorokle+18882@googlemail.com</a>
<a href=""mailto:agentvictorokle+17713@googlemail.com"">agentvictorokle+17713@googlemail.com</a>
<a href=""mailto:agentvictorokle+23908@googlemail.com"">agentvictorokle+23908@googlemail.com</a>
<a href=""mailto:agentvictorokle+8499@googlemail.com"">agentvictorokle+8499@googlemail.com</a>
<a href=""mailto:agentvictorokle+5361@googlemail.com"">agentvictorokle+5361@googlemail.com</a>
<a href=""mailto:agentvictorokle+21482@googlemail.com"">agentvictorokle+21482@googlemail.com</a>
<a href=""mailto:agentvictorokle+7488@googlemail.com"">agentvictorokle+7488@googlemail.com</a>
<a href=""mailto:agentvictorokle+3629@googlemail.com"">agentvictorokle+3629@googlemail.com</a>
<a href=""mailto:agentvictorokle+28574@googlemail.com"">agentvictorokle+28574@googlemail.com</a>
<a href=""mailto:agentvictorokle+2366@googlemail.com"">agentvictorokle+2366@googlemail.com</a>
<a href=""mailto:agentvictorokle+18847@googlemail.com"">agentvictorokle+18847@googlemail.com</a>
<a href=""mailto:agentvictorokle+21268@googlemail.com"">agentvictorokle+21268@googlemail.com</a>
<a href=""mailto:agentvictorokle+26246@googlemail.com"">agentvictorokle+26246@googlemail.com</a>
<a href=""mailto:agentvictorokle+19383@googlemail.com"">agentvictorokle+19383@googlemail.com</a>
<a href=""mailto:agentvictorokle+25391@googlemail.com"">agentvictorokle+25391@googlemail.com</a>
<a href=""mailto:agentvictorokle+23014@googlemail.com"">agentvictorokle+23014@googlemail.com</a>
<a href=""mailto:agentvictorokle+8878@googlemail.com"">agentvictorokle+8878@googlemail.com</a>
<a href=""mailto:agentvictorokle+7416@googlemail.com"">agentvictorokle+7416@googlemail.com</a>
<a href=""mailto:agentvictorokle+24784@googlemail.com"">agentvictorokle+24784@googlemail.com</a>
<a href=""mailto:agentvictorokle+11013@googlemail.com"">agentvictorokle+11013@googlemail.com</a>
<a href=""mailto:agentvictorokle+16243@googlemail.com"">agentvictorokle+16243@googlemail.com</a>
<a href=""mailto:agentvictorokle+29500@googlemail.com"">agentvictorokle+29500@googlemail.com</a>
<a href=""mailto:agentvictorokle+31435@googlemail.com"">agentvictorokle+31435@googlemail.com</a>
<a href=""mailto:agentvictorokle+30478@googlemail.com"">agentvictorokle+30478@googlemail.com</a>
<a href=""mailto:agentvictorokle+12617@googlemail.com"">agentvictorokle+12617@googlemail.com</a>
<a href=""mailto:agentvictorokle+771@googlemail.com"">agentvictorokle+771@googlemail.com</a>
<a href=""mailto:agentvictorokle+24076@googlemail.com"">agentvictorokle+24076@googlemail.com</a>
<a href=""mailto:agentvictorokle+28199@googlemail.com"">agentvictorokle+28199@googlemail.com</a>
<a href=""mailto:agentvictorokle+20337@googlemail.com"">agentvictorokle+20337@googlemail.com</a>
<a href=""mailto:agentvictorokle+13362@googlemail.com"">agentvictorokle+13362@googlemail.com</a>
<a href=""mailto:agentvictorokle+7414@googlemail.com"">agentvictorokle+7414@googlemail.com</a>
<a href=""mailto:agentvictorokle+30467@googlemail.com"">agentvictorokle+30467@googlemail.com</a>
<a href=""mailto:agentvictorokle+6465@googlemail.com"">agentvictorokle+6465@googlemail.com</a>
<a href=""mailto:agentvictorokle+19878@googlemail.com"">agentvictorokle+19878@googlemail.com</a>
<a href=""mailto:agentvictorokle+13529@googlemail.com"">agentvictorokle+13529@googlemail.com</a>
<a href=""mailto:agentvictorokle+1236@googlemail.com"">agentvictorokle+1236@googlemail.com</a>
<a href=""mailto:agentvictorokle+12448@googlemail.com"">agentvictorokle+12448@googlemail.com</a>
<a href=""mailto:agentvictorokle+17310@googlemail.com"">agentvictorokle+17310@googlemail.com</a>
<a href=""mailto:agentvictorokle+14810@googlemail.com"">agentvictorokle+14810@googlemail.com</a>
<a href=""mailto:agentvictorokle+21737@googlemail.com"">agentvictorokle+21737@googlemail.com</a>
<a href=""mailto:agentvictorokle+30282@googlemail.com"">agentvictorokle+30282@googlemail.com</a>
<a href=""mailto:agentvictorokle+22772@googlemail.com"">agentvictorokle+22772@googlemail.com</a>
<a href=""mailto:agentvictorokle+5122@googlemail.com"">agentvictorokle+5122@googlemail.com</a>
<a href=""mailto:agentvictorokle+31501@googlemail.com"">agentvictorokle+31501@googlemail.com</a>
<a href=""mailto:agentvictorokle+418@googlemail.com"">agentvictorokle+418@googlemail.com</a>
<a href=""mailto:agentvictorokle+25270@googlemail.com"">agentvictorokle+25270@googlemail.com</a>
<a href=""mailto:agentvictorokle+377@googlemail.com"">agentvictorokle+377@googlemail.com</a>
<a href=""mailto:agentvictorokle+29536@googlemail.com"">agentvictorokle+29536@googlemail.com</a>
<a href=""mailto:agentvictorokle+31850@googlemail.com"">agentvictorokle+31850@googlemail.com</a>
<a href=""mailto:agentvictorokle+11404@googlemail.com"">agentvictorokle+11404@googlemail.com</a>
<a href=""mailto:agentvictorokle+24993@googlemail.com"">agentvictorokle+24993@googlemail.com</a>
<a href=""mailto:agentvictorokle+24202@googlemail.com"">agentvictorokle+24202@googlemail.com</a>
<a href=""mailto:agentvictorokle+20770@googlemail.com"">agentvictorokle+20770@googlemail.com</a>
<a href=""mailto:agentvictorokle+4281@googlemail.com"">agentvictorokle+4281@googlemail.com</a>
<a href=""mailto:agentvictorokle+19082@googlemail.com"">agentvictorokle+19082@googlemail.com</a>
<a href=""mailto:agentvictorokle+15262@googlemail.com"">agentvictorokle+15262@googlemail.com</a>
<a href=""mailto:agentvictorokle+28513@googlemail.com"">agentvictorokle+28513@googlemail.com</a>
<a href=""mailto:agentvictorokle+13297@googlemail.com"">agentvictorokle+13297@googlemail.com</a>
<a href=""mailto:agentvictorokle+19180@googlemail.com"">agentvictorokle+19180@googlemail.com</a>
<a href=""mailto:agentvictorokle+14411@googlemail.com"">agentvictorokle+14411@googlemail.com</a>
<a href=""mailto:agentvictorokle+11436@googlemail.com"">agentvictorokle+11436@googlemail.com</a>
<a href=""mailto:agentvictorokle+10736@googlemail.com"">agentvictorokle+10736@googlemail.com</a>
<a href=""mailto:agentvictorokle+26122@googlemail.com"">agentvictorokle+26122@googlemail.com</a>
<a href=""mailto:agentvictorokle+30843@googlemail.com"">agentvictorokle+30843@googlemail.com</a>
<a href=""mailto:agentvictorokle+27031@googlemail.com"">agentvictorokle+27031@googlemail.com</a>
<a href=""mailto:agentvictorokle+29807@googlemail.com"">agentvictorokle+29807@googlemail.com</a>
<a href=""mailto:agentvictorokle+28541@googlemail.com"">agentvictorokle+28541@googlemail.com</a>
<a href=""mailto:agentvictorokle+644@googlemail.com"">agentvictorokle+644@googlemail.com</a>
<a href=""mailto:agentvictorokle+14900@googlemail.com"">agentvictorokle+14900@googlemail.com</a>
<a href=""mailto:agentvictorokle+19589@googlemail.com"">agentvictorokle+19589@googlemail.com</a>
<a href=""mailto:agentvictorokle+30334@googlemail.com"">agentvictorokle+30334@googlemail.com</a>
"
3xw4wnmP,Untitled,jeffysonr,MySQL,Wednesday 12th of July 2023 02:35:16 PM CDT,"-- View 1
-- diakonos.movement_reports source

CREATE OR REPLACE
ALGORITHM = UNDEFINED VIEW `diakonos`.`movement_reports` AS
select
    `m`.`id` AS `movement_id`,
    `p`.`entities_id` AS `entity_id`,
    `p`.`id` AS `person_id`,
    `p`.`name` AS `person`,
    `mt`.`id` AS `movement_type_id`,
    `mt`.`name` AS `movement_type`,
    `t`.`id` AS `teller_id`,
    coalesce(`t`.`name`, '--') AS `teller`,
    `m`.`data_pagamento` AS `data_pagamento`,
    `m`.`valor_total` AS `valor_total`,
    `m`.`pago` AS `pago`,
    `m`.`transf_ref` AS `transf_ref`,
    `m`.`hashtags` AS `hashtags`
from
    (((`diakonos`.`movements` `m`
join `diakonos`.`persons` `p` on
    (((`p`.`id` = `m`.`persons_id`)
        and (`p`.`deletado` is false))))
join `diakonos`.`movement_types` `mt` on
    (((`mt`.`id` = `m`.`movement_types_id`)
        and (`mt`.`deletado` is false))))
left join `diakonos`.`tellers` `t` on
    (((`t`.`id` = `m`.`tellers_id`)
        and (`t`.`deletado` is false))))
where
    (`m`.`deletado` is false);


-- View 2
-- diakonos.cashbalance_reports source

CREATE OR REPLACE
ALGORITHM = UNDEFINED VIEW `diakonos`.`cashbalance_reports` AS
select
    `x`.`entity_id` AS `entity_id`,
    cast(concat(`x`.`ano_referencia`, '-', `x`.`mes_referencia`, '-', '01') as date) AS `data_referencia`,
    sum(`x`.`total_a_pagar`) AS `total_a_pagar`,
    sum(`x`.`total_pago`) AS `total_despesas`,
    sum(`x`.`total_a_receber`) AS `total_a_receber`,
    sum(`x`.`total_recebido`) AS `total_receitas`,
    (sum(`x`.`total_recebido`) - sum(`x`.`total_pago`)) AS `total`
from
    (
    select
        `mr`.`entity_id` AS `entity_id`,
        extract(month from `mr`.`data_pagamento`) AS `mes_referencia`,
        extract(year from `mr`.`data_pagamento`) AS `ano_referencia`,
        sum((case when (`mr`.`movement_type_id` = 2) then `mr`.`valor_total` else 0 end)) AS `total_a_pagar`,
        sum((case when ((`mr`.`movement_type_id` = 2) and (`mr`.`pago` = 1)) then `mr`.`valor_total` else 0 end)) AS `total_pago`,
        sum((case when (`mr`.`movement_type_id` = 1) then `mr`.`valor_total` else 0 end)) AS `total_a_receber`,
        sum((case when ((`mr`.`movement_type_id` = 1) and (`mr`.`pago` = 1)) then `mr`.`valor_total` else 0 end)) AS `total_recebido`
    from
        `diakonos`.`movement_reports` `mr`
    where
        (strcmp(`mr`.`person`, 'TRANSFERENCIA ENTRE CONTAS') <> 0)
    group by
        `mr`.`entity_id`,
        extract(year from `mr`.`data_pagamento`),
        extract(month from `mr`.`data_pagamento`)
    order by
        `ano_referencia`,
        `mes_referencia`) `x`
group by
    `x`.`entity_id`,
    `x`.`ano_referencia`,
    `x`.`mes_referencia`;


-- View 3
-- diakonos.pursespercentuals_reports source

CREATE OR REPLACE
ALGORITHM = UNDEFINED VIEW `diakonos`.`pursespercentuals_reports` AS
select
    `x`.`cost_center_plans_id` AS `cost_center_plans_id`,
    `x`.`purses_ids` AS `purses_ids`,
    `x`.`percetuals` AS `percetuals`
from
    (
    select
        `cc`.`cost_center_plans_id` AS `cost_center_plans_id`,
        group_concat(`cc`.`purses_id` order by `cc`.`purses_id` ASC separator ',') AS `purses_ids`,
        group_concat(`cc`.`percentual` order by `cc`.`purses_id` ASC separator ',') AS `percetuals`
    from
        `diakonos`.`cost_center` `cc`
    group by
        `cc`.`cost_center_plans_id`) `x`;"
mcQKGGV0,Bootstrap - lezione 5,fcamuso,HTML,Wednesday 12th of July 2023 02:28:22 PM CDT,"<!doctype html>
<html lang=""en"">

<head>
  <title>Title</title>
  <!-- Required meta tags -->
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width, initial-scale=1, shrink-to-fit=no"">

  <!-- Bootstrap CSS v5.3.0 -->
  <link href=""https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"" rel=""stylesheet"" 
        integrity=""sha384-9ndCyUaIbzAi2FUVXJi0CjmCapSmO7SnpJef0486qhLnuZ2cdeRhO02iuK6FUUVM"" 
        crossorigin=""anonymous"">
</head>

<body>
  
  <nav class=""navbar navbar-expand-lg text-bg-warning"" > 
       
    <button class=""navbar-toggler"" data-bs-toggle=""collapse"" data-bs-target=""#navBar"">
      <span class=""navbar-toggler-icon""></span>
    </button>
 
    <div class=""collapse navbar-collapse"" id=""navBar"">
       <ul class=""navbar-nav"">
        <li class=""nav-item""> <a href=""#"" class=""nav-link"">Home</a>  </li>
        <li class=""nav-item""> <a href=""#"" class=""nav-link"">File</a>         </li>
        <li class=""nav-item""> <a href=""yt_05_menu.html"" class=""nav-link"">Modifica</a>     </li>
        <li class=""nav-item""> <a href=""#"" class=""nav-link"">Strumenti</a>    </li>
        <li class=""nav-item""> <a href=""#"" class=""nav-link"">Contatti</a>     </li>
      </ul>              
    </div>

  </nav>
  

  <!-- Bootstrap JavaScript Libraries -->
  <script src=""https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"" 
          integrity=""sha384-geWF76RCwLtnZ8qwWowPQNguL3RmwHVBC9FhGdlKrxdiJJigb/j/68SIy3Te4Bkz"" 
          crossorigin=""anonymous""></script>
  
  <script>
    
    const pagina = document.URL.substring(document.URL.lastIndexOf('/')+1);
    const link_da_attivare = document.querySelector(""a[href='""+pagina+""']"");
    link_da_attivare.classList.add(""active"");

  </script
  
</body>

</html>"
YNiCNR4n,Untitled,Terror_nisse,JSON,Wednesday 12th of July 2023 02:23:40 PM CDT,"{
  ""en"": {
    ""verification_hello"": ""Welcome to RS Burnt"",
    ""verification_whatoffer"": ""What we have to offer"",
    ""verification_offer1"": ""Buying/Selling Burnt Food or Non-Ge items."",
    ""verification_offer2"": ""Burnt food market price list."",
    ""verification_offer3"": ""Fun discussions and community events."",
    ""verification_offer4"": ""Diverse and welcoming community"",
    ""verification_rules1"": ""Please familiarize yourself with our @1 before sending in an application."",
    ""verification_button"": ""Apply"",
    ""verification_q2_error1"": ""Error! Please specify where you got the discord invite."",
    ""verification_q2_error2"": ""You answered:"",
    ""verification_q2_error3"": ""Accepted answers will be:"",
    ""verification_q2_error4"": ""Name of the discord server that provided the link"",
    ""verification_q2_error5"": ""Discord name or in-game name of the person who invited you"",
    ""verification_q2_error6"": ""Source of the link (Youtube channel name, reddit post, ...)"",
    ""verification_q2_error7"": ""Please click the button below to try again with a different answer"",
    ""verification_error_alreadyverified"": ""Error: You are already verified."",
    ""verification_error_alreadyopen"": ""Error: You already have an application open. (See @1)"",
    ""appform_title"": ""Application form"",
    ""appform_en_only"": ""(Answers must be in English!)"",
    ""appform_q1"": ""What is your RuneScape in-game name?"",
    ""appform_q2"": ""How did you find out about the discord?"",
    ""appform_ph2"": ""Name of friend, Youtube channel, discord server (or link)"",
    ""appform_q3"": ""Do you collect, resell or want to look around?"",
    ""appform_ph3"": ""Collect/Resell/Both/Not yet..."",
    ""appform_q4"": ""Did you read, and agree to follow the rules?"",
    ""appform_ph4"": ""Yes/No"",
    ""appform_q5"": ""In your own words, what is rule #3 about?"",
    ""appform_ph5"": ""Rule #3 is about..."",
    ""processing"": ""Processing request..."",
    ""appform_success"": ""Success! Please head over to @1 to wait for approval."",
    ""app_welcome"": ""Hey @1, welcome to RS Burnt!"",
    ""app_thankyou"": ""Thank you for submitting an application. An @1 or @2 will be with you shortly to give you full access to the discord"",
    ""app_avg_all"": ""Average staff response time(All time):"",
    ""app_avg_1hr"": ""Average staff response time(Last 1hr):"",
    ""app_avg_nodata"": ""No data."",
    ""app_avg_stats"": ""Stats found"",
    ""app_avg_nostats"": ""Stats not found"",
    ""app_qa"": ""Questions/Answers:"",
    ""app_edit"": ""If you need to edit your answers, click the button below"",
    ""app_edit_button"": ""Edit answers"",
    ""app_mofify"": ""Answer to question @1 has been successfully modified from \""@2\"" to \""@3\"""",
    ""app_verified"": ""@1 is now verified. This channel will self-destruct @2.""
  },
  ""de"": {
    ""verification_hello"": ""Willkommen bei RS Burnt"",
    ""verification_whatoffer"": ""Was wir bieten"",
    ""verification_offer1"": ""Kauf/Verkauf von verbranntem Essen oder Nicht-Ge-Gegenständen."",
    ""verification_offer2"": ""Marktpreisliste für verbranntes Essen."",
    ""verification_offer3"": ""Spaßige Diskussionen und Community-Veranstaltungen."",
    ""verification_offer4"": ""Vielfältige und freundliche Community"",
    ""verification_rules1"": ""Bitte machen Sie sich vor dem Einreichen einer Bewerbung mit unseren @1 vertraut."",
    ""verification_button"": ""Bewerben"",
    ""verification_q2_error1"": ""Fehler! Bitte geben Sie an, woher Sie die Discord-Einladung erhalten haben."",
    ""verification_q2_error2"": ""Deine Antwort:"",
    ""verification_q2_error3"": ""Akzeptierte Antworten sind:"",
    ""verification_q2_error4"": ""Name des Discord-Servers, der den Link bereitgestellt hat"",
    ""verification_q2_error5"": ""Discord-Name oder Spielname der Person, die Sie eingeladen hat"",
    ""verification_q2_error6"": ""Quelle des Links (Name des YouTube-Kanals, Reddit-Beitrag, ...)"",
    ""verification_q2_error7"": ""Bitte klicken Sie unten auf die Schaltfläche, um es erneut mit einer anderen Antwort zu versuchen"",
    ""verification_error_alreadyverified"": ""Fehler: Sie sind bereits verifiziert."",
    ""verification_error_alreadyopen"": ""Fehler: Sie haben bereits eine offene Bewerbung. (Siehe @1)"",
    ""appform_title"": ""Bewerbungsformular"",
    ""appform_en_only"": ""(Antworten müssen in Englisch sein!)"",
    ""appform_q1"": ""Wie lautet Ihr RuneScape-Spielername?"",
    ""appform_q2"": ""Wie haben Sie von Discord erfahren?"",
    ""appform_ph2"": ""Name des Freundes, YouTube-Kanals, Discord-Servers (oder Link)"",
    ""appform_q3"": ""Sammeln Sie, verkaufen Sie oder möchten Sie sich umsehen?"",
    ""appform_ph3"": ""Sammeln/Verkaufen/Beides/Noch nicht..."",
    ""appform_q4"": ""Haben Sie die Regeln gelesen und stimmen Sie zu, diese zu befolgen?"",
    ""appform_ph4"": ""Ja/Nein"",
    ""appform_q5"": ""Was besagt Regel #3 in Ihren eigenen Worten?"",
    ""appform_ph5"": ""Regel #3 handelt von..."",
    ""processing"": ""Anfrage wird verarbeitet..."",
    ""appform_success"": ""Erfolg! Bitte gehen Sie zu @1, um auf die Genehmigung zu warten."",
    ""app_welcome"": ""Hey @1, willkommen bei RS Burnt!"",
    ""app_thankyou"": ""Vielen Dank für das Einreichen Ihrer Bewerbung. Ein @1 oder @2 wird sich in Kürze bei Ihnen melden, um Ihnen vollen Zugriff auf den Discord zu gewähren."",
    ""app_avg_all"": ""Durchschnittliche Antwortzeit des Personals (gesamt):"",
    ""app_avg_1hr"": ""Durchschnittliche Antwortzeit des Personals (letzte 1 Stunde):"",
    ""app_avg_nodata"": ""Keine Daten."",
    ""app_avg_stats"": ""Statistiken gefunden"",
    ""app_avg_nostats"": ""Statistiken nicht gefunden"",
    ""app_qa"": ""Fragen/Antworten:"",
    ""app_edit"": ""Wenn Sie Ihre Antworten bearbeiten müssen, klicken Sie auf die Schaltfläche unten"",
    ""app_edit_button"": ""Antworten bearbeiten"",
    ""app_mofify"": ""Die Antwort auf Frage @1 wurde erfolgreich von \""@2\"" in \""@3\"" geändert."",
    ""app_verified"": ""@1 ist jetzt verifiziert. Dieser Kanal wird sich selbst zerstören @2.""
  },
  ""es"": {
    ""verification_hello"": ""Bienvenido a RS Burnt"",
    ""verification_whatoffer"": ""Lo que tenemos para ofrecer"",
    ""verification_offer1"": ""Compra/Venta de Comida Quemada o Artículos que no están en el Mercado."",
    ""verification_offer2"": ""Lista de precios de comida quemada."",
    ""verification_offer3"": ""Discusiones divertidas y eventos de la comunidad."",
    ""verification_offer4"": ""Comunidad diversa y acogedora"",
    ""verification_rules1"": ""Por favor, familiarízate con nuestras @1 antes de enviar una solicitud."",
    ""verification_button"": ""Aplicar"",
    ""verification_q2_error1"": ""¡Error! Por favor, especifica de dónde obtuviste la invitación de Discord."",
    ""verification_q2_error2"": ""Respondiste:"",
    ""verification_q2_error3"": ""Las respuestas aceptadas serán:"",
    ""verification_q2_error4"": ""Nombre del servidor de Discord que proporcionó el enlace"",
    ""verification_q2_error5"": ""Nombre de Discord o nombre en el juego de la persona que te invitó"",
    ""verification_q2_error6"": ""Fuente del enlace (nombre del canal de YouTube, publicación en Reddit, ...)"",
    ""verification_q2_error7"": ""Haz clic en el botón de abajo para intentarlo de nuevo con una respuesta diferente"",
    ""verification_error_alreadyverified"": ""Error: Ya estás verificado."",
    ""verification_error_alreadyopen"": ""Error: Ya tienes una solicitud abierta. (Ver @1)"",
    ""appform_title"": ""Formulario de solicitud"",
    ""appform_en_only"": ""(¡Las respuestas deben estar en inglés!)"",
    ""appform_q1"": ""¿Cuál es tu nombre en el juego de RuneScape?"",
    ""appform_q2"": ""¿Cómo te enteraste de Discord?"",
    ""appform_ph2"": ""Nombre de amigo, canal de YouTube, servidor de Discord (o enlace)"",
    ""appform_q3"": ""¿Coleccionas, revendes o quieres echar un vistazo?"",
    ""appform_ph3"": ""Coleccionar/Revender/Ambos/Todavía no..."",
    ""appform_q4"": ""¿Leíste y estás de acuerdo en seguir las reglas?"",
    ""appform_ph4"": ""Sí/No"",
    ""appform_q5"": ""En tus propias palabras, ¿de qué trata la regla n.º 3?"",
    ""appform_ph5"": ""La regla n.º 3 trata sobre..."",
    ""processing"": ""Procesando solicitud..."",
    ""appform_success"": ""¡Éxito! Por favor, dirígete a @1 para esperar la aprobación."",
    ""app_welcome"": ""¡Hola @1, bienvenido a RS Burnt!"",
    ""app_thankyou"": ""Gracias por enviar una solicitud. Un @1 o @2 se pondrá en contacto contigo en breve para darte acceso completo al Discord."",
    ""app_avg_all"": ""Tiempo promedio de respuesta del personal (total):"",
    ""app_avg_1hr"": ""Tiempo promedio de respuesta del personal (última hora):"",
    ""app_avg_nodata"": ""Sin datos."",
    ""app_avg_stats"": ""Estadísticas encontradas"",
    ""app_avg_nostats"": ""Estadísticas no encontradas"",
    ""app_qa"": ""Preguntas/Respuestas:"",
    ""app_edit"": ""Si necesitas editar tus respuestas, haz clic en el botón de abajo"",
    ""app_edit_button"": ""Editar respuestas"",
    ""app_mofify"": ""La respuesta a la pregunta @1 se ha modificado correctamente de \""@2\"" a \""@3\""."",
    ""app_verified"": ""@1 ahora está verificado. Este canal se autodestruirá @2.""
  }
}"
qfKn04YF,Untitled,maher15146,HTML 5,Wednesday 12th of July 2023 02:17:02 PM CDT,"<!DOCTYPE html>
<html>
<head>
<meta charset=""UTF-8"">
<title>Registration</title>


</head>
<body>
	<div class=""container"">
		<div class=""row"">
			<div>
				<div>
					<div >Registration was successful</div>
				</div>
			</div>
		</div>
	</div>
	<h1>Registration</h1>
	<form >
		<div class=""from-group"">
			<label class=""control-label"" for=""firstName"">First Name</label>
			<input id=""firstName"" class=""form-conrol""  placeholder=""First Name"" required autofocus=""autofocus""> 
			<label class=""control-label"" for=""lastName"">Last Name</label> 
			<input id=""lastName"" class=""form-conrol"" placeholder=""Last Name"" required autofocus=""autofocus"">
			<label class=""control-label"" for=""email"">Email</label> 
			<input id=""email"" class=""form-conrol"" placeholder=""Put your email"" required autofocus=""autofocus"">
			<label class=""control-label"" for=""Password"">Password</label> 
			<input id=""password"" class=""form-conrol"" type=""password"" placeholder=""Give a strong password"" required autofocus=""autofocus"">
		</div>
		<div class = ""form-group"">
			<button type=""submit"" class =""btn-btn-success""> Register</button>
			<span>Already registered? <a href=""#"" >Login Here</a></span>
		</div>
	</form>

</body>
</html>"
qE27sFhK,Python run exe,A_GUES,Python,Wednesday 12th of July 2023 01:53:08 PM CDT,"import subprocess

# replace 'path_to_your_exe_file' with the path to the .exe file you want to run
subprocess.run(['path_to_your_exe_file'], check=True)"
d53jdFam,Python run apk,A_GUES,Python,Wednesday 12th of July 2023 01:47:20 PM CDT,"from adb_shell.adb_device import AdbDeviceTcp, AdbDeviceUsb
from adb_shell.auth.sign_pythonrsa import PythonRSASigner

# Load the private and public keys (you can generate your own keys using the `adb_shell.auth.keygen` function)
with open('path/to/adbkey') as f:
    priv = f.read()
with open('path/to/adbkey.pub') as f:
    pub = f.read()
signer = PythonRSASigner(pub, priv)

# Connect to the device
device = AdbDeviceTcp('192.168.0.222', 5555, default_timeout_s=9.)
device.connect(rsa_keys=[signer], auth_timeout_s=0.1)

# Install an APK
with open('path/to/app.apk', 'rb') as fp:
    device.install(fp)"
677wCZLt,26. Killshot {post de rol},elirosecodes,HTML,Wednesday 12th of July 2023 01:28:31 PM CDT,"<link href=""https://dl.dropboxusercontent.com/scl/fi/hu4oiyor2y6gv0elhdw30/killshot.css?rlkey=vnwxa2ev9pkns8lucfukk7zlc&dl=0"" rel=""stylesheet""><div class=""killshot""><div class=""ks-txt"">shot<br>me<br>baby</div><div class=""ks1""><div class=""ks2""></div></div><div class=""ks3""><div class=""ks3-tl"">kill<span>sh</span>ot</div><div class=""ks3-stl"">Can you make my heart stop</div><div class=""ks3-txt"">
Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec finibus risus ut leo pulvinar, id posuere augue scelerisque. In nulla felis, euismod quis hendrerit sit amet, viverra in velit. Donec vitae ligula sed felis fringilla luctus nec et neque. Vivamus aliquam sem leo. Aliquam accumsan orci quis magna aliquam, nec venenatis massa fermentum. Proin vitae nibh lectus. Nam sapien arcu, vehicula vitae tristique maximus, accumsan vel dui.
</div><div class=""ks3-dt"">bit demonic, all alone staring at my phone</div></div></div><a href=""https://elirosecodes.tumblr.com/""><div class=""gnomo"">elirose</div></a>"
EC0myrnk,Bloxxed Hub - Pilgrammed,ImRealLenny,Lua,Wednesday 12th of July 2023 01:24:00 PM CDT,"--[[
Changelog (12.07.2023):
> Launched (yippie!)
--]]
-- You can use this: loadstring(game:HttpGet((""https://pastebin.com/raw/EC0myrnk""),true))()
-- Instances:

if _G.BHubInjected == true and typeof(_G.ShutdownBHub) == ""function"" then -- prevent from double injection
	_G.ShutdownBHub()
end

_G.BHubInjected = true

local thisBuildVer = ""1.1b""

local gameId = 6735572261

if game.PlaceId ~= gameId and not game:GetService('RunService'):IsStudio() then game.Players.LocalPlayer:Kick('This is Pilgrammed script, dumbo.') end

local ScreenGui = Instance.new(""ScreenGui"")
local bg_main = Instance.new(""Frame"")
local aratio = Instance.new(""UIAspectRatioConstraint"")
local title = Instance.new(""TextLabel"")
local textConstraint = Instance.new(""UITextSizeConstraint"")
local sizeConstraint = Instance.new(""UISizeConstraint"")
local configs = Instance.new(""Frame"")
local UIGridLayout = Instance.new(""UIGridLayout"")
local subtitle = Instance.new(""TextLabel"")
local Assets = Instance.new(""Folder"")
local sectionMain = Instance.new(""TextLabel"")
local textConstraint_2 = Instance.new(""UITextSizeConstraint"")
local sectionSubInput = Instance.new(""Frame"")
local setting = Instance.new(""TextLabel"")
local textConstraint_3 = Instance.new(""UITextSizeConstraint"")
local input = Instance.new(""TextBox"")
local UICorner = Instance.new(""UICorner"")
local sectionSubBoolean = Instance.new(""Frame"")
local setting_2 = Instance.new(""TextLabel"")
local textConstraint_4 = Instance.new(""UITextSizeConstraint"")
local detection = Instance.new(""TextButton"")
local Visuals = Instance.new(""Folder"")
local espGui = Instance.new(""BillboardGui"")
local box = Instance.new(""Frame"")
local hp = Instance.new(""Frame"")
local current = Instance.new(""Frame"")
local name = Instance.new(""TextLabel"")
local bin = Instance.new(""Folder"")
local desc = Instance.new(""Frame"")
local descContent = Instance.new(""TextLabel"")
local textConstraint_5 = Instance.new(""UITextSizeConstraint"")
local NotPaintable = Instance.new(""Folder"")
local ScrollingFrame = Instance.new('ScrollingFrame')
local DropDownBody = Instance.new('Frame')
local DropDownScroll = Instance.new('ScrollingFrame')
local DropDownListLayout = Instance.new('UIListLayout')
local OreESPBillboardGui = Instance.new('BillboardGui')
local OreListGui = Instance.new('TextLabel')
local OreChestGlow = Instance.new('Highlight')

local Active = true

_G.ShutdownBHub = function()
	ScreenGui:Destroy()
	script:Destroy()

	Active = false
end

-- Made it myself cuz converter sucks
local stroke_src = Instance.new('UIStroke')
stroke_src.Color = Color3.fromRGB(166, 166, 166)
stroke_src.ApplyStrokeMode = Enum.ApplyStrokeMode.Border

local strk_parents = {
	sectionMain,
	subtitle,
	title,
	desc,
	bg_main,
	DropDownBody,
}

for i, v in pairs(strk_parents) do
	local stroke_copy = stroke_src:Clone()
	stroke_copy.Parent = v
	stroke_copy.Name = v.Name..'_stroke'
end

stroke_src:Destroy()

--Properties:

ScreenGui.Name = "" ""
ScreenGui.Parent = game.Players.LocalPlayer.PlayerGui
ScreenGui.Enabled = false
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
ScreenGui.DisplayOrder = 999999998
ScreenGui.ResetOnSpawn = false

bg_main.Name = ""bg_main""
bg_main.Parent = ScreenGui
bg_main.AnchorPoint = Vector2.new(0.5, 0.5)
bg_main.BackgroundColor3 = Color3.fromRGB(40, 41, 45)
bg_main.BorderColor3 = Color3.fromRGB(0, 0, 0)
bg_main.BorderSizePixel = 0
bg_main.Position = UDim2.new(0.5, 0, 0.5, 0)
bg_main.Size = UDim2.new(0.61500001, 0, 0.925000012, 0)
bg_main.ZIndex = 3

aratio.Name = ""aratio""
aratio.Parent = bg_main
aratio.AspectRatio = 1.250

title.Name = ""title""
title.Parent = bg_main
title.AnchorPoint = Vector2.new(0.5, 0)
title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
title.BackgroundTransparency = 1.000
title.BorderColor3 = Color3.fromRGB(0, 0, 0)
title.BorderSizePixel = 0
title.Position = UDim2.new(0.5, 0, 0, 0)
title.Size = UDim2.new(1, 0, 0.0500000007, 0)
title.Font = Enum.Font.SourceSans
title.Text = "" Bloxxed Hub - <game_name> - v<ver>""
title.TextColor3 = Color3.fromRGB(166, 166, 166)
title.TextScaled = true
title.TextSize = 14.000
title.TextStrokeTransparency = 0.500
title.TextWrapped = true
title.TextXAlignment = Enum.TextXAlignment.Left

textConstraint.Name = ""textConstraint""
textConstraint.Parent = title
textConstraint.MaxTextSize = 22

sizeConstraint.Name = ""sizeConstraint""
sizeConstraint.Parent = bg_main
sizeConstraint.MaxSize = Vector2.new(404, 325)

configs.Name = ""configs""
configs.Parent = bg_main
configs.AnchorPoint = Vector2.new(0.5, 0.5)
configs.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
configs.BackgroundTransparency = 1.000
configs.BorderColor3 = Color3.fromRGB(0, 0, 0)
configs.BorderSizePixel = 0
configs.Position = UDim2.new(0.5, 0, 0.550000012, 0)
configs.Size = UDim2.new(0.850000024, 0, 0.774999976, 0)
configs.ClipsDescendants = true

UIGridLayout.Parent = ScrollingFrame
UIGridLayout.FillDirection = Enum.FillDirection.Vertical
UIGridLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIGridLayout.CellPadding = UDim2.new(0.200000003, 0, 0, 3)
UIGridLayout.CellSize = UDim2.new(0.400000006, 0, 0.0350000003, 0)

subtitle.Name = ""subtitle""
subtitle.Parent = bg_main
subtitle.AnchorPoint = Vector2.new(0, 1)
subtitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
subtitle.BackgroundTransparency = 1.000
subtitle.BorderColor3 = Color3.fromRGB(0, 0, 0)
subtitle.BorderSizePixel = 0
subtitle.Position = UDim2.new(0, 0, 1, 0)
subtitle.Size = UDim2.new(1, 0, 0.0500000007, 0)
subtitle.Font = Enum.Font.SourceSansBold
subtitle.Text = ""Made by  bloxxylenny on Discord | \""Insert\"" to Show/Hide UI | User ID: <userid>""
subtitle.TextColor3 = Color3.fromRGB(166, 166, 166)
subtitle.TextScaled = true
subtitle.TextSize = 14.000
subtitle.TextWrapped = true

Assets.Name = ""Assets""
Assets.Parent = ScreenGui

sectionMain.Name = ""sectionMain""
sectionMain.Parent = Assets
sectionMain.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
sectionMain.BackgroundTransparency = 1.000
sectionMain.BorderColor3 = Color3.fromRGB(0, 0, 0)
sectionMain.BorderSizePixel = 0
sectionMain.Size = UDim2.new(0.400000006, 0, 0.0350000003, 0)
sectionMain.Visible = false
sectionMain.Font = Enum.Font.SourceSans
sectionMain.Text = ""[section_name]""
sectionMain.TextColor3 = Color3.fromRGB(166, 166, 166)
sectionMain.TextScaled = true
sectionMain.TextSize = 14.000
sectionMain.TextStrokeTransparency = 0.500
sectionMain.TextWrapped = true

textConstraint_2.Name = ""textConstraint""
textConstraint_2.Parent = sectionMain
textConstraint_2.MaxTextSize = 22

sectionSubInput.Name = ""sectionSubInput""
sectionSubInput.Parent = Assets
sectionSubInput.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
sectionSubInput.BackgroundTransparency = 0.950
sectionSubInput.BorderColor3 = Color3.fromRGB(0, 0, 0)
sectionSubInput.BorderSizePixel = 0
sectionSubInput.Size = UDim2.new(0.400000006, 0, 0.0350000003, 0)
sectionSubInput.Visible = false

setting.Name = ""setting""
setting.Parent = sectionSubInput
setting.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
setting.BackgroundTransparency = 1.000
setting.BorderColor3 = Color3.fromRGB(0, 0, 0)
setting.BorderSizePixel = 0
setting.Size = UDim2.new(0.600000024, 0, 1, 0)
setting.Font = Enum.Font.SourceSans
setting.Text = ""settingName:""
setting.TextColor3 = Color3.fromRGB(166, 166, 166)
setting.TextScaled = true
setting.TextSize = 14.000
setting.TextStrokeTransparency = 0.500
setting.TextWrapped = true
setting.TextXAlignment = Enum.TextXAlignment.Left

textConstraint_3.Name = ""textConstraint""
textConstraint_3.Parent = setting
textConstraint_3.MaxTextSize = 20

input.Name = ""input""
input.Parent = sectionSubInput
input.AnchorPoint = Vector2.new(1, 0)
input.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
input.BackgroundTransparency = 0.500
input.BorderColor3 = Color3.fromRGB(0, 0, 0)
input.BorderSizePixel = 0
input.Position = UDim2.new(1, 0, 0, 0)
input.Size = UDim2.new(0.400000006, 0, 1, 0)
input.Font = Enum.Font.SourceSans
input.PlaceholderColor3 = Color3.fromRGB(125, 125, 125)
input.PlaceholderText = ""_placeholder""
input.Text = """"
input.TextColor3 = Color3.fromRGB(166, 166, 166)
input.TextScaled = true
input.TextSize = 14.000
input.TextWrapped = true

UICorner.CornerRadius = UDim.new(0.25, 0)
UICorner.Parent = input

sectionSubBoolean.Name = ""sectionSubBoolean""
sectionSubBoolean.Parent = Assets
sectionSubBoolean.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
sectionSubBoolean.BackgroundTransparency = 0.950
sectionSubBoolean.BorderColor3 = Color3.fromRGB(0, 0, 0)
sectionSubBoolean.BorderSizePixel = 0
sectionSubBoolean.Size = UDim2.new(0.400000006, 0, 0.035000007, 0)
sectionSubBoolean.Visible = false

setting_2.Name = ""setting""
setting_2.Parent = sectionSubBoolean
setting_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
setting_2.BackgroundTransparency = 1.000
setting_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
setting_2.BorderSizePixel = 0
setting_2.Size = UDim2.new(1, 0, 1, 0)
setting_2.Font = Enum.Font.SourceSans
setting_2.Text = ""settingName: boolean""
setting_2.TextColor3 = Color3.fromRGB(166, 166, 166)
setting_2.TextScaled = true
setting_2.TextSize = 14.000
setting_2.TextStrokeTransparency = 0.500
setting_2.TextWrapped = true
setting_2.TextXAlignment = Enum.TextXAlignment.Left

textConstraint_4.Name = ""textConstraint""
textConstraint_4.Parent = setting_2
textConstraint_4.MaxTextSize = 20

detection.Name = ""detection""
detection.Parent = sectionSubBoolean
detection.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
detection.BackgroundTransparency = 1.000
detection.BorderColor3 = Color3.fromRGB(0, 0, 0)
detection.BorderSizePixel = 0
detection.Size = UDim2.new(1, 0, 1, 0)
detection.ZIndex = 2
detection.Font = Enum.Font.SourceSans
detection.Text = """"
detection.TextColor3 = Color3.fromRGB(0, 0, 0)
detection.TextSize = 14.000

Visuals.Name = ""Visuals""
Visuals.Parent = Assets

espGui.Name = ""espGui""
espGui.Parent = Visuals
espGui.Enabled = false
espGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
espGui.Active = true
espGui.AlwaysOnTop = true
espGui.LightInfluence = 1.000
espGui.Size = UDim2.new(4.5, 0, 6, 0)

box.Name = ""box""
box.Parent = espGui
box.AnchorPoint = Vector2.new(0.5, 0.5)
box.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
box.BackgroundTransparency = .9000
box.BorderColor3 = Color3.fromRGB(0, 0, 0)
box.BorderSizePixel = 0
box.Position = UDim2.new(0.5, 0, 0.5, 0)
box.Size = UDim2.new(1, -3, 1, -3)

local b_s = Instance.new('UIStroke')
b_s.Parent = box
b_s.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
b_s.Color = Color3.new(1, 1, 1)
b_s.Name = 'boxStroke'

hp.Name = ""hp""
hp.Parent = espGui
hp.AnchorPoint = Vector2.new(0, 1)
hp.BackgroundColor3 = Color3.fromRGB(166, 0, 0)
hp.BorderColor3 = Color3.fromRGB(0, 0, 0)
hp.BorderSizePixel = 0
hp.Position = UDim2.new(0, 0, 1, 0)
hp.Size = UDim2.new(0.0500000007, 0, 1, 0)

current.Name = ""current""
current.Parent = hp
current.AnchorPoint = Vector2.new(0, 1)
current.BackgroundColor3 = Color3.fromRGB(2, 198, 15)
current.BorderColor3 = Color3.fromRGB(0, 0, 0)
current.BorderSizePixel = 0
current.Position = UDim2.new(0, 0, 1, 0)
current.Size = UDim2.new(1, 0, 0.5, 0)

name.Name = ""name""
name.Parent = espGui
name.AnchorPoint = Vector2.new(0, 1)
name.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
name.BackgroundTransparency = 1.000
name.BorderColor3 = Color3.fromRGB(0, 0, 0)
name.BorderSizePixel = 0
name.Position = UDim2.new(0, 0, 1, 0)
name.Size = UDim2.new(1, 0, 0.200000003, 0)
name.Font = Enum.Font.SourceSansBold
name.Text = ""Dummy\\n0 stds""
name.TextColor3 = Color3.fromRGB(255, 255, 255)
name.TextSize = 14.000
name.TextStrokeTransparency = 0.500
name.RichText = true

bin.Name = ""bin""
bin.Parent = ScreenGui

desc.Name = ""desc""
desc.Parent = ScreenGui
desc.AnchorPoint = Vector2.new(0, 0.5)
desc.BackgroundColor3 = Color3.fromRGB(40, 41, 45)
desc.BorderColor3 = Color3.fromRGB(0, 0, 0)
desc.BorderSizePixel = 0
desc.Position = UDim2.new(0.5, 0, 0.5, 0)
desc.Size = UDim2.new(0, 150, 0, 60)
desc.Visible = false
desc.ZIndex = 5

descContent.Name = ""descContent""
descContent.Parent = desc
descContent.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
descContent.BackgroundTransparency = 1.000
descContent.BorderColor3 = Color3.fromRGB(0, 0, 0)
descContent.BorderSizePixel = 0
descContent.Size = UDim2.new(1, 0, 1, 0)
descContent.Font = Enum.Font.SourceSans
descContent.Text = ""Description""
descContent.TextColor3 = Color3.fromRGB(166, 166, 166)
descContent.TextScaled = true
descContent.TextSize = 14.000
descContent.TextStrokeTransparency = 0.500
descContent.TextWrapped = true
descContent.TextXAlignment = Enum.TextXAlignment.Left

textConstraint_5.Name = ""textConstraint""
textConstraint_5.Parent = descContent
textConstraint_5.MaxTextSize = 22

NotPaintable.Name = ""NotPaintable""
NotPaintable.Parent = ScreenGui

ScrollingFrame.Parent = configs
ScrollingFrame.BackgroundTransparency = 1
ScrollingFrame.Name = 'configScroll'
ScrollingFrame.Size = UDim2.new(1, -2, 1, -2)
ScrollingFrame.Position = UDim2.new(.5, 0, .5, 0)
ScrollingFrame.AnchorPoint = Vector2.new(.5, .5)
ScrollingFrame.ScrollBarThickness = 0
ScrollingFrame.ClipsDescendants = false

DropDownBody.Parent = ScreenGui
DropDownBody.BackgroundColor3 = Color3.fromRGB(40, 41, 45)
DropDownBody.AnchorPoint = Vector2.new(.5, 0)
DropDownBody.Name = 'DropDown'
DropDownBody.Size = UDim2.new(0, ScreenGui.AbsoluteSize.X * .273, 0, ScreenGui.AbsoluteSize.X * .273)
DropDownBody.Visible = false
DropDownBody.ZIndex = 100

DropDownScroll.Parent = DropDownBody
DropDownScroll.BackgroundTransparency = 1
DropDownScroll.Name = 'DropDownScroll'
DropDownScroll.ScrollBarThickness = 0
DropDownScroll.Size = UDim2.new(1, -5, 1, -5)

DropDownListLayout.Parent = DropDownScroll
DropDownListLayout.FillDirection = Enum.FillDirection.Vertical
DropDownListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
DropDownListLayout.Padding = UDim.new(0, 3)

OreESPBillboardGui.Name = 'OreEsp'
OreESPBillboardGui.Parent = Visuals
OreESPBillboardGui.Size = UDim2.new(1, 0, 1, 0)
OreESPBillboardGui.AlwaysOnTop = true
OreESPBillboardGui.Enabled = false

OreListGui.Name = 'List'
OreListGui.BackgroundTransparency = 1
OreListGui.Text = 'Contains : '
OreListGui.Size = UDim2.new(3, 0, 1, 0)
OreListGui.AnchorPoint = Vector2.new(1, 0)
OreListGui.Position = UDim2.new(1, 0, 0, 0)
OreListGui.TextStrokeTransparency = .5
OreListGui.TextColor3 = Color3.new(0.941176, 0.941176, 0.941176)
OreListGui.TextXAlignment = Enum.TextXAlignment.Left
OreListGui.Parent = OreESPBillboardGui

OreChestGlow.Name = 'OreChest'
OreChestGlow.Parent = Visuals
OreChestGlow.OutlineTransparency = 1
OreChestGlow.FillTransparency = .55

-- Scripts:

local function TZVJ_fake_script() -- ScreenGui._main 
	local script = Instance.new('LocalScript', ScreenGui)

	local lc = 'abcdefghijklmnoprstuwxyz'
	local uc = string.upper(lc)
	local nb = '1234567890'

	local prdc = lc..uc..nb
	prdc = string.split(prdc, '')

	repeat
		wait(.1)
	until game:IsLoaded()

	local _, _ = pcall(function()
		loadstring(game:HttpGet((""https://pastebin.com/raw/5GQcwhXe""),true))()
	end)

	local ver: StringValue = game.ReplicatedStorage:WaitForChild('bhver', .5)
	local rs = game:GetService('RunService')

	if ver or rs:IsStudio() then

		local _, _ = pcall(function()
			local _inst = ver
			ver = ver.Value
			_inst:Destroy()
		end)

		if ver == thisBuildVer or rs:IsStudio() then
			local function randomize_string(l: number)

				if not l then
					l = 6
				end

				local r_str = ''

				for i = 1, l do

					r_str ..= prdc[math.random(1, #prdc)]
				end

				return r_str
			end

			local introSgui = Instance.new('ScreenGui', game.Players.LocalPlayer.PlayerGui)
			introSgui.IgnoreGuiInset = true
			introSgui.Name = 'bh_ld::'..tostring(game.Players.LocalPlayer.UserId)..randomize_string(16)..'_intro_nr'
			introSgui.DisplayOrder = ScreenGui.DisplayOrder + 1

			local lb = Instance.new('TextLabel')
			lb.Name = 'nm::'randomize_string(16)
			lb.Parent = introSgui
			lb.Size = UDim2.new(0, 650, 0, 75)
			lb.Font = Enum.Font.Arcade
			lb.Text = '[ PROJECT: Bloxgrammed ]'
			lb.BackgroundTransparency = 1
			lb.AnchorPoint = Vector2.new(.5, .5)
			lb.TextScaled = true
			lb.Position = UDim2.new(.5, 0, 2, 0)
			lb.TextColor3 = Color3.new(0.517647, 0, 0.517647) -- <
			lb.TextStrokeTransparency = .5

			local gradient = Instance.new('UIGradient')
			gradient.Name = 'nm::grad_'randomize_string(6)

			gradient.Color = ColorSequence.new({
				ColorSequenceKeypoint.new(0, Color3.new(1, 1, 1)),
				ColorSequenceKeypoint.new(0.3, Color3.new(1, 1, 1)),
				ColorSequenceKeypoint.new(1, Color3.new(.55, .55, .55))
			})

			gradient.Parent = lb
			gradient.Rotation = 90

			ScreenGui.Enabled = false

			local _ts = game:GetService('TweenService')

			local t_in = _ts:Create(lb, TweenInfo.new(1.5, Enum.EasingStyle.Elastic, Enum.EasingDirection.Out), {
				Position = UDim2.new(.5, 0, .5, 0),
				TextColor3 = Color3.new(1, 0, 1),
			})

			local t_out = _ts:Create(lb, TweenInfo.new(.75, Enum.EasingStyle.Cubic, Enum.EasingDirection.In), {
				Position = UDim2.new(.5, 0, 2, 0),
				TextColor3 = Color3.new(0.517647, 0, 0.517647),
			})

			t_in:Play()
			t_in.Completed:Wait()
			wait(1.5)
			t_out:Play()
			t_out.Completed:Wait()
			introSgui:Destroy()

			wait(.5)

			ScreenGui.Enabled = true

			local function makeMsg(content: string)
				game.StarterGui:SetCore('SendNotification', {
					[""Title""] = 'Bloxxed Hub',
					[""Text""] = content,
					[""Duration""] = 7.5,
					[""Icon""] = 'rbxassetid://14039182429',
				})
			end

			makeMsg('Loaded')

			local player = game.Players.LocalPlayer

			local title = script.Parent.bg_main.title -- dragable shit
			local bg = script.Parent.bg_main

			local nm = 'undefined'

			local _, __ = pcall(function()
				nm = game:GetService(""MarketplaceService""):GetProductInfo(game.PlaceId).Name
			end)

			title.Text = string.gsub(title.Text, '<game_name>', nm)
			title.Text = string.gsub(title.Text, '<ver>', thisBuildVer)
			bg.subtitle.Text = string.gsub(bg.subtitle.Text, '<userid>', tostring(player.UserId))

			local uip = game:GetService('UserInputService')

			local noclipEnabled = false
			local noclipUp = 0

			local overdropdown = false

			local safePrairePos = Vector3.new(860, 9, -365)

			DropDownBody.MouseEnter:Connect(function() overdropdown = true end)
			DropDownBody.MouseLeave:Connect(function() overdropdown = false end)

			player:GetMouse().Button1Down:Connect(function()
				if not overdropdown then DropDownBody.Visible = false end
			end)

			local cheats = {
				[""Visuals""] = {
					[""ESP""] = {false, 'Enable the whole section.'},
					[""Box""] = {false, 'Enable box ESP overlay.'},
					[""HP Display""] = {false, 'Enable healthpoint display.'},
					[""Name Display""] = {false, 'Enable name display.'},
					[""Faster Mode""] = {false, 'ESP Applies only to players in camera field of view. Less responsive but saves some FPS.'},
					[""Ore ESP""] = {false, 'Highlight ore deposits and lists ores belonging to it.'},
					[""Chest ESP""] = {false, 'Highlight chests.'},
				},
				[""Misc""] = {
					[""Noclip""] = {false, 'Makes user fly freely and throughout the walls. Keypad plus/minus to fly up/down.'},
					[""Noclip Keybind""] = {'RightControl', 'Change keybind to toggle the noclip.'},
					[""Noclip Speed""] = {50, 'Determines speed of noclip.', {0, 250}},
					[""Walkspeed Enabled""] = {false, 'Enable walkspeed modifier.'},
					[""Target walkspeed""] = {16, 'Determine target walkspeed.', {1, 125}},
					[""Jump Power Enabled""] = {false, 'Enable jump power modifier.'},
					[""Target jump power""] = {50, 'Determine jump power.', {1, 200}},
					[""Basic Noclip""] = {false, 'Makes You clip through the walls but without flying. On top of that updates server-side player position in real time.'},
					[""Custom FieldOfView""] = {false, 'Enable custom camera FieldOfView.'},
					[""Custom FOV Value""] = {70, 'Value that FOV will be set to if custom FOV setting is enabled.', {30, 120}},
					[""Disable Global Lightning""] = {false, 'Disables Lighting.GlobalShadows.'},
					[""Enable Force ClockTime""] = {false, 'Force ClockTime of choice.'},
					[""Forced ClockTime""] = {12, 'ClockTime that will be forced.'},
				},
				[""Autofarm""] = {
					[""Auto-Mine Ore Deposits""] = {false, 'Enable Auto-Miner. Equip pickaxe of Your choice before enabling this. Will not work if Auto-Chest is enabled.'},
					[""Target Specific Ore""] = {false, 'Make Auto-Miner focus of ore of Your choice.'},
					[""Target Ore""] = {{'Copper', {'Copper', 'Demetal', 'Diamond', 'Ruby', 'Sapphire', 'Emerald', 'Sulfur', 'Tin', 'Iron', 'Zinc'}}, 'Enable Auto-Miner.'},
					[""Auto-Open Chests""] = {false, 'Enable Chest Farm.'},
				},
				[""Safety""] = {
					[""Safzone when Low""] = {false, 'Teleports to praire upon reaching entered healthpoint threshold.'},
					[""Low HP Threshold""] = {{15, {15, 20, 25, 35, 50}}, 'Healthpoint threshold. Reaching it will automatically teleport You to safezone in Praire. (Values in %)'}
				}
			}

			local moveDown = false
			local moveUp = false

			uip.InputBegan:Connect(function(key, gpe)
				if not gpe then

					if key.KeyCode == Enum.KeyCode.Insert then
						script.Parent.Enabled = not script.Parent.Enabled
					elseif key.KeyCode == Enum.KeyCode.KeypadPlus then
						moveUp = true
						print('moveUp true')
					elseif key.KeyCode == Enum.KeyCode.KeypadMinus then
						moveDown = true
						print('moveDown true')
					elseif key.KeyCode == Enum.KeyCode[cheats.Misc[""Noclip Keybind""][1]] then
						if cheats.Misc.Noclip[1] then
							noclipEnabled = not noclipEnabled

							local state = 'enabled'

							if not noclipEnabled then
								state = 'disabled'
							end

							makeMsg('Noclip '..state)

							if not noclipEnabled then
								local selfRoot: BasePart = player.Character:FindFirstChild('HumanoidRootPart')

								if selfRoot then
									selfRoot.Anchored = false
								end
							end
						end
					end
				end
			end)

			uip.InputEnded:Connect(function(key, gpe)
				if not gpe then

					if key.KeyCode == Enum.KeyCode.KeypadPlus then
						moveUp = false
						print('moveUp false')
					elseif key.KeyCode == Enum.KeyCode.KeypadMinus then
						moveDown = false
						print('moveDown false')
					end
				end
			end)

			local currentScheme = 1

			local colorSchemes = {
				[1] = {
					[""Title""] = 'Fog',
					[""Primary""] = Color3.fromRGB(40, 41, 45),
					[""Secondary""] = Color3.fromRGB(166, 166, 166),
				},
				[2] = {
					[""Title""] = 'Ultraviolet',
					[""Primary""] = Color3.fromRGB(56, 32, 61),
					[""Secondary""] = Color3.fromRGB(199, 66, 223),
				},
				[3] = {
					[""Title""] = 'Storm',
					[""Primary""] = Color3.fromRGB(18, 20, 45),
					[""Secondary""] = Color3.fromRGB(29, 100, 194),
				},
				[4] = {
					[""Title""] = 'Moon',
					[""Primary""] = Color3.fromRGB(25, 30, 35),
					[""Secondary""] = Color3.fromRGB(183, 108, 26),
				},
				[5] = {
					[""Title""] = 'Bloody',
					[""Primary""] = Color3.fromRGB(25, 0, 0),
					[""Secondary""] = Color3.fromRGB(199, 0, 3),
				},
				[6] = {
					[""Title""] = 'Blackout',
					[""Primary""] = Color3.fromRGB(0, 0, 0),
					[""Secondary""] = Color3.fromRGB(225, 225, 225),
				},
				[7] = {
					[""Title""] = 'Old Fart',
					[""Primary""] = Color3.fromRGB(27, 0, 0),
					[""Secondary""] = Color3.fromRGB(255, 255, 255),
				},
				[8] = {
					[""Title""] = 'Hacker',
					[""Primary""] = Color3.fromRGB(0, 0, 0),
					[""Secondary""] = Color3.fromRGB(0, 255, 0),
				},
				[9] = {
					[""Title""] = ""Bloxxy's Fav"",
					[""Primary""] = Color3.fromRGB(30, 30, 30),
					[""Secondary""] = Color3.fromRGB(255, 0, 230),
				},
				[10] = {
					[""Title""] = ""Sakpog"",
					[""Primary""] = Color3.fromRGB(29, 0, 0),
					[""Secondary""] = Color3.fromRGB(0, 95, 248),
				},
			}

			local offset = UDim2.new(0, 0, 0, 0)

			local hoverOverDraggable = false
			local dragging = false

			local smoothing_v2 = Vector2.new()

			title.MouseEnter:Connect(function() hoverOverDraggable = true end)
			title.MouseLeave:Connect(function() hoverOverDraggable = false end)

			local mouse = player:GetMouse()

			local aimbotKeyDown = false

			mouse.Button2Down:Connect(function() aimbotKeyDown = true end)
			mouse.Button2Up:Connect(function() aimbotKeyDown = false end)

			mouse.Button1Down:Connect(function()
				if hoverOverDraggable then
					dragging = true
				end
			end)

			mouse.Button1Up:Connect(function() dragging = false end)

			for sectionName: string, _settings: {any} in pairs(cheats) do
				local section = script.Parent.Assets.sectionMain:Clone()
				section.Text = '['..sectionName..']'
				section.Parent = ScrollingFrame

				section.Visible = true

				for settingName: string, _setting_config: {any} in pairs(_settings) do
					local deafultValue: boolean | string | number = _setting_config[1]
					local desc: string = _setting_config[2] or '...'
					local clamp: {number}? = _setting_config[3]

					local tof = typeof(deafultValue)

					local settingFrame

					if tof == 'string' or tof == 'number' then
						local setting = script.Parent.Assets.sectionSubInput:Clone()
						setting.setting.Text = settingName..':'
						setting.input.PlaceholderText = tostring(deafultValue)
						setting.Parent = ScrollingFrame
						settingFrame = setting

						setting.Visible = true

						local focused = false

						setting.input.Focused:Connect(function()
							focused = true
						end)

						setting.input.FocusLost:Connect(function()
							if focused then
								focused = false

								if setting.input.Text ~= '' then

									if tof == 'number' then
										local newVal = tonumber(setting.input.Text)

										if clamp then
											newVal = math.max(clamp[1], math.min(newVal, clamp[2]))
										end

										setting.input.PlaceholderText = tostring(newVal)
										cheats[sectionName][settingName][1] = newVal
									else
										setting.input.PlaceholderText = setting.input.Text
										cheats[sectionName][settingName][1] = setting.input.Text
									end

									makeMsg(settingName..' has been set to '..tostring(cheats[sectionName][settingName][1]))

									setting.input.Text = ''
								end
							end
						end)
					elseif tof == 'boolean' then
						local setting = script.Parent.Assets.sectionSubBoolean:Clone()
						setting.setting.Text = settingName..': '..tostring(deafultValue)
						setting.Parent = ScrollingFrame

						settingFrame = setting

						setting.detection.MouseButton1Click:Connect(function()
							cheats[sectionName][settingName][1] = not cheats[sectionName][settingName][1]

							setting.setting.Text = settingName..': '..tostring(cheats[sectionName][settingName][1])
							makeMsg(settingName..' has been set to '..tostring(cheats[sectionName][settingName][1]))
						end)

						setting.Visible = true
					else
						local currentValue: string | number = deafultValue[1]
						local list: {string | number} = deafultValue[2]

						local setting = sectionSubBoolean:Clone()
						setting.setting.Text = settingName..': '..tostring(currentValue)
						setting.Parent = ScrollingFrame

						setting.detection.MouseButton1Click:Connect(function()
							DropDownBody.Visible = true
							DropDownBody.Position = UDim2.new(0, mouse.X, 0, mouse.Y)

							for i, v in ipairs(DropDownScroll:GetChildren()) do
								if v:IsA('TextButton') then
									v:Destroy()
								end
							end

							table.sort(list, function(a, b) return a < b end)

							for entryNumber, value in ipairs(list) do
								local tb = Instance.new('TextButton')
								tb.Text = '<b>'..tostring(value)..'</b>'
								tb.Name = 'ValueChose:'..tostring(value)
								tb.Parent = DropDownScroll
								tb.BackgroundTransparency = 1
								tb.RichText = true
								tb.Size = UDim2.new(1, 0, .033, 0)
								tb.TextScaled = true
								tb.TextColor3 = Color3.new(1, 1, 1)
								tb.TextStrokeTransparency = .5

								tb.MouseButton1Click:Connect(function()
									cheats[sectionName][settingName][1][1] = value
									DropDownBody.Visible = false

									setting.setting.Text = settingName..': '..tostring(value)
								end)
							end
						end)

						setting.Visible = true
					end

					if settingFrame then
						settingFrame.MouseEnter:Connect(function()
							script.Parent.desc.Position = UDim2.new(0, mouse.X, 0, mouse.Y + 36)
							script.Parent.desc.Visible = true

							script.Parent.desc.descContent.Text = desc
						end)

						settingFrame.MouseLeave:Connect(function()
							script.Parent.desc.Visible = false
						end)
					end
				end
			end

			local colorschemeChanger = script.Parent.Assets.sectionSubBoolean:Clone()
			colorschemeChanger.Parent = ScrollingFrame
			colorschemeChanger.Visible = true

			colorschemeChanger.setting.Text = 'Color Scheme: '..colorSchemes[currentScheme].Title

			local changeColor = false

			colorschemeChanger.detection.MouseButton1Click:Connect(function()

				if not changeColor then
					changeColor = true
					currentScheme += 1

					if not colorSchemes[currentScheme] then
						currentScheme = 1
					end

					colorschemeChanger.setting.Text = 'Color Scheme: '..colorSchemes[currentScheme].Title

					wait(.5)
					changeColor = false
				end
			end)

			local cam = workspace.CurrentCamera

			local function get_nearest_player()
				local maxDist = cheats[""""]
				local target = nil

				for _, plr in ipairs(game.Players:GetPlayers()) do

					local character = plr.Character

					if character then

						if character ~= player.Character then
							local root: BasePart, selfRoot: BasePart = character:FindFirstChild('HumanoidRootPart'), player.Character:FindFirstChild('HumanoidRootPart')
							local hum = character:FindFirstChildWhichIsA('Humanoid')

							if root and selfRoot and hum then

								local mag = (root.Position - selfRoot.Position).Magnitude

								if mag < maxDist and hum.Health > 0 then

									local pos_on_screen, onScreen = cam:WorldToScreenPoint(root.Position)

									if onScreen then

										local mouseV2 = Vector2.new(mouse.X, mouse.Y + 36)

										pos_on_screen = Vector2.new(pos_on_screen.X, pos_on_screen.Y)

										local scr_mag = (mouseV2 - pos_on_screen).Magnitude

										if scr_mag <= cheats[""PVP""][""Aimbot FOV""][1][1] and cheats[""PVP""][""FOV Based""][1] or not cheats[""PVP""][""FOV Based""][1] then

											if plr.Team ~= player.Team or player.Neutral or cheats.Misc[""Ignore Teams""][1] then

												if not cheats.Misc[""Ignore Friends""] or cheats.Misc[""Ignore Friends""] and not plr:IsFriendsWith(player.UserId) then
													if not character:FindFirstChildWhichIsA('ForceField') or cheats.Visuals[""Ignore Players with ForceField""][1] then

														local canAimAt = true

														if cheats[""PVP""][""Visibility Check""][1] then
															local rp = RaycastParams.new()
															rp.IgnoreWater = true
															rp.FilterType = Enum.RaycastFilterType.Exclude
															rp.FilterDescendantsInstances = {player.Character, plr.Character}
															rp.RespectCanCollide = true

															local results = workspace:Raycast(cam.CFrame.Position, root.Position, rp)

															if results then canAimAt = false end
														end

														if canAimAt then
															maxDist = mag
															target = character
														end
													end
												end
											end
										end
									end
								end
							end
						end
					end
				end

				return target
			end

			local function getNearestOre()
				local targetOreName = nil

				local maxDist = math.huge
				local targetOrePart: Part = nil

				if cheats.Autofarm[""Target Specific Ore""][1] then
					targetOreName = cheats.Autofarm[""Target Ore""][1][1]
				end

				print(targetOreName)

				local ores: Folder = workspace:FindFirstChild('Ores')

				if ores then

					local oreHolders: {Part} = {}

					for i, oreFolder: Folder in ipairs(ores:GetChildren()) do
						for i, oreModel: Model in ipairs(oreFolder:GetChildren()) do

							local part: Part = oreModel:FindFirstChild('Part')

							if part then table.insert(oreHolders, part) end
						end
					end

					for i, orePart in ipairs(oreHolders) do

						if orePart:FindFirstChild(tostring(targetOreName)) or not targetOreName then

							local selfRoot: BasePart = player.Character:FindFirstChild('HumanoidRootPart')

							if selfRoot then

								local mag = (selfRoot.Position - orePart.Position).Magnitude

								if mag < maxDist then

									maxDist = mag
									targetOrePart = orePart
								end
							end
						end
					end
				end

				return targetOrePart
			end

			local function getNearestChestPrompt()
				local maxDist = math.huge
				local targetPrompt: ProximityPrompt = nil
				local targetChestRoot: BasePart = nil

				local chestsFolder: Folder = workspace:FindFirstChild('Chests')

				if chestsFolder then

					for i, chestModel: Model in ipairs(chestsFolder:GetChildren()) do

						local selfRoot: BasePart = player.Character:FindFirstChild('HumanoidRootPart')
						local chestRoot: BasePart = chestModel:FindFirstChild('Root')

						print(selfRoot, chestRoot)

						if selfRoot and chestRoot then

							local mag = (selfRoot.Position - chestRoot.Position).Magnitude

							if mag < maxDist then

								maxDist = mag

								print('end')

								targetChestRoot = chestRoot
								targetPrompt = chestModel:FindFirstChildWhichIsA('ProximityPrompt')
							end
						end
					end
				end

				return targetPrompt, targetChestRoot
			end

			-- farm
			local oreMineUpdate = 0.0
			local chestOpenUpdate = 0.0

			local espUpdate = 0.0

			game:GetService('RunService').RenderStepped:Connect(function(delta)
				if not Active then return end
				ScreenGui.Name = randomize_string(24)

				local act_scheme = colorSchemes[currentScheme]

				if changeColor then
					for _, v: Instance in ipairs(script.Parent:GetDescendants()) do
						if not v:FindFirstAncestor('NotPaintable') and not v:FindFirstAncestor('Assets') and not v:FindFirstAncestor('bin') then
							if v:IsA('Frame') then
								v.BackgroundColor3 = v.BackgroundColor3:Lerp(act_scheme.Primary, .15)

								if v.BackgroundTransparency > 0 then
									local r, g, b = act_scheme.Secondary.R, act_scheme.Secondary.G, act_scheme.Secondary.B

									v.BackgroundColor3 = Color3.fromRGB(r - 55, g - 55, b - 55)
								end
							elseif v:IsA('UIStroke') then
								v.Color = v.Color:Lerp(act_scheme.Secondary, .15)
							elseif v:IsA('TextLabel') or v:IsA('TextBox') then
								v.TextColor3 = v.TextColor3:Lerp(act_scheme.Secondary, .15)
							end
						end
					end
				end

				smoothing_v2 = smoothing_v2:Lerp(Vector2.new(mouse.X, mouse.Y + offset.Y.Offset), .1)

				if dragging then
					bg.Position = UDim2.new(0, smoothing_v2.X, 0, smoothing_v2.Y, 0)
				else
					offset = UDim2.new(0, title.Position.X.Offset, 0, title.Position.Y.Offset + (.5 * bg_main.AbsoluteSize.Y))
				end

				-- cheats

				-- farm

				chestOpenUpdate += delta				
				oreMineUpdate += delta

				if chestOpenUpdate >= .25 then
					chestOpenUpdate = 0

					if cheats.Autofarm[""Auto-Open Chests""][1] then

						local targetPrompt, targetRoot = getNearestChestPrompt()

						if targetPrompt and targetRoot then

							if targetPrompt.Enabled then

								if player.Character then

									local selfRoot: BasePart = player.Character:FindFirstChild('HumanoidRootPart')

									if selfRoot then

										selfRoot.CFrame = CFrame.new(targetRoot.Position + Vector3.new(0, 2, 0))

										spawn(function()
											targetPrompt:InputHoldBegin()
											wait(.1)
											targetPrompt:InputHoldEnd()
										end)
									end
								end
							end
						end
					end
				end

				if oreMineUpdate >= .1 then
					oreMineUpdate = 0

					if cheats.Autofarm[""Auto-Mine Ore Deposits""][1] and not cheats.Autofarm[""Auto-Open Chests""][1] then

						local targetOrePart: BasePart = getNearestOre()
						print(targetOrePart)

						if targetOrePart then

							local t_pos = targetOrePart.CFrame.Position - Vector3.new(2.25, 0, 0)

							local t_cf = CFrame.new(t_pos) * CFrame.lookAt(t_pos, targetOrePart.Position).Rotation

							if player.Character then

								local selfRoot: BasePart = player.Character:FindFirstChild('HumanoidRootPart')

								if selfRoot then

									selfRoot.CFrame = t_cf

									local tool = player.Character:FindFirstChildWhichIsA('Tool')

									if tool then

										if tool.Name ~= string.gsub(tool.Name, 'Pickaxe', '') then -- tool is a pickaxe

											local slash: RemoteEvent = tool:FindFirstChild('Slash')

											if slash then

												local args = {
													[1] = 1,
												}

												slash:FireServer(unpack(args))
											end
										end
									end
								end
							end
						end
					end
				end

				-- safety

				if cheats.Safety[""Safzone when Low""][1] then

					local char = player.Character

					if char then

						local hum = char:FindFirstChildWhichIsA('Humanoid')
						local selfRoot: BasePart = char:FindFirstChild('HumanoidRootPart')

						if hum then

							local ratio = hum.Health / hum.MaxHealth * 100

							local threshold = cheats.Safety[""Low HP Threshold""][1][1]

							if ratio <= threshold then

								selfRoot.CFrame = CFrame.new(safePrairePos)
							end
						end
					end
				end

				-- esp

				if cheats.Misc['Enable Force ClockTime'][1] then
					game.Lighting.ClockTime = cheats.Misc[""Forced ClockTime""][1]
				end

				espUpdate += delta

				if espUpdate >= .1 then -- update
					espUpdate = 0.0

					for i, v in ipairs(script.Parent.bin:GetChildren()) do
						v:Destroy()
					end

					if cheats.Visuals.ESP[1] then

						local ores: Folder = workspace:FindFirstChild('Ores')
						local chests: Folder = workspace:FindFirstChild('Chests')

						if ores then

							if cheats.Visuals[""Ore ESP""][1] then

								for i, oreFolder: Folder in ipairs(ores:GetChildren()) do

									for i, oreModel: Model in ipairs(oreFolder:GetChildren()) do

										local _, onScreen = cam:WorldToScreenPoint(oreModel:FindFirstChild('Part').Position)

										if cheats.Visuals[""Faster Mode""][1] and onScreen or not cheats.Visuals[""Faster Mode""][1] then

											local glow = OreChestGlow:Clone()
											glow.Parent = bin
											glow.Adornee = oreModel
											glow.FillColor = Color3.new(1, 0, 0)

											local esp = OreESPBillboardGui:Clone()
											esp.Parent = bin
											esp.Adornee = oreModel
											esp.Enabled = true

											local part: BasePart = oreModel:FindFirstChild('Part')

											if part then

												for i, orePart: BasePart in ipairs(part:GetChildren()) do

													esp.List.Text ..= orePart.Name..'; '
												end
											end
										end
									end
								end
							end
						end

						if chests then

							if cheats.Visuals[""Chest ESP""][1] then

								for i, chestModel: Model in ipairs(chests:GetChildren()) do

									local _, onScreen = cam:WorldToScreenPoint(chestModel:FindFirstChild('Root').Position)

									if cheats.Visuals[""Faster Mode""][1] and onScreen or not cheats.Visuals[""Faster Mode""][1] then

										local chestGlow = OreChestGlow:Clone()
										chestGlow.Parent = bin
										chestGlow.Adornee = chestModel
										chestGlow.FillColor = Color3.new(.92, .92, 0)
									end
								end
							end
						end

						for i, v in ipairs(game.Players:GetPlayers()) do
							local character = v.Character

							if character then

								if character ~= player.Character then

									local root: BasePart = character:FindFirstChild('HumanoidRootPart')

									if root then

										local _, onScreen = cam:WorldToScreenPoint(root.Position)

										if onScreen and cheats.Visuals[""Faster Mode""][1] or not cheats.Visuals[""Faster Mode""][1] then

											local gui = script.Parent.Assets.Visuals.espGui:Clone()
											gui.Parent = script.Parent.bin
											gui.Adornee = root

											gui.Enabled = true

											local magnitude = 0

											local selfRoot: BasePart = player.Character:FindFirstChild('HumanoidRootPart')

											if selfRoot then
												magnitude = (root.Position - selfRoot.Position).Magnitude
												magnitude = math.round(magnitude * 50) / 50
											end

											gui.box.Visible = cheats.Visuals.Box[1]
											gui.hp.Visible = cheats.Visuals[""HP Display""][1]
											gui.name.Visible = cheats.Visuals['Name Display'][1]

											local humanoid = character:FindFirstChildWhichIsA('Humanoid')

											local add = ''

											if character:FindFirstChildWhichIsA('ForceField') then
												add = '\n<font color=""#ff0000"">(Immune)</font>'
											end

											gui.name.Text = '<displayname> (@<username>)\n<distance> stds'..add

											gui.name.Text = string.gsub(gui.name.Text, '<displayname>', v.DisplayName)
											gui.name.Text = string.gsub(gui.name.Text, '<username>', v.Name)
											gui.name.Text = string.gsub(gui.name.Text, '<distance>', tostring(magnitude))

											if humanoid then
												gui.hp.current.Size = UDim2.new(1, 0, humanoid.Health / humanoid.MaxHealth, 0)
											end
										end
									end
								end
							end
						end
					end
				end

				-- noclip

				if cheats.Misc.Noclip[1] and noclipEnabled then

					local selfHum = player.Character:FindFirstChildWhichIsA('Humanoid')

					if selfHum then

						local moveDir = selfHum.MoveDirection
						local selfRoot: BasePart = player.Character:FindFirstChild('HumanoidRootPart')

						if selfRoot then
							selfRoot.Anchored = true

							local moveMultiplier = 0

							if moveUp then
								moveMultiplier += 1
							end

							if moveDown then
								moveMultiplier -= 1
							end

							local v3 = Vector3.new(0, cheats.Misc[""Noclip Speed""][1] * delta * moveMultiplier)

							selfRoot.CFrame = CFrame.new(selfRoot.Position + (moveDir * cheats.Misc[""Noclip Speed""][1] * delta) + v3) * cam.CFrame.Rotation
						end
					end
				end

				-- other visuals

				if cheats.Misc[""Custom FieldOfView""][1] then
					cam.FieldOfView = cheats.Misc[""Custom FOV Value""][1] or 70
				end

				game.Lighting.GlobalShadows = not cheats.Misc[""Disable Global Lightning""][1]

				-- movement

				local s_char = player.Character

				if s_char then

					local s_hum = s_char:FindFirstChildWhichIsA('Humanoid')

					if s_hum then

						if cheats.Misc[""Walkspeed Enabled""][1] then
							local t_ws = cheats.Misc[""Target walkspeed""][1] or 16

							s_hum.WalkSpeed = t_ws
						end

						if cheats.Misc[""Jump Power Enabled""][1] then
							local t_jp = cheats.Misc[""Target jump power""][1] or 50

							s_hum.UseJumpPower = true
							s_hum.JumpPower = t_jp
						end
					end
				end

				for i, v in ipairs(player.Character:GetChildren()) do

					if v:IsA('BasePart') then

						v.CanCollide = not cheats.Misc[""Basic Noclip""][1]

						if v.CanCollide then
							if v.Name ~= 'HumanoidRootPart' and v.Name ~= 'Head' then
								v.CanCollide = false
							end
						end
					end
				end
			end)
		else
			game.Players.LocalPlayer:Kick(""[BHUB]:: This script's version is outdated! Get new version here: https://pastebin.com/a15ezPaB"")
		end
	else
		game.Players.LocalPlayer:Kick(""[BHUB]:: Couldn't fetch script's version"")
	end
end
coroutine.wrap(TZVJ_fake_script)()"
FwAjuHjk,护盾设置（采矿用）,jaklsfjlsak,Lua,Wednesday 12th of July 2023 01:19:33 PM CDT,"--- detects if there even is a force field attached
local shield = peripheral.find(""warpdriveForceFieldProjector"")

if not shield then
	print(""No Force Field Projector Connected."")
end

if shield.isInterfaced() == false then
    print(""No Computer Interface Upgrade Installed."")
end

local _, upgrades = shield.getUpgrades()
---

--- this function is really janky but I don't want to make it better
function getRange()
    if upgrades:match(""1/4 x Range"") then
        return 1
	elseif upgrades:match(""2/4 x Range"") then
        return 2
    elseif upgrades:match(""3/4 x Range"") then
        return 3
    elseif upgrades:match(""4/4 x Range"") then
        return 4
    elseif upgrades:match(""0/4 x Range"") then
        return 0
    end
end

Size = getRange() * 16

function getTranslation()
    if upgrades:match(""1/1 x Translation"") then
        return true
    end
end

---
function freq()
	print(""Input frequency (use 0 for no change): "")
	local input = tonumber(read())
	if input > 0 then
		shield.beamFrequency(input)
		print(""Frequency has been changed to "" ..input)
    end
end

function scale()
    print(""Input the amount of blocks you would like the Force Field to be wide on the X axis, the max and default is "" ..Size*2+1)
	sx = ((read() / 2) -1) / Size
    --print(sx)
    print(""Input the amount of blocks you would like the Force Field to be wide on the Y axis, the max and default is "" ..Size*2+1)
	sy = ((read() / 2) -1) / Size
    --print(sy)
    print(""Input the amount of blocks you would like the Force Field to be wide on the Z axis, the max and default is "" ..Size*2+1)
	sz = ((read() / 2) -1) / Size
    --print(sz)
    shield.max(sx, sy, sz)
    --print(shield.max())
    shield.min(-sx, -sy, -sz)
    --print(shield.min())
    print(""Shield scale has been changed accordingly"")
end

freq()
scale()"
xibCGUcM,Twinkie's Docking Bay v1.1,LtTwinkie,C#,Wednesday 12th of July 2023 01:17:57 PM CDT,"/*
 * Twinkie Industries™ Automation Presents
 * Docking Bay Automation v1.1
 * 
 * 
 * This script will allow you to set up docking bays with vents and lights that will operate properly with a single button press or sensor trigger.
 * 
 * On the vent and any lights add the following to CustomData
 * [DockingBay]
 * Name=dockingbayname
 * 
 * Also add it to the doors but include if the door is the outer bay door or not. Other doors will be closed and disabled while the outer doors are open.
 * IsOuterDoor=true
 * 
 * When you run the script using the name of the docking bay as the argument it will properly cycle the bay.
 */

// SETTINGS ---------------------------------------------------------------------------------------------------

// If you set a value for GRID_NAME, each block will require it in the name. This is used to prevent blocks from
// other grids being added.
public const string GRID_NAME = """";

// This timeout prevents the docking bay getting stuck because the vent can't depressurize. For example, if there is
// no free space in an oxygen tank or no oxygen tank connected the vent won't be able to remove the air.
public const double VENT_TIMEOUT_SECONDS = 20.0;

// END SETTINGS. DO NOT EDIT BELOW ----------------------------------------------------------------------------

private Dictionary<string, DockingBay> _bays = new Dictionary<string, DockingBay>();
private List<string> _invalidBays = new List<string>();

public Program()
{
    if (!string.IsNullOrWhiteSpace(Storage))
        Load();

    Refresh();

    Runtime.UpdateFrequency = UpdateFrequency.Update100;
}

public void Main(string argument, UpdateType updateSource)
{
    if (_invalidBays.Count != 0)
    {
        Echo(""Invalid docking bays:"");
        foreach (string bay in _invalidBays)
        {
            Echo(bay);
        }
    }

    if (string.IsNullOrWhiteSpace(argument))
    {
        // Regular update loop

        bool runFast = false;
        foreach (KeyValuePair<string, DockingBay> bay in _bays)
        {
            bay.Value.Update(Echo, bay.Key);

            if (bay.Value.State != DockingBay.BayState.Idle)
                runFast = true;
        }

        Runtime.UpdateFrequency = runFast ? UpdateFrequency.Update10 : UpdateFrequency.Update100;
    }
    else if (StringUtil.Equality(argument, ""refresh""))
    {
        // Refresh command
        Refresh();
    }
    else if (_bays.ContainsKey(argument.ToLowerInvariant()))
    {
        // Cycle command
        Echo($""Cycling docking bay: {argument}"");
        _bays[argument.ToLowerInvariant()].Cycle();
        Save();

        Runtime.UpdateFrequency = UpdateFrequency.Update10;
    }
    else
    {
        Echo($""Unknown argument {argument}"");
    }
}

private void Refresh()
{
    foreach (var bay in _bays.Values)
    {
        bay.Clear();
    }

    var blocks = new List<IMyTerminalBlock>();
    GridTerminalSystem.GetBlocksOfType(blocks,
        block => StringUtil.Contains(block.CustomName, GRID_NAME) && CustomData.HasSection(block));

    foreach (var block in blocks)
    {
        CustomData data;
        if (!CustomData.TryGetData(block, Echo, out data))
            continue;

        string name = data.Name.ToLowerInvariant();

        DockingBay bay;
        if (!_bays.TryGetValue(name, out bay))
        {
            _bays[name] = bay = new DockingBay();
        }

        bay.Add(block, data);
    }

    foreach (KeyValuePair<string, DockingBay> bay in _bays)
    {
        if (!bay.Value.IsValid)
        {
            _invalidBays.Add(bay.Key);
            _bays.Remove(bay.Key);
        }
    }

    foreach (KeyValuePair<string, DockingBay> bay in _bays)
    {
        Echo($""Resettings docking bay: {bay.Key}"");
        bay.Value.Reset(Echo);
    }

    Save();
}

public void Save()
{
    var sb = new StringBuilder();
    sb.Append($""{_bays.Count};"");
    foreach (KeyValuePair<string, DockingBay> bay in _bays)
    {
        sb.Append($""{bay.Key};"");
        sb.Append($""{bay.Value.Open};"");
    }
    Storage = sb.ToString();
}

private void Load()
{
    string[] s = Storage.Split(';');
    int pos = 0;

    int count = int.Parse(s[pos++]);
    for (int i = 0; i < count; i++)
    {
        string name = s[pos++];
        bool isOpen = bool.Parse(s[pos++]);

        _bays.Add(name, new DockingBay(isOpen));
    }

    Storage = null;
}

public class CustomData
{
    private const string DOCKING_BAY = ""DockingBay"";
    private const string NAME = ""Name"";
    private const string IS_OUTER_DOOR = ""IsOuterDoor"";

    public MyIni Ini { get; } = new MyIni();

    public string Name => Get(NAME).ToString();
    public bool IsOuterDoor => Get(IS_OUTER_DOOR).ToBoolean();

    public CustomData(IMyTerminalBlock block)
    {
        MyIniParseResult parseResult;
        if (!Ini.TryParse(block.CustomData, out parseResult))
        {
            throw new Exception($""Failed to parse ini {parseResult}"");
        }

        Check(NAME);

        if (block is IMyDoor)
            Check(IS_OUTER_DOOR);
    }

    public static bool TryGetData(IMyTerminalBlock block, Action<string> echo, out CustomData data)
    {
        try
        {
            data = new CustomData(block);
        }
        catch (Exception e)
        {
            echo?.Invoke(e.Message);
            data = null;
            return false;
        }

        return true;
    }

    public static bool HasSection(IMyTerminalBlock block)
    {
        return MyIni.HasSection(block.CustomData, DOCKING_BAY);
    }

    public MyIniValue Get(string key) => Ini.Get(DOCKING_BAY, key);

    private void Check(string entry)
    {
        var nameResult = Get(entry);
        if (nameResult.IsEmpty)
        {
            string message = $""Can't find {entry} in CustomData"";
            throw new Exception(message);
        }
    }
}

public class DockingBay
{
    private DateTime _nextAction;

    public enum BayState
    {
        /// <summary> Setting doors, vents, and lights to the current bay condition </summary>
        Resetting,

        /// <summary> Nothing happening </summary>
        Idle,

        /// <summary> Waiting for the door to close </summary>
        Closing,

        /// <summary> Waiting for venting </summary>
        Venting,

        /// <summary> Waiting for the door to open </summary>
        Opening,
    }
    public BayState State { get; private set; }

    public bool Open { get; private set; }
    private List<Door> OuterDoors { get; } = new List<Door>();
    private List<Door> InnerDoors { get; } = new List<Door>();
    private List<Vent> Vents { get; } = new List<Vent>();
    private List<Light> Lights { get; } = new List<Light>();

    public bool IsValid => OuterDoors.Count != 0 && Vents.Count != 0;

    public DockingBay() { }

    public DockingBay(bool open)
    {
        Open = open;
    }

    public void Update(Action<string> echo, string name)
    {
        if (State == BayState.Idle)
        {
            return;
        }

        // Un-timed updates
        bool isTimedOut = DateTime.UtcNow > _nextAction;
        if (State == BayState.Venting)
        {
            if (Open && Vent.AllDepressurized(Vents) ||
                !Open && Vent.AllPressurized(Vents) ||
                isTimedOut) // timeout
            {
                OpenDoors();
                RefreshLights();

                string bayState = Open ? ""Opening"" : ""Unlocking"";
                string condition = isTimedOut ? "" (Timed Out)"" : """";
                echo($""{bayState} docking bay: {name}{condition}"");

                State = BayState.Opening;
            }

            return;
        }
        else if (State == BayState.Resetting)
        {
            if (Open && Vent.AllDepressurized(Vents) ||
                !Open && Vent.AllPressurized(Vents) ||
                isTimedOut)
            {
                PowerOff();
                echo($""Docking bay reset: {name}"");
                State = BayState.Idle;
            }
        }

        if (DateTime.UtcNow < _nextAction)
            return;

        // Timed updates
        switch (State)
        {
            case BayState.Closing:
                ActivateVents();
                RefreshLights();
                PowerOff();
                echo($""Venting docking bay: {name}"");
                State = BayState.Venting;
                break;

            case BayState.Opening:
                RefreshLights();
                PowerOff();
                string bayState = Open ? ""opened"" : ""closed"";
                echo($""Docking bay {bayState}: {name}"");
                State = BayState.Idle;
                break;
        }
    }

    public void Cycle()
    {
        if (State != BayState.Idle)
            return;

        Open = !Open;

        CloseDoors();
        RefreshLights();
        State = BayState.Closing;
    }

    public void Add(IMyTerminalBlock block, CustomData data)
    {
        if (block is IMyDoor)
        {
            if (data.IsOuterDoor)
            {
                OuterDoors.Add(new Door(block as IMyDoor));
            }
            else
            {
                InnerDoors.Add(new Door(block as IMyDoor));
            }
        }
        else if (block is IMyAirVent)
        {
            Vents.Add(new Vent(block as IMyAirVent));
        }
        else if (block is IMyLightingBlock)
        {
            Lights.Add(new Light(block as IMyLightingBlock));
        }
        else
        {
            throw new Exception($""Unknown block type {block.GetType()}"");
        }
    }

    public void Reset(Action<string> echo)
    {
        DateTime ventTime = TimeUtil.OffsetSeconds(VENT_TIMEOUT_SECONDS);
        if (Open)
        {
            echo(""Bay is open"");
            DateTime closed = Door.CloseDoors(InnerDoors);
            _nextAction = ventTime + TimeUtil.TimeSpanFromUtcNow(closed);
        }
        else
        {
            echo(""Bay is closed"");
            DateTime closed = Door.CloseDoors(OuterDoors);
            _nextAction = ventTime + TimeUtil.TimeSpanFromUtcNow(closed);
        }
        OpenDoors();
        Vent.SetDepressurize(Vents, Open);
        Light.SetEnabled(Lights, Open);
        State = BayState.Resetting;
    }

    public void Clear()
    {
        InnerDoors.Clear();
        OuterDoors.Clear();
        Vents.Clear();
        Lights.Clear();
    }

    private void CloseDoors()
    {
        _nextAction = Door.CloseDoors(Open ? InnerDoors : OuterDoors);
    }

    private void ActivateVents()
    {
        Vent.SetDepressurize(Vents, Open);
        _nextAction = TimeUtil.OffsetSeconds(VENT_TIMEOUT_SECONDS);
    }

    private void OpenDoors()
    {
        if (Open)
        {
            _nextAction = Door.OpenDoors(OuterDoors);
        }
        else
        {
            Door.SetEnabled(InnerDoors, true); // only enable, not open
        }
    }

    private void PowerOff()
    {
        Door.SetEnabled(OuterDoors, false);

        if (Open)
        {
            Door.SetEnabled(InnerDoors, false);
        }
    }

    private void RefreshLights()
    {
        bool turnOnLights = Vents[0].Status != VentStatus.Pressurized || Vents[0].Depressurize;
        Light.SetEnabled(Lights, turnOnLights);
    }
}

// Mixin
public class Door
{
    public const double DELAY_STANDARD_MILLIS = 1.0;
    public const double DELAY_HANGAR_MILLIS = 10.0;
    private double _customDelay;

    private bool _isHangar;

    public IMyDoor Block { get; }

    public bool Enabled { get { return Block.Enabled; } set { Block.Enabled = value; } }
    public DoorStatus Status => Block.Status;
    public float OpenRatio => Block.OpenRatio;
    public bool IsOpen => Block.Status == DoorStatus.Open;
    public bool IsClosed => Block.Status == DoorStatus.Closed;
    public bool IsTransitioning => !IsOpen && !IsClosed;

    public Door(IMyDoor block, double customDelay = 0.0)
    {
        Block = block;
        _customDelay = customDelay;
        _isHangar = block is IMyAirtightHangarDoor;
    }

    public static void SetEnabled(List<Door> doors, bool value)
    {
        foreach (Door door in doors)
        {
            door.Enabled = value;
        }
    }

    public static bool AnyOpened(List<Door> doors)
    {
        foreach (var door in doors)
        {
            if (door.Status == DoorStatus.Open)
                return true;
        }
        return false;
    }

    public static bool AnyClosed(List<Door> doors)
    {
        foreach (var door in doors)
        {
            if (door.Status == DoorStatus.Closed)
                return true;
        }
        return false;
    }

    public static DateTime OpenDoors(List<Door> doors)
    {
        DateTime maxDelay = DateTime.MinValue;
        foreach (Door door in doors)
        {
            maxDelay = Max(maxDelay, door.OpenDoor());
        }

        return maxDelay;
    }

    public static DateTime CloseDoors(List<Door> doors)
    {
        DateTime maxDelay = DateTime.MinValue;
        foreach (Door door in doors)
        {
            maxDelay = Max(maxDelay, door.CloseDoor());
        }

        return maxDelay;
    }

    public DateTime OpenDoor()
    {
        if (Block.Status == DoorStatus.Open)
            return DateTime.MinValue;

        Block.Enabled = true;
        Block.OpenDoor();
        return Delay();

    }

    public DateTime CloseDoor()
    {
        if (Block.Status == DoorStatus.Closed)
            return DateTime.MinValue;

        Block.Enabled = true;
        Block.CloseDoor();
        return Delay();

    }

    public DateTime ToggleDoor()
    {
        return Block.Status == DoorStatus.Closed || Block.Status == DoorStatus.Closing
                ? OpenDoor()
                : CloseDoor();
    }

    private DateTime Delay()
    {
        double standardDelay = _isHangar ? DELAY_HANGAR_MILLIS : DELAY_STANDARD_MILLIS;
        double delay = _customDelay != 0.0 ? _customDelay : standardDelay;
        return DateTime.UtcNow + TimeSpan.FromSeconds(delay);
    }

    private static DateTime Max(DateTime a, DateTime b)
    {
        return a > b ? a : b;
    }
}

// Mixin
public class Light
{
    public static readonly Color SODIUM = new Color(255, 183, 76);
    public static readonly Color INCANDESCENT = new Color(255, 255, 210);
    public static readonly Color FLORESCENT_WARM = new Color(230, 255, 255);
    public static readonly Color FLORESCENT_COOL = new Color(175, 215, 255);

    public IMyLightingBlock Block { get; private set; }

    public bool OriginalEnabled { get; private set; }
    public float OriginalRadius { get; private set; }
    public float OriginalIntensity { get; private set; }
    public float OriginalFalloff { get; private set; }
    public float OriginalBlinkInterval { get; private set; }
    public float OriginalBlinkLength { get; private set; }
    public float OriginalBlinkOffset { get; private set; }
    public Color OriginalColor { get; private set; }

    public bool Enabled { get { return Block.Enabled;} set { Block.Enabled = value; } }
    public float Radius { get { return Block.Radius; } set { Block.Radius = value; } }
    float Intensity { get { return Block.Intensity; } set { Block.Intensity = value; } }
    float Falloff { get { return Block.Falloff; } set { Block.Falloff = value; } }
    float BlinkIntervalSeconds { get { return Block.BlinkIntervalSeconds; } set { Block.BlinkIntervalSeconds = value; } }
    float BlinkLength { get { return Block.BlinkLength; } set { Block.BlinkLength = value; } }
    float BlinkOffset { get { return Block.BlinkOffset; } set { Block.BlinkOffset = value; } }
    Color Color { get { return Block.Color; } set { Block.Color = value; } }

    public Light(IMyLightingBlock block)
    {
        Block = block;
        OriginalEnabled = Block.Enabled;
        OriginalRadius = Block.Radius;
        OriginalIntensity = Block.Intensity;
        OriginalFalloff = Block.Falloff;
        OriginalBlinkInterval = Block.BlinkIntervalSeconds;
        OriginalBlinkLength = Block.BlinkLength;
        OriginalBlinkOffset = Block.BlinkOffset;
        OriginalColor = Block.Color;
    }

    public static void SetEnabled(List<Light> lights, bool value)
    {
        foreach (var light in lights)
        {
            light.Enabled = value;
        }
    }

    public static void SetColor(List<Light> lights, Color color)
    {
        foreach (var light in lights)
        {
            light.Color = color;
        }
    }

    public void Reset()
    {
        ResetEnabled();
        ResetRadius();
        ResetIntensity();
        ResetFalloff();
        ResetBlinkInterval();
        ResetBlinkLength();
        ResetBlinkOffset();
        ResetColor();
    }

    public void ResetEnabled() => Block.Enabled = OriginalEnabled;
    public void ResetRadius() => Block.Radius = OriginalRadius;
    public void ResetIntensity() => Block.Intensity = OriginalIntensity;
    public void ResetFalloff() => Block.Falloff = OriginalFalloff;
    public void ResetBlinkInterval() => Block.BlinkIntervalSeconds = OriginalBlinkInterval;
    public void ResetBlinkLength() => Block.BlinkLength = OriginalBlinkLength;
    public void ResetBlinkOffset() => Block.BlinkOffset = OriginalBlinkOffset;
    public void ResetColor() => Block.Color = OriginalColor;
}

// Mixin
public static class StringUtil
{
    public static bool Contains(string text, string testSequence, bool useInvariant = true)
    {
        return useInvariant
            ? text.ToLowerInvariant().Contains(testSequence.ToLowerInvariant())
            : text.ToLower().Contains(testSequence.ToLower());
    }

    public static bool Equality(string a, string b, bool useInvariant = true)
    {
        return useInvariant
            ? a.ToLowerInvariant() == b.ToLowerInvariant()
            : a.ToLower() == b.ToLower();
    }
}

// Mixin
public static class TimeUtil
{
    public static DateTime OffsetSeconds(double seconds)
    {
        return DateTime.UtcNow +TimeSpan.FromSeconds(seconds);
    }

    public static TimeSpan TimeSpanFromUtcNow(DateTime time)
    {
        if (DateTime.UtcNow > time)
            return TimeSpan.Zero;

        return DateTime.UtcNow - time;
    }
}

// Mixin
public class Vent
{
    private const int DELAY_MILLIS = 2000;

    private int _customDelay;

    public IMyAirVent Block { get; }

    public bool Enabled { get { return Block.Enabled; } set { Block.Enabled = value; } }
    public bool CanPressurize => Block.CanPressurize;
    public float OxygenLevel => Block.GetOxygenLevel();
    public VentStatus Status => Block.Status;
    public bool PressurizationEnabled => Block.PressurizationEnabled;

    public bool Depressurize => Block.Depressurize;

    public bool IsPressurized => Block.Status == VentStatus.Pressurized;
    public bool IsDepressurized => Block.Status == VentStatus.Depressurized;
    public bool IsPressureUncertain => !IsPressurized && !IsDepressurized;

    public Vent(IMyAirVent block, int customDelay = 0)
    {
        Block = block;
        _customDelay = customDelay;
    }

    public static void SetEnabled(List<Door> doors, bool value)
    {
        foreach (Door door in doors)
        {
            door.Enabled = value;
        }
    }

    public static float OxygenLevelMin(List<Vent> vents)
    {
        float level = float.MaxValue;
        foreach (var vent in vents)
        {
            if (vent.OxygenLevel < level)
                level = vent.OxygenLevel;
        }
        return level;
    }

    public static float OxygenLevelMax(List<Vent> vents)
    {
        float level = float.MinValue;
        foreach (var vent in vents)
        {
            if (vent.OxygenLevel > level)
                level = vent.OxygenLevel;
        }
        return level;
    }

    public static float OxygenLevelAve(List<Vent> vents)
    {
        float level = 0f;
        foreach (var vent in vents)
        {
            level += vent.OxygenLevel;
        }
        return level / vents.Count;
    }

    public static bool AnyDepressurizing(List<Vent> vents)
    {
        foreach (var vent in vents)
        {
            if (vent.Depressurize)
                return true;
        }
        return false;
    }

    public static DateTime SetDepressurize(List<Vent> vents, bool value)
    {
        DateTime maxDelay = DateTime.MinValue;
        for (int i = 0; i < vents.Count; i++)
        {
            if (vents[i]?.Block == null)
                continue;

            maxDelay = Max(maxDelay, vents[i].SetDepressurize(value));
        }

        return maxDelay;
    }

    public static bool AllPressurized(List<Vent> vents)
    {
        foreach (var vent in vents)
        {
            if (vent.Status != VentStatus.Pressurized)
                return false;
        }

        return true;
    }

    public static bool AllDepressurized(List<Vent> vents)
    {
        foreach (var vent in vents)
        {
            if (vent.Status != VentStatus.Depressurized)
                return false;
        }

        return true;
    }

    public DateTime SetDepressurize(bool value)
    {
        if (Block.Depressurize == value)
            return DateTime.MinValue;

        Block.Depressurize = value;
        return Delay();

    }

    private DateTime Delay()
    {
        int delay = _customDelay != 0 ? _customDelay : DELAY_MILLIS;
        return DateTime.UtcNow + TimeSpan.FromMilliseconds(delay);
    }

    private static DateTime Max(DateTime a, DateTime b)
    {
        return a > b ? a : b;
    }
}"
MQh4dFVn,Python walrus operator,alaex777,Python,Wednesday 12th of July 2023 12:57:45 PM CDT,"# 12.07.23

print(a := 1) # 1

print(a)      # 1

print(a = 1)  # TypeError
"
ritynCWp,deniska danger,liteshock,Lua,Wednesday 12th of July 2023 12:45:45 PM CDT,"local r = require('robot')
local component = require(""component"")
local inv = component.inventory_controller


function math_round( roundIn , roundDig ) -- первый аргумент - число которое надо округлить, второй аргумент - количество символов после запятой.
    local mul = math.pow( 10, roundDig )
    return ( math.floor( ( roundIn * mul ) + 0.5 )/mul )
end
 
function Text()
    os.execute(""cls"")
    print(""Руды мутятся, реактор крутится!!"")
    print(""Уровень робота на данный момент - "",  math_round( r.level(), 8 ))
end

while true do
  local counter = 0;
  if counter % 100 == 0 then
    Text()
  end
  counter = counter + 1
  if r.detect(3) == true then
    r.swing() -- ломаем блок перед собой
    if (r.durability() and r.durability() < 0.004) then
      inv.equip() -- ставим бур в активный первый слот
    end
    if (not r.durability()) then
      inv.equip()  
    end
  end
end"
60DRzkpi,Untitled,codeslug,Python,Wednesday 12th of July 2023 12:33:55 PM CDT,"

#divides a number in half, and converts it to a whole number
def halfOf(number):
	return number // 2

# returns ONE factor pair for a provided whole number
# MINIMUM LOWER NUMBER is 2
# returns a list of tuples
def factorPairs(number):

	half = halfOf(number) # only iterate against lower half of number

	for x in range(2, half+1):
		for y in range(2, half+1):
			# print (""checking"", x, ""*"", y, ""..."")
			if x * y == number:
				pairs = (x, y)
				return pairs

# checks if a number is prime or not
# returns true or false
def isPrime(number):

	if number == 1:
		# print(number, ""is not a prime number"")
		return False

	for x in range(2, halfOf(number)+1):
		if number % x == 0:
			# print(number, ""is divisible by"", x)
			return False

	# print(number, ""is a prime number"")
	return True

# checks if a number is a composite or not
# returns true or false
def isComposite(number):

	if number == 1:
	# print(number, ""is not a prime number"")
		return False

	if isPrime(number):
		return False
	else:
		return True

# takes a single number, uses recursion to find prime factors
# outputs a list of prime factors
def primeFactorization(number):

	new_list = []

	# print(""Examining:"", number)

	if isPrime(number):
		# print(number, ""is prime!"")
		return [number]
	else:
		# print(""Not prime. Factorizing"", number, ""..."")
		pairs = factorPairs(number)
		# pairs = pairs[-1]
		first = primeFactorization(pairs[0])
		# print(""first ="", first)
		second = primeFactorization(pairs[1])
		# print(""second ="", second)
		for x in first:
			new_list.append(x)
		for y in second:
			new_list.append(y)

	return(sorted(new_list))


def testPrimeFactorization():

	test_number = """"

	while test_number != ""q"":

		try:
			test_number = input(""Please enter a number to test, type q to quit:"")

			test_number = int(test_number)
			factorized = primeFactorization(test_number)
			total = 1

			for num in factorized:
				total *= num

			if total == test_number:
				print(""Test Passed"")
				print(""Prime Factorization of"", test_number, ""is"", factorized)
			else:
				print(""Test Failed on number"", test_number)

		except:

			print(""Quitting..."")



testPrimeFactorization()








"
EczwiwpH,optimizedMinningTurtleV3.1,Arciesis,Lua,Wednesday 12th of July 2023 12:27:44 PM CDT,"-- globals

cpt_main_way = tonumber(0)

-- inventory

--- Tell whether there are slot left in the inventory of the turtle
--- assume the inventory has been sorted before the call of that function
---@return boolean whether there is available slot in the inventory of the turtle
local function hasAvailableSlot()
    for i = 1, 16 do
        if turtle.getItemCount(i) == 0 then
            return true
        end
    end
    return false
end

--- make space in the inventory by dropping the unnecessary items
local function makeSpace()
    for i = 1, 16, 1 do
        local detail = turtle.getItemDetail(i, true)
        if detail ~= nil then
            if not (detail.tags and (detail.tags[""forge:ores""] or detail.tags[""forge:raw_materials""]
                    or detail.tags[""minecraft:coals""] or detail.tags[""forge:gems""]
                    or detail.tags[""forge:ingots""] or detail.tags[""forge:dusts/redstone""]
                    or detail.tags[""forge:storage_blocks/coal""]
                    or detail.tags[""forge:storage_blocks/charcoal""])) then
                turtle.select(i)
                turtle.drop()
            end
        end
    end
    turtle.select(1)
end

--- tell whether the slot is already taken or not
---@param slot number the number of the slot
local function isSlotTaken(slot)
    turtle.select(slot)
    local itemCount = turtle.getItemCount()
    if itemCount >= 0 then
        return false
    else
        return true
    end
end

--- place a stack of ore/gems/redstone/coal et in the first slot possible
---iterate 16 * 16 times so it takes time
local function sortStacks()
    for i = 1, 16 do
        for j = 1, 16 do
            turtle.select(j)
            local is_slot_taken = isSlotTaken(i)
            if not is_slot_taken then
                turtle.transferTo(i)
            end
        end
    end
end

---stack the item together if possible
---iterate 16 * 16 times so it takes time
local function stackItems()
    for i = 1, 16 do
        for j = 1, 16 do
            turtle.select(j)
            local isEqual = turtle.compareTo(i)
            if isEqual then
                local nbrToTransfer = turtle.getItemCount(j)
                local firstSlotSpaceLeft = turtle.getItemSpace(i)
                if ((firstSlotSpaceLeft - nbrToTransfer) <= 64) then
                    turtle.transferTo(i, nbrToTransfer)
                else
                    turtle.transferTo(i, firstSlotSpaceLeft)
                end
            end

        end
    end
end

--- sortInventory the inventory by stacking items together if possible
local function sortInventory()
    local has_available_slot = hasAvailableSlot()
    if not has_available_slot then
        stackItems()
        sortStacks()
        turtle.select(1)
    end
end

-- fuel

--- prompt the user to remind their to refuel the turtle before it start
local function askForFuel()
    repeat
        print(""\nDid you put fuel in the first slot ? [Y/n]"")
        local input = string.lower(read())
    until input == ""y""
end

--- refuel the turtle
local function refuelTurtle()
    for i = 1, 16 do
        turtle.select(i)
        turtle.refuel()
    end
    turtle.select(1)
end

--- first refuel of the turtle.
---Prompt
local function init_fuel()
    askForFuel()
    local level = turtle.getFuelLevel()
    if level == ""unlimited"" then
        error(""Turtle does not need fuel"")
    end

    refuelTurtle()
end

---refuel the turtle


-- cli

---ask input to the user to know the facing direction
---@return number dir the facing pos as defined
local function load_facing_direction()
    -- north = -Z = 0
    -- west = -X = 1
    -- south = +Z = 2
    -- east = +X = 3
    local dir
    repeat
        print(""In which direction the turtle is facing ?\n[0]: North\n[1]: West\n[2]: South\n[3]: East"")
        local input = string.lower(read())
        print("""")

        dir = tonumber(input)

        if not dir then
            print((""Error: you must enter a valid number\n you typed '%s'""):format(input))
            dir = -1
        end
    until (dir >= 0 and dir <= 3) and type(dir) == ""number""
    return dir
end

--- load the mining direction of the turtle
---@param facing_dir number the direction it will go forth
---@return number mining_dir the direction it will mine
local function load_mining_direction(facing_dir)
    -- north = -Z = 0
    -- west = -X = 1
    -- south = +Z = 2
    -- east = +X = 3
    local input
    local mining_dir
    repeat
        print(""In which direction the turtle is going to mine ?\n"")
        if (facing_dir % 2 == 0) then
            print(""[1]: West\n[3]: East"")
        else
            print(""[0]: North\n[2]: South"")
        end

        input = string.lower(read())
        print("""")

        mining_dir = tonumber(input)

        if not mining_dir then
            print((""Error: you must enter a valid number\nYou typed %s""):format(input))
            print("""")
            mining_dir = -1
        end

        -- check if the values are correct e.g: not opposite one from another
        if ((facing_dir % 2 == 0) and (mining_dir == 0 or mining_dir == 2)) or ((facing_dir % 2 == 1) and (mining_dir == 1 or mining_dir == 3)) then
            print((""Error: check the choices !\n""))
            mining_dir = -1
        end
    until (mining_dir >= 0 and mining_dir <= 3) and type(mining_dir) == ""number""

    return mining_dir
end

local function askForLength()
    local input
    local length

    repeat
        print(""What length the turtle should mine ?\n"")
        input = string.lower(read())

        length = tonumber(input)

        if length and length >= 0 then
            return length
        else
            print(""Error: type a valid number (i.e: >= 0)"")
            length = -1
        end
    until type(length) == ""number"" and length >= 0
end

local function askForWidth()
    local input, width
    repeat
        print(""What width the turtle should mine ?\n"")
        input = string.lower(read())

        width = tonumber(input)

        if width and width >= 0 then
            return width
        else
            print(""Error: type a valid number (i.e: >= 0)"")
            width = -1
        end
    until type(width) == ""number"" and width >= 0
end

-- optimizedMine

---move the turtle forward, gravel insensitive
local function moveForward()
    repeat
        local moved = turtle.forward()
        if not moved then
            turtle.dig()
        end
    until moved
end

---move the turtle back, gravel insensitive
local function moveBackward()
    local moved
    repeat
        moved = turtle.back()
        if not moved then
            turtle.turnRight()
            turtle.turnRight()
            turtle.dig()
            turtle.turnRight()
        end
    until moved

end

---move the turtle up, gravel insensitive
local function moveUp()
    local moved
    repeat
        moved = turtle.up()
        if not moved then
            turtle.digUp()
        end
    until moved
end

---move the turtle down, gravel insensitive (event I don't see why gravel is a problem here)
local function moveDown()
    local moved
    repeat
        moved = turtle.down()
        if not moved then
            turtle.digDown()
        end
    until moved
end

--- inspect each sides  of the turtle to find ores i.e:
---
---1= front
---
---2= right
---
---3= back
---
---4:= left
---@return boolean, number whether there is ore and the side which it found it
local function detectOreEachSide()
    for i = 1, 4 do
        local has_block, data = turtle.inspect()
        if has_block then
            if data and data.tags and (data.tags[""forge:ores""] or
                    data.tags[""forge:raw_materials""] or
                    data.tags[""minecraft:coals""] or
                    data.tags[""forge:gems""] or
                    data.tags[""forge:ingots""] or
                    data.tags[""forge:dusts/redstone""])
            then
                ---@TODO make the turtle turn until it found its original facing
                for _ = i - 1, 1, -1 do
                    turtle.turnLeft()
                end
                return true, i
            end
        end
        turtle.turnRight()
    end
    return false, 0
end

--- detect whether there is or on the up side
---@return boolean whether there is ore
local function detectOreUp()
    local has_block, data = turtle.inspectUp()
    if has_block then
        if data and data.tags and (data.tags[""forge:ores""] or
                data.tags[""forge:raw_materials""] or
                data.tags[""minecraft:coals""] or
                data.tags[""forge:gems""] or
                data.tags[""forge:ingots""] or
                data.tags[""forge:dusts/redstone""])
        then
            return true
        else
            return false
        end
    else
        return false
    end
end

--- detect whether there is or on the down side
---@return boolean whether there is ore
local function detectOreDown()
    local has_block, data = turtle.inspectDown()
    if has_block then
        if data and data.tags and (data.tags[""forge:ores""] or
                data.tags[""forge:raw_materials""] or
                data.tags[""minecraft:coals""] or
                data.tags[""forge:gems""] or
                data.tags[""forge:ingots""] or
                data.tags[""forge:dusts/redstone""])
        then
            return true
        else
            return false
        end
    else
        return false
    end
end

--- A recursive function that dig all the ores and go back with the exact same path
---@param ore_path table the path of the ores
local function orePathFinder(ore_path)
    local has_ore_side, side = detectOreEachSide()
    local has_ore_up = detectOreUp()
    local has_ore_down = detectOreDown()
    local has_ore = has_ore_side or has_ore_up or has_ore_down
    local reverse_side

    -- backward pathfinding, its deleted the last entry of the table
    if not has_ore then
        reverse_side = table.remove(ore_path)
        if reverse_side then
            -- 1: front => back
            -- 2: right => left
            -- 3: back => front
            -- 4: left => right
            -- 5: down => up
            -- 6: up => down
            if reverse_side == 1 then
                turtle.back()
            elseif reverse_side == 2 then
                turtle.back()
                turtle.turnLeft()
            elseif reverse_side == 3 then
                turtle.back()
                turtle.turnLeft()
                turtle.turnLeft()
            elseif reverse_side == 4 then
                turtle.back()
                turtle.turnRight()
            elseif reverse_side == 5 then
                turtle.up()
            elseif reverse_side == 6 then
                turtle.down()
            end
        end

        -- forward ore finding, it insert the direction one the table
        -- 1: front
        -- 2: right
        -- 3: back
        -- 4: left
        -- 5: down
        -- 6: up
    elseif has_ore_side then
        if side then
            if side == 1 then
                turtle.dig()
                moveForward()
                table.insert(ore_path, side)
            elseif side == 2 then
                turtle.turnRight()
                turtle.dig()
                moveForward()
                table.insert(ore_path, side)
            elseif side == 3 then
                turtle.turnRight()
                turtle.turnRight()
                turtle.dig()
                moveForward()
                table.insert(ore_path, side)
            elseif side == 4 then
                turtle.turnLeft()
                turtle.dig()
                moveForward()
                table.insert(ore_path, side)
            end
        end
    elseif has_ore_down then

        turtle.digDown()
        turtle.down()
        table.insert(ore_path, 5)
    elseif has_ore_up then
        turtle.digUp()
        turtle.up()
        table.insert(ore_path, 6)
    end

    if ((not has_ore) and (#ore_path == 0)) then
        return
    else
        orePathFinder(ore_path)
    end
end

--- mine straight for 64 blocks and then come backward
local function mineStraight(limit)
    local ores
    for _ = 1, limit, 1 do
        ores = {}
        orePathFinder(ores)
        moveForward()

        -- do the up step
        moveUp()
        ores = {}
        orePathFinder(ores)
        moveDown()

        -- do the final step: the down one
        moveDown()
        ores = {}
        orePathFinder(ores)
        moveUp()

        if not hasAvailableSlot then
            makeSpace()
        end

    end

    refuelTurtle()
    makeSpace()

    for _ = 1, limit, 1 do
        moveBackward()
    end

    sortInventory()
end

local function mine3BlocksStraight()
    for _ = 1, 3 do
        turtle.dig()
        moveForward()
        turtle.digUp()
        turtle.digDown()
    end
    cpt_main_way = cpt_main_way + 3
end

---
local function shift(side)
    if side == ""left"" then
        turtle.turnRight()
        mine3BlocksStraight()
    elseif side == ""right"" then
        turtle.turnLeft()
        mine3BlocksStraight()
    else
        error(""Should not happened"")
    end
end

--- Tell whether the limit has been reached
---@return boolean whether the limit reached
local function isLimitReached(limit)
    --@TODO: Could been ask for that limit
    if cpt_main_way < limit then
        return false
    else
        return true
    end
end

-- Instructions

init_fuel()

-- local posX, posZ = load_start_point()
local facing_dir = load_facing_direction()
local mining_dir = load_mining_direction(facing_dir)
local length = askForLength()
local width = askForWidth()


-- north = -Z = 0
-- west = -X = 1
-- south = +Z = 2
-- east = +X = 3


-- all the mine left moves:
-- (facing_dir == 0 and mining_dir == 1)
-- (facing_dir == 1 and mining_dir == 2)
-- (facing_dir == 2 and mining_dir == 3)
-- (facing_dir == 3 and mining_dir == 0)

-- all the mine right moves
-- (facing_dir == 0 and mining_dir == 3)
-- (facing_dir == 1 and mining_dir == 0)
-- (facing_dir == 2 and mining_dir == 1)
-- (facing_dir == 3 and mining_dir == 2)
--local fuel_level = turtle.getFuelLevel()
local has_available_slot = hasAvailableSlot()
local is_limit_reached = isLimitReached(length)
while has_available_slot and not is_limit_reached do
    if (facing_dir == 0 and mining_dir == 1) or (facing_dir == 1 and mining_dir == 2) or
            (facing_dir == 2 and mining_dir == 3) or (facing_dir == 3 and mining_dir == 0) then
        -- if the turtle needs to mine to its left at the beginning
        local side = ""left""
        turtle.turnLeft()
        mineStraight(width)
        shift(side)

    elseif (facing_dir == 0 and mining_dir == 3) or (facing_dir == 1 and mining_dir == 0) or
            (facing_dir == 2 and mining_dir == 1) or (facing_dir == 3 and mining_dir == 2) then
        -- if the turtle needs to mine to its right at the beginning
        local side = ""right""
        turtle.turnRight()
        mineStraight(width)
        shift(side)
    end

    has_available_slot = hasAvailableSlot()
    is_limit_reached = isLimitReached(length)
end

--- need to return home
for _ = cpt_main_way, 1, -1 do
    moveBackward()
end"
qNM1c8r3,No wovels,tourniquet,Python,Wednesday 12th of July 2023 12:17:10 PM CDT,"wovels = ['a', 'e', 'i', 'o', 'u']
word = 'somebody'
def noWovels(str):
  noWovels = []

  for x in str:
    if x not in wovels:
	  	noWovels.append(x)
      
  print(noWovels)
    
noWovels(word)"
066UAsVg,Untitled,dllbridge,C,Wednesday 12th of July 2023 12:04:11 PM CDT,"


#include   <stdio.h>





////////////////////////////////////////////////////
struct Cday
{
	
	int          nYear;
	
	const char *pszDay;
	
	int           nSec;
	
	
};


void foo(Cday d);


////////////////////////////////////////////////////
int main()                                        // 
{
   
    Cday day1;
    
    day1.nYear =      2022;
	
	day1.pszDay = ""Monday"";
	
	day1.nSec = 1688169600;
   
    printf(""size Cday = %d\n"", sizeof(day1) );
    printf(""address day1 = %d\n"", &day1);
    foo(day1);

}



////////////////////////////////////////////////
void foo(Cday d)
{
	 printf(""address  d   = %d\n"", &d);
	 
	 printf(""d.nYear   = %d\n"", d.nYear );
	 printf(""d.pszDay  = %s\n"", d.pszDay);
	 printf(""d.nSec    = %d\n"", d.nSec  );	
	 printf("" - - - - - - -\n""    );
	 printf(""d.nYear   = %d\n"", d );
//	 printf(""d.pszDay  = %s\n"", d  );
	 printf(""d.nSec    = %d\n"", (int)(&d)+8  );		 
	  
}


"
Q30xwJcw,MapUserInput.as,PaladinTEAM,ActionScript 3,Wednesday 12th of July 2023 12:01:53 PM CDT,"﻿package com.company.assembleegameclient.game {
import com.company.assembleegameclient.map.Map;
import com.company.assembleegameclient.map.Square;
import com.company.assembleegameclient.objects.Character;
import com.company.assembleegameclient.objects.GameObject;
import com.company.assembleegameclient.objects.GuildHallPortal;
import com.company.assembleegameclient.objects.ObjectLibrary;
import com.company.assembleegameclient.objects.Player;
import com.company.assembleegameclient.objects.Portal;
import com.company.assembleegameclient.parameters.Parameters;
import com.company.assembleegameclient.ui.options.Options;
import com.company.assembleegameclient.util.TextureRedrawer;
import com.company.util.KeyCodes;
import flash.desktop.Clipboard;
import flash.desktop.ClipboardFormats;
import flash.display.Sprite;
import flash.display.StageScaleMode;
import flash.geom.Point;
import flash.geom.Vector3D;
import flash.utils.Dictionary;
import kabam.rotmg.chat.control.ParseChatMessageSignal;
import kabam.rotmg.chat.control.TextHandler;
import kabam.rotmg.servers.api.Server;
import kabam.rotmg.ui.view.HUDView;

import flash.display.Stage;
import flash.display.StageDisplayState;
import flash.events.Event;
import flash.events.KeyboardEvent;
import flash.events.MouseEvent;
import flash.system.Capabilities;
import flash.utils.getTimer;

import kabam.rotmg.application.api.ApplicationSetup;
import kabam.rotmg.chat.model.ChatMessage;
import kabam.rotmg.constants.GeneralConstants;
import kabam.rotmg.constants.UseType;
import kabam.rotmg.core.StaticInjectorContext;
import kabam.rotmg.core.view.Layers;
import kabam.rotmg.dialogs.control.CloseDialogsSignal;
import kabam.rotmg.dialogs.control.OpenDialogSignal;
import kabam.rotmg.friends.view.FriendListView;
import kabam.rotmg.game.model.PotionInventoryModel;
import kabam.rotmg.game.model.UseBuyPotionVO;
import kabam.rotmg.game.signals.AddTextLineSignal;
import kabam.rotmg.game.signals.ExitGameSignal;
import kabam.rotmg.game.signals.GiftStatusUpdateSignal;
import kabam.rotmg.game.signals.SetTextBoxVisibilitySignal;
import kabam.rotmg.game.signals.UseBuyPotionSignal;
import kabam.rotmg.game.view.components.StatsTabHotKeyInputSignal;
import kabam.rotmg.messaging.impl.GameServerConnection;
import kabam.rotmg.minimap.control.MiniMapZoomSignal;
import kabam.rotmg.pets.controller.reskin.ReskinPetFlowStartSignal;
import kabam.rotmg.ui.UIUtils;
import com.company.assembleegameclient.game.events.ReconnectEvent;
import kabam.rotmg.maploading.view.MapLoadingView;

import net.hires.debug.Stats;

import org.swiftsuspenders.Injector;

public class MapUserInput {

    private static var stats_:Stats = new Stats();
    private static const MOUSE_DOWN_WAIT_PERIOD:uint = 175;
    private static var arrowWarning_:Boolean = false;
	
    public static var reconRealm:ReconnectEvent;
    public static var reconDung:ReconnectEvent;
    public static var reconVault:ReconnectEvent;
    public static var reconRandom:ReconnectEvent;
    public static var dungTime:uint = 0;
    public static var skipRender:Boolean = false;
    public var lightSpeed:Boolean = false;
    private var maxprism:Boolean = false;
	private var spaceSpam:int = 0; //makes sure you don't dc when spamming
	public static var optionsOpen:Boolean = false;
	public var ninjaTapped:Boolean = false;
	public static var inputting:Boolean = false;

    public var gs_:GameSprite;
    private var moveLeft_:int = 0;
    private var moveRight_:int = 0;
    private var moveUp_:int = 0;
    private var moveDown_:int = 0;
    private var rotateLeft_:int = 0;
    private var rotateRight_:int = 0;
    public var mouseDown_:Boolean = false;
    public var autofire_:Boolean = false;
    private var currentString:String = """";
    public var specialKeyDown_:Boolean = false;
    private var enablePlayerInput_:Boolean = true;
    private var giftStatusUpdateSignal:GiftStatusUpdateSignal;
    private var addTextLine:AddTextLineSignal;
    private var setTextBoxVisibility:SetTextBoxVisibilitySignal;
    private var statsTabHotKeyInputSignal:StatsTabHotKeyInputSignal;
    private var miniMapZoom:MiniMapZoomSignal;
    private var useBuyPotionSignal:UseBuyPotionSignal;
    private var potionInventoryModel:PotionInventoryModel;
    private var openDialogSignal:OpenDialogSignal;
    private var closeDialogSignal:CloseDialogsSignal;
    private var layers:Layers;
    private var exitGame:ExitGameSignal;
    private var areFKeysAvailable:Boolean;
    private var reskinPetFlowStart:ReskinPetFlowStartSignal;
    private var parseChatMessage:ParseChatMessageSignal;

    public function MapUserInput(_arg_1:GameSprite) {
        this.gs_ = _arg_1;
        this.gs_.addEventListener(Event.ADDED_TO_STAGE, this.onAddedToStage);
        this.gs_.addEventListener(Event.REMOVED_FROM_STAGE, this.onRemovedFromStage);
        var _local_2:Injector = StaticInjectorContext.getInjector();
        this.giftStatusUpdateSignal = _local_2.getInstance(GiftStatusUpdateSignal);
        this.reskinPetFlowStart = _local_2.getInstance(ReskinPetFlowStartSignal);
        this.addTextLine = _local_2.getInstance(AddTextLineSignal);
        this.setTextBoxVisibility = _local_2.getInstance(SetTextBoxVisibilitySignal);
        this.miniMapZoom = _local_2.getInstance(MiniMapZoomSignal);
        this.useBuyPotionSignal = _local_2.getInstance(UseBuyPotionSignal);
        this.potionInventoryModel = _local_2.getInstance(PotionInventoryModel);
        this.layers = _local_2.getInstance(Layers);
        this.statsTabHotKeyInputSignal = _local_2.getInstance(StatsTabHotKeyInputSignal);
        this.exitGame = _local_2.getInstance(ExitGameSignal);
        this.openDialogSignal = _local_2.getInstance(OpenDialogSignal);
        this.closeDialogSignal = _local_2.getInstance(CloseDialogsSignal);
        this.parseChatMessage = _local_2.getInstance(ParseChatMessageSignal);
        var _local_3:ApplicationSetup = _local_2.getInstance(ApplicationSetup);
        this.areFKeysAvailable = _local_3.areDeveloperHotkeysEnabled();
        this.gs_.map.signalRenderSwitch.add(this.onRenderSwitch);
    }

    public function onRenderSwitch(_arg_1:Boolean):void {
        if (_arg_1) {
            this.gs_.stage.removeEventListener(MouseEvent.MOUSE_DOWN, this.onMouseDown);
            this.gs_.stage.removeEventListener(MouseEvent.MOUSE_UP, this.onMouseUp);
            this.gs_.map.addEventListener(MouseEvent.MOUSE_DOWN, this.onMouseDown);
            this.gs_.map.addEventListener(MouseEvent.MOUSE_UP, this.onMouseUp);
        }
        else {
            this.gs_.map.removeEventListener(MouseEvent.MOUSE_DOWN, this.onMouseDown);
            this.gs_.map.removeEventListener(MouseEvent.MOUSE_UP, this.onMouseUp);
            this.gs_.stage.addEventListener(MouseEvent.MOUSE_DOWN, this.onMouseDown);
            this.gs_.stage.addEventListener(MouseEvent.MOUSE_UP, this.onMouseUp);
        }
    }

    public function clearInput():void {
        this.moveLeft_ = 0;
        this.moveRight_ = 0;
        this.moveUp_ = 0;
        this.moveDown_ = 0;
        this.rotateLeft_ = 0;
        this.rotateRight_ = 0;
        this.mouseDown_ = false;
        this.autofire_ = false;
        this.lightSpeed = false;
        this.maxprism = false;
        this.setPlayerMovement();
    }

    public function setEnablePlayerInput(_arg_1:Boolean):void {
        if (this.enablePlayerInput_ != _arg_1) {
            this.enablePlayerInput_ = _arg_1;
            this.clearInput();
        }
    }

    private function onAddedToStage(_arg_1:Event):void {
        var _local_2:Stage = this.gs_.stage;
        _local_2.addEventListener(Event.ACTIVATE, this.onActivate);
        _local_2.addEventListener(Event.DEACTIVATE, this.onDeactivate);
        _local_2.addEventListener(KeyboardEvent.KEY_DOWN, this.onKeyDown);
        _local_2.addEventListener(KeyboardEvent.KEY_UP, this.onKeyUp);
        _local_2.addEventListener(MouseEvent.MOUSE_WHEEL, this.onMouseWheel);
		//
        _local_2.addEventListener(MouseEvent.MOUSE_DOWN, this.onMouseDown);
        _local_2.addEventListener(MouseEvent.MOUSE_UP, this.onMouseUp);
        //this.gs_.map.addEventListener(MouseEvent.MOUSE_DOWN, this.onMouseDown);
        //this.gs_.map.addEventListener(MouseEvent.MOUSE_UP, this.onMouseUp);
        _local_2.addEventListener(Event.ENTER_FRAME, this.onEnterFrame);
        _local_2.addEventListener(MouseEvent.RIGHT_CLICK, this.disableRightClick); //right click
    }

    public function disableRightClick(_arg_1:MouseEvent):void {
		gs_.map.player_.mapLightSpeed = !gs_.map.player_.mapLightSpeed;
    }

    private function onRemovedFromStage(_arg_1:Event):void {
        var _local_2:Stage = this.gs_.stage;
        _local_2.removeEventListener(Event.ACTIVATE, this.onActivate);
        _local_2.removeEventListener(Event.DEACTIVATE, this.onDeactivate);
        _local_2.removeEventListener(KeyboardEvent.KEY_DOWN, this.onKeyDown);
        _local_2.removeEventListener(KeyboardEvent.KEY_UP, this.onKeyUp);
        _local_2.removeEventListener(MouseEvent.MOUSE_WHEEL, this.onMouseWheel);
		//
        _local_2.removeEventListener(MouseEvent.MOUSE_DOWN, this.onMouseDown);
        _local_2.removeEventListener(MouseEvent.MOUSE_UP, this.onMouseUp);
        //this.gs_.map.removeEventListener(MouseEvent.MOUSE_DOWN, this.onMouseDown);
        //this.gs_.map.removeEventListener(MouseEvent.MOUSE_UP, this.onMouseUp);
        _local_2.removeEventListener(Event.ENTER_FRAME, this.onEnterFrame);
        _local_2.removeEventListener(MouseEvent.RIGHT_CLICK, this.disableRightClick);
    }

    private function onActivate(_arg_1:Event):void {
    }

    private function onDeactivate(_arg_1:Event):void {
        this.clearInput();
    }

    public function onMouseDown(_arg_1:MouseEvent):void {
		//addTextLine.dispatch(ChatMessage.make(Parameters.CLIENT_CHAT_NAME, ""mouse down x: ""+gs_.mouseX + "" y: ""+gs_.mouseY));
		if (gs_.hudView != null && gs_.mouseX >= gs_.hudView.x) {
			return;
		}
		if (optionsOpen) {
			return;
		}
        this.mouseDown_ = true;
        var _local_3:Number;
        var _local_4:int;
        var _local_5:XML;
        var _local_6:Number;
        var _local_7:Number;
        var _local_2:Player = gs_.map.player_;
        if (_local_2 == null) {
            return;
        }
        if (!this.enablePlayerInput_) {
            return;
        }
        if (_arg_1.shiftKey) {
            _local_4 = _local_2.equipment_[1];
            if (_local_4 == -1) {
                return;
            }
            _local_5 = ObjectLibrary.xmlLibrary_[_local_4];
            if ((((_local_5 == null)) || (_local_5.hasOwnProperty(""EndMpCost"")))) {
                return;
            }
            if (_local_2.isUnstable()) {
                _local_6 = ((Math.random() * 600) - 300);
                _local_7 = ((Math.random() * 600) - 325);
            }
            else {
                _local_6 = this.gs_.map.mouseX;
                _local_7 = this.gs_.map.mouseY;
            }
            if (Parameters.isGpuRender()) {
                if ((((((_arg_1.currentTarget == _arg_1.target)) || ((_arg_1.target == this.gs_.map)))) || ((_arg_1.target == this.gs_)))) {
                    _local_2.useAltWeapon(_local_6, _local_7, UseType.START_USE);
                }
            }
            else {
                _local_2.useAltWeapon(_local_6, _local_7, UseType.START_USE);
            }
            return;
        }
        if (Parameters.isGpuRender()) {
            if ((((((((_arg_1.currentTarget == _arg_1.target)) || ((_arg_1.target == this.gs_.map)))) || ((_arg_1.target == this.gs_)))) || ((_arg_1.currentTarget == this.gs_.chatBox_.list)))) {
                _local_3 = Math.atan2(this.gs_.map.mouseY, this.gs_.map.mouseX);
            }
            else {
                return;
            }
        }
        else {
            _local_3 = Math.atan2(this.gs_.map.mouseY, this.gs_.map.mouseX);
        }
        if (_local_2.isUnstable()) {
            _local_2.attemptAttackAngle((Math.random() * 360));
        }
        else {
            _local_2.attemptAttackAngle(_local_3);
        }
    }

    public function onMouseUp(_arg_1:MouseEvent):void {
        this.mouseDown_ = false;
        var _local_2:Player = this.gs_.map.player_;
        if (_local_2 == null) {
            return;
        }
        _local_2.isShooting = false;
    }

    private function onMouseWheel(_arg_1:MouseEvent):void {
        if (_arg_1.delta > 0) {
            this.miniMapZoom.dispatch(MiniMapZoomSignal.IN);
        }
        else {
            this.miniMapZoom.dispatch(MiniMapZoomSignal.OUT);
        }
    }

    private function onEnterFrame(_arg_1:Event):void {
        var _local_2:Player;
        var _local_3:Number;
        if (enablePlayerInput_ && (mouseDown_ || autofire_) || Parameters.data_.AAOn) {
            _local_2 = this.gs_.map.player_;
            if (_local_2 != null) {
                if (_local_2.isUnstable()) {
                    _local_2.attemptAttackAngle((Math.random() * 360));
                }
                else {
                    _local_3 = Math.atan2(this.gs_.map.mouseY, this.gs_.map.mouseX);
                    _local_2.attemptAttackAngle(_local_3);
                }
            }
        }
    }
	
	private function handleAutoAbil(player:Player):Boolean {
		if (!(player.objectType_ == 0x0300 || player.objectType_ == 0x031d || player.objectType_ == 0x031f || (player.objectType_ == 0x0310 && Parameters.data_.priestAA))) {
			return false; //not rogue, warrior, paladin, priest
		}
		if (spaceSpam >= getTimer()) {
			if (player.mapAutoAbil) {
				player.mapAutoAbil = false
				player.notifyPlayer(""Auto Ability: Disabled"", 0x00FF00, 1500);
			}
			return true; //not time yet
		}
		spaceSpam = getTimer() + 500;
		switch(player.equipment_[1]) {
			case 0xb27: //ghostly
			case 0xae1: //twi
			case 0xb29: //ggen
			case 0xa6b: //ghelm
			case 0xc08: //jugg
			case 0xb26: //gcookie
			case 0xa55: //zseal
			case 0x21a2: //drape
			case 0xc1e: //prot
			case 0x16de: //ice prot
				player.mapAutoAbil = !player.mapAutoAbil;
				player.notifyPlayer(player.mapAutoAbil ? ""Auto Ability: Enabled"" : ""Auto Ability: Disabled"", 0x00FF00, 1500);
				return true;
			case 0xa52: //T0 seal
			case 0xad9: //T1 seal
			case 0xa53: //T2 seal
			case 0xada: //T3 seal
			case 0xa54: //T4 seal
			
			case 0xa33: //T4 tome
			case 0xa5b: //T5 tome
			case 0xb25: //T6 tome
			case 0xc09: //puri
				if (Parameters.data_.palaSpam) {
					player.mapAutoAbil = !player.mapAutoAbil;
					player.notifyPlayer(player.mapAutoAbil ? ""Auto Ability: Enabled"" : ""Auto Ability: Disabled"", 0x00FF00, 1500);
					return true;
				}
		}
		return false;
	}
	
	private function isIgnored(igtype:int):Boolean {
		for each (var type:int in Parameters.data_.AAIgnore) {
			if (igtype == type) {
				return true;
			}
		}
		if (Parameters.data_.tombHack && igtype >= 3366 && igtype <= 3368) { //tomb bosses
			if (igtype != Parameters.data_.curBoss) {
				return true;
			}
		}
		return false;
	}
	
	private function handlePerfectAim(player:Player):void {
		var po:Point = player.sToW(gs_.map.mouseX,gs_.map.mouseY);
		var target:GameObject;
		var obj:GameObject;
		var distSq:int = int.MAX_VALUE;
		var temp:int;
		var projspd:Number = 0.015;
		//find closest target to mouse with at least 1000 health
		for each (obj in gs_.map.goDict_) {
			if (obj.props_.isEnemy_ && obj.maxHP_ >= 1000 && !isIgnored(obj.objectType_)) {
				temp = (obj.x_ - po.x) * (obj.x_ - po.x) + (obj.y_ - po.y) * (obj.y_ - po.y);
				if (temp < distSq) {
					distSq = temp;
					target = obj;
				}
			}
		}
		if (target == null) {
			player.notifyPlayer(""No targets nearby!"", 0x00FF00, 1500);
		}
		else { //TODO see if enemy is too far
			player.notifyPlayer(ObjectLibrary.typeToDisplayId_[target.objectType_], 0x00FF00, 1500);
			if (!Parameters.data_.perfectLead) {
				aimAt(player, new Vector3D(target.x_, target.y_));
			}
			else {
				if (player.objectType_ == 798 || player.equipment_[1] == 0x1413) {
					projspd = 0.016;
				}
				if (player.equipment_[1] == 0x0d43) {
					projspd = 0.014;
				}
				aimAt(player, player.leadPos(new Vector3D(player.x_,player.y_), new Vector3D(target.x_,target.y_), new Vector3D(target.moveVec_.x,target.moveVec_.y), projspd));
			}
		}
	}
	
	private function aimAt(player:Player, t:Vector3D):void {
		if (Parameters.data_.inaccurate) {
			t.x = int(t.x) + 0.5;
			t.y = int(t.y) + 0.5;
		}
		gs_.gsc_.useItem(getTimer(), player.objectId_, 1, player.equipment_[1], t.x, t.y, UseType.START_USE);
		player.doShoot(getTimer(), player.equipment_[1], ObjectLibrary.xmlLibrary_[player.equipment_[1]], Math.atan2(t.y - player.y_, t.x - player.x_), false);
	}
	
	private function handlePerfectBomb(player:Player):Boolean {
		if ((Parameters.data_.perfectQuiv && player.objectType_ == 775) || (Parameters.data_.perfectStun && player.objectType_ == 798)) {
			handlePerfectAim(player);
			return true;
		}
		if (!(player.objectType_ == 782 || player.objectType_ == 800)) { //wiz assassin
			return false;
		}
		var target:GameObject;
		var obj:GameObject;
		var distSq:int;
		//get target within 15 tiles that has the most health and at least 1000 health
		for each (obj in gs_.map.goDict_) {
			if (obj.props_.isEnemy_ && obj.maxHP_ >= 1000 && !isIgnored(obj.objectType_)) {
				distSq = (obj.x_ - player.x_) * (obj.x_ - player.x_) + (obj.y_ - player.y_) * (obj.y_ - player.y_);
				if (distSq < 225) {
					if (target == null || obj.maxHP_ > target.maxHP_) {
						target = obj;
					}
				}
			}
		}
		if (target == null) {
			player.notifyPlayer(""No targets nearby!"", 0x00FF00, 1500);
		}
		else if (target.isInvincible() || target.isInvulnerable() || target.isStasis()) {
			player.notifyPlayer(ObjectLibrary.typeToDisplayId_[target.objectType_]+"": Invulnerable"", 0x00FF00, 1500);
		}
		else {
			player.notifyPlayer(ObjectLibrary.typeToDisplayId_[target.objectType_], 0x00FF00, 1500);
			if (Parameters.data_.inaccurate) {
				gs_.gsc_.useItem(getTimer(), player.objectId_, 1, player.equipment_[1], int(target.x_) + 1/2, int(target.y_) + 1/2, UseType.START_USE);
			}
			else {
				gs_.gsc_.useItem(getTimer(), player.objectId_, 1, player.equipment_[1], target.x_, target.y_, UseType.START_USE);
			}
		}
		return true;
	}
	
	private function handleCooldown(player:Player, abilXML:XML):void {
		var cd:int = 500; //base cooldown
		if (abilXML.hasOwnProperty(""Cooldown"")) {
			cd = (Number(abilXML.Cooldown) * 1000);
		}
		player.lastAltAttack_ = getTimer();
		player.nextAltAttack_ = getTimer() + cd;
	}
	
	private function ninjaTap(player:Player):Boolean {
		if (player.objectType_ != 0x0326) {
			return false;
		}
		ninjaTapped = !ninjaTapped;
		if (ninjaTapped) {
			player.useAltWeapon(gs_.map.mouseX, gs_.map.mouseY, UseType.START_USE)
		}
		else {
			player.useAltWeapon(gs_.map.mouseX, gs_.map.mouseY, UseType.END_USE)
		}
		return true;
	}
	
	private function abilityUsed(player:Player, abilXML:XML):void {
		specialKeyDown_ = true;
        if (player == null)
			return;
		if (Parameters.data_.autoAbil && handleAutoAbil(player)) {
			return;
		}
		if (player.nextAltAttack_ >= getTimer()) {
			return;
		}
		if (int(abilXML.MpCost) > player.mp_) {
			return;
		}
		if (Parameters.data_.perfectBomb && handlePerfectBomb(player)) {
			handleCooldown(player, abilXML);
			return;
		}
		if (Parameters.data_.ninjaTap && ninjaTap(player)) { //Parameter.data_.ninjaTap
			return;
		}
		if (maxprism && (player.objectType_ == 804 || player.equipment_[1] == 0xa5a)) { //trickster or plane
			var angle:Number = Math.atan2(gs_.map.mouseX, gs_.map.mouseY);
			if (angle < 0) {
				angle += Math.PI * 2;
			}
			var desX:Number = 13 * 50 * Math.sin(angle); //hypotenuse 13 -> how far is the teleport used
			var desY:Number = 13 * 50 * Math.cos(angle);
			player.useAltWeapon(desX, desY, UseType.START_USE);
			return;
		}
        if (player.isUnstable() && Parameters.data_.dbUnstableAbil) {
			player.useAltWeapon(Math.random() * 600 - 300, Math.random() * 600 - 325, UseType.START_USE)
        }
        else {
			player.useAltWeapon(gs_.map.mouseX, gs_.map.mouseY, UseType.START_USE)
        }
	}

    private function onKeyDown(_arg_1:KeyboardEvent):void {
        var player:Player = gs_.map.player_;
		var obj:GameObject;
		var dist:int;
        switch (_arg_1.keyCode) {
            case KeyCodes.F1:
            case KeyCodes.F2:
            case KeyCodes.F3:
            case KeyCodes.F4:
            case KeyCodes.F5:
            case KeyCodes.F6:
            case KeyCodes.F7:
            case KeyCodes.F8:
            case KeyCodes.F9:
            case KeyCodes.F10:
            case KeyCodes.F11:
            case KeyCodes.F12:
            case KeyCodes.INSERT:
            case KeyCodes.ALTERNATE:
                break;
            default:
                if (gs_.stage.focus != null) {
                    return;
                }
        }
        switch (_arg_1.keyCode) {
            case Parameters.data_.moveUp:
                this.moveUp_ = 1;
                break;
            case Parameters.data_.moveDown:
                this.moveDown_ = 1;
                break;
            case Parameters.data_.moveLeft:
                this.moveLeft_ = 1;
                break;
            case Parameters.data_.moveRight:
                this.moveRight_ = 1;
                break;
            case Parameters.data_.useSpecial:
				abilityUsed(player, ObjectLibrary.xmlLibrary_[player.equipment_[1]]);
                break;
            case Parameters.data_.QuestTeleport:
				var quest:GameObject = gs_.map.quest_.getObject(1);
                if(quest != null)
                {
                    dist = int.MAX_VALUE;
					var _targetPlayer:String = """";
					for each(obj in gs_.map.goDict_) {
						if (obj is Player) {
							var _distSquared:int = (obj.x_ - quest.x_) * (obj.x_ - quest.x_) + (obj.y_ - quest.y_) * (obj.y_ - quest.y_);
							if (_distSquared < dist) {
								dist = _distSquared;
								_targetPlayer = obj.name_;
							}
							/*if ((_obj as Player).isInvisible()) { //invis check TODO
								
							}*/
						}
					}
					if (_targetPlayer == player.name_) {
						player.notifyPlayer(""You are the closest!"",0x00FF00,1500);
						break;
					}
					gs_.gsc_.teleport(_targetPlayer);
					//player.notifyPlayer(""Teleporting to "" + _targetPlayer,0x00FF00,1500);
                }
                else
                {
                    player.notifyPlayer(""You have no quest!"",0x00FF00,1500);
                }
                break;
            case Parameters.data_.enterPortal:
                dist = int.MAX_VALUE;
				var _targetPortal:int = -1;
				for each(obj in gs_.map.goDict_)
                {
					if(obj is Portal || obj is GuildHallPortal)
					{
						var _distSquared2:int = (obj.x_ - player.x_) * (obj.x_ - player.x_) + (obj.y_ - player.y_) * (obj.y_ - player.y_);
						if(_distSquared2 < dist)
						{
							dist = _distSquared2;
							_targetPortal = obj.objectId_;
						}
					}
				}
				if(_targetPortal == -1)
				{
					player.notifyPlayer(""No portals to enter!"",0x00FF00,1500);
					break;
				}
				//addTextLine.dispatch(ChatMessage.make(Parameters.CLIENT_CHAT_NAME, ""entering ""+_targetPortal));
				gs_.gsc_.usePortal(_targetPortal);
                break;
            case Parameters.data_.incFinder:
				var holders:Array = new Array();
				for each(obj in gs_.map.goDict_)
                {
					if(obj is Player)
					{
						var thisPlayer:Player = obj as Player;
						for each (var item:int in thisPlayer.equipment_) {
							if (item == 1826) {
								holders.push(thisPlayer.name_);
								break;
							}
						}
					}
				}
				if(holders.length == 0)
				{
					player.notifyPlayer(""No one has an inc!"",0x00FF00,1500);
					break;
				}
				else {
					var k:int = 0;
					var msg:String = ""Inc Holders:\n"";
					for each (var name:String in holders) {
						msg = msg + name + ""\n"";
						k++;
					}
					player.notifyPlayer(msg,0x00FF00,1000 + 500 * k);
				}
                break;
            case Parameters.data_.rotateLeft:
                if (!Parameters.data_.allowRotation) break;
                this.rotateLeft_ = 1;
                break;
            case Parameters.data_.rotateRight:
                if (!Parameters.data_.allowRotation) break;
                this.rotateRight_ = 1;
                break;
            case Parameters.data_.resetToDefaultCameraAngle:
                Parameters.data_.cameraAngle = Parameters.data_.defaultCameraAngle;
                Parameters.save();
                break;
            case Parameters.data_.autofireToggle:
                player.isShooting = (this.autofire_ = !(this.autofire_));
                break;
            case Parameters.data_.toggleHPBar:
                Parameters.data_.HPBar = !(Parameters.data_.HPBar);
                break;
            case Parameters.data_.useInvSlot1:
                this.useItem(4);
                break;
            case Parameters.data_.useInvSlot2:
                this.useItem(5);
                break;
            case Parameters.data_.useInvSlot3:
                this.useItem(6);
                break;
            case Parameters.data_.useInvSlot4:
                this.useItem(7);
                break;
            case Parameters.data_.useInvSlot5:
                this.useItem(8);
                break;
            case Parameters.data_.useInvSlot6:
                this.useItem(9);
                break;
            case Parameters.data_.useInvSlot7:
                this.useItem(10);
                break;
            case Parameters.data_.useInvSlot8:
                this.useItem(11);
                break;
            case Parameters.data_.useHealthPotion:
                if (this.potionInventoryModel.getPotionModel(PotionInventoryModel.HEALTH_POTION_ID).available) {
                    this.useBuyPotionSignal.dispatch(new UseBuyPotionVO(PotionInventoryModel.HEALTH_POTION_ID, UseBuyPotionVO.CONTEXTBUY));
                }
                break;
            case Parameters.data_.useMagicPotion:
                if (this.potionInventoryModel.getPotionModel(PotionInventoryModel.MAGIC_POTION_ID).available) {
                    this.useBuyPotionSignal.dispatch(new UseBuyPotionVO(PotionInventoryModel.MAGIC_POTION_ID, UseBuyPotionVO.CONTEXTBUY));
                }
                break;
            case Parameters.data_.miniMapZoomOut:
                this.miniMapZoom.dispatch(MiniMapZoomSignal.OUT);
                break;
            case Parameters.data_.miniMapZoomIn:
                this.miniMapZoom.dispatch(MiniMapZoomSignal.IN);
                break;
            case Parameters.data_.togglePerformanceStats:
                this.togglePerformanceStats();
                break;
            case Parameters.data_.escapeToNexus:
            case Parameters.data_.escapeToNexus2:
                this.exitGame.dispatch();
                this.gs_.gsc_.escape();
                break;
            case Parameters.data_.friendList:
                Parameters.data_.friendListDisplayFlag = !(Parameters.data_.friendListDisplayFlag);
                if (Parameters.data_.friendListDisplayFlag) {
                    this.openDialogSignal.dispatch(new FriendListView());
                }
                else {
                    this.closeDialogSignal.dispatch();
                }
                break;
            case Parameters.data_.options:
				openOptions();
                break;
            case Parameters.data_.toggleCentering:
                Parameters.data_.centerOnPlayer = !(Parameters.data_.centerOnPlayer);
                Parameters.save();
                break;
            case Parameters.data_.switchTabs:
                //this.statsTabHotKeyInputSignal.dispatch();
				gs_.hudView.toggleStats();
                break;
			//ADDITIONS
            case Parameters.data_.ReconRealm:
				if (reconRealm != null) {
					reconRealm.charId_ = gs_.gsc_.charId_;
					gs_.dispatchEvent(reconRealm);
				}
				else {
					var tocon:Server = new Server();
					tocon.setName(Parameters.data_.servName);
					tocon.setAddress(Parameters.data_.servAddr);
					tocon.setPort(2050);
					var paramRecon:ReconnectEvent = new ReconnectEvent(
						tocon,
						Parameters.data_.reconGID,
						false,
						gs_.gsc_.charId_,
						Parameters.data_.reconTime,
						Parameters.data_.reconKey,
						false
					);
					gs_.dispatchEvent(paramRecon);
				}
                break;
			case Parameters.data_.ReconRandom:
				if (reconVault != null) {
					reconRandom = reconVault;
					reconRandom.charId_ = gs_.gsc_.charId_;
					reconRandom.server_.name = ""Random"";
					reconRandom.gameId_ = -3;
					gs_.dispatchEvent(reconRandom);
				}
            case Parameters.data_.ReconDung:
				if (reconDung != null) {
					if (getTimer() - dungTime < 180000) {
						reconDung.charId_ = gs_.gsc_.charId_;
						gs_.dispatchEvent(reconDung);
					}
				}
				else if (getTimer() - Parameters.data_.dreconTime < 180000) {
					var tocon2:Server = new Server();
					tocon2.setName(Parameters.data_.dservName);
					tocon2.setAddress(Parameters.data_.dservAddr);
					tocon2.setPort(2050);
					var paramRecon2:ReconnectEvent = new ReconnectEvent(
						tocon2,
						Parameters.data_.dreconGID,
						false,
						gs_.gsc_.charId_,
						Parameters.data_.dreconTime,
						Parameters.data_.dreconKey,
						false
					);
					gs_.dispatchEvent(paramRecon2);
				}
                break;
            case Parameters.data_.ReconVault:
				if (reconVault != null) {
					reconVault.charId_ = gs_.gsc_.charId_;
					gs_.dispatchEvent(reconVault);
				}
                break;
			//
            case Parameters.data_.tpto:
				gs_.gsc_.teleport(TextHandler.caller);
                break;
            case Parameters.data_.TextPause:
                gs_.gsc_.playerText(""/pause"");
                break;
            case Parameters.data_.TextThessal:
                gs_.gsc_.playerText(""He lives and reigns and conquers the world"");
                break;
			//
            case Parameters.data_.msg1key:
				if (Parameters.data_.msg1 == null)
					break;
					
				parseChatMessage.dispatch(Parameters.data_.msg1);
                break;
            case Parameters.data_.msg2key:
				if (Parameters.data_.msg2 == null)
					break;
					
				parseChatMessage.dispatch(Parameters.data_.msg2);
                break;
            case Parameters.data_.msg3key:
				if (Parameters.data_.msg3 == null)
					break;
					
				parseChatMessage.dispatch(Parameters.data_.msg3);
                break;
			//
            case Parameters.data_.SkipRenderKey:
                MapUserInput.skipRender = !MapUserInput.skipRender;
                break;
            case Parameters.data_.maxPrism:
                maxprism = !maxprism;
				player.notifyPlayer(maxprism ? ""Max Prism: Enabled"" : ""Max Prism: Disabled"",0x00FF00,1500);
                break;
            case Parameters.data_.SWLightKey:
                player.mapLightSpeed = (this.lightSpeed = !(this.lightSpeed));
                break;
            case Parameters.data_.Cam45DegInc:
                Parameters.data_.cameraAngle = Parameters.data_.cameraAngle - 0.785398163397448;
                Parameters.save();
                break;
            case Parameters.data_.Cam45DegDec:
                Parameters.data_.cameraAngle = Parameters.data_.cameraAngle + 0.785398163397448;
                Parameters.save();
                break;
            case Parameters.data_.cam2quest:
				var po:Point = gs_.map.quest_.getLoc();
                Parameters.data_.cameraAngle = Math.atan2(player.y_ - po.y, player.x_ - po.x) - 1.57079632679;
                Parameters.save();
                break;
            case Parameters.data_.AAHotkey:
				Parameters.data_.AAOn = !Parameters.data_.AAOn;
				player.levelUpEffect(Parameters.data_.AAOn ? ""Auto Aim: On"" : ""Auto Aim: Off"");
                break;
            case Parameters.data_.AAModeHotkey:
				selectAimMode();
                break;
            case Parameters.data_.tombCycle:
				Parameters.data_.curBoss++;
				if (Parameters.data_.curBoss > 3368) {
					Parameters.data_.curBoss = 3366;
				}
				Parameters.save()
				player.notifyPlayer(""Active boss: ""+ObjectLibrary.typeToDisplayId_[Parameters.data_.curBoss],0x00FF00,1500);
				break;
            case Parameters.data_.kautoSprite:
				Parameters.data_.autoSprite = !Parameters.data_.autoSprite;
				Parameters.save();
				player.notifyPlayer(Parameters.data_.autoSprite ? ""Auto Sprite: On"" : ""Auto Sprite: Off"", 0x00ff00, 1500);
                break;
            case Parameters.data_.kdbPetrify:
				Parameters.data_.dbPetrify = !Parameters.data_.dbPetrify;
				Parameters.save();
				player.notifyPlayer(Parameters.data_.dbPetrify ? ""Petrify: On"" : ""Petrify: Off"", Parameters.data_.dbPetrify ? 0xff0000 : 0x00ff00, 1500);
                break;
            case Parameters.data_.kdbArmorBroken:
				Parameters.data_.dbArmorBroken = !Parameters.data_.dbArmorBroken;
				Parameters.save();
				player.notifyPlayer(Parameters.data_.dbArmorBroken ? ""Armor Broken: On"" : ""Armor Broken: Off"", Parameters.data_.dbArmorBroken ? 0xff0000 : 0x00ff00, 1500);
                break;
            case Parameters.data_.kdbBleeding:
				Parameters.data_.dbBleeding = !Parameters.data_.dbBleeding;
				Parameters.save();
				player.notifyPlayer(Parameters.data_.dbBleeding ? ""Bleeding: On"" : ""Bleeding: Off"", Parameters.data_.dbBleeding ? 0xff0000 : 0x00ff00, 1500);
                break;
            case Parameters.data_.kdbDazed:
				Parameters.data_.dbDazed = !Parameters.data_.dbDazed;
				Parameters.save();
				player.notifyPlayer(Parameters.data_.dbDazed ? ""Dazed: On"" : ""Dazed: Off"", Parameters.data_.dbDazed ? 0xff0000 : 0x00ff00, 1500);
                break;
            case Parameters.data_.kdbParalyzed:
				Parameters.data_.dbParalyzed = !Parameters.data_.dbParalyzed;
				Parameters.save();
				player.notifyPlayer(Parameters.data_.dbParalyzed ? ""Paralyzed: On"" : ""Paralyzed: Off"", Parameters.data_.dbParalyzed ? 0xff0000 : 0x00ff00, 1500);
                break;
            case Parameters.data_.kdbSick:
				Parameters.data_.dbSick = !Parameters.data_.dbSick;
				Parameters.save();
				player.notifyPlayer(Parameters.data_.dbSick ? ""Sick: On"" : ""Sick: Off"", Parameters.data_.dbSick ? 0xff0000 : 0x00ff00, 1500);
                break;
            case Parameters.data_.kdbSlowed:
				Parameters.data_.dbSlowed = !Parameters.data_.dbSlowed;
				Parameters.save();
				player.notifyPlayer(Parameters.data_.dbSlowed ? ""Slowed: On"" : ""Slowed: Off"", Parameters.data_.dbSlowed ? 0xff0000 : 0x00ff00, 1500);
                break;
            case Parameters.data_.kdbStunned:
				Parameters.data_.dbStunned = !Parameters.data_.dbStunned;
				Parameters.save();
				player.notifyPlayer(Parameters.data_.dbStunned ? ""Stunned: On"" : ""Stunned: Off"", Parameters.data_.dbStunned ? 0xff0000 : 0x00ff00, 1500);
                break;
            case Parameters.data_.kdbWeak:
				Parameters.data_.dbWeak = !Parameters.data_.dbWeak;
				Parameters.save();
				player.notifyPlayer(Parameters.data_.dbWeak ? ""Weak: On"" : ""Weak: Off"", Parameters.data_.dbWeak ? 0xff0000 : 0x00ff00, 1500);
                break;
            case Parameters.data_.kdbQuiet:
				Parameters.data_.dbQuiet = !Parameters.data_.dbQuiet;
				Parameters.save();
				player.notifyPlayer(Parameters.data_.dbQuiet ? ""Quiet: On"" : ""Quiet: Off"", Parameters.data_.dbQuiet ? 0xff0000 : 0x00ff00, 1500);
                break;
            case Parameters.data_.kdbPetStasis:
				Parameters.data_.dbPetStasis = !Parameters.data_.dbPetStasis;
				Parameters.save();
				player.notifyPlayer(Parameters.data_.dbPetStasis ? ""Pet Stasis: On"" : ""Pet Stasis: Off"", Parameters.data_.dbPetStasis ? 0xff0000 : 0x00ff00, 1500);
                break;
            case Parameters.data_.kdbAll:
				Parameters.data_.dbAll = !Parameters.data_.dbAll;
				Parameters.data_.dbPetrify = Parameters.data_.dbAll;
				Parameters.data_.dbArmorBroken = Parameters.data_.dbAll;
				Parameters.data_.dbBleeding = Parameters.data_.dbAll;
				Parameters.data_.dbDazed = Parameters.data_.dbAll;
				Parameters.data_.dbParalyzed = Parameters.data_.dbAll;
				Parameters.data_.dbSick = Parameters.data_.dbAll;
				Parameters.data_.dbSlowed = Parameters.data_.dbAll;
				Parameters.data_.dbStunned = Parameters.data_.dbAll;
				Parameters.data_.dbWeak = Parameters.data_.dbAll;
				Parameters.data_.dbQuiet = Parameters.data_.dbAll;
				Parameters.data_.dbPetStasis = Parameters.data_.dbAll;
				Parameters.save();
				player.notifyPlayer(Parameters.data_.dbAll ? ""All: On"" : ""All: Off"", Parameters.data_.dbAll ? 0xff0000 : 0x00ff00, 1500);
                break;
            case Parameters.data_.kdbPre1:
				activatePreset(1);
                break;
            case Parameters.data_.kdbPre2:
				activatePreset(2);
                break;
            case Parameters.data_.kdbPre3:
				activatePreset(3);
                break;
            case Parameters.data_.resetCHP:
				player.chp = player.hp_;
				player.cmaxhp = player.maxHP_;
				player.cmaxhpboost = player.maxHPBoost_;
                break;
            case Parameters.data_.pbToggle:
				Parameters.data_.perfectBomb = !Parameters.data_.perfectBomb;
				Parameters.save();
				player.notifyPlayer(Parameters.data_.perfectBomb ? ""Spell Bomb Aim: On"" : ""Spell Bomb Aim: Off"", 0x00ff00, 1500);
                break;
            case Parameters.data_.tPassCover:
				Parameters.data_.PassesCover = !Parameters.data_.PassesCover;
				Parameters.save();
				player.notifyPlayer(Parameters.data_.PassesCover ? ""Proj No-Clip: On"" : ""Proj No-Clip: Off"", 0x00ff00, 1500);
                break;
        }
        this.setPlayerMovement();
    }
	
	public function openOptions():void {
		closeDialogSignal.dispatch();
        clearInput();
		GameSprite.hidePreloader();
        layers.overlay.addChild(new Options(gs_));
	}
	
	public function activatePreset(preset:int, setstate:int = -1):void { //very nice code indeed
		var effTotal:int;
		var state:Boolean;
		var name:String;
		switch (preset) {
			case 1:
				name = Parameters.data_.dbPre1[0];
				effTotal = Parameters.data_.dbPre1[1];
				break;
			case 2:
				name = Parameters.data_.dbPre2[0];
				effTotal = Parameters.data_.dbPre2[1];
				break;
			case 3:
				name = Parameters.data_.dbPre3[0];
				effTotal = Parameters.data_.dbPre3[1];
				break;
		}
		if (effTotal == 0) {
			return;
		}
		if (setstate == -1) {
			switch (preset) {
				case 1:
					Parameters.data_.dbPre1[2] = !Parameters.data_.dbPre1[2];
					state = Parameters.data_.dbPre1[2];
					break;
				case 2:
					Parameters.data_.dbPre2[2] = !Parameters.data_.dbPre2[2];
					state = Parameters.data_.dbPre2[2];
					break;
				case 3:
					Parameters.data_.dbPre3[2] = !Parameters.data_.dbPre3[2];
					state = Parameters.data_.dbPre3[2];
					break;
			}
		}
		else if (setstate == 0) { //off
			switch (preset) {
				case 1:
					Parameters.data_.dbPre1[2] = false;
					state = Parameters.data_.dbPre1[2];
					break;
				case 2:
					Parameters.data_.dbPre2[2] = false;
					state = Parameters.data_.dbPre2[2];
					break;
				case 3:
					Parameters.data_.dbPre3[2] = false;
					state = Parameters.data_.dbPre3[2];
					break;
			}
		}
		else if (setstate == 1) {
			switch (preset) {
				case 1:
					Parameters.data_.dbPre1[2] = true;
					state = Parameters.data_.dbPre1[2];
					break;
				case 2:
					Parameters.data_.dbPre2[2] = true;
					state = Parameters.data_.dbPre2[2];
					break;
				case 3:
					Parameters.data_.dbPre3[2] = true;
					state = Parameters.data_.dbPre3[2];
					break;
			}
		}
		for (var i:int = 0; i < 11; i++) {
			if ((effTotal & 1 << i) != 0) {
				switch (i) {
					case 0:
						Parameters.data_.dbArmorBroken = state;
						break;
					case 1:
						Parameters.data_.dbBleeding = state;
						break;
					case 2:
						Parameters.data_.dbDazed = state;
						break;
					case 3:
						Parameters.data_.dbParalyzed = state;
						break;
					case 4:
						Parameters.data_.dbSick = state;
						break;
					case 5:
						Parameters.data_.dbSlowed = state;
						break;
					case 6:
						Parameters.data_.dbStunned = state;
						break;
					case 7:
						Parameters.data_.dbWeak = state;
						break;
					case 8:
						Parameters.data_.dbQuiet = state;
						break;
					case 9:
						Parameters.data_.dbPetStasis = state;
						break;
					case 10:
						Parameters.data_.dbPetrify = state;
						break;
				}
			}
		}
		Parameters.save();
		if (setstate != 0) {
			gs_.map.player_.notifyPlayer(state ? name+"": On"" : name+"": Off"", state ? 0xff0000 : 0x00ff00, 1500);
		}
	}
    
    private function selectAimMode() : void
    {
        var _loc1_:int = 0;
        var _loc2_:String = """";
        if (Parameters.data_.aimMode == undefined) {
            _loc1_ = 1;
        }
        else {
            _loc1_ = (Parameters.data_.aimMode + 1) % 3;
        }
        switch(_loc1_) {
            case 1:
                _loc2_ = ""Aim Assist Mode: Highest HP"";
                break;
            case 2:
                _loc2_ = ""Aim Assist Mode: Closest"";
                break;
            case 0:
                _loc2_ = ""Aim Assist Mode: Closest to Cursor"";
        }
        gs_.map.player_.levelUpEffect(_loc2_);
        Parameters.data_.aimMode = _loc1_;
    }

    private function onKeyUp(_arg_1:KeyboardEvent):void {
        var _local_2:Number;
        var _local_3:Number;
        switch (_arg_1.keyCode) {
            case Parameters.data_.moveUp:
                this.moveUp_ = 0;
                break;
            case Parameters.data_.moveDown:
                this.moveDown_ = 0;
                break;
            case Parameters.data_.moveLeft:
                this.moveLeft_ = 0;
                break;
            case Parameters.data_.moveRight:
                this.moveRight_ = 0;
                break;
            case Parameters.data_.rotateLeft:
                this.rotateLeft_ = 0;
                break;
            case Parameters.data_.rotateRight:
                this.rotateRight_ = 0;
                break;
            case Parameters.data_.useSpecial:
				this.specialKeyDown_ = false;
				if (!Parameters.data_.ninjaTap && !inputting) {
					gs_.map.player_.useAltWeapon(gs_.map.mouseX, gs_.map.mouseY, UseType.END_USE)
				}
                break;
        }
        this.setPlayerMovement();
    }

    private function setPlayerMovement():void {
        var _local_1:Player = this.gs_.map.player_;
        if (_local_1 != null) {
            if (enablePlayerInput_) {
                _local_1.setRelativeMovement(rotateRight_ - rotateLeft_, moveRight_ - moveLeft_, moveDown_ - moveUp_);
            }
            else {
                _local_1.setRelativeMovement(0, 0, 0);
            }
        }
    }

    private function useItem(_arg_1:int):void {
        /*if (this.tabStripModel.currentSelection == TabStripModel.BACKPACK) {
            _arg_1 = (_arg_1 + GeneralConstants.NUM_INVENTORY_SLOTS);
        }*/
        GameServerConnection.instance.useItem_new(this.gs_.map.player_, _arg_1);
    }

    private function togglePerformanceStats():void {
        if (this.gs_.contains(stats_)) {
            this.gs_.removeChild(stats_);
            this.gs_.removeChild(this.gs_.gsc_.jitterWatcher_);
            this.gs_.gsc_.disableJitterWatcher();
        }
        else {
            this.gs_.addChild(stats_);
            this.gs_.gsc_.enableJitterWatcher();
            this.gs_.gsc_.jitterWatcher_.y = stats_.height;
            this.gs_.addChild(this.gs_.gsc_.jitterWatcher_);
        }
    }

    private function toggleScreenShotMode():void {
        Parameters.screenShotMode_ = !(Parameters.screenShotMode_);
        if (Parameters.screenShotMode_) {
            this.gs_.hudView.visible = false;
            this.setTextBoxVisibility.dispatch(false);
        }
        else {
            this.gs_.hudView.visible = true;
            this.setTextBoxVisibility.dispatch(true);
        }
    }


}
}//package com.company.assembleegameclient.game"
h4LsHZu7,№16. Tkinter. Анимация,Chl_Snt,Python,Wednesday 12th of July 2023 12:00:39 PM CDT,"import random
import time
from tkinter import *
from tkinter.colorchooser import *


root = Tk()
root.geometry(""800x600+200+200"")
root.title(""Анимация"")
root[""bg""] = 'white'

canvas = Canvas(root, width=800, height=600, bg=""white"")
canvas.pack()
color = ""red""

h_x = 10

bullets = []


canvas.create_rectangle(0, 180, 40, 200, fill=""black"")
canvas.create_rectangle(0, 250, 40, 270, fill=""black"")


def ask_color(event):
    global color
    color_code = askcolor(title=""Выбери цвет"")
    color = color_code[1]


root.bind_all(""<2>"", ask_color)


def shot():
    global bullets
    hero = canvas.create_oval(5, 205, 45, 245, fill=color)
    b = (hero, 10, random.random())
    bullets.append(b)
    root.after(50, shot)


def draw():
    global h_x
    for bull in bullets:
        bullet = bull[0]
        h_x = bull[1]
        h_y = bull[2]

        x, y, x1, y1 = canvas.coords(bullet)
        if x1 >= 800:  # если мяч коснулся правой стенки
            canvas.delete(bullet)
            bullets.remove(bull)

        canvas.move(bullet, h_x, h_y)


shot()
while True:
    root.update()
    root.update_idletasks()
    draw()
    time.sleep(0.01)
"
cuv7eCq5,Untitled,BABKA_88,Python,Wednesday 12th of July 2023 11:41:43 AM CDT,"import numpy as np
import pandas as pd
from sklearn.metrics import r2_score


data_train = pd.read_csv('/datasets/train_data_n.csv')
features_train = data_train.drop(['target'], axis=1)
target_train = data_train['target']

data_test = pd.read_csv('/datasets/test_data_n.csv')
features_test = data_test.drop(['target'], axis=1)
target_test = data_test['target']


class SGDLinearRegression:
    def __init__(self, step_size, epochs, batch_size):
        self.step_size = step_size
        self.epochs = epochs
        self.batch_size = batch_size
    
    def fit(self, train_features, train_target):
        X = np.concatenate((np.ones((train_features.shape[0], 1)), train_features), axis=1)        
        y = train_target
        w = np.zeros(X.shape[1])
        
        for _ in range(self.epochs):
            batches_count = round(X.shape[0] / self.batch_size)
            for i in range(batches_count):
                begin = i * self.batch_size
                end = (i + 1) * self.batch_size
                X_batch = X[begin:end, :]
                y_batch = y[begin:end]
                
                gradient = 2 * X_batch.T.dot(X_batch.dot(w) - y_batch)
                
                w -= self.step_size * gradient

        self.w = w[1:]
        self.w0 = w[0]
        self.batches_count = batches_count
        
    def predict(self, test_features):
        return test_features.dot(self.w) + self.w0
    
model = SGDLinearRegression(0.01, 10, 100)
model.fit(features_train, target_train)
pred_train = model.predict(features_train)
pred_test = model.predict(features_test)
print(r2_score(target_train, pred_train).round(5))
print(r2_score(target_test, pred_test).round(5))"
SrvGJJYm,ReactJS Login Form,shinhosuck1973,Java,Wednesday 12th of July 2023 11:33:24 AM CDT,"API.JS

export const userLogin = async(userInfo) => {
    try {
        const resp = await fetch('/api/login',{
            method:'POST',
            headers:{
                'Content-Type': 'application/json'
            },
            body:JSON.stringify(userInfo)
        })
        const data = await resp.json()
        if(resp.status >= 200 && resp.status <= 299){
            return data
        }
        else {
            return (
                {   message:data.message,
                    status:resp.status, 
                    statusText:resp.statusText
                }
            )
        }
    }
    catch(error) {
        return (
            {message:error.message}
        )
    }
}


LOGINFORM.JS

import { 
    Navigate, 
    Form, 
    redirect, 
    useActionData
} from 'react-router-dom'
import { useState } from 'react'
import { userLogin } from './api'

export const loginAction = async(objs) => {
    const request = objs.request
    const formData = await request.formData()
    const name = formData.get('name')
    const email = formData.get('email')
    const password = formData.get('password')
    const loginInfo = {name: name, email:email, password:password}
    const data = await userLogin(loginInfo)
    if(data.token) {
        localStorage.setItem('Token', JSON.stringify(data.token))
		return redirect('/host')
    }
    else {
        	return data
        }
}


function LoginForm() {
    const [userToken, setUserToken] = useState(()=>(
        localStorage.getItem('Token') 
        ? JSON.parse(localStorage.getItem('Token'))
        : null)
    )

    const data = useActionData()
    const authToken = data?data.token:null

    if(authToken || userToken){
        return (
            <Navigate to='/host'/>
        )
    }
    return (
        <div>
            <Form  method='POST'>
                <h2>Please login</h2>
                <input name='name' type=""text"" placeholder=""Username""/>
                <input name='email' type=""email"" placeholder=""Email""/>
                <input name='password' type=""password"" placeholder=""Password""/>
                <button type='submit'>Login</button>
            </Form>
        </div>
    )
}
export default LoginForm


INDEX.JS

import HostLayoutComponent from './router-6.4-components/HostLayoutComponent';
import HostVanDetailComponent from './router-6.4-components/HostVanDetailComponent';
import LoginForm, {loginAction} from './router-6.4-components/LoginForm';
import ErrorComponent from './router-6.4-components/Error';

const router = createBrowserRouter(
  createRoutesFromElements(
      <Route path='/' element={<BaseLayoutComponent/>}>
        <Route path='host' element={<HostLayoutComponent/>} errorElement={<ErrorComponent/>}>
          <Route index element={<HostVanDetailComponent/>/>
        </Route>
        <Route path='login' element={<LoginForm/>} action={loginAction}/>
        <Route path='*' element={<PageNotFound/>}/>
      </Route>
  )
)


const root = ReactDOM.createRoot(document.querySelector('#root'))
root.render(
  <RouterProvider router={router}/>
)"
RgvBvqdv,Untitled,VFYAS,Python,Wednesday 12th of July 2023 10:38:47 AM CDT,"def plot_values_xy(test_xy, aggfunc='mean', prec=100, figsize=(10, 8), plot=True,
                   save=None, grid=False, title=None, return_img=False, **heatmap_kws):
    test_coords = test_xy.copy()
    test_coords.x = np.int_(test_coords.x * prec) / prec
    test_coords.y = np.int_(test_coords.y * prec) / prec

    test_coords = test_coords.pivot_table(
        index='y',
        columns='x',
        values='value',
        aggfunc=aggfunc,
        fill_value=0
    )
    if plot:
        fig, axs = plt.subplots(figsize=figsize)

        if 'cmap' not in heatmap_kws:
            heatmap_kws['cmap'] = sns.color_palette(""rocket_r"", as_cmap=True)
        
        sns.heatmap(
            test_coords,
            ax=axs,
            **heatmap_kws
        )
        
        if grid:
            axs.grid(linewidth=.3)
        
        axs.set_xlabel('Ось X (мм)')
        axs.set_ylabel('Ось Y (мм)')
        if title is not None:
            axs.set_title(title)
        
        fig.tight_layout()
        if save is not None:
            fig.savefig(save)      
        plt.show()

    if return_img:
        return test_coords"
NqZ5q5HJ,Untitled,PetarPechev,Java,Wednesday 12th of July 2023 10:36:17 AM CDT,"package com.team6.forum.models.dto.post;

import java.time.LocalDateTime;

public class PostDtoOut {
    private int id;

    private String author;

    private String title;

    private String content;

    private int votes;

    private LocalDateTime createdAt;

    public PostDtoOut() {
    }

    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    public String getAuthor() {
        return author;
    }

    public void setAuthor(String author) {
        this.author = author;
    }

    public String getTitle() {
        return title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    public String getContent() {
        return content;
    }

    public void setContent(String content) {
        this.content = content;
    }

    public int getVotes() {
        return votes;
    }

    public void setVotes(int votes) {
        this.votes = votes;
    }

    public LocalDateTime getCreatedAt() {
        return createdAt;
    }

    public void setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
    }
}
"
aPjQ7jEf,Untitled,PetarPechev,Java,Wednesday 12th of July 2023 10:35:45 AM CDT,"package com.team6.forum.models.dto.post;

import javax.validation.constraints.NotBlank;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import static com.team6.forum.utils.Constants.*;

public class PostDto {
    @NotBlank(message = TITLE_CAN_T_BE_EMPTY)
    @NotNull(message = TITLE_CAN_T_BE_EMPTY)
    @NotEmpty(message = TITLE_CAN_T_BE_EMPTY)
    @Size(min = TITLE_LENGTH_MIN, max = TITLE_LENGTH_MAX, message = TITLE_LENGTH_ERROR)
    private String title;

    @NotBlank(message = CONTENT_CAN_T_BE_EMPTY)
    @NotNull(message = CONTENT_CAN_T_BE_EMPTY)
    @NotEmpty(message = CONTENT_CAN_T_BE_EMPTY)
    @Size(min = CONTENT_LENGTH_MIN, max = CONTENT_LENGTH_MAX, message = CONTENT_LENGTH_ERROR)
    private String content;

    public PostDto() {
    }

    public String getTitle() {
        return title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    public String getContent() {
        return content;
    }

    public void setContent(String content) {
        this.content = content;
    }

}
"
UCzhTgzS,adc.c,DrAungWinHtut,C,Wednesday 12th of July 2023 10:23:30 AM CDT,"#include <xc.h>
#include <stdint.h>

// Function prototypes
void ADC_Init();
uint16_t ADC_Read(uint8_t channel);

void main(void) {
    // Initialize ADC
    ADC_Init();

    while (1) {
        // Read analog input from channel 0
        uint16_t adcValue = ADC_Read(0);

        // Process the ADC value as needed
        // ...

        // Delay between consecutive readings
        __delay_ms(500);
    }

    return;
}

void ADC_Init() {
    // Configure ADC module
    ADCON1bits.ADFM = 1;    // Right justify result
    ADCON1bits.ADCS = 0b111;    // FOSC/64 as the conversion clock source
    ADCON1bits.ADPREF = 0b00;   // VREF+ = AVDD, VREF- = AVSS
    ADCON0bits.ADON = 1;    // Enable ADC module
}

uint16_t ADC_Read(uint8_t channel) {
    // Configure ADC channel
    ADCON0bits.CHS = channel;

    // Start ADC conversion
    ADCON0bits.ADGO = 1;

    // Wait for ADC conversion to complete
    while (ADCON0bits.ADGO)
        ;

    // Return the ADC result
    return ((ADRESH << 8) + ADRESL);
}
"
0BvMwK9E,print stuff and then erase them,OrFeAsGr,Python,Wednesday 12th of July 2023 10:01:44 AM CDT,"from time import sleep

print_count = 0

def myprint(stuff, erase=0):
    global print_count
    print(stuff)
    print_count += 1
    if erase == 1:
        for i in range(0,print_count):
            print(""\033[F"",  end="""")
            print(""\033[K"", end="""")

myprint(""Some stuff printed bla bla bla"")
myprint(""Some other stuff printed"")
myprint(""now we're gonna delete these 3 lines"")
sleep(1)
myprint("""", 1)
myprint(""Ok so now we're printing some stuff and you input something below:"")
yours = input()
myprint(""Ah, yes... "" + yours + "" indded."")
myprint(""Now time to erase all this..."")
sleep(1)
myprint("""", 1)"
Yu6N70Bq,inter.c,DrAungWinHtut,C,Wednesday 12th of July 2023 09:51:18 AM CDT,"#include <xc.h>
#include <stdint.h>

// Constants for oxygen level and water exchange
#define OXYGEN_THRESHOLD 80     // Threshold for low oxygen level
#define WATER_EXCHANGE_INTERVAL 5000   // Water exchange interval in milliseconds

// Function prototypes
void Interrupt_Init();
void __interrupt() OxygenLevel_ISR();
void __interrupt() WaterExchange_ISR();

// Global variables
volatile uint8_t oxygenLevel = 100;    // Initial oxygen level
volatile uint8_t waterExchangeFlag = 0;    // Water exchange flag
volatile uint16_t waterExchangeTimer = 0;  // Timer for water exchange interval

void main(void) {
    // Initialize Interrupts
    Interrupt_Init();

    while (1) {
        // Main program loop
        // Perform other tasks
    }

    return;
}

void Interrupt_Init() {
    // Enable interrupts
    INTCONbits.PEIE = 1;    // Peripheral Interrupt Enable bit
    INTCONbits.GIE = 1;     // Global Interrupt Enable bit

    // Configure oxygen level interrupt
    IOCANbits.IOCAN4 = 1;   // Interrupt on falling edge (LOW to HIGH)
    PIE0bits.IOCIE = 1;     // Enable IOC (Interrupt-on-Change) interrupt

    // Configure timer interrupt for water exchange
    T0CON0bits.T0EN = 1;    // Enable Timer0
    T0CON0bits.T016BIT = 0; // 8-bit mode
    T0CON0bits.T0OUTPS = 0b0000;    // 1:1 postscaler
    T0CON1bits.T0CS = 0b010;    // FOSC/4 as the clock source
    T0CON1bits.T0ASYNC = 0;     // Synchronized operation
    T0CON1bits.T0CKPS = 0b1111; // 1:32768 prescaler
    TMR0H = 0x06;   // Initialize Timer0 value (for 5 ms interrupt interval)
    TMR0L = 0x18;
    PIE0bits.TMR0IE = 1;    // Enable Timer0 interrupt
}

void __interrupt() OxygenLevel_ISR() {
    if (IOCAFbits.IOCAF4) {
        IOCAFbits.IOCAF4 = 0;    // Clear the interrupt flag

        // Read oxygen level from sensor
        // Update the oxygenLevel variable with the new value

        // Check oxygen level
        if (oxygenLevel < OXYGEN_THRESHOLD) {
            // Low oxygen level, take appropriate action (e.g., sound an alarm)
            // Perform necessary tasks
        }
    }
}

void __interrupt() WaterExchange_ISR() {
    if (PIR0bits.TMR0IF) {
        PIR0bits.TMR0IF = 0;    // Clear the Timer0 interrupt flag

        // Increment water exchange timer
        waterExchangeTimer++;

        // Check if water exchange interval has elapsed
        if (waterExchangeTimer >= WATER_EXCHANGE_INTERVAL) {
            waterExchangeTimer = 0;     // Reset the timer
            waterExchangeFlag = 1;      // Set the water exchange flag
        }
    }
}
"
C2nKYYnv,Untitled,dllbridge,C,Wednesday 12th of July 2023 09:47:13 AM CDT,"


#include   <stdio.h>

const char *pszMonths[14] = { """", ""January"",                           // The element with index 0 will not be used,                                  
                                 ""February"",
				                    ""March"",
						            ""April"",
						              ""May"",
						             ""June"",
						             ""July"",
					               ""August"",
					            ""September"",
					              ""October"",
				                 ""November"",
				                 ""December"" 
						    };

////////////////////////////////////////////////////
int main()                                        // 
{

    char *p;

    for(int i = 1; i <= 12; i++)
    {
	    printf(  ""%d  "",  pszMonths[i] );			    
		printf(""%10s\t"",  pszMonths[i] );	

        p = (char*)pszMonths[i];

        do{  printf(""%2X, "", *p); 
        
		     p++; 
		
		  }  while(*p);	
		
		printf(""%2X\n"", *p); 
	}
}




"
L0HngvcV,Рисовалка,Chl_Snt,Python,Wednesday 12th of July 2023 09:22:20 AM CDT,"from tkinter import *
from tkinter.colorchooser import *

root = Tk()
root.geometry(""600x400"")
root.title(""Рисовалка"")
root[""bg""] = 'gray75'

canvas = Canvas(root, width=540, height=400, bg=""white"")
canvas.grid(row=0, column=0, rowspan=7)

state = ""square""
brush = 10
color = ""red""


def choose(input):
    global state, brush
    if input == ""plus"" and brush < 98:
        brush += 2
        size.configure(text=brush)
        return
    elif input == ""minus"" and brush > 0:
        brush -= 2
        size.configure(text=brush)
        return
    state = input


def ask_color(event):
    global color
    color_code = askcolor(title=""Выбери цвет"")
    color = color_code[1]
    size.configure(fg=color)


square_btn = Button(root, text=""🟥"", font=(None, 20), command=lambda: choose(""square""))
square_btn.grid(row=0, column=1)
circle_btn = Button(root, text=""🔴"", font=(None, 20), command=lambda: choose(""circle""))
circle_btn.grid(row=1, column=1)
line1_btn = Button(root, text="" ↘ "", font=(None, 20), command=lambda: choose(""line1""))
line1_btn.grid(row=2, column=1)
line2_btn = Button(root, text="" ↙ "", font=(None, 20), command=lambda: choose(""line2""))
line2_btn.grid(row=3, column=1)

plus_btn = Button(root, text=""➕"", font=(None, 20), command=lambda: choose(""plus""))
plus_btn.grid(row=4, column=1)
minus_btn = Button(root, text=""➖"", font=(None, 20), command=lambda: choose(""minus""))
minus_btn.grid(row=5, column=1)

size = Label(root, text=brush, fg=color, font=(None, 32))
size.grid(row=6, column=1)


def paint(event):
    if event.widget.__class__ is not Canvas:
        return
    if state == ""circle"":
        canvas.create_oval(event.x - brush, event.y - brush, event.x + brush, event.y + brush, fill=color, outline=color)
    elif state == ""square"":
        canvas.create_rectangle(event.x - brush, event.y - brush, event.x + brush, event.y + brush, fill=color, outline=color)
    elif state == ""line1"":
        canvas.create_line(event.x - brush, event.y - brush, event.x + brush, event.y + brush, fill=color)
    elif state == ""line2"":
        canvas.create_line(event.x + brush, event.y - brush, event.x - brush, event.y + brush, fill=color)


def erase(event):
    canvas.create_oval(event.x - brush * 2, event.y - brush * 2, event.x + brush * 2, event.y + brush * 2, fill=""white"", outline=""white"")


canvas.bind_all(""<B1-Motion>"", paint)
canvas.bind_all(""<B3-Motion>"", erase)

canvas.bind_all(""<1>"", paint)
canvas.bind_all(""<3>"", erase)
canvas.bind_all(""<2>"", ask_color)


root.mainloop()
"
mLe2aArr,"KittenGame, build with price multiplicator",sinkir,JavaScript,Wednesday 12th of July 2023 09:02:46 AM CDT,"/*
document.sUpgrade = 'transcendenceUpgrades';
var str = ""\n""+game.mods.sophie.queueLabelsAndValues.find(o=>o[0]==document.sUpgrade)[1].join(""\n"")+""\n"";
""\ngame.mods.sophie.aListToBuy = [];""+""\n""+str.replaceAll(""\n"", ""', 'priceMutiplicator':1 } );\ngame.mods.sophie.aListToBuy.push( { 'name':'"").replace(""', 'priceMutiplicator':1 } );\n"",'').replace(/game.mods.sophie.aListToBuy.push\( \{ 'name':'$/g , '');


 ^ 	code to print base of code, past it in console to list transcendenceUpgrades, 
	see game.mods.sophie.queueLabelsAndValues for other upgrades

	/!\ Before using, you need to load the code at https://pastebin.com/raw/cfN9KFAc /!\ 

*/
if(!game.mods || !game.mods.sophie)
{
	console.error(""/!\\ Before using, you need to load the code at https://pastebin.com/raw/cfN9KFAc /!\\ "");
	
}


// base of code generated by commented line 2 + 3 + 4 :
game.mods.sophie.aListToBuy = [];
game.mods.sophie.aListToBuy.push( { 'name':'blackObelisk', 	'priceMutiplicator':10000 } );
game.mods.sophie.aListToBuy.push( { 'name':'blackNexus', 	'priceMutiplicator':10000 } );
game.mods.sophie.aListToBuy.push( { 'name':'blackCore', 	'priceMutiplicator':1000 } );
game.mods.sophie.aListToBuy.push( { 'name':'singularity', 	'priceMutiplicator':1000 } );
game.mods.sophie.aListToBuy.push( { 'name':'blackLibrary', 	'priceMutiplicator':10000 } );
game.mods.sophie.aListToBuy.push( { 'name':'blackRadiance', 'priceMutiplicator':1000 } );
game.mods.sophie.aListToBuy.push( { 'name':'blazar', 		'priceMutiplicator':1000 } );
//game.mods.sophie.aListToBuy.push( { 'name':'darkNova', 		'priceMutiplicator':1 } );
//game.mods.sophie.aListToBuy.push( { 'name':'mausoleum', 	'priceMutiplicator':1 } );
//game.mods.sophie.aListToBuy.push( { 'name':'holyGenocide', 	'priceMutiplicator':1 } );

game.mods.sophie.sResName = ""relic"";
buildRec();


function buildRec()
{
	game.mods.sophie.sortedArray = fillPricesAndSort(game.mods.sophie.aListToBuy, game.mods.sophie.sResName);
	
	if(game.resPool.get(game.mods.sophie.sResName).value > game.mods.sophie.sortedArray[0].prices.find(o=>o.name == game.mods.sophie.sResName).val)
	{
		//console.log(""Try to build ""+game.mods.sophie.sortedArray[0].name);
		var sRet = game.mods.sophie.smartBuild(game.mods.sophie.sortedArray[0].name);
		console.log(sRet+"" build ""+game.mods.sophie.sortedArray[0].name);
		game.render();
		setTimeout(buildRec, 50);
	}
	else
	{
		console.log(""transcendenceUpgrades end"");
	}
	
}


function fillPricesAndSort(aArray)
{
	for(var i=0; i<aArray.length; i++)
	{
		var aTmpPrices = game.mods.sophie.smartGetPrices(aArray[i].name);
		for (var j=0; j<aTmpPrices.length; j++)
		{
			aTmpPrices[j].val *= aArray[i].priceMutiplicator;
		}	
		aArray[i].prices = aTmpPrices;
	}
	aArray.sort((a,b)=> a.prices.find(o=>o.name == game.mods.sophie.sResName).val - b.prices.find(o=>o.name == game.mods.sophie.sResName).val);
	return aArray;
}"
cYGJMCV9,3347 - Ancestralidade,danielvitor23,C++,Wednesday 12th of July 2023 08:54:40 AM CDT,"#include <bits/stdc++.h>
using namespace std;

int main() {
  cin.tie(0)->sync_with_stdio(0);

  int n, p; cin >> n >> p;

  vector<string> s(n);
  string t;

  for (int i = 0; i < p; i++) {
    cin >> s[i];
  }

  cin >> t;

  vector<pair<string, int>> ans;

  for (int i = 0; i < n;) {
    int best = -1, sz = 0;
    for (int j = 0; j < p; ++j) {
      int pos = i;
      while (pos < n and s[j][pos] == t[pos]) {
        ++pos;
      }
      if (pos - i > sz) {
        best = j;
        sz = pos - i;
      }
    }
    if (best == -1) {
      ans.push_back({string(1, t[i]), -1});
      i++;
    } else {
      ans.push_back({t.substr(i, sz), best + 1});
      i += sz;
    }
  }

  for (auto [str, best] : ans) {
    cout << str << ' ' << best << '\n';
  }
}"
ZAwBcDAU,valid_emails,antru,Python,Wednesday 12th of July 2023 08:26:38 AM CDT,"import re
from typing import List


def valid_emails(strings: List[str]) -> List[str]:
    """"""Take list of potential emails and returns only valid ones""""""

    valid_email_regex = r""[\w.-]+@[\w-]+\.[\w.-]+""

    def is_valid_email(email: str) -> bool:
        return bool(re.fullmatch(valid_email_regex, email))

    return [email for email in strings if is_valid_email(email)]
"
NmDqL1kH,How to buy fake MRCP United Kingdem certificate?,jf123123,Bash,Wednesday 12th of July 2023 08:01:58 AM CDT,"How to buy fake MRCP United Kingdem certificate? Buy fake MRCP certificate in UK, Order fake MRCP diploma online, Fake MRCP certificate for sale, Where to make the MRCP (UK) certificate? buy fake diploma, buy fake degree, order fake certificate online.

Email: diplomacentersale@gmail.com 
WhatsApp: +86 19911539281
WeChat: +86 14779983878 
https://www.diploma888.com
https://www.degreemaker.com

It is a privilege to assist individuals in obtaining replacement documents that they have worked hard for. In cases where someone did not receive a genuine diploma from their university, we offer personalized fake degrees, diplomas, and transcripts with specific majors and courses to serve unique purposes. Our website, www.diploma888.com, provides a wide selection of authentic high school certificate designs from universities, colleges, and high schools worldwide. "
zFc3c4Kj,DB2Json,arthurd2,PHP,Wednesday 12th of July 2023 07:59:33 AM CDT,"$mysqli = new mysqli(""db"",""usuario"",""senha"",""banco-de-dados"");

$resultado = $mysqli->query(""show databases;"");

while ($linha = $resultado->fetch_assoc()) $dados[] = $linha;

header('Content-Type: application/json');
echo json_encode($dados);"
39Y7EnV1,Untitled,balage,JSON,Wednesday 12th of July 2023 07:58:06 AM CDT,"{
    ""error_code"": ""INVALID_SCHEDULED_DROPOFF_TIME"",
    ""reason"": ""Invalid scheduled dropoff time"",
    ""details"": ""Delivery times are not configured correctly.""
}"
f2cHsxqc,Untitled,balage,Bash,Wednesday 12th of July 2023 07:57:09 AM CDT,"curl --location 'https://daas-public-api.development.dev.woltapi.com/merchants/649950e0ecb49e6b73c1cac0/delivery-order' \
--header 'Content-Type: application/json' \
--header 'Authorization: Bearer *****' \
--data-raw '{
  ""pickup"": {
    ""comment"": ""EcoFamily Újbuda Center"",
    ""location"": {
      ""coordinates"": {
        ""lat"": 47.459793,
        ""lon"": 19.051605
      },
      ""formatted_address"": ""1117 Budapest Hengermalom út 19-21. null""
    },
    ""contact_details"": {
      ""name"": ""EcoFamily Újbuda Center"",
      ""phone_number"": ""+3614518080"",
      ""send_tracking_link_sms"": false
    },
    ""display_name"": ""EcoFamily Újbuda Center""
  },
  ""dropoff"": {
    ""location"": {
      ""coordinates"": {
        ""lat"": 47.4558914,
        ""lon"": 19.0256254
      },
      ""formatted_address"": ""1119 Budapest Postás utca 6""
    },
    ""contact_details"": {
      ""name"": ""Dooley Dooley"",
      ""phone_number"": ""+36701234567"",
      ""send_tracking_link_sms"": true
    },
    ""comment"": ""!!! TESZT RENDELES !!!""
  },
  ""customer_support"": {
    ""phone_number"": ""+3614518080"",
    ""email"": ""hello@avokado.com"",
    ""url"": ""https://www.avokado.com""
  },
  ""merchant_order_reference_id"": ""I0Y2/1"",
  ""order_number"": ""I0Y2/1"",
  ""is_no_contact"": true,
  ""contents"": [
    {
      ""count"": 1,
      ""name"": ""1"",
      ""dimensions"": {
        ""height_cm"": 50,
        ""width_cm"": 40,
        ""depth_cm"": 20,
        ""weight_gram"": 1000
      },
      ""description"": ""I0Y2/1-1"",
      ""identifier"": ""1"",
      ""price"": {
        ""amount"": 6490,
        ""currency"": ""HUF""
      },
      ""tags"": []
    }
  ],
  ""tips"": [
    {
      ""type"": ""pre_delivery_courier_tip"",
      ""price"": {
        ""amount"": 250,
        ""currency"": ""HUF""
      }
    }
  ],
  ""min_preparation_time_minutes"": 0,
  ""scheduled_dropoff_time"": ""2023-07-15T19:00:00+02:00""
}'"
PLg8C74c,Untitled,Viktor_Chudnovskiy,SQL,Wednesday 12th of July 2023 07:52:08 AM CDT,"with 
u as(select 
		user_id  
     from bi.users 
	 where reg_date >= '2023-05-17' and reg_date <= '2023-06-13' and project_id = 1),
bpal as(select
		user_id, 
		packet_id, 
		created_at, 
		status
	  from dwh_mb_dedup.bonus_packet_award_log q
	  inner join u on q.user_id = u.user_id
	  where status != 'declined'),
bp as(select 
		bpal.*,
		trim(simpleJSONExtractRaw(q.conditions, 'number')) as `deposit_number`
	  from bpal 
	  left join dwh_mb_dedup.bonus_packet q on q.id = bpal.packet_id),
bonuses as (select 
				bp.*,
				b.bonus_type,
				b.rolling_balance,
				b.required_rolling_balance,
				trim(simpleJSONExtractRaw(b.meta, 'bonusPacket')) as `meta_bonus_pack`
			from bp 
			left join bi.bonuses b on bp.user_id = b.user_id
			where b.rolling_balance > 0
			and b.bonus_type like 'TRIGGER_CAMPAIGN%')
select * from bonuses"
5H8PXBti,Dragon Warrior Simulator,LuaXe,Lua,Wednesday 12th of July 2023 07:35:59 AM CDT,"function C() spawn(function () while getgenv().C do
            for i, v in pairs(game.workspace.ClientEntities:GetChildren()) do
local args = {[1] = 1, [2] = v:GetAttribute(""TeamID""),[3] = v.Name} game:GetService(""ReplicatedStorage"").Remotes.ServerEvent_GameManager:FireServer(unpack(args))
            end wait()
        end
    end)
end

local library = loadstring(game:HttpGet(('https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/wall%20v3')))()

local w = library:CreateWindow(""Dragon Warrior Sim"")

local b = w:CreateFolder(""Main"")

b:Toggle(""Instant Kill | Win"",function(val) getgenv().C = val C() end)

b:Label(""Made by X_LuaF#0705"",{TextSize = 21; TextColor = Color3.fromRGB(255,255,255); BgColor = Color3.fromRGB(38, 38, 38);})

local w = library:CreateWindow(""LocalPlayer"")

local b = w:CreateFolder(""LP"")

b:DestroyGui()

b:Button(""Discord"",function() setclipboard(""workink.co/2GQ/LTD"") end)
b:Button(""Full Version"",function() loadstring(game:HttpGet(""https://pastebin.com/raw/GphZf9Xe"", true))() end)
b:Button(""Rejoin"",function() loadstring(game:HttpGet(""https://pastebin.com/raw/mM7JBG5h"", true))() end)
b:Button(""Reset"",function() loadstring(game:HttpGet(""https://pastebin.com/raw/EEY6SATj"", true))() end)

b:Box(""Speed"",""number"",function(val) S = val end)
b:Box(""Jump"",""number"",function(val) J = val end)
b:Box(""Hip Height"",""number"",function(val) H = val end)
b:Box(""Gravity"",""number"",function(val) G = val end)
 
b:Toggle(""Speed"",function(bool) getgenv().WS = bool WS(S) end)
b:Toggle(""Jump"",function(bool) getgenv().JP = bool JP(J) end)
b:Toggle(""Hip Height"",function(bool) getgenv().HH = bool HH(H) end)
b:Toggle(""Gravity"",function(bool) getgenv().WG = bool WG(G) end)
 
b:Slider(""FOV (Default is 70)"",{min = 0;max = 120;precise = true;},function(val) game.workspace.CurrentCamera.FieldOfView = val end)

function TPCFrame(Player_CFrame) if game.Players.LocalPlayer.Character:FindFirstChild(""HumanoidRootPart"") then game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Player_CFrame end end
function RTPCFrame(M_CF) if game.Players.LocalPlayer.Character:FindFirstChild(""HumanoidRootPart"") then M_CF.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame end end
function PHP(Player_HP) game.Players.LocalPlayer.Character.Humanoid.Health = Player_HP end

function WS(N) local TWS = game.Players.LocalPlayer.Character.Humanoid.WalkSpeed game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = TWS spawn(function () while getgenv().WS do game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = N wait() end end) end
function JP(N) local TJP = game.Players.LocalPlayer.Character.Humanoid.JumpPower game.Players.LocalPlayer.Character.Humanoid.JumpPower = TJP spawn(function () while getgenv().JP do game.Players.LocalPlayer.Character.Humanoid.JumpPower = N wait() end end) end
function HH(N) local THH = game.Players.LocalPlayer.Character.Humanoid.HipHeight game.Players.LocalPlayer.Character.Humanoid.HipHeight = THH print(THH) spawn(function () while getgenv().HH do game.Players.LocalPlayer.Character.Humanoid.HipHeight = N wait() end end) end
function WG(N) spawn(function () while getgenv().WG do game.workspace.Gravity = N if not getgenv().WG then game.workspace.Gravity = 196.2 end wait() end end) end"
6gDrDGqg,"How to buy fake University of California, Berkeley degree?",jf123123,C,Wednesday 12th of July 2023 07:19:11 AM CDT,"How to buy fake University of California, Berkeley degree? Order fake UC Berkeley diploma online, Where to obtain replacement UC Berkeley certificate? Fake UC Berkeley diploma for sale, buy fake diploma, buy fake degree, order fake certificate online.

Email: diplomacentersale@gmail.com 
WhatsApp: +86 19911539281
WeChat: +86 14779983878 
https://www.diploma888.com
https://www.degreemaker.com

It is a privilege to assist individuals in obtaining replacement documents that they have worked hard for. In cases where someone did not receive a genuine diploma from their university, we offer personalized fake degrees, diplomas, and transcripts with specific majors and courses to serve unique purposes. Our website, www.diploma888.com, provides a wide selection of authentic high school certificate designs from universities, colleges, and high schools worldwide. "
9uFAzFF9,Урок 3 выполнение оптимизаций,kutuzzzov,C++,Wednesday 12th of July 2023 06:32:23 AM CDT,"#include <cstdint>
#include <iostream>
#include <optional>
#include <limits>

using namespace std;

template <typename T>
optional<T> SafeAdd(T a, T b) {
    if (a > 0 && b > 0) {
        if (a > std::numeric_limits<T>::max() - b) {
            return nullopt;
        }
    }
    if (a < 0 && b < 0) {
        if (a < std::numeric_limits<T>::min() - b) {
            return nullopt;
        }
    }
    return a + b;
}

int main() {
    int64_t a;
    int64_t b;
    cin >> a >> b;
    auto res = SafeAdd(a, b);
    if (res.has_value()) {
        cout << res.value() << endl;
    }
    else {
        cout << ""Overflow!"" << endl;
    }
    
}"
pW7553wU,Untitled,35657,C++,Wednesday 12th of July 2023 06:03:19 AM CDT,"#include <set>
#include <string>
#include <iostream>
#include <vector>

using namespace std;


// Человек
class Person {
public:

    Person() : Person(""Ivan"", 20, ""man"") {} // делегирование конструкторов

    Person(string name, int age, string gender) : name_(name), age_(age), gender_(gender) {
        cout << ""Конструктор Person"" << endl;
    };

    string GetName() const {
        return name_;
    }
    int GetAge() const {
        return age_;
    }
    string GetGender() const {
        return gender_;
    }

private:
    string name_;
    int age_;
    string gender_;
};



// Рабочий.Владеет несколькими специальностями
class Worker : public Person {
public:

    Worker(){}

    Worker(string name, int age, string gender) : Person(name, age, gender) {
        cout << ""Конструктор Worker"" << endl;
    };

    void AddSpeciality(string speciality) {
        specialities_.insert(speciality);
    }
    bool HasSpeciality(string speciality) const {
        return specialities_.count(speciality);
    }

    virtual string Work() = 0;

private:
    set<string> specialities_;
};

class Painter : public Worker {
public:
    Painter(string name, int age, string gender) : Worker(name, age, gender) {
        cout << ""Конструктор Painter"" << endl;
    };

    string Work() {
        return ""Я крашу"";
    }
};

class Driver : public Worker {
public:
    Driver(string name, int age, string gender) : Worker(name, age, gender) {
        cout << ""Конструктор Driver"" << endl;
    };

    string Work() {
        return ""Я везу"";
    }
};

class Builder : public Worker {
public:

    Builder(string name, int age, string gender) : Worker(name, age, gender) {
        cout << ""Конструктор Builder"" << endl;
    };

    string Work() {
        return ""Я строю"";
    }
};


void Print(Worker& wk) {
    cout << wk.Work() << endl;
}

int main() {
    setlocale(LC_ALL, ""ru"");


    Painter pn(""Света"", 25, ""woman"");
    cout << endl << endl;
    Driver dr(""Игорь"", 33, ""man"");
    cout << endl << endl;
    Builder bd(""Женя"", 23, ""man"");
    cout << endl << endl;

    vector<Worker*> workers;

    workers.push_back(&pn);
    workers.push_back(&dr);
    workers.push_back(&bd);

    cout << pn.Work() << endl;
    cout << dr.Work() << endl;
    cout << bd.Work() << endl;


    cout << endl << endl;

    for (auto a : workers) {
        cout << a->GetName() << "" "" << a->GetAge() << "" "" << a->GetGender() << "" "" << a->Work() << endl;
    }

    //Print(pn);

}"
mJXYH4tt,data631,TestGuy1,JSON,Wednesday 12th of July 2023 06:00:06 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: 'b1e23414d06d89f2cc32c8f7106b89136251517b8b70abee9f74239136cf63d086ca85bffca13942fcb81e458a6089f48fef9b1d8deabe3284d090c674098f5505957bc52de9a27617301158b7d6d094b9706b90060172a4759b6458334b42afd1450a586b691e3e722a28769049616755581fd9d853c2a16ba52b1a2a672016',
  otherdata: [
    '3cade7c1515d19f7b3818b560755a59d',
    '7612d704f10e076266f769edb078b8dd',
    '4ff861e44e492353f3fbd678631d3f5c',
    '0a3562ff80ecc695c54ad25931c92380',
    'b4d90d70b170a57e6e9c2be087698131',
    '8f735d3f7cd9322e467e16f15abf46ab',
    '0f109561dca15c9747fd0e9eb856e624',
    '7ce2dc1f20862e9031d35af7015ebf43'
  ]
}"
