id,title,username,language,date,content
B2L9wmTw,12086 - Potentiometers,MiinaMagdy,C++,Friday 26th of May 2023 12:44:09 PM CDT,"/*
+---------------------------------------------+
|                                             |
|       Â© 26/05/2023 (20:23) MinaMagdy        |
|                                             |
+---------------------------------------------+
*/
#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

using namespace std;
using namespace __gnu_pbds;
#define ordered_set tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update>
#define multi_ordered_set tree<int, null_type, less_equal<int>, rb_tree_tag, tree_order_statistics_node_update>
#define endl ""\n""
#define MOD 1000000007
#define INF 2000000000
#define all(s) s.begin(), s.end()
#define rall(s) s.rbegin(), s.rend()
#define sz(x) int(x.size())

typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;

vector<ll> seg, arr;
int sz, n;

void build(int N = 1, int l = 0, int r = sz - 1) {
    if (l == r) {
        seg[N] = (l < n ? arr[l] : 0);
        return;
    }
    int m = l + (r - l) / 2;
    build(N * 2, l, m), build(N * 2 + 1, m + 1, r);
    seg[N] = seg[N * 2] + seg[N * 2 + 1];
}

ll query(ll x, ll y, int N = 1, int l = 0, int r = sz - 1) {
    if (y < l || x > r) return 0;
    if (x <= l && r <= y) return seg[N];
    int m = l + (r - l) / 2;
    return query(x, y, N * 2, l, m) + query(x, y, N * 2 + 1, m + 1, r);
}

void update(ll x, ll vl, int N = 1, int l = 0, int r = sz - 1) {
    if (x < l || r < x) return;
    if (l == r) {
        seg[N] = vl;
        return;
    }
    int m = l + (r - l) / 2;
    update(x, vl, N * 2, l, m), update(x, vl, N * 2 + 1, m + 1, r);
    seg[N] = seg[N * 2] + seg[N * 2 + 1];
    return;
}

void solve() {
    int tc = 0;
    while (cin >> n, n) {
        if (tc) 
            cout << endl;
        cout << ""Case "" << ++tc << "":\n"";
        arr.assign(n, 0);
        for (int i = 0; i < n; i++) cin >> arr[i];
        sz = 1;
        while (sz < n) sz *= 2;
        seg.assign(sz * 2, 0);
        build();
        char c;
        while (cin >> c, c != 'E') {
            ll x, y;
            cin >> x >> y;
            if (c == 'M') {
                --x, --y;
                cout << query(x, y) << endl;
            }
            else {
                --x;
                update(x, y);
            }
        }
        cin >> c >> c; // for N, D in END
    }
}

int main(void)
{
    ios_base::sync_with_stdio(false), cin.tie(NULL), cout.tie(NULL);
    int testcase = 1;
    // cin >> testcase;
    while (testcase--)
        solve();
    return 0;
}"
umVjfZUq,Untitled,Gur0v,Lua,Friday 26th of May 2023 12:05:30 PM CDT,"--[[

 /$$      /$$                 /$$                 /$$                                                                                                                                    
| $$$    /$$$                | $$                | $$                                                                                                                                    
| $$$$  /$$$$  /$$$$$$   /$$$$$$$  /$$$$$$       | $$$$$$$  /$$   /$$ /$$                                                                                                                
| $$ $$/$$ $$ |____  $$ /$$__  $$ /$$__  $$      | $$__  $$| $$  | $$|__/                                                                                                                
| $$  $$$| $$  /$$$$$$$| $$  | $$| $$$$$$$$      | $$  \ $$| $$  | $$                                                                                                                    
| $$\  $ | $$ /$$__  $$| $$  | $$| $$_____/      | $$  | $$| $$  | $$ /$$                                                                                                                
| $$ \/  | $$|  $$$$$$$|  $$$$$$$|  $$$$$$$      | $$$$$$$/|  $$$$$$$|__/                                                                                                                
|__/     |__/ \_______/ \_______/ \_______/      |_______/  \____  $$                                                                                                                    
                                                            /$$  | $$                                                                                                                    
                                                           |  $$$$$$/                                                                                                                    
                                                            \______/                                                                                                                     
  /$$$$$$                                                  /$$$           /$$$$$$$$                                                                                                      
 /$$__  $$                                                /$$ $$         | $$_____/                                                                                                      
| $$  \__/ /$$   /$$  /$$$$$$   /$$$$$$  /$$    /$$      |  $$$          | $$     /$$$$$$   /$$$$$$  /$$$$$$                                                                             
| $$ /$$$$| $$  | $$ /$$__  $$ /$$__  $$|  $$  /$$/       /$$ $$/$$      | $$$$$ /$$__  $$ /$$__  $$|____  $$                                                                            
| $$|_  $$| $$  | $$| $$  \__/| $$  \ $$ \  $$/$$/       | $$  $$_/      | $$__/| $$$$$$$$| $$  \__/ /$$$$$$$                                                                            
| $$  \ $$| $$  | $$| $$      | $$  | $$  \  $$$/        | $$\  $$       | $$   | $$_____/| $$      /$$__  $$                                                                            
|  $$$$$$/|  $$$$$$/| $$      |  $$$$$$/   \  $/         |  $$$$/$$      | $$   |  $$$$$$$| $$     |  $$$$$$$                                                                            
 \______/  \______/ |__/       \______/     \_/           \____/\_/      |__/    \_______/|__/      \_______/                                                                            
                                                                                                                                                                                         
                                                                                                                                                                                         
                                                                                                                                                                                         
                                                                                                                                                                                         
                                                                                                                                                                                         
                                                                                                                                                                                         
                                                                                                                                                                                         
                                                                                                                                                                                         
                                                                                                                                                                                         
                                                                                                                                                                                         
                                                                                                                                                                                         
                                                                                                                                                                                         
                                                                                                                                                                                         
                                                                                                                                                                                         
 /$$$$$$$   /$$$$$$        /$$   /$$  /$$$$$$  /$$$$$$$$        /$$$$$$  /$$$$$$$$ /$$$$$$$$  /$$$$$$  /$$             /$$$$$$$  /$$$$$$ /$$$$$$$$ /$$$$$$  /$$   /$$ /$$$$$$$$  /$$$$$$ 
| $$__  $$ /$$__  $$      | $$$ | $$ /$$__  $$|__  $$__/       /$$__  $$|__  $$__/| $$_____/ /$$__  $$| $$            | $$__  $$|_  $$_/|__  $$__//$$__  $$| $$  | $$| $$_____/ /$$__  $$
| $$  \ $$| $$  \ $$      | $$$$| $$| $$  \ $$   | $$         | $$  \__/   | $$   | $$      | $$  \ $$| $$            | $$  \ $$  | $$     | $$  | $$  \__/| $$  | $$| $$      | $$  \__/
| $$  | $$| $$  | $$      | $$ $$ $$| $$  | $$   | $$         |  $$$$$$    | $$   | $$$$$   | $$$$$$$$| $$            | $$$$$$$   | $$     | $$  | $$      | $$$$$$$$| $$$$$   |  $$$$$$ 
| $$  | $$| $$  | $$      | $$  $$$$| $$  | $$   | $$          \____  $$   | $$   | $$__/   | $$__  $$| $$            | $$__  $$  | $$     | $$  | $$      | $$__  $$| $$__/    \____  $$
| $$  | $$| $$  | $$      | $$\  $$$| $$  | $$   | $$          /$$  \ $$   | $$   | $$      | $$  | $$| $$            | $$  \ $$  | $$     | $$  | $$    $$| $$  | $$| $$       /$$  \ $$
| $$$$$$$/|  $$$$$$/      | $$ \  $$|  $$$$$$/   | $$         |  $$$$$$/   | $$   | $$$$$$$$| $$  | $$| $$$$$$$$      | $$$$$$$/ /$$$$$$   | $$  |  $$$$$$/| $$  | $$| $$$$$$$$|  $$$$$$/
|_______/  \______/       |__/  \__/ \______/    |__/          \______/    |__/   |________/|__/  |__/|________/      |_______/ |______/   |__/   \______/ |__/  |__/|________/ \______/ 
                                                                                                                                                                                         
                                                                                                                                                                                         
                                                                                                                                                                                         

]]

if game.PlaceId == 12981384028 then
    repeat wait() until game:IsLoaded()
    game.StarterGui:SetCore(
        ""SendNotification"",
        {
            Title = ""âï¸ Sword Swing Simulator"",
            Text = ""Made by: Gurov#9999 & fera#6666""
        }
    )


loadstring(game:HttpGet(('https://gist.githubusercontent.com/Gur0v/c7b489f7c1e30e31b9c112a7809728f2/raw/ba42845d987b1847e633e1a3f17d4c6dd5b7a235/Sword%2520Swing%2520Simulator%2520-%2520Main'),true))()

local swordlog = ""Started using sword...""
print(swordlog)
loadstring(game:HttpGet(('https://gist.githubusercontent.com/Gur0v/5a87fe1a0b97fc9ed84ef78971182489/raw/3ad0badbf4441dd0174a77990e5fff937e9e9ebb/hey'),true))()"
28mMKXjB,Lesha_Ochkun,skimono,C++,Friday 26th of May 2023 12:00:11 PM CDT,"#pragma GCC optimize(""Ofast,unroll-loops"")
#pragma GCC target(""avx,avx2,fma"")
#define _CRT_SECURE_NO_WARNINGS

#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include <cmath>
#include <stack>
#include <iomanip>
#include <fstream>
#include <string>
#include <set>
#include <deque>
#include <queue>
#include <map>
#include <bitset>
#include <random>
#include <list>
#include <unordered_map>
#include <unordered_set>
#include <cassert>

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;
typedef string str;
//typedef __int128 ultraint;
#define sqrt sqrtl
#define F first
#define S second
#define endl '\n'
#define all(vc666) vc666.begin(), vc666.end()
#define allr(vc666) vc666.rbegin(), vc666.rend()
#define int long long
#define degug(x) cerr (#x) << "" "" << (x) << endl;

const ll INF = (ll)1e18;
const ll inf = 1e11 + 7;
const ll ONE = 1;
const ll mod = 1e9 + 7;
const ll m1 = 1e9 + 575179;
const ll m2 = 1e9 + 87;
const ll k = 347;
const ll LG = 19;
ld EPS = 1e-12;
ld PI = 3.1415926535897932384;
mt19937_64 gen(rand() + rand());

int cnt(int x, int bit) {
    int nw = (ONE << (bit + ONE));
    int nw2 = (ONE << bit);
    int cnt = (x + ONE) / nw;
    x = x - cnt * nw + 1;
    cnt *= nw2;
    cnt += max((int)0, x - nw2);
    return cnt;
}

void solve() {
    int q;
    cin >> q;
    int l, r, bit, u1, u2, zxc = 0, mx = -1, zxc2 = 0, mn = INF, i;
    while (q--) {
        cin >> l >> r;
        mx = max(mx, r);
        mn = min(mn, l);
        for (bit = 0; bit < 63; bit++) {
            u1 = cnt(r, bit);
            u2 = cnt(l - 1, bit);
            u1 -= u2;
            if (u1 % 2 == 1) {
                zxc ^= (ONE << bit);
            }
        }
    }
    if (zxc == 0) {
        cout << ""Lose"" << endl;
    }
    else {
        cout << ""Win"" << endl;
        for (i = mx; i >= mn; i--) {
            if ((zxc xor i) <= i) {
                cout << i << "" "" << (zxc xor i) << endl;
                return;
            }
        }
    }
}

signed main() {
#ifdef _DEBUG
    freopen(""input.txt"", ""r "", stdin);
    freopen(""output.txt"", ""w"", stdout);
#endif
    ios_base::sync_with_stdio(0);
    cin.tie(NULL);
    cout.tie(NULL);
    int t = 1;
    //cin >> t;
    while (t--) solve();
}
//Deisgned by skimono"
HQ3XmcvJ,amount,cleverus,JavaScript,Friday 26th of May 2023 11:52:46 AM CDT,"/* This is your custom Javascript */
jQuery(document).ready(function ($) {
    $(""#header-aside .signin-button"").attr(""href"", '//earn.community/login');
    setLoginLink();

    $("".kv-login-link"").click(function (event) {
        if ( $(""body"").hasClass(""logged-in"") ) {
      $('.bb-mobile-header-wrapper .header-aside .sub-menu').toggleClass('active');      
        }
        else {
            window.location.href = ""https://earn.community/login"";
        }
    });

	$('.user-wrap .sub-menu').clone(true).insertAfter('.bb-mobile-header-wrapper .kv-login-link');  

	var cntCredits;

	if($('body').hasClass('logged-in')){
		if ($('.gamipress-inline-points-credit-amount').length > 0) {
			cntCredits = $("".gamipress-inline-points-credit-amount"").html();
			localStorage.setItem('credits', cntCredits);			
		} else {
			cntCredits = localStorage.getItem('credits');			
		}		

		$('<a href=""http://earn.community/credits"" class=""kv-menu-credits""> <div class=""kv-menu-credits__ico""> <img src=""/wp-content/uploads/2022/11/Untitled-design-2022-11-07T151629.047.png"" alt=""""> </div> <div class=""kv-menu-credits__counter"">' + cntCredits + '</div></a').insertBefore($('.header-aside .header-aside-inner'));
		 
		$('<a href=""http://earn.community/credits"" class=""kv-menu-credits""> <div class=""kv-menu-credits__ico""> <img src=""/wp-content/uploads/2022/11/Untitled-design-2022-11-07T151629.047.png"" alt=""""> </div> <div class=""kv-menu-credits__counter"">' + cntCredits + '</div></a>').insertBefore($('.header-aside .kv-login-link'));	
	}
	
	const myTimeout = setTimeout(kvReputation, 4000);
	
	function kvReputation(){
		$('.gamipress-buddypress-reputation').click(function(){
			window.location.href = ""https://earn.community/members/tokenmage/"";
		})		
		
		$('.gamipress-user-points-credit').click(function(){
			window.location.href = ""https://earn.community/credits/""
		})

		$('.gamipress-user-points-reputation').click(function(){
			window.location.href = ""https://earn.community/reputation/""
		})

		$('.gamipress-user-points-usd').click(function(){
			window.location.href = ""https://earn.community/usd/""
		})			
	}	
});


function setLoginLink() {
    jQuery("".bb-mobile-header .header-search-link"").addClass(""kv-login-link"");
    jQuery("".bb-mobile-header .kv-login-link"").removeClass(""header-search-link"");
    jQuery("".bb-mobile-header .kv-login-link"").attr(""data-balloon"", """");
    jQuery("".bb-mobile-header .kv-login-link .bb-icon-l"").removeClass(""bb-icon-search"");
    jQuery("".bb-mobile-header .kv-login-link .bb-icon-l"").addClass(""bb-icon-key"");
}
"
fgnA9rVT,Triggers for Artem,masha_mmk,PostgreSQL,Friday 26th of May 2023 11:15:08 AM CDT,"-- 1 employees
CREATE OR REPLACE FUNCTION check_is_joined_before_born()
    RETURNS TRIGGER AS
$$
BEGIN
    IF NEW.joined_at < NEW.date_of_birth
    THEN
        RAISE EXCEPTION 'Employee must be born before joining the airport';
    END IF;
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE OR REPLACE TRIGGER verify_joined_date
    BEFORE INSERT OR UPDATE
    ON employees
    FOR EACH ROW
EXECUTE FUNCTION check_is_joined_before_born();

-- 2 employees
CREATE OR REPLACE FUNCTION check_is_brigade_specialization_correct()
    RETURNS TRIGGER AS
$$
BEGIN
    IF NOT (SELECT specializations.name FROM specializations WHERE id = NEW.specialization_id) =
           (SELECT s.name
            FROM brigades
                     INNER JOIN specializations s ON s.id = brigades.specialization_id
            WHERE brigades.id = NEW.brigade_id)
    THEN
        RAISE EXCEPTION 'Brigade is not associated with the given specialization';
    END IF;
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE OR REPLACE TRIGGER verify_specialization
    BEFORE INSERT OR UPDATE
    ON employees
    FOR EACH ROW
EXECUTE FUNCTION check_is_brigade_specialization_correct();

-- 1 departments

CREATE OR REPLACE FUNCTION check_is_department_unique()
    RETURNS TRIGGER AS
$$
BEGIN
    IF EXISTS (SELECT 1 FROM departments WHERE departments.name = NEW.name)
    THEN
        RAISE EXCEPTION 'Department name must be unique';
    END IF;
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE OR REPLACE TRIGGER verify_department_name
    BEFORE INSERT OR UPDATE
    ON departments
    FOR EACH ROW
EXECUTE FUNCTION check_is_department_unique();

-- 2 departments

CREATE OR REPLACE FUNCTION check_is_chef_from_same_department()
    RETURNS TRIGGER AS
$$
BEGIN
    IF NOT (SELECT departments.name
            FROM departments
                     INNER JOIN departments_chiefs dc ON departments.id = dc.department_id
            WHERE departments.name = NEW.name) = (SELECT d.name
                                                  FROM employees
                                                           INNER JOIN departments d ON d.id = employees.department_id
                                                  WHERE employees.id = NEW.chef_id)
    THEN
        RAISE EXCEPTION 'Employee must belong to the given department';
    END IF;
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE OR REPLACE TRIGGER verify_department_chef
    BEFORE INSERT OR UPDATE
    ON departments
    FOR EACH ROW
EXECUTE FUNCTION check_is_chef_from_same_department();

-- 1 brigades

CREATE OR REPLACE FUNCTION check_is_brigade_unique()
    RETURNS TRIGGER AS
$$
BEGIN
    IF EXISTS (SELECT 1 FROM brigades WHERE brigades.name = NEW.name)
    THEN
        RAISE EXCEPTION 'Brigade name must be unique';
    END IF;
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE OR REPLACE TRIGGER verify_brigade_name
    BEFORE INSERT OR UPDATE
    ON brigades
    FOR EACH ROW
EXECUTE FUNCTION check_is_brigade_unique();

-- 2 brigades

CREATE OR REPLACE FUNCTION check_is_brigade_has_airplanes_assigned()
    RETURNS TRIGGER AS
$$
BEGIN
    IF EXISTS (SELECT 1 from airplanes inner join brigades b on OLD.id = airplanes.pilots_brigade_id)
    THEN
        RAISE EXCEPTION 'There should be no airplanes serviced by the brigade to delete it';
    END IF;
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE OR REPLACE TRIGGER verify_brigade_has_no_airplanes_assigned
    BEFORE DELETE
    ON brigades
    FOR EACH ROW
EXECUTE FUNCTION check_is_brigade_has_airplanes_assigned();

-- 1 pilotsmedicalexaminations

CREATE OR REPLACE FUNCTION check_is_exists_by_done_at()
    RETURNS TRIGGER AS
$$
BEGIN
    IF EXISTS (SELECT 1 from airplane_maintenance_operations WHERE airplane_maintenance_operations.done_at = NEW.done_at)
    THEN
        RAISE EXCEPTION 'Airplane maintenance operation for this date is already registered';
    END IF;
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE OR REPLACE TRIGGER verify_examination_by_done_at_date
    BEFORE INSERT OR UPDATE
    ON brigades
    FOR EACH ROW
EXECUTE FUNCTION check_is_exists_by_done_at();


-- 2 pilotsmedicalexaminations

-- Ð² ÐºÐ»Ð°ÑÑÐµ Ð±Ð¾Ð»ÑÑÐµ Ð½ÐµÑ Ð¸ÑÐºÐ»ÑÑÐµÐ½Ð¸Ð¹, ÐµÑÐ»Ð¸ ÑÑÐ¾ ÑÑÑÐ¾Ð¼ Ð´Ð¾Ð´ÐµÐ»Ð°Ñ, ÐµÑÐ»Ð¸ ÑÐºÐ°Ð¶ÐµÑÑ, ÐºÐ°ÐºÐ¾Ð¹ ÑÐ´ÐµÐ»Ð°ÑÑ
"
bUNPAiaF,Untitled,geminilabs,PHP,Friday 26th of May 2023 10:59:01 AM CDT,"/**
 * Add LegalService as a schema type in Site Reviews
 * @param array $settings
 * @return array
 */
add_filter('site-reviews/addon/settings', function ($settings) {
	if (isset($settings['settings.schema.integration.types']['options'])) {
		$settings['settings.schema.integration.types']['options']['LegalService'] = 'Legal Service';
		natsort($settings['settings.schema.integration.types']['options']);
	}
	return $settings;
});"
96mcVD0x,Untitled,diela33,JavaScript,Friday 26th of May 2023 10:55:42 AM CDT,"describe('mathEnforcer', () => {

    describe('addFive', () => {
        it('type !num', () => {
            assert.equal(mathEnforcer.addFive('str'), undefined);
            assert.equal(mathEnforcer.addFive(['str']), undefined)
            assert.equal(mathEnforcer.addFive({}), undefined)
        });
        it('add five', () => {
            assert.equal(mathEnforcer.addFive(5), 10);
            assert.equal(mathEnforcer.addFive(-10), -5)
            assert.closeTo(mathEnforcer.addFive(1.5), 6.5, 0.01)
        });
    });
    describe('subtractTen', () => {
        it('type !num', () => {
            assert.equal(mathEnforcer.subtractTen('str'), undefined);
            assert.equal(mathEnforcer.subtractTen(['str']), undefined)
            assert.equal(mathEnforcer.subtractTen({}), undefined)
        });
        it('subtract Ten', () => {
            assert.equal(mathEnforcer.subtractTen(20), 10);
            assert.equal(mathEnforcer.subtractTen(-20), -30)
            assert.closeTo(mathEnforcer.subtractTen(10.5), 0.5, 0.01)
        });
    });
    describe('sum', () => {
        it('sum', () => {
            assert.equal(mathEnforcer.sum('Koki', 10), undefined);
            assert.equal(mathEnforcer.sum([1, 5], 10), undefined);
            assert.equal(mathEnforcer.sum({}, 10), undefined);
            assert.equal(mathEnforcer.sum(undefined, 10), undefined);
        });
        it('sum', () => {
            assert.equal(mathEnforcer.sum(20, 20), 40);
            assert.equal(mathEnforcer.sum(-20, -10), -30)
            assert.closeTo(mathEnforcer.sum(10.5, 11), 0.01, 21.50)
            assert.equal(mathEnforcer.sum(2, -5), -3)
        })
    })

});"
XyRHDfF2,Untitled,cepxuozab,C++,Friday 26th of May 2023 09:47:02 AM CDT,"void Polymorphism() {
        {
            Student s(""ivan""s, 37);
            Person& p = s;

            p.Dance();
            ASSERT_EQUAL(p.GetDanceCount(), 1);
            ASSERT_EQUAL(p.GetSatisfaction(), 100 + 1);
            p.LiveADay();
            ASSERT_EQUAL(p.GetDanceCount(), 1);
            ASSERT_EQUAL(p.GetSatisfaction(), 100 + 1 - 3);
        } {
            Worker w(""ivan""s, 17);
            Person& p = w;

            p.Dance();
            ASSERT_EQUAL(p.GetDanceCount(), 1);
            ASSERT_EQUAL(p.GetSatisfaction(), 100 + 1);
            p.LiveADay();
            ASSERT_EQUAL(p.GetDanceCount(), 1);
            ASSERT_EQUAL(p.GetSatisfaction(), 100 + 1 - 5);
        } {
            Worker w(""ivan""s, 37);
            Person& p = w;

            p.Dance();
            ASSERT_EQUAL(p.GetDanceCount(), 1);
            ASSERT_EQUAL(p.GetSatisfaction(), 100 + 2);
            p.LiveADay();
            ASSERT_EQUAL(p.GetDanceCount(), 1);
            ASSERT_EQUAL(p.GetSatisfaction(), 100 + 2 - 5);
        }
    }"
QEPmqMYx,Untitled,homerowsky,Java,Friday 26th of May 2023 09:39:23 AM CDT,"//EDAFEDAC
package semaphores;

import java.util.concurrent.Semaphore;

import static semaphores.Threading.startThread;

public class ABCWithSem {

static final PrettyPrinter printer = new PrettyPrinter(8);
static final int COUNT = 30;

static final Semaphore a = new Semaphore(0);
static final Semaphore b = new Semaphore(0);
static final Semaphore c = new Semaphore(0);
static final Semaphore d = new Semaphore(0);
static final Semaphore e = new Semaphore(2);
static final Semaphore f = new Semaphore(1);

public static void main(String[] args) {
startThread(() -> runA());
startThread(() -> runB());
startThread(() -> runC());
startThread(() -> runD());
startThread(() -> runE());
startThread(() -> runF());
}

static void runA() throws InterruptedException {
for (int i = 0; i < (COUNT*2); i++) {
a.acquire(); // acquire to odpowiednik P(a)
printer.output(""A "");
f.release(1); // release to odpowiednik V(b)
c.release(1);
}
}

static void runB() throws InterruptedException {
for (int i = 0; i < COUNT; i++) {
b.acquire(); // P(b)
printer.output(""B "");
c.release(); // V(c)

}
}

;

static void runC() throws InterruptedException {
for (int i = 0; i < COUNT; i++) {
c.acquire(2); // P(c)
printer.output(""C "");
// V(a)
e.release(2); // V(a)

}
}

static void runD() throws InterruptedException {
for (int i = 0; i < (COUNT*2); i++) {
d.acquire(); // P(c)
printer.output(""D "");
a.release(); // V(a)
}
}

static void runE() throws InterruptedException {
for (int i = 0; i < (COUNT*2); i++) {
e.acquire(2); // P(c)
printer.output(""E "");
d.release(); // V(a)
}
}
static void runF() throws InterruptedException {
for (int i = 0; i < (COUNT*2); i++) {
f.acquire(2); // P(c)
printer.output(""F "");
e.release(2); // V(a)

}
}
;
}
"
UJjAwbJ1,GitHub Actions Release Version,rinodrops,YAML,Friday 26th of May 2023 09:22:01 AM CDT,"name: Create Release

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get current date
        id: date
        run: echo ""::set-output name=date::$(date +'%Y%m%d')""

      - name: Get number of releases today
        id: today-releases
        run: |
          today_releases=$(gh release list --json createdAt --limit 100 | jq -r '.[] | .createdAt' | grep ""$(date -I)"" | wc -l)
          echo ""::set-output name=count::$((today_releases+1))""

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.date.outputs.date }}-${{ steps.today-releases.outputs.count }}
          release_name: Release ${{ steps.date.outputs.date }}-${{ steps.today-releases.outputs.count }}
          draft: false
          prerelease: false
"
71jh9A9r,Ð£ÑÐ¾Ðº 6 Ð¢ÐµÑÐ½Ð¸ÑÑÑÐµ Ð¿ÑÑÐ¸,kutuzzzov,C++,Friday 26th of May 2023 09:18:44 AM CDT,"#include <cassert>
#include <filesystem>
#include <fstream>
#include <iostream>
#include <sstream>
#include <string>
#include <string_view>
#include <vector>
#include <algorithm>

using namespace std;
using filesystem::path;

path operator""""_p(const char* data, std::size_t sz) {
    return path(data, data + sz);
}

void PrintTree(ostream& dst, const path& p, const filesystem::file_status& status, int offset) {
    dst << string(offset, ' ') << p.filename().string() << endl;
    if (status.type() == filesystem::file_type::directory) {
        vector<filesystem::directory_entry> objects;
        for (const auto& dir_entry : filesystem::directory_iterator(p)) {
            objects.push_back(dir_entry);
        }
        sort(objects.begin(), objects.end(), [](const auto& lhs, const auto& rhs) {
            return lhs.path().filename() > rhs.path().filename();
            });
        for (const auto& dir_entry : objects) {
            PrintTree(dst, dir_entry.path(), dir_entry.status(), offset + 2);
        }
    }
}

// Ð½Ð°Ð¿Ð¸ÑÐ¸ÑÐµ ÑÑÑ ÑÑÐ½ÐºÑÐ¸Ñ
void PrintTree(ostream& dst, const path& p) {
    error_code err;
    auto status = filesystem::status(p, err);
    if (err) {
        return;
    }
    PrintTree(dst, p, status, 0);
}

int main() {
    error_code err;
    filesystem::remove_all(""test_dir"", err);
    filesystem::create_directories(""test_dir""_p / ""a""_p, err);
    filesystem::create_directories(""test_dir""_p / ""b""_p, err);

    ofstream(""test_dir""_p / ""b""_p / ""f1.txt""_p);
    ofstream(""test_dir""_p / ""b""_p / ""f2.txt""_p);
    ofstream(""test_dir""_p / ""a""_p / ""f3.txt""_p);

    ostringstream out;
    PrintTree(out, ""test_dir""_p);
    assert(out.str() ==
        ""test_dir\n""
        ""  b\n""
        ""    f2.txt\n""
        ""    f1.txt\n""
        ""  a\n""
        ""    f3.txt\n""sv
    );
}
"
ArQC4TfD,Advanced AND - Donald AND Duck AND Hello,wheresTheAnyKey,C,Friday 26th of May 2023 09:17:36 AM CDT,"Pasted at: 26/05/2023 15:17
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND
hello, donald was a duck

5502491997132108

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
FuzzyÂ£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
FuzzyÂ§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
FuzzyÂ±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH
"
UqARxP1A,Financial What's Inside - Email/IP/Bank,wheresTheAnyKey,C,Friday 26th of May 2023 09:17:34 AM CDT,"Pasted at: 26/05/2023 15:17
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3
What's Inside Paste 

5378496492418234
5571598708435236
5587663820997281
5502491997132108
5516931903918995
5322909948799236
5443317136071703
5409137465238695
5497550044220575
5559606180091553

aaribaud@att.net
aaribaud@comcast.net
aaribaud@att.com
aaribaud@att.co.uk
aaribaud@yahoo.com

246.107.72.199
221.187.199.189
3.109.3.44
109.112.85.139
250.83.213.179
169.141.201.234
50.180.50.59
20.181.54.231
64.235.191.167
48.103.36.43"
cNQv0MLC,Financial with SPECIAL CHARACTERS,wheresTheAnyKey,C,Friday 26th of May 2023 09:17:33 AM CDT,"Pasted at: 26/05/2023 15:17
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND

5148-2121-6312-7114   - DASHES
5148212163127114
5107-4578-0576-9075   - DASHES
5107457805769075
3488-1760-1454-729   - DASHES
348817601454729

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
FuzzyÂ£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
FuzzyÂ§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
FuzzyÂ±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH"
WktMpBKx,Domains with SPECIAL CHARS,wheresTheAnyKey,C,Friday 26th of May 2023 09:17:31 AM CDT,"Pasted at: 26/05/2023 15:17
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND

www.qatesting.com
blog.qatesting.com
www.qatesting.com/index.html
www.qatesting.com/home
www.qatestingblog.com
www.qatestingtutorials.com
shop.qatesting.co.uk
admin.qatesting.io 
qatesting
qatesting.co.uk
qatesting.cn
qatesting.io
findmetesting.com
www.qatesting-blog.com
www.qatesting-blog23.com
www.qatesting
www.qatesting.co.uk
www.qatesting.cn
www.qatesting.io
www.findmetesting.com
www.wobsut.gov

The difference is that QA is process oriented and QC is product oriented.

Testing, therefore is product oriented and thus is in the QC domain. Testing for quality isn't assuring quality, it's controlling it.



Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
FuzzyÂ£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
FuzzyÂ§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
FuzzyÂ±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH
"
nsmwKFvw,ALL Keywords with Excluded Words,wheresTheAnyKey,C,Friday 26th of May 2023 09:17:30 AM CDT,"Pasted at: 26/05/2023 15:17
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND 

The dystopian version of superintelligence is illustrated with frequency by leaders in the technology industry, and is famously depicted by Hollywood in films like Terminator, 
or more recently Ex Machina, and even the Avengers. The âfurious deity A.I.â is a story you know, because it is the story you are constantly told: we build the thinking machine, 
it surpasses our abilities in every way, and it destroys us for one of any number of reasons.Maybe it perceives us as a threat. Maybe weâre just in its way, 
and it hardly perceives us at allâââmankind, a disposable insect race.

There are of course many arguments in opposition to the now ubiquitous concept of our apocalypse by artificial intelligence. 
I myself have called into question the logic of such dystopian arguments in Anatomy of Next. But our subject here is less pertaining to the nature of the conscious machine than 
it is to the way we talk about this subject, and what it means. First, consider that most of the artificial intelligence depicted in culture looks human, a representation with 
no basis in technological reality. Then, the true scope of the Singularity is almost impossible to predict, which begs a question: where are these opinions about the broadly 
unknowable coming from?"
CfHxDrTP,All Keywords with ANY Additional Words,wheresTheAnyKey,C,Friday 26th of May 2023 09:17:28 AM CDT,"Pasted at: 26/05/2023 15:17
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND KEYWAUTO

The dystopian version of superintelligence is illustrated with frequency by leaders in the technology industry, and is famously depicted by Hollywood in films like Terminator, or more recently Ex Machina, and even the Avengers. The âangry god A.I.â is a story you know, because it is the story you are constantly told: we build the thinking machine, it surpasses our abilities in every way, and it destroys us for one of any number of reasons.
Maybe it perceives us as a threat. Maybe weâre just in its way, and it hardly perceives us at allâââhumanity, a disposable insect race.

There are of course many arguments in opposition to the now ubiquitous concept of our apocalypse by artificial intelligence. I myself have called into question the logic of such dystopian arguments in Anatomy of Next. But our subject here is less pertaining to the nature of the conscious machine than it is to the way we talk about this subject, and what it means. First, consider that most of the artificial intelligence depicted in culture looks human, a representation with no basis in technological reality. Then, the true scope of the Singularity is almost impossible to predict, which begs a question: where are these opinions about the broadly unknowable coming from?

6589745854123698

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
FuzzyÂ£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
FuzzyÂ§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
FuzzyÂ±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH
"
udW2WGSa,IP with SPECIAL CHARACTERS,wheresTheAnyKey,C,Friday 26th of May 2023 09:17:25 AM CDT,"Pasted at: 26/05/2023 15:17
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND

123.123.123.149
123.123.123.7
123.123.123.186
123.123.123.47
123.123.123.187
123.123.123.47
123.123.123.130
123.123.123.62
123.123.123.87
123.123.123.1
123.123.123.61
123.123.123.1
123.123.123.65
123.123.123.65
123.123.123.189
123.123.123.193
123.123.123.78
123.123.123.142
123.123.123.107
123.123.123.126
123.123.123.13
123.123.123.171
123.123.123.45
123.123.123.61
123.123.123.93
123.123.123.2
123.123.123.71
123.123.123.41
123.123.123.184
123.123.123.74
123.123.123.106
123.123.123.171
123.123.123.188
123.123.123.177
123.123.123.185
123.123.123.9
123.123.123.184
123.123.123.100
123.123.123.31
123.123.123.164
123.123.123.184
123.123.123.12
123.123.123.153
123.123.123.72
123.123.123.44
123.123.123.119
123.123.123.119
123.123.123.163
123.123.123.38
123.123.123.67
123.123.123.59
123.123.123.10
123.123.123.50
123.123.123.121
123.123.123.145
123.123.123.159
123.123.123.64
123.123.123.6
123.123.123.39
123.123.123.198
123.123.123.17
123.123.123.65
123.123.123.149
123.123.123.84
123.123.123.8
123.123.123.145
123.123.123.65
123.123.123.94
123.123.123.79
123.123.123.177
123.123.123.67
123.123.123.78
123.123.123.80
123.123.123.79
123.123.123.50
123.123.123.87
123.123.123.15
123.123.123.80
123.123.123.145
123.123.123.75
123.123.123.4
123.123.123.59
123.123.123.59
123.123.123.190
123.123.123.64
123.123.123.63
123.123.123.102
123.123.123.114
123.123.123.146
123.123.123.53
123.123.123.124
123.123.123.30
123.123.123.57
123.123.123.64
123.123.123.69
123.123.123.33
123.123.123.12
123.123.123.73
123.123.123.36
123.123.123.153
100.123.123.50
100.123.123.39
100.123.123.156
100.123.123.56
100.123.123.175
100.123.123.121
100.123.123.114
100.123.123.118
100.123.123.13
100.123.123.174
100.123.123.84
100.123.123.161
100.123.123.63
100.123.123.51
100.123.123.66
100.123.123.190
100.123.123.101
100.123.123.72
100.123.123.24
100.123.123.151
100.123.123.143
100.123.123.146
100.123.123.117
100.123.123.21
100.123.123.10
100.123.123.98
100.123.123.114
100.123.123.6
100.123.123.101
100.123.123.14
100.123.123.147
100.123.123.159
100.123.123.157
100.123.123.6
100.123.123.175
100.123.123.35
100.123.123.136
100.123.123.2
100.123.123.139
100.123.123.11
100.123.123.179
100.123.123.16
100.123.123.40
100.123.123.20
100.123.123.20
100.123.123.150
100.123.123.77
100.123.123.48
100.123.123.22
100.123.123.24
100.123.123.9
100.123.123.187
100.123.123.131
100.123.123.148
100.123.123.152
100.123.123.96
100.123.123.199
100.123.123.15
100.123.123.4
100.123.123.112
100.123.123.62
100.123.123.186
100.123.123.36
100.123.123.136
100.123.123.83
100.123.123.38
100.123.123.120
100.123.123.147
100.123.123.15
100.123.123.134
100.123.123.19
100.123.123.196
100.123.123.115
100.123.123.126
100.123.123.39
100.123.123.193
100.123.123.117
100.123.123.115
100.123.123.115
100.123.123.33
100.123.123.121
100.123.123.72
100.123.123.189
100.123.123.76
100.123.123.78
100.123.123.61
100.123.123.112
100.123.123.176
100.123.123.82
100.123.123.183
100.123.123.168
100.123.123.24
100.123.123.134
100.123.123.145
100.123.123.195
100.123.123.189
100.123.123.157
100.123.123.114
100.123.123.34
100.123.123.166

These are a list of generated IPs for test purPoses. They seRVe no purpose only to act as test data for testing activities.
You might findMEtesting 123.123.123.123 or findmetesting 100.123.123.76. These are my favourite ip addresses 123.123.123.23 100.123.123.23.
These are some random words networking, ipaddresses, studpidIPs


Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
FuzzyÂ£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
FuzzyÂ§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
FuzzyÂ±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH"
i5BpwUdU,Hashed Email With Exclude,wheresTheAnyKey,C,Friday 26th of May 2023 09:17:24 AM CDT,"Pasted at: 26/05/2023 15:17
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

wojciech@sktestcomcast.net
joglo@sktestmac.com
larry@sktesthotmail.com
aardo@sktestverizon.net
debest@sktestlive.com
carroll@sktestaol.com
arathi@sktestyahoo.ca
sthomas@sktestcomcast.net
leocharre@sktestyahoo.ca
pedwards@sktestyahoo.com

skexclude"
3je6tBua,Hashed Email - Full,wheresTheAnyKey,C,Friday 26th of May 2023 09:17:22 AM CDT,"Pasted at: 26/05/2023 15:17
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

wojciech@sktestcomcast.net
joglo@sktestmac.com
larry@sktesthotmail.com
aardo@sktestverizon.net
debest@sktestlive.com
carroll@sktestaol.com
arathi@sktestyahoo.ca
sthomas@sktestcomcast.net
leocharre@sktestyahoo.ca
pedwards@sktestyahoo.com

skinclude"
CYffZ58g,Email with Keyword SPECIAL CHARACTERS,wheresTheAnyKey,C,Friday 26th of May 2023 09:17:20 AM CDT,"Pasted at: 26/05/2023 15:17
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3 for TESTING PURPOSE ONLY

DATA_ID_TESTDATATOFIND NOEXCLUDES

Cooper.Kleine@findmetesting.co.uk 
Mariquilla.Evenden@findmetesting.co.uk 
Noll.Ingolotti@findmetesting.co.uk  
Grove.Feldbaum@findmetesting.co.uk
Mack.Osment@findmetesting.co.uk 
Trisha.Zanicchelli@findmetesting.co.uk
Jack.Gorriessen@findmetesting.co.uk 
Nefen.Malec@findme-testing.co.uk 
Birdie-Gemmill@findmetesting.co.uk
Rosabella.Nias@findmetesting.co.uk
Ellerey.Fanti@findmetesting.cn
Antonina.Carsey@findmetesting.cn
Valry.Shead@findmetesting.cn 
Conrade.Ferrarone@findmetesting.cn
Neysa.Fazakerley@findmetesting.cn
Cristobal.Primak@findmetesting.cn
Wakefield.Kent@findmetesting.cn
findme.Cheales@findmetesting.cn
Nert.Roddamr@findmetesting.cn 
Richy.Raft@findmetesting.cn
Berget.Kermannes@findmetesting.ie 
Shelden.Tregea@findmetesting.ie 
Allsun.Badrick@findmetesting.ie 
Hortense.Ivkovic@findmetesting.ie
Carolin.Potte@findmetesting.ie
Benjie.Trumble@findmetesting.ie
Andrew.Hadgkiss@findmetesting.ie
Trula.Kuna@findmetesting.ie
Tommie.Maytum@findmetesting.ie
Langsdon.Pakes@findmetesting.ie
Porty.Tooth@findmetesting.au
Rozella.Siggefindmetesting.au
Nolie.Tumultyfindmetesting.au
Dud.Caustonfindmetesting.au
Alvinia.Brameldfindmetesting.au
Meridel.Lymbournefindmetesting.au
Elvis.Maleckfindmetesting.au
Brett.Oughtonfindmetesting.au
Rickard.Clemfindmetesting.au
Prue.Firemanfindmetesting.au
Uriel.Rozenbaum@findmetesting25.com
Cindie.Greeson@findmetesting25.com
Laurette.Puckham@findmetesting25.com
Eldredge.Ricket@findmetesting25.com
Alanah.Rapper@findmetesting25.com
Ash.Le.Prevost@findmetesting25.com
Galvin.Purchon@findmetesting25.com
Lauryn.Ilson@findmetesting25.com
findme.Graffin@findmetesting25.com
Edithe.Trehearne@findmetesting25.com
Den.Cancutt@findmetesting10.com
Wernher.Spatoni@findmetesting10.com
Malchy.Ion@findmetesting10.com
Leona.Whitby@findmetesting10.com
Alphonse.Goodlake@findmetesting10.com
Gran.Standen@findmetesting10.com
Barnie.Gilffilland@findmetesting10.com
Kaylyn.Ditchfield@findmetesting10.com
Dorotea.Kohlerman@findmetesting10.com
Gillan.Lampel@findmetesting10.com
Patrica.Mannakee@findustesting.com
Pippo.Sewart@findustesting.com
Lanae.Cousin@findustesting.com
Porter.Glaysher@findustesting.com
Herschel.Yaakov@findustesting.com
findme.Parsand@findustesting.com
Lucho.Cosh@findustesting.com
Cullie.Powlesland@findustesting.com
Edy.Burkart@findustesting.com
Christophorus.Ackeroyd@findustesting.com
Arvy.Rowson@findUStesting.com
Arlan.Ivanilov@findustesting.com
Tawnya.Waslin@findustesting.com
Inigo.Gyrgorcewicx@findustesting.com
Sharity.Stoodley@findustesting.com
Ginger.Dresse@findustesting.com
Deck.Jouannot@findustesting.com
Deny.Soanes@findustesting.com
james@findmetesting.com

Wenona.Moverley@findqatesting.com
Jerry.Poynter@findqatesting.com
Drugi.Neeson@findqatesting.com
Winny.Binfield@findqatesting.com
Darill.Greenshiels@findqatesting.com
Ethelin.Pinchen@findqatesting.com
Tanney.Ballendine@findqatesting.com
Ariadne.Wincott@findqatesting.com
Winnie.Domm@findqatesting.com
Rogerio.Cudbird@findqatesting.com
Yu@findmetesting.com

RIGHT OF @
findme@findme.testing.com
wildcard@findme*testing.com
dash@findme-testing.com
slash@findme/testing.com
questionmark@findme?testing.com

ACCENTS
PÃ¥l@findmetesting.com
MagdalÃ¨ne@findmetesting.com
AnaÃ«l@findmetesting.com
LÃ©n@findmetesting.com
LoÃ¯s@findmetesting.com
ThÃ©rÃ¨sa@findmetesting.com
ValÃ©rie@findmetesting.com
GÃ¶rel@findmetesting.com
MÃ©lia@findmetesting.com
JosÃ©phine@findmetesting.com
LoÃ¯c@findmetesting.com
findme@findmetesting.com
MÃ©ghane@findmetesting.com
NuÃ³@findmetesting.com
LÃ©n@findmetesting.com
EliÃ¨s@findmetesting.com
AndrÃ©@findmetesting.com
MahÃ©lie@findmetesting.com
MÃ©thode@findmetesting.com
RachÃ¨le@findmetesting.com
MÃ©lina@findmetesting.com
GaÃ«lle@findmetesting.com
CÃ©line@findmetesting.com
BÃ©rangÃ¨re@findmetesting.com
FranÃ§oise@findmetesting.com
SÃ©verine@findmetesting.com
MÃ¥ns@findmetesting.com
AdÃ¨le@findmetesting.com
AimÃ©e@findmetesting.com
MÃ©lia@findmetesting.com
GÃ¶sta@findmetesting.com
LaurÃ¨ne@findmetesting.com
GisÃ¨le@findmetesting.com
MÃ©linda@findmetesting.com
BÃ©cassine@findmetesting.com
RuÃ¬@findmetesting.com
ZoÃ©@findmetesting.com
MaÃ«line@findmetesting.com
AimÃ©e@findmetesting.com
AndrÃ©anne@findmetesting.com
AdÃ©laÃ¯de@findmetesting.com
LaurÃ¨ne@findmetesting.com
AnaÃ©@findmetesting.com
NoÃ«lla@findmetesting.com
AnaÃ«l@findmetesting.com
MaÃ«lyss@findmetesting.com
LucrÃ¨ce@findmetesting.com
LÃ©n@findmetesting.com
Marie-thÃ©rÃ¨se@findmetesting.com
MaÃ©na@findmetesting.com
HÃ©lÃ¨ne@findmetesting.com
HÃ©lÃ¨na@findmetesting.com
MÃ©ng@findmetesting.com
CrÃ©Ã©z@findmetesting.com
MÃ©lanie@findmetesting.com
FrÃ©dÃ©rique@findmetesting.com
MÃ©diamass@findmetesting.com
AndrÃ©@findmetesting.com
CinÃ©ma@findmetesting.com
MÃ©gane@findmetesting.com
AmÃ©lie@findmetesting.com
NadÃ¨ge@findmetesting.com
RÃ©becca@findmetesting.com
MÃ©diamass@findmetesting.com
CÃ©line@findmetesting.com
MaÃ¯ly@findmetesting.com
MaÃ¯@findmetesting.com
MaÃ«lann@findmetesting.com
NoÃ«lla@findmetesting.com
LaurÃ©lie@findmetesting.com
RuÃ¬@findmetesting.com
ChloÃ©@findmetesting.com
GaÃ«lle@findmetesting.com
VÃ©nus@findmetesting.com
FrÃ©dÃ©rique@findmetesting.com
AmÃ©lie@findmetesting.com
LoÃ¯s@findmetesting.com
MarlÃ¨ne@findmetesting.com
StÃ©vina@findmetesting.com
ClÃ©mentine@findmetesting.com
MÃ©gane@findmetesting.com
MÃ©ng@findmetesting.com
AndrÃ©@findmetesting.com
CrÃ©Ã©z@findmetesting.com
AÃ­@findmetesting.com
UÃ²@findmetesting.com
YÃº@findmetesting.com
Marie-franÃ§oise@findmetesting.com
UÃ²@findmetesting.com
InÃ¨s@findmetesting.com
OcÃ©ane@findmetesting.com
Marie-Ã¨ve@findmetesting.com
RÃ©becca@findmetesting.com
ZoÃ©@findmetesting.com
LÃ i@findmetesting.com
RachÃ¨le@findmetesting.com
CÃ©cile@findmetesting.com
MaÃ¯lys@findmetesting.com
GarÃ§on@findmetesting.com
hereiam@testing.com

It's a game of per%entage percentage.
Findme#testing Findme testing.
Over&over&over Over over over.
[findmeinbrackets], findmeinbrackets
(findmeinbrackets), findmeinbrackets
<findmeinbrackets>, findmeinbrackets
{findmeinbrackets>}, findmeinbrackets
http://findme-testing.here.com
http:\\findme-testing.here.com

Vestibulum ante ipsum primis in faucibus orci luctus et ultrices GarÃ§on@findmetesting.com cubilia Curae; Mauris viverra diam vitae quam. Suspendisse potenti. 
Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Ellerey.Fanti@findmetesting.cn risus. Praesent lectus.

Vivamus metus arcu, adipiscing findmetesting@findmetesting.com, hendrerit at, vulputate vitae, nisl.

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
FuzzyÂ£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
FuzzyÂ§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
FuzzyÂ±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH"
yRNkRtj0,Untitled,Derga,C++,Friday 26th of May 2023 08:47:21 AM CDT,"#include <iostream>
#include <vector>
#include <numeric>
#include <list>

using namespace std;

void foo1(list<int>& l) {
    auto it = l.begin();
    while (it != l.end()) {
        if (*it % 2 == 1) {
            it = l.erase(it);//Ð¼ÐµÑÐ¾Ð´ erase() ÑÐ´Ð°Ð»ÑÐµÑ ÑÐ»ÐµÐ¼ÐµÐ½Ñ Ð¿Ð¾ Ð¸ÑÐµÑÐ°ÑÐ¾ÑÑ Ð¸ Ð²Ð¾Ð·Ð²ÑÐ°ÑÐ°ÐµÑ Ð¸ÑÐµÑÐ°ÑÐ¾Ñ Ð½Ð° ÑÐ»ÐµÐ´ÑÑÑÐ¸Ð¹ ÑÐ»ÐµÐ¼ÐµÐ½Ñ
        } else {
            it++;
        }
    }
}

template <typename T>
void foo2(T* arr, int size) {
    for (int i = 0; i + 1 < size; i += 2) {
        int tmp = arr[i];
        arr[i] = arr[i + 1];
        arr[i + 1] = tmp;
    }
}

int main() {
    //task1
    //Ð²Ð¾Ð·Ð¼Ð¾Ð¶Ð½Ð¾ ÐµÑÑÑÑÐ¼ÑÑÐ» Ð¿Ð¾ÑÐ¼Ð¾ÑÑÐµÑÑ Ð½Ð° cppreference Ð¼ÐµÑÐ¾Ð´Ñ ÐºÐ»Ð°ÑÑÐ° Ð²ÐµÐºÑÐ¾Ñ Ð¸ ÑÐµÐ°Ð»Ð¸Ð·Ð¾Ð²Ð°ÑÑ ÑÐ²Ð¾Ð¹ Ð²ÐµÐºÑÐ¾Ñ (Ð±ÐµÐ· Ð¸ÑÐµÑÐ°ÑÐ¾ÑÐ¾Ð²)
    vector<int> v;
    //cout << v.size() << ' ' << v.capacity() << endl;
    
    //Ñ Ð²ÐµÐºÑÐ¾ÑÐ° ÑÑÐ¸ Ð¾ÑÐ½Ð¾Ð²Ð½ÑÐµ Ð¿Ð°ÑÐ°Ð¼ÐµÑÑÑ - ÑÑÐ¾ ÑÐ°Ð·Ð¼ÐµÑ Ð²ÑÐ´ÐµÐ»ÐµÐ½Ð½Ð¾Ð¹ Ð¿Ð°Ð¼ÑÑÐ¸ (capacity), ÑÐ¸ÑÐ»Ð¾ ÑÐ»ÐµÐ¼ÐµÐ½ÑÐ¾Ð² (size), 
    //ÑÐºÐ°Ð·Ð°ÑÐµÐ»Ñ Ð½Ð° Ð½Ð°ÑÐ°Ð»Ð¾ Ð¿Ð°Ð¼ÑÑÐ¸ Ð² ÐºÐ¾ÑÐ¾ÑÐ¾Ð¹ Ð»ÐµÐ¶Ð°Ñ ÑÐ»ÐµÐ¼ÐµÐ½ÑÑ
    //Ð¿ÑÐ¸ Ð´Ð¸Ð½Ð°Ð¼Ð¸ÑÐµÑÐºÐ¾Ð¼ Ð²ÑÐ´ÐµÐ»ÐµÐ½Ð¸Ð¸ Ð¿Ð°Ð¼ÑÑÐ¸ ÑÐ»ÐµÐ¼ÐµÐ½ÑÑ Ð½Ðµ ÑÐ¾Ð·Ð´Ð°ÑÑÑÑ. reserve - Ð²ÑÐ´ÐµÐ»ÑÐµÑ Ð¿Ð°Ð¼ÑÑÑ, Ð¼ÐµÐ½ÑÐµÑÑÑ Ð¿Ð°ÑÐ°Ð¼ÐµÑÑ capacity

    v.reserve(200);
    //cout << v.size() << ' ' << v.capacity() << endl;
    
    //ÑÑÑ ÑÐ¾Ð·Ð´Ð°ÑÑÑÑ 100 ÑÐ»ÐµÐ¼ÐµÐ½ÑÐ¾Ð² ÐºÐ¾Ð½ÑÑÑÑÐºÑÐ¾ÑÐ¾Ð¼ Ð¿Ð¾ ÑÐ¼Ð¾Ð»ÑÐ°Ð½Ð¸Ñ Ð´Ð»Ñ int
    v.resize(100);
    //v.resize(100, 21); //Ð¿ÐµÑÐ²ÑÐ¹ Ð¿Ð°ÑÐ°Ð¼ÐµÑÑ - ÑÐºÐ¾Ð»ÑÐºÐ¾ ÑÐ»ÐµÐ¼ÐµÐ½ÑÐ¾Ð², Ð²ÑÐ¾ÑÐ¾Ð¹ - ÐºÐ°ÐºÐ¸Ñ
   // cout << v.size() << ' ' << v.capacity() << endl;
    
    //push_back Ð´Ð¾Ð±Ð°Ð²Ð»ÑÐµÑ ÑÐ»ÐµÐ¼ÐµÐ½ÑÑ ÐµÑÐ»Ð¸ Ð¿Ð¾Ð´ Ð½Ð¸Ñ ÐµÑÑÑ Ð¿Ð°Ð¼ÑÑÑ Ð¸ Ð¿ÐµÑÐµÐ²ÑÐ´ÐµÐ»ÑÐµÑ Ð¿Ð°Ð¼ÑÑÑ, Ð¿ÐµÑÐµÐ¿Ð¸ÑÑÐ²Ð°ÐµÑ ÑÑÐ°ÑÑÐµ ÑÐ»ÐµÐ¼ÐµÐ½ÑÑ,
    //Ð¾ÑÐ¸ÑÐ°ÐµÑ ÑÑÐ°ÑÑÑ Ð¿Ð°Ð¼ÑÑÑ Ð¸ Ð´Ð¾Ð±Ð°Ð²Ð»ÑÐµÑ Ð½Ð¾Ð²ÑÐ¹, ÐµÑÐ»Ð¸ Ð¿Ð°Ð¼ÑÑÐ¸ Ð±ÑÐ»Ð¾ Ð½ÐµÐ´Ð¾ÑÑÐ°ÑÐ¾ÑÐ½Ð¾
    for (int i = 0; i < 100; ++i) {
        v.push_back(i * i);
    }
    //cout << v.size() << ' ' << v.capacity() << endl;
    
    v.reserve(50);
    //cout << v.size() << ' ' << v.capacity() << endl;

    /*
    cout << endl;
    for (int i = 0; i < v.size(); ++i) {
        cout << i << ' ' << v[i] << endl;
    }
    */

    //task2
    list<int> l;
    for (int i = 0; i < 10; ++i) {
        l.push_back(i);
    }

    /*
    foo1(l);
    for (auto elem : l) {
        cout << elem << ' ';
    }
    */

    
    int arr[] = { 2, 3, 1};
    int a = accumulate(begin(arr), end(arr), 0, [&](const auto& init, const auto& rhs) {
        return init + rhs * rhs * rhs;
    });
    cout << a;
    /*
    foo2(arr, size(arr));
    for (int i = 0; i < size(arr); ++i) {
        cout << arr[i] << ' ';
    }
    */
    //5 Ð½ÑÐ¶Ð½Ð¾ Ð±ÑÐ»Ð¾ Ð´Ð¾Ð±Ð°Ð²Ð¸ÑÑ .push_back(move(ptr));

    //6
    //ÑÑÐ¸ÑÐ°ÐµÐ¼ Ð»Ð¸ÑÐ½ÐµÐµ ÐºÐ¾Ð¿Ð¸ÑÐ¾Ð²Ð°Ð½Ð¸Ðµ, Ð±ÐµÑÐµÐ¼ ÑÐ»ÐµÐ¼ÐµÐ½Ñ Ð¿Ð¾ ÐºÐ¾Ð½ÑÑÐ°Ð½ÑÐ½Ð¾Ð¹ ÑÑÑÐ»ÐºÐµ
    //for (const auto& person : persons)

    return 0;
}"
4UU7RW5t,Bank Information System,NealPeteros,C,Friday 26th of May 2023 08:44:58 AM CDT,"#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX_STRING 120

typedef char String[120];

typedef struct account_info {
	String fullName;
	String address;
	int age;
	int acctNumber;
	int pin;
	double balance;
} Account;

struct node {
	Account account;
	struct node *next;
};

struct node *start=NULL;

void Login(int acctNumber, int pin);
void displayAccount(int id);
void addAccount(String fullName, String address, int age, int acct_num, int pin);
void updateAccount(int acctNumber);
void Deposit(int acctNumber, int amount);
void inquireBalance(int acctNumber);
void Withdraw(int acctNumber, int amount);
char *str_scan(char *msg);

struct node *new_node();

char *str_scan(char *msg) {
	char *str;
	char buffer[MAX_STRING];
	
	printf(""%s"", msg);
	scanf("" %[^\n]"", buffer);
	
	str = (char*) malloc(strlen(buffer) + 1);
	if(str == NULL) {
		printf(""Out of memory!"");
		return 0;
	}
	
	strcpy(str, buffer);
	return str;
}

struct node *new_node() {
	struct node *new_node;
	
	new_node = (struct node*) malloc(sizeof(struct node));
	if(new_node == NULL) {
		printf(""Out of Memory\n"");
		exit(1);
	}
	
	return new_node;
}

void Login(int acctNumber, int pin) {
	if(start == NULL) {
		printf(""[Error]: Account List is empty!\n"");
	} else {
		struct node *temp;
	
		temp = start;
			
		while(temp != NULL) {
			if((temp->account.acctNumber == acctNumber) && (temp->account.pin == pin)) {
				printf(""[Notice]: Successfully logged in!"");
				return;
			}
			else temp = temp->next;
		}
		printf(""[Error]: Invalid login details!\n"");
	}
}

void displayAccount(int acctNumber) {
	struct node *temp;
	
	temp = start;
			
	while(temp != NULL) {
		if((temp->account.acctNumber == acctNumber)) {
			printf(""Account ID (%d)\nFull Name: %s\nAddress: %s\nAge: %d\nAccount Number: %d\nPin: %d\nBalance: %.2lf\n"", temp->account.acctID, temp->account.fullName, temp->account.address, temp->account.age, temp->account.acctNumber, temp->account.pin, temp->account.balance);
			return;
		}
		else temp = temp->next;
	}
	printf(""[Error]: Account (%d) does not exist!\n"", acctNumber);
}

void addAccount(String fullName, String address, int age, int acct_num, int pin) {
	struct node *new_account;
	
	new_account = new_node();
	
	strncpy(new_account->account.fullName, fullName, MAX_STRING);
	strncpy(new_account->account.address, address, MAX_STRING);
	new_account->account.age = age;
	new_account->account.acctNumber = acct_num;
	new_account->account.pin = pin;
	new_account->account.balance = 5000;
	
	new_account->next = start;
	start = new_account;
	
	start_id++;
	
	printf(""[Notice]: Account successfully added!\n"");
}

void updateAccount(int acctNumber) {
	struct node *temp;
	
	temp = start;
			
	while(temp != NULL) {
		if(temp->account.acctNumber == acctNumber) {
			char *name, *address;
			int age, acct_num, pin;
			displayAccount(acctNumber);
			printf(""\n\n"");
			name = str_scan(""Enter new name: "");
			address = str_scan(""Enter new address: "");
			printf(""Enter new age: "");
			scanf("" %d"", &age);
			printf(""Enter new account number: "");
			scanf("" %d"", &acct_num);
			printf(""Enter new pin: "");
			scanf("" %d"", &pin);
			
			strncpy(temp->account.fullName, name, MAX_STRING);
			strncpy(temp->account.address, address, MAX_STRING);
			temp->account.age = age;
			temp->account.acctNumber = acct_num;
			temp->account.pin = pin;
			
			printf(""[Notice]: Account (%d) successfully updated!"", acctNumber);
			return;
		} else temp = temp->next;
	}
	printf(""[Error]: Account (%d) does not exist!\n"", acctNumber);
}

void Deposit(int acctNumber, int amount) {
	struct node *temp;
	temp = start;
	
	while(temp != NULL) {
		if(temp->account.acctNumber == acctNumber) {
			temp->account.balance += amount;
			printf(""[Notice]: Successfully deposited P%d to account (%d)!"", acctNumber);
			return;
		} else temp = temp->next;
	}
	printf(""[Error]: Account (%d) does not exist!\n"", acctNumber);
}

void inquireBalance(int acctNumber) {
	struct node *temp;
	temp = start;
	
	while(temp != NULL) {
		if(temp->account.acctNumber == acctNumber) {
			printf(""Balance of account (%d): %d."", acctNumber, temp->account.balance);
			return;
		} else temp = temp->next;
	}
	printf(""[Error]: Account (%d) does not exist!\n"", acctNumber);
}

void selectOption() {
	
	system(""cls"");
	printf(""-- MAIN MENU --\n\n"");
	printf(""Enter an option:\n"");
	printf(""[0]: Login\n"");
	printf(""[1]: Display Account\n"");
	printf(""[2]: Add Account\n"");
	printf(""[3]: Update Account\n"");
	printf(""[4]: Deposit\n"");
	printf(""[5]: Inquire Balance\n"");
	printf(""[6]: Withdraw\n"");
	printf(""[7]: Exit\n"");
	printf(""\nOption: "");
	
	int opt;
	scanf(""%d"", &opt);
	
	switch(opt) {
		case 0: {
			system(""cls"");
			if(start == NULL) {
				printf(""[Error]: Account List is empty!\n"");
			} else {
				int acctNumber, pin;
				printf(""Enter Account Number: "");
				scanf("" %d"", &acctNumber);
				printf(""Enter PIN: "");
				scanf("" %d"", &pin);
				Login(acctNumber, pin);
			}
			
			printf(""\n\n\n"");
			system(""pause"");
			selectOption();
			break;
		}
		case 1: {
			system(""cls"");
			if(start == NULL) {
				printf(""[Error]: Account List is empty!\n"");
			} else {
				system(""cls"");
				int acctNumber;
				printf(""Enter Account Number: "");
				scanf("" %d"", &acctNumber);
				displayAccount(acctNumber);
			}
			
			printf(""\n\n\n"");
			system(""pause"");
			selectOption();
			break;
		}
		case 2: {
			system(""cls"");
			char *name, *address;
			int age, acct_num, pin;
			system(""cls"");
			name = str_scan(""Enter name: "");
			address = str_scan(""Enter address: "");
			printf(""Enter age: "");
			scanf("" %d"", &age);
			printf(""Enter account number: "");
			scanf("" %d"", &acct_num);
			printf(""Enter pin: "");
			scanf("" %d"", &pin);
			addAccount(name, address, age, acct_num, pin);
			
			printf(""\n\n\n"");
			system(""pause"");
			selectOption();
			break;
		}
		case 3: {
			system(""cls"");
			if(start == NULL) {
				printf(""[Error]: Account List is empty!\n"");
			} else {
				int o_acctNumber;
				printf(""Enter Account Number: "");
				scanf("" %d"", &o_acctNumber);
				updateAccount(o_acctNumber);
			}
			
			printf(""\n\n\n"");
			system(""pause"");
			selectOption();
			break;
		}
		case 4: {
			system(""cls"");
			if(start == NULL) {
				printf(""[Error]: Account List is empty!\n"");
			} else {
				int acctNumber, amount;
				printf(""Enter Account Number: "");
				scanf("" %d"", &acctNumber);
				printf(""Enter amount to deposit: "");
				scanf("" %d"", &amount);
				Deposit(acctNumber, amount);
			}
			
			printf(""\n\n\n"");
			system(""pause"");
			selectOption();
			break;
		}
		case 5: {
			system(""cls"");
			if(start == NULL) {
				printf(""[Error]: Account List is empty!\n"");
			} else {
				int acctNumber;
				printf(""Enter Account Number: "");
				scanf("" %d"", &acctNumber);
				inquireBalance(acctNumber);	
			}
			
			printf(""\n\n\n"");
			system(""pause"");
			selectOption();
			break;
		} 
		case 6: {
			system(""cls"");
			if(start == NULL) {
				printf(""[Error]: Account List is empty!\n"");
			} else {
				int acctNumber, amount;
				printf(""Enter Account Number: "");
				scanf("" %d"", &acctNumber);
				printf(""Enter amount to withdraw: "");
				scanf("" %d"", &amount);
				Withdraw(acctNumber, amount);
			}
			
			printf(""\n\n\n"");
			system(""pause"");
			selectOption();
			break;
		}
		case 7: {
			break;
		}
	}
}

int main () {	
	selectOption();		
}"
qjwCFge3,Advanced AND - Donald AND Duck AND Hello,wheresTheAnyKey,C,Friday 26th of May 2023 08:28:10 AM CDT,"Pasted at: 26/05/2023 14:28
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND
hello, donald was a duck

5502491997132108

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
FuzzyÂ£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
FuzzyÂ§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
FuzzyÂ±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH
"
2zhUT4hy,Financial What's Inside - Email/IP/Bank,wheresTheAnyKey,C,Friday 26th of May 2023 08:28:08 AM CDT,"Pasted at: 26/05/2023 14:28
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3
What's Inside Paste 

5378496492418234
5571598708435236
5587663820997281
5502491997132108
5516931903918995
5322909948799236
5443317136071703
5409137465238695
5497550044220575
5559606180091553

aaribaud@att.net
aaribaud@comcast.net
aaribaud@att.com
aaribaud@att.co.uk
aaribaud@yahoo.com

246.107.72.199
221.187.199.189
3.109.3.44
109.112.85.139
250.83.213.179
169.141.201.234
50.180.50.59
20.181.54.231
64.235.191.167
48.103.36.43"
07xVK2tE,Financial with SPECIAL CHARACTERS,wheresTheAnyKey,C,Friday 26th of May 2023 08:28:07 AM CDT,"Pasted at: 26/05/2023 14:28
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND

5148-2121-6312-7114   - DASHES
5148212163127114
5107-4578-0576-9075   - DASHES
5107457805769075
3488-1760-1454-729   - DASHES
348817601454729

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
FuzzyÂ£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
FuzzyÂ§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
FuzzyÂ±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH"
2fMUGgUq,Domains with SPECIAL CHARS,wheresTheAnyKey,C,Friday 26th of May 2023 08:28:05 AM CDT,"Pasted at: 26/05/2023 14:28
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND

www.qatesting.com
blog.qatesting.com
www.qatesting.com/index.html
www.qatesting.com/home
www.qatestingblog.com
www.qatestingtutorials.com
shop.qatesting.co.uk
admin.qatesting.io 
qatesting
qatesting.co.uk
qatesting.cn
qatesting.io
findmetesting.com
www.qatesting-blog.com
www.qatesting-blog23.com
www.qatesting
www.qatesting.co.uk
www.qatesting.cn
www.qatesting.io
www.findmetesting.com
www.wobsut.gov

The difference is that QA is process oriented and QC is product oriented.

Testing, therefore is product oriented and thus is in the QC domain. Testing for quality isn't assuring quality, it's controlling it.



Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
FuzzyÂ£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
FuzzyÂ§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
FuzzyÂ±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH
"
n8VA9Xzk,ALL Keywords with Excluded Words,wheresTheAnyKey,C,Friday 26th of May 2023 08:28:04 AM CDT,"Pasted at: 26/05/2023 14:28
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND 

The dystopian version of superintelligence is illustrated with frequency by leaders in the technology industry, and is famously depicted by Hollywood in films like Terminator, 
or more recently Ex Machina, and even the Avengers. The âfurious deity A.I.â is a story you know, because it is the story you are constantly told: we build the thinking machine, 
it surpasses our abilities in every way, and it destroys us for one of any number of reasons.Maybe it perceives us as a threat. Maybe weâre just in its way, 
and it hardly perceives us at allâââmankind, a disposable insect race.

There are of course many arguments in opposition to the now ubiquitous concept of our apocalypse by artificial intelligence. 
I myself have called into question the logic of such dystopian arguments in Anatomy of Next. But our subject here is less pertaining to the nature of the conscious machine than 
it is to the way we talk about this subject, and what it means. First, consider that most of the artificial intelligence depicted in culture looks human, a representation with 
no basis in technological reality. Then, the true scope of the Singularity is almost impossible to predict, which begs a question: where are these opinions about the broadly 
unknowable coming from?"
3Z4B5aWJ,All Keywords with ANY Additional Words,wheresTheAnyKey,C,Friday 26th of May 2023 08:28:02 AM CDT,"Pasted at: 26/05/2023 14:28
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND KEYWAUTO

The dystopian version of superintelligence is illustrated with frequency by leaders in the technology industry, and is famously depicted by Hollywood in films like Terminator, or more recently Ex Machina, and even the Avengers. The âangry god A.I.â is a story you know, because it is the story you are constantly told: we build the thinking machine, it surpasses our abilities in every way, and it destroys us for one of any number of reasons.
Maybe it perceives us as a threat. Maybe weâre just in its way, and it hardly perceives us at allâââhumanity, a disposable insect race.

There are of course many arguments in opposition to the now ubiquitous concept of our apocalypse by artificial intelligence. I myself have called into question the logic of such dystopian arguments in Anatomy of Next. But our subject here is less pertaining to the nature of the conscious machine than it is to the way we talk about this subject, and what it means. First, consider that most of the artificial intelligence depicted in culture looks human, a representation with no basis in technological reality. Then, the true scope of the Singularity is almost impossible to predict, which begs a question: where are these opinions about the broadly unknowable coming from?

6589745854123698

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
FuzzyÂ£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
FuzzyÂ§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
FuzzyÂ±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH
"
t2qAV8Tu,IP with SPECIAL CHARACTERS,wheresTheAnyKey,C,Friday 26th of May 2023 08:28:01 AM CDT,"Pasted at: 26/05/2023 14:28
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND

123.123.123.149
123.123.123.7
123.123.123.186
123.123.123.47
123.123.123.187
123.123.123.47
123.123.123.130
123.123.123.62
123.123.123.87
123.123.123.1
123.123.123.61
123.123.123.1
123.123.123.65
123.123.123.65
123.123.123.189
123.123.123.193
123.123.123.78
123.123.123.142
123.123.123.107
123.123.123.126
123.123.123.13
123.123.123.171
123.123.123.45
123.123.123.61
123.123.123.93
123.123.123.2
123.123.123.71
123.123.123.41
123.123.123.184
123.123.123.74
123.123.123.106
123.123.123.171
123.123.123.188
123.123.123.177
123.123.123.185
123.123.123.9
123.123.123.184
123.123.123.100
123.123.123.31
123.123.123.164
123.123.123.184
123.123.123.12
123.123.123.153
123.123.123.72
123.123.123.44
123.123.123.119
123.123.123.119
123.123.123.163
123.123.123.38
123.123.123.67
123.123.123.59
123.123.123.10
123.123.123.50
123.123.123.121
123.123.123.145
123.123.123.159
123.123.123.64
123.123.123.6
123.123.123.39
123.123.123.198
123.123.123.17
123.123.123.65
123.123.123.149
123.123.123.84
123.123.123.8
123.123.123.145
123.123.123.65
123.123.123.94
123.123.123.79
123.123.123.177
123.123.123.67
123.123.123.78
123.123.123.80
123.123.123.79
123.123.123.50
123.123.123.87
123.123.123.15
123.123.123.80
123.123.123.145
123.123.123.75
123.123.123.4
123.123.123.59
123.123.123.59
123.123.123.190
123.123.123.64
123.123.123.63
123.123.123.102
123.123.123.114
123.123.123.146
123.123.123.53
123.123.123.124
123.123.123.30
123.123.123.57
123.123.123.64
123.123.123.69
123.123.123.33
123.123.123.12
123.123.123.73
123.123.123.36
123.123.123.153
100.123.123.50
100.123.123.39
100.123.123.156
100.123.123.56
100.123.123.175
100.123.123.121
100.123.123.114
100.123.123.118
100.123.123.13
100.123.123.174
100.123.123.84
100.123.123.161
100.123.123.63
100.123.123.51
100.123.123.66
100.123.123.190
100.123.123.101
100.123.123.72
100.123.123.24
100.123.123.151
100.123.123.143
100.123.123.146
100.123.123.117
100.123.123.21
100.123.123.10
100.123.123.98
100.123.123.114
100.123.123.6
100.123.123.101
100.123.123.14
100.123.123.147
100.123.123.159
100.123.123.157
100.123.123.6
100.123.123.175
100.123.123.35
100.123.123.136
100.123.123.2
100.123.123.139
100.123.123.11
100.123.123.179
100.123.123.16
100.123.123.40
100.123.123.20
100.123.123.20
100.123.123.150
100.123.123.77
100.123.123.48
100.123.123.22
100.123.123.24
100.123.123.9
100.123.123.187
100.123.123.131
100.123.123.148
100.123.123.152
100.123.123.96
100.123.123.199
100.123.123.15
100.123.123.4
100.123.123.112
100.123.123.62
100.123.123.186
100.123.123.36
100.123.123.136
100.123.123.83
100.123.123.38
100.123.123.120
100.123.123.147
100.123.123.15
100.123.123.134
100.123.123.19
100.123.123.196
100.123.123.115
100.123.123.126
100.123.123.39
100.123.123.193
100.123.123.117
100.123.123.115
100.123.123.115
100.123.123.33
100.123.123.121
100.123.123.72
100.123.123.189
100.123.123.76
100.123.123.78
100.123.123.61
100.123.123.112
100.123.123.176
100.123.123.82
100.123.123.183
100.123.123.168
100.123.123.24
100.123.123.134
100.123.123.145
100.123.123.195
100.123.123.189
100.123.123.157
100.123.123.114
100.123.123.34
100.123.123.166

These are a list of generated IPs for test purPoses. They seRVe no purpose only to act as test data for testing activities.
You might findMEtesting 123.123.123.123 or findmetesting 100.123.123.76. These are my favourite ip addresses 123.123.123.23 100.123.123.23.
These are some random words networking, ipaddresses, studpidIPs


Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
FuzzyÂ£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
FuzzyÂ§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
FuzzyÂ±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH"
cpTE7Qk2,IP with SPECIAL CHARACTERS,wheresTheAnyKey,C,Friday 26th of May 2023 08:27:59 AM CDT,"Pasted at: 26/05/2023 14:27
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND

123.123.123.149
123.123.123.7
123.123.123.186
123.123.123.47
123.123.123.187
123.123.123.47
123.123.123.130
123.123.123.62
123.123.123.87
123.123.123.1
123.123.123.61
123.123.123.1
123.123.123.65
123.123.123.65
123.123.123.189
123.123.123.193
123.123.123.78
123.123.123.142
123.123.123.107
123.123.123.126
123.123.123.13
123.123.123.171
123.123.123.45
123.123.123.61
123.123.123.93
123.123.123.2
123.123.123.71
123.123.123.41
123.123.123.184
123.123.123.74
123.123.123.106
123.123.123.171
123.123.123.188
123.123.123.177
123.123.123.185
123.123.123.9
123.123.123.184
123.123.123.100
123.123.123.31
123.123.123.164
123.123.123.184
123.123.123.12
123.123.123.153
123.123.123.72
123.123.123.44
123.123.123.119
123.123.123.119
123.123.123.163
123.123.123.38
123.123.123.67
123.123.123.59
123.123.123.10
123.123.123.50
123.123.123.121
123.123.123.145
123.123.123.159
123.123.123.64
123.123.123.6
123.123.123.39
123.123.123.198
123.123.123.17
123.123.123.65
123.123.123.149
123.123.123.84
123.123.123.8
123.123.123.145
123.123.123.65
123.123.123.94
123.123.123.79
123.123.123.177
123.123.123.67
123.123.123.78
123.123.123.80
123.123.123.79
123.123.123.50
123.123.123.87
123.123.123.15
123.123.123.80
123.123.123.145
123.123.123.75
123.123.123.4
123.123.123.59
123.123.123.59
123.123.123.190
123.123.123.64
123.123.123.63
123.123.123.102
123.123.123.114
123.123.123.146
123.123.123.53
123.123.123.124
123.123.123.30
123.123.123.57
123.123.123.64
123.123.123.69
123.123.123.33
123.123.123.12
123.123.123.73
123.123.123.36
123.123.123.153
100.123.123.50
100.123.123.39
100.123.123.156
100.123.123.56
100.123.123.175
100.123.123.121
100.123.123.114
100.123.123.118
100.123.123.13
100.123.123.174
100.123.123.84
100.123.123.161
100.123.123.63
100.123.123.51
100.123.123.66
100.123.123.190
100.123.123.101
100.123.123.72
100.123.123.24
100.123.123.151
100.123.123.143
100.123.123.146
100.123.123.117
100.123.123.21
100.123.123.10
100.123.123.98
100.123.123.114
100.123.123.6
100.123.123.101
100.123.123.14
100.123.123.147
100.123.123.159
100.123.123.157
100.123.123.6
100.123.123.175
100.123.123.35
100.123.123.136
100.123.123.2
100.123.123.139
100.123.123.11
100.123.123.179
100.123.123.16
100.123.123.40
100.123.123.20
100.123.123.20
100.123.123.150
100.123.123.77
100.123.123.48
100.123.123.22
100.123.123.24
100.123.123.9
100.123.123.187
100.123.123.131
100.123.123.148
100.123.123.152
100.123.123.96
100.123.123.199
100.123.123.15
100.123.123.4
100.123.123.112
100.123.123.62
100.123.123.186
100.123.123.36
100.123.123.136
100.123.123.83
100.123.123.38
100.123.123.120
100.123.123.147
100.123.123.15
100.123.123.134
100.123.123.19
100.123.123.196
100.123.123.115
100.123.123.126
100.123.123.39
100.123.123.193
100.123.123.117
100.123.123.115
100.123.123.115
100.123.123.33
100.123.123.121
100.123.123.72
100.123.123.189
100.123.123.76
100.123.123.78
100.123.123.61
100.123.123.112
100.123.123.176
100.123.123.82
100.123.123.183
100.123.123.168
100.123.123.24
100.123.123.134
100.123.123.145
100.123.123.195
100.123.123.189
100.123.123.157
100.123.123.114
100.123.123.34
100.123.123.166

These are a list of generated IPs for test purPoses. They seRVe no purpose only to act as test data for testing activities.
You might findMEtesting 123.123.123.123 or findmetesting 100.123.123.76. These are my favourite ip addresses 123.123.123.23 100.123.123.23.
These are some random words networking, ipaddresses, studpidIPs


Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
FuzzyÂ£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
FuzzyÂ§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
FuzzyÂ±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH"
BQwDhYY3,Hashed Email With Exclude,wheresTheAnyKey,C,Friday 26th of May 2023 08:27:58 AM CDT,"Pasted at: 26/05/2023 14:27
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

wojciech@sktestcomcast.net
joglo@sktestmac.com
larry@sktesthotmail.com
aardo@sktestverizon.net
debest@sktestlive.com
carroll@sktestaol.com
arathi@sktestyahoo.ca
sthomas@sktestcomcast.net
leocharre@sktestyahoo.ca
pedwards@sktestyahoo.com

skexclude"
Td5vAFrU,Hashed Email - Full,wheresTheAnyKey,C,Friday 26th of May 2023 08:27:56 AM CDT,"Pasted at: 26/05/2023 14:27
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

wojciech@sktestcomcast.net
joglo@sktestmac.com
larry@sktesthotmail.com
aardo@sktestverizon.net
debest@sktestlive.com
carroll@sktestaol.com
arathi@sktestyahoo.ca
sthomas@sktestcomcast.net
leocharre@sktestyahoo.ca
pedwards@sktestyahoo.com

skinclude"
JueX6eek,Email with Keyword SPECIAL CHARACTERS,wheresTheAnyKey,C,Friday 26th of May 2023 08:27:55 AM CDT,"Pasted at: 26/05/2023 14:27
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3 for TESTING PURPOSE ONLY

DATA_ID_TESTDATATOFIND NOEXCLUDES

Cooper.Kleine@findmetesting.co.uk 
Mariquilla.Evenden@findmetesting.co.uk 
Noll.Ingolotti@findmetesting.co.uk  
Grove.Feldbaum@findmetesting.co.uk
Mack.Osment@findmetesting.co.uk 
Trisha.Zanicchelli@findmetesting.co.uk
Jack.Gorriessen@findmetesting.co.uk 
Nefen.Malec@findme-testing.co.uk 
Birdie-Gemmill@findmetesting.co.uk
Rosabella.Nias@findmetesting.co.uk
Ellerey.Fanti@findmetesting.cn
Antonina.Carsey@findmetesting.cn
Valry.Shead@findmetesting.cn 
Conrade.Ferrarone@findmetesting.cn
Neysa.Fazakerley@findmetesting.cn
Cristobal.Primak@findmetesting.cn
Wakefield.Kent@findmetesting.cn
findme.Cheales@findmetesting.cn
Nert.Roddamr@findmetesting.cn 
Richy.Raft@findmetesting.cn
Berget.Kermannes@findmetesting.ie 
Shelden.Tregea@findmetesting.ie 
Allsun.Badrick@findmetesting.ie 
Hortense.Ivkovic@findmetesting.ie
Carolin.Potte@findmetesting.ie
Benjie.Trumble@findmetesting.ie
Andrew.Hadgkiss@findmetesting.ie
Trula.Kuna@findmetesting.ie
Tommie.Maytum@findmetesting.ie
Langsdon.Pakes@findmetesting.ie
Porty.Tooth@findmetesting.au
Rozella.Siggefindmetesting.au
Nolie.Tumultyfindmetesting.au
Dud.Caustonfindmetesting.au
Alvinia.Brameldfindmetesting.au
Meridel.Lymbournefindmetesting.au
Elvis.Maleckfindmetesting.au
Brett.Oughtonfindmetesting.au
Rickard.Clemfindmetesting.au
Prue.Firemanfindmetesting.au
Uriel.Rozenbaum@findmetesting25.com
Cindie.Greeson@findmetesting25.com
Laurette.Puckham@findmetesting25.com
Eldredge.Ricket@findmetesting25.com
Alanah.Rapper@findmetesting25.com
Ash.Le.Prevost@findmetesting25.com
Galvin.Purchon@findmetesting25.com
Lauryn.Ilson@findmetesting25.com
findme.Graffin@findmetesting25.com
Edithe.Trehearne@findmetesting25.com
Den.Cancutt@findmetesting10.com
Wernher.Spatoni@findmetesting10.com
Malchy.Ion@findmetesting10.com
Leona.Whitby@findmetesting10.com
Alphonse.Goodlake@findmetesting10.com
Gran.Standen@findmetesting10.com
Barnie.Gilffilland@findmetesting10.com
Kaylyn.Ditchfield@findmetesting10.com
Dorotea.Kohlerman@findmetesting10.com
Gillan.Lampel@findmetesting10.com
Patrica.Mannakee@findustesting.com
Pippo.Sewart@findustesting.com
Lanae.Cousin@findustesting.com
Porter.Glaysher@findustesting.com
Herschel.Yaakov@findustesting.com
findme.Parsand@findustesting.com
Lucho.Cosh@findustesting.com
Cullie.Powlesland@findustesting.com
Edy.Burkart@findustesting.com
Christophorus.Ackeroyd@findustesting.com
Arvy.Rowson@findUStesting.com
Arlan.Ivanilov@findustesting.com
Tawnya.Waslin@findustesting.com
Inigo.Gyrgorcewicx@findustesting.com
Sharity.Stoodley@findustesting.com
Ginger.Dresse@findustesting.com
Deck.Jouannot@findustesting.com
Deny.Soanes@findustesting.com
james@findmetesting.com

Wenona.Moverley@findqatesting.com
Jerry.Poynter@findqatesting.com
Drugi.Neeson@findqatesting.com
Winny.Binfield@findqatesting.com
Darill.Greenshiels@findqatesting.com
Ethelin.Pinchen@findqatesting.com
Tanney.Ballendine@findqatesting.com
Ariadne.Wincott@findqatesting.com
Winnie.Domm@findqatesting.com
Rogerio.Cudbird@findqatesting.com
Yu@findmetesting.com

RIGHT OF @
findme@findme.testing.com
wildcard@findme*testing.com
dash@findme-testing.com
slash@findme/testing.com
questionmark@findme?testing.com

ACCENTS
PÃ¥l@findmetesting.com
MagdalÃ¨ne@findmetesting.com
AnaÃ«l@findmetesting.com
LÃ©n@findmetesting.com
LoÃ¯s@findmetesting.com
ThÃ©rÃ¨sa@findmetesting.com
ValÃ©rie@findmetesting.com
GÃ¶rel@findmetesting.com
MÃ©lia@findmetesting.com
JosÃ©phine@findmetesting.com
LoÃ¯c@findmetesting.com
findme@findmetesting.com
MÃ©ghane@findmetesting.com
NuÃ³@findmetesting.com
LÃ©n@findmetesting.com
EliÃ¨s@findmetesting.com
AndrÃ©@findmetesting.com
MahÃ©lie@findmetesting.com
MÃ©thode@findmetesting.com
RachÃ¨le@findmetesting.com
MÃ©lina@findmetesting.com
GaÃ«lle@findmetesting.com
CÃ©line@findmetesting.com
BÃ©rangÃ¨re@findmetesting.com
FranÃ§oise@findmetesting.com
SÃ©verine@findmetesting.com
MÃ¥ns@findmetesting.com
AdÃ¨le@findmetesting.com
AimÃ©e@findmetesting.com
MÃ©lia@findmetesting.com
GÃ¶sta@findmetesting.com
LaurÃ¨ne@findmetesting.com
GisÃ¨le@findmetesting.com
MÃ©linda@findmetesting.com
BÃ©cassine@findmetesting.com
RuÃ¬@findmetesting.com
ZoÃ©@findmetesting.com
MaÃ«line@findmetesting.com
AimÃ©e@findmetesting.com
AndrÃ©anne@findmetesting.com
AdÃ©laÃ¯de@findmetesting.com
LaurÃ¨ne@findmetesting.com
AnaÃ©@findmetesting.com
NoÃ«lla@findmetesting.com
AnaÃ«l@findmetesting.com
MaÃ«lyss@findmetesting.com
LucrÃ¨ce@findmetesting.com
LÃ©n@findmetesting.com
Marie-thÃ©rÃ¨se@findmetesting.com
MaÃ©na@findmetesting.com
HÃ©lÃ¨ne@findmetesting.com
HÃ©lÃ¨na@findmetesting.com
MÃ©ng@findmetesting.com
CrÃ©Ã©z@findmetesting.com
MÃ©lanie@findmetesting.com
FrÃ©dÃ©rique@findmetesting.com
MÃ©diamass@findmetesting.com
AndrÃ©@findmetesting.com
CinÃ©ma@findmetesting.com
MÃ©gane@findmetesting.com
AmÃ©lie@findmetesting.com
NadÃ¨ge@findmetesting.com
RÃ©becca@findmetesting.com
MÃ©diamass@findmetesting.com
CÃ©line@findmetesting.com
MaÃ¯ly@findmetesting.com
MaÃ¯@findmetesting.com
MaÃ«lann@findmetesting.com
NoÃ«lla@findmetesting.com
LaurÃ©lie@findmetesting.com
RuÃ¬@findmetesting.com
ChloÃ©@findmetesting.com
GaÃ«lle@findmetesting.com
VÃ©nus@findmetesting.com
FrÃ©dÃ©rique@findmetesting.com
AmÃ©lie@findmetesting.com
LoÃ¯s@findmetesting.com
MarlÃ¨ne@findmetesting.com
StÃ©vina@findmetesting.com
ClÃ©mentine@findmetesting.com
MÃ©gane@findmetesting.com
MÃ©ng@findmetesting.com
AndrÃ©@findmetesting.com
CrÃ©Ã©z@findmetesting.com
AÃ­@findmetesting.com
UÃ²@findmetesting.com
YÃº@findmetesting.com
Marie-franÃ§oise@findmetesting.com
UÃ²@findmetesting.com
InÃ¨s@findmetesting.com
OcÃ©ane@findmetesting.com
Marie-Ã¨ve@findmetesting.com
RÃ©becca@findmetesting.com
ZoÃ©@findmetesting.com
LÃ i@findmetesting.com
RachÃ¨le@findmetesting.com
CÃ©cile@findmetesting.com
MaÃ¯lys@findmetesting.com
GarÃ§on@findmetesting.com
hereiam@testing.com

It's a game of per%entage percentage.
Findme#testing Findme testing.
Over&over&over Over over over.
[findmeinbrackets], findmeinbrackets
(findmeinbrackets), findmeinbrackets
<findmeinbrackets>, findmeinbrackets
{findmeinbrackets>}, findmeinbrackets
http://findme-testing.here.com
http:\\findme-testing.here.com

Vestibulum ante ipsum primis in faucibus orci luctus et ultrices GarÃ§on@findmetesting.com cubilia Curae; Mauris viverra diam vitae quam. Suspendisse potenti. 
Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Ellerey.Fanti@findmetesting.cn risus. Praesent lectus.

Vivamus metus arcu, adipiscing findmetesting@findmetesting.com, hendrerit at, vulputate vitae, nisl.

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
FuzzyÂ£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
FuzzyÂ§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
FuzzyÂ±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH"
qYF7zvgv,ExtronDMP,dbproavschool,C#,Friday 26th of May 2023 08:17:57 AM CDT,"#SYMBOL_NAME ""ExtronDMP_Formatter_v2""
#ENABLE_STACK_CHECKING
#DEFINE_CONSTANT		MUTE_ON		1
#DEFINE_CONSTANT		MUTE_OFF	0
#ENABLE_TRACE
#DEFAULT_VOLATILE

#Help_Begin

This module does no error checking....just sends out whatever you send on a change
pre mixer gain range is -100dB to +12dB in 0.1dB increments

Virtual returns are named A-H in the device but referenced as 1-8 for the context of this module
page 148 of DMP128 manual [http://media.extron.com/download/files/userman/68-2036-01_D.pdf

v2 includes analog inputs 9-12
Dustin Baerg/ProAVSchool.com

#Help_End

DIGITAL_INPUT debug,micline_premixer_mute_on[12], micline_premixer_mute_off[12], virtual_premixer_mute_on[8], virtual_premixer_mute_off[8];
ANALOG_INPUT micline_premixer_gain[12], virtual_return_gain[8];
STRING_OUTPUT tx$;

Function sendLevel (INTEGER channelid, SIGNED_INTEGER newlevel)
{	
	INTEGER SISlevel;

	SISlevel = (newlevel *10) + 2048;	//calculation for SIS level on Extron documentation
	MAKESTRING(tx$, ""\x1BG%u*%dAU\x0d"",channelid,SISlevel);
	if(debug) trace(""sent: \x1BG%u*%dAU\x0d"",channelid,newlevel);
}

Function sendMute (INTEGER channelid, SIGNED_INTEGER newstate)
{
	MAKESTRING(tx$, ""\x1BM%u*%dAU\x0d"",channelid,newstate);
	if(debug) trace(""sent: \x1BM%u*%dAU\x0d"",channelid,newstate);
}


PUSH micline_premixer_mute_on
{
	INTEGER channel_index, x60;
	channel_index=GETLASTMODIFIEDARRAYINDEX();

	x60 = channel_index + 40100 - 1;	//Pre-Mixer Gain
    sendMute(x60, MUTE_ON);
}

PUSH micline_premixer_mute_off
{
	INTEGER channel_index, x60;
	channel_index=GETLASTMODIFIEDARRAYINDEX();

	x60 = channel_index + 40100 - 1;	//Pre-Mixer Gain
    sendMute(x60, MUTE_OFF);
}

PUSH virtual_premixer_mute_on
{
	INTEGER channel_index, x60;
	channel_index=GETLASTMODIFIEDARRAYINDEX();

	x60 = channel_index + 50000 - 1;	//Virtual Return Gain
    sendMute(x60, MUTE_ON);
}

PUSH virtual_premixer_mute_off
{
	INTEGER channel_index, x60;
	channel_index=GETLASTMODIFIEDARRAYINDEX();

	x60 = channel_index + 50000 - 1;	//Virtual Return Gain
    sendMute(x60, MUTE_OFF);
}

//RELEASE
CHANGE micline_premixer_gain
{
	INTEGER channel_index, x60;
	channel_index=GETLASTMODIFIEDARRAYINDEX();
    
	x60 = channel_index + 40100 - 1;	//Pre-Mixer Gain
    sendLevel(x60, micline_premixer_gain[channel_index]);
}

CHANGE virtual_return_gain
{
	INTEGER channel_index, x60;
	channel_index=GETLASTMODIFIEDARRAYINDEX();
    
	x60 = channel_index + 50000 - 1;	//Virtual Return Gain
    sendLevel(x60, virtual_return_gain[channel_index]);
}

FUNCTION Main()
{
	WAITFORINITIALIZATIONCOMPLETE ();
}
"
SrVEt328,Clicker Fighting Simulator,LuaXe,Lua,Friday 26th of May 2023 08:11:11 AM CDT,"function C(W) spawn(function () while getgenv().C do
for i, v in pairs(game:GetService(""Workspace"").Maps[W].Enemies:GetChildren()) do local args = {[1] = v.Name} game:GetService(""ReplicatedStorage"").Remotes.RE_TakeDamage:FireServer(unpack(args)) end wait() end end)
spawn(function () while getgenv().C do game:GetService(""ReplicatedStorage"").Remotes.RE_ClickPower:FireServer() wait() end end) end
function H(E)
    spawn(function ()
        while getgenv().H do
local args = {[1] = ""Hatch"",[2] = E,[3] = {}}game:GetService(""ReplicatedStorage"").Remotes.RE_Draw:FireServer(unpack(args)) wait()
        end
    end)
end

local library = loadstring(game:HttpGet(('https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/wall%20v3')))()

local w = library:CreateWindow(""Clicker Fighting Simulator"")

local b = w:CreateFolder(""Main"")

b:Button(""TP To The Game"",function() game:GetService(""TeleportService""):Teleport(12985134424) end)

b:Toggle(""Insta Kill"",function(val)
getgenv().C = val
C(W)
end)

b:Toggle(""Hatch"",function(val)
getgenv().H = val
H(E)
end)

b:Dropdown(""Choose an Egg"",{""Draw001"",""Draw002"",""Draw003"",""Draw004"",""Draw005"",""Draw006"",""Draw007"",""Draw008"",""Draw009"",""Draw0010"",""Draw011"",""Draw012"",""Draw013"",""Draw014"",""Draw015"",""Draw016"",""Draw017"",""Draw018"",""Draw019"",""Draw020""},true,function(val) E = val end)
b:Dropdown(""Choose a World"",{""World001"",""World002"",""World003"",""World004"",""World005"",""World006"",""World007"",""World008"",""World009"",""World010"",""World011"",""World012"",""World013"",""World014"",""World015"",""World016"",""World017"",""World018"",""World019"",""World020""},true,function(val) W = val end)

b:Label(""Made by X_LuaF#0705"",{TextSize = 21; TextColor = Color3.fromRGB(255,255,255); BgColor = Color3.fromRGB(38, 38, 38);})

local w = library:CreateWindow(""LocalPlayer"")

local b = w:CreateFolder(""LP"")

b:DestroyGui()

b:Button(""Discord"",function() setclipboard(""workink.co/2GQ/LTD"") end)
b:Button(""Full Version"",function() loadstring(game:HttpGet(""https://pastebin.com/raw/GphZf9Xe"", true))() end)
b:Button(""Rejoin"",function() loadstring(game:HttpGet(""https://pastebin.com/raw/mM7JBG5h"", true))() end)
b:Button(""Reset"",function() loadstring(game:HttpGet(""https://pastebin.com/raw/EEY6SATj"", true))() end)

b:Box(""Speed"",""number"",function(val) S = val end)
b:Box(""Jump"",""number"",function(val) J = val end)
b:Box(""Hip Height"",""number"",function(val) H = val end)
b:Box(""Gravity"",""number"",function(val) G = val end)
 
b:Toggle(""Speed"",function(bool) getgenv().Speed = bool Speed(S) end)
b:Toggle(""Jump"",function(bool) getgenv().Jump = bool Jump(J) end)
b:Toggle(""Hip Height"",function(bool) getgenv().Hip = bool Hip(H) end)
b:Toggle(""Gravity"",function(bool) getgenv().Grav = bool Grav(G) end)
 
b:Slider(""FOV (Default is 70)"",{min = 0;max = 120;precise = true;},function(val) game.workspace.CurrentCamera.FieldOfView = val end)

function TPCFrame(Player_CFrame) if game.Players.LocalPlayer.Character:FindFirstChild(""HumanoidRootPart"") then game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Player_CFrame.CFrame end end
function TPVector3(Player_Position) game.Players.LocalPlayer.Character.HumanoidRootPart.Position = Player_Position.Position end
function PHP(Player_HP) game.Players.LocalPlayer.Character.Humanoid.Health = Player_HP end

function Chat(Mes, Freq) spawn(function () while getgenv().Chat do local args = {[1] = Mes,[2] = ""All""} game:GetService(""ReplicatedStorage"").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(unpack(args)) wait(Freq) end end) end
function Speed(Nume) spawn(function () while getgenv().Speed do game:GetService(""Players"").LocalPlayer.Character.Humanoid.WalkSpeed = Nume if not getgenv().Speed then game:GetService(""Players"").LocalPlayer.Character.Humanoid.WalkSpeed = 16 end wait() end end) end
function Jump(Nume) spawn(function () while getgenv().Jump do game:GetService(""Players"").LocalPlayer.Character.Humanoid.JumpPower = Nume if not getgenv().Jump then game:GetService(""Players"").LocalPlayer.Character.Humanoid.JumpPower = 50 end wait() end end) end
function Hip(Nume) spawn(function () while getgenv().Hip do game:GetService(""Players"").LocalPlayer.Character.Humanoid.HipHeight = Nume if not getgenv().Hip then game:GetService(""Players"").LocalPlayer.Character.Humanoid.HipHeight = 0.1 end wait() end end) end
function Grav(Nume) spawn(function () while getgenv().Grav do game:GetService(""Workspace"").Gravity = Nume if not getgenv().Grav then game:GetService(""Workspace"").Gravity = 196.2 end wait() end end) end"
0h6mJUe1,Photo Editor In Python,dx4iot,Python,Friday 26th of May 2023 07:26:25 AM CDT,"#follow me on instagram for more @pycodehub
#follow me on instagram for more @pycodehub
#follow me on instagram for more @pycodehub

from PIL import Image, ImageEnhance, ImageFilter, ImageTk
import tkinter as tk
from tkinter import filedialog, messagebox

class PhotoEditor:
    def __init__(self):
        self.root = tk.Tk()
        self.root.title(""Photo Editor"")
        self.image = None
        self.canvas = tk.Canvas(self.root, width=500, height=500)
        self.canvas.pack()

        self.menu_bar = tk.Menu(self.root)
        self.file_menu = tk.Menu(self.menu_bar, tearoff=0)
        self.file_menu.add_command(label=""Open"", command=self.open_image)
        self.file_menu.add_command(label=""Save"", command=self.save_image)
        self.menu_bar.add_cascade(label=""File"", menu=self.file_menu)

        self.edit_menu = tk.Menu(self.menu_bar, tearoff=0)
        self.edit_menu.add_command(label=""Rotate"", command=self.rotate_image)
        self.edit_menu.add_command(label=""Resize"", command=self.resize_image)
        self.edit_menu.add_command(label=""Enhance"", command=self.enhance_image)
        self.edit_menu.add_command(label=""Blur"", command=self.blur_image)
        self.menu_bar.add_cascade(label=""Edit"", menu=self.edit_menu)

        self.root.config(menu=self.menu_bar)

    def open_image(self):
        file_path = filedialog.askopenfilename(filetypes=[(""Image Files"", ""*.jpg;*.jpeg;*.png;*.gif"")])
        if file_path:
            self.image = Image.open(file_path)
            self.show_image()

    def save_image(self):
        if self.image:
            file_path = filedialog.asksaveasfilename(defaultextension="".jpg"")
            if file_path:
                self.image.save(file_path)
                messagebox.showinfo(""Save"", ""Image saved successfully."")

    def show_image(self):
        self.canvas.delete(""all"")
        if self.image:
            image_width, image_height = self.image.size
            if image_width > 500 or image_height > 500:
                image_ratio = min(500 / image_width, 500 / image_height)
                new_width = int(image_width * image_ratio)
                new_height = int(image_height * image_ratio)
                self.image = self.image.resize((new_width, new_height))
                self.canvas.config(width=new_width, height=new_height)
            self.canvas.image = ImageTk.PhotoImage(self.image)
            self.canvas.create_image(0, 0, anchor=""nw"", image=self.canvas.image)

    def rotate_image(self):
        if self.image:
            angle = float(tk.simpledialog.askstring(""Rotate"", ""Enter rotation angle (in degrees):""))
            self.image = self.image.rotate(angle)
            self.show_image()

    def resize_image(self):
        if self.image:
            width = int(tk.simpledialog.askstring(""Resize"", ""Enter new width:""))
            height = int(tk.simpledialog.askstring(""Resize"", ""Enter new height:""))
            self.image = self.image.resize((width, height))
            self.show_image()

    def enhance_image(self):
        if self.image:
            factor = float(tk.simpledialog.askstring(""Enhance"", ""Enter enhancement factor (0.0 - 1.0):""))
            enhancer = ImageEnhance.Contrast(self.image)
            self.image = enhancer.enhance(factor)
            self.show_image()

    def blur_image(self):
        if self.image:
            radius = int(tk.simpledialog.askstring(""Blur"", ""Enter blur radius:""))
            self.image = self.image.filter(ImageFilter.GaussianBlur(radius))
            self.show_image()

    def run(self):
        self.root.mainloop()


photo_editor = PhotoEditor()
photo_editor.run()

#follow me on instagram for more @pycodehub
#follow me on instagram for more @pycodehub
#follow me on instagram for more @pycodehub"
8q6FRUGS,Review Fox Markets,fxvnpro,PHP,Friday 26th of May 2023 07:24:20 AM CDT,https://www.fxvnpro.com/review-fox-markets/
q1BYBJ4U,Untitled,linuxoid,Python,Friday 26th of May 2023 07:21:43 AM CDT,"from tkinter import *
from tkinter import ttk
from tkinter import filedialog
import os
from selenium import webdriver
import time
from datetime import datetime
from openpyxl import Workbook

root = Tk()
root.title(""Uzum"")
root.geometry(""500x500"")
root.grid_rowconfigure(index=0, weight=1)
root.grid_columnconfigure(index=0, weight=1)
root.grid_columnconfigure(index=1, weight=1)


# Ð¾ÑÐºÑÑÐ²Ð°ÐµÐ¼ ÑÐ°Ð¹Ð» Ð² ÑÐµÐºÑÑÐ¾Ð²Ð¾Ðµ Ð¿Ð¾Ð»Ðµ
def open_driver():
	global driverpath
	driverpath = filedialog.askopenfilename()
	print(driverpath)


# ÑÐ¾ÑÑÐ°Ð½ÑÐµÐ¼ ÑÐµÐºÑÑ Ð¸Ð· ÑÐµÐºÑÑÐ¾Ð²Ð¾Ð³Ð¾ Ð¿Ð¾Ð»Ñ Ð² ÑÐ°Ð¹Ð»
def open_path():
	global filepath
	filepath = filedialog.askdirectory()
	print(filepath)

def filter_num(l):
	new_l = []
	for i in l:
		if i.isdigit():
			new_l.append(i)
	answer = ' '.join(new_l)
	return answer

def pars_uzum():
	date = str(datetime.now()).replace(':', '_')
	date = date.replace('.', '_').replace('-', '_').replace(' ', '_')
	dir_name = (filepath + ""/"" + date)
	print(dir_name)
	os.mkdir(dir_name)
	url_list = ['https://uzum.uz/ru/category/Elektronika-10020',
					'https://uzum.uz/ru/category/Bytovaya-tekhnika-10004',
					'https://uzum.uz/ru/category/Odezhda-10014',
					'https://uzum.uz/ru/category/Obuv-10013',
					'https://uzum.uz/ru/category/Aksessuary-10003',
					'https://uzum.uz/ru/category/Krasota-10012',
					'https://uzum.uz/ru/category/Zdorove-10009',
					'https://uzum.uz/ru/category/Tovary-dlya-doma-10018',
					'https://uzum.uz/ru/category/Stroitelstvo-i-remont-10016',
					'https://uzum.uz/ru/category/Avtotovary-10002',
					'https://uzum.uz/ru/category/Detskie-tovary-10007',
					'https://uzum.uz/ru/category/Khobbi-i-tvorchestvo-10008',
					'https://uzum.uz/ru/category/Sport-i-otdykh-10015',
					'https://uzum.uz/ru/category/Produkty-pitaniya-1821',
					'https://uzum.uz/ru/category/Bytovaya-khimiya-i-lichnaya-10005',
					'https://uzum.uz/ru/category/Kanctovary-10010',
					'https://uzum.uz/ru/category/Zootovary-10019',
					'https://uzum.uz/ru/category/Knigi-10011',
					'https://uzum.uz/ru/category/Dacha-sad-i-ogorod-10006']
	categoty_list = ['Ð­Ð»ÐµÐºÑÑÐ¾Ð½Ð¸ÐºÐ°.xls', 'ÐÑÑÐ¾Ð²Ð°Ñ ÑÐµÑÐ½Ð¸ÐºÐ°.xls', 'ÐÐ´ÐµÐ¶Ð´Ð°.xls', 'ÐÐ±ÑÐ²Ñ.xls',
					 'ÐÐºÑÐµÑÑÑÐ°ÑÑ.xls', 'ÐÑÐ°ÑÐ¾ÑÐ°.xls', 'ÐÐ´Ð¾ÑÐ¾Ð²ÑÐµ.xls', 'Ð¢Ð¾Ð²Ð°ÑÑ_Ð´Ð»Ñ_Ð´Ð¾Ð¼Ð°.xls', 'Ð¡ÑÑÐ¾Ð¸ÑÐµÐ»ÑÑÑÐ²Ð¾_Ð¸_ÑÐµÐ¼Ð¾Ð½Ñ',
					 'ÐÐ²ÑÐ¾ÑÐ¾Ð²Ð°ÑÑ.xls', 'ÐÐµÑÑÐºÐ¸Ðµ_ÑÐ¾Ð²Ð°ÑÑ.xls', 'Ð¥Ð¾Ð±Ð±Ð¸_Ð¸_ÑÐ²Ð¾ÑÑÐµÑÑÐ²Ð¾.xls', 'Ð¡Ð¿Ð¾ÑÑ_Ð¸_Ð¾ÑÐ´ÑÑ.xls',
					 'ÐÑÐ¾Ð´ÑÐºÑÑ_Ð¿Ð¸ÑÐ°Ð½Ð¸Ñ.xls', 'ÐÑÑÐ¾Ð²Ð°Ñ_ÑÐ¸Ð¼Ð¸Ñ_Ð¸_ÑÑÐµÐ´ÑÑÐ²Ð°_Ð»Ð¸ÑÐ½Ð¾Ð¹_Ð³Ð¸Ð³Ð¸ÐµÐ½Ñ.xls', 'ÐÐ°Ð½ÑÑÐ¾Ð²Ð°ÑÑ.xls',
					 'ÐÐ¾Ð¾ÑÐ¾Ð²Ð°ÑÑ.xls', 'ÐÐ½Ð¸Ð³Ð¸.xls', 'ÐÐ°ÑÐ°_ÑÐ°Ð´_Ð¸_Ð¾Ð³Ð¾ÑÐ¾Ð´.xls']  # Ð¡Ð¿Ð¸ÑÐ¾Ðµ Ð½Ð°Ð·Ð²Ð°Ð½Ð¸Ð¹ ÐºÐ°ÑÐµÐ³Ð¾ÑÐ¸Ð¹
	chrome_options = webdriver.ChromeOptions()
	# chrome_options.add_argument('--blink-settings=imagesEnabled=false')
	chrome_options.add_argument(""--start-maximized"")
	browser = webdriver.Chrome(executable_path=driverpath, chrome_options=chrome_options)
	links = []
	for category in range(len(url_list)):
		category_name = ( dir_name + '\\' + categoty_list[category])
		wb = Workbook()
		ws = wb.active
		ws.append(['ÐÐ°Ð·Ð²Ð°Ð½Ð¸Ðµ', 'Ð¡ÑÑÐ»ÐºÐ°', 'Ð¦ÐµÐ½Ð°', 'ÐÐ¾Ð»-Ð²Ð¾ Ð·Ð°ÐºÐ°Ð·Ð¾Ð²', 'Ð¢Ð¾Ð²Ð°ÑÐ° Ð² Ð½Ð°Ð»Ð¸ÑÐ¸Ð¸', 'ÐÑÐ¿Ð¸Ð»Ð¸ Ð½Ð° ÑÑÐ¾Ð¹ Ð½ÐµÐ´ÐµÐ»Ðµ'])
		for url in url_list:
			url = str(url +'?currentPage=')
			for page in range(1,500):
				url = str(url + str(page))
				print(url)
				slicepage = len(str(page))
				# print(slicepage)
				browser.get(url)
				time.sleep(9)
				try:
					cards = browser.find_elements('xpath', '//a[@data-test-id=""text__product-name""]')
				except:
					print(""ÑÐ¾ÑÐ½Ð¾ Ð·Ð°ÐºÐ¾Ð½ÑÐ¸Ð»Ð¸ ÑÐ¿ÑÐ°Ð¶Ð½ÐµÐ½Ð¸Ðµ?""+ str(page))
					break
				for a in cards:
					a = a.get_attribute(""href"")
					links.append(str(a))
					# print(links)
				for card in links:
					browser.get(card)
					time.sleep(9)
					name = browser.find_element('xpath', '/html/body/div/main/div/div[2]/div[1]/div[2]/div[2]/div[1]/div[1]/h1').text
					time.sleep(0.5)
					urltocard = card
					curr = filter_num(browser.find_element('xpath', '/html/body/div/main/div/div[2]/div[1]/div[2]/div[2]/div[1]/div[2]/div[5]/div[2]/div[1]/div[1]/span').text.split(' '))
					time.sleep(0.5)
					zakaz = filter_num(browser.find_element('xpath', '/html/body/div/main/div/div[2]/div[1]/div[2]/div[2]/div[1]/div[1]/div[1]/div[2]').text.split(' '))
					time.sleep(0.5)
					buyers = filter_num(browser.find_element('xpath', '/html/body/div/main/div/div[2]/div[1]/div[2]/div[2]/div[1]/div[2]/div[9]/div/div').text.split(' '))
					time.sleep(0.5)
					sklad = filter_num(browser.find_element('xpath', '/html/body/div/main/div/div[2]/div[1]/div[2]/div[2]/div[1]/div[2]/div[4]/div[2]/div[2]/span').text.split(' '))
					time.sleep(0.5)
					# print(name,urltocard,curr,zakaz,buyers,sklad)
					ws.append([name, urltocard, curr, zakaz, buyers, sklad])
					wb.save(category_name)
				print(""next"")
				url = url[:-int(slicepage)]
				links = []
	wb.remove(ws)

start_button = ttk.Button(text=""start"", command=pars_uzum)
start_button.grid(column=0, row=0, sticky=NSEW, padx=10)
open_button = ttk.Button(text=""ÐÑÐºÑÑÑÑ Ð¿Ð°Ð¿ÐºÑ Ð´Ð»Ñ ÑÐ¾ÑÑÐ°Ð½ÐµÐ½Ð¸Ñ"", command=open_path)
open_button.grid(column=0, row=1, sticky=NSEW, padx=10)
save_button = ttk.Button(text=""ÐÑÐºÑÑÑÑ Ð´ÑÐ°Ð¹Ð²ÐµÑ"", command=open_driver)
save_button.grid(column=1, row=1, sticky=NSEW, padx=10)
root.mainloop()"
SyCtMa0s,Untitled,35657,C++,Friday 26th of May 2023 07:03:21 AM CDT,"#define _CRT_SECURE_NO_WARNINGS

#include <iostream>
#include <cstring>


using namespace std;

class String {

public:

	String() {
		size = 0;
		capacity = 15;
		str = new char[15];
	}

	String(const int string_capacity) {
		size = 0;
		capacity = string_capacity;
		str = new char[capacity];
	}

	String(const char new_str[]) {
		capacity = strlen(new_str) + 1;
		str = new char[capacity];
		strcpy(str, new_str);
		size = capacity - 1;
	}

	void SetString(const char new_str[]) {
		int new_space = strlen(new_str) + 1;
		if (capacity < new_space) {
			delete[] str;
			capacity = new_space;
			str = new char[capacity];
		}
		strcpy(str, new_str);
		size = capacity - 1;
	}

	const char* GetString() {
		return str;
	}

	void SetChar(const int index, const char ch) {
		if (index < 0 || index >= size) {
			cout << ""Invalid index"" << endl;
			return;
		}
		str[index] = ch;
	}

	char GetChar(const int index) {
		if (index < 0 || index >= size) {
			cout << ""Invalid index"" << endl;
			abort;
		}
		return str[index];
	}

	int Size() {
		return size;
	}

	int Capacity() {
		return capacity;
	}

	~String() {
		delete[] str;
	}

private:
	int size;
	int capacity;
	char* str;
};


int main() {
	String my_string;
	cout << ""Size: "" << my_string.Size() << "" Capacity: "" << my_string.Capacity() << endl;
	my_string.SetString(""Hello"");
	cout << my_string.GetString() << endl;
	cout << ""Size: "" << my_string.Size() << "" Capacity: "" << my_string.Capacity() << endl;
	my_string.SetString(""Hello my dear friend"");
	cout << my_string.GetString() << endl;
	cout << ""Size: "" << my_string.Size() << "" Capacity: "" << my_string.Capacity() << endl;
	my_string.SetChar(2, 'm');
	cout << my_string.GetString() << endl;
	cout << my_string.GetChar(1) << endl;
	String my_new_string(""1234"");
	cout << my_new_string.GetString() << endl;
	cout << ""Size: "" << my_new_string.Size() << "" Capacity: "" << my_new_string.Capacity() << endl;
}"
pHbs7EgP,Review ForexVox,fxvnpro,PHP,Friday 26th of May 2023 06:57:03 AM CDT,https://www.fxvnpro.com/review-forexvox/
Z3Cnntub,Untitled,MeehoweCK,C++,Friday 26th of May 2023 06:45:38 AM CDT,"#include <fstream>		// file stream
#include <iostream>
#include <string>

using namespace std;

int main()
{
	ifstream plik;			// plik tylko do odczytu
	plik.open(""plik.txt"");		// otwarcie pliku
	if (plik.fail())					// .fail() zwraca true jeÅli plik nie zostaÅ otwarty
	{
		cout << ""Nie udalo sie otworzyc pliku :( \n"";
		return 0;
	}
	string tekst;
	//plik >> tekst;		// pobranie do pierwszgo biaÅego znaku (np. spacji)

	//while (!plik.eof())		// eof - end of file
	//{
	//	plik >> tekst;
	//	cout << tekst << ' ';
	//}

	/*while (plik >> tekst)
	{
		cout << tekst << ' ';
	}*/

	// zczytywanie caÅego wiersza:
	getline(plik, tekst);
	cout << tekst;

	plik.close();
	return 0;
}"
Yw2k4Y6c,Untitled,MeehoweCK,C++,Friday 26th of May 2023 06:36:06 AM CDT,"#include <fstream>		// file stream
#include <iostream>

using namespace std;

int main()
{
	ofstream plik;		// plik do zapisu
	plik.open(""plik.txt"");		// otwarcie pliku lub (jeÅli takiego pliku nie ma) utworzenie go
	plik << ""jakis tekst"" << endl;		// zapisanie tekstu do pliku
	plik.close();						// zamkniÄcie pliku z ktÃ³rego korzystaliÅmy
	return 0;
}"
8SM17bks,Untitled,burcev,PHP,Friday 26th of May 2023 06:30:47 AM CDT,"$id = 6980375;
global $LANG;
$LANG->SetCurrent(""ua"");
$product = inApp('ProductController')->getById($id, [
                    'ID',
                    'ACTIVE_FROM',
                    'IBLOCK_SECTION_ID',
                    'CATALOG_SORT',
                    'ON_SITE',
                    'GOOD_TYPE',
                    'PODVID',
                    'SEO_NAME',
                    'SEO_NAME_UA'
                ]);
echo '<pre>'.print_r($product->getGoodTypeName(), true).'</pre>';
echo '<pre>'.print_r($product->getPodvidName(), true).'</pre>';"
EL1d5kxm,data584,TestGuy1,JSON,Friday 26th of May 2023 06:00:06 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '9c59cae799241e86ecae69467a6cfe46fa6dfc6e892d9614c0b20863a394f18ae607356e778e917327055b32d3436af8ad93aa900dfe3b56a91460eebf6df85ba3dad7135c8e25a66e119b658d56067cc244a1daf881c8a7ca01fa60879c74bc04e5db7a93b00d9675b74f9785e496361557e89c0754445af185bc59ab219539',
  otherdata: [
    '56786856e2e4a7381bb75d495589cd33',
    '557db9d4d855330b4fca8a30e04494ce',
    '1f95a03b2236c588b1de2552a3a5da90',
    'd9dc0942f65c870b129d085a67725f5e',
    '54e5734d0074732c406242ae718ea88f',
    '7726071426cd54d1ae3ac9aca7ef48e0',
    '1f8e7391694274e1285f50392d686f71',
    'f703181b898aa67646d09837071102fb'
  ]
}"
AJ1SbdhP,Advanced AND - Donald AND Duck AND Hello,wheresTheAnyKey,C,Friday 26th of May 2023 05:54:19 AM CDT,"Pasted at: 26/05/2023 11:54
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND
hello, donald was a duck

5502491997132108

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
FuzzyÂ£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
FuzzyÂ§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
FuzzyÂ±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH
"
G1U2dCE7,Financial What's Inside - Email/IP/Bank,wheresTheAnyKey,C,Friday 26th of May 2023 05:54:17 AM CDT,"Pasted at: 26/05/2023 11:54
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3
What's Inside Paste 

5378496492418234
5571598708435236
5587663820997281
5502491997132108
5516931903918995
5322909948799236
5443317136071703
5409137465238695
5497550044220575
5559606180091553

aaribaud@att.net
aaribaud@comcast.net
aaribaud@att.com
aaribaud@att.co.uk
aaribaud@yahoo.com

246.107.72.199
221.187.199.189
3.109.3.44
109.112.85.139
250.83.213.179
169.141.201.234
50.180.50.59
20.181.54.231
64.235.191.167
48.103.36.43"
g9m9Dwwx,Financial with SPECIAL CHARACTERS,wheresTheAnyKey,C,Friday 26th of May 2023 05:54:16 AM CDT,"Pasted at: 26/05/2023 11:54
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND

5148-2121-6312-7114   - DASHES
5148212163127114
5107-4578-0576-9075   - DASHES
5107457805769075
3488-1760-1454-729   - DASHES
348817601454729

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
FuzzyÂ£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
FuzzyÂ§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
FuzzyÂ±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH"
KeuftJy5,Domains with SPECIAL CHARS,wheresTheAnyKey,C,Friday 26th of May 2023 05:54:14 AM CDT,"Pasted at: 26/05/2023 11:54
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND

www.qatesting.com
blog.qatesting.com
www.qatesting.com/index.html
www.qatesting.com/home
www.qatestingblog.com
www.qatestingtutorials.com
shop.qatesting.co.uk
admin.qatesting.io 
qatesting
qatesting.co.uk
qatesting.cn
qatesting.io
findmetesting.com
www.qatesting-blog.com
www.qatesting-blog23.com
www.qatesting
www.qatesting.co.uk
www.qatesting.cn
www.qatesting.io
www.findmetesting.com
www.wobsut.gov

The difference is that QA is process oriented and QC is product oriented.

Testing, therefore is product oriented and thus is in the QC domain. Testing for quality isn't assuring quality, it's controlling it.



Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
FuzzyÂ£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
FuzzyÂ§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
FuzzyÂ±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH
"
sP5iRizz,ALL Keywords with Excluded Words,wheresTheAnyKey,C,Friday 26th of May 2023 05:54:12 AM CDT,"Pasted at: 26/05/2023 11:54
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND 

The dystopian version of superintelligence is illustrated with frequency by leaders in the technology industry, and is famously depicted by Hollywood in films like Terminator, 
or more recently Ex Machina, and even the Avengers. The âfurious deity A.I.â is a story you know, because it is the story you are constantly told: we build the thinking machine, 
it surpasses our abilities in every way, and it destroys us for one of any number of reasons.Maybe it perceives us as a threat. Maybe weâre just in its way, 
and it hardly perceives us at allâââmankind, a disposable insect race.

There are of course many arguments in opposition to the now ubiquitous concept of our apocalypse by artificial intelligence. 
I myself have called into question the logic of such dystopian arguments in Anatomy of Next. But our subject here is less pertaining to the nature of the conscious machine than 
it is to the way we talk about this subject, and what it means. First, consider that most of the artificial intelligence depicted in culture looks human, a representation with 
no basis in technological reality. Then, the true scope of the Singularity is almost impossible to predict, which begs a question: where are these opinions about the broadly 
unknowable coming from?"
