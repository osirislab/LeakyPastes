id,title,username,language,date,content
gSKaX6kF,Untitled,Derga,C++,Saturday 27th of May 2023 01:00:46 PM CDT,"#include <iostream>
#include <fstream>
#include <ctime>
#include <forward_list>
#include <string>

using namespace std;

void GenerateFile(const string& pattern, const string& file_name) {
    string text;
    int WORDS_COUNT = 5;
    srand(time(0));
    for (int i = 0; i < WORDS_COUNT; ++i) {
        int word_size = 1 + rand() % 10;
        string word;
        for (int j = 0; j < word_size; ++j) {
            word += (char)('a' + rand() % 25);
        }

        int pattern_chance = rand() % 11;
        if (pattern_chance == 0) {
            text += pattern;
            text += ' ';
        }

        if (i == 1 || i == 3) {
            text += pattern;
            text += ' ';
        }

        text += word;
        text += ' ';
    }

    ofstream fout(file_name, std::ios::binary);
    fout << text;
    fout.close();

}

void Print(const forward_list<char>& l) {
    auto it = l.begin();
    while (it != l.end()) {
        cout << *it++;
    }
}

int main() {
    setlocale(LC_ALL, """");
    string pattern, file_name;
    cin >> pattern >> file_name;
    GenerateFile(pattern, file_name);
    ifstream fin(file_name);
    if (!fin.is_open()) {
        cout << ""Файл невозможно открыть "" << file_name;
        return -1;
    }
    forward_list<char> text = { 't', 'a', 'c', ' ', ' ', 't', 'a', 'c' };
    char read_in;
    /*while (fin.get(read_in)) {
        text.push_front(read_in);
    }*/
    Print(text);

    string revers_patter;
    for (int i = pattern.size() - 1; i >= 0; i--) {
        revers_patter += pattern[i];
    }

    auto it = text.begin();
    string save;
    bool is_last_word = false;
    for (; it != text.end(); it++) {
        while (*it != ' ') {
            save += *it;
            auto is_end = it;
            is_end++;
            if (is_end == text.end()) {
                is_last_word = true;
                break;  
            }
            it++;
            continue;
        }

        if (save.find(revers_patter) != string::npos) {
            if (is_last_word) {
                it = text.insert_after(it, ' ');
            }
            it = text.insert_after(it, save.begin(), save.end());
            if (is_last_word) {
                break;
            }
            it = text.insert_after(it, ' ');
        }
        save.erase();
    }
    cout << endl;
    Print(text);


    return 0;
}
//cat data.txt"
8KJV2Tb2,Untitled,Kufat,TypeScript,Saturday 27th of May 2023 12:47:27 PM CDT,"// The problem is that the 'args' passed to edit() in network.ts doesn't always contain all args.
// It's a straightforward fix but I don't know how to do the check _idiomatically_.

// Example: ('nick' might or might not be omitted from 'args' under some circumstances)
this.nick = args.nick;

// Options:
// Option 1
if( 'nick' in args ) {
  this.nick = args.nick;
}

// Option 2
this.nick = 'nick' in args ? args.nick : this.nick;

// Option 3
'nick' in args && ( this.nick = args.nick );"
Erc1iLJj,[OC+Warpdrive] autoradar,g0p,Lua,Saturday 27th of May 2023 12:35:49 PM CDT,"DIR = {FRONT=0, RIGHT=1, BACK=2, LEFT=3}
STATE = {BOOT=0, SCAN=1, CHARGING=2, PREJUMP=3, JUMP=4, IDLE=5}
LONG_JUMP = 10000
JUMP_ENERGY = 2000000
AREA_RADIUS = 2 --20000
SCAN_RADIUS = 5000 
SCAN_ENERGY = 12600000
DRONE_NAME = ""drone"" --""default""

local data = { }
local mode = nil
local status = nil

--position
local X, Y, Z
local dx, dz

--ship dim size
core_front = 2; core_right = 2; core_up = 2;
core_back = 2; core_left = 2; core_down = 1;

--core support
local core = nil
--radar support
local radar = nil
--bridge support
local bridge = nil


function data_save()
	local file = fs.open(""rdata.txt"", ""w"")
  	if file ~= nil then
    	file.writeLine(textutils.serialize(data))
    	file.close()
  	else
    	print(""No file system"")
    	sleep(3)
  	end
end
 
function data_read()
  	data = {}
  	if fs.exists(""rdata.txt"") then
    	local file = fs.open(""rdata.txt"", ""r"")
    	data = textutils.unserialize(file.readAll())
    	file.close()
    	if data == nil then data = {}; end
  	end
  	if data.dir == nil then data.dir = DIR.LEFT; end
  	if data.num == nil then data.num = 0; end
  	if data.lcount == nil then data.lcount = 0; end
  	if data.gcount == nil then data.gcount = 0; end
	if data.scount == nil then data.scount = 0; end
	if data.ships == nil then data.ships = {}; end
end

function core_boot()
	local sides = peripheral.getNames()  
	for _, side in pairs(sides) do
		sleep(0.5)
    	--print(""Checking "" .. side .. "" "")
    	local componentType = peripheral.getType(side)      
    	if componentType == ""warpdriveShipController"" then
     		print(""Wrapping Ship Controller"")
      		core = peripheral.wrap(side)
    	elseif componentType == ""warpdriveRadar"" then
      		print(""Wrapping Radar"")
      		radar = peripheral.wrap(side)
    	elseif componentType == ""openperipheral_bridge"" then
      		print(""Wrapping Bridge"")
      		bridge = peripheral.wrap(side)
    	end
  	end
 
	if core == nil then
		print(""Not found Ship Core"")    	
	end
	if radar == nil then
    	print(""Not found Radar"")    	    
	end  
	if bridge == nil then
		print(""Not found Bridge"")    	    
	end  
 
	print(""..."")	
  	if core.direction ~= nil then
       core.direction(666)
       core.distance(0)
    end
    print(""Drone core detected..."")
 
	repeat
		pos = core.position()
    	sleep(0.3)
	until pos ~= nil
  	X, Y, Z = core.position()	
	dx, _, dz = core.getOrientation()	
	print(""Drone position triangulated..."")
	 
  	repeat
    	isAttached = core.isAttached()
    	sleep(0.3)
  	until isAttached ~= false
  	print(""Drone core linked..."")

	core.shipName(DRONE_NAME)
	core.beaconFrequency(DRONE_NAME)
end

function set_dim()	
    core.dim_positive(core_front, core_right, core_up)
    core.dim_negative(core_back, core_left, core_down)
end

function is_center()	
	if X % 10000 == 0 and Z % 10000 == 0 then return true; end
	return false
end

function is_jumped()   
	if data.lastX ~= X or data.lastZ ~= Z then return true; end
	return false
end

function set_movement()
	if not is_jumped() then return end

    data.lastX = X
    data.lastZ = Z

	if is_center() then	
	
	 	--max jumps for area
		if data.gcount >= 4 * AREA_RADIUS * (AREA_RADIUS + 1) then
			data.gcount = 0
			data.lcount = 0	
			data.num = 0		
			data.dir = DIR.LEFT
			data.scount = AREA_RADIUS
		end
		
		if data.scount > 0 then
			--to start point						
			data.scount = data.scount - 1			
			
			--back and right
			core.movement(-LONG_JUMP, 0, LONG_JUMP) 	
		else
			--spiral jumping
			if data.lcount >= data.num then
    			data.lcount = 0
    			--change direction 
    			data.dir = data.dir + 1
    			if data.dir > 3 then data.dir = 0 end
    			--increase need jump number
    			if data.dir == DIR.FRONT or data.dir == DIR.BACK then
      				data.num = data.num + 1
    			end
			end				
			data.lcount = data.lcount + 1 
  			data.gcount = data.gcount + 1  
			--set movement 
  			if data.dir == DIR.FRONT then
    			core.movement(LONG_JUMP, 0, 0)
  			elseif data.dir == DIR.RIGHT then
    			core.movement(0, 0, LONG_JUMP)
  			elseif data.dir == DIR.BACK then
    			core.movement(-LONG_JUMP, 0, 0)
  			else --DIR.LEFT
    			core.movement(0, 0, -LONG_JUMP)
  			end  
		end 
	else			
		--path to center
		local x = X % 10000
		local z = Z % 10000		
		if dx > 0 then --[+X]			
			core.movement(-x, 0, -z)
		elseif dx < 0 then --[-X]			
			core.movement(x, 0, z)
		elseif dz > 0 then --[+Z]			
			core.movement(-z, 0, x)
		elseif dz < 0 then --[-Z]			
			core.movement(z, 0, -x)
		end		
		--print(tostring(x)..""|||""..tostring(z))		
	end			
end

function warp()	
    core.mode(1) -- 0-12800
    core.jump()
end

function screen_update(msg, percent)
    bridge.clear()
	bridge.addText(5, 10, ""X: ""..tostring(X).."" Z: ""..tostring(Z), 0x0000FF) 
	bridge.addText(5, 20, ""Status: "", 0x0000FF);  bridge.addText(50, 20, msg, 0x00FF00)	
	if percent ~= nil then 
		bridge.addText(100, 20, tostring(percent)..""%"", 0x00FF00)
	end
    bridge.addText(5, 40, ""Name      X      Y      Z      Mass"", 0x00FFFF)
	for i=1, #data.ships do		
		bridge.addText(5, 40 + 10 * i, data.ships[i], 0x0000FF)
	end
    bridge.sync()
end

function scan_start()
	radar.radius(SCAN_RADIUS)
	radar.start()
end

function scan_results()    	
	for i=0, radar.getResultsCount() do
		local flag, type, name, x, y, z, mass = radar.getResult(i)			 	
		if flag and name ~= nil then	
			if name ~= DRONE_NAME or x ~= X or z ~= Z then			
				data.ships[#data.ships + 1] = name.."" ""..tostring(x).."" ""..tostring(y).."" ""..tostring(z).."" ""..tostring(mass)
			end
		end
	end
end

function update()		
	local running = true
	local timer = 0
	mode = STATE.BOOT	

	while running do
		if mode == STATE.BOOT then		
			data_read()    
			core_boot()
			screen_update(""boot"")
			set_dim()			
			
			if is_center() then
				mode = STATE.CHARGING
			else
				mode = STATE.PREJUMP
			end				
		elseif mode == STATE.CHARGING then	
			local percent = math.floor(100 * radar.energy() / SCAN_ENERGY)
			if percent > 100 then percent = 100; end
			screen_update(""charging"", percent)				 
			if percent == 100 then
				scan_start()
				timer = 0
				mode = STATE.SCAN
			end					
		elseif mode == STATE.SCAN then
			screen_update(""scan"")
			if timer > 2 * (1 + 0.001 * SCAN_RADIUS) then
				scan_results()
				mode = STATE.PREJUMP
			end
		elseif mode == STATE.PREJUMP then
			screen_update(""prejump"")
			if core.energy() > JUMP_ENERGY then			
				set_movement()
				data_save()		
				mode = STATE.JUMP
			end			
		elseif mode == STATE.JUMP then
			screen_update(""jump"")			
			warp()					
			mode = STATE.IDLE			
		elseif mode == STATE.IDLE then
			screen_update(""idle"")
		end

		sleep(1)
		timer = timer + 1
	end
end
 
function make_commands()	
	while true do
    	local _, side, name, UUID, command = os.pullEvent(""glasses_chat_command"")
   
    	if command == ""jump"" then
       		mode = STATE.PREJUMP
		elseif command == ""restart"" then
		    mode = STATE.BOOT		
		elseif command == ""stop"" then
			mode = STATE.IDLE
		elseif command == """" then
    	end    	
	end
end

parallel.waitForAll(make_commands, update)"
3NbAwNGR,[OC+Warpdrive] autominer,g0p,Lua,Saturday 27th of May 2023 12:32:32 PM CDT,"local component = require(""component"")
local event = require(""event"")
local fs = require(""filesystem"")
local textutils = require(""serialization"")

----------------------------------------------------------------------------------

DIR = {FRONT=0, RIGHT=1, BACK=2, LEFT=3}
STATE = {INIT=0, PREMINE=1, MINE=2, PREJUMP=3, JUMP=4, IDLE=5}
local JUMP_DIST = 64
local JUMP_COOLDOWN = 60
local MINE_COOLDOWN = 10
local MINE_ENERGY = 160000

local data = { }
local miners = { }

--position
local X, Y, Z

--ship dim size
core_front = 3
core_right = 3
core_up = 1
core_back = 2
core_left = 3
core_down = 1

--core support
local core = nil
--network support
local tunnel = nil

----------------------------------------------------------------------------------

function data_save()
  fs.makeDirectory(""/t"")
  local file = fs.open(""/t/rdata.txt"", ""w"")
  if file ~= nil then
    file:write(textutils.serialize(data))
    file:close()
  else
    print(""No file system"")    
  end
end
 
function data_read()  
  fs.makeDirectory(""/t"")
  if fs.exists(""/t/rdata.txt"") then
    local file = fs.open(""/t/rdata.txt"", ""r"")  
    local str = file:read(1024)
    if str ~= nil then data = textutils.unserialize(str) end
    file:close()
    if data == nil then data = {}; end
  end  
  if data.dir == nil then data.dir = DIR.LEFT; end
  if data.num == nil then data.num = 0; end
  if data.lcount == nil then data.lcount = 0; end
  if data.gcount == nil then data.gcount = 0; end
end

function core_boot()
  if component.isAvailable(""warpdriveShipController"") then
    core = component.warpdriveShipController
  else
    print(""Not found Warp Core"")
    return
  end

  if component.isAvailable(""tunnel"") then
    tunnel = component.tunnel
  else
    print(""Not found Linked Card"")
    return
  end 
  print(""..."")  

  core_movement = { core.movement() }
  if core.direction ~= nil then
    core.direction(666)
    core.distance(0)
  end
  print(""Drone core detected..."")
 
  repeat
    pos = core.position()
    os.sleep(0.3)
  until pos ~= nil
  X, Y, Z = core.position()
  print(""Drone position triangulated..."")
 
  repeat
    isAttached = core.isAttached()
    os.sleep(0.3)
  until isAttached ~= false
  print(""Drone core linked..."")
 
  core.mode(1)
end

function set_dim() 
    core.dim_positive(core_front, core_right, core_up)
    core.dim_negative(core_back, core_left, core_down)
end

function is_jumped()   
  if data.lastX ~= X or data.lastZ ~= Z then
    return true
  end
  return false
end

function set_movement()  
  if not is_jumped() then return end

  data.lastX = X
  data.lastZ = Z

  if data.lcount >= data.num then
    data.lcount = 0
    --change direction 
    data.dir = data.dir + 1
    if data.dir > 3 then data.dir = 0 end
    --increase need jump number
    if data.dir == DIR.FRONT or data.dir == DIR.BACK then
      data.num = data.num + 1
    end
  end
  data.lcount = data.lcount + 1 
  data.gcount = data.gcount + 1
  --set movement 
  if data.dir == DIR.FRONT then
    core.movement(JUMP_DIST, 0, 0)
  elseif data.dir == DIR.RIGHT then
    core.movement(0, 0, JUMP_DIST)
  elseif data.dir == DIR.BACK then
    core.movement(-JUMP_DIST, 0, 0)
  else --DIR.LEFT
    core.movement(0, 0, -JUMP_DIST)
  end    
  core.distance(JUMP_DIST)
  --debug
  --print(""Need ""..tostring(data.dir).."" jump num: ""..tostring(data.num))
end
 
function warp()    
  core.mode(1) 
  core.jump()
end

function send_state()
  if tunnel ~= nil then
    data.energy = core.energy()    
    data.mode = mode
    tunnel.send(textutils.serialize(data))
  end
end

function init_miners() 
  miners = { }
  for addr_miner in component.list(""digital_miner"") do
    miners[#miners + 1] = addr_miner
  end
end

function start_mining() 
  for i = 1, #miners do
    component.invoke(miners[i], ""reset"", 666)
    component.invoke(miners[i], ""start"", 666)
  end
end

function stop_mining() 
  for i = 1, #miners do
    component.invoke(miners[i], ""stop"", 666)    
  end
end

function is_mining() 
  for i = 1, #miners do
    if component.invoke(miners[i], ""getEnergyStored"") < MINE_ENERGY then
      return true
    end
  end
  return false
end

function execute(command) 
  if command == ""start"" then 
    mode = STATE.INIT
  elseif command == ""stop"" then 
    mode = STATE.IDLE
  elseif command == ""jump"" then 
    stop_mining()
    mode = STATE.PREJUMP
  end
end

----------------------------------------------------------------------------------
local mode = STATE.INIT
local running = true
local timer = 0

while running do
  send_state()

  local event_id, _, _, _, _, command = event.pull(1)
  if mode ~= STATE.JUMP and event_id == ""modem_message"" then 
    execute(command) 
  end 

  if mode == STATE.INIT then      
    core_boot()
    set_dim()
    mode = STATE.PREMINE
  elseif mode == STATE.PREMINE then
    init_miners()
    start_mining()
    mode = STATE.MINE
  elseif mode == STATE.MINE then    
    if timer > MINE_COOLDOWN then 
      timer = 0      
      if not is_mining() then
        stop_mining()
        mode = STATE.PREJUMP
      end
    end    
  elseif mode == STATE.PREJUMP then    
    data_read()
    set_movement()
    data_save()
    warp()
    mode = STATE.JUMP
  elseif mode == STATE.JUMP then  
    if event_id == ""shipCoreCooldownDone"" or timer >= JUMP_COOLDOWN then   
      timer = 0   
      mode = STATE.INIT
    end
  elseif mode == STATE.IDLE then    
  end

  os.sleep(0.5)  
  timer = timer + 1
end"
udNSYvSP,Nigerian scammers [27-5-2/2023],bombaires,HTML,Saturday 27th of May 2023 12:17:03 PM CDT,"<a href=""mailto:johnniegarand102@gmail.com"">johnniegarand102@gmail.com</a>
<a href=""mailto:johnniegarand102+21085@gmail.com"">johnniegarand102+21085@gmail.com</a>
<a href=""mailto:johnniegarand102+11246@gmail.com"">johnniegarand102+11246@gmail.com</a>
<a href=""mailto:johnniegarand102+16650@gmail.com"">johnniegarand102+16650@gmail.com</a>
<a href=""mailto:johnniegarand102+26811@gmail.com"">johnniegarand102+26811@gmail.com</a>
<a href=""mailto:johnniegarand102+17347@gmail.com"">johnniegarand102+17347@gmail.com</a>
<a href=""mailto:johnniegarand102+28049@gmail.com"">johnniegarand102+28049@gmail.com</a>
<a href=""mailto:johnniegarand102+9572@gmail.com"">johnniegarand102+9572@gmail.com</a>
<a href=""mailto:johnniegarand102+9567@gmail.com"">johnniegarand102+9567@gmail.com</a>
<a href=""mailto:johnniegarand102+29562@gmail.com"">johnniegarand102+29562@gmail.com</a>
<a href=""mailto:johnniegarand102+18525@gmail.com"">johnniegarand102+18525@gmail.com</a>
<a href=""mailto:johnniegarand102+12409@gmail.com"">johnniegarand102+12409@gmail.com</a>
<a href=""mailto:johnniegarand102+31214@gmail.com"">johnniegarand102+31214@gmail.com</a>
<a href=""mailto:johnniegarand102+10899@gmail.com"">johnniegarand102+10899@gmail.com</a>
<a href=""mailto:johnniegarand102+21136@gmail.com"">johnniegarand102+21136@gmail.com</a>
<a href=""mailto:johnniegarand102+14271@gmail.com"">johnniegarand102+14271@gmail.com</a>
<a href=""mailto:johnniegarand102+11141@gmail.com"">johnniegarand102+11141@gmail.com</a>
<a href=""mailto:johnniegarand102+1025@gmail.com"">johnniegarand102+1025@gmail.com</a>
<a href=""mailto:johnniegarand102+15813@gmail.com"">johnniegarand102+15813@gmail.com</a>
<a href=""mailto:johnniegarand102+27232@gmail.com"">johnniegarand102+27232@gmail.com</a>
<a href=""mailto:johnniegarand102+25591@gmail.com"">johnniegarand102+25591@gmail.com</a>
<a href=""mailto:johnniegarand102+42@gmail.com"">johnniegarand102+42@gmail.com</a>
<a href=""mailto:johnniegarand102+22289@gmail.com"">johnniegarand102+22289@gmail.com</a>
<a href=""mailto:johnniegarand102+20529@gmail.com"">johnniegarand102+20529@gmail.com</a>
<a href=""mailto:johnniegarand102+582@gmail.com"">johnniegarand102+582@gmail.com</a>
<a href=""mailto:johnniegarand102+31284@gmail.com"">johnniegarand102+31284@gmail.com</a>
<a href=""mailto:johnniegarand102+2738@gmail.com"">johnniegarand102+2738@gmail.com</a>
<a href=""mailto:johnniegarand102+16942@gmail.com"">johnniegarand102+16942@gmail.com</a>
<a href=""mailto:johnniegarand102+568@gmail.com"">johnniegarand102+568@gmail.com</a>
<a href=""mailto:johnniegarand102+13084@gmail.com"">johnniegarand102+13084@gmail.com</a>
<a href=""mailto:johnniegarand102+17286@gmail.com"">johnniegarand102+17286@gmail.com</a>
<a href=""mailto:johnniegarand102+28704@gmail.com"">johnniegarand102+28704@gmail.com</a>
<a href=""mailto:johnniegarand102+16536@gmail.com"">johnniegarand102+16536@gmail.com</a>
<a href=""mailto:johnniegarand102+14222@gmail.com"">johnniegarand102+14222@gmail.com</a>
<a href=""mailto:johnniegarand102+27072@gmail.com"">johnniegarand102+27072@gmail.com</a>
<a href=""mailto:johnniegarand102+244@gmail.com"">johnniegarand102+244@gmail.com</a>
<a href=""mailto:johnniegarand102+20613@gmail.com"">johnniegarand102+20613@gmail.com</a>
<a href=""mailto:johnniegarand102+23212@gmail.com"">johnniegarand102+23212@gmail.com</a>
<a href=""mailto:johnniegarand102+18935@gmail.com"">johnniegarand102+18935@gmail.com</a>
<a href=""mailto:johnniegarand102+11735@gmail.com"">johnniegarand102+11735@gmail.com</a>
<a href=""mailto:johnniegarand102+10965@gmail.com"">johnniegarand102+10965@gmail.com</a>
<a href=""mailto:johnniegarand102+16049@gmail.com"">johnniegarand102+16049@gmail.com</a>
<a href=""mailto:johnniegarand102+22483@gmail.com"">johnniegarand102+22483@gmail.com</a>
<a href=""mailto:johnniegarand102+4178@gmail.com"">johnniegarand102+4178@gmail.com</a>
<a href=""mailto:johnniegarand102+3978@gmail.com"">johnniegarand102+3978@gmail.com</a>
<a href=""mailto:johnniegarand102+15331@gmail.com"">johnniegarand102+15331@gmail.com</a>
<a href=""mailto:johnniegarand102+23482@gmail.com"">johnniegarand102+23482@gmail.com</a>
<a href=""mailto:johnniegarand102+13685@gmail.com"">johnniegarand102+13685@gmail.com</a>
<a href=""mailto:johnniegarand102+23486@gmail.com"">johnniegarand102+23486@gmail.com</a>
<a href=""mailto:johnniegarand102+9478@gmail.com"">johnniegarand102+9478@gmail.com</a>
<a href=""mailto:johnniegarand102+1354@gmail.com"">johnniegarand102+1354@gmail.com</a>
<a href=""mailto:johnniegarand102+29831@gmail.com"">johnniegarand102+29831@gmail.com</a>
<a href=""mailto:johnniegarand102+25399@gmail.com"">johnniegarand102+25399@gmail.com</a>
<a href=""mailto:johnniegarand102+29399@gmail.com"">johnniegarand102+29399@gmail.com</a>
<a href=""mailto:johnniegarand102+29866@gmail.com"">johnniegarand102+29866@gmail.com</a>
<a href=""mailto:johnniegarand102+10861@gmail.com"">johnniegarand102+10861@gmail.com</a>
<a href=""mailto:johnniegarand102+10149@gmail.com"">johnniegarand102+10149@gmail.com</a>
<a href=""mailto:johnniegarand102+5900@gmail.com"">johnniegarand102+5900@gmail.com</a>
<a href=""mailto:johnniegarand102+17746@gmail.com"">johnniegarand102+17746@gmail.com</a>
<a href=""mailto:johnniegarand102+4007@gmail.com"">johnniegarand102+4007@gmail.com</a>
<a href=""mailto:johnniegarand102+2812@gmail.com"">johnniegarand102+2812@gmail.com</a>
<a href=""mailto:johnniegarand102+27326@gmail.com"">johnniegarand102+27326@gmail.com</a>
<a href=""mailto:johnniegarand102+20266@gmail.com"">johnniegarand102+20266@gmail.com</a>
<a href=""mailto:johnniegarand102+6840@gmail.com"">johnniegarand102+6840@gmail.com</a>
<a href=""mailto:johnniegarand102+8683@gmail.com"">johnniegarand102+8683@gmail.com</a>
<a href=""mailto:johnniegarand102+20052@gmail.com"">johnniegarand102+20052@gmail.com</a>
<a href=""mailto:johnniegarand102+3933@gmail.com"">johnniegarand102+3933@gmail.com</a>
<a href=""mailto:johnniegarand102+15349@gmail.com"">johnniegarand102+15349@gmail.com</a>
<a href=""mailto:johnniegarand102+26319@gmail.com"">johnniegarand102+26319@gmail.com</a>
<a href=""mailto:johnniegarand102+11919@gmail.com"">johnniegarand102+11919@gmail.com</a>
<a href=""mailto:johnniegarand102+16641@gmail.com"">johnniegarand102+16641@gmail.com</a>
<a href=""mailto:johnniegarand102+23506@gmail.com"">johnniegarand102+23506@gmail.com</a>
<a href=""mailto:johnniegarand102+9010@gmail.com"">johnniegarand102+9010@gmail.com</a>
<a href=""mailto:johnniegarand102+654@gmail.com"">johnniegarand102+654@gmail.com</a>
<a href=""mailto:johnniegarand102+399@gmail.com"">johnniegarand102+399@gmail.com</a>
<a href=""mailto:johnniegarand102+16281@gmail.com"">johnniegarand102+16281@gmail.com</a>
<a href=""mailto:johnniegarand102+5239@gmail.com"">johnniegarand102+5239@gmail.com</a>
<a href=""mailto:johnniegarand102+3397@gmail.com"">johnniegarand102+3397@gmail.com</a>
<a href=""mailto:johnniegarand102+7719@gmail.com"">johnniegarand102+7719@gmail.com</a>
<a href=""mailto:johnniegarand102+7505@gmail.com"">johnniegarand102+7505@gmail.com</a>
<a href=""mailto:johnniegarand102+7726@gmail.com"">johnniegarand102+7726@gmail.com</a>
<a href=""mailto:johnniegarand102+8531@gmail.com"">johnniegarand102+8531@gmail.com</a>
<a href=""mailto:johnniegarand102+23391@gmail.com"">johnniegarand102+23391@gmail.com</a>
<a href=""mailto:johnniegarand102+15761@gmail.com"">johnniegarand102+15761@gmail.com</a>
<a href=""mailto:johnniegarand102+28066@gmail.com"">johnniegarand102+28066@gmail.com</a>
<a href=""mailto:johnniegarand102+16792@gmail.com"">johnniegarand102+16792@gmail.com</a>
<a href=""mailto:johnniegarand102+26558@gmail.com"">johnniegarand102+26558@gmail.com</a>
<a href=""mailto:johnniegarand102+13374@gmail.com"">johnniegarand102+13374@gmail.com</a>
<a href=""mailto:johnniegarand102+20796@gmail.com"">johnniegarand102+20796@gmail.com</a>
<a href=""mailto:johnniegarand102+15104@gmail.com"">johnniegarand102+15104@gmail.com</a>
<a href=""mailto:johnniegarand102+18314@gmail.com"">johnniegarand102+18314@gmail.com</a>
<a href=""mailto:johnniegarand102+10847@gmail.com"">johnniegarand102+10847@gmail.com</a>
<a href=""mailto:johnniegarand102+31789@gmail.com"">johnniegarand102+31789@gmail.com</a>
<a href=""mailto:johnniegarand102+13878@gmail.com"">johnniegarand102+13878@gmail.com</a>
<a href=""mailto:johnniegarand102+30947@gmail.com"">johnniegarand102+30947@gmail.com</a>
<a href=""mailto:johnniegarand102+18211@gmail.com"">johnniegarand102+18211@gmail.com</a>
<a href=""mailto:johnniegarand102+18140@gmail.com"">johnniegarand102+18140@gmail.com</a>
<a href=""mailto:johnniegarand102+23989@gmail.com"">johnniegarand102+23989@gmail.com</a>
<a href=""mailto:johnniegarand102+1551@gmail.com"">johnniegarand102+1551@gmail.com</a>
<a href=""mailto:johnniegarand102+20731@gmail.com"">johnniegarand102+20731@gmail.com</a>
<a href=""mailto:johnniegarand102+4424@gmail.com"">johnniegarand102+4424@gmail.com</a>
<a href=""mailto:interkul@hanmail.net"">interkul@hanmail.net</a>
<a href=""mailto:iinntteerrkkulltt@hanmail.net"">iinntteerrkkulltt@hanmail.net</a>
<a href=""mailto:mail13@daum.net"">mail13@daum.net</a>
<a href=""mailto:jeffwilkinson@googlemail.com"">jeffwilkinson@googlemail.com</a>
<a href=""mailto:jeffwilkinson+3028@googlemail.com"">jeffwilkinson+3028@googlemail.com</a>
<a href=""mailto:jeffwilkinson+7462@googlemail.com"">jeffwilkinson+7462@googlemail.com</a>
<a href=""mailto:jeffwilkinson+12973@googlemail.com"">jeffwilkinson+12973@googlemail.com</a>
<a href=""mailto:jeffwilkinson+32085@googlemail.com"">jeffwilkinson+32085@googlemail.com</a>
<a href=""mailto:jeffwilkinson+18894@googlemail.com"">jeffwilkinson+18894@googlemail.com</a>
<a href=""mailto:jeffwilkinson+24354@googlemail.com"">jeffwilkinson+24354@googlemail.com</a>
<a href=""mailto:jeffwilkinson+31925@googlemail.com"">jeffwilkinson+31925@googlemail.com</a>
<a href=""mailto:jeffwilkinson+16405@googlemail.com"">jeffwilkinson+16405@googlemail.com</a>
<a href=""mailto:jeffwilkinson+31861@googlemail.com"">jeffwilkinson+31861@googlemail.com</a>
<a href=""mailto:jeffwilkinson+22358@googlemail.com"">jeffwilkinson+22358@googlemail.com</a>
<a href=""mailto:jeffwilkinson+5127@googlemail.com"">jeffwilkinson+5127@googlemail.com</a>
<a href=""mailto:jeffwilkinson+6881@googlemail.com"">jeffwilkinson+6881@googlemail.com</a>
<a href=""mailto:jeffwilkinson+28419@googlemail.com"">jeffwilkinson+28419@googlemail.com</a>
<a href=""mailto:jeffwilkinson+29274@googlemail.com"">jeffwilkinson+29274@googlemail.com</a>
<a href=""mailto:jeffwilkinson+32369@googlemail.com"">jeffwilkinson+32369@googlemail.com</a>
<a href=""mailto:jeffwilkinson+7399@googlemail.com"">jeffwilkinson+7399@googlemail.com</a>
<a href=""mailto:jeffwilkinson+24889@googlemail.com"">jeffwilkinson+24889@googlemail.com</a>
<a href=""mailto:jeffwilkinson+22201@googlemail.com"">jeffwilkinson+22201@googlemail.com</a>
<a href=""mailto:jeffwilkinson+15886@googlemail.com"">jeffwilkinson+15886@googlemail.com</a>
<a href=""mailto:jeffwilkinson+11774@googlemail.com"">jeffwilkinson+11774@googlemail.com</a>
<a href=""mailto:jeffwilkinson+8351@googlemail.com"">jeffwilkinson+8351@googlemail.com</a>
<a href=""mailto:jeffwilkinson+4321@googlemail.com"">jeffwilkinson+4321@googlemail.com</a>
<a href=""mailto:jeffwilkinson+9708@googlemail.com"">jeffwilkinson+9708@googlemail.com</a>
<a href=""mailto:jeffwilkinson+9478@googlemail.com"">jeffwilkinson+9478@googlemail.com</a>
<a href=""mailto:jeffwilkinson+12040@googlemail.com"">jeffwilkinson+12040@googlemail.com</a>
<a href=""mailto:jeffwilkinson+26752@googlemail.com"">jeffwilkinson+26752@googlemail.com</a>
<a href=""mailto:jeffwilkinson+27495@googlemail.com"">jeffwilkinson+27495@googlemail.com</a>
<a href=""mailto:jeffwilkinson+26713@googlemail.com"">jeffwilkinson+26713@googlemail.com</a>
<a href=""mailto:jeffwilkinson+27399@googlemail.com"">jeffwilkinson+27399@googlemail.com</a>
<a href=""mailto:jeffwilkinson+15312@googlemail.com"">jeffwilkinson+15312@googlemail.com</a>
<a href=""mailto:jeffwilkinson+19056@googlemail.com"">jeffwilkinson+19056@googlemail.com</a>
<a href=""mailto:jeffwilkinson+22259@googlemail.com"">jeffwilkinson+22259@googlemail.com</a>
<a href=""mailto:jeffwilkinson+11911@googlemail.com"">jeffwilkinson+11911@googlemail.com</a>
<a href=""mailto:jeffwilkinson+9709@googlemail.com"">jeffwilkinson+9709@googlemail.com</a>
<a href=""mailto:jeffwilkinson+22878@googlemail.com"">jeffwilkinson+22878@googlemail.com</a>
<a href=""mailto:jeffwilkinson+7359@googlemail.com"">jeffwilkinson+7359@googlemail.com</a>
<a href=""mailto:jeffwilkinson+4789@googlemail.com"">jeffwilkinson+4789@googlemail.com</a>
<a href=""mailto:jeffwilkinson+9012@googlemail.com"">jeffwilkinson+9012@googlemail.com</a>
<a href=""mailto:jeffwilkinson+4581@googlemail.com"">jeffwilkinson+4581@googlemail.com</a>
<a href=""mailto:jeffwilkinson+12679@googlemail.com"">jeffwilkinson+12679@googlemail.com</a>
<a href=""mailto:jeffwilkinson+32157@googlemail.com"">jeffwilkinson+32157@googlemail.com</a>
<a href=""mailto:jeffwilkinson+17603@googlemail.com"">jeffwilkinson+17603@googlemail.com</a>
<a href=""mailto:jeffwilkinson+15551@googlemail.com"">jeffwilkinson+15551@googlemail.com</a>
<a href=""mailto:jeffwilkinson+83@googlemail.com"">jeffwilkinson+83@googlemail.com</a>
<a href=""mailto:jeffwilkinson+26829@googlemail.com"">jeffwilkinson+26829@googlemail.com</a>
<a href=""mailto:jeffwilkinson+7062@googlemail.com"">jeffwilkinson+7062@googlemail.com</a>
<a href=""mailto:jeffwilkinson+17674@googlemail.com"">jeffwilkinson+17674@googlemail.com</a>
<a href=""mailto:jeffwilkinson+20749@googlemail.com"">jeffwilkinson+20749@googlemail.com</a>
<a href=""mailto:jeffwilkinson+32110@googlemail.com"">jeffwilkinson+32110@googlemail.com</a>
<a href=""mailto:jeffwilkinson+29424@googlemail.com"">jeffwilkinson+29424@googlemail.com</a>
<a href=""mailto:jeffwilkinson+22706@googlemail.com"">jeffwilkinson+22706@googlemail.com</a>
<a href=""mailto:jeffwilkinson+31067@googlemail.com"">jeffwilkinson+31067@googlemail.com</a>
<a href=""mailto:jeffwilkinson+5101@googlemail.com"">jeffwilkinson+5101@googlemail.com</a>
<a href=""mailto:jeffwilkinson+32523@googlemail.com"">jeffwilkinson+32523@googlemail.com</a>
<a href=""mailto:jeffwilkinson+25734@googlemail.com"">jeffwilkinson+25734@googlemail.com</a>
<a href=""mailto:jeffwilkinson+9641@googlemail.com"">jeffwilkinson+9641@googlemail.com</a>
<a href=""mailto:jeffwilkinson+10815@googlemail.com"">jeffwilkinson+10815@googlemail.com</a>
<a href=""mailto:jeffwilkinson+26470@googlemail.com"">jeffwilkinson+26470@googlemail.com</a>
<a href=""mailto:jeffwilkinson+32633@googlemail.com"">jeffwilkinson+32633@googlemail.com</a>
<a href=""mailto:jeffwilkinson+18971@googlemail.com"">jeffwilkinson+18971@googlemail.com</a>
<a href=""mailto:jeffwilkinson+4094@googlemail.com"">jeffwilkinson+4094@googlemail.com</a>
<a href=""mailto:jeffwilkinson+11008@googlemail.com"">jeffwilkinson+11008@googlemail.com</a>
<a href=""mailto:jeffwilkinson+4994@googlemail.com"">jeffwilkinson+4994@googlemail.com</a>
<a href=""mailto:jeffwilkinson+22885@googlemail.com"">jeffwilkinson+22885@googlemail.com</a>
<a href=""mailto:jeffwilkinson+5721@googlemail.com"">jeffwilkinson+5721@googlemail.com</a>
<a href=""mailto:jeffwilkinson+734@googlemail.com"">jeffwilkinson+734@googlemail.com</a>
<a href=""mailto:jeffwilkinson+23922@googlemail.com"">jeffwilkinson+23922@googlemail.com</a>
<a href=""mailto:jeffwilkinson+30121@googlemail.com"">jeffwilkinson+30121@googlemail.com</a>
<a href=""mailto:jeffwilkinson+8708@googlemail.com"">jeffwilkinson+8708@googlemail.com</a>
<a href=""mailto:jeffwilkinson+31774@googlemail.com"">jeffwilkinson+31774@googlemail.com</a>
<a href=""mailto:jeffwilkinson+18082@googlemail.com"">jeffwilkinson+18082@googlemail.com</a>
<a href=""mailto:jeffwilkinson+23051@googlemail.com"">jeffwilkinson+23051@googlemail.com</a>
<a href=""mailto:jeffwilkinson+2391@googlemail.com"">jeffwilkinson+2391@googlemail.com</a>
<a href=""mailto:jeffwilkinson+30779@googlemail.com"">jeffwilkinson+30779@googlemail.com</a>
<a href=""mailto:jeffwilkinson+4893@googlemail.com"">jeffwilkinson+4893@googlemail.com</a>
<a href=""mailto:jeffwilkinson+32141@googlemail.com"">jeffwilkinson+32141@googlemail.com</a>
<a href=""mailto:jeffwilkinson+19176@googlemail.com"">jeffwilkinson+19176@googlemail.com</a>
<a href=""mailto:jeffwilkinson+23547@googlemail.com"">jeffwilkinson+23547@googlemail.com</a>
<a href=""mailto:jeffwilkinson+29393@googlemail.com"">jeffwilkinson+29393@googlemail.com</a>
<a href=""mailto:jeffwilkinson+29629@googlemail.com"">jeffwilkinson+29629@googlemail.com</a>
<a href=""mailto:jeffwilkinson+19117@googlemail.com"">jeffwilkinson+19117@googlemail.com</a>
<a href=""mailto:jeffwilkinson+23072@googlemail.com"">jeffwilkinson+23072@googlemail.com</a>
<a href=""mailto:jeffwilkinson+10938@googlemail.com"">jeffwilkinson+10938@googlemail.com</a>
<a href=""mailto:jeffwilkinson+19328@googlemail.com"">jeffwilkinson+19328@googlemail.com</a>
<a href=""mailto:jeffwilkinson+860@googlemail.com"">jeffwilkinson+860@googlemail.com</a>
<a href=""mailto:jeffwilkinson+7855@googlemail.com"">jeffwilkinson+7855@googlemail.com</a>
<a href=""mailto:jeffwilkinson+28067@googlemail.com"">jeffwilkinson+28067@googlemail.com</a>
<a href=""mailto:jeffwilkinson+13567@googlemail.com"">jeffwilkinson+13567@googlemail.com</a>
<a href=""mailto:jeffwilkinson+20535@googlemail.com"">jeffwilkinson+20535@googlemail.com</a>
<a href=""mailto:jeffwilkinson+9569@googlemail.com"">jeffwilkinson+9569@googlemail.com</a>
<a href=""mailto:jeffwilkinson+25417@googlemail.com"">jeffwilkinson+25417@googlemail.com</a>
<a href=""mailto:jeffwilkinson+25893@googlemail.com"">jeffwilkinson+25893@googlemail.com</a>
<a href=""mailto:jeffwilkinson+26200@googlemail.com"">jeffwilkinson+26200@googlemail.com</a>
<a href=""mailto:jeffwilkinson+11599@googlemail.com"">jeffwilkinson+11599@googlemail.com</a>
<a href=""mailto:jeffwilkinson+23458@googlemail.com"">jeffwilkinson+23458@googlemail.com</a>
<a href=""mailto:jeffwilkinson+12921@googlemail.com"">jeffwilkinson+12921@googlemail.com</a>
<a href=""mailto:jeffwilkinson+5395@googlemail.com"">jeffwilkinson+5395@googlemail.com</a>
<a href=""mailto:jeffwilkinson+25544@googlemail.com"">jeffwilkinson+25544@googlemail.com</a>
<a href=""mailto:jeffwilkinson+3058@googlemail.com"">jeffwilkinson+3058@googlemail.com</a>
<a href=""mailto:jeffwilkinson+22938@googlemail.com"">jeffwilkinson+22938@googlemail.com</a>
<a href=""mailto:ll0046344@gmail.com"">ll0046344@gmail.com</a>
<a href=""mailto:ll0046344+28853@gmail.com"">ll0046344+28853@gmail.com</a>
<a href=""mailto:ll0046344+32336@gmail.com"">ll0046344+32336@gmail.com</a>
<a href=""mailto:ll0046344+29438@gmail.com"">ll0046344+29438@gmail.com</a>
<a href=""mailto:ll0046344+23212@gmail.com"">ll0046344+23212@gmail.com</a>
<a href=""mailto:ll0046344+22046@gmail.com"">ll0046344+22046@gmail.com</a>
<a href=""mailto:ll0046344+11113@gmail.com"">ll0046344+11113@gmail.com</a>
<a href=""mailto:ll0046344+27322@gmail.com"">ll0046344+27322@gmail.com</a>
<a href=""mailto:ll0046344+20998@gmail.com"">ll0046344+20998@gmail.com</a>
<a href=""mailto:ll0046344+10028@gmail.com"">ll0046344+10028@gmail.com</a>
<a href=""mailto:ll0046344+12931@gmail.com"">ll0046344+12931@gmail.com</a>
<a href=""mailto:ll0046344+8417@gmail.com"">ll0046344+8417@gmail.com</a>
<a href=""mailto:ll0046344+12862@gmail.com"">ll0046344+12862@gmail.com</a>
<a href=""mailto:ll0046344+2961@gmail.com"">ll0046344+2961@gmail.com</a>
<a href=""mailto:ll0046344+2342@gmail.com"">ll0046344+2342@gmail.com</a>
<a href=""mailto:ll0046344+9532@gmail.com"">ll0046344+9532@gmail.com</a>
<a href=""mailto:ll0046344+303@gmail.com"">ll0046344+303@gmail.com</a>
<a href=""mailto:ll0046344+20417@gmail.com"">ll0046344+20417@gmail.com</a>
<a href=""mailto:ll0046344+10790@gmail.com"">ll0046344+10790@gmail.com</a>
<a href=""mailto:ll0046344+29581@gmail.com"">ll0046344+29581@gmail.com</a>
<a href=""mailto:ll0046344+10016@gmail.com"">ll0046344+10016@gmail.com</a>
<a href=""mailto:ll0046344+6033@gmail.com"">ll0046344+6033@gmail.com</a>
<a href=""mailto:ll0046344+6377@gmail.com"">ll0046344+6377@gmail.com</a>
<a href=""mailto:ll0046344+2753@gmail.com"">ll0046344+2753@gmail.com</a>
<a href=""mailto:ll0046344+27229@gmail.com"">ll0046344+27229@gmail.com</a>
<a href=""mailto:ll0046344+19896@gmail.com"">ll0046344+19896@gmail.com</a>
<a href=""mailto:ll0046344+20609@gmail.com"">ll0046344+20609@gmail.com</a>
<a href=""mailto:ll0046344+26992@gmail.com"">ll0046344+26992@gmail.com</a>
<a href=""mailto:ll0046344+2039@gmail.com"">ll0046344+2039@gmail.com</a>
<a href=""mailto:ll0046344+4886@gmail.com"">ll0046344+4886@gmail.com</a>
<a href=""mailto:ll0046344+28957@gmail.com"">ll0046344+28957@gmail.com</a>
<a href=""mailto:ll0046344+12982@gmail.com"">ll0046344+12982@gmail.com</a>
<a href=""mailto:ll0046344+4320@gmail.com"">ll0046344+4320@gmail.com</a>
<a href=""mailto:ll0046344+25549@gmail.com"">ll0046344+25549@gmail.com</a>
<a href=""mailto:ll0046344+30480@gmail.com"">ll0046344+30480@gmail.com</a>
<a href=""mailto:ll0046344+18632@gmail.com"">ll0046344+18632@gmail.com</a>
<a href=""mailto:ll0046344+1401@gmail.com"">ll0046344+1401@gmail.com</a>
<a href=""mailto:ll0046344+942@gmail.com"">ll0046344+942@gmail.com</a>
<a href=""mailto:ll0046344+6580@gmail.com"">ll0046344+6580@gmail.com</a>
<a href=""mailto:ll0046344+27232@gmail.com"">ll0046344+27232@gmail.com</a>
<a href=""mailto:ll0046344+16266@gmail.com"">ll0046344+16266@gmail.com</a>
<a href=""mailto:ll0046344+1920@gmail.com"">ll0046344+1920@gmail.com</a>
<a href=""mailto:ll0046344+10218@gmail.com"">ll0046344+10218@gmail.com</a>
<a href=""mailto:ll0046344+6679@gmail.com"">ll0046344+6679@gmail.com</a>
<a href=""mailto:ll0046344+18203@gmail.com"">ll0046344+18203@gmail.com</a>
<a href=""mailto:ll0046344+7578@gmail.com"">ll0046344+7578@gmail.com</a>
<a href=""mailto:ll0046344+32551@gmail.com"">ll0046344+32551@gmail.com</a>
<a href=""mailto:ll0046344+18263@gmail.com"">ll0046344+18263@gmail.com</a>
<a href=""mailto:ll0046344+2306@gmail.com"">ll0046344+2306@gmail.com</a>
<a href=""mailto:ll0046344+8775@gmail.com"">ll0046344+8775@gmail.com</a>
<a href=""mailto:ll0046344+22805@gmail.com"">ll0046344+22805@gmail.com</a>
<a href=""mailto:ll0046344+7261@gmail.com"">ll0046344+7261@gmail.com</a>
<a href=""mailto:ll0046344+32704@gmail.com"">ll0046344+32704@gmail.com</a>
<a href=""mailto:ll0046344+11313@gmail.com"">ll0046344+11313@gmail.com</a>
<a href=""mailto:ll0046344+10338@gmail.com"">ll0046344+10338@gmail.com</a>
<a href=""mailto:ll0046344+27928@gmail.com"">ll0046344+27928@gmail.com</a>
<a href=""mailto:ll0046344+23343@gmail.com"">ll0046344+23343@gmail.com</a>
<a href=""mailto:ll0046344+10057@gmail.com"">ll0046344+10057@gmail.com</a>
<a href=""mailto:ll0046344+25973@gmail.com"">ll0046344+25973@gmail.com</a>
<a href=""mailto:ll0046344+13377@gmail.com"">ll0046344+13377@gmail.com</a>
<a href=""mailto:ll0046344+27730@gmail.com"">ll0046344+27730@gmail.com</a>
<a href=""mailto:ll0046344+4306@gmail.com"">ll0046344+4306@gmail.com</a>
<a href=""mailto:ll0046344+24316@gmail.com"">ll0046344+24316@gmail.com</a>
<a href=""mailto:ll0046344+3082@gmail.com"">ll0046344+3082@gmail.com</a>
<a href=""mailto:ll0046344+27097@gmail.com"">ll0046344+27097@gmail.com</a>
<a href=""mailto:ll0046344+8329@gmail.com"">ll0046344+8329@gmail.com</a>
<a href=""mailto:ll0046344+6900@gmail.com"">ll0046344+6900@gmail.com</a>
<a href=""mailto:ll0046344+16758@gmail.com"">ll0046344+16758@gmail.com</a>
<a href=""mailto:ll0046344+20808@gmail.com"">ll0046344+20808@gmail.com</a>
<a href=""mailto:ll0046344+23258@gmail.com"">ll0046344+23258@gmail.com</a>
<a href=""mailto:ll0046344+6591@gmail.com"">ll0046344+6591@gmail.com</a>
<a href=""mailto:ll0046344+20511@gmail.com"">ll0046344+20511@gmail.com</a>
<a href=""mailto:ll0046344+19552@gmail.com"">ll0046344+19552@gmail.com</a>
<a href=""mailto:ll0046344+28220@gmail.com"">ll0046344+28220@gmail.com</a>
<a href=""mailto:ll0046344+989@gmail.com"">ll0046344+989@gmail.com</a>
<a href=""mailto:ll0046344+13403@gmail.com"">ll0046344+13403@gmail.com</a>
<a href=""mailto:ll0046344+5644@gmail.com"">ll0046344+5644@gmail.com</a>
<a href=""mailto:ll0046344+27824@gmail.com"">ll0046344+27824@gmail.com</a>
<a href=""mailto:ll0046344+9624@gmail.com"">ll0046344+9624@gmail.com</a>
<a href=""mailto:ll0046344+26650@gmail.com"">ll0046344+26650@gmail.com</a>
<a href=""mailto:ll0046344+890@gmail.com"">ll0046344+890@gmail.com</a>
<a href=""mailto:ll0046344+5496@gmail.com"">ll0046344+5496@gmail.com</a>
<a href=""mailto:ll0046344+2953@gmail.com"">ll0046344+2953@gmail.com</a>
<a href=""mailto:ll0046344+249@gmail.com"">ll0046344+249@gmail.com</a>
<a href=""mailto:ll0046344+23966@gmail.com"">ll0046344+23966@gmail.com</a>
<a href=""mailto:ll0046344+6950@gmail.com"">ll0046344+6950@gmail.com</a>
<a href=""mailto:ll0046344+16741@gmail.com"">ll0046344+16741@gmail.com</a>
<a href=""mailto:ll0046344+23459@gmail.com"">ll0046344+23459@gmail.com</a>
<a href=""mailto:ll0046344+17565@gmail.com"">ll0046344+17565@gmail.com</a>
<a href=""mailto:ll0046344+15533@gmail.com"">ll0046344+15533@gmail.com</a>
<a href=""mailto:ll0046344+26161@gmail.com"">ll0046344+26161@gmail.com</a>
<a href=""mailto:ll0046344+25484@gmail.com"">ll0046344+25484@gmail.com</a>
<a href=""mailto:ll0046344+378@gmail.com"">ll0046344+378@gmail.com</a>
<a href=""mailto:ll0046344+25661@gmail.com"">ll0046344+25661@gmail.com</a>
<a href=""mailto:ll0046344+23009@gmail.com"">ll0046344+23009@gmail.com</a>
<a href=""mailto:ll0046344+5778@gmail.com"">ll0046344+5778@gmail.com</a>
<a href=""mailto:ll0046344+12656@gmail.com"">ll0046344+12656@gmail.com</a>
<a href=""mailto:ll0046344+6719@gmail.com"">ll0046344+6719@gmail.com</a>
<a href=""mailto:ll0046344+1572@gmail.com"">ll0046344+1572@gmail.com</a>
<a href=""mailto:ll0046344+4902@gmail.com"">ll0046344+4902@gmail.com</a>
<a href=""mailto:ll0046344+13498@gmail.com"">ll0046344+13498@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson@googlemail.com"">keystoneb.jeffwilkinson@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+9878@googlemail.com"">keystoneb.jeffwilkinson+9878@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+30981@googlemail.com"">keystoneb.jeffwilkinson+30981@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+5214@googlemail.com"">keystoneb.jeffwilkinson+5214@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+29719@googlemail.com"">keystoneb.jeffwilkinson+29719@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+15547@googlemail.com"">keystoneb.jeffwilkinson+15547@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+12051@googlemail.com"">keystoneb.jeffwilkinson+12051@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+11491@googlemail.com"">keystoneb.jeffwilkinson+11491@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+6375@googlemail.com"">keystoneb.jeffwilkinson+6375@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+2041@googlemail.com"">keystoneb.jeffwilkinson+2041@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+17947@googlemail.com"">keystoneb.jeffwilkinson+17947@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+578@googlemail.com"">keystoneb.jeffwilkinson+578@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+21678@googlemail.com"">keystoneb.jeffwilkinson+21678@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+29404@googlemail.com"">keystoneb.jeffwilkinson+29404@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+17188@googlemail.com"">keystoneb.jeffwilkinson+17188@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+7750@googlemail.com"">keystoneb.jeffwilkinson+7750@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+29506@googlemail.com"">keystoneb.jeffwilkinson+29506@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+5826@googlemail.com"">keystoneb.jeffwilkinson+5826@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+19224@googlemail.com"">keystoneb.jeffwilkinson+19224@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+9112@googlemail.com"">keystoneb.jeffwilkinson+9112@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+32447@googlemail.com"">keystoneb.jeffwilkinson+32447@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+1369@googlemail.com"">keystoneb.jeffwilkinson+1369@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+29131@googlemail.com"">keystoneb.jeffwilkinson+29131@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+23430@googlemail.com"">keystoneb.jeffwilkinson+23430@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+26400@googlemail.com"">keystoneb.jeffwilkinson+26400@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+2505@googlemail.com"">keystoneb.jeffwilkinson+2505@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+14566@googlemail.com"">keystoneb.jeffwilkinson+14566@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+23669@googlemail.com"">keystoneb.jeffwilkinson+23669@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+21170@googlemail.com"">keystoneb.jeffwilkinson+21170@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+29603@googlemail.com"">keystoneb.jeffwilkinson+29603@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+12458@googlemail.com"">keystoneb.jeffwilkinson+12458@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+28576@googlemail.com"">keystoneb.jeffwilkinson+28576@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+20609@googlemail.com"">keystoneb.jeffwilkinson+20609@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+8443@googlemail.com"">keystoneb.jeffwilkinson+8443@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+8270@googlemail.com"">keystoneb.jeffwilkinson+8270@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+15460@googlemail.com"">keystoneb.jeffwilkinson+15460@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+4095@googlemail.com"">keystoneb.jeffwilkinson+4095@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+11222@googlemail.com"">keystoneb.jeffwilkinson+11222@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+20417@googlemail.com"">keystoneb.jeffwilkinson+20417@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+6166@googlemail.com"">keystoneb.jeffwilkinson+6166@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+32176@googlemail.com"">keystoneb.jeffwilkinson+32176@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+13194@googlemail.com"">keystoneb.jeffwilkinson+13194@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+8549@googlemail.com"">keystoneb.jeffwilkinson+8549@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+23152@googlemail.com"">keystoneb.jeffwilkinson+23152@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+25365@googlemail.com"">keystoneb.jeffwilkinson+25365@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+17505@googlemail.com"">keystoneb.jeffwilkinson+17505@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+30031@googlemail.com"">keystoneb.jeffwilkinson+30031@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+6803@googlemail.com"">keystoneb.jeffwilkinson+6803@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+12596@googlemail.com"">keystoneb.jeffwilkinson+12596@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+12806@googlemail.com"">keystoneb.jeffwilkinson+12806@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+10408@googlemail.com"">keystoneb.jeffwilkinson+10408@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+8315@googlemail.com"">keystoneb.jeffwilkinson+8315@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+31942@googlemail.com"">keystoneb.jeffwilkinson+31942@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+24371@googlemail.com"">keystoneb.jeffwilkinson+24371@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+20005@googlemail.com"">keystoneb.jeffwilkinson+20005@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+11671@googlemail.com"">keystoneb.jeffwilkinson+11671@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+6334@googlemail.com"">keystoneb.jeffwilkinson+6334@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+6535@googlemail.com"">keystoneb.jeffwilkinson+6535@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+3238@googlemail.com"">keystoneb.jeffwilkinson+3238@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+22829@googlemail.com"">keystoneb.jeffwilkinson+22829@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+21133@googlemail.com"">keystoneb.jeffwilkinson+21133@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+27149@googlemail.com"">keystoneb.jeffwilkinson+27149@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+30934@googlemail.com"">keystoneb.jeffwilkinson+30934@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+7866@googlemail.com"">keystoneb.jeffwilkinson+7866@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+27857@googlemail.com"">keystoneb.jeffwilkinson+27857@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+32585@googlemail.com"">keystoneb.jeffwilkinson+32585@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+27199@googlemail.com"">keystoneb.jeffwilkinson+27199@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+7026@googlemail.com"">keystoneb.jeffwilkinson+7026@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+30442@googlemail.com"">keystoneb.jeffwilkinson+30442@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+2941@googlemail.com"">keystoneb.jeffwilkinson+2941@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+2866@googlemail.com"">keystoneb.jeffwilkinson+2866@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+13453@googlemail.com"">keystoneb.jeffwilkinson+13453@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+16980@googlemail.com"">keystoneb.jeffwilkinson+16980@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+27516@googlemail.com"">keystoneb.jeffwilkinson+27516@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+8710@googlemail.com"">keystoneb.jeffwilkinson+8710@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+29391@googlemail.com"">keystoneb.jeffwilkinson+29391@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+21074@googlemail.com"">keystoneb.jeffwilkinson+21074@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+20955@googlemail.com"">keystoneb.jeffwilkinson+20955@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+22721@googlemail.com"">keystoneb.jeffwilkinson+22721@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+21697@googlemail.com"">keystoneb.jeffwilkinson+21697@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+30296@googlemail.com"">keystoneb.jeffwilkinson+30296@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+25394@googlemail.com"">keystoneb.jeffwilkinson+25394@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+19489@googlemail.com"">keystoneb.jeffwilkinson+19489@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+15363@googlemail.com"">keystoneb.jeffwilkinson+15363@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+28411@googlemail.com"">keystoneb.jeffwilkinson+28411@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+28396@googlemail.com"">keystoneb.jeffwilkinson+28396@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+21170@googlemail.com"">keystoneb.jeffwilkinson+21170@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+17251@googlemail.com"">keystoneb.jeffwilkinson+17251@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+10864@googlemail.com"">keystoneb.jeffwilkinson+10864@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+17675@googlemail.com"">keystoneb.jeffwilkinson+17675@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+21359@googlemail.com"">keystoneb.jeffwilkinson+21359@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+8815@googlemail.com"">keystoneb.jeffwilkinson+8815@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+32640@googlemail.com"">keystoneb.jeffwilkinson+32640@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+22905@googlemail.com"">keystoneb.jeffwilkinson+22905@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+21197@googlemail.com"">keystoneb.jeffwilkinson+21197@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+4980@googlemail.com"">keystoneb.jeffwilkinson+4980@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+27061@googlemail.com"">keystoneb.jeffwilkinson+27061@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+11988@googlemail.com"">keystoneb.jeffwilkinson+11988@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+12986@googlemail.com"">keystoneb.jeffwilkinson+12986@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+31321@googlemail.com"">keystoneb.jeffwilkinson+31321@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+28670@googlemail.com"">keystoneb.jeffwilkinson+28670@googlemail.com</a>
<a href=""mailto:agentvictorokle@googlemail.com"">agentvictorokle@googlemail.com</a>
<a href=""mailto:agentvictorokle+30608@googlemail.com"">agentvictorokle+30608@googlemail.com</a>
<a href=""mailto:agentvictorokle+9061@googlemail.com"">agentvictorokle+9061@googlemail.com</a>
<a href=""mailto:agentvictorokle+2574@googlemail.com"">agentvictorokle+2574@googlemail.com</a>
<a href=""mailto:agentvictorokle+10083@googlemail.com"">agentvictorokle+10083@googlemail.com</a>
<a href=""mailto:agentvictorokle+3745@googlemail.com"">agentvictorokle+3745@googlemail.com</a>
<a href=""mailto:agentvictorokle+23295@googlemail.com"">agentvictorokle+23295@googlemail.com</a>
<a href=""mailto:agentvictorokle+10493@googlemail.com"">agentvictorokle+10493@googlemail.com</a>
<a href=""mailto:agentvictorokle+12684@googlemail.com"">agentvictorokle+12684@googlemail.com</a>
<a href=""mailto:agentvictorokle+26340@googlemail.com"">agentvictorokle+26340@googlemail.com</a>
<a href=""mailto:agentvictorokle+2425@googlemail.com"">agentvictorokle+2425@googlemail.com</a>
<a href=""mailto:agentvictorokle+20489@googlemail.com"">agentvictorokle+20489@googlemail.com</a>
<a href=""mailto:agentvictorokle+8607@googlemail.com"">agentvictorokle+8607@googlemail.com</a>
<a href=""mailto:agentvictorokle+26038@googlemail.com"">agentvictorokle+26038@googlemail.com</a>
<a href=""mailto:agentvictorokle+32065@googlemail.com"">agentvictorokle+32065@googlemail.com</a>
<a href=""mailto:agentvictorokle+18328@googlemail.com"">agentvictorokle+18328@googlemail.com</a>
<a href=""mailto:agentvictorokle+22673@googlemail.com"">agentvictorokle+22673@googlemail.com</a>
<a href=""mailto:agentvictorokle+28958@googlemail.com"">agentvictorokle+28958@googlemail.com</a>
<a href=""mailto:agentvictorokle+8702@googlemail.com"">agentvictorokle+8702@googlemail.com</a>
<a href=""mailto:agentvictorokle+10934@googlemail.com"">agentvictorokle+10934@googlemail.com</a>
<a href=""mailto:agentvictorokle+27483@googlemail.com"">agentvictorokle+27483@googlemail.com</a>
<a href=""mailto:agentvictorokle+23169@googlemail.com"">agentvictorokle+23169@googlemail.com</a>
<a href=""mailto:agentvictorokle+14484@googlemail.com"">agentvictorokle+14484@googlemail.com</a>
<a href=""mailto:agentvictorokle+18081@googlemail.com"">agentvictorokle+18081@googlemail.com</a>
<a href=""mailto:agentvictorokle+9531@googlemail.com"">agentvictorokle+9531@googlemail.com</a>
<a href=""mailto:agentvictorokle+30786@googlemail.com"">agentvictorokle+30786@googlemail.com</a>
<a href=""mailto:agentvictorokle+28577@googlemail.com"">agentvictorokle+28577@googlemail.com</a>
<a href=""mailto:agentvictorokle+8896@googlemail.com"">agentvictorokle+8896@googlemail.com</a>
<a href=""mailto:agentvictorokle+7289@googlemail.com"">agentvictorokle+7289@googlemail.com</a>
<a href=""mailto:agentvictorokle+7822@googlemail.com"">agentvictorokle+7822@googlemail.com</a>
<a href=""mailto:agentvictorokle+27190@googlemail.com"">agentvictorokle+27190@googlemail.com</a>
<a href=""mailto:agentvictorokle+18628@googlemail.com"">agentvictorokle+18628@googlemail.com</a>
<a href=""mailto:agentvictorokle+11545@googlemail.com"">agentvictorokle+11545@googlemail.com</a>
<a href=""mailto:agentvictorokle+28554@googlemail.com"">agentvictorokle+28554@googlemail.com</a>
<a href=""mailto:agentvictorokle+13552@googlemail.com"">agentvictorokle+13552@googlemail.com</a>
<a href=""mailto:agentvictorokle+13948@googlemail.com"">agentvictorokle+13948@googlemail.com</a>
<a href=""mailto:agentvictorokle+3649@googlemail.com"">agentvictorokle+3649@googlemail.com</a>
<a href=""mailto:agentvictorokle+8794@googlemail.com"">agentvictorokle+8794@googlemail.com</a>
<a href=""mailto:agentvictorokle+25003@googlemail.com"">agentvictorokle+25003@googlemail.com</a>
<a href=""mailto:agentvictorokle+18341@googlemail.com"">agentvictorokle+18341@googlemail.com</a>
<a href=""mailto:agentvictorokle+15247@googlemail.com"">agentvictorokle+15247@googlemail.com</a>
<a href=""mailto:agentvictorokle+30279@googlemail.com"">agentvictorokle+30279@googlemail.com</a>
<a href=""mailto:agentvictorokle+14076@googlemail.com"">agentvictorokle+14076@googlemail.com</a>
<a href=""mailto:agentvictorokle+26367@googlemail.com"">agentvictorokle+26367@googlemail.com</a>
<a href=""mailto:agentvictorokle+8199@googlemail.com"">agentvictorokle+8199@googlemail.com</a>
<a href=""mailto:agentvictorokle+21944@googlemail.com"">agentvictorokle+21944@googlemail.com</a>
<a href=""mailto:agentvictorokle+16797@googlemail.com"">agentvictorokle+16797@googlemail.com</a>
<a href=""mailto:agentvictorokle+25768@googlemail.com"">agentvictorokle+25768@googlemail.com</a>
<a href=""mailto:agentvictorokle+32323@googlemail.com"">agentvictorokle+32323@googlemail.com</a>
<a href=""mailto:agentvictorokle+4558@googlemail.com"">agentvictorokle+4558@googlemail.com</a>
<a href=""mailto:agentvictorokle+24735@googlemail.com"">agentvictorokle+24735@googlemail.com</a>
<a href=""mailto:agentvictorokle+1572@googlemail.com"">agentvictorokle+1572@googlemail.com</a>
<a href=""mailto:agentvictorokle+22863@googlemail.com"">agentvictorokle+22863@googlemail.com</a>
<a href=""mailto:agentvictorokle+12337@googlemail.com"">agentvictorokle+12337@googlemail.com</a>
<a href=""mailto:agentvictorokle+24449@googlemail.com"">agentvictorokle+24449@googlemail.com</a>
<a href=""mailto:agentvictorokle+3995@googlemail.com"">agentvictorokle+3995@googlemail.com</a>
<a href=""mailto:agentvictorokle+19901@googlemail.com"">agentvictorokle+19901@googlemail.com</a>
<a href=""mailto:agentvictorokle+12301@googlemail.com"">agentvictorokle+12301@googlemail.com</a>
<a href=""mailto:agentvictorokle+20413@googlemail.com"">agentvictorokle+20413@googlemail.com</a>
<a href=""mailto:agentvictorokle+22064@googlemail.com"">agentvictorokle+22064@googlemail.com</a>
<a href=""mailto:agentvictorokle+28910@googlemail.com"">agentvictorokle+28910@googlemail.com</a>
<a href=""mailto:agentvictorokle+20562@googlemail.com"">agentvictorokle+20562@googlemail.com</a>
<a href=""mailto:agentvictorokle+31549@googlemail.com"">agentvictorokle+31549@googlemail.com</a>
<a href=""mailto:agentvictorokle+21807@googlemail.com"">agentvictorokle+21807@googlemail.com</a>
<a href=""mailto:agentvictorokle+28485@googlemail.com"">agentvictorokle+28485@googlemail.com</a>
<a href=""mailto:agentvictorokle+11149@googlemail.com"">agentvictorokle+11149@googlemail.com</a>
<a href=""mailto:agentvictorokle+17321@googlemail.com"">agentvictorokle+17321@googlemail.com</a>
<a href=""mailto:agentvictorokle+15340@googlemail.com"">agentvictorokle+15340@googlemail.com</a>
<a href=""mailto:agentvictorokle+29800@googlemail.com"">agentvictorokle+29800@googlemail.com</a>
<a href=""mailto:agentvictorokle+9758@googlemail.com"">agentvictorokle+9758@googlemail.com</a>
<a href=""mailto:agentvictorokle+7325@googlemail.com"">agentvictorokle+7325@googlemail.com</a>
<a href=""mailto:agentvictorokle+2181@googlemail.com"">agentvictorokle+2181@googlemail.com</a>
<a href=""mailto:agentvictorokle+9045@googlemail.com"">agentvictorokle+9045@googlemail.com</a>
<a href=""mailto:agentvictorokle+14585@googlemail.com"">agentvictorokle+14585@googlemail.com</a>
<a href=""mailto:agentvictorokle+3163@googlemail.com"">agentvictorokle+3163@googlemail.com</a>
<a href=""mailto:agentvictorokle+25410@googlemail.com"">agentvictorokle+25410@googlemail.com</a>
<a href=""mailto:agentvictorokle+13902@googlemail.com"">agentvictorokle+13902@googlemail.com</a>
<a href=""mailto:agentvictorokle+7978@googlemail.com"">agentvictorokle+7978@googlemail.com</a>
<a href=""mailto:agentvictorokle+6966@googlemail.com"">agentvictorokle+6966@googlemail.com</a>
<a href=""mailto:agentvictorokle+22487@googlemail.com"">agentvictorokle+22487@googlemail.com</a>
<a href=""mailto:agentvictorokle+5399@googlemail.com"">agentvictorokle+5399@googlemail.com</a>
<a href=""mailto:agentvictorokle+20380@googlemail.com"">agentvictorokle+20380@googlemail.com</a>
<a href=""mailto:agentvictorokle+30620@googlemail.com"">agentvictorokle+30620@googlemail.com</a>
<a href=""mailto:agentvictorokle+7968@googlemail.com"">agentvictorokle+7968@googlemail.com</a>
<a href=""mailto:agentvictorokle+25636@googlemail.com"">agentvictorokle+25636@googlemail.com</a>
<a href=""mailto:agentvictorokle+1807@googlemail.com"">agentvictorokle+1807@googlemail.com</a>
<a href=""mailto:agentvictorokle+30450@googlemail.com"">agentvictorokle+30450@googlemail.com</a>
<a href=""mailto:agentvictorokle+16862@googlemail.com"">agentvictorokle+16862@googlemail.com</a>
<a href=""mailto:agentvictorokle+3892@googlemail.com"">agentvictorokle+3892@googlemail.com</a>
<a href=""mailto:agentvictorokle+17693@googlemail.com"">agentvictorokle+17693@googlemail.com</a>
<a href=""mailto:agentvictorokle+1953@googlemail.com"">agentvictorokle+1953@googlemail.com</a>
<a href=""mailto:agentvictorokle+25078@googlemail.com"">agentvictorokle+25078@googlemail.com</a>
<a href=""mailto:agentvictorokle+22822@googlemail.com"">agentvictorokle+22822@googlemail.com</a>
<a href=""mailto:agentvictorokle+21620@googlemail.com"">agentvictorokle+21620@googlemail.com</a>
<a href=""mailto:agentvictorokle+19067@googlemail.com"">agentvictorokle+19067@googlemail.com</a>
<a href=""mailto:agentvictorokle+12311@googlemail.com"">agentvictorokle+12311@googlemail.com</a>
<a href=""mailto:agentvictorokle+30012@googlemail.com"">agentvictorokle+30012@googlemail.com</a>
<a href=""mailto:agentvictorokle+17302@googlemail.com"">agentvictorokle+17302@googlemail.com</a>
<a href=""mailto:agentvictorokle+12498@googlemail.com"">agentvictorokle+12498@googlemail.com</a>
<a href=""mailto:agentvictorokle+23639@googlemail.com"">agentvictorokle+23639@googlemail.com</a>
<a href=""mailto:agentvictorokle+12219@googlemail.com"">agentvictorokle+12219@googlemail.com</a>
"
Vhh1w62r,Untitled,Caesar9988,MySQL,Saturday 27th of May 2023 12:13:37 PM CDT,"CREATE TABLE `passports` (
    `id` INT AUTO_INCREMENT PRIMARY KEY,
    `passport_number` VARCHAR(50) UNIQUE
)  AUTO_INCREMENT=101; # set the initial value
 
INSERT INTO `passports` (`passport_number`)
VALUES ('N34FG21B'),
       ('K65LO4R7'),
       ('ZE657QP2');
 
CREATE TABLE `people` (
    `person_id` INT AUTO_INCREMENT PRIMARY KEY,
    `first_name` VARCHAR(50),
    `salary` DECIMAL(7 , 2 ),
    `passport_id` INT UNIQUE,
    CONSTRAINT `fk_people_passports` FOREIGN KEY (`passport_id`)
        REFERENCES `passports` (`id`)
);
 
INSERT INTO `people` (`first_name`, `salary`, `passport_id`)
VALUES ('Roberto',  43300.00, 102),
       ('Tom',  56100.00, 103),
       ('Yana',  60200.00, 101);
 
-- get name and passport number
SELECT `first_name`, `passport_number` 
FROM `people` 
JOIN `passports` ON `people`.`passport_id` = `passports`.`id`;
 
#2
CREATE TABLE `manufacturers` (
`id` INT AUTO_INCREMENT PRIMARY KEY,
`name` VARCHAR(50),
`established_on` DATE
);
 
INSERT INTO `manufacturers` (`name`, `established_on`)
VALUES ('BMW', '1916-03-01'),
       ('Tesla', '2003-01-01'),
       ('Lada', '1966-05-01');
 
CREATE TABLE `models` (
`id` INT AUTO_INCREMENT PRIMARY KEY,
`name` VARCHAR(50),
`manufacturer_id` INT NOT NULL,
CONSTRAINT `fk_models_manufacturers`
FOREIGN KEY (`manufacturer_id`) REFERENCES `manufacturers`(`id`)
) AUTO_INCREMENT=101;
 
INSERT INTO `models` (`name`, `manufacturer_id`)
VALUES ('X1', 1),
       ('i6', 1),
       ('Model S', 2),
       ('Model X', 2),
       ('Model 3', 2),
       ('Nova', 3);
 
#3
CREATE TABLE `students` (
    `id` INT AUTO_INCREMENT PRIMARY KEY,
    `name` VARCHAR(50)
);
 
INSERT INTO `students` (`name`)
VALUES ('Mila'), ('Toni'), ('Ron');
 
CREATE TABLE `exams` (
    `id` INT AUTO_INCREMENT PRIMARY KEY,
    `name` VARCHAR(50)
)  AUTO_INCREMENT=101;
 
INSERT INTO `exams` (`name`)
VALUES ('Spring MVC'), ('Neo4j'), ('Oracle 11g');
 
CREATE TABLE `students_exams` (
    `student_id` INT,
    `exam_id` INT,
    CONSTRAINT `pk_students_exams` PRIMARY KEY (`student_id` , `exam_id`), # composite PK -> unique pairs of combinations
    CONSTRAINT `fk__students_exams__students` FOREIGN KEY (`student_id`)
        REFERENCES `students` (`id`),
    CONSTRAINT `fk__students_exams__exams` FOREIGN KEY (`exam_id`)
        REFERENCES `exams` (`id`)
);
 
INSERT INTO `students_exams` (`student_id`, `exam_id`)
VALUES (1, 101),
       (1, 102),
       (2, 101),
       (3, 103),
       (2, 102),
       (2, 103);
 
#4
CREATE TABLE `teachers` (
`id` INT AUTO_INCREMENT PRIMARY KEY,
`name` VARCHAR(50),
`manager_id` INT
) AUTO_INCREMENT=101;
       
INSERT INTO `teachers` (`name`, `manager_id`) 
VALUES ('John', NULL),        
       ('Maya', 106),
       ('Silvia', 106),
       ('Ted', 105),
       ('Mark', 101),
       ('Greta', 101); 
       
ALTER TABLE `teachers`
ADD CONSTRAINT `fk__manager_id__id`
FOREIGN KEY (`manager_id`) REFERENCES `teachers`(`id`);
 
#5
CREATE DATABASE `online_store`;
 
# cities - customers: One to many relationship type
# customers - orders: One to many relationship type
# orders - items: Many to many relationship type
# item_types - items: One to many relationship type
 
CREATE TABLE `cities` (
    `id` INT AUTO_INCREMENT PRIMARY KEY,
    `name` VARCHAR(50)
);
 
CREATE TABLE `customers` (
    `id` INT AUTO_INCREMENT PRIMARY KEY,
    `name` VARCHAR(50),
    `birthday` DATE,
    `city_id` INT,
    CONSTRAINT `fk_customers_cities` FOREIGN KEY (`city_id`)
        REFERENCES `cities` (`id`)
);
 
CREATE TABLE `orders` (
    `id` INT AUTO_INCREMENT PRIMARY KEY,
    `customer_id` INT,
    CONSTRAINT `fk_orders_customers` FOREIGN KEY (`customer_id`)
        REFERENCES `customers` (`id`)
);
 
CREATE TABLE `item_types` (
    `id` INT AUTO_INCREMENT PRIMARY KEY,
    `name` VARCHAR(50)
);
 
CREATE TABLE `items` (
    `id` INT AUTO_INCREMENT PRIMARY KEY,
    `name` VARCHAR(50),
    `item_type_id` INT,
    CONSTRAINT `fk__items__item_types` FOREIGN KEY (`item_type_id`)
        REFERENCES `item_types` (`id`)
);
 
CREATE TABLE `orders_items` (
    `order_id` INT,
    `item_id` INT,
    CONSTRAINT `pk_orders_items` PRIMARY KEY (`order_id` , `item_id`),
    CONSTRAINT `fk__order_id__orders` FOREIGN KEY (`order_id`)
        REFERENCES `orders` (`id`),
    CONSTRAINT `fk__item_id__items` FOREIGN KEY (`item_id`)
        REFERENCES `items` (`id`)
);
#6
# majors - students: One to many 
# students - payments: One to many 
# students - subjects: Many to many -> agenda - mapping table
 
CREATE DATABASE `university`;
 
CREATE TABLE `majors` (
    `id` INT PRIMARY KEY AUTO_INCREMENT,
    `name` VARCHAR(50)
);
 
CREATE TABLE `students` (
    `id` INT PRIMARY KEY AUTO_INCREMENT,
    `number` VARCHAR(12),
    `name` VARCHAR(50),
    `major_id` INT,
    CONSTRAINT `fk_students_majors` FOREIGN KEY (`major_id`)
        REFERENCES `majors` (`id`)
);
 
CREATE TABLE `payments` (
    `id` INT PRIMARY KEY AUTO_INCREMENT,
    `date` DATE,
    `amount` DECIMAL(8 , 2 ),
    `student_id` INT,
    CONSTRAINT `fk_payments_students` FOREIGN KEY (`student_id`)
        REFERENCES `students` (`id`)
);
 
CREATE TABLE `subjects` (
`id` INT PRIMARY KEY AUTO_INCREMENT,
`name` VARCHAR(50)
);
 
CREATE TABLE `agenda` (
`student_id` INT,
`subject_id` INT,
CONSTRAINT `pk_students_subjects`
PRIMARY KEY (`student_id`, `subject_id`),
CONSTRAINT `fk_agenda_students`
FOREIGN KEY (`student_id`) REFERENCES `students`(`id`),
CONSTRAINT `fk_agenda_subjects`
FOREIGN KEY (`subject_id`) REFERENCES `subjects`(`id`)
);
 
SELECT 
    `mountain_range`,
    `peak_name`,
    `elevation` AS 'peak_elevation'
FROM
    `mountains` AS m
JOIN `peaks` AS p ON m.`id` = p.`mountain_id`
WHERE `mountain_range` = 'Rila'
ORDER BY `peak_elevation` DESC;"
mDUBWr67,Untitled,Derga,C++,Saturday 27th of May 2023 11:23:20 AM CDT,"#include <iostream>
#include <fstream>
#include <ctime>
#include <forward_list>
#include <string>

using namespace std;

void GenerateFile(const string& pattern, const string& file_name) {
    string text;
    int WORDS_COUNT = 5;
    srand(time(0));
    for (int i = 0; i < WORDS_COUNT; ++i) {
        int word_size = 1 + rand() % 10;
        string word;
        for (int j = 0; j < word_size; ++j) {
            word += (char)('a' + rand() % 25);
        }

        int pattern_chance = rand() % 11;
        if (pattern_chance == 0) {
            text += pattern;
            text += ' ';
        }

        if (i == 1 || i == 3) {
            text += pattern;
            text += ' ';
        }

        text += word;
        text += ' ';
    }

    ofstream fout(file_name, std::ios::binary);
    fout << text;
    fout.close();

}

void Print(const forward_list<char>& l) {
    auto it = l.begin();
    while (it !=l.end()) {
        cout << *it++;
    }
}

int main() {
    string pattern, file_name;
    cin >> pattern >> file_name;
    GenerateFile(pattern, file_name);
return 0;
}"
AYuBfP0w,多线路精选,FreedTV,JSON,Saturday 27th of May 2023 11:21:42 AM CDT,"{
    ""urls"": [
        {
            ""url"": ""https://ghproxy.com/https://raw.githubusercontent.com/gaotianliuyun/fongmi/main/json/config.json"",
            ""name"": ""🚀蜂蜜线路""
        },   
        {
            ""url"": ""http://饭太硬.ga/tv"",
            ""name"": ""🚀饭太硬线路""
        },                      
        {
            ""url"": ""http://我不是.肥猫.love:63/接口禁止贩卖"",
            ""name"": ""🚀肥猫线路""
        },
                
        {
            ""url"": ""http://tvbo.run.goorm.site/tangs.json"",
            ""name"": ""🚀唐三线路""
        },      
                     {
            ""url"": ""https://ghproxy.com/raw.githubusercontent.com/gaotianliuyun/gao/master/0828.json"",
            ""name"": ""🚀唐三2线路""
        },      
                                                            
        {
            ""url"": ""http://dxawi.github.io/0/0.json"",
            ""name"": ""🚀dxawi0线路""
        },
        {
            ""url"": ""https://ghproxy.com/https://raw.githubusercontent.com/52670576/tvbox/main/ysc.json"",
            ""name"": ""🚀运输车线路""
        }
    ]
}"
GX2xTGwA,FindTopView,cepxuozab,C++,Saturday 27th of May 2023 11:15:39 AM CDT,"std::string JoinStrings(const std::vector<std::string>& strings) {
    std::string out;
    for (const auto& str : strings) {
        out += str;
        out += "" "";
    }
    out.erase(out.size() - 1);
    return out;
}

std::string MakeDocumentString(const std::vector<std::string>& words, int size, int seed,
                               bool with_minus) {
    std::vector<std::string> v_words;
    std::sample(words.begin(), words.end(), std::back_inserter(v_words), size, std::mt19937(seed));
    if (with_minus) {
        for (auto& word : v_words) {
            word = ""-"" + word;
        }
    }
    return JoinStrings(v_words);
}

std::vector<int> MakeRandomVector(int seed) {
const int max_ratings_length = 10;
const int max_rating_value = 100;
    std::mt19937 gen(seed);
    std::uniform_int_distribution<int> len(1, max_ratings_length);
    std::uniform_int_distribution<int> val(-max_rating_value, max_rating_value);
    std::vector<int> out(len(gen));
    for (auto& elem : out) {
        elem = val(gen);
    }
    return out;
}
void TestTopDocuments() {
    const int stop_words_size = 30;
    const int query_size = 40;
    const int document_size = 50;
    const int num_minus_words = 5;

    std::vector<std::string> words;
    std::string alphanum = ""0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz"";
    std::mt19937 gen(12345);
    std::uniform_int_distribution<int> len(1, alphanum.size() / 2);
    for (int j = 0; j < 100; ++j) {
        std::string word;
        std::sample(alphanum.begin(), alphanum.end(), std::back_inserter(word), len(gen),
                    std::mt19937((j)));
        words.push_back(word);
    }

    std::string stop = MakeDocumentString(words, stop_words_size, 0, false);

    std::string query = MakeDocumentString(words, query_size, 42, false);

    std::string minus_words = MakeDocumentString(words, num_minus_words, 100, true);

    SearchServer search_server(stop);

    for (int i = 0; i < 10; ++i) {
        search_server.AddDocument(i, MakeDocumentString(words, document_size, i + 1, false),
                                  DocumentStatus::ACTUAL, MakeRandomVector(i + 1));
    }

    const SearchServer const_search_server = search_server;
    const auto documents = const_search_server.FindTopDocuments(query, DocumentStatus::ACTUAL);

    for (const Document& document : documents) {
        std::cout << ""{ ""
                  << ""document_id = "" << document.id << "", ""
                  << ""relevance = "" << document.relevance << "", ""
                  << ""rating = "" << document.rating << "" }"" << std::endl;
    }
}
"
CyJMRiU5,calc Tkinter,teslariu,Python,Saturday 27th of May 2023 11:05:11 AM CDT,"#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
""""""
como hacer un portable
1) instalar una libreria externa desde cmd
python -m pip install pyinstaller

2) navegan hasta la carpeta donde tienen el script y ejecutan DESDE CMD
pyinstaller --onefile --noconsole <nombre del script>
""""""



import tkinter as tk
from math import sqrt, factorial, pi

def limpiar_pantalla():
    global calculo_consola
    calculo_consola = """"
    calculo.set(""0"")


def clic(tecla):
    global calculo_consola
    calculo_consola = calculo_consola + tecla
    calculo.set(calculo_consola)
    

def hacer_cuenta():
    global calculo_consola
    try:
        resultado = str(eval(calculo_consola))
    except Exception:
        limpiar_pantalla()
        resultado = ""ERROR""
    calculo.set(resultado)
    

def borrar_caracter():
    global calculo_consola
    calculo_consola = calculo_consola[:-1]
    calculo.set(calculo_consola)
    

# creo la variable para MOSTRAR la cuenta EN LA CONSOLA
calculo_consola = """"




# ventana de la calculadora
calc = tk.Tk()
calc.config(width=390, height=600, bg=""Light Steel Blue"")
calc.title(""Calculadora ACME"")
calc.resizable(False,False)

# creo la variable para MOSTRAR la cuenta EN LA PANTALLA
calculo = tk.StringVar()


# llamo a la función de limpieza para inicializar la calculadora
limpiar_pantalla()

# creo la pantalla
pantalla = tk.Entry(
    font = ('arial',20,'bold'),
    width = 20,
    bd = 18,  # grosor del relieve del borde
    justify = ""right"",
    state = tk.DISABLED,  # impido escribir adentro de la caja de texto
    textvariable = calculo
)
pantalla.place(x=20, y=50)

# creo las dimensiones de las teclas
ancho = 9
alto = 2

boton = tk.Button(text=""DEL"", width=ancho, height=alto, bg=""medium aquamarine"", command=borrar_caracter)
boton.place(x=287, y=140)


## Teclas
# primera fila: 1 2 3 +
boton = tk.Button(text=""1"", width=ancho, height=alto, command=lambda:clic(""1""))
boton.place(x=17, y=200)
boton = tk.Button(text=""2"", width=ancho, height=alto, command=lambda:clic(""2""))
boton.place(x=107, y=200)
boton = tk.Button(text=""3"", width=ancho, height=alto, command=lambda:clic(""3""))
boton.place(x=197, y=200)
boton = tk.Button(text=""+"", width=ancho, height=alto, bg=""Steel Blue"", command=lambda:clic(""+""))
boton.place(x=287, y=200)

# segunda fila: 4 5 6 -
boton = tk.Button(text=""4"", width=ancho, height=alto, command=lambda:clic(""4""))
boton.place(x=17, y=260)
boton = tk.Button(text=""5"", width=ancho, height=alto, command=lambda:clic(""5""))
boton.place(x=107, y=260)
boton = tk.Button(text=""6"", width=ancho, height=alto, command=lambda:clic(""6""))
boton.place(x=197, y=260)
boton = tk.Button(text=""-"", width=ancho, height=alto, bg=""Steel Blue"", command=lambda:clic(""-""))
boton.place(x=287, y=260)

# tercera fila: 7 8 9 x
boton = tk.Button(text=""7"", width=ancho, height=alto, command=lambda:clic(""7""))
boton.place(x=17, y=320)
boton = tk.Button(text=""8"", width=ancho, height=alto, command=lambda:clic(""8""))
boton.place(x=107, y=320)
boton = tk.Button(text=""9"", width=ancho, height=alto, command=lambda:clic(""9""))
boton.place(x=197, y=320)
boton = tk.Button(text=""x"", width=ancho, height=alto, bg=""Steel Blue"", command=lambda:clic(""*""))
boton.place(x=287, y=320)

# cuarta fila: ( 0 ) /
boton = tk.Button(text=""("", width=ancho, height=alto, bg=""Sky Blue"", command=lambda:clic(""(""))
boton.place(x=17, y=380)
boton = tk.Button(text=""0"", width=ancho, height=alto, command=lambda:clic(""0""))
boton.place(x=107, y=380)
boton = tk.Button(text="")"", width=ancho, height=alto, bg=""Sky Blue"", command=lambda:clic("")""))
boton.place(x=197, y=380)
boton = tk.Button(text=""/"", width=ancho, height=alto, bg=""Steel Blue"", command=lambda:clic(""/""))
boton.place(x=287, y=380)

# quinta fila: raiz coma decimal  potencia resto
boton = tk.Button(text=""\u221A"", width=ancho, height=alto, bg=""sky blue"", command=lambda:clic(""sqrt(""))
boton.place(x=17, y=440)
boton = tk.Button(text=""."", width=ancho, height=alto, bg=""sky blue"", command=lambda:clic("".""))
boton.place(x=107, y=440)
boton = tk.Button(text=""POW"", width=ancho, height=alto, bg=""Sky Blue"", command=lambda:clic(""**""))
boton.place(x=197, y=440)
boton = tk.Button(text=""%"", width=ancho, height=alto, bg=""SteelBlue2"", command=lambda:clic(""/""))
boton.place(x=287, y=440)

# sexta fila: clear factorial Pi =
boton = tk.Button(text=""CL"", width=ancho, height=alto, bg=""medium aquamarine"", command=limpiar_pantalla)
boton.place(x=17, y=500)
boton = tk.Button(text=""!"", width=ancho, height=alto, bg=""sky blue"", command=lambda:clic(""factorial(""))
boton.place(x=107, y=500)
boton = tk.Button(text=""\u03c0"", width=ancho, height=alto, bg=""Sky Blue"", command=lambda:clic(str(pi)))
boton.place(x=197, y=500)
boton = tk.Button(text=""="", width=ancho, height=alto, bg=""medium aquamarine"", command=hacer_cuenta)
boton.place(x=287, y=500)





calc.mainloop()
"
cuGmpBG6,Untitled,WarPie90,Delphi,Saturday 27th of May 2023 10:51:46 AM CDT,"var
  tpa,room,other,approx: TPointArray;
  ATPA: T2DPointArray;
  m: TMufasaBitmap;
begin
  srl.FindColors(tpa, CTS2(1776416, 2, 0.2, 0.2), [52,117,553,450]);
  tpa := tpa.Grow(10);
  tpa := tpa.Invert();
  approx := tpa.Erode(40).Grow(40);

  room := tpa.PointsInRangeOf(approx, 0, 20);
  other := ClearTPAFromTPA(TPA, room);
  ATPA := other.Cluster(2) + room;

  m.Init();
  m.FromClient();
  m.DrawATPA(ATPA);

  m.Debug();
end."
ky9W10e7,FP PPM - Preprocessor,Firhan_UB,Python,Saturday 27th of May 2023 10:32:40 AM CDT,"import numpy as np
import pandas as pd
from sklearn.preprocessing import OneHotEncoder

def impute(df):
    num_columns = df.select_dtypes(include=['floating']).columns
    cat_columns = df.select_dtypes(include=['integer', 'object']).columns
    classCol = df.columns[-1]
    for col in cat_columns:
        df[col] = df[col].fillna(df[col].mode()[0])
    for col in num_columns:
        df[col] = df[col].fillna(df[col].median())
    return df

def zscore(df):
  list_fitur = df.select_dtypes(include=['integer', 'object','float64','int64']).columns[:-1]
  for fitur in list_fitur:
    df[fitur] = (df[fitur] - df[fitur].mean())/(df[fitur].std())
  return df

def TrainOneHotEncoding(df) :
   return OneHotEncoder.fit_transform(df)

def TestOneHotEncoding(df) :
   return OneHotEncoder.transform(df)

import pandas as pd
import numpy as np

def oh_encode(df):
    # Map chirrosis stages to 1 and 0
    df['Stage'] = np.where(df['Stage'] == 4,1,0)
    
    # Dropping ID and rows with more than 5 NaN values
    df = df.drop('ID',axis =1) 
    df.dropna(thresh=5, axis=1, inplace=True)
    
    # One Hot Encoding
    cat_column = ['Ascites','Hepatomegaly','Spiders', 'Sex', 'Drug', 'Edema', 'Status']
    df_oh_encoded = pd.get_dummies(df, columns = cat_column)
    
    
    # Convert boolean OHE columns to float
    for columns in df_oh_encoded:
        if df_oh_encoded[columns].dtype == 'bool':
            
            df_oh_encoded[columns] = df_oh_encoded[columns].astype(int)
    
    # Moving Stage to last column
    ohe_columns = df_oh_encoded.columns.tolist()
    index = df_oh_encoded.columns.get_loc('Stage')
    new_index = ohe_columns[0:index] + ohe_columns[index+1:] + ohe_columns[index:index+1]
    df_oh_encoded = df_oh_encoded[new_index]
    
    # Cast non-categorical int64 column to float64
    df_oh_encoded[['N_Days', 'Age']] = df_oh_encoded[['N_Days', 'Age']].astype('float64')
    
    # df_oh_encoded[ohe_columns] = df_oh_encoded[ohe_columns].astype('Int64')
    
    
    return df_oh_encoded"
r4B8yQhH,FP PPM - Model SVM,Firhan_UB,Python,Saturday 27th of May 2023 10:32:01 AM CDT,"import numpy as np
from sklearn.utils import shuffle


class SVM:
    def __init__(self, learning_rate=0.000001, max_epoch=1000, regularization=10000):
        self.learning_rate = learning_rate
        self.max_epoch = max_epoch
        self.regularization = regularization
        self.W = None
        
    def hitung_cost_gradient(self, W, X, Y):
        jarak = 1 - (Y * np.dot(X, W))
        dw = np.zeros(len(W))
        if max(0, jarak) == 0:
            di = W
        else:
            di = W - (self.regularization * Y * X)
        dw += di
        return dw

    def sgd(self, data_latih, label_latih):
        data_latih = data_latih.to_numpy()
        self.W = np.zeros(data_latih.shape[1])
        for epoch in range(1, self.max_epoch):
            X, Y = shuffle(data_latih, label_latih, random_state=101)
            for index, x in enumerate(X):
                delta = self.hitung_cost_gradient(self.W, x, Y[index])
                self.W = self.W - (self.learning_rate * delta)

    def predict(self, data_uji):
        prediksi = np.array([])
        for i in range(data_uji.shape[0]):
            y_prediksi = np.sign(np.dot(self.W, data_uji.to_numpy()[i]))
            y_prediksi = 1 if y_prediksi > 0 else 0
            prediksi = np.append(prediksi, y_prediksi)
        return prediksi

    def fit(self, data_latih, label_latih):
        label_latih = np.where(label_latih == 0, -1, 1)
        self.sgd(data_latih, label_latih)
"
0bERj7dz,FP PPM - Model Naive Bayes,Firhan_UB,Python,Saturday 27th of May 2023 10:31:36 AM CDT,"from collections import Counter
import math
import numpy as np

class NB:
  
  def __init__(self):
    pass
  
  def hitung_prior(self, list_kelas):
    n_data = len(list_kelas)
    prior = Counter(list_kelas)
    for key in prior.keys():
      prior[key] = prior[key]/n_data
    return prior

  def hitung_rata2_std_kelas(self, input_data, num):
    list_columns = input_data[num].columns
    class_column_name = input_data.columns[-1]
    list_class = set(input_data[class_column_name])
    rata2 = {}
    std = {}
    for column in list_columns:
      for a_class in list_class :
        rata2 [(a_class, column)] = input_data.loc[input_data[class_column_name]==a_class][column].mean()
        std[(a_class,column)] = input_data.loc[input_data[class_column_name]==a_class][column].std()
    return (rata2, std)

  def hitung_likelihood_gaussian(self, data, rata2, std):
    hasil = (1/math.sqrt(2*math.pi*(std**2)))*math.exp((-1*((data-rata2)**2))/(2*(std**2))) 
    return hasil

  def hitung_likelihood_general(self, data_latih, cat, num):
    list_columns = data_latih.columns[:-1]
    class_column_name = data_latih.columns[-1]
    list_class = set(data_latih[class_column_name])  
    rata2, std = self.hitung_rata2_std_kelas(data_latih, num)
    likelihood = {}
    for column in list_columns:
      value = set(data_latih[column])
      for a_class in list_class :
        if column in cat:
          for valtype in value:
            countw = data_latih[column].values == valtype
            countc = data_latih[class_column_name].values == a_class
            countw_c = (countw & countc).sum()
            count_c = countc.sum()
            likelihood[(column, valtype, a_class)] = countw_c / count_c
        elif column in num:
          for i in range (data_latih.shape[0]):
            likelihood[(column, np.NaN, a_class)] = self.hitung_likelihood_gaussian(data_latih[column].iloc[i],rata2[(a_class,column)],std[(a_class,column)])
    return likelihood

  def training(self, data_latih):
    num_columns = data_latih.select_dtypes(include=['floating']).columns
    cat_columns = data_latih.select_dtypes(include=['integer', 'object']).columns[:-1]
    class_column_name = data_latih.columns[-1]
    prior = self.hitung_prior(data_latih[class_column_name])
    likelihood = self.hitung_likelihood_general(data_latih, cat_columns, num_columns)
    list_class = set(data_latih[class_column_name])
    list_columns = data_latih.columns[:-1]
    model = {}
    model['prior'] = prior
    model['likelihood'] = likelihood
    model['list_class'] = list_class
    model['list_columns'] = list_columns
    return model

  def predict(self, data_latih, data_uji):
    num_columns = data_uji.select_dtypes(include=['floating']).columns
    cat_columns = data_uji.select_dtypes(include=['integer', 'object']).columns
    model = self.training(data_latih)
    prior = model['prior']
    likelihood = model['likelihood']
    list_class = model['list_class']
    list_columns = model['list_columns']
    posterior = dict.fromkeys(list_class,1)
    total_predictions = []
    for index in range(data_uji.shape[0]):
      for column in list_columns:
        if column in cat_columns:
          for a_class in list_class:
            posterior [a_class] = posterior[a_class]*likelihood[(column, data_uji[column].iloc[index], a_class)]* prior[a_class]
        elif column in num_columns:
          for a_class in list_class:
            posterior [a_class] = posterior[a_class]*likelihood[(column, np.NaN, a_class)]* prior[a_class]
      kelas_uji = max(posterior, key=posterior.get)
      total_predictions.append(kelas_uji)
    return total_predictions"
DgZX1EY4,FP PPM - Model KNN,Firhan_UB,Python,Saturday 27th of May 2023 10:31:00 AM CDT,"import numpy as np
from collections import Counter

class KNN:
    def __init__(self, k):
        self.k = k
    
    def jarakEu(self, data1, data2):
        jarak = np.square(data1-data2)
        jarak = np.sum(jarak)
        return np.sqrt(jarak)
    
    def knn(self, k, datalatih, datauji):
        jarak = np.array([self.jarakEu(datalatih.iloc[x], datauji) for x in range(datalatih.shape[0])])
        indeks_k_minimum = jarak.argsort()[:k]
        k_kelas = datalatih.iloc[indeks_k_minimum][datalatih.columns[-1]].to_numpy()
        counter = Counter(k_kelas)
        kelas_uji = counter.most_common(1)[0][0]
        return kelas_uji

    def predict(self, datalatih, datauji):
        return np.array([self.knn(self.k, datalatih, datauji.iloc[row]) for row in range(len(datauji))])
    
    def predict_W(self, datalatih, datauji):
        return np.array([self.weighted_knn(self.k, datalatih, datauji.iloc[row]) for row in range(len(datauji))])
    
    def weighted_knn(self, k, datalatih, datauji) :
        jarak = np.array([self.jarakEu(datalatih.iloc[x], datauji) for x in range(datalatih.shape[0])])
        indeks_k_minimum = jarak.argsort()[:k]
        k_kelas = datalatih.iloc[indeks_k_minimum][datalatih.columns[-1]].to_numpy()
        distance_class = []

        for i in range (len(indeks_k_minimum)) :
            distance_class.append((indeks_k_minimum[i], k_kelas[i]))

        freq1 = 0 
        freq2 = 0 
    
        for d in distance_class:
            if d[1] == 0:
                freq1 += (1 / d[0])
                
            elif d[1] == 1: 
                freq2 += (1 /d[0])
                
    
        return 0 if freq1>freq2 else 1"
ySsKNwcx,FP PPM - Confusion Matrix,Firhan_UB,Python,Saturday 27th of May 2023 10:28:50 AM CDT,"from sklearn.metrics import classification_report
from sklearn.model_selection import train_test_split

def report_nb(data_latih, data_uji,model) :
    predictions = model.predict(data_latih, data_uji)
    print(classification_report(data_uji[data_uji.columns[-1]], predictions))

def report_knn(data_latih, data_uji,model) :
    predictions = model.predict(data_latih, data_uji)
    print(classification_report(data_uji[data_uji.columns[-1]], predictions))

def report_svm(data_latih, data_uji,model) :
    model.fit(data_latih, data_latih[data_latih.columns[-1]])
    predictions = model.predict(data_uji)
    print(classification_report(data_uji[data_uji.columns[-1]], predictions))

def report_dt(data_latih, data_uji,model):
    model.fit(data_latih, data_latih.columns[-1])
    data_uji_dict = data_uji.iloc[:,:-1].to_dict(orient = ""records"")
    predictions = []
    for i in range(len(data_uji_dict)):
        predict = model.predict(data_uji_dict[i])
        predictions.append(predict)
    print(classification_report(data_uji[data_uji.columns[-1]], predictions))

def report_weighted_knn(data_latih, data_uji,model) :
    predictions = model.predict_W(data_latih, data_uji)
    print(classification_report(data_uji[data_uji.columns[-1]], predictions))"
eBFC5QtT,Vešalo,OgnjenTesic,Python,Saturday 27th of May 2023 10:25:20 AM CDT,"import random

vesalo_slike = [
    """"""
      +---+
          |
          |
          |
         ===
    """""",
    """"""
      +---+
      O   |
          |
          |
         ===
    """""",
    """"""
      +---+
      O   |
      |   |
          |
         ===
    """""",
    """"""
      +---+
      O   |
     /|   |
          |
         ===
    """""",
    """"""
      +---+
      O   |
     /|\  |
          |
         ===
    """""",
    """"""
      +---+
      O   |
     /|\  |
     /    |
         ===
    """""",
    """"""
      +---+
      O   |
     /|\  |
     / \  |
         ===
    """"""
]

def vesalo():
    reci = [""duks"", ""grisine"", ""matematika"", ""informatika"", ""elektronika"", ""fizika"", ""program"", ""neznalac"", ""kontinent"", ""trenerka""]  
    rec = random.choice(reci)
    pokusaji = 6
    pogodjena_slova = []  
 

    while pokusaji > 0:
        for slovo in rec:
            if slovo in pogodjena_slova:
                print(slovo, end="" "")
            else:
                print(""_"", end="" "")
        print(""\n"")

        pogodak = input(""Pogodi slovo!: "").lower()
        if len(pogodak) != 1:
            print(""Upisi jedno slovo, a ne vise slova."")
            continue
   
        if pogodak in pogodjena_slova:
            print(""Vec ste izabrali ovo slovo. Izaberite drugo."")
            continue
       
        pogodjena_slova.append(pogodak)

        if pogodak in rec:
            print(""Tacno slovo!"")
        elif not pogodak.isalpha():
            print(""Unesi odgovarajuci simbol."")    
        else:
            print(""Ovo slovo se ne sadrzi u reci."")
            pokusaji -= 1
            print(vesalo_slike[6 - pokusaji])  

        nalazenje_reci = all(slovo in pogodjena_slova for slovo in rec)
        if nalazenje_reci:
            print(""Cestitamo, kraj igre"")
            print(""Pogodjena rec je bila:"", rec)
            break

    if pokusaji == 0:
        print(""Nazalost, izgubuli ste. :"")
        print(""Rec je bila"", rec)
        
while True:
    vesalo()
    word = input(""Zelite li opet da igrate igru (da/ne): "").lower()
    if word == ""ne"":
        break
    print(""\n\n***NOVA IGRA***\n"")"
RVhMN4DH,BWR - Changelog 27/05/23,SSilver,Diff,Saturday 27th of May 2023 10:02:13 AM CDT,"Flamethrowers
+ Lingering flames deal a small amount of damage that shrinks as it disappears (4->0 per hit)
Done to make flames slightly more threatening to touch, without being potent enough to make spam compete with more direct flame contact.

Sharpened Volcano Fragment
+ Increased fire damage dealt against volcano marked targets to be mini-crits (was +25%)
Meant to improve the payoff for using this melee to initiate fights with your primary.

Neon Annihilator
+ Added +50% increased melee range
An added bonus to help the weapon stand out, allowing it to more easily connect with it's initial and subsequent hits.

Natascha
+ Decreased health penalty from healers to -67% (was -75%)
- Heal on hit reduced to up to +5, falling off faster with range (stopping at 1024 HU)
This weapon seemed to allow heavy to become far too tanky in fights, so a nerf to how much he could heal and decreasing the minimum health he can receive was seen as needed. To compensate for this, it was made slightly less punishing with healers.

Dalokohs Bar
- Increased recharge time to 15 seconds (was 10)
- Fixed eating bypassing max health drain from GRU
The prior version was seens as far too good for improving the user's self-sustainability. This nerf was seen as necessary, as was the fix to allow it to bypass the GRU's penalty.

Back Scatter
+ Added on-hit: reload clip by 1
+ Added 30% faster reload speed
- Added 20% slower firing speed
- Increased clip penalty to -83% (was -33%)
This change to its ammo system is meant to give it a seemingly bottomless clip if the user places their shots well, at the cost of their fire rate mildly slower in short bouts and with an increased penalty for missing.

Manmelter
+ Added 33% faster firing speed
- Increased damage penalty to -20% (was 15%)
Increasing the firing speed of this flare was seen as beneficial in helping it chain shots in order to gain crits.

Amputator
- Increased damage penalty to -25% (was -20%)
A slight increase to damage to make sure it's 2-hit threshold is less capable of taking out light classes.

Soda Popper
+ Decreased damage to refill air jump to 30 (was 40)
Decreasing the threshold to allow scouts to better take advantage of the weapon's added mobility.

Iron Bomber
+ Rollers detonate on detecting enemies/self nearby (80 HU)
+ Reverted damage penalty
- Removed roller chain reaction
- Reverted explosion radius, increased to -30% (was -15%)
- Inverted fuse time bonus to instead be +30% longer (was -30%)
The prior change seemed far too situational to seem useful for the short time bombs were active and too penalizing towards hitting directs. This version retains the reliability of direct hits while providing an alternative usage that leans into the stationary rollers by turning them into make-shift mines.

Third Degree
+ Increased max range for connected targets to 512 HU (was 256)
+ Removed firing speed penalty
- Damage is only transferred to targets ignited by you
- Damage transferred decreases past 256 HU to 50% at 512 HU
Adding an additional layer of skill to accessing the third degree's healing, while also improving its range to potentially increase the reward.

Spy-Cicle
+ Increased damage resistance to 25% (was 20%)
+ Added: heals 20 HP on melt
The resistance provided on melt was not seen as potent enough, so a slight buff and heal when done was seen as a fair way to give Spy added protection for losing his knife.

Tomislav
+ Increased spin up to 30% faster (was 20%)
As its damage was nerfed, this was improved to better differentiate it from stock."
UbFZF8c4,Untitled,lazyflavor,Java,Saturday 27th of May 2023 09:44:23 AM CDT,"import java.util.Scanner;

class Main {
    private static final int[][] directions = {{-1, 0}, {1, 0}, {0, -1}, {0, 1}};

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int T = scanner.nextInt();

        for (int t = 0; t < T; t++) {
            int M = scanner.nextInt();
            int N = scanner.nextInt();
            int K = scanner.nextInt();
            
            int[][] grid = new int[M][N];
            for (int k = 0; k < K; k++) {
                int x = scanner.nextInt();
                int y = scanner.nextInt();
                grid[x][y] = 1;
            }
            
            int count = countChunks(grid);
            System.out.println(count);
        }
        
        scanner.close();
    }

    public static int countChunks(int[][] grid) {
        int count = 0;

        for (int i = 0; i < grid.length; i++) {
            for (int j = 0; j < grid[0].length; j++) {
                if (grid[i][j] == 1) {
                    count++;
                    dfs(grid, i, j);
                }
            }
        }

        return count;
    }

    private static void dfs(int[][] grid, int i, int j) {
        if (i < 0 || j < 0 || i >= grid.length || j >= grid[0].length || grid[i][j] != 1) {
            return;
        }

        grid[i][j] = 0;

        for (int[] direction : directions) {
            dfs(grid, i + direction[0], j + direction[1]);
        }
    }
}"
vJEANuWs,tkinter ejempo de formulario,teslariu,Python,Saturday 27th of May 2023 09:27:41 AM CDT,"usr/bin/env python
# -*- coding: utf-8 -*-
#
# Necesito una biblioteca para programar gráficamente: tkinter
# tkinter es un derivado de TCL/Tk (biblioteca TK del lenguaje TCL)
# reescrito para Python

import tkinter as tk

def borrarPantalla():
    import os
    if os.name == ""posix"":
        os.system (""clear"")
    else:
        os.system (""cls"")

def guardar_datos():
    # importo una libreria para imprimir 'estructuras complicadas''
    # de listas y diccionarios
    import pprint
    
    # le doy permiso a la función para que acceda a la
    # lista 'personas'
    global personas
    
    # borro la pantalla
    borrarPantalla()
    
    # leo los datos del formulario
    nombre = caja_nombre.get()
    email = caja_email.get()
    tel = caja_tel.get()
    
    # armo el diccionario con los datos
    datos = {""nombre"": nombre, ""email"": email, ""tel"":tel}
    
    # incorporo los datos en la lista
    personas.append(datos)
    
    # limpio las cajas de texto
    caja_email.delete(0,tk.END)
    caja_tel.delete(0,tk.END)
    caja_nombre.delete(0,tk.END)
    
    # muestro los datos
    pprint.pprint(personas)
    
    # muestro un cuadro de diálogo para que el Data Entry sepa
    # que los datos se han guardado correctamente
    from tkinter import messagebox
    messagebox.showinfo(title=""Información"", message=""Datos añadidos correctamente"")
    


# Diagramo como guardar mis datos
""""""
personas = [
    {""nombre"":""Ale"", ""email"":""ale@gmail.com"", ""tel"": ""12123332""},
    {""nombre"":""Juan"", ""email"":""ajuan@gmail.com"", ""tel"": ""993332""},
    {""nombre"":""Pepe"", ""email"":""pepe@gmail.com"", ""tel"": ""12288888""},
]
""""""
personas = []



# necesito crear una ventana
ventana = tk.Tk()

# algunas propiedades de la ventana
ventana.config(width=400, height=300)
ventana.title(""Formulario"")

# evita el redimensionamiento de la ventana
ventana.resizable(False,False)

# cada campo tiene una etiqueta y una caja de texto
# campo nombre
etiqueta = tk.Label(text=""Nombre"")
etiqueta.place(x=20, y=20)
caja_nombre = tk.Entry()
caja_nombre.place(x=120,y=20, width=200, height=25)

# campo email
etiqueta = tk.Label(text=""Email"")
etiqueta.place(x=20, y=70)
caja_email = tk.Entry()
caja_email.place(x=120,y=70, width=200, height=25)

# campo telefono
etiqueta = tk.Label(text=""Teléfono"")
etiqueta.place(x=20, y=120)
caja_tel = tk.Entry()
caja_tel.place(x=120,y=120, width=200, height=25)

# botón
boton = tk.Button(text=""Guardar datos"", command=guardar_datos)
boton.place(x=150, y=180, width=120, height=50)

ventana.mainloop()"
QPHjX7Uc,coorect code\,ricky123ghfghfhg,C++,Saturday 27th of May 2023 09:25:41 AM CDT,"   #define ll long long int
    #define mod (int)(1e9+7)
    int f(int ind,string& str,int n,vector<ll>& dp)
    {
         if(ind==n) return 1;
         
         if(dp[ind]!=-1) return dp[ind];
         
         int onech=0,twoch=0;
         if(str[ind]>='1' && str[ind]<='9') 
         {
             onech=f(ind+1,str,n,dp);
         }
         string temp=str.substr(ind,2);
         if(ind<n-1 && temp>=""10"" && temp<=""26"")
         {
             twoch=f(ind+2,str,n,dp);
         }
         return dp[ind]=(onech+twoch)%mod;
    }
	int CountWays(string str){
	    int n=str.length();
	    vector<ll> dp(n,-1);
	    return f(0,str,n,dp);
	}"
xKieNcHE,Algorai paišymas C#,Whyytas,C#,Saturday 27th of May 2023 09:17:31 AM CDT,"public static void DrawGraph(List<Place> AllPoints, List<Place> Route, string fileName)
        {
            //Getting ready
            int x = 1000;
            int y = 1000;
            Bitmap bitmap = new Bitmap(x, y);
            Graphics graphics = Graphics.FromImage(bitmap);
            int size = 6;

            double X_SCALE = 0.0025;
            double Y_SCALE = 0.0025;
            for (int i = 0; i < AllPoints.Count; i++)
            {
                Place l = AllPoints[i];
                int newX = (int)Math.Round((l.X - 300000) * X_SCALE);
                int newY = (int)Math.Round((l.Y - 5980000) * Y_SCALE);
                graphics.FillEllipse(Brushes.Blue, new Rectangle(newX, newY, size, size));
            }

            for (int i = 0; i < Route.Count - 1; i++)
            {
                Place first = Route[i];
                Place second = Route[i + 1];

                int x1 = (int)Math.Round((first.X - 300000) * X_SCALE);
                int x2 = (int)Math.Round((second.X - 300000) * X_SCALE);
                int y1 = (int)Math.Round((first.Y - 5980000) * Y_SCALE);
                int y2 = (int)Math.Round((second.Y - 5980000) * Y_SCALE);

                graphics.FillEllipse(Brushes.Red, new Rectangle(x2, y2, size, size));
                graphics.DrawLine(new Pen(Brushes.Magenta), x1, y1, x2, y2);
            }
            int newwX = (int)Math.Round((Route[0].X - 300000) * X_SCALE);
            int newwY = (int)Math.Round((Route[0].Y - 5980000) * Y_SCALE);
            graphics.FillEllipse(Brushes.Green, new Rectangle(newwX, newwY, 10, 10));

            //Saving the file
            bitmap.Save(fileName);
        }"
0puAdV5R,Untitled,Caesar9988,MySQL,Saturday 27th of May 2023 09:06:16 AM CDT,"CREATE DATABASE `online_store`;

# cities - customers: One to many relationship type
# customers - orders: One to many relationship type
# orders - items: Many to many relationship type
# item_types - items: One to many relationship type

CREATE TABLE `cities` (
    `city_id` INT PRIMARY KEY AUTO_INCREMENT,
    `name` VARCHAR(50)
);

CREATE TABLE `customers` (
    `customer_id` INT PRIMARY KEY AUTO_INCREMENT,
    `name` VARCHAR(50),
    `birthday` DATE,
    `city_id` INT,
    CONSTRAINT `fk_customers_cities` FOREIGN KEY (`city_id`)
        REFERENCES `cities` (`city_id`)
);

CREATE TABLE `orders` (
    `order_id` INT PRIMARY KEY AUTO_INCREMENT,
    `customer_id` INT,
    CONSTRAINT `fk_orders_customers` FOREIGN KEY (`customer_id`)
        REFERENCES `customers` (`customer_id`)
);

CREATE TABLE `item_types` (
    `item_type_id` INT PRIMARY KEY AUTO_INCREMENT,
    `name` VARCHAR(50)
);

CREATE TABLE `items` (
    `item_id` INT PRIMARY KEY AUTO_INCREMENT,
    `name` VARCHAR(50),
    `item_type_id` INT,
    CONSTRAINT `fk__items__item_types` FOREIGN KEY (`item_type_id`)
        REFERENCES `item_types` (`item_type_id`)
);

CREATE TABLE `orders_items` (
    `order_id` INT,
    `item_id` INT,
    CONSTRAINT `pk_orders_items` PRIMARY KEY (`order_id` , `item_id`),
    CONSTRAINT `fk__order_id__orders` FOREIGN KEY (`order_id`)
        REFERENCES `orders` (`order_id`),
    CONSTRAINT `fk__item_id__items` FOREIGN KEY (`item_id`)
        REFERENCES `items` (`item_id`)
);"
3GW7ShSS,Untitled,Caesar9988,MySQL,Saturday 27th of May 2023 09:05:15 AM CDT,"CREATE TABLE `cities` (
`city_id` INT PRIMARY KEY AUTO_INCREMENT,
`name` VARCHAR(50)
);

CREATE TABLE `customers` (
`customer_id` INT PRIMARY KEY AUTO_INCREMENT,
`name` VARCHAR(50),
`birthday` DATE,
`city_id` INT,
CONSTRAINT `fk_customers_cities`
FOREIGN KEY (`city_id`) REFERENCES `cities`(`city_id`)
);

CREATE TABLE `orders` (
`order_id` INT PRIMARY KEY AUTO_INCREMENT,
`customer_id` INT,
CONSTRAINT `fk_orders_customers` 
FOREIGN KEY (`customer_id`) REFERENCES `customers`(`customer_id`)
);

CREATE TABLE `item_types` (
`item_type_id` INT PRIMARY KEY AUTO_INCREMENT,
`name` VARCHAR(50)
);

CREATE TABLE `items` (
`item_id` INT PRIMARY KEY AUTO_INCREMENT,
`name` VARCHAR(50),
`item_type_id` INT,
CONSTRAINT `fk__items__item_types`
FOREIGN KEY (`item_type_id`) REFERENCES `item_types`(`item_type_id`)
);

CREATE TABLE `orders_items` (
`order_id` INT,
`item_id` INT,
CONSTRAINT `pk_orders_items`
PRIMARY KEY(`order_id`, `item_id`),
CONSTRAINT `fk__order_id__orders`
FOREIGN KEY (`order_id`) REFERENCES `orders`(`order_id`),
CONSTRAINT `fk__item_id__items`
FOREIGN KEY (`item_id`) REFERENCES `items`(`item_id`)
);"
dKs717uh,Untitled,mgajdatsy,C++,Saturday 27th of May 2023 08:52:31 AM CDT,"char c = 'a';
while( not ((c == 'e') or (c == 't')) ){
    std::cout << ""select tile type: "" << std::endl
        << ""e: empty"" << std::endl
        << ""t: track"" << std::endl
        ;
    std::cin >> c;
}"
ZsGpJMNH,Untitled,Overwtime,YAML,Saturday 27th of May 2023 08:47:15 AM CDT,"regions:
    uuid-migration:
        perform-on-next-start: false
        keep-names-that-lack-uuids: true
    use-creature-spawn-event: true
    enable: true
    invincibility-removes-mobs: false
    nether-portal-protection: false
    fake-player-build-override: true
    explosion-flags-block-entity-damage: true
    high-frequency-flags: false
    protect-against-liquid-flow: false
    wand: 334
    max-claim-volume: 20000000
    claim-only-inside-existing-regions: false
    location-flags-only-inside-regions: false
    max-region-count-per-player:
        default: 3
        vip: 5
        premium: 5
        creative: 6
        moder: 8
        admin: 8
        gladmin: 10
        oper: 10
        cozd: 12
        osnova: 15
        vlad: 20
        blast: 25
        ultra: 25
        helper: 20
        sthelper: 25
        omoder: 25
    disable-bypass-by-default: false
    announce-bypass-status: false
    use-paper-entity-origin: false
    cancel-chat-without-recipients: true
    set-parent-on-claim: ''
    sql:
        use: false
        dsn: jdbc:mysql://localhost/worldguard
        username: worldguard
        password: worldguard
        table-prefix: ''
auto-invincible: false
auto-invincible-group: false
auto-no-drowning-group: false
use-player-move-event: true
use-player-teleports: true
security:
    deop-everyone-on-join: false
    block-in-game-op-command: true
    host-keys-allow-forge-clients: false
host-keys: {}
summary-on-start: true
op-permissions: true
build-permission-nodes:
    enable: false
    deny-message: '&eSorry, but you are not permitted to do that here.'
event-handling:
    block-entity-spawns-with-untraceable-cause: false
    interaction-whitelist: []
    emit-block-use-at-feet: []
    ignore-hopper-item-move-events: false
    break-hoppers-on-denied-move: true
protection:
    item-durability: true
    remove-infinite-stacks: true
    disable-xp-orb-drops: false
    use-max-priority-association: false
    disable-obsidian-generators: false
gameplay:
    block-potions: []
    block-potions-overly-reliably: false
    disable-conduit-effects: false
default:
    pumpkin-scuba: false
    disable-health-regain: false
physics:
    no-physics-gravel: false
    no-physics-sand: false
    vine-like-rope-ladders: false
    allow-portal-anywhere: false
    disable-water-damage-blocks: []
ignition:
    block-tnt: false
    block-tnt-block-damage: true
    block-lighter: false
fire:
    disable-lava-fire-spread: true
    disable-all-fire-spread: true
    disable-fire-spread-blocks: []
    lava-spread-blocks: []
mobs:
    block-creeper-explosions: false
    block-creeper-block-damage: true
    block-wither-explosions: true
    block-wither-block-damage: true
    block-wither-skull-explosions: true
    block-wither-skull-block-damage: true
    block-enderdragon-block-damage: false
    block-enderdragon-portal-creation: false
    block-fireball-explosions: false
    block-fireball-block-damage: true
    anti-wolf-dumbness: false
    allow-tamed-spawns: true
    disable-enderman-griefing: true
    disable-snowman-trails: true
    block-painting-destroy: false
    block-item-frame-destroy: false
    block-armor-stand-destroy: false
    block-plugin-spawning: true
    block-above-ground-slimes: false
    block-other-explosions: false
    block-zombie-door-destruction: false
    block-creature-spawn:
    - WITHER
    - WOLF
    - PHANTOM
    - ENDER_DRAGON
    - GIANT
    - WARDEN
    - GHAST
    - WANDERING_TRADER
    block-vehicle-entry: false
player-damage:
    disable-fall-damage: false
    disable-lava-damage: false
    disable-fire-damage: false
    disable-lightning-damage: false
    disable-drowning-damage: false
    disable-suffocation-damage: false
    disable-contact-damage: false
    teleport-on-suffocation: false
    disable-void-damage: false
    teleport-on-void-falling: true
    disable-explosion-damage: false
    disable-mob-damage: false
    disable-death-messages: true
    reset-fall-on-void-teleport: false
crops:
    disable-creature-trampling: true
    disable-player-trampling: true
weather:
    prevent-lightning-strike-blocks: []
    disable-lightning-strike-fire: false
    disable-thunderstorm: true
    disable-weather: true
    disable-pig-zombification: false
    disable-powered-creepers: false
    always-raining: false
    always-thundering: false
    disable-villager-witchification: false
dynamics:
    disable-mushroom-spread: false
    disable-ice-melting: false
    disable-snow-melting: false
    disable-snow-formation: false
    disable-ice-formation: false
    disable-leaf-decay: false
    disable-grass-growth: false
    disable-mycelium-spread: false
    disable-vine-growth: false
    disable-soil-dehydration: false
    snow-fall-blocks: []
    disable-crop-growth: false
    disable-coral-block-fade: false
    disable-rock-growth: false
    disable-sculk-growth: false
blacklist:
    use-as-whitelist: false
    logging:
        console:
            enable: true
        database:
            enable: false
            dsn: jdbc:mysql://localhost:3306/minecraft
            user: root
            pass: ''
            table: blacklist_events
        file:
            enable: false
            path: worldguard/logs/%Y-%m-%d.log
            open-files: 10
use-particle-effects: true
disable-permission-cache: false
turtle-egg:
    disable-creature-trampling: false
    disable-player-trampling: false
simulation:
    sponge:
        enable: false
        radius: 3
        redstone: false
chest-protection:
    enable: false
    disable-off-check: false
"
6SkdQCHA,Untitled,geminilabs,PHP,Saturday 27th of May 2023 07:56:00 AM CDT,"add_filter('site-reviews/enqueue/public/localize', function ($vars) {
	if (isset($vars['starsconfig'])) {
		$vars['starsconfig']['clearable'] = true;
	}
	return $vars;
});"
TgzgNW61,ALGORITMO DE SHOR (Version Clasica),nm9505,Python,Saturday 27th of May 2023 07:20:09 AM CDT,"#-*-coding:utf8;-*-
#qpy:console
def main():
   from datetime import datetime
   
   print(' VERSION CLASICA DEL ALGORITMO DE SHOR')
   print()

   entero = int  (input (' INGRESE ENTERO >14 '))
   if(entero <= 14):
       print(' Ingrese valor mayor que 14')
       return main()
   #Funcion numero de euler para decidir primalidad
   def NumEuler(n:int):
       cont:int=0
       for x in range(1,n):
           y:int= n  
           res:int=1
           z:int = x
           while (res!=0):    
               res = y % z
               y = z
               z = res
           if (y == 1):
               cont=cont+1
       return cont
   if (NumEuler(entero) == entero-1):
       print(' ',entero,' es número primo, elija otro entero')
       return main()
   numero:str = str(entero) 
   print("" Ingrese entero m primo relativo con "", numero)
   crash = int (input (' '))
   print(' m = ', crash)
   entrada = datetime.now()
   #Calculo del max comun divisor de dos enteros
   def MCD(h:int,s:int):
       rem:int=1
       while (rem != 0):
           rem = h % s
           h = s
           s = rem
       return h                  
   y:int = MCD(entero,crash)  
   if (y != 1):
       print(' ',crash, ' no es primo relativo con ', entero)
       return main()
   t:int=1;f:int=1;a:int= crash; b:int= t * a;
   res:int= b % entero
   while (res != 1):
       f = f + 1
       t = res
       b = t * a
       res = b % entero
   if (f % 2 ==1):
       print(' Periodo impar f = ', f)
       print(' Pruebe otro entero')
       return main()
   w:int = f/2; d:int = crash ; e:int = 1
   r:int
   i:int = 1
   while(e <= w):
       r = i * crash % entero
       i = r
       e = e + 1
   if (r+1 == entero):
       print (' r + 1 = N')
       print (' pruebe otro entero como crash')
       return main()
   u:int = r - 1
   v:int = r + 1    
   print(' El periodo f para m = ',crash,' es ', f)
   print(' El residuo correspondiente a f/2 es r = ', r)
   print(' r - 1 = ', u)
   print(' r + 1 = ', v)
   print(' MCD (',u,',',entero,') =',MCD(entero,u))
   print(' MCD (',v,',',entero,') =',MCD(entero,v))
   print(' ENTERO FACTORIZADO: ')
   print(' ',numero, '= ',MCD(entero,u),'x',MCD(entero,v))
 
   salida = datetime.now() 
   print(' Tiempo transcurrido: {}'.format(salida - entrada))
main()"
AuUPMKs6,JS_Advanced_AdvancedFunctions_LAB07Cars,vladovip,JavaScript,Saturday 27th of May 2023 06:37:43 AM CDT,"// JS Advanced_ Advanced Functions - LAB - 07. Cars

function cars (inputArray) {
    let collectionsObj = {};
    let commandsCollections = {
        create,
        set,
        print,
    }

    // 'create c1',
    // 'create c2 inherit c1',
    function create (name, inherits, parentName){
    collectionsObj[name] = inherits ? Object.create(collectionsObj[parentName]) : collectionsObj[name] = {};
    }
    // 'set c1 color red',
    function set (name,key,value){
        collectionsObj[name][key] = value;
    };

    //  'print c1',
    function print(name){
        let objectsResult = [];
        for ( let objectAsKey in collectionsObj[name] ){
            objectsResult.push(`${objectAsKey}:${collectionsObj[name][objectAsKey]}`);
        }
        console.log(objectsResult.join(','));
    }

    inputArray.forEach(element => {
        let [command, name, key, value] = element.split("" "");
        commandsCollections[command](name,key,value);
    });

}

cars([
    'create c1',
    'create c2 inherit c1',
    'set c1 color red',
    'set c2 model new',
    'print c1',
    'print c2'
  ]);"
M0m9jQ3E,EmplaceBack,iozee,C++,Saturday 27th of May 2023 06:02:31 AM CDT,"#pragma once

#include <cassert>
#include <cstdlib>
#include <new>
#include <utility>
#include <execution>
#include <iostream>

template<typename T>
class RawMemory {
public:
    RawMemory() = default;

    explicit RawMemory(size_t capacity) : buffer_(Allocate(capacity)), capacity_(capacity) {}

    RawMemory(const RawMemory &) = delete;

    ~RawMemory() {
        Deallocate(buffer_);
    }

    RawMemory &operator=(const RawMemory &rhs) = delete;

    RawMemory(RawMemory &&other) noexcept {
        buffer_ = other.buffer_;
        capacity_ = other.capacity_;
        other.buffer_ = nullptr;
        other.capacity_ = 0;
    }

    RawMemory &operator=(RawMemory &&rhs) noexcept {
        if (this != &rhs) {
            buffer_ = rhs.buffer_;
            capacity_ = rhs.capacity_;
            rhs.buffer_ = nullptr;
            rhs.capacity_ = 0;
        }
        return *this;
    }

    T *operator+(size_t offset) noexcept {
        // Разрешается получать адрес ячейки памяти, следующей за последним элементом массива
        assert(offset <= capacity_);
        return buffer_ + offset;
    }

    const T *operator+(size_t offset) const noexcept {
        return const_cast<RawMemory &>(*this) + offset;
    }

    const T &operator[](size_t index) const noexcept {
        return const_cast<RawMemory &>(*this)[index];
    }

    T &operator[](size_t index) noexcept {
        return buffer_[index];
    }

    void Swap(RawMemory &other) noexcept {
        std::swap(buffer_, other.buffer_);
        std::swap(capacity_, other.capacity_);
    }

    const T *GetAddress() const noexcept {
        return buffer_;
    }

    T *GetAddress() noexcept {
        return buffer_;
    }

    size_t Capacity() const {
        return capacity_;
    }

private:
    // Выделяет сырую память под n элементов и возвращает указатель на неё
    static T *Allocate(size_t n) {
        return n != 0 ? static_cast<T *>(operator new(n * sizeof(T))) : nullptr;
    }

    // Освобождает сырую память, выделенную ранее по адресу buf при помощи Allocate
    static void Deallocate(T *buf) noexcept {
        operator delete(buf);
    }

    T *buffer_ = nullptr;
    size_t capacity_ = 0;
};

template<typename T>
class Vector {
public:

    Vector() noexcept = default;

    explicit Vector(size_t size) : data_(size), size_(size) {
        std::uninitialized_value_construct_n(data_.GetAddress(), size);
    }

    Vector(const Vector &other) : data_(other.size_), size_(other.size_) {
        std::uninitialized_copy_n(other.data_.GetAddress(), size_, data_.GetAddress());
    }

    Vector(Vector &&other) noexcept: data_(std::move(other.data_)), size_(std::move(other.size_)) {
        RawMemory<T> empty;
        other.data_ = std::move(empty);
        other.size_ = 0;
    }

    using iterator = T *;
    using const_iterator = const T *;

    iterator begin() noexcept {
        return data_.GetAddress();
    }

    iterator end() noexcept {
        return data_.GetAddress() + size_;
    }

    const_iterator begin() const noexcept {
        return data_.GetAddress();
    }

    const_iterator end() const noexcept {
        return data_.GetAddress() + size_;
    }

    const_iterator cbegin() const noexcept {
        return data_.GetAddress();
    }

    const_iterator cend() const noexcept {
        return data_.GetAddress() + size_;
    }

    iterator Erase(const_iterator pos) {
        if (pos == cend()) {
            Destroy(end() - 1);
            --size_;
            return end();
        }
        if (pos == cbegin()) {
            Destroy(begin());
            std::move(begin() + 1, end(), begin());
            --size_;
            return begin() + 1;
        }
        auto it = const_cast<T *>(pos);
        Destroy(it);
        std::move(it + 1, end(), it);
        --size_;
        return it;
    }

    iterator Insert(const_iterator pos, const T &value) {
        return Emplace(pos, value);
    }

    iterator Insert(const_iterator pos, T &&value) {
        return Emplace(pos, std::move(value));
    }

    void Resize(size_t new_size) {
        if (new_size < size_) {
            DestroyN(data_.GetAddress() + new_size, size_ - new_size);
        } else {
            Reserve(new_size);
            std::uninitialized_value_construct_n(data_.GetAddress() + size_, new_size - size_);
        }
        size_ = new_size;
    }

    void PushBack(const T &value) {
        if (size_ == Capacity()) {
            RawMemory<T> new_data(size_ == 0 ? 1 : size_ * 2);
            CopyConstruct(&new_data[size_], value);
            if constexpr (std::is_nothrow_move_constructible_v<T> || !std::is_copy_constructible_v<T>) {
                std::uninitialized_move_n(data_.GetAddress(), size_, new_data.GetAddress());
            } else {
                std::uninitialized_copy_n(data_.GetAddress(), size_, new_data.GetAddress());
            }
            std::destroy_n(data_.GetAddress(), size_);
            data_.Swap(new_data);
        } else {
            CopyConstruct(&data_[size_], value);
        }
        ++size_;
    }

    void PushBack(T &&value) {
        if (size_ == Capacity()) {
            RawMemory<T> new_data(size_ == 0 ? 1 : size_ * 2);
            if constexpr (std::is_nothrow_move_constructible_v<T> || !std::is_copy_constructible_v<T>) {
                new(new_data + size_) T(std::move(value));
                std::uninitialized_move_n(data_.GetAddress(), size_, new_data.GetAddress());
            } else {
                try {
                    new(new_data + size_) T(std::move(value));
                } catch (...) {
                    CopyConstruct(&new_data[size_], value); //  todo
                }
                std::uninitialized_copy_n(data_.GetAddress(), size_, new_data.GetAddress());
            }
            std::destroy_n(data_.GetAddress(), size_);
            data_.Swap(new_data);
        } else {
            new(data_ + size_) T(std::move(value));
        }
        ++size_;
    }

    void PopBack() noexcept {
        Destroy(&data_[size_ - 1]);
        --size_;
    }

    template<typename... Args>
    iterator Emplace(const_iterator pos, Args &&... args) {
        auto new_object_idx = std::distance(cbegin(), pos);
        if (size_ < Capacity()) {
            if (size_ > 0) {
                if (pos == cbegin()) {
                    //  base
//                    try {
                    if constexpr (std::is_nothrow_move_constructible_v<T> || !std::is_copy_constructible_v<T>) {
                        T temp(std::move(args)...);
                        std::move_backward(begin(), end() - 1, end());
                        new(data_ + new_object_idx) T(std::move(temp));
                    } else {
                        T temp(args...);
                        std::move_backward(begin(), end() - 1, end());
                        new(data_ + new_object_idx) T(temp);
                    }
                    /*} catch (...) {
                        Destroy(data_ + new_object_idx);
                        throw;
                    }*/
                } else if (pos < cend()) {
//                    try {
                    if constexpr (std::is_nothrow_move_constructible_v<T> || !std::is_copy_constructible_v<T>) {
                        T temp(std::move(args)...);
                        new(data_ + size_) T(std::move(*(end() - 1)));
                        std::move_backward(const_cast<T *>(pos), end() - 1, end());
                        data_[new_object_idx] = std::move(temp);
                    } else {
                        T temp(args...);
                        new(data_ + size_) T(*(end() - 1));
                        std::move_backward(const_cast<T *>(pos), end() - 1, end());
                        data_[new_object_idx] = std::move(temp);
                    }
                    /*} catch (...) {
                        Destroy(data_ + new_object_idx);
                        throw;
                    }*/

                } else {
                    EmplaceBack(args...);
                }
            } else {
                if constexpr (std::is_nothrow_move_constructible_v<T> || !std::is_copy_constructible_v<T>) {
                    new(data_ + new_object_idx) T(std::move(args)...);
                } else {
                    new(data_ + new_object_idx) T((args)...);
                }
            }
        } else {
            RawMemory<T> new_data(Capacity() == 0 ? 1 : Capacity() * 2);
//            try {
            if constexpr (std::is_nothrow_move_constructible_v<T> || !std::is_copy_constructible_v<T>) {
                new(new_data + new_object_idx) T(std::move(args)...);
                std::uninitialized_move_n(data_.GetAddress(),
                                          new_object_idx,
                                          new_data.GetAddress());
            } else {
                new(new_data + new_object_idx) T(args...);
                std::uninitialized_copy_n(data_.GetAddress(),
                                          new_object_idx,
                                          new_data.GetAddress());
            }
            /*         } catch (...) {
                         Destroy(new_data + new_object_idx);
                         throw;
                     }
                     try {*/
            if constexpr (std::is_nothrow_move_constructible_v<T> || !std::is_copy_constructible_v<T>) {
                std::uninitialized_move_n(data_ + new_object_idx,
                                          std::distance(pos, cend()),
                                          new_data + new_object_idx + 1);
            } else {
                std::uninitialized_copy_n(data_ + new_object_idx,
                                          std::distance(pos, cend()),
                                          new_data + new_object_idx + 1);
            }
/*            } catch (...) {
                DestroyN(data_.GetAddress(), new_object_idx + 1);
                throw;
            }*/
            std::destroy_n(data_.GetAddress(), size_);
            data_.Swap(new_data);
        }
        ++size_;
        return &data_[new_object_idx];
    }

    template<typename... Args>
    T &EmplaceBack(Args &&... args) {
        if (Capacity() == 0) {
            Reserve(1);
        }
        if (size_ == Capacity()) {
            RawMemory<T> new_data(size_ == 0 ? 1 : size_ * 2);
            if constexpr (std::is_copy_constructible_v<T> || std::is_nothrow_move_constructible_v<T>) {
                //  strict
                try {
                    if constexpr (std::is_nothrow_move_constructible_v<T> || !std::is_copy_constructible_v<T>) {
                        new(new_data + size_) T(std::move(args)...);
                        std::uninitialized_move_n(data_.GetAddress(), size_, new_data.GetAddress());
                    } else {
                        new(new_data + size_) T(std::forward<Args>(args)...);
                        std::uninitialized_copy_n(data_.GetAddress(), size_, new_data.GetAddress());
                    }
                } catch (...) {
                    DestroyN(new_data.GetAddress(), size_ + 1);
                    throw;
                }
            } else {
                //  basic
                try {
                    new(new_data + size_) T(std::move(args)...);
                    std::uninitialized_move_n(data_.GetAddress(), size_, new_data.GetAddress());
                } catch (...) {
                    DestroyN(new_data.GetAddress(), size_ + 1);
                    throw;
                }
            }
            std::destroy_n(data_.GetAddress(), size_);
            data_.Swap(new_data);
        } else {
            if constexpr (std::is_copy_constructible_v<T> || std::is_nothrow_move_constructible_v<T>) {
                //  strict
                if constexpr (std::is_nothrow_move_constructible_v<T> || !std::is_copy_constructible_v<T>) {
                    new(data_ + size_) T(std::move(args)...);
                } else {
                    new(data_ + size_) T(std::forward<Args>(args)...);
                }
            } else {
                //  basic
                new(data_ + size_) T(std::move(args)...);
            }
        }
        ++size_;
        return *(data_ + size_ - 1);
    }

    Vector &operator=(const Vector &rhs) {
        if (this != &rhs) {
            if (rhs.size_ > data_.Capacity()) {
                Vector<T> large(rhs);
                Swap(large);
            } else {
                /* Скопировать элементы из rhs, создав при необходимости новые или удалив существующие */
                if (rhs.size_ < size_) {
                    for (size_t i = 0; i < rhs.size_; ++i) {
                        data_[i] = rhs[i];
                    }
                    std::destroy_n(data_.GetAddress() + rhs.size_, size_ - rhs.size_);
                    size_ = rhs.size_;
                } else {
                    for (size_t i = 0; i < size_; ++i) {
                        data_[i] = rhs[i];
                    }
                    std::uninitialized_copy_n(rhs.data_.GetAddress() + rhs.size_ - size_,
                                              rhs.size_ - size_,
                                              data_.GetAddress() + size_);
                    size_ = rhs.size_;
                }
            }
        }
        return *this;
    }

    void Swap(Vector &other) noexcept {
        if (this == &other) {
            return;
        }
        data_.Swap(other.data_);
        std::swap(size_, other.size_);
    }

    Vector &operator=(Vector &&rhs) noexcept {
        if (this == &rhs) {
            return *this;
        }
        data_ = std::move(rhs.data_);
        size_ = rhs.size_;
        rhs.size_ = 0;
        return *this;
    }

    virtual ~Vector() {
        DestroyN(data_.GetAddress(), size_);
    }

    size_t Size() const noexcept {
        return size_;
    }

    size_t Capacity() const noexcept {
        return data_.Capacity();
    }

    const T &operator[](size_t index) const noexcept {
        return const_cast<Vector &>(*this)[index];
    }

    T &operator[](size_t index) noexcept {
        assert(index < size_);
        return data_[index];
    }

    void Reserve(const size_t capacity) {
        if (data_.Capacity() >= capacity) {
            return;
        }
        RawMemory<T> new_data(capacity);

        // Конструируем элементы в new_data, копируя их из data_
        if constexpr (std::is_nothrow_move_constructible_v<T> || !std::is_copy_constructible_v<T>) {
            std::uninitialized_move_n(data_.GetAddress(), size_, new_data.GetAddress());
        } else {
            std::uninitialized_copy_n(data_.GetAddress(), size_, new_data.GetAddress());
        }

        // Разрушаем элементы в data_
        std::destroy_n(data_.GetAddress(), size_);

        // Избавляемся от старой сырой памяти, обменивая её на новую
        data_.Swap(new_data);

        // При выходе из метода старая память будет возвращена в кучу
    }

private:
    RawMemory<T> data_;
    size_t size_ = 0;

    // Вызывает деструкторы n объектов массива по адресу buf
    static void DestroyN(T *buf, size_t n) noexcept {
        for (size_t i = 0; i != n; ++i) {
            Destroy(buf + i);
        }
    }

    // Создаёт копию объекта elem в сырой памяти по адресу buf
    static void CopyConstruct(T *buf, const T &elem) {
        new(buf) T(elem);
    }

    // Вызывает деструктор объекта по адресу buf
    static void Destroy(T *buf) noexcept {
        buf->~T();
    }
};"
RDsCkujv,data585,TestGuy1,JSON,Saturday 27th of May 2023 06:00:05 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: 'dafd5ef1364ec0a9fc936a602e7e0c0e2f4dc9db132ed95274df49c24ba1e2f5c2f903c90997c26631bf53017560c0f2e6afcd914d953922149e2947b89d04e22fc9d67d1974735c137eb73c6834c06f0acb0ec3a97a0b84385e5bb5b72cc64c1f0aba451a1b0d6286fe4733dacaccf307770698104cf0a9ce3d6867a65ed4f0',
  otherdata: [
    '59329ba21c2a46b8949ee1617654cfc3',
    'dc40c14e9a9b4649585504121c2c69c4',
    '3ef9b3f199671b3751dfe91eca5f9c37',
    '15f1e30ff2c9c999398f8e6ba038b236',
    'e34fe21e7140459f642da41938f694cc',
    'e4291791918ff548466035f06ad0307f',
    'd35058b4abbd703a3dd2e58eb5c05901',
    'bf04d19cfc952311547a4ed8f19f440a'
  ]
}"
8gDeWgBv,Lists Exercises,Bobbyppv,Python,Saturday 27th of May 2023 05:45:14 AM CDT,"#1
 
list_of_numbers = input().split()
opposite_numbers = []
for element in list_of_numbers:
    current_number = -int(element)
    opposite_numbers.append(current_number)
print(opposite_numbers)
 
 
#2
factor = int(input())
count = int(input())
list_of_numbers = []
for multiplier in range(1, count + 1):
    list_of_numbers.append(factor * multiplier)
print(list_of_numbers)
 
 
#3
 
team_a = ['A-1', 'A-2', 'A-3', 'A-4', 'A-5', 'A-6', 'A-7', 'A-8', 'A-9', 'A-10', 'A-11']
team_b = ['B-1', 'B-2', 'B-3', 'B-4', 'B-5', 'B-6', 'B-7', 'B-8', 'B-9', 'B-10', 'B-11']
players_sent_off = input().split()
game_was_terminated = False
for player in players_sent_off:
    if player in team_a:
        team_a.remove(player)
    elif player in team_b:
        team_b.remove(player)
    if len(team_a) < 7 or len(team_b) <7:
        game_was_terminated = True
        break
print(f""Team A - {len(team_a)}; Team B - {len(team_b)}"")
if game_was_terminated: # if game_was_terminated == True:
    print(""Game was terminated"")
 
 
#4
 
money_as_string = input().split("", "")
number_of_beggars = int(input())
money_as_digits = []
for element in money_as_string:
    money_as_digits.append(int(element))
final_sums = []
start_index = 0
while start_index < number_of_beggars:
    sum_for_current_beggar = 0
    for current_index in range(start_index, len(money_as_digits), number_of_beggars):
        sum_for_current_beggar += money_as_digits[current_index]
    final_sums.append(sum_for_current_beggar)
    start_index += 1
print(final_sums)
 
#5
 
deck_of_cards = input().split()
number_of_shuffles = int(input())
for shuffle in range(number_of_shuffles):
    final_deck = []
    middle_of_the_deck = len(deck_of_cards) // 2
    left_part = deck_of_cards[0:middle_of_the_deck]
    right_part = deck_of_cards[middle_of_the_deck:]
    for card_index in range(len(right_part)):
        final_deck.append(left_part[card_index])
        final_deck.append(right_part[card_index])
    deck_of_cards = final_deck
print(final_deck)
 
#8 
 
 
 
cells = input().split(""#"")
amount_of_water = int(input())
total_fire = 0
total_effort = 0
fire_out_cells = []
high = range(81, 125 + 1)
medium = range(51, 80 + 1)
low = range(1, 50 + 1)
for cell in cells:
    type_of_fire, cell_value = cell.split("" = "")
    cell_value = int(cell_value)
    cell_is_valid = False
    if type_of_fire == ""High"":
        if cell_value in high:
            cell_is_valid = True
    elif type_of_fire == ""Medium"":
        if cell_value in medium:
            cell_is_valid = True
    elif type_of_fire == ""Low"": #else:
        if cell_value in low:
            cell_is_valid = True
    if cell_is_valid:
        if amount_of_water >= cell_value:
            amount_of_water -= cell_value
            fire_out_cells.append(cell_value)
            total_fire += cell_value
            total_effort += cell_value * 0.25
print(""Cells:"")
for fire_out_cell in fire_out_cells:
    print(f""- {fire_out_cell}"")
print(f""Effort: {total_effort:.2f}"")
print(f""Total Fire: {total_fire}"")
 
 
 
 
 
#9
 
items = input().split(""|"")
budget = float(input())
sell_prices = []
profit = 0
train_ticket = 150
for item in items:
    type, buying_price = item.split(""->"")
    buying_price = float(buying_price)
    price_is_valid = False
    if type == ""Clothes"":
        if buying_price <= 50.00:
            price_is_valid = True
    elif type == ""Shoes"":
        if buying_price <= 35.00:
            price_is_valid = True
    elif type == ""Accessories"":
        if buying_price <= 20.50:
            price_is_valid = True
    if price_is_valid:
        if budget >= buying_price:
            budget -= buying_price
            sell_price = buying_price * 1.40
            profit += sell_price - buying_price
            sell_prices.append(sell_price)
#Option 1
for sell_price in sell_prices:
    print(f""{sell_price:.2f}"", end = "" "")
print()
 
#Option 2
# print("" "".join([f""{sell_price:.2f}"" for sell_price in sell_prices]))
 
#Option 3
# sell_prices_as_string = []
# for sell_price in sell_prices:
#     sell_prices_as_string.append(f""{sell_price:.2f}"")
# print("" "".join(sell_prices_as_string))
 
print(f""Profit: {profit:.2f}"")
total_income = budget + sum(sell_prices)
if total_income >= train_ticket:
    print(""Hello, France!"")
else:
    print(""Not enough money."")
 
 
 
#10
 
events = input().split(""|"")
total_energy = 100
total_coins = 100
factory_is_open = True
for event in events:
    event_items = event.split(""-"")
    type_of_event = event_items[0]
    event_value = int(event_items[1])
    if type_of_event == ""rest"":
        current_energy = total_energy
        total_energy += event_value
        if total_energy > 100:
            total_energy = 100
        gained_energy = total_energy - current_energy
        print(f""You gained {gained_energy} energy."")
        print(f""Current energy: {total_energy}."")
    elif type_of_event == ""order"":
        if total_energy >= 30: #order can be completed
            total_energy -= 30
            total_coins += event_value
            print(f""You earned {event_value} coins."")
        else:
            total_energy += 50
            print(""You had to rest!"")
    else:
        if total_coins >= event_value:
            total_coins -= event_value
            print(f""You bought {type_of_event}."")
        else:
            factory_is_open = False
            break
if factory_is_open: #if factory is open == True
    print(""Day completed!"")
    print(f""Coins: {total_coins}"")
    print(f""Energy: {total_energy}"")
else:
    print(f""Closed! Cannot afford {type_of_event}."")
 
 
 
 
 
my_list = [1, 8, 4, 89, 43, 2, 132, 2, 2, ""Gosho"", ""gosho""]
 
# my_list.sort(reverse=True)
# print(my_list)
#
# my_list.pop()
# print(my_list)
# my_list.pop(2)
# print(my_list)
# my_list.append(my_list.pop(2))
# print(my_list)
 
 
# my_list.insert(3, ""Atanas"")
# print(my_list)
 
# number = my_list.index(2)
# print(number)
#
# repetition = my_list.count(2)
# print(repetition)
#
# my_list.reverse()
# print(my_list)
# print(my_list[::-1])
#
# del my_list[3]
# print(my_list)
#
my_list.remove(""Gosho"")
print(my_list)
my_list.remove(""Pesho"")
print(my_list)"
9q6BN4Qu,flutter_delete,yudiwibisono,Dart,Saturday 27th of May 2023 05:14:09 AM CDT,"import 'package:flutter/material.dart';
import 'package:http/http.dart' as http;

void main() => runApp(MaterialApp(home: MyApp()));

class MyApp extends StatefulWidget {
  const MyApp({Key? key}) : super(key: key);
  @override
  MyAppState createState() => MyAppState();
}

class MyAppState extends State<MyApp> {
  late Future<int> respPost; 
  String url = ""http://127.0.0.1:8000/delete_mhs/"";

  Future<int> fetchData() async {
    //data disimpan di body
    String nim = ""13594022"";
    //nim tambahkan di url
    //pastikan http.delete
    final response = await http.delete(Uri.parse(url + nim)); //hanya ganti nama saja
    return response.statusCode; //sukses kalau 200
  }

  @override
  void initState() {
    super.initState();
    respPost = Future.value(0); //init
  }

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'My App',
      home: Scaffold(
        appBar: AppBar(
          title: const Text('My App'),
        ),
        body: Center(
            child: Column(
          mainAxisSize: MainAxisSize.min,
          children: [
            ElevatedButton(
              onPressed: () {
                setState(() {
                  respPost = fetchData();
                });
              },
              child: const Text('Klik untuk delete data'),
            ),
            Text(""Hasil:""),
            FutureBuilder<int>(
                future: respPost,
                builder: (context, snapshot) {
                  if (snapshot.hasData) {
                    if (snapshot.data! == 200) {
                      return Text(""Proses delete berhasil!"");
                    }
                    if (snapshot.data! == 0) {
                      return Text("""");
                    } else {
                      return Text(""Proses delete gagal"");
                    }
                  }
                  // default: loading spinner.
                  return const CircularProgressIndicator();
                })
          ],
        )), //column center
      ), //Scaffold
    ); //Material APP
  }
}
"
JrPF1nRD,07. Working Hours,veronikaaa86,Java,Saturday 27th of May 2023 05:05:50 AM CDT,"package conditionalStatementsAdvanced;

import java.util.Scanner;

public class P07WorkingHours {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        int hour = Integer.parseInt(scanner.nextLine());
        String dayOfWeek = scanner.nextLine();

        boolean isWorkingDays = dayOfWeek.equals(""Monday"") ||
                dayOfWeek.equals(""Tuesday"") ||
                dayOfWeek.equals(""Wednesday"") ||
                dayOfWeek.equals(""Thursday"") ||
                dayOfWeek.equals(""Friday"") ||
                dayOfWeek.equals(""Saturday"");

        boolean isWorkingHours = hour >= 10 && hour <= 18;

        if (isWorkingDays && isWorkingHours) {
            System.out.println(""open"");
        } else {
            System.out.println(""closed"");
        }
    }
}
"
uDSCmqSr,12. Trade Commissions,veronikaaa86,Java,Saturday 27th of May 2023 05:02:47 AM CDT,"package conditionalStatementsAdvanced;

import java.util.Scanner;

public class P12TradeCommissions {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        String town = scanner.nextLine();
        double income = Double.parseDouble(scanner.nextLine());

        boolean isValidData = true;
        double commission = 0;
        if (town.equals(""Sofia"")) {
            if (income >= 0 && income <= 500) {
                commission = income * 0.05;
            } else if (income > 500 && income <= 1000) {
                commission = income * 0.07;
            } else if (income > 1000 && income <= 10000) {
                commission = income * 0.08;
            } else if (income > 10000) {
                commission = income * 0.12;
            } else {
                isValidData = false;
            }
        } else if (town.equals(""Varna"")) {
            if (income >= 0 && income <= 500) {
                commission = income * 0.045;
            } else if (income > 500 && income <= 1000) {
                commission = income * 0.075;
            } else if (income > 1000 && income <= 10000) {
                commission = income * 0.1;
            } else if (income > 10000) {
                commission = income * 0.13;
            } else {
                isValidData = false;
            }
        } else if (town.equals(""Plovdiv"")) {
            if (income >= 0 && income <= 500) {
                commission = income * 0.055;
            } else if (income > 500 && income <= 1000) {
                commission = income * 0.08;
            } else if (income > 1000 && income <= 10000) {
                commission = income * 0.12;
            } else if (income > 10000) {
                commission = income * 0.145;
            } else {
                isValidData = false;
            }
        } else {
            isValidData = false;
        }

        if (isValidData) {
            System.out.printf(""%.2f"", commission);
        } else {
            System.out.println(""error"");
        }
    }
}
"
sdX3G9i9,11. Fruit Shop,veronikaaa86,Java,Saturday 27th of May 2023 04:49:36 AM CDT,"package conditionalStatementsAdvanced;

import java.util.Scanner;

public class P11FruitShop {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        String fruit = scanner.nextLine();
        String dayOfWeek = scanner.nextLine();
        double quantity = Double.parseDouble(scanner.nextLine());

        boolean isWorkingDay = dayOfWeek.equals(""Monday"")
                || dayOfWeek.equals(""Tuesday"")
                || dayOfWeek.equals(""Wednesday"")
                || dayOfWeek.equals(""Thursday"")
                || dayOfWeek.equals(""Friday"");

        boolean isWeekend = dayOfWeek.equals(""Saturday"")
                || dayOfWeek.equals(""Sunday"");

        boolean isValid = true;

        double price = 0;
        if (isWorkingDay) {
            if (fruit.equals(""banana"")) {
                price = 2.5;
            } else if (fruit.equals(""apple"")) {
                price = 1.2;
            }  else if (fruit.equals(""orange"")) {
                price = 0.85;
            } else if (fruit.equals(""grapefruit"")) {
                price = 1.45;
            } else if (fruit.equals(""kiwi"")) {
                price = 2.7;
            } else if (fruit.equals(""pineapple"")) {
                price = 5.5;
            } else if (fruit.equals(""grapes"")) {
                price = 3.85;
            } else {
                isValid = false;
            }
        } else if (isWeekend) {
            if (fruit.equals(""banana"")) {
                price = 2.7;
            } else if (fruit.equals(""apple"")) {
                price = 1.25;
            }  else if (fruit.equals(""orange"")) {
                price = 0.90;
            } else if (fruit.equals(""grapefruit"")) {
                price = 1.6;
            } else if (fruit.equals(""kiwi"")) {
                price = 3;
            } else if (fruit.equals(""pineapple"")) {
                price = 5.6;
            } else if (fruit.equals(""grapes"")) {
                price = 4.2;
            } else {
                isValid = false;
            }
        } else {
            isValid = false;
        }

        if (isValid) {
            double result = quantity * price;
            System.out.printf(""%.2f"", result);
        } else {
            System.out.println(""error"");
        }
    }
}
"
4QDAVB4m,Smiling Face,sriyanto,Python,Saturday 27th of May 2023 04:20:23 AM CDT,"import turtle
screen = turtle.Screen()
t = turtle.Turtle()
screen.setup(500,500) 

t.width(1)
t.speed(1)

# Set screen color
screen.bgcolor('teal')
# Draw the face
t.penup()
t.goto(0, -100)
t.fillcolor('yellow')
t.begin_fill()
t.pendown()
t.circle(100)
t.penup()
t.end_fill()

# draw the  left eye 
t.goto(-30, -20)
t.fillcolor('white')
t.begin_fill()
t.pendown()
t.circle(30)
t.penup()
t.end_fill()

t.goto(-30, -10)
t.fillcolor('black')
t.begin_fill()
t.pendown()
t.circle(10)
t.penup()
t.end_fill()

# draw the right eye 
t.goto(30, -20)
t.fillcolor('white')
t.begin_fill()
t.pendown()
t.circle(30)
t.penup()
t.end_fill()

t.goto(30, -10)
t.fillcolor('black')
t.begin_fill()
t.pendown()
t.circle(10)
t.penup()
t.end_fill()

# smile 
t.goto(-55,-40)
t.pendown()
t.right(45)
t.circle(80,90)
t.penup()

#draw a hat 
t.goto(-40,90)
t.right(45) #set the direction forward
t.fillcolor('red')
t.begin_fill()
t.pendown()
#draw triangle
t.forward(80)
t.left(120)
t.forward(80)
t.left(120)
t.forward(80)
t.left(120)
t.end_fill()
t.penup()
t.hideturtle()"
p5anKzVi,Untitled,Bed007,C#,Saturday 27th of May 2023 04:11:09 AM CDT,"using System;
using System.Collections.Generic;
using System.Globalization;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Xml.Linq;

namespace ZadaniaMVVM.Model
{
    // trwale przechowywanie kolekcji 
    public static class PlikXml
    {
        // format provider bo na innym urzadzeniu, moze byc . a nie chce miec bledow 
        // amerykanska kultura uzyta
        private static readonly IFormatProvider formatProvider = CultureInfo.InvariantCulture;
        
        public static void Zapisz(this Zadania zadania, string sciezkaPliku)
        {
            try
            {
                XDocument xml = new XDocument(
                    new XDeclaration(""1.0"", ""utf-8"", ""yes""),
                    new XComment(""Data zapisania: "" + DateTime.Now.ToString()),
                    // twz korzen czyli znacznik ktory bedzie zawieral wszystkie pozostale znaczniki 
                    new XElement(""Zadania"",
                        from Zadanie in zadania
                        select new XElement(""Zadanie"",
                            new XElement(""Opis"", Zadanie.Opis),
                            new XElement(""DataUtworzenia"", Zadanie.DataUtworzenia.ToString(formatProvider)),
                            new XElement(""PlanowanieRealizacji"", Zadanie.PlanowanyTerminRealizacji.ToString(formatProvider)),
                            new XElement(""Piorytet"", ((byte)Zadanie.Priorytet).ToString()),
                            new XElement(""CzyZrealizowane"", Zadanie.CzyZrealizowane.ToString(formatProvider))
                        )
                    )
                );
                
                xml.Save(sciezkaPliku);
            }
            catch (Exception exc)
            {
                throw new Exception(""Blad przy zapisie danych do pliku XML"", exc);
            }
        }

        // testy jednostkowe maja sprawdzic czy nie psujemy obecnego kodu 

        public static Zadania Czytaj(string sciezkaPliku)
        {
            try
            {
                XDocument xml = XDocument.Load(sciezkaPliku);
                // sparsowanie odczytanych kolekcji zadan
                IEnumerable<Zadanie> dane =
                    from Zadanie in xml.Root.Descendants(""Zadanie"")
                    select new Zadanie(
                        Zadanie.Element(""Opis"").Value,
                        DateTime.Parse(Zadanie.Element(""DataUtworzenia"").Value, formatProvider),
                        DateTime.Parse(Zadanie.Element(""PlanowanieRealizacji"").Value, formatProvider),
                        (PriorytetZadania)byte.Parse(Zadanie.Element(""Piorytet"").Value, formatProvider),
                        bool.Parse(Zadanie.Element(""CzyZrealizowane"").Value)
                    );
                    
                // stworzenie obiektu modelu 
                Zadania zadania = new Zadania();
                foreach (Zadanie zadanie in dane)
                {
                    zadania.DodajZadanie(zadanie);
                }
                
                return zadania;
            }
            catch (Exception exc)
            {
                throw new Exception(""Blad przy odczycie danych do pliku XML"", exc);
            }
        }
    }
}
"
RsdHHu16,EggSpwans,sriyanto,Lua,Saturday 27th of May 2023 04:07:39 AM CDT,"<link rel=""stylesheet"" type=text/css href=""{{ url_for('static', filename='style.css') }}""> 
<style>
img {
  border: 1px solid #ddd;
  border-radius: 4px;
  padding: 5px;
  width: 150px;
}
img:hover {
  box-shadow: 0 0 2px 1px rgba(0, 140, 186, 0.5);
}
</style>
{% block main %}
{% endblock %}
{% extends 'base.html' %}
{% block main %}
{% endblock %}
href=""{{ url_for('index') }}""
Python:
https://replit.com/~

Scratch:
https://scratch.mit.edu/join

Roblox Studio
https://www.roblox.com/create

Meeting ID: 
Passcode: 12345
--Scratch
--https://sites.google.com/view/coding9/scratch-ml/fruit-collector 
--Template
--https://drive.google.com/file/d/1VrMKp5ZjYHxSAcKJ6TQMx8pL_KhdJKFd/view?usp=drive_link 
--this is script of roblox:
local eggs = game.ReplicatedStorage.Eggs
local spawns = game.Workspace.EggSpawns
while wait(2) do --to select the random egg and spawn every 2 seconds to put it out in the location
	--anything inside this while loop will keep on running for every two seconds
	--create a table for all of the eggs that are present in the folder
	local eggsTable = eggs:GetChildren() --This will help in getting all of the eggs in the folder
	
	--random egg pick out of the table
	local randomEgg = eggsTable[math.random(1,#eggsTable)] --value for random will be 1 and however items are their in the table, #eggstable will give the amount of items in that table
	
	--create a table to choose the random spawn
	local spawnsTable = spawns:GetChildren()
	
	--to pick a random spawn from the table
	local randomSpawn = spawnsTable[math.random(1,#spawnsTable)]
	
	--After getting a random egg, create a clone of it to not use the egg which is their in replicated storage
	
	local eggClone = randomEgg:Clone()
	
	--to put the cloned egg in a new folder
	eggClone.Parent = game.Workspace.SpawnedEggs
	
	--to set the position of the cloned egg
	eggClone.Position = randomSpawn.Position + Vector3.new(0,20,0) --to get the current position of the random spawn and moving it to 20 studs y axis
	eggClone.Anchored = false
	
	--touch event when the egg has been touched by the player
	eggClone.Touched:Connect(function(hit) --hit is the arguement, an object which touches the egg
		--when the egg has been touched, delete it
		--to check whether egg has been touched by the player or not
		local playr = game.Players:GetPlayerFromCharacter(hit.Parent) --this will return true or false, depending egg got hit by the players body only
		if playr then
			--if true
			eggClone:Destroy()
		end
	end)
end"
dhqPSBYf,08. Cinema Ticket,veronikaaa86,Java,Saturday 27th of May 2023 04:06:29 AM CDT,"package conditionalStatementsAdvanced;

import java.util.Scanner;

public class P08CinemaTicket {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        String dayOfWeek = scanner.nextLine();

        if (dayOfWeek.equals(""Monday"") || dayOfWeek.equals(""Tuesday"") || dayOfWeek.equals(""Friday"")) {
            System.out.println(12);
        } else if (dayOfWeek.equals(""Wednesday"") || dayOfWeek.equals(""Thursday"")) {
            System.out.println(14);
        } else if (dayOfWeek.equals(""Saturday"") || dayOfWeek.equals(""Sunday"")) {
            System.out.println(16);
        }

//        switch (dayOfWeek) {
//            case ""Monday"":
//            case ""Tuesday"":
//            case ""Friday"":
//                System.out.println(12);
//                break;
//            case ""Wednesday"":
//            case ""Thursday"":
//                System.out.println(14);
//                break;
//            case ""Saturday"":
//            case ""Sunday"":
//                System.out.println(16);
//                break;
//        }
    }
}
"
UZpPAFBc,flutter_patch,yudiwibisono,Dart,Saturday 27th of May 2023 04:04:44 AM CDT,"import 'package:flutter/material.dart';
import 'package:http/http.dart' as http;

void main() => runApp(MaterialApp(home: MyApp()));

class MyApp extends StatefulWidget {
  const MyApp({Key? key}) : super(key: key);
  @override
  MyAppState createState() => MyAppState();
}

class MyAppState extends State<MyApp> {
  late Future<int> respPost; //201 artinya berhasil
  String url = ""http://127.0.0.1:8000/update_mhs_patch/"";

  Future<int> fetchData() async {
    //data disimpan di body
    String nim = ""13594022"";
    //nim tambahkan di url
    //pastikan http.put! bukan post
    final response = await http.patch(Uri.parse(url + nim),
        headers: <String, String>{
          'Content-Type': 'application/json; charset=UTF-8'
        },
        body: """"""
      {
      ""nama"": ""Sandra Aulia""} """"""); //hanya ganti nama saja
    return response.statusCode; //sukses kalau 200
  }

  @override
  void initState() {
    super.initState();
    respPost = Future.value(0); //init
  }

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'My App',
      home: Scaffold(
        appBar: AppBar(
          title: const Text('My App'),
        ),
        body: Center(
            child: Column(
          mainAxisSize: MainAxisSize.min,
          children: [
            ElevatedButton(
              onPressed: () {
                setState(() {
                  respPost = fetchData();
                });
              },
              child: const Text('Klik untuk update data (patch)'),
            ),
            Text(""Hasil:""),
            FutureBuilder<int>(
                future: respPost,
                builder: (context, snapshot) {
                  if (snapshot.hasData) {
                    if (snapshot.data! == 200) {
                      return Text(""Proses Update patch Berhasil!"");
                    }
                    if (snapshot.data! == 0) {
                      return Text("""");
                    } else {
                      return Text(""Proses insert gagal"");
                    }
                  }
                  // default: loading spinner.
                  return const CircularProgressIndicator();
                })
          ],
        )), //column center
      ), //Scaffold
    ); //Material APP
  }
}
"
DekZubzU,Roblox double tailed visualizer R15,amreincsabika,Lua,Saturday 27th of May 2023 03:50:15 AM CDT,"-- Change amreincsabika0 to your roblox username
require(8817774515).load(""amreincsabika0"") -- R15 converter if needed
wait(0.1)
require(13047968713).load(""amreincsabika0"") -- The script"
CMXNMqsj,flutter_put,yudiwibisono,Dart,Saturday 27th of May 2023 03:44:48 AM CDT,"import 'package:flutter/material.dart';
import 'package:http/http.dart' as http;

void main() => runApp(MaterialApp(home: MyApp()));

class MyApp extends StatefulWidget {
  const MyApp({Key? key}) : super(key: key);
  @override
  MyAppState createState() => MyAppState();
}

class MyAppState extends State<MyApp> {
  late Future<int> respPost; //201 artinya berhasil
  String url = ""http://127.0.0.1:8000/update_mhs_put/"";

  Future<int> fetchData() async {
    //data disimpan di body
    String nim = ""13594022"";
    //nim tambahkan di url
    //pastikan http.put! bukan post
    final response = await http.put(Uri.parse(url + nim),
        headers: <String, String>{
          'Content-Type': 'application/json; charset=UTF-8'
        },
        body: """"""
      {
      ""nim"":""13594022"",  
      ""nama"": ""Ahmad Aulia2"",
      ""id_prov"": ""142"",
      ""angkatan"": ""2022"",
      ""tinggi_badan"": 192} """""");
    return response.statusCode; //sukses kalau 200
  }

  @override
  void initState() {
    super.initState();
    respPost = Future.value(0); //init
  }

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'My App',
      home: Scaffold(
        appBar: AppBar(
          title: const Text('My App'),
        ),
        body: Center(
            child: Column(
          mainAxisSize: MainAxisSize.min,
          children: [
            ElevatedButton(
              onPressed: () {
                setState(() {
                  respPost = fetchData();
                });
              },
              child: const Text('Klik untuk update data (PUT)'),
            ),
            Text(""Hasil:""),
            FutureBuilder<int>(
                future: respPost,
                builder: (context, snapshot) {
                  if (snapshot.hasData) {
                    if (snapshot.data! == 200) {
                      return Text(""Proses Update Berhasil!"");
                    }
                    if (snapshot.data! == 0) {
                      return Text("""");
                    } else {
                      return Text(""Proses insert gagal"");
                    }
                  }
                  // default: loading spinner.
                  return const CircularProgressIndicator();
                })
          ],
        )), //column center
      ), //Scaffold
    ); //Material APP
  }
}
"
5P41K49t,05. Small Shop,veronikaaa86,Java,Saturday 27th of May 2023 03:43:31 AM CDT,"package conditionalStatementsAdvanced;

import java.util.Scanner;

public class P05SmallShop {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        String product = scanner.nextLine();
        String town = scanner.nextLine();
        double quantity = Double.parseDouble(scanner.nextLine());

        double price = 0;
        if (town.equals(""Sofia"")) {
            if (product.equals(""coffee"")) {
                price = 0.50;
            } else if (product.equals(""water"")) {
                price = 0.80;
            }  else if (product.equals(""beer"")) {
                price = 1.20;
            } else if (product.equals(""sweets"")) {
                price = 1.45;
            } else if (product.equals(""peanuts"")) {
                price = 1.60;
            }
        } else if (town.equals(""Plovdiv"")) {
            if (product.equals(""coffee"")) {
                price = 0.40;
            } else if (product.equals(""water"")) {
                price = 0.70;
            }  else if (product.equals(""beer"")) {
                price = 1.15;
            } else if (product.equals(""sweets"")) {
                price = 1.30;
            } else if (product.equals(""peanuts"")) {
                price = 1.50;
            }
        } else if (town.equals(""Varna"")) {
            if (product.equals(""coffee"")) {
                price = 0.45;
            } else if (product.equals(""water"")) {
                price = 0.70;
            }  else if (product.equals(""beer"")) {
                price = 1.10;
            } else if (product.equals(""sweets"")) {
                price = 1.35;
            } else if (product.equals(""peanuts"")) {
                price = 1.55;
            }
        }

        double result = quantity * price;

        System.out.println(result);
    }
}
"
jptF5xi6,Untitled,libobil,C++,Saturday 27th of May 2023 03:42:34 AM CDT,"#include <algorithm>
#include <iostream>
#include <numeric>
#include <vector>

typedef long long llong;
const int MAXN = 200000 + 10;
const int INF  = 1e9;

int n, q;
int d[MAXN];
int sz[MAXN];
bool has[MAXN];
int active[MAXN];
std::vector <int> g[MAXN];
std::vector <std::pair <int,int>> queries[MAXN];
std::vector <std::pair <int,int>> adequate[MAXN];

void initliazeDFS(int node) // първо дете - max sz
{
    sz[node] = 1;
    for (const int &i : g[node])
    {
        d[i] = d[node] + 1;
        initliazeDFS(i);
        sz[node] += sz[i];
    }

    for (int i = 1 ; i < g[node].size() ; ++i)
    {
        if (sz[g[node][i]] > sz[g[node][0]])
        {
            std::swap(g[node][i], g[node][0]);
        }
    }
}

void removeDFS(int node)
{
    for (const auto &[k, idx] : adequate[node]) // вече adequate ще е изчислено
    {
        has[d[node] + k] = false;
    }

    for (const int &i : g[node])
    {
        removeDFS(i);
    }
}

void addDFS(int node)
{
    for (const auto &[k, idx] : adequate[node]) // вече adequate ще е изчислено
    {
        has[d[node] + k] = true;
    }

    for (const int &i : g[node])
    {
        addDFS(i);
    }
}

int cntAdequate;
void clearQueries(int node)
{
    if (g[node].empty()) // проверка дали е листо
    {
        return;
    }

    for (int i = 1 ; i < g[node].size() ; ++i)
    {
        clearQueries(g[node][i]);
        removeDFS(g[node][i]);
    }

    // щом не е листо, има нулево дете
    clearQueries(g[node][0]);
    for (int i = 1 ; i < g[node].size() ; ++i)
    {
        addDFS(g[node][i]);
    }

    for (const auto &[k, idx] : queries[node])
    {
        if (!has[k + d[node]])
        {
            adequate[node].emplace_back(k, idx);
            has[k + d[node]] = true;
        }
    }

    cntAdequate += adequate[node].size();
}

int atDepth[MAXN];
int toQuery[MAXN];
void assignDFS(int node)
{
    toQuery[node] = atDepth[d[node]]; 
    for (const auto &[k, idx] : adequate[node])
    {
        atDepth[d[node] + k] = idx;
    }

    for (const int &i : g[node])
    {
        assignDFS(i);
    }

    for (const auto &[k, idx] : adequate[node])
    {
        atDepth[d[node] + k] = 0;
    }
}

int currCnt;
void addNode(int node)
{
    if (toQuery[node] == 0)
    {
        return;
    }

    currCnt += (active[toQuery[node]] == 0);
    active[toQuery[node]]++;
}

void removeNode(int node)
{
    if (toQuery[node] == 0)
    {
        return;
    }

    active[toQuery[node]]--;
    currCnt -= (active[toQuery[node]] == 0);
}

void solve()
{   
    d[1] = 1;
    initliazeDFS(1);
    clearQueries(1);
    assignDFS(1);

    int lPtr = 1;
    int ansL = 0, ansR = INF;
    for (int rPtr = 1 ; rPtr <= n ; ++rPtr)
    {
        addNode(rPtr);
        bool shouldDec = false;
        while (currCnt == cntAdequate) // ако lPtr = rPtr + 1, ще прекъсне
        {
            shouldDec = true;
            removeNode(lPtr++);
        }
        
        // lPtr ще е първия момент, в който не може
        if (shouldDec) addNode(--lPtr);

        if (currCnt == cntAdequate && ansR - ansL + 1 > rPtr - lPtr + 1)
        {
            ansL = lPtr;
            ansR = rPtr;
        }
    }

    std::cout << ansL << ' ' << ansR << '\n';
}

void input()
{
    int p;
    std::cin >> n;
    for (int i = 2 ; i <= n ; ++i)
    {
        std::cin >> p;
        g[p].push_back(i);
    }

    std::cin >> q;
    for (int i = 1 ; i <= q ; ++i)
    {
        int u, k;
        std::cin >> u >> k;
        queries[u].emplace_back(k, i);
    }
}

void fastIOI()
{
    std::ios_base :: sync_with_stdio(0);
    std::cout.tie(nullptr);
    std::cin.tie(nullptr);
}

int main()
{
    fastIOI();
    input();
    solve();

    return 0;
}"
jYVhXrQS,Nigerian scammers [27-5-1/2023],bombaires,HTML,Saturday 27th of May 2023 03:22:54 AM CDT,"<a href=""mailto:paulallean@yahoo.com"">paulallean@yahoo.com</a>
<a href=""mailto:internationalpolcommand@gmail.com"">internationalpolcommand@gmail.com</a>
<a href=""mailto:internationalpolcommand+18981@gmail.com"">internationalpolcommand+18981@gmail.com</a>
<a href=""mailto:internationalpolcommand+9427@gmail.com"">internationalpolcommand+9427@gmail.com</a>
<a href=""mailto:internationalpolcommand+20837@gmail.com"">internationalpolcommand+20837@gmail.com</a>
<a href=""mailto:internationalpolcommand+2988@gmail.com"">internationalpolcommand+2988@gmail.com</a>
<a href=""mailto:internationalpolcommand+24858@gmail.com"">internationalpolcommand+24858@gmail.com</a>
<a href=""mailto:internationalpolcommand+7308@gmail.com"">internationalpolcommand+7308@gmail.com</a>
<a href=""mailto:internationalpolcommand+18010@gmail.com"">internationalpolcommand+18010@gmail.com</a>
<a href=""mailto:internationalpolcommand+28979@gmail.com"">internationalpolcommand+28979@gmail.com</a>
<a href=""mailto:internationalpolcommand+26396@gmail.com"">internationalpolcommand+26396@gmail.com</a>
<a href=""mailto:internationalpolcommand+26059@gmail.com"">internationalpolcommand+26059@gmail.com</a>
<a href=""mailto:internationalpolcommand+3545@gmail.com"">internationalpolcommand+3545@gmail.com</a>
<a href=""mailto:internationalpolcommand+16219@gmail.com"">internationalpolcommand+16219@gmail.com</a>
<a href=""mailto:internationalpolcommand+8501@gmail.com"">internationalpolcommand+8501@gmail.com</a>
<a href=""mailto:internationalpolcommand+1998@gmail.com"">internationalpolcommand+1998@gmail.com</a>
<a href=""mailto:internationalpolcommand+6085@gmail.com"">internationalpolcommand+6085@gmail.com</a>
<a href=""mailto:internationalpolcommand+16108@gmail.com"">internationalpolcommand+16108@gmail.com</a>
<a href=""mailto:internationalpolcommand+16120@gmail.com"">internationalpolcommand+16120@gmail.com</a>
<a href=""mailto:internationalpolcommand+13651@gmail.com"">internationalpolcommand+13651@gmail.com</a>
<a href=""mailto:internationalpolcommand+23026@gmail.com"">internationalpolcommand+23026@gmail.com</a>
<a href=""mailto:internationalpolcommand+29769@gmail.com"">internationalpolcommand+29769@gmail.com</a>
<a href=""mailto:internationalpolcommand+28986@gmail.com"">internationalpolcommand+28986@gmail.com</a>
<a href=""mailto:internationalpolcommand+16464@gmail.com"">internationalpolcommand+16464@gmail.com</a>
<a href=""mailto:internationalpolcommand+21307@gmail.com"">internationalpolcommand+21307@gmail.com</a>
<a href=""mailto:internationalpolcommand+9615@gmail.com"">internationalpolcommand+9615@gmail.com</a>
<a href=""mailto:internationalpolcommand+23301@gmail.com"">internationalpolcommand+23301@gmail.com</a>
<a href=""mailto:internationalpolcommand+18599@gmail.com"">internationalpolcommand+18599@gmail.com</a>
<a href=""mailto:internationalpolcommand+23854@gmail.com"">internationalpolcommand+23854@gmail.com</a>
<a href=""mailto:internationalpolcommand+10449@gmail.com"">internationalpolcommand+10449@gmail.com</a>
<a href=""mailto:internationalpolcommand+29818@gmail.com"">internationalpolcommand+29818@gmail.com</a>
<a href=""mailto:internationalpolcommand+5907@gmail.com"">internationalpolcommand+5907@gmail.com</a>
<a href=""mailto:internationalpolcommand+30321@gmail.com"">internationalpolcommand+30321@gmail.com</a>
<a href=""mailto:internationalpolcommand+282@gmail.com"">internationalpolcommand+282@gmail.com</a>
<a href=""mailto:internationalpolcommand+14596@gmail.com"">internationalpolcommand+14596@gmail.com</a>
<a href=""mailto:internationalpolcommand+31126@gmail.com"">internationalpolcommand+31126@gmail.com</a>
<a href=""mailto:internationalpolcommand+2403@gmail.com"">internationalpolcommand+2403@gmail.com</a>
<a href=""mailto:internationalpolcommand+14082@gmail.com"">internationalpolcommand+14082@gmail.com</a>
<a href=""mailto:internationalpolcommand+29244@gmail.com"">internationalpolcommand+29244@gmail.com</a>
<a href=""mailto:internationalpolcommand+11324@gmail.com"">internationalpolcommand+11324@gmail.com</a>
<a href=""mailto:internationalpolcommand+9561@gmail.com"">internationalpolcommand+9561@gmail.com</a>
<a href=""mailto:internationalpolcommand+20156@gmail.com"">internationalpolcommand+20156@gmail.com</a>
<a href=""mailto:internationalpolcommand+27008@gmail.com"">internationalpolcommand+27008@gmail.com</a>
<a href=""mailto:internationalpolcommand+9417@gmail.com"">internationalpolcommand+9417@gmail.com</a>
<a href=""mailto:internationalpolcommand+5041@gmail.com"">internationalpolcommand+5041@gmail.com</a>
<a href=""mailto:internationalpolcommand+24065@gmail.com"">internationalpolcommand+24065@gmail.com</a>
<a href=""mailto:internationalpolcommand+29581@gmail.com"">internationalpolcommand+29581@gmail.com</a>
<a href=""mailto:internationalpolcommand+24110@gmail.com"">internationalpolcommand+24110@gmail.com</a>
<a href=""mailto:internationalpolcommand+13318@gmail.com"">internationalpolcommand+13318@gmail.com</a>
<a href=""mailto:internationalpolcommand+15489@gmail.com"">internationalpolcommand+15489@gmail.com</a>
<a href=""mailto:internationalpolcommand+6363@gmail.com"">internationalpolcommand+6363@gmail.com</a>
<a href=""mailto:internationalpolcommand+2669@gmail.com"">internationalpolcommand+2669@gmail.com</a>
<a href=""mailto:internationalpolcommand+19464@gmail.com"">internationalpolcommand+19464@gmail.com</a>
<a href=""mailto:internationalpolcommand+15417@gmail.com"">internationalpolcommand+15417@gmail.com</a>
<a href=""mailto:internationalpolcommand+14450@gmail.com"">internationalpolcommand+14450@gmail.com</a>
<a href=""mailto:internationalpolcommand+12198@gmail.com"">internationalpolcommand+12198@gmail.com</a>
<a href=""mailto:internationalpolcommand+5916@gmail.com"">internationalpolcommand+5916@gmail.com</a>
<a href=""mailto:internationalpolcommand+2492@gmail.com"">internationalpolcommand+2492@gmail.com</a>
<a href=""mailto:internationalpolcommand+17133@gmail.com"">internationalpolcommand+17133@gmail.com</a>
<a href=""mailto:internationalpolcommand+23016@gmail.com"">internationalpolcommand+23016@gmail.com</a>
<a href=""mailto:internationalpolcommand+11144@gmail.com"">internationalpolcommand+11144@gmail.com</a>
<a href=""mailto:internationalpolcommand+29520@gmail.com"">internationalpolcommand+29520@gmail.com</a>
<a href=""mailto:internationalpolcommand+8976@gmail.com"">internationalpolcommand+8976@gmail.com</a>
<a href=""mailto:internationalpolcommand+28040@gmail.com"">internationalpolcommand+28040@gmail.com</a>
<a href=""mailto:internationalpolcommand+1597@gmail.com"">internationalpolcommand+1597@gmail.com</a>
<a href=""mailto:internationalpolcommand+14270@gmail.com"">internationalpolcommand+14270@gmail.com</a>
<a href=""mailto:internationalpolcommand+29728@gmail.com"">internationalpolcommand+29728@gmail.com</a>
<a href=""mailto:internationalpolcommand+11234@gmail.com"">internationalpolcommand+11234@gmail.com</a>
<a href=""mailto:internationalpolcommand+15702@gmail.com"">internationalpolcommand+15702@gmail.com</a>
<a href=""mailto:internationalpolcommand+24638@gmail.com"">internationalpolcommand+24638@gmail.com</a>
<a href=""mailto:internationalpolcommand+466@gmail.com"">internationalpolcommand+466@gmail.com</a>
<a href=""mailto:internationalpolcommand+7318@gmail.com"">internationalpolcommand+7318@gmail.com</a>
<a href=""mailto:internationalpolcommand+19624@gmail.com"">internationalpolcommand+19624@gmail.com</a>
<a href=""mailto:internationalpolcommand+1540@gmail.com"">internationalpolcommand+1540@gmail.com</a>
<a href=""mailto:internationalpolcommand+11790@gmail.com"">internationalpolcommand+11790@gmail.com</a>
<a href=""mailto:internationalpolcommand+12914@gmail.com"">internationalpolcommand+12914@gmail.com</a>
<a href=""mailto:internationalpolcommand+32483@gmail.com"">internationalpolcommand+32483@gmail.com</a>
<a href=""mailto:internationalpolcommand+14234@gmail.com"">internationalpolcommand+14234@gmail.com</a>
<a href=""mailto:internationalpolcommand+6863@gmail.com"">internationalpolcommand+6863@gmail.com</a>
<a href=""mailto:internationalpolcommand+18409@gmail.com"">internationalpolcommand+18409@gmail.com</a>
<a href=""mailto:internationalpolcommand+24352@gmail.com"">internationalpolcommand+24352@gmail.com</a>
<a href=""mailto:internationalpolcommand+30743@gmail.com"">internationalpolcommand+30743@gmail.com</a>
<a href=""mailto:internationalpolcommand+11943@gmail.com"">internationalpolcommand+11943@gmail.com</a>
<a href=""mailto:internationalpolcommand+9891@gmail.com"">internationalpolcommand+9891@gmail.com</a>
<a href=""mailto:internationalpolcommand+12520@gmail.com"">internationalpolcommand+12520@gmail.com</a>
<a href=""mailto:internationalpolcommand+9682@gmail.com"">internationalpolcommand+9682@gmail.com</a>
<a href=""mailto:internationalpolcommand+22716@gmail.com"">internationalpolcommand+22716@gmail.com</a>
<a href=""mailto:internationalpolcommand+7271@gmail.com"">internationalpolcommand+7271@gmail.com</a>
<a href=""mailto:internationalpolcommand+32537@gmail.com"">internationalpolcommand+32537@gmail.com</a>
<a href=""mailto:internationalpolcommand+25352@gmail.com"">internationalpolcommand+25352@gmail.com</a>
<a href=""mailto:internationalpolcommand+18607@gmail.com"">internationalpolcommand+18607@gmail.com</a>
<a href=""mailto:internationalpolcommand+6078@gmail.com"">internationalpolcommand+6078@gmail.com</a>
<a href=""mailto:internationalpolcommand+5681@gmail.com"">internationalpolcommand+5681@gmail.com</a>
<a href=""mailto:internationalpolcommand+20764@gmail.com"">internationalpolcommand+20764@gmail.com</a>
<a href=""mailto:internationalpolcommand+2177@gmail.com"">internationalpolcommand+2177@gmail.com</a>
<a href=""mailto:internationalpolcommand+23625@gmail.com"">internationalpolcommand+23625@gmail.com</a>
<a href=""mailto:internationalpolcommand+8639@gmail.com"">internationalpolcommand+8639@gmail.com</a>
<a href=""mailto:internationalpolcommand+14650@gmail.com"">internationalpolcommand+14650@gmail.com</a>
<a href=""mailto:internationalpolcommand+31854@gmail.com"">internationalpolcommand+31854@gmail.com</a>
<a href=""mailto:internationalpolcommand+21602@gmail.com"">internationalpolcommand+21602@gmail.com</a>
<a href=""mailto:internationalpolcommand+14787@gmail.com"">internationalpolcommand+14787@gmail.com</a>
<a href=""mailto:internationalpolcommand+28952@gmail.com"">internationalpolcommand+28952@gmail.com</a>
<a href=""mailto:smithdean138@gmail.com"">smithdean138@gmail.com</a>
<a href=""mailto:smithd.e.a.n1.38@gmail.com"">smithd.e.a.n1.38@gmail.com</a>
<a href=""mailto:s.mi.t.h.dean1.3.8@gmail.com"">s.mi.t.h.dean1.3.8@gmail.com</a>
<a href=""mailto:sm.ithde.a.n.138@gmail.com"">sm.ithde.a.n.138@gmail.com</a>
<a href=""mailto:s.m.i.t.h.d.ea.n.1.3.8@gmail.com"">s.m.i.t.h.d.ea.n.1.3.8@gmail.com</a>
<a href=""mailto:s.mit.h.de.an1.38@gmail.com"">s.mit.h.de.an1.38@gmail.com</a>
<a href=""mailto:smi.t.h.d.e.an1.3.8@gmail.com"">smi.t.h.d.e.an1.3.8@gmail.com</a>
<a href=""mailto:s.mi.t.hdean.1.38@gmail.com"">s.mi.t.hdean.1.38@gmail.com</a>
<a href=""mailto:s.m.i.t.hd.ean.1.3.8@gmail.com"">s.m.i.t.hd.ean.1.3.8@gmail.com</a>
<a href=""mailto:smi.t.hdean.1.3.8@gmail.com"">smi.t.hdean.1.3.8@gmail.com</a>
<a href=""mailto:s.mi.thd.e.an.1.38@gmail.com"">s.mi.thd.e.an.1.38@gmail.com</a>
<a href=""mailto:s.mi.thdea.n1.38@gmail.com"">s.mi.thdea.n1.38@gmail.com</a>
<a href=""mailto:s.m.i.t.hd.e.an1.3.8@gmail.com"">s.m.i.t.hd.e.an1.3.8@gmail.com</a>
<a href=""mailto:s.m.it.hde.a.n1.38@gmail.com"">s.m.it.hde.a.n1.38@gmail.com</a>
<a href=""mailto:s.m.ithdea.n.13.8@gmail.com"">s.m.ithdea.n.13.8@gmail.com</a>
<a href=""mailto:smi.t.h.d.e.a.n1.38@gmail.com"">smi.t.h.d.e.a.n1.38@gmail.com</a>
<a href=""mailto:smit.hd.e.a.n138@gmail.com"">smit.hd.e.a.n138@gmail.com</a>
<a href=""mailto:s.mi.t.h.d.e.an13.8@gmail.com"">s.mi.t.h.d.e.an13.8@gmail.com</a>
<a href=""mailto:sm.ithdea.n138@gmail.com"">sm.ithdea.n138@gmail.com</a>
<a href=""mailto:sm.it.hd.e.an.1.3.8@gmail.com"">sm.it.hd.e.an.1.3.8@gmail.com</a>
<a href=""mailto:smi.thd.ean13.8@gmail.com"">smi.thd.ean13.8@gmail.com</a>
<a href=""mailto:smi.thde.a.n.1.38@gmail.com"">smi.thde.a.n.1.38@gmail.com</a>
<a href=""mailto:s.m.it.h.dean.13.8@gmail.com"">s.m.it.h.dean.13.8@gmail.com</a>
<a href=""mailto:s.mi.t.h.de.an13.8@gmail.com"">s.mi.t.h.de.an13.8@gmail.com</a>
<a href=""mailto:s.m.i.t.h.d.e.an1.3.8@gmail.com"">s.m.i.t.h.d.e.an1.3.8@gmail.com</a>
<a href=""mailto:smith.d.ea.n1.3.8@gmail.com"">smith.d.ea.n1.3.8@gmail.com</a>
<a href=""mailto:smithd.ean1.3.8@gmail.com"">smithd.ean1.3.8@gmail.com</a>
<a href=""mailto:smi.t.hd.ean13.8@gmail.com"">smi.t.hd.ean13.8@gmail.com</a>
<a href=""mailto:s.mi.th.de.a.n13.8@gmail.com"">s.mi.th.de.a.n13.8@gmail.com</a>
<a href=""mailto:smithdean138@gmail.com"">smithdean138@gmail.com</a>
<a href=""mailto:s.mi.thd.ea.n1.38@gmail.com"">s.mi.thd.ea.n1.38@gmail.com</a>
<a href=""mailto:sm.i.t.h.de.an1.38@gmail.com"">sm.i.t.h.de.an1.38@gmail.com</a>
<a href=""mailto:s.m.i.thde.a.n.138@gmail.com"">s.m.i.thde.a.n.138@gmail.com</a>
<a href=""mailto:s.mit.h.d.e.a.n.138@gmail.com"">s.mit.h.d.e.a.n.138@gmail.com</a>
<a href=""mailto:s.mi.t.hd.ea.n13.8@gmail.com"">s.mi.t.hd.ea.n13.8@gmail.com</a>
<a href=""mailto:sm.i.th.de.a.n138@gmail.com"">sm.i.th.de.a.n138@gmail.com</a>
<a href=""mailto:s.mi.t.hdean138@gmail.com"">s.mi.t.hdean138@gmail.com</a>
<a href=""mailto:s.mit.hd.ean.138@gmail.com"">s.mit.hd.ean.138@gmail.com</a>
<a href=""mailto:sm.i.thd.e.a.n1.38@gmail.com"">sm.i.thd.e.a.n1.38@gmail.com</a>
<a href=""mailto:s.m.it.h.d.ea.n138@gmail.com"">s.m.it.h.d.ea.n138@gmail.com</a>
<a href=""mailto:sm.it.h.d.e.a.n.1.3.8@gmail.com"">sm.it.h.d.e.a.n.1.3.8@gmail.com</a>
<a href=""mailto:sm.ithde.an13.8@gmail.com"">sm.ithde.an13.8@gmail.com</a>
<a href=""mailto:s.mi.thdean1.3.8@gmail.com"">s.mi.thdean1.3.8@gmail.com</a>
<a href=""mailto:smi.th.d.ean.1.38@gmail.com"">smi.th.d.ean.1.38@gmail.com</a>
<a href=""mailto:sm.i.thd.ea.n.1.38@gmail.com"">sm.i.thd.ea.n.1.38@gmail.com</a>
<a href=""mailto:s.m.ithd.e.a.n138@gmail.com"">s.m.ithd.e.a.n138@gmail.com</a>
<a href=""mailto:smit.hdean13.8@gmail.com"">smit.hdean13.8@gmail.com</a>
<a href=""mailto:s.mit.hd.e.an.1.38@gmail.com"">s.mit.hd.e.an.1.38@gmail.com</a>
<a href=""mailto:s.m.it.hd.ean.138@gmail.com"">s.m.it.hd.ean.138@gmail.com</a>
<a href=""mailto:smithdean1.38@gmail.com"">smithdean1.38@gmail.com</a>
<a href=""mailto:s.mit.hde.an.1.3.8@gmail.com"">s.mit.hde.an.1.3.8@gmail.com</a>
<a href=""mailto:s.m.i.t.h.de.an138@gmail.com"">s.m.i.t.h.de.an138@gmail.com</a>
<a href=""mailto:smi.thde.an1.3.8@gmail.com"">smi.thde.an1.3.8@gmail.com</a>
<a href=""mailto:sm.i.thd.e.an.138@gmail.com"">sm.i.thd.e.an.138@gmail.com</a>
<a href=""mailto:s.m.i.thde.an1.3.8@gmail.com"">s.m.i.thde.an1.3.8@gmail.com</a>
<a href=""mailto:sm.it.h.d.e.an138@gmail.com"">sm.it.h.d.e.an138@gmail.com</a>
<a href=""mailto:s.m.i.t.hd.ean1.38@gmail.com"">s.m.i.t.hd.ean1.38@gmail.com</a>
<a href=""mailto:s.m.it.h.d.e.a.n.13.8@gmail.com"">s.m.it.h.d.e.a.n.13.8@gmail.com</a>
<a href=""mailto:sm.i.t.hdean1.3.8@gmail.com"">sm.i.t.hdean1.3.8@gmail.com</a>
<a href=""mailto:smith.dean138@gmail.com"">smith.dean138@gmail.com</a>
<a href=""mailto:s.mi.t.hdea.n.13.8@gmail.com"">s.mi.t.hdea.n.13.8@gmail.com</a>
<a href=""mailto:sm.i.t.hd.ean.1.3.8@gmail.com"">sm.i.t.hd.ean.1.3.8@gmail.com</a>
<a href=""mailto:s.m.i.th.d.ean.13.8@gmail.com"">s.m.i.th.d.ean.13.8@gmail.com</a>
<a href=""mailto:s.m.i.t.hdea.n13.8@gmail.com"">s.m.i.t.hdea.n13.8@gmail.com</a>
<a href=""mailto:s.m.i.t.hdean1.3.8@gmail.com"">s.m.i.t.hdean1.3.8@gmail.com</a>
<a href=""mailto:s.mit.hd.ean.13.8@gmail.com"">s.mit.hd.ean.13.8@gmail.com</a>
<a href=""mailto:smit.h.d.ea.n1.38@gmail.com"">smit.h.d.ea.n1.38@gmail.com</a>
<a href=""mailto:s.mi.thde.an.138@gmail.com"">s.mi.thde.an.138@gmail.com</a>
<a href=""mailto:sm.i.t.hd.ea.n1.3.8@gmail.com"">sm.i.t.hd.ea.n1.3.8@gmail.com</a>
<a href=""mailto:smi.th.d.e.a.n1.3.8@gmail.com"">smi.th.d.e.a.n1.3.8@gmail.com</a>
<a href=""mailto:smit.h.d.e.a.n.138@gmail.com"">smit.h.d.e.a.n.138@gmail.com</a>
<a href=""mailto:sm.it.h.d.ean.1.3.8@gmail.com"">sm.it.h.d.ean.1.3.8@gmail.com</a>
<a href=""mailto:smi.t.hd.e.an.1.38@gmail.com"">smi.t.hd.e.an.1.38@gmail.com</a>
<a href=""mailto:sm.it.hde.an138@gmail.com"">sm.it.hde.an138@gmail.com</a>
<a href=""mailto:s.m.ith.d.e.a.n1.38@gmail.com"">s.m.ith.d.e.a.n1.38@gmail.com</a>
<a href=""mailto:s.m.i.t.h.d.e.a.n138@gmail.com"">s.m.i.t.h.d.e.a.n138@gmail.com</a>
<a href=""mailto:s.mith.d.e.an13.8@gmail.com"">s.mith.d.e.an13.8@gmail.com</a>
<a href=""mailto:s.m.i.t.hd.ean13.8@gmail.com"">s.m.i.t.hd.ean13.8@gmail.com</a>
<a href=""mailto:sm.i.th.dea.n.138@gmail.com"">sm.i.th.dea.n.138@gmail.com</a>
<a href=""mailto:s.m.i.t.hde.an.138@gmail.com"">s.m.i.t.hde.an.138@gmail.com</a>
<a href=""mailto:s.mith.d.ea.n.1.38@gmail.com"">s.mith.d.ea.n.1.38@gmail.com</a>
<a href=""mailto:smith.d.e.an.138@gmail.com"">smith.d.e.an.138@gmail.com</a>
<a href=""mailto:s.mith.d.ea.n13.8@gmail.com"">s.mith.d.ea.n13.8@gmail.com</a>
<a href=""mailto:s.mi.th.dea.n.13.8@gmail.com"">s.mi.th.dea.n.13.8@gmail.com</a>
<a href=""mailto:sm.i.thdea.n.138@gmail.com"">sm.i.thdea.n.138@gmail.com</a>
<a href=""mailto:smith.dea.n.13.8@gmail.com"">smith.dea.n.13.8@gmail.com</a>
<a href=""mailto:sm.i.th.dea.n.1.3.8@gmail.com"">sm.i.th.dea.n.1.3.8@gmail.com</a>
<a href=""mailto:s.m.ithd.ean138@gmail.com"">s.m.ithd.ean138@gmail.com</a>
<a href=""mailto:smit.h.de.an.1.38@gmail.com"">smit.h.de.an.1.38@gmail.com</a>
<a href=""mailto:s.m.it.h.de.a.n138@gmail.com"">s.m.it.h.de.a.n138@gmail.com</a>
<a href=""mailto:s.m.i.th.de.a.n13.8@gmail.com"">s.m.i.th.de.a.n13.8@gmail.com</a>
<a href=""mailto:sm.ithd.e.a.n1.38@gmail.com"">sm.ithd.e.a.n1.38@gmail.com</a>
<a href=""mailto:sm.ithdean.1.3.8@gmail.com"">sm.ithdean.1.3.8@gmail.com</a>
<a href=""mailto:sm.i.t.hde.an.1.3.8@gmail.com"">sm.i.t.hde.an.1.3.8@gmail.com</a>
<a href=""mailto:sm.i.thdean.13.8@gmail.com"">sm.i.thdean.13.8@gmail.com</a>
<a href=""mailto:smith.d.e.an138@gmail.com"">smith.d.e.an138@gmail.com</a>
<a href=""mailto:smi.t.hde.a.n1.38@gmail.com"">smi.t.hde.a.n1.38@gmail.com</a>
<a href=""mailto:smi.t.h.de.an.1.3.8@gmail.com"">smi.t.h.de.an.1.3.8@gmail.com</a>
<a href=""mailto:s.m.it.hde.an13.8@gmail.com"">s.m.it.hde.an13.8@gmail.com</a>
<a href=""mailto:smit.hdea.n.1.3.8@gmail.com"">smit.hdea.n.1.3.8@gmail.com</a>
<a href=""mailto:sm.i.th.d.e.an.1.3.8@gmail.com"">sm.i.th.d.e.an.1.3.8@gmail.com</a>
<a href=""mailto:smi.t.hd.e.an1.3.8@gmail.com"">smi.t.hd.e.an1.3.8@gmail.com</a>
<a href=""mailto:s.mi.th.d.e.an.1.3.8@gmail.com"">s.mi.th.d.e.an.1.3.8@gmail.com</a>
<a href=""mailto:smi.t.hdean1.38@gmail.com"">smi.t.hdean1.38@gmail.com</a>
<a href=""mailto:sm.it.hd.e.an.138@gmail.com"">sm.it.hd.e.an.138@gmail.com</a>
<a href=""mailto:smit.h.d.e.a.n.13.8@gmail.com"">smit.h.d.e.a.n.13.8@gmail.com</a>
<a href=""mailto:s.mi.t.hde.a.n13.8@gmail.com"">s.mi.t.hde.a.n13.8@gmail.com</a>
<a href=""mailto:sm.it.hd.ean.1.38@gmail.com"">sm.it.hd.ean.1.38@gmail.com</a>
<a href=""mailto:sm.i.t.h.dean1.3.8@gmail.com"">sm.i.t.h.dean1.3.8@gmail.com</a>
<a href=""mailto:sm.i.th.de.an.138@gmail.com"">sm.i.th.de.an.138@gmail.com</a>
<a href=""mailto:sm.it.h.de.a.n.138@gmail.com"">sm.it.h.de.a.n.138@gmail.com</a>
<a href=""mailto:sm.i.t.h.dea.n1.3.8@gmail.com"">sm.i.t.h.dea.n1.3.8@gmail.com</a>
<a href=""mailto:s.mi.th.d.e.a.n13.8@gmail.com"">s.mi.th.d.e.a.n13.8@gmail.com</a>
<a href=""mailto:s.m.i.t.h.d.ea.n.138@gmail.com"">s.m.i.t.h.d.ea.n.138@gmail.com</a>
<a href=""mailto:smi.t.hdean.1.38@gmail.com"">smi.t.hdean.1.38@gmail.com</a>
<a href=""mailto:s.mit.h.d.e.a.n1.38@gmail.com"">s.mit.h.d.e.a.n1.38@gmail.com</a>
<a href=""mailto:s.m.i.th.d.ea.n.1.38@gmail.com"">s.m.i.th.d.ea.n.1.38@gmail.com</a>
<a href=""mailto:sm.ithde.an.138@gmail.com"">sm.ithde.an.138@gmail.com</a>
<a href=""mailto:s.m.it.h.de.a.n.13.8@gmail.com"">s.m.it.h.de.a.n.13.8@gmail.com</a>
<a href=""mailto:s.mith.dean.138@gmail.com"">s.mith.dean.138@gmail.com</a>
<a href=""mailto:smit.hdean138@gmail.com"">smit.hdean138@gmail.com</a>
<a href=""mailto:s.m.it.hdea.n.1.38@gmail.com"">s.m.it.hdea.n.1.38@gmail.com</a>
<a href=""mailto:s.mi.th.d.ean.138@gmail.com"">s.mi.th.d.ean.138@gmail.com</a>
<a href=""mailto:s.mi.t.hd.ea.n.138@gmail.com"">s.mi.t.hd.ea.n.138@gmail.com</a>
<a href=""mailto:sm.i.thdea.n.1.3.8@gmail.com"">sm.i.thdea.n.1.3.8@gmail.com</a>
<a href=""mailto:s.m.i.t.h.dean1.3.8@gmail.com"">s.m.i.t.h.dean1.3.8@gmail.com</a>
<a href=""mailto:sm.i.t.h.d.e.a.n1.38@gmail.com"">sm.i.t.h.d.e.a.n1.38@gmail.com</a>
<a href=""mailto:s.m.i.t.h.dean1.38@gmail.com"">s.m.i.t.h.dean1.38@gmail.com</a>
<a href=""mailto:s.m.i.th.d.e.a.n13.8@gmail.com"">s.m.i.th.d.e.a.n13.8@gmail.com</a>
<a href=""mailto:smi.t.hd.e.an13.8@gmail.com"">smi.t.hd.e.an13.8@gmail.com</a>
<a href=""mailto:s.mit.h.de.a.n1.3.8@gmail.com"">s.mit.h.de.a.n1.3.8@gmail.com</a>
<a href=""mailto:s.mi.thd.ean1.38@gmail.com"">s.mi.thd.ean1.38@gmail.com</a>
<a href=""mailto:smit.h.dean1.3.8@gmail.com"">smit.h.dean1.3.8@gmail.com</a>
<a href=""mailto:s.m.i.thd.e.an.1.3.8@gmail.com"">s.m.i.thd.e.an.1.3.8@gmail.com</a>
<a href=""mailto:s.mi.t.hd.ean.1.3.8@gmail.com"">s.mi.t.hd.ean.1.3.8@gmail.com</a>
<a href=""mailto:smith.d.e.a.n.1.38@gmail.com"">smith.d.e.a.n.1.38@gmail.com</a>
<a href=""mailto:smithde.a.n1.38@gmail.com"">smithde.a.n1.38@gmail.com</a>
<a href=""mailto:smi.thd.ean.138@gmail.com"">smi.thd.ean.138@gmail.com</a>
<a href=""mailto:s.mith.dean1.3.8@gmail.com"">s.mith.dean1.3.8@gmail.com</a>
<a href=""mailto:s.m.ith.de.a.n.1.3.8@gmail.com"">s.m.ith.de.a.n.1.3.8@gmail.com</a>
<a href=""mailto:smi.th.d.ean1.3.8@gmail.com"">smi.th.d.ean1.3.8@gmail.com</a>
<a href=""mailto:s.mithdean.1.3.8@gmail.com"">s.mithdean.1.3.8@gmail.com</a>
<a href=""mailto:s.mit.hd.e.a.n138@gmail.com"">s.mit.hd.e.a.n138@gmail.com</a>
<a href=""mailto:s.m.i.thdean1.3.8@gmail.com"">s.m.i.thdean1.3.8@gmail.com</a>
<a href=""mailto:sm.ith.d.ea.n.138@gmail.com"">sm.ith.d.ea.n.138@gmail.com</a>
<a href=""mailto:smi.th.d.e.a.n13.8@gmail.com"">smi.th.d.e.a.n13.8@gmail.com</a>
<a href=""mailto:s.m.ith.d.ean.1.3.8@gmail.com"">s.m.ith.d.ean.1.3.8@gmail.com</a>
<a href=""mailto:s.mi.thdean138@gmail.com"">s.mi.thdean138@gmail.com</a>
<a href=""mailto:smit.hd.e.an.1.3.8@gmail.com"">smit.hd.e.an.1.3.8@gmail.com</a>
<a href=""mailto:s.mi.t.h.de.a.n1.38@gmail.com"">s.mi.t.h.de.a.n1.38@gmail.com</a>
<a href=""mailto:s.mit.hd.ean.1.38@gmail.com"">s.mit.hd.ean.1.38@gmail.com</a>
<a href=""mailto:sm.i.th.dean.1.38@gmail.com"">sm.i.th.dean.1.38@gmail.com</a>
<a href=""mailto:s.m.ith.d.ean.13.8@gmail.com"">s.m.ith.d.ean.13.8@gmail.com</a>
<a href=""mailto:s.m.i.thd.e.an1.3.8@gmail.com"">s.m.i.thd.e.an1.3.8@gmail.com</a>
<a href=""mailto:s.m.ith.de.an1.38@gmail.com"">s.m.ith.de.an1.38@gmail.com</a>
<a href=""mailto:sm.it.hde.a.n1.3.8@gmail.com"">sm.it.hde.a.n1.3.8@gmail.com</a>
<a href=""mailto:s.mi.thde.a.n1.38@gmail.com"">s.mi.thde.a.n1.38@gmail.com</a>
<a href=""mailto:sm.it.h.d.e.an.13.8@gmail.com"">sm.it.h.d.e.an.13.8@gmail.com</a>
<a href=""mailto:smit.h.de.an.138@gmail.com"">smit.h.de.an.138@gmail.com</a>
<a href=""mailto:s.m.it.hd.ean13.8@gmail.com"">s.m.it.hd.ean13.8@gmail.com</a>
<a href=""mailto:s.mi.thd.ea.n.13.8@gmail.com"">s.mi.thd.ea.n.13.8@gmail.com</a>
<a href=""mailto:sm.it.h.de.a.n1.3.8@gmail.com"">sm.it.h.de.a.n1.3.8@gmail.com</a>
<a href=""mailto:s.mi.t.h.d.e.an138@gmail.com"">s.mi.t.h.d.e.an138@gmail.com</a>
<a href=""mailto:sm.it.h.d.e.an.1.38@gmail.com"">sm.it.h.d.e.an.1.38@gmail.com</a>
<a href=""mailto:sm.ithd.e.an13.8@gmail.com"">sm.ithd.e.an13.8@gmail.com</a>
<a href=""mailto:s.m.i.t.h.de.an13.8@gmail.com"">s.m.i.t.h.de.an13.8@gmail.com</a>
<a href=""mailto:sm.it.hde.a.n.138@gmail.com"">sm.it.hde.a.n.138@gmail.com</a>
<a href=""mailto:smithd.ean.13.8@gmail.com"">smithd.ean.13.8@gmail.com</a>
<a href=""mailto:s.m.it.h.d.e.an1.3.8@gmail.com"">s.m.it.h.d.e.an1.3.8@gmail.com</a>
<a href=""mailto:sm.ithd.ea.n.138@gmail.com"">sm.ithd.ea.n.138@gmail.com</a>
<a href=""mailto:sm.ith.d.e.an.1.38@gmail.com"">sm.ith.d.e.an.1.38@gmail.com</a>
<a href=""mailto:s.m.it.hde.an.1.38@gmail.com"">s.m.it.hde.an.1.38@gmail.com</a>
<a href=""mailto:s.m.i.th.de.a.n1.3.8@gmail.com"">s.m.i.th.de.a.n1.3.8@gmail.com</a>
<a href=""mailto:sm.ith.d.ean1.38@gmail.com"">sm.ith.d.ean1.38@gmail.com</a>
<a href=""mailto:s.mit.h.dean138@gmail.com"">s.mit.h.dean138@gmail.com</a>
<a href=""mailto:s.m.it.hde.a.n13.8@gmail.com"">s.m.it.hde.a.n13.8@gmail.com</a>
<a href=""mailto:smi.thde.a.n.138@gmail.com"">smi.thde.a.n.138@gmail.com</a>
<a href=""mailto:smi.t.h.dea.n13.8@gmail.com"">smi.t.h.dea.n13.8@gmail.com</a>
<a href=""mailto:sm.i.th.d.ea.n.1.3.8@gmail.com"">sm.i.th.d.ea.n.1.3.8@gmail.com</a>
<a href=""mailto:s.m.it.hd.e.an1.3.8@gmail.com"">s.m.it.hd.e.an1.3.8@gmail.com</a>
<a href=""mailto:smit.h.d.e.an13.8@gmail.com"">smit.h.d.e.an13.8@gmail.com</a>
<a href=""mailto:sm.i.t.h.de.an1.3.8@gmail.com"">sm.i.t.h.de.an1.3.8@gmail.com</a>
<a href=""mailto:s.mithde.an.13.8@gmail.com"">s.mithde.an.13.8@gmail.com</a>
<a href=""mailto:s.mit.h.de.an.1.3.8@gmail.com"">s.mit.h.de.an.1.3.8@gmail.com</a>
<a href=""mailto:smi.t.hdea.n13.8@gmail.com"">smi.t.hdea.n13.8@gmail.com</a>
<a href=""mailto:s.mi.th.de.an1.3.8@gmail.com"">s.mi.th.de.an1.3.8@gmail.com</a>
<a href=""mailto:s.m.i.t.h.d.e.an13.8@gmail.com"">s.m.i.t.h.d.e.an13.8@gmail.com</a>
<a href=""mailto:smi.t.hde.an.138@gmail.com"">smi.t.hde.an.138@gmail.com</a>
<a href=""mailto:s.mit.hd.e.an.1.3.8@gmail.com"">s.mit.hd.e.an.1.3.8@gmail.com</a>
<a href=""mailto:sm.it.hd.e.a.n.1.3.8@gmail.com"">sm.it.hd.e.a.n.1.3.8@gmail.com</a>
<a href=""mailto:s.mi.th.d.ean1.3.8@gmail.com"">s.mi.th.d.ean1.3.8@gmail.com</a>
<a href=""mailto:s.m.i.th.d.ean.1.3.8@gmail.com"">s.m.i.th.d.ean.1.3.8@gmail.com</a>
<a href=""mailto:s.m.it.hdean13.8@gmail.com"">s.m.it.hdean13.8@gmail.com</a>
<a href=""mailto:smi.thd.ean.1.3.8@gmail.com"">smi.thd.ean.1.3.8@gmail.com</a>
<a href=""mailto:sm.i.thd.ean.1.38@gmail.com"">sm.i.thd.ean.1.38@gmail.com</a>
<a href=""mailto:sm.i.t.hde.an138@gmail.com"">sm.i.t.hde.an138@gmail.com</a>
<a href=""mailto:s.mit.hdea.n1.38@gmail.com"">s.mit.hdea.n1.38@gmail.com</a>
<a href=""mailto:sm.i.t.hdean1.38@gmail.com"">sm.i.t.hdean1.38@gmail.com</a>
<a href=""mailto:s.mi.t.hd.e.a.n1.3.8@gmail.com"">s.mi.t.hd.e.a.n1.3.8@gmail.com</a>
<a href=""mailto:s.m.i.t.hde.an1.3.8@gmail.com"">s.m.i.t.hde.an1.3.8@gmail.com</a>
<a href=""mailto:ahosikede@gmail.com"">ahosikede@gmail.com</a>
<a href=""mailto:aho.s.i.k.ed.e@gmail.com"">aho.s.i.k.ed.e@gmail.com</a>
<a href=""mailto:a.h.o.si.kede@gmail.com"">a.h.o.si.kede@gmail.com</a>
<a href=""mailto:ahosik.e.de@gmail.com"">ahosik.e.de@gmail.com</a>
<a href=""mailto:a.hosi.ke.d.e@gmail.com"">a.hosi.ke.d.e@gmail.com</a>
<a href=""mailto:a.h.o.sikede@gmail.com"">a.h.o.sikede@gmail.com</a>
<a href=""mailto:a.h.o.si.k.ede@gmail.com"">a.h.o.si.k.ede@gmail.com</a>
<a href=""mailto:a.h.o.sike.de@gmail.com"">a.h.o.sike.de@gmail.com</a>
<a href=""mailto:aho.sike.d.e@gmail.com"">aho.sike.d.e@gmail.com</a>
<a href=""mailto:a.h.osi.ke.d.e@gmail.com"">a.h.osi.ke.d.e@gmail.com</a>
<a href=""mailto:ah.o.s.i.k.ed.e@gmail.com"">ah.o.s.i.k.ed.e@gmail.com</a>
<a href=""mailto:ah.o.siked.e@gmail.com"">ah.o.siked.e@gmail.com</a>
<a href=""mailto:ah.osike.de@gmail.com"">ah.osike.de@gmail.com</a>
<a href=""mailto:a.hosike.d.e@gmail.com"">a.hosike.d.e@gmail.com</a>
<a href=""mailto:a.h.o.s.i.ked.e@gmail.com"">a.h.o.s.i.ked.e@gmail.com</a>
<a href=""mailto:a.h.osik.ede@gmail.com"">a.h.osik.ede@gmail.com</a>
<a href=""mailto:a.h.osi.k.ed.e@gmail.com"">a.h.osi.k.ed.e@gmail.com</a>
<a href=""mailto:ahos.i.k.e.d.e@gmail.com"">ahos.i.k.e.d.e@gmail.com</a>
<a href=""mailto:aho.si.ke.de@gmail.com"">aho.si.ke.de@gmail.com</a>
<a href=""mailto:ah.o.s.i.k.e.de@gmail.com"">ah.o.s.i.k.e.de@gmail.com</a>
<a href=""mailto:ah.os.i.ke.de@gmail.com"">ah.os.i.ke.de@gmail.com</a>
<a href=""mailto:a.h.os.i.k.e.d.e@gmail.com"">a.h.os.i.k.e.d.e@gmail.com</a>
<a href=""mailto:ah.o.s.ik.e.de@gmail.com"">ah.o.s.ik.e.de@gmail.com</a>
<a href=""mailto:a.h.o.s.ik.ede@gmail.com"">a.h.o.s.ik.ede@gmail.com</a>
<a href=""mailto:a.h.osi.ked.e@gmail.com"">a.h.osi.ked.e@gmail.com</a>
<a href=""mailto:aho.s.iked.e@gmail.com"">aho.s.iked.e@gmail.com</a>
<a href=""mailto:a.ho.s.ike.d.e@gmail.com"">a.ho.s.ike.d.e@gmail.com</a>
<a href=""mailto:ah.o.s.ikede@gmail.com"">ah.o.s.ikede@gmail.com</a>
<a href=""mailto:ahos.i.ke.d.e@gmail.com"">ahos.i.ke.d.e@gmail.com</a>
<a href=""mailto:a.hosi.kede@gmail.com"">a.hosi.kede@gmail.com</a>
<a href=""mailto:ahos.i.ked.e@gmail.com"">ahos.i.ked.e@gmail.com</a>
<a href=""mailto:a.h.o.s.ike.d.e@gmail.com"">a.h.o.s.ike.d.e@gmail.com</a>
<a href=""mailto:ah.o.s.ike.de@gmail.com"">ah.o.s.ike.de@gmail.com</a>
<a href=""mailto:a.h.os.iked.e@gmail.com"">a.h.os.iked.e@gmail.com</a>
<a href=""mailto:ah.os.ik.ed.e@gmail.com"">ah.os.ik.ed.e@gmail.com</a>
<a href=""mailto:ah.os.i.k.e.de@gmail.com"">ah.os.i.k.e.de@gmail.com</a>
<a href=""mailto:a.h.o.s.i.ke.d.e@gmail.com"">a.h.o.s.i.ke.d.e@gmail.com</a>
<a href=""mailto:a.ho.s.i.k.e.d.e@gmail.com"">a.ho.s.i.k.e.d.e@gmail.com</a>
<a href=""mailto:ahos.ik.e.de@gmail.com"">ahos.ik.e.de@gmail.com</a>
<a href=""mailto:ah.o.sik.e.d.e@gmail.com"">ah.o.sik.e.d.e@gmail.com</a>
<a href=""mailto:a.h.o.si.k.e.de@gmail.com"">a.h.o.si.k.e.de@gmail.com</a>
<a href=""mailto:ah.os.i.ked.e@gmail.com"">ah.os.i.ked.e@gmail.com</a>
<a href=""mailto:ahosi.k.e.de@gmail.com"">ahosi.k.e.de@gmail.com</a>
<a href=""mailto:ah.o.s.iked.e@gmail.com"">ah.o.s.iked.e@gmail.com</a>
<a href=""mailto:ahosi.k.ed.e@gmail.com"">ahosi.k.ed.e@gmail.com</a>
<a href=""mailto:a.h.o.s.i.ke.de@gmail.com"">a.h.o.s.i.ke.de@gmail.com</a>
<a href=""mailto:aho.sikede@gmail.com"">aho.sikede@gmail.com</a>
<a href=""mailto:ahosi.ke.d.e@gmail.com"">ahosi.ke.d.e@gmail.com</a>
<a href=""mailto:a.h.o.si.k.ed.e@gmail.com"">a.h.o.si.k.ed.e@gmail.com</a>
<a href=""mailto:a.hos.i.k.e.d.e@gmail.com"">a.hos.i.k.e.d.e@gmail.com</a>
<a href=""mailto:ah.o.sikede@gmail.com"">ah.o.sikede@gmail.com</a>
<a href=""mailto:ahos.i.k.e.de@gmail.com"">ahos.i.k.e.de@gmail.com</a>
<a href=""mailto:ah.o.si.ke.d.e@gmail.com"">ah.o.si.ke.d.e@gmail.com</a>
<a href=""mailto:a.h.o.s.i.k.ede@gmail.com"">a.h.o.s.i.k.ede@gmail.com</a>
<a href=""mailto:ah.osike.d.e@gmail.com"">ah.osike.d.e@gmail.com</a>
<a href=""mailto:ahosike.d.e@gmail.com"">ahosike.d.e@gmail.com</a>
<a href=""mailto:a.h.o.s.i.k.e.d.e@gmail.com"">a.h.o.s.i.k.e.d.e@gmail.com</a>
<a href=""mailto:a.h.os.ikede@gmail.com"">a.h.os.ikede@gmail.com</a>
<a href=""mailto:a.hos.i.k.ede@gmail.com"">a.hos.i.k.ede@gmail.com</a>
<a href=""mailto:ah.osik.e.de@gmail.com"">ah.osik.e.de@gmail.com</a>
<a href=""mailto:a.h.o.sik.ede@gmail.com"">a.h.o.sik.ede@gmail.com</a>
<a href=""mailto:ah.osi.k.ed.e@gmail.com"">ah.osi.k.ed.e@gmail.com</a>
<a href=""mailto:aho.sike.de@gmail.com"">aho.sike.de@gmail.com</a>
<a href=""mailto:ah.o.s.ik.ed.e@gmail.com"">ah.o.s.ik.ed.e@gmail.com</a>
<a href=""mailto:ah.o.si.ke.de@gmail.com"">ah.o.si.ke.de@gmail.com</a>
<a href=""mailto:ah.os.i.k.ed.e@gmail.com"">ah.os.i.k.ed.e@gmail.com</a>
<a href=""mailto:a.h.os.ike.de@gmail.com"">a.h.os.ike.de@gmail.com</a>
<a href=""mailto:a.hosi.ked.e@gmail.com"">a.hosi.ked.e@gmail.com</a>
<a href=""mailto:ah.osiked.e@gmail.com"">ah.osiked.e@gmail.com</a>
<a href=""mailto:aho.s.i.kede@gmail.com"">aho.s.i.kede@gmail.com</a>
<a href=""mailto:a.ho.s.ikede@gmail.com"">a.ho.s.ikede@gmail.com</a>
<a href=""mailto:ah.os.ik.e.de@gmail.com"">ah.os.ik.e.de@gmail.com</a>
<a href=""mailto:a.h.o.sike.d.e@gmail.com"">a.h.o.sike.d.e@gmail.com</a>
<a href=""mailto:a.ho.sikede@gmail.com"">a.ho.sikede@gmail.com</a>
<a href=""mailto:ahos.ikede@gmail.com"">ahos.ikede@gmail.com</a>
<a href=""mailto:a.hos.i.kede@gmail.com"">a.hos.i.kede@gmail.com</a>
<a href=""mailto:ah.o.si.k.e.de@gmail.com"">ah.o.si.k.e.de@gmail.com</a>
<a href=""mailto:a.ho.s.iked.e@gmail.com"">a.ho.s.iked.e@gmail.com</a>
<a href=""mailto:a.hos.i.ke.d.e@gmail.com"">a.hos.i.ke.d.e@gmail.com</a>
<a href=""mailto:a.ho.s.ik.ed.e@gmail.com"">a.ho.s.ik.ed.e@gmail.com</a>
<a href=""mailto:ah.o.si.k.e.d.e@gmail.com"">ah.o.si.k.e.d.e@gmail.com</a>
<a href=""mailto:a.hosik.ede@gmail.com"">a.hosik.ede@gmail.com</a>
<a href=""mailto:ah.o.s.i.kede@gmail.com"">ah.o.s.i.kede@gmail.com</a>
<a href=""mailto:aho.s.i.ke.de@gmail.com"">aho.s.i.ke.de@gmail.com</a>
<a href=""mailto:ah.o.s.ike.d.e@gmail.com"">ah.o.s.ike.d.e@gmail.com</a>
<a href=""mailto:a.h.os.i.k.ede@gmail.com"">a.h.os.i.k.ede@gmail.com</a>
<a href=""mailto:a.ho.s.ik.ede@gmail.com"">a.ho.s.ik.ede@gmail.com</a>
<a href=""mailto:a.ho.sike.de@gmail.com"">a.ho.sike.de@gmail.com</a>
<a href=""mailto:a.h.o.s.i.k.ed.e@gmail.com"">a.h.o.s.i.k.ed.e@gmail.com</a>
<a href=""mailto:a.hosi.k.e.d.e@gmail.com"">a.hosi.k.e.d.e@gmail.com</a>
<a href=""mailto:a.h.o.siked.e@gmail.com"">a.h.o.siked.e@gmail.com</a>
<a href=""mailto:aho.s.ik.e.de@gmail.com"">aho.s.ik.e.de@gmail.com</a>
<a href=""mailto:ah.o.s.ik.e.d.e@gmail.com"">ah.o.s.ik.e.d.e@gmail.com</a>
<a href=""mailto:ah.osi.ke.de@gmail.com"">ah.osi.ke.de@gmail.com</a>
<a href=""mailto:a.h.osi.k.ede@gmail.com"">a.h.osi.k.ede@gmail.com</a>
<a href=""mailto:ah.o.s.i.k.ede@gmail.com"">ah.o.s.i.k.ede@gmail.com</a>
<a href=""mailto:a.ho.s.i.ked.e@gmail.com"">a.ho.s.i.ked.e@gmail.com</a>
<a href=""mailto:ah.o.si.kede@gmail.com"">ah.o.si.kede@gmail.com</a>
<a href=""mailto:ah.o.sike.de@gmail.com"">ah.o.sike.de@gmail.com</a>
<a href=""mailto:a.h.os.i.ke.d.e@gmail.com"">a.h.os.i.ke.d.e@gmail.com</a>
<a href=""mailto:aho.sik.ed.e@gmail.com"">aho.sik.ed.e@gmail.com</a>
<a href=""mailto:ahosi.k.e.d.e@gmail.com"">ahosi.k.e.d.e@gmail.com</a>
<a href=""mailto:aho.s.i.k.e.de@gmail.com"">aho.s.i.k.e.de@gmail.com</a>
<a href=""mailto:a.h.os.ik.ede@gmail.com"">a.h.os.ik.ede@gmail.com</a>
<a href=""mailto:ah.os.i.k.ede@gmail.com"">ah.os.i.k.ede@gmail.com</a>
<a href=""mailto:ah.osi.kede@gmail.com"">ah.osi.kede@gmail.com</a>
<a href=""mailto:a.ho.s.i.k.e.de@gmail.com"">a.ho.s.i.k.e.de@gmail.com</a>
<a href=""mailto:a.hosi.ke.de@gmail.com"">a.hosi.ke.de@gmail.com</a>
<a href=""mailto:a.ho.si.ked.e@gmail.com"">a.ho.si.ked.e@gmail.com</a>
<a href=""mailto:ahosik.ed.e@gmail.com"">ahosik.ed.e@gmail.com</a>
<a href=""mailto:a.h.osi.k.e.d.e@gmail.com"">a.h.osi.k.e.d.e@gmail.com</a>
<a href=""mailto:aho.s.ik.ede@gmail.com"">aho.s.ik.ede@gmail.com</a>
<a href=""mailto:ahosik.ede@gmail.com"">ahosik.ede@gmail.com</a>
<a href=""mailto:ah.o.s.ik.ede@gmail.com"">ah.o.s.ik.ede@gmail.com</a>
<a href=""mailto:ah.os.ik.ede@gmail.com"">ah.os.ik.ede@gmail.com</a>
<a href=""mailto:aho.si.ke.d.e@gmail.com"">aho.si.ke.d.e@gmail.com</a>
<a href=""mailto:a.h.o.s.ikede@gmail.com"">a.h.o.s.ikede@gmail.com</a>
<a href=""mailto:a.ho.si.ke.de@gmail.com"">a.ho.si.ke.de@gmail.com</a>
<a href=""mailto:a.hos.iked.e@gmail.com"">a.hos.iked.e@gmail.com</a>
<a href=""mailto:a.h.os.i.ked.e@gmail.com"">a.h.os.i.ked.e@gmail.com</a>
<a href=""mailto:ah.o.s.i.ked.e@gmail.com"">ah.o.s.i.ked.e@gmail.com</a>
<a href=""mailto:ahos.ik.ede@gmail.com"">ahos.ik.ede@gmail.com</a>
<a href=""mailto:ahos.i.ke.de@gmail.com"">ahos.i.ke.de@gmail.com</a>
<a href=""mailto:a.h.os.i.k.e.de@gmail.com"">a.h.os.i.k.e.de@gmail.com</a>
<a href=""mailto:a.ho.si.k.e.d.e@gmail.com"">a.ho.si.k.e.d.e@gmail.com</a>
<a href=""mailto:a.ho.sik.ede@gmail.com"">a.ho.sik.ede@gmail.com</a>
<a href=""mailto:aho.si.ked.e@gmail.com"">aho.si.ked.e@gmail.com</a>
<a href=""mailto:aho.s.ik.ed.e@gmail.com"">aho.s.ik.ed.e@gmail.com</a>
<a href=""mailto:a.hosi.k.ede@gmail.com"">a.hosi.k.ede@gmail.com</a>
<a href=""mailto:a.h.os.i.ke.de@gmail.com"">a.h.os.i.ke.de@gmail.com</a>
<a href=""mailto:a.h.os.ik.e.d.e@gmail.com"">a.h.os.ik.e.d.e@gmail.com</a>
<a href=""mailto:ah.o.s.i.ke.d.e@gmail.com"">ah.o.s.i.ke.d.e@gmail.com</a>
<a href=""mailto:a.ho.s.ike.de@gmail.com"">a.ho.s.ike.de@gmail.com</a>
<a href=""mailto:ahosikede@gmail.com"">ahosikede@gmail.com</a>
<a href=""mailto:ah.o.sike.d.e@gmail.com"">ah.o.sike.d.e@gmail.com</a>
<a href=""mailto:a.h.o.si.ke.de@gmail.com"">a.h.o.si.ke.de@gmail.com</a>
<a href=""mailto:ah.o.s.i.k.e.d.e@gmail.com"">ah.o.s.i.k.e.d.e@gmail.com</a>
<a href=""mailto:a.ho.si.k.e.de@gmail.com"">a.ho.si.k.e.de@gmail.com</a>
<a href=""mailto:a.hosik.ed.e@gmail.com"">a.hosik.ed.e@gmail.com</a>
<a href=""mailto:ahos.ik.ed.e@gmail.com"">ahos.ik.ed.e@gmail.com</a>
<a href=""mailto:a.h.o.s.i.kede@gmail.com"">a.h.o.s.i.kede@gmail.com</a>
<a href=""mailto:ah.o.si.k.ede@gmail.com"">ah.o.si.k.ede@gmail.com</a>
<a href=""mailto:a.ho.s.i.ke.d.e@gmail.com"">a.ho.s.i.ke.d.e@gmail.com</a>
<a href=""mailto:aho.s.ike.de@gmail.com"">aho.s.ike.de@gmail.com</a>
<a href=""mailto:a.h.o.sik.e.de@gmail.com"">a.h.o.sik.e.de@gmail.com</a>
<a href=""mailto:ah.os.iked.e@gmail.com"">ah.os.iked.e@gmail.com</a>
<a href=""mailto:ahosiked.e@gmail.com"">ahosiked.e@gmail.com</a>
<a href=""mailto:ahosi.kede@gmail.com"">ahosi.kede@gmail.com</a>
<a href=""mailto:a.hos.ike.de@gmail.com"">a.hos.ike.de@gmail.com</a>
<a href=""mailto:ahosi.ked.e@gmail.com"">ahosi.ked.e@gmail.com</a>
<a href=""mailto:a.hos.i.k.e.de@gmail.com"">a.hos.i.k.e.de@gmail.com</a>
<a href=""mailto:ah.o.s.i.ke.de@gmail.com"">ah.o.s.i.ke.de@gmail.com</a>
<a href=""mailto:ahosik.e.d.e@gmail.com"">ahosik.e.d.e@gmail.com</a>
<a href=""mailto:a.hosike.de@gmail.com"">a.hosike.de@gmail.com</a>
<a href=""mailto:a.ho.si.ke.d.e@gmail.com"">a.ho.si.ke.d.e@gmail.com</a>
<a href=""mailto:a.h.o.si.ked.e@gmail.com"">a.h.o.si.ked.e@gmail.com</a>
<a href=""mailto:a.ho.sik.e.de@gmail.com"">a.ho.sik.e.de@gmail.com</a>
<a href=""mailto:a.hosik.e.d.e@gmail.com"">a.hosik.e.d.e@gmail.com</a>
<a href=""mailto:aho.s.ik.e.d.e@gmail.com"">aho.s.ik.e.d.e@gmail.com</a>
<a href=""mailto:a.hos.ik.e.de@gmail.com"">a.hos.ik.e.de@gmail.com</a>
<a href=""mailto:a.ho.si.k.ed.e@gmail.com"">a.ho.si.k.ed.e@gmail.com</a>
<a href=""mailto:a.ho.s.i.k.ed.e@gmail.com"">a.ho.s.i.k.ed.e@gmail.com</a>
<a href=""mailto:aho.si.k.ed.e@gmail.com"">aho.si.k.ed.e@gmail.com</a>
<a href=""mailto:ah.os.i.kede@gmail.com"">ah.os.i.kede@gmail.com</a>
<a href=""mailto:a.hos.ik.ede@gmail.com"">a.hos.ik.ede@gmail.com</a>
<a href=""mailto:a.h.osi.kede@gmail.com"">a.h.osi.kede@gmail.com</a>
<a href=""mailto:a.h.o.s.i.k.e.de@gmail.com"">a.h.o.s.i.k.e.de@gmail.com</a>
<a href=""mailto:a.h.osik.e.de@gmail.com"">a.h.osik.e.de@gmail.com</a>
<a href=""mailto:ah.osikede@gmail.com"">ah.osikede@gmail.com</a>
<a href=""mailto:ah.o.si.ked.e@gmail.com"">ah.o.si.ked.e@gmail.com</a>
<a href=""mailto:a.ho.s.ik.e.de@gmail.com"">a.ho.s.ik.e.de@gmail.com</a>
<a href=""mailto:a.h.o.s.ik.ed.e@gmail.com"">a.h.o.s.ik.ed.e@gmail.com</a>
<a href=""mailto:a.h.o.si.ke.d.e@gmail.com"">a.h.o.si.ke.d.e@gmail.com</a>
<a href=""mailto:a.hos.i.ked.e@gmail.com"">a.hos.i.ked.e@gmail.com</a>
<a href=""mailto:a.hos.i.ke.de@gmail.com"">a.hos.i.ke.de@gmail.com</a>
<a href=""mailto:a.h.o.s.ike.de@gmail.com"">a.h.o.s.ike.de@gmail.com</a>
<a href=""mailto:a.hosi.k.ed.e@gmail.com"">a.hosi.k.ed.e@gmail.com</a>
<a href=""mailto:a.hos.i.k.ed.e@gmail.com"">a.hos.i.k.ed.e@gmail.com</a>
<a href=""mailto:a.h.o.s.ik.e.de@gmail.com"">a.h.o.s.ik.e.de@gmail.com</a>
<a href=""mailto:ahosike.de@gmail.com"">ahosike.de@gmail.com</a>
<a href=""mailto:a.hosiked.e@gmail.com"">a.hosiked.e@gmail.com</a>
<a href=""mailto:aho.sik.e.de@gmail.com"">aho.sik.e.de@gmail.com</a>
<a href=""mailto:a.hos.ik.ed.e@gmail.com"">a.hos.ik.ed.e@gmail.com</a>
<a href=""mailto:aho.s.i.ked.e@gmail.com"">aho.s.i.ked.e@gmail.com</a>
<a href=""mailto:ah.os.ikede@gmail.com"">ah.os.ikede@gmail.com</a>
<a href=""mailto:a.hos.ik.e.d.e@gmail.com"">a.hos.ik.e.d.e@gmail.com</a>
<a href=""mailto:aho.si.k.ede@gmail.com"">aho.si.k.ede@gmail.com</a>
<a href=""mailto:a.hosik.e.de@gmail.com"">a.hosik.e.de@gmail.com</a>
<a href=""mailto:ah.osi.ked.e@gmail.com"">ah.osi.ked.e@gmail.com</a>
<a href=""mailto:ah.osi.k.ede@gmail.com"">ah.osi.k.ede@gmail.com</a>
<a href=""mailto:ah.osi.k.e.d.e@gmail.com"">ah.osi.k.e.d.e@gmail.com</a>
<a href=""mailto:a.ho.s.ik.e.d.e@gmail.com"">a.ho.s.ik.e.d.e@gmail.com</a>
<a href=""mailto:a.hosikede@gmail.com"">a.hosikede@gmail.com</a>
<a href=""mailto:ahos.iked.e@gmail.com"">ahos.iked.e@gmail.com</a>
<a href=""mailto:ah.osik.e.d.e@gmail.com"">ah.osik.e.d.e@gmail.com</a>
<a href=""mailto:aho.sik.ede@gmail.com"">aho.sik.ede@gmail.com</a>
<a href=""mailto:a.h.osiked.e@gmail.com"">a.h.osiked.e@gmail.com</a>
<a href=""mailto:a.ho.s.i.k.ede@gmail.com"">a.ho.s.i.k.ede@gmail.com</a>
<a href=""mailto:ah.os.i.k.e.d.e@gmail.com"">ah.os.i.k.e.d.e@gmail.com</a>
<a href=""mailto:ah.os.ik.e.d.e@gmail.com"">ah.os.ik.e.d.e@gmail.com</a>
<a href=""mailto:a.h.o.s.ik.e.d.e@gmail.com"">a.h.o.s.ik.e.d.e@gmail.com</a><a href=""mailto:smit.hde.an.13.8@gmail.com"">smit.hde.an.13.8@gmail.com</a>

<a href=""mailto:nfonkynfon@gmail.com"">nfonkynfon@gmail.com</a>
<a href=""mailto:nfon.ky.nf.o.n@gmail.com"">nfon.ky.nf.o.n@gmail.com</a>
<a href=""mailto:n.f.o.n.ky.nf.o.n@gmail.com"">n.f.o.n.ky.nf.o.n@gmail.com</a>
<a href=""mailto:nf.onky.nfon@gmail.com"">nf.onky.nfon@gmail.com</a>
<a href=""mailto:n.fo.nky.nfon@gmail.com"">n.fo.nky.nfon@gmail.com</a>
<a href=""mailto:nfonky.n.fon@gmail.com"">nfonky.n.fon@gmail.com</a>
<a href=""mailto:nfo.n.kyn.fo.n@gmail.com"">nfo.n.kyn.fo.n@gmail.com</a>
<a href=""mailto:n.f.o.nk.y.nfo.n@gmail.com"">n.f.o.nk.y.nfo.n@gmail.com</a>
<a href=""mailto:n.fo.n.ky.n.f.o.n@gmail.com"">n.fo.n.ky.n.f.o.n@gmail.com</a>
<a href=""mailto:nf.onky.nf.o.n@gmail.com"">nf.onky.nf.o.n@gmail.com</a>
<a href=""mailto:n.fo.n.k.ynfon@gmail.com"">n.fo.n.k.ynfon@gmail.com</a>
<a href=""mailto:nfo.nk.ynfon@gmail.com"">nfo.nk.ynfon@gmail.com</a>
<a href=""mailto:nf.on.kyn.fo.n@gmail.com"">nf.on.kyn.fo.n@gmail.com</a>
<a href=""mailto:nfo.nk.yn.f.on@gmail.com"">nfo.nk.yn.f.on@gmail.com</a>
<a href=""mailto:nf.onk.yn.f.on@gmail.com"">nf.onk.yn.f.on@gmail.com</a>
<a href=""mailto:n.f.o.nky.n.fon@gmail.com"">n.f.o.nky.n.fon@gmail.com</a>
<a href=""mailto:n.fon.k.yn.fo.n@gmail.com"">n.fon.k.yn.fo.n@gmail.com</a>
<a href=""mailto:nfon.k.y.n.fo.n@gmail.com"">nfon.k.y.n.fo.n@gmail.com</a>
<a href=""mailto:n.fon.ky.n.fon@gmail.com"">n.fon.ky.n.fon@gmail.com</a>
<a href=""mailto:n.fo.n.kyn.f.on@gmail.com"">n.fo.n.kyn.f.on@gmail.com</a>
<a href=""mailto:nfo.nk.y.nf.o.n@gmail.com"">nfo.nk.y.nf.o.n@gmail.com</a>
<a href=""mailto:nfo.nkyn.f.on@gmail.com"">nfo.nkyn.f.on@gmail.com</a>
<a href=""mailto:nfon.k.y.nf.o.n@gmail.com"">nfon.k.y.nf.o.n@gmail.com</a>
<a href=""mailto:n.f.onk.y.nf.o.n@gmail.com"">n.f.onk.y.nf.o.n@gmail.com</a>
<a href=""mailto:n.f.onky.nfon@gmail.com"">n.f.onky.nfon@gmail.com</a>
<a href=""mailto:n.f.o.n.k.yn.fon@gmail.com"">n.f.o.n.k.yn.fon@gmail.com</a>
<a href=""mailto:n.fo.nky.n.fon@gmail.com"">n.fo.nky.n.fon@gmail.com</a>
<a href=""mailto:nfon.kynfon@gmail.com"">nfon.kynfon@gmail.com</a>
<a href=""mailto:n.f.onkynf.on@gmail.com"">n.f.onkynf.on@gmail.com</a>
<a href=""mailto:n.f.o.nk.y.n.fo.n@gmail.com"">n.f.o.nk.y.n.fo.n@gmail.com</a>
<a href=""mailto:n.f.o.n.k.y.nfon@gmail.com"">n.f.o.n.k.y.nfon@gmail.com</a>
<a href=""mailto:nf.on.k.y.n.f.o.n@gmail.com"">nf.on.k.y.n.f.o.n@gmail.com</a>
<a href=""mailto:nf.onk.ynfo.n@gmail.com"">nf.onk.ynfo.n@gmail.com</a>
<a href=""mailto:n.fon.ky.nf.on@gmail.com"">n.fon.ky.nf.on@gmail.com</a>
<a href=""mailto:n.f.o.nkyn.fon@gmail.com"">n.f.o.nkyn.fon@gmail.com</a>
<a href=""mailto:nfo.nkynfo.n@gmail.com"">nfo.nkynfo.n@gmail.com</a>
<a href=""mailto:nf.o.n.kynfo.n@gmail.com"">nf.o.n.kynfo.n@gmail.com</a>
<a href=""mailto:nfo.n.k.y.n.f.o.n@gmail.com"">nfo.n.k.y.n.f.o.n@gmail.com</a>
<a href=""mailto:n.fonk.y.nf.on@gmail.com"">n.fonk.y.nf.on@gmail.com</a>
<a href=""mailto:n.f.o.nk.yn.f.o.n@gmail.com"">n.f.o.nk.yn.f.o.n@gmail.com</a>
<a href=""mailto:nf.on.k.y.n.fon@gmail.com"">nf.on.k.y.n.fon@gmail.com</a>
<a href=""mailto:nf.o.n.k.yn.fo.n@gmail.com"">nf.o.n.k.yn.fo.n@gmail.com</a>
<a href=""mailto:n.fo.nkyn.fo.n@gmail.com"">n.fo.nkyn.fo.n@gmail.com</a>
<a href=""mailto:n.f.on.k.y.n.f.on@gmail.com"">n.f.on.k.y.n.f.on@gmail.com</a>
<a href=""mailto:nf.onk.yn.fon@gmail.com"">nf.onk.yn.fon@gmail.com</a>
<a href=""mailto:n.fon.k.yn.fon@gmail.com"">n.fon.k.yn.fon@gmail.com</a>
<a href=""mailto:nf.o.n.kyn.f.on@gmail.com"">nf.o.n.kyn.f.on@gmail.com</a>
<a href=""mailto:n.f.o.n.k.ynf.o.n@gmail.com"">n.f.o.n.k.ynf.o.n@gmail.com</a>
<a href=""mailto:n.f.o.n.k.y.n.f.o.n@gmail.com"">n.f.o.n.k.y.n.f.o.n@gmail.com</a>
<a href=""mailto:n.fonk.y.nfon@gmail.com"">n.fonk.y.nfon@gmail.com</a>
<a href=""mailto:n.f.onkynf.o.n@gmail.com"">n.f.onkynf.o.n@gmail.com</a>
<a href=""mailto:nfon.k.y.nfon@gmail.com"">nfon.k.y.nfon@gmail.com</a>
<a href=""mailto:nfo.n.k.ynf.on@gmail.com"">nfo.n.k.ynf.on@gmail.com</a>
<a href=""mailto:nf.o.n.ky.nf.o.n@gmail.com"">nf.o.n.ky.nf.o.n@gmail.com</a>
<a href=""mailto:n.fonk.ynf.on@gmail.com"">n.fonk.ynf.on@gmail.com</a>
<a href=""mailto:n.fo.nk.ynfon@gmail.com"">n.fo.nk.ynfon@gmail.com</a>
<a href=""mailto:nf.o.n.k.yn.f.on@gmail.com"">nf.o.n.k.yn.f.on@gmail.com</a>
<a href=""mailto:n.fonky.nfo.n@gmail.com"">n.fonky.nfo.n@gmail.com</a>
<a href=""mailto:nfo.nk.yn.fon@gmail.com"">nfo.nk.yn.fon@gmail.com</a>
<a href=""mailto:n.fo.n.k.y.n.fon@gmail.com"">n.fo.n.k.y.n.fon@gmail.com</a>
<a href=""mailto:nf.o.nk.y.n.f.on@gmail.com"">nf.o.nk.y.n.f.on@gmail.com</a>
<a href=""mailto:n.fo.nk.yn.fon@gmail.com"">n.fo.nk.yn.fon@gmail.com</a>
<a href=""mailto:n.fo.n.k.yn.fo.n@gmail.com"">n.fo.n.k.yn.fo.n@gmail.com</a>
<a href=""mailto:n.f.o.nky.n.f.on@gmail.com"">n.f.o.nky.n.f.on@gmail.com</a>
<a href=""mailto:n.fo.nk.yn.fo.n@gmail.com"">n.fo.nk.yn.fo.n@gmail.com</a>
<a href=""mailto:nf.on.kynfon@gmail.com"">nf.on.kynfon@gmail.com</a>
<a href=""mailto:nfo.n.k.y.nfon@gmail.com"">nfo.n.k.y.nfon@gmail.com</a>
<a href=""mailto:nfo.nky.n.f.o.n@gmail.com"">nfo.nky.n.f.o.n@gmail.com</a>
<a href=""mailto:nf.o.nk.yn.fon@gmail.com"">nf.o.nk.yn.fon@gmail.com</a>
<a href=""mailto:n.f.onk.y.n.fo.n@gmail.com"">n.f.onk.y.n.fo.n@gmail.com</a>
<a href=""mailto:n.f.o.nky.nf.o.n@gmail.com"">n.f.o.nky.nf.o.n@gmail.com</a>
<a href=""mailto:nf.on.k.ynf.o.n@gmail.com"">nf.on.k.ynf.o.n@gmail.com</a>
<a href=""mailto:nf.o.nkynfon@gmail.com"">nf.o.nkynfon@gmail.com</a>
<a href=""mailto:n.f.on.ky.n.fo.n@gmail.com"">n.f.on.ky.n.fo.n@gmail.com</a>
<a href=""mailto:nfon.k.yn.fo.n@gmail.com"">nfon.k.yn.fo.n@gmail.com</a>
<a href=""mailto:nfo.n.kynf.o.n@gmail.com"">nfo.n.kynf.o.n@gmail.com</a>
<a href=""mailto:n.fo.n.ky.nfo.n@gmail.com"">n.fo.n.ky.nfo.n@gmail.com</a>
<a href=""mailto:n.fonkyn.fon@gmail.com"">n.fonkyn.fon@gmail.com</a>
<a href=""mailto:n.f.o.nk.ynf.on@gmail.com"">n.f.o.nk.ynf.on@gmail.com</a>
<a href=""mailto:n.fon.k.yn.f.o.n@gmail.com"">n.fon.k.yn.f.o.n@gmail.com</a>
<a href=""mailto:n.fo.n.kyn.f.o.n@gmail.com"">n.fo.n.kyn.f.o.n@gmail.com</a>
<a href=""mailto:nfon.kyn.f.on@gmail.com"">nfon.kyn.f.on@gmail.com</a>
<a href=""mailto:n.fon.ky.n.f.on@gmail.com"">n.fon.ky.n.f.on@gmail.com</a>
<a href=""mailto:nf.onkynfo.n@gmail.com"">nf.onkynfo.n@gmail.com</a>
<a href=""mailto:nf.o.n.k.y.nfo.n@gmail.com"">nf.o.n.k.y.nfo.n@gmail.com</a>
<a href=""mailto:n.fo.n.k.yn.fon@gmail.com"">n.fo.n.k.yn.fon@gmail.com</a>
<a href=""mailto:n.f.o.n.ky.nfo.n@gmail.com"">n.f.o.n.ky.nfo.n@gmail.com</a>
<a href=""mailto:nf.on.k.ynfo.n@gmail.com"">nf.on.k.ynfo.n@gmail.com</a>
<a href=""mailto:nfo.n.k.yn.f.on@gmail.com"">nfo.n.k.yn.f.on@gmail.com</a>
<a href=""mailto:n.f.on.k.y.n.fo.n@gmail.com"">n.f.on.k.y.n.fo.n@gmail.com</a>
<a href=""mailto:nfo.n.ky.nfon@gmail.com"">nfo.n.ky.nfon@gmail.com</a>
<a href=""mailto:n.fonk.yn.fo.n@gmail.com"">n.fonk.yn.fo.n@gmail.com</a>
<a href=""mailto:n.f.o.nky.nfon@gmail.com"">n.f.o.nky.nfon@gmail.com</a>
<a href=""mailto:n.fonky.nf.on@gmail.com"">n.fonky.nf.on@gmail.com</a>
<a href=""mailto:nfon.ky.nfo.n@gmail.com"">nfon.ky.nfo.n@gmail.com</a>
<a href=""mailto:nf.o.nk.y.nfon@gmail.com"">nf.o.nk.y.nfon@gmail.com</a>
<a href=""mailto:nf.on.k.y.nf.o.n@gmail.com"">nf.on.k.y.nf.o.n@gmail.com</a>
<a href=""mailto:nf.o.nk.yn.f.o.n@gmail.com"">nf.o.nk.yn.f.o.n@gmail.com</a>
<a href=""mailto:n.fo.nkynfon@gmail.com"">n.fo.nkynfon@gmail.com</a>
<a href=""mailto:n.fo.n.ky.nfon@gmail.com"">n.fo.n.ky.nfon@gmail.com</a>
<a href=""mailto:nfo.n.ky.n.f.on@gmail.com"">nfo.n.ky.n.f.on@gmail.com</a>
<a href=""mailto:nf.onkynf.o.n@gmail.com"">nf.onkynf.o.n@gmail.com</a>
<a href=""mailto:nf.o.nkyn.f.o.n@gmail.com"">nf.o.nkyn.f.o.n@gmail.com</a>
<a href=""mailto:nfo.n.k.yn.fo.n@gmail.com"">nfo.n.k.yn.fo.n@gmail.com</a>
<a href=""mailto:n.fonk.yn.f.on@gmail.com"">n.fonk.yn.f.on@gmail.com</a>
<a href=""mailto:nfon.k.ynf.on@gmail.com"">nfon.k.ynf.on@gmail.com</a>
<a href=""mailto:n.f.o.n.k.ynfo.n@gmail.com"">n.f.o.n.k.ynfo.n@gmail.com</a>
<a href=""mailto:nfon.kyn.fo.n@gmail.com"">nfon.kyn.fo.n@gmail.com</a>
<a href=""mailto:n.fo.n.ky.nf.on@gmail.com"">n.fo.n.ky.nf.on@gmail.com</a>
<a href=""mailto:nfo.n.kynfon@gmail.com"">nfo.n.kynfon@gmail.com</a>
<a href=""mailto:n.fonk.y.n.fo.n@gmail.com"">n.fonk.y.n.fo.n@gmail.com</a>
<a href=""mailto:nfonk.ynfo.n@gmail.com"">nfonk.ynfo.n@gmail.com</a>
<a href=""mailto:nf.on.kynf.o.n@gmail.com"">nf.on.kynf.o.n@gmail.com</a>
<a href=""mailto:n.f.onk.yn.fon@gmail.com"">n.f.onk.yn.fon@gmail.com</a>
<a href=""mailto:n.f.on.k.y.nfon@gmail.com"">n.f.on.k.y.nfon@gmail.com</a>
<a href=""mailto:nfo.nk.ynf.on@gmail.com"">nfo.nk.ynf.on@gmail.com</a>
<a href=""mailto:nfo.nk.y.n.fo.n@gmail.com"">nfo.nk.y.n.fo.n@gmail.com</a>
<a href=""mailto:n.f.o.nkynfon@gmail.com"">n.f.o.nkynfon@gmail.com</a>
<a href=""mailto:n.fo.n.k.y.n.f.on@gmail.com"">n.fo.n.k.y.n.f.on@gmail.com</a>
<a href=""mailto:nf.o.nky.nf.o.n@gmail.com"">nf.o.nky.nf.o.n@gmail.com</a>
<a href=""mailto:n.f.on.kyn.f.on@gmail.com"">n.f.on.kyn.f.on@gmail.com</a>
<a href=""mailto:n.f.o.n.k.yn.f.o.n@gmail.com"">n.f.o.n.k.yn.f.o.n@gmail.com</a>
<a href=""mailto:nf.onky.n.fo.n@gmail.com"">nf.onky.n.fo.n@gmail.com</a>
<a href=""mailto:nfo.nky.n.f.on@gmail.com"">nfo.nky.n.f.on@gmail.com</a>
<a href=""mailto:n.f.on.k.ynf.o.n@gmail.com"">n.f.on.k.ynf.o.n@gmail.com</a>
<a href=""mailto:n.f.on.k.ynfo.n@gmail.com"">n.f.on.k.ynfo.n@gmail.com</a>
<a href=""mailto:nfo.nky.n.fon@gmail.com"">nfo.nky.n.fon@gmail.com</a>
<a href=""mailto:nf.o.nkynfo.n@gmail.com"">nf.o.nkynfo.n@gmail.com</a>
<a href=""mailto:nfon.k.y.n.f.on@gmail.com"">nfon.k.y.n.f.on@gmail.com</a>
<a href=""mailto:n.f.onky.nf.on@gmail.com"">n.f.onky.nf.on@gmail.com</a>
<a href=""mailto:n.fonky.nf.o.n@gmail.com"">n.fonky.nf.o.n@gmail.com</a>
<a href=""mailto:n.fon.kynfon@gmail.com"">n.fon.kynfon@gmail.com</a>
<a href=""mailto:n.f.o.nkyn.fo.n@gmail.com"">n.f.o.nkyn.fo.n@gmail.com</a>
<a href=""mailto:nf.on.kyn.f.on@gmail.com"">nf.on.kyn.f.on@gmail.com</a>
<a href=""mailto:n.fon.k.y.n.f.on@gmail.com"">n.fon.k.y.n.f.on@gmail.com</a>
<a href=""mailto:nfo.n.kyn.f.on@gmail.com"">nfo.n.kyn.f.on@gmail.com</a>
<a href=""mailto:nf.onkyn.f.o.n@gmail.com"">nf.onkyn.f.o.n@gmail.com</a>
<a href=""mailto:n.fo.nky.nf.on@gmail.com"">n.fo.nky.nf.on@gmail.com</a>
<a href=""mailto:n.fon.k.ynfo.n@gmail.com"">n.fon.k.ynfo.n@gmail.com</a>
<a href=""mailto:nfonkynf.o.n@gmail.com"">nfonkynf.o.n@gmail.com</a>
<a href=""mailto:nf.onk.y.n.fon@gmail.com"">nf.onk.y.n.fon@gmail.com</a>
<a href=""mailto:n.f.onk.ynf.on@gmail.com"">n.f.onk.ynf.on@gmail.com</a>
<a href=""mailto:nf.o.n.k.y.nfon@gmail.com"">nf.o.n.k.y.nfon@gmail.com</a>
<a href=""mailto:nf.onk.y.n.f.on@gmail.com"">nf.onk.y.n.f.on@gmail.com</a>
<a href=""mailto:n.f.o.nky.nf.on@gmail.com"">n.f.o.nky.nf.on@gmail.com</a>
<a href=""mailto:n.fo.nkynf.on@gmail.com"">n.fo.nkynf.on@gmail.com</a>
<a href=""mailto:n.fon.ky.n.f.o.n@gmail.com"">n.fon.ky.n.f.o.n@gmail.com</a>
<a href=""mailto:nfon.k.yn.f.on@gmail.com"">nfon.k.yn.f.on@gmail.com</a>
<a href=""mailto:n.fonk.y.n.fon@gmail.com"">n.fonk.y.n.fon@gmail.com</a>
<a href=""mailto:n.f.o.n.kyn.f.o.n@gmail.com"">n.f.o.n.kyn.f.o.n@gmail.com</a>
<a href=""mailto:n.f.onky.n.f.on@gmail.com"">n.f.onky.n.f.on@gmail.com</a>
<a href=""mailto:n.fon.ky.nfon@gmail.com"">n.fon.ky.nfon@gmail.com</a>
<a href=""mailto:n.fo.nk.y.n.f.o.n@gmail.com"">n.fo.nk.y.n.f.o.n@gmail.com</a>
<a href=""mailto:nfo.n.ky.nf.o.n@gmail.com"">nfo.n.ky.nf.o.n@gmail.com</a>
<a href=""mailto:n.f.onk.y.n.fon@gmail.com"">n.f.onk.y.n.fon@gmail.com</a>
<a href=""mailto:nfo.nk.yn.f.o.n@gmail.com"">nfo.nk.yn.f.o.n@gmail.com</a>
<a href=""mailto:nfo.nk.y.nf.on@gmail.com"">nfo.nk.y.nf.on@gmail.com</a>
<a href=""mailto:n.f.o.n.kynf.o.n@gmail.com"">n.f.o.n.kynf.o.n@gmail.com</a>
<a href=""mailto:n.fo.nky.n.f.o.n@gmail.com"">n.fo.nky.n.f.o.n@gmail.com</a>
<a href=""mailto:n.f.onkyn.fon@gmail.com"">n.f.onkyn.fon@gmail.com</a>
<a href=""mailto:n.f.o.nk.y.nf.o.n@gmail.com"">n.f.o.nk.y.nf.o.n@gmail.com</a>
<a href=""mailto:n.f.o.n.k.y.nf.on@gmail.com"">n.f.o.n.k.y.nf.on@gmail.com</a>
<a href=""mailto:n.f.on.kynfon@gmail.com"">n.f.on.kynfon@gmail.com</a>
<a href=""mailto:n.fon.k.y.nf.o.n@gmail.com"">n.fon.k.y.nf.o.n@gmail.com</a>
<a href=""mailto:n.f.onkyn.f.on@gmail.com"">n.f.onkyn.f.on@gmail.com</a>
<a href=""mailto:nfo.n.k.ynfo.n@gmail.com"">nfo.n.k.ynfo.n@gmail.com</a>
<a href=""mailto:n.f.on.ky.n.f.on@gmail.com"">n.f.on.ky.n.f.on@gmail.com</a>
<a href=""mailto:nfo.n.k.y.n.f.on@gmail.com"">nfo.n.k.y.n.f.on@gmail.com</a>
<a href=""mailto:n.f.o.n.kyn.fon@gmail.com"">n.f.o.n.kyn.fon@gmail.com</a>
<a href=""mailto:n.f.o.n.k.yn.f.on@gmail.com"">n.f.o.n.k.yn.f.on@gmail.com</a>
<a href=""mailto:n.fo.n.k.ynf.on@gmail.com"">n.fo.n.k.ynf.on@gmail.com</a>
<a href=""mailto:nf.o.nky.n.fo.n@gmail.com"">nf.o.nky.n.fo.n@gmail.com</a>
<a href=""mailto:nfonk.ynfon@gmail.com"">nfonk.ynfon@gmail.com</a>
<a href=""mailto:nfo.nkynf.on@gmail.com"">nfo.nkynf.on@gmail.com</a>
<a href=""mailto:n.fonky.nfon@gmail.com"">n.fonky.nfon@gmail.com</a>
<a href=""mailto:n.f.on.kyn.fon@gmail.com"">n.f.on.kyn.fon@gmail.com</a>
<a href=""mailto:n.fo.nk.y.n.f.on@gmail.com"">n.fo.nk.y.n.f.on@gmail.com</a>
<a href=""mailto:n.f.o.n.k.ynfon@gmail.com"">n.f.o.n.k.ynfon@gmail.com</a>
<a href=""mailto:nfo.n.k.yn.fon@gmail.com"">nfo.n.k.yn.fon@gmail.com</a>
<a href=""mailto:nfonk.y.nfo.n@gmail.com"">nfonk.y.nfo.n@gmail.com</a>
<a href=""mailto:n.f.onk.y.nfo.n@gmail.com"">n.f.onk.y.nfo.n@gmail.com</a>
<a href=""mailto:nf.o.n.k.ynfo.n@gmail.com"">nf.o.n.k.ynfo.n@gmail.com</a>
<a href=""mailto:n.fon.k.y.n.fon@gmail.com"">n.fon.k.y.n.fon@gmail.com</a>
<a href=""mailto:nf.on.ky.n.f.o.n@gmail.com"">nf.on.ky.n.f.o.n@gmail.com</a>
<a href=""mailto:n.fo.n.k.y.nfon@gmail.com"">n.fo.n.k.y.nfon@gmail.com</a>
<a href=""mailto:nfon.k.ynf.o.n@gmail.com"">nfon.k.ynf.o.n@gmail.com</a>
<a href=""mailto:n.f.o.n.kynf.on@gmail.com"">n.f.o.n.kynf.on@gmail.com</a>
<a href=""mailto:nf.onk.y.nfon@gmail.com"">nf.onk.y.nfon@gmail.com</a>
<a href=""mailto:n.f.on.k.yn.fon@gmail.com"">n.f.on.k.yn.fon@gmail.com</a>
<a href=""mailto:nf.onk.y.nfo.n@gmail.com"">nf.onk.y.nfo.n@gmail.com</a>
<a href=""mailto:n.f.onk.yn.fo.n@gmail.com"">n.f.onk.yn.fo.n@gmail.com</a>
<a href=""mailto:nfo.n.ky.nfo.n@gmail.com"">nfo.n.ky.nfo.n@gmail.com</a>
<a href=""mailto:nfo.nkyn.fo.n@gmail.com"">nfo.nkyn.fo.n@gmail.com</a>
<a href=""mailto:n.fonky.n.f.on@gmail.com"">n.fonky.n.f.on@gmail.com</a>
<a href=""mailto:nfonk.y.nfon@gmail.com"">nfonk.y.nfon@gmail.com</a>
<a href=""mailto:nf.o.n.kyn.fo.n@gmail.com"">nf.o.n.kyn.fo.n@gmail.com</a>
<a href=""mailto:n.f.o.n.k.y.n.f.on@gmail.com"">n.f.o.n.k.y.n.f.on@gmail.com</a>
<a href=""mailto:n.fo.n.kyn.fo.n@gmail.com"">n.fo.n.kyn.fo.n@gmail.com</a>
<a href=""mailto:nf.onk.ynf.o.n@gmail.com"">nf.onk.ynf.o.n@gmail.com</a>
<a href=""mailto:nf.o.n.ky.nfon@gmail.com"">nf.o.n.ky.nfon@gmail.com</a>
<a href=""mailto:n.fonk.yn.f.o.n@gmail.com"">n.fonk.yn.f.o.n@gmail.com</a>
"
1vv1EYGi,09. Fruit or Vegetable,veronikaaa86,Java,Saturday 27th of May 2023 02:57:37 AM CDT,"package conditionalStatementsAdvanced;

import java.util.Scanner;

public class P09FruitOrVegetable {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        //•	Плодовете ""fruit"" са banana, apple, kiwi, cherry, lemon и grapes
        //•	Зеленчуците ""vegetable"" са tomato, cucumber, pepper и carrot
        //•	Всички останали са ""unknown""

        String input = scanner.nextLine();

        switch (input) {
            case ""banana"":
            case ""apple"":
            case ""kiwi"":
            case ""cherry"":
            case ""lemon"":
            case ""grapes"":
                System.out.println(""fruit"");
                break;
            case ""tomato"":
            case ""cucumber"":
            case ""pepper"":
            case ""carrot"":
                System.out.println(""vegetable"");
                break;
            default:
                System.out.println(""unknown"");
                break;
        }
    }
}
"
wcSUrz6Q,03. Animal Type,veronikaaa86,Java,Saturday 27th of May 2023 02:49:11 AM CDT,"package conditionalStatementsAdvanced;

import java.util.Scanner;

public class P03AnimalType {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        String animal = scanner.nextLine();

        switch (animal) {
            case ""dog"":
                System.out.println(""mammal"");
                break;
            case ""crocodile"":
            case ""tortoise"":
            case ""snake"":
                System.out.println(""reptile"");
                break;
            default:
                System.out.println(""unknown"");

        }
    }
}
"
YCS8RR8E,02. Weekend or Working Day,veronikaaa86,Java,Saturday 27th of May 2023 02:42:24 AM CDT,"package conditionalStatementsAdvanced;

import java.util.Scanner;

public class P02WeekendOrWorkingDay {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        String dayOfWeek = scanner.nextLine();

        switch (dayOfWeek) {
            case ""Monday"":
            case ""Tuesday"":
            case ""Wednesday"":
            case ""Thursday"":
            case ""Friday"":
                System.out.println(""Working day"");
                break;
            case ""Saturday"":
            case ""Sunday"":
                System.out.println(""Weekend"");
                break;
            default:
                System.out.println(""Error"");
        }
    }
}
"
PwZrGq5d,01. Day of Week,veronikaaa86,Java,Saturday 27th of May 2023 02:31:51 AM CDT,"package conditionalStatementsAdvanced;

import java.util.Scanner;

public class P01DayOfWeek {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        int num = Integer.parseInt(scanner.nextLine());

        switch (num) {
            case 1:
                System.out.println(""Monday"");
                break;
            case 2:
                System.out.println(""Tuesday"");
                break;
            case 3:
                System.out.println(""Wednesday"");
                break;
            case 4:
                System.out.println(""Thursday"");
                break;
            case 5:
                System.out.println(""Friday"");
                break;
            case 6:
                System.out.println(""Saturday"");
                break;
            case 7:
                System.out.println(""Sunday"");
                break;
            default:
                System.out.println(""Error"");
        }
    }
}
"
