id,title,username,language,date,content
3GX01x8q,Create_Obsidian_Slave,Kiriya,Lua,Sunday 25th of June 2023 06:49:52 AM CDT,"local modem = peripheral.wrap(""top"")

modem.open(50)

while true do
    term.setCursorPos(1,1)
    local event, modemSide, senderChannel, replyChannel, message, senderDistance = os.pullEvent(""modem_message"")
    
    if message == ""rl"" then
        redstone.setOutput(""right"",true)
        redstone.setOutput(""left"",false)
    elseif message == ""rr"" then
        redstone.setOutput(""left"",true)
        redstone.setOutput(""right"",false)
    else
        redstone.setOutput(""left"",true)
        redstone.setOutput(""right"",true)
    end
    
    term.clear()
    term.setCursorPos(1,1)
    print(os.date())
    print(""The message was: ""..message)
    print(""The sender is: ""..(math.floor(senderDistance+0.5) or ""an unknown number of"").."" blocks away from me."")
    sleep(1)
end"
yw3YipJY,Untitled,35657,C++,Sunday 25th of June 2023 06:48:27 AM CDT,"#include <iostream>

using namespace std;

int calc_sum(const int arr[], const int size) {
	int sum = 0;
	for (int i = 0; i < size; i++) {
		sum += arr[i];
	}
	return sum;
}

int calc_min(const int arr[], const int size) {
	int min = arr[0];
	for (int i = 0; i < size; i++) {
		if (arr[i] < min) {
			min = arr[i];
		}
	}
	return min;
}

void print(const int arr[], const int size) {
	for (int i = 0; i < size; i++) {
		cout << arr[i] << "" "";
	}
	cout << endl;
}


void change(int& a, int& b) {
	int temp = a;
	a = b;
	b = temp;
}

int sum(const int a, const int b) {
	return a + b;
}

int square(const int a) {
	return a * a;
}

void square2(int& a) {
	a *= a;
}




int main() {

	int x = 10;
	int y = 20;

	int z = sum(x, y);

	cout << ""1: "" << sum(x, y) << endl;

	cout << ""2: "" << square(x) << endl;
	cout << ""3: "" << x << endl;

	square2(x);

	cout << ""4: "" << x << endl;


	const int size = 10;
	int arr[size]{ 1,2,4,6,8,0,6,12,5,4 };

	const int size2 = 9;
	int arr2[size2]{ 1,2,7,6,6,0,6,12,5 };

	const int size3 = 8;
	int arr3[size3]{ 1,2,17,6,8,12,16,12 };

	cout << ""sum: "" << calc_sum(arr, size) << endl;
	cout << ""sum2: "" << calc_sum(arr2, size2) << endl;
	cout << ""sum3: "" << calc_sum(arr3, size3) << endl;

	cout << ""min: "" << calc_min(arr, size) << endl;
	cout << x << "" "" << y << endl;
	change(x, y);
	cout << x << "" "" << y << endl;
}"
2aPCb0qp,Create_Obsidian_Master,Kiriya,Lua,Sunday 25th of June 2023 06:48:04 AM CDT,"--Modem Settings
local modem = peripheral.wrap(""left"")
modem.open(50)

--Time Configuration
local time_water = 15
local time_lava = 15
local time_wait = 20

--Functions
function state(val)
    term.clear()
    term.setCursorPos(1,1)
    print(os.date())
    print(""Open Valve: ""..val)
end

function transmit(str) --Transmit Redstone settings
    if modem.isOpen(50) == true then
        modem.transmit(50,50,str)
        if str == ""rr"" then
            state(""Lava"")
            sleep(time_lava)
        elseif str == ""rl"" then
            state(""Water"")
            sleep(time_water)
        end
    else
        modem.open(50)
    end 
end

--Program
transmit(""Initialize"")
while true do
    transmit(""rl"")
    transmit(""rr"")
    sleep(time_wait)
end
"
eUbQKSnG,Como Mostrar la Fecha y Hora en Vue JS 3,NubeColectiva,TypeScript,Sunday 25th of June 2023 06:31:47 AM CDT,"<template>
  <div>
    <strong>Fecha y Hora Actual: </strong>
    <br>
    {{ datos }}
  </div>
</template>

<script>

  export default {
      
    data() {
      return {
        datos: this.mostrarFechayhora()
      }
    },
    methods:{
        mostrarFechayhora: function () {

          const date = new Date();          
          const formatear = (""0"" + date.getDate()).slice(-2) + ""-"" + (""0""+(date.getMonth()+1)).slice(-2) + ""-"" +
                            date.getFullYear() + "" "" + (""0"" + date.getHours()).slice(-2) + "":"" + (""0"" + date.getMinutes()).slice(-2) + "":""
                            + (""0"" + date.getSeconds()).slice(-2);   
          // Mostramos la fecha y hora en la consola                                   
          console.log(formatear); 
          return formatear; 
     
        }
    },
    mounted () {
      this.mostrarFechayhora()
    }

  }

</script>

<style scoped>
  /* */
</style> "
Y3C5SDiT,BTC Wallet Credentials have been reset,kamikrisin_44,GetText,Sunday 25th of June 2023 06:21:20 AM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please disregard this message.
Your new login credentials will be 
rhydyllaqx:cYbxTP on 45.9.148.244
You can connect via SSH or use an online client such as ssheasy.com.
Regards"
9cy1UqBx,data614,TestGuy1,JSON,Sunday 25th of June 2023 06:13:11 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '3ca58978086cf26dfc52d18e99b613c775024ec426f8dce59f12e5239f99f717bf188d0198844124d0c2c293159e29d177f423f38a18eab3c241973c60bdd45f118bc340a7f795b1bcb8acbe375d95e894657afeca69c61054d912fb0c6d08664cfde6d054fafa7a60e49f1d0aba553ebf779cb27ab6fa9256cf1423f49b0260',
  otherdata: [
    '1509ea08c5e48dbf56429bdaecd00c66',
    '03ed25a65e9fbad0fca94331e6b69532',
    '86b7662ee615e820a4c4235808702b65',
    '107bf34d2b404a3cd791b73730cf9275',
    'fec6599642cb395acb3380932e071eaa',
    '85db75ffbec8f82998360dd2958a7595',
    'ebff4631471a730becc91c95ac7fcf30',
    '62913dce31cdf0bc117c641486ec886b'
  ]
}"
cf0SdqQQ,Untitled,MaksNew,JavaScript,Sunday 25th of June 2023 06:12:00 AM CDT,"var map = L.map('map').setView([51.505, -0.09], 13); L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
attribution:	'&copy;	<a
href=""https://www.openstreetmap.org/copyright"">OpenStreetMap</a> contributors'
}).addTo(map);

L.marker([51.5, -0.09]).addTo(map)
.bindPopup('A pretty CSS3 popup.<br> Easily customizable.')
.openPopup();
var build = require('./build/build.js'), lint = require('./build/hint.js');

var COPYRIGHT = '/*\n Copyright (c) 2012, Smartrak, David Leaver\n' +
' Leaflet.markercluster is an open-source JavaScript library for Marker Clustering on leaflet powered maps.\n' +
' https://github.com/danzel/Leaflet.markercluster\n*/\n';

desc('Check Leaflet.markercluster source for errors with JSHint'); task('lint', function () {

var files = build.getFiles(); console.log('Checking for JS errors...'); var errorsFound = lint.jshint(files);
if (errorsFound > 0) {
console.log(errorsFound + ' error(s) found.\n'); fail();
} else {
console.log('\tCheck passed');
}
});

desc('Combine and compress Leaflet.markercluster source files'); task('build', ['lint'], function (compsBase32, buildName) {

var files = build.getFiles(compsBase32); console.log('Concatenating ' + files.length + ' files...');
 
var content = build.combineFiles(files), newSrc = COPYRIGHT + content,

pathPart = 'dist/leaflet.markercluster' + (buildName ? '-' + buildName : ''), srcPath = pathPart + '-src.js',

oldSrc = build.load(srcPath),
srcDelta = build.getSizeDelta(newSrc, oldSrc);
console.log('\tUncompressed size: ' + newSrc.length + ' bytes (' + srcDelta + ')'); if (newSrc === oldSrc) {
console.log('\tNo changes');
} else {
build.save(srcPath, newSrc); console.log('\tSaved to ' + srcPath);
}
console.log('Compressing...'); var path = pathPart + '.js',
oldCompressed = build.load(path),
newCompressed = COPYRIGHT + build.uglify(content), delta = build.getSizeDelta(newCompressed, oldCompressed);
console.log('\tCompressed size: ' + newCompressed.length + ' bytes (' + delta + ')'); if (newCompressed === oldCompressed) {
console.log('\tNo changes');
} else {
build.save(path, newCompressed); console.log('\tSaved to ' + path);
}
});

task('default', ['build']);

<!DOCTYPE html>
<html>
<head>
<meta http-equiv=""X-UA-Compatible"" content=""IE=Edge""/>
<meta charset=""utf-8"" />
<meta name=""viewport"" content=""width=device-width, initial-scale=1"">
<meta name=""Author"" content=""Zabbix SIA"" />
<title>Панель</title>
 
<link rel=""icon"" href=""favicon.ico"">
<link rel=""apple-touch-icon-precomposed"" sizes=""76x76"" href=""assets/img/apple- touch-icon-76x76-precomposed.png"">
<link rel=""apple-touch-icon-precomposed"" sizes=""120x120"" href=""assets/img/apple- touch-icon-120x120-precomposed.png"">
<link rel=""apple-touch-icon-precomposed"" sizes=""152x152"" href=""assets/img/apple- touch-icon-152x152-precomposed.png"">
<link rel=""apple-touch-icon-precomposed"" sizes=""180x180"" href=""assets/img/apple- touch-icon-180x180-precomposed.png"">
<link rel=""icon"" sizes=""192x192"" href=""assets/img/touch-icon-192x192.png"">
<meta name=""csrf-token"" content=""cf9bd3f1f1028555""/>
<meta	name=""msapplication-TileImage""	content=""assets/img/ms-tile- 144x144.png"">
<meta name=""msapplication-TileColor"" content=""#d40000"">
<meta name=""msapplication-config"" content=""none""/>
<link rel=""stylesheet"" type=""text/css"" href=""assets/styles/dark-theme.css?1646039548"" />
<style type=""text/css"">.na-bg, .na-bg input[type=""radio""]:checked + label, .na-bg:before,
.flh-na-bg, .status-na-bg, .status-na-bg:before { background-color: #97AAB3 }
.info-bg, .info-bg input[type=""radio""]:checked + label, .info-bg:before, .flh-info-bg, .status- info-bg, .status-info-bg:before { background-color: #7499FF }
.warning-bg, .warning-bg input[type=""radio""]:checked + label, .warning-bg:before, .flh- warning-bg, .status-warning-bg, .status-warning-bg:before { background-color: #FFC859 }
.average-bg, .average-bg input[type=""radio""]:checked + label, .average-bg:before, .flh- average-bg, .status-average-bg, .status-average-bg:before { background-color: #FFA059 }
.high-bg, .high-bg   input[type=""radio""]:checked   + label,   .high-bg:before,   .flh-high-bg,
.status-high-bg, .status-high-bg:before { background-color: #E97659 }
.disaster-bg, .disaster-bg input[type=""radio""]:checked + label, .disaster-bg:before, .flh- disaster-bg, .status-disaster-bg, .status-disaster-bg:before { background-color: #E45959 }

</style><script>var PHP_TZ_OFFSET = 10800,PHP_ZBX_FULL_DATE_TIME = ""Y-m- d H:i:s"";</script><script src=""js/browsers.js?1646039548""></script>
<script src=""jsLoader.php?lang=ru_RU&amp;ver=5.0.21&amp;showGuiMessaging=1""></script>
<script src=""jsLoader.php?ver=5.0.21&amp;lang=ru_RU&amp;files%5B0%5D=flickerfreescreen.js&amp; files%5B1%5D=gtlc.js&amp;files%5B2%5D=dashboard.grid.js&amp;files%5B3%5D=class.calen dar.js&amp;files%5B4%5D=multiselect.js&amp;files%5B5%5D=layout.mode.js&amp;files%5B6
%5D=class.coverride.js&amp;files%5B7%5D=class.cverticalaccordion.js&amp;files%5B8%5D=cl ass.crangecontrol.js&amp;files%5B9%5D=colorpicker.js&amp;files%5B10%5D=class.csvggraph.j s&amp;files%5B11%5D=csvggraphwidget.js&amp;files%5B12%5D=class.cclock.js&amp;files%5 B13%5D=class.cnavtree.js&amp;files%5B14%5D=class.mapWidget.js&amp;files%5B15%5D=cla ss.svg.canvas.js&amp;files%5B16%5D=class.svg.map.js&amp;files%5B17%5D=servercheck.js"">
</script>
</head>
<body lang=""ru""><aside class=""sidebar""><div class=""sidebar-header""><a class=""logo"" href=""zabbix.php?action=dashboard.view""><div	class=""zabbix-sidebar-logo	sidebar-
 
logo""></div><div	class=""zabbix-sidebar-logo-compact		sidebar-logo-compact""></div></a><div class=""sidebar-header-buttons""><button type=""button"" class=""button-compact js-sidebar-mode"" title=""Свернуть боковую панель"">Свернуть боковую панель</button><button type=""button"" class=""button-expand js-sidebar-mode"" title=""Расширить боковую панель"">Расширить боковую панель</button><button	type=""button""		class=""button-hide	js-sidebar-mode""	title=""Скрыть боковую панель"">Скрыть боковую панель</button><button type=""button"" class=""button-show js-sidebar-mode""		title=""Отображать				боковую			панель"">Отображать		боковую панель</button></div></div><form	method=""get""	action=""zabbix.php""		accept-charset=""utf-8"" class=""form-search"" role=""search""><input type=""hidden"" name=""action"" value=""search""><input type=""text""	id=""search""		name=""search""		value=""""	maxlength=""255""			class=""search""	aria- label=""начните печатать для поиска"" autocomplete=""off""><button type=""submit"" class=""search- icon"" title=""Поиск"" disabled=""""></button></form><div class=""sidebar-nav scrollable"" tabindex=""- 1""><nav class=""nav-main"" role=""navigation"" aria-label=""Основная навигация""><ul class=""menu- main""><li id=""view"" class=""has-submenu is-selected is-expanded""><a class=""icon-monitoring"" href=""#"">Мониторинг</a><ul				class=""submenu""><li				class=""is-selected""><a href=""zabbix.php?action=dashboard.view"">Панель</a></li><li><a href=""zabbix.php?action=problem.view"">Проблемы</a></li><li><a href=""zabbix.php?action=host.view"">Узлы														сети</a></li><li><a href=""overview.php"">Обзор</a></li><li><a			href=""zabbix.php?action=latest.view"">Последние данные</a></li><li><a					href=""screens.php"">Комплексные		экраны</a></li><li><a href=""zabbix.php?action=map.view"">Карты												сетей</a></li><li><a href=""zabbix.php?action=discovery.view"">Обнаружение</a></li><li><a href=""srv_status.php"">Услуги</a></li></ul></li><li			id=""cm""	class=""has-submenu""><a class=""icon-inventory""			href=""#"">Инвентаризация</a><ul	class=""submenu""><li><a href=""hostinventoriesoverview.php"">Обзор</a></li><li><a		href=""hostinventories.php"">Узлы сети</a></li></ul></li><li				id=""reports""    class=""has-submenu""><a    class=""icon-reports"" href=""#"">Отчеты</a><ul                                      class=""submenu""><li><a href=""zabbix.php?action=report.status"">Информация        о               системе</a></li><li><a href=""report2.php"">Отчет о доступности</a></li><li><a href=""toptriggers.php"">100 наиболее активных                                                   триггеров</a></li><li><a
href=""zabbix.php?action=auditlog.list"">Аудит</a></li><li><a				href=""auditacts.php"">Журнал действий</a></li><li><a	href=""report4.php"">Оповещения</a></li></ul></li><li	id=""config"" class=""has-submenu""><a				class=""icon-configuration""					href=""#"">Настройка</a><ul class=""submenu""><li><a		href=""hostgroups.php"">Группы		узлов		сети</a></li><li><a href=""templates.php"">Шаблоны</a></li><li><a	href=""hosts.php"">Узлы	сети</a></li><li><a href=""maintenance.php"">Обслуживание</a></li><li><a href=""actionconf.php"">Действия</a></li><li><a			href=""correlation.php"">Корреляция событий</a></li><li><a					href=""discoveryconf.php"">Обнаружение</a></li><li><a href=""services.php"">Услуги</a></li></ul></li><li		id=""admin""			class=""has-submenu""><a class=""icon-administration""			href=""#"">Администрирование</a><ul	class=""submenu""><li><a href=""zabbix.php?action=gui.edit"">Общие</a></li><li><a href=""zabbix.php?action=proxy.list"">Прокси</a></li><li><a href=""zabbix.php?action=authentication.edit"">Аутентификация</a></li><li><a href=""zabbix.php?action=usergroup.list"">Группы					пользователей</a></li><li><a href=""zabbix.php?action=user.list"">Пользователи</a></li><li><a href=""zabbix.php?action=mediatype.list"">Способы							оповещений</a></li><li><a
 
href=""zabbix.php?action=script.list"">Скрипты</a></li><li><a href=""queue.php"">Очередь</a></li></ul></li></ul></nav><nav		class=""nav-user"" role=""navigation"" aria-label=""Меню пользователя""><ul class=""menu-user""><li><a class=""icon- support"" title=""Техническая Поддержка Zabbix"" target=""_blank"" rel=""noopener noreferrer"" href=""https://www.zabbix.com/ru/support"">Поддержка</a></li><li><a	class=""icon-share"" title=""Zabbix		Share""		target=""_blank""		rel=""noopener				noreferrer"" href=""https://share.zabbix.com/"">Share</a></li><li><a	class=""icon-help""			title=""Помощь"" target=""_blank""						rel=""noopener						noreferrer"" href=""https://www.zabbix.com/documentation/5.0/"">Помощь</a></li><li><a class=""icon-profile"" title=""ilyaB	(Илья	Бруй)""		href=""zabbix.php?action=userprofile.edit"">Настройки пользователя</a></li><li onclick=""ZABBIX.logout()""><a class=""icon-signout"" title=""Выход"" href=""#signout"">Выход</a></li></ul></nav></div></aside><div class=""wrapper"">
<script type=""text/x-jquery-tmpl"" id=""user_group_row_tpl"">
<tr		id=""user_group_shares_#{usrgrpid}""><td><input			type=""hidden"" id=""userGroups_#{usrgrpid}_usrgrpid""					name=""userGroups[#{usrgrpid}][usrgrpid]"" value=""#{usrgrpid}""										maxlength=""255"">#{name}</td><td><ul id=""userGroups_#{usrgrpid}_permission""		class=""radio-list-control""><li><input			type=""radio"" id=""user_group_#{usrgrpid}_permission_2""			name=""userGroups[#{usrgrpid}][permission]"" value=""2""	checked=""checked""><label	for=""user_group_#{usrgrpid}_permission_2"">Только чтение</label></li><li><input		type=""radio""		id=""user_group_#{usrgrpid}_permission_3"" name=""userGroups[#{usrgrpid}][permission]""						value=""3""><label for=""user_group_#{usrgrpid}_permission_3"">Чтение-запись</label></li></ul></td><td class=""nowrap""><button	type=""button""				name=""remove""		class=""btn-link"" onclick=""removeUserGroupShares(&quot;#{usrgrpid}&quot;);"">Удалить</button></td></tr></scr ipt>

<script type=""text/x-jquery-tmpl"" id=""user_row_tpl"">
<tr	id=""user_shares_#{id}""><td><input	type=""hidden""	id=""users_#{id}_userid"" name=""users[#{id}][userid]""	value=""#{id}""		maxlength=""255"">#{name}</td><td><ul id=""users_#{id}_permission""				class=""radio-list-control""><li><input		type=""radio"" id=""user_#{id}_permission_2""					name=""users[#{id}][permission]""			value=""2"" checked=""checked""><label								for=""user_#{id}_permission_2"">Только чтение</label></li><li><input					type=""radio""				id=""user_#{id}_permission_3"" name=""users[#{id}][permission]""		value=""3""><label		for=""user_#{id}_permission_3"">Чтение- запись</label></li></ul></td><td			class=""nowrap""><button	type=""button""	name=""remove"" class=""btn-link"" onclick=""removeUserShares(&quot;#{id}&quot;);"">Удалить</button></td></tr></script>

<script type=""text/javascript"">
// Change dashboard settings. function dashbrd_config() {
var dashboard = jQuery('.dashbrd-grid-container').data('dashboardGrid'), options = {
dashboardid: 1,
userid: dashboard['dashboard']['userid'], name: dashboard['dashboard']['name']
 
};

if (options.dashboardid == 0) { options.new = '1';
}

PopUp('dashboard.properties.edit', options, 'dashboard_properties', this);
};

/**
* @param {Overlay} overlay
*/
function dashbrdApplyProperties(overlay) {
var dashboard = jQuery('.dashbrd-grid-container'),
$form = overlay.$dialogue.find('form'), url = new Curl('zabbix.php', false), form_data = {};

$form.trimValues(['#name']); form_data = $form.serializeJSON();
url.setArgument('action', 'dashboard.properties.check');

overlay.setLoading(); overlay.xhr = jQuery.ajax({
data: form_data, url: url.getUrl(), dataType: 'json', method: 'POST',
complete: function() {
overlay.unsetLoading();
},
success: function(response) { var errors = [];
overlay.$dialogue.find('> .msg-good, > .msg-bad').remove();

if (typeof response === 'object') { if ('errors' in response) {
errors = response.errors;
}
}

if (errors.length) {
jQuery(errors).insertBefore($form);
}
else {
dashboard.dashboardGrid('setDashboardData', {});
 
name: form_data['name'], userid: form_data['userid']
 

jQuery('#page-title-general').text(form_data['name']); jQuery('#dashboard-direct-link').text(form_data['name']);

}
});
}
 
overlayDialogueDestroy(overlay.dialogueid);
}

function dashbrdConfirmSharing(overlay) { var $form = overlay.$dialogue.find('form'),
url = new Curl('zabbix.php', false);
url.setArgument('action', 'dashboard.share.update'); overlay.setLoading();
overlay.xhr = jQuery.ajax({ url: url.getUrl(),
data: $form.serializeJSON(), dataType: 'json',
method: 'POST', complete: function() {
overlay.unsetLoading();
},
success: function(response) { var errors = [],
messages = [];
overlay.$dialogue.find('> .msg-good, > .msg-bad').remove(); if (typeof response === 'object') {
if ('errors' in response) {
errors = response.errors;
}
else if ('messages' in response) { messages = response.messages;
}
 
}

if (errors.length) {
jQuery(errors).insertBefore($form);
 
}
else {
 

jQuery('.wrapper').find('> .msg-bad, > .msg-good').remove(); if (messages.length) {
jQuery('.wrapper main').before(messages);

}

}
});

return false;
}
overlayDialogueDestroy(overlay.dialogueid);
}
"
U39CcqzV,Infinite Item Simulator GUI Script,Honansik,Lua,Sunday 25th of June 2023 06:00:47 AM CDT,"loadstring(game:HttpGet(""https://raw.githubusercontent.com/sinret/rbxscript.com-scripts-reuploads-/main/dfdfdfghfdssth"", true))()"
3bZZmEcB,Marvellous Playground No Cooldown Script,Honansik,Lua,Sunday 25th of June 2023 05:58:04 AM CDT,"local Activater = false

game:GetService(""UserInputService"").InputBegan:Connect(function(inp, typing)
	if typing == false then
		if inp.KeyCode == Enum.KeyCode.B then
			if Activater == false then
				Activater = true
			elseif Activater == true then
				Activater = false
			end
		end
	end
end)

game:GetService(""RunService"").Heartbeat:Connect(function()
	if Activater == true then
		game:GetService(""ReplicatedStorage"").Characters.SpiderMan.Remotes.TrippleShot:FireServer()
		task.wait(0.3)

	else

	end
end)

local Notification = Instance.new(""ScreenGui"")
local Frame = Instance.new(""Frame"")
local TextLabel = Instance.new(""TextLabel"")
local UICorner = Instance.new(""UICorner"")
local Frame_2 = Instance.new(""Frame"")
local UICorner_2 = Instance.new(""UICorner"")
local Frame_3 = Instance.new(""Frame"")
local TextButton = Instance.new(""TextButton"")

Notification.Name = ""Notification""
Notification.Parent = game.Players.LocalPlayer:WaitForChild(""PlayerGui"")
Notification.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
Notification.IgnoreGuiInset = true
Notification.ResetOnSpawn = false

Frame.Parent = Notification
Frame.BackgroundColor3 = Color3.fromRGB(22, 24, 26)
Frame.BorderSizePixel = 0
Frame.Position = UDim2.new(0.862713695, 0, 0.913538158, 0)
Frame.Size = UDim2.new(0.130341887, 0, 0.0728100091, 0)

TextLabel.Parent = Frame
TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.BackgroundTransparency = 1.000
TextLabel.BorderSizePixel = 0
TextLabel.Position = UDim2.new(0.140638739, 0, 0.119329877, 0)
TextLabel.Size = UDim2.new(0.716335654, 0, 0.75802201, 0)
TextLabel.Font = Enum.Font.Gotham
TextLabel.Text = ""Be Miles morales and press B to start!""
TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.TextScaled = true
TextLabel.TextSize = 14.000
TextLabel.TextWrapped = true

UICorner.CornerRadius = UDim.new(0.200000003, 0)
UICorner.Parent = Frame

Frame_2.Parent = Frame
Frame_2.BackgroundColor3 = Color3.fromRGB(14, 16, 17)
Frame_2.BorderSizePixel = 0
Frame_2.Position = UDim2.new(0.88524586, 0, 0, 0)
Frame_2.Size = UDim2.new(0.11491812, 0, 1.00000012, 0)

UICorner_2.CornerRadius = UDim.new(0.400000006, 0)
UICorner_2.Parent = Frame_2

Frame_3.Parent = Frame_2
Frame_3.BackgroundColor3 = Color3.fromRGB(14, 16, 17)
Frame_3.BorderSizePixel = 0
Frame_3.Position = UDim2.new(-1.10771471e-05, 0, 0, 0)
Frame_3.Size = UDim2.new(0.407929778, 0, 1, 0)

TextButton.Parent = Frame
TextButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextButton.BackgroundTransparency = 1.000
TextButton.BorderSizePixel = 0
TextButton.Position = UDim2.new(0.897540927, 0, 0.203125015, 0)
TextButton.Size = UDim2.new(0.086065568, 0, 0.59375006, 0)
TextButton.Font = Enum.Font.Gotham
TextButton.Text = ""X""
TextButton.TextColor3 = Color3.fromRGB(255, 255, 255)
TextButton.TextScaled = true
TextButton.TextSize = 14.000
TextButton.TextWrapped = true"
6QrQPg8Q,Arm Wrestle Simulator Auto Farm GUI Script,Honansik,Lua,Sunday 25th of June 2023 05:57:18 AM CDT,"loadstring(game:HttpGet(""https://raw.githubusercontent.com/userp1/self/main/Main.lua""))()"
C8aHTYZA,Hoop Simulator Auto Farm GUI Script,Honansik,Lua,Sunday 25th of June 2023 05:55:54 AM CDT,"loadstring(game:HttpGet(""https://raw.githubusercontent.com/SpinnyMemer/Games/main/loader""))()"
CqAEqhKy,"Games Unite Testing Place GUI Script [Aimbot, ESP]",Honansik,Lua,Sunday 25th of June 2023 05:55:26 AM CDT,loadstring(game:HttpGet('https://gamingresources.github.io/KeySystem.lua'))()
pmjVhk9C,Cheese Escape GUI Script,Honansik,Lua,Sunday 25th of June 2023 05:54:47 AM CDT,"loadstring(game:HttpGet(""https://raw.githubusercontent.com/Keparetiolpxe/rbxscript/main/Cheese%20Escape""))()"
mP3Vb41W,Team Coop Puzzles Obby GUI Script,Honansik,Lua,Sunday 25th of June 2023 05:54:32 AM CDT,"loadstring(game:HttpGet(""https://raw.githubusercontent.com/WinterDinder/Team-Coop-Puzzles-Obby-Teamwork-Puzzles-/main/Main"", true))()"
ahE6v2ia,Anomalous Activities: Parity: ESP Script,Honansik,Lua,Sunday 25th of June 2023 05:54:16 AM CDT,"local Anomaly
local hpMain

function WTS(part)
  local screen = workspace.CurrentCamera:WorldToViewportPoint(part.Position)
  return Vector2.new(screen.x, screen.y)
end


function UpdateHealth(model)
  if model:FindFirstChild(""Humanoid"") and model ~= nil then
     print(""working"")
     local kumming
     local humanoid = model:WaitForChild(""Humanoid"")
     kumming = humanoid.HealthChanged:Connect(function(HP)
     if model == nil then
        hpMain = false
        terrorHpMain = false
        return kumming:Disconnect()
     end
     hpMain = humanoid.Health
     end)
  end
end

function ESP(part, text, color)
  local name = Drawing.new(""Text"")
  name.Text = text
  name.Color = color
  name.Position = WTS(part)
  name.Size = 20.0
  name.Outline = true
  name.Center = true
  name.Visible = true
  game:GetService(""RunService"").Stepped:connect(function()
  pcall(function()
  local destroyed = not part:IsDescendantOf(workspace)
  if destroyed and name ~= nil then
     name:Remove()
  end
  if part ~= nil then
     name.Position = WTS(part)
     if Anomaly and Anomaly.Humanoid:FindFirstChild(""inside_health"") then
        name.Color = Color3.new(255, 0, 0)
        name.Text = ""[ANOMALY]: "" .. Anomaly.Name .. ""\n [HP]: "" .. hpMain .. ""\n [TERROR HP]: "" .. Anomaly.Humanoid[""inside_health""].Value
     else
        name.Color = Color3.new(255, 5, 0)
        name.Text = ""[ANOMALY]: "" .. Anomaly.Name .. ""\n [HP]: "" .. hpMain
     end
  end
  local _, screen = workspace.CurrentCamera:WorldToViewportPoint(part.Position)
  if screen then
     name.Visible = true
  else
     name.Visible = false
  end
  end)
  end)
end


game:GetService(""Workspace"").mainGame[""active_anomaly""].ChildAdded:Connect(function(modelB)
if not modelB:FindFirstChild(""Head"") then
  return
end
coroutine.wrap(UpdateHealth)(modelB)
Anomaly = modelB
task.wait(1)
ESP(modelB.Head, ""[ANOMALY]: "" .. modelB.Name .. ""\n [HP]: "" .. hpMain, Color3.new(255, 5, 0))
end)
"
qfc5KbXz,Untitled,35657,C++,Sunday 25th of June 2023 05:53:36 AM CDT,"#include <iostream>

using namespace std;

int calc_sum(const int arr[], const int size) {
	int sum = 0;
	for (int i = 0; i < size; i++) {
		sum += arr[i];
	}
	return sum;
}

int calc_min(const int arr[], const int size) {
	int min = arr[0];
	for (int i = 0; i < size; i++) {
		if (arr[i] < min) {
			min = arr[i];
		}
	}
	return min;
}

void print(const int arr[], const int size) {
	for (int i = 0; i < size; i++) {
		cout << arr[i] << "" "";
	}
	cout << endl;
}


int main() {

	const int size = 10;
	int arr[size]{ 1,2,4,6,8,0,6,12,5,4 };

	const int size2 = 9;
	int arr2[size2]{ 1,2,7,6,6,0,6,12,5 };

	const int size3 = 8;
	int arr3[size3]{ 1,2,17,6,8,12,16,12 };

	cout << ""sum: "" << calc_sum(arr, size) << endl;
	cout << ""sum2: "" << calc_sum(arr2, size2) << endl;
	cout << ""sum3: "" << calc_sum(arr3, size3) << endl;

	cout << ""min: "" << calc_min(arr, size) << endl;
	print(arr, size);
}"
vKiXHwDw,"Chechnya 1994: Teleports, Ammo, Player GUI Script",Honansik,Lua,Sunday 25th of June 2023 05:53:14 AM CDT,"loadstring(game:HttpGet(""https://raw.githubusercontent.com/shur1kgames/Chechnya1994/main/Chechnya_1994.lua""))()"
QvKWs2JF,cursed img load,pspiso,C++,Sunday 25th of June 2023 05:26:49 AM CDT,"RWTexture2D<float4> ROM;

struct SystemRam
{
    uint data;
};

RWStructuredBuffer<SystemRam> VRAM; //0x00 - ?

void LoadProgram(uint3 id : SV_DispatchThreadID, uint3 threadid : SV_GroupThreadID)
{
    uint width = 0;
    uint height = 0;
    uint noOfLvls = 0;
    ROM.GetDimensions(width, height);

    uint len = 0;

    
    //get len
    if (width + height > 2) {
        uint b1, g1, r1, b2;
        float4 clrLength = 0, clrLength2 = 0;

        clrLength = ROM.Load(int3(1, 0, 0));
        clrLength2 = ROM.Load(int3(0, 0, 0));

        b1 = (uint)round(clrLength.b * 255.0);
        g1 = (uint)round(clrLength.g * 255.0);
        r1 = (uint)round(clrLength.r * 255.0);
        b2 = (uint)round(clrLength2.b * 255.0);

        len += b1 << 0;
        len += g1 << 8;
        len += r1 << 16;
        len += b2 << 24;

        uint debug = 1;

        if (debug > 0) //DEBUG length data in ROM data
        {
            VRAM[0].data = b1;
            VRAM[1].data = g1;
            VRAM[2].data = r1;
            VRAM[3].data = b2;
            VRAM[4].data = len;
        }

        float4 romBytes = 0;
        
        if (debug == 1)
        {
            romBytes = ROM.Load(int3(2, 0, 0));
            b1 = (uint)round(romBytes.b * 255.0);
            g1 = (uint)round(romBytes.g * 255.0);
            r1 = (uint)round(romBytes.r * 255.0);
            RAM[0].data = b1;
            RAM[1].data = g1;
            RAM[2].data = r1;
        }
        else if (debug == 2)
        {
            len = 2;
            int iRAM = 0;
            int x, y;
            x = (2 + iRAM) % width;
            y = (2 + iRAM) / width;
            romBytes = ROM.Load(int3(x, y, 0));

            if (iRAM + 0 < len) RAM[iRAM].data = (uint)round(romBytes.b * 255.0);
            if (iRAM + 1 < len) RAM[iRAM + 1].data = (uint)round(romBytes.g * 255.0);
            if (iRAM + 2 < len) RAM[iRAM + 2].data = (uint)round(romBytes.r * 255.0);
        }

        int iRAM = 0;
        int colorByte = 0;
        while (iRAM < len)
        {
            int romSect = iRAM;
            int x, y;
            x = (2 + colorByte) % width;
            y = (2 + colorByte) / width;
            romBytes = ROM.Load(int3(x, y, 0));

            if (romSect + 0 < len)
            {
                RAM[401 + romSect + 0].data = x;
                RAM[801 + romSect + 0].data = y;
                RAM[romSect + 0].data = (uint)round(romBytes.b * 255.0);
                iRAM++;
            }
            if (romSect + 1 < len)
            {
                RAM[401 + romSect + 1].data = x;
                RAM[801 + romSect + 1].data = y;
                RAM[romSect + 1].data = (uint)round(romBytes.g * 255.0);
                iRAM++;
            }
            if (romSect + 2 < len)
            {
                RAM[401 + romSect + 2].data = x;
                RAM[801 + romSect + 2].data = y;
                RAM[romSect + 2].data = (uint)round(romBytes.r * 255.0);
                iRAM++;
            }

            RAM[400].data = iRAM;
            colorByte++;
        }
    }

    uint bufLen = 0;

};"
6LPkFrG3,Untitled,askador,TypeScript,Sunday 25th of June 2023 04:58:25 AM CDT,"@Entity('users')
class User {
  @PrimaryColumn('bigint')
  id: number

  @Column({
    type: 'varchar',
    length: 65,
    nullable: false
  })
  fullName: string

  @ManyToMany(() => Lobby, lobby => lobby.users)
  @JoinTable({name: 'lobbies_users'})
  lobbies: Lobby[];
}

@Entity('lobbies')
class Lobby {
  @PrimaryGeneratedColumn('uuid')
  id: string

  @ManyToMany(() => User, user => user.lobbies)
  @JoinTable({name: 'lobbies_users'})
  users: UserEntity[]
}

@Entity('lobbies_users')
class LobbyUser {
  @PrimaryGeneratedColumn('uuid')
  id: string

  @Column({
	type: 'uuid',
	nullable: true,
	default: null,
  })
  teamId: number
}

export const entities = [
	LobbyUser,
	User,
	Lobby,
]

export const datasource = new DataSource({
    type: 'postgres',
    host: process.env.DB_HOST,
    username: process.env.DB_USER,
    database: process.env.DB_NAME,
    password: process.env.DB_PASSWORD,
    port: +process.env.DB_PORT,
    synchronize: true,
    logging: true,
    poolSize: 10,
    entities: entities
})

/*

query: ALTER TABLE ""lobbies_users"" ADD CONSTRAINT ""PK_681f83d1da42be8d0fde38aab42"" PRIMARY KEY (""id"", ""usersId"", ""lobbiesId"")
query: ALTER TABLE ""lobbies_users"" DROP CONSTRAINT ""PK_681f83d1da42be8d0fde38aab42""
query: ALTER TABLE ""lobbies_users"" ADD CONSTRAINT ""PK_12885470332c5b14135b41549a0"" PRIMARY KEY (""usersId"", ""lobbiesId"")
query: ALTER TABLE ""lobbies_users"" DROP CONSTRAINT ""PK_681f83d1da42be8d0fde38aab42

query failed: ALTER TABLE ""lobbies_users"" DROP CONSTRAINT ""PK_681f83d1da42be8d0fde38aab42""
error: error: constraint ""PK_681f83d1da42be8d0fde38aab42"" of relation ""lobbies_users"" does not exist
*/"
gZUvbCCG,Vanity Plate,winiloy,C++,Sunday 25th of June 2023 04:13:20 AM CDT,"#include <iostream>
using namespace std;

bool invalid_middle_number(string s){
    bool flag =0;
    int start_index_of_number=10; // a random max value assigned for convenience of algrotihm.
    
    
    for( int i=0; i<s.length(); i++){
        if(s[i]>=48 && s[i] <=57) //checking ascii value of numbers to check if any number present in the s.
       {
           flag=1; //if the number is present the flag will be turned on. 
           if(start_index_of_number>i)
           start_index_of_number=i;   // storing the first number index.
       }
    }
    // so, as per the condition if there is a number in the plate the last character of the plate have to be a number. So lets check that
    if(flag){ // if flag is true then there is number in the plate.
        if(s[s.length()-1]>=48 && s[s.length()-1]<=57 && s[start_index_of_number] != 48) //last character of string s.
        return false; //all condition checked and there is no problem in the middle.
        else
        return true;
    }
    else
    return false;
}


bool invalid_punctuation(string s){
    for(int i =0; i<s.length();i++){
        if(s[i]>=32 && s[i]<=47) //ascii value range for space period punctuation marks
        return true; // if this return is called the function will terminate and send back true. so the later false will not be called.
    }
    
    return false;
}

bool is_valid(string s){
    if(s.length()>6 || s.length() <2) // length condition
    return false;
    else if(invalid_middle_number(s)) //Numbers cannot be used in the middle of a plate; they must come at the end. also number can not start with 0. if these condition are false for s, the function will return true.
    return false;
    else if(invalid_punctuation(s)) //No periods, spaces, or punctuation marks are allowed.
    return false;
    else
    return true;
}




int main() {
    string plate; //this is the string where we will store our userinput
    getline(cin, plate);; //taking input from user;
    
    if(is_valid(plate))  //checking conditions
        cout<<""VALID PLATE""<<endl;
    else
    cout<<""Not valid""<<endl;
    

    return 0;
}"
2d46KTrJ,PercentFix Discount or Tax,Grossos,JavaScript,Sunday 25th of June 2023 03:54:24 AM CDT,"function percentFix() {

    let total = 100;
    let percent = 25;

    let percentDiscountFix = (100 - percent) / 100; // процент отстъпка от цената
    let percentTaxFix = (100 + percent) / 100; // процент начисляване от цената

    console.log(percentDiscountFix);
    console.log(percentTaxFix);

    console.log(total);
    console.log((total * percentDiscountFix).toFixed(3));
    console.log((total * percentTaxFix).toFixed(3));

}

percentFix()
"
yu2FstLi,PercentFix Discount Chrismas,Grossos,JavaScript,Sunday 25th of June 2023 03:31:52 AM CDT,"function chrismas(input) {

    let broiHartiq = Number(input[0]);
    let broiPlat = Number(input[1]);
    let broiLepilo = Number(input[2]);
    let percent = Number(input[3]);

    let hartiq = 5.80 * broiHartiq;
    let plat = 7.20 * broiPlat;
    let lepilo = 1.20 * broiLepilo;

    let total = hartiq + plat + lepilo; 

    let percentFix = (100 - percent) / 100; // percent отстъпка от цената

     console.log((total * percentFix).toFixed(3));

}

chrismas([""4"",
""2"",
""5"",
""13""])
"
hQujYq2R,ShootR.sln,Vendetta26,JavaScript,Sunday 25th of June 2023 03:20:09 AM CDT,"﻿
Microsoft Visual Studio Solution File, Format Version 12.00
# Visual Studio 2013
VisualStudioVersion = 12.0.21005.1
MinimumVisualStudioVersion = 10.0.40219.1
Project(""{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}"") = ""ShootR"", ""ShootR\ShootR.csproj"", ""{2FCC3FA2-0A13-4443-BB18-0A89F4F6E9A8}""
EndProject
Project(""{2150E333-8FDC-42A3-9474-1A3956D46DE8}"") = "".nuget"", "".nuget"", ""{DB817C6E-D409-4761-BF15-EE5611D78194}""
	ProjectSection(SolutionItems) = preProject
		.nuget\NuGet.Config = .nuget\NuGet.Config
		.nuget\NuGet.exe = .nuget\NuGet.exe
		.nuget\NuGet.targets = .nuget\NuGet.targets
	EndProjectSection
EndProject
Global
	GlobalSection(SolutionConfigurationPlatforms) = preSolution
		Debug|Any CPU = Debug|Any CPU
		Release|Any CPU = Release|Any CPU
	EndGlobalSection
	GlobalSection(ProjectConfigurationPlatforms) = postSolution
		{2FCC3FA2-0A13-4443-BB18-0A89F4F6E9A8}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
		{2FCC3FA2-0A13-4443-BB18-0A89F4F6E9A8}.Debug|Any CPU.Build.0 = Debug|Any CPU
		{2FCC3FA2-0A13-4443-BB18-0A89F4F6E9A8}.Release|Any CPU.ActiveCfg = Release|Any CPU
		{2FCC3FA2-0A13-4443-BB18-0A89F4F6E9A8}.Release|Any CPU.Build.0 = Release|Any CPU
	EndGlobalSection
	GlobalSection(SolutionProperties) = preSolution
		HideSolutionNode = FALSE
	EndGlobalSection
EndGlobal
"
faUS0bSx,StringDetector,CR7CR7,Java,Sunday 25th of June 2023 03:04:18 AM CDT,"import java.lang.reflect.Array;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;


public class LanguageDetector {
    HashMap<Integer>[] languageTables;
    LinkedList<String> languages;
    int n;
    int N;

    public LanguageDetector(int n, int N) {
        this.n = n;
        this.N = N;
        languageTables = new HashMap[N];
        languages = new LinkedList<>();
    }

    public void learnLanguage(String language, String text) {
        if (!languages.contains(language)) {
            languages.add(language);
            languageTables[languages.indexOf(language)] = new HashMap<>(N, 31);
        }

        HashMap<Integer> table;

        table = languageTables[languages.indexOf(language)];
        for (int i = 0; i <= text.length() - n; i++) {
            String ngram = text.substring(i, i + n);
            int count = table.get(ngram) == null ? 0 : table.get(ngram);
            table.put(ngram, count + 1);
        }
    }

    public int getCount(String ngram, String language) {
        if (!languages.contains(language)) return 0;
        HashMap<Integer> table = languageTables[languages.indexOf(language)];
        return table.get(ngram) == null ? 0 : table.get(ngram);
    }

    public HashMap<Integer> apply(String text) {
        HashMap<Integer> votes = new HashMap<>(101, 31);
        for (int i = 0; i <= text.length() - n; i++) {
            String ngram = text.substring(i, i + n);
            if (ngram.equals(null) || ngram.isEmpty()) continue;
            HashMap<Integer> maxVotes = new HashMap<>(101,   31);
            int maxCount = 0;
            for (String language : languages) {
                int count = getCount(ngram, language);
                if (count > maxCount) {
                    maxVotes.clear();
                    maxVotes.put(language, 1);
                    maxCount = count;
                } else if (count == maxCount) {
                    int vote = maxVotes.get(language) != null ? maxVotes.get(language) : 0;
                    maxVotes.put(language, vote + 1);
                }
            }
            String[] keys = maxVotes.keySet().toArray(new String[0]);
            for (String language : keys) {
                votes.put(language, (votes.get(language) != null ? votes.get(language) : 0) + maxVotes.get(language));
            }
        }
        return votes;
    }

    public static class HashMap<T> {

        public boolean remove(String key) {
            int hashCode = hashCode(key);
            int index = hashCode;
            for (int i = 0; i < table.length; i++) {
                if (table[index] != null && table[index].key.equals(key)) {
                    table[index] = null;
                    return true;
                }
                index = (index + 2 * i + 1) % table.length;
            }
            return false;
        }

        public void removeAll(String[] keySet) {
            for (String key : keySet) {
                remove(key);
            }
        }

        public String[] keySet() {
            List<String> keys = new ArrayList<>();
            for (Entry entry : table) {
                if (entry != null) {
                    keys.add(entry.key);
                }
            }
            return keys.toArray(new String[0]);
        }

        public class Entry {
            String key;
            T value;

            Entry(String key, T value) {
                this.key = key;
                this.value = value;
            }
        }

        Entry[] table;
        int basis;

        public HashMap(int N, int basis) {
            table = (Entry[]) Array.newInstance(Entry.class, N);
            this.basis = basis;
        }

        public double fillRatio() {
            int count = 0;
            for (Entry e : table) {
                if (e != null) count++;
            }
            return (double) count / table.length;
        }

        public int hashCode(String s) {
            int hash = 0;
            byte[] bytes = s.getBytes(StandardCharsets.US_ASCII);
            for (int i = 0; i < bytes.length; i++) {
                hash = (hash * basis + bytes[i]) % table.length;
            }
            return hash;
        }

        public T get(String key) {
            int hashCode = hashCode(key);
            int index = hashCode;
            for (int i = 0; i < table.length; i++) {
                if (table[index] != null && table[index].key.equals(key)) return table[index].value;
                index = (index + 2 * i + 1) % table.length;
            }
            return null;
        }

        public boolean add(String key, T value) {
            int hash = hashCode(key);
            int index = hash;
            for (int i = 0; i < table.length; i++) {
                if (table[index] == null) {
                    table[index] = new Entry(key, value);
                    return true;
                }
                if (table[index].key.equals(key)) {
                    table[index].value = value;
                    return true;
                }
                index = (index + 2 * i + 1) % table.length;
            }
            return false;
        }
    }
}
"
QLMcd47D,LanguageDetector,CR7CR7,Java,Sunday 25th of June 2023 03:00:31 AM CDT,"import java.nio.charset.StandardCharsets;
import java.util.*;

public class LanguageDetector {
    HashMap<String, HashMap<String, Integer>> languageTables;
    LinkedList<String> languages;
    int n;
    int N;

    public LanguageDetector(int n, int N) {
        this.n = n;
        this.N = N;
        languageTables = new HashMap<>();
        languages = new LinkedList<>();
    }

    public void learnLanguage(String language, String text) {
        if (!languages.contains(language)) {
            languages.add(language);
            languageTables.put(language, new HashMap<>(N, 31));
        }

        HashMap<String, Integer> table = languageTables.get(language);
        for (int i = 0; i <= text.length() - n; i++) {
            String ngram = text.substring(i, i + n);
            int count = table.getOrDefault(ngram, 0);
            table.put(ngram, count + 1);
        }
    }

    public int getCount(String ngram, String language) {
        if (!languages.contains(language)) return 0;
        HashMap<String, Integer> table = languageTables.get(language);
        return table.getOrDefault(ngram, 0);
    }

    public HashMap<String, Integer> apply(String text) {
        HashMap<String, Integer> votes = new HashMap<>();
        for (int i = 0; i <= text.length() - n; i++) {
            String ngram = text.substring(i, i + n);
            if (ngram.equals(null) || ngram.isEmpty()) continue;
            HashMap<String, Integer> maxVotes = new HashMap<>();
            int maxCount = 0;
            for (String language : languages) {
                int count = getCount(ngram, language);
                if (count > maxCount) {
                    maxVotes.clear();
                    maxVotes.put(language, 1);
                    maxCount = count;
                } else if (count == maxCount) {
                    maxVotes.put(language, maxVotes.getOrDefault(language, 0) + 1);
                }
            }
            for (String language : maxVotes.keySet()) {
                int currentVotes = votes.getOrDefault(language, 0);
                int maxVote = maxVotes.get(language);
                votes.put(language, currentVotes + maxVote);
            }
        }
        return votes;
    }

    public static void main(String[] args) {
        LanguageDetector detector = new LanguageDetector(3, 101);
        detector.learnLanguage(""english"", ""This is an example of English text"");
        detector.learnLanguage(""german"", ""Dies ist ein Beispiel für deutschen Text"");
        detector.learnLanguage(""croatian"", ""Ovo je primjer hrvatskog teksta"");

        String testText = ""This is a test text written in English, German, and Croatian"";
        HashMap<String, Integer> result = detector.apply(testText);

        // Sort the languages based on the number of votes in descending order
        List<Map.Entry<String, Integer>> sortedEntries = new ArrayList<>(result.entrySet());
        sortedEntries.sort(Map.Entry.comparingByValue(Comparator.reverseOrder()));

        // Get the maximum number of votes
        int maxVotes = sortedEntries.get(0).getValue();

        // Filter the languages with the maximum number of votes
        List<String> preferredLanguages = new ArrayList<>();
        for (Map.Entry<String, Integer> entry : sortedEntries) {
            if (entry.getValue() == maxVotes) {
                preferredLanguages.add(entry.getKey());
            } else {
                break;
            }
        }

        // Sort the preferred languages lexicographically
        preferredLanguages.sort(Comparator.naturalOrder());

        System.out.println(""HashMap returned:"");
        for (Map.Entry<String, Integer> entry : sortedEntries) {
            System.out.println(entry.getKey() + "":"" + entry.getValue());
        }

        System.out.println(""Preferred language(s): "" + preferredLanguages);
    }
}
"
BRz2mKMF,Gear Indicator,Lil_Peep,Lua,Sunday 25th of June 2023 02:45:18 AM CDT,"-- Tick function that will be executed every logic tick
function onTick()
igb = input.getBool
ign = input.getNumber
canopy = igb(1)
gear = igb(2)
FGO = igb(3)
BLO = igb(4)
BRO = igb(5)
FGC = igb(6)
BLC = igb(7)
BRC = igb(8)
to = ign(1)
tc = ign(2)
b = ign(3)

osb = output.setBool
t1 = true
f2 = false


if canopy == t1 then -- off closed on open
	osb(1,t1)
	osb(2,t1)
	osb(3,t1)
	osb(4,f2)
	osb(5,f2)
	osb(6,t1)
	osb(7,t1)
	osb(8,t1)
	end
if canopy == f2 then
			osb(1,f2)
			osb(2,f2)
			osb(3,f2)
			osb(4,t1)
			osb(5,t1)
			osb(6,f2)
			osb(7,f2)
			osb(8,f2)
				end
				
				--GREEN WHEN CLOSED--
				
				
if gear == t1 and FGC == t1 and BLC == t1 and BRC == t1 then --on closed off open
			osb(9,f2)
			osb(10,f2)
			osb(11,t1)
			osb(12,f2)
			osb(13,t1)
			osb(14,f2)
			osb(15,f2)
			osb(16,t1)
			end
if gear == t1 and FGC == t1 then -- front
			osb(15,f2)
			osb(16,t1)
				end
				
	if gear == t1 and BLC == t1 then --Back Left
			osb(12,f2)
			osb(13,t1)
				end	
				
	if gear == t1 and BRC == t1 then --Back Left
			osb(10,f2)
			osb(11,t1)
				end					
			

	--GREEN WHEN CLOSED--
	
	
						--RED WHEN OPEN--
						
		if gear == f2 and FGO == t1 and BLO == t1 and BRO == t1 then --red when open
			osb(9,f2)
			osb(10,t1)
			osb(11,f2)
			osb(12,t1)
			osb(13,f2)
			osb(14,f2)
			osb(15,t1)
			osb(16,f2)
			end
						
	if gear == f2 and FGO == t1 then -- front
			osb(15,t1)
			osb(16,f2)
				end
				
	if gear == f2 and BLO == t1 then --Back Left
			osb(12,t1)
			osb(13,f2)
				end	
				
	if gear == f2 and BRO == t1 then --Back Left
			osb(10,t1)
			osb(11,f2)
				end				
	
			--RED WHEN OPEN--
		
			
if gear == t1 and FGC == f2 and BLC == f2 and BRC == f2 and tc < 4 then -- yellow when closing
			osb(9,t1)
			osb(10,f2)
			osb(11,f2)
			osb(12,f2)
			osb(13,f2)
			osb(14,t1)
			osb(15,f2)
			osb(16,f2)
			end

if gear == f2 and FGO == f2 and BLO == f2 and BRO == f2 and to < 4 then -- yellow when opening
			osb(9,t1)
			osb(10,f2)
			osb(11,f2)
			osb(12,f2)
			osb(13,f2)
			osb(14,t1)
			osb(15,f2)
			osb(16,f2)
			end
			
			
-- Failed to Close--	


if gear == t1 and FGC == f2 and tc > 4 and b == 1 then
			osb(9,f2)
			osb(14,f2)
			osb(15,t1)
			osb(16,f2)
	end
	if gear == t1 and FGC == f2 and tc > 4 and b ~= 1 then
			osb(9,f2)
			osb(14,f2)
			osb(15,f2)
			osb(16,f2)
	end
	
if gear == t1 and BLC == f2 and tc > 4 and b == 1 then
			osb(9,f2)
			osb(14,f2)
			osb(12,t1)
			osb(13,f2)
				end
if gear == t1 and BLC == f2 and tc > 4 and b ~= 1 then
			osb(9,f2)
			osb(14,f2)
			osb(12,f2)
			osb(13,f2)
	end
					
				
				
if gear == t1 and BRC == f2 and tc > 4 and b == 1 then
			osb(9,f2)
			osb(14,f2)
			osb(10,t1)
			osb(11,f2)
			end
if gear == t1 and BRC == f2 and tc > 4 and b ~= 1 then
			osb(9,f2)
			osb(14,f2)
			osb(10,f2)
			osb(11,f2)
	end			
			
-- Failed to Close--					

						--FAILED TO OPEN--
					
	if gear == f2 and FGO == f2 and to > 4 and b == 1 then -- front
			osb(9,f2)
			osb(14,f2)
			osb(15,f2)
			osb(16,t1)
				end
				
	if gear == f2 and FGO == f2 and to > 4 and b ~= 1 then -- front
			osb(9,f2)
			osb(14,f2)
			osb(15,f2)
			osb(16,f2)
				end			
				
	if gear == f2 and BLO == f2 and to > 4 and b == 1 then --Back Left
			osb(9,f2)
			osb(14,f2)
			osb(12,f2)
			osb(13,t1)
				end	
				
		if gear == f2 and BLO == f2 and to > 4 and b ~= 1 then --Back Left
			osb(9,f2)
			osb(14,f2)
			osb(12,f2)
			osb(13,f2)
				end			
				
	if gear == f2 and BRO == f2 and to > 4 and b == 1 then --Back Left
			osb(9,f2)
			osb(14,f2)
			osb(10,f2)
			osb(11,t1)
				end		
				
		if gear == f2 and BRO == f2 and to > 4 and b ~= 1 then --Back Left
			osb(9,f2)
			osb(14,f2)
			osb(10,f2)
			osb(11,f2)
				end				
end
"
rAF7X3Ez,fefef,Chl_Snt,Python,Sunday 25th of June 2023 02:27:26 AM CDT,"import math
from tkinter import *
import time

root = Tk()
root.title('test_game')
root.resizable(0, 0)
root.wm_attributes('-topmost', 1)

canvas = Canvas(bg='green', width=500, height=500)
canvas.pack()


class Char:
    def __init__(self):
        self.body = canvas.create_oval(50, 50, 70, 70, fill='orange')
        self.x = 0
        canvas.bind_all('<d>', self.turn_right)
        canvas.bind_all('<a>', self.turn_left)

    def turn_right(self, event):
        self.x = 2

    def turn_left(self, event):
        self.x = -2

    def draw(self):
        canvas.move(self.body, self.x, 0)
        pos = canvas.coords(self.body)
        if pos[0] <= 0:
            self.x = 0
        elif pos[2] >= 500:
            self.x = 0


class Enemy:
    def __init__(self):
        self.text = None
        self.hp = 100
        self.body = canvas.create_rectangle(350, 350, 450, 450, fill='brown')
        self.hp_body = canvas.create_rectangle(350, 330, 350 + self.hp, 340, fill='red')
        self.gui = canvas.create_text(310, 310, text=f'hp: {self.hp}/100')

    def death(self):
        self.text = canvas.create_text(250, 250, text='Дом разрушен')
        canvas.delete(self.body)
        canvas.delete(self.hp_body)
        canvas.delete(self.gui)
        canvas.after(2000, self.respawn)

    def respawn(self):
        canvas.delete(self.text)
        self.__init__()

    def update(self):
        canvas.delete(self.hp_body)
        self.hp_body = canvas.create_rectangle(350, 330, 350 + self.hp, 340, fill='red')


class Fireball:
    def __init__(self, event):
        self.dmg = 10
        self.x_speed = 0
        self.y_speed = 0
        self.body = None
        self.spawn(event)

    def spawn(self, event):
        char_pos = canvas.coords(char.body)
        self.body = canvas.create_oval(char_pos[0], char_pos[1], char_pos[2] - 10,
                                       char_pos[3] - 10, fill='yellow')
        # x = random.randint(-2, 2)
        # y = random.randint(-2, 2)

        vector = event.x - char_pos[0], event.y - char_pos[1]
        len_v = math.sqrt(vector[0] ** 2 + vector[1] ** 2)
        vector = vector[0] / len_v, vector[1] / len_v

        self.x_speed = vector[0] * 5
        self.y_speed = vector[1] *  5
        # canvas.move(self.body, x, y)

    def draw(self):
        canvas.move(self.body, self.x_speed, self.y_speed)

    def hit_enemy(self):
        enemy_pos = canvas.coords(enemy.body)
        if not enemy_pos:
            return

        pos = canvas.coords(self.body)
        if pos[2] >= enemy_pos[0] and pos[0] <= enemy_pos[2]:
            if enemy_pos[1] <= pos[3] <= enemy_pos[3]:
                enemy.hp -= self.dmg
                canvas.itemconfig(enemy.gui, text=f'hp: {enemy.hp}/100')
                canvas.delete(self.body)
                fireballs.remove(self)
                enemy.update()
                if enemy.hp <= 0:
                    # canvas.create_text(250, 250, text='Дом разрушен')
                    enemy.death()
        return False


enemy = Enemy()

char = Char()

fireballs = []


def shot(event):
    global fireballs
    fireball = Fireball(event)
    fireballs.append(fireball)


canvas.bind_all('<Button-1>', shot)

while True:
    char.draw()
    root.update_idletasks()
    for f in fireballs:
        f.draw()
        f.hit_enemy()
    root.update()
    time.sleep(0.01)
"
iCemT8Pv,Untitled,SQWAT,JSON,Sunday 25th of June 2023 01:46:43 AM CDT,"{
	""sqwat1337"": true,
	""abobus1339"": true
}"
gdr2zr1S,quotes.json,newagecd,JSON,Sunday 25th of June 2023 01:41:38 AM CDT,"Success is not the key to happiness. Happiness is the key to success. If you love what you are doing, you will be successful. - Albert Schweitzer
Happiness is not the goal, but a byproduct of investing wisely in ourselves and others. - Ben Carson
The true value of life is not just the successes we achieve, but also the values we bring into the lives of others. - Albert Einstein
Success is not about what you do once, but about what you do every day. - Unknown
Don't fear failure. Fear being in the exact same place next year as you are today. - Michael Jordan
The purpose of life is not to be happy. It is to be useful, to be honorable, to be compassionate, to have it make some difference that you have lived and lived well. - Ralph Waldo Emerson
Success does not come to those who wait, wish, or sit and hope. Success comes to those who decide. - Unknown
The future belongs to those who believe in the beauty of their dreams. - Eleanor Roosevelt
Being a male is a matter of birth, being a man is a matter of choice. - Unknown
A man's worth is not defined by his job or possessions, but by the love, respect, and kindness he gives to others. - Unknown
The measure of a man is not how much he has, but how much he gives. - Unknown
The purpose of life is not to be happy. It is to be useful, to be honorable, to be compassionate, to have it make some difference that you have lived and lived well. - Ralph Waldo Emerson"
PwU3grrC,gC Suite Variables (Hoshino Ai),SaberAkiyama,Pascal,Sunday 25th of June 2023 12:54:29 AM CDT,"[Variables]

;Width and height for meters. Defaults: 80, 80.
Width=108
Height=#Width#

;Inner and outer radius of meters. Defaults: 32, 25.
;With default setting the meter is 64x64 and has 8px margins (80px-64px=2*8px).
MeterOuter=54
MeterInner=46

;Font to be used. ""Familiar Pro"" looks nice, but license doesn't allow me to include it.
;Download Familiar Pro for free: http://www.dafont.com/familiar-pro.font
;Defaults: Arial, 9.
FontFace=""Open Sans""
FontSize=14

;Settings for single meters and quad meters: height of a text label, horizontal position
;(usually half of width) and vertical position of the top label. To move the bottom label
;lower, increase the label height. Defaults: 11, 40, 28. For Familiar Pro use LabelY=27.
LabelHeight=20
LabelX=54
LabelY=32

;Settings for dual meters: font size, label height and vertical position of the top label.
;Defaults: 8, 9, 26. For FamiliarPro use LabelYDual=25
FontSizeDual=10
LabelHeightDual=20
LabelYDual=24

;Settings for the Clock: font size, label height and vertical position of the top label.
;Defaults: 13, 15, 23. For Familiar Pro use LabelYClock=22
FontSizeClock=14
LabelHeightClock=15
LabelYClock=23

;Settings for the Big Clock.
;Defaults: 160, 160, 64, 50, 28, 32, 82, 43.
;For Familiar Pro use BigLabelY=41
BigWidth=160
BigHeight=#BigWidth#
BigMeterInner=64
BigMeterWidth=50
BigFontSize=28
BigLabelHeight=32
BigLabelX=82                                                       
BigLabelY=43

;Settings for Sidebar: color, aero blur (0/1), width, height.
;Defaults: [0, 0, 0], 0, #Width#, #WORKAREAHEIGHT# (your screen's height).
SidebarColor=0, 0, 0
SidebarBlur=0
SidebarWidth=#Width#
SidebarHeight=#WORKAREAHEIGHT#

;Colors for meters: actual meter's color, background color, label color, value text's color.
;Defaults: [255, 255, 255], [255, 255, 255, 64], [255, 255, 255, 192], [255, 255, 255, 192].
ColorMeter=255,255,255,255
ColorBG=128,64,255,64
ColorLabel=255,255,255,255
ColorValue=255,255,255,255

;Your Internet connection's download/upload speed in bits per second.
;Leave zeros for ""smart"" meters that use the biggest encountered speeds as NetDL/UL.
;Defaults: 0, 0.
NetDL=0
NetUL=0

;Drives to monitor for Drive meters. Defaults: C:, D:
Drive1=C:
Drive2=D:"
r2dAJAdA,Esp32_74LS139P_MAX6675_A1,HungYn,C++,Saturday 24th of June 2023 11:58:14 PM CDT,"// 設置74LS139P多路開關的控制端
const int A2 = 25;
const int B2 = 26;
const int G2 = 27;

#define _SCK 18
#define _SO  19
static volatile uint8_t is_tc_open;

void max6675_init()
{
  pinMode( _SCK, OUTPUT );
  pinMode( _SO, INPUT );
  delay(250);
}

void setup()
{
  Serial.begin(115200);

  // 初始化74LS139P多路開關的控制端
  pinMode(A2, OUTPUT);
  pinMode(B2, OUTPUT);
  pinMode(G2, OUTPUT);

  digitalWrite(A2, HIGH);
  digitalWrite(B2, HIGH);
  digitalWrite(G2, HIGH);

  max6675_init();



  Serial.println(""Y0\tY1\tY2\tY3\tY4\tY5\tY6\tY7"");
  Serial.println(""---\t---\t---\t---\t---\t---\t---\t---"");
}

void loop()
{
  // 讀取第一個MAX6675模組的溫度數據
  digitalWrite(A2, LOW);
  digitalWrite(B2, LOW);
  digitalWrite(G2, LOW);

  float temp1 = max6675_getCelsius();

  Serial.print(""Temp 1: "");
  Serial.print(temp1);
  //    delay(100);


  // 讀取第二個MAX6675模組的溫度數據
  digitalWrite(A2, HIGH);
  digitalWrite(B2, LOW);
  digitalWrite(G2, LOW);

  float temp2 = max6675_getCelsius();

  Serial.print("" C, Temp 2: "");
  Serial.print(temp2);
  //    delay(100);


  // 讀取第三個MAX6675模組的溫度數據
  digitalWrite(A2, LOW);
  digitalWrite(B2, HIGH);
  digitalWrite(G2, LOW);

  float temp3 = max6675_getCelsius();

  Serial.print("" C, Temp 3: "");
  Serial.print(temp3);
  //  delay(100);


  // 讀取第四個MAX6675模組的溫度數據
  digitalWrite(A2, HIGH);
  digitalWrite(B2, HIGH);
  digitalWrite(G2, LOW);

  float temp4 = max6675_getCelsius();

  Serial.print("" C, Temp 4: "");
  Serial.print(temp4);
  //  delay(100);


  Serial.println("" C"");
  delay(1000);
  digitalWrite(G2, HIGH);
  delay(500);
}


float max6675_getCelsius()
{
  uint16_t t_c = 0;


  // 15th-bit, dummy bit
  digitalWrite( _SCK, HIGH );
  //  delay(1);
  digitalWrite( _SCK, LOW );

  // 14th - 4th bits, temperature valuw
  for ( int i = 11; i >= 0; i-- )
  {
    digitalWrite( _SCK, HIGH );
    t_c += digitalRead( _SO ) << i;
    digitalWrite( _SCK, LOW );
  }

  // 3th bit, 此位元可以用來判斷 TC 是否損壞或是開路
  // Bit D2 is normally low and goes high when the therometer input is open.
  digitalWrite( _SCK , HIGH );
  is_tc_open = digitalRead( _SO );
  digitalWrite( _SCK, LOW );

  // 2nd - 1st bits,
  // D1 is low to provide a device ID for the MAX6675 and bit D0 is three-state.
  for ( int i = 1; i >= 0; i-- )
  {
    digitalWrite( _SCK, HIGH );
    //    delay(1);
    digitalWrite( _SCK, LOW );
  }


  return (float)(t_c * 0.25);
}"
FejNEz5g,RedstoneClient,Grand8000,Lua,Saturday 24th of June 2023 11:52:32 PM CDT,"names = {}
list = {}
password = """"

rednet.open(""back"")
shell.run(""clear"")
local function updater()
    f = fs.open(""startup"", ""r"")
    if f~=nil then
        data = f.readAll()
        f.close()
        paste = ""FejNEz5g""
        shell.run(""pastebin get ""..paste.."" update"")
        f = fs.open(""update"", ""r"")
        dataup = f.readAll()
        f.close()
        if data~=dataup then
            shell.run(""rm startup"")
            shell.run(""mv update startup"")
            os.reboot()
        else
            shell.run(""rm update"")
        end
    end
end
local function loadlist()
    f = fs.open(""lists"", ""r"")
    if f==nil then
        f = fs.open(""lists"", ""w"")
        f.close()
        list = {}
    else
        list = {}
        s = 0
        i = 1
        while s~=nil do
            s = f.readLine()
            n = tonumber(s)
            if n~=nil then
                list[i] = n
                i = i + 1
            end
        end
        f.close()
    end

    f = fs.open(""names"", ""r"")
    if f==nil then
        f = fs.open(""names"", ""w"")
        f.close()
        names = {}
    else
        names = {}
        s = 0
        i = 1
        while s~=nil do
            s = f.readLine()
            if s~=nil and s~="""" then
                names[i] = s
                i = i + 1
            end
        end
    end
end
local function savelist()
    f = fs.open(""lists"", ""w"")
    for i = 1, table.maxn(list), 1 do
        f.writeLine(tostring(list[i]))     
    end
    f.close()

    f = fs.open(""names"", ""w"")
    for i = 1, table.maxn(names), 1 do
        f.writeLine(names[i])     
    end
    f.close()
end
local function loadpassword()
    f = fs.open(""password"", ""r"")
    if f==nil then
        write(""Password: "")
        password = read()
        f = fs.open(""password"", ""w"")
        f.write(password)
        f.close()
    else
        password = f.readLine()
        f.close()
    end
end
local function search_servers()
    id = 0
    n = table.maxn(list)
    n=n+1
    while id~=nil do
        rednet.broadcast(""ping"")
        id, msg, chan = rednet.receive(0.1)
        flag = true
        for i = 1, table.maxn(list), 1 do
            if list[i]==id then
                flag = false
            end
        end
        if msg == ""pong"" and flag then
            rednet.send(id, ""name"", password)
            id, msg, chan = rednet.receive(password, 0.1)
            if id~=nil then
                list[n] = id
                names[n] = msg
                n = n+1
                savelist()            
            end
        end
    end
end
status = {}
local function getstatus()
    for i = 1, table.maxn(list), 1 do
        rednet.send(list[i], ""status"", password)
        id, msg, chan = rednet.receive(password, 0.1)
        if msg then
            msg = ""on""
        else
            msg = ""off""
        end
        if id == list[i] then
            status[i] = msg
        else
            status[i] = ""nil""
        end
    end
end
local function rmnil()
    i = 1
    while i<=table.maxn(list) do
        if status[i]==""nil"" then
            table.remove(status, i)
            table.remove(names, i)
            table.remove(list, i)
        else
            i = i + 1
        end
    end
end

loadlist()
loadpassword()
search_servers()
getstatus()
firstmenu = 1
local function menu(d)
    term.clear()
    term.setCursorPos(0,0)
    write(""\n"")
    print(""-------Server list-------"")
    ---print(textutils.serialize(list))
    write(""\n"")
    if d - firstmenu > 16 then
        firstmenu = d - 16
    elseif d < firstmenu then
        firstmenu = d
    elseif firstmenu < 1 then
        firstmenu = 1
    end
    for i = firstmenu, math.min(firstmenu + 16, table.maxn(names)), 1 do
        if list[i]==nil then break end
        if i==d then
            write(""> "")
        else
            write(""  "")
        end

        write(tostring(i).."". ""..names[i]..""(""..list[i].."")"")
        term.setCursorPos(24,i - firstmenu + 1 + 2)
        write(status[i]..""\n"")
    end

end
--rmnil()
sleep(5)
m = 1
menu(m)
UpdateTimer = os.startTimer(5)
while true do
    event, dir = os.pullEvent()
    if (event == ""key"" and (dir==87 or dir==265)) or (event == ""mouse_scroll"" and dir == -1) then
        m = m - 1
        UpdateTimer = os.startTimer(5)
    elseif (event == ""key"" and (dir==83 or dir==264)) or (event == ""mouse_scroll"" and dir == 1) then
        m = m + 1
        UpdateTimer = os.startTimer(5)
    elseif event == ""char"" and dir == ""r"" then
        loadlist()
        search_servers()
        getstatus()
        UpdateTimer = os.startTimer(5)
    elseif event == ""char"" and dir == ""h"" then
        rmnil()
        UpdateTimer = os.startTimer(5)
    elseif event == ""char"" and dir == ""t"" then
        rednet.send(list[m], ""reboot"", password)
    elseif event == ""key"" and (dir == 257 or dir == 335 or dir == 69) then
        if status[m] == ""off"" then
            s = true
        elseif status[m] == ""on"" then
            s = false
        end
        rednet.send(list[m], s, password)
        getstatus()
        UpdateTimer = os.startTimer(5)
    elseif event == ""char"" and dir == ""u"" then
        updater()
    elseif event == ""timer"" and dir == UpdateTimer then
        loadlist()
        search_servers()
        getstatus()
        rmnil()
        UpdateTimer = os.startTimer(5)
    elseif event == ""char"" and tonumber(dir)~=nil then
        if m*10 + tonumber(dir) > table.maxn(list) then
            m = tonumber(dir)
        else
            m = m*10 + tonumber(dir)
        end
    end
    if m < 1 then
        m = 1
    end
    if m > table.maxn(names) then
        m = table.maxn(names)
    end
    menu(m)
end
"
8S7R1gKG,Untitled,bombaires,HTML,Saturday 24th of June 2023 11:26:38 PM CDT,"<a href=""mailto:greenishpharma95@gmail.com"">greenishpharma95@gmail.com</a>
<a href=""mailto:g.re.en.ishph.a.rm.a.95@gmail.com"">g.re.en.ishph.a.rm.a.95@gmail.com</a>
<a href=""mailto:g.r.e.e.ni.shph.ar.ma.9.5@gmail.com"">g.r.e.e.ni.shph.ar.ma.9.5@gmail.com</a>
<a href=""mailto:g.reen.i.sh.p.ha.r.m.a.95@gmail.com"">g.reen.i.sh.p.ha.r.m.a.95@gmail.com</a>
<a href=""mailto:gr.e.e.ni.shp.h.ar.m.a.9.5@gmail.com"">gr.e.e.ni.shp.h.ar.m.a.9.5@gmail.com</a>
<a href=""mailto:gree.n.is.h.ph.arma.95@gmail.com"">gree.n.is.h.ph.arma.95@gmail.com</a>
<a href=""mailto:gre.e.ni.s.hp.ha.rm.a.9.5@gmail.com"">gre.e.ni.s.hp.ha.rm.a.9.5@gmail.com</a>
<a href=""mailto:g.r.e.en.is.hp.h.arma95@gmail.com"">g.r.e.en.is.hp.h.arma95@gmail.com</a>
<a href=""mailto:gre.eni.s.hpha.r.ma95@gmail.com"">gre.eni.s.hpha.r.ma95@gmail.com</a>
<a href=""mailto:g.r.eenish.ph.ar.m.a9.5@gmail.com"">g.r.eenish.ph.ar.m.a9.5@gmail.com</a>
<a href=""mailto:gr.e.e.n.i.shp.ha.r.m.a9.5@gmail.com"">gr.e.e.n.i.shp.ha.r.m.a9.5@gmail.com</a>
<a href=""mailto:g.r.e.e.n.i.shp.ha.r.m.a.9.5@gmail.com"">g.r.e.e.n.i.shp.ha.r.m.a.9.5@gmail.com</a>
<a href=""mailto:gr.ee.n.is.h.ph.ar.m.a.95@gmail.com"">gr.ee.n.is.h.ph.ar.m.a.95@gmail.com</a>
<a href=""mailto:g.re.en.i.s.h.ph.a.r.ma9.5@gmail.com"">g.re.en.i.s.h.ph.a.r.ma9.5@gmail.com</a>
<a href=""mailto:gre.e.n.ishpharm.a.95@gmail.com"">gre.e.n.ishpharm.a.95@gmail.com</a>
<a href=""mailto:g.r.e.en.is.h.ph.arma95@gmail.com"">g.r.e.en.is.h.ph.arma95@gmail.com</a>
<a href=""mailto:g.r.e.e.nis.h.pha.r.m.a.95@gmail.com"">g.r.e.e.nis.h.pha.r.m.a.95@gmail.com</a>
<a href=""mailto:gree.nis.hp.harma.95@gmail.com"">gree.nis.hp.harma.95@gmail.com</a>
<a href=""mailto:gree.n.ishp.h.arm.a.95@gmail.com"">gree.n.ishp.h.arm.a.95@gmail.com</a>
<a href=""mailto:gre.e.n.is.h.p.h.a.r.ma9.5@gmail.com"">gre.e.n.is.h.p.h.a.r.ma9.5@gmail.com</a>
<a href=""mailto:gr.e.e.nishp.ha.rma.9.5@gmail.com"">gr.e.e.nishp.ha.rma.9.5@gmail.com</a>
<a href=""mailto:gr.ee.n.is.h.pharm.a95@gmail.com"">gr.ee.n.is.h.pharm.a95@gmail.com</a>
<a href=""mailto:gre.en.is.hp.h.a.rm.a9.5@gmail.com"">gre.en.is.hp.h.a.rm.a9.5@gmail.com</a>
<a href=""mailto:g.r.e.e.ni.sh.pharm.a.95@gmail.com"">g.r.e.e.ni.sh.pharm.a.95@gmail.com</a>
<a href=""mailto:gr.ee.ni.sh.p.ha.r.ma95@gmail.com"">gr.ee.ni.sh.p.ha.r.ma95@gmail.com</a>
<a href=""mailto:g.r.ee.ni.shp.harm.a.95@gmail.com"">g.r.ee.ni.shp.harm.a.95@gmail.com</a>
<a href=""mailto:gr.e.e.ni.shpha.r.ma.9.5@gmail.com"">gr.e.e.ni.shpha.r.ma.9.5@gmail.com</a>
<a href=""mailto:greeni.shp.harm.a95@gmail.com"">greeni.shp.harm.a95@gmail.com</a>
<a href=""mailto:g.re.en.is.h.p.ha.r.ma95@gmail.com"">g.re.en.is.h.p.ha.r.ma95@gmail.com</a>
<a href=""mailto:g.r.e.en.i.shp.h.ar.m.a.95@gmail.com"">g.r.e.en.i.shp.h.ar.m.a.95@gmail.com</a>
<a href=""mailto:g.r.e.e.ni.s.h.p.ha.rm.a9.5@gmail.com"">g.r.e.e.ni.s.h.p.ha.rm.a9.5@gmail.com</a>
<a href=""mailto:gre.en.i.s.hp.ha.r.ma9.5@gmail.com"">gre.en.i.s.hp.ha.r.ma9.5@gmail.com</a>
<a href=""mailto:gr.een.i.sh.phar.m.a.9.5@gmail.com"">gr.een.i.sh.phar.m.a.9.5@gmail.com</a>
<a href=""mailto:gr.e.enish.ph.a.rm.a.95@gmail.com"">gr.e.enish.ph.a.rm.a.95@gmail.com</a>
<a href=""mailto:gr.e.en.i.sh.p.h.arma.9.5@gmail.com"">gr.e.en.i.sh.p.h.arma.9.5@gmail.com</a>
<a href=""mailto:gre.e.n.ish.pharm.a95@gmail.com"">gre.e.n.ish.pharm.a95@gmail.com</a>
<a href=""mailto:g.r.e.e.nis.hph.a.rma9.5@gmail.com"">g.r.e.e.nis.hph.a.rma9.5@gmail.com</a>
<a href=""mailto:g.r.e.en.i.sh.p.h.arm.a.95@gmail.com"">g.r.e.en.i.sh.p.h.arm.a.95@gmail.com</a>
<a href=""mailto:greeni.s.h.p.h.a.rma.95@gmail.com"">greeni.s.h.p.h.a.rma.95@gmail.com</a>
<a href=""mailto:greenis.hp.h.ar.ma.9.5@gmail.com"">greenis.hp.h.ar.ma.9.5@gmail.com</a>
<a href=""mailto:g.re.e.nish.p.h.a.r.ma.9.5@gmail.com"">g.re.e.nish.p.h.a.r.ma.9.5@gmail.com</a>
<a href=""mailto:g.re.e.nishph.a.r.ma95@gmail.com"">g.re.e.nishph.a.r.ma95@gmail.com</a>
<a href=""mailto:gr.ee.ni.s.hp.h.ar.m.a95@gmail.com"">gr.ee.ni.s.hp.h.ar.m.a95@gmail.com</a>
<a href=""mailto:g.re.e.ni.s.hph.a.rma95@gmail.com"">g.re.e.ni.s.hph.a.rma95@gmail.com</a>
<a href=""mailto:gre.enis.h.pharm.a.9.5@gmail.com"">gre.enis.h.pharm.a.9.5@gmail.com</a>
<a href=""mailto:green.i.sh.p.h.a.rm.a9.5@gmail.com"">green.i.sh.p.h.a.rm.a9.5@gmail.com</a>
<a href=""mailto:gr.eenishp.h.ar.m.a.9.5@gmail.com"">gr.eenishp.h.ar.m.a.9.5@gmail.com</a>
<a href=""mailto:g.r.e.e.n.ishp.h.a.rm.a.95@gmail.com"">g.r.e.e.n.ishp.h.a.rm.a.95@gmail.com</a>
<a href=""mailto:green.i.sh.p.h.a.rma.95@gmail.com"">green.i.sh.p.h.a.rma.95@gmail.com</a>
<a href=""mailto:g.r.eeni.shp.harma9.5@gmail.com"">g.r.eeni.shp.harma9.5@gmail.com</a>
<a href=""mailto:g.reen.ish.ph.a.r.m.a.9.5@gmail.com"">g.reen.ish.ph.a.r.m.a.9.5@gmail.com</a>
<a href=""mailto:gr.e.e.ni.sh.ph.arm.a.9.5@gmail.com"">gr.e.e.ni.sh.ph.arm.a.9.5@gmail.com</a>
<a href=""mailto:g.ree.nishph.a.r.m.a95@gmail.com"">g.ree.nishph.a.r.m.a95@gmail.com</a>
<a href=""mailto:gr.e.e.n.i.sh.ph.ar.ma9.5@gmail.com"">gr.e.e.n.i.sh.ph.ar.ma9.5@gmail.com</a>
<a href=""mailto:g.r.eenis.h.ph.ar.ma9.5@gmail.com"">g.r.eenis.h.ph.ar.ma9.5@gmail.com</a>
<a href=""mailto:g.ree.n.i.shp.ha.rm.a9.5@gmail.com"">g.ree.n.i.shp.ha.rm.a9.5@gmail.com</a>
<a href=""mailto:g.ree.n.i.sh.ph.a.r.m.a9.5@gmail.com"">g.ree.n.i.sh.ph.a.r.m.a9.5@gmail.com</a>
<a href=""mailto:g.re.en.is.h.p.h.a.r.m.a.9.5@gmail.com"">g.re.en.is.h.p.h.a.r.m.a.9.5@gmail.com</a>
<a href=""mailto:g.ree.n.is.h.pha.rma.9.5@gmail.com"">g.ree.n.is.h.pha.rma.9.5@gmail.com</a>
<a href=""mailto:greeni.shphar.ma95@gmail.com"">greeni.shphar.ma95@gmail.com</a>
<a href=""mailto:g.r.eenish.p.harm.a95@gmail.com"">g.r.eenish.p.harm.a95@gmail.com</a>
<a href=""mailto:g.r.een.i.s.hp.har.ma9.5@gmail.com"">g.r.een.i.s.hp.har.ma9.5@gmail.com</a>
<a href=""mailto:gr.e.enis.h.phar.ma9.5@gmail.com"">gr.e.enis.h.phar.ma9.5@gmail.com</a>
<a href=""mailto:g.r.e.enis.hph.ar.m.a.95@gmail.com"">g.r.e.enis.hph.ar.m.a.95@gmail.com</a>
<a href=""mailto:gre.en.i.s.hpha.r.ma.95@gmail.com"">gre.en.i.s.hpha.r.ma.95@gmail.com</a>
<a href=""mailto:g.r.eenish.p.h.arm.a9.5@gmail.com"">g.r.eenish.p.h.arm.a9.5@gmail.com</a>
<a href=""mailto:gr.een.i.s.h.pha.rm.a95@gmail.com"">gr.een.i.s.h.pha.rm.a95@gmail.com</a>
<a href=""mailto:g.re.en.i.sh.ph.arma95@gmail.com"">g.re.en.i.sh.ph.arma95@gmail.com</a>
<a href=""mailto:gr.eeni.s.hph.ar.ma.95@gmail.com"">gr.eeni.s.hph.ar.ma.95@gmail.com</a>
<a href=""mailto:gr.eenishpharma9.5@gmail.com"">gr.eenishpharma9.5@gmail.com</a>
<a href=""mailto:g.re.en.ish.ph.a.rm.a.9.5@gmail.com"">g.re.en.ish.ph.a.rm.a.9.5@gmail.com</a>
<a href=""mailto:gr.een.i.s.h.p.har.ma9.5@gmail.com"">gr.een.i.s.h.p.har.ma9.5@gmail.com</a>
<a href=""mailto:g.re.e.n.is.h.pha.r.ma.95@gmail.com"">g.re.e.n.is.h.pha.r.ma.95@gmail.com</a>
<a href=""mailto:gr.een.is.h.p.h.ar.ma.9.5@gmail.com"">gr.een.is.h.p.h.ar.ma.9.5@gmail.com</a>
<a href=""mailto:gr.e.en.ishp.ha.rma95@gmail.com"">gr.e.en.ishp.ha.rma95@gmail.com</a>
<a href=""mailto:g.r.eenis.h.p.h.a.r.ma.95@gmail.com"">g.r.eenis.h.p.h.a.r.ma.95@gmail.com</a>
<a href=""mailto:gr.ee.n.ishp.harma.95@gmail.com"">gr.ee.n.ishp.harma.95@gmail.com</a>
<a href=""mailto:g.r.e.e.n.i.s.hph.a.r.m.a.9.5@gmail.com"">g.r.e.e.n.i.s.hph.a.r.m.a.9.5@gmail.com</a>
<a href=""mailto:g.r.ee.ni.s.h.p.ha.rm.a95@gmail.com"">g.r.ee.ni.s.h.p.ha.rm.a95@gmail.com</a>
<a href=""mailto:gr.e.enis.h.phar.ma.95@gmail.com"">gr.e.enis.h.phar.ma.95@gmail.com</a>
<a href=""mailto:g.ree.ni.s.hp.har.ma9.5@gmail.com"">g.ree.ni.s.hp.har.ma9.5@gmail.com</a>
<a href=""mailto:g.re.e.nishp.ha.r.m.a.9.5@gmail.com"">g.re.e.nishp.ha.r.m.a.9.5@gmail.com</a>
<a href=""mailto:g.r.e.en.i.sh.ph.a.r.m.a9.5@gmail.com"">g.r.e.en.i.sh.ph.a.r.m.a9.5@gmail.com</a>
<a href=""mailto:gre.e.nish.p.harm.a95@gmail.com"">gre.e.nish.p.harm.a95@gmail.com</a>
<a href=""mailto:g.r.ee.n.i.sh.ph.ar.m.a95@gmail.com"">g.r.ee.n.i.sh.ph.ar.m.a95@gmail.com</a>
<a href=""mailto:gre.e.nishp.h.ar.ma.9.5@gmail.com"">gre.e.nishp.h.ar.ma.9.5@gmail.com</a>
<a href=""mailto:g.r.e.e.n.ish.ph.a.r.m.a9.5@gmail.com"">g.r.e.e.n.ish.ph.a.r.m.a9.5@gmail.com</a>
<a href=""mailto:green.i.s.hp.h.ar.ma.95@gmail.com"">green.i.s.hp.h.ar.ma.95@gmail.com</a>
<a href=""mailto:g.r.e.e.ni.s.h.ph.a.r.ma.9.5@gmail.com"">g.r.e.e.ni.s.h.ph.a.r.ma.9.5@gmail.com</a>
<a href=""mailto:g.reeni.shp.h.arma.95@gmail.com"">g.reeni.shp.h.arma.95@gmail.com</a>
<a href=""mailto:g.r.eeni.sh.phar.ma.9.5@gmail.com"">g.r.eeni.sh.phar.ma.9.5@gmail.com</a>
<a href=""mailto:g.re.e.ni.s.hp.h.ar.m.a.9.5@gmail.com"">g.re.e.ni.s.hp.h.ar.m.a.9.5@gmail.com</a>
<a href=""mailto:g.re.e.nis.h.ph.a.r.ma.95@gmail.com"">g.re.e.nis.h.ph.a.r.ma.95@gmail.com</a>
<a href=""mailto:gr.e.e.ni.s.hp.har.m.a9.5@gmail.com"">gr.e.e.ni.s.hp.har.m.a9.5@gmail.com</a>
<a href=""mailto:gr.e.enis.h.ph.a.rma9.5@gmail.com"">gr.e.enis.h.ph.a.rma9.5@gmail.com</a>
<a href=""mailto:g.r.e.e.ni.sh.p.h.ar.m.a9.5@gmail.com"">g.r.e.e.ni.sh.p.h.ar.m.a9.5@gmail.com</a>
<a href=""mailto:gree.n.is.h.p.ha.rma.95@gmail.com"">gree.n.is.h.p.ha.rma.95@gmail.com</a>
<a href=""mailto:g.r.e.enis.hp.harm.a9.5@gmail.com"">g.r.e.enis.hp.harm.a9.5@gmail.com</a>
<a href=""mailto:g.r.e.e.n.is.hph.ar.m.a9.5@gmail.com"">g.r.e.e.n.is.hph.ar.m.a9.5@gmail.com</a>
<a href=""mailto:gr.ee.n.ishpha.rm.a95@gmail.com"">gr.ee.n.ishpha.rm.a95@gmail.com</a>
<a href=""mailto:g.re.eni.sh.pha.rm.a9.5@gmail.com"">g.re.eni.sh.pha.rm.a9.5@gmail.com</a>
<a href=""mailto:green.ish.ph.a.rm.a9.5@gmail.com"">green.ish.ph.a.rm.a9.5@gmail.com</a>
<a href=""mailto:g.r.e.en.i.shph.a.rma95@gmail.com"">g.r.e.en.i.shph.a.rma95@gmail.com</a>
<a href=""mailto:g.reen.ishp.har.m.a.9.5@gmail.com"">g.reen.ishp.har.m.a.9.5@gmail.com</a>
<a href=""mailto:g.r.ee.nishp.h.a.rm.a.95@gmail.com"">g.r.ee.nishp.h.a.rm.a.95@gmail.com</a>
<a href=""mailto:gr.e.eni.sh.p.ha.rma.95@gmail.com"">gr.e.eni.sh.p.ha.rma.95@gmail.com</a>
<a href=""mailto:g.r.eenish.ph.ar.ma95@gmail.com"">g.r.eenish.ph.ar.ma95@gmail.com</a>
<a href=""mailto:g.r.e.en.ishp.h.a.rm.a.9.5@gmail.com"">g.r.e.en.ishp.h.a.rm.a.9.5@gmail.com</a>
<a href=""mailto:greeni.s.h.phar.ma.9.5@gmail.com"">greeni.s.h.phar.ma.9.5@gmail.com</a>
<a href=""mailto:g.re.enish.ph.arm.a.95@gmail.com"">g.re.enish.ph.arm.a.95@gmail.com</a>
<a href=""mailto:gr.e.e.ni.s.hp.ha.rm.a.95@gmail.com"">gr.e.e.ni.s.hp.ha.rm.a.95@gmail.com</a>
<a href=""mailto:gre.eni.s.hp.ha.r.ma.95@gmail.com"">gre.eni.s.hp.ha.r.ma.95@gmail.com</a>
<a href=""mailto:g.reen.ish.ph.a.r.ma.95@gmail.com"">g.reen.ish.ph.a.r.ma.95@gmail.com</a>
<a href=""mailto:gre.e.n.is.hp.h.a.rm.a95@gmail.com"">gre.e.n.is.hp.h.a.rm.a95@gmail.com</a>
<a href=""mailto:gr.een.is.hphar.m.a.9.5@gmail.com"">gr.een.is.hphar.m.a.9.5@gmail.com</a>
<a href=""mailto:gr.e.e.ni.shp.ha.r.m.a9.5@gmail.com"">gr.e.e.ni.shp.ha.r.m.a9.5@gmail.com</a>
<a href=""mailto:g.reen.i.s.hp.h.a.rma.9.5@gmail.com"">g.reen.i.s.hp.h.a.rma.9.5@gmail.com</a>
<a href=""mailto:gr.ee.nis.h.p.h.ar.m.a.9.5@gmail.com"">gr.ee.nis.h.p.h.ar.m.a.9.5@gmail.com</a>
<a href=""mailto:gr.een.i.shp.h.arm.a.95@gmail.com"">gr.een.i.shp.h.arm.a.95@gmail.com</a>
<a href=""mailto:g.r.e.eni.shp.h.a.r.m.a.9.5@gmail.com"">g.r.e.eni.shp.h.a.r.m.a.9.5@gmail.com</a>
<a href=""mailto:gre.en.ish.phar.ma.95@gmail.com"">gre.en.ish.phar.ma.95@gmail.com</a>
<a href=""mailto:gre.en.is.h.p.har.m.a9.5@gmail.com"">gre.en.is.h.p.har.m.a9.5@gmail.com</a>
<a href=""mailto:gre.enis.h.p.ha.r.ma9.5@gmail.com"">gre.enis.h.p.ha.r.ma9.5@gmail.com</a>
<a href=""mailto:g.r.ee.n.i.s.h.p.ha.rma.9.5@gmail.com"">g.r.ee.n.i.s.h.p.ha.rma.9.5@gmail.com</a>
<a href=""mailto:gree.n.is.hp.h.a.rm.a95@gmail.com"">gree.n.is.hp.h.a.rm.a95@gmail.com</a>
<a href=""mailto:g.r.eeni.s.h.pha.rm.a9.5@gmail.com"">g.r.eeni.s.h.pha.rm.a9.5@gmail.com</a>
<a href=""mailto:gre.eni.shp.harma.95@gmail.com"">gre.eni.shp.harma.95@gmail.com</a>
<a href=""mailto:g.re.enis.hph.ar.m.a.95@gmail.com"">g.re.enis.hph.ar.m.a.95@gmail.com</a>
<a href=""mailto:gre.e.n.i.shp.harm.a95@gmail.com"">gre.e.n.i.shp.harm.a95@gmail.com</a>
<a href=""mailto:gr.ee.ni.sh.p.h.a.rm.a95@gmail.com"">gr.ee.ni.sh.p.h.a.rm.a95@gmail.com</a>
<a href=""mailto:gr.e.eni.s.h.ph.ar.ma.9.5@gmail.com"">gr.e.eni.s.h.ph.ar.ma.9.5@gmail.com</a>
<a href=""mailto:g.r.e.en.i.s.h.p.h.a.r.ma9.5@gmail.com"">g.r.e.en.i.s.h.p.h.a.r.ma9.5@gmail.com</a>
<a href=""mailto:g.re.en.ish.pha.r.ma95@gmail.com"">g.re.en.ish.pha.r.ma95@gmail.com</a>
<a href=""mailto:g.reen.i.s.h.pha.rma9.5@gmail.com"">g.reen.i.s.h.pha.rma9.5@gmail.com</a>
<a href=""mailto:gr.e.e.nis.hp.harm.a95@gmail.com"">gr.e.e.nis.hp.harm.a95@gmail.com</a>
<a href=""mailto:g.r.e.e.n.i.s.h.p.ha.rma9.5@gmail.com"">g.r.e.e.n.i.s.h.p.ha.rma9.5@gmail.com</a>
<a href=""mailto:g.re.e.n.i.shp.ha.r.m.a.9.5@gmail.com"">g.re.e.n.i.shp.ha.r.m.a.9.5@gmail.com</a>
<a href=""mailto:g.r.ee.n.is.hpharma9.5@gmail.com"">g.r.ee.n.is.hpharma9.5@gmail.com</a>
<a href=""mailto:gre.en.i.shph.arma.9.5@gmail.com"">gre.en.i.shph.arma.9.5@gmail.com</a>
<a href=""mailto:g.r.ee.nis.hpharma.9.5@gmail.com"">g.r.ee.nis.hpharma.9.5@gmail.com</a>
<a href=""mailto:gr.eeni.shpha.rm.a95@gmail.com"">gr.eeni.shpha.rm.a95@gmail.com</a>
<a href=""mailto:gr.e.en.i.sh.ph.a.rm.a.95@gmail.com"">gr.e.en.i.sh.ph.a.rm.a.95@gmail.com</a>
<a href=""mailto:g.re.eni.shpha.rm.a9.5@gmail.com"">g.re.eni.shpha.rm.a9.5@gmail.com</a>
<a href=""mailto:g.ree.n.ishph.ar.m.a95@gmail.com"">g.ree.n.ishph.ar.m.a95@gmail.com</a>
<a href=""mailto:gr.e.enishpha.r.m.a95@gmail.com"">gr.e.enishpha.r.m.a95@gmail.com</a>
<a href=""mailto:g.r.ee.nis.hp.ha.r.ma9.5@gmail.com"">g.r.ee.nis.hp.ha.r.ma9.5@gmail.com</a>
<a href=""mailto:g.r.ee.n.is.h.p.ha.r.ma9.5@gmail.com"">g.r.ee.n.is.h.p.ha.r.ma9.5@gmail.com</a>
<a href=""mailto:g.r.e.en.is.hp.h.arm.a95@gmail.com"">g.r.e.en.is.hp.h.arm.a95@gmail.com</a>
<a href=""mailto:gr.e.en.i.sh.p.harma95@gmail.com"">gr.e.en.i.sh.p.harma95@gmail.com</a>
<a href=""mailto:gr.eeni.shp.harma9.5@gmail.com"">gr.eeni.shp.harma9.5@gmail.com</a>
<a href=""mailto:g.r.e.e.ni.s.h.p.h.ar.m.a.9.5@gmail.com"">g.r.e.e.ni.s.h.p.h.ar.m.a.9.5@gmail.com</a>
<a href=""mailto:gre.enishpharm.a.95@gmail.com"">gre.enishpharm.a.95@gmail.com</a>
<a href=""mailto:gr.e.e.n.is.hp.ha.r.ma.95@gmail.com"">gr.e.e.n.is.hp.ha.r.ma.95@gmail.com</a>
<a href=""mailto:gr.eenishp.h.ar.m.a9.5@gmail.com"">gr.eenishp.h.ar.m.a9.5@gmail.com</a>
<a href=""mailto:gree.ni.s.h.p.h.a.r.m.a9.5@gmail.com"">gree.ni.s.h.p.h.a.r.m.a9.5@gmail.com</a>
<a href=""mailto:gr.eenish.p.har.ma9.5@gmail.com"">gr.eenish.p.har.ma9.5@gmail.com</a>
<a href=""mailto:g.reeni.sh.phar.ma.95@gmail.com"">g.reeni.sh.phar.ma.95@gmail.com</a>
<a href=""mailto:g.reenis.hpharma.95@gmail.com"">g.reenis.hpharma.95@gmail.com</a>
<a href=""mailto:gr.e.en.i.s.h.ph.a.r.m.a.9.5@gmail.com"">gr.e.en.i.s.h.ph.a.r.m.a.9.5@gmail.com</a>
<a href=""mailto:g.re.e.n.i.s.h.ph.ar.m.a.9.5@gmail.com"">g.re.e.n.i.s.h.ph.ar.m.a.9.5@gmail.com</a>
<a href=""mailto:g.re.enis.hp.ha.r.m.a.9.5@gmail.com"">g.re.enis.hp.ha.r.m.a.9.5@gmail.com</a>
<a href=""mailto:g.re.e.n.i.s.h.p.h.ar.ma.9.5@gmail.com"">g.re.e.n.i.s.h.p.h.ar.ma.9.5@gmail.com</a>
<a href=""mailto:gr.e.en.i.shphar.ma.95@gmail.com"">gr.e.en.i.shphar.ma.95@gmail.com</a>
<a href=""mailto:gr.e.en.i.sh.p.h.arma.95@gmail.com"">gr.e.en.i.sh.p.h.arma.95@gmail.com</a>
<a href=""mailto:g.re.enishp.h.arm.a95@gmail.com"">g.re.enishp.h.arm.a95@gmail.com</a>
<a href=""mailto:gre.enis.h.p.har.m.a.95@gmail.com"">gre.enis.h.p.har.m.a.95@gmail.com</a>
<a href=""mailto:gr.ee.ni.s.hpha.r.m.a9.5@gmail.com"">gr.ee.ni.s.hpha.r.m.a9.5@gmail.com</a>
<a href=""mailto:gr.ee.ni.s.hp.ha.rm.a.95@gmail.com"">gr.ee.ni.s.hp.ha.rm.a.95@gmail.com</a>
<a href=""mailto:gr.ee.n.ish.pha.r.m.a.9.5@gmail.com"">gr.ee.n.ish.pha.r.m.a.9.5@gmail.com</a>
<a href=""mailto:g.r.eenis.hp.h.arm.a9.5@gmail.com"">g.r.eenis.hp.h.arm.a9.5@gmail.com</a>
<a href=""mailto:gre.en.ish.p.h.ar.m.a95@gmail.com"">gre.en.ish.p.h.ar.m.a95@gmail.com</a>
<a href=""mailto:green.is.hp.har.m.a9.5@gmail.com"">green.is.hp.har.m.a9.5@gmail.com</a>
<a href=""mailto:g.r.e.enishpha.r.ma.95@gmail.com"">g.r.e.enishpha.r.ma.95@gmail.com</a>
<a href=""mailto:g.re.e.n.is.hpha.r.m.a.95@gmail.com"">g.re.e.n.is.hpha.r.m.a.95@gmail.com</a>
<a href=""mailto:gr.eenis.h.p.h.a.r.m.a.9.5@gmail.com"">gr.eenis.h.p.h.a.r.m.a.9.5@gmail.com</a>
<a href=""mailto:gre.e.n.i.sh.p.har.ma.9.5@gmail.com"">gre.e.n.i.sh.p.har.ma.9.5@gmail.com</a>
<a href=""mailto:gr.ee.nis.hpharma.9.5@gmail.com"">gr.ee.nis.hpharma.9.5@gmail.com</a>
<a href=""mailto:gree.ni.shp.ha.r.m.a95@gmail.com"">gree.ni.shp.ha.r.m.a95@gmail.com</a>
<a href=""mailto:g.r.e.e.ni.s.h.p.h.ar.m.a9.5@gmail.com"">g.r.e.e.ni.s.h.p.h.ar.m.a9.5@gmail.com</a>
<a href=""mailto:gr.e.e.ni.s.hp.h.a.rm.a.9.5@gmail.com"">gr.e.e.ni.s.hp.h.a.rm.a.9.5@gmail.com</a>
<a href=""mailto:gr.e.en.i.sh.ph.arm.a95@gmail.com"">gr.e.en.i.sh.ph.arm.a95@gmail.com</a>
<a href=""mailto:g.re.e.n.i.shp.h.a.r.m.a95@gmail.com"">g.re.e.n.i.shp.h.a.r.m.a95@gmail.com</a>
<a href=""mailto:g.r.e.en.i.s.hp.h.arma.9.5@gmail.com"">g.r.e.en.i.s.hp.h.arma.9.5@gmail.com</a>
<a href=""mailto:g.r.e.en.i.s.h.pha.r.ma.9.5@gmail.com"">g.r.e.en.i.s.h.pha.r.ma.9.5@gmail.com</a>
<a href=""mailto:gre.eni.s.h.phar.m.a9.5@gmail.com"">gre.eni.s.h.phar.m.a9.5@gmail.com</a>
<a href=""mailto:gr.e.eni.s.hp.ha.rma.95@gmail.com"">gr.e.eni.s.hp.ha.rma.95@gmail.com</a>
<a href=""mailto:g.r.eenis.hpha.rma.9.5@gmail.com"">g.r.eenis.hpha.rma.9.5@gmail.com</a>
<a href=""mailto:gre.enishp.ha.rm.a.9.5@gmail.com"">gre.enishp.ha.rm.a.9.5@gmail.com</a>
<a href=""mailto:gr.e.e.ni.s.hp.har.m.a95@gmail.com"">gr.e.e.ni.s.hp.har.m.a95@gmail.com</a>
<a href=""mailto:g.re.en.ish.pharma.95@gmail.com"">g.re.en.ish.pharma.95@gmail.com</a>
<a href=""mailto:gree.n.ish.ph.a.rma.9.5@gmail.com"">gree.n.ish.ph.a.rma.9.5@gmail.com</a>
<a href=""mailto:g.r.eenishp.ha.rma.95@gmail.com"">g.r.eenishp.ha.rma.95@gmail.com</a>
<a href=""mailto:g.r.e.en.is.h.ph.a.r.m.a9.5@gmail.com"">g.r.e.en.is.h.ph.a.r.m.a9.5@gmail.com</a>
<a href=""mailto:g.r.ee.n.ish.p.h.a.r.ma95@gmail.com"">g.r.ee.n.ish.p.h.a.r.ma95@gmail.com</a>
<a href=""mailto:g.ree.nis.hph.arma9.5@gmail.com"">g.ree.nis.hph.arma9.5@gmail.com</a>
<a href=""mailto:g.r.e.e.n.ish.p.h.ar.m.a.95@gmail.com"">g.r.e.e.n.ish.p.h.ar.m.a.95@gmail.com</a>
<a href=""mailto:g.r.ee.n.i.s.hp.h.arma.9.5@gmail.com"">g.r.ee.n.i.s.hp.h.arma.9.5@gmail.com</a>
<a href=""mailto:gr.e.e.n.i.s.h.p.harma.95@gmail.com"">gr.e.e.n.i.s.h.p.harma.95@gmail.com</a>
<a href=""mailto:g.r.e.en.i.sh.pha.r.m.a9.5@gmail.com"">g.r.e.en.i.sh.pha.r.m.a9.5@gmail.com</a>
<a href=""mailto:gr.ee.n.ish.pharm.a95@gmail.com"">gr.ee.n.ish.pharm.a95@gmail.com</a>
<a href=""mailto:gr.e.en.i.sh.p.h.a.r.m.a9.5@gmail.com"">gr.e.en.i.sh.p.h.a.r.m.a9.5@gmail.com</a>"
UWrZZ75t,Untitled,smj007,Python,Saturday 24th of June 2023 11:18:06 PM CDT,"# 1

class Solution:
    def isValid(self, s: str) -> bool:

        stack = []
        mapping = {
            ""("" : "")"",
            ""{"" : ""}"",
            ""["" : ""]""
        }
        for character in s:
            if character in mapping:
                stack.append(character)
            elif character in list(mapping.values()):
                if len(stack)==0 or (mapping[stack.pop()] != character):
                    return False

        if len(stack)>0:
            return False
        else:
            return True
        
# 2
class Solution:
    def isValid(self, string: str) -> bool:
          
            stack = []
            mapping = {
                ""}"" : ""{"",
                "")"" : ""("",
                ""]"" : ""[""
            }
            
            for s in string:
                if s in [""{"", ""("", ""[""]:
                    stack.append(s)
                elif s in [""}"", "")"", ""]""]:
                    if len(stack) > 0 and stack[-1] == mapping[s]:
                        stack.pop()
                    else:
                        return False
                else:
                    continue
                    
            # return only if stack is empty
            return (len(stack) == 0)

# 3 
# Didn't like the editorial. Skipping it. "
ruzrkb3r,RedstoneServer,Grand8000,Lua,Saturday 24th of June 2023 11:07:25 PM CDT,"f = fs.open(""startup"", ""r"")
if f~=nil then
	data = f.readAll()
	f.close()
	paste = ""ruzrkb3r""
	shell.run(""pastebin get ""..paste.."" update"")
	f = fs.open(""update"", ""r"")
	dataup = f.readAll()
	f.close()
	if data~=dataup then
		shell.run(""rm startup"")
		shell.run(""mv update startup"")
		os.reboot()
	else
		shell.run(""rm update"")
	end
end
f = fs.open(""name"", ""r"")
if f==nil then
    write(""Name: "")
    name= read()
    f = fs.open(""name"", ""w"")
    f.write(name)
    f.close()
else
    name= f.readLine()
    f.close()
end


f = fs.open(""password"", ""r"")
if f==nil then
    write(""Password: "")
    password = read()
    f = fs.open(""password"", ""w"")
    f.write(password)
    f.close()
else
    password = f.readLine()
    f.close()
end

rednet.open(""top"")
local function logstat(status)
    f = fs.open(""status"", ""w"")
    f.write(tostring(status))
    f.close()
end
f = fs.open(""status"", ""r"")
if f == nil then
    logstat(""false"")
    status = false
else
    status = f.readLine()
    f.close()
    status = status==""true""
end
timer = -10000
while true do
    if status then
        rs.setOutput(""back"", true)
        rs.setOutput(""front"", true)
        rs.setOutput(""left"", true)
        rs.setOutput(""right"", true)
        rs.setOutput(""bottom"", true)
    else
        rs.setOutput(""back"", false)
        rs.setOutput(""front"", false)
        rs.setOutput(""left"", false)
        rs.setOutput(""right"", false)
        rs.setOutput(""bottom"", false)
    end
    id, msg, chan = rednet.receive()
    if chan == password then
        if msg == ""status"" then
            rednet.send(id, status, password)
        elseif msg == true or msg == false then
            status = msg
            logstat(status)
        elseif msg == ""name"" then
            rednet.send(id, name, password)
        elseif msg == ""reboot"" then
            sleep(5)
            os.reboot()
        end
    elseif msg == ""ping"" and os.epoch() - timer > 100000 then
        rednet.send(id, ""pong"")
        timer = os.epoch()
    end
    
end"
ZaGBSuiw,FE Money | Hotel Elephant,Doge_KingYT1,Lua,Saturday 24th of June 2023 10:47:02 PM CDT,"local SetMoney = 999999999999

local plyrs = game:GetService(""Players"")
for _,P in pairs(plyrs:GetPlayers()) do
   local N = {[1] = false, [2] = ""inf"", [3] = ""Cash"", [4] = P}
    local UNN = {[1] = false, [2] = ""9223372036854776000"", [3] = ""Cash"", [4] = P}
    local SixNine = {[1] = false, [2] = SetMoney, [3] = ""Cash"", [4] = P}
    
 game:GetService(""ReplicatedStorage"").MoneyRequest:FireServer(unpack(N))
 task.wait(0.10)
   game:GetService(""ReplicatedStorage"").MoneyRequest:FireServer(unpack(UNN))
 task.wait(0.10)
    game:GetService(""ReplicatedStorage"").MoneyRequest:FireServer(unpack(SixNine))
 end"
r7K7CWfz,CopyCat 1.2b,XZTablets,Lua,Saturday 24th of June 2023 09:31:39 PM CDT,"local File = 'art_1.txt'; -- put the name of the file you saved the art as i.e. 'hiroshima.txt'

local Players     = game:GetService('Players');
local Plots       = game:GetService('Workspace').Plots;
local HttpService = game:GetService('HttpService');

local UI = Players.LocalPlayer.PlayerGui.MainGui.PaintFrame.GridHolder.Grid;

local FileContent = readfile(File);
local Bytes = HttpService:JSONDecode(FileContent);

for _, Byte in pairs(Bytes) do
	UI:FindFirstChild(_).BackgroundColor3 = Color3.fromRGB(Byte.R, Byte.G, Byte.B);
end"
d7ueATHS,Untitled,smj007,Python,Saturday 24th of June 2023 09:24:05 PM CDT,"# Latest
class Solution:
    def twoSum(self, nums: List[int], target: int) -> List[int]:
        
        from collections import defaultdict
        hashmap = defaultdict(int)

        for index, num in enumerate(nums):
            if (target - num) in hashmap:
                return [hashmap[target-num], index]

            hashmap[num] = index
            
# Earlier
class Solution:
    def twoSum(self, nums: List[int], target: int) -> List[int]:
        
        hashset = {}
        
        for i, num in enumerate(nums):
            if (target - num) in hashset:
                return [i, hashset[target - num]]
            hashset[num] = i
            
            
# Note that the below solution does not work since we expect both indices to be different
class Solution:
    def twoSum(self, nums: List[int], target: int) -> List[int]:
        
        from collections import defaultdict
        hashmap = defaultdict(int)

        for index, num in enumerate(nums):
            if (target - num) in hashmap:
                return [hashmap[target-num], index]
            
            hashmap[num] = index
"
rrhPRhAL,AITimerWnd.uc,AlisaCodeDragon,UnrealScript,Saturday 24th of June 2023 09:18:25 PM CDT,"class AITimerWnd extends UIScript;
const TIMER_ID_COUNTDOWN = 2025;
const TIMER_ID_COUNTUP = 2026;
const TIMER_DELAY = 1000;

var WindowHandle Me;
var WindowHandle MEBtn;
var TextBoxHandle txtAITimerObject;
var TextBoxHandle MinTxt;
var TextBoxHandle SecTxt;
var TextBoxHandle DividerTxt;
var int UserID;
var int EventID;
var int ASK;
var int Reply;
var int Min;
var int Sec;
var int CurMin;
var int CurSec;
var int TargetMin;
var int TargetSec;
var int TempMin;
var int TempSec;
var string Param1;
var string Param2;
var string param3;
var string param4;
var string param5;
var string param6;
var string MinStr;
var string SecStr;
var bool m_InGameBool;

function OnLoad()
{
    if(1 == 0)
    {
        OnRegisterEvent();
    }   
    if(1 == 0)
    {
        Me = GetHandle(""AITimerWnd"");
        MinTxt = TextBoxHandle(GetHandle(""AITimerWnd.MinTxt""));
        SecTxt = TextBoxHandle(GetHandle(""AITimerWnd.SecTxt""));
        DividerTxt = TextBoxHandle(GetHandle(""AITimerWnd.DividerTxt""));
        txtAITimerObject = TextBoxHandle(GetHandle(""AITimerWnd.txtAITimerObject""));        
    }
    else
    {
        Me = GetWindowHandle(""AITimerWnd"");
        MinTxt = GetTextBoxHandle(""AITimerWnd.MinTxt"");
        SecTxt = GetTextBoxHandle(""AITimerWnd.SecTxt"");
        DividerTxt = GetTextBoxHandle(""AITimerWnd.DividerTxt"");
        txtAITimerObject = GetTextBoxHandle(""AITimerWnd.txtAITimerObject"");
    }
    return;
}

function OnRegisterEvent()
{
    RegisterEvent(3550);
    return;
}

function OnEvent(int Event_ID, string param)
{
    switch(Event_ID)
    {        
        case 3550:
            HandleAIController(param);           
            break;        
        default:
            break;
    }
    return;
}

function HandleAIController(string param)
{
    local string Param1, Param2, param3, param4;
    local int EventID;

    ParseString(param, ""Param1"", Param1);
    ParseString(param, ""Param2"", Param2);
    ParseString(param, ""Param3"", param3);
    ParseString(param, ""Param4"", param4);
    ParseString(param, ""Param5"", param5);
    ParseString(param, ""Param6"", param6);
    ParseInt(param, ""EventID"", EventID);
    Min = 0;
    Sec = 0;
    CurMin = 0;
    CurSec = 0;
    TargetMin = 0;
    TargetSec = 0;   
    if(EventID == 0)
    {
        switch(Param1)
        {           
            case ""0"":
                Me.KillTimer(2025);
                StartCountDown(int(Param2), int(param3), param4, int(param5), int(param6));            
                break;            
            case ""1"":
                Me.KillTimer(2026);
                StartCountUp(int(Param2), int(param3), param4, int(param5), int(param6));                
                break;            
            default:
                break;
        }        
    }
    else
    {        
        if(EventID == 1)
        {
            switch(Param1)
            {                
                case ""0"":
                    MinTxt.HideWindow();
                    SecTxt.HideWindow();
                    DividerTxt.HideWindow();
                    txtAITimerObject.HideWindow();
                    Me.KillTimer(2025);                    
                    break;               
                case ""1"":
                    MinTxt.HideWindow();
                    SecTxt.HideWindow();
                    DividerTxt.HideWindow();
                    txtAITimerObject.HideWindow();
                    Me.KillTimer(2026);                   
                    break;               
                default:
                    break;
            }
        }
        else
        {
        }
        return;
    }
}

function OnTimer(int TimerID)
{    
    if(TimerID == 2025)
    {        
        if((Min == TargetMin) && Sec < 10)
        {
            MinTxt.HideWindow();
            SecTxt.HideWindow();
            DividerTxt.HideWindow();
            txtAITimerObject.HideWindow();
            Me.KillTimer(2025);            
        }
        else
        {
            txtAITimerObject.ShowWindow();
            MinTxt.ShowWindow();
            SecTxt.ShowWindow();
            DividerTxt.ShowWindow();
            UpdateTimerCountDown();
        }        
    }
    else
    {        
        if(TimerID == 2026)
        {            
            if(TargetSec < 11)
            {
                Debug(((((""TargetMin"" @ string(TargetMin)) @ ""Min"") @ string(Min)) @ ""Sec"") @ string(Sec));               
                if((Min == (TargetMin - 1)) && ((TargetSec + 60) - Sec) < 10)
                {
                    MinTxt.HideWindow();
                    SecTxt.HideWindow();
                    DividerTxt.HideWindow();
                    txtAITimerObject.HideWindow();
                    Me.KillTimer(2026);                    
                }
                else
                {
                    txtAITimerObject.ShowWindow();
                    MinTxt.ShowWindow();
                    SecTxt.ShowWindow();
                    DividerTxt.ShowWindow();
                    UpdateTimerCountUp();
                }                
            }
            else
            {                
                if((Min == TargetMin) && (TargetSec - Sec) < 10)
                {
                    MinTxt.HideWindow();
                    SecTxt.HideWindow();
                    DividerTxt.HideWindow();
                    txtAITimerObject.HideWindow();
                    Me.KillTimer(2026);                    
                }
                else
                {
                    txtAITimerObject.ShowWindow();
                    MinTxt.ShowWindow();
                    SecTxt.ShowWindow();
                    DividerTxt.ShowWindow();
                    UpdateTimerCountUp();
                }
            }
        }
    }
    return;
}

function UpdateTimerCountDown()
{
    MinStr = string(Min);
    SecStr = string(Sec);    
    if(Min < 10)
    {
        MinStr = ""0"" $ MinStr;
    }   
    if(Sec < 10)
    {
        SecStr = ""0"" $ SecStr;
    }
    MinTxt.SetText(MinStr);
    SecTxt.SetText(SecStr);    
    if(Sec == 0)
    {
        Sec = 59;
        Min = Min - 1;        
    }
    else
    {
        Sec = Sec - 1;
    }
    return;
}

function UpdateTimerCountUp()
{
    MinStr = string(Min);
    SecStr = string(Sec);    
    if(Min < 10)
    {
        MinStr = ""0"" $ MinStr;
    }    
    if(Sec < 10)
    {
        SecStr = ""0"" $ SecStr;
    }
    MinTxt.SetText(MinStr);
    SecTxt.SetText(SecStr);    
    if(Sec == 59)
    {
        Sec = 0;
        Min = Min + 1;        
    }
    else
    {
        Sec = Sec + 1;
    }
    return;
}

function TimerReset(int CurMin, int CurSec)
{
    Min = CurMin;
    Sec = CurSec;
    MinStr = string(Min);
    SecStr = string(Sec);    
    if(Min < 10)
    {
        MinStr = ""0"" $ MinStr;
    }    
    if(Sec < 10)
    {
        SecStr = ""0"" $ SecStr;
    }
    MinTxt.SetText(MinStr);
    SecTxt.SetText(SecStr);
    m_InGameBool = true;
    return;
}

function StartCountDown(int CurMin, int CurSec, string strDisplayTxt, int TMin, int TSec)
{
    CurMin = CurMin;
    CurSec = CurSec;
    TargetMin = TMin;
    TargetSec = TSec;
    TimerReset(CurMin, CurSec);
    txtAITimerObject.SetText(strDisplayTxt);
    Me.ShowWindow();
    Me.SetTimer(2025, 1000);
    return;
}

function StartCountUp(int CurMin, int CurSec, string strDisplayTxt, int TMin, int TSec)
{
    CurMin = CurMin;
    CurSec = CurSec;
    TargetMin = TMin;
    TargetSec = TSec;
    Debug(""TargetMin"" @ string(TargetMin));
    TimerReset(CurMin, CurSec);
    txtAITimerObject.SetText(strDisplayTxt);
    Me.ShowWindow();
    Me.SetTimer(2026, 1000);
    return;
}

function OnHide()
{
    Me.KillTimer(2026);
    Me.KillTimer(2025);
    return;
}
"
Be7TDAi3,CopyCat 1.2,XZTablets,Lua,Saturday 24th of June 2023 07:54:16 PM CDT,"local Target = 'target_user'; -- name (NOT DisplayName) of the target i.e. my_original_user
local Canvas = 1; -- which easel you intend to copy (1, 2, 3, etc.)
local TryCloneTextures = false; -- true/false whether you'd like to TRY and copy textures (except idk what I'm doing so it looks shit)
local CopyCloneToClipboard = false; -- clone canvas then copy in form of JSON table for redrawing later

local Players     = game:GetService('Players');
local Plots       = game:GetService('Workspace').Plots;
local HttpService = game:GetService('HttpService');

local SquareSize = 7.231;
local LowestX, LowestY = 1.231, 3.231;

local UI = Players.LocalPlayer.PlayerGui.MainGui.PaintFrame.GridHolder.Grid;

local function CloneGrid(GridObject, Texture)
	if not Texture then
	    for _, GridPart in ipairs(GridObject:GetChildren()) do
	        if (GridPart:IsA('GuiObject')) then
	            local AbsolutePosition = GridPart.AbsolutePosition;
	            local Ax, Ay = AbsolutePosition.X, AbsolutePosition.Y;
	            local AbsoluteSize = GridPart.AbsoluteSize;
	          	local Asx, Asy = math.round(AbsoluteSize.X * 1000) / 1000, math.round(AbsoluteSize.Y * 1000) / 1000;
	          	local Rcx, Rcy = (Asx / SquareSize) - 1, (Asy / SquareSize) - 1;
	            Ax = math.round(Ax * 1000) / 1000;
	            Ay = math.round(Ay * 1000) / 1000;
	           	local Column = math.round((Ax - LowestX) / SquareSize);
	          	local Row    = math.round((Ay - LowestY) / SquareSize);
	          	local CellNumber = math.floor((Row * 32) + Column + 1);
	        	UI:FindFirstChild(CellNumber).BackgroundColor3 = GridPart['BackgroundColor3'];
	        	if (Rcx > 0) and (Rcy > 0) then
	        		local NewRow, NewColumn = Row, Column;
	        		for rX = 1, Rcx do
	        			NewColumn = Column + rX;
	        			for rY = 1, Rcy do
	        				NewRow = Row + rY;
	        				local NewCell = math.floor((NewRow * 32) + NewColumn + 1);
	        				UI:FindFirstChild(NewCell).BackgroundColor3 = GridPart['BackgroundColor3'];
	        			end
	        		end
	        	end
	        	if (Rcx > 0) then
	        		for rX = 1, Rcx do
	        			local NewColumn = Column + rX;
	        			local NewCell = math.floor((Row * 32) + NewColumn + 1);
	        			UI:FindFirstChild(NewCell).BackgroundColor3 = GridPart['BackgroundColor3'];
	        		end
	        	end
	        	if (Rcy > 0) then
	        		for rY = 1, Rcy do
	        			local NewRow = Row + rY;
	        			local NewCell = math.floor((NewRow * 32) + Column + 1);
	        			UI:FindFirstChild(NewCell).BackgroundColor3 = GridPart['BackgroundColor3'];
	        		end
	        	end
	        end;
	    end;
    else
    	for _, GridPart in ipairs(GridObject:GetChildren()) do
	        if (GridPart:IsA('GuiObject')) then
	            local AbsolutePosition = GridPart.AbsolutePosition;
	            local Ax, Ay = AbsolutePosition.X, AbsolutePosition.Y;
	            local AbsoluteSize = GridPart.AbsoluteSize;
	          	local Asx, Asy = math.round(AbsoluteSize.X * 1000) / 1000, math.round(AbsoluteSize.Y * 1000) / 1000;
	          	local Rcx, Rcy = (Asx / SquareSize) - 1, (Asy / SquareSize) - 1;
	            Ax = math.round(Ax * 1000) / 1000;
	            Ay = math.round(Ay * 1000) / 1000;
	           	local Column = math.round((Ax - LowestX) / SquareSize);
	          	local Row    = math.round((Ay - LowestY) / SquareSize);
	          	local CellNumber = math.floor((Row * 32) + Column + 1);
	          	local TextureCopy = GridPart:Clone()
	          	TextureCopy.Size = UDim2.fromScale(1, 1);
	        	TextureCopy.Parent = UI:FindFirstChild(CellNumber);
	        end;
	    end;
    end;
end

local function ClonePlayerCanvas(Player, CanvasNumber)
	local Easel       = Plots[Player].Easels[tostring(CanvasNumber)].Canvas.SurfaceGui
    local ArtGrid     = Easel.Grid;
    local ArtTextures = Easel.TexturesFrame;
    
    CloneGrid(ArtGrid);
    if (TryCloneTextures) then
    	CloneGrid(ArtTextures, true);
    end
end;

local function ClonePlayerCanvasWithBytes(Player, CanvasNumber)
	ClonePlayerCanvas(Target, Canvas);
	local Bytes = {};
	for _, GridPart in ipairs(UI:GetChildren()) do
		if (GridPart:IsA('GuiObject')) then
			local Colour = GridPart.BackgroundColor3;
			Bytes[GridPart.Name] = {
				R = math.floor(Colour.R * 255),
				G = math.floor(Colour.G * 255),
				B = math.floor(Colour.B * 255)
			};
		end
	end
	setclipboard(HttpService:JSONEncode(Bytes));
end

if (CopyCloneToClipboard) then
	ClonePlayerCanvasWithBytes(Target, Canvas);
else
	ClonePlayerCanvas(Target, Canvas);
end"
6MYLHzCA,2023-06-23_stats.json,rdp_snitch,JSON,Saturday 24th of June 2023 07:18:09 PM CDT,"{
  ""ip"": {
    ""87.251.75.145"": 15,
    ""45.147.26.147"": 2478,
    ""203.162.31.123"": 45,
    ""91.212.166.5"": 1920,
    ""178.21.163.70"": 27,
    ""69.58.124.234"": 153,
    ""114.217.18.245"": 99,
    ""168.138.255.225"": 63,
    ""125.74.93.228"": 183,
    ""49.207.179.83"": 30,
    ""92.204.139.79"": 102,
    ""36.108.169.132"": 63,
    ""185.66.228.185"": 24,
    ""120.71.0.5"": 54,
    ""51.75.160.42"": 6,
    ""120.132.17.153"": 39,
    ""46.10.214.186"": 93,
    ""20.42.101.211"": 138,
    ""62.122.184.134"": 24,
    ""168.138.149.190"": 33,
    ""201.93.165.53"": 24,
    ""164.92.158.134"": 12,
    ""194.165.16.78"": 6,
    ""5.9.211.115"": 3,
    ""31.43.185.32"": 15,
    ""167.94.145.57"": 3,
    ""185.170.144.3"": 6,
    ""87.251.64.110"": 6,
    ""62.122.184.166"": 12,
    ""62.122.184.168"": 12,
    ""159.223.161.95"": 3,
    ""14.169.151.16"": 60,
    ""45.227.254.49"": 6,
    ""87.251.75.120"": 3,
    ""155.248.179.206"": 6,
    ""203.205.17.189"": 33,
    ""45.227.254.55"": 6,
    ""193.169.255.78"": 6,
    ""36.91.222.100"": 6,
    ""172.105.110.151"": 3,
    ""109.237.26.92"": 3,
    ""149.56.14.172"": 3,
    ""87.251.75.64"": 3,
    ""198.235.24.83"": 9,
    ""210.2.165.42"": 36,
    ""60.250.29.35"": 36,
    ""194.165.16.76"": 6,
    ""124.109.51.126"": 9,
    ""172.245.245.9"": 117,
    ""74.102.38.98"": 12,
    ""152.89.198.133"": 6,
    ""106.116.169.71"": 3,
    ""194.165.16.37"": 6,
    ""179.43.184.138"": 3
  },
  ""asn"": {
    ""AS208091"": 21,
    ""AS6134"": 2478,
    ""AS45899"": 105,
    ""AS198953"": 1920,
    ""AS21419"": 27,
    ""AS32899"": 153,
    ""AS4134"": 102,
    ""AS31898"": 102,
    ""AS141998"": 183,
    ""AS24309"": 30,
    ""AS398108"": 102,
    ""AS137695"": 117,
    ""AS201689"": 24,
    ""AS16276"": 9,
    ""AS140292"": 39,
    ""AS8866"": 93,
    ""AS8075"": 138,
    ""AS57523"": 54,
    ""AS27699"": 24,
    ""AS14061"": 15,
    ""AS48721"": 18,
    ""AS24940"": 3,
    ""AS211736"": 15,
    ""AS398705"": 3,
    ""AS48080"": 12,
    ""AS267784"": 12,
    ""AS45903"": 33,
    ""AS198810"": 6,
    ""AS7713"": 6,
    ""AS63949"": 6,
    ""AS396982"": 9,
    ""AS23966"": 36,
    ""AS3462"": 36,
    ""AS23674"": 9,
    ""AS36352"": 117,
    ""AS701"": 12,
    ""AS51852"": 3
  },
  ""isp"": {
    ""XHOST-INTERNET-SOLUTIONS"": 21,
    ""Xnnet LLC"": 2478,
    ""VietNam Post and Telecom Corporation"": 45,
    ""Proton66 OOO"": 1920,
    ""Pishtaze E Jadid Infomration Company"": 27,
    ""Bresco Broadband"": 153,
    ""Chinanet"": 102,
    ""Oracle Corporation"": 102,
    ""China Telecom"": 183,
    ""Beam Telecom Pvt Ltd"": 30,
    ""GoDaddy.com, LLC"": 102,
    ""CHINATELECOM Xinjiang Wulumuqi MAN network"": 117,
    ""Lamerd Information & Communication Technology Co., ltd"": 24,
    ""OVH SAS"": 9,
    ""Addresses CNNIC"": 39,
    ""Vivacom Bulgaria EAD"": 93,
    ""Microsoft Corporation"": 138,
    ""Chang Way Technologies Co. Limited"": 54,
    ""Vivo"": 24,
    ""DigitalOcean, LLC"": 15,
    ""Flyservers S.A."": 30,
    ""Hetzner Online GmbH"": 3,
    ""FOP Dmytro Nedilskyi"": 15,
    ""Censys, Inc."": 3,
    ""Dmitriy Panchenko"": 12,
    ""VNPT-VNNIC"": 60,
    ""CMC Telecom Infrastructure Company"": 33,
    ""Agata Grabowska trading as FUFO Studio"": 6,
    ""PT Telekomunikasi Indonesia"": 6,
    ""Akamai Technologies"": 3,
    ""Akamai Technologies, Inc."": 3,
    ""Google LLC"": 9,
    ""LINKdotNET Telecom Limited"": 36,
    ""Chunghwa Telecom Co., Ltd."": 36,
    ""Nayatel (Pvt) Ltd"": 9,
    ""ColoCrossing"": 117,
    ""Verizon Business"": 12,
    ""Private Layer INC"": 3
  },
  ""org"": {
    ""Xhost Internet Solutions"": 27,
    ""Hongkong WEN Jing Network Limited"": 2478,
    ""VietNam Data Communication Company"": 45,
    ""Proton66 LLC"": 1920,
    ""Unknown"": 195,
    ""Bresco Broadband"": 153,
    ""Chinanet JS"": 99,
    ""Oracle Cloud Infrastructure (sa-saopaulo-1)"": 96,
    ""Chinanet GS"": 183,
    ""Beam Telecom Pvt Ltd"": 30,
    ""Chinanet ZJ"": 63,
    ""Chinanet XJ"": 54,
    ""OVH Ltd"": 6,
    ""Bulgarian Telecommunications Company Plc"": 93,
    ""Microsoft Azure Cloud (eastus)"": 138,
    ""Chang Way Technologies Co. Limited"": 48,
    ""TELEF\ufffdNICA BRASIL S.A"": 24,
    ""DigitalOcean, LLC"": 15,
    ""Flyservers S.A"": 18,
    ""FOP Dmytro Nedilskyi"": 15,
    ""Censys, Inc."": 3,
    ""Xhostis"": 6,
    ""VietNam Post and Telecom Corporation"": 60,
    ""UAB Host Baltic"": 12,
    ""Oracle Cloud Infrastructure (ap-tokyo-1)"": 6,
    ""CMC Telecom Infrastructure Company"": 33,
    ""FUFO Studio"": 6,
    ""Telekomunikasi Indonesia"": 6,
    ""Linode"": 6,
    ""OVH Hosting, Inc."": 3,
    ""Palo Alto Networks, Inc"": 9,
    ""Dancom ISB"": 36,
    ""Chunghwa Telecom Co. Ltd."": 36,
    ""Nayatel"": 9,
    ""Hudson Valley Host"": 117,
    ""Verizon Business"": 12,
    ""Starcrecium Limited"": 6,
    ""Chinanet HE"": 3,
    ""Private Layer Inc"": 3
  },
  ""regionName"": {
    ""North Holland"": 39,
    ""Yau Tsim Mong"": 2478,
    ""Ho Chi Minh"": 105,
    ""Moscow"": 1980,
    ""Tehran"": 51,
    ""Ohio"": 153,
    ""Jiangsu"": 99,
    ""Sao Paulo"": 120,
    ""Gansu"": 183,
    ""Tamil Nadu"": 30,
    ""Virginia"": 240,
    ""Zhejiang"": 63,
    ""Xinjiang Uyghur Autonomous Region"": 54,
    ""England"": 9,
    ""Beijing"": 39,
    ""Sofia-Capital"": 93,
    ""Kaunas"": 18,
    ""Saxony"": 3,
    ""Kyiv City"": 15,
    ""Hesse"": 3,
    ""New Jersey"": 15,
    ""Vilnius"": 12,
    ""Tokyo"": 6,
    ""Hanoi"": 33,
    ""Mazovia"": 6,
    ""Jakarta"": 6,
    ""Ontario"": 3,
    ""Quebec"": 3,
    ""California"": 9,
    ""Islamabad"": 45,
    ""Taipei City"": 36,
    ""New York"": 117,
    ""Hebei"": 3,
    ""Zurich"": 3
  },
  ""country"": {
    ""Netherlands"": 39,
    ""Hong Kong"": 2478,
    ""Vietnam"": 138,
    ""Russia"": 1980,
    ""Iran"": 51,
    ""United States"": 534,
    ""China"": 441,
    ""Brazil"": 120,
    ""India"": 30,
    ""United Kingdom"": 9,
    ""Bulgaria"": 93,
    ""Lithuania"": 30,
    ""Germany"": 6,
    ""Ukraine"": 15,
    ""Japan"": 6,
    ""Poland"": 6,
    ""Indonesia"": 6,
    ""Canada"": 6,
    ""Pakistan"": 45,
    ""Taiwan"": 36,
    ""Switzerland"": 3
  },
  ""account"": {
    ""Administr"": 45,
    ""hello"": 4722,
    ""142.93.8.59"": 1173,
    ""Test"": 48,
    ""Domain"": 60,
    ""(empty)"": 6,
    ""beio"": 6,
    ""wraLrbQtX"": 3,
    ""hnmtRX"": 3,
    ""IrnfLm"": 3,
    ""a"": 3
  },
  ""keyboard"": {
    ""Unknown"": 6072
  },
  ""client_build"": {
    ""Unknown"": 6072
  },
  ""client_name"": {
    ""Unknown"": 6072
  },
  ""ip_type"": {
    ""Unknown"": 3096,
    ""proxy"": 2508,
    ""mobile"": 66,
    ""hosting"": 402
  }
}"
2D6xgqth,2023-06-23_stats.json,rdp_snitch,JSON,Saturday 24th of June 2023 07:16:07 PM CDT,"{
  ""ip"": {
    ""87.251.75.145"": 14,
    ""45.147.26.147"": 2478,
    ""203.162.31.123"": 45,
    ""91.212.166.5"": 1920,
    ""178.21.163.70"": 27,
    ""69.58.124.234"": 153,
    ""114.217.18.245"": 99,
    ""168.138.255.225"": 63,
    ""125.74.93.228"": 183,
    ""49.207.179.83"": 30,
    ""92.204.139.79"": 102,
    ""36.108.169.132"": 63,
    ""185.66.228.185"": 24,
    ""120.71.0.5"": 54,
    ""51.75.160.42"": 6,
    ""120.132.17.153"": 39,
    ""46.10.214.186"": 93,
    ""20.42.101.211"": 138,
    ""62.122.184.134"": 24,
    ""168.138.149.190"": 33,
    ""201.93.165.53"": 24,
    ""164.92.158.134"": 12,
    ""194.165.16.78"": 6,
    ""5.9.211.115"": 3,
    ""31.43.185.32"": 15,
    ""167.94.145.57"": 3,
    ""185.170.144.3"": 6,
    ""87.251.64.110"": 6,
    ""62.122.184.166"": 12,
    ""62.122.184.168"": 12,
    ""159.223.161.95"": 3,
    ""14.169.151.16"": 60,
    ""45.227.254.49"": 6,
    ""87.251.75.120"": 3,
    ""155.248.179.206"": 6,
    ""203.205.17.189"": 33,
    ""45.227.254.55"": 6,
    ""193.169.255.78"": 6,
    ""36.91.222.100"": 6,
    ""172.105.110.151"": 3,
    ""109.237.26.92"": 3,
    ""149.56.14.172"": 3,
    ""87.251.75.64"": 3,
    ""198.235.24.83"": 9,
    ""210.2.165.42"": 36,
    ""60.250.29.35"": 36,
    ""194.165.16.76"": 6,
    ""124.109.51.126"": 9,
    ""172.245.245.9"": 117,
    ""74.102.38.98"": 12,
    ""152.89.198.133"": 6,
    ""106.116.169.71"": 3,
    ""194.165.16.37"": 6,
    ""179.43.184.138"": 3
  },
  ""asn"": {
    ""AS208091"": 20,
    ""AS6134"": 2478,
    ""AS45899"": 105,
    ""AS198953"": 1920,
    ""AS21419"": 27,
    ""AS32899"": 153,
    ""AS4134"": 102,
    ""AS31898"": 102,
    ""AS141998"": 183,
    ""AS24309"": 30,
    ""AS398108"": 102,
    ""AS137695"": 117,
    ""AS201689"": 24,
    ""AS16276"": 9,
    ""AS140292"": 39,
    ""AS8866"": 93,
    ""AS8075"": 138,
    ""AS57523"": 54,
    ""AS27699"": 24,
    ""AS14061"": 15,
    ""AS48721"": 18,
    ""AS24940"": 3,
    ""AS211736"": 15,
    ""AS398705"": 3,
    ""AS48080"": 12,
    ""AS267784"": 12,
    ""AS45903"": 33,
    ""AS198810"": 6,
    ""AS7713"": 6,
    ""AS63949"": 6,
    ""AS396982"": 9,
    ""AS23966"": 36,
    ""AS3462"": 36,
    ""AS23674"": 9,
    ""AS36352"": 117,
    ""AS701"": 12,
    ""AS51852"": 3
  },
  ""isp"": {
    ""XHOST-INTERNET-SOLUTIONS"": 20,
    ""Xnnet LLC"": 2478,
    ""VietNam Post and Telecom Corporation"": 45,
    ""Proton66 OOO"": 1920,
    ""Pishtaze E Jadid Infomration Company"": 27,
    ""Bresco Broadband"": 153,
    ""Chinanet"": 102,
    ""Oracle Corporation"": 102,
    ""China Telecom"": 183,
    ""Beam Telecom Pvt Ltd"": 30,
    ""GoDaddy.com, LLC"": 102,
    ""CHINATELECOM Xinjiang Wulumuqi MAN network"": 117,
    ""Lamerd Information & Communication Technology Co., ltd"": 24,
    ""OVH SAS"": 9,
    ""Addresses CNNIC"": 39,
    ""Vivacom Bulgaria EAD"": 93,
    ""Microsoft Corporation"": 138,
    ""Chang Way Technologies Co. Limited"": 54,
    ""Vivo"": 24,
    ""DigitalOcean, LLC"": 15,
    ""Flyservers S.A."": 30,
    ""Hetzner Online GmbH"": 3,
    ""FOP Dmytro Nedilskyi"": 15,
    ""Censys, Inc."": 3,
    ""Dmitriy Panchenko"": 12,
    ""VNPT-VNNIC"": 60,
    ""CMC Telecom Infrastructure Company"": 33,
    ""Agata Grabowska trading as FUFO Studio"": 6,
    ""PT Telekomunikasi Indonesia"": 6,
    ""Akamai Technologies"": 3,
    ""Akamai Technologies, Inc."": 3,
    ""Google LLC"": 9,
    ""LINKdotNET Telecom Limited"": 36,
    ""Chunghwa Telecom Co., Ltd."": 36,
    ""Nayatel (Pvt) Ltd"": 9,
    ""ColoCrossing"": 117,
    ""Verizon Business"": 12,
    ""Private Layer INC"": 3
  },
  ""org"": {
    ""Xhost Internet Solutions"": 26,
    ""Hongkong WEN Jing Network Limited"": 2478,
    ""VietNam Data Communication Company"": 45,
    ""Proton66 LLC"": 1920,
    ""Unknown"": 195,
    ""Bresco Broadband"": 153,
    ""Chinanet JS"": 99,
    ""Oracle Cloud Infrastructure (sa-saopaulo-1)"": 96,
    ""Chinanet GS"": 183,
    ""Beam Telecom Pvt Ltd"": 30,
    ""Chinanet ZJ"": 63,
    ""Chinanet XJ"": 54,
    ""OVH Ltd"": 6,
    ""Bulgarian Telecommunications Company Plc"": 93,
    ""Microsoft Azure Cloud (eastus)"": 138,
    ""Chang Way Technologies Co. Limited"": 48,
    ""TELEF\ufffdNICA BRASIL S.A"": 24,
    ""DigitalOcean, LLC"": 15,
    ""Flyservers S.A"": 18,
    ""FOP Dmytro Nedilskyi"": 15,
    ""Censys, Inc."": 3,
    ""Xhostis"": 6,
    ""VietNam Post and Telecom Corporation"": 60,
    ""UAB Host Baltic"": 12,
    ""Oracle Cloud Infrastructure (ap-tokyo-1)"": 6,
    ""CMC Telecom Infrastructure Company"": 33,
    ""FUFO Studio"": 6,
    ""Telekomunikasi Indonesia"": 6,
    ""Linode"": 6,
    ""OVH Hosting, Inc."": 3,
    ""Palo Alto Networks, Inc"": 9,
    ""Dancom ISB"": 36,
    ""Chunghwa Telecom Co. Ltd."": 36,
    ""Nayatel"": 9,
    ""Hudson Valley Host"": 117,
    ""Verizon Business"": 12,
    ""Starcrecium Limited"": 6,
    ""Chinanet HE"": 3,
    ""Private Layer Inc"": 3
  },
  ""regionName"": {
    ""North Holland"": 38,
    ""Yau Tsim Mong"": 2478,
    ""Ho Chi Minh"": 105,
    ""Moscow"": 1980,
    ""Tehran"": 51,
    ""Ohio"": 153,
    ""Jiangsu"": 99,
    ""Sao Paulo"": 120,
    ""Gansu"": 183,
    ""Tamil Nadu"": 30,
    ""Virginia"": 240,
    ""Zhejiang"": 63,
    ""Xinjiang Uyghur Autonomous Region"": 54,
    ""England"": 9,
    ""Beijing"": 39,
    ""Sofia-Capital"": 93,
    ""Kaunas"": 18,
    ""Saxony"": 3,
    ""Kyiv City"": 15,
    ""Hesse"": 3,
    ""New Jersey"": 15,
    ""Vilnius"": 12,
    ""Tokyo"": 6,
    ""Hanoi"": 33,
    ""Mazovia"": 6,
    ""Jakarta"": 6,
    ""Ontario"": 3,
    ""Quebec"": 3,
    ""California"": 9,
    ""Islamabad"": 45,
    ""Taipei City"": 36,
    ""New York"": 117,
    ""Hebei"": 3,
    ""Zurich"": 3
  },
  ""country"": {
    ""Netherlands"": 38,
    ""Hong Kong"": 2478,
    ""Vietnam"": 138,
    ""Russia"": 1980,
    ""Iran"": 51,
    ""United States"": 534,
    ""China"": 441,
    ""Brazil"": 120,
    ""India"": 30,
    ""United Kingdom"": 9,
    ""Bulgaria"": 93,
    ""Lithuania"": 30,
    ""Germany"": 6,
    ""Ukraine"": 15,
    ""Japan"": 6,
    ""Poland"": 6,
    ""Indonesia"": 6,
    ""Canada"": 6,
    ""Pakistan"": 45,
    ""Taiwan"": 36,
    ""Switzerland"": 3
  },
  ""account"": {
    ""Administr"": 44,
    ""hello"": 4722,
    ""142.93.8.59"": 1173,
    ""Test"": 48,
    ""Domain"": 60,
    ""(empty)"": 6,
    ""beio"": 6,
    ""wraLrbQtX"": 3,
    ""hnmtRX"": 3,
    ""IrnfLm"": 3,
    ""a"": 3
  },
  ""keyboard"": {
    ""Unknown"": 6071
  },
  ""client_build"": {
    ""Unknown"": 6071
  },
  ""client_name"": {
    ""Unknown"": 6071
  },
  ""ip_type"": {
    ""Unknown"": 3095,
    ""proxy"": 2508,
    ""mobile"": 66,
    ""hosting"": 402
  }
}"
kn1DMyiU,2023-06-23_stats.json,rdp_snitch,JSON,Saturday 24th of June 2023 07:15:09 PM CDT,"{
  ""ip"": {
    ""87.251.75.145"": 13,
    ""45.147.26.147"": 2478,
    ""203.162.31.123"": 45,
    ""91.212.166.5"": 1920,
    ""178.21.163.70"": 27,
    ""69.58.124.234"": 153,
    ""114.217.18.245"": 99,
    ""168.138.255.225"": 63,
    ""125.74.93.228"": 183,
    ""49.207.179.83"": 30,
    ""92.204.139.79"": 102,
    ""36.108.169.132"": 63,
    ""185.66.228.185"": 24,
    ""120.71.0.5"": 54,
    ""51.75.160.42"": 6,
    ""120.132.17.153"": 39,
    ""46.10.214.186"": 93,
    ""20.42.101.211"": 138,
    ""62.122.184.134"": 24,
    ""168.138.149.190"": 33,
    ""201.93.165.53"": 24,
    ""164.92.158.134"": 12,
    ""194.165.16.78"": 6,
    ""5.9.211.115"": 3,
    ""31.43.185.32"": 15,
    ""167.94.145.57"": 3,
    ""185.170.144.3"": 6,
    ""87.251.64.110"": 6,
    ""62.122.184.166"": 12,
    ""62.122.184.168"": 12,
    ""159.223.161.95"": 3,
    ""14.169.151.16"": 60,
    ""45.227.254.49"": 6,
    ""87.251.75.120"": 3,
    ""155.248.179.206"": 6,
    ""203.205.17.189"": 33,
    ""45.227.254.55"": 6,
    ""193.169.255.78"": 6,
    ""36.91.222.100"": 6,
    ""172.105.110.151"": 3,
    ""109.237.26.92"": 3,
    ""149.56.14.172"": 3,
    ""87.251.75.64"": 3,
    ""198.235.24.83"": 9,
    ""210.2.165.42"": 36,
    ""60.250.29.35"": 36,
    ""194.165.16.76"": 6,
    ""124.109.51.126"": 9,
    ""172.245.245.9"": 117,
    ""74.102.38.98"": 12,
    ""152.89.198.133"": 6,
    ""106.116.169.71"": 3,
    ""194.165.16.37"": 6,
    ""179.43.184.138"": 3
  },
  ""asn"": {
    ""AS208091"": 19,
    ""AS6134"": 2478,
    ""AS45899"": 105,
    ""AS198953"": 1920,
    ""AS21419"": 27,
    ""AS32899"": 153,
    ""AS4134"": 102,
    ""AS31898"": 102,
    ""AS141998"": 183,
    ""AS24309"": 30,
    ""AS398108"": 102,
    ""AS137695"": 117,
    ""AS201689"": 24,
    ""AS16276"": 9,
    ""AS140292"": 39,
    ""AS8866"": 93,
    ""AS8075"": 138,
    ""AS57523"": 54,
    ""AS27699"": 24,
    ""AS14061"": 15,
    ""AS48721"": 18,
    ""AS24940"": 3,
    ""AS211736"": 15,
    ""AS398705"": 3,
    ""AS48080"": 12,
    ""AS267784"": 12,
    ""AS45903"": 33,
    ""AS198810"": 6,
    ""AS7713"": 6,
    ""AS63949"": 6,
    ""AS396982"": 9,
    ""AS23966"": 36,
    ""AS3462"": 36,
    ""AS23674"": 9,
    ""AS36352"": 117,
    ""AS701"": 12,
    ""AS51852"": 3
  },
  ""isp"": {
    ""XHOST-INTERNET-SOLUTIONS"": 19,
    ""Xnnet LLC"": 2478,
    ""VietNam Post and Telecom Corporation"": 45,
    ""Proton66 OOO"": 1920,
    ""Pishtaze E Jadid Infomration Company"": 27,
    ""Bresco Broadband"": 153,
    ""Chinanet"": 102,
    ""Oracle Corporation"": 102,
    ""China Telecom"": 183,
    ""Beam Telecom Pvt Ltd"": 30,
    ""GoDaddy.com, LLC"": 102,
    ""CHINATELECOM Xinjiang Wulumuqi MAN network"": 117,
    ""Lamerd Information & Communication Technology Co., ltd"": 24,
    ""OVH SAS"": 9,
    ""Addresses CNNIC"": 39,
    ""Vivacom Bulgaria EAD"": 93,
    ""Microsoft Corporation"": 138,
    ""Chang Way Technologies Co. Limited"": 54,
    ""Vivo"": 24,
    ""DigitalOcean, LLC"": 15,
    ""Flyservers S.A."": 30,
    ""Hetzner Online GmbH"": 3,
    ""FOP Dmytro Nedilskyi"": 15,
    ""Censys, Inc."": 3,
    ""Dmitriy Panchenko"": 12,
    ""VNPT-VNNIC"": 60,
    ""CMC Telecom Infrastructure Company"": 33,
    ""Agata Grabowska trading as FUFO Studio"": 6,
    ""PT Telekomunikasi Indonesia"": 6,
    ""Akamai Technologies"": 3,
    ""Akamai Technologies, Inc."": 3,
    ""Google LLC"": 9,
    ""LINKdotNET Telecom Limited"": 36,
    ""Chunghwa Telecom Co., Ltd."": 36,
    ""Nayatel (Pvt) Ltd"": 9,
    ""ColoCrossing"": 117,
    ""Verizon Business"": 12,
    ""Private Layer INC"": 3
  },
  ""org"": {
    ""Xhost Internet Solutions"": 25,
    ""Hongkong WEN Jing Network Limited"": 2478,
    ""VietNam Data Communication Company"": 45,
    ""Proton66 LLC"": 1920,
    ""Unknown"": 195,
    ""Bresco Broadband"": 153,
    ""Chinanet JS"": 99,
    ""Oracle Cloud Infrastructure (sa-saopaulo-1)"": 96,
    ""Chinanet GS"": 183,
    ""Beam Telecom Pvt Ltd"": 30,
    ""Chinanet ZJ"": 63,
    ""Chinanet XJ"": 54,
    ""OVH Ltd"": 6,
    ""Bulgarian Telecommunications Company Plc"": 93,
    ""Microsoft Azure Cloud (eastus)"": 138,
    ""Chang Way Technologies Co. Limited"": 48,
    ""TELEF\ufffdNICA BRASIL S.A"": 24,
    ""DigitalOcean, LLC"": 15,
    ""Flyservers S.A"": 18,
    ""FOP Dmytro Nedilskyi"": 15,
    ""Censys, Inc."": 3,
    ""Xhostis"": 6,
    ""VietNam Post and Telecom Corporation"": 60,
    ""UAB Host Baltic"": 12,
    ""Oracle Cloud Infrastructure (ap-tokyo-1)"": 6,
    ""CMC Telecom Infrastructure Company"": 33,
    ""FUFO Studio"": 6,
    ""Telekomunikasi Indonesia"": 6,
    ""Linode"": 6,
    ""OVH Hosting, Inc."": 3,
    ""Palo Alto Networks, Inc"": 9,
    ""Dancom ISB"": 36,
    ""Chunghwa Telecom Co. Ltd."": 36,
    ""Nayatel"": 9,
    ""Hudson Valley Host"": 117,
    ""Verizon Business"": 12,
    ""Starcrecium Limited"": 6,
    ""Chinanet HE"": 3,
    ""Private Layer Inc"": 3
  },
  ""regionName"": {
    ""North Holland"": 37,
    ""Yau Tsim Mong"": 2478,
    ""Ho Chi Minh"": 105,
    ""Moscow"": 1980,
    ""Tehran"": 51,
    ""Ohio"": 153,
    ""Jiangsu"": 99,
    ""Sao Paulo"": 120,
    ""Gansu"": 183,
    ""Tamil Nadu"": 30,
    ""Virginia"": 240,
    ""Zhejiang"": 63,
    ""Xinjiang Uyghur Autonomous Region"": 54,
    ""England"": 9,
    ""Beijing"": 39,
    ""Sofia-Capital"": 93,
    ""Kaunas"": 18,
    ""Saxony"": 3,
    ""Kyiv City"": 15,
    ""Hesse"": 3,
    ""New Jersey"": 15,
    ""Vilnius"": 12,
    ""Tokyo"": 6,
    ""Hanoi"": 33,
    ""Mazovia"": 6,
    ""Jakarta"": 6,
    ""Ontario"": 3,
    ""Quebec"": 3,
    ""California"": 9,
    ""Islamabad"": 45,
    ""Taipei City"": 36,
    ""New York"": 117,
    ""Hebei"": 3,
    ""Zurich"": 3
  },
  ""country"": {
    ""Netherlands"": 37,
    ""Hong Kong"": 2478,
    ""Vietnam"": 138,
    ""Russia"": 1980,
    ""Iran"": 51,
    ""United States"": 534,
    ""China"": 441,
    ""Brazil"": 120,
    ""India"": 30,
    ""United Kingdom"": 9,
    ""Bulgaria"": 93,
    ""Lithuania"": 30,
    ""Germany"": 6,
    ""Ukraine"": 15,
    ""Japan"": 6,
    ""Poland"": 6,
    ""Indonesia"": 6,
    ""Canada"": 6,
    ""Pakistan"": 45,
    ""Taiwan"": 36,
    ""Switzerland"": 3
  },
  ""account"": {
    ""Administr"": 43,
    ""hello"": 4722,
    ""142.93.8.59"": 1173,
    ""Test"": 48,
    ""Domain"": 60,
    ""(empty)"": 6,
    ""beio"": 6,
    ""wraLrbQtX"": 3,
    ""hnmtRX"": 3,
    ""IrnfLm"": 3,
    ""a"": 3
  },
  ""keyboard"": {
    ""Unknown"": 6070
  },
  ""client_build"": {
    ""Unknown"": 6070
  },
  ""client_name"": {
    ""Unknown"": 6070
  },
  ""ip_type"": {
    ""Unknown"": 3094,
    ""proxy"": 2508,
    ""mobile"": 66,
    ""hosting"": 402
  }
}"
bXP79KEN,headphones activate,netang,Bash,Saturday 24th of June 2023 06:58:33 PM CDT,"pactl list short sinks
# 1	alsa_output.pci-0000_00_1b.0.analog-stereo	module-alsa-card.c	s16le 2ch 44100Hz	SUSPENDED
# 4	alsa_output.pci-0000_03_00.1.hdmi-stereo-extra1	module-alsa-card.c	s16le 2ch 44100Hz	SUSPENDED
pactl list short sink-inputs
# 239	4	33	protocol-native.c	float32le 2ch 44100Hz
pacmd set-default-sink 1
pacmd set-default-sink 4
pacmd set-default-sink alsa_output.pci-0000_00_1b.0.analog-stereo
pacmd set-default-sink alsa_output.pci-0000_03_00.1.hdmi-stereo-extra1

# to reload pulseaudio (to reload default.pa)
pulseaudio -k
"
J6QvEEb2,Stairs,jBlume,Lua,Saturday 24th of June 2023 06:56:16 PM CDT,"number = 10

for n=1,number do
 turtle.dig()
 turtle.forward()
 turtle.digup()
 turtle.up()
 turtle.digUp()
end"
UeZ2XWsN,remove random recommended videos on youtube,alegitpie,JavaScript,Saturday 24th of June 2023 06:45:43 PM CDT,"$("".style-scope ytd-watch-next-secondary-results-renderer"").children.item(1).children.item(1).children.item(2).children.item(2).remove()"
CRu7uxwn,DllLoader Class for VB.NET,Naohiro19,VB.NET,Saturday 24th of June 2023 06:24:04 PM CDT,"Imports System
Imports System.Runtime.InteropServices

Public Class DllLoader(Of T)
    Implements IDisposable

    Private _dllHandle As IntPtr
    Private _disposed As Boolean = False

    Public Property [Function] As T

    Public Sub New(dllPath As String, functionName As String)
        _dllHandle = LoadLibrary(dllPath)
        If _dllHandle = IntPtr.Zero Then
            Throw New Exception(""Failed to load DLL: "" & dllPath)
        End If

        Dim functionPtr As IntPtr = GetProcAddress(_dllHandle, functionName)
        If functionPtr = IntPtr.Zero Then
            Throw New Exception(""Failed to find function: "" & functionName)
        End If

        [Function] = Marshal.GetDelegateForFunctionPointer(Of T)(functionPtr)
    End Sub

    Protected Overrides Sub Finalize()
        Dispose(False)
        MyBase.Finalize()
    End Sub

    Public Sub Dispose() Implements IDisposable.Dispose
        Dispose(True)
        GC.SuppressFinalize(Me)
    End Sub

    Protected Overridable Sub Dispose(disposing As Boolean)
        If Not _disposed Then
            If disposing Then
                ' マネージドリソースの解放
            End If

            ' アンマネージドリソースの解放
            If _dllHandle <> IntPtr.Zero Then
                FreeLibrary(_dllHandle)
                _dllHandle = IntPtr.Zero
            End If

            _disposed = True
        End If
    End Sub

    <DllImport(""kernel32.dll"", CharSet:=CharSet.Unicode, SetLastError:=True)>
    Private Shared Function LoadLibrary(lpFileName As String) As IntPtr
    End Function

    <DllImport(""kernel32.dll"", CharSet:=CharSet.Ansi, SetLastError:=True)>
    Private Shared Function GetProcAddress(hModule As IntPtr, lpProcName As String) As IntPtr
    End Function

    <DllImport(""kernel32.dll"", SetLastError:=True)>
    Private Shared Function FreeLibrary(hModule As IntPtr) As <MarshalAs(UnmanagedType.Bool)> Boolean
    End Function
End Class
"
63hPi8HC,DllLoader Class for C#,Naohiro19,C#,Saturday 24th of June 2023 06:21:33 PM CDT,"using System;
using System.Runtime.InteropServices;

public class DllLoader<T> : IDisposable
{
    private IntPtr _dllHandle;
    private bool _disposed;

    public T Function { get; private set; }

    public DllLoader(string dllPath, string functionName)
    {
        _dllHandle = LoadLibrary(dllPath);
        if (_dllHandle == IntPtr.Zero)
        {
            throw new Exception(""Failed to load DLL: "" + dllPath);
        }

        IntPtr functionPtr = GetProcAddress(_dllHandle, functionName);
        if (functionPtr == IntPtr.Zero)
        {
            throw new Exception(""Failed to find function: "" + functionName);
        }

        Function = Marshal.GetDelegateForFunctionPointer<T>(functionPtr);
    }

    ~DllLoader()
    {
        Dispose(false);
    }

    public void Dispose()
    {
        Dispose(true);
        GC.SuppressFinalize(this);
    }

    protected virtual void Dispose(bool disposing)
    {
        if (!_disposed)
        {
            if (disposing)
            {
                // マネージドリソースの解放
            }

            // アンマネージドリソースの解放
            if (_dllHandle != IntPtr.Zero)
            {
                FreeLibrary(_dllHandle);
                _dllHandle = IntPtr.Zero;
            }

            _disposed = true;
        }
    }

    [DllImport(""kernel32.dll"", CharSet = CharSet.Unicode, SetLastError = true)]
    private static extern IntPtr LoadLibrary(string lpFileName);

    [DllImport(""kernel32.dll"", CharSet = CharSet.Ansi, SetLastError = true)]
    private static extern IntPtr GetProcAddress(IntPtr hModule, string lpProcName);

    [DllImport(""kernel32.dll"", SetLastError = true)]
    [return: MarshalAs(UnmanagedType.Bool)]
    private static extern bool FreeLibrary(IntPtr hModule);
}
"
vBrbUFZM,My New Leaderboard Story Game 2 (Main),Sungmingamerpro13,CSS,Saturday 24th of June 2023 05:50:56 PM CDT,"local TeleportService = game:GetService(""TeleportService"")
local SaveCurrency = game:GetService(""DataStoreService""):GetDataStore(""Wins"")
local SaveCurrency2 = game:GetService(""DataStoreService""):GetDataStore(""Rounds"")
local SaveCurrency3 = game:GetService(""DataStoreService""):GetDataStore(""Coins"")
local SaveRevives = game:GetService(""DataStoreService""):GetDataStore(""Lives"")

local VIPGamepassId = 3269738970
game.Players.PlayerAdded:Connect(function(player)
	if game.ReplicatedStorage.Tags.Leaderstats.Value == true then
		local Folder = Instance.new(""Folder"",player)
		Folder.Name = ""leaderstats""

		local Currency = Instance.new(""NumberValue"",Folder)
		Currency.Name = game.ReplicatedStorage.Tags.RoundsValue.Value
		Currency.Value = SaveCurrency2:GetAsync(player.UserId) or 0

		local Currency2 = Instance.new(""NumberValue"",Folder)
		Currency2.Name = game.ReplicatedStorage.Tags.WinsValue.Value
		Currency2.Value = SaveCurrency:GetAsync(player.UserId) or 0

		local previousData = SaveCurrency3:GetAsync(player.UserId) 
		local Coins

		if previousData ~= nil then
			Coins = previousData
		else
			Coins = 0
			SaveCurrency3:SetAsync(player.UserId, 0)
		end

		local CoinsValue = Instance.new(""NumberValue"", player)
		CoinsValue.Name = ""Coins""
		CoinsValue.Value = Coins

		local val1 = Instance.new(""StringValue"",player)
		val1.Name = 'GotPet'
		val1.Value = ''

		local val2 = Instance.new(""StringValue"",player)
		val2.Name = 'OpenValue'
		val2.Value = ''

		if game:GetService(""MarketplaceService""):UserOwnsGamePassAsync(player.UserId, VIPGamepassId) then
			player.Coins.Value = player.Coins.Value * 2
		end
	end
end)

game.Players.PlayerRemoving:Connect(function(player)
	if game.ReplicatedStorage.Tags.Leaderstats.Value == true then	
		SaveCurrency:SetAsync(player.UserId,player.leaderstats[game.ReplicatedStorage.Tags.WinsValue.Value].Value)
		SaveCurrency2:SetAsync(player.UserId,player.leaderstats[game.ReplicatedStorage.Tags.RoundsValue.Value].Value)
	end
end)

game:BindToClose(function()
	print(""STOPPED!"")

	for i,player in pairs(game.Players:GetPlayers()) do
		local value = player.Coins.Value
		SaveCurrency3:SetAsync(player.UserId, value)
		print(""Saved data for ""..player.Name)
	end
end)

game.Players.PlayerRemoving:Connect(function(player)
	local value = player.Coins.Value

	if value ~= nil then
		print(""Found data to save for ""..player.Name..""!"")
		SaveCurrency3:SetAsync(player.UserId, value)
		print(""Saved data for ""..player.Name)
	else
		print(""Did not manage to find data to save for ""..player.Name..""!"")
	end
end)

game.Players.PlayerAdded:Connect(function(player)
	local previousData2 = SaveRevives:GetAsync(player.UserId)
	local Lives

	if previousData2 ~= nil then
		Lives = previousData2
	else
		Lives = 0
		SaveRevives:SetAsync(player.UserId, 0)
	end

	local ExtraLivesValue = Instance.new(""NumberValue"", player)
	ExtraLivesValue.Name = ""Lives""
	ExtraLivesValue.Value = Lives
end)

game:BindToClose(function()
	print(""STOPPED!"")

	for i, player in pairs(game.Players:GetPlayers()) do
		local value2 = player.Lives.Value
		SaveRevives:SetAsync(player.UserId, value2)
	end
end)

game.Players.PlayerRemoving:Connect(function(player)
	local value2 = player.Lives.Value

	if value2 ~= nil then
		print(""Found data to save for ""..player.Name..""!"")
		SaveRevives:SetAsync(player.UserId, value2)
		print(""Saved data for ""..player.Name)
	else
		print(""Did not manage to find data to save for ""..player.Name..""!"")
	end
end)

game.Players.PlayerAdded:connect(function(player)
	player.CharacterAdded:connect(function(char)

		char.Humanoid.Died:connect(function()
			SaveCurrency2:SetAsync(player.UserId, player.leaderstats.Rounds.Value)
			SaveRevives:SetAsync(player.UserId, player.Lives.Value)
			player.leaderstats.Rounds.Value = player.leaderstats.Rounds.Value + 1
			player.Lives.Value = player.Lives.Value - 1
		end)
	end)
end)

"
0PH7AGFp,My New Leaderboard Story Game (Main),Sungmingamerpro13,CSS,Saturday 24th of June 2023 05:45:32 PM CDT,"local TeleportService = game:GetService(""TeleportService"")
local SaveCurrency = game:GetService(""DataStoreService""):GetDataStore(""Wins"")
local SaveCurrency2 = game:GetService(""DataStoreService""):GetDataStore(""Rounds"")
local SaveCurrency3 = game:GetService(""DataStoreService""):GetDataStore(""Coins"")
local SaveRevives = game:GetService(""DataStoreService""):GetDataStore(""Lives"")
local SaveMoney = game:GetService(""DataStoreService""):GetDataStore(""Money"")

local VIPGamepassId = 3269738970
game.Players.PlayerAdded:Connect(function(player)
	if game.ReplicatedStorage.Tags.Leaderstats.Value == true then
		local Folder = Instance.new(""Folder"",player)
		Folder.Name = ""leaderstats""

		local Currency = Instance.new(""NumberValue"",Folder)
		Currency.Name = game.ReplicatedStorage.Tags.RoundsValue.Value
		Currency.Value = SaveCurrency2:GetAsync(player.UserId) or 0

		local Currency2 = Instance.new(""NumberValue"",Folder)
		Currency2.Name = game.ReplicatedStorage.Tags.WinsValue.Value
		Currency2.Value = SaveCurrency:GetAsync(player.UserId) or 0

		local previousData = SaveCurrency3:GetAsync(player.UserId) 
		local Coins

		if previousData ~= nil then
			Coins = previousData
		else
			Coins = 0
			SaveCurrency3:SetAsync(player.UserId, 0)
		end

		local CoinsValue = Instance.new(""NumberValue"", player)
		CoinsValue.Name = ""Coins""
		CoinsValue.Value = Coins

		local val1 = Instance.new(""StringValue"",player)
		val1.Name = 'GotPet'
		val1.Value = ''

		local val2 = Instance.new(""StringValue"",player)
		val2.Name = 'OpenValue'
		val2.Value = ''

		if game:GetService(""MarketplaceService""):UserOwnsGamePassAsync(player.UserId, VIPGamepassId) then
			player.Coins.Value = player.Coins.Value * 2
		end
	end
end)

game.Players.PlayerRemoving:Connect(function(player)
	if game.ReplicatedStorage.Tags.Leaderstats.Value == true then	
		SaveCurrency:SetAsync(player.UserId,player.leaderstats[game.ReplicatedStorage.Tags.WinsValue.Value].Value)
		SaveCurrency2:SetAsync(player.UserId,player.leaderstats[game.ReplicatedStorage.Tags.RoundsValue.Value].Value)
	end
end)

game:BindToClose(function()
	print(""STOPPED!"")

	for i,player in pairs(game.Players:GetPlayers()) do
		local value = player.Coins.Value
		SaveCurrency3:SetAsync(player.UserId, value)
		print(""Saved data for ""..player.Name)
	end
end)

game.Players.PlayerRemoving:Connect(function(player)
	local value = player.Coins.Value

	if value ~= nil then
		print(""Found data to save for ""..player.Name..""!"")
		SaveCurrency3:SetAsync(player.UserId, value)
		print(""Saved data for ""..player.Name)
	else
		print(""Did not manage to find data to save for ""..player.Name..""!"")
	end
end)

game.Players.PlayerAdded:Connect(function(player)
	local previousData2 = SaveRevives:GetAsync(player.UserId)
	local Lives

	if previousData2 ~= nil then
		Lives = previousData2
	else
		Lives = 0
		SaveRevives:SetAsync(player.UserId, 0)
	end

	local ExtraLivesValue = Instance.new(""NumberValue"", player)
	ExtraLivesValue.Name = ""Lives""
	ExtraLivesValue.Value = Lives
end)

game:BindToClose(function()
	print(""STOPPED!"")

	for i, player in pairs(game.Players:GetPlayers()) do
		local value2 = player.Lives.Value
		SaveRevives:SetAsync(player.UserId, value2)
	end
end)

game.Players.PlayerRemoving:Connect(function(player)
	local value2 = player.Money.Value

	if value2 ~= nil then
		print(""Found data to save for ""..player.Name..""!"")
		SaveRevives:SetAsync(player.UserId, value2)
		print(""Saved data for ""..player.Name)
	else
		print(""Did not manage to find data to save for ""..player.Name..""!"")
	end
end)

game.Players.PlayerAdded:Connect(function(player)
	local previousData2 = SaveMoney:GetAsync(player.UserId)
	local Money

	if previousData2 ~= nil then
		Money = previousData2
	else
		Money = 0
		SaveRevives:SetAsync(player.UserId, 0)
	end

	local MoneyValue = Instance.new(""NumberValue"", player)
	MoneyValue.Name = ""Money""
	MoneyValue.Value = Money
end)

game:BindToClose(function()
	print(""STOPPED!"")

	for i, player in pairs(game.Players:GetPlayers()) do
		local value2 = player.Money.Value
		SaveMoney:SetAsync(player.UserId, value2)
	end
end)

game.Players.PlayerRemoving:Connect(function(player)
	local value2 = player.Money.Value

	if value2 ~= nil then
		print(""Found data to save for ""..player.Name..""!"")
		SaveMoney:SetAsync(player.UserId, value2)
		print(""Saved data for ""..player.Name)
	else
		print(""Did not manage to find data to save for ""..player.Name..""!"")
	end
end)

game.Players.PlayerAdded:connect(function(player)
	player.CharacterAdded:connect(function(char)

		char.Humanoid.Died:connect(function()
			SaveCurrency2:SetAsync(player.UserId, player.leaderstats.Rounds.Value)
			SaveRevives:SetAsync(player.UserId, player.Lives.Value)
			player.leaderstats.Rounds.Value = player.leaderstats.Rounds.Value + 1
			player.Lives.Value = player.Lives.Value - 1
		end)
	end)
end)

"
