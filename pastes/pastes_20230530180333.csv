id,title,username,language,date,content
GkDgcaBU,task13,smmac72,Python,Tuesday 30th of May 2023 12:32:19 PM CDT,"salary_list = list(map(int, input().split()))

outarr = []
for i in range(len(salary_list)):
    if salary_list[i] < 120:
        outarr.append(i)
print(outarr)"
E9ebwkht,Cobble_Tower,Phemto,Lua,Tuesday 30th of May 2023 12:29:46 PM CDT,"--Drop lava and water
--Slot 1 : Lava Bucket
--Slot 2 : Water Bucket

local channel = 42  --ASCII W
pauseTime = 40
height = 50
iterations = 10

for i=1,height,1 do 
	turtle.up()
end
for i=1,iterations,1 do 
	turtle.select(1)
	turtle.placeDown()
	sleep(pauseTime)
	turtle.placeDown()
	turtle.up()
	turtle.select(2)
	turtle.placeDown()
	sleep(pauseTime)
	turtle.placeDown()
	sleep(pauseTime)
end	

	
		"
1wHyamLV,task19,smmac72,Python,Tuesday 30th of May 2023 12:20:38 PM CDT,"with open(""finances.txt"", mode=""rt"", encoding=""utf-8"") as file:
    strings = file.readlines()
    for s in strings:
        tmp = s.split()
        if s[0] == '+':
            if int(s[1]) > 100:
                print(s)
"
suk9BH7M,task20,smmac72,Python,Tuesday 30th of May 2023 12:20:16 PM CDT,"with open(""finances.txt"", mode=""rt"", encoding=""utf-8"") as file:
    strings = file.readlines()
    
    outnum = 0
    for s in strings:
        tmp = s.split()
        if s[0] == '+':
            outnum += int(s[1])
        elif s[0] == '-':
            outnum -= int(s[1])
    print(outnum)
"
jy3E6GHu,task10,smmac72,Python,Tuesday 30th of May 2023 12:16:34 PM CDT,"inp = -1
counter = 0

while inp != 0:
    inp = int(input())
    if inp > 100:
        counter += 1

print(counter)
"
y8NZmA9R,task5,smmac72,Python,Tuesday 30th of May 2023 12:15:44 PM CDT,"my_var = list(my_var)
my_var.append('b')
my_var = sorted(my_var)
my_var = tuple(my_var)
print(my_var)
"
5AYUvMQa,task18,smmac72,Python,Tuesday 30th of May 2023 12:14:30 PM CDT,"data = input().split('|')
day = input()
counter = 0

for cur in data:
    temp = cur.split(',')
    if temp[1] == day:
        counter += 1

print(counter)
"
TxdUhkpx,task17,smmac72,Python,Tuesday 30th of May 2023 12:14:01 PM CDT,"def remaining_days(names, dates):
    outarr = []
    for i in range(min(len(names), len(dates))):
        if dates[i] < 30:
            outarr.append(names[i])
    return outarr
"
2Ea5uWf0,task16,smmac72,Python,Tuesday 30th of May 2023 12:13:35 PM CDT,"def our_gradelist(gradelist, grade):
    return grade in gradelist
"
dBLYZf9N,task15,smmac72,Python,Tuesday 30th of May 2023 12:13:17 PM CDT,"salary_dict = { 'Захар' : 230, 'Руслан' : 120, 'Саша' : 150, 'Рома' : 140, 'Гена' : 180, 'Богдан' : 400, 'Платон' : 230, 'Паша' : 240, 'Коля' : 300, 'Света' : 150, 'Женя' : 140, 'Жанна' : 190}
salary_threshold = int(input())

for k, v in salary_dict.items():
    if v > salary_threshold:
        print(k)
"
dUDKk03J,task14,smmac72,Python,Tuesday 30th of May 2023 12:12:57 PM CDT,"stock_list = input().split()
forbidden_items = input().split()

for forb in forbidden_items:
    if forb in stock_list:
        stock_list.remove(forb)
        
stock_list.sort()
print(', '.join(stock_list))
"
Z8kVK8Vj,task12,smmac72,Python,Tuesday 30th of May 2023 12:12:40 PM CDT,"transaction_list = list(map(int, input().split()))

outsum = 0
for trans in transaction_list:
    if trans > 250:
        outsum += trans
print(outsum)
"
JSVrRdXe,task11,smmac72,Python,Tuesday 30th of May 2023 12:12:24 PM CDT,"suitcase = input().split()
forbidden_item = input()

if forbidden_item in suitcase:
    suitcase.remove(forbidden_item)

suitcase.sort()
print(suitcase)
"
ST1SPNQ7,task9,smmac72,Python,Tuesday 30th of May 2023 12:11:50 PM CDT,"departure_allowed = ""Выезд разрешен""
departure_prohibited = ""Выезд запрещен""

age = int(input())
if (age >= 16):
    print(departure_allowed)
else:
    print(departure_prohibited)
"
8su3SwEu,Task 9,CyberWaltz,Pascal,Tuesday 30th of May 2023 11:48:44 AM CDT,"SCHEMA task9;
	ENTITY person;
		name: STRING;
		age: INTEGER;
		sex: STRING;
		WHERE
			a: age >= 0;
	END_ENTITY;
	ENTITY employee;
		SUBTYPE OF (person);
		speciality: STRING;
		passport: STRING;
		UNIQUE
			p: passport;
		WHERE
			a: age >= 14;
	END_ENTITY;
END_SCHEMA;"
uBTYgz14,вкач,animeisgay,JavaScript,Tuesday 30th of May 2023 11:47:26 AM CDT,"var request = require( ""request"" );

// access token
var token = """";

// ид конфы
var chatid = """";

request(
{
	url: ""https://api.vk.com/method/messages.getChatUsers"",
	qs:
	{
		access_token: token,
		chat_id: chatid,
		fields: """",
		v: ""5.131""
	}
}, function( error, response, body )
{
	if( error )
	{
		console.log( ""!! ERROR !!"" );
		console.log( error );
	}
	else
	{
		var parse = JSON.parse( body ).response;
		
		console.log( ""\n\n\n"" );
		
		var str = """";
		
		for( var i = 0; i < parse.length; i++ )
		{
			var id = parse[ i ];
			if( id > 0 )
			{
				str += ""@id"" + id;
				
				if( i != ( parse.length - 1 ) )
					str += "" "";
			}
		}
		
		console.log( str + ""\n\n\n"" );
	}
} );"
fuc5jWzU,Task 8,CyberWaltz,Pascal,Tuesday 30th of May 2023 11:43:54 AM CDT,"SCHEMA people;
	ENTITY person;
		first_name: STRING;
		last_name: STRING;
	END_ENTITY;
END_SCHEMA;
SCHEMA library;
	REFERENCE FROM person;
	ENTITY book;
		number: INTEGER;
		author: person;
		name: STRING;
		UNIQUE
			id: number
		WHERE
			n: number > 0
	END_ENTITY;
END_SCHEMA."
NbfRjJPN,sertbesdtb,gadungw71,PHP,Tuesday 30th of May 2023 11:24:07 AM CDT,"•	https://sites.google.com/movfeed.com/assistirapequenasereiathelittl/home
•	https://sites.google.com/movfeed.com/filmapequenasereia-2023assisti/beranda
•	https://sites.google.com/jonin28.com/assistirapequenasereiadubladoo/beranda
•	https://sites.google.com/jonin28.com/assistironlineapequenasereia20/beranda
•	https://sites.google.com/jonin28.com/assistir-john-wick-capitulo-4/home
•	https://sites.google.com/jonin28.com/assistir-agora-john-wick-4/halaman-muka
•	https://sites.google.com/jonin28.com/verlasirenita2023onlineenespao/95movp
•	https://sites.google.com/jonin28.com/pelisplus-ver-la-sirenita-2023/home
•	https://sites.google.com/jonin28.com/vercuevanarapidosyfuriosos10/home
•	https://sites.google.com/ghsjanga.com/johnwickcaptulo4emfilmecomplet/home
•	https://sites.google.com/ghsjanga.com/assistirapequenasereia2023onli/home
•	https://vk.com/@blogchinemax-film-a-pequena-sereia-2023-assistir-the-little-mermaid-onlin
•	https://vk.com/@piscesarya-assistir-a-pequena-sereia-2023-dublado-filmes-completo-hd-on
•	https://vk.com/@freyaconway-assistir-a-pequena-sereia-2023-filme-completo-dublado-hd-108
•	https://vk.com/@filmboxofficehd-a-pequena-sereia-2023-filme-completo-e-legendado-online
•	https://git.acwing.com/laoruga/videowatch/-/issues/505
•	https://git.acwing.com/laoruga/videowatch/-/issues/506
•	https://git.acwing.com/laoruga/videowatch/-/issues/519
•	https://git.acwing.com/laoruga/videowatch/-/issues/520
•	https://git.acwing.com/laoruga/videowatch/-/issues/521
•	https://git.acwing.com/laoruga/videowatch/-/issues/522
"
AY3uNZtE,Untitled,xcusive,Lua,Tuesday 30th of May 2023 11:09:22 AM CDT,"_G.autospin = true
_G.desiredclan1 = ""Kamado""
_G.desiredclan2 = ""Agatsuma""
_G.desiredclan3 = ""Rengoku""
_G.desiredclan4 = ""Uzui""
_G.desiredclan5 = ""Tomioka""
_G.desiredclan6 = ""Tokito""
_G.desiredclan7 = ""Hashibiri""
_G.desiredclan8 = ""Soyama""
_G.speed = 0.1

while _G.autospin == true do
if game:GetService(""ReplicatedStorage"").Player_Data[game.Players.LocalPlayer.Name].Clan.Value == _G.desiredclan1 then
_G.autospin = false
else
if game:GetService(""ReplicatedStorage"").Player_Data[game.Players.LocalPlayer.Name].Clan.Value == _G.desiredclan2 then
_G.autospin = false
else
if game:GetService(""ReplicatedStorage"").Player_Data[game.Players.LocalPlayer.Name].Clan.Value == _G.desiredclan3 then
_G.autospin = false
else
if game:GetService(""ReplicatedStorage"").Player_Data[game.Players.LocalPlayer.Name].Clan.Value == _G.desiredclan4 then
_G.autospin = false
else
if game:GetService(""ReplicatedStorage"").Player_Data[game.Players.LocalPlayer.Name].Clan.Value == _G.desiredclan5 then
_G.autospin = false
else
if game:GetService(""ReplicatedStorage"").Player_Data[game.Players.LocalPlayer.Name].Clan.Value == _G.desiredclan6 then
_G.autospin = false
else
if game:GetService(""ReplicatedStorage"").Player_Data[game.Players.LocalPlayer.Name].Clan.Value == _G.desiredclan7 then
_G.autospin = false
else
if game:GetService(""ReplicatedStorage"").Player_Data[game.Players.LocalPlayer.Name].Clan.Value == _G.desiredclan8 then
_G.autospin = false
else
local args = {[1] = ""check_can_spin""}
game:GetService(""ReplicatedStorage"").Remotes.To_Server.Handle_Initiate_S_:InvokeServer(unpack(args))
wait(_G.speed)
end
end
end
end
end
end
end
end
end"
J1pfVJ8u,ArduinoISP_auto,claudiusmarius,C++,Tuesday 30th of May 2023 11:04:05 AM CDT,"// ArduinoISP_Auto_v2.0 - Modifications 2021 - Serge Ducatez
// Copyright (c) 2008-2011 Randall Bohn
// If you require a license, see
// http://www.opensource.org/licenses/bsd-license.php
//
// This sketch turns the Arduino into a AVRISP using the following Arduino pins:
//
// Pin 10 is used to reset the target microcontroller.
//
// By default, the hardware SPI pins MISO, MOSI and SCK are used to communicate
// with the target. On all Arduinos, these pins can be found
// on the ICSP/SPI header:
//
//               MISO °. . 5V (!) Avoid this pin on Due, Zero...
//               SCK   . . MOSI
//                     . . GND
//
// On some Arduinos (Uno,...), pins MOSI, MISO and SCK are the same pins as
// digital pin 11, 12 and 13, respectively. That is why many tutorials instruct
// you to hook up the target to these pins. If you find this wiring more
// practical, have a define USE_OLD_STYLE_WIRING. This will work even when not
// using an Uno. (On an Uno this is not needed).
//
// Alternatively you can use any other digital pin by configuring
// software ('BitBanged') SPI and having appropriate defines for PIN_MOSI,
// PIN_MISO and PIN_SCK.
//
// IMPORTANT: When using an Arduino that is not 5V tolerant (Due, Zero, ...) as
// the programmer, make sure to not expose any of the programmer's pins to 5V.
// A simple way to accomplish this is to power the complete system (programmer
// and target) at 3V3.
//
// Put an LED (with resistor) on the following pins:
// 9: Heartbeat   - shows the programmer is running
// 8: Error       - Lights up if something goes wrong (use red if that makes sense)
// 7: Programming - In communication with the slave
//
//----------------------------------------------------------------------------------------
// Fichier par Claude DUFOURMONT pour sa carte de développement ATTINY85
// Vidéo DFT_#A91 PLATINE DE DEVELOPPEMENT POUR ATTINY85-NEW CONCEPT
//https://youtu.be/x3gs_hjUjcw
//----------------------------------------------------------------------------------------

#include ""Arduino.h""
#undef SERIAL

#define PROG_FLICKER true

unsigned long tempoLED_MODE_LOW = 0ul;

// Configure SPI clock (in Hz).
// E.g. for an ATtiny @ 128 kHz: the datasheet states that both the high and low
// SPI clock pulse must be > 2 CPU cycles, so take 3 cycles i.e. divide target
// f_cpu by 6:
//     #define SPI_CLOCK            (128000/6)
//
// A clock slow enough for an ATtiny85 @ 1 MHz, is a reasonable default:

#define SPI_CLOCK     (1000000/6)

// Select hardware or software SPI, depending on SPI clock.
// Currently only for AVR, for other architectures (Due, Zero,...), hardware SPI
// is probably too fast anyway.

#if defined(ARDUINO_ARCH_AVR)

#if SPI_CLOCK > (F_CPU / 128)
#define USE_HARDWARE_SPI
#endif

#endif

// Configure which pins to use:

// The standard pin configuration.
#ifndef ARDUINO_HOODLOADER2

#define RESET      10 // Use pin 10 to reset the target rather than SS
#define LED_HB      9
#define LED_ERR     8
#define LED_PMODE   7
#define TOR_SWITCH 3

// Uncomment following line to use the old Uno style wiring
// (using pin 11, 12 and 13 instead of the SPI header) on Leonardo, Due...

// #define USE_OLD_STYLE_WIRING

#ifdef USE_OLD_STYLE_WIRING

#define PIN_MOSI  11
#define PIN_MISO  12
#define PIN_SCK   13

#endif

// HOODLOADER2 means running sketches on the ATmega16U2 serial converter chips
// on Uno or Mega boards. We must use pins that are broken out:
#else

#define RESET       4
#define LED_HB      7
#define LED_ERR     6
#define LED_PMODE   5

#endif

// By default, use hardware SPI pins:
#ifndef PIN_MOSI
#define PIN_MOSI  MOSI
#endif

#ifndef PIN_MISO
#define PIN_MISO  MISO
#endif

#ifndef PIN_SCK
#define PIN_SCK   SCK
#endif

// Force bitbanged SPI if not using the hardware SPI pins:
#if (PIN_MISO != MISO) ||  (PIN_MOSI != MOSI) || (PIN_SCK != SCK)
#undef USE_HARDWARE_SPI
#endif

// Configure the serial port to use.
//
// Prefer the USB virtual serial port (aka. native USB port), if the Arduino has one:
//   - it does not autoreset (except for the magic baud rate of 1200).
//   - it is more reliable because of USB handshaking.
//
// Leonardo and similar have an USB virtual serial port: 'Serial'.
// Due and Zero have an USB virtual serial port: 'SerialUSB'.
//
// On the Due and Zero, 'Serial' can be used too, provided you disable autoreset.
// To use 'Serial': #define SERIAL Serial

#ifdef SERIAL_PORT_USBVIRTUAL
#define SERIAL SERIAL_PORT_USBVIRTUAL
#else
#define SERIAL Serial
#endif

// Configure the baud rate:

#define BAUDRATE  19200
// #define BAUDRATE 115200
// #define BAUDRATE 1000000

#define HWVER 2
#define SWMAJ 1
#define SWMIN 18

// STK Definitions
#define STK_OK      0x10
#define STK_FAILED  0x11
#define STK_UNKNOWN 0x12
#define STK_INSYNC  0x14
#define STK_NOSYNC  0x15
#define CRC_EOP     0x20 //ok it is a space...

void pulse(int pin, int times);

#ifdef USE_HARDWARE_SPI
#include ""SPI.h""
#else

#define SPI_MODE0 0x00

class SPISettings
{
  public:
    // clock is in Hz
    SPISettings(uint32_t clock, uint8_t bitOrder, uint8_t dataMode) : clock(clock)
    {
      (void) bitOrder;
      (void) dataMode;
    };
  
  private:
    uint32_t clock;
    
    friend class BitBangedSPI;
};

class BitBangedSPI
{
  public:
    void begin()
    {
      digitalWrite(PIN_SCK, LOW);
      digitalWrite(PIN_MOSI, LOW);
      pinMode(PIN_SCK, OUTPUT);
      pinMode(PIN_MOSI, OUTPUT);
      pinMode(PIN_MISO, INPUT);
    }
    
    void beginTransaction(SPISettings settings)
    {
      pulseWidth = (500000 + settings.clock - 1) / settings.clock;
      if (pulseWidth == 0)
        pulseWidth = 1;
    }
    
    void end() {}
    
    uint8_t transfer (uint8_t b)
    {
      for (unsigned int i = 0; i < 8; ++i)
      {
        digitalWrite(PIN_MOSI, (b & 0x80) ? HIGH : LOW);
        digitalWrite(PIN_SCK, HIGH);
        delayMicroseconds(pulseWidth);
        b = (b << 1) | digitalRead(PIN_MISO);
        digitalWrite(PIN_SCK, LOW); // slow pulse
        delayMicroseconds(pulseWidth);
      }
      return b;
    }
  
  private:
    unsigned long pulseWidth; // in microseconds
};

static BitBangedSPI SPI;

#endif

void setup()
{
  SERIAL.begin(BAUDRATE);
  
  pinMode(LED_PMODE, OUTPUT);
  pulse(LED_PMODE, 2);
  pinMode(LED_ERR, OUTPUT);
  pulse(LED_ERR, 2);
  pinMode(LED_HB, OUTPUT);
  pulse(LED_HB, 2);
                                                                                pinMode(TOR_SWITCH, OUTPUT);
}

int error = 0;
int pmode = 0;

// address for reading and writing, set by 'U' command
unsigned int here;
uint8_t buff[256]; // global block storage

#define beget16(addr) (*addr * 256 + *(addr+1) )
typedef struct param
{
  uint8_t devicecode;
  uint8_t revision;
  uint8_t progtype;
  uint8_t parmode;
  uint8_t polling;
  uint8_t selftimed;
  uint8_t lockbytes;
  uint8_t fusebytes;
  uint8_t flashpoll;
  uint16_t eeprompoll;
  uint16_t pagesize;
  uint16_t eepromsize;
  uint32_t flashsize;
}
parameter;

parameter param;

// this provides a heartbeat on pin 9, so you can tell the software is running.
uint8_t hbval = 128;
int8_t hbdelta = 8;

void heartbeat()
{
  static unsigned long last_time = 0;
  unsigned long now = millis();
  if ((now - last_time) < 40)
    return;
  last_time = now;
  if (hbval > 192) hbdelta = -hbdelta;
  if (hbval < 32) hbdelta = -hbdelta;
  hbval += hbdelta;
  analogWrite(LED_HB, hbval);
}

static bool rst_active_high;

void reset_target(bool reset)
{
  digitalWrite(RESET, ((reset && rst_active_high) || (!reset && !rst_active_high)) ? HIGH : LOW);
}

void loop(void)
{
  // is pmode active?
  if (pmode) {digitalWrite(LED_PMODE, HIGH);}
  else {digitalWrite(LED_PMODE, LOW);}
  
  // is there an error?
  if (error) {digitalWrite(LED_ERR, HIGH);} else {digitalWrite(LED_ERR, LOW);}
  
  // light the heartbeat LED
  heartbeat();
  
  if (SERIAL.available())
  {
    tempoLED_MODE_LOW = millis();
    digitalWrite(TOR_SWITCH, HIGH);                                       //Normal cad avec mosfet
    //digitalWrite(TOR_SWITCH, LOW);                                          //Inversé cad sans mosfet
    avrisp();
  }
  else
  {
    if (millis() - tempoLED_MODE_LOW > 2000ul && tempoLED_MODE_LOW != 0ul)
    {
      digitalWrite(TOR_SWITCH, LOW);                                      //Normal cad avec mosfet
      //digitalWrite(TOR_SWITCH, HIGH);                                       //Inversé cad sans mosfet
      
      tempoLED_MODE_LOW = 0ul;
    }
  }
}

uint8_t getch()
{
  while (!SERIAL.available());
  return SERIAL.read();
}

void fill(int n)
{
  for (int x = 0; x < n; x++) {buff[x] = getch();}
}

#define PTIME 30
void pulse(int pin, int times)
{
  do
  {
    digitalWrite(pin, HIGH);
    delay(PTIME);
    digitalWrite(pin, LOW);
    delay(PTIME);
  } while (times--);
}

void prog_lamp(int state)
{
  if (PROG_FLICKER) {digitalWrite(LED_PMODE, state);}
}

uint8_t spi_transaction(uint8_t a, uint8_t b, uint8_t c, uint8_t d)
{
  SPI.transfer(a);
  SPI.transfer(b);
  SPI.transfer(c);
  return SPI.transfer(d);
}

void empty_reply()
{
  if (CRC_EOP == getch())
  {
    SERIAL.print((char)STK_INSYNC);
    SERIAL.print((char)STK_OK);
  }
  else
  {
    error++;
    SERIAL.print((char)STK_NOSYNC);
  }
}

void breply(uint8_t b)
{
  if (CRC_EOP == getch())
  {
    SERIAL.print((char)STK_INSYNC);
    SERIAL.print((char)b);
    SERIAL.print((char)STK_OK);
  }
  else
  {
    error++;
    SERIAL.print((char)STK_NOSYNC);
  }
}

void get_version(uint8_t c)
{
  switch (c)
  {
    case 0x80:
      breply(HWVER);
      break;
    case 0x81:
      breply(SWMAJ);
      break;
    case 0x82:
      breply(SWMIN);
      break;
    case 0x93:
      breply('S'); // serial programmer
      break;
    default:
      breply(0);
  }
}

void set_parameters()
{
  // call this after reading parameter packet into buff[]
  param.devicecode = buff[0];
  param.revision   = buff[1];
  param.progtype   = buff[2];
  param.parmode    = buff[3];
  param.polling    = buff[4];
  param.selftimed  = buff[5];
  param.lockbytes  = buff[6];
  param.fusebytes  = buff[7];
  param.flashpoll  = buff[8];
  // ignore buff[9] (= buff[8])
  // following are 16 bits (big endian)
  param.eeprompoll = beget16(&buff[10]);
  param.pagesize   = beget16(&buff[12]);
  param.eepromsize = beget16(&buff[14]);

  // 32 bits flashsize (big endian)
  param.flashsize = buff[16] * 0x01000000
                    + buff[17] * 0x00010000
                    + buff[18] * 0x00000100
                    + buff[19];

  // AVR devices have active low reset, AT89Sx are active high
  rst_active_high = (param.devicecode >= 0xe0);
}

void start_pmode()
{
  // Reset target before driving PIN_SCK or PIN_MOSI
  
  // SPI.begin() will configure SS as output, so SPI master mode is selected.
  // We have defined RESET as pin 10, which for many Arduinos is not the SS pin.
  // So we have to configure RESET as output here,
  // (reset_target() first sets the correct level)
  reset_target(true);
  pinMode(RESET, OUTPUT);
  SPI.begin();
  SPI.beginTransaction(SPISettings(SPI_CLOCK, MSBFIRST, SPI_MODE0));
  
  // See AVR datasheets, chapter ""SERIAL_PRG Programming Algorithm"":
  
  // Pulse RESET after PIN_SCK is low:
  digitalWrite(PIN_SCK, LOW);
  delay(20); // discharge PIN_SCK, value arbitrarily chosen
  reset_target(false);
  // Pulse must be minimum 2 target CPU clock cycles so 100 usec is ok for CPU
  // speeds above 20 KHz
  delayMicroseconds(100);
  reset_target(true);
  
  // Send the enable programming command:
  delay(50); // datasheet: must be > 20 msec
  spi_transaction(0xAC, 0x53, 0x00, 0x00);
  pmode = 1;
}

void end_pmode()
{
  SPI.end();
  // We're about to take the target out of reset so configure SPI pins as input
  pinMode(PIN_MOSI, INPUT);
  pinMode(PIN_SCK, INPUT);
  reset_target(false);
  pinMode(RESET, INPUT);
  pmode = 0;
}

void universal()
{
  uint8_t ch;
  
  fill(4);
  ch = spi_transaction(buff[0], buff[1], buff[2], buff[3]);
  breply(ch);
}

void flash(uint8_t hilo, unsigned int addr, uint8_t data)
{
  spi_transaction(0x40 + 8 * hilo,
                  addr >> 8 & 0xFF,
                  addr & 0xFF,
                  data);
}

void commit(unsigned int addr)
{
  if (PROG_FLICKER) {prog_lamp(LOW);}
  spi_transaction(0x4C, (addr >> 8) & 0xFF, addr & 0xFF, 0);
  if (PROG_FLICKER)
  {
    delay(PTIME);
    prog_lamp(HIGH);
  }
}

unsigned int current_page()
{
  if (param.pagesize == 32)
  {
    return here & 0xFFFFFFF0;
  }
  if (param.pagesize == 64)
  {
    return here & 0xFFFFFFE0;
  }
  if (param.pagesize == 128)
  {
    return here & 0xFFFFFFC0;
  }
  if (param.pagesize == 256)
  {
    return here & 0xFFFFFF80;
  }
  return here;
}

void write_flash(int length)
{
  fill(length);
  if (CRC_EOP == getch())
  {
    SERIAL.print((char) STK_INSYNC);
    SERIAL.print((char) write_flash_pages(length));
  }
  else
  {
    error++;
    SERIAL.print((char) STK_NOSYNC);
  }
}

uint8_t write_flash_pages(int length)
{
  int x = 0;
  unsigned int page = current_page();
  while (x < length) {
    if (page != current_page())
    {
      commit(page);
      page = current_page();
    }
    flash(LOW, here, buff[x++]);
    flash(HIGH, here, buff[x++]);
    here++;
  }
  
  commit(page);
  
  return STK_OK;
}

#define EECHUNK (32)
uint8_t write_eeprom(unsigned int length)
{
  // here is a word address, get the byte address
  unsigned int start = here * 2;
  unsigned int remaining = length;
  if (length > param.eepromsize)
  {
    error++;
    return STK_FAILED;
  }
  while (remaining > EECHUNK)
  {
    write_eeprom_chunk(start, EECHUNK);
    start += EECHUNK;
    remaining -= EECHUNK;
  }
  write_eeprom_chunk(start, remaining);
  return STK_OK;
}

// write (length) bytes, (start) is a byte address
uint8_t write_eeprom_chunk(unsigned int start, unsigned int length)
{
  // this writes byte-by-byte, page writing may be faster (4 bytes at a time)
  fill(length);
  prog_lamp(LOW);
  for (unsigned int x = 0; x < length; x++)
  {
    unsigned int addr = start + x;
    spi_transaction(0xC0, (addr >> 8) & 0xFF, addr & 0xFF, buff[x]);
    delay(45);
  }
  prog_lamp(HIGH);
  return STK_OK;
}

void program_page()
{
  char result = (char) STK_FAILED;
  unsigned int length = 256 * getch();
  length += getch();
  char memtype = getch();
  // flash memory @here, (length) bytes
  if (memtype == 'F')
  {
    write_flash(length);
    return;
  }
  if (memtype == 'E')
  {
    result = (char)write_eeprom(length);
    if (CRC_EOP == getch())
    {
      SERIAL.print((char) STK_INSYNC);
      SERIAL.print(result);
    }
    else {
      error++;
      SERIAL.print((char) STK_NOSYNC);
    }
    return;
  }
  SERIAL.print((char)STK_FAILED);
  return;
}

uint8_t flash_read(uint8_t hilo, unsigned int addr)
{
  return spi_transaction(0x20 + hilo * 8,
                         (addr >> 8) & 0xFF,
                         addr & 0xFF,
                         0);
}

char flash_read_page(int length)
{
  for (int x = 0; x < length; x += 2)
  {
    uint8_t low = flash_read(LOW, here);
    SERIAL.print((char) low);
    uint8_t high = flash_read(HIGH, here);
    SERIAL.print((char) high);
    here++;
  }
  return STK_OK;
}

char eeprom_read_page(int length)
{
  // here again we have a word address
  int start = here * 2;
  for (int x = 0; x < length; x++)
  {
    int addr = start + x;
    uint8_t ee = spi_transaction(0xA0, (addr >> 8) & 0xFF, addr & 0xFF, 0xFF);
    SERIAL.print((char) ee);
  }
  return STK_OK;
}

void read_page()
{
  char result = (char)STK_FAILED;
  int length = 256 * getch();
  length += getch();
  char memtype = getch();
  if (CRC_EOP != getch())
  {
    error++;
    SERIAL.print((char) STK_NOSYNC);
    return;
  }
  SERIAL.print((char) STK_INSYNC);
  if (memtype == 'F') result = flash_read_page(length);
  if (memtype == 'E') result = eeprom_read_page(length);
  SERIAL.print(result);
}

void read_signature()
{
  if (CRC_EOP != getch())
  {
    error++;
    SERIAL.print((char) STK_NOSYNC);
    return;
  }
  SERIAL.print((char) STK_INSYNC);
  uint8_t high = spi_transaction(0x30, 0x00, 0x00, 0x00);
  SERIAL.print((char) high);
  uint8_t middle = spi_transaction(0x30, 0x00, 0x01, 0x00);
  SERIAL.print((char) middle);
  uint8_t low = spi_transaction(0x30, 0x00, 0x02, 0x00);
  SERIAL.print((char) low);
  SERIAL.print((char) STK_OK);
}
//////////////////////////////////////////
//////////////////////////////////////////

/////////////////////////////////////////
/////////////////////////////////////////
void avrisp()
{
  uint8_t ch = getch();
  switch (ch)
  {
    case '0': // signon
      error = 0;
      empty_reply();
      break;
    case '1':
      if (getch() == CRC_EOP)
      {
        SERIAL.print((char) STK_INSYNC);
        SERIAL.print(""AVR ISP"");
        SERIAL.print((char) STK_OK);
      }
      else
      {
        error++;
        SERIAL.print((char) STK_NOSYNC);
      }
      break;
    case 'A':
      get_version(getch());
      break;
    case 'B':
      fill(20);
      set_parameters();
      empty_reply();
      break;
    case 'E': // extended parameters - ignore for now
      fill(5);
      empty_reply();
      break;
    case 'P':
      if (!pmode)
        start_pmode();
      empty_reply();
      break;
    case 'U': // set address (word)
      here = getch();
      here += 256 * getch();
      empty_reply();
      break;
    
    case 0x60: //STK_PROG_FLASH
      getch(); // low addr
      getch(); // high addr
      empty_reply();
      break;
    case 0x61: //STK_PROG_DATA
      getch(); // data
      empty_reply();
      break;
    
    case 0x64: //STK_PROG_PAGE
      program_page();
      break;
    
    case 0x74: //STK_READ_PAGE 't'
      read_page();
      break;
    
    case 'V': //0x56
      universal();
      break;
    case 'Q': //0x51
      error = 0;
      end_pmode();
      empty_reply();
      break;
    
    case 0x75: //STK_READ_SIGN 'u'
      read_signature();
      break;
    
    // expecting a command, not CRC_EOP
    // this is how we can get back in sync
    case CRC_EOP:
      error++;
      SERIAL.print((char) STK_NOSYNC);
      break;
    
    // anything else we will return STK_UNKNOWN
    default:
      error++;
      if (CRC_EOP == getch())
        SERIAL.print((char)STK_UNKNOWN);
      else
        SERIAL.print((char)STK_NOSYNC);
  }
}"
eUAQ8hsj,xmrig-proxy restart script,miraip0ts,Bash,Tuesday 30th of May 2023 10:53:16 AM CDT,"#!/bin/bash
#nohup sh xmrig.sh > /dev/null 2>&1 &

port=8080
host=""0.0.0.0""

check_port()
{   
    if ! nc ${host} ${port} < /dev/null
    then
     screen ./xmrig-proxy > /dev/null 2>&1 &  
    fi
}

while true
do
   check_port
   sleep 10
done"
29LvrHZz,23zadacha,HaoAsakura,C#,Tuesday 30th of May 2023 10:45:33 AM CDT,"using System;
using System.Collections.Generic;

namespace Domashka
{
    internal class Program
    {
        static void Main(string[] args)
        {
            var alp = new Dictionary<char, int>()
            {
                {'I',1 },{'L', 50},
                {'V',5 },{'C', 100},
                {'X',10 },{'D', 500},{'M',1000}
            };
            string inp = Console.ReadLine();

            int res = 0;

            for(int i = 0; i < inp.Length - 1; ++i)
            {
                if (i % 2 != 0 && i == inp.Length - 2) res += alp[inp[i+1]];
                
                if (!alp.ContainsKey(inp[i]))
                {
                    Console.WriteLine(""Запись не является римским числом."");
                    break;
                }

                int curr = alp[inp[i]],next = alp[inp[i + 1]];
                if (curr >= next)
                    res += curr;
                else if (curr < next)
                    res -= curr;
            }
            Console.WriteLine(res);
        }
    }
}
"
hRGrZea5,Workout Simulator 2,LuaXe,Lua,Tuesday 30th of May 2023 10:45:17 AM CDT,"function C() spawn(function () while getgenv().C do if game.Players.LocalPlayer.Backpack:FindFirstChild(I) then game.Players.LocalPlayer.Backpack:FindFirstChild(I).Parent = game.Players.LocalPlayer.Character end if game.Players.LocalPlayer.Character[I] then game.Players.LocalPlayer.Character[I]:Activate() end wait() end end) end
function R() spawn(function () while getgenv().R do game:GetService(""ReplicatedStorage"").rEvents.rebirthEvent:FireServer() wait() end end) end

local library = loadstring(game:HttpGet(('https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/wall%20v3')))()

local w = library:CreateWindow(""Workout Simulator 2"")

local b = w:CreateFolder(""Main"")

b:Button(""TP To The Game"",function() game:GetService(""TeleportService""):Teleport(5872761895) end)

b:Toggle(""Inf. Strength"",function(val) getgenv().C = val C() end)
b:Toggle(""Inf. Rebirths"",function(val) getgenv().R = val R() end)

b:Dropdown(""Choose"",{""Weight"",""Pushups"",""Situps""},true,function(val)
I = val
end)

b:Label(""Made by X_LuaF#0705"",{TextSize = 21; TextColor = Color3.fromRGB(255,255,255); BgColor = Color3.fromRGB(38, 38, 38);})

local w = library:CreateWindow(""LocalPlayer"")

local b = w:CreateFolder(""LP"")

b:DestroyGui()

b:Button(""Discord"",function() setclipboard(""workink.co/2GQ/LTD"") end)
b:Button(""Full Version"",function() loadstring(game:HttpGet(""https://pastebin.com/raw/GphZf9Xe"", true))() end)
b:Button(""Rejoin"",function() loadstring(game:HttpGet(""https://pastebin.com/raw/mM7JBG5h"", true))() end)
b:Button(""Reset"",function() loadstring(game:HttpGet(""https://pastebin.com/raw/EEY6SATj"", true))() end)

b:Box(""Speed"",""number"",function(val) S = val end)
b:Box(""Jump"",""number"",function(val) J = val end)
b:Box(""Hip Height"",""number"",function(val) H = val end)
b:Box(""Gravity"",""number"",function(val) G = val end)
 
b:Toggle(""Speed"",function(bool) getgenv().Speed = bool Speed(S) end)
b:Toggle(""Jump"",function(bool) getgenv().Jump = bool Jump(J) end)
b:Toggle(""Hip Height"",function(bool) getgenv().Hip = bool Hip(H) end)
b:Toggle(""Gravity"",function(bool) getgenv().Grav = bool Grav(G) end)
 
b:Slider(""FOV (Default is 70)"",{min = 0;max = 120;precise = true;},function(val) game.workspace.CurrentCamera.FieldOfView = val end)

function TPCFrame(Player_CFrame) if game.Players.LocalPlayer.Character:FindFirstChild(""HumanoidRootPart"") then game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Player_CFrame end end
function TPVector3(Player_Position) game.Players.LocalPlayer.Character.HumanoidRootPart.Position = Player_Position.Position end
function PHP(Player_HP) game.Players.LocalPlayer.Character.Humanoid.Health = Player_HP end

function Chat(Mes, Freq) spawn(function () while getgenv().Chat do local args = {[1] = Mes,[2] = ""All""} game:GetService(""ReplicatedStorage"").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(unpack(args)) wait(Freq) end end) end
function Speed(Nume) spawn(function () while getgenv().Speed do game:GetService(""Players"").LocalPlayer.Character.Humanoid.WalkSpeed = Nume if not getgenv().Speed then game:GetService(""Players"").LocalPlayer.Character.Humanoid.WalkSpeed = 16 end wait() end end) end
function Jump(Nume) spawn(function () while getgenv().Jump do game:GetService(""Players"").LocalPlayer.Character.Humanoid.JumpPower = Nume if not getgenv().Jump then game:GetService(""Players"").LocalPlayer.Character.Humanoid.JumpPower = 50 end wait() end end) end
function Hip(Nume) spawn(function () while getgenv().Hip do game:GetService(""Players"").LocalPlayer.Character.Humanoid.HipHeight = Nume if not getgenv().Hip then game:GetService(""Players"").LocalPlayer.Character.Humanoid.HipHeight = 0.1 end wait() end end) end
function Grav(Nume) spawn(function () while getgenv().Grav do game:GetService(""Workspace"").Gravity = Nume if not getgenv().Grav then game:GetService(""Workspace"").Gravity = 196.2 end wait() end end) end"
aKr7umvH,x,DQVIST,JavaScript,Tuesday 30th of May 2023 10:43:26 AM CDT,"document.body.innerHTML = '<div style=""color:white""><h1> Detta är XSS </h1></div>';
document.body.style.background = ""red"";"
U61aTJzW,Crop_Bot_1s,Swat99,Lua,Tuesday 30th of May 2023 10:37:33 AM CDT,"--Скрипт для робота, для поднятия статов у кропсов или разведения дубликатов (режим задается константой mode)
--Автор: aka_zaratustra осень 2020
local ver = ""1.1.3"" -- версия программы
--Историю версий см. в конце файла

-- схема грядки
--|C1|M1|C2
--|M2|C3|M3
--|C4|M4|C5
--|CH|P0|BR

-- P0 - исходное положение робота. Робот находится на 1 блок выше кропсов (чтобы мог летать над ними), смотрит на север (в сторону грядок). В руках у робота должна быть лопатка Spade. В первом слоте инвентори робота или должны быть палки или он должен быть пустой (робот сам возьмет и положет туда палки)
-- С[n] - дочерние (разводимые) растения
-- M[n] - материнские растения
-- СН - chest, сундук, куда будут помещаться мешочки с семечками и урожай
-- BR - барель с кропсами(палками)

-- В начале работы материнские кропсы должны быть высажены на грядку. Дочерние (разводимые) могут быть высажены, а может быть голая земля.
-- У робота должны в обязательном порядке присутстовать компоненты: Geolyzer, Inventory Upgrade, Inventory Controller Upgrade
-- Рекомендуется для удобства поместить файл с этим скриптом в папку /home/ , а имя файла скрипта добавить в файл /home/.shrc - тогда скрипт будет запускаться при включении робота автоматически
-- Если в бочке кончаются кропсы(палки), робот сломает пустые палки, если они есть на поле и завершит свою работу с ошибкой (чтобы всё поле не сожрали сорняки)
-- Максимальные статы кропсов, выше которых робот поднимать статы выводимых кропсов не будет, задаются константами max_grow и max_gain
-- Стат resistans робот не поднимает, а при возможости опускает до 0
-- Начиная с версии 1.1.3 робот перестал быть уязвим к коллизиям. Нахождение игрока на пути следования робота больше не приводит к потере роботом маршрута. Робот после столкновения с игроком замирает на секунду, после чего продолжает попытку движения.
-- Механизм оценки приемлемости (качества) полученного растения менять в функции howInterestingIsThisCrop(с)
-- При наличии интернет карты в роботе, скрипт в робота можно загрузить командой `pastebin get cZY3P7As -f crop_stats.lua`

-- mode:
-- 1 - режим поднятия статов кропсов
-- 2 - режим разведения дубликатов кропсов (НЕ ТЕСТИРОВАЛСЯ! НЕ ИСПОЛЬЗОВАТЬ!)
local mode = 2
-- выше заданных здесь значений робот понимать статы не будет
local max_grow = 20 -- если больше 23, то кроп начинает вести себя как сорняк
local max_gain = 28
local grow_kill = 24 -- значение стата grow, при котором и выше которого робот будет убивать растение на корню

local robot = require(""robot"") 
local computer = require(""computer"") 
local component = require(""component"") 
local geo = component.geolyzer
local cropname

local c_cropname = {} --имена дочерних кропов
--статы дочерних кропов
local c_gain = {}
local c_grow = {}
local c_resistans = {} 
local c_size = {} 
local c_maxSize = {} 

-- статус может принимать значения:
-- ""unknown"" - неисследованный. назначается при старте, дальше не используется
-- ""double crop"" - жердочки
-- ""growing"" - растущий кроп, у которого статы или дошли до целевых или лучше материнских. после вырастания или отправится в сундук или может заменить собой материнский кроп
local c_status = {""unknown"", ""unknown"", ""unknown"", ""unknown"", ""unknown""} -- ""unknown"" для всех пяти дочерних кропов


local m_gain = {}
local m_grow = {}
local m_resistans = {}

local error_string
local bestSeedsSlot --слот в инвентори робота с семенами с лучшими статами
local robotLocation -- текущее местонаходение робота. значение из списка: {""С1"", ""С2"", ... , ""С5"", ""M1"", ""M2"", ""M3"", ""M4"", ""P0""}


function robot_error(msg)
	print(""Ошибка: "", msg)
	computer.beep(1000,0.3)
	computer.beep(1000,0.3)
	computer.beep(1000,0.3)
	os.exit()
end

function robotTryForward() -- роботы пытается сделать шаг вперед, до тех пор, пока ему это не удастся
	while robot.forward() == nil do
		print(""Робот столкнулся с препятствием."")
		os.sleep(1) -- останавливаем робота на 1 секунду
	end
end
--------------------------------------
function get_crop_stat(analyze_result, stat_name) --функция - просматривает таблицу скана блока и возвращает значение поля, имя которого передано в stat_name. если не находит, то возвращает nil

	--file = io.open(""log.txt"", ""a"") --файл для лога	

	found = false
	for name, v in pairs(analyze_result) do --просмотрим таблицу реультата анализа кропса
		
		pos = string.find(name, stat_name) 
		--print(pos)
		if pos ~=  nil then -- если строку в метадате нашли
			found = true
			--print(v)
			return v
		end
	end

end

function robotMove_P0_M1()
	--исходное положение P0 смотрит вверх
	robotTryForward()
	robotTryForward()
	robotTryForward()
	--конечное положение M1 смотрит вверх
end
function robotMove_M1_M2()
	--начальное положение M1 смотрит вверх
	robot.turnLeft()
	robotTryForward()
	robot.turnLeft()
	robotTryForward()
	--конечное положение M2 смотрит вниз
end
function robotMove_M2_M3()
    --начальное положение M2 смотрит вниз
    robot.turnLeft()
    robotTryForward()
    robotTryForward()
    --конечное положение M3 смотрит вправо
end
function robotMove_M3_M4()
    --начальное положение M3 смотрит вправо
    robot.turnRight()
    robotTryForward()
    robot.turnRight()
    robotTryForward()
    --конечное положение M4 смотрит влево
end
function robotMove_M4_P0()
    --начальное положение M4 смотрит влево
    robot.turnLeft()
    robotTryForward()
    robot.turnAround()
    --конечное положение P0 смотрит вверх
end
function robotMove_P0_C1()
    --начальное положение P0 смотрит вверх
    robotTryForward()
    robotTryForward()
    robotTryForward()
    robot.turnLeft()
    robotTryForward()
    --конечное положение C1 смотрит влево
end
function robotMove_C1_C4()
    --начальное положение C1 смотрит влево
    robot.turnLeft()
    robotTryForward()
    robotTryForward()
    --конечное положение C4 смотрит вниз
end
function robotMove_C4_C5()
    --начальное положение C4 смотрит вниз
    robot.turnLeft()
    robotTryForward()
    robotTryForward()
    --конечное положение C5 смотрит вправо
end
function robotMove_C5_C2()
    --начальное положение C5 смотрит вправо
    robot.turnLeft()
    robotTryForward()
    robotTryForward()
    --конечное положение C2 смотрит вверх
end
function robotMove_C2_C3()
    --начальное положение C2 смотрит вверх
    robot.turnLeft()
    robotTryForward()
    robot.turnLeft()
    robotTryForward()
    --конечное положение C3 смотрит вниз
end
function robotMove_C3_P0()
    --начальное положение C3 смотрит вниз
    robotTryForward()
    robotTryForward()
	robot.turnAround()
    --конечное положение P0 смотрит вверх
end
function robotGoToParkFrom_M_Crop(m) --едем на парковку. ""m"" - номер материнского кропа с которого мы едем
	if m == 1 then
		--начальное положение M1 смотрит вверх
		robot.turnAround()
		robotTryForward()
		robotTryForward()
		robotTryForward()
		robot.turnAround()
		--конечное положение P0 смотрит вверх
	end
	if m == 2 then
		--начальное положение M2 смотрит влево
		robot.turnAround()
		robotTryForward()
		robot.turnRight()
		robotTryForward()
		robotTryForward()
		robot.turnAround()
		--конечное положение P0 смотрит вверх
	end
	if m == 3 then
		--начальное положение M3 смотрит вправо
		robot.turnAround()
		robotTryForward()
		robot.turnLeft()
		robotTryForward()
		robotTryForward()
		robot.turnAround()
		--конечное положение P0 смотрит вверх
	end
	if m == 4 then
		--начальное положение M4 смотрит влево
		robot.turnLeft()
		robotTryForward()
		robot.turnAround()
		--конечное положение P0 смотрит вверх	
	end
end
function robotGoToPark(c) --едем на парковку. ""с"" - номер дочернего кропа с которого мы едем
	if c == 1 then
		--начальное положение C1 смотрит влево
		robot.turnAround()
		robotTryForward()
		robot.turnRight()
		robotTryForward()
		robotTryForward()
		robotTryForward()
		robot.turnAround()
		--конечное положение P0 смотрим вверх
	end
	if c == 2 then
		--начальное положение C2 смотрит вверх
		robot.turnLeft()
		robotTryForward()
		robot.turnLeft()
		robotTryForward()
		robotTryForward()
		robotTryForward()
		robot.turnAround()
		--конечное положение P0 смотрим вверх
	end
	if c == 3 then
		--начальное положение C3 смотрит вниз
		robotTryForward()
		robotTryForward()
		robot.turnAround()
		--конечное положение P0 смотрим вверх
	end
	if c == 4 then
		--начальное положение C4 смотрит вниз
		robot.turnLeft()
		robotTryForward()
		robot.turnRight()
		robotTryForward()
		robot.turnAround()
		--конечное положение P0 смотрим вверх
	end
	if c == 5 then
		--начальное положение C5 смотрит вправо
		robot.turnAround()
		robotTryForward()
		robot.turnLeft()
		robotTryForward()
		robot.turnAround()
		--конечное положение P0 смотрим вверх
	end

end
function robotGoTo_M_Crop_FromPark(m) --едем с парковки P0 к материнскому кропу. ""m"" - номер кропа к которому мы едем
	if m==1 then
		--исходное положение P0 смотрит вверх
		robotTryForward()
		robotTryForward()
		robotTryForward()
		--конечное положение M1 смотрит вверх
	end
	if m==2 then
		--начальное положение P0 смотрит вверх
		robotTryForward()
		robotTryForward()
		robot.turnLeft()
		robotTryForward()
		--конечное положение M2 смотрит влево
	end
	if m==3 then
		--начальное положение P0 смотрит вверх
		robotTryForward()
		robotTryForward()
		robot.turnRight()
		robotTryForward()
		--конечное положение M3 смотрит вправо
	end
	if m==4 then
		--начальное положение P0 смотрит вверх
		robotTryForward()
		robot.turnLeft()		
		--конечное положение M4 смотрит влево
	end
end
function robotGoTo_C_Crop_FromPark(c) --едем с парковки P0 к дочернему кропу. ""с"" - номер кропа к которому мы едем
	if c == 1 then
		--начальное положение P0 смотрим вверх
		robotTryForward()
		robotTryForward()
		robotTryForward()
		robot.turnLeft()
		robotTryForward()
		--конечное положение C1 смотрит влево
	end
	if c == 2 then
		--начальное положение P0 смотрим вверх
		robotTryForward()
		robotTryForward()
		robotTryForward()
		robot.turnRight()
		robotTryForward()
		robot.turnLeft()
		--конечное положение C2 смотрит вверх
	end
	if c == 3 then
		--начальное положение P0 смотрим вверх
		robotTryForward()
		robotTryForward()
		robot.turnAround()
		--конечное положение C3 смотрит вниз
	end
	if c == 4 then
		--начальное положение P0 смотрим вверх
		robotTryForward()
		robot.turnLeft()
		robotTryForward()
		robot.turnLeft()
		--конечное положение C4 смотрит вниз
	end
	if c == 5 then
		--начальное положение P0 смотрим вверх
		robotTryForward()
		robot.turnRight()
		robotTryForward()
		--конечное положение C5 смотрит вправо
	end

end
function grabCropsFromBarrel() --пополняем запас палок в роботе из бочки. 
	--возвращает true если после попытки взять палки, есть хотя бы одна палка в роботе
	--возвращает false если палки в роботе и в бочке кончились
	cropsStackSize = 62 --размер стака палок, который робот возит с собой. 62 потому что при уничтожения кропса робот выдерает из земли и палки, и они могут попасть в нецелевой слот
	
	--палки лежат в первом слоте
	returnValue = true
	itemCount = robot.count(1)
	if itemCount < cropsStackSize then --если палок неполный стак, до доберем из бочки
		robot.select(1) --активизируем слот, в котором лежат палки
		robot.turnRight() --повернемся к бочке
		--добираем палок до полного стака
		robot.suck(cropsStackSize-itemCount)
		itemCount = robot.count(1) --смотрим сколько палок в роботе
		if itemCount == 0 then --если палки в роботе кончились
			returnValue = false --возвращаем признак, что ПАЛКИ В РОБОТЕ И БОЧКЕ КОНЧИЛИСЬ
		elseif itemCount < cropsStackSize then --если после попытки взять палки из бочки, мы имеем меньше стака палок в роботе
			print(""В бочке закончились палки!"")
			computer.beep(1000,1)
			returnValue = true
		else
			returnValue = true
		end
		robot.turnLeft() --повернемся обратно к кропсам
	end
	return returnValue
end
function dropToChest() --все что есть в инвентори, скидываем в сундук
	--начальная позиция - P0 смотрим вверх
	robot.turnLeft()
	for i=2,16 do 
		item = component.inventory_controller.getStackInInternalSlot(i)
		if item then --если в слоте что-то есть
			robot.select(i)
			robot.drop() --сдаем все из текущего слота в сундук
		end
	end
	robot.turnRight() --поворачиваемся к с0
	robot.select(1)
end
function destroyAllDoubleCrops() --уничтожим все двойные кропсы
	--пройдемся по массиву статусов кропсов и у всех кропсов, у которых статус = ""жердочки"", съездим к ним и сломаем их
	for c=1,5 do
		if c_status[c] == ""double crop"" then
			robotGoTo_C_Crop_FromPark(c)
			robot.swingDown() --ломаем кропсы
			robotGoToPark(c)
		end
	end
	
end
function howInterestingIsThisCrop(c) --оценивает полезность нового растения сравнивая статы дочернего ростения [с] со статами материнский растений . тип растения во внимание не принимается
--возвращает: 0 - негодное
--            -1 - годно для сохранения
--            m - превосходит материнское, где 1<m<4 - номер материнского кропа, который нужно заменить новым растением 

	if c_grow[c] >= grow_kill then --если grow у дочернего растения достигло опасного значения, то это растение считаем негодным
		return 0
	end
	
	--если статы нового растения больше максимально разрешенных
	if (c_gain[c] > max_gain) or (c_grow[c] > max_grow) then
		--то считаем это растение приемлемым
		print(""Полученое растение, превышает максимальные статы."")
		return -1
	end

	--сравним статы нового растения со статами материнских растений
	maxDifference = 0 --самая лучшая разница в качестве
	m_crop_maxDifference = 0 --материнский кроп с самой лучшей разницей в качестве
	for m = 1, 4 do
		--сравниваем статы полученного растения со статами материнских растений
		difference = (c_gain[c] + c_grow[c] - c_resistans[c]) - (m_gain[m] + m_grow[m] - m_resistans[m])
		if (difference > 0) and (difference > maxDifference) then --если растение лучше и это лучшая разница в качестве
			maxDifference = difference --обновим лучшую разницу в качестве
			m_crop_maxDifference = m --материнский кроп с самой лучшей разницей в качестве
		end
	end
	if maxDifference>0 then
		--полученное растение лучше чем одно из материнских, а значит нужно пересадить (на самый слабый материнский кроп)
		return m_crop_maxDifference --возвращаем материнский кроп с самой лучшей разницей в качестве
	end
	
	--если мы здесь, значит новое растение не привысило максимальные статы и не лучше чем материнские растения
	--а занчит 	РАСТЕНИЕ ПЛОХОЕ
	return 0

end
function placeDoubleCrops() --ставит новые палки
	component.inventory_controller.equip() --экипируем кропсы(палки)
	robot.useDown() --ставим палку на землю
	robot.useDown() --ставим палку (получаются жердочки для скрещивания)
	component.inventory_controller.equip() --возвращаем в руки лопатку
end
function findSeedsInRobotInventory() --возвращает номер слота в инвентори робота с семечками, если нет семечек, то возвращает 0, а если вообще ничего нет, то возвращает -1
	foundAnything = false
	for i=2,16 do 
		item = component.inventory_controller.getStackInInternalSlot(i)
		if item then --если в слоте что-то есть
			foundAnything = true
			if item.name == ""IC2:itemCropSeed"" then --если в слоте семена
				return i --возвращаем номер слота, в котором семена
			end
		end
	end
	if foundAnything then --если что-то нашли (обычно это урожай), но семян не было
		return 0
	end
	return -1 --вообще ничего нет
end
function analizeAndProceed(c) --функция анализа и обработки кропа. с - номер кропа.

	
	analyze_result = geo.analyze(0) --анализируем блок под роботом	
	c_cropname[c] = get_crop_stat(analyze_result, ""crop:name"")
	if c_cropname[c] ~= nil then -- если перед нами что-то вывелось, а не пустые палки
		
		
		--получаем остальные статы кропа
		c_gain[c] = get_crop_stat(analyze_result, ""crop:gain"")
		c_grow[c] = get_crop_stat(analyze_result, ""crop:grow"")
		c_resistans[c] = get_crop_stat(analyze_result, ""crop:resistance"")
		c_size[c] = get_crop_stat(analyze_result, ""crop:size"")
		c_maxSize[c] = get_crop_stat(analyze_result, ""crop:maxSize"")

		if c_status[c] == ""double crop"" or c_status[c] == ""unknown"" then  --если статус растения был двойные палки, значит появилось новое растение
			print(""Новый кроп С""..c.."": ""..c_cropname[c]..""  ""..c_grow[c]..""  ""..c_gain[c]..""  ""..c_resistans[c]) -- ""Новый кроп С1:    reed""
			--print(c_grow[c], c_gain[c], c_resistans[c], ""size: ""..c_size[c]..""/""..c_maxSize[c]) --""23   31   0   size: 2/3""
		end
		
		--если прокнуло растение другого вида, выкапываем его лопаткой и отвозим в сундук
		if c_cropname[c] ~= cropname then
			robot.useDown()--по умолчанию у нас в руках лопатка, юзаем ее
			component.inventory_controller.equip() --экипируем кропсы(палки)
			robot.useDown() --ставим палку (получаются жердочки для скрещивания)
			component.inventory_controller.equip() --возвращаем в руки лопатку
			c_status[c] = ""double crop"" --устанавливаем статус растения - жердочки
			
			--после копки проверим инвентори робота
			foundAnything = false
			for i=2,16 do 
				item = component.inventory_controller.getStackInInternalSlot(i)
				if item then --если в слоте что-то есть
					foundAnything = true
				end
			end
			
			if foundAnything or robot.count(1) == 0 then --если что-то выкопалось от этого непрофильного растения или закончились палки
				robotGoToPark(c) --едем на парковку	
				if foundAnything then --если есть в инветори что-то выкопанное, сдаем в сундук
					dropToChest()
				end
				--пополняем запас палок в роботе
				if grabCropsFromBarrel() then 
				else --если палки кончились
					destroyAllDoubleCrops() --уничтожим все двойные кропсы
					robot_error(""ПАЛКИ КОНЧИЛИСЬ!"") --заканчиваем работу с ошибкой
				end
				robotGoTo_C_Crop_FromPark(c)
			end
		else--если растение нужного типа
			if c_status[c] == ""double crop"" or c_status[c] == ""unknown"" then  --если статус растения был двойные палки, значит появилось новое растение
				--оценим полезность нового растения
				interest = howInterestingIsThisCrop(c)
				
				--выведем инфу о новом кропе
				interestString = """"
				if interest == 0 then
					interestString = ""негодное""
				elseif interest == -1 then
					interestString = ""годное, статы дошли до целевых""
				else
					interestString = ""превосходит материнское М""..interest
				end
				print(""Полезность:""..interestString)
				
				if interest == 0 then -- растение с плохими статами
					--уничтожаем растение
					robot.swingDown() --ломаем кропсы
					placeDoubleCrops() --ставим новые палки
					c_status[c] = ""double crop"" --устанавливаем статус растения - жердочки
					--посмотрим, попали ли семечки в инвентори
					seedSlot = findSeedsInRobotInventory() --находим слот с семечками
					if seedSlot > 0 then --если семечки есть
						--отвезем эти семечки домой
						robotGoToPark(c) --едем на парковку
						dropToChest() --сбрасываем всё в сундук
						grabCropsFromBarrel() --добираем палок из бочки
						robotGoTo_C_Crop_FromPark(c) --возвращаемся на кроп
					end
				else --растение со статами превышающими материнские или статы дошли до целевых
					c_status[c] = ""growing"" --устанавливаем статус растущего кропа
					--оставляем его в покое, пусть растет
				end
			
			else -- c_status[c] == ""growing"" --растение уже ранее сканировалось
				
				if c_size[c] == c_maxSize[c] then --если растение доросло
					robot.swingDown() --ломаем кропсы, собираем урожай
					placeDoubleCrops() --ставим новые палки
					c_status[c] = ""double crop"" --устанавливаем статус растения - жердочки
					
					--посмотрим, попали ли семечки в инвентори
					seedSlot = findSeedsInRobotInventory() --находим слот с семечками
					if seedSlot > 0 then --если семечки есть
						--делаем повторную оценку полезности
						interest = howInterestingIsThisCrop(c)
						if interest == -1 then --годное, статы дошли до целевых
							--везем в сундук
							robotGoToPark(c) --едем на парковку
							dropToChest() --сбрасываем всё в сундук
							grabCropsFromBarrel() --добираем палок из бочки
							robotGoTo_C_Crop_FromPark(c) --возвращаемся на кроп
							
						elseif interest > 0 then --превосходит материнское
							--меняем материнское ростение на текущее дочернее
							print(""Заменяем кроп М""..interest.."":  ""..m_grow[interest]..""  ""..m_gain[interest]..""  ""..m_resistans[interest].."" -> ""..c_grow[c]..""  ""..c_gain[c]..""  ""..c_resistans[c])
							--обновляем статы материнского растения
							m_grow[interest] = c_grow[c]
							m_gain[interest] = c_gain[c]
							m_resistans[interest] = c_resistans[c]
							--едем менять материнское растение
							robotGoToPark(c) --едем через паркинг. прямых маршрутов от С до M робот не знает
							robotGoTo_M_Crop_FromPark(interest) --едем на материнский кропс, который будем менять
							robot.swingDown() --ломаем кропсы, собираем урожай
							component.inventory_controller.equip() --экипируем кропсы(палки)
							robot.useDown() --ставим палку на землю
							component.inventory_controller.equip() --возвращаем в руки лопатку
							robot.select(seedSlot) --делаем активным слот с семенами, которые мы собираемся сажать
							component.inventory_controller.equip() -- берем семена в руки
							robot.useDown() --сажаем
							component.inventory_controller.equip() -- берем обратно лопатку в руки
							robot.select(1)
							robotGoToParkFrom_M_Crop(interest) --едем на паркинг
							dropToChest() --сбрасываем всё в сундук
							grabCropsFromBarrel() --добираем палок из бочки
							robotGoTo_C_Crop_FromPark(c) --возвращаемся на кроп
						end
					end
					
					
				end
			end
		
		
		end	
		
		
			
		
		

	
	else -- если перед нами или пустые палки или воздух
		if c_status[c] == ""unknown"" then -- если мы сканируем этот кроп впервые
			if get_crop_stat(analyze_result, ""name"") == ""IC2:blockCrop"" then --если перед нами двойные палки
				c_status[c] = ""double crop""
			else --перед нами не растение и не двойные палки. значит перед нами воздух
				--ставим палки
				component.inventory_controller.equip() --экипируем кропсы(палки)
				robot.useDown() --ставим палку на землю
				robot.useDown() --ставим палку (получаются жердочки для скрещивания)
				component.inventory_controller.equip() --возвращаем в руки лопатку
				c_status[c] = ""double crop"" --устанавливаем статус растения - жердочки
			end
			
		end
		
	end	

end



----------------------------------------------------
--Шаг 1
--Начинаем работать 
print(""--------------------------------------""); --выводим приветствие
print(""Скрипт для робота, для поднятия статов у кропсов или разведения дубликатов запущен."");
print(""Версия: ""..ver)
if mode == 1 then -- 1 - режим поднятия статов кропсов
	print(""Выбран режим поднятия статов кропсов."");
else -- 2 - режим разведения дубликатов кропсов
	print(""Выбран режим разведения дубликатов кропсов."");
end
print(""Шаг 1. Проверка входящих условий.""); 

-- проверяем правильность входящий условий

--В руках должна быть лопатка
robot.select(1) --выбираем первый слот инвентори, на случай если при начале работы был выбран другой слот
component.inventory_controller.equip() --убираем лопатку к себе в инвентори и смотрим, лопатка ли это?
item = component.inventory_controller.getStackInInternalSlot(1)
if item == nil then --если в слоте ничего нет
	robot_error(""Нет лопатки в слоте для инструмента!"")
end
if item.name ~= ""berriespp:itemSpade"" then --если в слоте что-то есть, но это не лопатка
	robot_error(""Нет лопатки в слоте для инструмента!"")
end
component.inventory_controller.equip() --лопатку возвращаем в слот для инструмента

--print(""Входящие условия соблюдены."")

----------------------------------------------------
--Шаг 2
if mode == 1 then -- 1 - режим поднятия статов кропсов
	print(""Шаг 2. Сканируем материнские кропсы и запоминаем их статы."")

	--Сканируем материнские кропсы и запоминаем их статы
	--Исходная позиция - робот стоит на P0

	-- кроп M1
	robotMove_P0_M1()
	analyze_result = geo.analyze(0)
	cropname = get_crop_stat(analyze_result, ""crop:name"")
	m_gain[1] = get_crop_stat(analyze_result, ""crop:gain"")
	m_grow[1] = get_crop_stat(analyze_result, ""crop:grow"")
	m_resistans[1] = get_crop_stat(analyze_result, ""crop:resistance"")
	print(""M1:"", cropname, m_grow[1], m_gain[1], m_resistans[1])

	-- кроп M2
	robotMove_M1_M2()
	analyze_result = geo.analyze(0)
	cropname = get_crop_stat(analyze_result, ""crop:name"")
	m_gain[2] = get_crop_stat(analyze_result, ""crop:gain"")
	m_grow[2] = get_crop_stat(analyze_result, ""crop:grow"")
	m_resistans[2] = get_crop_stat(analyze_result, ""crop:resistance"")
	print(""M2:"", cropname, m_grow[2], m_gain[2], m_resistans[2])
	
	-- кроп M3
	robotMove_M2_M3()
	analyze_result = geo.analyze(0)
	cropname = get_crop_stat(analyze_result, ""crop:name"")
	m_gain[3] = get_crop_stat(analyze_result, ""crop:gain"")
	m_grow[3] = get_crop_stat(analyze_result, ""crop:grow"")
	m_resistans[3] = get_crop_stat(analyze_result, ""crop:resistance"")
	print(""M3:"", cropname, m_grow[3], m_gain[3], m_resistans[3])

	-- кроп M4
	robotMove_M3_M4()
	analyze_result = geo.analyze(0)
	cropname = get_crop_stat(analyze_result, ""crop:name"")
	m_gain[4] = get_crop_stat(analyze_result, ""crop:gain"")
	m_grow[4] = get_crop_stat(analyze_result, ""crop:grow"")
	m_resistans[4] = get_crop_stat(analyze_result, ""crop:resistance"")
	print(""M4:"", cropname, m_grow[4], m_gain[4], m_resistans[4])

	
	robotMove_M4_P0() --возвращаем робота в исходное положение

end
----------------------------------------------------
--Шаг 3
if mode == 1 then -- 1 - режим поднятия статов кропсов
	print(""Шаг 3. Приступаем к поднятию статов."");
else -- 2 - режим разведения дубликатов кропсов
	print(""Шаг 2. Приступаем к разведению дубликатов кропсов."");
end

while true do --главный цикл
	
	--пополняем запас палок в роботе
	if grabCropsFromBarrel() then 
	else --если палки кончились
		destroyAllDoubleCrops() --уничтожим все двойные кропсы
		robot_error(""ПАЛКИ КОНЧИЛИСЬ!"")
	end
	
	--едем сканить дочерние кропсы
	robotMove_P0_C1()
	analizeAndProceed(1)
	robotMove_C1_C4()
	analizeAndProceed(4)
	robotMove_C4_C5()
	analizeAndProceed(5)
	robotMove_C5_C2()
	analizeAndProceed(2)
	robotMove_C2_C3()
	analizeAndProceed(3)
	robotMove_C3_P0() --конечное положение P0 смотрим вверх
	
	--os.exit()
	

	os.sleep(1)
end

os.exit()

--История версий:

--Версия 1.1.3
--Устранена уязвимость к коллизиям. Нахождение игрока на пути следования робота больше не приводит к потере роботом маршрута. Робот после столкновения с игроком замирает на секунду, после чего продолжает попытку движения
--Добавлена история версий в файл скрипта робота"
URHYADsd,充电系统的Models and APIs,micuks,Python,Tuesday 30th of May 2023 10:27:52 AM CDT,"// Models
from enum import Enum

class EventType(Enum):
    APPLY = ""A""
    BREAKDOWN = ""B""
    CHANGE = ""C""

class ChargingType(Enum):
    FAST = ""F""
    SLOW = ""T""
    UNCHANGED = ""O""

class Event:
    def __init__(self, event_type, id, charging_type, value):
        self.event_type = event_type
        self.id = id
        self.charging_type = charging_type
        self.value = value

// Frontend API interface:
import requests

def submit_event(event_type, id, charging_type, value):
    response = requests.post('http://backend_url/submit_event', json={'event_type': event_type, 'id': id, 'charging_type': charging_type, 'value': value})
    return response.json()

def get_status(id):
    response = requests.get(f'http://backend_url/get_status?id={id}')
    return response.json()

// Backend API Endpoints:
from flask import Flask, request, jsonify

app = Flask(__name__)
event_handler = EventHandler()

@app.route('/submit_event', methods=['POST'])
def submit_event():
    event_data = request.get_json()
    event = Event(event_data['event_type'], event_data['id'], event_data['charging_type'], event_data['value'])
    event_handler.handle_event(event)
    return jsonify({'status': 'Event processed successfully'}), 200

@app.route('/get_status', methods=['GET'])
def get_status():
    id = request.args.get('id')
    if 'V' in id:
        status = event_handler.get(id, ""Vehicle"")
    else:
        status = event_handler.get(id, ""Pile"")
    return jsonify({'status': status}), 200

if __name__ == '__main__':
    app.run()
"
FZGuK3Dq,Task 11,gimmewhitewings,Python,Tuesday 30th of May 2023 10:23:55 AM CDT,"from struct import unpack_from, calcsize


class Types:
    uint16 = 'H'
    int16 = 'h'
    char = 'c'  # или 'c'
    float = 'f'
    int8 = 'b'
    int64 = 'q'
    uint64 = 'Q'
    uint32 = 'I'
    int32 = 'i'
    double = 'd'


class BinaryReader:
    def __init__(self, data, offset, order='<'):
        self.data = data
        self.offset = offset
        self.order = order

    def jump_to(self, offset):
        reader = BinaryReader(self.data, offset, self.order)
        return reader

    def read(self, frmt):
        data = unpack_from(self.order + frmt, self.data, self.offset)
        self.offset += calcsize(frmt)
        return data[0]


def read_d(reader):
    d1 = reader.read(Types.uint16)
    d2_size = reader.read(Types.uint32)
    d2_offset = reader.read(Types.uint32)
    d2_reader = reader.jump_to(d2_offset)
    d2 = [d2_reader.read(Types.int16) for _ in range(d2_size)]
    d3 = reader.read(Types.float)
    d4 = reader.read(Types.int32)
    return dict(D1=d1, D2=d2, D3=d3, D4=d4)


def read_c(reader):
    c1 = [reader.read(Types.uint16) for _ in range(3)]
    c2 = reader.read(Types.int8)
    return dict(C1=c1, C2=c2)


def read_b(reader):
    b1_size = reader.read(Types.uint32)
    b1_offset = reader.read(Types.uint32)
    b1_reader = reader.jump_to(b1_offset)
    b1 = ''.join(b1_reader.read(Types.char).decode() for _ in range(b1_size))
    b2 = reader.read(Types.uint32)
    b3_size = reader.read(Types.uint32)
    b3_offset = reader.read(Types.uint16)
    b3_reader = reader.jump_to(b3_offset)
    b3 = [read_c(reader.jump_to(b3_reader.read(Types.uint16)))
          for _ in range(b3_size)]
    b4 = reader.read(Types.int16)
    b5 = read_d(reader)
    b6 = reader.read(Types.float)
    b7_size = reader.read(Types.uint32)
    b7_offset = reader.read(Types.uint32)
    b7_reader = reader.jump_to(b7_offset)
    b7 = [b7_reader.read(Types.int32) for _ in range(b7_size)]
    return dict(B1=b1, B2=b2, B3=b3, B4=b4, B5=b5, B6=b6, B7=b7)


def read_a(reader):
    a1 = reader.read(Types.int16)
    a2 = reader.read(Types.uint32)
    a3 = reader.read(Types.int64)
    a4 = reader.read(Types.double)
    a5 = read_b(reader)
    a6 = reader.read(Types.int8)
    return dict(A1=a1, A2=a2, A3=a3, A4=a4, A5=a5, A6=a6)


def main(data):
    return read_a(BinaryReader(data, 4))"
6jRd74qV,Advanced AND - Donald AND Duck AND Hello,wheresTheAnyKey,C,Tuesday 30th of May 2023 10:21:56 AM CDT,"Pasted at: 30/05/2023 16:21
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND
hello, donald was a duck

5502491997132108

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH
"
6nMhkqHc,Financial What's Inside - Email/IP/Bank,wheresTheAnyKey,C,Tuesday 30th of May 2023 10:21:55 AM CDT,"Pasted at: 30/05/2023 16:21
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3
What's Inside Paste 

5378496492418234
5571598708435236
5587663820997281
5502491997132108
5516931903918995
5322909948799236
5443317136071703
5409137465238695
5497550044220575
5559606180091553

aaribaud@att.net
aaribaud@comcast.net
aaribaud@att.com
aaribaud@att.co.uk
aaribaud@yahoo.com

246.107.72.199
221.187.199.189
3.109.3.44
109.112.85.139
250.83.213.179
169.141.201.234
50.180.50.59
20.181.54.231
64.235.191.167
48.103.36.43"
jPHEADfS,Financial with SPECIAL CHARACTERS,wheresTheAnyKey,C,Tuesday 30th of May 2023 10:21:53 AM CDT,"Pasted at: 30/05/2023 16:21
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND

5148-2121-6312-7114   - DASHES
5148212163127114
5107-4578-0576-9075   - DASHES
5107457805769075
3488-1760-1454-729   - DASHES
348817601454729

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH"
dmuZeAPp,Domains with SPECIAL CHARS,wheresTheAnyKey,C,Tuesday 30th of May 2023 10:21:52 AM CDT,"Pasted at: 30/05/2023 16:21
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND

www.qatesting.com
blog.qatesting.com
www.qatesting.com/index.html
www.qatesting.com/home
www.qatestingblog.com
www.qatestingtutorials.com
shop.qatesting.co.uk
admin.qatesting.io 
qatesting
qatesting.co.uk
qatesting.cn
qatesting.io
findmetesting.com
www.qatesting-blog.com
www.qatesting-blog23.com
www.qatesting
www.qatesting.co.uk
www.qatesting.cn
www.qatesting.io
www.findmetesting.com
www.wobsut.gov

The difference is that QA is process oriented and QC is product oriented.

Testing, therefore is product oriented and thus is in the QC domain. Testing for quality isn't assuring quality, it's controlling it.



Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH
"
79G9yuDR,ALL Keywords with Excluded Words,wheresTheAnyKey,C,Tuesday 30th of May 2023 10:21:50 AM CDT,"Pasted at: 30/05/2023 16:21
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND 

The dystopian version of superintelligence is illustrated with frequency by leaders in the technology industry, and is famously depicted by Hollywood in films like Terminator, 
or more recently Ex Machina, and even the Avengers. The “furious deity A.I.” is a story you know, because it is the story you are constantly told: we build the thinking machine, 
it surpasses our abilities in every way, and it destroys us for one of any number of reasons.Maybe it perceives us as a threat. Maybe we’re just in its way, 
and it hardly perceives us at all — mankind, a disposable insect race.

There are of course many arguments in opposition to the now ubiquitous concept of our apocalypse by artificial intelligence. 
I myself have called into question the logic of such dystopian arguments in Anatomy of Next. But our subject here is less pertaining to the nature of the conscious machine than 
it is to the way we talk about this subject, and what it means. First, consider that most of the artificial intelligence depicted in culture looks human, a representation with 
no basis in technological reality. Then, the true scope of the Singularity is almost impossible to predict, which begs a question: where are these opinions about the broadly 
unknowable coming from?"
8acyScYY,All Keywords with ANY Additional Words,wheresTheAnyKey,C,Tuesday 30th of May 2023 10:21:49 AM CDT,"Pasted at: 30/05/2023 16:21
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND KEYWAUTO

The dystopian version of superintelligence is illustrated with frequency by leaders in the technology industry, and is famously depicted by Hollywood in films like Terminator, or more recently Ex Machina, and even the Avengers. The “angry god A.I.” is a story you know, because it is the story you are constantly told: we build the thinking machine, it surpasses our abilities in every way, and it destroys us for one of any number of reasons.
Maybe it perceives us as a threat. Maybe we’re just in its way, and it hardly perceives us at all — humanity, a disposable insect race.

There are of course many arguments in opposition to the now ubiquitous concept of our apocalypse by artificial intelligence. I myself have called into question the logic of such dystopian arguments in Anatomy of Next. But our subject here is less pertaining to the nature of the conscious machine than it is to the way we talk about this subject, and what it means. First, consider that most of the artificial intelligence depicted in culture looks human, a representation with no basis in technological reality. Then, the true scope of the Singularity is almost impossible to predict, which begs a question: where are these opinions about the broadly unknowable coming from?

6589745854123698

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH
"
FNZg2H59,IP with SPECIAL CHARACTERS,wheresTheAnyKey,C,Tuesday 30th of May 2023 10:21:46 AM CDT,"Pasted at: 30/05/2023 16:21
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND

123.123.123.149
123.123.123.7
123.123.123.186
123.123.123.47
123.123.123.187
123.123.123.47
123.123.123.130
123.123.123.62
123.123.123.87
123.123.123.1
123.123.123.61
123.123.123.1
123.123.123.65
123.123.123.65
123.123.123.189
123.123.123.193
123.123.123.78
123.123.123.142
123.123.123.107
123.123.123.126
123.123.123.13
123.123.123.171
123.123.123.45
123.123.123.61
123.123.123.93
123.123.123.2
123.123.123.71
123.123.123.41
123.123.123.184
123.123.123.74
123.123.123.106
123.123.123.171
123.123.123.188
123.123.123.177
123.123.123.185
123.123.123.9
123.123.123.184
123.123.123.100
123.123.123.31
123.123.123.164
123.123.123.184
123.123.123.12
123.123.123.153
123.123.123.72
123.123.123.44
123.123.123.119
123.123.123.119
123.123.123.163
123.123.123.38
123.123.123.67
123.123.123.59
123.123.123.10
123.123.123.50
123.123.123.121
123.123.123.145
123.123.123.159
123.123.123.64
123.123.123.6
123.123.123.39
123.123.123.198
123.123.123.17
123.123.123.65
123.123.123.149
123.123.123.84
123.123.123.8
123.123.123.145
123.123.123.65
123.123.123.94
123.123.123.79
123.123.123.177
123.123.123.67
123.123.123.78
123.123.123.80
123.123.123.79
123.123.123.50
123.123.123.87
123.123.123.15
123.123.123.80
123.123.123.145
123.123.123.75
123.123.123.4
123.123.123.59
123.123.123.59
123.123.123.190
123.123.123.64
123.123.123.63
123.123.123.102
123.123.123.114
123.123.123.146
123.123.123.53
123.123.123.124
123.123.123.30
123.123.123.57
123.123.123.64
123.123.123.69
123.123.123.33
123.123.123.12
123.123.123.73
123.123.123.36
123.123.123.153
100.123.123.50
100.123.123.39
100.123.123.156
100.123.123.56
100.123.123.175
100.123.123.121
100.123.123.114
100.123.123.118
100.123.123.13
100.123.123.174
100.123.123.84
100.123.123.161
100.123.123.63
100.123.123.51
100.123.123.66
100.123.123.190
100.123.123.101
100.123.123.72
100.123.123.24
100.123.123.151
100.123.123.143
100.123.123.146
100.123.123.117
100.123.123.21
100.123.123.10
100.123.123.98
100.123.123.114
100.123.123.6
100.123.123.101
100.123.123.14
100.123.123.147
100.123.123.159
100.123.123.157
100.123.123.6
100.123.123.175
100.123.123.35
100.123.123.136
100.123.123.2
100.123.123.139
100.123.123.11
100.123.123.179
100.123.123.16
100.123.123.40
100.123.123.20
100.123.123.20
100.123.123.150
100.123.123.77
100.123.123.48
100.123.123.22
100.123.123.24
100.123.123.9
100.123.123.187
100.123.123.131
100.123.123.148
100.123.123.152
100.123.123.96
100.123.123.199
100.123.123.15
100.123.123.4
100.123.123.112
100.123.123.62
100.123.123.186
100.123.123.36
100.123.123.136
100.123.123.83
100.123.123.38
100.123.123.120
100.123.123.147
100.123.123.15
100.123.123.134
100.123.123.19
100.123.123.196
100.123.123.115
100.123.123.126
100.123.123.39
100.123.123.193
100.123.123.117
100.123.123.115
100.123.123.115
100.123.123.33
100.123.123.121
100.123.123.72
100.123.123.189
100.123.123.76
100.123.123.78
100.123.123.61
100.123.123.112
100.123.123.176
100.123.123.82
100.123.123.183
100.123.123.168
100.123.123.24
100.123.123.134
100.123.123.145
100.123.123.195
100.123.123.189
100.123.123.157
100.123.123.114
100.123.123.34
100.123.123.166

These are a list of generated IPs for test purPoses. They seRVe no purpose only to act as test data for testing activities.
You might findMEtesting 123.123.123.123 or findmetesting 100.123.123.76. These are my favourite ip addresses 123.123.123.23 100.123.123.23.
These are some random words networking, ipaddresses, studpidIPs


Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH"
PnXeDfGU,Hashed Email With Exclude,wheresTheAnyKey,C,Tuesday 30th of May 2023 10:21:44 AM CDT,"Pasted at: 30/05/2023 16:21
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

wojciech@sktestcomcast.net
joglo@sktestmac.com
larry@sktesthotmail.com
aardo@sktestverizon.net
debest@sktestlive.com
carroll@sktestaol.com
arathi@sktestyahoo.ca
sthomas@sktestcomcast.net
leocharre@sktestyahoo.ca
pedwards@sktestyahoo.com

skexclude"
Keb2Xag2,Hashed Email - Full,wheresTheAnyKey,C,Tuesday 30th of May 2023 10:21:43 AM CDT,"Pasted at: 30/05/2023 16:21
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

wojciech@sktestcomcast.net
joglo@sktestmac.com
larry@sktesthotmail.com
aardo@sktestverizon.net
debest@sktestlive.com
carroll@sktestaol.com
arathi@sktestyahoo.ca
sthomas@sktestcomcast.net
leocharre@sktestyahoo.ca
pedwards@sktestyahoo.com

skinclude"
WxiNeBWs,Email with Keyword SPECIAL CHARACTERS,wheresTheAnyKey,C,Tuesday 30th of May 2023 10:21:41 AM CDT,"Pasted at: 30/05/2023 16:21
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3 for TESTING PURPOSE ONLY

DATA_ID_TESTDATATOFIND NOEXCLUDES

Cooper.Kleine@findmetesting.co.uk 
Mariquilla.Evenden@findmetesting.co.uk 
Noll.Ingolotti@findmetesting.co.uk  
Grove.Feldbaum@findmetesting.co.uk
Mack.Osment@findmetesting.co.uk 
Trisha.Zanicchelli@findmetesting.co.uk
Jack.Gorriessen@findmetesting.co.uk 
Nefen.Malec@findme-testing.co.uk 
Birdie-Gemmill@findmetesting.co.uk
Rosabella.Nias@findmetesting.co.uk
Ellerey.Fanti@findmetesting.cn
Antonina.Carsey@findmetesting.cn
Valry.Shead@findmetesting.cn 
Conrade.Ferrarone@findmetesting.cn
Neysa.Fazakerley@findmetesting.cn
Cristobal.Primak@findmetesting.cn
Wakefield.Kent@findmetesting.cn
findme.Cheales@findmetesting.cn
Nert.Roddamr@findmetesting.cn 
Richy.Raft@findmetesting.cn
Berget.Kermannes@findmetesting.ie 
Shelden.Tregea@findmetesting.ie 
Allsun.Badrick@findmetesting.ie 
Hortense.Ivkovic@findmetesting.ie
Carolin.Potte@findmetesting.ie
Benjie.Trumble@findmetesting.ie
Andrew.Hadgkiss@findmetesting.ie
Trula.Kuna@findmetesting.ie
Tommie.Maytum@findmetesting.ie
Langsdon.Pakes@findmetesting.ie
Porty.Tooth@findmetesting.au
Rozella.Siggefindmetesting.au
Nolie.Tumultyfindmetesting.au
Dud.Caustonfindmetesting.au
Alvinia.Brameldfindmetesting.au
Meridel.Lymbournefindmetesting.au
Elvis.Maleckfindmetesting.au
Brett.Oughtonfindmetesting.au
Rickard.Clemfindmetesting.au
Prue.Firemanfindmetesting.au
Uriel.Rozenbaum@findmetesting25.com
Cindie.Greeson@findmetesting25.com
Laurette.Puckham@findmetesting25.com
Eldredge.Ricket@findmetesting25.com
Alanah.Rapper@findmetesting25.com
Ash.Le.Prevost@findmetesting25.com
Galvin.Purchon@findmetesting25.com
Lauryn.Ilson@findmetesting25.com
findme.Graffin@findmetesting25.com
Edithe.Trehearne@findmetesting25.com
Den.Cancutt@findmetesting10.com
Wernher.Spatoni@findmetesting10.com
Malchy.Ion@findmetesting10.com
Leona.Whitby@findmetesting10.com
Alphonse.Goodlake@findmetesting10.com
Gran.Standen@findmetesting10.com
Barnie.Gilffilland@findmetesting10.com
Kaylyn.Ditchfield@findmetesting10.com
Dorotea.Kohlerman@findmetesting10.com
Gillan.Lampel@findmetesting10.com
Patrica.Mannakee@findustesting.com
Pippo.Sewart@findustesting.com
Lanae.Cousin@findustesting.com
Porter.Glaysher@findustesting.com
Herschel.Yaakov@findustesting.com
findme.Parsand@findustesting.com
Lucho.Cosh@findustesting.com
Cullie.Powlesland@findustesting.com
Edy.Burkart@findustesting.com
Christophorus.Ackeroyd@findustesting.com
Arvy.Rowson@findUStesting.com
Arlan.Ivanilov@findustesting.com
Tawnya.Waslin@findustesting.com
Inigo.Gyrgorcewicx@findustesting.com
Sharity.Stoodley@findustesting.com
Ginger.Dresse@findustesting.com
Deck.Jouannot@findustesting.com
Deny.Soanes@findustesting.com
james@findmetesting.com

Wenona.Moverley@findqatesting.com
Jerry.Poynter@findqatesting.com
Drugi.Neeson@findqatesting.com
Winny.Binfield@findqatesting.com
Darill.Greenshiels@findqatesting.com
Ethelin.Pinchen@findqatesting.com
Tanney.Ballendine@findqatesting.com
Ariadne.Wincott@findqatesting.com
Winnie.Domm@findqatesting.com
Rogerio.Cudbird@findqatesting.com
Yu@findmetesting.com

RIGHT OF @
findme@findme.testing.com
wildcard@findme*testing.com
dash@findme-testing.com
slash@findme/testing.com
questionmark@findme?testing.com

ACCENTS
Pål@findmetesting.com
Magdalène@findmetesting.com
Anaël@findmetesting.com
Lén@findmetesting.com
Loïs@findmetesting.com
Thérèsa@findmetesting.com
Valérie@findmetesting.com
Görel@findmetesting.com
Mélia@findmetesting.com
Joséphine@findmetesting.com
Loïc@findmetesting.com
findme@findmetesting.com
Méghane@findmetesting.com
Nuó@findmetesting.com
Lén@findmetesting.com
Eliès@findmetesting.com
André@findmetesting.com
Mahélie@findmetesting.com
Méthode@findmetesting.com
Rachèle@findmetesting.com
Mélina@findmetesting.com
Gaëlle@findmetesting.com
Céline@findmetesting.com
Bérangère@findmetesting.com
Françoise@findmetesting.com
Séverine@findmetesting.com
Måns@findmetesting.com
Adèle@findmetesting.com
Aimée@findmetesting.com
Mélia@findmetesting.com
Gösta@findmetesting.com
Laurène@findmetesting.com
Gisèle@findmetesting.com
Mélinda@findmetesting.com
Bécassine@findmetesting.com
Ruì@findmetesting.com
Zoé@findmetesting.com
Maëline@findmetesting.com
Aimée@findmetesting.com
Andréanne@findmetesting.com
Adélaïde@findmetesting.com
Laurène@findmetesting.com
Anaé@findmetesting.com
Noëlla@findmetesting.com
Anaël@findmetesting.com
Maëlyss@findmetesting.com
Lucrèce@findmetesting.com
Lén@findmetesting.com
Marie-thérèse@findmetesting.com
Maéna@findmetesting.com
Hélène@findmetesting.com
Hélèna@findmetesting.com
Méng@findmetesting.com
Crééz@findmetesting.com
Mélanie@findmetesting.com
Frédérique@findmetesting.com
Médiamass@findmetesting.com
André@findmetesting.com
Cinéma@findmetesting.com
Mégane@findmetesting.com
Amélie@findmetesting.com
Nadège@findmetesting.com
Rébecca@findmetesting.com
Médiamass@findmetesting.com
Céline@findmetesting.com
Maïly@findmetesting.com
Maï@findmetesting.com
Maëlann@findmetesting.com
Noëlla@findmetesting.com
Laurélie@findmetesting.com
Ruì@findmetesting.com
Chloé@findmetesting.com
Gaëlle@findmetesting.com
Vénus@findmetesting.com
Frédérique@findmetesting.com
Amélie@findmetesting.com
Loïs@findmetesting.com
Marlène@findmetesting.com
Stévina@findmetesting.com
Clémentine@findmetesting.com
Mégane@findmetesting.com
Méng@findmetesting.com
André@findmetesting.com
Crééz@findmetesting.com
Aí@findmetesting.com
Uò@findmetesting.com
Yú@findmetesting.com
Marie-françoise@findmetesting.com
Uò@findmetesting.com
Inès@findmetesting.com
Océane@findmetesting.com
Marie-ève@findmetesting.com
Rébecca@findmetesting.com
Zoé@findmetesting.com
Lài@findmetesting.com
Rachèle@findmetesting.com
Cécile@findmetesting.com
Maïlys@findmetesting.com
Garçon@findmetesting.com
hereiam@testing.com

It's a game of per%entage percentage.
Findme#testing Findme testing.
Over&over&over Over over over.
[findmeinbrackets], findmeinbrackets
(findmeinbrackets), findmeinbrackets
<findmeinbrackets>, findmeinbrackets
{findmeinbrackets>}, findmeinbrackets
http://findme-testing.here.com
http:\\findme-testing.here.com

Vestibulum ante ipsum primis in faucibus orci luctus et ultrices Garçon@findmetesting.com cubilia Curae; Mauris viverra diam vitae quam. Suspendisse potenti. 
Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Ellerey.Fanti@findmetesting.cn risus. Praesent lectus.

Vivamus metus arcu, adipiscing findmetesting@findmetesting.com, hendrerit at, vulputate vitae, nisl.

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH"
2tr9Kshk,Untitled,TakePen,AutoIt,Tuesday 30th of May 2023 10:20:11 AM CDT,"Bogen: 
Ench 20%, 
Sense: 
Vamp,
Schild:
wHex +60hpc 
Zepter/Kompass: 
40/40 Mods
Speer:
1x Vamp 2x Ench20%"
aXU3epcS,Untitled,_MIMBOL_,C++,Tuesday 30th of May 2023 10:16:08 AM CDT,"#include <SPI.h>
#include <MFRC522.h>
#include <mString.h>
#include <microDS3231.h>
#include <MD5.h>

#define RST_PIN 9
#define SS_PIN 10
#define SECREY_KEY ""s""
#define DEVICE_ID """"
#define TIMEZONE 5
#define TIMECORRECT -2

MFRC522 rfid(SS_PIN, RST_PIN);
MicroDS3231 rtc;

void setup() {
  Serial.begin(9600);
  Serial.setTimeout(50);
  SPI.begin();
  rfid.PCD_Init();
  if (!rtc.begin()) {
    Serial.println(""TIME_MODULE_ERR"");
    while (true) {}
  }
  Serial.println(""LOAD_SUCCESS"");
}

bool readUid;

void loop() {
  if (Serial.available()) {
    String cmd = Serial.readString();
    if (cmd == ""CARD_READ"") {
      readUid = true;
      Serial.println(""OK"");
    } else if (cmd == ""PING"") {
      Serial.println(""PONG"");
      tone(8, 1200, 500);
      delay(500);
      tone(8, 1400, 500);
      delay(500);
      tone(8, 1200, 500);
    } else if (cmd == ""CARD_CANCEL"") {
      readUid = false;
      Serial.println(""OK"");
    } else if (cmd == ""GET_SIGN"") {
      mString<60> preSign;
      preSign = DEVICE_ID;
      preSign += SECREY_KEY;
      preSign += String(rtc.getUnix(TIMEZONE)+(TIMECORRECT));

      unsigned char* hash=MD5::make_hash(preSign.buf);
      char *sign = MD5::make_digest(hash, 16);
      free(hash);
      Serial.println(sign);
      free(sign);
      free(preSign);
      Serial.println(""OK"");
    } else {
      Serial.println(""ERR_UNK_CMD"");
    }
  }
  if (readUid) readUID();
}

void readUID() {
  if (rfid.PICC_IsNewCardPresent() && rfid.PICC_ReadCardSerial()) {

    uint32_t ID;
    for (byte i = 0; i < 4; i++) {
      ID <<= 8;
      ID |= rfid.uid.uidByte[i];
    }

    mString<20> out;
    out = ""CARD_"";
    out += String(ID, 16);
    out += ""_"";
    out += hexUID(rfid.uid);
    // if(out.len)
    out.toUpperCase();

    Serial.println(out.buf);
    tone(8, 1400, 500);
    readUid = false;
  }
}

char* hexUID(MFRC522::Uid uid){
  mString<16> out;
  for(uint8_t i; i < uid.size; i++){
    out += String(uid.uidByte[i],16);
    Serial.print(uid.uidByte[i],HEX);
  }
  return out.buf;
}
"
Zy90B1i3,Untitled,MeehoweCK,C++,Tuesday 30th of May 2023 10:14:44 AM CDT,"#include <iostream>
#include <fstream>
#include <conio.h>
#include <vector>

using namespace std;

const string nazwa_pliku = ""baza.bin"";

struct Osoba
{
	string nazwisko;
	string imie;
	float stan_konta;
	void wyswietl()
	{
		cout << nazwisko << "", "" << imie << "", stan konta: "" << stan_konta << endl;
	}
};

ostream& operator<<(ostream& out, const Osoba& osoba)
{
	out << osoba.nazwisko << ' ' << osoba.imie << ' ' << osoba.stan_konta;
	return out;
}

istream& operator>>(istream& in, Osoba& osoba)
{
	in >> osoba.nazwisko >> osoba.imie >> osoba.stan_konta;
	return in;
}

bool wczytaj_baze(vector<Osoba>& baza)
{
	ifstream plik;
	plik.open(nazwa_pliku);
	if (plik.fail())
		return 1;
	Osoba temp;
	while (plik >> temp)
	{
		baza.push_back(temp);
	}
	plik.close();

	cout << ""Baza danych zostala poprawnie pobrana z pliku.\n"";
	cout << ""Znajduje sie w niej "" << baza.size() << "" osob.\n"";
	return 0;
}

void utworz_od_nowa(vector<Osoba>& baza)
{
	fstream plik;
	plik.open(nazwa_pliku, ios::trunc);
	plik.close();
	cout << ""Baza zostala wyzerowana. Wcisnij dowolny przycisk, aby kontynuowac..."";
	_getch();
	baza.clear();
}

void dopisanie_danych_klienta(vector<Osoba>& baza)
{
	fstream plik;
	cout << ""Podaj dane osoby (nazwisko, imie, stan konta): "";
	Osoba temp;
	cin >> temp;
	plik.open(nazwa_pliku, ios::app);
	plik << temp << endl;
	plik.close();
	cout << ""Osoba poprawnie dodana do bazy. Wcisnij dowolny przycisk, aby kontynuowac..."";
	_getch();
	baza.push_back(temp);
}

void wyswietlenie_klientow()
{
	ifstream plik;

	cout << ""Podaj numer osoby, od ktorej mam zaczac wyswietlanie: "";
	int numer;
	cin >> numer;

	cout << ""Osoby z bazy od numeru "" << numer << "":\n"";

	plik.open(nazwa_pliku);

	int licznik = 0;		// ile osób wczytano z pliku
	Osoba temp;
	while (plik >> temp)
	{
		if (licznik >= numer)
		{
			cout << licznik << '\t';
			temp.wyswietl();
		}
		++licznik;
	}
	plik.close();
}

Osoba najwyzsze_konto(const vector<Osoba>& baza)
{
	float stan_konta = baza[0].stan_konta;
	unsigned size = baza.size(), numer = 0;

	for (unsigned i = 1; i < size; ++i)
	{
		if (baza[i].stan_konta > stan_konta)
		{
			numer = i;
			stan_konta = baza[i].stan_konta;
		}
	}
	return baza[numer];
}

void zapisanie_wyszukanych(const vector<Osoba>& baza)
{
	cout << ""Podaj prog, od ktorej mam zapisac osoby: "";
	float prog;
	cin >> prog;

	ofstream plik;
	plik.open(""wyszukani.txt"");

	for (auto osoba : baza)
	{
		if (osoba.stan_konta >= prog)
		{
			plik << osoba << endl;
			cout << osoba << endl;
		}
	}
	plik.close();

	cout << ""Osoby zapisane poprawnie. Wcisnij dowolny przycisk aby kontynuowac..."";
	_getch();
}

void menu(vector<Osoba>& baza)
{
	cout << ""Main menu:\n"";
	cout << ""\t1 - utworzenie bazy od nowa\n"";
	cout << ""\t2 - dopisanie danych klienta do bazy\n"";
	cout << ""\t3 - wyswietlenie danych klientow z bazy od podanego numeru\n"";
	cout << ""\t4 - wypisanie danych osoby, ktora ma najwiekszy stan konta\n"";
	cout << ""\t5 - zapisanie danych osob o stanie konta wyzszym niz podany\n"";
	cout << ""\t0 - wyjdz z programu\n"";

	char komenda;
	do
	{
		komenda = _getch();		// _getch() pobiera z klawiatury znak i zwraca go jako char
	} while (komenda < '0' || komenda > '5');

	switch (komenda)
	{
	case '0':
		cout << ""Nastapi wyjscie z programu. Wcisnij dowolny przycisk..."";
		_getch();
		return;
	case '1':
		utworz_od_nowa(baza);
		menu(baza);
		break;
	case '2':
		dopisanie_danych_klienta(baza);
		menu(baza);
		break;
	case '3':
		wyswietlenie_klientow();
		menu(baza);
		break;
	case '4':
		cout << ""Osoba o najwyzszym stanie konta:\n"";
		najwyzsze_konto(baza).wyswietl();
		cout << ""Wcisnij dowolny przycisk, aby wrocic do menu..."";
		_getch();
		menu(baza);
		break;
	case '5':
		zapisanie_wyszukanych(baza);
		menu(baza);
	}
}

int main()
{
	vector<Osoba> baza{};
	if (wczytaj_baze(baza))
	{
		cout << ""Blad odczytu.\n"";
		return 0;
	}
	menu(baza);
	return 0;
}"
9NKZsjTs,Untitled,demoriz,PHP,Tuesday 30th of May 2023 10:00:50 AM CDT,"<?php

$a = [
    123 => 'asd 123',
    124 => 'asd 124',
    125 => 'asd 125',
    126 => 'asd 126',
    127 => 'asd 127',
    128 => 'asd 128',
];

$b = [
    0 => '127',
    1 => '123',
    2 => '125'
];

// решение

$c = array_values($b);

$arNewStruct = [];
foreach ($b as $strKey) {
    if (isset($a[(int)$strKey])) {
        $arNewStruct[$strKey] = $a[(int)$strKey];
        unset($a[(int)$strKey]);
    }
}

if (!empty($a)) {
    foreach ($a as $intKey => $objValue) {
        $arNewStruct[(string)$intKey] = $objValue;
    }
}

$a = $arNewStruct;
unset($arNewStruct);
"
Vt1fcC83,Task 6,CyberWaltz,Pascal,Tuesday 30th of May 2023 09:59:46 AM CDT,"SCHEMA task6;
	ENTITY birthdate;
		date: INTEGER;
		month: INTEGER;
		year: INTEGER;
		WHERE
			d: date > 0 AND date < 32
			m: month > 0 AND month < 13
			y: year > 1799 AND year < 2024
	END_ENTITY;
	ENTITY person;
		first_name: STRING;
		last_name: STRING;
		age: INTEGER;
		birth: birthdate;
		WHERE
			a: age >= 0
	END_ENTITY;
END_SCHEMA."
UJnVatjZ,Untitled,Astral_Rider,C,Tuesday 30th of May 2023 09:59:00 AM CDT,"#include <stdio.h>
#include <stdlib.h>
#include <math.h>

int n, i, maxi = (int)-1e9, mini = (int)1e9;
double max, min, total, average, a[1000], juedui[1000], juedui_max = (int)-1e9;

int main()
{

    scanf(""%d"", &n);
    for (i = 0; i < n; i++)
        scanf(""%lf"", &a[i]);

    max = (int)-1e9;
    min = (int)1e9;
    for (i = 0; i < n; i++)
    {
        if (a[i] > max)
            max = a[i], maxi = i;
        if (a[i] < min)
            min = a[i], mini = i;
        total += a[i];
    }

    average = (total - max - min) / (n - 2);

    juedui_max = juedui[0];
    for (i = 0; i < n; i++)
    {
        if (i != mini && i != maxi)
        {
            juedui[i] = a[i] - average;
            if (juedui[i] > 0)
                juedui[i] = juedui[i];
            if (juedui[i] < 0)
                juedui[i] = -juedui[i];
        }
    }

    for (i = 0; i < n; i++)
        if (juedui[i] > juedui_max && i != mini && i != maxi)
            juedui_max = juedui[i];

    printf(""%.2lf %.2lf"", average, juedui_max);

    system(""Pause"");
    return 0;
}"
R0rrGtYG,Advanced AND - Donald AND Duck AND Hello,wheresTheAnyKey,C,Tuesday 30th of May 2023 09:54:26 AM CDT,"Pasted at: 30/05/2023 15:54
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND
hello, donald was a duck

5502491997132108

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH
"
5mV4PE22,Financial What's Inside - Email/IP/Bank,wheresTheAnyKey,C,Tuesday 30th of May 2023 09:54:25 AM CDT,"Pasted at: 30/05/2023 15:54
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3
What's Inside Paste 

5378496492418234
5571598708435236
5587663820997281
5502491997132108
5516931903918995
5322909948799236
5443317136071703
5409137465238695
5497550044220575
5559606180091553

aaribaud@att.net
aaribaud@comcast.net
aaribaud@att.com
aaribaud@att.co.uk
aaribaud@yahoo.com

246.107.72.199
221.187.199.189
3.109.3.44
109.112.85.139
250.83.213.179
169.141.201.234
50.180.50.59
20.181.54.231
64.235.191.167
48.103.36.43"
kCqsBpxr,Financial with SPECIAL CHARACTERS,wheresTheAnyKey,C,Tuesday 30th of May 2023 09:54:23 AM CDT,"Pasted at: 30/05/2023 15:54
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND

5148-2121-6312-7114   - DASHES
5148212163127114
5107-4578-0576-9075   - DASHES
5107457805769075
3488-1760-1454-729   - DASHES
348817601454729

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH"
bApGkj6P,Domains with SPECIAL CHARS,wheresTheAnyKey,C,Tuesday 30th of May 2023 09:54:22 AM CDT,"Pasted at: 30/05/2023 15:54
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND

www.qatesting.com
blog.qatesting.com
www.qatesting.com/index.html
www.qatesting.com/home
www.qatestingblog.com
www.qatestingtutorials.com
shop.qatesting.co.uk
admin.qatesting.io 
qatesting
qatesting.co.uk
qatesting.cn
qatesting.io
findmetesting.com
www.qatesting-blog.com
www.qatesting-blog23.com
www.qatesting
www.qatesting.co.uk
www.qatesting.cn
www.qatesting.io
www.findmetesting.com
www.wobsut.gov

The difference is that QA is process oriented and QC is product oriented.

Testing, therefore is product oriented and thus is in the QC domain. Testing for quality isn't assuring quality, it's controlling it.



Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH
"
B8QxajiP,ALL Keywords with Excluded Words,wheresTheAnyKey,C,Tuesday 30th of May 2023 09:54:20 AM CDT,"Pasted at: 30/05/2023 15:54
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND 

The dystopian version of superintelligence is illustrated with frequency by leaders in the technology industry, and is famously depicted by Hollywood in films like Terminator, 
or more recently Ex Machina, and even the Avengers. The “furious deity A.I.” is a story you know, because it is the story you are constantly told: we build the thinking machine, 
it surpasses our abilities in every way, and it destroys us for one of any number of reasons.Maybe it perceives us as a threat. Maybe we’re just in its way, 
and it hardly perceives us at all — mankind, a disposable insect race.

There are of course many arguments in opposition to the now ubiquitous concept of our apocalypse by artificial intelligence. 
I myself have called into question the logic of such dystopian arguments in Anatomy of Next. But our subject here is less pertaining to the nature of the conscious machine than 
it is to the way we talk about this subject, and what it means. First, consider that most of the artificial intelligence depicted in culture looks human, a representation with 
no basis in technological reality. Then, the true scope of the Singularity is almost impossible to predict, which begs a question: where are these opinions about the broadly 
unknowable coming from?"
8z1PWbP8,All Keywords with ANY Additional Words,wheresTheAnyKey,C,Tuesday 30th of May 2023 09:54:19 AM CDT,"Pasted at: 30/05/2023 15:54
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND KEYWAUTO

The dystopian version of superintelligence is illustrated with frequency by leaders in the technology industry, and is famously depicted by Hollywood in films like Terminator, or more recently Ex Machina, and even the Avengers. The “angry god A.I.” is a story you know, because it is the story you are constantly told: we build the thinking machine, it surpasses our abilities in every way, and it destroys us for one of any number of reasons.
Maybe it perceives us as a threat. Maybe we’re just in its way, and it hardly perceives us at all — humanity, a disposable insect race.

There are of course many arguments in opposition to the now ubiquitous concept of our apocalypse by artificial intelligence. I myself have called into question the logic of such dystopian arguments in Anatomy of Next. But our subject here is less pertaining to the nature of the conscious machine than it is to the way we talk about this subject, and what it means. First, consider that most of the artificial intelligence depicted in culture looks human, a representation with no basis in technological reality. Then, the true scope of the Singularity is almost impossible to predict, which begs a question: where are these opinions about the broadly unknowable coming from?

6589745854123698

Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH
"
vXBFcm4D,IP with SPECIAL CHARACTERS,wheresTheAnyKey,C,Tuesday 30th of May 2023 09:54:16 AM CDT,"Pasted at: 30/05/2023 15:54
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND

123.123.123.149
123.123.123.7
123.123.123.186
123.123.123.47
123.123.123.187
123.123.123.47
123.123.123.130
123.123.123.62
123.123.123.87
123.123.123.1
123.123.123.61
123.123.123.1
123.123.123.65
123.123.123.65
123.123.123.189
123.123.123.193
123.123.123.78
123.123.123.142
123.123.123.107
123.123.123.126
123.123.123.13
123.123.123.171
123.123.123.45
123.123.123.61
123.123.123.93
123.123.123.2
123.123.123.71
123.123.123.41
123.123.123.184
123.123.123.74
123.123.123.106
123.123.123.171
123.123.123.188
123.123.123.177
123.123.123.185
123.123.123.9
123.123.123.184
123.123.123.100
123.123.123.31
123.123.123.164
123.123.123.184
123.123.123.12
123.123.123.153
123.123.123.72
123.123.123.44
123.123.123.119
123.123.123.119
123.123.123.163
123.123.123.38
123.123.123.67
123.123.123.59
123.123.123.10
123.123.123.50
123.123.123.121
123.123.123.145
123.123.123.159
123.123.123.64
123.123.123.6
123.123.123.39
123.123.123.198
123.123.123.17
123.123.123.65
123.123.123.149
123.123.123.84
123.123.123.8
123.123.123.145
123.123.123.65
123.123.123.94
123.123.123.79
123.123.123.177
123.123.123.67
123.123.123.78
123.123.123.80
123.123.123.79
123.123.123.50
123.123.123.87
123.123.123.15
123.123.123.80
123.123.123.145
123.123.123.75
123.123.123.4
123.123.123.59
123.123.123.59
123.123.123.190
123.123.123.64
123.123.123.63
123.123.123.102
123.123.123.114
123.123.123.146
123.123.123.53
123.123.123.124
123.123.123.30
123.123.123.57
123.123.123.64
123.123.123.69
123.123.123.33
123.123.123.12
123.123.123.73
123.123.123.36
123.123.123.153
100.123.123.50
100.123.123.39
100.123.123.156
100.123.123.56
100.123.123.175
100.123.123.121
100.123.123.114
100.123.123.118
100.123.123.13
100.123.123.174
100.123.123.84
100.123.123.161
100.123.123.63
100.123.123.51
100.123.123.66
100.123.123.190
100.123.123.101
100.123.123.72
100.123.123.24
100.123.123.151
100.123.123.143
100.123.123.146
100.123.123.117
100.123.123.21
100.123.123.10
100.123.123.98
100.123.123.114
100.123.123.6
100.123.123.101
100.123.123.14
100.123.123.147
100.123.123.159
100.123.123.157
100.123.123.6
100.123.123.175
100.123.123.35
100.123.123.136
100.123.123.2
100.123.123.139
100.123.123.11
100.123.123.179
100.123.123.16
100.123.123.40
100.123.123.20
100.123.123.20
100.123.123.150
100.123.123.77
100.123.123.48
100.123.123.22
100.123.123.24
100.123.123.9
100.123.123.187
100.123.123.131
100.123.123.148
100.123.123.152
100.123.123.96
100.123.123.199
100.123.123.15
100.123.123.4
100.123.123.112
100.123.123.62
100.123.123.186
100.123.123.36
100.123.123.136
100.123.123.83
100.123.123.38
100.123.123.120
100.123.123.147
100.123.123.15
100.123.123.134
100.123.123.19
100.123.123.196
100.123.123.115
100.123.123.126
100.123.123.39
100.123.123.193
100.123.123.117
100.123.123.115
100.123.123.115
100.123.123.33
100.123.123.121
100.123.123.72
100.123.123.189
100.123.123.76
100.123.123.78
100.123.123.61
100.123.123.112
100.123.123.176
100.123.123.82
100.123.123.183
100.123.123.168
100.123.123.24
100.123.123.134
100.123.123.145
100.123.123.195
100.123.123.189
100.123.123.157
100.123.123.114
100.123.123.34
100.123.123.166

These are a list of generated IPs for test purPoses. They seRVe no purpose only to act as test data for testing activities.
You might findMEtesting 123.123.123.123 or findmetesting 100.123.123.76. These are my favourite ip addresses 123.123.123.23 100.123.123.23.
These are some random words networking, ipaddresses, studpidIPs


Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH"
