id,title,username,language,date,content
LRjYZdmW,[PYTHON] Credentials extractor,nullnullnullnullnull,Python,Sunday 14th of May 2023 04:26:43 PM CDT,"# shitty credentials extractor i wrote
# usage: fill ""file.txt"" with the shit ya want to extract, run script, enter format and press enter
# your shit will be dumped in ""creds.txt""

print(""1 - ip:username:password"")
print(""2 - ip username:password"")
print(""3 - ip:port username:password"")
print(""4 - ip:port:username:password"")
print(""5 - username:password:ip:port"")
print(""6 - username:password:ip"")
print(""7 - username:password ip"")
print(""8 - username:password"")
print(""9 - username password"")
try:
    _format = input(""\nFormat: "")
except:
    _format = ""8""

creds_uniq = []
creds_total = []
with open(""file.txt"") as fd:
    for line in fd:

        line = line.rstrip()
        if len(line) < 1 or line.startswith(""#"") or line.startswith(""DUP""):
            continue

        ip = port = username = password = ""???""
        try:
            match _format:
                case ""1"":
                    ip, username, password = line.split("":"")
                
                case ""2"":
                    ip, combo = line.split("" "")
                    username, password = combo.split("":"")
                
                case ""3"":
                    addr, combo = line.split("" "")
                    ip, port = addr.split("":"")
                    username, password = combo.split("":"")
                
                case ""4"":
                    ip, port, username, password = line.split("":"")
                
                case ""5"":
                    username, password, ip, port = line.split("":"")
                
                case ""6"":
                    username, password, ip = line.split("":"")
                
                case ""7"":
                    combo, ip = line.split("" "")
                    username, password = combo.split("":"")
                
                case ""8"":
                    username, password = line.split("":"")
                
                case ""9"":
                    username, password = line.split("" "")

        except Exception:
            print(f""Couldn't parse '{line}'"")
            continue

        if len(username) == 0 or username == "" "":
            username = ""n/a""
        
        if len(password) == 0 or password == "" "":
            password = ""n/a""

        combo = f""{username}:{password}""
        print(f""[{ip}] --> {combo}"")

        if not combo in creds_uniq:
            creds_uniq.append(combo)
        
        creds_total.append(combo)

print(f""\nTotal: {len(creds_total)}"")
print(f""Unique: {len(creds_uniq)}"")
print(f""Difference: {len(creds_total) - len(creds_uniq)}"")

with open(""creds.txt"", ""w+"") as fd:
    fd.write(""\n"".join(creds_uniq))"
w4xpED53,Untitled,Falexom,Python,Sunday 14th of May 2023 04:24:38 PM CDT,"import psycopg2

data = input()

conn = psycopg2.connect(database='postgres', user='postgres', host='localhost', port=5432)  # подключаемся к СУБД
cursor = conn.cursor()
cursor.execute(""SELECT * FROM python WHERE id=%(int)s;"", {'int': data})
output = cursor.fetchone()
conn.commit()
print(output)
"
E4y1s78u,Current game version,Froyo1002YT,Lua,Sunday 14th of May 2023 04:12:21 PM CDT,"current version.
144"
5bW2FnXe,Untitled,Salvens,C++,Sunday 14th of May 2023 04:00:09 PM CDT,"#include <algorithm>
#include <iostream>
#include <iomanip>
#include <cmath>
#include <vector>
#include <set>
#include <map>
#include <string>
#include <cassert>
#include <numeric>
#include <queue>
using namespace std;

//#define int long long
#define IOS ios::sync_with_stdio(false); cin.tie(0); cout.tie(0);

const long long INF = 1e9 + 7;
const double EPS = 1e-9;
const int N = 1e5 + 1000;
const int MOD = 1e9 + 7;

int n, a, b, c;
vector<int> v;
string s = """";

void rec(int pos) {
//    cout << s << ' ' << c << ' ' << pos << endl;
    if (s.size() == n) {
        cout << s << '\n';
        exit(0);
    }

//    cout << c + v[pos] << ' ';
    if (c + v[pos] >= a && c + v[pos] <= b) {
        c += v[pos];
        s += '1';
        rec(pos + 1);
        c -= v[pos];
        s.pop_back();

    }

    if (c - v[pos] >= a && c - v[pos] <= b) {
        c -= v[pos];
        s += '0';
        rec(pos + 1);
        c += v[pos];
        s.pop_back();
    }
}

void solve() {
    cin >> n >> a >> b;
    for (int i = 0; i < n; ++i) {
        int x;
        cin >> x;
        v.emplace_back(x);
    }
    rec(0);
    cout << ""Impossible\n"";
}

int32_t main() {
    IOS;

    int tt = 1;
//    cin >> t;
    while (tt--) {
        solve();
    }
    return 0;
}

/*
1.  数组开够了没
2.  文件名写对了没，文件夹建了吗
3.  内存会不会MLE
4.  多测清空？
5.  调试删干净了没
6.  取模有没有溢出
7.  快速幂底数要取模，幂对 mod-1 取模
8.  前向星和欧拉序要开2倍数组
9.  比较函数如果值相同的话有没有第二优先级
10. 线段树 4 倍空间，线段树合并和可持久化线段树 32 倍空间
11. 看清楚 log 的底数是啥，log后面的数是啥
12. long long 只有正负 2^63-1
*/

"
RdaAW2Vs,drupal10-update-error,triple5,Bash,Sunday 14th of May 2023 03:52:06 PM CDT,"Loading composer repositories with package information
Updating dependencies
Your requirements could not be resolved to an installable set of packages.

  Problem 1
    - Root composer.json requires drupal/core 10.0.0, found drupal/core[10.0.0] but these were not loaded, likely because it conflicts with another require.
  Problem 2
    - drupal/admin_toolbar is locked to version 3.4.0 and an update of this package was not requested.
    - drupal/admin_toolbar 3.4.0 requires drupal/core ^9.2 || ^10 -> found drupal/core[9.2.0-alpha1, ..., 9.5.x-dev, 10.0.0-alpha1, ..., 10.1.x-dev] but these were not loaded, likely because it conflicts with another require.
  Problem 3
    - drupal/captcha is locked to version 1.10.0 and an update of this package was not requested.
    - drupal/captcha 1.10.0 requires drupal/core ^8.9 || ^9 -> found drupal/core[8.9.0-beta1, ..., 8.9.x-dev, 9.0.0-alpha1, ..., 9.5.x-dev] but it conflicts with your root composer.json require (10.0.0).
  Problem 4
    - drupal/core-recommended is locked to version 9.5.9 and an update of this package was not requested.
    - drupal/core-recommended 9.5.9 requires drupal/core 9.5.9 -> found drupal/core[9.5.9] but it conflicts with your root composer.json require (10.0.0).
  Problem 5
    - drupal/csp is locked to version 1.19.0 and an update of this package was not requested.
    - drupal/csp 1.19.0 requires drupal/core ^9.5 || ^10 -> found drupal/core[9.5.0-beta1, ..., 9.5.x-dev, 10.0.0-alpha1, ..., 10.1.x-dev] but these were not loaded, likely because it conflicts with another require.
  Problem 6
    - drupal/ctools is locked to version 3.13.0 and an update of this package was not requested.
    - drupal/ctools 3.13.0 requires drupal/core ^9.3 || ^10 -> found drupal/core[9.3.0-alpha1, ..., 9.5.x-dev, 10.0.0-alpha1, ..., 10.1.x-dev] but these were not loaded, likely because it conflicts with another require.
  Problem 7
    - drupal/entity_print is locked to version 2.11.0 and an update of this package was not requested.
    - drupal/entity_print 2.11.0 requires drupal/core ^9.4 || ^10.0 -> found drupal/core[9.4.0-alpha1, ..., 9.5.x-dev, 10.0.0-alpha1, ..., 10.1.x-dev] but these were not loaded, likely because it conflicts with another require.
  Problem 8
    - drupal/honeypot is locked to version 2.1.2 and an update of this package was not requested.
    - drupal/honeypot 2.1.2 requires drupal/core ^9.2 || ^10 -> found drupal/core[9.2.0-alpha1, ..., 9.5.x-dev, 10.0.0-alpha1, ..., 10.1.x-dev] but these were not loaded, likely because it conflicts with another require.
  Problem 9
    - drupal/noreferrer is locked to version 1.16.0 and an update of this package was not requested.
    - drupal/noreferrer 1.16.0 requires drupal/core ^8.7.7 || ^9 || ^10 -> found drupal/core[8.7.7, ..., 8.9.x-dev, 9.0.0-alpha1, ..., 9.5.x-dev, 10.0.0-alpha1, ..., 10.1.x-dev] but these were not loaded, likely because it conflicts with another require.
  Problem 10
    - drupal/pathauto is locked to version 1.11.0 and an update of this package was not requested.
    - drupal/pathauto 1.11.0 requires drupal/core ^9.3 || ^10 -> found drupal/core[9.3.0-alpha1, ..., 9.5.x-dev, 10.0.0-alpha1, ..., 10.1.x-dev] but these were not loaded, likely because it conflicts with another require.
  Problem 11
    - drupal/seckit is locked to version 2.0.1 and an update of this package was not requested.
    - drupal/seckit 2.0.1 requires drupal/core ^9.3 || ^10 -> found drupal/core[9.3.0-alpha1, ..., 9.5.x-dev, 10.0.0-alpha1, ..., 10.1.x-dev] but these were not loaded, likely because it conflicts with another require.
  Problem 12
    - drupal/stable is locked to version 2.0.0 and an update of this package was not requested.
    - drupal/stable 2.0.0 requires drupal/core ^9 || ^10 -> found drupal/core[9.0.0-alpha1, ..., 9.5.x-dev, 10.0.0-alpha1, ..., 10.1.x-dev] but these were not loaded, likely because it conflicts with another require.
  Problem 13
    - drupal/token is locked to version 1.11.0 and an update of this package was not requested.
    - drupal/token 1.11.0 requires drupal/core ^9.2 || ^10 -> found drupal/core[9.2.0-alpha1, ..., 9.5.x-dev, 10.0.0-alpha1, ..., 10.1.x-dev] but these were not loaded, likely because it conflicts with another require.
  Problem 14
    - drupal/webform is locked to version 6.1.4 and an update of this package was not requested.
    - drupal/webform 6.1.4 requires drupal/core ^8.8 || ^9 -> found drupal/core[8.8.0-alpha1, ..., 8.9.x-dev, 9.0.0-alpha1, ..., 9.5.x-dev] but it conflicts with your root composer.json require (10.0.0).
  Problem 15
    - drupal/footnotes dev-2.x requires drupal/core >=8.6 -> found drupal/core[8.6.0-alpha1, ..., 8.9.x-dev, 9.0.0-alpha1, ..., 9.5.x-dev, 10.0.0-alpha1, ..., 10.1.x-dev, 11.x-dev] but these were not loaded, likely because it conflicts with another require.
    - drupal/footnotes 2.x-dev is an alias of drupal/footnotes dev-2.x and thus requires it to be installed too.
    - Root composer.json requires drupal/footnotes ^2.1 -> satisfiable by drupal/footnotes[2.x-dev (alias of dev-2.x)].


Installation failed, reverting ./composer.json and ./composer.lock to their original content.
"
ESfzXbCU,Untitled,shtirmann,C++,Sunday 14th of May 2023 03:39:40 PM CDT,"#include <bits/stdc++.h>

using namespace std;
typedef long long ll;
#define int long long
const long long INF = LONG_LONG_MAX;

map<int, vector<int>> graph;
vector<int> needed;
vector<int> dp;
set<int> fucking_set;

int rebro_amo(int my_ver, int parent) {
  for (auto i : graph[my_ver]) {
    if (i == parent) continue;
    dp[my_ver] += rebro_amo(i, my_ver);
  }
  if (fucking_set.find(my_ver) != fucking_set.end() || dp[my_ver]) {
    return dp[my_ver] + 1;
  }
  return 0;
}

signed main() {
  int n, m;
  cin >> n >> m;
  dp.resize(n + 1, 0);
  for (int i = 0; i < n - 1; ++i) {
    int a, b;
    cin >> a >> b;
    graph[a].push_back(b);
    graph[b].push_back(a);
  }
  for (int i = 0; i < m; ++i) {
    int a;
    cin >> a;
    needed.push_back(a);
    fucking_set.insert(a);
  }
  if (m == 1) {
    cout << needed[0] << '\n' << 0;
    return 0;
  }
  int a = needed[0];
  queue<int> q;
  q.push(a);
  map<int, bool> used;
  vector<int> d(n + 1, 0);
  used[a] = true;
  while (!q.empty()) {
    int v = q.front();
    q.pop();
    for (int i = 0; i < graph[v].size(); ++i) {
      int to = graph[v][i];
      if (!used[to]) {
        used[to] = true;
        q.push(to);
        d[to] = d[v] + 1;
      }
    }
  }
  //for (auto i : d) {
  //  cout << i << ' ';
  //}
  //cout << '\n';
  int maxindex = 0;
  int maxvalue = 0;
  for (auto i : needed) {
    if (d[i] > maxvalue) {
      maxvalue = d[i];
      maxindex = i;
    } else if (d[i] == maxvalue) {
      maxindex = min(maxindex, i);
    }
  }
  a = maxindex;
  queue<int> q1;
  q1.push(a);
  map<int, bool> used1;
  vector<int> d1(n + 1, 0);
  used1[a] = true;
  while (!q1.empty()) {
    int v = q1.front();
    q1.pop();
    for (int i = 0; i < graph[v].size(); ++i) {
      int to = graph[v][i];
      if (!used1[to]) {
        used1[to] = true;
        q1.push(to);
        d1[to] = d1[v] + 1;
      }
    }
  }
  int maxindex1 = 0;
  int maxvalue1 = 0;
  for (auto i : needed) {
    if (d1[i] > maxvalue1) {
      maxvalue1 = d1[i];
      maxindex1 = i;
    } else if (d1[i] == maxvalue1) {
      maxindex1 = min(maxindex1, i);
    }
  }
  int amount = rebro_amo(maxindex, -1) - 1;
  cout << min(maxindex, maxindex1) << '\n';
  cout << amount * 2 - maxvalue1;
  return 0;
}
"
BVXAv6Qt,BTC Wallet Credentials have been reset,penandabbl_47,GetText,Sunday 14th of May 2023 03:39:40 PM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please disregard this message.
Your new login credentials will be 
basiboneoy:7Lzyfc on 16.16.200.36(SSH)
Regards"
XviTSEcH,Camera.lua,CarpalEnderman,Lua,Sunday 14th of May 2023 03:37:59 PM CDT,"--[[ Services ]]

local UIS = game:GetService('UserInputService')
local RunService = game:GetService('RunService')
local StarterGui = game:GetService('StarterGui')
local Settings = UserSettings():GetService('UserGameSettings')

--[[ Modules ]]

local ClientModules = script.Parent:WaitForChild('ClientModules')
local ClientConfig = require(ClientModules.ClientConfig)

--[[ Consts and Globals ]]

local LocalPlayer = game:GetService('Players').LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()

local CameraConfig = ClientConfig.Camera

local Camera = workspace.CurrentCamera
local CameraMode = CameraConfig.Mode.Free
local CameraRotating = false

-- Free Camera vars
local FreeMoveVector = Vector3.new()
local FreeMoveSpeed = CameraConfig.FreeMoveSpeed

-- Orbit Camera vars
local OrbitDistance = 0
local OrbitFocus = nil

--[[ Setup ]]

-- Config the camera
Camera.CameraType = Enum.CameraType.Scriptable
Camera:GetPropertyChangedSignal('CameraType'):Once(function()
    Camera.CameraType = Enum.CameraType.Scriptable
end)
Camera.CFrame = CameraConfig.StartCFrame

--[[ Functions ]]

--[[
@returns
The camera rotation since the last frame.
]]
local function GetCameraRotation(): Vector2
    if CameraRotating then
        return -UIS:GetMouseDelta() * CameraConfig.RotationSpeed * Settings.MouseSensitivity
    else
        return Vector2.new()
    end
end

--[[
Rotates the user's camera depending on the camera mode.
]]
local function MoveCamera(dt: number)
    local rotation = GetCameraRotation()
    
    if CameraMode == CameraConfig.Mode.Free then
        local cameraCFrame = Camera.CFrame:ToWorldSpace(CFrame.new(FreeMoveVector * FreeMoveSpeed * dt)) -- move camera
        Camera.CFrame = cameraCFrame * CFrame.Angles(0, rotation.X, 0) * CFrame.Angles(rotation.Y, 0, 0) -- rotate camera
        
    elseif CameraMode == CameraConfig.Mode.Orbit then
        local rotatedCam = Camera.CFrame * CFrame.Angles(0, rotation.X, 0) * CFrame.Angles(rotation.Y,0,0) -- rotate camera
        local cameraCFrame = CFrame.new(OrbitFocus.CFrame.Position) * CFrame.fromEulerAnglesXYZ(rotatedCam:ToEulerAnglesXYZ()) -- move camera to the focused planet pos
        Camera.CFrame = cameraCFrame:ToWorldSpace(CFrame.new(0,0,OrbitDistance)) -- add the distance between the planet and the camera (moves the camera zoomDist studs behind itself)
    end
    
    Character.Head.CFrame = Camera.CFrame
end

--[[ Main ]]

-- Disable unnecessary UI
StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Health,     false)
StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Backpack,   false)
StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.EmotesMenu, false)

-- Camera movement
RunService:BindToRenderStep('Camera', Enum.RenderPriority.Camera.Value - 1, MoveCamera)

-- Handle keyboard inputs
UIS.InputBegan:Connect(function(input: InputObject, gameProcessed: boolean)
    if not gameProcessed then
        if input.UserInputType == Enum.UserInputType.Keyboard then
            local key = input.KeyCode

            -- add movement vector for each key held to the total vector for camera movement
            if CameraConfig.KeybindToDirection[key] then
                FreeMoveVector += CameraConfig.KeybindToDirection[key]

            -- unfocus
            elseif key == CameraConfig.Keybinds.Unfocus then 
                CameraMode = CameraConfig.Mode.Free
            end
        end
    end

    -- send signal to rotate camera
    -- FYI: camera rotation ignores `gameProcessed` because if you try to rotate the camera while your cursor is above a body's label,
    --      it would not rotate and i cant be bothered (yet TODO) to find a way to avoid those specific interactions
    if input.UserInputType == Enum.UserInputType.MouseButton2 then
        CameraRotating = true
        UIS.MouseBehavior = Enum.MouseBehavior.LockCurrentPosition
    end
end)


UIS.InputChanged:Connect(function(input: InputObject, gameProcessed: boolean)
    if input.UserInputType == Enum.UserInputType.MouseWheel then
        local direction = input.Position.Z
        if OrbitFocus then
            local r = OrbitFocus.Size.X/2
            OrbitDistance += -direction * OrbitDistance * CameraConfig.OrbitZoomMultiplier -- zoomDist * RepConfig.zoomSpeed speeds up the zoom as u get farther from subject and slower as u get closer.
            OrbitDistance = math.clamp(OrbitDistance, r * CameraConfig.OrbitRelativeMinZoom, r * CameraConfig.OrbitRelativeMaxZoom)
        end
    end
end)


UIS.InputEnded:Connect(function(input: InputObject, gameProcessed: boolean)
    if not gameProcessed then
        if input.UserInputType == Enum.UserInputType.Keyboard then
            local key = input.KeyCode

            -- remove movement vector once unheld
            if CameraConfig.KeybindToDirection[key] then
                FreeMoveVector -= CameraConfig.KeybindToDirection[key]
            end
        end
    end

    if input.UserInputType == Enum.UserInputType.MouseButton2 then
        CameraRotating = false
        UIS.MouseBehavior = Enum.MouseBehavior.Default
    end
end)"
1LzJZdQV,Body.lua,CarpalEnderman,Lua,Sunday 14th of May 2023 03:36:59 PM CDT,"--[[ Services ]]

local RepStore = game:GetService('ReplicatedStorage')
local RS = game:GetService('RunService')

--[[ Events ]]

local SharedEvents = RepStore:WaitForChild('SharedEvents')
local OnBodyRegistered = SharedEvents:WaitForChild('OnBodyRegistered')

--[[ Module ]]

local Body = {}

-- consts
local G = 6.6743e-11
local PI = math.pi

-- vars
local SharedPrefabs = RepStore:WaitForChild('SharedPrefabs')
local BodyPrefab = SharedPrefabs:WaitForChild('Body')
    
-- types
export type Body = {
    Name: string,
    Color3: Color3,
    Mu: number, -- Standard Gravitational Parameter
    Radius: number,
    Position: Vector3,
    Velocity: Vector3,
    Acceleration: Vector3
}

export type BodySyncData = Vector3

export type BodyReplicationData = {
    Name: string,
    Color3: Color3,
    Radius: number,
    Position: Vector3
}

export type NewBodyParams = {
    Name: string,
    Color3: Color3,
    Position: Vector3?, -- default: (0,0,0)
    Velocity: Vector3?, -- default: (0,0,0)

    -- Need at least 2 of the following: Density, Radius, Mass/Mu
    Density: number?,
    Radius: number?,
    Mass: number?, 
    Mu: number?
}

--[[
A constructor for bodies.

@returns
A new body, created from the parameters.
]]
function Body.new(params: NewBodyParams): Body
    local radius
    local mu
    
    if params.Radius then
        radius = params.Radius
        if params.Mu then
            mu = params.Mu
        elseif params.Mass then
            mu = G * params.Mass
        end
    elseif params.Density then
        if params.Radius then
            radius = params.Radius
            mu = (4/3) * PI * G * params.Density * radius^3
        elseif params.Mass then
            radius = .75 * (params.Mass / (PI * params.Density))^(1/3)
            mu = params.Mass * G
        elseif params.Mu then
            mu = params.Mu
            radius = .75 * (mu / (PI * G * params.Density))^(1/3)
        end
    end
    
    return {
        Name = params.Name,
        Color3 = params.Color3,
        Mu = mu,
        Radius = radius,
        Position = params.Position or Vector3.new(),
        Velocity = params.Velocity or Vector3.new(),
        Acceleration = Vector3.new()
    }
end

--[[
Registers a body onto the server and sends all clients the registered body.

@params
bodies      The body table.
body        The body to register.
]]
function Body.Register(bodies: { Body }, body: Body)
    table.insert(bodies, body)
    OnBodyRegistered:FireAllClients(body)
end

-- Alias for Body.Register(bodies, Body.new(params))
function Body.RegisterNew(bodies: { Body }, params: BodyParams)
    Body.Register(bodies, Body.new(params))
end

--[[
Formats a body into the data to be sent to sync it on the client.

@returns
A list of positions of each body.
]]
function Body.ToSyncData(body: Body): BodySyncData
    return body.Position
end

--[[
Formats a body into only the key things need to replicate it on the client.

@returns
Visual data for the body, such as its position, colour, etc.
]]
function Body.ToReplicationData(body: Body): BodyReplicationData
    return {
        Name = body.Name,
        Color3 = body.Color3,
        Radius = body.Radius,
        Position = body.Position
    }
end

--[[
Creates a body on the client

@returns
The body model
]]
function Body.Replicate(parent: Instance, id: number, repData: BodyReplicationData)
    local d = repData.Radius * 2
    
    local bodyPart = BodyPrefab:Clone()
    bodyPart.Name = tostring(id)
    bodyPart.Color = repData.Color3
    bodyPart.Size = Vector3.new(d,d,d)
    bodyPart.Position = repData.Position
    bodyPart.NameGui.TextLabel.Text = repData.Name
    bodyPart.Parent = parent
end

return Body
"
kngaztLf,Simulation.lua,CarpalEnderman,Lua,Sunday 14th of May 2023 03:36:14 PM CDT,"
--[[ Services ]]

local RepStore = game:GetService('ReplicatedStorage')
local RS = game:GetService('RunService')

--[[ Modules ]]

local SharedModules = RepStore:WaitForChild('SharedModules')
local SharedConfig = require(SharedModules:WaitForChild('SharedConfig'))
local RunUtils = require(SharedModules:WaitForChild('RunUtils'))
local TableUtils = require(SharedModules:WaitForChild('TableUtils'))
local Body = require(SharedModules:WaitForChild('Body'))

--[[ Events ]]

local SharedEvents = RepStore:WaitForChild('SharedEvents')

local RequestNewBody = SharedEvents:WaitForChild('RequestNewBody')
local GetAllBodyReplicationData = SharedEvents:WaitForChild('GetAllBodyReplicationData')
local GetBodyData = SharedEvents:WaitForChild('GetBodyData')
local OnBodyRegistered = SharedEvents:WaitForChild('OnBodyRegistered')
local OnBodySync = SharedEvents:WaitForChild('OnBodySync')

--[[ Variables ]]

local G = 6.6743e-11

local Bodies: { Body.Body } = {}

--[[ Functions ]]

-- Registers a new body on the server
local function RegisterBody(body: Body.Body)
    table.insert(Bodies, body)
    OnBodyRegistered:FireAllClients(body)
end

-- Steps all the physics in the server
local function Step(dt: number)
    for i = 1, #Bodies do
        local body = Bodies[i]
        
        for j = i + 1, #Bodies do
            local o_body = Bodies[j]

            local s = body.Position - o_body.Position
            local r = s.Magnitude
            body.Acceleration += o_body.Mu * s / r^3
            o_body.Acceleration += body.Mu * s / r^3
        end

        body.Velocity += body.Acceleration * dt
    end

    -- modify positions only after all velocity calcs so its all done in a static frame
    for _, body in Bodies do
        body.Position = body.Velocity * dt
    end
end

--[[ Main ]]

-- perform physics
RS.Stepped:Connect(function(_, dt)
    Step(dt)
end)

-- replicate
RunUtils.SetInterval(SharedConfig.BodySyncInterval, function()
    if #Bodies == 0 then return end
    
    local syncData = TableUtils.Map(Bodies, Body.ToSyncData)
    OnBodySync:FireAllClients(syncData)
end)


--[[
Handles a player requesting to create a new body.

@params
mu      Standard Gravitational Parameter

@returns
bool    Whether the request was accepted
]]
RequestNewBody.OnServerInvoke = function(player: Player, body: Body.Body): boolean
    Body.Register(Bodies, body)
    return true
end


--[[
@returns
The current bodies and their states.
]]
GetAllBodyReplicationData.OnServerInvoke = function(player: Player): { Body.BodyReplicationData }
    return TableUtils.Map(Bodies, Body.ToReplicationData)
end

--[[
@returns
The data for the requested body.
]]
GetBodyData.OnServerInvoke = function(player: Player, id: number): Body.Body
    return Bodies[id]
end

"
VTWiCdT6,Untitled,Salvens,C++,Sunday 14th of May 2023 03:31:59 PM CDT,"#include <algorithm>
#include <iostream>
#include <iomanip>
#include <cmath>
#include <vector>
#include <set>
#include <map>
#include <string>
#include <cassert>
#include <numeric>
#include <queue>
using namespace std;

#define int long long
#define IOS ios::sync_with_stdio(false); cin.tie(0); cout.tie(0);

const long long INF = 1e18 + 7;
const double EPS = 1e-9;
const int N = 1000;
const int MOD = 1e9 + 7;

int a[N][N], ans[N][N];
int units;

void read(int n) {
    for (int i = 0; i < n; ++i) {
        for (int j = 0; j < n; ++j) {
            char c;
            cin >> c;
            a[i][j] = (int)(c - '0');
        }
    }
}

void solve() {
    int n;
    cin >> n;
    read(n);

    for (int i = n - 1; i >= 0; --i) {
        for (int j = i + 1; j < n; ++j) {
            bool print = false;
            if (i + 1 == j) {
                ans[i][j] = a[i][j];
                continue;
            }
            int s = 0;
            for (int k = i + 1; k < j; ++k)  {
                s += (ans[k][j] != 1) ? 0: a[i][k];
                units = s % 10;
            }
            if (a[i][j] == (units + 1) % 10) {
                ans[i][j] = 1;
            } else {
                ans[i][j] = 0;
            }
        }
    }
//    cout << 123 << endl;
    for (int i = 0; i < n; ++i) {
        for (int j = 0; j < n; ++j) {
            cout << ans[i][j];
        }
        cout << '\n';
    }
}

int32_t main() {
    IOS;

    int tt = 1;
//    cin >> t;
    while (tt--) {
        solve();
    }
    return 0;
}

/*
1.  数组开够了没
2.  文件名写对了没，文件夹建了吗
3.  内存会不会MLE
4.  多测清空？
5.  调试删干净了没
6.  取模有没有溢出
7.  快速幂底数要取模，幂对 mod-1 取模
8.  前向星和欧拉序要开2倍数组
9.  比较函数如果值相同的话有没有第二优先级
10. 线段树 4 倍空间，线段树合并和可持久化线段树 32 倍空间
11. 看清楚 log 的底数是啥，log后面的数是啥
12. long long 只有正负 2^63-1
*/

"
QhDwLEAw,Untitled,Overwtime,Java,Sunday 14th of May 2023 03:13:32 PM CDT,"@Override
    public void onEnable() {
		loadConfig();
		PluginManager pm = getServer().getPluginManager();
        String url = ""jdbc:mysql://"" + hostname + ""/"" + database + connectionParameters;
        try {
            connection = DriverManager.getConnection(url, user, password);
            logger.info(""Successfully connected to database!"");
        } catch (SQLException e) {
        	logger.severe(""Failed to connect to database!"");
            e.printStackTrace();
            pm.disablePlugin(this);
        }
        try (Statement statement = connection.createStatement()) {
            statement.executeUpdate(
                ""CREATE TABLE IF NOT EXISTS players (""
                + ""id INT AUTO_INCREMENT PRIMARY KEY,""
                + ""Players VARCHAR(255) NOT NULL,""
                + ""Time BIGINT NOT NULL""
                + "")"");
            logger.info(""Table 'players' created successfully."");
        } catch (SQLException e) {
            getLogger().severe(""Failed to create table 'players'!"");
            e.printStackTrace();
        }
        try (Statement statement = connection.createStatement()) {
            statement.executeUpdate(
                ""CREATE TABLE IF NOT EXISTS Time (""
                + ""id INT AUTO_INCREMENT PRIMARY KEY,""
                + ""Players VARCHAR(255) NOT NULL,""
                + ""Time BIGINT NOT NULL""
                + "")"");
            logger.info(""Table 'Time' created successfully."");
        } catch (SQLException e) {
            getLogger().severe(""Failed to create table 'Time'!"");
            e.printStackTrace();
        }
        pm.registerEvents(new EventListener(this), this);
    }
	
	public void loadConfig() {
		saveDefaultConfig();
		FileConfiguration config = getConfig();
		sessiontime = config.getInt(""sessiontime"");
		ConfigurationSection storage = config.getConfigurationSection(""storage"");
		hostname = storage.getString(""hostname"");
		user = storage.getString(""user"");
		password = storage.getString(""password"");
		database = storage.getString(""database"");
		connectionParameters = storage.getString(""connection-parameters"");
	}

    @Override
    public void onDisable() {
        // Закрытие соединения с базой данных
        try {
            if (connection != null && !connection.isClosed()) {
                connection.close();
                logger.info(""Successfully closed database connection!"");
            }
        } catch (SQLException e) {
        	logger.severe(""Failed to close database connection!"");
            e.printStackTrace();
        }
    }"
F7Z0Tkkk,Untitled,Overwtime,Java,Sunday 14th of May 2023 03:13:02 PM CDT,"public class Database {
	
	private final Main plugin;
	
	public Database(Main instance) {
	    this.plugin = instance;
	}
	
	public void addPlayer(String player, long time) {
	    // Проверяем, существует ли игрок в базе данных
	    if (isInDatabase(player)) {
	        plugin.logger.warning(""Player "" + player + "" is already in database!"");
	        return;
	    }
	    // Добавляем игрока в базу данных
	    String query = ""INSERT INTO players (Players, Time) VALUES (?, ?)"";
	    try (PreparedStatement statement = plugin.connection.prepareStatement(query)) {
	        statement.setString(1, player);
	        statement.setLong(2, time);
	        statement.executeUpdate();
	    } catch (SQLException e) {
	        plugin.logger.severe(""Failed to add player to database!"");
	        e.printStackTrace();
	    }
	}

	public boolean removePlayer(String player) {
	    String query = ""DELETE FROM players WHERE Players = ?"";
	    try (PreparedStatement statement = plugin.connection.prepareStatement(query)) {
	        statement.setString(1, player);
	        int rowsDeleted = statement.executeUpdate();
	        return rowsDeleted > 0;
	    } catch (SQLException e) {
	        plugin.logger.severe(""Failed to remove player from database!"");
	        e.printStackTrace();
	    }

	    return false;
	}

	public long getPlayerTime(String player) {
		long time = -1;
	    String query = ""SELECT Time FROM players WHERE Players = ?"";
	    try (PreparedStatement statement = plugin.connection.prepareStatement(query)) {
	        statement.setString(1, player);
	        ResultSet resultSet = statement.executeQuery();
	        if (resultSet.next()) {
	        	time = resultSet.getLong(""Time"");
	        }
	    } catch (SQLException e) {
	        plugin.logger.severe(""Failed to get player time from database!"");
	        e.printStackTrace();
	    }
	    return time;
	}

    public boolean isInDatabase(String player) {
        // Проверка наличия таблицы ""players"" в базе данных
        if (!isTableExists()) {
            return false;
        }
        // Проверка наличия игрока в базе данных
        String query = ""SELECT COUNT(*) FROM players WHERE Players = ?"";
        try (PreparedStatement statement = plugin.connection.prepareStatement(query)) {
            statement.setString(1, player);
            ResultSet resultSet = statement.executeQuery();
            resultSet.next();
            int count = resultSet.getInt(1);
            return count > 0;
        } catch (SQLException e) {
            plugin.logger.severe(""Failed to check if player is in database!"");
            e.printStackTrace();
        }

        return false;
    }
    
    public boolean isTableExists() {
        try (ResultSet resultSet = plugin.connection.getMetaData().getTables(null, null, ""players"", null)) {
            return resultSet.next();
        } catch (SQLException e) {
            plugin.logger.severe(""Failed to check if table exists!"");
            e.printStackTrace();
        }
        return false;
    }

}"
0v5RJdjX,Untitled,Nikita051,C++,Sunday 14th of May 2023 02:48:07 PM CDT,"#include <iostream>
using namespace std;

int main()
{
	setlocale(0, """");
	int weight, height;
	cout << ""Введите свой вес: "";
	cin >> weight;
	cout << ""Введите свой рост: "";
	cin >> height;

	if (40 <= weight <= 47 && 145 <= height <= 159) {
		cout << ""XXS"";
	}
	else if (46 <= weight <= 53 && 152 <= height <= 165) {
		cout << ""XS"";
	}
	else if (54 <= weight <= 59 && 160 <= height <= 170) {
		cout << ""S"";
	}
	else if (60 <= weight <= 66 && 160 <= height <= 175) {
		cout << ""M"";
	}
	else if (67 <= weight <= 77 && 165 <= height <= 176) {
		cout << ""L"";
	}
	else if (75 <= weight <= 82 && 168 <= height <= 180) {
		cout << ""XL"";
	}
	cout << "" Ваш вес - "" << weight << "" Ваш рост - "" << height;
}
"
Zc0qkw9z,PulverizerScript,Damber00593,Lua,Sunday 14th of May 2023 02:27:43 PM CDT,"local t = peripheral.wrap(""bottom"")
local glasses = peripheral.wrap(""top"")

while true do
	local OutS1name = "" ""
    local OutS1id = 0
    local OutS1qty = 0
	local InS1name = "" ""
	local InS1id = 0
	local InS1qty = 0

	glasses.clear()
	glasses.addBox(1,1,150,150,0xFFFFFF,0.2)
	if(t.getStackInSlot(2) == null) then
    else
        for i,v in pairs(t.getStackInSlot(2)) do
        	if (i == ""name"") then
				OutS1name = v
            elseif (i == ""id"") then
                OutS1id = v
            elseif (i == ""qty"") then
                OutS1qty = v
            end
        end
	end
	if(t.getStackInSlot(1) == null) then
    else
       	for i,v in pairs(t.getStackInSlot(1)) do
       		if (i == ""name"") then
				InS1name = v
			elseif (i == ""id"") then
				InS1id = v
        	elseif (i == ""qty"") then
           	    InS1qty = v
           	end
      	end
	end
	glasses.addText(3,10,""--------IN--------|--------OUT--------"")
   	glasses.addText(3,20,InS1name ..""(""..InS1id .."")    |    ""..OutS1name ..""(""..OutS1id.."")"")
	glasses.addText(3,30,""Qty: ""..InS1qty..""    |    Qty: ""..OutS1qty)
    sleep(1)
end"
sEga8Rej,Untitled,Salvens,C++,Sunday 14th of May 2023 01:52:59 PM CDT,"#include <algorithm>
#include <iostream>
#include <iomanip>
#include <cmath>
#include <vector>
#include <set>
#include <map>
#include <string>
#include <cassert>
#include <numeric>
#include <queue>
using namespace std;

#define int long long
#define IOS ios::sync_with_stdio(false); cin.tie(0); cout.tie(0);

const long long INF = 1e9 + 7;
const double EPS = 1e-9;
const int N = 1e5 + 1000;
const int MOD = 1e9 + 7;

struct segtree {

    vector<long long> tree;
    int size;

    void Init(int n) {
        size = 1;
        while (size < n) {
            size *= 2;
        }
        tree.assign(2 * size - 1, 0);
    }

    void Set(int i, int v, int x, int lx, int rx) {
        if (rx - lx == 1) {
            tree[x] = v;
            return;
        }
        int m = (lx + rx) / 2;
        if (i < m) {
            Set(i, v, 2 * x + 1, lx, m);
        } else {
            Set(i, v, 2 * x + 2, m, rx);
        }
        tree[x] = tree[x * 2 + 1] + tree[2 * x + 2];
    }

    void Set(int i, int v) {
        Set(i, v, 0, 0, size);
    }

    long long Sum(int l, int r, int x, int lx, int rx) {
        if (l >= rx || lx >= r) {
            return 0;
        }
        if (lx >= l && rx <= r) {
            return tree[x];
        }
        int m = (lx + rx) / 2;
        long long s1 = Sum(l, r, 2 * x + 1, lx, m);
        long long s2 = Sum(l, r, 2 * x + 2, m, rx);
        return s1 + s2;
    }

    long long Sum(int l, int r) {
        return Sum(l, r, 0, 0, size);
    }
};

void solve() {
    int n, k, d;
    cin >> n >> k >> d;
    vector<int> a(n + 1);
    for (int i = 1; i <=n; ++i) {
        cin >> a[i];
    }
    sort(a.begin() + 1, a.end());
    a[0] = a[1];

    vector<bool> dp(n + 1, false);
    dp[0] = true;

    segtree st;
    st.Init(n + 1);
    st.Set(0, 1);

    for (int i = 1; i < n + 1; ++i) {
        int r = i - k + 1;
        int l= lower_bound(a.begin(), a.end(), a[i] - d) - a.begin();
//        cout << i << ' ' << l << ' ' << r << endl;
        if (l <= r && l >= 0) {
            --l;
            int sum = st.Sum(l, r);
            if (sum) {
                dp[i] = true;
                st.Set(i, 1);
            }
        }
    }
//    for (int i = 0; i <= n; ++i) {
//        cout << a[i] << ' ';
//    }
//    cout << endl;
//    for (int i = 0; i <= n; ++i) {
//        cout << dp[i] << ' ';
//    }
//    cout << endl;
    if (dp[n]) {
        cout << ""YES\n"";
    } else {
        cout << ""NO\n"";
    }
}

int32_t main() {
    IOS;

    int tt = 1;
//    cin >> t;
    while (tt--) {
        solve();
    }
    return 0;
}

/*
1.  数组开够了没
2.  文件名写对了没，文件夹建了吗
3.  内存会不会MLE
4.  多测清空？
5.  调试删干净了没
6.  取模有没有溢出
7.  快速幂底数要取模，幂对 mod-1 取模
8.  前向星和欧拉序要开2倍数组
9.  比较函数如果值相同的话有没有第二优先级
10. 线段树 4 倍空间，线段树合并和可持久化线段树 32 倍空间
11. 看清楚 log 的底数是啥，log后面的数是啥
12. long long 只有正负 2^63-1
*/

"
DWjzhEUV,Untitled,LA_,YAML,Sunday 14th of May 2023 01:52:46 PM CDT,"switch_on_tv_and_change_input_source:
  description: Switch on TV, if off and changes TV input source
  fields:
    input_source:
      name: Input source
      required: true
      example: HW1
      selector:
        select:
          options:
          - HW1
          - HW2
          - HW3
          - HW4
          - five
          - ru.yourok.num
          - ru.kinopoisk.tv
          - ru.more.play
          - YouTube
          - unknown
  sequence:
    condition:
    - condition: state
      entity_id: media_player.androidtv
      state: off
    action:
    - service: homeassistant.turn_on
      target:
        entity_id: media_player.androidtv
    - delay: 00:00:05        
    - service: script.change_tv_input_source
      data:
        input_source: input_source"
PFpk2Efs,ka-wizz,madra,Go,Sunday 14th of May 2023 01:42:31 PM CDT,"(1)  First, some people whose names include the name ‘May’. Name those Mays.
 a HE WILL, HE WILL ROCK YOU. ROCK YOU. -- BRIAN MAY
 
 b SHE CREATED THE SISTERS MEG, JO, BETH AND AMY -- 
 
 c HE OWNS A 2015 FERRARI 458 SPECIALE, A 2010 PORSCHE 911 CARRERA S FACELIFT, A 2016 BMW I3, AND VARIOUS OTHER VEHICLES INCLUDING A VW BEACH BUGGY AND A TESLA -- JAMES MAY
 
 d COSTELLO IN RAIN DOGS, KERRY IN THIS COUNTRY AND OTTER IN THE MASKED SINGER --
 
 e MANCHESTER UNITED PAID £1.2m FOR HIM IN 1994 -- 
 
 f SPIDER-MAN’S PRIMARY CAREGIVER -- 
 
 g BRITAIN’S MOST NOTORIOUS VANDALISER OF WHEAT FIELDS -- 
 
 h AND CAN YOU REMEMBER THE NAME OF THE HUSBAND OF THE PREVIOUS ANSWER? -- 
 
(2)  Next, a celebration of various things that happen when the weather warms up and May gets into its swing (apart from the publication of The Last Devil to Die).
 a BECAUSE IT MAKES A PUN, ON WHICH DATE DO STAR WARS FANS CELEBRATE? -- 4th MAY
 
 b THE F.A. CUP FINAL IS GENERALLY PLAYED IN WEMBLEY IN THE MIDDLE OF MAY. WHERE DID IT TAKE PLACE IN SEASONS FOLLOWING THE MILLENNIUM? -- MILLENIUM STADIUM, CARDIFF
 
 c MAY MEANS EUROVISION. THE BBC HAS ARRANGED APPEARANCES IN EASTENDERS, BARGAIN HUNT AND POINTLESS FOR MEMBERS OF WHICH 1981-WINNING ACT? -- BUCKS FIZZ
 
 d LATVIA ARE NOTORIOUSLY UNLUCKY IN EUROVISION AND DIDN’T ENTER UNTIL THE YEAR 2000. THE TWO OTHER BALTIC STATES TOOK PART AS SOON AS THEY COULD, IN 1994. NAME EITHER OF THEM. -- LITHUANIA 
 
 e AND NOW NAME THE OTHER. -- ESTONIA
 
 f THE OTHER BIG MAY EVENT IS THE ONE IN WESTMINSTER ABBEY, WHICH IS HOSTING THE STONE OF DESTINY. BY WHAT OTHER NAME IS THAT STONE REFERRED TO IN SCOTLAND? -- SCONE
 
 g AND WHAT WAS THE SECOND-TO-TOP ITEM IN THE NEWS ON THE DAY OF THE PREVIOUS CORONATION? -- CONQUEST OF EVEREST
 
(3)  Now it’s time to celebrate some May birthdays. All the answers are notable for (i) having a birthday that falls in May, despite (ii) being totally fictional.
 • May 5th, 1970: CHANDLER’S PARTNER’S BROTHER’S PARTNER --
 
 • May 9th, 1955: HE PLAYS BOB CRATCHIT IN A MUPPET CHRISTMAS CAROL --
 
 • May 23th,1955: SHOELESS, VEST-WEARING THWARTER OF TERRORISTS -- 
 • May 9th, 1981: SHE WEARS A RED DRESS AND PEARLS AND PLAYS BARITONE SAX -- THAT RABBIT THING
 
 • May 29th, 1970: AVENGER SO NAMED BECAUSE OF HIS SUIT OF ARMOUR -- 
 
 • May 15th, 1959: HEAD OF DIAGNOSTIC MEDICINE, PRINCETON-PLAINSBORO TEACHING HOSPITAL --
 
 • May 28th, 1908: CAT-STROKING ANTAGONIST IN EIGHT BOND FILMS AND COUNTING -- BLOFELD
 
 • May 15th, 1990: FRASIER CHARACTER PLAYED BY ONE ACTOR AND THEN BY HIS SON --
 
(4)  Back to Eurovision. The contest has seen, of course, some extraordinary song titles. I’m sure you remember San Marino’s ‘The Social Network Song (Oh Oh, Uh, Oh Oh)’ and West Germany’s unforgettable ‘Genghis Khan’. So I’ve turned to Junior Eurovision. Below are ten entries. Five really happened. The others I’ve just made up. So tell me: Sam Ryder or Sam Lie-der?
 • ‘HE IS A BOULDER’ BY KLAARTJE & NICKY (NETHERLANDS, 2004)
 • ‘DON’T TOUCH MY TREE’ BY ANA KODRA (ALBANIA, 2017)
 • ‘TECHNO FOLK HEAVY-METAL DISCO BALLAD’ BY X-CELL (MONTENEGRO, 2013)
 • ‘WE WILL PAY YOU IF WE WIN (JUST KIDDING)’ BY PRINCE ALFONSO (SAN MARINO, 2005)
 • ‘I’D RATHER BE DEAD THAN HOMELY’ BY MARÍA ISABEL (SPAIN, 2004)
 • ‘BOSNIA AND HERZEGOVINA’ BY BOSNIA AND HERZEGOVINA (BOSNIA AND HERZEGOVINA, 2019)
 • ’FUNKY LEMONADE’ BY FUNKIDS (GEORGIA, 2012)
 • ‘I WIN EVERY CHESS GAME’ BY GRANDMASTER ZOLTAN (HUNGARY, 2015)
 • ‘BLOODY HELL’ BY THREE RUDE LASSES (AUSTRALIA, 2006)
 • ‘WE ARE LEARNING FOREIGN LANGUAGES’ BY FEARLESS FOREIGN LANGUAGE TEACHERS (SERBIA, 2006)
(5)  Last, each of the answers in this final set contains the word “May”.
 a WHICH HARD-HITTING SERIES DEVISED BY MICHAELA COEL HAS WON JUST ABOUT EVERY BAFTA GOING?
 b WHAT VESSEL DOCKED IN MASSACHUSETTS ON NOVEMBER 21ST, 1620?
 c CATHERINE ZETA-JONES GOT HER BIG BREAK IN WHICH KENT-BASED TV SERIES?
 d WHAT DOES ‘YMMV’ STAND FOR IN A CAR AD (OR WHEN USED FIGURATIVELY)?
 e WHO DOES ROD STEWART WAKE UP AT THE START OF A 1971 NUMBER-ONE SINGLE?
 f IN THE CHILDREN’S SINGING GAME, WHAT DO WE COME DOING ON A COLD AND FROSTY MORNING?
 g WHAT WARNING LABEL ALWAYS PROMPTS AMUSEMENT WHEN IT APPEARS ON A PACKET OF DRY ROASTED?"
VUfNJD75,Student,I_Mimic_I,Java,Sunday 14th of May 2023 01:26:51 PM CDT,"public record Student(String lastName, String firstName, String surname, int scoreBookNumber, boolean militaryTraining) {
}
"
KP63Vzt6,Interpolation search,I_Mimic_I,Java,Sunday 14th of May 2023 01:25:35 PM CDT,"    public static boolean isMilitaryTraining(Student[] students, int scoreBookNumber) {
        var result = find(students, 0, students.length - 1, scoreBookNumber);
        if (result == null) {
            return false;
        } else {
            return result.militaryTraining();
        }
    }

    public static Student find(Student[] students, int left, int right, int key) {
        if (left > right) {
            return null;
        }
        int median = left + (right - left) * (key - students[left].scoreBookNumber()) /
                (students[right].scoreBookNumber() - students[left].scoreBookNumber());
        if (students[median].scoreBookNumber() == key) {
            return students[median];
        }
        if (left == right) {
            return null;
        }
        if (students[median].scoreBookNumber() > key) {
            return find(students, left, median - 1, key);
        } else {
            return find(students, median + 1, right, key);
        }
    }"
VvYTQFBh,Untitled,Frogbutt,Lua,Sunday 14th of May 2023 01:24:51 PM CDT,"-- Trigger type: Custom
-- Trigger function: Event
-- Event(s): UNIT_AURA player

function(event)
    -- Get the duration and expiration time of Divine Resonance
    local name1, _, _, _, duration1, expirationTime1 = AuraUtil.FindAuraByName(""Divine Resonance"", ""player"")
    -- Get the duration and expiration time of Bestow Faith
    local name2, _, _, _, duration2, expirationTime2 = AuraUtil.FindAuraByName(""Bestow Faith"", ""player"")
    -- Check if both buffs are active
    if name1 and name2 then
        -- Calculate the remaining time of both buffs
        local remaining1 = expirationTime1 - GetTime()
        local remaining2 = expirationTime2 - GetTime()
        -- Round down the remaining time of Divine Resonance to the nearest 5 seconds
        local rounded1 = math.floor(remaining1 / 5) * 5
        -- Compare the remaining time of both buffs and return the buff with the shortest duration
        if rounded1 < remaining2 then
            -- Return Divine Resonance as the buff with the shortest duration
            aura_env.duration = rounded1 -- Store the duration in aura_env table
            aura_env.total = duration1 -- Store the total duration in aura_env table
            aura_env.name = name1 -- Store the name in aura_env table
            return true
        else
            -- Return Bestow Faith as the buff with the shortest duration
            aura_env.duration = remaining2 -- Store the duration in aura_env table
            aura_env.total = duration2 -- Store the total duration in aura_env table
            aura_env.name = name2 -- Store the name in aura_env table
            return true
        end
    else
        -- Return false if either buff is not active
        return false
    end
end

-- Untrigger function: None

-- Duration Info: Custom Function

function()
    -- Return the dynamic information of the buff with the shortest duration from aura_env table
    return aura_env.duration, aura_env.total, aura_env.name
end"
0YvwJh8B,Binary sort,I_Mimic_I,Java,Sunday 14th of May 2023 01:24:10 PM CDT,"    public static void bubbleSort(Student[] students) {
        for (var i = 0; i < students.length; i++) {
            for (var j = 0; j < students.length - i - 1; j++) {
                if (students[j + 1].militaryTraining() && !students[j].militaryTraining()) {
//                if (students[j + 1].scoreBookNumber() < students[j].scoreBookNumber()) {
                    var temp = students[j];
                    students[j] = students[j + 1];
                    students[j + 1] = temp;
                }
            }
        }
    }"
rDxfEAYx,Directory Tree,Zgragselus,C++,Sunday 14th of May 2023 12:52:13 PM CDT,"void DirectoryTree::ProcessFile(Record* r, const std::string& file, const std::vector<std::string>& files)
{
	Engine::LoaderDevIL textureLoader(mLog);
	Engine::LoaderAssimp modelLoader(mLog, mRenderer);
	modelLoader.SetManagers(mMeshManager, mModelManager, mTextureManager);
	modelLoader.SetTextureHeap(mRenderer->Heap(), nullptr);

	if ((file.find("".tga"") != std::string::npos) || (file.find("".png"") != std::string::npos))
	{
		Engine::Manager<Engine::Texture>::Node* node = mTextureManager->GetNode(file);

		Engine::LoaderDevIL::Image* image = textureLoader.Load(file);
		if (image != nullptr)
		{
			image->mUseAlphaMipmap = false;
			textureLoader.GenerateMipmaps(image);
		}
		Engine::Texture* t = new Engine::Texture(file);
		t->InitMipmaps(mRenderer, image->mWidth, image->mHeight, 1, image->mMipLevels, Engine::Graphics::RGBA8, (const void**)image->mMipmaps);
		t->SetName(file);
		if (node == nullptr)
		{
			mTextureManager->Insert<Engine::Texture>(file, t);
			node = mTextureManager->GetNode(file);
		}
		else
		{
			delete node->mItem;
			node->mItem = t;
		}
		delete image;

		r->mResourceType = ResourceType::TEXTURE;
		r->mResource = node;
	}
	else if (file.find("".obj"") != std::string::npos)
	{
		Engine::Manager<Engine::Model>::Node* node = mModelManager->GetNode(file);

		Engine::Model* mdl = modelLoader.Load(file);
		if (node == nullptr)
		{
			mModelManager->Insert<Engine::Model>(file, mdl);
			node = mModelManager->GetNode(file);
		}
		else
		{
			delete node->mItem;
			node->mItem = mdl;
		}
		
		r->mResourceType = ResourceType::MODEL;
		r->mResource = node;
	}
	else if (file.find("".cpp"") != std::string::npos)
	{
		// Check if there isn't dll that corresponds to the cpp file
		bool compile = true;
		for (size_t i = 0; i < files.size(); i++)
		{
			if ((files[i].substr(0, files[i].length() - 4) == file.substr(0, file.length() - 4)) &&
				(files[i].find("".dll"") != std::string::npos))
			{
				// If such dll exists, check if its write time is greater than cpp write time
				if (Engine::Files::GetWriteTime(files[i]) > Engine::Files::GetWriteTime(file))
				{
					// In such case our dll is most-recent version of the script, we don't need to compile
					compile = false;
				}
			}
		}

		// If we need to compile, build the dll
		if (compile)
		{
			// TODO: Compiler call
			// Temporary hard-coded compiler
			std::string command = std::string(""\""C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Auxiliary/Build/vcvarsall.bat/\"" amd64 && \
				\""C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.20.27508/bin/Hostx64/x64/cl.exe/\"" /O2 /EHsc /GL /MD /I \
				\""../../../Source/\"" \
				/LD \
				DemoController.cpp \
				\""../../../Bin64/Core.lib\"" \
				DemoController.dll > Build.log"");

			// Compile
			//system(command.c_str());
		}
	}
	else if (file.find("".dll"") != std::string::npos)
	{
		Engine::Manager<Engine::Plugin>::Node* node = mPluginManager->GetNode(file);

		mLog->Print(""Plugin"", std::string(""Loading plugin: "") + file);
		Engine::Plugin* plugin = new Engine::Plugin(file);
		void* create = plugin->GetProc<void*>(""CreateBehavior"");
		void* name = plugin->GetProc<void*>(""GetName"");
		const char* (*fn)() = (const char*(*)())name;
		const char* pluginName = (*fn)();

		if (create == nullptr || name == nullptr)
		{
			mLog->Print(""Plugin"", std::string(""CreateBehavior or GetName function not found!""));
			delete plugin;
		}
		else
		{
			mLog->Print(""Plugin"", std::string(""CreateBehavior and GetName function found!""));
			mLog->Print(""Plugin"", std::string(""Initializing plugin with name: "") + pluginName);

			if (node == nullptr)
			{
				mPluginManager->Insert<Engine::Plugin>(file, plugin);
				node = mPluginManager->GetNode(file);

				//Engine::ComponentTypeId::Get(pluginName);
			}
			else
			{
				delete node->mItem;
				node->mItem = plugin;
			}

			r->mResourceType = ResourceType::SCRIPT;
			r->mResource = node;
		}
	}
}"
y0suugjr,Arduino morse keyer circuit for paddle,zamzara,C,Sunday 14th of May 2023 12:45:20 PM CDT,"// keyer circuit for paddle key to drive straight key input

// pins for I/O connectors
#define DOT_IN     10
#define DASH_IN    11
#define KEY_OUT    12
#define LAMP_OUT   13

//potential improvement - add a trimemr pot for wpm
#define WPM          15

// WPM -> ms per dot unit, 50 units is a word
#define DOT_LENGTH   60000/(WPM*50) //ms

void setup() {
  // put your setup code here, to run once:
  pinMode(DOT_IN, INPUT_PULLUP);
  pinMode(DASH_IN, INPUT_PULLUP);
  pinMode(KEY_OUT, OUTPUT);
  pinMode(LAMP_OUT, OUTPUT);
  digitalWrite(KEY_OUT, 1);
  digitalWrite(LAMP_OUT, 0);
  test();
  test();
  test();
}

void loop() {
  bool  dot  = digitalRead(DOT_IN);
  bool  dash = digitalRead(DASH_IN);
  
  // NB both inputs and output are active low
  
  if(dot==0 && dash==1)
  {
    send_dot();
  }
  if(dot==1 && dash==0)
  {
    send_dash();
  }
  // tuning tone if both pushed, I don't do iambic mode
  if(dot==0 && dash==0)
  {
    digitalWrite(KEY_OUT, 0);
    digitalWrite(LAMP_OUT, 1);
  }
  if(dot==1 && dash==1)
  {
    digitalWrite(KEY_OUT, 1);
    digitalWrite(LAMP_OUT, 0);
  }
}

void send_dot() {
  digitalWrite(KEY_OUT, 0);
  digitalWrite(LAMP_OUT, 1);
  delay(DOT_LENGTH);
  digitalWrite(KEY_OUT, 1);
  digitalWrite(LAMP_OUT, 0);
  delay(DOT_LENGTH);
}

void send_dash() {
  digitalWrite(KEY_OUT, 0);
  digitalWrite(LAMP_OUT, 1);
  delay(DOT_LENGTH * 3);
  digitalWrite(KEY_OUT, 1);
  digitalWrite(LAMP_OUT, 0);
  delay(DOT_LENGTH);
}

void test() {
  digitalWrite(LAMP_OUT,1);
  delay(50);
  digitalWrite(LAMP_OUT,0);
  delay(100);
}"
XPKKBbEz,Simple Go object with functional programming,cydside,Go,Sunday 14th of May 2023 12:45:04 PM CDT,"// person/person.go
package person

type Person struct {
    name string
    age  int
}

type PersonOption func(*Person)

func WithName(name string) PersonOption {
    return func(p *Person) {
        p.name = name
    }
}

func WithAge(age int) PersonOption {
    return func(p *Person) {
        p.age = age
    }
}

func NewPerson(opts ...PersonOption) *Person {
    p := &Person{}
    for _, opt := range opts {
        opt(p)
    }
    return p
}

//___________________________________________________________________________________________________

// main/main.go
package main

import (
    ""fmt""
    ""person""
)

func main() {
    p := person.NewPerson(
        person.WithName(""Alice""),
        person.WithAge(30),
    )
    fmt.Printf(""Name: %s, Age: %d\n"", p.name, p.age)
}



"
NL239hET,Demo Component,Zgragselus,C++,Sunday 14th of May 2023 12:42:19 PM CDT,"#include ""Game/Entity/Component.h""
#include ""Core/Plugin/Reflection.h""

char mName[] = ""DemoController"";

class DemoController : public Engine::Component
{
public:
	float mValue;

	virtual bool Editor(std::string& prev, std::string& next)
	{
		return false;
	}

	virtual void Start()
	{
		mValue = 0.0f;
	}

	virtual void Update(float deltaTime)
	{
		mValue += 1.0f / 60.0f;
		if (mValue > 1.0f)
		{
			mValue -= 1.0f;
		}
	}

	virtual std::string Serialize()
	{
		return """";
	}

	virtual void Deserialize(const std::string& data)
	{

	}

	REFLECT()
};

REFLECT_STRUCT_BEGIN(DemoController)
REFLECT_STRUCT_MEMBER(mValue)
REFLECT_STRUCT_END()

extern ""C"" __declspec(dllexport) Engine::Component* CreateBehavior()
{
	Engine::Component* component = new DemoController();
	return component;
}

extern ""C"" __declspec(dllexport) const char* GetName()
{
	return mName;
}"
XeRERh8d,Base component class,Zgragselus,C++,Sunday 14th of May 2023 12:41:30 PM CDT,"#ifndef __COMPONENT__H__
#define __COMPONENT__H__

#include ""Core/Memory/Memory.h""
#include ""Core/Util/String.h""

namespace Engine
{
	// Toplevel component class used as a base-class for Entity-components
	class __declspec(align(16)) Component
	{
	private:
		static std::string mComponentName;

	protected:
		Component() = default;

	public:
		virtual ~Component() {}

		static std::string& GetName() { return mComponentName; }

		virtual bool Editor(std::string& prev, std::string& next) = 0;

		virtual std::string Serialize() = 0;

		virtual void Deserialize(const std::string&) = 0;

		virtual void Update(float deltaTime) = 0;

		ALIGNED_NEW_DELETE(""Engine::Component"")
	};
}

#endif"
nmWUCFXJ,Untitled,rembocoder,C++,Sunday 14th of May 2023 12:36:36 PM CDT,"#include <bits/stdc++.h>

using namespace std;

#define int int64_t

int32_t main() {
    ios_base::sync_with_stdio(false);
    cin.tie(0); cout.tie(0);
    int n;
    cin >> n;
    vector<int> a(n);
    for (int i = 0; i < n; i++) {
        cin >> a[i];
    }
    vector<int> dp(n, 1);
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < i; j++) {
            if (a[j] < a[i]) {
                dp[i] = max(dp[i], dp[j] + 1);
            }
        }
    }
    int ans = 0;
    for (int i = 0; i < n; i++) {
        ans = max(ans, dp[i]);
    }
    cout << ans << '\n';
}"
jb8Pb8YK,Nigerian scammers [14-5-2/2023],bombaires,HTML,Sunday 14th of May 2023 12:35:44 PM CDT,"<a href=""mailto:mrsjasminewalsh1222@gmail.com"">mrsjasminewalsh1222@gmail.com</a>
<a href=""mailto:mrs.j.as.m.in.e.wa.lsh.12.22@gmail.com"">mrs.j.as.m.in.e.wa.lsh.12.22@gmail.com</a>
<a href=""mailto:m.rs.jas.min.ew.als.h1.222@gmail.com"">m.rs.jas.min.ew.als.h1.222@gmail.com</a>
<a href=""mailto:mrsja.sminewa.ls.h.12.22@gmail.com"">mrsja.sminewa.ls.h.12.22@gmail.com</a>
<a href=""mailto:mr.sjasmi.n.e.wal.sh122.2@gmail.com"">mr.sjasmi.n.e.wal.sh122.2@gmail.com</a>
<a href=""mailto:mr.s.jas.m.i.ne.w.al.sh.1.2.2.2@gmail.com"">mr.s.jas.m.i.ne.w.al.sh.1.2.2.2@gmail.com</a>
<a href=""mailto:mr.sj.a.sm.ine.wals.h.1222@gmail.com"">mr.sj.a.sm.ine.wals.h.1222@gmail.com</a>
<a href=""mailto:mrs.jasmi.ne.w.a.lsh1222@gmail.com"">mrs.jasmi.ne.w.a.lsh1222@gmail.com</a>
<a href=""mailto:m.r.sj.asm.in.ew.a.ls.h12.2.2@gmail.com"">m.r.sj.asm.in.ew.a.ls.h12.2.2@gmail.com</a>
<a href=""mailto:m.rs.ja.s.m.in.ewalsh.122.2@gmail.com"">m.rs.ja.s.m.in.ewalsh.122.2@gmail.com</a>
<a href=""mailto:m.r.s.j.as.min.e.wa.lsh.122.2@gmail.com"">m.r.s.j.as.min.e.wa.lsh.122.2@gmail.com</a>
<a href=""mailto:mrsj.asmin.ewals.h1.2.2.2@gmail.com"">mrsj.asmin.ewals.h1.2.2.2@gmail.com</a>
<a href=""mailto:m.r.s.ja.sm.in.ew.a.lsh.12.2.2@gmail.com"">m.r.s.ja.sm.in.ew.a.lsh.12.2.2@gmail.com</a>
<a href=""mailto:m.rs.j.as.mi.ne.wal.s.h12.2.2@gmail.com"">m.rs.j.as.mi.ne.wal.s.h12.2.2@gmail.com</a>
<a href=""mailto:m.rs.j.asmine.w.a.l.sh12.22@gmail.com"">m.rs.j.asmine.w.a.l.sh12.22@gmail.com</a>
<a href=""mailto:mrs.j.asmine.w.al.sh1222@gmail.com"">mrs.j.asmine.w.al.sh1222@gmail.com</a>
<a href=""mailto:m.rsjasm.i.n.ewa.lsh1.2.2.2@gmail.com"">m.rsjasm.i.n.ewa.lsh1.2.2.2@gmail.com</a>
<a href=""mailto:m.rsja.s.minew.al.s.h.1.2.2.2@gmail.com"">m.rsja.s.minew.al.s.h.1.2.2.2@gmail.com</a>
<a href=""mailto:mrs.jas.mine.w.al.sh1.22.2@gmail.com"">mrs.jas.mine.w.al.sh1.22.2@gmail.com</a>
<a href=""mailto:m.r.s.j.a.s.m.in.ew.a.l.s.h.12.22@gmail.com"">m.r.s.j.a.s.m.in.ew.a.l.s.h.12.22@gmail.com</a>
<a href=""mailto:m.r.sja.s.m.in.ewalsh12.22@gmail.com"">m.r.sja.s.m.in.ewalsh12.22@gmail.com</a>
<a href=""mailto:mrs.j.asm.ine.w.al.s.h1.22.2@gmail.com"">mrs.j.asm.ine.w.al.s.h1.22.2@gmail.com</a>
<a href=""mailto:mrsja.s.m.ine.wa.lsh.12.22@gmail.com"">mrsja.s.m.ine.wa.lsh.12.22@gmail.com</a>
<a href=""mailto:m.rsj.as.mine.w.a.l.sh.12.22@gmail.com"">m.rsj.as.mine.w.a.l.sh.12.22@gmail.com</a>
<a href=""mailto:mrsjasm.i.n.e.wa.l.sh.1.2.2.2@gmail.com"">mrsjasm.i.n.e.wa.l.sh.1.2.2.2@gmail.com</a>
<a href=""mailto:m.r.sj.asmin.e.w.a.l.s.h1222@gmail.com"">m.r.sj.asmin.e.w.a.l.s.h1222@gmail.com</a>
<a href=""mailto:m.rsjasm.i.n.ew.a.l.sh1.22.2@gmail.com"">m.rsjasm.i.n.ew.a.l.sh1.22.2@gmail.com</a>
<a href=""mailto:m.r.s.jasm.in.e.wa.ls.h.1.22.2@gmail.com"">m.r.s.jasm.in.e.wa.ls.h.1.22.2@gmail.com</a>
<a href=""mailto:m.r.sjasmi.n.e.w.a.lsh.1.22.2@gmail.com"">m.r.sjasmi.n.e.w.a.lsh.1.22.2@gmail.com</a>
<a href=""mailto:mrs.j.as.m.in.ewa.lsh12.22@gmail.com"">mrs.j.as.m.in.ewa.lsh12.22@gmail.com</a>
<a href=""mailto:m.r.sj.a.s.mine.w.a.lsh122.2@gmail.com"">m.r.sj.a.s.mine.w.a.lsh122.2@gmail.com</a>
<a href=""mailto:mrs.jas.m.i.n.ew.a.l.sh.1.2.2.2@gmail.com"">mrs.jas.m.i.n.ew.a.l.sh.1.2.2.2@gmail.com</a>
<a href=""mailto:m.r.sja.sm.in.e.w.a.lsh.12.2.2@gmail.com"">m.r.sja.sm.in.e.w.a.lsh.12.2.2@gmail.com</a>
<a href=""mailto:mr.sj.as.m.i.n.e.w.alsh12.2.2@gmail.com"">mr.sj.as.m.i.n.e.w.alsh12.2.2@gmail.com</a>
<a href=""mailto:m.r.s.ja.s.m.i.ne.w.alsh.122.2@gmail.com"">m.r.s.ja.s.m.i.ne.w.alsh.122.2@gmail.com</a>
<a href=""mailto:m.rsjasmi.newals.h.1222@gmail.com"">m.rsjasmi.newals.h.1222@gmail.com</a>
<a href=""mailto:m.rsja.smin.ew.al.sh1.2.2.2@gmail.com"">m.rsja.smin.ew.al.sh1.2.2.2@gmail.com</a>
<a href=""mailto:mr.sj.as.mi.new.al.s.h.12.22@gmail.com"">mr.sj.as.mi.new.al.s.h.12.22@gmail.com</a>
<a href=""mailto:m.rsja.sm.inewa.lsh12.22@gmail.com"">m.rsja.sm.inewa.lsh12.22@gmail.com</a>
<a href=""mailto:mr.sjasm.in.e.w.a.ls.h1.22.2@gmail.com"">mr.sjasm.in.e.w.a.ls.h1.22.2@gmail.com</a>
<a href=""mailto:mrs.jasm.i.n.ewal.s.h.1.22.2@gmail.com"">mrs.jasm.i.n.ewal.s.h.1.22.2@gmail.com</a>
<a href=""mailto:m.rs.j.a.smin.ew.al.sh1.2.22@gmail.com"">m.rs.j.a.smin.ew.al.sh1.2.22@gmail.com</a>
<a href=""mailto:mrsj.a.s.mi.ne.w.a.l.sh1.22.2@gmail.com"">mrsj.a.s.mi.ne.w.a.l.sh1.22.2@gmail.com</a>
<a href=""mailto:mr.s.j.asm.in.ew.a.lsh.1.22.2@gmail.com"">mr.s.j.asm.in.ew.a.lsh.1.22.2@gmail.com</a>
<a href=""mailto:m.rs.j.a.smi.ne.w.a.lsh.1.2.22@gmail.com"">m.rs.j.a.smi.ne.w.a.lsh.1.2.22@gmail.com</a>
<a href=""mailto:m.r.sj.as.m.i.n.e.wal.s.h1.2.22@gmail.com"">m.r.sj.as.m.i.n.e.wal.s.h1.2.22@gmail.com</a>
<a href=""mailto:m.rs.ja.sm.in.ewa.l.s.h122.2@gmail.com"">m.rs.ja.sm.in.ewa.l.s.h122.2@gmail.com</a>
<a href=""mailto:mr.sj.a.sm.in.ewa.l.s.h1.2.22@gmail.com"">mr.sj.a.sm.in.ewa.l.s.h1.2.22@gmail.com</a>
<a href=""mailto:m.r.sj.a.sm.i.new.als.h.1.222@gmail.com"">m.r.sj.a.sm.i.new.als.h.1.222@gmail.com</a>
<a href=""mailto:m.r.sjasm.i.ne.w.alsh1222@gmail.com"">m.r.sjasm.i.ne.w.alsh1222@gmail.com</a>
<a href=""mailto:m.rs.jas.mi.new.a.l.sh.122.2@gmail.com"">m.rs.jas.mi.new.a.l.sh.122.2@gmail.com</a>
<a href=""mailto:mrsja.s.min.e.wa.l.s.h.1.222@gmail.com"">mrsja.s.min.e.wa.l.s.h.1.222@gmail.com</a>
<a href=""mailto:mr.s.j.a.s.mi.n.ewal.s.h.1222@gmail.com"">mr.s.j.a.s.mi.n.ewal.s.h.1222@gmail.com</a>
<a href=""mailto:mr.sj.asmi.newals.h1.2.22@gmail.com"">mr.sj.asmi.newals.h1.2.22@gmail.com</a>
<a href=""mailto:m.rsj.a.s.m.in.ew.a.l.sh122.2@gmail.com"">m.rsj.a.s.m.in.ew.a.l.sh122.2@gmail.com</a>
<a href=""mailto:m.rs.ja.sm.inew.al.sh12.22@gmail.com"">m.rs.ja.sm.inew.al.sh12.22@gmail.com</a>
<a href=""mailto:m.r.s.j.a.s.mine.w.als.h12.2.2@gmail.com"">m.r.s.j.a.s.mine.w.als.h12.2.2@gmail.com</a>
<a href=""mailto:m.r.sja.sm.in.ewalsh1.2.22@gmail.com"">m.r.sja.sm.in.ewalsh1.2.22@gmail.com</a>
<a href=""mailto:m.r.sja.sm.i.ne.w.a.l.s.h12.2.2@gmail.com"">m.r.sja.sm.i.ne.w.a.l.s.h12.2.2@gmail.com</a>
<a href=""mailto:mrs.j.a.s.mi.n.e.wal.s.h.1.2.22@gmail.com"">mrs.j.a.s.mi.n.e.wal.s.h.1.2.22@gmail.com</a>
<a href=""mailto:m.rsj.asminewa.lsh1.2.22@gmail.com"">m.rsj.asminewa.lsh1.2.22@gmail.com</a>
<a href=""mailto:mr.s.jasm.i.n.e.w.alsh.1222@gmail.com"">mr.s.jasm.i.n.e.w.alsh.1222@gmail.com</a>
<a href=""mailto:mrsj.a.sm.in.ew.alsh.1.2.2.2@gmail.com"">mrsj.a.sm.in.ew.alsh.1.2.2.2@gmail.com</a>
<a href=""mailto:m.r.s.j.as.m.i.newa.l.sh12.22@gmail.com"">m.r.s.j.as.m.i.newa.l.sh12.22@gmail.com</a>
<a href=""mailto:mr.sjas.min.ewa.ls.h122.2@gmail.com"">mr.sjas.min.ewa.ls.h122.2@gmail.com</a>
<a href=""mailto:m.r.sjasm.in.e.w.a.l.sh1.222@gmail.com"">m.r.sjasm.in.e.w.a.l.sh1.222@gmail.com</a>
<a href=""mailto:mr.sj.a.sm.i.n.e.w.a.lsh1222@gmail.com"">mr.sj.a.sm.i.n.e.w.a.lsh1222@gmail.com</a>
<a href=""mailto:m.rsj.a.smi.n.e.w.a.l.s.h122.2@gmail.com"">m.rsj.a.smi.n.e.w.a.l.s.h122.2@gmail.com</a>
<a href=""mailto:mr.s.j.asm.i.n.ewa.l.s.h122.2@gmail.com"">mr.s.j.asm.i.n.ewa.l.s.h122.2@gmail.com</a>
<a href=""mailto:mr.s.j.a.s.minewa.l.s.h12.22@gmail.com"">mr.s.j.a.s.minewa.l.s.h12.22@gmail.com</a>
<a href=""mailto:mrs.ja.s.mi.ne.w.al.s.h.1.2.2.2@gmail.com"">mrs.ja.s.mi.ne.w.al.s.h.1.2.2.2@gmail.com</a>
<a href=""mailto:mrs.ja.s.m.i.newa.l.sh.1.2.22@gmail.com"">mrs.ja.s.m.i.newa.l.sh.1.2.22@gmail.com</a>
<a href=""mailto:m.r.sj.asmine.wal.sh.1.2.22@gmail.com"">m.r.sj.asmine.wal.sh.1.2.22@gmail.com</a>
<a href=""mailto:m.r.s.j.a.s.m.i.n.e.w.a.l.s.h.1.2.22@gmail.com"">m.r.s.j.a.s.m.i.n.e.w.a.l.s.h.1.2.22@gmail.com</a>
<a href=""mailto:m.rsj.asmin.e.walsh122.2@gmail.com"">m.rsj.asmin.e.walsh122.2@gmail.com</a>
<a href=""mailto:m.rs.j.asm.i.n.ew.a.l.s.h122.2@gmail.com"">m.rs.j.asm.i.n.ew.a.l.s.h122.2@gmail.com</a>
<a href=""mailto:m.rsj.asmi.n.e.wal.sh.1.22.2@gmail.com"">m.rsj.asmi.n.e.wal.sh.1.22.2@gmail.com</a>
<a href=""mailto:m.r.s.j.asmin.e.w.a.l.sh1.222@gmail.com"">m.r.s.j.asmin.e.w.a.l.sh1.222@gmail.com</a>
<a href=""mailto:mrsj.as.m.i.n.ew.alsh1.2.2.2@gmail.com"">mrsj.as.m.i.n.ew.alsh1.2.2.2@gmail.com</a>
<a href=""mailto:mrsja.s.m.i.n.ew.al.s.h.12.2.2@gmail.com"">mrsja.s.m.i.n.ew.al.s.h.12.2.2@gmail.com</a>
<a href=""mailto:mrs.j.a.s.m.i.newa.l.s.h1.2.22@gmail.com"">mrs.j.a.s.m.i.newa.l.s.h1.2.22@gmail.com</a>
<a href=""mailto:mr.sj.a.s.m.in.e.w.a.ls.h.1.2.2.2@gmail.com"">mr.sj.a.s.m.in.e.w.a.ls.h.1.2.2.2@gmail.com</a>
<a href=""mailto:m.r.s.ja.smi.new.a.ls.h1222@gmail.com"">m.r.s.ja.smi.new.a.ls.h1222@gmail.com</a>
<a href=""mailto:mr.s.ja.s.m.i.newal.s.h.1.2.2.2@gmail.com"">mr.s.ja.s.m.i.newal.s.h.1.2.2.2@gmail.com</a>
<a href=""mailto:mrsjas.m.i.n.e.wa.l.sh1.2.2.2@gmail.com"">mrsjas.m.i.n.e.wa.l.sh1.2.2.2@gmail.com</a>
<a href=""mailto:mrsja.s.m.i.n.e.wal.sh.1.222@gmail.com"">mrsja.s.m.i.n.e.wal.sh.1.222@gmail.com</a>
<a href=""mailto:m.rs.ja.smi.n.ewa.l.s.h1.2.2.2@gmail.com"">m.rs.ja.smi.n.ewa.l.s.h1.2.2.2@gmail.com</a>
<a href=""mailto:m.rsjas.minew.al.s.h12.2.2@gmail.com"">m.rsjas.minew.al.s.h12.2.2@gmail.com</a>
<a href=""mailto:mr.sj.as.m.in.e.wa.lsh1.22.2@gmail.com"">mr.sj.as.m.in.e.wa.lsh1.22.2@gmail.com</a>
<a href=""mailto:m.rs.ja.s.m.ine.wa.l.sh12.2.2@gmail.com"">m.rs.ja.s.m.ine.wa.l.sh12.2.2@gmail.com</a>
<a href=""mailto:m.rsj.as.mi.new.a.l.sh.122.2@gmail.com"">m.rsj.as.mi.new.a.l.sh.122.2@gmail.com</a>
<a href=""mailto:m.r.sjasm.i.n.e.w.alsh12.22@gmail.com"">m.r.sjasm.i.n.e.w.alsh12.22@gmail.com</a>
<a href=""mailto:mr.s.ja.sm.i.n.ew.a.ls.h.12.22@gmail.com"">mr.s.ja.sm.i.n.ew.a.ls.h.12.22@gmail.com</a>
<a href=""mailto:m.rs.ja.sm.i.n.e.w.al.sh.1.22.2@gmail.com"">m.rs.ja.sm.i.n.e.w.al.sh.1.22.2@gmail.com</a>
<a href=""mailto:mr.sjasmi.n.e.w.al.s.h.1.2.2.2@gmail.com"">mr.sjasmi.n.e.w.al.s.h.1.2.2.2@gmail.com</a>
<a href=""mailto:mr.s.j.a.s.mine.walsh.12.22@gmail.com"">mr.s.j.a.s.mine.walsh.12.22@gmail.com</a>
<a href=""mailto:m.r.sj.as.mine.wal.s.h.1.2.22@gmail.com"">m.r.sj.as.mine.wal.s.h.1.2.22@gmail.com</a>
<a href=""mailto:m.rsjasm.i.ne.w.a.ls.h.12.2.2@gmail.com"">m.rsjasm.i.ne.w.a.ls.h.12.2.2@gmail.com</a>
<a href=""mailto:mr.s.ja.s.m.i.n.ew.als.h.122.2@gmail.com"">mr.s.ja.s.m.i.n.ew.als.h.122.2@gmail.com</a>
<a href=""mailto:mrsja.s.min.ew.a.l.s.h.1.22.2@gmail.com"">mrsja.s.min.ew.a.l.s.h.1.22.2@gmail.com</a>
<a href=""mailto:m.rsj.asm.i.ne.wa.l.s.h1.2.2.2@gmail.com"">m.rsj.asm.i.ne.wa.l.s.h1.2.2.2@gmail.com</a>
<a href=""mailto:mrs.ja.s.min.ewalsh.12.22@gmail.com"">mrs.ja.s.min.ewalsh.12.22@gmail.com</a>
<a href=""mailto:mrsjasmin.e.w.als.h.1.2.22@gmail.com"">mrsjasmin.e.w.als.h.1.2.22@gmail.com</a>
<a href=""mailto:m.r.s.j.asm.in.e.wal.sh12.22@gmail.com"">m.r.s.j.asm.in.e.wal.sh12.22@gmail.com</a>
<a href=""mailto:mr.s.j.a.s.m.in.e.w.al.sh1.2.2.2@gmail.com"">mr.s.j.a.s.m.in.e.w.al.sh1.2.2.2@gmail.com</a>
<a href=""mailto:m.r.s.j.a.sm.in.e.wa.lsh12.22@gmail.com"">m.r.s.j.a.sm.in.e.wa.lsh12.22@gmail.com</a>
<a href=""mailto:m.r.sj.a.s.m.i.n.e.w.alsh.1.22.2@gmail.com"">m.r.sj.a.s.m.i.n.e.w.alsh.1.22.2@gmail.com</a>
<a href=""mailto:mrsj.as.m.i.new.a.l.sh1.2.2.2@gmail.com"">mrsj.as.m.i.new.a.l.sh1.2.2.2@gmail.com</a>
<a href=""mailto:m.r.sj.a.s.mi.n.ew.a.ls.h.122.2@gmail.com"">m.r.sj.a.s.mi.n.ew.a.ls.h.122.2@gmail.com</a>
<a href=""mailto:mr.s.j.asmi.n.ewalsh12.22@gmail.com"">mr.s.j.asmi.n.ewalsh12.22@gmail.com</a>
<a href=""mailto:m.r.sja.s.mi.ne.w.alsh122.2@gmail.com"">m.r.sja.s.mi.ne.w.alsh122.2@gmail.com</a>
<a href=""mailto:m.rsja.s.m.i.newal.sh1.2.22@gmail.com"">m.rsja.s.m.i.newal.sh1.2.22@gmail.com</a>
<a href=""mailto:m.rsj.a.s.m.i.ne.w.als.h1.2.22@gmail.com"">m.rsj.a.s.m.i.ne.w.als.h1.2.22@gmail.com</a>
<a href=""mailto:m.rsj.as.min.ew.a.ls.h1222@gmail.com"">m.rsj.as.min.ew.a.ls.h1222@gmail.com</a>
<a href=""mailto:mr.sja.smi.new.alsh12.2.2@gmail.com"">mr.sja.smi.new.alsh12.2.2@gmail.com</a>
<a href=""mailto:mr.sjas.m.in.ew.al.s.h1.2.2.2@gmail.com"">mr.sjas.m.in.ew.al.s.h1.2.2.2@gmail.com</a>
<a href=""mailto:m.r.sj.a.s.m.ine.wals.h12.2.2@gmail.com"">m.r.sj.a.s.m.ine.wals.h12.2.2@gmail.com</a>
<a href=""mailto:mrsja.s.m.in.e.w.a.l.sh.1222@gmail.com"">mrsja.s.m.in.e.w.a.l.sh.1222@gmail.com</a>
<a href=""mailto:mr.sjas.m.i.n.e.w.a.l.sh1222@gmail.com"">mr.sjas.m.i.n.e.w.a.l.sh1222@gmail.com</a>
<a href=""mailto:mr.sj.a.smin.ew.alsh.12.22@gmail.com"">mr.sj.a.smin.ew.alsh.12.22@gmail.com</a>
<a href=""mailto:mr.s.ja.sm.i.ne.w.a.l.s.h.1.22.2@gmail.com"">mr.s.ja.sm.i.ne.w.a.l.s.h.1.22.2@gmail.com</a>
<a href=""mailto:m.rsjasm.i.n.e.wals.h1.2.2.2@gmail.com"">m.rsjasm.i.n.e.wals.h1.2.2.2@gmail.com</a>
<a href=""mailto:m.rs.j.a.smin.e.w.als.h.122.2@gmail.com"">m.rs.j.a.smin.e.w.als.h.122.2@gmail.com</a>
<a href=""mailto:m.r.s.j.asm.i.ne.w.a.l.sh1.222@gmail.com"">m.r.s.j.asm.i.ne.w.a.l.sh1.222@gmail.com</a>
<a href=""mailto:mr.sj.as.min.ew.al.s.h.1.222@gmail.com"">mr.sj.as.min.ew.al.s.h.1.222@gmail.com</a>
<a href=""mailto:mr.sj.a.sm.i.n.ewalsh.1.2.22@gmail.com"">mr.sj.a.sm.i.n.ewalsh.1.2.22@gmail.com</a>
<a href=""mailto:m.rsj.as.min.ewa.ls.h.1.2.22@gmail.com"">m.rsj.as.min.ewa.ls.h.1.2.22@gmail.com</a>
<a href=""mailto:m.rs.j.a.s.m.in.ewa.l.sh.1.2.22@gmail.com"">m.rs.j.a.s.m.in.ewa.l.sh.1.2.22@gmail.com</a>
<a href=""mailto:m.rsjasmi.n.e.walsh.12.22@gmail.com"">m.rsjasmi.n.e.walsh.12.22@gmail.com</a>
<a href=""mailto:m.rsj.as.m.i.n.e.wa.l.sh12.22@gmail.com"">m.rsj.as.m.i.n.e.wa.l.sh12.22@gmail.com</a>
<a href=""mailto:m.rsj.a.s.mi.new.al.s.h.1222@gmail.com"">m.rsj.a.s.mi.new.al.s.h.1222@gmail.com</a>
<a href=""mailto:m.r.sj.as.m.i.new.a.lsh.1.222@gmail.com"">m.r.sj.as.m.i.new.a.lsh.1.222@gmail.com</a>
<a href=""mailto:mrsjasmin.ew.a.ls.h.1.22.2@gmail.com"">mrsjasmin.ew.a.ls.h.1.22.2@gmail.com</a>
<a href=""mailto:mr.sj.asm.in.e.w.al.sh122.2@gmail.com"">mr.sj.asm.in.e.w.al.sh122.2@gmail.com</a>
<a href=""mailto:mrsj.asmine.w.als.h.1.2.2.2@gmail.com"">mrsj.asmine.w.als.h.1.2.2.2@gmail.com</a>
<a href=""mailto:mrs.j.as.m.i.n.e.wa.lsh.1.2.22@gmail.com"">mrs.j.as.m.i.n.e.wa.lsh.1.2.22@gmail.com</a>
<a href=""mailto:mr.s.jas.m.ine.w.a.l.s.h.1.2.22@gmail.com"">mr.s.jas.m.ine.w.a.l.s.h.1.2.22@gmail.com</a>
<a href=""mailto:m.rs.ja.s.m.ine.w.als.h122.2@gmail.com"">m.rs.ja.s.m.ine.w.als.h122.2@gmail.com</a>
<a href=""mailto:m.rsja.s.m.inewalsh12.2.2@gmail.com"">m.rsja.s.m.inewalsh12.2.2@gmail.com</a>
<a href=""mailto:m.r.sjas.mine.wa.lsh122.2@gmail.com"">m.r.sjas.mine.wa.lsh122.2@gmail.com</a>
<a href=""mailto:m.rs.j.asmi.new.a.l.s.h1.2.22@gmail.com"">m.rs.j.asmi.new.a.l.s.h1.2.22@gmail.com</a>
<a href=""mailto:mr.s.j.a.smine.wa.l.s.h1.2.2.2@gmail.com"">mr.s.j.a.smine.wa.l.s.h1.2.2.2@gmail.com</a>
<a href=""mailto:m.rs.ja.sm.inewa.l.s.h.12.2.2@gmail.com"">m.rs.ja.sm.inewa.l.s.h.12.2.2@gmail.com</a>
<a href=""mailto:mr.s.j.a.s.m.in.ewa.ls.h.12.22@gmail.com"">mr.s.j.a.s.m.in.ewa.ls.h.12.22@gmail.com</a>
<a href=""mailto:mrs.jas.m.i.ne.w.alsh.122.2@gmail.com"">mrs.jas.m.i.ne.w.alsh.122.2@gmail.com</a>
<a href=""mailto:mr.sj.a.sm.ine.wa.l.s.h.1.222@gmail.com"">mr.sj.a.sm.ine.wa.l.s.h.1.222@gmail.com</a>
<a href=""mailto:mr.s.jasmi.ne.w.alsh.1.2.22@gmail.com"">mr.s.jasmi.ne.w.alsh.1.2.22@gmail.com</a>
<a href=""mailto:mrsj.a.smi.n.e.wal.s.h.12.2.2@gmail.com"">mrsj.a.smi.n.e.wal.s.h.12.2.2@gmail.com</a>
<a href=""mailto:mr.sja.s.m.in.ew.alsh1.222@gmail.com"">mr.sja.s.m.in.ew.alsh1.222@gmail.com</a>
<a href=""mailto:m.rsja.s.m.inew.a.l.s.h.1.2.22@gmail.com"">m.rsja.s.m.inew.a.l.s.h.1.2.22@gmail.com</a>
<a href=""mailto:m.rs.j.asm.in.e.wa.lsh122.2@gmail.com"">m.rs.j.asm.in.e.wa.lsh122.2@gmail.com</a>
<a href=""mailto:mr.sja.smi.new.al.s.h.1.2.2.2@gmail.com"">mr.sja.smi.new.al.s.h.1.2.2.2@gmail.com</a>
<a href=""mailto:mrsja.smin.e.walsh1.2.22@gmail.com"">mrsja.smin.e.walsh1.2.22@gmail.com</a>
<a href=""mailto:m.r.s.j.as.m.i.n.ew.a.l.s.h1.22.2@gmail.com"">m.r.s.j.as.m.i.n.ew.a.l.s.h1.22.2@gmail.com</a>
<a href=""mailto:mr.s.j.asm.i.ne.wa.l.s.h.122.2@gmail.com"">mr.s.j.asm.i.ne.wa.l.s.h.122.2@gmail.com</a>
<a href=""mailto:mrs.j.a.smin.ewa.ls.h.12.2.2@gmail.com"">mrs.j.a.smin.ewa.ls.h.12.2.2@gmail.com</a>
<a href=""mailto:mrs.j.asmin.ew.a.l.sh.12.22@gmail.com"">mrs.j.asmin.ew.a.l.sh.12.22@gmail.com</a>
<a href=""mailto:mrs.j.a.sm.i.new.a.l.sh.12.2.2@gmail.com"">mrs.j.a.sm.i.new.a.l.sh.12.2.2@gmail.com</a>
<a href=""mailto:mr.sj.asm.i.new.a.lsh12.2.2@gmail.com"">mr.sj.asm.i.new.a.lsh12.2.2@gmail.com</a>
<a href=""mailto:m.r.s.j.a.s.m.in.e.w.als.h1.222@gmail.com"">m.r.s.j.a.s.m.in.e.w.als.h1.222@gmail.com</a>
<a href=""mailto:m.r.sjasmi.n.ewa.ls.h.1.22.2@gmail.com"">m.r.sjasmi.n.ewa.ls.h.1.22.2@gmail.com</a>
<a href=""mailto:mrsj.asm.i.ne.wa.l.sh.12.2.2@gmail.com"">mrsj.asm.i.ne.wa.l.sh.12.2.2@gmail.com</a>
<a href=""mailto:mrs.j.a.s.mi.new.al.s.h.122.2@gmail.com"">mrs.j.a.s.mi.new.al.s.h.122.2@gmail.com</a>
<a href=""mailto:m.r.s.j.as.m.ine.w.al.s.h1222@gmail.com"">m.r.s.j.as.m.ine.w.al.s.h1222@gmail.com</a>
<a href=""mailto:m.rs.j.a.s.m.i.new.a.lsh.1.2.2.2@gmail.com"">m.rs.j.a.s.m.i.new.a.lsh.1.2.2.2@gmail.com</a>
<a href=""mailto:mrsjas.m.ine.wa.l.sh.12.22@gmail.com"">mrsjas.m.ine.wa.l.sh.12.22@gmail.com</a>
<a href=""mailto:mrsj.as.m.in.ew.a.l.sh.1.222@gmail.com"">mrsj.as.m.in.ew.a.l.sh.1.222@gmail.com</a>
<a href=""mailto:m.rs.jas.m.i.new.a.l.sh12.22@gmail.com"">m.rs.jas.m.i.new.a.l.sh12.22@gmail.com</a>
<a href=""mailto:mrsjas.mi.n.ew.a.ls.h12.22@gmail.com"">mrsjas.mi.n.ew.a.ls.h12.22@gmail.com</a>
<a href=""mailto:m.rsj.a.sminewa.l.sh.1.2.2.2@gmail.com"">m.rsj.a.sminewa.l.sh.1.2.2.2@gmail.com</a>
<a href=""mailto:mr.sjas.m.i.ne.w.al.sh.1.22.2@gmail.com"">mr.sjas.m.i.ne.w.al.sh.1.22.2@gmail.com</a>
<a href=""mailto:mr.sj.a.smin.e.wals.h12.22@gmail.com"">mr.sj.a.smin.e.wals.h12.22@gmail.com</a>
<a href=""mailto:m.r.s.ja.s.mi.ne.wals.h122.2@gmail.com"">m.r.s.ja.s.mi.ne.wals.h122.2@gmail.com</a>
<a href=""mailto:m.r.s.j.a.smi.ne.wa.lsh.12.2.2@gmail.com"">m.r.s.j.a.smi.ne.wa.lsh.12.2.2@gmail.com</a>
<a href=""mailto:m.r.s.ja.sm.in.e.w.a.lsh.12.22@gmail.com"">m.r.s.ja.sm.in.e.w.a.lsh.12.22@gmail.com</a>
<a href=""mailto:mr.sj.asmi.ne.w.a.l.s.h.1.2.22@gmail.com"">mr.sj.asmi.ne.w.a.l.s.h.1.2.22@gmail.com</a>
<a href=""mailto:mrsjas.mi.new.al.sh1.2.2.2@gmail.com"">mrsjas.mi.new.al.sh1.2.2.2@gmail.com</a>
<a href=""mailto:mrsjas.m.inewa.l.sh.1.222@gmail.com"">mrsjas.m.inewa.l.sh.1.222@gmail.com</a>
<a href=""mailto:m.rsj.a.s.min.e.wals.h.1222@gmail.com"">m.rsj.a.s.min.e.wals.h.1222@gmail.com</a>
<a href=""mailto:m.r.s.j.a.sm.i.new.al.sh.12.22@gmail.com"">m.r.s.j.a.sm.i.new.al.sh.12.22@gmail.com</a>
<a href=""mailto:mr.s.j.asmi.new.al.sh.1.22.2@gmail.com"">mr.s.j.asmi.new.al.sh.1.22.2@gmail.com</a>
<a href=""mailto:mrsj.asm.i.n.ewals.h.1.22.2@gmail.com"">mrsj.asm.i.n.ewals.h.1.22.2@gmail.com</a>
<a href=""mailto:mrs.jas.m.i.n.ew.al.s.h1.22.2@gmail.com"">mrs.jas.m.i.n.ew.al.s.h1.22.2@gmail.com</a>
<a href=""mailto:mrsja.s.mi.n.e.w.a.ls.h.1.222@gmail.com"">mrsja.s.mi.n.e.w.a.ls.h.1.222@gmail.com</a>
<a href=""mailto:m.rsj.as.mi.ne.wa.ls.h.1.222@gmail.com"">m.rsj.as.mi.ne.wa.ls.h.1.222@gmail.com</a>
<a href=""mailto:m.r.sja.sm.ine.w.a.l.s.h1.2.2.2@gmail.com"">m.r.sja.sm.ine.w.a.l.s.h1.2.2.2@gmail.com</a>
<a href=""mailto:mr.s.ja.s.m.in.e.wa.l.s.h12.22@gmail.com"">mr.s.ja.s.m.in.e.wa.l.s.h12.22@gmail.com</a>
<a href=""mailto:m.rs.j.as.m.in.e.w.al.s.h1222@gmail.com"">m.rs.j.as.m.in.e.w.al.s.h1222@gmail.com</a>
<a href=""mailto:mr.s.j.a.s.m.i.newa.l.sh12.22@gmail.com"">mr.s.j.a.s.m.i.newa.l.sh12.22@gmail.com</a>
<a href=""mailto:m.r.s.j.a.smi.newa.lsh.1.2.2.2@gmail.com"">m.r.s.j.a.smi.newa.lsh.1.2.2.2@gmail.com</a>
<a href=""mailto:mrsjas.m.inewa.ls.h12.2.2@gmail.com"">mrsjas.m.inewa.ls.h12.2.2@gmail.com</a>
<a href=""mailto:mrsj.asmine.wa.l.sh.122.2@gmail.com"">mrsj.asmine.wa.l.sh.122.2@gmail.com</a>
<a href=""mailto:mr.s.j.asmine.wal.s.h1222@gmail.com"">mr.s.j.asmine.wal.s.h1222@gmail.com</a>
<a href=""mailto:mrs.j.a.s.min.e.w.a.ls.h.1.2.22@gmail.com"">mrs.j.a.s.min.e.w.a.ls.h.1.2.22@gmail.com</a>
<a href=""mailto:mr.s.j.a.s.min.e.w.al.s.h.1222@gmail.com"">mr.s.j.a.s.min.e.w.al.s.h.1222@gmail.com</a>
<a href=""mailto:m.rsj.a.s.mi.newa.l.s.h1222@gmail.com"">m.rsj.a.s.mi.newa.l.s.h1222@gmail.com</a>
<a href=""mailto:mrsja.s.mi.n.e.w.al.s.h1.222@gmail.com"">mrsja.s.mi.n.e.w.al.s.h1.222@gmail.com</a>
<a href=""mailto:mrs.j.a.s.mine.wa.lsh.12.22@gmail.com"">mrs.j.a.s.mine.wa.lsh.12.22@gmail.com</a>
<a href=""mailto:mrs.ja.s.m.inewalsh1.2.2.2@gmail.com"">mrs.ja.s.m.inewalsh1.2.2.2@gmail.com</a>
<a href=""mailto:m.rs.ja.sm.in.e.wa.l.sh12.2.2@gmail.com"">m.rs.ja.sm.in.e.wa.l.sh12.2.2@gmail.com</a>
<a href=""mailto:m.r.sj.as.mi.newalsh1.22.2@gmail.com"">m.r.sj.as.mi.newalsh1.22.2@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork@gmail.com"">info1federalreservebanknewyork@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+20164@gmail.com"">info1federalreservebanknewyork+20164@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+19451@gmail.com"">info1federalreservebanknewyork+19451@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+24506@gmail.com"">info1federalreservebanknewyork+24506@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+26121@gmail.com"">info1federalreservebanknewyork+26121@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+25052@gmail.com"">info1federalreservebanknewyork+25052@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+15952@gmail.com"">info1federalreservebanknewyork+15952@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+27393@gmail.com"">info1federalreservebanknewyork+27393@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+12513@gmail.com"">info1federalreservebanknewyork+12513@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+15895@gmail.com"">info1federalreservebanknewyork+15895@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+10004@gmail.com"">info1federalreservebanknewyork+10004@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+32388@gmail.com"">info1federalreservebanknewyork+32388@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+15739@gmail.com"">info1federalreservebanknewyork+15739@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+8915@gmail.com"">info1federalreservebanknewyork+8915@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+25406@gmail.com"">info1federalreservebanknewyork+25406@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+9438@gmail.com"">info1federalreservebanknewyork+9438@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+4006@gmail.com"">info1federalreservebanknewyork+4006@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+29302@gmail.com"">info1federalreservebanknewyork+29302@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+15164@gmail.com"">info1federalreservebanknewyork+15164@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+2851@gmail.com"">info1federalreservebanknewyork+2851@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+16397@gmail.com"">info1federalreservebanknewyork+16397@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+16208@gmail.com"">info1federalreservebanknewyork+16208@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+1499@gmail.com"">info1federalreservebanknewyork+1499@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+24796@gmail.com"">info1federalreservebanknewyork+24796@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+12436@gmail.com"">info1federalreservebanknewyork+12436@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+28157@gmail.com"">info1federalreservebanknewyork+28157@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+18525@gmail.com"">info1federalreservebanknewyork+18525@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+22071@gmail.com"">info1federalreservebanknewyork+22071@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+3915@gmail.com"">info1federalreservebanknewyork+3915@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+27033@gmail.com"">info1federalreservebanknewyork+27033@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+12147@gmail.com"">info1federalreservebanknewyork+12147@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+4771@gmail.com"">info1federalreservebanknewyork+4771@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+15948@gmail.com"">info1federalreservebanknewyork+15948@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+26375@gmail.com"">info1federalreservebanknewyork+26375@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+14247@gmail.com"">info1federalreservebanknewyork+14247@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+31354@gmail.com"">info1federalreservebanknewyork+31354@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+31361@gmail.com"">info1federalreservebanknewyork+31361@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+25870@gmail.com"">info1federalreservebanknewyork+25870@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+12017@gmail.com"">info1federalreservebanknewyork+12017@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+25310@gmail.com"">info1federalreservebanknewyork+25310@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+2761@gmail.com"">info1federalreservebanknewyork+2761@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+23739@gmail.com"">info1federalreservebanknewyork+23739@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+9595@gmail.com"">info1federalreservebanknewyork+9595@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+27433@gmail.com"">info1federalreservebanknewyork+27433@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+5620@gmail.com"">info1federalreservebanknewyork+5620@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+17448@gmail.com"">info1federalreservebanknewyork+17448@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+2328@gmail.com"">info1federalreservebanknewyork+2328@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+23520@gmail.com"">info1federalreservebanknewyork+23520@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+19242@gmail.com"">info1federalreservebanknewyork+19242@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+4704@gmail.com"">info1federalreservebanknewyork+4704@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+1564@gmail.com"">info1federalreservebanknewyork+1564@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+5547@gmail.com"">info1federalreservebanknewyork+5547@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+2205@gmail.com"">info1federalreservebanknewyork+2205@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+7630@gmail.com"">info1federalreservebanknewyork+7630@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+25140@gmail.com"">info1federalreservebanknewyork+25140@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+555@gmail.com"">info1federalreservebanknewyork+555@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+17093@gmail.com"">info1federalreservebanknewyork+17093@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+7660@gmail.com"">info1federalreservebanknewyork+7660@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+7961@gmail.com"">info1federalreservebanknewyork+7961@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+20080@gmail.com"">info1federalreservebanknewyork+20080@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+15532@gmail.com"">info1federalreservebanknewyork+15532@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+14700@gmail.com"">info1federalreservebanknewyork+14700@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+2690@gmail.com"">info1federalreservebanknewyork+2690@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+7870@gmail.com"">info1federalreservebanknewyork+7870@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+30620@gmail.com"">info1federalreservebanknewyork+30620@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+8897@gmail.com"">info1federalreservebanknewyork+8897@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+6342@gmail.com"">info1federalreservebanknewyork+6342@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+7136@gmail.com"">info1federalreservebanknewyork+7136@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+24200@gmail.com"">info1federalreservebanknewyork+24200@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+19738@gmail.com"">info1federalreservebanknewyork+19738@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+6092@gmail.com"">info1federalreservebanknewyork+6092@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+1753@gmail.com"">info1federalreservebanknewyork+1753@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+32524@gmail.com"">info1federalreservebanknewyork+32524@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+2943@gmail.com"">info1federalreservebanknewyork+2943@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+7370@gmail.com"">info1federalreservebanknewyork+7370@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+24171@gmail.com"">info1federalreservebanknewyork+24171@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+24960@gmail.com"">info1federalreservebanknewyork+24960@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+26196@gmail.com"">info1federalreservebanknewyork+26196@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+18131@gmail.com"">info1federalreservebanknewyork+18131@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+1540@gmail.com"">info1federalreservebanknewyork+1540@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+29117@gmail.com"">info1federalreservebanknewyork+29117@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+24050@gmail.com"">info1federalreservebanknewyork+24050@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+18423@gmail.com"">info1federalreservebanknewyork+18423@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+12731@gmail.com"">info1federalreservebanknewyork+12731@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+20910@gmail.com"">info1federalreservebanknewyork+20910@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+31077@gmail.com"">info1federalreservebanknewyork+31077@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+28041@gmail.com"">info1federalreservebanknewyork+28041@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+16763@gmail.com"">info1federalreservebanknewyork+16763@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+25118@gmail.com"">info1federalreservebanknewyork+25118@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+17711@gmail.com"">info1federalreservebanknewyork+17711@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+30766@gmail.com"">info1federalreservebanknewyork+30766@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+13975@gmail.com"">info1federalreservebanknewyork+13975@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+19994@gmail.com"">info1federalreservebanknewyork+19994@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+5077@gmail.com"">info1federalreservebanknewyork+5077@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+17645@gmail.com"">info1federalreservebanknewyork+17645@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+23612@gmail.com"">info1federalreservebanknewyork+23612@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+2651@gmail.com"">info1federalreservebanknewyork+2651@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+14081@gmail.com"">info1federalreservebanknewyork+14081@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+24402@gmail.com"">info1federalreservebanknewyork+24402@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+8203@gmail.com"">info1federalreservebanknewyork+8203@gmail.com</a>
<a href=""mailto:info1federalreservebanknewyork+8112@gmail.com"">info1federalreservebanknewyork+8112@gmail.com</a>"
rxzdq72t,Untitled,rembocoder,C++,Sunday 14th of May 2023 12:31:12 PM CDT,"#include <bits/stdc++.h>
 
#define int int64_t
 
using namespace std;
 
void relax(int& a, int b) {
    a = max(a, b);
}
 
int32_t main() {
    ios_base::sync_with_stdio(false);
    int n, k;
    cin >> n >> k;
    vector<int> a(n);
    for (int i = 1; i < n - 1; i++) {
        cin >> a[i];
    }
    vector<int> dp(n, -2e18);
    dp[0] = 0;
    for (int i = 1; i < n; i++) {
        for (int j = 1; j <= k && j <= i; j++) {
            relax(dp[i], dp[i - j] + a[i]);
        }
    }
    cout << dp[n - 1] << '\n';
}
"
QUCvujtX,Kalimba scale example,retrokits,Arduino,Sunday 14th of May 2023 12:28:32 PM CDT,"/*
  Sawyer Monk Kalimba Style Example 
  I defined two scales to compare, one the regular scale, and one for the kalimba
  with CC1 (modwheel) you can switch through the scales, off = chromatic, full = kalimba
  
  scale array explanation:
  
  0 - 11 are as follows:
  0  1  2  3  4  5  6  7  8  9  10  11
  C  C# D  D# E  F  F# G  G# A  A#  B
  
  to remap whites:
  C     E     G  B     D     F     A
  written in numbers:
  0     2     7  11    2     5     9
  blacks:
     D     F        C     E     G
  =  2     5        1     4     7
  total array entry:
  0, 2, 2,  5, 7,11, 1, 2, 4,5, 7, 9
  
  now let's duy it!:
*/
const byte scales[2][12] = {
{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}, // 0 'Chromatic'
{0, 0 ,2, 3, 3, 5, 5, 7, 8, 8, 10, 10}, // 1 ‘Kalimba’  
};

byte scale=0;

// calculate key octave:
byte octavebyKey(byte key)
{
  if (key == 0)
    return 0;

  return (key / 12);
}

// calculate scaled key:
byte scaledKey(byte key)
{
  return scales[scale][(key % 12)] + (octavebyKey(key) * 12);
}

// check if modwheel is changed:
bool RK002_onControlChange(byte chn, byte nr, byte val)
{
  if (nr == 1) {
    scale=val/126; // low values will give scale value 0, high values will give value 1
    // Send ""all notes off"" to disable notes being sustained during controller change
    RK002_sendControlChange(chn, 123, 0); 
  }
  return true;
}

// process note on messages:
bool RK002_onNoteOn(byte chn, byte key, byte vel)
{
  RK002_sendNoteOn(chn, scaledKey(key), vel);
  return false;
}

// process note of messages:
bool RK002_onNoteOff(byte chn, byte key, byte vel)
{
  RK002_sendNoteOff(chn, scaledKey(key), vel);
  return false;
}
// .. no other processed needed, next is the compulsory routines
// but these can be empty

void setup()
{
}

void loop()
{
}
"
JkHzMwCc,Untitled,rembocoder,C++,Sunday 14th of May 2023 12:25:34 PM CDT,"#include <bits/stdc++.h>
 
#define int int64_t
 
using namespace std;
 
int mod = 1e9 + 7;
 
int32_t main() {
    ios_base::sync_with_stdio(false);
    int n, k;
    cin >> n >> k;
    string s;
    cin >> s;
    vector<int> dp(n);
    dp[0] = 1;
    for (int i = 1; i < n; i++) {
        if (s[i - 1] == 'X') {
            continue;
        }
        for (int j = 1; j <= k && j <= i; j++) {
            (dp[i] += dp[i - j]) %= mod;
        }
    }
    cout << dp[n - 1] << '\n';
}
"
k1gjCeFk,B. Permutation Swap,Plabon_dutta,C++,Sunday 14th of May 2023 12:21:22 PM CDT,"#include <bits/stdc++.h>

using namespace std;

int main() {
    ios_base::sync_with_stdio(false), cin.tie(NULL), cout.tie(NULL);

    int testcase;
    cin >> testcase;
    while(testcase--) {
        int n;
        cin >> n;

        set <int> s;
        for (int i = 1; i <= n; i++) {
            int x;
            cin >> x;
            if (abs(x - i) != 0) s.insert(abs(x - i));
        } 
        int ans = 0;

        for (auto i : s) {
            ans = __gcd(ans, i);
        } 

        cout << ans << '\n';
    }   

    return 0;
}"
3hR6Jace,Untitled,rembocoder,C++,Sunday 14th of May 2023 12:16:23 PM CDT,"#include <bits/stdc++.h>

#define int int64_t

using namespace std;

void relax(int& a, int b) {
    a = max(a, b);
}

int32_t main() {
    ios_base::sync_with_stdio(false);
    int n, m;
    cin >> n >> m;
    vector<vector<int>> a(n, vector<int>(m));
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            cin >> a[i][j];
        }
    }
    vector<vector<int>> dp(n, vector<int>(m, -2e18));
    dp[0][0] = a[0][0];
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            if (i == 0 && j == 0) {
                continue;
            }
            if (i) {
                relax(dp[i][j], dp[i - 1][j] + a[i][j]);
            }
            if (j) {
                relax(dp[i][j], dp[i][j - 1] + a[i][j]);
            }
        }
    }
    cout << dp[n - 1][m - 1] << '\n';
}
"
ipkS67dY,Ban System Script,Reactive_Metal,Lua,Sunday 14th of May 2023 12:08:49 PM CDT,"-- Author: Reccur AKA Reactive Metal

local dataStoreService = game:GetService(""DataStoreService"")
local dataStore = dataStoreService:GetDataStore(""Stuff"")

dataStore:RemoveAsync(""1693468811"" .. ""-Banned"")

local groupId = 11571768 -- put your group id here if you have one
local minRank = 254 -- minimum rank in your group to use the ban command

local whitelisted = {""reccur"", ""player2""} --[[ additionally, you, can whitelist players that can use 
											the ban command by adding their names in this table, 
											(preferrable if you ont have a group)
											]]

game.Players.PlayerAdded:Connect(function(plr)
	
	local IsBanned = dataStore:GetAsync(plr.UserId.. ""-Banned"") or false
	
	if IsBanned then
		plr:Kick(""You have been banned"")
	end
	
	
	local command = ""/ban ([%w_]+)""
	
	plr.Chatted:Connect(function(msg)
		
		if plr:GetRankInGroup(groupId) >= minRank or table.find(whitelisted, plr.Name) then
			
			local bannedPlrName = msg:match(command)

			for i, p in pairs(game.Players:GetChildren()) do

				if string.lower(p.Name) == string.lower(bannedPlrName) or string.lower(p.DisplayName) == string.lower(bannedPlrName)  then

					local suc, err = pcall(function()

						dataStore:SetAsync(p.UserId..""-Banned"", true)
						p:Kick(""You have been banned!"")

					end)

					if err then
						warn(err)
					end

					break


				end

			end
			
		end
		

		
	end)

end)"
1u0tqf2z,Untitled,Dimaush,Python,Sunday 14th of May 2023 12:08:06 PM CDT,"import numpy as np

import sklearn
import sklearn.metrics


def silhouette_score(x, labels):
    if np.unique(labels).shape[0] == 1:
        return 0

    s = np.zeros(x.shape[0])
    clusters = []

    for label in np.unique(labels):
        if (labels == label).shape[0] == 1:
            s[(labels == label)] = 0
        else:
            values = np.sum(sklearn.metrics.pairwise_distances(x, x)[:, (labels == label)], axis=1)
            s[(labels == label) * (np.sum(labels == label) > 1)] = values[(labels == label) * (np.sum(labels == label) > 1)] / (np.sum(labels == label) - 1)
            avg = values / np.sum(labels == label)
            avg[(labels == label)] = np.max(sklearn.metrics.pairwise_distances(x, x)) + 1
            clusters.append(avg)

    p = np.min(np.stack(clusters), axis=0)
    m = (p != 0) * (s != 0)

    sil = np.zeros(x.shape[0])
    sil[m] = (p - s)[m] / np.maximum(p, s)[m]
    sil_score = np.mean(sil, axis=0)
    return sil_score


def bcubed_score(true_labels, predicted_labels):
    n_objects = true_labels.shape[0]
    precision = 0
    recall = 0
    for i in range(n_objects):
        p = true_labels[(predicted_labels == predicted_labels[i])]
        precision += np.mean(p == true_labels[i])
        r = predicted_labels[(true_labels == true_labels[i])]
        recall += np.mean(r == predicted_labels[i])
    precision /= n_objects
    recall /= n_objects
    score = 2 * (precision * recall) / (precision + recall)
    return score"
EJVQH39H,Untitled,rembocoder,C++,Sunday 14th of May 2023 12:05:02 PM CDT,"#include <bits/stdc++.h>

#define int int64_t

using namespace std;

int mod = 1e9 + 7;

void add(int& a, int b) {
    a += b;
    if (a >= mod) {
        a -= mod;
    }
}

int32_t main() {
    ios_base::sync_with_stdio(false);
    int n, m;
    cin >> n >> m;
    vector<string> a(n);
    for (int i = 0; i < n; i++) {
        cin >> a[i];
    }
    vector<vector<int>> dp(n, vector<int>(m));
    dp[0][0] = 1;
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            if (i == 0 && j == 0) {
                continue;
            }
            if (a[i][j] == 'X') {
                continue;
            }
            if (i) {
                add(dp[i][j], dp[i - 1][j]);
            }
            if (j) {
                add(dp[i][j], dp[i][j - 1]);
            }
        }
    }
    cout << dp[n - 1][m - 1] << '\n';
}
"
2hsEuqUK,Untitled,Dimaush,Python,Sunday 14th of May 2023 12:03:55 PM CDT,"import numpy as np


def evaluate_measures(sample):
    n_samples = len(sample)
    n_classes = 0
    classes = dict()
    for c in sample:
        if c in classes:
            classes[c] += 1
        else:
            classes[c] = 1
            n_classes += 1
    probs = np.zeros(n_classes)
    for i, c in zip(range(n_classes), classes):
        probs[i] = classes[c] / n_samples
    gini = 1
    entropy = 0
    error = 1
    for p in probs:
        gini -= p * p
        entropy -= p * np.log(p)
        error = min(error, 1 - p)
    measures = {'gini': gini, 'entropy': entropy, 'error': error}
    return measures"
Kb23ACGg,Untitled,Yura21,Python,Sunday 14th of May 2023 12:01:23 PM CDT,"# Пример 1
import turtle

t = turtle.Turtle()
t.pensize(2)
t.speed(0)
t.getscreen().bgcolor('black')
t.hideturtle()

colors = ['yellow', 'blue', 'red', 'green', 'lime', 'orange']
current_color = 0

for x in range(360):
    t.pencolor(colors[current_color % len(colors)])

    t.width(x // 101)
    t.forward(x)
    t.left(59)

    current_color += 1

input()


# Пример 2
import turtle

t = turtle.Turtle()
t.pensize(2)
t.speed(0)
t.getscreen().bgcolor('black')

colors = ['yellow', 'blue', 'red', 'green', 'lime', 'orange']
current_color = 0

for angel in range(360 // 10):
    t.color(colors[current_color % len(colors)])
    t.circle(100)

    current_color += 1
    t.right(10)

input()


# Пример 3
import turtle

t = turtle.Turtle()
t.pensize(2)
t.speed(0)
t.hideturtle()
t.penup()
t.goto(0, 50)
t.left(90)

t.pendown()
t.color(""lightblue"")
t.pensize(5)

t.forward(50)
t.right(135)
t.forward(70)
t.right(135)
t.forward(45)

t.penup()
t.goto(0, 50)
t.pendown()
t.left(90)

t.pensize(2)
t.color('black')

t.forward(30)
t.left(90)
t.forward(105)
t.right(135)
t.forward(50)
t.right(45)
t.forward(80)
t.right(45)
t.forward(50)
t.right(135)
t.forward(45)

t.penup()
t.goto(-50, -20)
t.pendown()
t.color('blue')

t.left(60)
for _ in range(30):
    t.forward(6)
    t.right(120)
    t.forward(6)
    t.left(120)

input()"
67XVn3w3,proxy- configuration,LockdateforGHS,C#,Sunday 14th of May 2023 11:45:08 AM CDT,chicken tenders
D7G9My37,Untitled,Yura21,Python,Sunday 14th of May 2023 11:22:58 AM CDT,"# Пример 1
import turtle

t = turtle.Turtle()
t.pensize(10)
t.speed(0)


def draw_filled_circle(radius, color_string):
    t.begin_fill()
    t.color(color_string)
    t.circle(radius)
    t.end_fill()


daytime = input(""Введите текущее время суток (день или ночь):\n"").lower()

if daytime == ""ночь"":
    draw_filled_circle(50, 'gray')
elif daytime == ""день"":
    t.fillcolor(""yellow"")
    t.color(""yellow"")
    t.begin_fill()

    k = 3
    for _ in range(18):
        t.forward(10 * k)
        t.right(100)
        t.forward(10 * k)
        t.left(120)
    t.end_fill()
else:
    print(""Неизвестное время суток!"")
    exit(0)

input()


# Пример 2
import turtle

t = turtle.Turtle()
t.pensize(10)
t.speed(5)


def draw_filled_circle(radius, color_string):
    t.begin_fill()
    t.color(color_string)
    t.circle(radius)
    t.end_fill()


for c in ['pink', 'orange', 'yellow', 'lime']:
    draw_filled_circle(50, c)
input()


# Пример 3
import turtle

t = turtle.Turtle()
t.pensize(10)
t.speed(0)

t.color('black')
t.fillcolor('lightblue')

t.left(60)
for _ in range(4):
    t.begin_fill()
    t.forward(100)
    t.right(120)
    t.forward(100)
    t.left(120)
    t.end_fill()

t.left(120)
t.forward(400)

t.left(120)
for _ in range(4):
    t.begin_fill()
    t.forward(100)
    t.left(120)
    t.forward(100)
    t.right(120)
    t.end_fill()

input()"
xs3cKgZ1,邀您一起看：详情页面,xiaomianao666,JavaScript,Sunday 14th of May 2023 11:10:06 AM CDT,海阔视界规则分享，当前分享的是：二级页面详情￥page_detail￥详情页面@@
gBwb8cvb,邀您一起看：向往的生活第七季（在线电影）,xiaomianao666,JavaScript,Sunday 14th of May 2023 10:52:10 AM CDT,海阔视界规则分享，当前分享的是：二级页面详情￥page_detail￥向往的生活第七季（在线电影）@@eyJkYXRhIjoie1wiYXNzb2NpYXRlZE1vZGVsc01hcEZvckpvaW5UYWJsZVwiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhGS1wiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhvdXRGS1wiOnt9LFwiZmllbGRzVG9TZXRUb0RlZmF1bHRcIjpbXSxcImdtdE1vZGlmaWVkXCI6MCxcImlkXCI6MCxcImxhc3RfY2hhcHRlcl9ydWxlXCI6XCJcIixcImxpc3RUb0NsZWFyQXNzb2NpYXRlZEZLXCI6W10sXCJsaXN0VG9DbGVhclNlbGZGS1wiOltdLFwicGFnZUxpc3RcIjpbXSxcInBhcmFtc1wiOlwie1xcXCJkZXNjXFxcIjpcXFwi5pu05paw6Iez56ysMjAyMzA1MTTmnJ9cXFwiLFxcXCJpbWdcXFwiOlxcXCJodHRwczovLzBpbWcuaGl0di5jb20vcHJldmlldy9zcF9pbWFnZXMvMjAyMy8wNC8xOC8yMDIzMDQxODExNDEzOTY3MDk4NDkuanBnQFJlZmVyZXI9XFxcIixcXFwicGFnZVRpdGxlXFxcIjpcXFwi5ZCR5b6A55qE55Sf5rS756ys5LiD5a2j77yI5Zyo57q/55S15b2x77yJXFxcIixcXFwidGl0bGVcXFwiOlxcXCLlkJHlvoDnmoTnlJ/mtLvnrKzkuIPlraNcXFwifVwiLFwic2F2ZWRcIjpmYWxzZSxcInRpdGxlXCI6XCLpo47lvbFcIixcInZlcnNpb25cIjowLFwidXJsXCI6XCJoaWtlcjovL2VtcHR5IyNodHRwczovL3d3dy56YWl4aWFuZGlhbnlpbmc4LmNvbS92b2RkZXRhaWwvMzI0MDg0Lmh0bWwjaW1tZXJzaXZlVGhlbWUjI2F1dG9DYWNoZSM7Z2V0O1VURi04O3tVc2VyLUFnZW50QE1vemlsbGEvNS4wIChMaW51eO+8m++8myBBbmRyb2lkIDEx77yb77ybIE1pIDEwIFBybykgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzg4LjAuNDMyNC4xNTIgTW9iaWxlIFNhZmFyaS81MzcuMzZ9XCIsXCJjb2xfdHlwZVwiOlwibW92aWVfM1wiLFwiZmluZF9ydWxlXCI6XCJqczooXFxuKCkgPT4ge1xcbiAgICByZXF1aXJlKGNvbmZpZy7kvp3otZYpO1xcbiAgICBlcmppKCk7XFxufVxcbikoKVwiLFwiZ3JvdXBcIjpcIiPvuI/ig6PluLjnlKhcIixcInVhXCI6XCJtb2JpbGVcIixcInByZVJ1bGVcIjpcImxldCB0YWNpdGx5ID0gXFxcImFIUjBjSE02THk5bmFYUmpiMlJsTG01bGRDOXpkV2xtWlc0dmMzVnBabVZ1Wnk4dEwzSmhkeTl0WVhOMFpYSXZlV05zTG1welxcXCI7XFxubGV0IHljbCA9IGdldEl0ZW0oXFxcImdpdFxcXCIsIGJhc2U2NERlY29kZSh0YWNpdGx5KSk7XFxuaW5pdENvbmZpZyh7XFxuICAgIOS+nei1ljogeWNsXFxufSk7XCIsXCJwYWdlc1wiOlwiW11cIn0iLCJwaWNVcmwiOiJodHRwczovLzBpbWcuaGl0di5jb20vcHJldmlldy9zcF9pbWFnZXMvMjAyMy8wNC8xOC8yMDIzMDQxODExNDEzOTY3MDk4NDkuanBnQFJlZmVyZXI9IiwidGl0bGUiOiLlkJHlvoDnmoTnlJ/mtLvnrKzkuIPlraPvvIjlnKjnur/nlLXlvbHvvIkifQ==
DdEfi6js,Twitter Highlight,evropa,JavaScript,Sunday 14th of May 2023 10:43:31 AM CDT,"// ==UserScript==
// @name        Twitter Highlight
// @match       https://twitter.com/*
// @grant       none
// @version     1.0
// @author      -
// ==/UserScript==

function highlight_one(node) {
  if (node.dataset.highlight === ""true"") {
    return;
  }
  node.dataset.highlight = ""true"";

  node.innerHTML = node.textContent.split(' ').map(word => {
    const m = Math.floor(word.length / 2);
    const a = word.slice(0, m);
    const b = word.slice(m);
    return `<strong>${a}</strong>${b}`;
  }).join(' ');
}

function highlight_many() {
  Array.from(document.querySelectorAll('[data-testid=""tweetText""]>span')).forEach(highlight_one);
}

window.addEventListener(""load"", highlight_many);
window.addEventListener(""scroll"", highlight_many);"
DnmWJxf5,DHT11 ThingSpeak,AnindyaBiswas,Arduino,Sunday 14th of May 2023 10:19:55 AM CDT,"#include <ESP8266WiFi.h>
#include <DHT.h>
#include <ThingSpeak.h>

#define dht_pin 2
#define dht_type DHT11

DHT dht(dht_pin, dht_type);
WiFiClient client;

//char ssid[] = ""Anindya_Net 2.5"";
//char pwd[] = ""07022001"";

char ssid[] = ""NindoFi"";
char pwd[] = ""AnindyaKbiswas"";

long channelID = 2132478;
char writeAPIKey[] = ""74XAOPKNHQOZYX74"";

bool alt = true;

void setup() {
  // put your setup code here, to run once:
  Serial.begin(9600);
  WiFi.begin(ssid, pwd);
  while(WiFi.status() != WL_CONNECTED)
  {
    delay(200);
    Serial.println("".."");
  }
  Serial.print(""Connected to -> "");
  Serial.println(ssid);
  Serial.println(WiFi.localIP());
  dht.begin();
  ThingSpeak.begin(client);
}

void loop() {
  // put your main code here, to run repeatedly:
  float tempC = dht.readTemperature();
  float humidity = dht.readHumidity();

  Serial.print(""Temperature : "");
  Serial.print(tempC);
  Serial.print(""        "");
  Serial.print(""Humidity : "");
  Serial.print(humidity);
  Serial.println();

  ThingSpeak.setField(1, tempC);
  ThingSpeak.setField(2, humidity);
  int x = ThingSpeak.writeFields(channelID, writeAPIKey);
  delay(2000);
}
"
33eDrLMq,Untitled,Salvens,C++,Sunday 14th of May 2023 10:12:13 AM CDT,"#include <algorithm>
#include <iostream>
#include <iomanip>
#include <cmath>
#include <vector>
#include <set>
#include <map>
#include <string>
#include <cassert>
#include <numeric>
#include <queue>
using namespace std;

#define int long long
#define IOS ios::sync_with_stdio(false); cin.tie(0); cout.tie(0);

const long long INF = 1e15 + 7;
const double EPS = 1e-9;
const int N = 1e5 + 1000;
const int MOD = 1e9 + 7;

int n, m, l, s, t;
vector<vector<pair<int, int>>> g;
vector<int> p;

int dijksra() {
    vector<int> d(n, INF);
    p.resize(n, -1);
    set<pair<int, int>> q;
    d[s] = 0;
    q.insert(make_pair(d[s], s));
    while (!q.empty()) {
        int v = q.begin()->second;
        q.erase(q.begin());
        for (auto [u, w]: g[v]) {
            if (d[v] + w < d[u]) {
                q.erase(make_pair(d[u], u));
                d[u] = d[v] + w;
                p[u] = v;
                q.insert(make_pair(d[u], u));
            }
        }
    }
    return d[t];
}

void print() {
    cout << ""YES\n"";
    vector<vector<int>> used(n, vector<int>(n, 0));
    for (int u = 0; u < g.size(); ++u) {
        for (auto [v, w]: g[u]) {
            if (!used[u][v]) {
                cout << u << ' ' << v << ' ' << w << '\n';
                used[u][v] = true;
                used[v][u] = true;
            }
        }
    }
}

void solve() {
    cin >> n >> m >> l >> s >> t;
    vector<pair<pair<int, int>, int>> unk;
    g.resize(n);
    for (int i = 0; i < m; ++i) {
        int u, v, w;
        cin >> u >> v >> w;
        if (w == 0) {
            w = INF;
            unk.emplace_back(make_pair(u, v), w);
            continue;
        }
        g[u].emplace_back(v, w);
        g[v].emplace_back(u, w);
    }
    for (int i = 0; i < unk.size(); ++i)  {
        int u = unk[i].first.first, v = unk[i].first.second, w = unk[i].second;
        g[u].emplace_back(v, w);
        g[v].emplace_back(u, w);
    }

    int len = dijksra();
    if (len < l) {
        cout << ""NO\n"";
        return;
    }
    for (int i = 0; i < unk.size(); ++i)  {
        int u = unk[i].first.first, v = unk[i].first.second;
        for (auto& [x, y]: g[u]) {
            if (x == v) {
                y = 1;
            }
        }
        for (auto& [x, y]: g[v]) {
            if (x == u) {
                y = 1;
            }
        }
    }

    int d = len = dijksra();
    vector<int> way;
    int pos = n - 1;
    while (p[pos] != -1) {
        way.emplace_back(pos);
        pos = p[pos];
    }
    way.emplace_back(pos);
    reverse(way.begin(), way.end());

    set<pair<int, int>> way1;
    for (int i = 0; i < way.size(); ++i) {
        way1.insert(make_pair(way[i], way[i + 1]));
        way1.insert(make_pair(way[i + 1], way[i]));
    }

    vector<pair<pair<int, int>, int>> inway;
    for (int i = 0; i < unk.size(); ++i)  {
        int u = unk[i].first.first, v = unk[i].first.second;
        if (!way1.contains(make_pair(u, v))) {
            for (auto& [x, y]: g[u]) {
                if (x == v) {
                    y = INF;
                }
            }
            for (auto& [x, y]: g[v]) {
                if (x == u) {
                    y = INF;
                }
            }
        } else {
            inway.emplace_back(unk[i]);
        }
    }

    for (int i = 0; i < inway.size(); ++i) {
        if (i) {
            int u = inway[i - 1].first.first, v = inway[i - 1].first.second;
            for (auto& [x, y]: g[u]) {
                if (x == v) {
                    y = 1;
                }
            }
            for (auto& [x, y]: g[v]) {
                if (x == u) {
                    y = 1;
                }
            }
        }
        int u = inway[i].first.first, v = inway[i].first.second;
        for (auto& [x, y]: g[u]) {
            if (x == v) {
                y = l - d;
            }
        }
        for (auto& [x, y]: g[v]) {
            if (x == u) {
                y = l - d;
            }
        }
        len = dijksra();
        if (len == l) {
            print();
            return;
        }
    }
    cout << ""NO\n"";
}

int32_t main() {
    IOS;

    int tt = 1;
//    cin >> t;
    while (tt--) {
        solve();
    }
    return 0;
}

/*
1.  数组开够了没
2.  文件名写对了没，文件夹建了吗
3.  内存会不会MLE
4.  多测清空？
5.  调试删干净了没
6.  取模有没有溢出
7.  快速幂底数要取模，幂对 mod-1 取模
8.  前向星和欧拉序要开2倍数组
9.  比较函数如果值相同的话有没有第二优先级
10. 线段树 4 倍空间，线段树合并和可持久化线段树 32 倍空间
11. 看清楚 log 的底数是啥，log后面的数是啥
12. long long 只有正负 2^63-1
*/

"
xSXnL0g1,variable exercises js,bebekutya,JavaScript,Sunday 14th of May 2023 10:08:53 AM CDT,"
Exercise 1:
Create a variable called `name` and assign it your name as a string. Then, write a line of code to log the value of `name` to the console.

let myName = ""Rozi"";
console.log(myName);

Exercise 2:
Create two variables called `num1` and `num2` and assign them any numeric values of your choice. Then, calculate the sum of the two numbers and assign it to a new variable called `sum`. Finally, log the value of `sum` to the console.

let num1 = 7;
let num2 = 3;
let sum = num1+num2;
console.log(sum);

Exercise 3:
Create a variable called `message` and assign it an empty string. Then, concatenate the strings ""Hello,"" and "" how are you?"" to the `message` variable. Log the final message to the console.

let message = """"; // this is an empty string
message = ""Hello, "" + ""how are you?"";
console.log(message);

Exercise 4:
Create a variable called `radius` and assign it a numeric value representing the radius of a circle. Calculate the circumference of the circle (2 * π * radius) and assign it to a new variable called `circumference`. Log the value of `circumference` to the console.

let radius = 5,55;
let circumference = 2*3.14159265359*radius;
console.log(circumference);

Exercise 5:
Create a variable called `isRaining` and assign it a boolean value of `true` or `false`, depending on the current weather condition. Use an `if` statement to check if it's raining. If it is, log ""Remember to take your umbrella!"" to the console. If it's not raining, log ""Enjoy the sunny day!"".

let isRaining = 'true';

if isRaining === 'true' {
	console.log(Remember to take your umbrella!"");
} else {
	console.log(Enjoy the sunny day!);
}"
Rp9S4P0C,Untitled,rezamalik15,HTML 5,Sunday 14th of May 2023 10:08:37 AM CDT,"<h3>Pilihan Kelas</h3>

<select name=""pilihanKelas"">
    <option value=""phpweb"">PHP Web Development</option>
    <option value=""pythonweb"">Python Web Development</option>
    <option value=""scratch"">Scratch Programming</option>
    <option value=""thunkable"">Thunkable Mobile App</option>
</select>"
LyfYurTt,Untitled,SoKnight,JSON,Sunday 14th of May 2023 10:06:27 AM CDT,"{
	""1.19.4"": {
		""optifine_edition"": ""HD U I4"",
		""mirror_url"": ""https://optifine.net/adloadx?f=OptiFine_1.19.4_HD_U_I4.jar"",
		""forge_version"": ""45.0.43"",
		""release_date"": ""07.04.2023""
	},
	""1.14.3"": {
		""optifine_edition"": ""HD U F2"",
		""mirror_url"": ""http://optifine.net/adloadx?f=OptiFine_1.14.3_HD_U_F2.jar"",
		""forge_version"": null,
		""release_date"": ""20.07.2019""
	}
}"
RV7igdqV,Untitled,SoKnight,JSON,Sunday 14th of May 2023 10:01:03 AM CDT,"[
	{
		""game_version"": ""1.19.3"",
		""latest"": {
			""forge_version"": ""44.1.23"",
			""release_date"": ""2023-03-09"",
			""downloads"": {
				""installer"": {
					""key"": ""installer"",
					""url"": ""...-installer.jar"",
					""md5"": ""a61c82c7331863063a32c7c89078661a"",
					""sha1"": ""1b12abceb351e65c8ba54024832c004ecff60053""
				},
				""universal"": {
					""key"": ""universal"",
					""url"": ""...-universal.jar"",
					""md5"": ""a61c82c7331863063a32c7c89078661a"",
					""sha1"": ""1b12abceb351e65c8ba54024832c004ecff60053""
				},
				""mdk"": {
					""key"": ""mdk"",
					""url"": ""...-mdk.zip"",
					""md5"": ""556fc148a1af4f1c1dd53206e51a6898"",
					""sha1"": ""7788c26f426f986459e6a47b2e943556a28440b6""
				}
			}
		},
		""recommended"": {
			""forge_version"": ""44.1.0"",
			""release_date"": ""2023-01-02"",
			""downloads"": {
				""installer"": {
					""key"": ""installer"",
					""url"": ""...-installer.jar"",
					""md5"": ""b6028f0fad82a6240d0d152b3313ecd3"",
					""sha1"": ""959356f956a01aee94a4112ae820bd62c7df4286 ""
				},
				""mdk"": {
					""key"": ""mdk"",
					""url"": ""...-mdk.zip"",
					""md5"": ""252be6e9b92cdbbaedc60dac9e8c992c"",
					""sha1"": ""5bfc0cca014d119f4299acec63870202f97b37fe ""
				}
			}
		}
	}
]"
