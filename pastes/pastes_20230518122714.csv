id,title,username,language,date,content
tkp0myw4,struck_begin,cuniszkiewicz,C#,Thursday 18th of May 2023 07:07:56 AM CDT,"using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Struct
{
    internal class Program
    {
        struct Student
        {
            public string name;
            public string surname;
            public int index;
            public double avg;
        
        }
        static void Main(string[] args)
        {
            Student[] student = new Student[3];
            int decision;
            do
            {
                Console.Clear();
                Console.WriteLine(""0 - EXIT"");
                Console.WriteLine(""1 - Add student to data base"");
                Console.WriteLine(""2 - Print students"");
                Console.Write(""Your decision: "");
                decision = int.Parse(Console.ReadLine());

                switch (decision)
                {
                    case 0:

                        break;
                        case 1:
                        for (int i = 0; i < student.Length; i++)
                        {
                            Console.WriteLine($""Student {i + 1}: "");
                            Console.Write($""Name: "");
                            student[i].name = Console.ReadLine();
                            Console.Write($""Surname: "");
                            student[i].surname = Console.ReadLine();
                            Console.Write($""Index: "");
                            student[i].index = int.Parse(Console.ReadLine());
                            Console.Write($""Average of grades: "");
                            student[i].avg = double.Parse(Console.ReadLine());
                        }
                        break; 
                    case 2:
                        Console.Clear();
                        for (int i = 0; i < student.Length; i++)
                        {
                            Console.WriteLine($""Student: {student[i].name} "" +
                                $""{student[i].surname} index: {student[i].index}"");
                        }

                        Console.ReadKey();
                        break;
                    default:
                        break;
                }   
            } while (decision != 0);
        }
    }
}
"
ecaU6XCm,sh_aliases,Shuraken007,Bash,Thursday 18th of May 2023 06:59:49 AM CDT,"host_sub_proxy () {
   declare sub_args;
   if [ -f $SCRIPT_DIR/host_sub.pl ]; then
      sub_args=$(perl $SCRIPT_DIR/host_sub.pl $@);
      [ $? != 0 ] && echo $sub_args && return 1;
      echo ""$sub_args""
   fi
   sub_args=$(echo $sub_args | tail -n1);
   printf '%sOk? [y/n]%s ' \
     ""$FMT_YELLOW"" ""$FMT_RESET""
   read -r opt
   case $opt in
     y*|Y*|"""") eval ""command $sub_args"";;
     n*|N*) echo ""----------""; return ;;
   esac
}

ssh() {
   host_sub_proxy ssh $@;
}
scp() {
   host_sub_proxy scp $@;
}
ssh-copy-id() {
   host_sub_proxy ssh-copy-id $@;
}
sshpass () {
   host_sub_proxy sshpass $@;
}
rsync () {
   host_sub_proxy rsync $@;
}
"
n7zPMMDq,host_sub.pl,Shuraken007,Perl,Thursday 18th of May 2023 06:35:27 AM CDT,"#!/usr/local/bin/perl

use strict;
use warnings;
use Data::Dumper;

my @known_cmd = ('ssh', 'scp'),
my %config = (
   game => {
      host => 'bandit.labs.overthewire.org',
      port => '2220',
      users => [
         {
            user => 'bandit0',
            password => 'bandit0',
         },
         {
            user => 'bandit1',
            password => '~/tmp/bash_game/readme',
            is_file =>1,
         },
         {
            user => 'bandit2',
            password => '~/tmp/bash_game/-',
            is_file => 1,
         },
         {
            user => 'bandit3',
            password => '~/tmp/bash_game/spaces in this filename',
            is_file => 1,
         },
         {
            user => 'bandit4',
            password => '~/tmp/bash_game/.hidden',
            is_file => 1,
         },
         {
            user => 'bandit5',
            password => '~/tmp/bash_game/inhere/-file07',
            is_file => 1,
         },
         {
            user => 'bandit6',
            password => '~/tmp/bash_game/inhere/maybehere07/.file2',
            is_file => 1,
         },
         {
            user => 'bandit7',
            password => '~/tmp/bash_game/var/lib/dpkg/info/bandit7.password',
            is_file => 1,
         },
         {
            user => 'bandit8',
            password => 'TESKZC0XvTetK0S9xNwm25STk5iWrBvP',
         }
      ]
   }
);

sub get_passwd {
   my $user_cfg = shift @_;
   my ($pass, $is_file) = @$user_cfg{'password', 'is_file'};
   return () if ! $pass;

   my @cmd = ('sshpass');
   if ($is_file) {
      push @cmd, '-f';
      $pass =~ s#(?!\\)( )#\\ #g;
      push @cmd, $pass;
   } else {
      push @cmd, '-p', $pass;
   }
   return @cmd;
}

sub get_host_alias_by_user {
   my $user = shift @_;
   my $host_alias;

   while( my($host_alias_cfg, $data_cfg) = each %config) {
      for (@{$data_cfg->{'users'}}) {
         if ($_->{'user'} eq $user) {
            # print ""find ----> $host_alias_cfg\n"";
            return $host_alias_cfg;
         }
      }
   }
}

sub parse_args{
   my (@args) = @_;
   my ($cmd, $cmd_i, $is_port, $host_alias, $host_i, $user, $host_path);

   while (my ($i, $arg) = each @args) {
      OUTER:
      for my $known_cmd (@known_cmd) {
         if ($arg eq $known_cmd)
         {
            $cmd=$arg; 
            $cmd_i=$i;
            last;
         } 
         next OUTER;
      }

      if ($arg eq '-p' || $arg eq '-P') {
         $is_port = 1;
         last;
      }

      my ($arg_user, $arg_host, $arg_host_path)=$arg =~ m/([^\@:]+)?\@?([^:]+)?(:.+)?/;
      if ($arg_user && !$arg_host) {
         $arg_host = get_host_alias_by_user($arg_user);
      }
      if (!$arg_host) {
         $arg_host = $arg;
         $arg_user = undef;
      }
      # printf( ""%s-->%s-->%s\n"", $arg_user||'', $arg_host||'', $arg_host_path||'');
      for my $host_alias_cfg (keys %config) {
         next if $host_alias_cfg ne $arg_host;

         $host_alias = $arg_host; $host_i = $i; $host_path = $arg_host_path||'';
         my $are_spaces_escaped = $host_path =~ s#(?!\\)( )#\\ #g;
         if ($are_spaces_escaped && $host_path !~ /^\"".+\""$/) {
            $host_path =~ s/(:)(.+)/$1\""$2\""/
         }
         $user = $config{$host_alias}{'users'}[0] if !$arg_user;
         last if $user;

         for my $user_cfg (@{$config{$host_alias}{'users'}}) {
            next if $user_cfg->{'user'} ne $arg_user;
            $user = $user_cfg;
            last;
         }
         $user //= {user => $arg_user};
      }
   }

   my %result = (
      cmd => $cmd,
      cmd_i => $cmd_i,
      host_alias => $host_alias,
      host_i => $host_i,
      user_cfg => $user,
      is_port => $is_port//0,
      host_path => $host_path,
   );
   # print Dumper(\%result);
   return %result;
}

sub main{
   my (@args) = @_;
   my %p_args = parse_args(@args);
   my ($cmd, $cmd_i, $host_alias, $host_i, $user_cfg, $is_port, $host_path) = 
      @p_args{qw(cmd cmd_i host_alias host_i user_cfg is_port host_path)};
   $cmd //= '';

   if ($host_alias) {
      my $host = $config{$host_alias}{'host'};
      my $user = $user_cfg->{'user'};
      $args[$host_i] = ""$user\@$host$host_path"";
   }

   my $main_cmd = $args[0];
   if (!$is_port) {
      my $port = $config{$host_alias}{'port'};
      if ($port && $main_cmd eq 'rsync' && $cmd ne 'ssh') {
         splice @args, 1, 0, '-e', ""'ssh -p $port'"", '--info=progress2';
      } elsif ($port && $cmd eq 'ssh') {
         push @args, '-p', $port;
      } elsif ($port && $cmd eq 'scp') {
         splice @args, $cmd_i+1, 0, '-P', $port;
         $host_i+=2;
      }
   }

   my @password_cmd = get_passwd($user_cfg);
   splice @args, 0, 0, @password_cmd;
   return @args;
}

@ARGV = main(@ARGV);
print join("" "", @ARGV);"
eqyvbGb7,BTC Wallet Credentials have been reset,mentoqueen_72,GetText,Thursday 18th of May 2023 06:28:34 AM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please disregard this message.
Your new login credentials will be 
mostowegoes:a6TVE7 on 16.16.200.36(SSH)
Regards"
9Zvgvi5K,GoLinkedList,Te4nick,Go,Thursday 18th of May 2023 06:13:45 AM CDT,"package LinkedList

import (
	""errors""
	""fmt""
	""strings""
)

type Node struct {
	value interface{}
	next  *Node
}

type LinkedList struct {
	first *Node
	last  *Node
	size  int
}

func New(values ...interface{}) *LinkedList {
	ll := &LinkedList{}
	if len(values) > 0 {
		ll.Add(values...)
	}
	return ll
}

func (ll *LinkedList) Add(values ...interface{}) {
	for _, value := range values {
		node := &Node{value: value, next: nil}
		if ll.size == 0 {
			ll.first = node
			ll.last = node
		} else {
			ll.last.next = node
			ll.last = node
		}
		ll.size++
	}
}

func (ll *LinkedList) Append(values ...interface{}) {
	ll.Add(values...)
}

func (ll *LinkedList) Prepend(values ...interface{}) {
	for index := len(values) - 1; index >= 0; index-- {
		node := &Node{value: values[index], next: ll.first}
		ll.first = node
		if ll.size == 0 {
			ll.last = node
		}
		ll.size++
	}
}

func (ll *LinkedList) Set(index int, value interface{}) error {
	if !ll.withinRange(index) {
		return errors.New(fmt.Sprintf(""LinkedList: index %d is out of range (size = %d)"", index, ll.size))
	}

	foundValue := ll.first
	for i := 0; i != index; i++ {
		foundValue = foundValue.next
	}
	foundValue.value = value
	return nil
}

func (ll *LinkedList) Get(index int) (interface{}, error) {
	if !ll.withinRange(index) {
		return nil, errors.New(fmt.Sprintf(""LinkedList: index %d is out of range (size = %d)"", index, ll.size))
	}

	node := ll.first
	for i := 0; i != index; i, node = i+1, node.next {
	}
	return node.value, nil
}

func (ll *LinkedList) Remove(index int) error {
	if !ll.withinRange(index) {
		return errors.New(fmt.Sprintf(""LinkedList: index %d is out of range (size = %d)"", index, ll.size))
	} else if ll.size == 1 {
		ll.Clear()
	}

	var beforeNode *Node
	node := ll.first
	for e := 0; e != index; e, node, beforeNode = e+1, node.next, node {
	}

	if node == ll.first {
		ll.first = node.next
	}
	if node == ll.last {
		ll.last = beforeNode
	}
	if beforeNode != nil {
		beforeNode.next = node.next
	}

	node = nil
	ll.size--
	return nil
}

func (ll *LinkedList) Insert(index int, values ...interface{}) error {

	if !ll.withinRange(index) {
		return errors.New(fmt.Sprintf(""LinkedList: index %d is out of range (size = %d)"", index, ll.size))
	}
	if index == 0 {
		ll.Prepend(values...)
		return nil
	}

	ll.size += len(values)
	var beforeNode *Node
	foundNode := ll.first
	for e := 0; e != index; e, foundNode, beforeNode = e+1, foundNode.next, foundNode {
	}

	oldNextElement := beforeNode.next
	for _, value := range values {
		newElement := &Node{value: value}
		beforeNode.next = newElement
		beforeNode = newElement
	}
	beforeNode.next = oldNextElement
	return nil
}

func (ll *LinkedList) Contains(values ...interface{}) bool {
	valueMap := make(map[interface{}]bool)

	// заполняем map значениями
	for i := 0; i < len(values); i++ {
		valueMap[values[i]] = true
	}

	// проверяем каждый узел списка на наличие в map
	for node := ll.first; node != nil; node = node.next {
		if _, ok := valueMap[node.value]; ok {
			delete(valueMap, node.value)
		}

		if len(valueMap) == 0 {
			return true
		}
	}
	return false
}

func (ll *LinkedList) IndexOf(value interface{}) (int, error) {
	if ll.size == 0 {
		return -1, errors.New(fmt.Sprintf(""LinkedList: list is empty (size = %d)"", ll.size))
	}
	for index, node := range ll.Values() {
		if node == value {
			return index, nil
		}
	}
	return -1, errors.New(fmt.Sprintf(""LinkedList: value %v is not in list"", value))
}

func (ll *LinkedList) Empty() bool {
	return ll.size == 0
}

func (ll *LinkedList) Size() int {
	return ll.size
}

func (ll *LinkedList) Clear() {
	ll.first = nil
	ll.last = nil
	ll.size = 0
}

func (ll *LinkedList) Values() []interface{} {
	values := make([]interface{}, ll.size, ll.size)
	for v, node := 0, ll.first; node != nil; v, node = v+1, node.next {
		values[v] = node.value
	}
	return values
}

func (ll *LinkedList) Swap(i, j int) error {
	if !ll.withinRange(i) || !ll.withinRange(j) {
		return errors.New(fmt.Sprintf(""LinkedList: i=%d or j=%d is out of range (size=%d)"", i, j, ll.size))
	}
	if i == j {
		return nil
	}

	var node1, node2 *Node
	for e, currNode := 0, ll.first; node1 == nil || node2 == nil; e, currNode = e+1, currNode.next {
		switch e {
		case i:
			node1 = currNode
		case j:
			node2 = currNode
		}
	}
	node1.value, node2.value = node2.value, node1.value
	return nil
}

func (ll *LinkedList) Sort(less func(a, b interface{}) bool) {
	// Если список пустой или содержит только один элемент, он уже отсортирован.
	if ll.first == nil || ll.first.next == nil {
		return
	}

	// Создаем новый список, в который будем вставлять элементы в отсортированном порядке.
	sorted := &LinkedList{first: nil, last: nil, size: ll.size}

	// Перебираем все элементы и вставляем их в отсортированный список.
	for node := ll.first; node != nil; {
		next := node.next

		// Находим место, куда нужно вставить текущий элемент в отсортированный список.
		curr := sorted.first
		var prev *Node
		for curr != nil && less(curr.value, node.value) {
			prev = curr
			curr = curr.next
		}

		// Вставляем текущий элемент в отсортированный список.
		if prev == nil {
			sorted.first = node
		} else {
			prev.next = node
		}
		node.next = curr

		// Переходим к следующему элементу.
		node = next
	}

	// Обновляем первый и последний элементы в исходном списке.
	ll.first = sorted.first
	ll.last = sorted.last
}

func (ll *LinkedList) String() string {
	s := ""LinkedList: [""
	strValues := make([]string, ll.size)
	for index, node := 0, ll.first; node != nil; index, node = index+1, node.next {
		strValues[index] = fmt.Sprintf(""%v"", node.value)
	}
	return s + strings.Join(strValues, "", "") + ""]""
}

func (ll *LinkedList) withinRange(index int) bool {
	return 0 <= index && index < ll.size
}
"
GV1kuQu7,overthewire_8_9,Shuraken007,Bash,Thursday 18th of May 2023 06:13:35 AM CDT,"cat data.txt | perl -ne 'BEGIN{%a=();}$a{$_}++;END{while(($k,$v) = each %a) {print $k if $v==1}}'"
siwV7W3g,Container Lab Test Registry with Auth.,aznashwan,Bash,Thursday 18th of May 2023 06:12:35 AM CDT,"#!/bin/bash

set -eux

apt-get install -y apache2-utils

CERTS_DIR=""${CERTS_DIR:=/etc/docker/testregcerts}""
REGISTRY_USER=""${REGISTRY_USER:=testuser}""
REGISTRY_PASSWORD=""${REGISTRY_PASSWORD:=Passw0rd}""

# Create the self-signed x509 certificates we'll be using:
mkdir -p ""$CERTS_DIR""
openssl req \
  -newkey rsa:4096 -nodes -sha256 -keyout ""${CERTS_DIR}/domain.key"" \
  -addext ""subjectAltName = DNS:myregistry.domain.com"" \
  -x509 -days 365 -out ""${CERTS_DIR}/domain.crt""

# We will encrypt the password 
AUTH_DIR=""${CERTS_DIR}/auth""
mkdir -p ""$AUTH_DIR""
htpasswd -bnB ""$REGISTRY_USER"" ""$REGISTRY_PASSWORD"" > ""${AUTH_DIR}/htpasswd""

# Run registry container with mounts/env vars required for auth.
# The `-v source:target` arguments mount the host directories in the containers.
# The `-e VAR=val` arguments pass the necessary env variables for the Registry.
# Note that the `-e VAR=/path` arguments refer to paths WITHIN the registry container.
docker container run -d \
	-p 5000:5000 --name registry_basic \
	-v ""${AUTH_DIR}"":""${AUTH_DIR}"" -v ""${CERTS_DIR}"":""${CERTS_DIR}"" \
	-e REGISTRY_AUTH=htpasswd \
	-e REGISTRY_AUTH_HTPASSWD_REALM=""Registry Realm"" \
	-e REGISTRY_AUTH_HTPASSWD_PATH=""${AUTH_DIR}/htpasswd"" \
	-e REGISTRY_HTTP_TLS_CERTIFICATE=""${CERTS_DIR}/domain.crt"" \
	-e REGISTRY_HTTP_TLS_KEY=""${CERTS_DIR}/domain.key"" \
	registry

# Cat the creds for the user:
echo ""Your 'user / pass' is:  ${REGISTRY_USER} / ${REGISTRY_PASSWORD}"""
scG6yiL0,Container Lab Flask App.,aznashwan,Python,Thursday 18th of May 2023 06:10:52 AM CDT,"#!/usr/bin/env python3

import json, os, sys

import flask

# Simple test app which will list/cat files on the host.
app = flask.Flask(__name__)


@app.route('/', defaults={'path': ''})
@app.route('/<path:path>')
def get_dirpath(path):
    path = f""/{path}""
    if os.path.isdir(path):
        # List entries within directories:
        return json.dumps(sorted(os.listdir(path)), indent=4)
    elif os.path.isfile(path):
        # Return contents of files:
        with open(path, ""r"") as fin:
            return fin.read()
    else:
        # 404 if the path is a link or does not exist:
        flask.abort(404)


if __name__ == ""__main__"":
    print(f""sys.argv: {sys.argv}"")
    if len(sys.argv) < 3:
        raise ValueError(f""USAGE: python3 {sys.argv[0]} HOSTNAME PORT_NUMBER"")
    hostname = sys.argv[1]
    port = int(sys.argv[2])

    app.run(hostname, port)"
j8rMUufx,data576,TestGuy1,JSON,Thursday 18th of May 2023 06:00:06 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: 'a70590cf6b5f28ab21bd51ec9ed0daaba4c4ee3107a61b6890d6a8f67c88ca65be0e0bea9baa499cda879abac8c09f42bbf652e2a46e71cf5486715e5dbe81dda9db1ef696ca52f30d53aab3e19300d259b09acb93b74d181cc69076cb3219c72931be73d899c7ee7a9a376754f41b4faf20bfd13f0d58992d8dc9aec8ab0e16',
  otherdata: [
    '4d4cbfc0c1c9453ecdbdc5a690857b1a',
    '16f57285d651f64dd516c0a37c180d4d',
    'a3b8a7d6ef7629fbc539f8a2ab3dfa71',
    '65a3982beaad281aac274825baae72b2',
    'bd1441e763f3e9964f07d2e3d0a86a81',
    '1366921a2ea36cf1d11af644589049ba',
    'b64901e028b7df326f8f6ee375244fbf',
    '61ca00261af5047a780c030ea4ed30c7'
  ]
}"
7g2tDWx3,Untitled,verygoodplugins,PHP,Thursday 18th of May 2023 05:50:18 AM CDT,"<?php
/**
 * Plugin Name: WPBakery Page Builder
 * Plugin URI: http://wpbakery.com
 * Description: Drag and drop page builder for WordPress. Take full control over your WordPress site, build any layout you can imagine – no programming knowledge required.
 * Version: 6.11.0
 * Author: Michael M - WPBakery.com
 * Author URI: http://wpbakery.com
 * Text Domain: js_composer
 * Domain Path: /locale/
 * Requires at least: 4.9
 * Woo: 18734001738633:249bdd2d5fc84782b12368a238115991
 *
 * @package WPBakery Page Builder
 */

// don't load directly
if ( ! defined( 'ABSPATH' ) ) {
	die( '-1' );
}
/**
 * Current WPBakery Page Builder version
 */
if ( ! defined( 'WPB_VC_VERSION' ) ) {
	/**
	 *
	 */
	define( 'WPB_VC_VERSION', '6.11.0' );
}

$dir = dirname( __FILE__ );
define( 'WPB_PLUGIN_DIR', $dir );
define( 'WPB_PLUGIN_FILE', __FILE__ );

require_once $dir . '/include/classes/core/class-vc-manager.php';
/**
 * Main WPBakery Page Builder manager.
 * @var Vc_Manager $vc_manager - instance of composer management.
 * @since 4.2
 */
global $vc_manager;
if ( ! $vc_manager ) {
	$vc_manager = Vc_Manager::getInstance();
	// Load components
	$vc_manager->loadComponents();
}
"
eFMwHd8X,Untitled,D3ENNY,PHP,Thursday 18th of May 2023 05:44:38 AM CDT,"<?php
class Template{

        public function template($page){
            echo(""<br>entering into Template.template()<br>"");
  
            try{
                $extension = '.php';
                $default = ""index"";
                $error404 = ERROR . '404' . $extension; 
                //si blocca alla riga sopra
                $components = COMPONENTS . 'admin/';
                $request_page = isset($page) ? $page : $default;
                $included_page = PAGES . $request_page . $extension;

                $output = [];

                if(file_exists($included_page)){
                    require_once($components . 'head.php');
                    require_once($components . 'header.php');
                    require_once($components . 'aside.php');
                    require_once($included_page);
                    require_once($components . 'footer.php');
                }else{
                    require_once($error404);
                }

            }catch(Exception $e){
                var_dump($e);
                echo ""error"";
            }

            return $output;
        }

?>
====================
config.php
====================
<?php

    define('ABSPATH', $_SERVER[""DOCUMENT_ROOT""] . '/progetti/login-volandia/');
    define('PAGES', ABSPATH . 'pages/');
    define('COMPONENTS', ABSPATH . 'assets/components/');
    define('ERROR', PAGES . 'error/');"
5yLTtmjL,code de base modifie,granteeric,Arduino,Thursday 18th of May 2023 05:04:45 AM CDT,"#include <dht11.h>
#include <LiquidCrystal_I2C.h>

#define DHT11PIN 2 // broche DATA -> broche 2
#define ventilateurPIN 4 // broche -> pour ventilateur


LiquidCrystal_I2C lcd(0x27, 20, 4);
dht11 DHT11;

uint8_t stateVentilator {0};        //variable d'état du ventilateur 0 arret, 1 en marche

void setup()
{ 
    pinMode(ventilateurPIN,OUTPUT);                             // definit ventilateurPIN comme une sortie
    lcd.init();                                                 // initialisation de l’afficheur
    lcd.backlight();                                            // active le rétro-éclairage
}
void loop(){
    DHT11.read(DHT11PIN);                                       //A voir en fonction de ta librairie installer
    lcd.clear();                                                // effacer le contenu de l’Afficheur LCD
    lcd.setCursor(0, 0);                                        // se positionner à la première ligne
    lcd.print(""temperature= "");
    lcd.setCursor(0,1);                                         // se positionner à la deuxième ligne
    lcd.print( (static_cast<float>DHT11.temperature ) );        // Afficher la température sur l'afficheur  //toujouts en fonction de ta lib
    if ( (static_cast<float>DHT11.temperature ) >28.0f) {       //ici on compare la température avec 28°C float et float (nombre a virgule)
        digitalWrite(ventilateurPIN,HIGH);                      // le ventilateur se met à tourner
        stateVentilator = 1;                                    // on met à jour l'état du ventilateur
    } else {
        digitalWrite(ventilateurPIN,LOW);                       // le ventilateur s'arrête
        stateVentilator = 0;                                    // on met à jour l'état du ventilateur
    }
delay(2000);
}"
ngKHP3ag,ESP32 WebServer DIY Irrigation Kit,microrobotics,Arduino,Thursday 18th of May 2023 04:54:57 AM CDT,"#include <WiFi.h>
#include <time.h>
#include <ESPAsyncWebServer.h>

// Define your pins
#define MOISTURE_SENSOR_PIN 34
#define RELAY_PIN 13

// Initial thresholds
int MOISTURE_MIN = 300;
int MOISTURE_MAX = 800;

AsyncWebServer server(80);

unsigned long lastWateringTime = 0;
time_t pumpActivationTime = 0;

const char* ntpServer = ""pool.ntp.org"";
const long  gmtOffset_sec = 0;    // Change this to the offset of your timezone in seconds
const int   daylightOffset_sec = 3600; // Change this to the daylight saving for your timezone in seconds

const char* ssid = ""your_SSID"";       // replace with your wifi ssid 
const char* password = ""your_PASSWORD""; // replace with your wifi password

void setup(){
  Serial.begin(115200);
  pinMode(MOISTURE_SENSOR_PIN, INPUT);
  pinMode(RELAY_PIN, OUTPUT);
  digitalWrite(RELAY_PIN, HIGH); // Normally relay is active low

  // Connect to Wi-Fi.
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println(""Connecting to WiFi..."");
  }
  Serial.println(""Connected to WiFi"");
  Serial.print(""IP Address: "");
  Serial.println(WiFi.localIP());

  // Init and get the time
  configTime(gmtOffset_sec, daylightOffset_sec, ntpServer);

  // Setup server routes
  server.on(""/status"", HTTP_GET, [](AsyncWebServerRequest *request){
    String message = ""Soil moisture: "";
    message += String(map(analogRead(MOISTURE_SENSOR_PIN), MOISTURE_MIN, MOISTURE_MAX, 0, 100));
    message += ""%\nLast watering: "";
    message += String((millis() - lastWateringTime)/60000);
    message += "" minutes ago"";
    request->send(200, ""text/plain"", message);
  });

  server.on(""/setMinMoisture"", HTTP_GET, [](AsyncWebServerRequest *request){
    String message;
    if(request->hasParam(""value"")) {
      int newMin = request->getParam(""value"")->value().toInt();
      if(newMin < MOISTURE_MAX) {
        MOISTURE_MIN = newMin;
        message = ""New minimum moisture set to "";
        message += String(MOISTURE_MIN);
      } else {
        message = ""Invalid value. Minimum moisture must be less than maximum moisture."";
      }
    } else {
      message = ""No value provided."";
    }
    request->send(200, ""text/plain"", message);
  });

  server.on(""/setMaxMoisture"", HTTP_GET, [](AsyncWebServerRequest *request){
    String message;
    if(request->hasParam(""value"")) {
      int newMax = request->getParam(""value"")->value().toInt();
      if(newMax > MOISTURE_MIN) {
        MOISTURE_MAX = newMax;
        message = ""New maximum moisture set to "";
        message += String(MOISTURE_MAX);
      } else {
        message = ""Invalid value. Maximum moisture must be greater than minimum moisture."";
      }
    } else {
      message = ""No value provided."";
    }
    request->send(200, ""text/plain"", message);
  });

  server.on(""/setPumpTime"", HTTP_GET, [](AsyncWebServerRequest *request){
    String message;
    if(request->hasParam(""timestamp"")) {
      pumpActivationTime = request->getParam(""timestamp"")->value().toInt();
      message = ""Pump set to activate at "";
      message += String(pumpActivationTime);
    } else {
      message = ""No timestamp provided."";
    }
    request->send(200, ""text/plain"", message);
  });

  server.begin();
}

void loop(){
  int soilMoisture = map(analogRead(MOISTURE_SENSOR_PIN), MOISTURE_MIN, MOISTURE_MAX, 0, 100);

  time_t now;
  time(&now);

  // If soil is too dry, or it's the scheduled pump time, turn on the pump
  if(soilMoisture < 50 || now >= pumpActivationTime) {
    digitalWrite(RELAY_PIN, LOW);
    lastWateringTime = millis();
    pumpActivationTime = 0; // Reset the scheduled pump time
  } else {
    digitalWrite(RELAY_PIN, HIGH);
  }
}
"
KT08zQzE,Forminator  - set upload field to WP core (non ACF) custom field,adczk,PHP,Thursday 18th of May 2023 04:45:28 AM CDT,"<?php
/**
 * Plugin Name: [Forminator] Upload mapping to ACF image field
 * Description: Solves a bug that prevents upload field mapping to ACF image field through post data form
 * Author: Prashant Singh @ WPMUDEV
 * Author URI: https://premium.wpmudev.org
 * License: GPLv2 or later
 */

if ( ! defined( 'ABSPATH' ) ) {
	exit;
}

if ( defined( 'WP_CLI' ) && WP_CLI ) {
	return;
}

add_filter( 'forminator_custom_form_submit_errors', 'wpmudev_map_uplods_acf_post_test', 10, 3 );
function wpmudev_map_uplods_acf_post_test( $submit_errors, $form_id, $field_data_array ) {
    $form_ids = array( 16552 ); //Please change form IDs to your form IDs
	if( !in_array( $form_id, $form_ids ) ){
		return $submit_errors;
	}

	$submitted_data = Forminator_CForm_Front_Action::$prepared_data;
	
	if( isset( $submitted_data['postdata-1'] ) && is_array( $submitted_data['postdata-1'] ) ) {
		if( isset( $submitted_data['postdata-1']['post-custom'] ) && is_array( $submitted_data['postdata-1']['post-custom'] ) ) {
			foreach( $submitted_data['postdata-1']['post-custom'] as $post_key => $post_val ) {
				if( strpos( $post_val['value'], '{upload' ) !== false ) {
					$field_name = str_replace('{', '', $post_val['value'] );
					$field_name = str_replace('}', '', $field_name );
					if ( is_array( $submitted_data[ $field_name ] ) && isset( $submitted_data[ $field_name ]['file'] ) ) {
						if ( isset( $submitted_data[ $field_name ]['file']['file_url'] ) ) {
							Forminator_CForm_Front_Action::$prepared_data['postdata-1']['post-custom'][$post_key]['value'] = $submitted_data[ $field_name ]['file']['file_url'];
						}
					}
				}
			}
		}
	}
	
	return $submit_errors;
}

add_action( 'forminator_post_data_field_post_saved', 'wpmudev_update_post_acf_uploads_test', 10, 4 );
function wpmudev_update_post_acf_uploads_test( $post_id, $field, $data, $cls ){
	$submitted_data = Forminator_CForm_Front_Action::$prepared_data;
	$form_ids = array( 16552 ); //Please change form IDs to your form IDs
	if ( !in_array( $submitted_data['form_id'], $form_ids ) ) {
	  return;  
	}
	
	if( isset( $submitted_data['postdata-1'] ) && is_array( $submitted_data['postdata-1'] ) ) {
		if( isset( $submitted_data['postdata-1']['post-custom'] ) && is_array( $submitted_data['postdata-1']['post-custom'] ) ) {
			foreach( $submitted_data['postdata-1']['post-custom'] as $post_key => $post_val ) {
				if ( $post_val['key'] == 'View Report' ) { //Please change test_image to your custom field name
				    if ( isset( $post_val['value'] ) ) {
    						update_post_meta( $post_id, $post_val['key'], $post_val['value'] );
    						$mime_type = wp_get_image_mime( $post_val['value'] );
    						if( $mime_type ) {
    							$update_data = array(
    								'ID' => $attach_id,
    								'post_mime_type' => $mime_type,
    							);
    							wp_update_post( $update_data );
    						}
				    }
				}
			}
		}
	}
}"
BsNn6htY,map,Vla_DOS,Java,Thursday 18th of May 2023 04:43:55 AM CDT,"import java.awt.*;
import javax.swing.*;
import java.awt.event.KeyEvent;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.DefaultTableCellRenderer;

public class PacmanMap extends JFrame {
    private static final int CELL_SIZE = 25;
    private static final int ROWS = 31;
    private static final int COLUMNS = 28;
    private JTable mapTable;
    private DefaultTableModel tableModel;
    private int pacmanRow = (ROWS / 2) + 2;
    private int pacmanColumn = (COLUMNS / 2) +4;
    private int ghostRow = (ROWS / 2) + 2;
    private int ghostColumn = (COLUMNS / 2) - 5;
    final boolean W=false; // Wall.
    final boolean F=true; // Crossroads with food
    final boolean E=false; // Empty crossroads
    private boolean obstacleMap[][] = {
            {W,W,W,W,W,W,W,W,W,W,W,W,W,W,W,W,W,W,W,W,W,W,W,W,W,W,W,W},
            {W,F,F,F,F,F,F,F,F,F,F,F,F,W,W,F,F,F,F,F,F,F,F,F,F,F,F,W},
            {W,F,W,W,W,W,F,W,W,W,W,W,F,W,W,F,W,W,W,W,W,F,W,W,W,W,F,W},
            {W,F,W,W,W,W,F,W,W,W,W,W,F,W,W,F,W,W,W,W,W,F,W,W,W,W,F,W},
            {W,F,W,W,W,W,F,W,W,W,W,W,F,W,W,F,W,W,W,W,W,F,W,W,W,W,F,W},
            {W,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,W},
            {W,F,W,W,W,W,F,W,W,F,W,W,W,W,W,W,W,W,F,W,W,F,W,W,W,W,F,W},
            {W,F,W,W,W,W,F,W,W,F,W,W,W,W,W,W,W,W,F,W,W,F,W,W,W,W,F,W},
            {W,F,F,F,F,F,F,W,W,F,F,F,F,W,W,F,F,F,F,W,W,F,F,F,F,F,F,W},
            {W,W,W,W,W,W,F,W,W,W,W,W,F,W,W,F,W,W,W,W,W,F,W,W,W,W,W,W},
            {E,E,E,E,E,W,F,W,W,W,W,W,F,W,W,F,W,W,W,W,W,F,W,E,E,E,E,E},
            {E,E,E,E,E,W,F,W,W,F,F,F,F,F,F,F,F,F,F,W,W,F,W,E,E,E,E,E},
            {E,E,E,E,E,W,F,W,W,F,W,W,W,W,W,W,W,W,F,W,W,F,W,E,E,E,E,E},
            {W,W,W,W,W,W,F,W,W,F,W,E,E,E,E,E,E,W,F,W,W,F,W,W,W,W,W,W},
            {F,F,F,F,F,F,F,F,F,F,W,E,E,E,E,E,E,W,F,F,F,F,F,F,F,F,F,F},
            {W,W,W,W,W,W,F,W,W,F,W,E,E,E,E,E,E,W,F,W,W,F,W,W,W,W,W,W},
            {E,E,E,E,E,W,F,W,W,F,W,W,W,W,W,W,W,W,F,W,W,F,W,E,E,E,E,E},
            {E,E,E,E,E,W,F,W,W,F,F,F,F,F,F,F,F,F,F,W,W,F,W,E,E,E,E,E},
            {E,E,E,E,E,W,F,W,W,F,W,W,W,W,W,W,W,W,F,W,W,F,W,E,E,E,E,E},
            {W,W,W,W,W,W,F,W,W,F,W,W,W,W,W,W,W,W,F,W,W,F,W,W,W,W,W,W},
            {W,F,F,F,F,F,F,F,F,F,F,F,F,W,W,F,F,F,F,F,F,F,F,F,F,F,F,W},
            {W,F,W,W,W,W,F,W,W,W,W,W,F,W,W,F,W,W,W,W,W,F,W,W,W,W,F,W},
            {W,F,W,W,W,W,F,W,W,W,W,W,F,W,W,F,W,W,W,W,W,F,W,W,W,W,F,W},
            {W,F,F,F,W,W,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,W,W,F,F,F,W},
            {W,W,W,F,W,W,F,W,W,F,W,W,W,W,W,W,W,W,F,W,W,F,W,W,F,W,W,W},
            {W,W,W,F,W,W,F,W,W,F,W,W,W,W,W,W,W,W,F,W,W,F,W,W,F,W,W,W},
            {W,F,F,F,F,F,F,W,W,F,F,F,F,W,W,F,F,F,F,W,W,F,F,F,F,F,F,W},
            {W,F,W,W,W,W,W,W,W,W,W,W,F,W,W,F,W,W,W,W,W,W,W,W,W,W,F,W},
            {W,F,W,W,W,W,W,W,W,W,W,W,F,W,W,F,W,W,W,W,W,W,W,W,W,W,F,W},
            {W,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,W},
            {W,W,W,W,W,W,W,W,W,W,W,W,W,W,W,W,W,W,W,W,W,W,W,W,W,W,W,W}
    };

    private int counter = 1;
    private int countPoint = 0;
    private JLabel counterLabel;
    private JLabel livesLabel; // Додаємо JLabel для відображення кількості життів

    Enemy enemyBlueRight;
    Enemy enemyRedLeft;
    Enemy enemyOrangeRight;
    public PacmanMap()  {
        initUI();
        ImageIcon imageIconRedLeft = new ImageIcon(getClass().getResource(""img/"" + ""RedLeft.png""));
        ImageIcon imageIconBlueRight = new ImageIcon(getClass().getResource(""img/"" + ""BlueRight.png""));
            enemyBlueRight = new Enemy(ghostRow - 6, ghostColumn, obstacleMap, 300, tableModel, imageIconBlueRight, pacmanRow, pacmanColumn, ""enemyBlue"");
        Thread enemyThreadBlueRight = new Thread(enemyBlueRight);
        enemyThreadBlueRight.start();

        enemyRedLeft = new Enemy(ghostRow+3, ghostColumn, obstacleMap, 300, tableModel, imageIconRedLeft, pacmanRow, pacmanColumn, ""enemyRed"");
        Thread enemyThreadenemyRedLeft = new Thread(enemyRedLeft);
        enemyThreadenemyRedLeft.start();

        ImageIcon imageIconOrangeRight = new ImageIcon(getClass().getResource(""img/"" + ""OrangeRight.png""));
        enemyOrangeRight = new Enemy(ghostRow-7, ghostColumn + 7, obstacleMap, 300, tableModel, imageIconOrangeRight, pacmanRow, pacmanColumn, ""enemyOrange"");
        Thread enemyThreadOrangeRight = new Thread(enemyOrangeRight);
        enemyThreadOrangeRight.start();
    }

    private void initUI(){
        tableModel = new DefaultTableModel(ROWS, COLUMNS);
        ImageIcon photo = new ImageIcon(getClass().getResource(""img/"" +""PacmanRight.png""));
        Image image = photo.getImage();

        for (int row = 0; row < ROWS; row++) {
            for (int column = 0; column < COLUMNS; column++) {
                if (!obstacleMap[row][column]) {
                    tableModel.setValueAt(""X"", row, column);
                }
                else if(obstacleMap[row][column]) {
                    tableModel.setValueAt(""*"", row, column);
                    countPoint++;
                }
            }
        }

        tableModel.setValueAt(image, pacmanRow, pacmanColumn);
        mapTable = new JTable(tableModel);
        mapTable.setGridColor(Color.black);
        mapTable.setRowHeight(CELL_SIZE);
        for (int column = 0; column < COLUMNS; column++) {
            mapTable.getColumnModel().getColumn(column).setPreferredWidth(CELL_SIZE);
        }
        mapTable.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
            @Override
            public void setValue(Object value) {

                if (value instanceof Image) {
                    ImageIcon icon = new ImageIcon((Image)value);
                    setIcon(icon);
                    setHorizontalAlignment(DefaultTableCellRenderer.CENTER);
                    setVerticalAlignment(DefaultTableCellRenderer.CENTER);
                    setBackground(new Color(13,1,35));
                    setText(null);
                }
                else if (value instanceof String && value.equals(""X"")) {
                    setBackground(new Color(80,111,214));
                    setHorizontalAlignment(DefaultTableCellRenderer.CENTER);
                    setVerticalAlignment(DefaultTableCellRenderer.CENTER);
                    setText(""X"");
                    setIcon(null);
                }
                else if (value instanceof String && ((String) value).contains(""enemy"")) {
                    String nameEnemy = """";
                    ImageIcon imageIcon;
                    if((value).equals(""enemyOrange"")){
                        imageIcon = new ImageIcon(getClass().getResource(""img/"" + ""OrangeRight.png""));
                        setIcon(imageIcon);
                        nameEnemy = ""enemyOrange"";
                    }
                    else if((value).equals(""enemyRed"")){
                        imageIcon = new ImageIcon(getClass().getResource(""img/"" + ""RedLeft.png""));
                        setIcon(imageIcon);
                        nameEnemy = ""enemyRed"";

                    }
                    else if((value).equals(""enemyBlue"")){
                    imageIcon = new ImageIcon(getClass().getResource(""img/"" + ""BlueRight.png""));
                    setIcon(imageIcon);
                    nameEnemy = ""enemyRed"";

                    }
                    setHorizontalAlignment(DefaultTableCellRenderer.CENTER);
                    setVerticalAlignment(DefaultTableCellRenderer.CENTER);
                    setBackground(new Color(13,1,35));
                    setText(nameEnemy);
                }
                else if(value instanceof String && value.equals("""")){
                    setText("""");
                    setIcon(null);
                    setBackground(new Color(13,1,35));
                }
                else if(value instanceof String && value.equals(""*"")){
                    setText("""");
                    ImageIcon photoNormalPoint = new ImageIcon(getClass().getResource(""img/"" +""NormalPoint.png""));
                    setIcon(photoNormalPoint);
                    setBackground(new Color(13,1,35));
                }
                else{
                    setText("""");
                    setIcon(null);
                    setBackground(new Color(13,1,35));
                }
            }
        });

        mapTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent event) {
                movePacman(event);
            }
        });
// Create a JPanel with a FlowLayout set to center
        JPanel topPanel = new JPanel(new FlowLayout(FlowLayout.CENTER));
        JScrollPane scrollPane = new JScrollPane(mapTable);
        scrollPane.setPreferredSize(new Dimension(CELL_SIZE * COLUMNS, CELL_SIZE * ROWS));

// Create and add the counter label to the top panel
        counterLabel = new JLabel(""Очки: "" + counter);
        topPanel.add(counterLabel);

// Create and add the lives label to the top panel
        livesLabel = new JLabel(""Життя: "" + lives);
        topPanel.add(livesLabel);

// Add the top panel to the NORTH position of the main JFrame
        add(topPanel, BorderLayout.NORTH);
        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.add(scrollPane);
        this.pack();
        this.setSize(800, 865);
        this.setLocationRelativeTo(null);
        this.setVisible(true);
    }

    int lives=3;
    private Thread movementThread;
    private int lastKeyCode = -1;

    private void movePacman(KeyEvent event) {
        int keyCode = event.getKeyCode();
        if (event.isControlDown() && event.isShiftDown() && event.getKeyCode() == KeyEvent.VK_Q) {
            // Закриття гри і повернення до головного меню
            dispose();  // Закриття вікна гри
            MainMenu mainMenu = new MainMenu();  // Створення нового екземпляра головного меню
            mainMenu.setVisible(true);  // Показати головне меню
        }
        if (keyCode == KeyEvent.VK_UP || keyCode == KeyEvent.VK_DOWN || keyCode == KeyEvent.VK_LEFT || keyCode == KeyEvent.VK_RIGHT) {
            lastKeyCode = keyCode;

            if (movementThread != null && movementThread.isAlive()) {
                // Якщо потік вже запущено, не виконувати новий рух
                return;
            }
            movementThread = new Thread(() -> {
                while (true) {
                    try {
                        Thread.sleep(300);  // Затримка 0.5 секунди
                    } catch (InterruptedException e) {
                        e.printStackTrace();
                    }
                    ImageIcon photo = null; //= new ImageIcon(getClass().getResource(""img/"" +""PacmanRight.png""));
                    int newPacmanRow = pacmanRow;
                    int newPacmanColumn = pacmanColumn;

                    switch (lastKeyCode) {
                        case KeyEvent.VK_UP:
                            newPacmanRow = pacmanRow - 1;
                            photo = new ImageIcon(getClass().getResource(""img/"" +""PacmanUp.png""));

                            break;
                        case KeyEvent.VK_DOWN:
                            newPacmanRow = pacmanRow + 1;
                            photo = new ImageIcon(getClass().getResource(""img/"" +""PacmanDown.png""));

                            break;
                        case KeyEvent.VK_LEFT:
                            newPacmanColumn = pacmanColumn - 1;
                            photo = new ImageIcon(getClass().getResource(""img/"" +""PacmanLeft.png""));

                            break;
                        case KeyEvent.VK_RIGHT:
                            newPacmanColumn = pacmanColumn + 1;
                            photo = new ImageIcon(getClass().getResource(""img/"" +""PacmanRight.png""));
                            break;
                        default:
                            return;
                    }

                    if (newPacmanRow < 0 || newPacmanRow >= ROWS || newPacmanColumn < 0 || newPacmanColumn >= COLUMNS) {
                        return;
                    }

                    if (!obstacleMap[newPacmanRow][newPacmanColumn]) {
                        return;
                    }

                    // Increment the counter if Pacman moves onto a cell with a ""."" marker
                    if (tableModel.getValueAt(newPacmanRow, newPacmanColumn).equals(""*"")) {
                        counter++;
                        counterLabel.setText(""Очки: "" + counter);
                    }


                    tableModel.setValueAt("""", pacmanRow, pacmanColumn);
                    pacmanRow = newPacmanRow;
                    pacmanColumn = newPacmanColumn;

                    Image image = photo.getImage();

                    tableModel.setValueAt(image, pacmanRow, pacmanColumn);

                    enemyBlueRight.movePacman(newPacmanRow, newPacmanColumn);
                    enemyOrangeRight.movePacman(newPacmanRow, newPacmanColumn);
                    enemyRedLeft.movePacman(newPacmanRow, newPacmanColumn);

                    if (enemyBlueRight.Check(newPacmanRow, newPacmanColumn) || enemyOrangeRight.Check(newPacmanRow, newPacmanColumn) || enemyRedLeft.Check(newPacmanRow, newPacmanColumn)) {
                        lives--;
                        livesLabel.setText(""Життя: "" + lives);
                        if (lives == 0) {
                            JOptionPane.showMessageDialog(this, ""Кінець гри!"" + ""\nВаш рахунок: "" + counter, ""Гра завершена"", JOptionPane.PLAIN_MESSAGE);
                            enemyRedLeft.stop();
                            enemyOrangeRight.stop();
                            enemyBlueRight.stop();
                            new SaveResult(counter);
                        }
                    }

                    if (countPoint == counter) {
                        JOptionPane.showMessageDialog(this, ""Ви виграли!"" + ""\nВаш рахунок: "" + counter, ""Гра завершена"", JOptionPane.PLAIN_MESSAGE);
                        enemyRedLeft.stop();
                        enemyOrangeRight.stop();
                        enemyBlueRight.stop();
                        new SaveResult(counter);

                    }
                }
            });

            movementThread.start();
        }
    }
}"
bJjs5GvN,Nigerian scammers [18-5-1/2023],bombaires,HTML,Thursday 18th of May 2023 04:16:47 AM CDT,"<a href=""mailto:markgoldfish485@gmail.com"">markgoldfish485@gmail.com</a>
<a href=""mailto:m.ar.k.g.o.l.d.fi.sh485@gmail.com"">m.ar.k.g.o.l.d.fi.sh485@gmail.com</a>
<a href=""mailto:mark.goldfish4.85@gmail.com"">mark.goldfish4.85@gmail.com</a>
<a href=""mailto:ma.r.kg.ol.d.fi.s.h.485@gmail.com"">ma.r.kg.ol.d.fi.s.h.485@gmail.com</a>
<a href=""mailto:markgol.d.f.ish.4.85@gmail.com"">markgol.d.f.ish.4.85@gmail.com</a>
<a href=""mailto:mar.k.g.ol.d.f.i.sh485@gmail.com"">mar.k.g.ol.d.f.i.sh485@gmail.com</a>
<a href=""mailto:mark.g.oldfi.sh.4.85@gmail.com"">mark.g.oldfi.sh.4.85@gmail.com</a>
<a href=""mailto:m.a.r.k.g.ol.df.i.sh.48.5@gmail.com"">m.a.r.k.g.ol.df.i.sh.48.5@gmail.com</a>
<a href=""mailto:markg.o.l.dfish4.8.5@gmail.com"">markg.o.l.dfish4.8.5@gmail.com</a>
<a href=""mailto:m.a.rkgold.fi.s.h4.8.5@gmail.com"">m.a.rkgold.fi.s.h4.8.5@gmail.com</a>
<a href=""mailto:m.a.r.kgol.d.f.is.h.4.85@gmail.com"">m.a.r.kgol.d.f.is.h.4.85@gmail.com</a>
<a href=""mailto:mar.kgold.fi.sh.485@gmail.com"">mar.kgold.fi.sh.485@gmail.com</a>
<a href=""mailto:m.ar.kgo.ld.fish.4.85@gmail.com"">m.ar.kgo.ld.fish.4.85@gmail.com</a>
<a href=""mailto:markgo.ld.fis.h48.5@gmail.com"">markgo.ld.fis.h48.5@gmail.com</a>
<a href=""mailto:m.a.rkg.ol.df.is.h48.5@gmail.com"">m.a.rkg.ol.df.is.h48.5@gmail.com</a>
<a href=""mailto:m.arkgoldf.i.s.h.485@gmail.com"">m.arkgoldf.i.s.h.485@gmail.com</a>
<a href=""mailto:ma.r.kg.ol.dfi.s.h48.5@gmail.com"">ma.r.kg.ol.dfi.s.h48.5@gmail.com</a>
<a href=""mailto:ma.r.kg.o.ldfi.s.h.48.5@gmail.com"">ma.r.kg.o.ldfi.s.h.48.5@gmail.com</a>
<a href=""mailto:m.arkg.ol.dfi.sh.4.8.5@gmail.com"">m.arkg.ol.dfi.sh.4.8.5@gmail.com</a>
<a href=""mailto:ma.rkgo.l.df.i.sh4.8.5@gmail.com"">ma.rkgo.l.df.i.sh4.8.5@gmail.com</a>
<a href=""mailto:m.a.rk.g.o.ldfi.s.h4.8.5@gmail.com"">m.a.rk.g.o.ldfi.s.h4.8.5@gmail.com</a>
<a href=""mailto:m.a.r.kg.old.fis.h48.5@gmail.com"">m.a.r.kg.old.fis.h48.5@gmail.com</a>
<a href=""mailto:m.a.r.k.go.ld.f.i.s.h4.85@gmail.com"">m.a.r.k.go.ld.f.i.s.h4.85@gmail.com</a>
<a href=""mailto:mar.kgoldf.is.h.4.85@gmail.com"">mar.kgoldf.is.h.4.85@gmail.com</a>
<a href=""mailto:mar.kgo.l.d.f.i.sh4.85@gmail.com"">mar.kgo.l.d.f.i.sh4.85@gmail.com</a>
<a href=""mailto:markg.oldfi.s.h.48.5@gmail.com"">markg.oldfi.s.h.48.5@gmail.com</a>
<a href=""mailto:ma.r.k.g.o.ld.fish.485@gmail.com"">ma.r.k.g.o.ld.fish.485@gmail.com</a>
<a href=""mailto:m.arkgold.fi.s.h4.85@gmail.com"">m.arkgold.fi.s.h4.85@gmail.com</a>
<a href=""mailto:m.a.rk.go.l.d.f.is.h.485@gmail.com"">m.a.rk.go.l.d.f.is.h.485@gmail.com</a>
<a href=""mailto:m.a.r.kgol.df.i.s.h.485@gmail.com"">m.a.r.kgol.df.i.s.h.485@gmail.com</a>
<a href=""mailto:m.ar.k.gol.dfish4.8.5@gmail.com"">m.ar.k.gol.dfish4.8.5@gmail.com</a>
<a href=""mailto:ma.rk.goldf.i.s.h.4.85@gmail.com"">ma.rk.goldf.i.s.h.4.85@gmail.com</a>
<a href=""mailto:m.a.rkgo.ldf.i.sh485@gmail.com"">m.a.rkgo.ldf.i.sh485@gmail.com</a>
<a href=""mailto:m.ark.go.l.d.fish48.5@gmail.com"">m.ark.go.l.d.fish48.5@gmail.com</a>
<a href=""mailto:ma.r.kg.o.ldf.ish4.8.5@gmail.com"">ma.r.kg.o.ldf.ish4.8.5@gmail.com</a>
<a href=""mailto:m.a.r.kgol.dfish.48.5@gmail.com"">m.a.r.kgol.dfish.48.5@gmail.com</a>
<a href=""mailto:m.ar.kg.oldf.ish48.5@gmail.com"">m.ar.kg.oldf.ish48.5@gmail.com</a>
<a href=""mailto:m.arkgo.l.d.fi.sh.4.8.5@gmail.com"">m.arkgo.l.d.fi.sh.4.8.5@gmail.com</a>
<a href=""mailto:m.ar.k.g.ol.d.fi.s.h.48.5@gmail.com"">m.ar.k.g.ol.d.fi.s.h.48.5@gmail.com</a>
<a href=""mailto:mar.k.gol.d.f.ish.4.85@gmail.com"">mar.k.gol.d.f.ish.4.85@gmail.com</a>
<a href=""mailto:m.arkgol.df.i.sh4.85@gmail.com"">m.arkgol.df.i.sh4.85@gmail.com</a>
<a href=""mailto:mar.kgo.l.d.f.ish.4.8.5@gmail.com"">mar.kgo.l.d.f.ish.4.8.5@gmail.com</a>
<a href=""mailto:m.a.rkgold.f.i.s.h.4.8.5@gmail.com"">m.a.rkgold.f.i.s.h.4.8.5@gmail.com</a>
<a href=""mailto:mar.k.go.ld.fish.4.85@gmail.com"">mar.k.go.ld.fish.4.85@gmail.com</a>
<a href=""mailto:ma.rkg.o.ldfish48.5@gmail.com"">ma.rkg.o.ldfish48.5@gmail.com</a>
<a href=""mailto:markgo.ldf.i.s.h.4.8.5@gmail.com"">markgo.ldf.i.s.h.4.8.5@gmail.com</a>
<a href=""mailto:mar.k.go.ld.fi.sh4.85@gmail.com"">mar.k.go.ld.fi.sh4.85@gmail.com</a>
<a href=""mailto:markgol.df.is.h.485@gmail.com"">markgol.df.is.h.485@gmail.com</a>
<a href=""mailto:ma.rk.g.o.l.d.fis.h485@gmail.com"">ma.rk.g.o.l.d.fis.h485@gmail.com</a>
<a href=""mailto:m.ar.kg.o.ld.f.is.h.4.8.5@gmail.com"">m.ar.kg.o.ld.f.is.h.4.8.5@gmail.com</a>
<a href=""mailto:mar.k.g.o.ldfi.sh.485@gmail.com"">mar.k.g.o.ldfi.sh.485@gmail.com</a>
<a href=""mailto:m.a.r.k.go.l.d.f.i.sh.485@gmail.com"">m.a.r.k.go.l.d.f.i.sh.485@gmail.com</a>
<a href=""mailto:mar.k.g.ol.d.fish.485@gmail.com"">mar.k.g.ol.d.fish.485@gmail.com</a>
<a href=""mailto:m.ar.kgo.ldfis.h.48.5@gmail.com"">m.ar.kgo.ldfis.h.48.5@gmail.com</a>
<a href=""mailto:mar.k.g.oldfis.h48.5@gmail.com"">mar.k.g.oldfis.h48.5@gmail.com</a>
<a href=""mailto:mar.k.g.ol.d.fis.h4.85@gmail.com"">mar.k.g.ol.d.fis.h4.85@gmail.com</a>
<a href=""mailto:mar.kgo.l.df.is.h4.85@gmail.com"">mar.kgo.l.df.is.h4.85@gmail.com</a>
<a href=""mailto:markg.o.ld.fi.sh.4.85@gmail.com"">markg.o.ld.fi.sh.4.85@gmail.com</a>
<a href=""mailto:mar.k.g.o.l.df.i.sh.485@gmail.com"">mar.k.g.o.l.df.i.sh.485@gmail.com</a>
<a href=""mailto:m.a.rkgo.ld.f.ish48.5@gmail.com"">m.a.rkgo.ld.f.ish48.5@gmail.com</a>
<a href=""mailto:m.a.r.k.go.ld.f.is.h.4.85@gmail.com"">m.a.r.k.go.ld.f.is.h.4.85@gmail.com</a>
<a href=""mailto:mar.k.g.o.ldfi.s.h.48.5@gmail.com"">mar.k.g.o.ldfi.s.h.48.5@gmail.com</a>
<a href=""mailto:mar.kg.ol.d.fi.sh48.5@gmail.com"">mar.kg.ol.d.fi.sh48.5@gmail.com</a>
<a href=""mailto:ma.r.k.g.o.l.df.i.sh485@gmail.com"">ma.r.k.g.o.l.df.i.sh485@gmail.com</a>
<a href=""mailto:m.a.rkg.old.f.i.sh.48.5@gmail.com"">m.a.rkg.old.f.i.sh.48.5@gmail.com</a>
<a href=""mailto:ma.r.k.g.o.l.df.ish.4.85@gmail.com"">ma.r.k.g.o.l.df.ish.4.85@gmail.com</a>
<a href=""mailto:mar.k.gol.df.i.sh.4.85@gmail.com"">mar.k.gol.df.i.sh.4.85@gmail.com</a>
<a href=""mailto:m.ar.kg.ol.d.f.ish.48.5@gmail.com"">m.ar.kg.ol.d.f.ish.48.5@gmail.com</a>
<a href=""mailto:m.a.r.k.g.ol.dfi.s.h485@gmail.com"">m.a.r.k.g.ol.dfi.s.h485@gmail.com</a>
<a href=""mailto:m.a.rkgoldf.i.sh48.5@gmail.com"">m.a.rkgoldf.i.sh48.5@gmail.com</a>
<a href=""mailto:m.a.r.kg.old.f.ish.48.5@gmail.com"">m.a.r.kg.old.f.ish.48.5@gmail.com</a>
<a href=""mailto:markg.o.ldfi.sh.4.85@gmail.com"">markg.o.ldfi.sh.4.85@gmail.com</a>
<a href=""mailto:m.a.r.k.gol.dfish48.5@gmail.com"">m.a.r.k.gol.dfish48.5@gmail.com</a>
<a href=""mailto:ma.rk.go.ldfis.h.48.5@gmail.com"">ma.rk.go.ldfis.h.48.5@gmail.com</a>
<a href=""mailto:ma.r.k.g.old.f.ish48.5@gmail.com"">ma.r.k.g.old.f.ish48.5@gmail.com</a>
<a href=""mailto:m.a.r.k.go.ld.fish4.85@gmail.com"">m.a.r.k.go.ld.fish4.85@gmail.com</a>
<a href=""mailto:ma.rk.g.o.ldfish4.85@gmail.com"">ma.rk.g.o.ldfish4.85@gmail.com</a>
<a href=""mailto:m.a.r.k.g.o.ldfi.s.h4.85@gmail.com"">m.a.r.k.g.o.ldfi.s.h4.85@gmail.com</a>
<a href=""mailto:mar.k.go.ld.fi.sh.4.85@gmail.com"">mar.k.go.ld.fi.sh.4.85@gmail.com</a>
<a href=""mailto:m.arkgo.ld.fi.sh.485@gmail.com"">m.arkgo.ld.fi.sh.485@gmail.com</a>
<a href=""mailto:m.a.rkgol.d.fi.sh48.5@gmail.com"">m.a.rkgol.d.fi.sh48.5@gmail.com</a>
<a href=""mailto:m.ark.g.ol.dfis.h485@gmail.com"">m.ark.g.ol.dfis.h485@gmail.com</a>
<a href=""mailto:m.a.rk.g.old.fis.h485@gmail.com"">m.a.rk.g.old.fis.h485@gmail.com</a>
<a href=""mailto:ma.rk.go.l.df.is.h.48.5@gmail.com"">ma.rk.go.l.df.is.h.48.5@gmail.com</a>
<a href=""mailto:mar.kg.ol.dfi.s.h48.5@gmail.com"">mar.kg.ol.dfi.s.h48.5@gmail.com</a>
<a href=""mailto:ma.rkg.o.l.d.f.i.s.h4.8.5@gmail.com"">ma.rkg.o.l.d.f.i.s.h4.8.5@gmail.com</a>
<a href=""mailto:m.ar.k.g.o.ldf.is.h4.8.5@gmail.com"">m.ar.k.g.o.ldf.is.h4.8.5@gmail.com</a>
<a href=""mailto:m.ar.k.g.ol.dfish4.8.5@gmail.com"">m.ar.k.g.ol.dfish4.8.5@gmail.com</a>
<a href=""mailto:m.ar.k.go.ld.fis.h.48.5@gmail.com"">m.ar.k.go.ld.fis.h.48.5@gmail.com</a>
<a href=""mailto:mar.kg.o.ld.fish.48.5@gmail.com"">mar.kg.o.ld.fish.48.5@gmail.com</a>
<a href=""mailto:ma.r.kgol.d.fi.s.h.4.85@gmail.com"">ma.r.kgol.d.fi.s.h.4.85@gmail.com</a>
<a href=""mailto:ma.rkg.o.l.df.i.s.h.4.85@gmail.com"">ma.rkg.o.l.df.i.s.h.4.85@gmail.com</a>
<a href=""mailto:m.a.r.kgo.ld.f.i.s.h.485@gmail.com"">m.a.r.kgo.ld.f.i.s.h.485@gmail.com</a>
<a href=""mailto:ma.r.k.go.ld.fi.s.h48.5@gmail.com"">ma.r.k.go.ld.fi.s.h48.5@gmail.com</a>
<a href=""mailto:ma.rk.g.o.l.dfis.h.4.8.5@gmail.com"">ma.rk.g.o.l.dfis.h.4.8.5@gmail.com</a>
<a href=""mailto:markg.oldf.i.sh485@gmail.com"">markg.oldf.i.sh485@gmail.com</a>
<a href=""mailto:mar.k.gol.df.i.sh48.5@gmail.com"">mar.k.gol.df.i.sh48.5@gmail.com</a>
<a href=""mailto:ma.r.kgo.l.df.i.sh485@gmail.com"">ma.r.kgo.l.df.i.sh485@gmail.com</a>
<a href=""mailto:m.a.rkgoldf.is.h.4.85@gmail.com"">m.a.rkgoldf.is.h.4.85@gmail.com</a>
<a href=""mailto:m.a.r.k.g.o.l.d.f.is.h.485@gmail.com"">m.a.r.k.g.o.l.d.f.is.h.485@gmail.com</a>
<a href=""mailto:m.ar.kgol.d.fi.sh4.8.5@gmail.com"">m.ar.kgol.d.fi.sh4.8.5@gmail.com</a>
<a href=""mailto:ma.rkgold.fi.sh485@gmail.com"">ma.rkgold.fi.sh485@gmail.com</a>
<a href=""mailto:ma.r.kg.o.l.d.f.is.h4.85@gmail.com"">ma.r.kg.o.l.d.f.is.h4.85@gmail.com</a>
<a href=""mailto:ma.rk.g.oldfi.sh.4.85@gmail.com"">ma.rk.g.oldfi.sh.4.85@gmail.com</a>
<a href=""mailto:ma.r.kgoldfish.4.85@gmail.com"">ma.r.kgoldfish.4.85@gmail.com</a>
<a href=""mailto:ma.r.k.go.l.d.f.ish48.5@gmail.com"">ma.r.k.go.l.d.f.ish48.5@gmail.com</a>
<a href=""mailto:ma.r.kgold.f.i.s.h.48.5@gmail.com"">ma.r.kgold.f.i.s.h.48.5@gmail.com</a>
<a href=""mailto:m.ar.kgold.f.is.h.48.5@gmail.com"">m.ar.kgold.f.is.h.48.5@gmail.com</a>
<a href=""mailto:m.ar.k.g.o.l.d.f.i.sh.4.8.5@gmail.com"">m.ar.k.g.o.l.d.f.i.sh.4.8.5@gmail.com</a>
<a href=""mailto:m.ar.k.g.oldfish.4.85@gmail.com"">m.ar.k.g.oldfish.4.85@gmail.com</a>
<a href=""mailto:m.arkg.ol.df.i.s.h.48.5@gmail.com"">m.arkg.ol.df.i.s.h.48.5@gmail.com</a>
<a href=""mailto:ma.rk.g.ol.d.f.is.h485@gmail.com"">ma.rk.g.ol.d.f.is.h485@gmail.com</a>
<a href=""mailto:m.ark.go.ldf.ish.48.5@gmail.com"">m.ark.go.ldf.ish.48.5@gmail.com</a>
<a href=""mailto:ma.rkg.old.fi.s.h485@gmail.com"">ma.rkg.old.fi.s.h485@gmail.com</a>
<a href=""mailto:m.arkg.ol.df.is.h48.5@gmail.com"">m.arkg.ol.df.is.h48.5@gmail.com</a>
<a href=""mailto:ma.rk.g.o.ld.f.ish.4.8.5@gmail.com"">ma.rk.g.o.ld.f.ish.4.8.5@gmail.com</a>
<a href=""mailto:ma.r.kg.o.l.df.i.s.h485@gmail.com"">ma.r.kg.o.l.df.i.s.h485@gmail.com</a>
<a href=""mailto:mar.k.go.l.df.i.sh4.85@gmail.com"">mar.k.go.l.df.i.sh4.85@gmail.com</a>
<a href=""mailto:ma.r.k.go.l.df.ish48.5@gmail.com"">ma.r.k.go.l.df.ish48.5@gmail.com</a>
<a href=""mailto:m.ar.k.go.l.dfis.h.48.5@gmail.com"">m.ar.k.go.l.dfis.h.48.5@gmail.com</a>
<a href=""mailto:m.ark.goldfis.h.4.85@gmail.com"">m.ark.goldfis.h.4.85@gmail.com</a>
<a href=""mailto:ma.rkg.oldfi.sh.4.85@gmail.com"">ma.rkg.oldfi.sh.4.85@gmail.com</a>
<a href=""mailto:m.a.r.kgo.ldf.i.s.h4.85@gmail.com"">m.a.r.kgo.ldf.i.s.h4.85@gmail.com</a>
<a href=""mailto:ma.r.k.gol.d.f.ish48.5@gmail.com"">ma.r.k.gol.d.f.ish48.5@gmail.com</a>
<a href=""mailto:m.a.rk.gol.dfi.sh48.5@gmail.com"">m.a.rk.gol.dfi.sh48.5@gmail.com</a>
<a href=""mailto:m.a.r.kgold.fi.sh48.5@gmail.com"">m.a.r.kgold.fi.sh48.5@gmail.com</a>
<a href=""mailto:mar.k.gol.df.i.s.h4.8.5@gmail.com"">mar.k.gol.df.i.s.h4.8.5@gmail.com</a>
<a href=""mailto:mark.g.o.l.d.f.i.sh485@gmail.com"">mark.g.o.l.d.f.i.sh485@gmail.com</a>
<a href=""mailto:m.a.r.kgold.fis.h485@gmail.com"">m.a.r.kgold.fis.h485@gmail.com</a>
<a href=""mailto:m.a.r.kgo.ldfi.sh48.5@gmail.com"">m.a.r.kgo.ldfi.sh48.5@gmail.com</a>
<a href=""mailto:ma.rk.go.ld.fis.h48.5@gmail.com"">ma.rk.go.ld.fis.h48.5@gmail.com</a>
<a href=""mailto:mar.kg.old.f.i.sh485@gmail.com"">mar.kg.old.f.i.sh485@gmail.com</a>
<a href=""mailto:ma.rkgo.l.d.f.i.sh4.85@gmail.com"">ma.rkgo.l.d.f.i.sh4.85@gmail.com</a>
<a href=""mailto:ma.r.k.g.o.ldfis.h4.8.5@gmail.com"">ma.r.k.g.o.ldfis.h4.8.5@gmail.com</a>
<a href=""mailto:ma.rkgo.l.d.fi.sh485@gmail.com"">ma.rkgo.l.d.fi.sh485@gmail.com</a>
<a href=""mailto:mar.kgo.ldfish48.5@gmail.com"">mar.kgo.ldfish48.5@gmail.com</a>
<a href=""mailto:ma.rkg.o.l.dfis.h4.8.5@gmail.com"">ma.rkg.o.l.dfis.h4.8.5@gmail.com</a>
<a href=""mailto:mar.kg.o.l.d.fis.h.4.8.5@gmail.com"">mar.kg.o.l.d.fis.h.4.8.5@gmail.com</a>
<a href=""mailto:m.ark.g.o.l.d.f.i.sh.4.8.5@gmail.com"">m.ark.g.o.l.d.f.i.sh.4.8.5@gmail.com</a>
<a href=""mailto:m.ar.k.g.old.f.is.h.485@gmail.com"">m.ar.k.g.old.f.is.h.485@gmail.com</a>
<a href=""mailto:ma.r.k.gold.fi.s.h485@gmail.com"">ma.r.k.gold.fi.s.h485@gmail.com</a>
<a href=""mailto:mark.g.o.l.d.f.i.s.h4.85@gmail.com"">mark.g.o.l.d.f.i.s.h4.85@gmail.com</a>
<a href=""mailto:m.a.rkgold.f.i.s.h485@gmail.com"">m.a.rkgold.f.i.s.h485@gmail.com</a>
<a href=""mailto:ma.r.k.g.o.ldfish4.8.5@gmail.com"">ma.r.k.g.o.ldfish4.8.5@gmail.com</a>
<a href=""mailto:ma.r.kg.o.ld.fis.h4.8.5@gmail.com"">ma.r.kg.o.ld.fis.h4.8.5@gmail.com</a>
<a href=""mailto:m.ark.g.oldfis.h.485@gmail.com"">m.ark.g.oldfis.h.485@gmail.com</a>
<a href=""mailto:m.a.r.k.gol.dfis.h4.8.5@gmail.com"">m.a.r.k.gol.dfis.h4.8.5@gmail.com</a>
<a href=""mailto:m.a.r.kg.oldfis.h.485@gmail.com"">m.a.r.kg.oldfis.h.485@gmail.com</a>
<a href=""mailto:ma.r.k.goldfi.s.h485@gmail.com"">ma.r.k.goldfi.s.h485@gmail.com</a>
<a href=""mailto:mar.k.goldfi.s.h4.8.5@gmail.com"">mar.k.goldfi.s.h4.8.5@gmail.com</a>
<a href=""mailto:m.a.rkg.ol.dfi.s.h485@gmail.com"">m.a.rkg.ol.dfi.s.h485@gmail.com</a>
<a href=""mailto:mark.g.old.f.ish48.5@gmail.com"">mark.g.old.f.ish48.5@gmail.com</a>
<a href=""mailto:markg.ol.df.i.sh4.85@gmail.com"">markg.ol.df.i.sh4.85@gmail.com</a>
<a href=""mailto:m.ar.kgo.l.df.is.h.485@gmail.com"">m.ar.kgo.l.df.is.h.485@gmail.com</a>
<a href=""mailto:ma.rkg.old.fi.sh.485@gmail.com"">ma.rkg.old.fi.sh.485@gmail.com</a>
<a href=""mailto:markg.o.l.dfish485@gmail.com"">markg.o.l.dfish485@gmail.com</a>
<a href=""mailto:mar.k.gold.f.i.sh.48.5@gmail.com"">mar.k.gold.f.i.sh.48.5@gmail.com</a>
<a href=""mailto:m.arkgo.ld.f.i.sh.48.5@gmail.com"">m.arkgo.ld.f.i.sh.48.5@gmail.com</a>
<a href=""mailto:mark.g.oldfish48.5@gmail.com"">mark.g.oldfish48.5@gmail.com</a>
<a href=""mailto:ma.rkg.o.ld.fi.s.h.48.5@gmail.com"">ma.rkg.o.ld.fi.s.h.48.5@gmail.com</a>
<a href=""mailto:m.a.r.k.g.o.l.d.f.i.sh4.8.5@gmail.com"">m.a.r.k.g.o.l.d.f.i.sh4.8.5@gmail.com</a>
<a href=""mailto:m.arkgoldf.i.sh.485@gmail.com"">m.arkgoldf.i.sh.485@gmail.com</a>
<a href=""mailto:m.a.r.kgold.f.ish.4.85@gmail.com"">m.a.r.kgold.f.ish.4.85@gmail.com</a>
<a href=""mailto:m.a.rkgol.dfish48.5@gmail.com"">m.a.rkgol.dfish48.5@gmail.com</a>
<a href=""mailto:mar.k.gol.d.fi.sh485@gmail.com"">mar.k.gol.d.fi.sh485@gmail.com</a>
<a href=""mailto:ma.r.kg.o.l.d.f.is.h4.8.5@gmail.com"">ma.r.kg.o.l.d.f.is.h4.8.5@gmail.com</a>
<a href=""mailto:ma.r.k.go.ldfis.h.48.5@gmail.com"">ma.r.k.go.ldfis.h.48.5@gmail.com</a>
<a href=""mailto:mark.g.ol.d.fi.sh.4.85@gmail.com"">mark.g.ol.d.fi.sh.4.85@gmail.com</a>
<a href=""mailto:m.ar.k.goldf.i.s.h.485@gmail.com"">m.ar.k.goldf.i.s.h.485@gmail.com</a>
<a href=""mailto:m.arkg.o.ldfi.sh.485@gmail.com"">m.arkg.o.ldfi.sh.485@gmail.com</a>
<a href=""mailto:mar.k.gol.dfi.s.h485@gmail.com"">mar.k.gol.dfi.s.h485@gmail.com</a>
<a href=""mailto:mar.k.go.l.d.fi.sh.485@gmail.com"">mar.k.go.l.d.fi.sh.485@gmail.com</a>
<a href=""mailto:mark.g.oldfi.sh48.5@gmail.com"">mark.g.oldfi.sh48.5@gmail.com</a>
<a href=""mailto:ma.rkgo.l.d.f.i.s.h.48.5@gmail.com"">ma.rkgo.l.d.f.i.s.h.48.5@gmail.com</a>
<a href=""mailto:m.ark.go.l.d.fish485@gmail.com"">m.ark.go.l.d.fish485@gmail.com</a>
<a href=""mailto:ma.r.k.g.ol.d.f.i.s.h48.5@gmail.com"">ma.r.k.g.ol.d.f.i.s.h48.5@gmail.com</a>
<a href=""mailto:m.a.rk.g.o.ld.fi.sh.4.8.5@gmail.com"">m.a.rk.g.o.ld.fi.sh.4.8.5@gmail.com</a>
<a href=""mailto:m.a.rkg.o.l.d.fi.s.h4.85@gmail.com"">m.a.rkg.o.l.d.fi.s.h4.85@gmail.com</a>
<a href=""mailto:ma.r.k.g.o.l.d.fi.sh4.8.5@gmail.com"">ma.r.k.g.o.l.d.fi.sh4.8.5@gmail.com</a>
<a href=""mailto:m.ar.kgol.d.f.ish48.5@gmail.com"">m.ar.kgol.d.f.ish48.5@gmail.com</a>
<a href=""mailto:ma.rk.go.ldf.is.h.48.5@gmail.com"">ma.rk.go.ldf.is.h.48.5@gmail.com</a>
<a href=""mailto:mark.g.o.ld.fish4.8.5@gmail.com"">mark.g.o.ld.fish4.8.5@gmail.com</a>
<a href=""mailto:m.a.rk.g.o.ldf.ish.48.5@gmail.com"">m.a.rk.g.o.ldf.ish.48.5@gmail.com</a>
<a href=""mailto:m.a.r.k.go.l.dfis.h.48.5@gmail.com"">m.a.r.k.go.l.dfis.h.48.5@gmail.com</a>
<a href=""mailto:markg.o.ld.f.i.s.h.48.5@gmail.com"">markg.o.ld.f.i.s.h.48.5@gmail.com</a>
<a href=""mailto:m.a.r.k.g.o.l.d.fish.485@gmail.com"">m.a.r.k.g.o.l.d.fish.485@gmail.com</a>
<a href=""mailto:m.a.r.k.gold.fish.4.85@gmail.com"">m.a.r.k.gold.fish.4.85@gmail.com</a>
<a href=""mailto:m.a.r.k.g.ol.df.ish.4.8.5@gmail.com"">m.a.r.k.g.ol.df.ish.4.8.5@gmail.com</a>
<a href=""mailto:m.a.r.k.gold.fi.s.h485@gmail.com"">m.a.r.k.gold.fi.s.h485@gmail.com</a>
<a href=""mailto:mark.gold.f.i.sh.48.5@gmail.com"">mark.gold.f.i.sh.48.5@gmail.com</a>
<a href=""mailto:m.a.rkg.o.l.d.fis.h.485@gmail.com"">m.a.rkg.o.l.d.fis.h.485@gmail.com</a>
<a href=""mailto:ma.rk.goldfi.sh4.8.5@gmail.com"">ma.rk.goldfi.sh4.8.5@gmail.com</a>
<a href=""mailto:m.arkg.oldf.i.s.h.485@gmail.com"">m.arkg.oldf.i.s.h.485@gmail.com</a>
<a href=""mailto:m.a.rkg.o.l.d.fi.sh4.85@gmail.com"">m.a.rkg.o.l.d.fi.sh4.85@gmail.com</a>
<a href=""mailto:ma.rk.g.o.l.df.i.s.h.4.8.5@gmail.com"">ma.rk.g.o.l.df.i.s.h.4.8.5@gmail.com</a>
<a href=""mailto:m.a.r.kgo.l.dfis.h48.5@gmail.com"">m.a.r.kgo.l.dfis.h48.5@gmail.com</a>
<a href=""mailto:m.ar.kgo.l.d.fis.h48.5@gmail.com"">m.ar.kgo.l.d.fis.h48.5@gmail.com</a>
<a href=""mailto:m.arkgol.d.f.ish48.5@gmail.com"">m.arkgol.d.f.ish48.5@gmail.com</a>
<a href=""mailto:ma.r.kg.old.f.i.sh4.85@gmail.com"">ma.r.kg.old.f.i.sh4.85@gmail.com</a>
<a href=""mailto:m.a.r.k.go.l.dfish4.8.5@gmail.com"">m.a.r.k.go.l.dfish4.8.5@gmail.com</a>
<a href=""mailto:markgoldfish485@gmail.com"">markgoldfish485@gmail.com</a>
<a href=""mailto:mabelagyemangg@gmail.com"">mabelagyemangg@gmail.com</a>
<a href=""mailto:ma.be.la.g.yem.a.n.gg@gmail.com"">ma.be.la.g.yem.a.n.gg@gmail.com</a>
<a href=""mailto:m.a.bel.a.gyem.an.gg@gmail.com"">m.a.bel.a.gyem.an.gg@gmail.com</a>
<a href=""mailto:ma.b.el.a.g.yema.ng.g@gmail.com"">ma.b.el.a.g.yema.ng.g@gmail.com</a>
<a href=""mailto:m.ab.el.ag.ye.m.ang.g@gmail.com"">m.ab.el.ag.ye.m.ang.g@gmail.com</a>
<a href=""mailto:ma.be.lag.yemang.g@gmail.com"">ma.be.lag.yemang.g@gmail.com</a>
<a href=""mailto:mab.e.l.a.g.y.e.m.ang.g@gmail.com"">mab.e.l.a.g.y.e.m.ang.g@gmail.com</a>
<a href=""mailto:mab.e.la.gye.m.a.ngg@gmail.com"">mab.e.la.gye.m.a.ngg@gmail.com</a>
<a href=""mailto:mabela.g.yema.n.g.g@gmail.com"">mabela.g.yema.n.g.g@gmail.com</a>
<a href=""mailto:m.a.belagy.e.m.an.g.g@gmail.com"">m.a.belagy.e.m.an.g.g@gmail.com</a>
<a href=""mailto:m.a.be.la.gy.e.ma.n.gg@gmail.com"">m.a.be.la.gy.e.ma.n.gg@gmail.com</a>
<a href=""mailto:m.a.b.e.lagye.m.a.ngg@gmail.com"">m.a.b.e.lagye.m.a.ngg@gmail.com</a>
<a href=""mailto:m.a.b.e.lagye.m.a.n.g.g@gmail.com"">m.a.b.e.lagye.m.a.n.g.g@gmail.com</a>
<a href=""mailto:ma.belagy.e.m.an.gg@gmail.com"">ma.belagy.e.m.an.gg@gmail.com</a>
<a href=""mailto:mabe.l.a.gy.e.ma.ng.g@gmail.com"">mabe.l.a.gy.e.ma.ng.g@gmail.com</a>
<a href=""mailto:ma.bela.gye.m.an.g.g@gmail.com"">ma.bela.gye.m.an.g.g@gmail.com</a>
<a href=""mailto:mab.ela.g.y.e.m.a.n.gg@gmail.com"">mab.ela.g.y.e.m.a.n.gg@gmail.com</a>
<a href=""mailto:mabe.la.gye.man.g.g@gmail.com"">mabe.la.gye.man.g.g@gmail.com</a>
<a href=""mailto:m.a.b.e.l.a.gye.ma.n.gg@gmail.com"">m.a.b.e.l.a.gye.ma.n.gg@gmail.com</a>
<a href=""mailto:m.a.b.ela.gy.ema.ngg@gmail.com"">m.a.b.ela.gy.ema.ngg@gmail.com</a>
<a href=""mailto:m.a.be.la.gy.e.m.a.ng.g@gmail.com"">m.a.be.la.gy.e.m.a.ng.g@gmail.com</a>
<a href=""mailto:m.abel.a.gye.m.an.gg@gmail.com"">m.abel.a.gye.m.an.gg@gmail.com</a>
<a href=""mailto:m.ab.e.l.agye.mangg@gmail.com"">m.ab.e.l.agye.mangg@gmail.com</a>
<a href=""mailto:ma.b.el.ag.ye.ma.ngg@gmail.com"">ma.b.el.ag.ye.ma.ngg@gmail.com</a>
<a href=""mailto:m.a.bel.a.g.y.ema.ngg@gmail.com"">m.a.bel.a.g.y.ema.ngg@gmail.com</a>
<a href=""mailto:m.ab.e.l.agyeman.gg@gmail.com"">m.ab.e.l.agyeman.gg@gmail.com</a>
<a href=""mailto:m.abel.a.g.yema.n.gg@gmail.com"">m.abel.a.g.yema.n.gg@gmail.com</a>
<a href=""mailto:m.abe.la.g.y.em.ang.g@gmail.com"">m.abe.la.g.y.em.ang.g@gmail.com</a>
<a href=""mailto:mab.el.ag.ye.m.a.n.g.g@gmail.com"">mab.el.ag.ye.m.a.n.g.g@gmail.com</a>
<a href=""mailto:ma.be.l.ag.ye.ma.n.gg@gmail.com"">ma.be.l.ag.ye.ma.n.gg@gmail.com</a>
<a href=""mailto:mab.e.l.a.g.y.em.a.ng.g@gmail.com"">mab.e.l.a.g.y.em.a.ng.g@gmail.com</a>
<a href=""mailto:mabe.la.gyem.an.g.g@gmail.com"">mabe.la.gyem.an.g.g@gmail.com</a>
<a href=""mailto:m.a.belag.y.eman.g.g@gmail.com"">m.a.belag.y.eman.g.g@gmail.com</a>
<a href=""mailto:m.abe.l.ag.y.e.ma.ng.g@gmail.com"">m.abe.l.ag.y.e.ma.ng.g@gmail.com</a>
<a href=""mailto:m.ab.el.a.gy.ema.n.gg@gmail.com"">m.ab.el.a.gy.ema.n.gg@gmail.com</a>
<a href=""mailto:m.a.be.l.a.g.yema.n.g.g@gmail.com"">m.a.be.l.a.g.yema.n.g.g@gmail.com</a>
<a href=""mailto:m.ab.e.l.agy.eman.g.g@gmail.com"">m.ab.e.l.agy.eman.g.g@gmail.com</a>
<a href=""mailto:ma.b.e.l.ag.ye.mang.g@gmail.com"">ma.b.e.l.ag.ye.mang.g@gmail.com</a>
<a href=""mailto:m.abel.ag.yema.n.g.g@gmail.com"">m.abel.ag.yema.n.g.g@gmail.com</a>
<a href=""mailto:ma.b.e.l.a.g.ye.ma.ngg@gmail.com"">ma.b.e.l.a.g.ye.ma.ngg@gmail.com</a>
<a href=""mailto:m.a.bel.agy.e.m.a.n.gg@gmail.com"">m.a.bel.agy.e.m.a.n.gg@gmail.com</a>
<a href=""mailto:m.ab.e.l.agyem.a.ng.g@gmail.com"">m.ab.e.l.agyem.a.ng.g@gmail.com</a>
<a href=""mailto:ma.b.el.a.gye.m.angg@gmail.com"">ma.b.el.a.gye.m.angg@gmail.com</a>
<a href=""mailto:mabelagye.man.gg@gmail.com"">mabelagye.man.gg@gmail.com</a>
<a href=""mailto:m.a.b.ela.g.y.ema.n.g.g@gmail.com"">m.a.b.ela.g.y.ema.n.g.g@gmail.com</a>
<a href=""mailto:ma.b.e.lag.y.ema.n.g.g@gmail.com"">ma.b.e.lag.y.ema.n.g.g@gmail.com</a>
<a href=""mailto:mab.ela.gyema.n.g.g@gmail.com"">mab.ela.gyema.n.g.g@gmail.com</a>
<a href=""mailto:ma.be.l.ag.yeman.gg@gmail.com"">ma.be.l.ag.yeman.gg@gmail.com</a>
<a href=""mailto:m.a.bela.g.ye.ma.ng.g@gmail.com"">m.a.bela.g.ye.ma.ng.g@gmail.com</a>
<a href=""mailto:mab.e.l.agy.em.a.ngg@gmail.com"">mab.e.l.agy.em.a.ngg@gmail.com</a>
<a href=""mailto:m.ab.elagye.m.an.g.g@gmail.com"">m.ab.elagye.m.an.g.g@gmail.com</a>
<a href=""mailto:m.ab.e.la.gy.ema.n.gg@gmail.com"">m.ab.e.la.gy.ema.n.gg@gmail.com</a>
<a href=""mailto:ma.b.e.l.agy.emang.g@gmail.com"">ma.b.e.l.agy.emang.g@gmail.com</a>
<a href=""mailto:m.ab.e.l.a.g.y.e.man.gg@gmail.com"">m.ab.e.l.a.g.y.e.man.gg@gmail.com</a>
<a href=""mailto:ma.be.lag.y.em.a.ngg@gmail.com"">ma.be.lag.y.em.a.ngg@gmail.com</a>
<a href=""mailto:m.abelag.y.em.a.n.g.g@gmail.com"">m.abelag.y.em.a.n.g.g@gmail.com</a>
<a href=""mailto:m.abe.lag.ye.m.a.n.g.g@gmail.com"">m.abe.lag.ye.m.a.n.g.g@gmail.com</a>
<a href=""mailto:ma.b.e.l.agyem.an.g.g@gmail.com"">ma.b.e.l.agyem.an.g.g@gmail.com</a>
<a href=""mailto:mab.el.ag.y.ema.n.g.g@gmail.com"">mab.el.ag.y.ema.n.g.g@gmail.com</a>
<a href=""mailto:m.abe.lagyem.a.n.g.g@gmail.com"">m.abe.lagyem.a.n.g.g@gmail.com</a>
<a href=""mailto:m.ab.e.la.gy.em.angg@gmail.com"">m.ab.e.la.gy.em.angg@gmail.com</a>
<a href=""mailto:ma.b.elagy.e.m.a.ngg@gmail.com"">ma.b.elagy.e.m.a.ngg@gmail.com</a>
<a href=""mailto:ma.b.el.a.g.ye.m.an.g.g@gmail.com"">ma.b.el.a.g.ye.m.an.g.g@gmail.com</a>
<a href=""mailto:m.a.b.e.la.gy.em.an.gg@gmail.com"">m.a.b.e.la.gy.em.an.gg@gmail.com</a>
<a href=""mailto:m.a.belagyem.an.gg@gmail.com"">m.a.belagyem.an.gg@gmail.com</a>
<a href=""mailto:m.ab.el.a.g.y.e.m.a.n.gg@gmail.com"">m.ab.el.a.g.y.e.m.a.n.gg@gmail.com</a>
<a href=""mailto:m.a.b.el.ag.y.em.an.g.g@gmail.com"">m.a.b.el.ag.y.em.an.g.g@gmail.com</a>
<a href=""mailto:m.ab.ela.g.ye.ma.ng.g@gmail.com"">m.ab.ela.g.ye.ma.ng.g@gmail.com</a>
<a href=""mailto:m.a.b.e.la.g.y.emang.g@gmail.com"">m.a.b.e.la.g.y.emang.g@gmail.com</a>
<a href=""mailto:ma.b.elagyem.angg@gmail.com"">ma.b.elagyem.angg@gmail.com</a>
<a href=""mailto:m.abe.l.a.gy.emangg@gmail.com"">m.abe.l.a.gy.emangg@gmail.com</a>
<a href=""mailto:m.a.be.l.a.g.ye.man.g.g@gmail.com"">m.a.be.l.a.g.ye.man.g.g@gmail.com</a>
<a href=""mailto:mabe.lag.ye.mangg@gmail.com"">mabe.lag.ye.mangg@gmail.com</a>
<a href=""mailto:mabel.a.gye.ma.n.g.g@gmail.com"">mabel.a.gye.ma.n.g.g@gmail.com</a>
<a href=""mailto:mab.e.l.a.g.y.em.ang.g@gmail.com"">mab.e.l.a.g.y.em.ang.g@gmail.com</a>
<a href=""mailto:m.abe.lag.yem.an.g.g@gmail.com"">m.abe.lag.yem.an.g.g@gmail.com</a>
<a href=""mailto:m.a.bel.ag.y.ema.n.gg@gmail.com"">m.a.bel.ag.y.ema.n.gg@gmail.com</a>
<a href=""mailto:mabel.a.g.ye.m.angg@gmail.com"">mabel.a.g.ye.m.angg@gmail.com</a>
<a href=""mailto:m.abel.ag.yemangg@gmail.com"">m.abel.ag.yemangg@gmail.com</a>
<a href=""mailto:mabe.lagy.em.a.n.gg@gmail.com"">mabe.lagy.em.a.n.gg@gmail.com</a>
<a href=""mailto:m.ab.ela.g.ye.m.an.g.g@gmail.com"">m.ab.ela.g.ye.m.an.g.g@gmail.com</a>
<a href=""mailto:m.a.bela.g.yema.n.gg@gmail.com"">m.a.bela.g.yema.n.gg@gmail.com</a>
<a href=""mailto:mabel.agye.m.a.n.g.g@gmail.com"">mabel.agye.m.a.n.g.g@gmail.com</a>
<a href=""mailto:m.abe.l.a.g.y.e.ma.n.g.g@gmail.com"">m.abe.l.a.g.y.e.ma.n.g.g@gmail.com</a>
<a href=""mailto:ma.be.l.a.gy.em.an.g.g@gmail.com"">ma.be.l.a.gy.em.an.g.g@gmail.com</a>
<a href=""mailto:m.a.belagyeman.gg@gmail.com"">m.a.belagyeman.gg@gmail.com</a>
<a href=""mailto:ma.bel.a.gyema.n.g.g@gmail.com"">ma.bel.a.gyema.n.g.g@gmail.com</a>
<a href=""mailto:m.abela.g.ye.ma.ng.g@gmail.com"">m.abela.g.ye.ma.ng.g@gmail.com</a>
<a href=""mailto:ma.b.e.l.a.g.yemang.g@gmail.com"">ma.b.e.l.a.g.yemang.g@gmail.com</a>
<a href=""mailto:m.abelagy.em.a.ngg@gmail.com"">m.abelagy.em.a.ngg@gmail.com</a>
<a href=""mailto:m.ab.elagye.m.a.ng.g@gmail.com"">m.ab.elagye.m.a.ng.g@gmail.com</a>
<a href=""mailto:m.ab.ela.g.yem.an.gg@gmail.com"">m.ab.ela.g.yem.an.gg@gmail.com</a>
<a href=""mailto:m.a.bel.a.g.ye.m.angg@gmail.com"">m.a.bel.a.g.ye.m.angg@gmail.com</a>
<a href=""mailto:m.abe.la.g.ye.m.an.g.g@gmail.com"">m.abe.la.g.ye.m.an.g.g@gmail.com</a>
<a href=""mailto:ma.b.e.l.agy.e.m.a.n.gg@gmail.com"">ma.b.e.l.agy.e.m.a.n.gg@gmail.com</a>
<a href=""mailto:mab.ela.g.y.ema.ngg@gmail.com"">mab.ela.g.y.ema.ngg@gmail.com</a>
<a href=""mailto:m.ab.el.ag.y.em.an.g.g@gmail.com"">m.ab.el.ag.y.em.an.g.g@gmail.com</a>
<a href=""mailto:mabel.ag.y.eman.g.g@gmail.com"">mabel.ag.y.eman.g.g@gmail.com</a>
<a href=""mailto:m.a.b.e.lagye.ma.n.gg@gmail.com"">m.a.b.e.lagye.ma.n.gg@gmail.com</a>
<a href=""mailto:m.abe.lag.yemang.g@gmail.com"">m.abe.lag.yemang.g@gmail.com</a>
<a href=""mailto:m.ab.e.la.gye.m.angg@gmail.com"">m.ab.e.la.gye.m.angg@gmail.com</a>
<a href=""mailto:mab.ela.gy.e.m.a.ngg@gmail.com"">mab.ela.gy.e.m.a.ngg@gmail.com</a>
<a href=""mailto:m.abe.la.gy.ema.ngg@gmail.com"">m.abe.la.gy.ema.ngg@gmail.com</a>
<a href=""mailto:mab.e.l.agy.eman.gg@gmail.com"">mab.e.l.agy.eman.gg@gmail.com</a>
<a href=""mailto:m.a.b.e.l.ag.yem.a.ngg@gmail.com"">m.a.b.e.l.ag.yem.a.ngg@gmail.com</a>
<a href=""mailto:mabelagy.ema.n.g.g@gmail.com"">mabelagy.ema.n.g.g@gmail.com</a>
<a href=""mailto:mabe.lagye.man.gg@gmail.com"">mabe.lagye.man.gg@gmail.com</a>
<a href=""mailto:ma.be.l.agy.e.ma.ngg@gmail.com"">ma.be.l.agy.e.ma.ngg@gmail.com</a>
<a href=""mailto:m.abe.lagye.m.angg@gmail.com"">m.abe.lagye.m.angg@gmail.com</a>
<a href=""mailto:mabe.l.a.gyema.n.g.g@gmail.com"">mabe.l.a.gyema.n.g.g@gmail.com</a>
<a href=""mailto:mab.e.l.a.g.y.em.a.n.g.g@gmail.com"">mab.e.l.a.g.y.em.a.n.g.g@gmail.com</a>
<a href=""mailto:ma.b.el.ag.y.e.ma.ngg@gmail.com"">ma.b.el.ag.y.e.ma.ngg@gmail.com</a>
<a href=""mailto:mab.ela.gy.e.m.an.g.g@gmail.com"">mab.ela.gy.e.m.an.g.g@gmail.com</a>
<a href=""mailto:ma.b.el.ag.y.e.ma.n.g.g@gmail.com"">ma.b.el.ag.y.e.ma.n.g.g@gmail.com</a>
<a href=""mailto:ma.belag.y.ema.ng.g@gmail.com"">ma.belag.y.ema.ng.g@gmail.com</a>
<a href=""mailto:m.abel.agy.em.a.ng.g@gmail.com"">m.abel.agy.em.a.ng.g@gmail.com</a>
<a href=""mailto:ma.b.e.lag.y.em.ang.g@gmail.com"">ma.b.e.lag.y.em.ang.g@gmail.com</a>
<a href=""mailto:m.abe.l.a.gy.e.mangg@gmail.com"">m.abe.l.a.gy.e.mangg@gmail.com</a>
<a href=""mailto:mabelagy.em.a.n.gg@gmail.com"">mabelagy.em.a.n.gg@gmail.com</a>
<a href=""mailto:ma.b.el.ag.yema.n.gg@gmail.com"">ma.b.el.ag.yema.n.gg@gmail.com</a>
<a href=""mailto:m.a.b.el.a.g.y.e.mang.g@gmail.com"">m.a.b.el.a.g.y.e.mang.g@gmail.com</a>
<a href=""mailto:m.a.b.el.a.g.ye.mangg@gmail.com"">m.a.b.el.a.g.ye.mangg@gmail.com</a>
<a href=""mailto:ma.be.l.a.g.yeman.g.g@gmail.com"">ma.be.l.a.g.yeman.g.g@gmail.com</a>
<a href=""mailto:m.ab.e.l.a.gye.m.an.gg@gmail.com"">m.ab.e.l.a.gye.m.an.gg@gmail.com</a>
<a href=""mailto:m.a.be.la.g.ye.mangg@gmail.com"">m.a.be.la.g.ye.mangg@gmail.com</a>
<a href=""mailto:m.a.belagye.ma.ngg@gmail.com"">m.a.belagye.ma.ngg@gmail.com</a>
<a href=""mailto:ma.b.el.ag.y.e.m.a.ng.g@gmail.com"">ma.b.el.ag.y.e.m.a.ng.g@gmail.com</a>
<a href=""mailto:m.a.bel.ag.y.em.a.ng.g@gmail.com"">m.a.bel.ag.y.em.a.ng.g@gmail.com</a>
<a href=""mailto:m.ab.el.agye.m.an.g.g@gmail.com"">m.ab.el.agye.m.an.g.g@gmail.com</a>
<a href=""mailto:m.a.b.e.l.ag.yem.an.gg@gmail.com"">m.a.b.e.l.ag.yem.an.gg@gmail.com</a>
<a href=""mailto:m.a.b.e.l.ag.y.ema.ngg@gmail.com"">m.a.b.e.l.ag.y.ema.ngg@gmail.com</a>
<a href=""mailto:ma.be.lag.ye.m.a.ng.g@gmail.com"">ma.be.lag.ye.m.a.ng.g@gmail.com</a>
<a href=""mailto:m.a.be.l.a.g.y.em.an.g.g@gmail.com"">m.a.be.l.a.g.y.em.an.g.g@gmail.com</a>
<a href=""mailto:m.abel.a.gy.e.m.a.ngg@gmail.com"">m.abel.a.gy.e.m.a.ngg@gmail.com</a>
<a href=""mailto:ma.bela.gye.m.ang.g@gmail.com"">ma.bela.gye.m.ang.g@gmail.com</a>
<a href=""mailto:mab.el.agy.e.m.ang.g@gmail.com"">mab.el.agy.e.m.ang.g@gmail.com</a>
<a href=""mailto:mabe.l.a.g.y.em.ang.g@gmail.com"">mabe.l.a.g.y.em.ang.g@gmail.com</a>
<a href=""mailto:m.abela.gy.ema.n.gg@gmail.com"">m.abela.gy.ema.n.gg@gmail.com</a>
<a href=""mailto:mabe.l.a.g.y.e.man.g.g@gmail.com"">mabe.l.a.g.y.e.man.g.g@gmail.com</a>
<a href=""mailto:ma.b.e.l.a.gy.em.ang.g@gmail.com"">ma.b.e.l.a.gy.em.ang.g@gmail.com</a>
<a href=""mailto:ma.be.l.agy.e.ma.n.gg@gmail.com"">ma.be.l.agy.e.ma.n.gg@gmail.com</a>
<a href=""mailto:ma.b.el.a.gye.man.gg@gmail.com"">ma.b.el.a.gye.man.gg@gmail.com</a>
<a href=""mailto:ma.b.e.la.g.ye.m.a.ngg@gmail.com"">ma.b.e.la.g.ye.m.a.ngg@gmail.com</a>
<a href=""mailto:ma.be.la.gye.ma.ngg@gmail.com"">ma.be.la.gye.ma.ngg@gmail.com</a>
<a href=""mailto:m.abe.l.a.gy.e.m.ang.g@gmail.com"">m.abe.l.a.gy.e.m.ang.g@gmail.com</a>
<a href=""mailto:m.abel.a.g.y.e.ma.n.g.g@gmail.com"">m.abel.a.g.y.e.ma.n.g.g@gmail.com</a>
<a href=""mailto:m.ab.e.la.gyema.ng.g@gmail.com"">m.ab.e.la.gyema.ng.g@gmail.com</a>
<a href=""mailto:m.abel.agye.man.g.g@gmail.com"">m.abel.agye.man.g.g@gmail.com</a>
<a href=""mailto:m.a.b.el.ag.y.em.a.ngg@gmail.com"">m.a.b.el.ag.y.em.a.ngg@gmail.com</a>
<a href=""mailto:m.ab.el.ag.ye.mangg@gmail.com"">m.ab.el.ag.ye.mangg@gmail.com</a>
<a href=""mailto:m.ab.ela.gyema.ng.g@gmail.com"">m.ab.ela.gyema.ng.g@gmail.com</a>
<a href=""mailto:m.abe.lagye.m.an.g.g@gmail.com"">m.abe.lagye.m.an.g.g@gmail.com</a>
<a href=""mailto:m.ab.el.a.g.ye.m.a.n.gg@gmail.com"">m.ab.el.a.g.ye.m.a.n.gg@gmail.com</a>
<a href=""mailto:m.a.b.e.l.a.g.yema.n.gg@gmail.com"">m.a.b.e.l.a.g.yema.n.gg@gmail.com</a>
<a href=""mailto:m.a.b.ela.gy.em.a.ngg@gmail.com"">m.a.b.ela.gy.em.a.ngg@gmail.com</a>
<a href=""mailto:m.ab.ela.g.y.e.m.a.n.gg@gmail.com"">m.ab.ela.g.y.e.m.a.n.gg@gmail.com</a>
<a href=""mailto:m.a.b.el.agyem.an.gg@gmail.com"">m.a.b.el.agyem.an.gg@gmail.com</a>
<a href=""mailto:ma.be.l.a.g.yeman.gg@gmail.com"">ma.be.l.a.g.yeman.gg@gmail.com</a>
<a href=""mailto:m.abel.a.g.y.e.mangg@gmail.com"">m.abel.a.g.y.e.mangg@gmail.com</a>
<a href=""mailto:m.a.be.l.ag.y.e.m.an.gg@gmail.com"">m.a.be.l.ag.y.e.m.an.gg@gmail.com</a>
<a href=""mailto:m.a.b.e.la.gy.e.m.an.gg@gmail.com"">m.a.b.e.la.gy.e.m.an.gg@gmail.com</a>
<a href=""mailto:m.ab.el.ag.ye.m.a.ngg@gmail.com"">m.ab.el.ag.ye.m.a.ngg@gmail.com</a>
<a href=""mailto:mab.e.lag.ye.m.ang.g@gmail.com"">mab.e.lag.ye.m.ang.g@gmail.com</a>
<a href=""mailto:mabe.l.a.gyem.an.g.g@gmail.com"">mabe.l.a.gyem.an.g.g@gmail.com</a>
<a href=""mailto:m.a.b.e.la.gye.m.ang.g@gmail.com"">m.a.b.e.la.gye.m.ang.g@gmail.com</a>
<a href=""mailto:m.ab.el.a.g.y.e.man.g.g@gmail.com"">m.ab.el.a.g.y.e.man.g.g@gmail.com</a>
<a href=""mailto:m.abel.agyem.an.gg@gmail.com"">m.abel.agyem.an.gg@gmail.com</a>
<a href=""mailto:m.abelag.y.em.a.n.gg@gmail.com"">m.abelag.y.em.a.n.gg@gmail.com</a>
<a href=""mailto:mab.e.l.ag.y.e.ma.ng.g@gmail.com"">mab.e.l.ag.y.e.ma.ng.g@gmail.com</a>
<a href=""mailto:ma.be.l.a.g.ye.m.angg@gmail.com"">ma.be.l.a.g.ye.m.angg@gmail.com</a>
<a href=""mailto:m.a.be.l.agy.e.ma.ng.g@gmail.com"">m.a.be.l.agy.e.ma.ng.g@gmail.com</a>
<a href=""mailto:m.abe.l.ag.y.emang.g@gmail.com"">m.abe.l.ag.y.emang.g@gmail.com</a>
<a href=""mailto:ma.b.e.l.agyema.n.g.g@gmail.com"">ma.b.e.l.agyema.n.g.g@gmail.com</a>
<a href=""mailto:m.abe.lag.ye.m.angg@gmail.com"">m.abe.lag.ye.m.angg@gmail.com</a>
<a href=""mailto:mabe.la.g.y.e.mang.g@gmail.com"">mabe.la.g.y.e.mang.g@gmail.com</a>
<a href=""mailto:ma.bel.agy.emang.g@gmail.com"">ma.bel.agy.emang.g@gmail.com</a>
<a href=""mailto:m.a.belagy.ema.ngg@gmail.com"">m.a.belagy.ema.ngg@gmail.com</a>
<a href=""mailto:m.a.be.l.ag.ye.mang.g@gmail.com"">m.a.be.l.ag.ye.mang.g@gmail.com</a>
<a href=""mailto:m.abel.a.g.yem.a.ng.g@gmail.com"">m.abel.a.g.yem.a.ng.g@gmail.com</a>
<a href=""mailto:m.abe.lag.y.em.a.ng.g@gmail.com"">m.abe.lag.y.em.a.ng.g@gmail.com</a>
<a href=""mailto:mabe.l.ag.ye.m.angg@gmail.com"">mabe.l.ag.ye.m.angg@gmail.com</a>
<a href=""mailto:m.a.b.el.a.gy.e.m.an.g.g@gmail.com"">m.a.b.el.a.gy.e.m.an.g.g@gmail.com</a>
<a href=""mailto:m.ab.el.a.gyem.ang.g@gmail.com"">m.ab.el.a.gyem.ang.g@gmail.com</a>
<a href=""mailto:ma.b.e.l.a.gy.e.m.a.n.gg@gmail.com"">ma.b.e.l.a.gy.e.m.a.n.gg@gmail.com</a>
<a href=""mailto:mab.elagy.em.a.n.gg@gmail.com"">mab.elagy.em.a.n.gg@gmail.com</a>
<a href=""mailto:m.a.bel.agye.ma.ngg@gmail.com"">m.a.bel.agye.ma.ngg@gmail.com</a>
<a href=""mailto:m.a.bel.a.g.ye.m.ang.g@gmail.com"">m.a.bel.a.g.ye.m.ang.g@gmail.com</a>
<a href=""mailto:mab.e.l.agy.em.ang.g@gmail.com"">mab.e.l.agy.em.ang.g@gmail.com</a>
<a href=""mailto:m.abela.g.y.e.ma.n.gg@gmail.com"">m.abela.g.y.e.ma.n.gg@gmail.com</a>
<a href=""mailto:m.abe.l.ag.yem.a.ngg@gmail.com"">m.abe.l.ag.yem.a.ngg@gmail.com</a>
<a href=""mailto:ma.bel.a.g.y.em.a.ng.g@gmail.com"">ma.bel.a.g.y.em.a.ng.g@gmail.com</a>
<a href=""mailto:ma.bel.a.g.y.em.ang.g@gmail.com"">ma.bel.a.g.y.em.ang.g@gmail.com</a>
<a href=""mailto:m.a.b.e.l.agy.e.man.gg@gmail.com"">m.a.b.e.l.agy.e.man.gg@gmail.com</a>
<a href=""mailto:ma.bela.g.yema.n.gg@gmail.com"">ma.bela.g.yema.n.gg@gmail.com</a>
<a href=""mailto:m.a.bel.a.g.yema.ng.g@gmail.com"">m.a.bel.a.g.yema.ng.g@gmail.com</a>
<a href=""mailto:ma.b.e.lagy.em.ang.g@gmail.com"">ma.b.e.lagy.em.ang.g@gmail.com</a>
<a href=""mailto:m.a.b.el.ag.y.e.m.angg@gmail.com"">m.a.b.el.ag.y.e.m.angg@gmail.com</a>
<a href=""mailto:ma.bela.g.y.e.man.g.g@gmail.com"">ma.bela.g.y.e.man.g.g@gmail.com</a>
<a href=""mailto:m.abe.l.ag.yem.angg@gmail.com"">m.abe.l.ag.yem.angg@gmail.com</a>
<a href=""mailto:mabe.l.a.g.ye.m.an.g.g@gmail.com"">mabe.l.a.g.ye.m.an.g.g@gmail.com</a>
<a href=""mailto:mabel.ag.y.em.a.n.g.g@gmail.com"">mabel.ag.y.em.a.n.g.g@gmail.com</a>
<a href=""mailto:diamondbank199@gmail.com"">diamondbank199@gmail.com</a>
<a href=""mailto:dia.mo.n.d.ba.n.k19.9@gmail.com"">dia.mo.n.d.ba.n.k19.9@gmail.com</a>
<a href=""mailto:di.a.m.on.d.b.an.k.1.99@gmail.com"">di.a.m.on.d.b.an.k.1.99@gmail.com</a>
<a href=""mailto:d.i.a.m.on.db.an.k1.99@gmail.com"">d.i.a.m.on.db.an.k1.99@gmail.com</a>
<a href=""mailto:d.i.a.m.on.db.a.nk1.99@gmail.com"">d.i.a.m.on.db.a.nk1.99@gmail.com</a>
<a href=""mailto:di.am.o.nd.ban.k.1.99@gmail.com"">di.am.o.nd.ban.k.1.99@gmail.com</a>
<a href=""mailto:dia.mo.n.d.b.an.k19.9@gmail.com"">dia.mo.n.d.b.an.k19.9@gmail.com</a>
<a href=""mailto:d.iam.on.d.b.a.nk.1.9.9@gmail.com"">d.iam.on.d.b.a.nk.1.9.9@gmail.com</a>
<a href=""mailto:di.a.m.o.n.dba.n.k.19.9@gmail.com"">di.a.m.o.n.dba.n.k.19.9@gmail.com</a>
<a href=""mailto:d.iamo.ndbank199@gmail.com"">d.iamo.ndbank199@gmail.com</a>
<a href=""mailto:d.ia.m.ond.ban.k1.9.9@gmail.com"">d.ia.m.ond.ban.k1.9.9@gmail.com</a>
<a href=""mailto:d.i.a.mond.ba.nk.1.9.9@gmail.com"">d.i.a.mond.ba.nk.1.9.9@gmail.com</a>
<a href=""mailto:d.iamo.nd.ban.k.19.9@gmail.com"">d.iamo.nd.ban.k.19.9@gmail.com</a>
<a href=""mailto:d.i.a.m.o.n.d.b.ank.1.99@gmail.com"">d.i.a.m.o.n.d.b.ank.1.99@gmail.com</a>
<a href=""mailto:d.ia.m.o.nd.ba.n.k19.9@gmail.com"">d.ia.m.o.nd.ba.n.k19.9@gmail.com</a>
<a href=""mailto:diam.on.d.b.ank.1.99@gmail.com"">diam.on.d.b.ank.1.99@gmail.com</a>
<a href=""mailto:diamo.n.d.ban.k.199@gmail.com"">diamo.n.d.ban.k.199@gmail.com</a>
<a href=""mailto:di.a.mo.n.d.ban.k.1.99@gmail.com"">di.a.mo.n.d.ban.k.1.99@gmail.com</a>
<a href=""mailto:d.i.a.m.ond.b.a.n.k.19.9@gmail.com"">d.i.a.m.ond.b.a.n.k.19.9@gmail.com</a>
<a href=""mailto:diam.ondba.n.k1.99@gmail.com"">diam.ondba.n.k1.99@gmail.com</a>
<a href=""mailto:d.iamo.n.d.b.a.n.k.199@gmail.com"">d.iamo.n.d.b.a.n.k.199@gmail.com</a>
<a href=""mailto:diamo.ndb.ank1.9.9@gmail.com"">diamo.ndb.ank1.9.9@gmail.com</a>
<a href=""mailto:diamon.d.b.a.nk19.9@gmail.com"">diamon.d.b.a.nk19.9@gmail.com</a>
<a href=""mailto:d.i.amo.n.d.ba.n.k1.99@gmail.com"">d.i.amo.n.d.ba.n.k1.99@gmail.com</a>
<a href=""mailto:dia.m.o.ndb.a.n.k19.9@gmail.com"">dia.m.o.ndb.a.n.k19.9@gmail.com</a>
<a href=""mailto:d.ia.m.ond.ba.nk1.99@gmail.com"">d.ia.m.ond.ba.nk1.99@gmail.com</a>
<a href=""mailto:dia.m.o.n.dban.k.1.9.9@gmail.com"">dia.m.o.n.dban.k.1.9.9@gmail.com</a>
<a href=""mailto:dia.mo.ndb.a.n.k.1.99@gmail.com"">dia.mo.ndb.a.n.k.1.99@gmail.com</a>
<a href=""mailto:di.a.m.o.n.db.an.k199@gmail.com"">di.a.m.o.n.db.an.k199@gmail.com</a>
<a href=""mailto:d.i.a.m.ond.b.ank.1.9.9@gmail.com"">d.i.a.m.ond.b.ank.1.9.9@gmail.com</a>
<a href=""mailto:diam.ond.ba.n.k1.99@gmail.com"">diam.ond.ba.n.k1.99@gmail.com</a>
<a href=""mailto:dia.m.ondb.an.k.1.9.9@gmail.com"">dia.m.ondb.an.k.1.9.9@gmail.com</a>
<a href=""mailto:d.ia.mo.n.d.b.ank.19.9@gmail.com"">d.ia.mo.n.d.b.ank.19.9@gmail.com</a>
<a href=""mailto:di.amo.ndba.n.k199@gmail.com"">di.amo.ndba.n.k199@gmail.com</a>
<a href=""mailto:di.a.m.o.n.d.b.an.k.19.9@gmail.com"">di.a.m.o.n.d.b.an.k.19.9@gmail.com</a>
<a href=""mailto:diamond.b.ank19.9@gmail.com"">diamond.b.ank19.9@gmail.com</a>
<a href=""mailto:dia.m.ondb.a.n.k.1.9.9@gmail.com"">dia.m.ondb.a.n.k.1.9.9@gmail.com</a>
<a href=""mailto:d.i.amo.n.d.ban.k1.9.9@gmail.com"">d.i.amo.n.d.ban.k1.9.9@gmail.com</a>
<a href=""mailto:di.amondba.n.k199@gmail.com"">di.amondba.n.k199@gmail.com</a>
<a href=""mailto:d.ia.mond.b.a.nk.199@gmail.com"">d.ia.mond.b.a.nk.199@gmail.com</a>
<a href=""mailto:d.i.amon.db.an.k19.9@gmail.com"">d.i.amon.db.an.k19.9@gmail.com</a>
<a href=""mailto:di.am.ondbank.1.9.9@gmail.com"">di.am.ondbank.1.9.9@gmail.com</a>
<a href=""mailto:di.a.m.ond.ban.k.1.99@gmail.com"">di.a.m.ond.ban.k.1.99@gmail.com</a>
<a href=""mailto:diamo.ndb.a.n.k.199@gmail.com"">diamo.ndb.a.n.k.199@gmail.com</a>
<a href=""mailto:di.amondb.an.k.19.9@gmail.com"">di.amondb.an.k.19.9@gmail.com</a>
<a href=""mailto:d.ia.mon.d.b.a.nk.1.9.9@gmail.com"">d.ia.mon.d.b.a.nk.1.9.9@gmail.com</a>
<a href=""mailto:diamo.n.dban.k1.9.9@gmail.com"">diamo.n.dban.k1.9.9@gmail.com</a>
<a href=""mailto:d.iam.o.n.d.bank.19.9@gmail.com"">d.iam.o.n.d.bank.19.9@gmail.com</a>
<a href=""mailto:d.ia.m.o.ndb.a.nk1.9.9@gmail.com"">d.ia.m.o.ndb.a.nk1.9.9@gmail.com</a>
<a href=""mailto:dia.mo.ndba.nk19.9@gmail.com"">dia.mo.ndba.nk19.9@gmail.com</a>
<a href=""mailto:dia.m.o.n.dba.nk.1.99@gmail.com"">dia.m.o.n.dba.nk.1.99@gmail.com</a>
<a href=""mailto:d.ia.mo.ndban.k.199@gmail.com"">d.ia.mo.ndban.k.199@gmail.com</a>
<a href=""mailto:d.ia.m.o.n.d.ba.n.k19.9@gmail.com"">d.ia.m.o.n.d.ba.n.k19.9@gmail.com</a>
<a href=""mailto:dia.mon.d.b.a.n.k1.9.9@gmail.com"">dia.mon.d.b.a.n.k1.9.9@gmail.com</a>
<a href=""mailto:d.i.amon.d.b.an.k1.99@gmail.com"">d.i.amon.d.b.an.k1.99@gmail.com</a>
<a href=""mailto:d.ia.m.on.d.b.ank19.9@gmail.com"">d.ia.m.on.d.b.ank19.9@gmail.com</a>
<a href=""mailto:d.i.amond.b.an.k1.9.9@gmail.com"">d.i.amond.b.an.k1.9.9@gmail.com</a>
<a href=""mailto:d.iam.o.n.db.a.nk.19.9@gmail.com"">d.iam.o.n.db.a.nk.19.9@gmail.com</a>
<a href=""mailto:di.a.m.ondban.k19.9@gmail.com"">di.a.m.ondban.k19.9@gmail.com</a>
<a href=""mailto:di.am.o.n.d.b.ank.1.99@gmail.com"">di.am.o.n.d.b.ank.1.99@gmail.com</a>
<a href=""mailto:d.i.amon.dban.k1.99@gmail.com"">d.i.amon.dban.k1.99@gmail.com</a>
<a href=""mailto:dia.m.o.nd.ban.k.19.9@gmail.com"">dia.m.o.nd.ban.k.19.9@gmail.com</a>
<a href=""mailto:di.a.mon.db.ank199@gmail.com"">di.a.mon.db.ank199@gmail.com</a>
<a href=""mailto:dia.mond.ba.n.k1.9.9@gmail.com"">dia.mond.ba.n.k1.9.9@gmail.com</a>
<a href=""mailto:d.ia.m.o.ndbank.19.9@gmail.com"">d.ia.m.o.ndbank.19.9@gmail.com</a>
<a href=""mailto:dia.m.o.n.dbank19.9@gmail.com"">dia.m.o.n.dbank19.9@gmail.com</a>
<a href=""mailto:d.i.a.m.ond.b.an.k19.9@gmail.com"">d.i.a.m.ond.b.an.k19.9@gmail.com</a>
<a href=""mailto:d.i.a.m.ond.b.an.k.1.99@gmail.com"">d.i.a.m.ond.b.an.k.1.99@gmail.com</a>
<a href=""mailto:diamo.n.db.an.k.19.9@gmail.com"">diamo.n.db.an.k.19.9@gmail.com</a>
<a href=""mailto:diamon.d.ba.nk.199@gmail.com"">diamon.d.ba.nk.199@gmail.com</a>
<a href=""mailto:diam.ondb.ank199@gmail.com"">diam.ondb.ank199@gmail.com</a>
<a href=""mailto:d.i.a.mondban.k.1.99@gmail.com"">d.i.a.mondban.k.1.99@gmail.com</a>
<a href=""mailto:d.ia.mo.n.d.b.a.nk19.9@gmail.com"">d.ia.mo.n.d.b.a.nk19.9@gmail.com</a>
<a href=""mailto:diamo.nd.b.an.k.1.9.9@gmail.com"">diamo.nd.b.an.k.1.9.9@gmail.com</a>
<a href=""mailto:d.iam.on.d.b.an.k199@gmail.com"">d.iam.on.d.b.an.k199@gmail.com</a>
<a href=""mailto:d.iam.on.d.ba.nk19.9@gmail.com"">d.iam.on.d.ba.nk19.9@gmail.com</a>
<a href=""mailto:dia.mo.ndb.ank1.99@gmail.com"">dia.mo.ndb.ank1.99@gmail.com</a>
<a href=""mailto:d.i.a.mondb.ank.1.99@gmail.com"">d.i.a.mondb.ank.1.99@gmail.com</a>
<a href=""mailto:diam.o.nd.ban.k199@gmail.com"">diam.o.nd.ban.k199@gmail.com</a>
<a href=""mailto:dia.m.ond.bank19.9@gmail.com"">dia.m.ond.bank19.9@gmail.com</a>
<a href=""mailto:diamo.ndb.ank.19.9@gmail.com"">diamo.ndb.ank.19.9@gmail.com</a>
<a href=""mailto:d.iam.on.db.ank.1.99@gmail.com"">d.iam.on.db.ank.1.99@gmail.com</a>
<a href=""mailto:d.i.am.o.n.db.ank.199@gmail.com"">d.i.am.o.n.db.ank.199@gmail.com</a>
<a href=""mailto:di.amondb.an.k1.9.9@gmail.com"">di.amondb.an.k1.9.9@gmail.com</a>
<a href=""mailto:d.i.am.ond.b.an.k.19.9@gmail.com"">d.i.am.ond.b.an.k.19.9@gmail.com</a>
<a href=""mailto:dia.mo.ndb.an.k.1.99@gmail.com"">dia.mo.ndb.an.k.1.99@gmail.com</a>
<a href=""mailto:di.am.ondba.nk.1.9.9@gmail.com"">di.am.ondba.nk.1.9.9@gmail.com</a>
<a href=""mailto:di.a.m.on.d.ba.n.k.199@gmail.com"">di.a.m.on.d.ba.n.k.199@gmail.com</a>
<a href=""mailto:d.i.a.m.on.d.ba.nk1.9.9@gmail.com"">d.i.a.m.on.d.ba.nk1.9.9@gmail.com</a>
<a href=""mailto:di.a.mon.db.an.k1.99@gmail.com"">di.a.mon.db.an.k1.99@gmail.com</a>
<a href=""mailto:d.iam.o.nd.b.a.n.k1.9.9@gmail.com"">d.iam.o.nd.b.a.n.k1.9.9@gmail.com</a>
<a href=""mailto:d.ia.m.on.db.a.n.k1.99@gmail.com"">d.ia.m.on.db.a.n.k1.99@gmail.com</a>
<a href=""mailto:di.am.on.dba.nk199@gmail.com"">di.am.on.dba.nk199@gmail.com</a>
<a href=""mailto:d.iam.o.nd.ba.n.k199@gmail.com"">d.iam.o.nd.ba.n.k199@gmail.com</a>
<a href=""mailto:di.amondb.an.k19.9@gmail.com"">di.amondb.an.k19.9@gmail.com</a>
<a href=""mailto:di.a.mo.n.d.b.an.k1.9.9@gmail.com"">di.a.mo.n.d.b.an.k1.9.9@gmail.com</a>
<a href=""mailto:dia.mo.nd.b.a.nk19.9@gmail.com"">dia.mo.nd.b.a.nk19.9@gmail.com</a>
<a href=""mailto:d.ia.m.on.d.b.a.nk1.9.9@gmail.com"">d.ia.m.on.d.b.a.nk1.9.9@gmail.com</a>
<a href=""mailto:diamon.db.a.n.k1.99@gmail.com"">diamon.db.a.n.k1.99@gmail.com</a>
<a href=""mailto:d.ia.mon.db.a.n.k.1.99@gmail.com"">d.ia.mon.db.a.n.k.1.99@gmail.com</a>
<a href=""mailto:di.a.m.ond.ban.k.199@gmail.com"">di.a.m.ond.ban.k.199@gmail.com</a>
<a href=""mailto:d.iam.o.nd.b.ank.199@gmail.com"">d.iam.o.nd.b.ank.199@gmail.com</a>
<a href=""mailto:dia.mo.n.db.ank1.9.9@gmail.com"">dia.mo.n.db.ank1.9.9@gmail.com</a>
<a href=""mailto:d.iamon.dban.k.19.9@gmail.com"">d.iamon.dban.k.19.9@gmail.com</a>
<a href=""mailto:d.i.a.m.o.n.d.ban.k.1.9.9@gmail.com"">d.i.a.m.o.n.d.ban.k.1.9.9@gmail.com</a>
<a href=""mailto:di.amon.dba.nk1.99@gmail.com"">di.amon.dba.nk1.99@gmail.com</a>
<a href=""mailto:d.ia.m.ondban.k.199@gmail.com"">d.ia.m.ondban.k.199@gmail.com</a>
<a href=""mailto:d.ia.m.on.dban.k.1.9.9@gmail.com"">d.ia.m.on.dban.k.1.9.9@gmail.com</a>
<a href=""mailto:d.ia.m.on.dba.n.k1.9.9@gmail.com"">d.ia.m.on.dba.n.k1.9.9@gmail.com</a>
<a href=""mailto:dia.m.o.n.d.b.ank.1.9.9@gmail.com"">dia.m.o.n.d.b.ank.1.9.9@gmail.com</a>
<a href=""mailto:d.i.amond.b.ank199@gmail.com"">d.i.amond.b.ank199@gmail.com</a>
<a href=""mailto:diamond.b.a.n.k.19.9@gmail.com"">diamond.b.a.n.k.19.9@gmail.com</a>
<a href=""mailto:d.ia.mon.d.ban.k19.9@gmail.com"">d.ia.mon.d.ban.k19.9@gmail.com</a>
<a href=""mailto:dia.mon.db.an.k.1.9.9@gmail.com"">dia.mon.db.an.k.1.9.9@gmail.com</a>
<a href=""mailto:diam.o.ndban.k199@gmail.com"">diam.o.ndban.k199@gmail.com</a>
<a href=""mailto:d.iam.o.nd.ba.nk.1.9.9@gmail.com"">d.iam.o.nd.ba.nk.1.9.9@gmail.com</a>
<a href=""mailto:d.i.a.mond.bank199@gmail.com"">d.i.a.mond.bank199@gmail.com</a>
<a href=""mailto:dia.mondbank19.9@gmail.com"">dia.mondbank19.9@gmail.com</a>
<a href=""mailto:d.i.a.mon.d.b.an.k.19.9@gmail.com"">d.i.a.mon.d.b.an.k.19.9@gmail.com</a>
<a href=""mailto:d.iamondb.an.k19.9@gmail.com"">d.iamondb.an.k19.9@gmail.com</a>
<a href=""mailto:d.ia.mo.ndb.an.k1.9.9@gmail.com"">d.ia.mo.ndb.an.k1.9.9@gmail.com</a>
<a href=""mailto:di.a.m.o.n.d.bank.199@gmail.com"">di.a.m.o.n.d.bank.199@gmail.com</a>
<a href=""mailto:dia.m.ondban.k.1.9.9@gmail.com"">dia.m.ondban.k.1.9.9@gmail.com</a>
<a href=""mailto:di.a.m.o.nd.b.a.n.k.19.9@gmail.com"">di.a.m.o.nd.b.a.n.k.19.9@gmail.com</a>
<a href=""mailto:dia.mo.nd.ba.nk.1.9.9@gmail.com"">dia.mo.nd.ba.nk.1.9.9@gmail.com</a>
<a href=""mailto:d.i.a.m.on.dbank1.9.9@gmail.com"">d.i.a.m.on.dbank1.9.9@gmail.com</a>
<a href=""mailto:diamo.n.d.ba.n.k.1.99@gmail.com"">diamo.n.d.ba.n.k.1.99@gmail.com</a>
<a href=""mailto:di.a.mo.n.d.b.a.n.k1.9.9@gmail.com"">di.a.mo.n.d.b.a.n.k1.9.9@gmail.com</a>
<a href=""mailto:d.iam.ond.b.a.nk.1.99@gmail.com"">d.iam.ond.b.a.nk.1.99@gmail.com</a>
<a href=""mailto:d.i.amon.db.a.n.k1.9.9@gmail.com"">d.i.amon.db.a.n.k1.9.9@gmail.com</a>
<a href=""mailto:d.iamo.ndb.a.n.k.19.9@gmail.com"">d.iamo.ndb.a.n.k.19.9@gmail.com</a>
<a href=""mailto:dia.m.o.nd.b.a.n.k.1.99@gmail.com"">dia.m.o.nd.b.a.n.k.1.99@gmail.com</a>
<a href=""mailto:di.am.o.n.db.a.n.k199@gmail.com"">di.am.o.n.db.a.n.k199@gmail.com</a>
<a href=""mailto:diam.o.ndbank.19.9@gmail.com"">diam.o.ndbank.19.9@gmail.com</a>
<a href=""mailto:d.ia.mo.ndba.nk.19.9@gmail.com"">d.ia.mo.ndba.nk.19.9@gmail.com</a>
<a href=""mailto:d.iam.o.ndb.an.k1.9.9@gmail.com"">d.iam.o.ndb.an.k1.9.9@gmail.com</a>
<a href=""mailto:d.i.am.o.ndb.a.n.k1.9.9@gmail.com"">d.i.am.o.ndb.a.n.k1.9.9@gmail.com</a>
<a href=""mailto:d.iam.ondba.nk199@gmail.com"">d.iam.ondba.nk199@gmail.com</a>
<a href=""mailto:d.i.am.on.dbank.199@gmail.com"">d.i.am.on.dbank.199@gmail.com</a>
<a href=""mailto:diam.o.nd.ban.k1.99@gmail.com"">diam.o.nd.ban.k1.99@gmail.com</a>
<a href=""mailto:dia.m.o.n.d.b.a.n.k.1.9.9@gmail.com"">dia.m.o.n.d.b.a.n.k.1.9.9@gmail.com</a>
<a href=""mailto:di.a.m.o.n.db.an.k.199@gmail.com"">di.a.m.o.n.db.an.k.199@gmail.com</a>
<a href=""mailto:dia.m.o.n.db.a.nk1.99@gmail.com"">dia.m.o.n.db.a.nk1.99@gmail.com</a>
<a href=""mailto:di.a.mo.nd.ba.n.k19.9@gmail.com"">di.a.mo.nd.ba.n.k19.9@gmail.com</a>
<a href=""mailto:diamo.ndba.nk199@gmail.com"">diamo.ndba.nk199@gmail.com</a>
<a href=""mailto:di.amo.ndba.n.k.19.9@gmail.com"">di.amo.ndba.n.k.19.9@gmail.com</a>
<a href=""mailto:d.i.a.m.ondba.n.k199@gmail.com"">d.i.a.m.ondba.n.k199@gmail.com</a>
<a href=""mailto:di.amo.ndba.nk.1.99@gmail.com"">di.amo.ndba.nk.1.99@gmail.com</a>
<a href=""mailto:d.i.a.m.o.n.d.ba.nk.199@gmail.com"">d.i.a.m.o.n.d.ba.nk.199@gmail.com</a>
<a href=""mailto:di.a.mondban.k19.9@gmail.com"">di.a.mondban.k19.9@gmail.com</a>
<a href=""mailto:diam.on.d.b.a.nk.19.9@gmail.com"">diam.on.d.b.a.nk.19.9@gmail.com</a>
<a href=""mailto:di.amo.n.dba.nk.1.99@gmail.com"">di.amo.n.dba.nk.1.99@gmail.com</a>
<a href=""mailto:di.am.o.n.d.b.ank1.9.9@gmail.com"">di.am.o.n.d.b.ank1.9.9@gmail.com</a>
<a href=""mailto:d.i.a.m.o.n.dbank1.9.9@gmail.com"">d.i.a.m.o.n.dbank1.9.9@gmail.com</a>
<a href=""mailto:d.ia.mond.b.an.k1.9.9@gmail.com"">d.ia.mond.b.an.k1.9.9@gmail.com</a>
<a href=""mailto:d.ia.m.o.n.db.a.n.k199@gmail.com"">d.ia.m.o.n.db.a.n.k199@gmail.com</a>
<a href=""mailto:d.i.am.o.nd.bank19.9@gmail.com"">d.i.am.o.nd.bank19.9@gmail.com</a>
<a href=""mailto:d.i.a.mo.n.d.b.a.nk1.99@gmail.com"">d.i.a.mo.n.d.b.a.nk1.99@gmail.com</a>
<a href=""mailto:d.iam.o.ndb.a.n.k19.9@gmail.com"">d.iam.o.ndb.a.n.k19.9@gmail.com</a>
<a href=""mailto:d.i.a.mon.d.b.ank.1.9.9@gmail.com"">d.i.a.mon.d.b.ank.1.9.9@gmail.com</a>
<a href=""mailto:di.amo.n.d.ba.n.k1.99@gmail.com"">di.amo.n.d.ba.n.k1.99@gmail.com</a>
<a href=""mailto:di.a.mo.n.db.a.n.k.1.9.9@gmail.com"">di.a.mo.n.db.a.n.k.1.9.9@gmail.com</a>
<a href=""mailto:di.a.mondb.a.nk199@gmail.com"">di.a.mondb.a.nk199@gmail.com</a>
<a href=""mailto:diamondb.ank19.9@gmail.com"">diamondb.ank19.9@gmail.com</a>
<a href=""mailto:d.i.amo.nd.ba.nk19.9@gmail.com"">d.i.amo.nd.ba.nk19.9@gmail.com</a>
<a href=""mailto:dia.m.o.nd.b.a.nk.1.9.9@gmail.com"">dia.m.o.nd.b.a.nk.1.9.9@gmail.com</a>
<a href=""mailto:d.iamon.d.bank19.9@gmail.com"">d.iamon.d.bank19.9@gmail.com</a>
<a href=""mailto:dia.mo.n.dba.n.k.199@gmail.com"">dia.mo.n.dba.n.k.199@gmail.com</a>
<a href=""mailto:d.i.am.o.ndb.an.k.1.99@gmail.com"">d.i.am.o.ndb.an.k.1.99@gmail.com</a>
<a href=""mailto:d.iamon.db.a.n.k1.99@gmail.com"">d.iamon.db.a.n.k1.99@gmail.com</a>
<a href=""mailto:d.i.a.mo.nd.bank1.9.9@gmail.com"">d.i.a.mo.nd.bank1.9.9@gmail.com</a>
<a href=""mailto:di.a.mond.ba.nk.199@gmail.com"">di.a.mond.ba.nk.199@gmail.com</a>
<a href=""mailto:diamo.nd.b.ank199@gmail.com"">diamo.nd.b.ank199@gmail.com</a>
<a href=""mailto:d.iam.on.db.an.k.1.9.9@gmail.com"">d.iam.on.db.an.k.1.9.9@gmail.com</a>
<a href=""mailto:d.i.a.m.o.ndbank.199@gmail.com"">d.i.a.m.o.ndbank.199@gmail.com</a>
<a href=""mailto:di.am.o.n.d.b.an.k1.9.9@gmail.com"">di.am.o.n.d.b.an.k1.9.9@gmail.com</a>
<a href=""mailto:di.a.mo.nd.ban.k.19.9@gmail.com"">di.a.mo.nd.ban.k.19.9@gmail.com</a>
<a href=""mailto:d.i.a.mo.ndban.k199@gmail.com"">d.i.a.mo.ndban.k199@gmail.com</a>
<a href=""mailto:d.i.amon.dba.n.k.199@gmail.com"">d.i.amon.dba.n.k.199@gmail.com</a>
<a href=""mailto:dia.m.o.n.db.an.k.199@gmail.com"">dia.m.o.n.db.an.k.199@gmail.com</a>
<a href=""mailto:d.iam.ond.ban.k.1.9.9@gmail.com"">d.iam.ond.ban.k.1.9.9@gmail.com</a>
<a href=""mailto:d.ia.m.o.n.dba.nk.19.9@gmail.com"">d.ia.m.o.n.dba.nk.19.9@gmail.com</a>
<a href=""mailto:di.a.m.ond.bank1.99@gmail.com"">di.a.m.ond.bank1.99@gmail.com</a>
<a href=""mailto:di.a.m.on.d.ba.n.k1.9.9@gmail.com"">di.a.m.on.d.ba.n.k1.9.9@gmail.com</a>
<a href=""mailto:di.am.o.nd.b.an.k.1.99@gmail.com"">di.am.o.nd.b.an.k.1.99@gmail.com</a>
<a href=""mailto:di.a.mon.dban.k1.99@gmail.com"">di.a.mon.dban.k1.99@gmail.com</a>
<a href=""mailto:diamo.ndba.n.k199@gmail.com"">diamo.ndba.n.k199@gmail.com</a>
<a href=""mailto:dia.m.on.dban.k.1.99@gmail.com"">dia.m.on.dban.k.1.99@gmail.com</a>
<a href=""mailto:di.a.mond.b.a.nk.199@gmail.com"">di.a.mond.b.a.nk.199@gmail.com</a>
<a href=""mailto:d.i.am.ondb.a.nk.1.99@gmail.com"">d.i.am.ondb.a.nk.1.99@gmail.com</a>
<a href=""mailto:d.iamo.nd.bank.19.9@gmail.com"">d.iamo.nd.bank.19.9@gmail.com</a>
<a href=""mailto:d.iamond.ban.k.1.9.9@gmail.com"">d.iamond.ban.k.1.9.9@gmail.com</a>
<a href=""mailto:d.iamo.ndban.k.1.99@gmail.com"">d.iamo.ndban.k.1.99@gmail.com</a>
<a href=""mailto:dia.mond.ba.n.k1.99@gmail.com"">dia.mond.ba.n.k1.99@gmail.com</a>
<a href=""mailto:diamon.dba.nk19.9@gmail.com"">diamon.dba.nk19.9@gmail.com</a>
<a href=""mailto:d.i.a.mo.n.dba.n.k.1.99@gmail.com"">d.i.a.mo.n.dba.n.k.1.99@gmail.com</a>
<a href=""mailto:diamond.ba.n.k.199@gmail.com"">diamond.ba.n.k.199@gmail.com</a>
<a href=""mailto:di.am.o.nd.b.a.nk.1.9.9@gmail.com"">di.am.o.nd.b.a.nk.1.9.9@gmail.com</a>
<a href=""mailto:d.ia.m.on.dbank.1.99@gmail.com"">d.ia.m.on.dbank.1.99@gmail.com</a>
<a href=""mailto:d.iam.ondban.k.19.9@gmail.com"">d.iam.ondban.k.19.9@gmail.com</a>
<a href=""mailto:dia.m.o.nd.b.an.k19.9@gmail.com"">dia.m.o.nd.b.an.k19.9@gmail.com</a>"
pnHANwM7,Nominees cpt acf forminator code,adczk,PHP,Thursday 18th of May 2023 03:51:45 AM CDT,"<?php

# POPULATE SELECT FIELD WIH AWARDS TYPES

add_filter(
	'forminator_cform_render_fields',
	function( $wrappers, $model_id ) {
		if( $model_id != 263 ){  // SET ID OF THE FORM
			return $wrappers;
		}

		$select_fields_data = array(
			'select-1' => 'categories',
		);

		foreach ( $wrappers as $wrapper_key => $wrapper ) {
			if ( ! isset( $wrapper[ 'fields' ] ) ) {
				continue;
			}

			if ( 
				isset( $select_fields_data[ $wrapper[ 'fields' ][ 0 ][ 'element_id' ] ] ) &&
				! empty( $select_fields_data[ $wrapper[ 'fields' ][ 0 ][ 'element_id' ] ] )
			) {
				
			$p_args = array(
				'post_type' =>  $select_fields_data[ $wrapper[ 'fields' ][ 0 ][ 'element_id' ] ],
				'numberposts' => -1,
				'post__not_in' => array( 2739, 2734 ), // IDs of Awards to be excluded from select
			);

				$posts = get_posts( $p_args );

				if ( ! empty( $posts ) ) {
					$new_options = array();
					$opt_data = array();
					foreach( $posts as $post ) {
						$new_options[] = array(
							'label' => $post->post_title,
							'value' => $post->ID,
							'limit' => '',
							'key'   => forminator_unique_key(),
						);
						$opt_data['options'] = $new_options;
					}
					$select_field = Forminator_API::get_form_field( $model_id, $wrapper['fields'][0]['element_id'], true );
					if( $select_field ){
						if( $select_field['options'][0]['label'] != $opt_data['options'][0]['label'] ){
							Forminator_API::update_form_field( $model_id, $wrapper['fields'][0]['element_id'], $opt_data );
							$wrappers[ $wrapper_key ][ 'fields' ][ 0 ][ 'options' ] = $new_options;
						}
					}
				}
			}
		}

		return $wrappers;
	},
	10,
	2
);

add_filter(
	'forminator_replace_form_data', 
	function( $content, $data, $fields ) {
		if( $data['form_id'] != 263 ){ // SET ID OF THE FORM
			return $content;
		}

		if ( ! empty( $content ) ) {
			return $content;
		}

		$form_fields = Forminator_API::get_form_fields( $data['form_id'] );
		$data_field = '';
		foreach($data as $key => $value){
	    	if ( strpos( $key, 'select' ) !== false ) {
	    		$values = '';
	    		$field_value = isset( $data[ $key ] ) ? $data[ $key ] : null;

		    	if ( ! is_null( $field_value ) ) {
		    		$fields_slugs  = wp_list_pluck( $form_fields, 'slug' );
					$field_key     = array_search( $key, $fields_slugs, true );
					$field_options = false !== $field_key && ! empty( $form_fields[ $field_key ]->raw['options'] )
							? wp_list_pluck( $form_fields[ $field_key ]->options, 'label', 'value' )
							: array();

					if ( ! isset( $field_options[ $field_value ] ) && isset( $_POST[ $key ] ) ) {
						return sanitize_text_field( $_POST[ $key ] );
					}
				}
			}
		}
	    return $content;
	},
	10,
	3
);

# END OF THE CODE TO POPULATE SELECT FIELD
 
 
 
 # SET AWARD YEAR FOR NOMINEE

add_action( 'forminator_post_data_field_post_saved', 'forminator_post_data_field_post_saved_custom_tag', 11, 3 );
function forminator_post_data_field_post_saved_custom_tag( $post_id, $field, $data ) { 

	$award_year_name = '';
	$csfields = $data['post-custom'];
	
	foreach ( $csfields as $key=>$custom_field ) {
		
		if ( $custom_field['key'] == 'YEAR' ) {
			$award_year_name = $custom_field['value'];
		}		
	}
	
	if ( $award_year_name !== '' ) {
		$taxonomy_name = 'awards_year'; // taxonomy name for Awards Year
		wp_set_post_terms( $post_id, $award_year_name, $taxonomy_name );
	}
			
}

# END OF AWARD YEAR"
hvg1UiVs,Contoh Web Layout Dengan Bootstrap - Fullpage Responsive,rezamalik15,HTML 5,Thursday 18th of May 2023 03:46:20 AM CDT,"<html lang=""en"">
<head>
	<meta charset=""UTF-8"">
	<meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
	<title>Boostrap - Layout</title>

	<link href=""https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css"" rel=""stylesheet"" integrity=""sha384-KK94CHFLLe+nY2dmCWGMq91rCGa5gtU4mk92HdvYe+M/SXH301p5ILy+dN9+nJOZ"" crossorigin=""anonymous"">

</head>
<body>
	<div class=""container-fluid bg-secondary"">
		<div class=""container mt-0 mb-5 bg-secondary"">
			<div class=""py-3"">
				<h1 class=""text-white"">Welcome</h1>
			</div>
		</div>
	</div>

	<div class=""container-fluid"">
		<div class=""container"">
			<div class=""row mb-3"">
				<div class=""col-8 col-sm-6 col-md-4 col-lg-2"">
					<span class=""placeholder col-12""></span>
				</div>				
			</div>

			<div class=""row mb-5"">
				<div class=""col-sm-12 col-md-6 col-lg-6 mb-3"">
					<img class=""img-fluid"" src=""https://picsum.photos/id/250/780/400"" alt="""">
				</div>
				<div class=""col-sm-12 col-md-6 col-lg-6 mb-3"">
					<img class=""img-fluid"" src=""https://picsum.photos/id/185/780/400"" alt="""">
				</div>
			</div>
		</div>
	</div>

	<div class=""container-fluid"">
		<div class=""container"">
			<div class=""row mb-3"">
				<div class=""col-8 col-sm-6 col-md-4 col-lg-2"">
					<span class=""placeholder col-12""></span>
				</div>				
			</div>

			<div class=""row mb-5"">
				<div class=""col-12 col-sm-6 col-md-4 col-md-4 mb-3"">
					<img class=""img-fluid mb-2"" src=""https://picsum.photos/id/132/780/400"" alt="""">
					<span class=""placeholder col-4 mb-1""></span>
					<span class=""placeholder col-10 mb-1""></span>
					<span class=""placeholder col-10 mb-1""></span>
					<span class=""placeholder col-10 mb-1""></span>
				</div>
				<div class=""col-12 col-sm-6 col-md-4 col-md-4 mb-3"">
					<img class=""img-fluid mb-2"" src=""https://picsum.photos/id/234/780/400"" alt="""">
					<span class=""placeholder col-4 mb-1""></span>
					<span class=""placeholder col-10 mb-1""></span>
					<span class=""placeholder col-10 mb-1""></span>
					<span class=""placeholder col-10 mb-1""></span>
				</div>
				<div class=""col-12 col-sm-6 col-md-4 col-md-4 mb-3"">
					<img class=""img-fluid mb-2"" src=""https://picsum.photos/id/188/780/400"" alt="""">
					<span class=""placeholder col-4 mb-1""></span>
					<span class=""placeholder col-10 mb-1""></span>
					<span class=""placeholder col-10 mb-1""></span>
					<span class=""placeholder col-10 mb-1""></span>
				</div>
			</div>
		</div>
	</div>

	<div class=""container-fluid bg-secondary"">
		<div class=""container"">
			<div class=""row"">
				<div class=""col-12 text-center text-white p-5"">
					<h1>Thank You</h1>
					<p>By Malik</p>
				</div>
			</div>
		</div>		
	</div>

	<script src=""https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"" integrity=""sha384-ENjdO4Dr2bkBIFxQpeoTz1HIcje39Wm4jDKdf19U8gI4ddQ3GYNS7NTKfAdVQSZe"" crossorigin=""anonymous""></script>
</body>
</html>"
cakEuGG6,Visit John Larsen's Linktree,laris007,HTML,Thursday 18th of May 2023 03:24:00 AM CDT,"<!DOCTYPE html>
<html>
<head>
  <title>Visit John Larsen's Linktree</title>
</head>
<body>
  <a href=""https://linktr.ee/johnlarsen?utm_source=linktree_profile_share&ltsid=d9b87fc1-5d1a-452a-86ce-6bf6a03a5967"">Visit John Larsen's Linktree</a>
</body>
</html>
"
eKVjyZ9z,vector_emplace,Seredenko-V,C++,Thursday 18th of May 2023 03:09:51 AM CDT,"#include ""vector.h""
#include <iostream>

using namespace std;

constexpr std::size_t SIZE = 8u;
constexpr int MAGIC = 42;
constexpr uint32_t DEFAULT_COOKIE = 0xdeadbeef;

template<bool MoveNoexcept>
struct WithCopy {
    WithCopy() noexcept {
        ++def_ctor;
    }

    WithCopy(const int&) noexcept {
        ++copy_with_val;
    }

    WithCopy(int&&) noexcept {
        ++move_with_val;
    }

    WithCopy(const WithCopy& /*other*/) noexcept {
        ++copy_ctor;
    }

    WithCopy(WithCopy&& /*other*/) noexcept(MoveNoexcept) {
        ++move_ctor;
    }

    WithCopy& operator=(const WithCopy& other) noexcept {
        if (this != &other) {
            ++copy_assign;
        }
        return *this;
    }

    WithCopy& operator=(WithCopy&& /*other*/) noexcept {
        ++move_assign;
        return *this;
    }

    ~WithCopy() {
        ++dtor;
    }

    static size_t InstanceCount() {
        return def_ctor + copy_ctor + move_ctor - dtor;
    }

    static void Reset() {
        def_ctor = 0;
        copy_ctor = 0;
        move_ctor = 0;
        copy_assign = 0;
        move_assign = 0;
        dtor = 0;
        copy_with_val = 0;
        move_with_val = 0;
    }

    inline static size_t def_ctor = 0;
    inline static size_t copy_ctor = 0;
    inline static size_t move_ctor = 0;
    inline static size_t copy_assign = 0;
    inline static size_t move_assign = 0;
    inline static size_t dtor = 0;
    inline static size_t copy_with_val = 0;
    inline static size_t move_with_val = 0;

};

template<bool MoveNoexcept>
struct WithoutCopy {
    WithoutCopy() noexcept {
        ++def_ctor;
    }

    WithoutCopy(const int&) noexcept {
        ++copy_with_val;
    }

    WithoutCopy(int&&) noexcept {
        ++move_with_val;
    }

    WithoutCopy(const WithoutCopy& /*other*/) = delete;

    WithoutCopy(WithoutCopy&& /*other*/) noexcept(MoveNoexcept) {
        ++move_ctor;
    }

    WithoutCopy& operator=(const WithoutCopy& other) noexcept {
        if (this != &other) {
            ++copy_assign;
        }
        return *this;
    }

    WithoutCopy& operator=(WithoutCopy&& /*other*/) noexcept {
        ++move_assign;
        return *this;
    }

    ~WithoutCopy() {
        ++dtor;
    }

    static size_t InstanceCount() {
        return def_ctor + copy_ctor + move_ctor - dtor;
    }

    static void Reset() {
        def_ctor = 0;
        copy_ctor = 0;
        move_ctor = 0;
        copy_assign = 0;
        move_assign = 0;
        dtor = 0;
        copy_with_val = 0;
        move_with_val = 0;
    }

    inline static size_t def_ctor = 0;
    inline static size_t copy_ctor = 0;
    inline static size_t move_ctor = 0;
    inline static size_t copy_assign = 0;
    inline static size_t move_assign = 0;
    inline static size_t dtor = 0;
    inline static size_t copy_with_val = 0;
    inline static size_t move_with_val = 0;
};

using C = WithCopy<true>;
using move_without_noexcept = WithCopy<false>;

using move_noexcept_no_copy = WithoutCopy<true>;
using move_without_noexcept_no_copy = WithoutCopy<false>;

template<typename OBJ>
void TestEmplaceAdditionalCopyImpl(size_t copy, size_t move) {
    {
        int a{ MAGIC };
        Vector <OBJ> v(SIZE);
        OBJ::Reset();
        v.Emplace(v.begin(), a);
        assert(OBJ::def_ctor == 0u);
        assert(OBJ::copy_ctor == copy);
        assert(OBJ::move_ctor == move);
        assert(OBJ::copy_assign == 0u);
        assert(OBJ::move_assign == 0u);
        assert(OBJ::dtor == SIZE);
        assert(OBJ::copy_with_val == 1u);
        assert(OBJ::move_with_val == 0u);
    }
    {
        int a{ MAGIC };
        Vector <OBJ> v(SIZE);
        v.Reserve(2 * SIZE);
        OBJ::Reset();
        v.Emplace(v.begin(), a);
        assert(OBJ::def_ctor == 0u);
        assert(OBJ::copy_ctor == 0u);
        assert(OBJ::move_ctor == 1u);
        assert(OBJ::copy_assign == 0u);
        assert(OBJ::move_assign == SIZE);
        assert(OBJ::dtor == 1u);
        assert(OBJ::copy_with_val == 1u);
        assert(OBJ::move_with_val == 0u);
    }
}
template<typename OBJ>
void TestEmplaceAdditionalMoveImpl(size_t copy, size_t move) {
    {
        int a{ MAGIC };
        Vector<OBJ> v(SIZE);
        OBJ::Reset();
        v.Emplace(v.begin(), std::move(a));
        assert(OBJ::def_ctor == 0u);
        assert(OBJ::copy_ctor == copy);
        assert(OBJ::move_ctor == move);
        assert(OBJ::copy_assign == 0u);
        assert(OBJ::move_assign == 0u);
        assert(OBJ::dtor == SIZE);
        assert(OBJ::copy_with_val == 0u);
        assert(OBJ::move_with_val == 1u);
    } {
        int a{ MAGIC };
        Vector<OBJ> v(SIZE);
        v.Reserve(2 * SIZE);
        OBJ::Reset();
        v.Emplace(v.begin(), std::move(a));
        assert(OBJ::def_ctor == 0u);
        assert(OBJ::copy_ctor == 0u);
        assert(OBJ::move_ctor == 1u);
        assert(OBJ::copy_assign == 0u);
        assert(OBJ::move_assign == SIZE);
        assert(OBJ::dtor == 1u);
        assert(OBJ::copy_with_val == 0u);
        assert(OBJ::move_with_val == 1u);
    }
}

void TestEmplaceAdditional_move_noexcept_copy() {
    TestEmplaceAdditionalCopyImpl<C>(0u, SIZE);
    TestEmplaceAdditionalMoveImpl<C>(0u, SIZE);
}
void TestEmplaceAdditional_move_without_noexcept_copy() {
    TestEmplaceAdditionalCopyImpl<move_without_noexcept>(SIZE, 0u);
    TestEmplaceAdditionalMoveImpl<move_without_noexcept>(SIZE, 0u);
}

int main() {
    TestEmplaceAdditional_move_noexcept_copy();
    TestEmplaceAdditional_move_without_noexcept_copy();
    cerr << ""Tests passed""s << endl;
    return 0;
}"
nhpXFhsG,Untitled,Vla_DOS,Java,Thursday 18th of May 2023 03:06:33 AM CDT,"import java.awt.*;
import javax.swing.*;
import java.awt.event.KeyEvent;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.DefaultTableCellRenderer;

public class PacmanMap extends JFrame {
    private static final int CELL_SIZE = 25;
    private static final int ROWS = 31;
    private static final int COLUMNS = 28;
    private JTable mapTable;
    private DefaultTableModel tableModel;
    private int pacmanRow = (ROWS / 2) + 2;
    private int pacmanColumn = (COLUMNS / 2) +4;
    private int ghostRow = (ROWS / 2) + 2;
    private int ghostColumn = (COLUMNS / 2) - 5;
    final boolean W=false; // Wall.
    final boolean F=true; // Crossroads with food
    final boolean E=false; // Empty crossroads
    private boolean obstacleMap[][] = {
            {W,W,W,W,W,W,W,W,W,W,W,W,W,W,W,W,W,W,W,W,W,W,W,W,W,W,W,W},
            {W,F,F,F,F,F,F,F,F,F,F,F,F,W,W,F,F,F,F,F,F,F,F,F,F,F,F,W},
            {W,F,W,W,W,W,F,W,W,W,W,W,F,W,W,F,W,W,W,W,W,F,W,W,W,W,F,W},
            {W,F,W,W,W,W,F,W,W,W,W,W,F,W,W,F,W,W,W,W,W,F,W,W,W,W,F,W},
            {W,F,W,W,W,W,F,W,W,W,W,W,F,W,W,F,W,W,W,W,W,F,W,W,W,W,F,W},
            {W,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,W},
            {W,F,W,W,W,W,F,W,W,F,W,W,W,W,W,W,W,W,F,W,W,F,W,W,W,W,F,W},
            {W,F,W,W,W,W,F,W,W,F,W,W,W,W,W,W,W,W,F,W,W,F,W,W,W,W,F,W},
            {W,F,F,F,F,F,F,W,W,F,F,F,F,W,W,F,F,F,F,W,W,F,F,F,F,F,F,W},
            {W,W,W,W,W,W,F,W,W,W,W,W,F,W,W,F,W,W,W,W,W,F,W,W,W,W,W,W},
            {E,E,E,E,E,W,F,W,W,W,W,W,F,W,W,F,W,W,W,W,W,F,W,E,E,E,E,E},
            {E,E,E,E,E,W,F,W,W,F,F,F,F,F,F,F,F,F,F,W,W,F,W,E,E,E,E,E},
            {E,E,E,E,E,W,F,W,W,F,W,W,W,W,W,W,W,W,F,W,W,F,W,E,E,E,E,E},
            {W,W,W,W,W,W,F,W,W,F,W,E,E,E,E,E,E,W,F,W,W,F,W,W,W,W,W,W},
            {F,F,F,F,F,F,F,F,F,F,W,E,E,E,E,E,E,W,F,F,F,F,F,F,F,F,F,F},
            {W,W,W,W,W,W,F,W,W,F,W,E,E,E,E,E,E,W,F,W,W,F,W,W,W,W,W,W},
            {E,E,E,E,E,W,F,W,W,F,W,W,W,W,W,W,W,W,F,W,W,F,W,E,E,E,E,E},
            {E,E,E,E,E,W,F,W,W,F,F,F,F,F,F,F,F,F,F,W,W,F,W,E,E,E,E,E},
            {E,E,E,E,E,W,F,W,W,F,W,W,W,W,W,W,W,W,F,W,W,F,W,E,E,E,E,E},
            {W,W,W,W,W,W,F,W,W,F,W,W,W,W,W,W,W,W,F,W,W,F,W,W,W,W,W,W},
            {W,F,F,F,F,F,F,F,F,F,F,F,F,W,W,F,F,F,F,F,F,F,F,F,F,F,F,W},
            {W,F,W,W,W,W,F,W,W,W,W,W,F,W,W,F,W,W,W,W,W,F,W,W,W,W,F,W},
            {W,F,W,W,W,W,F,W,W,W,W,W,F,W,W,F,W,W,W,W,W,F,W,W,W,W,F,W},
            {W,F,F,F,W,W,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,W,W,F,F,F,W},
            {W,W,W,F,W,W,F,W,W,F,W,W,W,W,W,W,W,W,F,W,W,F,W,W,F,W,W,W},
            {W,W,W,F,W,W,F,W,W,F,W,W,W,W,W,W,W,W,F,W,W,F,W,W,F,W,W,W},
            {W,F,F,F,F,F,F,W,W,F,F,F,F,W,W,F,F,F,F,W,W,F,F,F,F,F,F,W},
            {W,F,W,W,W,W,W,W,W,W,W,W,F,W,W,F,W,W,W,W,W,W,W,W,W,W,F,W},
            {W,F,W,W,W,W,W,W,W,W,W,W,F,W,W,F,W,W,W,W,W,W,W,W,W,W,F,W},
            {W,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,W},
            {W,W,W,W,W,W,W,W,W,W,W,W,W,W,W,W,W,W,W,W,W,W,W,W,W,W,W,W}
    };

    private int counter = 1;
    private int countPoint = 0;
    private JLabel counterLabel;
    private JLabel livesLabel; // Додаємо JLabel для відображення кількості життів

    Enemy enemyBlueRight;
    Enemy enemyRedLeft;
    Enemy enemyOrangeRight;
    public PacmanMap()  {
        initUI();
        ImageIcon imageIconRedLeft = new ImageIcon(getClass().getResource(""img/"" + ""RedLeft.png""));
        ImageIcon imageIconBlueRight = new ImageIcon(getClass().getResource(""img/"" + ""BlueRight.png""));
            enemyBlueRight = new Enemy(ghostRow - 6, ghostColumn, obstacleMap, 300, tableModel, imageIconBlueRight, pacmanRow, pacmanColumn, ""enemyBlue"");
        Thread enemyThreadBlueRight = new Thread(enemyBlueRight);
        enemyThreadBlueRight.start();

        enemyRedLeft = new Enemy(ghostRow+3, ghostColumn, obstacleMap, 300, tableModel, imageIconRedLeft, pacmanRow, pacmanColumn, ""enemyRed"");
        Thread enemyThreadenemyRedLeft = new Thread(enemyRedLeft);
        enemyThreadenemyRedLeft.start();

        ImageIcon imageIconOrangeRight = new ImageIcon(getClass().getResource(""img/"" + ""OrangeRight.png""));
        enemyOrangeRight = new Enemy(ghostRow-7, ghostColumn + 7, obstacleMap, 300, tableModel, imageIconOrangeRight, pacmanRow, pacmanColumn, ""enemyOrange"");
        Thread enemyThreadOrangeRight = new Thread(enemyOrangeRight);
        enemyThreadOrangeRight.start();
    }

    private void initUI(){
        tableModel = new DefaultTableModel(ROWS, COLUMNS);
        ImageIcon photo = new ImageIcon(getClass().getResource(""img/"" +""PacmanRight.png""));
        Image image = photo.getImage();

        for (int row = 0; row < ROWS; row++) {
            for (int column = 0; column < COLUMNS; column++) {
                if (!obstacleMap[row][column]) {
                    tableModel.setValueAt(""X"", row, column);
                }
                else if(obstacleMap[row][column]) {
                    tableModel.setValueAt(""*"", row, column);
                    countPoint++;
                }
            }
        }

        tableModel.setValueAt(image, pacmanRow, pacmanColumn);
        mapTable = new JTable(tableModel);
        mapTable.setGridColor(Color.black);
        mapTable.setRowHeight(CELL_SIZE);
        for (int column = 0; column < COLUMNS; column++) {
            mapTable.getColumnModel().getColumn(column).setPreferredWidth(CELL_SIZE);
        }
        mapTable.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
            @Override
            public void setValue(Object value) {

                if (value instanceof Image) {
                    ImageIcon icon = new ImageIcon((Image)value);
                    setIcon(icon);
                    setHorizontalAlignment(DefaultTableCellRenderer.CENTER);
                    setVerticalAlignment(DefaultTableCellRenderer.CENTER);
                    setBackground(new Color(13,1,35));
                    setText(null);
                }
                else if (value instanceof String && value.equals(""X"")) {
                    setBackground(new Color(80,111,214));
                    setHorizontalAlignment(DefaultTableCellRenderer.CENTER);
                    setVerticalAlignment(DefaultTableCellRenderer.CENTER);
                    setText(""X"");
                    setIcon(null);
                }
                else if (value instanceof String && ((String) value).contains(""enemy"")) {
                    String nameEnemy = """";
                    ImageIcon imageIcon;
                    if((value).equals(""enemyOrange"")){
                        imageIcon = new ImageIcon(getClass().getResource(""img/"" + ""OrangeRight.png""));
                        setIcon(imageIcon);
                        nameEnemy = ""enemyOrange"";
                    }
                    else if((value).equals(""enemyRed"")){
                        imageIcon = new ImageIcon(getClass().getResource(""img/"" + ""RedLeft.png""));
                        setIcon(imageIcon);
                        nameEnemy = ""enemyRed"";

                    }
                    else if((value).equals(""enemyBlue"")){
                    imageIcon = new ImageIcon(getClass().getResource(""img/"" + ""BlueRight.png""));
                    setIcon(imageIcon);
                    nameEnemy = ""enemyRed"";

                    }
                    setHorizontalAlignment(DefaultTableCellRenderer.CENTER);
                    setVerticalAlignment(DefaultTableCellRenderer.CENTER);
                    setBackground(new Color(13,1,35));
                    setText(nameEnemy);
                }
                else if(value instanceof String && value.equals("""")){
                    setText("""");
                    setIcon(null);
                    setBackground(new Color(13,1,35));
                }
                else if(value instanceof String && value.equals(""*"")){
                    setText("""");
                    ImageIcon photoNormalPoint = new ImageIcon(getClass().getResource(""img/"" +""NormalPoint.png""));
                    setIcon(photoNormalPoint);
                    setBackground(new Color(13,1,35));
                }
                else{
                    setText("""");
                    setIcon(null);
                    setBackground(new Color(13,1,35));
                }
            }
        });

        mapTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent event) {
                movePacman(event);
            }
        });
// Create a JPanel with a FlowLayout set to center
        JPanel topPanel = new JPanel(new FlowLayout(FlowLayout.CENTER));
        JScrollPane scrollPane = new JScrollPane(mapTable);
        scrollPane.setPreferredSize(new Dimension(CELL_SIZE * COLUMNS, CELL_SIZE * ROWS));

// Create and add the counter label to the top panel
        counterLabel = new JLabel(""Очки: "" + counter);
        topPanel.add(counterLabel);

// Create and add the lives label to the top panel
        livesLabel = new JLabel(""Життя: "" + lives);
        topPanel.add(livesLabel);

// Add the top panel to the NORTH position of the main JFrame
        add(topPanel, BorderLayout.NORTH);
        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.add(scrollPane);
        this.pack();
        this.setSize(800, 865);
        this.setLocationRelativeTo(null);
        this.setVisible(true);
    }

    int lives=3;
    private Thread movementThread;
    private int lastKeyCode = -1;

    private void movePacman(KeyEvent event) {
        int keyCode = event.getKeyCode();
        if (event.isControlDown() && event.isShiftDown() && event.getKeyCode() == KeyEvent.VK_Q) {
            // Закриття гри і повернення до головного меню
            dispose();  // Закриття вікна гри
            MainMenu mainMenu = new MainMenu();  // Створення нового екземпляра головного меню
            mainMenu.setVisible(true);  // Показати головне меню
        }
        if (keyCode == KeyEvent.VK_UP || keyCode == KeyEvent.VK_DOWN || keyCode == KeyEvent.VK_LEFT || keyCode == KeyEvent.VK_RIGHT) {
            lastKeyCode = keyCode;

            if (movementThread != null && movementThread.isAlive()) {
                // Якщо потік вже запущено, не виконувати новий рух
                return;
            }
            movementThread = new Thread(() -> {
                while (true) {
                    try {
                        Thread.sleep(300);  // Затримка 0.5 секунди
                    } catch (InterruptedException e) {
                        e.printStackTrace();
                    }
                    ImageIcon photo = null; //= new ImageIcon(getClass().getResource(""img/"" +""PacmanRight.png""));
                    int newPacmanRow = pacmanRow;
                    int newPacmanColumn = pacmanColumn;

                    switch (lastKeyCode) {
                        case KeyEvent.VK_UP:
                            newPacmanRow = pacmanRow - 1;
                            photo = new ImageIcon(getClass().getResource(""img/"" +""PacmanUp.png""));

                            break;
                        case KeyEvent.VK_DOWN:
                            newPacmanRow = pacmanRow + 1;
                            photo = new ImageIcon(getClass().getResource(""img/"" +""PacmanDown.png""));

                            break;
                        case KeyEvent.VK_LEFT:
                            newPacmanColumn = pacmanColumn - 1;
                            photo = new ImageIcon(getClass().getResource(""img/"" +""PacmanLeft.png""));

                            break;
                        case KeyEvent.VK_RIGHT:
                            newPacmanColumn = pacmanColumn + 1;
                            photo = new ImageIcon(getClass().getResource(""img/"" +""PacmanRight.png""));
                            break;
                        default:
                            return;
                    }

                    if (newPacmanRow < 0 || newPacmanRow >= ROWS || newPacmanColumn < 0 || newPacmanColumn >= COLUMNS) {
                        return;
                    }

                    if (!obstacleMap[newPacmanRow][newPacmanColumn]) {
                        return;
                    }

                    // Increment the counter if Pacman moves onto a cell with a ""."" marker
                    if (tableModel.getValueAt(newPacmanRow, newPacmanColumn).equals(""*"")) {
                        counter++;
                        counterLabel.setText(""Очки: "" + counter);
                    }


                    tableModel.setValueAt("""", pacmanRow, pacmanColumn);
                    pacmanRow = newPacmanRow;
                    pacmanColumn = newPacmanColumn;

                    Image image = photo.getImage();

                    tableModel.setValueAt(image, pacmanRow, pacmanColumn);

                    enemyBlueRight.movePacman(newPacmanRow, newPacmanColumn);
                    enemyOrangeRight.movePacman(newPacmanRow, newPacmanColumn);
                    enemyRedLeft.movePacman(newPacmanRow, newPacmanColumn);

                    if (enemyBlueRight.Check() || enemyOrangeRight.Check() || enemyRedLeft.Check()) {
                        lives--;
                        livesLabel.setText(""Життя: "" + lives);
                        if (lives == 0) {
                            JOptionPane.showMessageDialog(this, ""Кінець гри!"" + ""\nВаш рахунок: "" + counter, ""Гра завершена"", JOptionPane.PLAIN_MESSAGE);
                            enemyRedLeft.stop();
                            enemyOrangeRight.stop();
                            enemyBlueRight.stop();
                            new SaveResult(counter);
                        }
                    }

                    if (countPoint == counter) {
                        JOptionPane.showMessageDialog(this, ""Ви виграли!"" + ""\nВаш рахунок: "" + counter, ""Гра завершена"", JOptionPane.PLAIN_MESSAGE);
                        enemyRedLeft.stop();
                        enemyOrangeRight.stop();
                        enemyBlueRight.stop();
                        new SaveResult(counter);

                    }
                }
            });

            movementThread.start();
        }
    }
}"
qhVsbJYT,Untitled,wclovers,PHP,Thursday 18th of May 2023 02:49:45 AM CDT,"add_filter( 'wcfm_marketplace_settings_fields_visibility', function( $fields ) {
    if (isset($fields['store_hide_email'])) $fields['store_hide_email']['dfvalue'] = 'yes';
    if (isset($fields['store_hide_phone'])) $fields['store_hide_phone']['dfvalue'] = 'yes';
    if (isset($fields['store_hide_address'])) $fields['store_hide_address']['dfvalue'] = 'yes';
    return $fields;
} );"
zTrgHnLj,Contoh Web Layout Dengan Bootstrap - Fullpage,rezamalik15,HTML 5,Thursday 18th of May 2023 02:43:05 AM CDT,"<html lang=""en"">
<head>
	<meta charset=""UTF-8"">
	<meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
	<title>Boostrap - Layout</title>

	<link href=""https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css"" rel=""stylesheet"" integrity=""sha384-KK94CHFLLe+nY2dmCWGMq91rCGa5gtU4mk92HdvYe+M/SXH301p5ILy+dN9+nJOZ"" crossorigin=""anonymous"">

</head>
<body>
	<div class=""container-fluid bg-secondary"">
		<div class=""container mt-0 mb-5 bg-secondary"">
			<div class=""py-3"">
				<h1 class=""text-white"">Welcome</h1>
			</div>
		</div>
	</div>

	<div class=""container-fluid"">
		<div class=""container"">
			<div class=""row mb-3"">
				<div class=""col-2"">
					<span class=""placeholder col-12""></span>
				</div>				
			</div>

			<div class=""row mb-5"">
				<div class=""col-6"">
					<img class=""img-fluid"" src=""https://picsum.photos/id/250/780/400"" alt="""">
				</div>
				<div class=""col-6"">
					<img class=""img-fluid"" src=""https://picsum.photos/id/185/780/400"" alt="""">
				</div>
			</div>
		</div>
	</div>

	<div class=""container-fluid"">
		<div class=""container"">
			<div class=""row mb-3"">
				<div class=""col-2"">
					<span class=""placeholder col-12""></span>
				</div>				
			</div>

			<div class=""row mb-5"">
				<div class=""col-4"">
					<img class=""img-fluid mb-2"" src=""https://picsum.photos/id/132/780/400"" alt="""">
					<span class=""placeholder col-4 mb-1""></span>
					<span class=""placeholder col-10 mb-1""></span>
					<span class=""placeholder col-10 mb-1""></span>
					<span class=""placeholder col-10 mb-1""></span>
				</div>
				<div class=""col-4"">
					<img class=""img-fluid mb-2"" src=""https://picsum.photos/id/234/780/400"" alt="""">
					<span class=""placeholder col-4 mb-1""></span>
					<span class=""placeholder col-10 mb-1""></span>
					<span class=""placeholder col-10 mb-1""></span>
					<span class=""placeholder col-10 mb-1""></span>
				</div>
				<div class=""col-4"">
					<img class=""img-fluid mb-2"" src=""https://picsum.photos/id/188/780/400"" alt="""">
					<span class=""placeholder col-4 mb-1""></span>
					<span class=""placeholder col-10 mb-1""></span>
					<span class=""placeholder col-10 mb-1""></span>
					<span class=""placeholder col-10 mb-1""></span>
				</div>
			</div>
		</div>
	</div>

	<div class=""container-fluid bg-secondary"">
		<div class=""container"">
			<div class=""row"">
				<div class=""col-12 text-center text-white p-5"">
					<h1>Thank You</h1>
					<p>By Malik</p>
				</div>
			</div>
		</div>		
	</div>

	<script src=""https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"" integrity=""sha384-ENjdO4Dr2bkBIFxQpeoTz1HIcje39Wm4jDKdf19U8gI4ddQ3GYNS7NTKfAdVQSZe"" crossorigin=""anonymous""></script>
</body>
</html>"
vyiHmcU0,Untitled,sanemoku,HTML,Thursday 18th of May 2023 02:33:56 AM CDT,Sanemoku is a website that aims to provide convenience in the world of information and communication technology in the field of developing android applications.
n4egmJGh,Belajar Bootstrap web layout - Bagian ke 3,rezamalik15,HTML 5,Thursday 18th of May 2023 02:27:46 AM CDT,"<div class=""container-fluid"">
	<div class=""container"">
		<div class=""row mb-3"">
			<div class=""col-2"">
				<span class=""placeholder col-12""></span>
			</div>				
		</div>

		<div class=""row mb-5"">
			<div class=""col-4"">
				<img class=""img-fluid mb-2"" src=""https://picsum.photos/id/132/780/400"" alt="""">
				<span class=""placeholder col-4 mb-1""></span>
				<span class=""placeholder col-10 mb-1""></span>
				<span class=""placeholder col-10 mb-1""></span>
				<span class=""placeholder col-10 mb-1""></span>
			</div>
			<div class=""col-4"">
				<img class=""img-fluid mb-2"" src=""https://picsum.photos/id/234/780/400"" alt="""">
				<span class=""placeholder col-4 mb-1""></span>
				<span class=""placeholder col-10 mb-1""></span>
				<span class=""placeholder col-10 mb-1""></span>
				<span class=""placeholder col-10 mb-1""></span>
			</div>
			<div class=""col-4"">
				<img class=""img-fluid mb-2"" src=""https://picsum.photos/id/188/780/400"" alt="""">
				<span class=""placeholder col-4 mb-1""></span>
				<span class=""placeholder col-10 mb-1""></span>
				<span class=""placeholder col-10 mb-1""></span>
				<span class=""placeholder col-10 mb-1""></span>
			</div>
		</div>
	</div>
</div>"
EB3dwewr,vector_tests,Seredenko-V,C++,Thursday 18th of May 2023 02:20:52 AM CDT,"#include ""vector.h""
#include <cassert>
#include <stdexcept>
#include <iostream>

using namespace std;

constexpr std::size_t SIZE = 8u;
constexpr int MAGIC = 42;
constexpr uint32_t DEFAULT_COOKIE = 0xdeadbeef;

struct ThrowObj {
    ThrowObj() {
        if (default_construction_throw_countdown > 0) {
            if (--default_construction_throw_countdown == 0) {
                throw std::runtime_error(""Oops"");
            }
        }
    };
    ThrowObj(const int&) {
        if (throw_on_copy_val) {
            throw std::runtime_error(""Oops"");
        }
    };
    ThrowObj(const ThrowObj&) {
        if (throw_on_copy) {
            throw std::runtime_error(""Oops"");
        }
    };
    ThrowObj& operator=(const ThrowObj&) {
        if (throw_on_copy) {
            throw std::runtime_error(""Oops"");
        }
        return *this;
    }
    ThrowObj(int&&) {}
    ThrowObj(ThrowObj&& other) = default;
    ThrowObj& operator=(ThrowObj&& other) = default;
    ~ThrowObj() {
        cookie = 0;
    }

    [[nodiscard]] bool IsAlive() const noexcept {
        return cookie == DEFAULT_COOKIE;
    }

    uint32_t cookie = DEFAULT_COOKIE;

    static inline size_t default_construction_throw_countdown = SIZE;
    static inline bool throw_on_copy = false;
    static inline bool throw_on_copy_val = false;
};

void TestEmplaceBackStrongException() {
    ThrowObj::default_construction_throw_countdown = -1;
    {
        int a{ MAGIC };
        Vector<ThrowObj> v(1);
        ThrowObj::throw_on_copy_val = true;
        try {
            v.EmplaceBack(a);
            assert(false);
        } catch (const runtime_error&) {
            // этого и ждем
        }
        assert(v[0].IsAlive());
        assert(v.Size() == 1u);
        assert(v.Capacity() == 1u);
    }
}

template <typename U>
void TestInsertImpl(Vector<int>& v, size_t capacity, size_t offset, U&& val) {
    auto pos = v.cbegin() + offset;

    bool equal = v.Size() == v.Capacity();
    Vector<int>::iterator iter = v.Insert(pos, std::forward<U>(val));

    assert(v.Size() == SIZE + 1);
    assert(v.Capacity() == capacity);
    assert(v[offset - 1] == MAGIC - 1);
    assert(v[offset] == MAGIC);
    assert(v[offset + 1] == MAGIC + 1);
    assert(*iter == MAGIC);
    if (equal) {
        assert(iter != pos);
    } else {
        assert(iter == pos);
    }
    assert(iter == v.cbegin() + offset);
}

void TestInsert() {
    {
        int a{ MAGIC };
        Vector<int> v(SIZE);
        v[0] = MAGIC - 1;
        v[1] = MAGIC + 1;
        TestInsertImpl(v, 2 * SIZE, 1u, a);
    } {
        int a{ MAGIC };
        Vector<int> v(SIZE);
        v[0] = MAGIC - 1;
        v[1] = MAGIC + 1;
        v.Reserve(SIZE + 1);
        TestInsertImpl(v, SIZE + 1, 1u, a);
    } {
        int a{ MAGIC };
        Vector<int> v(SIZE);
        v[0] = MAGIC - 1;
        v[1] = MAGIC + 1;
        v.Reserve(2 * SIZE);
        TestInsertImpl(v, 2 * SIZE, 1u, a);
    } {
        int a{ MAGIC };
        Vector<int> v(SIZE);
        v[0] = MAGIC - 1;
        v[1] = MAGIC + 1;
        TestInsertImpl(v, 2 * SIZE, 1u, move(a));
    } {
        int a{ MAGIC };
        Vector<int> v(SIZE);
        v[0] = MAGIC - 1;
        v[1] = MAGIC + 1;
        v.Reserve(SIZE + 1);
        TestInsertImpl(v, SIZE + 1, 1u, move(a));
    } {
        int a{ MAGIC };
        Vector<int> v(SIZE);
        v[0] = MAGIC - 1;
        v[1] = MAGIC + 1;
        v.Reserve(2 * SIZE);
        TestInsertImpl(v, 2 * SIZE, 1u, move(a));
    }
}

int main() {
    TestEmplaceBackStrongException();
    TestInsert();
    cout << ""Tests is passed""s << endl;
    return 0;
}"
WC5eVMrq,Sample Models for 11 SL Exam,mrcarleASB,Python,Thursday 18th of May 2023 02:17:50 AM CDT,"from sqlalchemy import func
from flask_login import UserMixin
from app import db
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import sessionmaker

Base = declarative_base()


class Admins(db.Model):
    id = db.Column(db.Integer, primary_key=True )
    firstname = db.Column(db.String(100), nullable=False)
    lastname = db.Column(db.String(100), nullable=False)
    email = db.Column(db.String(100), nullable=False)
    phone = db.Column(db.String(100), unique=True, nullable=False)

class Schools(db.Model):
    id = db.Column(db.Integer,  primary_key=True)
    name = db.Column(db.String(100), nullable=False)
    city = db.Column(db.String(100), nullable=False)
    country = db.Column(db.String(100), nullable=False)
    created_at = db.Column(db.DateTime(timezone=True),
                          server_default=func.now())

class Coaches(db.Model):
    id = db.Column(db.Integer,  primary_key=True)
    firstname = db.Column(db.String(100), nullable=False)
    lastname = db.Column(db.String(100), nullable=False)
    school = db.Column(db.ForeignKey(Schools.name), nullable=False)
    email = db.Column(db.String(100), nullable=False)
    phone = db.Column(db.String(100), unique=True, nullable=False)
    created_at = db.Column(db.DateTime(timezone=True),
                           server_default=func.now())

class Judges(db.Model):
    id = db.Column(db.Integer,  primary_key=True)
    firstname = db.Column(db.String(100), nullable=False)
    lastname = db.Column(db.String(100), nullable=False)
    school = db.Column(db.ForeignKey(Schools.name), nullable=False)
    email = db.Column(db.String(100), unique=True, nullable=False)
    phone = db.Column(db.String(100), unique=True, nullable=False)
    created_at = db.Column(db.DateTime(timezone=True),
                           server_default=func.now())

    def __repr__(self):
        return f'<Contestant {self.firstname}>'

class Contestants(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    firstname = db.Column(db.String(100), nullable=False)
    lastname = db.Column(db.String(100), nullable=False)
    school = db.Column(db.ForeignKey(Schools.name), nullable=False)
    created_at = db.Column(db.DateTime(timezone=True),
                           server_default=func.now())
    def __repr__(self):
        return f'<Contestant {self.firstname}>'

class Choices(db.Model):
    id = db.Column(db.Integer,  primary_key=True)
    contestantfirstname = db.Column(db.String(100), db.ForeignKey(Contestants.id))
    deb = db.Column(db.Boolean, nullable=False)
    oo = db.Column(db.Boolean, nullable=False)
    oi = db.Column(db.Boolean, nullable=False)
    imps = db.Column(db.Boolean, nullable=False)
    da = db.Column(db.Boolean, nullable=False)
    impda = db.Column(db.Boolean, nullable=False)
    created_at = db.Column(db.DateTime(timezone=True),
                           server_default=func.now())
    def __repr__(self):
        return f'<{self.contestantid} Event>'

class Debates(db.Model):
    id = db.Column(db.Integer,  primary_key=True)
    round = db.Column(db.Integer, nullable = False)
    judgeid = db.Column(db.Integer, db.ForeignKey(Judges.id), nullable=False)
    room = db.Column(db.Integer, nullable = False)

    prompt = db.Column(db.String, nullable=False)
    prop = db.Column(db.Boolean)


    firstspeakerid = db.Column(db.Integer, db.ForeignKey(Contestants.id), nullable=False)
    secondspeakerid = db.Column(db.Integer, db.ForeignKey(Contestants.id), nullable=False)

    organization = db.Column(db.Integer, nullable=False)
    arguments = db.Column(db.Integer, nullable=False)
    evidence = db.Column(db.Integer, nullable=False)
    clash = db.Column(db.Integer, nullable=False)
    poi = db.Column(db.Integer, nullable=False)
    teamwork = db.Column(db.Integer, nullable=False)
    closing = db.Column(db.Integer, nullable=False)
    presentation = db.Column(db.Integer, nullable=False)
    useoftime = db.Column(db.Integer, nullable=False)
    audience = db.Column(db.Integer, nullable=False)

    win= db.Column(db.Boolean)

    comments = db.Column(db.Text, nullable=False)
    totalpoints=db.Column(db.Integer, nullable=False)

    created_at = db.Column(db.DateTime(timezone=True),
                           server_default=func.now())

class GeneralEvents(db.Model):
    id = db.Column(db.Integer,  primary_key=True)
    eventname=db.Column(db.String, nullable=False)

    round = db.Column(db.Integer, nullable=False)
    judgeid = db.Column(db.Integer, db.ForeignKey(Judges.id), nullable=False)
    room = db.Column(db.Integer, nullable = False)

    firstcontestant = db.Column(db.Integer, db.ForeignKey(Contestants.id), nullable=False)
    secondcontestant = db.Column(db.Integer, db.ForeignKey(Contestants.id))

    crit1 = db.Column(db.Integer, nullable=False)
    crit2 = db.Column(db.Integer, nullable=False)
    crit3 = db.Column(db.Integer, nullable=False)
    crit4 = db.Column(db.Integer, nullable=False)
    crit5 = db.Column(db.Integer, nullable=False)
    crit6 = db.Column(db.Integer, nullable=False)
    crit7 = db.Column(db.Integer, nullable=False)
    crit8 = db.Column(db.Integer, nullable=False)
    crit9 = db.Column(db.Integer, nullable=False)
    crit10 = db.Column(db.Integer, nullable=False)
    crit11 = db.Column(db.Integer)
    crit12 = db.Column(db.Integer)

    comments = db.Column(db.Text, nullable=False)
    timelimit = db.Column(db.Boolean)
    totalpoints=db.Column(db.Integer, nullable=False)


    created_at = db.Column(db.DateTime(timezone=True),
                           server_default=func.now())

class EventDescriptions(db.Model):
    id = db.Column(db.Integer, primary_key=True)

    eventname = db.Column(db.String, nullable=False)

    crit1 = db.Column(db.String, nullable=False)
    crit2 = db.Column(db.String, nullable=False)
    crit3 = db.Column(db.String, nullable=False)
    crit4 = db.Column(db.String, nullable=False)
    crit5 = db.Column(db.String, nullable=False)
    crit6 = db.Column(db.String, nullable=False)
    crit7 = db.Column(db.String, nullable=False)
    crit8 = db.Column(db.String, nullable=False)
    crit9 = db.Column(db.String, nullable=False)
    crit10 = db.Column(db.String, nullable=False)
    crit11 = db.Column(db.String)
    crit12 = db.Column(db.String)

    timelimit = db.Column(db.String, nullable=False)
    timepenalty = db.Column(db.Integer, nullable=False)

class Users(db.Model, UserMixin):
    id = db.Column(db.Integer, primary_key=True)

    admin = db.Column(db.Boolean)
    coach = db.Column(db.Boolean)
    judge = db.Column(db.Boolean)
    alternativeid = db.Column(db.Integer, nullable=False)
    username = db.Column(db.String, unique=True, nullable=False)
    password = db.Column(db.String, nullable=False)















"
9xLyrwcs,read 4067 - 16 inputs,granteeric,Arduino,Thursday 18th of May 2023 02:12:16 AM CDT,"#include <Arduino.h>
#include <avr/io.h>
#include <Adafruit_NeoPixel.h>



//////////////// MACROS For debugging in serial monitor ///////////////////////
#define DEBUG                   0        //debug mode 1=on 0=off
#if DEBUG == 1
  #define DEBUG_PRINT(x)          Serial.print(x)
  #define DEBUG_PRINTHEX(x)       Serial.print(x, HEX)
  #define DEBUG_PRINTBIN(x)       Serial.print(x, BIN)
  #define DEBUG_PRINTLN(x)        Serial.println(x)
  #define DEBUG_PRINTLNHEX(x)     Serial.println(x, HEX)
  #define DEBUG_PRINTLNBIN(x)     Serial.println(x, BIN)
  #define SERIAL_BEGIN(x)         Serial.begin(x)
  #define SERIAL_DELAY(x)         delay(x)
#else
  #define DEBUG_PRINT(x)
  #define DEBUG_PRINTHEX(x)
  #define DEBUG_PRINTBIN(x)
  #define DEBUG_PRINTLN(x)
  #define DEBUG_PRINTLNHEX(x)
  #define DEBUG_PRINTLNBIN(x)
  #define SERIAL_BEGIN(x)
  #define SERIAL_DELAY(x)
#endif
///////////////////////////////////////////////////////////////////////////////

//Pins definitions            BITS
#define CD4067_A                4                     //PD4 - pin A 10 of CD4067 connected to pin 4 of Arduino
#define CD4067_B                5                     //PD5 - pin B 11 of CD4067 connected to pin 5 of Arduino
#define CD4067_C                6                     //PD6 - pin C 14 of CD4067 connected to pin 6 of Arduino
#define CD4067_D                7                     //PD7 - pin D 13 of CD4067 connected to pin 7 of Arduino
#define CD4067_SIG              0                     //PC0 - pin SIG 15 of CD4067 connected to pin A0(PC0) of Arduino

#define BTN_STOP_ALARM          2                     //PD2 - pin 2 of Arduino connected to button STOP ALARM pull-up  (active low)
#define BUZZER                  1                     //PB1 - pin 9 of Arduino connected to buzzer

//Pins definitions            Digital ports
#define LED_ADDRESSABLE         8                     //d8 On Trinket or Gemma, suggest changing this to 1

//Watchdog
#define WATCHDOG                1                     //watchdog 1=on 0=off

#if WATCHDOG == 1
  #include <avr/wdt.h>
  #define WATCHDOG_RESET         wdt_reset()
//WDTO_8S 8seconds without wdt_reset() before reinitailisation
//WDTO_4S 4seconds without wdt_reset() before reinitailisation
//WDTO_2S 2seconds without wdt_reset() before reinitailisation
//WDTO_1S 1seconds without wdt_reset() before reinitailisation
  #define WATCHDOG_ENABLE        wdt_enable(WDTO_2S)
#else
  #define WATCHDOG_RESET
  #define WATCHDOG_ENABLE
#endif

//global variables
//led addressable
#ifdef __AVR__
 #include <avr/power.h> // Required for 16 MHz Adafruit Trinket
#endif
#define NUMPIXELS               16                    // Popular NeoPixel ring size
#define BRIGHTNESS              127                   //max brightness 0..255
#define LED_DELAY_FLASH         500                   //delay flash in ms

//Buzzer
#define BUZZER_PASSIVE          0                     //passive buzzer 0=off 1=on
#define BUZZER_FREQ1            440                   //frequency for buzzer 1  note A4 440Hz for buzzer passive

//Button
#define TIME_ANTIREBONS         250                   //time in ms for anti-rebound

//Other
#ifdef F_CPU
  #undef F_CPU
#endif
#define F_CPU                   16000000L             //CPU frequency  16MHz
#define VCC                     5.0f                  //VCC voltage 5V
#define ADC_RESOLUTION          1024.0f               //ADC resolution 10 bits 0..1024 //1024 values
#define VOLTAGE_SCALE           (VCC/ADC_RESOLUTION)  //scale factor for voltage calculation

//Captors
#define CAPTOR_DELAY_CYCLE      2000                  //delay in milli_second between captor read and next cycle captor read
#define CPATOR_DELAY_READ       50000                  //delay in micro_second between captor sampling read 50000us=50ms
#define CAPTOR_SAMPLING         10                    //number of captor read for average

    //target voltage for captor trigger
#define CAPTOR_HYSTERESIS_LOW   0.1f                  //hysteresis for captor trigger low  0.1V
#define CAPTOR_HYSTERESIS_HIGH  0.1f                  //hysteresis for captor trigger high 0.1V
#define DEFAULT_LOW_VOLTAGE     2.0f                  //default low voltage 2.0V
#define DEFAULT_HIGH_VOLTAGE    4.0f                  //default high voltage 4.0V
    //Individual captor trigger
#define CAPTOR_TRIGGER_LOW_1    DEFAULT_LOW_VOLTAGE   //target voltage for captor 1 trigger low 2.0V
#define CAPTOR_TRIGGER_HIGH_1   DEFAULT_HIGH_VOLTAGE  //target voltage for captor 1 trigger high 4.0V

#define CAPTOR_TRIGGER_LOW_2    DEFAULT_LOW_VOLTAGE   //target voltage for captor 2 trigger low 2.0V
#define CAPTOR_TRIGGER_HIGH_2   DEFAULT_HIGH_VOLTAGE  //target voltage for captor 2 trigger high 4.0V

#define CAPTOR_TRIGGER_LOW_3    DEFAULT_LOW_VOLTAGE   //target voltage for captor 3 trigger low 2.0V
#define CAPTOR_TRIGGER_HIGH_3   DEFAULT_HIGH_VOLTAGE  //target voltage for captor 3 trigger high 4.0V

#define CAPTOR_TRIGGER_LOW_4    DEFAULT_LOW_VOLTAGE   //target voltage for captor 4 trigger low 2.0V
#define CAPTOR_TRIGGER_HIGH_4   DEFAULT_HIGH_VOLTAGE  //target voltage for captor 4 trigger high 4.0V

#define CAPTOR_TRIGGER_LOW_5    DEFAULT_LOW_VOLTAGE   //target voltage for captor 5 trigger low 2.0V
#define CAPTOR_TRIGGER_HIGH_5   DEFAULT_HIGH_VOLTAGE  //target voltage for captor 5 trigger high 4.0V

#define CAPTOR_TRIGGER_LOW_6    DEFAULT_LOW_VOLTAGE   //target voltage for captor 6 trigger low 2.0V
#define CAPTOR_TRIGGER_HIGH_6   DEFAULT_HIGH_VOLTAGE  //target voltage for captor 6 trigger high 4.0V

#define CAPTOR_TRIGGER_LOW_7    DEFAULT_LOW_VOLTAGE   //target voltage for captor 7 trigger low 2.0V
#define CAPTOR_TRIGGER_HIGH_7   DEFAULT_HIGH_VOLTAGE  //target voltage for captor 7 trigger high 4.0V

#define CAPTOR_TRIGGER_LOW_8    DEFAULT_LOW_VOLTAGE   //target voltage for captor 8 trigger low 2.0V
#define CAPTOR_TRIGGER_HIGH_8   DEFAULT_HIGH_VOLTAGE  //target voltage for captor 8 trigger high 4.0V

#define CAPTOR_TRIGGER_LOW_9    DEFAULT_LOW_VOLTAGE   //target voltage for captor 9 trigger low 2.0V
#define CAPTOR_TRIGGER_HIGH_9   DEFAULT_HIGH_VOLTAGE  //target voltage for captor 9 trigger high 4.0V

#define CAPTOR_TRIGGER_LOW_10   DEFAULT_LOW_VOLTAGE   //target voltage for captor 10 trigger low 2.0V
#define CAPTOR_TRIGGER_HIGH_10  DEFAULT_HIGH_VOLTAGE  //target voltage for captor 10 trigger high 4.0V

#define CAPTOR_TRIGGER_LOW_11   DEFAULT_LOW_VOLTAGE   //target voltage for captor 11 trigger low 2.0V
#define CAPTOR_TRIGGER_HIGH_11  DEFAULT_HIGH_VOLTAGE  //target voltage for captor 11 trigger high 4.0V

#define CAPTOR_TRIGGER_LOW_12   DEFAULT_LOW_VOLTAGE   //target voltage for captor 12 trigger low 2.0V
#define CAPTOR_TRIGGER_HIGH_12  DEFAULT_HIGH_VOLTAGE  //target voltage for captor 12 trigger high 4.0V

#define CAPTOR_TRIGGER_LOW_13   DEFAULT_LOW_VOLTAGE   //target voltage for captor 13 trigger low 2.0V
#define CAPTOR_TRIGGER_HIGH_13  DEFAULT_HIGH_VOLTAGE  //target voltage for captor 13 trigger high 4.0V

#define CAPTOR_TRIGGER_LOW_14   DEFAULT_LOW_VOLTAGE   //target voltage for captor 14 trigger low 2.0V
#define CAPTOR_TRIGGER_HIGH_14  DEFAULT_HIGH_VOLTAGE  //target voltage for captor 14 trigger high 4.0V

#define CAPTOR_TRIGGER_LOW_15   DEFAULT_LOW_VOLTAGE   //target voltage for captor 15 trigger low 2.0V
#define CAPTOR_TRIGGER_HIGH_15  DEFAULT_HIGH_VOLTAGE  //target voltage for captor 15 trigger high 4.0V

#define CAPTOR_TRIGGER_LOW_16   DEFAULT_LOW_VOLTAGE   //target voltage for captor 16 trigger low 2.0V
#define CAPTOR_TRIGGER_HIGH_16  DEFAULT_HIGH_VOLTAGE  //target voltage for captor 16 trigger high 4.0V

//////////////////////////////// Enum ////////////////////////////////////////
//enum for captors of CD4067 multiplexer
enum captor {CAPTOR_1=0, CAPTOR_2=1, CAPTOR_3=2, CAPTOR_4=3, CAPTOR_5=4, CAPTOR_6=5, CAPTOR_7=6, CAPTOR_8=7, CAPTOR_9=8, CAPTOR_10=9, CAPTOR_11=10, CAPTOR_12=11, CAPTOR_13=12, CAPTOR_14=13, CAPTOR_15=14, CAPTOR_16=15};
enum color {RED=0, GREEN=1, BLACK=2};


//////////////////////////////// Variables ////////////////////////////////////////
    //Captors
uint16_t captorStateLow {0};                          //bit 0 = captor_1 ... bit 15 = captor_16 0=false 1=true
uint16_t captorStateHight {0};                        //bit 0 = captor_1 ... bit 15 = captor_16 0=false 1=true
float captorTriggerLow[16] {CAPTOR_TRIGGER_LOW_1, CAPTOR_TRIGGER_LOW_2, CAPTOR_TRIGGER_LOW_3, CAPTOR_TRIGGER_LOW_4, CAPTOR_TRIGGER_LOW_5, CAPTOR_TRIGGER_LOW_6, CAPTOR_TRIGGER_LOW_7, CAPTOR_TRIGGER_LOW_8, CAPTOR_TRIGGER_LOW_9, CAPTOR_TRIGGER_LOW_10, CAPTOR_TRIGGER_LOW_11, CAPTOR_TRIGGER_LOW_12, CAPTOR_TRIGGER_LOW_13, CAPTOR_TRIGGER_LOW_14, CAPTOR_TRIGGER_LOW_15, CAPTOR_TRIGGER_LOW_16};  //array of captor trigger low values
float captorTriggerHigh[16] {CAPTOR_TRIGGER_HIGH_1,CAPTOR_TRIGGER_HIGH_2, CAPTOR_TRIGGER_HIGH_3, CAPTOR_TRIGGER_HIGH_4, CAPTOR_TRIGGER_HIGH_5, CAPTOR_TRIGGER_HIGH_6, CAPTOR_TRIGGER_HIGH_7, CAPTOR_TRIGGER_HIGH_8, CAPTOR_TRIGGER_HIGH_9, CAPTOR_TRIGGER_HIGH_10, CAPTOR_TRIGGER_HIGH_11, CAPTOR_TRIGGER_HIGH_12, CAPTOR_TRIGGER_HIGH_13, CAPTOR_TRIGGER_HIGH_14, CAPTOR_TRIGGER_HIGH_15, CAPTOR_TRIGGER_HIGH_16};  //array of captor trigger low values
float captorSampling[16]={0};        //array of captor values
unsigned long timeCycle {0};                          //time in ms for one cycle

    //LEDs
uint16_t ledsStateBlack {0xFFFF};                     //bit 0 = captor_1 ... bit 15 = captor_16 0=false 1=true
uint16_t ledsStateRed {0};                            //bit 0 = captor_1 ... bit 15 = captor_16 0=false 1=true
uint16_t ledsStateGreen {0};                          //bit 0 = captor_1 ... bit 15 = captor_16 0=false 1=true
unsigned long timeLeds {0};                           //time in ms for one cycle
uint8_t ledState {0};                                 //0 = off, 1 = on
    //Button
volatile uint8_t btn_pressed {0};                     //0 false, 1 true
volatile unsigned long timeBtnPressed {0};            //time in ms for one cycle
volatile uint16_t AlarmTriggered {0};                 //bit 0 = captor_1 ... bit 15 = captor_16 0=false 1=true



//////////////////////////////// Objects ////////////////////////////////////////

  //NEO_GRB for WS2812B Green first, Red second and Blue last
  //NEO_KHZ800 for WS2812B 800KHz bitstream (most NeoPixel products w/WS2812 LEDs)
  // if you want to use RGBW leds, declare it as NEO_GRBW + NEO_KHZ800
Adafruit_NeoPixel displayLed(NUMPIXELS, LED_ADDRESSABLE, NEO_GRB + NEO_KHZ800);


//////////////////////////////// prototypes of functions ////////////////////////////////////////

void initPins(void);
void initInterrupts(void);
uint16_t readADC0(void);
void setLedColor(const uint8_t& led, const uint8_t& red, const uint8_t& green, const uint8_t& blue);
void setLedColor(const uint8_t& led, const uint8_t& color);
void setCaptorStateOk(const uint8_t& index);
void setCaptorStateFalse(const uint8_t& index, const uint8_t& color, uint16_t& captorState);


////////// if Buzzer Passif or Actif
#if BUZZER_PASSIVE == 1
  void setBuzzerTimer();
  void setFrequency(const uint16_t& frequency);
  ISR(TIMER2_COMPA_vect) {
    if(AlarmTriggered) PORTB ^= (1 << BUZZER); // Inverser l'état du buzzer
    else PORTB &= ~(1 << BUZZER); // Eteindre le buzzer
  }
#else
  uint8_t buzzerState {0};
#endif


/*
* @brief ISR for INT0 interrupt
* @details ISR for INT0 interrupt on pin 2 of arduino nano
* for button pressed Stop alarm
* @param none
*/
ISR(INT0_vect){ 
  if(!btn_pressed){
    btn_pressed=true; timeBtnPressed = millis();
  }
}

//////////////////////////////// Main ////////////////////////////////////////
/*
* @brief setup function
*/
void setup() {
  SERIAL_BEGIN(9600);   //if debug == 1 start serial communication a 115200 bauds
  SERIAL_DELAY(100);
  DEBUG_PRINT(""setup"");
  DEBUG_PRINTLN(__TIME__) ;
  WATCHDOG_ENABLE;      //enable watchdog
  
  //initiliaze pins
  initPins();

  //initialize interrupts
  initInterrupts();

  //initialize display led
  displayLed.begin();
}

/*
* @brief loop function
*/
void loop() {
  //flash led
  if( abs(millis() - timeLeds) >= LED_DELAY_FLASH){
    timeLeds = millis();
    if (ledState){
    displayLed.clear();                                                     // Set all pixel colors to 'off'
    displayLed.show();                                                      // Send the updated pixel colors to the hardware.                 
    ledState = 0;
    }
    else{
      for(uint8_t i = 0; i <16 ; i++){
        if(ledsStateBlack & (1 << i)) setLedColor(i, 0, 0, 0);
        else if(ledsStateRed & (1 << i)) setLedColor(i, 255, 0, 0);
        else if(ledsStateGreen & (1 << i)) setLedColor(i, 0, 255, 0);
        else setLedColor(i, 0, 0, 0);
      }
      ledState = 1;
    }
    displayLed.show();
  }

  //check if button is pressed. desactivate alarm on btn_pressed
  if(btn_pressed && (abs(millis() - timeBtnPressed) >= TIME_ANTIREBONS) ){
    btn_pressed = false;
    AlarmTriggered = 0;
    DEBUG_PRINTLN(F(""btn pressed, raz alarm and btn_pressed""));
  }

  //cycle time mesure captors
  if( abs(millis() - timeCycle) >= CAPTOR_DELAY_CYCLE){
    timeCycle = millis();

    //initialize sampling array
    memset(captorSampling, 0, sizeof(captorSampling));

    //read captors values and store it in captorSampling
    for(uint8_t i=0 ; i < CAPTOR_SAMPLING ; i++){
      for(uint8_t j=0 ; j < 16 ; j++){      
        //set CD4067 multiplexer pins
        PORTD = (PORTD & 0b00001111) | ((i & 0b00001111) << 4);
        captorSampling[j] += static_cast<float>(readADC0()*VOLTAGE_SCALE);                //store voltage in captorSampling
      }
      delayMicroseconds(CPATOR_DELAY_READ); //wait between each captor read for sampling
    }

    //check if captor is triggered
    for(uint8_t i=0 ; i < 16 ; i++){      
      float adcVoltage= static_cast<float>(captorSampling[i] / CAPTOR_SAMPLING); //average of captorSampling
      
      DEBUG_PRINT(F(""adcVoltage = ""));
      DEBUG_PRINT(adcVoltage);
      DEBUG_PRINT(F("" captorStateLow = ""));
      DEBUG_PRINTBIN(captorStateLow);
      DEBUG_PRINT(F("" captorStateHight = ""));
      DEBUG_PRINTLNBIN(captorStateHight);


      //if captor is not triggered
      if( (!( (captorStateLow)&(1<<i) )) && (!( (captorStateHight)&(1<<i) )) ){
        DEBUG_PRINTLN(F(""captor is not triggered""));

        if(adcVoltage < captorTriggerLow[i]) setCaptorStateFalse(i, GREEN, captorStateLow);
        else if(adcVoltage > captorTriggerHigh[i]) setCaptorStateFalse(i, RED, captorStateHight);
        else setCaptorStateOk(i);
      }
      else if(captorStateLow &(1<<i)){
        DEBUG_PRINTLN(F(""captor triggered low""));
        if( adcVoltage >= (captorTriggerLow[i]+CAPTOR_HYSTERESIS_LOW) )  {
          captorStateLow &= ~(1 << i);  //set captor state to false
          AlarmTriggered &= ~(1 << i);  //set Alarm state to false
          setCaptorStateOk(i);
        }
      }
      else if(captorStateHight &(1<<i)){
        DEBUG_PRINTLN(F(""captor triggered high""));
        DEBUG_PRINT(F("" adcVoltage = ""));
        DEBUG_PRINTLN(adcVoltage);
        
        DEBUG_PRINT(F(""  captorTriggerHigh[i] = ""));
        DEBUG_PRINT(captorTriggerHigh[i]);

        DEBUG_PRINT(F(""  CAPTOR_HYSTERESIS_HIGH = ""));
        DEBUG_PRINT(CAPTOR_HYSTERESIS_HIGH);

        DEBUG_PRINT(F(""  captorTriggerHigh[i]-CAPTOR_HYSTERESIS_HIGH = ""));
        DEBUG_PRINTLN(captorTriggerHigh[i]-CAPTOR_HYSTERESIS_HIGH);

        if( adcVoltage <= (captorTriggerHigh[i]-CAPTOR_HYSTERESIS_HIGH) ){
          DEBUG_PRINTLN(F(""triggered high captorStateOk""));
          captorStateHight &= ~(1 << i);  //set captor state to false
          AlarmTriggered &= ~(1 << i);  //set Alarm state to false
          setCaptorStateOk(i);
        } 
      }
    }//end for
  }//end if timeCycle

#if BUZZER_PASSIVE == 0
  //check if alarm is triggered
  if(AlarmTriggered && !buzzerState) {
    PORTB |= (1 << BUZZER);
    buzzerState = 1;
  }
  else if(!AlarmTriggered && buzzerState) {
    PORTB &= ~(1 << BUZZER);
    buzzerState = 0;
  }

#endif

 WATCHDOG_RESET;
}


///////////////////////////////// Functions ///////////////////////////////////
//functions
/*
* @brief initPins function
* @details set pins as input or output and set initial state
* @param none
*/

void initPins(void)
{
  //set pins as output
  DDRD |= (1 << CD4067_A) | (1 << CD4067_B) | (1 << CD4067_C) | (1 << CD4067_D);
  DDRB |= (1 << BUZZER);
  //pinMode(CD4067_A, OUTPUT);
  //pinMode(CD4067_B, OUTPUT);
  //pinMode(CD4067_C, OUTPUT);
  //pinMode(CD4067_D, OUTPUT);
  //pinMode(BUZZER, OUTPUT);

  //set pins as input
  DDRD &= ~(1 << BTN_STOP_ALARM);
  PORTD |= (1 << BTN_STOP_ALARM);
  //pinMode(BTN_STOP_ALARM, INPUT_PULLUP);

  //set initial state of pins as low
  PORTD &= ~((1 << CD4067_A) | (1 << CD4067_B) | (1 << CD4067_C) | (1 << CD4067_D));
  PORTB &= ~(1 << BUZZER);
  //digitalWrite(CD4067_A, LOW);
  //digitalWrite(CD4067_B, LOW);
  //digitalWrite(CD4067_C, LOW);
  //digitalWrite(CD4067_D, LOW);
  //digitalWrite(BUZZER, LOW);

  
}

/*
* @brief initInterrupts function
* @details init interrupts for INT0
*/
void initInterrupts(void){
  EICRA = 0b00000001; //INT0 falling edge
  EIMSK = 0b00000001; //enable INT0
  sei(); //enable global interrupts
}


/*
* @brief initADC function
* @details init ADC for A0 pin
* @param none
* @return <uint16_t> ADC value
*/
uint16_t readADC0(void){
//ADC A0 conversion settings
  // refs1 0 refs0 1 - AVcc with external capacitor at AREF pin  100nf vcc to gnd at AREF
  ADMUX &= ~(1 << REFS1) | (1 << MUX3) | (1 << MUX2) | (1 << MUX1) | (1 << MUX0);
  ADMUX |= (1 << REFS0);
//start convetion
//prescale define to 128 for 16MHz clock 16000000/128 = 125000Hz
//todo if F_CPU < 8000000 then prescale define to 64
  ADCSRA = (1<<ADEN) | (1<<ADSC) | (1<<ADPS2) | (1<<ADPS1) | (1<<ADPS0);
//wait for conversion to complete
  while(ADCSRA & (1<<ADSC));
  //clear ADIF by writing 1 to it
  ADCSRA |= (1<<ADIF);
  //read ADC value
  //uint16_t adc_value = ADC;

  return ADC;
}

/*
* @brief setLedColor function
* @details set led color
* @param const <uint8_t> &led   index led number
* @param const <uint8_t> &color
* @return none
*/
void setLedColor(const uint8_t& led, const uint8_t& color){
  switch (color)
  {
  case RED:
    setLedColor(led, 255, 0, 0);
    ledsStateBlack &= ~(1 << led);
    ledsStateGreen &= ~(1 << led);
    ledsStateRed |= (1 << led);
  break;
  case GREEN:
    setLedColor(led, 0, 255, 0);
    ledsStateBlack &= ~(1 << led);
    ledsStateRed &= ~(1 << led);
    ledsStateGreen |= (1 << led);
  break;
  case BLACK: 
    setLedColor(led, 0, 0, 0);
    ledsStateBlack |= (1 << led);
    ledsStateRed &= ~(1 << led);
    ledsStateGreen &= ~(1 << led);
  break;
  default: 
    setLedColor(led, 0, 0, 0);
    ledsStateBlack |= (1 << led);
    ledsStateRed &= ~(1 << led);
    ledsStateGreen &= ~(1 << led);
  break;
  }
}

/*
* @brief setLedColor function
* @details set led color
* @param const <uint8_t> &led   index led number
* @param const <uint8_t> &color
* @return none
*/
void setLedColor(const uint8_t& led, const uint8_t& red, const uint8_t& green, const uint8_t& blue){
  displayLed.setPixelColor(led, red, green, blue);
}

/*
* @brief setCaptorStateOk function
* @details set captor state to ok
* @param const <uint8_t> &index   index captor number
* @return none
*/
void setCaptorStateOk(const uint8_t& index){
  //DEBUG_PRINTLN(""setCaptorStateOk BLACK"");  
  setLedColor(index, BLACK);
}

/*
* @brief setCaptorStateFalse function
* @details set captor state to false
* @param const <uint8_t> &index   index captor number
* @param const <uint8_t> &color   color of led
* @param <uint16_t> &captorState  captor state
* @return none
*/
void setCaptorStateFalse(const uint8_t& index, const uint8_t& color, uint16_t& captorState){
  DEBUG_PRINTLN(F(""setCaptorStateFalse""));
  setLedColor(index, color);
  AlarmTriggered |= (1 << index);  //set captor state to true
  captorState |= (1 << index);  //set captor state to true
}

/////////////////// Buzzer Passive ///////////////////////
#if BUZZER_PASSIVE == 1
  void setBuzzerTimer(){
    TCCR2A = (1 << WGM21); // Mode CTC  Clear Timer on Compare match
    TCCR2B = (1 << CS22); // PRESCALE 64
    #define PRESCALE_TIMER2       64  //Prescaler for timer2  
    setFrequency(BUZZER_FREQ1); // calculate value for frequency
    TIMSK2 |= (1 << OCIE2A); // Enable Interrupt compare A for Timer2
    sei(); // Enable global interrupts
  }
  
  void setFrequency(const uint16_t& frequency){
    uint16_t valueOcr2A =  ( (F_CPU / PRESCALE_TIMER2 / frequency /2) - 1);
    OCR2A = valueOcr2A;
  }

#endif"
Q6HxnRnF,Liner Hash,NeutronSlayer,C,Thursday 18th of May 2023 01:54:18 AM CDT,"#include <stdio.h>

#define SIZE 10

int hash(int key)
{
    return key % SIZE;
}

void insert(int hashTable[], int key, int value)
{
    int index = hash(key);

    while (hashTable[index] != -1)
    {
        index = (index + 1) % SIZE;
    }

    hashTable[index] = value;
}

void Remove(int hashTable[], int index)
{
    if (hashTable[index] != -1)
    {
        hashTable[index] = -1;
        printf(""delete from hash table at index: %d\n"", index);
    }
    else
        printf(""no data found for hash table at index %d\n"", index);
}

void display(int hashTable[])
{
    printf(""Hash Table:\n"");

    for (int i = 0; i < SIZE; i++)
    {
        if (hashTable[i] != -1)
        {
            printf(""%d: %d\n"", i, hashTable[i]);
        }
    }
}

void Search(int hashTable[], int value)
{
    int hKey = hash(value), index;
    for (int i = 0; i < SIZE; i++)
    {
        index = (hKey + i) % SIZE;
        if (hashTable[index] == value)
        {
            printf(""your desiered value found at %d\n"", index);
            break;
        }
        if (i == SIZE)
        {
            printf(""Your value in not in the hash table"");
        }
    }
}

int main()
{
    int hashTable[SIZE];

    for (int i = 0; i < SIZE; i++)
    {
        hashTable[i] = -1;
    }

    int choice, key, value;
    bool run = true;

    while (run)
    {
        printf(""\nLinear Probe Hash Table Operations\n"");
        printf(""1. Insert\n"");
        printf(""2. Display\n"");
        printf(""3. Delete\n"");
        printf(""4. Search\n"");
        printf(""9. Exit\n"");
        printf(""Enter your choice: "");
        scanf(""%d"", &choice);

        switch (choice)
        {
        case 1:
            printf(""Enter key and value to insert: "");
            scanf(""%d %d"", &key, &value);
            insert(hashTable, key, value);
            break;

        case 2:
            display(hashTable);
            break;

        case 3:
            int index;
            printf(""Enter the hash table index you want to remove: "");
            scanf(""%d"", &index);
            Remove(hashTable, index);
            display(hashTable);
            break;

        case 4:
            int searchItem;
            printf(""Enter the hash table index you want to search: "");
            scanf(""%d"", &searchItem);
            Search(hashTable, searchItem);
            break;

        case 9:
            printf(""Exiting program.\n"");
            run = false;
            break;

        default:
            printf(""Invalid choice. Please try again.\n"");
        }
    }

    return 0;
}"
3Qp9inZ7,Untitled,s-sols,CSS,Thursday 18th of May 2023 01:53:21 AM CDT,".thumbnail-container.animate-lazy>img {
    opacity: 1!important;
}"
7NRaaz48,prim Skeletone code,Kaseil,C++,Thursday 18th of May 2023 01:43:54 AM CDT,"#include <iostream>
#include <algorithm>
#include <vector>
#include <numeric>
#define DUMMY 0
#define INF 1e9 // use this to represent the infinity

using namespace std;

class MinHeap{
private:
    struct Index{
        int cost; int i;
        Index(int cost, int i){ this->cost = cost; this->i = i; }
    };

    vector<int> array;     // array:   heap_index -> node
    vector<Index> indices; // indices: node -> (cost, heap index)

    int PARENT(int i){ return i / 2; }
    int LEFT(int i){ return 2 * i; }
    int RIGHT(int i){ return 2 * i + 1; }

    // i: heap_index, array[i] is node, and its cost is key
    int key(int i){ return indices[array[i]].cost; }

    void swap(int i , int j){ // i, j: heap_index
        std::swap(array[i], array[j]);
        indices[array[i]] = Index(key(i), i);
        indices[array[j]] = Index(key(j), j);
    }
public:
    MinHeap(int n){
        array.push_back(DUMMY);
        for(int i = 0; i <= n; i++)
            indices.push_back(Index(DUMMY, DUMMY));
    }

    // return true if this queue is empty
    bool empty(){ return array.size() - 1 == 0; }

    // return true if node is in this queue
    bool has(int node){ return indices[node].i != DUMMY; }

    void insert(int cost, int node){
        array.push_back(node);
        int i = array.size() - 1; // index of node in the heap array
        indices[node] = Index(cost, i);
        //up-heap
        while(i != 1 && key(i) < key(PARENT(i))){
            this->swap(i, PARENT(i));
            i = PARENT(i);
        }
    }

    // return node having the smallest cost (or distance)
    int remove(){
        int u = array[1];
        indices[u] = Index(DUMMY, DUMMY);

        array[1] = array[array.size() - 1];
        indices[array[1]] = Index(key(1), 1);

        array.pop_back(); // size - 1

        int i = 1;
        int n = array.size() - 1;

        while(i <= n){ // down-heap
            int smallest = i;
            if(LEFT(i) <= n && key(LEFT(i)) < key(smallest))  smallest = LEFT(i);
            if(RIGHT(i) <= n && key(RIGHT(i)) < key(smallest)) smallest = RIGHT(i);

            if(smallest != i){
                this->swap(i, smallest);
                i = smallest;
            }else break;
        }

        return u;
    }

    void decrease_key(int node, int new_cost){
        int i = indices[node].i;
        if(key(i) > new_cost){
            indices[node] = Index(new_cost, i);
            // up-heap
            while(i > 1 && key(i) < key(PARENT(i))){
                this->swap(i, PARENT(i));
                i = PARENT(i);
            }
        }
    }
};

class Graph{
private:
    struct Node{
        int v; int w;
        Node(int v, int w): v(v), w(w) { }
        bool operator < (const Node& node) const { return this->v < node.v; }
    };

    vector<vector<Node>> adj_list; //adjacency list used for Prim's algorithm
    int n;                         //number of edges
public:
    Graph(int n): n(n){
        adj_list = vector<vector<Node>>(n+1, vector<Node>());
    }

    void insert_edge(int u, int v, int w){
        adj_list[u].push_back(Node(v, w));
        adj_list[v].push_back(Node(u, w));
    }

    void sort_neighbors(){
        for(auto& neighbors : adj_list)
            std::sort(neighbors.begin(), neighbors.end());
    }

    vector<int> prim(int s){ // s is the source node
        vector<int> prim_sequence(1, DUMMY); // store the weight of an edge
        MinHeap Q(n);

        // fill in here
        //  - the set R of remaining nodes can be replaced with the min heap Q
        //  - you can sequentially iterate out-neighbors of node u as follows:
        //     - for(Node v : adj_list[u]){ ... }
        //  - push back the weight of an edge selected by Prim into prim_sequence
        //    (use prim_sequence.push_back(int weight))

        return prim_sequence;
    }
};

int main() {
    ios::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);

    int n; // # of nodes
    int m; // # of edges
    int i; // index of a sequence to be printed
    cin >> n >> m >> i;

    Graph graph(n);

    for(int j = 0; j < m; j++){
        int s, t, w;
        cin >> s >> t >> w;
        graph.insert_edge(s, t, w);
    }

    // to guarantee that neighbors of a node are iterated in the increasing order
    graph.sort_neighbors();

    vector<int> prim_sequence = graph.prim(1);

    // sum all entries of prim_sequence
    long long cost = std::accumulate(prim_sequence.begin(), prim_sequence.end(), 0L);

    cout << cost << endl;
    cout << prim_sequence[i] << endl;

    return 0;
}
"
LViXW5at,optional_31,Seredenko-V,C++,Thursday 18th of May 2023 01:40:58 AM CDT,"#include ""optional.h""
#include <iostream>
#include <cassert>

using namespace std;

struct C {
    C() noexcept {
        ++def_ctor;
    }
    C(const C& /*other*/) noexcept {
        ++copy_ctor;
    }
    C(C&& /*other*/) noexcept {
        ++move_ctor;
    }
    C& operator=(const C& other) noexcept {
        if (this != &other) {
            ++copy_assign;
        }
        return *this;
    }
    C& operator=(C&& /*other*/) noexcept {
        ++move_assign;
        return *this;
    }
    ~C() {
        ++dtor;
    }

    static size_t InstanceCount() {
        return def_ctor + copy_ctor + move_ctor - dtor;
    }

    static void Reset() {
        def_ctor = 0;
        copy_ctor = 0;
        move_ctor = 0;
        copy_assign = 0;
        move_assign = 0;
        dtor = 0;
    }

    inline static size_t def_ctor = 0;
    inline static size_t copy_ctor = 0;
    inline static size_t move_ctor = 0;
    inline static size_t copy_assign = 0;
    inline static size_t move_assign = 0;
    inline static size_t dtor = 0;
};

void TestInitialization() {
    C::Reset();
    {
        Optional<C> o;
        assert(!o.HasValue());
        assert(C::InstanceCount() == 0);
    }
    assert(C::InstanceCount() == 0);

    C::Reset();
    {
        C c;
        Optional<C> o(c);
        assert(o.HasValue());
        assert(C::def_ctor == 1 && C::copy_ctor == 1);
        assert(C::InstanceCount() == 2);
    }
    assert(C::InstanceCount() == 0);

    C::Reset();
    {
        C c;
        Optional<C> o(std::move(c));
        assert(o.HasValue());
        assert(C::def_ctor == 1 && C::move_ctor == 1 && C::copy_ctor == 0 && C::copy_assign == 0
            && C::move_assign == 0);
        assert(C::InstanceCount() == 2);
    }
    assert(C::InstanceCount() == 0);

    C::Reset();
    {
        C c;
        Optional<C> o1(c);
        const Optional<C> o2(o1);
        assert(o1.HasValue());
        assert(o2.HasValue());
        assert(C::def_ctor == 1 && C::move_ctor == 0 && C::copy_ctor == 2 && C::copy_assign == 0
            && C::move_assign == 0);
        assert(C::InstanceCount() == 3);
    }
    assert(C::InstanceCount() == 0);

    C::Reset();
    {
        C c;
        Optional<C> o1(c);
        const Optional<C> o2(std::move(o1));
        assert(C::def_ctor == 1 && C::copy_ctor == 1 && C::move_ctor == 1 && C::copy_assign == 0
            && C::move_assign == 0);
        assert(C::InstanceCount() == 3);
    }
    assert(C::InstanceCount() == 0);
}

void TestDestructor() {
    { // empty move
        Optional<C> c;
        C::Reset();
        {
            Optional<C> o(std::move(c));
            assert(C::def_ctor == 0u);
            assert(C::copy_ctor == 0u);
            assert(C::move_ctor == 0u);
            assert(C::copy_assign == 0u);
            assert(C::move_assign == 0u);
            assert(C::dtor == 0u);
        }
        assert(C::def_ctor == 0u);
        assert(C::copy_ctor == 0u);
        assert(C::move_ctor == 0u);
        assert(C::copy_assign == 0u);
        assert(C::move_assign == 0u);
        assert(C::dtor == 0u);
    } { // non-empty move
        Optional<C> c(C{});
        C::Reset();
        {
            Optional<C> o(std::move(c));
            assert(C::def_ctor == 0u);
            assert(C::copy_ctor == 0u);
            assert(C::move_ctor == 1u);
            assert(C::copy_assign == 0u);
            assert(C::move_assign == 0u);
            assert(C::dtor == 0u);
        }
        assert(C::def_ctor == 0u);
        assert(C::copy_ctor == 0u);
        assert(C::move_ctor == 1u);
        assert(C::copy_assign == 0u);
        assert(C::move_assign == 0u);
        assert(C::dtor == 1u);
    }
}

int main() {
    TestDestructor();
    return 0;
}"
xwM0hQfs,Untitled,wclovers,PHP,Thursday 18th of May 2023 01:38:54 AM CDT,"add_filter( 'wcfm_form_custom_validation', function( $form_data, $screen ) {
    if ( 'product_manage' == $screen ) {
        if ( isset( $form_data['attributes'] ) && is_array( $form_data['attributes'] ) && !empty( $form_data['attributes'] ) ) {
            foreach( $form_data['attributes'] as $attribute ) {
                if ( isset( $attribute['is_active'] ) && 'enable' == $attribute['is_active'] ) {
                    if ( !isset( $attribute['value'] ) || empty( $attribute['value'] ) ) {
                        return [
                            'has_error' => true,
                            'message'   => 'Attributes are required'
                        ];
                    }
                }
            }
        }
    }
    return $form_data;
}, 10, 2 );"
6gXMcPwY,邀您一起看：惊心食人族3-在线电影,xiaomianao666,JavaScript,Thursday 18th of May 2023 01:23:10 AM CDT,海阔视界规则分享，当前分享的是：二级页面详情￥page_detail￥惊心食人族3-在线电影@@eyJkYXRhIjoie1wiYXNzb2NpYXRlZE1vZGVsc01hcEZvckpvaW5UYWJsZVwiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhGS1wiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhvdXRGS1wiOnt9LFwiZmllbGRzVG9TZXRUb0RlZmF1bHRcIjpbXSxcImdtdE1vZGlmaWVkXCI6MCxcImlkXCI6MCxcImxhc3RfY2hhcHRlcl9ydWxlXCI6XCJcIixcImxpc3RUb0NsZWFyQXNzb2NpYXRlZEZLXCI6W10sXCJsaXN0VG9DbGVhclNlbGZGS1wiOltdLFwicGFnZUxpc3RcIjpbe1wiY29sX3R5cGVcIjpcIm1vdmllXzNcIixcIm5hbWVcIjpcIuS6keWPo+S7pOWvvOWFpVwiLFwicGF0aFwiOlwiY2xvdWRpbXBvcnRcIixcInJ1bGVcIjpcImZ1bmN0aW9uIGNsb3VkaW1wb3J0KCkge1xcbnJlcXVpcmUoJ2h0dHBzOi8vcmF3LmlxaXEuaW8vc3JjNDg1OTc5NjIvaGsvbWFzdGVyL3JlcXVpcmUuanMnKTtcXG5yZXF1aXJlKHJlbHlmaWxlLm1hdGNoKC9odHRwKHMpPzpcXFxcL1xcXFwvLipcXFxcLy8pWzBdICsgJ1NyY0p5U2V0LmpzJyk7XFxucmV0dXJuIEpZaW1wb3J0KGlucHV0KTtcXG59XFxuJC5leHBvcnRzID0gY2xvdWRpbXBvcnQoKTtcIn1dLFwicGFyYW1zXCI6XCJ7XFxcImNsc1xcXCI6XFxcInh1bm1pbGlzdFxcXCIsXFxcImRhdGFcXFwiOntcXFwiZHRBY3RvclxcXCI6XFxcIi8vc3Bhbltjb250YWlucyh0ZXh0KCksICfkuLvmvJQnKV0vZm9sbG93aW5nLXNpYmxpbmc6OmEvdGV4dCgpXFxcIixcXFwiZHRBcmVhXFxcIjpcXFwiLy9zcGFuW2NvbnRhaW5zKHRleHQoKSwgJ+WcsOWMuicpXS9mb2xsb3dpbmctc2libGluZzo6YS90ZXh0KClcXFwiLFxcXCJkdENhdGVcXFwiOlxcXCIvL3NwYW5bY29udGFpbnModGV4dCgpLCAn5YiG57G7JyldL2ZvbGxvd2luZy1zaWJsaW5nOjphL3RleHQoKVxcXCIsXFxcImR0RGVzY1xcXCI6XFxcIi8vc3BhbltAY2xhc3M9J3NrZXRjaCBjb250ZW50J10vdGV4dCgpXFxcIixcXFwiZHREaXJlY3RvclxcXCI6XFxcIi8vc3Bhbltjb250YWlucyh0ZXh0KCksICflr7zmvJQnKV0vZm9sbG93aW5nLXNpYmxpbmc6OmEvdGV4dCgpXFxcIixcXFwiZHRGcm9tTmFtZVxcXCI6XFxcIi90ZXh0KClcXFwiLFxcXCJkdEZyb21Ob2RlXFxcIjpcXFwiLy9oM1tjb250YWlucyh0ZXh0KCksJ+aSreaUvuWcsOWdgCcpXS9mb2xsb3dpbmctc2libGluZzo6dWwvL2FcXFwiLFxcXCJkdEltZ1xcXCI6XFxcIi8vZGl2W0BjbGFzcz0nbXl1aS1jb250ZW50X190aHVtYiddL2EvaW1nL0BkYXRhLW9yaWdpbmFsXFxcIixcXFwiZHRVcmxcXFwiOlxcXCJodHRwczovL3d3dy56YWl4aWFuZGlhbnlpbmc4LmNvbS92b2RkZXRhaWwve3ZpZH0uaHRtbFxcXCIsXFxcImR0VXJsSWRcXFwiOlxcXCJAaHJlZlxcXCIsXFxcImR0VXJsSWRSXFxcIjpcXFwiXFxcIixcXFwiZHRVcmxOYW1lXFxcIjpcXFwiL3RleHQoKVxcXCIsXFxcImR0VXJsTm9kZVxcXCI6XFxcIi8vZGl2W2NvbnRhaW5zKEBpZCwncGxheWxpc3QnKV1cXFwiLFxcXCJkdFVybFN1Yk5vZGVcXFwiOlxcXCIvL2FcXFwiLFxcXCJkdFllYXJcXFwiOlxcXCIvL3NwYW5bY29udGFpbnModGV4dCgpLCAn5bm05Lu9JyldL2ZvbGxvd2luZy1zaWJsaW5nOjphL3RleHQoKVxcXCIsXFxcImZpbHRlclxcXCI6XFxcIlxcXCIsXFxcInBsYXlVcmxcXFwiOlxcXCJodHRwczovL3d3dy56YWl4aWFuZGlhbnlpbmc4LmNvbXtwbGF5VXJsfVxcXCIsXFxcInNjVm9kSWRcXFwiOlxcXCIvQGhyZWZcXFwiLFxcXCJzY1ZvZEltZ1xcXCI6XFxcIi9AZGF0YS1vcmlnaW5hbFxcXCIsXFxcInNjVm9kTWFya1xcXCI6XFxcIi9zcGFuW0BjbGFzcz0ncGljLXRleHQgdGV4dC1yaWdodCddL3RleHQoKVxcXCIsXFxcInNjVm9kTmFtZVxcXCI6XFxcIi9AdGl0bGVcXFwiLFxcXCJzY1ZvZE5vZGVcXFwiOlxcXCIvL3VsW0BpZD0nc2VhcmNoTGlzdCddLy9kaXZbQGNsYXNzPSd0aHVtYiddL2FcXFwiLFxcXCJzZWFyY2hVcmxcXFwiOlxcXCJodHRwczovL3d3dy56YWl4aWFuZGlhbnlpbmc4LmNvbS92b2RzZWFyY2gvLS0tLS0tLS0tLS0tLS5odG1sP3dkPXt3ZH0mc3VibWl0PVxcXCJ9LFxcXCJpZFxcXCI6XFxcInh1bWktY3NwX3hwYXRoX3phaXhpYW5kaWFueWluZzhcXFwiLFxcXCJuYW1lXFxcIjpcXFwi5oOK5b+D6aOf5Lq65pePM1xcXCIsXFxcInBpY1xcXCI6XFxcImh0dHBzOi8vaW1nLmZmenlwaWMuY29tL3VwbG9hZC92b2QvMjAyMzAyMjQtMS9kZjljYTYyMmM5YTQzYzhkZjM1ODU3MjU5NWY3ZDY1NS5qcGdAUmVmZXJlcj1cXFwiLFxcXCJ0aXRsZVxcXCI6XFxcIuaDiuW/g+mjn+S6uuaXjzMt5Zyo57q/55S15b2xXFxcIn1cIixcInNhdmVkXCI6ZmFsc2UsXCJ0aXRsZVwiOlwi6IGa5b2x4oiaXCIsXCJ2ZXJzaW9uXCI6MCxcInVybFwiOlwiaGlrZXI6Ly9lbXB0eSMjaHR0cHM6Ly93d3cuemFpeGlhbmRpYW55aW5nOC5jb20vdm9kZGV0YWlsLzIxNTcwMC5odG1sI2ltbWVyc2l2ZVRoZW1lIyNhdXRvQ2FjaGUjO2dldDtVVEYtODt7VXNlci1BZ2VudEBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4w77yb77ybIFdpbjY077yb77ybIHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzEwNS4wLjAuMCBTYWZhcmkvNTM3LjM2fVwiLFwiY29sX3R5cGVcIjpcIm1vdmllXzNcIixcImZpbmRfcnVsZVwiOlwianM6KFxcbih0eXBlLCB1YSkgPT4ge1xcbiAgICByZXF1aXJlKGNvbmZpZy7kvp3otZYubWF0Y2goL2h0dHAocyk/OlxcXFwvXFxcXC8uKlxcXFwvLylbMF0gKyBcXFwiU3JjSnlYdW5taS5qc1xcXCIpO1xcbiAgICB4dW5taWVyamkodHlwZSwgdWEpO1xcbn1cXG4pKFxcXCJ4cGF0aFxcXCIsXFxcIk1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMDUuMC4wLjAgU2FmYXJpLzUzNy4zNlxcXCIpXCIsXCJncm91cFwiOlwi6KeG6aKRXCIsXCJ1YVwiOlwicGNcIixcInByZVJ1bGVcIjpcImlmICghY29uZmlnLuS+nei1likge1xcbiAgICAvL+i/nOeoi+S+nei1lue0ouW8leaWh+S7tuS7o+eQhuWcsOWdgOWIl+ihqFxcbiAgICBsZXQgcmVxdWlyZWxpc3QgPSBbJ2h0dHBzOi8vcmF3LmlxaXEuaW8vJywnaHR0cHM6Ly9naHByb3h5Lm5ldC9odHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vJywnaHR0cHM6Ly9naHByb3h5LmNvbS9odHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vJywnaHR0cHM6Ly9jZG4uc3RhdGljYWx5LmNvbS9naC8nLCdodHRwczovL2dpdGh1Yi5qZXZvbnMudmlwL2h0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS8nXVxcbiAgICBmb3IobGV0IGk9MDtpPHJlcXVpcmVsaXN0Lmxlbmd0aDtpKyspe1xcbiAgICAgICAgdHJ5ey8v6L+c56iL5L6d6LWW57Si5byVXFxuICAgICAgICAgICAgcmVxdWlyZShyZXF1aXJlbGlzdFtpXSArICdzcmM0ODU5Nzk2Mi9oay9tYXN0ZXIvcmVxdWlyZS5qcycpO1xcbiAgICAgICAgICAgIGlmKHJlbHlmaWxlKXtcXG4gICAgICAgICAgICAgICAgYnJlYWs7XFxuICAgICAgICAgICAgfVxcbiAgICAgICAgfWNhdGNoKGUpe1xcbiAgICAgICAgICAgIGxvZyhlLm1lc3NhZ2UpO1xcbiAgICAgICAgfVxcbiAgICB9XFxuICAgIGluaXRDb25maWcoe1xcbiAgICAgICAg5L6d6LWWOiByZWx5ZmlsZVxcbiAgICB9KTtcXG59XFxuLy9ieS7luIXiiJpg5Lq65omNIOiBmuW9seaooeadv++8gVwiLFwicGFnZXNcIjpcIlt7XFxcImNvbF90eXBlXFxcIjpcXFwibW92aWVfM1xcXCIsXFxcIm5hbWVcXFwiOlxcXCLkupHlj6Pku6Tlr7zlhaVcXFwiLFxcXCJwYXRoXFxcIjpcXFwiY2xvdWRpbXBvcnRcXFwiLFxcXCJydWxlXFxcIjpcXFwiZnVuY3Rpb24gY2xvdWRpbXBvcnQoKSB7XFxcXG5yZXF1aXJlKCdodHRwczovL3Jhdy5pcWlxLmlvL3NyYzQ4NTk3OTYyL2hrL21hc3Rlci9yZXF1aXJlLmpzJyk7XFxcXG5yZXF1aXJlKHJlbHlmaWxlLm1hdGNoKC9odHRwKHMpPzpcXFxcXFxcXC9cXFxcXFxcXC8uKlxcXFxcXFxcLy8pWzBdICsgJ1NyY0p5U2V0LmpzJyk7XFxcXG5yZXR1cm4gSllpbXBvcnQoaW5wdXQpO1xcXFxufVxcXFxuJC5leHBvcnRzID0gY2xvdWRpbXBvcnQoKTtcXFwifV1cIn0iLCJwaWNVcmwiOiJodHRwczovL2ltZy5mZnp5cGljLmNvbS91cGxvYWQvdm9kLzIwMjMwMjI0LTEvZGY5Y2E2MjJjOWE0M2M4ZGYzNTg1NzI1OTVmN2Q2NTUuanBnQFJlZmVyZXI9IiwidGl0bGUiOiLmg4rlv4Ppo5/kurrml48zLeWcqOe6v+eUteW9sSJ9
P7Z4fRcu,Directory_Background.reg,pbtmp,REG,Thursday 18th of May 2023 01:19:15 AM CDT,"Windows Registry Editor Version 5.00
;
[HKEY_CLASSES_ROOT\Directory\Background\Shell\0_Menu]
""MUIVerb""=""Apps""
""Position""=""Middle""
""icon""=""shell32.dll,-271""
""SubCommands""=""""

[HKEY_CLASSES_ROOT\Directory\Background\Shell\0_Menu\shell\01]
""MUIVerb""=""Calculator""
""icon""=""calc.exe""
[HKEY_CLASSES_ROOT\Directory\Background\Shell\0_Menu\shell\01\command]
@=""calc.exe""

[HKEY_CLASSES_ROOT\Directory\Background\Shell\0_Menu\shell\02]
""MUIVerb""=""Notepad""
""icon""=""%SystemRoot%\\System32\\notepad.exe,0""
[HKEY_CLASSES_ROOT\Directory\Background\Shell\0_Menu\shell\02\command]
@=""notepad.exe""

[HKEY_CLASSES_ROOT\Directory\Background\Shell\0_Menu\shell\10]
""MUIVerb""=""VMware Workstation""
""icon""=""C:\\Program Files (x86)\\VMware\\VMware Workstation\\vmware.exe""
[HKEY_CLASSES_ROOT\Directory\Background\Shell\0_Menu\shell\10\command]
@=""\""C:\\Program Files (x86)\\VMware\\VMware Workstation\\vmware.exe\"" --locale zh_CN""

;
[HKEY_CLASSES_ROOT\Directory\Background\Shell\1_Menu]
""MUIVerb""=""System Tools""
""Position""=""Middle""
""icon""=""shell32.dll,-22""
""SubCommands""=""""

[HKEY_CLASSES_ROOT\Directory\Background\Shell\1_Menu\shell\01]
""MUIVerb""=""Control Panel""
""icon""=""control.exe""
[HKEY_CLASSES_ROOT\Directory\Background\Shell\1_Menu\shell\01\command]
@=""control.exe""

[HKEY_CLASSES_ROOT\Directory\Background\Shell\1_Menu\shell\02]
""MUIVerb""=""Registry Editor""
""icon""=""regedit.exe""
[HKEY_CLASSES_ROOT\Directory\Background\Shell\1_Menu\shell\02\command]
@=""regedit.exe""

[HKEY_CLASSES_ROOT\Directory\Background\Shell\1_Menu\shell\03]
""MUIVerb""=""Run""
""icon""=""shell32.dll,-25""
[HKEY_CLASSES_ROOT\Directory\Background\Shell\1_Menu\shell\03\command]
@=""explorer shell:::{2559A1F3-21D7-11D4-BDAF-00C04F60B9F0}""

[HKEY_CLASSES_ROOT\Directory\Background\Shell\1_Menu\shell\04]
""MUIVerb""=""Task Manager""
""icon""=""taskmgr.exe""
[HKEY_CLASSES_ROOT\Directory\Background\Shell\1_Menu\shell\04\command]
@=""taskmgr.exe""

[HKEY_CLASSES_ROOT\Directory\Background\Shell\1_Menu\shell\10]
""MUIVerb""=""Fonts""
""icon""=""%SystemRoot%\\System32\\fontext.dll,0""
[HKEY_CLASSES_ROOT\Directory\Background\Shell\1_Menu\shell\10\command]
@=""control fonts""

[HKEY_CLASSES_ROOT\Directory\Background\Shell\1_Menu\shell\11]
""MUIVerb""=""Programs and Features""
""icon""=""shell32.dll,-271""
[HKEY_CLASSES_ROOT\Directory\Background\Shell\1_Menu\shell\11\command]
@=""control /name Microsoft.ProgramsAndFeatures""

[HKEY_CLASSES_ROOT\Directory\Background\Shell\1_Menu\shell\12]
""MUIVerb""=""Region and Language""
""icon""=""%SystemRoot%\\System32\\intl.cpl,-200""
[HKEY_CLASSES_ROOT\Directory\Background\Shell\1_Menu\shell\12\command]
@=""explorer shell:::{62D8ED13-C9D0-4CE8-A914-47DD628FB1B0}""

[HKEY_CLASSES_ROOT\Directory\Background\Shell\1_Menu\shell\13]
""MUIVerb""=""System""
""icon""=""imageres.dll,-149""
[HKEY_CLASSES_ROOT\Directory\Background\Shell\1_Menu\shell\13\command]
@=""explorer shell:::{BB06C0E4-D293-4f75-8A90-CB05B6477EEE}""

[HKEY_CLASSES_ROOT\Directory\Background\Shell\1_Menu\shell\14]
""MUIVerb""=""Applications""
""icon""=""explorer.exe""
[HKEY_CLASSES_ROOT\Directory\Background\Shell\1_Menu\shell\14\command]
@=""explorer shell:::{4234d49b-0245-4df3-b780-3893943456e1}""

[HKEY_CLASSES_ROOT\Directory\Background\Shell\1_Menu\shell\15]
""MUIVerb""=""Language Settings 1803""
""icon""=""%SystemRoot%\\System32\\UserLanguagesCpl.dll""
[HKEY_CLASSES_ROOT\Directory\Background\Shell\1_Menu\shell\15\command]
@=""explorer shell:::{BF782CC9-5A52-4A17-806C-2A894FFEEAC5}""

;
[HKEY_CLASSES_ROOT\Directory\Background\Shell\2_Menu]
""MUIVerb""=""Settings""
""Position""=""Middle""
""icon""=""SystemSettingsBroker.exe""
""SubCommands""=""""

[HKEY_CLASSES_ROOT\Directory\Background\Shell\2_Menu\shell\07]
""MUIVerb""=""Time && language""
""icon""=""%SystemRoot%\\System32\\ieframe.dll,-31061""
[HKEY_CLASSES_ROOT\Directory\Background\Shell\2_Menu\shell\07\command]
@=""explorer ms-settings:dateandtime"""
5dcaM2wP,# tk_rgb_oops.py,here2share,Python,Thursday 18th of May 2023 01:15:45 AM CDT,"# tk_rgb_oops.py

import tkinter as tk
from PIL import Image, ImageTk
import math
import random

ww = 300
hh = 300

root = tk.Tk()
root.geometry(""%dx%d+0+0""%(ww,hh))
canvas = tk.Canvas(root, bg='white', width=ww, height=hh)
canvas.pack()

def xy2deg(x, y):
    return math.degrees(math.atan2(x - cx, y - cy))

rgb = [i for i in range(0, 256, 2)]
COLORS = [(r,g,b) for r in rgb for g in rgb for b in rgb]
cx, cy = ww//2, hh//2

dist_dict = {}
buffer = []
for i in range(ww*hh):
	x = i % ww
	y = i // ww
	dx = cx - x
	dy = cy - y
	
	distance = dx**2 + dy**2
	try:
		dist_dict[distance] += 0.1
	except:
		dist_dict[distance] = distance
	buffer.append(([xy2deg(x, y), dist_dict[distance]], i))

buffer.sort()
buffer = [x[1] for x in buffer]

# test
img = Image.new('RGB', (ww, hh), ""white"")
Lc = len(COLORS)
CvSz = ww*hh

for i in range(Lc-CvSz):
	pixels = COLORS[i:i+CvSz]
	pixels = [pixels[j] for j in buffer]
	img.putdata(pixels)
	tkimg = ImageTk.PhotoImage(img)
	canvas.create_image((cx, cy), image=tkimg)
	canvas.update()"
NZisAR6n,Multiply,alansam,C,Thursday 18th of May 2023 12:21:03 AM CDT,"
#include <stdio.h>
#include <stdlib.h>
#include <time.h>

int main(void) {
  /* system(clear); */
  putchar('\n');

  srand(time(0));
  
  int a = (rand() % 30) + 1;
  int b = (rand() % 40) + 1;
  int c = 0;
  int sum = 0;
  int ct = 0;

  sum = a * b;
  printf(""Multiplication programme.\n"");

  do {
    printf(""%d x %d = "", a, b);
    scanf(""%d"", &c);
    putchar('\n');

    if (c == sum) {
      printf(""correct\n"");
      printf(""::: %d x %d = %d\n"", a, b, sum);
      printf(""=========\n"");
    }
    else if (ct++ == 2) {
      printf(""the correct answer was: %d x %d = %d\n"", a, b, sum);
      break;
    }
    else {
      printf(""%d is incorrect.\n"", c);
      printf(""=========\n"");
      printf(""try again\n"");
    }
  } while (c != sum);

  return 0;
}
"
BAd0CSM4,sipcalc.tcl,makmukiper,TCL,Wednesday 17th of May 2023 11:47:09 PM CDT,"set cmds "". ! ` -""
foreach cmd $cmds { bind pub - ${cmd}sipcalc sipcalc }
proc sipcalc {n u h c t} {
 set t [stripcodes bcruag $t]
 set ip [lindex $t 0]
 catch {exec sipcalc $ip} ipres
 putnow ""PRIVMSG $c :Result for $t"" 
 foreach line [split $ipres ""\n""] {
  if {[string match -nocase ""*ipv*"" $line] || [string match ""*CIDR*"" $line] || [string match ""*decimal*"" $line] || [string match ""*hex*"" $line] || [string match ""*bits*"" $line] || [string match ""*masked*"" $line] || [string match ""*type*"" $line] || [string match ""*refix*"" $line] || [string match ""-"" $line] || [string match ""*wildcard*"" $line] || [string match ""*roadcast*"" $line]} {continue}
  regsub -all ""	"" $line "" "" line
  regsub -all "" - "" $line "" » "" line
  putnow ""PRIVMSG $c :$line""
 }
 return 0
}
"
RUnsmD8b,Kruskul skeletone code,Kaseil,C++,Wednesday 17th of May 2023 10:06:48 PM CDT,"#include <iostream>
#include <algorithm>
#include <vector>
#include <numeric>
#define DUMMY 0
#define INF 1e9 // use this to represent the infinity

using namespace std;

// put your Disjoint Set here

class Graph{
private:
    struct Edge{
        int u; int v; int w;
        Edge(int u, int v, int w): u(u), v(v), w(w){ }
        bool operator < (const Edge& edge) const { return this->w < edge.w; }
    };

    vector<Edge> edges;            //edge list used for Kruskal's algorithm
    int n;                         //number of edges
public:
    Graph(int n): n(n){
        edges = vector<Edge>();
    }

    void insert_edge(int u, int v, int w){
        edges.push_back(Edge(u, v, w));
    }

    vector<int> kruskal(){
        vector<int> kruskal_sequence(1, DUMMY); // store the weight of an edge

        // fill in here
        //  - you can use std::sort() to sort edges
        //  - you can sequentially iterate each edge as follows:
        //     - for(Edge edge : edges)
        //  - push back the weight of an edge selected by Kruskal into kruskal_sequence
        //    (use kruskal_sequence.push_back(int weight))

        return kruskal_sequence;
    }
};

int main() {
    ios::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);

    int n; // # of nodes
    int m; // # of edges
    int i; // index of a sequence to be printed
    cin >> n >> m >> i;

    Graph graph(n);

    for(int j = 0; j < m; j++){
        int s, t, w;
        cin >> s >> t >> w;
        graph.insert_edge(s, t, w);
    }

    vector<int> kruskal_sequence = graph.kruskal();

    // sum all entries of kruskal_sequence
    long long cost = std::accumulate(kruskal_sequence.begin(), kruskal_sequence.end(), 0L);

    cout << cost << endl;
    cout << kruskal_sequence[i] << endl;

    return 0;
}"
3z1Ex61N,Counter dengan Javascript - No JS included,rezamalik15,HTML 5,Wednesday 17th of May 2023 09:25:32 PM CDT,"<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Counter</title>
    <style>

        .container {
            margin-left: auto;
            margin-right: auto;
            width: 200px;
            text-align: center;
        }

        button{
            width: 150px;
            margin-bottom: 3px;
            border-radius: 3px;
            color: white;
            margin:0;
        }

        .blue {
            background-color: blue;
        }

        .red {
            background-color: red;
        }

        #number {
            font-size: 100px;
            width:200px;
            text-align: center;
            margin:auto;
        }


    </style>
</head>
<body>
    <div class=""container"">
        
        <p id=""number""></p>

        <button class=""button blue"" onclick= count()>COUNT</button>
        <br>
        <button class=""button red"" onclick= reset()>RESET</button>
    </div>    

    <script>
       // masukkan script javascript di sini
    </script>
</body>
</html>"
JMNmQPD5,Untitled,35657,C++,Wednesday 17th of May 2023 09:24:09 PM CDT,"#define _CRT_SECURE_NO_WARNINGS
 
#include <iostream>
#include <clocale>
#include <string.h>
using namespace std;
 
struct film {                  
    char film_name[100]{};
    char director[30]{};
    char genre[10]{};
    int rating = 0;
    
};
 
struct video_store {  
    film store[100]{}; 
    int films_number = 0;
    int max_film_number = 100;
};
 

//вы собираетесь передавать в функцию строки а передаете символы (вот так обозначается строка const char[] director, а вот так символ: const char director) 
void AddFilm (video_store & my_store, const char film_name, const char director, const char genre, const int rating){ 
    if (my_store.films_number == 100) {
        cout << ""Фильм не может быть добавлен"" << endl;
        return;
    }
    strcpy(my_store.store[my_store.films_number].film_name, film_name);
    strcpy(my_store.store[my_store.films_number].director, director);
    strcpy(my_store.store[my_store.films_number].genre, genre);
    strcpy(my_store.store[my_store.films_number].rating, rating); // rating это int, для него не нужна функция strcpy
    my_store.films_number++;
}
 
void ShowAllFilms(video_store& my_store) {
    cout << ""Все фильмы магазина"" << endl;
    for (int i = 0; i < my_store.films_number; i++) {
        cout << my_store.store[i].film_name << my_store.store[i].director << my_store.store[i].genre << my_store.store[i].rating << endl;
    }
    cout << endl;
}
 
void DelFilm(video_store& my_store, const char film_name) { // то же что и в строке 24, вместо строки передаете отдельный char
    char name_u[100]; 
    cout << ""Введите название фильма для удаления"" << endl;
    cin >> name_u; // если вы передали в функцию вторым параметром название фильма для удаления, то зачем вы здесь его запрашиваете? (либо запрашиваем, либо передаем параметром функции)
    for (int i = 0; i < my_store.films_number; i++) {
        if (!strcpy(my_store.store[i].film_name, name_u)) {
            delete my_store.store[i];
            for (int j = i; j < my_store.films_number-1; j++) {
                my_store.store[j] = my_store.store[j + 1];
            }
            my_store.films_number - 1 = nullptr;
            my_store.films_number--;
        }
 
    }
}
 
int main() {
    setlocale(LC_ALL, ""Russian"");
    film film_arhiv[5]; // для чего вы создаете массив из пяти структур film
	video_store my_store[100]; // и здесь зачем создавать массив магазинов если нам нужен один (уберите [100] чтобы это был отдельный store?
    
 
    film film_arhiv[5]{ // для чего вам заполнять отдельный массив фильмов вместо my_store?
        { ""Titanic"", ""Jaims Kameron"", ""melodrama"", 9 } ,
        { ""Gone with the wind"", ""Victor Fleming"",""melodrama"", 8 },
        { ""Pretty Woman"", ""Garry Marshall"", ""melodrama"", 7 },
        { ""Avatar"", ""Jaims Kameron"",""fantazy"", 9},
        { ""Paddington"", ""Pol King"", ""family"", 5}
    };
    for (int i = 0; i < 2 ; i++) {
        cout << film_arhiv[i].film_name << film_arhiv[i].director << film_arhiv[i].genre << film_arhiv[i].rating << endl;
 
    }
    cout << endl;
 
    video_store.AddFilm(""Up"", ""Bob Piterson"", ""family"", 7); // video_store это тип данных а не название конкретной структуры
    video_store.AddFilm(""Star Wars"", ""George Lukas"", ""fantazy"", 8);
    video_store.AddFilm(""Hitch"", ""Andy Tennat"", ""family"", 6);
    video_store.AddFilm(""Guardians of Galaxy"", "" James Gann"", ""fantazy"", 5);
    video_store.AddFilm(""Zootopia"", ""Bairon Hovard"", ""family"", 6);
 
    video_store.ShowAllFilms(my_store);
    
    video_store.DelFilm(my_store,my_store.store.film_name); // вторым параметром нужно передавать строку, например ""Up""
}"
GyukT9Xz,.sig1,benbadge_72,HTML 5,Wednesday 17th of May 2023 09:08:59 PM CDT,"<i><b>Mankind must put an </b></i><a href=""https://www.onelook.com/?w=end&amp;ls=a"" target=""_blank"" class=""link link--external"" data-proxy-href=""/proxy.php?link=https%3A%2F%2Fwww.onelook.com%2F%3Fw%3Dend%26ls%3Da&amp;hash=4b3d892aec57bd904f9885a7297d6ce7"" rel=""nofollow ugc noopener""><i><b>end</b></i></a><i><b> to </b></i><a href=""https://www.etymonline.com/search?q=war"" target=""_blank"" class=""link link--external"" data-proxy-href=""/proxy.php?link=https%3A%2F%2Fwww.etymonline.com%2Fsearch%3Fq%3Dwar&amp;hash=704df1eb3d69278161d600c739306ec3"" rel=""nofollow ugc noopener""><i><b>war</b></i></a><i><b>, or war will put an end to mankind.   — John F. Kennedy</b></i><br>

<b><i>Now is the time for all good men to </i></b><a href=""https://www.onelook.com/?w=stand+to&amp;ls=a"" target=""_blank"" class=""link link--external"" data-proxy-href=""/proxy.php?link=https%3A%2F%2Fwww.onelook.com%2F%3Fw%3Dstand%2Bto%26ls%3Da&amp;hash=fdb708c2ba16043edb4593d84e85e5c8"" rel=""nofollow ugc noopener""><b><i>come to</i></b></a><b><i>.   — Walt Kelly<br>

We look out for each other lest the bad guys look out for us.   --- Anonymous</i></b><br>

<i><b>No army can withstand the strength of an idea whose time has come.</b></i><b><i>  ― Victor Hugo </i></b>"
NwDXmbFG,2wyy,Damonwei,JSON,Wednesday 17th of May 2023 08:56:27 PM CDT,"{

""author"":""Dwei-0421"",
""ua"": ""Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.75 Safari/537.36"",
""homeUrl"": ""https://www.2wyy.com/"",
""cateManual"": {""国产剧"":""42"",""港台剧"":""49"",""日韩剧"":""47"",""电视剧"":""2"",""欧美剧"":""45"",""电影"": ""1"",""动漫"": ""4"",""综艺"": ""3""},
""homeVodNode"": ""//a[@class='module-poster-item module-item']"",
""homeVodName"": ""/@title"",
""homeVodId"": ""/@href"",
""homeVodIdR"": """",
""homeVodImg"": ""//img/@data-original"",
""homeVodImgR"": """",
""homeVodMark"": ""//div[@class='module-item-note']/text()"",

""cateUrl"": ""https://www.2wyy.com/vodshow/{cateId}--------{catePg}---.html"",
""cateVodNode"": ""//a[@class='module-poster-item module-item']"",
""cateVodName"": ""/@title"",
""cateVodId"": ""/@href"",
""cateVodIdR"": """",
""cateVodImg"": ""//img/@data-original"",
""cateVodImgR"": """",
""cateVodMark"": ""//div[@class='module-item-note']/text()"",

""dtUrl"":""https://www.2wyy.com{vid}"",
""dtNode"": ""//body"",
""dtName"": ""//h1/text()"",
""dtNameR"": """",
""dtImg"": ""//div[@class='module-item-pic']/img/@data-original"",
""dtImgR"": """",
""dtCate"": ""concat(//div[@class='module-info-tag-link'][3]/a/text())"",
""dtCateR"": """",
""dtYear"": ""//div[@class='module-info-tag-link'][1]/a/text()"",
""dtYearR"": """",
""dtArea"": ""//div[@class='module-info-tag-link'][2]/a/text()"",
""dtAreaR"": """",
""dtMark"": """",
""dtMarkR"": """",
""dtDirector"": ""concat(//div[@class='module-info-item'][1]/div/a/text())"",
""dtDirectorR"": """",
""dtActor"": ""concat(//div[@class='module-info-item'][3]/div/a/text(),'-',//div[@class='module-info-item'][2]/div/a/text())"",
""dtActorR"": """",
""dtDesc"": ""//div[contains(@class,'show-desc')]/p/text()"",
""dtFromNode"": ""//div[contains(@class,'module-tab-item tab-item') and not (contains(@data-dropdown-value,'极速'))]"",
""dtFromName"":  ""concat(/span/text(),'☞',/small/text(),'集')"",
""dtFromNameR"": """",
""dtUrlNode"": ""//div[contains(@id,'panel1')]"",
""dtUrlSubNode"": ""//a"",
""dtUrlId"": ""/@href"",
""dtUrlIdR"": """",
""dtUrlName"": ""/span/text()"",
""dtUrlNameR"": """",

""playUrl"":""https://www.2wyy.com{playUrl}"",

""searchUrl"":""https://www.2wyy.com/vodsearch/-------------.html?wd={wd}"",
""scVodNode"":""//div[contains(@class,'module-card-item module-item')]"",
""scVodName"":""//strong/text()"",
""scVodId"":""/a/@href"",
""scVodImg"":""//img/@data-original"",
""scVodMark"":""/a/div/div/text()""
}"
WLKciHsw,rebozj,Damonwei,JSON,Wednesday 17th of May 2023 08:55:27 PM CDT,"{

""author"":""Dwei-0501"",
""ua"": ""Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.75 Safari/537.36"",
""homeUrl"": ""https://rebozj.pro/"",
""cateManual"": {""国产剧"": ""13"",""港台剧"":""14"",""日韩剧"":""15"",""欧美剧"":""16"",""电视剧"": ""2"",""电影"": ""1"",""动漫"": ""4"",""纪录片"": ""3"",""综艺"": ""5""},
""homeVodNode"": ""//div[contains(@class,'stui-vodlist__box')]/a"",
""homeVodName"": ""/@title"",
""homeVodId"": ""/@href"",
""homeVodIdR"": """",
""homeVodImg"": ""/@data-original"",
""homeVodImgR"": """",
""homeVodMark"": ""/span[3]/b/text()"",

""cateUrl"": ""https://rebozj.pro/show/{cateId}--------{catePg}---.html"",
""cateVodNode"": ""//div[contains(@class,'stui-vodlist__box')]/a"",
""cateVodName"": ""/@title"",
""cateVodId"": ""/@href"",
""cateVodIdR"": """",
""cateVodImg"": ""/@data-original"",
""cateVodImgR"": """",
""cateVodMark"": ""/span[3]/b/text()"",

""dtUrl"":""https://rebozj.pro{vid}"",
""dtNode"": ""//body"",
""dtName"": ""//h1/text()"",
""dtNameR"": """",
""dtImg"": ""//div[@class='stui-content__thumb']/a/img/@data-original"",
""dtImgR"": """",
""dtCate"": ""//p[contains(@class,'data')][2]/text()"",
""dtCateR"": """",
""dtYear"": """",
""dtYearR"": """",
""dtArea"": """",
""dtAreaR"": """",
""dtMark"": """",
""dtMarkR"": """",
""dtDirector"": ""//p[contains(@class,'data')][6]/a/text()"",
""dtDirectorR"": """",
""dtActor"": ""concat(//p[contains(@class,'data')][7]/a/text())"",
""dtActorR"": """",
""dtDesc"": ""//p[contains(@class,'desc detail')]/span[3]/text()"",
""dtFromNode"": ""//div[@class='stui-vodlist__head'][contains(./h3/text(),'自营')]/h3"",
""dtFromName"":  ""/text()"",
""dtFromNameR"": """",
""dtUrlNode"": ""//ul[contains(@class,'stui-content__playlist')]"",
""dtUrlSubNode"": ""/li/a"",
""dtUrlId"": ""/@href"",
""dtUrlIdR"": """",
""dtUrlName"": ""/text()"",
""dtUrlNameR"": """",

""playUrl"":""https://rebozj.pro{playUrl}"",

""searchUrl"":""https://rebozj.pro/search/-------------.html?wd={wd}&submit="",
""scVodNode"":""//div[contains(@class,'stui-vodlist__box')]/a"",
""scVodName"":""/@title"",
""scVodId"":""/@href"",
""scVodImg"":""/@data-original"",
""scVodMark"":""/span[3]/b/text()""
}"
RLa1dGi4,kdy666,Damonwei,JSON,Wednesday 17th of May 2023 08:54:06 PM CDT,"{

""author"":""Dwei-0509"",
""ua"": ""Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.75 Safari/537.36"",
""homeUrl"": ""https://www.kdy666.pro/"",
""cateManual"": {""电视剧"": ""2"",""电影"": ""1"",""动漫"": ""4"",""综艺"": ""5""},
""homeVodNode"": ""//div[@id='list-cards']/div/a"",
""homeVodName"": ""//strong/text()"",
""homeVodId"": ""/@href"",
""homeVodIdR"": """",
""homeVodImg"": ""/img/@data-original"",
""homeVodImgR"": """",
""homeVodMark"": """",

""cateUrl"": ""https://www.kdy666.pro/Vod/Index/{catePg}/{cateId}/0/0/0?order=0"",
""cateVodNode"": ""//div[@id='list-cards']/div/a"",
""cateVodName"": ""//strong/text()"",
""cateVodId"": ""/@href"",
""cateVodIdR"": """",
""cateVodImg"": ""/img/@data-original"",
""cateVodImgR"": """",
""cateVodMark"": """",

""dtUrl"":""https://www.kdy666.pro{vid}"",
""dtNode"": ""//body"",
""dtName"": ""//h2/text()"",
""dtNameR"": """",
""dtImg"": ""//tbody/tr[2]/td/img/@src"",
""dtImgR"": """",
""dtCate"": ""//p[contains(@class,'data')][1]/text()"",
""dtCateR"": """",
""dtYear"": ""//div[@class='col-md-12 col-xs-12'][2]//tbody/tr[2]/td/text()"",
""dtYearR"": """",
""dtArea"": ""//div[@class='col-md-12 col-xs-12'][2]//tbody/tr[1]/td/text()"",
""dtAreaR"": """",
""dtMark"": """",
""dtMarkR"": """",
""dtDirector"": ""//div[@class='col-md-12 col-xs-12'][1]//tbody/tr[4]/td//text()"",
""dtDirectorR"": """",
""dtActor"": ""//div[@class='col-md-12 col-xs-12'][2]//tbody/tr[3]/td/text()"",
""dtActorR"": """",
""dtDesc"": ""//div[@class='col-md-12 col-xs-12'][2]//tbody/tr[5]/td/div/text()"",
""dtFromNode"": ""//div[@class='col-md-12 col-lg-12 kdy-row']/div/ul/li/a[contains(./text(),'在线')]"",
""dtFromName"":  ""/text()"",
""dtFromNameR"": """",
""dtUrlNode"": ""//div[@id='online']/ul"",
""dtUrlSubNode"": ""/li/a"",
""dtUrlId"": ""/@href"",
""dtUrlIdR"": """",
""dtUrlName"": ""/text()"",
""dtUrlNameR"": """",

""playUrl"":""https://www.kdy666.pro{playUrl}"",
""playUa"": ""Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36"",
""searchUrl"":""https://www.kdy666.pro/Home/Search?KeyWord={wd}&SearchType=2"",
""scVodNode"":""//div[@class='item']//h4/a"",
""scVodName"":""/text()"",
""scVodId"":""/@href"",
""scVodImg"":""/@null"",
""scVodMark"":""""
}"
S3asnNcM,kdyhj666,Damonwei,JSON,Wednesday 17th of May 2023 08:52:40 PM CDT,"{

""author"":""Dwei-0509"",
""ua"": ""Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.75 Safari/537.36"",
""homeUrl"": ""https://www.kdy666.pro/"",
""cateManual"": {""豆瓣Top250"": ""Movie/SeriesIndex/1337684808050020356"",""经典国产剧"": ""Movie/SeriesIndex/1337684807999688724"",""TVB经典"": ""Movie/SeriesIndex/1337684808008077318"",""周星驰"": ""Movie/SeriesIndex/1337684808041631767"",""成龙"": ""Movie/SeriesIndex/1410219886877216768"",""林正英"": ""Movie/SeriesIndex/1337684808037437450"",""徐氏四杰"": ""Movie/SeriesIndex/1337684807978717189"",""李连杰"": ""Movie/SeriesIndex/1411984099530379264"",""漫威"": ""Movie/SeriesIndex/1337684808016465948"",""金庸"": ""Movie/SeriesIndex/1457355800099033088""},
""homeVodNode"": ""//div[@id='list-cards']/div/a"",
""homeVodName"": ""//strong/text()"",
""homeVodId"": ""/@href"",
""homeVodIdR"": """",
""homeVodImg"": ""/img/@data-original"",
""homeVodImgR"": """",
""homeVodMark"": """",

""cateUrl"": ""https://www.kdy666.pro/{cateId}/{catePg}"",
""cateVodNode"": ""//div[@id='list-cards']/div/a"",
""cateVodName"": ""//strong/text()"",
""cateVodId"": ""/@href"",
""cateVodIdR"": """",
""cateVodImg"": ""/img/@data-original"",
""cateVodImgR"": """",
""cateVodMark"": """",

""dtUrl"":""https://www.kdy666.pro{vid}"",
""dtNode"": ""//body"",
""dtName"": ""//h2/text()"",
""dtNameR"": """",
""dtImg"": ""//tbody/tr[2]/td/img/@src"",
""dtImgR"": """",
""dtCate"": ""//p[contains(@class,'data')][1]/text()"",
""dtCateR"": """",
""dtYear"": ""//div[@class='col-md-12 col-xs-12'][2]//tbody/tr[2]/td/text()"",
""dtYearR"": """",
""dtArea"": ""//div[@class='col-md-12 col-xs-12'][2]//tbody/tr[1]/td/text()"",
""dtAreaR"": """",
""dtMark"": """",
""dtMarkR"": """",
""dtDirector"": ""//div[@class='col-md-12 col-xs-12'][1]//tbody/tr[4]/td//text()"",
""dtDirectorR"": """",
""dtActor"": ""//div[@class='col-md-12 col-xs-12'][2]//tbody/tr[3]/td/text()"",
""dtActorR"": """",
""dtDesc"": ""//div[@class='col-md-12 col-xs-12'][2]//tbody/tr[5]/td/div/text()"",
""dtFromNode"": ""//div[@class='col-md-12 col-lg-12 kdy-row']/div/ul/li/a[contains(./text(),'在线')]"",
""dtFromName"":  ""/text()"",
""dtFromNameR"": """",
""dtUrlNode"": ""//div[@id='online']/ul"",
""dtUrlSubNode"": ""/li/a"",
""dtUrlId"": ""/@href"",
""dtUrlIdR"": """",
""dtUrlName"": ""/text()"",
""dtUrlNameR"": """",

""playUrl"":""https://www.kdy666.pro{playUrl}"",
""playUa"": ""Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36"",
""searchUrl"":""https://www.kdy666.pro/Home/Search?KeyWord={wd}&SearchType=2"",
""scVodNode"":""//div[@class='item']//h4/a"",
""scVodName"":""/text()"",
""scVodId"":""/@href"",
""scVodImg"":""/@null"",
""scVodMark"":""""
}"
pbim2eQy,TP02: PUNTO 9,mendoza_franco,C++,Wednesday 17th of May 2023 08:30:15 PM CDT,"#include <iostream>
#include <omp.h>
using namespace std;

    int main() {
    	int n=10;
		int cantidad=0;
		
	        omp_set_num_threads(8);
	    	#pragma omp parallel for reduction(+:cantidad)
    		
				for (int j=2 ; j<=n ; j++){
	        		
		        	bool primo = true;
		        	////calcula primo
		        	for (int i=2 ; i <= j/2 ; i++) {
			            if (j % i == 0){    
			                primo = false;
			                break;
						}
		        	}
	        		////
	        		if(primo==true){cantidad+=1;}			
				}
				
        //printf(""Total: %d Numeros Primos\n"", cantidad);	 
    return 0;   
	}
	
	"
eKpF3Zkn,4.8.7.1 Вещественные числа и задача о задачах (Решение с ошибкой проходит проверку),Valdemar-const,C++,Wednesday 17th of May 2023 08:27:53 PM CDT,"/**
 * @file
 * @brief 4.8.7.1 Вещественные числа и задача о задачах
 *
 * Задание:
 * Исправьте сортировку документов в коде поисковой системы: при
 * одинаковой - с точностью до 10⁻⁶ - релевантности сортируйте документы
 * по убыванию рейтинга.
 *
 * В первом элементе кортежа верните все плюс-слова запроса,
 * содержащиеся в документе. Слова не должны дублироваться. Пусть они
 * будут отсортированы по возрастанию.
 * Если документ не соответствует запросу (нет пересечений по
 * плюс-словам или есть минус-слово), вектор слов нужно вернуть пустым.
 *
 * IDF - (англ. Inverse document frequency) обратная частота документа.
 * Величина, задающая меру важности слова относительно остальных
 * уникальных слов, встречающихся в документах базы минимум один раз.
 * Рассчитывается:
 *
 * word_idf = ln( documents / documents_contains_word );
 *
 * 1. количество всех документов, имеющихся в
 *    базе, делят на количество тех, где встречается слово. Не
 *    встречающиеся нигде слова в расчёт не берут;
 * 2. к результату деления применяют натуральный логарифм.
 *
 * TF - (англ. term frequency) частота термина. Величина, задающая долю,
 * занимаемую заданным словом в заданном документе. Рассчитывается:
 *
 * word_tf = word_count / doc_words_count;
 *
 * Количество вхождений заданного слова разделить на количество слов
 * документа.
 *
 * Расчёт релевантности документов для заданного запроса с учетом IDF и
 * TF:
 * - вычисляется IDF каждого слова в запросе;
 * - вычисляется TF каждого слова запроса в документе;
 * - IDF каждого слова запроса умножается на TF этого слова в этом
 *   документе;
 * - все произведения IDF и TF в документе суммируются.
 *
 * Чем больше сумма, тем релевантнее документ.
 *
 * Рекомендации:
 * TF слов в документе должен вычисляться при добавлении документа.
 * Решение будет недостаточно эффективным, если вы будете вычислять его
 * каждый раз при поиске.
 */

/* ======================= Зависимости модуля ======================= */
/*                          -- Ввод/вывод --                          */
#include <iostream>
#include <sstream>
/*                          -- Контейнеры --                          */
#include <map>
#include <set>
#include <string>
#include <vector>
/*                       -- Обработка данных --                       */
#include <algorithm>
#include <numeric>
#include <utility>
/*                   -- Математические расчёты --                     */
#include <cmath>

/*                         -- Импорт имен --                          */
using namespace std;

// Cинонимы типов, введенные в поддержку класса SearchServer.

using Word           = string;
using DocumentId     = int;
using InverseDocFreq = double;
using TfIdfFreq      = double;

/* ============================ Константы =========================== */

const int MAX_RESULT_DOCUMENT_COUNT = 5;

/* ======================== Объявление типов ======================== */

enum class DocumentStatus;
struct Document;
class SearchServer;

/* ========================= Внешние функции ======================== */

bool
HasDocumentLessId(
        const Document &lhs,
        const Document &rhs
);

string
ReadLine();

int
ReadLineWithNumber();

vector<string>
SplitIntoWords(
        const string &text
);

vector<int>
SplitIntoGrades(
        const string &user_grades
);

SearchServer
CreateSearchServer();

void
PrintDocument(
        const Document &document
);

void
PrintMatchDocumentResult(
        DocumentId          document_id,
        const vector<Word> &words,
        DocumentStatus      status
);

/* ======================= Определение типов ======================== */

enum class DocumentStatus
{
    ACTUAL,
    IRRELEVANT,
    BANNED,
    REMOVED
};

struct Document
{
    int            id;
    DocumentStatus status;
    int            rating;
    double         relevance;
};

class SearchServer
{
  public: // Методы

    void
    SetStopWords(
            const string &text
    );

    int
    GetDocumentCount() const;

    void
    AddDocument(
            int                document_id,
            const string      &document,
            DocumentStatus     status,
            const vector<int> &grades
    );

    vector<Document>
    FindTopDocuments(
            const string  &raw_query,
            DocumentStatus status = DocumentStatus::ACTUAL
    ) const;

    tuple<vector<string>, DocumentStatus>
    MatchDocument(
            const string &raw_query,
            int           document_id
    ) const;

  private: // Типы

    struct WordPerDocProperties;
    struct QueryWord;
    struct Query;

    using TermFrequency = double;
    using Rating        = int;
    using WordIndex     = map<Word, map<DocumentId, WordPerDocProperties>>;

  private: // Поля

    /**
     * @brief Индекс слов всех документов.
     *
     * Каждому слову в индексе соответствует ассоциативный массив,
     * ключами которого являются идентификаторы документов содержащие
     * данное слово, значением же является свойства слова, рассчитанные
     * в рамках соответствующего документа. В текущий момент свойствами
     * являются кол-во вхождений + частота термина.
     *
     * Например:
     * doc_word_idx_[""аська""]: { {1, {.inclusion_count, .tf} },
     *                           {4, {.inclusion_count, .tf} } }
     * индекс слова ""аська"" содержит 2 записи документов с id 1 и 4,
     * каждая запись документа содержит свойства слова inclusion_count и
     * tf, рассчитанные при добавлении документа.
     */
    WordIndex                       doc_word_idx_;
    map<DocumentId, Rating>         doc_rating_;
    map<DocumentId, DocumentStatus> doc_status_;

    set<string> stop_words_;
    int         documents_count_ = 0;

  private: // Методы верхнего уровня

    vector<string>
    SplitIntoWordsNoStop(
            const string &text
    ) const;

    vector<Document>
    FindAllDocuments(
            const Query &query_words
    ) const;

    Query
    ParseQuery(
            const string &text
    ) const;

  private: // Декомпозиция FindAllDocuments

    double
    CalculateIdf(
            const Word &query_word
    ) const;

    map<Word, InverseDocFreq>
    CalculateIdfPerQueryWord(
            const Query &query
    ) const;

    /** Рассчитать релевантность документов по формуле TF-IDF */
    map<DocumentId, TfIdfFreq>
    CalculateTfIdfRelevance(
            const Query &query
    ) const;

    /** Исключить документы, содержащие минус-слова из выборки */
    void
    ApplyMinusWordsFilter(
            map<DocumentId, TfIdfFreq> &relevance_info,
            const Query                &query
    ) const;

  private: // Декомпозиция ParseQuery

    /** Анализ свойств слова запроса */
    static QueryWord
    ParseQueryWord(
            const Word &query_word
    );

    static int
    ComputeAverageRating(
            const vector<int> &ratings
    );

}; // class SearchServer

/**
 * @brief Свойства слова, рассчитываемые при добавлении в индекс для
 * каждого документа в функции AddDocument.
 */
struct SearchServer::WordPerDocProperties
{
    TermFrequency tf; /**< частота термина */
};

/** Параметры слова запроса */
struct SearchServer::QueryWord
{
    enum class WordType
    {
        plus,
        minus
    };

    string   data;
    WordType type;
};

struct SearchServer::Query
{
    set<string> included_words;
    set<string> excluded_words;
};

/* ====================== Определение функций ======================= */

/*                        -- SearchServer:: --                        */

void
SearchServer::SetStopWords(
        const string &text
)
{
    for (const string &word : SplitIntoWords(text))
    {
        stop_words_.insert(word);
    }
}

int
SearchServer::GetDocumentCount() const
{
    return documents_count_;
}

void
SearchServer::AddDocument(
        int                document_id,
        const string      &document,
        DocumentStatus     status,
        const vector<int> &grades
)
{
    const vector<string> words = SplitIntoWordsNoStop(document);

    // вычисление среднего рейтинга
    doc_rating_[document_id] = ComputeAverageRating(grades);
    doc_status_[document_id] = status;

    double single_word_proportion = 1.0 / words.size();
    for (const auto &word : words)
    {
        doc_word_idx_[word][document_id].tf += single_word_proportion;
    }

    ++documents_count_;
}

vector<Document>
SearchServer::FindTopDocuments(
        const string  &raw_query,
        DocumentStatus status
) const
{
    Query query             = ParseQuery(raw_query);
    auto  matched_documents = FindAllDocuments(query);

    sort(matched_documents.begin(),
         matched_documents.end(),
         [](const Document &lhs, const Document &rhs)
         {
             const double epsilon = 1e-6;
             return (lhs.relevance == rhs.relevance) ? abs(lhs.relevance - rhs.relevance) < epsilon
                                                     : lhs.relevance > rhs.relevance;
         });

    matched_documents.erase(
            std::remove_if(
                    matched_documents.begin(),
                    matched_documents.end(),
                    [&, status](auto &document)
                    {
                        return doc_status_.at(document.id) != status;
                    }
            ),
            matched_documents.end()
    );

    if (matched_documents.size() > MAX_RESULT_DOCUMENT_COUNT)
    {
        matched_documents.resize(MAX_RESULT_DOCUMENT_COUNT);
    }

    return matched_documents;
}

tuple<vector<string>, DocumentStatus>
SearchServer::MatchDocument(
        const string &raw_query,
        int           document_id
) const
{
    vector<string> document_plus_words;

    auto [query_plus_words, query_minus_words] = ParseQuery(raw_query);

    // Если одно из стоп слов, содержится в документе возвратить пустой вектор
    for (const auto &word : query_minus_words)
    {
        if (doc_word_idx_.at(word).count(document_id))
        {
            return {document_plus_words, doc_status_.at(document_id)};
        }
    }

    // переместить из query_plus_words в вектор слова, которые содержаться в документе с document_id
    for (auto &word : query_plus_words)
    {
        if (doc_word_idx_.at(word).count(document_id))
        {
            document_plus_words.push_back(move(word));
        }
    }

    return {document_plus_words, doc_status_.at(document_id)};
}

vector<string>
SearchServer::SplitIntoWordsNoStop(
        const string &text
) const
{
    vector<string> words;
    for (const string &word : SplitIntoWords(text))
    {
        if (stop_words_.count(word) == 0)
        {
            words.push_back(word);
        }
    }

    return words;
}

vector<Document>
SearchServer::FindAllDocuments(
        const Query &query
) const
{
    vector<Document> result;

    // подсчет релевантности каждого документа по формуле TF-IDF
    map<DocumentId, TfIdfFreq> relevance_stat =
            CalculateTfIdfRelevance(query);

    // Исключение из выборки документов, содержащих минус-слова
    ApplyMinusWordsFilter(relevance_stat, query);

    // формирование результирующей не отсортированной выборки
    for (auto &[id, relevance] : relevance_stat)
    {
        // переместить элементы map в vector
        result.push_back({id, doc_status_.at(id), doc_rating_.at(id), relevance});
    }

    return result;
}

SearchServer::Query
SearchServer::ParseQuery(
        const string &text
) const
{
    Query result;

    for (const string &word : SplitIntoWordsNoStop(text))
    {
        QueryWord qword = ParseQueryWord(word);

        if (qword.type == QueryWord::WordType::minus)
        {
            result.excluded_words.insert(qword.data);
            result.included_words.erase(qword.data);
        }
        else if (0 == result.excluded_words.count(qword.data))
        {
            result.included_words.insert(word);
        }
    }

    return result;
}

double
SearchServer::CalculateIdf(
        const Word &query_word
) const
{
    if (!doc_word_idx_.count(query_word))
    {
        return 0;
    }

    return log(static_cast<double>(documents_count_) / doc_word_idx_.at(query_word).size());
}

map<Word, InverseDocFreq>
SearchServer::CalculateIdfPerQueryWord(
        const Query &query
) const
{
    map<Word, InverseDocFreq> idf_per_qword;

    for (const auto &word : query.included_words)
    {
        idf_per_qword[word] = CalculateIdf(word);
    }

    return idf_per_qword;
}

map<DocumentId, TfIdfFreq>
SearchServer::CalculateTfIdfRelevance(
        const Query &query
) const
{
    // релевантность для каждого документа
    map<DocumentId, TfIdfFreq> result;

    // предварительный подсчет idf каждого слова запроса
    map<Word, InverseDocFreq> query_idf = CalculateIdfPerQueryWord(query);

    for (const auto &included_word : query.included_words)
    {
        // если индекс содержит искомое слово
        if (doc_word_idx_.count(included_word))
        {
            // рассчитать релевантность по формуле tf-idf
            // соответствующих документов для каждого документа,
            // включающего слово запроса

            for (const auto &[doc_id, word_props] :
                 doc_word_idx_.at(included_word))
            {
                // прибавить к релевантности документа произведение idf
                // и tf текущего слова запроса

                result[doc_id] += word_props.tf * query_idf.at(included_word);
            }
        }
    }

    return result;
}

void
SearchServer::ApplyMinusWordsFilter(
        map<DocumentId, TfIdfFreq> &relevance_info,
        const SearchServer::Query  &query
) const
{
    for (const auto &excluded_word : query.excluded_words)
    {
        // если индекс содержит стоп-слово
        if (doc_word_idx_.count(excluded_word))
        {
            // исключить из выборки соответствующие документы
            for (const auto &[doc_id, word_props] :
                 doc_word_idx_.at(excluded_word))
            {
                relevance_info.erase(doc_id);
            }
        }
    }
}

SearchServer::QueryWord
SearchServer::ParseQueryWord(
        const Word &query_word
)
{
    if (query_word.empty())
    {
        return {{}, QueryWord::WordType::minus};
    }

    if ((query_word[0] == '-'))
    {
        return {query_word.substr(1), QueryWord::WordType::minus};
    }
    else
    {
        return {query_word, QueryWord::WordType::plus};
    }
}

int
SearchServer::ComputeAverageRating(
        const vector<int> &ratings
)
{
    int average = 0;

    if (ratings.size())
    {
        int sum = accumulate(ratings.begin(), ratings.end(), 0);
        average = sum / static_cast<int>(ratings.size());
    }

    return average;
}

/*--------------------------------------------------------------------*/

bool
HasDocumentLessId(
        const Document &lhs,
        const Document &rhs
)
{
    return lhs.id < rhs.id;
}

string
ReadLine()
{
    string s;
    getline(cin, s);

    return s;
}

int
ReadLineWithNumber()
{
    int result = 0;
    cin >> result;
    ReadLine();

    return result;
}

vector<string>
SplitIntoWords(
        const string &text
)
{
    vector<string> words;
    string         word;

    for (const char c : text)
    {
        if (c == ' ')
        {
            if (!word.empty())
            {
                words.push_back(word);
                word.clear();
            }
        }
        else
        {
            word += c;
        }
    }

    if (!word.empty())
    {
        words.push_back(word);
    }

    return words;
}

vector<int>
SplitIntoGrades(
        const string &user_grades
)
{
    vector<int>  grades;
    stringstream s_user_grades {user_grades};
    int          total_grades;

    s_user_grades >> total_grades;
    for (int i = 0; i < total_grades; ++i)
    {
        int grade;
        s_user_grades >> grade;
        grades.push_back(grade);
    }

    return grades;
}

SearchServer
CreateSearchServer()
{
    SearchServer search_server;
    const string stop_words_joined = ReadLine();
    search_server.SetStopWords(stop_words_joined);

    // Read documents
    const int document_count = ReadLineWithNumber();
    for (int document_id = 0; document_id < document_count; ++document_id)
    {
        string document_text    = ReadLine();
        string user_grades_text = ReadLine();

        search_server.AddDocument(
                document_id, document_text, DocumentStatus::ACTUAL, SplitIntoGrades(user_grades_text)
        );
    }

    return search_server;
}

void
PrintDocument(
        const Document &document
)
{
    cout << ""{ ""s
         << ""document_id = ""s << document.id << "", ""s
         << ""relevance = ""s << document.relevance << "", ""s
         << ""rating = ""s << document.rating
         << "" }""s << endl;
}

void
PrintMatchDocumentResult(
        int                   document_id,
        const vector<string> &words,
        DocumentStatus        status
)
{
    cout << ""{ ""s
         << ""document_id = ""s << document_id << "", ""s
         << ""status = ""s << static_cast<int>(status) << "", ""s
         << ""words =""s;

    for (const string &word : words)
    {
        cout << ' ' << word;
    }

    cout << ""}""s << endl;
}

/* =========================== Точка входа ========================== */

int
main()
{
    SearchServer search_server;
    search_server.SetStopWords(""и в на""s);

    search_server.AddDocument(0, ""белый кот и модный ошейник""s, DocumentStatus::ACTUAL, {8, -3});
    search_server.AddDocument(1, ""пушистый кот пушистый хвост""s, DocumentStatus::ACTUAL, {7, 2, 7});
    search_server.AddDocument(2, ""ухоженный пёс выразительные глаза""s, DocumentStatus::ACTUAL, {5, -12, 2, 1});

    for (const Document &document : search_server.FindTopDocuments(""ухоженный кот""s))
    {
        PrintDocument(document);
    }
}
"
cYRD3gE1,LuaOATest,ZTTrak,Lua,Wednesday 17th of May 2023 07:55:22 PM CDT,"{
                    [""1""] = ""ZTTrak International"",
                    [""10""] = ""U.S Air Force"",
                    [""11""] = ""Norfolk"",
                    [""12""] = ""Ottowa"",
                    [""13""] = ""Alberta"",
                    [""14""] = ""Banff"",
                    [""15""] = ""Fairmont"",
                    [""16""] = ""Shanley"",
                    [""17""] = ""Chessie"",
                    [""18""] = ""Carolina"",
                    [""19""] = ""Strasburg"",
                    [""2""] = ""T. Windowsoft"",
                    [""20""] = ""Paradise"",
                    [""3""] = ""E. Winters"",
                    [""4""] = ""F. Colton"",
                    [""5""] = ""C. Wheezer"",
                    [""6""] = ""Blue Granite"",
                    [""7""] = ""Rockton"",
                    [""8""] = ""Rion"",
                    [""9""] = ""Rockton-Rion""
                 }"
uirXPWVH,Some Todologistica Employees,bombaires,HTML,Wednesday 17th of May 2023 07:46:09 PM CDT,"<a href=""mailto:lauragloaiza@gmail.com"">lauragloaiza@gmail.com</a>
<a href=""mailto:la.uraglo.a.i.z.a@gmail.com"">la.uraglo.a.i.z.a@gmail.com</a>
<a href=""mailto:l.au.ra.g.l.o.a.iza@gmail.com"">l.au.ra.g.l.o.a.iza@gmail.com</a>
<a href=""mailto:lau.r.ag.l.oa.i.z.a@gmail.com"">lau.r.ag.l.oa.i.z.a@gmail.com</a>
<a href=""mailto:lauraglo.ai.z.a@gmail.com"">lauraglo.ai.z.a@gmail.com</a>
<a href=""mailto:la.ura.glo.aiza@gmail.com"">la.ura.glo.aiza@gmail.com</a>
<a href=""mailto:l.au.rag.l.o.a.i.za@gmail.com"">l.au.rag.l.o.a.i.za@gmail.com</a>
<a href=""mailto:lau.ra.gl.o.ai.za@gmail.com"">lau.ra.gl.o.ai.za@gmail.com</a>
<a href=""mailto:l.a.u.rag.l.oa.iz.a@gmail.com"">l.a.u.rag.l.oa.iz.a@gmail.com</a>
<a href=""mailto:la.ur.a.gloa.iz.a@gmail.com"">la.ur.a.gloa.iz.a@gmail.com</a>
<a href=""mailto:lau.r.a.gl.oa.i.z.a@gmail.com"">lau.r.a.gl.oa.i.z.a@gmail.com</a>
<a href=""mailto:lau.rag.lo.aiza@gmail.com"">lau.rag.lo.aiza@gmail.com</a>
<a href=""mailto:l.a.u.r.a.gl.o.a.i.z.a@gmail.com"">l.a.u.r.a.gl.o.a.i.z.a@gmail.com</a>
<a href=""mailto:l.a.u.ra.gl.oa.i.z.a@gmail.com"">l.a.u.ra.gl.oa.i.z.a@gmail.com</a>
<a href=""mailto:la.u.r.ag.l.oai.z.a@gmail.com"">la.u.r.ag.l.oai.z.a@gmail.com</a>
<a href=""mailto:l.a.u.raglo.aiza@gmail.com"">l.a.u.raglo.aiza@gmail.com</a>
<a href=""mailto:lau.ra.g.lo.ai.z.a@gmail.com"">lau.ra.g.lo.ai.z.a@gmail.com</a>
<a href=""mailto:l.a.u.r.ag.l.oa.i.z.a@gmail.com"">l.a.u.r.ag.l.oa.i.z.a@gmail.com</a>
<a href=""mailto:lau.r.a.g.l.o.a.iz.a@gmail.com"">lau.r.a.g.l.o.a.iz.a@gmail.com</a>
<a href=""mailto:l.au.ra.glo.ai.za@gmail.com"">l.au.ra.glo.ai.za@gmail.com</a>
<a href=""mailto:l.a.ura.g.lo.a.i.z.a@gmail.com"">l.a.ura.g.lo.a.i.z.a@gmail.com</a>
<a href=""mailto:l.au.r.a.gl.o.a.iza@gmail.com"">l.au.r.a.gl.o.a.iza@gmail.com</a>
<a href=""mailto:lau.r.ag.l.oa.i.za@gmail.com"">lau.r.ag.l.oa.i.za@gmail.com</a>
<a href=""mailto:laur.a.gl.o.a.iz.a@gmail.com"">laur.a.gl.o.a.iz.a@gmail.com</a>
<a href=""mailto:l.a.u.r.aglo.aiz.a@gmail.com"">l.a.u.r.aglo.aiz.a@gmail.com</a>
<a href=""mailto:lau.r.agl.o.a.i.za@gmail.com"">lau.r.agl.o.a.i.za@gmail.com</a>
<a href=""mailto:lau.r.a.g.l.oaiz.a@gmail.com"">lau.r.a.g.l.oaiz.a@gmail.com</a>
<a href=""mailto:la.u.ra.g.l.o.ai.z.a@gmail.com"">la.u.ra.g.l.o.ai.z.a@gmail.com</a>
<a href=""mailto:la.ura.gl.oaiz.a@gmail.com"">la.ura.gl.oaiz.a@gmail.com</a>
<a href=""mailto:l.a.ura.g.lo.aiz.a@gmail.com"">l.a.ura.g.lo.aiz.a@gmail.com</a>
<a href=""mailto:laura.glo.a.i.za@gmail.com"">laura.glo.a.i.za@gmail.com</a>
<a href=""mailto:l.aur.aglo.ai.z.a@gmail.com"">l.aur.aglo.ai.z.a@gmail.com</a>
<a href=""mailto:l.aur.a.gl.o.a.i.z.a@gmail.com"">l.aur.a.gl.o.a.i.z.a@gmail.com</a>
<a href=""mailto:la.uragl.oa.iza@gmail.com"">la.uragl.oa.iza@gmail.com</a>
<a href=""mailto:l.au.r.a.g.l.oa.i.z.a@gmail.com"">l.au.r.a.g.l.oa.i.z.a@gmail.com</a>
<a href=""mailto:l.a.ur.a.g.loaiz.a@gmail.com"">l.a.ur.a.g.loaiz.a@gmail.com</a>
<a href=""mailto:l.au.r.agl.oa.iza@gmail.com"">l.au.r.agl.oa.iza@gmail.com</a>
<a href=""mailto:laur.agl.oai.z.a@gmail.com"">laur.agl.oai.z.a@gmail.com</a>
<a href=""mailto:l.au.r.a.g.loa.iz.a@gmail.com"">l.au.r.a.g.loa.iz.a@gmail.com</a>
<a href=""mailto:lau.raglo.ai.za@gmail.com"">lau.raglo.ai.za@gmail.com</a>
<a href=""mailto:l.au.r.ag.l.oa.i.za@gmail.com"">l.au.r.ag.l.oa.i.za@gmail.com</a>
<a href=""mailto:laura.glo.ai.z.a@gmail.com"">laura.glo.ai.z.a@gmail.com</a>
<a href=""mailto:l.a.ur.agl.o.aiza@gmail.com"">l.a.ur.agl.o.aiza@gmail.com</a>
<a href=""mailto:la.urag.loa.i.za@gmail.com"">la.urag.loa.i.za@gmail.com</a>
<a href=""mailto:laur.a.g.lo.aiz.a@gmail.com"">laur.a.g.lo.aiz.a@gmail.com</a>
<a href=""mailto:la.ura.g.lo.aiz.a@gmail.com"">la.ura.g.lo.aiz.a@gmail.com</a>
<a href=""mailto:l.a.u.ragl.oaiza@gmail.com"">l.a.u.ragl.oaiza@gmail.com</a>
<a href=""mailto:l.aura.g.lo.ai.z.a@gmail.com"">l.aura.g.lo.ai.z.a@gmail.com</a>
<a href=""mailto:l.aur.ag.lo.a.i.z.a@gmail.com"">l.aur.ag.lo.a.i.z.a@gmail.com</a>
<a href=""mailto:l.a.ur.aglo.a.i.z.a@gmail.com"">l.a.ur.aglo.a.i.z.a@gmail.com</a>
<a href=""mailto:la.u.r.ag.l.o.aiz.a@gmail.com"">la.u.r.ag.l.o.aiz.a@gmail.com</a>
<a href=""mailto:l.a.uragloa.i.za@gmail.com"">l.a.uragloa.i.za@gmail.com</a>
<a href=""mailto:l.a.ur.a.g.loaiza@gmail.com"">l.a.ur.a.g.loaiza@gmail.com</a>
<a href=""mailto:laur.aglo.aiza@gmail.com"">laur.aglo.aiza@gmail.com</a>
<a href=""mailto:la.u.ra.gl.o.ai.z.a@gmail.com"">la.u.ra.gl.o.ai.z.a@gmail.com</a>
<a href=""mailto:l.a.u.ragloa.iz.a@gmail.com"">l.a.u.ragloa.iz.a@gmail.com</a>
<a href=""mailto:l.a.urag.lo.aiz.a@gmail.com"">l.a.urag.lo.aiz.a@gmail.com</a>
<a href=""mailto:lau.r.a.g.loa.iz.a@gmail.com"">lau.r.a.g.loa.iz.a@gmail.com</a>
<a href=""mailto:laur.ag.l.o.a.i.za@gmail.com"">laur.ag.l.o.a.i.za@gmail.com</a>
<a href=""mailto:l.a.uraglo.ai.za@gmail.com"">l.a.uraglo.ai.za@gmail.com</a>
<a href=""mailto:l.a.ura.gloa.i.za@gmail.com"">l.a.ura.gloa.i.za@gmail.com</a>
<a href=""mailto:lau.r.a.g.l.oa.iz.a@gmail.com"">lau.r.a.g.l.oa.iz.a@gmail.com</a>
<a href=""mailto:l.au.ra.glo.a.i.za@gmail.com"">l.au.ra.glo.a.i.za@gmail.com</a>
<a href=""mailto:la.u.r.a.gloaiza@gmail.com"">la.u.r.a.gloaiza@gmail.com</a>
<a href=""mailto:laur.a.g.l.oa.i.z.a@gmail.com"">laur.a.g.l.oa.i.z.a@gmail.com</a>
<a href=""mailto:la.ur.a.gloa.i.z.a@gmail.com"">la.ur.a.gloa.i.z.a@gmail.com</a>
<a href=""mailto:l.a.u.r.ag.loaiz.a@gmail.com"">l.a.u.r.ag.loaiz.a@gmail.com</a>
<a href=""mailto:la.u.r.aglo.ai.z.a@gmail.com"">la.u.r.aglo.ai.z.a@gmail.com</a>
<a href=""mailto:l.au.rag.lo.aiza@gmail.com"">l.au.rag.lo.aiza@gmail.com</a>
<a href=""mailto:lau.r.a.gloa.iz.a@gmail.com"">lau.r.a.gloa.iz.a@gmail.com</a>
<a href=""mailto:lau.r.aglo.a.iza@gmail.com"">lau.r.aglo.a.iza@gmail.com</a>
<a href=""mailto:l.aurag.l.oa.iz.a@gmail.com"">l.aurag.l.oa.iz.a@gmail.com</a>
<a href=""mailto:l.aur.a.gl.oa.iza@gmail.com"">l.aur.a.gl.oa.iza@gmail.com</a>
<a href=""mailto:l.auragloaiz.a@gmail.com"">l.auragloaiz.a@gmail.com</a>
<a href=""mailto:l.a.ura.gl.o.a.iza@gmail.com"">l.a.ura.gl.o.a.iza@gmail.com</a>
<a href=""mailto:l.a.u.ra.g.loaiz.a@gmail.com"">l.a.u.ra.g.loaiz.a@gmail.com</a>
<a href=""mailto:l.aura.g.lo.a.iz.a@gmail.com"">l.aura.g.lo.a.iz.a@gmail.com</a>
<a href=""mailto:l.a.u.ra.gl.oa.iz.a@gmail.com"">l.a.u.ra.gl.oa.iz.a@gmail.com</a>
<a href=""mailto:lau.r.a.g.l.o.ai.z.a@gmail.com"">lau.r.a.g.l.o.ai.z.a@gmail.com</a>
<a href=""mailto:la.ur.ag.lo.a.iza@gmail.com"">la.ur.ag.lo.a.iza@gmail.com</a>
<a href=""mailto:l.a.ura.gl.oa.iza@gmail.com"">l.a.ura.gl.oa.iza@gmail.com</a>
<a href=""mailto:l.aur.agl.o.a.i.za@gmail.com"">l.aur.agl.o.a.i.za@gmail.com</a>
<a href=""mailto:lau.r.ag.l.o.a.i.za@gmail.com"">lau.r.ag.l.o.a.i.za@gmail.com</a>
<a href=""mailto:l.a.ura.gl.o.aiza@gmail.com"">l.a.ura.gl.o.aiza@gmail.com</a>
<a href=""mailto:l.aurag.l.o.ai.za@gmail.com"">l.aurag.l.o.ai.za@gmail.com</a>
<a href=""mailto:lau.rag.l.oa.iza@gmail.com"">lau.rag.l.oa.iza@gmail.com</a>
<a href=""mailto:l.a.u.r.a.gl.o.aiza@gmail.com"">l.a.u.r.a.gl.o.aiza@gmail.com</a>
<a href=""mailto:lauraglo.a.i.z.a@gmail.com"">lauraglo.a.i.z.a@gmail.com</a>
<a href=""mailto:la.u.ragl.oai.za@gmail.com"">la.u.ragl.oai.za@gmail.com</a>
<a href=""mailto:l.aur.a.g.loaiz.a@gmail.com"">l.aur.a.g.loaiz.a@gmail.com</a>
<a href=""mailto:lau.r.a.g.lo.a.i.za@gmail.com"">lau.r.a.g.lo.a.i.za@gmail.com</a>
<a href=""mailto:laur.agloai.z.a@gmail.com"">laur.agloai.z.a@gmail.com</a>
<a href=""mailto:l.aurag.loa.iz.a@gmail.com"">l.aurag.loa.iz.a@gmail.com</a>
<a href=""mailto:la.ur.agl.oa.iz.a@gmail.com"">la.ur.agl.oa.iz.a@gmail.com</a>
<a href=""mailto:lau.r.a.gl.oaiza@gmail.com"">lau.r.a.gl.oaiza@gmail.com</a>
<a href=""mailto:lau.ra.gl.o.aiz.a@gmail.com"">lau.ra.gl.o.aiz.a@gmail.com</a>
<a href=""mailto:la.u.ragl.o.a.iza@gmail.com"">la.u.ragl.o.a.iza@gmail.com</a>
<a href=""mailto:l.au.r.aglo.aiza@gmail.com"">l.au.r.aglo.aiza@gmail.com</a>
<a href=""mailto:l.aur.agloaiz.a@gmail.com"">l.aur.agloaiz.a@gmail.com</a>
<a href=""mailto:l.au.ragl.o.aiza@gmail.com"">l.au.ragl.o.aiza@gmail.com</a>
<a href=""mailto:l.a.u.ragl.oaiz.a@gmail.com"">l.a.u.ragl.oaiz.a@gmail.com</a>
<a href=""mailto:lau.r.aglo.ai.za@gmail.com"">lau.r.aglo.ai.za@gmail.com</a>
<a href=""mailto:la.ura.gl.o.a.i.z.a@gmail.com"">la.ura.gl.o.a.i.z.a@gmail.com</a>
<a href=""mailto:l.a.uragloai.z.a@gmail.com"">l.a.uragloai.z.a@gmail.com</a>
<a href=""mailto:l.a.u.ra.g.l.oaiz.a@gmail.com"">l.a.u.ra.g.l.oaiz.a@gmail.com</a>
<a href=""mailto:lau.r.agl.o.a.i.z.a@gmail.com"">lau.r.agl.o.a.i.z.a@gmail.com</a>
<a href=""mailto:la.ur.a.gloa.i.za@gmail.com"">la.ur.a.gloa.i.za@gmail.com</a>
<a href=""mailto:l.a.uragl.o.a.iz.a@gmail.com"">l.a.uragl.o.a.iz.a@gmail.com</a>
<a href=""mailto:la.u.r.a.gl.o.ai.z.a@gmail.com"">la.u.r.a.gl.o.ai.z.a@gmail.com</a>
<a href=""mailto:lau.r.a.gl.o.ai.za@gmail.com"">lau.r.a.gl.o.ai.za@gmail.com</a>
<a href=""mailto:l.auragloa.iza@gmail.com"">l.auragloa.iza@gmail.com</a>
<a href=""mailto:l.aur.agl.oa.iz.a@gmail.com"">l.aur.agl.oa.iz.a@gmail.com</a>
<a href=""mailto:lau.r.ag.lo.a.i.z.a@gmail.com"">lau.r.ag.lo.a.i.z.a@gmail.com</a>
<a href=""mailto:l.au.ragloa.i.za@gmail.com"">l.au.ragloa.i.za@gmail.com</a>
<a href=""mailto:la.u.r.a.g.lo.a.iz.a@gmail.com"">la.u.r.a.g.lo.a.iz.a@gmail.com</a>
<a href=""mailto:la.u.r.a.g.lo.a.i.z.a@gmail.com"">la.u.r.a.g.lo.a.i.z.a@gmail.com</a>
<a href=""mailto:la.u.r.ag.l.o.ai.za@gmail.com"">la.u.r.ag.l.o.ai.za@gmail.com</a>
<a href=""mailto:laura.gloa.iza@gmail.com"">laura.gloa.iza@gmail.com</a>
<a href=""mailto:l.aur.agl.oa.i.za@gmail.com"">l.aur.agl.oa.i.za@gmail.com</a>
<a href=""mailto:l.a.ur.agloai.za@gmail.com"">l.a.ur.agloai.za@gmail.com</a>
<a href=""mailto:la.ur.a.g.lo.a.i.z.a@gmail.com"">la.ur.a.g.lo.a.i.z.a@gmail.com</a>
<a href=""mailto:l.au.r.a.g.l.oa.i.za@gmail.com"">l.au.r.a.g.l.oa.i.za@gmail.com</a>
<a href=""mailto:l.a.ur.a.gloa.iz.a@gmail.com"">l.a.ur.a.gloa.iz.a@gmail.com</a>
<a href=""mailto:l.a.u.ra.g.loaiza@gmail.com"">l.a.u.ra.g.loaiza@gmail.com</a>
<a href=""mailto:laura.g.lo.aiz.a@gmail.com"">laura.g.lo.aiz.a@gmail.com</a>
<a href=""mailto:l.a.u.r.a.gl.oa.iza@gmail.com"">l.a.u.r.a.gl.oa.iza@gmail.com</a>
<a href=""mailto:la.ura.gloa.iza@gmail.com"">la.ura.gloa.iza@gmail.com</a>
<a href=""mailto:laur.a.gl.oaiza@gmail.com"">laur.a.gl.oaiza@gmail.com</a>
<a href=""mailto:l.a.urag.lo.a.iza@gmail.com"">l.a.urag.lo.a.iza@gmail.com</a>
<a href=""mailto:l.au.r.a.glo.a.i.z.a@gmail.com"">l.au.r.a.glo.a.i.z.a@gmail.com</a>
<a href=""mailto:lauraglo.a.iza@gmail.com"">lauraglo.a.iza@gmail.com</a>
<a href=""mailto:l.au.rag.lo.a.iza@gmail.com"">l.au.rag.lo.a.iza@gmail.com</a>
<a href=""mailto:l.au.r.ag.l.o.a.iza@gmail.com"">l.au.r.ag.l.o.a.iza@gmail.com</a>
<a href=""mailto:l.a.ura.gl.o.a.i.z.a@gmail.com"">l.a.ura.gl.o.a.i.z.a@gmail.com</a>
<a href=""mailto:l.aurag.l.oa.iza@gmail.com"">l.aurag.l.oa.iza@gmail.com</a>
<a href=""mailto:la.u.rag.l.oa.iza@gmail.com"">la.u.rag.l.oa.iza@gmail.com</a>
<a href=""mailto:l.aur.ag.l.oa.iza@gmail.com"">l.aur.ag.l.oa.iza@gmail.com</a>
<a href=""mailto:la.ura.gl.oa.iz.a@gmail.com"">la.ura.gl.oa.iz.a@gmail.com</a>
<a href=""mailto:lau.r.a.g.loai.z.a@gmail.com"">lau.r.a.g.loai.z.a@gmail.com</a>
<a href=""mailto:l.a.ur.aglo.a.i.za@gmail.com"">l.a.ur.aglo.a.i.za@gmail.com</a>
<a href=""mailto:la.u.ra.gl.o.a.i.z.a@gmail.com"">la.u.ra.gl.o.a.i.z.a@gmail.com</a>
<a href=""mailto:laur.a.gloaiz.a@gmail.com"">laur.a.gloaiz.a@gmail.com</a>
<a href=""mailto:l.a.uragl.oai.za@gmail.com"">l.a.uragl.oai.za@gmail.com</a>
<a href=""mailto:l.a.u.r.agl.o.ai.za@gmail.com"">l.a.u.r.agl.o.ai.za@gmail.com</a>
<a href=""mailto:l.aurag.loa.iza@gmail.com"">l.aurag.loa.iza@gmail.com</a>
<a href=""mailto:l.a.ur.a.g.l.o.a.i.za@gmail.com"">l.a.ur.a.g.l.o.a.i.za@gmail.com</a>
<a href=""mailto:la.u.r.a.g.l.o.ai.z.a@gmail.com"">la.u.r.a.g.l.o.ai.z.a@gmail.com</a>
<a href=""mailto:l.a.ura.gloa.iza@gmail.com"">l.a.ura.gloa.iza@gmail.com</a>
<a href=""mailto:l.aur.a.g.loai.za@gmail.com"">l.aur.a.g.loai.za@gmail.com</a>
<a href=""mailto:l.a.ur.a.g.loai.za@gmail.com"">l.a.ur.a.g.loai.za@gmail.com</a>
<a href=""mailto:lau.r.a.g.lo.aiz.a@gmail.com"">lau.r.a.g.lo.aiz.a@gmail.com</a>
<a href=""mailto:lau.ra.g.l.oa.i.z.a@gmail.com"">lau.ra.g.l.oa.i.z.a@gmail.com</a>
<a href=""mailto:l.a.u.rag.lo.a.iz.a@gmail.com"">l.a.u.rag.lo.a.iz.a@gmail.com</a>
<a href=""mailto:la.u.ragl.o.aiza@gmail.com"">la.u.ragl.o.aiza@gmail.com</a>
<a href=""mailto:l.aur.a.g.lo.a.iz.a@gmail.com"">l.aur.a.g.lo.a.iz.a@gmail.com</a>
<a href=""mailto:la.ur.a.g.l.o.ai.za@gmail.com"">la.ur.a.g.l.o.ai.za@gmail.com</a>
<a href=""mailto:la.u.r.aglo.aiza@gmail.com"">la.u.r.aglo.aiza@gmail.com</a>
<a href=""mailto:l.au.ragl.o.a.i.za@gmail.com"">l.au.ragl.o.a.i.za@gmail.com</a>
<a href=""mailto:la.u.r.agloaiza@gmail.com"">la.u.r.agloaiza@gmail.com</a>
<a href=""mailto:laura.glo.aiza@gmail.com"">laura.glo.aiza@gmail.com</a>
<a href=""mailto:lau.r.a.gl.oai.z.a@gmail.com"">lau.r.a.gl.oai.z.a@gmail.com</a>
<a href=""mailto:l.a.u.r.a.gloaiz.a@gmail.com"">l.a.u.r.a.gloaiz.a@gmail.com</a>
<a href=""mailto:laur.a.g.l.o.a.iz.a@gmail.com"">laur.a.g.l.o.a.iz.a@gmail.com</a>
<a href=""mailto:la.u.r.agl.oaiza@gmail.com"">la.u.r.agl.oaiza@gmail.com</a>
<a href=""mailto:la.u.r.ag.loai.za@gmail.com"">la.u.r.ag.loai.za@gmail.com</a>
<a href=""mailto:laur.a.g.l.oa.i.za@gmail.com"">laur.a.g.l.oa.i.za@gmail.com</a>
<a href=""mailto:la.u.r.a.glo.a.iza@gmail.com"">la.u.r.a.glo.a.iza@gmail.com</a>
<a href=""mailto:la.u.ra.gl.oai.z.a@gmail.com"">la.u.ra.gl.oai.z.a@gmail.com</a>
<a href=""mailto:lau.ra.gloa.iz.a@gmail.com"">lau.ra.gloa.iz.a@gmail.com</a>
<a href=""mailto:l.a.u.r.aglo.a.iza@gmail.com"">l.a.u.r.aglo.a.iza@gmail.com</a>
<a href=""mailto:l.a.u.r.a.gl.o.aiz.a@gmail.com"">l.a.u.r.a.gl.o.aiz.a@gmail.com</a>
<a href=""mailto:lau.rag.loa.iz.a@gmail.com"">lau.rag.loa.iz.a@gmail.com</a>
<a href=""mailto:l.a.ur.ag.loa.iza@gmail.com"">l.a.ur.ag.loa.iza@gmail.com</a>
<a href=""mailto:la.ura.glo.ai.z.a@gmail.com"">la.ura.glo.ai.z.a@gmail.com</a>
<a href=""mailto:la.u.r.agl.o.aiz.a@gmail.com"">la.u.r.agl.o.aiz.a@gmail.com</a>
<a href=""mailto:l.a.u.r.a.g.l.o.ai.z.a@gmail.com"">l.a.u.r.a.g.l.o.ai.z.a@gmail.com</a>
<a href=""mailto:lau.r.a.g.l.oa.iza@gmail.com"">lau.r.a.g.l.oa.iza@gmail.com</a>
<a href=""mailto:l.a.ura.g.l.oaiza@gmail.com"">l.a.ura.g.l.oaiza@gmail.com</a>
<a href=""mailto:l.au.r.a.g.l.o.aiz.a@gmail.com"">l.au.r.a.g.l.o.aiz.a@gmail.com</a>
<a href=""mailto:l.au.r.ag.loaiz.a@gmail.com"">l.au.r.ag.loaiz.a@gmail.com</a>
<a href=""mailto:l.au.raglo.a.iz.a@gmail.com"">l.au.raglo.a.iz.a@gmail.com</a>
<a href=""mailto:l.a.u.ra.g.l.o.aiza@gmail.com"">l.a.u.ra.g.l.o.aiza@gmail.com</a>
<a href=""mailto:l.au.ra.gloai.z.a@gmail.com"">l.au.ra.gloai.z.a@gmail.com</a>
<a href=""mailto:l.aura.g.loai.za@gmail.com"">l.aura.g.loai.za@gmail.com</a>
<a href=""mailto:l.au.ragl.o.a.i.z.a@gmail.com"">l.au.ragl.o.a.i.z.a@gmail.com</a>
<a href=""mailto:l.a.ur.ag.loa.i.za@gmail.com"">l.a.ur.ag.loa.i.za@gmail.com</a>
<a href=""mailto:l.au.ra.g.loai.z.a@gmail.com"">l.au.ra.g.loai.z.a@gmail.com</a>
<a href=""mailto:la.u.r.a.gl.o.ai.za@gmail.com"">la.u.r.a.gl.o.ai.za@gmail.com</a>
<a href=""mailto:l.au.r.a.gl.oaiza@gmail.com"">l.au.r.a.gl.oaiza@gmail.com</a>
<a href=""mailto:la.u.r.a.glo.aiza@gmail.com"">la.u.r.a.glo.aiza@gmail.com</a>
<a href=""mailto:l.au.ra.g.l.oai.za@gmail.com"">l.au.ra.g.l.oai.za@gmail.com</a>
<a href=""mailto:lau.ra.g.loaiza@gmail.com"">lau.ra.g.loaiza@gmail.com</a>
<a href=""mailto:lau.ra.gl.o.a.iz.a@gmail.com"">lau.ra.gl.o.a.iz.a@gmail.com</a>
<a href=""mailto:l.au.ra.gl.oa.i.z.a@gmail.com"">l.au.ra.gl.oa.i.z.a@gmail.com</a>
<a href=""mailto:la.ura.g.l.o.a.i.z.a@gmail.com"">la.ura.g.l.o.a.i.z.a@gmail.com</a>
<a href=""mailto:l.a.ura.g.lo.ai.za@gmail.com"">l.a.ura.g.lo.ai.za@gmail.com</a>
<a href=""mailto:laura.g.loa.i.za@gmail.com"">laura.g.loa.i.za@gmail.com</a>
<a href=""mailto:l.aura.g.lo.a.iza@gmail.com"">l.aura.g.lo.a.iza@gmail.com</a>
<a href=""mailto:la.u.r.ag.loa.iza@gmail.com"">la.u.r.ag.loa.iza@gmail.com</a>
<a href=""mailto:l.au.r.a.gloaiza@gmail.com"">l.au.r.a.gloaiza@gmail.com</a>
<a href=""mailto:l.au.r.a.g.loaiz.a@gmail.com"">l.au.r.a.g.loaiz.a@gmail.com</a>
<a href=""mailto:damianmiran@gmail.com"">damianmiran@gmail.com</a>
<a href=""mailto:d.am.ia.n.m.ira.n@gmail.com"">d.am.ia.n.m.ira.n@gmail.com</a>
<a href=""mailto:d.a.m.i.a.n.m.iran@gmail.com"">d.a.m.i.a.n.m.iran@gmail.com</a>
<a href=""mailto:damianm.i.r.a.n@gmail.com"">damianm.i.r.a.n@gmail.com</a>
<a href=""mailto:d.ami.an.mira.n@gmail.com"">d.ami.an.mira.n@gmail.com</a>
<a href=""mailto:d.am.ia.n.miran@gmail.com"">d.am.ia.n.miran@gmail.com</a>
<a href=""mailto:d.a.m.ia.nmira.n@gmail.com"">d.a.m.ia.nmira.n@gmail.com</a>
<a href=""mailto:dami.a.n.miran@gmail.com"">dami.a.n.miran@gmail.com</a>
<a href=""mailto:dami.anmiran@gmail.com"">dami.anmiran@gmail.com</a>
<a href=""mailto:d.a.m.ian.m.i.ra.n@gmail.com"">d.a.m.ian.m.i.ra.n@gmail.com</a>
<a href=""mailto:d.am.i.a.nmi.ran@gmail.com"">d.am.i.a.nmi.ran@gmail.com</a>
<a href=""mailto:da.mi.an.m.i.r.an@gmail.com"">da.mi.an.m.i.r.an@gmail.com</a>
<a href=""mailto:da.m.ian.mi.r.an@gmail.com"">da.m.ian.mi.r.an@gmail.com</a>
<a href=""mailto:dam.i.a.nmi.ra.n@gmail.com"">dam.i.a.nmi.ra.n@gmail.com</a>
<a href=""mailto:d.am.ia.n.m.i.ran@gmail.com"">d.am.ia.n.m.i.ran@gmail.com</a>
<a href=""mailto:d.amia.nm.iran@gmail.com"">d.amia.nm.iran@gmail.com</a>
<a href=""mailto:d.am.i.a.n.mir.an@gmail.com"">d.am.i.a.n.mir.an@gmail.com</a>
<a href=""mailto:d.amian.miran@gmail.com"">d.amian.miran@gmail.com</a>
<a href=""mailto:d.ami.a.n.mir.a.n@gmail.com"">d.ami.a.n.mir.a.n@gmail.com</a>
<a href=""mailto:d.am.ia.n.mir.a.n@gmail.com"">d.am.ia.n.mir.a.n@gmail.com</a>
<a href=""mailto:dami.a.n.m.i.r.an@gmail.com"">dami.a.n.m.i.r.an@gmail.com</a>
<a href=""mailto:dam.i.a.nmir.an@gmail.com"">dam.i.a.nmir.an@gmail.com</a>
<a href=""mailto:d.a.m.ia.nmi.r.a.n@gmail.com"">d.a.m.ia.nmi.r.a.n@gmail.com</a>
<a href=""mailto:d.a.mianmi.r.a.n@gmail.com"">d.a.mianmi.r.a.n@gmail.com</a>
<a href=""mailto:d.amia.n.mi.r.a.n@gmail.com"">d.amia.n.mi.r.a.n@gmail.com</a>
<a href=""mailto:d.a.m.i.a.n.m.i.r.an@gmail.com"">d.a.m.i.a.n.m.i.r.an@gmail.com</a>
<a href=""mailto:d.am.i.a.n.m.ira.n@gmail.com"">d.am.i.a.n.m.ira.n@gmail.com</a>
<a href=""mailto:d.a.m.i.anmir.an@gmail.com"">d.a.m.i.anmir.an@gmail.com</a>
<a href=""mailto:dam.ia.n.m.iran@gmail.com"">dam.ia.n.m.iran@gmail.com</a>
<a href=""mailto:da.m.ia.n.mi.ra.n@gmail.com"">da.m.ia.n.mi.ra.n@gmail.com</a>
<a href=""mailto:da.mia.n.m.i.r.a.n@gmail.com"">da.mia.n.m.i.r.a.n@gmail.com</a>
<a href=""mailto:dam.i.a.nm.iran@gmail.com"">dam.i.a.nm.iran@gmail.com</a>
<a href=""mailto:da.mi.a.nmi.r.a.n@gmail.com"">da.mi.a.nmi.r.a.n@gmail.com</a>
<a href=""mailto:d.am.i.a.n.mi.ra.n@gmail.com"">d.am.i.a.n.mi.ra.n@gmail.com</a>
<a href=""mailto:d.a.mia.nm.ira.n@gmail.com"">d.a.mia.nm.ira.n@gmail.com</a>
<a href=""mailto:da.m.ianm.ir.a.n@gmail.com"">da.m.ianm.ir.a.n@gmail.com</a>
<a href=""mailto:da.m.i.a.n.m.i.r.a.n@gmail.com"">da.m.i.a.n.m.i.r.a.n@gmail.com</a>
<a href=""mailto:dam.ian.mi.ran@gmail.com"">dam.ian.mi.ran@gmail.com</a>
<a href=""mailto:da.m.i.a.n.mi.ran@gmail.com"">da.m.i.a.n.mi.ran@gmail.com</a>
<a href=""mailto:d.am.i.a.nm.ira.n@gmail.com"">d.am.i.a.nm.ira.n@gmail.com</a>
<a href=""mailto:dam.ia.nm.iran@gmail.com"">dam.ia.nm.iran@gmail.com</a>
<a href=""mailto:dam.ia.n.miran@gmail.com"">dam.ia.n.miran@gmail.com</a>
<a href=""mailto:d.am.i.a.n.m.i.r.a.n@gmail.com"">d.am.i.a.n.m.i.r.a.n@gmail.com</a>
<a href=""mailto:dam.ianm.i.r.a.n@gmail.com"">dam.ianm.i.r.a.n@gmail.com</a>
<a href=""mailto:d.a.mian.m.ira.n@gmail.com"">d.a.mian.m.ira.n@gmail.com</a>
<a href=""mailto:d.a.m.ia.n.mir.an@gmail.com"">d.a.m.ia.n.mir.an@gmail.com</a>
<a href=""mailto:dami.a.n.mir.a.n@gmail.com"">dami.a.n.mir.a.n@gmail.com</a>
<a href=""mailto:d.ami.anmi.ra.n@gmail.com"">d.ami.anmi.ra.n@gmail.com</a>
<a href=""mailto:d.a.m.i.an.mir.an@gmail.com"">d.a.m.i.an.mir.an@gmail.com</a>
<a href=""mailto:d.amia.nmi.r.an@gmail.com"">d.amia.nmi.r.an@gmail.com</a>
<a href=""mailto:dami.a.nm.i.ran@gmail.com"">dami.a.nm.i.ran@gmail.com</a>
<a href=""mailto:da.m.i.a.n.mi.r.an@gmail.com"">da.m.i.a.n.mi.r.an@gmail.com</a>
<a href=""mailto:d.a.m.i.a.n.mir.a.n@gmail.com"">d.a.m.i.a.n.mir.a.n@gmail.com</a>
<a href=""mailto:d.ami.a.nmiran@gmail.com"">d.ami.a.nmiran@gmail.com</a>
<a href=""mailto:d.ami.a.n.mi.r.a.n@gmail.com"">d.ami.a.n.mi.r.a.n@gmail.com</a>
<a href=""mailto:d.ami.a.n.miran@gmail.com"">d.ami.a.n.miran@gmail.com</a>
<a href=""mailto:d.a.m.ia.n.miran@gmail.com"">d.a.m.ia.n.miran@gmail.com</a>
<a href=""mailto:d.ami.an.m.iran@gmail.com"">d.ami.an.m.iran@gmail.com</a>
<a href=""mailto:dam.ia.n.m.ir.a.n@gmail.com"">dam.ia.n.m.ir.a.n@gmail.com</a>
<a href=""mailto:d.a.mian.m.ir.a.n@gmail.com"">d.a.mian.m.ir.a.n@gmail.com</a>
<a href=""mailto:dam.i.anmi.r.an@gmail.com"">dam.i.anmi.r.an@gmail.com</a>
<a href=""mailto:dam.ian.mi.r.an@gmail.com"">dam.ian.mi.r.an@gmail.com</a>
<a href=""mailto:dam.ia.nm.i.r.a.n@gmail.com"">dam.ia.nm.i.r.a.n@gmail.com</a>
<a href=""mailto:d.a.mi.a.nmi.r.an@gmail.com"">d.a.mi.a.nmi.r.an@gmail.com</a>
<a href=""mailto:d.ami.anmi.ran@gmail.com"">d.ami.anmi.ran@gmail.com</a>
<a href=""mailto:d.a.mianmi.r.an@gmail.com"">d.a.mianmi.r.an@gmail.com</a>
<a href=""mailto:da.m.i.a.n.m.ir.an@gmail.com"">da.m.i.a.n.m.ir.an@gmail.com</a>
<a href=""mailto:d.am.i.a.n.miran@gmail.com"">d.am.i.a.n.miran@gmail.com</a>
<a href=""mailto:d.ami.an.mir.an@gmail.com"">d.ami.an.mir.an@gmail.com</a>
<a href=""mailto:d.a.m.i.anm.ira.n@gmail.com"">d.a.m.i.anm.ira.n@gmail.com</a>
<a href=""mailto:da.m.i.anmi.r.an@gmail.com"">da.m.i.anmi.r.an@gmail.com</a>
<a href=""mailto:dam.i.an.m.i.ra.n@gmail.com"">dam.i.an.m.i.ra.n@gmail.com</a>
<a href=""mailto:d.am.i.an.miran@gmail.com"">d.am.i.an.miran@gmail.com</a>
<a href=""mailto:damian.mi.ran@gmail.com"">damian.mi.ran@gmail.com</a>
<a href=""mailto:damian.m.ir.a.n@gmail.com"">damian.m.ir.a.n@gmail.com</a>
<a href=""mailto:dami.an.mira.n@gmail.com"">dami.an.mira.n@gmail.com</a>
<a href=""mailto:d.ami.an.m.i.ran@gmail.com"">d.ami.an.m.i.ran@gmail.com</a>
<a href=""mailto:d.am.i.anmir.a.n@gmail.com"">d.am.i.anmir.a.n@gmail.com</a>
<a href=""mailto:d.a.m.ianmir.an@gmail.com"">d.a.m.ianmir.an@gmail.com</a>
<a href=""mailto:d.a.mia.nmi.ra.n@gmail.com"">d.a.mia.nmi.ra.n@gmail.com</a>
<a href=""mailto:dam.i.a.n.mir.an@gmail.com"">dam.i.a.n.mir.an@gmail.com</a>
<a href=""mailto:d.a.mia.n.m.i.ra.n@gmail.com"">d.a.mia.n.m.i.ra.n@gmail.com</a>
<a href=""mailto:da.m.i.anmir.an@gmail.com"">da.m.i.anmir.an@gmail.com</a>
<a href=""mailto:d.amia.nmir.a.n@gmail.com"">d.amia.nmir.a.n@gmail.com</a>
<a href=""mailto:da.m.ian.mi.ran@gmail.com"">da.m.ian.mi.ran@gmail.com</a>
<a href=""mailto:da.mi.a.n.m.ir.an@gmail.com"">da.mi.a.n.m.ir.an@gmail.com</a>
<a href=""mailto:d.a.mi.an.m.i.r.a.n@gmail.com"">d.a.mi.an.m.i.r.a.n@gmail.com</a>
<a href=""mailto:d.am.i.a.nmira.n@gmail.com"">d.am.i.a.nmira.n@gmail.com</a>
<a href=""mailto:d.a.mi.an.mi.r.an@gmail.com"">d.a.mi.an.mi.r.an@gmail.com</a>
<a href=""mailto:dami.anm.i.ran@gmail.com"">dami.anm.i.ran@gmail.com</a>
<a href=""mailto:da.m.ianmi.r.an@gmail.com"">da.m.ianmi.r.an@gmail.com</a>
<a href=""mailto:da.m.ian.mira.n@gmail.com"">da.m.ian.mira.n@gmail.com</a>
<a href=""mailto:d.a.m.ia.n.m.ira.n@gmail.com"">d.a.m.ia.n.m.ira.n@gmail.com</a>
<a href=""mailto:d.a.mia.n.mi.r.a.n@gmail.com"">d.a.mia.n.mi.r.a.n@gmail.com</a>
<a href=""mailto:d.a.mi.anmi.ran@gmail.com"">d.a.mi.anmi.ran@gmail.com</a>
<a href=""mailto:d.amia.n.m.i.ra.n@gmail.com"">d.amia.n.m.i.ra.n@gmail.com</a>
<a href=""mailto:dam.i.an.mi.r.an@gmail.com"">dam.i.an.mi.r.an@gmail.com</a>
<a href=""mailto:dam.ianmira.n@gmail.com"">dam.ianmira.n@gmail.com</a>
<a href=""mailto:da.mi.a.n.m.i.r.an@gmail.com"">da.mi.a.n.m.i.r.an@gmail.com</a>
<a href=""mailto:d.am.i.a.nmi.r.an@gmail.com"">d.am.i.a.nmi.r.an@gmail.com</a>
<a href=""mailto:d.a.m.ian.mi.ra.n@gmail.com"">d.a.m.ian.mi.ra.n@gmail.com</a>
<a href=""mailto:da.m.ianmi.ran@gmail.com"">da.m.ianmi.ran@gmail.com</a>
<a href=""mailto:da.mi.a.n.m.i.ran@gmail.com"">da.mi.a.n.m.i.ran@gmail.com</a>
<a href=""mailto:dam.i.an.mir.a.n@gmail.com"">dam.i.an.mir.a.n@gmail.com</a>
<a href=""mailto:da.mi.anm.i.r.a.n@gmail.com"">da.mi.anm.i.r.a.n@gmail.com</a>
<a href=""mailto:da.m.ia.nmir.a.n@gmail.com"">da.m.ia.nmir.a.n@gmail.com</a>
<a href=""mailto:da.m.i.a.nm.i.ran@gmail.com"">da.m.i.a.nm.i.ran@gmail.com</a>
<a href=""mailto:d.a.mianmir.a.n@gmail.com"">d.a.mianmir.a.n@gmail.com</a>
<a href=""mailto:d.a.mi.an.m.i.ran@gmail.com"">d.a.mi.an.m.i.ran@gmail.com</a>
<a href=""mailto:d.a.mianm.ir.an@gmail.com"">d.a.mianm.ir.an@gmail.com</a>
<a href=""mailto:dam.i.an.mi.ran@gmail.com"">dam.i.an.mi.ran@gmail.com</a>
<a href=""mailto:dam.ianmi.r.a.n@gmail.com"">dam.ianmi.r.a.n@gmail.com</a>
<a href=""mailto:d.ami.a.nmir.a.n@gmail.com"">d.ami.a.nmir.a.n@gmail.com</a>
<a href=""mailto:da.m.ia.n.miran@gmail.com"">da.m.ia.n.miran@gmail.com</a>
<a href=""mailto:d.am.ianmi.r.an@gmail.com"">d.am.ianmi.r.an@gmail.com</a>
<a href=""mailto:dam.ian.m.ir.a.n@gmail.com"">dam.ian.m.ir.a.n@gmail.com</a>
<a href=""mailto:d.ami.an.m.ir.a.n@gmail.com"">d.ami.an.m.ir.a.n@gmail.com</a>
<a href=""mailto:da.mi.a.nm.ira.n@gmail.com"">da.mi.a.nm.ira.n@gmail.com</a>
<a href=""mailto:dami.a.nmira.n@gmail.com"">dami.a.nmira.n@gmail.com</a>
<a href=""mailto:da.mianm.i.r.a.n@gmail.com"">da.mianm.i.r.a.n@gmail.com</a>
<a href=""mailto:d.amia.nmir.an@gmail.com"">d.amia.nmir.an@gmail.com</a>
<a href=""mailto:d.a.m.i.an.m.iran@gmail.com"">d.a.m.i.an.m.iran@gmail.com</a>
<a href=""mailto:d.a.m.ian.m.ira.n@gmail.com"">d.a.m.ian.m.ira.n@gmail.com</a>
<a href=""mailto:d.amia.nm.ir.an@gmail.com"">d.amia.nm.ir.an@gmail.com</a>
<a href=""mailto:damia.n.m.ir.a.n@gmail.com"">damia.n.m.ir.a.n@gmail.com</a>
<a href=""mailto:d.am.ia.nm.iran@gmail.com"">d.am.ia.nm.iran@gmail.com</a>
<a href=""mailto:d.am.ia.nmira.n@gmail.com"">d.am.ia.nmira.n@gmail.com</a>
<a href=""mailto:d.ami.an.mi.r.an@gmail.com"">d.ami.an.mi.r.an@gmail.com</a>
<a href=""mailto:d.a.mia.nm.i.r.an@gmail.com"">d.a.mia.nm.i.r.an@gmail.com</a>
<a href=""mailto:d.a.mi.an.m.ir.an@gmail.com"">d.a.mi.an.m.ir.an@gmail.com</a>
<a href=""mailto:d.am.ia.nm.ir.a.n@gmail.com"">d.am.ia.nm.ir.a.n@gmail.com</a>
<a href=""mailto:d.amia.n.mi.ra.n@gmail.com"">d.amia.n.mi.ra.n@gmail.com</a>
<a href=""mailto:damia.n.mi.r.an@gmail.com"">damia.n.mi.r.an@gmail.com</a>
<a href=""mailto:d.amian.mir.a.n@gmail.com"">d.amian.mir.a.n@gmail.com</a>
<a href=""mailto:dami.anm.iran@gmail.com"">dami.anm.iran@gmail.com</a>
<a href=""mailto:d.amianmira.n@gmail.com"">d.amianmira.n@gmail.com</a>
<a href=""mailto:dami.a.nmi.r.a.n@gmail.com"">dami.a.nmi.r.a.n@gmail.com</a>
<a href=""mailto:d.a.mianmi.ra.n@gmail.com"">d.a.mianmi.ra.n@gmail.com</a>
<a href=""mailto:d.am.ia.n.m.i.r.a.n@gmail.com"">d.am.ia.n.m.i.r.a.n@gmail.com</a>
<a href=""mailto:d.a.mi.a.n.m.iran@gmail.com"">d.a.mi.a.n.m.iran@gmail.com</a>
<a href=""mailto:dam.i.anm.i.ra.n@gmail.com"">dam.i.anm.i.ra.n@gmail.com</a>
<a href=""mailto:d.a.m.i.a.n.m.i.ran@gmail.com"">d.a.m.i.a.n.m.i.ran@gmail.com</a>
<a href=""mailto:d.a.mi.a.n.mi.r.an@gmail.com"">d.a.mi.a.n.mi.r.an@gmail.com</a>
<a href=""mailto:d.amianmir.a.n@gmail.com"">d.amianmir.a.n@gmail.com</a>
<a href=""mailto:da.m.i.an.mi.ra.n@gmail.com"">da.m.i.an.mi.ra.n@gmail.com</a>
<a href=""mailto:da.m.i.a.nmira.n@gmail.com"">da.m.i.a.nmira.n@gmail.com</a>
<a href=""mailto:dami.a.nmi.r.an@gmail.com"">dami.a.nmi.r.an@gmail.com</a>
<a href=""mailto:d.amianmir.an@gmail.com"">d.amianmir.an@gmail.com</a>
<a href=""mailto:d.a.m.ia.nm.i.r.an@gmail.com"">d.a.m.ia.nm.i.r.an@gmail.com</a>
<a href=""mailto:da.m.ianm.ira.n@gmail.com"">da.m.ianm.ira.n@gmail.com</a>
<a href=""mailto:d.am.ian.mir.a.n@gmail.com"">d.am.ian.mir.a.n@gmail.com</a>
<a href=""mailto:dam.ian.m.i.ra.n@gmail.com"">dam.ian.m.i.ra.n@gmail.com</a>
<a href=""mailto:d.a.mian.mi.ran@gmail.com"">d.a.mian.mi.ran@gmail.com</a>
<a href=""mailto:da.mia.n.m.i.ra.n@gmail.com"">da.mia.n.m.i.ra.n@gmail.com</a>
<a href=""mailto:da.mi.a.n.m.iran@gmail.com"">da.mi.a.n.m.iran@gmail.com</a>
<a href=""mailto:d.amia.nm.i.r.an@gmail.com"">d.amia.nm.i.r.an@gmail.com</a>
<a href=""mailto:d.am.ia.n.mir.an@gmail.com"">d.am.ia.n.mir.an@gmail.com</a>
<a href=""mailto:d.a.mia.n.m.i.r.a.n@gmail.com"">d.a.mia.n.m.i.r.a.n@gmail.com</a>
<a href=""mailto:da.m.i.a.n.m.iran@gmail.com"">da.m.i.a.n.m.iran@gmail.com</a>
<a href=""mailto:da.m.i.anmi.r.a.n@gmail.com"">da.m.i.anmi.r.a.n@gmail.com</a>
<a href=""mailto:da.m.ian.m.i.ran@gmail.com"">da.m.ian.m.i.ran@gmail.com</a>
<a href=""mailto:d.am.ia.n.m.iran@gmail.com"">d.am.ia.n.m.iran@gmail.com</a>
<a href=""mailto:dam.i.a.nmir.a.n@gmail.com"">dam.i.a.nmir.a.n@gmail.com</a>
<a href=""mailto:d.a.mi.a.n.m.i.ra.n@gmail.com"">d.a.mi.a.n.m.i.ra.n@gmail.com</a>
<a href=""mailto:d.ami.a.nmi.r.an@gmail.com"">d.ami.a.nmi.r.an@gmail.com</a>
<a href=""mailto:damia.nm.i.r.a.n@gmail.com"">damia.nm.i.r.a.n@gmail.com</a>
<a href=""mailto:da.mia.n.mi.r.an@gmail.com"">da.mia.n.mi.r.an@gmail.com</a>
<a href=""mailto:da.mia.n.mi.r.a.n@gmail.com"">da.mia.n.mi.r.a.n@gmail.com</a>
<a href=""mailto:d.a.mi.a.n.mi.r.a.n@gmail.com"">d.a.mi.a.n.mi.r.a.n@gmail.com</a>
<a href=""mailto:d.a.m.ianm.i.ran@gmail.com"">d.a.m.ianm.i.ran@gmail.com</a>
<a href=""mailto:d.a.m.i.a.n.m.ira.n@gmail.com"">d.a.m.i.a.n.m.ira.n@gmail.com</a>
<a href=""mailto:da.mianmi.ran@gmail.com"">da.mianmi.ran@gmail.com</a>
<a href=""mailto:dam.ianmi.r.an@gmail.com"">dam.ianmi.r.an@gmail.com</a>
<a href=""mailto:da.m.ia.nmi.r.an@gmail.com"">da.m.ia.nmi.r.an@gmail.com</a>
<a href=""mailto:d.am.ia.nmiran@gmail.com"">d.am.ia.nmiran@gmail.com</a>
<a href=""mailto:d.am.ia.nm.i.ra.n@gmail.com"">d.am.ia.nm.i.ra.n@gmail.com</a>
<a href=""mailto:da.mi.anmi.ra.n@gmail.com"">da.mi.anmi.ra.n@gmail.com</a>
<a href=""mailto:d.a.mia.nm.i.r.a.n@gmail.com"">d.a.mia.nm.i.r.a.n@gmail.com</a>
<a href=""mailto:d.amian.m.iran@gmail.com"">d.amian.m.iran@gmail.com</a>
<a href=""mailto:da.m.ia.nmi.ran@gmail.com"">da.m.ia.nmi.ran@gmail.com</a>
<a href=""mailto:d.a.mi.an.mir.an@gmail.com"">d.a.mi.an.mir.an@gmail.com</a>
<a href=""mailto:d.am.ianmir.a.n@gmail.com"">d.am.ianmir.a.n@gmail.com</a>
<a href=""mailto:d.a.m.i.an.m.i.r.a.n@gmail.com"">d.a.m.i.an.m.i.r.a.n@gmail.com</a>
<a href=""mailto:d.ami.a.n.mi.r.an@gmail.com"">d.ami.a.n.mi.r.an@gmail.com</a>
<a href=""mailto:d.am.ianmiran@gmail.com"">d.am.ianmiran@gmail.com</a>
<a href=""mailto:da.mian.m.ir.an@gmail.com"">da.mian.m.ir.an@gmail.com</a>
<a href=""mailto:d.a.m.i.a.n.m.i.ra.n@gmail.com"">d.a.m.i.a.n.m.i.ra.n@gmail.com</a>
<a href=""mailto:d.am.i.a.nm.i.r.an@gmail.com"">d.am.i.a.nm.i.r.an@gmail.com</a>
<a href=""mailto:d.am.ian.miran@gmail.com"">d.am.ian.miran@gmail.com</a>
<a href=""mailto:damian.m.iran@gmail.com"">damian.m.iran@gmail.com</a>
<a href=""mailto:damia.n.mi.ra.n@gmail.com"">damia.n.mi.ra.n@gmail.com</a>
<a href=""mailto:d.a.m.ia.nm.iran@gmail.com"">d.a.m.ia.nm.iran@gmail.com</a>
<a href=""mailto:da.mi.an.mira.n@gmail.com"">da.mi.an.mira.n@gmail.com</a>
<a href=""mailto:d.a.mia.n.mi.ra.n@gmail.com"">d.a.mia.n.mi.ra.n@gmail.com</a>
<a href=""mailto:d.a.m.i.an.mi.ran@gmail.com"">d.a.m.i.an.mi.ran@gmail.com</a>
<a href=""mailto:dam.ia.nmir.an@gmail.com"">dam.ia.nmir.an@gmail.com</a>
<a href=""mailto:d.am.i.a.nm.ir.a.n@gmail.com"">d.am.i.a.nm.ir.a.n@gmail.com</a>
<a href=""mailto:da.mianm.ir.an@gmail.com"">da.mianm.ir.an@gmail.com</a>
<a href=""mailto:d.ami.a.n.m.i.ran@gmail.com"">d.ami.a.n.m.i.ran@gmail.com</a>
<a href=""mailto:dam.i.a.n.mi.r.an@gmail.com"">dam.i.a.n.mi.r.an@gmail.com</a>
<a href=""mailto:da.m.ia.n.mi.ran@gmail.com"">da.m.ia.n.mi.ran@gmail.com</a>
<a href=""mailto:lilian.mercosoft@gmail.com"">lilian.mercosoft@gmail.com</a>
<a href=""mailto:lilia.n..m.er.c.osoft@gmail.com"">lilia.n..m.er.c.osoft@gmail.com</a>
<a href=""mailto:l.i.lian...m.e.r.c.o.s.of.t@gmail.com"">l.i.lian...m.e.r.c.o.s.of.t@gmail.com</a>
<a href=""mailto:l.i.l.ian..m.e.rc.o.soft@gmail.com"">l.i.l.ian..m.e.rc.o.soft@gmail.com</a>
<a href=""mailto:l.i.l.i.a.n...me.rc.o.so.ft@gmail.com"">l.i.l.i.a.n...me.rc.o.so.ft@gmail.com</a>
<a href=""mailto:l.i.l.ia.n.merc.o.s.o.ft@gmail.com"">l.i.l.ia.n.merc.o.s.o.ft@gmail.com</a>
<a href=""mailto:l.i.l.ia.n.m.er.coso.f.t@gmail.com"">l.i.l.ia.n.m.er.coso.f.t@gmail.com</a>
<a href=""mailto:lilia.n..m.e.r.cos.o.ft@gmail.com"">lilia.n..m.e.r.cos.o.ft@gmail.com</a>
<a href=""mailto:l.i.l.ia.n..me.r.cos.oft@gmail.com"">l.i.l.ia.n..me.r.cos.oft@gmail.com</a>
<a href=""mailto:lil.i.a.n...m.e.r.cosof.t@gmail.com"">lil.i.a.n...m.e.r.cosof.t@gmail.com</a>
<a href=""mailto:li.l.i.an..m.e.rc.o.soft@gmail.com"">li.l.i.an..m.e.rc.o.soft@gmail.com</a>
<a href=""mailto:li.lia.n...mer.coso.f.t@gmail.com"">li.lia.n...mer.coso.f.t@gmail.com</a>
<a href=""mailto:l.i.lian...me.r.c.o.s.oft@gmail.com"">l.i.lian...me.r.c.o.s.oft@gmail.com</a>
<a href=""mailto:li.l.i.a.n.m.e.rcos.of.t@gmail.com"">li.l.i.a.n.m.e.rcos.of.t@gmail.com</a>
<a href=""mailto:l.i.l.i.a.n.me.r.co.s.oft@gmail.com"">l.i.l.i.a.n.me.r.co.s.oft@gmail.com</a>
<a href=""mailto:li.l.i.an..m.er.cos.oft@gmail.com"">li.l.i.an..m.er.cos.oft@gmail.com</a>
<a href=""mailto:l.il.i.a.n.m.ercos.o.ft@gmail.com"">l.il.i.a.n.m.ercos.o.ft@gmail.com</a>
<a href=""mailto:l.ilia.n..m.erco.so.f.t@gmail.com"">l.ilia.n..m.erco.so.f.t@gmail.com</a>
<a href=""mailto:lilian...me.rc.os.o.f.t@gmail.com"">lilian...me.rc.os.o.f.t@gmail.com</a>
<a href=""mailto:lili.a.n..me.r.cos.oft@gmail.com"">lili.a.n..me.r.cos.oft@gmail.com</a>
<a href=""mailto:l.i.li.an..me.r.c.os.of.t@gmail.com"">l.i.li.an..me.r.c.os.of.t@gmail.com</a>
<a href=""mailto:li.lian.mer.cos.of.t@gmail.com"">li.lian.mer.cos.of.t@gmail.com</a>
<a href=""mailto:l.i.lia.n...m.e.rco.s.o.f.t@gmail.com"">l.i.lia.n...m.e.rco.s.o.f.t@gmail.com</a>
<a href=""mailto:li.lian...me.r.cos.oft@gmail.com"">li.lian...me.r.cos.oft@gmail.com</a>
<a href=""mailto:l.i.li.a.n..m.e.r.c.oso.ft@gmail.com"">l.i.li.a.n..m.e.r.c.oso.ft@gmail.com</a>
<a href=""mailto:l.i.l.ia.n..m.er.co.soft@gmail.com"">l.i.l.ia.n..m.er.co.soft@gmail.com</a>
<a href=""mailto:l.i.l.i.an.me.rc.o.so.f.t@gmail.com"">l.i.l.i.an.me.rc.o.so.f.t@gmail.com</a>
<a href=""mailto:l.i.li.a.n..me.r.c.os.o.f.t@gmail.com"">l.i.li.a.n..me.r.c.os.o.f.t@gmail.com</a>
<a href=""mailto:li.l.i.a.n..m.ercos.o.f.t@gmail.com"">li.l.i.a.n..m.ercos.o.f.t@gmail.com</a>
<a href=""mailto:li.l.i.an.me.rc.os.o.ft@gmail.com"">li.l.i.an.me.rc.os.o.ft@gmail.com</a>
<a href=""mailto:l.ilian...m.e.r.c.o.s.o.ft@gmail.com"">l.ilian...m.e.r.c.o.s.o.ft@gmail.com</a>
<a href=""mailto:l.i.li.an..me.r.cos.oft@gmail.com"">l.i.li.an..me.r.cos.oft@gmail.com</a>
<a href=""mailto:lil.i.a.n...me.r.cos.o.f.t@gmail.com"">lil.i.a.n...me.r.cos.o.f.t@gmail.com</a>
<a href=""mailto:l.ilia.n.me.rc.o.sof.t@gmail.com"">l.ilia.n.me.rc.o.sof.t@gmail.com</a>
<a href=""mailto:lil.ia.n..m.er.c.o.s.o.f.t@gmail.com"">lil.ia.n..m.er.c.o.s.o.f.t@gmail.com</a>
<a href=""mailto:l.i.lian...m.e.r.c.o.s.o.ft@gmail.com"">l.i.lian...m.e.r.c.o.s.o.ft@gmail.com</a>
<a href=""mailto:lil.ian...m.er.cos.o.ft@gmail.com"">lil.ian...m.er.cos.o.ft@gmail.com</a>
<a href=""mailto:l.ili.a.n...m.e.rc.o.s.o.f.t@gmail.com"">l.ili.a.n...m.e.rc.o.s.o.f.t@gmail.com</a>
<a href=""mailto:li.li.a.n.me.r.c.os.o.f.t@gmail.com"">li.li.a.n.me.r.c.os.o.f.t@gmail.com</a>
<a href=""mailto:lilian..merco.s.o.ft@gmail.com"">lilian..merco.s.o.ft@gmail.com</a>
<a href=""mailto:li.l.i.an.me.rco.s.oft@gmail.com"">li.l.i.an.me.rco.s.oft@gmail.com</a>
<a href=""mailto:li.li.an..m.er.co.sof.t@gmail.com"">li.li.an..m.er.co.sof.t@gmail.com</a>
<a href=""mailto:l.i.li.a.n...m.erc.o.so.ft@gmail.com"">l.i.li.a.n...m.erc.o.so.ft@gmail.com</a>
<a href=""mailto:l.i.l.i.a.n..mercos.o.ft@gmail.com"">l.i.l.i.a.n..mercos.o.ft@gmail.com</a>
<a href=""mailto:l.ili.an..m.e.r.c.o.so.f.t@gmail.com"">l.ili.an..m.e.r.c.o.so.f.t@gmail.com</a>
<a href=""mailto:l.ilia.n..m.e.rc.os.oft@gmail.com"">l.ilia.n..m.e.rc.os.oft@gmail.com</a>
<a href=""mailto:l.il.ian..me.r.c.o.so.ft@gmail.com"">l.il.ian..me.r.c.o.so.ft@gmail.com</a>
<a href=""mailto:l.i.lia.n.merco.soft@gmail.com"">l.i.lia.n.merco.soft@gmail.com</a>
<a href=""mailto:l.i.l.ian.m.e.r.cos.o.f.t@gmail.com"">l.i.l.ian.m.e.r.cos.o.f.t@gmail.com</a>
<a href=""mailto:lili.a.n..me.r.co.soft@gmail.com"">lili.a.n..me.r.co.soft@gmail.com</a>
<a href=""mailto:l.ili.an..m.er.co.s.of.t@gmail.com"">l.ili.an..m.er.co.s.of.t@gmail.com</a>
<a href=""mailto:l.il.i.a.n..m.e.r.c.o.s.o.f.t@gmail.com"">l.il.i.a.n..m.e.r.c.o.s.o.f.t@gmail.com</a>
<a href=""mailto:l.il.i.a.n...m.erc.o.s.o.f.t@gmail.com"">l.il.i.a.n...m.erc.o.s.o.f.t@gmail.com</a>
<a href=""mailto:l.i.lia.n..m.erc.oso.f.t@gmail.com"">l.i.lia.n..m.erc.oso.f.t@gmail.com</a>
<a href=""mailto:l.il.ia.n...m.e.r.cos.oft@gmail.com"">l.il.ia.n...m.e.r.cos.oft@gmail.com</a>
<a href=""mailto:lili.a.n...m.erco.s.of.t@gmail.com"">lili.a.n...m.erco.s.of.t@gmail.com</a>
<a href=""mailto:lili.a.n..mer.co.soft@gmail.com"">lili.a.n..mer.co.soft@gmail.com</a>
<a href=""mailto:li.l.ia.n..me.r.cos.o.f.t@gmail.com"">li.l.ia.n..me.r.cos.o.f.t@gmail.com</a>
<a href=""mailto:l.ili.a.n..me.r.co.so.f.t@gmail.com"">l.ili.a.n..me.r.co.so.f.t@gmail.com</a>
<a href=""mailto:li.l.i.a.n.mer.cos.of.t@gmail.com"">li.l.i.a.n.mer.cos.of.t@gmail.com</a>
<a href=""mailto:lilia.n..m.er.coso.f.t@gmail.com"">lilia.n..m.er.coso.f.t@gmail.com</a>
<a href=""mailto:l.i.l.ian..m.e.r.co.sof.t@gmail.com"">l.i.l.ian..m.e.r.co.sof.t@gmail.com</a>
<a href=""mailto:l.il.ian...merc.o.s.o.f.t@gmail.com"">l.il.ian...merc.o.s.o.f.t@gmail.com</a>
<a href=""mailto:l.ilian.m.er.cos.oft@gmail.com"">l.ilian.m.er.cos.oft@gmail.com</a>
<a href=""mailto:lil.i.a.n...me.rcos.o.ft@gmail.com"">lil.i.a.n...me.rcos.o.ft@gmail.com</a>
<a href=""mailto:lili.an..m.erc.os.o.f.t@gmail.com"">lili.an..m.erc.os.o.f.t@gmail.com</a>
<a href=""mailto:lili.a.n..m.er.cos.oft@gmail.com"">lili.a.n..m.er.cos.oft@gmail.com</a>
<a href=""mailto:lili.an.me.r.c.osoft@gmail.com"">lili.an.me.r.c.osoft@gmail.com</a>
<a href=""mailto:lil.ian..mer.c.os.of.t@gmail.com"">lil.ian..mer.c.os.of.t@gmail.com</a>
<a href=""mailto:lili.a.n...me.rco.s.o.f.t@gmail.com"">lili.a.n...me.rco.s.o.f.t@gmail.com</a>
<a href=""mailto:li.l.ia.n.m.e.r.c.o.soft@gmail.com"">li.l.ia.n.m.e.r.c.o.soft@gmail.com</a>
<a href=""mailto:l.i.l.ian..m.e.rc.o.s.o.f.t@gmail.com"">l.i.l.ian..m.e.rc.o.s.o.f.t@gmail.com</a>
<a href=""mailto:li.li.an...mer.c.os.of.t@gmail.com"">li.li.an...mer.c.os.of.t@gmail.com</a>
<a href=""mailto:l.i.li.an..m.e.r.co.so.ft@gmail.com"">l.i.li.an..m.e.r.co.so.ft@gmail.com</a>
<a href=""mailto:l.ilia.n...me.r.c.o.s.of.t@gmail.com"">l.ilia.n...me.r.c.o.s.of.t@gmail.com</a>
<a href=""mailto:l.i.li.a.n..m.e.r.c.o.s.o.f.t@gmail.com"">l.i.li.a.n..m.e.r.c.o.s.o.f.t@gmail.com</a>
<a href=""mailto:l.i.l.i.an..mer.c.os.o.ft@gmail.com"">l.i.l.i.an..mer.c.os.o.ft@gmail.com</a>
<a href=""mailto:l.i.li.a.n..m.erco.s.oft@gmail.com"">l.i.li.a.n..m.erco.s.oft@gmail.com</a>
<a href=""mailto:l.ili.an..m.erco.s.o.ft@gmail.com"">l.ili.an..m.erco.s.o.ft@gmail.com</a>
<a href=""mailto:li.l.i.a.n.m.erc.o.so.ft@gmail.com"">li.l.i.a.n.m.erc.o.so.ft@gmail.com</a>
<a href=""mailto:li.l.i.an..merc.o.s.o.ft@gmail.com"">li.l.i.an..merc.o.s.o.ft@gmail.com</a>
<a href=""mailto:l.i.l.ia.n..mer.c.o.soft@gmail.com"">l.i.l.ia.n..mer.c.o.soft@gmail.com</a>
<a href=""mailto:l.il.i.an..me.r.coso.f.t@gmail.com"">l.il.i.an..me.r.coso.f.t@gmail.com</a>
<a href=""mailto:lilia.n...me.rcosof.t@gmail.com"">lilia.n...me.rcosof.t@gmail.com</a>
<a href=""mailto:li.l.ian..me.r.c.os.oft@gmail.com"">li.l.ian..me.r.c.os.oft@gmail.com</a>
<a href=""mailto:l.ili.a.n.m.erco.s.o.f.t@gmail.com"">l.ili.a.n.m.erco.s.o.f.t@gmail.com</a>
<a href=""mailto:l.i.li.a.n.m.e.rco.sof.t@gmail.com"">l.i.li.a.n.m.e.rco.sof.t@gmail.com</a>
<a href=""mailto:lilia.n.mer.co.so.ft@gmail.com"">lilia.n.mer.co.so.ft@gmail.com</a>
<a href=""mailto:l.i.li.a.n.m.ercosoft@gmail.com"">l.i.li.a.n.m.ercosoft@gmail.com</a>
<a href=""mailto:li.li.a.n...m.erc.osoft@gmail.com"">li.li.a.n...m.erc.osoft@gmail.com</a>
<a href=""mailto:l.i.l.ian..m.e.rc.osof.t@gmail.com"">l.i.l.ian..m.e.rc.osof.t@gmail.com</a>
<a href=""mailto:l.il.i.a.n..m.er.c.o.s.o.f.t@gmail.com"">l.il.i.a.n..m.er.c.o.s.o.f.t@gmail.com</a>
<a href=""mailto:lil.ian..mer.co.s.oft@gmail.com"">lil.ian..mer.co.s.oft@gmail.com</a>
<a href=""mailto:l.ilian.me.rcos.of.t@gmail.com"">l.ilian.me.rcos.of.t@gmail.com</a>
<a href=""mailto:l.il.i.an..m.er.co.sof.t@gmail.com"">l.il.i.an..m.er.co.sof.t@gmail.com</a>
<a href=""mailto:l.i.li.an..mer.c.osof.t@gmail.com"">l.i.li.an..mer.c.osof.t@gmail.com</a>
<a href=""mailto:l.i.li.a.n...mercos.o.ft@gmail.com"">l.i.li.a.n...mercos.o.ft@gmail.com</a>
<a href=""mailto:lil.ia.n.m.e.rco.s.o.f.t@gmail.com"">lil.ia.n.m.e.rco.s.o.f.t@gmail.com</a>
<a href=""mailto:l.i.l.i.a.n...m.erco.so.f.t@gmail.com"">l.i.l.i.a.n...m.erco.so.f.t@gmail.com</a>
<a href=""mailto:l.ilia.n...m.er.c.osof.t@gmail.com"">l.ilia.n...m.er.c.osof.t@gmail.com</a>
<a href=""mailto:l.i.l.ia.n...mer.cos.of.t@gmail.com"">l.i.l.ia.n...mer.cos.of.t@gmail.com</a>
<a href=""mailto:lil.i.a.n...m.erc.oso.ft@gmail.com"">lil.i.a.n...m.erc.oso.ft@gmail.com</a>
<a href=""mailto:l.il.ian..m.e.r.c.oso.ft@gmail.com"">l.il.ian..m.e.r.c.oso.ft@gmail.com</a>
<a href=""mailto:li.lian...m.ercos.of.t@gmail.com"">li.lian...m.ercos.of.t@gmail.com</a>
<a href=""mailto:li.lian.m.er.c.o.sof.t@gmail.com"">li.lian.m.er.c.o.sof.t@gmail.com</a>
<a href=""mailto:lili.an..mer.c.o.s.o.f.t@gmail.com"">lili.an..mer.c.o.s.o.f.t@gmail.com</a>
<a href=""mailto:l.il.ia.n...m.e.r.c.oso.f.t@gmail.com"">l.il.ia.n...m.e.r.c.oso.f.t@gmail.com</a>
<a href=""mailto:l.il.i.a.n..m.e.r.co.s.of.t@gmail.com"">l.il.i.a.n..m.e.r.co.s.of.t@gmail.com</a>
<a href=""mailto:l.i.l.i.an...me.r.c.os.of.t@gmail.com"">l.i.l.i.an...me.r.c.os.of.t@gmail.com</a>
<a href=""mailto:li.lian..mer.cos.oft@gmail.com"">li.lian..mer.cos.oft@gmail.com</a>
<a href=""mailto:lil.ian..mercosof.t@gmail.com"">lil.ian..mercosof.t@gmail.com</a>
<a href=""mailto:l.ili.a.n..m.e.rco.s.o.ft@gmail.com"">l.ili.a.n..m.e.rco.s.o.ft@gmail.com</a>
<a href=""mailto:lili.a.n..m.er.c.oso.ft@gmail.com"">lili.a.n..m.er.c.oso.ft@gmail.com</a>
<a href=""mailto:lili.an..merco.s.o.ft@gmail.com"">lili.an..merco.s.o.ft@gmail.com</a>
<a href=""mailto:l.i.lia.n...me.r.co.s.oft@gmail.com"">l.i.lia.n...me.r.co.s.oft@gmail.com</a>
<a href=""mailto:li.l.ian..me.r.c.o.s.o.ft@gmail.com"">li.l.ian..me.r.c.o.s.o.ft@gmail.com</a>
<a href=""mailto:l.il.ian..mer.c.o.s.oft@gmail.com"">l.il.ian..mer.c.o.s.oft@gmail.com</a>
<a href=""mailto:li.li.an..m.ercosoft@gmail.com"">li.li.an..m.ercosoft@gmail.com</a>
<a href=""mailto:l.i.l.i.an..m.erc.o.s.oft@gmail.com"">l.i.l.i.an..m.erc.o.s.oft@gmail.com</a>
<a href=""mailto:l.il.i.a.n..m.e.rcosoft@gmail.com"">l.il.i.a.n..m.e.rcosoft@gmail.com</a>
<a href=""mailto:l.i.l.i.an..m.e.rcos.o.f.t@gmail.com"">l.i.l.i.an..m.e.rcos.o.f.t@gmail.com</a>
<a href=""mailto:lili.a.n..m.e.r.cosoft@gmail.com"">lili.a.n..m.e.r.cosoft@gmail.com</a>
<a href=""mailto:l.i.l.i.a.n...m.e.r.c.osoft@gmail.com"">l.i.l.i.a.n...m.e.r.c.osoft@gmail.com</a>
<a href=""mailto:li.l.ia.n...m.erc.os.oft@gmail.com"">li.l.ia.n...m.erc.os.oft@gmail.com</a>
<a href=""mailto:l.i.l.i.a.n..mercoso.f.t@gmail.com"">l.i.l.i.a.n..mercoso.f.t@gmail.com</a>
<a href=""mailto:l.i.li.a.n..m.e.r.co.so.f.t@gmail.com"">l.i.li.a.n..m.e.r.co.so.f.t@gmail.com</a>
<a href=""mailto:lilian...m.e.rc.o.so.f.t@gmail.com"">lilian...m.e.rc.o.so.f.t@gmail.com</a>
<a href=""mailto:lil.ia.n.merco.so.ft@gmail.com"">lil.ia.n.merco.so.ft@gmail.com</a>
<a href=""mailto:lil.ian..m.e.rc.o.sof.t@gmail.com"">lil.ian..m.e.rc.o.sof.t@gmail.com</a>
<a href=""mailto:li.l.i.a.n..mer.c.o.so.f.t@gmail.com"">li.l.i.a.n..mer.c.o.so.f.t@gmail.com</a>
<a href=""mailto:lilian...merco.s.o.ft@gmail.com"">lilian...merco.s.o.ft@gmail.com</a>
<a href=""mailto:lil.i.a.n...me.r.c.os.of.t@gmail.com"">lil.i.a.n...me.r.c.os.of.t@gmail.com</a>
<a href=""mailto:l.ili.an...me.rco.s.oft@gmail.com"">l.ili.an...me.rco.s.oft@gmail.com</a>
<a href=""mailto:lilia.n..m.erco.so.f.t@gmail.com"">lilia.n..m.erco.so.f.t@gmail.com</a>
<a href=""mailto:l.i.lia.n...mer.c.o.sof.t@gmail.com"">l.i.lia.n...mer.c.o.sof.t@gmail.com</a>
<a href=""mailto:l.il.i.an..me.r.co.s.o.f.t@gmail.com"">l.il.i.an..me.r.co.s.o.f.t@gmail.com</a>
<a href=""mailto:lili.an.me.r.coso.f.t@gmail.com"">lili.an.me.r.coso.f.t@gmail.com</a>
<a href=""mailto:li.lian...me.rco.s.o.f.t@gmail.com"">li.lian...me.rco.s.o.f.t@gmail.com</a>
<a href=""mailto:lil.ian..m.ercoso.ft@gmail.com"">lil.ian..m.ercoso.ft@gmail.com</a>
<a href=""mailto:li.l.ia.n..m.er.co.so.f.t@gmail.com"">li.l.ia.n..m.er.co.so.f.t@gmail.com</a>
<a href=""mailto:l.i.l.ia.n.mercosoft@gmail.com"">l.i.l.ia.n.mercosoft@gmail.com</a>
<a href=""mailto:li.li.a.n...m.e.r.cos.oft@gmail.com"">li.li.a.n...m.e.r.cos.oft@gmail.com</a>
<a href=""mailto:lil.ian..m.erco.s.o.ft@gmail.com"">lil.ian..m.erco.s.o.ft@gmail.com</a>
<a href=""mailto:l.il.i.a.n..m.erc.o.s.o.f.t@gmail.com"">l.il.i.a.n..m.erc.o.s.o.f.t@gmail.com</a>
<a href=""mailto:lil.i.an..me.rco.soft@gmail.com"">lil.i.an..me.rco.soft@gmail.com</a>
<a href=""mailto:lil.ia.n..m.e.r.cos.of.t@gmail.com"">lil.ia.n..m.e.r.cos.of.t@gmail.com</a>
<a href=""mailto:li.lian..merco.s.of.t@gmail.com"">li.lian..merco.s.of.t@gmail.com</a>
<a href=""mailto:l.ilia.n..m.er.cos.o.f.t@gmail.com"">l.ilia.n..m.er.cos.o.f.t@gmail.com</a>
<a href=""mailto:li.l.i.an..m.ercoso.f.t@gmail.com"">li.l.i.an..m.ercoso.f.t@gmail.com</a>
<a href=""mailto:lil.i.a.n..merc.os.o.f.t@gmail.com"">lil.i.a.n..merc.os.o.f.t@gmail.com</a>
<a href=""mailto:li.l.ia.n..m.er.c.os.o.ft@gmail.com"">li.l.ia.n..m.er.c.os.o.ft@gmail.com</a>
<a href=""mailto:li.l.i.an...m.e.rc.osoft@gmail.com"">li.l.i.an...m.e.rc.osoft@gmail.com</a>
<a href=""mailto:li.l.i.an...m.e.r.co.s.of.t@gmail.com"">li.l.i.an...m.e.r.co.s.of.t@gmail.com</a>
<a href=""mailto:l.i.li.a.n...m.er.c.oso.f.t@gmail.com"">l.i.li.a.n...m.er.c.oso.f.t@gmail.com</a>
<a href=""mailto:l.il.i.an..mer.cosof.t@gmail.com"">l.il.i.an..mer.cosof.t@gmail.com</a>
<a href=""mailto:li.l.i.a.n...m.e.r.co.s.o.ft@gmail.com"">li.l.i.a.n...m.e.r.co.s.o.ft@gmail.com</a>
<a href=""mailto:l.il.i.an..m.er.c.os.o.ft@gmail.com"">l.il.i.an..m.er.c.os.o.ft@gmail.com</a>
<a href=""mailto:l.il.ian..m.erco.s.o.f.t@gmail.com"">l.il.ian..m.erco.s.o.f.t@gmail.com</a>
<a href=""mailto:lil.ian..mer.c.oso.f.t@gmail.com"">lil.ian..mer.c.oso.f.t@gmail.com</a>
<a href=""mailto:l.i.lia.n.me.r.c.osoft@gmail.com"">l.i.lia.n.me.r.c.osoft@gmail.com</a>
<a href=""mailto:li.l.ia.n.me.r.c.os.of.t@gmail.com"">li.l.ia.n.me.r.c.os.of.t@gmail.com</a>
<a href=""mailto:li.l.i.an...merco.s.o.f.t@gmail.com"">li.l.i.an...merco.s.o.f.t@gmail.com</a>
<a href=""mailto:l.il.ia.n..me.r.c.o.s.o.ft@gmail.com"">l.il.ia.n..me.r.c.o.s.o.ft@gmail.com</a>
<a href=""mailto:lili.an..merco.s.of.t@gmail.com"">lili.an..merco.s.of.t@gmail.com</a>
<a href=""mailto:li.l.i.an..m.e.r.c.o.so.ft@gmail.com"">li.l.i.an..m.e.r.c.o.so.ft@gmail.com</a>
<a href=""mailto:l.i.li.an..mer.cosoft@gmail.com"">l.i.li.an..mer.cosoft@gmail.com</a>
<a href=""mailto:l.i.lian..m.er.co.sof.t@gmail.com"">l.i.lian..m.er.co.sof.t@gmail.com</a>
<a href=""mailto:lili.an..merco.s.o.f.t@gmail.com"">lili.an..merco.s.o.f.t@gmail.com</a>
<a href=""mailto:l.i.l.ian.me.r.cos.oft@gmail.com"">l.i.l.ian.me.r.cos.oft@gmail.com</a>
<a href=""mailto:lili.an.merc.os.o.ft@gmail.com"">lili.an.merc.os.o.ft@gmail.com</a>
<a href=""mailto:l.il.i.a.n...me.rco.s.of.t@gmail.com"">l.il.i.a.n...me.rco.s.of.t@gmail.com</a>
<a href=""mailto:lil.ian.me.rco.soft@gmail.com"">lil.ian.me.rco.soft@gmail.com</a>
<a href=""mailto:l.i.l.i.a.n...m.e.r.c.o.soft@gmail.com"">l.i.l.i.a.n...m.e.r.c.o.soft@gmail.com</a>
<a href=""mailto:l.il.ia.n..m.erc.o.so.f.t@gmail.com"">l.il.ia.n..m.erc.o.so.f.t@gmail.com</a>
<a href=""mailto:lilia.n.m.er.co.so.ft@gmail.com"">lilia.n.m.er.co.so.ft@gmail.com</a>
<a href=""mailto:l.ili.an.m.e.r.coso.f.t@gmail.com"">l.ili.an.m.e.r.coso.f.t@gmail.com</a>
<a href=""mailto:lil.i.an...m.e.r.c.osoft@gmail.com"">lil.i.an...m.e.r.c.osoft@gmail.com</a>
<a href=""mailto:li.l.ia.n.m.e.r.c.oso.f.t@gmail.com"">li.l.ia.n.m.e.r.c.oso.f.t@gmail.com</a>
<a href=""mailto:l.il.i.a.n..m.e.rc.o.soft@gmail.com"">l.il.i.a.n..m.e.rc.o.soft@gmail.com</a>
<a href=""mailto:l.i.lian.m.er.cos.o.ft@gmail.com"">l.i.lian.m.er.cos.o.ft@gmail.com</a>
<a href=""mailto:li.lian..mer.c.o.soft@gmail.com"">li.lian..mer.c.o.soft@gmail.com</a>
<a href=""mailto:li.lian..me.rc.os.o.f.t@gmail.com"">li.lian..me.rc.os.o.f.t@gmail.com</a>
<a href=""mailto:l.i.l.i.an..mer.c.oso.ft@gmail.com"">l.i.l.i.an..mer.c.oso.ft@gmail.com</a>
<a href=""mailto:l.il.ia.n...m.er.c.os.o.ft@gmail.com"">l.il.ia.n...m.er.c.os.o.ft@gmail.com</a>
<a href=""mailto:l.i.l.i.an..m.erc.os.o.ft@gmail.com"">l.i.l.i.an..m.erc.os.o.ft@gmail.com</a>
<a href=""mailto:li.l.i.an..m.ercos.o.f.t@gmail.com"">li.l.i.an..m.ercos.o.f.t@gmail.com</a>
<a href=""mailto:lili.a.n...m.er.c.os.oft@gmail.com"">lili.a.n...m.er.c.os.oft@gmail.com</a>
<a href=""mailto:l.ilia.n..merco.sof.t@gmail.com"">l.ilia.n..merco.sof.t@gmail.com</a>
<a href=""mailto:l.il.i.an...m.ercoso.ft@gmail.com"">l.il.i.an...m.ercoso.ft@gmail.com</a>
<a href=""mailto:lil.ia.n..m.er.co.soft@gmail.com"">lil.ia.n..m.er.co.soft@gmail.com</a>
<a href=""mailto:li.l.i.a.n.me.rco.s.oft@gmail.com"">li.l.i.a.n.me.rco.s.oft@gmail.com</a>
<a href=""mailto:l.i.lian..m.e.r.co.so.ft@gmail.com"">l.i.lian..m.e.r.co.so.ft@gmail.com</a>
<a href=""mailto:l.ilian..mer.co.s.of.t@gmail.com"">l.ilian..mer.co.s.of.t@gmail.com</a>
<a href=""mailto:lili.an..m.er.c.osoft@gmail.com"">lili.an..m.er.c.osoft@gmail.com</a>
<a href=""mailto:l.il.i.a.n...mer.c.osoft@gmail.com"">l.il.i.a.n...mer.c.osoft@gmail.com</a>
<a href=""mailto:lili.a.n...m.e.rc.o.s.o.ft@gmail.com"">lili.a.n...m.e.rc.o.s.o.ft@gmail.com</a>
<a href=""mailto:li.l.i.a.n..me.r.c.os.o.ft@gmail.com"">li.l.i.a.n..me.r.c.os.o.ft@gmail.com</a>
<a href=""mailto:li.lia.n...m.er.c.o.so.f.t@gmail.com"">li.lia.n...m.er.c.o.so.f.t@gmail.com</a>
<a href=""mailto:l.i.l.ia.n.m.e.rcoso.ft@gmail.com"">l.i.l.ia.n.m.e.rcoso.ft@gmail.com</a>
<a href=""mailto:l.i.l.ian.m.e.r.co.s.o.f.t@gmail.com"">l.i.l.ian.m.e.r.co.s.o.f.t@gmail.com</a>
<a href=""mailto:li.lian...merco.soft@gmail.com"">li.lian...merco.soft@gmail.com</a>
<a href=""mailto:macarena@mercosoft.com"">macarena@mercosoft.com</a>
<a href=""mailto:juan@guialogistica.com"">juan@guialogistica.com</a>
"
