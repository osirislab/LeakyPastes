id,title,username,language,date,content
ZrXUxuHX,BTC Wallet Credentials have been reset,kamikrisin_44,GetText,Monday 26th of June 2023 12:54:59 PM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please disregard this message.
Your new login credentials will be 
gamax1:CUJbMv on 45.9.148.244
You can connect via SSH or use an online client such as ssheasy.com.
Regards"
dL0JuHDG,1,matveev,Java,Monday 26th of June 2023 12:34:20 PM CDT,"package innerclasses;

import static util.Print.*;

public class Callbacks {

	public static void main(String[] args) {
		Callee1 c1 = new Callee1();
		Callee2 c2 = new Callee2();
		MyIncrement.f(c1);
		Caller caller1 = new Caller(c1);
		Caller caller2 = new Caller(c2.getcallbackReference());
		caller1.go();
		caller1.go();
		caller2.go();
		caller2.go();

	}

}

interface Incrementable {
	void increment();
}

class Callee1 implements Incrementable {
	private int i = 0;

	@Override
	public void increment() {//callback
		i++;
		print(i);
	}
}

class MyIncrement {
	public void increment() {
		System.out.println(""совершенно другая операция!"");
	}

	public static void f(MyIncrement m) {
		m.increment();
	}
}

class Callee2 extends MyIncrement {
	private int i = 0;
	
	@Override
	public void increment() { //callback
		super.increment();
		i++;
		print(i);
	}

	private class Closure implements Incrementable {
		@Override
		public void increment() { //callback
			Callee2.this.increment();
		}
	}

	Incrementable getcallbackReference() {
		return new Closure();
	}
}

class Caller {
	Incrementable callbackRegerence;

	Caller(Incrementable cbh) {
		callbackRegerence = cbh;
	}

	void go() {
		callbackRegerence.increment();
	}
}"
Hpm5Z429,IOI '07 P3 - Sails,erek1e,C++,Monday 26th of June 2023 12:34:03 PM CDT,"#include <iostream>
#include <vector>
#include <algorithm>
#include <set>
#include <cassert>

using namespace std;

int H = 0;

struct Segment {
    int bottom, top;
    Segment() {}
    Segment(int mn, int mx): bottom(mn), top(mx) {}
    bool operator < (const Segment &s2) const {
        return pair<int, int>(bottom, top) < pair<int, int>(s2.bottom, s2.top);
    }
};

int main() {
    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
    int n; cin >> n;
    vector<pair<int, int>> masts(n);
    for (auto &[h, k] : masts) cin >> h >> k, H = max(H, h);
    sort(masts.begin(), masts.end());

    set<Segment> segments; // segments of heights with equal number of sails
    segments.emplace(1, H);
    
    vector<int> adjDifference(1+H+1); // between number of sails on each height
    auto rangeIncrement = [&adjDifference](int first, int last) { // [first, last)
        ++adjDifference[first];
        --adjDifference[last];
    };

    for (auto [h, k] : masts) {
        // add 1 to suffix of heights from h to h-k+1, but move the increments
        // in the last (partially covered) segment to the end of that segment
        auto it = segments.lower_bound({h-k+1, H+1});

        if (it != segments.begin()) {
            --it;
            int c = k - max(h - it->top, 0); // number in last segment
            assert(c > 0);
            
            // reposition to end
            //  +1 in range [it->bottom, it->bottom+c)
            rangeIncrement(it->bottom, it->bottom+c);
            k -= c;

            // update segments
            int f1 = it->bottom, l1 = it->bottom+c-1;
            int f2 = it->bottom+c, l2 = it->top;
            it = segments.erase(it);
            if (f2 <= l2) it = segments.emplace(f2, l2).first;

            if (f1 > 1 && !adjDifference[f1]) { // incremented segment has equal value with previous segment
                // merge
                --it;
                int oldFirst = it->bottom;
                assert(it->top+1 == f1);
                segments.erase(it);
                segments.emplace(oldFirst, l1);
            } else segments.emplace(f1, l1);
        }

        if (k) {
            // +1 in range [h-k+1, h]
            rangeIncrement(h-k+1, h+1);

            //  update segments
            it = prev(segments.end());
            if (h >= it->bottom && h < H) { // need to split 0 segment
                int b = it->bottom;
                segments.erase(it);
                segments.emplace(b, h);
                segments.emplace(h+1, H);
            }

            it = segments.lower_bound({h-k+1, 0}); // first updated segment
            //   if it and prev(it) are now equal, merge them
            if (it->bottom > 1 && !adjDifference[it->bottom]) {
                // merge
                int last = it->top;
                it = prev(segments.erase(it));
                int first = it->bottom;
                segments.erase(it);
                segments.emplace(first, last);
            }
        }
    }
    
    // Determine the total inefficiency of the configuration
    long long totalInefficiency = 0;
    for (int h = 1, sails = 0; h <= H; ++h) {
        sails += adjDifference[h];
        totalInefficiency += sails*(sails-1LL)/2;
    }
    cout << totalInefficiency << endl;
    return 0;
}"
txj00Zpc,Untitled,STEP5,Lua,Monday 26th of June 2023 12:24:43 PM CDT,"local component = require(""component"")

local com_controller = component.me_controller
-- local com_export_bus = component.me_export_bus

print(com_controller)"
W1HApBcx,Untitled,cecko,JavaScript,Monday 26th of June 2023 12:22:38 PM CDT,"function attachEvents() {

    let location = document.getElementById('location').value;
    let submitBtn = document.getElementById('submit');
    let forecast = document.getElementById('forecast');
    let current = document.getElementById(`current`);

    let url = 'http://localhost:3030/jsonstore/forecaster/locations'

    submitBtn.addEventListener('click', async function () {
        const response = await fetch(url);
        let data = await response.json();
        let curCity = data.filter((x) => x.name === location);
        let curCityCode = curCity[0].code;

        let todayUrl = `http://localhost:3030/jsonstore/forecaster/today/${curCityCode}`
        let todayResponse = await fetch(todayUrl);
        let todayData = await todayResponse.json();

        const div = createElement('div');
        div.setAttribute('class', 'forecasts');
        const condition = createElement('span');
        condition.setAttribute('class', 'condition');
        createElement('span', `${todayData.name}`, div).setAttribute('class', 'forecast-data' );
        createElement('span', `${todayData.forecast.low}` + `&#176;`
            + `/${todayData.forecast.high}`
            + ""&#176;"", div).setAttribute('class', 'forecast-data' );
        createElement('span', `${todayData.forecast.condition}`, div).setAttribute('class', 'forecast-data' );



        forecast.style.display = 'block';
    })
    function createElement(type, content, parent) {
        const element = document.createElement(type);
        element.textContent = content;
        if (parent) {
            parent.appendChild(element);
        }
        return element;
    }
}"
P0sPUqE2,miron oop,Chl_Snt,Python,Monday 26th of June 2023 12:21:49 PM CDT,"class RemoteControl:
    def __init__(self):
        self.ID = None
        self.power = None
        self.battery = None
        self.antenna = None

    def move(self, p):
        self.send(p)

    def send(self, signal):
        print(f""{self.ID}: Сигнал {signal} отправлен"")
        self.battery -= 1


    def info(self):
        print(self.__dict__)


class HelicopterRC(RemoteControl):
    def __init__(self, ID):
        super().__init__()
        self.ID = ID
        self.power = True
        self.battery = 100
        self.antenna = True

    def fly(self, p):
        self.send(f""fly: {p}"")


class AutoRC(RemoteControl):
    def __init__(self, ID):
        super().__init__()
        self.ID = ID
        self.power = True
        self.battery = 90

    def lights_on(self):
        self.send(f""lights: {True}"")


class TV_RC(RemoteControl):
    def __init__(self, ID):
        super().__init__()



h = HelicopterRC(""12F"")
h.battery -= 42
h.info()
h.move(-100)
h.fly(900)

print()

h2 = HelicopterRC(""59T"")
h2.antenna = False
h2.info()
h2.move(50)
h2.fly(-50)
h2.info()

print()

auto = AutoRC(""44K"")
auto.info()
auto.lights_on()"
BAMt1hSL,يعنى ايه اختصار الهامش ؟ وازاي تستخدمه ؟,ghostman905,JavaScript,Monday 26th of June 2023 11:59:17 AM CDT,"الاختصار كلمة لما اكتبها وورد يستدعى حاجة عملتها قبل كده . زي مثلاً آخر مرة عملت إدراج هامش ، عملتله اختصار . 

https://worrdpro.blogspot.com/2022/04/Shortcut-to-insert-footnote.html"
8jYn36y8,Untitled,Praom,MySQL,Monday 26th of June 2023 11:44:59 AM CDT,"DELETE FROM `smart_scripts` WHERE (`source_type`=0) AND `entryorguid` IN (-316004);
DELETE FROM `smart_scripts` WHERE (`source_type`=9) AND `entryorguid` IN (86869*100+1);
INSERT INTO `smart_scripts`(`entryorguid`, `source_type`, `id`, `link`, `event_type`, `event_phase_mask`, `event_chance`, `event_flags`, `event_param1`, `event_param2`, `event_param3`, `event_param4`, `event_param5`, `action_type`, `action_param1`, `action_param2`, `action_param3`, `action_param4`, `action_param5`, `action_param6`, `action_param_float`, `action_delay`, `target_type`, `target_param1`, `target_param2`, `target_param3`, `target_param4`, `target_x`, `target_y`, `target_z`, `target_o`, `comment`) VALUES 
(-316004, 0, 0, 2, 11, 0, 100, 1, 0, 0, 0, 0, 0, 75, 173795, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, ''), 
(-316004, 0, 1, 6, 80, 0, 100, 1, 1, 2000, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 2000, 1, 0, 0, 0, 0, 0, 0, 0, 0, ''),

(-316004, 0, 2, 0, 11, 0, 100, 0, 0, 0, 0, 0, 0, 12, 86789, 7, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 2535.64, 3847.2, 232.666, 3.07599, ''),
(-316004, 0, 3, 0, 11, 0, 100, 0, 0, 0, 0, 0, 0, 12, 86751, 7, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 2539.55, 3846.59, 232.666, 3.07599, ''),

(-316004, 0, 4, 5, 61, 0, 100, 0, 0, 0, 0, 0, 0, 226, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, ''),
(-316004, 0, 5, 0, 61, 0, 100, 0, 0, 0, 0, 0, 0, 18, 258, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, ''),
(-316004, 0, 6, 7, 61, 0, 100, 0, 0, 0, 0, 0, 0, 19, 258, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, ''),
(-316004, 0, 7, 0, 61, 0, 100, 0, 0, 0, 0, 0, 0, 80, 86869*100+1, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, ''),

(86869*100+1, 9, 0, 0, 0, 0, 100, 0, 0, 0, 0, 0, 0, 11, 173803, 0, 0, 0, 0, 0, 0, 500, 1, 0, 0, 0, 0, 0, 0, 0, 0, ''),
(86869*100+1, 9, 1, 0, 0, 0, 100, 1, 1500, 1500, 0, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, '');"
iYF7iNwa,Y700 ZUI14 props,ot_inc,Properties,Monday 26th of June 2023 11:41:43 AM CDT,"
ro.boot.dynamic_partitions=true
ro.product.first_api_level=30
ro.vendor.build.security_patch=2023-02-01
ro.vendor.product.cpu.abilist=arm64-v8a,armeabi-v7a,armeabi
ro.vendor.product.cpu.abilist32=armeabi-v7a,armeabi
ro.vendor.product.cpu.abilist64=arm64-v8a
ro.product.board=kona
ro.board.platform=kona
ro.hwui.use_vulkan=
ro.build.ab_update=true
# begin common build properties
# autogenerated by build/make/tools/buildinfo_common.sh
ro.vendor.build.date=Sat Apr  1 15:19:26 CST 2023
ro.vendor.build.date.utc=1680333566
ro.vendor.build.fingerprint=Lenovo/TB-9707F_PRC/TB-9707F:12/SKQ1.220213.001/14.0.255_230401:user/release-keys
ro.vendor.build.id=RKQ1.220116.001
ro.vendor.build.tags=release-keys
ro.vendor.build.type=user
ro.vendor.build.version.incremental=14.0.255_230401
ro.vendor.build.version.release=11
ro.vendor.build.version.release_or_codename=11
ro.vendor.build.version.sdk=30
ro.product.vendor.brand=Lenovo
ro.product.vendor.device=TB-9707F
ro.product.vendor.manufacturer=Lenovo
ro.product.vendor.model=Lenovo TB-9707F
ro.product.vendor.name=TB-9707F_PRC
# end common build properties
#
# BOOTIMAGE_BUILD_PROPERTIES
#
ro.bootimage.build.date=Sat Apr 1 15:19:26 CST 2023
ro.bootimage.build.date.utc=1680333566
ro.bootimage.build.fingerprint=Lenovo/TB-9707F_PRC/TB-9707F:12/SKQ1.220213.001/14.0.255_230401:user/release-keys
#
# ADDITIONAL VENDOR BUILD PROPERTIES
#
ro.virtual_ab.enabled=true
debug.sf.set_idle_timer_ms=0
ro.surface_flinger.set_idle_timer_ms=1000
ro.surface_flinger.display_update_imminent_timeout_ms=1000
ro.surface_flinger.set_touch_timer_ms=2000
ro.config.wallpaper=system/media/wallpapers/default_moto_wallpaper.jpg
ro.com.android.dataroaming=false
ro.config.alarm_alert=EtherealMallets.ogg
ro.config.notification_sound=StereoTwinkling.ogg
ro.config.ringtone=StereoTime.ogg
ro.opengles.version=196610
ro.vendor.com.zui.version=14.0
ro.vendor.boot.target.region=PRC
ro.vendor.config.zui.hardware=qcom
ro.vendor.config.zui.devicetype=PAD
ro.board.first_api_level=30
ro.incremental.enable=1
ro.control_privapp_permissions=enforce
persist.vendor.qcomsysd.enabled=1
vendor.power.pasr.enabled=false
vendor.pasr.activemode.enabled=true
keyguard.no_require_sim=true
ro.carrier=unknown
persist.backup.ntpServer=0.pool.ntp.org
sys.vendor.shutdown.waittime=500
ro.frp.pst=/dev/block/bootdevice/by-name/frp
dalvik.vm.heapstartsize=8m
dalvik.vm.heapsize=512m
dalvik.vm.heapgrowthlimit=512m
dalvik.vm.heaptargetutilization=0.75
dalvik.vm.heapminfree=512k
dalvik.vm.heapmaxfree=8m
wifi.aware.interface=wifi-aware0
vendor.qcom.bluetooth.soc=hastings
ro.sf.lcd_density=400
vendor.audio_hal.period_size=192
persist.vendor.audio.ambisonic.capture=false
persist.vendor.audio.ambisonic.auto.profile=false
persist.vendor.audio.apptype.multirec.enabled=false
ro.vendor.audio.sdk.fluencetype=fluence
persist.vendor.audio.fluence.voicecall=true
persist.vendor.audio.fluence.voicerec=false
persist.vendor.audio.fluence.speaker=true
persist.vendor.audio.fluence.tmic.enabled=false
persist.vendor.audio.fluence.audiorec=false
persist.vendor.audio.fluence.voicecomm=true
persist.vendor.audio.spv3.enable=true
persist.vendor.audio.avs.afe_api_version=2
vendor.audio.tunnel.encode=false
persist.vendor.audio.ras.enabled=false
vendor.audio.offload.buffer.size.kb=32
vendor.audio.offload.track.enable=true
vendor.voice.path.for.pcm.voip=true
vendor.audio.offload.multiaac.enable=true
vendor.audio.dolby.ds2.enabled=false
vendor.audio.dolby.ds2.hardbypass=false
vendor.audio.offload.multiple.enabled=false
vendor.audio.offload.passthrough=false
ro.vendor.audio.sdk.ssr=false
vendor.audio.offload.gapless.enabled=true
vendor.audio.hal.boot.timeout.ms=20000
vendor.audio.safx.pbe.enabled=false
vendor.audio.parser.ip.buffer.size=262144
vendor.audio.flac.sw.decoder.24bit=true
persist.vendor.bt.a2dp_offload_cap=sbc-aptx-aptxtws-aptxhd-aac-ldac
ro.bluetooth.a2dp_offload.supported=true
persist.bluetooth.a2dp_offload.disabled=false
persist.bluetooth.a2dp_offload.cap=sbc-aac-aptx-aptxhd-ldac
vendor.audio.use.sw.alac.decoder=true
vendor.audio.use.sw.ape.decoder=true
vendor.audio.use.sw.mpegh.decoder=true
vendor.audio.hw.aac.encoder=true
vendor.audio_hal.in_period_size=144
vendor.audio_hal.period_multiplier=3
vendor.audio.adm.buffering.ms=2
vendor.audio.volume.headset.gain.depcal=true
vendor.audio.hal.output.suspend.supported=true
aaudio.mmap_policy=2
aaudio.mmap_exclusive_policy=2
aaudio.hw_burst_min_usec=2000
vendor.audio.enable.mirrorlink=false
persist.vendor.audio.voicecall.speaker.stereo=true
persist.vendor.bt.aac_frm_ctl.enabled=true
persist.vendor.bt.aac_vbr_frm_ctl.enabled=true
vendor.audio.feature.a2dp_offload.enable=true
vendor.audio.feature.afe_proxy.enable=true
vendor.audio.feature.anc_headset.enable=false
vendor.audio.feature.battery_listener.enable=true
vendor.audio.feature.compr_cap.enable=false
vendor.audio.feature.compress_in.enable=true
vendor.audio.feature.compress_meta_data.enable=true
vendor.audio.feature.compr_voip.enable=false
vendor.audio.feature.concurrent_capture.enable=true
vendor.audio.feature.custom_stereo.enable=true
vendor.audio.feature.display_port.enable=true
vendor.audio.feature.dsm_feedback.enable=false
vendor.audio.feature.dynamic_ecns.enable=true
vendor.audio.feature.ext_hw_plugin.enable=false
vendor.audio.feature.external_dsp.enable=false
vendor.audio.feature.external_speaker.enable=false
vendor.audio.feature.external_speaker_tfa.enable=false
vendor.audio.feature.fluence.enable=true
vendor.audio.feature.fm.enable=true
vendor.audio.feature.hdmi_edid.enable=true
vendor.audio.feature.hdmi_passthrough.enable=true
vendor.audio.feature.hfp.enable=true
vendor.audio.feature.hifi_audio.enable=false
vendor.audio.feature.hwdep_cal.enable=false
vendor.audio.feature.incall_music.enable=true
vendor.audio.feature.multi_voice_session.enable=true
vendor.audio.feature.keep_alive.enable=true
vendor.audio.feature.kpi_optimize.enable=true
vendor.audio.feature.maxx_audio.enable=false
vendor.audio.feature.ras.enable=true
vendor.audio.feature.record_play_concurency.enable=false
vendor.audio.feature.src_trkn.enable=true
vendor.audio.feature.spkr_prot.enable=true
vendor.audio.feature.ssrec.enable=true
vendor.audio.feature.usb_offload.enable=true
vendor.audio.feature.usb_offload_burst_mode.enable=true
vendor.audio.feature.usb_offload_sidetone_volume.enable=false
vendor.audio.feature.deepbuffer_as_primary.enable=false
vendor.audio.feature.vbat.enable=true
vendor.audio.feature.wsa.enable=false
vendor.audio.feature.audiozoom.enable=false
vendor.audio.feature.snd_mon.enable=true
vendor.gatekeeper.disable_spu=true
drm.service.enabled=true
persist.vendor.qfp=true
ro.vendor.qspm.enable=true
persist.vendor.radio.enableadvancedscan=true
ro.netflix.bsp_rev=Q8250-19134-1
ro.wtlog_support=1
persist.sys.wtlog.enable=true
persist.sys.wtlog.size=0
persist.sys.lognode.enable=false
ro.logd.kernel=false
persist.sys.qxdm_log.enable=false
persist.sys.qxdm_log.size=2
persist.sys.qxdm_log.number=2
persist.sys.tcpdump.enable=false
vendor.mm.enable.qcom_parser=16777215
ro.hardware.vulkan=adreno
ro.hardware.egl=adreno
ro.gfx.driver.1=com.qualcomm.qti.gpudrivers.kona.api30
vendor.opengles.version=196610
persist.vendor.qcom.bluetooth.soc=hastings
persist.vendor.qcom.bluetooth.enable.splita2dp=true
persist.vendor.qcom.bluetooth.a2dp_offload_cap=sbc-aptx-aptxtws-aptxhd-aac-ldac-aptxadaptiver2
ro.vendor.bluetooth.wipower=false
persist.vendor.qcom.bluetooth.aac_frm_ctl.enabled=true
persist.vendor.qcom.bluetooth.a2dp_mcast_test.enabled=false
persist.vendor.qcom.bluetooth.twsp_state.enabled=false
persist.vendor.qcom.bluetooth.scram.enabled=false
persist.vendor.qcom.bluetooth.aac_vbr_ctl.enabled=true
persist.vendor.qcom.bluetooth.aptxadaptiver2_1_support=false
persist.sys.fflag.override.settings_bluetooth_hearing_aid=true
camera.disable_zsl_mode=1
persist.demo.hdmirotationlock=false
persist.sys.sf.color_saturation=1.0
persist.sys.sf.color_mode=0
debug.sf.hw=0
debug.egl.hw=0
debug.sf.latch_unsignaled=1
debug.sf.high_fps_late_app_phase_offset_ns=1000000
debug.mdpcomp.logs=0
vendor.gralloc.disable_ubwc=0
vendor.display.disable_scaler=0
vendor.display.disable_excl_rect=0
vendor.display.disable_excl_rect_partial_fb=1
vendor.display.comp_mask=0
vendor.display.enable_posted_start_dyn=1
vendor.display.enable_optimize_refresh=1
vendor.display.use_smooth_motion=1
vendor.display.enable_camera_smooth=1
vendor.display.enable_allow_idle_fallback=1
vendor.display.disable_idle_time_video=1
vendor.display.disable_idle_time_hdr=1
vendor.display.disable_offline_rotator=1
debug.sf.enable_gl_backpressure=1
debug.sf.enable_advanced_sf_phase_offset=1
debug.sf.high_fps_late_sf_phase_offset_ns=-4000000
debug.sf.high_fps_early_phase_offset_ns=-4000000
debug.sf.high_fps_early_gl_phase_offset_ns=-4000000
vendor.display.disable_hw_recovery_dump=1
vendor.display.enable_async_powermode=1
vendor.display.idle_time=0
persist.vendor.dpmhalservice.enable=1
ro.crypto.volume.filenames_mode=aes-256-cts
ro.crypto.set_dun=true
ro.crypto.dm_default_key.options_format.version=2
ro.crypto.volume.metadata.method=dm-default-key
ro.vendor.extension_library=libqti-perfd-client.so
ro.vendor.perf-hal.ver=2.2
persist.vendor.sensors.sync_request=true
persist.vendor.sensors.allow_non_default_discovery=true
vendor.usb.diag.func.name=diag
vendor.usb.use_ffs_mtp=0
debug.stagefright.omx_default_rank=0
debug.stagefright.ccodec=1
ro.vendor.dolby.dax.version=DAX3_3.7.1.0_r1
"
gsdWWH2f,DZ_Library,MayloGreen,C#,Monday 26th of June 2023 11:35:33 AM CDT,"using System;
using System.Collections.Generic;

namespace DZ_Library
{
    class Program
    {
        public static void Main(string[] args)
        {
            const string AddBookCommand = ""1"";
            const string DeleteBookCommand = ""2"";
            const string ShowBooksCommand = ""3"";
            const string ShowBookByNameCommand = ""4"";
            const string ShowBookByAuthorCommand = ""5"";
            const string ShowBookByPublisherCommand = ""6"";
            const string ShowBookByReleaseYearCommand = ""7"";
            const string ExitProgrammCommand = ""8"";

            bool programWork = true;

            Shelf shelf = new Shelf();

            Console.WriteLine(""Управление библиотекой"");
            Console.WriteLine($""{AddBookCommand}) Добавить книгу\n{DeleteBookCommand}) Удалить книгу\n{ShowBooksCommand}) Показать все книги на книжной полке\n{ShowBookByNameCommand}) Показать книги по названию\n{ShowBookByAuthorCommand}) Показать книги по имени автора\n{ShowBookByPublisherCommand}) Показать книги по названию издателя\n{ShowBookByReleaseYearCommand}) Показать книги по году издания\n{ExitProgrammCommand}) Выход из программы"");

            while (programWork)
            {
                Console.Write(""Введите номер команды: "");
                string switchOn = Console.ReadLine();

                switch (switchOn)
                {
                    case AddBookCommand:
                        shelf.AddNewBook();
                        break;

                    case DeleteBookCommand:
                        shelf.DeleteBook();
                        break;

                    case ShowBooksCommand:
                        shelf.ShowBooks();
                        break;

                    case ShowBookByNameCommand:
                        shelf.ShowBooksByName();
                        break;

                    case ShowBookByAuthorCommand:
                        shelf.ShowBookByAuthor();
                        break;

                    case ShowBookByPublisherCommand:
                        shelf.ShowBookByPublisher();
                        break;

                    case ShowBookByReleaseYearCommand:
                        shelf.ShowBookByReleaseYear();
                        break;

                    case ExitProgrammCommand:
                        programWork = false;
                        break;
                }
            }
        }
    }

    class Book
    {
        public Book(string name, string author, string publisher, int releaseYear)
        {
            Name = name;
            Author = author;
            Publisher = publisher;
            ReleaseYear = releaseYear;
        }

        public string Name { get; }

        public string Author { get; }

        public string Publisher { get; }

        public int ReleaseYear { get; }

        public void Show(ref int indexNumber)
        {
            Console.WriteLine($""{indexNumber++}) Название книги: {Name}, Автор книги: {Author}, Издатель: {Publisher}, Год выпуска: {ReleaseYear}"");
        }
    }

    class Shelf
    {
        private BooksGenerator _booksGenerator = new BooksGenerator();

        private Book _book;

        private List<Book> _books;

        public Shelf()
        {
            _books = _booksGenerator.CreateShelf();
        }

        public void AddNewBook()
        {
            int number;

            Console.Write(""\nВведите название книги: "");
            string bookName = Console.ReadLine();

            Console.Write(""Введите имя автора книги: "");
            string bookAuthor = Console.ReadLine(); ;

            Console.Write(""Введите название издателя книги: "");
            string bookPublisher = Console.ReadLine(); ;

            Console.Write(""Введите год издания книги: "");
            string bookReleaseYear = Console.ReadLine();

            bool result = int.TryParse(bookReleaseYear, out number);
            if (result)
            {
                _books.Add(new Book(bookName, bookAuthor, bookPublisher, number));
                Console.WriteLine();
            }
            else
            {
                Console.WriteLine(""\nНе допустимый символ в поле \""год издания!!!\"""");
            }
            
        }

        public void DeleteBook()
        {
            int indexNumber = 1;
            int number;

            Console.WriteLine();
            foreach (Book book in _books)
            {
                book.Show(ref indexNumber);
            }

            Console.Write(""\nУкажите номер книги которую вы хотите удалить: "");
            string indexBook = Console.ReadLine();

            bool result = int.TryParse(indexBook, out number);
            if (result)
            {
                _books.RemoveAt(number);
                Console.WriteLine();
            }
            else
            {
                Console.WriteLine(""\nНеобходимо ввести номер книги которую хотите удалить!!!"");
            }
        }

        public void ShowBooks()
        {
            int indexNumber = 1;

            Console.WriteLine();

            foreach (Book book in _books)
            {
                book.Show(ref indexNumber);
            }

            Console.WriteLine();
        }

        public void ShowBooksByName()
        {
            int indexNumber = 1;

            Console.Write(""\nВведите название книги: "");
            string nameBook = Console.ReadLine();

            for (int i = 0; i < _books.Count; i++)
            {
                if (nameBook.ToLower() == _books[i].Name.ToLower())
                {
                    _books[i].Show(ref indexNumber);
                }
            }

            Console.WriteLine();
        }

        public void ShowBookByAuthor()
        {
            int indexNumber = 1;

            Console.Write(""\nВведите автора книги: "");
            string authorBook = Console.ReadLine();

            foreach (Book book in _books)
            {
                if (authorBook.ToLower() == book.Author.ToLower())
                {
                    book.Show(ref indexNumber);
                }
            }

            Console.WriteLine();
        }

        public void ShowBookByPublisher()
        {
            int indexNumber = 1;

            Console.Write(""\nВведите издателя книги: "");
            string publisherBook = Console.ReadLine();

            foreach (Book book in _books)
            {
                if (publisherBook.ToLower() == book.Publisher.ToLower())
                {
                    book.Show(ref indexNumber);
                }
            }

            Console.WriteLine();
        }

        public void ShowBookByReleaseYear()
        {
            int indexNumber = 1;
            int number;

            Console.Write(""\nВведите год издания книги: "");
            string releaseYearBook = Console.ReadLine();

            foreach (Book book in _books)
            {
                bool result = int.TryParse(releaseYearBook, out number);
                if (result)
                {
                    book.Show(ref indexNumber);
                    Console.WriteLine();
                }
                else
                {
                    Console.WriteLine(""\nВведите год издания!!!"");
                }
            }
        }
    }

    class BooksGenerator
    {
        public List<Book> CreateShelf()
        {
            List<Book> books = new List<Book>();

            books.Add(new Book(""Война и Мир"", ""Л.Н. Толстой"", ""Астриель"", 1887));
            books.Add(new Book(""Анна Каренина"", ""Л.Н. Толстой"", ""Астриель"", 1888));
            books.Add(new Book(""Два старика"", ""Л.Н. Толстой"", ""Астриель"", 1889));
            books.Add(new Book(""Три старца"", ""Л.Н. Толстой"", ""Астриель"", 1890));

            return books;
        }
    }
}"
Z41phmuv,1 4 J,Technoblade777,C++,Monday 26th of June 2023 11:31:03 AM CDT,"#include<iostream>
#include<vector>
#include<map>
using namespace std;
int main()
{
    int N;
    map<int, int> m;
    cin >> N;
    vector<int> cord(2);
    for(int i = 0; i < N; i++)
    {
        cin >> cord[0] >> cord[1];
        if(m.count(cord[0])==0)
        {
            m.insert({cord[0], cord[1]});
        }
        else
        {
            if(m[cord[0]]<cord[1])
            {
                m[cord[0]]=cord[1];
            }
        }
    }
    int h;
    for(map<int, int>::iterator it = m.begin(); it!=m.end(); it++)
    {
        h+=it->second;
    }
    cout << h;
    return 0;
}
"
JVjDHFhi,Untitled,jeffreyf,PowerShell,Monday 26th of June 2023 11:22:58 AM CDT,"# Get the source and destination paths
$sourcePath = ""C:\Temp\EML""
$destinationPath = ""C:\Temp\PST.pst""

# Get a list of all the .EML files in the source path
$emlFiles = Get-ChildItem -Path $sourcePath -Filter ""*.eml""

# Loop through the .EML files and copy them to the destination PST
foreach ($emlFile in $emlFiles) {
    Copy-Item $emlFile.FullName $destinationPath
}
"
hy6AFZB0,Untitled,drFALOS,JSON,Monday 26th of June 2023 11:13:32 AM CDT,"{
    ""data"": {
        ""uuid"": ""eedc60d0-b832-40e2-9a45-b83b8ecade81"",
        ""title"": ""6456456"",
        ""description"": ""63434663446634hdfdfndfndfn"",
        ""active_cards_count"": 0,
        ""blocked_cards_count"": 8,
        ""cards_balance"": 8,
        ""account"": {
            ""uuid"": ""6e1041ce-d5d4-4d09-a609-ea0d730e1b66"",
            ""type"": 5,
            ""currency_id"": 2,
            ""iban"": ""0205299819457160"",
            ""description"": null,
            ""balance"": ""0.00"",
            ""status"": 0,
            ""created_at"": ""2023-05-22 12:13:47"",
            ""updated_at"": ""2023-05-22 12:13:47""
        },
        ""users"": [
            {
                ""uuid"": ""47f63b0f-4b39-4fdc-ac40-a53c5c7a01b9"",
                ""type"": 0,
                ""email"": ""dr.fallus@yandex.by"",
                ""email_verified_at"": null,
                ""language_id"": 2,
                ""default_currency_id"": 2,
                ""country_id"": null,
                ""created_at"": ""2023-06-05 22:20:29"",
                ""skype"": null,
                ""telegram"": ""gewgweg"",
                ""mfa_active"": false,
                ""timezone"": ""Europe\/Moscow"",
                ""date_format"": ""MM-DD-YYYY, HH:mm A"",
                ""grade"": 0,
                ""name"": null,
                ""role"": ""buyer"",
                ""account"": {
                    ""uuid"": ""64beb203-1dcb-4107-9d39-de3de0c1c0bd"",
                    ""type"": 5,
                    ""currency_id"": 2,
                    ""iban"": ""0205121744495729"",
                    ""description"": null,
                    ""balance"": ""15.00"",
                    ""status"": 0,
                    ""created_at"": ""2023-06-05 19:23:29"",
                    ""updated_at"": ""2023-06-05 19:25:53""
                },
                ""active_cards_count"": 0,
                ""blocked_cards_count"": 3,
                ""active_cards_sum"": 0,
                ""blocked_cards_sum"": 3,
                ""hold_sum"": 0
            }
        ],
        ""my_role"": ""owner"",
        ""settings"": {
            ""show_balance"": 0
        }
    }
}"
90UcNFyH,Untitled,drFALOS,JSON,Monday 26th of June 2023 11:12:11 AM CDT,"{
    ""data"": [
        {
            ""uuid"": ""fe3ea920-cb55-4b9d-aeb6-9c14d1052bbe"",
            ""title"": ""234"",
            ""description"": """",
            ""active_cards_count"": 0,
            ""blocked_cards_count"": 0,
            ""cards_balance"": 0,
            ""invite_uuid"": ""939a1f25-995a-4e59-9101-2aab02802089"",
            ""users_count"": 1,
            ""my_role"": ""owner"",
            ""account"": {
                ""uuid"": ""33ab278e-f07c-41c0-bb60-a8580ecacd9b"",
                ""type"": 5,
                ""currency_id"": 2,
                ""iban"": ""0205963364997320"",
                ""description"": null,
                ""balance"": ""0.00"",
                ""status"": 0,
                ""created_at"": ""2023-06-26 15:29:52"",
                ""updated_at"": ""2023-06-26 15:29:52""
            },
            ""settings"": {
                ""show_balance"": 0
            },
            ""join_request_count"": 0,
            ""demands_count"": 0
        },
        {
            ""uuid"": ""eedc60d0-b832-40e2-9a45-b83b8ecade81"",
            ""title"": ""6456456"",
            ""description"": ""63434663446634hdfdfndfndfn"",
            ""active_cards_count"": 0,
            ""blocked_cards_count"": 8,
            ""cards_balance"": 8,
            ""invite_uuid"": ""cb17e6cd-014d-4459-a04d-71faee75b40e"",
            ""users_count"": 2,
            ""my_role"": ""owner"",
            ""account"": {
                ""uuid"": ""6e1041ce-d5d4-4d09-a609-ea0d730e1b66"",
                ""type"": 5,
                ""currency_id"": 2,
                ""iban"": ""0205299819457160"",
                ""description"": null,
                ""balance"": ""0.00"",
                ""status"": 0,
                ""created_at"": ""2023-05-22 12:13:47"",
                ""updated_at"": ""2023-05-22 12:13:47""
            },
            ""settings"": {
                ""show_balance"": 0
            },
            ""join_request_count"": 0,
            ""demands_count"": 0
        }
    ],
    ""links"": {
        ""first"": ""http:\/\/api.epnnet.xyz\/teams?page=1"",
        ""last"": ""http:\/\/api.epnnet.xyz\/teams?page=1"",
        ""prev"": null,
        ""next"": null
    },
    ""meta"": {
        ""current_page"": 1,
        ""from"": 1,
        ""last_page"": 1,
        ""links"": [
            {
                ""url"": null,
                ""label"": ""&laquo; Previous"",
                ""active"": false
            },
            {
                ""url"": ""http:\/\/api.epnnet.xyz\/teams?page=1"",
                ""label"": ""1"",
                ""active"": true
            },
            {
                ""url"": null,
                ""label"": ""Next &raquo;"",
                ""active"": false
            }
        ],
        ""path"": ""http:\/\/api.epnnet.xyz\/teams"",
        ""per_page"": 25,
        ""to"": 2,
        ""total"": 2
    }
}"
1KaPLjbi,Case8Regex,cepxuozab,C++,Monday 26th of June 2023 11:03:10 AM CDT,"string GetFileContentsPraktikum(string file) {
        ifstream stream(file);
        return {(istreambuf_iterator<char>(stream)), istreambuf_iterator<char>()};
    }
void LocalIncludeNoExists() {
        error_code err;
        filesystem::remove_all(""sources""_p, err);
        filesystem::create_directories(""sources""_p, err);
        {
            ofstream file(""sources/a.cpp"");
            file << ""// this comment before include\n""
                    ""#include \""b.h\""\n""
                    ""// text between b.h and c.h\n""
                    ""\n""
                    ""int SayHello() {\n""
                    ""    cout << \""hello, world!\"" << endl;\n""
                    ""}\n""sv;
        }

        ASSERT(!(Preprocess(""sources""_p / ""a.cpp""_p, ""sources""_p / ""a.in""_p,
                                      {""sources""_p / ""include_dir""_p})));

        ostringstream test_out;
        test_out << ""// this comment before include\n""sv;

        ASSERT_EQUAL(GetFileContentsPraktikum(""sources/a.in""s), test_out.str());
    }
"
MMFVagQH,Untitled,Mysoft,FreeBasic,Monday 26th of June 2023 10:44:13 AM CDT,"dim as string sNome(2) = {""pedra"",""papel"",""tesoura""}
dim as integer iUsuario,iComputador,N

randomize()

do
  do
    cls  
    print ""1-pedra   2-papel   3-tesoura""
    print ""Qual voce quer? "";: iUsuario = getkey()-asc(""1"")
    if iUsuario>=0 and iUsuario<=2 then exit do
  loop
  while inkey<>"""": wend
    
  iComputador = int(rnd*3)
  print : print
  print ""Voce escolheu "";sNome(iUsuario)
  print "" Eu  escolhi  "";sNome(iComputador)
  print
  
  if iComputador = iUsuario then 
    print ""Empate!""
  elseif iUsuario=((iComputador+1) mod 3) then
    print ""Voce venceu :(""
  else
    print ""Eu Venci""
  end if  

  sleep
loop"
NTbMJa90,set lawnchair as default launcher,metalx1000,Bash,Monday 26th of June 2023 10:43:38 AM CDT,"#Get Lawnchair
wget --user-agent ""linux"" -c ""https://d.apkpure.com/b/APK/ch.deletescape.lawnchair.plah?version=latest"" -O ch.deletescape.lawnchair.plah.apk

#install LawnChair (with Permissions)
adb install -g ch.deletescape.lawnchair.plah.apk

#set lawnchair as default launcher
adb shell cmd package set-home-activity ch.deletescape.lawnchair.plah

#switch to new home screen
adb shell am start -a android.intent.action.MAIN -c android.intent.category.HOME"
yNL5sYHQ,Untitled,vvsvvs,C#,Monday 26th of June 2023 10:40:41 AM CDT,"using System;
using System.Collections.Generic;

namespace FishingBoat
{
    class Program
    {
        static void Main(string[] args)
        {
            const string SPRING = ""Spring"";
            const string AUTUMN = ""Autumn"";
            const string WINTER = ""Winter"";

            const decimal SPRING_PRICE = 3000.0m;
            const decimal SUMMER_AND_AUTUMN_PRICE = 4200.0m;
            const decimal WINTER_PRICE = 2600.0m;

            const decimal DISCONT_TO_THE_6_PERSON = .1m;
            const decimal DISCONT_TO_THE_11_PERSON = .15m;
            const decimal DISCONT_TO_THE_MORE_11_PERSON = .25m;

            decimal extraDiscount = 1.0m;

            decimal discont = 1.0m;

            int groupBudget = int.Parse(Console.ReadLine());
            string season = Console.ReadLine();
            int numberFishermen = int.Parse(Console.ReadLine());

            if (season != AUTUMN)
            {
                extraDiscount = 1.0m - .05m * (1 - (numberFishermen % 2));
            }

            if (numberFishermen <= 6)
            {
                discont = (1m - DISCONT_TO_THE_6_PERSON);
            }
            else if (numberFishermen >= 12)
            {
                discont = (1m - DISCONT_TO_THE_MORE_11_PERSON);
            }
            else
            {
                discont = (1m - DISCONT_TO_THE_11_PERSON);
            }

            decimal price = 1.0m;

            if (season == SPRING)
            {
                price = SPRING_PRICE;
            }
            else if (season == WINTER)
            {
                price = WINTER_PRICE;
            }
            else
            {
                price = SUMMER_AND_AUTUMN_PRICE;
            }

            price = price * discont * extraDiscount;

            decimal diff = 1m * groupBudget - price;

            if (diff >= 0)
                Console.WriteLine($""Yes! You have {diff:F2} leva left."");
            else
                Console.WriteLine($""Not enough money! You need {-diff:F2} leva."");
        }
    }
}
//Тони и приятели много обичали да ходят за риба, те са толкова запалени по риболова, че решават да отидат на риболов с кораб.
//Цената за наема на кораба зависи от сезона и броя рибари.
//Цената зависи от сезона:
//•	Цената за наем на кораба през пролетта е  3000 лв.
//•	Цената за наем на кораба през лятото и есента е  4200 лв.
//•	Цената за наем на кораба през зимата е  2600 лв.
//В зависимост от броя си групата ползва отстъпка:
//•	Ако групата е до 6 човека включително  –  отстъпка от 10%.
//•	Ако групата е от 7 до 11 човека включително  –  отстъпка от 15%.
//•	Ако групата е от 12 нагоре  –  отстъпка от 25%. 
//Рибарите ползват допълнително 5% отстъпка, ако са четен брой освен ако не е есен - тогава нямат допълнителна отстъпка, която се начислява след като се приспадне отстъпката по горните критерии.
//Напишете програма, която да пресмята дали рибарите ще съберат достатъчно пари. 
//Вход
//От конзолата се четат точно три реда.
//•	Бюджет на групата – цяло число в интервала [1…8000]
//•	Сезон –  текст: ""Spring"", ""Summer"", ""Autumn"", ""Winter""
//•	Брой рибари – цяло число в интервала [4…18]
//Изход
//Да се отпечата на конзолата един ред:
//•	Ако бюджетът е достатъчен:
//""Yes! You have {останалите пари} leva left.""
//•	Ако бюджетът НЕ Е достатъчен:
//""Not enough money! You need {сумата, която не достига} leva.""
//Сумите трябва да са форматирани с точност до два знака след десетичната запетая.
"
u5qKUEnP,item_router,ns09005264,Lua,Monday 26th of June 2023 10:33:35 AM CDT,"local args = { ... };
if args[1] == nil then
    print(""argment 1 require the filter chest name"");
    return;
end
if args[2] == nil then
    print(""argment 2 require the output chest name or side of computer, eg: top|left|right"");
    return;
end
if args[3] == nil then
    print(""argment 3 require the other chest name or side of computer, eg: top|left|right"");
    return;
end
local filter_chest = peripheral.wrap(args[1]);
local output = peripheral.wrap(args[2]);
local other = peripheral.wrap(args[3]);
local input = peripheral.wrap(""top"");

function readFilter()
    local set = {}
    for _, item in pairs(filter_chest.list()) do
        set[item.name] = true
    end
    return set
end

local isIDLE = false
local empty_times = 0

while true do
    local set = readFilter()
    local notEmpty = false
    for slot, item in pairs(input.list()) do
        notEmpty = true
        if set[item.name] ~= nil then
            input.pushItems(peripheral.getName(output), slot, item.count)
        else
            input.pushItems(peripheral.getName(other), slot, item.count)
        end
    end
    if notEmpty == false then
        empty_times = empty_times + 1
        if empty_times > 5 then
            isIDLE = true
        end
    else
        empty_times = 0
        isIDLE = false
    end

    if isIDLE then
        os.sleep(5)
    end
end
"
a15ezPaB,Bloxxed Hub - Universal (FPS),ImRealLenny,Lua,Monday 26th of June 2023 10:26:13 AM CDT,"-- You can use this: loadstring(game:HttpGet((""https://pastebin.com/raw/a15ezPaB""),true))()
-- I am very sorry for any problems with my hub that may have occured for past hour or so. I was fully aware of all the problems since the very beginning and was working on it. All problems known so far have been fixed and should no longer occur.
-- IF HOWEVER any problems occur, dm me on Discord (@bloxxylenny / BloxxyLenny#5061).
-- Instances:

local ScreenGui = Instance.new(""ScreenGui"")
local bg_main = Instance.new(""Frame"")
local aratio = Instance.new(""UIAspectRatioConstraint"")
local title = Instance.new(""TextLabel"")
local textConstraint = Instance.new(""UITextSizeConstraint"")
local sizeConstraint = Instance.new(""UISizeConstraint"")
local configs = Instance.new(""Frame"")
local UIGridLayout = Instance.new(""UIGridLayout"")
local subtitle = Instance.new(""TextLabel"")
local Assets = Instance.new(""Folder"")
local sectionMain = Instance.new(""TextLabel"")
local textConstraint_2 = Instance.new(""UITextSizeConstraint"")
local sectionSubInput = Instance.new(""Frame"")
local setting = Instance.new(""TextLabel"")
local textConstraint_3 = Instance.new(""UITextSizeConstraint"")
local input = Instance.new(""TextBox"")
local UICorner = Instance.new(""UICorner"")
local sectionSubBoolean = Instance.new(""Frame"")
local setting_2 = Instance.new(""TextLabel"")
local textConstraint_4 = Instance.new(""UITextSizeConstraint"")
local detection = Instance.new(""TextButton"")
local Visuals = Instance.new(""Folder"")
local espGui = Instance.new(""BillboardGui"")
local box = Instance.new(""Frame"")
local hp = Instance.new(""Frame"")
local current = Instance.new(""Frame"")
local name = Instance.new(""TextLabel"")
local bin = Instance.new(""Folder"")
local desc = Instance.new(""Frame"")
local descContent = Instance.new(""TextLabel"")
local textConstraint_5 = Instance.new(""UITextSizeConstraint"")
local NotPaintable = Instance.new(""Folder"")
local fovCircle = Instance.new(""Frame"")
local UICorner_2 = Instance.new(""UICorner"")
local Glow = Instance.new('Highlight')

-- Made it myself cuz converter sucks
local stroke_src = Instance.new('UIStroke')
stroke_src.Color = Color3.fromRGB(166, 166, 166)
stroke_src.ApplyStrokeMode = Enum.ApplyStrokeMode.Border

local strk_parents = {
	sectionMain,
	subtitle,
	title,
	desc,
}

for i, v in pairs(strk_parents) do
	local stroke_copy = stroke_src:Clone()
	stroke_copy.Parent = v
	stroke_copy.Name = v.Name..'_stroke'
end

local fovStroke = stroke_src:Clone()
fovStroke.Color = Color3.fromRGB(235, 0, 0)
fovStroke.Parent = fovCircle

stroke_src:Destroy()

--Properties:

ScreenGui.Name = "" ""
ScreenGui.Parent = game.Players.LocalPlayer.PlayerGui
ScreenGui.Enabled = true
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
ScreenGui.DisplayOrder = 999999998
ScreenGui.ResetOnSpawn = false

local ScreenGui_FOVCopy = ScreenGui:Clone()
ScreenGui_FOVCopy.Parent = ScreenGui.Parent
ScreenGui_FOVCopy.DisplayOrder = ScreenGui.DisplayOrder + 1

bg_main.Name = ""bg_main""
bg_main.Parent = ScreenGui
bg_main.AnchorPoint = Vector2.new(0.5, 0.5)
bg_main.BackgroundColor3 = Color3.fromRGB(40, 41, 45)
bg_main.BorderColor3 = Color3.fromRGB(0, 0, 0)
bg_main.BorderSizePixel = 0
bg_main.Position = UDim2.new(0.5, 0, 0.5, 0)
bg_main.Size = UDim2.new(0.61500001, 0, 0.925000012, 0)
bg_main.ZIndex = 3

aratio.Name = ""aratio""
aratio.Parent = bg_main
aratio.AspectRatio = 1.250

title.Name = ""title""
title.Parent = bg_main
title.AnchorPoint = Vector2.new(0.5, 0)
title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
title.BackgroundTransparency = 1.000
title.BorderColor3 = Color3.fromRGB(0, 0, 0)
title.BorderSizePixel = 0
title.Position = UDim2.new(0.5, 0, 0, 0)
title.Size = UDim2.new(1, 0, 0.0500000007, 0)
title.Font = Enum.Font.SourceSans
title.Text = "" Bloxxed Hub - <game_name>""
title.TextColor3 = Color3.fromRGB(166, 166, 166)
title.TextScaled = true
title.TextSize = 14.000
title.TextStrokeTransparency = 0.500
title.TextWrapped = true
title.TextXAlignment = Enum.TextXAlignment.Left

textConstraint.Name = ""textConstraint""
textConstraint.Parent = title
textConstraint.MaxTextSize = 22

sizeConstraint.Name = ""sizeConstraint""
sizeConstraint.Parent = bg_main
sizeConstraint.MaxSize = Vector2.new(706, 585)

configs.Name = ""configs""
configs.Parent = bg_main
configs.AnchorPoint = Vector2.new(0.5, 0.5)
configs.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
configs.BackgroundTransparency = 1.000
configs.BorderColor3 = Color3.fromRGB(0, 0, 0)
configs.BorderSizePixel = 0
configs.Position = UDim2.new(0.5, 0, 0.550000012, 0)
configs.Size = UDim2.new(0.850000024, 0, 0.774999976, 0)

UIGridLayout.Parent = configs
UIGridLayout.FillDirection = Enum.FillDirection.Vertical
UIGridLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIGridLayout.CellPadding = UDim2.new(0.200000003, 0, 0, 3)
UIGridLayout.CellSize = UDim2.new(0.400000006, 0, 0.0700000003, 0)

subtitle.Name = ""subtitle""
subtitle.Parent = bg_main
subtitle.AnchorPoint = Vector2.new(0, 1)
subtitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
subtitle.BackgroundTransparency = 1.000
subtitle.BorderColor3 = Color3.fromRGB(0, 0, 0)
subtitle.BorderSizePixel = 0
subtitle.Position = UDim2.new(0, 0, 1, 0)
subtitle.Size = UDim2.new(1, 0, 0.0500000007, 0)
subtitle.Font = Enum.Font.SourceSansBold
subtitle.Text = ""Made by  bloxxylenny on Discord | \""Insert\"" to Show/Hide UI | User ID: <userid>""
subtitle.TextColor3 = Color3.fromRGB(166, 166, 166)
subtitle.TextScaled = true
subtitle.TextSize = 14.000
subtitle.TextWrapped = true

Assets.Name = ""Assets""
Assets.Parent = ScreenGui

sectionMain.Name = ""sectionMain""
sectionMain.Parent = Assets
sectionMain.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
sectionMain.BackgroundTransparency = 1.000
sectionMain.BorderColor3 = Color3.fromRGB(0, 0, 0)
sectionMain.BorderSizePixel = 0
sectionMain.Size = UDim2.new(0.400000006, 0, 0.0700000003, 0)
sectionMain.Visible = false
sectionMain.Font = Enum.Font.SourceSans
sectionMain.Text = ""[section_name]""
sectionMain.TextColor3 = Color3.fromRGB(166, 166, 166)
sectionMain.TextScaled = true
sectionMain.TextSize = 14.000
sectionMain.TextStrokeTransparency = 0.500
sectionMain.TextWrapped = true

textConstraint_2.Name = ""textConstraint""
textConstraint_2.Parent = sectionMain
textConstraint_2.MaxTextSize = 22

sectionSubInput.Name = ""sectionSubInput""
sectionSubInput.Parent = Assets
sectionSubInput.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
sectionSubInput.BackgroundTransparency = 0.950
sectionSubInput.BorderColor3 = Color3.fromRGB(0, 0, 0)
sectionSubInput.BorderSizePixel = 0
sectionSubInput.Size = UDim2.new(0.400000006, 0, 0.0700000003, 0)
sectionSubInput.Visible = false

setting.Name = ""setting""
setting.Parent = sectionSubInput
setting.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
setting.BackgroundTransparency = 1.000
setting.BorderColor3 = Color3.fromRGB(0, 0, 0)
setting.BorderSizePixel = 0
setting.Size = UDim2.new(0.600000024, 0, 1, 0)
setting.Font = Enum.Font.SourceSans
setting.Text = ""settingName:""
setting.TextColor3 = Color3.fromRGB(166, 166, 166)
setting.TextScaled = true
setting.TextSize = 14.000
setting.TextStrokeTransparency = 0.500
setting.TextWrapped = true
setting.TextXAlignment = Enum.TextXAlignment.Left

textConstraint_3.Name = ""textConstraint""
textConstraint_3.Parent = setting
textConstraint_3.MaxTextSize = 20

input.Name = ""input""
input.Parent = sectionSubInput
input.AnchorPoint = Vector2.new(1, 0)
input.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
input.BackgroundTransparency = 0.500
input.BorderColor3 = Color3.fromRGB(0, 0, 0)
input.BorderSizePixel = 0
input.Position = UDim2.new(1, 0, 0, 0)
input.Size = UDim2.new(0.400000006, 0, 1, 0)
input.Font = Enum.Font.SourceSans
input.PlaceholderColor3 = Color3.fromRGB(125, 125, 125)
input.PlaceholderText = ""_placeholder""
input.Text = """"
input.TextColor3 = Color3.fromRGB(166, 166, 166)
input.TextScaled = true
input.TextSize = 14.000
input.TextWrapped = true

UICorner.CornerRadius = UDim.new(0.25, 0)
UICorner.Parent = input

sectionSubBoolean.Name = ""sectionSubBoolean""
sectionSubBoolean.Parent = Assets
sectionSubBoolean.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
sectionSubBoolean.BackgroundTransparency = 0.950
sectionSubBoolean.BorderColor3 = Color3.fromRGB(0, 0, 0)
sectionSubBoolean.BorderSizePixel = 0
sectionSubBoolean.Size = UDim2.new(0.400000006, 0, 0.0700000003, 0)
sectionSubBoolean.Visible = false

setting_2.Name = ""setting""
setting_2.Parent = sectionSubBoolean
setting_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
setting_2.BackgroundTransparency = 1.000
setting_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
setting_2.BorderSizePixel = 0
setting_2.Size = UDim2.new(1, 0, 1, 0)
setting_2.Font = Enum.Font.SourceSans
setting_2.Text = ""settingName: boolean""
setting_2.TextColor3 = Color3.fromRGB(166, 166, 166)
setting_2.TextScaled = true
setting_2.TextSize = 14.000
setting_2.TextStrokeTransparency = 0.500
setting_2.TextWrapped = true
setting_2.TextXAlignment = Enum.TextXAlignment.Left

textConstraint_4.Name = ""textConstraint""
textConstraint_4.Parent = setting_2
textConstraint_4.MaxTextSize = 20

detection.Name = ""detection""
detection.Parent = sectionSubBoolean
detection.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
detection.BackgroundTransparency = 1.000
detection.BorderColor3 = Color3.fromRGB(0, 0, 0)
detection.BorderSizePixel = 0
detection.Size = UDim2.new(1, 0, 1, 0)
detection.ZIndex = 2
detection.Font = Enum.Font.SourceSans
detection.Text = """"
detection.TextColor3 = Color3.fromRGB(0, 0, 0)
detection.TextSize = 14.000

Visuals.Name = ""Visuals""
Visuals.Parent = Assets

espGui.Name = ""espGui""
espGui.Parent = Visuals
espGui.Enabled = false
espGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
espGui.Active = true
espGui.AlwaysOnTop = true
espGui.LightInfluence = 1.000
espGui.Size = UDim2.new(4.5, 0, 6, 0)

box.Name = ""box""
box.Parent = espGui
box.AnchorPoint = Vector2.new(0.5, 0.5)
box.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
box.BackgroundTransparency = 1.000
box.BorderColor3 = Color3.fromRGB(0, 0, 0)
box.BorderSizePixel = 0
box.Position = UDim2.new(0.5, 0, 0.5, 0)
box.Size = UDim2.new(0.899999976, 0, 0.925000012, 0)

hp.Name = ""hp""
hp.Parent = espGui
hp.AnchorPoint = Vector2.new(0, 1)
hp.BackgroundColor3 = Color3.fromRGB(166, 0, 0)
hp.BorderColor3 = Color3.fromRGB(0, 0, 0)
hp.BorderSizePixel = 0
hp.Position = UDim2.new(0, 0, 1, 0)
hp.Size = UDim2.new(0.0500000007, 0, 1, 0)

current.Name = ""current""
current.Parent = hp
current.AnchorPoint = Vector2.new(0, 1)
current.BackgroundColor3 = Color3.fromRGB(2, 198, 15)
current.BorderColor3 = Color3.fromRGB(0, 0, 0)
current.BorderSizePixel = 0
current.Position = UDim2.new(0, 0, 1, 0)
current.Size = UDim2.new(1, 0, 0.5, 0)

name.Name = ""name""
name.Parent = espGui
name.AnchorPoint = Vector2.new(0, 1)
name.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
name.BackgroundTransparency = 1.000
name.BorderColor3 = Color3.fromRGB(0, 0, 0)
name.BorderSizePixel = 0
name.Position = UDim2.new(0, 0, 1, 0)
name.Size = UDim2.new(1, 0, 0.200000003, 0)
name.Font = Enum.Font.SourceSansBold
name.Text = ""Dummy\\n0 stds""
name.TextColor3 = Color3.fromRGB(255, 255, 255)
name.TextSize = 14.000
name.TextStrokeTransparency = 0.500

bin.Name = ""bin""
bin.Parent = ScreenGui

desc.Name = ""desc""
desc.Parent = ScreenGui
desc.AnchorPoint = Vector2.new(0, 0.5)
desc.BackgroundColor3 = Color3.fromRGB(40, 41, 45)
desc.BorderColor3 = Color3.fromRGB(0, 0, 0)
desc.BorderSizePixel = 0
desc.Position = UDim2.new(0.5, 0, 0.5, 0)
desc.Size = UDim2.new(0, 150, 0, 60)
desc.Visible = false
desc.ZIndex = 5

descContent.Name = ""descContent""
descContent.Parent = desc
descContent.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
descContent.BackgroundTransparency = 1.000
descContent.BorderColor3 = Color3.fromRGB(0, 0, 0)
descContent.BorderSizePixel = 0
descContent.Size = UDim2.new(1, 0, 1, 0)
descContent.Font = Enum.Font.SourceSans
descContent.Text = ""Description""
descContent.TextColor3 = Color3.fromRGB(166, 166, 166)
descContent.TextScaled = true
descContent.TextSize = 14.000
descContent.TextStrokeTransparency = 0.500
descContent.TextWrapped = true
descContent.TextXAlignment = Enum.TextXAlignment.Left

textConstraint_5.Name = ""textConstraint""
textConstraint_5.Parent = descContent
textConstraint_5.MaxTextSize = 22

NotPaintable.Name = ""NotPaintable""
NotPaintable.Parent = ScreenGui

fovCircle.Name = ""fovCircle""
fovCircle.Parent = ScreenGui_FOVCopy
fovCircle.AnchorPoint = Vector2.new(0.5, 0.5)
fovCircle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
fovCircle.BackgroundTransparency = 1.000
fovCircle.BorderColor3 = Color3.fromRGB(0, 0, 0)
fovCircle.BorderSizePixel = 0
fovCircle.Size = UDim2.new(0, 90, 0, 90)
fovCircle.Visible = false

UICorner_2.CornerRadius = UDim.new(1, 0)
UICorner_2.Parent = fovCircle

Glow.Parent = Visuals
Glow.OutlineTransparency = 1
Glow.FillTransparency = .5
Glow.Name = 'glow'

-- Scripts:

local function TZVJ_fake_script() -- ScreenGui._main 
	local script = Instance.new('LocalScript', ScreenGui)

	repeat
		wait(.1)
	until game:IsLoaded()
	
	local function makeMsg(content: string)
		game.StarterGui:SetCore('SendNotification', {
			[""Title""] = 'Bloxxed Hub',
			[""Text""] = content,
			[""Duration""] = 7.5,
			[""Icon""] = 'rbxassetid://13870599891',
		})
	end
	
	makeMsg('Loaded')
	
	local player = game.Players.LocalPlayer
	
	local title = script.Parent.bg_main.title -- dragable shit
	local bg = script.Parent.bg_main
	
	title.Text = string.gsub(title.Text, '<game_name>', game.Name)
	bg.subtitle.Text = string.gsub(bg.subtitle.Text, '<userid>', tostring(player.UserId))
	
	local uip = game:GetService('UserInputService')
	
	local noclipEnabled = false
	local noclipUp = 0
	
	local cheats = {
		[""Visuals""] = {
			[""ESP""] = {false, 'Enable the whole section.'},
			[""Glow""] = {false, 'Enable player highlight.'},
			[""Box""] = {false, 'Enable box ESP overlay.'},
			[""HP Display""] = {false, 'Enable healthpoint display.'},
			[""Aimbot Distance""] = {math.huge, 'Set maximum range of aimbot.'},
			[""Name Display""] = {false, 'Enable name display.'},
			[""Faster Mode""] = {false, 'ESP Applies only to players in camera field of view. Less responsive but saves some FPS.'},
		},
		[""FPS Related""] = {
			[""Aimbot""] = {false, 'Make the script do the whole aiming for You.'},
			[""Aimbot Smoothing""] = {false, 'Make aimbot smoothly aim onto enemy, instead of locking on instantly.'},
			[""Smoothing Alpha""] = {.85, 'Set the alpha of aimbot smoothing. The lower the alpha the more smoothing will be applied.', {0, 1}},
			[""FOV Based""] = {false, 'Make aimbot check if player is in given field of view.'},
			[""Aimbot FOV""] = {90, 'Argument for FOV based aimbot.', {15, 500}},
			[""Target Part""] = {'Head', 'Name of bodypart that aimbot will lock on.'},
		},
		[""Misc""] = {
			[""Noclip""] = {false, 'Makes user fly freely and throughout the walls.'},
			[""Noclip Keybind""] = {'RightAlt', 'Change keybind to toggle the noclip.'},
			[""Noclip Speed""] = {50, 'Determines speed of noclip.', {0, 250}},
			[""Ignore Teams""] = {false, 'Determines whenever cheats ignore teams thus making them neutral toward everyone'},
			[""Ignore Friends""] = {false, 'Makes aimbot ignore players that are friends with user'},
		},
	}
	
	local moveDown = false
	local moveUp = false
	
	uip.InputBegan:Connect(function(key, gpe)
		if not gpe then
	
			if key.KeyCode == Enum.KeyCode.Insert then
				script.Parent.Enabled = not script.Parent.Enabled
			elseif key.KeyCode == Enum.KeyCode.KeypadPlus then
				moveUp = true
			elseif key.KeyCode == Enum.KeyCode.KeypadMinus then
				moveDown = true
			end
		end
	end)
	
	uip.InputBegan:Connect(function(key, gpe)
		if not gpe then
	
			if key.KeyCode == Enum.KeyCode.KeypadPlus then
				moveUp = false
			elseif key.KeyCode == Enum.KeyCode.KeypadMinus then
				moveDown = false
			elseif key.KeyCode == Enum.KeyCode[cheats.Misc[""Noclip Keybind""][1]] then
				if cheats.Misc.Noclip[1] then
					noclipEnabled = not noclipEnabled
					
					local state = 'enabled'
					
					if not noclipEnabled then
						state = 'disabled'
					end
					
					makeMsg('Noclip '..state)
					
					if not noclipEnabled then
						local selfRoot: BasePart = player.Character:FindFirstChild('HumanoidRootPart')
						
						if selfRoot then
							selfRoot.Anchored = false
						end
					end
				end
			end
		end
	end)
	
	local currentScheme = 1
	
	local colorSchemes = {
		[1] = {
			[""Title""] = 'Fog',
			[""Primary""] = Color3.fromRGB(40, 41, 45),
			[""Secondary""] = Color3.fromRGB(166, 166, 166),
		},
		[2] = {
			[""Title""] = 'Ultraviolet',
			[""Primary""] = Color3.fromRGB(56, 32, 61),
			[""Secondary""] = Color3.fromRGB(199, 66, 223),
		},
		[3] = {
			[""Title""] = 'Storm',
			[""Primary""] = Color3.fromRGB(18, 20, 45),
			[""Secondary""] = Color3.fromRGB(29, 100, 194),
		},
		[4] = {
			[""Title""] = 'Moon',
			[""Primary""] = Color3.fromRGB(25, 30, 35),
			[""Secondary""] = Color3.fromRGB(183, 108, 26),
		},
		[5] = {
			[""Title""] = 'Bloody',
			[""Primary""] = Color3.fromRGB(35, 0, 0),
			[""Secondary""] = Color3.fromRGB(199, 0, 3),
		},
		[6] = {
			[""Title""] = 'Blackout',
			[""Primary""] = Color3.fromRGB(0, 0, 0),
			[""Secondary""] = Color3.fromRGB(225, 225, 225),
		},
		[7] = {
			[""Title""] = 'Toxic',
			[""Primary""] = Color3.fromRGB(5, 31, 0),
			[""Secondary""] = Color3.fromRGB(15, 225, 0),
		},
		[8] = {
			[""Title""] = 'Hacker',
			[""Primary""] = Color3.fromRGB(0, 0, 0),
			[""Secondary""] = Color3.fromRGB(0, 255, 0),
		},
	}
	
	local offset = UDim2.new(0, 0, 0, 0)
	
	local hoverOverDraggable = false
	local dragging = false
	
	local smoothing_v2 = Vector2.new()
	
	title.MouseEnter:Connect(function() hoverOverDraggable = true end)
	title.MouseLeave:Connect(function() hoverOverDraggable = false end)
	
	local mouse = player:GetMouse()
	
	local aimbotKeyDown = false
	
	mouse.Button2Down:Connect(function() aimbotKeyDown = true end)
	mouse.Button2Up:Connect(function() aimbotKeyDown = false end)
	
	mouse.Button1Down:Connect(function()
		if hoverOverDraggable then
			dragging = true
		end
	end)
	
	mouse.Button1Up:Connect(function() dragging = false end)
	
	for sectionName: string, _settings: {any} in pairs(cheats) do
		local section = script.Parent.Assets.sectionMain:Clone()
		section.Text = '['..sectionName..']'
		section.Parent = bg.configs
		
		section.Visible = true
		
		for settingName: string, _setting_config: {any} in pairs(_settings) do
			local deafultValue: boolean | string | number = _setting_config[1]
			local desc: string = _setting_config[2] or '...'
			local clamp: {number}? = _setting_config[3]
			
			local tof = typeof(deafultValue)
			
			local settingFrame
			
			if tof == 'string' or tof == 'number' then
				local setting = script.Parent.Assets.sectionSubInput:Clone()
				setting.setting.Text = settingName..':'
				setting.input.PlaceholderText = tostring(deafultValue)
				setting.Parent = bg.configs
				settingFrame = setting
				
				setting.Visible = true
				
				local focused = false
				
				setting.input.Focused:Connect(function()
					focused = true
				end)
				
				setting.input.FocusLost:Connect(function()
					if focused then
						focused = false
						
						if setting.input.Text ~= '' then
							
							if tof == 'number' then
								local newVal = tonumber(setting.input.Text)
	
								if clamp then
									newVal = math.max(clamp[1], math.min(newVal, clamp[2]))
								end
								
								setting.input.PlaceholderText = tostring(newVal)
								cheats[sectionName][settingName][1] = newVal
							else
								setting.input.PlaceholderText = setting.input.Text
								cheats[sectionName][settingName][1] = setting.input.Text
							end
	
							makeMsg(settingName..' has been set to '..tostring(cheats[sectionName][settingName][1]))
	
							setting.input.Text = ''
						end
					end
				end)
			elseif tof == 'boolean' then
				local setting = script.Parent.Assets.sectionSubBoolean:Clone()
				setting.setting.Text = settingName..': '..tostring(deafultValue)
				setting.Parent = bg.configs
				
				settingFrame = setting
				
				setting.detection.MouseButton1Click:Connect(function()
					cheats[sectionName][settingName][1] = not cheats[sectionName][settingName][1]
					
					setting.setting.Text = settingName..': '..tostring(cheats[sectionName][settingName][1])
					makeMsg(settingName..' has been set to '..tostring(cheats[sectionName][settingName][1]))
				end)
				
				setting.Visible = true
			end
			
			if settingFrame then
				settingFrame.MouseEnter:Connect(function()
					script.Parent.desc.Position = UDim2.new(0, mouse.X, 0, mouse.Y + 36)
					script.Parent.desc.Visible = true
					
					script.Parent.desc.descContent.Text = desc
				end)
	
				settingFrame.MouseLeave:Connect(function()
					script.Parent.desc.Visible = false
				end)
			end
		end
	end
	
	local colorschemeChanger = script.Parent.Assets.sectionSubBoolean:Clone()
	colorschemeChanger.Parent = bg.configs
	colorschemeChanger.Visible = true
	
	colorschemeChanger.setting.Text = 'Color Scheme: '..colorSchemes[currentScheme].Title
	
	colorschemeChanger.detection.MouseButton1Click:Connect(function()
		currentScheme += 1
		
		if not colorSchemes[currentScheme] then
			currentScheme = 1
		end
		
		colorschemeChanger.setting.Text = 'Color Scheme: '..colorSchemes[currentScheme].Title
	end)
	
	local cam = workspace.CurrentCamera
	
	local function get_nearest_player()
		local maxDist = cheats[""FPS Related""][""Aimbot FOV""][1]
		local target = nil
		
		for _, plr in ipairs(game.Players:GetPlayers()) do
			
			local character = plr.Character
			
			if character then
				
				if character ~= player.Character then
					local root: BasePart, selfRoot: BasePart = character:FindFirstChild('HumanoidRootPart'), player.Character:FindFirstChild('HumanoidRootPart')
					local hum = character:FindFirstChildWhichIsA('Humanoid')

					if root and selfRoot and hum then

						local mag = (root.Position - selfRoot.Position).Magnitude

						if mag < maxDist and hum.Health > 0 then

							local pos_on_screen, onScreen = cam:WorldToScreenPoint(root.Position)

							if onScreen then

								local mouseV2 = Vector2.new(mouse.X, mouse.Y + 36)

								pos_on_screen = Vector2.new(pos_on_screen.X, pos_on_screen.Y)

								local scr_mag = (mouseV2 - pos_on_screen).Magnitude

								if scr_mag <= cheats[""FPS Related""][""Aimbot FOV""][1] and cheats[""FPS Related""][""FOV Based""][1] or not cheats[""FPS Related""][""FOV Based""][1] then

									if plr.Team ~= player.Team or player.Neutral or cheats.Misc[""Ignore Teams""][1] then

										if not cheats.Misc[""Ignore Friends""] or cheats.Misc[""Ignore Friends""] and not plr:IsFriendsWith(player.UserId) then
											maxDist = mag
											target = character
										end
									end
								end
							end
						end
					end
				end
			end
		end
		
		return target
	end
	
	game:GetService('RunService').RenderStepped:Connect(function(delta)
		local act_scheme = colorSchemes[currentScheme]
		
		for _, v: Instance in ipairs(script.Parent:GetDescendants()) do
			if not v:FindFirstAncestor('NotPaintable') and not v:FindFirstAncestor('Assets') then
				if v:IsA('Frame') then
					v.BackgroundColor3 = v.BackgroundColor3:Lerp(act_scheme.Primary, .15)
				elseif v:IsA('UIStroke') then
					v.Color = v.Color:Lerp(act_scheme.Secondary, .15)
				elseif v:IsA('TextLabel') or v:IsA('TextBox') then
					v.TextColor3 = v.TextColor3:Lerp(act_scheme.Secondary, .15)
				end
			end
		end
		
		fovCircle.Visible = cheats[""FPS Related""][""FOV Based""][1]
		fovCircle.Position = UDim2.new(0, mouse.X, 0, mouse.Y)
		
		local fov_xy = cheats[""FPS Related""][""Aimbot FOV""][1]
		
		fovCircle.Size = UDim2.new(0, fov_xy, 0, fov_xy)
		
		smoothing_v2 = smoothing_v2:Lerp(Vector2.new(mouse.X + offset.X.Offset, mouse.Y + offset.Y.Offset), .1)
		
		if dragging then
			bg.Position = UDim2.new(0, smoothing_v2.X, 0, smoothing_v2.Y, 0)
		else
			offset = UDim2.new(0, bg.title.Position.X.Offset, 0, 36 + title.Position.Y.Offset + (.5 * bg.AbsoluteSize.Y))
		end
		
		-- cheats
		
		-- esp
		
		for i, v in ipairs(script.Parent.bin:GetChildren()) do
			v:Destroy()
		end
		
		if cheats.Visuals.ESP[1] then
			for i, v in ipairs(game.Players:GetPlayers()) do
				local character = v.Character
				
				if character then
					
					if character ~= player.Character then
						
						local root: BasePart = character:FindFirstChild('HumanoidRootPart')
						
						if root then
							
							local _, onScreen = cam:WorldToScreenPoint(root.Position)
							
							if onScreen and cheats.Visuals[""Faster Mode""][1] or not cheats.Visuals[""Faster Mode""][1] then
								
								local gui = script.Parent.Assets.Visuals.espGui:Clone()
								gui.Parent = script.Parent.bin
								gui.Adornee = root
								
								if cheats.Visuals.Glow[1] then
									local glow = Glow:Clone()
									glow.Parent = script.Parent.bin
									glow.Adornee = character
									
									local c = Color3.new(.78, .78, .78)
									
									if not v.Neutral then
										c = v.TeamColor
									end
									
									if cheats.Misc[""Ignore Teams""][1] then
										c = Color3.new(.88, 0, 0)
									end
									
									glow.FillColor = c
								end
								
								gui.Enabled = true
								
								local magnitude = 0
								
								local selfRoot: BasePart = player.Character:FindFirstChild('HumanoidRootPart')
								
								if selfRoot then
									magnitude = (root.Position - selfRoot.Position).Magnitude
									magnitude = math.round(magnitude * 50) / 50
								end
								
								gui.box.Visible = cheats.Visuals.Box[1]
								gui.hp.Visible = cheats.Visuals[""HP Display""][1]
								gui.name.Visible = cheats.Visuals['Name Display'][1]
								
								local humanoid = character:FindFirstChildWhichIsA('Humanoid')
								
								gui.name.Text = v.DisplayName..' (@'..v.Name..')\n'..tostring(magnitude)..' stds'
								
								if humanoid then
									gui.hp.current.Size = UDim2.new(1, 0, humanoid.Health / humanoid.MaxHealth, 0)
								end
							end
						end
					end
				end
			end
		end
		
		-- aimbot
		
		if cheats[""FPS Related""].Aimbot[1] and aimbotKeyDown then
			
			local closest_plr_char = get_nearest_player()
			
			if closest_plr_char then
				local targetPart: BasePart = closest_plr_char:FindFirstChild(cheats[""FPS Related""][""Target Part""][1])
				
				if not targetPart then
					targetPart = closest_plr_char:FindFirstChild('Head')
				end
				
				if targetPart then
					
					local targetCFrame = CFrame.new(cam.CFrame.Position) * CFrame.lookAt(cam.CFrame.Position, targetPart.Position).Rotation
					
					if cheats[""FPS Related""][""Aimbot Smoothing""][1] then
						
						targetCFrame = CFrame.new(cam.CFrame.Position) * cam.CFrame.Rotation:Lerp(CFrame.lookAt(cam.CFrame.Position, targetPart.Position).Rotation, cheats[""FPS Related""][""Smoothing Alpha""][1])
					end
					
					cam.CFrame = targetCFrame
				end
			end
		end
		
		-- noclip
		
		if cheats.Misc.Noclip[1] and noclipEnabled then
			
			local selfHum = player.Character:FindFirstChildWhichIsA('Humanoid')
			
			if selfHum then
				
				local moveDir = selfHum.MoveDirection
				local selfRoot: BasePart = player.Character:FindFirstChild('HumanoidRootPart')
				
				if selfRoot then
					selfRoot.Anchored = true
					
					local moveMultiplier = 0
					
					if moveUp then
						moveMultiplier += 1
					end
					
					if moveDown then
						moveMultiplier -= 1
					end
					
					local v3 = Vector3.new(0, cheats.Misc[""Noclip Speed""][1] * delta * moveMultiplier)
					
					selfRoot.CFrame = CFrame.new(selfRoot.Position + (moveDir * cheats.Misc[""Noclip Speed""][1] * delta) + v3) * cam.CFrame.Rotation
				end
			end
		end
	end)
end
coroutine.wrap(TZVJ_fake_script)()
"
XFUTFA5D,Untitled,EthersiatTv,Lua,Monday 26th of June 2023 10:17:39 AM CDT,"local m = peripheral.wrap(""left"")
m.clear()
m.setTextScale(1.5)
 
m.setCursorPos(30,1)
m.write(""ARTY"")
 
m.setCursorPos(35,2)
m.write(""..."")
 
m.setCursorPos(1,7)
m.write(""Qu'est ce que ARTY ?"")
 
m.setCursorPos(1,8)
m.write(""- Déjà y à la même chose en face :)"")
 
m.setCursorPos(1,9)
m.write(""- Un magasin de vente de programmes computercraft et"")
m.setCursorPos(1,10)
m.write("" d'objet computercraft"")

m.setCursorPos(1,11)
m.write(""- Merci de contacter @realvladilena pour la vente"")

m.setCursorPos(1,15)
m.write(""MAGASIN PAS ENCORE OPEN :)"")"
8uuGLgQL,Months 1.01,dllbridge,C,Monday 26th of June 2023 10:15:19 AM CDT,"//  The beginning of the file ""main.cpp""
//  - - - - - - - - - - - - - - - - - -

#include  <stdio.h>
#include  ""resource/Cdate.h""




////////////////////////////////////////////////////
int main()                                        // 
{

	for(int i = 1; i <= 12; i++)
	{
	   printf(""%10s has %d days\n"", Month[i].pszMon, 
									Month[i].nDays);
    }

return 0;	
}



//  The beginning of the file ""Cdate.h""
//  - - - - - - - - - - - - - - - - - -


/////////////////////////////////////////////////
class Cdate
{
	
	static  int  nCounter;                     // Будет подсчитывать и хранить кол-во созданных объектов - месяцев
	
    public:	
	int          nDays;                        //                                        Кол-во дней в этом месяце
	
	const char *pszMon;  	                   //                                                  Название месяца
	
	
	////////методы///////
	Cdate();                                   //      Инициализирует 12 объектов класса параметрами 12-ти месяцев.
   ~Cdate();                                   //      Деструктор пригодится для паузы перед завершением программы.

};



extern Cdate   Month[14];                      //                           Массив месяцев (объектов класса Cdate)  








//  The beginning of the file ""Cdate.cpp""
//  - - - - - - - - - - - - - - - - - -

#include  <stdlib.h>
#include   <stdio.h>
#include   ""Cdate.h""

int _nDays[14] = {0, 31, 28, 31, 30, 31, 30,                           //   Кол-во дней в месяцах для невисокосного 
                     31, 31, 30, 31, 30, 31, 0};                       //                                      года.

const char *pszMonths[14] = {        ""Zero"",                           // The element with index 0 will not be used, 
                                  ""January"",
                                 ""February"",
				                    ""March"",
						            ""April"",
						              ""May"",
						             ""June"",
						             ""July"",
					               ""August"",
					            ""September"",
					              ""October"",
				                 ""November"",
				                 ""December"" 
						    };

int  Cdate::nCounter = -1;

Cdate    Month[14];                                                                                   //  12 месяцев


//            Инициализирует 12 объектов класса параметрами 12-ти месяцев.
/////////////////////////////////////////////////////////////////////////
Cdate::Cdate()                                                         //
{
	
	   int i = ++ nCounter;
	         
	   if(i <= 12)
	   {
		  
		  Month[i].pszMon = pszMonths[i];
		  Month[i].nDays  =    _nDays[i];	   	  
	   }
}



//            Деструктор пригодится для паузы перед завершением программы.
/////////////////////////////////////////////////////////////////////////
Cdate::~Cdate()                                                        //
{
	if(nDays == 28)    
	{
	   printf("" - - - - - - - - - - -\n"");	
	   printf(""%s destructor works.  \n"", pszMon);	
	   system(""pause"");	
	}
	
}






"
YDt4aTzR,Untitled,BlackPymer,Python,Monday 26th of June 2023 10:10:19 AM CDT,"import math

def check(num):
	if num <10:
		return '0'+str(num)
	else:
		return str(num)


col = int(input())
for i in range(col):
	inp = input()
	ans = 0
	h = int(inp[:inp.index(':')])
	inp = inp[inp.index(':')+1:]
	m = int(inp[:inp.index(' ')])
	s = int(inp[inp.index("" ""):])
	num = math.gcd(1440//s,1440)
	for i in range(num):
		a=check(h)
		b=check(m)
		if a == b[1]+b[0]:
			ans+=1
		m+=s
		while m >59:
			h+=1
			m-=60
	print(ans)
"
ZZtBnP80,Eraser,MAGCARI,C++,Monday 26th of June 2023 10:03:32 AM CDT,"#include<bits/stdc++.h>
using namespace std;
long long price[35];
int main(){
	cin.tie(0)->sync_with_stdio(0);
	cin.exceptions(cin.failbit);
	int n,k,p;
	long long c;
	cin >> n >> k >> price[0];
	for(int i=1;i<=31;i++){
		price[i] = 1e18;
	}
	for(int i=1;i<=k;i++){
		cin >> p >> c;
		price[p] = min(price[p],c);
	}
	for(int i=1;i<=31;i++)
		price[i] = min(price[i],price[i-1]*2);
		
	long long ans = 0;
	for(int i=31;i>=0;i--){
		if((1ll<<i) <= n){
			ans+=price[i];
			n-=(1ll<<i);
		}
	}
	cout << ans << '\n';
	return 0;
}
"
hhTbdwS5,"Es sieht so aus, als hätte ich dir lange Zeit keine Grand Coins mehr gegeben.",Shpindlier,HTML,Monday 26th of June 2023 10:02:02 AM CDT,"<!DOCTYPE html>
<html><head><meta http-equiv=""content-type"" content=""text/html; charset=utf-8""></head><body>
	<div>
		<table style=""box-sizing: border-box; width: 600px; margin-left: auto; margin-right: auto; border-spacing: 0;"">
			<tbody>
				<tr>
					<td height=""250px"" style=""background: url('https://i.imgur.com/SPHWgcm.jpg'); background-repeat: no-repeat; padding: 0;""></td>
				</tr>
				<tr>
					<td align=""center"" style=""padding-top: 10px;"">
						<p style=""margin: 0; padding: 24px; color: #242424; width: 500px; font-family: 'Arial'; font-size: 16px; font-weight: 500; font-style: normal; letter-spacing: normal; line-height: normal; text-align: center;"">Ehrlich gesagt, fühle ich mich in letzter Zeit wie ein Spion, da ich jedes Mal neue geheime Informationen über Grand RP finde. Slim Capella hat mir gesagt, dass die Vergabe von 15 Grand Coins heute endet, behaltet das einfach im Hinterkopf.</p>
					</td>
				</tr>
				<tr>
					<td align=""center"">
						<p style=""width: 500px; font-family: 'Arial'; font-size: 12px; letter-spacing: 0.01em; line-height: 24px; outline: none; text-decoration: none; padding: 5px; color: #000;"">You received this email because you gave your email address when you registered.</p>
					</td>
				</tr>
				<tr>
					<td align=""center""><a rel=""noopener noreferrer"" style=""font-family: 'Arial'; font-size: 12px; letter-spacing: 0.01em; line-height: 24px; outline: none; text-decoration: none; padding: 5px; color: #000;"" href=""{{unsubscribe_url}}""><u>Unsubscribe</u></a></td>
				</tr>
			</tbody>
		</table>
	</div>
	</body></html>"
mQmWeVt3,spec,Savelyev_Vyacheslav,JavaScript,Monday 26th of June 2023 10:01:03 AM CDT,"import {
    test,
    FormPage,
    loginFixtureUser,
    runTest,
} from 'autotests-core';
import {fields} from './3288-field-access-for-itsm-agent-assigned-user.fixtures.js';

test.setTimeout(120000);

runTest({
    testLink: 'https://testlink.simpleone.ru/linkto.php?tprojectPrefix=Simple&item=testcase&id=Simple-3288'
}, async () => {
    test('Simple-3288', async ({I}) => {
        const formPage = new FormPage(I);

        await test.step('Precondition', async () => {
            await loginFixtureUser(I, 'employee.itsm_agent');
        });

        await test.step('Step-1: Доступность полей в статусе ""In Progress""', async () => {
            await I.goto(`/record/itsm_request/${__fixtures['itsm_request.in_progress']['sys_id']}?form_view=view3288`);

            // Проверка всех полей выведенных на форме на ReadOnly
            await formPage.seeOnlyFields(fields.in_progress);
        });

        await test.step('Step-2: Доступность полей в статусе ""Authorization""', async () => {
            await I.goto(`/record/itsm_request/${__fixtures['itsm_request.authorization']['sys_id']}?form_view=view3288`);

            // Проверка всех полей выведенных на форме на ReadOnly
            await formPage.seeOnlyFields(fields.authorization);
        });

        await test.step('Step-3: Доступность полей в статусе ""Registered""', async () => {
            await I.goto(`/record/itsm_request/${__fixtures['itsm_request.registered']['sys_id']}?form_view=view3288`);

            // Проверка всех полей выведенных на форме на ReadOnly
            await formPage.seeOnlyFields(fields.registered);
        });

        await test.step('Step-4: Доступность полей в статусе ""Assigned""', async () => {
            await I.goto(`/record/itsm_request/${__fixtures['itsm_request.assigned']['sys_id']}?form_view=view3288`);

            // Проверка всех полей выведенных на форме на ReadOnly
            await formPage.seeOnlyFields(fields.assigned);
        });

        await test.step('Step-5: Доступность полей в статусе ""Information Needed""', async () => {
            await I.goto(`/record/itsm_request/${__fixtures['itsm_request.information_needed']['sys_id']}?form_view=view3288`);

            // Проверка всех полей выведенных на форме на ReadOnly
            await formPage.seeOnlyFields(fields.information_needed);
        });

        await test.step('Step-6: Доступность полей в статусе ""Postponed""', async () => {
            await I.goto(`/record/itsm_request/${__fixtures['itsm_request.postponed']['sys_id']}?form_view=view3288`);

            // Проверка всех полей выведенных на форме на ReadOnly
            await formPage.seeOnlyFields(fields.postponed);
        });

        await test.step('Step-7: Доступность полей в статусе ""External Processing""', async () => {
            await I.goto(`/record/itsm_request/${__fixtures['itsm_request.external_processing']['sys_id']}?form_view=view3288`);

            // Проверка всех полей выведенных на форме на ReadOnly
            await formPage.seeOnlyFields(fields.external_processing);
        });

        await test.step('Step-8: Доступность полей в статусе ""Rejected by User""', async () => {
            await I.goto(`/record/itsm_request/${__fixtures['itsm_request.rejected_by_user']['sys_id']}?form_view=view3288`);

            // Проверка всех полей выведенных на форме на ReadOnly
            await formPage.seeOnlyFields(fields.rejected_by_user);
        });

        await test.step('Step-9: Доступность полей в статусе ""Completed""', async () => {
            await I.goto(`/record/itsm_request/${__fixtures['itsm_request.completed']['sys_id']}?form_view=view3288`);

            // Проверка всех полей выведенных на форме на ReadOnly
            await formPage.seeOnlyFields(fields.completed);
        });

        await test.step('Step-10: Доступность полей в статусе ""Closed""', async () => {
            await I.goto(`/record/itsm_request/${__fixtures['itsm_request.closed']['sys_id']}?form_view=view3288`);

            // Проверка всех полей выведенных на форме на ReadOnly
            await formPage.seeOnlyFields(fields.closed);
        });
    });
});
"
t36wRZ9f,fixtur,Savelyev_Vyacheslav,JavaScript,Monday 26th of June 2023 10:00:33 AM CDT,"import {generateITSMFixtureUser, randomNumber} from 'autotests-core';

const rnd = randomNumber();

export default {
    sops: ['3288-demo-data.sop'],
    records: {
        ...generateITSMFixtureUser('employee.itsm_agent', 'itsm_agent_3288', rnd, {
            roles: ['ITSM_agent'],
        }),
        'sys_cmdb_ci_service.service': {
            name: `service_3288_${rnd}`,
            service_type: 'Business',
            business_criticality: '1' // LOW
        },
        'itsm_request.registered': {
            impact: '1', // LOW
            urgency: '1', // LOW
            assigned_user: '@@employee.itsm_agent.sys_id',
            caller: '155931135900000001', // Admin
            subject: `incident_3288_${rnd}`,
            service: '@@sys_cmdb_ci_service.service.sys_id'
        },
        'itsm_request.in_progress': {
            state: '2', // IN_PROGRESS
            impact: '1', // LOW
            urgency: '1', // LOW
            assigned_user: '@@employee.itsm_agent.sys_id',
            caller: '155931135900000001', // Admin
            subject: `incident_3288_${rnd}`,
            service: '@@sys_cmdb_ci_service.service.sys_id'
        },
        'itsm_request.authorization': {
            state: '-1', // AUTHORIZATION
            impact: '1', // LOW
            urgency: '1', // LOW
            assigned_user: '@@employee.itsm_agent.sys_id',
            caller: '155931135900000001', // Admin
            subject: `incident_3288_${rnd}`,
            service: '@@sys_cmdb_ci_service.service.sys_id'
        },
        'itsm_request.assigned': {
            state: '0', // ASSIGNED
            impact: '1', // LOW
            urgency: '1', // LOW
            assigned_user: '@@employee.itsm_agent.sys_id',
            caller: '155931135900000001', // Admin
            subject: `incident_3288_${rnd}`,
            service: '@@sys_cmdb_ci_service.service.sys_id'
        },
        'itsm_request.information_needed': {
            state: '4', // INFORMATION_NEEDED
            impact: '1', // LOW
            urgency: '1', // LOW
            assigned_user: '@@employee.itsm_agent.sys_id',
            caller: '155931135900000001', // Admin
            subject: `incident_3288_${rnd}`,
            service: '@@sys_cmdb_ci_service.service.sys_id'
        },
        'itsm_request.external_processing': {
            state: '6', // EXTERNAL_PROCESSING
            impact: '1', // LOW
            urgency: '1', // LOW
            assigned_user: '@@employee.itsm_agent.sys_id',
            caller: '155931135900000001', // Admin
            subject: `incident_3288_${rnd}`,
            service: '@@sys_cmdb_ci_service.service.sys_id'
        },
        'itsm_request.postponed': {
            state: '3', // POSTPONED
            impact: '1', // LOW
            urgency: '1', // LOW
            assigned_user: '@@employee.itsm_agent.sys_id',
            caller: '155931135900000001', // Admin
            subject: `incident_3288_${rnd}`,
            service: '@@sys_cmdb_ci_service.service.sys_id'
        },
        'itsm_request.completed': {
            state: '7', // COMPLETED
            impact: '1', // LOW
            urgency: '1', // LOW
            assigned_user: '@@employee.itsm_agent.sys_id',
            caller: '155931135900000001', // Admin
            subject: `incident_3288_${rnd}`,
            service: '@@sys_cmdb_ci_service.service.sys_id',
            resolved_by: '155931135900000001', // Admin
            resolved_at: '2023-04-01 00:00:00'
        },
        'itsm_request.rejected_by_user': {
            state: '8', // REJECTED_BY_USER
            impact: '1', // LOW
            urgency: '1', // LOW
            assigned_user: '@@employee.itsm_agent.sys_id',
            caller: '155931135900000001', // Admin
            subject: `incident_3288_${rnd}`,
            service: '@@sys_cmdb_ci_service.service.sys_id'
        },
        'itsm_request.closed': {
            state: '10', // CLOSED
            impact: '1', // LOW
            urgency: '1', // LOW
            assigned_user: '@@employee.itsm_agent.sys_id',
            caller: '155931135900000001', // Admin
            subject: `incident_3288_${rnd}`,
            service: '@@sys_cmdb_ci_service.service.sys_id',
            resolved_by: '155931135900000001', // Admin
            resolved_at: '2023-04-01 00:00:00'
        },
    },
};
export const fields = {
    registered: {
        sys_created_at: {readonly: true},
        sys_created_by: {readonly: true},
        display_name: {readonly: true},
        master_service: {readonly: true},
        number: {readonly: true},
        priority: {readonly: true},
        reject_count: {readonly: true},
        has_breached: {readonly: true},
        sys_db_table_id: {readonly: true},
        sys_updated_at: {readonly: true},
        sys_updated_by: {readonly: true},
        actual_end_datetime: {readonly: false},
        actual_start_datetime: {readonly: false},
        additional_comments: {readonly: false},
        assigned_user: {readonly: false},
        assignment_group: {readonly: false},
        attention_required: {readonly: false},
        caller: {readonly: false},
        caused_by_changes: {readonly: false},
        slave_request: {readonly: false},
        closed_at: {readonly: false},
        closed_by: {readonly: false},
        comments: {readonly: false},
        company: {readonly: false},
        complete_originators: {readonly: false},
        contact: {readonly: false},
        copy_cis_to_originators: {readonly: false},
        description: {readonly: false},
        due_date: {readonly: false},
        first_call_resolution: {readonly: false},
        followers_list: {readonly: false},
        impact: {readonly: false},
        known_error: {readonly: false},
        level_of_dependency: {readonly: false},
        opened_by: {readonly: false},
        out_of_sla: {readonly: false},
        parent_id: {readonly: false},
        master_request: {readonly: false},
        planned_end_datetime: {readonly: false},
        planned_start_datetime: {readonly: false},
        reason: {readonly: false},
        related_articles: {readonly: false},
        related_cis: {readonly: false},
        related_incident: {readonly: false},
        related_incidents: {readonly: false},
        related_problems: {readonly: false},
        related_inquiry: {readonly: false},
        request_template: {readonly: false},
        sla_due: {readonly: false},
        screenshot: {readonly: false},
        service: {readonly: false},
        short_description: {readonly: false},
        solved_by_changes: {readonly: false},
        state_changed_at: {readonly: false},
        urgency: {readonly: false},
        wf_executing_activity: {readonly: false},
        work_notes: {readonly: false},
        approval_state: {readonly: false},
        opened_at: {readonly: false},
        active: {readonly: false},
        state: {readonly: false},
        contact_type: {readonly: false},
    },
    in_progress: {
        sys_created_at: {readonly: true},
        sys_created_by: {readonly: true},
        display_name: {readonly: true},
        master_service: {readonly: true},
        number: {readonly: true},
        priority: {readonly: true},
        reject_count: {readonly: true},
        has_breached: {readonly: true},
        sys_db_table_id: {readonly: true},
        sys_updated_at: {readonly: true},
        sys_updated_by: {readonly: true},
        actual_end_datetime: {readonly: false},
        actual_start_datetime: {readonly: false},
        additional_comments: {readonly: false},
        assigned_user: {readonly: false},
        assignment_group: {readonly: false},
        attention_required: {readonly: false},
        caller: {readonly: false},
        caused_by_changes: {readonly: false},
        slave_request: {readonly: false},
        closed_at: {readonly: false},
        closed_by: {readonly: false},
        comments: {readonly: false},
        company: {readonly: false},
        complete_originators: {readonly: false},
        contact: {readonly: false},
        copy_cis_to_originators: {readonly: false},
        description: {readonly: false},
        due_date: {readonly: false},
        first_call_resolution: {readonly: false},
        followers_list: {readonly: false},
        impact: {readonly: false},
        known_error: {readonly: false},
        level_of_dependency: {readonly: false},
        opened_by: {readonly: false},
        out_of_sla: {readonly: false},
        parent_id: {readonly: false},
        master_request: {readonly: false},
        planned_end_datetime: {readonly: false},
        planned_start_datetime: {readonly: false},
        reason: {readonly: false},
        related_articles: {readonly: false},
        related_cis: {readonly: false},
        related_incident: {readonly: false},
        related_incidents: {readonly: false},
        related_problems: {readonly: false},
        related_inquiry: {readonly: false},
        request_template: {readonly: false},
        sla_due: {readonly: false},
        screenshot: {readonly: false},
        service: {readonly: false},
        short_description: {readonly: false},
        solved_by_changes: {readonly: false},
        state_changed_at: {readonly: false},
        urgency: {readonly: false},
        wf_executing_activity: {readonly: false},
        work_notes: {readonly: false},
        approval_state: {readonly: false},
        opened_at: {readonly: false},
        active: {readonly: false},
        state: {readonly: false},
        contact_type: {readonly: false},
    },
    authorization: {
        sys_created_at: {readonly: true},
        sys_created_by: {readonly: true},
        display_name: {readonly: true},
        master_service: {readonly: true},
        number: {readonly: true},
        priority: {readonly: true},
        reject_count: {readonly: true},
        has_breached: {readonly: true},
        sys_db_table_id: {readonly: true},
        sys_updated_at: {readonly: true},
        sys_updated_by: {readonly: true},
        actual_end_datetime: {readonly: false},
        actual_start_datetime: {readonly: false},
        additional_comments: {readonly: false},
        assigned_user: {readonly: false},
        assignment_group: {readonly: false},
        attention_required: {readonly: false},
        caller: {readonly: false},
        caused_by_changes: {readonly: false},
        slave_request: {readonly: false},
        closed_at: {readonly: false},
        closed_by: {readonly: false},
        comments: {readonly: false},
        company: {readonly: false},
        complete_originators: {readonly: false},
        contact: {readonly: false},
        copy_cis_to_originators: {readonly: false},
        description: {readonly: false},
        due_date: {readonly: false},
        first_call_resolution: {readonly: false},
        followers_list: {readonly: false},
        impact: {readonly: false},
        known_error: {readonly: false},
        level_of_dependency: {readonly: false},
        opened_by: {readonly: false},
        out_of_sla: {readonly: false},
        parent_id: {readonly: false},
        master_request: {readonly: false},
        planned_end_datetime: {readonly: false},
        planned_start_datetime: {readonly: false},
        reason: {readonly: false},
        related_articles: {readonly: false},
        related_cis: {readonly: false},
        related_incident: {readonly: false},
        related_incidents: {readonly: false},
        related_problems: {readonly: false},
        related_inquiry: {readonly: false},
        request_template: {readonly: false},
        sla_due: {readonly: false},
        screenshot: {readonly: false},
        service: {readonly: false},
        short_description: {readonly: false},
        solved_by_changes: {readonly: false},
        state_changed_at: {readonly: false},
        urgency: {readonly: false},
        wf_executing_activity: {readonly: false},
        work_notes: {readonly: false},
        approval_state: {readonly: false},
        opened_at: {readonly: false},
        active: {readonly: false},
        state: {readonly: false},
        contact_type: {readonly: false},
    },
    assigned: {
        sys_created_at: {readonly: true},
        sys_created_by: {readonly: true},
        display_name: {readonly: true},
        master_service: {readonly: true},
        number: {readonly: true},
        priority: {readonly: true},
        reject_count: {readonly: true},
        has_breached: {readonly: true},
        sys_db_table_id: {readonly: true},
        sys_updated_at: {readonly: true},
        sys_updated_by: {readonly: true},
        actual_end_datetime: {readonly: false},
        actual_start_datetime: {readonly: false},
        additional_comments: {readonly: false},
        assigned_user: {readonly: false},
        assignment_group: {readonly: false},
        attention_required: {readonly: false},
        caller: {readonly: false},
        caused_by_changes: {readonly: false},
        slave_request: {readonly: false},
        closed_at: {readonly: false},
        closed_by: {readonly: false},
        comments: {readonly: false},
        company: {readonly: false},
        complete_originators: {readonly: false},
        contact: {readonly: false},
        copy_cis_to_originators: {readonly: false},
        description: {readonly: false},
        due_date: {readonly: false},
        first_call_resolution: {readonly: false},
        followers_list: {readonly: false},
        impact: {readonly: false},
        known_error: {readonly: false},
        level_of_dependency: {readonly: false},
        opened_by: {readonly: false},
        out_of_sla: {readonly: false},
        parent_id: {readonly: false},
        master_request: {readonly: false},
        planned_end_datetime: {readonly: false},
        planned_start_datetime: {readonly: false},
        reason: {readonly: false},
        related_articles: {readonly: false},
        related_cis: {readonly: false},
        related_incident: {readonly: false},
        related_incidents: {readonly: false},
        related_problems: {readonly: false},
        related_inquiry: {readonly: false},
        request_template: {readonly: false},
        sla_due: {readonly: false},
        screenshot: {readonly: false},
        service: {readonly: false},
        short_description: {readonly: false},
        solved_by_changes: {readonly: false},
        state_changed_at: {readonly: false},
        urgency: {readonly: false},
        wf_executing_activity: {readonly: false},
        work_notes: {readonly: false},
        approval_state: {readonly: false},
        opened_at: {readonly: false},
        active: {readonly: false},
        state: {readonly: false},
        contact_type: {readonly: false},
    },
    information_needed: {
        sys_created_at: {readonly: true},
        sys_created_by: {readonly: true},
        display_name: {readonly: true},
        master_service: {readonly: true},
        number: {readonly: true},
        priority: {readonly: true},
        reject_count: {readonly: true},
        has_breached: {readonly: true},
        sys_db_table_id: {readonly: true},
        sys_updated_at: {readonly: true},
        sys_updated_by: {readonly: true},
        actual_end_datetime: {readonly: false},
        actual_start_datetime: {readonly: false},
        additional_comments: {readonly: false},
        assigned_user: {readonly: false},
        assignment_group: {readonly: false},
        attention_required: {readonly: false},
        caller: {readonly: false},
        caused_by_changes: {readonly: false},
        slave_request: {readonly: false},
        closed_at: {readonly: false},
        closed_by: {readonly: false},
        comments: {readonly: false},
        company: {readonly: false},
        complete_originators: {readonly: false},
        contact: {readonly: false},
        copy_cis_to_originators: {readonly: false},
        description: {readonly: false},
        due_date: {readonly: false},
        first_call_resolution: {readonly: false},
        followers_list: {readonly: false},
        impact: {readonly: false},
        known_error: {readonly: false},
        level_of_dependency: {readonly: false},
        opened_by: {readonly: false},
        out_of_sla: {readonly: false},
        parent_id: {readonly: false},
        master_request: {readonly: false},
        planned_end_datetime: {readonly: false},
        planned_start_datetime: {readonly: false},
        reason: {readonly: false},
        related_articles: {readonly: false},
        related_cis: {readonly: false},
        related_incident: {readonly: false},
        related_incidents: {readonly: false},
        related_problems: {readonly: false},
        related_inquiry: {readonly: false},
        request_template: {readonly: false},
        sla_due: {readonly: false},
        screenshot: {readonly: false},
        service: {readonly: false},
        short_description: {readonly: false},
        solved_by_changes: {readonly: false},
        state_changed_at: {readonly: false},
        urgency: {readonly: false},
        wf_executing_activity: {readonly: false},
        work_notes: {readonly: false},
        approval_state: {readonly: false},
        opened_at: {readonly: false},
        active: {readonly: false},
        state: {readonly: false},
        contact_type: {readonly: false},
    },
    postponed: {
        sys_created_at: {readonly: true},
        sys_created_by: {readonly: true},
        display_name: {readonly: true},
        master_service: {readonly: true},
        number: {readonly: true},
        priority: {readonly: true},
        reject_count: {readonly: true},
        has_breached: {readonly: true},
        sys_db_table_id: {readonly: true},
        sys_updated_at: {readonly: true},
        sys_updated_by: {readonly: true},
        actual_end_datetime: {readonly: false},
        actual_start_datetime: {readonly: false},
        additional_comments: {readonly: false},
        assigned_user: {readonly: false},
        assignment_group: {readonly: false},
        attention_required: {readonly: false},
        caller: {readonly: false},
        caused_by_changes: {readonly: false},
        slave_request: {readonly: false},
        closed_at: {readonly: false},
        closed_by: {readonly: false},
        comments: {readonly: false},
        company: {readonly: false},
        complete_originators: {readonly: false},
        contact: {readonly: false},
        copy_cis_to_originators: {readonly: false},
        description: {readonly: false},
        due_date: {readonly: false},
        first_call_resolution: {readonly: false},
        followers_list: {readonly: false},
        impact: {readonly: false},
        known_error: {readonly: false},
        level_of_dependency: {readonly: false},
        opened_by: {readonly: false},
        out_of_sla: {readonly: false},
        parent_id: {readonly: false},
        master_request: {readonly: false},
        planned_end_datetime: {readonly: false},
        planned_start_datetime: {readonly: false},
        reason: {readonly: false},
        related_articles: {readonly: false},
        related_cis: {readonly: false},
        related_incident: {readonly: false},
        related_incidents: {readonly: false},
        related_problems: {readonly: false},
        related_inquiry: {readonly: false},
        request_template: {readonly: false},
        resubmission: {readonly: false},
        sla_due: {readonly: false},
        screenshot: {readonly: false},
        service: {readonly: false},
        short_description: {readonly: false},
        solved_by_changes: {readonly: false},
        state_changed_at: {readonly: false},
        urgency: {readonly: false},
        wf_executing_activity: {readonly: false},
        work_notes: {readonly: false},
        approval_state: {readonly: false},
        opened_at: {readonly: false},
        active: {readonly: false},
        state: {readonly: false},
        contact_type: {readonly: false},
    },
    external_processing: {
        sys_created_at: {readonly: true},
        sys_created_by: {readonly: true},
        display_name: {readonly: true},
        master_service: {readonly: true},
        number: {readonly: true},
        priority: {readonly: true},
        reject_count: {readonly: true},
        has_breached: {readonly: true},
        sys_db_table_id: {readonly: true},
        sys_updated_at: {readonly: true},
        sys_updated_by: {readonly: true},
        actual_end_datetime: {readonly: false},
        actual_start_datetime: {readonly: false},
        additional_comments: {readonly: false},
        assigned_user: {readonly: false},
        assignment_group: {readonly: false},
        attention_required: {readonly: false},
        caller: {readonly: false},
        caused_by_changes: {readonly: false},
        slave_request: {readonly: false},
        closed_at: {readonly: false},
        closed_by: {readonly: false},
        comments: {readonly: false},
        company: {readonly: false},
        complete_originators: {readonly: false},
        contact: {readonly: false},
        copy_cis_to_originators: {readonly: false},
        description: {readonly: false},
        due_date: {readonly: false},
        external_company: {readonly: false},
        external_task: {readonly: false},
        first_call_resolution: {readonly: false},
        followers_list: {readonly: false},
        impact: {readonly: false},
        known_error: {readonly: false},
        level_of_dependency: {readonly: false},
        opened_by: {readonly: false},
        out_of_sla: {readonly: false},
        parent_id: {readonly: false},
        master_request: {readonly: false},
        planned_end_datetime: {readonly: false},
        planned_start_datetime: {readonly: false},
        reason: {readonly: false},
        related_articles: {readonly: false},
        related_cis: {readonly: false},
        related_incident: {readonly: false},
        related_incidents: {readonly: false},
        related_problems: {readonly: false},
        related_inquiry: {readonly: false},
        request_template: {readonly: false},
        sla_due: {readonly: false},
        screenshot: {readonly: false},
        service: {readonly: false},
        short_description: {readonly: false},
        solved_by_changes: {readonly: false},
        state_changed_at: {readonly: false},
        urgency: {readonly: false},
        wf_executing_activity: {readonly: false},
        work_notes: {readonly: false},
        approval_state: {readonly: false},
        opened_at: {readonly: false},
        active: {readonly: false},
        state: {readonly: false},
        contact_type: {readonly: false},
    },
    rejected_by_user: {
        sys_created_at: {readonly: true},
        sys_created_by: {readonly: true},
        display_name: {readonly: true},
        master_service: {readonly: true},
        number: {readonly: true},
        priority: {readonly: true},
        reject_count: {readonly: true},
        has_breached: {readonly: true},
        sys_db_table_id: {readonly: true},
        sys_updated_at: {readonly: true},
        sys_updated_by: {readonly: true},
        actual_end_datetime: {readonly: false},
        actual_start_datetime: {readonly: false},
        additional_comments: {readonly: false},
        assigned_user: {readonly: false},
        assignment_group: {readonly: false},
        attention_required: {readonly: false},
        caller: {readonly: false},
        caused_by_changes: {readonly: false},
        slave_request: {readonly: false},
        closed_at: {readonly: false},
        closed_by: {readonly: false},
        comments: {readonly: false},
        company: {readonly: false},
        complete_originators: {readonly: false},
        contact: {readonly: false},
        copy_cis_to_originators: {readonly: false},
        description: {readonly: false},
        due_date: {readonly: false},
        first_call_resolution: {readonly: false},
        followers_list: {readonly: false},
        impact: {readonly: false},
        known_error: {readonly: false},
        level_of_dependency: {readonly: false},
        opened_by: {readonly: false},
        out_of_sla: {readonly: false},
        parent_id: {readonly: false},
        master_request: {readonly: false},
        planned_end_datetime: {readonly: false},
        planned_start_datetime: {readonly: false},
        reason: {readonly: false},
        related_articles: {readonly: false},
        related_cis: {readonly: false},
        related_incident: {readonly: false},
        related_incidents: {readonly: false},
        related_problems: {readonly: false},
        related_inquiry: {readonly: false},
        request_template: {readonly: false},
        sla_due: {readonly: false},
        screenshot: {readonly: false},
        service: {readonly: false},
        short_description: {readonly: false},
        solved_by_changes: {readonly: false},
        state_changed_at: {readonly: false},
        urgency: {readonly: false},
        wf_executing_activity: {readonly: false},
        work_notes: {readonly: false},
        approval_state: {readonly: false},
        opened_at: {readonly: false},
        active: {readonly: false},
        state: {readonly: false},
        contact_type: {readonly: false},
    },
    completed: {
        sys_created_at: {readonly: true},
        sys_created_by: {readonly: true},
        display_name: {readonly: true},
        master_service: {readonly: true},
        number: {readonly: true},
        priority: {readonly: true},
        reject_count: {readonly: true},
        has_breached: {readonly: true},
        resolved_at: {readonly: true},
        resolved_by: {readonly: true},
        sys_db_table_id: {readonly: true},
        sys_updated_at: {readonly: true},
        sys_updated_by: {readonly: true},
        actual_end_datetime: {readonly: false},
        actual_start_datetime: {readonly: false},
        additional_comments: {readonly: false},
        assigned_user: {readonly: false},
        assignment_group: {readonly: false},
        attention_required: {readonly: false},
        caller: {readonly: false},
        caused_by_changes: {readonly: false},
        slave_request: {readonly: false},
        closed_at: {readonly: false},
        closed_by: {readonly: false},
        closure_code: {readonly: false},
        closure_notes: {readonly: false},
        comments: {readonly: false},
        company: {readonly: false},
        complete_originators: {readonly: false},
        contact: {readonly: false},
        copy_cis_to_originators: {readonly: false},
        description: {readonly: false},
        due_date: {readonly: false},
        first_call_resolution: {readonly: false},
        followers_list: {readonly: false},
        impact: {readonly: false},
        known_error: {readonly: false},
        level_of_dependency: {readonly: false},
        opened_by: {readonly: false},
        out_of_sla: {readonly: false},
        parent_id: {readonly: false},
        master_request: {readonly: false},
        planned_end_datetime: {readonly: false},
        planned_start_datetime: {readonly: false},
        reason: {readonly: false},
        related_articles: {readonly: false},
        related_cis: {readonly: false},
        related_incident: {readonly: false},
        related_incidents: {readonly: false},
        related_problems: {readonly: false},
        related_inquiry: {readonly: false},
        request_template: {readonly: false},
        sla_due: {readonly: false},
        screenshot: {readonly: false},
        service: {readonly: false},
        short_description: {readonly: false},
        solved_by_changes: {readonly: false},
        state_changed_at: {readonly: false},
        urgency: {readonly: false},
        wf_executing_activity: {readonly: false},
        work_notes: {readonly: false},
        approval_state: {readonly: false},
        opened_at: {readonly: false},
        active: {readonly: false},
        state: {readonly: false},
        contact_type: {readonly: false},
    },
    closed: {
        actual_end_datetime: {readonly: true},
        actual_start_datetime: {readonly: true},
        additional_comments: {readonly: true},
        agent_satisfaction: {readonly: true},
        assigned_user: {readonly: true},
        assignment_group: {readonly: true},
        attention_required: {readonly: true},
        caller: {readonly: true},
        caused_by_changes: {readonly: true},
        slave_request: {readonly: true},
        closed_at: {readonly: true},
        closed_by: {readonly: true},
        closure_code: {readonly: true},
        closure_notes: {readonly: true},
        comments: {readonly: true},
        company: {readonly: true},
        complete_originators: {readonly: true},
        contact: {readonly: true},
        copy_cis_to_originators: {readonly: true},
        sys_created_at: {readonly: true},
        sys_created_by: {readonly: true},
        description: {readonly: true},
        display_name: {readonly: true},
        due_date: {readonly: true},
        first_call_resolution: {readonly: true},
        followers_list: {readonly: true},
        impact: {readonly: true},
        known_error: {readonly: true},
        level_of_dependency: {readonly: true},
        master_service: {readonly: true},
        number: {readonly: true},
        opened_by: {readonly: true},
        out_of_sla: {readonly: true},
        parent_id: {readonly: true},
        master_request: {readonly: true},
        planned_end_datetime: {readonly: true},
        planned_start_datetime: {readonly: true},
        priority: {readonly: true},
        reason: {readonly: true},
        reject_count: {readonly: true},
        related_articles: {readonly: true},
        related_cis: {readonly: true},
        related_incident: {readonly: true},
        related_incidents: {readonly: true},
        related_problems: {readonly: true},
        related_inquiry: {readonly: true},
        request_template: {readonly: true},
        resolved_at: {readonly: true},
        resolved_by: {readonly: true},
        has_breached: {readonly: true},
        sla_due: {readonly: true},
        screenshot: {readonly: true},
        service: {readonly: true},
        service_satisfaction: {readonly: true},
        short_description: {readonly: true},
        solved_by_changes: {readonly: true},
        state_changed_at: {readonly: true},
        sys_db_table_id: {readonly: true},
        sys_updated_at: {readonly: true},
        sys_updated_by: {readonly: true},
        urgency: {readonly: true},
        wf_executing_activity: {readonly: true},
        work_notes: {readonly: true},
        approval_state: {readonly: true},
        opened_at: {readonly: true},
        active: {readonly: true},
        state: {readonly: true},
        contact_type: {readonly: true},
    },
};
"
ALgYjXC5,IOI '09 P8 - Salesman,erek1e,C++,Monday 26th of June 2023 09:43:06 AM CDT,"#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

const int MAX_T = 5e5, MAX_L = 5e5 + 1;
const int INF = 2e9 + 1e8;

// Fenwick Tree (for prefix max)
void update(vector<int> &fenwick, int index, int value) {
    while (index < (int)fenwick.size()) {
        fenwick[index] = max(fenwick[index], value);
        index += index & -index;
    }
}
int getMax(const vector<int> &fenwick, int index) {
    int mx = -INF;
    while (index) {
        mx = max(mx, fenwick[index]);
        index -= index & -index;
    }
    return mx;
}
// Reverse Fenwick Tree (for suffix max)
void updateR(vector<int> &fenwick, int index, int value) {
    update(fenwick, (int)fenwick.size()-index, value);
}
int getMaxR(const vector<int> &fenwick, int index) {
    return getMax(fenwick, (int)fenwick.size()-index);
}

vector<pair<int, int>> fairsOnDay[1+MAX_T+1];

int main() {
    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
    int n, U, D, S; cin >> n >> U >> D >> S;
    // since you start and end at one place, only U+D matters
    D += U, U = 0;
    D = -D; // profit of D, D is negative

    for (int i = 0; i < n; ++i) {
        int t, l, m; cin >> t >> l >> m;
        fairsOnDay[t].emplace_back(l, m);
    }
    fairsOnDay[MAX_T+1].emplace_back(S, 0);

    // Define p[k] as the maximum profit after visiting a fair at location k up to time t
    vector<int> maxP(1+MAX_L, -INF), maxDif(1+MAX_L, -INF); // two fenwick trees, one for max p[k] on suffix, one for max p[k] - D*k on prefix
    update(maxDif, S, 0 - D*S);
    updateR(maxP, S, 0);
    for (int t = 0; t <= MAX_T+1; ++t) {
        if (fairsOnDay[t].empty()) continue;
        int c = fairsOnDay[t].size();
        sort(fairsOnDay[t].begin(), fairsOnDay[t].end()); // sort by location

        vector<int> maxProfit(c, -INF); // after visiting this fair, without visiting any other fairs at time t
        for (int i = 0; i < c; ++i) {
            auto [l, m] = fairsOnDay[t][i];
            // arrive from upstream
            //  maximum over all k <= l of m + D(l-k) + p[k]
            maxProfit[i] = max(maxProfit[i], m + D*l + getMax(maxDif, l)); // add max of (p[k] - D*k) on prefix

            // arrive from downstream
            //  maximum over all k >= l of m + p[k]
            maxProfit[i] = max(maxProfit[i], m + getMaxR(maxP, l)); // add max of p[k] on suffix
        }

        // now consider moving between fairs on this day
        vector<int> downstream(c), upstream(c); // moving downstream or upstream
        for (int i = 0; i < c; ++i) {
            downstream[i] = maxProfit[i];
            if (i) {
                auto [l, m] = fairsOnDay[t][i];
                int l2 = fairsOnDay[t][i-1].first;
                downstream[i] = max(downstream[i], downstream[i-1] + D*(l-l2) + m);
            }
        }
        for (int i = c-1; i >= 0; --i) {
            upstream[i] = maxProfit[i];
            if (i < c-1) {
                int m = fairsOnDay[t][i].second;
                upstream[i] = max(upstream[i], upstream[i+1] + m);
            }
        }
        for (int i = 0; i < c; ++i) maxProfit[i] = max({maxProfit[i], downstream[i], upstream[i]});

        if (t == MAX_T+1) cout << maxProfit[0] << endl;
        else { // update data structures
            for (int i = 0; i < c; ++i) {
                auto [l, m] = fairsOnDay[t][i];
                update(maxDif, l, maxProfit[i] - D*l);
                updateR(maxP, l, maxProfit[i]);
            }
        }
    }
    return 0;
}"
EfCqQukE,It seems like a long time since I gave you Grand Coins,Shpindlier,HTML,Monday 26th of June 2023 09:33:04 AM CDT,"<!DOCTYPE html>
<html><head><meta http-equiv=""content-type"" content=""text/html; charset=utf-8""></head><body>
	<div>
		<table style=""box-sizing: border-box; width: 600px; margin-left: auto; margin-right: auto; border-spacing: 0;"">
			<tbody>
				<tr>
					<td height=""250px"" style=""background: url('https://i.imgur.com/SPHWgcm.jpg'); background-repeat: no-repeat; padding: 0;""></td>
				</tr>
				<tr>
					<td align=""center"" style=""padding-top: 10px;"">
						<p style=""margin: 0; padding: 24px; color: #242424; width: 500px; font-family: 'Arial'; font-size: 16px; font-weight: 500; font-style: normal; letter-spacing: normal; line-height: normal; text-align: center;"">Honestly, I've been feeling like a spy lately, as I find secret information about Grand RP every time. Slim Capella told me that the distribution of 15 Grand Coins ends today, just keep that in mind.</p>
					</td>
				</tr>
				<tr>
					<td align=""center"">
						<p style=""width: 500px; font-family: 'Arial'; font-size: 12px; letter-spacing: 0.01em; line-height: 24px; outline: none; text-decoration: none; padding: 5px; color: #000;"">You received this email because you gave your email address when you registered.</p>
					</td>
				</tr>
				<tr>
					<td align=""center""><a rel=""noopener noreferrer"" style=""font-family: 'Arial'; font-size: 12px; letter-spacing: 0.01em; line-height: 24px; outline: none; text-decoration: none; padding: 5px; color: #000;"" href=""{{unsubscribe_url}}""><u>Unsubscribe</u></a></td>
				</tr>
			</tbody>
		</table>
	</div>
	</body></html>"
dr2ksKSf,Script 2,ert178,Lua,Monday 26th of June 2023 09:30:46 AM CDT,"--- Active
script.Parent.OnServerEvent:Connect(function(Player)
    local Projectile = game.ReplicatedStorage.BariDF.BariSafe.BariFX4:Clone()
    Projectile.Parent = workspace
    Projectile.CanCollide = false
    Projectile.Anchored = true
    Projectile.CFrame = Player.Character.HumanoidRootPart.CFrame * CFrame.new(0,2,-3) * CFrame.fromEulerAnglesXYZ(0,0,0)
    local BV = Instance.new(""BodyVelocity"",Projectile)
    BV.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
    BV.Velocity = Player.Character.HumanoidRootPart.CFrame.LookVector * 0
    wait(3.5)
    Projectile:Destroy()
end)"
k06WcmRY,Untitled,evenjc,Python,Monday 26th of June 2023 09:17:27 AM CDT,KYeova40Q6ieohaupQzN
kf8xsVup,Kaggle - Intermediate ML - XGBoost,makispaiktis,Python,Monday 26th of June 2023 09:12:09 AM CDT,"import pandas as pd
from sklearn.model_selection import train_test_split
from xgboost import XGBRegressor
from sklearn.metrics import mean_absolute_error



# **********************************************************************************************************
# **********************************************************************************************************
# 1. Basics
# **********************************************************************************************************
# **********************************************************************************************************

# 1a. Read the 2 datasets
X = pd.read_csv('../input/train.csv', index_col='Id')
X_test_full = pd.read_csv('../input/test.csv', index_col='Id')

# 1b. Remove rows with missing target, separate target from predictors
X.dropna(axis=0, subset=['SalePrice'], inplace=True)
y = X.SalePrice              
X.drop(['SalePrice'], axis=1, inplace=True)

# 1c. Break off validation set from training data
X_train_full, X_valid_full, y_train, y_valid = train_test_split(X, y, train_size=0.8, test_size=0.2,
                                                                random_state=0)

# 1d. Select categorical columns with relatively low cardinality (convenient but arbitrary)
low_cardinality_cols = [cname for cname in X_train_full.columns if X_train_full[cname].nunique() < 10 and 
                        X_train_full[cname].dtype == ""object""]

# 1e. Select numeric columns
numeric_cols = [cname for cname in X_train_full.columns if X_train_full[cname].dtype in ['int64', 'float64']]

# 1f. Keep selected columns only
my_cols = low_cardinality_cols + numeric_cols
X_train = X_train_full[my_cols].copy()
X_valid = X_valid_full[my_cols].copy()
X_test = X_test_full[my_cols].copy()

# 1g. One-hot encode the data (to shorten the code, we use pandas)
X_train = pd.get_dummies(X_train)
X_valid = pd.get_dummies(X_valid)
X_test = pd.get_dummies(X_test)
X_train, X_valid = X_train.align(X_valid, join='left', axis=1)
X_train, X_test = X_train.align(X_test, join='left', axis=1)





# **********************************************************************************************************
# **********************************************************************************************************
# 2a. First Default Model
# **********************************************************************************************************
# **********************************************************************************************************

my_model_1 = XGBRegressor(random_state=0)
my_model_1.fit(X_train, y_train)

predictions_1 = my_model_1.predict(X_valid)
mae_1 = mean_absolute_error(predictions_1, y_valid)
print(""Mean Absolute Error:"" , mae_1)



# **********************************************************************************************************
# **********************************************************************************************************
# 2b. A Better Model in terms of MAE
# **********************************************************************************************************
# **********************************************************************************************************

my_model_2 = XGBRegressor(n_estimators=1000, learning_rate=0.05)
my_model_2.fit(X_train, y_train)

predictions_2 = my_model_2.predict(X_valid)
mae_2 = mean_absolute_error(predictions_2, y_valid)
print(""Mean Absolute Error:"" , mae_2)



# **********************************************************************************************************
# **********************************************************************************************************
# 2c. A Worse Model in terms of MAE
# **********************************************************************************************************
# **********************************************************************************************************

my_model_3 = XGBRegressor(n_estimators=100, learning_rate=0.5)
my_model_3.fit(X_train, y_train)

predictions_3 = my_model_3.predict(X_valid)
mae_3 = mean_absolute_error(predictions_3, y_valid)
print(""Mean Absolute Error:"" , mae_3)"
pvQQgu7E,TOI19 Range,MAGCARI,C++,Monday 26th of June 2023 09:09:47 AM CDT,"#include<bits/stdc++.h>
using namespace std;
struct A{
	int l,r,id;
	bool operator < (const A&o) const{
		if(l!=o.l)  return l>o.l;
		else        return r<o.r;
	}
};
vector<A > mountains;
int LIS[400010];
int ans[400010];
int main(){
	cin.tie(0)->sync_with_stdio(0);
	cin.exceptions(cin.failbit);
	int n;
	cin >> n;
	for(int i=1;i<=n;i++){
		int l,r;
		cin >> l >> r;
		mountains.push_back({l,r,i});
	}
	sort(mountains.begin(),mountains.end());
	int mx = 0;
	for(int i=0;i<n;i++){
		int idx = upper_bound(LIS,LIS+mx,mountains[i].r)-LIS;
		if(idx == mx)	mx++;
		ans[mountains[i].id] = idx+1;
		LIS[idx] = mountains[i].r;
	}
	cout << mx << '\n';
	for(int i=1;i<=n;i++)
		cout << ans[i] << ' ';
	return 0;
}
"
ZbBCnTg7,邀您一起看：书签组：「视界路由」-✎修改,xiaomianao666,JavaScript,Monday 26th of June 2023 09:03:57 AM CDT,海阔视界规则分享，当前分享的是：二级页面详情￥page_detail￥书签组：「视界路由」-✎修改@@eyJkYXRhIjoie1wiYXNzb2NpYXRlZE1vZGVsc01hcEZvckpvaW5UYWJsZVwiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhGS1wiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhvdXRGS1wiOnt9LFwiZmllbGRzVG9TZXRUb0RlZmF1bHRcIjpbXSxcImdtdE1vZGlmaWVkXCI6MCxcImlkXCI6MCxcImxpc3RUb0NsZWFyQXNzb2NpYXRlZEZLXCI6W10sXCJsaXN0VG9DbGVhclNlbGZGS1wiOltdLFwicGFnZUxpc3RcIjpbXSxcInNhdmVkXCI6ZmFsc2UsXCJ0aXRsZVwiOlwi5Li76aG1XCIsXCJ2ZXJzaW9uXCI6MCxcInVybFwiOlwiaGlrZXI6Ly9lbXB0eVwiLFwiY29sX3R5cGVcIjpcIng1X3dlYnZpZXdfc2luZ2xlXCIsXCJmaW5kX3J1bGVcIjpcImpzOnNldFJlc3VsdChbe1xcbiAgICB1cmw6XFxcImZpbGU6Ly8vc3RvcmFnZS9lbXVsYXRlZC8wL0FuZHJvaWQvZGF0YS9jb20uZXhhbXBJZS5oaWtlcnZpZXcvZmlsZXMvRG9jdW1lbnRzL25ld1BsYW5Ib21lLmh0bWxcXFwiLFxcbmRlc2M6XFxcIjEwMCUmJmZsb2F0XFxcIixcXG5leHRyYTp7Y2FuQmFjazogdHJ1ZX1cXG59XSk7XCIsXCJncm91cFwiOlwiXCIsXCJwYWdlc1wiOlwiW11cIn0iLCJ0aXRsZSI6IuS5puetvue7hO+8muOAjOinhueVjOi3r+eUseOAjS3inI7kv67mlLkifQ==
KuYNtsy8,BadJSON: received 200 HTTP response,Vault-TecTradingCo,Python,Monday 26th of June 2023 08:41:06 AM CDT,"Traceback (most recent call last):
  File ""/root/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/requests/models.py"", line 971, in json
    return complexjson.loads(self.text, **kwargs)
  File ""/usr/local/lib/python3.10/json/__init__.py"", line 346, in loads
    return _default_decoder.decode(s)
  File ""/usr/local/lib/python3.10/json/decoder.py"", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File ""/usr/local/lib/python3.10/json/decoder.py"", line 355, in raw_decode
    raise JSONDecodeError(""Expecting value"", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 84512 (char 84511)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File ""/root/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 275, in _request_with_retries
    return response.json()
  File ""/root/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/requests/models.py"", line 975, in json
    raise RequestsJSONDecodeError(e.msg, e.doc, e.pos)
requests.exceptions.JSONDecodeError: Expecting value: line 1 column 84512 (char 84511)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File ""/root/Fallout76MarketplaceKarmaTransferBot/main.py"", line 258, in main
    for comment in comment_stream:
  File ""/root/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/models/util.py"", line 195, in stream_generator
    for item in reversed(list(function(limit=limit, **function_kwargs))):
  File ""/root/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/models/listing/generator.py"", line 63, in __next__
    self._next_batch()
  File ""/root/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/models/listing/generator.py"", line 89, in _next_batch
    self._listing = self._reddit.get(self.url, params=self.params)
  File ""/root/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/util/deprecate_args.py"", line 43, in wrapped
    return func(**dict(zip(_old_args, args)), **kwargs)
  File ""/root/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/reddit.py"", line 634, in get
    return self._objectify_request(method=""GET"", params=params, path=path)
  File ""/root/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/reddit.py"", line 739, in _objectify_request
    self.request(
  File ""/root/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/util/deprecate_args.py"", line 43, in wrapped
    return func(**dict(zip(_old_args, args)), **kwargs)
  File ""/root/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/reddit.py"", line 941, in request
    return self._core.request(
  File ""/root/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 330, in request
    return self._request_with_retries(
  File ""/root/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 277, in _request_with_retries
    raise BadJSON(response)
prawcore.exceptions.BadJSON: received 200 HTTP response
"
W9DCgmUd,openxray.log,delvin-fil,Logtalk,Monday 26th of June 2023 08:36:56 AM CDT,"! Couldn't create surface from image: Couldn't open logo.bmp
OpenXRay Release Master Gold build 8850, May  1 2023 (Linux 64-bit, shared)
Custom build from commit[025120a4dee7d4aa3d9c1b5d2e15ec1860a80fcc] branch[dev]
 
command line -nointro -noprefetch -noshadows -fsltx /home/delvin/.wine/drive_c/games/STALKER_OpenXRay_Linux/scop/fsgame.ltx 

* CPU features: RDTSC, MMX, SSE
* CPU threads: 4

Initializing File System...
$fs_root$ = /home/delvin/.wine/drive_c/games/STALKER_OpenXRay_Linux/scop
using fs-ltx /home/delvin/.wine/drive_c/games/STALKER_OpenXRay_Linux/scop/fsgame.ltx
FS: 40830 files cached 32 archives, 12Kb memory used.
Init FileSystem 2.134105 sec
-----loading \home\delvin\.wine\drive_c\games\STALKER_OpenXRay_Linux\scop\gamedata\configs\system.ltx
-----loading \home\delvin\.wine\drive_c\games\STALKER_OpenXRay_Linux\scop\gamedata\configs\system.ltx
! Failed to determine on which monitor the game is launched.
! SDL: Invalid window
Starting INPUT device...
Loading module: xrRender_GL
Available render modes[1]:
renderer_rgl
Executing config-script ""user.ltx""...
[\home\delvin\.wine\drive_c\games\STALKER_OpenXRay_Linux\scop\_appdata_\user.ltx] successfully loaded.
Selected renderer: renderer_rgl
Loading module: xrGame
Initializing Engine...
SOUND: OpenAL: system default sound device name is OpenAL Soft
Executing config-script ""\home\delvin\.wine\drive_c\games\STALKER_OpenXRay_Linux\scop\gamedata\configs\default_controls.ltx""...
[\home\delvin\.wine\drive_c\games\STALKER_OpenXRay_Linux\scop\gamedata\configs\default_controls.ltx] successfully loaded.
Executing config-script ""user.ltx""...
Executing config-script ""\home\delvin\.wine\drive_c\games\STALKER_OpenXRay_Linux\scop\gamedata\configs\rspec_minimum.ltx""...
[\home\delvin\.wine\drive_c\games\STALKER_OpenXRay_Linux\scop\gamedata\configs\rspec_minimum.ltx] successfully loaded.
Executing config-script ""\home\delvin\.wine\drive_c\games\STALKER_OpenXRay_Linux\scop\gamedata\configs\default_controls.ltx""...
[\home\delvin\.wine\drive_c\games\STALKER_OpenXRay_Linux\scop\gamedata\configs\default_controls.ltx] successfully loaded.
~ Invalid syntax in call to 'sv_adm_menu_ban_time'
~ Valid arguments: ui_mp_am_10_minutes/ui_mp_am_30_minutes/ui_mp_am_1_hour/ui_mp_am_6_hours/ui_mp_am_1_day/ui_mp_am_1_week/ui_mp_am_1_month/ui_mp_am_3_monthes/ui_mp_am_forever
~ Invalid syntax in call to 'sv_suspicious_actions_ban_time'
~ Valid arguments: ui_mp_am_10_minutes/ui_mp_am_30_minutes/ui_mp_am_1_hour/ui_mp_am_6_hours/ui_mp_am_1_day/ui_mp_am_1_week/ui_mp_am_1_month/ui_mp_am_3_monthes/ui_mp_am_forever
[\home\delvin\.wine\drive_c\games\STALKER_OpenXRay_Linux\scop\_appdata_\user.ltx] successfully loaded.
SOUND: Selected device is OpenAL Soft
* SOUND: EFX extension: present
* sound : cache: 32768 kb, 2428 lines, 13820 bpl
Starting RENDER device...
* GPU vendor: [Mesa] device: [AMD REDWOOD (DRM 2.50.0 / 5.15.79-rt54, LLVM 15.0.7)]
* GPU OpenGL version: 4.5 (Core Profile) Mesa 23.0.3
* GPU OpenGL shading language version: 4.50
* GPU OpenGL VTF units: [16] CTI units: [96]
* DVB created: 4096K
* DIB created: 512K
! Renderer doesn't support blender 'effects\shadow_world'
* HWDST/PCF supported and used
Starting engine...
* [ Linux ]: free[443692 K], reserved[17256 K], committed[2217956 K]
* [ Render ]: textures[0 K]
* [ x-ray  ]: process heap[177 K]
* [ x-ray  ]: economy: strings[7947 K], smem[0 K]
-nointro -noprefetch -noshadows -fsltx /home/delvin/.wine/drive_c/games/STALKER_OpenXRay_Linux/scop/fsgame.ltx 
* phase time: 0 ms
* phase cmem: 200 K
* phase time: 21 ms
* phase cmem: 200 K
* phase time: 109 ms
* phase cmem: 207 K
* phase time: 0 ms
* phase cmem: 207 K
* Loading spawn registry...
* 6464 spawn points are successfully loaded
* Loading objects...
* 12744 objects are successfully loaded
* Game delvin - quicksave is successfully loaded from file '\home\delvin\.wine\drive_c\games\STALKER_OpenXRay_Linux\scop\_appdata_\savedgames\delvin - quicksave.scop' (2.117s)
* phase time: 2116 ms
* phase cmem: 398 K
* phase time: 35 ms
* phase cmem: 398 K
* phase time: 11 ms
* phase cmem: 398 K
* client : connection accepted - <All Ok>
* phase time: 11 ms
* phase cmem: 398 K
* phase time: 5 ms
* phase cmem: 398 K
* phase time: 1372 ms
* phase cmem: 626 K
* phase time: 412 ms
* phase cmem: 626 K
* phase time: 3260 ms
* phase cmem: 626 K
* phase time: 59 ms
* phase cmem: 626 K
* [DETAILS] VertexConsts(256), Batch(61)
* [DETAILS] 10126 v(20), 5368 p
* [DETAILS] Batch(61), VB(197K), IB(31K)
* phase time: 76 ms
* phase cmem: 626 K
* Loading HOM: \home\delvin\.wine\drive_c\games\STALKER_OpenXRay_Linux\scop\gamedata\levels\pripyat\level.hom
* phase time: 37 ms
* phase cmem: 626 K
* phase time: 15 ms
* phase cmem: 626 K
* phase time: 2 ms
* phase cmem: 626 K
* phase time: 6 ms
* phase cmem: 626 K
! OpenGL: 0x500: Invalid 3D texture: 'water\water_SBumpVolume'
! OpenGL: 0x502: Invalid compressed 3D subtexture: 'water\water_SBumpVolume'
* t-report - base: 977, 69898 K
* t-report - lmap: 17, 4349 K
~ [ui\pda_tasks_16.xml] stretch attribute is unsupported for [background]
! Can't find texture 'ui_ingame2_pda_buttons_background_e'
! Can't find texture 'ui_pda2_fr_l'
! Can't find texture 'ui_pda2_fr_r'
! Can't find texture 'ui_pda2_fr_t'
! Can't find texture 'ui_pda2_fr_lt'
! Can't find texture 'ui_pda2_fr_rb'
! Can't find texture 'ui_pda2_fr_rt'
! Can't find texture 'ui_pda2_fr_lb'
! Can't find texture 'ui_pda2_fr_delimiter_fraction_back'
! Can't find texture 'ui_pda2_fr_delimiter_fraction_l'
! Can't find texture 'ui_pda2_fr_delimiter_fraction_r'
! Can't find texture 'ui_pda2_fr_delimiter_fraction_t'
! Can't find texture 'ui_pda2_fr_delimiter_fraction_b'
! Can't find texture 'ui_pda2_fr_delimiter_fraction_lt'
! Can't find texture 'ui_pda2_fr_delimiter_fraction_rb'
! Can't find texture 'ui_pda2_fr_delimiter_fraction_rt'
! Can't find texture 'ui_pda2_fr_delimiter_fraction_lb'
~ [ui\pda_fraction_war_16.xml] stretch attribute is unsupported for [background]
~ [ui\pda_fraction_war_16.xml] stretch attribute is unsupported for [static_line1]
~ [ui\pda_fraction_war_16.xml] stretch attribute is unsupported for [static_line2]
~ [ui\pda_fraction_war_16.xml] stretch attribute is unsupported for [static_line3]
~ [ui\pda_fraction_war_16.xml] stretch attribute is unsupported for [static_line4]
~ [ui\pda_fraction_war_16.xml] stretch attribute is unsupported for [static_line_left]
~ [ui\pda_fraction_war_16.xml] stretch attribute is unsupported for [static_line_right]
~ [ui\pda_logs_16.xml] stretch attribute is unsupported for [background]
* phase time: 8960 ms
* phase cmem: 626 K
! Unknown command:  dump_infos
* MEMORY USAGE: 632 K
* End of synchronization A[1] R[1]
* phase time: 17796 ms
* phase cmem: 632 K
* [ Linux ]: free[83480 K], reserved[2388 K], committed[2605704 K]
* [ Render ]: textures[94394 K]
* [ x-ray  ]: process heap[632 K]
* [ x-ray  ]: economy: strings[24777 K], smem[7772 K]
 
FATAL ERROR
 
[error] Expression    : <no expression>
[error] Function      : handler_base
[error] File          : /opt/xray-16/src/xrCore/xrDebug.cpp
[error] Line          : 885
[error] Description   : segmentation fault
 

stack trace:

xrDebug::GatherInfo(char*, unsigned long, ErrorLocation const&, char const*, char const*, char const*, char const*)
xrDebug::Fail(bool&, ErrorLocation const&, char const*, char const*, char const*, char const*)
bin-linux/xrCore.so(+0x3ff27) [0x7f606e2e1f27]
/lib64/libc.so.6(+0x37920) [0x7f606da4a920]
R_dsgraph_structure::insert_static(dxRender_Visual*)
R_dsgraph_structure::add_static(dxRender_Visual*, CFrustum const&, unsigned int)
R_dsgraph_structure::build_subspace()
render_sun::calculate_task(Task&, void*)
TaskManager::ExecuteTask(Task&)
IGame_Level::OnRender()
CLevel::OnRender()
CRenderDevice::DoRender()
CRenderDevice::ProcessFrame()
CRenderDevice::message_loop()
CRenderDevice::Run()
Startup()
RunApplication()
bin-linux/xr_3da(+0x15e9) [0x55a6343725e9]
bin-linux/xr_3da(+0x134f) [0x55a63437234f]
/lib64/libc.so.6(+0x2320a) [0x7f606da3620a]
 
FATAL ERROR
 
[error] Expression    : <no expression>
[error] Function      : handler_base
[error] File          : /opt/xray-16/src/xrCore/xrDebug.cpp
[error] Line          : 885
[error] Description   : segmentation fault
 

stack trace:

xrDebug::GatherInfo(char*, unsigned long, ErrorLocation const&, char const*, char const*, char const*, char const*)
xrDebug::Fail(bool&, ErrorLocation const&, char const*, char const*, char const*, char const*)
bin-linux/xrCore.so(+0x3ff27) [0x7f606e2e1f27]
/lib64/libc.so.6(+0x37920) [0x7f606da4a920]
R_dsgraph_structure::insert_static(dxRender_Visual*)
R_dsgraph_structure::add_static(dxRender_Visual*, CFrustum const&, unsigned int)
R_dsgraph_structure::build_subspace()
render_sun::calculate_task(Task&, void*)
TaskManager::ExecuteTask(Task&)
IGame_Level::OnRender()
CLevel::OnRender()
CRenderDevice::DoRender()
CRenderDevice::ProcessFrame()
CRenderDevice::message_loop()
CRenderDevice::Run()
Startup()
RunApplication()
bin-linux/xr_3da(+0x15e9) [0x55a6343725e9]
bin-linux/xr_3da(+0x134f) [0x55a63437234f]
/lib64/libc.so.6(+0x2320a) [0x7f606da3620a]
"
z8CcyyFw,Hooks,phpface,PHP,Monday 26th of June 2023 08:34:18 AM CDT,"function streamtube_child_my_custom_content(){

	if( ! is_embed() ){
		?>
		<img src=""https://placehold.co/600x200"">
		<?php
	}

}
add_action( 'streamtube/single/content/before', 'streamtube_child_my_custom_content' );

add_action( 'streamtube/single/content/after', 'streamtube_child_my_custom_content' );

add_action( 'streamtube/player/before', 'streamtube_child_my_custom_content' );

add_action( 'streamtube/player/after', 'streamtube_child_my_custom_content' );"
CqBLc8Nu,Untitled,FladeX,HTML,Monday 26th of June 2023 08:33:25 AM CDT,"<!-- Yandex.Metrika counter -->
<script type=""text/javascript"" >
   (function(m,e,t,r,i,k,a){m[i]=m[i]||function(){(m[i].a=m[i].a||[]).push(arguments)};
   m[i].l=1*new Date();
   for (var j = 0; j < document.scripts.length; j++) {if (document.scripts[j].src === r) { return; }}
   k=e.createElement(t),a=e.getElementsByTagName(t)[0],k.async=1,k.src=r,a.parentNode.insertBefore(k,a)})
   (window, document, ""script"", ""https://mc.yandex.ru/metrika/tag.js"", ""ym"");

   ym(94115284, ""init"", {
        clickmap:true,
        trackLinks:true,
        accurateTrackBounce:true,
        webvisor:true
   });
</script>
<noscript><div><img src=""https://mc.yandex.ru/watch/94115284"" style=""position:absolute; left:-9999px;"" alt="""" /></div></noscript>
<!-- /Yandex.Metrika counter -->"
YnqqA1RK,邀您一起看：水果派解说160 令万千老司机社保_星宫一花の年度最佳,xiaomianao666,JavaScript,Monday 26th of June 2023 08:29:27 AM CDT,海阔视界规则分享，当前分享的是：二级页面详情￥page_detail￥水果派解说160 令万千老司机社保_星宫一花の年度最佳@@eyJkYXRhIjoie1wiYXNzb2NpYXRlZE1vZGVsc01hcEZvckpvaW5UYWJsZVwiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhGS1wiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhvdXRGS1wiOnt9LFwiZmllbGRzVG9TZXRUb0RlZmF1bHRcIjpbXSxcImdtdE1vZGlmaWVkXCI6MCxcImlkXCI6MCxcImxhc3RfY2hhcHRlcl9ydWxlXCI6XCJcIixcImxpc3RUb0NsZWFyQXNzb2NpYXRlZEZLXCI6W10sXCJsaXN0VG9DbGVhclNlbGZGS1wiOltdLFwicGFnZUxpc3RcIjpbXSxcInBhcmFtc1wiOlwie1xcXCJuYW1lXFxcIjpcXFwi55Wq5Y+3XFxcIixcXFwicGljX3VybFxcXCI6XFxcImh0dHBzOi8vZmVuZ21pYW4uZmhmaHR1dHUuY29tL3VwbG9hZC92b2QvMjAyMTA5MDQtMS9lMzhiNTgzNWNmMzc3Yzg1MDUwZTQ2ZmIyYWI3ZTI5YS5qcGdAUmVmZXJlcj1cXFwifVwiLFwic2F2ZWRcIjpmYWxzZSxcInRpdGxlXCI6XCLnlarlj7dcIixcInZlcnNpb25cIjowLFwidXJsXCI6XCJoaWtlcjovL2VtcHR5IyNodHRwOi8vZmhhcGk5LmNvbS9hcGkucGhwL3Byb3ZpZGUvdm9kP2FjPXZpZGVvbGlzdCZpZHM9MzEzOTIjaW1tZXJzaXZlVGhlbWUjO2dldDtVVEYtODt7VXNlci1BZ2VudEBNb3ppbGxhLzUuMCAoTGludXjvvJvvvJsgQW5kcm9pZCAxMe+8m++8myBNaSAxMCBQcm8pIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS84OC4wLjQzMjQuMTUyIE1vYmlsZSBTYWZhcmkvNTM3LjM2fVwiLFwiY29sX3R5cGVcIjpcInRleHRfNVwiLFwiZmluZF9ydWxlXCI6XCJqczpcXG5yZXF1aXJlKGNvbmZpZy7mqKHmnb8pO1xcbuS6jOe6pygpO1wiLFwiZ3JvdXBcIjpcIjHig6NmbFwiLFwidWFcIjpcIm1vYmlsZVwiLFwicHJlUnVsZVwiOlwidmFyIHVhPScnO1xcbnJlcXVpcmUoJ2h0dHBzOi8vZ2l0Y29kZS5uZXQvcXFfMzIzOTQzNTEvZHIvLS9yYXcvbWFzdGVyL2pzL+i1hOa6kOe9kemihOWkhOeQhi5qcycpO1wiLFwicGFnZXNcIjpcIltdXCJ9IiwicGljVXJsIjoiaHR0cHM6Ly9mZW5nbWlhbi5maGZodHV0dS5jb20vdXBsb2FkL3ZvZC8yMDIxMDkwNC0xL2UzOGI1ODM1Y2YzNzdjODUwNTBlNDZmYjJhYjdlMjlhLmpwZ0BSZWZlcmVyPSIsInRpdGxlIjoi5rC05p6c5rS+6Kej6K+0MTYwIOS7pOS4h+WNg+iAgeWPuOacuuekvuS/nV/mmJ/lrqvkuIDoirHjga7lubTluqbmnIDkvbMifQ==
14S9F5HC,Kaggle - Intermediate ML - Cross Validation,makispaiktis,Python,Monday 26th of June 2023 08:16:11 AM CDT,"import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestRegressor
from sklearn.pipeline import Pipeline
from sklearn.impute import SimpleImputer
from sklearn.model_selection import cross_val_score
import matplotlib.pyplot as plt


# *******************************************************************************************************
# *******************************************************************************************************
# 0. Function that returns the average score - Input = number of trees examined in the RFR model
# *******************************************************************************************************
# *******************************************************************************************************

def get_score(n_estimators):
    
    my_pipeline = Pipeline(steps=[
    ('preprocessor', SimpleImputer()), ('model', RandomForestRegressor(n_estimators=n_estimators, random_state=0))])
    scores = -1 * cross_val_score(my_pipeline, X, y, cv=3, scoring='neg_mean_absolute_error')
    avg = scores.mean()
    print(""Average MAE score:"", avg)
    return avg




# *******************************************************************************************************
# *******************************************************************************************************
# 1. Basics
# *******************************************************************************************************
# *******************************************************************************************************

# 1a. Read the 2 datasets
train_data = pd.read_csv('../input/train.csv', index_col='Id')
test_data = pd.read_csv('../input/test.csv', index_col='Id')

# 1b. Remove rows with missing target, separate target from predictors
train_data.dropna(axis=0, subset=['SalePrice'], inplace=True)
y = train_data.SalePrice              
train_data.drop(['SalePrice'], axis=1, inplace=True)

# 1c. Select numeric columns only (Not OH encoding below)
numeric_cols = [cname for cname in train_data.columns if train_data[cname].dtype in ['int64', 'float64']]
X = train_data[numeric_cols].copy()
X_test = test_data[numeric_cols].copy()
X.head()





# *******************************************************************************************************
# *******************************************************************************************************
# 2. Create a simple pipeline with a simple imputer for numerical columns that selected before
# *******************************************************************************************************
# *******************************************************************************************************

my_pipeline = Pipeline(steps=[
    ('preprocessor', SimpleImputer()), ('model', RandomForestRegressor(n_estimators=50, random_state=0))])





# *******************************************************************************************************
# *******************************************************************************************************
# 3. Create 5 folds in the dataset - Conduct 5 experiments with 5 different scores - Find the average
# *******************************************************************************************************
# *******************************************************************************************************

# Multiply by -1 since sklearn calculates *negative* MAE
scores = -1 * cross_val_score(my_pipeline, X, y, cv=5, scoring='neg_mean_absolute_error')
print(""Average MAE score:"", scores.mean())




# *******************************************************************************************************
# *******************************************************************************************************
# 4. Test different parameter values - Variable n_estimators
# *******************************************************************************************************
# *******************************************************************************************************

# 4a. Create a dictionary of keys and values
n_estimators_list = list(range(50, 401, 50))
results = {n_estimators: get_score(n_estimators) for n_estimators in n_estimators_list}
print(results)

# 4b. Plot the results
%matplotlib inline
plt.plot(list(results.keys()), list(results.values()))
plt.show()
n_estimators_best = 200"
CY7C5i0R,Untitled,elliotnoob,Python,Monday 26th of June 2023 08:09:53 AM CDT,"import cv2
import numpy as np
from PIL import Image

def remove_background(image_path):
    # Load the image using Pillow
    image = Image.open(image_path)
    
    # Convert the image to RGB color space
    image_rgb = image.convert(""RGB"")
    
    # Convert the image to a numpy array
    np_image = np.array(image_rgb)
    
    # Convert the image to BGR color space
    bgr_image = cv2.cvtColor(np_image, cv2.COLOR_RGB2BGR)
    
    # Convert the image to grayscale
    gray = cv2.cvtColor(bgr_image, cv2.COLOR_BGR2GRAY)
    
    # Apply a binary threshold to create a mask
    _, mask = cv2.threshold(gray, 1, 255, cv2.THRESH_BINARY)
    
    # Find contours in the mask
    contours, _ = cv2.findContours(mask, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)
    
    # Create a black background
    background = np.zeros_like(bgr_image)
    
    # Draw the contours on the black background
    cv2.drawContours(background, contours, -1, (255, 255, 255), thickness=cv2.FILLED)
    
    # Apply the mask to the original image
    result = cv2.bitwise_and(bgr_image, background)
    
    return result

def edge_to_edge_crop(image):
    # Convert the image to grayscale
    gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
    
    # Apply a binary threshold to create a mask
    _, mask = cv2.threshold(gray, 1, 255, cv2.THRESH_BINARY)
    
    # Find contours in the mask
    contours, _ = cv2.findContours(mask, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)
    
    # Find the bounding box of the contours
    x, y, w, h = cv2.boundingRect(contours[0])
    
    # Crop the image based on the bounding box
    cropped_image = image[y:y+h, x:x+w]
    
    return cropped_image

# Path to the input AVIF image
image_path = 'input_image.avif'

# Convert AVIF image to JPEG format
converted_image_path = 'converted_image.jpg'
Image.open(image_path).convert(""RGB"").save(converted_image_path, ""JPEG"")

# Remove the background of the image
background_removed = remove_background(converted_image_path)

# Perform edge-to-edge cropping
cropped_image = edge_to_edge_crop(background_removed)

# Display the original image, background removed image, and cropped image
Image.open(image_path).show()
Image.fromarray(cv2.cvtColor(background_removed, cv2.COLOR_BGR2RGB)).show()
Image.fromarray(cv2.cvtColor(cropped_image, cv2.COLOR_BGR2RGB)).show()
"
iGZ0wJEQ,Untitled,wclovers,CSS,Monday 26th of June 2023 08:02:27 AM CDT,"@media screen and (max-width: 667px) {
    #wcfmmp-store.wcfmmp-single-store-holder .user_review_sec .bd_rating_area {
        display: block !important;
    }
}"
hzxndd46,PersonBehaviour,cepxuozab,C++,Monday 26th of June 2023 07:37:20 AM CDT,"void PersonBehavior() {
        Person p(""ivan""s, 17);
        ASSERT_EQUAL(p.GetDanceCount(), 0);
        ASSERT_EQUAL(p.GetSatisfaction(), 100);

        p.LiveADay();
        ASSERT_EQUAL(p.GetDanceCount(), 0);
        ASSERT_EQUAL(p.GetSatisfaction(), 100);

        p.Dance();
        ASSERT_EQUAL(p.GetDanceCount(), 1);
        ASSERT_EQUAL(p.GetSatisfaction(), 100 + 1);
        p.LiveADay();
        ASSERT_EQUAL(p.GetDanceCount(), 1);
        ASSERT_EQUAL(p.GetSatisfaction(), 100 + 1);

        p.Dance();
        p.Dance();
        ASSERT_EQUAL(p.GetDanceCount(), 3);
        ASSERT_EQUAL(p.GetSatisfaction(), 100 + 3);
        p.LiveADay();
        ASSERT_EQUAL(p.GetDanceCount(), 3);
        ASSERT_EQUAL(p.GetSatisfaction(), 100 + 3);

        const auto& p_c = p;
        ASSERT_EQUAL(p_c.GetDanceCount(), 3);
        ASSERT_EQUAL(p_c.GetSatisfaction(), 100 + 3);
    }
"
5CmqLdJf,data,RupeshAcharya60,JSON,Monday 26th of June 2023 07:08:52 AM CDT,"[
      {
            ""name"": ""Afghanistan"",
            ""dial_code"": ""+93"",
            ""code"": ""AF"",
            ""emoji"": ""🇦🇫""
      },
      {
            ""name"": ""Aland Islands"",
            ""dial_code"": ""+358"",
            ""code"": ""AX"",
            ""emoji"": ""🇦🇽""
      },
      {
            ""name"": ""Albania"",
            ""dial_code"": ""+355"",
            ""code"": ""AL"",
            ""emoji"": ""🇦🇱""
      },
      {
            ""name"": ""Algeria"",
            ""dial_code"": ""+213"",
            ""code"": ""DZ"",
            ""emoji"": ""🇩🇿""
      },
      {
            ""name"": ""AmericanSamoa"",
            ""dial_code"": ""+1684"",
            ""code"": ""AS"",
            ""emoji"": ""🇦🇸""
      },
      {
            ""name"": ""Andorra"",
            ""dial_code"": ""+376"",
            ""code"": ""AD"",
            ""emoji"": ""🇦🇩""
      },
      {
            ""name"": ""Angola"",
            ""dial_code"": ""+244"",
            ""code"": ""AO"",
            ""emoji"": ""🇦🇴""
      },
      {
            ""name"": ""Anguilla"",
            ""dial_code"": ""+1264"",
            ""code"": ""AI"",
            ""emoji"": ""🇦🇮""
      },
      {
            ""name"": ""Antarctica"",
            ""dial_code"": ""+672"",
            ""code"": ""AQ"",
            ""emoji"": ""🇦🇶""
      },
      {
            ""name"": ""Antigua and Barbuda"",
            ""dial_code"": ""+1268"",
            ""code"": ""AG"",
            ""emoji"": ""🇦🇬""
      },
      {
            ""name"": ""Argentina"",
            ""dial_code"": ""+54"",
            ""code"": ""AR"",
            ""emoji"": ""🇦🇷""
      },
      {
            ""name"": ""Armenia"",
            ""dial_code"": ""+374"",
            ""code"": ""AM"",
            ""emoji"": ""🇦🇲""
      },
      {
            ""name"": ""Aruba"",
            ""dial_code"": ""+297"",
            ""code"": ""AW"",
            ""emoji"": ""🇦🇼""
      },
      {
            ""name"": ""Australia"",
            ""dial_code"": ""+61"",
            ""code"": ""AU"",
            ""emoji"": ""🇦🇺""
      },
      {
            ""name"": ""Austria"",
            ""dial_code"": ""+43"",
            ""code"": ""AT"",
            ""emoji"": ""🇦🇹""
      },
      {
            ""name"": ""Azerbaijan"",
            ""dial_code"": ""+994"",
            ""code"": ""AZ"",
            ""emoji"": ""🇦🇿""
      },
      {
            ""name"": ""Bahamas"",
            ""dial_code"": ""+1242"",
            ""code"": ""BS"",
            ""emoji"": ""🇧🇸""
      },
      {
            ""name"": ""Bahrain"",
            ""dial_code"": ""+973"",
            ""code"": ""BH"",
            ""emoji"": ""🇧🇭""
      },
      {
            ""name"": ""Bangladesh"",
            ""dial_code"": ""+880"",
            ""code"": ""BD"",
            ""emoji"": ""🇧🇩""
      },
      {
            ""name"": ""Barbados"",
            ""dial_code"": ""+1246"",
            ""code"": ""BB"",
            ""emoji"": ""🇧🇧""
      },
      {
            ""name"": ""Belarus"",
            ""dial_code"": ""+375"",
            ""code"": ""BY"",
            ""emoji"": ""🇧🇾""
      },
      {
            ""name"": ""Belgium"",
            ""dial_code"": ""+32"",
            ""code"": ""BE"",
            ""emoji"": ""🇧🇪""
      },
      {
            ""name"": ""Belize"",
            ""dial_code"": ""+501"",
            ""code"": ""BZ"",
            ""emoji"": ""🇧🇿""
      },
      {
            ""name"": ""Benin"",
            ""dial_code"": ""+229"",
            ""code"": ""BJ"",
            ""emoji"": ""🇧🇯""
      },
      {
            ""name"": ""Bermuda"",
            ""dial_code"": ""+1441"",
            ""code"": ""BM"",
            ""emoji"": ""🇧🇲""
      },
      {
            ""name"": ""Bhutan"",
            ""dial_code"": ""+975"",
            ""code"": ""BT"",
            ""emoji"": ""🇧🇹""
      },
      {
            ""name"": ""Bolivia, Plurinational State of"",
            ""dial_code"": ""+591"",
            ""code"": ""BO"",
            ""emoji"": ""🇧🇴""
      },
      {
            ""name"": ""Bosnia and Herzegovina"",
            ""dial_code"": ""+387"",
            ""code"": ""BA"",
            ""emoji"": ""🇧🇦""
      },
      {
            ""name"": ""Botswana"",
            ""dial_code"": ""+267"",
            ""code"": ""BW"",
            ""emoji"": ""🇧🇼""
      },
      {
            ""name"": ""Brazil"",
            ""dial_code"": ""+55"",
            ""code"": ""BR"",
            ""emoji"": ""🇧🇷""
      },
      {
            ""name"": ""British Indian Ocean Territory"",
            ""dial_code"": ""+246"",
            ""code"": ""IO"",
            ""emoji"": ""🇮🇴""
      },
      {
            ""name"": ""Brunei Darussalam"",
            ""dial_code"": ""+673"",
            ""code"": ""BN"",
            ""emoji"": ""🇧🇳""
      },
      {
            ""name"": ""Bulgaria"",
            ""dial_code"": ""+359"",
            ""code"": ""BG"",
            ""emoji"": ""🇧🇬""
      },
      {
            ""name"": ""Burkina Faso"",
            ""dial_code"": ""+226"",
            ""code"": ""BF"",
            ""emoji"": ""🇧🇫""
      },
      {
            ""name"": ""Burundi"",
            ""dial_code"": ""+257"",
            ""code"": ""BI"",
            ""emoji"": ""🇧🇮""
      },
      {
            ""name"": ""Cambodia"",
            ""dial_code"": ""+855"",
            ""code"": ""KH"",
            ""emoji"": ""🇰🇭""
      },
      {
            ""name"": ""Cameroon"",
            ""dial_code"": ""+237"",
            ""code"": ""CM"",
            ""emoji"": ""🇨🇲""
      },
      {
            ""name"": ""Canada"",
            ""dial_code"": ""+1"",
            ""code"": ""CA"",
            ""emoji"": ""🇨🇦""
      },
      {
            ""name"": ""Cape Verde"",
            ""dial_code"": ""+238"",
            ""code"": ""CV"",
            ""emoji"": ""🇨🇻""
      },
      {
            ""name"": ""Cayman Islands"",
            ""dial_code"": ""+ 345"",
            ""code"": ""KY"",
            ""emoji"": ""🇰🇾""
      },
      {
            ""name"": ""Central African Republic"",
            ""dial_code"": ""+236"",
            ""code"": ""CF"",
            ""emoji"": ""🇨🇫""
      },
      {
            ""name"": ""Chad"",
            ""dial_code"": ""+235"",
            ""code"": ""TD"",
            ""emoji"": ""🇹🇩""
      },
      {
            ""name"": ""Chile"",
            ""dial_code"": ""+56"",
            ""code"": ""CL"",
            ""emoji"": ""🇨🇱""
      },
      {
            ""name"": ""China"",
            ""dial_code"": ""+86"",
            ""code"": ""CN"",
            ""emoji"": ""🇨🇳""
      },
      {
            ""name"": ""Christmas Island"",
            ""dial_code"": ""+61"",
            ""code"": ""CX"",
            ""emoji"": ""🇨🇽""
      },
      {
            ""name"": ""Cocos (Keeling) Islands"",
            ""dial_code"": ""+61"",
            ""code"": ""CC"",
            ""emoji"": ""🇨🇨""
      },
      {
            ""name"": ""Colombia"",
            ""dial_code"": ""+57"",
            ""code"": ""CO"",
            ""emoji"": ""🇨🇴""
      },
      {
            ""name"": ""Comoros"",
            ""dial_code"": ""+269"",
            ""code"": ""KM"",
            ""emoji"": ""🇰🇲""
      },
      {
            ""name"": ""Congo"",
            ""dial_code"": ""+242"",
            ""code"": ""CG"",
            ""emoji"": ""🇨🇬""
      },
      {
            ""name"": ""Congo, The Democratic Republic of the Congo"",
            ""dial_code"": ""+243"",
            ""code"": ""CD"",
            ""emoji"": ""🇨🇩""
      },
      {
            ""name"": ""Cook Islands"",
            ""dial_code"": ""+682"",
            ""code"": ""CK"",
            ""emoji"": ""🇨🇰""
      },
      {
            ""name"": ""Costa Rica"",
            ""dial_code"": ""+506"",
            ""code"": ""CR"",
            ""emoji"": ""🇨🇷""
      },
      {
            ""name"": ""Cote d'Ivoire"",
            ""dial_code"": ""+225"",
            ""code"": ""CI"",
            ""emoji"": ""🇨🇮""
      },
      {
            ""name"": ""Croatia"",
            ""dial_code"": ""+385"",
            ""code"": ""HR"",
            ""emoji"": ""🇭🇷""
      },
      {
            ""name"": ""Cuba"",
            ""dial_code"": ""+53"",
            ""code"": ""CU"",
            ""emoji"": ""🇨🇺""
      },
      {
            ""name"": ""Cyprus"",
            ""dial_code"": ""+357"",
            ""code"": ""CY"",
            ""emoji"": ""🇨🇾""
      },
      {
            ""name"": ""Czech Republic"",
            ""dial_code"": ""+420"",
            ""code"": ""CZ"",
            ""emoji"": ""🇨🇿""
      },
      {
            ""name"": ""Denmark"",
            ""dial_code"": ""+45"",
            ""code"": ""DK"",
            ""emoji"": ""🇩🇰""
      },
      {
            ""name"": ""Djibouti"",
            ""dial_code"": ""+253"",
            ""code"": ""DJ"",
            ""emoji"": ""🇩🇯""
      },
      {
            ""name"": ""Dominica"",
            ""dial_code"": ""+1767"",
            ""code"": ""DM"",
            ""emoji"": ""🇩🇲""
      },
      {
            ""name"": ""Dominican Republic"",
            ""dial_code"": ""+1849"",
            ""code"": ""DO"",
            ""emoji"": ""🇩🇴""
      },
      {
            ""name"": ""Ecuador"",
            ""dial_code"": ""+593"",
            ""code"": ""EC"",
            ""emoji"": ""🇪🇨""
      },
      {
            ""name"": ""Egypt"",
            ""dial_code"": ""+20"",
            ""code"": ""EG"",
            ""emoji"": ""🇪🇬""
      },
      {
            ""name"": ""El Salvador"",
            ""dial_code"": ""+503"",
            ""code"": ""SV"",
            ""emoji"": ""🇸🇻""
      },
      {
            ""name"": ""Equatorial Guinea"",
            ""dial_code"": ""+240"",
            ""code"": ""GQ"",
            ""emoji"": ""🇬🇶""
      },
      {
            ""name"": ""Eritrea"",
            ""dial_code"": ""+291"",
            ""code"": ""ER"",
            ""emoji"": ""🇪🇷""
      },
      {
            ""name"": ""Estonia"",
            ""dial_code"": ""+372"",
            ""code"": ""EE"",
            ""emoji"": ""🇪🇪""
      },
      {
            ""name"": ""Ethiopia"",
            ""dial_code"": ""+251"",
            ""code"": ""ET"",
            ""emoji"": ""🇪🇹""
      },
      {
            ""name"": ""Falkland Islands (Malvinas)"",
            ""dial_code"": ""+500"",
            ""code"": ""FK"",
            ""emoji"": ""🇫🇰""
      },
      {
            ""name"": ""Faroe Islands"",
            ""dial_code"": ""+298"",
            ""code"": ""FO"",
            ""emoji"": ""🇫🇴""
      },
      {
            ""name"": ""Fiji"",
            ""dial_code"": ""+679"",
            ""code"": ""FJ"",
            ""emoji"": ""🇫🇯""
      },
      {
            ""name"": ""Finland"",
            ""dial_code"": ""+358"",
            ""code"": ""FI"",
            ""emoji"": ""🇫🇮""
      },
      {
            ""name"": ""France"",
            ""dial_code"": ""+33"",
            ""code"": ""FR"",
            ""emoji"": ""🇫🇷""
      },
      {
            ""name"": ""French Guiana"",
            ""dial_code"": ""+594"",
            ""code"": ""GF"",
            ""emoji"": ""🇬🇫""
      },
      {
            ""name"": ""French Polynesia"",
            ""dial_code"": ""+689"",
            ""code"": ""PF"",
            ""emoji"": ""🇵🇫""
      },
      {
            ""name"": ""Gabon"",
            ""dial_code"": ""+241"",
            ""code"": ""GA"",
            ""emoji"": ""🇬🇦""
      },
      {
            ""name"": ""Gambia"",
            ""dial_code"": ""+220"",
            ""code"": ""GM"",
            ""emoji"": ""🇬🇲""
      },
      {
            ""name"": ""Georgia"",
            ""dial_code"": ""+995"",
            ""code"": ""GE"",
            ""emoji"": ""🇬🇪""
      },
      {
            ""name"": ""Germany"",
            ""dial_code"": ""+49"",
            ""code"": ""DE"",
            ""emoji"": ""🇩🇪""
      },
      {
            ""name"": ""Ghana"",
            ""dial_code"": ""+233"",
            ""code"": ""GH"",
            ""emoji"": ""🇬🇭""
      },
      {
            ""name"": ""Gibraltar"",
            ""dial_code"": ""+350"",
            ""code"": ""GI"",
            ""emoji"": ""🇬🇮""
      },
      {
            ""name"": ""Greece"",
            ""dial_code"": ""+30"",
            ""code"": ""GR"",
            ""emoji"": ""🇬🇷""
      },
      {
            ""name"": ""Greenland"",
            ""dial_code"": ""+299"",
            ""code"": ""GL"",
            ""emoji"": ""🇬🇱""
      },
      {
            ""name"": ""Grenada"",
            ""dial_code"": ""+1473"",
            ""code"": ""GD"",
            ""emoji"": ""🇬🇩""
      },
      {
            ""name"": ""Guadeloupe"",
            ""dial_code"": ""+590"",
            ""code"": ""GP"",
            ""emoji"": ""🇬🇵""
      },
      {
            ""name"": ""Guam"",
            ""dial_code"": ""+1671"",
            ""code"": ""GU"",
            ""emoji"": ""🇬🇺""
      },
      {
            ""name"": ""Guatemala"",
            ""dial_code"": ""+502"",
            ""code"": ""GT"",
            ""emoji"": ""🇬🇹""
      },
      {
            ""name"": ""Guernsey"",
            ""dial_code"": ""+44"",
            ""code"": ""GG"",
            ""emoji"": ""🇬🇬""
      },
      {
            ""name"": ""Guinea"",
            ""dial_code"": ""+224"",
            ""code"": ""GN"",
            ""emoji"": ""🇬🇳""
      },
      {
            ""name"": ""Guinea-Bissau"",
            ""dial_code"": ""+245"",
            ""code"": ""GW"",
            ""emoji"": ""🇬🇼""
      },
      {
            ""name"": ""Guyana"",
            ""dial_code"": ""+595"",
            ""code"": ""GY"",
            ""emoji"": ""🇬🇾""
      },
      {
            ""name"": ""Haiti"",
            ""dial_code"": ""+509"",
            ""code"": ""HT"",
            ""emoji"": ""🇭🇹""
      },
      {
            ""name"": ""Holy See (Vatican City State)"",
            ""dial_code"": ""+379"",
            ""code"": ""VA"",
            ""emoji"": ""🇻🇦""
      },
      {
            ""name"": ""Honduras"",
            ""dial_code"": ""+504"",
            ""code"": ""HN"",
            ""emoji"": ""🇭🇳""
      },
      {
            ""name"": ""Hong Kong"",
            ""dial_code"": ""+852"",
            ""code"": ""HK"",
            ""emoji"": ""🇭🇰""
      },
      {
            ""name"": ""Hungary"",
            ""dial_code"": ""+36"",
            ""code"": ""HU"",
            ""emoji"": ""🇭🇺""
      },
      {
            ""name"": ""Iceland"",
            ""dial_code"": ""+354"",
            ""code"": ""IS"",
            ""emoji"": ""🇮🇸""
      },
      {
            ""name"": ""India"",
            ""dial_code"": ""+91"",
            ""code"": ""IN"",
            ""emoji"": ""🇮🇳""
      },
      {
            ""name"": ""Indonesia"",
            ""dial_code"": ""+62"",
            ""code"": ""ID"",
            ""emoji"": ""🇮🇩""
      },
      {
            ""name"": ""Iran, Islamic Republic of Persian Gulf"",
            ""dial_code"": ""+98"",
            ""code"": ""IR"",
            ""emoji"": ""🇮🇷""
      },
      {
            ""name"": ""Iraq"",
            ""dial_code"": ""+964"",
            ""code"": ""IQ"",
            ""emoji"": ""🇮🇶""
      },
      {
            ""name"": ""Ireland"",
            ""dial_code"": ""+353"",
            ""code"": ""IE"",
            ""emoji"": ""🇮🇪""
      },
      {
            ""name"": ""Isle of Man"",
            ""dial_code"": ""+44"",
            ""code"": ""IM"",
            ""emoji"": ""🇮🇲""
      },
      {
            ""name"": ""Israel"",
            ""dial_code"": ""+972"",
            ""code"": ""IL"",
            ""emoji"": ""🇮🇱""
      },
      {
            ""name"": ""Italy"",
            ""dial_code"": ""+39"",
            ""code"": ""IT"",
            ""emoji"": ""🇮🇹""
      },
      {
            ""name"": ""Jamaica"",
            ""dial_code"": ""+1876"",
            ""code"": ""JM"",
            ""emoji"": ""🇯🇲""
      },
      {
            ""name"": ""Japan"",
            ""dial_code"": ""+81"",
            ""code"": ""JP"",
            ""emoji"": ""🇯🇵""
      },
      {
            ""name"": ""Jersey"",
            ""dial_code"": ""+44"",
            ""code"": ""JE"",
            ""emoji"": ""🇯🇪""
      },
      {
            ""name"": ""Jordan"",
            ""dial_code"": ""+962"",
            ""code"": ""JO"",
            ""emoji"": ""🇯🇴""
      },
      {
            ""name"": ""Kazakhstan"",
            ""dial_code"": ""+77"",
            ""code"": ""KZ"",
            ""emoji"": ""🇰🇿""
      },
      {
            ""name"": ""Kenya"",
            ""dial_code"": ""+254"",
            ""code"": ""KE"",
            ""emoji"": ""🇰🇪""
      },
      {
            ""name"": ""Kiribati"",
            ""dial_code"": ""+686"",
            ""code"": ""KI"",
            ""emoji"": ""🇰🇮""
      },
      {
            ""name"": ""Korea, Democratic People's Republic of Korea"",
            ""dial_code"": ""+850"",
            ""code"": ""KP"",
            ""emoji"": ""🇰🇵""
      },
      {
            ""name"": ""Korea, Republic of South Korea"",
            ""dial_code"": ""+82"",
            ""code"": ""KR"",
            ""emoji"": ""🇰🇷""
      },
      {
            ""name"": ""Kuwait"",
            ""dial_code"": ""+965"",
            ""code"": ""KW"",
            ""emoji"": ""🇰🇼""
      },
      {
            ""name"": ""Kyrgyzstan"",
            ""dial_code"": ""+996"",
            ""code"": ""KG"",
            ""emoji"": ""🇰🇬""
      },
      {
            ""name"": ""Laos"",
            ""dial_code"": ""+856"",
            ""code"": ""LA"",
            ""emoji"": ""🇱🇦""
      },
      {
            ""name"": ""Latvia"",
            ""dial_code"": ""+371"",
            ""code"": ""LV"",
            ""emoji"": ""🇱🇻""
      },
      {
            ""name"": ""Lebanon"",
            ""dial_code"": ""+961"",
            ""code"": ""LB"",
            ""emoji"": ""🇱🇧""
      },
      {
            ""name"": ""Lesotho"",
            ""dial_code"": ""+266"",
            ""code"": ""LS"",
            ""emoji"": ""🇱🇸""
      },
      {
            ""name"": ""Liberia"",
            ""dial_code"": ""+231"",
            ""code"": ""LR"",
            ""emoji"": ""🇱🇷""
      },
      {
            ""name"": ""Libyan Arab Jamahiriya"",
            ""dial_code"": ""+218"",
            ""code"": ""LY"",
            ""emoji"": ""🇱🇾""
      },
      {
            ""name"": ""Liechtenstein"",
            ""dial_code"": ""+423"",
            ""code"": ""LI"",
            ""emoji"": ""🇱🇮""
      },
      {
            ""name"": ""Lithuania"",
            ""dial_code"": ""+370"",
            ""code"": ""LT"",
            ""emoji"": ""🇱🇹""
      },
      {
            ""name"": ""Luxembourg"",
            ""dial_code"": ""+352"",
            ""code"": ""LU"",
            ""emoji"": ""🇱🇺""
      },
      {
            ""name"": ""Macao"",
            ""dial_code"": ""+853"",
            ""code"": ""MO"",
            ""emoji"": ""🇲🇴""
      },
      {
            ""name"": ""Macedonia"",
            ""dial_code"": ""+389"",
            ""code"": ""MK"",
            ""emoji"": ""🇲🇰""
      },
      {
            ""name"": ""Madagascar"",
            ""dial_code"": ""+261"",
            ""code"": ""MG"",
            ""emoji"": ""🇲🇬""
      },
      {
            ""name"": ""Malawi"",
            ""dial_code"": ""+265"",
            ""code"": ""MW"",
            ""emoji"": ""🇲🇼""
      },
      {
            ""name"": ""Malaysia"",
            ""dial_code"": ""+60"",
            ""code"": ""MY"",
            ""emoji"": ""🇲🇾""
      },
      {
            ""name"": ""Maldives"",
            ""dial_code"": ""+960"",
            ""code"": ""MV"",
            ""emoji"": ""🇲🇻""
      },
      {
            ""name"": ""Mali"",
            ""dial_code"": ""+223"",
            ""code"": ""ML"",
            ""emoji"": ""🇲🇱""
      },
      {
            ""name"": ""Malta"",
            ""dial_code"": ""+356"",
            ""code"": ""MT"",
            ""emoji"": ""🇲🇹""
      },
      {
            ""name"": ""Marshall Islands"",
            ""dial_code"": ""+692"",
            ""code"": ""MH"",
            ""emoji"": ""🇲🇭""
      },
      {
            ""name"": ""Martinique"",
            ""dial_code"": ""+596"",
            ""code"": ""MQ"",
            ""emoji"": ""🇲🇶""
      },
      {
            ""name"": ""Mauritania"",
            ""dial_code"": ""+222"",
            ""code"": ""MR"",
            ""emoji"": ""🇲🇷""
      },
      {
            ""name"": ""Mauritius"",
            ""dial_code"": ""+230"",
            ""code"": ""MU"",
            ""emoji"": ""🇲🇺""
      },
      {
            ""name"": ""Mayotte"",
            ""dial_code"": ""+262"",
            ""code"": ""YT"",
            ""emoji"": ""🇾🇹""
      },
      {
            ""name"": ""Mexico"",
            ""dial_code"": ""+52"",
            ""code"": ""MX"",
            ""emoji"": ""🇲🇽""
      },
      {
            ""name"": ""Micronesia, Federated States of Micronesia"",
            ""dial_code"": ""+691"",
            ""code"": ""FM"",
            ""emoji"": ""🇫🇲""
      },
      {
            ""name"": ""Moldova"",
            ""dial_code"": ""+373"",
            ""code"": ""MD"",
            ""emoji"": ""🇲🇩""
      },
      {
            ""name"": ""Monaco"",
            ""dial_code"": ""+377"",
            ""code"": ""MC"",
            ""emoji"": ""🇲🇨""
      },
      {
            ""name"": ""Mongolia"",
            ""dial_code"": ""+976"",
            ""code"": ""MN"",
            ""emoji"": ""🇲🇳""
      },
      {
            ""name"": ""Montenegro"",
            ""dial_code"": ""+382"",
            ""code"": ""ME"",
            ""emoji"": ""🇲🇪""
      },
      {
            ""name"": ""Montserrat"",
            ""dial_code"": ""+1664"",
            ""code"": ""MS"",
            ""emoji"": ""🇲🇸""
      },
      {
            ""name"": ""Morocco"",
            ""dial_code"": ""+212"",
            ""code"": ""MA"",
            ""emoji"": ""🇲🇦""
      },
      {
            ""name"": ""Mozambique"",
            ""dial_code"": ""+258"",
            ""code"": ""MZ"",
            ""emoji"": ""🇲🇿""
      },
      {
            ""name"": ""Myanmar"",
            ""dial_code"": ""+95"",
            ""code"": ""MM"",
            ""emoji"": ""🇲🇲""
      },
      {
            ""name"": ""Namibia"",
            ""dial_code"": ""+264"",
            ""code"": ""NA"",
            ""emoji"": ""🇳🇦""
      },
      {
            ""name"": ""Nauru"",
            ""dial_code"": ""+674"",
            ""code"": ""NR"",
            ""emoji"": ""🇳🇷""
      },
      {
            ""name"": ""Nepal"",
            ""dial_code"": ""+977"",
            ""code"": ""NP"",
            ""emoji"": ""🇳🇵""
      },
      {
            ""name"": ""Netherlands"",
            ""dial_code"": ""+31"",
            ""code"": ""NL"",
            ""emoji"": ""🇳🇱""
      },
      {
            ""name"": ""Netherlands Antilles"",
            ""dial_code"": ""+599"",
            ""code"": ""AN""
      },
      {
            ""name"": ""New Caledonia"",
            ""dial_code"": ""+687"",
            ""code"": ""NC"",
            ""emoji"": ""🇳🇨""
      },
      {
            ""name"": ""New Zealand"",
            ""dial_code"": ""+64"",
            ""code"": ""NZ"",
            ""emoji"": ""🇳🇿""
      },
      {
            ""name"": ""Nicaragua"",
            ""dial_code"": ""+505"",
            ""code"": ""NI"",
            ""emoji"": ""🇳🇮""
      },
      {
            ""name"": ""Niger"",
            ""dial_code"": ""+227"",
            ""code"": ""NE"",
            ""emoji"": ""🇳🇪""
      },
      {
            ""name"": ""Nigeria"",
            ""dial_code"": ""+234"",
            ""code"": ""NG"",
            ""emoji"": ""🇳🇬""
      },
      {
            ""name"": ""Niue"",
            ""dial_code"": ""+683"",
            ""code"": ""NU"",
            ""emoji"": ""🇳🇺""
      },
      {
            ""name"": ""Norfolk Island"",
            ""dial_code"": ""+672"",
            ""code"": ""NF"",
            ""emoji"": ""🇳🇫""
      },
      {
            ""name"": ""Northern Mariana Islands"",
            ""dial_code"": ""+1670"",
            ""code"": ""MP"",
            ""emoji"": ""🇲🇵""
      },
      {
            ""name"": ""Norway"",
            ""dial_code"": ""+47"",
            ""code"": ""NO"",
            ""emoji"": ""🇳🇴""
      },
      {
            ""name"": ""Oman"",
            ""dial_code"": ""+968"",
            ""code"": ""OM"",
            ""emoji"": ""🇴🇲""
      },
      {
            ""name"": ""Pakistan"",
            ""dial_code"": ""+92"",
            ""code"": ""PK"",
            ""emoji"": ""🇵🇰""
      },
      {
            ""name"": ""Palau"",
            ""dial_code"": ""+680"",
            ""code"": ""PW"",
            ""emoji"": ""🇵🇼""
      },
      {
            ""name"": ""Palestinian Territory, Occupied"",
            ""dial_code"": ""+970"",
            ""code"": ""PS"",
            ""emoji"": ""🇵🇸""
      },
      {
            ""name"": ""Panama"",
            ""dial_code"": ""+507"",
            ""code"": ""PA"",
            ""emoji"": ""🇵🇦""
      },
      {
            ""name"": ""Papua New Guinea"",
            ""dial_code"": ""+675"",
            ""code"": ""PG"",
            ""emoji"": ""🇵🇬""
      },
      {
            ""name"": ""Paraguay"",
            ""dial_code"": ""+595"",
            ""code"": ""PY"",
            ""emoji"": ""🇵🇾""
      },
      {
            ""name"": ""Peru"",
            ""dial_code"": ""+51"",
            ""code"": ""PE"",
            ""emoji"": ""🇵🇪""
      },
      {
            ""name"": ""Philippines"",
            ""dial_code"": ""+63"",
            ""code"": ""PH"",
            ""emoji"": ""🇵🇭""
      },
      {
            ""name"": ""Pitcairn"",
            ""dial_code"": ""+872"",
            ""code"": ""PN"",
            ""emoji"": ""🇵🇳""
      },
      {
            ""name"": ""Poland"",
            ""dial_code"": ""+48"",
            ""code"": ""PL"",
            ""emoji"": ""🇵🇱""
      },
      {
            ""name"": ""Portugal"",
            ""dial_code"": ""+351"",
            ""code"": ""PT"",
            ""emoji"": ""🇵🇹""
      },
      {
            ""name"": ""Puerto Rico"",
            ""dial_code"": ""+1939"",
            ""code"": ""PR"",
            ""emoji"": ""🇵🇷""
      },
      {
            ""name"": ""Qatar"",
            ""dial_code"": ""+974"",
            ""code"": ""QA"",
            ""emoji"": ""🇶🇦""
      },
      {
            ""name"": ""Romania"",
            ""dial_code"": ""+40"",
            ""code"": ""RO"",
            ""emoji"": ""🇷🇴""
      },
      {
            ""name"": ""Russia"",
            ""dial_code"": ""+7"",
            ""code"": ""RU"",
            ""emoji"": ""🇷🇺""
      },
      {
            ""name"": ""Rwanda"",
            ""dial_code"": ""+250"",
            ""code"": ""RW"",
            ""emoji"": ""🇷🇼""
      },
      {
            ""name"": ""Reunion"",
            ""dial_code"": ""+262"",
            ""code"": ""RE"",
            ""emoji"": ""🇷🇪""
      },
      {
            ""name"": ""Saint Barthelemy"",
            ""dial_code"": ""+590"",
            ""code"": ""BL"",
            ""emoji"": ""🇧🇱""
      },
      {
            ""name"": ""Saint Helena, Ascension and Tristan Da Cunha"",
            ""dial_code"": ""+290"",
            ""code"": ""SH"",
            ""emoji"": ""🇸🇭""
      },
      {
            ""name"": ""Saint Kitts and Nevis"",
            ""dial_code"": ""+1869"",
            ""code"": ""KN"",
            ""emoji"": ""🇰🇳""
      },
      {
            ""name"": ""Saint Lucia"",
            ""dial_code"": ""+1758"",
            ""code"": ""LC"",
            ""emoji"": ""🇱🇨""
      },
      {
            ""name"": ""Saint Martin"",
            ""dial_code"": ""+590"",
            ""code"": ""MF"",
            ""emoji"": ""🇲🇫""
      },
      {
            ""name"": ""Saint Pierre and Miquelon"",
            ""dial_code"": ""+508"",
            ""code"": ""PM"",
            ""emoji"": ""🇵🇲""
      },
      {
            ""name"": ""Saint Vincent and the Grenadines"",
            ""dial_code"": ""+1784"",
            ""code"": ""VC"",
            ""emoji"": ""🇻🇨""
      },
      {
            ""name"": ""Samoa"",
            ""dial_code"": ""+685"",
            ""code"": ""WS"",
            ""emoji"": ""🇼🇸""
      },
      {
            ""name"": ""San Marino"",
            ""dial_code"": ""+378"",
            ""code"": ""SM"",
            ""emoji"": ""🇸🇲""
      },
      {
            ""name"": ""Sao Tome and Principe"",
            ""dial_code"": ""+239"",
            ""code"": ""ST"",
            ""emoji"": ""🇸🇹""
      },
      {
            ""name"": ""Saudi Arabia"",
            ""dial_code"": ""+966"",
            ""code"": ""SA"",
            ""emoji"": ""🇸🇦""
      },
      {
            ""name"": ""Senegal"",
            ""dial_code"": ""+221"",
            ""code"": ""SN"",
            ""emoji"": ""🇸🇳""
      },
      {
            ""name"": ""Serbia"",
            ""dial_code"": ""+381"",
            ""code"": ""RS"",
            ""emoji"": ""🇷🇸""
      },
      {
            ""name"": ""Seychelles"",
            ""dial_code"": ""+248"",
            ""code"": ""SC"",
            ""emoji"": ""🇸🇨""
      },
      {
            ""name"": ""Sierra Leone"",
            ""dial_code"": ""+232"",
            ""code"": ""SL"",
            ""emoji"": ""🇸🇱""
      },
      {
            ""name"": ""Singapore"",
            ""dial_code"": ""+65"",
            ""code"": ""SG"",
            ""emoji"": ""🇸🇬""
      },
      {
            ""name"": ""Slovakia"",
            ""dial_code"": ""+421"",
            ""code"": ""SK"",
            ""emoji"": ""🇸🇰""
      },
      {
            ""name"": ""Slovenia"",
            ""dial_code"": ""+386"",
            ""code"": ""SI"",
            ""emoji"": ""🇸🇮""
      },
      {
            ""name"": ""Solomon Islands"",
            ""dial_code"": ""+677"",
            ""code"": ""SB"",
            ""emoji"": ""🇸🇧""
      },
      {
            ""name"": ""Somalia"",
            ""dial_code"": ""+252"",
            ""code"": ""SO"",
            ""emoji"": ""🇸🇴""
      },
      {
            ""name"": ""South Africa"",
            ""dial_code"": ""+27"",
            ""code"": ""ZA"",
            ""emoji"": ""🇿🇦""
      },
      {
            ""name"": ""South Sudan"",
            ""dial_code"": ""+211"",
            ""code"": ""SS"",
            ""emoji"": ""🇸🇸""
      },
      {
            ""name"": ""South Georgia and the South Sandwich Islands"",
            ""dial_code"": ""+500"",
            ""code"": ""GS"",
            ""emoji"": ""🇬🇸""
      },
      {
            ""name"": ""Spain"",
            ""dial_code"": ""+34"",
            ""code"": ""ES"",
            ""emoji"": ""🇪🇸""
      },
      {
            ""name"": ""Sri Lanka"",
            ""dial_code"": ""+94"",
            ""code"": ""LK"",
            ""emoji"": ""🇱🇰""
      },
      {
            ""name"": ""Sudan"",
            ""dial_code"": ""+249"",
            ""code"": ""SD"",
            ""emoji"": ""🇸🇩""
      },
      {
            ""name"": ""Suriname"",
            ""dial_code"": ""+597"",
            ""code"": ""SR"",
            ""emoji"": ""🇸🇷""
      },
      {
            ""name"": ""Svalbard and Jan Mayen"",
            ""dial_code"": ""+47"",
            ""code"": ""SJ"",
            ""emoji"": ""🇸🇯""
      },
      {
            ""name"": ""Swaziland"",
            ""dial_code"": ""+268"",
            ""code"": ""SZ"",
            ""emoji"": ""🇸🇿""
      },
      {
            ""name"": ""Sweden"",
            ""dial_code"": ""+46"",
            ""code"": ""SE"",
            ""emoji"": ""🇸🇪""
      },
      {
            ""name"": ""Switzerland"",
            ""dial_code"": ""+41"",
            ""code"": ""CH"",
            ""emoji"": ""🇨🇭""
      },
      {
            ""name"": ""Syrian Arab Republic"",
            ""dial_code"": ""+963"",
            ""code"": ""SY"",
            ""emoji"": ""🇸🇾""
      },
      {
            ""name"": ""Taiwan"",
            ""dial_code"": ""+886"",
            ""code"": ""TW"",
            ""emoji"": ""🇹🇼""
      },
      {
            ""name"": ""Tajikistan"",
            ""dial_code"": ""+992"",
            ""code"": ""TJ"",
            ""emoji"": ""🇹🇯""
      },
      {
            ""name"": ""Tanzania, United Republic of Tanzania"",
            ""dial_code"": ""+255"",
            ""code"": ""TZ"",
            ""emoji"": ""🇹🇿""
      },
      {
            ""name"": ""Thailand"",
            ""dial_code"": ""+66"",
            ""code"": ""TH"",
            ""emoji"": ""🇹🇭""
      },
      {
            ""name"": ""Timor-Leste"",
            ""dial_code"": ""+670"",
            ""code"": ""TL"",
            ""emoji"": ""🇹🇱""
      },
      {
            ""name"": ""Togo"",
            ""dial_code"": ""+228"",
            ""code"": ""TG"",
            ""emoji"": ""🇹🇬""
      },
      {
            ""name"": ""Tokelau"",
            ""dial_code"": ""+690"",
            ""code"": ""TK"",
            ""emoji"": ""🇹🇰""
      },
      {
            ""name"": ""Tonga"",
            ""dial_code"": ""+676"",
            ""code"": ""TO"",
            ""emoji"": ""🇹🇴""
      },
      {
            ""name"": ""Trinidad and Tobago"",
            ""dial_code"": ""+1868"",
            ""code"": ""TT"",
            ""emoji"": ""🇹🇹""
      },
      {
            ""name"": ""Tunisia"",
            ""dial_code"": ""+216"",
            ""code"": ""TN"",
            ""emoji"": ""🇹🇳""
      },
      {
            ""name"": ""Turkey"",
            ""dial_code"": ""+90"",
            ""code"": ""TR"",
            ""emoji"": ""🇹🇷""
      },
      {
            ""name"": ""Turkmenistan"",
            ""dial_code"": ""+993"",
            ""code"": ""TM"",
            ""emoji"": ""🇹🇲""
      },
      {
            ""name"": ""Turks and Caicos Islands"",
            ""dial_code"": ""+1649"",
            ""code"": ""TC"",
            ""emoji"": ""🇹🇨""
      },
      {
            ""name"": ""Tuvalu"",
            ""dial_code"": ""+688"",
            ""code"": ""TV"",
            ""emoji"": ""🇹🇻""
      },
      {
            ""name"": ""Uganda"",
            ""dial_code"": ""+256"",
            ""code"": ""UG"",
            ""emoji"": ""🇺🇬""
      },
      {
            ""name"": ""Ukraine"",
            ""dial_code"": ""+380"",
            ""code"": ""UA"",
            ""emoji"": ""🇺🇦""
      },
      {
            ""name"": ""United Arab Emirates"",
            ""dial_code"": ""+971"",
            ""code"": ""AE"",
            ""emoji"": ""🇦🇪""
      },
      {
            ""name"": ""United Kingdom"",
            ""dial_code"": ""+44"",
            ""code"": ""GB"",
            ""emoji"": ""🇬🇧""
      },
      {
            ""name"": ""United States"",
            ""dial_code"": ""+1"",
            ""code"": ""US"",
            ""emoji"": ""🇺🇸""
      },
      {
            ""name"": ""Uruguay"",
            ""dial_code"": ""+598"",
            ""code"": ""UY"",
            ""emoji"": ""🇺🇾""
      },
      {
            ""name"": ""Uzbekistan"",
            ""dial_code"": ""+998"",
            ""code"": ""UZ"",
            ""emoji"": ""🇺🇿""
      },
      {
            ""name"": ""Vanuatu"",
            ""dial_code"": ""+678"",
            ""code"": ""VU"",
            ""emoji"": ""🇻🇺""
      },
      {
            ""name"": ""Venezuela, Bolivarian Republic of Venezuela"",
            ""dial_code"": ""+58"",
            ""code"": ""VE"",
            ""emoji"": ""🇻🇪""
      },
      {
            ""name"": ""Vietnam"",
            ""dial_code"": ""+84"",
            ""code"": ""VN"",
            ""emoji"": ""🇻🇳""
      },
      {
            ""name"": ""Virgin Islands, British"",
            ""dial_code"": ""+1284"",
            ""code"": ""VG"",
            ""emoji"": ""🇻🇬""
      },
      {
            ""name"": ""Virgin Islands, U.S."",
            ""dial_code"": ""+1340"",
            ""code"": ""VI"",
            ""emoji"": ""🇻🇮""
      },
      {
            ""name"": ""Wallis and Futuna"",
            ""dial_code"": ""+681"",
            ""code"": ""WF"",
            ""emoji"": ""🇼🇫""
      },
      {
            ""name"": ""Yemen"",
            ""dial_code"": ""+967"",
            ""code"": ""YE"",
            ""emoji"": ""🇾🇪""
      },
      {
            ""name"": ""Zambia"",
            ""dial_code"": ""+260"",
            ""code"": ""ZM"",
            ""emoji"": ""🇿🇲""
      },
      {
            ""name"": ""Zimbabwe"",
            ""dial_code"": ""+263"",
            ""code"": ""ZW"",
            ""emoji"": ""🇿🇼""
      }
]"
DfDqnwap,HPro $33 Welcome Bonus | Hextra Prime,fxvnpro,PHP,Monday 26th of June 2023 06:50:16 AM CDT,https://www.fxvnpro.com/hpro-33-welcome-bonus-hextra-prime/
TG5zy8gz,Hextra Prime | HPro $33 Welcome Bonus,reviewbrokers,PHP,Monday 26th of June 2023 06:50:13 AM CDT,https://www.reviewbrokers.net/hextra-prime-hpro-33-welcome-bonus/
GSu3WUKf,stripe payment,shinhosuck1973,Python,Monday 26th of June 2023 06:46:54 AM CDT,"def payment_view(request, str):
    product_name = 'BCe-commerce.ph checkout'
    product_price = 0
    user = request.user
    orders = Order.objects.filter(user=user, ordered=False)
    if user.is_authenticated and orders.exists():
        amount_due = orders[0].get_amount_due()
        if amount_due:
           product_price = int(amount_due)*100
        base_endpoint = 'http://127.0.0.1:8000'
        success_url = f'{base_endpoint}/payment/successful/'
        cancel_url = f'{base_endpoint}/payment/stopped/'
        
        stripe_product_obj = stripe.Product.create(name=product_name)
        stripe_product_id = stripe_product_obj.id
        stripe_price_obj = stripe.Price.create(
            product = stripe_product_id,
            unit_amount = product_price,
            currency = 'usd',
        )

        stripe_price_id = stripe_price_obj.id
        checkout_session = stripe.checkout.Session.create(
            line_items=[
                {
                    'price': stripe_price_id,
                    'quantity': 1,
                },
            ],
            mode='payment',
            success_url= success_url,
            cancel_url= cancel_url,
        )
        return redirect(checkout_session.url)
    return redirect('products:home')"
jtN8Ab0T,Standard Bonus Account | Hextra Prime,fxvnpro,PHP,Monday 26th of June 2023 06:37:28 AM CDT,https://www.fxvnpro.com/standard-bonus-account-hextra-prime/
YE5yJBuz,Hextra Prime | Standard Bonus Account,reviewbrokers,PHP,Monday 26th of June 2023 06:33:42 AM CDT,https://www.reviewbrokers.net/hextra-prime-standard-bonus-account/
WG1TRSXw,Untitled,vpeter,Bash,Monday 26th of June 2023 06:29:28 AM CDT,"diff --git a/packages/homatics-dv-addon/source/addon.sh b/packages/homatics-dv-addon/source/addon.sh
new file mode 100644
index 0000000000..f860d41a10
--- /dev/null
+++ b/packages/homatics-dv-addon/source/addon.sh
@@ -0,0 +1,13 @@
+#!/bin/sh
+
+DOVI_KO_PATH=/android/odm/lib/modules/dovi.ko
+
+if [ -f ${DOVI_KO_PATH} ]; then
+	android_dovi_ko_version=$(modinfo ${DOVI_KO} | awk '/vermagic:/ {split($2, ver, ""-""); print ver[1]}')
+	echo ""${DOVI_KO_PATH} version: ${android_dovi_ko_version}""
+fi
+
+VIDEO_UCODE_BIN_PATH=/storage/.kodi/addons/firmware.homatics-dv-addon/linux-5.4.180/video_ucode.bin
+DOVI_KO_PATH=/storage/.kodi/addons/firmware.homatics-dv-addon/linux-5.4.180/dovi.ko
+
+exit 0
diff --git a/projects/Amlogic-ce/packages/linux-drivers/amlogic/opentee_linuxdriver/scripts/dovi-loader.sh b/projects/Amlogic-ce/packages/linux-drivers/amlogic/opentee_linuxdriver/scripts/dovi-loader.sh
index 7ecf091606..be007ec249 100755
--- a/projects/Amlogic-ce/packages/linux-drivers/amlogic/opentee_linuxdriver/scripts/dovi-loader.sh
+++ b/projects/Amlogic-ce/packages/linux-drivers/amlogic/opentee_linuxdriver/scripts/dovi-loader.sh
@@ -18,10 +18,20 @@ load_dovi_ne() {
 
   if [ -b /dev/mapper/dynpart-odm ]; then
     mountpoint -q /android/odm  || mount -o ro /dev/mapper/dynpart-odm /android/odm
-    DOVI_KO=""/android/odm/lib/modules/dovi.ko""
-    if [ -f ${DOVI_KO} ]; then
-      modinfo ${DOVI_KO}
-      insmod  ${DOVI_KO}
+
+    unset DOVI_KO_PATH
+    local homatics_dv_addon_script=/storage/.kodi/addons/firmware.homatics-dv-addon/addon.sh
+
+    if [ -f ${homatics_dv_addon_script} ]; then
+      # set VIDEO_UCODE_BIN_PATH and DOVI_KO_PATH
+      . ${homatics_dv_addon_script}
+    fi
+
+    [ -z ${DOVI_KO_PATH} ] && DOVI_KO_PATH=/android/odm/lib/modules/dovi.ko
+
+    if [ -f ${DOVI_KO_PATH} ]; then
+      modinfo ${DOVI_KO_PATH}
+      insmod  ${DOVI_KO_PATH}
       return
     fi
   fi
diff --git a/projects/Amlogic-ce/packages/linux-drivers/amlogic/opentee_linuxdriver/scripts/tee-loader.sh b/projects/Amlogic-ce/packages/linux-drivers/amlogic/opentee_linuxdriver/scripts/tee-loader.sh
index b350350801..2f0c873134 100755
--- a/projects/Amlogic-ce/packages/linux-drivers/amlogic/opentee_linuxdriver/scripts/tee-loader.sh
+++ b/projects/Amlogic-ce/packages/linux-drivers/amlogic/opentee_linuxdriver/scripts/tee-loader.sh
@@ -5,7 +5,6 @@
 # get coreelec release information
 source /etc/os-release
 
-VIDEO_UCODE_BIN_PATH=/lib/firmware/video/video_ucode.bin
 TEE_SUPPLICANT_PID_FILE=/var/run/tee-supplicant.pid
 
 message() {
@@ -49,6 +48,8 @@ run_tee_from_coreelec() {
   mkdir -p /var/lib
   ln -sfn /usr/lib/ta/${SOC} /var/lib/teetz
 
+  local VIDEO_UCODE_BIN_PATH=/lib/firmware/video/video_ucode.bin
+
   [ -f $(dirname ${VIDEO_UCODE_BIN_PATH})/${SOC}/video_ucode.bin ] && \
     ln -sfn ${SOC}/video_ucode.bin ${VIDEO_UCODE_BIN_PATH}
 
@@ -73,6 +74,7 @@ run_tee_from_android() {
   ! ls /dev/mapper/dynpart-* &>/dev/null && dmsetup create --concise ""$(parse-android-dynparts /dev/super)""
   mountpoint -q /android/system || mount -o ro /dev/mapper/dynpart-system${active_slot} /android/system
   mountpoint -q /android/vendor || mount -o ro /dev/mapper/dynpart-vendor${active_slot} /android/vendor
+  mountpoint -q /android/odm    || mount -o ro /dev/mapper/dynpart-odm /android/odm
 
   if [ ! -x /vendor/bin/tee-supplicant ]; then
     message ""tee-supplicant does not exist on android""
@@ -85,7 +87,18 @@ run_tee_from_android() {
   # wait for tee-supplicant process to start
   sleep 5
 
-  android_wrapper /vendor/bin/tee_preload_fw /vendor${VIDEO_UCODE_BIN_PATH}
+  unset VIDEO_UCODE_BIN_PATH
+  local homatics_dv_addon_script=/storage/.kodi/addons/firmware.homatics-dv-addon/addon.sh
+
+  if [ -f ${homatics_dv_addon_script} ]; then
+    # set VIDEO_UCODE_BIN_PATH and DOVI_KO_PATH
+    . ${homatics_dv_addon_script}
+  fi
+
+  [ -z ${VIDEO_UCODE_BIN_PATH} ] && VIDEO_UCODE_BIN_PATH=/vendor/lib/firmware/video/video_ucode.bin
+
+  android_wrapper /vendor/bin/tee_preload_fw ${VIDEO_UCODE_BIN_PATH}
+
   local rv=${?}
   message ""run tee from android end""
   return ${rv}
@@ -105,6 +118,7 @@ cleanup_tee() {
 
   mountpoint -q /android/system && umount /android/system
   mountpoint -q /android/vendor && umount /android/vendor
+  mountpoint -q /android/odm    && umount /android/odm
   ls /dev/mapper/dynpart-* &>/dev/null && dmsetup remove /dev/mapper/dynpart-*
 
   message ""cleanup tee end""
"
