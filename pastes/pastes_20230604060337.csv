id,title,username,language,date,content
1p0Y8cs0,LineOfSight,nailacrooc12,Java,Sunday 4th of June 2023 12:40:39 AM CDT,"import java.util.Scanner;

public class LineOfSight {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print(""Enter the number of elements: "");
        int numElements = scanner.nextInt();
        int[] heights = new int[numElements];

        System.out.println(""Enter the heights:"");
        for (int i = 0; i < numElements; i++) {
            heights[i] = scanner.nextInt();
        }

        int[] output = new int[numElements];
        output[0] = 0;

        for (int i = 1; i < numElements; i++) {
            int count = 1;
            for (int j = i - 1; j >= 0; j--) {
                if (heights[j] < heights[i]) {
                    count++;
                } else {
                    break;
                }
            }
            output[i] = count;
        }

        System.out.println(""Output:"");
        for (int i = 0; i < numElements; i++) {
            System.out.print(output[i] + "" "");
        }
    }
}
"
GxjNZHah,Equinox,junijwi,HTML,Sunday 4th of June 2023 12:32:28 AM CDT,"<!--------------------------------------------------------------------------------

EQUINOX profile by JUNI

Please edit the code with WYSIWYG turned off and Code Editor turned on.
I personally recommend editing the code in a code editor like Visual Studio Code
OR using the very handy live-preview website:
https://th.circlejourney.net/
You may alter/relocate/restyle coding credit, but please do not remove it.

You can CTRL+Replace these
Dark Grey Color: #343434
Gold Color: #B18B4D
Red Color: #820000

-------------------------------------------------------------------------------->

<div class=""container mx-auto p-0"" style=""font-family: Palatino Linotype; color: black; margin-top: 40px; max-width: 600px;"">
    <!-- Header -->
    <div class=""card rounded-0 p-md-4 p-2"" style=""background-color: #343434; background-image: url('https://f2.toyhou.se/file/f2-toyhou-se/images/38795138_znzseRagyqvrokZ.png?1629450779'); background-blend-mode: overlay; border-color: rgba(0,0,0,.2); border-top-left-radius: 15px; border-top-right-radius: 15px;"">
        <!-- Link buttons, you can remove this whole section if you don't want them -->
        <div class=""d-md-flex d-none"" style=""position: absolute; right: 10px; top: -20px;"">
<!-- link name -->
            <span data-toggle=""tooltip"" title=""LINK_NAME_1"">
<!-- link url -->
                <a class=""btn btn-default mx-2 border-0 justify-content-center"" href=""LINK_URL_1"" style=""border-radius: 50px; background-color: #B18B4D; color: white; height: 50px; width: 50px; overflow: hidden;"">
                <i class=""fas fa-plus fa-2x m-auto""></i>
                </a></span>
<!-- link name -->
            <span data-toggle=""tooltip"" title=""LINK_NAME_2"">
<!-- link url -->
                <a class=""btn btn-default mx-2 border-0 justify-content-center"" href=""LINK_URL_2"" style=""border-radius: 50px; background-color: #B18B4D; color: white; height: 50px; width: 50px; overflow: hidden;"">
                    <i class=""fas fa-users fa-2x m-auto""></i>
                </a></span>
<!-- link name -->
            <span data-toggle=""tooltip"" title=""LINK_NAME_3"">
<!-- link url -->
                <a class=""btn btn-default mx-2 border-0 justify-content-center"" href=""LINK_URL_3"" style=""border-radius: 50px; background-color: #B18B4D; color: white; height: 50px; width: 50px; overflow: hidden;"">
                    <i class=""fas fa-paint-brush fa-2x m-auto""></i>
                </a></span>
        </div>
        <!-- end of Link buttons, if you're removing them, remove above this line -->
        <div class=""text-white text-md-left text-center"" style=""letter-spacing: 1px;"">
<!-- name -->
            <p class=""font-weight-bold mb-0"" style=""font-size: 1.8rem;"">name SURNAME</p>
            <p>
<!-- misc info -->
                species | true neutral | zodiac
            </p>
        </div>
    </div>
    <div class=""card rounded-0 m-0 p-md-4 p-2"" style=""background-image: url('https://f2.toyhou.se/file/f2-toyhou-se/images/38827311_jS3w5QxxLnRxtBO.png?1629522396'); border: 1px solid rgba(0,0,0,.2);"">
        <div class=""card rounded-0 p-md-4 p-2"" style=""background-color: white; border-color: rgba(0,0,0,.2);"">
            <div class=""row"">
                <div class=""col-md col-6 order-0"">
                    <div class=""row"">
                        <div class=""col-md-auto col-12 font-weight-bold text-uppercase text-md-left text-center"" style=""color: #B18B4D;"">
                            Pronouns
                        </div>
                        <div class=""col-md col-12 text-md-right text-center"">
<!-- pronouns -->
                            -/-
                        </div>
                    </div>
                    <hr class=""my-2"" style=""background-color: rgba(0,0,0,.2);"">
                    <div class=""row"">
                        <div class=""col-md-auto col-12 font-weight-bold text-uppercase text-md-left text-center"" style=""color: #B18B4D;"">
                            Age
                        </div>
                        <div class=""col-md col-12 text-md-right text-center"">
<!-- age -->
                            00 yrs
                        </div>
                    </div>
                    <hr class=""my-2"" style=""background-color: rgba(0,0,0,.2);"">
                    <div class=""row"">
                        <div class=""col-md-auto col-12 font-weight-bold text-uppercase text-md-left text-center"" style=""color: #B18B4D;"">
                            Height
                        </div>
                        <div class=""col-md col-12 text-md-right text-center"">
<!-- height -->
                            0'00"" | 000.00 cm
                        </div>
                    </div>
                    <div class=""text-center mt-3 d-md-flex d-none"" style=""color: #8B8B8B;"">
<!-- quote -->
                        <p>""A quote from the character goes here.""</p>
                    </div>
                </div>
                <div class=""col-md col-6 order-md-2 order-1 mb-md-0 mb-3"">
<!-- character image
around 400x600 px -->
                    <img src=""https://f2.toyhou.se/file/f2-toyhou-se/images/38810282_RVLkjdxEU8fXsiu.png"" style=""position: absolute; bottom: -25px; right: 0px;"">
                </div>
            </div>
        </div>
        <div class=""accordion md-accordion"" id=""accordion"" role=""tablist"" aria-multiselectable=""true"">
            <div>
                <a class=""btn btn-default rounded-0 mt-2 px-md-4 px-2 py-2 text-md-left text-center font-weight-bold text-uppercase text-white w-100 text-wrap"" role=""tab"" id=""heading1"" data-toggle=""collapse"" data-parent=""#accordion"" href=""#accordion1"" aria-expanded=""false"" aria-controls=""accordion1"" style=""background-color: #820000; background-image: url('https://f2.toyhou.se/file/f2-toyhou-se/images/38795138_znzseRagyqvrokZ.png?1629450779'); background-blend-mode: overlay; border-color: rgba(0,0,0,.2); font-size: 1.8rem; letter-spacing: 1px;"">
                    Personality
                </a>
            </div>
            <div id=""accordion1"" class=""collapse"" role=""tabpanel"" aria-labelledby=""heading1"" data-parent=""#accordion"">
                <div class=""card rounded-0 p-md-4 p-2 my-2"" style=""background-color: white; border-color: rgba(0,0,0,.2);"">
                    <div class=""row mb-2"">
                        <div class=""col-md col-12 pr-md-0"">
                            <hr class=""my-2"" style=""background-color: rgba(0,0,0,.2);"">
                        </div>
<!-- personality traits -->
                        <div class=""col-md-auto col-12 px-2 text-uppercase text-center"">Trait - Trait - Trait - Trait</div>
                        <div class=""col-md col-12 pl-md-0"">
                            <hr class=""my-2"" style=""background-color: rgba(0,0,0,.2);"">
                        </div>
                    </div>
                    <div class=""text-justify p-3"" style=""border-radius: 15px; background-color: rgba(0,0,0,.1);"">
<!-- personality text -->
                        <p>
                            Some things you can write about in this section include their intelligence, strengths, weaknesses, adaptability, habits, temperament, morality, attitude, opinions, optimism, work ethic, values and beliefs, desires, coping mechanisms, or fears. You can also address how they treat strangers vs friends vs family, or what they prioritize in life, as well as their alignments (lawful / neutral / chaotic and good / neutral / evil).
                        </p>
<!-- end of personality text -->
                    </div>
                </div>
            </div>
            <div>
                <a class=""btn btn-default rounded-0 mt-2 px-md-4 px-2 py-2 text-md-left text-center font-weight-bold text-uppercase text-white w-100 text-wrap"" role=""tab"" id=""heading2"" data-toggle=""collapse"" data-parent=""#accordion"" href=""#accordion2"" aria-expanded=""false"" aria-controls=""accordion2"" style=""background-color: #820000; background-image: url('https://f2.toyhou.se/file/f2-toyhou-se/images/38795138_znzseRagyqvrokZ.png?1629450779'); background-blend-mode: overlay; border-color: rgba(0,0,0,.2); font-size: 1.8rem; letter-spacing: 1px;"">
                    Background
                </a>
            </div>
            <div id=""accordion2"" class=""collapse"" role=""tabpanel"" aria-labelledby=""heading2"" data-parent=""#accordion"">
                <div class=""card rounded-0 p-md-4 p-2 my-2"" style=""background-color: white; border-color: rgba(0,0,0,.2);"">
                    <div class=""row mb-2"">
                        <div class=""col-md col-12 pr-md-0"">
                            <hr class=""my-2"" style=""background-color: rgba(0,0,0,.2);"">
                        </div>
<!-- background section title -->
                        <div class=""col-md-auto col-12 px-2 text-uppercase text-center"">Childhood</div>
                        <div class=""col-md col-12 pl-md-0"">
                            <hr class=""my-2"" style=""background-color: rgba(0,0,0,.2);"">
                        </div>
                    </div>
                    <div class=""text-justify mb-3 p-3"" style=""border-radius: 15px; background-color: rgba(0,0,0,.1);"">
<!-- background section text -->
                        <p>
                            What circumstances were they born in? Who were their parents? Was their childhood comfortable or a struggle?
                        </p>
<!-- end of background text -->
                    </div>
                    <div class=""row mb-2"">
                        <div class=""col-md col-12 pr-md-0"">
                            <hr class=""my-2"" style=""background-color: rgba(0,0,0,.2);"">
                        </div>
<!-- background section title -->
                        <div class=""col-md-auto col-12 px-2 text-uppercase text-center"">Turning Point</div>
                        <div class=""col-md col-12 pl-md-0"">
                            <hr class=""my-2"" style=""background-color: rgba(0,0,0,.2);"">
                        </div>
                    </div>
                    <div class=""text-justify mb-3 p-3"" style=""border-radius: 15px; background-color: rgba(0,0,0,.1);"">
<!-- background section text -->
                        <p>
                            At what moment did your character enter their moment of agency in the story? This event should give them drive/motivation.
                        </p>
<!-- end of background text -->
                    </div>
                    <div class=""row mb-2"">
                        <div class=""col-md col-12 pr-md-0"">
                            <hr class=""my-2"" style=""background-color: rgba(0,0,0,.2);"">
                        </div>
<!-- background section title -->
                        <div class=""col-md-auto col-12 px-2 text-uppercase text-center"">Presently</div>
                        <div class=""col-md col-12 pl-md-0"">
                            <hr class=""my-2"" style=""background-color: rgba(0,0,0,.2);"">
                        </div>
                    </div>
                    <div class=""text-justify p-3"" style=""border-radius: 15px; background-color: rgba(0,0,0,.1);"">
<!-- background section text -->
                        <p>
                            What is your character's current job? What are their goals? What sort of places do they roam?
                        </p>
<!-- end of background text -->
                    </div>
                </div>
            </div>
            <div>
                <a class=""btn btn-default rounded-0 mt-2 px-md-4 px-2 py-2 text-md-left text-center font-weight-bold text-uppercase text-white w-100 text-wrap"" role=""tab"" id=""heading3"" data-toggle=""collapse"" data-parent=""#accordion"" href=""#accordion3"" aria-expanded=""false"" aria-controls=""accordion3"" style=""background-color: #820000; background-image: url('https://f2.toyhou.se/file/f2-toyhou-se/images/38795138_znzseRagyqvrokZ.png?1629450779'); background-blend-mode: overlay; border-color: rgba(0,0,0,.2); font-size: 1.8rem; letter-spacing: 1px;"">
                    Abilities
                </a>
            </div>
            <div id=""accordion3"" class=""collapse"" role=""tabpanel"" aria-labelledby=""heading3"" data-parent=""#accordion"">
                <div class=""card rounded-0 p-md-4 p-2 mt-2"" style=""background-color: white; border-color: rgba(0,0,0,.2);"">
                    <!-- weapon section, feel free to remove -->
                    <div class=""row mb-2"">
                        <div class=""col-md col-12 pr-md-0"">
                            <hr class=""my-2"" style=""background-color: rgba(0,0,0,.2);"">
                        </div>
                        <div class=""col-md-auto col-12 px-2 text-uppercase text-center"">Weapon</div>
                        <div class=""col-md col-12 pl-md-0"">
                            <hr class=""my-2"" style=""background-color: rgba(0,0,0,.2);"">
                        </div>
                    </div>
<!-- weapon image
around 400x250 px -->
                    <img class=""mx-auto my-4"" src=""https://f2.toyhou.se/file/f2-toyhou-se/images/38822932_NljTFPVuM597JBl.png"">
                    <div class=""text-justify mb-3 p-3"" style=""border-radius: 15px; background-color: rgba(0,0,0,.1);"">
<!-- weapon text -->
                        <p>
                            Describe your character's weapon in this paragraph here. You can include what alternatives they use, where they got it, how important (or unimportant) it is, and how they take care of it.
                        </p>
<!-- end of weapon text -->
                    </div>
                    <!-- end of weapon section -->

                    <!-- magic section -->
                    <div class=""row mb-2"">
                        <div class=""col-md col-12 pr-md-0"">
                            <hr class=""my-2"" style=""background-color: rgba(0,0,0,.2);"">
                        </div>
                        <div class=""col-md-auto col-12 px-2 text-uppercase text-center"">Magic</div>
                        <div class=""col-md col-12 pl-md-0"">
                            <hr class=""my-2"" style=""background-color: rgba(0,0,0,.2);"">
                        </div>
                    </div>
                    <div class=""row"">
                        <div class=""col-6 pr-md-2 pr-1 text-center"">
                            <div class=""p-2 font-weight-bold text-uppercase"" style=""border-radius: 15px; background-color: rgba(0,0,0,.1); color: #B18B4D;"">
<!-- LEFT element -->
                                Element
                            </div>
                        </div>
                        <div class=""col-6 pl-md-2 pl-1 text-center"">
                            <div class=""p-2 font-weight-bold text-uppercase"" style=""border-radius: 15px; background-color: rgba(0,0,0,.1); color: #B18B4D;"">
<!-- RIGHT element -->
                                Element
                            </div>
                        </div>
                    </div>
<!-- magic image, familiar, whatever! -->
                    <img class=""mx-auto my-4"" src=""https://f2.toyhou.se/file/f2-toyhou-se/images/44448586_XhIcZM3bbTjtVla.png"">
                    <div class=""text-justify mb-3 p-3"" style=""border-radius: 15px; background-color: rgba(0,0,0,.1);"">
<!-- magic text -->
                        <p>
                            Describe your character's magic. Where they got it from, how they use it, the limitations, power, and cost.
                        </p>
<!-- end of magic text -->
                    </div>
                    <!-- end of magic section -->
                    
                    <!-- abilities section -->
                    <div class=""row mb-2"">
                        <div class=""col-md col-12 pr-md-0"">
                            <hr class=""my-2"" style=""background-color: rgba(0,0,0,.2);"">
                        </div>
                        <div class=""col-md-auto col-12 px-2 text-uppercase text-center"">Abilities</div>
                        <div class=""col-md col-12 pl-md-0"">
                            <hr class=""my-2"" style=""background-color: rgba(0,0,0,.2);"">
                        </div>
                    </div>
                    <div class=""row"">
                        <div class=""col-md-6 col-12 pr-md-2"">
                            <div class=""text-justify mb-md-3 mb-2 p-3"" style=""border-radius: 15px; background-color: rgba(0,0,0,.1);"">
                                <div class=""row"">
                                    <div class=""col-md col-12 font-weight-bold text-uppercase text-md-left text-center"" style=""color: #B18B4D;"">
<!-- TOP LEFT move name -->
                                        Move
                                    </div>
                                    <div class=""col-md col-12 text-md-right text-center"">
                                        <!-- Points -->
                                        <i class=""fas fa-star""></i><i class=""far fa-star""></i><i class=""far fa-star""></i>
                                    </div>
                                </div>
                                <hr class=""my-2"" style=""background-color: rgba(0,0,0,.2);"">
<!-- TOP LEFT move text -->
                                <p>Describe how the move is used during a fight.</p>
<!-- end of move text-->
                            </div>
                        </div>
                        <div class=""col-md-6 col-12 pl-md-2"">
                            <div class=""text-justify mb-md-3 mb-2 p-3"" style=""border-radius: 15px; background-color: rgba(0,0,0,.1);"">
                                <div class=""row"">
                                    <div class=""col-md col-12 font-weight-bold text-uppercase text-md-left text-center"" style=""color: #B18B4D;"">
<!-- TOP RIGHT move name -->
                                        Move
                                    </div>
                                    <div class=""col-md col-12 text-md-right text-center"">
                                        <!-- Points -->
                                        <i class=""fas fa-star""></i><i class=""far fa-star""></i><i class=""far fa-star""></i>
                                    </div>
                                </div>
                                <hr class=""my-2"" style=""background-color: rgba(0,0,0,.2);"">
<!-- TOP RIGHT move text -->
                                <p>Describe how the move is used during a fight.</p>
<!-- end of move text-->
                            </div>
                        </div>
                        <div class=""col-md-6 col-12 pr-md-2"">
                            <div class=""text-justify mb-md-3 mb-2 p-3"" style=""border-radius: 15px; background-color: rgba(0,0,0,.1);"">
                                <div class=""row"">
                                    <div class=""col-md col-12 font-weight-bold text-uppercase text-md-left text-center"" style=""color: #B18B4D;"">
<!-- BOTTOM LEFT move name -->
                                        Move
                                    </div>
                                    <div class=""col-md col-12 text-md-right text-center"">
                                        <!-- Points -->
                                        <i class=""fas fa-star""></i><i class=""far fa-star""></i><i class=""far fa-star""></i>
                                    </div>
                                </div>
                                <hr class=""my-2"" style=""background-color: rgba(0,0,0,.2);"">
<!-- BOTTOM LEFT move text -->
                                <p>Describe how the move is used during a fight.</p>
<!-- end of move text -->
                            </div>
                        </div>
                        <div class=""col-md-6 col-12 pl-md-2"">
                            <div class=""text-justify mb-md-3 mb-2 p-3"" style=""border-radius: 15px; background-color: rgba(0,0,0,.1);"">
                                <div class=""row"">
                                    <div class=""col-md col-12 font-weight-bold text-uppercase text-md-left text-center"" style=""color: #B18B4D;"">
<!-- BOTTOM RIGHT move name -->
                                        Move
                                    </div>
                                    <div class=""col-md col-12 text-md-right text-center"">
                                        <!-- Points -->
                                        <i class=""fas fa-star""></i><i class=""far fa-star""></i><i class=""far fa-star""></i>
                                    </div>
                                </div>
                                <hr class=""my-2"" style=""background-color: rgba(0,0,0,.2);"">
<!-- BOTTOM RIGHT move text -->
                                <p>Describe how the move is used during a fight.</p>
<!-- end of move text-->
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- Footer -->
    <div style=""min-height: 170px;"">
        <div class=""card rounded-0"" style=""background-color: #D2B98C; background-image: url('https://f2.toyhou.se/file/f2-toyhou-se/images/38795138_znzseRagyqvrokZ.png?1629450779'); background-blend-mode: overlay; border-color: rgba(0,0,0,.2); border-bottom-left-radius: 15px; border-bottom-right-radius: 15px; height: 50px;"">
            <div class=""m-auto"" style=""position: relative; top: 10px;"">
                <img src=""https://f2.toyhou.se/file/f2-toyhou-se/images/38817940_HXoRMIKmuktqy29.png"">
            </div>
        </div>
        <div style=""position: absolute; right: 10px;"">
            <a class=""text-muted"" href=""https://toyhou.se/junijwi"" data-toggle=""tooltip"" data-placement=""bottom"" title=""Code""><i class=""fa-solid fa-code""></i></a>
        </div>
    </div>
</div>"
eT7veUiB,Untitled,andrei24,JavaScript,Sunday 4th of June 2023 12:18:34 AM CDT,"<script type=""text/javascript"">
  const eventSource = new EventSource('/sse');
  eventSource.onmessage = ({ data }) => {
    const message = document.createElement('li');
    message.innerText = 'New message: ' + data;
    document.body.appendChild(message);
  }
</script>"
W1uLFtvc,Untitled,35657,C++,Saturday 3rd of June 2023 11:41:54 PM CDT,"#include <iostream>

using namespace std;

class Rational {
public:
    Rational() : numerator_(0), denominator_(1) {}

    explicit Rational(int value) : numerator_(value), denominator_(1) {}

    Rational(int numerator, int denominator) : numerator_(numerator), denominator_(denominator) {
        Reduction();
    }

    Rational& Addition(const Rational& right) {
        numerator_ = numerator_ * right.denominator_ + right.numerator_ * denominator_;
        denominator_ = denominator_ * right.denominator_;
        Reduction();
        return *this;
    }

    Rational& operator=(const Rational& right) {
        numerator_ = right.numerator_;
        denominator_ = right.denominator_;
        Reduction();
        return *this;
    }


    Rational& operator+=(const Rational& right) {
        numerator_ = numerator_ * right.denominator_ + right.numerator_ * denominator_;
        denominator_ = denominator_ * right.denominator_;
        Reduction();
        return *this;
    }

    Rational& operator-=(const Rational& right) {
        numerator_ = numerator_ * right.denominator_ - right.numerator_ * denominator_;
        denominator_ = denominator_ * right.denominator_;
        Reduction();
        return *this;
    }

    Rational& operator*=(const Rational& right) {
        numerator_ = numerator_ * right.numerator_;
        denominator_ = denominator_ * right.denominator_;
        Reduction();
        return *this;
    }

    Rational& operator/=(const Rational& right) {
        numerator_ = numerator_ * right.denominator_;
        denominator_ = denominator_ * right.numerator_;
        Reduction();
        return *this;
    }

    Rational operator-() {
        return Rational{ -numerator_, denominator_ };
    }

    int Numerator() const {
        return numerator_;
    }

    int Denominator() const {
        return denominator_;
    }



private:
    void Reduction() {
        if (denominator_ < 0) {
            numerator_ = -numerator_;
            denominator_ = -denominator_;
        }
        int x = numerator_ < 0 ? -numerator_ : numerator_;
        int y = denominator_ < 0 ? -denominator_ : denominator_;
        while (x != y) {
            if (x > y) {
                x = x - y;
            }
            else {
                y = y - x;
            }
        }
        numerator_ /= x;
        denominator_ /= x;
    }
    int numerator_;
    int denominator_;
};

Rational& operator+(const Rational& left, const Rational& right) {
    Rational temp = left;
    return temp += right;
}

Rational& operator+(const Rational& left, const int value) {
    Rational temp = left;
    return temp += Rational(value);
}

Rational& operator+(const int value, const Rational& right) {
    Rational temp = right;
    return temp += Rational(value);
}

Rational& operator-(const Rational& left, const Rational& right) {
    Rational temp = left;
    return temp -= right;
}

bool operator==(const Rational& left, const Rational& right) {
    return left.Numerator() == right.Numerator() && left.Denominator() == right.Denominator();
}

bool operator!=(const Rational& left, const Rational& right) {
    return !(left == right);
}

bool operator>(const Rational& left, const Rational& right) {
    return left.Numerator() * right.Denominator() > right.Numerator() * left.Denominator();
}

bool operator<(const Rational& left, const Rational& right) {
    return left.Numerator() * right.Denominator() < right.Numerator() * left.Denominator();
}

bool operator>=(const Rational& left, const Rational& right) {
    return left.Numerator() * right.Denominator() >= right.Numerator() * left.Denominator();
}

bool operator<=(const Rational& left, const Rational& right) {
    return left.Numerator() * right.Denominator() <= right.Numerator() * left.Denominator();
}

Rational& operator*(const Rational& left, const Rational& right) {
    Rational temp = left;
    return temp *= right;
}

Rational& operator/(const Rational& left, const Rational& right) {
    Rational temp = left;
    return temp /= right;
}

ostream& operator<<(ostream& output, const Rational& rational) {
    return output << rational.Numerator() << ""/"" << rational.Denominator();
}

istream& operator>>(istream& input, Rational& rational) {
    int numerator, denominator;
    char slash;
    input >> numerator >> slash >> denominator;
    if (slash == '/') {
        rational = Rational{ numerator, denominator };
    }
    return input;
}


int main() {

    Rational r1(1, 2);
    Rational r2(3, 4);

    r1 += r2;
    cout << r1 << endl;

    r1 -= r2;
    cout << r1 << endl;

    r1 *= r2;
    cout << r1 << endl;

    r1 /= r2;
    cout << r1 << endl;

    Rational r3 = r1 + r2;
    cout << r3 << endl;
    r3 = r1 - r2;
    cout << r3 << endl;
    r3 = r1 * r2;
    cout << r3 << endl;
    r3 = r1 / r2;
    cout << r3 << endl;

    cout << boolalpha;

    cout << (r1 == r2) << endl;

    cout << (r1 != r2) << endl;

    cout << (r1 > r2) << endl;

    cout << (r1 < r2) << endl;

    cout << (r1 >= r2) << endl;

    cout << (r1 <= r2) << endl;

    Rational r5 = 3 + r1;
    cout << r5 << endl;
   
}


// Особенности выбора варианта перегрузки:

// 1) четыре оператора =, ->, [], () только как метод класса

// 2) если левый операнд не экземпляр класса - перегружаем только как внешнюю функцию

// в остальном - на ваше усмотрение"
TVbTXggL,HUE2HEX,baennjer,JavaScript,Saturday 3rd of June 2023 11:38:31 PM CDT,"//In den 4 Arrays werden die DPs der HUE und der VIS eingetragen.
//Bitte auf richtige Reihenfolge und Syntax achten
//Hier die HUE DPs für R eintragen
var idR = [
    '0_userdata.0.0_ScriptDPs.hue2hex.1.r'/*r*/,
    '0_userdata.0.0_ScriptDPs.hue2hex.2.r'/*r2*/,
    '0_userdata.0.0_ScriptDPs.hue2hex.3.r'/*r3*/
    ];
//Hier die HUE DPs für G eintragen
var idG = [
    '0_userdata.0.0_ScriptDPs.hue2hex.1.g'/*g*/,
    '0_userdata.0.0_ScriptDPs.hue2hex.2.g'/*g2*/,
    '0_userdata.0.0_ScriptDPs.hue2hex.3.g'/*g3*/
    ];
//Hier die HUE DPs für B eintragen
var idB = [
    '0_userdata.0.0_ScriptDPs.hue2hex.1.b'/*b*/,
    '0_userdata.0.0_ScriptDPs.hue2hex.2.b'/*b2*/,
    '0_userdata.0.0_ScriptDPs.hue2hex.3.b'/*b3*/
    ];
//Hier die VIS DPs eintragen
var idVis = [
    '0_userdata.0.0_ScriptDPs.hue2hex.vis'/*vis*/,
    '0_userdata.0.0_ScriptDPs.hue2hex.vis2'/*vis2*/,
    '0_userdata.0.0_ScriptDPs.hue2hex.vis3'/*vis3*/
    ];
var r, g, b;
var ta = [idR,idG,idB];

on({id:ta},function(){
    for(let i = 0; i < idR.length; i++){
        r=toHex(getState(idR[i]).val);
        g=toHex(getState(idG[i]).val);
        b=toHex(getState(idB[i]).val);
        // log('#'+r+g+b);
        setState(idVis[i], ('#'+r+g+b));
    }
})

function toHex(number){
    if(number<0) number = 0xFFFFFFFF + number + 1;
    var n = number.toString(16).toUpperCase();
    if(n.length == 1){
        n = '0' + n;
    }
    return n;
}






"
hVEZ9kPv,Trans Flag,_Pandora,CSS,Saturday 3rd of June 2023 10:49:31 PM CDT,"/* TRANS */

#lion_image>div>img:first-child {
content: url('https://images.squarespace-cdn.com/content/v1/54e5003ce4b09eaf2d726614/1617041869825-MMEC438VDCSCJ475ATJN/trans-flag.png')!important;
transform: scaleX(1)!important;
width: 240px!important;
height: 200px!important;
 
}"
KHQwJ4Qv,Pan Flag,_Pandora,CSS,Saturday 3rd of June 2023 10:48:57 PM CDT,"/* PAN */

#lion_image>div>img:first-child {
content: url('https://upload.wikimedia.org/wikipedia/commons/thumb/a/a2/Pansexuality_Pride_Flag.svg/640px-Pansexuality_Pride_Flag.svg.png')!important;
transform: scaleX(1)!important;
width: 240px!important;
height: 200px!important;
 
}"
0fH5QfAA,Bi Flag,_Pandora,CSS,Saturday 3rd of June 2023 10:48:27 PM CDT,"/* BI */

#lion_image>div>img:first-child {
content: url('https://upload.wikimedia.org/wikipedia/commons/thumb/2/2a/Bisexual_Pride_Flag.svg/1200px-Bisexual_Pride_Flag.svg.png')!important;
transform: scaleX(1)!important;
width: 240px!important;
height: 200px!important;
 
}"
jRYW11a9,Lesbian Flag,_Pandora,CSS,Saturday 3rd of June 2023 10:47:18 PM CDT,"/* LESBIAN */

#lion_image>div>img:first-child {
content: url('https://media.istockphoto.com/id/1370181615/vector/orange-pink-lesbian-flag-derived-from-the-pink-flag-circulated-on-social-media-in-2018.jpg?s=612x612&w=0&k=20&c=liCXqV_IVLpupYBnWvdrKIbz4ofoxVO0Y_hs6Xr7xLU=')!important;
transform: scaleX(1)!important;
width: 240px!important;
height: 200px!important;
 
}"
kKZU48Ud,to mp4,Sakitoshi,Batch,Saturday 3rd of June 2023 10:33:10 PM CDT,"@echo off
setlocal EnableDelayedExpansion
if not exist ""%~dp0ffmpeg.exe"" (
    echo Error: ffmpeg.exe not found.
    echo Put ffmpeg.exe alongside this file.
    pause
    goto :eof
)
if ""%~1""=="""" (
    echo Drag a video or gif file into this file.
    pause
    goto :eof
)
if not ""%~2""=="""" (
    echo Please drag only one file at a time.
    pause
    goto :eof
)
:set_quality
echo Video file: ""%~n1%~x1""
set /p quality=""Select quality GOD (7), Ultra (6), Very High (5), High (4), Mid-high (3.5), Medium (3), Mid-low (2.8), Low-mid (2.5), Low (2), Very Low (1), gif (g), apng (p) or 0 to exit: ""
if not defined quality (
    cls
    echo Please enter a valid value.
    goto :set_quality
)
if ""%quality%""==""0"" (
    goto :eof
)
if /I ""%quality%""==""g"" (
    goto :set_size
)
if /I ""%quality%""==""p"" (
    goto :set_size
)
if ""%quality%""==""1"" (
    set crf=""22""
    set abr=""512K""
    goto :set_size
)
if ""%quality%""==""2"" (
    set crf=""20""
    set abr=""1M""
    goto :set_size
)
if ""%quality%""==""2.5"" (
    set crf=""19""
    set abr=""1.5M""
    goto :set_size
)
if ""%quality%""==""2.8"" (
    set crf=""18""
    set abr=""1.75M""
    goto :set_size
)
if ""%quality%""==""3"" (
    set crf=""18""
    set abr=""2M""
    goto :set_size
)
if ""%quality%""==""3.5"" (
    set crf=""17""
    set abr=""3M""
    goto :set_size
)
if ""%quality%""==""4"" (
    set crf=""16""
    set abr=""4M""
    goto :set_size
)
if ""%quality%""==""5"" (
    set crf=""14""
    set abr=""6M""
    goto :set_size
)
if ""%quality%""==""6"" (
    set crf=""12""
    set abr=""8M""
    goto :set_size
)
if ""%quality%""==""7"" (
    set crf=""10""
    set abr=""10M""
    goto :set_size
)
if defined quality (
    echo Please enter a valid value.
    goto :set_quality
)
:set_size
set /p size=""Resize video? 1080p (6), 720p (5), 540p (4), 480p (3), 360p (2), 240p (1), custom size (0) or not (N): ""
if not defined size (
    goto :set_cut
)
if /I ""%size%""==""n"" (
    goto :set_cut
)
if ""%size%""==""0"" (
    goto :set_custom_size
)
if ""%size%""==""1"" (
    set scale=scale=-2:240:flags=lanczos
    goto :set_cut
)
if ""%size%""==""2"" (
    set scale=scale=-2:360:flags=lanczos
    goto :set_cut
)
if ""%size%""==""3"" (
    set scale=scale=-2:480:flags=lanczos
    goto :set_cut
)
if ""%size%""==""4"" (
    set scale=scale=-2:540:flags=lanczos
    goto :set_cut
)
if ""%size%""==""5"" (
    set scale=scale=-2:720:flags=lanczos
    goto :set_cut
)
if ""%size%""==""6"" (
    set scale=scale=-2:1080:flags=lanczos
    goto :set_cut
)
if defined size (
    echo Please enter a valid value.
    goto :set_size
)
:set_custom_size
set /p custom_width=""Enter width: ""
if not defined custom_width (
    set custom_width=-2
)
set /p custom_height=""Enter height: ""
if not defined custom_height (
    set custom_height=-2
)
set scale=scale=%custom_width%:%custom_height%:flags=lanczos,setsar=1/1
:set_cut
if defined scale (
    if /I not ""%quality%""==""g"" (
        set scale=-vf %scale%
    )
    if /I ""%quality%""==""g"" (
        set scale=,%scale%
    )
)
if /I ""%~x1""=="".gif"" (
    set gif=true
)
if /I ""%~x1""=="".png"" (
    set gif=true
)
if /I ""%~x1""=="".apng"" (
    set gif=true
)
if ""%gif%""==""true"" (
    goto :set_crop
)
set /p cut=""Cut video? (y/N): ""
if not defined cut (
    goto :set_crop
)
if /I ""%cut%""==""n"" (
    goto :set_crop
)
if /I ""%cut%""==""y"" (
    goto :set_start_time
)
if defined cut (
    goto :set_cut
)
:set_start_time
set /p start_time=""Starting time (hh:mm:ss.sss): ""
if not defined start_time (
    goto :set_end_time
)
if defined start_time (
    set ss=-ss %start_time%
)
:set_end_time
set /p end_time=""Ending time (hh:mm:ss.sss): ""
if not defined end_time (
    goto :set_crop
)
if defined end_time (
    set to=-to %end_time%
)
:set_crop
set /p crop=""Crop video? (y/N): ""
if not defined crop (
    goto :set_fps
)
if /I ""%crop%""==""n"" (
    goto :set_fps
)
if /I ""%crop%""==""y"" (
    goto :set_crop_pos
)
if defined crop (
    goto :set_crop
)
:set_crop_pos
set /p start_pos=""Starting position coordenates (x:y): ""
if not defined start_pos (
    goto :set_crop_pos
)
:set_crop_area
set /p crop_area=""Crop area size (w:h): ""
if not defined crop_area (
    goto :set_crop_area
)
set crop=-filter:v crop=%crop_area%:%start_pos%
:set_fps
if /I ""%quality%""==""g"" (
    goto :create_webm
)
if ""%gif%""==""true"" (
    goto :create_webm
)
set /p fps=""Framerate (default=original framerate): ""
if defined fps (
    set fps=-r %fps% -vsync cfr
)
:create_webm
if not exist %~dp0output (
    mkdir %~dp0output
)
if ""%quality%""==""p"" (
    ren ""%~dp0output\%~n1.png"" ""%~n1.apng""
    ""%~dp0ffmpeg.exe"" -i ""%~1"" %scale% %fps% %ss% %to% ""%~dp0output\%~n1.apng""
    ren ""%~dp0output\%~n1.apng"" ""%~n1.png""
    goto :eof
)
if ""%gif%""==""true"" (
    ""%~dp0ffmpeg.exe"" -i ""%~1"" -c:v libx264 -crf %crf% -b:v %abr% -y ""%~dp0output\temp.mp4""
    ""%~dp0ffmpeg.exe"" -i ""%~dp0output\temp.mp4"" -c:v libx264 -crf %crf% -b:v %abr% %scale% %crop% -an -sn ""%~dp0output\%~n1.webm""
    erase /Q ""%~dp0output\temp.mp4""
    goto :eof
)
if ""%quality%""==""g"" (
    set /p fps=""Framerate (default=30): ""
    if not defined fps (
        set fps=30
    )
    ""%~dp0ffmpeg.exe"" -i ""%~1"" -vf palettegen -r !fps! %ss% %to% -y ""%~dp0output\palette.png""
    ""%~dp0ffmpeg.exe"" -i ""%~1"" -i ""%~dp0output\palette.png"" -lavfi paletteuse=dither=bayer:bayer_scale=2%scale% -r !fps! %ss% %to% ""%~dp0output\%~n1.gif""
    erase /Q ""%~dp0output\palette.png""
    goto :eof
)
""%~dp0ffmpeg.exe"" -i ""%~1"" -c:v libx264 -crf %crf% -b:v %abr% %scale% %crop% -an -sn %fps% %ss% %to% ""%~dp0output\%~n1.mp4"""
bDFHCaP2,testUser,nonvpn,JSON,Saturday 3rd of June 2023 10:28:51 PM CDT,"[{""server"":""aa_vip_01"",""ais"":19,""dtac"":284,""true"":196,""total"":499},{""server"":""aa_vip_02"",""ais"":3,""dtac"":258,""true"":215,""total"":476},{""server"":""aa_vip_03"",""ais"":2,""dtac"":217,""true"":208,""total"":427},{""server"":""aa_vip_04"",""ais"":1,""dtac"":202,""true"":189,""total"":392},{""server"":""aa_vip_05"",""ais"":0,""dtac"":136,""true"":137,""total"":273},{""server"":""aa_vip_06"",""ais"":2,""dtac"":104,""true"":113,""total"":219},{""server"":""aa_vip_07"",""ais"":1,""dtac"":122,""true"":95,""total"":218},{""server"":""aa_vip_08"",""ais"":0,""dtac"":73,""true"":70,""total"":143},{""server"":""aa_vip_09"",""ais"":0,""dtac"":68,""true"":83,""total"":151},{""server"":""aa_vip_10"",""ais"":2,""dtac"":101,""true"":78,""total"":300}]"
Jg7dWDeG,thelcss,s4turns,CSS,Saturday 3rd of June 2023 10:01:50 PM CDT,".previous-source !important{
line-height: 1.1;
}
body { 
  font-family: monospace; 
  line-height: inherit;
  line-height: initial;
  line-height: unset;
}
#form,
.messages .msg,
.userlist {
    font-size: 14px;
    line-height: 1.1;
}
#chat .time,
#chat .from,
#chat .content {
	padding-top: 0px;
	padding-bottom: 0px;
}
#chat .self .content {
	color: grey;
}"
GMXXRduy,Trove makecode,Mr_trove,Python,Saturday 3rd of June 2023 09:59:01 PM CDT,"NAME AND AGE

basic.show_string(""name:nawaf age:16"")"
Qg11jZv5,Trove makecode,Mr_trove,Python,Saturday 3rd of June 2023 09:54:33 PM CDT,"RAINFALL

def on_forever():
    rain = game.create_sprite(randint(0, 4), 0)
    for i in range(4):
        rain.change(LedSpriteProperty.Y, 1)
        basic.pause(200)
    rain.delete()
basic.forever(on_forever)

PLAYER : 
player = game.create_sprite(4, 2)

def on_button_pressed_a():
    player.move(-1)
input.on_button_pressed(Button.A, on_button_pressed_a)

def on_button_pressed_b():
    player.move(1)
input.on_button_pressed(Button.B, on_button_pressed_b)


A IS GREATER THAN B OR ELSE:
a = 100
b = 20
if a > b:
    basic.show_string(""a is greater than b"")

else:
    basic.show_string(""b is greater or equal to a"")

"
424PLtd7,Valkyrian Computers Tracking System,RedbanditDEV,Lua,Saturday 3rd of June 2023 09:20:45 PM CDT,"local radar = peripheral.wrap(""left"")
local localShip = peripheral.wrap(""right"")
local monitor = peripheral.wrap(""top"")
local pretty = require ""cc.pretty""

function dump(o)
    if type(o) == 'table' then
        local s = '{ '
        for k,v in pairs(o) do
            if type(k) ~= 'number' then k = '""'..k..'""' end
            s = s .. '['..k..'] = ' .. dump(v) .. ','
        end
        return s .. '} '
    else
        return tostring(o)
    end
end

term.redirect(monitor)
term.setPaletteColor(colors.white, 1,1,1)
term.setBackgroundColor(colors.white)
term.clear()
monitor.setTextScale(0.5)

while true do
    local scan = radar.scan(256)[1]
    
    term.setBackgroundColor(colors.white)
    term.clear()
    local x,z = monitor.getSize()
    local xMiddle = x/2
    local zMiddle = z/2
    paintutils.drawPixel(xMiddle,zMiddle,colors.blue)
    
    local currentPos = localShip.getWorldspacePosition()
    local currentRot = localShip.getRotation()
	
    for i, ship in ipairs(scan) do
        local xOffset = currentPos['x'] - ship['position']['x']
        local zOffset = currentPos['z'] - ship['position']['z']
        x2 = xOffset*math.cos(currentRot['roll']) + zOffset*math.sin(currentRot['roll']);
        z2 = zOffset*math.cos(currentRot['roll']) - xOffset*math.sin(currentRot['roll']);
        
        local drawX = xMiddle + x2
        local drawZ = zMiddle + z2
        paintutils.drawPixel(drawX, drawZ, colors.blue)
        local textLen = string.len(ship['mass'])
        local textStart = drawX - textLen/2
        term.setCursorPos(textStart, drawZ-1)
        term.write(ship['mass'])
    end
    os.sleep(0.05)
end
"
RNWZHXjj,profile code,actuallysera,HTML,Saturday 3rd of June 2023 08:27:02 PM CDT,"<!-- 08 || SIMPLY SERENE (USER) by icecreampizzer
    CHARACTER VERSION IS FOUND HERE: https://pastebin.com/ypMKGs0G
    
        RULES:
            - Don't remove my credit please!
            - Feel free to modify/frankenstein as much as you want!
            - Don't redistribute my codes please!
            
        COLOR GUIDE:
            #E0AFA0
            #ECD7D0
            #F8F4EB
            #BCB8B1
            #8A817C
            #1D1A19
            text-secondary - accents
        
            find (ctrl + f) URLHERE for links, IMG for image addresses      
            -->
            
<!-- WHOLE thing -->
<div class=""container p-0 mt-4"" style=""max-width: 700px; letter-spacing: 0.2px"">
    
    <div class=""row no-gutters"">
        
        <!-- side image -->
        <div class=""card col-md-4 push-md-8 border-0 rounded-0"" style=""background:url(https://cdn.discordapp.com/attachments/921913156555665418/1062582570656727070/image.png) center; background-size: cover; background-repeat: no-repeat; min-height: 300px;"">
            
            <!-- image credit -->
            <div class=""mt-auto text-right p-2"">
                <a class=""bg-faded px-2 mx-1 rounded"" href=""https://toyhou.se/seikkio"" data-toggle=""tooltip"" data-placement=""top"" title=""Seikkio"" style=""font-size: 1.5rem;"">
                    <i class=""fas fa-image""></i>
                </a>
            </div>
            
        </div>
        
        <!-- color palette - feel free to add/remove colors/social media! remove <a> to </a> if you want to keep the color but not the link.
            for dark colors: change to text-light. for light colors, change to text-dark
            change the TITLE to change the hover title/tooltip for each link! -->
        <div class=""card col-md-1 push-md-3 border-0 rounded-0"">
            <div class=""row no-gutters h-100"">
                
                <div class=""card border-0 rounded-0 col-md col p-3 text-center"" style=""background:#E0AFA0;"">
                    <a class=""my-auto text-light"" href=""https://serariina.carrd.co/"" data-toggle=""tooltip"" data-placement=""top"" title=""carrd"">
                        <i class=""far fa-id-card fa-lg""></i>
                    </a>
                </div>
                
                <div class=""card border-0 rounded-0 col-md col p-3 text-center"" style=""background:#ECD7D0;"">
                    <a class=""my-auto text-light"" href=""https://twitter.com/serariinaa"" data-toggle=""tooltip"" data-placement=""top"" title=""twitter"">
                        <i class=""fab fa-twitter fa-lg""></i>
                    </a>
                </div>
                
                <div class=""card border-0 rounded-0 col-md col p-3 text-center"" style=""background:#F8F4EB;"">
                    <a class=""my-auto text-light"" href=""https://www.instagram.com/serariina/"" data-toggle=""tooltip"" data-placement=""top"" title=""instagram"">
                        <i class=""fab fa-instagram fa-lg""></i>
                    </a>
                </div>
                
                <div class=""card border-0 rounded-0 col-md col p-3 text-center"" style=""background:#BCB8B1;"">
                    <a class=""my-auto text-light"" href=""URLHERE"" data-toggle=""tooltip"" data-placement=""top"" title=""deviantart"">
                        <i class=""fab fa-deviantart fa-lg""></i>
                    </a>
                </div>
                
                <div class=""card border-0 rounded-0 col-md col p-3 text-center"" style=""background:#8A817C;"">
                    <a class=""my-auto text-light"" href=""https://cuboid-harmony-7ce.notion.site/Sera-s-Cafe-62d2a7b629fe469d9ac02f602483405e"" data-toggle=""tooltip"" data-placement=""top"" title=""commission Info"">
                        <i class=""fa-solid fa-flower""></i>
                    </a>
                </div>
                
                <div class=""card border-0 rounded-0 col-md col p-3 text-center"" style=""background:#1D1A19;"">
                    <a class=""my-auto text-dark"" href=""URLHERE"" data-toggle=""tooltip"" data-placement=""top"" title=""artfight"">
                        <i class=""fas fa-paint-brush fa-lg""></i>
                    </a>
                </div>
                
            </div>
        </div>
        <!-- end color palette -->
        
        <!-- main text content -->
        <div class=""card col-md pull-md-5 border-0 rounded-0"" style=""text-align: justify;"">
            
            <!-- title - for the icon, find your pick at https://fontawesome.com ! replace fas fa-leaf with the icon of your choice. -->
            <div class=""text-md-right text-center text-secondary px-3 pb-3 mx-3 mt-2 mb-3"" style=""border-bottom: 1px solid"">
                <p class=""mb-0"" style=""color:; font-size: 2.3rem; font-weight: 100;""><i class=""fa-light fa-message-heart""></i> Sera</p>
                <p class="""" style=""color:; font-size: 1.2rem; font-weight: 100;"">She.They / Artist / Dreamer</p>
            </div>
            <!-- end title -->
            
            <!-- scrolling text content - if you don't like the scrolling, delete the HEIGHT and OVERFLOW in the line below. the palette and image will expand with the text! --> 
            <div class=""px-3 mx-1"" style=""height: 350px; overflow: auto;"">
                
                <p><span class=""px-3""></span>Feel free to PM me!!</p>
                
                <p><span class=""px-3""></span>Artist who likes drawing, playing games, and sleeping a lot y-y</p>
                
                <p class=""mb-2 text-secondary text-center"" style=""font-size: 1.5rem; font-weight: 100;""><i class=""fas fa-info fa-sm px-1""></i> NOTICE</p>
                <ul style=""margin-left: -20px;"">
                    <li>You can PM me on any platform for things like commissions, trades etc!! I will see it faster on twitter/instagram though,</li>
                    <li>Commissions - Open</li>
                </ul>
            </div>
        </div>
        <!-- end main text content -->
        
        <!-- featured characters -->
        <div class=""card col-md-12 mt-3 border-0 rounded-0"">
            
            <div class=""row no-gutters"">
                
                <div class=""card border-0 rounded-0 my-2 col"">
                    <div class=""card rounded-0 border-0 mx-auto"" style=""background:url(https://cdn.discordapp.com/attachments/703275965064937493/1064062870700171284/image.png) center; background-size:cover; background-repeat: no-repeat; height: 150px; width: 150px;"">
                        <div class=""h-100 card card-outline-primary btn btn-outline-primary rounded-0 border-0 text-right p-1"">
                            <a class=""mt-auto stretched-link text-white"" href=""https://toyhou.se/7474880.-s--"" style=""font-size: 1rem;"">
                                ✧ Sera
                            </a>
                        </div>
                    </div>
                </div>
                
                
                <div class=""card border-0 rounded-0 my-2 col"">
                    <div class=""card rounded-0 border-0 mx-auto"" style=""background:url(https://cdn.discordapp.com/attachments/703275965064937493/1064418637164838912/ezgif.com-gif-maker.gif) center; background-size:cover; background-repeat: no-repeat; height: 150px; width: 150px;"">
                        <div class=""h-100 card card-outline-primary btn btn-outline-primary rounded-0 border-0 text-right p-1"">
                            <a class=""mt-auto stretched-link text-white"" href=""https://toyhou.se/19712729.-j--x---"" style=""font-size: 1rem;"">
                                ✧ Jin Xing||金星
                            </a>
                        </div>
                    </div>
                </div>
                
                <!-- mobile break - don't remove this please! If you want more featured characters, copy paste this little bit for every two characters! -->
                <div class=""hidden-md-up w-100""></div>
                
                
                <div class=""card border-0 rounded-0 my-2 col"">
                    <div class=""card rounded-0 border-0 mx-auto"" style=""background:url(https://cdn.discordapp.com/attachments/703275965064937493/1064062004240842762/image.png) center; background-size:cover; background-repeat: no-repeat; height: 150px; width: 150px;"">
                        <div class=""h-100 card card-outline-primary btn btn-outline-primary rounded-0 border-0 text-right p-1"">
                            <a class=""mt-auto stretched-link text-white"" href=""https://toyhou.se/11283371.-y--t---"" style=""font-size: 1rem;"">
                                ✧ YingTai||英台
                            </a>
                        </div>
                    </div>
                </div>
                
                
                <div class=""card border-0 rounded-0 my-2 col"">
                    <div class=""card rounded-0 border-0 mx-auto"" style=""background:url(https://cdn.discordapp.com/attachments/703275965064937493/1064061639860682863/image.png) center; background-size:cover; background-repeat: no-repeat; height: 150px; width: 150px;"">
                        <div class=""h-100 card card-outline-primary btn btn-outline-primary rounded-0 border-0 text-right p-1"">
                            <a class=""mt-auto stretched-link text-white"" href=""https://toyhou.se/19595338.-es-"" style=""font-size: 1rem;"">
                                ✧ Estelle
                            </a>
                        </div>
                    </div>
                </div>
                
                
            </div>
        </div>
    </div>
    
    <!-- credits! please dont remove <3 -->
    <p class=""text-secondary text-right mt-2"" style=""font-size: 0.7rem;"">code by <a href=""https://toyhou.se/icecreampizzer"">icecreampizzer</a></p>
</div>"
cqLJA5M6,Trabalhando com ponteiros para alocação dinâmica de matrizes - Vetor de ponteiros de linhas separada,wagner-cipriano,C,Saturday 3rd of June 2023 08:09:31 PM CDT,"/*
Trabalhando com ponteiros para alocação ou declaração dinâmica de matrizes
Método 2: Vetor de ponteiros de linhas separadas (2d)
*/

#include <stdio.h>
#include <stdlib.h>

void leMatriz(float **mat, int m, int n);
void imprimeMatriz(float **mat, int m, int n);

int main() {
  int m, n;
  printf(""Matrizes com ponteiros duplos:\n  Ler e imprimir Matriz\n\nInforme a qtde de linhas e colunas da Matriz: "");
  scanf(""%d %d"", &m, &n);

  float **mat;

  // aloca um vetor de m ponteiros para linhas
  mat = malloc (m * sizeof(int*));

  // aloca cada uma das linhas (vetores de n floats)
  for(int i=0; i<m; i++)
     mat[i] = malloc (n * sizeof(float));

  printf(""\nPreencha os dados da matriz: \n"");
  leMatriz(mat, m, n);

  printf(""\n\nDados da matriz: \n"");
  imprimeMatriz(mat, m, n);

  free(mat);
  return 0;
}

void leMatriz(float **mat, int m, int n) {
  for(int i=0; i<m; i++)
    for(int j=0; j<n; j++) {
      printf(""  m[%d][%d]: "", i, j);
      scanf(""%f"", &mat[i][j]);
    }
}

void imprimeMatriz(float **mat, int m, int n) {
  for(int i=0; i<m; i++) {
    for(int j=0; j<n; j++)
      printf(""  %.2f"", mat[i][j]);
    printf(""\n"");
  }
  printf(""\n"");
}




/*
Exemplos de entradas:
2 3  11 12 13  21 22 23
4 4  11 12 13 14   21 22 23 24  31 32 33 34    41 42 43 44
7 2  11 12  21 22  31 32  41 42  51 52  61 62  71 72
2 9  11 12 13 14 15 16 17 18 19  21 22 23 24 25 26 27 28 29
*/
"
yaBiwmMB,Trabalhando com ponteiros para alocação dinâmica de matrizes - Método 1: Alocação única (Linear),wagner-cipriano,C,Saturday 3rd of June 2023 08:07:01 PM CDT,"/*
Trabalhando com ponteiros para alocação ou declaração dinâmica de matrizes
Método 1: Alocação única (Linear)
*/
#include <stdio.h>

void leMatriz(int *mat, int m, int n);
void imprimeMatriz(int *mat, int m, int n);
void imprimeMatriz_v2(int *mat, int m, int n);

int main() {
  int m, n;
  printf(""Matriz com ponteiros:\n  Ler e imprimir Matriz\n\nInforme a qtde de linhas e colunas da Matriz: "");
  scanf(""%d %d"", &m, &n);
  //Declarar matriz
  int mat[m][n];

  printf(""\nPreencha os dados da matriz: \n"");
  leMatriz(mat, m, n);

  printf(""\n\nDados da matriz usando funcao v1: \n"");
  imprimeMatriz(mat, m, n);

  printf(""Dados da matriz usando funcao v2: \n"");
  imprimeMatriz_v2(mat, m, n);

  return 0;
}

void leMatriz(int *mat, int m, int n) {
  int idx = 0;
  for(int i=0; i<m; i++) {
    for(int j=0; j<n; j++) {
      printf(""  m[%d][%d]: "", i, j);
      scanf(""%d"", &mat[idx]);
      idx++;
    }
  }
}

void imprimeMatriz(int *mat, int m, int n) {
    for(int idx=0; idx<m*n; idx++) {
        printf(""  %d"", mat[idx]);
        //Sempre que acabar uma linha, fazemos o endl
        if((idx+1) % n == 0)
            printf(""\n"");
    }
    printf(""\n"");
}

void imprimeMatriz_v2(int *mat, int m, int n) {
    for(int i=0; i<m; i++) {
      for(int j=0; j<n; j++) {
        printf(""  %d"", mat[i*n + j]);
        //Sempre que acabar uma linha, fazemos o endl
        if((i*n + j+1) % n == 0)
            printf(""\n"");
      }
    }
    printf(""\n"");
}


/*
Exemplos de entradas:
2 3  11 12 13  21 22 23
4 4  11 12 13 14   21 22 23 24  31 32 33 34    41 42 43 44
7 2  11 12  21 22  31 32  41 42  51 52  61 62  71 72
2 9  11 12 13 14 15 16 17 18 19  21 22 23 24 25 26 27 28 29
*/
"
jc4xzXK8,Ecuaciones cuadráticas. Simple. Python,JPablos,Python,Saturday 3rd of June 2023 08:06:02 PM CDT,"# -*- coding: utf-8 -*-
""""""
Created on Sun Jun  4 00:20:01 2023

Resuelve una ecuación cuadrática de la forma ax^2 + bx + c = 0.
Usa tkinter para generar una interfaz gráfica

@alpha
""""""


import tkinter as tk
from math import sqrt


class Ecuaciones2GradoGUI:

    def __init__(self):
        """"""
        Resuelve una ecuación cuadrática de la forma ax^2 + bx + c = 0.

        Args:
            coeficiente_a (float): Coeficiente cuadrático.
            coeficiente_b (float): Coeficiente lineal.
            coeficiente_c (float): Término independiente.

        Returns:
            tuple or complex: Soluciones de la ecuación.
        """"""
        self.root = tk.Tk()
        self.root.title(""Calculadora de Ecuaciones de Segundo Grado"")

        self.label_a = tk.Label(self.root, text=""Coeficiente cuadrático (A):"")
        self.label_a.pack()
        self.entry_a = tk.Entry(self.root)
        self.entry_a.pack()

        self.label_b = tk.Label(self.root, text=""Coeficiente lineal (B):"")
        self.label_b.pack()
        self.entry_b = tk.Entry(self.root)
        self.entry_b.pack()

        self.label_c = tk.Label(self.root, text=""Término independiente (C):"")
        self.label_c.pack()
        self.entry_c = tk.Entry(self.root)
        self.entry_c.pack()

        self.button_calcular = tk.Button(
            self.root, text=""Calcular"", command=self.calcular_ecuacion)
        self.button_calcular.pack()

        self.button_limpiar = tk.Button(
            self.root, text=""Limpiar Campos"", command=self.limpiar_campos)
        self.button_limpiar.pack()

        self.textarea_resultado = tk.Text(self.root, height=10, width=80)
        self.textarea_resultado.insert(
            tk.END, ""Resuelve una ecuación cuadrática de la forma ax^2 + bx + c = 0"")
        self.textarea_resultado.pack()

        self.root.mainloop()

    def calcular_ecuacion(self):
        """"""
        Resuelve una ecuación cuadrática de la forma ax^2 + bx + c = 0.

        Args:
            coeficiente_a (float): Coeficiente cuadrático.
            coeficiente_b (float): Coeficiente lineal.
            coeficiente_c (float): Término independiente.

        Returns:
            tuple or complex: Soluciones de la ecuación.
        """"""
        A = float(self.entry_a.get())
        B = float(self.entry_b.get())
        C = float(self.entry_c.get())

        resultado = self.resolver_ecuacion_cuadratica(A, B, C)
        self.mostrar_resultado(resultado)

    def resolver_ecuacion_cuadratica(self, A, B, C):
        """"""
        Resuelve una ecuación cuadrática de la forma ax^2 + bx + c = 0.

        Args:
            coeficiente_a (float): Coeficiente cuadrático.
            coeficiente_b (float): Coeficiente lineal.
            coeficiente_c (float): Término independiente.

        Returns:
            tuple or complex: Soluciones de la ecuación.
        """"""
        if A == 0:
            return self.ecuacion_lineal(B, C)
        else:
            discriminante = B**2 - 4*A*C
            if discriminante < 0:
                return self.solucion_compleja(A, B, C)
            else:
                x1 = (-B + sqrt(discriminante)) / (2*A)
                x2 = (-B - sqrt(discriminante)) / (2*A)
                return f""Las soluciones de la ecuación son:\nx1 = {x1}\nx2 = {x2}""

    def ecuacion_lineal(self, B, C):
        """"""
        Resuelve una ecuación cuadrática de la forma ax^2 + bx + c = 0.

        Informa sí la ecuación es una recta.

        Returns:
            tuple or complex: Soluciones de la ecuación.
        """"""
        if B == 0:
            return ""La ecuación es una recta con pendiente cero: x puede tomar cualquier valor.""
        else:
            x = -C / B
            return f""La solución de la ecuación es x = {x}""

    def solucion_compleja(self, A, B, C):
        """"""
        Resuelve una ecuación cuadrática de la forma ax^2 + bx + c = 0.

        Genera un texto indicando que las soluciones son números complejos

        Returns:
            tuple or complex: Soluciones de la ecuación.
        """"""
        parte_real = -B / (2*A)
        parte_imaginaria = sqrt(-((B**2) - (4*A*C))) / (2*A)
        raiz1 = complex(parte_real, parte_imaginaria)
        raiz2 = complex(parte_real, -parte_imaginaria)
        return f""Las soluciones de la ecuación son números complejos:\nx1 = {raiz1}\nx2 = {raiz2}""

    def mostrar_resultado(self, resultado):
        """"""
        Resuelve una ecuación cuadrática de la forma ax^2 + bx + c = 0.

        Muestra resultados en área de texto

        Returns:
            tuple or complex: Soluciones de la ecuación.
        """"""
        self.textarea_resultado.delete(""1.0"", tk.END)
        self.textarea_resultado.insert(tk.END, resultado)

    def limpiar_campos(self):
        """"""
        Resuelve una ecuación cuadrática de la forma ax^2 + bx + c = 0.

        Limpia las cajas de ingreso de coeficientes.

        Returns:
            tuple or complex: Soluciones de la ecuación.
        """"""
        self.entry_a.delete(0, tk.END)
        self.entry_b.delete(0, tk.END)
        self.entry_c.delete(0, tk.END)


Ecuaciones2GradoGUI()
"
MX8072h3,webinar-for-loops-2023-05-03,jspill,Python,Saturday 3rd of June 2023 07:38:55 PM CDT,"# 2023 June 3
# WEBINAR: For Loops

# We use loops to repeat actions

# a WHILE loop... is an IF that repeats as long as the loop condition remains True

# FOR LOOPS are used for repeating actions for every element in a container (list, str, tuples, sets, dictionary, range objects)

# Basic syntax of a for loop
# for ___ in _someContainer_:

# list
myList = [""Agent Scully"", ""Agent Mulder"", ""Walter Skinner"", ""CSM"", ""Mr. X""]
for item in myList:
    print(item) # print(item, end=""\n"")

# tuples
myTuple = (""Gilligan"", ""Castaway002"", ""red"", ""crew"")
for item in myTuple:
    print(item)

# strings
myString = ""It was the best of times.""
# for char in myString:
#     print(char)


# print(char)
# print(char, end=""\n"")
for char in myString:
    #print(char) # print(char, end=""\n"")
    print(char, end=""->"")
print() # I add this!
print(""I wish this was on a clean new line by itself."")

# Ch 2.9 and Lab 2.12

# dictionaries
# myDict = {""key"": ""value""}
#
# for key in myDict: # loop var in dict for loop holds the KEY
#     myDict[key] # retrieves value for that key
#     myDict[key] = value # assign a (new) value to key
bestOfXF = {
    ""1x00"": ""Pilot"",
    ""2x10"": ""Red Museum"",
    ""2x14"": ""Die Hand Die Verletzt"",
    ""3x04"": ""Clyde Bruckman's Final Repose"",
    ""3x12"": ""War of the Coprophages"",
    ""3x20"": ""Jose Chung's From Outer Space"",
    ""4x05"": ""The Field Where I Died"",
    ""5x05"": ""The Post Modern Prometheus"",
    ""5x17"": ""All Souls""
}
for key in bestOfXF:
    # ""Check out Episode ___ or '___'""
    print(""Check out Episode {} or '{}'"".format(key, bestOfXF[key])) # value is bestOfXF[key]... myList[0]

# help(str.format)

# range objects... to just to do something X number of times
for num in range(0, 5): # [0, 1, 2, 3, 4]
    print(num)

myList = [""Agent Scully"", ""Agent Mulder"", ""Walter Skinner"", ""CSM"", ""Mr. X""]
# if I need to know the index, then
# for item in myList: # doesn't help!
for i in range(0, len(myList)):
    print(""{}: {}"".format(i, myList[i]))

# could also use ENUMERATE
for i, item in enumerate(myList):
    print(""{} - {}"".format(i, item))

for i in range(0, len(myList)):
    if i < len(myList) - 1:
        print(""{} vs "".format(myList[i]), end="""")
    else: # must be the last one!
        print(myList[i])

print(""I wish this was on a clean new line by itself."")

print("" vs "".join(myList))


"
nRNnbFzE,Nigerian scammers [3-6-3/2023],bombaires,HTML,Saturday 3rd of June 2023 07:23:58 PM CDT,"<a href=""mailto:anskantwbk@gmail.com"">anskantwbk@gmail.com</a>
<a href=""mailto:a.n.sk.ant.w.bk@gmail.com"">a.n.sk.ant.w.bk@gmail.com</a>
<a href=""mailto:a.ns.kan.twbk@gmail.com"">a.ns.kan.twbk@gmail.com</a>
<a href=""mailto:ans.k.antw.bk@gmail.com"">ans.k.antw.bk@gmail.com</a>
<a href=""mailto:ans.k.a.nt.w.bk@gmail.com"">ans.k.a.nt.w.bk@gmail.com</a>
<a href=""mailto:a.n.skantwb.k@gmail.com"">a.n.skantwb.k@gmail.com</a>
<a href=""mailto:anska.ntw.b.k@gmail.com"">anska.ntw.b.k@gmail.com</a>
<a href=""mailto:a.nsk.a.nt.w.b.k@gmail.com"">a.nsk.a.nt.w.b.k@gmail.com</a>
<a href=""mailto:a.ns.k.a.ntw.bk@gmail.com"">a.ns.k.a.ntw.bk@gmail.com</a>
<a href=""mailto:a.ns.ka.ntw.bk@gmail.com"">a.ns.ka.ntw.bk@gmail.com</a>
<a href=""mailto:a.nsk.an.t.w.b.k@gmail.com"">a.nsk.an.t.w.b.k@gmail.com</a>
<a href=""mailto:an.sk.an.twbk@gmail.com"">an.sk.an.twbk@gmail.com</a>
<a href=""mailto:a.n.ska.ntwb.k@gmail.com"">a.n.ska.ntwb.k@gmail.com</a>
<a href=""mailto:ans.k.a.n.twb.k@gmail.com"">ans.k.a.n.twb.k@gmail.com</a>
<a href=""mailto:a.n.sk.an.tw.b.k@gmail.com"">a.n.sk.an.tw.b.k@gmail.com</a>
<a href=""mailto:anska.ntwbk@gmail.com"">anska.ntwbk@gmail.com</a>
<a href=""mailto:a.n.ska.n.tw.b.k@gmail.com"">a.n.ska.n.tw.b.k@gmail.com</a>
<a href=""mailto:an.s.kan.twbk@gmail.com"">an.s.kan.twbk@gmail.com</a>
<a href=""mailto:an.sk.an.t.w.b.k@gmail.com"">an.sk.an.t.w.b.k@gmail.com</a>
<a href=""mailto:a.ns.k.a.n.t.wb.k@gmail.com"">a.ns.k.a.n.t.wb.k@gmail.com</a>
<a href=""mailto:ans.kan.tw.b.k@gmail.com"">ans.kan.tw.b.k@gmail.com</a>
<a href=""mailto:a.nsk.a.n.twb.k@gmail.com"">a.nsk.a.n.twb.k@gmail.com</a>
<a href=""mailto:an.sk.antw.b.k@gmail.com"">an.sk.antw.b.k@gmail.com</a>
<a href=""mailto:anska.n.twbk@gmail.com"">anska.n.twbk@gmail.com</a>
<a href=""mailto:an.sk.a.ntw.bk@gmail.com"">an.sk.a.ntw.bk@gmail.com</a>
<a href=""mailto:an.sk.a.n.t.w.bk@gmail.com"">an.sk.a.n.t.w.bk@gmail.com</a>
<a href=""mailto:a.ns.ka.n.t.w.b.k@gmail.com"">a.ns.ka.n.t.w.b.k@gmail.com</a>
<a href=""mailto:a.n.skan.t.w.bk@gmail.com"">a.n.skan.t.w.bk@gmail.com</a>
<a href=""mailto:ansk.antw.bk@gmail.com"">ansk.antw.bk@gmail.com</a>
<a href=""mailto:an.s.ka.ntw.bk@gmail.com"">an.s.ka.ntw.bk@gmail.com</a>
<a href=""mailto:ansk.ant.w.b.k@gmail.com"">ansk.ant.w.b.k@gmail.com</a>
<a href=""mailto:ans.kan.t.wbk@gmail.com"">ans.kan.t.wbk@gmail.com</a>
<a href=""mailto:a.n.s.k.a.n.t.wb.k@gmail.com"">a.n.s.k.a.n.t.wb.k@gmail.com</a>
<a href=""mailto:an.s.k.a.nt.w.bk@gmail.com"">an.s.k.a.nt.w.bk@gmail.com</a>
<a href=""mailto:an.ska.ntwb.k@gmail.com"">an.ska.ntwb.k@gmail.com</a>
<a href=""mailto:a.n.s.ka.n.t.wbk@gmail.com"">a.n.s.ka.n.t.wbk@gmail.com</a>
<a href=""mailto:a.n.skan.tw.bk@gmail.com"">a.n.skan.tw.bk@gmail.com</a>
<a href=""mailto:a.nskant.w.b.k@gmail.com"">a.nskant.w.b.k@gmail.com</a>
<a href=""mailto:ansk.a.n.twb.k@gmail.com"">ansk.a.n.twb.k@gmail.com</a>
<a href=""mailto:a.n.skant.wbk@gmail.com"">a.n.skant.wbk@gmail.com</a>
<a href=""mailto:a.n.skan.t.wb.k@gmail.com"">a.n.skan.t.wb.k@gmail.com</a>
<a href=""mailto:a.n.s.ka.n.tw.b.k@gmail.com"">a.n.s.ka.n.tw.b.k@gmail.com</a>
<a href=""mailto:ans.k.a.ntwb.k@gmail.com"">ans.k.a.ntwb.k@gmail.com</a>
<a href=""mailto:a.n.sk.an.t.w.b.k@gmail.com"">a.n.sk.an.t.w.b.k@gmail.com</a>
<a href=""mailto:a.nska.nt.w.bk@gmail.com"">a.nska.nt.w.bk@gmail.com</a>
<a href=""mailto:a.n.sk.a.n.twbk@gmail.com"">a.n.sk.a.n.twbk@gmail.com</a>
<a href=""mailto:anskan.twb.k@gmail.com"">anskan.twb.k@gmail.com</a>
<a href=""mailto:an.skant.wbk@gmail.com"">an.skant.wbk@gmail.com</a>
<a href=""mailto:an.s.k.a.nt.wb.k@gmail.com"">an.s.k.a.nt.wb.k@gmail.com</a>
<a href=""mailto:ans.kant.w.b.k@gmail.com"">ans.kant.w.b.k@gmail.com</a>
<a href=""mailto:a.n.s.k.a.nt.w.b.k@gmail.com"">a.n.s.k.a.nt.w.b.k@gmail.com</a>
<a href=""mailto:an.skan.t.wbk@gmail.com"">an.skan.t.wbk@gmail.com</a>
<a href=""mailto:ans.k.an.t.w.b.k@gmail.com"">ans.k.an.t.w.b.k@gmail.com</a>
<a href=""mailto:an.s.kant.wbk@gmail.com"">an.s.kant.wbk@gmail.com</a>
<a href=""mailto:a.ns.k.ant.w.b.k@gmail.com"">a.ns.k.ant.w.b.k@gmail.com</a>
<a href=""mailto:a.n.sk.a.ntwbk@gmail.com"">a.n.sk.a.ntwbk@gmail.com</a>
<a href=""mailto:a.ns.ka.nt.wbk@gmail.com"">a.ns.ka.nt.wbk@gmail.com</a>
<a href=""mailto:a.n.s.kan.t.wb.k@gmail.com"">a.n.s.kan.t.wb.k@gmail.com</a>
<a href=""mailto:a.n.s.kantwb.k@gmail.com"">a.n.s.kantwb.k@gmail.com</a>
<a href=""mailto:a.n.sk.a.nt.wbk@gmail.com"">a.n.sk.a.nt.wbk@gmail.com</a>
<a href=""mailto:an.s.k.a.n.twb.k@gmail.com"">an.s.k.a.n.twb.k@gmail.com</a>
<a href=""mailto:ansk.a.nt.w.b.k@gmail.com"">ansk.a.nt.w.b.k@gmail.com</a>
<a href=""mailto:a.nskan.t.wbk@gmail.com"">a.nskan.t.wbk@gmail.com</a>
<a href=""mailto:ansk.an.twbk@gmail.com"">ansk.an.twbk@gmail.com</a>
<a href=""mailto:an.s.k.an.t.wbk@gmail.com"">an.s.k.an.t.wbk@gmail.com</a>
<a href=""mailto:a.ns.kan.tw.bk@gmail.com"">a.ns.kan.tw.bk@gmail.com</a>
<a href=""mailto:a.ns.kan.t.wb.k@gmail.com"">a.ns.kan.t.wb.k@gmail.com</a>
<a href=""mailto:a.nsk.a.nt.w.bk@gmail.com"">a.nsk.a.nt.w.bk@gmail.com</a>
<a href=""mailto:a.n.s.kantw.bk@gmail.com"">a.n.s.kantw.bk@gmail.com</a>
<a href=""mailto:an.sk.a.n.twb.k@gmail.com"">an.sk.a.n.twb.k@gmail.com</a>
<a href=""mailto:a.nskant.wb.k@gmail.com"">a.nskant.wb.k@gmail.com</a>
<a href=""mailto:a.nsk.a.n.t.w.b.k@gmail.com"">a.nsk.a.n.t.w.b.k@gmail.com</a>
<a href=""mailto:ansk.a.n.t.w.bk@gmail.com"">ansk.a.n.t.w.bk@gmail.com</a>
<a href=""mailto:anska.ntw.bk@gmail.com"">anska.ntw.bk@gmail.com</a>
<a href=""mailto:a.n.skant.w.bk@gmail.com"">a.n.skant.w.bk@gmail.com</a>
<a href=""mailto:a.ns.k.a.ntwbk@gmail.com"">a.ns.k.a.ntwbk@gmail.com</a>
<a href=""mailto:an.s.k.antwb.k@gmail.com"">an.s.k.antwb.k@gmail.com</a>
<a href=""mailto:an.s.k.a.n.twbk@gmail.com"">an.s.k.a.n.twbk@gmail.com</a>
<a href=""mailto:an.s.k.an.t.w.b.k@gmail.com"">an.s.k.an.t.w.b.k@gmail.com</a>
<a href=""mailto:a.n.ska.ntw.bk@gmail.com"">a.n.ska.ntw.bk@gmail.com</a>
<a href=""mailto:an.s.k.a.ntwb.k@gmail.com"">an.s.k.a.ntwb.k@gmail.com</a>
<a href=""mailto:a.n.s.k.ant.wb.k@gmail.com"">a.n.s.k.ant.wb.k@gmail.com</a>
<a href=""mailto:a.n.sk.an.twbk@gmail.com"">a.n.sk.an.twbk@gmail.com</a>
<a href=""mailto:a.nsk.a.ntw.bk@gmail.com"">a.nsk.a.ntw.bk@gmail.com</a>
<a href=""mailto:a.ns.k.a.n.tw.b.k@gmail.com"">a.ns.k.a.n.tw.b.k@gmail.com</a>
<a href=""mailto:an.skant.w.bk@gmail.com"">an.skant.w.bk@gmail.com</a>
<a href=""mailto:a.ns.kan.t.w.b.k@gmail.com"">a.ns.kan.t.w.b.k@gmail.com</a>
<a href=""mailto:a.n.s.ka.nt.w.b.k@gmail.com"">a.n.s.ka.nt.w.b.k@gmail.com</a>
<a href=""mailto:ans.kant.w.bk@gmail.com"">ans.kant.w.bk@gmail.com</a>
<a href=""mailto:a.ns.ka.n.t.wbk@gmail.com"">a.ns.ka.n.t.wbk@gmail.com</a>
<a href=""mailto:ans.kan.twb.k@gmail.com"">ans.kan.twb.k@gmail.com</a>
<a href=""mailto:an.skan.tw.bk@gmail.com"">an.skan.tw.bk@gmail.com</a>
<a href=""mailto:a.n.s.k.a.nt.wbk@gmail.com"">a.n.s.k.a.nt.wbk@gmail.com</a>
<a href=""mailto:a.nsk.a.n.twbk@gmail.com"">a.nsk.a.n.twbk@gmail.com</a>
<a href=""mailto:a.n.sk.an.t.w.bk@gmail.com"">a.n.sk.an.t.w.bk@gmail.com</a>
<a href=""mailto:ansk.an.t.wbk@gmail.com"">ansk.an.t.wbk@gmail.com</a>
<a href=""mailto:ansk.ant.wbk@gmail.com"">ansk.ant.wbk@gmail.com</a>
<a href=""mailto:a.n.s.ka.ntwb.k@gmail.com"">a.n.s.ka.ntwb.k@gmail.com</a>
<a href=""mailto:a.nsk.an.tw.b.k@gmail.com"">a.nsk.an.tw.b.k@gmail.com</a>
<a href=""mailto:a.nsk.ant.wb.k@gmail.com"">a.nsk.ant.wb.k@gmail.com</a>
<a href=""mailto:a.n.s.ka.ntw.bk@gmail.com"">a.n.s.ka.ntw.bk@gmail.com</a>
<a href=""mailto:a.n.s.ka.nt.wb.k@gmail.com"">a.n.s.ka.nt.wb.k@gmail.com</a>
<a href=""mailto:a.nska.n.t.wb.k@gmail.com"">a.nska.n.t.wb.k@gmail.com</a>
<a href=""mailto:ans.kantwb.k@gmail.com"">ans.kantwb.k@gmail.com</a>
<a href=""mailto:a.n.ska.n.t.wbk@gmail.com"">a.n.ska.n.t.wbk@gmail.com</a>
<a href=""mailto:ans.kant.wb.k@gmail.com"">ans.kant.wb.k@gmail.com</a>
<a href=""mailto:a.n.s.k.ant.w.b.k@gmail.com"">a.n.s.k.ant.w.b.k@gmail.com</a>
<a href=""mailto:an.s.kan.tw.bk@gmail.com"">an.s.kan.tw.bk@gmail.com</a>
<a href=""mailto:a.n.s.k.a.ntw.bk@gmail.com"">a.n.s.k.a.ntw.bk@gmail.com</a>
<a href=""mailto:a.nsk.antw.bk@gmail.com"">a.nsk.antw.bk@gmail.com</a>
<a href=""mailto:ans.k.ant.w.bk@gmail.com"">ans.k.ant.w.bk@gmail.com</a>
<a href=""mailto:an.sk.ant.wbk@gmail.com"">an.sk.ant.wbk@gmail.com</a>
<a href=""mailto:anskan.t.w.bk@gmail.com"">anskan.t.w.bk@gmail.com</a>
<a href=""mailto:a.n.s.k.a.n.twbk@gmail.com"">a.n.s.k.a.n.twbk@gmail.com</a>
<a href=""mailto:an.s.ka.n.t.wb.k@gmail.com"">an.s.ka.n.t.wb.k@gmail.com</a>
<a href=""mailto:an.sk.a.nt.w.bk@gmail.com"">an.sk.a.nt.w.bk@gmail.com</a>
<a href=""mailto:a.n.s.k.antwbk@gmail.com"">a.n.s.k.antwbk@gmail.com</a>
<a href=""mailto:a.ns.kan.t.wbk@gmail.com"">a.ns.kan.t.wbk@gmail.com</a>
<a href=""mailto:a.nskant.wbk@gmail.com"">a.nskant.wbk@gmail.com</a>
<a href=""mailto:ans.ka.n.t.w.bk@gmail.com"">ans.ka.n.t.w.bk@gmail.com</a>
<a href=""mailto:a.nska.n.tw.b.k@gmail.com"">a.nska.n.tw.b.k@gmail.com</a>
<a href=""mailto:a.n.skantw.bk@gmail.com"">a.n.skantw.bk@gmail.com</a>
<a href=""mailto:ans.k.a.n.tw.bk@gmail.com"">ans.k.a.n.tw.bk@gmail.com</a>
<a href=""mailto:a.n.sk.ant.w.b.k@gmail.com"">a.n.sk.ant.w.b.k@gmail.com</a>
<a href=""mailto:a.ns.ka.nt.w.bk@gmail.com"">a.ns.ka.nt.w.bk@gmail.com</a>
<a href=""mailto:ans.k.a.nt.w.b.k@gmail.com"">ans.k.a.nt.w.b.k@gmail.com</a>
<a href=""mailto:anska.n.t.wb.k@gmail.com"">anska.n.t.wb.k@gmail.com</a>
<a href=""mailto:a.n.s.k.antwb.k@gmail.com"">a.n.s.k.antwb.k@gmail.com</a>
<a href=""mailto:a.n.s.k.an.t.wbk@gmail.com"">a.n.s.k.an.t.wbk@gmail.com</a>
<a href=""mailto:a.ns.k.a.n.twb.k@gmail.com"">a.ns.k.a.n.twb.k@gmail.com</a>
<a href=""mailto:a.n.s.k.an.t.w.bk@gmail.com"">a.n.s.k.an.t.w.bk@gmail.com</a>
<a href=""mailto:an.sk.a.nt.w.b.k@gmail.com"">an.sk.a.nt.w.b.k@gmail.com</a>
<a href=""mailto:an.ska.n.twbk@gmail.com"">an.ska.n.twbk@gmail.com</a>
<a href=""mailto:a.ns.k.an.twbk@gmail.com"">a.ns.k.an.twbk@gmail.com</a>
<a href=""mailto:an.ska.ntwbk@gmail.com"">an.ska.ntwbk@gmail.com</a>
<a href=""mailto:anska.nt.w.b.k@gmail.com"">anska.nt.w.b.k@gmail.com</a>
<a href=""mailto:ans.k.a.n.t.w.bk@gmail.com"">ans.k.a.n.t.w.bk@gmail.com</a>
<a href=""mailto:an.s.k.a.n.t.wb.k@gmail.com"">an.s.k.a.n.t.wb.k@gmail.com</a>
<a href=""mailto:a.n.s.ka.n.t.w.b.k@gmail.com"">a.n.s.ka.n.t.w.b.k@gmail.com</a>
<a href=""mailto:a.n.s.ka.n.twb.k@gmail.com"">a.n.s.ka.n.twb.k@gmail.com</a>
<a href=""mailto:a.ns.kant.w.b.k@gmail.com"">a.ns.kant.w.b.k@gmail.com</a>
<a href=""mailto:ans.k.a.ntw.b.k@gmail.com"">ans.k.a.ntw.b.k@gmail.com</a>
<a href=""mailto:anska.nt.w.bk@gmail.com"">anska.nt.w.bk@gmail.com</a>
<a href=""mailto:ans.k.an.t.wbk@gmail.com"">ans.k.an.t.wbk@gmail.com</a>
<a href=""mailto:a.nsk.ant.w.bk@gmail.com"">a.nsk.ant.w.bk@gmail.com</a>
<a href=""mailto:a.n.s.k.antw.b.k@gmail.com"">a.n.s.k.antw.b.k@gmail.com</a>
<a href=""mailto:a.nsk.a.nt.wbk@gmail.com"">a.nsk.a.nt.wbk@gmail.com</a>
<a href=""mailto:an.s.kan.t.w.bk@gmail.com"">an.s.kan.t.w.bk@gmail.com</a>
<a href=""mailto:an.skantwbk@gmail.com"">an.skantwbk@gmail.com</a>
<a href=""mailto:a.ns.kan.t.w.bk@gmail.com"">a.ns.kan.t.w.bk@gmail.com</a>
<a href=""mailto:an.sk.antwbk@gmail.com"">an.sk.antwbk@gmail.com</a>
<a href=""mailto:ans.kantw.bk@gmail.com"">ans.kantw.bk@gmail.com</a>
<a href=""mailto:a.nska.nt.wb.k@gmail.com"">a.nska.nt.wb.k@gmail.com</a>
<a href=""mailto:a.ns.ka.ntwbk@gmail.com"">a.ns.ka.ntwbk@gmail.com</a>
<a href=""mailto:a.ns.kan.tw.b.k@gmail.com"">a.ns.kan.tw.b.k@gmail.com</a>
<a href=""mailto:a.nska.ntwb.k@gmail.com"">a.nska.ntwb.k@gmail.com</a>
<a href=""mailto:a.n.sk.antw.bk@gmail.com"">a.n.sk.antw.bk@gmail.com</a>
<a href=""mailto:an.ska.nt.w.b.k@gmail.com"">an.ska.nt.w.b.k@gmail.com</a>
<a href=""mailto:an.skan.tw.b.k@gmail.com"">an.skan.tw.b.k@gmail.com</a>
<a href=""mailto:a.n.sk.a.nt.wb.k@gmail.com"">a.n.sk.a.nt.wb.k@gmail.com</a>
<a href=""mailto:a.ns.k.antwbk@gmail.com"">a.ns.k.antwbk@gmail.com</a>
<a href=""mailto:a.ns.kant.wbk@gmail.com"">a.ns.kant.wbk@gmail.com</a>
<a href=""mailto:a.n.skan.twb.k@gmail.com"">a.n.skan.twb.k@gmail.com</a>
<a href=""mailto:anskantw.b.k@gmail.com"">anskantw.b.k@gmail.com</a>
<a href=""mailto:an.s.k.a.n.t.w.bk@gmail.com"">an.s.k.a.n.t.w.bk@gmail.com</a>
<a href=""mailto:an.sk.a.nt.wbk@gmail.com"">an.sk.a.nt.wbk@gmail.com</a>
<a href=""mailto:an.s.k.antw.b.k@gmail.com"">an.s.k.antw.b.k@gmail.com</a>
<a href=""mailto:anskan.tw.bk@gmail.com"">anskan.tw.bk@gmail.com</a>
<a href=""mailto:a.n.ska.n.twbk@gmail.com"">a.n.ska.n.twbk@gmail.com</a>
<a href=""mailto:an.ska.nt.w.bk@gmail.com"">an.ska.nt.w.bk@gmail.com</a>
<a href=""mailto:anska.ntwb.k@gmail.com"">anska.ntwb.k@gmail.com</a>
<a href=""mailto:a.n.sk.a.n.t.w.b.k@gmail.com"">a.n.sk.a.n.t.w.b.k@gmail.com</a>
<a href=""mailto:a.ns.k.a.nt.w.bk@gmail.com"">a.ns.k.a.nt.w.bk@gmail.com</a>
<a href=""mailto:ans.k.a.n.t.w.b.k@gmail.com"">ans.k.a.n.t.w.b.k@gmail.com</a>
<a href=""mailto:a.n.s.kantw.b.k@gmail.com"">a.n.s.kantw.b.k@gmail.com</a>
<a href=""mailto:a.nsk.a.nt.wb.k@gmail.com"">a.nsk.a.nt.wb.k@gmail.com</a>
<a href=""mailto:a.n.s.k.antw.bk@gmail.com"">a.n.s.k.antw.bk@gmail.com</a>
<a href=""mailto:a.ns.ka.n.tw.b.k@gmail.com"">a.ns.ka.n.tw.b.k@gmail.com</a>
<a href=""mailto:an.s.kantw.bk@gmail.com"">an.s.kantw.bk@gmail.com</a>
<a href=""mailto:a.nskantwbk@gmail.com"">a.nskantwbk@gmail.com</a>
<a href=""mailto:a.nskantw.b.k@gmail.com"">a.nskantw.b.k@gmail.com</a>
<a href=""mailto:a.n.s.ka.nt.w.bk@gmail.com"">a.n.s.ka.nt.w.bk@gmail.com</a>
<a href=""mailto:an.s.k.an.tw.b.k@gmail.com"">an.s.k.an.tw.b.k@gmail.com</a>
<a href=""mailto:ansk.a.n.tw.b.k@gmail.com"">ansk.a.n.tw.b.k@gmail.com</a>
<a href=""mailto:a.n.sk.a.n.t.w.bk@gmail.com"">a.n.sk.a.n.t.w.bk@gmail.com</a>
<a href=""mailto:ansk.a.n.twbk@gmail.com"">ansk.a.n.twbk@gmail.com</a>
<a href=""mailto:ans.kant.wbk@gmail.com"">ans.kant.wbk@gmail.com</a>
<a href=""mailto:a.nska.n.t.w.bk@gmail.com"">a.nska.n.t.w.bk@gmail.com</a>
<a href=""mailto:an.sk.an.t.w.bk@gmail.com"">an.sk.an.t.w.bk@gmail.com</a>
<a href=""mailto:an.skan.twbk@gmail.com"">an.skan.twbk@gmail.com</a>
<a href=""mailto:ansk.a.n.t.wb.k@gmail.com"">ansk.a.n.t.wb.k@gmail.com</a>
<a href=""mailto:ans.ka.nt.w.b.k@gmail.com"">ans.ka.nt.w.b.k@gmail.com</a>
<a href=""mailto:a.n.sk.an.tw.bk@gmail.com"">a.n.sk.an.tw.bk@gmail.com</a>
<a href=""mailto:anskant.w.b.k@gmail.com"">anskant.w.b.k@gmail.com</a>
<a href=""mailto:a.ns.ka.n.twbk@gmail.com"">a.ns.ka.n.twbk@gmail.com</a>
<a href=""mailto:an.sk.a.ntw.b.k@gmail.com"">an.sk.a.ntw.b.k@gmail.com</a>
<a href=""mailto:a.nsk.an.t.wbk@gmail.com"">a.nsk.an.t.wbk@gmail.com</a>
<a href=""mailto:a.n.s.k.an.twb.k@gmail.com"">a.n.s.k.an.twb.k@gmail.com</a>
<a href=""mailto:an.s.k.a.n.tw.bk@gmail.com"">an.s.k.a.n.tw.bk@gmail.com</a>
<a href=""mailto:a.nsk.antw.b.k@gmail.com"">a.nsk.antw.b.k@gmail.com</a>
<a href=""mailto:ans.k.ant.w.b.k@gmail.com"">ans.k.ant.w.b.k@gmail.com</a>
<a href=""mailto:orabkbjdept@gmail.com"">orabkbjdept@gmail.com</a>
<a href=""mailto:orab.k.bj.d.e.pt@gmail.com"">orab.k.bj.d.e.pt@gmail.com</a>
<a href=""mailto:o.rabkbjdept@gmail.com"">o.rabkbjdept@gmail.com</a>
<a href=""mailto:orabkb.j.d.ep.t@gmail.com"">orabkb.j.d.ep.t@gmail.com</a>
<a href=""mailto:o.ra.b.kb.jd.ept@gmail.com"">o.ra.b.kb.jd.ept@gmail.com</a>
<a href=""mailto:or.a.b.k.bj.de.p.t@gmail.com"">or.a.b.k.bj.de.p.t@gmail.com</a>
<a href=""mailto:o.rab.kbj.dept@gmail.com"">o.rab.kbj.dept@gmail.com</a>
<a href=""mailto:ora.b.kb.j.de.pt@gmail.com"">ora.b.kb.j.de.pt@gmail.com</a>
<a href=""mailto:o.r.a.b.k.b.jd.ep.t@gmail.com"">o.r.a.b.k.b.jd.ep.t@gmail.com</a>
<a href=""mailto:ora.bk.bjde.pt@gmail.com"">ora.bk.bjde.pt@gmail.com</a>
<a href=""mailto:o.r.ab.k.bjdep.t@gmail.com"">o.r.ab.k.bjdep.t@gmail.com</a>
<a href=""mailto:o.ra.b.kbj.de.p.t@gmail.com"">o.ra.b.kbj.de.p.t@gmail.com</a>
<a href=""mailto:orabkbjd.ep.t@gmail.com"">orabkbjd.ep.t@gmail.com</a>
<a href=""mailto:o.rabkbj.de.pt@gmail.com"">o.rabkbj.de.pt@gmail.com</a>
<a href=""mailto:ora.b.k.b.j.d.e.p.t@gmail.com"">ora.b.k.b.j.d.e.p.t@gmail.com</a>
<a href=""mailto:o.ra.bk.b.j.d.e.pt@gmail.com"">o.ra.bk.b.j.d.e.pt@gmail.com</a>
<a href=""mailto:ora.bk.b.j.d.e.pt@gmail.com"">ora.bk.b.j.d.e.pt@gmail.com</a>
<a href=""mailto:or.ab.kb.jd.e.p.t@gmail.com"">or.ab.kb.jd.e.p.t@gmail.com</a>
<a href=""mailto:or.a.bkb.jd.e.pt@gmail.com"">or.a.bkb.jd.e.pt@gmail.com</a>
<a href=""mailto:ora.bk.bj.d.e.pt@gmail.com"">ora.bk.bj.d.e.pt@gmail.com</a>
<a href=""mailto:o.rab.kb.jd.e.p.t@gmail.com"">o.rab.kb.jd.e.p.t@gmail.com</a>
<a href=""mailto:orab.kb.jdept@gmail.com"">orab.kb.jdept@gmail.com</a>
<a href=""mailto:ora.b.kbjd.e.pt@gmail.com"">ora.b.kbjd.e.pt@gmail.com</a>
<a href=""mailto:orabkbj.d.ept@gmail.com"">orabkbj.d.ept@gmail.com</a>
<a href=""mailto:o.r.a.bk.b.jd.e.p.t@gmail.com"">o.r.a.bk.b.jd.e.p.t@gmail.com</a>
<a href=""mailto:ora.b.kbj.d.ep.t@gmail.com"">ora.b.kbj.d.ep.t@gmail.com</a>
<a href=""mailto:o.rabk.bjd.e.pt@gmail.com"">o.rabk.bjd.e.pt@gmail.com</a>
<a href=""mailto:o.r.a.bk.b.j.dept@gmail.com"">o.r.a.bk.b.j.dept@gmail.com</a>
<a href=""mailto:o.rabkbj.d.e.pt@gmail.com"">o.rabkbj.d.e.pt@gmail.com</a>
<a href=""mailto:orab.kbj.d.ep.t@gmail.com"">orab.kbj.d.ep.t@gmail.com</a>
<a href=""mailto:or.abk.b.jde.pt@gmail.com"">or.abk.b.jde.pt@gmail.com</a>
<a href=""mailto:ora.bk.b.jd.ep.t@gmail.com"">ora.bk.b.jd.ep.t@gmail.com</a>
<a href=""mailto:ora.bk.bjd.ep.t@gmail.com"">ora.bk.bjd.ep.t@gmail.com</a>
<a href=""mailto:o.ra.b.kb.j.de.p.t@gmail.com"">o.ra.b.kb.j.de.p.t@gmail.com</a>
<a href=""mailto:ora.bk.bjd.ept@gmail.com"">ora.bk.bjd.ept@gmail.com</a>
<a href=""mailto:o.r.a.b.kbjd.e.p.t@gmail.com"">o.r.a.b.kbjd.e.p.t@gmail.com</a>
<a href=""mailto:orab.k.b.j.de.p.t@gmail.com"">orab.k.b.j.de.p.t@gmail.com</a>
<a href=""mailto:or.ab.k.bjd.ep.t@gmail.com"">or.ab.k.bjd.ep.t@gmail.com</a>
<a href=""mailto:or.a.bkb.jdep.t@gmail.com"">or.a.bkb.jdep.t@gmail.com</a>
<a href=""mailto:o.rab.k.b.j.d.e.pt@gmail.com"">o.rab.k.b.j.d.e.pt@gmail.com</a>
<a href=""mailto:orab.k.b.jde.pt@gmail.com"">orab.k.b.jde.pt@gmail.com</a>
<a href=""mailto:o.r.abkb.jde.pt@gmail.com"">o.r.abkb.jde.pt@gmail.com</a>
<a href=""mailto:o.r.a.bk.bj.de.pt@gmail.com"">o.r.a.bk.bj.de.pt@gmail.com</a>
<a href=""mailto:ora.bkbjdept@gmail.com"">ora.bkbjdept@gmail.com</a>
<a href=""mailto:ora.b.k.bjdep.t@gmail.com"">ora.b.k.bjdep.t@gmail.com</a>
<a href=""mailto:ora.bkb.jd.ept@gmail.com"">ora.bkb.jd.ept@gmail.com</a>
<a href=""mailto:o.ra.b.kb.j.d.ep.t@gmail.com"">o.ra.b.kb.j.d.ep.t@gmail.com</a>
<a href=""mailto:or.abk.b.jdep.t@gmail.com"">or.abk.b.jdep.t@gmail.com</a>
<a href=""mailto:or.abkbjde.pt@gmail.com"">or.abkbjde.pt@gmail.com</a>
<a href=""mailto:o.r.ab.kbjdep.t@gmail.com"">o.r.ab.kbjdep.t@gmail.com</a>
<a href=""mailto:or.ab.kbj.de.p.t@gmail.com"">or.ab.kbj.de.p.t@gmail.com</a>
<a href=""mailto:ora.b.kbj.d.e.p.t@gmail.com"">ora.b.kbj.d.e.p.t@gmail.com</a>
<a href=""mailto:or.abkb.jd.ep.t@gmail.com"">or.abkb.jd.ep.t@gmail.com</a>
<a href=""mailto:ora.b.kbj.dept@gmail.com"">ora.b.kbj.dept@gmail.com</a>
<a href=""mailto:o.r.a.b.k.bj.de.pt@gmail.com"">o.r.a.b.k.bj.de.pt@gmail.com</a>
<a href=""mailto:o.ra.b.k.b.jd.e.p.t@gmail.com"">o.ra.b.k.b.jd.e.p.t@gmail.com</a>
<a href=""mailto:o.r.a.bk.b.j.d.ep.t@gmail.com"">o.r.a.bk.b.j.d.ep.t@gmail.com</a>
<a href=""mailto:orab.kb.j.dep.t@gmail.com"">orab.kb.j.dep.t@gmail.com</a>
<a href=""mailto:o.r.ab.k.bj.d.e.p.t@gmail.com"">o.r.ab.k.bj.d.e.p.t@gmail.com</a>
<a href=""mailto:o.r.abkb.jd.ep.t@gmail.com"">o.r.abkb.jd.ep.t@gmail.com</a>
<a href=""mailto:or.ab.kbjde.p.t@gmail.com"">or.ab.kbjde.p.t@gmail.com</a>
<a href=""mailto:o.r.a.bkbjd.e.p.t@gmail.com"">o.r.a.bkbjd.e.p.t@gmail.com</a>
<a href=""mailto:or.abk.bjd.e.p.t@gmail.com"">or.abk.bjd.e.p.t@gmail.com</a>
<a href=""mailto:o.r.a.bk.b.j.d.e.pt@gmail.com"">o.r.a.bk.b.j.d.e.pt@gmail.com</a>
<a href=""mailto:o.r.abk.bjde.p.t@gmail.com"">o.r.abk.bjde.p.t@gmail.com</a>
<a href=""mailto:or.a.b.kb.j.d.e.pt@gmail.com"">or.a.b.kb.j.d.e.pt@gmail.com</a>
<a href=""mailto:orabkb.j.d.ept@gmail.com"">orabkb.j.d.ept@gmail.com</a>
<a href=""mailto:o.rab.k.b.jde.p.t@gmail.com"">o.rab.k.b.jde.p.t@gmail.com</a>
<a href=""mailto:orab.k.b.j.d.ept@gmail.com"">orab.k.b.j.d.ept@gmail.com</a>
<a href=""mailto:or.abkb.jd.ept@gmail.com"">or.abkb.jd.ept@gmail.com</a>
<a href=""mailto:or.a.bk.bj.de.p.t@gmail.com"">or.a.bk.bj.de.p.t@gmail.com</a>
<a href=""mailto:o.r.ab.k.bj.d.ept@gmail.com"">o.r.ab.k.bj.d.ept@gmail.com</a>
<a href=""mailto:or.a.bkbj.d.ep.t@gmail.com"">or.a.bkbj.d.ep.t@gmail.com</a>
<a href=""mailto:ora.bk.b.j.d.ept@gmail.com"">ora.bk.b.j.d.ept@gmail.com</a>
<a href=""mailto:or.abkbj.dep.t@gmail.com"">or.abkbj.dep.t@gmail.com</a>
<a href=""mailto:or.ab.k.bjdept@gmail.com"">or.ab.k.bjdept@gmail.com</a>
<a href=""mailto:o.r.abkbjde.pt@gmail.com"">o.r.abkbjde.pt@gmail.com</a>
<a href=""mailto:or.abkbj.d.e.p.t@gmail.com"">or.abkbj.d.e.p.t@gmail.com</a>
<a href=""mailto:o.r.a.bk.bjd.ep.t@gmail.com"">o.r.a.bk.bjd.ep.t@gmail.com</a>
<a href=""mailto:o.ra.b.k.b.j.dep.t@gmail.com"">o.ra.b.k.b.j.dep.t@gmail.com</a>
<a href=""mailto:o.r.a.bkbjde.p.t@gmail.com"">o.r.a.bkbjde.p.t@gmail.com</a>
<a href=""mailto:o.r.a.b.k.bj.dept@gmail.com"">o.r.a.b.k.bj.dept@gmail.com</a>
<a href=""mailto:or.a.b.k.bj.dep.t@gmail.com"">or.a.b.k.bj.dep.t@gmail.com</a>
<a href=""mailto:ora.b.k.bjde.pt@gmail.com"">ora.b.k.bjde.pt@gmail.com</a>
<a href=""mailto:or.abkb.j.de.pt@gmail.com"">or.abkb.j.de.pt@gmail.com</a>
<a href=""mailto:o.rabk.b.jd.ep.t@gmail.com"">o.rabk.b.jd.ep.t@gmail.com</a>
<a href=""mailto:o.r.ab.kb.j.d.e.pt@gmail.com"">o.r.ab.kb.j.d.e.pt@gmail.com</a>
<a href=""mailto:o.r.abk.bjd.ept@gmail.com"">o.r.abk.bjd.ept@gmail.com</a>
<a href=""mailto:o.ra.b.k.bj.d.e.pt@gmail.com"">o.ra.b.k.bj.d.e.pt@gmail.com</a>
<a href=""mailto:o.r.abk.b.j.d.e.p.t@gmail.com"">o.r.abk.b.j.d.e.p.t@gmail.com</a>
<a href=""mailto:o.ra.bk.b.jde.p.t@gmail.com"">o.ra.bk.b.jde.p.t@gmail.com</a>
<a href=""mailto:or.ab.kb.jde.p.t@gmail.com"">or.ab.kb.jde.p.t@gmail.com</a>
<a href=""mailto:o.r.abk.b.j.d.e.pt@gmail.com"">o.r.abk.b.j.d.e.pt@gmail.com</a>
<a href=""mailto:o.r.abk.bjd.e.pt@gmail.com"">o.r.abk.bjd.e.pt@gmail.com</a>
<a href=""mailto:o.ra.bkb.jdep.t@gmail.com"">o.ra.bkb.jdep.t@gmail.com</a>
<a href=""mailto:or.a.b.k.bjde.p.t@gmail.com"">or.a.b.k.bjde.p.t@gmail.com</a>
<a href=""mailto:orabk.bj.dep.t@gmail.com"">orabk.bj.dep.t@gmail.com</a>
<a href=""mailto:o.r.abk.b.j.de.pt@gmail.com"">o.r.abk.b.j.de.pt@gmail.com</a>
<a href=""mailto:or.abkbj.dept@gmail.com"">or.abkbj.dept@gmail.com</a>
<a href=""mailto:o.r.ab.kb.jdept@gmail.com"">o.r.ab.kb.jdept@gmail.com</a>
<a href=""mailto:or.ab.k.b.j.d.e.pt@gmail.com"">or.ab.k.b.j.d.e.pt@gmail.com</a>
<a href=""mailto:or.abk.b.j.dept@gmail.com"">or.abk.b.j.dept@gmail.com</a>
<a href=""mailto:o.rab.kb.jdept@gmail.com"">o.rab.kb.jdept@gmail.com</a>
<a href=""mailto:or.abkb.j.de.p.t@gmail.com"">or.abkb.j.de.p.t@gmail.com</a>
<a href=""mailto:o.rabkbjd.ept@gmail.com"">o.rabkbjd.ept@gmail.com</a>
<a href=""mailto:o.r.a.b.kb.jde.p.t@gmail.com"">o.r.a.b.kb.jde.p.t@gmail.com</a>
<a href=""mailto:or.abk.bjdep.t@gmail.com"">or.abk.bjdep.t@gmail.com</a>
<a href=""mailto:o.rabk.b.jdep.t@gmail.com"">o.rabk.b.jdep.t@gmail.com</a>
<a href=""mailto:or.ab.kbj.d.ep.t@gmail.com"">or.ab.kbj.d.ep.t@gmail.com</a>
<a href=""mailto:or.a.bk.b.j.d.ept@gmail.com"">or.a.bk.b.j.d.ept@gmail.com</a>
<a href=""mailto:o.r.a.b.k.bj.d.e.pt@gmail.com"">o.r.a.b.k.bj.d.e.pt@gmail.com</a>
<a href=""mailto:orabkbjd.ept@gmail.com"">orabkbjd.ept@gmail.com</a>
<a href=""mailto:orabk.bjde.p.t@gmail.com"">orabk.bjde.p.t@gmail.com</a>
<a href=""mailto:or.abk.b.j.d.ept@gmail.com"">or.abk.b.j.d.ept@gmail.com</a>
<a href=""mailto:ora.b.k.b.jde.p.t@gmail.com"">ora.b.k.b.jde.p.t@gmail.com</a>
<a href=""mailto:o.r.ab.kb.j.dept@gmail.com"">o.r.ab.kb.j.dept@gmail.com</a>
<a href=""mailto:orab.kbjd.e.pt@gmail.com"">orab.kbjd.e.pt@gmail.com</a>
<a href=""mailto:o.rabkb.j.de.pt@gmail.com"">o.rabkb.j.de.pt@gmail.com</a>
<a href=""mailto:ora.b.k.b.jd.ept@gmail.com"">ora.b.k.b.jd.ept@gmail.com</a>
<a href=""mailto:o.ra.b.k.b.jde.p.t@gmail.com"">o.ra.b.k.b.jde.p.t@gmail.com</a>
<a href=""mailto:or.ab.kbjd.e.pt@gmail.com"">or.ab.kbjd.e.pt@gmail.com</a>
<a href=""mailto:or.abkb.jde.p.t@gmail.com"">or.abkb.jde.p.t@gmail.com</a>
<a href=""mailto:ora.b.kb.j.d.ep.t@gmail.com"">ora.b.kb.j.d.ep.t@gmail.com</a>
<a href=""mailto:or.ab.kb.j.dep.t@gmail.com"">or.ab.kb.j.dep.t@gmail.com</a>
<a href=""mailto:o.r.a.bkb.j.d.e.p.t@gmail.com"">o.r.a.bkb.j.d.e.p.t@gmail.com</a>
<a href=""mailto:ora.b.k.b.j.d.e.pt@gmail.com"">ora.b.k.b.j.d.e.pt@gmail.com</a>
<a href=""mailto:orab.k.bjde.p.t@gmail.com"">orab.k.bjde.p.t@gmail.com</a>
<a href=""mailto:or.abk.bj.d.ept@gmail.com"">or.abk.bj.d.ept@gmail.com</a>
<a href=""mailto:o.r.a.bkb.jde.p.t@gmail.com"">o.r.a.bkb.jde.p.t@gmail.com</a>
<a href=""mailto:or.a.b.k.bj.d.ept@gmail.com"">or.a.b.k.bj.d.ept@gmail.com</a>
<a href=""mailto:or.abkbjd.e.p.t@gmail.com"">or.abkbjd.e.p.t@gmail.com</a>
<a href=""mailto:o.r.a.b.k.b.jd.ept@gmail.com"">o.r.a.b.k.b.jd.ept@gmail.com</a>
<a href=""mailto:o.ra.bkb.jd.e.pt@gmail.com"">o.ra.bkb.jd.e.pt@gmail.com</a>
<a href=""mailto:o.r.a.b.k.bj.dep.t@gmail.com"">o.r.a.b.k.bj.dep.t@gmail.com</a>
<a href=""mailto:orab.k.b.j.d.ep.t@gmail.com"">orab.k.b.j.d.ep.t@gmail.com</a>
<a href=""mailto:ora.b.k.bj.dept@gmail.com"">ora.b.k.bj.dept@gmail.com</a>
<a href=""mailto:ora.bkbj.d.ept@gmail.com"">ora.bkbj.d.ept@gmail.com</a>
<a href=""mailto:o.ra.bk.bjdept@gmail.com"">o.ra.bk.bjdept@gmail.com</a>
<a href=""mailto:o.r.a.bk.b.j.de.pt@gmail.com"">o.r.a.bk.b.j.de.pt@gmail.com</a>
<a href=""mailto:orabkbj.de.pt@gmail.com"">orabkbj.de.pt@gmail.com</a>
<a href=""mailto:o.ra.b.kb.j.d.ept@gmail.com"">o.ra.b.kb.j.d.ept@gmail.com</a>
<a href=""mailto:or.a.b.kb.j.de.pt@gmail.com"">or.a.b.kb.j.de.pt@gmail.com</a>
<a href=""mailto:o.rab.k.bjdept@gmail.com"">o.rab.k.bjdept@gmail.com</a>
<a href=""mailto:orabk.bjdept@gmail.com"">orabk.bjdept@gmail.com</a>
<a href=""mailto:orab.k.bj.dep.t@gmail.com"">orab.k.bj.dep.t@gmail.com</a>
<a href=""mailto:o.r.a.b.k.bjdep.t@gmail.com"">o.r.a.b.k.bjdep.t@gmail.com</a>
<a href=""mailto:o.rab.kbjd.e.p.t@gmail.com"">o.rab.kbjd.e.p.t@gmail.com</a>
<a href=""mailto:o.rabkbjd.e.p.t@gmail.com"">o.rabkbjd.e.p.t@gmail.com</a>
<a href=""mailto:o.r.ab.k.bj.d.ep.t@gmail.com"">o.r.ab.k.bj.d.ep.t@gmail.com</a>
<a href=""mailto:o.r.a.b.k.bj.d.ept@gmail.com"">o.r.a.b.k.bj.d.ept@gmail.com</a>
<a href=""mailto:o.r.abk.b.jdep.t@gmail.com"">o.r.abk.b.jdep.t@gmail.com</a>
<a href=""mailto:or.a.bkb.jd.ep.t@gmail.com"">or.a.bkb.jd.ep.t@gmail.com</a>
<a href=""mailto:o.r.a.bk.bjd.e.p.t@gmail.com"">o.r.a.bk.bjd.e.p.t@gmail.com</a>
<a href=""mailto:orabk.b.j.dept@gmail.com"">orabk.b.j.dept@gmail.com</a>
<a href=""mailto:orab.kbj.dept@gmail.com"">orab.kbj.dept@gmail.com</a>
<a href=""mailto:or.a.b.k.b.jdept@gmail.com"">or.a.b.k.b.jdept@gmail.com</a>
<a href=""mailto:orab.kb.j.de.pt@gmail.com"">orab.kb.j.de.pt@gmail.com</a>
<a href=""mailto:o.r.abk.bj.dept@gmail.com"">o.r.abk.bj.dept@gmail.com</a>
<a href=""mailto:o.rabkb.jde.p.t@gmail.com"">o.rabkb.jde.p.t@gmail.com</a>
<a href=""mailto:or.ab.k.b.j.dept@gmail.com"">or.ab.k.b.j.dept@gmail.com</a>
<a href=""mailto:or.a.b.k.bj.d.e.p.t@gmail.com"">or.a.b.k.bj.d.e.p.t@gmail.com</a>
<a href=""mailto:ora.bkbjd.ept@gmail.com"">ora.bkbjd.ept@gmail.com</a>
<a href=""mailto:orab.kb.j.d.e.pt@gmail.com"">orab.kb.j.d.e.pt@gmail.com</a>
<a href=""mailto:o.r.ab.k.b.j.d.e.p.t@gmail.com"">o.r.ab.k.b.j.d.e.p.t@gmail.com</a>
<a href=""mailto:or.ab.k.bj.d.e.pt@gmail.com"">or.ab.k.bj.d.e.pt@gmail.com</a>
<a href=""mailto:or.a.b.kb.j.dept@gmail.com"">or.a.b.kb.j.dept@gmail.com</a>
<a href=""mailto:o.rab.k.bj.de.pt@gmail.com"">o.rab.k.bj.de.pt@gmail.com</a>
<a href=""mailto:or.a.bk.b.j.d.e.p.t@gmail.com"">or.a.bk.b.j.d.e.p.t@gmail.com</a>
<a href=""mailto:o.ra.b.k.bjdep.t@gmail.com"">o.ra.b.k.bjdep.t@gmail.com</a>
<a href=""mailto:o.r.a.b.kb.jdept@gmail.com"">o.r.a.b.kb.jdept@gmail.com</a>
<a href=""mailto:o.r.ab.k.b.jd.ep.t@gmail.com"">o.r.ab.k.b.jd.ep.t@gmail.com</a>
<a href=""mailto:ora.bkbj.de.p.t@gmail.com"">ora.bkbj.de.p.t@gmail.com</a>
<a href=""mailto:or.abkbj.d.ep.t@gmail.com"">or.abkbj.d.ep.t@gmail.com</a>
<a href=""mailto:orab.kb.jdep.t@gmail.com"">orab.kb.jdep.t@gmail.com</a>
<a href=""mailto:o.rab.kbj.dep.t@gmail.com"">o.rab.kbj.dep.t@gmail.com</a>
<a href=""mailto:or.abk.bjde.p.t@gmail.com"">or.abk.bjde.p.t@gmail.com</a>
<a href=""mailto:or.a.b.kbj.d.ept@gmail.com"">or.a.b.kbj.d.ept@gmail.com</a>
<a href=""mailto:o.r.ab.kb.j.de.p.t@gmail.com"">o.r.ab.kb.j.de.p.t@gmail.com</a>
<a href=""mailto:o.r.a.b.k.bjde.pt@gmail.com"">o.r.a.b.k.bjde.pt@gmail.com</a>
<a href=""mailto:o.rabkb.jdep.t@gmail.com"">o.rabkb.jdep.t@gmail.com</a>
<a href=""mailto:or.abkb.jd.e.p.t@gmail.com"">or.abkb.jd.e.p.t@gmail.com</a>
<a href=""mailto:or.a.bk.b.jd.e.pt@gmail.com"">or.a.bk.b.jd.e.pt@gmail.com</a>
<a href=""mailto:ora.bk.b.j.de.pt@gmail.com"">ora.bk.b.j.de.pt@gmail.com</a>
<a href=""mailto:or.a.bk.bj.d.ept@gmail.com"">or.a.bk.bj.d.ept@gmail.com</a>
<a href=""mailto:o.r.ab.kbjdept@gmail.com"">o.r.ab.kbjdept@gmail.com</a>
<a href=""mailto:or.a.b.kb.j.dep.t@gmail.com"">or.a.b.kb.j.dep.t@gmail.com</a>
<a href=""mailto:o.r.a.b.kbj.dept@gmail.com"">o.r.a.b.kbj.dept@gmail.com</a>
<a href=""mailto:o.r.abk.bjd.e.p.t@gmail.com"">o.r.abk.bjd.e.p.t@gmail.com</a>
<a href=""mailto:or.ab.kbj.d.e.p.t@gmail.com"">or.ab.kbj.d.e.p.t@gmail.com</a>
<a href=""mailto:orab.k.bj.dept@gmail.com"">orab.k.bj.dept@gmail.com</a>
<a href=""mailto:o.ra.b.k.b.jdep.t@gmail.com"">o.ra.b.k.b.jdep.t@gmail.com</a>
<a href=""mailto:or.abkbjd.ept@gmail.com"">or.abkbjd.ept@gmail.com</a>
<a href=""mailto:or.a.bkbjd.e.pt@gmail.com"">or.a.bkbjd.e.pt@gmail.com</a>
<a href=""mailto:o.ra.bkbj.dept@gmail.com"">o.ra.bkbj.dept@gmail.com</a>
<a href=""mailto:o.ra.bk.b.jdep.t@gmail.com"">o.ra.bk.b.jdep.t@gmail.com</a>
<a href=""mailto:orabkb.jd.e.p.t@gmail.com"">orabkb.jd.e.p.t@gmail.com</a>
<a href=""mailto:o.ra.b.k.bjd.e.p.t@gmail.com"">o.ra.b.k.bjd.e.p.t@gmail.com</a>
<a href=""mailto:o.rab.kbjdep.t@gmail.com"">o.rab.kbjdep.t@gmail.com</a>
<a href=""mailto:o.r.a.bkb.j.de.p.t@gmail.com"">o.r.a.bkb.j.de.p.t@gmail.com</a>
<a href=""mailto:o.r.abk.b.jd.e.p.t@gmail.com"">o.r.abk.b.jd.e.p.t@gmail.com</a>
<a href=""mailto:orabkb.j.d.e.p.t@gmail.com"">orabkb.j.d.e.p.t@gmail.com</a>

<a href=""mailto:yaoafanbed@gmail.com"">yaoafanbed@gmail.com</a>
<a href=""mailto:ya.oafanbe.d@gmail.com"">ya.oafanbe.d@gmail.com</a>
<a href=""mailto:y.a.oafa.n.b.ed@gmail.com"">y.a.oafa.n.b.ed@gmail.com</a>
<a href=""mailto:yao.a.f.a.n.b.e.d@gmail.com"">yao.a.f.a.n.b.e.d@gmail.com</a>
<a href=""mailto:yao.a.f.an.b.e.d@gmail.com"">yao.a.f.an.b.e.d@gmail.com</a>
<a href=""mailto:y.ao.af.an.be.d@gmail.com"">y.ao.af.an.be.d@gmail.com</a>
<a href=""mailto:ya.oaf.a.n.bed@gmail.com"">ya.oaf.a.n.bed@gmail.com</a>
<a href=""mailto:ya.o.afan.be.d@gmail.com"">ya.o.afan.be.d@gmail.com</a>
<a href=""mailto:y.a.o.a.f.a.n.b.e.d@gmail.com"">y.a.o.a.f.a.n.b.e.d@gmail.com</a>
<a href=""mailto:ya.oaf.a.nbed@gmail.com"">ya.oaf.a.nbed@gmail.com</a>
<a href=""mailto:y.ao.afanb.e.d@gmail.com"">y.ao.afanb.e.d@gmail.com</a>
<a href=""mailto:yao.a.fan.bed@gmail.com"">yao.a.fan.bed@gmail.com</a>
<a href=""mailto:y.ao.afa.nbe.d@gmail.com"">y.ao.afa.nbe.d@gmail.com</a>
<a href=""mailto:y.aoafanbed@gmail.com"">y.aoafanbed@gmail.com</a>
<a href=""mailto:ya.oa.f.a.nb.e.d@gmail.com"">ya.oa.f.a.nb.e.d@gmail.com</a>
<a href=""mailto:yao.a.f.an.be.d@gmail.com"">yao.a.f.an.be.d@gmail.com</a>
<a href=""mailto:ya.o.afanb.ed@gmail.com"">ya.o.afanb.ed@gmail.com</a>
<a href=""mailto:y.aoa.f.an.bed@gmail.com"">y.aoa.f.an.bed@gmail.com</a>
<a href=""mailto:y.aoa.fan.be.d@gmail.com"">y.aoa.fan.be.d@gmail.com</a>
<a href=""mailto:y.a.oa.fa.n.be.d@gmail.com"">y.a.oa.fa.n.be.d@gmail.com</a>
<a href=""mailto:y.a.oafan.bed@gmail.com"">y.a.oafan.bed@gmail.com</a>
<a href=""mailto:ya.oa.fan.b.ed@gmail.com"">ya.oa.fan.b.ed@gmail.com</a>
<a href=""mailto:ya.o.a.f.an.be.d@gmail.com"">ya.o.a.f.an.be.d@gmail.com</a>
<a href=""mailto:y.aoafan.bed@gmail.com"">y.aoafan.bed@gmail.com</a>
<a href=""mailto:yaoa.fan.bed@gmail.com"">yaoa.fan.bed@gmail.com</a>
<a href=""mailto:y.aoa.f.a.nbe.d@gmail.com"">y.aoa.f.a.nbe.d@gmail.com</a>
<a href=""mailto:yaoa.f.an.be.d@gmail.com"">yaoa.f.an.be.d@gmail.com</a>
<a href=""mailto:yaoa.fanbed@gmail.com"">yaoa.fanbed@gmail.com</a>
<a href=""mailto:y.aoa.f.a.n.b.ed@gmail.com"">y.aoa.f.a.n.b.ed@gmail.com</a>
<a href=""mailto:y.ao.afan.b.ed@gmail.com"">y.ao.afan.b.ed@gmail.com</a>
<a href=""mailto:yaoaf.anb.e.d@gmail.com"">yaoaf.anb.e.d@gmail.com</a>
<a href=""mailto:yaoa.fanbe.d@gmail.com"">yaoa.fanbe.d@gmail.com</a>
<a href=""mailto:yaoa.fa.nb.ed@gmail.com"">yaoa.fa.nb.ed@gmail.com</a>
<a href=""mailto:yaoafa.nb.ed@gmail.com"">yaoafa.nb.ed@gmail.com</a>
<a href=""mailto:yaoa.fan.b.ed@gmail.com"">yaoa.fan.b.ed@gmail.com</a>
<a href=""mailto:y.aoa.f.a.n.b.e.d@gmail.com"">y.aoa.f.a.n.b.e.d@gmail.com</a>
<a href=""mailto:y.aoaf.an.be.d@gmail.com"">y.aoaf.an.be.d@gmail.com</a>
<a href=""mailto:y.ao.afa.nbed@gmail.com"">y.ao.afa.nbed@gmail.com</a>
<a href=""mailto:ya.oaf.a.n.b.ed@gmail.com"">ya.oaf.a.n.b.ed@gmail.com</a>
<a href=""mailto:ya.oafanb.ed@gmail.com"">ya.oafanb.ed@gmail.com</a>
<a href=""mailto:y.a.o.af.a.n.b.e.d@gmail.com"">y.a.o.af.a.n.b.e.d@gmail.com</a>
<a href=""mailto:y.a.o.a.fa.nb.ed@gmail.com"">y.a.o.a.fa.nb.ed@gmail.com</a>
<a href=""mailto:y.aoafan.b.e.d@gmail.com"">y.aoafan.b.e.d@gmail.com</a>
<a href=""mailto:y.a.oa.f.an.b.e.d@gmail.com"">y.a.oa.f.an.b.e.d@gmail.com</a>
<a href=""mailto:y.aoa.f.an.b.e.d@gmail.com"">y.aoa.f.an.b.e.d@gmail.com</a>
<a href=""mailto:y.ao.afa.n.b.e.d@gmail.com"">y.ao.afa.n.b.e.d@gmail.com</a>
<a href=""mailto:y.ao.a.f.a.nb.e.d@gmail.com"">y.ao.a.f.a.nb.e.d@gmail.com</a>
<a href=""mailto:ya.oa.fa.n.b.e.d@gmail.com"">ya.oa.fa.n.b.e.d@gmail.com</a>
<a href=""mailto:yao.a.f.anb.ed@gmail.com"">yao.a.f.anb.ed@gmail.com</a>
<a href=""mailto:y.aoa.fanbe.d@gmail.com"">y.aoa.fanbe.d@gmail.com</a>
<a href=""mailto:yaoa.f.a.n.be.d@gmail.com"">yaoa.f.a.n.be.d@gmail.com</a>
<a href=""mailto:y.aoaf.a.n.b.ed@gmail.com"">y.aoaf.a.n.b.ed@gmail.com</a>
<a href=""mailto:y.a.o.afa.nbe.d@gmail.com"">y.a.o.afa.nbe.d@gmail.com</a>
<a href=""mailto:ya.oa.f.anb.ed@gmail.com"">ya.oa.f.anb.ed@gmail.com</a>
<a href=""mailto:ya.oa.f.anbed@gmail.com"">ya.oa.f.anbed@gmail.com</a>
<a href=""mailto:ya.o.af.a.n.b.e.d@gmail.com"">ya.o.af.a.n.b.e.d@gmail.com</a>
<a href=""mailto:y.a.o.a.f.anb.e.d@gmail.com"">y.a.o.a.f.anb.e.d@gmail.com</a>
<a href=""mailto:y.aoafanb.ed@gmail.com"">y.aoafanb.ed@gmail.com</a>
<a href=""mailto:ya.oa.f.an.be.d@gmail.com"">ya.oa.f.an.be.d@gmail.com</a>
<a href=""mailto:ya.oa.f.an.b.e.d@gmail.com"">ya.oa.f.an.b.e.d@gmail.com</a>
<a href=""mailto:y.a.o.af.a.n.bed@gmail.com"">y.a.o.af.a.n.bed@gmail.com</a>
<a href=""mailto:ya.oa.f.a.n.be.d@gmail.com"">ya.oa.f.a.n.be.d@gmail.com</a>
<a href=""mailto:yaoa.f.a.nb.ed@gmail.com"">yaoa.f.a.nb.ed@gmail.com</a>
<a href=""mailto:y.ao.afa.nb.ed@gmail.com"">y.ao.afa.nb.ed@gmail.com</a>
<a href=""mailto:y.a.oaf.an.be.d@gmail.com"">y.a.oaf.an.be.d@gmail.com</a>
<a href=""mailto:yaoafanb.ed@gmail.com"">yaoafanb.ed@gmail.com</a>
<a href=""mailto:yao.afanb.ed@gmail.com"">yao.afanb.ed@gmail.com</a>
<a href=""mailto:y.a.oaf.anb.ed@gmail.com"">y.a.oaf.anb.ed@gmail.com</a>
<a href=""mailto:y.ao.afanb.ed@gmail.com"">y.ao.afanb.ed@gmail.com</a>
<a href=""mailto:y.a.oa.fa.nb.e.d@gmail.com"">y.a.oa.fa.nb.e.d@gmail.com</a>
<a href=""mailto:y.a.o.a.f.anb.ed@gmail.com"">y.a.o.a.f.anb.ed@gmail.com</a>
<a href=""mailto:yaoaf.a.n.bed@gmail.com"">yaoaf.a.n.bed@gmail.com</a>
<a href=""mailto:ya.oa.f.a.n.bed@gmail.com"">ya.oa.f.a.n.bed@gmail.com</a>
<a href=""mailto:y.a.oa.f.anbe.d@gmail.com"">y.a.oa.f.anbe.d@gmail.com</a>
<a href=""mailto:y.ao.afan.be.d@gmail.com"">y.ao.afan.be.d@gmail.com</a>
<a href=""mailto:ya.o.a.f.a.nb.e.d@gmail.com"">ya.o.a.f.a.nb.e.d@gmail.com</a>
<a href=""mailto:y.a.o.a.fan.be.d@gmail.com"">y.a.o.a.fan.be.d@gmail.com</a>
<a href=""mailto:ya.oafa.nb.ed@gmail.com"">ya.oafa.nb.ed@gmail.com</a>
<a href=""mailto:y.aoa.f.an.be.d@gmail.com"">y.aoa.f.an.be.d@gmail.com</a>
<a href=""mailto:ya.o.a.f.anbe.d@gmail.com"">ya.o.a.f.anbe.d@gmail.com</a>
<a href=""mailto:ya.o.a.fan.b.e.d@gmail.com"">ya.o.a.fan.b.e.d@gmail.com</a>
<a href=""mailto:y.a.o.afa.n.b.ed@gmail.com"">y.a.o.afa.n.b.ed@gmail.com</a>
<a href=""mailto:yaoafanbe.d@gmail.com"">yaoafanbe.d@gmail.com</a>
<a href=""mailto:ya.o.a.f.an.b.e.d@gmail.com"">ya.o.a.f.an.b.e.d@gmail.com</a>
<a href=""mailto:y.a.o.afa.nb.e.d@gmail.com"">y.a.o.afa.nb.e.d@gmail.com</a>
<a href=""mailto:y.a.oa.fanbe.d@gmail.com"">y.a.oa.fanbe.d@gmail.com</a>
<a href=""mailto:y.aoa.f.anb.e.d@gmail.com"">y.aoa.f.anb.e.d@gmail.com</a>
<a href=""mailto:y.ao.a.f.a.n.bed@gmail.com"">y.ao.a.f.a.n.bed@gmail.com</a>
<a href=""mailto:ya.oa.f.an.bed@gmail.com"">ya.oa.f.an.bed@gmail.com</a>
<a href=""mailto:y.a.o.afanb.ed@gmail.com"">y.a.o.afanb.ed@gmail.com</a>
<a href=""mailto:y.a.o.af.a.nb.e.d@gmail.com"">y.a.o.af.a.nb.e.d@gmail.com</a>
<a href=""mailto:y.ao.afa.n.b.ed@gmail.com"">y.ao.afa.n.b.ed@gmail.com</a>
<a href=""mailto:yao.a.f.anb.e.d@gmail.com"">yao.a.f.anb.e.d@gmail.com</a>
<a href=""mailto:y.aoaf.a.n.be.d@gmail.com"">y.aoaf.a.n.be.d@gmail.com</a>
<a href=""mailto:y.aoa.fa.nbed@gmail.com"">y.aoa.fa.nbed@gmail.com</a>
<a href=""mailto:y.ao.afa.nb.e.d@gmail.com"">y.ao.afa.nb.e.d@gmail.com</a>
<a href=""mailto:yao.af.an.b.e.d@gmail.com"">yao.af.an.b.e.d@gmail.com</a>
<a href=""mailto:y.a.oa.f.an.bed@gmail.com"">y.a.oa.f.an.bed@gmail.com</a>
<a href=""mailto:y.aoaf.a.nbed@gmail.com"">y.aoaf.a.nbed@gmail.com</a>
<a href=""mailto:y.aoa.fa.nbe.d@gmail.com"">y.aoa.fa.nbe.d@gmail.com</a>
<a href=""mailto:yao.afanbe.d@gmail.com"">yao.afanbe.d@gmail.com</a>
<a href=""mailto:y.a.o.af.an.be.d@gmail.com"">y.a.o.af.an.be.d@gmail.com</a>
<a href=""mailto:y.a.oa.fa.nbe.d@gmail.com"">y.a.oa.fa.nbe.d@gmail.com</a>
<a href=""mailto:ya.o.af.a.n.b.ed@gmail.com"">ya.o.af.a.n.b.ed@gmail.com</a>
<a href=""mailto:ya.o.af.an.be.d@gmail.com"">ya.o.af.an.be.d@gmail.com</a>
<a href=""mailto:y.a.oafanb.e.d@gmail.com"">y.a.oafanb.e.d@gmail.com</a>
<a href=""mailto:y.a.oa.fan.be.d@gmail.com"">y.a.oa.fan.be.d@gmail.com</a>
<a href=""mailto:y.a.oafan.b.ed@gmail.com"">y.a.oafan.b.ed@gmail.com</a>
<a href=""mailto:y.ao.af.anb.ed@gmail.com"">y.ao.af.anb.ed@gmail.com</a>
<a href=""mailto:ya.oafa.nbe.d@gmail.com"">ya.oafa.nbe.d@gmail.com</a>
<a href=""mailto:ya.oa.fa.nb.ed@gmail.com"">ya.oa.fa.nb.ed@gmail.com</a>
<a href=""mailto:yaoafan.bed@gmail.com"">yaoafan.bed@gmail.com</a>
<a href=""mailto:y.aoafa.n.b.e.d@gmail.com"">y.aoafa.n.b.e.d@gmail.com</a>
<a href=""mailto:ya.oaf.a.n.be.d@gmail.com"">ya.oaf.a.n.be.d@gmail.com</a>
<a href=""mailto:y.ao.a.f.an.b.ed@gmail.com"">y.ao.a.f.an.b.ed@gmail.com</a>
<a href=""mailto:yao.afa.nbe.d@gmail.com"">yao.afa.nbe.d@gmail.com</a>
<a href=""mailto:ya.o.a.fan.b.ed@gmail.com"">ya.o.a.fan.b.ed@gmail.com</a>
<a href=""mailto:ya.o.af.anbe.d@gmail.com"">ya.o.af.anbe.d@gmail.com</a>
<a href=""mailto:yaoafan.be.d@gmail.com"">yaoafan.be.d@gmail.com</a>
<a href=""mailto:y.aoafa.n.bed@gmail.com"">y.aoafa.n.bed@gmail.com</a>
<a href=""mailto:y.ao.a.fa.n.b.e.d@gmail.com"">y.ao.a.fa.n.b.e.d@gmail.com</a>
<a href=""mailto:ya.o.afa.n.b.e.d@gmail.com"">ya.o.afa.n.b.e.d@gmail.com</a>
<a href=""mailto:y.ao.af.an.bed@gmail.com"">y.ao.af.an.bed@gmail.com</a>
<a href=""mailto:ya.o.af.anbed@gmail.com"">ya.o.af.anbed@gmail.com</a>
<a href=""mailto:yaoa.f.anbed@gmail.com"">yaoa.f.anbed@gmail.com</a>
<a href=""mailto:yaoa.fa.n.b.e.d@gmail.com"">yaoa.fa.n.b.e.d@gmail.com</a>
<a href=""mailto:y.ao.a.fan.be.d@gmail.com"">y.ao.a.fan.be.d@gmail.com</a>
<a href=""mailto:y.ao.a.f.an.bed@gmail.com"">y.ao.a.f.an.bed@gmail.com</a>
<a href=""mailto:y.a.oaf.a.n.bed@gmail.com"">y.a.oaf.a.n.bed@gmail.com</a>
<a href=""mailto:y.a.oafanb.ed@gmail.com"">y.a.oafanb.ed@gmail.com</a>
<a href=""mailto:y.a.o.af.anb.e.d@gmail.com"">y.a.o.af.anb.e.d@gmail.com</a>
<a href=""mailto:y.a.o.a.f.a.nb.ed@gmail.com"">y.a.o.a.f.a.nb.ed@gmail.com</a>
<a href=""mailto:yao.af.anb.e.d@gmail.com"">yao.af.anb.e.d@gmail.com</a>
<a href=""mailto:yao.af.an.bed@gmail.com"">yao.af.an.bed@gmail.com</a>
<a href=""mailto:yaoaf.anbe.d@gmail.com"">yaoaf.anbe.d@gmail.com</a>
<a href=""mailto:y.a.o.afa.nb.ed@gmail.com"">y.a.o.afa.nb.ed@gmail.com</a>
<a href=""mailto:y.ao.af.anbe.d@gmail.com"">y.ao.af.anbe.d@gmail.com</a>
<a href=""mailto:y.a.o.a.fan.bed@gmail.com"">y.a.o.a.fan.bed@gmail.com</a>
<a href=""mailto:yao.a.fa.n.be.d@gmail.com"">yao.a.fa.n.be.d@gmail.com</a>
<a href=""mailto:y.a.oaf.an.bed@gmail.com"">y.a.oaf.an.bed@gmail.com</a>
<a href=""mailto:ya.oa.fa.nb.e.d@gmail.com"">ya.oa.fa.nb.e.d@gmail.com</a>
<a href=""mailto:y.ao.a.f.anbe.d@gmail.com"">y.ao.a.f.anbe.d@gmail.com</a>
<a href=""mailto:ya.oa.fa.n.bed@gmail.com"">ya.oa.fa.n.bed@gmail.com</a>
<a href=""mailto:ya.oa.fanbe.d@gmail.com"">ya.oa.fanbe.d@gmail.com</a>
<a href=""mailto:ya.o.afa.n.bed@gmail.com"">ya.o.afa.n.bed@gmail.com</a>
<a href=""mailto:y.a.o.a.fa.nb.e.d@gmail.com"">y.a.o.a.fa.nb.e.d@gmail.com</a>
<a href=""mailto:yaoa.fa.nbe.d@gmail.com"">yaoa.fa.nbe.d@gmail.com</a>
<a href=""mailto:ya.o.af.anb.e.d@gmail.com"">ya.o.af.anb.e.d@gmail.com</a>
<a href=""mailto:y.ao.a.fa.nbed@gmail.com"">y.ao.a.fa.nbed@gmail.com</a>
<a href=""mailto:y.a.o.a.f.an.bed@gmail.com"">y.a.o.a.f.an.bed@gmail.com</a>
<a href=""mailto:y.aoaf.anb.ed@gmail.com"">y.aoaf.anb.ed@gmail.com</a>
<a href=""mailto:y.ao.af.a.n.be.d@gmail.com"">y.ao.af.a.n.be.d@gmail.com</a>
<a href=""mailto:y.aoa.fa.n.b.ed@gmail.com"">y.aoa.fa.n.b.ed@gmail.com</a>
<a href=""mailto:yao.a.fan.b.ed@gmail.com"">yao.a.fan.b.ed@gmail.com</a>
<a href=""mailto:yao.a.f.an.b.ed@gmail.com"">yao.a.f.an.b.ed@gmail.com</a>
<a href=""mailto:y.aoafan.be.d@gmail.com"">y.aoafan.be.d@gmail.com</a>
<a href=""mailto:y.a.oaf.a.n.b.ed@gmail.com"">y.a.oaf.a.n.b.ed@gmail.com</a>
<a href=""mailto:yao.af.a.nbe.d@gmail.com"">yao.af.a.nbe.d@gmail.com</a>
<a href=""mailto:yao.afa.n.b.ed@gmail.com"">yao.afa.n.b.ed@gmail.com</a>
<a href=""mailto:yaoa.f.a.n.b.e.d@gmail.com"">yaoa.f.a.n.b.e.d@gmail.com</a>
<a href=""mailto:yaoaf.a.n.b.e.d@gmail.com"">yaoaf.a.n.b.e.d@gmail.com</a>
<a href=""mailto:y.aoa.f.a.nb.ed@gmail.com"">y.aoa.f.a.nb.ed@gmail.com</a>
<a href=""mailto:yaoa.fa.n.b.ed@gmail.com"">yaoa.fa.n.b.ed@gmail.com</a>
<a href=""mailto:y.a.o.a.f.anbe.d@gmail.com"">y.a.o.a.f.anbe.d@gmail.com</a>
<a href=""mailto:y.a.o.a.f.a.nbed@gmail.com"">y.a.o.a.f.a.nbed@gmail.com</a>
<a href=""mailto:y.a.oa.f.a.n.b.ed@gmail.com"">y.a.oa.f.a.n.b.ed@gmail.com</a>
<a href=""mailto:ya.o.a.fan.bed@gmail.com"">ya.o.a.fan.bed@gmail.com</a>
<a href=""mailto:ya.oa.fanb.ed@gmail.com"">ya.oa.fanb.ed@gmail.com</a>
<a href=""mailto:ya.o.afanbed@gmail.com"">ya.o.afanbed@gmail.com</a>
<a href=""mailto:y.a.oa.f.a.nbed@gmail.com"">y.a.oa.f.a.nbed@gmail.com</a>
<a href=""mailto:ya.o.af.a.nb.ed@gmail.com"">ya.o.af.a.nb.ed@gmail.com</a>
<a href=""mailto:ya.oafa.n.b.ed@gmail.com"">ya.oafa.n.b.ed@gmail.com</a>
<a href=""mailto:yaoaf.an.b.ed@gmail.com"">yaoaf.an.b.ed@gmail.com</a>
<a href=""mailto:ya.o.a.fa.nb.e.d@gmail.com"">ya.o.a.fa.nb.e.d@gmail.com</a>
<a href=""mailto:y.a.oa.fanbed@gmail.com"">y.a.oa.fanbed@gmail.com</a>
<a href=""mailto:y.aoa.f.an.b.ed@gmail.com"">y.aoa.f.an.b.ed@gmail.com</a>
<a href=""mailto:yao.a.f.a.nbed@gmail.com"">yao.a.f.a.nbed@gmail.com</a>
<a href=""mailto:yao.a.fa.nb.e.d@gmail.com"">yao.a.fa.nb.e.d@gmail.com</a>
<a href=""mailto:y.ao.a.fanbed@gmail.com"">y.ao.a.fanbed@gmail.com</a>
<a href=""mailto:y.ao.afanbed@gmail.com"">y.ao.afanbed@gmail.com</a>
<a href=""mailto:y.a.o.a.fa.n.b.ed@gmail.com"">y.a.o.a.fa.n.b.ed@gmail.com</a>
<a href=""mailto:yao.af.an.b.ed@gmail.com"">yao.af.an.b.ed@gmail.com</a>
<a href=""mailto:y.ao.a.fan.bed@gmail.com"">y.ao.a.fan.bed@gmail.com</a>
<a href=""mailto:y.ao.a.fanb.e.d@gmail.com"">y.ao.a.fanb.e.d@gmail.com</a>
<a href=""mailto:y.aoafa.nb.e.d@gmail.com"">y.aoafa.nb.e.d@gmail.com</a>
<a href=""mailto:yaoa.fa.nbed@gmail.com"">yaoa.fa.nbed@gmail.com</a>
<a href=""mailto:ya.oafan.be.d@gmail.com"">ya.oafan.be.d@gmail.com</a>
<a href=""mailto:ya.o.a.fanbe.d@gmail.com"">ya.o.a.fanbe.d@gmail.com</a>
<a href=""mailto:yaoafa.nbed@gmail.com"">yaoafa.nbed@gmail.com</a>
<a href=""mailto:y.a.o.af.anbed@gmail.com"">y.a.o.af.anbed@gmail.com</a>
<a href=""mailto:y.ao.a.f.anb.ed@gmail.com"">y.ao.a.f.anb.ed@gmail.com</a>
<a href=""mailto:y.aoaf.a.nb.e.d@gmail.com"">y.aoaf.a.nb.e.d@gmail.com</a>
<a href=""mailto:ya.oa.fa.n.be.d@gmail.com"">ya.oa.fa.n.be.d@gmail.com</a>
<a href=""mailto:yaoa.fa.n.be.d@gmail.com"">yaoa.fa.n.be.d@gmail.com</a>
<a href=""mailto:yao.afa.nb.ed@gmail.com"">yao.afa.nb.ed@gmail.com</a>
<a href=""mailto:y.a.o.af.an.b.e.d@gmail.com"">y.a.o.af.an.b.e.d@gmail.com</a>
<a href=""mailto:ya.oafa.n.b.e.d@gmail.com"">ya.oafa.n.b.e.d@gmail.com</a>
<a href=""mailto:yao.afa.n.be.d@gmail.com"">yao.afa.n.be.d@gmail.com</a>
<a href=""mailto:y.a.oaf.an.b.ed@gmail.com"">y.a.oaf.an.b.ed@gmail.com</a>
<a href=""mailto:yaoa.f.an.bed@gmail.com"">yaoa.f.an.bed@gmail.com</a>
<a href=""mailto:yao.af.a.nbed@gmail.com"">yao.af.a.nbed@gmail.com</a>
<a href=""mailto:orabankonline-bj@ora-bank.net"">orabankonline-bj@ora-bank.net</a>
<a href=""mailto:modesto.elegbede-bj@oorabank.net"">modesto.elegbede-bj@oorabank.net</a>
<a href=""mailto:seref.sero2020@gmail.com"">seref.sero2020@gmail.com</a>
<a href=""mailto:accessatmcarddept@gmail.com"">accessatmcarddept@gmail.com</a>
<a href=""mailto:ac.ce.s.satm.ca.rd.de.p.t@gmail.com"">ac.ce.s.satm.ca.rd.de.p.t@gmail.com</a>
<a href=""mailto:acces.satm.c.a.r.d.d.e.p.t@gmail.com"">acces.satm.c.a.r.d.d.e.p.t@gmail.com</a>
<a href=""mailto:ac.ce.ssat.mca.rdd.e.p.t@gmail.com"">ac.ce.ssat.mca.rdd.e.p.t@gmail.com</a>
<a href=""mailto:ac.c.essa.t.m.c.a.rd.dept@gmail.com"">ac.c.essa.t.m.c.a.rd.dept@gmail.com</a>
<a href=""mailto:acc.e.s.sa.t.mc.ard.d.ep.t@gmail.com"">acc.e.s.sa.t.mc.ard.d.ep.t@gmail.com</a>
<a href=""mailto:ac.ces.sa.tm.ca.r.d.dept@gmail.com"">ac.ces.sa.tm.ca.r.d.dept@gmail.com</a>
<a href=""mailto:a.c.ce.s.sa.t.mc.ard.d.ept@gmail.com"">a.c.ce.s.sa.t.mc.ard.d.ept@gmail.com</a>
<a href=""mailto:a.ccess.a.t.mc.a.rdd.ep.t@gmail.com"">a.ccess.a.t.mc.a.rdd.ep.t@gmail.com</a>
<a href=""mailto:ac.ces.s.atm.cardd.e.p.t@gmail.com"">ac.ces.s.atm.cardd.e.p.t@gmail.com</a>
<a href=""mailto:ac.c.essa.tmcar.dde.pt@gmail.com"">ac.c.essa.tmcar.dde.pt@gmail.com</a>
<a href=""mailto:a.cc.e.ssa.tmcardde.p.t@gmail.com"">a.cc.e.ssa.tmcardde.p.t@gmail.com</a>
<a href=""mailto:ac.ce.ss.a.t.mcar.d.d.e.pt@gmail.com"">ac.ce.ss.a.t.mcar.d.d.e.pt@gmail.com</a>
<a href=""mailto:acc.e.ss.at.m.car.dd.ept@gmail.com"">acc.e.ss.at.m.car.dd.ept@gmail.com</a>
<a href=""mailto:acc.es.sat.m.ca.r.dd.e.pt@gmail.com"">acc.es.sat.m.ca.r.dd.e.pt@gmail.com</a>
<a href=""mailto:a.cc.es.sa.tm.c.ar.ddep.t@gmail.com"">a.cc.es.sa.tm.c.ar.ddep.t@gmail.com</a>
<a href=""mailto:a.c.c.e.ss.a.tm.c.a.rd.d.ep.t@gmail.com"">a.c.c.e.ss.a.tm.c.a.rd.d.ep.t@gmail.com</a>
<a href=""mailto:acc.es.s.a.t.mcarddept@gmail.com"">acc.es.s.a.t.mcarddept@gmail.com</a>
<a href=""mailto:accessatm.ca.r.dde.pt@gmail.com"">accessatm.ca.r.dde.pt@gmail.com</a>
<a href=""mailto:acc.e.s.sa.t.mcar.ddep.t@gmail.com"">acc.e.s.sa.t.mcar.ddep.t@gmail.com</a>
<a href=""mailto:a.c.cessat.m.c.arddept@gmail.com"">a.c.cessat.m.c.arddept@gmail.com</a>
<a href=""mailto:a.c.ce.s.s.a.t.mc.a.rd.d.ep.t@gmail.com"">a.c.ce.s.s.a.t.mc.a.rd.d.ep.t@gmail.com</a>
<a href=""mailto:acc.e.ssa.t.m.c.a.r.ddept@gmail.com"">acc.e.ssa.t.m.c.a.r.ddept@gmail.com</a>
<a href=""mailto:a.cc.ess.a.t.m.c.ar.dde.p.t@gmail.com"">a.cc.ess.a.t.m.c.ar.dde.p.t@gmail.com</a>
<a href=""mailto:ac.ce.ssat.mc.a.rd.de.pt@gmail.com"">ac.ce.ssat.mc.a.rd.de.pt@gmail.com</a>
<a href=""mailto:a.c.c.e.s.s.a.tmca.rd.dep.t@gmail.com"">a.c.c.e.s.s.a.tmca.rd.dep.t@gmail.com</a>
<a href=""mailto:a.cc.essa.tmca.r.dde.p.t@gmail.com"">a.cc.essa.tmca.r.dde.p.t@gmail.com</a>
<a href=""mailto:ac.c.e.ssa.t.mc.a.r.d.de.pt@gmail.com"">ac.c.e.ssa.t.mc.a.r.d.de.pt@gmail.com</a>
<a href=""mailto:ac.c.es.s.a.tmcar.ddept@gmail.com"">ac.c.es.s.a.tmcar.ddept@gmail.com</a>
<a href=""mailto:ac.ces.s.atm.ca.rdde.pt@gmail.com"">ac.ces.s.atm.ca.rdde.pt@gmail.com</a>
<a href=""mailto:acc.e.ss.at.m.c.a.rd.d.ep.t@gmail.com"">acc.e.ss.at.m.c.a.rd.d.ep.t@gmail.com</a>
<a href=""mailto:a.c.c.es.s.a.tm.ca.r.d.de.p.t@gmail.com"">a.c.c.es.s.a.tm.ca.r.d.de.p.t@gmail.com</a>
<a href=""mailto:a.c.ce.s.sa.t.m.car.d.de.pt@gmail.com"">a.c.ce.s.sa.t.m.car.d.de.pt@gmail.com</a>
<a href=""mailto:a.ccessatmc.ardd.e.pt@gmail.com"">a.ccessatmc.ardd.e.pt@gmail.com</a>
<a href=""mailto:acc.es.s.a.tm.c.ardd.ept@gmail.com"">acc.es.s.a.tm.c.ardd.ept@gmail.com</a>
<a href=""mailto:a.cc.e.ssat.m.ca.rd.dep.t@gmail.com"">a.cc.e.ssat.m.ca.rd.dep.t@gmail.com</a>
<a href=""mailto:acc.essatm.car.ddep.t@gmail.com"">acc.essatm.car.ddep.t@gmail.com</a>
<a href=""mailto:a.c.ce.s.sa.t.m.c.ard.de.pt@gmail.com"">a.c.ce.s.sa.t.m.c.ard.de.pt@gmail.com</a>
<a href=""mailto:a.cce.s.s.at.m.c.ard.dept@gmail.com"">a.cce.s.s.at.m.c.ard.dept@gmail.com</a>
<a href=""mailto:a.c.ce.ss.a.t.m.ca.rddep.t@gmail.com"">a.c.ce.ss.a.t.m.ca.rddep.t@gmail.com</a>
<a href=""mailto:acc.e.s.satmca.rdde.p.t@gmail.com"">acc.e.s.satmca.rdde.p.t@gmail.com</a>
<a href=""mailto:a.c.c.e.s.sa.tmc.a.r.d.d.e.p.t@gmail.com"">a.c.c.e.s.sa.tmc.a.r.d.d.e.p.t@gmail.com</a>
<a href=""mailto:acce.s.sa.tmca.r.d.d.e.pt@gmail.com"">acce.s.sa.tmca.r.d.d.e.pt@gmail.com</a>
<a href=""mailto:a.cc.es.s.at.mcardd.e.p.t@gmail.com"">a.cc.es.s.at.mcardd.e.p.t@gmail.com</a>
<a href=""mailto:acce.s.sat.mca.rd.dept@gmail.com"">acce.s.sat.mca.rd.dept@gmail.com</a>
<a href=""mailto:ac.c.es.s.atmc.a.rd.dep.t@gmail.com"">ac.c.es.s.atmc.a.rd.dep.t@gmail.com</a>
<a href=""mailto:acc.ess.a.tm.c.ar.d.de.p.t@gmail.com"">acc.ess.a.tm.c.ar.d.de.p.t@gmail.com</a>
<a href=""mailto:ac.ce.ss.a.t.mca.r.dd.ep.t@gmail.com"">ac.ce.ss.a.t.mca.r.dd.ep.t@gmail.com</a>
<a href=""mailto:ac.ce.ssat.m.ca.rdd.e.p.t@gmail.com"">ac.ce.ssat.m.ca.rdd.e.p.t@gmail.com</a>
<a href=""mailto:a.c.ce.s.sa.tmca.r.d.d.ep.t@gmail.com"">a.c.ce.s.sa.tmca.r.d.d.ep.t@gmail.com</a>
<a href=""mailto:a.cc.e.s.satmc.a.r.d.dep.t@gmail.com"">a.cc.e.s.satmc.a.r.d.dep.t@gmail.com</a>
<a href=""mailto:ac.ce.s.s.at.mcar.ddept@gmail.com"">ac.ce.s.s.at.mcar.ddept@gmail.com</a>
<a href=""mailto:a.cc.es.sa.t.mc.a.r.d.d.ep.t@gmail.com"">a.cc.es.sa.t.mc.a.r.d.d.ep.t@gmail.com</a>
<a href=""mailto:ac.ce.ss.atm.cardde.pt@gmail.com"">ac.ce.ss.atm.cardde.pt@gmail.com</a>
<a href=""mailto:a.cc.es.sat.m.car.d.d.e.pt@gmail.com"">a.cc.es.sat.m.car.d.d.e.pt@gmail.com</a>
<a href=""mailto:a.cc.e.s.sa.t.mc.ar.d.de.p.t@gmail.com"">a.cc.e.s.sa.t.mc.ar.d.de.p.t@gmail.com</a>
<a href=""mailto:a.ccessa.t.m.ca.rdd.ep.t@gmail.com"">a.ccessa.t.m.ca.rdd.ep.t@gmail.com</a>
<a href=""mailto:a.c.c.e.ss.a.t.m.card.de.p.t@gmail.com"">a.c.c.e.ss.a.t.m.card.de.p.t@gmail.com</a>
<a href=""mailto:a.cces.s.at.m.c.ardd.e.pt@gmail.com"">a.cces.s.at.m.c.ardd.e.pt@gmail.com</a>
<a href=""mailto:a.cc.es.s.a.t.mca.r.ddept@gmail.com"">a.cc.es.s.a.t.mca.r.ddept@gmail.com</a>
<a href=""mailto:acces.sa.t.mca.r.ddept@gmail.com"">acces.sa.t.mca.r.ddept@gmail.com</a>
<a href=""mailto:ac.ces.sa.tmca.rddept@gmail.com"">ac.ces.sa.tmca.rddept@gmail.com</a>
<a href=""mailto:a.cces.satmc.a.rd.d.ep.t@gmail.com"">a.cces.satmc.a.rd.d.ep.t@gmail.com</a>
<a href=""mailto:ac.c.e.s.s.atm.ca.r.d.de.pt@gmail.com"">ac.c.e.s.s.atm.ca.r.d.de.pt@gmail.com</a>
<a href=""mailto:acc.essat.m.ca.r.d.dep.t@gmail.com"">acc.essat.m.ca.r.d.dep.t@gmail.com</a>
<a href=""mailto:acce.ss.a.t.mc.ardd.e.p.t@gmail.com"">acce.ss.a.t.mc.ardd.e.p.t@gmail.com</a>
<a href=""mailto:ac.c.e.ss.a.tmc.ard.d.e.p.t@gmail.com"">ac.c.e.ss.a.tmc.ard.d.e.p.t@gmail.com</a>
<a href=""mailto:a.c.c.ess.a.t.m.c.ar.d.dep.t@gmail.com"">a.c.c.ess.a.t.m.c.ar.d.dep.t@gmail.com</a>
<a href=""mailto:ac.ce.ssa.t.m.c.a.rdd.ept@gmail.com"">ac.ce.ssa.t.m.c.a.rdd.ept@gmail.com</a>
<a href=""mailto:accessa.tmc.ar.d.de.p.t@gmail.com"">accessa.tmc.ar.d.de.p.t@gmail.com</a>
<a href=""mailto:a.cc.ess.at.mca.r.dde.pt@gmail.com"">a.cc.ess.at.mca.r.dde.pt@gmail.com</a>
<a href=""mailto:a.cce.ssa.t.m.car.d.d.ept@gmail.com"">a.cce.ssa.t.m.car.d.d.ept@gmail.com</a>
<a href=""mailto:acc.es.s.at.m.car.dde.p.t@gmail.com"">acc.es.s.at.m.car.dde.p.t@gmail.com</a>
<a href=""mailto:a.c.ce.ssa.tm.c.a.rdde.pt@gmail.com"">a.c.ce.ssa.tm.c.a.rdde.pt@gmail.com</a>
<a href=""mailto:a.c.ce.s.satm.ca.r.dd.e.p.t@gmail.com"">a.c.ce.s.satm.ca.r.dd.e.p.t@gmail.com</a>
<a href=""mailto:acc.e.ss.a.t.mcar.d.d.e.pt@gmail.com"">acc.e.ss.a.t.mcar.d.d.e.pt@gmail.com</a>
<a href=""mailto:a.cc.essa.tmca.rdde.p.t@gmail.com"">a.cc.essa.tmca.rdde.p.t@gmail.com</a>
<a href=""mailto:ac.c.e.ss.atm.c.ard.d.ep.t@gmail.com"">ac.c.e.ss.atm.c.ard.d.ep.t@gmail.com</a>
<a href=""mailto:ac.ces.sa.tm.ca.r.dde.pt@gmail.com"">ac.ces.sa.tm.ca.r.dde.pt@gmail.com</a>
<a href=""mailto:ac.c.e.ssa.t.m.card.de.pt@gmail.com"">ac.c.e.ssa.t.m.card.de.pt@gmail.com</a>
<a href=""mailto:a.ccessatm.c.ar.d.d.e.p.t@gmail.com"">a.ccessatm.c.ar.d.d.e.p.t@gmail.com</a>
<a href=""mailto:acc.es.s.a.t.m.ca.rd.de.pt@gmail.com"">acc.es.s.a.t.m.ca.rd.de.pt@gmail.com</a>
<a href=""mailto:a.cc.e.ss.a.tm.car.d.d.ept@gmail.com"">a.cc.e.ss.a.tm.car.d.d.ept@gmail.com</a>
<a href=""mailto:a.cc.e.s.s.a.t.m.car.dd.e.pt@gmail.com"">a.cc.e.s.s.a.t.m.car.dd.e.pt@gmail.com</a>
<a href=""mailto:a.c.c.es.satmc.ar.d.de.p.t@gmail.com"">a.c.c.es.satmc.ar.d.de.p.t@gmail.com</a>
<a href=""mailto:acces.sa.tm.c.a.r.d.d.e.p.t@gmail.com"">acces.sa.tm.c.a.r.d.d.e.p.t@gmail.com</a>
<a href=""mailto:acc.ess.a.t.m.car.d.de.p.t@gmail.com"">acc.ess.a.t.m.car.d.de.p.t@gmail.com</a>
<a href=""mailto:acce.s.s.at.m.ca.rdd.e.pt@gmail.com"">acce.s.s.at.m.ca.rdd.e.pt@gmail.com</a>
<a href=""mailto:a.c.cessatmc.ard.d.e.p.t@gmail.com"">a.c.cessatmc.ard.d.e.p.t@gmail.com</a>
<a href=""mailto:ac.c.ess.a.t.m.c.ar.d.d.e.pt@gmail.com"">ac.c.ess.a.t.m.c.ar.d.d.e.pt@gmail.com</a>
<a href=""mailto:ac.c.es.s.atmca.rdd.ept@gmail.com"">ac.c.es.s.atmca.rdd.ept@gmail.com</a>
<a href=""mailto:a.c.c.e.s.s.at.m.ca.r.d.de.p.t@gmail.com"">a.c.c.e.s.s.at.m.ca.r.d.de.p.t@gmail.com</a>
<a href=""mailto:a.cces.s.a.t.mcardd.ept@gmail.com"">a.cces.s.a.t.mcardd.ept@gmail.com</a>
<a href=""mailto:ac.ce.s.sa.tm.c.a.rdd.e.pt@gmail.com"">ac.ce.s.sa.tm.c.a.rdd.e.pt@gmail.com</a>
<a href=""mailto:acc.e.ssa.t.mca.rd.de.p.t@gmail.com"">acc.e.ssa.t.mca.rd.de.p.t@gmail.com</a>
<a href=""mailto:a.cc.e.ss.atm.c.ar.dde.pt@gmail.com"">a.cc.e.ss.atm.c.ar.dde.pt@gmail.com</a>
<a href=""mailto:a.cces.s.a.t.mc.ardde.p.t@gmail.com"">a.cces.s.a.t.mc.ardde.p.t@gmail.com</a>
<a href=""mailto:acce.s.s.at.m.c.a.rd.d.ep.t@gmail.com"">acce.s.s.at.m.c.a.rd.d.ep.t@gmail.com</a>
<a href=""mailto:acces.sa.t.m.c.ar.d.dep.t@gmail.com"">acces.sa.t.m.c.ar.d.dep.t@gmail.com</a>
<a href=""mailto:a.c.c.ess.atm.car.d.de.p.t@gmail.com"">a.c.c.ess.atm.car.d.de.p.t@gmail.com</a>
<a href=""mailto:access.a.tmc.a.r.ddept@gmail.com"">access.a.tmc.a.r.ddept@gmail.com</a>
<a href=""mailto:a.c.c.e.ss.at.mc.ar.d.dep.t@gmail.com"">a.c.c.e.ss.at.mc.ar.d.dep.t@gmail.com</a>
<a href=""mailto:a.cc.es.satmc.ard.d.ept@gmail.com"">a.cc.es.satmc.ard.d.ept@gmail.com</a>
<a href=""mailto:a.cc.essa.tmc.a.r.ddept@gmail.com"">a.cc.essa.tmc.a.r.ddept@gmail.com</a>
<a href=""mailto:ac.ce.s.s.a.t.m.c.ard.dept@gmail.com"">ac.ce.s.s.a.t.m.c.ard.dept@gmail.com</a>
<a href=""mailto:a.c.cess.atm.c.ar.d.de.p.t@gmail.com"">a.c.cess.atm.c.ar.d.de.p.t@gmail.com</a>
<a href=""mailto:a.c.c.essatm.c.a.rd.d.e.pt@gmail.com"">a.c.c.essatm.c.a.rd.d.e.pt@gmail.com</a>
<a href=""mailto:a.ccess.a.t.mcar.ddep.t@gmail.com"">a.ccess.a.t.mcar.ddep.t@gmail.com</a>
<a href=""mailto:acce.s.sa.tm.card.d.ep.t@gmail.com"">acce.s.sa.tm.card.d.ep.t@gmail.com</a>
<a href=""mailto:ac.cess.a.t.mc.ar.dde.pt@gmail.com"">ac.cess.a.t.mc.ar.dde.pt@gmail.com</a>
<a href=""mailto:acc.e.s.s.a.t.mc.ar.d.d.e.p.t@gmail.com"">acc.e.s.s.a.t.mc.ar.d.d.e.p.t@gmail.com</a>
<a href=""mailto:a.cce.s.satm.c.a.r.d.d.e.pt@gmail.com"">a.cce.s.satm.c.a.r.d.d.e.pt@gmail.com</a>
<a href=""mailto:a.ccessa.tmcar.d.d.ept@gmail.com"">a.ccessa.tmcar.d.d.ept@gmail.com</a>
<a href=""mailto:a.cc.essatm.ca.r.d.d.e.pt@gmail.com"">a.cc.essatm.ca.r.d.d.e.pt@gmail.com</a>
<a href=""mailto:a.cce.s.sat.m.c.a.rdde.pt@gmail.com"">a.cce.s.sat.m.c.a.rdde.pt@gmail.com</a>
<a href=""mailto:ac.c.essat.mca.rdd.ep.t@gmail.com"">ac.c.essat.mca.rdd.ep.t@gmail.com</a>
<a href=""mailto:a.cc.es.sat.m.c.a.r.dde.p.t@gmail.com"">a.cc.es.sat.m.c.a.r.dde.p.t@gmail.com</a>
<a href=""mailto:access.a.tm.card.d.e.pt@gmail.com"">access.a.tm.card.d.e.pt@gmail.com</a>
<a href=""mailto:ac.c.es.s.a.tmc.a.r.dde.p.t@gmail.com"">ac.c.es.s.a.tmc.a.r.dde.p.t@gmail.com</a>
<a href=""mailto:ac.ces.s.a.t.mcar.ddept@gmail.com"">ac.ces.s.a.t.mcar.ddept@gmail.com</a>
<a href=""mailto:a.cc.e.s.sa.tm.card.d.e.pt@gmail.com"">a.cc.e.s.sa.tm.card.d.e.pt@gmail.com</a>
<a href=""mailto:a.c.ces.s.a.tm.car.ddept@gmail.com"">a.c.ces.s.a.tm.car.ddept@gmail.com</a>
<a href=""mailto:ac.c.e.s.sa.tm.c.a.r.d.d.ep.t@gmail.com"">ac.c.e.s.sa.tm.c.a.r.d.d.ep.t@gmail.com</a>
<a href=""mailto:a.c.ce.ss.a.t.m.car.d.de.p.t@gmail.com"">a.c.ce.ss.a.t.m.car.d.de.p.t@gmail.com</a>
<a href=""mailto:a.cc.ess.at.m.c.ar.d.d.ep.t@gmail.com"">a.cc.ess.at.m.c.ar.d.d.ep.t@gmail.com</a>
<a href=""mailto:a.c.ce.ssa.t.m.ca.r.ddept@gmail.com"">a.c.ce.ssa.t.m.ca.r.ddept@gmail.com</a>
<a href=""mailto:a.cce.ss.atm.car.d.de.pt@gmail.com"">a.cce.ss.atm.car.d.de.pt@gmail.com</a>
<a href=""mailto:acc.ess.at.m.car.dde.p.t@gmail.com"">acc.ess.at.m.car.dde.p.t@gmail.com</a>
<a href=""mailto:a.c.c.e.ss.atm.c.a.r.dd.ept@gmail.com"">a.c.c.e.ss.atm.c.a.r.dd.ept@gmail.com</a>
<a href=""mailto:ac.c.es.sa.t.mcard.d.e.pt@gmail.com"">ac.c.es.sa.t.mcard.d.e.pt@gmail.com</a>
<a href=""mailto:ac.ce.ssa.tmc.a.r.d.d.e.p.t@gmail.com"">ac.ce.ssa.tmc.a.r.d.d.e.p.t@gmail.com</a>
<a href=""mailto:acces.sa.t.mca.r.ddep.t@gmail.com"">acces.sa.t.mca.r.ddep.t@gmail.com</a>
<a href=""mailto:a.c.c.e.s.s.atmca.rdd.ep.t@gmail.com"">a.c.c.e.s.s.atmca.rdd.ep.t@gmail.com</a>
<a href=""mailto:ac.c.essa.t.m.ca.r.dde.pt@gmail.com"">ac.c.essa.t.m.ca.r.dde.pt@gmail.com</a>
<a href=""mailto:acc.e.ssa.tm.ca.rd.d.ep.t@gmail.com"">acc.e.ssa.tm.ca.rd.d.ep.t@gmail.com</a>
<a href=""mailto:acces.sat.mca.rdd.ep.t@gmail.com"">acces.sat.mca.rdd.ep.t@gmail.com</a>
<a href=""mailto:ac.ce.ssa.t.mc.a.rdd.ep.t@gmail.com"">ac.ce.ssa.t.mc.a.rdd.ep.t@gmail.com</a>
<a href=""mailto:a.c.c.e.ss.a.t.mca.r.dd.ept@gmail.com"">a.c.c.e.ss.a.t.mca.r.dd.ept@gmail.com</a>
<a href=""mailto:a.cce.ssat.m.car.d.d.ept@gmail.com"">a.cce.ssat.m.car.d.d.ept@gmail.com</a>
<a href=""mailto:a.cc.es.s.atm.c.a.rddep.t@gmail.com"">a.cc.es.s.atm.c.a.rddep.t@gmail.com</a>
<a href=""mailto:a.cces.sa.tm.c.a.r.d.d.ept@gmail.com"">a.cces.sa.tm.c.a.r.d.d.ept@gmail.com</a>
<a href=""mailto:ac.ce.ss.at.mc.a.r.ddept@gmail.com"">ac.ce.ss.at.mc.a.r.ddept@gmail.com</a>
<a href=""mailto:ac.c.es.sa.t.mcardde.p.t@gmail.com"">ac.c.es.sa.t.mcardde.p.t@gmail.com</a>
<a href=""mailto:acc.e.ssa.tmc.ar.d.d.e.pt@gmail.com"">acc.e.ssa.tmc.ar.d.d.e.pt@gmail.com</a>
<a href=""mailto:a.c.ce.s.s.a.tmcar.dde.p.t@gmail.com"">a.c.ce.s.s.a.tmcar.dde.p.t@gmail.com</a>
<a href=""mailto:a.cc.e.ssa.t.m.ca.r.d.d.e.pt@gmail.com"">a.cc.e.ssa.t.m.ca.r.d.d.e.pt@gmail.com</a>
<a href=""mailto:acces.sa.t.m.c.a.rdde.pt@gmail.com"">acces.sa.t.m.c.a.rdde.pt@gmail.com</a>
<a href=""mailto:acc.e.ssatmcar.ddep.t@gmail.com"">acc.e.ssatmcar.ddep.t@gmail.com</a>
<a href=""mailto:a.c.cess.at.mc.a.rdde.p.t@gmail.com"">a.c.cess.at.mc.a.rdde.p.t@gmail.com</a>
<a href=""mailto:ac.ces.satmca.rd.d.e.pt@gmail.com"">ac.ces.satmca.rd.d.e.pt@gmail.com</a>
<a href=""mailto:acc.e.s.s.atm.c.a.rd.d.e.p.t@gmail.com"">acc.e.s.s.atm.c.a.rd.d.e.p.t@gmail.com</a>
<a href=""mailto:ac.c.e.s.s.a.t.m.c.ardde.p.t@gmail.com"">ac.c.e.s.s.a.t.m.c.ardde.p.t@gmail.com</a>
<a href=""mailto:a.c.c.ess.atm.ca.r.d.de.p.t@gmail.com"">a.c.c.ess.atm.ca.r.d.de.p.t@gmail.com</a>
<a href=""mailto:a.cce.s.sa.tmcar.d.d.ep.t@gmail.com"">a.cce.s.sa.tmcar.d.d.ep.t@gmail.com</a>
<a href=""mailto:acc.es.s.a.tmca.rdd.ep.t@gmail.com"">acc.es.s.a.tmca.rdd.ep.t@gmail.com</a>
<a href=""mailto:a.cces.s.a.tm.c.ardd.ep.t@gmail.com"">a.cces.s.a.tm.c.ardd.ep.t@gmail.com</a>
<a href=""mailto:ac.ces.s.atmc.a.rd.dep.t@gmail.com"">ac.ces.s.atmc.a.rd.dep.t@gmail.com</a>
<a href=""mailto:acce.s.s.atmca.r.ddept@gmail.com"">acce.s.s.atmca.r.ddept@gmail.com</a>
<a href=""mailto:acc.es.sa.t.mc.ar.d.d.ep.t@gmail.com"">acc.es.sa.t.mc.ar.d.d.ep.t@gmail.com</a>
<a href=""mailto:a.c.c.e.s.s.a.t.m.ca.rddep.t@gmail.com"">a.c.c.e.s.s.a.t.m.ca.rddep.t@gmail.com</a>
<a href=""mailto:a.cc.ess.at.m.c.ar.ddept@gmail.com"">a.cc.ess.at.m.c.ar.ddept@gmail.com</a>
<a href=""mailto:a.cce.s.s.a.t.m.c.a.rd.d.e.p.t@gmail.com"">a.cce.s.s.a.t.m.c.a.rd.d.e.p.t@gmail.com</a>
<a href=""mailto:ac.ce.s.sa.t.m.car.dd.ep.t@gmail.com"">ac.ce.s.sa.t.m.car.dd.ep.t@gmail.com</a>
<a href=""mailto:acces.s.a.t.mc.a.r.d.d.e.p.t@gmail.com"">acces.s.a.t.mc.a.r.d.d.e.p.t@gmail.com</a>
<a href=""mailto:ac.c.e.s.sa.t.mcardd.ept@gmail.com"">ac.c.e.s.sa.t.mcardd.ept@gmail.com</a>
<a href=""mailto:a.cc.es.satm.car.d.d.e.p.t@gmail.com"">a.cc.es.satm.car.d.d.e.p.t@gmail.com</a>
<a href=""mailto:a.c.ce.ss.a.tmc.ar.d.d.ep.t@gmail.com"">a.c.ce.ss.a.tmc.ar.d.d.ep.t@gmail.com</a>
<a href=""mailto:a.cc.es.s.a.tm.c.a.r.d.d.ep.t@gmail.com"">a.cc.es.s.a.tm.c.a.r.d.d.ep.t@gmail.com</a>
<a href=""mailto:a.c.c.e.s.s.a.tm.c.a.r.d.d.e.pt@gmail.com"">a.c.c.e.s.s.a.tm.c.a.r.d.d.e.pt@gmail.com</a>
<a href=""mailto:access.atm.cardde.p.t@gmail.com"">access.atm.cardde.p.t@gmail.com</a>
<a href=""mailto:acc.es.s.atmca.rdd.ep.t@gmail.com"">acc.es.s.atmca.rdd.ep.t@gmail.com</a>
<a href=""mailto:a.cces.s.a.tmca.r.dde.pt@gmail.com"">a.cces.s.a.tmca.r.dde.pt@gmail.com</a>
<a href=""mailto:acce.ss.a.t.m.car.dde.p.t@gmail.com"">acce.ss.a.t.m.car.dde.p.t@gmail.com</a>
<a href=""mailto:a.cc.essa.tm.c.ar.ddep.t@gmail.com"">a.cc.essa.tm.c.ar.ddep.t@gmail.com</a>
<a href=""mailto:ac.cess.a.tm.car.d.d.e.pt@gmail.com"">ac.cess.a.tm.car.d.d.e.pt@gmail.com</a>
<a href=""mailto:a.cces.sat.mca.r.dde.pt@gmail.com"">a.cces.sat.mca.r.dde.pt@gmail.com</a>
<a href=""mailto:a.cc.e.ssat.mc.ar.dd.e.pt@gmail.com"">a.cc.e.ssat.mc.ar.dd.e.pt@gmail.com</a>
<a href=""mailto:ac.c.essa.t.mc.ard.d.ept@gmail.com"">ac.c.essa.t.mc.ard.d.ept@gmail.com</a>
<a href=""mailto:a.cc.ess.a.t.mc.ar.d.d.ep.t@gmail.com"">a.cc.ess.a.t.mc.ar.d.d.ep.t@gmail.com</a>
<a href=""mailto:acce.ss.a.tmc.ardde.p.t@gmail.com"">acce.ss.a.tmc.ardde.p.t@gmail.com</a>
<a href=""mailto:a.cc.ess.a.tmcard.d.e.pt@gmail.com"">a.cc.ess.a.tmcard.d.e.pt@gmail.com</a>
<a href=""mailto:ac.c.e.ss.a.t.mc.ard.de.pt@gmail.com"">ac.c.e.ss.a.t.mc.ard.de.pt@gmail.com</a>
<a href=""mailto:ac.c.es.sa.tm.c.a.rd.dept@gmail.com"">ac.c.es.sa.tm.c.a.rd.dept@gmail.com</a>
<a href=""mailto:acc.essat.mcarddept@gmail.com"">acc.essat.mcarddept@gmail.com</a>
<a href=""mailto:a.cc.ess.a.t.m.c.a.rdd.e.p.t@gmail.com"">a.cc.ess.a.t.m.c.a.rdd.e.p.t@gmail.com</a>
<a href=""mailto:a.cc.essa.tmc.a.r.d.dept@gmail.com"">a.cc.essa.tmc.a.r.d.dept@gmail.com</a>
<a href=""mailto:acc.e.s.sa.tmc.a.r.ddept@gmail.com"">acc.e.s.sa.tmc.a.r.ddept@gmail.com</a>
<a href=""mailto:a.cc.e.s.sat.mca.r.d.dep.t@gmail.com"">a.cc.e.s.sat.mca.r.d.dep.t@gmail.com</a>
<a href=""mailto:ac.ces.s.a.tmc.a.r.d.dep.t@gmail.com"">ac.ces.s.a.tmc.a.r.d.dep.t@gmail.com</a>
<a href=""mailto:acc.es.sa.t.m.c.a.r.d.dep.t@gmail.com"">acc.es.sa.t.m.c.a.r.d.dep.t@gmail.com</a>
<a href=""mailto:acce.s.s.at.mcardde.pt@gmail.com"">acce.s.s.at.mcardde.pt@gmail.com</a>
<a href=""mailto:a.c.c.es.satm.ca.r.dde.p.t@gmail.com"">a.c.c.es.satm.ca.r.dde.p.t@gmail.com</a>
<a href=""mailto:a.c.ce.ssatm.c.a.r.ddep.t@gmail.com"">a.c.ce.ssatm.c.a.r.ddep.t@gmail.com</a>
<a href=""mailto:a.c.c.e.s.s.atmcar.dde.p.t@gmail.com"">a.c.c.e.s.s.atmcar.dde.p.t@gmail.com</a>
<a href=""mailto:a.c.ce.ss.at.mcar.d.de.pt@gmail.com"">a.c.ce.ss.at.mcar.d.de.pt@gmail.com</a>
<a href=""mailto:a.c.ces.s.a.tmcarddept@gmail.com"">a.c.ces.s.a.tmcarddept@gmail.com</a>
<a href=""mailto:acce.ss.at.mc.a.r.dd.ept@gmail.com"">acce.ss.at.mc.a.r.dd.ept@gmail.com</a>
<a href=""mailto:ac.ce.s.s.a.tmcarddep.t@gmail.com"">ac.ce.s.s.a.tmcarddep.t@gmail.com</a>
<a href=""mailto:a.c.cess.a.t.mca.r.d.de.pt@gmail.com"">a.c.cess.a.t.mca.r.d.de.pt@gmail.com</a>
<a href=""mailto:a.cc.e.s.satmc.a.rd.de.p.t@gmail.com"">a.cc.e.s.satmc.a.rd.de.p.t@gmail.com</a>
<a href=""mailto:acce.ss.atm.c.a.rdde.pt@gmail.com"">acce.ss.atm.c.a.rdde.pt@gmail.com</a>
<a href=""mailto:ser.e.f..s.e.r.o202.0@gmail.com"">ser.e.f..s.e.r.o202.0@gmail.com</a>
<a href=""mailto:s.er.e.f...s.e.ro.2.0.2.0@gmail.com"">s.er.e.f...s.e.ro.2.0.2.0@gmail.com</a>
<a href=""mailto:sere.f...se.ro.2.0.2.0@gmail.com"">sere.f...se.ro.2.0.2.0@gmail.com</a>
<a href=""mailto:seref.s.e.r.o2.02.0@gmail.com"">seref.s.e.r.o2.02.0@gmail.com</a>
<a href=""mailto:se.ref..s.ero2.0.2.0@gmail.com"">se.ref..s.ero2.0.2.0@gmail.com</a>
<a href=""mailto:ser.e.f...sero.2.020@gmail.com"">ser.e.f...sero.2.020@gmail.com</a>
<a href=""mailto:se.r.ef..s.er.o202.0@gmail.com"">se.r.ef..s.er.o202.0@gmail.com</a>
<a href=""mailto:s.er.e.f.se.ro.20.20@gmail.com"">s.er.e.f.se.ro.20.20@gmail.com</a>
<a href=""mailto:se.r.e.f..s.er.o2.020@gmail.com"">se.r.e.f..s.er.o2.020@gmail.com</a>
<a href=""mailto:s.e.r.ef...s.ero.20.20@gmail.com"">s.e.r.ef...s.ero.20.20@gmail.com</a>
<a href=""mailto:se.r.ef..sero.202.0@gmail.com"">se.r.ef..sero.202.0@gmail.com</a>
<a href=""mailto:se.ref...ser.o2.0.2.0@gmail.com"">se.ref...ser.o2.0.2.0@gmail.com</a>
<a href=""mailto:seref...ser.o2.02.0@gmail.com"">seref...ser.o2.02.0@gmail.com</a>
<a href=""mailto:sere.f.s.e.ro2.0.2.0@gmail.com"">sere.f.s.e.ro2.0.2.0@gmail.com</a>
<a href=""mailto:s.eref...ser.o.2.0.20@gmail.com"">s.eref...ser.o.2.0.20@gmail.com</a>
<a href=""mailto:ser.e.f.s.e.ro.2020@gmail.com"">ser.e.f.s.e.ro.2020@gmail.com</a>
<a href=""mailto:s.e.re.f..s.e.ro20.20@gmail.com"">s.e.re.f..s.e.ro20.20@gmail.com</a>
<a href=""mailto:s.ere.f..s.e.ro.20.2.0@gmail.com"">s.ere.f..s.e.ro.20.2.0@gmail.com</a>
<a href=""mailto:s.e.r.e.f...s.e.r.o2.020@gmail.com"">s.e.r.e.f...s.e.r.o2.020@gmail.com</a>
<a href=""mailto:sere.f...s.ero2020@gmail.com"">sere.f...s.ero2020@gmail.com</a>
<a href=""mailto:s.e.r.ef.se.r.o.2.0.20@gmail.com"">s.e.r.ef.se.r.o.2.0.20@gmail.com</a>
<a href=""mailto:s.e.r.e.f.s.er.o2.0.20@gmail.com"">s.e.r.e.f.s.er.o2.0.20@gmail.com</a>
<a href=""mailto:ser.ef..se.ro.2.02.0@gmail.com"">ser.ef..se.ro.2.02.0@gmail.com</a>
<a href=""mailto:sere.f.s.ero2.0.2.0@gmail.com"">sere.f.s.ero2.0.2.0@gmail.com</a>
<a href=""mailto:s.ere.f.ser.o.20.20@gmail.com"">s.ere.f.ser.o.20.20@gmail.com</a>
<a href=""mailto:seref..se.r.o.2.020@gmail.com"">seref..se.r.o.2.020@gmail.com</a>
<a href=""mailto:sere.f..s.er.o202.0@gmail.com"">sere.f..s.er.o202.0@gmail.com</a>
<a href=""mailto:s.ere.f..s.e.r.o2.0.20@gmail.com"">s.ere.f..s.e.r.o2.0.20@gmail.com</a>
<a href=""mailto:s.e.ref..s.e.ro2.020@gmail.com"">s.e.ref..s.e.ro2.020@gmail.com</a>
<a href=""mailto:ser.e.f..se.r.o.20.20@gmail.com"">ser.e.f..se.r.o.20.20@gmail.com</a>
<a href=""mailto:s.e.re.f...sero.202.0@gmail.com"">s.e.re.f...sero.202.0@gmail.com</a>
<a href=""mailto:s.e.ref.s.ero.2.0.2.0@gmail.com"">s.e.ref.s.ero.2.0.2.0@gmail.com</a>
<a href=""mailto:se.re.f...se.r.o.2.02.0@gmail.com"">se.re.f...se.r.o.2.02.0@gmail.com</a>
<a href=""mailto:s.e.r.ef..s.ero.20.20@gmail.com"">s.e.r.ef..s.ero.20.20@gmail.com</a>
<a href=""mailto:se.r.ef...se.r.o.20.2.0@gmail.com"">se.r.ef...se.r.o.20.2.0@gmail.com</a>
<a href=""mailto:ser.ef..ser.o202.0@gmail.com"">ser.ef..ser.o202.0@gmail.com</a>
<a href=""mailto:seref..s.e.ro.20.2.0@gmail.com"">seref..s.e.ro.20.2.0@gmail.com</a>
<a href=""mailto:s.e.re.f..ser.o2.02.0@gmail.com"">s.e.re.f..ser.o2.02.0@gmail.com</a>
<a href=""mailto:se.r.e.f.s.ero.2.0.2.0@gmail.com"">se.r.e.f.s.ero.2.0.2.0@gmail.com</a>
<a href=""mailto:s.ere.f..s.ero.2020@gmail.com"">s.ere.f..s.ero.2020@gmail.com</a>
<a href=""mailto:s.er.ef.s.e.ro.202.0@gmail.com"">s.er.ef.s.e.ro.202.0@gmail.com</a>
<a href=""mailto:se.ref..s.e.r.o20.20@gmail.com"">se.ref..s.e.r.o20.20@gmail.com</a>
<a href=""mailto:ser.ef...s.ero.20.2.0@gmail.com"">ser.ef...s.ero.20.2.0@gmail.com</a>
<a href=""mailto:se.ref..s.ero202.0@gmail.com"">se.ref..s.ero202.0@gmail.com</a>
<a href=""mailto:s.e.r.e.f..se.r.o.2020@gmail.com"">s.e.r.e.f..se.r.o.2020@gmail.com</a>
<a href=""mailto:seref...s.ero2.02.0@gmail.com"">seref...s.ero2.02.0@gmail.com</a>
<a href=""mailto:se.re.f...s.e.ro2.02.0@gmail.com"">se.re.f...s.e.ro2.02.0@gmail.com</a>
<a href=""mailto:ser.ef..se.r.o2.020@gmail.com"">ser.ef..se.r.o2.020@gmail.com</a>
<a href=""mailto:se.r.ef...ser.o20.20@gmail.com"">se.r.ef...ser.o20.20@gmail.com</a>
<a href=""mailto:s.er.ef..s.e.r.o.2.020@gmail.com"">s.er.ef..s.e.r.o.2.020@gmail.com</a>
<a href=""mailto:se.r.ef...s.ero.2.0.20@gmail.com"">se.r.ef...s.ero.2.0.20@gmail.com</a>
<a href=""mailto:seref..se.ro.2.0.20@gmail.com"">seref..se.ro.2.0.20@gmail.com</a>
<a href=""mailto:sere.f..ser.o.2.0.2.0@gmail.com"">sere.f..ser.o.2.0.2.0@gmail.com</a>
<a href=""mailto:s.ere.f..s.ero.2.02.0@gmail.com"">s.ere.f..s.ero.2.02.0@gmail.com</a>
<a href=""mailto:s.ere.f.s.er.o2020@gmail.com"">s.ere.f.s.er.o2020@gmail.com</a>
<a href=""mailto:s.eref.s.e.ro202.0@gmail.com"">s.eref.s.e.ro202.0@gmail.com</a>
<a href=""mailto:se.r.ef..ser.o2020@gmail.com"">se.r.ef..ser.o2020@gmail.com</a>
<a href=""mailto:s.e.ref.s.e.r.o.2.0.2.0@gmail.com"">s.e.ref.s.e.r.o.2.0.2.0@gmail.com</a>
<a href=""mailto:sere.f.s.e.ro.20.2.0@gmail.com"">sere.f.s.e.ro.20.2.0@gmail.com</a>
<a href=""mailto:se.ref...s.e.r.o.2.0.20@gmail.com"">se.ref...s.e.r.o.2.0.20@gmail.com</a>
<a href=""mailto:s.e.r.ef...s.e.ro.2.0.2.0@gmail.com"">s.e.r.ef...s.e.ro.2.0.2.0@gmail.com</a>
<a href=""mailto:s.e.r.e.f..ser.o.2.0.2.0@gmail.com"">s.e.r.e.f..ser.o.2.0.2.0@gmail.com</a>
<a href=""mailto:s.e.r.ef.se.ro.202.0@gmail.com"">s.e.r.ef.se.ro.202.0@gmail.com</a>
<a href=""mailto:s.eref..se.ro.2020@gmail.com"">s.eref..se.ro.2020@gmail.com</a>
<a href=""mailto:se.ref..sero.2020@gmail.com"">se.ref..sero.2020@gmail.com</a>
<a href=""mailto:s.e.r.e.f..s.ero.2.0.2.0@gmail.com"">s.e.r.e.f..s.ero.2.0.2.0@gmail.com</a>
<a href=""mailto:seref...s.e.r.o202.0@gmail.com"">seref...s.e.r.o202.0@gmail.com</a>
<a href=""mailto:s.er.ef...s.ero2.020@gmail.com"">s.er.ef...s.ero2.020@gmail.com</a>
<a href=""mailto:ser.e.f...se.r.o2.0.20@gmail.com"">ser.e.f...se.r.o2.0.20@gmail.com</a>
<a href=""mailto:s.ere.f..se.r.o2.020@gmail.com"">s.ere.f..se.r.o2.020@gmail.com</a>
<a href=""mailto:s.eref..s.e.r.o2.0.20@gmail.com"">s.eref..s.e.r.o2.0.20@gmail.com</a>
<a href=""mailto:s.e.ref..s.e.ro2.0.2.0@gmail.com"">s.e.ref..s.e.ro2.0.2.0@gmail.com</a>
<a href=""mailto:s.er.e.f...s.e.r.o.20.2.0@gmail.com"">s.er.e.f...s.e.r.o.20.2.0@gmail.com</a>
<a href=""mailto:s.e.re.f...se.r.o20.2.0@gmail.com"">s.e.re.f...se.r.o20.2.0@gmail.com</a>
<a href=""mailto:s.e.r.ef..s.ero20.20@gmail.com"">s.e.r.ef..s.ero20.20@gmail.com</a>
<a href=""mailto:seref..se.r.o2020@gmail.com"">seref..se.r.o2020@gmail.com</a>
<a href=""mailto:se.r.e.f.s.e.r.o.20.2.0@gmail.com"">se.r.e.f.s.e.r.o.20.2.0@gmail.com</a>
<a href=""mailto:s.e.ref..s.e.ro.202.0@gmail.com"">s.e.ref..s.e.ro.202.0@gmail.com</a>
<a href=""mailto:s.er.ef...se.ro.202.0@gmail.com"">s.er.ef...se.ro.202.0@gmail.com</a>
<a href=""mailto:sere.f..ser.o2.0.20@gmail.com"">sere.f..ser.o2.0.20@gmail.com</a>
<a href=""mailto:ser.ef.s.e.r.o.20.20@gmail.com"">ser.ef.s.e.r.o.20.20@gmail.com</a>
<a href=""mailto:se.r.ef.sero.2.020@gmail.com"">se.r.ef.sero.2.020@gmail.com</a>
<a href=""mailto:s.e.re.f.s.er.o2020@gmail.com"">s.e.re.f.s.er.o2020@gmail.com</a>
<a href=""mailto:se.r.ef.se.r.o.2.0.2.0@gmail.com"">se.r.ef.se.r.o.2.0.2.0@gmail.com</a>
<a href=""mailto:se.re.f..ser.o.2.0.2.0@gmail.com"">se.re.f..ser.o.2.0.2.0@gmail.com</a>
<a href=""mailto:s.e.ref.se.r.o2020@gmail.com"">s.e.ref.se.r.o2020@gmail.com</a>
<a href=""mailto:s.e.re.f.s.e.r.o2.020@gmail.com"">s.e.re.f.s.e.r.o2.020@gmail.com</a>
<a href=""mailto:s.er.e.f..se.r.o2.0.20@gmail.com"">s.er.e.f..se.r.o2.0.20@gmail.com</a>
<a href=""mailto:s.er.e.f...ser.o.202.0@gmail.com"">s.er.e.f...ser.o.202.0@gmail.com</a>
<a href=""mailto:sere.f.s.er.o.2.020@gmail.com"">sere.f.s.er.o.2.020@gmail.com</a>
<a href=""mailto:se.re.f.s.er.o.202.0@gmail.com"">se.re.f.s.er.o.202.0@gmail.com</a>
<a href=""mailto:se.r.e.f..ser.o.2.020@gmail.com"">se.r.e.f..ser.o.2.020@gmail.com</a>
<a href=""mailto:seref.ser.o.2020@gmail.com"">seref.ser.o.2020@gmail.com</a>
<a href=""mailto:s.er.e.f..ser.o.20.2.0@gmail.com"">s.er.e.f..ser.o.20.2.0@gmail.com</a>
<a href=""mailto:ser.e.f..ser.o.2.020@gmail.com"">ser.e.f..ser.o.2.020@gmail.com</a>
<a href=""mailto:se.r.e.f...s.e.r.o.202.0@gmail.com"">se.r.e.f...s.e.r.o.202.0@gmail.com</a>
<a href=""mailto:s.ere.f..s.ero2.02.0@gmail.com"">s.ere.f..s.ero2.02.0@gmail.com</a>
<a href=""mailto:seref.se.r.o20.20@gmail.com"">seref.se.r.o20.20@gmail.com</a>
<a href=""mailto:se.re.f..se.r.o.2.020@gmail.com"">se.re.f..se.r.o.2.020@gmail.com</a>
<a href=""mailto:s.e.re.f...s.er.o2.020@gmail.com"">s.e.re.f...s.er.o2.020@gmail.com</a>
<a href=""mailto:sere.f...sero.2.0.20@gmail.com"">sere.f...sero.2.0.20@gmail.com</a>
<a href=""mailto:se.ref...s.ero.2020@gmail.com"">se.ref...s.ero.2020@gmail.com</a>
<a href=""mailto:s.eref..se.ro20.2.0@gmail.com"">s.eref..se.ro20.2.0@gmail.com</a>
<a href=""mailto:s.er.e.f..se.ro.202.0@gmail.com"">s.er.e.f..se.ro.202.0@gmail.com</a>
<a href=""mailto:ser.ef...s.er.o.2.0.20@gmail.com"">ser.ef...s.er.o.2.0.20@gmail.com</a>
<a href=""mailto:s.e.ref.s.er.o202.0@gmail.com"">s.e.ref.s.er.o202.0@gmail.com</a>
<a href=""mailto:s.e.r.ef..sero2.0.2.0@gmail.com"">s.e.r.ef..sero2.0.2.0@gmail.com</a>
<a href=""mailto:s.er.e.f...s.er.o.2.0.20@gmail.com"">s.er.e.f...s.er.o.2.0.20@gmail.com</a>
<a href=""mailto:s.e.r.ef..s.er.o2.0.2.0@gmail.com"">s.e.r.ef..s.er.o2.0.2.0@gmail.com</a>
<a href=""mailto:seref..sero.20.2.0@gmail.com"">seref..sero.20.2.0@gmail.com</a>
<a href=""mailto:s.er.e.f..s.ero.2.020@gmail.com"">s.er.e.f..s.ero.2.020@gmail.com</a>
<a href=""mailto:se.r.e.f...s.e.r.o20.20@gmail.com"">se.r.e.f...s.e.r.o20.20@gmail.com</a>
<a href=""mailto:se.re.f...ser.o.2.020@gmail.com"">se.re.f...ser.o.2.020@gmail.com</a>
<a href=""mailto:s.e.r.ef..ser.o.2.0.20@gmail.com"">s.e.r.ef..ser.o.2.0.20@gmail.com</a>
<a href=""mailto:s.eref...se.ro20.20@gmail.com"">s.eref...se.ro20.20@gmail.com</a>
<a href=""mailto:s.e.r.ef...se.r.o2.0.20@gmail.com"">s.e.r.ef...se.r.o2.0.20@gmail.com</a>
<a href=""mailto:se.r.e.f...s.e.ro2020@gmail.com"">se.r.e.f...s.e.ro2020@gmail.com</a>
<a href=""mailto:s.e.r.e.f..s.ero.202.0@gmail.com"">s.e.r.e.f..s.ero.202.0@gmail.com</a>
<a href=""mailto:s.ere.f..ser.o2.0.2.0@gmail.com"">s.ere.f..ser.o2.0.2.0@gmail.com</a>
<a href=""mailto:s.e.r.e.f..ser.o.20.2.0@gmail.com"">s.e.r.e.f..ser.o.20.2.0@gmail.com</a>
<a href=""mailto:sere.f..s.e.ro.2.0.2.0@gmail.com"">sere.f..s.e.ro.2.0.2.0@gmail.com</a>
<a href=""mailto:se.ref.s.er.o.2.02.0@gmail.com"">se.ref.s.er.o.2.02.0@gmail.com</a>
<a href=""mailto:s.e.r.ef..s.er.o.20.20@gmail.com"">s.e.r.ef..s.er.o.20.20@gmail.com</a>
<a href=""mailto:se.r.e.f...se.r.o.2.020@gmail.com"">se.r.e.f...se.r.o.2.020@gmail.com</a>
<a href=""mailto:s.eref..se.ro.2.0.2.0@gmail.com"">s.eref..se.ro.2.0.2.0@gmail.com</a>
<a href=""mailto:se.ref.se.ro20.2.0@gmail.com"">se.ref.se.ro20.2.0@gmail.com</a>
<a href=""mailto:s.ere.f..s.e.r.o.2.02.0@gmail.com"">s.ere.f..s.e.r.o.2.02.0@gmail.com</a>
<a href=""mailto:s.er.e.f...ser.o2.0.2.0@gmail.com"">s.er.e.f...ser.o2.0.2.0@gmail.com</a>
<a href=""mailto:se.r.e.f..sero.2020@gmail.com"">se.r.e.f..sero.2020@gmail.com</a>
<a href=""mailto:s.e.re.f..se.ro.202.0@gmail.com"">s.e.re.f..se.ro.202.0@gmail.com</a>
<a href=""mailto:s.e.r.ef.sero2.0.2.0@gmail.com"">s.e.r.ef.sero2.0.2.0@gmail.com</a>
<a href=""mailto:s.e.re.f..s.e.r.o2020@gmail.com"">s.e.re.f..s.e.r.o2020@gmail.com</a>
<a href=""mailto:s.e.r.ef..s.e.ro20.2.0@gmail.com"">s.e.r.ef..s.e.ro20.2.0@gmail.com</a>
<a href=""mailto:s.e.ref.se.r.o2.0.20@gmail.com"">s.e.ref.se.r.o2.0.20@gmail.com</a>
<a href=""mailto:seref...se.r.o2.020@gmail.com"">seref...se.r.o2.020@gmail.com</a>
<a href=""mailto:s.ere.f.s.er.o.2.020@gmail.com"">s.ere.f.s.er.o.2.020@gmail.com</a>
<a href=""mailto:se.r.e.f...se.ro.2.02.0@gmail.com"">se.r.e.f...se.ro.2.02.0@gmail.com</a>
<a href=""mailto:se.re.f..se.r.o20.20@gmail.com"">se.re.f..se.r.o20.20@gmail.com</a>
<a href=""mailto:se.r.e.f...sero202.0@gmail.com"">se.r.e.f...sero202.0@gmail.com</a>
<a href=""mailto:s.ere.f..s.e.ro.2020@gmail.com"">s.ere.f..s.e.ro.2020@gmail.com</a>
<a href=""mailto:s.er.ef.se.r.o.202.0@gmail.com"">s.er.ef.se.r.o.202.0@gmail.com</a>
<a href=""mailto:s.eref..ser.o.20.20@gmail.com"">s.eref..ser.o.20.20@gmail.com</a>
<a href=""mailto:se.r.ef...ser.o.2.02.0@gmail.com"">se.r.ef...ser.o.2.02.0@gmail.com</a>
<a href=""mailto:s.er.ef..se.ro2.0.20@gmail.com"">s.er.ef..se.ro2.0.20@gmail.com</a>
<a href=""mailto:ser.e.f.se.r.o2020@gmail.com"">ser.e.f.se.r.o2020@gmail.com</a>
<a href=""mailto:s.er.ef..s.ero20.2.0@gmail.com"">s.er.ef..s.ero20.2.0@gmail.com</a>
<a href=""mailto:s.ere.f..s.er.o.2020@gmail.com"">s.ere.f..s.er.o.2020@gmail.com</a>
<a href=""mailto:sere.f..s.er.o2.0.2.0@gmail.com"">sere.f..s.er.o2.0.2.0@gmail.com</a>
<a href=""mailto:se.ref.s.e.r.o.202.0@gmail.com"">se.ref.s.e.r.o.202.0@gmail.com</a>
<a href=""mailto:s.er.ef..s.e.r.o.202.0@gmail.com"">s.er.ef..s.e.r.o.202.0@gmail.com</a>
<a href=""mailto:ser.e.f.se.ro.20.2.0@gmail.com"">ser.e.f.se.ro.20.2.0@gmail.com</a>
<a href=""mailto:sere.f...se.ro.2020@gmail.com"">sere.f...se.ro.2020@gmail.com</a>
<a href=""mailto:ser.e.f.s.er.o20.2.0@gmail.com"">ser.e.f.s.er.o20.2.0@gmail.com</a>
<a href=""mailto:ser.ef.s.e.r.o20.2.0@gmail.com"">ser.ef.s.e.r.o20.2.0@gmail.com</a>
<a href=""mailto:s.e.re.f..se.r.o202.0@gmail.com"">s.e.re.f..se.r.o202.0@gmail.com</a>
<a href=""mailto:s.eref.ser.o20.2.0@gmail.com"">s.eref.ser.o20.2.0@gmail.com</a>
<a href=""mailto:se.r.e.f..sero.2020@gmail.com"">se.r.e.f..sero.2020@gmail.com</a>
<a href=""mailto:se.r.ef...ser.o.2.0.2.0@gmail.com"">se.r.ef...ser.o.2.0.2.0@gmail.com</a>
<a href=""mailto:se.r.ef.sero2.02.0@gmail.com"">se.r.ef.sero2.02.0@gmail.com</a>
<a href=""mailto:ser.e.f..s.e.r.o.2.02.0@gmail.com"">ser.e.f..s.e.r.o.2.02.0@gmail.com</a>
<a href=""mailto:s.e.r.ef...s.e.ro.2020@gmail.com"">s.e.r.ef...s.e.ro.2020@gmail.com</a>
<a href=""mailto:s.e.ref.s.e.r.o.20.2.0@gmail.com"">s.e.ref.s.e.r.o.20.2.0@gmail.com</a>
<a href=""mailto:s.e.r.e.f.s.ero.2.0.2.0@gmail.com"">s.e.r.e.f.s.ero.2.0.2.0@gmail.com</a>
<a href=""mailto:s.er.ef.s.e.r.o20.20@gmail.com"">s.er.ef.s.e.r.o20.20@gmail.com</a>
<a href=""mailto:sere.f.s.er.o2.0.20@gmail.com"">sere.f.s.er.o2.0.20@gmail.com</a>
<a href=""mailto:se.ref..s.ero202.0@gmail.com"">se.ref..s.ero202.0@gmail.com</a>
<a href=""mailto:s.er.e.f...se.r.o.2.0.2.0@gmail.com"">s.er.e.f...se.r.o.2.0.2.0@gmail.com</a>
<a href=""mailto:se.r.ef...s.e.ro.20.20@gmail.com"">se.r.ef...s.e.ro.20.20@gmail.com</a>
<a href=""mailto:s.e.r.ef...se.ro.2.0.20@gmail.com"">s.e.r.ef...se.ro.2.0.20@gmail.com</a>
<a href=""mailto:se.r.ef.s.e.r.o2020@gmail.com"">se.r.ef.s.e.r.o2020@gmail.com</a>
<a href=""mailto:s.e.r.e.f.sero.2.02.0@gmail.com"">s.e.r.e.f.sero.2.02.0@gmail.com</a>
<a href=""mailto:s.er.ef..s.er.o.2.0.2.0@gmail.com"">s.er.ef..s.er.o.2.0.2.0@gmail.com</a>
<a href=""mailto:s.e.re.f..se.r.o.2.0.20@gmail.com"">s.e.re.f..se.r.o.2.0.20@gmail.com</a>
<a href=""mailto:sere.f..ser.o.2.02.0@gmail.com"">sere.f..ser.o.2.02.0@gmail.com</a>
<a href=""mailto:se.r.e.f.s.ero202.0@gmail.com"">se.r.e.f.s.ero202.0@gmail.com</a>
<a href=""mailto:se.ref...ser.o20.20@gmail.com"">se.ref...ser.o20.20@gmail.com</a>
<a href=""mailto:sere.f..ser.o.2.020@gmail.com"">sere.f..ser.o.2.020@gmail.com</a>
<a href=""mailto:s.er.e.f..ser.o.2.0.2.0@gmail.com"">s.er.e.f..ser.o.2.0.2.0@gmail.com</a>
<a href=""mailto:s.eref..s.er.o2.020@gmail.com"">s.eref..s.er.o2.020@gmail.com</a>
<a href=""mailto:se.r.e.f..se.r.o.2020@gmail.com"">se.r.e.f..se.r.o.2020@gmail.com</a>
<a href=""mailto:ser.ef.sero20.2.0@gmail.com"">ser.ef.sero20.2.0@gmail.com</a>
<a href=""mailto:s.ere.f..s.e.ro2.0.2.0@gmail.com"">s.ere.f..s.e.ro2.0.2.0@gmail.com</a>
<a href=""mailto:s.eref.s.ero.2.0.20@gmail.com"">s.eref.s.ero.2.0.20@gmail.com</a>
<a href=""mailto:s.ere.f..se.r.o.2.02.0@gmail.com"">s.ere.f..se.r.o.2.02.0@gmail.com</a>
<a href=""mailto:ser.ef.s.e.ro.202.0@gmail.com"">ser.ef.s.e.ro.202.0@gmail.com</a>
<a href=""mailto:s.ere.f..se.r.o.202.0@gmail.com"">s.ere.f..se.r.o.202.0@gmail.com</a>
<a href=""mailto:se.ref..se.ro2.0.2.0@gmail.com"">se.ref..se.ro2.0.2.0@gmail.com</a>
<a href=""mailto:s.er.e.f.s.er.o2.0.2.0@gmail.com"">s.er.e.f.s.er.o2.0.2.0@gmail.com</a>
<a href=""mailto:s.ere.f.s.e.ro2.0.2.0@gmail.com"">s.ere.f.s.e.ro2.0.2.0@gmail.com</a>
<a href=""mailto:se.ref..s.ero.202.0@gmail.com"">se.ref..s.ero.202.0@gmail.com</a>
<a href=""mailto:s.er.e.f..se.ro2020@gmail.com"">s.er.e.f..se.ro2020@gmail.com</a>
<a href=""mailto:s.ere.f.s.e.ro.2.0.2.0@gmail.com"">s.ere.f.s.e.ro.2.0.2.0@gmail.com</a>
<a href=""mailto:s.e.ref..sero.20.2.0@gmail.com"">s.e.ref..sero.20.2.0@gmail.com</a>
<a href=""mailto:s.e.r.ef..s.er.o2.0.2.0@gmail.com"">s.e.r.ef..s.er.o2.0.2.0@gmail.com</a>
<a href=""mailto:s.e.r.e.f...ser.o.2.0.20@gmail.com"">s.e.r.e.f...ser.o.2.0.20@gmail.com</a>
<a href=""mailto:s.eref..se.ro2.020@gmail.com"">s.eref..se.ro2.020@gmail.com</a>
<a href=""mailto:s.er.e.f..s.e.ro.20.2.0@gmail.com"">s.er.e.f..s.e.ro.20.2.0@gmail.com</a>
<a href=""mailto:se.r.e.f..s.e.ro.2.020@gmail.com"">se.r.e.f..s.e.ro.2.020@gmail.com</a>
<a href=""mailto:ser.ef..s.ero.202.0@gmail.com"">ser.ef..s.ero.202.0@gmail.com</a>
<a href=""mailto:s.e.r.ef...s.e.ro2.0.2.0@gmail.com"">s.e.r.ef...s.e.ro2.0.2.0@gmail.com</a>"
XVW6S0aX,2023-06-03_stats.json,rdp_snitch,JSON,Saturday 3rd of June 2023 07:15:08 PM CDT,"{
  ""ip"": {
    ""106.116.169.71"": 2,
    ""98.143.255.25"": 2,
    ""162.241.158.17"": 24,
    ""51.75.160.42"": 2,
    ""194.165.16.72"": 2,
    ""120.55.14.18"": 4,
    ""87.251.75.145"": 3,
    ""176.111.174.184"": 3,
    ""103.236.108.238"": 20,
    ""45.143.201.62"": 9,
    ""91.193.232.217"": 1,
    ""45.43.2.139"": 21,
    ""45.227.254.49"": 2,
    ""123.57.58.91"": 9,
    ""128.199.20.70"": 2,
    ""185.170.144.3"": 3,
    ""120.78.88.44"": 5,
    ""47.93.50.196"": 8,
    ""47.74.18.223"": 1,
    ""58.218.204.183"": 4,
    ""87.251.75.120"": 1,
    ""45.135.201.65"": 10,
    ""194.165.16.76"": 2,
    ""141.98.81.5"": 2,
    ""141.98.81.29"": 2,
    ""80.94.93.249"": 2,
    ""193.29.13.179"": 2,
    ""78.128.113.106"": 2,
    ""147.78.47.23"": 1,
    ""141.98.9.5"": 1,
    ""88.214.25.26"": 1,
    ""91.240.118.11"": 6,
    ""179.60.149.9"": 1,
    ""174.138.31.86"": 1,
    ""194.26.135.79"": 2,
    ""162.142.125.214"": 1,
    ""121.4.147.80"": 1,
    ""43.156.9.187"": 54,
    ""194.165.16.78"": 4,
    ""87.251.64.110"": 2,
    ""198.235.24.10"": 3,
    ""191.101.131.222"": 1,
    ""79.124.49.66"": 1,
    ""167.248.133.35"": 1,
    ""103.74.123.216"": 1,
    ""167.94.145.60"": 1,
    ""45.227.254.8"": 2,
    ""23.163.0.92"": 1,
    ""51.222.158.236"": 2,
    ""198.235.24.213"": 3,
    ""193.56.116.197"": 1,
    ""58.49.223.234"": 2
  },
  ""asn"": {
    ""AS4134"": 6,
    ""AS3367"": 2,
    ""AS19871"": 24,
    ""AS16276"": 4,
    ""AS48721"": 8,
    ""AS37963"": 26,
    ""AS208091"": 4,
    ""AS57523"": 11,
    ""AS132925"": 20,
    ""AS210950"": 9,
    ""AS62240"": 2,
    ""AS397423"": 21,
    ""AS267784"": 4,
    ""AS14061"": 3,
    ""AS48080"": 5,
    ""AS45102"": 1,
    ""AS44486"": 10,
    ""AS209588"": 6,
    ""AS47890"": 2,
    ""AS42397"": 2,
    ""AS209160"": 2,
    ""AS29551"": 1,
    ""AS395839"": 1,
    ""AS398324"": 1,
    ""AS45090"": 1,
    ""AS132203"": 54,
    ""AS396982"": 6,
    ""AS270353"": 1,
    ""AS50360"": 1,
    ""AS398722"": 1,
    ""AS135967"": 1,
    ""AS398705"": 1,
    ""AS8100"": 1,
    ""AS58563"": 2
  },
  ""isp"": {
    ""Chinanet"": 6,
    ""Xplornet Communications Inc."": 2,
    ""Unified Layer"": 24,
    ""OVH SAS"": 4,
    ""Flyservers S.A."": 18,
    ""Hangzhou Alibaba Advertising Co"": 26,
    ""XHOST-INTERNET-SOLUTIONS"": 4,
    ""Chang Way Technologies Co. Limited"": 11,
    ""Ideastack Solutions Private Limited"": 20,
    ""TOV E-RISHENNYA"": 9,
    ""Clouvider Limited"": 2,
    ""Tier.Net Technologies LLC"": 21,
    ""DigitalOcean, LLC"": 3,
    ""Dmitriy Panchenko"": 5,
    ""Alibaba.com LLC"": 1,
    ""LIVINGBOTS"": 10,
    ""Unmanaged LTD"": 2,
    ""Bunea TELECOM SRL"": 2,
    ""Miti 2000 EOOD"": 2,
    ""NOC EMAIL: noc@one-host.net"": 1,
    ""Hostkey USA Inc"": 1,
    ""Censys, Inc."": 3,
    ""China Internet Network Information Center"": 1,
    ""Shenzhen Tencent Computer Systems Company Limited"": 54,
    ""Google LLC"": 6,
    ""Tyna Host - Datacenter no Brasil"": 1,
    ""Tamatiya EOOD"": 1,
    ""CNBKNS"": 1,
    ""QuadraNet Enterprises LLC"": 1,
    ""CHINANET Hubei province network"": 2
  },
  ""org"": {
    ""Chinanet HE"": 2,
    ""Xplornet Communications Inc"": 2,
    ""WEBSITEWELCOME.COM"": 24,
    ""OVH Ltd"": 2,
    ""Flyservers S.A"": 13,
    ""Aliyun Computing Co., LTD"": 26,
    ""Xhost Internet Solutions"": 6,
    ""Chang Way Technologies Co. Limited"": 11,
    ""Ideastack solutions private limited"": 20,
    ""TOV VAIZ PARTNER"": 9,
    ""Ipxo Limited"": 1,
    ""Tier.Net Technologies LLC"": 21,
    ""UAB Host Baltic"": 4,
    ""DigitalOcean, LLC"": 3,
    ""Xhostis"": 3,
    ""ALICLOUD-JP"": 1,
    ""Chinanet JS"": 4,
    ""Unknown"": 10,
    ""Unmanaged LTD"": 2,
    ""Bunea TELECOM SRL"": 2,
    ""Miti 2000 EOOD"": 2,
    ""Alviva Holding Limited"": 1,
    ""ThinkTech Technology Industrial CO. Limited"": 1,
    ""Veraton Projects LTD"": 1,
    ""Censys Inc"": 1,
    ""Tencent cloud computing (Beijing) Co., Ltd."": 1,
    ""Tencent Cloud Computing"": 54,
    ""Palo Alto Networks, Inc"": 6,
    ""Ipxo"": 1,
    ""Tamatiya EOOD"": 1,
    ""Censys, Inc."": 2,
    ""Branch of BachKim Network solutions"": 1,
    ""Crowncloud US LLC"": 1,
    ""OVH Hosting, Inc."": 2,
    ""VPN"": 1,
    ""Chinanet HB"": 2
  },
  ""regionName"": {
    ""Hebei"": 2,
    ""New Brunswick"": 2,
    ""Utah"": 24,
    ""England"": 4,
    ""Kaunas"": 8,
    ""Zhejiang"": 4,
    ""North Holland"": 9,
    ""Moscow"": 13,
    ""Karnataka"": 22,
    ""Kyiv City"": 9,
    ""Georgia"": 2,
    ""Texas"": 21,
    ""Vilnius"": 4,
    ""Beijing"": 17,
    ""Guangdong"": 5,
    ""Tokyo"": 1,
    ""Jiangsu"": 4,
    ""Bremen"": 10,
    ""Drenthe"": 4,
    ""Timis"": 2,
    ""Sofia-Capital"": 2,
    ""Hesse"": 2,
    ""Managua Department"": 1,
    ""South West"": 1,
    ""Michigan"": 2,
    ""Shanghai"": 1,
    ""North West"": 54,
    ""California"": 7,
    ""Minas Gerais"": 1,
    ""Plovdiv"": 1,
    ""Hanoi"": 1,
    ""Quebec"": 2,
    ""Hubei"": 2
  },
  ""country"": {
    ""China"": 35,
    ""Canada"": 4,
    ""United States"": 56,
    ""United Kingdom"": 4,
    ""Lithuania"": 12,
    ""Netherlands"": 13,
    ""Russia"": 13,
    ""India"": 22,
    ""Ukraine"": 9,
    ""Japan"": 1,
    ""Germany"": 12,
    ""Romania"": 2,
    ""Bulgaria"": 3,
    ""Nicaragua"": 1,
    ""Singapore"": 55,
    ""Brazil"": 1,
    ""Vietnam"": 1
  },
  ""account"": {
    ""(empty)"": 7,
    ""hello"": 173,
    ""Test"": 15,
    ""Administr"": 31,
    ""Domain"": 12,
    ""JmBFwDdOa"": 1,
    ""WUUCpE"": 1,
    ""sBHkxb"": 1,
    ""NgPPjKQMa"": 1,
    ""MivzpO"": 1,
    ""HjnnNq"": 1
  },
  ""keyboard"": {
    ""Unknown"": 244
  },
  ""client_build"": {
    ""Unknown"": 244
  },
  ""client_name"": {
    ""Unknown"": 244
  },
  ""ip_type"": {
    ""Unknown"": 107,
    ""hosting"": 121,
    ""proxy"": 13,
    ""mobile & hosting"": 1,
    ""hosting & proxy"": 1,
    ""mobile & hosting & proxy"": 1
  }
}"
d9grAYT3,Untitled,coffeepls,C,Saturday 3rd of June 2023 06:32:45 PM CDT,"Event Headgear Shop NPC
Name				CP	ID		Aegis_Name
Bombring Hat		200	39362	bomb_poring_hat
Antler Fedora		400	18662	Antler_Fedora
Blue Arara Hat		500	5778	Blue_Arara_Hat
Black Devil Mask 	600	18599	Black_Devil_Mask
Piamtte Brown Ear	600	18909	Isabella_Brown_Ear
Heartwing Hairband 	700	18563	Heart_Wing_Hairband
Palace Guard Cap 	700	18878	Palace_Guard_Cap
Chibi Pope			700	18673	Tare_Pope_

Event Costume Shop NPC
Name						CP		ID		Aegis_Name
Upper Hair Ext				250		38001	Shadow_Upper
Lovelove balloon 			300		18917	LoveLove_Balloon
Eremes Scarf 				300		20405	C_Eremes_Scarf
ALice Wig 					300		31329	C_Alice_Wig
Alice Wig Peach 			300		31407	C_Alice_Wig_PK
Middle Hair 				500		38002	Shadow_Middle
Lower Hair					500		38003	Shadow_Lower
Moon and Stars 				500		18742	C_MoonStar_Accessory
Evil Druid Hat 				500		19824	C_Evil_Druid_Hat
Secret Zipper 				500		20266	C_Secret_Zipper
Costume Eleanor Wig 		500		31062	C_Eleanor_Wig
Costume Eleanor Yellow 		500		31405	C_Eleanor_Wig_YL
Costume Nidhog wig 			500		31149	C_Nydhog_Wig
Costume Nidhog Wig white	500		31406	C_Nydhog_Wig_WH
Costume Sleeping Cat		1000	19739	C_Sleeping_Kitty_Cat"
BXuG5Wr2,Untitled,sinancetinkaya,C++,Saturday 3rd of June 2023 05:59:30 PM CDT,"void OnStart()
{
    // Create and initialize the list of lists
    double myList[][3] = { {4.2, 2.5, ""abc""}, {1.1, 5.3, ""def""}, {3.7, 0.9, ""ghi""} };
    int myListSize = ArraySize(myList);

	ArraySort(myList,WHOLE_ARRAY,0,MODE_ASCEND);
    // Print the sorted list
    for (int i = 0; i < myListSize; i++)
    {
        for (int j = 0; j < 3; j++)
        {
            Print(myList[i][j]);
        }
    }
}
"
ub0S6xfH,CEOI '20 - Star Trek,erek1e,C++,Saturday 3rd of June 2023 05:52:35 PM CDT,"#include <iostream>
#include <vector>
#include <algorithm>
// #include <cassert>
 
using namespace std;
 
const int BASE = 1e9 + 7;
 
int add(int x, int y) {
    x += y;
    if (x >= BASE) return x-BASE;
    return x;
}
int sub(int x, int y) {
    x -= y;
    if (x < 0) return x+BASE;
    return x;
}
int mult(int x, int y) {
    return (long long)x*y % BASE;
}
int bin_pow(int x, int y) {
    int res = 1;
    while (y) {
        if (y & 1) res = mult(res, x);
        y >>= 1;
        x = mult(x, x);
    }
    return res;
}
int inverse(int x) {
    return bin_pow(x, BASE-2);
}
 
vector<vector<int>> g;
vector<int> S, A;
vector<int> S_subtree, A_subtree; // state in subtree, cnt of change nodes in subtree
 
void dfsSubtree(int node, int parent = -1) {
    int s[2]{}, a[2]{};
    for (int child : g[node]) {
        if (child != parent) {
            dfsSubtree(child, node);
            s[S_subtree[child]]++, a[S_subtree[child]] += A_subtree[child];
        }
    }
    if (s[0] == 0) { // no losing child, so this node is losing
        S_subtree[node] = 0;
        A_subtree[node] = a[1]; // any losing node would make it winning
        ++A_subtree[node]; // this node itself could become winning
    } else {
        S_subtree[node] = 1;
        A_subtree[node] = (s[0] > 1 ? 0 : a[0]);
    }
}
void dfsOutside(int node, int parent = -1, int S_parent = 1, int A_parent = 0) {
    vector<pair<int, int>> d[2]{}; // directions: (node, A_direction[node])
    int a[2]{};
    if (parent != -1) d[S_parent].emplace_back(parent, A_parent), a[S_parent] += A_parent;
    for (int child : g[node]) {
        if (child != parent) {
            d[S_subtree[child]].emplace_back(child, A_subtree[child]);
            a[S_subtree[child]] += A_subtree[child];
        }
    }
 
    if (d[0].size() == 0) { // no losing children, so losing node
        S[node] = 0;
        A[node] = a[1];
        ++A[node]; // this node itself could become winning
        for (int child : g[node]) {
            if (child != parent) {
                dfsOutside(child, node, 0, A[node] - A_subtree[child]);
            }
        }
    } else {
        S[node] = 1;
        if (d[0].size() == 1) {
            A[node] = a[0];
            int x = d[0][0].first;
            for (int child : g[node]) {
                if (child != parent) {
                    if (child == x) dfsOutside(child, node, 0, a[1]+1); // +1 since this node itself can change
                    else dfsOutside(child, node, 1, a[0]);
                }
            }
        } else if (d[0].size() == 2) {
            A[node] = 0;
            int x = d[0][0].first, y = d[0][1].first;
            int ax = (x == parent ? A_parent : A_subtree[x]);
            int ay = (y == parent ? A_parent : A_subtree[y]);
            for (int child : g[node]) {
                if (child != parent) {
                    if (child == x) dfsOutside(child, node, 1, ay);
                    else if (child == y) dfsOutside(child, node, 1, ax);
                    else dfsOutside(child, node, 1, 0);
                }
            }
        } else {
            A[node] = 0;
            for (int child : g[node]) {
                if (child != parent) dfsOutside(child, node, 1, 0);
            }
        }
    }
}
 
struct Matrix {
    int N, M;
    vector<vector<int>> v;
    Matrix(){}
    Matrix(int N, int M): N(N), M(M) {v.assign(N, vector<int>(M));}
    Matrix operator * (const Matrix &m2) {
        // assert(M == m2.N);
        int K = m2.M;
        Matrix m(N, K);
        for (int i = 0; i < N; ++i) {
            for (int k = 0; k < K; ++k) {
                for (int j = 0; j < M; ++j) {
                    m.v[i][k] = add(m.v[i][k], mult(v[i][j], m2.v[j][k]));
                }
            }
        }
        return m;
    }
    Matrix operator ^ (long long int n) {
        // assert(N == M);
        Matrix m(N, N);
        for (int i = 0; i < N; ++i) m.v[i][i] = 1; // identity
        Matrix p2 = *this;
        while (n) {
            if (n & 1) m = m * p2;
            n >>= 1;
            p2 = p2 * p2;
        }
        return m;
    }
    void print() const {
        for (int i = 0; i < N; ++i) {
            for (int j = 0; j < M; ++j) cout << v[i][j] << ' ';
            cout << endl;
        }
    }
};
 
int main() {
    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
    int N; long long D; cin >> N >> D;
    g.resize(1+N);
    for (int i = 1; i <= N-1; ++i) {
        int u, v; cin >> u >> v;
        g[u].push_back(v);
        g[v].push_back(u);
    }
 
    /*
    Let's define a losing combination over some suffix of dimensions as the number of
    combinations of start node and portals in that suffix that lead to a loss for the
    player whose turn it is at the start node.
    Then the number of losing combinations over a larger suffix can be calculated.
    */
 
    /* Find A[r] for all ""roots"" - the number of losing nodes s.t. if that node was turned into
    a winning node, that would change the state of the root r */
    S_subtree.resize(1+N), A_subtree.resize(1+N);
    dfsSubtree(1);
    S.resize(1+N), A.resize(1+N);
    dfsOutside(1);
 
    int cnt[2]{}, sumA[2]{};
    for (int i = 1; i <= N; ++i) ++cnt[S[i]], sumA[S[i]] = add(sumA[S[i]], A[i]);
 
    // This is the O(D) version:
    // int L = 0, N2d = 1; // N^(2d)
    // for (int d = 0; d <= D-1; ++d) {
    //     L = add(mult(N2d, cnt[0]), mult(L, sub(sumA[1], sumA[0])));
    //     N2d = mult(N2d, mult(N, N));
    // }
 
    // O(log D) using Matrix Exponentiation
    int T = sub(sumA[1], sumA[0]);
    Matrix m(2, 2);
    m.v = {{T, cnt[0]}, {0, mult(N, N)}};
    Matrix v(2, 1);
    v.v = {{0}, {1}};
    
    // m^D * v
    Matrix m2 = m ^ D;
    Matrix m3 = m2 * v;
    int L = m3.v[0][0], N2d = m3.v[1][0];
 
    int win = 0;
    if (S[1] == 0) win = mult(A[1], L);
    else win = sub(N2d, mult(A[1], L));
    cout << win << endl;
    return 0;
}"
tN0ENyXG,Rows & Columns generator - Python,ArafatGS,Python,Saturday 3rd of June 2023 05:36:45 PM CDT,"import tkinter as tk

def generate_pattern(rows, cols):
    pattern = """"
    for i in range(rows):
        for j in range(cols):
            if (i + j) % 2 == 0:
                pattern += ""*""
            else:
                pattern += ""-""
        pattern += ""\n""
    return pattern

def show_pattern():
    num_rows = int(rows_entry.get())
    num_cols = int(cols_entry.get())

    pattern = generate_pattern(num_rows, num_cols)
    pattern_text.configure(state='normal')
    pattern_text.delete(""1.0"", tk.END)
    pattern_text.insert(tk.END, pattern)
    pattern_text.configure(state='disabled')

def toggle_dark_mode():
    dark_mode.set(not dark_mode.get())
    if dark_mode.get():
        pattern_frame.config(bg=""black"")
        pattern_text.config(bg=""black"", fg=""white"", insertbackground=""white"")
        dark_mode_button.config(text=""\u263E"")  # Moon symbol
    else:
        pattern_frame.config(bg=""white"")
        pattern_text.config(bg=""white"", fg=""black"", insertbackground=""black"")
        dark_mode_button.config(text=""\u2600"")  # Sun symbol

window = tk.Tk()
window.title(""Pattern Generator"")

dark_mode = tk.BooleanVar()
dark_mode_button = tk.Button(window, text=""\u2600"", font=(""Arial"", 12), command=toggle_dark_mode)
dark_mode_button.pack()

rows_label = tk.Label(window, text=""Number of Rows:"")
rows_label.pack()

rows_entry = tk.Entry(window)
rows_entry.pack()

cols_label = tk.Label(window, text=""Number of Columns:"")
cols_label.pack()

cols_entry = tk.Entry(window)
cols_entry.pack()

generate_button = tk.Button(window, text=""Generate Pattern"", command=show_pattern)
generate_button.pack()

pattern_frame = tk.Frame(window, bg=""white"")
pattern_frame.pack()

pattern_text = tk.Text(pattern_frame, state='disabled')
pattern_text.pack()

window.mainloop()"
hTUvKWDw,Semana4-CuatroOperaciones,knomo,Python,Saturday 3rd of June 2023 05:20:42 PM CDT,"def suma(a, b): return a + b
def resta(a, b): return a - b
def multiplica(a, b): return a * b
def divide(a, b): return a / b
def sale(): print(""ADIOS!"")

print(""Cuatro operaciones"")
print(""1. Sumar"")
print(""2. Restar"")
print(""3. Multiplicar"")
print(""4. Dividir"")
print(""5. Salir"")

print(""Ingrese el primer valor: "")
a = int(input())
print(""Ingrese el segundo valor: "")
b = int(input())
print(""Los valores ingresados son: "" + str(a) + "" y "" + str(b))
opcion = 0

while(opcion != 5):
    print(""Por favor ingrese opción: "")
    opcion = int(input())
    print(""Opción ingresada : "" + str(opcion))
    if(opcion == 1): print(""la suma es: "", suma(a,b))
    elif(opcion == 2): print(""la resta es: "", resta(a,b))
    elif(opcion == 3): print(""la multiplicación es: "", multiplica(a,b))
    elif(opcion == 4): print(""la división es: "", divide(a,b))
    elif(opcion == 5): sale()
    else: print(""Opción inválida"")"
AbMTHvwy,Untitled,Francisco3i123,JavaScript,Saturday 3rd of June 2023 05:19:44 PM CDT,"<size=30> <align=center> <color=#ff0000>[</color><color=#fffb00>ES</color><color=#ff0000>]</color> | <color=#000fff>F</color><color=#1300ff>o</color><color=#2a00ff>r</color><color=#4d00ff>c</color><color=#5d00ff>e</color> <color=#6800ff>C</color><color=#8000ff>o</color><color=#9700ff>m</color><color=#aa00ff>m</color><color=#bd00ff>u</color><color=#c900ff>n</color><color=#e000ff>i</color><color=#ec00ff>t</color><color=#fb00ff>y</color> </size> </align>
 
<align=center><size=20><color=#000fff>▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃</color></size></align>
 
<align=center><size=20><color=#5d00ff><link=""https://discord.gg/AUkKjbBYER"">Haz clic aquí para unirte a nuestro servidor de Discord y estar al tanto de las actualizaciones del servidor, así como para recibir soporte y reportar cualquier necesidad que tengas. ¡Te esperamos para formar parte de nuestra comunidad!</link></color></size></align>
 
 
<align=center><size=20><color=#0000ff>R</color><color=#4900ff>e</color><color=#9300ff>g</color><color=#ae00ff>l</color><color=#d800ff>a</color><color=#fb00ff>s</color></size></align>
 
<color=#000fff>1. No se permite el metagaming.</color>
 
<color=#1300ff>2. El uso de exploits será sancionado.</color>
 
<color=#2a00ff>3. Se permite el humor y las bromas, pero no se tolerarán ofensas más allá de los límites establecidos.</color>
 
<color=#4d00ff>4. El camping en una habitación por más de 2 minutos está prohibido y será sancionado dependiendo de la situación.</color>
 
<color=#5d00ff>5. Desconectarse intencionalmente al obtener una clase no deseada resultará en una sanción.</color>
 
<color=#6800ff>6. Evita los bugs en la medida de lo posible para no arruinar la experiencia de otros jugadores. El uso intencionado de bugs será sancionado.</color>
 
<color=#8000ff>7. No hagas spam en canales, servidores, etc.</color>
 
<color=#9700ff>8. En casos no especificados en las reglas, utiliza el sentido común.</color>
 
<color=#aa00ff>9. Está terminantemente prohibido reproducir música inapropiada en el modo espectador, como SCP o en el intercomunicador. Tampoco está permitido reproducir música en la radio, a menos que estés vivo y utilices el chat de voz de proximidad. Estas reglas se aplican para garantizar una experiencia de juego adecuada y evitar molestias innecesarias para otros jugadores..</color>
 
<color=#bd00ff>10. Recuerda que los hacks están prohibidos. También se prohíbe invitar a otros jugadores a través de los ""Risquetos"".</color>
 
<color=#c900ff>11.Respeta las decisiones de los administradores y moderadores del servidor. No desafíes o discutas públicamente sus acciones, ni por privado ni de ninguna otra forma.</color>
 
<color=#e000ff>12. No es posible hacer equipo con los SCP, excepto en tres casos particulares:

· Los miembros del CAOS pueden formar equipo con los SCP para eliminar a los Clase D y completar la partida, o para enfrentarse a los MTF o los guardias.
· Si deseas negociar con un SCP para obtener cinco minutos de gracia, deberás convencerlo. Por ejemplo, podrías decir: ""Dame cinco minutos de gracia y te daré la ubicación de mis compañeros"" (es tu responsabilidad decidir si le mientes o no al SCP). La decisión final quedará a cargo del SCP.</color>
 
<color=#ec00ff>13. Está terminantemente prohibido realizar ""free kill"" o ""team kill"", es decir, matar a personas de tu propio equipo. Hacerlo resultará en un ban permanente sin excepciones. Si se produce un asesinato accidental, deberás presentar pruebas que lo demuestren, ya sea mediante testimonios o material audiovisual. Esto también se aplica a los guardias y los Clase D: si los Clase D están armados y los guardias sienten desconfianza o son atacados primero, los guardias tienen autorización para abrir fuego. Sin embargo, si el Clase D está desarmado, se considerará como ""free kill"" o ""team kill"".</color>
 
<color=#ec00ff>14. Importante: Dentro del servidor de SCP y Discord, es imprescindible que tu apodo esté directamente relacionado con el nombre de un SCP.</color>
 
<align=center><size=20><color=#000cff>P</color><color=#4200ff>l</color><color=#4200ff>u</color><color=#6c00ff>g</color><color=#9300ff>i</color><color=#e800ff>n</color><color=#ff00e0>s</color></size></align>
 
<color=#001fff>Remote Keycard. Este plugin te permite abrir puertas que requieren una tarjeta sin necesidad de equiparla. Simplemente acércate a la puerta y pulsa el botón correspondiente para abrirla. Esto facilitará tu movimiento y exploración en el juego sin tener que preocuparte por llevar la tarjeta contigo.</color>
 
<color=#5900ff>Respawn Timer. Cuando te encuentres en modo espectador, el plugin mostrará un temporizador que indicará el tiempo restante para que puedas volver a jugar. Además, cuando quede poco tiempo para tu respawn, recibirás una notificación que te informará que pronto estarás de regreso en acción. Esta función te ayudará a mantener un seguimiento preciso de tu tiempo de espera y te mantendrá informado para que puedas prepararte para tu próxima partida.</color>
 
<color=#8000ff>Admin Tools. Los administradores cuentan con una variedad de comandos divertidos y útiles que les permiten tanto organizar eventos emocionantes como realizar tareas de moderación de manera eficiente. Estos comandos les brindan la capacidad de crear situaciones especiales, agregar elementos sorpresa, interactuar con los jugadores y mantener el orden en el servidor. Ya sea para generar efectos especiales, otorgar objetos únicos, gestionar equipos o aplicar sanciones, los comandos de los administradores agregan un toque especial y dinámico al servidor, asegurando una experiencia agradable y entretenida para todos los usuarios.</color>
 
<color=#ae00ff>Rainbow Tags. A partir del rango de Moderador hasta Propietario, cada uno de estos rangos se destacará por un color arcoíris único. Esta elección de colores vibrantes y cambiantes refleja la diversidad y la vitalidad de nuestra comunidad. Cada vez que veas a un miembro del equipo con uno de estos rangos, podrás identificarlos fácilmente por el color arcoíris que los distingue.</color>

<color=#d800ff>Better079. El plugin añade nuevas mecánicas y comandos para mejorar la experiencia de juego del SCP-079 y algunas clases. Permite al SCP-079 tener un mayor control sobre las instalaciones y a las clases obtener beneficios y habilidades adicionales. El objetivo es equilibrar y diversificar la jugabilidad, brindando a los jugadores más opciones estratégicas y una experiencia renovada y emocionante.</color>

<color=#ff00f3>SCP 1162. El plugin agrega una nueva función a la sala del SCP-173, donde al arrojar un objeto dentro de ella, este se transformará en otro objeto aleatorio. Esta característica brinda una dinámica adicional y sorpresa a la sala, añadiendo un elemento de incertidumbre y diversión para los jugadores."
k5QiZJmi,[НРС] Колоквијум - група 5А,MartinSRB,C++,Saturday 3rd of June 2023 05:09:46 PM CDT,"#include<arduinoPlatform.h>
#include<tasks.h>
#include<interrupts.h>
#include<stdio.h>
#include<serial.h>
#include <pwm.h>
#include<data.h>

extern serial Serial;

const int pin = 33;
int oldState,
    startTime,
    elapsedTime = 0,
    periodTime = 0,
    iteration  = 0,
    jumps[100],
    maxJump;

void resetIterations(){
    iteration = 0,
    maxJump   = 0;
    for(int i = 0; i < 100; ++i){
        jumps[i] = 0;
    }
}

void tracking(int id, void* ptrt){
    static int first = true;
    int newState = digitalRead(pin);
    if(oldState > newState){
        elapsedTime = millis() - startTime;
    }else if(oldState < newState){
        int time = millis();
        periodTime = time - startTime;
        startTime = time;
        if(!first){
            Serial.print('(');
            Serial.print(iteration + 1);
            Serial.print("".) "");
            Serial.print(elapsedTime);
            Serial.print(' ');
            Serial.println(periodTime);
            int humidity = map(elapsedTime, 0, 1500, 0, 100);
            if(iteration == 0){
                jumps[iteration++] = humidity;
            }else if(iteration < 100){
                jumps[iteration++] = humidity;
                int jump = abs(jumps[iteration - 1] - jumps[iteration - 2]);
                if(jump > maxJump){
                    maxJump = jump;
                }
                if(jump > 15){ //mogu da napisem 15 jer je raspon od 0 do 100 isto kao i procenti
                    Serial.print(""[BIG-JUMP] There was a big diff. "");
                    Serial.print(jump);
                    Serial.println("" [%]"");
                }
            }else{
                //druga tacka
                int errCnt = 0;
                for(int i = 1; i < 99; ++i){
                    if( (abs(jumps[i] - jumps[i - 1]) > 20 &&
                       abs(jumps[i] - jumps[i + 1]) > 20) ||
                       (abs(jumps[i] - jumps[i - 1]) < 20 &&
                            abs(jumps[i] - jumps[i + 1]) < 20)){
                        Serial.print(""[ERROR nm. "");
                        Serial.print(++errCnt);
                        Serial.print(""] Approx: "");
                        Serial.println((jumps[i + 1] + jumps[i - 1]) / 2);
                        delay(50);
                   }
                }
                //prva tacka
                Serial.print(""[BIGGEST-JUMP] Biggest diff. was "");
                Serial.println(maxJump);
                resetIterations();
            }
        }else{
            first = false;
        }
    }
    oldState = newState;
}

void setup()
{
    Serial.begin(9600);
    oldState = digitalRead(pin);
    startTime = millis();
    resetIterations();
    pwmSin(33, 1500, 0.1);
    createTask(tracking, 1, TASK_ENABLE, NULL);
}

void loop()
{

}
"
3PRt2yw3,snowball,dimitarbogdanov,C#,Saturday 3rd of June 2023 04:57:08 PM CDT,"int n = int.Parse(Console.ReadLine()!);

double biggestSBV = 0;

for (int i = 0; i < n; i++)
{
    int snowballSnow = int.Parse(Console.ReadLine()!);
    int snowballTime = int.Parse(Console.ReadLine()!);
    int snowballQuality = int.Parse(Console.ReadLine()!);

    double snowballValue = Math.Pow((snowballSnow / snowballTime), snowballQuality);

    if (snowballValue > biggestSBV)
    {
        biggestSBV = snowballValue;
    }
}

Console.WriteLine($""{biggestSBV:F2}"");"
Y6rtpCLw,ascii,dimitarbogdanov,C#,Saturday 3rd of June 2023 04:48:21 PM CDT,"int n = int.Parse(Console.ReadLine()!);

int startLetter = 97;

for (int i = 0; i < n; i++)
{
    for (int j = 0; j < n; j++)
    {
        for (int k = 0; k < n; k++)
        {
            char firstLetter = (char) (startLetter + i);
            Console.Write(firstLetter);
            
            char secondLetter = (char) (startLetter + j);
            Console.Write(secondLetter);
            
            char thirdLetter = (char) (startLetter + k);
            Console.WriteLine(thirdLetter);
        }
    }
}"
ZpWpj2Lp,Área del círculo. Simple. Python,JPablos,Python,Saturday 3rd of June 2023 04:45:09 PM CDT,"# -*- coding: utf-8 -*-
""""""
Created on Sat Jun  3 23:27:44 2023

Este código permite calcular el área del círculo, el usuario debe
ingresar el radio y puede elegir entre 'cm/metros' como unidades.

Se implementa un Control de Errores que sustituye "","" por ""."" evitando el error
de 'float', o genera un mensaje de error si se ingresan valores que no sean
numéricos.

Utiliza tkinter para generar una interfaz gráfica.

@alpha
""""""

import math
import tkinter as tk


def calcular_area():
    """"""
    Este código permite calcular el área del círculo, el usuario debe
    ingresar el radio y puede elegir entre 'cm/metros' como unidades

    Returns
    -------
    Área del círculo.

    """"""
    radio_str = entry_radio.get()
    unidades = var_unidades.get()

    try:
        radio = float(radio_str.replace("","", "".""))
    except ValueError:
        resultado_text.config(state=tk.NORMAL)
        resultado_text.delete(""1.0"", tk.END)
        resultado_text.tag_configure(
            ""error"", foreground=""red"", font=(""Courier New"", 10, ""bold""))
        resultado_text.insert(
            tk.END, ""Error: Radio inválido.\nIngrese un valor numérico."", ""error"")
        resultado_text.config(state=tk.DISABLED)
        return

    area = math.pi * (radio**2)
    resultado_text.config(state=tk.NORMAL)
    resultado_text.delete(""1.0"", tk.END)
    resultado_text.insert(
        tk.END, f""El área del círculo es: {area:.4f} {unidades}^2"")
    resultado_text.config(state=tk.DISABLED)


# Crear ventana
ventana = tk.Tk()
ventana.title(""Cálculo de área de un círculo"")

# Etiqueta y entrada para el radio
label_radio = tk.Label(ventana, text=""Radio:"")
label_radio.pack()
entry_radio = tk.Entry(ventana)
entry_radio.pack()

# Opciones para las unidades
var_unidades = tk.StringVar(value=""cm"")

radio_cm = tk.Radiobutton(
    ventana, text=""cm"", variable=var_unidades, value=""cm"")
radio_cm.pack()
radio_metros = tk.Radiobutton(
    ventana, text=""metros"", variable=var_unidades, value=""metros"")
radio_metros.pack()

# Botón de calcular
boton_calcular = tk.Button(
    ventana, text=""Calcular área"", command=calcular_area)
boton_calcular.pack()

# Resultado
resultado_text = tk.Text(ventana, height=5, width=50)
resultado_text.config(state=tk.DISABLED)
resultado_text.pack()

# Iniciar bucle de eventos
ventana.mainloop()
"
GKW60KG3,factoriel,dimitarbogdanov,C#,Saturday 3rd of June 2023 04:29:13 PM CDT,"// resharper disable all

string input = Console.ReadLine()!;

int factorialSum = 0;
for (int i = 0; i < input.Length; i++)
{
    char currentChar = input[i];
    int parsedChar = int.Parse(currentChar.ToString());
    
    int factForThisChar = 1;
    for (int j = 1; j <= parsedChar; j++)
    {
        factForThisChar = factForThisChar * j;
    }

    factorialSum += factForThisChar;
}

int inputParsed = int.Parse(input);
int factForInput = 1;
for (int i = 1; i <= inputParsed; i++)
{
    factForInput = factForInput * i;
}

if (factForInput != factorialSum)
{
    Console.WriteLine(""not equal :("");
}
else
{
    Console.WriteLine(""equal!!! :D"");
}"
D8ZV3kX8,Nigerian scammers [3-6-2/2023],bombaires,HTML,Saturday 3rd of June 2023 04:22:39 PM CDT,"<a href=""mailto:george.morgan2009@gmail.com"">george.morgan2009@gmail.com</a>
<a href=""mailto:g.e.orge.m.o.rga.n.20.09@gmail.com"">g.e.orge.m.o.rga.n.20.09@gmail.com</a>
<a href=""mailto:g.eorge.mo.rgan.200.9@gmail.com"">g.eorge.mo.rgan.200.9@gmail.com</a>
<a href=""mailto:g.e.org.e..mo.rg.an20.09@gmail.com"">g.e.org.e..mo.rg.an20.09@gmail.com</a>
<a href=""mailto:g.eo.rge...mo.r.gan2.00.9@gmail.com"">g.eo.rge...mo.r.gan2.00.9@gmail.com</a>
<a href=""mailto:g.e.or.g.e...mor.gan.2.009@gmail.com"">g.e.or.g.e...mor.gan.2.009@gmail.com</a>
<a href=""mailto:g.eor.g.e...mor.g.a.n200.9@gmail.com"">g.eor.g.e...mor.g.a.n200.9@gmail.com</a>
<a href=""mailto:geo.rg.e...m.orga.n2009@gmail.com"">geo.rg.e...m.orga.n2009@gmail.com</a>
<a href=""mailto:ge.org.e..m.o.rgan20.0.9@gmail.com"">ge.org.e..m.o.rgan20.0.9@gmail.com</a>
<a href=""mailto:g.eorge..mo.r.g.an20.09@gmail.com"">g.eorge..mo.r.g.an20.09@gmail.com</a>
<a href=""mailto:g.e.o.rge.m.o.rga.n2009@gmail.com"">g.e.o.rge.m.o.rga.n2009@gmail.com</a>
<a href=""mailto:georg.e.mo.r.g.a.n.2.009@gmail.com"">georg.e.mo.r.g.a.n.2.009@gmail.com</a>
<a href=""mailto:g.eo.rge..m.organ2.00.9@gmail.com"">g.eo.rge..m.organ2.00.9@gmail.com</a>
<a href=""mailto:g.e.o.r.g.e...m.o.rga.n.20.09@gmail.com"">g.e.o.r.g.e...m.o.rga.n.20.09@gmail.com</a>
<a href=""mailto:ge.o.r.g.e..mor.gan.2009@gmail.com"">ge.o.r.g.e..mor.gan.2009@gmail.com</a>
<a href=""mailto:geor.ge..m.o.rgan.200.9@gmail.com"">geor.ge..m.o.rgan.200.9@gmail.com</a>
<a href=""mailto:ge.o.r.ge...m.o.rgan2.0.0.9@gmail.com"">ge.o.r.ge...m.o.rgan2.0.0.9@gmail.com</a>
<a href=""mailto:g.eor.ge.morgan.2.0.09@gmail.com"">g.eor.ge.morgan.2.0.09@gmail.com</a>
<a href=""mailto:g.e.o.rg.e..m.org.a.n.2009@gmail.com"">g.e.o.rg.e..m.org.a.n.2009@gmail.com</a>
<a href=""mailto:g.eo.r.ge..mo.r.gan.20.0.9@gmail.com"">g.eo.r.ge..mo.r.gan.20.0.9@gmail.com</a>
<a href=""mailto:ge.o.r.ge..mor.g.an.2.00.9@gmail.com"">ge.o.r.ge..mor.g.an.2.00.9@gmail.com</a>
<a href=""mailto:g.eo.rge...m.or.g.a.n2.0.0.9@gmail.com"">g.eo.rge...m.or.g.a.n2.0.0.9@gmail.com</a>
<a href=""mailto:g.e.o.r.g.e..m.o.r.g.an2.0.0.9@gmail.com"">g.e.o.r.g.e..m.o.r.g.an2.0.0.9@gmail.com</a>
<a href=""mailto:g.e.o.rge...mor.ga.n.20.0.9@gmail.com"">g.e.o.rge...mor.ga.n.20.0.9@gmail.com</a>
<a href=""mailto:g.eorg.e.morgan.2009@gmail.com"">g.eorg.e.morgan.2009@gmail.com</a>
<a href=""mailto:g.eo.rg.e..morgan2.00.9@gmail.com"">g.eo.rg.e..morgan2.00.9@gmail.com</a>
<a href=""mailto:g.eorge..m.o.rga.n20.0.9@gmail.com"">g.eorge..m.o.rga.n20.0.9@gmail.com</a>
<a href=""mailto:g.e.or.g.e..m.o.r.g.a.n.20.09@gmail.com"">g.e.or.g.e..m.o.r.g.a.n.20.09@gmail.com</a>
<a href=""mailto:g.e.orge.m.o.rg.an.20.09@gmail.com"">g.e.orge.m.o.rg.an.20.09@gmail.com</a>
<a href=""mailto:geo.rge...morgan.2.0.0.9@gmail.com"">geo.rge...morgan.2.0.0.9@gmail.com</a>
<a href=""mailto:g.eo.rge..m.o.rg.a.n.200.9@gmail.com"">g.eo.rge..m.o.rg.a.n.200.9@gmail.com</a>
<a href=""mailto:ge.o.r.ge..m.org.a.n.20.09@gmail.com"">ge.o.r.ge..m.org.a.n.20.09@gmail.com</a>
<a href=""mailto:ge.orge.mo.r.ga.n.200.9@gmail.com"">ge.orge.mo.r.ga.n.200.9@gmail.com</a>
<a href=""mailto:georg.e..m.orga.n.2.0.09@gmail.com"">georg.e..m.orga.n.2.0.09@gmail.com</a>
<a href=""mailto:g.e.or.g.e..m.o.r.g.a.n.200.9@gmail.com"">g.e.or.g.e..m.o.r.g.a.n.200.9@gmail.com</a>
<a href=""mailto:ge.or.ge...m.o.r.ga.n2.0.09@gmail.com"">ge.or.ge...m.o.r.ga.n2.0.09@gmail.com</a>
<a href=""mailto:ge.o.r.ge...m.or.gan.200.9@gmail.com"">ge.o.r.ge...m.or.gan.200.9@gmail.com</a>
<a href=""mailto:g.e.org.e..m.o.r.gan.2.009@gmail.com"">g.e.org.e..m.o.r.gan.2.009@gmail.com</a>
<a href=""mailto:g.eorg.e.morga.n.2.0.09@gmail.com"">g.eorg.e.morga.n.2.0.09@gmail.com</a>
<a href=""mailto:geo.rge..mor.g.an2.009@gmail.com"">geo.rge..mor.g.an2.009@gmail.com</a>
<a href=""mailto:g.eo.rge.mor.g.an.200.9@gmail.com"">g.eo.rge.mor.g.an.200.9@gmail.com</a>
<a href=""mailto:g.eo.r.g.e.mo.r.g.a.n.20.09@gmail.com"">g.eo.r.g.e.mo.r.g.a.n.20.09@gmail.com</a>
<a href=""mailto:g.e.org.e.m.o.rgan.20.09@gmail.com"">g.e.org.e.m.o.rgan.20.09@gmail.com</a>
<a href=""mailto:g.eor.ge..m.o.r.ga.n20.0.9@gmail.com"">g.eor.ge..m.o.r.ga.n20.0.9@gmail.com</a>
<a href=""mailto:ge.o.r.ge.mo.rgan20.0.9@gmail.com"">ge.o.r.ge.mo.rgan20.0.9@gmail.com</a>
<a href=""mailto:geo.rg.e...mo.r.g.a.n2009@gmail.com"">geo.rg.e...mo.r.g.a.n2009@gmail.com</a>
<a href=""mailto:ge.org.e...mor.g.an.20.0.9@gmail.com"">ge.org.e...mor.g.an.20.0.9@gmail.com</a>
<a href=""mailto:g.eor.g.e..m.organ2.00.9@gmail.com"">g.eor.g.e..m.organ2.00.9@gmail.com</a>
<a href=""mailto:geo.rge.mo.rgan2009@gmail.com"">geo.rge.mo.rgan2009@gmail.com</a>
<a href=""mailto:geor.g.e...m.o.r.ga.n2.0.09@gmail.com"">geor.g.e...m.o.r.ga.n2.0.09@gmail.com</a>
<a href=""mailto:g.eo.rg.e.mo.rg.a.n.2.009@gmail.com"">g.eo.rg.e.mo.rg.a.n.2.009@gmail.com</a>
<a href=""mailto:geor.g.e..morg.a.n200.9@gmail.com"">geor.g.e..morg.a.n200.9@gmail.com</a>
<a href=""mailto:g.eorg.e..mor.ga.n.2009@gmail.com"">g.eorg.e..mor.ga.n.2009@gmail.com</a>
<a href=""mailto:ge.o.r.g.e..mo.rgan.2.009@gmail.com"">ge.o.r.g.e..mo.rgan.2.009@gmail.com</a>
<a href=""mailto:g.e.org.e..m.organ.2.00.9@gmail.com"">g.e.org.e..m.organ.2.00.9@gmail.com</a>
<a href=""mailto:geo.r.ge.m.org.an.200.9@gmail.com"">geo.r.ge.m.org.an.200.9@gmail.com</a>
<a href=""mailto:g.eo.rg.e.m.o.rgan.2.0.09@gmail.com"">g.eo.rg.e.m.o.rgan.2.0.09@gmail.com</a>
<a href=""mailto:g.eo.r.ge..m.o.r.gan.200.9@gmail.com"">g.eo.r.ge..m.o.r.gan.200.9@gmail.com</a>
<a href=""mailto:geo.rge.morgan.2.00.9@gmail.com"">geo.rge.morgan.2.00.9@gmail.com</a>
<a href=""mailto:ge.o.r.ge...m.org.an2.0.0.9@gmail.com"">ge.o.r.ge...m.org.an2.0.0.9@gmail.com</a>
<a href=""mailto:g.e.or.ge.mo.rga.n2.0.09@gmail.com"">g.e.or.ge.mo.rga.n2.0.09@gmail.com</a>
<a href=""mailto:g.eo.rge..m.o.rga.n.20.0.9@gmail.com"">g.eo.rge..m.o.rga.n.20.0.9@gmail.com</a>
<a href=""mailto:g.eorge..mo.r.g.an2.00.9@gmail.com"">g.eorge..mo.r.g.an2.00.9@gmail.com</a>
<a href=""mailto:g.eor.ge...mor.g.a.n2.0.09@gmail.com"">g.eor.ge...mor.g.a.n2.0.09@gmail.com</a>
<a href=""mailto:g.e.o.r.ge..mo.rg.a.n200.9@gmail.com"">g.e.o.r.ge..mo.rg.a.n200.9@gmail.com</a>
<a href=""mailto:g.e.o.r.g.e.m.o.r.g.a.n2.00.9@gmail.com"">g.e.o.r.g.e.m.o.r.g.a.n2.00.9@gmail.com</a>
<a href=""mailto:geo.rge...m.or.gan.200.9@gmail.com"">geo.rge...m.or.gan.200.9@gmail.com</a>
<a href=""mailto:ge.or.ge.mo.r.gan.2.0.09@gmail.com"">ge.or.ge.mo.r.gan.2.0.09@gmail.com</a>
<a href=""mailto:geo.rge..mor.ga.n20.09@gmail.com"">geo.rge..mor.ga.n20.09@gmail.com</a>
<a href=""mailto:geor.ge.m.or.ga.n.2.0.09@gmail.com"">geor.ge.m.or.ga.n.2.0.09@gmail.com</a>
<a href=""mailto:g.eorge...m.o.rg.an2.009@gmail.com"">g.eorge...m.o.rg.an2.009@gmail.com</a>
<a href=""mailto:george...m.o.r.g.an2.0.09@gmail.com"">george...m.o.r.g.an2.0.09@gmail.com</a>
<a href=""mailto:g.e.org.e...m.o.rgan2.0.09@gmail.com"">g.e.org.e...m.o.rgan2.0.09@gmail.com</a>
<a href=""mailto:geo.rge.m.o.rgan.2.00.9@gmail.com"">geo.rge.m.o.rgan.2.00.9@gmail.com</a>
<a href=""mailto:g.eo.r.ge...m.or.g.a.n.2.009@gmail.com"">g.eo.r.ge...m.or.g.a.n.2.009@gmail.com</a>
<a href=""mailto:g.e.o.r.g.e.mo.rg.a.n2009@gmail.com"">g.e.o.r.g.e.mo.rg.a.n2009@gmail.com</a>
<a href=""mailto:geo.r.ge..m.or.g.an2009@gmail.com"">geo.r.ge..m.or.g.an2009@gmail.com</a>
<a href=""mailto:ge.o.rg.e..m.o.rg.a.n.2.00.9@gmail.com"">ge.o.rg.e..m.o.rg.a.n.2.00.9@gmail.com</a>
<a href=""mailto:g.e.or.g.e.m.org.a.n20.09@gmail.com"">g.e.or.g.e.m.org.a.n20.09@gmail.com</a>
<a href=""mailto:g.e.orge..m.organ.20.0.9@gmail.com"">g.e.orge..m.organ.20.0.9@gmail.com</a>
<a href=""mailto:g.eo.r.g.e...m.or.g.an.2.00.9@gmail.com"">g.eo.r.g.e...m.or.g.an.2.00.9@gmail.com</a>
<a href=""mailto:geo.rge..mor.gan2.0.09@gmail.com"">geo.rge..mor.gan2.0.09@gmail.com</a>
<a href=""mailto:ge.or.g.e..m.o.r.g.a.n20.09@gmail.com"">ge.or.g.e..m.o.r.g.a.n20.09@gmail.com</a>
<a href=""mailto:g.e.o.rge..m.o.rgan.20.0.9@gmail.com"">g.e.o.rge..m.o.rgan.20.0.9@gmail.com</a>
<a href=""mailto:g.eor.ge..m.o.r.gan.20.09@gmail.com"">g.eor.ge..m.o.r.gan.20.09@gmail.com</a>
<a href=""mailto:geor.g.e...m.o.rgan2009@gmail.com"">geor.g.e...m.o.rgan2009@gmail.com</a>
<a href=""mailto:ge.o.rge..mor.gan.2009@gmail.com"">ge.o.rge..mor.gan.2009@gmail.com</a>
<a href=""mailto:geo.r.g.e.mo.r.gan2.00.9@gmail.com"">geo.r.g.e.mo.r.gan2.00.9@gmail.com</a>
<a href=""mailto:g.eo.r.ge..mo.r.g.an.20.0.9@gmail.com"">g.eo.r.ge..mo.r.g.an.20.0.9@gmail.com</a>
<a href=""mailto:ge.org.e..m.o.rgan.2.00.9@gmail.com"">ge.org.e..m.o.rgan.2.00.9@gmail.com</a>
<a href=""mailto:g.e.org.e.mor.g.an.2.0.09@gmail.com"">g.e.org.e.mor.g.an.2.0.09@gmail.com</a>
<a href=""mailto:geo.rge..m.o.r.g.an2.0.0.9@gmail.com"">geo.rge..m.o.r.g.an2.0.0.9@gmail.com</a>
<a href=""mailto:g.eo.r.g.e..morga.n2.0.0.9@gmail.com"">g.eo.r.g.e..morga.n2.0.0.9@gmail.com</a>
<a href=""mailto:ge.or.ge.morg.an.20.0.9@gmail.com"">ge.or.ge.morg.an.20.0.9@gmail.com</a>
<a href=""mailto:ge.o.r.ge.mo.rg.an.2.00.9@gmail.com"">ge.o.r.ge.mo.rg.an.2.00.9@gmail.com</a>
<a href=""mailto:geo.r.g.e..m.org.an.2009@gmail.com"">geo.r.g.e..m.org.an.2009@gmail.com</a>
<a href=""mailto:geo.r.g.e...m.or.g.an.2.0.0.9@gmail.com"">geo.r.g.e...m.or.g.an.2.0.0.9@gmail.com</a>
<a href=""mailto:g.e.o.r.g.e...mo.r.g.an20.09@gmail.com"">g.e.o.r.g.e...mo.r.g.an20.09@gmail.com</a>
<a href=""mailto:georg.e...morgan.2.0.09@gmail.com"">georg.e...morgan.2.0.09@gmail.com</a>
<a href=""mailto:g.e.or.ge.m.o.r.g.an.2.009@gmail.com"">g.e.or.ge.m.o.r.g.an.2.009@gmail.com</a>
<a href=""mailto:g.eo.rg.e..m.org.a.n200.9@gmail.com"">g.eo.rg.e..m.org.a.n200.9@gmail.com</a>
<a href=""mailto:g.e.o.rge..m.or.ga.n.20.09@gmail.com"">g.e.o.rge..m.or.ga.n.20.09@gmail.com</a>
<a href=""mailto:g.e.or.g.e.mo.rga.n.20.09@gmail.com"">g.e.or.g.e.mo.rga.n.20.09@gmail.com</a>
<a href=""mailto:ge.orge.m.org.an.200.9@gmail.com"">ge.orge.m.org.an.200.9@gmail.com</a>
<a href=""mailto:george..m.or.gan.200.9@gmail.com"">george..m.or.gan.200.9@gmail.com</a>
<a href=""mailto:ge.o.r.ge.m.org.a.n2.0.0.9@gmail.com"">ge.o.r.ge.m.org.a.n2.0.0.9@gmail.com</a>
<a href=""mailto:g.eo.rge..morg.an200.9@gmail.com"">g.eo.rge..morg.an200.9@gmail.com</a>
<a href=""mailto:ge.o.rge.mor.gan.200.9@gmail.com"">ge.o.rge.mor.gan.200.9@gmail.com</a>
<a href=""mailto:ge.or.g.e...mo.rgan20.0.9@gmail.com"">ge.or.g.e...mo.rgan20.0.9@gmail.com</a>
<a href=""mailto:g.e.or.g.e..morg.a.n2.0.09@gmail.com"">g.e.or.g.e..morg.a.n2.0.09@gmail.com</a>
<a href=""mailto:g.eo.r.ge.m.or.g.an2.0.09@gmail.com"">g.eo.r.ge.m.or.g.an2.0.09@gmail.com</a>
<a href=""mailto:g.e.orge..m.organ20.0.9@gmail.com"">g.e.orge..m.organ20.0.9@gmail.com</a>
<a href=""mailto:g.eo.rge..morgan2.0.09@gmail.com"">g.eo.rge..morgan2.0.09@gmail.com</a>
<a href=""mailto:g.e.orge...morg.a.n.2.0.09@gmail.com"">g.e.orge...morg.a.n.2.0.09@gmail.com</a>
<a href=""mailto:ge.or.g.e...mo.rg.a.n.2.009@gmail.com"">ge.or.g.e...mo.rg.a.n.2.009@gmail.com</a>
<a href=""mailto:ge.orge...m.o.rg.an20.09@gmail.com"">ge.orge...m.o.rg.an20.09@gmail.com</a>
<a href=""mailto:george.m.o.rg.an.2.00.9@gmail.com"">george.m.o.rg.an.2.00.9@gmail.com</a>
<a href=""mailto:ge.org.e..m.organ2.0.09@gmail.com"">ge.org.e..m.organ2.0.09@gmail.com</a>
<a href=""mailto:g.e.o.r.ge..morga.n2009@gmail.com"">g.e.o.r.ge..morga.n2009@gmail.com</a>
<a href=""mailto:g.eo.r.g.e...m.o.r.g.an.2.009@gmail.com"">g.eo.r.g.e...m.o.r.g.an.2.009@gmail.com</a>
<a href=""mailto:g.eor.ge..mo.r.ga.n2009@gmail.com"">g.eor.ge..mo.r.ga.n2009@gmail.com</a>
<a href=""mailto:g.eor.ge..m.o.r.gan.200.9@gmail.com"">g.eor.ge..m.o.r.gan.200.9@gmail.com</a>
<a href=""mailto:geo.r.g.e...m.o.r.g.a.n2.0.0.9@gmail.com"">geo.r.g.e...m.o.r.g.a.n2.0.0.9@gmail.com</a>
<a href=""mailto:ge.org.e...m.o.r.ga.n2009@gmail.com"">ge.org.e...m.o.r.ga.n2009@gmail.com</a>
<a href=""mailto:ge.org.e..m.o.r.g.an.20.0.9@gmail.com"">ge.org.e..m.o.r.g.an.20.0.9@gmail.com</a>
<a href=""mailto:g.e.or.g.e.mo.r.ga.n.200.9@gmail.com"">g.e.or.g.e.mo.r.ga.n.200.9@gmail.com</a>
<a href=""mailto:g.eorg.e..morg.a.n2.009@gmail.com"">g.eorg.e..morg.a.n2.009@gmail.com</a>
<a href=""mailto:ge.orge...morgan.2.0.09@gmail.com"">ge.orge...morgan.2.0.09@gmail.com</a>
<a href=""mailto:ge.or.g.e...m.o.rg.a.n20.09@gmail.com"">ge.or.g.e...m.o.rg.a.n20.09@gmail.com</a>
<a href=""mailto:georg.e..m.organ20.09@gmail.com"">georg.e..m.organ20.09@gmail.com</a>
<a href=""mailto:g.e.o.rg.e..m.or.g.an.2.0.09@gmail.com"">g.e.o.rg.e..m.or.g.an.2.0.09@gmail.com</a>
<a href=""mailto:g.e.o.r.ge...m.or.g.an.2.00.9@gmail.com"">g.e.o.r.ge...m.or.g.an.2.00.9@gmail.com</a>
<a href=""mailto:g.e.orge..m.or.g.a.n2009@gmail.com"">g.e.orge..m.or.g.a.n2009@gmail.com</a>
<a href=""mailto:g.e.or.ge.m.org.a.n2.009@gmail.com"">g.e.or.ge.m.org.a.n2.009@gmail.com</a>
<a href=""mailto:ge.o.r.ge..m.o.rg.an.2.0.0.9@gmail.com"">ge.o.r.ge..m.o.rg.an.2.0.0.9@gmail.com</a>
<a href=""mailto:geo.r.g.e..mo.rg.a.n2.0.09@gmail.com"">geo.r.g.e..mo.rg.a.n2.0.09@gmail.com</a>
<a href=""mailto:g.e.org.e..mo.rgan20.0.9@gmail.com"">g.e.org.e..mo.rgan20.0.9@gmail.com</a>
<a href=""mailto:ge.o.rge...m.or.g.a.n.2.0.09@gmail.com"">ge.o.rge...m.or.g.a.n.2.0.09@gmail.com</a>
<a href=""mailto:g.e.orge.m.org.an.2.00.9@gmail.com"">g.e.orge.m.org.an.2.00.9@gmail.com</a>
<a href=""mailto:ge.o.r.g.e...mo.rg.a.n20.0.9@gmail.com"">ge.o.r.g.e...mo.rg.a.n20.0.9@gmail.com</a>
<a href=""mailto:geor.ge.morg.an2.0.0.9@gmail.com"">geor.ge.morg.an2.0.0.9@gmail.com</a>
<a href=""mailto:g.eorg.e...m.organ2.009@gmail.com"">g.eorg.e...m.organ2.009@gmail.com</a>
<a href=""mailto:ge.orge..mo.rg.an.2.0.0.9@gmail.com"">ge.orge..mo.rg.an.2.0.0.9@gmail.com</a>
<a href=""mailto:g.e.orge.mo.rg.a.n20.09@gmail.com"">g.e.orge.mo.rg.a.n20.09@gmail.com</a>
<a href=""mailto:geo.r.g.e..mo.r.gan2009@gmail.com"">geo.r.g.e..mo.r.gan2009@gmail.com</a>
<a href=""mailto:g.eo.rge..m.o.rgan2009@gmail.com"">g.eo.rge..m.o.rgan2009@gmail.com</a>
<a href=""mailto:g.eo.r.ge..morg.an2.009@gmail.com"">g.eo.r.ge..morg.an2.009@gmail.com</a>
<a href=""mailto:geor.g.e...mo.rga.n2.00.9@gmail.com"">geor.g.e...mo.rga.n2.00.9@gmail.com</a>
<a href=""mailto:geor.g.e..m.org.an.2009@gmail.com"">geor.g.e..m.org.an.2009@gmail.com</a>
<a href=""mailto:ge.o.r.g.e..morgan200.9@gmail.com"">ge.o.r.g.e..morgan200.9@gmail.com</a>
<a href=""mailto:ge.o.rge...m.o.rg.a.n200.9@gmail.com"">ge.o.rge...m.o.rg.a.n200.9@gmail.com</a>
<a href=""mailto:geo.rg.e..m.or.g.a.n.20.09@gmail.com"">geo.rg.e..m.or.g.a.n.20.09@gmail.com</a>
<a href=""mailto:georg.e..mo.rg.a.n.2.00.9@gmail.com"">georg.e..mo.rg.a.n.2.00.9@gmail.com</a>
<a href=""mailto:g.eorg.e...mo.r.g.a.n2009@gmail.com"">g.eorg.e...mo.r.g.a.n2009@gmail.com</a>
<a href=""mailto:ge.org.e...m.or.g.a.n2.00.9@gmail.com"">ge.org.e...m.or.g.a.n2.00.9@gmail.com</a>
<a href=""mailto:g.e.or.ge.mo.rgan2009@gmail.com"">g.e.or.ge.mo.rgan2009@gmail.com</a>
<a href=""mailto:ge.or.g.e..m.org.an2.0.09@gmail.com"">ge.or.g.e..m.org.an2.0.09@gmail.com</a>
<a href=""mailto:geor.g.e.mo.rgan2.00.9@gmail.com"">geor.g.e.mo.rgan2.00.9@gmail.com</a>
<a href=""mailto:geo.rge..m.o.r.g.an.2.009@gmail.com"">geo.rge..m.o.r.g.an.2.009@gmail.com</a>
<a href=""mailto:g.e.or.g.e..mor.ga.n2.0.09@gmail.com"">g.e.or.g.e..mor.ga.n2.0.09@gmail.com</a>
<a href=""mailto:g.e.o.rg.e.m.o.r.gan.2.00.9@gmail.com"">g.e.o.rg.e.m.o.r.gan.2.00.9@gmail.com</a>
<a href=""mailto:georg.e...m.orga.n.2009@gmail.com"">georg.e...m.orga.n.2009@gmail.com</a>
<a href=""mailto:g.eorge...m.o.rgan.2.009@gmail.com"">g.eorge...m.o.rgan.2.009@gmail.com</a>
<a href=""mailto:g.eo.rge.m.orga.n.2.00.9@gmail.com"">g.eo.rge.m.orga.n.2.00.9@gmail.com</a>
<a href=""mailto:g.eo.rg.e.m.orga.n2.0.09@gmail.com"">g.eo.rg.e.m.orga.n2.0.09@gmail.com</a>
<a href=""mailto:ge.o.rge.m.o.rgan2.00.9@gmail.com"">ge.o.rge.m.o.rgan2.00.9@gmail.com</a>
<a href=""mailto:g.e.orge..m.o.r.gan.200.9@gmail.com"">g.e.orge..m.o.r.gan.200.9@gmail.com</a>
<a href=""mailto:ge.or.g.e..morg.an20.09@gmail.com"">ge.or.g.e..morg.an20.09@gmail.com</a>
<a href=""mailto:g.e.o.r.ge...m.or.g.a.n20.09@gmail.com"">g.e.o.r.ge...m.or.g.a.n20.09@gmail.com</a>
<a href=""mailto:george..m.or.g.an20.09@gmail.com"">george..m.or.g.an20.09@gmail.com</a>
<a href=""mailto:g.e.or.g.e.m.organ2.0.0.9@gmail.com"">g.e.or.g.e.m.organ2.0.0.9@gmail.com</a>
<a href=""mailto:geor.g.e.m.o.rg.an20.09@gmail.com"">geor.g.e.m.o.rg.an20.09@gmail.com</a>
<a href=""mailto:g.eo.rg.e..m.o.r.g.an.2.00.9@gmail.com"">g.eo.rg.e..m.o.r.g.an.2.00.9@gmail.com</a>
<a href=""mailto:g.e.o.rg.e...mo.rga.n.200.9@gmail.com"">g.e.o.rg.e...mo.rga.n.200.9@gmail.com</a>
<a href=""mailto:g.eorge..morg.an.2.009@gmail.com"">g.eorge..morg.an.2.009@gmail.com</a>
<a href=""mailto:g.eo.r.ge.m.organ.2009@gmail.com"">g.eo.r.ge.m.organ.2009@gmail.com</a>
<a href=""mailto:g.e.org.e...m.o.rg.an20.0.9@gmail.com"">g.e.org.e...m.o.rg.an20.0.9@gmail.com</a>
<a href=""mailto:ge.or.g.e...m.or.gan2.009@gmail.com"">ge.or.g.e...m.or.gan2.009@gmail.com</a>
<a href=""mailto:ge.or.g.e..mo.rgan200.9@gmail.com"">ge.or.g.e..mo.rgan200.9@gmail.com</a>
<a href=""mailto:george..m.or.g.an.20.09@gmail.com"">george..m.or.g.an.20.09@gmail.com</a>
<a href=""mailto:g.e.org.e..mor.ga.n.2009@gmail.com"">g.e.org.e..mor.ga.n.2009@gmail.com</a>
<a href=""mailto:g.eor.g.e.mor.g.an20.09@gmail.com"">g.eor.g.e.mor.g.an20.09@gmail.com</a>
<a href=""mailto:george...mor.g.an.20.09@gmail.com"">george...mor.g.an.20.09@gmail.com</a>
<a href=""mailto:geo.r.g.e.morg.a.n2.0.0.9@gmail.com"">geo.r.g.e.morg.a.n2.0.0.9@gmail.com</a>
<a href=""mailto:g.e.o.r.ge...m.or.g.an.200.9@gmail.com"">g.e.o.r.ge...m.or.g.an.200.9@gmail.com</a>
<a href=""mailto:g.eor.ge..mo.rgan2.009@gmail.com"">g.eor.ge..mo.rgan2.009@gmail.com</a>
<a href=""mailto:ge.o.rg.e..m.org.an.20.0.9@gmail.com"">ge.o.rg.e..m.org.an.20.0.9@gmail.com</a>
<a href=""mailto:g.eo.rge..morga.n.2.00.9@gmail.com"">g.eo.rge..morga.n.2.00.9@gmail.com</a>
<a href=""mailto:g.e.or.ge.m.or.gan.200.9@gmail.com"">g.e.or.ge.m.or.gan.200.9@gmail.com</a>
<a href=""mailto:georg.e..mo.rg.an200.9@gmail.com"">georg.e..mo.rg.an200.9@gmail.com</a>
<a href=""mailto:george.m.o.rg.a.n.20.09@gmail.com"">george.m.o.rg.a.n.20.09@gmail.com</a>
<a href=""mailto:g.eorge.mo.r.g.a.n.20.0.9@gmail.com"">g.eorge.mo.r.g.a.n.20.0.9@gmail.com</a>
<a href=""mailto:geo.r.g.e..mo.r.g.a.n.2.0.0.9@gmail.com"">geo.r.g.e..mo.r.g.a.n.2.0.0.9@gmail.com</a>
<a href=""mailto:g.eo.r.ge..m.o.rg.an.2.00.9@gmail.com"">g.eo.r.ge..m.o.rg.an.2.00.9@gmail.com</a>
<a href=""mailto:g.e.o.r.ge.m.or.ga.n.200.9@gmail.com"">g.e.o.r.ge.m.or.ga.n.200.9@gmail.com</a>
<a href=""mailto:geo.r.ge..mor.g.a.n.2.00.9@gmail.com"">geo.r.ge..mor.g.a.n.2.00.9@gmail.com</a>
<a href=""mailto:geo.rg.e.mo.r.ga.n.2.00.9@gmail.com"">geo.rg.e.mo.r.ga.n.2.00.9@gmail.com</a>
<a href=""mailto:g.e.or.ge.mo.rg.an20.09@gmail.com"">g.e.or.ge.mo.rg.an20.09@gmail.com</a>
<a href=""mailto:g.eo.rg.e..m.or.g.a.n2.0.0.9@gmail.com"">g.eo.rg.e..m.or.g.a.n2.0.0.9@gmail.com</a>
<a href=""mailto:g.e.orge...mor.g.an.200.9@gmail.com"">g.e.orge...mor.g.an.200.9@gmail.com</a>
<a href=""mailto:g.e.or.g.e...m.organ.2.0.09@gmail.com"">g.e.or.g.e...m.organ.2.0.09@gmail.com</a>"
iaxbaN5P,Untitled,kjmkj,C++,Saturday 3rd of June 2023 04:05:26 PM CDT,"#include <bits/stdc++.h>

using namespace std;
#define int long long
#define double long double
#define pb push_back
#define randGen mt19937 rng(chrono::steady_clock::now().time_since_epoch().count())

const int INF = 1e18;
const int MOD = 1e9 + 7;
map<int, int> a;

signed main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  cout.tie(NULL);
  int n;
  cin >> n;
  vector<int> sum[n + 1], sum1[n + 1];
  for (int i = 0; i < n; ++i) {
    int h;
    cin >> h;
    for (int j = 1; j * j <= h && j <= n; ++j) {
      if (h / j <= n && h / j != j) {
        sum[h / j].pb(i);
      }
      sum[j].pb(i);
    }
  }

  for (int i = 0; i < n; ++i) {
    if (i > 0) {
      sum1[1].pb(sum1[1].back() + 1);
    } else {
      sum1[1].pb(1);
    }
    sum1[1][sum1[1].size() - 1] %= MOD;
  }
  for (int i = 2; i <= n; ++i) {
    for (int j = 0; j < sum[i].size(); ++j) {
      auto it = lower_bound(sum[i - 1].begin(), sum[i - 1].end(), sum[i][j]);
      int u = it - sum[i - 1].begin(), pl = 0;
      if (u != 0) {
        pl = sum1[i - 1][u - 1];
      }
      if (sum1[i].empty()) {
        sum1[i].pb(pl % MOD);
      } else {
        sum1[i].pb(sum1[i].back() + pl);
        sum1[i][sum1[i].size() - 1] %= MOD;
      }
    }
  }
  int suma = 0;
  for (int i = 1; i <= n; ++i) {
    if (sum1[i].empty()) {
      continue;
    }
    suma += sum1[i].back();
    suma %= MOD;
  }
  cout << suma % MOD;
  return 0;
}
"
sPRqjQHE,Untitled,kjmkj,C++,Saturday 3rd of June 2023 03:51:48 PM CDT,"#include <bits/stdc++.h>

using namespace std;
#define int long long
#define double long double
#define pb push_back
#define randGen mt19937 rng(chrono::steady_clock::now().time_since_epoch().count())

const int INF = 1e18;
const int MOD = 1e9 + 7;
map<int, int> a;

signed main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  cout.tie(NULL);
  int n;
  cin >> n;
  vector<int> sum[n + 1], sum1[n + 1];
  for (int i = 0; i < n; ++i) {
    int h;
    cin >> h;
    for (int j = 1; j * j <= h && j <= n; ++j) {
      if (h / j <= n && h / j != j) {
        sum[h / j].pb(i);
      }
      sum[j].pb(i);
    }
  }

  for (int i = 0; i < n; ++i) {
    if (i > 0) {
      sum1[1].pb(sum1[1].back() + 1);
    } else {
      sum1[1].pb(1);
    }
    sum1[1][sum1[1].size() - 1] %= MOD;
  }
  for (int i = 2; i <= n; ++i) {
    for (int j = 0; j < sum[i].size(); ++j) {
      auto it = lower_bound(sum[i - 1].begin(), sum[i - 1].end(), sum[i][j]);
      int u = it - sum[i - 1].begin(), pl = 0;
      if (u != 0) {
        pl = sum1[i - 1][u - 1];
      }
      if (sum1[i].empty()) {
        sum1[i].pb(pl % MOD);
      } else {
        sum1[i].pb(sum1[i].back() + pl);
        sum1[i][sum1[i].size() - 1] %= MOD;
      }
    }
  }
  int suma = 0;
  for (int i = 1; i <= n; ++i) {
    if (sum1[i].empty()) {
      continue;
    }
    suma += sum1[i].back();
  }
  cout << suma;
  return 0;
}
"
KvcwGbkR,Higman and Kruskal relation,EWTD,Scala,Saturday 3rd of June 2023 03:41:20 PM CDT,"sealed trait Expr{ def HKRelation(expr: Expr): Boolean }

case class Variable(name: String) extends Expr {
  override def toString: String = { name.toLowerCase() }
  override def HKRelation(expr: Expr): Boolean = expr match {
    case Variable(vname) => true
    case Function(fname, fargs) => fargs.nonEmpty && fargs.exists(p => this.HKRelation(p))
    case default => false
  }
}

case class Constant(name: String) extends Expr {
  override def toString: String = { name.toUpperCase() }
  override def HKRelation(expr: Expr): Boolean = expr match {
    case Constant(cname) => name == cname
    case Function(fname, fargs) => fargs.nonEmpty && fargs.exists(p => this.HKRelation(p))
    case default => false
  }
}

case class Function(name: String, args: List[Expr] = List()) extends Expr {
  override def toString: String = {
    val args_str =
      if (args.isEmpty)
        ""()""
      else if (args.length == 1)
        ""("" + args.head.toString + "")""
      else {
        var buffer = args.head.toString
        for(idx <- 1 until args.length) {
          buffer += "", "" + args.apply(idx).toString
        }
        ""("" + buffer + "")""
      }
    name + args_str
  }

  override def HKRelation(expr: Expr): Boolean = expr match {
    case Function(fname, fargs) =>
      fargs.nonEmpty && fargs.exists(p => this.HKRelation(p)) ||
        (name == fname && args.length == fargs.length && args.iterator.zip(fargs.iterator).forall(x => x._1.HKRelation(x._2)))
    case default => false
  }
}

object Main {
  def main(args: Array[String]): Unit = {
    val test1 = ( Function(""Tree"", Function(""Leaf"", Constant(""A"")::Nil) :: Function(""Leaf"", Variable(""x"") :: Nil) :: Nil),
      Function(""Tree"", Function(""Tree"", Function(""Leaf"", Constant(""A"")::Nil) :: Function(""Leaf"", Function(""f"", Variable(""y"") :: Variable(""z"") :: Nil) :: Nil) :: Nil) ::
                       Function(""g"", Variable(""y"") :: Variable(""z"") :: Nil) :: Nil))
    val test2 =( Function(""f"", Function(""g"", Function(""h"", Variable(""x"") :: Nil) :: Nil) :: Nil),
      Function(""f"", Function(""h"", Variable(""x"") :: Nil) :: Nil))
    val tests = test1 :: test2 :: Nil
    var testCnt = 1
    for (test <- tests) {
      println(""Test #"" + testCnt)
      println(test._1.toString + "" <= "" + test._2.toString + "" -> "" + test._1.HKRelation(test._2))
      testCnt += 1
    }
  }
}"
pLeZkXH7,Untitled,Salvens,C++,Saturday 3rd of June 2023 03:24:45 PM CDT,"#include <algorithm>
#include <iostream>
#include <iomanip>
#include <cmath>
#include <vector>
#include <set>
#include <map>
#include <string>
#include <cassert>
#include <numeric>
#include <queue>
#include <cstdint>
#include <string>
#include <unordered_map>
using namespace std;

#define int long long
#define IOS ios::sync_with_stdio(false); cin.tie(0); cout.tie(0);

const long long INF = 1e18 + 7;
const double EPS = 1e-9;
const int N = 5010;
const int MOD = 1e9 + 7;
int P = 23039, P1 = 22943;


int d[N][N];
int power[N], power1[N];

int Get(char c) {
    return c - 'a' + 1;
}

void MakeHash(string s, vector<pair<int, int>>& hse) {
    hse[0].first = Get(s[0]);
    hse[0].second = Get(s[0]);
    for (int i = 1; i < s.size(); ++i) {
        hse[i].first = (hse[i - 1].first * P + Get(s[i])) % MOD;
        hse[i].second = (hse[i - 1].second * P1 + Get(s[i]) * power1[i]) % MOD;
    }
}

bool IsPol(string x) {
    string y = x;
    reverse(y.begin(), y.end());
    return x == y;
}

inline void solve() {
    string s;
    int n;
    cin >> s;
    n = s.size();
    string t = s;
    reverse(t.begin(), t.end());

    power[0] = 1;
    power1[0] = 1;
    for (int i = 1; i < n; ++i) {
        power[i] = power[i - 1] * P % MOD;
        power1[i] = power1[i - 1] * P1 % MOD;
    }

    vector<pair<int, int>> pref(n), suff(n);
    MakeHash(s, pref);
    MakeHash(t, suff);

//    for (auto [x, y]: pref) {
//        cout << x << ' ' << y << ' ';
//    }
//    cout << endl;
//    for (auto [x, y]: suff) {
//        cout << x << ' ' << y << ' ';
//    }
//    cout << endl << endl;


    for (int l = 0; l < n; ++l) {
        for (int r = l; r < n; ++r) {

            int l1 = n - 1 - r, r1 = n - 1 - l;

            int x = (pref[r].first - pref[l].first * power[r - l + 1]) % MOD;
            int y = (suff[r1].first - suff[l1].first * power[r1 - l1 + 1]) % MOD;

            int x2 = (pref[r].second - pref[l].second * power1[r - l + 1]) % MOD;
            int y2 = (suff[r1].second - suff[l1].second * power1[r1 - l1 + 1]) % MOD;

            if (x == y && x2 == y2) {
                d[l][r] = 1;
            }
        }
    }

    for (int i = 0; i < n; ++i) {
        for (int j = 0; j < n; ++j) {
            cout << d[i][j] << ' ';
        }
        cout << endl;
    }

    for (int i = 0; i < n; ++i) {
        d[i][i] = 1;
    }
    for (int i = 1; i < n; ++i) {
        for (int x = 0, y = i; y < n; ++x, ++y) {
            d[x][y] += d[x + 1][y] + d[x][y - 1] - d[x + 1][y - 1];
        }
    }

    int q;
    cin >> q;
    while (q--) {
        int x, y;
        cin >> x >> y;
        cout << d[x - 1][y - 1] << ' ';
    }
}



int32_t main() {
    IOS;

    int tt = 1;
//    cin >> t;
    while (tt--) {
        solve();
    }
    return 0;
}

/*
1.  数组开够了没
2.  文件名写对了没，文件夹建了吗
3.  内存会不会MLE
4.  多测清空？
5.  调试删干净了没
6.  取模有没有溢出
7.  快速幂底数要取模，幂对 mod-1 取模
8.  前向星和欧拉序要开2倍数组
9.  比较函数如果值相同的话有没有第二优先级
10. 线段树 4 倍空间，线段树合并和可持久化线段树 32 倍空间
11. 看清楚 log 的底数是啥，log后面的数是啥
12. long long 只有正负 2^63-1
*/"
hdSD0QiH,Can't Stop 2,PrezesSmoku,Python,Saturday 3rd of June 2023 03:12:24 PM CDT,"import pygame
import random
#szerokość i wysokość ekranu
SZEROKOSC_EKRANU = 1280
WYSOKOSC_EKRANU = 960

pygame.init()
ekran = pygame.display.set_mode([SZEROKOSC_EKRANU, WYSOKOSC_EKRANU])
zegar = pygame.time.Clock()
obraz_tla = pygame.image.load('images/mountain.png') 
czcionka = pygame.font.SysFont('Comic Sans MS', 35) #nazwa i rozmiar czcionki
obrazki_kosci = []
#wyniki kości
kosci = [1,1,1,1]
#kombinacje na kościach
kombinacje = []
mozliwe_ruchy = []
wybrane_kolumny = []
zablokowane_kolumny = []
for i in range(4):
    obrazki_kosci.append(pygame.image.load('images/kosc-1.png'))

teksty = [""Naciśnij Spacje""]
liczba_pol = [3,5,7,9,11,13,11,9,7,5,3]
skok_x = 70
skok_y = 50
start_x = 240
start_y = 900

def budowa_planszy():
    #współrzędne pierwszego pola
    x = start_x
    y = start_y
    #numer kolumny
    num = 2
    #Operacje wykonywane dla każdej kolumny
    for kolumna in liczba_pol:
        #modyfikacja współrzędnych
        #przesuwamy x w prawo po każdej zbudowanej kolumnie
        x += skok_x
        #Wracamy na dół kolumny aby zacząć budować nową
        y = start_y
        #budowa jednej kolumny
        for i in range(kolumna):
            #Przesuwamy współrzędną y w górę
            y -= skok_y
            #rysowanie koła które będzie czarną obwódką 
            pygame.draw.circle(ekran, (0, 0, 0), (x,y), 22)
            #rysowanie środka pola - kolor dowolny
            #ważne aby dać inne kolory graczom potem
            pygame.draw.circle(ekran, (255, 230, 0), (x,y), 20)
        #przekształcamy liczbę na tekst 
        numer_kolumny = czcionka.render(str(num), True,(0,0,0))
        #Wyświetlamy to nad kolumną
        #cofamy x odrobinę aby wyśrodkować napis
        ekran.blit(numer_kolumny, (x-10,y-70))
        #Przechodzimy do kolejnej kolumny
        num += 1

def pokaz_teksty():
    #współrzędne tekstu
    x_tekstu = 800
    y_tekstu = 40
    #przesunięcie tekstu między linijkami
    skok_tekstu = 50
    for tekst in teksty:
        #stworzenie linijki. 
        #Kolor potem zmienimy na kolor aktywnego gracza
        linijka = czcionka.render(tekst, True,(0,0,0))
        ekran.blit(linijka, (x_tekstu,y_tekstu))
        y_tekstu += skok_tekstu

def rzut_kosci():
    for i in range(4):
        #losowanie dla jednej kostki
        kosci[i] = random.randrange(1,6)
        #załadowanie obrazka o nazwie zależnej od wyniku losowania
        obrazki_kosci[i] = pygame.image.load(f'images/kosc-{kosci[i]}.png')

def sprawdz_mozliwe_ruchy():
    kombinacje.clear()
    #Wyznaczenie wszystkich kombinacji
    kombinacje.append([kosci[0]+kosci[1], kosci[2]+kosci[3]])
    kombinacje.append([kosci[0]+kosci[2], kosci[1]+kosci[3]])
    kombinacje.append([kosci[0]+kosci[3], kosci[1]+kosci[2]])
    mozliwe_ruchy.clear()
    liczba_opcji = 0
    for i in range(len(kombinacje)):
        # tworzymy nową pustą listę na możliwe ruchy z tej kombinacji kości, 
        # jeśli ruch nie będzie możliwy z tej kombinacji to 
        # pustą listę później usuniemy
        mozliwe_ruchy.append([])
        #3 pionki postawione
        if len(wybrane_kolumny) == 3:
            #Sprawdzamy czy pierwsza suma kości znajduje się 
            # w liście wybranych kolumn
            if kombinacje[i][0] in wybrane_kolumny:
                mozliwe_ruchy[liczba_opcji].append(kombinacje[i][0])
            #analogicznie z drugą wartością
            if kombinacje[i][1] in wybrane_kolumny:
                mozliwe_ruchy[liczba_opcji].append(kombinacje[i][1])
        #2 pionki postawione
        elif len(wybrane_kolumny) == 2:
            # Sprawdzenie czy pierwszy wynik jest już wybrany 
            if kombinacje[i][0] in wybrane_kolumny:
                mozliwe_ruchy[liczba_opcji].append(kombinacje[i][0])
                #Jeśli pierwsza opcja jest w liście wybranych to druga jeśli 
                # nie jest zablokowana to możemy się poruszyć również w tej kolumnie
                if not kombinacje[i][1] in zablokowane_kolumny:
                    mozliwe_ruchy[liczba_opcji].append(kombinacje[i][1])
            #analogiczne sprawdzenie drugiego wyniku
            elif kombinacje[i][1] in wybrane_kolumny:
                mozliwe_ruchy[liczba_opcji].append(kombinacje[i][1])
                if not kombinacje[i][0] in zablokowane_kolumny:
                    mozliwe_ruchy[liczba_opcji].append(kombinacje[i][0])
            #Jeśli obie wartości nie znajdują się w liście wybranych 
            #to sprawdzam czy pierwsza jest nie zablokowana
            elif not kombinacje[i][0] in zablokowane_kolumny:
                mozliwe_ruchy[liczba_opcji].append(kombinacje[i][1])
                #Jeśli obie nie są zablokowane to musze je dodać oddzielnie 
                # jest to przypadek gdy mamy dwa pionki na planszy 
                # A dodać możemy tylko jeden, więc musimy wybrać który
                #Dlatego zwiększamy liczbę opcji i dodajemy kolejną opcję jako nową listę 
                if not kombinacje[i][1] in zablokowane_kolumny:
                    liczba_opcji += 1
                    mozliwe_ruchy.append([kombinacje[i][1]])
            #Sprawdzenie czy choć druga opcja jest dostępna
            elif not kombinacje[i][1] in zablokowane_kolumny:
                mozliwe_ruchy[liczba_opcji].append(kombinacje[i][1])
        #jeden lub zero użytych pionków
        else:
            if not kombinacje[i][0] in zablokowane_kolumny:
                mozliwe_ruchy[liczba_opcji].append(kombinacje[i][0])
            if not kombinacje[i][1] in zablokowane_kolumny:
                mozliwe_ruchy[liczba_opcji].append(kombinacje[i][1])
        liczba_opcji += 1
    #Usunięcie pustych elementów
    while [] in mozliwe_ruchy:
        mozliwe_ruchy.remove([])
    #wyświetlenie tekstów
    teksty.clear()
    for i in range(len(mozliwe_ruchy)):
        teksty.append(f'{i+1}. Ruch w kolumnach {mozliwe_ruchy[i]}')
        




program_dziala = True
while program_dziala:
    for zdarzenie in pygame.event.get():
        if zdarzenie.type == pygame.KEYDOWN:
            if zdarzenie.key == pygame.K_ESCAPE:
                program_dziala = False
            if zdarzenie.key == pygame.K_SPACE:
                rzut_kosci()
                sprawdz_mozliwe_ruchy()
        elif zdarzenie.type == pygame.QUIT:
            program_dziala = False
    

    #wyświetl tło
    ekran.blit(obraz_tla, (0,0))
    #Kosci
    ekran.blit(obrazki_kosci[0], (16,16))
    ekran.blit(obrazki_kosci[1], (116,16))
    ekran.blit(obrazki_kosci[2], (16,116))
    ekran.blit(obrazki_kosci[3], (116,116))
    #Plansza
    budowa_planszy()
    #Teksty
    pokaz_teksty()
    #odświerz ekran
    pygame.display.flip()
    zegar.tick(60) #liczba klatek na sekunde

pygame.quit() "
6ZZ3mvtm,"Cambiar base a Binario, Octal y Hexadecimal. Simple. Python",JPablos,Python,Saturday 3rd of June 2023 02:50:36 PM CDT,"# -*- coding: utf-8 -*-
""""""
Created on Fri Jun  2 06:33:22 2023
Este código permite cambiar un número decimal ingresado por el usuario
a otras bases, como a Binario, Octal o Hexadecimal.

Utiliza tkinter para crear una interfaz gráfica.

@alpfa
""""""

import tkinter as tk
from tkinter import ttk


def convert():
    """"""
    Código que permite el cambio de base 10 a Binario, Octal y Hexadecimal.

    Returns
    -------
    La correspondencia en las bases citadas.

    """"""
    decimal = int(decimal_entry.get())
    binary = bin(decimal)[2:]
    hexadecimal = hex(decimal)[2:]
    octal = oct(decimal)[2:]

    result_text.delete(""1.0"", tk.END)
    result_text.insert(tk.END, f""Decimal ingresado: {decimal}\n\n"")
    result_text.insert(tk.END, ""Conversión a otras bases:\n\n"")
    result_text.insert(tk.END, f""Binario (0:b):     {binary}\n"")
    result_text.insert(tk.END, f""Octal (0:o):       {octal}\n"")
    result_text.insert(tk.END, f""Hexadecimal (0:x): {hexadecimal}"")


root = tk.Tk()
root.title(""Cambio de Base a Binario, Octal y Hexadecimal"")

mainframe = ttk.Frame(root, padding=""3 3 12 12"")
mainframe.grid(column=0, row=0, sticky=(tk.N, tk.W, tk.E, tk.S))
root.columnconfigure(0, weight=1)
root.rowconfigure(0, weight=1)

decimal_label = tk.Label(
    mainframe, text=""Cambiar base, ingrese un número Decimal y presione:   "")
decimal_label.grid(column=1, row=2, sticky=tk.W)

decimal_entry = tk.Entry(mainframe)
decimal_entry.grid(column=2, row=1, sticky=tk.W)

convert_button = tk.Button(mainframe, text=""Convertir"", command=convert)
convert_button.grid(column=2, row=2, sticky=tk.W)

result_text = tk.Text(mainframe, height=8, width=50)
result_text.grid(column=2, row=3, rowspan=4, sticky=(tk.W, tk.E))
result_text.tag_configure(""title"", font=(""Courier New"", 12, ""bold""))

result_text.insert(tk.END, ""Resultado:\n"", ""title"")

root.mainloop()
"
j8KBgett,Zadania - lekcja 14,drakon-firestone,Python,Saturday 3rd of June 2023 02:16:33 PM CDT,"################## ZADANIA #######################

'''
Zad 1. Utwórz symulator przeglądarki gdzie historia przeglądania będzie zapisywana w
formie stosu. Użytkownik może wchodzić na różne strony w programie i cofać się
w historii przeglądania. Upakuj całą funkcjonalność w klasie BrowserHistory 
natomiast do stworzenia samej historii wykorzystaj stos z zadań poprzednich.

Potrzebne zmienne w klasie BrowserHistory:
 - struktura do przechowywania historii przeglądania
 - zapamiętanie obecnej strony

Wymagane metody:
 - (oczywiście) konstuktor
 - przejście do strony o podanym adresie
 - cofnięcie się do poprzedniej strony
 

Zad. dod. 1.
Dodaj opcję przejścia do następnej strony w historii (jeśli cofnęliśmy się). HINT: Można zastosować 2 listy, jedną na strony przed aktualnie wyświetlaną i drugą na te po aktualnie wyświetlanej. Zmodyfikuj odpowiednio metodę cofnięcia aby współgrała z obecnym metodem przechodzenia po historii.
'''

'''
Zad 2. Utwórz symulator kolejki do kina gdzie elementami kolejki są klienci razem z ich
zamówieniem. Do utworzenia symulatora kolejki użyj naszej struktury Kolejki, którą
stworzyliśmy wcześniej.

Klienci są reprezentowani przez klasę Customer, która ma atrybuty name (imię
klienta) i order (zamówienie klienta). 
Kolejka do kina jest reprezentowana przez
klasę CinemaQueue, która używa implementacji kolejki (klasy Queue) do
przechowywania klientów.
	● Metoda is_empty sprawdza, czy kolejka jest pusta.
	● Metoda add_customer dodaje klienta do kolejki.
	● Metoda remove_customer usuwa klienta z kolejki.
	● Metoda next_customer_order zwraca zamówienie klienta, który jest
	  pierwszy w kolejce, ale go nie usuwa.

Przetestuj działanie klasy i ich metod (dodaj kilku klientów do listy i obsłuż wszystkich klientów czyli po prostu wyświetl ich zamówienia z informacją że zostali obsłużeniu aż kolejka będzie pusta)
'''

'''
Zad. dod. 2.
Napisz funkcję, która sprawdzi, czy dany ciąg znaków jest palindromem,
korzystając z naszej implementacji stosu.

https://sjp.pwn.pl/slowniki/palindrom.html
'''

"
XzzTWaA9,Untitled,A1fredPennyworth,C,Saturday 3rd of June 2023 02:09:30 PM CDT,"void summator(void *state, const void *element) {
    *(int *)state += *(const int *)element;
}

int main() {
    int result = 0;
    int init_val = 0;
    int a[10] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
    std_accumulate((void *)(&result), a, sizeof(int), 10, &init_val, summator); 
    printf(""%d\n"", result);
}"
HqQSeEBc,Zadania - kolejka,drakon-firestone,Python,Saturday 3rd of June 2023 02:03:45 PM CDT,"# Stwórz klasę Queue (kolejka) która będzie zawierała implementację struktury danych kolejka.
# Niech posiada ona:
# - sprawdzenie czy kolejka jest pusta - metoda is_empty(),
# - dodanie elementu do końca kolejki - metoda enqueue(),
# - usuwanie elementu z początku kolejki - metoda dequeue():,
# - sprawdzenie jaki element znajduje się na początku kolejki bez usuwania go - metoda peek()
# zabezpiecz metody enqueue() oraz peek() przed sytuacją z pustą kolejką

# Wykorzystaj stworzoną klasę do stworzenia przykładowej kolejki, dodaj do niej min. 3 elementy i przetestuj działanie pozostałych metod."
RMSKsTkP,Zadanie - stos,drakon-firestone,Python,Saturday 3rd of June 2023 01:56:38 PM CDT,"# stwóz klasę Stack

    # utwórz jej konstruktor 
    # zawrzyj w nim stworzenie nowej tablicy wewnątrz obiektu
	
    	

    # stwórz metodę size() należącą do klasy
    # niech zwraca ona rozmiar stosu (ilosć elementów przechowywanych na stosie/liście)
    
        

    # stwórz is_empty() należącą do klasy
    # niech zwraca ona wartość True jeśli stos jest pusty
    # oraz wartość False jeśli stos zawiera jakieś elementy
    
        
    
    # stwórz metodę push(item) należącą do klasy 
    # i przyjmującą element item dodawany na koniec stosu
    
        

    # stwórz metodę pop() należącą do klasy 
    # niech zwraca ona ostatni element stosu i usuwa go z listy 
    # zabezpiecz metodę w sytuacji pustego stosu
    
        
            

    
    # stwórz metodę peek() należącą do klasy 
    # niech zwraca ona ostatni element stosu - BEZ usuwania go z listy 
    # zabezpiecz metodę w sytuacji pustego stosu
    
        
            
        
# ========= W GŁÓWNYM PROGRAMIE PRZETESTUJ ZASTOSOWANIE STWORZONEJ KLASY ORAZ JEJ METOD ===================== #
    "
CHG3Qd5A,Sample code for CameraX,thief_g,Kotlin,Saturday 3rd of June 2023 01:45:14 PM CDT,"package com.example.camerax

import android.Manifest
import android.app.ProgressDialog
import android.content.ContentValues
import android.content.pm.PackageManager
import android.os.Build
import android.os.Bundle
import android.os.Environment
import android.os.Handler
import android.os.HandlerThread
import android.os.SystemClock
import android.provider.MediaStore
import android.util.Log
import android.util.Size
import android.view.View
import android.widget.Chronometer
import android.widget.Toast
import androidx.appcompat.app.AppCompatActivity
import androidx.camera.core.Camera
import androidx.camera.core.CameraSelector
import androidx.camera.core.ImageCapture
import androidx.camera.core.ImageCaptureException
import androidx.camera.core.Preview
import androidx.camera.lifecycle.ProcessCameraProvider
import androidx.camera.video.MediaStoreOutputOptions
import androidx.camera.video.Quality
import androidx.camera.video.QualitySelector
import androidx.camera.video.Recorder
import androidx.camera.video.Recording
import androidx.camera.video.VideoCapture
import androidx.camera.video.VideoRecordEvent
import androidx.core.app.ActivityCompat
import androidx.core.content.ContextCompat
import androidx.core.content.PermissionChecker
import com.example.camerax.databinding.ActivityMainBinding
import com.otaliastudios.transcoder.Transcoder
import com.otaliastudios.transcoder.TranscoderListener
import com.otaliastudios.transcoder.TranscoderOptions
import com.otaliastudios.transcoder.common.TrackStatus
import com.otaliastudios.transcoder.strategy.DefaultAudioStrategy
import com.otaliastudios.transcoder.strategy.DefaultVideoStrategy
import com.otaliastudios.transcoder.strategy.TrackStrategy
import com.otaliastudios.transcoder.validator.DefaultValidator
import org.mp4parser.muxer.Movie
import org.mp4parser.muxer.Track
import org.mp4parser.muxer.builder.DefaultMp4Builder
import org.mp4parser.muxer.container.mp4.MovieCreator
import org.mp4parser.muxer.tracks.AppendTrack
import java.io.File
import java.io.FileOutputStream
import java.text.SimpleDateFormat
import java.util.Locale
import java.util.concurrent.ExecutorService
import java.util.concurrent.Executors
import java.util.concurrent.Future


class MainActivity : AppCompatActivity() {
    private lateinit var mainBinding: ActivityMainBinding
    private var mIsVideoRecording: Boolean = false
    private var mImageCapture: ImageCapture? = null
    private lateinit var mImageCaptureExecutor: ExecutorService
    private lateinit var mCameraSelector:CameraSelector

    private var mVideoCapture: VideoCapture<Recorder>? = null
    private var mRecording: Recording? = null
    private var quality = Quality.HD
    private val qualitySelector = QualitySelector.from(quality)
    private var recorderBuilder = Recorder.Builder()
    private var recorder = Recorder.Builder().build()
    private var mIsVideoPaused: Boolean = false
    private  lateinit var mChronometer: Chronometer
    private var isFlashOn: Boolean = false
    private lateinit var camera: Camera
    private var mIsCameraSwitched: Boolean = false
    private lateinit var mVideoFileList: MutableList<File>
    private lateinit var progressDialogue: ProgressDialog
    private var timeWhenPaused: Long  = 0
    private var cameraSwitchCount:Int = 0
    private var mBackgroundThreadHandler: HandlerThread? = null
    private var mBackgroundHandler: Handler? = null
    private var mTranscodeFuture: Future<Void>? = null
    private val mTranscodeVideoStrategy: TrackStrategy? = null
    private val mTranscodeAudioStrategy: TrackStrategy? = null
    private var outputFile = File(Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_MOVIES), ""merged_video.mp4"")
    private var rotatedFile = File(Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_MOVIES), ""Merged_VIDEO.mp4"")
    private lateinit var mScreenSize: Size

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        mainBinding = ActivityMainBinding.inflate(layoutInflater)
        setContentView(mainBinding.root)

        mImageCaptureExecutor = Executors.newSingleThreadExecutor()

        progressDialogue = ProgressDialog(this)


        mVideoFileList = mutableListOf()
        mChronometer = mainBinding.chronometer
        mChronometer.visibility = View.GONE
        mainBinding.rlPauseResumeStop.visibility = View.GONE

        checkPermissions()

        mainBinding.ivStartStop.setOnClickListener {
            if (mIsVideoRecording) {
                mainBinding.ivTakePicture.visibility = View.VISIBLE
                mIsVideoRecording = false
                cameraSwitchCount = 0
                stopRecording()

            } else {
                mainBinding.ivTakePicture.visibility = View.GONE
                mIsVideoRecording = true
                startRecordingVideo()
            }
        }

        timeWhenPaused = 0
        mainBinding.ivPauseResume.setOnClickListener {
            if (mIsVideoPaused) {
                mIsVideoPaused = false
                mRecording!!.resume()

            } else {
                mIsVideoPaused = true
                mRecording!!.pause()
            }
        }

        mainBinding.ivSwitchCamera.setOnClickListener {
            mIsCameraSwitched = true
            cameraSwitchCount++
            if (mIsVideoRecording) {
                stopRecording()
                switchCamera()
                startRecordingVideo()

            } else {
                switchCamera()
            }
        }
        mainBinding.ivTakePicture.setOnClickListener {
            takePhoto() // it will also save the photo
        }

        mainBinding.ivFlash.setOnClickListener {
            onFlashButtonClicked()
        }

    }

    /**
     * this method is responsible for the switch of the camera
     */
    private fun switchCamera() {
        if ( mCameraSelector == CameraSelector.DEFAULT_BACK_CAMERA) {
            camera.cameraControl.enableTorch(false)
            mCameraSelector =  CameraSelector.DEFAULT_FRONT_CAMERA

            mainBinding.ivFlash.setBackgroundResource(R.drawable.ic_flash_off_icon)
        } else {
            mCameraSelector =  CameraSelector.DEFAULT_BACK_CAMERA
        }
        startCamera()
    }

    /**
     * this method will be invoked on click of flash button and turnOn/turnOff flash light accordingly
     */
    private fun onFlashButtonClicked() {
        if(camera.cameraInfo.hasFlashUnit()) {
            if (isFlashOn) {
                isFlashOn = false
                mainBinding.ivFlash.setBackgroundResource(R.drawable.ic_flash_off_icon)
                camera.cameraControl.enableTorch(isFlashOn)
            } else {
                isFlashOn = true
                mainBinding.ivFlash.setBackgroundResource(R.drawable.ic_flash_icon)
                camera.cameraControl.enableTorch(isFlashOn)
            }
        } else {
            isFlashOn = false
            mainBinding.ivFlash.setBackgroundResource(R.drawable.ic_flash_off_icon)
            Toast.makeText(this, ""Flash is not available"", Toast.LENGTH_SHORT).show()
        }
    }

    /**
     * this method will start the camera preview
     */
    private fun startCamera() {
        val preview = Preview.Builder()
            .build()
            .also {
                it.setSurfaceProvider(mainBinding.cameraPreview.surfaceProvider)
            }
        val cameraProviderFuture = ProcessCameraProvider.getInstance(this)
        if(mIsCameraSwitched) {
            recorder = Recorder.Builder().build()
        }
        if (ActivityCompat.checkSelfPermission(
                this,
                Manifest.permission.CAMERA
            ) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(
                this,
                Manifest.permission.WRITE_EXTERNAL_STORAGE
            ) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(
                this,
                Manifest.permission.READ_EXTERNAL_STORAGE
            ) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(
                this,
                Manifest.permission.RECORD_AUDIO
            ) != PackageManager.PERMISSION_GRANTED
        ) {
            ActivityCompat.requestPermissions(
                this,
                arrayOf(
                    Manifest.permission.CAMERA,
                    Manifest.permission.WRITE_EXTERNAL_STORAGE,
                    Manifest.permission.READ_EXTERNAL_STORAGE,
                    Manifest.permission.RECORD_AUDIO
                ),
                REQUEST_CAMERA_PERMISSION
            )
            return
        }

        mVideoCapture = VideoCapture.withOutput(recorder)
        cameraProviderFuture.addListener({
            val cameraProvider = cameraProviderFuture.get()
            mImageCapture = ImageCapture.Builder()
                .setCaptureMode(ImageCapture.CAPTURE_MODE_MINIMIZE_LATENCY)
                .build()

            try {

                cameraProvider.unbindAll()
                camera = cameraProvider.bindToLifecycle(this, mCameraSelector,mImageCapture,mVideoCapture,preview)
                mScreenSize = QualitySelector.getResolution(camera.cameraInfo, Quality.HIGHEST)!!

            } catch (e: Exception) {
                Log.d(""MainActivity"", ""Use case binding failed"")
            }

        }, ContextCompat.getMainExecutor(this))

    }

    /**
     * this method will take the photo and save it to Gallery
     */
    private fun takePhoto() {
        mImageCapture?.let{

            val imageFileName = SimpleDateFormat(FILENAME_FORMAT, Locale.US).format(System.currentTimeMillis())
            val contentValues = ContentValues().apply {
                put(MediaStore.MediaColumns.DISPLAY_NAME, imageFileName)
                put(MediaStore.MediaColumns.MIME_TYPE, ""image/jpeg"")
                if(Build.VERSION.SDK_INT > Build.VERSION_CODES.P) {
                    put(MediaStore.Images.Media.RELATIVE_PATH, ""Pictures/CameraX-Image"")
                }
            }
            val outputFileOptions = ImageCapture.OutputFileOptions
                .Builder(contentResolver, MediaStore.Images.Media.EXTERNAL_CONTENT_URI, contentValues
                ).build()
            it.takePicture(
                outputFileOptions,
                mImageCaptureExecutor,
                object : ImageCapture.OnImageSavedCallback {
                    override fun onImageSaved(outputFileResults: ImageCapture.OutputFileResults){
                        startCamera()
                    }

                    override fun onError(exception: ImageCaptureException) {
                        Toast.makeText(
                            mainBinding.root.context,
                            ""Error occurred in taking photo"",
                            Toast.LENGTH_LONG
                        ).show()
                        Log.d(""MainActivity"", ""Error taking photo:$exception"")
                    }

                })

            Toast.makeText( this@MainActivity , ""The image has been saved to Gallery"", Toast.LENGTH_SHORT).show()

        }
    }

    /**
     * this method will start the recording of video
     */
    private fun startRecordingVideo() {
        mainBinding.ivStartStop.setBackgroundResource(R.drawable.ic_stop_video_icon)
        mVideoCapture!!.let {
            try {
                if (ActivityCompat.checkSelfPermission(
                        this,
                        Manifest.permission.CAMERA
                    ) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(
                        this,
                        Manifest.permission.WRITE_EXTERNAL_STORAGE
                    ) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(
                        this,
                        Manifest.permission.READ_EXTERNAL_STORAGE
                    ) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(
                        this,
                        Manifest.permission.RECORD_AUDIO
                    ) != PackageManager.PERMISSION_GRANTED
                ) {
                    ActivityCompat.requestPermissions(
                        this,
                        arrayOf(
                            Manifest.permission.CAMERA,
                            Manifest.permission.WRITE_EXTERNAL_STORAGE,
                            Manifest.permission.READ_EXTERNAL_STORAGE,
                            Manifest.permission.RECORD_AUDIO
                        ),
                        REQUEST_CAMERA_PERMISSION
                    )
                    return
                }
                val contentValues = ContentValues().apply {
                    put(MediaStore.MediaColumns.DISPLAY_NAME, ""VID_${System.currentTimeMillis()}"")
                    put(MediaStore.MediaColumns.MIME_TYPE, ""video/mp4"")
                }
                val mediaStoreOutputOptions = MediaStoreOutputOptions
                    .Builder(contentResolver, MediaStore.Video.Media.EXTERNAL_CONTENT_URI)
                    .setContentValues(contentValues)
                    .build()
                mRecording = mVideoCapture!!.output
                    .prepareRecording(this, mediaStoreOutputOptions)
                    .apply {
                        // Enable Audio for recording
                        if (PermissionChecker.checkSelfPermission(this@MainActivity, Manifest.permission.RECORD_AUDIO) ==
                            PermissionChecker.PERMISSION_GRANTED ) {
                            withAudioEnabled()
                        }
                    }
                    .start(ContextCompat.getMainExecutor(this)) { recordEvent ->
                        when(recordEvent) {
                            is VideoRecordEvent.Start -> {
                                mainBinding.ivPauseResume.visibility = View.VISIBLE
                                mChronometer.visibility = View.VISIBLE
                                mChronometer.base = SystemClock.elapsedRealtime()
                                mChronometer.start()
                            }
                            is VideoRecordEvent.Pause -> {
                                mIsVideoPaused = true
                                mainBinding.ivPauseResume.setBackgroundResource(R.drawable.ic_resume_icon)
                                timeWhenPaused = mChronometer.base - SystemClock.elapsedRealtime()
                                mChronometer.stop()
                            }
                            is VideoRecordEvent.Finalize -> {
                                if (!recordEvent.hasError()) {

                                    val savedUri = recordEvent.outputResults.outputUri

                                    if (savedUri != null) {
                                        val projection = arrayOf(MediaStore.Video.Media.DATA)
                                        val cursor = contentResolver.query(savedUri, projection, null, null, null)
                                        cursor?.use {
                                            if (it.moveToFirst()) {
                                                val filePath = it.getString(it.getColumnIndexOrThrow(MediaStore.Video.Media.DATA))
                                                val videoFile = File(filePath)


                                                if(videoFile.exists()) {
                                                    mVideoFileList.add(videoFile)
                                                    Toast.makeText(this,  videoFile.absolutePath, Toast.LENGTH_SHORT).show()
                                                }
                                            }
                                        }
                                    }
                                    if(!mIsVideoRecording){
                                        mergeVideosUsingTranscoder(mVideoFileList)
                                    }
                                } else {
                                    mRecording?.close()
                                    mRecording = null
                                    Log.e(""MainActivity"", ""Video capture ends with error: ${recordEvent.error}"")
                                }

                            }
                            is VideoRecordEvent.Resume -> {
                                mIsVideoPaused = false
                                mainBinding.ivPauseResume.setBackgroundResource(R.drawable.ic_pause_icon)
                                mChronometer.base = SystemClock.elapsedRealtime() + timeWhenPaused
                                mChronometer.start()
                            }
                        }
                    }

            } catch (e: Exception) {
                e.printStackTrace()
            }
        }

    }

    private fun stopRecording() {
        mainBinding.ivStartStop.setBackgroundResource(R.drawable.ic_start_video_icon)
        mRecording!!.stop()
        mChronometer.stop()
        mChronometer.visibility = View.GONE
        if(!mIsVideoRecording) {
            mainBinding.ivPauseResume.visibility = View.GONE
            startCamera()
        }
    }

    private fun mergeVideos(videoFiles: List<File>) {
        try {
            progressDialogue.setMessage(""Merging Videos.."")
            progressDialogue.show()
            val movieList = mutableListOf<Movie>()
            for (videoFile  in videoFiles) {


                val movie = MovieCreator.build(videoFile.absolutePath)
                movieList.add(movie)
            }
            val videoTracks = mutableListOf<Track>()
            val audioTracks = mutableListOf<Track>()

            for (movie in movieList) {
                for (track in movie.tracks) {
                    if (track.handler == ""vide"") {
                        videoTracks.add(track)
                    }
                    if (track.handler == ""soun"") {
                        audioTracks.add(track)
                    }
                }
            }

            val mergedMovie = Movie()
            if (videoTracks.size > 0) {
                mergedMovie.addTrack(AppendTrack(*videoTracks.toTypedArray()))
            }

            if (audioTracks.size > 0) {
                mergedMovie.addTrack(AppendTrack(*audioTracks.toTypedArray()))
            }

            val container = DefaultMp4Builder().build(mergedMovie)
            val fileChannel = FileOutputStream(outputFile).channel
            container.writeContainer(fileChannel)
            fileChannel.close()
            progressDialogue.cancel()

            Toast.makeText(this, ""Videos merged successfully"", Toast.LENGTH_SHORT).show()

        } catch (e : Exception) {
            Log.e(TAG, e.message.toString())
        }

    }

    /**
     * this method used for merging multiple videos using Transcoder library
     * @param videoFilesList
     */
    private fun mergeVideosUsingTranscoder(videoFiles: List<File>) {
        progressDialogue.setMessage(""Merging Videos.."")
        progressDialogue.show()
        val builder: TranscoderOptions.Builder =
            Transcoder.into(rotatedFile.absolutePath)
        for(videoFile in videoFiles) {
            builder.addDataSource(videoFile.absolutePath)
        }

        // use DefaultVideoStrategy.exact(2560, 1440).build()  to restore 75% size of the video
        //  use DefaultVideoStrategy.exact(mScreenSize.height, mScreenSize.width).build()  to restore 50% size of the video

        val strategy: DefaultVideoStrategy = DefaultVideoStrategy.exact(2560, 1440).build()

        mTranscodeFuture = builder
            .setAudioTrackStrategy(DefaultAudioStrategy.builder().build())
            .setVideoTrackStrategy(strategy)
            .setVideoRotation(0)
            .setListener(object : TranscoderListener{

                override fun onTranscodeProgress(progress: Double) {}

                override fun onTranscodeCompleted(successCode: Int) {
                    Toast.makeText(this@MainActivity, ""Video Merged Successfully"", Toast.LENGTH_SHORT).show()
                }

                override fun onTranscodeCanceled() {
                    Toast.makeText(this@MainActivity, ""Video rotation cancelled"", Toast.LENGTH_SHORT).show()
                }

                override fun onTranscodeFailed(exception: Throwable) {
                    Toast.makeText(this@MainActivity, exception.message, Toast.LENGTH_SHORT).show()
                }

            })
            .setValidator(object : DefaultValidator() {
                override fun validate(videoStatus: TrackStatus, audioStatus: TrackStatus): Boolean {
                    //  mIsAudioOnly = !videoStatus.isTranscoding
                    return super.validate(videoStatus, audioStatus)
                }

            }).transcode()
        progressDialogue.cancel()
    }

    /**
     * this method will check camera and other required permission to run the app
     */
    private  fun checkPermissions() {
        if (ContextCompat.checkSelfPermission(this, Manifest.permission.CAMERA) == PackageManager.PERMISSION_GRANTED
            && ContextCompat.checkSelfPermission(this,Manifest.permission.WRITE_EXTERNAL_STORAGE) == PackageManager.PERMISSION_GRANTED
            && ContextCompat.checkSelfPermission(this, Manifest.permission.RECORD_AUDIO) == PackageManager.PERMISSION_GRANTED
            && ContextCompat.checkSelfPermission(this, Manifest.permission.READ_EXTERNAL_STORAGE) == PackageManager.PERMISSION_GRANTED
        ) {
            mCameraSelector = CameraSelector.DEFAULT_BACK_CAMERA
            startCamera()

        } else {
            if (shouldShowRequestPermissionRationale(Manifest.permission.WRITE_EXTERNAL_STORAGE )) {
                Toast.makeText(this, ""app needs permission to be able to save videos"", Toast.LENGTH_SHORT)
                    .show()
            }
            requestPermissions(
                arrayOf(Manifest.permission.CAMERA,Manifest.permission.WRITE_EXTERNAL_STORAGE, Manifest.permission.RECORD_AUDIO,Manifest.permission.READ_EXTERNAL_STORAGE),
                REQUEST_CAMERA_PERMISSION
            )
        }

    }

    /**
     * this method receives the status of the permissions granted
     * @param1 requestCode
     * @param2: permissions
     * @param3: grantResults
     */
    override fun onRequestPermissionsResult(
        requestCode: Int,
        permissions: Array<String?>,
        grantResults: IntArray,
    ) {
        super.onRequestPermissionsResult(requestCode, permissions, grantResults)
        if (requestCode == REQUEST_CAMERA_PERMISSION) {
            for(results in grantResults) {
                if (results == PackageManager.PERMISSION_DENIED) {
                    // close the app
                    Toast.makeText(
                        this@MainActivity,
                        ""Sorry!!!, you can't use this app without granting permission"",
                        Toast.LENGTH_LONG
                    ).show()
                    finish()
                }
            }
        }

    }

    override fun onPause() {
        super.onPause()
        Log.e(TAG, ""onPause()"")
        stopBackgroundThread()

    }

    /**
     * this will start the background thread to run the processes
     */
    private fun startBackgroundThread() {
        mBackgroundThreadHandler = HandlerThread(""Camera Background"")
        mBackgroundThreadHandler!!.start()
        mBackgroundHandler = Handler(mBackgroundThreadHandler!!.looper)
    }

    /**
     * this will stop the background thread if all the background processes are executed
     */
    private fun stopBackgroundThread() {
        mBackgroundThreadHandler!!.quitSafely()
        try {
            mBackgroundThreadHandler!!.join()
            mBackgroundThreadHandler = null
            mBackgroundHandler = null
        } catch (e: InterruptedException) {
            e.printStackTrace()
        }
    }

    override fun onStop() {
        super.onStop()
        Log.e(TAG, ""onStop()"")

    }

    override fun onRestart() {
        super.onRestart()
        Log.e(TAG, ""onRestart()"")

    }

    override fun onResume() {
        super.onResume()
        Log.e(TAG, ""onResume()"")
        startBackgroundThread()

        if(mIsVideoRecording) {
            mRecording!!.resume()
            mChronometer.start()
        }
    }
    override fun onDestroy() {
        super.onDestroy()
        if(mIsVideoRecording) {
            mRecording!!.stop()
            mChronometer.stop()
        }
    }
    companion object {
        const val TAG = ""MainActivity""
        const val REQUEST_CAMERA_PERMISSION: Int = 0
        const val STORAGE_PERMISSION_CODE: Int = 1
        const val FILENAME_FORMAT = ""yyyy-MM-dd-HH-mm-ss-SSS""
    }
}"
nP1H5VP1,List + Set (broken),AmirVagapov,C#,Saturday 3rd of June 2023 01:40:50 PM CDT,"using System;
using System.Collections;

class HelloWorld {
    static void Main() {
        Console.WriteLine(""test list"");
        test_list();
        Console.WriteLine(""test set"");
        test_set();
    }
    static void test_list() { /********** TEST LIST **********/ 
        //1
        Console.WriteLine(""1 test"");
        Console.WriteLine(""Создайте пустой список S1. Добавьте элемент 1 в голову, добавьте элемент 10 в хвост. Выведите S1 на экран (используя функцию Print)"");
        List<int> s1 = new List<int>();
        s1.push_front(1);
        s1.push(10);
        Console.Write(""s1 = "");
        s1.Print();
        //2
        Console.WriteLine(""2 test"");
        Console.WriteLine(""Создайте список S2 из 6 случайных чисел. Выведите список S2 на экран, используя потоковый вывод. Найдите в S2 max и min элемент. Отсортируйте S2."");
        List<int> s2 = new List<int>();
        Random rnd = new Random();
        for(int i = 0; i < 6; i++) {
            s2.push(rnd.Next() % 15);
        }
        Console.Write(""s2 = "");
        s2.Print();
        // a[1] = 3;
        Console.WriteLine(""min: ""+ s2.min().getData()+ "" max: ""+ s2.max().getData());
        s2 = s2.mergesort();
        Console.Write(""s2 = "");
        s2.Print();
        //3
        Console.WriteLine(""3 test"");
        Console.WriteLine(""Найдите в S2 2-й элемент и выведите его на экран. Удалите 2-й элемент списка S2."");
        Console.WriteLine(s2[1].getData());
        s2.delete(1);
        Console.Write(""s2 = "");
        s2.Print();
        //4
        Console.WriteLine(""4 test"");
        Console.WriteLine(""Найдите в S2 6-й элемент (т.е. убедитесь, что в списке осталось меньше 6 элементов). Удалите элемент из хвоста S2."");
        Console.Write(""s2[5] = "");
        Console.WriteLine(s2[5]);
        s2.pop();
        Console.Write(""s2 = "");
        s2.Print();
        //5
        Console.WriteLine(""5 test"");
        Console.WriteLine(""Создайте пустой список S3. Инициализируйте его значением S1. Проверьте равенство списков S1 и S3. Проверьте, есть ли в S3 элемент 15."");
        List<int> s3 = s1.clone();
        Console.Write(""s3 = "");
        s3.Print();
        Console.Write(""s3 == s1 "");
        Console.WriteLine(s3 == s1);
        Console.WriteLine(""s3.find(15) == null "");
        Console.WriteLine(s3.find(15) == null);
        //6
        Console.WriteLine(""6 test"");
        Console.WriteLine(""Удалите элемент из головы списка S3. Удалите из списка S3 элемент 10. Выведите S3 на экран. Проверьте S3 на пустоту."");
        s3.pop_front();
        s3.delete_value(10);
        Console.Write(""s3 = "");
        s3.Print();
        Console.Write(""s3.IsNull() "");
        Console.WriteLine(s3.IsNull());
        // 7
        Console.WriteLine(""7 test"");
        Console.WriteLine(""Создайте последовательность из 6 случайных чисел, меньших 20. Превратите ее в список S4 и выведите его на экран. Проверьте, есть ли в S4 элемент 25. Добавьте элемент 25 четвертым в список."");
        List<int> s4 = new List<int>();
        for(int i = 0; i < 6; i++) {
            s4.push(rnd.Next() % 20);
        }
        Console.Write(""s4 = "");
        s4.Print();
        Console.Write(""s4.find(25) == null "");
        Console.WriteLine(s4.find(25) == null);
        s4.insert(25, 3);
        Console.Write(""s4 = "");
        s4.Print();
        //8
        Console.WriteLine(""8 test"");
        Console.WriteLine(""Создайте список S5, проинициализировав его при создании списком S2. Выведите S5 на экран. Проверьте, есть ли в S5 элемент 4 и если есть – удалите его, если нет – добавьте элемент 4 в хвост."");
        List<int> s5 = s2.clone();
        Console.Write(""s5 = "");
        s5.Print();
        Console.Write(""s5.find(4) == null "");
        Console.WriteLine(s5.find(4) == null);
        if (s5.find(4) != null) {
            s5.delete_value(4);
        }
        else {
            s5.push(4);
        }
        Console.Write(""s5 = "");
        s5.Print();
        //9
        Console.WriteLine(""9 test"");
        Console.WriteLine(""Измените S5, записав в него 4 числа: 11, 12, 13, 14 (числа вводятся с клавиатуры). Сравните S5 и S4."");
        s5.read_input();
        Console.Write(""s5 = "");
        s5.Print();
        Console.Write(""s5 == s4 "");
        Console.WriteLine(s5 == s4);
        //10
        Console.WriteLine(""10 test"");
        Console.WriteLine(""Добавьте в хвост S5 список S4. Добавьте в голову S5 список S1."");
        Console.Write(""s5 = "");
        s5.Print();
        s5 = s5 + s4;
        Console.Write(""(s5 + s4) s5 = "");
        s5.Print();
        s5 = s1 + s5;
        Console.Write(""(s1 + s5) s5 = "");
        s5.Print();
    }
    static void test_set() { /********** TEST SET **********/
        //1
        Console.WriteLine(""1 test"");
        Console.WriteLine(""Создайте множество S1, из 10 случайных чисел. Выведите S1 на экран"");
        Set<int> s1 = new Set<int>();
        Random rnd = new Random();
        int j = 0;
        while(j < 10) {
            int val = rnd.Next(20);
            if (s1.find(val) == null) {
                s1.push(val);
                j += 1;
            }
        }
        Console.Write(""s1 = "");
        s1.Print();
        //2
        Console.WriteLine(""2 test"");
        Console.WriteLine(""Создайте множество S2 и инициализируйте его (при создании) значением S1.  Выведите S2 на экран (используйте потоковый вывод). Проверьте равенство множеств S1  и  S2."");
        Set<int> s2 = new Set<int>(s1.clone());
        Console.Write(""s2 = "");
        s2.Print();
        Console.Write(""s1 == s2 "");
        Console.WriteLine(s1 == s2);
        //3
        Console.WriteLine(""3 test"");
        Console.WriteLine(""Проверьте, есть ли в S1 элемент 5. Создайте множество S3, которое получается  удалением/добавлением из S1 элемента 5. Проверьте, что S1 и S3 – не равны."");
        Console.Write(""s1.find(5) != null "");
        Console.WriteLine(s1.find(5) != null);
        Set<int> s3 = new Set<int>(s1.clone());
        if (s3.find(5) != null) {
            s3.delete_value(5);
        }
        else {
            s3.push(5);
        }
        Console.Write(""s3 = "");
        s3.Print();
        Console.Write(""s1 == s3 "");
        Console.WriteLine(s1 == s3);
        //4
        Console.WriteLine(""4 test"");
        Console.WriteLine(""Создайте пустое множество S4. Проверьте его на пустоту.  Добавьте в S4 последовательно числа 5, 10, 15, 5.  Выведите S4 на экран."");
        Set<int> s4 = new Set<int>();
        Console.Write(""s4.IsNull() "");
        Console.WriteLine(s4.IsNull());
        s4.push(5);
        s4.push(10);
        s4.push(15);
        s4.push(5);
        Console.Write(""s4 = "");
        s4.Print();
        //5
        Console.WriteLine(""5 test"");
        Console.WriteLine(""Создайте пустое множество S5.  Инициализируйте его множеством S4.  Проверьте, что во множестве S5 есть элемент 15 и удалите его. Выведите получившееся множество на экран."");
        Set<int> s5 = new Set<int>(s4);
        Console.Write(""s5 = "");
        s4.Print();
        Console.Write(""s5.find(15) != null "");
        Console.WriteLine(s5.find(15) != null);
        s5.delete_value(15);
        Console.WriteLine(""15 deleted"");
        Console.Write(""s5 = "");
        s5.Print();
        //6
        Console.WriteLine(""6 test"");
        Console.WriteLine(""Создайте список T, из 20 случайных чисел. Выведите T на экран. Создайте из T множество S6.  Выведите S6 на экран. Определите количество элементов в S6."");
        List<int> t = new List<int>();
        for(int i = 0; i < 20; i++) {
            t.push(rnd.Next() % 30);
        }
        Console.Write(""t = "");
        t.Print();
        Set<int> s6 = new Set<int>(t);
        Console.Write(""s6 = "");
        s6.Print();
        Console.Write(""s6.len() = "");
        Console.WriteLine(s6.len());
        //7
        Console.WriteLine(""7 test"");
        Console.WriteLine(""Найдите S7 – дополнение S6 до универсального. Найдите множество S8=S7∩S6."");
        Console.WriteLine(""Будем считать, что множество состоит из 30 эелементов"");
        Set<int> s7 = new Set<int>();
        for(int i = 0; i < 30; i++) {
            if (s6.find(i) == null) s7.push(i);
        }
        Console.Write(""s7 = "");
        s7.Print();
        Set<int> s8 = Set<int>.intersection(s7, s6);
        Console.Write(""s8 = "");
        s8.Print();
        //8
        Console.WriteLine(""8 test"");
        Console.WriteLine(""Создайте множество \nS9={1,3,5,7,9,11,13,15,17,19,21,23,25,27,29}\n(используйте потоковый ввод).  Найдите V1 =S7 ∩ S9,  V2 = S7 ∪ S9,  V3 = S7 \\ S9."");
        Set<int> s9 = new Set<int>();
        s9.read_input();
        Console.Write(""s9 = "");
        s9.Print();
        Set<int> v1 = Set<int>.intersection(s7, s9);
        Console.Write(""v1 = "");
        v1.Print();
        Set<int> v2 = Set<int>.union(s7, s9);
        Console.Write(""v2 = "");
        v2.Print();
        Set<int> v3 = Set<int>.difference(s7, s9);
        Console.Write(""v3 = "");
        v3.Print();
        //9
        Console.WriteLine(""9 test"");
        Console.WriteLine(""Измените V1, объединив его с V3. Сравните V1  с S7."");
        v1 = Set<int>.union(v1, v3);
        Console.Write(""v1 = "");
        v1.Print();
        Console.Write(""v1 == v7 "");
        Console.WriteLine(v1 == s7);
        //10
        Console.WriteLine(""10 test"");
        Console.WriteLine(""Измените множество V2, заменив его разностью V2 и V3. Сравните V2  с  S9"");
        v2 = Set<int>.difference(v2, v3);
        Console.Write(""v2 = "");
        v2.Print();
        Console.Write(""v2 == s9 "");
        Console.WriteLine(v2 == s9);
    }
}
class Node {
    protected int data;
    private Node next;
    public void nextSet(Node a) {
        next = a;
    }
    public Node nextGet() {
        return next;
    }
    public Node(int d) {
        data = d;
        nextSet(null);
    }
    public Node clone()
    {
        return new Node(data);
    }
    public Node setData(int newdata) {
        data = newdata;
    }
    public Node getData() {
        return data;
    }
   
}

class List {
    protected Node head;

    // Конструкторы
    public List(int d) {
        head = new Node(d);
    }
    public List(Node d) {
        head = d;
    }
    public List() {
        head = null;
    }

    public List clone() {
        if (head == null) return new List();
        List cl = new List(new Node(head.getData()));
        Node curr = head;
        Node curr2 = cl.head;
        while(curr.nextGet() != null) {
            curr = curr.nextGet();
            curr2.nextSet(new Node(curr.getData()));
            curr2 = curr2.nextGet();
        }
        return cl;
    }
    public void push(int d) {
        Node temp = new Node(d);
        if (IsNull()) {
            head = temp;
            return;
        }
        Node tail = head;
        while(tail.nextGet()!= null) {
            tail = tail.nextGet();
        }
        tail.nextSet(temp);
    }
    public void push_front(int d) {
        Node temp = new Node(d);
        if (IsNull()) {
            head = temp;
            return;
        }
        temp.nextSet(head);
        head = temp;
    }
    public Node pop() {
        if (head == null) {return null;}
        Node tail = head.nextGet();
        if (head.nextGet()== null) {
            head = null;
            return tail;
        }
        Node prev = head;
        while(tail.nextGet()!= null) {
            tail = tail.nextGet();
            prev = prev.nextGet();
        }
        Node res = tail;
        tail = prev;
        tail.nextSet(null);
        return res;
    }
    public Node pop_front() {
        if (IsNull()) {return null;}
        Node res = head;
        if (head.nextGet()== null) {
            Node temp = new Node(head.getData());
            head = null;
            return temp;
        }
        else {
            head = head.nextGet();
        }
        return res;
    }
    public Node insert(int a, int n) {
        Node ins = new Node(a);
        Node cur = head;
        if (cur == null) {
            if (n == 0) {
                head = ins;
                return ins;
            }
            else return null;
        }
        for(int i = 1; i < n; i++) {
            if (cur.nextGet()== null) return null;
            cur = cur.nextGet();
        }
        ins.nextSet(cur.nextGet());
        cur.nextSet(ins);
        return ins;
    }
    public Node insert_after_key(int a, int key) {
        Node ins = new Node(a);
        Node cur = find(key);
        if (cur == null) return null;
        ins.nextSet(cur.nextGet());
        cur.nextSet(ins);
        return ins;
    }
    public Node this[int n] {
        get {
            Node temp = head;
            for(int i = 0; i < n; i++) {
                if(temp == null) {return null;}
                temp = temp.nextGet();
            }
            return temp;
        }
        set {
            if (head == null && n == 0) {head = value; return;}
            Node temp = head;
            for(int i = 0; i < n; i++) {
                if(temp == null) {throw new NullReferenceException(""List size is smaller than n"");}
                temp = temp.nextGet();
            }
            temp.getData() = value.getData();
        }
    }
    public Node delete(int n) {
        if (head == null) return null;
        Node temp = head;
        Node prev = head;
        for(int i = 0; i < n; i++) {
            if (temp.nextGet() == null) return null;
            prev = temp;
            temp = temp.nextGet();
        }
        prev.nextSet(temp.nextGet());
        return temp;
    }
    public Node delete_value(int value) {
        if (head == null) return null;
        Node temp = head;
        Node prev = null;
        do {
            if (temp.getData().CompareTo(value) == 0) {
                if (prev == null) head = temp.nextGet();
                else prev.nextSet(temp.nextGet());
                return temp;
            }
            prev = temp;
            temp = temp.nextGet();
        } while(temp != null);
        return null;
    }
    public void delete_values(int value) {
        if (head == null) return;
        Node temp = head;
        Node prev = null;
        while (temp != null && temp.getData().CompareTo(value) == 0) {
            head = temp.nextGet();
            temp = head;
        }
        while (temp != null) {
            while (temp != null && temp.getData().CompareTo(value) != 0) {
                prev = temp;
                temp = temp.nextGet();
            }
            if (temp == null)
                return;
            prev.nextSet(temp.nextGet());
            temp = prev.nextGet();
        }
    }

    public Node find(int value) {
        if (IsNull()) {return null;}
        Node temp = head;
        while (temp != null) {
            if (temp.getData().CompareTo(value) == 0) {return temp;} //temp.data == value
            temp = temp.nextGet();
        }
        return temp;
    }
    public Node min() {
        if (IsNull()) {return null;}
        Node temp = head;
        Node min = head;
        while(temp != null) {
            if (min.detData().CompareTo(temp.getData()) > 0) {min = temp;}
            temp = temp.nextGet();
        }
        return min;
    }
    public Node max() {
        if (IsNull()) {return null;}
        Node temp = head;
        Node max = head;
        while(temp != null) {
            if (max.getData().CompareTo(temp.getData()) < 0) {max = temp;}
            temp = temp.nextGet();
        }
        return max;
    }
    public bool IsNull() {
        return head == null;
    }
    public void clear() {
        head = null;
    }
    public void read_input() {
        head = null;
        Console.Write(""Enter number of nodes : "");
        int n = (int)Convert.ChangeType(Console.ReadLine(), typeof(int));
        Console.WriteLine(n);
        for (int i = 0; i < n; i++) {
            Node temp = (int)Convert.ChangeType(Console.ReadLine(), typeof(int));
            push(temp);
            Console.WriteLine(""pushed "" + temp);
        }
    }
    Node getmiddle() {
        if (head == null) return head;
        Node slow = head, fast = head;
        while(fast.nextGet()!= null && fast.nextGet().nextGet()!= null) {
            slow = slow.nextGet();
            fast = fast.nextGet().nextGet();
        }
        return slow;
    }
    static List merge(List left, List right) {
        if (left.IsNull()) return right;
        if (right.IsNull()) return left;
        List result = new List();
        if (left.head.getData().CompareTo(right.head.getData()) <= 0) {
            result = left;
            result.head.nextSet(merge(new List(left.head.nextGet()), right).head);
        }
        else {
            result = right;
            result.head.nextSet(merge(left, new List(right.head.nextGet())).head);
        }
        return result;
    }
    public List mergesort() {
        if (head == null || head.nextGet()== null) return (new List(head));
        Node middle = getmiddle();
        List middle_next = new List(middle.nextGet());
        middle.nextSet(null);
        List left = mergesort();
        List right = middle_next.mergesort();
        // Console.WriteLine(""debug"");
        // left.Print();
        // right.Print();
        List result = merge(left, right);
        // result.Print();
        head = result.head;
        return result;
    }
    public void Print() {
        if (IsNull()) {
            Console.Write(""null\n"");
            return;
        }
        Node temp = head;
        Console.Write(""["" + temp.getData());
        temp = temp.nextGet();
        while(temp != null) {
            Console.Write("", "" + temp.getData());
            temp = temp.nextGet();
        }
        Console.Write(""]\n"");
    }

    public static List operator + (List a, List b) {
        if (a.head == null) return b;
        if (b.head == null) return a;
        List result = a;
        Node temp = result.head;
        while(temp.nextGet()!= null) {
            temp = temp.nextGet();
        }
        temp.nextSet(b.head);
        return result;
    }
    public static bool operator == (List a, List b) {
        Node f = a.head;
        Node s = b.head;
        if (f == null ^ s == null) return false;
        if (f == null && s == null) return true;
        while(f.nextGet() != null && s.nextGet() != null) {
            if (f.getData().CompareTo(s.getData()) != 0) return false;
            f = f.nextGet();
            s = s.nextGet();
        }
        if (f.nextGet() == null ^ s.nextGet() == null) return false;
        return true;
    }

    public static bool operator != (List a, List b) {
        return !(a==b);
    }
}

class Set : List {
    public Set() {
    }
    public Set(Node a) {
        head = a.clone();
    }
    public Set(int a) {
        head = new Node(a);
    }
    public Set(List a) {
        head = a.clone()[0];
        delete_repetitions();
    }
    
    void delete_repetitions() {
        Node ptr1 = head;
        Node ptr2 = null;
        while (ptr1 != null && ptr1.nextGet() != null) {
            ptr2 = ptr1;
            while (ptr2.nextGet() != null) {
                if (ptr1.getData().CompareTo(ptr2.nextGet().getData()) == 0) ptr2.nextSet(ptr2.nextGet().nextGet());
                else ptr2 = ptr2.nextGet();
            }
            ptr1 = ptr1.nextGet();
        }
    }
    public new void push(int d) {
        if (base.find(d) == null)
            base.push(d);
    }
    public new void push_front(int d) {
        if (base.find(d) == null)
            base.push_front(d);
    }
    public new Node insert(int a, int n) {
        if (base.find(a) == null)
            return base.insert(a, n);
        return null;
    }
    public new Node insert_after_key(int a, int key) {
        if (base.find(a) == null)
            return base.insert_after_key(a, key);
        return null;
    }
    public new void read_input() {
        base.clear();
        Console.Write(""Enter number of nodes : "");
        int n = (int)Convert.ChangeType(Console.ReadLine(), typeof(int));
        Console.WriteLine(n);
        for (int i = 0; i < n; i++) {
            Node temp = (int)Convert.ChangeType(Console.ReadLine(), typeof(int));
            push(temp);
            Console.WriteLine(""pushed "" + temp);
        }
    }
    public static Set union(Set a, Set b) {
        if (a.IsNull()) return (Set)b.clone();
        if (b.IsNull()) return (Set)a.clone();
        Set res = new Set(a.clone());
        foreach(Node item in b) {
            res.push(item.clone().getData());
        }
        return res;
    }
    public static Set intersection(Set a, Set b) {
        if (a.IsNull() && b.IsNull()) return null;
        Set res = new Set();
        foreach(Node item in b) {
            if (a.find(item.getData()) != null) res.push(item.getData()); 
        }
        foreach(Node item in a) {
            if (b.find(item.getData()) != null) res.push(item.getData()); 
        }
        return res;
    }
    public static Set difference(Set a, Set b) {
        if (a.IsNull()) return null;
        if (b.IsNull()) return new Set(a.clone());
        Set res = new Set(a.clone());
        foreach(Node item in b) {
            res.delete_value(item.getData());
        }
        return res;
    }
    public new Node this[int n] {
        get {return base[n];}
        set {
            if (find(value.getData()) != null)
                base[n] = value;
        }
    }
    public int len() {
        int i = 0;
        foreach(Node item in this) i++;
        return i;
    }
    // public static bool operator == (Set<T> a, Set<T> b) {
    //     if (a.head == null ^ b.head == null) return false;
    //     if (a.head == null && b.head == null) return true;
    //     Set<T> temp = new Set<T>(b);
    //     foreach(Node<T> item in a) {
    //         if (temp.delete_value(item.data) == null) return false;
    //     }
    //     return temp.IsNull();
    // }
    public new void Print() {
        this.mergesort();
        base.Print();
    }
    public static bool operator == (Set a, Set b) {
        a.mergesort();
        b.mergesort();
        return ((List)a == (List)b);
    }
    public static bool operator != (Set a, Set b) {
        return !(a == b);
    }
}
"
Fegr7nW3,4 gpio time machine,Robert_l,C++,Saturday 3rd of June 2023 01:21:31 PM CDT,"/******************************************************************************

                            Online C Compiler.
                Code, Compile, Run and Debug C program online.
Write your code in this editor and press ""Run"" button to compile and execute it.

*******************************************************************************/

#include <stdio.h>
#include <sys/time.h>
#include <inttypes.h>

uint32_t millis(void) {
    struct timeval tv;
    gettimeofday(&tv,NULL);
    return (((uint32_t)tv.tv_sec)*1000)+(tv.tv_usec/1000);
}

enum states {idle, start, t1_expired,t2_expired,t3_expired,t4_expired};

enum states timer_state = idle;
uint32_t delay = 0;
uint32_t last_time = 0;

void timer_start(void){
    timer_state = start;
}

void timer_run(void){
    if (millis() - last_time < delay){
        return;
    }
    switch(timer_state){
        case idle:
            delay = 0;
            last_time = 0;
            break;
        case start:
            delay = 10; //t1
            last_time = millis();
            printf(""start at      %u \n"", millis());
            timer_state = t1_expired;
            break;
        case t1_expired:
            last_time += delay; // not use millis() to not accumulate time error
            delay = 20;//t2
            printf(""t1 expired at %u \n"", millis());
            timer_state = t2_expired;
            break;
        case t2_expired:
            last_time += delay;
            delay = 30;//t3
            printf(""t2 expired at %u \n"", millis());
            timer_state = t3_expired;
            break;
        case t3_expired:
            last_time += delay;
            delay = 40;//t4
            printf(""t3 expired at %u \n"", millis());
            timer_state = t4_expired;
            break;
        case t4_expired:
            printf(""t4 expired at %u \n"", millis());
            timer_state = idle;
            break;
        default:
             printf(""warning: default state %u \n"", millis());
            timer_state = idle;
            break;
    }
}

int main()
{
    timer_run();
    timer_start();
    
    while(timer_state != idle){
        timer_run();
    }
    printf(""end"");

    return 0;
}
"
M9MZY2Mt,Convertir pies a metros. Simple. Python,JPablos,Python,Saturday 3rd of June 2023 01:09:37 PM CDT,"# -*- coding: utf-8 -*-
""""""
Created on Fri Jun  2 06:33:22 2023
Este código permite hacer la converión de pies a metros.
Utiliza tkinter para crear una interfaz gráfica.

@alpfa
""""""

import tkinter as tk
from tkinter import ttk
from tkinter import messagebox


def calculate():
    """"""
    Éste código permite el uso de una Interfaz gráfica basada en tkinter
    para hacer la converión de pies a metros

    Returns
    -------
    El cálculo en metros como 'float'.

    """"""
    try:
        value = float(feet.get())
        meters.set(int(0.3048 * value * 10000.0 + 0.5) / 10000.0)
    except ValueError:
        messagebox.showerror(""Error"", ""Por favor, ingrese un valor numérico."")


root = tk.Tk()
root.title(""Pies a Metros"")

mainframe = ttk.Frame(root, padding=""3 3 12 12"")
mainframe.grid(column=0, row=0, sticky=(tk.N, tk.W, tk.E, tk.S))
root.columnconfigure(0, weight=1)
root.rowconfigure(0, weight=1)

feet = tk.StringVar()
feet_entry = ttk.Entry(mainframe, width=7, textvariable=feet)
feet_entry.grid(column=2, row=1, sticky=(tk.W, tk.E))

meters = tk.StringVar()
ttk.Label(mainframe, textvariable=meters).grid(column=2, row=2, sticky=(tk.W, tk.E))

ttk.Button(mainframe, text=""Calcular"", command=calculate).grid(column=3, row=3, sticky=tk.W)

ttk.Label(mainframe, text=""pies"").grid(column=3, row=1, sticky=tk.W)
ttk.Label(mainframe, text=""son equivalentes a"").grid(column=1, row=2, sticky=tk.E)
ttk.Label(mainframe, text=""metros"").grid(column=3, row=2, sticky=tk.W)

for child in mainframe.winfo_children():
    child.grid_configure(padx=5, pady=5)

feet_entry.focus()
root.bind(""<Return>"", calculate)

root.mainloop()
"
wmvKAcQ8,GenCode,KitChaos,C#,Saturday 3rd of June 2023 01:00:43 PM CDT,"using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using System.Linq;
    
public class Level1Gen : Generation
{
    float elap;
    bool StartCheck;
    float elap2;
    public void Start()
    {
        LastChunk = ChunkForLevel[Random.Range(0, ChunkForLevel.Count)];
        Center = new Coords(0, 0, 0);
        for (int x = -2; x < 3; x++)
        {
            for (int z = -2; z < 3; z++)
            {

                GenerateChunk(new Coords(x, 0, z), true);


            }
        }
        Playerstats = GameObject.Find(""Player"").GetComponent<PlayerStats>();
        Playerstats.LevelStats = this;


        InvokeRepeating(""CheckDespawn"", 1, 1);
     InvokeRepeating(nameof(GenerateFromCenter), 1.2f, 1.2f);
    }
    public override void GenerateChunk(Coords c, bool IsCore = false)
    {
        var ToSpawn = ChunkForLevel[Random.Range(0, ChunkForLevel.Count)];

        var Rand = Mathf.RoundToInt(Random.Range(0, maxInclusive: 35));
        // Debug.Log(Rand);
        if (Rand == 0)
        {
            var C = Instantiate(ToSpawn, new Vector3(c.X * 80, c.Y, c.Z * 80), Quaternion.identity);
            var ChunkData = C.GetComponent<Chunk>();
            ChunkData.Parent = this;
            if (IsCore)
            {
                PlayerIn = ChunkData;
            }
            Chunks.Add(ChunkData);
            //Debug.Log(""Spawnednew"");

            // Debug.Log(ChunkData.Structs.Count);
            try
            {
                ChunkData.coords = c;
                if (DifferenceInCoords(PlayerIn.coords, ChunkData.coords) > 3)
                {
                    Destroy(ChunkData.gameObject);
                }
                else
                {
                    ChunkData.SpawnStuff(ChunkData.Structs[Random.Range(0, ChunkData.Structs.Count)]);
                }


            }
            catch (System.Exception)
            {

                //Debug.Log(ChunkData.Structs.Count);
            }
            LastChunk = ToSpawn;
        }
        else
        {
            //  Debug.Log(""SpawnedSame"");
            var C = Instantiate(LastChunk.gameObject, new Vector3(c.X * 80, c.Y, c.Z * 80), Quaternion.identity);
            var ChunkData = C.GetComponent<Chunk>();
            ChunkData.Parent = this;
            if (IsCore)
            {
                PlayerIn = ChunkData;
            }
            Chunks.Add(ChunkData);
            // Debug.Log(ChunkData.Structs.Count);
            try
            {
                ChunkData.coords = c;
                if (DifferenceInCoords(PlayerIn.coords, ChunkData.coords) > 3)
                {
                    Destroy(ChunkData.gameObject);
                }
                else
                {
                    ChunkData.SpawnStuff(ChunkData.Structs[Random.Range(0, ChunkData.Structs.Count)]);
                }
            }
            catch (System.Exception)
            {

                //Debug.Log(ChunkData.Structs.Count);
            }
        }

        //Debug.Log(C.transform.position);




    }
    void GenerateFromCenter()
    {
        for (int x = -2; x < 3; x++)
        {
            for (int z = -2; z < 3; z++)
            {
                bool Occupied = false;
                foreach (Chunk c in Chunks)
                {
                    if (c.coords.X == x + Center.X && c.coords.Z == z + Center.Z)
                    {
                        Occupied = true;
                    }
                }
                if (!Occupied)
                {
                    GenerateChunk(new Coords(x + Center.X, 0, z + Center.Z));
                }



            }
        }

    }
    //Check if the player is far enough away to spawn new chunks
    void CheckDespawn()
    {
        foreach (Chunk c in Chunks)
        {
            if (DifferenceInCoords(PlayerIn.coords, c.coords) > 3)
            {
                if (c.gameObject != null)
                {
                    Destroy(c.gameObject);
                }

            }
        }
    }

    public void Update()
    {
        elap += Time.deltaTime;
     
        if (elap > 2)
        {
            StartCheck = true;
        }
        if (StartCheck)
        {
            Chunks = Chunks.Where(item => item != null).ToList();
            Center = PlayerIn.coords;
            Playerstats.SanityDrain = SanityDrain;
        }
        
       
    }

    float DifferenceInCoords(Coords a, Coords b)
    {
        var xDist = Mathf.Abs(a.X - b.X);
        var zDist = Mathf.Abs(a.Z - b.Z);
        return (xDist + zDist);
    }
    
}
"
dPsXKsM7,enum con  nombres,Alexiss16,C++,Saturday 3rd of June 2023 12:06:43 PM CDT,"#include <iostream>
#include <stdlib.h>
using namespace std;

enum MesesAnio {
    Enero, Febrero, Marzo, Abril, Mayo, Junio, Julio, Agosto, Septiembre, Octubre, Noviembre, Diciembre
};

string nombres_meses[12] = {""Enero"", ""Febrero"", ""Marzo"", ""Abril"", ""Mayo"", ""Junio"", ""Julio"", ""Agosto"", ""Septiembre"", ""Octubre"", ""Noviembre"", ""Diciembre""};

enum DiasSemana {
    Lunes, Martes, Miercoles, Jueves, Viernes, Sabado, Domingo
};
 string nombre_dias[7] ={""Lunes"", ""Martes"", ""Miercoles"", ""Jueves"", ""Viernes"", ""Sabado"", ""Domingo""}; 
 
 
enum EstacionesAnio {
    Primavera, Verano, Otono, Invierno
};
string estaciones[4] = {""Primavera"", ""Verano"", ""Otono"", ""Invierno""};

int main() {
    int opcion;
    cout << ""Seleccione el modo de ordenamiento:"" << endl;
    cout << ""1. Orden ascendente"" << endl;
    cout << ""2. Orden descendente"" << endl;
    cin >> opcion;

    switch (opcion) {
        case 1:
            cout << ""Meses del anio en orden ascendente:"" << endl;
            for (int i = Enero; i <= Diciembre; i++) {
                cout << nombres_meses[i] << endl;
            }
            cout << endl;

            cout << ""Dias de la semana en orden ascendente:"" << endl;
            for (int i = Lunes; i <= Domingo; i++) {
                cout << nombre_dias[i]<< endl;
            }
            cout << endl;

            cout << ""Estaciones del anio en orden ascendente:"" << endl;
            for (int i = Primavera; i <= Invierno; i++) {
                cout << estaciones[i] << endl;
            }
            cout << endl;
            break;

        case 2:
            cout << ""Meses del anio en orden descendente:"" << endl;
            for (int i = Diciembre; i >= Enero; i--) {
                cout << nombres_meses[i] << endl;
            }
            cout << endl;

            cout << ""Dias de la semana en orden descendente:"" << endl;
            for (int i = Domingo; i >= Lunes; i--) {
                cout << nombre_dias[i]<< endl;
            }
            cout << endl;

            cout << ""Estaciones del anio en orden descendente:"" << endl;
            for (int i = Invierno; i >= Primavera; i--) {
                cout << estaciones[i] << endl;
            }
            cout << endl;
            break;

        default:
            cout << ""Opcion no valida"" << endl;
            break;
    }
    system(""pause"");
    return 0;
}"
