id,title,username,language,date,content
AuUPMKs6,JS_Advanced_AdvancedFunctions_LAB07Cars,vladovip,JavaScript,Saturday 27th of May 2023 06:37:43 AM CDT,"// JS Advanced_ Advanced Functions - LAB - 07. Cars

function cars (inputArray) {
    let collectionsObj = {};
    let commandsCollections = {
        create,
        set,
        print,
    }

    // 'create c1',
    // 'create c2 inherit c1',
    function create (name, inherits, parentName){
    collectionsObj[name] = inherits ? Object.create(collectionsObj[parentName]) : collectionsObj[name] = {};
    }
    // 'set c1 color red',
    function set (name,key,value){
        collectionsObj[name][key] = value;
    };

    //  'print c1',
    function print(name){
        let objectsResult = [];
        for ( let objectAsKey in collectionsObj[name] ){
            objectsResult.push(`${objectAsKey}:${collectionsObj[name][objectAsKey]}`);
        }
        console.log(objectsResult.join(','));
    }

    inputArray.forEach(element => {
        let [command, name, key, value] = element.split("" "");
        commandsCollections[command](name,key,value);
    });

}

cars([
    'create c1',
    'create c2 inherit c1',
    'set c1 color red',
    'set c2 model new',
    'print c1',
    'print c2'
  ]);"
M0m9jQ3E,EmplaceBack,iozee,C++,Saturday 27th of May 2023 06:02:31 AM CDT,"#pragma once

#include <cassert>
#include <cstdlib>
#include <new>
#include <utility>
#include <execution>
#include <iostream>

template<typename T>
class RawMemory {
public:
    RawMemory() = default;

    explicit RawMemory(size_t capacity) : buffer_(Allocate(capacity)), capacity_(capacity) {}

    RawMemory(const RawMemory &) = delete;

    ~RawMemory() {
        Deallocate(buffer_);
    }

    RawMemory &operator=(const RawMemory &rhs) = delete;

    RawMemory(RawMemory &&other) noexcept {
        buffer_ = other.buffer_;
        capacity_ = other.capacity_;
        other.buffer_ = nullptr;
        other.capacity_ = 0;
    }

    RawMemory &operator=(RawMemory &&rhs) noexcept {
        if (this != &rhs) {
            buffer_ = rhs.buffer_;
            capacity_ = rhs.capacity_;
            rhs.buffer_ = nullptr;
            rhs.capacity_ = 0;
        }
        return *this;
    }

    T *operator+(size_t offset) noexcept {
        // Разрешается получать адрес ячейки памяти, следующей за последним элементом массива
        assert(offset <= capacity_);
        return buffer_ + offset;
    }

    const T *operator+(size_t offset) const noexcept {
        return const_cast<RawMemory &>(*this) + offset;
    }

    const T &operator[](size_t index) const noexcept {
        return const_cast<RawMemory &>(*this)[index];
    }

    T &operator[](size_t index) noexcept {
        return buffer_[index];
    }

    void Swap(RawMemory &other) noexcept {
        std::swap(buffer_, other.buffer_);
        std::swap(capacity_, other.capacity_);
    }

    const T *GetAddress() const noexcept {
        return buffer_;
    }

    T *GetAddress() noexcept {
        return buffer_;
    }

    size_t Capacity() const {
        return capacity_;
    }

private:
    // Выделяет сырую память под n элементов и возвращает указатель на неё
    static T *Allocate(size_t n) {
        return n != 0 ? static_cast<T *>(operator new(n * sizeof(T))) : nullptr;
    }

    // Освобождает сырую память, выделенную ранее по адресу buf при помощи Allocate
    static void Deallocate(T *buf) noexcept {
        operator delete(buf);
    }

    T *buffer_ = nullptr;
    size_t capacity_ = 0;
};

template<typename T>
class Vector {
public:

    Vector() noexcept = default;

    explicit Vector(size_t size) : data_(size), size_(size) {
        std::uninitialized_value_construct_n(data_.GetAddress(), size);
    }

    Vector(const Vector &other) : data_(other.size_), size_(other.size_) {
        std::uninitialized_copy_n(other.data_.GetAddress(), size_, data_.GetAddress());
    }

    Vector(Vector &&other) noexcept: data_(std::move(other.data_)), size_(std::move(other.size_)) {
        RawMemory<T> empty;
        other.data_ = std::move(empty);
        other.size_ = 0;
    }

    using iterator = T *;
    using const_iterator = const T *;

    iterator begin() noexcept {
        return data_.GetAddress();
    }

    iterator end() noexcept {
        return data_.GetAddress() + size_;
    }

    const_iterator begin() const noexcept {
        return data_.GetAddress();
    }

    const_iterator end() const noexcept {
        return data_.GetAddress() + size_;
    }

    const_iterator cbegin() const noexcept {
        return data_.GetAddress();
    }

    const_iterator cend() const noexcept {
        return data_.GetAddress() + size_;
    }

    iterator Erase(const_iterator pos) {
        if (pos == cend()) {
            Destroy(end() - 1);
            --size_;
            return end();
        }
        if (pos == cbegin()) {
            Destroy(begin());
            std::move(begin() + 1, end(), begin());
            --size_;
            return begin() + 1;
        }
        auto it = const_cast<T *>(pos);
        Destroy(it);
        std::move(it + 1, end(), it);
        --size_;
        return it;
    }

    iterator Insert(const_iterator pos, const T &value) {
        return Emplace(pos, value);
    }

    iterator Insert(const_iterator pos, T &&value) {
        return Emplace(pos, std::move(value));
    }

    void Resize(size_t new_size) {
        if (new_size < size_) {
            DestroyN(data_.GetAddress() + new_size, size_ - new_size);
        } else {
            Reserve(new_size);
            std::uninitialized_value_construct_n(data_.GetAddress() + size_, new_size - size_);
        }
        size_ = new_size;
    }

    void PushBack(const T &value) {
        if (size_ == Capacity()) {
            RawMemory<T> new_data(size_ == 0 ? 1 : size_ * 2);
            CopyConstruct(&new_data[size_], value);
            if constexpr (std::is_nothrow_move_constructible_v<T> || !std::is_copy_constructible_v<T>) {
                std::uninitialized_move_n(data_.GetAddress(), size_, new_data.GetAddress());
            } else {
                std::uninitialized_copy_n(data_.GetAddress(), size_, new_data.GetAddress());
            }
            std::destroy_n(data_.GetAddress(), size_);
            data_.Swap(new_data);
        } else {
            CopyConstruct(&data_[size_], value);
        }
        ++size_;
    }

    void PushBack(T &&value) {
        if (size_ == Capacity()) {
            RawMemory<T> new_data(size_ == 0 ? 1 : size_ * 2);
            if constexpr (std::is_nothrow_move_constructible_v<T> || !std::is_copy_constructible_v<T>) {
                new(new_data + size_) T(std::move(value));
                std::uninitialized_move_n(data_.GetAddress(), size_, new_data.GetAddress());
            } else {
                try {
                    new(new_data + size_) T(std::move(value));
                } catch (...) {
                    CopyConstruct(&new_data[size_], value); //  todo
                }
                std::uninitialized_copy_n(data_.GetAddress(), size_, new_data.GetAddress());
            }
            std::destroy_n(data_.GetAddress(), size_);
            data_.Swap(new_data);
        } else {
            new(data_ + size_) T(std::move(value));
        }
        ++size_;
    }

    void PopBack() noexcept {
        Destroy(&data_[size_ - 1]);
        --size_;
    }

    template<typename... Args>
    iterator Emplace(const_iterator pos, Args &&... args) {
        auto new_object_idx = std::distance(cbegin(), pos);
        if (size_ < Capacity()) {
            if (size_ > 0) {
                if (pos == cbegin()) {
                    //  base
//                    try {
                    if constexpr (std::is_nothrow_move_constructible_v<T> || !std::is_copy_constructible_v<T>) {
                        T temp(std::move(args)...);
                        std::move_backward(begin(), end() - 1, end());
                        new(data_ + new_object_idx) T(std::move(temp));
                    } else {
                        T temp(args...);
                        std::move_backward(begin(), end() - 1, end());
                        new(data_ + new_object_idx) T(temp);
                    }
                    /*} catch (...) {
                        Destroy(data_ + new_object_idx);
                        throw;
                    }*/
                } else if (pos < cend()) {
//                    try {
                    if constexpr (std::is_nothrow_move_constructible_v<T> || !std::is_copy_constructible_v<T>) {
                        T temp(std::move(args)...);
                        new(data_ + size_) T(std::move(*(end() - 1)));
                        std::move_backward(const_cast<T *>(pos), end() - 1, end());
                        data_[new_object_idx] = std::move(temp);
                    } else {
                        T temp(args...);
                        new(data_ + size_) T(*(end() - 1));
                        std::move_backward(const_cast<T *>(pos), end() - 1, end());
                        data_[new_object_idx] = std::move(temp);
                    }
                    /*} catch (...) {
                        Destroy(data_ + new_object_idx);
                        throw;
                    }*/

                } else {
                    EmplaceBack(args...);
                }
            } else {
                if constexpr (std::is_nothrow_move_constructible_v<T> || !std::is_copy_constructible_v<T>) {
                    new(data_ + new_object_idx) T(std::move(args)...);
                } else {
                    new(data_ + new_object_idx) T((args)...);
                }
            }
        } else {
            RawMemory<T> new_data(Capacity() == 0 ? 1 : Capacity() * 2);
//            try {
            if constexpr (std::is_nothrow_move_constructible_v<T> || !std::is_copy_constructible_v<T>) {
                new(new_data + new_object_idx) T(std::move(args)...);
                std::uninitialized_move_n(data_.GetAddress(),
                                          new_object_idx,
                                          new_data.GetAddress());
            } else {
                new(new_data + new_object_idx) T(args...);
                std::uninitialized_copy_n(data_.GetAddress(),
                                          new_object_idx,
                                          new_data.GetAddress());
            }
            /*         } catch (...) {
                         Destroy(new_data + new_object_idx);
                         throw;
                     }
                     try {*/
            if constexpr (std::is_nothrow_move_constructible_v<T> || !std::is_copy_constructible_v<T>) {
                std::uninitialized_move_n(data_ + new_object_idx,
                                          std::distance(pos, cend()),
                                          new_data + new_object_idx + 1);
            } else {
                std::uninitialized_copy_n(data_ + new_object_idx,
                                          std::distance(pos, cend()),
                                          new_data + new_object_idx + 1);
            }
/*            } catch (...) {
                DestroyN(data_.GetAddress(), new_object_idx + 1);
                throw;
            }*/
            std::destroy_n(data_.GetAddress(), size_);
            data_.Swap(new_data);
        }
        ++size_;
        return &data_[new_object_idx];
    }

    template<typename... Args>
    T &EmplaceBack(Args &&... args) {
        if (Capacity() == 0) {
            Reserve(1);
        }
        if (size_ == Capacity()) {
            RawMemory<T> new_data(size_ == 0 ? 1 : size_ * 2);
            if constexpr (std::is_copy_constructible_v<T> || std::is_nothrow_move_constructible_v<T>) {
                //  strict
                if constexpr (std::is_nothrow_move_constructible_v<T>) {
                    new(new_data + size_) T(std::move(args)...);
                } else {
                    new(new_data + size_) T(args...);
                }
                try {
                    if constexpr (std::is_nothrow_move_constructible_v<T>) {
                        std::uninitialized_move_n(data_.GetAddress(), size_, new_data.GetAddress());
                    } else {
                        std::uninitialized_copy_n(data_.GetAddress(), size_, new_data.GetAddress());
                    }
                } catch (...) {
                    Destroy(new_data + size_);
                    throw;
                }
            } else {
                //  basic
                new(new_data + size_) T(std::move(args)...);
                std::uninitialized_move_n(data_.GetAddress(), size_, new_data.GetAddress());
            }
            std::destroy_n(data_.GetAddress(), size_);
            data_.Swap(new_data);
        } else {
            if constexpr (std::is_copy_constructible_v<T> || std::is_nothrow_move_constructible_v<T>) {
                //  strict
                if constexpr (std::is_nothrow_move_constructible_v<T>) {
                    new(data_ + size_) T(std::move(args)...);
                } else {
                    new(data_ + size_) T(args...);
                }
            } else {
                //  basic
                new(data_ + size_) T(std::move(args)...);
            }
        }
        ++size_;
        return *(data_ + size_ - 1);
    }

    Vector &operator=(const Vector &rhs) {
        if (this != &rhs) {
            if (rhs.size_ > data_.Capacity()) {
                Vector<T> large(rhs);
                Swap(large);
            } else {
                /* Скопировать элементы из rhs, создав при необходимости новые или удалив существующие */
                if (rhs.size_ < size_) {
                    for (size_t i = 0; i < rhs.size_; ++i) {
                        data_[i] = rhs[i];
                    }
                    std::destroy_n(data_.GetAddress() + rhs.size_, size_ - rhs.size_);
                    size_ = rhs.size_;
                } else {
                    for (size_t i = 0; i < size_; ++i) {
                        data_[i] = rhs[i];
                    }
                    std::uninitialized_copy_n(rhs.data_.GetAddress() + rhs.size_ - size_,
                                              rhs.size_ - size_,
                                              data_.GetAddress() + size_);
                    size_ = rhs.size_;
                }
            }
        }
        return *this;
    }

    void Swap(Vector &other) noexcept {
        if (this == &other) {
            return;
        }
        data_.Swap(other.data_);
        std::swap(size_, other.size_);
    }

    Vector &operator=(Vector &&rhs) noexcept {
        if (this == &rhs) {
            return *this;
        }
        data_ = std::move(rhs.data_);
        size_ = rhs.size_;
        rhs.size_ = 0;
        return *this;
    }

    virtual ~Vector() {
        DestroyN(data_.GetAddress(), size_);
    }

    size_t Size() const noexcept {
        return size_;
    }

    size_t Capacity() const noexcept {
        return data_.Capacity();
    }

    const T &operator[](size_t index) const noexcept {
        return const_cast<Vector &>(*this)[index];
    }

    T &operator[](size_t index) noexcept {
        assert(index < size_);
        return data_[index];
    }

    void Reserve(const size_t capacity) {
        if (data_.Capacity() >= capacity) {
            return;
        }
        RawMemory<T> new_data(capacity);

        // Конструируем элементы в new_data, копируя их из data_
        if constexpr (std::is_nothrow_move_constructible_v<T> || !std::is_copy_constructible_v<T>) {
            std::uninitialized_move_n(data_.GetAddress(), size_, new_data.GetAddress());
        } else {
            std::uninitialized_copy_n(data_.GetAddress(), size_, new_data.GetAddress());
        }

        // Разрушаем элементы в data_
        std::destroy_n(data_.GetAddress(), size_);

        // Избавляемся от старой сырой памяти, обменивая её на новую
        data_.Swap(new_data);

        // При выходе из метода старая память будет возвращена в кучу
    }

private:
    RawMemory<T> data_;
    size_t size_ = 0;

    // Вызывает деструкторы n объектов массива по адресу buf
    static void DestroyN(T *buf, size_t n) noexcept {
        for (size_t i = 0; i != n; ++i) {
            Destroy(buf + i);
        }
    }

    // Создаёт копию объекта elem в сырой памяти по адресу buf
    static void CopyConstruct(T *buf, const T &elem) {
        new(buf) T(elem);
    }

    // Вызывает деструктор объекта по адресу buf
    static void Destroy(T *buf) noexcept {
        buf->~T();
    }
};"
RDsCkujv,data585,TestGuy1,JSON,Saturday 27th of May 2023 06:00:05 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: 'dafd5ef1364ec0a9fc936a602e7e0c0e2f4dc9db132ed95274df49c24ba1e2f5c2f903c90997c26631bf53017560c0f2e6afcd914d953922149e2947b89d04e22fc9d67d1974735c137eb73c6834c06f0acb0ec3a97a0b84385e5bb5b72cc64c1f0aba451a1b0d6286fe4733dacaccf307770698104cf0a9ce3d6867a65ed4f0',
  otherdata: [
    '59329ba21c2a46b8949ee1617654cfc3',
    'dc40c14e9a9b4649585504121c2c69c4',
    '3ef9b3f199671b3751dfe91eca5f9c37',
    '15f1e30ff2c9c999398f8e6ba038b236',
    'e34fe21e7140459f642da41938f694cc',
    'e4291791918ff548466035f06ad0307f',
    'd35058b4abbd703a3dd2e58eb5c05901',
    'bf04d19cfc952311547a4ed8f19f440a'
  ]
}"
8gDeWgBv,Lists Exercises,Bobbyppv,Python,Saturday 27th of May 2023 05:45:14 AM CDT,"#1
 
list_of_numbers = input().split()
opposite_numbers = []
for element in list_of_numbers:
    current_number = -int(element)
    opposite_numbers.append(current_number)
print(opposite_numbers)
 
 
#2
factor = int(input())
count = int(input())
list_of_numbers = []
for multiplier in range(1, count + 1):
    list_of_numbers.append(factor * multiplier)
print(list_of_numbers)
 
 
#3
 
team_a = ['A-1', 'A-2', 'A-3', 'A-4', 'A-5', 'A-6', 'A-7', 'A-8', 'A-9', 'A-10', 'A-11']
team_b = ['B-1', 'B-2', 'B-3', 'B-4', 'B-5', 'B-6', 'B-7', 'B-8', 'B-9', 'B-10', 'B-11']
players_sent_off = input().split()
game_was_terminated = False
for player in players_sent_off:
    if player in team_a:
        team_a.remove(player)
    elif player in team_b:
        team_b.remove(player)
    if len(team_a) < 7 or len(team_b) <7:
        game_was_terminated = True
        break
print(f""Team A - {len(team_a)}; Team B - {len(team_b)}"")
if game_was_terminated: # if game_was_terminated == True:
    print(""Game was terminated"")
 
 
#4
 
money_as_string = input().split("", "")
number_of_beggars = int(input())
money_as_digits = []
for element in money_as_string:
    money_as_digits.append(int(element))
final_sums = []
start_index = 0
while start_index < number_of_beggars:
    sum_for_current_beggar = 0
    for current_index in range(start_index, len(money_as_digits), number_of_beggars):
        sum_for_current_beggar += money_as_digits[current_index]
    final_sums.append(sum_for_current_beggar)
    start_index += 1
print(final_sums)
 
#5
 
deck_of_cards = input().split()
number_of_shuffles = int(input())
for shuffle in range(number_of_shuffles):
    final_deck = []
    middle_of_the_deck = len(deck_of_cards) // 2
    left_part = deck_of_cards[0:middle_of_the_deck]
    right_part = deck_of_cards[middle_of_the_deck:]
    for card_index in range(len(right_part)):
        final_deck.append(left_part[card_index])
        final_deck.append(right_part[card_index])
    deck_of_cards = final_deck
print(final_deck)
 
#8 
 
 
 
cells = input().split(""#"")
amount_of_water = int(input())
total_fire = 0
total_effort = 0
fire_out_cells = []
high = range(81, 125 + 1)
medium = range(51, 80 + 1)
low = range(1, 50 + 1)
for cell in cells:
    type_of_fire, cell_value = cell.split("" = "")
    cell_value = int(cell_value)
    cell_is_valid = False
    if type_of_fire == ""High"":
        if cell_value in high:
            cell_is_valid = True
    elif type_of_fire == ""Medium"":
        if cell_value in medium:
            cell_is_valid = True
    elif type_of_fire == ""Low"": #else:
        if cell_value in low:
            cell_is_valid = True
    if cell_is_valid:
        if amount_of_water >= cell_value:
            amount_of_water -= cell_value
            fire_out_cells.append(cell_value)
            total_fire += cell_value
            total_effort += cell_value * 0.25
print(""Cells:"")
for fire_out_cell in fire_out_cells:
    print(f""- {fire_out_cell}"")
print(f""Effort: {total_effort:.2f}"")
print(f""Total Fire: {total_fire}"")
 
 
 
 
 
#9
 
items = input().split(""|"")
budget = float(input())
sell_prices = []
profit = 0
train_ticket = 150
for item in items:
    type, buying_price = item.split(""->"")
    buying_price = float(buying_price)
    price_is_valid = False
    if type == ""Clothes"":
        if buying_price <= 50.00:
            price_is_valid = True
    elif type == ""Shoes"":
        if buying_price <= 35.00:
            price_is_valid = True
    elif type == ""Accessories"":
        if buying_price <= 20.50:
            price_is_valid = True
    if price_is_valid:
        if budget >= buying_price:
            budget -= buying_price
            sell_price = buying_price * 1.40
            profit += sell_price - buying_price
            sell_prices.append(sell_price)
#Option 1
for sell_price in sell_prices:
    print(f""{sell_price:.2f}"", end = "" "")
print()
 
#Option 2
# print("" "".join([f""{sell_price:.2f}"" for sell_price in sell_prices]))
 
#Option 3
# sell_prices_as_string = []
# for sell_price in sell_prices:
#     sell_prices_as_string.append(f""{sell_price:.2f}"")
# print("" "".join(sell_prices_as_string))
 
print(f""Profit: {profit:.2f}"")
total_income = budget + sum(sell_prices)
if total_income >= train_ticket:
    print(""Hello, France!"")
else:
    print(""Not enough money."")
 
 
 
#10
 
events = input().split(""|"")
total_energy = 100
total_coins = 100
factory_is_open = True
for event in events:
    event_items = event.split(""-"")
    type_of_event = event_items[0]
    event_value = int(event_items[1])
    if type_of_event == ""rest"":
        current_energy = total_energy
        total_energy += event_value
        if total_energy > 100:
            total_energy = 100
        gained_energy = total_energy - current_energy
        print(f""You gained {gained_energy} energy."")
        print(f""Current energy: {total_energy}."")
    elif type_of_event == ""order"":
        if total_energy >= 30: #order can be completed
            total_energy -= 30
            total_coins += event_value
            print(f""You earned {event_value} coins."")
        else:
            total_energy += 50
            print(""You had to rest!"")
    else:
        if total_coins >= event_value:
            total_coins -= event_value
            print(f""You bought {type_of_event}."")
        else:
            factory_is_open = False
            break
if factory_is_open: #if factory is open == True
    print(""Day completed!"")
    print(f""Coins: {total_coins}"")
    print(f""Energy: {total_energy}"")
else:
    print(f""Closed! Cannot afford {type_of_event}."")
 
 
 
 
 
my_list = [1, 8, 4, 89, 43, 2, 132, 2, 2, ""Gosho"", ""gosho""]
 
# my_list.sort(reverse=True)
# print(my_list)
#
# my_list.pop()
# print(my_list)
# my_list.pop(2)
# print(my_list)
# my_list.append(my_list.pop(2))
# print(my_list)
 
 
# my_list.insert(3, ""Atanas"")
# print(my_list)
 
# number = my_list.index(2)
# print(number)
#
# repetition = my_list.count(2)
# print(repetition)
#
# my_list.reverse()
# print(my_list)
# print(my_list[::-1])
#
# del my_list[3]
# print(my_list)
#
my_list.remove(""Gosho"")
print(my_list)
my_list.remove(""Pesho"")
print(my_list)"
9q6BN4Qu,flutter_delete,yudiwibisono,Dart,Saturday 27th of May 2023 05:14:09 AM CDT,"import 'package:flutter/material.dart';
import 'package:http/http.dart' as http;

void main() => runApp(MaterialApp(home: MyApp()));

class MyApp extends StatefulWidget {
  const MyApp({Key? key}) : super(key: key);
  @override
  MyAppState createState() => MyAppState();
}

class MyAppState extends State<MyApp> {
  late Future<int> respPost; 
  String url = ""http://127.0.0.1:8000/delete_mhs/"";

  Future<int> fetchData() async {
    //data disimpan di body
    String nim = ""13594022"";
    //nim tambahkan di url
    //pastikan http.delete
    final response = await http.delete(Uri.parse(url + nim)); //hanya ganti nama saja
    return response.statusCode; //sukses kalau 200
  }

  @override
  void initState() {
    super.initState();
    respPost = Future.value(0); //init
  }

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'My App',
      home: Scaffold(
        appBar: AppBar(
          title: const Text('My App'),
        ),
        body: Center(
            child: Column(
          mainAxisSize: MainAxisSize.min,
          children: [
            ElevatedButton(
              onPressed: () {
                setState(() {
                  respPost = fetchData();
                });
              },
              child: const Text('Klik untuk delete data'),
            ),
            Text(""Hasil:""),
            FutureBuilder<int>(
                future: respPost,
                builder: (context, snapshot) {
                  if (snapshot.hasData) {
                    if (snapshot.data! == 200) {
                      return Text(""Proses delete berhasil!"");
                    }
                    if (snapshot.data! == 0) {
                      return Text("""");
                    } else {
                      return Text(""Proses delete gagal"");
                    }
                  }
                  // default: loading spinner.
                  return const CircularProgressIndicator();
                })
          ],
        )), //column center
      ), //Scaffold
    ); //Material APP
  }
}
"
JrPF1nRD,07. Working Hours,veronikaaa86,Java,Saturday 27th of May 2023 05:05:50 AM CDT,"package conditionalStatementsAdvanced;

import java.util.Scanner;

public class P07WorkingHours {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        int hour = Integer.parseInt(scanner.nextLine());
        String dayOfWeek = scanner.nextLine();

        boolean isWorkingDays = dayOfWeek.equals(""Monday"") ||
                dayOfWeek.equals(""Tuesday"") ||
                dayOfWeek.equals(""Wednesday"") ||
                dayOfWeek.equals(""Thursday"") ||
                dayOfWeek.equals(""Friday"") ||
                dayOfWeek.equals(""Saturday"");

        boolean isWorkingHours = hour >= 10 && hour <= 18;

        if (isWorkingDays && isWorkingHours) {
            System.out.println(""open"");
        } else {
            System.out.println(""closed"");
        }
    }
}
"
uDSCmqSr,12. Trade Commissions,veronikaaa86,Java,Saturday 27th of May 2023 05:02:47 AM CDT,"package conditionalStatementsAdvanced;

import java.util.Scanner;

public class P12TradeCommissions {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        String town = scanner.nextLine();
        double income = Double.parseDouble(scanner.nextLine());

        boolean isValidData = true;
        double commission = 0;
        if (town.equals(""Sofia"")) {
            if (income >= 0 && income <= 500) {
                commission = income * 0.05;
            } else if (income > 500 && income <= 1000) {
                commission = income * 0.07;
            } else if (income > 1000 && income <= 10000) {
                commission = income * 0.08;
            } else if (income > 10000) {
                commission = income * 0.12;
            } else {
                isValidData = false;
            }
        } else if (town.equals(""Varna"")) {
            if (income >= 0 && income <= 500) {
                commission = income * 0.045;
            } else if (income > 500 && income <= 1000) {
                commission = income * 0.075;
            } else if (income > 1000 && income <= 10000) {
                commission = income * 0.1;
            } else if (income > 10000) {
                commission = income * 0.13;
            } else {
                isValidData = false;
            }
        } else if (town.equals(""Plovdiv"")) {
            if (income >= 0 && income <= 500) {
                commission = income * 0.055;
            } else if (income > 500 && income <= 1000) {
                commission = income * 0.08;
            } else if (income > 1000 && income <= 10000) {
                commission = income * 0.12;
            } else if (income > 10000) {
                commission = income * 0.145;
            } else {
                isValidData = false;
            }
        } else {
            isValidData = false;
        }

        if (isValidData) {
            System.out.printf(""%.2f"", commission);
        } else {
            System.out.println(""error"");
        }
    }
}
"
sdX3G9i9,11. Fruit Shop,veronikaaa86,Java,Saturday 27th of May 2023 04:49:36 AM CDT,"package conditionalStatementsAdvanced;

import java.util.Scanner;

public class P11FruitShop {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        String fruit = scanner.nextLine();
        String dayOfWeek = scanner.nextLine();
        double quantity = Double.parseDouble(scanner.nextLine());

        boolean isWorkingDay = dayOfWeek.equals(""Monday"")
                || dayOfWeek.equals(""Tuesday"")
                || dayOfWeek.equals(""Wednesday"")
                || dayOfWeek.equals(""Thursday"")
                || dayOfWeek.equals(""Friday"");

        boolean isWeekend = dayOfWeek.equals(""Saturday"")
                || dayOfWeek.equals(""Sunday"");

        boolean isValid = true;

        double price = 0;
        if (isWorkingDay) {
            if (fruit.equals(""banana"")) {
                price = 2.5;
            } else if (fruit.equals(""apple"")) {
                price = 1.2;
            }  else if (fruit.equals(""orange"")) {
                price = 0.85;
            } else if (fruit.equals(""grapefruit"")) {
                price = 1.45;
            } else if (fruit.equals(""kiwi"")) {
                price = 2.7;
            } else if (fruit.equals(""pineapple"")) {
                price = 5.5;
            } else if (fruit.equals(""grapes"")) {
                price = 3.85;
            } else {
                isValid = false;
            }
        } else if (isWeekend) {
            if (fruit.equals(""banana"")) {
                price = 2.7;
            } else if (fruit.equals(""apple"")) {
                price = 1.25;
            }  else if (fruit.equals(""orange"")) {
                price = 0.90;
            } else if (fruit.equals(""grapefruit"")) {
                price = 1.6;
            } else if (fruit.equals(""kiwi"")) {
                price = 3;
            } else if (fruit.equals(""pineapple"")) {
                price = 5.6;
            } else if (fruit.equals(""grapes"")) {
                price = 4.2;
            } else {
                isValid = false;
            }
        } else {
            isValid = false;
        }

        if (isValid) {
            double result = quantity * price;
            System.out.printf(""%.2f"", result);
        } else {
            System.out.println(""error"");
        }
    }
}
"
4QDAVB4m,Smiling Face,sriyanto,Python,Saturday 27th of May 2023 04:20:23 AM CDT,"import turtle
screen = turtle.Screen()
t = turtle.Turtle()
screen.setup(500,500) 

t.width(1)
t.speed(1)

# Set screen color
screen.bgcolor('teal')
# Draw the face
t.penup()
t.goto(0, -100)
t.fillcolor('yellow')
t.begin_fill()
t.pendown()
t.circle(100)
t.penup()
t.end_fill()

# draw the  left eye 
t.goto(-30, -20)
t.fillcolor('white')
t.begin_fill()
t.pendown()
t.circle(30)
t.penup()
t.end_fill()

t.goto(-30, -10)
t.fillcolor('black')
t.begin_fill()
t.pendown()
t.circle(10)
t.penup()
t.end_fill()

# draw the right eye 
t.goto(30, -20)
t.fillcolor('white')
t.begin_fill()
t.pendown()
t.circle(30)
t.penup()
t.end_fill()

t.goto(30, -10)
t.fillcolor('black')
t.begin_fill()
t.pendown()
t.circle(10)
t.penup()
t.end_fill()

# smile 
t.goto(-55,-40)
t.pendown()
t.right(45)
t.circle(80,90)
t.penup()

#draw a hat 
t.goto(-40,90)
t.right(45) #set the direction forward
t.fillcolor('red')
t.begin_fill()
t.pendown()
#draw triangle
t.forward(80)
t.left(120)
t.forward(80)
t.left(120)
t.forward(80)
t.left(120)
t.end_fill()
t.penup()
t.hideturtle()"
p5anKzVi,Untitled,Bed007,C#,Saturday 27th of May 2023 04:11:09 AM CDT,"using System;
using System.Collections.Generic;
using System.Globalization;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Xml.Linq;

namespace ZadaniaMVVM.Model
{
    // trwale przechowywanie kolekcji 
    public static class PlikXml
    {
        // format provider bo na innym urzadzeniu, moze byc . a nie chce miec bledow 
        // amerykanska kultura uzyta
        private static readonly IFormatProvider formatProvider = CultureInfo.InvariantCulture;
        
        public static void Zapisz(this Zadania zadania, string sciezkaPliku)
        {
            try
            {
                XDocument xml = new XDocument(
                    new XDeclaration(""1.0"", ""utf-8"", ""yes""),
                    new XComment(""Data zapisania: "" + DateTime.Now.ToString()),
                    // twz korzen czyli znacznik ktory bedzie zawieral wszystkie pozostale znaczniki 
                    new XElement(""Zadania"",
                        from Zadanie in zadania
                        select new XElement(""Zadanie"",
                            new XElement(""Opis"", Zadanie.Opis),
                            new XElement(""DataUtworzenia"", Zadanie.DataUtworzenia.ToString(formatProvider)),
                            new XElement(""PlanowanieRealizacji"", Zadanie.PlanowanyTerminRealizacji.ToString(formatProvider)),
                            new XElement(""Piorytet"", ((byte)Zadanie.Priorytet).ToString()),
                            new XElement(""CzyZrealizowane"", Zadanie.CzyZrealizowane.ToString(formatProvider))
                        )
                    )
                );
                
                xml.Save(sciezkaPliku);
            }
            catch (Exception exc)
            {
                throw new Exception(""Blad przy zapisie danych do pliku XML"", exc);
            }
        }

        // testy jednostkowe maja sprawdzic czy nie psujemy obecnego kodu 

        public static Zadania Czytaj(string sciezkaPliku)
        {
            try
            {
                XDocument xml = XDocument.Load(sciezkaPliku);
                // sparsowanie odczytanych kolekcji zadan
                IEnumerable<Zadanie> dane =
                    from Zadanie in xml.Root.Descendants(""Zadanie"")
                    select new Zadanie(
                        Zadanie.Element(""Opis"").Value,
                        DateTime.Parse(Zadanie.Element(""DataUtworzenia"").Value, formatProvider),
                        DateTime.Parse(Zadanie.Element(""PlanowanieRealizacji"").Value, formatProvider),
                        (PriorytetZadania)byte.Parse(Zadanie.Element(""Piorytet"").Value, formatProvider),
                        bool.Parse(Zadanie.Element(""CzyZrealizowane"").Value)
                    );
                    
                // stworzenie obiektu modelu 
                Zadania zadania = new Zadania();
                foreach (Zadanie zadanie in dane)
                {
                    zadania.DodajZadanie(zadanie);
                }
                
                return zadania;
            }
            catch (Exception exc)
            {
                throw new Exception(""Blad przy odczycie danych do pliku XML"", exc);
            }
        }
    }
}
"
RsdHHu16,EggSpwans,sriyanto,Lua,Saturday 27th of May 2023 04:07:39 AM CDT,"<link rel=""stylesheet"" type=text/css href=""{{ url_for('static', filename='style.css') }}""> 
<style>
img {
  border: 1px solid #ddd;
  border-radius: 4px;
  padding: 5px;
  width: 150px;
}
img:hover {
  box-shadow: 0 0 2px 1px rgba(0, 140, 186, 0.5);
}
</style>
{% block main %}
{% endblock %}
{% extends 'base.html' %}
{% block main %}
{% endblock %}
href=""{{ url_for('index') }}""
Python:
https://replit.com/~

Scratch:
https://scratch.mit.edu/join

Roblox Studio
https://www.roblox.com/create

Meeting ID: 
Passcode: 12345
--Scratch
--https://sites.google.com/view/coding9/scratch-ml/fruit-collector 
--Template
--https://drive.google.com/file/d/1VrMKp5ZjYHxSAcKJ6TQMx8pL_KhdJKFd/view?usp=drive_link 
--this is script of roblox:
local eggs = game.ReplicatedStorage.Eggs
local spawns = game.Workspace.EggSpawns
while wait(2) do --to select the random egg and spawn every 2 seconds to put it out in the location
	--anything inside this while loop will keep on running for every two seconds
	--create a table for all of the eggs that are present in the folder
	local eggsTable = eggs:GetChildren() --This will help in getting all of the eggs in the folder
	
	--random egg pick out of the table
	local randomEgg = eggsTable[math.random(1,#eggsTable)] --value for random will be 1 and however items are their in the table, #eggstable will give the amount of items in that table
	
	--create a table to choose the random spawn
	local spawnsTable = spawns:GetChildren()
	
	--to pick a random spawn from the table
	local randomSpawn = spawnsTable[math.random(1,#spawnsTable)]
	
	--After getting a random egg, create a clone of it to not use the egg which is their in replicated storage
	
	local eggClone = randomEgg:Clone()
	
	--to put the cloned egg in a new folder
	eggClone.Parent = game.Workspace.SpawnedEggs
	
	--to set the position of the cloned egg
	eggClone.Position = randomSpawn.Position + Vector3.new(0,20,0) --to get the current position of the random spawn and moving it to 20 studs y axis
	eggClone.Anchored = false
	
	--touch event when the egg has been touched by the player
	eggClone.Touched:Connect(function(hit) --hit is the arguement, an object which touches the egg
		--when the egg has been touched, delete it
		--to check whether egg has been touched by the player or not
		local playr = game.Players:GetPlayerFromCharacter(hit.Parent) --this will return true or false, depending egg got hit by the players body only
		if playr then
			--if true
			eggClone:Destroy()
		end
	end)
end"
dhqPSBYf,08. Cinema Ticket,veronikaaa86,Java,Saturday 27th of May 2023 04:06:29 AM CDT,"package conditionalStatementsAdvanced;

import java.util.Scanner;

public class P08CinemaTicket {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        String dayOfWeek = scanner.nextLine();

        if (dayOfWeek.equals(""Monday"") || dayOfWeek.equals(""Tuesday"") || dayOfWeek.equals(""Friday"")) {
            System.out.println(12);
        } else if (dayOfWeek.equals(""Wednesday"") || dayOfWeek.equals(""Thursday"")) {
            System.out.println(14);
        } else if (dayOfWeek.equals(""Saturday"") || dayOfWeek.equals(""Sunday"")) {
            System.out.println(16);
        }

//        switch (dayOfWeek) {
//            case ""Monday"":
//            case ""Tuesday"":
//            case ""Friday"":
//                System.out.println(12);
//                break;
//            case ""Wednesday"":
//            case ""Thursday"":
//                System.out.println(14);
//                break;
//            case ""Saturday"":
//            case ""Sunday"":
//                System.out.println(16);
//                break;
//        }
    }
}
"
UZpPAFBc,flutter_patch,yudiwibisono,Dart,Saturday 27th of May 2023 04:04:44 AM CDT,"import 'package:flutter/material.dart';
import 'package:http/http.dart' as http;

void main() => runApp(MaterialApp(home: MyApp()));

class MyApp extends StatefulWidget {
  const MyApp({Key? key}) : super(key: key);
  @override
  MyAppState createState() => MyAppState();
}

class MyAppState extends State<MyApp> {
  late Future<int> respPost; //201 artinya berhasil
  String url = ""http://127.0.0.1:8000/update_mhs_patch/"";

  Future<int> fetchData() async {
    //data disimpan di body
    String nim = ""13594022"";
    //nim tambahkan di url
    //pastikan http.put! bukan post
    final response = await http.patch(Uri.parse(url + nim),
        headers: <String, String>{
          'Content-Type': 'application/json; charset=UTF-8'
        },
        body: """"""
      {
      ""nama"": ""Sandra Aulia""} """"""); //hanya ganti nama saja
    return response.statusCode; //sukses kalau 200
  }

  @override
  void initState() {
    super.initState();
    respPost = Future.value(0); //init
  }

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'My App',
      home: Scaffold(
        appBar: AppBar(
          title: const Text('My App'),
        ),
        body: Center(
            child: Column(
          mainAxisSize: MainAxisSize.min,
          children: [
            ElevatedButton(
              onPressed: () {
                setState(() {
                  respPost = fetchData();
                });
              },
              child: const Text('Klik untuk update data (patch)'),
            ),
            Text(""Hasil:""),
            FutureBuilder<int>(
                future: respPost,
                builder: (context, snapshot) {
                  if (snapshot.hasData) {
                    if (snapshot.data! == 200) {
                      return Text(""Proses Update patch Berhasil!"");
                    }
                    if (snapshot.data! == 0) {
                      return Text("""");
                    } else {
                      return Text(""Proses insert gagal"");
                    }
                  }
                  // default: loading spinner.
                  return const CircularProgressIndicator();
                })
          ],
        )), //column center
      ), //Scaffold
    ); //Material APP
  }
}
"
DekZubzU,Roblox double tailed visualizer R15,amreincsabika,Lua,Saturday 27th of May 2023 03:50:15 AM CDT,"-- Change amreincsabika0 to your roblox username
require(8817774515).load(""amreincsabika0"") -- R15 converter if needed
wait(0.1)
require(13047968713).load(""amreincsabika0"") -- The script"
CMXNMqsj,flutter_put,yudiwibisono,Dart,Saturday 27th of May 2023 03:44:48 AM CDT,"import 'package:flutter/material.dart';
import 'package:http/http.dart' as http;

void main() => runApp(MaterialApp(home: MyApp()));

class MyApp extends StatefulWidget {
  const MyApp({Key? key}) : super(key: key);
  @override
  MyAppState createState() => MyAppState();
}

class MyAppState extends State<MyApp> {
  late Future<int> respPost; //201 artinya berhasil
  String url = ""http://127.0.0.1:8000/update_mhs_put/"";

  Future<int> fetchData() async {
    //data disimpan di body
    String nim = ""13594022"";
    //nim tambahkan di url
    //pastikan http.put! bukan post
    final response = await http.put(Uri.parse(url + nim),
        headers: <String, String>{
          'Content-Type': 'application/json; charset=UTF-8'
        },
        body: """"""
      {
      ""nim"":""13594022"",  
      ""nama"": ""Ahmad Aulia2"",
      ""id_prov"": ""142"",
      ""angkatan"": ""2022"",
      ""tinggi_badan"": 192} """""");
    return response.statusCode; //sukses kalau 200
  }

  @override
  void initState() {
    super.initState();
    respPost = Future.value(0); //init
  }

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'My App',
      home: Scaffold(
        appBar: AppBar(
          title: const Text('My App'),
        ),
        body: Center(
            child: Column(
          mainAxisSize: MainAxisSize.min,
          children: [
            ElevatedButton(
              onPressed: () {
                setState(() {
                  respPost = fetchData();
                });
              },
              child: const Text('Klik untuk update data (PUT)'),
            ),
            Text(""Hasil:""),
            FutureBuilder<int>(
                future: respPost,
                builder: (context, snapshot) {
                  if (snapshot.hasData) {
                    if (snapshot.data! == 200) {
                      return Text(""Proses Update Berhasil!"");
                    }
                    if (snapshot.data! == 0) {
                      return Text("""");
                    } else {
                      return Text(""Proses insert gagal"");
                    }
                  }
                  // default: loading spinner.
                  return const CircularProgressIndicator();
                })
          ],
        )), //column center
      ), //Scaffold
    ); //Material APP
  }
}
"
5P41K49t,05. Small Shop,veronikaaa86,Java,Saturday 27th of May 2023 03:43:31 AM CDT,"package conditionalStatementsAdvanced;

import java.util.Scanner;

public class P05SmallShop {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        String product = scanner.nextLine();
        String town = scanner.nextLine();
        double quantity = Double.parseDouble(scanner.nextLine());

        double price = 0;
        if (town.equals(""Sofia"")) {
            if (product.equals(""coffee"")) {
                price = 0.50;
            } else if (product.equals(""water"")) {
                price = 0.80;
            }  else if (product.equals(""beer"")) {
                price = 1.20;
            } else if (product.equals(""sweets"")) {
                price = 1.45;
            } else if (product.equals(""peanuts"")) {
                price = 1.60;
            }
        } else if (town.equals(""Plovdiv"")) {
            if (product.equals(""coffee"")) {
                price = 0.40;
            } else if (product.equals(""water"")) {
                price = 0.70;
            }  else if (product.equals(""beer"")) {
                price = 1.15;
            } else if (product.equals(""sweets"")) {
                price = 1.30;
            } else if (product.equals(""peanuts"")) {
                price = 1.50;
            }
        } else if (town.equals(""Varna"")) {
            if (product.equals(""coffee"")) {
                price = 0.45;
            } else if (product.equals(""water"")) {
                price = 0.70;
            }  else if (product.equals(""beer"")) {
                price = 1.10;
            } else if (product.equals(""sweets"")) {
                price = 1.35;
            } else if (product.equals(""peanuts"")) {
                price = 1.55;
            }
        }

        double result = quantity * price;

        System.out.println(result);
    }
}
"
jptF5xi6,Untitled,libobil,C++,Saturday 27th of May 2023 03:42:34 AM CDT,"#include <algorithm>
#include <iostream>
#include <numeric>
#include <vector>

typedef long long llong;
const int MAXN = 200000 + 10;
const int INF  = 1e9;

int n, q;
int d[MAXN];
int sz[MAXN];
bool has[MAXN];
int active[MAXN];
std::vector <int> g[MAXN];
std::vector <std::pair <int,int>> queries[MAXN];
std::vector <std::pair <int,int>> adequate[MAXN];

void initliazeDFS(int node) // първо дете - max sz
{
    sz[node] = 1;
    for (const int &i : g[node])
    {
        d[i] = d[node] + 1;
        initliazeDFS(i);
        sz[node] += sz[i];
    }

    for (int i = 1 ; i < g[node].size() ; ++i)
    {
        if (sz[g[node][i]] > sz[g[node][0]])
        {
            std::swap(g[node][i], g[node][0]);
        }
    }
}

void removeDFS(int node)
{
    for (const auto &[k, idx] : adequate[node]) // вече adequate ще е изчислено
    {
        has[d[node] + k] = false;
    }

    for (const int &i : g[node])
    {
        removeDFS(i);
    }
}

void addDFS(int node)
{
    for (const auto &[k, idx] : adequate[node]) // вече adequate ще е изчислено
    {
        has[d[node] + k] = true;
    }

    for (const int &i : g[node])
    {
        addDFS(i);
    }
}

int cntAdequate;
void clearQueries(int node)
{
    if (g[node].empty()) // проверка дали е листо
    {
        return;
    }

    for (int i = 1 ; i < g[node].size() ; ++i)
    {
        clearQueries(g[node][i]);
        removeDFS(g[node][i]);
    }

    // щом не е листо, има нулево дете
    clearQueries(g[node][0]);
    for (int i = 1 ; i < g[node].size() ; ++i)
    {
        addDFS(g[node][i]);
    }

    for (const auto &[k, idx] : queries[node])
    {
        if (!has[k + d[node]])
        {
            adequate[node].emplace_back(k, idx);
            has[k + d[node]] = true;
        }
    }

    cntAdequate += adequate[node].size();
}

int atDepth[MAXN];
int toQuery[MAXN];
void assignDFS(int node)
{
    toQuery[node] = atDepth[d[node]]; 
    for (const auto &[k, idx] : adequate[node])
    {
        atDepth[d[node] + k] = idx;
    }

    for (const int &i : g[node])
    {
        assignDFS(i);
    }

    for (const auto &[k, idx] : adequate[node])
    {
        atDepth[d[node] + k] = 0;
    }
}

int currCnt;
void addNode(int node)
{
    if (toQuery[node] == 0)
    {
        return;
    }

    currCnt += (active[toQuery[node]] == 0);
    active[toQuery[node]]++;
}

void removeNode(int node)
{
    if (toQuery[node] == 0)
    {
        return;
    }

    active[toQuery[node]]--;
    currCnt -= (active[toQuery[node]] == 0);
}

void solve()
{   
    d[1] = 1;
    initliazeDFS(1);
    clearQueries(1);
    assignDFS(1);

    int lPtr = 1;
    int ansL = 0, ansR = INF;
    for (int rPtr = 1 ; rPtr <= n ; ++rPtr)
    {
        addNode(rPtr);
        bool shouldDec = false;
        while (currCnt == cntAdequate) // ако lPtr = rPtr + 1, ще прекъсне
        {
            shouldDec = true;
            removeNode(lPtr++);
        }
        
        // lPtr ще е първия момент, в който не може
        if (shouldDec) addNode(--lPtr);

        if (currCnt == cntAdequate && ansR - ansL + 1 > rPtr - lPtr + 1)
        {
            ansL = lPtr;
            ansR = rPtr;
        }
    }

    std::cout << ansL << ' ' << ansR << '\n';
}

void input()
{
    int p;
    std::cin >> n;
    for (int i = 2 ; i <= n ; ++i)
    {
        std::cin >> p;
        g[p].push_back(i);
    }

    std::cin >> q;
    for (int i = 1 ; i <= q ; ++i)
    {
        int u, k;
        std::cin >> u >> k;
        queries[u].emplace_back(k, i);
    }
}

void fastIOI()
{
    std::ios_base :: sync_with_stdio(0);
    std::cout.tie(nullptr);
    std::cin.tie(nullptr);
}

int main()
{
    fastIOI();
    input();
    solve();

    return 0;
}"
jYVhXrQS,Nigerian scammers [27-5-1/2023],bombaires,HTML,Saturday 27th of May 2023 03:22:54 AM CDT,"<a href=""mailto:paulallean@yahoo.com"">paulallean@yahoo.com</a>
<a href=""mailto:internationalpolcommand@gmail.com"">internationalpolcommand@gmail.com</a>
<a href=""mailto:internationalpolcommand+18981@gmail.com"">internationalpolcommand+18981@gmail.com</a>
<a href=""mailto:internationalpolcommand+9427@gmail.com"">internationalpolcommand+9427@gmail.com</a>
<a href=""mailto:internationalpolcommand+20837@gmail.com"">internationalpolcommand+20837@gmail.com</a>
<a href=""mailto:internationalpolcommand+2988@gmail.com"">internationalpolcommand+2988@gmail.com</a>
<a href=""mailto:internationalpolcommand+24858@gmail.com"">internationalpolcommand+24858@gmail.com</a>
<a href=""mailto:internationalpolcommand+7308@gmail.com"">internationalpolcommand+7308@gmail.com</a>
<a href=""mailto:internationalpolcommand+18010@gmail.com"">internationalpolcommand+18010@gmail.com</a>
<a href=""mailto:internationalpolcommand+28979@gmail.com"">internationalpolcommand+28979@gmail.com</a>
<a href=""mailto:internationalpolcommand+26396@gmail.com"">internationalpolcommand+26396@gmail.com</a>
<a href=""mailto:internationalpolcommand+26059@gmail.com"">internationalpolcommand+26059@gmail.com</a>
<a href=""mailto:internationalpolcommand+3545@gmail.com"">internationalpolcommand+3545@gmail.com</a>
<a href=""mailto:internationalpolcommand+16219@gmail.com"">internationalpolcommand+16219@gmail.com</a>
<a href=""mailto:internationalpolcommand+8501@gmail.com"">internationalpolcommand+8501@gmail.com</a>
<a href=""mailto:internationalpolcommand+1998@gmail.com"">internationalpolcommand+1998@gmail.com</a>
<a href=""mailto:internationalpolcommand+6085@gmail.com"">internationalpolcommand+6085@gmail.com</a>
<a href=""mailto:internationalpolcommand+16108@gmail.com"">internationalpolcommand+16108@gmail.com</a>
<a href=""mailto:internationalpolcommand+16120@gmail.com"">internationalpolcommand+16120@gmail.com</a>
<a href=""mailto:internationalpolcommand+13651@gmail.com"">internationalpolcommand+13651@gmail.com</a>
<a href=""mailto:internationalpolcommand+23026@gmail.com"">internationalpolcommand+23026@gmail.com</a>
<a href=""mailto:internationalpolcommand+29769@gmail.com"">internationalpolcommand+29769@gmail.com</a>
<a href=""mailto:internationalpolcommand+28986@gmail.com"">internationalpolcommand+28986@gmail.com</a>
<a href=""mailto:internationalpolcommand+16464@gmail.com"">internationalpolcommand+16464@gmail.com</a>
<a href=""mailto:internationalpolcommand+21307@gmail.com"">internationalpolcommand+21307@gmail.com</a>
<a href=""mailto:internationalpolcommand+9615@gmail.com"">internationalpolcommand+9615@gmail.com</a>
<a href=""mailto:internationalpolcommand+23301@gmail.com"">internationalpolcommand+23301@gmail.com</a>
<a href=""mailto:internationalpolcommand+18599@gmail.com"">internationalpolcommand+18599@gmail.com</a>
<a href=""mailto:internationalpolcommand+23854@gmail.com"">internationalpolcommand+23854@gmail.com</a>
<a href=""mailto:internationalpolcommand+10449@gmail.com"">internationalpolcommand+10449@gmail.com</a>
<a href=""mailto:internationalpolcommand+29818@gmail.com"">internationalpolcommand+29818@gmail.com</a>
<a href=""mailto:internationalpolcommand+5907@gmail.com"">internationalpolcommand+5907@gmail.com</a>
<a href=""mailto:internationalpolcommand+30321@gmail.com"">internationalpolcommand+30321@gmail.com</a>
<a href=""mailto:internationalpolcommand+282@gmail.com"">internationalpolcommand+282@gmail.com</a>
<a href=""mailto:internationalpolcommand+14596@gmail.com"">internationalpolcommand+14596@gmail.com</a>
<a href=""mailto:internationalpolcommand+31126@gmail.com"">internationalpolcommand+31126@gmail.com</a>
<a href=""mailto:internationalpolcommand+2403@gmail.com"">internationalpolcommand+2403@gmail.com</a>
<a href=""mailto:internationalpolcommand+14082@gmail.com"">internationalpolcommand+14082@gmail.com</a>
<a href=""mailto:internationalpolcommand+29244@gmail.com"">internationalpolcommand+29244@gmail.com</a>
<a href=""mailto:internationalpolcommand+11324@gmail.com"">internationalpolcommand+11324@gmail.com</a>
<a href=""mailto:internationalpolcommand+9561@gmail.com"">internationalpolcommand+9561@gmail.com</a>
<a href=""mailto:internationalpolcommand+20156@gmail.com"">internationalpolcommand+20156@gmail.com</a>
<a href=""mailto:internationalpolcommand+27008@gmail.com"">internationalpolcommand+27008@gmail.com</a>
<a href=""mailto:internationalpolcommand+9417@gmail.com"">internationalpolcommand+9417@gmail.com</a>
<a href=""mailto:internationalpolcommand+5041@gmail.com"">internationalpolcommand+5041@gmail.com</a>
<a href=""mailto:internationalpolcommand+24065@gmail.com"">internationalpolcommand+24065@gmail.com</a>
<a href=""mailto:internationalpolcommand+29581@gmail.com"">internationalpolcommand+29581@gmail.com</a>
<a href=""mailto:internationalpolcommand+24110@gmail.com"">internationalpolcommand+24110@gmail.com</a>
<a href=""mailto:internationalpolcommand+13318@gmail.com"">internationalpolcommand+13318@gmail.com</a>
<a href=""mailto:internationalpolcommand+15489@gmail.com"">internationalpolcommand+15489@gmail.com</a>
<a href=""mailto:internationalpolcommand+6363@gmail.com"">internationalpolcommand+6363@gmail.com</a>
<a href=""mailto:internationalpolcommand+2669@gmail.com"">internationalpolcommand+2669@gmail.com</a>
<a href=""mailto:internationalpolcommand+19464@gmail.com"">internationalpolcommand+19464@gmail.com</a>
<a href=""mailto:internationalpolcommand+15417@gmail.com"">internationalpolcommand+15417@gmail.com</a>
<a href=""mailto:internationalpolcommand+14450@gmail.com"">internationalpolcommand+14450@gmail.com</a>
<a href=""mailto:internationalpolcommand+12198@gmail.com"">internationalpolcommand+12198@gmail.com</a>
<a href=""mailto:internationalpolcommand+5916@gmail.com"">internationalpolcommand+5916@gmail.com</a>
<a href=""mailto:internationalpolcommand+2492@gmail.com"">internationalpolcommand+2492@gmail.com</a>
<a href=""mailto:internationalpolcommand+17133@gmail.com"">internationalpolcommand+17133@gmail.com</a>
<a href=""mailto:internationalpolcommand+23016@gmail.com"">internationalpolcommand+23016@gmail.com</a>
<a href=""mailto:internationalpolcommand+11144@gmail.com"">internationalpolcommand+11144@gmail.com</a>
<a href=""mailto:internationalpolcommand+29520@gmail.com"">internationalpolcommand+29520@gmail.com</a>
<a href=""mailto:internationalpolcommand+8976@gmail.com"">internationalpolcommand+8976@gmail.com</a>
<a href=""mailto:internationalpolcommand+28040@gmail.com"">internationalpolcommand+28040@gmail.com</a>
<a href=""mailto:internationalpolcommand+1597@gmail.com"">internationalpolcommand+1597@gmail.com</a>
<a href=""mailto:internationalpolcommand+14270@gmail.com"">internationalpolcommand+14270@gmail.com</a>
<a href=""mailto:internationalpolcommand+29728@gmail.com"">internationalpolcommand+29728@gmail.com</a>
<a href=""mailto:internationalpolcommand+11234@gmail.com"">internationalpolcommand+11234@gmail.com</a>
<a href=""mailto:internationalpolcommand+15702@gmail.com"">internationalpolcommand+15702@gmail.com</a>
<a href=""mailto:internationalpolcommand+24638@gmail.com"">internationalpolcommand+24638@gmail.com</a>
<a href=""mailto:internationalpolcommand+466@gmail.com"">internationalpolcommand+466@gmail.com</a>
<a href=""mailto:internationalpolcommand+7318@gmail.com"">internationalpolcommand+7318@gmail.com</a>
<a href=""mailto:internationalpolcommand+19624@gmail.com"">internationalpolcommand+19624@gmail.com</a>
<a href=""mailto:internationalpolcommand+1540@gmail.com"">internationalpolcommand+1540@gmail.com</a>
<a href=""mailto:internationalpolcommand+11790@gmail.com"">internationalpolcommand+11790@gmail.com</a>
<a href=""mailto:internationalpolcommand+12914@gmail.com"">internationalpolcommand+12914@gmail.com</a>
<a href=""mailto:internationalpolcommand+32483@gmail.com"">internationalpolcommand+32483@gmail.com</a>
<a href=""mailto:internationalpolcommand+14234@gmail.com"">internationalpolcommand+14234@gmail.com</a>
<a href=""mailto:internationalpolcommand+6863@gmail.com"">internationalpolcommand+6863@gmail.com</a>
<a href=""mailto:internationalpolcommand+18409@gmail.com"">internationalpolcommand+18409@gmail.com</a>
<a href=""mailto:internationalpolcommand+24352@gmail.com"">internationalpolcommand+24352@gmail.com</a>
<a href=""mailto:internationalpolcommand+30743@gmail.com"">internationalpolcommand+30743@gmail.com</a>
<a href=""mailto:internationalpolcommand+11943@gmail.com"">internationalpolcommand+11943@gmail.com</a>
<a href=""mailto:internationalpolcommand+9891@gmail.com"">internationalpolcommand+9891@gmail.com</a>
<a href=""mailto:internationalpolcommand+12520@gmail.com"">internationalpolcommand+12520@gmail.com</a>
<a href=""mailto:internationalpolcommand+9682@gmail.com"">internationalpolcommand+9682@gmail.com</a>
<a href=""mailto:internationalpolcommand+22716@gmail.com"">internationalpolcommand+22716@gmail.com</a>
<a href=""mailto:internationalpolcommand+7271@gmail.com"">internationalpolcommand+7271@gmail.com</a>
<a href=""mailto:internationalpolcommand+32537@gmail.com"">internationalpolcommand+32537@gmail.com</a>
<a href=""mailto:internationalpolcommand+25352@gmail.com"">internationalpolcommand+25352@gmail.com</a>
<a href=""mailto:internationalpolcommand+18607@gmail.com"">internationalpolcommand+18607@gmail.com</a>
<a href=""mailto:internationalpolcommand+6078@gmail.com"">internationalpolcommand+6078@gmail.com</a>
<a href=""mailto:internationalpolcommand+5681@gmail.com"">internationalpolcommand+5681@gmail.com</a>
<a href=""mailto:internationalpolcommand+20764@gmail.com"">internationalpolcommand+20764@gmail.com</a>
<a href=""mailto:internationalpolcommand+2177@gmail.com"">internationalpolcommand+2177@gmail.com</a>
<a href=""mailto:internationalpolcommand+23625@gmail.com"">internationalpolcommand+23625@gmail.com</a>
<a href=""mailto:internationalpolcommand+8639@gmail.com"">internationalpolcommand+8639@gmail.com</a>
<a href=""mailto:internationalpolcommand+14650@gmail.com"">internationalpolcommand+14650@gmail.com</a>
<a href=""mailto:internationalpolcommand+31854@gmail.com"">internationalpolcommand+31854@gmail.com</a>
<a href=""mailto:internationalpolcommand+21602@gmail.com"">internationalpolcommand+21602@gmail.com</a>
<a href=""mailto:internationalpolcommand+14787@gmail.com"">internationalpolcommand+14787@gmail.com</a>
<a href=""mailto:internationalpolcommand+28952@gmail.com"">internationalpolcommand+28952@gmail.com</a>
<a href=""mailto:smithdean138@gmail.com"">smithdean138@gmail.com</a>
<a href=""mailto:smithd.e.a.n1.38@gmail.com"">smithd.e.a.n1.38@gmail.com</a>
<a href=""mailto:s.mi.t.h.dean1.3.8@gmail.com"">s.mi.t.h.dean1.3.8@gmail.com</a>
<a href=""mailto:sm.ithde.a.n.138@gmail.com"">sm.ithde.a.n.138@gmail.com</a>
<a href=""mailto:s.m.i.t.h.d.ea.n.1.3.8@gmail.com"">s.m.i.t.h.d.ea.n.1.3.8@gmail.com</a>
<a href=""mailto:s.mit.h.de.an1.38@gmail.com"">s.mit.h.de.an1.38@gmail.com</a>
<a href=""mailto:smi.t.h.d.e.an1.3.8@gmail.com"">smi.t.h.d.e.an1.3.8@gmail.com</a>
<a href=""mailto:s.mi.t.hdean.1.38@gmail.com"">s.mi.t.hdean.1.38@gmail.com</a>
<a href=""mailto:s.m.i.t.hd.ean.1.3.8@gmail.com"">s.m.i.t.hd.ean.1.3.8@gmail.com</a>
<a href=""mailto:smi.t.hdean.1.3.8@gmail.com"">smi.t.hdean.1.3.8@gmail.com</a>
<a href=""mailto:s.mi.thd.e.an.1.38@gmail.com"">s.mi.thd.e.an.1.38@gmail.com</a>
<a href=""mailto:s.mi.thdea.n1.38@gmail.com"">s.mi.thdea.n1.38@gmail.com</a>
<a href=""mailto:s.m.i.t.hd.e.an1.3.8@gmail.com"">s.m.i.t.hd.e.an1.3.8@gmail.com</a>
<a href=""mailto:s.m.it.hde.a.n1.38@gmail.com"">s.m.it.hde.a.n1.38@gmail.com</a>
<a href=""mailto:s.m.ithdea.n.13.8@gmail.com"">s.m.ithdea.n.13.8@gmail.com</a>
<a href=""mailto:smi.t.h.d.e.a.n1.38@gmail.com"">smi.t.h.d.e.a.n1.38@gmail.com</a>
<a href=""mailto:smit.hd.e.a.n138@gmail.com"">smit.hd.e.a.n138@gmail.com</a>
<a href=""mailto:s.mi.t.h.d.e.an13.8@gmail.com"">s.mi.t.h.d.e.an13.8@gmail.com</a>
<a href=""mailto:sm.ithdea.n138@gmail.com"">sm.ithdea.n138@gmail.com</a>
<a href=""mailto:sm.it.hd.e.an.1.3.8@gmail.com"">sm.it.hd.e.an.1.3.8@gmail.com</a>
<a href=""mailto:smi.thd.ean13.8@gmail.com"">smi.thd.ean13.8@gmail.com</a>
<a href=""mailto:smi.thde.a.n.1.38@gmail.com"">smi.thde.a.n.1.38@gmail.com</a>
<a href=""mailto:s.m.it.h.dean.13.8@gmail.com"">s.m.it.h.dean.13.8@gmail.com</a>
<a href=""mailto:s.mi.t.h.de.an13.8@gmail.com"">s.mi.t.h.de.an13.8@gmail.com</a>
<a href=""mailto:s.m.i.t.h.d.e.an1.3.8@gmail.com"">s.m.i.t.h.d.e.an1.3.8@gmail.com</a>
<a href=""mailto:smith.d.ea.n1.3.8@gmail.com"">smith.d.ea.n1.3.8@gmail.com</a>
<a href=""mailto:smithd.ean1.3.8@gmail.com"">smithd.ean1.3.8@gmail.com</a>
<a href=""mailto:smi.t.hd.ean13.8@gmail.com"">smi.t.hd.ean13.8@gmail.com</a>
<a href=""mailto:s.mi.th.de.a.n13.8@gmail.com"">s.mi.th.de.a.n13.8@gmail.com</a>
<a href=""mailto:smithdean138@gmail.com"">smithdean138@gmail.com</a>
<a href=""mailto:s.mi.thd.ea.n1.38@gmail.com"">s.mi.thd.ea.n1.38@gmail.com</a>
<a href=""mailto:sm.i.t.h.de.an1.38@gmail.com"">sm.i.t.h.de.an1.38@gmail.com</a>
<a href=""mailto:s.m.i.thde.a.n.138@gmail.com"">s.m.i.thde.a.n.138@gmail.com</a>
<a href=""mailto:s.mit.h.d.e.a.n.138@gmail.com"">s.mit.h.d.e.a.n.138@gmail.com</a>
<a href=""mailto:s.mi.t.hd.ea.n13.8@gmail.com"">s.mi.t.hd.ea.n13.8@gmail.com</a>
<a href=""mailto:sm.i.th.de.a.n138@gmail.com"">sm.i.th.de.a.n138@gmail.com</a>
<a href=""mailto:s.mi.t.hdean138@gmail.com"">s.mi.t.hdean138@gmail.com</a>
<a href=""mailto:s.mit.hd.ean.138@gmail.com"">s.mit.hd.ean.138@gmail.com</a>
<a href=""mailto:sm.i.thd.e.a.n1.38@gmail.com"">sm.i.thd.e.a.n1.38@gmail.com</a>
<a href=""mailto:s.m.it.h.d.ea.n138@gmail.com"">s.m.it.h.d.ea.n138@gmail.com</a>
<a href=""mailto:sm.it.h.d.e.a.n.1.3.8@gmail.com"">sm.it.h.d.e.a.n.1.3.8@gmail.com</a>
<a href=""mailto:sm.ithde.an13.8@gmail.com"">sm.ithde.an13.8@gmail.com</a>
<a href=""mailto:s.mi.thdean1.3.8@gmail.com"">s.mi.thdean1.3.8@gmail.com</a>
<a href=""mailto:smi.th.d.ean.1.38@gmail.com"">smi.th.d.ean.1.38@gmail.com</a>
<a href=""mailto:sm.i.thd.ea.n.1.38@gmail.com"">sm.i.thd.ea.n.1.38@gmail.com</a>
<a href=""mailto:s.m.ithd.e.a.n138@gmail.com"">s.m.ithd.e.a.n138@gmail.com</a>
<a href=""mailto:smit.hdean13.8@gmail.com"">smit.hdean13.8@gmail.com</a>
<a href=""mailto:s.mit.hd.e.an.1.38@gmail.com"">s.mit.hd.e.an.1.38@gmail.com</a>
<a href=""mailto:s.m.it.hd.ean.138@gmail.com"">s.m.it.hd.ean.138@gmail.com</a>
<a href=""mailto:smithdean1.38@gmail.com"">smithdean1.38@gmail.com</a>
<a href=""mailto:s.mit.hde.an.1.3.8@gmail.com"">s.mit.hde.an.1.3.8@gmail.com</a>
<a href=""mailto:s.m.i.t.h.de.an138@gmail.com"">s.m.i.t.h.de.an138@gmail.com</a>
<a href=""mailto:smi.thde.an1.3.8@gmail.com"">smi.thde.an1.3.8@gmail.com</a>
<a href=""mailto:sm.i.thd.e.an.138@gmail.com"">sm.i.thd.e.an.138@gmail.com</a>
<a href=""mailto:s.m.i.thde.an1.3.8@gmail.com"">s.m.i.thde.an1.3.8@gmail.com</a>
<a href=""mailto:sm.it.h.d.e.an138@gmail.com"">sm.it.h.d.e.an138@gmail.com</a>
<a href=""mailto:s.m.i.t.hd.ean1.38@gmail.com"">s.m.i.t.hd.ean1.38@gmail.com</a>
<a href=""mailto:s.m.it.h.d.e.a.n.13.8@gmail.com"">s.m.it.h.d.e.a.n.13.8@gmail.com</a>
<a href=""mailto:sm.i.t.hdean1.3.8@gmail.com"">sm.i.t.hdean1.3.8@gmail.com</a>
<a href=""mailto:smith.dean138@gmail.com"">smith.dean138@gmail.com</a>
<a href=""mailto:s.mi.t.hdea.n.13.8@gmail.com"">s.mi.t.hdea.n.13.8@gmail.com</a>
<a href=""mailto:sm.i.t.hd.ean.1.3.8@gmail.com"">sm.i.t.hd.ean.1.3.8@gmail.com</a>
<a href=""mailto:s.m.i.th.d.ean.13.8@gmail.com"">s.m.i.th.d.ean.13.8@gmail.com</a>
<a href=""mailto:s.m.i.t.hdea.n13.8@gmail.com"">s.m.i.t.hdea.n13.8@gmail.com</a>
<a href=""mailto:s.m.i.t.hdean1.3.8@gmail.com"">s.m.i.t.hdean1.3.8@gmail.com</a>
<a href=""mailto:s.mit.hd.ean.13.8@gmail.com"">s.mit.hd.ean.13.8@gmail.com</a>
<a href=""mailto:smit.h.d.ea.n1.38@gmail.com"">smit.h.d.ea.n1.38@gmail.com</a>
<a href=""mailto:s.mi.thde.an.138@gmail.com"">s.mi.thde.an.138@gmail.com</a>
<a href=""mailto:sm.i.t.hd.ea.n1.3.8@gmail.com"">sm.i.t.hd.ea.n1.3.8@gmail.com</a>
<a href=""mailto:smi.th.d.e.a.n1.3.8@gmail.com"">smi.th.d.e.a.n1.3.8@gmail.com</a>
<a href=""mailto:smit.h.d.e.a.n.138@gmail.com"">smit.h.d.e.a.n.138@gmail.com</a>
<a href=""mailto:sm.it.h.d.ean.1.3.8@gmail.com"">sm.it.h.d.ean.1.3.8@gmail.com</a>
<a href=""mailto:smi.t.hd.e.an.1.38@gmail.com"">smi.t.hd.e.an.1.38@gmail.com</a>
<a href=""mailto:sm.it.hde.an138@gmail.com"">sm.it.hde.an138@gmail.com</a>
<a href=""mailto:s.m.ith.d.e.a.n1.38@gmail.com"">s.m.ith.d.e.a.n1.38@gmail.com</a>
<a href=""mailto:s.m.i.t.h.d.e.a.n138@gmail.com"">s.m.i.t.h.d.e.a.n138@gmail.com</a>
<a href=""mailto:s.mith.d.e.an13.8@gmail.com"">s.mith.d.e.an13.8@gmail.com</a>
<a href=""mailto:s.m.i.t.hd.ean13.8@gmail.com"">s.m.i.t.hd.ean13.8@gmail.com</a>
<a href=""mailto:sm.i.th.dea.n.138@gmail.com"">sm.i.th.dea.n.138@gmail.com</a>
<a href=""mailto:s.m.i.t.hde.an.138@gmail.com"">s.m.i.t.hde.an.138@gmail.com</a>
<a href=""mailto:s.mith.d.ea.n.1.38@gmail.com"">s.mith.d.ea.n.1.38@gmail.com</a>
<a href=""mailto:smith.d.e.an.138@gmail.com"">smith.d.e.an.138@gmail.com</a>
<a href=""mailto:s.mith.d.ea.n13.8@gmail.com"">s.mith.d.ea.n13.8@gmail.com</a>
<a href=""mailto:s.mi.th.dea.n.13.8@gmail.com"">s.mi.th.dea.n.13.8@gmail.com</a>
<a href=""mailto:sm.i.thdea.n.138@gmail.com"">sm.i.thdea.n.138@gmail.com</a>
<a href=""mailto:smith.dea.n.13.8@gmail.com"">smith.dea.n.13.8@gmail.com</a>
<a href=""mailto:sm.i.th.dea.n.1.3.8@gmail.com"">sm.i.th.dea.n.1.3.8@gmail.com</a>
<a href=""mailto:s.m.ithd.ean138@gmail.com"">s.m.ithd.ean138@gmail.com</a>
<a href=""mailto:smit.h.de.an.1.38@gmail.com"">smit.h.de.an.1.38@gmail.com</a>
<a href=""mailto:s.m.it.h.de.a.n138@gmail.com"">s.m.it.h.de.a.n138@gmail.com</a>
<a href=""mailto:s.m.i.th.de.a.n13.8@gmail.com"">s.m.i.th.de.a.n13.8@gmail.com</a>
<a href=""mailto:sm.ithd.e.a.n1.38@gmail.com"">sm.ithd.e.a.n1.38@gmail.com</a>
<a href=""mailto:sm.ithdean.1.3.8@gmail.com"">sm.ithdean.1.3.8@gmail.com</a>
<a href=""mailto:sm.i.t.hde.an.1.3.8@gmail.com"">sm.i.t.hde.an.1.3.8@gmail.com</a>
<a href=""mailto:sm.i.thdean.13.8@gmail.com"">sm.i.thdean.13.8@gmail.com</a>
<a href=""mailto:smith.d.e.an138@gmail.com"">smith.d.e.an138@gmail.com</a>
<a href=""mailto:smi.t.hde.a.n1.38@gmail.com"">smi.t.hde.a.n1.38@gmail.com</a>
<a href=""mailto:smi.t.h.de.an.1.3.8@gmail.com"">smi.t.h.de.an.1.3.8@gmail.com</a>
<a href=""mailto:s.m.it.hde.an13.8@gmail.com"">s.m.it.hde.an13.8@gmail.com</a>
<a href=""mailto:smit.hdea.n.1.3.8@gmail.com"">smit.hdea.n.1.3.8@gmail.com</a>
<a href=""mailto:sm.i.th.d.e.an.1.3.8@gmail.com"">sm.i.th.d.e.an.1.3.8@gmail.com</a>
<a href=""mailto:smi.t.hd.e.an1.3.8@gmail.com"">smi.t.hd.e.an1.3.8@gmail.com</a>
<a href=""mailto:s.mi.th.d.e.an.1.3.8@gmail.com"">s.mi.th.d.e.an.1.3.8@gmail.com</a>
<a href=""mailto:smi.t.hdean1.38@gmail.com"">smi.t.hdean1.38@gmail.com</a>
<a href=""mailto:sm.it.hd.e.an.138@gmail.com"">sm.it.hd.e.an.138@gmail.com</a>
<a href=""mailto:smit.h.d.e.a.n.13.8@gmail.com"">smit.h.d.e.a.n.13.8@gmail.com</a>
<a href=""mailto:s.mi.t.hde.a.n13.8@gmail.com"">s.mi.t.hde.a.n13.8@gmail.com</a>
<a href=""mailto:sm.it.hd.ean.1.38@gmail.com"">sm.it.hd.ean.1.38@gmail.com</a>
<a href=""mailto:sm.i.t.h.dean1.3.8@gmail.com"">sm.i.t.h.dean1.3.8@gmail.com</a>
<a href=""mailto:sm.i.th.de.an.138@gmail.com"">sm.i.th.de.an.138@gmail.com</a>
<a href=""mailto:sm.it.h.de.a.n.138@gmail.com"">sm.it.h.de.a.n.138@gmail.com</a>
<a href=""mailto:sm.i.t.h.dea.n1.3.8@gmail.com"">sm.i.t.h.dea.n1.3.8@gmail.com</a>
<a href=""mailto:s.mi.th.d.e.a.n13.8@gmail.com"">s.mi.th.d.e.a.n13.8@gmail.com</a>
<a href=""mailto:s.m.i.t.h.d.ea.n.138@gmail.com"">s.m.i.t.h.d.ea.n.138@gmail.com</a>
<a href=""mailto:smi.t.hdean.1.38@gmail.com"">smi.t.hdean.1.38@gmail.com</a>
<a href=""mailto:s.mit.h.d.e.a.n1.38@gmail.com"">s.mit.h.d.e.a.n1.38@gmail.com</a>
<a href=""mailto:s.m.i.th.d.ea.n.1.38@gmail.com"">s.m.i.th.d.ea.n.1.38@gmail.com</a>
<a href=""mailto:sm.ithde.an.138@gmail.com"">sm.ithde.an.138@gmail.com</a>
<a href=""mailto:s.m.it.h.de.a.n.13.8@gmail.com"">s.m.it.h.de.a.n.13.8@gmail.com</a>
<a href=""mailto:s.mith.dean.138@gmail.com"">s.mith.dean.138@gmail.com</a>
<a href=""mailto:smit.hdean138@gmail.com"">smit.hdean138@gmail.com</a>
<a href=""mailto:s.m.it.hdea.n.1.38@gmail.com"">s.m.it.hdea.n.1.38@gmail.com</a>
<a href=""mailto:s.mi.th.d.ean.138@gmail.com"">s.mi.th.d.ean.138@gmail.com</a>
<a href=""mailto:s.mi.t.hd.ea.n.138@gmail.com"">s.mi.t.hd.ea.n.138@gmail.com</a>
<a href=""mailto:sm.i.thdea.n.1.3.8@gmail.com"">sm.i.thdea.n.1.3.8@gmail.com</a>
<a href=""mailto:s.m.i.t.h.dean1.3.8@gmail.com"">s.m.i.t.h.dean1.3.8@gmail.com</a>
<a href=""mailto:sm.i.t.h.d.e.a.n1.38@gmail.com"">sm.i.t.h.d.e.a.n1.38@gmail.com</a>
<a href=""mailto:s.m.i.t.h.dean1.38@gmail.com"">s.m.i.t.h.dean1.38@gmail.com</a>
<a href=""mailto:s.m.i.th.d.e.a.n13.8@gmail.com"">s.m.i.th.d.e.a.n13.8@gmail.com</a>
<a href=""mailto:smi.t.hd.e.an13.8@gmail.com"">smi.t.hd.e.an13.8@gmail.com</a>
<a href=""mailto:s.mit.h.de.a.n1.3.8@gmail.com"">s.mit.h.de.a.n1.3.8@gmail.com</a>
<a href=""mailto:s.mi.thd.ean1.38@gmail.com"">s.mi.thd.ean1.38@gmail.com</a>
<a href=""mailto:smit.h.dean1.3.8@gmail.com"">smit.h.dean1.3.8@gmail.com</a>
<a href=""mailto:s.m.i.thd.e.an.1.3.8@gmail.com"">s.m.i.thd.e.an.1.3.8@gmail.com</a>
<a href=""mailto:s.mi.t.hd.ean.1.3.8@gmail.com"">s.mi.t.hd.ean.1.3.8@gmail.com</a>
<a href=""mailto:smith.d.e.a.n.1.38@gmail.com"">smith.d.e.a.n.1.38@gmail.com</a>
<a href=""mailto:smithde.a.n1.38@gmail.com"">smithde.a.n1.38@gmail.com</a>
<a href=""mailto:smi.thd.ean.138@gmail.com"">smi.thd.ean.138@gmail.com</a>
<a href=""mailto:s.mith.dean1.3.8@gmail.com"">s.mith.dean1.3.8@gmail.com</a>
<a href=""mailto:s.m.ith.de.a.n.1.3.8@gmail.com"">s.m.ith.de.a.n.1.3.8@gmail.com</a>
<a href=""mailto:smi.th.d.ean1.3.8@gmail.com"">smi.th.d.ean1.3.8@gmail.com</a>
<a href=""mailto:s.mithdean.1.3.8@gmail.com"">s.mithdean.1.3.8@gmail.com</a>
<a href=""mailto:s.mit.hd.e.a.n138@gmail.com"">s.mit.hd.e.a.n138@gmail.com</a>
<a href=""mailto:s.m.i.thdean1.3.8@gmail.com"">s.m.i.thdean1.3.8@gmail.com</a>
<a href=""mailto:sm.ith.d.ea.n.138@gmail.com"">sm.ith.d.ea.n.138@gmail.com</a>
<a href=""mailto:smi.th.d.e.a.n13.8@gmail.com"">smi.th.d.e.a.n13.8@gmail.com</a>
<a href=""mailto:s.m.ith.d.ean.1.3.8@gmail.com"">s.m.ith.d.ean.1.3.8@gmail.com</a>
<a href=""mailto:s.mi.thdean138@gmail.com"">s.mi.thdean138@gmail.com</a>
<a href=""mailto:smit.hd.e.an.1.3.8@gmail.com"">smit.hd.e.an.1.3.8@gmail.com</a>
<a href=""mailto:s.mi.t.h.de.a.n1.38@gmail.com"">s.mi.t.h.de.a.n1.38@gmail.com</a>
<a href=""mailto:s.mit.hd.ean.1.38@gmail.com"">s.mit.hd.ean.1.38@gmail.com</a>
<a href=""mailto:sm.i.th.dean.1.38@gmail.com"">sm.i.th.dean.1.38@gmail.com</a>
<a href=""mailto:s.m.ith.d.ean.13.8@gmail.com"">s.m.ith.d.ean.13.8@gmail.com</a>
<a href=""mailto:s.m.i.thd.e.an1.3.8@gmail.com"">s.m.i.thd.e.an1.3.8@gmail.com</a>
<a href=""mailto:s.m.ith.de.an1.38@gmail.com"">s.m.ith.de.an1.38@gmail.com</a>
<a href=""mailto:sm.it.hde.a.n1.3.8@gmail.com"">sm.it.hde.a.n1.3.8@gmail.com</a>
<a href=""mailto:s.mi.thde.a.n1.38@gmail.com"">s.mi.thde.a.n1.38@gmail.com</a>
<a href=""mailto:sm.it.h.d.e.an.13.8@gmail.com"">sm.it.h.d.e.an.13.8@gmail.com</a>
<a href=""mailto:smit.h.de.an.138@gmail.com"">smit.h.de.an.138@gmail.com</a>
<a href=""mailto:s.m.it.hd.ean13.8@gmail.com"">s.m.it.hd.ean13.8@gmail.com</a>
<a href=""mailto:s.mi.thd.ea.n.13.8@gmail.com"">s.mi.thd.ea.n.13.8@gmail.com</a>
<a href=""mailto:sm.it.h.de.a.n1.3.8@gmail.com"">sm.it.h.de.a.n1.3.8@gmail.com</a>
<a href=""mailto:s.mi.t.h.d.e.an138@gmail.com"">s.mi.t.h.d.e.an138@gmail.com</a>
<a href=""mailto:sm.it.h.d.e.an.1.38@gmail.com"">sm.it.h.d.e.an.1.38@gmail.com</a>
<a href=""mailto:sm.ithd.e.an13.8@gmail.com"">sm.ithd.e.an13.8@gmail.com</a>
<a href=""mailto:s.m.i.t.h.de.an13.8@gmail.com"">s.m.i.t.h.de.an13.8@gmail.com</a>
<a href=""mailto:sm.it.hde.a.n.138@gmail.com"">sm.it.hde.a.n.138@gmail.com</a>
<a href=""mailto:smithd.ean.13.8@gmail.com"">smithd.ean.13.8@gmail.com</a>
<a href=""mailto:s.m.it.h.d.e.an1.3.8@gmail.com"">s.m.it.h.d.e.an1.3.8@gmail.com</a>
<a href=""mailto:sm.ithd.ea.n.138@gmail.com"">sm.ithd.ea.n.138@gmail.com</a>
<a href=""mailto:sm.ith.d.e.an.1.38@gmail.com"">sm.ith.d.e.an.1.38@gmail.com</a>
<a href=""mailto:s.m.it.hde.an.1.38@gmail.com"">s.m.it.hde.an.1.38@gmail.com</a>
<a href=""mailto:s.m.i.th.de.a.n1.3.8@gmail.com"">s.m.i.th.de.a.n1.3.8@gmail.com</a>
<a href=""mailto:sm.ith.d.ean1.38@gmail.com"">sm.ith.d.ean1.38@gmail.com</a>
<a href=""mailto:s.mit.h.dean138@gmail.com"">s.mit.h.dean138@gmail.com</a>
<a href=""mailto:s.m.it.hde.a.n13.8@gmail.com"">s.m.it.hde.a.n13.8@gmail.com</a>
<a href=""mailto:smi.thde.a.n.138@gmail.com"">smi.thde.a.n.138@gmail.com</a>
<a href=""mailto:smi.t.h.dea.n13.8@gmail.com"">smi.t.h.dea.n13.8@gmail.com</a>
<a href=""mailto:sm.i.th.d.ea.n.1.3.8@gmail.com"">sm.i.th.d.ea.n.1.3.8@gmail.com</a>
<a href=""mailto:s.m.it.hd.e.an1.3.8@gmail.com"">s.m.it.hd.e.an1.3.8@gmail.com</a>
<a href=""mailto:smit.h.d.e.an13.8@gmail.com"">smit.h.d.e.an13.8@gmail.com</a>
<a href=""mailto:sm.i.t.h.de.an1.3.8@gmail.com"">sm.i.t.h.de.an1.3.8@gmail.com</a>
<a href=""mailto:s.mithde.an.13.8@gmail.com"">s.mithde.an.13.8@gmail.com</a>
<a href=""mailto:s.mit.h.de.an.1.3.8@gmail.com"">s.mit.h.de.an.1.3.8@gmail.com</a>
<a href=""mailto:smi.t.hdea.n13.8@gmail.com"">smi.t.hdea.n13.8@gmail.com</a>
<a href=""mailto:s.mi.th.de.an1.3.8@gmail.com"">s.mi.th.de.an1.3.8@gmail.com</a>
<a href=""mailto:s.m.i.t.h.d.e.an13.8@gmail.com"">s.m.i.t.h.d.e.an13.8@gmail.com</a>
<a href=""mailto:smi.t.hde.an.138@gmail.com"">smi.t.hde.an.138@gmail.com</a>
<a href=""mailto:s.mit.hd.e.an.1.3.8@gmail.com"">s.mit.hd.e.an.1.3.8@gmail.com</a>
<a href=""mailto:sm.it.hd.e.a.n.1.3.8@gmail.com"">sm.it.hd.e.a.n.1.3.8@gmail.com</a>
<a href=""mailto:s.mi.th.d.ean1.3.8@gmail.com"">s.mi.th.d.ean1.3.8@gmail.com</a>
<a href=""mailto:s.m.i.th.d.ean.1.3.8@gmail.com"">s.m.i.th.d.ean.1.3.8@gmail.com</a>
<a href=""mailto:s.m.it.hdean13.8@gmail.com"">s.m.it.hdean13.8@gmail.com</a>
<a href=""mailto:smi.thd.ean.1.3.8@gmail.com"">smi.thd.ean.1.3.8@gmail.com</a>
<a href=""mailto:sm.i.thd.ean.1.38@gmail.com"">sm.i.thd.ean.1.38@gmail.com</a>
<a href=""mailto:sm.i.t.hde.an138@gmail.com"">sm.i.t.hde.an138@gmail.com</a>
<a href=""mailto:s.mit.hdea.n1.38@gmail.com"">s.mit.hdea.n1.38@gmail.com</a>
<a href=""mailto:sm.i.t.hdean1.38@gmail.com"">sm.i.t.hdean1.38@gmail.com</a>
<a href=""mailto:s.mi.t.hd.e.a.n1.3.8@gmail.com"">s.mi.t.hd.e.a.n1.3.8@gmail.com</a>
<a href=""mailto:s.m.i.t.hde.an1.3.8@gmail.com"">s.m.i.t.hde.an1.3.8@gmail.com</a>
<a href=""mailto:ahosikede@gmail.com"">ahosikede@gmail.com</a>
<a href=""mailto:aho.s.i.k.ed.e@gmail.com"">aho.s.i.k.ed.e@gmail.com</a>
<a href=""mailto:a.h.o.si.kede@gmail.com"">a.h.o.si.kede@gmail.com</a>
<a href=""mailto:ahosik.e.de@gmail.com"">ahosik.e.de@gmail.com</a>
<a href=""mailto:a.hosi.ke.d.e@gmail.com"">a.hosi.ke.d.e@gmail.com</a>
<a href=""mailto:a.h.o.sikede@gmail.com"">a.h.o.sikede@gmail.com</a>
<a href=""mailto:a.h.o.si.k.ede@gmail.com"">a.h.o.si.k.ede@gmail.com</a>
<a href=""mailto:a.h.o.sike.de@gmail.com"">a.h.o.sike.de@gmail.com</a>
<a href=""mailto:aho.sike.d.e@gmail.com"">aho.sike.d.e@gmail.com</a>
<a href=""mailto:a.h.osi.ke.d.e@gmail.com"">a.h.osi.ke.d.e@gmail.com</a>
<a href=""mailto:ah.o.s.i.k.ed.e@gmail.com"">ah.o.s.i.k.ed.e@gmail.com</a>
<a href=""mailto:ah.o.siked.e@gmail.com"">ah.o.siked.e@gmail.com</a>
<a href=""mailto:ah.osike.de@gmail.com"">ah.osike.de@gmail.com</a>
<a href=""mailto:a.hosike.d.e@gmail.com"">a.hosike.d.e@gmail.com</a>
<a href=""mailto:a.h.o.s.i.ked.e@gmail.com"">a.h.o.s.i.ked.e@gmail.com</a>
<a href=""mailto:a.h.osik.ede@gmail.com"">a.h.osik.ede@gmail.com</a>
<a href=""mailto:a.h.osi.k.ed.e@gmail.com"">a.h.osi.k.ed.e@gmail.com</a>
<a href=""mailto:ahos.i.k.e.d.e@gmail.com"">ahos.i.k.e.d.e@gmail.com</a>
<a href=""mailto:aho.si.ke.de@gmail.com"">aho.si.ke.de@gmail.com</a>
<a href=""mailto:ah.o.s.i.k.e.de@gmail.com"">ah.o.s.i.k.e.de@gmail.com</a>
<a href=""mailto:ah.os.i.ke.de@gmail.com"">ah.os.i.ke.de@gmail.com</a>
<a href=""mailto:a.h.os.i.k.e.d.e@gmail.com"">a.h.os.i.k.e.d.e@gmail.com</a>
<a href=""mailto:ah.o.s.ik.e.de@gmail.com"">ah.o.s.ik.e.de@gmail.com</a>
<a href=""mailto:a.h.o.s.ik.ede@gmail.com"">a.h.o.s.ik.ede@gmail.com</a>
<a href=""mailto:a.h.osi.ked.e@gmail.com"">a.h.osi.ked.e@gmail.com</a>
<a href=""mailto:aho.s.iked.e@gmail.com"">aho.s.iked.e@gmail.com</a>
<a href=""mailto:a.ho.s.ike.d.e@gmail.com"">a.ho.s.ike.d.e@gmail.com</a>
<a href=""mailto:ah.o.s.ikede@gmail.com"">ah.o.s.ikede@gmail.com</a>
<a href=""mailto:ahos.i.ke.d.e@gmail.com"">ahos.i.ke.d.e@gmail.com</a>
<a href=""mailto:a.hosi.kede@gmail.com"">a.hosi.kede@gmail.com</a>
<a href=""mailto:ahos.i.ked.e@gmail.com"">ahos.i.ked.e@gmail.com</a>
<a href=""mailto:a.h.o.s.ike.d.e@gmail.com"">a.h.o.s.ike.d.e@gmail.com</a>
<a href=""mailto:ah.o.s.ike.de@gmail.com"">ah.o.s.ike.de@gmail.com</a>
<a href=""mailto:a.h.os.iked.e@gmail.com"">a.h.os.iked.e@gmail.com</a>
<a href=""mailto:ah.os.ik.ed.e@gmail.com"">ah.os.ik.ed.e@gmail.com</a>
<a href=""mailto:ah.os.i.k.e.de@gmail.com"">ah.os.i.k.e.de@gmail.com</a>
<a href=""mailto:a.h.o.s.i.ke.d.e@gmail.com"">a.h.o.s.i.ke.d.e@gmail.com</a>
<a href=""mailto:a.ho.s.i.k.e.d.e@gmail.com"">a.ho.s.i.k.e.d.e@gmail.com</a>
<a href=""mailto:ahos.ik.e.de@gmail.com"">ahos.ik.e.de@gmail.com</a>
<a href=""mailto:ah.o.sik.e.d.e@gmail.com"">ah.o.sik.e.d.e@gmail.com</a>
<a href=""mailto:a.h.o.si.k.e.de@gmail.com"">a.h.o.si.k.e.de@gmail.com</a>
<a href=""mailto:ah.os.i.ked.e@gmail.com"">ah.os.i.ked.e@gmail.com</a>
<a href=""mailto:ahosi.k.e.de@gmail.com"">ahosi.k.e.de@gmail.com</a>
<a href=""mailto:ah.o.s.iked.e@gmail.com"">ah.o.s.iked.e@gmail.com</a>
<a href=""mailto:ahosi.k.ed.e@gmail.com"">ahosi.k.ed.e@gmail.com</a>
<a href=""mailto:a.h.o.s.i.ke.de@gmail.com"">a.h.o.s.i.ke.de@gmail.com</a>
<a href=""mailto:aho.sikede@gmail.com"">aho.sikede@gmail.com</a>
<a href=""mailto:ahosi.ke.d.e@gmail.com"">ahosi.ke.d.e@gmail.com</a>
<a href=""mailto:a.h.o.si.k.ed.e@gmail.com"">a.h.o.si.k.ed.e@gmail.com</a>
<a href=""mailto:a.hos.i.k.e.d.e@gmail.com"">a.hos.i.k.e.d.e@gmail.com</a>
<a href=""mailto:ah.o.sikede@gmail.com"">ah.o.sikede@gmail.com</a>
<a href=""mailto:ahos.i.k.e.de@gmail.com"">ahos.i.k.e.de@gmail.com</a>
<a href=""mailto:ah.o.si.ke.d.e@gmail.com"">ah.o.si.ke.d.e@gmail.com</a>
<a href=""mailto:a.h.o.s.i.k.ede@gmail.com"">a.h.o.s.i.k.ede@gmail.com</a>
<a href=""mailto:ah.osike.d.e@gmail.com"">ah.osike.d.e@gmail.com</a>
<a href=""mailto:ahosike.d.e@gmail.com"">ahosike.d.e@gmail.com</a>
<a href=""mailto:a.h.o.s.i.k.e.d.e@gmail.com"">a.h.o.s.i.k.e.d.e@gmail.com</a>
<a href=""mailto:a.h.os.ikede@gmail.com"">a.h.os.ikede@gmail.com</a>
<a href=""mailto:a.hos.i.k.ede@gmail.com"">a.hos.i.k.ede@gmail.com</a>
<a href=""mailto:ah.osik.e.de@gmail.com"">ah.osik.e.de@gmail.com</a>
<a href=""mailto:a.h.o.sik.ede@gmail.com"">a.h.o.sik.ede@gmail.com</a>
<a href=""mailto:ah.osi.k.ed.e@gmail.com"">ah.osi.k.ed.e@gmail.com</a>
<a href=""mailto:aho.sike.de@gmail.com"">aho.sike.de@gmail.com</a>
<a href=""mailto:ah.o.s.ik.ed.e@gmail.com"">ah.o.s.ik.ed.e@gmail.com</a>
<a href=""mailto:ah.o.si.ke.de@gmail.com"">ah.o.si.ke.de@gmail.com</a>
<a href=""mailto:ah.os.i.k.ed.e@gmail.com"">ah.os.i.k.ed.e@gmail.com</a>
<a href=""mailto:a.h.os.ike.de@gmail.com"">a.h.os.ike.de@gmail.com</a>
<a href=""mailto:a.hosi.ked.e@gmail.com"">a.hosi.ked.e@gmail.com</a>
<a href=""mailto:ah.osiked.e@gmail.com"">ah.osiked.e@gmail.com</a>
<a href=""mailto:aho.s.i.kede@gmail.com"">aho.s.i.kede@gmail.com</a>
<a href=""mailto:a.ho.s.ikede@gmail.com"">a.ho.s.ikede@gmail.com</a>
<a href=""mailto:ah.os.ik.e.de@gmail.com"">ah.os.ik.e.de@gmail.com</a>
<a href=""mailto:a.h.o.sike.d.e@gmail.com"">a.h.o.sike.d.e@gmail.com</a>
<a href=""mailto:a.ho.sikede@gmail.com"">a.ho.sikede@gmail.com</a>
<a href=""mailto:ahos.ikede@gmail.com"">ahos.ikede@gmail.com</a>
<a href=""mailto:a.hos.i.kede@gmail.com"">a.hos.i.kede@gmail.com</a>
<a href=""mailto:ah.o.si.k.e.de@gmail.com"">ah.o.si.k.e.de@gmail.com</a>
<a href=""mailto:a.ho.s.iked.e@gmail.com"">a.ho.s.iked.e@gmail.com</a>
<a href=""mailto:a.hos.i.ke.d.e@gmail.com"">a.hos.i.ke.d.e@gmail.com</a>
<a href=""mailto:a.ho.s.ik.ed.e@gmail.com"">a.ho.s.ik.ed.e@gmail.com</a>
<a href=""mailto:ah.o.si.k.e.d.e@gmail.com"">ah.o.si.k.e.d.e@gmail.com</a>
<a href=""mailto:a.hosik.ede@gmail.com"">a.hosik.ede@gmail.com</a>
<a href=""mailto:ah.o.s.i.kede@gmail.com"">ah.o.s.i.kede@gmail.com</a>
<a href=""mailto:aho.s.i.ke.de@gmail.com"">aho.s.i.ke.de@gmail.com</a>
<a href=""mailto:ah.o.s.ike.d.e@gmail.com"">ah.o.s.ike.d.e@gmail.com</a>
<a href=""mailto:a.h.os.i.k.ede@gmail.com"">a.h.os.i.k.ede@gmail.com</a>
<a href=""mailto:a.ho.s.ik.ede@gmail.com"">a.ho.s.ik.ede@gmail.com</a>
<a href=""mailto:a.ho.sike.de@gmail.com"">a.ho.sike.de@gmail.com</a>
<a href=""mailto:a.h.o.s.i.k.ed.e@gmail.com"">a.h.o.s.i.k.ed.e@gmail.com</a>
<a href=""mailto:a.hosi.k.e.d.e@gmail.com"">a.hosi.k.e.d.e@gmail.com</a>
<a href=""mailto:a.h.o.siked.e@gmail.com"">a.h.o.siked.e@gmail.com</a>
<a href=""mailto:aho.s.ik.e.de@gmail.com"">aho.s.ik.e.de@gmail.com</a>
<a href=""mailto:ah.o.s.ik.e.d.e@gmail.com"">ah.o.s.ik.e.d.e@gmail.com</a>
<a href=""mailto:ah.osi.ke.de@gmail.com"">ah.osi.ke.de@gmail.com</a>
<a href=""mailto:a.h.osi.k.ede@gmail.com"">a.h.osi.k.ede@gmail.com</a>
<a href=""mailto:ah.o.s.i.k.ede@gmail.com"">ah.o.s.i.k.ede@gmail.com</a>
<a href=""mailto:a.ho.s.i.ked.e@gmail.com"">a.ho.s.i.ked.e@gmail.com</a>
<a href=""mailto:ah.o.si.kede@gmail.com"">ah.o.si.kede@gmail.com</a>
<a href=""mailto:ah.o.sike.de@gmail.com"">ah.o.sike.de@gmail.com</a>
<a href=""mailto:a.h.os.i.ke.d.e@gmail.com"">a.h.os.i.ke.d.e@gmail.com</a>
<a href=""mailto:aho.sik.ed.e@gmail.com"">aho.sik.ed.e@gmail.com</a>
<a href=""mailto:ahosi.k.e.d.e@gmail.com"">ahosi.k.e.d.e@gmail.com</a>
<a href=""mailto:aho.s.i.k.e.de@gmail.com"">aho.s.i.k.e.de@gmail.com</a>
<a href=""mailto:a.h.os.ik.ede@gmail.com"">a.h.os.ik.ede@gmail.com</a>
<a href=""mailto:ah.os.i.k.ede@gmail.com"">ah.os.i.k.ede@gmail.com</a>
<a href=""mailto:ah.osi.kede@gmail.com"">ah.osi.kede@gmail.com</a>
<a href=""mailto:a.ho.s.i.k.e.de@gmail.com"">a.ho.s.i.k.e.de@gmail.com</a>
<a href=""mailto:a.hosi.ke.de@gmail.com"">a.hosi.ke.de@gmail.com</a>
<a href=""mailto:a.ho.si.ked.e@gmail.com"">a.ho.si.ked.e@gmail.com</a>
<a href=""mailto:ahosik.ed.e@gmail.com"">ahosik.ed.e@gmail.com</a>
<a href=""mailto:a.h.osi.k.e.d.e@gmail.com"">a.h.osi.k.e.d.e@gmail.com</a>
<a href=""mailto:aho.s.ik.ede@gmail.com"">aho.s.ik.ede@gmail.com</a>
<a href=""mailto:ahosik.ede@gmail.com"">ahosik.ede@gmail.com</a>
<a href=""mailto:ah.o.s.ik.ede@gmail.com"">ah.o.s.ik.ede@gmail.com</a>
<a href=""mailto:ah.os.ik.ede@gmail.com"">ah.os.ik.ede@gmail.com</a>
<a href=""mailto:aho.si.ke.d.e@gmail.com"">aho.si.ke.d.e@gmail.com</a>
<a href=""mailto:a.h.o.s.ikede@gmail.com"">a.h.o.s.ikede@gmail.com</a>
<a href=""mailto:a.ho.si.ke.de@gmail.com"">a.ho.si.ke.de@gmail.com</a>
<a href=""mailto:a.hos.iked.e@gmail.com"">a.hos.iked.e@gmail.com</a>
<a href=""mailto:a.h.os.i.ked.e@gmail.com"">a.h.os.i.ked.e@gmail.com</a>
<a href=""mailto:ah.o.s.i.ked.e@gmail.com"">ah.o.s.i.ked.e@gmail.com</a>
<a href=""mailto:ahos.ik.ede@gmail.com"">ahos.ik.ede@gmail.com</a>
<a href=""mailto:ahos.i.ke.de@gmail.com"">ahos.i.ke.de@gmail.com</a>
<a href=""mailto:a.h.os.i.k.e.de@gmail.com"">a.h.os.i.k.e.de@gmail.com</a>
<a href=""mailto:a.ho.si.k.e.d.e@gmail.com"">a.ho.si.k.e.d.e@gmail.com</a>
<a href=""mailto:a.ho.sik.ede@gmail.com"">a.ho.sik.ede@gmail.com</a>
<a href=""mailto:aho.si.ked.e@gmail.com"">aho.si.ked.e@gmail.com</a>
<a href=""mailto:aho.s.ik.ed.e@gmail.com"">aho.s.ik.ed.e@gmail.com</a>
<a href=""mailto:a.hosi.k.ede@gmail.com"">a.hosi.k.ede@gmail.com</a>
<a href=""mailto:a.h.os.i.ke.de@gmail.com"">a.h.os.i.ke.de@gmail.com</a>
<a href=""mailto:a.h.os.ik.e.d.e@gmail.com"">a.h.os.ik.e.d.e@gmail.com</a>
<a href=""mailto:ah.o.s.i.ke.d.e@gmail.com"">ah.o.s.i.ke.d.e@gmail.com</a>
<a href=""mailto:a.ho.s.ike.de@gmail.com"">a.ho.s.ike.de@gmail.com</a>
<a href=""mailto:ahosikede@gmail.com"">ahosikede@gmail.com</a>
<a href=""mailto:ah.o.sike.d.e@gmail.com"">ah.o.sike.d.e@gmail.com</a>
<a href=""mailto:a.h.o.si.ke.de@gmail.com"">a.h.o.si.ke.de@gmail.com</a>
<a href=""mailto:ah.o.s.i.k.e.d.e@gmail.com"">ah.o.s.i.k.e.d.e@gmail.com</a>
<a href=""mailto:a.ho.si.k.e.de@gmail.com"">a.ho.si.k.e.de@gmail.com</a>
<a href=""mailto:a.hosik.ed.e@gmail.com"">a.hosik.ed.e@gmail.com</a>
<a href=""mailto:ahos.ik.ed.e@gmail.com"">ahos.ik.ed.e@gmail.com</a>
<a href=""mailto:a.h.o.s.i.kede@gmail.com"">a.h.o.s.i.kede@gmail.com</a>
<a href=""mailto:ah.o.si.k.ede@gmail.com"">ah.o.si.k.ede@gmail.com</a>
<a href=""mailto:a.ho.s.i.ke.d.e@gmail.com"">a.ho.s.i.ke.d.e@gmail.com</a>
<a href=""mailto:aho.s.ike.de@gmail.com"">aho.s.ike.de@gmail.com</a>
<a href=""mailto:a.h.o.sik.e.de@gmail.com"">a.h.o.sik.e.de@gmail.com</a>
<a href=""mailto:ah.os.iked.e@gmail.com"">ah.os.iked.e@gmail.com</a>
<a href=""mailto:ahosiked.e@gmail.com"">ahosiked.e@gmail.com</a>
<a href=""mailto:ahosi.kede@gmail.com"">ahosi.kede@gmail.com</a>
<a href=""mailto:a.hos.ike.de@gmail.com"">a.hos.ike.de@gmail.com</a>
<a href=""mailto:ahosi.ked.e@gmail.com"">ahosi.ked.e@gmail.com</a>
<a href=""mailto:a.hos.i.k.e.de@gmail.com"">a.hos.i.k.e.de@gmail.com</a>
<a href=""mailto:ah.o.s.i.ke.de@gmail.com"">ah.o.s.i.ke.de@gmail.com</a>
<a href=""mailto:ahosik.e.d.e@gmail.com"">ahosik.e.d.e@gmail.com</a>
<a href=""mailto:a.hosike.de@gmail.com"">a.hosike.de@gmail.com</a>
<a href=""mailto:a.ho.si.ke.d.e@gmail.com"">a.ho.si.ke.d.e@gmail.com</a>
<a href=""mailto:a.h.o.si.ked.e@gmail.com"">a.h.o.si.ked.e@gmail.com</a>
<a href=""mailto:a.ho.sik.e.de@gmail.com"">a.ho.sik.e.de@gmail.com</a>
<a href=""mailto:a.hosik.e.d.e@gmail.com"">a.hosik.e.d.e@gmail.com</a>
<a href=""mailto:aho.s.ik.e.d.e@gmail.com"">aho.s.ik.e.d.e@gmail.com</a>
<a href=""mailto:a.hos.ik.e.de@gmail.com"">a.hos.ik.e.de@gmail.com</a>
<a href=""mailto:a.ho.si.k.ed.e@gmail.com"">a.ho.si.k.ed.e@gmail.com</a>
<a href=""mailto:a.ho.s.i.k.ed.e@gmail.com"">a.ho.s.i.k.ed.e@gmail.com</a>
<a href=""mailto:aho.si.k.ed.e@gmail.com"">aho.si.k.ed.e@gmail.com</a>
<a href=""mailto:ah.os.i.kede@gmail.com"">ah.os.i.kede@gmail.com</a>
<a href=""mailto:a.hos.ik.ede@gmail.com"">a.hos.ik.ede@gmail.com</a>
<a href=""mailto:a.h.osi.kede@gmail.com"">a.h.osi.kede@gmail.com</a>
<a href=""mailto:a.h.o.s.i.k.e.de@gmail.com"">a.h.o.s.i.k.e.de@gmail.com</a>
<a href=""mailto:a.h.osik.e.de@gmail.com"">a.h.osik.e.de@gmail.com</a>
<a href=""mailto:ah.osikede@gmail.com"">ah.osikede@gmail.com</a>
<a href=""mailto:ah.o.si.ked.e@gmail.com"">ah.o.si.ked.e@gmail.com</a>
<a href=""mailto:a.ho.s.ik.e.de@gmail.com"">a.ho.s.ik.e.de@gmail.com</a>
<a href=""mailto:a.h.o.s.ik.ed.e@gmail.com"">a.h.o.s.ik.ed.e@gmail.com</a>
<a href=""mailto:a.h.o.si.ke.d.e@gmail.com"">a.h.o.si.ke.d.e@gmail.com</a>
<a href=""mailto:a.hos.i.ked.e@gmail.com"">a.hos.i.ked.e@gmail.com</a>
<a href=""mailto:a.hos.i.ke.de@gmail.com"">a.hos.i.ke.de@gmail.com</a>
<a href=""mailto:a.h.o.s.ike.de@gmail.com"">a.h.o.s.ike.de@gmail.com</a>
<a href=""mailto:a.hosi.k.ed.e@gmail.com"">a.hosi.k.ed.e@gmail.com</a>
<a href=""mailto:a.hos.i.k.ed.e@gmail.com"">a.hos.i.k.ed.e@gmail.com</a>
<a href=""mailto:a.h.o.s.ik.e.de@gmail.com"">a.h.o.s.ik.e.de@gmail.com</a>
<a href=""mailto:ahosike.de@gmail.com"">ahosike.de@gmail.com</a>
<a href=""mailto:a.hosiked.e@gmail.com"">a.hosiked.e@gmail.com</a>
<a href=""mailto:aho.sik.e.de@gmail.com"">aho.sik.e.de@gmail.com</a>
<a href=""mailto:a.hos.ik.ed.e@gmail.com"">a.hos.ik.ed.e@gmail.com</a>
<a href=""mailto:aho.s.i.ked.e@gmail.com"">aho.s.i.ked.e@gmail.com</a>
<a href=""mailto:ah.os.ikede@gmail.com"">ah.os.ikede@gmail.com</a>
<a href=""mailto:a.hos.ik.e.d.e@gmail.com"">a.hos.ik.e.d.e@gmail.com</a>
<a href=""mailto:aho.si.k.ede@gmail.com"">aho.si.k.ede@gmail.com</a>
<a href=""mailto:a.hosik.e.de@gmail.com"">a.hosik.e.de@gmail.com</a>
<a href=""mailto:ah.osi.ked.e@gmail.com"">ah.osi.ked.e@gmail.com</a>
<a href=""mailto:ah.osi.k.ede@gmail.com"">ah.osi.k.ede@gmail.com</a>
<a href=""mailto:ah.osi.k.e.d.e@gmail.com"">ah.osi.k.e.d.e@gmail.com</a>
<a href=""mailto:a.ho.s.ik.e.d.e@gmail.com"">a.ho.s.ik.e.d.e@gmail.com</a>
<a href=""mailto:a.hosikede@gmail.com"">a.hosikede@gmail.com</a>
<a href=""mailto:ahos.iked.e@gmail.com"">ahos.iked.e@gmail.com</a>
<a href=""mailto:ah.osik.e.d.e@gmail.com"">ah.osik.e.d.e@gmail.com</a>
<a href=""mailto:aho.sik.ede@gmail.com"">aho.sik.ede@gmail.com</a>
<a href=""mailto:a.h.osiked.e@gmail.com"">a.h.osiked.e@gmail.com</a>
<a href=""mailto:a.ho.s.i.k.ede@gmail.com"">a.ho.s.i.k.ede@gmail.com</a>
<a href=""mailto:ah.os.i.k.e.d.e@gmail.com"">ah.os.i.k.e.d.e@gmail.com</a>
<a href=""mailto:ah.os.ik.e.d.e@gmail.com"">ah.os.ik.e.d.e@gmail.com</a>
<a href=""mailto:a.h.o.s.ik.e.d.e@gmail.com"">a.h.o.s.ik.e.d.e@gmail.com</a><a href=""mailto:smit.hde.an.13.8@gmail.com"">smit.hde.an.13.8@gmail.com</a>

<a href=""mailto:nfonkynfon@gmail.com"">nfonkynfon@gmail.com</a>
<a href=""mailto:nfon.ky.nf.o.n@gmail.com"">nfon.ky.nf.o.n@gmail.com</a>
<a href=""mailto:n.f.o.n.ky.nf.o.n@gmail.com"">n.f.o.n.ky.nf.o.n@gmail.com</a>
<a href=""mailto:nf.onky.nfon@gmail.com"">nf.onky.nfon@gmail.com</a>
<a href=""mailto:n.fo.nky.nfon@gmail.com"">n.fo.nky.nfon@gmail.com</a>
<a href=""mailto:nfonky.n.fon@gmail.com"">nfonky.n.fon@gmail.com</a>
<a href=""mailto:nfo.n.kyn.fo.n@gmail.com"">nfo.n.kyn.fo.n@gmail.com</a>
<a href=""mailto:n.f.o.nk.y.nfo.n@gmail.com"">n.f.o.nk.y.nfo.n@gmail.com</a>
<a href=""mailto:n.fo.n.ky.n.f.o.n@gmail.com"">n.fo.n.ky.n.f.o.n@gmail.com</a>
<a href=""mailto:nf.onky.nf.o.n@gmail.com"">nf.onky.nf.o.n@gmail.com</a>
<a href=""mailto:n.fo.n.k.ynfon@gmail.com"">n.fo.n.k.ynfon@gmail.com</a>
<a href=""mailto:nfo.nk.ynfon@gmail.com"">nfo.nk.ynfon@gmail.com</a>
<a href=""mailto:nf.on.kyn.fo.n@gmail.com"">nf.on.kyn.fo.n@gmail.com</a>
<a href=""mailto:nfo.nk.yn.f.on@gmail.com"">nfo.nk.yn.f.on@gmail.com</a>
<a href=""mailto:nf.onk.yn.f.on@gmail.com"">nf.onk.yn.f.on@gmail.com</a>
<a href=""mailto:n.f.o.nky.n.fon@gmail.com"">n.f.o.nky.n.fon@gmail.com</a>
<a href=""mailto:n.fon.k.yn.fo.n@gmail.com"">n.fon.k.yn.fo.n@gmail.com</a>
<a href=""mailto:nfon.k.y.n.fo.n@gmail.com"">nfon.k.y.n.fo.n@gmail.com</a>
<a href=""mailto:n.fon.ky.n.fon@gmail.com"">n.fon.ky.n.fon@gmail.com</a>
<a href=""mailto:n.fo.n.kyn.f.on@gmail.com"">n.fo.n.kyn.f.on@gmail.com</a>
<a href=""mailto:nfo.nk.y.nf.o.n@gmail.com"">nfo.nk.y.nf.o.n@gmail.com</a>
<a href=""mailto:nfo.nkyn.f.on@gmail.com"">nfo.nkyn.f.on@gmail.com</a>
<a href=""mailto:nfon.k.y.nf.o.n@gmail.com"">nfon.k.y.nf.o.n@gmail.com</a>
<a href=""mailto:n.f.onk.y.nf.o.n@gmail.com"">n.f.onk.y.nf.o.n@gmail.com</a>
<a href=""mailto:n.f.onky.nfon@gmail.com"">n.f.onky.nfon@gmail.com</a>
<a href=""mailto:n.f.o.n.k.yn.fon@gmail.com"">n.f.o.n.k.yn.fon@gmail.com</a>
<a href=""mailto:n.fo.nky.n.fon@gmail.com"">n.fo.nky.n.fon@gmail.com</a>
<a href=""mailto:nfon.kynfon@gmail.com"">nfon.kynfon@gmail.com</a>
<a href=""mailto:n.f.onkynf.on@gmail.com"">n.f.onkynf.on@gmail.com</a>
<a href=""mailto:n.f.o.nk.y.n.fo.n@gmail.com"">n.f.o.nk.y.n.fo.n@gmail.com</a>
<a href=""mailto:n.f.o.n.k.y.nfon@gmail.com"">n.f.o.n.k.y.nfon@gmail.com</a>
<a href=""mailto:nf.on.k.y.n.f.o.n@gmail.com"">nf.on.k.y.n.f.o.n@gmail.com</a>
<a href=""mailto:nf.onk.ynfo.n@gmail.com"">nf.onk.ynfo.n@gmail.com</a>
<a href=""mailto:n.fon.ky.nf.on@gmail.com"">n.fon.ky.nf.on@gmail.com</a>
<a href=""mailto:n.f.o.nkyn.fon@gmail.com"">n.f.o.nkyn.fon@gmail.com</a>
<a href=""mailto:nfo.nkynfo.n@gmail.com"">nfo.nkynfo.n@gmail.com</a>
<a href=""mailto:nf.o.n.kynfo.n@gmail.com"">nf.o.n.kynfo.n@gmail.com</a>
<a href=""mailto:nfo.n.k.y.n.f.o.n@gmail.com"">nfo.n.k.y.n.f.o.n@gmail.com</a>
<a href=""mailto:n.fonk.y.nf.on@gmail.com"">n.fonk.y.nf.on@gmail.com</a>
<a href=""mailto:n.f.o.nk.yn.f.o.n@gmail.com"">n.f.o.nk.yn.f.o.n@gmail.com</a>
<a href=""mailto:nf.on.k.y.n.fon@gmail.com"">nf.on.k.y.n.fon@gmail.com</a>
<a href=""mailto:nf.o.n.k.yn.fo.n@gmail.com"">nf.o.n.k.yn.fo.n@gmail.com</a>
<a href=""mailto:n.fo.nkyn.fo.n@gmail.com"">n.fo.nkyn.fo.n@gmail.com</a>
<a href=""mailto:n.f.on.k.y.n.f.on@gmail.com"">n.f.on.k.y.n.f.on@gmail.com</a>
<a href=""mailto:nf.onk.yn.fon@gmail.com"">nf.onk.yn.fon@gmail.com</a>
<a href=""mailto:n.fon.k.yn.fon@gmail.com"">n.fon.k.yn.fon@gmail.com</a>
<a href=""mailto:nf.o.n.kyn.f.on@gmail.com"">nf.o.n.kyn.f.on@gmail.com</a>
<a href=""mailto:n.f.o.n.k.ynf.o.n@gmail.com"">n.f.o.n.k.ynf.o.n@gmail.com</a>
<a href=""mailto:n.f.o.n.k.y.n.f.o.n@gmail.com"">n.f.o.n.k.y.n.f.o.n@gmail.com</a>
<a href=""mailto:n.fonk.y.nfon@gmail.com"">n.fonk.y.nfon@gmail.com</a>
<a href=""mailto:n.f.onkynf.o.n@gmail.com"">n.f.onkynf.o.n@gmail.com</a>
<a href=""mailto:nfon.k.y.nfon@gmail.com"">nfon.k.y.nfon@gmail.com</a>
<a href=""mailto:nfo.n.k.ynf.on@gmail.com"">nfo.n.k.ynf.on@gmail.com</a>
<a href=""mailto:nf.o.n.ky.nf.o.n@gmail.com"">nf.o.n.ky.nf.o.n@gmail.com</a>
<a href=""mailto:n.fonk.ynf.on@gmail.com"">n.fonk.ynf.on@gmail.com</a>
<a href=""mailto:n.fo.nk.ynfon@gmail.com"">n.fo.nk.ynfon@gmail.com</a>
<a href=""mailto:nf.o.n.k.yn.f.on@gmail.com"">nf.o.n.k.yn.f.on@gmail.com</a>
<a href=""mailto:n.fonky.nfo.n@gmail.com"">n.fonky.nfo.n@gmail.com</a>
<a href=""mailto:nfo.nk.yn.fon@gmail.com"">nfo.nk.yn.fon@gmail.com</a>
<a href=""mailto:n.fo.n.k.y.n.fon@gmail.com"">n.fo.n.k.y.n.fon@gmail.com</a>
<a href=""mailto:nf.o.nk.y.n.f.on@gmail.com"">nf.o.nk.y.n.f.on@gmail.com</a>
<a href=""mailto:n.fo.nk.yn.fon@gmail.com"">n.fo.nk.yn.fon@gmail.com</a>
<a href=""mailto:n.fo.n.k.yn.fo.n@gmail.com"">n.fo.n.k.yn.fo.n@gmail.com</a>
<a href=""mailto:n.f.o.nky.n.f.on@gmail.com"">n.f.o.nky.n.f.on@gmail.com</a>
<a href=""mailto:n.fo.nk.yn.fo.n@gmail.com"">n.fo.nk.yn.fo.n@gmail.com</a>
<a href=""mailto:nf.on.kynfon@gmail.com"">nf.on.kynfon@gmail.com</a>
<a href=""mailto:nfo.n.k.y.nfon@gmail.com"">nfo.n.k.y.nfon@gmail.com</a>
<a href=""mailto:nfo.nky.n.f.o.n@gmail.com"">nfo.nky.n.f.o.n@gmail.com</a>
<a href=""mailto:nf.o.nk.yn.fon@gmail.com"">nf.o.nk.yn.fon@gmail.com</a>
<a href=""mailto:n.f.onk.y.n.fo.n@gmail.com"">n.f.onk.y.n.fo.n@gmail.com</a>
<a href=""mailto:n.f.o.nky.nf.o.n@gmail.com"">n.f.o.nky.nf.o.n@gmail.com</a>
<a href=""mailto:nf.on.k.ynf.o.n@gmail.com"">nf.on.k.ynf.o.n@gmail.com</a>
<a href=""mailto:nf.o.nkynfon@gmail.com"">nf.o.nkynfon@gmail.com</a>
<a href=""mailto:n.f.on.ky.n.fo.n@gmail.com"">n.f.on.ky.n.fo.n@gmail.com</a>
<a href=""mailto:nfon.k.yn.fo.n@gmail.com"">nfon.k.yn.fo.n@gmail.com</a>
<a href=""mailto:nfo.n.kynf.o.n@gmail.com"">nfo.n.kynf.o.n@gmail.com</a>
<a href=""mailto:n.fo.n.ky.nfo.n@gmail.com"">n.fo.n.ky.nfo.n@gmail.com</a>
<a href=""mailto:n.fonkyn.fon@gmail.com"">n.fonkyn.fon@gmail.com</a>
<a href=""mailto:n.f.o.nk.ynf.on@gmail.com"">n.f.o.nk.ynf.on@gmail.com</a>
<a href=""mailto:n.fon.k.yn.f.o.n@gmail.com"">n.fon.k.yn.f.o.n@gmail.com</a>
<a href=""mailto:n.fo.n.kyn.f.o.n@gmail.com"">n.fo.n.kyn.f.o.n@gmail.com</a>
<a href=""mailto:nfon.kyn.f.on@gmail.com"">nfon.kyn.f.on@gmail.com</a>
<a href=""mailto:n.fon.ky.n.f.on@gmail.com"">n.fon.ky.n.f.on@gmail.com</a>
<a href=""mailto:nf.onkynfo.n@gmail.com"">nf.onkynfo.n@gmail.com</a>
<a href=""mailto:nf.o.n.k.y.nfo.n@gmail.com"">nf.o.n.k.y.nfo.n@gmail.com</a>
<a href=""mailto:n.fo.n.k.yn.fon@gmail.com"">n.fo.n.k.yn.fon@gmail.com</a>
<a href=""mailto:n.f.o.n.ky.nfo.n@gmail.com"">n.f.o.n.ky.nfo.n@gmail.com</a>
<a href=""mailto:nf.on.k.ynfo.n@gmail.com"">nf.on.k.ynfo.n@gmail.com</a>
<a href=""mailto:nfo.n.k.yn.f.on@gmail.com"">nfo.n.k.yn.f.on@gmail.com</a>
<a href=""mailto:n.f.on.k.y.n.fo.n@gmail.com"">n.f.on.k.y.n.fo.n@gmail.com</a>
<a href=""mailto:nfo.n.ky.nfon@gmail.com"">nfo.n.ky.nfon@gmail.com</a>
<a href=""mailto:n.fonk.yn.fo.n@gmail.com"">n.fonk.yn.fo.n@gmail.com</a>
<a href=""mailto:n.f.o.nky.nfon@gmail.com"">n.f.o.nky.nfon@gmail.com</a>
<a href=""mailto:n.fonky.nf.on@gmail.com"">n.fonky.nf.on@gmail.com</a>
<a href=""mailto:nfon.ky.nfo.n@gmail.com"">nfon.ky.nfo.n@gmail.com</a>
<a href=""mailto:nf.o.nk.y.nfon@gmail.com"">nf.o.nk.y.nfon@gmail.com</a>
<a href=""mailto:nf.on.k.y.nf.o.n@gmail.com"">nf.on.k.y.nf.o.n@gmail.com</a>
<a href=""mailto:nf.o.nk.yn.f.o.n@gmail.com"">nf.o.nk.yn.f.o.n@gmail.com</a>
<a href=""mailto:n.fo.nkynfon@gmail.com"">n.fo.nkynfon@gmail.com</a>
<a href=""mailto:n.fo.n.ky.nfon@gmail.com"">n.fo.n.ky.nfon@gmail.com</a>
<a href=""mailto:nfo.n.ky.n.f.on@gmail.com"">nfo.n.ky.n.f.on@gmail.com</a>
<a href=""mailto:nf.onkynf.o.n@gmail.com"">nf.onkynf.o.n@gmail.com</a>
<a href=""mailto:nf.o.nkyn.f.o.n@gmail.com"">nf.o.nkyn.f.o.n@gmail.com</a>
<a href=""mailto:nfo.n.k.yn.fo.n@gmail.com"">nfo.n.k.yn.fo.n@gmail.com</a>
<a href=""mailto:n.fonk.yn.f.on@gmail.com"">n.fonk.yn.f.on@gmail.com</a>
<a href=""mailto:nfon.k.ynf.on@gmail.com"">nfon.k.ynf.on@gmail.com</a>
<a href=""mailto:n.f.o.n.k.ynfo.n@gmail.com"">n.f.o.n.k.ynfo.n@gmail.com</a>
<a href=""mailto:nfon.kyn.fo.n@gmail.com"">nfon.kyn.fo.n@gmail.com</a>
<a href=""mailto:n.fo.n.ky.nf.on@gmail.com"">n.fo.n.ky.nf.on@gmail.com</a>
<a href=""mailto:nfo.n.kynfon@gmail.com"">nfo.n.kynfon@gmail.com</a>
<a href=""mailto:n.fonk.y.n.fo.n@gmail.com"">n.fonk.y.n.fo.n@gmail.com</a>
<a href=""mailto:nfonk.ynfo.n@gmail.com"">nfonk.ynfo.n@gmail.com</a>
<a href=""mailto:nf.on.kynf.o.n@gmail.com"">nf.on.kynf.o.n@gmail.com</a>
<a href=""mailto:n.f.onk.yn.fon@gmail.com"">n.f.onk.yn.fon@gmail.com</a>
<a href=""mailto:n.f.on.k.y.nfon@gmail.com"">n.f.on.k.y.nfon@gmail.com</a>
<a href=""mailto:nfo.nk.ynf.on@gmail.com"">nfo.nk.ynf.on@gmail.com</a>
<a href=""mailto:nfo.nk.y.n.fo.n@gmail.com"">nfo.nk.y.n.fo.n@gmail.com</a>
<a href=""mailto:n.f.o.nkynfon@gmail.com"">n.f.o.nkynfon@gmail.com</a>
<a href=""mailto:n.fo.n.k.y.n.f.on@gmail.com"">n.fo.n.k.y.n.f.on@gmail.com</a>
<a href=""mailto:nf.o.nky.nf.o.n@gmail.com"">nf.o.nky.nf.o.n@gmail.com</a>
<a href=""mailto:n.f.on.kyn.f.on@gmail.com"">n.f.on.kyn.f.on@gmail.com</a>
<a href=""mailto:n.f.o.n.k.yn.f.o.n@gmail.com"">n.f.o.n.k.yn.f.o.n@gmail.com</a>
<a href=""mailto:nf.onky.n.fo.n@gmail.com"">nf.onky.n.fo.n@gmail.com</a>
<a href=""mailto:nfo.nky.n.f.on@gmail.com"">nfo.nky.n.f.on@gmail.com</a>
<a href=""mailto:n.f.on.k.ynf.o.n@gmail.com"">n.f.on.k.ynf.o.n@gmail.com</a>
<a href=""mailto:n.f.on.k.ynfo.n@gmail.com"">n.f.on.k.ynfo.n@gmail.com</a>
<a href=""mailto:nfo.nky.n.fon@gmail.com"">nfo.nky.n.fon@gmail.com</a>
<a href=""mailto:nf.o.nkynfo.n@gmail.com"">nf.o.nkynfo.n@gmail.com</a>
<a href=""mailto:nfon.k.y.n.f.on@gmail.com"">nfon.k.y.n.f.on@gmail.com</a>
<a href=""mailto:n.f.onky.nf.on@gmail.com"">n.f.onky.nf.on@gmail.com</a>
<a href=""mailto:n.fonky.nf.o.n@gmail.com"">n.fonky.nf.o.n@gmail.com</a>
<a href=""mailto:n.fon.kynfon@gmail.com"">n.fon.kynfon@gmail.com</a>
<a href=""mailto:n.f.o.nkyn.fo.n@gmail.com"">n.f.o.nkyn.fo.n@gmail.com</a>
<a href=""mailto:nf.on.kyn.f.on@gmail.com"">nf.on.kyn.f.on@gmail.com</a>
<a href=""mailto:n.fon.k.y.n.f.on@gmail.com"">n.fon.k.y.n.f.on@gmail.com</a>
<a href=""mailto:nfo.n.kyn.f.on@gmail.com"">nfo.n.kyn.f.on@gmail.com</a>
<a href=""mailto:nf.onkyn.f.o.n@gmail.com"">nf.onkyn.f.o.n@gmail.com</a>
<a href=""mailto:n.fo.nky.nf.on@gmail.com"">n.fo.nky.nf.on@gmail.com</a>
<a href=""mailto:n.fon.k.ynfo.n@gmail.com"">n.fon.k.ynfo.n@gmail.com</a>
<a href=""mailto:nfonkynf.o.n@gmail.com"">nfonkynf.o.n@gmail.com</a>
<a href=""mailto:nf.onk.y.n.fon@gmail.com"">nf.onk.y.n.fon@gmail.com</a>
<a href=""mailto:n.f.onk.ynf.on@gmail.com"">n.f.onk.ynf.on@gmail.com</a>
<a href=""mailto:nf.o.n.k.y.nfon@gmail.com"">nf.o.n.k.y.nfon@gmail.com</a>
<a href=""mailto:nf.onk.y.n.f.on@gmail.com"">nf.onk.y.n.f.on@gmail.com</a>
<a href=""mailto:n.f.o.nky.nf.on@gmail.com"">n.f.o.nky.nf.on@gmail.com</a>
<a href=""mailto:n.fo.nkynf.on@gmail.com"">n.fo.nkynf.on@gmail.com</a>
<a href=""mailto:n.fon.ky.n.f.o.n@gmail.com"">n.fon.ky.n.f.o.n@gmail.com</a>
<a href=""mailto:nfon.k.yn.f.on@gmail.com"">nfon.k.yn.f.on@gmail.com</a>
<a href=""mailto:n.fonk.y.n.fon@gmail.com"">n.fonk.y.n.fon@gmail.com</a>
<a href=""mailto:n.f.o.n.kyn.f.o.n@gmail.com"">n.f.o.n.kyn.f.o.n@gmail.com</a>
<a href=""mailto:n.f.onky.n.f.on@gmail.com"">n.f.onky.n.f.on@gmail.com</a>
<a href=""mailto:n.fon.ky.nfon@gmail.com"">n.fon.ky.nfon@gmail.com</a>
<a href=""mailto:n.fo.nk.y.n.f.o.n@gmail.com"">n.fo.nk.y.n.f.o.n@gmail.com</a>
<a href=""mailto:nfo.n.ky.nf.o.n@gmail.com"">nfo.n.ky.nf.o.n@gmail.com</a>
<a href=""mailto:n.f.onk.y.n.fon@gmail.com"">n.f.onk.y.n.fon@gmail.com</a>
<a href=""mailto:nfo.nk.yn.f.o.n@gmail.com"">nfo.nk.yn.f.o.n@gmail.com</a>
<a href=""mailto:nfo.nk.y.nf.on@gmail.com"">nfo.nk.y.nf.on@gmail.com</a>
<a href=""mailto:n.f.o.n.kynf.o.n@gmail.com"">n.f.o.n.kynf.o.n@gmail.com</a>
<a href=""mailto:n.fo.nky.n.f.o.n@gmail.com"">n.fo.nky.n.f.o.n@gmail.com</a>
<a href=""mailto:n.f.onkyn.fon@gmail.com"">n.f.onkyn.fon@gmail.com</a>
<a href=""mailto:n.f.o.nk.y.nf.o.n@gmail.com"">n.f.o.nk.y.nf.o.n@gmail.com</a>
<a href=""mailto:n.f.o.n.k.y.nf.on@gmail.com"">n.f.o.n.k.y.nf.on@gmail.com</a>
<a href=""mailto:n.f.on.kynfon@gmail.com"">n.f.on.kynfon@gmail.com</a>
<a href=""mailto:n.fon.k.y.nf.o.n@gmail.com"">n.fon.k.y.nf.o.n@gmail.com</a>
<a href=""mailto:n.f.onkyn.f.on@gmail.com"">n.f.onkyn.f.on@gmail.com</a>
<a href=""mailto:nfo.n.k.ynfo.n@gmail.com"">nfo.n.k.ynfo.n@gmail.com</a>
<a href=""mailto:n.f.on.ky.n.f.on@gmail.com"">n.f.on.ky.n.f.on@gmail.com</a>
<a href=""mailto:nfo.n.k.y.n.f.on@gmail.com"">nfo.n.k.y.n.f.on@gmail.com</a>
<a href=""mailto:n.f.o.n.kyn.fon@gmail.com"">n.f.o.n.kyn.fon@gmail.com</a>
<a href=""mailto:n.f.o.n.k.yn.f.on@gmail.com"">n.f.o.n.k.yn.f.on@gmail.com</a>
<a href=""mailto:n.fo.n.k.ynf.on@gmail.com"">n.fo.n.k.ynf.on@gmail.com</a>
<a href=""mailto:nf.o.nky.n.fo.n@gmail.com"">nf.o.nky.n.fo.n@gmail.com</a>
<a href=""mailto:nfonk.ynfon@gmail.com"">nfonk.ynfon@gmail.com</a>
<a href=""mailto:nfo.nkynf.on@gmail.com"">nfo.nkynf.on@gmail.com</a>
<a href=""mailto:n.fonky.nfon@gmail.com"">n.fonky.nfon@gmail.com</a>
<a href=""mailto:n.f.on.kyn.fon@gmail.com"">n.f.on.kyn.fon@gmail.com</a>
<a href=""mailto:n.fo.nk.y.n.f.on@gmail.com"">n.fo.nk.y.n.f.on@gmail.com</a>
<a href=""mailto:n.f.o.n.k.ynfon@gmail.com"">n.f.o.n.k.ynfon@gmail.com</a>
<a href=""mailto:nfo.n.k.yn.fon@gmail.com"">nfo.n.k.yn.fon@gmail.com</a>
<a href=""mailto:nfonk.y.nfo.n@gmail.com"">nfonk.y.nfo.n@gmail.com</a>
<a href=""mailto:n.f.onk.y.nfo.n@gmail.com"">n.f.onk.y.nfo.n@gmail.com</a>
<a href=""mailto:nf.o.n.k.ynfo.n@gmail.com"">nf.o.n.k.ynfo.n@gmail.com</a>
<a href=""mailto:n.fon.k.y.n.fon@gmail.com"">n.fon.k.y.n.fon@gmail.com</a>
<a href=""mailto:nf.on.ky.n.f.o.n@gmail.com"">nf.on.ky.n.f.o.n@gmail.com</a>
<a href=""mailto:n.fo.n.k.y.nfon@gmail.com"">n.fo.n.k.y.nfon@gmail.com</a>
<a href=""mailto:nfon.k.ynf.o.n@gmail.com"">nfon.k.ynf.o.n@gmail.com</a>
<a href=""mailto:n.f.o.n.kynf.on@gmail.com"">n.f.o.n.kynf.on@gmail.com</a>
<a href=""mailto:nf.onk.y.nfon@gmail.com"">nf.onk.y.nfon@gmail.com</a>
<a href=""mailto:n.f.on.k.yn.fon@gmail.com"">n.f.on.k.yn.fon@gmail.com</a>
<a href=""mailto:nf.onk.y.nfo.n@gmail.com"">nf.onk.y.nfo.n@gmail.com</a>
<a href=""mailto:n.f.onk.yn.fo.n@gmail.com"">n.f.onk.yn.fo.n@gmail.com</a>
<a href=""mailto:nfo.n.ky.nfo.n@gmail.com"">nfo.n.ky.nfo.n@gmail.com</a>
<a href=""mailto:nfo.nkyn.fo.n@gmail.com"">nfo.nkyn.fo.n@gmail.com</a>
<a href=""mailto:n.fonky.n.f.on@gmail.com"">n.fonky.n.f.on@gmail.com</a>
<a href=""mailto:nfonk.y.nfon@gmail.com"">nfonk.y.nfon@gmail.com</a>
<a href=""mailto:nf.o.n.kyn.fo.n@gmail.com"">nf.o.n.kyn.fo.n@gmail.com</a>
<a href=""mailto:n.f.o.n.k.y.n.f.on@gmail.com"">n.f.o.n.k.y.n.f.on@gmail.com</a>
<a href=""mailto:n.fo.n.kyn.fo.n@gmail.com"">n.fo.n.kyn.fo.n@gmail.com</a>
<a href=""mailto:nf.onk.ynf.o.n@gmail.com"">nf.onk.ynf.o.n@gmail.com</a>
<a href=""mailto:nf.o.n.ky.nfon@gmail.com"">nf.o.n.ky.nfon@gmail.com</a>
<a href=""mailto:n.fonk.yn.f.o.n@gmail.com"">n.fonk.yn.f.o.n@gmail.com</a>
"
1vv1EYGi,09. Fruit or Vegetable,veronikaaa86,Java,Saturday 27th of May 2023 02:57:37 AM CDT,"package conditionalStatementsAdvanced;

import java.util.Scanner;

public class P09FruitOrVegetable {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        //•	Плодовете ""fruit"" са banana, apple, kiwi, cherry, lemon и grapes
        //•	Зеленчуците ""vegetable"" са tomato, cucumber, pepper и carrot
        //•	Всички останали са ""unknown""

        String input = scanner.nextLine();

        switch (input) {
            case ""banana"":
            case ""apple"":
            case ""kiwi"":
            case ""cherry"":
            case ""lemon"":
            case ""grapes"":
                System.out.println(""fruit"");
                break;
            case ""tomato"":
            case ""cucumber"":
            case ""pepper"":
            case ""carrot"":
                System.out.println(""vegetable"");
                break;
            default:
                System.out.println(""unknown"");
                break;
        }
    }
}
"
wcSUrz6Q,03. Animal Type,veronikaaa86,Java,Saturday 27th of May 2023 02:49:11 AM CDT,"package conditionalStatementsAdvanced;

import java.util.Scanner;

public class P03AnimalType {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        String animal = scanner.nextLine();

        switch (animal) {
            case ""dog"":
                System.out.println(""mammal"");
                break;
            case ""crocodile"":
            case ""tortoise"":
            case ""snake"":
                System.out.println(""reptile"");
                break;
            default:
                System.out.println(""unknown"");

        }
    }
}
"
YCS8RR8E,02. Weekend or Working Day,veronikaaa86,Java,Saturday 27th of May 2023 02:42:24 AM CDT,"package conditionalStatementsAdvanced;

import java.util.Scanner;

public class P02WeekendOrWorkingDay {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        String dayOfWeek = scanner.nextLine();

        switch (dayOfWeek) {
            case ""Monday"":
            case ""Tuesday"":
            case ""Wednesday"":
            case ""Thursday"":
            case ""Friday"":
                System.out.println(""Working day"");
                break;
            case ""Saturday"":
            case ""Sunday"":
                System.out.println(""Weekend"");
                break;
            default:
                System.out.println(""Error"");
        }
    }
}
"
PwZrGq5d,01. Day of Week,veronikaaa86,Java,Saturday 27th of May 2023 02:31:51 AM CDT,"package conditionalStatementsAdvanced;

import java.util.Scanner;

public class P01DayOfWeek {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        int num = Integer.parseInt(scanner.nextLine());

        switch (num) {
            case 1:
                System.out.println(""Monday"");
                break;
            case 2:
                System.out.println(""Tuesday"");
                break;
            case 3:
                System.out.println(""Wednesday"");
                break;
            case 4:
                System.out.println(""Thursday"");
                break;
            case 5:
                System.out.println(""Friday"");
                break;
            case 6:
                System.out.println(""Saturday"");
                break;
            case 7:
                System.out.println(""Sunday"");
                break;
            default:
                System.out.println(""Error"");
        }
    }
}
"
LujTiRPF,VirtualCamera for python sample,JoshMon,Python,Saturday 27th of May 2023 02:23:07 AM CDT,"import cv2
import pyvirtualcam


# VIRTUAL CAMERA CLASS :
# NO NEED TO OPEN OBS STUDIO BUT STILL A REQUIREMENT
# TO DOWNLOAD THE OBS SOFTWARE
# BECAUSE WE NEED ITS VIRTUAL CAMERA BINARIES
# AND THE PYVIRTUALCAM LIBRARY BECOMES OUR MIDDLEMAN BETWEEN PYTHON AND OBS

class VirtualCamera:
    def __init__(self, _width, _height, _fps):
        # Create a virtual camera
        self.cam = pyvirtualcam.Camera(width=_width, height=_height, fps=_fps)
        print('Virtual camera device: ' + self.cam.device)

    def __call__(self, f, frame_text="""", flip_frame=False):
        # YOU CAN ALSO PUT THE IMAGE MANIPULATION HERE IN THIS CALL FOR MORE CLEAN CODE
        # Define the coordinates of the bottom-left corner of the text
        org = (50, 50)

        # Define the font type, scale, color, thickness, and line type
        fontFace = cv2.FONT_HERSHEY_SIMPLEX
        fontScale = 1.5
        color = (0, 255, 0)  # Green color
        thickness = 2
        lineType = cv2.LINE_AA

        # Put the text on the image
        cv2.putText(f, frame_text, org, fontFace, fontScale, color, thickness, lineType)
        if flip_frame:
            f = cv2.flip(f, 1)  # flip the camera horizontally

        self.cam.send(f)
        self.cam.sleep_until_next_frame()


# ---------------------------------------------------------------------------- #
# THIS IS ONLY A TEST FOR THE CLASS

vc = cv2.VideoCapture(0)

if not vc.isOpened():
    raise RuntimeError('Could not open video source')

pref_width = 1280
pref_height = 720
pref_fps = 30
vc.set(cv2.CAP_PROP_FRAME_WIDTH, pref_width)
vc.set(cv2.CAP_PROP_FRAME_HEIGHT, pref_height)
vc.set(cv2.CAP_PROP_FPS, pref_fps)

# Query final capture device values
# (maybe different from preferred settings)
width = int(vc.get(cv2.CAP_PROP_FRAME_WIDTH))
height = int(vc.get(cv2.CAP_PROP_FRAME_HEIGHT))
fps = vc.get(cv2.CAP_PROP_FPS)

virtual = VirtualCamera(width, height, fps)

# Main loop of the camera frame update
while True:
    ret, frame = vc.read()

    # .. apply your filter ..
    frame = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)

    virtual(frame, frame_text=""Test ----------> HELLO WORLD"")
"
azWH7yGg,Untitled,MKANET,JSON,Saturday 27th of May 2023 02:02:23 AM CDT,"[
    {
        ""seriesId"": 602,
        ""episodeFileId"": 0,
        ""seasonNumber"": 1,
        ""episodeNumber"": 7,
        ""title"": ""Best Friends"",
        ""airDate"": ""2023-05-28"",
        ""airDateUtc"": ""2023-05-28T07:00:00Z"",
        ""hasFile"": false,
        ""monitored"": true,
        ""unverifiedSceneNumbering"": false,
        ""series"": {
            ""title"": ""Fatal Attraction (2023)"",
            ""sortTitle"": ""fatal attraction 2023"",
            ""seasonCount"": 1,
            ""status"": ""continuing"",
            ""overview"": ""A deep-dive reimagining of the classic psychosexual thriller and ‘80s cultural touchstone, the new series will explore fatal attraction and the timeless themes of marriage and infidelity, through the lens of modern attitudes towards strong women, personality disorders and coercive control."",
            ""network"": ""Paramount+"",
            ""airTime"": ""03:00"",
            ""images"": [
                {
                    ""coverType"": ""banner"",
                    ""url"": ""https://artworks.thetvdb.com/banners/v4/series/397426/banners/644db0bf9c247.jpg""
                },
                {
                    ""coverType"": ""poster"",
                    ""url"": ""https://artworks.thetvdb.com/banners/v4/series/397426/posters/6443295b1fe8c.jpg""
                },
                {
                    ""coverType"": ""fanart"",
                    ""url"": ""https://artworks.thetvdb.com/banners/v4/series/397426/backgrounds/6443b51870a35.jpg""
                },
                {
                    ""coverType"": ""unknown"",
                    ""url"": ""https://artworks.thetvdb.com/banners/v4/series/397426/clearlogo/6456b9d165fd1.png""
                }
            ],
            ""seasons"": [
                {
                    ""seasonNumber"": 1,
                    ""monitored"": true
                }
            ],
            ""year"": 2023,
            ""path"": ""E:\\TV\\Fatal Attraction (2023)"",
            ""profileId"": 5,
            ""languageProfileId"": 1,
            ""seasonFolder"": false,
            ""monitored"": true,
            ""useSceneNumbering"": false,
            ""runtime"": 59,
            ""tvdbId"": 397426,
            ""tvRageId"": 0,
            ""tvMazeId"": 58938,
            ""firstAired"": ""2023-04-30T00:00:00Z"",
            ""lastInfoSync"": ""2023-05-27T06:31:33.0872694Z"",
            ""seriesType"": ""standard"",
            ""cleanTitle"": ""fatalattraction2023"",
            ""imdbId"": ""tt14351748"",
            ""titleSlug"": ""fatal-attraction-2023"",
            ""certification"": ""TV-MA"",
            ""genres"": [
                ""Thriller""
            ],
            ""tags"": [],
            ""added"": ""2023-04-13T17:12:56.2157032Z"",
            ""ratings"": {
                ""votes"": 0,
                ""value"": 0
            },
            ""qualityProfileId"": 5,
            ""id"": 602
        },
        ""id"": 30410
    },
    {
        ""seriesId"": 602,
        ""episodeFileId"": 0,
        ""seasonNumber"": 1,
        ""episodeNumber"": 8,
        ""title"": ""Caregiving"",
        ""airDate"": ""2023-05-28"",
        ""airDateUtc"": ""2023-05-28T07:59:00Z"",
        ""hasFile"": false,
        ""monitored"": true,
        ""unverifiedSceneNumbering"": false,
        ""series"": {
            ""title"": ""Fatal Attraction (2023)"",
            ""sortTitle"": ""fatal attraction 2023"",
            ""seasonCount"": 1,
            ""status"": ""continuing"",
            ""overview"": ""A deep-dive reimagining of the classic psychosexual thriller and ‘80s cultural touchstone, the new series will explore fatal attraction and the timeless themes of marriage and infidelity, through the lens of modern attitudes towards strong women, personality disorders and coercive control."",
            ""network"": ""Paramount+"",
            ""airTime"": ""03:00"",
            ""images"": [
                {
                    ""coverType"": ""banner"",
                    ""url"": ""https://artworks.thetvdb.com/banners/v4/series/397426/banners/644db0bf9c247.jpg""
                },
                {
                    ""coverType"": ""poster"",
                    ""url"": ""https://artworks.thetvdb.com/banners/v4/series/397426/posters/6443295b1fe8c.jpg""
                },
                {
                    ""coverType"": ""fanart"",
                    ""url"": ""https://artworks.thetvdb.com/banners/v4/series/397426/backgrounds/6443b51870a35.jpg""
                },
                {
                    ""coverType"": ""unknown"",
                    ""url"": ""https://artworks.thetvdb.com/banners/v4/series/397426/clearlogo/6456b9d165fd1.png""
                }
            ],
            ""seasons"": [
                {
                    ""seasonNumber"": 1,
                    ""monitored"": true
                }
            ],
            ""year"": 2023,
            ""path"": ""E:\\TV\\Fatal Attraction (2023)"",
            ""profileId"": 5,
            ""languageProfileId"": 1,
            ""seasonFolder"": false,
            ""monitored"": true,
            ""useSceneNumbering"": false,
            ""runtime"": 59,
            ""tvdbId"": 397426,
            ""tvRageId"": 0,
            ""tvMazeId"": 58938,
            ""firstAired"": ""2023-04-30T00:00:00Z"",
            ""lastInfoSync"": ""2023-05-27T06:31:33.0872694Z"",
            ""seriesType"": ""standard"",
            ""cleanTitle"": ""fatalattraction2023"",
            ""imdbId"": ""tt14351748"",
            ""titleSlug"": ""fatal-attraction-2023"",
            ""certification"": ""TV-MA"",
            ""genres"": [
                ""Thriller""
            ],
            ""tags"": [],
            ""added"": ""2023-04-13T17:12:56.2157032Z"",
            ""ratings"": {
                ""votes"": 0,
                ""value"": 0
            },
            ""qualityProfileId"": 5,
            ""id"": 602
        },
        ""id"": 30411
    },
    {
        ""seriesId"": 578,
        ""episodeFileId"": 0,
        ""seasonNumber"": 4,
        ""episodeNumber"": 8,
        ""title"": ""The Mu in Muichiro"",
        ""airDate"": ""2023-05-28"",
        ""airDateUtc"": ""2023-05-28T14:15:00Z"",
        ""hasFile"": false,
        ""monitored"": true,
        ""absoluteEpisodeNumber"": 52,
        ""sceneAbsoluteEpisodeNumber"": 8,
        ""sceneEpisodeNumber"": 8,
        ""sceneSeasonNumber"": 4,
        ""unverifiedSceneNumbering"": false,
        ""series"": {
            ""title"": ""Demon Slayer: Kimetsu no Yaiba"",
            ""sortTitle"": ""demon slayer kimetsu no yaiba"",
            ""seasonCount"": 4,
            ""status"": ""continuing"",
            ""overview"": ""It is the Taisho Period in Japan. Tanjiro, a kindhearted boy who sells charcoal for a living, finds his family slaughtered by a demon. To make matters worse, his younger sister Nezuko, the sole survivor, has been transformed into a demon herself. Though devastated by this grim reality, Tanjiro resolves to become a “demon slayer” so that he can turn his sister back into a human, and kill the demon that massacred his family."",
            ""network"": ""Fuji TV"",
            ""airTime"": ""23:15"",
            ""images"": [
                {
                    ""coverType"": ""banner"",
                    ""url"": ""https://artworks.thetvdb.com/banners/graphical/5ccd960cc3aa0.jpg""
                },
                {
                    ""coverType"": ""poster"",
                    ""url"": ""https://artworks.thetvdb.com/banners/v4/series/348545/posters/60908d475f49a.jpg""
                },
                {
                    ""coverType"": ""fanart"",
                    ""url"": ""https://artworks.thetvdb.com/banners/fanart/original/5c93cbb2b60b6.jpg""
                },
                {
                    ""coverType"": ""unknown"",
                    ""url"": ""https://artworks.thetvdb.com/banners/v4/series/348545/clearlogo/611c7fa8222d6.png""
                }
            ],
            ""seasons"": [
                {
                    ""seasonNumber"": 0,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 1,
                    ""monitored"": true
                },
                {
                    ""seasonNumber"": 2,
                    ""monitored"": true
                },
                {
                    ""seasonNumber"": 3,
                    ""monitored"": true
                },
                {
                    ""seasonNumber"": 4,
                    ""monitored"": true
                }
            ],
            ""year"": 2019,
            ""path"": ""E:\\TV\\Demon Slayer - Kimetsu no Yaiba"",
            ""profileId"": 5,
            ""languageProfileId"": 1,
            ""seasonFolder"": false,
            ""monitored"": true,
            ""useSceneNumbering"": true,
            ""runtime"": 25,
            ""tvdbId"": 348545,
            ""tvRageId"": 0,
            ""tvMazeId"": 41469,
            ""firstAired"": ""2019-04-06T00:00:00Z"",
            ""lastInfoSync"": ""2023-05-27T06:31:31.7675057Z"",
            ""seriesType"": ""anime"",
            ""cleanTitle"": ""demonslayerkimetsunoyaiba"",
            ""imdbId"": ""tt9335498"",
            ""titleSlug"": ""demon-slayer-kimetsu-no-yaiba"",
            ""certification"": ""TV-MA"",
            ""genres"": [
                ""Action"",
                ""Adventure"",
                ""Animation"",
                ""Anime"",
                ""Drama"",
                ""Fantasy"",
                ""Thriller""
            ],
            ""tags"": [],
            ""added"": ""2023-02-12T06:09:07.3848417Z"",
            ""ratings"": {
                ""votes"": 0,
                ""value"": 0
            },
            ""qualityProfileId"": 5,
            ""id"": 578
        },
        ""id"": 30309
    },
    {
        ""seriesId"": 253,
        ""episodeFileId"": 0,
        ""seasonNumber"": 55,
        ""episodeNumber"": 36,
        ""title"": ""TBD"",
        ""airDate"": ""2023-05-28"",
        ""airDateUtc"": ""2023-05-28T23:00:00Z"",
        ""hasFile"": false,
        ""monitored"": true,
        ""unverifiedSceneNumbering"": false,
        ""series"": {
            ""title"": ""60 Minutes"",
            ""sortTitle"": ""60 minutes"",
            ""seasonCount"": 55,
            ""status"": ""continuing"",
            ""overview"": ""60 Minutes has been on the air since 1968, beginning on a Tuesday, but spending most of its time on Sundays, where it remains today.\r\n\r\nThis popular news magazine provides both hard hitting investigations, interviews and features, along with people in the news and current events.\r\n\r\n60 Minutes has set unprecedented records in the Nielsen's ratings with a number 1 rating, five times, making it among the most successful TV programs in all of television history.\r\n\r\nThis series has won more Emmy awards than any other news program and in 2003, Don Hewitt, the creator (back in 1968), was awarded the Lifetime Achievement Emmy, along with the 60 Minute correspondents.\r\n\r\nAdded to the 11 Peabody awards, this phenomenally long-lived series has collected 78 awards up to the 2005 season and remains among the viewers top choice for news magazine features."",
            ""network"": ""CBS"",
            ""airTime"": ""19:00"",
            ""images"": [
                {
                    ""coverType"": ""banner"",
                    ""url"": ""https://artworks.thetvdb.com/banners/graphical/73290-g.jpg""
                },
                {
                    ""coverType"": ""poster"",
                    ""url"": ""https://artworks.thetvdb.com/banners/posters/73290-2.jpg""
                },
                {
                    ""coverType"": ""fanart"",
                    ""url"": ""https://artworks.thetvdb.com/banners/fanart/original/73290-1.jpg""
                },
                {
                    ""coverType"": ""unknown"",
                    ""url"": ""https://artworks.thetvdb.com/banners/v4/series/73290/clearlogo/611c149b4148b.png""
                }
            ],
            ""seasons"": [
                {
                    ""seasonNumber"": 1,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 2,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 3,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 4,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 5,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 6,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 7,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 8,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 9,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 10,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 11,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 12,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 13,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 14,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 15,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 16,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 17,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 18,
                    ""monitored"": true
                },
                {
                    ""seasonNumber"": 19,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 20,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 21,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 22,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 23,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 24,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 25,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 26,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 27,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 28,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 29,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 30,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 31,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 32,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 33,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 34,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 35,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 36,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 37,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 38,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 39,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 40,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 41,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 42,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 43,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 44,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 45,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 46,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 47,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 48,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 49,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 50,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 51,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 52,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 53,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 54,
                    ""monitored"": true
                },
                {
                    ""seasonNumber"": 55,
                    ""monitored"": true
                }
            ],
            ""year"": 1968,
            ""path"": ""E:\\TV\\60 Minutes"",
            ""profileId"": 5,
            ""languageProfileId"": 1,
            ""seasonFolder"": false,
            ""monitored"": true,
            ""useSceneNumbering"": false,
            ""runtime"": 45,
            ""tvdbId"": 73290,
            ""tvRageId"": 7101,
            ""tvMazeId"": 4022,
            ""firstAired"": ""1968-09-24T00:00:00Z"",
            ""lastInfoSync"": ""2023-05-27T06:31:28.1080133Z"",
            ""seriesType"": ""standard"",
            ""cleanTitle"": ""60minutes"",
            ""imdbId"": ""tt0123338"",
            ""titleSlug"": ""60-minutes"",
            ""certification"": ""TV-PG"",
            ""genres"": [
                ""Documentary"",
                ""News""
            ],
            ""tags"": [],
            ""added"": ""2019-05-10T15:14:19.2356173Z"",
            ""ratings"": {
                ""votes"": 0,
                ""value"": 0
            },
            ""qualityProfileId"": 5,
            ""id"": 253
        },
        ""id"": 29457
    },
    {
        ""seriesId"": 69,
        ""episodeFileId"": 0,
        ""seasonNumber"": 8,
        ""episodeNumber"": 3,
        ""title"": ""Odessa"",
        ""airDate"": ""2023-05-28"",
        ""airDateUtc"": ""2023-05-29T01:00:00Z"",
        ""overview"": ""Mo's hunt to prove PADRE's true intentions has her in over her head as she's drawn into the larger web of secrets."",
        ""hasFile"": false,
        ""monitored"": true,
        ""absoluteEpisodeNumber"": 104,
        ""unverifiedSceneNumbering"": false,
        ""series"": {
            ""title"": ""Fear the Walking Dead"",
            ""sortTitle"": ""fear the walking dead"",
            ""seasonCount"": 8,
            ""status"": ""continuing"",
            ""overview"": ""In Los Angeles, a city where people come to escape, shield secrets, and bury their pasts, we follow this mysterious outbreak as it threatens to disrupt what little stability high school guidance counselor Madison Clark and English teacher Travis Manawa have managed to assemble. \r\n\r\nThe pressure of blending two families while dealing with resentful, escapist, and strung out children takes a back seat when society begins to break down. A forced evolution, and survival of the fittest takes hold, as our dysfunctional family finds they must either reinvent themselves or embrace their darker histories."",
            ""network"": ""AMC"",
            ""airTime"": ""21:00"",
            ""images"": [
                {
                    ""coverType"": ""banner"",
                    ""url"": ""https://artworks.thetvdb.com/banners/graphical/290853-g6.jpg""
                },
                {
                    ""coverType"": ""poster"",
                    ""url"": ""https://artworks.thetvdb.com/banners/posters/290853-8.jpg""
                },
                {
                    ""coverType"": ""fanart"",
                    ""url"": ""https://artworks.thetvdb.com/banners/fanart/original/290853-19.jpg""
                },
                {
                    ""coverType"": ""unknown"",
                    ""url"": ""https://artworks.thetvdb.com/banners/v4/series/290853/clearlogo/611b6b47a3975.png""
                }
            ],
            ""seasons"": [
                {
                    ""seasonNumber"": 0,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 1,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 2,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 3,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 4,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 5,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 6,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 7,
                    ""monitored"": true
                },
                {
                    ""seasonNumber"": 8,
                    ""monitored"": true
                }
            ],
            ""year"": 2015,
            ""path"": ""E:\\TV\\Fear the Walking Dead"",
            ""profileId"": 5,
            ""languageProfileId"": 1,
            ""seasonFolder"": false,
            ""monitored"": true,
            ""useSceneNumbering"": false,
            ""runtime"": 46,
            ""tvdbId"": 290853,
            ""tvRageId"": 48384,
            ""tvMazeId"": 1824,
            ""firstAired"": ""2015-08-23T00:00:00Z"",
            ""lastInfoSync"": ""2023-05-27T06:31:33.1966475Z"",
            ""seriesType"": ""standard"",
            ""cleanTitle"": ""fearwalkingdead"",
            ""imdbId"": ""tt3743822"",
            ""titleSlug"": ""fear-the-walking-dead"",
            ""certification"": ""TV-MA"",
            ""genres"": [
                ""Drama"",
                ""Horror"",
                ""Science Fiction"",
                ""Thriller""
            ],
            ""tags"": [],
            ""added"": ""2015-09-07T18:01:51.3719329Z"",
            ""ratings"": {
                ""votes"": 0,
                ""value"": 0
            },
            ""qualityProfileId"": 5,
            ""id"": 69
        },
        ""id"": 28948
    },
    {
        ""seriesId"": 269,
        ""episodeFileId"": 0,
        ""seasonNumber"": 4,
        ""episodeNumber"": 8,
        ""title"": ""wow"",
        ""airDate"": ""2023-05-28"",
        ""airDateUtc"": ""2023-05-29T02:00:00Z"",
        ""overview"": ""That’s it."",
        ""hasFile"": false,
        ""monitored"": true,
        ""unverifiedSceneNumbering"": false,
        ""series"": {
            ""title"": ""Barry"",
            ""sortTitle"": ""barry"",
            ""seasonCount"": 4,
            ""status"": ""continuing"",
            ""overview"": ""After following his intended target to an acting class, a hitman finds himself intrigued and decides to become an actor and change his life."",
            ""network"": ""HBO"",
            ""airTime"": ""22:00"",
            ""images"": [
                {
                    ""coverType"": ""banner"",
                    ""url"": ""https://artworks.thetvdb.com/banners/graphical/333072-g2.jpg""
                },
                {
                    ""coverType"": ""poster"",
                    ""url"": ""https://artworks.thetvdb.com/banners/posters/333072-3.jpg""
                },
                {
                    ""coverType"": ""fanart"",
                    ""url"": ""https://artworks.thetvdb.com/banners/fanart/original/333072-3.jpg""
                },
                {
                    ""coverType"": ""unknown"",
                    ""url"": ""https://artworks.thetvdb.com/banners/v4/series/333072/clearlogo/611be3e7414ca.png""
                }
            ],
            ""seasons"": [
                {
                    ""seasonNumber"": 1,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 2,
                    ""monitored"": true
                },
                {
                    ""seasonNumber"": 3,
                    ""monitored"": true
                },
                {
                    ""seasonNumber"": 4,
                    ""monitored"": true
                }
            ],
            ""year"": 2018,
            ""path"": ""E:\\TV\\Barry"",
            ""profileId"": 5,
            ""languageProfileId"": 1,
            ""seasonFolder"": false,
            ""monitored"": true,
            ""useSceneNumbering"": false,
            ""runtime"": 30,
            ""tvdbId"": 333072,
            ""tvRageId"": 0,
            ""tvMazeId"": 11538,
            ""firstAired"": ""2018-03-25T00:00:00Z"",
            ""lastInfoSync"": ""2023-05-27T06:31:30.2883019Z"",
            ""seriesType"": ""standard"",
            ""cleanTitle"": ""barry"",
            ""imdbId"": ""tt5348176"",
            ""titleSlug"": ""barry"",
            ""certification"": ""TV-MA"",
            ""genres"": [
                ""Comedy"",
                ""Crime"",
                ""Drama""
            ],
            ""tags"": [],
            ""added"": ""2019-10-14T19:53:24.4547635Z"",
            ""ratings"": {
                ""votes"": 0,
                ""value"": 0
            },
            ""qualityProfileId"": 5,
            ""id"": 269
        },
        ""id"": 28944
    },
    {
        ""seriesId"": 21,
        ""episodeFileId"": 0,
        ""seasonNumber"": 20,
        ""episodeNumber"": 9,
        ""title"": ""Saving Face"",
        ""airDate"": ""2023-05-29"",
        ""airDateUtc"": ""2023-05-30T02:00:00Z"",
        ""overview"": ""In an attempt to maintain his \""prime,\"" Stan explores some cosmetic solutions that could not go worse."",
        ""hasFile"": false,
        ""monitored"": true,
        ""sceneAbsoluteEpisodeNumber"": 356,
        ""sceneEpisodeNumber"": 9,
        ""sceneSeasonNumber"": 19,
        ""unverifiedSceneNumbering"": false,
        ""series"": {
            ""title"": ""American Dad!"",
            ""sortTitle"": ""american dad"",
            ""seasonCount"": 20,
            ""status"": ""continuing"",
            ""overview"": ""CIA Agent Stan Smith is constantly fighting off terrorists who threaten the safety of the USA (sometimes causing more harm than good). His wife Francine is an average housewife with two kids: Hayley, an average rebellious teenager and Steve, a geek who enjoys Dungeons and Dragons, gaming and comic book conventions. Then there’s Roger, the home’s illegal (space) alien who the Smith’s are keeping protected. Last but not least, there’s Klaus, the Smiths’ wisecracking talking fish (swapped from  his human body years ago by the CIA)."",
            ""network"": ""TBS"",
            ""airTime"": ""22:00"",
            ""images"": [
                {
                    ""coverType"": ""banner"",
                    ""url"": ""https://artworks.thetvdb.com/banners/graphical/73141-g7.jpg""
                },
                {
                    ""coverType"": ""poster"",
                    ""url"": ""https://artworks.thetvdb.com/banners/posters/73141-10.jpg""
                },
                {
                    ""coverType"": ""fanart"",
                    ""url"": ""https://artworks.thetvdb.com/banners/fanart/original/73141-1.jpg""
                },
                {
                    ""coverType"": ""unknown"",
                    ""url"": ""https://artworks.thetvdb.com/banners/v4/series/73141/clearlogo/611b561aac078.png""
                }
            ],
            ""seasons"": [
                {
                    ""seasonNumber"": 0,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 1,
                    ""monitored"": true
                },
                {
                    ""seasonNumber"": 2,
                    ""monitored"": true
                },
                {
                    ""seasonNumber"": 3,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 4,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 5,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 6,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 7,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 8,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 9,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 10,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 11,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 12,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 13,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 14,
                    ""monitored"": true
                },
                {
                    ""seasonNumber"": 15,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 16,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 17,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 18,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 19,
                    ""monitored"": true
                },
                {
                    ""seasonNumber"": 20,
                    ""monitored"": true
                }
            ],
            ""year"": 2005,
            ""path"": ""E:\\TV\\American Dad!"",
            ""profileId"": 5,
            ""languageProfileId"": 1,
            ""seasonFolder"": false,
            ""monitored"": true,
            ""useSceneNumbering"": true,
            ""runtime"": 24,
            ""tvdbId"": 73141,
            ""tvRageId"": 2594,
            ""tvMazeId"": 215,
            ""firstAired"": ""2005-02-06T00:00:00Z"",
            ""lastInfoSync"": ""2023-05-27T06:31:29.171432Z"",
            ""seriesType"": ""standard"",
            ""cleanTitle"": ""americandad"",
            ""imdbId"": ""tt0397306"",
            ""titleSlug"": ""american-dad"",
            ""certification"": ""TV-14"",
            ""genres"": [
                ""Animation"",
                ""Comedy""
            ],
            ""tags"": [],
            ""added"": ""2015-03-04T21:40:19.6522305Z"",
            ""ratings"": {
                ""votes"": 0,
                ""value"": 0
            },
            ""qualityProfileId"": 5,
            ""id"": 21
        },
        ""id"": 31340
    },
    {
        ""seriesId"": 393,
        ""episodeFileId"": 0,
        ""seasonNumber"": 3,
        ""episodeNumber"": 10,
        ""title"": ""Collision Course"",
        ""airDate"": ""2023-05-30"",
        ""airDateUtc"": ""2023-05-31T00:00:00Z"",
        ""overview"": ""Lois attempts to interview Peia in the hopes of unearthing the truth about an old case, while Clarke struggles to spend quality time with the boys. Meanwhile, Jonathan and Jordan find themselves at a party, where tensions between Sarah and Jordan come to a head. As Kyle’s suspicions about a local meta-human grow, Lana must juggle her personal life with a visit from the governor. Finally, Matteo makes a life-altering decision."",
        ""hasFile"": false,
        ""monitored"": true,
        ""unverifiedSceneNumbering"": false,
        ""series"": {
            ""title"": ""Superman & Lois"",
            ""sortTitle"": ""superman lois"",
            ""seasonCount"": 3,
            ""status"": ""continuing"",
            ""overview"": ""After years of facing megalomaniacal supervillains, monsters wreaking havoc on Metropolis, and alien invaders intent on wiping out the human race, The Man of Steel aka Clark Kent and Lois Lane come face to face with one of their greatest challenges ever: dealing with all the stress, pressures and complexities that come with being working parents in today's society."",
            ""network"": ""The CW"",
            ""airTime"": ""20:00"",
            ""images"": [
                {
                    ""coverType"": ""banner"",
                    ""url"": ""https://artworks.thetvdb.com/banners/series/375655/banners/602ae554c5c91.jpg""
                },
                {
                    ""coverType"": ""poster"",
                    ""url"": ""https://artworks.thetvdb.com/banners/series/375655/posters/60129216a3b3e.jpg""
                },
                {
                    ""coverType"": ""fanart"",
                    ""url"": ""https://artworks.thetvdb.com/banners/series/375655/backgrounds/602ae42ff08f7.jpg""
                },
                {
                    ""coverType"": ""unknown"",
                    ""url"": ""https://artworks.thetvdb.com/banners/v4/series/375655/clearlogo/611bf0c8b84e7.png""
                }
            ],
            ""seasons"": [
                {
                    ""seasonNumber"": 0,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 1,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 2,
                    ""monitored"": true
                },
                {
                    ""seasonNumber"": 3,
                    ""monitored"": true
                }
            ],
            ""year"": 2021,
            ""path"": ""E:\\TV\\Superman & Lois"",
            ""profileId"": 5,
            ""languageProfileId"": 1,
            ""seasonFolder"": false,
            ""monitored"": true,
            ""useSceneNumbering"": false,
            ""runtime"": 43,
            ""tvdbId"": 375655,
            ""tvRageId"": 0,
            ""tvMazeId"": 44751,
            ""firstAired"": ""2021-02-23T00:00:00Z"",
            ""lastInfoSync"": ""2023-05-27T06:31:43.7884318Z"",
            ""seriesType"": ""standard"",
            ""cleanTitle"": ""supermanlois"",
            ""imdbId"": ""tt11192306"",
            ""titleSlug"": ""superman-and-lois"",
            ""certification"": ""TV-PG"",
            ""genres"": [
                ""Action"",
                ""Adventure"",
                ""Drama"",
                ""Fantasy"",
                ""Romance"",
                ""Science Fiction""
            ],
            ""tags"": [],
            ""added"": ""2021-01-29T22:00:08.5928657Z"",
            ""ratings"": {
                ""votes"": 0,
                ""value"": 0
            },
            ""qualityProfileId"": 5,
            ""id"": 393
        },
        ""id"": 30414
    },
    {
        ""seriesId"": 583,
        ""episodeFileId"": 0,
        ""seasonNumber"": 1,
        ""episodeNumber"": 10,
        ""title"": ""Poison Pill"",
        ""airDate"": ""2023-05-30"",
        ""airDateUtc"": ""2023-05-31T01:00:00Z"",
        ""overview"": ""With one of their own in trouble, the team scrambles to find a solution before it’s too late. Elsewhere, Harvey undertakes a risky gambit to get the answers he seeks. Finally, Brody turns to Stephanie after he stumbles upon some information involving his father Lincoln."",
        ""hasFile"": false,
        ""monitored"": true,
        ""absoluteEpisodeNumber"": 10,
        ""unverifiedSceneNumbering"": false,
        ""series"": {
            ""title"": ""Gotham Knights"",
            ""sortTitle"": ""gotham knights"",
            ""seasonCount"": 1,
            ""status"": ""continuing"",
            ""overview"": ""In the wake of Bruce Wayne’s murder, his rebellious adopted son forges an unlikely alliance with the children of Batman’s enemies when they are all framed for killing the Caped Crusader."",
            ""network"": ""The CW"",
            ""airTime"": ""21:00"",
            ""images"": [
                {
                    ""coverType"": ""banner"",
                    ""url"": ""https://artworks.thetvdb.com/banners/v4/series/420061/banners/6411804ebd1a9.jpg""
                },
                {
                    ""coverType"": ""poster"",
                    ""url"": ""https://artworks.thetvdb.com/banners/v4/series/420061/posters/63ee9e71cf3a7.jpg""
                },
                {
                    ""coverType"": ""fanart"",
                    ""url"": ""https://artworks.thetvdb.com/banners/v4/series/420061/backgrounds/6411801da94c6.jpg""
                },
                {
                    ""coverType"": ""unknown"",
                    ""url"": ""https://artworks.thetvdb.com/banners/v4/series/420061/clearlogo/641202a7bbb75.png""
                }
            ],
            ""seasons"": [
                {
                    ""seasonNumber"": 1,
                    ""monitored"": true
                }
            ],
            ""year"": 2023,
            ""path"": ""E:\\TV\\Gotham Knights"",
            ""profileId"": 5,
            ""languageProfileId"": 1,
            ""seasonFolder"": false,
            ""monitored"": true,
            ""useSceneNumbering"": false,
            ""runtime"": 42,
            ""tvdbId"": 420061,
            ""tvRageId"": 0,
            ""tvMazeId"": 59492,
            ""firstAired"": ""2023-03-14T00:00:00Z"",
            ""lastInfoSync"": ""2023-05-27T06:31:34.4627453Z"",
            ""seriesType"": ""standard"",
            ""cleanTitle"": ""gothamknights"",
            ""imdbId"": ""tt16418896"",
            ""titleSlug"": ""gotham-knights"",
            ""certification"": ""TV-14"",
            ""genres"": [
                ""Action"",
                ""Crime"",
                ""Drama""
            ],
            ""tags"": [],
            ""added"": ""2023-02-21T22:27:09.6745103Z"",
            ""ratings"": {
                ""votes"": 0,
                ""value"": 0
            },
            ""qualityProfileId"": 5,
            ""id"": 583
        },
        ""id"": 29330
    },
    {
        ""seriesId"": 490,
        ""episodeFileId"": 0,
        ""seasonNumber"": 3,
        ""episodeNumber"": 12,
        ""title"": ""So Long, Farewell"",
        ""airDate"": ""2023-05-31"",
        ""airDateUtc"": ""2023-05-31T04:00:00Z"",
        ""overview"": ""AFC Richmond play their final match of the season."",
        ""hasFile"": false,
        ""monitored"": true,
        ""unverifiedSceneNumbering"": false,
        ""series"": {
            ""title"": ""Ted Lasso"",
            ""sortTitle"": ""ted lasso"",
            ""seasonCount"": 3,
            ""status"": ""continuing"",
            ""overview"": ""Ted Lasso, an American football coach, moves to England when he’s hired to manage a soccer team—despite having no experience. With cynical players and a doubtful town, will he get them to see the Ted Lasso Way?"",
            ""network"": ""Apple TV+"",
            ""airTime"": ""00:00"",
            ""images"": [
                {
                    ""coverType"": ""banner"",
                    ""url"": ""https://artworks.thetvdb.com/banners/v4/series/383203/banners/60dfad53daf18.jpg""
                },
                {
                    ""coverType"": ""poster"",
                    ""url"": ""https://artworks.thetvdb.com/banners/v4/series/383203/posters/6293c2101b7e7.jpg""
                },
                {
                    ""coverType"": ""fanart"",
                    ""url"": ""https://artworks.thetvdb.com/banners/v4/series/383203/backgrounds/60d5931c1f29c.jpg""
                },
                {
                    ""coverType"": ""unknown"",
                    ""url"": ""https://artworks.thetvdb.com/banners/v4/series/383203/clearlogo/611c3acf767fe.png""
                }
            ],
            ""seasons"": [
                {
                    ""seasonNumber"": 0,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 1,
                    ""monitored"": true
                },
                {
                    ""seasonNumber"": 2,
                    ""monitored"": true
                },
                {
                    ""seasonNumber"": 3,
                    ""monitored"": true
                }
            ],
            ""year"": 2020,
            ""path"": ""E:\\TV\\Ted Lasso"",
            ""profileId"": 1,
            ""languageProfileId"": 1,
            ""seasonFolder"": false,
            ""monitored"": true,
            ""useSceneNumbering"": false,
            ""runtime"": 41,
            ""tvdbId"": 383203,
            ""tvRageId"": 0,
            ""tvMazeId"": 44458,
            ""firstAired"": ""2020-08-14T00:00:00Z"",
            ""lastInfoSync"": ""2023-05-27T06:31:44.4139075Z"",
            ""seriesType"": ""standard"",
            ""cleanTitle"": ""tedlasso"",
            ""imdbId"": ""tt10986410"",
            ""titleSlug"": ""ted-lasso"",
            ""certification"": ""TV-MA"",
            ""genres"": [
                ""Comedy"",
                ""Drama"",
                ""Sport""
            ],
            ""tags"": [],
            ""added"": ""2022-03-17T06:27:10.8779074Z"",
            ""ratings"": {
                ""votes"": 0,
                ""value"": 0
            },
            ""qualityProfileId"": 1,
            ""id"": 490
        },
        ""id"": 29230
    }
]"
eGNYsSmr,Sonarr-V3-Calendar,MKANET,JSON,Saturday 27th of May 2023 02:01:19 AM CDT,"[
    {
        ""seriesId"": 602,
        ""tvdbId"": 9687474,
        ""episodeFileId"": 0,
        ""seasonNumber"": 1,
        ""episodeNumber"": 7,
        ""title"": ""Best Friends"",
        ""airDate"": ""2023-05-28"",
        ""airDateUtc"": ""2023-05-28T07:00:00Z"",
        ""hasFile"": false,
        ""monitored"": true,
        ""unverifiedSceneNumbering"": false,
        ""series"": {
            ""title"": ""Fatal Attraction (2023)"",
            ""sortTitle"": ""fatal attraction 2023"",
            ""status"": ""continuing"",
            ""ended"": false,
            ""overview"": ""A deep-dive reimagining of the classic psychosexual thriller and ‘80s cultural touchstone, the new series will explore fatal attraction and the timeless themes of marriage and infidelity, through the lens of modern attitudes towards strong women, personality disorders and coercive control."",
            ""network"": ""Paramount+"",
            ""airTime"": ""03:00"",
            ""images"": [
                {
                    ""coverType"": ""banner"",
                    ""url"": ""https://artworks.thetvdb.com/banners/v4/series/397426/banners/644db0bf9c247.jpg""
                },
                {
                    ""coverType"": ""poster"",
                    ""url"": ""https://artworks.thetvdb.com/banners/v4/series/397426/posters/6443295b1fe8c.jpg""
                },
                {
                    ""coverType"": ""fanart"",
                    ""url"": ""https://artworks.thetvdb.com/banners/v4/series/397426/backgrounds/6443b51870a35.jpg""
                },
                {
                    ""coverType"": ""unknown"",
                    ""url"": ""https://artworks.thetvdb.com/banners/v4/series/397426/clearlogo/6456b9d165fd1.png""
                }
            ],
            ""seasons"": [
                {
                    ""seasonNumber"": 1,
                    ""monitored"": true
                }
            ],
            ""year"": 2023,
            ""path"": ""E:\\TV\\Fatal Attraction (2023)"",
            ""qualityProfileId"": 5,
            ""languageProfileId"": 1,
            ""seasonFolder"": false,
            ""monitored"": true,
            ""useSceneNumbering"": false,
            ""runtime"": 59,
            ""tvdbId"": 397426,
            ""tvRageId"": 0,
            ""tvMazeId"": 58938,
            ""firstAired"": ""2023-04-30T00:00:00Z"",
            ""seriesType"": ""standard"",
            ""cleanTitle"": ""fatalattraction2023"",
            ""imdbId"": ""tt14351748"",
            ""titleSlug"": ""fatal-attraction-2023"",
            ""certification"": ""TV-MA"",
            ""genres"": [
                ""Thriller""
            ],
            ""tags"": [],
            ""added"": ""2023-04-13T17:12:56.2157032Z"",
            ""ratings"": {
                ""votes"": 0,
                ""value"": 0
            },
            ""id"": 602
        },
        ""images"": [
            {
                ""coverType"": ""screenshot"",
                ""url"": ""https://artworks.thetvdb.com/banners/v4/episode/9687474/screencap/646cf6d94cf88.jpg""
            }
        ],
        ""id"": 30410
    },
    {
        ""seriesId"": 602,
        ""tvdbId"": 9687475,
        ""episodeFileId"": 0,
        ""seasonNumber"": 1,
        ""episodeNumber"": 8,
        ""title"": ""Caregiving"",
        ""airDate"": ""2023-05-28"",
        ""airDateUtc"": ""2023-05-28T07:59:00Z"",
        ""hasFile"": false,
        ""monitored"": true,
        ""unverifiedSceneNumbering"": false,
        ""series"": {
            ""title"": ""Fatal Attraction (2023)"",
            ""sortTitle"": ""fatal attraction 2023"",
            ""status"": ""continuing"",
            ""ended"": false,
            ""overview"": ""A deep-dive reimagining of the classic psychosexual thriller and ‘80s cultural touchstone, the new series will explore fatal attraction and the timeless themes of marriage and infidelity, through the lens of modern attitudes towards strong women, personality disorders and coercive control."",
            ""network"": ""Paramount+"",
            ""airTime"": ""03:00"",
            ""images"": [
                {
                    ""coverType"": ""banner"",
                    ""url"": ""https://artworks.thetvdb.com/banners/v4/series/397426/banners/644db0bf9c247.jpg""
                },
                {
                    ""coverType"": ""poster"",
                    ""url"": ""https://artworks.thetvdb.com/banners/v4/series/397426/posters/6443295b1fe8c.jpg""
                },
                {
                    ""coverType"": ""fanart"",
                    ""url"": ""https://artworks.thetvdb.com/banners/v4/series/397426/backgrounds/6443b51870a35.jpg""
                },
                {
                    ""coverType"": ""unknown"",
                    ""url"": ""https://artworks.thetvdb.com/banners/v4/series/397426/clearlogo/6456b9d165fd1.png""
                }
            ],
            ""seasons"": [
                {
                    ""seasonNumber"": 1,
                    ""monitored"": true
                }
            ],
            ""year"": 2023,
            ""path"": ""E:\\TV\\Fatal Attraction (2023)"",
            ""qualityProfileId"": 5,
            ""languageProfileId"": 1,
            ""seasonFolder"": false,
            ""monitored"": true,
            ""useSceneNumbering"": false,
            ""runtime"": 59,
            ""tvdbId"": 397426,
            ""tvRageId"": 0,
            ""tvMazeId"": 58938,
            ""firstAired"": ""2023-04-30T00:00:00Z"",
            ""seriesType"": ""standard"",
            ""cleanTitle"": ""fatalattraction2023"",
            ""imdbId"": ""tt14351748"",
            ""titleSlug"": ""fatal-attraction-2023"",
            ""certification"": ""TV-MA"",
            ""genres"": [
                ""Thriller""
            ],
            ""tags"": [],
            ""added"": ""2023-04-13T17:12:56.2157032Z"",
            ""ratings"": {
                ""votes"": 0,
                ""value"": 0
            },
            ""id"": 602
        },
        ""images"": [
            {
                ""coverType"": ""screenshot"",
                ""url"": ""https://artworks.thetvdb.com/banners/v4/episode/9687475/screencap/646d006db3193.jpg""
            }
        ],
        ""id"": 30411
    },
    {
        ""seriesId"": 578,
        ""tvdbId"": 9704260,
        ""episodeFileId"": 0,
        ""seasonNumber"": 4,
        ""episodeNumber"": 8,
        ""title"": ""The Mu in Muichiro"",
        ""airDate"": ""2023-05-28"",
        ""airDateUtc"": ""2023-05-28T14:15:00Z"",
        ""hasFile"": false,
        ""monitored"": true,
        ""absoluteEpisodeNumber"": 52,
        ""sceneAbsoluteEpisodeNumber"": 8,
        ""sceneEpisodeNumber"": 8,
        ""sceneSeasonNumber"": 4,
        ""unverifiedSceneNumbering"": false,
        ""series"": {
            ""title"": ""Demon Slayer: Kimetsu no Yaiba"",
            ""sortTitle"": ""demon slayer kimetsu no yaiba"",
            ""status"": ""continuing"",
            ""ended"": false,
            ""overview"": ""It is the Taisho Period in Japan. Tanjiro, a kindhearted boy who sells charcoal for a living, finds his family slaughtered by a demon. To make matters worse, his younger sister Nezuko, the sole survivor, has been transformed into a demon herself. Though devastated by this grim reality, Tanjiro resolves to become a “demon slayer” so that he can turn his sister back into a human, and kill the demon that massacred his family."",
            ""network"": ""Fuji TV"",
            ""airTime"": ""23:15"",
            ""images"": [
                {
                    ""coverType"": ""banner"",
                    ""url"": ""https://artworks.thetvdb.com/banners/graphical/5ccd960cc3aa0.jpg""
                },
                {
                    ""coverType"": ""poster"",
                    ""url"": ""https://artworks.thetvdb.com/banners/v4/series/348545/posters/60908d475f49a.jpg""
                },
                {
                    ""coverType"": ""fanart"",
                    ""url"": ""https://artworks.thetvdb.com/banners/fanart/original/5c93cbb2b60b6.jpg""
                },
                {
                    ""coverType"": ""unknown"",
                    ""url"": ""https://artworks.thetvdb.com/banners/v4/series/348545/clearlogo/611c7fa8222d6.png""
                }
            ],
            ""seasons"": [
                {
                    ""seasonNumber"": 0,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 1,
                    ""monitored"": true
                },
                {
                    ""seasonNumber"": 2,
                    ""monitored"": true
                },
                {
                    ""seasonNumber"": 3,
                    ""monitored"": true
                },
                {
                    ""seasonNumber"": 4,
                    ""monitored"": true
                }
            ],
            ""year"": 2019,
            ""path"": ""E:\\TV\\Demon Slayer - Kimetsu no Yaiba"",
            ""qualityProfileId"": 5,
            ""languageProfileId"": 1,
            ""seasonFolder"": false,
            ""monitored"": true,
            ""useSceneNumbering"": true,
            ""runtime"": 25,
            ""tvdbId"": 348545,
            ""tvRageId"": 0,
            ""tvMazeId"": 41469,
            ""firstAired"": ""2019-04-06T00:00:00Z"",
            ""seriesType"": ""anime"",
            ""cleanTitle"": ""demonslayerkimetsunoyaiba"",
            ""imdbId"": ""tt9335498"",
            ""titleSlug"": ""demon-slayer-kimetsu-no-yaiba"",
            ""certification"": ""TV-MA"",
            ""genres"": [
                ""Action"",
                ""Adventure"",
                ""Animation"",
                ""Anime"",
                ""Drama"",
                ""Fantasy"",
                ""Thriller""
            ],
            ""tags"": [],
            ""added"": ""2023-02-12T06:09:07.3848417Z"",
            ""ratings"": {
                ""votes"": 0,
                ""value"": 0
            },
            ""id"": 578
        },
        ""images"": [
            {
                ""coverType"": ""screenshot"",
                ""url"": ""https://artworks.thetvdb.com/banners/v4/episode/9704260/screencap/646a483b27a81.jpg""
            }
        ],
        ""id"": 30309
    },
    {
        ""seriesId"": 253,
        ""tvdbId"": 9652652,
        ""episodeFileId"": 0,
        ""seasonNumber"": 55,
        ""episodeNumber"": 36,
        ""title"": ""TBD"",
        ""airDate"": ""2023-05-28"",
        ""airDateUtc"": ""2023-05-28T23:00:00Z"",
        ""hasFile"": false,
        ""monitored"": true,
        ""unverifiedSceneNumbering"": false,
        ""series"": {
            ""title"": ""60 Minutes"",
            ""sortTitle"": ""60 minutes"",
            ""status"": ""continuing"",
            ""ended"": false,
            ""overview"": ""60 Minutes has been on the air since 1968, beginning on a Tuesday, but spending most of its time on Sundays, where it remains today.\r\n\r\nThis popular news magazine provides both hard hitting investigations, interviews and features, along with people in the news and current events.\r\n\r\n60 Minutes has set unprecedented records in the Nielsen's ratings with a number 1 rating, five times, making it among the most successful TV programs in all of television history.\r\n\r\nThis series has won more Emmy awards than any other news program and in 2003, Don Hewitt, the creator (back in 1968), was awarded the Lifetime Achievement Emmy, along with the 60 Minute correspondents.\r\n\r\nAdded to the 11 Peabody awards, this phenomenally long-lived series has collected 78 awards up to the 2005 season and remains among the viewers top choice for news magazine features."",
            ""network"": ""CBS"",
            ""airTime"": ""19:00"",
            ""images"": [
                {
                    ""coverType"": ""banner"",
                    ""url"": ""https://artworks.thetvdb.com/banners/graphical/73290-g.jpg""
                },
                {
                    ""coverType"": ""poster"",
                    ""url"": ""https://artworks.thetvdb.com/banners/posters/73290-2.jpg""
                },
                {
                    ""coverType"": ""fanart"",
                    ""url"": ""https://artworks.thetvdb.com/banners/fanart/original/73290-1.jpg""
                },
                {
                    ""coverType"": ""unknown"",
                    ""url"": ""https://artworks.thetvdb.com/banners/v4/series/73290/clearlogo/611c149b4148b.png""
                }
            ],
            ""seasons"": [
                {
                    ""seasonNumber"": 1,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 2,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 3,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 4,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 5,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 6,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 7,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 8,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 9,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 10,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 11,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 12,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 13,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 14,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 15,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 16,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 17,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 18,
                    ""monitored"": true
                },
                {
                    ""seasonNumber"": 19,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 20,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 21,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 22,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 23,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 24,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 25,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 26,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 27,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 28,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 29,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 30,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 31,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 32,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 33,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 34,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 35,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 36,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 37,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 38,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 39,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 40,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 41,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 42,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 43,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 44,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 45,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 46,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 47,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 48,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 49,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 50,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 51,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 52,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 53,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 54,
                    ""monitored"": true
                },
                {
                    ""seasonNumber"": 55,
                    ""monitored"": true
                }
            ],
            ""year"": 1968,
            ""path"": ""E:\\TV\\60 Minutes"",
            ""qualityProfileId"": 5,
            ""languageProfileId"": 1,
            ""seasonFolder"": false,
            ""monitored"": true,
            ""useSceneNumbering"": false,
            ""runtime"": 45,
            ""tvdbId"": 73290,
            ""tvRageId"": 7101,
            ""tvMazeId"": 4022,
            ""firstAired"": ""1968-09-24T00:00:00Z"",
            ""seriesType"": ""standard"",
            ""cleanTitle"": ""60minutes"",
            ""imdbId"": ""tt0123338"",
            ""titleSlug"": ""60-minutes"",
            ""certification"": ""TV-PG"",
            ""genres"": [
                ""Documentary"",
                ""News""
            ],
            ""tags"": [],
            ""added"": ""2019-05-10T15:14:19.2356173Z"",
            ""ratings"": {
                ""votes"": 0,
                ""value"": 0
            },
            ""id"": 253
        },
        ""images"": [],
        ""id"": 29457
    },
    {
        ""seriesId"": 69,
        ""tvdbId"": 9553271,
        ""episodeFileId"": 0,
        ""seasonNumber"": 8,
        ""episodeNumber"": 3,
        ""title"": ""Odessa"",
        ""airDate"": ""2023-05-28"",
        ""airDateUtc"": ""2023-05-29T01:00:00Z"",
        ""overview"": ""Mo's hunt to prove PADRE's true intentions has her in over her head as she's drawn into the larger web of secrets."",
        ""hasFile"": false,
        ""monitored"": true,
        ""absoluteEpisodeNumber"": 104,
        ""unverifiedSceneNumbering"": false,
        ""series"": {
            ""title"": ""Fear the Walking Dead"",
            ""sortTitle"": ""fear the walking dead"",
            ""status"": ""continuing"",
            ""ended"": false,
            ""overview"": ""In Los Angeles, a city where people come to escape, shield secrets, and bury their pasts, we follow this mysterious outbreak as it threatens to disrupt what little stability high school guidance counselor Madison Clark and English teacher Travis Manawa have managed to assemble. \r\n\r\nThe pressure of blending two families while dealing with resentful, escapist, and strung out children takes a back seat when society begins to break down. A forced evolution, and survival of the fittest takes hold, as our dysfunctional family finds they must either reinvent themselves or embrace their darker histories."",
            ""network"": ""AMC"",
            ""airTime"": ""21:00"",
            ""images"": [
                {
                    ""coverType"": ""banner"",
                    ""url"": ""https://artworks.thetvdb.com/banners/graphical/290853-g6.jpg""
                },
                {
                    ""coverType"": ""poster"",
                    ""url"": ""https://artworks.thetvdb.com/banners/posters/290853-8.jpg""
                },
                {
                    ""coverType"": ""fanart"",
                    ""url"": ""https://artworks.thetvdb.com/banners/fanart/original/290853-19.jpg""
                },
                {
                    ""coverType"": ""unknown"",
                    ""url"": ""https://artworks.thetvdb.com/banners/v4/series/290853/clearlogo/611b6b47a3975.png""
                }
            ],
            ""seasons"": [
                {
                    ""seasonNumber"": 0,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 1,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 2,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 3,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 4,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 5,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 6,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 7,
                    ""monitored"": true
                },
                {
                    ""seasonNumber"": 8,
                    ""monitored"": true
                }
            ],
            ""year"": 2015,
            ""path"": ""E:\\TV\\Fear the Walking Dead"",
            ""qualityProfileId"": 5,
            ""languageProfileId"": 1,
            ""seasonFolder"": false,
            ""monitored"": true,
            ""useSceneNumbering"": false,
            ""runtime"": 46,
            ""tvdbId"": 290853,
            ""tvRageId"": 48384,
            ""tvMazeId"": 1824,
            ""firstAired"": ""2015-08-23T00:00:00Z"",
            ""seriesType"": ""standard"",
            ""cleanTitle"": ""fearwalkingdead"",
            ""imdbId"": ""tt3743822"",
            ""titleSlug"": ""fear-the-walking-dead"",
            ""certification"": ""TV-MA"",
            ""genres"": [
                ""Drama"",
                ""Horror"",
                ""Science Fiction"",
                ""Thriller""
            ],
            ""tags"": [],
            ""added"": ""2015-09-07T18:01:51.3719329Z"",
            ""ratings"": {
                ""votes"": 0,
                ""value"": 0
            },
            ""id"": 69
        },
        ""images"": [
            {
                ""coverType"": ""screenshot"",
                ""url"": ""https://artworks.thetvdb.com/banners/v4/episode/9553271/screencap/6470dfb9ebf2a.jpg""
            }
        ],
        ""id"": 28948
    },
    {
        ""seriesId"": 269,
        ""tvdbId"": 9543992,
        ""episodeFileId"": 0,
        ""seasonNumber"": 4,
        ""episodeNumber"": 8,
        ""title"": ""wow"",
        ""airDate"": ""2023-05-28"",
        ""airDateUtc"": ""2023-05-29T02:00:00Z"",
        ""overview"": ""That’s it."",
        ""hasFile"": false,
        ""monitored"": true,
        ""unverifiedSceneNumbering"": false,
        ""series"": {
            ""title"": ""Barry"",
            ""sortTitle"": ""barry"",
            ""status"": ""continuing"",
            ""ended"": false,
            ""overview"": ""After following his intended target to an acting class, a hitman finds himself intrigued and decides to become an actor and change his life."",
            ""network"": ""HBO"",
            ""airTime"": ""22:00"",
            ""images"": [
                {
                    ""coverType"": ""banner"",
                    ""url"": ""https://artworks.thetvdb.com/banners/graphical/333072-g2.jpg""
                },
                {
                    ""coverType"": ""poster"",
                    ""url"": ""https://artworks.thetvdb.com/banners/posters/333072-3.jpg""
                },
                {
                    ""coverType"": ""fanart"",
                    ""url"": ""https://artworks.thetvdb.com/banners/fanart/original/333072-3.jpg""
                },
                {
                    ""coverType"": ""unknown"",
                    ""url"": ""https://artworks.thetvdb.com/banners/v4/series/333072/clearlogo/611be3e7414ca.png""
                }
            ],
            ""seasons"": [
                {
                    ""seasonNumber"": 1,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 2,
                    ""monitored"": true
                },
                {
                    ""seasonNumber"": 3,
                    ""monitored"": true
                },
                {
                    ""seasonNumber"": 4,
                    ""monitored"": true
                }
            ],
            ""year"": 2018,
            ""path"": ""E:\\TV\\Barry"",
            ""qualityProfileId"": 5,
            ""languageProfileId"": 1,
            ""seasonFolder"": false,
            ""monitored"": true,
            ""useSceneNumbering"": false,
            ""runtime"": 30,
            ""tvdbId"": 333072,
            ""tvRageId"": 0,
            ""tvMazeId"": 11538,
            ""firstAired"": ""2018-03-25T00:00:00Z"",
            ""seriesType"": ""standard"",
            ""cleanTitle"": ""barry"",
            ""imdbId"": ""tt5348176"",
            ""titleSlug"": ""barry"",
            ""certification"": ""TV-MA"",
            ""genres"": [
                ""Comedy"",
                ""Crime"",
                ""Drama""
            ],
            ""tags"": [],
            ""added"": ""2019-10-14T19:53:24.4547635Z"",
            ""ratings"": {
                ""votes"": 0,
                ""value"": 0
            },
            ""id"": 269
        },
        ""images"": [
            {
                ""coverType"": ""screenshot"",
                ""url"": ""https://artworks.thetvdb.com/banners/v4/episode/9543992/screencap/6470c61c42ed4.jpg""
            }
        ],
        ""id"": 28944
    },
    {
        ""seriesId"": 21,
        ""tvdbId"": 9795183,
        ""episodeFileId"": 0,
        ""seasonNumber"": 20,
        ""episodeNumber"": 9,
        ""title"": ""Saving Face"",
        ""airDate"": ""2023-05-29"",
        ""airDateUtc"": ""2023-05-30T02:00:00Z"",
        ""overview"": ""In an attempt to maintain his \""prime,\"" Stan explores some cosmetic solutions that could not go worse."",
        ""hasFile"": false,
        ""monitored"": true,
        ""sceneAbsoluteEpisodeNumber"": 356,
        ""sceneEpisodeNumber"": 9,
        ""sceneSeasonNumber"": 19,
        ""unverifiedSceneNumbering"": false,
        ""series"": {
            ""title"": ""American Dad!"",
            ""sortTitle"": ""american dad"",
            ""status"": ""continuing"",
            ""ended"": false,
            ""overview"": ""CIA Agent Stan Smith is constantly fighting off terrorists who threaten the safety of the USA (sometimes causing more harm than good). His wife Francine is an average housewife with two kids: Hayley, an average rebellious teenager and Steve, a geek who enjoys Dungeons and Dragons, gaming and comic book conventions. Then there’s Roger, the home’s illegal (space) alien who the Smith’s are keeping protected. Last but not least, there’s Klaus, the Smiths’ wisecracking talking fish (swapped from  his human body years ago by the CIA)."",
            ""network"": ""TBS"",
            ""airTime"": ""22:00"",
            ""images"": [
                {
                    ""coverType"": ""banner"",
                    ""url"": ""https://artworks.thetvdb.com/banners/graphical/73141-g7.jpg""
                },
                {
                    ""coverType"": ""poster"",
                    ""url"": ""https://artworks.thetvdb.com/banners/posters/73141-10.jpg""
                },
                {
                    ""coverType"": ""fanart"",
                    ""url"": ""https://artworks.thetvdb.com/banners/fanart/original/73141-1.jpg""
                },
                {
                    ""coverType"": ""unknown"",
                    ""url"": ""https://artworks.thetvdb.com/banners/v4/series/73141/clearlogo/611b561aac078.png""
                }
            ],
            ""seasons"": [
                {
                    ""seasonNumber"": 0,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 1,
                    ""monitored"": true
                },
                {
                    ""seasonNumber"": 2,
                    ""monitored"": true
                },
                {
                    ""seasonNumber"": 3,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 4,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 5,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 6,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 7,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 8,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 9,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 10,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 11,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 12,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 13,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 14,
                    ""monitored"": true
                },
                {
                    ""seasonNumber"": 15,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 16,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 17,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 18,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 19,
                    ""monitored"": true
                },
                {
                    ""seasonNumber"": 20,
                    ""monitored"": true
                }
            ],
            ""year"": 2005,
            ""path"": ""E:\\TV\\American Dad!"",
            ""qualityProfileId"": 5,
            ""languageProfileId"": 1,
            ""seasonFolder"": false,
            ""monitored"": true,
            ""useSceneNumbering"": true,
            ""runtime"": 24,
            ""tvdbId"": 73141,
            ""tvRageId"": 2594,
            ""tvMazeId"": 215,
            ""firstAired"": ""2005-02-06T00:00:00Z"",
            ""seriesType"": ""standard"",
            ""cleanTitle"": ""americandad"",
            ""imdbId"": ""tt0397306"",
            ""titleSlug"": ""american-dad"",
            ""certification"": ""TV-14"",
            ""genres"": [
                ""Animation"",
                ""Comedy""
            ],
            ""tags"": [],
            ""added"": ""2015-03-04T21:40:19.6522305Z"",
            ""ratings"": {
                ""votes"": 0,
                ""value"": 0
            },
            ""id"": 21
        },
        ""images"": [],
        ""id"": 31340
    },
    {
        ""seriesId"": 393,
        ""tvdbId"": 9726846,
        ""episodeFileId"": 0,
        ""seasonNumber"": 3,
        ""episodeNumber"": 10,
        ""title"": ""Collision Course"",
        ""airDate"": ""2023-05-30"",
        ""airDateUtc"": ""2023-05-31T00:00:00Z"",
        ""overview"": ""Lois attempts to interview Peia in the hopes of unearthing the truth about an old case, while Clarke struggles to spend quality time with the boys. Meanwhile, Jonathan and Jordan find themselves at a party, where tensions between Sarah and Jordan come to a head. As Kyle’s suspicions about a local meta-human grow, Lana must juggle her personal life with a visit from the governor. Finally, Matteo makes a life-altering decision."",
        ""hasFile"": false,
        ""monitored"": true,
        ""unverifiedSceneNumbering"": false,
        ""series"": {
            ""title"": ""Superman & Lois"",
            ""sortTitle"": ""superman lois"",
            ""status"": ""continuing"",
            ""ended"": false,
            ""overview"": ""After years of facing megalomaniacal supervillains, monsters wreaking havoc on Metropolis, and alien invaders intent on wiping out the human race, The Man of Steel aka Clark Kent and Lois Lane come face to face with one of their greatest challenges ever: dealing with all the stress, pressures and complexities that come with being working parents in today's society."",
            ""network"": ""The CW"",
            ""airTime"": ""20:00"",
            ""images"": [
                {
                    ""coverType"": ""banner"",
                    ""url"": ""https://artworks.thetvdb.com/banners/series/375655/banners/602ae554c5c91.jpg""
                },
                {
                    ""coverType"": ""poster"",
                    ""url"": ""https://artworks.thetvdb.com/banners/series/375655/posters/60129216a3b3e.jpg""
                },
                {
                    ""coverType"": ""fanart"",
                    ""url"": ""https://artworks.thetvdb.com/banners/series/375655/backgrounds/602ae42ff08f7.jpg""
                },
                {
                    ""coverType"": ""unknown"",
                    ""url"": ""https://artworks.thetvdb.com/banners/v4/series/375655/clearlogo/611bf0c8b84e7.png""
                }
            ],
            ""seasons"": [
                {
                    ""seasonNumber"": 0,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 1,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 2,
                    ""monitored"": true
                },
                {
                    ""seasonNumber"": 3,
                    ""monitored"": true
                }
            ],
            ""year"": 2021,
            ""path"": ""E:\\TV\\Superman & Lois"",
            ""qualityProfileId"": 5,
            ""languageProfileId"": 1,
            ""seasonFolder"": false,
            ""monitored"": true,
            ""useSceneNumbering"": false,
            ""runtime"": 43,
            ""tvdbId"": 375655,
            ""tvRageId"": 0,
            ""tvMazeId"": 44751,
            ""firstAired"": ""2021-02-23T00:00:00Z"",
            ""seriesType"": ""standard"",
            ""cleanTitle"": ""supermanlois"",
            ""imdbId"": ""tt11192306"",
            ""titleSlug"": ""superman-and-lois"",
            ""certification"": ""TV-PG"",
            ""genres"": [
                ""Action"",
                ""Adventure"",
                ""Drama"",
                ""Fantasy"",
                ""Romance"",
                ""Science Fiction""
            ],
            ""tags"": [],
            ""added"": ""2021-01-29T22:00:08.5928657Z"",
            ""ratings"": {
                ""votes"": 0,
                ""value"": 0
            },
            ""id"": 393
        },
        ""images"": [
            {
                ""coverType"": ""screenshot"",
                ""url"": ""https://artworks.thetvdb.com/banners/v4/episode/9726846/screencap/646ea4ee82ea2.jpg""
            }
        ],
        ""id"": 30414
    },
    {
        ""seriesId"": 583,
        ""tvdbId"": 9597705,
        ""episodeFileId"": 0,
        ""seasonNumber"": 1,
        ""episodeNumber"": 10,
        ""title"": ""Poison Pill"",
        ""airDate"": ""2023-05-30"",
        ""airDateUtc"": ""2023-05-31T01:00:00Z"",
        ""overview"": ""With one of their own in trouble, the team scrambles to find a solution before it’s too late. Elsewhere, Harvey undertakes a risky gambit to get the answers he seeks. Finally, Brody turns to Stephanie after he stumbles upon some information involving his father Lincoln."",
        ""hasFile"": false,
        ""monitored"": true,
        ""absoluteEpisodeNumber"": 10,
        ""unverifiedSceneNumbering"": false,
        ""series"": {
            ""title"": ""Gotham Knights"",
            ""sortTitle"": ""gotham knights"",
            ""status"": ""continuing"",
            ""ended"": false,
            ""overview"": ""In the wake of Bruce Wayne’s murder, his rebellious adopted son forges an unlikely alliance with the children of Batman’s enemies when they are all framed for killing the Caped Crusader."",
            ""network"": ""The CW"",
            ""airTime"": ""21:00"",
            ""images"": [
                {
                    ""coverType"": ""banner"",
                    ""url"": ""https://artworks.thetvdb.com/banners/v4/series/420061/banners/6411804ebd1a9.jpg""
                },
                {
                    ""coverType"": ""poster"",
                    ""url"": ""https://artworks.thetvdb.com/banners/v4/series/420061/posters/63ee9e71cf3a7.jpg""
                },
                {
                    ""coverType"": ""fanart"",
                    ""url"": ""https://artworks.thetvdb.com/banners/v4/series/420061/backgrounds/6411801da94c6.jpg""
                },
                {
                    ""coverType"": ""unknown"",
                    ""url"": ""https://artworks.thetvdb.com/banners/v4/series/420061/clearlogo/641202a7bbb75.png""
                }
            ],
            ""seasons"": [
                {
                    ""seasonNumber"": 1,
                    ""monitored"": true
                }
            ],
            ""year"": 2023,
            ""path"": ""E:\\TV\\Gotham Knights"",
            ""qualityProfileId"": 5,
            ""languageProfileId"": 1,
            ""seasonFolder"": false,
            ""monitored"": true,
            ""useSceneNumbering"": false,
            ""runtime"": 42,
            ""tvdbId"": 420061,
            ""tvRageId"": 0,
            ""tvMazeId"": 59492,
            ""firstAired"": ""2023-03-14T00:00:00Z"",
            ""seriesType"": ""standard"",
            ""cleanTitle"": ""gothamknights"",
            ""imdbId"": ""tt16418896"",
            ""titleSlug"": ""gotham-knights"",
            ""certification"": ""TV-14"",
            ""genres"": [
                ""Action"",
                ""Crime"",
                ""Drama""
            ],
            ""tags"": [],
            ""added"": ""2023-02-21T22:27:09.6745103Z"",
            ""ratings"": {
                ""votes"": 0,
                ""value"": 0
            },
            ""id"": 583
        },
        ""images"": [
            {
                ""coverType"": ""screenshot"",
                ""url"": ""https://artworks.thetvdb.com/banners/v4/episode/9597705/screencap/64643f6d55478.jpg""
            }
        ],
        ""id"": 29330
    },
    {
        ""seriesId"": 490,
        ""tvdbId"": 9618362,
        ""episodeFileId"": 0,
        ""seasonNumber"": 3,
        ""episodeNumber"": 12,
        ""title"": ""So Long, Farewell"",
        ""airDate"": ""2023-05-31"",
        ""airDateUtc"": ""2023-05-31T04:00:00Z"",
        ""overview"": ""AFC Richmond play their final match of the season."",
        ""hasFile"": false,
        ""monitored"": true,
        ""unverifiedSceneNumbering"": false,
        ""series"": {
            ""title"": ""Ted Lasso"",
            ""sortTitle"": ""ted lasso"",
            ""status"": ""continuing"",
            ""ended"": false,
            ""overview"": ""Ted Lasso, an American football coach, moves to England when he’s hired to manage a soccer team—despite having no experience. With cynical players and a doubtful town, will he get them to see the Ted Lasso Way?"",
            ""network"": ""Apple TV+"",
            ""airTime"": ""00:00"",
            ""images"": [
                {
                    ""coverType"": ""banner"",
                    ""url"": ""https://artworks.thetvdb.com/banners/v4/series/383203/banners/60dfad53daf18.jpg""
                },
                {
                    ""coverType"": ""poster"",
                    ""url"": ""https://artworks.thetvdb.com/banners/v4/series/383203/posters/6293c2101b7e7.jpg""
                },
                {
                    ""coverType"": ""fanart"",
                    ""url"": ""https://artworks.thetvdb.com/banners/v4/series/383203/backgrounds/60d5931c1f29c.jpg""
                },
                {
                    ""coverType"": ""unknown"",
                    ""url"": ""https://artworks.thetvdb.com/banners/v4/series/383203/clearlogo/611c3acf767fe.png""
                }
            ],
            ""seasons"": [
                {
                    ""seasonNumber"": 0,
                    ""monitored"": false
                },
                {
                    ""seasonNumber"": 1,
                    ""monitored"": true
                },
                {
                    ""seasonNumber"": 2,
                    ""monitored"": true
                },
                {
                    ""seasonNumber"": 3,
                    ""monitored"": true
                }
            ],
            ""year"": 2020,
            ""path"": ""E:\\TV\\Ted Lasso"",
            ""qualityProfileId"": 1,
            ""languageProfileId"": 1,
            ""seasonFolder"": false,
            ""monitored"": true,
            ""useSceneNumbering"": false,
            ""runtime"": 41,
            ""tvdbId"": 383203,
            ""tvRageId"": 0,
            ""tvMazeId"": 44458,
            ""firstAired"": ""2020-08-14T00:00:00Z"",
            ""seriesType"": ""standard"",
            ""cleanTitle"": ""tedlasso"",
            ""imdbId"": ""tt10986410"",
            ""titleSlug"": ""ted-lasso"",
            ""certification"": ""TV-MA"",
            ""genres"": [
                ""Comedy"",
                ""Drama"",
                ""Sport""
            ],
            ""tags"": [],
            ""added"": ""2022-03-17T06:27:10.8779074Z"",
            ""ratings"": {
                ""votes"": 0,
                ""value"": 0
            },
            ""id"": 490
        },
        ""images"": [
            {
                ""coverType"": ""screenshot"",
                ""url"": ""https://artworks.thetvdb.com/banners/v4/episode/9618362/screencap/646d7feb246f5.jpg""
            }
        ],
        ""id"": 29230
    }
]"
jquqa0vp,AZB Status,bamsti,PHP,Saturday 27th of May 2023 01:54:47 AM CDT,"<?php
/* Neuer Bestellstatus Auslieferung und AZB Versandt */
add_filter( 'wc_order_statuses', 'mmv_bestellstatus_auslieferung' );

function mmv_bestellstatus_auslieferung( $order_statuses ) {
    $order_statuses['wc-auslieferung'] = 'Auslieferung';
    $order_statuses['wc-azb-versandt'] = 'AZB Versand';
    return $order_statuses;
}

add_action( 'init', 'mmv_bestellstatus_auslieferung_wc' );

function mmv_bestellstatus_auslieferung_wc() {
    register_post_status( 'wc-auslieferung', array(
        'label'                     => 'Auslieferung',
        'public'                    => true,
        'exclude_from_search'       => false,
        'show_in_admin_all_list'    => true,
        'show_in_admin_status_list' => true,
        'label_count'               => _n_noop( 'Auslieferung <span class=""count"">(%s)</span>', 'Auslieferung <span class=""count"">(%s)</span>' )
    ) );
    
    register_post_status( 'wc-versandt', array(
        'label'                     => 'AZB Versand',
        'public'                    => true,
        'exclude_from_search'       => false,
        'show_in_admin_all_list'    => true,
        'show_in_admin_status_list' => true,
        'label_count'               => _n_noop( 'AZB Versand <span class=""count"">(%s)</span>', 'AZB Versand <span class=""count"">(%s)</span>' )
    ) );
}"
vaPfD0Nv,Sylenths XML file,oshkoshbagoshh,XML,Saturday 27th of May 2023 01:42:50 AM CDT,"<?xml version=""1.0"" encoding=""UTF-8""?>
<Sylenth1Settings>
	<DefaultSkin name=""Sylenth 3.0"" scale=""1.0""/>
	<DefaultBank name=""AJ4.fxb""/>
	<SoundBankCustomFolder path=""/Users/aj/Library/Application Support/LennarDigital/Sylenth1/Presets/AJ_1"" recursive=""1""/>
	<PresetFolder remember=""2"" path=""/Users/aj/Library/Application Support/LennarDigital/Sylenth1/Presets/AJ_4"" usefilename=""1""/>
	<CheckForUpdates enabled=""1"" checkstartlocation=""1""/>
	<Compatibility useV2Engine=""0"" displayCutoffInHz=""0""/>
	<Oversampling realtime=""1"" render=""1""/>
	<GlobalTuning frequency=""440"" oscdrift=""0.015""/>
	<MIDI controlchanges=""1"" programchanges=""0"" pitchbend=""1"" autoswitchonlearn=""1""/>
	<KeyboardInput enabled=""1"" usebrackets=""1""/>
	<KEYMAPPINGS basedOnDefaults=""0"">
		<MAPPING commandId=""10001"" description=""Switch to default skin"" key=""shift + D""/>
		<MAPPING commandId=""10002"" description=""Switch to default size"" key=""shift + S""/>
		<MAPPING commandId=""10003"" description=""Set as Default Skin/Size"" key=""shift + U""/>
		<MAPPING commandId=""10004"" description=""Load Preset"" key=""shift + L""/>
		<MAPPING commandId=""10005"" description=""Save Preset"" key=""shift + P""/>
		<MAPPING commandId=""10006"" description=""Copy Preset"" key=""shift + C""/>
		<MAPPING commandId=""10007"" description=""Paste Preset"" key=""shift + V""/>
		<MAPPING commandId=""10008"" description=""Insert Preset"" key=""command + I""/>
		<MAPPING commandId=""10009"" description=""Delete Preset"" key=""shift + command + Y""/>
		<MAPPING commandId=""10010"" description=""Clear Preset"" key=""command + J""/>
		<MAPPING commandId=""10011"" description=""Randomize Preset"" key=""shift + R""/>
		<MAPPING commandId=""10012"" description=""Rename Preset"" key=""shift + N""/>
		<MAPPING commandId=""10013"" description=""Reset Preset"" key=""shift + Z""/>
		<MAPPING commandId=""10014"" description=""Load Bank"" key=""shift + O""/>
		<MAPPING commandId=""10015"" description=""Save Bank"" key=""shift + B""/>
		<MAPPING commandId=""10016"" description=""Export Bank"" key=""command + E""/>
		<MAPPING commandId=""10017"" description=""Clear Bank"" key=""shift + command + J""/>
	</KEYMAPPINGS>
	<Internal data=""32.kc6EFuGfxLJNI4bxIECm.0Q94q3CurnoL0Q7ZkDtUe.""/>
</Sylenth1Settings>
"
FMM5m45k,Untitled,wojiaocbj,C,Saturday 27th of May 2023 12:45:27 AM CDT,"
#include <stdio.h>
unsigned long long cbjabs(long long a){
    if(a < 0){
        char x[64] = { 0 };
        unsigned long long t;
        sprintf(x, ""%lld"", a);
        sscanf(x + 1, ""%llu"", &t);
        return t;
    }
    else{
        return a;
    }

}
int main(){
    long long a, b;
    unsigned long long a0, b0;
    char s1 = 0, s2 = 0;
    scanf(""%lld%lld"", &a, &b);
    if(a < 0){
        s1 = 1;
        a0 = -a;//cbjabs(a);
    }
    else{
        a0 = a;
    }
    if(b < 0){
        s2 = 1;
        b0 = -b;//cbjabs(b);
    }
    else{
        b0 = b;
    }
    if(s1 == 1 && s2 == 1){
        //负 负
        if((a0 + b0 > 9223372036854775808ull) || ((a0 == 9223372036854775808ull) && (b0 == 9223372036854775808ull))){
            puts(""NO!"");
        }
        else{
            printf(""%lld\n"", a + b);
        }
    }
    else if(s1 == 0 && s2 == 1){
        //正 负
        printf(""%lld\n"", a + b);
    }
    else if(s1 == 1 && s2 == 0){
        //负 正
        printf(""%lld\n"", a + b);
    }
    else{
        //正 正
        if(a0 + b0 > 9223372036854775807ull){
            puts(""PO!"");
        }
        else{
            printf(""%lld\n"", a + b);
        }
    }

    return 0;
}"
naDGDYWw,V2Player,AppajiC,JavaScript,Saturday 27th of May 2023 12:42:47 AM CDT,"import {
    BufferGeometry,
    Float32BufferAttribute,
    LinearFilter,
    Mesh,
    MeshBasicMaterial,
    MeshStandardMaterial,
    ShaderMaterial,
    PlaneGeometry,
    // sRGBEncoding,
    SRGBColorSpace,
    Texture,
    Uint16BufferAttribute,
    CompressedArrayTexture,
    WebGLRenderer,
    Vector2,
    GLSL3
} from 'three'

import { DRACOLoader } from '../lib/DRACOLoader';
import { KTX2Loader } from '../lib/KTX2Loader';


export enum PlayMode {
    single = 'single',
    random = 'random',
    loop = 'loop',
    singleloop = 'singleloop'
}

type onMeshBufferingCallback = (progress: number) => void
type onFrameShowCallback = (frame: number) => void

export type PlayerConstructorArgs = {
    renderer: WebGLRenderer
    playMode?: PlayMode
    paths: Array<string>
    onMeshBuffering?: onMeshBufferingCallback
    onFrameShow?: onFrameShowCallback
    material?: MeshBasicMaterial | MeshBasicMaterial
}

export default class Player {
    static defaultWorkerURL = new URL('./worker.build.js', import.meta.url).href

    // Public Fields
    public renderer: WebGLRenderer
    public playMode: PlayMode

    // Three objects
    public mesh: Mesh
    public paths: Array<string>
    public material: MeshBasicMaterial
    public bufferGeometry: BufferGeometry
    public failMaterial?: MeshBasicMaterial

    // Private Fields
    private currentFrame: number = 0
    private currentSegment: number = 0
    private currentTrack: number = 0
    private meshMap: Map<number, BufferGeometry> = new Map()
    private textureMap: Map<number, CompressedArrayTexture> = new Map()
    private onMeshBuffering: onMeshBufferingCallback | null = null
    private onFrameShow: onFrameShowCallback | null = null
    private nextSegmentToRequest: number = 0;

    private manifestFilePath: string
    private meshFilePath: string
    private manifestData: any;
    private ktx2Loader: KTX2Loader
    private dracoLoader: DRACOLoader



    constructor({
        renderer,
        playMode,
        paths,
        onMeshBuffering,
        onFrameShow,
        material
    }: PlayerConstructorArgs) {
        this.renderer = renderer

        this.onMeshBuffering = onMeshBuffering
        this.onFrameShow = onFrameShow

        this.paths = paths

        // backwards-compat
        if (typeof playMode === 'number') {
            switch (playMode) {
                case 1:
                    playMode = PlayMode.single
                    break
                case 2:
                    playMode = PlayMode.random
                    break
                case 3:
                    playMode = PlayMode.loop
                    break
                case 4:
                    playMode = PlayMode.singleloop
                    break
            }
        }

        this.playMode = playMode || PlayMode.loop
        this.material = material
        this.mesh = new Mesh(new PlaneGeometry(0.00001, 0.00001), new MeshStandardMaterial({ color: 0xffffff }))
        this.ktx2Loader = new KTX2Loader();
        this.ktx2Loader.setTranscoderPath(""/"");
        this.ktx2Loader.detectSupport(this.renderer);

        this.dracoLoader = new DRACOLoader();
        this.dracoLoader.setDecoderPath(""/"");
        this.dracoLoader.preload();
        this.fetchManifest();
        this.fetchBuffers();
    }

    prepareNextLoop = () => {
        let nextTrack = -1;
        if (this.playMode == PlayMode.random) {
            nextTrack = Math.floor(Math.random() * this.paths.length)
        } else if (this.playMode == PlayMode.single) {
            nextTrack = (this.currentTrack + 1) % this.paths.length
        } else if (this.playMode == PlayMode.singleloop) {
            nextTrack = this.currentTrack
        } else {
            nextTrack = (this.currentTrack + 1) % this.paths.length
        }
        this.currentTrack = nextTrack
        this.nextSegmentToRequest = 0
        this.fetchManifest();
    }

    fetchManifest = () => {
        const manifestFilePath = this.paths[this.currentTrack].replace('uvol', 'manifest');
        const xhr = new XMLHttpRequest()
        xhr.onreadystatechange = () => {
            if (xhr.readyState !== 4) return
            this.manifestData = JSON.parse(xhr.responseText)
        }

        xhr.open('GET', manifestFilePath, false) // true for asynchronous
        xhr.send()
    }

    fetchBuffers = async () => {
        while (true) {
            if (this.nextSegmentToRequest == this.manifestData.sequences.length) {
                this.prepareNextLoop()
            }
            const segmentData = this.manifestData.sequences[this.nextSegmentToRequest];
            const currentFrameCount = segmentData.length - 2;
            const segmentStart = segmentData[0]; // also works as segmentOffset
            const segmentEnd = segmentData[currentFrameCount + 1];
            const batchSize = this.manifestData.batchSize;

            const meshFilePath = this.paths[this.currentTrack];
            const response = await fetch(meshFilePath, {
                headers: {
                    range: `bytes=${segmentStart}-${segmentEnd}`
                }
            })
            const buffer = await (response as Response).arrayBuffer()
            const decodedTexture = await this.ktx2Loader._createTexture(buffer.slice(segmentData[0] - segmentData[0], segmentData[1] - segmentData[0]));
            const decodedMaterial = new ShaderMaterial({
                uniforms: {
                    diffuse: {
                        value: decodedTexture,
                    },
                    depth: {
                        value: 0,
                    },
                    size: { value: new Vector2(4096, 4096) },
                },
                vertexShader: `uniform vec2 size;
                out vec2 vUv;
                
                void main() {
                    gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
                    vUv = uv;
                }`,
                fragmentShader: `precision highp float;
                precision highp int;
                precision highp sampler2DArray;
                
                uniform sampler2DArray diffuse;
                in vec2 vUv;
                uniform int depth;
                out vec4 outColor;
                
                void main() {
                    vec4 color = texture( diffuse, vec3( vUv, depth ) );
                    outColor = vec4(color.rgb, 1.0 );
                }`,
                glslVersion: GLSL3,
            });
            // @ts-ignore
            this.textureMap.set(this.nextSegmentToRequest, decodedMaterial);
            // console.log(`Set the material to segment ${this.nextSegmentToRequest}: ${decodedMaterial}`)

            for (let i = 1; i <= currentFrameCount; i++) {
                const dracoBegin = segmentData[i] - segmentStart;
                let dracoEnd = undefined;
                if (i != currentFrameCount) {
                    dracoEnd = segmentData[i + 1] - segmentStart;
                }
                const dracoTaskConfig = {
                    attributeIDs: {
                        position: 'POSITION',
                        normal: 'NORMAL',
                        color: 'COLOR',
                        uv: 'TEX_COORD',
                    },
                    attributeTypes: {
                        position: 'Float32Array',
                        normal: 'Float32Array',
                        color: 'Float32Array',
                        uv: 'Float32Array',
                    },
                    useUniqueIDs: false,
                    vertexColorSpace: SRGBColorSpace,
                };
                try {
                    const decodedDraco = await this.dracoLoader.decodeGeometry(
                        buffer.slice(dracoBegin, dracoEnd),
                        dracoTaskConfig
                    );
                    this.meshMap.set(this.nextSegmentToRequest * batchSize + i - 1, decodedDraco);
                } catch (e) {
                }

            }
            this.nextSegmentToRequest++;
        }
    }

    processFrame = () => {
        if (!this.meshMap.has(this.currentFrame) || (!this.mesh.material && !this.textureMap.get(this.currentSegment))) {
            this.onMeshBuffering?.(0)
            return;
        }
        this.mesh.geometry = this.meshMap.get(this.currentFrame)
        this.mesh.geometry.attributes.position.needsUpdate = true;
        const currentBatchSize = this.manifestData.sequences[this.currentSegment].length - 2;
        const offSet = this.currentFrame % currentBatchSize;
        // and ${this.currentSegment}:${offSet} texture frame
        console.log(`currently playing ${this.currentFrame} geometry frame. meshMap.size = ${this.meshMap.size}`);
        // console.log(`currentSegment = ${this.currentSegment}, material = ${this.textureMap.get(this.currentSegment)}`)
        if (offSet == 0 || !this.mesh.material) {
            // this video texture is a new segment
            // @ts-ignore
            this.mesh.material = this.textureMap.get(this.currentSegment);
            // @ts-ignore
            this.mesh.material.needsUpdate = true;
        }
        (this.mesh.material as ShaderMaterial).uniforms['depth'].value = offSet;
        if ((this.currentFrame + 1) == currentBatchSize) {
            this.currentSegment++;
            this.currentFrame++;
        } else {
            this.currentFrame++;
        }
    }

    removePlayedBuffer() {
        //remove played buffer
        // console.log(`before deleting frames (before ${this.currentFrame}), meshMap.size = ${this.meshMap.size}`)
        for (const [key, buffer] of this.meshMap.entries()) {
            if (key < this.currentFrame) {
                buffer.dispose()
                this.meshMap.delete(key)
            }
        }
        // console.log(`after deleting frames (before ${this.currentFrame}), meshMap.size = ${this.meshMap.size}`)

        // console.log(`before deleting frames (before ${this.currentSegment}), textureMap.size = ${this.textureMap.size}`)
        for (const [key, buffer] of this.textureMap.entries()) {
            if (key < this.currentSegment) {
                buffer.dispose()
                this.textureMap.delete(key)
            }
        }
        // console.log(`after deleting frames (before ${this.currentSegment}), textureMap.size = ${this.textureMap.size}`)
    }

    update = () => {
        this.processFrame()
        this.removePlayedBuffer()
    }

    dispose(): void {
        if (this.meshMap) {
            for (let i = 0; i < this.meshMap.size; i++) {
                const buffer = this.meshMap.get(i)
                if (buffer && buffer instanceof BufferGeometry) {
                    buffer.dispose()
                }
            }
            this.meshMap.clear()
        }

        if (this.textureMap) {
            for (let i = 0; i < this.textureMap.size; i++) {
                const buffer = this.textureMap.get(i)
                if (buffer && buffer instanceof CompressedArrayTexture) {
                    buffer.dispose()
                }
            }
            this.textureMap.clear()
        }
    }
}"
8DdHbMnW,Krooster Blank JSON,koriar,JSON,Saturday 27th of May 2023 12:37:29 AM CDT,"{""char_285_medic2"":{""id"":""char_285_medic2"",""name"":""Lancet-2"",""favorite"":false,""rarity"":1,""class"":""Medic"",""potential"":1,""promotion"":0,""owned"":true,""level"":2,""skillLevel"":0,""mastery"":[],""module"":[]},""char_286_cast3"":{""id"":""char_286_cast3"",""name"":""Castle-3"",""favorite"":false,""rarity"":1,""class"":""Guard"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_376_therex"":{""id"":""char_376_therex"",""name"":""Thermal-EX"",""favorite"":false,""rarity"":1,""class"":""Specialist"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_4000_jnight"":{""id"":""char_4000_jnight"",""name"":""\""Justice Knight\"""",""favorite"":false,""rarity"":1,""class"":""Sniper"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_502_nblade"":{""id"":""char_502_nblade"",""name"":""Yato"",""favorite"":false,""rarity"":2,""class"":""Vanguard"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_500_noirc"":{""id"":""char_500_noirc"",""name"":""Noir Corne"",""favorite"":false,""rarity"":2,""class"":""Defender"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_503_rang"":{""id"":""char_503_rang"",""name"":""Rangers"",""favorite"":false,""rarity"":2,""class"":""Sniper"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_501_durin"":{""id"":""char_501_durin"",""name"":""Durin"",""favorite"":false,""rarity"":2,""class"":""Caster"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_009_12fce"":{""id"":""char_009_12fce"",""name"":""12F"",""favorite"":false,""rarity"":2,""class"":""Caster"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_123_fang"":{""id"":""char_123_fang"",""name"":""Fang"",""favorite"":false,""rarity"":3,""class"":""Vanguard"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_240_wyvern"":{""id"":""char_240_wyvern"",""name"":""Vanilla"",""favorite"":false,""rarity"":3,""class"":""Vanguard"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_192_falco"":{""id"":""char_192_falco"",""name"":""Plume"",""favorite"":false,""rarity"":3,""class"":""Vanguard"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_208_melan"":{""id"":""char_208_melan"",""name"":""Melantha"",""favorite"":false,""rarity"":3,""class"":""Guard"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_281_popka"":{""id"":""char_281_popka"",""name"":""Popukar"",""favorite"":false,""rarity"":3,""class"":""Guard"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_209_ardign"":{""id"":""char_209_ardign"",""name"":""Cardigan"",""favorite"":false,""rarity"":3,""class"":""Defender"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_122_beagle"":{""id"":""char_122_beagle"",""name"":""Beagle"",""favorite"":false,""rarity"":3,""class"":""Defender"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_284_spot"":{""id"":""char_284_spot"",""name"":""Spot"",""favorite"":false,""rarity"":3,""class"":""Defender"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_124_kroos"":{""id"":""char_124_kroos"",""name"":""Kroos"",""favorite"":false,""rarity"":3,""class"":""Sniper"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_211_adnach"":{""id"":""char_211_adnach"",""name"":""Adnachiel"",""favorite"":false,""rarity"":3,""class"":""Sniper"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_121_lava"":{""id"":""char_121_lava"",""name"":""Lava"",""favorite"":false,""rarity"":3,""class"":""Caster"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_120_hibisc"":{""id"":""char_120_hibisc"",""name"":""Hibiscus"",""favorite"":false,""rarity"":3,""class"":""Medic"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_212_ansel"":{""id"":""char_212_ansel"",""name"":""Ansel"",""favorite"":false,""rarity"":3,""class"":""Medic"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_210_stward"":{""id"":""char_210_stward"",""name"":""Steward"",""favorite"":false,""rarity"":3,""class"":""Caster"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_278_orchid"":{""id"":""char_278_orchid"",""name"":""Orchid"",""favorite"":false,""rarity"":3,""class"":""Supporter"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_141_nights"":{""id"":""char_141_nights"",""name"":""Haze"",""favorite"":false,""rarity"":4,""class"":""Caster"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_109_fmout"":{""id"":""char_109_fmout"",""name"":""Gitano"",""favorite"":false,""rarity"":4,""class"":""Caster"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_253_greyy"":{""id"":""char_253_greyy"",""name"":""Greyy"",""favorite"":false,""rarity"":4,""class"":""Caster"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_328_cammou"":{""id"":""char_328_cammou"",""name"":""Click"",""favorite"":false,""rarity"":4,""class"":""Caster"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_469_indigo"":{""id"":""char_469_indigo"",""name"":""Indigo"",""favorite"":false,""rarity"":4,""class"":""Caster"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_4004_pudd"":{""id"":""char_4004_pudd"",""name"":""Pudding"",""favorite"":false,""rarity"":4,""class"":""Caster"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_235_jesica"":{""id"":""char_235_jesica"",""name"":""Jessica"",""favorite"":false,""rarity"":4,""class"":""Sniper"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_126_shotst"":{""id"":""char_126_shotst"",""name"":""Meteor"",""favorite"":false,""rarity"":4,""class"":""Sniper"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_190_clour"":{""id"":""char_190_clour"",""name"":""Vermeil"",""favorite"":false,""rarity"":4,""class"":""Sniper"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_133_mm"":{""id"":""char_133_mm"",""name"":""May"",""favorite"":false,""rarity"":4,""class"":""Sniper"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_118_yuki"":{""id"":""char_118_yuki"",""name"":""Shirayuki"",""favorite"":false,""rarity"":4,""class"":""Sniper"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_440_pinecn"":{""id"":""char_440_pinecn"",""name"":""Pinecone"",""favorite"":false,""rarity"":4,""class"":""Sniper"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_302_glaze"":{""id"":""char_302_glaze"",""name"":""Ambriel"",""favorite"":false,""rarity"":4,""class"":""Sniper"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_366_acdrop"":{""id"":""char_366_acdrop"",""name"":""Aciddrop"",""favorite"":false,""rarity"":4,""class"":""Sniper"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_4062_totter"":{""id"":""char_4062_totter"",""name"":""Totter"",""favorite"":false,""rarity"":4,""class"":""Sniper"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_198_blackd"":{""id"":""char_198_blackd"",""name"":""Courier"",""favorite"":false,""rarity"":4,""class"":""Vanguard"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_149_scave"":{""id"":""char_149_scave"",""name"":""Scavenger"",""favorite"":false,""rarity"":4,""class"":""Vanguard"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_290_vigna"":{""id"":""char_290_vigna"",""name"":""Vigna"",""favorite"":false,""rarity"":4,""class"":""Vanguard"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_151_myrtle"":{""id"":""char_151_myrtle"",""name"":""Myrtle"",""favorite"":false,""rarity"":4,""class"":""Vanguard"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_452_bstalk"":{""id"":""char_452_bstalk"",""name"":""Beanstalk"",""favorite"":false,""rarity"":4,""class"":""Vanguard"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_130_doberm"":{""id"":""char_130_doberm"",""name"":""Dobermann"",""favorite"":false,""rarity"":4,""class"":""Guard"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_289_gyuki"":{""id"":""char_289_gyuki"",""name"":""Matoimaru"",""favorite"":false,""rarity"":4,""class"":""Guard"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_159_peacok"":{""id"":""char_159_peacok"",""name"":""Conviction"",""favorite"":false,""rarity"":4,""class"":""Guard"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_193_frostl"":{""id"":""char_193_frostl"",""name"":""Frostleaf"",""favorite"":false,""rarity"":4,""class"":""Guard"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_127_estell"":{""id"":""char_127_estell"",""name"":""Estelle"",""favorite"":false,""rarity"":4,""class"":""Guard"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_185_frncat"":{""id"":""char_185_frncat"",""name"":""Mousse"",""favorite"":false,""rarity"":4,""class"":""Guard"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_301_cutter"":{""id"":""char_301_cutter"",""name"":""Cutter"",""favorite"":false,""rarity"":4,""class"":""Guard"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_337_utage"":{""id"":""char_337_utage"",""name"":""Utage"",""favorite"":false,""rarity"":4,""class"":""Guard"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_271_spikes"":{""id"":""char_271_spikes"",""name"":""Arene"",""favorite"":false,""rarity"":4,""class"":""Guard"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_4067_lolxh"":{""id"":""char_4067_lolxh"",""name"":""Luo Xiaohei"",""favorite"":false,""rarity"":4,""class"":""Guard"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_4063_quartz"":{""id"":""char_4063_quartz"",""name"":""Quartz"",""favorite"":false,""rarity"":4,""class"":""Guard"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_237_gravel"":{""id"":""char_237_gravel"",""name"":""Gravel"",""favorite"":false,""rarity"":4,""class"":""Specialist"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_272_strong"":{""id"":""char_272_strong"",""name"":""Jaye"",""favorite"":false,""rarity"":4,""class"":""Specialist"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_236_rope"":{""id"":""char_236_rope"",""name"":""Rope"",""favorite"":false,""rarity"":4,""class"":""Specialist"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_117_myrrh"":{""id"":""char_117_myrrh"",""name"":""Myrrh"",""favorite"":false,""rarity"":4,""class"":""Medic"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_187_ccheal"":{""id"":""char_187_ccheal"",""name"":""Gavial"",""favorite"":false,""rarity"":4,""class"":""Medic"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_298_susuro"":{""id"":""char_298_susuro"",""name"":""Sussurro"",""favorite"":false,""rarity"":4,""class"":""Medic"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_181_flower"":{""id"":""char_181_flower"",""name"":""Perfumer"",""favorite"":false,""rarity"":4,""class"":""Medic"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_385_finlpp"":{""id"":""char_385_finlpp"",""name"":""Purestream"",""favorite"":false,""rarity"":4,""class"":""Medic"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_4041_chnut"":{""id"":""char_4041_chnut"",""name"":""Chestnut"",""favorite"":false,""rarity"":4,""class"":""Medic"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_199_yak"":{""id"":""char_199_yak"",""name"":""Matterhorn"",""favorite"":false,""rarity"":4,""class"":""Defender"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_150_snakek"":{""id"":""char_150_snakek"",""name"":""Cuora"",""favorite"":false,""rarity"":4,""class"":""Defender"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_381_bubble"":{""id"":""char_381_bubble"",""name"":""Bubble"",""favorite"":false,""rarity"":4,""class"":""Defender"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_196_sunbr"":{""id"":""char_196_sunbr"",""name"":""Gummy"",""favorite"":false,""rarity"":4,""class"":""Defender"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_260_durnar"":{""id"":""char_260_durnar"",""name"":""Dur-nar"",""favorite"":false,""rarity"":4,""class"":""Defender"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_110_deepcl"":{""id"":""char_110_deepcl"",""name"":""Deepcolor"",""favorite"":false,""rarity"":4,""class"":""Supporter"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_183_skgoat"":{""id"":""char_183_skgoat"",""name"":""Earthspirit"",""favorite"":false,""rarity"":4,""class"":""Supporter"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_258_podego"":{""id"":""char_258_podego"",""name"":""Podenco"",""favorite"":false,""rarity"":4,""class"":""Supporter"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_484_robrta"":{""id"":""char_484_robrta"",""name"":""Roberta"",""favorite"":false,""rarity"":4,""class"":""Supporter"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_355_ethan"":{""id"":""char_355_ethan"",""name"":""Ethan"",""favorite"":false,""rarity"":4,""class"":""Specialist"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_277_sqrrel"":{""id"":""char_277_sqrrel"",""name"":""Shaw"",""favorite"":false,""rarity"":4,""class"":""Specialist"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_128_plosis"":{""id"":""char_128_plosis"",""name"":""Ptilopsis"",""favorite"":false,""rarity"":5,""class"":""Medic"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_275_breeze"":{""id"":""char_275_breeze"",""name"":""Breeze"",""favorite"":false,""rarity"":5,""class"":""Medic"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_115_headbr"":{""id"":""char_115_headbr"",""name"":""Zima"",""favorite"":false,""rarity"":5,""class"":""Vanguard"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_102_texas"":{""id"":""char_102_texas"",""name"":""Texas"",""favorite"":false,""rarity"":5,""class"":""Vanguard"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_349_chiave"":{""id"":""char_349_chiave"",""name"":""Chiave"",""favorite"":false,""rarity"":5,""class"":""Vanguard"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_261_sddrag"":{""id"":""char_261_sddrag"",""name"":""Reed"",""favorite"":false,""rarity"":5,""class"":""Vanguard"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_496_wildmn"":{""id"":""char_496_wildmn"",""name"":""Wild Mane"",""favorite"":false,""rarity"":5,""class"":""Vanguard"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_401_elysm"":{""id"":""char_401_elysm"",""name"":""Elysium"",""favorite"":false,""rarity"":5,""class"":""Vanguard"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_476_blkngt"":{""id"":""char_476_blkngt"",""name"":""Blacknight"",""favorite"":false,""rarity"":5,""class"":""Vanguard"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_497_ctable"":{""id"":""char_497_ctable"",""name"":""Cantabile"",""favorite"":false,""rarity"":5,""class"":""Vanguard"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_4017_puzzle"":{""id"":""char_4017_puzzle"",""name"":""Puzzle"",""favorite"":false,""rarity"":5,""class"":""Vanguard"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_308_swire"":{""id"":""char_308_swire"",""name"":""Swire"",""favorite"":false,""rarity"":5,""class"":""Guard"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_265_sophia"":{""id"":""char_265_sophia"",""name"":""Whislash"",""favorite"":false,""rarity"":5,""class"":""Guard"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_106_franka"":{""id"":""char_106_franka"",""name"":""Franka"",""favorite"":false,""rarity"":5,""class"":""Guard"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_131_flameb"":{""id"":""char_131_flameb"",""name"":""Flamebringer"",""favorite"":false,""rarity"":5,""class"":""Guard"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_155_tiger"":{""id"":""char_155_tiger"",""name"":""Indra"",""favorite"":false,""rarity"":5,""class"":""Guard"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_415_flint"":{""id"":""char_415_flint"",""name"":""Flint"",""favorite"":false,""rarity"":5,""class"":""Guard"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_157_dagda"":{""id"":""char_157_dagda"",""name"":""Dagda"",""favorite"":false,""rarity"":5,""class"":""Guard"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_140_whitew"":{""id"":""char_140_whitew"",""name"":""Lappland"",""favorite"":false,""rarity"":5,""class"":""Guard"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_294_ayer"":{""id"":""char_294_ayer"",""name"":""Ayerscarpe"",""favorite"":false,""rarity"":5,""class"":""Guard"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_252_bibeak"":{""id"":""char_252_bibeak"",""name"":""Bibeak"",""favorite"":false,""rarity"":5,""class"":""Guard"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_459_tachak"":{""id"":""char_459_tachak"",""name"":""Tachanka"",""favorite"":false,""rarity"":5,""class"":""Guard"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_143_ghost"":{""id"":""char_143_ghost"",""name"":""Specter"",""favorite"":false,""rarity"":5,""class"":""Guard"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_356_broca"":{""id"":""char_356_broca"",""name"":""Broca"",""favorite"":false,""rarity"":5,""class"":""Guard"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_274_astesi"":{""id"":""char_274_astesi"",""name"":""Astesia"",""favorite"":false,""rarity"":5,""class"":""Guard"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_333_sidero"":{""id"":""char_333_sidero"",""name"":""Sideroca"",""favorite"":false,""rarity"":5,""class"":""Guard"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_475_akafyu"":{""id"":""char_475_akafyu"",""name"":""Akafuyu"",""favorite"":false,""rarity"":5,""class"":""Guard"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_421_crow"":{""id"":""char_421_crow"",""name"":""La Pluma"",""favorite"":false,""rarity"":5,""class"":""Guard"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_4066_highmo"":{""id"":""char_4066_highmo"",""name"":""Highmore"",""favorite"":false,""rarity"":5,""class"":""Guard"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_486_takila"":{""id"":""char_486_takila"",""name"":""Tequila"",""favorite"":false,""rarity"":5,""class"":""Guard"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_129_bluep"":{""id"":""char_129_bluep"",""name"":""Blue Poison"",""favorite"":false,""rarity"":5,""class"":""Sniper"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_204_platnm"":{""id"":""char_204_platnm"",""name"":""Platinum"",""favorite"":false,""rarity"":5,""class"":""Sniper"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_367_swllow"":{""id"":""char_367_swllow"",""name"":""GreyThroat"",""favorite"":false,""rarity"":5,""class"":""Sniper"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_365_aprl"":{""id"":""char_365_aprl"",""name"":""April"",""favorite"":false,""rarity"":5,""class"":""Sniper"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_1021_kroos2"":{""id"":""char_1021_kroos2"",""name"":""Kroos the Keen Glint"",""favorite"":false,""rarity"":5,""class"":""Sniper"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_219_meteo"":{""id"":""char_219_meteo"",""name"":""Meteorite"",""favorite"":false,""rarity"":5,""class"":""Sniper"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_379_sesa"":{""id"":""char_379_sesa"",""name"":""Sesa"",""favorite"":false,""rarity"":5,""class"":""Sniper"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_279_excu"":{""id"":""char_279_excu"",""name"":""Executor"",""favorite"":false,""rarity"":5,""class"":""Sniper"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_346_aosta"":{""id"":""char_346_aosta"",""name"":""Aosta"",""favorite"":false,""rarity"":5,""class"":""Sniper"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_002_amiya"":{""id"":""char_002_amiya"",""name"":""Amiya"",""favorite"":false,""rarity"":5,""class"":""Caster"",""potential"":4,""promotion"":2,""owned"":true,""level"":69,""skillLevel"":7,""mastery"":[null,null,3],""module"":[0],""skin"":""char_002_amiya_2""},""char_405_absin"":{""id"":""char_405_absin"",""name"":""Absinthe"",""favorite"":false,""rarity"":5,""class"":""Caster"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_411_tomimi"":{""id"":""char_411_tomimi"",""name"":""Tomimi"",""favorite"":false,""rarity"":5,""class"":""Caster"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_466_qanik"":{""id"":""char_466_qanik"",""name"":""Qanipalaat"",""favorite"":false,""rarity"":5,""class"":""Caster"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_166_skfire"":{""id"":""char_166_skfire"",""name"":""Skyfire"",""favorite"":false,""rarity"":5,""class"":""Caster"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_306_leizi"":{""id"":""char_306_leizi"",""name"":""Leizi"",""favorite"":false,""rarity"":5,""class"":""Caster"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_135_halo"":{""id"":""char_135_halo"",""name"":""Astgenne"",""favorite"":false,""rarity"":5,""class"":""Caster"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_344_beewax"":{""id"":""char_344_beewax"",""name"":""Beeswax"",""favorite"":false,""rarity"":5,""class"":""Caster"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_373_lionhd"":{""id"":""char_373_lionhd"",""name"":""Leonhardt"",""favorite"":false,""rarity"":5,""class"":""Caster"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_388_mint"":{""id"":""char_388_mint"",""name"":""Mint"",""favorite"":false,""rarity"":5,""class"":""Caster"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_338_iris"":{""id"":""char_338_iris"",""name"":""Iris"",""favorite"":false,""rarity"":5,""class"":""Caster"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_297_hamoni"":{""id"":""char_297_hamoni"",""name"":""Harmonie"",""favorite"":false,""rarity"":5,""class"":""Caster"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_1011_lava2"":{""id"":""char_1011_lava2"",""name"":""Lava the Purgatory"",""favorite"":false,""rarity"":5,""class"":""Caster"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_489_serum"":{""id"":""char_489_serum"",""name"":""Corroserum"",""favorite"":false,""rarity"":5,""class"":""Caster"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_4013_kjera"":{""id"":""char_4013_kjera"",""name"":""Kjera"",""favorite"":false,""rarity"":5,""class"":""Caster"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_4040_rockr"":{""id"":""char_4040_rockr"",""name"":""Rockrock"",""favorite"":false,""rarity"":5,""class"":""Caster"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_4054_malist"":{""id"":""char_4054_malist"",""name"":""Minimalist"",""favorite"":false,""rarity"":5,""class"":""Caster"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_242_otter"":{""id"":""char_242_otter"",""name"":""Mayer"",""favorite"":false,""rarity"":5,""class"":""Supporter"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_336_folivo"":{""id"":""char_336_folivo"",""name"":""Scene"",""favorite"":false,""rarity"":5,""class"":""Supporter"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_108_silent"":{""id"":""char_108_silent"",""name"":""Silence"",""favorite"":false,""rarity"":5,""class"":""Medic"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_171_bldsk"":{""id"":""char_171_bldsk"",""name"":""Warfarin"",""favorite"":false,""rarity"":5,""class"":""Medic"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_345_folnic"":{""id"":""char_345_folnic"",""name"":""Folinic"",""favorite"":false,""rarity"":5,""class"":""Medic"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_348_ceylon"":{""id"":""char_348_ceylon"",""name"":""Ceylon"",""favorite"":false,""rarity"":5,""class"":""Medic"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_436_whispr"":{""id"":""char_436_whispr"",""name"":""Whisperain"",""favorite"":false,""rarity"":5,""class"":""Medic"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_402_tuye"":{""id"":""char_402_tuye"",""name"":""Tuye"",""favorite"":false,""rarity"":5,""class"":""Medic"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_473_mberry"":{""id"":""char_473_mberry"",""name"":""Mulberry"",""favorite"":false,""rarity"":5,""class"":""Medic"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_449_glider"":{""id"":""char_449_glider"",""name"":""Honeyberry"",""favorite"":false,""rarity"":5,""class"":""Medic"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_1024_hbisc2"":{""id"":""char_1024_hbisc2"",""name"":""Hibiscus the Purifier"",""favorite"":false,""rarity"":5,""class"":""Medic"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_4071_peper"":{""id"":""char_4071_peper"",""name"":""Paprika"",""favorite"":false,""rarity"":5,""class"":""Medic"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_148_nearl"":{""id"":""char_148_nearl"",""name"":""Nearl"",""favorite"":false,""rarity"":5,""class"":""Defender"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_226_hmau"":{""id"":""char_226_hmau"",""name"":""Hung"",""favorite"":false,""rarity"":5,""class"":""Defender"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_144_red"":{""id"":""char_144_red"",""name"":""Projekt Red"",""favorite"":false,""rarity"":5,""class"":""Specialist"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_243_waaifu"":{""id"":""char_243_waaifu"",""name"":""Waai Fu"",""favorite"":false,""rarity"":5,""class"":""Specialist"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_214_kafka"":{""id"":""char_214_kafka"",""name"":""Kafka"",""favorite"":false,""rarity"":5,""class"":""Specialist"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_455_nothin"":{""id"":""char_455_nothin"",""name"":""Mr.Nothing"",""favorite"":false,""rarity"":5,""class"":""Specialist"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_107_liskam"":{""id"":""char_107_liskam"",""name"":""Liskarm"",""favorite"":false,""rarity"":5,""class"":""Defender"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_201_moeshd"":{""id"":""char_201_moeshd"",""name"":""Croissant"",""favorite"":false,""rarity"":5,""class"":""Defender"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_325_bison"":{""id"":""char_325_bison"",""name"":""Bison"",""favorite"":false,""rarity"":5,""class"":""Defender"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_163_hpsts"":{""id"":""char_163_hpsts"",""name"":""Vulcan"",""favorite"":false,""rarity"":5,""class"":""Defender"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_378_asbest"":{""id"":""char_378_asbest"",""name"":""Asbestos"",""favorite"":false,""rarity"":5,""class"":""Defender"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_4025_aprot2"":{""id"":""char_4025_aprot2"",""name"":""Shalem"",""favorite"":false,""rarity"":5,""class"":""Defender"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_4047_pianst"":{""id"":""char_4047_pianst"",""name"":""Czerny"",""favorite"":false,""rarity"":5,""class"":""Defender"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_457_blitz"":{""id"":""char_457_blitz"",""name"":""Blitz"",""favorite"":false,""rarity"":5,""class"":""Defender"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_304_zebra"":{""id"":""char_304_zebra"",""name"":""Heavyrain"",""favorite"":false,""rarity"":5,""class"":""Defender"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_431_ashlok"":{""id"":""char_431_ashlok"",""name"":""Ashlock"",""favorite"":false,""rarity"":5,""class"":""Defender"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_422_aurora"":{""id"":""char_422_aurora"",""name"":""Aurora"",""favorite"":false,""rarity"":5,""class"":""Defender"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_145_prove"":{""id"":""char_145_prove"",""name"":""Provence"",""favorite"":false,""rarity"":5,""class"":""Sniper"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_158_milu"":{""id"":""char_158_milu"",""name"":""Firewatch"",""favorite"":false,""rarity"":5,""class"":""Sniper"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_218_cuttle"":{""id"":""char_218_cuttle"",""name"":""Andreana"",""favorite"":false,""rarity"":5,""class"":""Sniper"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_4014_lunacu"":{""id"":""char_4014_lunacu"",""name"":""Lunacub"",""favorite"":false,""rarity"":5,""class"":""Sniper"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_363_toddi"":{""id"":""char_363_toddi"",""name"":""Toddifons"",""favorite"":false,""rarity"":5,""class"":""Sniper"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_4043_erato"":{""id"":""char_4043_erato"",""name"":""Erato"",""favorite"":false,""rarity"":5,""class"":""Sniper"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_1027_greyy2"":{""id"":""char_1027_greyy2"",""name"":""Greyy the Lightningbearer"",""favorite"":false,""rarity"":5,""class"":""Sniper"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_173_slchan"":{""id"":""char_173_slchan"",""name"":""Cliffheart"",""favorite"":false,""rarity"":5,""class"":""Specialist"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_383_snsant"":{""id"":""char_383_snsant"",""name"":""Snowsant"",""favorite"":false,""rarity"":5,""class"":""Specialist"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_174_slbell"":{""id"":""char_174_slbell"",""name"":""Pramanix"",""favorite"":false,""rarity"":5,""class"":""Supporter"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_254_vodfox"":{""id"":""char_254_vodfox"",""name"":""Shamare"",""favorite"":false,""rarity"":5,""class"":""Supporter"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_195_glassb"":{""id"":""char_195_glassb"",""name"":""Istina"",""favorite"":false,""rarity"":5,""class"":""Supporter"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_326_glacus"":{""id"":""char_326_glacus"",""name"":""Glaucus"",""favorite"":false,""rarity"":5,""class"":""Supporter"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_4032_provs"":{""id"":""char_4032_provs"",""name"":""Proviso"",""favorite"":false,""rarity"":5,""class"":""Supporter"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_433_windft"":{""id"":""char_433_windft"",""name"":""Windflit"",""favorite"":false,""rarity"":5,""class"":""Supporter"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_101_sora"":{""id"":""char_101_sora"",""name"":""Sora"",""favorite"":false,""rarity"":5,""class"":""Supporter"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_4045_heidi"":{""id"":""char_4045_heidi"",""name"":""Heidi"",""favorite"":false,""rarity"":5,""class"":""Supporter"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_343_tknogi"":{""id"":""char_343_tknogi"",""name"":""Tsukinogi"",""favorite"":false,""rarity"":5,""class"":""Supporter"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_4019_ncdeer"":{""id"":""char_4019_ncdeer"",""name"":""Nine-Colored Deer"",""favorite"":false,""rarity"":5,""class"":""Supporter"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_492_quercu"":{""id"":""char_492_quercu"",""name"":""Quercus"",""favorite"":false,""rarity"":5,""class"":""Supporter"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_215_mantic"":{""id"":""char_215_mantic"",""name"":""Manticore"",""favorite"":false,""rarity"":5,""class"":""Specialist"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_478_kirara"":{""id"":""char_478_kirara"",""name"":""Kirara"",""favorite"":false,""rarity"":5,""class"":""Specialist"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_241_panda"":{""id"":""char_241_panda"",""name"":""FEater"",""favorite"":false,""rarity"":5,""class"":""Specialist"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_4036_forcer"":{""id"":""char_4036_forcer"",""name"":""Enforcer"",""favorite"":false,""rarity"":5,""class"":""Specialist"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_451_robin"":{""id"":""char_451_robin"",""name"":""Robin"",""favorite"":false,""rarity"":5,""class"":""Specialist"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_458_rfrost"":{""id"":""char_458_rfrost"",""name"":""Frost"",""favorite"":false,""rarity"":5,""class"":""Specialist"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_369_bena"":{""id"":""char_369_bena"",""name"":""Bena"",""favorite"":false,""rarity"":5,""class"":""Specialist"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_4016_kazema"":{""id"":""char_4016_kazema"",""name"":""Kazemaru"",""favorite"":false,""rarity"":5,""class"":""Specialist"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_103_angel"":{""id"":""char_103_angel"",""name"":""Exusiai"",""favorite"":false,""rarity"":6,""class"":""Sniper"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_332_archet"":{""id"":""char_332_archet"",""name"":""Archetto"",""favorite"":false,""rarity"":6,""class"":""Sniper"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_456_ash"":{""id"":""char_456_ash"",""name"":""Ash"",""favorite"":false,""rarity"":6,""class"":""Sniper"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_340_shwaz"":{""id"":""char_340_shwaz"",""name"":""Schwarz"",""favorite"":false,""rarity"":6,""class"":""Sniper"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_4055_bgsnow"":{""id"":""char_4055_bgsnow"",""name"":""Pozëmka"",""favorite"":false,""rarity"":6,""class"":""Sniper"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_430_fartth"":{""id"":""char_430_fartth"",""name"":""Fartooth"",""favorite"":false,""rarity"":6,""class"":""Sniper"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_113_cqbw"":{""id"":""char_113_cqbw"",""name"":""W"",""favorite"":false,""rarity"":6,""class"":""Sniper"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_300_phenxi"":{""id"":""char_300_phenxi"",""name"":""Fiammetta"",""favorite"":false,""rarity"":6,""class"":""Sniper"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_197_poca"":{""id"":""char_197_poca"",""name"":""Rosa"",""favorite"":false,""rarity"":6,""class"":""Sniper"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_391_rosmon"":{""id"":""char_391_rosmon"",""name"":""Rosmontis"",""favorite"":false,""rarity"":6,""class"":""Sniper"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_1013_chen2"":{""id"":""char_1013_chen2"",""name"":""Ch'en the Holungday"",""favorite"":false,""rarity"":6,""class"":""Sniper"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_112_siege"":{""id"":""char_112_siege"",""name"":""Siege"",""favorite"":false,""rarity"":6,""class"":""Vanguard"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_222_bpipe"":{""id"":""char_222_bpipe"",""name"":""Bagpipe"",""favorite"":false,""rarity"":6,""class"":""Vanguard"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_362_saga"":{""id"":""char_362_saga"",""name"":""Saga"",""favorite"":false,""rarity"":6,""class"":""Vanguard"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_479_sleach"":{""id"":""char_479_sleach"",""name"":""Saileach"",""favorite"":false,""rarity"":6,""class"":""Vanguard"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_420_flamtl"":{""id"":""char_420_flamtl"",""name"":""Flametail"",""favorite"":false,""rarity"":6,""class"":""Vanguard"",""potential"":3,""promotion"":2,""owned"":true,""level"":6,""skillLevel"":4,""mastery"":[],""module"":[]},""char_427_vigil"":{""id"":""char_427_vigil"",""name"":""Vigil"",""favorite"":false,""rarity"":6,""class"":""Vanguard"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_134_ifrit"":{""id"":""char_134_ifrit"",""name"":""Ifrit"",""favorite"":false,""rarity"":6,""class"":""Caster"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_213_mostma"":{""id"":""char_213_mostma"",""name"":""Mostima"",""favorite"":false,""rarity"":6,""class"":""Caster"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_180_amgoat"":{""id"":""char_180_amgoat"",""name"":""Eyjafjalla"",""favorite"":false,""rarity"":6,""class"":""Caster"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_2013_cerber"":{""id"":""char_2013_cerber"",""name"":""Ceobe"",""favorite"":false,""rarity"":6,""class"":""Caster"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_2015_dusk"":{""id"":""char_2015_dusk"",""name"":""Dusk"",""favorite"":false,""rarity"":6,""class"":""Caster"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_472_pasngr"":{""id"":""char_472_pasngr"",""name"":""Passenger"",""favorite"":false,""rarity"":6,""class"":""Caster"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_426_billro"":{""id"":""char_426_billro"",""name"":""Carnelian"",""favorite"":false,""rarity"":6,""class"":""Caster"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_377_gdglow"":{""id"":""char_377_gdglow"",""name"":""Goldenglow"",""favorite"":false,""rarity"":6,""class"":""Caster"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_4046_ebnhlz"":{""id"":""char_4046_ebnhlz"",""name"":""Ebenholz"",""favorite"":false,""rarity"":6,""class"":""Caster"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_206_gnosis"":{""id"":""char_206_gnosis"",""name"":""Gnosis"",""favorite"":false,""rarity"":6,""class"":""Supporter"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_291_aglina"":{""id"":""char_291_aglina"",""name"":""Angelina"",""favorite"":false,""rarity"":6,""class"":""Supporter"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_358_lisa"":{""id"":""char_358_lisa"",""name"":""Suzuran"",""favorite"":false,""rarity"":6,""class"":""Supporter"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_248_mgllan"":{""id"":""char_248_mgllan"",""name"":""Magallan"",""favorite"":false,""rarity"":6,""class"":""Supporter"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_1012_skadi2"":{""id"":""char_1012_skadi2"",""name"":""Skadi the Corrupting Heart"",""favorite"":false,""rarity"":6,""class"":""Supporter"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_2023_ling"":{""id"":""char_2023_ling"",""name"":""Ling"",""favorite"":false,""rarity"":6,""class"":""Supporter"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_4072_ironmn"":{""id"":""char_4072_ironmn"",""name"":""Stainless"",""favorite"":false,""rarity"":6,""class"":""Supporter"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_250_phatom"":{""id"":""char_250_phatom"",""name"":""Phantom"",""favorite"":false,""rarity"":6,""class"":""Specialist"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_1028_texas2"":{""id"":""char_1028_texas2"",""name"":""Texas the Omertosa"",""favorite"":false,""rarity"":6,""class"":""Specialist"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_322_lmlee"":{""id"":""char_322_lmlee"",""name"":""Lee"",""favorite"":false,""rarity"":6,""class"":""Specialist"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_400_weedy"":{""id"":""char_400_weedy"",""name"":""Weedy"",""favorite"":false,""rarity"":6,""class"":""Specialist"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_225_haak"":{""id"":""char_225_haak"",""name"":""Aak"",""favorite"":false,""rarity"":6,""class"":""Specialist"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_474_glady"":{""id"":""char_474_glady"",""name"":""Gladiia"",""favorite"":false,""rarity"":6,""class"":""Specialist"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_437_mizuki"":{""id"":""char_437_mizuki"",""name"":""Mizuki"",""favorite"":false,""rarity"":6,""class"":""Specialist"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_1023_ghost2"":{""id"":""char_1023_ghost2"",""name"":""Specter the Unchained"",""favorite"":false,""rarity"":6,""class"":""Specialist"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_4048_doroth"":{""id"":""char_4048_doroth"",""name"":""Dorothy"",""favorite"":false,""rarity"":6,""class"":""Specialist"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_147_shining"":{""id"":""char_147_shining"",""name"":""Shining"",""favorite"":false,""rarity"":6,""class"":""Medic"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_179_cgbird"":{""id"":""char_179_cgbird"",""name"":""Nightingale"",""favorite"":false,""rarity"":6,""class"":""Medic"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_003_kalts"":{""id"":""char_003_kalts"",""name"":""Kal'tsit"",""favorite"":false,""rarity"":6,""class"":""Medic"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_4042_lumen"":{""id"":""char_4042_lumen"",""name"":""Lumen"",""favorite"":false,""rarity"":6,""class"":""Medic"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_1020_reed2"":{""id"":""char_1020_reed2"",""name"":""Reed The Flame Shadow"",""favorite"":false,""rarity"":6,""class"":""Medic"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_136_hsguma"":{""id"":""char_136_hsguma"",""name"":""Hoshiguma"",""favorite"":false,""rarity"":6,""class"":""Defender"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_202_demkni"":{""id"":""char_202_demkni"",""name"":""Saria"",""favorite"":false,""rarity"":6,""class"":""Defender"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_423_blemsh"":{""id"":""char_423_blemsh"",""name"":""Blemishine"",""favorite"":false,""rarity"":6,""class"":""Defender"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_2014_nian"":{""id"":""char_2014_nian"",""name"":""Nian"",""favorite"":false,""rarity"":6,""class"":""Defender"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_311_mudrok"":{""id"":""char_311_mudrok"",""name"":""Mudrock"",""favorite"":false,""rarity"":6,""class"":""Defender"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_4065_judge"":{""id"":""char_4065_judge"",""name"":""Penance"",""favorite"":false,""rarity"":6,""class"":""Defender"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_416_zumama"":{""id"":""char_416_zumama"",""name"":""Eunectes"",""favorite"":false,""rarity"":6,""class"":""Defender"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_4039_horn"":{""id"":""char_4039_horn"",""name"":""Horn"",""favorite"":false,""rarity"":6,""class"":""Defender"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_264_f12yin"":{""id"":""char_264_f12yin"",""name"":""Mountain"",""favorite"":false,""rarity"":6,""class"":""Guard"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_172_svrash"":{""id"":""char_172_svrash"",""name"":""SilverAsh"",""favorite"":false,""rarity"":6,""class"":""Guard"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_293_thorns"":{""id"":""char_293_thorns"",""name"":""Thorns"",""favorite"":false,""rarity"":6,""class"":""Guard"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_010_chen"":{""id"":""char_010_chen"",""name"":""Ch'en"",""favorite"":false,""rarity"":6,""class"":""Guard"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_4009_irene"":{""id"":""char_4009_irene"",""name"":""Irene"",""favorite"":false,""rarity"":6,""class"":""Guard"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_017_huang"":{""id"":""char_017_huang"",""name"":""Blaze"",""favorite"":false,""rarity"":6,""class"":""Guard"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_1026_gvial2"":{""id"":""char_1026_gvial2"",""name"":""Gavial the Invincible"",""favorite"":false,""rarity"":6,""class"":""Guard"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_350_surtr"":{""id"":""char_350_surtr"",""name"":""Surtr"",""favorite"":false,""rarity"":6,""class"":""Guard"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_188_helage"":{""id"":""char_188_helage"",""name"":""Hellagur"",""favorite"":false,""rarity"":6,""class"":""Guard"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_485_pallas"":{""id"":""char_485_pallas"",""name"":""Pallas"",""favorite"":false,""rarity"":6,""class"":""Guard"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_1014_nearl2"":{""id"":""char_1014_nearl2"",""name"":""Nearl the Radiant Knight"",""favorite"":false,""rarity"":6,""class"":""Guard"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_4064_mlynar"":{""id"":""char_4064_mlynar"",""name"":""Młynar"",""favorite"":false,""rarity"":6,""class"":""Guard"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_230_savage"":{""id"":""char_230_savage"",""name"":""Savage"",""favorite"":false,""rarity"":5,""class"":""Guard"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_282_catap"":{""id"":""char_282_catap"",""name"":""Catapult"",""favorite"":false,""rarity"":3,""class"":""Sniper"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_283_midn"":{""id"":""char_283_midn"",""name"":""Midnight"",""favorite"":false,""rarity"":3,""class"":""Guard"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_137_brownb"":{""id"":""char_137_brownb"",""name"":""Beehunter"",""favorite"":false,""rarity"":4,""class"":""Guard"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_347_jaksel"":{""id"":""char_347_jaksel"",""name"":""Jackie"",""favorite"":false,""rarity"":4,""class"":""Guard"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_164_nightm"":{""id"":""char_164_nightm"",""name"":""Nightmare"",""favorite"":false,""rarity"":5,""class"":""Caster"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_220_grani"":{""id"":""char_220_grani"",""name"":""Grani"",""favorite"":false,""rarity"":5,""class"":""Vanguard"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_263_skadi"":{""id"":""char_263_skadi"",""name"":""Skadi"",""favorite"":false,""rarity"":6,""class"":""Guard"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_1001_amiya2"":{""id"":""char_1001_amiya2"",""name"":""Amiya (Guard)"",""favorite"":false,""rarity"":5,""class"":""Guard"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_4077_palico"":{""id"":""char_4077_palico"",""name"":""Terra Research Commission"",""favorite"":false,""rarity"":1,""class"":""Sniper"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_4091_ulika"":{""id"":""char_4091_ulika"",""name"":""U-Official"",""favorite"":false,""rarity"":1,""class"":""Supporter"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_491_humus"":{""id"":""char_491_humus"",""name"":""Humus"",""favorite"":false,""rarity"":4,""class"":""Guard"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_154_morgan"":{""id"":""char_154_morgan"",""name"":""Morgan"",""favorite"":false,""rarity"":5,""class"":""Guard"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_4083_chimes"":{""id"":""char_4083_chimes"",""name"":""Wind Chimes"",""favorite"":false,""rarity"":5,""class"":""Guard"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_1030_noirc2"":{""id"":""char_1030_noirc2"",""name"":""Rathalos S Noir Corne"",""favorite"":false,""rarity"":5,""class"":""Guard"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_4078_bdhkgt"":{""id"":""char_4078_bdhkgt"",""name"":""Jieyun"",""favorite"":false,""rarity"":5,""class"":""Sniper"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_493_firwhl"":{""id"":""char_493_firwhl"",""name"":""Firewhistle"",""favorite"":false,""rarity"":5,""class"":""Defender"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_464_cement"":{""id"":""char_464_cement"",""name"":""Cement"",""favorite"":false,""rarity"":5,""class"":""Defender"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_4006_melnte"":{""id"":""char_4006_melnte"",""name"":""Melanite"",""favorite"":false,""rarity"":5,""class"":""Sniper"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_249_mlyss"":{""id"":""char_249_mlyss"",""name"":""Muelsyse"",""favorite"":false,""rarity"":6,""class"":""Vanguard"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_4087_ines"":{""id"":""char_4087_ines"",""name"":""Ines"",""favorite"":false,""rarity"":6,""class"":""Vanguard"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_4027_heyak"":{""id"":""char_4027_heyak"",""name"":""Ho'olheyak"",""favorite"":false,""rarity"":6,""class"":""Caster"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_4080_lin"":{""id"":""char_4080_lin"",""name"":""Lin"",""favorite"":false,""rarity"":6,""class"":""Caster"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_1031_slent2"":{""id"":""char_1031_slent2"",""name"":""Silence the Paradigmatic"",""favorite"":false,""rarity"":6,""class"":""Supporter"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_1029_yato2"":{""id"":""char_1029_yato2"",""name"":""Kirin X Yato"",""favorite"":false,""rarity"":6,""class"":""Specialist"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_2024_chyue"":{""id"":""char_2024_chyue"",""name"":""Chongyue"",""favorite"":false,""rarity"":6,""class"":""Guard"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]},""char_4082_qiubai"":{""id"":""char_4082_qiubai"",""name"":""Qiubai"",""favorite"":false,""rarity"":6,""class"":""Guard"",""potential"":0,""promotion"":-1,""owned"":false,""level"":0,""skillLevel"":0,""mastery"":[],""module"":[]}}"
2KvLh5gN,Arknights character JSON,koriar,JSON,Saturday 27th of May 2023 12:36:57 AM CDT,"{""chars"":{""1"":{""instId"":1,""charId"":""char_002_amiya"",""favorPoint"":25570,""potentialRank"":3,""mainSkillLvl"":7,""skin"":""char_002_amiya#2"",""level"":69,""exp"":1129,""evolvePhase"":2,""defaultSkillIndex"":2,""gainTime"":1588729421,""skills"":[{""skillId"":""skcom_magic_rage[3]"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_amiya_2"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_amiya_3"",""unlock"":1,""state"":0,""specializeLevel"":3,""completeUpgradeTime"":-1}],""voiceLan"":""EN"",""currentEquip"":null,""equip"":{},""starMark"":0},""2"":{""instId"":2,""charId"":""char_502_nblade"",""favorPoint"":22701,""potentialRank"":4,""mainSkillLvl"":1,""skin"":""char_502_nblade#1"",""level"":30,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":-1,""gainTime"":1588729421,""skills"":[],""voiceLan"":""EN"",""currentEquip"":null,""equip"":{}},""3"":{""instId"":3,""charId"":""char_500_noirc"",""favorPoint"":25570,""potentialRank"":5,""mainSkillLvl"":1,""skin"":""char_500_noirc#1"",""level"":30,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":-1,""gainTime"":1588729421,""skills"":[],""voiceLan"":""EN"",""currentEquip"":null,""equip"":{}},""4"":{""instId"":4,""charId"":""char_503_rang"",""favorPoint"":18814,""potentialRank"":5,""mainSkillLvl"":1,""skin"":""char_503_rang#1"",""level"":30,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":-1,""gainTime"":1588729421,""skills"":[],""voiceLan"":""EN"",""currentEquip"":null,""equip"":{}},""5"":{""instId"":5,""charId"":""char_118_yuki"",""favorPoint"":25570,""potentialRank"":5,""mainSkillLvl"":7,""skin"":""char_118_yuki@boc#2"",""level"":60,""exp"":0,""evolvePhase"":1,""defaultSkillIndex"":1,""gainTime"":1588730884,""skills"":[{""skillId"":""skchr_yuki_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_yuki_2"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{""uniequip_001_yuki"":{""hide"":1,""locked"":0,""level"":1},""uniequip_002_yuki"":{""hide"":1,""locked"":1,""level"":1}}},""6"":{""instId"":6,""charId"":""char_120_hibisc"",""favorPoint"":25570,""potentialRank"":5,""mainSkillLvl"":4,""skin"":""char_120_hibisc#1"",""level"":55,""exp"":0,""evolvePhase"":1,""defaultSkillIndex"":0,""gainTime"":1588731544,""skills"":[{""skillId"":""skcom_heal_up[1]"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{}},""7"":{""instId"":7,""charId"":""char_211_adnach"",""favorPoint"":25570,""potentialRank"":5,""mainSkillLvl"":5,""skin"":""char_211_adnach@sale#5"",""level"":55,""exp"":0,""evolvePhase"":1,""defaultSkillIndex"":0,""gainTime"":1592963876,""skills"":[{""skillId"":""skcom_atk_up[1]"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""EN"",""currentEquip"":null,""equip"":{}},""8"":{""instId"":8,""charId"":""char_235_jesica"",""favorPoint"":25570,""potentialRank"":5,""mainSkillLvl"":7,""skin"":""char_235_jesica@sweep#1"",""level"":60,""exp"":0,""evolvePhase"":1,""defaultSkillIndex"":0,""gainTime"":1592964238,""skills"":[{""skillId"":""skchr_jesica_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_jesica_2"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""EN"",""currentEquip"":null,""equip"":{""uniequip_001_jesica"":{""hide"":1,""locked"":0,""level"":1},""uniequip_002_jesica"":{""hide"":1,""locked"":1,""level"":1}}},""9"":{""instId"":9,""charId"":""char_123_fang"",""favorPoint"":25570,""potentialRank"":5,""mainSkillLvl"":7,""skin"":""char_123_fang@winter#1"",""level"":55,""exp"":0,""evolvePhase"":1,""defaultSkillIndex"":0,""gainTime"":1592965439,""skills"":[{""skillId"":""skcom_charge_cost[1]"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""EN"",""currentEquip"":null,""equip"":{}},""10"":{""instId"":10,""charId"":""char_192_falco"",""favorPoint"":21421,""potentialRank"":5,""mainSkillLvl"":3,""skin"":""char_192_falco#1"",""level"":55,""exp"":0,""evolvePhase"":1,""defaultSkillIndex"":0,""gainTime"":1592981194,""skills"":[{""skillId"":""skcom_quickattack[1]"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""EN"",""currentEquip"":null,""equip"":{}},""11"":{""instId"":11,""charId"":""char_278_orchid"",""favorPoint"":25570,""potentialRank"":5,""mainSkillLvl"":5,""skin"":""char_278_orchid#1"",""level"":55,""exp"":0,""evolvePhase"":1,""defaultSkillIndex"":0,""gainTime"":1593094601,""skills"":[{""skillId"":""skcom_quickattack[1]"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{}},""12"":{""instId"":12,""charId"":""char_501_durin"",""favorPoint"":25570,""potentialRank"":4,""mainSkillLvl"":1,""skin"":""char_501_durin#1"",""level"":30,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":-1,""gainTime"":1593277907,""skills"":[],""voiceLan"":""EN"",""currentEquip"":null,""equip"":{},""starMark"":0},""13"":{""instId"":13,""charId"":""char_009_12fce"",""favorPoint"":21109,""potentialRank"":5,""mainSkillLvl"":1,""skin"":""char_009_12fce#1"",""level"":30,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":-1,""gainTime"":1593278548,""skills"":[],""voiceLan"":""EN"",""currentEquip"":null,""equip"":{}},""14"":{""instId"":14,""charId"":""char_121_lava"",""favorPoint"":25570,""potentialRank"":5,""mainSkillLvl"":6,""skin"":""char_121_lava#1"",""level"":55,""exp"":0,""evolvePhase"":1,""defaultSkillIndex"":0,""gainTime"":1593279065,""skills"":[{""skillId"":""skcom_magic_rage[1]"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""EN"",""currentEquip"":null,""equip"":{}},""15"":{""instId"":15,""charId"":""char_150_snakek"",""favorPoint"":25570,""potentialRank"":5,""mainSkillLvl"":7,""skin"":""char_150_snakek#2"",""level"":69,""exp"":529,""evolvePhase"":2,""defaultSkillIndex"":1,""gainTime"":1593440488,""skills"":[{""skillId"":""skcom_def_up[2]"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_snakek_2"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":""uniequip_002_snakek"",""equip"":{""uniequip_001_snakek"":{""hide"":0,""locked"":0,""level"":1},""uniequip_002_snakek"":{""hide"":0,""locked"":0,""level"":1}}},""16"":{""instId"":16,""charId"":""char_148_nearl"",""favorPoint"":25570,""potentialRank"":2,""mainSkillLvl"":7,""skin"":""char_148_nearl@summer#2"",""level"":70,""exp"":0,""evolvePhase"":1,""defaultSkillIndex"":1,""gainTime"":1593440488,""skills"":[{""skillId"":""skchr_nearl_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_nearl_2"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""EN"",""currentEquip"":null,""equip"":{""uniequip_001_nearl"":{""hide"":1,""locked"":0,""level"":1},""uniequip_002_nearl"":{""hide"":1,""locked"":1,""level"":1}}},""17"":{""instId"":17,""charId"":""char_149_scave"",""favorPoint"":25570,""potentialRank"":5,""mainSkillLvl"":7,""skin"":""char_149_scave#1"",""level"":60,""exp"":0,""evolvePhase"":1,""defaultSkillIndex"":0,""gainTime"":1593440488,""skills"":[{""skillId"":""skcom_charge_cost[2]"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_scave_2"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{""uniequip_001_scave"":{""hide"":1,""locked"":0,""level"":1},""uniequip_002_scave"":{""hide"":1,""locked"":1,""level"":1}}},""18"":{""instId"":18,""charId"":""char_110_deepcl"",""favorPoint"":6860,""potentialRank"":5,""mainSkillLvl"":1,""skin"":""char_110_deepcl#1"",""level"":40,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1593440488,""skills"":[{""skillId"":""skchr_deepcl_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_deepcl_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{""uniequip_001_deepcl"":{""hide"":1,""locked"":0,""level"":1},""uniequip_002_deepcl"":{""hide"":1,""locked"":1,""level"":1}}},""19"":{""instId"":19,""charId"":""char_181_flower"",""favorPoint"":25570,""potentialRank"":5,""mainSkillLvl"":7,""skin"":""char_181_flower@daily#1"",""level"":69,""exp"":9929,""evolvePhase"":2,""defaultSkillIndex"":1,""gainTime"":1593440488,""skills"":[{""skillId"":""skcom_heal_up[2]"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_flower_2"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":""uniequip_002_flower"",""equip"":{""uniequip_001_flower"":{""hide"":0,""locked"":0,""level"":1},""uniequip_002_flower"":{""hide"":0,""locked"":0,""level"":1}}},""20"":{""instId"":20,""charId"":""char_199_yak"",""favorPoint"":5207,""potentialRank"":5,""mainSkillLvl"":1,""skin"":""char_199_yak#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1593440488,""skills"":[{""skillId"":""skchr_yak_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_yak_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{""uniequip_001_yak"":{""hide"":1,""locked"":0,""level"":1},""uniequip_002_yak"":{""hide"":1,""locked"":1,""level"":1}}},""21"":{""instId"":21,""charId"":""char_122_beagle"",""favorPoint"":25570,""potentialRank"":5,""mainSkillLvl"":5,""skin"":""char_122_beagle#1"",""level"":55,""exp"":0,""evolvePhase"":1,""defaultSkillIndex"":0,""gainTime"":1593440488,""skills"":[{""skillId"":""skcom_def_up[1]"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""EN"",""currentEquip"":null,""equip"":{}},""22"":{""instId"":22,""charId"":""char_172_svrash"",""favorPoint"":25570,""potentialRank"":2,""mainSkillLvl"":7,""skin"":""char_172_svrash@snow#1"",""level"":90,""exp"":0,""evolvePhase"":2,""defaultSkillIndex"":2,""gainTime"":1593440488,""skills"":[{""skillId"":""skchr_svrash_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_svrash_2"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_svrash_3"",""unlock"":1,""state"":0,""specializeLevel"":3,""completeUpgradeTime"":-1}],""voiceLan"":""EN"",""currentEquip"":null,""equip"":{}},""23"":{""instId"":23,""charId"":""char_124_kroos"",""favorPoint"":25570,""potentialRank"":5,""mainSkillLvl"":7,""skin"":""char_124_kroos@witch#1"",""level"":55,""exp"":0,""evolvePhase"":1,""defaultSkillIndex"":0,""gainTime"":1593498105,""skills"":[{""skillId"":""skchr_kroos_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{}},""24"":{""instId"":24,""charId"":""char_212_ansel"",""favorPoint"":25170,""potentialRank"":5,""mainSkillLvl"":3,""skin"":""char_212_ansel#1"",""level"":55,""exp"":0,""evolvePhase"":1,""defaultSkillIndex"":0,""gainTime"":1593498129,""skills"":[{""skillId"":""skcom_range_extend"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""EN"",""currentEquip"":null,""equip"":{}},""25"":{""instId"":25,""charId"":""char_173_slchan"",""favorPoint"":4139,""potentialRank"":0,""mainSkillLvl"":7,""skin"":""char_173_slchan#1"",""level"":46,""exp"":130,""evolvePhase"":1,""defaultSkillIndex"":0,""gainTime"":1594313153,""skills"":[{""skillId"":""skchr_slchan_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_slchan_2"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""EN"",""currentEquip"":null,""equip"":{""uniequip_001_slchan"":{""hide"":1,""locked"":0,""level"":1},""uniequip_002_slchan"":{""hide"":1,""locked"":1,""level"":1}}},""26"":{""instId"":26,""charId"":""char_208_melan"",""favorPoint"":25570,""potentialRank"":5,""mainSkillLvl"":7,""skin"":""char_208_melan@epoque#1"",""level"":55,""exp"":0,""evolvePhase"":1,""defaultSkillIndex"":0,""gainTime"":1596924073,""skills"":[{""skillId"":""skcom_atk_up[1]"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""EN"",""currentEquip"":null,""equip"":{}},""27"":{""instId"":27,""charId"":""char_284_spot"",""favorPoint"":25570,""potentialRank"":5,""mainSkillLvl"":4,""skin"":""char_284_spot#1"",""level"":55,""exp"":0,""evolvePhase"":1,""defaultSkillIndex"":0,""gainTime"":1596925738,""skills"":[{""skillId"":""skchr_spot_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{}},""28"":{""instId"":28,""charId"":""char_282_catap"",""favorPoint"":25570,""potentialRank"":5,""mainSkillLvl"":7,""skin"":""char_282_catap#1"",""level"":55,""exp"":0,""evolvePhase"":1,""defaultSkillIndex"":0,""gainTime"":1596925761,""skills"":[{""skillId"":""skchr_catap_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{}},""29"":{""instId"":29,""charId"":""char_226_hmau"",""favorPoint"":231,""potentialRank"":2,""mainSkillLvl"":1,""skin"":""char_226_hmau#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1596925845,""skills"":[{""skillId"":""skchr_hmau_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_hmau_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{""uniequip_001_hmau"":{""hide"":1,""locked"":0,""level"":1},""uniequip_002_hmau"":{""hide"":1,""locked"":1,""level"":1}}},""30"":{""instId"":30,""charId"":""char_190_clour"",""favorPoint"":23428,""potentialRank"":5,""mainSkillLvl"":5,""skin"":""char_190_clour#1"",""level"":60,""exp"":0,""evolvePhase"":1,""defaultSkillIndex"":1,""gainTime"":1596925845,""skills"":[{""skillId"":""skcom_atk_up[2]"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_clour_2"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{""uniequip_001_clour"":{""hide"":1,""locked"":0,""level"":1},""uniequip_002_clour"":{""hide"":1,""locked"":1,""level"":1}}},""31"":{""instId"":31,""charId"":""char_151_myrtle"",""favorPoint"":25570,""potentialRank"":5,""mainSkillLvl"":7,""skin"":""char_151_myrtle#1"",""level"":69,""exp"":1529,""evolvePhase"":2,""defaultSkillIndex"":0,""gainTime"":1596925845,""skills"":[{""skillId"":""skcom_assist_cost[2]"",""unlock"":1,""state"":0,""specializeLevel"":3,""completeUpgradeTime"":-1},{""skillId"":""skchr_myrtle_2"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""EN"",""currentEquip"":null,""equip"":{}},""32"":{""instId"":32,""charId"":""char_289_gyuki"",""favorPoint"":10305,""potentialRank"":5,""mainSkillLvl"":1,""skin"":""char_289_gyuki#1"",""level"":1,""exp"":0,""evolvePhase"":1,""defaultSkillIndex"":0,""gainTime"":1596925845,""skills"":[{""skillId"":""skcom_heal_self[2]"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_gyuki_2"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{""uniequip_001_gyuki"":{""hide"":1,""locked"":0,""level"":1},""uniequip_002_gyuki"":{""hide"":1,""locked"":1,""level"":1}}},""33"":{""instId"":33,""charId"":""char_253_greyy"",""favorPoint"":16169,""potentialRank"":5,""mainSkillLvl"":1,""skin"":""char_253_greyy#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1596925845,""skills"":[{""skillId"":""skcom_magic_rage[2]"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_greyy_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{""uniequip_001_greyy"":{""hide"":1,""locked"":0,""level"":1},""uniequip_002_greyy"":{""hide"":1,""locked"":1,""level"":1}}},""34"":{""instId"":34,""charId"":""char_210_stward"",""favorPoint"":25570,""potentialRank"":5,""mainSkillLvl"":3,""skin"":""char_210_stward#1"",""level"":55,""exp"":0,""evolvePhase"":1,""defaultSkillIndex"":0,""gainTime"":1597292355,""skills"":[{""skillId"":""skchr_stward_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{}},""35"":{""instId"":35,""charId"":""char_126_shotst"",""favorPoint"":17122,""potentialRank"":5,""mainSkillLvl"":1,""skin"":""char_126_shotst#1"",""level"":45,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1597847536,""skills"":[{""skillId"":""skchr_shotst_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_shotst_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{""uniequip_001_shotst"":{""hide"":1,""locked"":0,""level"":1},""uniequip_002_shotst"":{""hide"":1,""locked"":1,""level"":1}}},""36"":{""instId"":36,""charId"":""char_109_fmout"",""favorPoint"":25570,""potentialRank"":5,""mainSkillLvl"":7,""skin"":""char_109_fmout#1"",""level"":60,""exp"":0,""evolvePhase"":1,""defaultSkillIndex"":1,""gainTime"":1600796582,""skills"":[{""skillId"":""skcom_magic_rage[2]"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_fmout_2"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{""uniequip_001_fmout"":{""hide"":1,""locked"":0,""level"":1},""uniequip_002_fmout"":{""hide"":1,""locked"":1,""level"":1}}},""37"":{""instId"":37,""charId"":""char_291_aglina"",""favorPoint"":25570,""potentialRank"":0,""mainSkillLvl"":7,""skin"":""char_291_aglina@boc#1"",""level"":69,""exp"":5129,""evolvePhase"":2,""defaultSkillIndex"":0,""gainTime"":1600796582,""skills"":[{""skillId"":""skchr_aglina_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_aglina_2"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_aglina_3"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":""uniequip_002_aglina"",""equip"":{""uniequip_001_aglina"":{""hide"":0,""locked"":0,""level"":1},""uniequip_002_aglina"":{""hide"":0,""locked"":0,""level"":1},""uniequip_003_aglina"":{""hide"":0,""locked"":1,""level"":1}},""starMark"":1},""38"":{""instId"":38,""charId"":""char_130_doberm"",""favorPoint"":21273,""potentialRank"":5,""mainSkillLvl"":1,""skin"":""char_130_doberm#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1600796582,""skills"":[{""skillId"":""skchr_doberm_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_doberm_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""EN"",""currentEquip"":null,""equip"":{""uniequip_001_doberm"":{""hide"":1,""locked"":0,""level"":1},""uniequip_002_doberm"":{""hide"":1,""locked"":1,""level"":1}}},""39"":{""instId"":39,""charId"":""char_209_ardign"",""favorPoint"":20392,""potentialRank"":5,""mainSkillLvl"":1,""skin"":""char_209_ardign#1"",""level"":55,""exp"":0,""evolvePhase"":1,""defaultSkillIndex"":0,""gainTime"":1600796582,""skills"":[{""skillId"":""skcom_heal_self[1]"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{}},""40"":{""instId"":40,""charId"":""char_164_nightm"",""favorPoint"":5074,""potentialRank"":0,""mainSkillLvl"":1,""skin"":""char_164_nightm#1"",""level"":40,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1600796876,""skills"":[{""skillId"":""skchr_nightm_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_nightm_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{}},""41"":{""instId"":41,""charId"":""char_230_savage"",""favorPoint"":0,""potentialRank"":1,""mainSkillLvl"":1,""skin"":""char_230_savage#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1609551853,""skills"":[{""skillId"":""skchr_savage_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_savage_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{}},""42"":{""instId"":42,""charId"":""char_376_therex"",""favorPoint"":16172,""potentialRank"":2,""mainSkillLvl"":1,""skin"":""char_376_therex#1"",""level"":30,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":-1,""gainTime"":1611456264,""skills"":[],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{}},""43"":{""instId"":43,""charId"":""char_285_medic2"",""favorPoint"":25570,""potentialRank"":4,""mainSkillLvl"":1,""skin"":""char_285_medic2#1"",""level"":30,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":-1,""gainTime"":1653253578,""skills"":[],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{}},""44"":{""instId"":44,""charId"":""char_277_sqrrel"",""favorPoint"":17333,""potentialRank"":5,""mainSkillLvl"":7,""skin"":""char_277_sqrrel#1"",""level"":60,""exp"":0,""evolvePhase"":1,""defaultSkillIndex"":0,""gainTime"":1653318987,""skills"":[{""skillId"":""skchr_sqrrel_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_sqrrel_2"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""EN"",""currentEquip"":null,""equip"":{}},""45"":{""instId"":45,""charId"":""char_240_wyvern"",""favorPoint"":25570,""potentialRank"":5,""mainSkillLvl"":7,""skin"":""char_240_wyvern#1"",""level"":55,""exp"":0,""evolvePhase"":1,""defaultSkillIndex"":0,""gainTime"":1653553358,""skills"":[{""skillId"":""skchr_wyvern_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{}},""46"":{""instId"":46,""charId"":""char_452_bstalk"",""favorPoint"":15475,""potentialRank"":5,""mainSkillLvl"":1,""skin"":""char_452_bstalk#1"",""level"":1,""exp"":0,""evolvePhase"":1,""defaultSkillIndex"":0,""gainTime"":1653553932,""skills"":[{""skillId"":""skchr_bstalk_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_bstalk_2"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{}},""47"":{""instId"":47,""charId"":""char_281_popka"",""favorPoint"":22248,""potentialRank"":5,""mainSkillLvl"":1,""skin"":""char_281_popka#1"",""level"":55,""exp"":0,""evolvePhase"":1,""defaultSkillIndex"":0,""gainTime"":1653811707,""skills"":[{""skillId"":""skcom_atk_up[1]"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{}},""48"":{""instId"":48,""charId"":""char_193_frostl"",""favorPoint"":23,""potentialRank"":5,""mainSkillLvl"":1,""skin"":""char_193_frostl#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1653811748,""skills"":[{""skillId"":""skchr_frostl_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_frostl_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{}},""49"":{""instId"":49,""charId"":""char_137_brownb"",""favorPoint"":1050,""potentialRank"":5,""mainSkillLvl"":1,""skin"":""char_137_brownb#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1653840987,""skills"":[{""skillId"":""skchr_brownb_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_brownb_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{}},""50"":{""instId"":50,""charId"":""char_141_nights"",""favorPoint"":25570,""potentialRank"":5,""mainSkillLvl"":7,""skin"":""char_141_nights#1"",""level"":60,""exp"":0,""evolvePhase"":1,""defaultSkillIndex"":1,""gainTime"":1653841034,""skills"":[{""skillId"":""skcom_atk_up[2]"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_nights_2"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{}},""51"":{""instId"":51,""charId"":""char_272_strong"",""favorPoint"":25570,""potentialRank"":5,""mainSkillLvl"":4,""skin"":""char_272_strong#1"",""level"":60,""exp"":0,""evolvePhase"":1,""defaultSkillIndex"":0,""gainTime"":1653841048,""skills"":[{""skillId"":""skchr_strong_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_strong_2"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{""uniequip_001_strong"":{""hide"":1,""locked"":0,""level"":1},""uniequip_002_strong"":{""hide"":1,""locked"":1,""level"":1}}},""52"":{""instId"":52,""charId"":""char_143_ghost"",""favorPoint"":25570,""potentialRank"":1,""mainSkillLvl"":1,""skin"":""char_143_ghost#1"",""level"":11,""exp"":235,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1653841062,""skills"":[{""skillId"":""skcom_atk_up[3]"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_ghost_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""EN"",""currentEquip"":null,""equip"":{}},""53"":{""instId"":53,""charId"":""char_198_blackd"",""favorPoint"":25570,""potentialRank"":5,""mainSkillLvl"":7,""skin"":""char_198_blackd@as#1"",""level"":60,""exp"":0,""evolvePhase"":1,""defaultSkillIndex"":0,""gainTime"":1653854705,""skills"":[{""skillId"":""skcom_charge_cost[2]"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_blackd_2"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""EN"",""currentEquip"":null,""equip"":{""uniequip_001_blackd"":{""hide"":1,""locked"":0,""level"":1},""uniequip_002_blackd"":{""hide"":1,""locked"":1,""level"":1}}},""54"":{""instId"":54,""charId"":""char_283_midn"",""favorPoint"":25570,""potentialRank"":5,""mainSkillLvl"":7,""skin"":""char_283_midn@boc#1"",""level"":55,""exp"":0,""evolvePhase"":1,""defaultSkillIndex"":0,""gainTime"":1653867626,""skills"":[{""skillId"":""skchr_midn_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{}},""55"":{""instId"":55,""charId"":""char_107_liskam"",""favorPoint"":14756,""potentialRank"":0,""mainSkillLvl"":1,""skin"":""char_107_liskam#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1653884435,""skills"":[{""skillId"":""skchr_liskam_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_liskam_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""EN"",""currentEquip"":null,""equip"":{}},""56"":{""instId"":56,""charId"":""char_264_f12yin"",""favorPoint"":16547,""potentialRank"":0,""mainSkillLvl"":7,""skin"":""char_264_f12yin@epoque#15"",""level"":69,""exp"":129,""evolvePhase"":2,""defaultSkillIndex"":1,""gainTime"":1654018910,""skills"":[{""skillId"":""skchr_f12yin_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_f12yin_2"",""unlock"":1,""state"":0,""specializeLevel"":3,""completeUpgradeTime"":-1},{""skillId"":""skchr_f12yin_3"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{}},""57"":{""instId"":57,""charId"":""char_237_gravel"",""favorPoint"":25570,""potentialRank"":5,""mainSkillLvl"":7,""skin"":""char_237_gravel@winter#2"",""level"":69,""exp"":129,""evolvePhase"":2,""defaultSkillIndex"":1,""gainTime"":1654034149,""skills"":[{""skillId"":""skchr_gravel_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_gravel_2"",""unlock"":1,""state"":0,""specializeLevel"":1,""completeUpgradeTime"":-1}],""voiceLan"":""EN"",""currentEquip"":""uniequip_002_gravel"",""equip"":{""uniequip_001_gravel"":{""hide"":0,""locked"":0,""level"":1},""uniequip_002_gravel"":{""hide"":0,""locked"":0,""level"":2}}},""58"":{""instId"":58,""charId"":""char_196_sunbr"",""favorPoint"":25570,""potentialRank"":5,""mainSkillLvl"":7,""skin"":""char_196_sunbr@summer#1"",""level"":69,""exp"":129,""evolvePhase"":2,""defaultSkillIndex"":0,""gainTime"":1654067262,""skills"":[{""skillId"":""skchr_sunbr_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_sunbr_2"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":""uniequip_002_sunbr"",""equip"":{""uniequip_001_sunbr"":{""hide"":0,""locked"":0,""level"":1},""uniequip_002_sunbr"":{""hide"":0,""locked"":0,""level"":1}}},""59"":{""instId"":59,""charId"":""char_187_ccheal"",""favorPoint"":25570,""potentialRank"":5,""mainSkillLvl"":7,""skin"":""char_187_ccheal#2"",""level"":69,""exp"":129,""evolvePhase"":2,""defaultSkillIndex"":1,""gainTime"":1654087941,""skills"":[{""skillId"":""skchr_ccheal_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_ccheal_2"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":""uniequip_001_ccheal"",""equip"":{""uniequip_001_ccheal"":{""hide"":0,""locked"":0,""level"":1},""uniequip_002_ccheal"":{""hide"":0,""locked"":1,""level"":1}}},""60"":{""instId"":60,""charId"":""char_4004_pudd"",""favorPoint"":12109,""potentialRank"":0,""mainSkillLvl"":1,""skin"":""char_4004_pudd#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1654170795,""skills"":[{""skillId"":""skcom_magic_rage[2]"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_pudd_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""EN"",""currentEquip"":null,""equip"":{""uniequip_001_pudd"":{""hide"":1,""locked"":0,""level"":1},""uniequip_002_pudd"":{""hide"":1,""locked"":1,""level"":1}}},""61"":{""instId"":61,""charId"":""char_451_robin"",""favorPoint"":315,""potentialRank"":2,""mainSkillLvl"":1,""skin"":""char_451_robin#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1654179637,""skills"":[{""skillId"":""skchr_robin_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_robin_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{}},""62"":{""instId"":62,""charId"":""char_242_otter"",""favorPoint"":1902,""potentialRank"":3,""mainSkillLvl"":1,""skin"":""char_242_otter#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1654334082,""skills"":[{""skillId"":""skchr_otter_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_otter_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{""uniequip_001_otter"":{""hide"":1,""locked"":0,""level"":1},""uniequip_002_otter"":{""hide"":1,""locked"":1,""level"":1}}},""63"":{""instId"":63,""charId"":""char_147_shining"",""favorPoint"":25570,""potentialRank"":2,""mainSkillLvl"":7,""skin"":""char_147_shining@summer#1"",""level"":80,""exp"":0,""evolvePhase"":1,""defaultSkillIndex"":1,""gainTime"":1654521447,""skills"":[{""skillId"":""skchr_shining_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_shining_2"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_shining_3"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{""uniequip_001_shining"":{""hide"":1,""locked"":0,""level"":1},""uniequip_002_shining"":{""hide"":1,""locked"":1,""level"":1}}},""64"":{""instId"":64,""charId"":""char_144_red"",""favorPoint"":24424,""potentialRank"":1,""mainSkillLvl"":6,""skin"":""char_144_red#1"",""level"":30,""exp"":8,""evolvePhase"":1,""defaultSkillIndex"":0,""gainTime"":1654830671,""skills"":[{""skillId"":""skchr_red_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_red_2"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{""uniequip_001_red"":{""hide"":1,""locked"":0,""level"":1},""uniequip_002_red"":{""hide"":1,""locked"":1,""level"":1}}},""65"":{""instId"":65,""charId"":""char_185_frncat"",""favorPoint"":23325,""potentialRank"":5,""mainSkillLvl"":7,""skin"":""char_185_frncat#2"",""level"":69,""exp"":129,""evolvePhase"":2,""defaultSkillIndex"":0,""gainTime"":1655393833,""skills"":[{""skillId"":""skchr_frncat_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_frncat_2"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{}},""66"":{""instId"":66,""charId"":""char_366_acdrop"",""favorPoint"":3501,""potentialRank"":5,""mainSkillLvl"":1,""skin"":""char_366_acdrop#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1655394176,""skills"":[{""skillId"":""skchr_acdrop_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_acdrop_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{""uniequip_001_acdrop"":{""hide"":1,""locked"":0,""level"":1},""uniequip_002_acdrop"":{""hide"":1,""locked"":1,""level"":1}}},""67"":{""instId"":67,""charId"":""char_298_susuro"",""favorPoint"":13173,""potentialRank"":5,""mainSkillLvl"":1,""skin"":""char_298_susuro#2"",""level"":69,""exp"":129,""evolvePhase"":2,""defaultSkillIndex"":1,""gainTime"":1655394176,""skills"":[{""skillId"":""skcom_heal_up[2]"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_susuro_2"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":""uniequip_001_susuro"",""equip"":{""uniequip_001_susuro"":{""hide"":0,""locked"":0,""level"":1},""uniequip_002_susuro"":{""hide"":0,""locked"":1,""level"":1}}},""68"":{""instId"":68,""charId"":""char_337_utage"",""favorPoint"":11568,""potentialRank"":5,""mainSkillLvl"":7,""skin"":""char_337_utage@epoque#15"",""level"":69,""exp"":129,""evolvePhase"":2,""defaultSkillIndex"":1,""gainTime"":1655394176,""skills"":[{""skillId"":""skchr_utage_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_utage_2"",""unlock"":1,""state"":0,""specializeLevel"":1,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{}},""69"":{""instId"":69,""charId"":""char_294_ayer"",""favorPoint"":7215,""potentialRank"":1,""mainSkillLvl"":1,""skin"":""char_294_ayer#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1655394176,""skills"":[{""skillId"":""skchr_ayer_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_ayer_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{}},""70"":{""instId"":70,""charId"":""char_489_serum"",""favorPoint"":1845,""potentialRank"":1,""mainSkillLvl"":4,""skin"":""char_489_serum#1"",""level"":57,""exp"":1655,""evolvePhase"":1,""defaultSkillIndex"":1,""gainTime"":1655394418,""skills"":[{""skillId"":""skchr_serum_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_serum_2"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""EN"",""currentEquip"":null,""equip"":{}},""71"":{""instId"":71,""charId"":""char_302_glaze"",""favorPoint"":100,""potentialRank"":5,""mainSkillLvl"":1,""skin"":""char_302_glaze#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1655394418,""skills"":[{""skillId"":""skchr_glaze_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_glaze_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{""uniequip_001_glaze"":{""hide"":1,""locked"":0,""level"":1},""uniequip_002_glaze"":{""hide"":1,""locked"":1,""level"":1}}},""72"":{""instId"":72,""charId"":""char_166_skfire"",""favorPoint"":685,""potentialRank"":1,""mainSkillLvl"":1,""skin"":""char_166_skfire#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1655394418,""skills"":[{""skillId"":""skcom_atk_up[3]"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_skfire_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{""uniequip_001_skfire"":{""hide"":1,""locked"":0,""level"":1},""uniequip_002_skfire"":{""hide"":1,""locked"":1,""level"":1}}},""73"":{""instId"":73,""charId"":""char_236_rope"",""favorPoint"":14596,""potentialRank"":5,""mainSkillLvl"":7,""skin"":""char_236_rope#1"",""level"":60,""exp"":0,""evolvePhase"":1,""defaultSkillIndex"":1,""gainTime"":1655646585,""skills"":[{""skillId"":""skchr_rope_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_rope_2"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""EN"",""currentEquip"":null,""equip"":{""uniequip_001_rope"":{""hide"":1,""locked"":0,""level"":1},""uniequip_002_rope"":{""hide"":1,""locked"":1,""level"":1}}},""74"":{""instId"":74,""charId"":""char_355_ethan"",""favorPoint"":24939,""potentialRank"":5,""mainSkillLvl"":7,""skin"":""char_355_ethan#1"",""level"":60,""exp"":0,""evolvePhase"":1,""defaultSkillIndex"":0,""gainTime"":1655835126,""skills"":[{""skillId"":""skchr_ethan_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_ethan_2"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{""uniequip_001_ethan"":{""hide"":1,""locked"":0,""level"":1},""uniequip_002_ethan"":{""hide"":1,""locked"":1,""level"":1}}},""75"":{""instId"":75,""charId"":""char_261_sddrag"",""favorPoint"":0,""potentialRank"":0,""mainSkillLvl"":1,""skin"":""char_261_sddrag#1"",""level"":50,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1656088903,""skills"":[{""skillId"":""skcom_quickattack[3]"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_sddrag_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{""uniequip_001_sddrag"":{""hide"":1,""locked"":0,""level"":1},""uniequip_002_sddrag"":{""hide"":1,""locked"":1,""level"":1}}},""76"":{""instId"":76,""charId"":""char_440_pinecn"",""favorPoint"":236,""potentialRank"":5,""mainSkillLvl"":7,""skin"":""char_440_pinecn#1"",""level"":60,""exp"":0,""evolvePhase"":1,""defaultSkillIndex"":0,""gainTime"":1656089013,""skills"":[{""skillId"":""skchr_pinecn_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_pinecn_2"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{}},""77"":{""instId"":77,""charId"":""char_286_cast3"",""favorPoint"":25570,""potentialRank"":1,""mainSkillLvl"":1,""skin"":""char_286_cast3#1"",""level"":30,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":-1,""gainTime"":1656114684,""skills"":[],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{}},""78"":{""instId"":78,""charId"":""char_260_durnar"",""favorPoint"":18179,""potentialRank"":5,""mainSkillLvl"":7,""skin"":""char_260_durnar#1"",""level"":60,""exp"":0,""evolvePhase"":1,""defaultSkillIndex"":1,""gainTime"":1656167208,""skills"":[{""skillId"":""skcom_atk_up[2]"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_durnar_2"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{}},""79"":{""instId"":79,""charId"":""char_279_excu"",""favorPoint"":842,""potentialRank"":0,""mainSkillLvl"":1,""skin"":""char_279_excu#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1656660921,""skills"":[{""skillId"":""skchr_excu_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_excu_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{}},""80"":{""instId"":80,""charId"":""char_4013_kjera"",""favorPoint"":2137,""potentialRank"":5,""mainSkillLvl"":1,""skin"":""char_4013_kjera#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1656950486,""skills"":[{""skillId"":""skcom_atk_up[3]"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_kjera_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""EN"",""currentEquip"":null,""equip"":{}},""81"":{""instId"":81,""charId"":""char_195_glassb"",""favorPoint"":8564,""potentialRank"":0,""mainSkillLvl"":1,""skin"":""char_195_glassb#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1657088347,""skills"":[{""skillId"":""skchr_glassb_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_glassb_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{""uniequip_001_glassb"":{""hide"":1,""locked"":0,""level"":1},""uniequip_002_glassb"":{""hide"":1,""locked"":1,""level"":1}}},""82"":{""instId"":82,""charId"":""char_183_skgoat"",""favorPoint"":11214,""potentialRank"":5,""mainSkillLvl"":1,""skin"":""char_183_skgoat#1"",""level"":60,""exp"":0,""evolvePhase"":1,""defaultSkillIndex"":0,""gainTime"":1657293747,""skills"":[{""skillId"":""skcom_atk_up[2]"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_skgoat_2"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{""uniequip_001_skgoat"":{""hide"":1,""locked"":0,""level"":1},""uniequip_002_skgoat"":{""hide"":1,""locked"":1,""level"":1}}},""83"":{""instId"":83,""charId"":""char_134_ifrit"",""favorPoint"":5558,""potentialRank"":2,""mainSkillLvl"":7,""skin"":""char_134_ifrit#1"",""level"":43,""exp"":66,""evolvePhase"":1,""defaultSkillIndex"":1,""gainTime"":1657309825,""skills"":[{""skillId"":""skchr_ifrit_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_ifrit_2"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_ifrit_3"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{}},""84"":{""instId"":84,""charId"":""char_258_podego"",""favorPoint"":3778,""potentialRank"":5,""mainSkillLvl"":2,""skin"":""char_258_podego#1"",""level"":60,""exp"":0,""evolvePhase"":1,""defaultSkillIndex"":1,""gainTime"":1657309825,""skills"":[{""skillId"":""skchr_podego_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_podego_2"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{""uniequip_001_podego"":{""hide"":1,""locked"":0,""level"":1},""uniequip_002_podego"":{""hide"":1,""locked"":1,""level"":1}}},""85"":{""instId"":85,""charId"":""char_484_robrta"",""favorPoint"":79,""potentialRank"":5,""mainSkillLvl"":1,""skin"":""char_484_robrta#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1657309825,""skills"":[{""skillId"":""skchr_robrta_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_robrta_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""EN"",""currentEquip"":null,""equip"":{}},""86"":{""instId"":86,""charId"":""char_117_myrrh"",""favorPoint"":0,""potentialRank"":5,""mainSkillLvl"":1,""skin"":""char_117_myrrh#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1657736281,""skills"":[{""skillId"":""skchr_myrrh_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_myrrh_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{""uniequip_001_myrrh"":{""hide"":1,""locked"":0,""level"":1},""uniequip_002_myrrh"":{""hide"":1,""locked"":1,""level"":1}}},""87"":{""instId"":87,""charId"":""char_4019_ncdeer"",""favorPoint"":7115,""potentialRank"":0,""mainSkillLvl"":1,""skin"":""char_4019_ncdeer#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1657819865,""skills"":[{""skillId"":""skchr_ncdeer_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_ncdeer_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""LINKAGE"",""currentEquip"":null,""equip"":{}},""88"":{""instId"":88,""charId"":""char_1011_lava2"",""favorPoint"":25570,""potentialRank"":5,""mainSkillLvl"":1,""skin"":""char_1011_lava2@nian#6"",""level"":50,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1657834501,""skills"":[{""skillId"":""skchr_lava2_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_lava2_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""EN"",""currentEquip"":null,""equip"":{""uniequip_001_lava2"":{""hide"":1,""locked"":0,""level"":1},""uniequip_002_lava2"":{""hide"":1,""locked"":1,""level"":1}}},""89"":{""instId"":89,""charId"":""char_347_jaksel"",""favorPoint"":158,""potentialRank"":5,""mainSkillLvl"":1,""skin"":""char_347_jaksel#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1658236819,""skills"":[{""skillId"":""skchr_jaksel_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_jaksel_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{}},""90"":{""instId"":90,""charId"":""char_271_spikes"",""favorPoint"":5090,""potentialRank"":5,""mainSkillLvl"":1,""skin"":""char_271_spikes#1"",""level"":45,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1658236917,""skills"":[{""skillId"":""skchr_spikes_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_spikes_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{}},""91"":{""instId"":91,""charId"":""char_133_mm"",""favorPoint"":13993,""potentialRank"":5,""mainSkillLvl"":1,""skin"":""char_133_mm#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1658237091,""skills"":[{""skillId"":""skchr_mm_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_mm_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{""uniequip_001_mm"":{""hide"":1,""locked"":0,""level"":1},""uniequip_002_mm"":{""hide"":1,""locked"":1,""level"":1}}},""92"":{""instId"":92,""charId"":""char_225_haak"",""favorPoint"":1839,""potentialRank"":0,""mainSkillLvl"":1,""skin"":""char_225_haak#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1658237141,""skills"":[{""skillId"":""skchr_haak_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_haak_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_haak_3"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{}},""93"":{""instId"":93,""charId"":""char_436_whispr"",""favorPoint"":1498,""potentialRank"":2,""mainSkillLvl"":1,""skin"":""char_436_whispr#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1658568412,""skills"":[{""skillId"":""skchr_whispr_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_whispr_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{""uniequip_001_whispr"":{""hide"":1,""locked"":0,""level"":1},""uniequip_002_whispr"":{""hide"":1,""locked"":1,""level"":1}}},""94"":{""instId"":94,""charId"":""char_381_bubble"",""favorPoint"":8451,""potentialRank"":5,""mainSkillLvl"":1,""skin"":""char_381_bubble#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1658568484,""skills"":[{""skillId"":""skcom_def_up[2]"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_bubble_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{""uniequip_001_bubble"":{""hide"":1,""locked"":0,""level"":1},""uniequip_002_bubble"":{""hide"":1,""locked"":1,""level"":1}}},""95"":{""instId"":95,""charId"":""char_449_glider"",""favorPoint"":9526,""potentialRank"":2,""mainSkillLvl"":6,""skin"":""char_449_glider#2"",""level"":43,""exp"":1568,""evolvePhase"":2,""defaultSkillIndex"":0,""gainTime"":1658858332,""skills"":[{""skillId"":""skchr_glider_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_glider_2"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""EN"",""currentEquip"":null,""equip"":{}},""96"":{""instId"":96,""charId"":""char_275_breeze"",""favorPoint"":4957,""potentialRank"":0,""mainSkillLvl"":1,""skin"":""char_275_breeze#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1658858350,""skills"":[{""skillId"":""skchr_breeze_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_breeze_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{""uniequip_001_breeze"":{""hide"":1,""locked"":0,""level"":1},""uniequip_002_breeze"":{""hide"":1,""locked"":1,""level"":1}}},""97"":{""instId"":97,""charId"":""char_254_vodfox"",""favorPoint"":1856,""potentialRank"":3,""mainSkillLvl"":1,""skin"":""char_254_vodfox#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1659088699,""skills"":[{""skillId"":""skchr_vodfox_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_vodfox_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{}},""98"":{""instId"":98,""charId"":""char_476_blkngt"",""favorPoint"":3452,""potentialRank"":2,""mainSkillLvl"":1,""skin"":""char_476_blkngt#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1659114978,""skills"":[{""skillId"":""skchr_blkngt_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_blkngt_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""EN"",""currentEquip"":null,""equip"":{}},""99"":{""instId"":99,""charId"":""char_1021_kroos2"",""favorPoint"":25570,""potentialRank"":5,""mainSkillLvl"":7,""skin"":""char_1021_kroos2#2"",""level"":80,""exp"":0,""evolvePhase"":2,""defaultSkillIndex"":1,""gainTime"":1659231112,""skills"":[{""skillId"":""skchr_kroos2_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_kroos2_2"",""unlock"":1,""state"":0,""specializeLevel"":1,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":""uniequip_002_kroos2"",""equip"":{""uniequip_001_kroos2"":{""hide"":0,""locked"":0,""level"":1},""uniequip_002_kroos2"":{""hide"":0,""locked"":0,""level"":1}},""starMark"":0},""100"":{""instId"":100,""charId"":""char_328_cammou"",""favorPoint"":21992,""potentialRank"":5,""mainSkillLvl"":6,""skin"":""char_328_cammou#1"",""level"":60,""exp"":0,""evolvePhase"":1,""defaultSkillIndex"":1,""gainTime"":1659630137,""skills"":[{""skillId"":""skcom_atk_up[2]"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_cammou_2"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{}},""101"":{""instId"":101,""charId"":""char_437_mizuki"",""favorPoint"":24187,""potentialRank"":0,""mainSkillLvl"":1,""skin"":""char_437_mizuki#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1659678932,""skills"":[{""skillId"":""skchr_mizuki_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_mizuki_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_mizuki_3"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{""uniequip_001_mizuki"":{""hide"":1,""locked"":0,""level"":1},""uniequip_002_mizuki"":{""hide"":1,""locked"":1,""level"":1}}},""102"":{""instId"":102,""charId"":""char_367_swllow"",""favorPoint"":22647,""potentialRank"":5,""mainSkillLvl"":1,""skin"":""char_367_swllow@boc#1"",""level"":22,""exp"":330,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1659712138,""skills"":[{""skillId"":""skchr_swllow_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_swllow_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{""uniequip_001_swllow"":{""hide"":1,""locked"":0,""level"":1},""uniequip_002_swllow"":{""hide"":1,""locked"":1,""level"":1}}},""103"":{""instId"":103,""charId"":""char_290_vigna"",""favorPoint"":22376,""potentialRank"":5,""mainSkillLvl"":5,""skin"":""char_290_vigna#1"",""level"":60,""exp"":0,""evolvePhase"":1,""defaultSkillIndex"":1,""gainTime"":1659802718,""skills"":[{""skillId"":""skchr_vigna_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_vigna_2"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{""uniequip_001_vigna"":{""hide"":1,""locked"":0,""level"":1},""uniequip_002_vigna"":{""hide"":1,""locked"":1,""level"":1}}},""104"":{""instId"":104,""charId"":""char_326_glacus"",""favorPoint"":3398,""potentialRank"":4,""mainSkillLvl"":1,""skin"":""char_326_glacus#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1659901139,""skills"":[{""skillId"":""skchr_glacus_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_glacus_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{""uniequip_001_glacus"":{""hide"":1,""locked"":0,""level"":1},""uniequip_002_glacus"":{""hide"":1,""locked"":1,""level"":1}}},""105"":{""instId"":105,""charId"":""char_4000_jnight"",""favorPoint"":4856,""potentialRank"":5,""mainSkillLvl"":1,""skin"":""char_4000_jnight#1"",""level"":30,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":-1,""gainTime"":1660355536,""skills"":[],""voiceLan"":""EN"",""currentEquip"":null,""equip"":{}},""106"":{""instId"":106,""charId"":""char_473_mberry"",""favorPoint"":0,""potentialRank"":1,""mainSkillLvl"":1,""skin"":""char_473_mberry#1"",""level"":50,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1660548513,""skills"":[{""skillId"":""skchr_mberry_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_mberry_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""EN"",""currentEquip"":null,""equip"":{}},""107"":{""instId"":107,""charId"":""char_469_indigo"",""favorPoint"":23038,""potentialRank"":5,""mainSkillLvl"":1,""skin"":""char_469_indigo#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1660842992,""skills"":[{""skillId"":""skchr_indigo_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_indigo_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{""uniequip_001_indigo"":{""hide"":1,""locked"":0,""level"":1},""uniequip_002_indigo"":{""hide"":1,""locked"":1,""level"":1}}},""108"":{""instId"":108,""charId"":""char_492_quercu"",""favorPoint"":3531,""potentialRank"":0,""mainSkillLvl"":1,""skin"":""char_492_quercu#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1660842992,""skills"":[{""skillId"":""skchr_quercu_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_quercu_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""EN"",""currentEquip"":null,""equip"":{}},""109"":{""instId"":109,""charId"":""char_206_gnosis"",""favorPoint"":4855,""potentialRank"":0,""mainSkillLvl"":1,""skin"":""char_206_gnosis#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1661036356,""skills"":[{""skillId"":""skchr_gnosis_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_gnosis_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_gnosis_3"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""EN"",""currentEquip"":null,""equip"":{}},""110"":{""instId"":110,""charId"":""char_248_mgllan"",""favorPoint"":0,""potentialRank"":1,""mainSkillLvl"":1,""skin"":""char_248_mgllan#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1661036610,""skills"":[{""skillId"":""skchr_mgllan_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_mgllan_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_mgllan_3"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{""uniequip_001_mgllan"":{""hide"":1,""locked"":0,""level"":1},""uniequip_002_mgllan"":{""hide"":1,""locked"":1,""level"":1},""uniequip_003_mgllan"":{""hide"":1,""locked"":1,""level"":1}}},""111"":{""instId"":111,""charId"":""char_377_gdglow"",""favorPoint"":25570,""potentialRank"":0,""mainSkillLvl"":7,""skin"":""char_377_gdglow#2"",""level"":90,""exp"":0,""evolvePhase"":2,""defaultSkillIndex"":2,""gainTime"":1661036791,""skills"":[{""skillId"":""skchr_gdglow_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_gdglow_2"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_gdglow_3"",""unlock"":1,""state"":0,""specializeLevel"":3,""completeUpgradeTime"":-1}],""voiceLan"":""EN"",""currentEquip"":null,""equip"":{}},""112"":{""instId"":112,""charId"":""char_385_finlpp"",""favorPoint"":17898,""potentialRank"":5,""mainSkillLvl"":7,""skin"":""char_385_finlpp#2"",""level"":69,""exp"":129,""evolvePhase"":2,""defaultSkillIndex"":0,""gainTime"":1661740401,""skills"":[{""skillId"":""skchr_finlpp_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_finlpp_2"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":""uniequip_001_finlpp"",""equip"":{""uniequip_001_finlpp"":{""hide"":0,""locked"":0,""level"":1},""uniequip_002_finlpp"":{""hide"":0,""locked"":1,""level"":1}}},""113"":{""instId"":113,""charId"":""char_127_estell"",""favorPoint"":0,""potentialRank"":1,""mainSkillLvl"":1,""skin"":""char_127_estell#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1662128486,""skills"":[{""skillId"":""skcom_atk_up[2]"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_estell_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""EN"",""currentEquip"":null,""equip"":{}},""114"":{""instId"":114,""charId"":""char_197_poca"",""favorPoint"":6857,""potentialRank"":0,""mainSkillLvl"":1,""skin"":""char_197_poca#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1662130344,""skills"":[{""skillId"":""skcom_atk_up[3]"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_poca_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_poca_3"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{}},""115"":{""instId"":115,""charId"":""char_180_amgoat"",""favorPoint"":25570,""potentialRank"":0,""mainSkillLvl"":7,""skin"":""char_180_amgoat@summer#5"",""level"":69,""exp"":129,""evolvePhase"":2,""defaultSkillIndex"":2,""gainTime"":1662130469,""skills"":[{""skillId"":""skchr_amgoat_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_amgoat_2"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_amgoat_3"",""unlock"":1,""state"":0,""specializeLevel"":3,""completeUpgradeTime"":-1}],""voiceLan"":""EN"",""currentEquip"":null,""equip"":{}},""116"":{""instId"":116,""charId"":""char_340_shwaz"",""favorPoint"":158,""potentialRank"":0,""mainSkillLvl"":1,""skin"":""char_340_shwaz#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1663360200,""skills"":[{""skillId"":""skchr_shwaz_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_shwaz_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_shwaz_3"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{""uniequip_001_shwaz"":{""hide"":1,""locked"":0,""level"":1},""uniequip_002_shwaz"":{""hide"":1,""locked"":1,""level"":1},""uniequip_003_shwaz"":{""hide"":1,""locked"":1,""level"":1}}},""117"":{""instId"":117,""charId"":""char_344_beewax"",""favorPoint"":650,""potentialRank"":1,""mainSkillLvl"":1,""skin"":""char_344_beewax#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1663379604,""skills"":[{""skillId"":""skchr_beewax_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_beewax_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{}},""118"":{""instId"":118,""charId"":""char_108_silent"",""favorPoint"":12712,""potentialRank"":2,""mainSkillLvl"":1,""skin"":""char_108_silent#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1663379748,""skills"":[{""skillId"":""skcom_heal_up[3]"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_silent_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{""uniequip_001_silent"":{""hide"":1,""locked"":0,""level"":1},""uniequip_002_silent"":{""hide"":1,""locked"":1,""level"":1}}},""119"":{""instId"":119,""charId"":""char_4036_forcer"",""favorPoint"":8913,""potentialRank"":5,""mainSkillLvl"":1,""skin"":""char_4036_forcer#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1663627964,""skills"":[{""skillId"":""skchr_forcer_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_forcer_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""EN"",""currentEquip"":null,""equip"":{}},""120"":{""instId"":120,""charId"":""char_102_texas"",""favorPoint"":13257,""potentialRank"":0,""mainSkillLvl"":7,""skin"":""char_102_texas@epoque#7"",""level"":69,""exp"":129,""evolvePhase"":2,""defaultSkillIndex"":0,""gainTime"":1663917004,""skills"":[{""skillId"":""skcom_charge_cost[3]"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_texas_2"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""EN"",""currentEquip"":""uniequip_001_texas"",""equip"":{""uniequip_001_texas"":{""hide"":0,""locked"":0,""level"":1},""uniequip_002_texas"":{""hide"":0,""locked"":1,""level"":1}}},""121"":{""instId"":121,""charId"":""char_301_cutter"",""favorPoint"":0,""potentialRank"":5,""mainSkillLvl"":1,""skin"":""char_301_cutter#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1664901852,""skills"":[{""skillId"":""skchr_cutter_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_cutter_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{""uniequip_001_cutter"":{""hide"":1,""locked"":0,""level"":1},""uniequip_002_cutter"":{""hide"":1,""locked"":1,""level"":1}}},""122"":{""instId"":122,""charId"":""char_379_sesa"",""favorPoint"":0,""potentialRank"":1,""mainSkillLvl"":1,""skin"":""char_379_sesa#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1664916692,""skills"":[{""skillId"":""skcom_atk_up[3]"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_sesa_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{""uniequip_001_sesa"":{""hide"":1,""locked"":0,""level"":1},""uniequip_002_sesa"":{""hide"":1,""locked"":1,""level"":1}}},""123"":{""instId"":123,""charId"":""char_304_zebra"",""favorPoint"":17528,""potentialRank"":5,""mainSkillLvl"":1,""skin"":""char_304_zebra#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1665157403,""skills"":[{""skillId"":""skchr_zebra_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_zebra_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{""uniequip_001_zebra"":{""hide"":1,""locked"":0,""level"":1},""uniequip_002_zebra"":{""hide"":1,""locked"":1,""level"":1}}},""124"":{""instId"":124,""charId"":""char_112_siege"",""favorPoint"":0,""potentialRank"":0,""mainSkillLvl"":1,""skin"":""char_112_siege#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1665864140,""skills"":[{""skillId"":""skcom_charge_cost[3]"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_siege_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_siege_3"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{""uniequip_001_siege"":{""hide"":1,""locked"":0,""level"":1},""uniequip_002_siege"":{""hide"":1,""locked"":1,""level"":1}}},""125"":{""instId"":125,""charId"":""char_415_flint"",""favorPoint"":0,""potentialRank"":0,""mainSkillLvl"":1,""skin"":""char_415_flint#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1665864140,""skills"":[{""skillId"":""skchr_flint_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_flint_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{}},""126"":{""instId"":126,""charId"":""char_017_huang"",""favorPoint"":25570,""potentialRank"":2,""mainSkillLvl"":7,""skin"":""char_017_huang@as#1"",""level"":69,""exp"":129,""evolvePhase"":2,""defaultSkillIndex"":1,""gainTime"":1666152608,""skills"":[{""skillId"":""skchr_huang_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_huang_2"",""unlock"":1,""state"":0,""specializeLevel"":3,""completeUpgradeTime"":-1},{""skillId"":""skchr_huang_3"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{}},""127"":{""instId"":127,""charId"":""char_4041_chnut"",""favorPoint"":10170,""potentialRank"":5,""mainSkillLvl"":1,""skin"":""char_4041_chnut#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1666274855,""skills"":[{""skillId"":""skchr_chnut_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_chnut_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{}},""128"":{""instId"":128,""charId"":""char_171_bldsk"",""favorPoint"":3540,""potentialRank"":0,""mainSkillLvl"":7,""skin"":""char_171_bldsk@witch#1"",""level"":30,""exp"":8,""evolvePhase"":1,""defaultSkillIndex"":1,""gainTime"":1666274855,""skills"":[{""skillId"":""skchr_bldsk_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_bldsk_2"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""EN"",""currentEquip"":null,""equip"":{""uniequip_001_bldsk"":{""hide"":1,""locked"":0,""level"":1},""uniequip_002_bldsk"":{""hide"":1,""locked"":1,""level"":1}}},""129"":{""instId"":129,""charId"":""char_222_bpipe"",""favorPoint"":25570,""potentialRank"":0,""mainSkillLvl"":7,""skin"":""char_222_bpipe#2"",""level"":75,""exp"":75,""evolvePhase"":2,""defaultSkillIndex"":2,""gainTime"":1667142543,""skills"":[{""skillId"":""skcom_quickattack[3]"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_bpipe_2"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_bpipe_3"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":""uniequip_002_bpipe"",""equip"":{""uniequip_001_bpipe"":{""hide"":0,""locked"":0,""level"":1},""uniequip_002_bpipe"":{""hide"":0,""locked"":0,""level"":2}}},""130"":{""instId"":130,""charId"":""char_421_crow"",""favorPoint"":0,""potentialRank"":0,""mainSkillLvl"":1,""skin"":""char_421_crow#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1667508827,""skills"":[{""skillId"":""skchr_crow_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_crow_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{}},""131"":{""instId"":131,""charId"":""char_1023_ghost2"",""favorPoint"":25570,""potentialRank"":0,""mainSkillLvl"":1,""skin"":""char_1023_ghost2#1"",""level"":62,""exp"":952,""evolvePhase"":1,""defaultSkillIndex"":0,""gainTime"":1667508827,""skills"":[{""skillId"":""skchr_ghost2_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_ghost2_2"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_ghost2_3"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""EN"",""currentEquip"":null,""equip"":{""uniequip_001_ghost2"":{""hide"":1,""locked"":0,""level"":1},""uniequip_002_ghost2"":{""hide"":1,""locked"":1,""level"":1},""uniequip_003_ghost2"":{""hide"":1,""locked"":1,""level"":1}}},""132"":{""instId"":132,""charId"":""char_4042_lumen"",""favorPoint"":25570,""potentialRank"":5,""mainSkillLvl"":1,""skin"":""char_4042_lumen#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1667517415,""skills"":[{""skillId"":""skchr_lumen_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_lumen_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_lumen_3"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""EN"",""currentEquip"":null,""equip"":{""uniequip_001_lumen"":{""hide"":1,""locked"":0,""level"":1},""uniequip_002_lumen"":{""hide"":1,""locked"":1,""level"":1}}},""133"":{""instId"":133,""charId"":""char_106_franka"",""favorPoint"":193,""potentialRank"":3,""mainSkillLvl"":1,""skin"":""char_106_franka#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1668036644,""skills"":[{""skillId"":""skcom_quickattack[3]"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_franka_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{""uniequip_001_franka"":{""hide"":1,""locked"":0,""level"":1},""uniequip_002_franka"":{""hide"":1,""locked"":1,""level"":1}}},""134"":{""instId"":134,""charId"":""char_179_cgbird"",""favorPoint"":14522,""potentialRank"":0,""mainSkillLvl"":7,""skin"":""char_179_cgbird@witch#1"",""level"":69,""exp"":129,""evolvePhase"":2,""defaultSkillIndex"":1,""gainTime"":1668036699,""skills"":[{""skillId"":""skcom_heal_up[3]"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_cgbird_2"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_cgbird_3"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""EN"",""currentEquip"":""uniequip_002_cgbird"",""equip"":{""uniequip_001_cgbird"":{""hide"":0,""locked"":0,""level"":1},""uniequip_002_cgbird"":{""hide"":0,""locked"":0,""level"":1}}},""135"":{""instId"":135,""charId"":""char_136_hsguma"",""favorPoint"":13492,""potentialRank"":1,""mainSkillLvl"":6,""skin"":""char_136_hsguma@nian#3"",""level"":69,""exp"":129,""evolvePhase"":2,""defaultSkillIndex"":1,""gainTime"":1668323257,""skills"":[{""skillId"":""skchr_hsguma_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_hsguma_2"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_hsguma_3"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""EN"",""currentEquip"":""uniequip_002_hsguma"",""equip"":{""uniequip_001_hsguma"":{""hide"":0,""locked"":0,""level"":1},""uniequip_002_hsguma"":{""hide"":0,""locked"":0,""level"":1},""uniequip_003_hsguma"":{""hide"":0,""locked"":1,""level"":1}}},""136"":{""instId"":136,""charId"":""char_422_aurora"",""favorPoint"":0,""potentialRank"":0,""mainSkillLvl"":1,""skin"":""char_422_aurora#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1668445641,""skills"":[{""skillId"":""skchr_aurora_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_aurora_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""EN"",""currentEquip"":null,""equip"":{""uniequip_001_aurora"":{""hide"":1,""locked"":0,""level"":1},""uniequip_002_aurora"":{""hide"":1,""locked"":1,""level"":1}}},""137"":{""instId"":137,""charId"":""char_405_absin"",""favorPoint"":1563,""potentialRank"":0,""mainSkillLvl"":1,""skin"":""char_405_absin#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1669076262,""skills"":[{""skillId"":""skchr_absin_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_absin_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{}},""138"":{""instId"":138,""charId"":""char_131_flameb"",""favorPoint"":0,""potentialRank"":0,""mainSkillLvl"":1,""skin"":""char_131_flameb#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1669076354,""skills"":[{""skillId"":""skchr_flameb_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_flameb_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{""uniequip_001_flameb"":{""hide"":1,""locked"":0,""level"":1},""uniequip_002_flameb"":{""hide"":1,""locked"":1,""level"":1}}},""139"":{""instId"":139,""charId"":""char_383_snsant"",""favorPoint"":8034,""potentialRank"":0,""mainSkillLvl"":1,""skin"":""char_383_snsant#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1669076408,""skills"":[{""skillId"":""skchr_snsant_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_snsant_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{""uniequip_001_snsant"":{""hide"":1,""locked"":0,""level"":1},""uniequip_002_snsant"":{""hide"":1,""locked"":1,""level"":1}}},""140"":{""instId"":140,""charId"":""char_474_glady"",""favorPoint"":6492,""potentialRank"":5,""mainSkillLvl"":1,""skin"":""char_474_glady#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1669409237,""skills"":[{""skillId"":""skchr_glady_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_glady_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_glady_3"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{""uniequip_001_glady"":{""hide"":1,""locked"":0,""level"":1},""uniequip_002_glady"":{""hide"":1,""locked"":1,""level"":1}}},""141"":{""instId"":141,""charId"":""char_343_tknogi"",""favorPoint"":0,""potentialRank"":0,""mainSkillLvl"":1,""skin"":""char_343_tknogi#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1670530069,""skills"":[{""skillId"":""skchr_tknogi_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_tknogi_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{}},""142"":{""instId"":142,""charId"":""char_003_kalts"",""favorPoint"":25570,""potentialRank"":0,""mainSkillLvl"":7,""skin"":""char_003_kalts#2"",""level"":69,""exp"":129,""evolvePhase"":2,""defaultSkillIndex"":2,""gainTime"":1670530179,""skills"":[{""skillId"":""skchr_kalts_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_kalts_2"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_kalts_3"",""unlock"":1,""state"":0,""specializeLevel"":3,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":""uniequip_001_kalts"",""equip"":{""uniequip_001_kalts"":{""hide"":0,""locked"":0,""level"":1},""uniequip_002_kalts"":{""hide"":0,""locked"":1,""level"":1}}},""143"":{""instId"":143,""charId"":""char_140_whitew"",""favorPoint"":12924,""potentialRank"":1,""mainSkillLvl"":1,""skin"":""char_140_whitew#2"",""level"":69,""exp"":129,""evolvePhase"":2,""defaultSkillIndex"":1,""gainTime"":1670531690,""skills"":[{""skillId"":""skchr_whitew_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_whitew_2"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{}},""144"":{""instId"":144,""charId"":""char_475_akafyu"",""favorPoint"":900,""potentialRank"":0,""mainSkillLvl"":1,""skin"":""char_475_akafyu#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1670532209,""skills"":[{""skillId"":""skchr_akafyu_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_akafyu_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{}},""145"":{""instId"":145,""charId"":""char_336_folivo"",""favorPoint"":10598,""potentialRank"":0,""mainSkillLvl"":1,""skin"":""char_336_folivo#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1670537108,""skills"":[{""skillId"":""skchr_folivo_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_folivo_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{""uniequip_001_folivo"":{""hide"":1,""locked"":0,""level"":1},""uniequip_002_folivo"":{""hide"":1,""locked"":1,""level"":1}}},""146"":{""instId"":146,""charId"":""char_201_moeshd"",""favorPoint"":1400,""potentialRank"":0,""mainSkillLvl"":1,""skin"":""char_201_moeshd#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1670860768,""skills"":[{""skillId"":""skchr_moeshd_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_moeshd_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{""uniequip_001_moeshd"":{""hide"":1,""locked"":0,""level"":1},""uniequip_002_moeshd"":{""hide"":1,""locked"":1,""level"":1}}},""147"":{""instId"":147,""charId"":""char_4043_erato"",""favorPoint"":500,""potentialRank"":0,""mainSkillLvl"":1,""skin"":""char_4043_erato#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1670872039,""skills"":[{""skillId"":""skchr_erato_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_erato_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{}},""148"":{""instId"":148,""charId"":""char_402_tuye"",""favorPoint"":0,""potentialRank"":0,""mainSkillLvl"":1,""skin"":""char_402_tuye#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1670872060,""skills"":[{""skillId"":""skchr_tuye_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_tuye_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{""uniequip_001_tuye"":{""hide"":1,""locked"":0,""level"":1},""uniequip_002_tuye"":{""hide"":1,""locked"":1,""level"":1}}},""149"":{""instId"":149,""charId"":""char_252_bibeak"",""favorPoint"":400,""potentialRank"":5,""mainSkillLvl"":1,""skin"":""char_252_bibeak#1"",""level"":50,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1670872154,""skills"":[{""skillId"":""skchr_bibeak_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_bibeak_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{""uniequip_001_bibeak"":{""hide"":1,""locked"":0,""level"":1},""uniequip_002_bibeak"":{""hide"":1,""locked"":1,""level"":1}}},""150"":{""instId"":150,""charId"":""char_215_mantic"",""favorPoint"":0,""potentialRank"":2,""mainSkillLvl"":1,""skin"":""char_215_mantic#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1671554028,""skills"":[{""skillId"":""skchr_mantic_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_mantic_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{""uniequip_001_mantic"":{""hide"":1,""locked"":0,""level"":1},""uniequip_002_mantic"":{""hide"":1,""locked"":1,""level"":1}}},""151"":{""instId"":151,""charId"":""char_128_plosis"",""favorPoint"":25570,""potentialRank"":0,""mainSkillLvl"":1,""skin"":""char_128_plosis#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1671856311,""skills"":[{""skillId"":""skcom_heal_up[3]"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_plosis_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{""uniequip_001_plosis"":{""hide"":1,""locked"":0,""level"":1},""uniequip_002_plosis"":{""hide"":1,""locked"":1,""level"":1}}},""152"":{""instId"":152,""charId"":""char_1024_hbisc2"",""favorPoint"":25570,""potentialRank"":1,""mainSkillLvl"":1,""skin"":""char_1024_hbisc2#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1672179845,""skills"":[{""skillId"":""skcom_atk_up[3]"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_hbisc2_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""EN"",""currentEquip"":null,""equip"":{}},""153"":{""instId"":153,""charId"":""char_4046_ebnhlz"",""favorPoint"":0,""potentialRank"":0,""mainSkillLvl"":1,""skin"":""char_4046_ebnhlz#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1672179845,""skills"":[{""skillId"":""skchr_ebnhlz_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_ebnhlz_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_ebnhlz_3"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""EN"",""currentEquip"":null,""equip"":{""uniequip_001_ebnhlz"":{""hide"":1,""locked"":0,""level"":1},""uniequip_002_ebnhlz"":{""hide"":1,""locked"":1,""level"":1},""uniequip_003_ebnhlz"":{""hide"":1,""locked"":1,""level"":1}}},""154"":{""instId"":154,""charId"":""char_4047_pianst"",""favorPoint"":100,""potentialRank"":5,""mainSkillLvl"":1,""skin"":""char_4047_pianst#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1672270461,""skills"":[{""skillId"":""skchr_pianst_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_pianst_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""EN"",""currentEquip"":null,""equip"":{}},""155"":{""instId"":155,""charId"":""char_356_broca"",""favorPoint"":3200,""potentialRank"":0,""mainSkillLvl"":1,""skin"":""char_356_broca#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1672424907,""skills"":[{""skillId"":""skchr_broca_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_broca_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{}},""156"":{""instId"":156,""charId"":""char_433_windft"",""favorPoint"":0,""potentialRank"":0,""mainSkillLvl"":1,""skin"":""char_433_windft#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1673464150,""skills"":[{""skillId"":""skchr_windft_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_windft_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{}},""157"":{""instId"":157,""charId"":""char_497_ctable"",""favorPoint"":11756,""potentialRank"":5,""mainSkillLvl"":6,""skin"":""char_497_ctable#1"",""level"":70,""exp"":0,""evolvePhase"":1,""defaultSkillIndex"":1,""gainTime"":1673639119,""skills"":[{""skillId"":""skchr_ctable_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_ctable_2"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""EN"",""currentEquip"":null,""equip"":{}},""158"":{""instId"":158,""charId"":""char_1026_gvial2"",""favorPoint"":25570,""potentialRank"":1,""mainSkillLvl"":7,""skin"":""char_1026_gvial2#2"",""level"":42,""exp"":163,""evolvePhase"":2,""defaultSkillIndex"":1,""gainTime"":1673648173,""skills"":[{""skillId"":""skchr_gvial2_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_gvial2_2"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_gvial2_3"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""EN"",""currentEquip"":null,""equip"":{}},""159"":{""instId"":159,""charId"":""char_4055_bgsnow"",""favorPoint"":25570,""potentialRank"":5,""mainSkillLvl"":7,""skin"":""char_4055_bgsnow#2"",""level"":69,""exp"":129,""evolvePhase"":2,""defaultSkillIndex"":2,""gainTime"":1673649967,""skills"":[{""skillId"":""skchr_bgsnow_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_bgsnow_2"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_bgsnow_3"",""unlock"":1,""state"":0,""specializeLevel"":3,""completeUpgradeTime"":-1}],""voiceLan"":""EN"",""currentEquip"":""uniequip_002_bgsnow"",""equip"":{""uniequip_001_bgsnow"":{""hide"":0,""locked"":0,""level"":1},""uniequip_002_bgsnow"":{""hide"":0,""locked"":0,""level"":1}}},""160"":{""instId"":160,""charId"":""char_401_elysm"",""favorPoint"":1800,""potentialRank"":0,""mainSkillLvl"":7,""skin"":""char_401_elysm#1"",""level"":5,""exp"":8,""evolvePhase"":1,""defaultSkillIndex"":0,""gainTime"":1673650109,""skills"":[{""skillId"":""skcom_assist_cost[3]"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_elysm_2"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{}},""161"":{""instId"":161,""charId"":""char_4054_malist"",""favorPoint"":11800,""potentialRank"":5,""mainSkillLvl"":1,""skin"":""char_4054_malist#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1673680581,""skills"":[{""skillId"":""skcom_quickattack[3]"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_malist_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""EN"",""currentEquip"":null,""equip"":{}},""162"":{""instId"":162,""charId"":""char_158_milu"",""favorPoint"":1200,""potentialRank"":0,""mainSkillLvl"":1,""skin"":""char_158_milu#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1674236969,""skills"":[{""skillId"":""skchr_milu_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_milu_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{""uniequip_001_milu"":{""hide"":1,""locked"":0,""level"":1},""uniequip_002_milu"":{""hide"":1,""locked"":1,""level"":1}}},""163"":{""instId"":163,""charId"":""char_338_iris"",""favorPoint"":0,""potentialRank"":2,""mainSkillLvl"":1,""skin"":""char_338_iris#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1674701382,""skills"":[{""skillId"":""skchr_iris_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_iris_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{""uniequip_001_iris"":{""hide"":1,""locked"":0,""level"":1},""uniequip_002_iris"":{""hide"":1,""locked"":1,""level"":1}}},""164"":{""instId"":164,""charId"":""char_1013_chen2"",""favorPoint"":25570,""potentialRank"":0,""mainSkillLvl"":1,""skin"":""char_1013_chen2#1"",""level"":22,""exp"":130,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1674701658,""skills"":[{""skillId"":""skchr_chen2_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_chen2_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_chen2_3"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""EN"",""currentEquip"":null,""equip"":{}},""165"":{""instId"":165,""charId"":""char_431_ashlok"",""favorPoint"":7700,""potentialRank"":1,""mainSkillLvl"":1,""skin"":""char_431_ashlok#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1674753469,""skills"":[{""skillId"":""skcom_atk_up[3]"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_ashlok_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""EN"",""currentEquip"":null,""equip"":{}},""166"":{""instId"":166,""charId"":""char_411_tomimi"",""favorPoint"":100,""potentialRank"":0,""mainSkillLvl"":1,""skin"":""char_411_tomimi#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1675393724,""skills"":[{""skillId"":""skchr_tomimi_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_tomimi_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{}},""167"":{""instId"":167,""charId"":""char_333_sidero"",""favorPoint"":0,""potentialRank"":5,""mainSkillLvl"":1,""skin"":""char_333_sidero@summer#6"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1675396800,""skills"":[{""skillId"":""skcom_heal_self[3]"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_sidero_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{}},""168"":{""instId"":168,""charId"":""char_311_mudrok"",""favorPoint"":8273,""potentialRank"":1,""mainSkillLvl"":7,""skin"":""char_311_mudrok@ambienceSynesthesia#2"",""level"":69,""exp"":129,""evolvePhase"":2,""defaultSkillIndex"":1,""gainTime"":1675441095,""skills"":[{""skillId"":""skcom_def_up[3]"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_mudrok_2"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_mudrok_3"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{}},""169"":{""instId"":169,""charId"":""char_325_bison"",""favorPoint"":1800,""potentialRank"":0,""mainSkillLvl"":1,""skin"":""char_325_bison#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1675970385,""skills"":[{""skillId"":""skcom_def_up[3]"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_bison_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{""uniequip_001_bison"":{""hide"":1,""locked"":0,""level"":1},""uniequip_002_bison"":{""hide"":1,""locked"":1,""level"":1}}},""170"":{""instId"":170,""charId"":""char_348_ceylon"",""favorPoint"":0,""potentialRank"":0,""mainSkillLvl"":1,""skin"":""char_348_ceylon#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1676437017,""skills"":[{""skillId"":""skchr_ceylon_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_ceylon_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{""uniequip_001_ceylon"":{""hide"":1,""locked"":0,""level"":1},""uniequip_002_ceylon"":{""hide"":1,""locked"":1,""level"":1}}},""171"":{""instId"":171,""charId"":""char_103_angel"",""favorPoint"":12985,""potentialRank"":0,""mainSkillLvl"":7,""skin"":""char_103_angel@sale#8"",""level"":69,""exp"":129,""evolvePhase"":2,""defaultSkillIndex"":2,""gainTime"":1676650195,""skills"":[{""skillId"":""skchr_angel_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_angel_2"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_angel_3"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""EN"",""currentEquip"":""uniequip_001_angel"",""equip"":{""uniequip_001_angel"":{""hide"":0,""locked"":0,""level"":1},""uniequip_002_angel"":{""hide"":0,""locked"":1,""level"":1}}},""172"":{""instId"":172,""charId"":""char_250_phatom"",""favorPoint"":24230,""potentialRank"":0,""mainSkillLvl"":1,""skin"":""char_250_phatom#1"",""level"":20,""exp"":28,""evolvePhase"":1,""defaultSkillIndex"":1,""gainTime"":1677521624,""skills"":[{""skillId"":""skchr_phatom_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_phatom_2"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_phatom_3"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""EN"",""currentEquip"":null,""equip"":{""uniequip_001_phatom"":{""hide"":1,""locked"":0,""level"":1},""uniequip_002_phatom"":{""hide"":1,""locked"":1,""level"":1}}},""173"":{""instId"":173,""charId"":""char_486_takila"",""favorPoint"":300,""potentialRank"":5,""mainSkillLvl"":1,""skin"":""char_486_takila#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1677702879,""skills"":[{""skillId"":""skchr_takila_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_takila_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{}},""174"":{""instId"":174,""charId"":""char_243_waaifu"",""favorPoint"":0,""potentialRank"":1,""mainSkillLvl"":1,""skin"":""char_243_waaifu#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1678304258,""skills"":[{""skillId"":""skchr_waaifu_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_waaifu_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{""uniequip_001_waaifu"":{""hide"":1,""locked"":0,""level"":1},""uniequip_002_waaifu"":{""hide"":1,""locked"":1,""level"":1}}},""175"":{""instId"":175,""charId"":""char_1027_greyy2"",""favorPoint"":16169,""potentialRank"":0,""mainSkillLvl"":1,""skin"":""char_1027_greyy2#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1678827138,""skills"":[{""skillId"":""skcom_quickattack[3]"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_greyy2_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""EN"",""currentEquip"":null,""equip"":{}},""176"":{""instId"":176,""charId"":""char_135_halo"",""favorPoint"":2000,""potentialRank"":5,""mainSkillLvl"":1,""skin"":""char_135_halo#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1678924333,""skills"":[{""skillId"":""skchr_halo_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_halo_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""EN"",""currentEquip"":null,""equip"":{""uniequip_001_halo"":{""hide"":1,""locked"":0,""level"":1},""uniequip_002_halo"":{""hide"":1,""locked"":1,""level"":1}}},""177"":{""instId"":177,""charId"":""char_420_flamtl"",""favorPoint"":5400,""potentialRank"":0,""mainSkillLvl"":1,""skin"":""char_420_flamtl#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1679058207,""skills"":[{""skillId"":""skchr_flamtl_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_flamtl_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_flamtl_3"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""EN"",""currentEquip"":null,""equip"":{""uniequip_001_flamtl"":{""hide"":1,""locked"":0,""level"":1},""uniequip_002_flamtl"":{""hide"":1,""locked"":1,""level"":1}}},""178"":{""instId"":178,""charId"":""char_416_zumama"",""favorPoint"":0,""potentialRank"":0,""mainSkillLvl"":1,""skin"":""char_416_zumama#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1679896778,""skills"":[{""skillId"":""skchr_zumama_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_zumama_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_zumama_3"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{""uniequip_001_zumama"":{""hide"":1,""locked"":0,""level"":1},""uniequip_002_zumama"":{""hide"":1,""locked"":1,""level"":1},""uniequip_003_zumama"":{""hide"":1,""locked"":1,""level"":1}}},""179"":{""instId"":179,""charId"":""char_373_lionhd"",""favorPoint"":0,""potentialRank"":1,""mainSkillLvl"":1,""skin"":""char_373_lionhd#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1680288606,""skills"":[{""skillId"":""skcom_atk_up[3]"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_lionhd_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{""uniequip_001_lionhd"":{""hide"":1,""locked"":0,""level"":1},""uniequip_002_lionhd"":{""hide"":1,""locked"":1,""level"":1}}},""180"":{""instId"":180,""charId"":""char_4064_mlynar"",""favorPoint"":15331,""potentialRank"":0,""mainSkillLvl"":7,""skin"":""char_4064_mlynar#2"",""level"":69,""exp"":129,""evolvePhase"":2,""defaultSkillIndex"":2,""gainTime"":1680288666,""skills"":[{""skillId"":""skchr_mlynar_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_mlynar_2"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_mlynar_3"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""EN"",""currentEquip"":null,""equip"":{},""starMark"":1},""181"":{""instId"":181,""charId"":""char_378_asbest"",""favorPoint"":0,""potentialRank"":0,""mainSkillLvl"":1,""skin"":""char_378_asbest#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1680289338,""skills"":[{""skillId"":""skchr_asbest_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_asbest_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{}},""182"":{""instId"":182,""charId"":""char_159_peacok"",""favorPoint"":0,""potentialRank"":0,""mainSkillLvl"":1,""skin"":""char_159_peacok#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1680378785,""skills"":[{""skillId"":""skchr_peacok_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_peacok_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{""uniequip_001_peacok"":{""hide"":1,""locked"":0,""level"":1},""uniequip_002_peacok"":{""hide"":1,""locked"":1,""level"":1}}},""183"":{""instId"":183,""charId"":""char_4067_lolxh"",""favorPoint"":0,""potentialRank"":0,""mainSkillLvl"":1,""skin"":""char_4067_lolxh#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1680891570,""skills"":[{""skillId"":""skchr_lolxh_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_lolxh_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{}},""184"":{""instId"":184,""charId"":""char_308_swire"",""favorPoint"":3600,""potentialRank"":0,""mainSkillLvl"":1,""skin"":""char_308_swire#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1681432361,""skills"":[{""skillId"":""skchr_swire_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_swire_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""EN"",""currentEquip"":null,""equip"":{""uniequip_001_swire"":{""hide"":1,""locked"":0,""level"":1},""uniequip_002_swire"":{""hide"":1,""locked"":1,""level"":1}}},""185"":{""instId"":185,""charId"":""char_472_pasngr"",""favorPoint"":500,""potentialRank"":0,""mainSkillLvl"":1,""skin"":""char_472_pasngr#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1681505450,""skills"":[{""skillId"":""skchr_pasngr_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_pasngr_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_pasngr_3"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{""uniequip_001_pasngr"":{""hide"":1,""locked"":0,""level"":1},""uniequip_002_pasngr"":{""hide"":1,""locked"":1,""level"":1},""uniequip_003_pasngr"":{""hide"":1,""locked"":1,""level"":1}}},""186"":{""instId"":186,""charId"":""char_496_wildmn"",""favorPoint"":2700,""potentialRank"":5,""mainSkillLvl"":1,""skin"":""char_496_wildmn#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1681563060,""skills"":[{""skillId"":""skchr_wildmn_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_wildmn_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""EN"",""currentEquip"":null,""equip"":{""uniequip_001_wildmn"":{""hide"":1,""locked"":0,""level"":1},""uniequip_002_wildmn"":{""hide"":1,""locked"":1,""level"":1}}},""187"":{""instId"":187,""charId"":""char_145_prove"",""favorPoint"":0,""potentialRank"":0,""mainSkillLvl"":1,""skin"":""char_145_prove#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1681854196,""skills"":[{""skillId"":""skchr_prove_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_prove_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{""uniequip_001_prove"":{""hide"":1,""locked"":0,""level"":1},""uniequip_002_prove"":{""hide"":1,""locked"":1,""level"":1}}},""188"":{""instId"":188,""charId"":""char_4062_totter"",""favorPoint"":0,""potentialRank"":3,""mainSkillLvl"":1,""skin"":""char_4062_totter#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1683185691,""skills"":[{""skillId"":""skchr_totter_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_totter_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""EN"",""currentEquip"":null,""equip"":{}},""189"":{""instId"":189,""charId"":""char_4072_ironmn"",""favorPoint"":0,""potentialRank"":0,""mainSkillLvl"":1,""skin"":""char_4072_ironmn#1"",""level"":4,""exp"":49,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1683185811,""skills"":[{""skillId"":""skchr_ironmn_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_ironmn_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_ironmn_3"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""EN"",""currentEquip"":null,""equip"":{}},""190"":{""instId"":190,""charId"":""char_101_sora"",""favorPoint"":0,""potentialRank"":1,""mainSkillLvl"":1,""skin"":""char_101_sora#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1683903341,""skills"":[{""skillId"":""skchr_sora_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_sora_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{}},""191"":{""instId"":191,""charId"":""char_349_chiave"",""favorPoint"":0,""potentialRank"":0,""mainSkillLvl"":1,""skin"":""char_349_chiave#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1683903483,""skills"":[{""skillId"":""skcom_charge_cost[3]"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_chiave_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{""uniequip_001_chiave"":{""hide"":1,""locked"":0,""level"":1},""uniequip_002_chiave"":{""hide"":1,""locked"":1,""level"":1}}},""192"":{""instId"":192,""charId"":""char_4014_lunacu"",""favorPoint"":0,""potentialRank"":4,""mainSkillLvl"":1,""skin"":""char_4014_lunacu#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1684861932,""skills"":[{""skillId"":""skchr_lunacu_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_lunacu_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""EN"",""currentEquip"":null,""equip"":{""uniequip_001_lunacu"":{""hide"":1,""locked"":0,""level"":1},""uniequip_002_lunacu"":{""hide"":1,""locked"":1,""level"":1}}},""193"":{""instId"":193,""charId"":""char_4016_kazema"",""favorPoint"":0,""potentialRank"":0,""mainSkillLvl"":1,""skin"":""char_4016_kazema#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1684862010,""skills"":[{""skillId"":""skchr_kazema_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_kazema_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""EN"",""currentEquip"":null,""equip"":{""uniequip_001_kazema"":{""hide"":1,""locked"":0,""level"":1},""uniequip_002_kazema"":{""hide"":1,""locked"":1,""level"":1}}},""194"":{""instId"":194,""charId"":""char_300_phenxi"",""favorPoint"":0,""potentialRank"":0,""mainSkillLvl"":1,""skin"":""char_300_phenxi#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1684862076,""skills"":[{""skillId"":""skchr_phenxi_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_phenxi_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_phenxi_3"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""EN"",""currentEquip"":null,""equip"":{""uniequip_001_phenxi"":{""hide"":1,""locked"":0,""level"":1},""uniequip_002_phenxi"":{""hide"":1,""locked"":1,""level"":1}}},""195"":{""instId"":195,""charId"":""char_363_toddi"",""favorPoint"":0,""potentialRank"":0,""mainSkillLvl"":1,""skin"":""char_363_toddi#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1684862287,""skills"":[{""skillId"":""skchr_toddi_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_toddi_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""JP"",""currentEquip"":null,""equip"":{}},""196"":{""instId"":196,""charId"":""char_1028_texas2"",""favorPoint"":13257,""potentialRank"":0,""mainSkillLvl"":7,""skin"":""char_1028_texas2#2"",""level"":90,""exp"":0,""evolvePhase"":2,""defaultSkillIndex"":1,""gainTime"":1684862827,""skills"":[{""skillId"":""skchr_texas2_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_texas2_2"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_texas2_3"",""unlock"":1,""state"":0,""specializeLevel"":1,""completeUpgradeTime"":-1}],""voiceLan"":""EN"",""currentEquip"":""uniequip_001_texas2"",""equip"":{""uniequip_001_texas2"":{""hide"":0,""locked"":0,""level"":1},""uniequip_002_texas2"":{""hide"":0,""locked"":1,""level"":1}}},""197"":{""instId"":197,""charId"":""char_427_vigil"",""favorPoint"":100,""potentialRank"":0,""mainSkillLvl"":1,""skin"":""char_427_vigil#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1684968471,""skills"":[{""skillId"":""skchr_vigil_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_vigil_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_vigil_3"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""EN"",""currentEquip"":null,""equip"":{}},""198"":{""instId"":198,""charId"":""char_4009_irene"",""favorPoint"":0,""potentialRank"":0,""mainSkillLvl"":1,""skin"":""char_4009_irene#1"",""level"":1,""exp"":0,""evolvePhase"":0,""defaultSkillIndex"":0,""gainTime"":1685115000,""skills"":[{""skillId"":""skchr_irene_1"",""unlock"":1,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_irene_2"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1},{""skillId"":""skchr_irene_3"",""unlock"":0,""state"":0,""specializeLevel"":0,""completeUpgradeTime"":-1}],""voiceLan"":""EN"",""currentEquip"":null,""equip"":{""uniequip_001_irene"":{""hide"":1,""locked"":0,""level"":1},""uniequip_002_irene"":{""hide"":1,""locked"":1,""level"":1}}}}}"
LDEEWWTW,sleep/rain/thunder disabler,gelatine87,Lua,Saturday 27th of May 2023 12:06:19 AM CDT,"----------------------------------------------------------------------------
-- Config
----------------------------------------------------------------------------
local occupations = {""guardtower"", ""barrackstower"", ""netherworker""}
----------------------------------------------------------------------------
-- INITIALIZATION
----------------------------------------------------------------------------
local colony = peripheral.find(""colonyIntegrator"")
local env = peripheral.find(""environmentDetector"")
local skipNight = false
----------------------------------------------------------------------------
-- MAIN
----------------------------------------------------------------------------

local function has_value(tab, val)
    for index, value in ipairs(tab) do
        if value == val then
            return true
        end
    end

    return false
end

-- Scan for requests periodically.
while true do
    local now = os.time()
    if colony and peripheral.isPresent(peripheral.getName(colony)) then
        if colony.isInColony() then
            if now < 5 or now > 19.5 then
                if not skipNight then
                    local citizens = colony.getCitizens()
                    skipNight = true
                    for _, citizen in pairs(citizens) do
                        if citizen.home ~= nil and textutils.serialiseJSON(citizen.location, true) ~=
                            textutils.serialiseJSON(citizen.bedPos, true) then
                            skipNight = false
                            if citizen.work and has_value(occupations, citizen.work.type) then
                                skipNight = true
                            end
                            if not skipNight then
                                if citizen.work then
                                    term.clear()
                                    term.setCursorPos(1, 1)
                                    print(""name: "", citizen.name, ""job: "", citizen.work.type)
                                    sleep(0.15)
                                else
                                    term.clear()
                                end
                                break
                            end
                        end
                    end

                    if skipNight then
                        redstone.setOutput(""right"", true)
                        sleep(1)
                        redstone.setOutput(""right"", false)
                    else
                        redstone.setOutput(""right"", false)
                    end
                end
            else
                skipNight = false
                redstone.setOutput(""right"", false)
            end
        end
    else
        colony = peripheral.find(""colonyIntegrator"")
    end
    -- Rain/Thunder disabler
    if env and peripheral.isPresent(peripheral.getName(env)) then
        if env.isRaining() == true or env.isThunder() == true then
            redstone.setOutput(""left"", true)
            sleep(1)
            redstone.setOutput(""left"", false)
        else
            redstone.setOutput(""left"", false)
        end
    else
        colony = peripheral.find(""environmentDetector"")
    end
    -- Rain/Thunder disabler
    sleep(1)
end
"
0tEs2GLj,MinerUp,Tbonetomtom,Lua,Saturday 27th of May 2023 12:03:49 AM CDT,"function dig()
  while turtle.detect() do
    turtle.dig()
    os.sleep()
  end
  turtle.forward()
  while turtle.detectDown() or turtle.detectUp() do
    turtle.digUp()
    turtle.digDown()
  end
end

turtle.turnLeft()
turtle.digUp() 
turtle.up() 
turtle.digUp() 
turtle.up() 
turtle.digUp() 
turtle.up() 
turtle.digUp() 
dig()
dig()
turtle.turnLeft()"
Mb8rAWsG,SPOJ BRCKTS,steinum,C++,Friday 26th of May 2023 11:11:17 PM CDT,"#include <bits/stdc++.h>
using namespace std;

int n;
const int INF=(int)1e9;
struct segtree {
	static const int maxn = 30000 + 10;
	int t[maxn << 2] = {0}, lazy[maxn << 2] = {0};
	void build(int *a, int node = 1, int l = 1, int r = n) {
		lazy[node] = 0;
		if(l == r) { t[node] = a[l]; return;}
		int m = (l + r) >> 1, L = node << 1, R = node << 1 | 1;
		build(a, L, l, m);
		build(a, R, m + 1, r);
		t[node] = min(t[L] , t[R]);
	}
	void shift(int node, int l, int r) {
		t[node] += lazy[node];
		if (l != r) {
			lazy[node << 1] += lazy[node];
			lazy[node << 1 | 1] += lazy[node];
		} lazy[node] = 0ll;
	}
	void update( int i, int j, int v, int node = 1, int l = 1, int r = n) {
		shift(node, l, r);
		if (l > j || r < i) return;
		if (i <= l && r <= j) {
			lazy[node] += v;
			shift(node, l, r);
			return;
		} int m = (l + r) >> 1, L = node << 1, R = node << 1 | 1;
		update( i, j, v, L, l, m);
		update( i, j, v, R, m + 1, r);
		t[node] = min(t[L] , t[R]);
	}
} sg;

const int mx = 30000 + 10;
int a[mx];
int32_t main() {
	ios_base::sync_with_stdio(0); cin.tie(0);
	int tc = 1;
	while(cin >> n) {
		cout << ""Test "" << tc++ << "":\n"";
		string s; cin >> s;
		for(int i = 0; i < n; i++) {
			a[i + 1] = a[i] + (s[i] == '(' ? +1: -1);
		}
		int sum = a[n];
		sg.build(a);
		int q; cin >> q; while(q--) {
			int t; cin >> t;
			if(t == 0) {
				if(sum == 0 && sg.t[1] >= 0) {
					cout << ""YES\n"";
				} else {
					cout << ""NO\n"";
				}
			} else {
				int v = 0;
				if(s[t - 1] == '(') {
					s[t - 1] = ')';
					v = -2;
				} else {
					s[t - 1] = '(';
					v = 2;
				}
				sum += v;
				sg.update(t, n, v);
			}
		}
	}
	return 0;
}"
ARM2kZEL,Fix Fullscreen on iOS,phpface,PHP,Friday 26th of May 2023 11:10:56 PM CDT,"/**
 *
 * Fix Fullscreen on iOS
 * 
 */
add_filter( 'streamtube/player/file/setup', function( $setup, $source ){

	if (strpos($_SERVER['HTTP_USER_AGENT'], 'iPhone') !== false 
		|| strpos($_SERVER['HTTP_USER_AGENT'], 'iPad') !== false) {

		if( $setup['sources'][0]['type'] == 'video/youtube' ){
			$setup = array_merge( $setup, array(
    			'youtube'		=>	array(
    				'ytControls'	=>	2
    			),
    			'controlBar'			=>	false			
			) );
		}
	}

	return $setup;
}, 9999, 2 );
"
Qb7se5UR,Scholl Report with data recording - Boletim Escolar com registro de dados,Raposa7618,Python,Friday 26th of May 2023 10:54:59 PM CDT,"import os
import time
import sys
import json

criar_arquivo = False

boletim = list()

open('Dados_de_inicializacao.txt', 'a').write

def programa_boletim():
            os.system('cls')

            aluno = list()
            Menu = True

            def mostrar_boletim():
                os.system('cls')
                count = -1
                print('\nBoletim Escolar:\n\n{}  {:20s} {:5s} {:5s} {:5s} {:5s}\n'.format('Nº', 'Nome', 'Nota 1', \
                                                                                        '   Nota 2', '   Nota 3', '    Media'))
                for c in boletim:
                    count += 1
                    linha = print('{}   {:20s}    {:.1f}       {:.1f}       {:.1f}       {}'.format(count + 1, boletim[count][0], boletim[count][1], \
                                                                                                boletim[count][2], boletim[count][3], \
                                                                                                boletim[count][4]))     

            while Menu is True:
                os.system('cls')
                fechar_boletim = True
                
                inicio = input('\nDigite o que deseja fazer:\n\n'
                                '1 - Adicionar alunos\n'
                                '2 - Remover alunos\n'
                                '3 - Mostrar boletim\n\n'
                                's - Salvar e voltar\n\n\n'
                                '>>> ')

                if inicio == '1':
                    os.system('cls')
                    print('r - Voltar\n\nO que deseja adicionar na lista?\n\n')

                    while fechar_boletim is True:
                        nome = input('\nNome: ')

                        try:
                            not1 = float(input('Nota 1: '))
                            not2 = float(input('Nota 2: '))
                            not3 = float(input('Nota 3: '))

                            media = (not1 + not2 + not3) / 3

                            aluno.append(nome), aluno.append(not1), aluno.append(not2), aluno.append(not3), aluno.append(str(round(media, 1)))
                            boletim.append(aluno[:])
                            aluno.clear()

                            with open(f'{nome_arquivo}.json', 'w') as escrever:
                                json.dump(boletim, escrever)
                            
                        except ValueError:
                            aluno.clear()
                            try:
                                if nome == 'r' or not1 == 'r' or not2 == 'r' or not3 == 'r':
                                    if criar_arquivo == True:
                                        open('Dados_de_inicializacao.txt', 'a').write(nome_arquivo + '\n')
            
                                    input(f'{mostrar_boletim()}\n\n APERTE ENTER PARA VOLTAR')
                                    fechar_boletim = False
                                
                                else:
                                    continue
                            
                            except NameError:
                                print('Digite algo valido!')
                                time.sleep(2)
                                continue
                
                elif inicio == '2':
                    while fechar_boletim is True:
                        if (boletim == []) is False:
                            print(f'{mostrar_boletim()}\n')
                            remover_item = input('>>> ')

                            if remover_item.isnumeric():
                                remover_item1 = int(remover_item)

                                if (remover_item1 - 1) < len(boletim) and not remover_item1 == 0:
                                    del boletim[remover_item1 - 1]

                                    with open(f'{nome_arquivo}.json', 'w') as escrever:
                                        json.dump(boletim, escrever)

                                elif (remover_item1 - 1) > (len(boletim) - 1) or remover_item1 == 0:
                                    print('Não existe nenhum item com este numero na lista!')
                                    time.sleep(2)
                                    os.system('cls')

                            else:
                                if (remover_item == 'r' or remover_item == 'R') is True:
                                    fechar_boletim = False
                                    
                                elif (remover_item == 'c' or remover_item == 'C') is True:
                                    boletim.clear()
                                    input(f'{mostrar_boletim()}\n\nAPERTE ENTER PARA SEGUIR')
                                    fechar_boletim = False

                                else:
                                    print('Digite algo válido')
                                    time.sleep(2)
                            
                        else:
                            print('Não exitem mais itens para remover da lista!')
                            time.sleep(3)
                            fechar_boletim = False
                    
                elif inicio == '3':
                    input(f'{mostrar_boletim()}\n\nAPERTE ENTER PARA SEGUIR')
                
                elif inicio == 's' or inicio == 'S':
                    with open(f'{nome_arquivo}.json', 'w') as escrever:
                        json.dump(boletim, escrever)
                    break

while True:
    os.system('cls')

    verificar_arquivo = input('\nO que você deseja fazer?\n'
                              '\n1 - Abrir um arquivo salvo'
                              '\n2 - Criar um novo arquivo\n'
                              '\ns - Salvar e sair do programa\n\n\n>>> ')
    
    if verificar_arquivo == '2':
        os.system('cls')

        nome_arquivo = input('\nr - Voltar\n\nDigite o nome do novo arquivo\n\n>>> ')

        if nome_arquivo == 'r' or nome_arquivo == 'R':
            continue

        else:
            nome_arquivo = f'{nome_arquivo}'
            criar_arquivo = True

            programa_boletim()

    elif verificar_arquivo == '1':
        os.system('cls')

        nome_arquivo = input('\nr - Voltar\n\nDigite o nome do novo arquivo\n\n>>> ')

        if nome_arquivo == 'r' or nome_arquivo == 'R':
            continue

        else:
            with open('Dados_de_inicializacao.txt', 'r') as ler:
                linhas = ler.readlines()

                for linha in linhas:
                    if nome_arquivo in linha:
                        with open(f'{nome_arquivo}.json', 'r') as ler2:
                            
                            boletim = json.load(ler2)

                            programa_boletim()
                            break
                    
                else:
                    print('\nNao existe esse arquivo no banco de dados.')
                    time.sleep(2)

        

    elif verificar_arquivo == 's':
        sys.exit()
"
ZuMuDTGU,Untitled,stoopidatcoding,C++,Friday 26th of May 2023 10:47:53 PM CDT,"/*
stoopidatcoding still here lel
shorter code = handsome
*/
#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define fast ios::sync_with_stdio(false); cin.tie(0); cout.tie(0);
#define end ""\n""
#define space "" ""
#define yes cout<<""YES\n""
#define no cout<<""NO\n""
const ll N = 1e6 + 5;
ll a[N];
// count the factor of number from 1 - N
void bulul() {
    for(ll i = 1; i <N; i++) {
        for(ll j = i; j < N; j += i) {
            a[j]++;
        }
    }
}
int main() {
	ll n;
	cin >> n;
    bulul();
    ll x;
    ll ans = 0;
    for(ll i = 0; i <n; i++) {
        cin >> x;
        ans += x * a[x];
    }
    cout << ans << endl;
    return 0;
}

"
Pv8YDRdE,UA3,Gpastebin22,HTML,Friday 26th of May 2023 09:50:19 PM CDT,"Mozilla/5.0 (iPhone; CPU iPhone OS 16_5 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/16.4 Mobile/15E148 Safari/604.1
	
Mozilla/5.0 (iPhone; CPU iPhone OS 16_5 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) CriOS/113.0.5672.121 Mobile/15E148 Safari/604.1

Mozilla/5.0 (iPhone; CPU iPhone OS 16_5 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) FxiOS/113.0 Mobile/15E148 Safari/605.1.15

Mozilla/5.0 (Linux; Android 13) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.5672.162 Mobile Safari/537.36

Mozilla/5.0 (Linux; Android 13; SM-A205U) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.5672.162 Mobile Safari/537.36

Mozilla/5.0 (Linux; Android 13; SM-A102U) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.5672.162 Mobile Safari/537.36

Mozilla/5.0 (Linux; Android 13; SM-G960U) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.5672.162 Mobile Safari/537.36

Mozilla/5.0 (Linux; Android 13; SM-N960U) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.5672.162 Mobile Safari/537.36

Mozilla/5.0 (Linux; Android 13; LM-Q720) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.5672.162 Mobile Safari/537.36

Mozilla/5.0 (Linux; Android 13; LM-X420) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.5672.162 Mobile Safari/537.36

Mozilla/5.0 (Linux; Android 13; LM-Q710(FGN)) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.5672.162 Mobile Safari/537.36

Mozilla/5.0 (Linux; Android 8.1.0; CompalMediatekArgon1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/112.0.0.0 Safari/537.36

Mozilla/5.0 (Linux; Android 8.1.0; CompalMediatekArgon1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/111.0.0.0 Safari/537.36

Mozilla/5.0 (Linux; Android 9; CompalMediatekArgon2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/110.0.0.0 Safari/537.36

Mozilla/5.0 (Linux; Android 8.1.0; CompalMediatekArgon1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/110.0.0.0 Safari/537.36

Mozilla/5.0 (Linux; Android 8.1.0; CompalMediatekArgon1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Safari/537.36

Mozilla/5.0 (Linux; Android 8.1.0; CompalMediatekArgon1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36

Mozilla/5.0 (Linux; Android 9; CompalMediatekArgon2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36

Mozilla/5.0 (X11; U; Linux x86_64) AppleWebKit/537.36 sapppalmlika1973 (KHTML, like Gecko) Chrome/106.0.1593.398 Safari/537.36

Mozilla/5.0 (X11; U; Linux x86_64) AppleWebKit/537.36 geschpalmnessfor1971 (KHTML, like Gecko) Chrome/106.0.6234.925 Safari/537.36

Mozilla/5.0 (Linux; Android 8.1.0; CompalMediatekArgon1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36

Mozilla/5.0 (Linux; Android 9; CompalMediatekArgon2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36

Mozilla/5.0 (Linux; Android 8.1.0; CompalMediatekArgon1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/102.0.0.0 Safari/537.36

Mozilla/5.0 (Linux; Android 8.1.0; CompalMediatekArgon1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.41 Safari/537.36

Mozilla/5.0 (Linux; Android 8.1.0; CompalMediatekArgon1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.61 Safari/537.36

Mozilla/5.0 (Linux; Android 8.1.0; CompalMediatekArgon1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.88 Safari/537.36

Mozilla/5.0 (Linux; Android 8.1.0; CompalMediatekArgon1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.73 Safari/537.36

Mozilla/5.0 (Linux; Android 8.1.0; CompalMediatekArgon1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.55 Safari/537.36

Mozilla/5.0 (Linux; Android 8.1.0; CompalMediatekArgon1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.87 Safari/537.36

Mozilla/5.0 (Linux; Android 8.1.0; CompalMediatekArgon1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.101 Safari/537.36

Mozilla/5.0 (Linux; Android 8.1.0; CompalMediatekArgon1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.70 Safari/537.36

Mozilla/5.0 (Linux; Android 8.1.0; PALM PVG100 Build/OPM4.171019.021.Y1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.87 Mobile Safari/537.36

Mozilla/5.0 (Linux; Android 8.1.0; CompalMediatekArgon1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.98 Safari/537.36

Mozilla/5.0 (Linux; Android 8.1.0; PALM PVG100) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.45 Mobile Safari/537.36

Mozilla/5.0 (Linux; Android 8.1.0; PALM PVG100 Build/OPM1.171019.018) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.45 Mobile Safari/537.36

Mozilla/5.0 (Linux; Android 8.1.0; PALM PVG100) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.110 Mobile Safari/537.36 EdgA/96.0.1054.62

Mozilla/5.0 (Linux; Android 8.1.0; PALM PVG100) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.104 Mobile Safari/537.36

Mozilla/5.0 (Linux; Android 8.1.0; PALM PVG100 Build/OPM4.171019.021.Y1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.104 Mobile Safari/537.36

Mozilla/5.0 (Linux; Android 8.1.0; PALM PVG100) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.92 Mobile Safari/537.36

Mozilla/5.0 (Linux; Android 8.1.0; PALM PVG100 Build/7249334) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.104 Mobile Safari/537.36

Mozilla/5.0 (Linux; Android 8.1.0; PALM PVG100 Build/OPM2.171019.029) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.50 Mobile Safari/537.36

Mozilla/5.0 (Linux; Android 5.1.1; SPALM 10.1”) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.74 Safari/537.36

Mozilla/5.0 (Linux; Android 8.1.0; PALM PVG100 Build/5887208) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.50 Mobile Safari/537.36

Mozilla/5.0 (Linux; Android 8.1.0; PALM PVG100 Build/OPM2.171026.006.C1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.74 Mobile Safari/537.36

Mozilla/5.0 (Linux; Android 8.1.0; PALM PVG100) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.69 Mobile Safari/537.36 EdgA/95.0.1020.48

Mozilla/5.0 (Linux; Android 5.1.1; SPALM 10.1?) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.74 Safari/537.36

Mozilla/5.0 (Linux; Android 8.1.0; PALM PVG100) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.50 Mobile Safari/E7FBAF

Mozilla/5.0 (Linux; Android 5.1.1; SPALM 10.1? Build/LMY47V; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/95.0.4638.74 Safari/537.36

Mozilla/5.0 (Linux; Android 8.1.0; PALM PVG100 Build/OPM8.190205.001) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.50 Mobile Safari/537.36

Mozilla/5.0 (Linux; Android 8.1.0; PALM PVG100 Build/5948682) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.50 Mobile Safari/537.36

Mozilla/5.0 (Linux; Android 8.1.0; PALM PVG100 Build/OPM4.171019.021.Y1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.50 Mobile Safari/537.36

Mozilla/5.0 (Linux; Android 5.1.1; SPALM 10.1” Build/LMY47V; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/95.0.4638.74 Safari/537.36

Mozilla/5.0 (Linux; Android 8.1.0; PALM PVG100 Build/OPM4.171019.021.P1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.50 Mobile Safari/537.36

Mozilla/5.0 (Linux; Android 8.1.0; PALM PVG100 Build/6969599) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.50 Mobile Safari/537.36

Mozilla/5.0 (Linux; Android 8.1.0; PALM PVG100) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.74 Mobile Safari/537.36

Mozilla/5.0 (Linux; Android 8.1.0; PALM PVG100) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.50 Mobile Safari/537.36

Mozilla/5.0 (Linux; Android 8.1.0; PALM PVG100 Build/7449185) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/94.0.4606.85 Mobile Safari/537.36

Mozilla/5.0 (Linux; Android 8.1.0; PALM PVG100) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/94.0.4606.85 Mobile Safari/537.36

Mozilla/5.0 (Linux; Android 8.1.0; PALM PVG100 Build/OPM8.190405.001) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/94.0.4606.71 Mobile Safari/537.36

Mozilla/5.0 (Linux; Android 8.1.0; PALM PVG100 Build/OPM2.171019.016) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/94.0.4606.85 Mobile Safari/537.36

Mozilla/5.0 (Linux; Android 8.1.0; PALM PVG100 Build/OPM4.171019.021.P1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/94.0.4606.71 Mobile Safari/537.36

Mozilla/5.0 (Linux; arm_64; Android 10; SM-A715F) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/112.0.0.0 YaApp_Android/23.50.1 YaSearchBrowser/23.50.1 BroPP/1.0 SA/3 Mobile Safari/537.36

Mozilla/5.0 (iPhone; CPU iPhone OS 16_1_2 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15E148 Instagram 283.0.0.16.103 (iPhone11,8; iOS 16_1_2; pt_BR; pt-BR; scale=2.00; 828x1792; 474411477)

Mozilla/5.0 (Linux; Android 13; SM-A137F Build/TP1A.220624.014; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/113.0.5672.162 Mobile Safari/537.36 [FB_IAB/FB4A;FBAV/416.0.0.35.85;]
Dalvik/2.1.0 (Linux; U; Android 8.1.0; iris50 Build/O11019)

Mozilla/5.0 (Linux; Android 12; AC2003 Build/RKQ1.211119.001; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/113.0.5672.131 Mobile Safari/537.36[FBAN/EMA;FBLC/it_IT;FBAV/356.0.0.7.89;]
Dalvik/2.1.0 (Linux; U; Android 13; 2303ERA42L Build/TP1A.220624.014)

Mozilla/5.0 (Linux; arm_64; Android 11; RMX3370) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/110.0.0.0 YaSearchBrowser/23.33.1 BroPP/1.0 YaSearchApp/23.33.1 webOmni SA/3 Mobile Safari/537.36

Mozilla/5.0 (Linux; Android 11; VNE-AN40; HMSCore 6.10.0.302) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.88 HuaweiBrowser/13.0.4.302 Mobile Safari/537.36

Mozilla/5.0 (Linux; arm_64; Android 12; SM-M315F) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/112.0.0.0 YaApp_Android/23.50.1 YaSearchBrowser/23.50.1 BroPP/1.0 SA/3 Mobile Safari/537.36

Mozilla/5.0 (Linux; Android 10; Pixel 4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Mobile Safari/537.36

Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Safari/537.36

Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36"
E1CCChMu,turtle,Tbonetomtom,Lua,Friday 26th of May 2023 09:49:25 PM CDT,"function turn(direction)
  if direction == ""right"" then
    turtle.turnRight()
  elseif direction == ""left"" then
    turtle.turnLeft()
  end
end
 
function move(direction, distance)
  distance = distance or 1
  for i = 1, distance do
    if direction == ""forward"" then
      turtle.forward()
    elseif direction == ""back"" then
      turtle.back()
    elseif direction == ""up"" then
      turtle.up()
    elseif direction == ""down"" then
      turtle.down()
    end
  end
end
 
local tArgs = {...}
local run = tArgs[2] or 1
 
if tArgs[1] == ""right"" then
  turtle.turnRight()
elseif tArgs[1] == ""left"" then
  turtle.turnLeft()
elseif tArgs[1] == ""dig"" then
    turtle.dig()
    os.sleep(0.1)
elseif tArgs[1] == ""forward"" then
  for i = 1, run do
    turtle.forward()
    os.sleep(0.1)
  end
elseif tArgs[1] == ""backward"" then
  for i = 1, run do
    turtle.back()
    os.sleep(0.1)
  end
elseif tArgs[1] == ""up"" then
  for i = 1, run do
    turtle.up()
    os.sleep(0.1)
  end
elseif tArgs[1] == ""down"" then
  for i = 1, run do
    turtle.down()
    os.sleep(0.1)
  end
elseif tArgs[1] == ""flip"" then
  turtle.turnRight()
  turtle.turnRight()
end"
m3UTnSLy,Filter the post content and allow only specific attributes as defined.,phpface,PHP,Friday 26th of May 2023 09:44:11 PM CDT,"/**
 *
 * Filter the post content and allow only specific attributes as defined.
 *
 * @param string $content
 * 
 */
add_filter( 'the_content', function( $content ){
 
    if( is_singular( 'video' ) && is_main_query() ){
 
	    return wp_kses( $content, array(
	        'br'        =>  array(),
	        'em'        =>  array(),
	        'strong'    =>  array(),
	        'p'         =>  array(),
	        'img'       =>  array(
	            'src'   =>  array(),
	            'alt'   =>  array()
	        )
	    ) );

	}

	return $content;
}, 10, 1 );"
V4YdApwH,Untitled,35657,C++,Friday 26th of May 2023 09:32:13 PM CDT,"

Лилия есть ряд моментов:

1) для класса phone_book использование в качестве поля статического массива - не самый лучший выбор, так как размер статических элементов должен быть заранее определен и не может меняться по ходу выполнения программы. Если вы хотите использовать статический массив, то можете просто удалить все конструкторы и деструктор и оставить прямую инициализацию полей, как у вас это и описано. Либо перейти на использование динамического массива в качестве поля класса. У структур, которые мы использовали в прошлых заданиях, просто не было конструкторов и методов, поэтому там можно было все делать на стеке.

2) во всех методах класса стоит удалить параметр phone_book & my_book так как эти методы уже вызываются из класса и им не надо указывать в качестве параметра к какому именно классу нужно обращаться, пример реализации метода:

void AddAbonent(const char name[], const char home_phone[], const char work_phone[], const char mob_phone[]) {
    if (abonents_namber == max_abonents_nummber) {
        cout << ""Абонент не может быть добавлен "" << endl;
        return;
    }
    strcpy(lines[abonents_namber].name, name);
    strcpy(lines[abonents_namber].home_phone, home_phone);
    strcpy(lines[abonents_namber].work_phone, work_phone);
    strcpy(lines[abonents_namber].mob_phone, mob_phone);
    abonents_namber++;
}

3) у вас по тексту проскакивает то ""namber"" то ""nummber"" лучше привести все к одному виду, например ""number""


#define _CRT_SECURE_NO_WARNINGS 
#include <iostream>
#include<clocale>
#include<string.h>

using namespace std;

struct abonent {
    char name[50]{};
    char home_phone[15]{};
    char work_phone[15]{};
    char mob_phone[15]{};

};

class phone_book {

    //phone_book()

public:
    //phone_book() : lines[]{},
    //phone_book(int max_abonents_number) : {}
    //phone_book(lines[], int abonents_number, int max_abonents_number) : {}


    void AddAbonent(phone_book& my_book, const char name[], const char home_phone[], const char work_phone[], const char mob_phone[]) {
        if (abonents_namber == max_abonents_nummber) {
            cout << ""Абонент не может быть добавлен "" << endl;
            return;
        }
        strcpy(my_book.abonents_namber[my_book.lines].name, name);
        strcpy(my_book.abonents_namber[my_book.lines].home_phone, home_phone);
        strcpy(my_book.abonents_namber[my_book.lines].work_phone, work_phone);
        strcpy(my_book.abonents_namber[my_book.lines].mob_phone, mob_phone);
        my_book.abonents_namber++;
    }

    void ShowAllAbonents(phone_book& my_book) {
        cout << ""Вся моя телефонная книга: "" << endl;
        for (int i = 0; i < my_book.abonents_namber; i++) {
            cout << '\""' << my_book.lines[i].name << ""\"", home_phone: "" << my_book.lines[i].home_phone << "", work_phone: "" << my_book.lines[i].work_phone << "", mob_phone: "" << my_book.lines[i].mob_phone << endl;
        }
        cout << endl;

    }

    void DelAbonents(phone_book& my_book, const char name[]) {
        for (int i = 0; i < my_book.abonents_namber; i++) {
            if (!strcmp(my_book.lines[i].name, name)) {
                for (int j = i; j < my_book.abonents_namber - 1; j++) {
                    my_book.lines[j] = my_book.lines[j + 1];
                }
                abonents_namber--;
            }
        }
    }

    void FindAbonentName(phone_book& my_book, const char name[]) {
        cout << ""По вашему запросу найдено: "" << endl;
        for (int i = 0; i < my_book.max_abonents_nummber; i++) {
            if (!strcmp(my_book.lines[i].name, name)) {
                cout << '\""' << my_book.lines[i].name << ""\"", home_phone: "" << my_book.lines[i].home_phone << "", work_phone: "" << my_book.lines[i].work_phone << "", mob_phone: "" << my_book.lines[i].mob_phone << endl;
            }
        }
        cout << endl;
    }

    //~lines();

private:
    abonent lines[100]{};
    int abonents_namber = 0;
    int max_abonents_nummber = 100;

};





int main()
{
    setlocale(LC_ALL, ""Russian"");
    phone_book my_book;

    my_book.AddAbonent(my_book, ""Ivan"", ""365963"", ""470047"", ""+79998765432"");
    my_book.AddAbonent(my_book, ""Petr"", ""658305"", ""385326"", ""+79148436633"");
    my_book.AddAbonent(my_book, ""Cidor"", ""250025"", ""230023"", ""+79248735505"");
    my_book.AddAbonent(my_book, ""Natasha"", ""252837"", ""370042"", ""+79245450568"");
    my_book.AddAbonent(my_book, ""Elena"", ""253131"", ""239223"", ""+79628737621"");
    my_book.AddAbonent(my_book, ""Olga"", ""360215"", ""230023"", ""+79243335505"");

    my_book.ShowAllAbonents(my_book);

    my_book.DelAbonents(my_book, ""Petr"");

    my_book.ShowAllAbonents(my_book);

    my_book.FindAbonentName(my_book, ""Elena"");

}
"
mghMgCXF,Create class which restarts the loop,Fedorov_S_Od,Python,Friday 26th of May 2023 08:27:46 PM CDT,"class Generator:

    # def __init__(self, list1):
    #     self.list1 = list1
    #     self.iter_list1 = iter(self.list1)
        
    # def next(self):

    #     try:
    #         return next(self.iter_list1)
    #     except StopIteration:
    #         self.iter_list1 = iter(self.list1)
    #         return next(self.iter_list1)
        
    def __init__(self, list1):
        self.list1 = list1
        self.index = -1
        
    def next(self):
        self.index += 1
        if self.index >= len(self.list1):
            self.index = 0
        return self.list1[self.index]

g = Generator([1,2,4])
print(g.next()) # 1
print(g.next()) # 2
print(g.next()) # 4
print(g.next()) # 1"
RHpBYmTh,Image Balls V2,HugoBDesigner,Lua,Friday 26th of May 2023 08:21:17 PM CDT,"l=love;h=l.graphics;a={}i=l.image.newImageData""i.png""m=math.abs;p=pairs;for s=150,2,-1 do for x=s,400-s do for y=s,300-s do for _,v in p(a)do if(x-v.x)^2+(y-v.y)^2<(v.s+s)^2 then goto n;end;end;r,g,b=i:getPixel(x,y)for v=x-s,x+s-1 do for w=y-s,y+s-1 do if(x-v)^2+(y-w)^2<s^2 then d,e,f=i:getPixel(v,w)if m(r-d)+m(g-e)+m(b-f)>.1 then goto n;end;end;end;end;a[#a+1]={x=x,y=y,s=s-1,{r,g,b}}::n::end;end;end;function l.draw()for _,v in p(a)do h.setColor(v[1])h.setLineWidth(v.s)h.circle(""line"",v.x,v.y,v.s/2,99)end;end"
W8FMz5Aq,Untitled,Mohammad_Dipu_Sultan,C++,Friday 26th of May 2023 08:09:37 PM CDT,"// Flip Columns SRBD Coding interview
#include<bits/stdc++.h>
using namespace std;

class solution{

	public:
		int toggle(int n, int m, int k)
		{
			int v[15];
			memset(v, 0, sizeof(v));
			map<int, int>mp;
			for(int i=0; i<n; i++)// row
			{
				for(int j=0; j<m; j++)// col
				{
					int x;
					cin >> x;
					if(x==1)
					{
						v[i]=v[i] | (1<<j); // unique value for a row if all of the 1 position in simillar poisition it will be same like if first row having 1 0 0 and third row 1 0 0 their value will be same
					}
				}
			}

			for(int i=0; i<n; i++)
			{
				mp[v[i]]++;// counting frequency how many simillar value on v array like in input 1st and third one frequency will be same 2nd one will be diffrent 
			}
			int mx=0;
			for(auto & [a, b] : mp) //[key, vlaue] in key unique number for specific row and value is how many times it occured
			{
				int x=m-__builtin_popcount(a); // counting how many zero in one row

				if(x<=k and (k-x)%2==0)
				{
					mx=max(mx, b);
				}
			}

			/*for(auto it=mp.begin(); it!=mp.end(); it++)
			{
				int a=it->first;
				int b=it->second;
				int x=m-__builtin_popcount(a); // counting how many zero in one row

				if(x<=k and (k-x)%2==0)
				{
					mx=max(mx, b);
				}
			}*/

			return mx;
		}

			
};
int main()
{
	solution sol;

	int n, m, k;
	cin >> n >> m >> k;
	
	cout << sol.toggle(n, m, k) << endl;

	return 0;
}"
pDWsjGyg,Tp nro 6 ejercicio 6,Lucarts,C++,Friday 26th of May 2023 07:22:38 PM CDT,"#include <iostream>
using namespace std;

int main()
{
  int vector[10] = {};
  int mayor, indice;
  for (int i = 0; i < 10; i++)
  {
    cout << ""Numero posicion "" << i + 1 << "": "" << endl;
    cin >> vector[i];
  }

  mayor = vector[0];
  for (int i = 1; i < 10; i++)
  {
    if (vector[i] > mayor)
    {
      mayor = vector[i];
      indice = i;
    }
  }

  return 0;"
LcC5anrW,2023-05-26_stats.json,rdp_snitch,JSON,Friday 26th of May 2023 07:15:09 PM CDT,"{
  ""ip"": {
    ""181.118.174.215"": 14,
    ""162.241.158.17"": 25,
    ""45.227.254.8"": 4,
    ""87.251.75.145"": 4,
    ""71.6.199.23"": 1,
    ""185.170.144.3"": 2,
    ""98.143.255.25"": 1,
    ""185.122.204.69"": 2,
    ""162.142.125.226"": 1,
    ""194.165.16.78"": 2,
    ""87.251.75.120"": 2,
    ""106.116.169.71"": 1,
    ""45.56.67.13"": 7,
    ""8.218.97.150"": 4,
    ""185.11.61.199"": 4,
    ""194.26.135.80"": 4,
    ""45.135.201.65"": 3,
    ""121.4.147.80"": 4,
    ""213.6.148.83"": 1,
    ""45.227.254.55"": 2,
    ""185.161.248.213"": 1,
    ""87.251.64.110"": 2,
    ""87.251.75.64"": 1,
    ""205.210.31.48"": 3,
    ""120.55.14.18"": 1,
    ""167.172.74.62"": 1,
    ""194.165.16.73"": 2,
    ""20.168.203.232"": 3,
    ""5.62.62.13"": 2,
    ""5.62.60.13"": 1,
    ""5.62.58.37"": 2,
    ""43.156.9.187"": 30,
    ""103.238.110.134"": 1,
    ""185.156.72.27"": 3,
    ""205.210.31.105"": 3,
    ""62.233.50.179"": 1,
    ""51.75.160.42"": 2
  },
  ""asn"": {
    ""AS23416"": 14,
    ""AS19871"": 25,
    ""AS267784"": 6,
    ""AS208091"": 7,
    ""AS10439"": 1,
    ""AS48080"": 4,
    ""AS3367"": 1,
    ""AS57523"": 11,
    ""AS398324"": 1,
    ""AS48721"": 4,
    ""AS4134"": 1,
    ""AS63949"": 7,
    ""AS45102"": 4,
    ""AS44486"": 3,
    ""AS45090"": 4,
    ""AS12975"": 1,
    ""AS49202"": 1,
    ""AS396982"": 6,
    ""AS37963"": 1,
    ""AS14061"": 1,
    ""AS8075"": 3,
    ""AS198605"": 5,
    ""AS132203"": 30,
    ""AS45916"": 1,
    ""AS61432"": 3,
    ""AS16276"": 2
  },
  ""isp"": {
    ""Telefonica Data Chile S.A."": 14,
    ""Unified Layer"": 25,
    ""Flyservers S.A."": 10,
    ""XHOST-INTERNET-SOLUTIONS"": 7,
    ""CariNet, Inc."": 1,
    ""Dmitriy Panchenko"": 4,
    ""Xplornet Communications Inc."": 1,
    ""Chang Way Technologies Co. Limited"": 11,
    ""Censys, Inc."": 1,
    ""Chinanet"": 1,
    ""Akamai Technologies, Inc."": 7,
    ""Alibaba (US) Technology Co., Ltd."": 4,
    ""LIVINGBOTS"": 3,
    ""China Internet Network Information Center"": 4,
    ""Palestine Telecommunications Company"": 1,
    ""Kisara LLC"": 1,
    ""Google LLC"": 6,
    ""Hangzhou Alibaba Advertising Co"": 1,
    ""DigitalOcean, LLC"": 1,
    ""Microsoft Corporation"": 3,
    ""AVAST Software s.r.o."": 5,
    ""Shenzhen Tencent Computer Systems Company Limited"": 30,
    ""gtpl henish cable vision"": 1,
    ""TOV VAIZ PARTNER"": 3,
    ""OVH SAS"": 2
  },
  ""org"": {
    ""CTC. CORP S.A. (TELEFONICA EMPRESAS)"": 14,
    ""WEBSITEWELCOME.COM"": 25,
    ""UAB Host Baltic"": 6,
    ""Xhost Internet Solutions"": 9,
    ""CariNet, Inc."": 1,
    ""Xhostis"": 2,
    ""Xplornet Communications Inc"": 1,
    ""Starcrecium Limited"": 6,
    ""Censys Inc"": 1,
    ""Flyservers S.A"": 4,
    ""Chinanet HE"": 1,
    ""Linode"": 7,
    ""Alibaba.com Singapore E-Commerce Private Limited"": 4,
    ""Chang Way Technologies Co. Limited"": 4,
    ""Unknown"": 3,
    ""Tencent cloud computing (Beijing) Co., Ltd."": 4,
    ""Palestine Telecommunications Company"": 1,
    ""Kisara LLC"": 1,
    ""Palo Alto Networks, Inc"": 6,
    ""Aliyun Computing Co., LTD"": 1,
    ""DigitalOcean, LLC"": 1,
    ""Microsoft Azure Cloud (eastus)"": 3,
    ""AVAST Software s.r.o."": 4,
    ""AVAST cloud"": 1,
    ""Tencent Cloud Computing"": 30,
    ""Gtpl Broadband Pvt. Ltd."": 1,
    ""TOV VAIZ PARTNER"": 3,
    ""Sierra LLC"": 1,
    ""OVH Ltd"": 2
  },
  ""regionName"": {
    ""Santiago Metropolitan"": 14,
    ""Utah"": 25,
    ""Vilnius"": 6,
    ""England"": 9,
    ""California"": 7,
    ""North Holland"": 2,
    ""New Brunswick"": 1,
    ""Moscow"": 10,
    ""Michigan"": 1,
    ""Kaunas"": 4,
    ""Hebei"": 1,
    ""Texas"": 7,
    ""Central and Western District"": 4,
    ""Chechnya"": 4,
    ""Bremen"": 3,
    ""Shanghai"": 4,
    ""Gaza"": 1,
    ""Zhejiang"": 1,
    ""South West"": 1,
    ""Virginia"": 3,
    ""Kotayk"": 3,
    ""Hamilton city"": 2,
    ""North West"": 30,
    ""Gujarat"": 1,
    ""Kyiv City"": 3
  },
  ""country"": {
    ""Chile"": 14,
    ""United States"": 43,
    ""Lithuania"": 10,
    ""United Kingdom"": 9,
    ""Netherlands"": 2,
    ""Canada"": 1,
    ""Russia"": 14,
    ""China"": 6,
    ""Hong Kong"": 4,
    ""Germany"": 3,
    ""Palestine"": 1,
    ""Singapore"": 31,
    ""Armenia"": 3,
    ""Bermuda"": 2,
    ""India"": 1,
    ""Ukraine"": 3
  },
  ""account"": {
    ""hello"": 100,
    ""Test"": 14,
    ""Administr"": 11,
    ""root"": 1,
    ""(empty)"": 2,
    ""Domain"": 13,
    ""afElyrLpe"": 1,
    ""ASMnrz"": 1,
    ""gZtjlR"": 1,
    ""xfGQQfJQY"": 1,
    ""bmnQZh"": 1,
    ""TQFPdz"": 1
  },
  ""keyboard"": {
    ""Unknown"": 147
  },
  ""client_build"": {
    ""Unknown"": 147
  },
  ""client_name"": {
    ""Unknown"": 147
  },
  ""ip_type"": {
    ""Unknown"": 62,
    ""hosting"": 80,
    ""proxy"": 5
  }
}"
sTjnk6ui,2023 June 5/26/23 7 pm,marshallsmyth,CSS,Friday 26th of May 2023 06:37:49 PM CDT,"<!DOCTYPE html>   <html>   <head>   <meta name=""viewport"" content=""width=device-width, initial-scale=1""><title>Calendar   
 </title><style>@import url(https://fonts.googleapis.com/css?family=Varela+Round|Macondo);  ::-webkit-scrollbar { width:0px;height:9px; } 
  ::-webkit-scrollbar-track {background:#006; } ::-webkit-scrollbar-thumb { border-radius:22px;background:#600; } 
  body { background:#100;overflow:auto; }     
 .headers1 { text-align:center;font-family:varela round;font-size:33px;color:#fe7;line-height:22px;letter-spacing:2px }       
 .headers2 { text-align:center;font-family:varela round;font-size:32px;color:#fe7;line-height:5px;letter-spacing:4px;z-index:0; }
 .days { text-align:left;font-family:varela round;font-size:27px;line-height:27px;color:#00f; }
 .numbers { text-align:left;font-family:varela round, macondo;font-size:40px;color:lavender;line-height:70px; }
 .boxtext1 { margin:100px 0 0 0;font-size:18px;line-height:44px;color:#44f;text-align:center;letter-spacing:3px;text-indent:22px; }

 .box { position:absolute;top:1030px;left:0.2px;width:1251px;height:366px;border:ridge 7px #00f; }
 
 .row1, .row2, .row3, .row4, .row5, .row6, .row7, .row8 { position:absolute;border-left:7px ridge gold;top:144px;width:133px;height:69vw; }
 .row1 { left:0px; } .row2 { left:180px; } .row3 { left:360px; } .row4 { left:540px; }
 .row5 { left:720px; } .row6 { left:900px; } .row7 { left:1080px; } .row8 { left:1260px; } 
  .bar1, .bar2, .bar3, .bar4, .bar5, .bar6 { position:absolute;border-top:7px ridge gold;left:0px;width:1259px;z-index:-9; }
 .bar1 { top:144px; } .bar2 { top:324px; } .bar3 { top:504px; } .bar4 { top:684px; } .bar5 { top:864px; } .bar6 { top:1024px; } 
 
  </style>

 <div class=""headers1"">2023</div>   <div class=""headers2""><h1>June</h1></div>
 <div class=""days"" style=""margin:44px 0 0 6px;"">Sunday</div> <div class=""days"" style=""margin:-27px 0 0 186px;"">Monday</div>
 <div class=""days"" style=""margin:-27px 0 0 366px;"">Tuesday</div><div class=""days"" style=""margin:-27px 0 0 546px;"">Wednesday</div>
 <div class=""days"" style=""margin:-27px 0 0 726px;"">Thursday</div><div class=""days"" style=""margin:-27px 0 0 906px;"">Friday</div>
 <div class=""days"" style=""margin:-27px 0 0 1086px;"">Saturday</div>

 <div class=""numbers"" style=""margin:-7px 0 0 722px;"">1</div> <div class=""numbers"" style=""margin:-73px 0 0 903px;"">2</div>
 <div class=""numbers"" style=""margin:-69px 0 0 1084px;"">3</div> <div class=""numbers"" style=""margin:109px 0 0 2px;"">4</div>
 <div class=""numbers"" style=""margin:-70px 0 0 181px;"">5</div><div class=""numbers"" style=""margin:-70px 0 0 362px;"">6</div>
 <div class=""numbers"" style=""margin:-70px 0 0 543px;"">7</div><div class=""numbers"" style=""margin:-70px 0 0 722px;"">8</div>
 <div class=""numbers"" style=""margin:-70px 0 0 900px;"">9</div><div class=""numbers"" style=""margin:-70px 0 0 1080px;"">10</div>
 <div class=""numbers"" style=""margin:110px 0 0 2px;"">11</div><div class=""numbers"" style=""margin:-70px 0 0 181px;"">12</div>
 <div class=""numbers"" style=""margin:-70px 0 0 362px;"">13</div><div class=""numbers"" style=""margin:-70px 0 0 543px;"">14</div>
 <div class=""numbers"" style=""margin:-70px 0 0 722px;"">15</div><div class=""numbers"" style=""margin:-70px 0 0 900px;"">16</div>
 <div class=""numbers"" style=""margin:-70px 0 0 1080px;"">17</div><div class=""numbers"" style=""margin:110px 0 0 2px;"">18</div>
 <div class=""numbers"" style=""margin:-70px 0 0 181px;"">19</div><div class=""numbers"" style=""margin:-70px 0 0 362px;"">20</div>
 <div class=""numbers"" style=""margin:-70px 0 0 543px;"">21</div><div class=""numbers"" style=""margin:-70px 0 0 722px;"">22</div>
 <div class=""numbers"" style=""margin:-70px 0 0 900px;"">23</div><div class=""numbers"" style=""margin:-70px 0 0 1080px;"">24</div>
 <div class=""numbers"" style=""margin:109px 0 0 2px;"">26</div><div class=""numbers"" style=""margin:-70px 0 0 181px;"">27</div>
 <div class=""numbers"" style=""margin:-70px 0 0 362px;"">28</div><div class=""numbers"" style=""margin:-70px 0 0 543px;"">29</div>
 <div class=""numbers"" style=""margin:-70px 0 0 722px;"">30</div>
 
 <div class=""row1""></div><div class=""row2""></div><div class=""row3""></div><div class=""row4""></div>
 <div class=""row5""></div><div class=""row6""></div><div class=""row7""></div><div class=""row8""></div>

 <div class=""bar1""></div><div class=""bar2""></div><div class=""bar3""></div>
 <div class=""bar4""></div><div class=""bar5""></div><div class=""bar6""></div>   </div>

 <div class=""box""></div><div class=""boxtext1""><h1>Appointments</h1></div>
<div class=""boxtext1"" style=""margin:-30px 0 0 11px;text-align:left;line-height:22px;"">
Appointment notes will go here. It automatically indented.
<br>More appointment notes, a br this line.
<br><br>Used br br on this line.
<br><br><br>Used br br br on this line.
<p>Used p in this line.
<p><br>Used p br in that order, result is same as br br
<br><br><br>Used br br br
"
Eyveh5XA,Untitled,theblackshibe,TypeScript,Friday 26th of May 2023 06:31:58 PM CDT,"import Maid from ""@rbxts/maid"";
import Roact from ""@rbxts/roact"";
import Hooks from ""@rbxts/roact-hooks"";
import { RunService } from ""@rbxts/services"";
import { Timer } from ""shared/class/Timer"";
import { viewProps } from ""../router/types"";
import { STYLE_TEXT_BODY } from ""../util/ui_style"";

const FpsCounter: Hooks.FC<viewProps> = ({ client_settings }, { useValue, useEffect }): Roact.Element => {
	let temp_avg_fps = useValue(0);
	let fps = Roact.createBinding(1 / temp_avg_fps.value);
	let avg_fps = Roact.createBinding(temp_avg_fps.value);
	let visible = Roact.createBinding(client_settings.user_reflection.client_fps_counter.value);

	useEffect(() => {
		let maid = new Maid();
		let fps_avg_check_time = tick() + 1;

		maid.GiveTask(
			RunService.RenderStepped.Connect((delta_time) => {
				fps[1](1 / delta_time);
				temp_avg_fps.value += 1;
				if (tick() > fps_avg_check_time) {
					fps_avg_check_time = tick() + 1;
					avg_fps[1](temp_avg_fps.value);
					temp_avg_fps.value = 0;
				}
			})
		);

		maid.GiveTask(
			client_settings.user_reflection.client_fps_counter.changed.Connect((value) => {
				visible[1](value);
			})
		);

		return () => maid.DoCleaning();
	});

	return (
		<frame
			AutomaticSize={""XY""}
			BackgroundTransparency={1}
			AnchorPoint={new Vector2(1, 0)}
			Position={new UDim2(1, -10, 0, 10)}
			Visible={visible[0]}
			ZIndex={1000}
		>
			<uilistlayout HorizontalAlignment={""Right""} />
			<textlabel
				{...STYLE_TEXT_BODY}
				BackgroundTransparency={1}
				AutomaticSize={""X""}
				TextXAlignment={""Left""}
				Size={new UDim2(0, 0, 0, 14)}
				TextColor3={new Color3(0.35, 1, 0.35)}
				Text={fps[0].map((value) => `fps: ${tostring(math.floor(value))}`)}
			/>
			<textlabel
				{...STYLE_TEXT_BODY}
				BackgroundTransparency={1}
				AutomaticSize={""X""}
				TextXAlignment={""Left""}
				Size={new UDim2(0, 0, 0, 14)}
				TextColor3={new Color3(0.35, 1, 0.35)}
				Text={avg_fps[0].map((value) => `avg. fps: ${tostring(math.floor(value))}`)}
			/>
		</frame>
	);
};

export = new Hooks(Roact)(FpsCounter);
"
2Dj2kt2m,Untitled,ElliotDG,Python,Friday 26th of May 2023 06:21:59 PM CDT,"from kivy.app import App
from kivy.lang import Builder
from kivy.uix.boxlayout import BoxLayout
import threading
import time

kv = """"""
RootBox:
    orientation: 'vertical'
    AnchorLayout:
        Button:
            size_hint: None, None
            size: 200, 48
            text: 'Start'
            on_release: root.threaded_task()
    AnchorLayout:
        Button:
            size_hint: None, None
            size: 200, 48
            text: 'Dummy'  # used to show things are still working
            on_release: print('Dummy Pressed')
    Label:
        id: label
        text: 'Status Message'
""""""


class RootBox(BoxLayout):
    def __init__(self, **kwargs):
        super().__init__(**kwargs)
        self.t = None # used to hold thread

    def threaded_task(self):
        if self.t:  # only allow 1 thread to be created
            return
        self.t = threading.Thread(target=self.counter_thread)
        self.t.start()

    def counter_thread(self):
        label = self.ids.label
        print('Starting Counter')
        label.text = 'Started Threaded Task'
        for i in range(1, 6):
            s = f'The count is {i}'
            print(s)
            label.text = s
            time.sleep(2) # to make the threaded task slow, note kivy still responds
        label.text = 'Threaded Task is complete'
        self.t = None
        print('Counter_thread completed')



class ThreadExampleApp(App):
    def build(self):
        return Builder.load_string(kv)



ThreadExampleApp().run()"
6rAchRB3,Ant Colony Algorithm,lior_sliprider,C,Friday 26th of May 2023 06:01:06 PM CDT,"#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#include <time.h>
#include <limits.h>

#define MAX_CITIES 4

// Define the problem
int distances[MAX_CITIES][MAX_CITIES] = {
  {0, 2, 5, 1},
  {2, 0, 4, 6},
  {5, 4, 0, 3},
  {1, 6, 3, 0}
};
int numAnts = 10;
double alpha = 1.0;
double beta = 5.0;
double evaporationRate = 0.5;
int numIterations = 10;

// Initialize the pheromone trail
double pheromoneTrail[MAX_CITIES][MAX_CITIES];

// Function to calculate the probability of selecting a path
double calculateProbability(int currentCity, int nextCity, int* visitedCities) {
  double pheromone = pow(pheromoneTrail[currentCity][nextCity], alpha);
  double distance = pow(1.0 / distances[currentCity][nextCity], beta);
  double probability = pheromone * distance;

  // Check if the next city has already been visited
  if (visitedCities[nextCity] == 1) {
    return 0;
  }

  return probability;
}

// Function to select the next city to visit
int selectNextCity(int currentCity, int* visitedCities) {
  double probabilities[MAX_CITIES];
  double totalProbability = 0.0;

  // Calculate the probability of selecting each path
  for (int i = 0; i < MAX_CITIES; i++) {
    probabilities[i] = calculateProbability(currentCity, i, visitedCities);
    totalProbability += probabilities[i];
  }

  // Select a random path based on the probability distribution
  double random = (double)rand() / RAND_MAX * totalProbability;
  double sum = 0.0;

  for (int i = 0; i < MAX_CITIES; i++) {
    sum += probabilities[i];
    if (random < sum) {
      return i;
    }
  }

  return -1;
}

// Function to update the pheromone trail
void updatePheromoneTrail(int** ants, int numAnts) {
  // Evaporate the pheromone trail
  for (int i = 0; i < MAX_CITIES; i++) {
    for (int j = 0; j < MAX_CITIES; j++) {
      pheromoneTrail[i][j] *= 1.0 - evaporationRate;
    }
  }

  // Update the pheromone trail based on the ants' paths
  for (int i = 0; i < numAnts; i++) {
    int* path = ants[i];
    int pathLength = 0;

    for (int j = 0; j < MAX_CITIES - 1; j++) {
      int currentCity = path[j];
      int nextCity = path[j + 1];

      pheromoneTrail[currentCity][nextCity] += 1.0 / distances[currentCity][nextCity];
      pheromoneTrail[nextCity][currentCity] += 1.0 / distances[currentCity][nextCity];

      pathLength += distances[currentCity][nextCity];
    }
  }
}

// Function to run the algorithm
void antColonyOptimization() {
  int* shortestPath = (int*)malloc((MAX_CITIES + 1) * sizeof(int)); // +1 for returning to the starting city
  int shortestPathLength = INT_MAX;

  // Repeat the process for a certain number of iterations
  for (int i = 0; i < numIterations; i++) {
    int* ants[numAnts];

    // Initialize the ants' paths and path lengths
    for (int j = 0; j < numAnts; j++) {
      int* path = (int*)malloc((MAX_CITIES + 1) * sizeof(int)); // +1 for returning to the starting city
      path[0] = 0; // start at city 0
      int visitedCities[MAX_CITIES] = {0};
      visitedCities[0] = 1; // mark the starting city as visited
      int pathLength = 0;

      // Visit each city
      for (int k = 0; k < MAX_CITIES - 1; k++) {
        int currentCity = path[k];
        int nextCity = selectNextCity(currentCity, visitedCities);
        path[k + 1] = nextCity;
        visitedCities[nextCity] = 1; // mark the next city as visited
        pathLength += distances[currentCity][nextCity];
      }

      // Return to the starting city
      int startingCity = path[0];
      int endingCity = path[MAX_CITIES - 1];
      path[MAX_CITIES] = startingCity;
      pathLength += distances[endingCity][startingCity];

      // Add the ant's path and path length to the array
      ants[j] = path;

      // Update the shortest path and path length
      if (pathLength < shortestPathLength) {
        shortestPathLength = pathLength;
        memcpy(shortestPath, path, (MAX_CITIES + 1) * sizeof(int));
      }
    }

    // Update the pheromone trail based on the ants' paths
    updatePheromoneTrail(ants, numAnts);

    // Free the memory allocated for ants' paths
    for (int j = 0; j < numAnts; j++) {
      free(ants[j]);
    }
  }

  // Print the results
  printf(""Shortest path length: %d\n"", shortestPathLength);
  printf(""Shortest path: "");
  for (int i = 0; i < MAX_CITIES + 1; i++) {
    printf(""%d "", shortestPath[i]);
  }
  printf(""\n"");

  // Free the memory allocated for the shortest path
  free(shortestPath);
}

int main() {
  // Seed the random number generator
  srand(time(NULL));

  // Initialize the pheromone trail
  for (int i = 0; i < MAX_CITIES; i++) {
    for (int j = 0; j < MAX_CITIES; j++) {
      pheromoneTrail[i][j] = 1.0;
    }
  }

  // Run the algorithm
  antColonyOptimization();

  return 0;
}
"
