id,title,username,language,date,content
Udx1Zjvd,Untitled,cheesecake441,Lua,Wednesday 24th of May 2023 01:00:50 PM CDT,"local args = {...}
local chatBox = peripheral.wrap(""back"");
local message = args[1]
local name = args[2]

if not name then
	name = ""Server""
end

chatBox.sendMessage(message, name);"
j3KPYYKG,run.sh,Ligthert,Bash,Wednesday 24th of May 2023 12:58:21 PM CDT,"#!/bin/sh

export MCVERSION=`curl -s https://launchermeta.mojang.com/mc/game/version_manifest.json | jq '.latest.release' | sed -e 's/""//g'`
export MCVERURL=https://mcversions.net/download/$MCVERSION
export MCSRVRLNK=`curl -s $MCVERURL | grep -o -E https://piston-data.mojang.com/v1/objects/\(.*?\)/server.jar`

wget $MCSRVRLNK -O server.jar

/usr/bin/java -Xmx2048M -Xms2048M -jar server.jar nogui"
Qd4aeNyd,dop9,DenCoder618,Java,Wednesday 24th of May 2023 12:51:21 PM CDT,"import java.util.LinkedList;
import java.util.Scanner;

public class test {
    public static void main(String[] args) {
        double timeScale = 400;
        Scanner sc = new Scanner(System.in);
        System.out.print(""Введите N (количество компов) и M (количество людей): "");
        int N = sc.nextInt();
        int M = sc.nextInt();
        sc.close();
        System.out.println(""Время в программе будет ускорено в "" + timeScale + "" раз"");
        System.out.println();

        InternetCafeClass ICC = new InternetCafeClass(N, M, timeScale);
        long startTime = System.currentTimeMillis();
        ICC.start();
        long endTime = System.currentTimeMillis();
        long delta = endTime - startTime;
        System.out.println();
        System.out.println(""Время работы программы: "" + delta / 1000 + "" секунд"");
    }
}

class Time {
    public double timeScale;
    public long time;

    Time(double timeScale) {
        this.timeScale = timeScale;
        time = (long) (900000 + 6300000 * Math.random());
    }

    public void sleep() {
        try {
            Thread.sleep((long) (time / timeScale));
        } catch (InterruptedException e) {
            throw new RuntimeException(e);
        }
    }

    public String toString() {
        double t = time / 1000;
        if (t >= 3600)
            return String.format(""%dh %dm %ds"", (int) (t / 3600), (int) (t % 3600) / 60, (int) t % 60);
        else if (t >= 60)
            return String.format(""%dm %ds"", (int) (t / 60), (int) t % 60);
        else
            return String.format(""%ds"", (int) t % 60);
    }
}

class Pair {
    public int num;
    public Time time;

    Pair(int num, double timeScale) {
        this.num = num;
        this.time = new Time(timeScale);
    }
}

class InternetCafeClass {
    Thread[] computers;
    LinkedList<Pair> touristQueue;
    int threadsCount;

    InternetCafeClass(int threadsCount, int touristsCount, double timeScale) {
        this.threadsCount = threadsCount;
        computers = new Thread[threadsCount];
        for (int i = 0; i < threadsCount; i++) {
            computers[i] = new Thread();
        }
        touristQueue = new LinkedList<Pair>();
        for (int i = 0; i < touristsCount; i++) {
            touristQueue.add(new Pair(i, timeScale));
        }
    }

    public void start() {
        while (!touristQueue.isEmpty()) {
            for (int i = 0; i < threadsCount; i++) {
                if (!computers[i].isAlive()) {
                    computers[i] = new PC(touristQueue.poll());
                    computers[i].start();
                }
            }
        }
        for (int i = 0; i < threadsCount; i++) {
            try {
                computers[i].join();
            } catch (InterruptedException e) {
                throw new RuntimeException(e);
            }
        }
    }
}

class PC extends Thread {
    Time time;
    int tourist;

    public PC(Pair values) {
        this.time = values.time;
        this.tourist = values.num;
    }

    @Override
    public void run() {
        System.out.println(""-> Tourist "" + tourist + "" started job for "" + time);
        time.sleep();
        System.out.println(""=> Tourist "" + tourist + "" ended job"");
    }
}
"
w7WHsWpA,roblox chat logger to webhook,ahmad1218,Lua,Wednesday 24th of May 2023 12:20:41 PM CDT,"local http_request = http_request or request or HttpPost or syn.request

-- Function to send a message to the Discord webhook
local function sendToWebhook(message)
    local data = {
        content = message
    }

    local headers = {
        [""Content-Type""] = ""application/json""
    }

    local webhookUrl = getgenv().webhookUrl
    if not webhookUrl then
        print(""webhookUrl is not set."")
        return
    end

    local success, response = pcall(function()
        return http_request({
            Url = webhookUrl,
            Method = ""POST"",
            Headers = headers,
            Body = game:GetService(""HttpService""):JSONEncode(data)
        })
    end)

    if success then
        print(""Message sent to Discord webhook!"")
    else
        print(""Failed to send message to Discord webhook. Error: "" .. response)
    end
end

-- Event handler for chat messages
local function onPlayerChatted(message)
    -- Send the message to the Discord webhook
    sendToWebhook(message)
end

-- Listen for the Chatted event of the local player
game.Players.LocalPlayer.Chatted:Connect(onPlayerChatted)"
Apx9gtc7,Paint Job Estimator v2,grodek118,Java,Wednesday 24th of May 2023 12:17:28 PM CDT,"import java.util.Scanner;

public class Main {

    final static double LABOR_PRICE_PER_HOUR = 18.00;

    public static void main(String[] args) {

        Scanner input = new Scanner(System.in);

        System.out.println(""Wprowadź liczbe pokojów: "");
        int rooms = input.nextInt();
        System.out.println(""Podaj cenę farby"");
        double paintPrice = input.nextDouble();
        System.out.println(""Podaj powierzchnię do pomalowania"");
        double surface = 0;

        for (int i = 0; i < rooms; i++)
        {
            System.out.println(""Powierzchnia pokoju "" + (i + 1));
            surface += input.nextDouble();
        }

        System.out.printf(""Potrzebne litry: %.2fl\n"", getPaintRequired(surface));
        System.out.printf(""Potrzebne godziny pracy: %.2fh\n"", getLaborHoursRequired(surface));
        System.out.printf(""Koszt farby %.2fzł\n"", getPaintCost(paintPrice, surface));
        System.out.printf(""Koszt robocizny: %.2fzł\n"", getLaborCost(surface));
        System.out.printf(""Lączny koszt malowania: %.2fzł\n"", getTotalCost(surface, paintPrice));
    }

    public static double getPaintRequired(double surface)
    {
        return surface / 10 * 1.5;
    }

    public static double getLaborHoursRequired(double surface)
    {
        return surface / 10 * 8;
    }

    public static double getPaintCost(double paintPrice, double surface)
    {
        return paintPrice * getPaintRequired(surface);
    }

    public static double getLaborCost(double surface)
    {
        return LABOR_PRICE_PER_HOUR * getLaborHoursRequired(surface);
    }

    public static double getTotalCost(double surface, double paintPrice)
    {
        return getLaborCost(surface) + getPaintCost(paintPrice, surface);
    }
}
"
JigwNLq0,TreasureHunt,CR7CR7,Java,Wednesday 24th of May 2023 11:39:55 AM CDT,"import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class TreasureHunt {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String[] initialLoot = scanner.nextLine().split(""\\|"");
        List<String> treasureChest = new ArrayList<>();
        for (String item : initialLoot) {
            treasureChest.add(item.trim());
        }

        String command = scanner.nextLine();
        while (!command.equals(""Yohoho!"")) {
            String[] tokens = command.split(""\\s+"");
            String action = tokens[0];

            switch (action) {
                case ""Loot"":
                    for (int i = 1; i < tokens.length; i++) {
                        String item = tokens[i];
                        if (!treasureChest.contains(item)) {
                            treasureChest.add(0, item);
                        }
                    }
                    break;

                case ""Drop"":
                    int index = Integer.parseInt(tokens[1]);
                    if (index >= 0 && index < treasureChest.size()) {
                        String droppedItem = treasureChest.remove(index);
                        treasureChest.add(droppedItem);
                    }
                    break;

                case ""Steal"":
                    int count = Integer.parseInt(tokens[1]);
                    List<String> stolenItems = new ArrayList<>();
                    int lastIndex = treasureChest.size() - 1;
                    for (int i = 0; i < count; i++) {
                        if (lastIndex >= 0) {
                            stolenItems.add(treasureChest.remove(lastIndex));
                            lastIndex--;
                        }
                    }
                    for (int i = stolenItems.size() - 1; i >= 0; i--) {
                        System.out.print(stolenItems.get(i));
                        if (i > 0) {
                            System.out.print("", "");
                        }
                    }
                    System.out.println();
                    break;
            }

            command = scanner.nextLine();
        }

        if (treasureChest.isEmpty()) {
            System.out.println(""Failed treasure hunt."");
        } else {
            double totalLength = 0;
            for (String item : treasureChest) {
                totalLength += item.length();
            }
            double averageGain = totalLength / treasureChest.size();
            System.out.printf(""Average treasure gain: %.2f pirate credits.%n"", averageGain);
        }
    }
}
"
19FVDcca,Price Data Widget,drkskwlkr,PHP,Wednesday 24th of May 2023 11:31:20 AM CDT,"<?php

$output  = '<!-- Begin product review widget code -->' ;
$output .= '<div id=""ndrsl-prod-646c3bda1796af356c6d134b"" class=""ndrsl-widget ndrsl-product-widget""' ;

// If currency sign is prepended, switch places of $price & $currency
$price_arr      = explode(' ', $product['price']) ;
$price          = $price_arr[0] ;
$currency       = $price_arr[1] ;
// If you want to use currency ISO code instead of currency sign, simply write $currency = 'USD' or whatever instead.
 
$output .= ' data-product-id=""'          . $product_id . '""' ;
$output .= ' data-product-name=""'        . $product['name'] . '""' ;
$output .= ' data-product-url=""'         . $href . '""' ;
$output .= ' data-product-image-url=""'   . $product['thumb'] . '""' ;
$output .= ' data-product-description=""' . $product_detail['description'] . '""' ;
$output .= ' data-product-price=""'       . floatval($price) . '""' ;
$output .= ' data-product-currency=""'    . $currency . '""' ;
$output .= '></div>' ;
$output  = '<!-- End product review widget code -->' ;

echo $output ;
?>"
eCPGUt36,pdr005 no bext man box,shawn_shipoffers,Ruby,Wednesday 24th of May 2023 11:30:50 AM CDT," config post_process: lambda  {|the_order,the_row|

    cntr = 0
    box_pos = nil
    the_order[:items].each do |the_item|
      cntr = cntr + 1
      if the_item[:sku] == 'Best-Man-Box'
        if the_order[:order_number] !~ /\-B[0-9]+$/
          box_pos = cntr
        end
      end
    end

    if !box_pos.nil?
      the_order[:items][box_pos-1][:sku] = the_order[:items][box_pos-1][:sku] + '::SUBSTART'
      if the_order[:items].length == 1 # we only have 1 sku
        the_order[:merge_key] = nil
        the_order[:status] = 'cancelled'
      end
    end

    the_order

  }"
EEUf54Vs,Untitled,Repciu,Python,Wednesday 24th of May 2023 11:18:57 AM CDT,"import pygame
pygame.init()

screen_width = 800
screen_height = 600

screen_surface = pygame.display.set_mode((screen_width, screen_height))
pygame.display.set_caption('Moja pierwsza gra')
clock = pygame.time.Clock()

def load_image(img_path: str, position):
    image = pygame.image.load(img_path)
    surface = image.convert()
 
    transparent_color = (0, 0, 0)
    surface.set_colorkey(transparent_color)
    rect = surface.get_rect(center=position)
 
    return [image, surface, rect]

def print_image(img_list) -> None:
    # [image, surface, rect]
    image, surface, rect = img_list
    screen_surface.blit(surface, rect)
    pass

def set_position_image(img_list, position):
    image, surface, rect = img_list
    rect = surface.get_rect(center=position)
    return [image, surface, rect]

def calculate_player_movement(keys):
    speed = 10
    delta_x = 0
    delta_y = 0

    if keys[pygame.K_w]:
        delta_y -= speed
    if keys[pygame.K_s]:
        delta_y += speed
    if keys[pygame.K_d]:
        delta_x += speed
    if keys[pygame.K_a]:
        delta_x -= speed
    return [delta_x, delta_y]

player_pos = [screen_width // 2, screen_height // 2]
player = load_image('player.png', player_pos)
background_color = [9, 42, 121]
game_status = True

while game_status:
    events = pygame.event.get()
    
    for event in events:
        print(event)
        if event.type == pygame.QUIT:
            game_status = False
    pressed_keys = pygame.key.get_pressed()
    delta_x, delta_y = calculate_player_movement(pressed_keys)
    player_pos[0] += delta_x
    player_pos[1] += delta_y
    player = set_position_image(player, player_pos)
    print_image(player)
    pygame.display.update()
    clock.tick(60)
pygame.quit()
quit()
"
EsRv6ArU,test22,cleverus,JavaScript,Wednesday 24th of May 2023 11:11:01 AM CDT,"/* This is your custom Javascript */
jQuery(document).ready(function ($) {
    $(""#header-aside .signin-button"").attr(""href"", '//earn.community/login');
    setLoginLink();

    $("".kv-login-link"").click(function (event) {
        if ( $(""body"").hasClass(""logged-in"") ) {
      $('.bb-mobile-header-wrapper .header-aside .sub-menu').toggleClass('active');      
        }
        else {
            window.location.href = ""https://earn.community/login"";
        }
    });

	$('.user-wrap .sub-menu').clone(true).insertAfter('.bb-mobile-header-wrapper .kv-login-link');  

	var cntCredits;

	if($('body').hasClass('logged-in')){
		if ($('.gamipress-user-points-amount').length > 0) {
			cntCredits = $(""span.gamipress-user-points-amount"").html();
			localStorage.setItem('credits', cntCredits);			
		} else {
			cntCredits = localStorage.getItem('credits');			
		}		

		$('<a href=""http://earn.community/credits"" class=""kv-menu-credits""> <div class=""kv-menu-credits__ico""> <img src=""/wp-content/uploads/2022/11/Untitled-design-2022-11-07T151629.047.png"" alt=""""> </div> <div class=""kv-menu-credits__counter"">' + cntCredits + '</div></a').insertBefore($('.header-aside .header-aside-inner'));
		 
		$('<a href=""http://earn.community/credits"" class=""kv-menu-credits""> <div class=""kv-menu-credits__ico""> <img src=""/wp-content/uploads/2022/11/Untitled-design-2022-11-07T151629.047.png"" alt=""""> </div> <div class=""kv-menu-credits__counter"">' + cntCredits + '</div></a>').insertBefore($('.header-aside .kv-login-link'));	
	}
	
	const myTimeout = setTimeout(kvReputation, 4000);
	
	function kvReputation(){
		$('.gamipress-buddypress-reputation').click(function(){
			window.location.href = ""https://earn.community/members/tokenmage/"";
		})		
		
		$('.gamipress-user-points-credit').click(function(){
			window.location.href = ""https://earn.community/credits/""
		})

		$('.gamipress-user-points-reputation').click(function(){
			window.location.href = ""https://earn.community/reputation/""
		})

		$('.gamipress-user-points-usd').click(function(){
			window.location.href = ""https://earn.community/usd/""
		})			
	}	
});


function setLoginLink() {
    jQuery("".bb-mobile-header .header-search-link"").addClass(""kv-login-link"");
    jQuery("".bb-mobile-header .kv-login-link"").removeClass(""header-search-link"");
    jQuery("".bb-mobile-header .kv-login-link"").attr(""data-balloon"", """");
    jQuery("".bb-mobile-header .kv-login-link .bb-icon-l"").removeClass(""bb-icon-search"");
    jQuery("".bb-mobile-header .kv-login-link .bb-icon-l"").addClass(""bb-icon-key"");
}
"
p4FVuVpY,tokenmage,cleverus,JavaScript,Wednesday 24th of May 2023 11:03:51 AM CDT,"/* This is your custom Javascript */
jQuery(document).ready(function ($) {
    $(""#header-aside .signin-button"").attr(""href"", '//earn.community/login');
    setLoginLink();

    $("".kv-login-link"").click(function (event) {
        if ( $(""body"").hasClass(""logged-in"") ) {
      $('.bb-mobile-header-wrapper .header-aside .sub-menu').toggleClass('active');      
        }
        else {
            window.location.href = ""https://earn.community/login"";
        }
    });

	$('.user-wrap .sub-menu').clone(true).insertAfter('.bb-mobile-header-wrapper .kv-login-link');  

	var cntCredits;

	if($('body').hasClass('logged-in')){
		if ($('.gamipress-user-points-amount').length > 0) {
			cntCredits = $(""span.gamipress-user-points-amount"").html();
			localStorage.setItem('credits', cntCredits);			
		} else {
			cntCredits = localStorage.getItem('credits');			
		}		

		$('<a href=""http://earn.community/credits"" class=""kv-menu-credits""> <div class=""kv-menu-credits__ico""> <img src=""/wp-content/uploads/2022/11/Untitled-design-2022-11-07T151629.047.png"" alt=""""> </div> <div class=""kv-menu-credits__counter"">' + cntCredits + '</div></a').insertBefore($('.header-aside .header-aside-inner'));
		 
		$('<a href=""http://earn.community/credits"" class=""kv-menu-credits""> <div class=""kv-menu-credits__ico""> <img src=""/wp-content/uploads/2022/11/Untitled-design-2022-11-07T151629.047.png"" alt=""""> </div> <div class=""kv-menu-credits__counter"">' + cntCredits + '</div></a>').insertBefore($('.header-aside .kv-login-link'));	
	}
	
	const myTimeout = setTimeout(kvReputation, 4000);
	
	function kvReputation(){
		$('.gamipress-buddypress-reputation').click(function(){
			window.location.href = ""https://earn.community/members/tokenmage/"";
		})		
		
		$('.gamipress-points .gamipress-user-points-credit').click(function(){
			window.location.href = ""https://earn.community/credits/""
		})

		$('.gamipress-points .gamipress-user-points-reputation').click(function(){
			window.location.href = ""https://earn.community/reputation/""
		})

		$('.gamipress-points .gamipress-user-points-usd').click(function(){
			window.location.href = ""https://earn.community/usd/""
		})			
	}	
});


function setLoginLink() {
    jQuery("".bb-mobile-header .header-search-link"").addClass(""kv-login-link"");
    jQuery("".bb-mobile-header .kv-login-link"").removeClass(""header-search-link"");
    jQuery("".bb-mobile-header .kv-login-link"").attr(""data-balloon"", """");
    jQuery("".bb-mobile-header .kv-login-link .bb-icon-l"").removeClass(""bb-icon-search"");
    jQuery("".bb-mobile-header .kv-login-link .bb-icon-l"").addClass(""bb-icon-key"");
}
"
5SkYUUQV,Columns 5/24/23,marshallsmyth,HTML 5,Wednesday 24th of May 2023 10:59:12 AM CDT," <!DOCTYPE html>   <html>   <head>   <meta name=""viewport"" content=""width=device-width, initial-scale=1""> 
  <title>Prettiest Page Numbers</title> 
  <style>  @import url(https://fonts.googleapis.com/css?family=Montez|Macondo);  ::-webkit-scrollbar { width:16px;height:16px; }
  ::-webkit-scrollbar-track {background:#006;box-shadow:0 0 33px 8px #003; }  
  ::-webkit-scrollbar-thumb { border-radius:22px;background:#600;box-shadow:0 0 11px 8px #300; } 
  body { background:#100; }
  
   .maintext { text-align:center;font-family:macondo;font-size:22px;color:#f0a;line-height:11px; }
   .text { text-align:left;font-family:macondo;font-size:30px;color:lavender;line-height:5px;margin-top:-7px;padding:11px 0px 1px 139px; } 
 
    .table { width:100%;font-family:montez;text-align:justify;font-size:30px;line-height:35px;
    color:#74d;padding:11px 22px 0px 22px;margin-top:0px; } 
    .td { width:111px;color:#f0b; }

   </style>"
Qe0MnCb2,BOT FEED REDDIT,Alvarillo_00,Python,Wednesday 24th of May 2023 10:58:42 AM CDT,"import discord
from discord.ext import commands, tasks
import praw
import asyncio
import time

# Configuración de Reddit
reddit = praw.Reddit(
    client_id='client_id',
    client_secret='client_secret',
    user_agent='user_agent'
    )

# Configuración de Discord
intents = discord.Intents.default()
intents.typing = False
intents.presences = False
intents.message_content = True
bot = commands.Bot(command_prefix='!', intents=intents)

# Configuración del subreddit
SUBREDDIT_NAME = """"

# Variable para almacenar el último tiempo de publicación
last_post_time = 0

@bot.event
async def on_ready():
    print(f'Bot conectado como {bot.user.name}')
    reddit_task.start()

@tasks.loop(minutes=30)
async def reddit_task():
    await bot.wait_until_ready()
    channel = bot.get_channel(ID_cANAL_TEXTO)
    subreddit = reddit.subreddit(SUBREDDIT_NAME)
    posts = subreddit.new(limit=10)

    for post in posts:
        if post.created_utc > last_post_time:
            message = f'Título: {post.title}\nURL: {post.url}'
            await channel.send(message)

    last_post_time = time.time()

@bot.command()
async def reddit(ctx, subreddit_name: str):
    global SUBREDDIT_NAME
    SUBREDDIT_NAME = subreddit_name
    await ctx.send(f'Subreddit establecido: {subreddit_name}')

@bot.command()
async def stop(ctx):
    await ctx.send('Deteniendo el bot...')
    await bot.logout()

bot.run('TOKEN_DISCORD')"
n1JiSftC,Untitled,tigr105,C#,Wednesday 24th of May 2023 10:39:12 AM CDT,"using Microsoft.AspNetCore.Builder;
using Microsoft.AspNetCore.Http;
using Newtonsoft.Json;
using Newtonsoft.Json.Serialization;
using NLog;
using System;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using USAVC.Core.Entities;
using USAVC.Core.Entities.Exceptions;

namespace USAVC.Core.Common
{
    public class JsonExceptionMiddleware
    {
        private readonly RequestDelegate _next;
        private readonly JsonSerializerSettings _jsonSettings;
        private readonly ILogger _logger;
        private readonly bool _use500ForServerError;

        public JsonExceptionMiddleware(RequestDelegate next, ILogger logger, bool use500ForServerError)
        {
            _use500ForServerError = use500ForServerError;
            _logger = logger;
            _next = next ?? throw new ArgumentNullException(nameof(next));

            _jsonSettings = new JsonSerializerSettings()
            {
                ReferenceLoopHandling = ReferenceLoopHandling.Ignore,
                Formatting = Formatting.Indented,
                ContractResolver = new CamelCasePropertyNamesContractResolver(),
                NullValueHandling = NullValueHandling.Ignore
            };
        }

        public async Task Invoke(HttpContext context)
        {
            var resuestData = await FormatRequest(context.Request);
            try
            {
                var originalBodyStream = context.Response.Body;
                await _next(context);
            }
            catch (Exception ex)
            {
                _logger.Error(ex, $""Unhandled error for request: {resuestData}"");

                if (context.Request.Headers[""accept""].Any(x => x.Contains(""application/json""))
                    || context.Request.Headers[""referer""].FirstOrDefault()?.Contains(""swagger"") == true)
                {
                    context.Response.StatusCode = _use500ForServerError ? 500 : 200;
                    context.Response.ContentType = ""application/json"";
                    context.Response.Headers.Add(""exception"", ""messageException"");

                    if (ex is ResponseException)
                    {
                        var resEx = (ResponseException)ex;
                        int errorCode = resEx?.ErrorCode ?? ResponseErrorCodes.DefaultErrorCode;

                        var sb = new StringBuilder(270);
                        CreateErrorMessage(sb, ex);
                        var json = JsonConvert.SerializeObject(RestResponse<object>.Fail(500, errorCode, sb.ToString()), _jsonSettings);
                        await context.Response.WriteAsync(json);
                    }
                    else
                    {
                        var sb = new StringBuilder(270);
                        CreateErrorMessage(sb, ex);
                        var json = JsonConvert.SerializeObject(RestResponse<object>.Fail(500, sb.ToString()), _jsonSettings);
                        await context.Response.WriteAsync(json);
                    }
                }
                else
                {
                    throw;
                }
            }
        }

        public static void CreateErrorMessage(StringBuilder sb, Exception ex, int depth = 0)
        {
            var aggrEx = ex as AggregateException;

            void appendExceptionMessage(Exception ex2)
            {
                if (aggrEx != null)
                {
                    sb.Append(""Aggregate ex:"");
                }
                else
                {
                    sb.Append(ex2.GetType().Name);
                    sb.Append("": "");
                    sb.Append(ex2.Message);
                }
            }

            if (depth == 0)
                appendExceptionMessage(ex);
            else
            {
                sb.AppendLine();
                for (var i = 0; i < depth; i++)
                    sb.Append(""\t"");
                appendExceptionMessage(ex);
            }

            if (aggrEx != null)
            {
                foreach (Exception innerEx in aggrEx.InnerExceptions)
                {
                    CreateErrorMessage(sb, innerEx, depth + 1);
                }
            }
            else if (ex.InnerException != null)
            {
                CreateErrorMessage(sb, ex.InnerException, depth + 1);
            }
        }

        private async Task<string> FormatRequest(HttpRequest request)
        {
            //This line allows us to set the reader for the request back at the beginning of its stream.
            request.EnableBuffering();

            //We now need to read the request stream.  First, we create a new byte[] with the same length as the request stream...
            var buffer = new byte[Convert.ToInt32(request.ContentLength)];

            await request.Body.ReadAsync(buffer, 0, buffer.Length);

            //We convert the byte[] into a string using UTF8 encoding...
            var bodyAsText = Encoding.UTF8.GetString(buffer);

            //..and finally, assign the read body back to the request body, which is allowed because of EnableRewind()
            request.Body.Seek(0, SeekOrigin.Begin);

            return $""{request.Method} {request.Path} {request.QueryString} {bodyAsText}"";
        }
    }

    public static class JsonExceptionMiddlewareExtensions
    {
        public static IApplicationBuilder UseJsonExceptionMiddleware(this IApplicationBuilder builder, ILogger logger, bool use500ForServerError = false)
        {
            return builder.UseMiddleware<JsonExceptionMiddleware>(logger, use500ForServerError);
        }
    }
}
"
tZAvic7e,Care Package Manager.json,antisocialian,JSON,Wednesday 24th of May 2023 10:11:34 AM CDT,"{
  ""version"": 14,
  ""biggerRoster"": true,
  ""rosterDupes"": 1,
  ""rosterPackages"": 6,
  ""attributeBonusChance"": 2,
  ""minNumberofInterests"": 3,
  ""maxNumberofInterests"": 3,
  ""removeStarterRestriction"": true,
  ""allowReshuffle"": true,
  ""rosterIsOrdered"": true,
  ""multiplier"": 1.0,
  ""allowOnlyDiscoveredElements"": false,
  ""loadPackages"": true,
  ""CarePackages"": [
{
""ID"": ""katairite"",
""amount"": 10000
},
{
""ID"": ""algae"",
""amount"": 10000
},
{
""ID"": ""aluminum"",
""amount"": 10000
},
{
""ID"": ""moltenaluminum"",
""amount"": 10000
},
{
""ID"": ""aluminumgas"",
""amount"": 10000
},
{
""ID"": ""aluminumore"",
""amount"": 10000
},
{
""ID"": ""bitumen"",
""amount"": 10000
},
{
""ID"": ""bleachstone"",
""amount"": 10000
},
{
""ID"": ""brine"",
""amount"": 10000
},
{
""ID"": ""brineice"",
""amount"": 10000
},
{
""ID"": ""moltencarbon"",
""amount"": 10000
},
{
""ID"": ""carbongas"",
""amount"": 10000
},
{
""ID"": ""solidcarbondioxide"",
""amount"": 10000
},
{
""ID"": ""liquidcarbondioxide"",
""amount"": 10000
},
{
""ID"": ""carbondioxide"",
""amount"": 10000
},
{
""ID"": ""ceramic"",
""amount"": 10000
},
{
""ID"": ""solidchlorine"",
""amount"": 10000
},
{
""ID"": ""chlorine"",
""amount"": 10000
},
{
""ID"": ""chlorinegas"",
""amount"": 10000
},
{
""ID"": ""clay"",
""amount"": 10000
},
{
""ID"": ""carbon"",
""amount"": 10000
},
{
""ID"": ""cobalt"",
""amount"": 10000
},
{
""ID"": ""moltencobalt"",
""amount"": 10000
},
{
""ID"": ""cobaltgas"",
""amount"": 10000
},
{
""ID"": ""cobaltite"",
""amount"": 10000
},
{
""ID"": ""copper"",
""amount"": 10000
},
{
""ID"": ""moltencopper"",
""amount"": 10000
},
{
""ID"": ""coppergas"",
""amount"": 10000
},
{
""ID"": ""cuprite"",
""amount"": 10000
},
{
""ID"": ""corium"",
""amount"": 10000
},
{
""ID"": ""solidcrudeoil"",
""amount"": 10000
},
{
""ID"": ""crudeoil"",
""amount"": 10000
},
{
""ID"": ""crushedice"",
""amount"": 10000
},
{
""ID"": ""crushedrock"",
""amount"": 10000
},
{
""ID"": ""depleteduranium"",
""amount"": 10000
},
{
""ID"": ""diamond"",
""amount"": 10000
},
{
""ID"": ""dirt"",
""amount"": 10000
},
{
""ID"": ""electrum"",
""amount"": 10000
},
{
""ID"": ""enricheduranium"",
""amount"": 10000
},
{
""ID"": ""solidethanol"",
""amount"": 10000
},
{
""ID"": ""ethanol"",
""amount"": 10000
},
{
""ID"": ""ethanolgas"",
""amount"": 10000
},
{
""ID"": ""fertilizer"",
""amount"": 10000
},
{
""ID"": ""fossil"",
""amount"": 10000
},
{
""ID"": ""fullerene"",
""amount"": 10000
},
{
""ID"": ""creature"",
""amount"": 10000
},
{
""ID"": ""glass"",
""amount"": 10000
},
{
""ID"": ""moltenglass"",
""amount"": 10000
},
{
""ID"": ""gold"",
""amount"": 10000
},
{
""ID"": ""moltengold"",
""amount"": 10000
},
{
""ID"": ""goldgas"",
""amount"": 10000
},
{
""ID"": ""goldamalgam"",
""amount"": 10000
},
{
""ID"": ""granite"",
""amount"": 10000
},
{
""ID"": ""graphite"",
""amount"": 10000
},
{
""ID"": ""solidhydrogen"",
""amount"": 10000
},
{
""ID"": ""liquidhydrogen"",
""amount"": 10000
},
{
""ID"": ""hydrogen"",
""amount"": 10000
},
{
""ID"": ""ice"",
""amount"": 10000
},
{
""ID"": ""igneousrock"",
""amount"": 10000
},
{
""ID"": ""superinsulator"",
""amount"": 10000
},
{
""ID"": ""iron"",
""amount"": 10000
},
{
""ID"": ""molteniron"",
""amount"": 10000
},
{
""ID"": ""irongas"",
""amount"": 10000
},
{
""ID"": ""ironore"",
""amount"": 10000
},
{
""ID"": ""isoresin"",
""amount"": 10000
},
{
""ID"": ""lead"",
""amount"": 10000
},
{
""ID"": ""moltenlead"",
""amount"": 10000
},
{
""ID"": ""leadgas"",
""amount"": 10000
},
{
""ID"": ""lime"",
""amount"": 10000
},
{
""ID"": ""liquidsulfur"",
""amount"": 10000
},
{
""ID"": ""maficrock"",
""amount"": 10000
},
{
""ID"": ""magma"",
""amount"": 10000
},
{
""ID"": ""solidmethane"",
""amount"": 10000
},
{
""ID"": ""liquidmethane"",
""amount"": 10000
},
{
""ID"": ""mud"",
""amount"": 10000
},
{
""ID"": ""solidnaphtha"",
""amount"": 10000
},
{
""ID"": ""naphtha"",
""amount"": 10000
},
{
""ID"": ""methane"",
""amount"": 10000
},
{
""ID"": ""unobtanium"",
""amount"": 10000
},
{
""ID"": ""niobium"",
""amount"": 10000
},
{
""ID"": ""moltenniobium"",
""amount"": 10000
},
{
""ID"": ""niobiumgas"",
""amount"": 10000
},
{
""ID"": ""fallout"",
""amount"": 10000
},
{
""ID"": ""nuclearwaste"",
""amount"": 10000
},
{
""ID"": ""obsidian"",
""amount"": 10000
},
{
""ID"": ""solidoxygen"",
""amount"": 10000
},
{
""ID"": ""liquidoxygen"",
""amount"": 10000
},
{
""ID"": ""oxygen"",
""amount"": 10000
},
{
""ID"": ""oxyrock"",
""amount"": 10000
},
{
""ID"": ""solidpetroleum"",
""amount"": 10000
},
{
""ID"": ""petroleum"",
""amount"": 10000
},
{
""ID"": ""phosphorite"",
""amount"": 10000
},
{
""ID"": ""phosphorus"",
""amount"": 10000
},
{
""ID"": ""liquidphosphorus"",
""amount"": 10000
},
{
""ID"": ""phosphorusgas"",
""amount"": 10000
},
{
""ID"": ""polypropylene"",
""amount"": 10000
},
{
""ID"": ""toxicsand"",
""amount"": 10000
},
{
""ID"": ""dirtyice"",
""amount"": 10000
},
{
""ID"": ""toxicmud"",
""amount"": 10000
},
{
""ID"": ""contaminatedoxygen"",
""amount"": 10000
},
{
""ID"": ""dirtywater"",
""amount"": 10000
},
{
""ID"": ""solidpropane"",
""amount"": 10000
},
{
""ID"": ""liquidpropane"",
""amount"": 10000
},
{
""ID"": ""propane"",
""amount"": 10000
},
{
""ID"": ""foolsgold"",
""amount"": 10000
},
{
""ID"": ""radium"",
""amount"": 10000
},
{
""ID"": ""refinedcarbon"",
""amount"": 10000
},
{
""ID"": ""regolith"",
""amount"": 10000
},
{
""ID"": ""solidresin"",
""amount"": 10000
},
{
""ID"": ""resin"",
""amount"": 10000
},
{
""ID"": ""rockgas"",
""amount"": 10000
},
{
""ID"": ""rust"",
""amount"": 10000
},
{
""ID"": ""salt"",
""amount"": 10000
},
{
""ID"": ""moltensalt"",
""amount"": 10000
},
{
""ID"": ""saltgas"",
""amount"": 10000
},
{
""ID"": ""saltwater"",
""amount"": 10000
},
{
""ID"": ""sand"",
""amount"": 10000
},
{
""ID"": ""sandstone"",
""amount"": 10000
},
{
""ID"": ""sedimentaryrock"",
""amount"": 10000
},
{
""ID"": ""slimemold"",
""amount"": 10000
},
{
""ID"": ""snow"",
""amount"": 10000
},
{
""ID"": ""solidnuclearwaste"",
""amount"": 10000
},
{
""ID"": ""sourgas"",
""amount"": 10000
},
{
""ID"": ""steam"",
""amount"": 10000
},
{
""ID"": ""steel"",
""amount"": 10000
},
{
""ID"": ""moltensteel"",
""amount"": 10000
},
{
""ID"": ""steelgas"",
""amount"": 10000
},
{
""ID"": ""sucrose"",
""amount"": 10000
},
{
""ID"": ""moltensucrose"",
""amount"": 10000
},
{
""ID"": ""sulfur"",
""amount"": 10000
},
{
""ID"": ""sulfurgas"",
""amount"": 10000
},
{
""ID"": ""solidsupercoolant"",
""amount"": 10000
},
{
""ID"": ""supercoolant"",
""amount"": 10000
},
{
""ID"": ""supercoolantgas"",
""amount"": 10000
},
{
""ID"": ""tempconductorsolid"",
""amount"": 10000
},
{
""ID"": ""tungsten"",
""amount"": 10000
},
{
""ID"": ""moltentungsten"",
""amount"": 10000
},
{
""ID"": ""tungstengas"",
""amount"": 10000
},
{
""ID"": ""moltenuranium"",
""amount"": 10000
},
{
""ID"": ""uraniumore"",
""amount"": 10000
},
{
""ID"": ""solidviscogel"",
""amount"": 10000
},
{
""ID"": ""viscogel"",
""amount"": 10000
},
{
""ID"": ""water"",
""amount"": 10000
},
{
""ID"": ""lightbugblackegg"",
""amount"": 3
},
{
""ID"": ""lightbugblueegg"",
""amount"": 3
},
{
""ID"": ""lightbugpinkegg"",
""amount"": 3
},
{
""ID"": ""squirrelhugegg"",
""amount"": 3
},
{
""ID"": ""moledelicacyegg"",
""amount"": 3
},
{
""ID"": ""puftoxyliteegg"",
""amount"": 3
},
{
""ID"": ""dreckoegg"",
""amount"": 3
},
{
""ID"": ""pacuegg"",
""amount"": 3
},
{
""ID"": ""dreckoplasticegg"",
""amount"": 3
},
{
""ID"": ""divergentwormegg"",
""amount"": 3
},
{
""ID"": ""pacucleaneregg"",
""amount"": 3
},
{
""ID"": ""hatchegg"",
""amount"": 3
},
{
""ID"": ""oilfloateregg"",
""amount"": 3
},
{
""ID"": ""oilfloaterdecoregg"",
""amount"": 3
},
{
""ID"": ""oilfloaterhightempegg"",
""amount"": 3
},
{
""ID"": ""crabwoodegg"",
""amount"": 3
},
{
""ID"": ""crabegg"",
""amount"": 3
},
{
""ID"": ""squirrelegg"",
""amount"": 3
},
{
""ID"": ""puftegg"",
""amount"": 3
},
{
""ID"": ""puftalphaegg"",
""amount"": 3
},
{
""ID"": ""lightbugcrystalegg"",
""amount"": 3
},
{
""ID"": ""lightbugpurpleegg"",
""amount"": 3
},
{
""ID"": ""hatchveggieegg"",
""amount"": 3
},
{
""ID"": ""crabfreshwateregg"",
""amount"": 3
},
{
""ID"": ""lightbugegg"",
""amount"": 3
},
{
""ID"": ""moleegg"",
""amount"": 3
},
{
""ID"": ""staterpillaregg"",
""amount"": 3
},
{
""ID"": ""hatchmetalegg"",
""amount"": 3
},
{
""ID"": ""puftbleachstoneegg"",
""amount"": 3
},
{
""ID"": ""hatchhardegg"",
""amount"": 3
},
{
""ID"": ""lightbugorangeegg"",
""amount"": 3
},
{
""ID"": ""divergentbeetleegg"",
""amount"": 3
},
{
""ID"": ""foresttreeseed"",
""amount"": 3
},
{
""ID"": ""swamplilyseed"",
""amount"": 3
},
{
""ID"": ""cylindricaseed"",
""amount"": 3
},
{
""ID"": ""pricklegrassseed"",
""amount"": 3
},
{
""ID"": ""swampharvestplantseed"",
""amount"": 3
},
{
""ID"": ""prickleflowerseed"",
""amount"": 3
},
{
""ID"": ""bulbplantseed"",
""amount"": 3
},
{
""ID"": ""basicforageplant"",
""amount"": 3
},
{
""ID"": ""saltplantseed"",
""amount"": 3
},
{
""ID"": ""mushroomseed"",
""amount"": 3
},
{
""ID"": ""gasgrassseed"",
""amount"": 3
},
{
""ID"": ""forestforageplant"",
""amount"": 3
},
{
""ID"": ""filterplantseed"",
""amount"": 3
},
{
""ID"": ""cactusplantseed"",
""amount"": 3
},
{
""ID"": ""basicsingleharvestplantseed"",
""amount"": 3
},
{
""ID"": ""winecupsseed"",
""amount"": 3
},
{
""ID"": ""leafyplantseed"",
""amount"": 3
},
{
""ID"": ""beanplantseed"",
""amount"": 3
},
{
""ID"": ""oxyfernseed"",
""amount"": 3
},
{
""ID"": ""spicevineseed"",
""amount"": 3
},
{
""ID"": ""crittertrapplantseed"",
""amount"": 3
},
{
""ID"": ""coldwheatseed"",
""amount"": 3
},
{
""ID"": ""wormplantseed"",
""amount"": 3
},
{
""ID"": ""evilflowerseed"",
""amount"": 3
},
{
""ID"": ""swampforageplant"",
""amount"": 3
},
{
""ID"": ""basicfabricmaterialplantseed"",
""amount"": 3
},
{
""ID"": ""toeplantseed"",
""amount"": 3
},
{
""ID"": ""sealettuceseed"",
""amount"": 3
},
{
""ID"": ""coldbreatherseed"",
""amount"": 3
},
{
""ID"": ""cookedmeat"",
""amount"": 8
},
{
""ID"": ""fruitcake"",
""amount"": 8
},
{
""ID"": ""swampfruit"",
""amount"": 8
},
{
""ID"": ""pricklefruit"",
""amount"": 8
},
{
""ID"": ""cookedfish"",
""amount"": 8
},
{
""ID"": ""curry"",
""amount"": 8
},
{
""ID"": ""friedmushroom"",
""amount"": 8
},
{
""ID"": ""coldwheatbread"",
""amount"": 8
},
{
""ID"": ""burger"",
""amount"": 8
},
{
""ID"": ""gammamush"",
""amount"": 8
},
{
""ID"": ""grilledpricklefruit"",
""amount"": 8
},
{
""ID"": ""wormsuperfruit"",
""amount"": 8
},
{
""ID"": ""wormsuperfood"",
""amount"": 8
},
{
""ID"": ""forestforageplant"",
""amount"": 8
},
{
""ID"": ""lettuce"",
""amount"": 8
},
{
""ID"": ""basicplantbar"",
""amount"": 8
},
{
""ID"": ""basicplantfood"",
""amount"": 8
},
{
""ID"": ""meat"",
""amount"": 8
},
{
""ID"": ""berrypie"",
""amount"": 8
},
{
""ID"": ""basicforageplant"",
""amount"": 8
},
{
""ID"": ""mushbar"",
""amount"": 8
},
{
""ID"": ""friedmushbar"",
""amount"": 8
},
{
""ID"": ""mushroom"",
""amount"": 8
},
{
""ID"": ""mushroomwrap"",
""amount"": 8
},
{
""ID"": ""beanplantseed"",
""amount"": 8
},
{
""ID"": ""fieldration"",
""amount"": 8
},
{
""ID"": ""cookedegg"",
""amount"": 8
},
{
""ID"": ""fishmeat"",
""amount"": 8
},
{
""ID"": ""spicebread"",
""amount"": 8
},
{
""ID"": ""pickledmeal"",
""amount"": 8
},
{
""ID"": ""spicenut"",
""amount"": 8
},
{
""ID"": ""plantmeat"",
""amount"": 8
},
{
""ID"": ""rawegg"",
""amount"": 8
},
{
""ID"": ""shellfishmeat"",
""amount"": 8
},
{
""ID"": ""wormbasicfood"",
""amount"": 8
},
{
""ID"": ""coldwheatseed"",
""amount"": 8
},
{
""ID"": ""spicytofu"",
""amount"": 8
},
{
""ID"": ""wormbasicfruit"",
""amount"": 8
},
{
""ID"": ""salsa"",
""amount"": 8
},
{
""ID"": ""surfandturf"",
""amount"": 8
},
{
""ID"": ""swampforageplant"",
""amount"": 8
},
{
""ID"": ""swampdelights"",
""amount"": 8
},
{
""ID"": ""tofu"",
""amount"": 8
},
{
""ID"": ""antihistamine"",
""amount"": 8
},
{
""ID"": ""basicradpill"",
""amount"": 8
},
{
""ID"": ""basiccure"",
""amount"": 8
},
{
""ID"": ""intermediatebooster"",
""amount"": 8
},
{
""ID"": ""intermediatecure"",
""amount"": 8
},
{
""ID"": ""advancedcure"",
""amount"": 8
},
{
""ID"": ""basicbooster"",
""amount"": 8
},
{
""ID"": ""swamplilyflower"",
""amount"": 8
},
{
""ID"": ""cool_vest"",
""amount"": 8
},
{
""ID"": ""orbitalresearchdatabank"",
""amount"": 8
},
{
""ID"": ""woodlog"",
""amount"": 8
},
{
""ID"": ""oxygen_mask"",
""amount"": 8
},
{
""ID"": ""customclothing"",
""amount"": 8
},
{
""ID"": ""basicfabric"",
""amount"": 8
},
{
""ID"": ""funky_vest"",
""amount"": 8
},
{
""ID"": ""geneshufflerrecharge"",
""amount"": 8
},
{
""ID"": ""warm_vest"",
""amount"": 8
},
{
""ID"": ""bee"",
""amount"": 3
},
{
""ID"": ""crab"",
""amount"": 3
},
{
""ID"": ""crabfreshwater"",
""amount"": 3
},
{
""ID"": ""crabwood"",
""amount"": 3
},
{
""ID"": ""divergentbeetle"",
""amount"": 3
},
{
""ID"": ""divergentworm"",
""amount"": 3
},
{
""ID"": ""drecko"",
""amount"": 3
},
{
""ID"": ""dreckoplastic"",
""amount"": 3
},
{
""ID"": ""glom"",
""amount"": 3
},
{
""ID"": ""hatch"",
""amount"": 3
},
{
""ID"": ""hatchhard"",
""amount"": 3
},
{
""ID"": ""hatchmetal"",
""amount"": 3
},
{
""ID"": ""hatchveggie"",
""amount"": 3
},
{
""ID"": ""lightbugpink"",
""amount"": 3
},
{
""ID"": ""lightbugpurple"",
""amount"": 3
},
{
""ID"": ""lightbugorange"",
""amount"": 3
},
{
""ID"": ""lightbugcrystal"",
""amount"": 3
},
{
""ID"": ""lightbugblack"",
""amount"": 3
},
{
""ID"": ""lightbugblue"",
""amount"": 3
},
{
""ID"": ""lightbug"",
""amount"": 3
},
{
""ID"": ""mole"",
""amount"": 3
},
{
""ID"": ""moledelicacy"",
""amount"": 3
},
{
""ID"": ""moo"",
""amount"": 3
},
{
""ID"": ""oilfloater"",
""amount"": 3
},
{
""ID"": ""oilfloaterdecor"",
""amount"": 3
},
{
""ID"": ""oilfloaterhightemp"",
""amount"": 3
},
{
""ID"": ""pacucleaner"",
""amount"": 3
},
{
""ID"": ""pacutropical"",
""amount"": 3
},
{
""ID"": ""pacu"",
""amount"": 3
},
{
""ID"": ""puftalpha"",
""amount"": 3
},
{
""ID"": ""puftbleachstone"",
""amount"": 3
},
{
""ID"": ""puft"",
""amount"": 3
},
{
""ID"": ""puftoxylite"",
""amount"": 3
},
{
""ID"": ""squirrel"",
""amount"": 3
},
{
""ID"": ""squirrelhug"",
""amount"": 3
},
{
""ID"": ""staterpillar"",
""amount"": 3
}
]
}"
hwViejKE,GA - file_download_complete - bm,filipr27,JavaScript,Wednesday 24th of May 2023 10:01:01 AM CDT,"// Fire this dataLayer event when a user actually gets to the publication. (clicks the button that leads to the publication file and is already logged in, or logs in/registers, and is redirected to the publication)

<script>
window.dataLayer = window.dataLayer || [];
window.dataLayer.push({
 'event': 'file_download_complete',
 'publicationName': 'Nordic Equilibrium',  // Variable value - the name of the publication the user clicked to download.
 'publicationType': 'State of the Brand',  // Variable value - e.g. State of the Brand, Don’t Panic!, The Roundtable
 'download_process': 'Already logged in'  // Variable value - to indicate if the user was already logged in or they logged in or registered just now so they could get the publication. Example values: Already logged in, Logged in, Registered
 })
</script>"
WVQXdXPS,objectCounter_and_Timer,costi0n,C++,Wednesday 24th of May 2023 09:57:36 AM CDT,"#include <TimerOne.h>

// Define the sensor pins
#define TRANSMITTER_PIN 9  // IR Transmitter pin. Needs to be 9 or 10 due to Timer1 usage
#define RECEIVER_PIN 2     // IR Receiver pin

int counter = 0;   // Object counter
int lastState = HIGH;  // Last detected IR state

void setup() {
  pinMode(RECEIVER_PIN, INPUT);
  pinMode(TRANSMITTER_PIN, OUTPUT);
  
  // Setup 38 kHz carrier frequency on the TRANSMITTER_PIN with Timer1
  Timer1.initialize(26);  // initialize Timer1, and set a 1/2 period of 26 microseconds = 38.5kHz
  Timer1.pwm(TRANSMITTER_PIN, 512);  // setup pwm on pin TRANSMITTER_PIN, 50% duty cycle
  
  Serial.begin(9600);  // Open serial connection
}

void loop() {
  int currentState = digitalRead(RECEIVER_PIN);  // Read the current state of the receiver

  // Check if the beam was broken
  if (lastState == HIGH && currentState == LOW) {
    counter++;  // Increment the counter
    Serial.println(""Object detected!"");
    Serial.print(""Total number of objects detected: "");
    Serial.println(counter);
  }

  lastState = currentState;  // Update the last state

  delay(100);  // Delay to avoid multiple detection of the same object
}
"
9GrdHeM6,Untitled,Larme,Swift,Wednesday 24th of May 2023 09:56:44 AM CDT,"    static func createLoginDialog(buttonPressed: @escaping (_ username:String, _ pw:String) -> Void) -> UIAlertController {
        let alert = UIAlertController(title: ""Login"", message: """", preferredStyle: .alert)
        
        let loginAction = UIAlertAction(title: ""Log in"", style: .default, handler: { _ in
            let u = alert.textFields![0].text!
            let p = alert.textFields![1].text!
            buttonPressed(u,p)
        })
        
        alert.addAction(loginAction)
        loginAction.isEnabled = false
        
        var textFields: [UITextField] = []
        
        alert.addTextField { textField in
            textField.placeholder = ""Enter Username""
            textFields.append(textField)
            NotificationCenter.default.addObserver(forName: UITextField.textDidChangeNotification,
                                                   object: textField,
                                                   queue: .main) { _ in
                if textFieldsAreValid(textFields) {
                    loginAction.isEnabled = true
                }
            }
        }
        
        alert.addTextField { textField in
            textField.placeholder = ""Enter Password""
            textFields.append(textField)
            NotificationCenter.default.addObserver(forName: UITextField.textDidChangeNotification,
                                                   object: textField,
                                                   queue: .main) { _ in
                if textFieldsAreValid(textFields) {
                    loginAction.isEnabled = true
                }
            }
        }
        
        func textFieldsAreValid(_ textFields: [UITextField]) -> Bool {
            textFields.allSatisfy { !($0.text ?? """").isEmpty } //Do the needed tests, I just check if not empty
        }
        
        return alert
    }"
Rr07mKWp,Zubochistka,wolfgg1,HTML,Wednesday 24th of May 2023 09:54:59 AM CDT,"<size=50><align=center><b><color=#b700ff>Z</color><color=#b400ff>U</color><color=#b000ff>B</color><color=#ad00ff>O</color><color=#a900ff>C</color><color=#a600ff>H</color><color=#a300ff>I</color><color=#9f00ff>S</color><color=#9c00ff>T</color><color=#9800ff>K</color><color=#9500ff>A</color> <color=#8e00ff>Z</color><color=#8b00ff>O</color><color=#8700ff>N</color><color=#8400ff>E</color></align></b></size>
 
<align=center><link=""https://discord.gg/UeAeTdBebg""><mark=#3a6ce0>|<space=0.65em>💬<space=0.65em>|</mark><mark=#5476c7>||<space=1.65em></mark><mark=#5075cc> Дискорд-сервер |<space=1.65em>|</mark></link></align>
 
<align=center><size=17><link=""https://latteinc.xyz""><mark=#358245><size=13>|<space=0.65em>🌐<space=0.65em>|</size></mark><mark=#50b564>||<space=2.65em></mark><mark=#55c26b> Сайт сервера|<space=2.65em>|</mark></link></size></align>
 
<align=center><size=20><color=#d4a3e8>Правила сервера:</color></size></align>
 
<color=#47df8b>[G1] Запрещено использование читов</color> - перманент.
<color=#47df8b>[G2] Отказ от проверки на читы запрещен</color> - перманент.
<color=#47df8b>[G3] Запрещено использовать баги игры</color> - перманент.
<color=#47df8b>[G4] Обход наказания запрещён</color> - перманент.
<color=#47df8b>[G5] Помеха работе сервера запрещена</color> - перманент.
<color=#47df8b>[G6] Обман администрации запрещён</color> - бан на сутки.
<color=#47df8b>[G7] Любая реклама, название игры или проекта в нике запрещены</color> - бан на сутки.
<color=#47df8b>[G8] Оскорбление администрации запрещено (словесные оскорбления)</color> - бан на сутки.
<color=#47df8b>[G9] Политические споры или пропаганда запрещена - бан на неделю</color> - бан на неделю.
<color=#47df8b>[G10] Порча репутации проекта запрещена</color> - бан на месяц.
<color=#47df8b>[G11] Разжигание межнациональной, межрасовой, межрелигиозной розни запрещено</color> - бан в зависимости от серьёзности нарушения.
 
<color=#d4a3e8><align=center><b><size=10>©LATTEINC SCP: SL.</size=10></b></align>"
dsraz6gw,Untitled,riky_quellovero,C++,Wednesday 24th of May 2023 09:51:49 AM CDT,"#include <SFML/Graphics.hpp>
#include <SFML/System.hpp>
#include <SFML/Window.hpp>
#include <SFML/Audio.hpp>
#include <Windows.h>
#include <fstream>
#include <iostream>

using namespace sf;

RenderWindow window(VideoMode::getFullscreenModes()[0], ""The Is No Escape"", Style::Fullscreen);
View view(FloatRect(Vector2f(0, 0), Vector2f(579, 469)));

void subtitles(std::string text)
{
	Text sub; Font font;

	font.loadFromFile(""fonts/GypsyCurse.ttf"");
	sub.setFont(font);
	sub.setCharacterSize(20);
	sub.setFillColor(Color::White);
	sub.setPosition(30, view.getSize().y - 45);

	RectangleShape box(Vector2f(view.getSize().x - 100, 100)); box.setOutlineThickness(3);
	box.setPosition(50, view.getSize().y - 110); box.setFillColor(Color::Black); box.setOutlineColor(Color::White); 

	sub.setPosition(box.getPosition() + Vector2f(10, 10));

	//Music sound;
	//sound.openFromFile("""");

	window.draw(box);

	for (int i = 0; text[i] != '\0'; i++)
	{
		sub.setString(sub.getString() + text[i]);
		window.draw(sub);
		window.display();
		//sound.play();
		Sleep(10);
		//sound.stop();
	}
}

int main()
{
	window.setVerticalSyncEnabled(true);
	window.setKeyRepeatEnabled(false);

	/*scena iniziale + fuse*/ /////////////////////////////////////////////////////////
	Texture animation1; if (!animation1.loadFromFile(""graphics/start/temp1.png"")) { std::cout << ""cant load animation 1"";  return -1; }
	Texture animation2; if (!animation2.loadFromFile(""graphics/start/temp2.png"")) { std::cout << ""cant load animation 2"";  return -1; }

	window.setView(view);

	Sprite an; an.setTexture(animation1);

	window.draw(an); window.display();
	Sleep(3000);

	window.clear();
	an.setTexture(animation2);
	window.draw(an); window.display();

	Sleep(3000);
	window.clear(); window.display();
	Sleep(3000);

	std::fstream fuse(""C:/Users/hp/OneDrive/Desktop/fuse.txt"", std::ios::out);
	fuse << ""delete the file to get the fuse"";

	subtitles(""you recognized an electrical panel...""); Sleep(2000); window.clear(); window.display();
	subtitles(""a fuse is missing...""); Sleep(2000); window.clear(); window.display();

	while(!fuse.eof()) {}

	subtitles(""You Found a fuse...""); Sleep(2000); window.clear(); window.display();
	subtitles(""You put it in the electrical cabinet...""); Sleep(2000); window.clear(); window.display();
	subtitles(""You switch on the light.""); Sleep(2000); window.clear(); window.display();
}"
KmKUrG0x,objectCounter2,costi0n,C++,Wednesday 24th of May 2023 09:50:01 AM CDT,"// Definisci i pin dei sensori
#define TRANSMITTER_PIN 3  // IR Transmitter pin
#define RECEIVER_PIN 2     // IR Receiver pin

int counter = 0;   // Object counter
int lastState = LOW;  // Last detected IR state

void setup() {
  pinMode(RECEIVER_PIN, INPUT);
  pinMode(TRANSMITTER_PIN, OUTPUT);
  Serial.begin(9600);  // Open serial connection
}

void loop() {
  // Generate 38kHz signal
  for (int i = 0; i < 26; i++) {
    digitalWrite(TRANSMITTER_PIN, HIGH);
    delayMicroseconds(13);
    digitalWrite(TRANSMITTER_PIN, LOW);
    delayMicroseconds(13);
  }

  int currentState = digitalRead(RECEIVER_PIN);  // Read the current state of the receiver

  // Check if the beam was broken
  if (lastState == HIGH && currentState == LOW) {
    counter++;  // Increment the counter
    Serial.println(""Object detected!"");
    Serial.print(""Total number of objects detected: "");
    Serial.println(counter);
  }

  lastState = currentState;  // Update the last state

  delay(100);  // Delay to avoid multiple detection of the same object
}
"
SSCASskS,Вариант 14. Факториал,Korobka887,C,Wednesday 24th of May 2023 09:46:29 AM CDT,"#include <stdio.h>

unsigned long long int fac(int n) {
  return (n < 2) ? 1 : n * fac (n - 1);
}

int main() {   
    unsigned int m, n;
    scanf(""%u%u"", &m, &n);
    printf(""%lf"", (fac(m) + fac(n)) * 1.0 / fac(m + n));
}"
WS5UsCCC,Untitled,Kruzar,Python,Wednesday 24th of May 2023 09:40:49 AM CDT,"cat_cols = ['VehicleType', 'Gearbox', 'Model', 'FuelType', 'Brand', 'Repaired'] 
#категориальные колонки 

train_one = features_train.reset_index(drop = True).copy()
test_one = features_test.reset_index(drop = True).copy()
#обновляем индексы (иначе могут возникнуть ошибки) и создаём копию датафреёма

onehot_encoder = OneHotEncoder(sparse = False, drop = 'first', dtype = 'int64')
#создаём обработчик категориальных колонок. 
# sparse - True вернёт разряженную матрицу. False вернёт масив
# drop - метод удаления одной из категориальных категорий
# dtype - какой желаемый тип выходных данных 

train_one_cat_cols = pd.DataFrame(onehot_encoder.fit_transform(train_one[cat_cols]), columns = onehot_encoder.categories_)
train_one.drop(cat_cols, axis = 1, inplace = True)
train_one = pd.concat([train_one, train_one_cat_cols], axis = 1)

test_one_cat_cols = pd.DataFrame(onehot_encoder.transform(test_one[cat_cols]), columns = onehot_encoder.categories_)
test_one.drop(cat_cols, axis = 1, inplace = True)
test_one = pd.concat([test_one, test_one_cat_cols], axis = 1)"
DzU209j6,mangoes,MAGCARI,C++,Wednesday 24th of May 2023 09:33:30 AM CDT,"/*
	Author	: Phumipat C. [MAGCARI]
	Language: C++
	Created	: 15 May 2023 [19:55]
*/
#include<bits/stdc++.h>
using namespace std;
struct A{
	int i,j,w;
};
A trees[100010];
int qs[5010][5010];
int main(){
	int n,m,R,C;
	cin >> n >> m >> R >> C;
	for(int i=1;i<=n;i++)
		cin >> trees[i].i >> trees[i].j >> trees[i].w;
	for(int i=1;i<=m;i++){
		int u,v;
		cin >> u >> v;
		qs[u][v]++;
	}
	for(int i=1;i<=R;i++)
		for(int j=1;j<=C;j++)
			qs[i][j] += qs[i-1][j] + qs[i][j-1] - qs[i-1][j-1];
	int l = 1,r = max(R,C);
	while(l<r){
		int mid = (l+r)/2;
		int able = true;
		for(int k=1;k<=n;k++){
			int i = trees[k].i,j = trees[k].j;
			int num = qs[min(R,i+mid)][min(C,j+mid)] - qs[max(0,i-mid-1)][min(C,j+mid)] - qs[min(R,i+mid)][max(0,j-mid-1)] + qs[max(0,i-mid-1)][max(0,j-mid-1)];
			if(num < trees[k].w){
				able = 0;
				break;
			}
		}
		if(able)	r = mid;
		else		l = mid+1;
	}
	cout << l << '\n';
	return 0;
}"
6LYB0h0k,Extracts the data_rows,MarioVladimirov,Python,Wednesday 24th of May 2023 09:19:46 AM CDT,"import requests
from bs4 import BeautifulSoup


url = 'https://en.wikipedia.org/wiki/List_of_European_Union_member_states_by_population'
response = requests.get(url)
html_content = response.text


soup = BeautifulSoup(html_content, 'html.parser')
table = soup.find('table', {'class': 'wikitable'})
data_rows = table.find_all('tr')[1:]  


countries_dictionary = {}
for row in data_rows:
    columns = row.find_all('td')
    country = columns[0].text.strip() 
    population = int(columns[2].text.replace(',', ''))

    if country:
     country_element = columns[1].find('a')
     country_name = country_element.text.strip()
     countries_dictionary[country_name] = {'country_population': population}

EU_population = sum(country_data['country_population'] for country_data in countries_dictionary.values())

for country_data in countries_dictionary.values():
    country_population = country_data['country_population']
    country_population_percentage = (country_population / EU_population) * 100
    country_data['country_population_percentage'] = round(country_population_percentage, 2)


for country, country_data in countries_dictionary.items():
    print(f""{country}: {country_data}"")"
PwbnPERq,SubjectListAdapter,raka_m_a,Kotlin,Wednesday 24th of May 2023 09:16:57 AM CDT,"//Adapter
class SubjectListAdapter<T>(
    private val subjectList: List<T>,
    private val onGradeChanged: ((subjectId: Int, grade: String) -> Unit)?
): RecyclerView.Adapter<SubjectListAdapter.SubjectListViewHolder<T>>() {

    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): SubjectListViewHolder<T> {
        val binding = ItemGradingSubjectBinding.inflate(LayoutInflater.from(parent.context), parent, false)
        return SubjectListViewHolder(binding)
    }

    override fun getItemCount(): Int = subjectList.size

    override fun onBindViewHolder(holder: SubjectListViewHolder<T>, position: Int) {
        val subjectItem = subjectList[position]
        holder.bind(subjectItem, onGradeChanged)
    }

    class SubjectListViewHolder<T>(
        private val binding: ItemGradingSubjectBinding
    ): RecyclerView.ViewHolder(binding.root) {
        fun bind(subjectItem: T, onGradeChanged: ((subjectId: Int, grade: String) -> Unit)?) {
            if (subjectItem is GradeInput) {
                binding.txtSubjectName.text = subjectItem.subjectName
                binding.inputGrade.editText?.doOnTextChanged { text, _, _, _ ->
                    onGradeChanged?.invoke(
                        subjectItem.subjectId,
                        text.toString()
                    )
                }
                return
            }
            if (subjectItem is GradeViewEntity) {
                binding.txtSubjectName.text = subjectItem.nameSubject
                binding.inputGrade.isVisible = false
                binding.txtGrade.isVisible = true
                return
            }
        }
    }
}

//View XML
<?xml version=""1.0"" encoding=""utf-8""?>
<com.google.android.material.card.MaterialCardView xmlns:android=""http://schemas.android.com/apk/res/android""
    android:layout_width=""match_parent""
    android:layout_height=""wrap_content""
    android:layout_margin=""4dp""
    xmlns:tools=""http://schemas.android.com/tools"">

    <LinearLayout
        android:layout_width=""match_parent""
        android:orientation=""horizontal""
        android:padding=""16dp""
        android:gravity=""center_vertical""
        android:layout_height=""wrap_content"">
        <com.google.android.material.textview.MaterialTextView
            android:id=""@+id/txt_subject_name""
            android:layout_weight=""1""
            android:layout_width=""match_parent""
            tools:text=""Bahasa Indonesia""
            android:layout_marginEnd=""12dp""
            android:textAppearance=""@style/TextAppearance.Material3.BodyLarge""
            android:layout_height=""wrap_content""/>
        <com.google.android.material.textview.MaterialTextView
            android:id=""@+id/txt_grade""
            android:layout_width=""match_parent""
            android:visibility=""gone""
            android:layout_weight=""2""
            style=""@style/TextAppearance.Material3.BodyLarge""
            android:layout_height=""wrap_content""/>
        <com.google.android.material.textfield.TextInputLayout
            android:id=""@+id/input_grade""
            android:layout_weight=""2""
            android:layout_width=""match_parent""
            style=""@style/Widget.Material3.TextInputLayout.OutlinedBox.Dense""
            android:layout_height=""wrap_content"">
            <com.google.android.material.textfield.TextInputEditText
                android:layout_width=""match_parent""
                android:inputType=""number""
                android:hint=""Nilai""
                android:maxLength=""3""
                style=""@style/Widget.Material3.TextInputEditText.OutlinedBox.Dense""
                android:singleLine=""true""
                android:layout_height=""wrap_content""/>
        </com.google.android.material.textfield.TextInputLayout>
    </LinearLayout>

</com.google.android.material.card.MaterialCardView>"
t2f4udAd,objectCounter,costi0n,C++,Wednesday 24th of May 2023 09:14:45 AM CDT,"#include <IRremote.h>

// Define the sensor pins
#define TRANSMITTER_PIN 3  // IR Transmitter pin
#define RECEIVER_PIN 2     // IR Receiver pin

// Create an IRsend object to send signals
IRsend irsend(TRANSMITTER_PIN);

// Create an IRrecv object to receive signals
IRrecv irrecv(RECEIVER_PIN);

decode_results results;

volatile int counter = 0;   // Object counter

void setup()
{
  irrecv.enableIRIn(); // Start the IR receiver
  Serial.begin(9600);  // Open serial connection
}

void loop() {
  if (irrecv.decode(&results)) { 
    // If it receives an IR signal, it means that the object has interrupted the IR barrier
    counter++;  // increment the counter
    Serial.println(""Object detected!"");
    Serial.print(""Total number of objects detected: "");
    Serial.println(counter);
    irrecv.resume(); // Receive the next value
  }
  else {
    // If it doesn't receive an IR signal, it sends an IR signal
    irsend.sendSony(0xa90, 12); // Sends an IR signal Sony code
    delay(40);
  }
}
"
X3z7DATr,may24,Nojus_Globys,Java,Wednesday 24th of May 2023 09:11:00 AM CDT,"
int counter = 0;

void setup () {
  size (1200, 800);
  textSize (128);
  frameRate (5); // sulėtina draw veikimą
}

void draw () {
  if (counter == 9)
    stop ();
  
  circle (random (width), random (height), 100);
  ++counter; // counter padidina per vienetą
  
  fill (0);
  rect (1000, 100, 190, 110);
  fill (255);
  text (counter, 1000, 200);
  
  //if (circles == 10)
  //  stop;
  //if ()
  //fill (255);
}"
aPsYS02k,Untitled,Sininerebane,C#,Wednesday 24th of May 2023 08:57:42 AM CDT,"namespace ConsoleAppWhileExit
{
    class Program
    {
        static void Main(string[] args)
        {
                bool isCycleContinue = true;
                string userMessage;
                string exitCycle = ""exit"";
          
                while (isCycleContinue)
                {
                    Console.WriteLine(""Введите любое слово, чтобы ваш цикл повторялся, а для того, чтобы ваш цикл закончился надо ввести слово exit "");
                    userMessage = Console.ReadLine();

                    if (userMessage != exitCycle)
                    {
                    Console.WriteLine(""Ваш цикл продолжается"");
                    }
                    else
                {
                    isCycleContinue = false;
                }
                }
                Console.WriteLine(""Ваш цикл закончился! "");
                Console.ReadKey(); 
                }
            }
       }"
63tkPYCw,interpolated RAttachment,neongm,C#,Wednesday 24th of May 2023 08:44:56 AM CDT,"
using UdonSharp;
using UnityEngine;
using VRC.SDKBase;
using VRC.Udon;
using VRC.Udon.Common;

// attachment does most of the stuff, attachment point just stores attachments and clamps position
// detach only when moved


// late joiner sync DONE
// collision prevention TODO


public class RAttachment : UdonSharpBehaviour
{
// main config
    [Header(""Config"")]
    [Tooltip(""String that will be compared against names of the entered triggers to identify attachment points"")]
    public string attachmentPointIndentifierString = ""AttachmentPoint"";
    public int attachmentCompatibilityLayer = 0;
    public float attachmentOffset = 0f;
    public float interpolationTimeSec = 0.25f;

    [Header(""Plugins"")]
    public UdonBehaviour[] callbackReceivers = null;
    public bool forwardAttachmentPointToCallbackReceivers = false;
    
    [Header(""Audio"")]
    public float soundVolume = 0.2f;
    public AudioClip readyToAttachSound = null;
    public AudioClip attachCancelSound = null;
    public AudioClip attachSound = null;
    public AudioClip detachSound = null;

// PRIVATE VARIABLES
    private RAttachmentPoint _targetAttachmentPoint = null;
    private Transform _initialParent = null;
    private bool isHeld = false;
    private bool isAttached = false;
    

// DEBUG
    public RDebug RDbg = null;

// SYNCED
    [UdonSynced]
    private Vector3 _positionOffset = Vector3.zero;
    [UdonSynced]
    private string _targetAttachmentPointSyncName;


    [UdonSynced]
    private Vector3 _syncPos;
    [UdonSynced]
    private Quaternion _syncRot;

// interpolation
    private Vector3 _prevPos;
    private Quaternion _prevRot;
    [UdonSynced]
    private bool _interpolate = false;
    private float _timeSpentInterpolating = 0f;
    private bool _syncIsDirty = false;

// INITIALIZATION
    void Start()
    {
        _initialParent = transform.parent;
        RDbg = GameObject.Find(""Dibugir"").GetComponent<RDebug>();
    }


// IMPLEMENTATION
    private void OnAttachSyncReceived(){ // triggered when others are guaranteed to have_targetAttachmentPoint set;
        Debug.Log($""{gameObject.name} OnAttachSyncReceived: attach to {_targetAttachmentPoint}"");
        _attachLocal();
    }

    private void OnDetachSyncReceived(){ 
        Debug.Log($""{gameObject.name} OnDetachSyncReceived: paren changed to {_targetAttachmentPoint}"");
        _detachLocal();
    }

    private void _setLocalTransform(){ // zero local position and rotation
        transform.localRotation = Quaternion.identity;
        transform.localPosition = _positionOffset;
        Debug.Log($""new local localPosition: {_positionOffset}"");
    }

    private void _attachLocal(){
        Debug.Log($""{gameObject.name} _attachLocal to {_targetAttachmentPoint.gameObject}"");
        transform.parent = _targetAttachmentPoint.attachmentParentContainer;
        if(Networking.LocalPlayer.IsOwner(gameObject)){
            _positionOffset = _targetAttachmentPoint.ClampOffset(transform.localPosition);
            _positionOffset.x+=attachmentOffset;
            _interpolate = false;
            Debug.Log($""_positionOffset is calculated to be {_positionOffset} for localPosition: {transform.localPosition}"");
        }
        _setLocalTransform(); // move to the position
        isAttached = true;
        _playAttachAudio();
        _sendCallback(""OnRAttachmentAttachLocal"");
    }

    private void _detachLocal(){
        //Debug.Log($""{gameObject.name} _detachLocal DETACHED FROM {_targetAttachmentPoint}"");
        transform.parent = _initialParent;
        isAttached = false;
        if(_targetAttachmentPoint == null) return;
        _targetAttachmentPoint = null;
        //transform.parent = _initialParent;
        //isAttached = false;
        _playDetachAudio();
        _sendCallback(""OnRAttachmentDetachLocal"");
    }

    private void _syncToOthers(){
        _targetAttachmentPointSyncName = (_targetAttachmentPoint) ? _targetAttachmentPoint.gameObject.name : null;
        Debug.Log($""{gameObject.name} _syncToOthers sent by {Networking.LocalPlayer.displayName}, sent: {_targetAttachmentPointSyncName}"");
        RequestSerialization();
    }

    private void _handleSerialization(){
        if(_targetAttachmentPoint == null && _targetAttachmentPointSyncName != """"){
            _targetAttachmentPoint = GameObject.Find(_targetAttachmentPointSyncName).GetComponent<RAttachmentPoint>();
            OnAttachSyncReceived();
        }else if (_targetAttachmentPoint != null && _targetAttachmentPointSyncName == """"){
            OnDetachSyncReceived(); 
        }

        if(transform.parent == _initialParent){
            _prevPos = transform.localPosition;
            _prevRot = transform.localRotation;
            if(_prevPos == _syncPos && _prevRot == _syncRot) return;

            if(!_interpolate){
                transform.localPosition = _syncPos;
                transform.localRotation = _syncRot;
            }else{
                _timeSpentInterpolating = 0f;
            }
        }
    }
// COLLISION DETECTION:
    private void OnTriggerEnter(Collider _collider){
        if(_collider.name.IndexOf(attachmentPointIndentifierString) == -1) return;
        if(!Networking.LocalPlayer.IsOwner(gameObject)) return;
        if(!isAttached) _playReadyToAttachAudio();
        _targetAttachmentPoint = _collider.gameObject.GetComponent<RAttachmentPoint>();
    }

    private void OnTriggerExit(Collider _collider){
        if(_collider.name.IndexOf(attachmentPointIndentifierString) == -1) return;
        if(!Networking.LocalPlayer.IsOwner(gameObject)) return;
        if(!isAttached) _playAttachCancelAudio();
        _targetAttachmentPoint = null;
    }


// EVENTS OWNER SIDE
    public override void OnPickup() // called only by owner // detach here
    {   
        isHeld = true;
        Debug.Log($""{this}: OnPickup {gameObject.name}, _targetAttachmentPoint: {_targetAttachmentPoint}"");
        _detachLocal();
        _interpolate = true;
        _syncToOthers();
    }

    public override void OnDrop() // called only by owner
    {
        isHeld = false;
        if(_targetAttachmentPoint==null) {
            SendCustomEventDelayedSeconds(""syncPos"", 0.2f);
            return;
        }
        if(_targetAttachmentPoint.attachmentCompatibilityLayer != this.attachmentCompatibilityLayer) {
            SendCustomEventDelayedSeconds(""syncPos"", 0.2f);
            return;
        }
        if(Networking.LocalPlayer.IsOwner(gameObject)) Debug.LogWarning($""ON DROP SENT NOT BY OWNER HOW DID YOU DO THIS"");
        // attaching
        
        // set offset here, calculated only by owner then
        _attachLocal();
        _syncToOthers();
    }

    public override void OnDeserialization(){
        _handleSerialization();
    }

    public override void OnPlayerJoined(VRCPlayerApi player){
        if(Networking.LocalPlayer.IsOwner(gameObject)) syncPos();
    }

// UPDATE LOOP
    public void syncPos(){ // it can be called only by an owner
        _syncPos = transform.localPosition;
        _syncRot = transform.localRotation;
        RequestSerialization();
    }

    void FixedUpdate(){
        if(isHeld){
            syncPos();
        }
    }
    void Update(){
        _interpolationLoop();
    }


    void _interpolationLoop(){
        if(!_interpolate || _timeSpentInterpolating >= interpolationTimeSec) return;

        // if(_syncIsDirty){
        //     _timeSpentInterpolating = 0f;
        //     _syncIsDirty = false;
        // }

        float _step = _timeSpentInterpolating/interpolationTimeSec;
        Vector3 _nextPos = Vector3.Lerp(_prevPos, _syncPos, _step);
        Quaternion _nextRot = Quaternion.Lerp(_prevRot, _syncRot, _step);

        transform.localPosition = _nextPos;
        transform.localRotation = _nextRot;

        
        _timeSpentInterpolating += Time.deltaTime;
        if(_timeSpentInterpolating >= interpolationTimeSec){
            transform.localPosition = _syncPos;
            transform.localRotation = _syncRot;
            //_timeSpentInterpolating = 0f;
        }

        //_timeSpentInterpolating = 0f;
        //transform.localPosition = _syncPos;
        //transform.localRotation = _syncRot;
        
    }
// CALLBACK SENDER
    private void _sendCallback(string _callback){
        Debug.Log($""{this}: _sendCallback"");
        if(callbackReceivers == null) return;
        
        foreach(UdonBehaviour _receiver in callbackReceivers){
            Debug.Log($""{this}: Sending {_callback} to {_receiver}"");
            if(_receiver!=null) _receiver.SendCustomEvent(_callback);
        }
    }

// API
    public RAttachmentPoint getAttachmentPoint() => _targetAttachmentPoint;



// AUDIO
    void _playAttachAudio(){
        if(attachSound == null) return;
        AudioSource.PlayClipAtPoint(attachSound, transform.position, soundVolume);
    }
    void _playDetachAudio(){
        if(detachSound == null) return;
        AudioSource.PlayClipAtPoint(detachSound, transform.position, soundVolume);
    }
    void _playReadyToAttachAudio(){
        if(readyToAttachSound == null) return;
        AudioSource.PlayClipAtPoint(readyToAttachSound, transform.position, soundVolume);
    }
    void _playAttachCancelAudio(){
        if(attachCancelSound == null) return;
        AudioSource.PlayClipAtPoint(attachCancelSound, transform.position, soundVolume);
    }
}

"
H78b6X6j,BattleBots yt-dpl,cros,GetText,Wednesday 24th of May 2023 08:33:01 AM CDT,"##
# Por problemas com o Python ou sei lá o que, esse comando não funciona mais pra mim
# então estou usando o 4kDownloads, mas o comando a baixo é melhor.
#
# Vai baixar os videos no formato f 18 (comando youtube-dl ytsearch:nome) um por um, caso já 
# tenha sido baixado, ele vai para o proximo. Retire o # no inicio do comando.
# Manish
#
#youtube-dl -F lista os formatos disponiveis (ex -f 18) 
#
#BATTLEBOTS 2018- SEASON 3 EPISODE 1
#youtube-dl -cwt -f 18 https://www.youtube.com/watch?v=clLY95GAEZA
#BATTLEBOTS 2018- SEASON 3 EPISODE 2
#youtube-dl -cwt -f 18 https://www.youtube.com/watch?v=L2So0nyi5fI
#BATTLEBOTS 2018- SEASON 3 EPISODE 3
#youtube-dl -cwt -f 18 https://www.youtube.com/watch?v=kXH-HtDmVqk
#BATTLEBOTS 2018- SEASON 3 EPISODE 4
#youtube-dl -cwt -f 18 https://www.youtube.com/watch?v=rtKrpFFzNDU
#
#youtube-dl -cwt -f 18 https://www.youtube.com/watch?v=WDx-u_XhBXE
#youtube-dl -cwt -f 18 https://www.youtube.com/watch?v=2MiBh7stFeE
#youtube-dl -cwt -f 18 https://www.youtube.com/watch?v=s8XvjQK9PE0
#youtube-dl -cwt -f 18 https://www.youtube.com/watch?v=n_yAExaqYHs
#youtube-dl -cwt -f 18 https://www.youtube.com/watch?v=fE3uMEktaCw
#youtube-dl -cwt -f 18 https://www.youtube.com/watch?v=h7V4rpblcro
#youtube-dl -cwt -f 18 https://www.youtube.com/watch?v=iaKQZvvFAsg
#youtube-dl -cwt -f 18 https://www.youtube.com/watch?v=Pw1xaQcLE5M
#youtube-dl -cwt -f 18 https://www.youtube.com/watch?v=0ezPRjFrtdg
#youtube-dl -cwt -f 18 https://www.youtube.com/watch?v=qUhei8wH170
#youtube-dl -cwt -f 18 https://www.youtube.com/watch?v=Gvc0jS_LvrI
#youtube-dl -cwt -f 18 https://www.youtube.com/watch?v=CRqsn34k-l0
#youtube-dl -cwt -f 18 https://www.youtube.com/watch?v=Fh2-lCAmlws
#youtube-dl -cwt -f 18 https://www.youtube.com/watch?v=Co1kqo6Kh00
#youtube-dl -cwt -f 18 https://www.youtube.com/watch?v=-QGFKhP5Za4
#youtube-dl -cwt -f 18 https://www.youtube.com/watch?v=quF77jxAaqU
#youtube-dl -cwt -f 18 https://www.youtube.com/watch?v=wksM0Qxt6mk
#youtube-dl -cwt -f 18 https://www.youtube.com/watch?v=HehU6IsDcRk
#youtube-dl -cwt -f 18 https://www.youtube.com/watch?v=RXQTAd5o1Vo
#youtube-dl -cwt -f 18 https://www.youtube.com/watch?v=Bs4Fesu_lNI
#youtube-dl -cwt -f 18 https://www.youtube.com/watch?v=Rsxz-_8bfiQ
#youtube-dl -cwt -f 18 https://www.youtube.com/watch?v=odi5PxFajgg
#youtube-dl -cwt -f 18 https://www.youtube.com/watch?v=WpZFTCwFoBA
#youtube-dl -cwt -f 18 https://www.youtube.com/watch?v=KTsbnuLbh5o
#youtube-dl -cwt -f 18 https://www.youtube.com/watch?v=1Yrvw-RQppo
#youtube-dl -cwt -f 18 https://www.youtube.com/watch?v=hj6OcrlpAk8
#youtube-dl -cwt -f 18 https://www.youtube.com/watch?v=Fqy_PQO8-s4
#youtube-dl -cwt -f 18 https://www.youtube.com/watch?v=OoLUAN1Kg_8
#youtube-dl -cwt -f 18 https://www.youtube.com/watch?v=gk0fgYlaack
#2023
yt-dlp -cwt -f 18 https://www.youtube.com/watch?v=yjKTNtPVwEM
yt-dlp -cwt -f 18 https://www.youtube.com/watch?v=KZ2qPhkKJEE
yt-dlp -cwt -f 18 https://www.youtube.com/watch?v=lg13ivFlmTU
yt-dlp -cwt -f 18 https://www.youtube.com/watch?v=td2Rup31pKw
yt-dlp -cwt -f 18 https://www.youtube.com/watch?v=o9D2wpIwXVY

yt-dlp -cwt -f 18 https://www.youtube.com/watch?v=ORDg67i70IU
yt-dlp -cwt -f 18 https://www.youtube.com/watch?v=Iaii-XUxqqU
yt-dlp -cwt -f 18 https://www.youtube.com/watch?v=p6uLvqGJ5KM
yt-dlp -cwt -f 18 https://www.youtube.com/watch?v=QOJMUAixbCQ
yt-dlp -cwt -f 18 https://www.youtube.com/watch?v=9pQBkEqPhyY

yt-dlp -cwt -f 18 https://www.youtube.com/watch?v=CEjkCFYWUm0
yt-dlp -cwt -f 18 https://www.youtube.com/watch?v=80uHA6SubWo
yt-dlp -cwt -f 18 https://www.youtube.com/watch?v=ykaQVm_Amu4
yt-dlp -cwt -f 18 https://www.youtube.com/watch?v=tXAEUulsESo
yt-dlp -cwt -f 18 https://www.youtube.com/watch?v=OormBeHfOhs

yt-dlp -cwt -f 18 https://www.youtube.com/watch?v=IbJrtGlTvoE
yt-dlp -cwt -f 18 https://www.youtube.com/watch?v=hE8nLpJ72m8
yt-dlp -cwt -f 18 https://www.youtube.com/watch?v=Gq9w7Gg7yNw
yt-dlp -cwt -f 18 https://www.youtube.com/watch?v=rvR-62KPGco
yt-dlp -cwt -f 18 https://www.youtube.com/watch?v=V71UcMx0b_Y

yt-dlp -cwt -f 18 https://www.youtube.com/watch?v=qaTIreDG45M
yt-dlp -cwt -f 18 https://www.youtube.com/watch?v=dI7AsVO6GYU
yt-dlp -cwt -f 18 https://www.youtube.com/watch?v=jBpZVgoZUww
yt-dlp -cwt -f 18 https://www.youtube.com/watch?v=3JCKZpFO9zY
yt-dlp -cwt -f 18 https://www.youtube.com/watch?v=51akwv6Ew-g

yt-dlp -cwt -f 18 https://www.youtube.com/watch?v=_Q-RPHcecnU
yt-dlp -cwt -f 18 https://www.youtube.com/watch?v=gmw_RSrveW0

"
P0JYhFKS,Statystyki gracza,PrezesSmoku,Python,Wednesday 24th of May 2023 08:22:21 AM CDT,"baza_gier = []
nazwa_pliku = ""staty.txt"" #Dla wygody zapisujemy to w zmiennej aby się nie pomylić
plik = open(nazwa_pliku, ""a"")
plik.close()
plik = open(nazwa_pliku, ""r"")
for line in plik:
    line = line.replace(""\n"", """")
    gra = line.split('|')
    baza_gier.append(gra)
plik.close()

lista_naglowkow = [""Tytuł"", ""Ilość rozegranych partii"", ""Ilość wygranych partii"", ""Stosunek wygranych partii do wszystkich partii""]
menu = [""Dodaj nową grę"", ""Zarejestruj nową rozgrywkę"",""Zobacz statystyki gry"", ""Usuń grę ze statystyk"", ""Zakończ""]

def pokaz_menu():
    for i in range(len(menu)):
        print(f""{i+1}. {menu[i]}"")
    wybor = int(input(""Podaj wybór: ""))
    return wybor

def dodaj_nowa_gre():
    tytul = input(""Podaj tytuł nowej gry: "")
    gra = [tytul, 0,0,0] #na start dla każdej satystyki 0
    baza_gier.append(gra)

def pokaz_gry():
    for i in range(len(baza_gier)):
        print(f""{i+1}. {baza_gier[i][0]}"")

def wybierz_gre():
    pokaz_gry()
    wybrana = int(input(""Wybierz numer gry: ""))
    return wybrana-1

def dopisz_rozgrywke(numer_gry):
    gra = baza_gier[numer_gry]
    gra[1] += 1 #zwiększamy ilość rozgrywek
    czy_wygrana = input(""Czy partia została wygrana? "")
    czy_wygrana = czy_wygrana.lower()
    if czy_wygrana == ""tak"":
        gra[2] += 1 #zwiększamy ilość wygranych
    procent = gra[1]/gra[2] * 100
    gra[3] = procent
    baza_gier[numer_gry] = gra

def pokaz_statystyki_gry(numer_gry):
    gra = baza_gier[numer_gry]
    for i in range(len(lista_naglowkow)):
        print(f""{lista_naglowkow[i]}: {gra[i]}"")


def usuwanie_gry(numer_gry):
    tytul = baza_gier[numer_gry][0]
    czy_napewno = input(f""Czy napewno checesz usunąć z listy {tytul}? "")
    czy_napewno = czy_napewno.lower()
    if czy_napewno == ""tak"":
        baza_gier.pop(numer_gry)

def zapis_do_pliku():
    plik = open(nazwa_pliku, ""w"")
    for gra in baza_gier:
        linia = ""|"".join(gra)
        plik.write(linia + ""\n"")
    plik.close()

czy_koniec = False
while not czy_koniec:
    print(""___________________"")
    wybor = pokaz_menu()
    if wybor == 1:
        print(""Dodaj nową grę"")
        dodaj_nowa_gre()
    elif wybor == 2:
        print(""Zarejestruj nową rozgrywkę"")
        wybrana_gra = wybierz_gre()
        dopisz_rozgrywke(wybrana_gra)
    elif wybor == 3:
        print(""Zobacz statystki gry"")
        wybrana_gra = wybierz_gre()
        pokaz_statystyki_gry(wybrana_gra)
    elif wybor == 4:
        print(""Usuń grę ze statystyk"")
        wybrana_gra = wybierz_gre()
        usuwanie_gry(wybrana_gra)
    elif wybor == 5:
        print(""Koniec programu"")
        zapis_do_pliku()
        czy_koniec = True
    else:
        print(""Zły wybór"")
"
KgAfwg3A,HTTP request in Javascript,Ajwct,JavaScript,Wednesday 24th of May 2023 08:19:18 AM CDT,"var xhr = new XMLHttpRequest();
xhr.open('GET', 'https://api.example.com/data', true);

xhr.onreadystatechange = function () {
  if (xhr.readyState === 4 && xhr.status === 200) {
    var response = JSON.parse(xhr.responseText);
    // Process the response here
    console.log(response);
  }
};

xhr.send();
"
kU3qx8xN,ESP32-WiFi-MQTT-Publis-Reconnect,evenjc,Arduino,Wednesday 24th of May 2023 08:18:55 AM CDT,"#include <WiFi.h>
#include <PubSubClient.h>

const char* ssid = ""ssid"";
const char* password = ""psk"";

const char* mqtt_server = ""192.168.245.157"";

WiFiClient espClient;
PubSubClient client(espClient);

void setup() {
  Serial.begin(115200);
  WiFi.begin(ssid, password);

  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(""."");
  }

  Serial.println("""");
  Serial.println(""WiFi connected"");
  Serial.println(""IP address: "");
  Serial.println(WiFi.localIP());

  client.setServer(mqtt_server, 1883);
}
void reconnect() {
  // Loop until we're reconnected
  while (!client.connected()) {
    Serial.print(""Attempting MQTT connection..."");
    // Attempt to connect
    if (client.connect(""ESP8266Client"")) {
      Serial.println(""connected"");
      // Subscribe
      client.subscribe(""esp32/output"");
    } else {
      Serial.print(""failed, rc="");
      Serial.print(client.state());
      Serial.println("" try again in 5 seconds"");
      // Wait 5 seconds before retrying
      delay(5000);
    }
  }
}
void loop() {
  if (!client.connected()) {
    reconnect();
  }
  client.loop();
  // Sender value til topic/topic og venter 10 sek.
  
  Serial.println(""Sender heia til esp32/test"");
  client.publish(""esp32/test"", ""heia"");
  delay(10000);
}
"
9KKWPJaV,Trying w/ sysfs_pwm,silver2row,Python,Wednesday 24th of May 2023 08:07:47 AM CDT,"#!/usr/bin/python3

# Use for PWM on /dev/bone/pwm/

from pathlib import Path
from PWMSone import Pwm  # see https://pastebin.com/R70P1wAn
from time import sleep

pwm1b = Pwm('/dev/bone/pwm/1/b', frequency=50, value=0)
pwm1a = Pwm('/dev/bone/pwm/1/a', frequency=50, value=0)

GPIO  = Path('/sys/class/gpio/gpio60/direction')
GPIO.write_text('out')
GPIO  = Path('/sys/class/gpio/gpio60/value')
GPIO.write_text('0')

#GPIO1 = Path('/sys/class/gpio/gpio44/direction')
#GPIO1.write_text('out')
#GPIO1 = Path('/sys/class/gpio/gpio44/value')
#GPIO1.write_text('0')

# https://pastebin.com/R70P1wAn

# initialize and enable pwm, automatically disable when scope is left
#with Pwm('/dev/bone/pwm/1/b', frequency=20000, value=0) as pwm:
#    while True:
#        pwm.value = float(input(""Enter PWM value (between 0.0 and 1.0): ""))

try:
    while True:
        port = float(input(""Please type a 0 or a 1 : ""))
        if port == 0:
            GPIO.write_text('1')
            sleep(1)
            frequency=150
            pwm1b.value=1.0
            sleep(1)
        elif port == 1:
            GPIO.write_text('1')
            sleep(1)
            frequency=70
            pwm1b.value=0.1
            sleep(1)

except KeyboardInterrupt:
    GPIO.write_text(""0"")
#    GPIO1.write_text(""0"")
    pwm1b.enabled = False
    print(""Kosher Salt!"")
    pass"
k5ZFCDHa,gamipress-user-points-credit,cleverus,JavaScript,Wednesday 24th of May 2023 07:58:25 AM CDT,"/* This is your custom Javascript */
jQuery(document).ready(function ($) {
    $(""#header-aside .signin-button"").attr(""href"", '//earn.community/login');
    setLoginLink();

    $("".kv-login-link"").click(function (event) {
        if ( $(""body"").hasClass(""logged-in"") ) {
      $('.bb-mobile-header-wrapper .header-aside .sub-menu').toggleClass('active');      
        }
        else {
            window.location.href = ""https://earn.community/login"";
        }
    });

	$('.user-wrap .sub-menu').clone(true).insertAfter('.bb-mobile-header-wrapper .kv-login-link');  

	var cntCredits;

	if($('body').hasClass('logged-in')){
		if ($('.gamipress-user-points-amount').length > 0) {
			cntCredits = $(""span.gamipress-user-points-amount"").html();
			localStorage.setItem('credits', cntCredits);			
		} else {
			cntCredits = localStorage.getItem('credits');			
		}		

		$('<a href=""http://earn.community/credits"" class=""kv-menu-credits""> <div class=""kv-menu-credits__ico""> <img src=""/wp-content/uploads/2022/11/Untitled-design-2022-11-07T151629.047.png"" alt=""""> </div> <div class=""kv-menu-credits__counter"">' + cntCredits + '</div></a').insertBefore($('.header-aside .header-aside-inner'));
		 
		$('<a href=""http://earn.community/credits"" class=""kv-menu-credits""> <div class=""kv-menu-credits__ico""> <img src=""/wp-content/uploads/2022/11/Untitled-design-2022-11-07T151629.047.png"" alt=""""> </div> <div class=""kv-menu-credits__counter"">' + cntCredits + '</div></a>').insertBefore($('.header-aside .kv-login-link'));	
	}
	
	const myTimeout = setTimeout(kvReputation, 4000);
	
	function kvReputation(){
		$('.gamipress-buddypress-reputation').click(function(){
			window.location.href = ""https://earn.community/members/tokenmage/"";
		})		
	}	
	
	$('.gamipress-points .gamipress-user-points-credit').click(function(){
		window.location.href = ""https://earn.community/credits/""
	})

	$('.gamipress-points .gamipress-user-points-reputation').click(function(){
		window.location.href = ""https://earn.community/reputation/""
	})

	$('.gamipress-points .gamipress-user-points-usd').click(function(){
		window.location.href = ""https://earn.community/usd/""
	})	
});


function setLoginLink() {
    jQuery("".bb-mobile-header .header-search-link"").addClass(""kv-login-link"");
    jQuery("".bb-mobile-header .kv-login-link"").removeClass(""header-search-link"");
    jQuery("".bb-mobile-header .kv-login-link"").attr(""data-balloon"", """");
    jQuery("".bb-mobile-header .kv-login-link .bb-icon-l"").removeClass(""bb-icon-search"");
    jQuery("".bb-mobile-header .kv-login-link .bb-icon-l"").addClass(""bb-icon-key"");
}
"
us7mGs82,google interview question,JustSvK,C++,Wednesday 24th of May 2023 07:58:04 AM CDT,"#include <bits/stdc++.h>
#define ll long long
#define psd pair<string, double>

using namespace std;

double convert_currency(vector<tuple<string, string, double>> conversion_rates, string start_currency, string end_currency) {
    // firstly we build a graph
    unordered_map<string, vector<psd>> graph;
    for(auto &t : conversion_rates) {
        graph[get<0>(t)].push_back({get<1>(t), get<2>(t)});
        // if usd -> jpy is 110, obviously jpy -> usd is 1 / 110
        graph[get<1>(t)].push_back({get<0>(t), 1 / get<2>(t)});
    }

    // we can use bfs since it doesn't matter much if we get the smallest conversion rate
    // just look up the algorithm if you don't know it
    set<string> vis;
    vis.insert(start_currency);

    queue<psd> q;
    q.push({start_currency, 1});

    while(!q.empty()) {
        string v; double w;
        tie(v, w) = q.front(); q.pop();

        if(v == end_currency) return w;

        for(psd u : graph[v]) {
            if(!vis.count(u.first)) {
                vis.insert(u.first);
                q.push({u.first, w * u.second});
            }
        }
    }

    return -1;
}

int main() {
    cout << convert_currency({{""USD"", ""JPY"", 110}, {""USD"", ""AUD"", 1.45}, {""JPY"", ""GBP"", 0.0070}}, ""GBP"", ""AUD"") << endl;
}"
A0ti4z25,JavaMedsNew,4rl3fd,Java,Wednesday 24th of May 2023 07:55:22 AM CDT,"import java.util.Scanner; // For Inputs
import java.io.File;  // For File Creation
import java.io.IOException;  // For error handling
import java.util.Random;

import java.time.LocalDateTime;  // 
import java.time.format.DateTimeFormatter;  // for getting date registered

import java.util.ArrayList;

import java.text.SimpleDateFormat;  
import java.util.Date; 
import java.io.FileWriter;   

import java.io.FileNotFoundException;  //  to handle file errors
import java.io.BufferedReader;
import java.io.FileReader;







public class Main
{
    public static String LastName, FirstName, MiddleName= """"; // Name Info. Middle Name is Optional
		public static boolean HasMiddleName = false;
		
		public static String Alphabet[] = {""A"",""B"",""C"",""D"",""E"",""F"",""G"",""H"",""I"",""J"",""K"",""L"",""M"",""N"",""O"",""P"",""Q"",""R"",""S"",""T"",""U"",""V"",""W"",""X"",""Y"",""Z""};
		public static String Numbers[] = {""0"",""1"",""2"",""3"",""4"",""5"",""6"",""7"",""8"",""9""};
		public static String UserID; // Format = LLNL-NNN
		
		public static String DOB, ContactNo, Address; // general info
		
		public static String userinput;
		
		public static String username = ""PayongEmployee"", password = ""P4Y0NG"";
		
		public static String Conditions[] = {"""","""","""","""","""","""","""","""","""","""","""","""","""","""","""","""","""","""","""","""","""","""","""","""","""","""","""","""","""","""","""","""","""","""","""","""",""""};
		public static String Medications[] = {"""","""","""","""","""","""","""","""","""","""","""","""","""","""","""","""","""","""","""","""","""","""","""","""","""","""","""","""","""","""","""","""","""","""","""","""",""""};
		public static int NOC =0; // number of conditions
		public static int NOM =0; // number of Medications
		public static String Allergies[] = {"""","""","""","""","""","""","""","""","""","""","""","""","""","""","""","""","""","""","""","""","""","""","""","""","""","""","""","""","""","""","""","""","""","""","""","""",""""};
		public static int NOA = 0; //number of Allergies
		
		public static String BT[] ={""O+"", ""O-"", ""A+"", ""A-"", ""AB+"", ""AB-"", ""B+"", ""B-""};
		public static boolean legit = false; //to see if the user's bloodtype is equal to any the above
		public static String BloodType= """", Donor; // Donor is yes or no question
		
		public static String AdditionalInfo= """";
		
		public static String CompanyName = ""PAYONG CORPORATION"", Branch = ""LAS PIÑAS-MUNTINLUPA PHILIPPINES BRANCH"";
		
		

		
		public static void DisDir(){
		    File currentDirectory = new File(""."");
        File[] files = currentDirectory.listFiles();

        if (files != null) {
            for (File file : files) {
                if (file.isFile()) {
                    System.out.println(file.getName());
                }
            }
        }
		}
		
		public static void writedata()throws Exception{
		    SimpleDateFormat formatter = new SimpleDateFormat(""MM/dd/yyyy"");  
        Date date = new Date();  
		    File myObj = new File(LastName + UserID);
		FileWriter myWriter = new FileWriter(UserID+""_DATA"");
		myWriter.write(""\n""+FirstName);
		myWriter.write(""\n""+LastName);
		myWriter.write(""\n""+MiddleName);
		myWriter.write(""\n""+UserID);
		myWriter.write(""\n""+DOB);
		myWriter.write(""\n""+ContactNo);
		myWriter.write(""\n""+Address);
		myWriter.write(""\n""+formatter.format(date));
		myWriter.write(""\n""+BloodType);
		myWriter.write(""\n""+NOC);
		if(NOC > 0){
		    myWriter.write(""\n"");
		for(int i=0; i!=NOC; i++){
		    myWriter.write(""\n""+Conditions[i]);
		}
		}
		myWriter.write(NOA);
		if(NOA > 0){
		    myWriter.write(""\n"");
		for(int i=0; i!=NOA; i++){
		    myWriter.write(""\n""+Allergies[i]);
		}
		}
		myWriter.write(NOM);
		if(NOM > 0){
		    myWriter.write(""\n"");
		for(int i=0; i!=NOM; i++){
		    myWriter.write(""\n""+Medications[i]);
		}
		}
		if(!"""".equalsIgnoreCase(AdditionalInfo)){
		    myWriter.write(""\n""+AdditionalInfo);
		}
		myWriter.flush();
        myWriter.close();
		}
		
		public static void GetData()throws Exception{
		    Scanner ir = new Scanner (System.in);
		
		System.out.print(""\nPlease Enter Your Last Name: "");
		LastName = ir.nextLine ();
		System.out.print(""\nPlease Enter Your First Name: "");
		FirstName = ir.nextLine ();
		System.out.print(""\nWould You Like to Enter Your Middle Name? "");
		userinput = ir.nextLine ();
		if(userinput.equalsIgnoreCase(""Y"") || userinput.equalsIgnoreCase(""YES"")) {
		    System.out.print(""\nPlease Enter Your Middle Name: "");
		    MiddleName = ir.nextLine ();
		}
		System.out.print(""\n\nPlease Enter Your Date of Birth(MM/DD/YYYY): "");
		DOB = ir.nextLine ();
		System.out.print(""\nPlease Enter Your Contact No.: +63 "");
		ContactNo = ir.nextLine ();
		System.out.print(""\nPlease Enter Your Home Address: "");
		Address = ir.nextLine ();
		System.out.print(""\n"");
		System.out.print(""Please Enter Any Known Condition(type DONE when finished): "");
		while(!""DONE"".equalsIgnoreCase(userinput)){
		    userinput ="""";
		    userinput = ir.nextLine ();
		    Conditions[NOC] = userinput;
		    NOC++;
		}
		NOC--;
		userinput ="""";
		System.out.print(""\nPlease Enter Prescribed Medications(type DONE when finished): "");
		while(!""DONE"".equalsIgnoreCase(userinput)){
		    userinput ="""";
		    userinput = ir.nextLine ();
		    Medications[NOM] = userinput;
		    NOM++;
		}
		NOM--;
		System.out.print(""\nPlease Enter Your Allergies(type DONE when finished): "");
		userinput ="""";
		while(!""DONE"".equalsIgnoreCase(userinput)){
		    userinput ="""";
		    userinput = ir.nextLine ();
		    Allergies[NOA] = userinput;
		    NOA++;
		}
		NOA--;
		userinput ="""";
		while(legit == false){
		    System.out.print(""\nPlease Enter Your Blood Type: "");
		    BloodType = ir.nextLine ();
		    
		    for(int i=0; i!= BT.length; i++){
		        if(BloodType.equalsIgnoreCase(BT[i])){
		            legit = true;
		        }
		    }
		    if(legit == false){
		        System.out.println(""\nPlease Enter A Valid Blood Type"");
		    }
		    
		}
		
		userinput = """";
		System.out.print(""\nDo You Have Any Additional Information? "");
		userinput = ir.nextLine();
		if(userinput.equalsIgnoreCase(""YES"") || userinput.equalsIgnoreCase(""Y"")){
		    AdditionalInfo = ir.nextLine();
		}
		}
		
		public static void display()throws Exception{
		    SimpleDateFormat formatter = new SimpleDateFormat(""MM/dd/yyyy"");  
        Date date = new Date();  
		    Random rand = new Random ();
		    UserID = Alphabet[rand.nextInt(Alphabet.length)] + Alphabet[rand.nextInt(Alphabet.length)] + Numbers[rand.nextInt(Numbers.length)] + Alphabet[rand.nextInt(Alphabet.length)] + ""-"" + Numbers[rand.nextInt(Numbers.length)] +Numbers[rand.nextInt(Numbers.length)] + Numbers[rand.nextInt(Numbers.length)];
		    System.out.print(""\033[H\033[2J"");
        System.out.flush();
        System.out.println(""\nDisplaying Information..."");
        System.out.print(""\n\nNAME: "" + LastName + "", "" + FirstName);
        if(!"""".equalsIgnoreCase(MiddleName)){
            System.out.print("" "" + MiddleName);
        }
        System.out.println(""\nUSER IDENTIFICATION: ""+ UserID);
		System.out.println(""\nDATE OF BIRTH(MM/DD/YYYY): "" + DOB);
		System.out.println(""CONTACT NUMBER: (+63)"" + ContactNo);
		System.out.println(""HOME ADDRESS: "" + Address);
		System.out.println(""DATE REGISTERED: ""+ formatter.format(date));
		System.out.println(""BLOOD TYPE: ""+ BloodType);
		System.out.println(""========================================"");
		
		if(NOC > 0){
		    System.out.println(""KNOWN CONDTIONS: "");
		for(int i=0; i!=NOC; i++){
		    System.out.println((i+1) + ""|| "" + Conditions[i]);
		}
		}
		
		if(NOA > 0){
		    System.out.println(""KNOWN ALLERGIES: "");
		for(int i=0; i!=NOA; i++){
		    System.out.println((i+1) + ""|| "" + Allergies[i]);
		}
		}
		
		if(NOM > 0){
		    System.out.println(""PRESCRIBED MEDICATIONS: "");
		for(int i=0; i!=NOM; i++){
		    System.out.println((i+1) + ""|| "" + Medications[i]);
		}
		}
		
		if(!"""".equalsIgnoreCase(AdditionalInfo)){
		    System.out.println(""ADDITIONAL INFORMATION:\n""+ AdditionalInfo);
		}
		}
		
		public static void WToFile()throws Exception{
		    SimpleDateFormat formatter = new SimpleDateFormat(""MM/dd/yyyy"");  
        Date date = new Date();  
		    File myObj = new File(LastName + UserID);
		FileWriter myWriter = new FileWriter(LastName + UserID);
		
		myWriter.write(""<<<<< "" + CompanyName + "" MEDICAL ID REGISTRATION SYSTEM >>>>>"");
		myWriter.write(""\n      "" + Branch);
		
		myWriter.write(""\n\nNAME: "" + LastName + "", "" + FirstName);
        if(!"""".equalsIgnoreCase(MiddleName)){
            myWriter.write("" "" + MiddleName);
        }
        myWriter.write(""\nUSER IDENTIFICATION: ""+ UserID);
		myWriter.write(""\nDATE OF BIRTH(MM/DD/YYYY): "" + DOB);
		myWriter.write(""\nCONTACT NUMBER: (+63)"" + ContactNo);
		myWriter.write(""\nHOME ADDRESS: "" + Address);
		myWriter.write(""\nDATE REGISTERED: ""+ formatter.format(date));
		myWriter.write(""\nBLOOD TYPE: ""+ BloodType);
		myWriter.write(""\n========================================"");
		
		if(NOC > 0){
		    myWriter.write(""\nKNOWN CONDTIONS: "");
		for(int i=0; i!=NOC; i++){
		    myWriter.write(""\n""+ (i+1) + ""|| "" + Conditions[i]);
		}
		}
		
		if(NOA > 0){
		    myWriter.write(""\nKNOWN ALLERGIES: "");
		for(int i=0; i!=NOA; i++){
		    myWriter.write(""\n""+ (i+1) + ""|| "" + Allergies[i]);
		}
		}
		
		if(NOM > 0){
		    myWriter.write(""\nPRESCRIBED MEDICATIONS: "");
		for(int i=0; i!=NOM; i++){
		    myWriter.write(""\n""+ (i+1) + ""|| "" + Medications[i]);
		}
		}
		
		if(!"""".equalsIgnoreCase(AdditionalInfo)){
		    myWriter.write(""\nADDITIONAL INFORMATION:\n""+ AdditionalInfo);
		}
		
		myWriter.flush();
        myWriter.close();

		}
		
		public static void reset(){
		     LastName="""";
		     FirstName="""";
		     MiddleName= """"; 
		 HasMiddleName = false;
		 UserID = """"; 
		 String DOB ="""", ContactNo="""", Address=""""; 
		userinput="""";
		
		for(int i=0; i!= Conditions.length; i++){
		    Conditions[i] = """";
		    Medications[i] = """";
		    Allergies[i] = """";
		}
		 NOC =0;
		 NOM =0;
		 NOA = 0;
		 legit = false;
		 BloodType= """";
		
		 AdditionalInfo= """";
		}
		
		public static void DelFil() throws Exception {
		    Scanner ir = new Scanner (System.in);
		    userinput = """";
		    for(int i=0; i!=10; i++) {
		        System.out.print(""Please enter the name of the file you wish to delete(.txt not required): "");
		    userinput = ir.nextLine();
		    File myObj = new File(userinput + "".txt"");
		    if(myObj.delete()) {
		        System.out.println(""Deleted the file: "" + userinput + "".txt"");
		        break;
		    } else {
		        System.out.println(""Error! Failed to delete file!\nMake sure you typed its name correctly and\nyou did not include the '.txt' extension"");
		    }
		    }
		}
		
		public static void ReadFile() throws Exception {
		    Scanner ir = new Scanner (System.in);
		    try {
		        
		        for(int i=0; i!=10; i++) {
		        System.out.print(""Please enter the name of the file you wish to open(.txt not required): "");
		    userinput = ir.nextLine();
		    File myReader = new File(userinput);
		    Scanner rfil = new Scanner(myReader);
		    while (rfil.hasNextLine()) {
        String data = rfil.nextLine();
        System.out.println(data);
		}
		rfil.close();
		break;
		    } 
		        
		    }catch (FileNotFoundException e){
		        System.out.println(""An error occurred."");
      e.printStackTrace();

		    }
		}
		
	public static void main(String[] args) throws Exception {
	    Scanner ir = new Scanner (System.in);
	    SimpleDateFormat formatter = new SimpleDateFormat(""MM/dd/yyyy"");  
        Date date = new Date();  
        Random rand = new Random ();
        boolean isclosed = false;
		boolean isdone = false;
		boolean pword = false;
		String pinput, uinput;
		
		System.out.println(""        ============================================================="");
		System.out.println(""        ||    "" + CompanyName + "" MEDICAL ID REGISTRATION SYSTEM    ||"");
		System.out.println(""        ============================================================="");
		System.out.println(""        .-^-..-^-..-^-..-^-..-^-..-^-.|.-^-..-^-..-^-..-^-..-^-..-^-."");
		System.out.println(""          j    j    j    j    j    j  |  j    j    j    j    j    j"");
		System.out.println(""\nthis program is a product of Payong Corporation and cannot be distributed without any license"");
		
		do{
		System.out.print(""Please Enter the username: "");
		uinput = ir.nextLine();
		System.out.print(""\nPlease Enter the password: "");
		pinput = ir.nextLine();
		
		if(pinput.equals(password) && uinput.equals(username)){
		    pword = true;
		} else {
		    System.out.println(""Incorrect Username or Password, please try again\n"");
		}
		userinput = """";
		uinput = """";
		pinput = """";
		}while(pword == false); 
		System.out.print(""\033[H\033[2J"");
        System.out.flush();
        do{
            System.out.println(""<<<<< "" + CompanyName + "" MEDICAL ID REGISTRATION SYSTEM >>>>>"");
		System.out.println(""      "" + Branch);
		System.out.println(""\n                    What would you like to do?"");
            System.out.println(""\n1> REGISTER a new account             2> OPEN an existing account\n3> DELETE an existing account         4> DISPLAY all accounts\n5> EXIT the program"");
            isclosed = false;
            isdone = false;
            reset();
            userinput = """";
            userinput = ir.nextLine();
            if(userinput.equalsIgnoreCase(""1"") ||userinput.equalsIgnoreCase(""REGISTER"") ){
                GetData();
		        display();
		        WToFile();
		        writedata();
		        System.out.println(""\nFILE SUCCESFULLY SAVED!"");
		        System.out.print(""\nWould You Like to Create Another Account(YES/NO)? "");
		        userinput = """";
		        do {
		    userinput = ir.nextLine();
		    if(userinput.equalsIgnoreCase(""NO"") || userinput.equalsIgnoreCase(""N"")){
		    isdone = true;
		} else if(userinput.equalsIgnoreCase(""YES"") || userinput.equalsIgnoreCase(""Y"")){
		    isdone = true;
		} else {
		    System.out.println(""\nINVALID INPUT, PLEASE TRY AGAIN"");
		}
		} while (isdone == false);
		
            } else if(userinput.equalsIgnoreCase(""2"") ||userinput.equalsIgnoreCase(""OPEN"")){
                    ReadFile();
            } else if(userinput.equalsIgnoreCase(""3"") ||userinput.equalsIgnoreCase(""DELETE"")) {
                DelFil();
            } else if(userinput.equalsIgnoreCase(""4"") ||userinput.equalsIgnoreCase(""DISPLAY"")){
                DisDir();
                System.out.println(""\n\n"");
            }else if(userinput.equalsIgnoreCase(""5"") ||userinput.equalsIgnoreCase(""EXIT"")) {
                
                for(int i=0; i!= 999; i++) {
                    
                    userinput = """";
                System.out.println(""ARE YOU SURE?"");
                    userinput= ir.nextLine();
                    if(userinput.equalsIgnoreCase(""NO"") || userinput.equalsIgnoreCase(""N"")){
		    break;
		} else if(userinput.equalsIgnoreCase(""YES"") || userinput.equalsIgnoreCase(""Y"")){
		    isclosed = true;
		    break;
		} else {
		    System.out.println(""\nINVALID INPUT, PLEASE TRY AGAIN"");
		}
                    
                
                    
                }
            } else {
                System.out.println(""\nINVALID INPUT, PLEASE TRY AGAIN"");
                System.out.print(""\033[H\033[2J"");
        System.out.flush();
            }
            
		
        }while (isclosed == false );
		System.out.print(""\033[H\033[2J"");
        System.out.flush();
		
	}
}
"
QxNCQSwf,circles,Nojus_Globys,Java,Wednesday 24th of May 2023 07:43:58 AM CDT,"void setup () {
    size (1200, 800);
    for (int i = 0; i < 20; ++i){
        fill (random (255));
        circle (random (width), random (height), random (width/10));
    }
}"
N7tknpcc,falling,Nojus_Globys,Java,Wednesday 24th of May 2023 07:43:17 AM CDT,"
float [] X;
float [] Y;
float [] size;
float [] speed;

int quantity = 20;

void setup () {
    size (1000, 800);
    
    X = new float [quantity];
    Y = new float [quantity];
    size = new float [quantity];
    speed = new float [quantity];
    
    for (int i = 0; i < quantity; ++i){
        X [i] = random (width);
        Y [i] = random (height);
        size [i] = random (width * 0.1);
        speed [i] = random (height * 0.002, height * 0.01);
        
    }
}

void draw () {
    background (0);
    for (int i = 0; i < quantity; ++i){
        circle (X[i], Y[i], size [i]);
        Y[i] += speed [i];
    }
}"
HRSYbxHT,grad solution,mmayoub,Python,Wednesday 24th of May 2023 07:38:58 AM CDT,"class Gradiant:
    M = 3
    
    @staticmethod
    def g(i, x):
        if i == 0:
            return x * x - 5 * x + 4
        elif i == 1:
            return x * x - 3 * x
        else:
            return x * x - 2 * x
    
    @staticmethod
    def grad(i, x):
        if i == 0:
            return 2 * x - 5
        elif i == 1:
            return 2 * x - 3
        else:
            return 2 * x - 2
    
    @staticmethod
    def nextX(i, x):
        g_val = Gradiant.g(i, x)
        if g_val <= 0:
            return x
        grd = Gradiant.grad(i, x)
        return x - (g_val / grd)
    
    @staticmethod
    def findZero(i, x):
        print()
        print(f""start finding zero point for g{i+1} from x={x}"")
        while Gradiant.g(i, x) > 0:
            print(f""g{i+1}({x}) = {Gradiant.g(i, x)}"")
            x = Gradiant.nextX(i, x)
        print(f""zero point found for g{i+1} at x={x}"")
        return x
    
    @staticmethod
    def findRangEdge(x):
        for i in range(Gradiant.M):
            x = Gradiant.findZero(i, x)
        print(f""range edge found at x = {x}"")
        return x
    
low = Gradiant.findRangEdge(-5)
print(f""Range low = {low}"")
high = Gradiant.findRangEdge(low + 2)
print(f""Range high = {high}"")
"
3qHy4WhZ,PhoenixDex Abilities,TechSkylander1518,Ruby,Wednesday 24th of May 2023 07:32:10 AM CDT,"#Function not yet coded
[AERIALIST]
Name = Aerialist
Description = Moves can strike any target regardless of position.
[AMPLIFY]
Name = Amplify
Description = Powers up sound-based moves.
AbilityEffects::DamageCalcFromUser.copy(:PUNKROCK, :AMPLIFY)
[BEGUILE]
Name = Beguile
Description = Lowers the opposing Pokémon’s Special Attack stat.
#This ability also takes effect when acquired during a battle, but will not take effect again if lost and reobtained without leaving battle.
#This ability has no effect on an opponent that has a Substitute, or on opponents with the abilities Inner Focus, Oblivious, Own Tempo, or Scrappy.
#Not sure if it should make the same checks as Intimidate, so they've been commented out. 
Battle::AbilityEffects::OnSwitchIn.add(:BEGUILE,
  proc { |ability, battler, battle, switch_in|
    battle.pbShowAbilitySplash(battler)
    battle.allOtherSideBattlers(battler.index).each do |b|
      next if !b.near?(battler)
      check_item = true
      if b.hasActiveAbility?(:CONTRARY)
        check_item = false if b.statStageAtMax?(:SPECIAL_ATTACK)
      elsif b.statStageAtMin?(:SPECIAL_ATTACK)
        check_item = false
      end
      #check_ability = b.pbLowerAttackStatStageIntimidate(battler)
      #b.pbAbilitiesOnIntimidated if check_ability
      #b.pbItemOnIntimidatedCheck if check_item
    end
    battle.pbHideAbilitySplash(battler)
  }
)

[BENEVOLENCE]
Name = Benevolence
Description = The Pokémon and its allies restore a little HP each turn.
#I'm assuming Heal Block prevents it
#Need to get the self heal
Battle::AbilityEffects::EndOfRoundHealing.add(:BENEVOLENCE,
  proc { |ability, battler, battle|
    battler.allAllies.each do |b|
      next if !b.canHeal? || !b.near?(battler)
      battle.pbShowAbilitySplash(battler)
      b.pbRecoverHP(b.totalhp / 16)
      battle.pbDisplay(_INTL(""{1}'s {2} restored its partner's HP!"", battler.pbThis, battler.abilityName))
      battle.pbHideAbilitySplash(battler)
    end
  }
)

[BOMBARDIER]
Name = Bombardier
Description = Powers up ball and bomb moves.
Battle::AbilityEffects::DamageCalcFromUser.add(:BOMBARDIER,
  proc { |ability, user, target, move, mults, baseDmg, type|
    mults[:attack_multiplier] *= 1.3 if move.bombMove?
  }
)
[CASTOFF]
Name = Cast Off
Description = Restores the Pokémon's lost stats at the end of the turn.

Battle::AbilityEffects::EndOfRoundEffect.add(:CASTOFF,
  proc { |ability, battler, battle|
    if battler.hasLoweredStatStages?
      GameData::Stat.each_battle { |s| battler.stages[s.id] = 0 if battler.stages[s.id] < 0 }
    end
    battle.pbDisplay(_INTL(""{1}'s {2} restored its lowered stats!"", battler.pbThis, battler.abilityName))
  }
)

#Function not coded yet
[CRESCENDO]
Name = Crescendo
Description = Multi-strike moves increase in power with each hit.
[CURSEDFANGS]
Name = Cursed Fangs
Description = Bites from this Pokémon spread this ability.
#Need to add bite flag for Super Fang 
#Should target still need to be affected by contact effects? 
Battle::AbilityEffects::OnDealingHit.add(:CURSEDFANGS,
  proc { |ability, user, target, move, battle|
    next if !move.bitingMove?
    next if target.fainted?
    next if target.unstoppableAbility? || target.ability == ability
    oldAbil = nil
    battle.pbShowAbilitySplash(target) if target.opposes?(user)
    if target.affectedByContactEffect?(Battle::Scene::USE_ABILITY_SPLASH)
      oldAbil = target.ability
      battle.pbShowAbilitySplash(target, true, false) if target.opposes?(user)
      target.ability = ability
      battle.pbReplaceAbilitySplash(target) if target.opposes?(user)
      if Battle::Scene::USE_ABILITY_SPLASH
        battle.pbDisplay(_INTL(""{1}'s Ability became {2}!"", target.pbThis, target.abilityName))
      else
        battle.pbDisplay(_INTL(""{1}'s Ability became {2} because of {3}!"",
           target.pbThis, target.abilityName, user.pbThis(true)))
      end
      battle.pbHideAbilitySplash(target) if target.opposes?(user)
    end
    battle.pbHideAbilitySplash(user) if target.opposes?(user)
    target.pbOnLosingAbility(oldAbil)
    target.pbTriggerAbilityOnGainingIt
  }
)

[DIABOLATE]
Name = Diabolate
Description = Normal-type moves become Dark-type moves.
Battle::AbilityEffects::ModifyMoveBaseType.add(:DIABOLATE,
  proc { |ability, user, move, type|
    next if type != :NORMAL || !GameData::Type.exists?(:DARK)
    move.powerBoost = true
    next :DARK
  }
)
Battle::AbilityEffects::DamageCalcFromUser.copy(:AERILATE, :DIABOLATE)

[DRAFTRIDER]
Name = Draft Rider
Description = Boosts the Speed stat when it’s hit by a Flying-type move.

Battle::AbilityEffects::OnBeingHit.add(:DRAFTRIDER,
  proc { |ability, user, target, move, battle|
    next if ![:FLYING].include?(move.calcType)
    target.pbRaiseStatStageByAbility(:SPEED, 1, target)
  }
)

#In-battle effect not yet created
[ECLIPSEVEIL]
Name = Eclipse Veil
Description = Boosts the Pokémon's evasion when it enters a battle.
#On the turn this Pokémon enters battle, including the very first turn of battle, this Pokémon has 1.5× its evasion. Its evasion returns to normal at the end of that turn.
#The evasion bonus does not count as a stat modifier.
#Script section Overworld_WildEncounters, find this line:
        when :STENCH, :WHITESMOKE, :QUICKFEET
#Add :ECLIPSEVEIL to the list, like so
        when :STENCH, :WHITESMOKE, :QUICKFEET, :ECLIPSEVEIL


[FIGHTINGSPIRIT]
Name = Fighting Spirit
Description = Powers up Fighting-type moves when the Pokémon is in trouble.
Battle::AbilityEffects::DamageCalcFromUser.add(:FIGHTINGSPIRIT,
  proc { |ability, user, target, move, mults, baseDmg, type|
    if user.hp <= user.totalhp / 3 && type == :FIGHTING
      mults[:attack_multiplier] *= 1.5
    end
  }
)

[FROZENARMOR]
Name = Frozen Armor
Description = Boosts the Defense stat when hit by an Ice-type move.
Battle::AbilityEffects::MoveImmunity.add(:FROZENARMOR,
  proc { |ability, user, target, move, type, battle, show_message|
    next target.pbMoveImmunityStatRaisingAbility(user, move, type,
       :ICE, :DEFENSE, 2, show_message)
  }
)
#In script section Battle_Battler, find this line:
    return false if hasActiveAbility?([:OVERCOAT, :ICEBODY, :SNOWCLOAK])
#Add :FROZENARMOR to the list, like so
    return false if hasActiveAbility?([:OVERCOAT, :ICEBODY, :SNOWCLOAK, :FROZENARMOR])
#In script section AI_Move_Utilities, under this line
      when :GRASS
        return true if target.hasActiveAbility?(:SAPSIPPER)
#Add
      when :ICE
        return true if target.hasActiveAbility?(:FROZENARMOR)

[GASGUZZLER]
Name = Gas Guzzler
Description = Doubles the Pokémon’s Speed stat in Miasma Terrain.
Battle::AbilityEffects::SpeedCalc.add(:GASGUZZLER,
  proc { |ability, battler, mult|
    next mult * 2 if battler.battle.field.terrain == :Miasma
  }
)
#This Pokémon's Speed is doubled during Miasma Terrain. Additionally, this Pokémon does not take damage from the miasma at the end of each turn. - will need to add that with Miasma Terrain effect


[GRASSCLOAK]
Name = Grass Cloak
Description = Boosts evasion in Grassy Terrain.
Battle::AbilityEffects::AccuracyCalcFromTarget.add(:GRASSCLOAK,
  proc { |ability, mods, user, target, move, type|
    mods[:evasion_multiplier] *= 1.25 if user.battle.field.terrain == :Grassy
  }
)
#Grassy Pelt checks if the user is on Grassy Terrain, so I followed the lead here.
#Script section Overworld_WildEncounters, under
        when :SANDVEIL
          if GameData::Weather.get($game_screen.weather_type).category == :Sandstorm
            encounter_chance /= 2
            min_steps_needed *= 2
          end
#Add:
        when :GRASSCLOAK
          terrain = $game_map.terrain_tag($game_player.x, $game_player.y)
          if terrain.land_wild_encounters || terrain.shows_grass_rustle
            encounter_chance /= 2
            min_steps_needed *= 2
          end

[GUARDDOWN]
Name = Guard Down
Description = Lowers the opposing Pokémon’s Defense stat.
#This ability also takes effect when acquired during a battle, but will not take effect again if lost and reobtained without leaving battle.
#This ability has no effect on an opponent that has a Substitute, or on opponents with the abilities Inner Focus, Oblivious, Own Tempo, or Scrappy.
#Not sure if it should make the same checks as Intimidate, so they've been commented out. 
#I'll need to write a form of pbLowerAttackStatStageIntimidate
Battle::AbilityEffects::OnSwitchIn.add(:GUARDDOWN,
  proc { |ability, battler, battle, switch_in|
    battle.pbShowAbilitySplash(battler)
    battle.allOtherSideBattlers(battler.index).each do |b|
      next if !b.near?(battler)
      check_item = true
      if b.hasActiveAbility?(:CONTRARY)
        check_item = false if b.statStageAtMax?(:DEFENSE)
      elsif b.statStageAtMin?(:DEFENSE)
        check_item = false
      end
      #check_ability = b.pbLowerAttackStatStageIntimidate(battler)
      #b.pbAbilitiesOnIntimidated if check_ability
      #b.pbItemOnIntimidatedCheck if check_item
    end
    battle.pbHideAbilitySplash(battler)
  }
)
[HEATWALL]
Name = Heat Wall
Description = Evaporates Water-type moves aimed at this Pokémon's team.
#Not sure if defense multiplier is correct, or if there should be a message abt it... also, description says they should be adjacent
Battle::AbilityEffects::MoveImmunity.add(:HEATWALL,
  proc { |ability, user, target, move, type, battle, show_message|
    next false if type != :WATER
    if show_message
      battle.pbShowAbilitySplash(target)
      if Battle::Scene::USE_ABILITY_SPLASH
        battle.pbDisplay(_INTL(""It doesn't affect {1}..."", target.pbThis(true)))
      else
        battle.pbDisplay(_INTL(""{1}'s {2} made {3} ineffective!"",
           target.pbThis, target.abilityName, move.name))
      end
      battle.pbHideAbilitySplash(target)
    end
    next true
  }
)
Battle::AbilityEffects::DamageCalcFromTargetAlly.add(:HEATWALL,
  proc { |ability, user, target, move, mults, baseDmg, type|
    mults[:defense_multiplier] *= 1.5 if type == :WATER
  }
)
[INDOMITABLE]
Name = Indomitable
Description = Restores the Pokémon's lost stats at the end of the turn.
AbilityEffects::EndOfRoundEffect.copy(:CASTOFF, :INDOMITABLE)

[LASTDITCH]
Name = Last-Ditch
Description = Powers up Dark-type moves when the Pokémon is in trouble.
Battle::AbilityEffects::DamageCalcFromUser.add(:LASTDITCH,
  proc { |ability, user, target, move, mults, baseDmg, type|
    if user.hp <= user.totalhp / 3 && type == :DARK
      mults[:attack_multiplier] *= 1.5
    end
  }
)
#Not yet coded
[LUCKYCOIN]
Name = Lucky Coin
Description = The Pokémon may pick up loose change after battle.
#After each battle, this Pokémon has a 10% chance of picking up 500P.
#This ability is checked after the battle ends, at which point any temporary ability changes have worn off.

[LUCKYSHOT]
Name = Lucky Shot
Description = Boosts the Attack and Special Attack stats, but lowers accuracy.
Battle::AbilityEffects::AccuracyCalcFromUser.add(:LUCKYSHOT,
  proc { |ability, mods, user, target, move, type|
    mods[:accuracy_multiplier] *= 0.8
  }
)
Battle::AbilityEffects::DamageCalcFromUser.add(:LUCKYSHOT,
  proc { |ability, user, target, move, mults, baseDmg, type|
    mults[:attack_multiplier] *= 1.3
  }
)


[MIASMASURGE]
Name = Miasma Surge
Description = Turns the ground into Miasma Terrain when the Pokémon enters a battle.
Battle::AbilityEffects::OnSwitchIn.add(:MIASMASURGE,
  proc { |ability, battler, battle, switch_in|
    next if battle.field.terrain == :Miasma
    battle.pbShowAbilitySplash(battler)
    battle.pbStartTerrain(battler, :Miasma)
    # NOTE: The ability splash is hidden again in def pbStartTerrain.
  }
)

#Need to get the calculation still
[NINECURSES]
Name = Nine Curses
Description = Special Attacks do more damage the more the Pokémon has been harmed.
Battle::AbilityEffects::DamageCalcFromUser.add(:NINECURSES,
  proc { |ability, user, target, move, mults, baseDmg, type|
    if move.specialMove?
      mults[:attack_multiplier] *= 1.5
    end
  }
)

#Not yet been coded
[OVERZEALOUS]
Name = Overzealous
Description = Moves have an increased chance to cause flinching.
#https://phoenixdex.alteredorigin.net/abilities/overzealous/


[PLAYDEAD]
Name = Play Dead
Description = Gives full immunity to all Normal- and Fighting-type moves.
Battle::AbilityEffects::MoveImmunity.add(:PLAYDEAD,
  proc { |ability, user, target, move, type, battle, show_message|
    next false if ![:NORMAL,:FIGHTING].include?(type) || user.hasActiveAbility?(:SCRAPPY)
    if show_message
      battle.pbShowAbilitySplash(target)
      if Battle::Scene::USE_ABILITY_SPLASH
        battle.pbDisplay(_INTL(""It doesn't affect {1}..."", target.pbThis(true)))
      else
        battle.pbDisplay(_INTL(""{1}'s {2} made {3} ineffective!"",
           target.pbThis, target.abilityName, move.name))
      end
      battle.pbHideAbilitySplash(target)
    end
    next true
  }
)
#Not yet coded
[RAVENOUS]
Name = Ravenous
Description = Greedily steals the target’s energy with a bite.
#https://phoenixdex.alteredorigin.net/abilities/ravenous/

#Not yet coded
[REVERBERATE]
Name = Reverberate
Description = The Pokémon makes harmful sound waves echo back at attackers.
https://phoenixdex.alteredorigin.net/abilities/reverberate/

#Not yet coded
[SABOTEUR]
Name = Saboteur
Description = Moves can be used on the target regardless of its held items.
https://phoenixdex.alteredorigin.net/abilities/saboteur/

#Not yet coded
[SCORNFUL]
Name = Scornful
Description = Doubles stat drops caused by this Pokémon's moves.
https://phoenixdex.alteredorigin.net/abilities/scornful/


[SIDESTEP]
Name = Sidestep
Description = Avoids traps and hazards when entering battle.

#I figure the simplest thing to do here is to go to this line in Battle_ActionSwitching
      pbEntryHazards(b)
#And change it to
      pbEntryHazards(b) unless b.hasActiveAbility?(:SIDESTEP)
#This would skip the whole entry hazard check. But that means a Poison-type wouldn't remove Toxic Spikes, and if you wanted an entry hazard that affected a Pokemon with Sidestep, you'd be out of luck...

#Not yet been coded
[SIPHON]
Name = Siphon
Description = Recovers more HP from HP-stealing moves.
https://phoenixdex.alteredorigin.net/abilities/siphon/


[SOLARBOOST]
Name = Solar Boost
Description = Boosts the Pokémon’s Speed stat in sunshine.
AbilityEffects::DamageCalcFromUser.copy(:CHLOROPHYLL, :SOLARBOOST)


[SPIRITCALL]
Name = Spirit Call
Description = Draws in all Ghost-type moves to boost its Sp. Atk stat.
Battle::AbilityEffects::MoveImmunity.add(:SPIRITCALL,
  proc { |ability, user, target, move, type, battle, show_message|
    next target.pbMoveImmunityStatRaisingAbility(user, move, type,
       :GHOST, :SPECIAL_ATTACK, 1, show_message)
  }
)
Battle::AbilityEffects::AccuracyCalcFromTarget.add(:SPIRITCALL,
  proc { |ability, mods, user, target, move, type|
    mods[:base_accuracy] = 0 if type == :GHOST
  }
)
#In Battler_UseMoveTargeting, under this line
    targets = pbChangeTargetByAbility(:STORMDRAIN, :WATER, move, user, targets, priority, nearOnly)
add
    targets = pbChangeTargetByAbility(:SPIRITCALL, :GHOST, move, user, targets, priority, nearOnly)
#In AI_Move_Utilities, under this section
      when :FIRE
        return true if target.hasActiveAbility?(:FLASHFIRE)
#Add
      when :GHOST
        return true if target.hasActiveAbility?(:SPIRITCALL)
#In AI_Move_EffectScores_3, under this line
           (b.hasActiveAbility?(:LIGHTNINGROD) && move.pbCalcType == :ELECTRIC) ||
#add
           (b.hasActiveAbility?(:SPIRITCALL) && move.pbCalcType == :GHOST) ||

#In Overworld_WildEncounters, under this section
when :STORMDRAIN
        favored_type = :WATER if Settings::MORE_ABILITIES_AFFECT_WILD_ENCOUNTERS &&
                                 GameData::Type.exists?(:WATER) && rand(100) < 50
#add
when :SPIRITCALL
        favored_type = :GHOST if GameData::Type.exists?(:GHOST) && rand(100) < 50

#Not yet coded. Same as Eclipse Veil
[STEAMCLOUD]
Name = Steam Cloud
Description = Boosts the Pokémon's evasion when it enters a battle.


[STREAMLINED]
Name = Streamlined
Description = Boosts resistance to Flying- and Water-type moves.
Battle::AbilityEffects::DamageCalcFromTarget.add(:STREAMLINED,
  proc { |ability, user, target, move, mults, baseDmg, type|
    mults[:base_damage_multiplier] /= 2 if [:WATER, :FLYING].include?(type)
  }
)


[THIRDEYE]
Name = Third Eye
Description = Powers up Psychic-type moves when the Pokémon is in trouble.
Battle::AbilityEffects::DamageCalcFromUser.add(:THIRDEYE,
  proc { |ability, user, target, move, mults, baseDmg, type|
    if user.hp <= user.totalhp / 3 && type == :PSYCHIC
      mults[:attack_multiplier] *= 1.5
    end
  }
)

#Not yet coded
[TOUGHHIDE]
Name = Tough Hide
Description = Thick skin prevents extra side-effects on contact.
#Pretty sure you would jsut edit this in Battle_Battler
  def affectedByContactEffect?(showMsg = false)
    return false if fainted?
    if hasActiveItem?(:PROTECTIVEPADS)
      @battle.pbDisplay(_INTL(""{1} protected itself with the {2}!"", pbThis, itemName)) if showMsg
      return false
    end
    return true
  end"
caaLL4Gj,Untitled,Januschan,C#,Wednesday 24th of May 2023 07:26:09 AM CDT,"namespace SingleThreadTasks;

public class Snippets
{
    var scheduler = new ConcurrentExclusiveSchedulerPair();

// create a stop request source
    var stop = new CancellationTokenSource();

// this will run on a specific thread
    var task = Task.Factory.StartNew(MyAction,
            stop.Token,
            stop.Token,
            TaskCreationOptions.DenyChildAttach,
            scheduler.ExclusiveScheduler);

        ... do something

// this is how to schedule a task on the *same* thread.
// a moral equivalent of BeginInvoke in UI-oriented scenarios like Winforms of WPF but w/o
// any dependencies on those frameworks)
        Task.Factory.StartNew(() =>
    {
        ... do something that will run on the scheduler's thread

    }, CancellationToken.None, TaskCreationOptions.DenyChildAttach, scheduler.ExclusiveScheduler);

    ... do something

// this is how to request the thread to stop
        stop.Cancel();

// the one-thread code
    static async void MyAction(object state)
    {
        var stop = (CancellationToken)state;

        // do something useful. all this could be in a loop, while, etc. ....

        // sometimes, regularly, check for the stop and quit if requested
        if (stop.IsCancellationRequested)
            return; // end of thread is here

        // do something useful ....

        // sometimes, regularly, let other scheduled tasks run.
        // they will run on *this* thread
        await Task.Yield();

        // do something useful, loop, etc. ....
        // end of thread is not here!
    }
}"
mCR6qqQu,Bye pastebin,EXOTIC_HUBX,Lua,Wednesday 24th of May 2023 07:13:35 AM CDT,"I've moved to GitHub, If you want an open source Roblox script you can check my github profile. :)

Github: https://github.com/Sidhsksjsjsh"
kGuKHBwD,Datalayer Updates 24-05-23,AnandSAA,JSON,Wednesday 24th of May 2023 06:34:15 AM CDT,"https://trueface-test.cobone.net/en/deals/activities-dubai/1-desert-safari-festive-payless-tourism/103632

Wishlist (1st option - single)
items: [
{
	item_id: ""103632"",
	item_name: ""Option 1: BBQ dinner at the desert with Live ente"" +
	           ""rtainment"",
	affiliation: ""Cobone Web Store"",
	discount: 76,
	index: 0,
	item_brand: ""Payless Tourism"",
	item_category: ""Activities"",
	location_id: ""dubai"",
	price: 24,
	quantity: 1
}

View Item (1st option - single)
items: [
{
	item_id: ""103632"",
	item_name: ""Option 1: BBQ dinner at the desert with Live ente"" +
	           ""rtainment"",
	affiliation: ""Cobone Web Store"",
	discount: 76,
	index: 0,
	item_brand: ""Payless Tourism"",
	item_category: ""Activities"",
	location_id: ""dubai"",
	price: 24,
	quantity: 1
}


Add to cart (Specific option - multiple)
items: [
{
	item_id: 103633,
	item_name: ""Option 2: Desert safari with BBQ dinner and live "" +
	           ""entertainment"",
	affiliation: ""Cobone Web Store"",
	discount: 87,
	index: 0,
	item_brand: ""Payless Tourism"",
	item_category: ""Activities"",
	location_id: ""dubai"",
	price: 33,
	quantity: 4
}

View cart (Specific option - multiple)
items: [
{
	item_id: ""103633"",
	item_name: ""Festive Desert Safari with Transportation"",
	affiliation: ""Cobone Web Store"",
	discount: 87,
	index: 0,
	item_brand: ""Payless Tourism"",
	item_category: ""Activities"",
	location_id: ""dubai"",
	price: 33,
	quantity: 4
}

Begin checkout (Specific option - multiple)
items: [
{
	item_id: ""103633"",
	item_name: ""Festive Desert Safari with Transportation"",
	affiliation: ""Cobone Web Store"",
	discount: 87,
	index: 0,
	item_brand: ""Payless Tourism"",
	item_category: ""Activities"",
	location_id: ""dubai"",
	price: 33,
	quantity: 4
}

Purchase (Specific option - multiple)
items: [
{
	item_id: ""103633"",
	item_name: ""Option 2:&#160;Desert safari with BBQ dinner and "" +
	           ""live entertainment"",
	affiliation: ""Cobone Web Store"",
	coupon: """",
	discount: 0,
	index: 0,
	item_brand: ""Payless Tourism"",
	item_category: ""Desert Safaris"",
	location_id: ""dubai"",
	price: 33,
	quantity: 4
}
]


item_name (Change {slug}-{id})
discount (Purchase event going as 0)
item_category (All events - Pass the same as what is passed in old one)"
YEG0u7tY,Review FINQ,fxvnpro,PHP,Wednesday 24th of May 2023 06:31:11 AM CDT,https://www.fxvnpro.com/review-finq/
Basb9ajy,PhoenixDex Items,TechSkylander1518,Ruby,Wednesday 24th of May 2023 06:15:31 AM CDT,"https://phoenixdex.alteredorigin.net/items/
#Fossils
[CRESTFOSSIL]
Name = Crest Fossil
NamePlural = Crest Fossils
Pocket = 1
Price = 7000
Flags = Fossil,Fling_100
Description = A fossil from a prehistoric Pokémon that once lived on the land. It looks as if it could be part of a crest.
[HAMMERFOSSIL]
Name = Hammer Fossil
NamePlural = Hammer Fossils
Pocket = 1
Price = 7000
Flags = Fossil,Fling_100
Description = A fossil from a prehistoric Pokémon that once lived on the land. It is thick and heavy like a hammer.

#Cro-Cola - Not sure abt price
[CROCOLA]
Name = Cro-Cola
NamePlural = Cro-Colas
Pocket = 2
Price = 300
FieldUse = OnPokemon
BattleUse = OnPokemon
Flags = Fling_30
Description = A delicious natural-sugar soft drink made and sold in Dia City. It can be used once to heal all the status conditions of a Pokémon.
ItemHandlers::UseOnPokemon.copy(:FULLHEAL, :CROCOLA)
ItemHandlers::CanUseInBattle.copy(:FULLHEAL, :CROCOLA)
ItemHandlers::BattleUseOnPokemon.copy(:FULLHEAL, :CROCOLA)
#AI - under this line
    allStatusItems.push(:RAGECANDYBAR) if Settings::RAGE_CANDY_BAR_CURES_STATUS_PROBLEMS
#add
    allStatusItems.push(:CROCOLA)


#Beserk Gene is in my oddities
#Beserk Helm is the same just non-consumable

#Maaphix items - based on Thick Club for Fling and Price
#May need AI score for the Pokemon itself? (Like, not the item with fling, but its effects on stats?)
#No effect for evos?
[DESERTCROOK]
Name = Desert Crook
NamePlural = Desert Crooks
Pocket = 1
Price = 1000
Flags = Fling_90
Description = An item to be held by Maaphix. A mysterious artifact shaped like a shepherd's crook, it raises the Attack stat.
Battle::ItemEffects::DamageCalcFromUser.add(:DESERTCROOK,
  proc { |item, user, target, move, mults, baseDmg, type|
    if (user.isSpecies?(:MAAPHIX) || user.isSpecies?(:KHERSIN)) && move.physicalMove?
      mults[:attack_multiplier] *= 2
    end
  }
)
[DESERTFLAIL]
Name = Desert Flail
NamePlural = Desert Flails
Pocket = 1
Price = 1000
Flags = Fling_90
Description = An item to be held by Maaphix. A mysterious artifact shaped like an overseer's flail, it raises the Sp. Atk stat.
Battle::ItemEffects::DamageCalcFromUser.add(:DESERTFLAIL,
  proc { |item, user, target, move, mults, baseDmg, type|
    if (user.isSpecies?(:MAAPHIX) || user.isSpecies?(:IMHATAN)) && move.specialMove?
      mults[:attack_multiplier] *= 2
    end
  }
)
#Black and White Jewels. Price and Fling may need to be reconsidered
[BLACKJEWEL]
Name = Black Jewel
NamePlural = Black Jewels
Pocket = 1
Price = 3000
SellPrice = 500
Flags = Fling_70
Description = An item to be held by Seviper or Seviron. It is a dark, sparkling stone that boosts the power of Poison-type moves.
Battle::ItemEffects::DamageCalcFromUser.add(:BLACKJEWEL,
  proc { |item, user, target, move, mults, baseDmg, type|
    mults[:base_damage_multiplier] *= 1.3 if type == :POISON && [:SEVIPER,:SEVIRON].include?(user.species)
  }
)
[WHITEJEWEL]
Name = White Jewel
NamePlural = White Jewels
Pocket = 1
Price = 3000
SellPrice = 500
Flags = Fling_70
Description = An item to be held by Zangoose or Zanthera. It is a pale, sparkling stone that boosts the power of Normal-type moves.
Battle::ItemEffects::DamageCalcFromUser.add(:WHITEJEWEL,
  proc { |item, user, target, move, mults, baseDmg, type|
    mults[:base_damage_multiplier] *= 1.3 if type == :NORMAL && [:ZANGOOSE,:ZANTHERA].include?(user.species)
  }
#Mega Stones:
[ARCANITE]
Name = Arcanite
NamePlural = Arcanites
Pocket = 1
Price = 0
Flags = MegaStone,Fling_80
Description = One of a variety of mysterious Mega Stones. Have Arcanine hold it, and it will be able to Mega Evolve.
[CHANTIRRINITE]
Name = Chantirrinite
NamePlural = Chantirrinites
Pocket = 1
Price = 0
Flags = MegaStone,Fling_80
Description = One of a variety of mysterious Mega Stones. Have Chantirrus hold it, and it will be able to Mega Evolve.
[KHARGONITE]
Name = Khargonite
NamePlural = Khargonites
Pocket = 1
Price = 0
Flags = MegaStone,Fling_80
Description = One of a variety of mysterious Mega Stones. Have Khargonaut hold it, and it will be able to Mega Evolve.
[NINETALESITE]
Name = Ninetalesite
NamePlural = Ninetalesites
Pocket = 1
Price = 0
Flags = MegaStone,Fling_80
Description = One of a variety of mysterious Mega Stones. Have Ninetales hold it, and it will be able to Mega Evolve.
[RAMFERITE]
Name = Ramferite
NamePlural = Ramferites
Pocket = 1
Price = 0
Flags = MegaStone,Fling_80
Description = One of a variety of mysterious Mega Stones. Have Ramfere hold it, and it will be able to Mega Evolve.
#Marvel Scale equivalents for Contest Stat-based evos. Price and Fling was based on Marvel Scale.
[BRAVEBRACER]
Name = Prism Scale
NamePlural = Brave Bracer
Pocket = 1
Price = 3000
SellPrice = 1000
Flags = Fling_30
Description = A mysterious armband that causes a certain Pokémon to evolve. It is tattered and worn from use in many battles.
[ELITESCALE]
Name = Elite Scale
NamePlural = Elite Scales
Pocket = 1
Price = 3000
SellPrice = 1000
Flags = Fling_30
Description = A mysterious scale that causes a certain Pokémon to evolve. It is tough, shiny and sought after by collectors.
[SAGECRYSTAL]
Name = Sage Crystal
NamePlural = Sage Crystals
Pocket = 1
Price = 3000
SellPrice = 1000
Flags = Fling_30
Description = A mysterious scale that causes a certain Pokémon to evolve. It glows with a strange, brilliant light.
#I'm not sure if it's supposed to be a scale, but that's what the desc on the site says.
[SNOWCROWN]
Name = Snow Crown
NamePlural = Snow Crowns
Pocket = 1
Price = 3000
SellPrice = 1000
Flags = Fling_30
Description = A mysterious crown that causes a certain Pokémon to evolve. It glitters prettily in the light."
phPg6Emt,ajax #2,rizkyxp,PHP,Wednesday 24th of May 2023 06:09:43 AM CDT,"$(document).ready(function() {
    // Ambil token dari cookie
    var token = getCookie('token');
    
    // Kirim request AJAX untuk memvalidasi token dan mengambil data pengguna
    $.ajax({
        url: 'api.php',
        method: 'GET',
        headers: {'Authorization': 'Bearer ' + token},
        dataType: 'json',
        success: function(data) {
            // Tampilkan data pengguna pada halaman
            $('#username').text(data.username);
        },
        error: function(xhr, status, error) {
            // Redirect ke halaman login jika token tidak valid
            window.location.href = 'login.php';
        }
    });
});

// Fungsi untuk mengambil nilai cookie berdasarkan namanya
function getCookie(name) {
    var value = '; ' + document.cookie;
    var parts = value.split('; ' + name + '=');
    if (parts.length == 2) {
        return parts.pop().split(';').shift();
    }
}
"
ALqivB5w,ajax #1,rizkyxp,JavaScript,Wednesday 24th of May 2023 06:07:40 AM CDT,"$(document).ready(function() {
    $('#login-form').submit(function(event) {
        event.preventDefault();
        
        // Ambil data username dan password dari form
        var username = $('#username').val();
        var password = $('#password').val();
        
        // Kirim request AJAX untuk login
        $.ajax({
            url: 'login.php',
            method: 'POST',
            data: {username: username, password: password},
            dataType: 'json',
            success: function(data) {
                // Simpan token di cookie
                document.cookie = 'token=' + data.token + '; path=/';
                
                // Redirect ke halaman dashboard
                window.location.href = 'dashboard.php';
            },
            error: function(xhr, status, error) {
                // Tampilkan pesan error jika login gagal
                var response = JSON.parse(xhr.responseText);
                alert(response.error);
            }
        });
    });
});
"
BcVm2VSs,validasi.php #2,rizkyxp,PHP,Wednesday 24th of May 2023 06:06:05 AM CDT,"<?php
// Include library JWT
require_once 'vendor/autoload.php';

// Ambil token dari request header Authorization
$authorizationHeader = $_SERVER['HTTP_AUTHORIZATION'];
if (preg_match('/Bearer\s(\S+)/', $authorizationHeader, $matches)) {
    $token = $matches[1];
} else {
    // Kirim pesan error jika token tidak ditemukan
    http_response_code(401);
    echo json_encode(['error' => 'Token not found']);
    exit;
}

try {
    // Validasi token dengan secret key
    $payload = \Firebase\JWT\JWT::decode($token, 'secret_key', ['HS256']);
    
    // Kirim data pengguna sebagai JSON response
    echo json_encode([
        'username' => $payload->username
    ]);
} catch (\Firebase\JWT\ExpiredException $e) {
    // Kirim pesan error jika token sudah kadaluarsa
    http_response_code(401);
    echo json_encode(['error' => 'Token expired']);
} catch (\Exception $e) {
    // Kirim pesan error jika token tidak valid
    http_response_code(401);
    echo json_encode(['error' => 'Invalid token']);
}
?>
"
