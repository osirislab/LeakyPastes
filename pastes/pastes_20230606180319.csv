id,title,username,language,date,content
JwJQZ7Hj,BTC Wallet Credentials have been reset,biernarwh_30,GetText,Tuesday 6th of June 2023 12:59:39 PM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please disregard this message.
Your new login credentials will be 
mostowegoes:a6TVE7 on 193.233.202.76(SSH)
Regards"
XZJpbnRn,Untitled,erehh,MySQL,Tuesday 6th of June 2023 12:55:43 PM CDT,"--factory table
CREATE TABLE Factory(
factory_id INT PRIMARY KEY,
f_name VARCHAR (255),
f_location VARCHAR (255)
);

--branch table
CREATE TABLE Branch(
branch_id INT PRIMARY KEY,
branch_name VARCHAR(255),
branch_factory_id int,
FOREIGN KEY (branch_factory_id) REFERENCES Factory (factory_id)
);

--supplier table
CREATE TABLE Supplier(
supplier_id INT PRIMARY KEY,
supplier_name VARCHAR(255)
);

--water table
--price of 1L of water - 0.3
CREATE TABLE Water(
water_id VARCHAR(5) PRIMARY KEY,
water_source VARCHAR(255) NOT NULL,
amount_obtained INT NOT NULL,
water_price DECIMAL(4,2) DEFAULT 0.3,
date_obtained DATE NOT NULL
);

--bottle table
CREATE TABLE Bottle(
bottle_id VARCHAR(6) PRIMARY KEY,
supplier_id INT,
bottle_type VARCHAR(10) CHECK(bottle_type IN ('glass', 'plastic')),
bottle_price DECIMAL(4,2) NOT NULL,
bottle_amount INT NOT NULL,
FOREIGN KEY (supplier_id) REFERENCES Supplier ( supplier_id)
);

--update to the bottle table to set the price accordingly
--if plastic -0.3, if glass - 1.5, else 0
UPDATE Bottle
SET bottle_price = CASE	
	WHEN bottle_type = 'glass' THEN 1.5
	WHEN bottle_type = 'plastic' THEN 0.3
	ELSE 0
END;

--Product ( bottled water ) table 
CREATE TABLE Product(
product_id VARCHAR(9) PRIMARY KEY,
product_type VARCHAR(10) CHECK(product_type IN ('glass', 'plastic')),
bottle_id VARCHAR(6),
water_id VARCHAR(5),
product_price DECIMAL(6,2),
product_amount INT NOT NULL,
date_produced DATE NOT NULL,
date_shipped DATE,
FOREIGN KEY (bottle_id) REFERENCES Bottle (bottle_id),
FOREIGN KEY (water_id) REFERENCES Water (water_id)
);

-- Update the price values using the calculated formula. 
--price is equal to the sum of bottle and water price, plus 45%
UPDATE Product
SET product_price = 
(SELECT (Bottle.bottle_price + Water.water_price) * 1.45 
FROM Bottle, Water WHERE Bottle.bottle_id = Product.bottle_id AND Water.water_id = Product.water_id);

--person table, will be used for the manager and employee table
CREATE TABLE Person(
ssn VARCHAR(11) PRIMARY KEY,
);

--director table 
CREATE TABLE Director(
director_ssn VARCHAR(11),
factory_id INT,
FOREIGN KEY (director_ssn) REFERENCES Person(ssn),
FOREIGN KEY (factory_id) REFERENCES Factory(factory_id)
);
--manager table 
CREATE TABLE Manager(
manager_id VARCHAR(10) PRIMARY KEY,
manager_ssn VARCHAR(11) NOT NULL,
manager_name VARCHAR(255) NOT NULL,
manager_lname VARCHAR(255) NOT NULL,
factory_id INT NOT NULL,
branch_id INT NOT NULL,
FOREIGN KEY (manager_ssn) REFERENCES Person(ssn),
FOREIGN KEY (factory_id) REFERENCES Factory(factory_id),
FOREIGN KEY (branch_id) REFERENCES Branch(branch_id)
);

--employee table
CREATE TABLE Employee(
employee_ssn VARCHAR(11),
employee_name VARCHAR(255) NOT NULL,
employee_lname VARCHAR(255) NOT NULL,
employee_factory INT NOT NULL,
employee_branch INT NOT NULL,
FOREIGN KEY (employee_ssn) REFERENCES Person(ssn),
FOREIGN KEY (employee_factory) REFERENCES Factory(factory_id),
FOREIGN KEY (employee_branch) REFERENCES Branch(branch_id)
);

--store table 
CREATE TABLE Store(
store_id INT PRIMARY KEY,
store_name VARCHAR(255) NOT NULL,
product_id VARCHAR(9),
product_price DECIMAL(6,2),
product_amount_received INT,
date_received DATE,
FOREIGN KEY (product_id) REFERENCES Product(product_id)
);

--update the Store table to calculate the revenue received 
UPDATE STORE
SET product_price = (SELECT Product.product_price * Store.product_amount_received
                     FROM Product, Store 
                     WHERE Product.product_id = Store.product_id);
                     

--sales table
CREATE TABLE Sales(
store_id int,
revenue_date DATE NOT NULL,
revenue DECIMAL(7,2),
FOREIGN KEY (store_id) REFERENCES Store(store_id)
);

--update to Sales, revenue date is the same as the day the store received the products
UPDATE Sales
SET revenue_date = (SELECT Store.date_received 
					FROM Store);

----update to Sales, revenue is the same as the price paid by the store
UPDATE Sales
SET revenue = (SELECT Store.product_price
				FROM Store);

--salaries table
CREATE TABLE Salaries(
worker_ssn VARCHAR(11),
worker_branch_id INT,
worker_salary DECIMAL(7,2),
FOREIGN KEY (worker_ssn) REFERENCES Person(ssn),
FOREIGN KEY (worker_branch_id) REFERENCES Branch(branch_id)
);


--update to salaries table, each branch has its own salary
UPDATE salaries
SET worker_salary = 
    CASE
        WHEN worker_branch_id = 1 AND worker_ssn IN (SELECT manager_ssn FROM Manager) THEN 2500
        WHEN worker_branch_id = 1 AND worker_ssn IN (SELECT employee_ssn FROM Employee) THEN 1500
		WHEN worker_branch_id = 2 AND worker_ssn IN (SELECT manager_ssn FROM Manager) THEN 5500
        WHEN worker_branch_id = 2 AND worker_ssn IN (SELECT employee_ssn FROM Employee) THEN 3500
		WHEN worker_branch_id = 3 AND worker_ssn IN (SELECT manager_ssn FROM Manager) THEN 1700
        WHEN worker_branch_id = 3 AND worker_ssn IN (SELECT employee_ssn FROM Employee) THEN 900
    END;



--inserting info into the tables 

--inserting into the Factory table
INSERT INTO Factory
VALUES
	(1, 'kumisis wyaro', 'Kumisi'),
	(2, 'rustavis wyali', 'Rustavi');

--inserting into the branch table
INSERT INTO Branch (branch_id, branch_name, branch_factory_id)
SELECT 1, 'Water obtaining', factory_id FROM Factory WHERE factory_id = 1
UNION ALL
SELECT 2, 'Water filtration', factory_id FROM Factory WHERE factory_id = 1
UNION ALL
SELECT 3, 'water mineralisation', factory_id FROM Factory WHERE factory_id = 1
UNION ALL
SELECT 4, 'Bottling water', factory_id FROM Factory WHERE factory_id = 2
UNION ALL
SELECT 5, 'Warehouse ', factory_id FROM Factory WHERE factory_id = 2;

--inserting into the supplier table
INSERT INTO Supplier 
Values
	(1, 'Suramis gandzi'),
	(2, 'Pol-Ethyl');

--inserting into the water table 
INSERT INTO Water
VALUES 
	('W0001','Kumisi creek N1',7000,0.3,'2023-06-01'),
	('W0002','Kumisi creek N2',8500,0.3,'2023-06-01'),
	('W0003','Kumisi creek N3',2000,0.3,'2023-06-02'),
	('W0004','Kumisi creek N1',3500,0.3,'2023-06-03'),
	('W0005','Kumisi creek N2',6000,0.3,'2023-06-06');

--inserting into the bottle table 
INSERT INTO Bottle (bottle_id, supplier_id, bottle_type, bottle_price, bottle_amount)
SELECT 'BG0001', supplier_id, 'glass', 1.50, 100
FROM Supplier
WHERE supplier_name = 'Suramis gandzi';

INSERT INTO Bottle (bottle_id, supplier_id, bottle_type, bottle_price, bottle_amount)
SELECT 'BP0001', supplier_id, 'plastic', 0.3, 2300
FROM Supplier
WHERE supplier_name = 'Pol-Ethyl';

INSERT INTO Bottle (bottle_id, supplier_id, bottle_type, bottle_price, bottle_amount)
SELECT 'BG0002', supplier_id, 'glass', 1.50, 1550
FROM Supplier
WHERE supplier_name = 'Suramis gandzi';

INSERT INTO Bottle (bottle_id, supplier_id, bottle_type, bottle_price, bottle_amount)
SELECT 'BP0002', supplier_id, 'plastic', 0.3, 650
FROM Supplier
WHERE supplier_name = 'Pol-Ethyl';

INSERT INTO Bottle (bottle_id, supplier_id, bottle_type, bottle_price, bottle_amount)
SELECT 'BP0003', supplier_id, 'plastic', 0.3, 950
FROM Supplier
WHERE supplier_name = 'Pol-Ethyl';

INSERT INTO Bottle (bottle_id, supplier_id, bottle_type, bottle_price, bottle_amount)
SELECT 'BP0004', supplier_id, 'plastic', 0.3, 650
FROM Supplier
WHERE supplier_name = 'Pol-Ethyl';

INSERT INTO Bottle (bottle_id, supplier_id, bottle_type, bottle_price, bottle_amount)
SELECT 'BP0005', supplier_id, 'plastic', 0.3, 750
FROM Supplier
WHERE supplier_name = 'Pol-Ethyl';

INSERT INTO Bottle (bottle_id, supplier_id, bottle_type, bottle_price, bottle_amount)
SELECT 'BP0006', supplier_id, 'plastic', 0.3, 9000
FROM Supplier
WHERE supplier_name = 'Pol-Ethyl';

INSERT INTO Bottle (bottle_id, supplier_id, bottle_type, bottle_price, bottle_amount)
SELECT 'BP0007', supplier_id, 'plastic', 0.3, 7000
FROM Supplier
WHERE supplier_name = 'Pol-Ethyl';

INSERT INTO Bottle (bottle_id, supplier_id, bottle_type, bottle_price, bottle_amount)
SELECT 'BG0003', supplier_id, 'glass', 1.50, 550
FROM Supplier
WHERE supplier_name = 'Suramis gandzi';

INSERT INTO Bottle (bottle_id, supplier_id, bottle_type, bottle_price, bottle_amount)
SELECT 'BG0004', supplier_id, 'glass', 1.50, 1700
FROM Supplier
WHERE supplier_name = 'Suramis gandzi';

INSERT INTO Bottle (bottle_id, supplier_id, bottle_type, bottle_price, bottle_amount)
SELECT 'BG0005', supplier_id, 'glass', 1.50, 120
FROM Supplier
WHERE supplier_name = 'Suramis gandzi';

INSERT INTO Bottle (bottle_id, supplier_id, bottle_type, bottle_price, bottle_amount)
SELECT 'BG0006', supplier_id, 'glass', 1.50, 1200
FROM Supplier
WHERE supplier_name = 'Suramis gandzi';

INSERT INTO Bottle (bottle_id, supplier_id, bottle_type, bottle_price, bottle_amount)
SELECT 'BG0007', supplier_id, 'glass', 1.50, 1500
FROM Supplier
WHERE supplier_name = 'Suramis gandzi';

--inserting into the product table 
INSERT INTO Product (product_id, product_type, bottle_id, water_id, product_price, product_amount, date_produced, date_shipped)
VALUES ('P00000001', 'glass', (SELECT bottle_id FROM Bottle WHERE bottle_id = 'BG0001'), (SELECT water_id FROM Water WHERE water_id = 'W0001'), 2.50, 100, '2023-06-01', '2023-06-05');

INSERT INTO Product (product_id, product_type, bottle_id, water_id, product_price, product_amount, date_produced, date_shipped)
VALUES ('P00000002', 'plastic', (SELECT bottle_id FROM Bottle WHERE bottle_id = 'BP0002'), (SELECT water_id FROM Water WHERE water_id = 'W0002'), 1.00, 200, '2023-06-02', NULL);

INSERT INTO Product (product_id, product_type, bottle_id, water_id, product_price, product_amount, date_produced, date_shipped)
VALUES ('P00000003', 'glass', (SELECT bottle_id FROM Bottle WHERE bottle_id = 'BG0002'), (SELECT water_id FROM Water WHERE water_id = 'W0003'), 2.50, 150, '2023-06-03', '2023-06-06');

INSERT INTO Product (product_id, product_type, bottle_id, water_id, product_price, product_amount, date_produced, date_shipped)
VALUES ('P00000004', 'plastic', (SELECT bottle_id FROM Bottle WHERE bottle_id = 'BP0001'), (SELECT water_id FROM Water WHERE water_id = 'W0002'), 1.00, 300, '2023-06-04', NULL);

INSERT INTO Product (product_id, product_type, bottle_id, water_id, product_price, product_amount, date_produced, date_shipped)
VALUES ('P00000005', 'plastic', (SELECT bottle_id FROM Bottle WHERE bottle_id = 'BP0001'), (SELECT water_id FROM Water WHERE water_id = 'W0002'), 1.00, 300, '2023-06-04', NULL);

INSERT INTO Product (product_id, product_type, bottle_id, water_id, product_price, product_amount, date_produced, date_shipped)
VALUES ('P00000006', 'plastic', (SELECT bottle_id FROM Bottle WHERE bottle_id = 'BP0002'), (SELECT water_id FROM Water WHERE water_id = 'W0002'), 1.00, 300, '2023-06-04', NULL);

INSERT INTO Product (product_id, product_type, bottle_id, water_id, product_price, product_amount, date_produced, date_shipped)
VALUES ('P00000007', 'plastic', (SELECT bottle_id FROM Bottle WHERE bottle_id = 'BP0003'), (SELECT water_id FROM Water WHERE water_id = 'W0004'), 1.00, 300, '2023-06-04', NULL);

INSERT INTO Product (product_id, product_type, bottle_id, water_id, product_price, product_amount, date_produced, date_shipped)
VALUES ('P00000008', 'glass', (SELECT bottle_id FROM Bottle WHERE bottle_id = 'BG0001'), (SELECT water_id FROM Water WHERE water_id = 'W0003'), 2.50, 100, '2023-06-01', '2023-06-05');

INSERT INTO Product (product_id, product_type, bottle_id, water_id, product_price, product_amount, date_produced, date_shipped)
VALUES ('P00000009', 'glass', (SELECT bottle_id FROM Bottle WHERE bottle_id = 'BG0002'), (SELECT water_id FROM Water WHERE water_id = 'W0002'), 2.50, 100, '2023-06-01', '2023-06-05');

INSERT INTO Product (product_id, product_type, bottle_id, water_id, product_price, product_amount, date_produced, date_shipped)
VALUES ('P00000010', 'glass', (SELECT bottle_id FROM Bottle WHERE bottle_id = 'BG0003'), (SELECT water_id FROM Water WHERE water_id = 'W0001'), 2.50, 100, '2023-06-01', '2023-06-05');

--inserting into the person table 

INSERT INTO Person
VALUES
	('00000000001'),
	('00000000001'),
	('00000000001'),
	('00000000001'),
	('00000000001'),
	('00000000001'),
	('00000000001'),
	('00000000001'),
	('00000000001'),
	('00000000001'),
	('00000000001');




"
4JZD3MTd,Untitled,Don_Mag,Swift,Tuesday 6th of June 2023 12:41:46 PM CDT,"class ViewController: UIViewController {
	
	override func viewDidLoad() {
		super.viewDidLoad()
		
		let g = view.safeAreaLayoutGuide
		
		let gv = Gradient()
		gv.translatesAutoresizingMaskIntoConstraints = false
		view.addSubview(gv)
		
		NSLayoutConstraint.activate([
			gv.topAnchor.constraint(equalTo: g.topAnchor, constant: 20.0),
			gv.leadingAnchor.constraint(equalTo: g.leadingAnchor, constant: 20.0),
			gv.trailingAnchor.constraint(equalTo: g.trailingAnchor, constant: -20.0),
			gv.bottomAnchor.constraint(equalTo: g.bottomAnchor, constant: -20.0),
		])
		
		//gv.diagonalMode = true
		//gv.horizontalMode = true
		
		view.backgroundColor = .systemYellow
	}
	
}

class Gradient: UIView {
	var startColor:   UIColor = .white { didSet { updateColors() }}
	var endColor:     UIColor = .red { didSet { updateColors() }}
	var horizontalMode:  Bool =  false { didSet { updatePoints() }}
	var diagonalMode:    Bool =  false { didSet { updatePoints() }}
	
	override class var layerClass: AnyClass { CAGradientLayer.self }
	
	var gradientLayer: CAGradientLayer { layer as! CAGradientLayer }
	
	override init(frame: CGRect) {
		super.init(frame: frame)
		commonInit()
	}
	required init?(coder: NSCoder) {
		super.init(coder: coder)
		commonInit()
	}
	private func commonInit() {
		updatePoints()
		updateLocations()
		updateColors()
	}
	
	func updatePoints() {
		if horizontalMode {
			gradientLayer.startPoint = diagonalMode ? .init(x: 1, y: 0) : .init(x: 0, y: 0.5)
			gradientLayer.endPoint   = diagonalMode ? .init(x: 0, y: 1) : .init(x: 1, y: 0.5)
		} else {
			gradientLayer.startPoint = diagonalMode ? .init(x: 0, y: 0) : .init(x: 0.5, y: 0)
			gradientLayer.endPoint   = diagonalMode ? .init(x: 1, y: 1) : .init(x: 0.5, y: 1)
		}
	}
	func updateLocations() {
		gradientLayer.locations = [0, 0.5, 0.5, 1.0]
	}
	func updateColors() {
		gradientLayer.colors = [startColor.cgColor, startColor.cgColor, endColor.cgColor, endColor.cgColor]
	}
	
}
"
ip9mnpmN,NDS GUI 3,DashaBars,Lua,Tuesday 6th of June 2023 12:33:50 PM CDT,loadstring(game:HttpGet('https://raw.githubusercontent.com/DashaBars/Hack/main/NDS%20GUI%203.lua'))()
g50UkBkt,"Query 6 - Date Functions (GETDATE, DATEADD, DATEDIFF)",makispaiktis,SQL,Tuesday 6th of June 2023 12:30:01 PM CDT,"use [AdventureWorks2012]

-- Now date
SELECT GETDATE()
-- 2 days before
SELECT GETDATE()-2

-- DATEPART
SELECT DATEPART(yyyy, GETDATE()) AS YearNumber
SELECT DATEPART(mm, GETDATE()) AS MonthNumber
SELECT DATEPART(dd, GETDATE()) AS DayNumber

-- DATEADD
SELECT DATEADD(day, 4, GETDATE())
SELECT DATEADD(month, 4, GETDATE())
SELECT DATEADD(year, 10, GETDATE())
SELECT DATEADD(year, -10, '12/27/2040')

-- The 1st day of the month
SELECT DATEADD(dd, -DATEPART(day, GETDATE()-1), GETDATE())

-- Simple Date Queries
-- DATEDIFF
SELECT TOP 10 * FROM [Production].[WorkOrder]
SELECT TOP 10 WorkOrderID, ProductID, StartDate, EndDate, DATEDIFF(day, startDate, EndDate)
FROM [Production].[WorkOrder]

"
CGRBeqwH,hh_SQL,lizun228,SQL,Tuesday 6th of June 2023 12:26:43 PM CDT,"SELECT Products.Name AS ProductName, Categories.Name AS CategoryName
FROM Products
LEFT JOIN ProductCategory ON Products.ProductId = ProductCategory.ProductId
LEFT JOIN Categories ON ProductCategory.CategoryId = Categories.CategoryId;
"
SDrgPdQN,hh_unitTests,lizun228,C#,Tuesday 6th of June 2023 12:25:15 PM CDT,"using NUnit.Framework;
using ShapeLibrary;

namespace ShapeLibrary.Tests
{
    [TestFixture]
    public class ShapeTests
    {
        [Test]
        public void Circle_CalculateArea_ReturnsCorrectArea()
        {
            // Arrange
            Circle circle = new Circle(5);

            // Act
            double area = circle.CalculateArea();

            // Assert
            Assert.AreEqual(78.539816339744831, area, 0.000001);
        }

        [Test]
        public void Triangle_CalculateArea_ReturnsCorrectArea()
        {
            // Arrange
            Triangle triangle = new Triangle(3, 4, 5);

            // Act
            double area = triangle.CalculateArea();

            // Assert
            Assert.AreEqual(6, area);
        }

        [Test]
        public void Triangle_IsRightTriangle_ReturnsTrueForRightTriangle()
        {
            // Arrange
            Triangle triangle = new Triangle(3, 4, 5);

            // Act
            bool isRightTriangle = triangle.IsRightTriangle();

            // Assert
            Assert.IsTrue(isRightTriangle);
        }

        [Test]
        public void Triangle_IsRightTriangle_ReturnsFalseForNonRightTriangle()
        {
            // Arrange
            Triangle triangle = new Triangle(3, 4, 6);

            // Act
            bool isRightTriangle = triangle.IsRightTriangle();

            // Assert
            Assert.IsFalse(isRightTriangle);
        }
    }
}
"
i87kNQvX,hh_class,lizun228,C#,Tuesday 6th of June 2023 12:24:13 PM CDT,"using System;

namespace ShapeLibrary
{
    public interface IShape
    {
        double CalculateArea();
    }

    public class Circle : IShape
    {
        public double Radius { get; }

        public Circle(double radius)
        {
            Radius = radius;
        }

        public double CalculateArea()
        {
            return Math.PI * Radius * Radius;
        }
    }

    public class Triangle : IShape
    {
        public double SideA { get; }
        public double SideB { get; }
        public double SideC { get; }

        public Triangle(double sideA, double sideB, double sideC)
        {
            SideA = sideA;
            SideB = sideB;
            SideC = sideC;
        }

        public double CalculateArea()
        {
            double semiPerimeter = (SideA + SideB + SideC) / 2;
            return Math.Sqrt(semiPerimeter * (semiPerimeter - SideA) * (semiPerimeter - SideB) * (semiPerimeter - SideC));
        }

        public bool IsRightTriangle()
        {
            double sideASquare = SideA * SideA;
            double sideBSquare = SideB * SideB;
            double sideCSquare = SideC * SideC;

            return (sideASquare == sideBSquare + sideCSquare) ||
                   (sideBSquare == sideASquare + sideCSquare) ||
                   (sideCSquare == sideASquare + sideBSquare);
        }
    }
}"
GCk7GJJS,BMP blackpill-f4 DFU,ALTracer,Diff,Tuesday 6th of June 2023 12:22:54 PM CDT,"From ea411bd77fcec6c19b2cd80c554d68bc24451b64 Mon Sep 17 00:00:00 2001
From: Denis Tolstov <dtolstov@vniir.ru>
Date: Tue, 6 Jun 2023 20:02:40 +0300
Subject: [PATCH 1/3] platforms/blackpill-f4: Allow external debugging

* Dispatch newlib/libgloss as nosys or rdimon
* Enable nano.specs to reduce firmware size
* Declare debugging available as on native
---
 src/platforms/common/blackpill-f4/Makefile.inc   | 9 ++++++++-
 src/platforms/common/blackpill-f4/blackpill-f4.h | 5 +++++
 2 files changed, 13 insertions(+), 1 deletion(-)

diff --git a/src/platforms/common/blackpill-f4/Makefile.inc b/src/platforms/common/blackpill-f4/Makefile.inc
index 62a6cf6..e552036 100644
--- a/src/platforms/common/blackpill-f4/Makefile.inc
+++ b/src/platforms/common/blackpill-f4/Makefile.inc
@@ -15,11 +15,11 @@ CFLAGS +=                           \
 	-Iplatforms/common/blackpill-f4
 
 LDFLAGS_BOOT =              \
+	--specs=nano.specs      \
 	-lopencm3_stm32f4       \
 	-Wl,-T,$(LINKER_SCRIPT) \
 	-nostartfiles           \
 	-lc                     \
-	-lnosys                 \
 	-Wl,-Map=mapfile        \
 	-mthumb                 \
 	-mcpu=cortex-m4         \
@@ -37,6 +37,13 @@ LDFLAGS += $(LDFLAGS_BOOT)
 CFLAGS += -DDFU_SERIAL_LENGTH=13
 endif
 
+ifeq ($(ENABLE_DEBUG), 1)
+# Use rdimon when there is another JTAG adapter on our BMP adapter
+LDFLAGS += --specs=rdimon.specs
+else
+LDFLAGS += --specs=nosys.specs
+endif
+
 ifdef ALTERNATIVE_PINOUT
 CFLAGS += -DALTERNATIVE_PINOUT=$(ALTERNATIVE_PINOUT)
 endif
diff --git a/src/platforms/common/blackpill-f4/blackpill-f4.h b/src/platforms/common/blackpill-f4/blackpill-f4.h
index 0342d3f..ec98775 100644
--- a/src/platforms/common/blackpill-f4/blackpill-f4.h
+++ b/src/platforms/common/blackpill-f4/blackpill-f4.h
@@ -27,6 +27,11 @@
 #include ""timing.h""
 #include ""timing_stm32.h""
 
+#ifdef ENABLE_DEBUG
+#define PLATFORM_HAS_DEBUG
+extern bool debug_bmp;
+#endif
+
 #define PLATFORM_HAS_TRACESWO
 
 /* Error handling for ALTERNATIVE_PINOUT
-- 
2.34.1

From 9095f29cf6759d7dea5e2d0c1e26e126b62b1f9b Mon Sep 17 00:00:00 2001
From: Denis Tolstov <dtolstov@vniir.ru>
Date: Tue, 6 Jun 2023 20:11:35 +0300
Subject: [PATCH 2/3] platforms/blackpill-f4: Enable BMP DFU build variant

* BMP DFU uploads are ~2.4x faster than STM32F411 BootROM DFU
* Use 96MHz clocks in DFU (and in APP), revisit for F401 & 84MHz
* Use the PA0 pushbutton active-low and pulled-up to control DFU entry
---
 src/platforms/common/blackpill-f4/Makefile.inc   |  1 +
 src/platforms/common/blackpill-f4/blackpill-f4.c | 13 +++++++++++--
 src/platforms/common/blackpill-f4/usbdfu.c       | 11 ++++++++---
 3 files changed, 20 insertions(+), 5 deletions(-)

diff --git a/src/platforms/common/blackpill-f4/Makefile.inc b/src/platforms/common/blackpill-f4/Makefile.inc
index e552036..a231b20 100644
--- a/src/platforms/common/blackpill-f4/Makefile.inc
+++ b/src/platforms/common/blackpill-f4/Makefile.inc
@@ -31,6 +31,7 @@ LDFLAGS_BOOT =              \
 ifeq ($(BMP_BOOTLOADER), 1)
 $(info  Load address 0x08004000 for BMPBootloader)
 LDFLAGS = $(LDFLAGS_BOOT) -Wl,-Ttext=0x8004000
+CFLAGS += -DAPP_START=0x08004000
 CFLAGS += -DDFU_SERIAL_LENGTH=9
 else
 LDFLAGS += $(LDFLAGS_BOOT)
diff --git a/src/platforms/common/blackpill-f4/blackpill-f4.c b/src/platforms/common/blackpill-f4/blackpill-f4.c
index 0824dd9..dd53be1 100644
--- a/src/platforms/common/blackpill-f4/blackpill-f4.c
+++ b/src/platforms/common/blackpill-f4/blackpill-f4.c
@@ -42,16 +42,23 @@ extern uint32_t _ebss; // NOLINT(bugprone-reserved-identifier,cert-dcl37-c,cert-
 
 void platform_init(void)
 {
+#ifdef USE_STM32F4_MASKROM
 	volatile uint32_t *magic = (uint32_t *)&_ebss;
+#endif
 	/* Enable GPIO peripherals */
 	rcc_periph_clock_enable(RCC_GPIOA);
 	rcc_periph_clock_enable(RCC_GPIOC);
 	rcc_periph_clock_enable(RCC_GPIOB);
 
+#ifdef USE_STM32F4_MASKROM
+
+	/* Blackpill board has a floating button on PA0. Pull it up and use as active-low. */
+	gpio_mode_setup(GPIOA, GPIO_MODE_INPUT, GPIO_PUPD_PULLUP, GPIO0);
+
 #pragma GCC diagnostic push
 #pragma GCC diagnostic ignored ""-Warray-bounds""
 	/* Check the USER button */
-	if (gpio_get(GPIOA, GPIO0) || (magic[0] == BOOTMAGIC0 && magic[1] == BOOTMAGIC1)) {
+	if (!gpio_get(GPIOA, GPIO0) || (magic[0] == BOOTMAGIC0 && magic[1] == BOOTMAGIC1)) {
 		magic[0] = 0;
 		magic[1] = 0;
 		/* Assert blue LED as indicator we are in the bootloader */
@@ -67,7 +74,9 @@ void platform_init(void)
 		scb_reset_core();
 	}
 #pragma GCC diagnostic pop
-	rcc_clock_setup_pll(&rcc_hse_25mhz_3v3[RCC_CLOCK_3V3_84MHZ]);
+
+#endif
+	rcc_clock_setup_pll(&rcc_hse_25mhz_3v3[RCC_CLOCK_3V3_96MHZ]);
 
 	/* Enable peripherals */
 	rcc_periph_clock_enable(RCC_OTGFS);
diff --git a/src/platforms/common/blackpill-f4/usbdfu.c b/src/platforms/common/blackpill-f4/usbdfu.c
index 24a96fe..1883b2d 100644
--- a/src/platforms/common/blackpill-f4/usbdfu.c
+++ b/src/platforms/common/blackpill-f4/usbdfu.c
@@ -22,6 +22,7 @@
 #include <libopencm3/stm32/rcc.h>
 #include <libopencm3/stm32/gpio.h>
 #include <libopencm3/cm3/scb.h>
+#include <libopencm3/usb/dwc/otg_fs.h>
 
 #include ""usbdfu.h""
 #include ""general.h""
@@ -43,19 +44,22 @@ int main(void)
 	volatile uint32_t *magic = (uint32_t *)&_ebss;
 	rcc_periph_clock_enable(RCC_GPIOA);
 
+	/* Blackpill board has a floating button on PA0. Pull it up and use as active-low. */
+	gpio_mode_setup(GPIOA, GPIO_MODE_INPUT, GPIO_PUPD_PULLUP, GPIO0);
+
 #pragma GCC diagnostic push
 #pragma GCC diagnostic ignored ""-Warray-bounds""
-	if (gpio_get(GPIOA, GPIO0) || (magic[0] == BOOTMAGIC0 && magic[1] == BOOTMAGIC1)) {
+	if (!gpio_get(GPIOA, GPIO0) || (magic[0] == BOOTMAGIC0 && magic[1] == BOOTMAGIC1)) {
 		magic[0] = 0;
 		magic[1] = 0;
 	} else
 		dfu_jump_app_if_valid();
 #pragma GCC diagnostic pop
 
-	rcc_clock_setup_pll(&rcc_hse_8mhz_3v3[RCC_CLOCK_3V3_168MHZ]);
+	rcc_clock_setup_pll(&rcc_hse_25mhz_3v3[RCC_CLOCK_3V3_96MHZ]);
 
 	/* Assert blue LED as indicator we are in the bootloader */
-	rcc_periph_clock_enable(RCC_GPIOD);
+	rcc_periph_clock_enable(RCC_GPIOC);
 	gpio_mode_setup(LED_PORT, GPIO_MODE_OUTPUT, GPIO_PUPD_NONE, LED_BOOTLOADER);
 	gpio_set(LED_PORT, LED_BOOTLOADER);
 
@@ -68,6 +72,7 @@ int main(void)
 
 	dfu_protect(false);
 	dfu_init(&USB_DRIVER);
+
 	dfu_main();
 }
 
-- 
2.34.1

From ce791cd20e6f183162f26083e0ea7fc6a57a1550 Mon Sep 17 00:00:00 2001
From: Denis Tolstov <dtolstov@vniir.ru>
Date: Tue, 6 Jun 2023 20:18:16 +0300
Subject: [PATCH 3/3] platforms/blackpill-f4: Fix DWC USB init

---
 src/platforms/common/blackpill-f4/blackpill-f4.c | 6 ++++++
 src/platforms/common/blackpill-f4/usbdfu.c       | 6 ++++++
 2 files changed, 12 insertions(+)

diff --git a/src/platforms/common/blackpill-f4/blackpill-f4.c b/src/platforms/common/blackpill-f4/blackpill-f4.c
index dd53be1..83fa603 100644
--- a/src/platforms/common/blackpill-f4/blackpill-f4.c
+++ b/src/platforms/common/blackpill-f4/blackpill-f4.c
@@ -82,9 +82,15 @@ void platform_init(void)
 	rcc_periph_clock_enable(RCC_OTGFS);
 	rcc_periph_clock_enable(RCC_CRC);
 
+#if 0
 	/* Set up USB Pins and alternate function */
 	gpio_mode_setup(GPIOA, GPIO_MODE_AF, GPIO_PUPD_NONE, GPIO9 | GPIO11 | GPIO12);
 	gpio_set_af(GPIOA, GPIO_AF10, GPIO9 | GPIO10 | GPIO11 | GPIO12);
+#else
+	/* PA9/PA10 are not routed to USB on Blackpill-F4 */
+	gpio_mode_setup(GPIOA, GPIO_MODE_AF, GPIO_PUPD_NONE, GPIO11 | GPIO12);
+	gpio_set_af(GPIOA, GPIO_AF10, GPIO11 | GPIO12);
+#endif
 
 	GPIOA_OSPEEDR &= 0x3c00000cU;
 	GPIOA_OSPEEDR |= 0x28000008U;
diff --git a/src/platforms/common/blackpill-f4/usbdfu.c b/src/platforms/common/blackpill-f4/usbdfu.c
index 1883b2d..107c71a 100644
--- a/src/platforms/common/blackpill-f4/usbdfu.c
+++ b/src/platforms/common/blackpill-f4/usbdfu.c
@@ -73,6 +73,12 @@ int main(void)
 	dfu_protect(false);
 	dfu_init(&USB_DRIVER);
 
+#if 0
+	/* https://github.com/libopencm3/libopencm3/pull/1256#issuecomment-779424001 */
+	OTG_FS_GCCFG |= OTG_GCCFG_NOVBUSSENS | OTG_GCCFG_PWRDWN;
+	OTG_FS_GCCFG &= ~(OTG_GCCFG_VBUSBSEN | OTG_GCCFG_VBUSASEN);
+#endif
+
 	dfu_main();
 }
 
-- 
2.34.1
"
LqYHsdQ6,lab5,orneto,C,Tuesday 6th of June 2023 12:09:22 PM CDT,"
#include ""Wire.h""
#include <LiquidCrystal.h>

unsigned long millisTarefa1 = millis();
unsigned long millisTarefa2 = millis();
unsigned long millisTarefa3 = millis();
unsigned long millisTarefa4 = millis();
#define DS1307_ADDRESS 0x68
byte zero = 0x00;
String horas,minutos,segundos,horasa;

//                                      LCD  
#define RS PM_0
#define RW PM_1
#define E PM_2
#define D0 PK_0
#define D1 PK_1
#define D2 PK_2
#define D3 PK_3
#define D4 PK_4
#define D5 PK_5
#define D6 PK_6
#define D7 PK_7
#define SW1 PJ_0
//                                       LEDS;7SEG
# define a PQ_0 
# define b PQ_1 
# define c PQ_2 
# define d PQ_3 
# define e PA_4 
# define f PA_5
# define g PA_6
# define ponto PA_7 
# define Ts1 PB_4 
# define Ts2 PB_5 
# define LEDPAT PP_5 
#define PH0 PH_0
#define PH1 PH_1
#define PH2 PH_2
#define PH3 PH_3

bool estadoLED = false;

#define buzz PL_4

LiquidCrystal lcd(RS,RW,E,D0,D1,D2,D3,D4,D5,D6,D7);  

byte linhas[4] = {PL_0, PL_1, PL_2, PL_3};
byte colunas[4] = {PM_4, PM_5, PM_6, PM_7}; 


const int n = 6;
int i,j,k=0;

int portasdisplay[8]={a,b,c,d,e,f,g,ponto};
int setesegmentos[11][8]={{1,1,1,1,1,1,0,0},
                          {0,1,1,0,0,0,0,0},
                          {1,1,0,1,1,0,1,0},
                          {1,1,1,1,0,0,1,0},
                          {0,1,1,0,0,1,1,0},
                          {1,0,1,1,0,1,1,0},
                          {1,0,1,1,1,1,1,0},
                          {1,1,1,0,0,0,0,0},
                          {1,1,1,1,1,1,1,0},
                          {1,1,1,1,0,1,1,0},
                          {0,0,0,0,0,0,1,0}};



void setup() {
      Serial.begin(9600);
      for(i=0;i<8;i++)
      {
        pinMode(portasdisplay[i],OUTPUT);
      }
      pinMode(Ts1,OUTPUT);
      pinMode(Ts2,OUTPUT);
      pinMode(LEDPAT,OUTPUT);
      pinMode(buzz, OUTPUT);
      lcd.begin(16, 2);
      lcd.clear();
      lcd.setCursor(0,0);
      lcd.print(""Defina os"");
      lcd.clear(); 
      Wire.begin();
      //setDateTime(); // caso queira ajustar a hora
      
}
byte decToBcd(byte val){
  return ( (val/10*16) + (val%10) );
}
byte bcdToDec(byte val)  {
  return ( (val/16*10) + (val%16) );
}

void setDateTime(){
  byte segundo = 30;
  byte minuto = 7;
  byte hora = 14;
  byte diasemana = 3;
  byte dia = 06;
  byte mes = 06;
  byte ano = 23;
  Wire.beginTransmission(DS1307_ADDRESS);
  Wire.write(zero); 
  Wire.write(decToBcd(segundo));
  Wire.write(decToBcd(minuto));
  Wire.write(decToBcd(hora));
  Wire.write(zero); 
  Wire.endTransmission();
}
bool PMbr;
bool PMal;

int printahora(bool modo){
  Wire.beginTransmission(DS1307_ADDRESS);
  Wire.write(zero);
  Wire.endTransmission();
  Wire.requestFrom(DS1307_ADDRESS, 7);
  int segundo = bcdToDec(Wire.read());
  int minuto = bcdToDec(Wire.read());
  int hora = bcdToDec(Wire.read() & 0b111111);    //Formato 24 horas
   if (hora <= 12) {
      PMbr = false;
   }
   if (hora > 12) {
      PMbr = true;
   }
  int diasemana = bcdToDec(Wire.read());             //0-6 -> Domingo - Sábado
  int dia = bcdToDec(Wire.read());
  int mes = bcdToDec(Wire.read());
  int ano = bcdToDec(Wire.read());
  int horaa = hora+4;
   if (horaa <= 12) {
      PMal = false;
   }
   if (horaa > 12) {
      PMal = true;
   }
  int resto = 0;
  int converte=0;

  if(horaa>23){
    resto = horaa - 24;
    horaa = resto;}
 // Serial.print(segundo);
  //Serial.print(minuto);
  //Serial.print(hora);
//Exibe a data e hora. Ex.:   3/12/13 19:00:00
  if(modo==1 && PMbr==1){
    hora=hora-12;
  }
  if(modo==1 && PMal==1){
    horaa=horaa-12;
  }
  if(hora<10)
    horas=""0""+String(hora);
  else
    horas=String(hora);
    if(horaa<10)
    horasa=""0""+String(horaa);
  else
    horasa=String(horaa);
  if(minuto<10)
    minutos=""0""+String(minuto);
  else
    minutos=String(minuto);
  if(segundo<10)
    segundos=""0""+String(segundo);
  else
    segundos=String(segundo);

  lcd.setCursor(0,0);
  lcd.print(horas);
  lcd.print("":"");
  lcd.print(minutos);
  lcd.print("":"");
  lcd.println(segundos);
  lcd.setCursor(8,0);
  
  if(modo==1 && PMbr==1){
    lcd.print("" PM BRA "");
  }
  if(modo==1 && PMbr==0){
    lcd.print("" AM BRA "");
  }
  if(modo ==0){
      lcd.print("" BRA     "");
  }

  lcd.setCursor(0,1);
  lcd.print(horasa);
  lcd.print("":"");
  lcd.print(minutos);
  lcd.print("":"");
  lcd.print(segundos);
  lcd.setCursor(8,1);
  if(modo==1 && PMal==1){
    lcd.print("" PM BER "");
  }
  if(modo==1 && PMal==0){
    lcd.print("" AM BER "");
  }
  if(modo ==0){
      lcd.print("" BER     "");
  }
  return minuto;
}


void acendetodos(){
  digitalWrite(a,HIGH);
  digitalWrite(b,HIGH);
  digitalWrite(c,HIGH);
  digitalWrite(d,HIGH);
  digitalWrite(e,HIGH);
  digitalWrite(f,HIGH);
  digitalWrite(g,HIGH);
  digitalWrite(ponto,HIGH);
}
  void apagatodos(){
  digitalWrite(a,LOW);
  digitalWrite(b,LOW);
  digitalWrite(c,LOW);
  digitalWrite(d,LOW);
  digitalWrite(e,LOW);
  digitalWrite(f,LOW);
  digitalWrite(g,LOW);
  digitalWrite(ponto,LOW);
}

int alarme(){
   int i=0;
   lcd.clear();  
   lcd.setCursor(0, 0);
   lcd.print(""!!!alarme!!!"");
   while(i<5){     
    if((millis() - millisTarefa4) < 500){
      digitalWrite(LEDPAT, HIGH);
      acendetodos();
      tone(buzz,3000);}
      
    else{
      digitalWrite(LEDPAT, LOW);
      apagatodos();
      noTone (buzz);
    }
    if((millis() - millisTarefa4) > 1000){
        millisTarefa4 = millis();
        i=i+1;
    }
   }
   digitalWrite(LEDPAT, LOW);
   apagatodos();
   lcd.clear();
   return 0;
}

int trocaturno(bool modo){
      int i = 0;
      int x = 11;
      int k=0;
      while(x>0){
        printahora(modo);
        if((millis()-millisTarefa3)<1000){
            if((millis() - millisTarefa2) < 10){
              j= x / 10;
              for(k=0;k<8;k++){
                 digitalWrite(portasdisplay[k],setesegmentos[j][k]);
              }
              digitalWrite(Ts1,HIGH);              
              digitalWrite(Ts2,LOW);
            }
            else{
              j = x % 10;
              for(k=0;k<8;k++){
                 digitalWrite(portasdisplay[k],setesegmentos[j][k]);
              }
              digitalWrite(Ts2,HIGH);               
              digitalWrite(Ts1,LOW);           
            }
            if(millis()-millisTarefa2>20){
              millisTarefa2 = millis();
            }
            if((millis() - millisTarefa1) < 500){
                tone(buzz,6000);}
      
            else{
                noTone (buzz);
            }
            if((millis() - millisTarefa1) > 1000){
                millisTarefa1 = millis();
            }           
        }
        else{
          millisTarefa3=millis();
          x=x-1;
        }
      }
      digitalWrite(Ts1,LOW);               
      digitalWrite(Ts2,LOW);  
      return 1;
}
int on=1; //sistema ligado
int minuto;
bool modo=0;
bool emergencia=false;

void loop() {
    lcd.setCursor(0, 0);
    char tcld = Serial.read();
    lcd.clear();
    switch(tcld){
              case 'A':case 'a':
                on= 0;
                lcd.clear();
                lcd.clear();
                break;
              case 'B':case 'b':    
                lcd.clear();            
                on= 1;
                break;
              case 'C':case 'c':
                break;
            }
     while(on==1){

          tcld = Serial.read();
          switch(tcld){
            case 'A':case 'a':
              lcd.clear();
              lcd.clear();
              on= 0;
              break;
            case 'B':case 'b':
              on= 1;
              break;
            case 'C':case 'c':
              modo=!modo;
              break;
           }    
          minuto=printahora(modo);      
          if(((minuto % 2) == 0) && segundos == ""00""){
            trocaturno(modo);
          }
          if(emergencia==true){
            on=alarme();
          }
      }
}"
qesiL7x3,kumisis wyaro chasworebuli,erehh,MySQL,Tuesday 6th of June 2023 12:00:15 PM CDT,"--factory table
CREATE TABLE Factory(
factory_id INT PRIMARY KEY,
f_name VARCHAR (255),
f_location VARCHAR (255)
);

--branch table
CREATE TABLE Branch(
branch_id INT PRIMARY KEY,
branch_name VARCHAR(255),
branch_factory_id int,
FOREIGN KEY (branch_factory_id) REFERENCES Factory (factory_id)
);

--supplier table
CREATE TABLE Supplier(
supplier_id INT PRIMARY KEY,
supplier_name VARCHAR(255)
);

--water table
--price of 1L of water - 0.3
CREATE TABLE Water(
water_id VARCHAR(5) PRIMARY KEY,
water_source VARCHAR(255) NOT NULL,
amount_obtained INT NOT NULL,
water_price DECIMAL(4,2) DEFAULT 0.3,
date_obtained DATE NOT NULL
);

--bottle table
CREATE TABLE Bottle(
bottle_id VARCHAR(6) PRIMARY KEY,
supplier_id INT,
bottle_type VARCHAR(10) CHECK(bottle_type IN ('glass', 'plastic')),
bottle_price DECIMAL(4,2) NOT NULL,
bottle_amount INT NOT NULL,
FOREIGN KEY (supplier_id) REFERENCES Supplier ( supplier_id)
);

--update to the bottle table to set the price accordingly
--if plastic -0.3, if glass - 1.5, else 0
UPDATE Bottle
SET bottle_price = CASE	
	WHEN bottle_type = 'glass' THEN 1.5
	WHEN bottle_type = 'plastic' THEN 0.3
	ELSE 0
END;

--Product ( bottled water ) table 
CREATE TABLE Product(
product_id VARCHAR(9) PRIMARY KEY,
product_type VARCHAR(10) CHECK(product_type IN ('glass', 'plastic')),
bottle_id VARCHAR(6),
water_id VARCHAR(5),
product_price DECIMAL(6,2),
product_amount INT NOT NULL,
date_produced DATE NOT NULL,
date_shipped DATE,
FOREIGN KEY (bottle_id) REFERENCES Bottle (bottle_id),
FOREIGN KEY (water_id) REFERENCES Water (water_id)
);

-- Update the price values using the calculated formula. 
--price is equal to the sum of bottle and water price, plus 45%
UPDATE Product
SET product_price = 
(SELECT (Bottle.bottle_price + Water.water_price) * 1.45 
FROM Bottle, Water WHERE Bottle.bottle_id = Product.bottle_id AND Water.water_id = Product.water_id);

--person table, will be used for the manager and employee table
CREATE TABLE Person(
ssn VARCHAR(11) PRIMARY KEY,
);

--director table 
CREATE TABLE Director(
director_ssn VARCHAR(11),
factory_id INT,
FOREIGN KEY (director_ssn) REFERENCES Person(ssn),
FOREIGN KEY (factory_id) REFERENCES Factory(factory_id)
);
--manager table 
CREATE TABLE Manager(
manager_id VARCHAR(10) PRIMARY KEY,
manager_ssn VARCHAR(11) NOT NULL,
manager_name VARCHAR(255) NOT NULL,
manager_lname VARCHAR(255) NOT NULL,
factory_id INT NOT NULL,
branch_id INT NOT NULL,
FOREIGN KEY (manager_ssn) REFERENCES Person(ssn),
FOREIGN KEY (factory_id) REFERENCES Factory(factory_id),
FOREIGN KEY (branch_id) REFERENCES Branch(branch_id)
);

--employee table
CREATE TABLE Employee(
employee_ssn VARCHAR(11),
employee_name VARCHAR(255) NOT NULL,
employee_lname VARCHAR(255) NOT NULL,
employee_factory INT NOT NULL,
employee_branch INT NOT NULL,
FOREIGN KEY (employee_ssn) REFERENCES Person(ssn),
FOREIGN KEY (employee_factory) REFERENCES Factory(factory_id),
FOREIGN KEY (employee_branch) REFERENCES Branch(branch_id)
);

--store table 
CREATE TABLE Store(
store_id INT PRIMARY KEY,
store_name VARCHAR(255) NOT NULL,
product_id VARCHAR(9),
product_price DECIMAL(6,2),
product_amount_received INT,
date_received DATE,
FOREIGN KEY (product_id) REFERENCES Product(product_id)
);

--update the Store table to calculate the revenue received 
UPDATE STORE
SET product_price = (SELECT Product.product_price * Store.product_amount_received
                     FROM Product, Store 
                     WHERE Product.product_id = Store.product_id);
                     

--sales table
CREATE TABLE Sales(
store_id int,
revenue_date DATE NOT NULL,
revenue DECIMAL(7,2),
FOREIGN KEY (store_id) REFERENCES Store(store_id)
);

--update to Sales, revenue date is the same as the day the store received the products
UPDATE Sales
SET revenue_date = (SELECT Store.date_received 
					FROM Store);

----update to Sales, revenue is the same as the price paid by the store
UPDATE Sales
SET revenue = (SELECT Store.product_price
				FROM Store);

--salaries table
CREATE TABLE Salaries(
worker_ssn VARCHAR(11),
worker_branch_id INT,
worker_salary DECIMAL(7,2),
FOREIGN KEY (worker_ssn) REFERENCES Person(ssn),
FOREIGN KEY (worker_branch_id) REFERENCES Branch(branch_id)
);


--update to salaries table, each branch has its own salary
UPDATE salaries
SET worker_salary = 
    CASE
        WHEN worker_branch_id = 1 AND worker_ssn IN (SELECT manager_ssn FROM Manager) THEN 2500
        WHEN worker_branch_id = 1 AND worker_ssn IN (SELECT employee_ssn FROM Employee) THEN 1500
		WHEN worker_branch_id = 2 AND worker_ssn IN (SELECT manager_ssn FROM Manager) THEN 5500
        WHEN worker_branch_id = 2 AND worker_ssn IN (SELECT employee_ssn FROM Employee) THEN 3500
		WHEN worker_branch_id = 3 AND worker_ssn IN (SELECT manager_ssn FROM Manager) THEN 1700
        WHEN worker_branch_id = 3 AND worker_ssn IN (SELECT employee_ssn FROM Employee) THEN 900
    END;
"
WSAkt40H,1305.25,Cu11inan,Python,Tuesday 6th of June 2023 11:57:44 AM CDT,"from timeit import timeit
from os import listdir
import threading

timeouttime = 5 #this may be changed later

def verify(a, A):
    for b in A:
        if all(a[i] == b[i] or b[i] == '*' for i in range(26)):
            return False
    return True

def read(filename):
    with open(filename, ""r"") as f:
        A = []
        for x in f:
            x = x.strip()
            name, mask = x.split('')
            a = [''] 26
            for c in name:
                a[ord(c) - ord('a')] = '0'
            for c in mask:
                a[ord(c) - ord('a')] = '1'
            A.append(''.join(a))
    return A

def find(filename):
    A = read(filename)
    A.sort()
    for i in range(2*26):
        s = bin(i)[2:].zfill(26)
        if verify(s, A):
            break

def find_timeout(filename):
    p = threading.Thread(target=find, args=(filename,))
    p.start()
    p.join(timeout_time)

def main():
    files = listdir(""./tests"")
    times = [timeit(lambda: find_timeout(""./tests/""+file), number=1) for file in files]
    print([time if time < timeout_time else ""inf"" for time in times])

if name == ""main"":
    main()"
UrC7n6Hu,ServerError: received 503 HTTP response,Vault-TecTradingCo,Python,Tuesday 6th of June 2023 11:53:38 AM CDT,"Traceback (most recent call last):
  File ""/root/Fallout76MarketplaceKarmaTransferBot/main.py"", line 258, in main
    for comment in comment_stream:
  File ""/root/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/models/util.py"", line 195, in stream_generator
    for item in reversed(list(function(limit=limit, **function_kwargs))):
  File ""/root/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/models/listing/generator.py"", line 63, in __next__
    self._next_batch()
  File ""/root/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/models/listing/generator.py"", line 89, in _next_batch
    self._listing = self._reddit.get(self.url, params=self.params)
  File ""/root/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/util/deprecate_args.py"", line 43, in wrapped
    return func(**dict(zip(_old_args, args)), **kwargs)
  File ""/root/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/reddit.py"", line 634, in get
    return self._objectify_request(method=""GET"", params=params, path=path)
  File ""/root/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/reddit.py"", line 739, in _objectify_request
    self.request(
  File ""/root/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/util/deprecate_args.py"", line 43, in wrapped
    return func(**dict(zip(_old_args, args)), **kwargs)
  File ""/root/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/reddit.py"", line 941, in request
    return self._core.request(
  File ""/root/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 330, in request
    return self._request_with_retries(
  File ""/root/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 253, in _request_with_retries
    return self._do_retry(
  File ""/root/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 162, in _do_retry
    return self._request_with_retries(
  File ""/root/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 253, in _request_with_retries
    return self._do_retry(
  File ""/root/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 162, in _do_retry
    return self._request_with_retries(
  File ""/root/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 266, in _request_with_retries
    raise self.STATUS_EXCEPTIONS[response.status_code](response)
prawcore.exceptions.ServerError: received 503 HTTP response
"
7VmWUVdD,CC_House,mr_okroshka,Lua,Tuesday 6th of June 2023 11:53:21 AM CDT,"function fill(x,y)
	invert = false
	for poseX=0,x do
    	for poseY=0,y do
    	    turtle.forward()
            turtle.placeDown()
    	end
        if invert == false then
            turtle.turnLeft()
            turtle.forward()
            turtle.turnLeft()
            invert = true
        else
            turtle.turnRight()
            turtle.forward()
            turtle.turnRight()
            invert = false
        end
    end
end
function refuel()
    if turtle.getFuelLevel() > 0 then
        return
    end
    for slot = 1,16 do
        turtle.select(slot)
        if turtle.refuel() then
            turtle.select(1)
            return
        end
    end
	turtle.select(1)
end

refuel()
fill(5,5)"
m2tFCJgJ,Untitled,Atticool,JSON,Tuesday 6th of June 2023 11:35:06 AM CDT,"{
	""populate"": {
		""moon_lunar_crystal"": {
			""distribution"": ""surface"",
            ""follow-terrain"": ""false"",
            ""material"": [
                ""advancedrocketry:moonturf_dark"",
                ""advancedrocketry:moonturf""
            ],
			""generator"": [
                {
                    ""type"": ""stalagmite"",
                    ""block"": [
                        {
                            ""name"": ""contenttweaker:lunar_crystal"",
                            ""weight"": 90
                        },
                        {
                            ""name"": ""contenttweaker:lunar_crystal_dense"",
                            ""weight"": 10
                        }
                    ],
                    ""min-height"": 70,
                    ""gen-body"": ""minecraft:air"",
                    ""smooth"": true,
                    ""fat"": false,
                    ""height-variance"": 6,
                    ""height-mod"": 3,
                    ""gen-size"": 0,
                    ""size-variance"": 2
                }
            ],
			""cluster-count"": 2,
            ""chunk-chance"": 1,
			""retrogen"": false,
			""biome"": ""all"",
			""dimension"": {
				""restriction"": ""blacklist"",
				""value"": [
				]
			}
		}
	}
}
"
c6ps1fYR,Untitled,Don_Mag,Swift,Tuesday 6th of June 2023 11:25:14 AM CDT,"class AttribVC: UIViewController {
	
	override func viewDidLoad() {
		super.viewDidLoad()
		
		let g = view.safeAreaLayoutGuide
		
		var theLabels: [UILabel] = []
		
		var prevLabel: UILabel!
		
		for _ in 0..<6 {
			let v = UILabel()
			v.translatesAutoresizingMaskIntoConstraints = false
			view.addSubview(v)
			v.leadingAnchor.constraint(equalTo: g.leadingAnchor, constant: 20.0).isActive = true
			v.trailingAnchor.constraint(equalTo: g.trailingAnchor, constant: -20.0).isActive = true
			if prevLabel == nil {
				v.topAnchor.constraint(equalTo: g.topAnchor, constant: 20.0).isActive = true
			} else {
				v.topAnchor.constraint(equalTo: prevLabel.bottomAnchor, constant: 8.0).isActive = true
			}
			theLabels.append(v)
			prevLabel = v
		}
		
		var attStr: NSMutableAttributedString!
		var attributes: [NSAttributedString.Key: Any] = [:]
		var rangeStr: String = """"
		var termRange: NSRange!
		
		let html: String = ""<p>See additional information</p>""
		guard let encodedText = html.data(using: .utf16) else { return }
		
		guard let attributedString = try? NSMutableAttributedString(data: encodedText, options: [.documentType: NSAttributedString.DocumentType.html], documentAttributes: nil)
		else { return }
		
		rangeStr = ""See additional information""

		termRange = attributedString.mutableString.range(of: rangeStr)
		
		// default attributed string
		attStr = NSMutableAttributedString(attributedString: attributedString)
		theLabels[0].attributedText = attStr
		
		// .strokeWidth and .foregroundColor
		//	results in a black ""outline""
		attStr = NSMutableAttributedString(attributedString: attributedString)
		attributes = [.strokeWidth: -3.0, .foregroundColor: UIColor.red]
		attStr.addAttributes(attributes, range: termRange)
		theLabels[1].attributedText = attStr
		
		// .strokeWidth and .foregroundColor and .strokeColor
		//	results in a ""bolded"" effect
		attStr = NSMutableAttributedString(attributedString: attributedString)
		attributes = [.strokeWidth: -3.0, .foregroundColor: UIColor.red, .strokeColor: UIColor.red]
		attStr.addAttributes(attributes, range: termRange)
		theLabels[2].attributedText = attStr
		
		rangeStr = ""additional""
		termRange = attributedString.mutableString.range(of: rangeStr)
		
		// default attributed string
		attStr = NSMutableAttributedString(attributedString: attributedString)
		theLabels[3].attributedText = attStr
		
		// .strokeWidth and .foregroundColor
		//	results in a black ""outline""
		attStr = NSMutableAttributedString(attributedString: attributedString)
		attributes = [.strokeWidth: -3.0, .foregroundColor: UIColor.red]
		attStr.addAttributes(attributes, range: termRange)
		theLabels[4].attributedText = attStr
		
		// .strokeWidth and .foregroundColor and .strokeColor
		//	results in a ""bolded"" effect
		attStr = NSMutableAttributedString(attributedString: attributedString)
		attributes = [.strokeWidth: -3.0, .foregroundColor: UIColor.red, .strokeColor: UIColor.red]
		attStr.addAttributes(attributes, range: termRange)
		theLabels[5].attributedText = attStr
		
	}
	
}
"
DFC1DtfZ,# tk_rgb_blur_blend_at16_ani.py,here2share,Python,Tuesday 6th of June 2023 11:22:51 AM CDT,"# tk_rgb_blur_blend_at16_ani.py

from tkinter import *
from PIL import Image, ImageTk, ImageFilter, ImageDraw
from math import sin, cos, pi
import copy

ww = 512 
hh = 512 
cx, cy = ww//2, hh//2

root = Tk()
root.title(""tk_rgb_blur_blend_at16_ani"")
root.geometry(""%dx%d+0+0""%(ww,hh))

def rgb2hex(r,g,b):
	return '#%02X%02X%02X'%(r,g,b)

rgb = range(0, 256, 50)
colors = [rgb2hex(r, g, b) for r in rgb for g in rgb for b in rgb]

img = Image.new('RGB', (ww, hh), (0, 0, 0))
draw = {}
for k in (0, 1, 2, 3):
	draw[k] = ImageDraw.Draw(img)
blur_radius = 0.02 * min(img.size)

canvas = Canvas(root, width=ww, height=hh, bg='white')
canvas.pack(side=LEFT, fill=BOTH, expand=True)

def display():
	tkimg = ImageTk.PhotoImage(draw['image'])
	canvas.create_image((cx, cy), image=tkimg)
	canvas.update()

sz = 16
c = 0
xy = range(0, 512, sz)
for y in xy:
	c = (c + 3) % 11
	for x in xy:
		color = colors.pop(c)
		colors.append(color)
		draw[1].rectangle((x, y, x+sz, y+sz), fill=color, outline=color)
		c = (c + 1) % 11
draw['source'] = img.filter(ImageFilter.GaussianBlur(radius=blur_radius))
source = {}
target = {}
for y in range(hh):
	for x in range(ww):
		source[x,y] = draw['source'].getpixel((x, y))
		
o255 = [i for i in range(256)]
o255 = o255[1:-1] + o255[::-1]
Lc = len(o255)

def waves():
	for i in range(0, 100):
		alpha = i / 100.0
		draw['image'] = Image.blend(draw['source'], draw['target'], alpha)
		display()
	draw['source'] = copy.deepcopy(draw['target'])
	
while 1:
	for y in xy:
		c = (c + 1) % 11
		for x in xy:
			color = colors.pop(c)
			colors.append(color)
			draw[0].rectangle((x, y, x+sz, y+sz), fill=color, outline=color)
			c = (c + 1) % 11
	draw['target'] = img.filter(ImageFilter.GaussianBlur(radius=blur_radius))

	waves()"
gj3MYuLr,monacemta bazebi proeqti,erehh,MySQL,Tuesday 6th of June 2023 11:20:57 AM CDT,"--factory table
CREATE TABLE Factory(
f_id INT PRIMARY KEY,
f_name VARCHAR (255),
f_location VARCHAR (255)
);

--branch table
CREATE TABLE Branch(
branch_id INT PRIMARY KEY,
branch_name VARCHAR(255),
branch_factory_id int,
FOREIGN KEY (branch_factory_id) REFERENCES Factory (f_id)
);

--supplier table
CREATE TABLE Supplier(
supplier_id INT PRIMARY KEY,
supplier_name VARCHAR(255)
);

--water table
--price of 1L of water - 0.3
CREATE TABLE Water(
water_id VARCHAR(5) PRIMARY KEY,
water_source VARCHAR(255) NOT NULL,
amount_obtained INT NOT NULL,
water_price DECIMAL(4,2) DEFAULT 0.3,
date_obtained DATE NOT NULL
);

--bottle table
CREATE TABLE Bottle(
bottle_id VARCHAR(6) PRIMARY KEY,
supplier_id INT,
bottle_type VARCHAR(10) CHECK(bottle_type IN ('glass', 'plastic')),
bottle_price DECIMAL(4,2) NOT NULL,
bottle_amount INT NOT NULL,
FOREIGN KEY (supplier_id) REFERENCES Supplier ( supplier_id)
);

--update to the bottle table to set the price accordingly
--if plastic -0.3, if glass - 1.5, else 0
UPDATE Bottle
SET bottle_price = CASE	
	WHEN bottle_type = 'glass' THEN 1.5
	WHEN bottle_type = 'plastic' THEN 0.3
	ELSE 0
END;

--Product ( bottled water ) table 
CREATE TABLE Product(
product_id VARCHAR(9) PRIMARY KEY,
product_type VARCHAR(10) CHECK(product_type IN ('glass', 'plastic')),
bottle_id VARCHAR(6),
water_id VARCHAR(5),
product_price DECIMAL(6,2),
product_amount INT NOT NULL,
date_produced DATE NOT NULL,
date_shipped DATE,
FOREIGN KEY (bottle_id) REFERENCES Bottle (bottle_id),
FOREIGN KEY (water_id) REFERENCES Water (water_id)
);

-- Update the price values using the calculated formula. 
--price is equal to the sum of bottle and water price, plus 45%
UPDATE Product
SET product_price = 
(SELECT (Bottle.bottle_price + Water.water_price) * 1.45 
FROM Bottle, Water WHERE Bottle.bottle_id = Product.bottle_id AND Water.water_id = Product.water_id);

--person table, will be used for the manager and employee table
CREATE TABLE Person(
ssn VARCHAR(11) PRIMARY KEY,
);

--manager table 
CREATE TABLE Manager(
manager_id VARCHAR(10) PRIMARY KEY,
manager_ssn VARCHAR(11) NOT NULL,
manager_name VARCHAR(255) NOT NULL,
manager_lname VARCHAR(255) NOT NULL,
factory_id INT NOT NULL,
branch_id INT NOT NULL,
FOREIGN KEY (manager_ssn) REFERENCES Person(ssn),
FOREIGN KEY (factory_id) REFERENCES Factory(f_id),
FOREIGN KEY (branch_id) REFERENCES Branch(branch_id)
);

--employee table
CREATE TABLE Employee(
employee_ssn VARCHAR(11),
employee_name VARCHAR(255) NOT NULL,
employee_lname VARCHAR(255) NOT NULL,
employee_factory INT NOT NULL,
employee_branch INT NOT NULL,
FOREIGN KEY (employee_ssn) REFERENCES Person(ssn),
FOREIGN KEY (employee_factory) REFERENCES Factory(f_id),
FOREIGN KEY (employee_branch) REFERENCES Branch(branch_id)
);

--store table 
CREATE TABLE Store(
store_id INT PRIMARY KEY,
store_name VARCHAR(255) NOT NULL,
product_id VARCHAR(9),
product_price DECIMAL(6,2),
product_amount_received INT,
date_received DATE,
FOREIGN KEY (product_id) REFERENCES Product(product_id)
);

--update the Store table to calculate the revenue received 
UPDATE STORE
SET product_price = (SELECT Product.product_price * Store.product_amount_received
                     FROM Product, Store 
                     WHERE Product.product_id = Store.product_id);
                     

--sales table
CREATE TABLE Sales(
store_id int,
revenue_date DATE NOT NULL,
revenue DECIMAL(7,2),
FOREIGN KEY (store_id) REFERENCES Store(store_id)
);

UPDATE Sales
SET revenue_date = (SELECT Store.date_received 
					FROM Store);
UPDATE Sales
SET revenue = (SELECT Store.product_price
				FROM Store);

CREATE TABLE Salaries(
worker_ssn VARCHAR(11),
worker_branch_id INT,
worker_salary DECIMAL(7,2),
FOREIGN KEY (worker_ssn) REFERENCES Person(ssn),
FOREIGN KEY (worker_branch_id) REFERENCES Branch(branch_id)
);


--update to salaries table, each branch has its own salary
UPDATE salaries
SET worker_salary = 
    CASE
        WHEN worker_branch_id = 1 AND worker_ssn IN (SELECT manager_ssn FROM Manager) THEN 2500
        WHEN worker_branch_id = 1 AND worker_ssn IN (SELECT employee_ssn FROM Employee) THEN 1500
		WHEN worker_branch_id = 2 AND worker_ssn IN (SELECT manager_ssn FROM Manager) THEN 5500
        WHEN worker_branch_id = 2 AND worker_ssn IN (SELECT employee_ssn FROM Employee) THEN 3500
		WHEN worker_branch_id = 3 AND worker_ssn IN (SELECT manager_ssn FROM Manager) THEN 1700
        WHEN worker_branch_id = 3 AND worker_ssn IN (SELECT employee_ssn FROM Employee) THEN 900
    END;"
Mf05KpCh,1,matveev,Java,Tuesday 6th of June 2023 10:58:07 AM CDT,"package give.crap;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Scanner;

public class Exmpl {
    static List<String> strings = Collections.synchronizedList(new ArrayList<>());

    public static void main(String[] args) {
        new A().start();
        new B().start();
    }


    static class A extends Thread {
        @Override
        public void run() {
            while (true) {
                Scanner sc = new Scanner(System.in);
                synchronized (strings) {
                    while (strings.isEmpty()) {
                        strings.add(sc.nextLine());
                        strings.notify();
                    }
                }
            }
        }
    }

    static class B extends Thread {
        @Override
        public void run() {
            while (strings.isEmpty()) {
                synchronized (strings) {
                    try {
                        strings.wait();
                    } catch (InterruptedException e) {
                        throw new RuntimeException(e);
                    }
                    System.out.println(strings.remove(0));
                }
            }
        }
    }
}
"
bhWt89n2,MTG Forge Listing Of All Enemies,adamf9898,JSON,Tuesday 6th of June 2023 10:55:54 AM CDT,"MTG Forge Listing Of All Enemies:

Adventurer
Aether Channeler
Akroma
Amonkhet Minotaur
Ape
Archer
Armored Knight
Ashmouth Devil
Axgard Dwarf
Badger
Bandit
Bat
Bear
Beastmaster
Beholder
Berserker
Big Zombie
Bird
Black Wiz1
Black Wiz2
Black Wiz3
Blue Wiz1
Blue Wiz2
Blue Wiz3
Boar
Boggart
Bull
Cat
Cathar
Cave Spider
Centaur
Centaur Warrior
Challenger 20
Challenger 21
Challenger 22
Chandra
Chandra's Acolyte
Chandra's Firestarter
Chandra's Hellhound
Chandra's Immolator
Chandra's Lavamancer
Chandra's Pyromancer
Chandra's Scorcher
Chicken
ClayGolem
Cleric
Construct
Copper Host Brutalizer
Copper Host Infector
Crab
Curselord
Cyclops
Dark Enchanter
Dark Knight
Dawnhart Witch
Death Knight
Demon
Devil
Dino
Dinosaur
Disciple of Teferi
Djinn
Dog
Doppelganger
Dragon
Dross Gladiator
Dross Grimnarch
Dwarf
Efreet
Eldraine Faerie
Eldraine Knight
Eldrazi
Elemental
Elf
Elf warrior
Elk
Emrakul
Eye
Faerie
Fire Elemental
Fire Giant
Flame Elemental
Flying Witch
Fox
Frog
Frost Titan
Fungus
Furnace Goblin
Furnace Tormentor
Gargoyle
Gargoyle 2
Ghalta
Garruk
Geist
Ghoul
Ghost
Giant Spider
Gitaxian Scientist
Gitaxian Underling
Griselbrand
Grolnok
Gorilla
Magma Fire Elemental
Goblin
Goblin Artificer
Goblin Chief
Goblin Warrior
Golem
Golem that is Generous
Gorgon
Gorgon 2
Green Beast
Green Wiz1
Green Wiz2
Green Wiz3
Griffin
Harpy
Harpy 2
Hellhound
High Elf
High Vampire
Horror
Horse
Horseman
Human
Human elite
Human guard
Hydra
Illusionist
Insect
Immersturm Demon
Jackal Warrior
Jace
Jellyfish
Kavu
Khan
Kiora
Knight
Kobold
Kor Warrior
Lich
Lathliss
Lightning Elemental
Lorthos
Magma Elemental
Merfolk
Merfolk Avatar
Merfolk Fighter
Merfolk Lord
Merfolk Soldier
Merfolk warrior
Mimic
Mindclaw Shaman
Minotaur
Minotaur Flayer
Monk
Mummy
Nahiri
Necromancer
Octopus
Ooze
Ooze Boss
Owl
Pirate
Plant
Orthodoxy Angel
Orthodoxy Duelist
Phoenix
Rakdos Devil
Rat Ninja
Raven
Red Beast
Reassembling Skeleton
Red Wiz1
Red Wiz2
Red Wiz3
Rogue
Sand Golem
Sandwurm
Satyr
Scarecrow
Scarecrow Captain
Scorpion
Sea Monster
Shaman
Skeleton
Skeleton Soldier
Slimefoot
Sliver
Slobad
Sliver Queen
Snake
Spider
Stray Cat
Squirrel
Swamp Troll
Symbiote
Tarkir Djinn
Teferi
Tibalt
Torturer
Turtle
Treefolk
Treefolk Guardian
Troll
Vampire
Vampire Lord
Viashino
Viper
Volcano Elemental
Walking Brain
Wasp
Werewolf
White Dwarf
White Wiz1
White Wiz2
White Wiz3
Wild Rat
Wild-Magic Sorcerer
Wurm
Vulture
Water Elemental
Witch
Wounded Sliver
Xira
Yeti
Zombie
Zombie Lord"
piP8us19,Minecraft Troll Virus Laucher,teraspit,Python,Tuesday 6th of June 2023 10:54:22 AM CDT,"import webbrowser 
import subprocess 
import tkinter as tk 
from tkinter import ttk 
from PIL import Image, ImageTk 
import getpass 

class MinecraftLauncher: 
    def __init__(self, master): 
        self.master = master 
        master.title(""Aboba Launcher V:1.0"") 
        master.geometry(""800x600"") 

        # Загружаем стили темы ttk для более красивого внешнего вида 
        style = ttk.Style() 
        style.theme_use('clam') 

        # Вставляем логотип 
        logo = Image.open(""materials\minecraft_logo.png"") 
        logo = logo.resize((100, 100), Image.LANCZOS) 
        self.logo_image = ImageTk.PhotoImage(logo) 
        self.logo_label = tk.Label(master, image=self.logo_image) 
        self.logo_label.pack(pady=30) 

        # Добавляем метку и поле ввода для имени пользователя 
        self.username_label = ttk.Label(master, text=""Username:"", font=('Arial', 20, 'bold')) 
        self.username_label.pack(pady=10) 
        self.username_input = ttk.Entry(master, width=40, font=('Arial', 16)) 
        self.username_input.pack(ipady=8) 

        # Добавляем метку и поле ввода для пароля 
        self.password_label = ttk.Label(master, text=""Password:"", font=('Arial', 20, 'bold')) 
        self.password_label.pack(pady=10) 
        self.password_input = ttk.Entry(master, show=""*"", width=40, font=('Arial', 16)) 
        self.password_input.pack(ipady=8) 

        # Добавляем метку и поле выбора версии 
        self.version_label = ttk.Label(master, text=""Minecraft Version:"", font=('Arial', 20, 'bold')) 
        self.version_label.pack(pady=10) 
        self.version_combo = ttk.Combobox(master, width=20, font=('Arial', 16), state=""readonly"", values=[""1.17.1"", ""1.17"", ""1.16.5"", ""1.16.4"", ""1.15.2"", ""1.15.1"", ""1.15"", ""1.14.4"", ""1.14.3"", ""1.14.2"", ""1.14.1"", ""1.14"", ""1.13.2"", ""1.13.1"", ""1.13"", ""1.12.2"", ""1.12.1"", ""1.12"", ""1.11.2"", ""1.11.1"", ""1.11"", ""1.10.2"", ""1.10.1"", ""1.10"", ""1.9.4"", ""1.9.3"", ""1.9.2"", ""1.9.1"", ""1.9"", ""1.8.9"", ""1.8.8"", ""1.8.7"", ""1.8.6"", ""1.8.5"", ""1.8.4"", ""1.8.3"", ""1.8.2"", ""1.8.1"", ""1.8"", ""1.7.10""]) 
        self.version_combo.current(0) 
        self.version_combo.pack(ipady=8) 

        # Создаем кнопку ""Играть"" 
        style.configure('PlayButton.TButton', 
                        font=('Arial', 12), 
                        foreground='#000000', 
                        background='#FFA500', 
                        borderwidth=0, padx=10, pady=5, 
                        relief='flat') 
        style.map('PlayButton.TButton', background=[('active', '#dddddd')]) 
        self.play_button = ttk.Button(master, 
                                      text=""Play"", 
                                      command=self.play_minecraft, 
                                      style='PlayButton.TButton') 
        self.play_button.place(relx=0.5, rely=0.9, anchor='center') 

        # Создаем кнопку ""О нас""
        style.configure('AboutButton.TButton', 
                        font=('Arial', 12), 
                        foreground='#000000', 
                        background='#FFA500', 
                        borderwidth=0, padx=10, 
                        pady=5, relief='flat') 
        style.map('AboutButton.TButton', background=[('active', '#dddddd')]) 
        self.about_button = ttk.Button(master, 
                                       text=""About"", 
                                       command=self.show_about, 
                                       style='AboutButton.TButton') 
        self.about_button.place(relx=0.25, rely=0.9, anchor='center') 

        # Создаем кнопку ""Донат"" 
        style.configure('DonateButton.TButton', 
                        font=('Arial', 12), 
                        foreground='#000000', 
                        background='#FFA500', 
                        borderwidth=0, padx=10, 
                        pady=5, relief='flat') 
        style.map('DonateButton.TButton', background=[('active', '#dddddd')]) 
        self.donate_button = ttk.Button(master, 
                                        text=""Donate"", 
                                        command=self.open_donate, 
                                        style='DonateButton.TButton') 
        self.donate_button.place(relx=0.75, rely=0.9, anchor='center') 

        # Создаем кнопку ""Settings"" 
        style.configure('SettingsButton.TButton', 
                        font=('Arial', 12), 
                        foreground='#000000', 
                        background='#FFA500', 
                        borderwidth=0, 
                        padx=10, pady=5, 
                        relief='flat') 
        style.map('SettingsButton.TButton', background=[('active', '#dddddd')]) 
        self.settings_button = ttk.Button(master, 
                                          text=""Settings"", 
                                          command=self.show_settings, 
                                          style='SettingsButton.TButton') 
        self.settings_button.place(relx=0, rely=0) 

        # Установка клавиш быстрого доступа для кнопок 
        master.bind('<Return>', lambda event: self.play_minecraft()) 
        master.bind('<Escape>', lambda event: master.destroy()) 

        # Устанавливаем фокус на поле ввода имени пользователя 
        self.username_input.focus() 

        # Запрещаем изменение размеров окна 
        master.resizable(False, False) 

        # Устанавливаем цвет фона всех виджетов 
        style.configure('.', background='#f5f5f5') 

        # Настраиваем стиль для меток и полей ввода 
        style.configure('TLabel', 
                        font=('Arial', 16), 
                        foreground='#4d4d4d', 
                        background='#f5f5f5') 

        style.configure('TEntry', 
                        font=('Arial', 16), 
                        foreground='#4d4d4d', 
                        background='white')

    def play_minecraft(self): 
        username = self.username_input.get() 
        password = self.password_input.get() 
        version = self.version_combo.get() 
        if username == """": 
            self.play_button.config(text=""Error: Please enter a username!"", foreground=""red"") 
        else: 
            self.play_button.config(text=""Launching Minecraft..."", foreground=""green"") 
            subprocess.Popen([""minecraft_launcher.exe"", ""--username"", username, ""--password"", password, ""--version"", version]) 

    def show_about(self): 
        webbrowser.open(""https://www.youtube.com/watch?v=dQw4w9WgXcQ"") 

    def open_donate(self): 
        webbrowser.open(""https://example.com/donate"") 

    def show_settings(self): 
        settings_window = tk.Toplevel(self.master) 
        settings_window.title(""Settings"") 
        settings_window.geometry(""2048x1080"") 

        # Добавляем метку с картинкой
        settings_logo = Image.open(""materials/settings_logo.png"") 
        settings_logo = settings_logo.resize((2048, 1080), Image.LANCZOS)
        self.settings_logo_image = ImageTk.PhotoImage(settings_logo) 
        settings_logo_label = tk.Label(settings_window, image=self.settings_logo_image) 
        settings_logo_label.pack(pady=10) 

        # Добавляем метку с текстом 
        settings_label = ttk.Label(settings_window, text=""Settings:"") 
        settings_label.pack(pady=10) 

        settings_window.grab_set() 

# Создаем основное окно и запускаем приложение 
root = tk.Tk() 
launcher = MinecraftLauncher(root) 
root.mainloop()
"
x7pKEfCj,Solution,Lonely_Wanderer,JavaScript,Tuesday 6th of June 2023 10:52:16 AM CDT,"// функция, которая генерирует случайное целое число в промежутке
// от минимального(min) до максимального (max)
function randi(min, max){
    return Math.floor(Math.random() * (max - min+1)) + min;
}

// матрица, которая будет содержать числа
var matrix = []
// заполнение матрицы случайными числами от 1 до 100
for(var i=0 ; i<5 ; i++){
    var m = [] // промежуточный массив, для хранения ""строк"", которые будут добавляться в основной массив (matrix)
    for(var j=0; j<5 ; j++){
        m.push(randi(1,100))
    }
    matrix.push(m)
}

// Печать массива на экран
for(var i=0; i<5 ; i++){
    var s=""""; // строка, в которую будут ""набираться"" числа
    for(var j=0; j<5; j++){
        s=s+matrix[i][j]+""\t"";
    }
    console.log(s);
}
// разделитель вывода
console.log(""--------------------"");


// массив, для хранение ответа (сколько в каждой строке элементов, которые больше чем эемент находящийся на главной диагонали)
var answer = []
for(var i=0; i<5 ; i++){
    var count = 0; // переменна для хранения кол-ва чисел, значения которых больше чем значение элемента находящегося на побочной диагонали
    for(var j=0; j<5 ; j++){
        // Если число, которое мы проверяем, строго больше того числа, которое находится в этом же столбце на
		// побочной диагонали, то увеличить счётчик на 1
		if(matrix[j][i] > matrix[4-i][i]) 
			count++; 
    }
	// запись в массив сколько числе в столбце больше числа из этого же столбца на побочной диагонали
    answer.push(count); 
}


console.log(""Ответ:"");
s=""""
for(var i=0; i<5 ; i++)
  s+=answer[i]+""\t"";
console.log(s);
"
ua0UbtMN,Untitled,Josif_tepe,C++,Tuesday 6th of June 2023 10:49:35 AM CDT,"#include <iostream>
#include <vector>
#include <stack>
#include <cstring>
using namespace std;
int m ,k;
int n;
long long x;
class node{
public:
    node *a, *b;
    long long bitmask;
    node(){
        a = NULL;
        b = NULL;
        bitmask = 0;
    }
};
int ret;
string curr;
void rek(int at, int depth, node *tmp){
    tmp -> bitmask |= x;
    int popcount = __builtin_popcount(tmp -> bitmask);
    if(popcount == n && depth > ret){
        ret = depth;
    }
    if(at == (int)curr.size() || depth > 60){
        return;
    }
    if(curr[at] == 'a'){
        if(tmp -> a == NULL){
            tmp -> a = new node();
        }
        rek(at + 1, depth + 1, tmp -> a);
    }
    else{
        if(tmp -> b == NULL){
            tmp -> b = new node();
        }
        rek(at + 1, depth + 1, tmp -> b);
    }
}
int main(int argc, const char * argv[]) {
    ios_base::sync_with_stdio(false);
    cin >> n;
    string s[6];
    node *root = new node();
    for(int i =0; i < n; i ++){
        cin >> s[i];
    }
    for(int i =0; i < n; i ++){
        curr = s[i];
        x = (1 << i);
        for(int j =0; j < s[i].size(); j ++){
            rek(j, 0, root);
        }
    }
    cout << ret << endl;
    return 0;
}"
aVw77Kx8,Untitled,Kruzar,PL/SQL,Tuesday 6th of June 2023 10:27:48 AM CDT,"ROUND((posts_count::real - (LAG(posts_count::real) OVER())) * 100/ (LAG(posts_count::real) OVER()), 2) AS percentage"
xzHhd1k9,Untitled,Josif_tepe,C++,Tuesday 6th of June 2023 10:27:34 AM CDT,"#include <iostream>
#include <vector>
using namespace std;
const int ALPHABET_SIZE = 2;
struct node {
    node *children_of_this_node[ALPHABET_SIZE];
    bool end_of_word;
    
    node() {
        for(int i = 0; i < ALPHABET_SIZE; i++) {
            children_of_this_node[i] = NULL;
        }
        end_of_word = false;
    }
};
void insert_word(node * trie, string & s) {
    node * tmp = trie;
    for(int i = 0; i < (int) s.size(); i++) {
        int current_char = s[i] - 'a';
        if(tmp -> children_of_this_node[current_char] == NULL) {
            tmp -> children_of_this_node[current_char] = new node();
        }
        tmp = tmp -> children_of_this_node[current_char];
    }
    tmp -> end_of_word = true;
}
bool search_word(node * trie, string & s) {
    node * tmp = trie;
    for(int i = 0; i < (int) s.size(); i++) {
        int current_char = s[i] - 'a';
        if(tmp -> children_of_this_node[current_char] == NULL) {
            return false;
        }
        tmp = tmp -> children_of_this_node[current_char];
    }
    return tmp -> end_of_word;
}
int main() {
    ios_base::sync_with_stdio(false);
    int n;
    cin >> n;
    vector<string> v(n);
    for(int i = 0; i < n; i++) {
        cin >> v[i];
    }
    for(int i = 0; i < n; i++) {
        for(int j = i + 1; j < n; j++) {
            if((int) v[i].size() < (int) v[j].size()) {
                swap(v[i], v[j]);
            }
        }
    }
    node * tries[n - 1];
    for(int i = 0; i < n - 1; i++){
        tries[i] = new node();
    }
    for(int at = 1; at < n; at++) {
        for(int i = 0; i < (int) v[at].size(); i++) {
            string tmp = """";
            for(int j = i; j < min((int) i + 60, (int) v[at].size()); j++) {
                tmp += v[at][j];
                insert_word(tries[at - 1], tmp);
            }
        }
    }
    int result = 0;
    for(int i = 0; i < (int) v[0].size(); i++) {
        string tmp = """";
        for(int j = i; j < min(i + 60, (int) v[0].size()); j++) {
            tmp += v[0][j];
            bool ok = true;
            for(int k = 0; k < n - 1; k++) {
            
                if(!search_word(tries[k], tmp)) {
                    ok = false;
                    break;
                }
            }
            if(ok) {
                result = max(result, (int) tmp.size());
            }
        }
    }
    cout << result << endl;
    return 0;
}
"
zQBSeL1D,Untitled,dem123,JSON,Tuesday 6th of June 2023 10:19:55 AM CDT,"{
	""dataSource"": {
		""sources"": {
			""hubs"": [
				14
			]
		},
		""relations"": [
			{
				""name"": ""hierarchy-1003"",
				""parentProject"": ""dbdesigner"",
				""parentLevel"": ""1003"",
				""childProject"": ""p274240794598"",
				""childLevel"": ""responseid"",
				""expression"": {
					""operator"": ""Equal"",
					""operands"": [
						{
							""name"": ""id"",
							""project"": ""dbdesigner"",
							""level"": ""1003"",
							""node"": ""Var""
						},
						{
							""name"": ""hierarchy"",
							""project"": ""p274240794598"",
							""level"": ""responseid"",
							""node"": ""Var""
						}
					],
					""node"": ""Binary""
				},
				""multiplicity"": ""one-to-many""
			}
		],
		""prepare"": [
			{
				""name"": ""contacts"",
				""definition"": [
					{
						""name"": ""ContactId"",
						""expression"": {
							""name"": ""ContactId"",
							""project"": ""p274240794598"",
							""level"": ""responseid"",
							""node"": ""Var""
						},
						""group"": [
							""Values""
						],
						""isKey"": true,
						""item"": ""Select""
					}
				],
				""action"": ""NewLevel""
			},
			{
				""relation"": {
					""name"": ""contacts-to-responses"",
					""parentkey"": {
						""name"": ""ContactId"",
						""level"": ""contacts""
					},
					""childkey"": {
						""name"": ""ContactId"",
						""project"": ""p274240794598"",
						""level"": ""responseid""
					},
					""multiplicity"": ""one-to-many""
				},
				""action"": ""Link""
			},
			{
				""expression"": {
					""name"": ""InHierarchy"",
					""arguments"": [
						{
							""level"": ""1003"",
							""project"": ""dbdesigner"",
							""hierarchy"": ""1004"",
							""node"": ""Hierarchy""
						},
						{
							""name"": ""In"",
							""arguments"": [
								{
									""name"": ""id"",
									""project"": ""dbdesigner"",
									""level"": ""1003"",
									""node"": ""Var""
								},
								{
									""type"": ""text"",
									""value"": ""1"",
									""node"": ""Constant""
								}
							],
							""node"": ""Call""
						}
					],
					""node"": ""Call""
				},
				""action"": ""Filter""
			},
			{
				""expression"": {
					""operator"": ""And"",
					""operands"": [
						{
							""operator"": ""Equal"",
							""operands"": [
								{
									""name"": ""IsCurrent"",
									""project"": ""p274240794598"",
									""level"": ""responseid"",
									""node"": ""Var""
								},
								{
									""type"": ""text"",
									""value"": ""yes"",
									""node"": ""Constant""
								}
							],
							""node"": ""Binary""
						},
						{
							""operator"": ""Greater"",
							""operands"": [
								{
									""name"": ""ValidPeriod_To"",
									""project"": ""p274240794598"",
									""level"": ""responseid"",
									""node"": ""Var""
								},
								{
									""name"": ""GetDate"",
									""arguments"": [],
									""node"": ""Call""
								}
							],
							""node"": ""Binary""
						},
						{
							""operator"": ""NotEqual"",
							""operands"": [
								{
									""name"": ""unsubscribed"",
									""project"": ""p274240794598"",
									""level"": ""responseid"",
									""node"": ""Var""
								},
								{
									""type"": ""Text"",
									""value"": ""1"",
									""node"": ""Constant""
								}
							],
							""node"": ""Binary""
						}
					],
					""node"": ""Binary""
				},
				""action"": ""Filter""
			}
		]
	},
	""rows"": [
		{
			""parentLevel"": {
				""name"": ""responseid"",
				""project"": ""p274240794598"",
				""node"": ""Level""
			},
			""sortingIsFilterDependent"": false,
			""skip"": 0,
			""type"": ""List""
		}
	],
	""settings"": {
		""default"": {
			""values"": [
				{
					""expression"": {
						""name"": ""gender"",
						""project"": ""p274240794598"",
						""level"": ""responseid"",
						""node"": ""Var""
					},
					""valueType"": ""Expression"",
					""id"": ""gender""
				},
				{
					""expression"": {
						""name"": ""location"",
						""project"": ""p274240794598"",
						""level"": ""responseid"",
						""node"": ""Var""
					},
					""valueType"": ""Expression"",
					""id"": ""location""
				},
				{
					""expression"": {
						""name"": ""hierarchy"",
						""project"": ""p274240794598"",
						""level"": ""responseid"",
						""node"": ""Var""
					},
					""valueType"": ""Expression"",
					""id"": ""hierarchy""
				},
				{
					""expression"": {
						""name"": ""alternativeemail"",
						""project"": ""p274240794598"",
						""level"": ""responseid"",
						""node"": ""Var""
					},
					""valueType"": ""Expression"",
					""id"": ""alternativeemail""
				},
				{
					""expression"": {
						""name"": ""email"",
						""project"": ""p274240794598"",
						""level"": ""responseid"",
						""node"": ""Var""
					},
					""valueType"": ""Expression"",
					""id"": ""email""
				},
				{
					""expression"": {
						""name"": ""Unsubscribed"",
						""project"": ""p274240794598"",
						""level"": ""responseid"",
						""node"": ""Var""
					},
					""valueType"": ""Expression"",
					""id"": ""Unsubscribed""
				},
				{
					""expression"": {
						""name"": ""ContactId"",
						""project"": ""p274240794598"",
						""level"": ""responseid"",
						""node"": ""Var""
					},
					""valueType"": ""Expression"",
					""id"": ""ContactId""
				}
			]
		}
	}
}"
XaG87D4T,Untitled,Josif_tepe,C++,Tuesday 6th of June 2023 09:57:50 AM CDT,"#include <iostream>
#include <vector>
using namespace std;
const int ALPHABET_SIZE = 26;
struct node {
    node *children_of_this_node[ALPHABET_SIZE];
    bool end_of_word;

    node() {
        end_of_word = false;
        for(int i = 0; i < ALPHABET_SIZE; i++) {
            children_of_this_node[i] = NULL;
        }
    }
};
void insert_word(node * trie, string & s) {
    node * tmp = trie;
    
    for(int i = 0; i < (int) s.size(); i++) {
        int current_char = (s[i] - 'a');
        if(tmp -> children_of_this_node[current_char] == NULL) {
            tmp -> children_of_this_node[current_char] = new node();
        }
        tmp = tmp -> children_of_this_node[current_char];
    }
    tmp -> end_of_word = true;
}
bool search_word(node * trie, string & s) {
    node * tmp = trie;
    
    for(int i = 0; i < (int) s.size(); i++) {
        int current_char = (s[i] - 'a');
        if(tmp -> children_of_this_node[current_char] == NULL) {
            return false;
        }
        tmp = tmp -> children_of_this_node[current_char];
    }
    return tmp -> end_of_word;
}
void delete_word(node * trie, string & s) {
    node * tmp = trie;
    
    for(int i = 0; i < (int) s.size(); i++) {
        int current_char = (s[i] - 'a');
        if(tmp -> children_of_this_node[current_char] == NULL) {
            return;
        }
        tmp = tmp -> children_of_this_node[current_char];
    }
    tmp -> end_of_word = false;
}
int main() {
    int n;
    cin >> n;
    
    node * trie = new node();
    vector<string> dictionary(n);
    for(int i = 0; i < n; i++) {
        cin >> dictionary[i];
        insert_word(trie, dictionary[i]);
    }
    
    int q;
    cin >> q;
    for(int i = 0; i < q; i++) {
        char c;
        cin >> c;
        if(c == 'D') {
            string s;
            cin >> s;
            delete_word(trie, s);
        }
        else {
            string s;
            cin >> s;
            if(search_word(trie, s)) {
                cout << ""YES"" << endl;
            }
            else {
                cout << ""NO"" << endl;
            }
        }
    }
    

    return 0;
}
"
BbaGbg6P,Untitled,Josif_tepe,C++,Tuesday 6th of June 2023 09:55:40 AM CDT,"#include <iostream>
#include <vector>
using namespace std;
const int ALPHABET_SIZE = 26;
struct node {
    node *children_of_this_node[ALPHABET_SIZE];
    bool end_of_word;

    node() {
        end_of_word = false;
        for(int i = 0; i < ALPHABET_SIZE; i++) {
            children_of_this_node[i] = NULL;
        }
    }
};
void insert_word(node * trie, string s) {
    node * tmp = trie;
    
    for(int i = 0; i < (int) s.size(); i++) {
        int current_char = (s[i] - 'a');
        if(tmp -> children_of_this_node[current_char] == NULL) {
            tmp -> children_of_this_node[current_char] = new node();
        }
        tmp = tmp -> children_of_this_node[current_char];
    }
    tmp -> end_of_word = true;
}
bool search_word(node * trie, string s) {
    node * tmp = trie;
    
    for(int i = 0; i < (int) s.size(); i++) {
        int current_char = (s[i] - 'a');
        if(tmp -> children_of_this_node[current_char] == NULL) {
            return false;
        }
        tmp = tmp -> children_of_this_node[current_char];
    }
    return tmp -> end_of_word;
}
void delete_word(node * trie, string s) {
    node * tmp = trie;
    
    for(int i = 0; i < (int) s.size(); i++) {
        int current_char = (s[i] - 'a');
        if(tmp -> children_of_this_node[current_char] == NULL) {
            return;
        }
        tmp = tmp -> children_of_this_node[current_char];
    }
    tmp -> end_of_word = false;
}
int main() {
    int n;
    cin >> n;
    
    node * trie = new node();
    vector<string> dictionary(n);
    for(int i = 0; i < n; i++) {
        cin >> dictionary[i];
        insert_word(trie, dictionary[i]);
    }
    
    int q;
    cin >> q;
    for(int i = 0; i < q; i++) {
        char c;
        cin >> c;
        if(c == 'D') {
            string s;
            cin >> s;
            delete_word(trie, s);
        }
        else {
            string s;
            cin >> s;
            if(search_word(trie, s)) {
                cout << ""YES"" << endl;
            }
            else {
                cout << ""NO"" << endl;
            }
        }
    }
    

    return 0;
}
"
Vh95HQNx,Untitled,Josif_tepe,C++,Tuesday 6th of June 2023 09:50:17 AM CDT,"#include <iostream>
#include <vector>
using namespace std;
const int ALPHABET_SIZE = 26;
struct node {
    node *children_of_this_node[ALPHABET_SIZE];
    bool end_of_word;

    node() {
        end_of_word = false;
        for(int i = 0; i < ALPHABET_SIZE; i++) {
            children_of_this_node[i] = NULL;
        }
    }
};
void insert_word(node * trie, string s) {
    node * tmp = trie;
    
    for(int i = 0; i < (int) s.size(); i++) {
        int current_char = (s[i] - 'a');
        if(tmp -> children_of_this_node[current_char] == NULL) {
            tmp -> children_of_this_node[current_char] = new node();
        }
        tmp = tmp -> children_of_this_node[current_char];
    }
    tmp -> end_of_word = true;
}
bool search_word(node * trie, string s) {
    node * tmp = trie;
    
    for(int i = 0; i < (int) s.size(); i++) {
        int current_char = (s[i] - 'a');
        if(tmp -> children_of_this_node[current_char] == NULL) {
            return false;
        }
        tmp = tmp -> children_of_this_node[current_char];
    }
    return tmp -> end_of_word;
}
int main() {
    int n;
    cin >> n;
    
    node * trie = new node();
    vector<string> dictionary(n);
    for(int i = 0; i < n; i++) {
        cin >> dictionary[i];
        insert_word(trie, dictionary[i]);
    }
    
    int q;
    cin >> q;
    for(int i = 0; i < q; i++) {
        string s;
        cin >> s;
        if(search_word(trie, s)) {
            cout << ""YES""<< endl;
        }
        else {
            cout << ""NO"" << endl;
        }
    }
    

    return 0;
}
"
Zj9fDnzi,Untitled,Josif_tepe,C++,Tuesday 6th of June 2023 09:49:37 AM CDT,"#include <iostream>
#include <vector>
using namespace std;
const int ALPHABET_SIZE = 26;
struct node {
    node *children_of_this_node[ALPHABET_SIZE];
    bool end_of_word;

    node() {
        end_of_word = false;
        for(int i = 0; i < ALPHABET_SIZE; i++) {
            children_of_this_node[i] = NULL;
        }
    }
};
void insert_word(node * trie, string s) {
    node * tmp = trie;
    
    for(int i = 0; i < (int) s.size(); i++) {
        int current_char = (s[i] - 'a');
        if(tmp -> children_of_this_node[current_char] == NULL) {
            tmp -> children_of_this_node[current_char] = new node();
        }
        tmp = tmp -> children_of_this_node[current_char];
    }
    tmp -> end_of_word = true;
}
bool find_word(node * trie, string s) {
    node * tmp = trie;
    
    for(int i = 0; i < (int) s.size(); i++) {
        int current_char = (s[i] - 'a');
        if(tmp -> children_of_this_node[current_char] == NULL) {
            return false;
        }
        tmp = tmp -> children_of_this_node[current_char];
    }
    return tmp -> end_of_word;
}
int main() {
    int n;
    cin >> n;
    
    node * trie = new node();
    vector<string> dictionary(n);
    for(int i = 0; i < n; i++) {
        cin >> dictionary[i];
        insert_word(trie, dictionary[i]);
    }
    
    int q;
    cin >> q;
    for(int i = 0; i < q; i++) {
        string s;
        cin >> s;
        if(find_word(trie, s)) {
            cout << ""YES""<< endl;
        }
        else {
            cout << ""NO"" << endl;
        }
    }
    

    return 0;
}
"
xPjfumGq,Roblox Script Helper,USERNAME23847,Lua,Tuesday 6th of June 2023 09:36:48 AM CDT,"-- Gui to Lua
-- Version: 3.2

-- Instances:

local ScriptHelper = Instance.new(""ScreenGui"")
local Sidebar = Instance.new(""Frame"")
local UICorner = Instance.new(""UICorner"")
local UIPadding = Instance.new(""UIPadding"")
local UIListLayout = Instance.new(""UIListLayout"")
local UIAspectRatioConstraint = Instance.new(""UIAspectRatioConstraint"")
local Executor = Instance.new(""ImageButton"")
local UIAspectRatioConstraint_2 = Instance.new(""UIAspectRatioConstraint"")
local UICorner_2 = Instance.new(""UICorner"")
local Output = Instance.new(""ImageButton"")
local UIAspectRatioConstraint_3 = Instance.new(""UIAspectRatioConstraint"")
local UICorner_3 = Instance.new(""UICorner"")
local ScriptPackage = Instance.new(""ImageButton"")
local UIAspectRatioConstraint_4 = Instance.new(""UIAspectRatioConstraint"")
local UICorner_4 = Instance.new(""UICorner"")
local Executor_2 = Instance.new(""Frame"")
local UICorner_5 = Instance.new(""UICorner"")
local UIPadding_2 = Instance.new(""UIPadding"")
local TopBar = Instance.new(""TextLabel"")
local Close = Instance.new(""TextButton"")
local UIAspectRatioConstraint_5 = Instance.new(""UIAspectRatioConstraint"")
local UICorner_6 = Instance.new(""UICorner"")
local Execute = Instance.new(""TextButton"")
local UICorner_7 = Instance.new(""UICorner"")
local Script = Instance.new(""TextBox"")
local Save = Instance.new(""TextButton"")
local UICorner_8 = Instance.new(""UICorner"")
local Load = Instance.new(""TextButton"")
local UICorner_9 = Instance.new(""UICorner"")
local FileName = Instance.new(""TextBox"")
local UICorner_10 = Instance.new(""UICorner"")
local Output_2 = Instance.new(""Frame"")
local UICorner_11 = Instance.new(""UICorner"")
local UIPadding_3 = Instance.new(""UIPadding"")
local TopBar_2 = Instance.new(""TextLabel"")
local Close_2 = Instance.new(""TextButton"")
local UIAspectRatioConstraint_6 = Instance.new(""UIAspectRatioConstraint"")
local UICorner_12 = Instance.new(""UICorner"")
local ScrollingFrame = Instance.new(""ScrollingFrame"")
local UIListLayout_2 = Instance.new(""UIListLayout"")
local PrintLabel = Instance.new(""TextLabel"")
local Notif = Instance.new(""Frame"")
local UICorner_13 = Instance.new(""UICorner"")
local UIPadding_4 = Instance.new(""UIPadding"")
local TopBar_3 = Instance.new(""TextLabel"")
local Close_3 = Instance.new(""TextButton"")
local UIAspectRatioConstraint_7 = Instance.new(""UIAspectRatioConstraint"")
local UICorner_14 = Instance.new(""UICorner"")
local TextLabel = Instance.new(""TextLabel"")

--Properties:

ScriptHelper.Name = ""ScriptHelper""
ScriptHelper.Parent = game.Players.LocalPlayer:WaitForChild(""PlayerGui"")
ScriptHelper.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

Sidebar.Name = ""Sidebar""
Sidebar.Parent = ScriptHelper
Sidebar.BackgroundColor3 = Color3.fromRGB(74, 74, 74)
Sidebar.Position = UDim2.new(0, -32, 0.164000005, 0)
Sidebar.Size = UDim2.new(0.100000001, 0, 0.66989243, 0)

UICorner.CornerRadius = UDim.new(0, 32)
UICorner.Parent = Sidebar

UIPadding.Parent = Sidebar
UIPadding.PaddingBottom = UDim.new(0, 10)
UIPadding.PaddingLeft = UDim.new(0, 42)
UIPadding.PaddingRight = UDim.new(0, 10)
UIPadding.PaddingTop = UDim.new(0, 10)

UIListLayout.Parent = Sidebar
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout.Padding = UDim.new(0, 10)

UIAspectRatioConstraint.Parent = Sidebar
UIAspectRatioConstraint.AspectRatio = 0.340

Executor.Name = ""Executor""
Executor.Parent = Sidebar
Executor.BackgroundColor3 = Color3.fromRGB(118, 118, 118)
Executor.Size = UDim2.new(1, 0, 1, 0)
Executor.Image = ""rbxassetid://13621204682""

UIAspectRatioConstraint_2.Parent = Executor

UICorner_2.CornerRadius = UDim.new(0, 32)
UICorner_2.Parent = Executor

Output.Name = ""Output""
Output.Parent = Sidebar
Output.BackgroundColor3 = Color3.fromRGB(118, 118, 118)
Output.Size = UDim2.new(1, 0, 1, 0)
Output.Image = ""rbxassetid://13621223490""

UIAspectRatioConstraint_3.Parent = Output

UICorner_3.CornerRadius = UDim.new(0, 32)
UICorner_3.Parent = Output

ScriptPackage.Name = ""ScriptPackage""
ScriptPackage.Parent = Sidebar
ScriptPackage.BackgroundColor3 = Color3.fromRGB(118, 118, 118)
ScriptPackage.Size = UDim2.new(1, 0, 1, 0)
ScriptPackage.Image = ""http://www.roblox.com/asset/?id=13622585393""

UIAspectRatioConstraint_4.Parent = ScriptPackage

UICorner_4.CornerRadius = UDim.new(0, 32)
UICorner_4.Parent = ScriptPackage

Executor_2.Name = ""Executor""
Executor_2.Parent = ScriptHelper
Executor_2.BackgroundColor3 = Color3.fromRGB(74, 74, 74)
Executor_2.Position = UDim2.new(0.434841335, 0, 0.305683553, 0)
Executor_2.Size = UDim2.new(0.325523317, 0, 0.437941641, 0)
Executor_2.Visible = false

UICorner_5.CornerRadius = UDim.new(0, 32)
UICorner_5.Parent = Executor_2

UIPadding_2.Parent = Executor_2
UIPadding_2.PaddingBottom = UDim.new(0, 10)
UIPadding_2.PaddingLeft = UDim.new(0, 10)
UIPadding_2.PaddingRight = UDim.new(0, 10)
UIPadding_2.PaddingTop = UDim.new(0, 10)

TopBar.Name = ""TopBar""
TopBar.Parent = Executor_2
TopBar.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TopBar.BackgroundTransparency = 1.000
TopBar.Position = UDim2.new(0, -10, 0, -10)
TopBar.Size = UDim2.new(1, 20, 0.100000001, 15)
TopBar.Font = Enum.Font.SourceSans
TopBar.Text = ""    Executor""
TopBar.TextColor3 = Color3.fromRGB(255, 255, 255)
TopBar.TextScaled = true
TopBar.TextSize = 14.000
TopBar.TextWrapped = true
TopBar.TextXAlignment = Enum.TextXAlignment.Left

Close.Name = ""Close""
Close.Parent = Executor_2
Close.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
Close.Position = UDim2.new(0.936029613, 0, 0.0113164634, 0)
Close.Size = UDim2.new(0.100000001, 0, 0.100000001, 0)
Close.Font = Enum.Font.SourceSans
Close.Text = ""X""
Close.TextColor3 = Color3.fromRGB(255, 255, 255)
Close.TextScaled = true
Close.TextSize = 14.000
Close.TextWrapped = true

UIAspectRatioConstraint_5.Parent = Close

UICorner_6.CornerRadius = UDim.new(1, 0)
UICorner_6.Parent = Close

Execute.Name = ""Execute""
Execute.Parent = Executor_2
Execute.BackgroundColor3 = Color3.fromRGB(118, 118, 118)
Execute.Position = UDim2.new(0, 0, 0.167999998, 0)
Execute.Size = UDim2.new(0.171413064, 0, 0.100000009, 0)
Execute.Font = Enum.Font.SourceSans
Execute.Text = ""Execute""
Execute.TextColor3 = Color3.fromRGB(255, 255, 255)
Execute.TextScaled = true
Execute.TextSize = 14.000
Execute.TextWrapped = true

UICorner_7.CornerRadius = UDim.new(1, 0)
UICorner_7.Parent = Execute

Script.Name = ""Script""
Script.Parent = Executor_2
Script.BackgroundColor3 = Color3.fromRGB(47, 47, 47)
Script.Position = UDim2.new(0, 0, 0.316000015, 0)
Script.Size = UDim2.new(1, 0, 0.649999976, 0)
Script.ClearTextOnFocus = false
Script.Font = Enum.Font.SourceSans
Script.MultiLine = true
Script.Text = ""cprint(\""Henlo, World!\"") --this will put \""Henlo, World!\"" into the console window.""
Script.TextColor3 = Color3.fromRGB(255, 255, 255)
Script.TextSize = 14.000
Script.TextXAlignment = Enum.TextXAlignment.Left
Script.TextYAlignment = Enum.TextYAlignment.Top

Save.Name = ""Save""
Save.Parent = Executor_2
Save.BackgroundColor3 = Color3.fromRGB(118, 118, 118)
Save.Position = UDim2.new(0.826660812, 0, 0.167999998, 0)
Save.Size = UDim2.new(0.171413064, 0, 0.100000009, 0)
Save.Font = Enum.Font.SourceSans
Save.Text = ""Save""
Save.TextColor3 = Color3.fromRGB(255, 255, 255)
Save.TextScaled = true
Save.TextSize = 14.000
Save.TextWrapped = true

UICorner_8.CornerRadius = UDim.new(1, 0)
UICorner_8.Parent = Save

Load.Name = ""Load""
Load.Parent = Executor_2
Load.BackgroundColor3 = Color3.fromRGB(118, 118, 118)
Load.Position = UDim2.new(0.634061813, 0, 0.167999998, 0)
Load.Size = UDim2.new(0.171413064, 0, 0.100000009, 0)
Load.Font = Enum.Font.SourceSans
Load.Text = ""Load""
Load.TextColor3 = Color3.fromRGB(255, 255, 255)
Load.TextScaled = true
Load.TextSize = 14.000
Load.TextWrapped = true

UICorner_9.CornerRadius = UDim.new(1, 0)
UICorner_9.Parent = Load

FileName.Name = ""FileName""
FileName.Parent = Executor_2
FileName.BackgroundColor3 = Color3.fromRGB(47, 47, 47)
FileName.Position = UDim2.new(0.18592228, 0, 0.167517275, 0)
FileName.Size = UDim2.new(0.428933024, 0, 0.100000009, 0)
FileName.Font = Enum.Font.SourceSans
FileName.PlaceholderText = ""FileName""
FileName.Text = """"
FileName.TextColor3 = Color3.fromRGB(0, 0, 0)
FileName.TextSize = 14.000

UICorner_10.CornerRadius = UDim.new(1, 0)
UICorner_10.Parent = FileName

Output_2.Name = ""Output""
Output_2.Parent = ScriptHelper
Output_2.BackgroundColor3 = Color3.fromRGB(74, 74, 74)
Output_2.Position = UDim2.new(0.118163407, 0, 0.196620584, 0)
Output_2.Size = UDim2.new(0.325523317, 0, 0.437941641, 0)
Output_2.Visible = false

UICorner_11.CornerRadius = UDim.new(0, 32)
UICorner_11.Parent = Output_2

UIPadding_3.Parent = Output_2
UIPadding_3.PaddingBottom = UDim.new(0, 10)
UIPadding_3.PaddingLeft = UDim.new(0, 10)
UIPadding_3.PaddingRight = UDim.new(0, 10)
UIPadding_3.PaddingTop = UDim.new(0, 10)

TopBar_2.Name = ""TopBar""
TopBar_2.Parent = Output_2
TopBar_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TopBar_2.BackgroundTransparency = 1.000
TopBar_2.Position = UDim2.new(0, -10, 0, -10)
TopBar_2.Size = UDim2.new(1, 20, 0.100000001, 15)
TopBar_2.Font = Enum.Font.SourceSans
TopBar_2.Text = ""    Output""
TopBar_2.TextColor3 = Color3.fromRGB(255, 255, 255)
TopBar_2.TextScaled = true
TopBar_2.TextSize = 14.000
TopBar_2.TextWrapped = true
TopBar_2.TextXAlignment = Enum.TextXAlignment.Left

Close_2.Name = ""Close""
Close_2.Parent = Output_2
Close_2.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
Close_2.Position = UDim2.new(0.936029613, 0, 0.0113164634, 0)
Close_2.Size = UDim2.new(0.100000001, 0, 0.100000001, 0)
Close_2.Font = Enum.Font.SourceSans
Close_2.Text = ""X""
Close_2.TextColor3 = Color3.fromRGB(255, 255, 255)
Close_2.TextScaled = true
Close_2.TextSize = 14.000
Close_2.TextWrapped = true

UIAspectRatioConstraint_6.Parent = Close_2

UICorner_12.CornerRadius = UDim.new(1, 0)
UICorner_12.Parent = Close_2

ScrollingFrame.Parent = Output_2
ScrollingFrame.Active = true
ScrollingFrame.BackgroundColor3 = Color3.fromRGB(47, 47, 47)
ScrollingFrame.Position = UDim2.new(0, 0, 0.116937004, 0)
ScrollingFrame.Size = UDim2.new(1, 0, 0.850000024, 0)
ScrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 0)

UIListLayout_2.Parent = ScrollingFrame
UIListLayout_2.SortOrder = Enum.SortOrder.LayoutOrder

PrintLabel.Name = ""PrintLabel""
PrintLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
PrintLabel.BackgroundTransparency = 1.000
PrintLabel.Size = UDim2.new(1, 0, 0, 14)
PrintLabel.Font = Enum.Font.SourceSans
PrintLabel.Text = ""Henlo, World!""
PrintLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
PrintLabel.TextSize = 14.000
PrintLabel.TextXAlignment = Enum.TextXAlignment.Left

Notif.Name = ""Notif""
Notif.BackgroundColor3 = Color3.fromRGB(74, 74, 74)
Notif.Position = UDim2.new(0.336934507, 0, 0.196620584, 0)
Notif.Size = UDim2.new(0.325523317, 0, 0.437941641, 0)

UICorner_13.CornerRadius = UDim.new(0, 32)
UICorner_13.Parent = Notif

UIPadding_4.Parent = Notif
UIPadding_4.PaddingBottom = UDim.new(0, 10)
UIPadding_4.PaddingLeft = UDim.new(0, 10)
UIPadding_4.PaddingRight = UDim.new(0, 10)
UIPadding_4.PaddingTop = UDim.new(0, 10)

TopBar_3.Name = ""TopBar""
TopBar_3.Parent = Notif
TopBar_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TopBar_3.BackgroundTransparency = 1.000
TopBar_3.Position = UDim2.new(0, -10, 0, -10)
TopBar_3.Size = UDim2.new(1, 20, 0.100000001, 15)
TopBar_3.Font = Enum.Font.SourceSans
TopBar_3.Text = ""    Notification""
TopBar_3.TextColor3 = Color3.fromRGB(255, 255, 255)
TopBar_3.TextScaled = true
TopBar_3.TextSize = 14.000
TopBar_3.TextWrapped = true
TopBar_3.TextXAlignment = Enum.TextXAlignment.Left

Close_3.Name = ""Close""
Close_3.Parent = Notif
Close_3.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
Close_3.Position = UDim2.new(0.936029613, 0, 0.0113164634, 0)
Close_3.Size = UDim2.new(0.100000001, 0, 0.100000001, 0)
Close_3.Font = Enum.Font.SourceSans
Close_3.Text = ""X""
Close_3.TextColor3 = Color3.fromRGB(255, 255, 255)
Close_3.TextScaled = true
Close_3.TextSize = 14.000
Close_3.TextWrapped = true

UIAspectRatioConstraint_7.Parent = Close_3

UICorner_14.CornerRadius = UDim.new(1, 0)
UICorner_14.Parent = Close_3

TextLabel.Parent = Notif
TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.BackgroundTransparency = 1.000
TextLabel.Position = UDim2.new(0, 0, 0.116999999, 0)
TextLabel.Size = UDim2.new(1, 0, 0.899999976, 0)
TextLabel.Font = Enum.Font.SourceSans
TextLabel.Text = ""uhh hi there the notif broke i think""
TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.TextScaled = true
TextLabel.TextSize = 14.000
TextLabel.TextWrapped = true

-- Module Scripts:

local fake_module_scripts = {}

do -- ScriptHelper.Module
	local script = Instance.new('ModuleScript', ScriptHelper)
	script.Name = ""Module""
	local function module_script()
		local module = {}
		
		function module:print(text, color)
			local clone = PrintLabel:Clone()
			clone.Text = text
			clone.TextColor3 = color
			clone.Parent = script.Parent.Output.ScrollingFrame
		end
		
		function module:notif(text)
			local clone = Notif:Clone()
			clone.TextLabel.Text = text
			clone.Parent = script.Parent
		end
		
		return module
	end
	fake_module_scripts[script] = module_script
end


-- Scripts:

local function GKOK_fake_script() -- Sidebar.LocalScript 
	local script = Instance.new('LocalScript', Sidebar)
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end

	script.Parent.Executor.MouseButton1Click:Connect(function()
		script.Parent.Parent.Executor.Visible = true
	end)
	
	script.Parent.Output.MouseButton1Click:Connect(function()
		script.Parent.Parent.Output.Visible = true
	end)
	
	script.Parent.ScriptPackage.MouseButton1Click:Connect(function()
		loadstring(game:HttpGet(""https://pastebin.com/raw/XZu4VMFe""))()
	end)
end
coroutine.wrap(GKOK_fake_script)()
local function QFDRO_fake_script() -- Executor_2.DragScript 
	local script = Instance.new('LocalScript', Executor_2)
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end

	local UIS = game:GetService(""UserInputService"")
	
	local MainFrame = script.Parent
	local TopBar = MainFrame.TopBar
	
	local Camera = workspace:WaitForChild(""Camera"")
	
	local DragMousePosition
	local FramePosition
	
	local Draggable = false
	
	TopBar.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			Draggable = true
			DragMousePosition = Vector2.new(input.Position.X, input.Position.Y)
			FramePosition = Vector2.new(MainFrame.Position.X.Scale,MainFrame.Position.Y.Scale)
		end
	end)
	
	TopBar.InputEnded:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			Draggable = false
		end
	end)
	
	UIS.InputChanged:Connect(function(input)
		if Draggable == true then
			local NewPosition = FramePosition + ((Vector2.new(input.Position.X, input.Position.Y) - DragMousePosition) / Camera.ViewportSize)
			MainFrame.Position = UDim2.new(NewPosition.X, 0, NewPosition.Y, 0)
		end
	end)
end
coroutine.wrap(QFDRO_fake_script)()
local function XRLRE_fake_script() -- Executor_2.LocalScript 
	local script = Instance.new('LocalScript', Executor_2)
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end

	local customFunctions = [[
	function cprint(text)
		require(script.Parent.Parent.Module):print(text, Color3.New(255,255,255))
	end
	function cwarn(text)
		require(script.Parent.Parent.Module):print(text, Color3.New(0,255,0))
	end
	function cerror(text)
		require(script.Parent.Parent.Module):print(text, Color3.New(255,0,0))
	end
	function notify(text)
		require(script.Parent.Parent.Module):notif(text)
	end
	]]
	
	script.Parent.Execute.MouseButton1Click:Connect(function()
		if game:GetService(""RunService""):IsStudio() then
			game.ReplicatedStorage.runCode:FireServer(customFunctions..""\n""..script.Parent.Script.Text)
		else
			loadstring(customFunctions..""\n""..script.Parent.Script.Text)()
		end
	end)
	
	script.Parent.Load.MouseButton1Click:Connect(function()
		if (readfile and isfolder and makefolder) then
			if not isfolder(""ScriptHelper"") then
				makefolder(""ScriptHelper"")
			end
			if not isfolder(""ScriptHelper//SavedScripts"") then
				makefolder(""ScriptHelper//SavedScripts"")
			end
			if isfile(""ScriptHelper//SavedScripts//""..script.Parent.FileName.Text.."".lua"") then
				script.Parent.Script.Text = readfile(""ScriptHelper//SavedScripts//""..script.Parent.FileName.Text.."".lua"")
			else
				print(""ScriptHelper: Sorry, but we couldn't find the file you were looking for."")
			end
		else
			print(""ScriptHelper: Sorry, but your executor does not support loading."")
		end
	end)
	
	script.Parent.Save.MouseButton1Click:Connect(function()
		if (writefile and isfolder and makefolder) then
			if not isfolder(""ScriptHelper"") then
				makefolder(""ScriptHelper"")
			end
			if not isfolder(""ScriptHelper//SavedScripts"") then
				makefolder(""ScriptHelper//SavedScripts"")
			end
			writefile(""ScriptHelper//SavedScripts//""..script.Parent.FileName.Text.."".lua"", script.Parent.Script.Text)
		else
			print(""ScriptHelper: Sorry, but your executor does not support saving."")
		end
	end)
	
	script.Parent.Close.MouseButton1Click:Connect(function()
		script.Parent.Visible = false
	end)
end
coroutine.wrap(XRLRE_fake_script)()
local function IZOCTRO_fake_script() -- Output_2.DragScript 
	local script = Instance.new('LocalScript', Output_2)
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end

	local UIS = game:GetService(""UserInputService"")
	
	local MainFrame = script.Parent
	local TopBar = MainFrame.TopBar
	
	local Camera = workspace:WaitForChild(""Camera"")
	
	local DragMousePosition
	local FramePosition
	
	local Draggable = false
	
	TopBar.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			Draggable = true
			DragMousePosition = Vector2.new(input.Position.X, input.Position.Y)
			FramePosition = Vector2.new(MainFrame.Position.X.Scale,MainFrame.Position.Y.Scale)
		end
	end)
	
	TopBar.InputEnded:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			Draggable = false
		end
	end)
	
	UIS.InputChanged:Connect(function(input)
		if Draggable == true then
			local NewPosition = FramePosition + ((Vector2.new(input.Position.X, input.Position.Y) - DragMousePosition) / Camera.ViewportSize)
			MainFrame.Position = UDim2.new(NewPosition.X, 0, NewPosition.Y, 0)
		end
	end)
end
coroutine.wrap(IZOCTRO_fake_script)()
local function JTLSTS_fake_script() -- Output_2.LocalScript 
	local script = Instance.new('LocalScript', Output_2)
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end

	script.Parent.Close.MouseButton1Click:Connect(function()
		script.Parent.Visible = false
	end)
end
coroutine.wrap(JTLSTS_fake_script)()
local function NXFREJU_fake_script() -- Notif.DragScript 
	local script = Instance.new('LocalScript', Notif)
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end

	local UIS = game:GetService(""UserInputService"")
	
	local MainFrame = script.Parent
	local TopBar = MainFrame.TopBar
	
	local Camera = workspace:WaitForChild(""Camera"")
	
	local DragMousePosition
	local FramePosition
	
	local Draggable = false
	
	TopBar.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			Draggable = true
			DragMousePosition = Vector2.new(input.Position.X, input.Position.Y)
			FramePosition = Vector2.new(MainFrame.Position.X.Scale,MainFrame.Position.Y.Scale)
		end
	end)
	
	TopBar.InputEnded:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			Draggable = false
		end
	end)
	
	UIS.InputChanged:Connect(function(input)
		if Draggable == true then
			local NewPosition = FramePosition + ((Vector2.new(input.Position.X, input.Position.Y) - DragMousePosition) / Camera.ViewportSize)
			MainFrame.Position = UDim2.new(NewPosition.X, 0, NewPosition.Y, 0)
		end
	end)
end
coroutine.wrap(NXFREJU_fake_script)()
local function FEJDZ_fake_script() -- Notif.LocalScript 
	local script = Instance.new('LocalScript', Notif)
	local req = require
	local require = function(obj)
		local fake = fake_module_scripts[obj]
		if fake then
			return fake()
		end
		return req(obj)
	end

	script.Parent.Close.MouseButton1Click:Connect(function()
		script.Parent:Destroy()
	end)
end
coroutine.wrap(FEJDZ_fake_script)()
"
bQQ2Qfee,StPageFlip.css,JonnyPaes,CSS,Tuesday 6th of June 2023 09:14:32 AM CDT,"*,
::after,
::before {
	box-sizing: border-box;
}
h2 {
	margin-top: 0;
	margin-bottom: 0.5rem;
}
button {
	border-radius: 0;
}
button:focus {
	outline: 1px dotted;
	outline: 5px auto -webkit-focus-ring-color;
}
button {
	margin: 0;
	font-family: inherit;
	font-size: inherit;
	line-height: inherit;
}
button {
	overflow: visible;
}
button {
	text-transform: none;
}
[type=""button""],
button {
	-webkit-appearance: button;
}
[type=""button""]::-moz-focus-inner,
button::-moz-focus-inner {
	padding: 0;
	border-style: none;
}
h2 {
	margin-bottom: 0.5rem;
	font-weight: 500;
	line-height: 1.2;
}
h2 {
	font-size: 2rem;
}
.container {
	width: 100%;
	padding-right: 15px;
	padding-left: 15px;
	margin-right: auto;
	margin-left: auto;
}
@media (min-width: 576px) {
	.container {
		max-width: 540px;
	}
}
@media (min-width: 768px) {
	.container {
		max-width: 720px;
	}
}
@media (min-width: 992px) {
	.container {
		max-width: 960px;
	}
}
@media (min-width: 1200px) {
	.container {
		max-width: 1140px;
	}
}
@media (min-width: 576px) {
	.container {
		max-width: 540px;
	}
}
@media (min-width: 768px) {
	.container {
		max-width: 720px;
	}
}
@media (min-width: 992px) {
	.container {
		max-width: 960px;
	}
}
@media (min-width: 1200px) {
	.container {
		max-width: 1140px;
	}
}
.btn {
	display: inline-block;
	font-weight: 400;
	color: #212529;
	text-align: center;
	vertical-align: middle;
	-webkit-user-select: none;
	-moz-user-select: none;
	-ms-user-select: none;
	user-select: none;
	background-color: transparent;
	border: 1px solid transparent;
	padding: 0.375rem 0.75rem;
	font-size: 1rem;
	line-height: 1.5;
	border-radius: 0.25rem;
	transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out,
		border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
}
@media (prefers-reduced-motion: reduce) {
	.btn {
		transition: none;
	}
}
.btn:hover {
	color: #212529;
	text-decoration: none;
}
.btn:focus {
	outline: 0;
	box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
}
.btn:disabled {
	opacity: 0.65;
}
.btn-primary {
	color: #fff;
	background-color: #007bff;
	border-color: #007bff;
}
.btn-primary:hover {
	color: #fff;
	background-color: #0069d9;
	border-color: #0062cc;
}
.btn-primary:focus {
	color: #fff;
	background-color: #0069d9;
	border-color: #0062cc;
	box-shadow: 0 0 0 0.2rem rgba(38, 143, 255, 0.5);
}
.btn-primary:disabled {
	color: #fff;
	background-color: #007bff;
	border-color: #007bff;
}
.btn-secondary {
	color: #fff;
	background-color: #6c757d;
	border-color: #6c757d;
}
.btn-secondary:hover {
	color: #fff;
	background-color: #5a6268;
	border-color: #545b62;
}
.btn-secondary:focus {
	color: #fff;
	background-color: #5a6268;
	border-color: #545b62;
	box-shadow: 0 0 0 0.2rem rgba(130, 138, 145, 0.5);
}
.btn-secondary:disabled {
	color: #fff;
	background-color: #6c757d;
	border-color: #6c757d;
}
.btn-info {
	color: #fff;
	background-color: #17a2b8;
	border-color: #17a2b8;
}
.btn-info:hover {
	color: #fff;
	background-color: #138496;
	border-color: #117a8b;
}
.btn-info:focus {
	color: #fff;
	background-color: #138496;
	border-color: #117a8b;
	box-shadow: 0 0 0 0.2rem rgba(58, 176, 195, 0.5);
}
.btn-info:disabled {
	color: #fff;
	background-color: #17a2b8;
	border-color: #17a2b8;
}
.btn-sm {
	padding: 0.25rem 0.5rem;
	font-size: 0.875rem;
	line-height: 1.5;
	border-radius: 0.2rem;
}
.btn-group {
	position: relative;
	display: -ms-inline-flexbox;
	display: inline-flex;
	vertical-align: middle;
}
.btn-group > .btn {
	position: relative;
	-ms-flex: 1 1 auto;
	flex: 1 1 auto;
}
.btn-group > .btn:hover {
	z-index: 1;
}
.btn-group > .btn:active,
.btn-group > .btn:focus {
	z-index: 1;
}
.btn-group > .btn:not(:first-child) {
	margin-left: -1px;
}
.btn-group > .btn:not(:last-child):not(.dropdown-toggle) {
	border-top-right-radius: 0;
	border-bottom-right-radius: 0;
}
.btn-group > .btn:not(:first-child) {
	border-top-left-radius: 0;
	border-bottom-left-radius: 0;
}
.bg-light {
	background-color: #f8f9fa !important;
}
.overflow-hidden {
	overflow: hidden !important;
}
.mb-2 {
	margin-bottom: 0.5rem !important;
}
.mt-3 {
	margin-top: 1rem !important;
}
.mb-3 {
	margin-bottom: 1rem !important;
}
.pt-3 {
	padding-top: 1rem !important;
}
.pb-3 {
	padding-bottom: 1rem !important;
}
.text-center {
	text-align: center !important;
}
@media print {
	*,
	::after,
	::before {
		text-shadow: none !important;
		box-shadow: none !important;
	}
	h2 {
		orphans: 3;
		widows: 3;
	}
	h2 {
		page-break-after: avoid;
	}
	.container {
		min-width: 992px !important;
	}
}
/*! CSS Used from: https://nodlik.github.io/StPageFlip/static/style.css */
.demo-block {
	border-top: solid 1px #dcdcdc;
	border-bottom: solid 1px #dcdcdc;
}
.flip-book {
	box-shadow: 0 0 20px 0 rgba(0, 0, 0, 0.5);
	margin: 0 auto;
	display: none;
}
.page {
	padding: 20px;
	background-color: #fdfaf7;
	color: #785e3a;
	border: solid 1px #c2b5a3;
	overflow: hidden;
}
.page .page-content {
	width: 100%;
	height: 100%;
	display: flex;
	flex-direction: column;
	justify-content: space-between;
	align-items: stretch;
}
.page .page-content .page-header {
	height: 30px;
	font-size: 100%;
	text-transform: uppercase;
	text-align: center;
}
.page .page-content .page-image {
	height: 100%;
	background-size: contain;
	background-position: center center;
	background-repeat: no-repeat;
}
.page .page-content .page-text {
	height: 100%;
	flex-grow: 1;
	font-size: 80%;
	text-align: justify;
	margin-top: 10px;
	padding-top: 10px;
	box-sizing: border-box;
	border-top: solid 1px #f4e8d7;
}
.page .page-content .page-footer {
	height: 30px;
	border-top: solid 1px #f4e8d7;
	font-size: 80%;
	color: #998466;
}
.page.--left {
	border-right: 0;
	box-shadow: inset -7px 0 30px -7px rgba(0, 0, 0, 0.4);
}
.page.--right {
	border-left: 0;
	box-shadow: inset 7px 0 30px -7px rgba(0, 0, 0, 0.4);
}
.page.--right .page-footer {
	text-align: right;
}
/*! CSS Used from: Embedded */
.stf__wrapper {
	position: relative;
	display: block;
	box-sizing: border-box;
	transform: translateZ(0);
}
.stf__wrapper canvas {
	position: absolute;
	width: 100%;
	height: 100%;
	left: 0;
	top: 0;
}
.stf__block {
	position: absolute;
	width: 100%;
	height: 100%;
	box-sizing: border-box;
}
.stf__item {
	display: none;
	position: absolute;
}
"
4ufX8cX8,x32,GravityBR,C,Tuesday 6th of June 2023 08:46:33 AM CDT,"#include <stdio.h>
#include <stdlib.h>
#include <string.h>

enum magical{
	SIZE = 7
};

typedef struct{
	char digits[SIZE];
	/* 32^0 32^1 32^2 32^3 32^4 32^5 \0 */
} numberx32;

int temp[SIZE] = {0};
int mod = 0;

const char symbols[] = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w'};
	
const int values[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31};
	
const char next[] = {'1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', '0'};
	
const char prev[] = {'w', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'u', 'v'};


void read_str(char *str, char *target){
	
	int aux, i=0;
	
	scanf(""%s"", str);
	aux = strlen(str);
	
	if(aux >= SIZE){
		while(i < SIZE){
			target[i] = str[i];
			i++;
		}
	} else{
		while(str[i] != '\0'){
			target[i] = str[i];
			i++;
		}
		
		while(i < SIZE){
			target[i] = 0;
			i++;
		}
	}
	
	target[SIZE-1] = '\0';
}

void mod_reset(void){
	
	mod = 0;
}

void temp_reset(void){
	
	for(int i=0; i<SIZE; i++){
		temp[i] = 0;
	}
}

void copy_str(numberx32 a, numberx32 *b){
	
	for(int i=0; i<SIZE; i++){
		
	}
}

int conversion(const char x){
		
	int aux;
		
	for(int i=0; i<32; i++){
		if(x == symbols[i]){
			aux = i;
			break;
		}
	}
		
	return values[aux];
}

char successor(const char x){
	
	int aux;
	char y;
	
	aux = conversion(x);
	
	if(aux == 31){
		aux = 0;
		mod = 1;
	}
	
	y = next[aux];
	
	return y;
}

char plus(const char x, const char y){
	
	int aux, aux2;
	char z;
	
	aux = conversion(x);
	aux2 = conversion(y);
	z = x;
	
	while(aux2){
		z = successor(z);
		aux2--;
	}
	
	return z;
}

void a_plus_b_equals_c(const numberx32 *a, const  numberx32 *b, numberx32 *c){
	
	char x, y, z;
	int aux;
	
	for(int i=0; i<SIZE; i++){
		
		aux = temp[i];
		mod_reset();
		
		x = a->digits[i];
		y = b->digits[i];
		z = c->digits[i];
		
		z = plus(x, y);
		if(i < (SIZE-1)) temp[i+1] = mod;
		if(temp[i] != 0) z = successor(z);
		c->digits[i] = z;
		
	}
	
}

int main(void){
	
	numberx32 a, b, c;
	char aux[10];
		
	printf(""Number #1: "");
	read_str(aux, a.digits);
	printf(""\n%s\n"", a.digits);
	
	printf(""\nNumber #2: "");
	read_str(aux, b.digits);
	printf(""\n%s\n"", b.digits);
	
	a_plus_b_equals_c(&a, &b, &c);
	
	printf(""\n\nResult: %s\n"", c.digits);
	
	return 0;
}
"
b33b2JyD,Query 5 -  Joins,makispaiktis,SQL,Tuesday 6th of June 2023 08:27:14 AM CDT,"use [AdventureWorks2012]

-- *********** TABLES ***********

-- Table 1 - Employee
CREATE TABLE MyEmployee(EmployeeID INT, FirstName VARCHAR(30), LastName VARCHAR(30))
SELECT * FROM MyEmployee

INSERT INTO MyEmployee
VALUES(1, 'Michael', 'Scott')
INSERT INTO MyEmployee
VALUES(2, 'Pam', 'Beesly')
INSERT INTO MyEmployee
VALUES(3, 'Dwight', 'Schrute')
SELECT * FROM MyEmployee

-- Table 2 - Salary
CREATE TABLE MySalary(EmployeeID INT, Salary FLOAT)
SELECT * FROM MySalary

INSERT INTO MySalary
VALUES(1, 10000)
INSERT INTO MySalary
VALUES(2, 8000)
INSERT INTO MySalary
VALUES(3, 6000)
SELECT * FROM MySalary

SELECT * FROM MyEmployee
SELECT * FROM MySalary

-- Table 3 - Phone
CREATE TABLE MyPhone(EmploeeID INT, PhoneNumber VARCHAR(30))
INSERT INTO MyPhone
VALUES(1, '2410-111-000')
INSERT INTO MyPhone
VALUES(2, '2310-555-222')
SELECT * FROM MyPhone

-- Table 4 - Parking
CREATE TABLE MyParking(EmployeeID INT, ParkingSpot VARCHAR(30))
INSERT INTO MyParking
VALUES(1, 'A1')
INSERT INTO MyParking
VALUES(2, 'A2')
SELECT * FROM MyParking

-- Table 5 - Customer
CREATE TABLE MyCustomer(CustomerID INT, CustomerName VARCHAR(30))
INSERT INTO MyCustomer
VALUES(1, 'Rakesh')
INSERT INTO MyCustomer
VALUES(3, 'Jonh')
SELECT * FROM MyCustomer

-- Table 6 - Order
CREATE TABLE MyOrder(OrderNumber INT, OrderName VARCHAR(30), CustomerID INT)
INSERT INTO MyOrder
VALUES(1, 'Order1', 1)
INSERT INTO MyOrder
VALUES(2, 'Order2', 2)
INSERT INTO MyOrder
VALUES(3, 'Order3', 7)
INSERT INTO MyOrder
VALUES(4, 'Order4', 8)
SELECT * FROM MyOrder



-- *********** JOINS ***********
-- 1. Inner Join
SELECT * FROM MyEmployee A
INNER JOIN MySalary B
ON A.EmployeeID = B.EmployeeID

SELECT A.FirstName, A.LastName, B.Salary FROM MyEmployee A
INNER JOIN MySalary B
ON A.EmployeeID = B.EmployeeID

-- 2. Left outer Join
SELECT * FROM MyEmployee
SELECT * FROM MyPhone

SELECT * FROM MyEmployee A
LEFT JOIN MyPhone B
ON A.EmployeeID = B.EmploeeID

SELECT A.FirstName, A.LastName, B.PhoneNumber FROM MyEmployee A
LEFT JOIN MyPhone B
ON A.EmployeeID = B.EmploeeID

-- 3. Right outer Join
SELECT * FROM MyParking
SELECT * FROM MyEmployee

SELECT * FROM MyParking A
RIGHT JOIN MyEmployee B
ON A.EmployeeID = B.EmployeeID

SELECT A.ParkingSpot, B.FirstName, B.LastName FROM MyParking A
RIGHT JOIN MyEmployee B
ON A.EmployeeID = B.EmployeeID

-- 4. Full outer join
SELECT * FROM MyCustomer
SELECT * FROM MyOrder

SELECT * FROM MyCustomer A
FULL OUTER JOIN MyOrder B
ON A.CustomerID = B.CustomerID

SELECT A.CustomerID, A.CustomerName, B.OrderName, B.OrderNumber FROM MyCustomer A
FULL OUTER JOIN MyOrder B
ON A.CustomerID = B.CustomerID


-- 5. Cross join (like cross product)
SELECT * FROM MyCustomer
SELECT * FROM MySalary

SELECT * FROM MyCustomer A
CROSS JOIN MySalary B

SELECT * FROM MyCustomer, MySalary"
PtE2Zuhw,MouseDelta to Vertical Scroll,TheNoobPolice,Autohotkey,Tuesday 6th of June 2023 08:13:56 AM CDT,"#SingleInstance Force
#NoEnv
SetBatchlines -1
Sendmode Input
key := ""RAlt""

hideState := 0
startValue := 0

; register for rawinput
_size := 8 + A_PtrSize
RIDEV_INPUTSINK := 0x00000100
VarSetCapacity(RAWINPUTDEVICE, _size)
NumPut(1, RAWINPUTDEVICE, 0, ""UShort"")
NumPut(2, RAWINPUTDEVICE, 2, ""UShort"")
NumPut(RIDEV_INPUTSINK, RAWINPUTDEVICE, 4, ""Uint"")
Gui +hwndhwnd
NumPut(hwnd, RAWINPUTDEVICE, 8, ""Uint"")
DllCall(""RegisterRawInputDevices"", ""Ptr"", &RAWINPUTDEVICE, ""UInt"", 1, ""UInt"", _size )
OnMessage(0x00FF, ""RawInputCallback"")

; store the existing scrollline setting so it can be restore on exit
SetScrollLines()
OnExit(""RestoreScrollLines"")

HotKey, % key "" Up"", revealCursor_stopScroll
Return

SetScrollLines(value := 3) {
	global startValue
	
	DllCall(""SystemParametersInfo"", UInt, 0x0068, UInt, 0, UIntP, CurrentScrolls, UInt, 0)
	
	if !startValue
		startValue := CurrentScrolls

	if CurrentScrolls != value
		DllCall(""SystemParametersInfo"", UInt, 0x0069, UInt, value, UIntP, 0, UInt, 0)
}	

RestoreScrollLines() {
	global startValue
	DllCall(""SystemParametersInfo"", UInt, 0x0069, UInt, startValue, UIntP, 0, UInt, 0)
}

; Get mouse movement rawinput and fire a scroll function with x and y deltas
RawInputCallback(wParam, lParam) {
	Critical
	static DeviceSize := 2 * A_PtrSize
	, Size := 0
	, pSize:= 8 + 2 * A_PtrSize
	, delta:= {x: 20 + (A_PtrSize * 2), y: 24 + (A_PtrSize * 2)}
	, RawInput
	
	VarSetCapacity(header, pcbSize, 0)
	DllCall(""GetRawInputData"", ""UPtr"", lParam, ""uint"", 0x10000005, ""UPtr"", &header, ""Uint*"", pcbSize, ""Uint"", pSize)
	
	VarSetCapacity(RawInput, Size)
	DllCall(""GetRawInputData"", ""UInt"", lParam, ""UInt"", 0x10000003, ""Ptr"", &RawInput, ""UInt*"", Size, ""UInt"", pSize)
 
	x := NumGet(&RawInput, delta.x, ""Int""), y := NumGet(&RawInput, delta.y, ""Int"")

	Scroll(x, y)
}

; get input velocity and start a timer to repeat scrolling up / down by mouse direction 
; defaults - move at least 45 degrees vertically, and at least 2 pixels / ms
Scroll(x, y) {
	static minThreshold := 2, angleThreshold := atan(1), velocity := 1
	global hideState, key
	
	velocity := 0.1 * ((sqrt(x*x + y*y) / GetTime()) - velocity) + velocity
	angle := x ? atan(abs(y / x)) : angleThreshold * 2
	
	if (GetKeyState(key, ""P"") && velocity > minThreshold) {
		if (angle >= angleThreshold) {
			if !hideState {
				showMouse(0)
				hideState := 1
			}
			num_lines := (velocity > 8) ? ""6"" : (velocity > 4) ? ""3"" : ""1""
			centreCursor(), SetScrollLines(num_lines)
			if (y > 0) {
				SetTimer RepeatDown, Off
				SetTimer RepeatUp, 0
			}
			else {
				SetTimer RepeatUp, Off
				SetTimer RepeatDown, 0
			}
		}
	}
}
	GetTime() {
		static last := 0, freq := 0, scaler_ms := 0

		if (!freq) {
			DllCall(""QueryPerformanceFrequency"", ""Int64P"", freq)
			scaler_ms := 1000 / freq
		}
		 
		DllCall(""QueryPerformanceCounter"",""Int64P"", current)
		elapsed := (current - last) * scaler_ms
		last := current
		return elapsed
	}
	RepeatUp() {
		Send {WheelUp}
	}
	RepeatDown(){
		Send {WheelDown}
	}


; hide and centre the mouse cursor while scrolling
showMouse(state) {
    static BlankCursor := """", CleanUp := {base: {__Delete: ""showMouse""}}
    static CursorList := ""32512, 32513, 32514, 32515, 32516, 32640, 32641""
        . "",32642, 32643, 32644, 32645, 32646, 32648, 32649, 32650, 32651""
    local ANDmask, XORmask, CursorHandle
    if state
        return, DllCall(""SystemParametersInfo"", ""UInt"", 0x57, ""UInt"", 0, ""Ptr"",  0, ""UInt"", 0)
    if !BlankCursor {
        VarSetCapacity(ANDmask, 32 * 4, 0xFF)
        VarSetCapacity(XORmask, 32 * 4, 0x00)
        BlankCursor := DllCall(""CreateCursor"", ""Ptr"", 0 , ""Int"", 0, ""Int"", 0, ""Int"", 32, ""Int"", 32, ""Ptr"", &ANDmask, ""Ptr"", &XORmask, ""Ptr"")
    }
    loop, Parse, CursorList, `,, % A_Space
    {
        CursorHandle := DllCall(""CopyImage"", ""Ptr"",  BlankCursor, ""UInt"", 2, ""Int"",  0, ""Int"",  0, ""UInt"", 0, ""Ptr"")
        DllCall(""SetSystemCursor"", ""Ptr"",  CursorHandle, ""UInt"", A_Loopfield)
    }
}
	revealCursor_stopScroll() {
		global hideState

		if hideState {
			showMouse(1)
			hideState := 0
		}
		SetTimer RepeatUp, Off
		SetTimer RepeatDown, Off
	}
	centreCursor() {
		static centerX := A_ScreenWidth / 2, centerY := A_ScreenHeight / 2
		DllCall(""SetCursorPos"", ""int"", centerX, ""int"", centerY)
	}
	
^Esc::ExitApp
"
rQdKCvyh,Untitled,Wolverine_X-Man,Swift,Tuesday 6th of June 2023 07:58:58 AM CDT,"import UIKit
import Photos
import PhotosUI

struct Video {
    private(set) var videoUrl: URL?
    private(set) var thumbnail: UIImage?
    private init () {}
    init(videoUrl: URL?) {
        self.videoUrl = videoUrl
        guard let url = videoUrl else { return }
        self.thumbnail = generateThumbnail(from: url)
    }
}

class ArtistProfileVC: HubbleBaseVC {
	lazy var allVideos: [Video] = [] {
        didSet {
            videoCollection.reloadData()
        }
    }
}

// MARK: - PHPickerViewControllerDelegate
extension ArtistProfileVC: PHPickerViewControllerDelegate {
// for opening video picker
func openPHPicker(selectionLimit: Int, tag: Int) {
        var phpConfig = PHPickerConfiguration()
        phpConfig.selectionLimit = selectionLimit
        phpConfig.filter = .any(of: [.videos, .slomoVideos, .timelapseVideos])
        let phPickerVC = PHPickerViewController(configuration: phpConfig)
        phPickerVC.delegate = self
        self.navigationController?.present(phPickerVC, animated: true)
    }

    func picker(_ picker: PHPickerViewController, didFinishPicking results: [PHPickerResult]) {
		portfolioVideosSelected(results: results)
    }
	
	func portfolioVideosSelected(results: [PHPickerResult]) {
        self.dismiss(animated: true)
        results.forEach { result in
            result.itemProvider.loadFileRepresentation(forTypeIdentifier: UTType.movie.identifier) { url, error in
                guard let url = url, error == nil else { return }
                dump(url.absoluteURL)
                DispatchQueue.main.async {
                    self.allVideos.append(.init(videoUrl: url))
                }
            }
        }
    }
}

//-----------------------------------------------------------------------------------------
import AVFoundation
import UIKit
// MARK: - Using this for Generating Thumbnail.
func generateThumbnail(from videoUrl: URL) -> UIImage? {
    let asset = AVAsset(url: videoUrl)
    let imageGenerator = AVAssetImageGenerator(asset: asset)
    imageGenerator.appliesPreferredTrackTransform = true
    let time = CMTime(seconds: 1, preferredTimescale: 1)
    do {
        let imageRef = try imageGenerator.copyCGImage(at: time, actualTime: nil)
        return UIImage(cgImage: imageRef)
    } catch {
        print(error.localizedDescription)
        return nil
    }
}

// --------------------------------------------------------------------------------------------------------

For playing video am using AVKit

func playVideo(url: URL) {
	let player = AVPlayer(url: url)
	let vc = AVPlayerViewController()
	vc.player = player
	self.present(vc, animated: true) {
		vc.player?.play()
	}
}
"
dTLYmftk,Sub- and superscripting style (adapted from gb4e) - subperscript.sty,fortin,Latex,Tuesday 6th of June 2023 07:44:29 AM CDT,"% -*- LaTeX -*-
\ProvidesPackage{subperscript}
%%%%%%%%%%% AUTOMATH 

% this allows _ to be used in horizontal mode (from J.Frampton):
% Reimplemented to allow this feature to be turned on and off.
% The new version also combines sub- and superscripts properly.
% -Alexis

% Sub- and superscripting functionality from gb4e, packaged by Antonio Fortin

% \automath     Make _ and ^ work outside math mode
% \noautomath   Restore normal sub/superscript behavior

{ % Temporarily change catcodes
  \catcode`\_=\active
  \catcode`\^=\active

  \global\def\automath{%
    \catcode`\_=\active
    \catcode`\^=\active
    \def_##1{\gb@ifnextchar^{\automath@two_{##1}}{\ensuremath{\sb{##1}}}}%
    \def^##1{\gb@ifnextchar_{\automath@two^{##1}}{\ensuremath{\sp{##1}}}}}
}
\def\automath@two#1#2#3#4{\ensuremath{#1{#2}\relax #3{#4}}}
% Restore default catcodes for ^, _
\def\noautomath{\catcode`\_=8 \catcode`\^=7 }

% The original \@ifnextchar discards spaces when looking for the next
% ``character''. This variant accepts any token.
\long\def\gb@ifnextchar#1#2#3{%
  \let\reserved@d=#1%
  \def\reserved@a{#2}%
  \def\reserved@b{#3}%
  \futurelet\@let@token\@gbifnch}
\def\@gbifnch{%
    \ifx\@let@token\reserved@d
      \let\reserved@c\reserved@a
    \else
      \let\reserved@c\reserved@b
    \fi
  \reserved@c}

\noautomath % On by default, for backward compatibility

%%%%%%%%%


\def\lb#1{\@ifnextchar [{\@glarph{#1}}{\@bl{#1}}}
\def\@glarph#1[#2]{\ifmmode{[}\sb{{\mathrm{#1}}\sb{#2}}\else%
                           ${[}\sb{{\mathrm{#1}}\sb{#2}}$\fi}
\def\@bl#1{\ifmmode{[}\sb{\mathrm{#1}}\;\else${[}\sb{\mathrm{#1}}\;$\fi}

\def\rb#1{\@ifnextchar [{\@grarph{#1}}{\@br{#1}}}
\def\@grarph#1[#2]{\ifmmode{]}\sb{{\mathrm{#1}}\sb{#2}}\else%
                        ${]}\sb{{\mathrm{#1}}\sb{#2}}$\fi}
\def\@br#1{\ifmmode{]}\sb{\mathrm{#1}}\;\else${]}\sb{\mathrm{#1}}\;$\fi}

%%% END_NEWSTUFF."
nRQ9TnyR,LaTeX resume class,fortin,Latex,Tuesday 6th of June 2023 07:41:38 AM CDT,"% RESUME DOCUMENT STYLE -- Released 23 Nov 1989
%    for LaTeX version 2.09
% Copyright (C) 1988,1989 by Michael DeCorte

\typeout{Document Style `resume' <26 Sep 89, Dec 07>.}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% resume.sty
%
% \documentstyle{resume}
%
% Copyright (c) 1988 by Michael DeCorte
% Permission to copy all or part of this work is granted, provided
% that the copies are not made or distributed for resale, and that
% the copyright notice and this notice are retained.
%
% THIS WORK IS PROVIDED ON AN ""AS IS"" BASIS.  THE AUTHOR PROVIDES NO
% WARRANTY WHATSOEVER, EITHER EXPRESS OR IMPLIED, REGARDING THE WORK,
% INCLUDING WARRANTIES WITH RESPECT TO ITS MERCHANTABILITY OR FITNESS
% FOR ANY PARTICULAR PURPOSE.
%
% If you make any improvements, I'd like to hear about them.
%
% Michael DeCorte
% P.O. Box 652
% Potsdam NY 13676
% mrd@sun.soe.clarkson.edu
% mrd@clutx.bitnet
%
% Changes for LaTeX2e -- Venkat Krishnamurthy (Aug 7, 2001)
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% You can have multiple style options the legal options ones are:
%
%   centered	the name and address are centered at the top of the
%		page (default)
%
%   line	the name is the left with a horizontal line then 
%		the address to the right
%
%   overlapped	the section titles overlap the body text (default)
%
%   margin	the section titles are to the left of the body text
%		
%   11pt	use 11 point fonts instead of 10 point fonts
%
%   12pt	use 12 point fonts instead of 10 point fonts
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%   Commands
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%   \Resume	prints the word resume but typeset nicely
%
%   \newsectionwidth{dimen}
%		defines the amount of space the labels extend
%		into the left margin.
%		DO NOT TRY to change any of the dimensions
%		yourself.  You will probably confuse the style file.
%
%   \name{text} defines your name
%
%   \address{text}
%		defines your address
%		this can be called twice if you have two addresses
%		use \\'s to indicate where either line breaks or
%		comas should go
%
%   \opening	this prints your name and address at that spot
%		this is not normally needed, as \begin{resume}
%		does this but is provided just in case you need
%		to do something odd
%
%   \begin{resume} ... \end{resume}
%		all of the resume should go inside of this
%		environment
%
%   \section{text}
%		This prints 'text' in the left hand margin.
%		Its exact placement depends on what the style 
%		options has been set to. (overlapped or margin)
%		You should use \\ to start a new line.	If the
%		style option is margin, the \\ is converted
%		to a space.
%		To use this in any of the list environments, put
%		the \section after the \item[] but before the 
%		text.
%		Eg.
%		\begin{itemize}
%		\item\section{text}
%		text
%		\end{itemize}
%
%   \begin{ncolumn}{n} ... \end{ncolumn}
%		creates a tabular environment with n equally
%		spaced columns.  Separate columns by & and
%		end them with \\
%
%   \begin{position} ... \end{position}
%		this is used to print a job description.  There should
%		be only one job description in it.  Information
%		related to the job (such as title, dates...) will
%		be printed.
%
%   \begin{format} ... \end{format}
%		used to change the default format for the position
%		environment.  Within it the recognized commands are:
%		\title{option}
%		\employer{option}
%		\location{option}
%		\dates{option}
%		\body
%		\\
%		where option is one of l,r,c standing for left, right, center.
%		The format will eventually be used to make several
%		tabular environments and you are defining the number of columns
%		and the placement of text within the columns of the tabulars.
%		Each row is terminated by a \\.  Any number of options can 
%		be on a line, they will each be set in their own columns.
%		Any of the options except \body may be left out.
%
%		Eg.
%		\begin{format}
%		\title{l}\employer{r}\\
%		\dates{r}\\
%		\body\\
%		\location{l}\\
%		\end{format}
%
%		In this example the title and employer information
%		are set in 2 columns left justified and right justified
%		respectively.  Then the date is set right justified.
%		Then the body is set.  Then the location is set left
%		justified.
%
% \employer{text}
% \title{text}
% \dates{text}
% \location{text}
%		declare text for the next invocation of the position
%		environment
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Glue
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% sectionskip	the amount of horizontal before a section
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Dimensions
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% sectionwidth	the amount that the section titles go in the
%		left margin
%
% resumewidth	the width of the total resume from the left
%		margin to the right.  Don't use textwidth
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Definitions
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% sectionfont	the font used to print section titles
%		use \renewcommand to change it
%
% namefont	the font used to print your name
%		use \renewcommand to change it
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% THINGS TO DO
%
% add lm,rm options to format style to allow things to be placed
% in the left or right margin respectivly
%
% add capability so that \body doesn't have to be proceeded (followed)
% by a \\ allowing part of the description (eg. location) to be the
% first (last) thing of the body
%
% clean up the list building procedures
%
% write docs to tell people how to use this

\NeedsTeXFormat{LaTeX2e}[1995/12/01]
\ProvidesClass{resume}[2000/05/19 v1.4b Resume class]

%\DeclareOption{11pt}{\renewcommand\@ptsize{1}}
%\DeclareOption{12pt}{\renewcommand\@ptsize{2}}

\PassOptionsToClass{11pt,12pt}{article}
\LoadClassWithOptions{article}

\newif\if@line
\newif\if@margin

\DeclareOption{line}{\@linetrue}
\DeclareOption{centered}{\@linefalse}

\DeclareOption{margin}{\@margintrue}
\DeclareOption{overlapped}{\@marginfalse}

\ExecuteOptions{overlapped,centered}
\ProcessOptions\relax

\nofiles	     % resume's don't need .aux files


\newtoks\tabular@text		    % holds the current list being processed
\newtoks\tabular@head		    % holds the head tabular list
\newtoks\tabular@tail		    % holds the tail tabular list
\newtoks\@ta			    % used by \@append
\newtoks\undefined@token\undefined@token={}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% prints a centered name with the address centered
% or the two address on opposite sides of the page
%
\def\@printcentername{\begingroup
  % print the name centered
  \leavevmode\hbox to \textwidth{\hfil\@tablebox{\namefont\@name}\hfil}\par
  \@ifundefined{@addressone}{%
    % do nothing
  }{%
    \@ifundefined{@addresstwo}{
      % only one address
      \leavevmode\hbox to \textwidth{\hfil\@tablebox{\@addressone}\hfil}\par
    }{
      % two addresses
      \leavevmode\hbox to \textwidth{\@tablebox{\@addressone}\hfil
				     \@tablebox{\@addresstwo}}\par
    }%
  }%
\endgroup}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% this is used to print the name and address at the top of
% the page with a hline in between
%
\def\namefont{\large\bf}
\def\@linename{\begingroup
  \def\\{, }
  {\namefont\@name}
  \vskip 2pt
  \fullline
  \vskip 2pt
  % where do you live?
  \@ifundefined{@addressone}{%
    % do nothing
  }{%
    \leavevmode\hbox to \textwidth
      {\hfill\vbox{\hbox{\@addressone}
		   \hbox{\@addresstwo}
		  }%
      }\par
  }
\endgroup}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% HEADINGS:
% There are two types of headings:
% 1) one with the name centered and the address centered or
%    in the left and right side if there are two address
% 2) one where the name is in the upper left corner 
%    the a line accross the paper
%    then the address all on one line in the right corner
%    the second address will be directly below the first if defined
%
\let\print@name\relax
\def\ds@centered{\ifx\print@name\relax\let\print@name\@printcentername\fi}
\def\ds@line{\ifx\print@name\relax\let\print@name\@linename\fi}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Use this to set the sectionwidth.
% It adjust the width of the text as well as the hoffset
% You probably shouldn't touch any of the size paramaters
% unless you really understand all of this but it is not
% hard.  Either way, it can only be executed once
%
\def\sectionfont{\bf}
\newdimen\sectionwidth
\newskip\sectionskip
\newdimen\resumewidth

\resumewidth=6.5in
\sectionskip=3.5ex plus 1ex minus -.2ex % values stolen from LaTeX

\def\newsectionwidth#1{%
		     \sectionwidth=#1
		     \textwidth=\resumewidth
		     \advance\textwidth-\sectionwidth
		     \hsize=\textwidth
		     \hoffset=\sectionwidth
}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% This is for sectiontitles that are entirely in the left margin.
% multiline sectiontitles are permited and will be broken by
% \TeX{} to fit into a box \verb|\sectionwidth| wide.  It is advised
% that \verb|\\| be used to break the lines by hand as \TeX{} will
% probably not do what you want.
%
% When using this with {\tt tabbing} and {\tt list} (or anything
% that is made out of {\tt list}) put the \section's inside of
% the \verb|\begin{}|  and the \verb|\item|Eg.
% \begin{verbatim}
% \begin{trivlist}
% \item[]
% \section{foo}
% text
% \end{trivlist}
% \end{verbatim}
%
\def\boxed@sectiontitle#1{%
  % this macro may be called in a tabular.  Special code must be written
  % to accomodate this.  In LaTeX, a tabular is made out of hboxes.
  % TeX never goes into horizontal mode because of this; it only
  % gets into vertical mode and restricted horizontal mode.  Certain 
  % indenting problems must be handled because of this.  They
  % are delt with at the end of this routine.
  % It is also necessary to close the hbox that was created before
  % the \section and create a new one when this macro has ended.
  % This macro therefore simulates a \kill, so that any text before
  % the \section not be printed.  The proper use is therefore
  % ...
  % text\\
  % \section{foo}
  % more text\\
  % ...
  \ifx\\\@tabcr    % is this in a tabular? (this *should* work but is a cludge)
    \@stopfield    % the is the first part of a \kill
   \else
     \@@par	     % This will end the previous paragraph if needed and
		   % go into vertical mode.  If this was already in
		   % vertical mode then the \par does nothing.

  \fi
  \begingroup
  \everypar={}%
  \def\par{\@@par}%
  \let\\=\@normalcr
  \addpenalty{\@secpenalty} % this would be a good place for a page break
			    % \@secpenalty is what LaTeX uses before its
			    % section's.  It happens to be -300
  \addvspace{\sectionskip}  % put in a bit of glue
  % The following hbox will be contributed to the page list without going
  % into horizontal mode.  Therefore, any \parindent's, \parshape's, \leftskip
  % will be ignored but \hoffset's are not.  The result is that the box will
  % only by \hoffset. This is what I want
  \hbox to 0pt{%
    \hss	 % this is an llap.  In other words, this glue
		 % will shrink by the width of the stuff in the vbox
		 % (\sectionwidth) into the left margin and then
		 % insert the contents of the vbox.
    \vtop to 0pt{% make a 0pt height paragraph, with the baseline at the
		 % lined up with the baseline of the first box in the list
      \leftskip=0pt
      \hsize=\sectionwidth
      \textwidth=\sectionwidth
      \raggedright     % you don't want this filled out to the right margin
      \sectionfont
      #1\vss	       % Go into horizontal mode; do the paragraph;
		       % go into vertical mode; add some negative glue 
		       % to give a box of 0pt height and depth
    }%
  }%
  \addpenalty{-\@secpenalty} % this would be a bad place for a page break
  \vskip-\baselineskip % when the next box is processed, baselineskip glue
		       % glue will be added (the box has no depth because of
		       % the \vss; therefore, we don't have to worry about
		       % \lineskiplimit).  This -\baselineskip glue
		       % is to undo this.  \nointerlineskip doesn't
		       % work because the baseline of this line would be lined
		       % up with the top of the top of the next box.  We
		       % want the baselines lined up.
		       %
		       % It may have been possible to do this by forcing the
		       % baseline of this box to be the top of the box but
		       % then the interline skip between this box and the
		       % previous box would be off as the baselines of the
		       % this box (the one that being made above) and the
		       % previous line would be separated by \baselineskip
		       % (probably, it may be separted by the depth of the
		       % previous box + \lineskip) but as the baseline of
		       % this box has been moved to the top, the box's would
		       % separted by to much glue.  The exact amount being
		       % the height of this box.
  \endgroup
  \ifx\\\@tabcr   % is this in a tabular? (this *should* work but is a cludge)
    % this is the second part of the \kill; it starts the next tabbing line
    % Because this routine will never get into paragraph mode when used in
    % tabbing the \parskip that is discussed below will never be inserted.
    % Therefore it should not be negated as done below.
    \@startline
    \ignorespaces
  \else
    \vskip-\parskip    % The next thing to be contributed will be a paragraph.
		       % Right before being contributed though a \vskip\parskip
		       % will be inserted.  This is to negate it.
		       %
		       % I do consider this to be a bit of a cludge but
		       % I can not find a way to write \unskipfutureskip
		       % or a way to make TeX think that nothing has
		       % been contributed to the page list.
  \fi
}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% This is for sectiontitles that are entirely above the section text
%
\def\unboxed@sectiontitle#1{%
  \ifx\\\@tabcr % see boxed@sectiontitle for explation
    \@stopfield
   \else
     \@@par
  \fi
  \begingroup
  \everypar={}%
  \def\par{\@@par}%
  \def\\{ }
  \addpenalty{\@secpenalty}
  \addvspace{\sectionskip}
  \hbox to 0pt{\hss\hbox to \sectionwidth{\sectionfont#1\hss}}
  \addpenalty{-\@secpenalty} % this would be a bad place for a page break
  \endgroup
  \ifx\\\@tabcr   % see boxed@sectiontitle for explation
    \@startline
  \else
    \vskip-\parskip
  \fi
  \ignorespaces
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% There are two types of section headings:
% 1) the section heading is all on one line and directly
%    below it, is the body of the text
% 2) the section heading is entirely in the left margin
%    (possibly taking multiple lines) with the body of
%    the text next to it
%
\let\@@section\relax
\def\ds@overlapped{\ifx\@@section\relax\newsectionwidth{0.5in}\let\@@section\unboxed@sectiontitle\fi}
%\def\ds@margin{\ifx\@@section\relax\newsectionwidth{1.3in}\let\@@section\boxed@sectiontitle\fi}
\def\ds@margin{\ifx\@@section\relax\newsectionwidth{1.1in}\let\@@section\boxed@sectiontitle\fi}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% DEFAULTS: (some of them)
%
% centered name
% overlapped section titles
%
% format is:
%    title	 employer
%    location	 dates
%    body
% with everything in the left of its column

%\input article.sty

\if@line\ds@line\else\ds@centered\fi
\if@margin\ds@margin\else\ds@overlapped\fi


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% typeset resume all nice and pretty
%
\def\Resume{{R\'{e}sum\'{e}}}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% makes a line of width \textwidth starting at -\hoffset
%
\def\fullline{		% hrules only listen to \hoffset
  \nointerlineskip	% so I have this code	  
  \moveleft\hoffset\vbox{\hrule width\textwidth} 
  \nointerlineskip
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% create a multiline box.
%
\def\@tablebox#1{\begin{tabular}[t]{@{}l@{\extracolsep{\fill}}}#1\end{tabular}}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% use this to define your name
%
\def\name#1{\def\@name{#1}}

\def\@name{}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% use this to define your address, this may be called more than once.
%
\let\@addressone\relax
\let\@addresstwo\relax

\def\address#1{
  \@ifundefined{@addressone}{\def\@addressone{#1}}{\def\@addresstwo{#1}}}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% if you want to print your name and address is a slightly
% different format than sugessted, then this can be used
% to place it exactly where you want
%
\def\opening{\def\@opening{}
  \begingroup
  \leftskip=-\hoffset	     % I use leftskip to move things to the left as 
  \advance\textwidth\hoffset % changing hoffset doesn't work. But this
  \hsize=\textwidth	     % doesn't really work as hboxes are rules
			     % are unaffeted
  \let\par=\@@par
  \parindent=0pt
  \parskip=0pt
  \print@name
  \endgroup
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% all of the resume goes in the resume environment
%
\newenvironment{resume}{\begingroup
		       \@ifundefined{@opening}{\opening}{}
}{\endgroup}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% gives you a tabular environment with n equally spaced columns
% \begin{ncolumn}{#} ... \end{ncolumn}
%
% The p option of LaTeX is broken in all but the newest verion
% of latex.tex, this is how to fix it
%
\def\@endpbox{\par\egroup\hfil}
\let\@@endpbox=\@endpbox

\newdimen\@columnwidth	  % the width of each column equal to
\def\ncolumn#1{%
  % \@columnwidth = \textwidth / #1
  \@columnwidth=\textwidth \divide\@columnwidth by #1
  \begin{tabular*}{\textwidth}[t]%
	{*{#1}{@{}p{\@columnwidth}@{\extracolsep{\fill}}}}
}

\def\endncolumn{\end{tabular*}}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%   \employer{text} defines employer to be text
%   \location{text} defines location to be text
%   \dates{text}    defines dates    to be text
%   \title{text}    defines title    to be text
%   \body
%

\def\employer#1{\def\@employer{\print@employer{#1}}}
\def\location#1{\def\@location{\print@location{#1}}}
\def\dates#1{\def\@dates{\print@dates{#1}}}
\def\title#1{\def\@title{\print@title{#1}}}

\let\l@justify\raggedright
\let\r@justify\raggedleft
\let\c@justify\centering


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% \@format{name}{justify}
% will define \print@#1 to print it's one argument 
% justified according to #2 which can be
%	  l = left
%	  r = right
%	  c = center
%
% eg.
%    \@format{employer}{c}
%    is the same as \def\print@employer#1{{\centering #1\par}}
%
\def\@format#1#2{%
  \expandafter\gdef\csname print@#1\endcsname##1{%
    {\csname#2@justify\endcsname##1\par}}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% this is used to define how the position environment should
% formated.
%
% \begin{format} positioning text \end{format}
% where positioning text may be
%  \employer{pos}
%  \location{pos}
%  \dates{pos}
%  \title{pos}
%  \body	    (for the body of the position environment)
%   where pos is 
%     l for left
%     r for right
%     c for center
% use \\ to break the line
% you don't have to use all of the options.
% on any one line, you should indicate what you want on that line
% and where it should go within its column.
% eg.
% the following prints the employer in the left with the location
% centered within that its column.  It then prints the date on the
% right.  Then it prints the body of the position environment. Then
% it prints the title centered within its column; as there is only
% one column here it is really just centered.
%
% \begin{format}
% \employer{l}\location{c}\\
% \dates{r}\\
% \body\\
% \title{c}\\
% \end{format}

\newcounter{numberofcolumns}
\newenvironment{format}{%
  \def\end@line@head{\append@tabular@head{tabular@text}\tabular@text={}%
    \c@numberofcolumns 0}
  \def\end@line@tail{\append@tabular@tail{tabular@text}\tabular@text={}%
    \c@numberofcolumns 0}
  \tabular@text={}
  \tabular@head={}
  \tabular@tail={}
  \c@numberofcolumns 0
  \let\\=\end@line@head
  \def\employer##1{\advance\c@numberofcolumns 1
		   \@format{employer}{##1}
		   \append@tabular@text{employer}}
  \def\location##1{\advance\c@numberofcolumns 1
		   \@format{location}{##1}
		   \append@tabular@text{location}}
  \def\dates##1{\advance\c@numberofcolumns 1
		\@format{dates}{##1}
		\append@tabular@text{dates}}
  \def\title##1{\advance\c@numberofcolumns 1
		 \@format{title}{##1}
		\append@tabular@text{title}}
  \def\body{\iftoks\tabular@head\undefined@token\then
	    \else
	      \@append{\noexpand\\}\to\tabular@head
	    \skotfi
	    \let\\=\end@line@tail}}{}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%taken from page 378 of TeXbook but freely hacked
%
% appends the expansion of #1 to the token list #2

\def\@append#1\to#2{%
  \@ta=\expandafter{#1}%
  \xdef\@append@temp{\the#2\the\@ta}
  \global#2=\expandafter{\@append@temp}%
}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% CHAA006%vaxb.rhbnc.ac.uk@NSS.Cs.Ucl.AC.UK
% texhax.88.078
% is used to see if two token lists are equal
% there must be a better way
%

\let \then = \empty
\def \iftoks #1#2\then #3\else #4\skotfi{
		\edef \1{\the #1}
		\edef \2{\the #2}
		\ifx \1\2\then #3\else #4\fi}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% \append@tabular@text{command}
%
% appends command to the end of \tabular@text.
% NOTE: command MUST be a command but without the \
%	Eg. \append@tabular@text{relax}
%
% used to define \tabular@text for the tabular environment
% used by append@tabular@head and append@tabular@tail
%

\def\append@tabular@text#1{%
\iftoks\tabular@text\undefined@token\then
  \global\tabular@text=\expandafter{\csname @#1\endcsname}
\else
  \@append{&}\to\tabular@text
  \@append{\csname @#1\endcsname}\to\tabular@text
\skotfi
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% append@tabular@head
%
% appends command to the end of \tabular@text@head
% NOTE: command MUST be a command but without the \
%	Eg. \append@tabular@head{relax}
%
% used to define \tabular@head for the tabular environment
% used by the position environment
%
\def\append@tabular@head#1{%
  \ifnum\the\c@numberofcolumns=0\relax
  \else
    \iftoks\tabular@head\undefined@token\then
      \relax
    \else
      \@append{\noexpand\\}\to\tabular@head
      \@append{\noexpand\penalty-\@secpenalty}\to\tabular@head
    \skotfi
    \@append{\noexpand\begin{ncolumn}}\to\tabular@head
    \@append{\expandafter{\the\c@numberofcolumns}}\to\tabular@head
    \@append{\the\csname#1\endcsname}\to\tabular@head
    \@append{\noexpand\end{ncolumn}}\to\tabular@head
  \fi
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% append@tabular@tail
%
% appends command to the end of \tabular@text@htail
% NOTE: command MUST be a command but without the \
%	Eg. \append@tabular@tail{relax}
%
% used to define \tabular@tail for the tabular environment
% used by the position environment
%
\def\append@tabular@tail#1{%
  \ifnum\the\c@numberofcolumns=0\relax
  \else
    \iftoks\tabular@tail\undefined@token\then
    \else
      \@append{\noexpand\\}\to\tabular@tail
      \@append{\noexpand\penalty-\@secpenalty}\to\tabular@tail
    \skotfi
    \@append{\noexpand\begin{ncolumn}}\to\tabular@tail
    \@append{\expandafter{\the\c@numberofcolumns}}\to\tabular@tail
    \@append{\the\csname#1\endcsname}\to\tabular@tail
    \@append{\noexpand\end{ncolumn}}\to\tabular@tail
  \fi
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% put the actual job descriptions here
% \begin{postion} ... \end{position}
% in the ... describe the position.
% don't put the \dates \location etc in here. define them before hand
\newenvironment{position}%
  {%
   \begingroup
     \par
       \the\tabular@head
%     \addpenalty{-\@secpenalty}% bad place for a page break
     \penalty -\@secpenalty % bad place for a page break
     \penalty 10000
     \ignorespaces
  }{%
       \the\tabular@tail
%     \addpenalty{\@secpenalty}% good place for a page break
     \penalty \@secpenalty % good place for a page break
    \endgroup
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% DEFAULTS: (the rest of them)
%
% centered name
% overlapped section titles
%
% format is:
%    title	 employer
%    location	 dates
%    body
% with everything in the left of its column

\@secpenalty = -500
\topmargin 0pt
\headheight 0pt
\headsep 0pt
\textheight 9in
\parindent 0pt
\topmargin 0in
\oddsidemargin 0pt
\evensidemargin 0pt
\marginparwidth 0pt
\parindent 0pt
\parskip \baselineskip
\setcounter{secnumdepth}{0}
\def\@listI{\leftmargin\leftmargini
\topsep 0pt 
\parskip 0pt
\partopsep 10pt plus 2pt
\parsep 2pt plus 2pt
\itemsep \parsep}

\pagestyle{empty}  % don't want page numbers

\begin{format}
\title{l}\employer{r}\\
\location{l}\dates{r}\\
\body\\
\end{format}

\let\section\@@section

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% @brief    LaTeX2e Resume Style Config
% @url      http://linux.dsplabs.com.au/?p=54
% @date     Decemebr 2007
% @author   Kamil K Wojcicki
% @info     This a fusion of resume template code by Chris Paciorek
%           (url: http://www.biostat.harvard.edu/~paciorek/computingTips/Latex_template_creating_CV_.html)
%           and res.cls class by Michael DeCorte.
%           I have merged these for educational purposes only.

\oddsidemargin -11mm
\evensidemargin -11mm
%\textwidth=150mm
\textwidth=154mm
\itemsep=0cm
\parsep=0cm
\topmargin -12mm
%\textheight 265mm
\textheight 275mm

\newenvironment{list1}{
  \begin{list}{\ding{113}}{%
      \setlength{\itemsep}{0in}
      \setlength{\parsep}{0in} \setlength{\parskip}{0in}
      \setlength{\topsep}{0in} \setlength{\partopsep}{0in} 
      \setlength{\leftmargin}{0in}}}{\end{list}}

\newenvironment{list2}{
  \begin{list}{$\bullet$}{%
      \setlength{\itemsep}{0in}
      \setlength{\parsep}{0in} \setlength{\parskip}{0in}
      \setlength{\topsep}{0in} \setlength{\partopsep}{0in} 
      \setlength{\leftmargin}{0.25in}}}{\end{list}}

%\newcommand{\mysidestyle}{\footnotesize\sc}
\newcommand{\mysidestyle}{\small\sc}
\newcommand{\myheadingstyle}{\sl}
\newcommand{\mysubheadingstyle}{\sl}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

"
a85bnP9i,UserDetailsServiceImpl,Geniinho,Java,Tuesday 6th of June 2023 07:36:30 AM CDT,"package com.learn.mypersonal.services;

import com.learn.mypersonal.models.PersonalTrainer;
import com.learn.mypersonal.repositories.PersonalTrainerRepository;
import com.learn.mypersonal.security.UserSS;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.core.userdetails.UsernameNotFoundException;
import org.springframework.stereotype.Service;

import java.util.Optional;

@Service
public class UserDetailsServiceImpl implements UserDetailsService {

  @Autowired
  private PersonalTrainerRepository personalTrainerRepository;

  @Override
  public UserDetails loadUserByUsername(String cref) throws UsernameNotFoundException {
    Optional<PersonalTrainer> user = personalTrainerRepository.findByCref(cref);
    if (user.isPresent()){
      return new UserSS(user.get().getId(),user.get().getCref(),user.get().getSenha(), user.get().getPerfil());
    }
    throw new UsernameNotFoundException(cref);
  }
}
"
9GjYpvEE,UserSS,Geniinho,Java,Tuesday 6th of June 2023 07:36:00 AM CDT,"package com.learn.mypersonal.security;

import com.learn.mypersonal.models.enums.Perfil;
import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.authority.SimpleGrantedAuthority;
import org.springframework.security.core.userdetails.UserDetails;

import java.util.Collection;
import java.util.List;

public class UserSS implements UserDetails {

  private Long id;
  private String cref;
  private String senha;
  private Perfil perfil;

  public UserSS(Long id, String cref, String senha, Perfil perfil) {
    this.id = id;
    this.cref = cref;
    this.senha = senha;
    this.perfil = perfil;
  }

  public Long getId() {
    return id;
  }

  @Override
  public Collection<? extends GrantedAuthority> getAuthorities() {
    return List.of(new SimpleGrantedAuthority(perfil.getDescricao()));
  }

  @Override
  public String getPassword() {
    return senha;
  }

  @Override
  public String getUsername() {
    return cref;
  }

  @Override
  public boolean isAccountNonExpired() {
    return true;
  }

  @Override
  public boolean isAccountNonLocked() {
    return true;
  }

  @Override
  public boolean isCredentialsNonExpired() {
    return true;
  }

  @Override
  public boolean isEnabled() {
    return true;
  }
}
"
VmGHAL46,contoh html form,rezamalik15,HTML 5,Tuesday 6th of June 2023 07:35:28 AM CDT,"<!DOCTYPE html>
<html>
  <head>
    <meta charset=""utf-8"">
    <meta http-equiv=""X-UA-Compatible"" content=""IE=edge"">
    <title>HTML - Form</title>
    <meta name=""description"" content="""">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1"">
  </head>
  <body>

    <h1>Formulir Pendaftaran</h1>

    <form action="""" method=""post"">
      
      <fieldset>
        <legend>Biodata Diri</legend>

        <p>Masukkan data di bawah ini dengan benar!</p>

        <table>

          <tr>
            <td>
              <label for=""fname"">Nama Depan</label>
            </td>
            <td>
              <input type=""text"" name=""fname"" id=""fname"">
            </td>
          </tr>

          <tr>
            <td>
              <label for=""lname"">Nama Belakang</label>
            </td>
            <td>
              <input type=""text"" name=""lname"" id=""lname"">
            </td>
          </tr>

          <tr>
            <td>
              <label>Jenis Kelamin</label>
            </td>
            <td>
              <input type=""radio"" name=""jk"" id=""laki"" value=""laki"">
              <label for=""laki"">Laki-laki</label>

              <br>

              <input type=""radio"" name=""jk"" id=""perempuan"" value=""perempuan"">
              <label for=""perempuan"">Perempuan</label>
            </td>
          </tr>

          <tr>
            <td>
              <label for=""pob"">Tempat Lahir</label>
            </td>
            <td>
              <input type=""text"" name=""pob"" id=""pob"">
            </td>
          </tr>

          <tr>
            <td>
              <label for=""dob"">Tanggal Lahir</label>
            </td>
            <td>
              <input type=""date"" name=""dob"" id=""dob"">
            </td>
          </tr>

        </table>

      </fieldset>

      <br>

      <fieldset>
        <legend>Alamat Lengkap</legend>

        <table>

          <tr>
            <td>
              <label for=""provinsi"">Provinsi</label>
            </td>
            <td>
              <select name=""provinsi"" id=""provinsi"">
                <option value=""0"">-Pilih Provinsi-</option>
                <option value=""1"">DKI Jakarta</option>
                <option value=""2"">Jawa Barat</option>
                <option value=""3"">Banten</option>
                <option value=""4"">Jawa Tengah</option>
              </select>
            </td>
          </tr>

          <tr>
            <td>
              <label for=""kota"">Kota</label>
            </td>
            <td>
              <select name=""kota"" id=""kota"">
                <option value=""0"">-Pilih Kota-</option>
                <option value=""1"">Jakarta Utara</option>
                <option value=""2"">Jakarta Pusat</option>
                <option value=""3"">Jakarta Barat</option>
                <option value=""4"">Jakarta Timur</option>
                <option value=""5"">Jakarta Selatan</option>
              </select>
            </td>
          </tr>

          <tr>
            <td>
              <label for=""kecamatan"">Kecamatan</label>
            </td>
            <td>
              <select name=""kecamatan"" id=""kecamatan"">
                <option value=""0"">-Pilih Kecamatan-</option>
              </select>
            </td>
          </tr>

          <tr>
            <td>
              <label for=""kelurahan"">Desa / Kelurahan</label>
            </td>
            <td>
              <select name=""kelurahan"" id=""kelurahan"">
                <option value=""0"">-Pilih Desa / Kelurahan-</option>
              </select>
            </td>
          </tr>

          <tr>
            <td>
              <label for=""alamat"">Alamat</label>
            </td>
            <td>
              <textarea name=""alamat"" id=""alamat"" cols=""25"" rows=""10""></textarea>
            </td>
          </tr>

        </table> 
      </fieldset>

      <br>

      <fieldset>
        <legend>Akun</legend>

        <table>

          <tr>
            <td>
              <label for=""email"">Email</label>
            </td>
            <td>
              <input type=""email"" id=""email"" name=""email"">
            </td>
          </tr>

          <tr>
            <td>
              <label for=""username"">Username</label>
            </td>
            <td>
              <input type=""text"" id=""username"" name=""username"" maxlength=""10"">
            </td>
          </tr>
          
          <tr>
            <td>
              <label for=""pass1"">Password</label>
            </td>
            <td>
              <input type=""password"" id=""pass1"" name=""pass1"">
            </td>
          </tr>

          <tr>
            <td>
              <label for=""pass2"">Konfirmasi Password</label>
            </td>
            <td>
              <input type=""password"" id=""pass2"" name=""pass2"">
            </td>
          </tr>
          
        </table>

      </fieldset>

      <br>

      <fieldset>
        <legend>Syarat dan ketentuan</legend>

        <p>Dengan memilih ""Setuju"", anda sudah mengikuti <a href=""#"">Syarat dan ketentuan</a>yang berlaku</p>

        <input type=""checkbox"" name=""setuju"" id=""setuju"">
        <label for=""setuju"">Setuju</label>

        <br><br>

        <input type=""submit"" value=""Daftar""> <input type=""reset"" value=""Reset"">
      </fieldset>

    </form>

  </body>
</html>"
vD32158A,JWTUtil,Geniinho,Java,Tuesday 6th of June 2023 07:35:23 AM CDT,"package com.learn.mypersonal.security;

import io.jsonwebtoken.Jwts;
import io.jsonwebtoken.SignatureAlgorithm;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Component;

import java.util.Date;


@Component
public class JWTUtil {

  @Value(""${jwt.expiration}"")
  private Long expiration;

  @Value(""${jwt.secret}"")
  private String secret;

  public String generateToken(String cref) {
    return Jwts.builder()
      .setSubject(cref)
      .setExpiration(new Date(System.currentTimeMillis() + expiration))
      .signWith(SignatureAlgorithm.HS512, secret.getBytes())
      .compact();
  }
}
"
2txDQC0D,JWTAuthenticationFilter,Geniinho,Java,Tuesday 6th of June 2023 07:33:21 AM CDT,"package com.learn.mypersonal.security;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.learn.mypersonal.models.dto.CredenciaisDTO;
import jakarta.servlet.FilterChain;
import jakarta.servlet.ServletException;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.AuthenticationException;
import org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter;

import java.io.IOException;
import java.util.ArrayList;
import java.util.Date;

public class JWTAuthenticationFilter extends UsernamePasswordAuthenticationFilter {
  private AuthenticationManager authenticationManager;
  private JWTUtil jwtUtil;

  public JWTAuthenticationFilter(AuthenticationManager authenticationManager, JWTUtil jwtUtil) {
    super();
    this.authenticationManager = authenticationManager;
    this.jwtUtil = jwtUtil;
  }

  @Override
  public Authentication attemptAuthentication(HttpServletRequest request, HttpServletResponse response)
    throws AuthenticationException {
    try {
      CredenciaisDTO creds = new ObjectMapper().readValue(request.getInputStream(), CredenciaisDTO.class);
      UsernamePasswordAuthenticationToken authenticationToken =
        new UsernamePasswordAuthenticationToken(creds.getCref(), creds.getSenha(), new ArrayList<>());
      Authentication authentication = authenticationManager.authenticate(authenticationToken);
      return authentication;
    } catch (Exception e) {
      throw new RuntimeException(e);
    }
  }

  @Override
  protected void successfulAuthentication(HttpServletRequest request, HttpServletResponse response, FilterChain chain,
                                          Authentication authResult) throws IOException, ServletException {

    String username = ((UserSS) authResult.getPrincipal()).getUsername();
    String token = jwtUtil.generateToken(username);
    response.setHeader(""access-control-expose-headers"", ""Authorization"");
    response.setHeader(""Authorization"", ""Bearer "" + token);
  }

  @Override
  protected void unsuccessfulAuthentication(HttpServletRequest request, HttpServletResponse response,
                                            AuthenticationException failed) throws IOException, ServletException {

    response.setStatus(401);
    response.setContentType(""application/json"");
    response.getWriter().append(json());
  }

  private CharSequence json() {
    long date = new Date().getTime();
    return ""{""
      + ""\""timestamp\"": "" + date + "", ""
      + ""\""status\"": 401, ""
      + ""\""error\"": \""Não autorizado\"", ""
      + ""\""message\"": \""CREF ou senha inválidos\"", ""
      + ""\""path\"": \""/login\""}"";
  }
}
"
qR81kukN,Untitled,mynk_shrma,C++,Tuesday 6th of June 2023 07:26:45 AM CDT,"#include <bits/stdc++.h>
#include <map>

using namespace std;

struct TreeNode {
  string name;
  vector<TreeNode *> children;
  TreeNode *parent;
  int anc_locked;
  int dec_locked;
  int id;
  bool is_lock;

  TreeNode(string _name, TreeNode *_parent) {
    name = _name;
    parent = _parent;
    anc_locked = 0;
    dec_locked = 0;
    id = 0;
    is_lock = false;
  }

  void addLinks(vector<string> l, TreeNode *_parent);
  void printNode();
};

class Tree {
private:
  TreeNode *root;
  unordered_map<string, TreeNode *> map_get_node;

public:
  Tree() { root = nullptr; }
  Tree(TreeNode *r) { root = r; }

  TreeNode *getRoot() { return root; }

  void fill(TreeNode *r);
  void alter_desc(TreeNode *r, int val);

  bool confirm_children(TreeNode *r, int &id, vector<TreeNode *> &v);
  bool lock(string v, int id);
  bool unlock(string v, int id);
  bool upgrade(string v, int id);
  void buildTree(vector<string> arr, int m);
  void printTree() { root->printNode(); }
};

int main() {

  int count_nodes, child_per_node, queries;
  cin >> count_nodes;
  cin >> child_per_node;
  cin >> queries;

  vector<string> arr_names(count_nodes);
  for (int i = 0; i < count_nodes; i++)
    cin >> arr_names[i];

  Tree tree;
  tree.buildTree(arr_names, child_per_node);
  tree.fill(tree.getRoot());

  int choice, id;
  string s;

  for (int i = 0; i < queries; i++) {
    cin >> choice >> s >> id;

    bool good = false;

    if (choice == 1) {
      good = tree.lock(s, id);
    } else if (choice == 2) {
      good = tree.unlock(s, id);
    } else {
      good = tree.upgrade(s, id);
    }

    if (good) {
      cout << ""true\n"";
    } else {
      cout << ""false\n"";
    }
  }

  return 0;
}

void TreeNode::addLinks(vector<string> _children, TreeNode *_parent) {
  for (auto &child : _children)
    children.push_back(new TreeNode(child, _parent));
}

void TreeNode::printNode() {
  cout << ""Parent: "" << this->name << ""\n"";
  cout << ""Child: \n"";
  for (auto k : this->children) {
    cout << k->name << "" anc_locked: "" << k->anc_locked
         << "" dec_locked:"" << k->dec_locked << "" isLocked:"" << k->is_lock
         << "" uid:"" << k->id << ""\n"";
  }
  cout << ""\n"";
  for (auto &child : this->children) {
    child->printNode();
  }
}

void Tree::fill(TreeNode *node) {
  if (node == nullptr)
    return;
  map_get_node[node->name] = node;

  for (auto &child : node->children)
    fill(child);
}

void Tree::alter_desc(TreeNode *node, int val) {
  for (auto &child : node->children) {
    child->anc_locked += val;
    alter_desc(child, val);
  }
}

bool Tree::confirm_children(TreeNode *node, int &id, vector<TreeNode *> &arr) {

  if (node->is_lock) {
    if (node->id != id)
      return false;

    arr.push_back(node);
  }

  if (node->dec_locked == 0)
    return true;

  bool ans = true;

  for (auto &child : node->children) {
    ans &= confirm_children(child, id, arr);
    if (ans == false)
      return false;
  }
  return ans;
}

bool Tree::lock(string s, int id) {
  TreeNode *tree = map_get_node[s];

  if (tree->is_lock)
    return false;
  if (tree->anc_locked != 0)
    return false;
  if (tree->dec_locked != 0)
    return false;

  // Informing Ancestors.
  TreeNode *cur = tree->parent;
  while (cur) {
    cur->dec_locked++;
    cur = cur->parent;
  }

  // informing descendants.
  alter_desc(tree, 1);

  tree->is_lock = true;
  tree->id = id;
  return true;
}

bool Tree::unlock(string s, int id) {
  TreeNode *node = map_get_node[s];

// TODO: DOUBTFUL.
  if (not node->is_lock)
    return false;

  if (node->is_lock && node->id != id)
    return false;

  TreeNode *cur = node->parent;
  while (cur) {
    cur->dec_locked--;
    cur = cur->parent;
  }
  alter_desc(node, -1);
  node->is_lock = false;
  return true;
}

bool Tree::upgrade(string s, int id) {
  TreeNode *tree = map_get_node[s];
  if (tree->is_lock)
    return false;

  if (tree->anc_locked != 0)
    return false;
  if (tree->dec_locked == 0)
    return false;

  vector<TreeNode *> arr;
  bool check = confirm_children(tree, id, arr);

  if (!check)
    return false;

  for (auto &a : arr) {
    unlock(a->name, id);
  }
  lock(s, id);
  return true;
}

void Tree::buildTree(vector<string> arr, int M) {
  root = new TreeNode(arr[0], nullptr);

  queue<TreeNode *> qu;
  qu.push(root);
  int src = 1;

  while (not qu.empty()) {
    auto u = qu.front();
    qu.pop();

    if (arr.size() <= src) {
      continue;
    }

    vector<string> temp;
    for (int i = src; i < min((int)arr.size(), src + M); i++) {
      temp.push_back(arr[i]);
    }

    u->addLinks(temp, u);
    src += M;

    for (auto &k : u->children) {
      qu.push(k);
    }
  }
}
"
9MnriH9y,Untitled,IndomitablePlatypus,JavaScript,Tuesday 6th of June 2023 07:15:37 AM CDT,"<template>
  <div>
    <heading class=""mb-6"">Clc Sync</heading>
    <ClcBar
        :isImportAllowed=""isImportAllowed""
        :totalJobs=""totalJobs""
        @searchCars=""searchCars()""
        @importCars=""importCars()""
        @clearFilters=""clearFilters()""
    ></ClcBar>

    <div class=""flex flex-row items-start p-4"">
      <form class=""flex flex-col items-start justify-center filters"" v-on:keyup.enter=""searchCars"">

        <ClcRangedFilter header=""Цена"" filter-name=""cost""></ClcRangedFilter>

        <ClcRangedFilter header=""Год"" filter-name=""year""></ClcRangedFilter>

        <ClcRangedFilter header=""Пробег"" filter-name=""mileage""></ClcRangedFilter>

        <ClcArrayFilter header=""Марки"" filter-name=""mark"" :original-values=""marks""></ClcArrayFilter>

        <ClcArrayFilter header=""Модели"" filter-name=""model"" :original-values=""models""></ClcArrayFilter>

        <ClcArrayFilter header=""Источники"" filter-name=""import_source"" :original-values=""sources""></ClcArrayFilter>

        <ClcArrayFilter header=""Регионы"" filter-name=""seller_region"" :original-values=""regions""></ClcArrayFilter>

        <div class=""header"">Параметры поиска</div>
        <div class=""filter-box m-2 p-2 flex flex-col items-start justify-start"">
          <div class=""filter-field flex flex-row items-center justify-start m-1"">
            <label class=""m-1"" for=""limit"">Выбрать машин:</label>
            <input
                type=""number""
                class=""filter-textbox m-1""
                v-model=""limit""
                id=""limit""
            >
          </div>

          <div class=""m-1 randomize"">
            <input
                type=""checkbox""
                v-model=""randomizeSelection""
                id=""randomizeSelection""
            >
            <label for=""randomizeSelection"">Рандомизировать выборку</label>
          </div>
        </div>

      </form>
      <div class=""search-results"" v-if=""searchResult.length > 0"">
        <div class=""left flex flex-row center justify-start m-1"">
          <input
              type=""checkbox""
              id=""checkAll""
              class=""m-1""
              @change=""selectAll""
              v-model=""selectedAll""
              :class=""{inactive: selectedCustom}""
          />
          <label
              for=""checkAll""
              class=""m-1""
              :class=""{inactive: selectedCustom}""
          >
            Все на всех страницах
          </label>
        </div>
        <ClcCar
            v-for=""car in pagedCars""
            :car=""car""
            :key=""car.id""
            :excluded=""excludedCars[car.id]""
            @carChecked=""onCarChecked""
        ></ClcCar>

        <ClcPaging
            :current-page=""currentPage""
            :items-per-page=""itemsPerPage""
            :total-items=""searchResult.length""
            @pageChanged=""onPageChanged""
        ></ClcPaging>

      </div>
      <div class=""search-results flex justify-center fixed"" v-if=""searchResult.length === 0 && !searchInProgress"">
        <h3>{{ emptySearchMessage }}</h3>
      </div>

      <div class=""search-results flex justify-center fixed"" v-if=""searchInProgress"">
        <div class=""loader"">
          <svg xmlns=""http://www.w3.org/2000/svg"" viewBox=""0 0 20 20"">
            <path fill=""currentColor""
                  d=""M10 4.5a5.5 5.5 0 1 0 5.5 5.5A5.5 5.5 0 0 0 10 4.5zm4 3.6l-2.3.8a2 2 0 0 0-1.2-.8V5.6A4.5 4.5 0 0 1 14.1 8zM9 10a1 1 0 1 1 1 1 1 1 0 0 1-1-1zm.5-4.5v2.6a2 2 0 0 0-1.2.8L6 8.2a4.5 4.5 0 0 1 3.6-2.7zm-4 4.5a4.5 4.5 0 0 1 0-.9l2.5.8v.1a2 2 0 0 0 .5 1.3l-1.5 2A4.5 4.5 0 0 1 5.5 10zm2.3 4l1.5-2.1a2 2 0 0 0 1.5 0l1.4 2a4.3 4.3 0 0 1-4.4 0zm5.3-.7l-1.5-2A2 2 0 0 0 12 10v-.1l2.4-.8a4.5 4.5 0 0 1-1.3 4.2zM10 0a10 10 0 1 0 10 10A10 10 0 0 0 10 0zm0 18.5a8.5 8.5 0 1 1 8.5-8.5 8.5 8.5 0 0 1-8.5 8.5z""
                  fill-rule=""evenodd""/>
          </svg>
        </div>
      </div>

    </div>
  </div>
</template>

<script>

import api from ""../api"";
import ClcCar from ""./ClcCar.vue"";
import ClcBar from ""./ClcBar.vue"";
import ClcPaging from ""./ClcPaging.vue"";
import ClcRangedFilter from ""./ClcRangedFilter.vue"";
import SelectedFilters from ""../shared/selectedFilters"";
import ClcArrayFilter from ""./ClcArrayFilter.vue"";

export default {
  components: {ClcArrayFilter, ClcRangedFilter, ClcPaging, ClcBar, ClcCar},

  data() {
    return {
      searchResult: [],
      excludedCars: {},
      itemsPerPage: 20,
      currentPage: 1,
      marks: [],
      models: [],
      sources: [],
      regions: [],
      emptySearchMessage: ""Выберите фильтры для поиска"",
      limit: 1000,
      randomizeSelection: true,
      selectedAll: true,
      selectedCustom: false,
      isImporting: true,
      totalJobs: 0,
      totalJobsIntervalHandle: null,
      totalJobsIntervalPeriod: 1000,
      searchInProgress: false,
    };
  },

  async mounted() {
    this.startTotalJobsMonitoring();

    await this.prepareFilters();
  },

  beforeDestroy() {
    if (this.totalJobsIntervalHandle) {
      clearInterval(this.totalJobsIntervalHandle);
    }
  },

  computed: {
    pagedCars() {
      const start = (this.currentPage - 1) * this.itemsPerPage;
      const end = this.currentPage * this.itemsPerPage;
      return this.searchResult.slice(start, end);
    },

    isImportAllowed() {
      return !this.isImporting
          && this.totalJobs === 0
          && this.searchResult.length > 0;
    }
  },

  methods: {
    async prepareFilters() {
      const filters = await api.getFilters();
      filters.marks.forEach((item, index) => {
        this.marks.push({
          id: index,
          filterKey: item.mark,
          name: item.mark,
          value: item.mark,
          textId: `mark${item.mark}`
        });
      });

      filters.models.forEach((item, index) => {
        this.models.push({
          id: index,
          filterKey: item.model,
          name: `${item.mark} ${item.model}`,
          value: item.model,
          textId: `model${item.mark}${item.model}`
        });
      });

      filters.sources.forEach((item, index) => {
        this.sources.push({
          id: item.id,
          filterKey: item.id,
          name: item.name,
          value: item.id,
          textId: `source${item.id}`
        });
      });

      filters.regions.forEach((item, index) => {
        this.regions.push({
          id: item.id,
          filterKey: item.id,
          name: item.name,
          value: item.id,
          textId: `region${item.id}`
        });
      });
    },

    async searchCars() {
      if (this.searchInProgress) {
        return;
      }

      if (SelectedFilters.isEmpty() && !confirm(""Вы уверены, что хотите запустить поиск с пустыми фильтрами?"")) {
        return;
      }

      const filters = SelectedFilters.getFilters();

      this.searchInProgress = true;
      filters.limit = this.limit;
      filters.randomize = this.randomizeSelection;

      this.clearSearch();
      this.searchResult = await api.search(filters);

      this.searchResult.forEach(car => this.$set(this.excludedCars, car.id, false));
      this.searchInProgress = false;
      if (window) {
        window.scrollTo(0, 0);
      }
    },

    async importCars() {
      if (this.isImporting) {
        return;
      }

      this.isImporting = true;

      const ids = this
          .searchResult
          .map(car => car.id)
          .filter(id => this.excludedCars[id] === false);

      await api
          .import(ids)
          .then(Nova.success('Синхронизация запущена'));
    },

    async getTotalJobs() {
      const status = await api.getJobStatus();
      this.totalJobs = status.total;
      this.isImporting = this.totalJobs !== 0;
    },

    startTotalJobsMonitoring() {
      if (this.totalJobsIntervalHandle) {
        return;
      }
      this.totalJobsIntervalHandle = setInterval(
          () => this.getTotalJobs(),
          this.totalJobsIntervalPeriod
      );
    },

    clearSearch() {
      this.emptySearchMessage = ""Ничего не найдено"";
      this.currentPage = 1;
      this.excludedCars = {};
      this.selectedCustom = false;
      this.selectedAll = true;
      this.searchResult = [];
    },

    selectAll(value) {
      this.selectedCustom = false;
      this.searchResult.forEach(car => this.$set(this.excludedCars, car.id, !this.selectedAll));
    },

    onPageChanged(pageNumber) {
      this.currentPage = pageNumber;
    },

    onCarChecked(carId, excluded) {
      this.selectedCustom = true;
      this.$set(this.excludedCars, carId, excluded);
    },

    clearFilters() {
      SelectedFilters.clearFilters();
    },

    probablyTooMuchToSearch() {
      return
    }
  }
}
</script>

<style scoped lang=""scss"">

.header {
  font-weight: bold;
}

.filters {
  .filter-box {
    border: 1px solid #f1f3f6;
    width: 360px;

    .filter-textbox {
      width: 160px;
      outline: 1px solid #ddd;
      margin-top: 2px;
      height: 22px;

      &:focus {
        outline: 1px solid #aaa;
      }
    }
  }

  .randomize {
    margin-top: 20px;
  }
}

.search-results {
  width: 100%;
  margin-left: 20px;
}

.inactive {
  opacity: 50%;
}

.loader {
  width: 100px;
  height: 100px;
  animation-name: spin;
  animation-duration: 5000ms;
  animation-iteration-count: infinite;
  animation-timing-function: linear;
}
.px-view {
  >div {
    margin-left: -30px;
    margin-right: -30px;
  }
}
</style>
"
Zk57nSXc,"Query 4 - Update table, delete records, temporary tables",makispaiktis,SQL,Tuesday 6th of June 2023 07:00:34 AM CDT,"use [AdventureWorks2012]

SELECT * FROM [Production].[Product]
SELECT Name, ListPrice FROM [Production].[Product]

-- Calculated columns
SELECT Name, ListPrice, ListPrice + 10
AS AdjustedListPrice
FROM [Production].[Product]

-- I want it to be stored in a different table
SELECT Name, ListPrice, ListPrice + 10
AS AdjustedListPrice
INTO [Production].[Product2]
FROM [Production].[Product]

SELECT * FROM [Production].[Product2]

-- Temporary table only for me, this table will vanish after I close the window
-- Even a new session-query file can not ""see"" it
SELECT Name, ListPrice, ListPrice + 10
AS AdjustedListPrice
INTO #TempTable
FROM [Production].[Product]

SELECT * FROM #TempTable

-- Delete data from table
DELETE FROM [Production].[Product2]
WHERE Name LIKE 'Bearing Ball'

SELECT * FROM [Production].[Product2]

-- Update statement
UPDATE [Production].[Product2]
SET Name = 'Blade_new'
WHERE Name LIKE 'BLADE'

SELECT * FROM [Production].[Product2]"
gWbkwi5p,SQL QUERY,Monstercat456,MySQL,Tuesday 6th of June 2023 06:59:50 AM CDT,"
-- 1. Count all animals in the database.
SELECT COUNT(*) AS Total FROM ANIMALS;

-- 2. Count how many animals in each category.
SELECT COUNT(B.BIRD_ID) AS Bird, COUNT(M.MAMMAL_ID) AS Mammal, COUNT(F.FISH_ID) AS Fish,
       COUNT(I.INSECT_ID) AS Insect, COUNT(R.REPTILE_ID) AS Reptile
FROM ANIMALS a
LEFT JOIN BIRD B on a.ANIMAL_ID = B.ANIMAL_ID
LEFT JOIN MAMMAL M on a.ANIMAL_ID = M.ANIMAL_ID
LEFT JOIN FISH F on a.ANIMAL_ID = F.ANIMAL_ID
LEFT JOIN INSECT I on a.ANIMAL_ID = I.ANIMAL_ID
LEFT JOIN REPTILE R on a.ANIMAL_ID = R.ANIMAL_ID;

-- 3. Display what kind of bird has the highest wingspan
SELECT a.animal_name, MAX(B.WINGSPAN_INCH) AS WINGSPAN_Inches
FROM ANIMALS a
JOIN BIRD B on a.ANIMAL_ID = B.ANIMAL_ID
group by a.animal_name
ORDER BY WINGSPAN_Inches DESC
FETCH FIRST 1 ROW ONLY;

-- 4. Display all land based animals and their habitats
SELECT a.animal_name, COALESCE(Hb.habitat_name, Hm.habitat_name, Hf.habitat_name, Hi.habitat_name, Hr.habitat_name) AS habitat
FROM ANIMALS a
LEFT JOIN BIRD B ON a.ANIMAL_ID = B.ANIMAL_ID LEFT JOIN MAMMAL M ON a.ANIMAL_ID = M.ANIMAL_ID
LEFT JOIN FISH F ON a.ANIMAL_ID = F.ANIMAL_ID LEFT JOIN INSECT I ON a.ANIMAL_ID = I.ANIMAL_ID LEFT JOIN REPTILE R ON a.ANIMAL_ID = R.ANIMAL_ID
LEFT JOIN HABITAT Hb ON B.HABITAT_ID = Hb.HABITAT_ID LEFT JOIN HABITAT Hm ON M.HABITAT_ID = Hm.HABITAT_ID
LEFT JOIN HABITAT Hf ON F.HABITAT_ID = Hf.HABITAT_ID LEFT JOIN HABITAT Hi ON I.HABITAT_ID = Hi.HABITAT_ID LEFT JOIN HABITAT Hr ON R.HABITAT_ID = Hr.HABITAT_ID
WHERE (Hb.HABITAT_NAME NOT LIKE '%water%' OR Hb.HABITAT_NAME IS NULL)
  AND (Hb.HABITAT_NAME NOT LIKE '%ocean%' OR Hb.HABITAT_NAME IS NULL)
  AND (Hb.HABITAT_NAME NOT LIKE '%river%' OR Hb.HABITAT_NAME IS NULL)
  AND (Hb.HABITAT_NAME NOT LIKE '%lake%' OR Hb.HABITAT_NAME IS NULL)
  AND (Hb.HABITAT_NAME NOT LIKE '%Swamp%' OR Hb.HABITAT_NAME IS NULL)
  AND (Hb.HABITAT_NAME NOT LIKE '%Coastal%' OR Hb.HABITAT_NAME IS NULL)
  AND (Hm.HABITAT_NAME NOT LIKE '%water%' OR Hm.HABITAT_NAME IS NULL)
  AND (Hm.HABITAT_NAME NOT LIKE '%ocean%' OR Hm.HABITAT_NAME IS NULL)
  AND (Hm.HABITAT_NAME NOT LIKE '%river%' OR Hm.HABITAT_NAME IS NULL)
  AND (Hm.HABITAT_NAME NOT LIKE '%lake%' OR Hm.HABITAT_NAME IS NULL)
  AND (Hm.HABITAT_NAME NOT LIKE '%Swamp%' OR Hm.HABITAT_NAME IS NULL)
  AND (Hm.HABITAT_NAME NOT LIKE '%Coastal%' OR Hm.HABITAT_NAME IS NULL)
  AND (Hf.HABITAT_NAME NOT LIKE '%water%' OR Hf.HABITAT_NAME IS NULL)
  AND (Hf.HABITAT_NAME NOT LIKE '%ocean%' OR Hf.HABITAT_NAME IS NULL)
  AND (Hf.HABITAT_NAME NOT LIKE '%river%' OR Hf.HABITAT_NAME IS NULL)
  AND (Hf.HABITAT_NAME NOT LIKE '%lake%' OR Hf.HABITAT_NAME IS NULL)
  AND (Hf.HABITAT_NAME NOT LIKE '%Swamp%' OR Hf.HABITAT_NAME IS NULL)
  AND (Hf.HABITAT_NAME NOT LIKE '%Coastal%' OR Hf.HABITAT_NAME IS NULL)
  AND (Hi.HABITAT_NAME NOT LIKE '%water%' OR Hi.HABITAT_NAME IS NULL)
  AND (Hi.HABITAT_NAME NOT LIKE '%ocean%' OR Hi.HABITAT_NAME IS NULL)
  AND (Hi.HABITAT_NAME NOT LIKE '%river%' OR Hi.HABITAT_NAME IS NULL)
  AND (Hi.HABITAT_NAME NOT LIKE '%lake%' OR Hi.HABITAT_NAME IS NULL)
  AND (Hi.HABITAT_NAME NOT LIKE '%Swamp%' OR Hi.HABITAT_NAME IS NULL)
  AND (Hi.HABITAT_NAME NOT LIKE '%Coastal%' OR Hi.HABITAT_NAME IS NULL)
  AND (Hr.HABITAT_NAME NOT LIKE '%water%' OR Hr.HABITAT_NAME IS NULL)
  AND (Hr.HABITAT_NAME NOT LIKE '%ocean%' OR Hr.HABITAT_NAME IS NULL)
  AND (Hr.HABITAT_NAME NOT LIKE '%river%' OR Hr.HABITAT_NAME IS NULL)
  AND (Hr.HABITAT_NAME NOT LIKE '%lake%' OR Hr.HABITAT_NAME IS NULL)
  AND (Hr.HABITAT_NAME NOT LIKE '%Swamp%' OR Hr.HABITAT_NAME IS NULL)
AND (Hr.HABITAT_NAME NOT LIKE '%Coastal%' OR Hr.HABITAT_NAME IS NULL)
ORDER BY COALESCE(Hb.habitat_name, Hm.habitat_name, Hf.habitat_name, Hi.habitat_name, Hr.habitat_name);

-- 5. Rank top 10 most populated habitat
SELECT  COALESCE(Hb.habitat_name, Hm.habitat_name, Hf.habitat_name, Hi.habitat_name, Hr.habitat_name) AS habitat, COUNT(a.animal_id) AS animal_count
FROM ANIMALS a
LEFT JOIN BIRD B ON a.ANIMAL_ID = B.ANIMAL_ID LEFT JOIN MAMMAL M ON a.ANIMAL_ID = M.ANIMAL_ID
LEFT JOIN FISH F ON a.ANIMAL_ID = F.ANIMAL_ID LEFT JOIN INSECT I ON a.ANIMAL_ID = I.ANIMAL_ID LEFT JOIN REPTILE R ON a.ANIMAL_ID = R.ANIMAL_ID
LEFT JOIN HABITAT Hb ON B.HABITAT_ID = Hb.HABITAT_ID LEFT JOIN HABITAT Hm ON M.HABITAT_ID = Hm.HABITAT_ID
LEFT JOIN HABITAT Hf ON F.HABITAT_ID = Hf.HABITAT_ID LEFT JOIN HABITAT Hi ON I.HABITAT_ID = Hi.HABITAT_ID LEFT JOIN HABITAT Hr ON R.HABITAT_ID = Hr.HABITAT_ID
GROUP BY COALESCE(Hb.habitat_name, Hm.habitat_name, Hf.habitat_name, Hi.habitat_name, Hr.habitat_name)
ORDER BY COUNT(a.animal_id) DESC
FETCH FIRST 10 ROWS ONLY;

-- 6. list all animals found in the savanna
SELECT a.animal_name, H.habitat_name
FROM ANIMALS a
LEFT JOIN BIRD B ON a.ANIMAL_ID = B.ANIMAL_ID
LEFT JOIN MAMMAL M ON a.ANIMAL_ID = M.ANIMAL_ID
LEFT JOIN FISH F ON a.ANIMAL_ID = F.ANIMAL_ID
LEFT JOIN INSECT I ON a.ANIMAL_ID = I.ANIMAL_ID
LEFT JOIN REPTILE R ON a.ANIMAL_ID = R.ANIMAL_ID
LEFT JOIN HABITAT H ON H.HABITAT_ID = COALESCE(B.HABITAT_ID, M.HABITAT_ID, F.HABITAT_ID, I.HABITAT_ID, R.HABITAT_ID)
WHERE H.habitat_name LIKE '%Savanna%';


-- 7. Identify what animals are omnivores
SELECT a.animal_name, D.diet_name
FROM ANIMALS a
LEFT JOIN BIRD B ON a.ANIMAL_ID = B.ANIMAL_ID
LEFT JOIN MAMMAL M ON a.ANIMAL_ID = M.ANIMAL_ID
LEFT JOIN FISH F ON a.ANIMAL_ID = F.ANIMAL_ID
LEFT JOIN INSECT I ON a.ANIMAL_ID = I.ANIMAL_ID
LEFT JOIN REPTILE R ON a.ANIMAL_ID = R.ANIMAL_ID
LEFT JOIN DIET D ON D.diet_ID = COALESCE(B.diet_ID, M.diet_ID, F.diet_ID, I.diet_ID, R.diet_ID)
WHERE D.diet_name = 'Omnivore';

-- 8. Display mammal that has the longest name
SELECT animal_name, LENGTH(animal_name) AS Length
FROM ANIMALS
WHERE animal_id LIKE '%M'
ORDER BY LENGTH(animal_name) DESC
FETCH FIRST 1 ROW ONLY;

-- 9. Create an alias table identifying all animals that live in land, water, and air.
SELECT
  a.animal_name,
  CASE
    WHEN H.HABITAT_NAME LIKE '%water%' OR H.HABITAT_NAME LIKE '%Ocean%' OR H.HABITAT_NAME LIKE '%River%' OR H.HABITAT_NAME LIKE '%Lake%' OR H.HABITAT_NAME LIKE '%Swamp%' OR H.HABITAT_NAME LIKE '%Coastal%' THEN 'Water'
    WHEN H.HABITAT_NAME NOT LIKE '%water%' AND H.HABITAT_NAME NOT LIKE '%ocean%' AND H.HABITAT_NAME NOT LIKE '%river%' AND H.HABITAT_NAME NOT LIKE '%lake%' AND H.HABITAT_NAME NOT LIKE '%swamp%' OR H.HABITAT_NAME NOT LIKE '%Coastal%' THEN 'Land'
    ELSE 'Unknown'
  END AS habitat_category
FROM
  ANIMALS a
  LEFT JOIN BIRD B ON a.ANIMAL_ID = B.ANIMAL_ID
  LEFT JOIN MAMMAL M ON a.ANIMAL_ID = M.ANIMAL_ID
  LEFT JOIN FISH F ON a.ANIMAL_ID = F.ANIMAL_ID
  LEFT JOIN INSECT I ON a.ANIMAL_ID = I.ANIMAL_ID
  LEFT JOIN REPTILE R ON a.ANIMAL_ID = R.ANIMAL_ID
  LEFT JOIN HABITAT H ON H.HABITAT_ID = COALESCE(B.HABITAT_ID, M.HABITAT_ID, F.HABITAT_ID, I.HABITAT_ID, R.HABITAT_ID);
"
2qBgtatK,Simple Tic-Tac-Toe (Java),keevosp,Java,Tuesday 6th of June 2023 06:43:51 AM CDT,"package tictactoe;
import java.util.InputMismatchException;
import java.util.Scanner;

public class Main {
    static boolean isGameRunning = true;
    
    public static void main(String[] args) {
        // write your code here
        Grid grid = new Grid();
        grid.fillGrid();
        grid.showGrid();
        while (isGameRunning) {
            grid.makeMove();
        }
    }
}

class Grid{
    
    public static final char EMPTY_CELL = ' ';
    public static final char O_CELL = 'O';
    public static final char X_CELL = 'X';
    public static int moveCounter = 0;
    static String input;
    
    private char[][] field = new char[3][3];
//    Scanner s = new Scanner(System.in);
    void fillGrid () {
        for (int i = 0; i < field.length; i++) {
            for (int j = 0; j < field[i].length; j++)
                field[i][j] = Grid.EMPTY_CELL;
        }
    }
    
    public void makeMove () {
        Scanner s = new Scanner(System.in);
        try {
            int x = s.nextInt();
                int y = s.nextInt();
                x--;
                y--;
                if (EMPTY_CELL == field[x][y] && moveCounter % 2 == 0) {
                    field[x][y] = Grid.X_CELL;
                    showGrid();
                    moveCounter++;
                    checkGameState();
                } else if (EMPTY_CELL == field[x][y] && moveCounter % 2 != 0) {
                    field[x][y] = Grid.O_CELL;
                    showGrid();
                    moveCounter++;
                    checkGameState();
                } else if (EMPTY_CELL != field[x][y]) {
                    System.out.println(""This cell is occupied! Choose another one!"");
                }
            } catch (InputMismatchException e) {
                System.out.println(""You should enter numbers!"");
            } catch (IndexOutOfBoundsException e) {
                System.out.println(""Coordinates should be from 1 to 3!"");
            }
    }
    
    void showGrid () {
        System.out.print(""---------\n"" +
                         ""| "" + field[0][0] + "" "" + field[0][1] + "" "" + field[0][2] + "" |\n"" +
                         ""| "" + field[1][0] + "" "" + field[1][1] + "" "" + field[1][2] + "" |\n"" +
                         ""| "" + field[2][0] + "" "" + field[2][1] + "" "" + field[2][2] + "" |\n"" +
                         ""---------\n"");
    }
    
    
    private boolean isPlayerWin (char player) {
        return (field[0][0] == player && field[1][1] == player && field[2][2] == player) ||
                ((field[0][2] == player && field[1][1] == player && field[2][0] == player) ||
            
            (field[0][0] == player && field[1][0] == player && field[2][0] == player) ||
            (field[0][1] == player && field[1][1] == player && field[2][1] == player) ||
            (field[0][2] == player && field[1][2] == player && field[2][2] == player) ||
            
            (field[0][0] == player && field[0][1] == player && field[0][2] == player) ||
            (field[1][0] == player && field[1][1] == player && field[1][2] == player) ||
            (field[2][0] == player && field[2][1] == player && field[2][2] == player));
    }
    
   
    public void checkGameState() {
        
        int xCnt = 0;
        int oCnt = 0;
        
        for (int i = 0; i < field.length; i++) {
            for (int j = 0; j < field[i].length; j++) {
                if (field[i][j] == X_CELL) {
                    xCnt++;
                } else if (field[i][j] == Grid.O_CELL) {
                    oCnt++;
                }
            }
        }
        int moveCnt = xCnt + oCnt;
        boolean isImpossQntDiff = xCnt > oCnt + 1 || xCnt < oCnt - 1 || oCnt > xCnt + 1 || oCnt < xCnt - 1;
        
        char player = (moveCounter - 1) % 2 == 0 ? 'X' : 'O';
        for (;;) {
            if (isPlayerWin(player)) {
                System.out.println(player + "" wins"");
                Main.isGameRunning = false;
                return;
            } else if (isPlayerWin(player) || isImpossQntDiff) {
                System.out.println(""Impossible"");
                return;
            } else if (9 == moveCnt){
                System.out.println(""Draw"");
                Main.isGameRunning = false;
                return;
            } else {
                return;
            }
        }
    }
}
//    public void gameStartInput () {
//        final Scanner s = new Scanner(System.in);
//        Grid.input = s.nextLine().replaceAll(""_"", "" "");
//        int counter = 0;
//        for (int i = 0; i < field.length; i++) {
//            for (int j = 0; j < field[i].length; j++) {
//                field[i][j] = Grid.input.charAt(counter);
//                counter++;
//            }
//        }
//        showGrid();
//        checkGameState();
//    }"
d9AKVe2J,邀您一起看：推送,xiaomianao666,JavaScript,Tuesday 6th of June 2023 06:37:39 AM CDT,海阔视界规则分享，当前分享的是：二级页面详情￥page_detail￥推送@@
GPPiKuR0,"Query 3 - Filters (=, LIKE, IN, %, AND, BETWEEN)",makispaiktis,SQL,Tuesday 6th of June 2023 06:09:46 AM CDT,"USE [AdventureWorks2012]

SELECT * FROM [HumanResources].[Department]

-- 1. QUERIES

-- 1a. Show me all the department names (2nd column)
SELECT Name FROM [HumanResources].[Department]
-- 1b. Show me all the department group names (3rd column)
SELECT GroupName FROM [HumanResources].[Department]
-- 1c. Give me the distinct values of  group names
SELECT DISTINCT GroupName FROM [HumanResources].[Department]


-- 2. FILTERS

-- 2a. Show me all the department names which are part of manufacturing
SELECT Name,GroupName FROM [HumanResources].[Department]
WHERE GroupName LIKE 'MANUFACTURING'
-- Change table (Employee not Department)
-- 2b. Give me a list level of employees of org. level = 2
SELECT  * FROM [HumanResources].[Employee]
WHERE [OrganizationLevel] = 2
-- 2c. Give me a list level of employees of org. level = 2 or 3
SELECT  * FROM [HumanResources].[Employee]
WHERE [OrganizationLevel] IN (2, 3)
-- 2d. Give me a list of employees who have a title as facilities manager (not case-sensitive)
SELECT  * FROM [HumanResources].[Employee]
WHERE [JobTitle] LIKE 'FaCIlities MANager'
-- 2e. Give me a list of employees who have the word 'Manager' in the job title as the last word of the title
-- '%' means searching before 'Manager'. If I had put it after 'Manager', it would search
-- also after 'Manager'
SELECT  * FROM [HumanResources].[Employee]
WHERE [JobTitle] LIKE '%Manager'
-- 2f. Give me a list of employees who have the word 'control' in the job title
SELECT  * FROM [HumanResources].[Employee]
WHERE [JobTitle] LIKE '%control%'
-- 2g. Give me all employees who were born after January 1 1980
SELECT  * FROM [HumanResources].[Employee]
WHERE [BirthDate] > '1/1/1980'
-- 2h. Give me all employees who were born between Jan 1, 1970 and Jan 1, 1980
SELECT  * FROM [HumanResources].[Employee]
WHERE [BirthDate] > '1/1/1970' AND [BirthDate] < '1/1/1980'

SELECT  * FROM [HumanResources].[Employee]
WHERE [BirthDate] BETWEEN '1/1/1970' AND '1/1/1980'"
