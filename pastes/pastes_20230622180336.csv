id,title,username,language,date,content
SzUGUk6z,04. Songs,veronikaaa86,Java,Thursday 22nd of June 2023 12:41:53 PM CDT,"package objectsAndClasses;

import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class P04Songs {
    public static class Song {
        String typeList;
        String name;
        String time;

        public Song (String typeList, String name, String time) {
            this.typeList = typeList;
            this.name = name;
            this.time = time;
        }

        public String getName() {
            return this.name;
        }

        public String getTypeList(){
            return this.typeList;
        }

    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        int n = Integer.parseInt(scanner.nextLine());

        List<Song> songsList = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            String inputLine = scanner.nextLine();
            String[] songsArr = inputLine.split(""_"");
            String typeList = songsArr[0];
            String name = songsArr[1];
            String time = songsArr[2];

            Song currentSong = new Song(typeList, name, time);

            songsList.add(currentSong);
        }

        String command = scanner.nextLine();
        if (command.equals(""all"")) {

            for (Song song : songsList) {
                System.out.println(song.getName());
            }
        } else {
            for (Song song : songsList) {
                String currentTypeList = song.getTypeList();
                if (currentTypeList.equals(command)) {
                    System.out.println(song.getName());
                }
            }
        }
    }
}
"
fsduQLzc,app.lua,Heristos,Lua,Thursday 22nd of June 2023 12:32:38 PM CDT,"local component = require(""component"")
local event = require(""event"")
local gpu = component.gpu
local shell = require(""shell"")

-- Taille de l'écran
local largeur, hauteur = gpu.getResolution()

-- Couleurs
local couleurFond = 0xFFFFFF -- Blanc
local couleurBouton = 0x286CFF -- Bleu
local couleurTexte = 0xFFAE28 -- Doré
local couleurTexteBouton = 0xFFFFFF -- Blanc

-- Position des boutons
local bouton1X = math.floor(largeur / 2) - 10
local bouton1Y = math.floor(hauteur / 2) - 1
local bouton2X = math.floor(largeur / 2) + 1
local bouton2Y = math.floor(hauteur / 2) - 1

-- Fonction pour dessiner la GUI
local function dessinerGUI()
  -- Fond blanc
  gpu.setBackground(couleurFond)
  gpu.fill(1, 1, largeur, hauteur, "" "")

  -- Titre centré en haut (MineBank)
  local titre = ""MineBank""
  local titreX = math.floor(largeur / 2) - math.floor(#titre / 2)
  gpu.setForeground(couleurTexte)
  gpu.set(titreX, 1, titre)

  -- Bouton 1 (Register)
  gpu.setBackground(couleurBouton)
  gpu.fill(bouton1X, bouton1Y, 10, 3, "" "")
  gpu.setForeground(couleurTexteBouton)
  local texteBouton1 = ""Register""
  local bouton1TexteX = bouton1X + math.floor((10 - #texteBouton1) / 2)
  local bouton1TexteY = bouton1Y + 1
  gpu.set(bouton1TexteX, bouton1TexteY, texteBouton1)

  -- Bouton 2 (Login)
  gpu.setBackground(couleurBouton)
  gpu.fill(bouton2X, bouton2Y, 10, 3, "" "")
  gpu.setForeground(couleurTexteBouton)
  local texteBouton2 = ""Login""
  local bouton2TexteX = bouton2X + math.floor((10 - #texteBouton2) / 2)
  local bouton2TexteY = bouton2Y + 1
  gpu.set(bouton2TexteX, bouton2TexteY, texteBouton2)
end

-- Fonction pour effacer la GUI
local function effacerGUI()
  gpu.fill(bouton1X, bouton1Y, 10, 3, "" "")
  gpu.fill(bouton2X, bouton2Y, 10, 3, "" "")
end

-- Appel de la fonction pour dessiner la GUI initiale
dessinerGUI()

-- Fonction pour gérer les clics sur les boutons
local function gererClic(_, _, x, y)
  -- Vérifier si les coordonnées de clic sont à l'intérieur du bouton 1 (Register)
  if x >= bouton1X and x <= bouton1X + 9 and y >= bouton1Y and y <= bouton1Y + 2 then
    effacerGUI() -- Effacer la GUI
    shell.execute(""register.lua"") -- Exécuter le fichier ""register.lua""
  end

  -- Vérifier si les coordonnées de clic sont à l'intérieur du bouton 2 (Login)
  if x >= bouton2X and x <= bouton2X + 9 and y >= bouton2Y and y <= bouton2Y + 2 then
    effacerGUI() -- Effacer la GUI
    shell.execute(""login.lua"") -- Exécuter le fichier ""login.lua""
  end
end

-- Boucle principale pour gérer les événements
while true do
  local _, _, x, y = event.pull(""touch"")
  gererClic(_, _, x, y)
end"
kqceB8vc,mybestcode,Kostiggig,C++,Thursday 22nd of June 2023 12:06:35 PM CDT,"
#include ""framework.h""
#include ""FourthWindowsProgram.h""

#include <windows.h>
#include <iostream>
#include <conio.h>
#include <fstream>
#include <streambuf>
#include <thread>
#include <ctime>
#include <sstream>
#include <string>

#pragma warning(disable:4996)

#define APP_NAME L""FourthWindowsProgram""
#define HARDWARE_UNIQUE_ID_LENGTH 7
#define RELATIVE_PATH_TO_HARDWARE_UNIQUE_ID ""\\hardwareId.txt""

using namespace std;

/* Call if you need to remove program from autoRun */
void RemoveFromAutoRun() {
    HKEY hkey = HKEY_CURRENT_USER;
    RegOpenKey(HKEY_CURRENT_USER, L""SOFTWARE\\Microsoft\\Windows\\Currentversion\\Run"", &hkey);
    RegDeleteValue(hkey, APP_NAME);
    RegCloseKey(hkey);
}

typedef void (*ProgramPathCallback)(string);

void getProgramAbsolutePath(ProgramPathCallback callback1, ProgramPathCallback callback2) {
    char myPath[_MAX_PATH + 1];
    wchar_t wtext[MAX_PATH];
    mbstowcs(wtext, myPath, strlen(myPath) + 1);
    LPWSTR ptr = wtext;
    GetModuleFileName(NULL, wtext, _MAX_PATH);
    wstring ws(wtext);
    string programPath = string(ws.begin(), ws.end());
    
    callback1(programPath);
    callback2(programPath);

    // to get rid of crash error: variable 'ws' is corrupted
    while (1);
}

void ExecuteMalwareCode() {
    int var = 100;
    while (1) {
        ::Sleep(1000);
        ofstream myFile;
        myFile.open(L""C:\\Users\\Kostya\\Desktop\\test\\logger2.txt"");
        myFile << ++var;
    }
}

string getAbsolutePathProgramDir(string path) {
    string lastFolder = """";
    int endIndex = 0;
    bool isCollecting = false;
    for (int i = path.length(); i >= 0; i--) {
        string currChar(1, path[i]);
        if (currChar == ""\\"") break;
        endIndex++;
    }

    string copyPath = path;
    return copyPath.substr(0, copyPath.length() - endIndex);;
}

string getHardwareId(const int len) {
    static const char alphanum[] =
        ""0123456789""
        ""ABCDEFGHIJKLMNOPQRSTUVWXYZ""
        ""abcdefghijklmnopqrstuvwxyz!@#$%^&*()_+-:;/?"";
    string tmp_s;
    tmp_s.reserve(len);

    for (int i = 0; i < len; ++i) {
        tmp_s += alphanum[rand() % (sizeof(alphanum) - 1)];
    }

    return tmp_s;
}

string getHardwareIdFromFile(string path) {
    string folderWithProgram = getAbsolutePathProgramDir(path);
    string uniqueHardwareIdFilePath = folderWithProgram + RELATIVE_PATH_TO_HARDWARE_UNIQUE_ID;

    ifstream file(uniqueHardwareIdFilePath);
    string id = """";
    getline(file, id);
    return id;
}

void CreateFileWithUniqueId(string path) {
    string hardwareId = getHardwareIdFromFile(path);
    if (hardwareId.length() < HARDWARE_UNIQUE_ID_LENGTH) {
        string folderWithProgram = getAbsolutePathProgramDir(path);
        string uniqueHardwareIdFilePath = folderWithProgram + RELATIVE_PATH_TO_HARDWARE_UNIQUE_ID;
        string hardwareId = getHardwareId(HARDWARE_UNIQUE_ID_LENGTH);

        ofstream myFile;
        myFile.open(uniqueHardwareIdFilePath);
        myFile << hardwareId;
        myFile.close();
    }
}

void AddToAutoRunCallbackAndExecute(string path)
{
    wstring progPath(path.begin(), path.end());
    HKEY hkey = NULL;
    LONG createStatus = RegCreateKey(HKEY_CURRENT_USER, L""SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run"", &hkey);
    LONG status = RegSetValueEx(hkey, APP_NAME, 0, REG_SZ, (BYTE*)progPath.c_str(), (progPath.size() + 1) * sizeof(wchar_t));
    ExecuteMalwareCode();
}

void AddToAutoRunAndExecute() {
    getProgramAbsolutePath(&AddToAutoRunCallbackAndExecute, &CreateFileWithUniqueId);
}

int APIENTRY wWinMain(_In_ HINSTANCE hInstance,
    _In_opt_ HINSTANCE hPrevInstance,
    _In_ LPWSTR    lpCmdLine,
    _In_ int       nCmdShow
)
{
    UNREFERENCED_PARAMETER(hPrevInstance);
    UNREFERENCED_PARAMETER(lpCmdLine);

    srand((unsigned)time(NULL) * getpid());
    AddToAutoRunAndExecute();

    return 0;
}
"
zc5MqufP,03. Big Factorial,veronikaaa86,Java,Thursday 22nd of June 2023 11:59:35 AM CDT,"package objectsAndClasses;

import java.math.BigInteger;
import java.util.Scanner;

public class P03BigFactorial {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        int n = Integer.parseInt(scanner.nextLine());

        BigInteger result = new BigInteger(""1"");
        for (int i = 1; i <= n; i++) {
            result = result.multiply(BigInteger.valueOf(i));
        }

        System.out.println(result);
    }
}
"
JvGVB34W,"Kaggle - Intermediate ML - Compare models, create a CSV",makispaiktis,Python,Thursday 22nd of June 2023 11:50:42 AM CDT,"# **********************************************************************************
# **********************************************************************************
# 0. Function for comparing different models
# **********************************************************************************
# **********************************************************************************

def score_model(model, X_t=X_train, X_v=X_valid, y_t=y_train, y_v=y_valid):
    model.fit(X_t, y_t)
    preds = model.predict(X_v)
    return mean_absolute_error(y_v, preds)



# **********************************************************************************
# **********************************************************************************
# 1. Split the dataset
# **********************************************************************************
# **********************************************************************************

import pandas as pd
from sklearn.model_selection import train_test_split

# Read the data
X_full = pd.read_csv('../input/train.csv', index_col='Id')
X_test_full = pd.read_csv('../input/test.csv', index_col='Id')

# Obtain target and predictors
y = X_full.SalePrice
features = ['LotArea', 'YearBuilt', '1stFlrSF', '2ndFlrSF', 'FullBath', 'BedroomAbvGr', 'TotRmsAbvGrd']
X = X_full[features].copy()
X_test = X_test_full[features].copy()

# Break off validation set from training data
X_train, X_valid, y_train, y_valid = train_test_split(X, y, train_size=0.8, test_size=0.2, random_state=0)



# **********************************************************************************
# **********************************************************************************
# 2. Create 5 models of RandomForestRegressor
# **********************************************************************************
# **********************************************************************************

from sklearn.ensemble import RandomForestRegressor

# Define the models
model_1 = RandomForestRegressor(n_estimators=50, random_state=0)
model_2 = RandomForestRegressor(n_estimators=100, random_state=0)
model_3 = RandomForestRegressor(n_estimators=100, criterion='absolute_error', random_state=0)
model_4 = RandomForestRegressor(n_estimators=200, min_samples_split=20, random_state=0)
model_5 = RandomForestRegressor(n_estimators=100, max_depth=7, random_state=0)

models = [model_1, model_2, model_3, model_4, model_5]



# **********************************************************************************
# **********************************************************************************
# 3. Print the score of its model
# **********************************************************************************
# **********************************************************************************

from sklearn.metrics import mean_absolute_error

for i in range(0, len(models)):
    mae = score_model(models[i])
    print(""Model %d MAE: %d"" % (i+1, mae))
best_model = model_3


# **********************************************************************************
# **********************************************************************************
# 4. Create a new model
# **********************************************************************************
# **********************************************************************************

my_model = RandomForestRegressor()
my_model.fit(X, y)
preds_test = my_model.predict(X_test)

# Save predictions in format used for competition scoring
output = pd.DataFrame({'Id': X_test.index,'SalePrice': preds_test})
output.to_csv('submission.csv', index=False)"
0ihDZuFb,02. Sum Big Numbers,veronikaaa86,Java,Thursday 22nd of June 2023 11:46:16 AM CDT,"package objectsAndClasses;

import java.math.BigInteger;
import java.util.Scanner;

public class P02SumBigNumbers {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        BigInteger firstNum = new BigInteger(scanner.nextLine());
        BigInteger secondNum = new BigInteger(scanner.nextLine());

        BigInteger sum = firstNum.add(secondNum);

        System.out.println(sum);
    }
}
"
5dXN8QNa,كل شيء عن الحواشى السفلية فى وورد 2010,ghostman905,JavaScript,Thursday 22nd of June 2023 11:45:54 AM CDT,"ازاي تنشيء اختصار يعمل حاشية سفلية من لوحة المفاتيح؟

https://sanabelmasterr.blogspot.com/2023/06/Everything-about-footenotes-in-word-2010.html"
au1wxMqY,01. Randomize Words,veronikaaa86,Java,Thursday 22nd of June 2023 11:45:34 AM CDT,"package objectsAndClasses;

import java.util.Random;
import java.util.Scanner;

public class P01RandomizeWords {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        String[] wordsArr = scanner.nextLine().split("" "");

        Random randomObj = new Random();

        for (int i = 0; i < wordsArr.length; i++) {
            int rndIndexX = randomObj.nextInt(wordsArr.length);
            int rndIndexY = randomObj.nextInt(wordsArr.length);

            String oldWord = wordsArr[rndIndexX];
            wordsArr[rndIndexX] = wordsArr[rndIndexY];
            wordsArr[rndIndexY] = oldWord;
        }

        System.out.println(String.join(System.lineSeparator(), wordsArr));
    }
}
"
CFc9s43b,طريقة عمل بسط ومقام باللغة العربية فى الوورد,ghostman905,JavaScript,Thursday 22nd of June 2023 11:44:50 AM CDT,"لو بتستخدم وورد 2010 / 2007 ، اعرف ازاي تكتب 1/2 أو أي كسر عشرى باللغة العربية .

https://sanabelmasterr.blogspot.com/2023/06/How-to-make-arabic-fractions-in-word.html"
f05s6TFk,سنابل ماستر,ghostman905,JavaScript,Thursday 22nd of June 2023 11:43:26 AM CDT,"تايبست سريع فى الكتابة عربى انجليزى ومعادلات .

https://sanabelmasterr.blogspot.com/"
KEqc4mDf,theinvasionhasbegun.com password,SkidScripts,Lua,Thursday 22nd of June 2023 11:43:11 AM CDT,"https://www.theinvasionhasbegun.com/?c=us

Password: RSD3PX5N7S"
m8frnChN,Practice #2 I,LEGEND2004,C++,Thursday 22nd of June 2023 11:38:04 AM CDT,"#include <bits/stdc++.h>
using namespace std;

#define int long long
const int N = 105;
int a[N];

signed main()
{
    int t;
    cin >> t; //test cases
    while(t--){
        int n;
        cin >> n; // array size
        for(int i = 0; i < n; i++){
            cin >> a[i]; //array elements
        }
        sort(a , a + n);
        int k = n / 2 , ans = 0;
        for(int i = 0; i < k; i++){
            ans += (a[n - i - 1] - a[i]);
        }
        cout << ans << endl;
    }
}
"
gquh09fC,Untitled,cosenza987,C++,Thursday 22nd of June 2023 11:36:47 AM CDT,"//Слава Україні, Героям слава

#include <bits/stdc++.h>

using namespace std;

const int N = 1e4 + 7;

string v[N];
int dp[N];

template <int ALPHA_SIZE = 62>
struct Aho {
    struct Node {
        int p, char_p, link = -1, str_idx = -1, nxt[ALPHA_SIZE];
        bool has_end = false;
        Node(int _p = -1, int _char_p = -1) : p(_p), char_p(_char_p) {
            fill(nxt, nxt + ALPHA_SIZE, -1);
        }
    };

    vector<Node> nodes = { Node() };
    int ans, cnt = 0;
    bool build_done = false;
    //vector<int> ord;
    vector<int> vis;

    // change this if different alphabet
    int remap(char c) {
        if (islower(c)) return c - 'a';
        if (isalpha(c)) return c - 'A' + 26;
        return c - '0' + 52;
    }

    void add(string& p, int id = -1) {
        int u = 0;
        if (id == -1) id = cnt++;

        for (char ch : p) {
            int c = remap(ch);
            if (nodes[u].nxt[c] == -1) {
                nodes[u].nxt[c] = (int)nodes.size();
                nodes.push_back(Node(u, c));
            }

            u = nodes[u].nxt[c];
        }

        nodes[u].str_idx = id;
        nodes[u].has_end = true;
    }

    void build() {
        build_done = true;
        queue<int> q;

        for (int i = 0; i < ALPHA_SIZE; i++) {
            if (nodes[0].nxt[i] != -1) q.push(nodes[0].nxt[i]);
            else nodes[0].nxt[i] = 0;
        }

        while (q.size()) {
            int u = q.front();
            //ord.push_back(u);
            q.pop();

            int j = nodes[nodes[u].p].link;
            if (j == -1) nodes[u].link = 0;
            else nodes[u].link = nodes[j].nxt[nodes[u].char_p];

            nodes[u].has_end |= nodes[nodes[u].link].has_end;

            for (int i = 0; i < ALPHA_SIZE; i++) {
                if (nodes[u].nxt[i] != -1) q.push(nodes[u].nxt[i]);
                else nodes[u].nxt[i] = nodes[nodes[u].link].nxt[i];
            }
        }
        vis.resize(nodes.size());
    }

    void match(string& s, int k) {
        int u = 0;
        for (char ch : s) {
            int c = remap(ch);
            u = nodes[u].nxt[c];
            for(int cur = u; cur != 0; cur = nodes[cur].link) {
                if(nodes[cur].str_idx != -1 and nodes[cur].str_idx != k) {
                    dp[k] = max(dp[k], dp[nodes[cur].str_idx] + 1);
                    break;
                }
            }
        }
    }
};

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    //freopen(""in.txt"", ""r"", stdin);
    //freopen(""output.txt"", ""w"", stdout);
    auto start = chrono::high_resolution_clock::now();
    int n;
    while(cin >> n) {
        if(!n) break;
        Aho<26> aho;
        for(int i = 0; i < n; i++) {
            dp[i] = 1;
            cin >> v[i];
        }
        sort(v, v + n, [](string &a, string &b) {
            return a.size() < b.size();
        });
        for(int i = 0; i < n; i++) {
            aho.add(v[i]);
        }
        aho.build();
        int ans = 0;
        for(int i = 0; i < n; i++) {
            aho.match(v[i], i);
            ans = max(ans, dp[i]);
        }
        cout << ans << ""\n"";
    }
    auto stop = chrono::high_resolution_clock::now();
    cerr << chrono::duration_cast<chrono::milliseconds>(stop - start).count() << ""\n"";
    return 0;
}"
g8sje5QZ,Nigerian scammers [22-6-2/2023],bombaires,HTML,Thursday 22nd of June 2023 11:32:41 AM CDT,"<a href=""mailto:inquiries@vendors-aramco.com"">inquiries@vendors-aramco.com</a>
<a href=""mailto:raymonddafters@gmail.com"">raymonddafters@gmail.com</a>
<a href=""mailto:ra.y.mon.dda.f.t.e.r.s@gmail.com"">ra.y.mon.dda.f.t.e.r.s@gmail.com</a>
<a href=""mailto:r.a.y.mondd.af.ters@gmail.com"">r.a.y.mondd.af.ters@gmail.com</a>
<a href=""mailto:ray.mon.dda.fters@gmail.com"">ray.mon.dda.fters@gmail.com</a>
<a href=""mailto:ra.y.mond.da.f.te.rs@gmail.com"">ra.y.mond.da.f.te.rs@gmail.com</a>
<a href=""mailto:r.a.y.m.o.n.ddaf.te.r.s@gmail.com"">r.a.y.m.o.n.ddaf.te.r.s@gmail.com</a>
<a href=""mailto:ra.ymo.ndd.a.f.te.rs@gmail.com"">ra.ymo.ndd.a.f.te.rs@gmail.com</a>
<a href=""mailto:r.a.y.mon.d.d.a.fte.rs@gmail.com"">r.a.y.mon.d.d.a.fte.rs@gmail.com</a>
<a href=""mailto:r.a.y.m.o.nd.d.a.f.t.ers@gmail.com"">r.a.y.m.o.nd.d.a.f.t.ers@gmail.com</a>
<a href=""mailto:r.a.y.mo.n.dd.af.t.e.r.s@gmail.com"">r.a.y.mo.n.dd.af.t.e.r.s@gmail.com</a>
<a href=""mailto:r.ay.m.o.nd.d.a.f.ter.s@gmail.com"">r.ay.m.o.nd.d.a.f.ter.s@gmail.com</a>
<a href=""mailto:ra.ym.on.ddaf.te.rs@gmail.com"">ra.ym.on.ddaf.te.rs@gmail.com</a>
<a href=""mailto:raym.ond.d.a.ft.e.r.s@gmail.com"">raym.ond.d.a.ft.e.r.s@gmail.com</a>
<a href=""mailto:raym.o.nd.daft.e.r.s@gmail.com"">raym.o.nd.daft.e.r.s@gmail.com</a>
<a href=""mailto:ra.ymondda.f.t.e.rs@gmail.com"">ra.ymondda.f.t.e.rs@gmail.com</a>
<a href=""mailto:ray.mo.ndda.f.t.e.r.s@gmail.com"">ray.mo.ndda.f.t.e.r.s@gmail.com</a>
<a href=""mailto:r.aymo.n.d.daft.er.s@gmail.com"">r.aymo.n.d.daft.er.s@gmail.com</a>
<a href=""mailto:r.aymon.dd.aft.ers@gmail.com"">r.aymon.dd.aft.ers@gmail.com</a>
<a href=""mailto:r.a.y.mo.n.d.daft.ers@gmail.com"">r.a.y.mo.n.d.daft.ers@gmail.com</a>
<a href=""mailto:r.a.ym.ond.da.f.t.e.rs@gmail.com"">r.a.ym.ond.da.f.t.e.rs@gmail.com</a>
<a href=""mailto:r.a.ym.ondd.a.ft.er.s@gmail.com"">r.a.ym.ondd.a.ft.er.s@gmail.com</a>
<a href=""mailto:ra.ym.on.d.da.ft.ers@gmail.com"">ra.ym.on.d.da.ft.ers@gmail.com</a>
<a href=""mailto:r.a.y.m.ond.d.a.fter.s@gmail.com"">r.a.y.m.ond.d.a.fter.s@gmail.com</a>
<a href=""mailto:r.a.y.mon.d.daf.te.r.s@gmail.com"">r.a.y.mon.d.daf.te.r.s@gmail.com</a>
<a href=""mailto:raymondd.af.te.r.s@gmail.com"">raymondd.af.te.r.s@gmail.com</a>
<a href=""mailto:ray.mondd.aft.e.r.s@gmail.com"">ray.mondd.aft.e.r.s@gmail.com</a>
<a href=""mailto:r.ay.m.o.nd.da.ft.e.r.s@gmail.com"">r.ay.m.o.nd.da.ft.e.r.s@gmail.com</a>
<a href=""mailto:ra.ym.o.nddaft.e.rs@gmail.com"">ra.ym.o.nddaft.e.rs@gmail.com</a>
<a href=""mailto:raymo.n.d.dafter.s@gmail.com"">raymo.n.d.dafter.s@gmail.com</a>
<a href=""mailto:r.aymon.d.daf.t.er.s@gmail.com"">r.aymon.d.daf.t.er.s@gmail.com</a>
<a href=""mailto:r.a.ym.onddafter.s@gmail.com"">r.a.ym.onddafter.s@gmail.com</a>
<a href=""mailto:r.a.ymon.d.da.ft.e.r.s@gmail.com"">r.a.ymon.d.da.ft.e.r.s@gmail.com</a>
<a href=""mailto:r.a.ymon.d.da.ft.ers@gmail.com"">r.a.ymon.d.da.ft.ers@gmail.com</a>
<a href=""mailto:ra.y.m.o.n.dda.f.t.er.s@gmail.com"">ra.y.m.o.n.dda.f.t.er.s@gmail.com</a>
<a href=""mailto:ra.ymo.n.dda.f.t.er.s@gmail.com"">ra.ymo.n.dda.f.t.er.s@gmail.com</a>
<a href=""mailto:r.ay.m.ondda.f.ters@gmail.com"">r.ay.m.ondda.f.ters@gmail.com</a>
<a href=""mailto:r.ay.m.ond.d.af.ter.s@gmail.com"">r.ay.m.ond.d.af.ter.s@gmail.com</a>
<a href=""mailto:ray.mond.daft.e.r.s@gmail.com"">ray.mond.daft.e.r.s@gmail.com</a>
<a href=""mailto:ray.m.onddaft.e.rs@gmail.com"">ray.m.onddaft.e.rs@gmail.com</a>
<a href=""mailto:ray.mo.nddaft.e.rs@gmail.com"">ray.mo.nddaft.e.rs@gmail.com</a>
<a href=""mailto:ray.mo.ndda.ft.er.s@gmail.com"">ray.mo.ndda.ft.er.s@gmail.com</a>
<a href=""mailto:ray.m.ond.daf.ters@gmail.com"">ray.m.ond.daf.ters@gmail.com</a>
<a href=""mailto:raym.o.nd.d.aft.er.s@gmail.com"">raym.o.nd.d.aft.er.s@gmail.com</a>
<a href=""mailto:r.aym.o.n.dda.f.t.ers@gmail.com"">r.aym.o.n.dda.f.t.ers@gmail.com</a>
<a href=""mailto:r.a.ymon.d.daf.t.ers@gmail.com"">r.a.ymon.d.daf.t.ers@gmail.com</a>
<a href=""mailto:ra.ymo.ndda.ft.ers@gmail.com"">ra.ymo.ndda.ft.ers@gmail.com</a>
<a href=""mailto:r.aymo.nd.dafter.s@gmail.com"">r.aymo.nd.dafter.s@gmail.com</a>
<a href=""mailto:r.aym.on.d.daft.ers@gmail.com"">r.aym.on.d.daft.ers@gmail.com</a>
<a href=""mailto:r.ay.m.on.ddafte.r.s@gmail.com"">r.ay.m.on.ddafte.r.s@gmail.com</a>
<a href=""mailto:r.aymo.nd.d.a.f.t.e.r.s@gmail.com"">r.aymo.nd.d.a.f.t.e.r.s@gmail.com</a>
<a href=""mailto:r.aym.o.nd.dafters@gmail.com"">r.aym.o.nd.dafters@gmail.com</a>
<a href=""mailto:r.a.y.m.onddaf.ters@gmail.com"">r.a.y.m.onddaf.ters@gmail.com</a>
<a href=""mailto:ra.ym.o.ndda.f.t.ers@gmail.com"">ra.ym.o.ndda.f.t.ers@gmail.com</a>
<a href=""mailto:ray.m.o.n.dd.af.te.r.s@gmail.com"">ray.m.o.n.dd.af.te.r.s@gmail.com</a>
<a href=""mailto:r.a.ym.o.ndda.f.t.e.r.s@gmail.com"">r.a.ym.o.ndda.f.t.e.r.s@gmail.com</a>
<a href=""mailto:raym.o.nd.d.after.s@gmail.com"">raym.o.nd.d.after.s@gmail.com</a>
<a href=""mailto:ra.y.m.o.nddaf.t.e.r.s@gmail.com"">ra.y.m.o.nddaf.t.e.r.s@gmail.com</a>
<a href=""mailto:ray.mon.d.da.fte.rs@gmail.com"">ray.mon.d.da.fte.rs@gmail.com</a>
<a href=""mailto:ra.ym.o.n.dd.af.te.r.s@gmail.com"">ra.ym.o.n.dd.af.te.r.s@gmail.com</a>
<a href=""mailto:r.a.ym.ond.daf.t.e.r.s@gmail.com"">r.a.ym.ond.daf.t.e.r.s@gmail.com</a>
<a href=""mailto:ra.y.m.ondda.f.t.ers@gmail.com"">ra.y.m.ondda.f.t.ers@gmail.com</a>
<a href=""mailto:ray.mo.nd.da.f.t.ers@gmail.com"">ray.mo.nd.da.f.t.ers@gmail.com</a>
<a href=""mailto:ra.y.m.o.ndd.a.f.t.e.rs@gmail.com"">ra.y.m.o.ndd.a.f.t.e.rs@gmail.com</a>
<a href=""mailto:ray.mon.d.d.aft.e.r.s@gmail.com"">ray.mon.d.d.aft.e.r.s@gmail.com</a>
<a href=""mailto:r.a.y.mon.d.d.a.f.t.e.r.s@gmail.com"">r.a.y.mon.d.d.a.f.t.e.r.s@gmail.com</a>
<a href=""mailto:r.a.y.m.onddaft.ers@gmail.com"">r.a.y.m.onddaft.ers@gmail.com</a>
<a href=""mailto:r.a.ym.on.dd.a.f.te.r.s@gmail.com"">r.a.ym.on.dd.a.f.te.r.s@gmail.com</a>
<a href=""mailto:r.aymondd.a.fte.rs@gmail.com"">r.aymondd.a.fte.rs@gmail.com</a>
<a href=""mailto:r.a.y.m.o.n.d.daft.ers@gmail.com"">r.a.y.m.o.n.d.daft.ers@gmail.com</a>
<a href=""mailto:raymo.n.d.d.af.ter.s@gmail.com"">raymo.n.d.d.af.ter.s@gmail.com</a>
<a href=""mailto:ra.y.m.ond.d.a.ft.e.rs@gmail.com"">ra.y.m.ond.d.a.ft.e.rs@gmail.com</a>
<a href=""mailto:r.a.y.m.on.dd.a.f.t.ers@gmail.com"">r.a.y.m.on.dd.a.f.t.ers@gmail.com</a>
<a href=""mailto:r.ay.m.ondda.ft.ers@gmail.com"">r.ay.m.ondda.ft.ers@gmail.com</a>
<a href=""mailto:ra.y.mo.n.d.d.af.t.ers@gmail.com"">ra.y.mo.n.d.d.af.t.ers@gmail.com</a>
<a href=""mailto:r.aymondd.a.ft.e.rs@gmail.com"">r.aymondd.a.ft.e.rs@gmail.com</a>
<a href=""mailto:r.aymon.dda.ft.e.rs@gmail.com"">r.aymon.dda.ft.e.rs@gmail.com</a>
<a href=""mailto:r.a.ymond.da.fte.r.s@gmail.com"">r.a.ymond.da.fte.r.s@gmail.com</a>
<a href=""mailto:ra.ym.ond.da.f.t.e.r.s@gmail.com"">ra.ym.ond.da.f.t.e.r.s@gmail.com</a>
<a href=""mailto:r.a.ym.o.n.d.d.a.f.ters@gmail.com"">r.a.ym.o.n.d.d.a.f.ters@gmail.com</a>
<a href=""mailto:r.aymon.d.d.a.ft.ers@gmail.com"">r.aymon.d.d.a.ft.ers@gmail.com</a>
<a href=""mailto:r.aym.o.n.dd.a.f.te.rs@gmail.com"">r.aym.o.n.dd.a.f.te.rs@gmail.com</a>
<a href=""mailto:r.a.ymo.n.d.da.f.t.e.r.s@gmail.com"">r.a.ymo.n.d.da.f.t.e.r.s@gmail.com</a>
<a href=""mailto:r.a.ymonddaft.e.rs@gmail.com"">r.a.ymonddaft.e.rs@gmail.com</a>
<a href=""mailto:r.ay.mo.nddaf.ter.s@gmail.com"">r.ay.mo.nddaf.ter.s@gmail.com</a>
<a href=""mailto:r.aymo.n.ddafte.r.s@gmail.com"">r.aymo.n.ddafte.r.s@gmail.com</a>
<a href=""mailto:ray.mo.nd.da.f.t.e.r.s@gmail.com"">ray.mo.nd.da.f.t.e.r.s@gmail.com</a>
<a href=""mailto:ra.y.mon.dd.aft.er.s@gmail.com"">ra.y.mon.dd.aft.er.s@gmail.com</a>
<a href=""mailto:r.aymo.nd.d.a.ft.ers@gmail.com"">r.aymo.nd.d.a.ft.ers@gmail.com</a>
<a href=""mailto:r.aym.ond.d.a.f.t.er.s@gmail.com"">r.aym.ond.d.a.f.t.er.s@gmail.com</a>
<a href=""mailto:raym.o.ndd.aft.ers@gmail.com"">raym.o.ndd.aft.ers@gmail.com</a>
<a href=""mailto:ray.mo.nddaf.t.e.rs@gmail.com"">ray.mo.nddaf.t.e.rs@gmail.com</a>
<a href=""mailto:raymond.d.af.te.r.s@gmail.com"">raymond.d.af.te.r.s@gmail.com</a>
<a href=""mailto:r.a.y.m.o.nd.da.fte.r.s@gmail.com"">r.a.y.m.o.nd.da.fte.r.s@gmail.com</a>
<a href=""mailto:ray.m.o.ndd.a.f.ter.s@gmail.com"">ray.m.o.ndd.a.f.ter.s@gmail.com</a>
<a href=""mailto:r.aymo.n.dd.af.ters@gmail.com"">r.aymo.n.dd.af.ters@gmail.com</a>
<a href=""mailto:ra.y.mon.ddafte.r.s@gmail.com"">ra.y.mon.ddafte.r.s@gmail.com</a>
<a href=""mailto:r.aymon.dd.a.ft.e.r.s@gmail.com"">r.aymon.dd.a.ft.e.r.s@gmail.com</a>
<a href=""mailto:ray.mon.d.d.a.ft.e.rs@gmail.com"">ray.mon.d.d.a.ft.e.rs@gmail.com</a>
<a href=""mailto:ra.ymond.da.f.te.r.s@gmail.com"">ra.ymond.da.f.te.r.s@gmail.com</a>
<a href=""mailto:r.a.y.m.o.ndda.fte.r.s@gmail.com"">r.a.y.m.o.ndda.fte.r.s@gmail.com</a>
<a href=""mailto:ray.mon.d.da.ft.er.s@gmail.com"">ray.mon.d.da.ft.er.s@gmail.com</a>
<a href=""mailto:r.ay.m.o.n.dd.a.ft.er.s@gmail.com"">r.ay.m.o.n.dd.a.ft.er.s@gmail.com</a>
<a href=""mailto:ra.y.m.o.ndda.f.te.rs@gmail.com"">ra.y.m.o.ndda.f.te.rs@gmail.com</a>
<a href=""mailto:r.ay.mond.daf.t.er.s@gmail.com"">r.ay.mond.daf.t.er.s@gmail.com</a>
<a href=""mailto:ra.y.mon.d.daf.te.rs@gmail.com"">ra.y.mon.d.daf.te.rs@gmail.com</a>
<a href=""mailto:r.a.ymo.n.d.d.a.fters@gmail.com"">r.a.ymo.n.d.d.a.fters@gmail.com</a>
<a href=""mailto:r.ay.mondda.ft.e.rs@gmail.com"">r.ay.mondda.ft.e.rs@gmail.com</a>
<a href=""mailto:ra.y.mo.n.dd.a.ft.e.r.s@gmail.com"">ra.y.mo.n.dd.a.ft.e.r.s@gmail.com</a>
<a href=""mailto:raym.on.d.d.a.ft.e.rs@gmail.com"">raym.on.d.d.a.ft.e.rs@gmail.com</a>
<a href=""mailto:ra.ymo.nddaf.te.r.s@gmail.com"">ra.ymo.nddaf.te.r.s@gmail.com</a>
<a href=""mailto:r.a.y.m.o.nd.d.af.ter.s@gmail.com"">r.a.y.m.o.nd.d.af.ter.s@gmail.com</a>
<a href=""mailto:raymo.ndda.f.t.ers@gmail.com"">raymo.ndda.f.t.ers@gmail.com</a>
<a href=""mailto:raym.o.ndda.f.te.r.s@gmail.com"">raym.o.ndda.f.te.r.s@gmail.com</a>
<a href=""mailto:r.a.ym.on.d.d.aft.ers@gmail.com"">r.a.ym.on.d.d.aft.ers@gmail.com</a>
<a href=""mailto:r.ay.mo.n.dd.af.t.e.r.s@gmail.com"">r.ay.mo.n.dd.af.t.e.r.s@gmail.com</a>
<a href=""mailto:r.a.y.mo.ndd.af.te.rs@gmail.com"">r.a.y.mo.ndd.af.te.rs@gmail.com</a>
<a href=""mailto:raymond.da.ft.ers@gmail.com"">raymond.da.ft.ers@gmail.com</a>
<a href=""mailto:ra.y.m.o.ndd.a.f.ters@gmail.com"">ra.y.m.o.ndd.a.f.ters@gmail.com</a>
<a href=""mailto:ra.ym.ondda.fter.s@gmail.com"">ra.ym.ondda.fter.s@gmail.com</a>
<a href=""mailto:r.a.ym.o.ndd.a.ft.e.r.s@gmail.com"">r.a.ym.o.ndd.a.ft.e.r.s@gmail.com</a>
<a href=""mailto:raymo.n.d.daf.te.rs@gmail.com"">raymo.n.d.daf.te.rs@gmail.com</a>
<a href=""mailto:r.ay.mo.nd.d.a.ft.er.s@gmail.com"">r.ay.mo.nd.d.a.ft.er.s@gmail.com</a>
<a href=""mailto:r.ay.mo.n.dd.a.fte.r.s@gmail.com"">r.ay.mo.n.dd.a.fte.r.s@gmail.com</a>
<a href=""mailto:r.a.y.mondd.a.fter.s@gmail.com"">r.a.y.mondd.a.fter.s@gmail.com</a>
<a href=""mailto:r.ay.mo.n.d.d.afte.r.s@gmail.com"">r.ay.mo.n.d.d.afte.r.s@gmail.com</a>
<a href=""mailto:r.a.ym.on.d.da.f.te.rs@gmail.com"">r.a.ym.on.d.da.f.te.rs@gmail.com</a>
<a href=""mailto:ra.ymonddaf.t.ers@gmail.com"">ra.ymonddaf.t.ers@gmail.com</a>
<a href=""mailto:ra.y.m.o.ndd.a.f.t.er.s@gmail.com"">ra.y.m.o.ndd.a.f.t.er.s@gmail.com</a>
<a href=""mailto:r.ay.mo.nd.daf.te.r.s@gmail.com"">r.ay.mo.nd.daf.te.r.s@gmail.com</a>
<a href=""mailto:r.a.ymond.d.a.ft.er.s@gmail.com"">r.a.ymond.d.a.ft.er.s@gmail.com</a>
<a href=""mailto:r.a.y.m.on.d.d.a.ft.er.s@gmail.com"">r.a.y.m.on.d.d.a.ft.er.s@gmail.com</a>
<a href=""mailto:ra.y.m.on.d.d.a.fters@gmail.com"">ra.y.m.on.d.d.a.fters@gmail.com</a>
<a href=""mailto:ra.y.m.ond.daft.e.r.s@gmail.com"">ra.y.m.ond.daft.e.r.s@gmail.com</a>
<a href=""mailto:ra.y.mon.d.d.a.f.t.ers@gmail.com"">ra.y.mon.d.d.a.f.t.ers@gmail.com</a>
<a href=""mailto:ra.ym.o.n.dd.a.f.ters@gmail.com"">ra.ym.o.n.dd.a.f.ters@gmail.com</a>
<a href=""mailto:r.a.ym.on.dda.f.ters@gmail.com"">r.a.ym.on.dda.f.ters@gmail.com</a>
<a href=""mailto:r.a.ym.o.ndd.af.ters@gmail.com"">r.a.ym.o.ndd.af.ters@gmail.com</a>
<a href=""mailto:r.a.y.mon.d.d.af.t.ers@gmail.com"">r.a.y.mon.d.d.af.t.ers@gmail.com</a>
<a href=""mailto:ra.ymondd.aft.er.s@gmail.com"">ra.ymondd.aft.er.s@gmail.com</a>
<a href=""mailto:r.aymon.d.d.af.te.r.s@gmail.com"">r.aymon.d.d.af.te.r.s@gmail.com</a>
<a href=""mailto:r.ay.mo.ndda.f.t.er.s@gmail.com"">r.ay.mo.ndda.f.t.er.s@gmail.com</a>
<a href=""mailto:r.a.ym.o.nd.d.a.fter.s@gmail.com"">r.a.ym.o.nd.d.a.fter.s@gmail.com</a>
<a href=""mailto:ray.m.o.nd.dafte.rs@gmail.com"">ray.m.o.nd.dafte.rs@gmail.com</a>
<a href=""mailto:r.aym.on.d.da.ft.e.rs@gmail.com"">r.aym.on.d.da.ft.e.rs@gmail.com</a>
<a href=""mailto:ra.ym.ond.dafters@gmail.com"">ra.ym.ond.dafters@gmail.com</a>
<a href=""mailto:r.ay.m.o.ndd.afte.rs@gmail.com"">r.ay.m.o.ndd.afte.rs@gmail.com</a>
<a href=""mailto:r.a.ymonddaf.t.er.s@gmail.com"">r.a.ymonddaf.t.er.s@gmail.com</a>
<a href=""mailto:r.aym.on.dd.aft.e.r.s@gmail.com"">r.aym.on.dd.aft.e.r.s@gmail.com</a>
<a href=""mailto:r.aymon.d.d.a.fter.s@gmail.com"">r.aymon.d.d.a.fter.s@gmail.com</a>
<a href=""mailto:ra.ymo.nddaft.e.r.s@gmail.com"">ra.ymo.nddaft.e.r.s@gmail.com</a>
<a href=""mailto:r.a.ym.o.n.d.d.af.te.rs@gmail.com"">r.a.ym.o.n.d.d.af.te.rs@gmail.com</a>
<a href=""mailto:ra.ymon.d.daf.te.r.s@gmail.com"">ra.ymon.d.daf.te.r.s@gmail.com</a>
<a href=""mailto:ra.y.m.o.nd.dafters@gmail.com"">ra.y.m.o.nd.dafters@gmail.com</a>
<a href=""mailto:r.a.ymo.n.d.dafte.rs@gmail.com"">r.a.ymo.n.d.dafte.rs@gmail.com</a>
<a href=""mailto:ra.y.m.on.dd.a.f.te.r.s@gmail.com"">ra.y.m.on.dd.a.f.te.r.s@gmail.com</a>
<a href=""mailto:ra.ym.o.n.d.d.a.f.t.e.r.s@gmail.com"">ra.ym.o.n.d.d.a.f.t.e.r.s@gmail.com</a>
<a href=""mailto:r.aym.on.d.d.a.fters@gmail.com"">r.aym.on.d.d.a.fters@gmail.com</a>
<a href=""mailto:raym.ondda.fte.r.s@gmail.com"">raym.ondda.fte.r.s@gmail.com</a>
<a href=""mailto:ray.mon.d.da.f.t.ers@gmail.com"">ray.mon.d.da.f.t.ers@gmail.com</a>
<a href=""mailto:r.aym.ond.d.a.f.ters@gmail.com"">r.aym.ond.d.a.f.ters@gmail.com</a>
<a href=""mailto:ra.y.m.ond.daf.t.e.r.s@gmail.com"">ra.y.m.ond.daf.t.e.r.s@gmail.com</a>
<a href=""mailto:r.ay.m.ondd.a.ft.ers@gmail.com"">r.ay.m.ondd.a.ft.ers@gmail.com</a>
<a href=""mailto:ra.ymo.n.dd.a.f.te.rs@gmail.com"">ra.ymo.n.dd.a.f.te.rs@gmail.com</a>
<a href=""mailto:r.a.y.m.on.dda.f.t.e.rs@gmail.com"">r.a.y.m.on.dda.f.t.e.rs@gmail.com</a>
<a href=""mailto:r.a.y.m.ond.d.a.f.ter.s@gmail.com"">r.a.y.m.ond.d.a.f.ter.s@gmail.com</a>
<a href=""mailto:r.a.y.mo.n.d.da.f.t.e.r.s@gmail.com"">r.a.y.mo.n.d.da.f.t.e.r.s@gmail.com</a>
<a href=""mailto:raym.o.ndd.a.f.t.er.s@gmail.com"">raym.o.ndd.a.f.t.er.s@gmail.com</a>
<a href=""mailto:ra.ym.on.d.d.aft.er.s@gmail.com"">ra.ym.on.d.d.aft.er.s@gmail.com</a>
<a href=""mailto:r.a.y.m.o.n.dda.f.t.er.s@gmail.com"">r.a.y.m.o.n.dda.f.t.er.s@gmail.com</a>
<a href=""mailto:r.a.ymon.dd.a.f.t.e.r.s@gmail.com"">r.a.ymon.dd.a.f.t.e.r.s@gmail.com</a>
<a href=""mailto:ra.y.m.on.d.da.ft.e.r.s@gmail.com"">ra.y.m.on.d.da.ft.e.r.s@gmail.com</a>
<a href=""mailto:ra.y.mo.n.ddafters@gmail.com"">ra.y.mo.n.ddafters@gmail.com</a>
<a href=""mailto:r.a.ym.o.n.dda.f.t.e.rs@gmail.com"">r.a.ym.o.n.dda.f.t.e.rs@gmail.com</a>
<a href=""mailto:raym.on.d.daft.e.rs@gmail.com"">raym.on.d.daft.e.rs@gmail.com</a>
<a href=""mailto:r.ay.mo.n.d.dafter.s@gmail.com"">r.ay.mo.n.d.dafter.s@gmail.com</a>
<a href=""mailto:r.ay.m.ond.daf.t.e.r.s@gmail.com"">r.ay.m.ond.daf.t.e.r.s@gmail.com</a>
<a href=""mailto:r.ay.monddafte.rs@gmail.com"">r.ay.monddafte.rs@gmail.com</a>
<a href=""mailto:r.aym.o.n.d.daft.e.rs@gmail.com"">r.aym.o.n.d.daft.e.rs@gmail.com</a>
<a href=""mailto:ra.y.mond.d.af.t.er.s@gmail.com"">ra.y.mond.d.af.t.er.s@gmail.com</a>
<a href=""mailto:ra.y.mon.dda.f.ter.s@gmail.com"">ra.y.mon.dda.f.ter.s@gmail.com</a>
<a href=""mailto:r.aymon.ddaf.t.e.r.s@gmail.com"">r.aymon.ddaf.t.e.r.s@gmail.com</a>
<a href=""mailto:ra.ym.on.dd.a.f.te.rs@gmail.com"">ra.ym.on.dd.a.f.te.rs@gmail.com</a>
<a href=""mailto:ray.m.o.ndd.a.f.ters@gmail.com"">ray.m.o.ndd.a.f.ters@gmail.com</a>
<a href=""mailto:r.a.y.mo.nd.dafter.s@gmail.com"">r.a.y.mo.nd.dafter.s@gmail.com</a>
<a href=""mailto:r.a.y.m.ond.d.a.f.t.ers@gmail.com"">r.a.y.m.ond.d.a.f.t.ers@gmail.com</a>
<a href=""mailto:ra.ymo.n.d.dafte.rs@gmail.com"">ra.ymo.n.d.dafte.rs@gmail.com</a>
<a href=""mailto:r.a.ymo.n.d.da.f.te.r.s@gmail.com"">r.a.ymo.n.d.da.f.te.r.s@gmail.com</a>
<a href=""mailto:r.ay.mond.da.f.te.rs@gmail.com"">r.ay.mond.da.f.te.rs@gmail.com</a>
<a href=""mailto:ra.ymo.nd.d.afte.rs@gmail.com"">ra.ymo.nd.d.afte.rs@gmail.com</a>
<a href=""mailto:raymon.d.da.fters@gmail.com"">raymon.d.da.fters@gmail.com</a>
<a href=""mailto:r.aymo.n.dda.fter.s@gmail.com"">r.aymo.n.dda.fter.s@gmail.com</a>
<a href=""mailto:r.aymo.n.dd.a.ft.ers@gmail.com"">r.aymo.n.dd.a.ft.ers@gmail.com</a>
<a href=""mailto:r.ay.m.ond.daft.e.r.s@gmail.com"">r.ay.m.ond.daft.e.r.s@gmail.com</a>
<a href=""mailto:ray.m.on.d.da.ft.e.rs@gmail.com"">ray.m.on.d.da.ft.e.rs@gmail.com</a>
<a href=""mailto:r.a.y.mo.n.d.da.f.ter.s@gmail.com"">r.a.y.mo.n.d.da.f.ter.s@gmail.com</a>
<a href=""mailto:raymo.nd.da.f.ters@gmail.com"">raymo.nd.da.f.ters@gmail.com</a>
<a href=""mailto:ra.y.mond.d.a.f.t.ers@gmail.com"">ra.y.mond.d.a.f.t.ers@gmail.com</a>
<a href=""mailto:r.a.y.mon.dd.a.f.t.e.rs@gmail.com"">r.a.y.mon.dd.a.f.t.e.rs@gmail.com</a>
<a href=""mailto:ray.m.o.n.d.da.fte.r.s@gmail.com"">ray.m.o.n.d.da.fte.r.s@gmail.com</a>
<a href=""mailto:raymo.nd.da.f.te.rs@gmail.com"">raymo.nd.da.f.te.rs@gmail.com</a>
<a href=""mailto:ray.m.ondda.f.ters@gmail.com"">ray.m.ondda.f.ters@gmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson@googlemail.com"">keystoneb.jeffwilkinson@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+2974@googlemail.com"">keystoneb.jeffwilkinson+2974@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+8566@googlemail.com"">keystoneb.jeffwilkinson+8566@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+20273@googlemail.com"">keystoneb.jeffwilkinson+20273@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+1430@googlemail.com"">keystoneb.jeffwilkinson+1430@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+11034@googlemail.com"">keystoneb.jeffwilkinson+11034@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+31195@googlemail.com"">keystoneb.jeffwilkinson+31195@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+15667@googlemail.com"">keystoneb.jeffwilkinson+15667@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+21825@googlemail.com"">keystoneb.jeffwilkinson+21825@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+15258@googlemail.com"">keystoneb.jeffwilkinson+15258@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+28204@googlemail.com"">keystoneb.jeffwilkinson+28204@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+24358@googlemail.com"">keystoneb.jeffwilkinson+24358@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+21431@googlemail.com"">keystoneb.jeffwilkinson+21431@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+16312@googlemail.com"">keystoneb.jeffwilkinson+16312@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+10163@googlemail.com"">keystoneb.jeffwilkinson+10163@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+10354@googlemail.com"">keystoneb.jeffwilkinson+10354@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+7374@googlemail.com"">keystoneb.jeffwilkinson+7374@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+1239@googlemail.com"">keystoneb.jeffwilkinson+1239@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+10383@googlemail.com"">keystoneb.jeffwilkinson+10383@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+7159@googlemail.com"">keystoneb.jeffwilkinson+7159@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+5553@googlemail.com"">keystoneb.jeffwilkinson+5553@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+26176@googlemail.com"">keystoneb.jeffwilkinson+26176@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+29363@googlemail.com"">keystoneb.jeffwilkinson+29363@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+23276@googlemail.com"">keystoneb.jeffwilkinson+23276@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+31035@googlemail.com"">keystoneb.jeffwilkinson+31035@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+18535@googlemail.com"">keystoneb.jeffwilkinson+18535@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+9395@googlemail.com"">keystoneb.jeffwilkinson+9395@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+4038@googlemail.com"">keystoneb.jeffwilkinson+4038@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+2597@googlemail.com"">keystoneb.jeffwilkinson+2597@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+6389@googlemail.com"">keystoneb.jeffwilkinson+6389@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+27643@googlemail.com"">keystoneb.jeffwilkinson+27643@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+32764@googlemail.com"">keystoneb.jeffwilkinson+32764@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+8939@googlemail.com"">keystoneb.jeffwilkinson+8939@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+29313@googlemail.com"">keystoneb.jeffwilkinson+29313@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+4413@googlemail.com"">keystoneb.jeffwilkinson+4413@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+6453@googlemail.com"">keystoneb.jeffwilkinson+6453@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+10308@googlemail.com"">keystoneb.jeffwilkinson+10308@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+8837@googlemail.com"">keystoneb.jeffwilkinson+8837@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+31956@googlemail.com"">keystoneb.jeffwilkinson+31956@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+16985@googlemail.com"">keystoneb.jeffwilkinson+16985@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+7415@googlemail.com"">keystoneb.jeffwilkinson+7415@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+20136@googlemail.com"">keystoneb.jeffwilkinson+20136@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+23235@googlemail.com"">keystoneb.jeffwilkinson+23235@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+3474@googlemail.com"">keystoneb.jeffwilkinson+3474@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+23048@googlemail.com"">keystoneb.jeffwilkinson+23048@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+16541@googlemail.com"">keystoneb.jeffwilkinson+16541@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+28863@googlemail.com"">keystoneb.jeffwilkinson+28863@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+19407@googlemail.com"">keystoneb.jeffwilkinson+19407@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+6761@googlemail.com"">keystoneb.jeffwilkinson+6761@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+24368@googlemail.com"">keystoneb.jeffwilkinson+24368@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+19239@googlemail.com"">keystoneb.jeffwilkinson+19239@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+1859@googlemail.com"">keystoneb.jeffwilkinson+1859@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+349@googlemail.com"">keystoneb.jeffwilkinson+349@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+4068@googlemail.com"">keystoneb.jeffwilkinson+4068@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+4111@googlemail.com"">keystoneb.jeffwilkinson+4111@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+11680@googlemail.com"">keystoneb.jeffwilkinson+11680@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+15087@googlemail.com"">keystoneb.jeffwilkinson+15087@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+19145@googlemail.com"">keystoneb.jeffwilkinson+19145@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+2044@googlemail.com"">keystoneb.jeffwilkinson+2044@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+17630@googlemail.com"">keystoneb.jeffwilkinson+17630@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+29558@googlemail.com"">keystoneb.jeffwilkinson+29558@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+15634@googlemail.com"">keystoneb.jeffwilkinson+15634@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+23420@googlemail.com"">keystoneb.jeffwilkinson+23420@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+9833@googlemail.com"">keystoneb.jeffwilkinson+9833@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+18125@googlemail.com"">keystoneb.jeffwilkinson+18125@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+17384@googlemail.com"">keystoneb.jeffwilkinson+17384@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+31236@googlemail.com"">keystoneb.jeffwilkinson+31236@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+19477@googlemail.com"">keystoneb.jeffwilkinson+19477@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+8037@googlemail.com"">keystoneb.jeffwilkinson+8037@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+24112@googlemail.com"">keystoneb.jeffwilkinson+24112@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+12039@googlemail.com"">keystoneb.jeffwilkinson+12039@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+12461@googlemail.com"">keystoneb.jeffwilkinson+12461@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+9758@googlemail.com"">keystoneb.jeffwilkinson+9758@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+32418@googlemail.com"">keystoneb.jeffwilkinson+32418@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+19514@googlemail.com"">keystoneb.jeffwilkinson+19514@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+20602@googlemail.com"">keystoneb.jeffwilkinson+20602@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+2413@googlemail.com"">keystoneb.jeffwilkinson+2413@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+4865@googlemail.com"">keystoneb.jeffwilkinson+4865@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+10118@googlemail.com"">keystoneb.jeffwilkinson+10118@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+3192@googlemail.com"">keystoneb.jeffwilkinson+3192@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+18373@googlemail.com"">keystoneb.jeffwilkinson+18373@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+26387@googlemail.com"">keystoneb.jeffwilkinson+26387@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+17866@googlemail.com"">keystoneb.jeffwilkinson+17866@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+5505@googlemail.com"">keystoneb.jeffwilkinson+5505@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+11799@googlemail.com"">keystoneb.jeffwilkinson+11799@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+17021@googlemail.com"">keystoneb.jeffwilkinson+17021@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+9476@googlemail.com"">keystoneb.jeffwilkinson+9476@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+7821@googlemail.com"">keystoneb.jeffwilkinson+7821@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+469@googlemail.com"">keystoneb.jeffwilkinson+469@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+20594@googlemail.com"">keystoneb.jeffwilkinson+20594@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+21968@googlemail.com"">keystoneb.jeffwilkinson+21968@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+4322@googlemail.com"">keystoneb.jeffwilkinson+4322@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+6636@googlemail.com"">keystoneb.jeffwilkinson+6636@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+842@googlemail.com"">keystoneb.jeffwilkinson+842@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+12859@googlemail.com"">keystoneb.jeffwilkinson+12859@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+32184@googlemail.com"">keystoneb.jeffwilkinson+32184@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+17658@googlemail.com"">keystoneb.jeffwilkinson+17658@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+6024@googlemail.com"">keystoneb.jeffwilkinson+6024@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+22213@googlemail.com"">keystoneb.jeffwilkinson+22213@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+13979@googlemail.com"">keystoneb.jeffwilkinson+13979@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson+12019@googlemail.com"">keystoneb.jeffwilkinson+12019@googlemail.com</a>
<a href=""mailto:infohhhh300@gmail.com"">infohhhh300@gmail.com</a>
<a href=""mailto:inf.ohh.hh.30.0@gmail.com"">inf.ohh.hh.30.0@gmail.com</a>
<a href=""mailto:i.n.f.o.h.h.h.h30.0@gmail.com"">i.n.f.o.h.h.h.h30.0@gmail.com</a>
<a href=""mailto:in.fo.hh.hh3.0.0@gmail.com"">in.fo.hh.hh3.0.0@gmail.com</a>
<a href=""mailto:in.foh.hhh.30.0@gmail.com"">in.foh.hhh.30.0@gmail.com</a>
<a href=""mailto:i.n.fo.hhhh30.0@gmail.com"">i.n.fo.hhhh30.0@gmail.com</a>
<a href=""mailto:infohhhh.300@gmail.com"">infohhhh.300@gmail.com</a>
<a href=""mailto:in.fo.hh.hh.30.0@gmail.com"">in.fo.hh.hh.30.0@gmail.com</a>
<a href=""mailto:inf.oh.hhh3.0.0@gmail.com"">inf.oh.hhh3.0.0@gmail.com</a>
<a href=""mailto:in.f.o.hh.h.h3.0.0@gmail.com"">in.f.o.hh.h.h3.0.0@gmail.com</a>
<a href=""mailto:in.fo.hhh.h300@gmail.com"">in.fo.hhh.h300@gmail.com</a>
<a href=""mailto:i.nfo.h.h.h.h.3.0.0@gmail.com"">i.nfo.h.h.h.h.3.0.0@gmail.com</a>
<a href=""mailto:inf.ohh.hh.3.0.0@gmail.com"">inf.ohh.hh.3.0.0@gmail.com</a>
<a href=""mailto:inf.o.h.hh.h.300@gmail.com"">inf.o.h.hh.h.300@gmail.com</a>
<a href=""mailto:inf.ohhhh3.00@gmail.com"">inf.ohhhh3.00@gmail.com</a>
<a href=""mailto:i.n.f.oh.hhh.3.00@gmail.com"">i.n.f.oh.hhh.3.00@gmail.com</a>
<a href=""mailto:i.n.f.o.h.hh.h.3.00@gmail.com"">i.n.f.o.h.hh.h.3.00@gmail.com</a>
<a href=""mailto:in.fo.h.hhh.3.00@gmail.com"">in.fo.h.hhh.3.00@gmail.com</a>
<a href=""mailto:in.f.oh.hh.h3.0.0@gmail.com"">in.f.oh.hh.h3.0.0@gmail.com</a>
<a href=""mailto:i.n.fo.hh.h.h.3.00@gmail.com"">i.n.fo.hh.h.h.3.00@gmail.com</a>
<a href=""mailto:infoh.hhh.300@gmail.com"">infoh.hhh.300@gmail.com</a>
<a href=""mailto:in.f.o.hh.hh30.0@gmail.com"">in.f.o.hh.hh30.0@gmail.com</a>
<a href=""mailto:i.n.fohhhh.300@gmail.com"">i.n.fohhhh.300@gmail.com</a>
<a href=""mailto:i.nfo.h.h.h.h3.0.0@gmail.com"">i.nfo.h.h.h.h3.0.0@gmail.com</a>
<a href=""mailto:in.f.oh.hh.h.300@gmail.com"">in.f.oh.hh.h.300@gmail.com</a>
<a href=""mailto:in.f.ohhhh300@gmail.com"">in.f.ohhhh300@gmail.com</a>
<a href=""mailto:i.n.f.o.h.hh.h300@gmail.com"">i.n.f.o.h.hh.h300@gmail.com</a>
<a href=""mailto:inf.o.hh.hh30.0@gmail.com"">inf.o.hh.hh30.0@gmail.com</a>
<a href=""mailto:in.fo.h.hh.h3.00@gmail.com"">in.fo.h.hh.h3.00@gmail.com</a>
<a href=""mailto:i.n.f.oh.hh.h.30.0@gmail.com"">i.n.f.oh.hh.h.30.0@gmail.com</a>
<a href=""mailto:i.n.f.o.h.hh.h.3.0.0@gmail.com"">i.n.f.o.h.hh.h.3.0.0@gmail.com</a>
<a href=""mailto:inf.oh.h.h.h.3.0.0@gmail.com"">inf.oh.h.h.h.3.0.0@gmail.com</a>
<a href=""mailto:i.n.f.o.h.h.hh30.0@gmail.com"">i.n.f.o.h.h.hh30.0@gmail.com</a>
<a href=""mailto:i.n.fo.hh.h.h.3.0.0@gmail.com"">i.n.fo.hh.h.h.3.0.0@gmail.com</a>
<a href=""mailto:inf.ohh.hh30.0@gmail.com"">inf.ohh.hh30.0@gmail.com</a>
<a href=""mailto:i.nf.o.h.hhh3.0.0@gmail.com"">i.nf.o.h.hhh3.0.0@gmail.com</a>
<a href=""mailto:inf.ohhh.h30.0@gmail.com"">inf.ohhh.h30.0@gmail.com</a>
<a href=""mailto:i.nfoh.h.hh30.0@gmail.com"">i.nfoh.h.hh30.0@gmail.com</a>
<a href=""mailto:i.n.f.ohhh.h3.00@gmail.com"">i.n.f.ohhh.h3.00@gmail.com</a>
<a href=""mailto:i.n.f.oh.hh.h300@gmail.com"">i.n.f.oh.hh.h300@gmail.com</a>
<a href=""mailto:i.nf.o.h.h.h.h.3.0.0@gmail.com"">i.nf.o.h.h.h.h.3.0.0@gmail.com</a>
<a href=""mailto:i.n.fo.hhh.h.300@gmail.com"">i.n.fo.hhh.h.300@gmail.com</a>
<a href=""mailto:inf.oh.h.hh.3.00@gmail.com"">inf.oh.h.hh.3.00@gmail.com</a>
<a href=""mailto:inf.o.hhh.h3.00@gmail.com"">inf.o.hhh.h3.00@gmail.com</a>
<a href=""mailto:i.nfohh.hh.300@gmail.com"">i.nfohh.hh.300@gmail.com</a>
<a href=""mailto:in.fohh.h.h300@gmail.com"">in.fohh.h.h300@gmail.com</a>
<a href=""mailto:i.nf.o.h.hhh30.0@gmail.com"">i.nf.o.h.hhh30.0@gmail.com</a>
<a href=""mailto:i.nf.ohh.hh.3.00@gmail.com"">i.nf.ohh.hh.3.00@gmail.com</a>
<a href=""mailto:inf.ohh.hh3.00@gmail.com"">inf.ohh.hh3.00@gmail.com</a>
<a href=""mailto:info.h.hhh.3.0.0@gmail.com"">info.h.hhh.3.0.0@gmail.com</a>
<a href=""mailto:i.n.f.o.hh.hh30.0@gmail.com"">i.n.f.o.hh.hh30.0@gmail.com</a>
<a href=""mailto:i.n.f.o.hhh.h.30.0@gmail.com"">i.n.f.o.hhh.h.30.0@gmail.com</a>
<a href=""mailto:info.h.h.hh.3.0.0@gmail.com"">info.h.h.hh.3.0.0@gmail.com</a>
<a href=""mailto:inf.o.h.h.hh.300@gmail.com"">inf.o.h.h.hh.300@gmail.com</a>
<a href=""mailto:i.n.fohh.h.h30.0@gmail.com"">i.n.fohh.h.h30.0@gmail.com</a>
<a href=""mailto:i.nf.o.hhhh.3.00@gmail.com"">i.nf.o.hhhh.3.00@gmail.com</a>
<a href=""mailto:inf.ohh.hh3.0.0@gmail.com"">inf.ohh.hh3.0.0@gmail.com</a>
<a href=""mailto:i.nf.o.hhh.h.300@gmail.com"">i.nf.o.hhh.h.300@gmail.com</a>
<a href=""mailto:in.fo.h.h.hh30.0@gmail.com"">in.fo.h.h.hh30.0@gmail.com</a>
<a href=""mailto:in.f.o.h.h.hh.3.0.0@gmail.com"">in.f.o.h.h.hh.3.0.0@gmail.com</a>
<a href=""mailto:info.h.hhh3.00@gmail.com"">info.h.hhh3.00@gmail.com</a>
<a href=""mailto:i.n.foh.h.hh.300@gmail.com"">i.n.foh.h.hh.300@gmail.com</a>
<a href=""mailto:i.nfohhhh.30.0@gmail.com"">i.nfohhhh.30.0@gmail.com</a>
<a href=""mailto:in.f.o.hh.hh300@gmail.com"">in.f.o.hh.hh300@gmail.com</a>
<a href=""mailto:in.fo.h.hhh.300@gmail.com"">in.fo.h.hhh.300@gmail.com</a>
<a href=""mailto:in.f.o.h.hh.h.300@gmail.com"">in.f.o.h.hh.h.300@gmail.com</a>
<a href=""mailto:i.n.f.o.h.h.h.h.30.0@gmail.com"">i.n.f.o.h.h.h.h.30.0@gmail.com</a>
<a href=""mailto:in.foh.h.hh3.0.0@gmail.com"">in.foh.h.hh3.0.0@gmail.com</a>
<a href=""mailto:i.n.fo.h.h.hh.3.00@gmail.com"">i.n.fo.h.h.hh.3.00@gmail.com</a>
<a href=""mailto:in.foh.h.h.h30.0@gmail.com"">in.foh.h.h.h30.0@gmail.com</a>
<a href=""mailto:infoh.hhh.30.0@gmail.com"">infoh.hhh.30.0@gmail.com</a>
<a href=""mailto:inf.o.h.h.h.h30.0@gmail.com"">inf.o.h.h.h.h30.0@gmail.com</a>
<a href=""mailto:i.nf.o.h.h.hh.30.0@gmail.com"">i.nf.o.h.h.hh.30.0@gmail.com</a>
<a href=""mailto:i.n.f.o.h.hh.h.300@gmail.com"">i.n.f.o.h.hh.h.300@gmail.com</a>
<a href=""mailto:info.hh.h.h.30.0@gmail.com"">info.hh.h.h.30.0@gmail.com</a>
<a href=""mailto:inf.ohhh.h.30.0@gmail.com"">inf.ohhh.h.30.0@gmail.com</a>
<a href=""mailto:in.f.o.h.h.hh30.0@gmail.com"">in.f.o.h.h.hh30.0@gmail.com</a>
<a href=""mailto:i.n.fo.h.h.h.h3.00@gmail.com"">i.n.fo.h.h.h.h3.00@gmail.com</a>
<a href=""mailto:in.f.o.h.h.h.h.3.00@gmail.com"">in.f.o.h.h.h.h.3.00@gmail.com</a>
<a href=""mailto:i.nf.oh.h.h.h.30.0@gmail.com"">i.nf.oh.h.h.h.30.0@gmail.com</a>
<a href=""mailto:inf.oh.h.h.h.30.0@gmail.com"">inf.oh.h.h.h.30.0@gmail.com</a>
<a href=""mailto:info.h.hh.h.300@gmail.com"">info.h.hh.h.300@gmail.com</a>
<a href=""mailto:i.nfo.h.hhh.3.0.0@gmail.com"">i.nfo.h.hhh.3.0.0@gmail.com</a>
<a href=""mailto:in.f.ohhhh3.0.0@gmail.com"">in.f.ohhhh3.0.0@gmail.com</a>
<a href=""mailto:inf.o.hhh.h300@gmail.com"">inf.o.hhh.h300@gmail.com</a>
<a href=""mailto:inf.ohhhh3.0.0@gmail.com"">inf.ohhhh3.0.0@gmail.com</a>
<a href=""mailto:i.n.fo.h.hh.h3.0.0@gmail.com"">i.n.fo.h.hh.h3.0.0@gmail.com</a>
<a href=""mailto:info.hh.hh30.0@gmail.com"">info.hh.hh30.0@gmail.com</a>
<a href=""mailto:i.n.fo.h.hh.h.3.0.0@gmail.com"">i.n.fo.h.hh.h.3.0.0@gmail.com</a>
<a href=""mailto:i.n.f.o.hhh.h.300@gmail.com"">i.n.f.o.hhh.h.300@gmail.com</a>
<a href=""mailto:i.n.f.ohhhh.300@gmail.com"">i.n.f.ohhhh.300@gmail.com</a>
<a href=""mailto:i.nf.o.hhhh.30.0@gmail.com"">i.nf.o.hhhh.30.0@gmail.com</a>
<a href=""mailto:i.n.f.o.hhhh30.0@gmail.com"">i.n.f.o.hhhh30.0@gmail.com</a>
<a href=""mailto:i.n.fo.h.hh.h.3.00@gmail.com"">i.n.fo.h.hh.h.3.00@gmail.com</a>
<a href=""mailto:i.nfo.h.h.hh3.00@gmail.com"">i.nfo.h.h.hh3.00@gmail.com</a>
<a href=""mailto:in.fo.h.h.hh.3.0.0@gmail.com"">in.fo.h.h.hh.3.0.0@gmail.com</a>
<a href=""mailto:inf.o.hhh.h.3.00@gmail.com"">inf.o.hhh.h.3.00@gmail.com</a>
<a href=""mailto:i.nfoh.hhh.3.00@gmail.com"">i.nfoh.hhh.3.00@gmail.com</a>
<a href=""mailto:in.fo.h.h.h.h.30.0@gmail.com"">in.fo.h.h.h.h.30.0@gmail.com</a>
<a href=""mailto:in.foh.hhh3.0.0@gmail.com"">in.foh.hhh3.0.0@gmail.com</a>
<a href=""mailto:i.n.f.o.hh.hh.30.0@gmail.com"">i.n.f.o.hh.hh.30.0@gmail.com</a>
<a href=""mailto:in.fo.hh.h.h.3.00@gmail.com"">in.fo.hh.h.h.3.00@gmail.com</a>
<a href=""mailto:i.nfohh.hh.30.0@gmail.com"">i.nfohh.hh.30.0@gmail.com</a>
<a href=""mailto:i.nf.ohhhh3.00@gmail.com"">i.nf.ohhhh3.00@gmail.com</a>
<a href=""mailto:i.nfo.hhh.h3.0.0@gmail.com"">i.nfo.hhh.h3.0.0@gmail.com</a>
<a href=""mailto:infohhh.h3.0.0@gmail.com"">infohhh.h3.0.0@gmail.com</a>
<a href=""mailto:in.f.o.hh.h.h.30.0@gmail.com"">in.f.o.hh.h.h.30.0@gmail.com</a>
<a href=""mailto:in.fo.h.hh.h.3.00@gmail.com"">in.fo.h.hh.h.3.00@gmail.com</a>
<a href=""mailto:i.n.f.ohhhh300@gmail.com"">i.n.f.ohhhh300@gmail.com</a>
<a href=""mailto:i.n.foh.hh.h.3.0.0@gmail.com"">i.n.foh.hh.h.3.0.0@gmail.com</a>
<a href=""mailto:in.f.oh.h.hh3.00@gmail.com"">in.f.oh.h.hh3.00@gmail.com</a>
<a href=""mailto:i.n.foh.h.hh.30.0@gmail.com"">i.n.foh.h.hh.30.0@gmail.com</a>
<a href=""mailto:i.nf.o.h.hh.h30.0@gmail.com"">i.nf.o.h.hh.h30.0@gmail.com</a>
<a href=""mailto:i.nfo.hhhh30.0@gmail.com"">i.nfo.hhhh30.0@gmail.com</a>
<a href=""mailto:inf.ohh.hh.3.00@gmail.com"">inf.ohh.hh.3.00@gmail.com</a>
<a href=""mailto:i.nf.oh.h.hh.3.0.0@gmail.com"">i.nf.oh.h.hh.3.0.0@gmail.com</a>
<a href=""mailto:i.n.f.o.h.hhh.30.0@gmail.com"">i.n.f.o.h.hhh.30.0@gmail.com</a>
<a href=""mailto:i.nf.o.h.hhh.300@gmail.com"">i.nf.o.h.hhh.300@gmail.com</a>
<a href=""mailto:infohhhh.3.00@gmail.com"">infohhhh.3.00@gmail.com</a>
<a href=""mailto:in.f.o.h.hhh300@gmail.com"">in.f.o.h.hhh300@gmail.com</a>
<a href=""mailto:i.nfoh.h.h.h.300@gmail.com"">i.nfoh.h.h.h.300@gmail.com</a>
<a href=""mailto:infoh.hhh300@gmail.com"">infoh.hhh300@gmail.com</a>
<a href=""mailto:i.nf.oh.h.hh3.00@gmail.com"">i.nf.oh.h.hh3.00@gmail.com</a>
<a href=""mailto:i.n.foh.h.h.h.3.00@gmail.com"">i.n.foh.h.h.h.3.00@gmail.com</a>
<a href=""mailto:in.fo.hh.hh300@gmail.com"">in.fo.hh.hh300@gmail.com</a>
<a href=""mailto:inf.o.hhh.h30.0@gmail.com"">inf.o.hhh.h30.0@gmail.com</a>
<a href=""mailto:in.fo.h.hh.h300@gmail.com"">in.fo.h.hh.h300@gmail.com</a>
<a href=""mailto:info.hhhh.300@gmail.com"">info.hhhh.300@gmail.com</a>
<a href=""mailto:i.n.foh.h.h.h.300@gmail.com"">i.n.foh.h.h.h.300@gmail.com</a>
<a href=""mailto:in.f.o.h.h.h.h.3.0.0@gmail.com"">in.f.o.h.h.h.h.3.0.0@gmail.com</a>
<a href=""mailto:i.n.fohh.h.h.300@gmail.com"">i.n.fohh.h.h.300@gmail.com</a>
<a href=""mailto:i.nfoh.h.h.h.3.00@gmail.com"">i.nfoh.h.h.h.3.00@gmail.com</a>
<a href=""mailto:in.foh.h.hh3.00@gmail.com"">in.foh.h.hh3.00@gmail.com</a>
<a href=""mailto:in.f.ohh.h.h3.00@gmail.com"">in.f.ohh.h.h3.00@gmail.com</a>
<a href=""mailto:info.hh.hh.30.0@gmail.com"">info.hh.hh.30.0@gmail.com</a>
<a href=""mailto:in.fo.hh.h.h.300@gmail.com"">in.fo.hh.h.h.300@gmail.com</a>
<a href=""mailto:in.f.oh.hhh300@gmail.com"">in.f.oh.hhh300@gmail.com</a>
<a href=""mailto:in.fohh.h.h30.0@gmail.com"">in.fohh.h.h30.0@gmail.com</a>
<a href=""mailto:i.n.f.oh.h.h.h.3.00@gmail.com"">i.n.f.oh.h.h.h.3.00@gmail.com</a>
<a href=""mailto:info.hhh.h3.0.0@gmail.com"">info.hhh.h3.0.0@gmail.com</a>
<a href=""mailto:infohhh.h.3.00@gmail.com"">infohhh.h.3.00@gmail.com</a>
<a href=""mailto:infohh.h.h3.0.0@gmail.com"">infohh.h.h3.0.0@gmail.com</a>
<a href=""mailto:in.f.o.h.hh.h300@gmail.com"">in.f.o.h.hh.h300@gmail.com</a>
<a href=""mailto:in.fohhh.h30.0@gmail.com"">in.fohhh.h30.0@gmail.com</a>
<a href=""mailto:i.nf.o.hhh.h3.0.0@gmail.com"">i.nf.o.hhh.h3.0.0@gmail.com</a>
<a href=""mailto:i.nf.o.h.h.hh.3.00@gmail.com"">i.nf.o.h.h.hh.3.00@gmail.com</a>
<a href=""mailto:i.n.fo.h.h.hh3.00@gmail.com"">i.n.fo.h.h.hh3.00@gmail.com</a>
<a href=""mailto:in.foh.hhh.3.0.0@gmail.com"">in.foh.hhh.3.0.0@gmail.com</a>
<a href=""mailto:i.nf.ohhhh300@gmail.com"">i.nf.ohhhh300@gmail.com</a>
<a href=""mailto:i.n.f.o.hhh.h3.0.0@gmail.com"">i.n.f.o.hhh.h3.0.0@gmail.com</a>
<a href=""mailto:infoh.h.hh3.0.0@gmail.com"">infoh.h.hh3.0.0@gmail.com</a>
<a href=""mailto:in.fohh.h.h.3.00@gmail.com"">in.fohh.h.h.3.00@gmail.com</a>
<a href=""mailto:in.f.o.hhhh.3.00@gmail.com"">in.f.o.hhhh.3.00@gmail.com</a>
<a href=""mailto:infoh.hh.h.300@gmail.com"">infoh.hh.h.300@gmail.com</a>
<a href=""mailto:i.n.f.o.h.h.hh.3.00@gmail.com"">i.n.f.o.h.h.hh.3.00@gmail.com</a>
<a href=""mailto:i.nf.oh.hh.h.3.00@gmail.com"">i.nf.oh.hh.h.3.00@gmail.com</a>
<a href=""mailto:i.n.f.o.hh.h.h.3.00@gmail.com"">i.n.f.o.hh.h.h.3.00@gmail.com</a>
<a href=""mailto:i.nf.oh.hh.h.3.0.0@gmail.com"">i.nf.oh.hh.h.3.0.0@gmail.com</a>
<a href=""mailto:infoh.hh.h.3.00@gmail.com"">infoh.hh.h.3.00@gmail.com</a>
<a href=""mailto:i.n.f.o.hh.h.h3.00@gmail.com"">i.n.f.o.hh.h.h3.00@gmail.com</a>
<a href=""mailto:i.n.fo.h.hhh30.0@gmail.com"">i.n.fo.h.hhh30.0@gmail.com</a>
<a href=""mailto:in.f.oh.h.hh30.0@gmail.com"">in.f.oh.h.hh30.0@gmail.com</a>
<a href=""mailto:i.nfo.hhhh.3.0.0@gmail.com"">i.nfo.hhhh.3.0.0@gmail.com</a>
<a href=""mailto:i.n.f.oh.hhh3.0.0@gmail.com"">i.n.f.oh.hhh3.0.0@gmail.com</a>
<a href=""mailto:i.nfo.hhh.h.30.0@gmail.com"">i.nfo.hhh.h.30.0@gmail.com</a>
<a href=""mailto:i.n.foh.h.hh3.00@gmail.com"">i.n.foh.h.hh3.00@gmail.com</a>
<a href=""mailto:in.fohh.h.h3.00@gmail.com"">in.fohh.h.h3.00@gmail.com</a>
<a href=""mailto:i.nf.o.hhhh300@gmail.com"">i.nf.o.hhhh300@gmail.com</a>
<a href=""mailto:i.nfo.hh.h.h.3.0.0@gmail.com"">i.nfo.hh.h.h.3.0.0@gmail.com</a>
<a href=""mailto:i.nfo.hh.hh.3.00@gmail.com"">i.nfo.hh.hh.3.00@gmail.com</a>
<a href=""mailto:i.n.f.ohh.h.h.3.0.0@gmail.com"">i.n.f.ohh.h.h.3.0.0@gmail.com</a>
<a href=""mailto:i.nfohh.hh.3.0.0@gmail.com"">i.nfohh.hh.3.0.0@gmail.com</a>
<a href=""mailto:in.f.o.hh.hh3.0.0@gmail.com"">in.f.o.hh.hh3.0.0@gmail.com</a>
<a href=""mailto:in.f.o.hh.h.h.300@gmail.com"">in.f.o.hh.h.h.300@gmail.com</a>
<a href=""mailto:inf.o.hhhh.300@gmail.com"">inf.o.hhhh.300@gmail.com</a>
<a href=""mailto:inf.o.h.h.h.h3.00@gmail.com"">inf.o.h.h.h.h3.00@gmail.com</a>
<a href=""mailto:in.foh.h.hh.30.0@gmail.com"">in.foh.h.hh.30.0@gmail.com</a>
<a href=""mailto:in.fohhh.h300@gmail.com"">in.fohhh.h300@gmail.com</a>
<a href=""mailto:info.h.h.h.h3.00@gmail.com"">info.h.h.h.h3.00@gmail.com</a>
<a href=""mailto:info.h.hhh30.0@gmail.com"">info.h.hhh30.0@gmail.com</a>
<a href=""mailto:i.nf.o.h.h.hh300@gmail.com"">i.nf.o.h.h.hh300@gmail.com</a>
<a href=""mailto:i.nfo.hh.hh.300@gmail.com"">i.nfo.hh.hh.300@gmail.com</a>
<a href=""mailto:in.f.ohhhh3.00@gmail.com"">in.f.ohhhh3.00@gmail.com</a>
<a href=""mailto:i.nf.o.hh.h.h3.0.0@gmail.com"">i.nf.o.hh.h.h3.0.0@gmail.com</a>
<a href=""mailto:inf.ohhh.h3.0.0@gmail.com"">inf.ohhh.h3.0.0@gmail.com</a>
<a href=""mailto:in.f.o.h.hh.h.3.0.0@gmail.com"">in.f.o.h.hh.h.3.0.0@gmail.com</a>
<a href=""mailto:in.f.o.hhh.h.30.0@gmail.com"">in.f.o.hhh.h.30.0@gmail.com</a>
<a href=""mailto:i.nf.o.hh.hh3.0.0@gmail.com"">i.nf.o.hh.hh3.0.0@gmail.com</a>
<a href=""mailto:i.n.f.o.hh.h.h.30.0@gmail.com"">i.n.f.o.hh.h.h.30.0@gmail.com</a>
<a href=""mailto:i.n.f.ohhh.h3.0.0@gmail.com"">i.n.f.ohhh.h3.0.0@gmail.com</a>
<a href=""mailto:i.nfo.hhhh300@gmail.com"">i.nfo.hhhh300@gmail.com</a>
<a href=""mailto:info.h.hh.h3.00@gmail.com"">info.h.hh.h3.00@gmail.com</a>
<a href=""mailto:in.fo.h.hhh3.00@gmail.com"">in.fo.h.hhh3.00@gmail.com</a>
<a href=""mailto:i.n.f.ohhhh30.0@gmail.com"">i.n.f.ohhhh30.0@gmail.com</a>
<a href=""mailto:i.n.f.ohh.hh.3.00@gmail.com"">i.n.f.ohh.hh.3.00@gmail.com</a>
<a href=""mailto:in.f.ohhhh30.0@gmail.com"">in.f.ohhhh30.0@gmail.com</a>
<a href=""mailto:inf.o.hh.h.h30.0@gmail.com"">inf.o.hh.h.h30.0@gmail.com</a>
<a href=""mailto:info.hhh.h.3.0.0@gmail.com"">info.hhh.h.3.0.0@gmail.com</a>
<a href=""mailto:in.fohh.h.h3.0.0@gmail.com"">in.fohh.h.h3.0.0@gmail.com</a>
<a href=""mailto:infoh.hh.h3.00@gmail.com"">infoh.hh.h3.00@gmail.com</a>
<a href=""mailto:in.fo.hhh.h.300@gmail.com"">in.fo.hhh.h.300@gmail.com</a>
<a href=""mailto:infobank9000@gmail.com"">infobank9000@gmail.com</a>
<a href=""mailto:i.n.f.oba.n.k.9.000@gmail.com"">i.n.f.oba.n.k.9.000@gmail.com</a>
<a href=""mailto:info.b.a.n.k9.0.00@gmail.com"">info.b.a.n.k9.0.00@gmail.com</a>
<a href=""mailto:infobank.9000@gmail.com"">infobank.9000@gmail.com</a>
<a href=""mailto:i.n.fo.ba.n.k9.00.0@gmail.com"">i.n.fo.ba.n.k9.00.0@gmail.com</a>
<a href=""mailto:i.n.fo.bank9.0.00@gmail.com"">i.n.fo.bank9.0.00@gmail.com</a>
<a href=""mailto:in.f.oba.nk90.00@gmail.com"">in.f.oba.nk90.00@gmail.com</a>
<a href=""mailto:i.n.f.oban.k.9000@gmail.com"">i.n.f.oban.k.9000@gmail.com</a>
<a href=""mailto:in.f.oba.n.k9.0.0.0@gmail.com"">in.f.oba.n.k9.0.0.0@gmail.com</a>
<a href=""mailto:infob.an.k.90.00@gmail.com"">infob.an.k.90.00@gmail.com</a>
<a href=""mailto:i.nfob.a.nk90.00@gmail.com"">i.nfob.a.nk90.00@gmail.com</a>
<a href=""mailto:in.fob.a.nk9.00.0@gmail.com"">in.fob.a.nk9.00.0@gmail.com</a>
<a href=""mailto:i.n.fobank9.0.00@gmail.com"">i.n.fobank9.0.00@gmail.com</a>
<a href=""mailto:i.n.f.o.ba.nk9.00.0@gmail.com"">i.n.f.o.ba.nk9.00.0@gmail.com</a>
<a href=""mailto:i.nf.o.b.ank.9000@gmail.com"">i.nf.o.b.ank.9000@gmail.com</a>
<a href=""mailto:i.n.f.ob.ank.9.000@gmail.com"">i.n.f.ob.ank.9.000@gmail.com</a>
<a href=""mailto:i.nf.o.ba.n.k.90.00@gmail.com"">i.nf.o.ba.n.k.90.00@gmail.com</a>
<a href=""mailto:inf.o.b.an.k.90.0.0@gmail.com"">inf.o.b.an.k.90.0.0@gmail.com</a>
<a href=""mailto:i.n.f.o.b.ank90.0.0@gmail.com"">i.n.f.o.b.ank90.0.0@gmail.com</a>
<a href=""mailto:i.nf.ob.a.n.k.900.0@gmail.com"">i.nf.ob.a.n.k.900.0@gmail.com</a>
<a href=""mailto:inf.o.b.a.n.k.9.0.0.0@gmail.com"">inf.o.b.a.n.k.9.0.0.0@gmail.com</a>
<a href=""mailto:i.nf.oba.nk.90.0.0@gmail.com"">i.nf.oba.nk.90.0.0@gmail.com</a>
<a href=""mailto:i.n.f.o.bank9.0.0.0@gmail.com"">i.n.f.o.bank9.0.0.0@gmail.com</a>
<a href=""mailto:in.f.o.ba.n.k9.0.00@gmail.com"">in.f.o.ba.n.k9.0.00@gmail.com</a>
<a href=""mailto:inf.ob.ank900.0@gmail.com"">inf.ob.ank900.0@gmail.com</a>
<a href=""mailto:in.fo.b.ank.9000@gmail.com"">in.fo.b.ank.9000@gmail.com</a>
<a href=""mailto:i.n.fob.ank9.0.00@gmail.com"">i.n.fob.ank9.0.00@gmail.com</a>
<a href=""mailto:i.nf.obank.900.0@gmail.com"">i.nf.obank.900.0@gmail.com</a>
<a href=""mailto:in.fob.a.nk.9.0.00@gmail.com"">in.fob.a.nk.9.0.00@gmail.com</a>
<a href=""mailto:i.n.f.o.bank900.0@gmail.com"">i.n.f.o.bank900.0@gmail.com</a>
<a href=""mailto:in.fo.b.a.nk9.0.0.0@gmail.com"">in.fo.b.a.nk9.0.0.0@gmail.com</a>
<a href=""mailto:inf.o.ban.k9.000@gmail.com"">inf.o.ban.k9.000@gmail.com</a>
<a href=""mailto:info.ba.n.k9.00.0@gmail.com"">info.ba.n.k9.00.0@gmail.com</a>
<a href=""mailto:i.nf.o.b.a.n.k.9.00.0@gmail.com"">i.nf.o.b.a.n.k.9.00.0@gmail.com</a>
<a href=""mailto:in.f.o.b.ank.90.0.0@gmail.com"">in.f.o.b.ank.90.0.0@gmail.com</a>
<a href=""mailto:in.fob.a.nk9.000@gmail.com"">in.fob.a.nk9.000@gmail.com</a>
<a href=""mailto:infob.a.nk9.000@gmail.com"">infob.a.nk9.000@gmail.com</a>
<a href=""mailto:i.n.foban.k.9.00.0@gmail.com"">i.n.foban.k.9.00.0@gmail.com</a>
<a href=""mailto:info.bank9.0.00@gmail.com"">info.bank9.0.00@gmail.com</a>
<a href=""mailto:in.f.ob.an.k9.000@gmail.com"">in.f.ob.an.k9.000@gmail.com</a>
<a href=""mailto:info.bank.90.0.0@gmail.com"">info.bank.90.0.0@gmail.com</a>
<a href=""mailto:in.fo.bank.9.0.00@gmail.com"">in.fo.bank.9.0.00@gmail.com</a>
<a href=""mailto:i.nf.o.bank90.0.0@gmail.com"">i.nf.o.bank90.0.0@gmail.com</a>
<a href=""mailto:inf.o.ba.n.k.9.0.0.0@gmail.com"">inf.o.ba.n.k.9.0.0.0@gmail.com</a>
<a href=""mailto:i.n.f.oba.nk90.00@gmail.com"">i.n.f.oba.nk90.00@gmail.com</a>
<a href=""mailto:in.f.o.ban.k90.00@gmail.com"">in.f.o.ban.k90.00@gmail.com</a>
<a href=""mailto:i.nfo.ban.k9.0.00@gmail.com"">i.nfo.ban.k9.0.00@gmail.com</a>
<a href=""mailto:i.nf.o.ba.nk.9.000@gmail.com"">i.nf.o.ba.nk.9.000@gmail.com</a>
<a href=""mailto:in.f.o.ban.k9.000@gmail.com"">in.f.o.ban.k9.000@gmail.com</a>
<a href=""mailto:i.n.fo.bank.9.000@gmail.com"">i.n.fo.bank.9.000@gmail.com</a>
<a href=""mailto:in.fo.b.an.k9.000@gmail.com"">in.fo.b.an.k9.000@gmail.com</a>
<a href=""mailto:in.fo.b.an.k90.00@gmail.com"">in.fo.b.an.k90.00@gmail.com</a>
<a href=""mailto:i.nfoban.k90.00@gmail.com"">i.nfoban.k90.00@gmail.com</a>
<a href=""mailto:i.n.f.o.ban.k.90.00@gmail.com"">i.n.f.o.ban.k.90.00@gmail.com</a>
<a href=""mailto:info.ban.k90.00@gmail.com"">info.ban.k90.00@gmail.com</a>
<a href=""mailto:in.f.obank.9.0.0.0@gmail.com"">in.f.obank.9.0.0.0@gmail.com</a>
<a href=""mailto:infob.a.n.k.9.00.0@gmail.com"">infob.a.n.k.9.00.0@gmail.com</a>
<a href=""mailto:i.nf.o.ba.nk9.0.0.0@gmail.com"">i.nf.o.ba.nk9.0.0.0@gmail.com</a>
<a href=""mailto:inf.oban.k9.0.00@gmail.com"">inf.oban.k9.0.00@gmail.com</a>
<a href=""mailto:info.b.an.k.9.0.00@gmail.com"">info.b.an.k.9.0.00@gmail.com</a>
<a href=""mailto:i.nf.ob.ank.9.0.00@gmail.com"">i.nf.ob.ank.9.0.00@gmail.com</a>
<a href=""mailto:i.n.f.o.b.ank.9.0.0.0@gmail.com"">i.n.f.o.b.ank.9.0.0.0@gmail.com</a>
<a href=""mailto:inf.o.b.a.n.k.9000@gmail.com"">inf.o.b.a.n.k.9000@gmail.com</a>
<a href=""mailto:i.nfoban.k.9.0.0.0@gmail.com"">i.nfoban.k.9.0.0.0@gmail.com</a>
<a href=""mailto:inf.o.bank90.00@gmail.com"">inf.o.bank90.00@gmail.com</a>
<a href=""mailto:in.fo.ba.n.k90.00@gmail.com"">in.fo.ba.n.k90.00@gmail.com</a>
<a href=""mailto:in.f.oba.n.k.90.00@gmail.com"">in.f.oba.n.k.90.00@gmail.com</a>
<a href=""mailto:in.fo.b.an.k.90.0.0@gmail.com"">in.fo.b.an.k.90.0.0@gmail.com</a>
<a href=""mailto:i.n.f.o.b.a.nk.9.000@gmail.com"">i.n.f.o.b.a.nk.9.000@gmail.com</a>
<a href=""mailto:i.n.foba.nk.90.00@gmail.com"">i.n.foba.nk.90.00@gmail.com</a>
<a href=""mailto:inf.o.ba.nk90.0.0@gmail.com"">inf.o.ba.nk90.0.0@gmail.com</a>
<a href=""mailto:i.n.f.o.ban.k9.0.00@gmail.com"">i.n.f.o.ban.k9.0.00@gmail.com</a>
<a href=""mailto:i.n.fob.a.n.k9.000@gmail.com"">i.n.fob.a.n.k9.000@gmail.com</a>
<a href=""mailto:infob.ank9.000@gmail.com"">infob.ank9.000@gmail.com</a>
<a href=""mailto:i.nf.o.bank.9.0.00@gmail.com"">i.nf.o.bank.9.0.00@gmail.com</a>
<a href=""mailto:i.nf.o.b.an.k90.00@gmail.com"">i.nf.o.b.an.k90.00@gmail.com</a>
<a href=""mailto:i.n.fob.a.n.k9000@gmail.com"">i.n.fob.a.n.k9000@gmail.com</a>
<a href=""mailto:i.nfo.ban.k.9.0.0.0@gmail.com"">i.nfo.ban.k.9.0.0.0@gmail.com</a>
<a href=""mailto:info.ba.n.k9000@gmail.com"">info.ba.n.k9000@gmail.com</a>
<a href=""mailto:info.b.a.n.k.9.00.0@gmail.com"">info.b.a.n.k.9.00.0@gmail.com</a>
<a href=""mailto:i.n.f.ob.an.k9.000@gmail.com"">i.n.f.ob.an.k9.000@gmail.com</a>
<a href=""mailto:in.foba.n.k9.000@gmail.com"">in.foba.n.k9.000@gmail.com</a>
<a href=""mailto:in.f.o.bank90.00@gmail.com"">in.f.o.bank90.00@gmail.com</a>
<a href=""mailto:i.nf.ob.ank9000@gmail.com"">i.nf.ob.ank9000@gmail.com</a>
<a href=""mailto:in.f.o.b.ank.9.00.0@gmail.com"">in.f.o.b.ank.9.00.0@gmail.com</a>
<a href=""mailto:i.n.fo.ba.n.k.9.000@gmail.com"">i.n.fo.ba.n.k.9.000@gmail.com</a>
<a href=""mailto:i.n.fo.bank.9000@gmail.com"">i.n.fo.bank.9000@gmail.com</a>
<a href=""mailto:i.n.f.ob.an.k.9.000@gmail.com"">i.n.f.ob.an.k.9.000@gmail.com</a>
<a href=""mailto:inf.oban.k.9.0.00@gmail.com"">inf.oban.k.9.0.00@gmail.com</a>
<a href=""mailto:inf.o.ba.nk.9.000@gmail.com"">inf.o.ba.nk.9.000@gmail.com</a>
<a href=""mailto:i.nf.oba.n.k.9.0.0.0@gmail.com"">i.nf.oba.n.k.9.0.0.0@gmail.com</a>
<a href=""mailto:i.n.fob.an.k9.00.0@gmail.com"">i.n.fob.an.k9.00.0@gmail.com</a>
<a href=""mailto:i.n.fo.ba.n.k.900.0@gmail.com"">i.n.fo.ba.n.k.900.0@gmail.com</a>
<a href=""mailto:info.b.ank.90.00@gmail.com"">info.b.ank.90.00@gmail.com</a>
<a href=""mailto:i.n.f.o.b.an.k.9.0.00@gmail.com"">i.n.f.o.b.an.k.9.0.00@gmail.com</a>
<a href=""mailto:inf.o.ba.nk9.000@gmail.com"">inf.o.ba.nk9.000@gmail.com</a>
<a href=""mailto:infobank9.0.0.0@gmail.com"">infobank9.0.0.0@gmail.com</a>
<a href=""mailto:inf.o.b.a.nk9.000@gmail.com"">inf.o.b.a.nk9.000@gmail.com</a>
<a href=""mailto:i.n.f.ob.a.n.k.900.0@gmail.com"">i.n.f.ob.a.n.k.900.0@gmail.com</a>
<a href=""mailto:i.n.fo.b.a.n.k.9.0.00@gmail.com"">i.n.fo.b.a.n.k.9.0.00@gmail.com</a>
<a href=""mailto:i.nf.ob.a.nk900.0@gmail.com"">i.nf.ob.a.nk900.0@gmail.com</a>
<a href=""mailto:in.fo.ba.nk9.00.0@gmail.com"">in.fo.ba.nk9.00.0@gmail.com</a>
<a href=""mailto:in.f.o.ba.nk.9.000@gmail.com"">in.f.o.ba.nk.9.000@gmail.com</a>
<a href=""mailto:i.n.fo.b.ank9.00.0@gmail.com"">i.n.fo.b.ank9.00.0@gmail.com</a>
<a href=""mailto:i.n.f.o.b.a.nk.900.0@gmail.com"">i.n.f.o.b.a.nk.900.0@gmail.com</a>
<a href=""mailto:i.n.f.o.ba.nk900.0@gmail.com"">i.n.f.o.ba.nk900.0@gmail.com</a>
<a href=""mailto:i.nfo.b.a.n.k.9.0.0.0@gmail.com"">i.nfo.b.a.n.k.9.0.0.0@gmail.com</a>
<a href=""mailto:i.nf.ob.ank90.00@gmail.com"">i.nf.ob.ank90.00@gmail.com</a>
<a href=""mailto:i.nfoba.n.k.9.0.00@gmail.com"">i.nfoba.n.k.9.0.00@gmail.com</a>
<a href=""mailto:in.fo.bank.9.0.0.0@gmail.com"">in.fo.bank.9.0.0.0@gmail.com</a>
<a href=""mailto:i.n.fo.bank9.0.0.0@gmail.com"">i.n.fo.bank9.0.0.0@gmail.com</a>
<a href=""mailto:i.n.fob.a.nk.900.0@gmail.com"">i.n.fob.a.nk.900.0@gmail.com</a>
<a href=""mailto:i.n.fo.b.a.n.k9.0.0.0@gmail.com"">i.n.fo.b.a.n.k9.0.0.0@gmail.com</a>
<a href=""mailto:i.nf.ob.a.nk90.0.0@gmail.com"">i.nf.ob.a.nk90.0.0@gmail.com</a>
<a href=""mailto:i.nf.o.b.a.nk9.0.00@gmail.com"">i.nf.o.b.a.nk9.0.00@gmail.com</a>
<a href=""mailto:in.f.o.bank9.0.00@gmail.com"">in.f.o.bank9.0.00@gmail.com</a>
<a href=""mailto:inf.o.ba.nk.900.0@gmail.com"">inf.o.ba.nk.900.0@gmail.com</a>
<a href=""mailto:in.f.ob.a.n.k.9.0.0.0@gmail.com"">in.f.ob.a.n.k.9.0.0.0@gmail.com</a>
<a href=""mailto:in.f.o.bank.9.0.00@gmail.com"">in.f.o.bank.9.0.00@gmail.com</a>
<a href=""mailto:i.n.fob.a.n.k9.0.00@gmail.com"">i.n.fob.a.n.k9.0.00@gmail.com</a>
<a href=""mailto:i.n.foba.nk.9000@gmail.com"">i.n.foba.nk.9000@gmail.com</a>
<a href=""mailto:in.fo.ba.nk90.00@gmail.com"">in.fo.ba.nk90.00@gmail.com</a>
<a href=""mailto:in.fo.ba.nk9.0.00@gmail.com"">in.fo.ba.nk9.0.00@gmail.com</a>
<a href=""mailto:i.n.f.oba.n.k.900.0@gmail.com"">i.n.f.oba.n.k.900.0@gmail.com</a>
<a href=""mailto:inf.ob.a.nk.90.0.0@gmail.com"">inf.ob.a.nk.90.0.0@gmail.com</a>
<a href=""mailto:in.f.ob.ank.900.0@gmail.com"">in.f.ob.ank.900.0@gmail.com</a>
<a href=""mailto:in.f.o.b.ank90.0.0@gmail.com"">in.f.o.b.ank90.0.0@gmail.com</a>
<a href=""mailto:i.n.fo.b.a.n.k.9.000@gmail.com"">i.n.fo.b.a.n.k.9.000@gmail.com</a>
<a href=""mailto:i.n.fo.b.a.n.k.900.0@gmail.com"">i.n.fo.b.a.n.k.900.0@gmail.com</a>
<a href=""mailto:inf.ob.a.nk9.0.0.0@gmail.com"">inf.ob.a.nk9.0.0.0@gmail.com</a>
<a href=""mailto:i.n.f.ob.a.nk.900.0@gmail.com"">i.n.f.ob.a.nk.900.0@gmail.com</a>
<a href=""mailto:i.nfo.b.a.n.k90.0.0@gmail.com"">i.nfo.b.a.n.k90.0.0@gmail.com</a>
<a href=""mailto:i.nfo.b.an.k.9.00.0@gmail.com"">i.nfo.b.an.k.9.00.0@gmail.com</a>
<a href=""mailto:i.nf.o.b.a.n.k.9.0.0.0@gmail.com"">i.nf.o.b.a.n.k.9.0.0.0@gmail.com</a>
<a href=""mailto:i.nf.obank90.00@gmail.com"">i.nf.obank90.00@gmail.com</a>
<a href=""mailto:i.nf.oban.k.900.0@gmail.com"">i.nf.oban.k.900.0@gmail.com</a>
<a href=""mailto:i.nfo.b.a.n.k.9.0.00@gmail.com"">i.nfo.b.a.n.k.9.0.00@gmail.com</a>
<a href=""mailto:i.nfob.a.nk900.0@gmail.com"">i.nfob.a.nk900.0@gmail.com</a>
<a href=""mailto:i.n.foba.nk.9.0.00@gmail.com"">i.n.foba.nk.9.0.00@gmail.com</a>
<a href=""mailto:i.nf.ob.a.n.k90.0.0@gmail.com"">i.nf.ob.a.n.k90.0.0@gmail.com</a>
<a href=""mailto:i.nf.o.ban.k.90.0.0@gmail.com"">i.nf.o.ban.k.90.0.0@gmail.com</a>
<a href=""mailto:i.nfo.ba.n.k.9000@gmail.com"">i.nfo.ba.n.k.9000@gmail.com</a>
<a href=""mailto:i.n.f.ob.ank9.00.0@gmail.com"">i.n.f.ob.ank9.00.0@gmail.com</a>
<a href=""mailto:in.fo.b.a.nk.9.00.0@gmail.com"">in.fo.b.a.nk.9.00.0@gmail.com</a>
<a href=""mailto:infob.an.k9.000@gmail.com"">infob.an.k9.000@gmail.com</a>
<a href=""mailto:i.n.f.o.bank90.0.0@gmail.com"">i.n.f.o.bank90.0.0@gmail.com</a>
<a href=""mailto:i.nf.o.ba.n.k9000@gmail.com"">i.nf.o.ba.n.k9000@gmail.com</a>
<a href=""mailto:i.nf.ob.a.n.k.9000@gmail.com"">i.nf.ob.a.n.k.9000@gmail.com</a>
<a href=""mailto:i.nf.o.ban.k.9.0.00@gmail.com"">i.nf.o.ban.k.9.0.00@gmail.com</a>
<a href=""mailto:i.nf.oban.k.9.0.0.0@gmail.com"">i.nf.oban.k.9.0.0.0@gmail.com</a>
<a href=""mailto:i.nf.obank.9.0.00@gmail.com"">i.nf.obank.9.0.00@gmail.com</a>
<a href=""mailto:i.nfoban.k.9.00.0@gmail.com"">i.nfoban.k.9.00.0@gmail.com</a>
<a href=""mailto:i.nfo.ban.k9.0.0.0@gmail.com"">i.nfo.ban.k9.0.0.0@gmail.com</a>
<a href=""mailto:i.n.fob.a.n.k9.0.0.0@gmail.com"">i.n.fob.a.n.k9.0.0.0@gmail.com</a>
<a href=""mailto:i.nf.o.ban.k.9.000@gmail.com"">i.nf.o.ban.k.9.000@gmail.com</a>
<a href=""mailto:i.nfoba.nk.9.0.0.0@gmail.com"">i.nfoba.nk.9.0.0.0@gmail.com</a>
<a href=""mailto:in.f.obank90.00@gmail.com"">in.f.obank90.00@gmail.com</a>
<a href=""mailto:i.n.f.o.ba.nk.900.0@gmail.com"">i.n.f.o.ba.nk.900.0@gmail.com</a>
<a href=""mailto:in.fo.b.ank9.00.0@gmail.com"">in.fo.b.ank9.00.0@gmail.com</a>
<a href=""mailto:i.nf.ob.a.n.k.9.000@gmail.com"">i.nf.ob.a.n.k.9.000@gmail.com</a>
<a href=""mailto:info.ba.n.k9.0.0.0@gmail.com"">info.ba.n.k9.0.0.0@gmail.com</a>
<a href=""mailto:i.nf.oba.n.k90.00@gmail.com"">i.nf.oba.n.k90.00@gmail.com</a>
<a href=""mailto:i.n.foban.k9.0.0.0@gmail.com"">i.n.foban.k9.0.0.0@gmail.com</a>
<a href=""mailto:i.n.f.o.ba.n.k9.0.0.0@gmail.com"">i.n.f.o.ba.n.k9.0.0.0@gmail.com</a>
<a href=""mailto:inf.obank.90.0.0@gmail.com"">inf.obank.90.0.0@gmail.com</a>
<a href=""mailto:i.nfo.ba.n.k.9.00.0@gmail.com"">i.nfo.ba.n.k.9.00.0@gmail.com</a>
<a href=""mailto:inf.obank90.0.0@gmail.com"">inf.obank90.0.0@gmail.com</a>
<a href=""mailto:i.nfob.a.nk.9.00.0@gmail.com"">i.nfob.a.nk.9.00.0@gmail.com</a>
<a href=""mailto:i.nf.o.b.a.nk9.00.0@gmail.com"">i.nf.o.b.a.nk9.00.0@gmail.com</a>
<a href=""mailto:infoba.nk.9000@gmail.com"">infoba.nk.9000@gmail.com</a>
<a href=""mailto:in.f.ob.ank.9.0.00@gmail.com"">in.f.ob.ank.9.0.00@gmail.com</a>
<a href=""mailto:i.nf.obank.9.0.0.0@gmail.com"">i.nf.obank.9.0.0.0@gmail.com</a>
<a href=""mailto:in.f.ob.a.n.k.90.00@gmail.com"">in.f.ob.a.n.k.90.00@gmail.com</a>
<a href=""mailto:i.nf.oba.n.k9.00.0@gmail.com"">i.nf.oba.n.k9.00.0@gmail.com</a>
<a href=""mailto:i.n.f.o.b.a.n.k9.00.0@gmail.com"">i.n.f.o.b.a.n.k9.00.0@gmail.com</a>
<a href=""mailto:in.f.o.b.an.k9.0.0.0@gmail.com"">in.f.o.b.an.k9.0.0.0@gmail.com</a>
<a href=""mailto:i.nfo.ba.n.k.900.0@gmail.com"">i.nfo.ba.n.k.900.0@gmail.com</a>
<a href=""mailto:i.nf.o.b.a.nk.90.00@gmail.com"">i.nf.o.b.a.nk.90.00@gmail.com</a>
<a href=""mailto:i.nf.o.b.ank.90.00@gmail.com"">i.nf.o.b.ank.90.00@gmail.com</a>
<a href=""mailto:i.nf.ob.ank.9.000@gmail.com"">i.nf.ob.ank.9.000@gmail.com</a>
<a href=""mailto:i.nf.o.b.an.k.9.0.0.0@gmail.com"">i.nf.o.b.an.k.9.0.0.0@gmail.com</a>
<a href=""mailto:in.f.ob.a.nk.9.0.0.0@gmail.com"">in.f.ob.a.nk.9.0.0.0@gmail.com</a>
<a href=""mailto:i.nf.oban.k900.0@gmail.com"">i.nf.oban.k900.0@gmail.com</a>
<a href=""mailto:i.nfo.b.ank9.00.0@gmail.com"">i.nfo.b.ank9.00.0@gmail.com</a>
<a href=""mailto:i.n.fo.b.a.nk90.00@gmail.com"">i.n.fo.b.a.nk90.00@gmail.com</a>
<a href=""mailto:info.ba.n.k.9.00.0@gmail.com"">info.ba.n.k.9.00.0@gmail.com</a>
<a href=""mailto:inf.o.ban.k.9.00.0@gmail.com"">inf.o.ban.k.9.00.0@gmail.com</a>
<a href=""mailto:i.nf.o.ba.n.k9.00.0@gmail.com"">i.nf.o.ba.n.k9.00.0@gmail.com</a>
<a href=""mailto:i.nfo.ba.nk9.00.0@gmail.com"">i.nfo.ba.nk9.00.0@gmail.com</a>
<a href=""mailto:i.n.fobank.9000@gmail.com"">i.n.fobank.9000@gmail.com</a>
<a href=""mailto:i.nfo.ban.k.9.000@gmail.com"">i.nfo.ban.k.9.000@gmail.com</a>
<a href=""mailto:infob.a.nk.9.0.00@gmail.com"">infob.a.nk.9.0.00@gmail.com</a>
<a href=""mailto:i.nfob.an.k9.0.00@gmail.com"">i.nfob.an.k9.0.00@gmail.com</a>
<a href=""mailto:i.nfo.b.ank.9.0.0.0@gmail.com"">i.nfo.b.ank.9.0.0.0@gmail.com</a>
<a href=""mailto:i.n.fo.b.a.nk90.0.0@gmail.com"">i.n.fo.b.a.nk90.0.0@gmail.com</a>
<a href=""mailto:in.fob.an.k9.000@gmail.com"">in.fob.an.k9.000@gmail.com</a>
<a href=""mailto:i.n.f.o.b.a.nk.90.0.0@gmail.com"">i.n.f.o.b.a.nk.90.0.0@gmail.com</a>
<a href=""mailto:inf.ob.a.n.k90.0.0@gmail.com"">inf.ob.a.n.k90.0.0@gmail.com</a>
<a href=""mailto:in.fob.a.nk.9000@gmail.com"">in.fob.a.nk.9000@gmail.com</a>
<a href=""mailto:i.nfo.bank90.00@gmail.com"">i.nfo.bank90.00@gmail.com</a>
<a href=""mailto:i.nf.o.b.an.k9.00.0@gmail.com"">i.nf.o.b.an.k9.00.0@gmail.com</a>
<a href=""mailto:financeministry753@gmail.com"">financeministry753@gmail.com</a>
<a href=""mailto:f.i.na.nc.e.m.i.n.i.stry7.53@gmail.com"">f.i.na.nc.e.m.i.n.i.stry7.53@gmail.com</a>
<a href=""mailto:fin.anc.emi.n.is.t.ry.7.53@gmail.com"">fin.anc.emi.n.is.t.ry.7.53@gmail.com</a>
<a href=""mailto:fin.a.nce.min.i.st.ry7.53@gmail.com"">fin.a.nce.min.i.st.ry7.53@gmail.com</a>
<a href=""mailto:f.i.nan.cem.inis.t.ry.753@gmail.com"">f.i.nan.cem.inis.t.ry.753@gmail.com</a>
<a href=""mailto:f.i.n.a.n.c.e.m.in.istry75.3@gmail.com"">f.i.n.a.n.c.e.m.in.istry75.3@gmail.com</a>
<a href=""mailto:fi.na.n.cem.ini.st.r.y7.53@gmail.com"">fi.na.n.cem.ini.st.r.y7.53@gmail.com</a>
<a href=""mailto:fin.an.ce.m.i.n.istr.y.753@gmail.com"">fin.an.ce.m.i.n.istr.y.753@gmail.com</a>
<a href=""mailto:fin.a.nce.mi.ni.s.t.ry.753@gmail.com"">fin.a.nce.mi.ni.s.t.ry.753@gmail.com</a>
<a href=""mailto:f.i.nan.c.e.m.i.ni.st.r.y7.5.3@gmail.com"">f.i.nan.c.e.m.i.ni.st.r.y7.5.3@gmail.com</a>
<a href=""mailto:finan.c.e.m.inist.r.y.7.53@gmail.com"">finan.c.e.m.inist.r.y.7.53@gmail.com</a>
<a href=""mailto:fi.nanc.e.m.i.nistr.y.7.53@gmail.com"">fi.nanc.e.m.i.nistr.y.7.53@gmail.com</a>
<a href=""mailto:fi.n.an.cem.inist.ry75.3@gmail.com"">fi.n.an.cem.inist.ry75.3@gmail.com</a>
<a href=""mailto:fi.nance.min.i.s.t.r.y.75.3@gmail.com"">fi.nance.min.i.s.t.r.y.75.3@gmail.com</a>
<a href=""mailto:f.i.nance.m.i.ni.s.t.r.y753@gmail.com"">f.i.nance.m.i.ni.s.t.r.y753@gmail.com</a>
<a href=""mailto:fin.an.ce.m.ini.s.t.r.y7.53@gmail.com"">fin.an.ce.m.ini.s.t.r.y7.53@gmail.com</a>
<a href=""mailto:financ.em.i.ni.s.tr.y.7.53@gmail.com"">financ.em.i.ni.s.tr.y.7.53@gmail.com</a>
<a href=""mailto:f.i.n.an.c.e.m.in.i.stry.75.3@gmail.com"">f.i.n.an.c.e.m.in.i.stry.75.3@gmail.com</a>
<a href=""mailto:f.inanc.em.ini.str.y7.53@gmail.com"">f.inanc.em.ini.str.y7.53@gmail.com</a>
<a href=""mailto:f.in.a.n.c.e.m.i.n.ist.ry75.3@gmail.com"">f.in.a.n.c.e.m.i.n.ist.ry75.3@gmail.com</a>
<a href=""mailto:f.in.an.c.e.m.inis.tr.y753@gmail.com"">f.in.an.c.e.m.inis.tr.y753@gmail.com</a>
<a href=""mailto:f.i.nan.ce.mi.nis.try753@gmail.com"">f.i.nan.ce.mi.nis.try753@gmail.com</a>
<a href=""mailto:f.i.n.a.nce.m.inis.t.ry75.3@gmail.com"">f.i.n.a.nce.m.inis.t.ry75.3@gmail.com</a>
<a href=""mailto:f.in.an.c.eministr.y.7.53@gmail.com"">f.in.an.c.eministr.y.7.53@gmail.com</a>
<a href=""mailto:f.i.na.n.cemini.stry.7.53@gmail.com"">f.i.na.n.cemini.stry.7.53@gmail.com</a>
<a href=""mailto:fin.a.nce.m.in.ist.ry7.53@gmail.com"">fin.a.nce.m.in.ist.ry7.53@gmail.com</a>
<a href=""mailto:fin.an.c.e.m.ini.s.t.r.y753@gmail.com"">fin.an.c.e.m.ini.s.t.r.y753@gmail.com</a>
<a href=""mailto:fi.nance.mi.n.istr.y.7.53@gmail.com"">fi.nance.mi.n.istr.y.7.53@gmail.com</a>
<a href=""mailto:fin.an.c.e.m.i.nist.ry753@gmail.com"">fin.an.c.e.m.i.nist.ry753@gmail.com</a>
<a href=""mailto:f.i.n.an.c.e.m.inis.try.75.3@gmail.com"">f.i.n.an.c.e.m.inis.try.75.3@gmail.com</a>
<a href=""mailto:fina.n.c.e.mi.nis.t.r.y.75.3@gmail.com"">fina.n.c.e.mi.nis.t.r.y.75.3@gmail.com</a>
<a href=""mailto:f.i.n.a.n.cem.i.ni.st.r.y.7.5.3@gmail.com"">f.i.n.a.n.cem.i.ni.st.r.y.7.5.3@gmail.com</a>
<a href=""mailto:f.in.a.n.c.emi.ni.s.t.r.y.75.3@gmail.com"">f.in.a.n.c.emi.ni.s.t.r.y.75.3@gmail.com</a>
<a href=""mailto:fin.an.ce.mi.nis.try.7.53@gmail.com"">fin.an.ce.mi.nis.try.7.53@gmail.com</a>
<a href=""mailto:f.ina.nc.e.mi.n.ist.r.y75.3@gmail.com"">f.ina.nc.e.mi.n.ist.r.y75.3@gmail.com</a>
<a href=""mailto:f.i.nan.c.e.m.i.ni.s.t.ry7.53@gmail.com"">f.i.nan.c.e.m.i.ni.s.t.ry7.53@gmail.com</a>
<a href=""mailto:f.in.an.ce.m.in.i.stry75.3@gmail.com"">f.in.an.ce.m.in.i.stry75.3@gmail.com</a>
<a href=""mailto:f.inanc.em.i.nist.ry.7.5.3@gmail.com"">f.inanc.em.i.nist.ry.7.5.3@gmail.com</a>
<a href=""mailto:finan.cemini.s.t.r.y.7.53@gmail.com"">finan.cemini.s.t.r.y.7.53@gmail.com</a>
<a href=""mailto:f.i.n.a.nc.emi.n.i.s.t.ry753@gmail.com"">f.i.n.a.nc.emi.n.i.s.t.ry753@gmail.com</a>
<a href=""mailto:finan.cem.in.i.st.ry.75.3@gmail.com"">finan.cem.in.i.st.ry.75.3@gmail.com</a>
<a href=""mailto:f.in.anc.em.inis.t.ry7.5.3@gmail.com"">f.in.anc.em.inis.t.ry7.5.3@gmail.com</a>
<a href=""mailto:fi.n.anceministry75.3@gmail.com"">fi.n.anceministry75.3@gmail.com</a>
<a href=""mailto:fi.nanc.eminis.try.7.53@gmail.com"">fi.nanc.eminis.try.7.53@gmail.com</a>
<a href=""mailto:f.i.n.an.c.e.minis.t.ry.75.3@gmail.com"">f.i.n.an.c.e.minis.t.ry.75.3@gmail.com</a>
<a href=""mailto:f.i.nanc.e.min.i.stry7.53@gmail.com"">f.i.nanc.e.min.i.stry7.53@gmail.com</a>
<a href=""mailto:fin.a.nc.e.m.in.istr.y7.53@gmail.com"">fin.a.nc.e.m.in.istr.y7.53@gmail.com</a>
<a href=""mailto:f.in.a.n.c.em.in.is.t.r.y.753@gmail.com"">f.in.a.n.c.em.in.is.t.r.y.753@gmail.com</a>
<a href=""mailto:fina.nc.e.m.inis.try753@gmail.com"">fina.nc.e.m.inis.try753@gmail.com</a>
<a href=""mailto:f.ina.n.c.e.m.ini.s.try.75.3@gmail.com"">f.ina.n.c.e.m.ini.s.try.75.3@gmail.com</a>
<a href=""mailto:f.inan.c.e.mi.ni.stry753@gmail.com"">f.inan.c.e.mi.ni.stry753@gmail.com</a>
<a href=""mailto:financ.emin.i.s.t.ry.7.5.3@gmail.com"">financ.emin.i.s.t.ry.7.5.3@gmail.com</a>
<a href=""mailto:fi.n.a.n.c.e.m.i.n.i.s.tr.y75.3@gmail.com"">fi.n.a.n.c.e.m.i.n.i.s.tr.y75.3@gmail.com</a>
<a href=""mailto:fi.n.an.c.em.i.n.istr.y75.3@gmail.com"">fi.n.an.c.em.i.n.istr.y75.3@gmail.com</a>
<a href=""mailto:f.i.nan.cemi.nis.t.r.y75.3@gmail.com"">f.i.nan.cemi.nis.t.r.y75.3@gmail.com</a>
<a href=""mailto:fi.n.ance.minist.ry.75.3@gmail.com"">fi.n.ance.minist.ry.75.3@gmail.com</a>
<a href=""mailto:f.i.na.nc.e.mi.nistr.y.753@gmail.com"">f.i.na.nc.e.mi.nistr.y.753@gmail.com</a>
<a href=""mailto:fin.a.n.c.em.i.ni.str.y753@gmail.com"">fin.a.n.c.em.i.ni.str.y753@gmail.com</a>
<a href=""mailto:f.inan.c.e.mi.nist.r.y.753@gmail.com"">f.inan.c.e.mi.nist.r.y.753@gmail.com</a>
<a href=""mailto:fi.na.n.c.emin.ist.r.y.7.53@gmail.com"">fi.na.n.c.emin.ist.r.y.7.53@gmail.com</a>
<a href=""mailto:finance.m.i.ni.s.tr.y753@gmail.com"">finance.m.i.ni.s.tr.y753@gmail.com</a>
<a href=""mailto:financ.e.m.in.i.s.tr.y.7.53@gmail.com"">financ.e.m.in.i.s.tr.y.7.53@gmail.com</a>
<a href=""mailto:f.in.a.nc.em.in.i.st.r.y.75.3@gmail.com"">f.in.a.nc.em.in.i.st.r.y.75.3@gmail.com</a>
<a href=""mailto:fi.nan.c.e.mini.st.r.y.7.53@gmail.com"">fi.nan.c.e.mini.st.r.y.7.53@gmail.com</a>
<a href=""mailto:finance.mi.n.i.s.tr.y.7.5.3@gmail.com"">finance.mi.n.i.s.tr.y.7.5.3@gmail.com</a>
<a href=""mailto:f.ina.n.ce.min.istry753@gmail.com"">f.ina.n.ce.min.istry753@gmail.com</a>
<a href=""mailto:f.in.anc.em.ini.stry75.3@gmail.com"">f.in.anc.em.ini.stry75.3@gmail.com</a>
<a href=""mailto:f.ina.ncemini.st.ry.753@gmail.com"">f.ina.ncemini.st.ry.753@gmail.com</a>
<a href=""mailto:f.i.nancemi.nis.try753@gmail.com"">f.i.nancemi.nis.try753@gmail.com</a>
<a href=""mailto:f.in.a.n.c.e.mini.stry.7.5.3@gmail.com"">f.in.a.n.c.e.mini.stry.7.5.3@gmail.com</a>
<a href=""mailto:f.i.n.a.nce.m.i.ni.s.t.ry7.5.3@gmail.com"">f.i.n.a.nce.m.i.ni.s.t.ry7.5.3@gmail.com</a>
<a href=""mailto:f.in.an.cem.inist.r.y7.5.3@gmail.com"">f.in.an.cem.inist.r.y7.5.3@gmail.com</a>
<a href=""mailto:fin.anc.e.m.i.ni.s.try753@gmail.com"">fin.anc.e.m.i.ni.s.try753@gmail.com</a>
<a href=""mailto:f.ina.ncemini.s.try75.3@gmail.com"">f.ina.ncemini.s.try75.3@gmail.com</a>
<a href=""mailto:fi.na.n.c.emin.is.t.r.y.7.5.3@gmail.com"">fi.na.n.c.emin.is.t.r.y.7.5.3@gmail.com</a>
<a href=""mailto:finan.ce.min.i.stry7.53@gmail.com"">finan.ce.min.i.stry7.53@gmail.com</a>
<a href=""mailto:fi.n.a.nc.emi.nistr.y7.5.3@gmail.com"">fi.n.a.nc.emi.nistr.y7.5.3@gmail.com</a>
<a href=""mailto:f.ina.nce.m.i.nist.ry.753@gmail.com"">f.ina.nce.m.i.nist.ry.753@gmail.com</a>
<a href=""mailto:fi.n.anc.emin.i.st.r.y75.3@gmail.com"">fi.n.anc.emin.i.st.r.y75.3@gmail.com</a>
<a href=""mailto:fi.nanc.e.m.i.n.i.s.tr.y.7.53@gmail.com"">fi.nanc.e.m.i.n.i.s.tr.y.7.53@gmail.com</a>
<a href=""mailto:f.inan.ce.mi.ni.st.ry.7.5.3@gmail.com"">f.inan.ce.mi.ni.st.ry.7.5.3@gmail.com</a>
<a href=""mailto:fi.n.a.n.c.em.in.istry.75.3@gmail.com"">fi.n.a.n.c.em.in.istry.75.3@gmail.com</a>
<a href=""mailto:f.i.na.nc.emi.nis.tr.y.7.5.3@gmail.com"">f.i.na.nc.emi.nis.tr.y.7.5.3@gmail.com</a>
<a href=""mailto:fin.a.n.cemi.n.i.str.y.7.5.3@gmail.com"">fin.a.n.cemi.n.i.str.y.7.5.3@gmail.com</a>
<a href=""mailto:fin.a.n.ce.mi.ni.s.t.ry.753@gmail.com"">fin.a.n.ce.mi.ni.s.t.ry.753@gmail.com</a>
<a href=""mailto:f.in.an.c.em.i.n.i.s.t.ry.7.53@gmail.com"">f.in.an.c.em.i.n.i.s.t.ry.7.53@gmail.com</a>
<a href=""mailto:f.i.n.an.ce.mi.n.is.t.r.y.753@gmail.com"">f.i.n.an.ce.mi.n.is.t.r.y.753@gmail.com</a>
<a href=""mailto:f.inanc.emini.stry7.53@gmail.com"">f.inanc.emini.stry7.53@gmail.com</a>
<a href=""mailto:fi.na.n.ce.m.i.n.ist.ry.7.5.3@gmail.com"">fi.na.n.ce.m.i.n.ist.ry.7.5.3@gmail.com</a>
<a href=""mailto:finan.ce.m.i.nis.t.ry.75.3@gmail.com"">finan.ce.m.i.nis.t.ry.75.3@gmail.com</a>
<a href=""mailto:f.i.nance.m.i.ni.s.tr.y75.3@gmail.com"">f.i.nance.m.i.ni.s.tr.y75.3@gmail.com</a>
<a href=""mailto:f.i.na.ncem.i.n.istry7.53@gmail.com"">f.i.na.ncem.i.n.istry7.53@gmail.com</a>
<a href=""mailto:f.i.nance.m.in.i.s.t.r.y.753@gmail.com"">f.i.nance.m.in.i.s.t.r.y.753@gmail.com</a>
<a href=""mailto:f.in.a.ncem.in.is.tr.y.7.5.3@gmail.com"">f.in.a.ncem.in.is.tr.y.7.5.3@gmail.com</a>
<a href=""mailto:fi.na.nc.eminis.t.r.y75.3@gmail.com"">fi.na.nc.eminis.t.r.y75.3@gmail.com</a>
<a href=""mailto:f.i.n.a.nce.m.in.i.s.t.r.y7.5.3@gmail.com"">f.i.n.a.nce.m.in.i.s.t.r.y7.5.3@gmail.com</a>
<a href=""mailto:fi.n.a.nc.e.m.i.ni.st.ry.753@gmail.com"">fi.n.a.nc.e.m.i.ni.st.ry.753@gmail.com</a>
<a href=""mailto:f.i.n.a.nc.em.in.i.s.t.r.y.7.5.3@gmail.com"">f.i.n.a.nc.em.in.i.s.t.r.y.7.5.3@gmail.com</a>
<a href=""mailto:fi.n.an.c.e.minis.try7.53@gmail.com"">fi.n.an.c.e.minis.try7.53@gmail.com</a>
<a href=""mailto:fi.nan.c.emin.is.tr.y.753@gmail.com"">fi.nan.c.emin.is.tr.y.753@gmail.com</a>
<a href=""mailto:f.i.nan.c.em.i.nis.t.r.y753@gmail.com"">f.i.nan.c.em.i.nis.t.r.y753@gmail.com</a>
<a href=""mailto:fin.a.nc.em.i.n.i.s.t.r.y7.53@gmail.com"">fin.a.nc.em.i.n.i.s.t.r.y7.53@gmail.com</a>
<a href=""mailto:f.ina.nc.em.i.nis.t.r.y7.5.3@gmail.com"">f.ina.nc.em.i.nis.t.r.y7.5.3@gmail.com</a>
<a href=""mailto:f.inance.m.inis.try.75.3@gmail.com"">f.inance.m.inis.try.75.3@gmail.com</a>
<a href=""mailto:fi.n.a.ncem.ini.st.ry.7.5.3@gmail.com"">fi.n.a.ncem.ini.st.ry.7.5.3@gmail.com</a>
<a href=""mailto:f.i.nan.ce.mi.nist.ry75.3@gmail.com"">f.i.nan.ce.mi.nist.ry75.3@gmail.com</a>
<a href=""mailto:fi.na.nce.m.ini.str.y75.3@gmail.com"">fi.na.nce.m.ini.str.y75.3@gmail.com</a>
<a href=""mailto:f.ina.nc.e.mi.ni.s.tr.y7.53@gmail.com"">f.ina.nc.e.mi.ni.s.tr.y7.53@gmail.com</a>
<a href=""mailto:f.in.an.c.e.minist.r.y753@gmail.com"">f.in.an.c.e.minist.r.y753@gmail.com</a>
<a href=""mailto:f.i.n.a.nc.e.m.in.is.t.r.y.753@gmail.com"">f.i.n.a.nc.e.m.in.is.t.r.y.753@gmail.com</a>
<a href=""mailto:f.i.n.a.n.ce.mi.ni.s.t.r.y.7.53@gmail.com"">f.i.n.a.n.ce.mi.ni.s.t.r.y.7.53@gmail.com</a>
<a href=""mailto:f.in.an.ceministr.y7.53@gmail.com"">f.in.an.ceministr.y7.53@gmail.com</a>
<a href=""mailto:f.i.n.a.nc.e.mi.nis.t.ry7.5.3@gmail.com"">f.i.n.a.nc.e.mi.nis.t.ry7.5.3@gmail.com</a>
<a href=""mailto:fi.na.n.c.e.minist.ry75.3@gmail.com"">fi.na.n.c.e.minist.ry75.3@gmail.com</a>
<a href=""mailto:fina.n.ce.m.i.ni.s.t.r.y.75.3@gmail.com"">fina.n.ce.m.i.ni.s.t.r.y.75.3@gmail.com</a>
<a href=""mailto:fin.an.cem.inistry75.3@gmail.com"">fin.an.cem.inistry75.3@gmail.com</a>
<a href=""mailto:fi.nanc.e.mi.n.i.s.tr.y.7.5.3@gmail.com"">fi.nanc.e.mi.n.i.s.tr.y.7.5.3@gmail.com</a>
<a href=""mailto:fin.a.n.c.emi.n.is.try.75.3@gmail.com"">fin.a.n.c.emi.n.is.try.75.3@gmail.com</a>
<a href=""mailto:f.in.an.cemi.n.ist.r.y75.3@gmail.com"">f.in.an.cemi.n.ist.r.y75.3@gmail.com</a>
<a href=""mailto:fi.nanc.em.in.is.t.ry.75.3@gmail.com"">fi.nanc.em.in.is.t.ry.75.3@gmail.com</a>
<a href=""mailto:f.i.na.nc.em.in.i.s.try753@gmail.com"">f.i.na.nc.em.in.i.s.try753@gmail.com</a>
<a href=""mailto:fina.n.c.e.m.i.n.ist.ry75.3@gmail.com"">fina.n.c.e.m.i.n.ist.ry75.3@gmail.com</a>
<a href=""mailto:finan.cem.inis.tr.y.7.5.3@gmail.com"">finan.cem.inis.tr.y.7.5.3@gmail.com</a>
<a href=""mailto:fin.a.n.ce.m.i.n.ist.r.y.753@gmail.com"">fin.a.n.ce.m.i.n.ist.r.y.753@gmail.com</a>
<a href=""mailto:fina.nc.e.m.i.n.is.tr.y75.3@gmail.com"">fina.nc.e.m.i.n.is.tr.y75.3@gmail.com</a>
<a href=""mailto:fina.n.ce.m.in.ist.ry753@gmail.com"">fina.n.ce.m.in.ist.ry753@gmail.com</a>
<a href=""mailto:f.ina.n.cemini.s.try.7.53@gmail.com"">f.ina.n.cemini.s.try.7.53@gmail.com</a>
<a href=""mailto:fi.na.n.cemi.n.i.stry.7.53@gmail.com"">fi.na.n.cemi.n.i.stry.7.53@gmail.com</a>
<a href=""mailto:f.ina.n.c.em.inistr.y.75.3@gmail.com"">f.ina.n.c.em.inistr.y.75.3@gmail.com</a>
<a href=""mailto:f.ina.nc.e.min.is.t.ry753@gmail.com"">f.ina.nc.e.min.is.t.ry753@gmail.com</a>
<a href=""mailto:fin.a.nce.min.ist.ry.7.5.3@gmail.com"">fin.a.nce.min.ist.ry.7.5.3@gmail.com</a>
<a href=""mailto:fi.na.n.cemin.istry.7.53@gmail.com"">fi.na.n.cemin.istry.7.53@gmail.com</a>
<a href=""mailto:f.i.n.an.ce.min.i.st.ry.7.53@gmail.com"">f.i.n.an.ce.min.i.st.ry.7.53@gmail.com</a>
<a href=""mailto:f.ina.ncemi.n.i.s.tr.y75.3@gmail.com"">f.ina.ncemi.n.i.s.tr.y75.3@gmail.com</a>
<a href=""mailto:fi.n.an.ce.m.inis.t.r.y7.5.3@gmail.com"">fi.n.an.ce.m.inis.t.r.y7.5.3@gmail.com</a>
<a href=""mailto:f.in.a.nc.emi.n.i.s.t.r.y7.53@gmail.com"">f.in.a.nc.emi.n.i.s.t.r.y7.53@gmail.com</a>
<a href=""mailto:f.i.n.a.n.ce.m.in.ist.ry7.53@gmail.com"">f.i.n.a.n.ce.m.in.ist.ry7.53@gmail.com</a>
<a href=""mailto:fi.n.an.cemini.s.tr.y.7.5.3@gmail.com"">fi.n.an.cemini.s.tr.y.7.5.3@gmail.com</a>
<a href=""mailto:fi.na.ncemi.n.i.s.t.r.y.7.5.3@gmail.com"">fi.na.ncemi.n.i.s.t.r.y.7.5.3@gmail.com</a>
<a href=""mailto:f.in.ance.m.i.ni.st.ry7.5.3@gmail.com"">f.in.ance.m.i.ni.st.ry7.5.3@gmail.com</a>
<a href=""mailto:f.inanc.em.in.istr.y75.3@gmail.com"">f.inanc.em.in.istr.y75.3@gmail.com</a>
<a href=""mailto:f.i.na.n.c.e.mi.n.i.s.try75.3@gmail.com"">f.i.na.n.c.e.mi.n.i.s.try75.3@gmail.com</a>
<a href=""mailto:fina.n.c.e.mi.n.ist.ry.753@gmail.com"">fina.n.c.e.mi.n.ist.ry.753@gmail.com</a>
<a href=""mailto:f.i.n.a.n.cem.ini.str.y7.53@gmail.com"">f.i.n.a.n.cem.ini.str.y7.53@gmail.com</a>
<a href=""mailto:f.i.nanc.e.min.is.t.ry.753@gmail.com"">f.i.nanc.e.min.is.t.ry.753@gmail.com</a>
<a href=""mailto:f.i.nan.cem.i.ni.st.r.y753@gmail.com"">f.i.nan.cem.i.ni.st.r.y753@gmail.com</a>
<a href=""mailto:fi.nance.min.i.str.y.7.5.3@gmail.com"">fi.nance.min.i.str.y.7.5.3@gmail.com</a>
<a href=""mailto:f.in.a.nce.m.inis.try.75.3@gmail.com"">f.in.a.nce.m.inis.try.75.3@gmail.com</a>
<a href=""mailto:fi.n.a.n.c.e.mi.ni.str.y.75.3@gmail.com"">fi.n.a.n.c.e.mi.ni.str.y.75.3@gmail.com</a>
<a href=""mailto:fi.na.nc.emi.nis.t.r.y7.5.3@gmail.com"">fi.na.nc.emi.nis.t.r.y7.5.3@gmail.com</a>
<a href=""mailto:fina.nc.em.in.i.st.r.y75.3@gmail.com"">fina.nc.em.in.i.st.r.y75.3@gmail.com</a>
<a href=""mailto:fi.n.anc.e.m.in.ist.ry.7.53@gmail.com"">fi.n.anc.e.m.in.ist.ry.7.53@gmail.com</a>
<a href=""mailto:f.inan.ce.m.i.n.is.t.r.y75.3@gmail.com"">f.inan.ce.m.i.n.is.t.r.y75.3@gmail.com</a>
<a href=""mailto:f.i.na.n.ce.mi.nis.t.r.y7.53@gmail.com"">f.i.na.n.ce.mi.nis.t.r.y7.53@gmail.com</a>
<a href=""mailto:f.inan.c.emi.n.i.s.t.r.y75.3@gmail.com"">f.inan.c.emi.n.i.s.t.r.y75.3@gmail.com</a>
<a href=""mailto:f.i.nancem.ini.stry753@gmail.com"">f.i.nancem.ini.stry753@gmail.com</a>
<a href=""mailto:fi.na.n.ce.m.i.nis.try75.3@gmail.com"">fi.na.n.ce.m.i.nis.try75.3@gmail.com</a>
<a href=""mailto:fi.nanc.e.m.in.ist.ry.75.3@gmail.com"">fi.nanc.e.m.in.ist.ry.75.3@gmail.com</a>
<a href=""mailto:f.inan.c.e.minist.r.y753@gmail.com"">f.inan.c.e.minist.r.y753@gmail.com</a>
<a href=""mailto:f.in.an.c.emi.ni.st.ry.75.3@gmail.com"">f.in.an.c.emi.ni.st.ry.75.3@gmail.com</a>
<a href=""mailto:fi.na.nce.min.i.str.y.75.3@gmail.com"">fi.na.nce.min.i.str.y.75.3@gmail.com</a>
<a href=""mailto:f.in.an.cem.in.ist.ry75.3@gmail.com"">f.in.an.cem.in.ist.ry75.3@gmail.com</a>
<a href=""mailto:f.in.a.nce.m.i.n.istry7.5.3@gmail.com"">f.in.a.nce.m.i.n.istry7.5.3@gmail.com</a>
<a href=""mailto:f.in.an.c.em.in.i.st.ry.7.5.3@gmail.com"">f.in.an.c.em.in.i.st.ry.7.5.3@gmail.com</a>
<a href=""mailto:fi.n.a.nce.mi.n.i.st.r.y75.3@gmail.com"">fi.n.a.nce.mi.n.i.st.r.y75.3@gmail.com</a>
<a href=""mailto:fin.a.nce.minis.tr.y7.5.3@gmail.com"">fin.a.nce.minis.tr.y7.5.3@gmail.com</a>
<a href=""mailto:f.i.n.an.c.eminist.r.y75.3@gmail.com"">f.i.n.an.c.eminist.r.y75.3@gmail.com</a>
<a href=""mailto:f.ina.n.cemi.ni.st.ry7.5.3@gmail.com"">f.ina.n.cemi.ni.st.ry7.5.3@gmail.com</a>
<a href=""mailto:fina.nce.m.in.i.s.try.7.53@gmail.com"">fina.nce.m.in.i.s.try.7.53@gmail.com</a>
<a href=""mailto:f.in.anc.e.m.in.is.tr.y75.3@gmail.com"">f.in.anc.e.m.in.is.tr.y75.3@gmail.com</a>
<a href=""mailto:f.i.n.a.n.c.emin.i.s.try7.5.3@gmail.com"">f.i.n.a.n.c.emin.i.s.try7.5.3@gmail.com</a>
<a href=""mailto:fi.n.anceminis.t.r.y753@gmail.com"">fi.n.anceminis.t.r.y753@gmail.com</a>
<a href=""mailto:f.ina.n.cem.i.n.i.str.y.75.3@gmail.com"">f.ina.n.cem.i.n.i.str.y.75.3@gmail.com</a>
<a href=""mailto:fi.n.an.cem.i.n.is.t.ry.75.3@gmail.com"">fi.n.an.cem.i.n.is.t.ry.75.3@gmail.com</a>
<a href=""mailto:f.inance.m.in.i.s.try.753@gmail.com"">f.inance.m.in.i.s.try.753@gmail.com</a>
<a href=""mailto:f.in.ancem.i.ni.s.t.ry7.5.3@gmail.com"">f.in.ancem.i.ni.s.t.ry7.5.3@gmail.com</a>
<a href=""mailto:fi.n.a.nc.e.mi.nist.r.y7.5.3@gmail.com"">fi.n.a.nc.e.mi.nist.r.y7.5.3@gmail.com</a>
<a href=""mailto:fina.n.c.emi.nist.ry.753@gmail.com"">fina.n.c.emi.nist.ry.753@gmail.com</a>
<a href=""mailto:fi.na.nc.e.m.inis.t.ry753@gmail.com"">fi.na.nc.e.m.inis.t.ry753@gmail.com</a>
<a href=""mailto:f.ina.n.c.em.in.is.try7.53@gmail.com"">f.ina.n.c.em.in.is.try7.53@gmail.com</a>
<a href=""mailto:fina.n.c.e.min.i.s.tr.y.753@gmail.com"">fina.n.c.e.min.i.s.tr.y.753@gmail.com</a>
<a href=""mailto:fin.a.ncem.i.n.istry.7.5.3@gmail.com"">fin.a.ncem.i.n.istry.7.5.3@gmail.com</a>
<a href=""mailto:fi.nancem.i.ni.st.ry75.3@gmail.com"">fi.nancem.i.ni.st.ry75.3@gmail.com</a>
<a href=""mailto:fina.nce.m.i.ni.s.t.r.y753@gmail.com"">fina.nce.m.i.ni.s.t.r.y753@gmail.com</a>
<a href=""mailto:fin.a.nce.minis.try753@gmail.com"">fin.a.nce.minis.try753@gmail.com</a>
<a href=""mailto:f.in.ance.m.i.nis.tr.y.753@gmail.com"">f.in.ance.m.i.nis.tr.y.753@gmail.com</a>
<a href=""mailto:fin.a.n.ce.mi.n.i.s.tr.y.7.5.3@gmail.com"">fin.a.n.ce.mi.n.i.s.tr.y.7.5.3@gmail.com</a>
<a href=""mailto:f.i.n.ance.m.i.n.is.try7.53@gmail.com"">f.i.n.ance.m.i.n.is.try7.53@gmail.com</a>
<a href=""mailto:fi.na.ncemi.nis.t.r.y75.3@gmail.com"">fi.na.ncemi.nis.t.r.y75.3@gmail.com</a>
<a href=""mailto:f.i.nanc.emin.i.st.r.y75.3@gmail.com"">f.i.nanc.emin.i.st.r.y75.3@gmail.com</a>
<a href=""mailto:f.i.n.an.c.em.i.n.i.stry753@gmail.com"">f.i.n.an.c.em.i.n.i.stry753@gmail.com</a>
<a href=""mailto:fin.ance.m.in.i.st.r.y.7.53@gmail.com"">fin.ance.m.in.i.st.r.y.7.53@gmail.com</a>
<a href=""mailto:fi.na.n.ce.min.i.s.t.r.y7.5.3@gmail.com"">fi.na.n.ce.min.i.s.t.r.y7.5.3@gmail.com</a>
<a href=""mailto:f.inancemi.n.i.st.ry753@gmail.com"">f.inancemi.n.i.st.ry753@gmail.com</a>
<a href=""mailto:f.i.nan.cemi.n.istr.y.753@gmail.com"">f.i.nan.cemi.n.istr.y.753@gmail.com</a>
<a href=""mailto:fi.nan.ce.mi.nist.ry.753@gmail.com"">fi.nan.ce.mi.nist.ry.753@gmail.com</a>
<a href=""mailto:fin.a.nc.emi.n.i.s.try7.5.3@gmail.com"">fin.a.nc.emi.n.i.s.try7.5.3@gmail.com</a>
<a href=""mailto:f.in.a.ncemini.st.r.y.7.53@gmail.com"">f.in.a.ncemini.st.r.y.7.53@gmail.com</a>
<a href=""mailto:f.inanc.e.m.ini.stry.7.53@gmail.com"">f.inanc.e.m.ini.stry.7.53@gmail.com</a>
<a href=""mailto:fin.a.nc.e.mi.n.is.tr.y.7.5.3@gmail.com"">fin.a.nc.e.mi.n.is.tr.y.7.5.3@gmail.com</a>
<a href=""mailto:f.i.nancem.inis.t.r.y.75.3@gmail.com"">f.i.nancem.inis.t.r.y.75.3@gmail.com</a>
<a href=""mailto:sykycoglobalexpress@gmail.com"">sykycoglobalexpress@gmail.com</a>
<a href=""mailto:syky.c.o.gl.o.b.a.l.e.xpr.es.s@gmail.com"">syky.c.o.gl.o.b.a.l.e.xpr.es.s@gmail.com</a>
<a href=""mailto:s.yky.co.g.l.ob.a.lex.p.r.ess@gmail.com"">s.yky.co.g.l.ob.a.lex.p.r.ess@gmail.com</a>
<a href=""mailto:sy.k.y.c.o.gl.o.b.a.l.exp.r.e.s.s@gmail.com"">sy.k.y.c.o.gl.o.b.a.l.exp.r.e.s.s@gmail.com</a>
<a href=""mailto:s.y.ky.c.o.globale.x.pre.ss@gmail.com"">s.y.ky.c.o.globale.x.pre.ss@gmail.com</a>
<a href=""mailto:syk.y.c.ogl.ob.al.e.x.pre.ss@gmail.com"">syk.y.c.ogl.ob.al.e.x.pre.ss@gmail.com</a>
<a href=""mailto:syky.c.o.glo.bal.e.xpres.s@gmail.com"">syky.c.o.glo.bal.e.xpres.s@gmail.com</a>
<a href=""mailto:s.y.ky.c.o.g.l.ob.ale.x.p.re.ss@gmail.com"">s.y.ky.c.o.g.l.ob.ale.x.p.re.ss@gmail.com</a>
<a href=""mailto:s.yk.yc.o.gl.ob.al.exp.res.s@gmail.com"">s.yk.yc.o.gl.ob.al.exp.res.s@gmail.com</a>
<a href=""mailto:s.yk.y.c.o.g.l.o.b.al.exp.r.e.s.s@gmail.com"">s.yk.y.c.o.g.l.o.b.al.exp.r.e.s.s@gmail.com</a>
<a href=""mailto:syk.yco.g.lo.b.ale.x.pr.es.s@gmail.com"">syk.yco.g.lo.b.ale.x.pr.es.s@gmail.com</a>
<a href=""mailto:syk.yco.gl.ob.ale.x.p.r.es.s@gmail.com"">syk.yco.gl.ob.ale.x.p.r.es.s@gmail.com</a>
<a href=""mailto:s.yk.yc.o.g.lo.b.a.le.x.pre.s.s@gmail.com"">s.yk.yc.o.g.lo.b.a.le.x.pre.s.s@gmail.com</a>
<a href=""mailto:syky.c.o.g.l.ob.a.l.ex.p.re.ss@gmail.com"">syky.c.o.g.l.ob.a.l.ex.p.re.ss@gmail.com</a>
<a href=""mailto:s.y.k.y.c.og.l.oba.l.e.x.p.r.e.s.s@gmail.com"">s.y.k.y.c.og.l.oba.l.e.x.p.r.e.s.s@gmail.com</a>
<a href=""mailto:s.yky.c.o.g.lo.ba.l.e.x.pr.es.s@gmail.com"">s.yky.c.o.g.lo.ba.l.e.x.pr.es.s@gmail.com</a>
<a href=""mailto:sykycog.loba.l.e.xp.ress@gmail.com"">sykycog.loba.l.e.xp.ress@gmail.com</a>
<a href=""mailto:s.y.k.yc.oglo.b.a.l.e.x.p.r.e.ss@gmail.com"">s.y.k.yc.oglo.b.a.l.e.x.p.r.e.ss@gmail.com</a>
<a href=""mailto:s.yk.yc.o.g.l.o.b.a.lex.p.ress@gmail.com"">s.yk.yc.o.g.l.o.b.a.lex.p.ress@gmail.com</a>
<a href=""mailto:s.yky.co.gl.o.balex.p.res.s@gmail.com"">s.yky.co.gl.o.balex.p.res.s@gmail.com</a>
<a href=""mailto:sy.k.y.cog.lob.ale.xpr.es.s@gmail.com"">sy.k.y.cog.lob.ale.xpr.es.s@gmail.com</a>
<a href=""mailto:sy.kyco.gl.obal.e.x.pre.s.s@gmail.com"">sy.kyco.gl.obal.e.x.pre.s.s@gmail.com</a>
<a href=""mailto:s.yky.c.o.gl.o.ba.l.e.x.pres.s@gmail.com"">s.yky.c.o.gl.o.ba.l.e.x.pres.s@gmail.com</a>
<a href=""mailto:s.yk.ycoglo.ba.l.e.x.p.ress@gmail.com"">s.yk.ycoglo.ba.l.e.x.p.ress@gmail.com</a>
<a href=""mailto:s.yk.y.cogl.o.balexp.r.ess@gmail.com"">s.yk.y.cogl.o.balexp.r.ess@gmail.com</a>
<a href=""mailto:sy.k.y.c.o.g.lob.a.le.x.p.re.s.s@gmail.com"">sy.k.y.c.o.g.lob.a.le.x.p.re.s.s@gmail.com</a>
<a href=""mailto:syk.yc.o.g.lo.b.ale.xpres.s@gmail.com"">syk.yc.o.g.lo.b.ale.xpres.s@gmail.com</a>
<a href=""mailto:s.y.k.y.c.o.gl.ob.al.ex.press@gmail.com"">s.y.k.y.c.o.gl.ob.al.ex.press@gmail.com</a>
<a href=""mailto:sy.k.y.coglob.a.l.e.xp.r.es.s@gmail.com"">sy.k.y.coglob.a.l.e.xp.r.es.s@gmail.com</a>
<a href=""mailto:s.y.ky.c.ogl.o.b.al.ex.pre.ss@gmail.com"">s.y.ky.c.ogl.o.b.al.ex.pre.ss@gmail.com</a>
<a href=""mailto:sy.k.yc.og.lobalex.press@gmail.com"">sy.k.yc.og.lobalex.press@gmail.com</a>
<a href=""mailto:sy.ky.co.g.l.o.ba.l.e.xp.r.ess@gmail.com"">sy.ky.co.g.l.o.ba.l.e.xp.r.ess@gmail.com</a>
<a href=""mailto:sy.kycogl.ob.a.l.expre.s.s@gmail.com"">sy.kycogl.ob.a.l.expre.s.s@gmail.com</a>
<a href=""mailto:sykyco.g.lo.bal.exp.r.ess@gmail.com"">sykyco.g.lo.bal.exp.r.ess@gmail.com</a>
<a href=""mailto:s.y.kyc.oglo.ba.lexp.re.s.s@gmail.com"">s.y.kyc.oglo.ba.lexp.re.s.s@gmail.com</a>
<a href=""mailto:sy.k.yc.o.g.l.o.b.a.l.e.xpr.es.s@gmail.com"">sy.k.yc.o.g.l.o.b.a.l.e.xpr.es.s@gmail.com</a>
<a href=""mailto:s.y.k.yco.g.lo.ba.l.e.xp.ress@gmail.com"">s.y.k.yco.g.lo.ba.l.e.xp.ress@gmail.com</a>
<a href=""mailto:sy.k.ycogl.obal.e.xpr.e.ss@gmail.com"">sy.k.ycogl.obal.e.xpr.e.ss@gmail.com</a>
<a href=""mailto:syk.y.c.o.gl.obale.x.press@gmail.com"">syk.y.c.o.gl.obale.x.press@gmail.com</a>
<a href=""mailto:s.yk.yc.o.g.l.o.b.a.le.xp.re.ss@gmail.com"">s.yk.yc.o.g.l.o.b.a.le.xp.re.ss@gmail.com</a>
<a href=""mailto:sy.ky.co.glob.ale.x.p.r.ess@gmail.com"">sy.ky.co.glob.ale.x.p.r.ess@gmail.com</a>
<a href=""mailto:sykyc.o.gl.o.ba.l.exp.r.ess@gmail.com"">sykyc.o.gl.o.ba.l.exp.r.ess@gmail.com</a>
<a href=""mailto:sykyc.o.glob.a.l.expr.es.s@gmail.com"">sykyc.o.glob.a.l.expr.es.s@gmail.com</a>
<a href=""mailto:s.y.ky.cog.lobalexpr.ess@gmail.com"">s.y.ky.cog.lobalexpr.ess@gmail.com</a>
<a href=""mailto:s.y.kycogl.oba.lexpr.es.s@gmail.com"">s.y.kycogl.oba.lexpr.es.s@gmail.com</a>
<a href=""mailto:sykycog.l.obal.e.xp.ress@gmail.com"">sykycog.l.obal.e.xp.ress@gmail.com</a>
<a href=""mailto:sy.k.ycogl.o.b.a.lexp.r.e.ss@gmail.com"">sy.k.ycogl.o.b.a.lexp.r.e.ss@gmail.com</a>
<a href=""mailto:sy.k.ycog.lob.a.l.e.xp.r.e.s.s@gmail.com"">sy.k.ycog.lob.a.l.e.xp.r.e.s.s@gmail.com</a>
<a href=""mailto:syk.yc.ogl.o.ba.le.xpr.es.s@gmail.com"">syk.yc.ogl.o.ba.le.xpr.es.s@gmail.com</a>
<a href=""mailto:sy.ky.c.oglobal.ex.p.res.s@gmail.com"">sy.ky.c.oglobal.ex.p.res.s@gmail.com</a>
<a href=""mailto:sykyc.o.gl.o.b.al.e.xp.r.es.s@gmail.com"">sykyc.o.gl.o.b.al.e.xp.r.es.s@gmail.com</a>
<a href=""mailto:s.yk.yc.og.l.o.ba.le.xpr.es.s@gmail.com"">s.yk.yc.og.l.o.ba.le.xpr.es.s@gmail.com</a>
<a href=""mailto:syk.y.c.ogl.ob.ale.x.pr.e.ss@gmail.com"">syk.y.c.ogl.ob.ale.x.pr.e.ss@gmail.com</a>
<a href=""mailto:sy.kycog.lo.ba.lexp.r.e.ss@gmail.com"">sy.kycog.lo.ba.lexp.r.e.ss@gmail.com</a>
<a href=""mailto:s.y.ky.c.o.g.l.ob.a.l.e.x.pr.e.ss@gmail.com"">s.y.ky.c.o.g.l.ob.a.l.e.x.pr.e.ss@gmail.com</a>
<a href=""mailto:s.y.k.yc.oglo.bal.expr.ess@gmail.com"">s.y.k.yc.oglo.bal.expr.ess@gmail.com</a>
<a href=""mailto:s.yk.yco.g.l.o.balex.p.r.e.ss@gmail.com"">s.yk.yco.g.l.o.balex.p.r.e.ss@gmail.com</a>
<a href=""mailto:syky.c.ogl.oba.l.e.x.pr.e.ss@gmail.com"">syky.c.ogl.oba.l.e.x.pr.e.ss@gmail.com</a>
<a href=""mailto:s.y.kyc.ogl.o.b.al.ex.p.r.e.s.s@gmail.com"">s.y.kyc.ogl.o.b.al.ex.p.r.e.s.s@gmail.com</a>
<a href=""mailto:s.y.kyco.gl.o.b.al.ex.pr.e.ss@gmail.com"">s.y.kyco.gl.o.b.al.ex.pr.e.ss@gmail.com</a>
<a href=""mailto:s.ykyc.og.loba.l.ex.p.res.s@gmail.com"">s.ykyc.og.loba.l.ex.p.res.s@gmail.com</a>
<a href=""mailto:s.ykycoglo.ba.lex.pr.es.s@gmail.com"">s.ykycoglo.ba.lex.pr.es.s@gmail.com</a>
<a href=""mailto:s.y.k.ycogl.o.b.alexpr.es.s@gmail.com"">s.y.k.ycogl.o.b.alexpr.es.s@gmail.com</a>
<a href=""mailto:sy.kyc.ogl.o.b.ale.x.pr.e.s.s@gmail.com"">sy.kyc.ogl.o.b.ale.x.pr.e.s.s@gmail.com</a>
<a href=""mailto:sy.ky.c.o.gl.o.b.a.le.x.p.re.s.s@gmail.com"">sy.ky.c.o.gl.o.b.a.le.x.p.re.s.s@gmail.com</a>
<a href=""mailto:s.y.k.yco.g.l.o.bal.ex.pr.e.s.s@gmail.com"">s.y.k.yco.g.l.o.bal.ex.pr.e.s.s@gmail.com</a>
<a href=""mailto:syky.cogl.ob.alexp.re.s.s@gmail.com"">syky.cogl.ob.alexp.re.s.s@gmail.com</a>
<a href=""mailto:syky.cog.lo.balexp.re.ss@gmail.com"">syky.cog.lo.balexp.re.ss@gmail.com</a>
<a href=""mailto:s.y.k.yc.og.lobalexp.r.e.ss@gmail.com"">s.y.k.yc.og.lobalexp.r.e.ss@gmail.com</a>
<a href=""mailto:s.y.kyco.gl.o.b.a.le.xpres.s@gmail.com"">s.y.kyco.gl.o.b.a.le.xpres.s@gmail.com</a>
<a href=""mailto:s.y.kyc.ogl.o.b.a.lexpr.es.s@gmail.com"">s.y.kyc.ogl.o.b.a.lexpr.es.s@gmail.com</a>
<a href=""mailto:sy.ky.c.og.loba.lex.p.r.e.ss@gmail.com"">sy.ky.c.og.loba.lex.p.r.e.ss@gmail.com</a>
<a href=""mailto:s.y.k.yc.og.l.ob.a.lex.p.r.e.ss@gmail.com"">s.y.k.yc.og.l.ob.a.lex.p.r.e.ss@gmail.com</a>
<a href=""mailto:syk.y.c.ogl.o.balex.pres.s@gmail.com"">syk.y.c.ogl.o.balex.pres.s@gmail.com</a>
<a href=""mailto:s.y.k.ycoglo.b.a.lexpre.s.s@gmail.com"">s.y.k.ycoglo.b.a.lexpre.s.s@gmail.com</a>
<a href=""mailto:sy.kycog.lobale.x.p.ress@gmail.com"">sy.kycog.lobale.x.p.ress@gmail.com</a>
<a href=""mailto:s.y.kyco.gl.o.balexpr.e.ss@gmail.com"">s.y.kyco.gl.o.balexpr.e.ss@gmail.com</a>
<a href=""mailto:sykyco.g.l.ob.a.l.expres.s@gmail.com"">sykyco.g.l.ob.a.l.expres.s@gmail.com</a>
<a href=""mailto:sykycog.lo.b.a.l.e.x.p.res.s@gmail.com"">sykycog.lo.b.a.l.e.x.p.res.s@gmail.com</a>
<a href=""mailto:s.yk.y.coglo.ba.l.ex.p.r.es.s@gmail.com"">s.yk.y.coglo.ba.l.ex.p.r.es.s@gmail.com</a>
<a href=""mailto:s.y.k.y.c.oglob.a.le.x.p.ress@gmail.com"">s.y.k.y.c.oglob.a.le.x.p.ress@gmail.com</a>
<a href=""mailto:sy.ky.c.oglo.ba.lex.p.re.ss@gmail.com"">sy.ky.c.oglo.ba.lex.p.re.ss@gmail.com</a>
<a href=""mailto:sy.ky.c.o.g.lo.bal.e.x.pre.ss@gmail.com"">sy.ky.c.o.g.lo.bal.e.x.pre.ss@gmail.com</a>
<a href=""mailto:sy.k.y.co.g.loba.l.expre.s.s@gmail.com"">sy.k.y.co.g.loba.l.expre.s.s@gmail.com</a>
<a href=""mailto:sy.k.yc.og.lo.bale.x.pr.e.s.s@gmail.com"">sy.k.yc.og.lo.bale.x.pr.e.s.s@gmail.com</a>
<a href=""mailto:sy.k.ycog.l.o.b.alex.pr.e.s.s@gmail.com"">sy.k.ycog.l.o.b.alex.pr.e.s.s@gmail.com</a>
<a href=""mailto:syk.ycog.lo.b.a.lex.p.r.e.s.s@gmail.com"">syk.ycog.lo.b.a.lex.p.r.e.s.s@gmail.com</a>
<a href=""mailto:s.y.k.yco.gl.ob.al.ex.press@gmail.com"">s.y.k.yco.gl.ob.al.ex.press@gmail.com</a>
<a href=""mailto:sy.ky.c.o.glob.ale.x.p.re.ss@gmail.com"">sy.ky.c.o.glob.ale.x.p.re.ss@gmail.com</a>
<a href=""mailto:syky.c.o.gl.oba.le.xp.res.s@gmail.com"">syky.c.o.gl.oba.le.xp.res.s@gmail.com</a>
<a href=""mailto:s.y.kyc.oglo.bal.e.x.p.r.es.s@gmail.com"">s.y.kyc.oglo.bal.e.x.p.r.es.s@gmail.com</a>
<a href=""mailto:sykyc.ogloba.le.x.p.r.es.s@gmail.com"">sykyc.ogloba.le.x.p.r.es.s@gmail.com</a>
<a href=""mailto:s.y.ky.coglo.b.a.l.e.xp.r.es.s@gmail.com"">s.y.ky.coglo.b.a.l.e.xp.r.es.s@gmail.com</a>
<a href=""mailto:s.y.k.y.co.g.lobale.xp.r.e.ss@gmail.com"">s.y.k.y.co.g.lobale.xp.r.e.ss@gmail.com</a>
<a href=""mailto:syk.yc.ogl.o.b.a.l.ex.pre.s.s@gmail.com"">syk.yc.ogl.o.b.a.l.ex.pre.s.s@gmail.com</a>
<a href=""mailto:sykyc.o.gl.o.ba.l.expr.e.ss@gmail.com"">sykyc.o.gl.o.ba.l.expr.e.ss@gmail.com</a>
<a href=""mailto:sy.ky.co.glo.bal.ex.pr.e.ss@gmail.com"">sy.ky.co.glo.bal.ex.pr.e.ss@gmail.com</a>
<a href=""mailto:s.yk.y.cog.l.o.b.a.le.xp.r.ess@gmail.com"">s.yk.y.cog.l.o.b.a.le.xp.r.ess@gmail.com</a>
<a href=""mailto:s.ykyc.o.g.l.o.b.a.le.x.p.re.ss@gmail.com"">s.ykyc.o.g.l.o.b.a.le.x.p.re.ss@gmail.com</a>
<a href=""mailto:s.yk.y.c.o.g.lob.a.l.ex.p.r.es.s@gmail.com"">s.yk.y.c.o.g.lob.a.l.ex.p.r.es.s@gmail.com</a>
<a href=""mailto:s.y.kycog.lo.ba.l.exp.r.ess@gmail.com"">s.y.kycog.lo.ba.l.exp.r.ess@gmail.com</a>
<a href=""mailto:sykyco.gl.obalex.p.res.s@gmail.com"">sykyco.gl.obalex.p.res.s@gmail.com</a>
<a href=""mailto:s.yk.y.cogloba.lexp.r.e.ss@gmail.com"">s.yk.y.cogloba.lexp.r.e.ss@gmail.com</a>
<a href=""mailto:s.y.ky.cog.l.obal.ex.p.re.ss@gmail.com"">s.y.ky.cog.l.obal.ex.p.re.ss@gmail.com</a>
<a href=""mailto:s.y.k.yc.o.globale.xpre.ss@gmail.com"">s.y.k.yc.o.globale.xpre.ss@gmail.com</a>
<a href=""mailto:s.y.k.yc.oglo.bale.x.pr.e.ss@gmail.com"">s.y.k.yc.oglo.bale.x.pr.e.ss@gmail.com</a>
<a href=""mailto:s.y.k.y.c.o.gl.obale.xpr.e.ss@gmail.com"">s.y.k.y.c.o.gl.obale.xpr.e.ss@gmail.com</a>
<a href=""mailto:s.yky.coglo.b.a.l.exp.r.e.ss@gmail.com"">s.yky.coglo.b.a.l.exp.r.e.ss@gmail.com</a>
<a href=""mailto:sy.k.ycog.l.obal.ex.p.res.s@gmail.com"">sy.k.ycog.l.obal.ex.p.res.s@gmail.com</a>
<a href=""mailto:s.yk.y.cog.lobal.express@gmail.com"">s.yk.y.cog.lobal.express@gmail.com</a>
<a href=""mailto:s.ykycoglo.b.a.le.xpre.ss@gmail.com"">s.ykycoglo.b.a.le.xpre.ss@gmail.com</a>
<a href=""mailto:s.y.kyc.o.g.l.ob.a.le.xp.r.ess@gmail.com"">s.y.kyc.o.g.l.ob.a.le.xp.r.ess@gmail.com</a>
<a href=""mailto:sy.k.yc.o.g.l.o.bal.e.xp.r.e.ss@gmail.com"">sy.k.yc.o.g.l.o.bal.e.xp.r.e.ss@gmail.com</a>
<a href=""mailto:sy.ky.c.og.l.ob.alex.p.r.e.s.s@gmail.com"">sy.ky.c.og.l.ob.alex.p.r.e.s.s@gmail.com</a>
<a href=""mailto:sykyc.oglo.ba.lexp.re.ss@gmail.com"">sykyc.oglo.ba.lexp.re.ss@gmail.com</a>
<a href=""mailto:s.yk.y.coglo.bale.xpre.ss@gmail.com"">s.yk.y.coglo.bale.xpre.ss@gmail.com</a>
<a href=""mailto:s.yky.c.og.loba.le.x.pr.ess@gmail.com"">s.yky.c.og.loba.le.x.pr.ess@gmail.com</a>
<a href=""mailto:s.ykyc.oglob.ale.xpre.ss@gmail.com"">s.ykyc.oglob.ale.xpre.ss@gmail.com</a>
<a href=""mailto:s.ykyco.gl.obale.xpr.e.ss@gmail.com"">s.ykyco.gl.obale.xpr.e.ss@gmail.com</a>
<a href=""mailto:syk.yc.o.glo.ba.l.e.x.pr.ess@gmail.com"">syk.yc.o.glo.ba.l.e.x.pr.ess@gmail.com</a>
<a href=""mailto:s.y.kycoglobale.xpr.es.s@gmail.com"">s.y.kycoglobale.xpr.es.s@gmail.com</a>
<a href=""mailto:syky.co.g.l.oba.l.ex.p.re.s.s@gmail.com"">syky.co.g.l.oba.l.ex.p.re.s.s@gmail.com</a>
<a href=""mailto:s.y.kyc.og.l.ob.al.exp.ress@gmail.com"">s.y.kyc.og.l.ob.al.exp.ress@gmail.com</a>
<a href=""mailto:s.ykyco.glo.ba.lexpr.es.s@gmail.com"">s.ykyco.glo.ba.lexpr.es.s@gmail.com</a>
<a href=""mailto:s.y.kycogl.o.b.ale.x.p.re.s.s@gmail.com"">s.y.kycogl.o.b.ale.x.p.re.s.s@gmail.com</a>
<a href=""mailto:s.yky.cogl.o.b.a.l.ex.press@gmail.com"">s.yky.cogl.o.b.a.l.ex.press@gmail.com</a>
<a href=""mailto:sykyc.o.glo.bal.e.xp.res.s@gmail.com"">sykyc.o.glo.bal.e.xp.res.s@gmail.com</a>
<a href=""mailto:s.yk.yc.og.l.o.ba.l.e.xpres.s@gmail.com"">s.yk.yc.og.l.o.ba.l.e.xpres.s@gmail.com</a>
<a href=""mailto:syk.y.co.gl.o.ba.l.e.xp.r.ess@gmail.com"">syk.y.co.gl.o.ba.l.e.xp.r.ess@gmail.com</a>
<a href=""mailto:sy.ky.co.gl.oba.l.ex.pr.es.s@gmail.com"">sy.ky.co.gl.oba.l.ex.pr.es.s@gmail.com</a>
<a href=""mailto:s.y.ky.co.g.lo.bal.e.x.pr.e.ss@gmail.com"">s.y.ky.co.g.lo.bal.e.x.pr.e.ss@gmail.com</a>
<a href=""mailto:s.y.k.y.co.g.l.obalex.p.r.e.ss@gmail.com"">s.y.k.y.co.g.l.obalex.p.r.e.ss@gmail.com</a>
<a href=""mailto:s.yk.y.cogl.ob.al.e.x.pr.es.s@gmail.com"">s.yk.y.cogl.ob.al.e.x.pr.es.s@gmail.com</a>
<a href=""mailto:s.y.k.yco.g.lob.alexp.r.e.s.s@gmail.com"">s.y.k.yco.g.lob.alexp.r.e.s.s@gmail.com</a>
<a href=""mailto:s.ykyc.o.glob.alex.pre.s.s@gmail.com"">s.ykyc.o.glob.alex.pre.s.s@gmail.com</a>
<a href=""mailto:s.y.k.yco.glo.b.a.le.xpre.ss@gmail.com"">s.y.k.yco.glo.b.a.le.xpre.ss@gmail.com</a>
<a href=""mailto:s.yky.coglo.b.a.lex.p.r.e.ss@gmail.com"">s.yky.coglo.b.a.lex.p.r.e.ss@gmail.com</a>
<a href=""mailto:syk.y.c.o.g.l.ob.alexp.re.s.s@gmail.com"">syk.y.c.o.g.l.ob.alexp.re.s.s@gmail.com</a>
<a href=""mailto:syk.yc.og.lo.b.a.l.exp.r.e.ss@gmail.com"">syk.yc.og.lo.b.a.l.exp.r.e.ss@gmail.com</a>
<a href=""mailto:sy.k.y.co.globa.l.e.xpr.e.s.s@gmail.com"">sy.k.y.co.globa.l.e.xpr.e.s.s@gmail.com</a>
<a href=""mailto:s.yk.yc.o.g.lob.a.lex.p.r.ess@gmail.com"">s.yk.yc.o.g.lob.a.lex.p.r.ess@gmail.com</a>
<a href=""mailto:s.y.k.yc.ogl.o.ba.lex.pr.e.s.s@gmail.com"">s.y.k.yc.ogl.o.ba.lex.pr.e.s.s@gmail.com</a>
<a href=""mailto:s.yky.coglo.ba.lex.press@gmail.com"">s.yky.coglo.ba.lex.press@gmail.com</a>
<a href=""mailto:syk.y.c.og.loba.le.x.p.re.s.s@gmail.com"">syk.y.c.og.loba.le.x.p.re.s.s@gmail.com</a>
<a href=""mailto:sy.k.yc.og.l.ob.al.e.x.p.r.e.s.s@gmail.com"">sy.k.yc.og.l.ob.al.e.x.p.r.e.s.s@gmail.com</a>
<a href=""mailto:syk.yc.o.g.lobale.xpr.e.ss@gmail.com"">syk.yc.o.g.lobale.xpr.e.ss@gmail.com</a>
<a href=""mailto:sy.k.yc.oglo.bal.e.x.pre.ss@gmail.com"">sy.k.yc.oglo.bal.e.x.pre.ss@gmail.com</a>
<a href=""mailto:syk.y.c.o.glob.ale.xpr.ess@gmail.com"">syk.y.c.o.glob.ale.xpr.ess@gmail.com</a>
<a href=""mailto:s.yk.ycoglo.b.a.l.ex.p.re.ss@gmail.com"">s.yk.ycoglo.b.a.l.ex.p.re.ss@gmail.com</a>
<a href=""mailto:syk.yco.g.l.oba.l.exp.r.e.s.s@gmail.com"">syk.yco.g.l.oba.l.exp.r.e.s.s@gmail.com</a>
<a href=""mailto:s.y.k.yco.glo.ba.l.e.x.p.r.e.ss@gmail.com"">s.y.k.yco.glo.ba.l.e.x.p.r.e.ss@gmail.com</a>
<a href=""mailto:s.yk.yc.o.g.l.obal.e.x.pr.es.s@gmail.com"">s.yk.yc.o.g.l.obal.e.x.pr.es.s@gmail.com</a>
<a href=""mailto:syk.ycogloba.le.xpress@gmail.com"">syk.ycogloba.le.xpress@gmail.com</a>
<a href=""mailto:s.y.kyc.o.g.l.obal.expre.ss@gmail.com"">s.y.kyc.o.g.l.obal.expre.ss@gmail.com</a>
<a href=""mailto:sy.k.yc.o.gl.o.ba.lexpress@gmail.com"">sy.k.yc.o.gl.o.ba.lexpress@gmail.com</a>
<a href=""mailto:syk.ycog.l.ob.a.l.e.x.pres.s@gmail.com"">syk.ycog.l.ob.a.l.e.x.pres.s@gmail.com</a>
<a href=""mailto:syk.yc.og.l.ob.alex.p.r.es.s@gmail.com"">syk.yc.og.l.ob.alex.p.r.es.s@gmail.com</a>
<a href=""mailto:sykyc.o.gl.o.b.ale.x.pre.s.s@gmail.com"">sykyc.o.gl.o.b.ale.x.pre.s.s@gmail.com</a>
<a href=""mailto:sy.ky.c.o.g.l.obal.e.x.pres.s@gmail.com"">sy.ky.c.o.g.l.obal.e.x.pres.s@gmail.com</a>
<a href=""mailto:syk.yc.o.glo.b.a.l.expres.s@gmail.com"">syk.yc.o.glo.b.a.l.expres.s@gmail.com</a>
<a href=""mailto:s.ykyco.g.lo.b.al.e.x.pr.ess@gmail.com"">s.ykyco.g.lo.b.al.e.x.pr.ess@gmail.com</a>
<a href=""mailto:sy.k.ycogl.obalexp.r.e.s.s@gmail.com"">sy.k.ycogl.obalexp.r.e.s.s@gmail.com</a>
<a href=""mailto:s.y.k.y.c.oglo.b.a.l.e.xp.r.es.s@gmail.com"">s.y.k.y.c.oglo.b.a.l.e.xp.r.es.s@gmail.com</a>
<a href=""mailto:syk.y.c.o.g.lob.al.e.x.p.r.e.ss@gmail.com"">syk.y.c.o.g.lob.al.e.x.p.r.e.ss@gmail.com</a>
<a href=""mailto:s.y.ky.c.ogloba.l.e.xpre.s.s@gmail.com"">s.y.ky.c.ogloba.l.e.xpre.s.s@gmail.com</a>
<a href=""mailto:s.yk.y.c.og.l.o.b.al.e.x.press@gmail.com"">s.yk.y.c.og.l.o.b.al.e.x.press@gmail.com</a>
<a href=""mailto:s.y.k.yc.ogl.o.b.al.ex.pre.s.s@gmail.com"">s.y.k.yc.ogl.o.b.al.ex.pre.s.s@gmail.com</a>
<a href=""mailto:sy.kyc.o.g.lo.bale.xp.re.ss@gmail.com"">sy.kyc.o.g.lo.bale.xp.re.ss@gmail.com</a>
<a href=""mailto:s.y.kyc.o.g.lo.bal.e.x.p.res.s@gmail.com"">s.y.kyc.o.g.lo.bal.e.x.p.res.s@gmail.com</a>
<a href=""mailto:sy.k.y.co.globa.lexp.re.ss@gmail.com"">sy.k.y.co.globa.lexp.re.ss@gmail.com</a>
<a href=""mailto:s.y.k.y.c.o.gl.o.b.a.lexpre.s.s@gmail.com"">s.y.k.y.c.o.gl.o.b.a.lexpre.s.s@gmail.com</a>
<a href=""mailto:s.y.ky.cogl.o.ba.lex.p.re.s.s@gmail.com"">s.y.ky.cogl.o.ba.lex.p.re.s.s@gmail.com</a>
<a href=""mailto:sy.k.y.c.og.lob.al.ex.p.r.e.ss@gmail.com"">sy.k.y.c.og.lob.al.ex.p.r.e.ss@gmail.com</a>
<a href=""mailto:s.yk.ycoglo.b.a.l.ex.pr.e.s.s@gmail.com"">s.yk.ycoglo.b.a.l.ex.pr.e.s.s@gmail.com</a>
<a href=""mailto:s.yk.ycogl.ob.ale.x.p.ress@gmail.com"">s.yk.ycogl.ob.ale.x.p.ress@gmail.com</a>
<a href=""mailto:sy.k.yco.g.lobalexpr.e.ss@gmail.com"">sy.k.yco.g.lobalexpr.e.ss@gmail.com</a>
<a href=""mailto:sy.kyc.o.g.l.o.ba.l.e.xp.r.ess@gmail.com"">sy.kyc.o.g.l.o.ba.l.e.xp.r.ess@gmail.com</a>
<a href=""mailto:syk.yc.o.glo.b.a.lex.pr.es.s@gmail.com"">syk.yc.o.glo.b.a.lex.pr.es.s@gmail.com</a>
<a href=""mailto:syk.y.c.og.lo.bal.ex.p.ress@gmail.com"">syk.y.c.og.lo.bal.ex.p.ress@gmail.com</a>
<a href=""mailto:syk.yc.o.g.l.o.ba.lexp.r.e.ss@gmail.com"">syk.yc.o.g.l.o.ba.lexp.r.e.ss@gmail.com</a>
<a href=""mailto:s.yk.y.c.o.g.l.o.bal.e.x.pre.ss@gmail.com"">s.yk.y.c.o.g.l.o.bal.e.x.pre.ss@gmail.com</a>
<a href=""mailto:s.yk.y.co.globalex.pre.ss@gmail.com"">s.yk.y.co.globalex.pre.ss@gmail.com</a>
<a href=""mailto:syk.y.c.og.l.o.bal.ex.p.ress@gmail.com"">syk.y.c.og.l.o.bal.ex.p.ress@gmail.com</a>
<a href=""mailto:syk.y.co.glob.ale.x.p.ress@gmail.com"">syk.y.co.glob.ale.x.p.ress@gmail.com</a>
<a href=""mailto:sy.k.y.c.ogloba.lex.p.r.ess@gmail.com"">sy.k.y.c.ogloba.lex.p.r.ess@gmail.com</a>
<a href=""mailto:s.y.k.yc.og.lob.a.l.e.xpre.ss@gmail.com"">s.y.k.yc.og.lob.a.l.e.xpre.ss@gmail.com</a>
<a href=""mailto:s.y.k.y.c.o.g.loba.le.x.pr.ess@gmail.com"">s.y.k.y.c.o.g.loba.le.x.pr.ess@gmail.com</a>
<a href=""mailto:sy.ky.co.g.lo.b.alexpr.e.s.s@gmail.com"">sy.ky.co.g.lo.b.alexpr.e.s.s@gmail.com</a>
<a href=""mailto:s.yk.y.co.g.l.ob.alex.p.r.ess@gmail.com"">s.yk.y.co.g.l.ob.alex.p.r.ess@gmail.com</a>
<a href=""mailto:s.ykyco.glo.b.al.e.x.p.r.ess@gmail.com"">s.ykyco.glo.b.al.e.x.p.r.ess@gmail.com</a>
<a href=""mailto:s.yk.y.cog.l.o.b.ale.xp.re.s.s@gmail.com"">s.yk.y.cog.l.o.b.ale.xp.re.s.s@gmail.com</a>
<a href=""mailto:sy.ky.c.og.lob.a.le.x.p.re.ss@gmail.com"">sy.ky.c.og.lob.a.le.x.p.re.ss@gmail.com</a>
<a href=""mailto:sy.kyco.gl.o.balex.pre.ss@gmail.com"">sy.kyco.gl.o.balex.pre.ss@gmail.com</a>
<a href=""mailto:s.y.kyco.g.l.ob.ale.xp.r.e.ss@gmail.com"">s.y.kyco.g.l.ob.ale.xp.r.e.ss@gmail.com</a>
<a href=""mailto:s.y.k.ycoglo.b.a.l.e.xpre.ss@gmail.com"">s.y.k.ycoglo.b.a.l.e.xpre.ss@gmail.com</a>
<a href=""mailto:s.yky.cogl.o.bal.ex.p.r.es.s@gmail.com"">s.yky.cogl.o.bal.ex.p.r.es.s@gmail.com</a>
<a href=""mailto:s.ykycogl.o.b.a.l.ex.p.re.ss@gmail.com"">s.ykycogl.o.b.a.l.ex.p.re.ss@gmail.com</a>
<a href=""mailto:sy.kyc.o.g.l.o.b.al.e.x.p.res.s@gmail.com"">sy.kyc.o.g.l.o.b.al.e.x.p.res.s@gmail.com</a>
<a href=""mailto:s.yky.cog.l.obale.xp.re.ss@gmail.com"">s.yky.cog.l.obale.xp.re.ss@gmail.com</a>
<a href=""mailto:syk.yc.o.gl.o.b.a.l.expr.ess@gmail.com"">syk.yc.o.gl.o.b.a.l.expr.ess@gmail.com</a>
<a href=""mailto:s.y.k.y.co.globalexpres.s@gmail.com"">s.y.k.y.co.globalexpres.s@gmail.com</a>
<a href=""mailto:idki45072@gmail.com"">idki45072@gmail.com</a>
<a href=""mailto:idki.4.5.0.7.2@gmail.com"">idki.4.5.0.7.2@gmail.com</a>
<a href=""mailto:i.dk.i.4.50.72@gmail.com"">i.dk.i.4.50.72@gmail.com</a>
<a href=""mailto:i.d.ki4.5.07.2@gmail.com"">i.d.ki4.5.07.2@gmail.com</a>
<a href=""mailto:i.d.ki.4.5072@gmail.com"">i.d.ki.4.5072@gmail.com</a>
<a href=""mailto:id.k.i450.72@gmail.com"">id.k.i450.72@gmail.com</a>
<a href=""mailto:i.dki450.72@gmail.com"">i.dki450.72@gmail.com</a>
<a href=""mailto:idki.4507.2@gmail.com"">idki.4507.2@gmail.com</a>
<a href=""mailto:i.d.ki45.072@gmail.com"">i.d.ki45.072@gmail.com</a>
<a href=""mailto:idki450.7.2@gmail.com"">idki450.7.2@gmail.com</a>
<a href=""mailto:i.d.k.i45.0.72@gmail.com"">i.d.k.i45.0.72@gmail.com</a>
<a href=""mailto:id.k.i4.50.72@gmail.com"">id.k.i4.50.72@gmail.com</a>
<a href=""mailto:id.k.i4.50.7.2@gmail.com"">id.k.i4.50.7.2@gmail.com</a>
<a href=""mailto:idk.i.4.5.072@gmail.com"">idk.i.4.5.072@gmail.com</a>
<a href=""mailto:id.ki.45.0.7.2@gmail.com"">id.ki.45.0.7.2@gmail.com</a>
<a href=""mailto:i.dki.4.5072@gmail.com"">i.dki.4.5072@gmail.com</a>
<a href=""mailto:idk.i4.5.0.7.2@gmail.com"">idk.i4.5.0.7.2@gmail.com</a>
<a href=""mailto:idk.i.450.7.2@gmail.com"">idk.i.450.7.2@gmail.com</a>
<a href=""mailto:id.k.i.4.5.0.7.2@gmail.com"">id.k.i.4.5.0.7.2@gmail.com</a>
<a href=""mailto:i.dki45072@gmail.com"">i.dki45072@gmail.com</a>
<a href=""mailto:i.dk.i.4.5.0.7.2@gmail.com"">i.dk.i.4.5.0.7.2@gmail.com</a>
<a href=""mailto:id.ki.4.5.072@gmail.com"">id.ki.4.5.072@gmail.com</a>
<a href=""mailto:id.k.i4.5.072@gmail.com"">id.k.i4.5.072@gmail.com</a>
<a href=""mailto:idk.i4.5072@gmail.com"">idk.i4.5072@gmail.com</a>
<a href=""mailto:idki45.072@gmail.com"">idki45.072@gmail.com</a>
<a href=""mailto:i.d.k.i.450.72@gmail.com"">i.d.k.i.450.72@gmail.com</a>
<a href=""mailto:idk.i45.07.2@gmail.com"">idk.i45.07.2@gmail.com</a>
<a href=""mailto:i.dk.i4.507.2@gmail.com"">i.dk.i4.507.2@gmail.com</a>
<a href=""mailto:idki.450.7.2@gmail.com"">idki.450.7.2@gmail.com</a>
<a href=""mailto:i.d.ki45.0.7.2@gmail.com"">i.d.ki45.0.7.2@gmail.com</a>
<a href=""mailto:i.d.k.i.45.07.2@gmail.com"">i.d.k.i.45.07.2@gmail.com</a>
<a href=""mailto:i.d.k.i4.50.72@gmail.com"">i.d.k.i4.50.72@gmail.com</a>
<a href=""mailto:idki4.5.0.7.2@gmail.com"">idki4.5.0.7.2@gmail.com</a>
<a href=""mailto:i.d.ki.4.5.0.72@gmail.com"">i.d.ki.4.5.0.72@gmail.com</a>
<a href=""mailto:id.k.i.45.07.2@gmail.com"">id.k.i.45.07.2@gmail.com</a>
<a href=""mailto:id.ki.4.5.0.7.2@gmail.com"">id.ki.4.5.0.7.2@gmail.com</a>
<a href=""mailto:i.dki.4.50.72@gmail.com"">i.dki.4.50.72@gmail.com</a>
<a href=""mailto:i.dki.4.5.072@gmail.com"">i.dki.4.5.072@gmail.com</a>
<a href=""mailto:idki4.5072@gmail.com"">idki4.5072@gmail.com</a>
<a href=""mailto:i.dk.i.45072@gmail.com"">i.dk.i.45072@gmail.com</a>
<a href=""mailto:id.k.i.4.507.2@gmail.com"">id.k.i.4.507.2@gmail.com</a>
<a href=""mailto:i.dki4.50.72@gmail.com"">i.dki4.50.72@gmail.com</a>
<a href=""mailto:id.ki4.5.072@gmail.com"">id.ki4.5.072@gmail.com</a>
<a href=""mailto:i.dki.450.72@gmail.com"">i.dki.450.72@gmail.com</a>
<a href=""mailto:i.dki.4.5.0.72@gmail.com"">i.dki.4.5.0.72@gmail.com</a>
<a href=""mailto:i.dki.4507.2@gmail.com"">i.dki.4507.2@gmail.com</a>
<a href=""mailto:id.ki4.5.07.2@gmail.com"">id.ki4.5.07.2@gmail.com</a>
<a href=""mailto:id.ki.450.72@gmail.com"">id.ki.450.72@gmail.com</a>
<a href=""mailto:idk.i.4.507.2@gmail.com"">idk.i.4.507.2@gmail.com</a>
<a href=""mailto:id.k.i4.507.2@gmail.com"">id.k.i4.507.2@gmail.com</a>
<a href=""mailto:id.ki.4.50.72@gmail.com"">id.ki.4.50.72@gmail.com</a>
<a href=""mailto:i.d.k.i.4.5072@gmail.com"">i.d.k.i.4.5072@gmail.com</a>
<a href=""mailto:id.ki45.0.7.2@gmail.com"">id.ki45.0.7.2@gmail.com</a>
<a href=""mailto:i.dk.i4.50.72@gmail.com"">i.dk.i4.50.72@gmail.com</a>
<a href=""mailto:idk.i4507.2@gmail.com"">idk.i4507.2@gmail.com</a>
<a href=""mailto:idki.4.507.2@gmail.com"">idki.4.507.2@gmail.com</a>
<a href=""mailto:id.ki4.50.7.2@gmail.com"">id.ki4.50.7.2@gmail.com</a>
<a href=""mailto:idki4.5.0.72@gmail.com"">idki4.5.0.72@gmail.com</a>
<a href=""mailto:idk.i4.50.72@gmail.com"">idk.i4.50.72@gmail.com</a>
<a href=""mailto:idk.i4.5.07.2@gmail.com"">idk.i4.5.07.2@gmail.com</a>
<a href=""mailto:id.ki.45072@gmail.com"">id.ki.45072@gmail.com</a>
<a href=""mailto:idk.i.45072@gmail.com"">idk.i.45072@gmail.com</a>
<a href=""mailto:i.d.k.i450.72@gmail.com"">i.d.k.i450.72@gmail.com</a>
<a href=""mailto:i.dk.i45.0.7.2@gmail.com"">i.dk.i45.0.7.2@gmail.com</a>
<a href=""mailto:id.k.i.45072@gmail.com"">id.k.i.45072@gmail.com</a>
<a href=""mailto:i.dk.i.4.5072@gmail.com"">i.dk.i.4.5072@gmail.com</a>
<a href=""mailto:i.dk.i.4.507.2@gmail.com"">i.dk.i.4.507.2@gmail.com</a>
<a href=""mailto:id.ki4.50.72@gmail.com"">id.ki4.50.72@gmail.com</a>
<a href=""mailto:id.k.i4.5.07.2@gmail.com"">id.k.i4.5.07.2@gmail.com</a>
<a href=""mailto:idki45072@gmail.com"">idki45072@gmail.com</a>
<a href=""mailto:idki.45.07.2@gmail.com"">idki.45.07.2@gmail.com</a>
<a href=""mailto:i.d.k.i4.5.0.72@gmail.com"">i.d.k.i4.5.0.72@gmail.com</a>
<a href=""mailto:id.ki45072@gmail.com"">id.ki45072@gmail.com</a>
<a href=""mailto:id.ki.4.5.07.2@gmail.com"">id.ki.4.5.07.2@gmail.com</a>
<a href=""mailto:i.d.k.i45.07.2@gmail.com"">i.d.k.i45.07.2@gmail.com</a>
<a href=""mailto:i.dki4.5.072@gmail.com"">i.dki4.5.072@gmail.com</a>
<a href=""mailto:idk.i4.5.0.72@gmail.com"">idk.i4.5.0.72@gmail.com</a>
<a href=""mailto:idki45.07.2@gmail.com"">idki45.07.2@gmail.com</a>
<a href=""mailto:i.d.k.i.4.5.0.72@gmail.com"">i.d.k.i.4.5.0.72@gmail.com</a>
<a href=""mailto:i.dk.i.4.5.072@gmail.com"">i.dk.i.4.5.072@gmail.com</a>
<a href=""mailto:idk.i45.072@gmail.com"">idk.i45.072@gmail.com</a>
<a href=""mailto:i.dk.i4.5.072@gmail.com"">i.dk.i4.5.072@gmail.com</a>
<a href=""mailto:i.dk.i4.5072@gmail.com"">i.dk.i4.5072@gmail.com</a>
<a href=""mailto:i.dki4.50.7.2@gmail.com"">i.dki4.50.7.2@gmail.com</a>
<a href=""mailto:i.d.ki4.50.7.2@gmail.com"">i.d.ki4.50.7.2@gmail.com</a>
<a href=""mailto:i.dki45.072@gmail.com"">i.dki45.072@gmail.com</a>
<a href=""mailto:idk.i.4.5.07.2@gmail.com"">idk.i.4.5.07.2@gmail.com</a>
<a href=""mailto:i.d.k.i.45.0.7.2@gmail.com"">i.d.k.i.45.0.7.2@gmail.com</a>
<a href=""mailto:i.dki4.5.0.72@gmail.com"">i.dki4.5.0.72@gmail.com</a>
<a href=""mailto:i.d.ki.4.5.07.2@gmail.com"">i.d.ki.4.5.07.2@gmail.com</a>
<a href=""mailto:i.dk.i.4.5.0.72@gmail.com"">i.dk.i.4.5.0.72@gmail.com</a>
<a href=""mailto:idki.4.5.07.2@gmail.com"">idki.4.5.07.2@gmail.com</a>
<a href=""mailto:idki45.0.7.2@gmail.com"">idki45.0.7.2@gmail.com</a>
<a href=""mailto:id.k.i.4.5.0.72@gmail.com"">id.k.i.4.5.0.72@gmail.com</a>
<a href=""mailto:idki.450.72@gmail.com"">idki.450.72@gmail.com</a>
<a href=""mailto:idk.i.4.5072@gmail.com"">idk.i.4.5072@gmail.com</a>
<a href=""mailto:id.k.i.4.50.7.2@gmail.com"">id.k.i.4.50.7.2@gmail.com</a>
<a href=""mailto:i.dki.45.072@gmail.com"">i.dki.45.072@gmail.com</a>
<a href=""mailto:idki.4.50.72@gmail.com"">idki.4.50.72@gmail.com</a>
<a href=""mailto:i.dk.i.45.0.72@gmail.com"">i.dk.i.45.0.72@gmail.com</a>
<a href=""mailto:i.d.k.i45.0.7.2@gmail.com"">i.d.k.i45.0.7.2@gmail.com</a>
<a href=""mailto:i.d.k.i.4.50.72@gmail.com"">i.d.k.i.4.50.72@gmail.com</a>
<a href=""mailto:i.dki450.7.2@gmail.com"">i.dki450.7.2@gmail.com</a>
<a href=""mailto:i.d.ki.45.07.2@gmail.com"">i.d.ki.45.07.2@gmail.com</a>
<a href=""mailto:id.k.i.450.72@gmail.com"">id.k.i.450.72@gmail.com</a>
<a href=""mailto:i.d.ki.4.5.072@gmail.com"">i.d.ki.4.5.072@gmail.com</a>
<a href=""mailto:i.d.ki.45072@gmail.com"">i.d.ki.45072@gmail.com</a>
<a href=""mailto:i.d.k.i.450.7.2@gmail.com"">i.d.k.i.450.7.2@gmail.com</a>
<a href=""mailto:id.k.i4.5072@gmail.com"">id.k.i4.5072@gmail.com</a>
<a href=""mailto:i.dk.i450.7.2@gmail.com"">i.dk.i450.7.2@gmail.com</a>
<a href=""mailto:i.d.ki4507.2@gmail.com"">i.d.ki4507.2@gmail.com</a>
<a href=""mailto:id.ki.450.7.2@gmail.com"">id.ki.450.7.2@gmail.com</a>
<a href=""mailto:idki.45.0.7.2@gmail.com"">idki.45.0.7.2@gmail.com</a>
<a href=""mailto:idki.45.072@gmail.com"">idki.45.072@gmail.com</a>
<a href=""mailto:idk.i.4.5.0.7.2@gmail.com"">idk.i.4.5.0.7.2@gmail.com</a>
<a href=""mailto:id.k.i.4.5.07.2@gmail.com"">id.k.i.4.5.07.2@gmail.com</a>
<a href=""mailto:idki4507.2@gmail.com"">idki4507.2@gmail.com</a>
<a href=""mailto:idki4.50.72@gmail.com"">idki4.50.72@gmail.com</a>
<a href=""mailto:id.k.i45.072@gmail.com"">id.k.i45.072@gmail.com</a>
<a href=""mailto:idki4.5.072@gmail.com"">idki4.5.072@gmail.com</a>
<a href=""mailto:i.dk.i4507.2@gmail.com"">i.dk.i4507.2@gmail.com</a>
<a href=""mailto:id.ki.4507.2@gmail.com"">id.ki.4507.2@gmail.com</a>
<a href=""mailto:id.ki.45.0.72@gmail.com"">id.ki.45.0.72@gmail.com</a>
<a href=""mailto:id.k.i4507.2@gmail.com"">id.k.i4507.2@gmail.com</a>
<a href=""mailto:i.d.k.i450.7.2@gmail.com"">i.d.k.i450.7.2@gmail.com</a>
<a href=""mailto:idki.45.0.72@gmail.com"">idki.45.0.72@gmail.com</a>
<a href=""mailto:id.ki.4.5.0.72@gmail.com"">id.ki.4.5.0.72@gmail.com</a>
<a href=""mailto:id.k.i4.5.0.72@gmail.com"">id.k.i4.5.0.72@gmail.com</a>
<a href=""mailto:i.dk.i450.72@gmail.com"">i.dk.i450.72@gmail.com</a>
<a href=""mailto:idk.i45072@gmail.com"">idk.i45072@gmail.com</a>
<a href=""mailto:idk.i.45.0.72@gmail.com"">idk.i.45.0.72@gmail.com</a>
<a href=""mailto:idki4.507.2@gmail.com"">idki4.507.2@gmail.com</a>
<a href=""mailto:i.dki.4.50.7.2@gmail.com"">i.dki.4.50.7.2@gmail.com</a>
<a href=""mailto:i.d.ki45072@gmail.com"">i.d.ki45072@gmail.com</a>
<a href=""mailto:i.dki.4.5.0.7.2@gmail.com"">i.dki.4.5.0.7.2@gmail.com</a>
<a href=""mailto:idki450.72@gmail.com"">idki450.72@gmail.com</a>
<a href=""mailto:i.d.ki.4507.2@gmail.com"">i.d.ki.4507.2@gmail.com</a>
<a href=""mailto:i.dk.i45.07.2@gmail.com"">i.dk.i45.07.2@gmail.com</a>
<a href=""mailto:i.d.ki.45.0.7.2@gmail.com"">i.d.ki.45.0.7.2@gmail.com</a>
<a href=""mailto:id.ki4507.2@gmail.com"">id.ki4507.2@gmail.com</a>
<a href=""mailto:id.k.i45.07.2@gmail.com"">id.k.i45.07.2@gmail.com</a>
<a href=""mailto:id.k.i.45.0.7.2@gmail.com"">id.k.i.45.0.7.2@gmail.com</a>
<a href=""mailto:i.d.ki.450.7.2@gmail.com"">i.d.ki.450.7.2@gmail.com</a>
<a href=""mailto:i.dki.45.0.72@gmail.com"">i.dki.45.0.72@gmail.com</a>
<a href=""mailto:i.d.k.i.45072@gmail.com"">i.d.k.i.45072@gmail.com</a>
<a href=""mailto:i.d.k.i4.507.2@gmail.com"">i.d.k.i4.507.2@gmail.com</a>
<a href=""mailto:i.d.ki.4.507.2@gmail.com"">i.d.ki.4.507.2@gmail.com</a>
<a href=""mailto:i.dki4.5.07.2@gmail.com"">i.dki4.5.07.2@gmail.com</a>
<a href=""mailto:id.ki45.072@gmail.com"">id.ki45.072@gmail.com</a>
<a href=""mailto:i.d.k.i4.5.0.7.2@gmail.com"">i.d.k.i4.5.0.7.2@gmail.com</a>
<a href=""mailto:i.d.ki4.5.0.7.2@gmail.com"">i.d.ki4.5.0.7.2@gmail.com</a>
<a href=""mailto:id.k.i.45.0.72@gmail.com"">id.k.i.45.0.72@gmail.com</a>
<a href=""mailto:i.dk.i.450.72@gmail.com"">i.dk.i.450.72@gmail.com</a>
<a href=""mailto:i.d.k.i4507.2@gmail.com"">i.d.k.i4507.2@gmail.com</a>
<a href=""mailto:idk.i45.0.7.2@gmail.com"">idk.i45.0.7.2@gmail.com</a>
<a href=""mailto:id.ki45.07.2@gmail.com"">id.ki45.07.2@gmail.com</a>
<a href=""mailto:idk.i450.7.2@gmail.com"">idk.i450.7.2@gmail.com</a>
<a href=""mailto:i.dki.45.0.7.2@gmail.com"">i.dki.45.0.7.2@gmail.com</a>
<a href=""mailto:id.ki.45.07.2@gmail.com"">id.ki.45.07.2@gmail.com</a>
<a href=""mailto:i.d.ki45.0.72@gmail.com"">i.d.ki45.0.72@gmail.com</a>
<a href=""mailto:i.d.k.i.4.5.0.7.2@gmail.com"">i.d.k.i.4.5.0.7.2@gmail.com</a>
<a href=""mailto:id.ki4.5.0.72@gmail.com"">id.ki4.5.0.72@gmail.com</a>
<a href=""mailto:id.k.i.4507.2@gmail.com"">id.k.i.4507.2@gmail.com</a>
<a href=""mailto:id.k.i45.0.72@gmail.com"">id.k.i45.0.72@gmail.com</a>
<a href=""mailto:i.dk.i45.072@gmail.com"">i.dk.i45.072@gmail.com</a>
<a href=""mailto:i.d.ki.4.50.72@gmail.com"">i.d.ki.4.50.72@gmail.com</a>
<a href=""mailto:i.d.ki450.7.2@gmail.com"">i.d.ki450.7.2@gmail.com</a>
<a href=""mailto:idki.4.5.072@gmail.com"">idki.4.5.072@gmail.com</a>
<a href=""mailto:id.k.i450.7.2@gmail.com"">id.k.i450.7.2@gmail.com</a>
<a href=""mailto:id.k.i.4.50.72@gmail.com"">id.k.i.4.50.72@gmail.com</a>
<a href=""mailto:i.dki.4.5.07.2@gmail.com"">i.dki.4.5.07.2@gmail.com</a>
<a href=""mailto:i.dk.i.450.7.2@gmail.com"">i.dk.i.450.7.2@gmail.com</a>
<a href=""mailto:idk.i.4.50.7.2@gmail.com"">idk.i.4.50.7.2@gmail.com</a>
<a href=""mailto:idk.i.4.5.0.72@gmail.com"">idk.i.4.5.0.72@gmail.com</a>
<a href=""mailto:i.dk.i4.5.0.72@gmail.com"">i.dk.i4.5.0.72@gmail.com</a>
<a href=""mailto:i.dki45.0.7.2@gmail.com"">i.dki45.0.7.2@gmail.com</a>
<a href=""mailto:idk.i45.0.72@gmail.com"">idk.i45.0.72@gmail.com</a>
<a href=""mailto:i.dki4.5072@gmail.com"">i.dki4.5072@gmail.com</a>
<a href=""mailto:i.dk.i.45.0.7.2@gmail.com"">i.dk.i.45.0.7.2@gmail.com</a>
<a href=""mailto:i.d.ki4.5.0.72@gmail.com"">i.d.ki4.5.0.72@gmail.com</a>
<a href=""mailto:id.ki.45.072@gmail.com"">id.ki.45.072@gmail.com</a>
<a href=""mailto:id.ki.4.5072@gmail.com"">id.ki.4.5072@gmail.com</a>
<a href=""mailto:i.d.ki.450.72@gmail.com"">i.d.ki.450.72@gmail.com</a>
<a href=""mailto:i.dki45.0.72@gmail.com"">i.dki45.0.72@gmail.com</a>
<a href=""mailto:id.ki.4.50.7.2@gmail.com"">id.ki.4.50.7.2@gmail.com</a>
<a href=""mailto:i.d.k.i.4507.2@gmail.com"">i.d.k.i.4507.2@gmail.com</a>
<a href=""mailto:i.dk.i.45.07.2@gmail.com"">i.dk.i.45.07.2@gmail.com</a>
<a href=""mailto:idki45.0.72@gmail.com"">idki45.0.72@gmail.com</a>
<a href=""mailto:i.d.k.i.45.072@gmail.com"">i.d.k.i.45.072@gmail.com</a>
<a href=""mailto:idk.i.4.50.72@gmail.com"">idk.i.4.50.72@gmail.com</a>
<a href=""mailto:i.d.ki.4.50.7.2@gmail.com"">i.d.ki.4.50.7.2@gmail.com</a>
<a href=""mailto:i.dki45.07.2@gmail.com"">i.dki45.07.2@gmail.com</a>
<a href=""mailto:i.d.k.i45072@gmail.com"">i.d.k.i45072@gmail.com</a>
<a href=""mailto:i.d.k.i.4.5.072@gmail.com"">i.d.k.i.4.5.072@gmail.com</a>
<a href=""mailto:i.d.ki4.50.72@gmail.com"">i.d.ki4.50.72@gmail.com</a>
<a href=""mailto:i.dk.i45.0.72@gmail.com"">i.dk.i45.0.72@gmail.com</a>
<a href=""mailto:i.d.k.i4.50.7.2@gmail.com"">i.d.k.i4.50.7.2@gmail.com</a>
<a href=""mailto:i.dki4.507.2@gmail.com"">i.dki4.507.2@gmail.com</a>
<a href=""mailto:i.d.k.i4.5072@gmail.com"">i.d.k.i4.5072@gmail.com</a>
<a href=""mailto:i.d.ki45.07.2@gmail.com"">i.d.ki45.07.2@gmail.com</a>
<a href=""mailto:id.ki4.5.0.7.2@gmail.com"">id.ki4.5.0.7.2@gmail.com</a>"
zeb5VEdA,H,LEGEND2004,C++,Thursday 22nd of June 2023 11:24:04 AM CDT,"#include <bits/stdc++.h>
using namespace std;

#define int long long

signed main()
{
    int t;
    cin >> t;
    while(t--){
        string s;
        cin >> s;
        int n = s.size();
        if(n <= 10){
            cout << s << endl;
        }else{
            cout << s[0] << (n - 2) << s[n - 1] << endl;
        }
    }
}
"
HuVE7gXM,get_headers @TeraBox,Munfaqqiha,C++,Thursday 22nd of June 2023 11:21:00 AM CDT,"do {
   $leng = get_headers($link, 1);
   $size = $leng[""Content-Length""];
} while ($size < 0);"
8ehxiTtC,powerline,tuvok81,Bash,Thursday 22nd of June 2023 10:46:44 AM CDT,"Traceback (most recent call last):
  File ""/usr/local/bin/powerline-daemon"", line 23, in <module>
    from powerline.shell import ShellPowerline
ModuleNotFoundError: No module named 'powerline'
Traceback (most recent call last):
  File ""/usr/local/bin/powerline-config"", line 6, in <module>
    from powerline.commands.config import get_argparser
ModuleNotFoundError: No module named 'powerline'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File ""/usr/local/bin/powerline-config"", line 11, in <module>
    from powerline.commands.config import get_argparser
ModuleNotFoundError: No module named 'powerline'
Traceback (most recent call last):
  File ""/usr/local/bin/powerline-config"", line 6, in <module>
    from powerline.commands.config import get_argparser
ModuleNotFoundError: No module named 'powerline'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File ""/usr/local/bin/powerline-config"", line 11, in <module>
    from powerline.commands.config import get_argparser
ModuleNotFoundError: No module named 'powerline'
"
4zHdW2B3,Untitled,TheBeJIIHiu,JavaScript,Thursday 22nd of June 2023 10:43:57 AM CDT,"const { Telegraf } = require('telegraf');
const tf = require('@tensorflow/tfjs-node');
const createTokenizer = require('./Tokenizer.js');
const db = require('./db.js');

async function loadData() {
  const rows = await db.execute('SELECT message, bot_response FROM messages');
  return rows.map(row => ({ message: row.message, botResponse: row.bot_response }));
}

async function saveMessage(userId, message, botResponse) {
  await db.execute('INSERT INTO messages (user_id, message, bot_response) VALUES (?, ?, ?)', [userId, message, botResponse]);
}

async function createModel(tokenizer, maxLength) {
  const model = tf.sequential();
  model.add(tf.layers.embedding({ inputDim: tokenizer.vocabSize, outputDim: 16, inputLength: maxLength }));
  model.add(tf.layers.flatten());
  model.add(tf.layers.dense({ units: 64, activation: 'relu' }));
  model.add(tf.layers.dense({ units: tokenizer.vocabSize, activation: 'softmax' }));
  model.compile({ loss: 'categoricalCrossentropy', optimizer: 'adam' });
  return model;
}

async function updateModel(messages) {
  const tokenizer = createTokenizer(messages.map(message => message.message));
  const inputSequences = messages.map(message => tokenizer.textToSequences(message.message));
  const maxLength = Math.max(...inputSequences.map(sequence => sequence.length));
  const model = await createModel(tokenizer, maxLength);

  const paddedSequences = inputSequences.map(sequence => {
    if (sequence.length < maxLength) {
      const padding = new Array(maxLength - sequence.length).fill(0);
      return sequence.concat(padding);
    }
    return sequence;
  });

  const inputs = tf.tensor2d(paddedSequences, [paddedSequences.length, maxLength]);

  const labels = new Array(paddedSequences.length).fill(0);
  await model.fit(inputs, labels, { epochs: 10 });

  await model.save('model/model.json');
  await model.saveWeights('model/weights.bin');

  return { model, tokenizer };
}

function generateMessage(model, tokenizer) {
  const startSequence = tokenizer.textToSequences('START')[0];
  const maxLength = 32;
  let inputSequence = startSequence;
  let generatedText = '';

  for (let i = 0; i < maxLength; i++) {
    const paddedInput = tf.pad([inputSequence], [[0, 0], [0, maxLength - inputSequence.length]]);
    const predictions = model.predict(paddedInput);
    const predictedId = tf.argMax(predictions.squeeze()).dataSync()[0];
    const predictedWord = tokenizer.sequencesToText([predictedId]);

    if (predictedWord === 'END') {
      break;
    }

    generatedText += predictedWord + ' ';
    inputSequence = [...inputSequence.slice(1), predictedId];
  }

  return generatedText.trim();
}

async function startBot() {
  const messages = await loadData();
  const { model, tokenizer } = await updateModel(messages);
  const bot = new Telegraf('Тут нихуя нет');

  bot.on('text', async ctx => {
    const message = ctx.message.text;
    const userId = ctx.message.from.id;
    const generatedMessage = generateMessage(model, tokenizer);
    await saveMessage(userId, message, generatedMessage);

    ctx.reply(generatedMessage);
  });

  bot.launch();
}

startBot();
"
zE6qGCBL,Untitled,NukeVsCity,Lua,Thursday 22nd of June 2023 10:43:50 AM CDT,"-- This file was generated using Luraph Obfuscator v13.6.7

return(function(OP,dP,PP,MP,qP,LP,CP,DP,tP,HP,ZP,QP,_P,wP,RP,NX,zP,kP,KP,rP,VP,iP,fP,BX,mP,nX,aP,gP,IP,lP,sP,jP,WP,vX,UP,oP,XP,yP,v,B,N)local bX=({});local h=false;local c,hX=nil,(5.37568377E8);while-438234784 do if hX==5.37568377E8 then h=select;do if not(not bX[1.75442529E9])then hX=bX[1.75442529E9];else hX=7.10050692E8;bX[1.75442529E9]=hX;end;end;else if hX==7.10050692E8 then c=RP;break;end;end;end;local D=(LP);local C,S,O,P=nil,false,true,(nil);local T=sP;local G=PP.sub;local Y,R=jP,rawget;local pX=(1.604721917E9);local Q=(CP or _P);local x,u=OP,(QP);local E=tostring;while-11838351 do do if pX>4.71874104E8 then C=next;S=error;O=coroutine.yield;do if not(not bX[6.6237601E7])then do pX=bX[6.6237601E7];end;else pX=4.71874104E8;(bX)[6.6237601E7]=pX;end;end;else P=oP;break;end;end;end;local _,s,cX=798847204,nil,1.126246033E9;do repeat do if not(cX<1.126246033E9)then if not(cX>5.14109116E8)then else _=rP.floor;if not bX[1.19873678E9]then cX=5.14109116E8;(bX)[1.19873678E9]=cX;else cX=bX[1.19873678E9];end;end;else s=nil;do break;end;end;end;until false;end;s=function(RX,PX,CX)if not(PX>CX)then else return;end;local _X=CX-PX+1;if _X>=8 then return RX[PX],RX[PX+1],RX[PX+0X00002],RX[PX+3],RX[PX+0X00004],RX[PX+0x5],RX[PX+6],RX[PX+0x0007],s(RX,PX+tP,CX);else if _X>=0X00007 then return RX[PX],RX[PX+0X00001],RX[PX+kP],RX[PX+3],RX[PX+4],RX[PX+5],RX[PX+6],s(RX,PX+0X7,CX);else if _X>=6 then return RX[PX],RX[PX+0X1],RX[PX+2],RX[PX+0X003],RX[PX+WP],RX[PX+5],s(RX,PX+6,CX);elseif _X>=0x5 then return RX[PX],RX[PX+0X01],RX[PX+2],RX[PX+3],RX[PX+0X00004],s(RX,PX+0X005,CX);elseif _X>=WP then return RX[PX],RX[PX+0X01],RX[PX+2],RX[PX+3],s(RX,PX+4,CX);else if _X>=0x03 then return RX[PX],RX[PX+1],RX[PX+2],s(RX,PX+3,CX);else if _X>=2 then do return RX[PX],RX[PX+1],s(RX,PX+2,CX);end;else return RX[PX],s(RX,PX+1,CX);end;end;end;end;end;end;local F,eP=string.rep,(false);local r,j=nil,(nil);local eX=(8.5323046E7);repeat if eX>8.5323046E7 then if eX~=1.314086728E9 then if not(not bX[7.0512707E8])then eX=bX[7.0512707E8];else do eX=1.314086728E9;end;bX[7.0512707E8]=eX;end;r=IP;else j=function(RX,PX,CX)local LX=(1.015705163E9);while'{\036f1\074\103AW\071'do if LX~=1.018916654E9 then do if not PX then PX=aP;end;end;do LX=1.018916654E9;end;else if not CX then CX=#RX;end;break;end;end;local _X=CX-PX+0X0001;if not(_X>0X1F3d)then do return Q(RX,PX,CX);end;else do return s(RX,PX,CX);end;end;end;break;end;else if not bX[3.63545467E8]then eX=1.673470541E9;bX[3.63545467E8]=eX;else do eX=bX[3.63545467E8];end;end;eP={};end;until false;local t=(r and r()or _ENV);local I,a=nil,false;local l,U,EX=nil,-1762263105,5.20806862E8;local z=(nil);local p,X=tonumber,4503599627370496;do repeat if EX<8.56850133E8 and EX>3.64200496E8 then do if not bX[1.904732517E9]then EX=8.56850133E8;(bX)[1.904732517E9]=EX;else do EX=bX[1.904732517E9];end;end;end;I=DP;else if EX>5.20806862E8 then a=T(G(lP,0x5),""(.\041\040\046)"",function(RX,PX)do if PX~=""H""then local CX=x(p(RX..PX,0x10));if I then local _X=F(CX,I);do I=nil;end;do return _X;end;else do return CX;end;end;else do I=p(RX);end;return"""";end;end;end);if not bX[1.915816832E9]then EX=3.64200496E8;(bX)[1.915816832E9]=EX;else EX=bX[1.915816832E9];end;elseif EX<5.20806862E8 and EX>9.5580111E7 then z={3,aP,kP};if not bX[8.55738591E8]then EX=9.5580111E7;bX[8.55738591E8]=EX;else do EX=bX[8.55738591E8];end;end;l=4294967296;else if not(EX<3.64200496E8)then else U=l-1;break;end;end;end;until false;end;local M,q,g,V=nil,0.5531208589097929,'zR\'.7\072',(nil);local SX=(2.045221238E9);repeat do if SX<2.045221238E9 and SX>6.7389852E8 then q=9007199254740992;do if not(not bX[2.051778665E9])then do SX=bX[2.051778665E9];end;else SX=6.7389852E8;(bX)[2.051778665E9]=SX;end;end;else if SX<8.19774045E8 then do g={[0]=1,0X2,4,8,16,32,64,128,0X100,0X000200,0X0400,2048,0x00001000,8192,0X4000,32768,dP,131072,0X40000,524288,HP,fP,4194304,0X800000,0X1000000,0X2000000,0X4000000,134217728,0x10000000,536870912,0X40000000,D,l,[35]=34359738368,[42]=4398046511104,[49]=562949953421312};end;V=(bit or bit32);break;else do if SX>8.19774045E8 then M={[0]={[0X0]=0X0000,0X01,0X2,0x3,4,5,0X6,7,8,9,10,0XB,0Xc,13,14,0x0f},{[0]=aP,0X0000,3,0X002,5,4,0x7,6,9,8,0XB,10,XP,0Xc,0XF,14},{[0X0]=kP,qP,0,0x1,6,7,0X4,0X0005,0X0000A,0Xb,8,0X9,0X0000e,0x0000F,12,0Xd},{[0]=3,0x02,1,UP,0X00007,0X6,5,0X0004,11,10,0X9,0X008,gP,0XE,13,MP},{[0]=4,5,6,0x7,0X0,1,kP,3,MP,XP,14,0X00F,0X08,0x9,0x0000a,0XB},{[0X0]=5,0X4,0X7,6,1,0x0,0X3,kP,13,12,15,14,9,0X8,0X0b,10},{[0]=6,7,0X4,0X00005,2,3,0,0X1,0xe,15,0XC,0XD,0x0a,11,0X0008,0X0009},{[UP]=VP,6,5,0X004,0X00003,0X02,0X1,UP,15,14,0Xd,12,11,0Xa,0x9,0X8},{[UP]=8,9,10,0Xb,0XC,13,0X00E,0X0f,0,1,2,0X00003,4,iP,0X6,VP},{[0X0000]=0X09,tP,mP,10,13,12,15,0X0e,0X1,0X000,0X3,0x2,iP,0X4,0X0007,6},{[0]=10,0Xb,0X8,9,14,0X0000f,0XC,13,0X02,3,0,aP,ZP,0X7,4,5},{[0X0]=11,10,9,0X8,0Xf,0Xe,13,0X000C,0X03,2,1,UP,0X007,0X6,5,4},{[0x00000]=0Xc,13,14,0X000f,8,9,10,11,0X4,0X0005,0X6,7,0X0,0X1,0X2,3},{[0]=13,12,0XF,0XE,9,0X8,0xB,10,5,4,0X007,6,0X001,0,0x0003,2},{[0]=0X00e,0Xf,0xC,13,10,11,0x8,0X9,ZP,7,4,5,2,3,0x000,1},{[0]=15,14,0X0000d,12,11,10,9,8,7,0X006,5,4,0X0003,kP,1,0}};if not bX[1.305657522E9]then SX=8.19774045E8;(bX)[1.305657522E9]=SX;else SX=bX[1.305657522E9];end;end;end;end;end;end;until false;local Z=""\124yZ\111\071"";local o,m=true,(0.4330084846098391);local i=(nil);local GX=1.248730947E9;repeat if GX==1.248730947E9 then if not(not bX[1.61568436E8])then do GX=bX[1.61568436E8];end;else GX=1.913011142E9;do(bX)[1.61568436E8]=GX;end;end;i=V and V[zP]or function(RX,PX)local CX=0.30241046072521405;local _X=false;for LX=5366.0,25633.0,7335.0 do if LX>5366.0 then do CX=aP;end;break;else if LX<12701.0 then do RX=RX%l;end;_X=0X0;PX=PX%l;end;end;end;while RX>0 and PX>0X0 do local LX,OX,QX=RX%16,PX%16,(4.6861736E8);do repeat do if QX>1.34562479E8 then do _X=_X+M[LX][OX]*CX;end;QX=1.34562479E8;else if not(QX<4.6861736E8)then else RX=(RX-LX)/0X000010;break;end;end;end;until false;end;PX=(PX-OX)/wP;do CX=CX*0X10;end;end;do return _X+RX*CX+PX*CX;end;end;elseif GX==1.913011142E9 then if not(not bX[2.042630787E9])then do GX=bX[2.042630787E9];end;else do GX=1.491525741E9;end;(bX)[2.042630787E9]=GX;end;o=yP;else if GX==1.491525741E9 then if not(not bX[1.096488454E9])then do GX=bX[1.096488454E9];end;else GX=6.74809576E8;(bX)[1.096488454E9]=GX;end;m=V and V.band or function(RX,PX)do RX=RX%l;end;PX=PX%l;do return((RX+PX)-i(RX,PX))/2;end;end;else if GX~=6.74809576E8 then else Z=V and V[KP]or function(RX,PX)local CX=(1.750810597E9);do repeat do if CX>6.0531551E7 then if CX<1.750810597E9 then CX=6.0531551E7;do PX=PX%l;end;else RX=RX%l;CX=5.68553472E8;end;else return U-m(U-RX,U-PX);end;end;until false;end;end;break;end;end;end;until false;local W=-474328394;local b,d,uX=nil,nil,4.11623117E8;while 0.4017447870079903 do if uX==4.11623117E8 then do if not(not bX[2.137748909E9])then uX=bX[2.137748909E9];else uX=1.1773506E9;bX[2.137748909E9]=uX;end;end;W=1;elseif uX==1.1773506E9 then if not(not bX[6.1594408E7])then uX=bX[6.1594408E7];else uX=1.368713863E9;do(bX)[6.1594408E7]=uX;end;end;b=nX;else if uX==1.368713863E9 then d=V and V.bnot or function(RX)return U-(RX%l);end;break;end;end;end;local H,f='\089d\115\102 q\048',-1041156979;local w=(nil);local xX=(1.43993621E9);repeat if xX==1.43993621E9 then if not bX[1.281557607E9]then xX=3.9354377E7;(bX)[1.281557607E9]=xX;else do xX=bX[1.281557607E9];end;end;do H=V and V.lshift;end;elseif xX==3.9354377E7 then f=V and V[vX];H=H or function(RX,PX)if PX>=32 then return 0X0;end;for CX=4672.0,104142.0,9253.0 do if CX==13925.0 then do return(RX*g[PX])%l;end;else if CX~=4672.0 then else do if PX<0x0 then return f(RX,-PX);end;end;end;end;end;end;if not bX[2.13530793E9]then xX=5.17081556E8;bX[2.13530793E9]=xX;else xX=bX[2.13530793E9];end;f=f or function(RX,PX)if not(PX>=32)then else do return 0;end;end;local CX=true;for _X=2167.0,76661.0,1957.0 do if _X==4124.0 then return CX-CX%1;else if _X==2167.0 then do if PX<0 then return H(RX,-PX);end;end;CX=(RX%l/g[PX]);end;end;end;end;else if xX~=5.17081556E8 then else w={[0X02]=0X7,[0x7]=0X001,[0]=3,[0X0005]=0,[0X00001]=0x0005,[0X00009]=6,[5]=0X0,[0X9]=1,[3]=0X4,[9]=6,[0X04]=0X00002};break;end;end;until false;local K=function()local RX=(u(a,W,W));W=W+0X1;return RX;end;local J,nP,FX=nil,1918285937,(9.58878651E8);while""""do if not(FX<2.08127331E9)then do if FX>9.58878651E8 then nP=function()local _X=nil;local RX=false;local PX,CX=-0X002613B102,(nil);for LX=8401.0,30895.0,143.0 do do if LX~=8401.0 then do if LX==8544.0 then return _X*16777216+CX*65536+PX*0X100+RX;end;end;else RX,PX,CX,_X=u(a,W,W+0X3);do W=W+4;end;end;end;end;end;break;end;end;else do J=string.match;end;if not bX[3.0086449E7]then FX=2.08127331E9;(bX)[3.0086449E7]=FX;else do FX=bX[3.0086449E7];end;end;end;end;local vP=nil;local k,TX=nil,1.331336456E9;local y=function(RX,PX,CX)local _X='\065%\123\083C{o\049';do for LX=4360.0,12952.0,8592.0 do if LX<12952.0 then _X=(RX/g[PX])%g[CX];else if LX>4360.0 then do _X=_X-_X%1;end;end;end;end;end;return _X;end;while 0.27660780512797345 do if TX<1.764865223E9 then if not(not bX[1.341754588E9])then TX=bX[1.341754588E9];else TX=1.764865223E9;(bX)[1.341754588E9]=TX;end;do vP=function()local PX=(0X3B4717fB);local RX=(nil);for CX=9418.0,29618.0,349.0 do do if not(CX>9418.0)then RX,PX=nP(),nP();else if PX==0 then return RX;else if not(PX>=D)then else do PX=PX-l;end;end;end;return PX*l+RX;end;end;end;end;end;else if not(TX>1.331336456E9)then else k=function(...)return(...)[...];end;do break;end;end;end;end;local e=(type);local NP=(function()local PX=0;local RX=0X0000;while'\067\075\049Sv\052\094\035\116'do local CX=(u(a,W,W));W=W+1;RX=RX+((CX>127 and CX-0x000080 or CX)*g[PX]);do if CX<128 then return RX;end;end;PX=PX+0X00007;end;end);local BP=(function()local OX=(nil);local PX=(0X000640eBce6);local RX=0X37c98A31;for QX=5721.0,74615.0,3904.0 do if QX<9625.0 then do RX=nP();end;PX=nP();else if not(QX>9625.0)then if not(QX<13529.0 and QX>5721.0)then else OX=0X1;end;else if RX==0 and PX==0x00 then return 0.0;end;break;end;end;end;local _X=(-2012109302);local CX=""\121I$\048\069\045p"";local LX=(false);for QX=6160.0,68110.0,9600.0 do do if QX==6160.0 then CX=(-0x001)^y(PX,0X1f,1);_X=y(PX,0X14,11);LX=y(PX,0,0x14)*l+RX;else if QX==15760.0 then if _X==0x0000 then if LX~=0 then local QX=3.78691405E8;while 0.6006840548128897 do if QX==3.78691405E8 then do QX=3.9549E7;end;_X=0X0001;else do if QX~=3.9549E7 then else OX=0;do break;end;end;end;end;end;else return CX*0;end;else if _X==0x7Ff then if LX==0x0000 then return CX*(0/0);else do return CX*(1/0X0);end;end;end;end;else if QX==25360.0 then do return CX*(0X2^(_X-1023))*(LX/X+OX);end;end;end;end;end;end;end);local bP=function()local RX,PX=nil,(1.946028449E9);do repeat if PX==1.946028449E9 then RX=NP();PX=1.2229403E9;else if PX~=1.2229403E9 then else do if RX>=X then do return RX-q;end;end;end;return RX;end;end;until false;end;end;local hP=K();local cP,EP,L,GP='[|\093(\099)\118\040M','9\082',175873652,nil;local JX=2.86017649E8;while-499105162 do if JX~=2.86017649E8 then if JX==3.01246236E8 then if not(not bX[1.439512174E9])then do JX=bX[1.439512174E9];end;else JX=1.915525067E9;do(bX)[1.439512174E9]=JX;end;end;EP=1;else if JX~=1.915525067E9 then do if JX==5.36906414E8 then GP=function()(S)(""Y\111ur e\110\118\105\114\111\110m\101\110t\032\100\111\101s \110ot sup\112\111r\116 L\117aJI\084\039\115\032\070F\073 \108\105bra\114y\044 th\101\114\101f\111\114\101 y\111u\032c\097\110n\111\116\032\117\115\101\032\076L\047ULL\047\105 \115\117\102fix\101s."");end;break;end;end;else if not(not bX[7.42951669E8])then JX=bX[7.42951669E8];else JX=5.36906414E8;(bX)[7.42951669E8]=JX;end;L=BX;end;end;else if not bX[2.075574923E9]then JX=3.01246236E8;do bX[2.075574923E9]=JX;end;else JX=bX[2.075574923E9];end;do cP=function(...)return h(""\035"",...),{...};end;end;end;end;local YP,uP=nil,0.11838033484355248;local YX=(1.404521442E9);local xP,pP,FP=false,nil,0.5455555335261566;while'(\041g\099\048\035'do if YX>1.404521442E9 then do if YX==1.846270425E9 then uP=GP;if not(not bX[2.109468911E9])then do YX=bX[2.109468911E9];end;else YX=1.376156004E9;do(bX)[2.109468911E9]=YX;end;end;xP=GP;else FP=GP;break;end;end;else if YX~=1.376156004E9 then YP=function(...)return(...)();end;if not bX[1.969790928E9]then YX=1.846270425E9;do bX[1.969790928E9]=YX;end;else do YX=bX[1.969790928E9];end;end;else do if not(not bX[1.39487618E8])then YX=bX[1.39487618E8];else do YX=1.441068403E9;end;bX[1.39487618E8]=YX;end;end;do pP=function(RX)local _X=(6.21241248E8);local PX,CX=nil,true;while 875114264 do do if _X>6.21241248E8 then for LX=0X1,PX,7997 do local sX=(1.089874692E9);local OX=nil;repeat if sX==1.089874692E9 then sX=1.366735507E9;OX=LX+7997-1;else if sX==1.366735507E9 then if OX>PX then OX=PX;end;do break;end;end;end;until false;local QX=({u(a,W+LX-1,W+OX-aP)});local jX=(1.7311705E9);while-819838023 do if jX<1.7311705E9 then do CX=CX..x(j(QX));end;break;else if jX>2.79668051E8 then jX=2.79668051E8;for oX=0X1,#QX do local rX=(1.696798667E9);while'\111*\042\069\060y'do if rX==1.696798667E9 then rX=7.63693742E8;(QX)[oX]=i(QX[oX],hP);else if rX==7.63693742E8 then hP=(RX*hP+0XbD)%0X00100;break;end;end;end;end;end;end;end;end;W=W+PX;break;else if not(_X<1.243660927E9)then else PX=nP();do _X=1.243660927E9;end;CX="""";end;end;end;end;do return CX;end;end;end;end;end;end;local AX=1.317728005E9;local A=(NX);local SP,TP,JP,AP={[1]=eP},-0x30887512,nil,0.39389437030020436;repeat if AX<7.33296649E8 then do JP=function()local RX=nil;local _X,LX,aX=true,nil,3.36436221E8;local PX=2060496029;while true do do if not(aX>1.119031095E9)then if aX<=3.36436221E8 then do RX={DP,DP,nil,{},nil,nil,{},nil,{}};end;aX=1.761324344E9;else aX=1.94547793E9;_X=0X1;end;else if not(aX>=1.94547793E9)then do PX={};end;aX=1.119031095E9;else(RX)[0X2]=NP();do(RX)[19]=nP();end;LX={};break;end;end;end;end;RX[0X8]=LX;for qX=0X1,NP()do(LX)[qX]={K(),NP()};end;do(RX)[16]=K();end;for qX=2990.0,10016.0,7026.0 do if qX==10016.0 then RX[0X00013]=K();else RX[0X3]=NP();end;end;do(RX)[0XC]=nP();end;local OX=(K());local oX,DX=nil,7.5962281E7;while true do if not(DX<4.39975156E8)then(RX)[0X0001]=y(OX,0x2,0X1)~=0x00000;oX=RX[9];do break;end;else(RX)[0x6]=y(OX,1,1)~=0;do DX=4.39975156E8;end;end;end;local QX=(nP()-77917);local CX=(""%\093\053\057\090"");local sX=nil;for qX=1788.0,11629.0,9841.0 do if qX>=11629.0 then CX={};else sX=K();end;end;local jX=K()~=0;local rX=nil;local lX=(1.076407094E9);do while true do do if lX<1.794976029E9 then lX=1.794976029E9;do for qX=1,QX do local UX=(DP);local gX,VX=nil,(2.34448526E8);do while true do do if VX>2.34448526E8 then do if gX==10 then UX=G(pP(sX),nP());elseif gX==74 then do UX=nP()+uP(nP())*l;end;elseif gX==0XC then UX=FP(0X0,BP());elseif gX==0X87 then do UX=G(pP(sX),nP());end;elseif gX==0X9D then UX=G(pP(sX),3);elseif gX==182 then UX=K()==1;elseif gX==0x2D then UX=nP();elseif gX==0XB1 then do UX=nP();end;elseif gX==33 then UX=nP()+xP(nP())*l;elseif gX==0Xd7 then UX=vP();elseif gX==230 then UX=G(pP(sX),20);elseif gX==88 then UX=BP();elseif gX~=120 then else do UX=G(pP(sX),nP());end;end;end;break;elseif VX<1.423162517E9 then do VX=1.423162517E9;end;gX=K();end;end;end;end;local MX=({UX,{}});for iX=6630.0,86373.0,3706.0 do if iX<10336.0 then(PX)[qX-0x1]=_X;(CX)[_X]=MX;else do if not(iX>6630.0)then else _X=_X+1;do break;end;end;end;end;end;do if jX then do for iX=7122.0,26471.0,9781.0 do if iX==7122.0 then eP[EP]=MX;elseif iX==16903.0 then EP=EP+1;break;end;end;end;end;end;end;end;else rX=nP();do for qX=1,rX do local UX=nP();local gX=(nP());local MX,VX=nil,1.677941149E9;while true do if VX==1.677941149E9 then VX=1.722027608E9;MX=nP();elseif VX==1.722027608E9 then for iX=UX,gX do oX[iX]=MX;end;break;end;end;end;end;do break;end;end;end;end;end;do(RX)[0XE]=nP();end;(RX)[XP]=K();local XX=(1.522178863E9);local kX=(-40437610);while true do if not(XX>1.498713794E9)then XX=1.737326393E9;(RX)[5]=NP();else if XX==1.737326393E9 then do kX=RX[4];end;do break;end;else XX=1.498713794E9;(RX)[0X10]=nP();end;end;end;local tX=nP()-84662;for qX=0X1,tX do local UX=(nil);local gX,MX,VX,iX,mX,ZX=nil,nil,0X37bC1a39,0.4381503063931199,nil,(nil);for dX=5548.0,68557.0,7497.0 do if not(dX<=5548.0)then if dX==20542.0 then do(kX)[qX]={[5]=ZX,[0x00007]=mX,[6]=UX,[0X4]=iX,[0X3]=iX==3 and JP()or(MX-iX)/8,[0X2]=(VX-mX)/8,[0x1]=(gX-ZX)/8};end;do break;end;else iX,mX,ZX=MX%8,VX%8,gX%8;end;else UX,gX,MX,VX=bP(),bP(),bP(),bP();end;end;end;(RX)[18]=K();local WX=(""p\057\100\124\118\049"");local IX=(true);do for qX=5353.0,15280.0,9927.0 do do if qX>5353.0 then do WX=nP()-0X10216;end;IX=RX[0X00007];for qX=0,WX-aP do IX[qX]=JP();end;elseif qX<15280.0 then(RX)[15]=nP();end;end;end;end;for qX=1,tX do local UX=(RX[4][qX]);for gX,MX in C,z do local iX=false;local VX=(nil);do for mX=7280.0,8922.0,821.0 do do if not(mX>7280.0)then VX=w[MX];else if mX<8922.0 then iX=UX[VX];else if iX==0x2 then local mX=(PX[UX[MX]]);local ZX=(CX[mX]);if ZX then local dX,HX=nil,1.610086474E9;while true do do if HX==1.610086474E9 then UX[VX]=ZX[1];do HX=6.74106145E8;end;elseif HX==6.74106145E8 then do HX=8.96379404E8;end;dX=ZX[kP];else do if HX~=8.96379404E8 then else dX[#dX+1]={UX,VX};break;end;end;end;end;end;end;elseif iX==1 then(UX)[MX]=qX+UX[MX]+1;elseif iX==4 then(UX)[MX]=IX[UX[MX]];elseif iX==5 then(UX)[MX]=_(UX[MX]);end;end;end;end;end;end;end;end;return RX;end;end;if not(not bX[1.613456342E9])then AX=bX[1.613456342E9];else AX=7.33296649E8;do bX[1.613456342E9]=AX;end;end;elseif AX<1.815483552E9 and AX>1.258667903E9 then if not bX[4201209.0]then do AX=1.815483552E9;end;bX[4201209.0]=AX;else AX=bX[4201209.0];end;elseif AX>1.317728005E9 then TP=function(PX,CX,RX)local QX,sX,jX,oX=RX[0X3],RX[9],RX[0x6],(RX[0X0001]);local _X,LX=RX[4],RX[0X00007];local rX=(RX[5]);local OX=RX[0X2];local tX=(A({},{__mode='\118'}));local kX=(nil);kX=function(...)local IX,aX=1,{};local lX=((r and r()or _ENV));local qX,UX=cP(...);local XX=(lX==t and PX or lX);do qX=qX-0X1;end;local DX,WX={[1]=RX,[2]=aX},0x00000;for mX=0X00,qX do do if OX>mX then(aX)[mX]=UX[mX+1];else break;end;end;end;if not jX then UX=nil;elseif oX then do aX[OX]={n=qX>=OX and qX-OX+1 or 0,j(UX,OX+0X1,qX+0X1)};end;end;if XX~=lX then if o then o(kX,XX);else _ENV=XX;end;end;local gX,MX,VX,iX=c(function()do while true do local mX=_X[IX];local ZX=mX[0X6];do IX=IX+0x0001;end;do if not(ZX>=0X3B)then if not(ZX<29)then if not(ZX>=0x2C)then if not(ZX>=36)then if not(ZX<0X20)then if ZX>=0X22 then if ZX~=0X23 then WX=mX[0X1];aX[WX]();do WX=WX-0x1;end;else(aX)[mX[0X1]]=aX[mX[0X3]]-aX[mX[0X2]];end;else if ZX==0X21 then aX[mX[0x01]]=f(aX[mX[0x3]],aX[mX[0X02]]);else local dX=mX[0X1];local HX,fX,zX=aX[dX]();if not(HX)then else aX[dX+0X1]=fX;aX[dX+2]=zX;IX=mX[3];end;end;end;else if ZX<30 then if aX[mX[0X3]]~=aX[mX[2]]then else IX=mX[0X1];end;else do if ZX==31 then aX[mX[0X00001]][aX[mX[3]]]=mX[7];else(DX)[mX[3]]=aX[mX[1]];end;end;end;end;else if not(ZX>=0X00028)then if not(ZX>=0X026)then if ZX~=37 then if mX[2]==0x13 then do IX=IX-0X1;end;_X[IX]={[0X00003]=(mX[0X3]-54),[0x00001]=(mX[1]-54),[0X6]=69};elseif mX[0X0002]~=0x67 then(aX)[mX[1]]=nil;else IX=IX-1;_X[IX]={[1]=(mX[1]-248),[0x03]=(mX[0X3]-248),[6]=0X71};end;else aX[mX[1]]=mX[4]*aX[mX[0X02]];end;else if ZX==0X27 then aX[mX[1]]=#aX[mX[0X00003]];else if mX[0x2]==0x82 then do IX=IX-0X1;end;(_X)[IX]={[0X6]=44,[0x3]=(mX[3]-206),[0X001]=(mX[1]-206)};else local HX=qX-OX;local dX=(mX[1]);if HX<0X0 then do HX=-0X1;end;end;for fX=dX,dX+HX do aX[fX]=UX[OX+(fX-dX)+0x1];end;WX=dX+HX;end;end;end;else if ZX>=0X2A then if ZX==43 then(aX)[mX[1]]=aX[mX[3]];else local dX=(mX[1]);(aX[dX])(aX[dX+0x1]);WX=dX-1;end;else if ZX==0x029 then for dX=mX[0X1],mX[0x3]do(aX)[dX]=nil;end;else do aX[mX[0X1]]=aX[mX[0X3]]%mX[7];end;end;end;end;end;else if not(ZX>=51)then if ZX<0x02f then if ZX>=0X002d then if ZX~=0x2E then(aX)[mX[1]]=aX[mX[3]]<mX[0X07];else local dX,HX=mX[0X1],aX[mX[0X3]];(aX)[dX+0X001]=HX;do(aX)[dX]=HX[mX[7]];end;end;else repeat local dX,HX,fX=tX,aX,mX[0X1];local zX={};for wX,yX in C,dX do for KX,nS in C,yX do if nS[0X01]==HX and nS[2]>=fX then local vS=(nS[0X2]);do if not zX[vS]then(zX)[vS]={HX[vS]};end;end;(nS)[1]=zX[vS];nS[2]=1;end;end;end;until true;end;else if ZX<0X31 then if ZX~=48 then local dX=(mX[0x1]);local HX=(mX[0X2]-0X00001)*0X32;local fX=(aX[dX]);do for zX=0X1,WX-dX do fX[HX+zX]=aX[dX+zX];end;end;else local dX=mX[1];local fX=(aX[dX]);local HX=((mX[0X02]-1)*0x32);for zX=0X0001,mX[3]do do(fX)[HX+zX]=aX[dX+zX];end;end;end;else do if ZX~=0X32 then aX[mX[1]]=XX[mX[4]];else(aX)[mX[1]]=aX[mX[3]]>mX[7];end;end;end;end;else do if ZX<55 then if ZX>=0X35 then if ZX==0x36 then aX[mX[0X1]]=true;else(aX)[mX[1]]=aX[mX[0X03]]^aX[mX[0X002]];end;else do if ZX==0X34 then local dX=(mX[1]);WX=dX+mX[3]-0X01;(aX[dX])(j(aX,dX+1,WX));WX=dX-1;else aX[mX[0x1]]=SP[mX[0X3]];end;end;end;else if not(ZX>=57)then if ZX==0X000038 then aX[mX[1]]=m(aX[mX[3]],aX[mX[0X02]]);else do(aX)[mX[1]]=aX[mX[3]]<aX[mX[0x2]];end;end;else do if ZX==58 then(aX)[mX[0X1]]=aX[mX[0X3]]>=mX[0X0007];else repeat local HX,fX=tX,aX;local zX={};for wX,yX in C,HX do do for KX,nS in C,yX do if not(nS[0X1]==fX and nS[2]>=0X000)then else local vS=(nS[2]);if not(not zX[vS])then else(zX)[vS]={fX[vS]};end;nS[0X1]=zX[vS];do nS[2]=0X1;end;end;end;end;end;until true;local dX=(mX[0X0001]);return false,dX,dX;end;end;end;end;end;end;end;else do if not(ZX>=0Xe)then if ZX<7 then if ZX<3 then if ZX>=1 then do if ZX==2 then local HX=(nil);local dX=mX[3];local fX=dX[8];local zX=(#fX);if not(zX>0X0000)then else HX={};for wX=0X1,zX do local yX=(fX[wX]);do if yX[0X1]~=0 then(HX)[wX-1]=CX[yX[0X2]];else(HX)[wX-0x001]={aX,yX[0X2]};end;end;end;(Y)(tX,HX);end;(aX)[mX[0X00001]]=TP(XX,HX,dX);else(XX)[mX[0x00004]]=aX[mX[0X1]];end;end;else aX[mX[0X001]]=aX[mX[3]]%aX[mX[2]];end;else if not(ZX<0X5)then do if ZX==6 then local dX=mX[0x001];local HX,fX=aX[dX]();do if not(HX)then else IX=mX[3];do(aX)[dX+3]=fX;end;end;end;else do aX[mX[0X1]]=i(aX[mX[0X3]],aX[mX[2]]);end;end;end;else if ZX~=4 then aX[mX[0X0001]]=mX[0X4];else aX[mX[0X1]]=mX[0X0004]^aX[mX[0X02]];end;end;end;else if not(ZX>=0xA)then if ZX<0X00008 then do aX[mX[0X1]]=aX[mX[0X3]]==mX[0X7];end;else if ZX~=9 then do(aX)[mX[0X1]]=mX[0X4]>=mX[0X0007];end;else do if aX[mX[3]]==mX[7]then IX=mX[0x1];end;end;end;end;else do if not(ZX<12)then do if ZX==13 then if not aX[mX[1]]then IX=mX[3];end;else do(aX)[mX[0x1]]=mX[3];end;end;end;else do if ZX==0X000b then IX=mX[0X3];else aX[mX[0X001]]=aX[mX[0X3]]<=mX[0X7];end;end;end;end;end;end;else do if ZX>=0x15 then do if not(ZX<0X019)then if not(ZX>=27)then if ZX~=26 then(aX)[mX[0x01]]=aX[mX[0X0003]]+mX[7];else do(aX)[mX[0X0001]]=aX[mX[3]]/mX[0x7];end;end;else if ZX~=28 then local dX=(mX[3]);local HX=(aX[dX]);for fX=dX+0x1,mX[0X0002]do HX=HX..aX[fX];end;(aX)[mX[0X0001]]=HX;else local dX=aX[mX[3]]/aX[mX[0X2]];(aX)[mX[0x001]]=dX-dX%0X1;end;end;else if not(ZX>=0X017)then if ZX~=0X0016 then aX[mX[0X1]]=aX[mX[3]]*aX[mX[2]];else do if not(not(aX[mX[0X0003]]<=aX[mX[0x2]]))then else IX=mX[0X0001];end;end;end;else do if ZX~=0X018 then local dX=mX[0X0001];(aX)[dX]=aX[dX](aX[dX+1],aX[dX+2]);WX=dX;else repeat local dX,HX=tX,(aX);local fX=({});for zX,wX in C,dX do for yX,KX in C,wX do if not(KX[1]==HX and KX[2]>=0)then else local nS=KX[0X2];if not(not fX[nS])then else(fX)[nS]={HX[nS]};end;(KX)[0X1]=fX[nS];KX[2]=1;end;end;end;until true;return true,mX[1],0;end;end;end;end;end;else if ZX<0X11 then if not(ZX>=0XF)then do(aX)[mX[0X1]]=aX[mX[0x00003]]~=aX[mX[0X2]];end;else if ZX~=0x10 then if mX[2]==100 then IX=IX-0X1;_X[IX]={[3]=(mX[3]-0x36),[0X1]=(mX[1]-54),[0X0006]=0X71};elseif mX[0X00002]==74 then IX=IX-0x1;_X[IX]={[0X1]=(mX[1]-69),[0x006]=69,[3]=(mX[0X003]-69)};elseif mX[2]~=0xed then(aX)[mX[1]]=UX[OX+0x1];else IX=IX-1;_X[IX]={[3]=(mX[3]-0X0e7),[6]=39,[0x1]=(mX[1]-231)};end;else local dX=(CX[mX[0X3]]);aX[mX[1]]=dX[1][dX[2]];end;end;else do if ZX>=19 then do if ZX~=0X14 then local dX=(mX[1]);local HX,fX=aX[dX]();if not(HX)then else(aX)[dX+0X00001]=fX;IX=mX[0X003];end;else do aX[mX[1]]=aX[mX[0X03]]~=mX[7];end;end;end;else if ZX~=0X12 then local dX=mX[0x1];aX[dX]=aX[dX](aX[dX+1]);WX=dX;else local dX=(mX[1]);local HX=mX[0x3];if HX~=0X0 then WX=dX+HX-0X1;end;local fX,zX,wX=mX[0X2],nil,nil;do if HX~=0x00001 then do zX,wX=cP(aX[dX](j(aX,dX+0x1,WX)));end;else zX,wX=cP(aX[dX]());end;end;if fX==1 then do WX=dX-1;end;else if fX~=0X0 then zX=dX+fX-2;do WX=zX+0X00001;end;else zX=zX+dX-1;do WX=zX;end;end;local yX=(0);for KX=dX,zX do yX=yX+1;aX[KX]=wX[yX];end;end;end;end;end;end;end;end;end;end;end;else do if not(ZX<0x059)then if ZX>=104 then if not(ZX<0x6f)then if ZX>=115 then do if not(ZX>=0X000075)then if ZX==0x000074 then aX[mX[1]]=mX[4]>=aX[mX[0X2]];else local HX=mX[3];local dX=(mX[1]);do WX=dX+HX-1;end;repeat local fX,zX,wX=tX,aX,({});for yX,KX in C,fX do for nS,vS in C,KX do if not(vS[1]==zX and vS[0X2]>=0X0)then else local BS=(vS[2]);if not wX[BS]then wX[BS]={zX[BS]};end;do vS[1]=wX[BS];end;(vS)[0x0002]=0X0001;end;end;end;until true;do return true,dX,HX;end;end;else if ZX~=118 then if mX[0X2]==0x00e1 then IX=IX-0X01;do _X[IX]={[0X1]=(mX[1]-26),[3]=(mX[3]-0X1a),[6]=41};end;elseif mX[0x2]~=92 then if not(aX[mX[0X1]])then else IX=mX[0X3];end;else IX=IX-0X1;_X[IX]={[6]=39,[0x1]=(mX[1]-0xE5),[3]=(mX[3]-229)};end;else aX[mX[1]][mX[0X4]]=mX[0X7];end;end;end;else if not(ZX>=0X71)then if ZX~=0X0070 then local dX=mX[1];local HX=L(function(...)O();do for fX in...do O(true,fX);end;end;end);HX(aX[dX],aX[dX+0X1],aX[dX+0X2]);WX=dX;aX[dX]=HX;IX=mX[3];else(aX)[mX[1]]=aX[mX[3]][mX[0x7]];end;else do if ZX~=114 then if mX[2]==192 then IX=IX-1;do _X[IX]={[0X6]=0x02B,[1]=(mX[0X1]-163),[3]=(mX[3]-163)};end;elseif mX[0X02]==0X00002b then do IX=IX-1;end;do _X[IX]={[6]=44,[0x3]=(mX[0X3]-0X007B),[0X1]=(mX[0X0001]-123)};end;elseif mX[0X02]~=251 then repeat local dX,HX=tX,aX;local fX={};for zX,wX in C,dX do for yX,KX in C,wX do if not(KX[1]==HX and KX[2]>=0X000)then else local nS=KX[2];if not fX[nS]then(fX)[nS]={HX[nS]};end;do KX[1]=fX[nS];end;(KX)[2]=0x01;end;end;end;until true;do return;end;else IX=IX-1;(_X)[IX]={[3]=(mX[0X3]-0X24),[0X1]=(mX[0X1]-0X24),[0x6]=100};end;else repeat local dX,HX=tX,aX;local fX=({});for zX,wX in C,dX do for yX,KX in C,wX do if not(KX[1]==HX and KX[0x2]>=0x0)then else local nS=(KX[2]);do if not fX[nS]then(fX)[nS]={HX[nS]};end;end;(KX)[0X1]=fX[nS];(KX)[2]=1;end;end;end;until true;do return false,mX[1],WX;end;end;end;end;end;else if not(ZX>=107)then if ZX<0X00069 then do aX[mX[1]]=aX[mX[0X3]]*mX[7];end;else if ZX==0X06A then(aX)[mX[0X1]]=mX[4]-mX[7];else if not(not(mX[0x4]<aX[mX[0X2]]))then else IX=mX[0X1];end;end;end;else if ZX>=109 then if ZX==110 then(aX)[mX[0x01]]=mX[4]<mX[0X0007];else(aX)[mX[1]]=aX[mX[0X03]][aX[mX[0X2]]];end;else if ZX~=108 then(aX)[mX[0X1]]=DX[mX[3]];else do aX[mX[1]][mX[4]]=aX[mX[2]];end;end;end;end;end;else do if not(ZX>=96)then if not(ZX<0X5C)then if not(ZX>=94)then if ZX~=0X5D then local dX=(mX[0x03]);local fX,HX=dX[0X8],nil;local zX=(#fX);do if not(zX>0X00)then else HX={};do for wX=1,zX do local yX=fX[wX];do if yX[0x1]==0x000 then do HX[wX-0X00001]={aX,yX[0X2]};end;else HX[wX-0X1]=CX[yX[2]];end;end;end;end;Y(tX,HX);end;end;do(aX)[mX[0X1]]=B[mX[0X00002]](HX);end;else if not(aX[mX[3]]<mX[0X0007])then IX=mX[0x00001];end;end;else do if ZX~=95 then if not(aX[mX[0X003]]<aX[mX[2]])then else IX=mX[0X1];end;else local dX=mX[0x1];local HX,fX=aX[dX]();do if HX then for zX=1,mX[0x2]do do aX[dX+zX]=fX[zX];end;end;IX=mX[3];end;end;end;end;end;else if ZX<0x5A then aX[mX[1]]={};else do if ZX==91 then aX[mX[0X1]]=Z(aX[mX[3]],aX[mX[0X2]]);else aX[mX[1]]=mX[0X004]~=mX[7];end;end;end;end;else do if ZX<0X064 then do if ZX>=98 then if ZX~=99 then WX=mX[0X1];do(aX)[WX]=aX[WX]();end;else if aX[mX[0x3]]==aX[mX[2]]then else IX=mX[0X001];end;end;else if ZX==0x61 then(aX)[mX[0X1]]=aX[mX[3]]+aX[mX[0X00002]];else local dX=(mX[1]);do(aX)[dX]=aX[dX](j(aX,dX+0X001,WX));end;WX=dX;end;end;end;else if not(ZX<0X066)then if ZX==103 then if not(not(aX[mX[0X003]]<=mX[7]))then else IX=mX[0X0001];end;else aX[mX[0X1]]=d(aX[mX[3]]);end;else if ZX~=101 then if mX[2]==0X015 then IX=IX-0X1;(_X)[IX]={[3]=(mX[0X0003]-174),[0x1]=(mX[0X001]-0XaE),[0X0006]=0X71};else repeat local HX,fX=tX,aX;local zX={};do for wX,yX in C,HX do do for KX,nS in C,yX do do if not(nS[1]==fX and nS[2]>=0x00)then else local vS=nS[0X2];if not zX[vS]then zX[vS]={fX[vS]};end;(nS)[0X01]=zX[vS];(nS)[0X2]=1;end;end;end;end;end;end;until true;local dX=mX[0x00001];return false,dX,dX+mX[3]-0X002;end;else(aX)[mX[0X1]]=aX[mX[0X03]]>=aX[mX[2]];end;end;end;end;end;end;end;else do if not(ZX>=74)then do if ZX>=0X42 then if ZX>=0X46 then if not(ZX>=0X0048)then if ZX~=71 then local dX=mX[3];(aX)[mX[1]]=aX[dX]..aX[dX+1];else repeat local HX,fX=tX,(aX);local zX={};for wX,yX in C,HX do do for KX,nS in C,yX do if not(nS[0X0001]==fX and nS[0X2]>=0X0)then else local vS=(nS[0x2]);if not(not zX[vS])then else(zX)[vS]={fX[vS]};end;nS[1]=zX[vS];(nS)[0X2]=1;end;end;end;end;until true;local dX=(mX[1]);WX=dX+0x01;return true,dX,2;end;else if ZX~=0x49 then(aX)[mX[0x01]]={j({},1,mX[0x3])};else aX[mX[1]]=aX[mX[3]]>aX[mX[0X2]];end;end;else do if not(ZX>=68)then if ZX==0X43 then(aX)[mX[1]]=aX[mX[0X3]]==aX[mX[0x2]];else local dX=(mX[0X1]);local HX=L(function(...)O();for fX,zX in...do O(true,fX,zX);end;end);HX(aX[dX],aX[dX+1],aX[dX+0x2]);WX=dX;aX[dX]=HX;IX=mX[3];end;else if ZX==69 then if mX[2]==0X0008e then IX=IX-0X1;(_X)[IX]={[0X1]=(mX[0X0001]-0X006e),[0X6]=57,[0x003]=(mX[3]-0X00006e)};else(aX)[mX[1]]=not aX[mX[3]];end;else local dX=mX[1];local fX=aX[dX+1];local zX=aX[dX+0x2];local HX=aX[dX];do(aX)[dX]=L(function()for wX=HX,fX,zX do(O)(true,wX);end;end);end;do IX=mX[0X03];end;end;end;end;end;else if ZX>=62 then do if not(ZX>=0x40)then do if ZX~=0X3F then if mX[2]==0X00fF then IX=IX-0X1;(_X)[IX]={[3]=(mX[0X3]-154),[6]=0X00024,[1]=(mX[1]-154)};elseif mX[2]==0xcF then IX=IX-1;(_X)[IX]={[6]=87,[0x1]=(mX[1]-27),[3]=(mX[0X3]-0X001b)};elseif mX[2]==137 then do IX=IX-0X0001;end;_X[IX]={[0X6]=0X0039,[1]=(mX[1]-189),[3]=(mX[0X3]-0Xbd)};else local dX=(mX[1]);do for HX=dX,dX+(mX[0X3]-1)do do aX[HX]=UX[OX+(HX-dX)+0X1];end;end;end;end;else(aX)[mX[1]]=mX[4]-aX[mX[2]];end;end;else do if ZX==0X0041 then local dX=(CX[mX[0X3]]);(dX[0X1])[dX[0X2]]=aX[mX[0X1]];else local dX=mX[0X0001];(aX[dX])(j(aX,dX+1,WX));WX=dX-0X0001;end;end;end;end;else if not(ZX<0x3c)then do if ZX~=0x3D then do aX[mX[1]]=aX[mX[3]]<=aX[mX[0X2]];end;else local dX=(mX[0x1]);WX=dX+mX[3]-0X00001;do aX[dX]=aX[dX](j(aX,dX+1,WX));end;WX=dX;end;end;else aX[mX[1]]=mX[4]+mX[7];end;end;end;end;else if ZX<81 then if ZX>=0X0004d then if not(ZX<0X4f)then if ZX~=80 then(aX)[mX[0X01]]=mX[4]+aX[mX[2]];else(aX)[mX[1]]=aX[mX[0X3]]-mX[7];end;else do if ZX~=0x004e then do aX[mX[0X1]]=H(aX[mX[3]],aX[mX[2]]);end;else(SP)[mX[3]]=aX[mX[1]];end;end;end;else if not(ZX<0X4B)then do if ZX==76 then repeat local dX,HX,fX=tX,aX,({});do for zX,wX in C,dX do do for yX,KX in C,wX do if KX[0x1]==HX and KX[0x2]>=0 then local nS=KX[2];if not fX[nS]then(fX)[nS]={HX[nS]};end;KX[0x1]=fX[nS];(KX)[0X002]=1;end;end;end;end;end;until true;do return true,mX[1],0X0001;end;else local dX=(mX[0X01]);(aX[dX])(aX[dX+1],aX[dX+2]);WX=dX-1;end;end;else if not(aX[mX[0X3]]<=aX[mX[0X002]])then else IX=mX[1];end;end;end;else if not(ZX<0X55)then if ZX>=0X57 then if ZX==0X58 then do if aX[mX[0X003]]~=mX[7]then do IX=mX[1];end;end;end;else if mX[0X2]~=72 then(aX)[mX[1]]=-aX[mX[0X0003]];else do IX=IX-1;end;do(_X)[IX]={[1]=(mX[0x01]-0X00006a),[3]=(mX[0X3]-106),[0X6]=57};end;end;end;else if ZX==86 then aX[mX[0X01]]=mX[0X00004]<=aX[mX[2]];else do(aX)[mX[1]]=aX[mX[3]]/aX[mX[2]];end;end;end;else do if ZX>=0X53 then if ZX~=0X0054 then do(aX[mX[0x1]])[aX[mX[0X3]]]=aX[mX[0X00002]];end;else aX[mX[1]]=mX[0X4]>mX[0X7];end;else if ZX~=82 then if not(not(aX[mX[3]]<aX[mX[0x2]]))then else IX=mX[1];end;else local dX=(mX[0x1]);local HX=(L(function(...)O();do for fX,zX,wX,yX,KX,nS,vS,BS,NS,bS in...do(O)(true,{fX,zX,wX,yX,KX,nS,vS,BS,NS,bS});end;end;end));(HX)(aX[dX],aX[dX+0x1],aX[dX+0X02]);WX=dX;do aX[dX]=HX;end;IX=mX[3];end;end;end;end;end;end;end;end;end;end;end;end;end;end);do if gX then if MX then if iX~=1 then return aX[VX](j(aX,VX+0X1,WX));else return aX[VX]();end;elseif not(VX)then else return j(aX,VX,iX);end;else do if e(MX)=='\115t\114\105n\103'then if J(MX,""at\116\101\109p\116 \116\111 \121i\101\108\100\032a\099\114\111\115\115\032m\101\116am\101\116h\111d/\067\037\045\099a\108\108\032bo\117\110da\114y"")then return O();end;if not(J(MX,'^\046-:\037\100\043\058\032'))then(S)(MX,0);else S('Luraph\032S\099r\105\112\116:'..(sX[IX-0x1]or""\040i\110t\101r\110a\108)"")..""\058 ""..E(MX),0);end;else S(MX,0X0);end;end;end;end;end;do if o then(o)(kX,PX);end;end;return kX;end;if not bX[1.82455706E9]then do AX=1.258667903E9;end;bX[1.82455706E9]=AX;else do AX=bX[1.82455706E9];end;end;elseif AX>1.58156498E8 and AX<1.258667903E9 then AP=JP();AP=TP(t,nil,AP)(JP,v,k,YP,BP,K,nP,N);do return TP(t,nil,AP);end;else if AX<1.317728005E9 and AX>7.33296649E8 then do JP=nil;end;if not bX[1.087075219E9]then AX=1.58156498E8;(bX)[1.087075219E9]=AX;else AX=bX[1.087075219E9];end;end;end;until false;end)(string.char,65536,string,12,0x00003,2147483648,unpack,nil,8,0X100000,0X00006,string.byte,table.unpack,0X10,pcall,setmetatable,""b\120or"",0X02,'b\111\114',math,7,0X0005,2097152,coroutine.wrap,11,assert,1,0xf,getfenv,""LPH~"",string.gsub,table.insert,4,'\114s\104ift',0,rawset,0x00D,setfenv,function(...)((...))[...]=nil;end,{},{7618,3289613934,2605911904,0X00005a496a6E,3650193320,4185698117,2988702395,4220176233,3036667586})(...);"
zKVdqf2v,Untitled,lisaioana,C++,Thursday 22nd of June 2023 10:33:08 AM CDT,"#include <iostream>
#include <cstring>
#include <fstream>
using namespace std;

ifstream fin(""date.in.txt"");
ofstream fout(""date.out.txt"");

int n, a[1001], x, y, val, u, nr, rez;

int main()
{
    fin >> n;
    val = u = 1;
    for (int i = 1; i <= n; i++)
    {
        fin >> nr;
        for (int j = u; j <= nr - 1; j++)
            a[j] = val;
        val++;
        a[nr] = val;
        val++;
        u = nr + 1;
    }
    //for (int i = 1; i <= 20; i++)
    //    fout << a[i] << "" "";

    while (fin >> x >> y)
    {
        if (a[x] == a[y])
            rez++;
    }
    fout << rez;
    return 0;
}"
xGmDVt27,двумерный => одномерный,VanoHa,Python,Thursday 22nd of June 2023 10:13:55 AM CDT,"n = [[1, 2, 3, 4],
     [5, 6, 7, 8],
     [9, 8, 7, 6],
     [5, 4, 3, 2]]

ic([x for row in n for x in row])"
XfjyAEUb,Random Craft System Interlude v3 update,tensador125,Java,Thursday 22nd of June 2023 09:34:07 AM CDT,"### Eclipse Workspace Patch 1.0
#P Orionwins
diff --git src/l2jwins/game/model/actor/instance/L2RandomCraftInstance.java src/l2jwins/game/model/actor/instance/L2RandomCraftInstance.java
index 8be6aff..a5d3d1b 100644
--- src/l2jwins/game/model/actor/instance/L2RandomCraftInstance.java
+++ src/l2jwins/game/model/actor/instance/L2RandomCraftInstance.java
@@ -88,9 +88,11 @@
 				player.getInventory().destroyItemByItemId(""Random Craft"", Config.RANDOM_CRAFT_ITEM_ID_CONSUME, Config.RANDOM_CRAFT_ITEM_CONSUME_REFRESH, player, this);
 				
 				generateItems(player);
-				showHtmlWindow(player);
+				
 				player.sendPacket(new ItemList(player, true));
 				
+				showHtmlWindow(player);
+				
 				// Almacene los elementos generados en la base de datos para el jugador
 				saveGeneratedItems(player);
 			}
@@ -105,8 +107,16 @@
 			deleteGeneratedItems(player);
 			
 			createItem(player);
+			
+			// showHtmlWindow(player);
+		}
+		
+		else if (command.startsWith(""back""))
+		{
+			
+ 			showHtmlWindow(player);
+ 		}
+		
 	}
 	
 	private void generateItems(L2PcInstance player)
@@ -380,6 +390,10 @@
 				// Borra la lista de elementos para el jugador
 				player.clearGeneratedCraftItems();
 				setHasGeneratedItems(false);
+				
+				// Muestra la ventana de felicitaciones con el item ganador
+				showCongratulationsWindow(player, craftItem);
+				
 				return;
 			}
 		}
@@ -456,6 +470,42 @@
 		player.sendPacket(html);
 	}
 	
+	private void showCongratulationsWindow(L2PcInstance player, RandomCraftItem craftItem)
+	{
+		StringBuilder html = new StringBuilder();
+		
+		html.append(""<html><body>"");
+		html.append(""<center>Felicidades, has ganado un item</center>"");
+		html.append(""<br>"");
+		html.append(""<center>¡Has recibido</center>"");
+		html.append(""<br>"");
+		html.append(""<br>"");
+		html.append(""<img src=\""L2UI.SquareGray\"" width=295 height=1>"");
+		html.append(""<center>"");
+		html.append(""<table>"");
+		html.append(""<tr>"");
+		html.append(""<td>"");
+		html.append(""<img src="").append(craftItem.getIcon()).append("" width=32 height=32>"");
+		html.append(""</td>"");
+		html.append(""<td width=260>"");
+		html.append(""<font color=LEVEL>"").append(craftItem.getItem().getName()).append(""</font>"");
+		html.append(""</td>"");
+		html.append(""</tr>"");
+		html.append(""</table>"");
+		html.append(""</center>"");
+		html.append(""<img src=\""L2UI.SquareGray\"" width=295 height=1>"");
+		html.append(""<br>"");
+		html.append(""<br>"");
+		html.append(""<br>"");
+		html.append(""<br>"");
+		html.append(""<center>"");
+		html.append(""<button value=\""Back\"" action=\""bypass -h npc_"").append(getObjectId()).append(""_back\"" width=75 height=21 back=\""L2UI.DefaultButton_click\"" fore=\""L2UI.DefaultButton\"">"");
+		html.append(""</center>"");
+		html.append(""</body></html>"");
+		
+		showHtmlWindow(player, html.toString());
+	}
+	
 	/**
 	 * @return the hasGeneratedItems
 	 */
"
LZp4vDn0,Como Modificar un Valor de un Array Asociativo en PHP,NubeColectiva,PHP,Thursday 22nd of June 2023 09:30:50 AM CDT,"<?php

	$usuario = array(
		""nombre"" => ""Carlos Torres"",
		""edad"" => 25,
		""email"" => ""ctorres@mail.com""
	);
	
	echo $usuario[""nombre""] = ""Luis Cardenas"",""<br>""; // Modificamos el nombre
	echo $usuario[""edad""] = 40,""<br>""; // Modificamos la edad 
	echo $usuario[""email""],""<br>"";

?>"
nJSyT5p9,邀您一起看：38医学护理PPT模板,xiaomianao666,JavaScript,Thursday 22nd of June 2023 09:03:57 AM CDT,海阔视界规则分享，当前分享的是：二级页面详情￥page_detail￥38医学护理PPT模板@@eyJkYXRhIjoie1wiYXNzb2NpYXRlZE1vZGVsc01hcEZvckpvaW5UYWJsZVwiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhGS1wiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhvdXRGS1wiOnt9LFwiZmllbGRzVG9TZXRUb0RlZmF1bHRcIjpbXSxcImdtdE1vZGlmaWVkXCI6MCxcImlkXCI6MCxcImxhc3RfY2hhcHRlcl9ydWxlXCI6XCJcIixcImxpc3RUb0NsZWFyQXNzb2NpYXRlZEZLXCI6W10sXCJsaXN0VG9DbGVhclNlbGZGS1wiOltdLFwicGFnZUxpc3RcIjpbe1wiY29sX3R5cGVcIjpcIm1vdmllXzNcIixcIm5hbWVcIjpcIue9keebmOivpuaDhVwiLFwicGF0aFwiOlwiZGV0YWlsXCIsXCJydWxlXCI6XCJqczpcXG5ldmFsKGZldGNoKCdoaWtlcjovL2ZpbGVzL3J1bGVzL2ljeS9hbGkuanMnKSk7XFxuYWxpLmluaXRDb25maWcoKTtcXG5hbGkuYWxpUnVsZSgpO1wifSx7XCJjb2xfdHlwZVwiOlwibW92aWVfMV9sZWZ0X3BpY1wiLFwibmFtZVwiOlwi6LWE5rqQ572R6aG16K+m5oOFXCIsXCJwYXRoXCI6XCJzaXRlLWRldGFpbFwiLFwicnVsZVwiOlwianM6XFxuZXZhbChmZXRjaCgnaGlrZXI6Ly9maWxlcy9ydWxlcy9pY3kvYWxpLmpzJykpO1xcbmFsaS5kZXRhaWxQYWdlKCk7XCJ9LHtcImNvbF90eXBlXCI6XCJtb3ZpZV8zXCIsXCJuYW1lXCI6XCLkuKrkurrnvZHnm5jor6bmg4VcIixcInBhdGhcIjpcImRyaXZlXCIsXCJydWxlXCI6XCJqczpcXG5ldmFsKGZldGNoKCdoaWtlcjovL2ZpbGVzL3J1bGVzL2ljeS9hbGkuanMnKSk7XFxuYWxpLmluaXRDb25maWcoKTtcXG5hbGkubXlBbGlSdWxlKCk7XCJ9XSxcInBhcmFtc1wiOlwie1xcXCJpZFxcXCI6XFxcIl9fYXBwMUAxMVxcXCIsXFxcImluaGVyaXRUaXRsZVxcXCI6ZmFsc2V9XCIsXCJzYXZlZFwiOmZhbHNlLFwidGl0bGVcIjpcIuS6keebmOaxh+W9sVwiLFwidmVyc2lvblwiOjAsXCJ1cmxcIjpcImh0dHBzOi8vd3d3LmFsaXl1bmRyaXZlLmNvbS9zL2RDWllZOUtZRGdhPz9meXBhZ2VcIixcImNvbF90eXBlXCI6XCJtb3ZpZV8zXCIsXCJmaW5kX3J1bGVcIjpcImpzOlxcbmV2YWwoZmV0Y2goJ2hpa2VyOi8vZmlsZXMvcnVsZXMvaWN5L2FsaS5qcycpKTtcXG5hbGkuaW5pdENvbmZpZygpO1xcbmFsaS5hbGlSdWxlKCk7XCIsXCJncm91cFwiOlwi4pGg572R55uYXCIsXCJ1YVwiOlwibW9iaWxlXCIsXCJwcmVSdWxlXCI6XCJ2YXIgYWxpanMgPSBmZXRjaENhY2hlKCdodHRwczovL2dpdGVlLmNvbS9mbHkxMzk3L2hpa2VyLWljeS9yYXcvbWFzdGVyL2FsaS5qcycpO1xcbi8vdmFyIGFsaWpzID0gbnVsbDtcXG5pZiAoIWFsaWpzIHx8ICFhbGlqcy5pbmNsdWRlcygnYWxpLicpKSB7XFxuICAgIGFsaWpzID0gZmV0Y2hDYWNoZSgnaHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL2ZseTEzOTcvaGlrZXItaWN5L2FsaS5qcycpXFxufVxcbmlmICghYWxpanMgfHwgIWFsaWpzLmluY2x1ZGVzKCdhbGkuJykpIHtcXG4gICAgYWxpanMgPSBmZXRjaENhY2hlKCdodHRwOi8vbGZpY3kuY29tOjMwMDAwL21yZmx5L2hpa2VyLWljeS9yYXcvbWFzdGVyL2FsaS5qcycpXFxufVxcbmlmIChhbGlqcykge1xcbiAgICB3cml0ZUZpbGUoXFxcImhpa2VyOi8vZmlsZXMvcnVsZXMvaWN5L2FsaS5qc1xcXCIsIGFsaWpzKTtcXG4gICAgZXZhbChhbGlqcyk7XFxuICAgIGFsaS5wcmVSdWxlKCk7XFxufVwiLFwicGFnZXNcIjpcIlt7XFxcImNvbF90eXBlXFxcIjpcXFwibW92aWVfM1xcXCIsXFxcIm5hbWVcXFwiOlxcXCLnvZHnm5jor6bmg4VcXFwiLFxcXCJwYXRoXFxcIjpcXFwiZGV0YWlsXFxcIixcXFwicnVsZVxcXCI6XFxcImpzOlxcXFxuZXZhbChmZXRjaCgnaGlrZXI6Ly9maWxlcy9ydWxlcy9pY3kvYWxpLmpzJykpO1xcXFxuYWxpLmluaXRDb25maWcoKTtcXFxcbmFsaS5hbGlSdWxlKCk7XFxcIn0se1xcXCJjb2xfdHlwZVxcXCI6XFxcIm1vdmllXzFfbGVmdF9waWNcXFwiLFxcXCJuYW1lXFxcIjpcXFwi6LWE5rqQ572R6aG16K+m5oOFXFxcIixcXFwicGF0aFxcXCI6XFxcInNpdGUtZGV0YWlsXFxcIixcXFwicnVsZVxcXCI6XFxcImpzOlxcXFxuZXZhbChmZXRjaCgnaGlrZXI6Ly9maWxlcy9ydWxlcy9pY3kvYWxpLmpzJykpO1xcXFxuYWxpLmRldGFpbFBhZ2UoKTtcXFwifSx7XFxcImNvbF90eXBlXFxcIjpcXFwibW92aWVfM1xcXCIsXFxcIm5hbWVcXFwiOlxcXCLkuKrkurrnvZHnm5jor6bmg4VcXFwiLFxcXCJwYXRoXFxcIjpcXFwiZHJpdmVcXFwiLFxcXCJydWxlXFxcIjpcXFwianM6XFxcXG5ldmFsKGZldGNoKCdoaWtlcjovL2ZpbGVzL3J1bGVzL2ljeS9hbGkuanMnKSk7XFxcXG5hbGkuaW5pdENvbmZpZygpO1xcXFxuYWxpLm15QWxpUnVsZSgpO1xcXCJ9XVwiLFwicHJveHlcIjpcIlwifSIsInRpdGxlIjoiMzjljLvlrabmiqTnkIZQUFTmqKHmnb8ifQ==
fJMtXaj4,Untitled,IArepetsky,Lua,Thursday 22nd of June 2023 09:02:00 AM CDT,"local Library = loadstring(game:HttpGet(""https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua""))()

local Window = Library.CreateLib(""IAgui"", ""BloodTheme"")

local Tab = Window:NewTab(""Top Scripts"")

local Section = Tab:NewSection(""Scripts"")

Section:NewButton(""Fly (Mobile)"", ""Fly"", function() --Fly on Mobile
    loadstring(""\108\111\97\100\115\116\114\105\110\103\40\103\97\109\101\58\72\116\116\112\71\101\116\40\40\39\104\116\116\112\115\58\47\47\103\105\115\116\46\103\105\116\104\117\98\117\115\101\114\99\111\110\116\101\110\116\46\99\111\109\47\109\101\111\122\111\110\101\89\84\47\98\102\48\51\55\100\102\102\57\102\48\97\55\48\48\49\55\51\48\52\100\100\100\54\55\102\100\99\100\51\55\48\47\114\97\119\47\101\49\52\101\55\52\102\52\50\53\98\48\54\48\100\102\53\50\51\51\52\51\99\102\51\48\98\55\56\55\48\55\52\101\98\51\99\53\100\50\47\97\114\99\101\117\115\37\50\53\50\48\120\37\50\53\50\48\102\108\121\37\50\53\50\48\50\37\50\53\50\48\111\98\102\108\117\99\97\116\111\114\39\41\44\116\114\117\101\41\41\40\41\10\10"")()
end)

Section:NewSlider(""Walkspeed"", ""Walkspeed"", 500, 0, function(s) -- 500 (MaxValue) | 0 (MinValue) -- walkspeed
    game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = s
end)

Section:NewButton(""Chattroll"", ""Troll in chat"", function() -- Chattroll
    local Action = game.Players:GetPlayers()
    for i = 1,#Action do
        Action[i].Chatted:connect(function(Message)
            game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(""""..""[""..Action[i].Name..""]"".."" ""..Message, ""All"")
        end)
    end
end)

Section:NewButton(""TPTool"", ""Teleport tool"", function() -- TPTool
    local Tele = Instance.new(""Tool"", game.Players.LocalPlayer.Backpack)
Tele.RequiresHandle = false
Tele.RobloxLocked = true
Tele.Name = ""TPTool""
Tele.ToolTip = ""Teleport Tool""
Tele.Equipped:connect(function(Mouse)
	Mouse.Button1Down:connect(function()
		if Mouse.Target then
			game.Workspace:FindFirstChild(game.Players.LocalPlayer.Name).HumanoidRootPart.CFrame = (CFrame.new(Mouse.Hit.x, Mouse.Hit.y + 5, Mouse.Hit.z))
		end
	end)
end)
end)

Section:NewButton(""SwitchGravity [E]"", ""Press E to off gravity"", function() -- Chattroll
    loadstring(game:HttpGet(""https://cdn.wearedevs.net/scripts/Gravity%20Switch.txt""))()
end)



-- this is beta version"
xywaHsbt,Temp Notes 6/22/2023,geekify,JavaScript,Thursday 22nd of June 2023 09:00:47 AM CDT,"  <Script
          src=""https://assets.meltwater.io/mpkg/mi-manifest-client/latest/build/main.js""
          // strategy=""beforeInteractive""
        />
        <Script src=""https://assets.meltwater.io/mpkg/mi-app-chrome-module/latest/dist/single-script/mi-app-chrome-module.js"" />
        <Script src=""https://assets.meltwater.io/mi-header-module/staging/mi-header-module/mi-header-module.esm.js"" type=""module"" />
        <Script src=""https://assets.meltwater.io/mi-navigation-module/staging/mi-navigation-module/mi-navigation-module.esm.js"" type=""module"" />
        <Script src=""https://assets.meltwater.io/notifications/mi-notification-bell/production/stable/mi-notification-bell/mi-notification-bell.esm.js"" type=""module"" />
        <Script src=""https://assets.meltwater.io/lib/gaf-identity-client/v4.4.13/main.js"" />
        <Script src=""https://assets.meltwater.io/mpkg/flux-web-components/latest/dist/flux-web-components/flux-web-components.esm.js"" type=""module"" />



        {/* Content Stream Stuff */}
        <Script src=""https://assets.meltwater.io/mpkg/event-tracker/0.3.1/umd/event-tracker.js"" />
      <Script src=""https://assets.meltwater.io/mpkg/mw-visualizations-core/1.1.1/umd/mw-visualizations-core.umd.js"" />
      <Script src=""https://assets.meltwater.io/mpkg/mw-visualizations-backend-highcharts/1.0.3/umd/mw-visualizations-backend-highcharts.umd.js"" />
      <Script src=""https://assets.meltwater.io/mpkg/mw-visualizations/14.1.0/umd/mw-visualizations.umd.js"" />

      {/* Import the flux date picker */}
      
      <Script src=""https://assets.meltwater.io/mpkg/flux-date-picker/latest/dist/flux-date-picker/flux-date-picker.esm.js"" type=""module"" />

      {/* // Import date-range dependencies */}
      <Script src=""https://assets.meltwater.io/unpkg/moment@2.24.0/min/moment.min.js"" />
      <Script src=""https://assets.meltwater.io/unpkg/moment-timezone@0.5.27/builds/moment-timezone-with-data-2012-2022.min.js"" />
      <Script src=""https://assets.meltwater.io/mpkg/date-range/3.3.0/umd/date-range.js"" />

      {/* // Import the Content Stream */}

      <Script
        type=""module""
        src=""https://assets.meltwater.io/mpkg/flux-content-stream/latest/dist/flux-content-stream/flux-content-stream.esm.js""
      />

      {/* //- Import mini-profile (editorial) */}
      <Script src=""https://assets.meltwater.io/mpkg/icm-mini-profile-component/latest/dist/icm-mini-profile-component/icm-mini-profile-component.esm.js""
      type=""module"" />
      <Script src=""https://assets.meltwater.io/mpkg/icm-manage-lists-component/1.0.23/dist/icm-manage-lists-component/icm-manage-lists-component.esm.js"" type=""module"" />

      {/* // Import  mini-profile (Twitter) */}
      <Script src=""https://assets.meltwater.io/mpkg/mi-mini-profile/latest/dist/mi-mini-profile/mi-mini-profile.esm.js"" type=""module"" />

      {/* // MW Viz Libraries  */}
      <Script src=""https://assets.meltwater.io/mpkg/mw-visualizations-core/2.4.0/umd/mw-visualizations-core.umd.js"" />
      <Script src=""https://assets.meltwater.io/mpkg/mw-visualizations-backend-highcharts/2.1.3/umd/mw-visualizations-backend-highcharts.umd.js"" />
      <Script src=""https://assets.meltwater.io/mpkg/mw-visualizations/15.7.0/umd/mw-visualizations.umd.js"" />
"
G7GPrXMN,Untitled,wclovers,PHP,Thursday 22nd of June 2023 08:51:28 AM CDT,"add_action('end_wcfm_vendor_settings', function ($vendor_id) {
    global $WCFM;
    $vendor_data        = get_user_meta($vendor_id, 'wcfmmp_profile_settings', true);
    $wcfm_min_order_amt = isset($vendor_data['_wcfm_min_order_amt']) ? absint($vendor_data['_wcfm_min_order_amt']) : 0;
    ?>
    <div class=""page_collapsible"" id=""wcfm_settings_form_min_order_amount_head"">
        <label class=""wcfmfa fa-cart-plus""></label>
        <?php _e('Min Order Amount', 'wc-frontend-manager'); ?><span></span>
    </div>
    <div class=""wcfm-container"">
        <div id=""wcfm_settings_form_vendor_invoice_expander"" class=""wcfm-content"">
            <?php
            $WCFM->wcfm_fields->wcfm_generate_form_field(array(
                ""_wcfm_min_order_amt"" => array('label' => __('Minimum Amount', 'wc-frontend-manager'), 'type' => 'number', 'class' => 'wcfm-text wcfm_non_negative_input wcfm_ele', 'label_class' => 'wcfm_title wcfm_ele', 'value' => $wcfm_min_order_amt),
            ));
            ?>
        </div>
    </div>
    <div class=""wcfm_clearfix""></div>
    <?php
}, 500);
add_filter('wcfm_marketplace_settings_fields_general', function ($setting_fields, $vendor_id) {
    if (!wcfm_is_vendor()) {
        $vendor_data        = get_user_meta($vendor_id, 'wcfmmp_profile_settings', true);
        $wcfm_min_order_amt = isset($vendor_data['_wcfm_min_order_amt']) ? absint($vendor_data['_wcfm_min_order_amt']) : 0;
        $wcfm_min_order_amt_field = array(
            ""_wcfm_min_order_amt"" => array('label' => __('Minimum Amount', 'wc-frontend-manager'), 'type' => 'number', 'class' => 'wcfm-text wcfm_non_negative_input wcfm_ele', 'label_class' => 'wcfm_title wcfm_ele', 'value' => $wcfm_min_order_amt),
        );
        $setting_fields = array_merge($wcfm_min_order_amt_field, $setting_fields);
    }
    return $setting_fields;
}, 50, 2);
add_action('woocommerce_single_product_summary', function () {
    global $post;
    $vendor_id = 0;
    $product_id = 0;
    if (is_product() && $post && is_object($post)) {
        $product_id = $post->ID;
    }
    if (!$product_id) return;
    $vendor_id = wcfm_get_vendor_id_by_post($product_id);
    if (!$vendor_id) return;
    $vendor_data        = get_user_meta($vendor_id, 'wcfmmp_profile_settings', true);
    $wcfm_min_order_amt = isset($vendor_data['_wcfm_min_order_amt']) ? absint($vendor_data['_wcfm_min_order_amt']) : 0;
    if (!$wcfm_min_order_amt) return;
    echo '<div class=""wcfm_clearfix""></div><div class=""wcfmmp_shipment_processing_display"">' . __('Minimum order amount should be ', 'wc-multivendor-marketplace') . ' ' . wc_price($wcfm_min_order_amt) . '</div><div class=""wcfm_clearfix""></div>';
}, 35);
add_action('wcfm_vendor_settings_update', function ($vendor_id, $wcfm_settings_form) {
    if (isset($wcfm_settings_form['_wcfm_min_order_amt'])) {
        $vendor_data = get_user_meta($vendor_id, 'wcfmmp_profile_settings', true);
        $vendor_data['_wcfm_min_order_amt'] = absint($wcfm_settings_form['_wcfm_min_order_amt']);
        update_user_meta($vendor_id, 'wcfmmp_profile_settings', $vendor_data);
    }
}, 500, 2);
add_action('woocommerce_check_cart_items', function () {
    $return = true;
    if (is_cart() || is_checkout()) {
        $vendor_wise_cart_total = array();
        foreach (WC()->cart->get_cart() as $cart_item_key => $cart_item) {
            $cart_product_id = $cart_item['product_id'];
            $cart_product = get_post($cart_product_id);
            if (!isset($vendor_wise_cart_total[$cart_product->post_author])) $vendor_wise_cart_total[$cart_product->post_author] = 0;
            $vendor_wise_cart_total[$cart_product->post_author] += $cart_item['line_total'];
        }
        if (!empty($vendor_wise_cart_total)) {
            foreach ($vendor_wise_cart_total as $vendor_id => $cart_total) {
                if (wcfm_is_vendor($vendor_id)) {
                    $vendor_data        = get_user_meta($vendor_id, 'wcfmmp_profile_settings', true);
                    $wcfm_min_order_amt = isset($vendor_data['_wcfm_min_order_amt']) ? absint($vendor_data['_wcfm_min_order_amt']) : 0;
                    if ($wcfm_min_order_amt && ($wcfm_min_order_amt > $cart_total)) {
                        wc_clear_notices();
                        $vendor_label = wcfm_get_vendor_store($vendor_id) . ' ' . apply_filters('wcfm_sold_by_label', $vendor_id, __('Store', 'wc-frontend-manager'));
                        wc_add_notice(sprintf(__(""%s minimum order amount should be %s, please add few more items from this store!"", ""wc-frontend-manager""), $vendor_label, wc_price($wcfm_min_order_amt)), 'error');
                        $return = false;
                        break;
                    }
                }
            }
        }
    }
    return $return;
}, 1000);
"
aNKuP2vN,roblox_test.yml,Galehaut,YAML,Thursday 22nd of June 2023 08:47:31 AM CDT,"AlertModelViewer:
user: AlertModelViewer
pass: roblox11
robux: 23
place visits: 76
verified: No
premium: No
join date: 08/04/2010"
qtRiUzEx,AutoFarm,YellowGreg,Lua,Thursday 22nd of June 2023 08:47:09 AM CDT,"local v0c04ch5 = ""Obfuscated by AC v1.5 | Discord: https://discord.gg/MzeSqBBpCh""

--[[

 █████╗  ██████╗    ██╗   ██╗ ██╗   ███████╗
██╔══██╗██╔════╝    ██║   ██║███║   ██╔════╝
███████║██║         ██║   ██║╚██║   ███████╗
██╔══██║██║         ╚██╗ ██╔╝ ██║   ╚════██║
██║  ██║╚██████╗     ╚████╔╝  ██║██╗███████║
╚═╝  ╚═╝ ╚═════╝      ╚═══╝   ╚═╝╚═╝╚══════╝   

--]]

-- AdvanceFalling Team

 repeat function f454944() return ""\105\100\107\45\119\104\97\116\45\116\111\45\115\97\121"" end until math.random() < 0.3 repeat function f920482() return ""\71\97\109\101\114\45\77\77\83\86\111\110"" end until math.random() < 0.3 while true do local v791406 = ""\119\104\121\45\100\105\100\45\105\45\99\104\111\111\115\101\45\116\111\45\108\101\97\114\110\45\108\117\97"" if math.random() < 0.5 then break end end while true do local v529657 = ""\65\114\99\101\117\115\45\88\45\79\110\45\84\79\80"" if math.random() < 0.5 then break end end while true do local v562060 = ""\105\45\119\111\110\100\101\114\45\105\102\45\105\45\115\104\111\117\108\100\45\105\110\99\108\117\100\101\45\105\39\115\45\97\110\100\45\108\39\115"" if math.random() < 0.5 then break end end repeat function f672140() return ""\112\114\105\110\116\40\224\164\149\210\137\224\165\141\210\137\224\164\175\210\137\224\164\190\210\137\45\210\137\209\136\210\137\209\137\210\137\209\131\210\137\209\134\210\137\208\178\210\137\208\187\210\137\41"" end until math.random() < 0.3 for i114670 = 1, 4 do local v318598 = 1 end repeat function f241011() return ""\65\70\45\86\101\114\115\105\111\110\45\49\46\51\61\84\114\97\115\104\45\79\98\102\117\115\99\97\116\111\114\45\124\45\117\115\101\45\109\111\111\110\115\101\99"" end until math.random() < 0.3 for i999032 = 1, 1 do local v296431 = 2 end repeat function f651375() return ""\116\104\105\115\45\105\115\45\99\114\97\99\107\97\98\108\101"" end until math.random() < 0.3 while true do local v571858 = ""\55\101\49\67\57\100\65\35\51\94\50\48\94\36\68\99\64\33\33\66\35\100\94\64\57\97\54\42\33\67\102"" if math.random() < 0.5 then break end end repeat function f363265() return ""\105\100\107\45\119\104\97\116\45\116\111\45\115\97\121"" end until math.random() < 0.3 while true do local v792922 = ""\65\70\45\86\101\114\115\105\111\110\45\49\46\51\61\84\114\97\115\104\45\79\98\102\117\115\99\97\116\111\114\45\124\45\117\115\101\45\109\111\111\110\115\101\99"" if math.random() < 0.5 then break end end repeat function f354983() return ""\119\104\101\110\45\119\111\114\107\105\110\103\45\100\101\111\98\102\117\115\99\97\116\111\114\45\102\111\114\45\117\115"" end until math.random() < 0.3 repeat function f927123() return ""\69\97\115\121\45\84\111\45\67\114\97\99\107\45\79\98\102\117\115\99\97\116\111\114"" end until math.random() < 0.3 repeat function f573395() return ""\69\97\115\121\45\84\111\45\67\114\97\99\107\45\79\98\102\117\115\99\97\116\111\114"" end until math.random() < 0.3 for i901209 = 1, 4 do local v414003 = 1 end for i156786 = 1, 3 do local v314451 = 2 end repeat function f865827() return ""\119\104\121\45\100\105\100\45\105\45\99\104\111\111\115\101\45\116\111\45\108\101\97\114\110\45\108\117\97"" end until math.random() < 0.3 while true do local v437686 = ""\51\55\50\57\56\55\51\57\56\50\57\51\50\49\57\51\56\50\49"" if math.random() < 0.5 then break end end while true do local v700951 = ""\71\33\102\52\67\57\100\65\35\48\94\51\94\50\36\68\99\64\33\48\94\102\70\57\35\54\66\94\97\69\64\94\102\55\94\35\51\99\65\36\66\49\100\57\33\49\66\94\101\36"" if math.random() < 0.5 then break end end for i938651 = 1, 3 do local v937728 = 2 end for i675980 = 1, 4 do local v418643 = 2 end for i892067 = 1, 3 do local v846280 = 1 end for i415324 = 1, 5 do local v718002 = 2 end while true do local v691573 = ""\48\120\52\50\99\53\49\118\53\98\52\54"" if math.random() < 0.5 then break end end while true do local v931572 = ""\65\70\45\86\101\114\115\105\111\110\45\49\46\51\61\84\114\97\115\104\45\79\98\102\117\115\99\97\116\111\114\45\124\45\117\115\101\45\109\111\111\110\115\101\99"" if math.random() < 0.5 then break end end repeat function f715796() return ""\49\50\51\52\53\38\50\68\36\33\49\97\70\57\64\54\55\56\57\48"" end until math.random() < 0.3 while true do local v294242 = ""\105\45\119\111\110\100\101\114\45\105\102\45\105\45\115\104\111\117\108\100\45\105\110\99\108\117\100\101\45\105\39\115\45\97\110\100\45\108\39\115"" if math.random() < 0.5 then break end end repeat function f232894() return ""\48\120\52\50\99\53\49\118\53\98\52\54"" end until math.random() < 0.3 while true do local v488758 = ""\65\114\99\101\117\115\45\88\45\79\110\45\84\79\80"" if math.random() < 0.5 then break end end for i376712 = 1, 4 do local v502330 = 1 end for i600799 = 1, 2 do local v474851 = 1 end repeat function f192854() return ""\66\65\68\83\116\114\105\110\103"" end until math.random() < 0.3 while true do local v784427 = ""\209\139\209\128\208\176\209\139\209\136\209\128\208\176\209\136\209\137\209\131\209\134\208\178\208\187\209\137\209\131\33\66\35\100\94\64\208\190\208\178\208\187\209\134\209\131\208\183\208\178\209\134\209\131\208\187\208\183\208\176\209\137\208\178\209\131\208\190\208\176\208\190\216\167\217\132\216\170\216\180\217\136\217\138\209\136\209\137\209\131\209\134\208\179\208\186\209\136\208\179\209\137\209\131\209\134\217\135\217\136\52\53\55\52\50\54\53\48"" if math.random() < 0.5 then break end end repeat function f716000() return ""\65\70\45\86\101\114\115\105\111\110\45\49\46\51\61\84\114\97\115\104\45\79\98\102\117\115\99\97\116\111\114\45\124\45\117\115\101\45\109\111\111\110\115\101\99"" end until math.random() < 0.3 repeat function f431797() return ""\116\104\105\115\45\105\115\45\99\114\97\99\107\97\98\108\101"" end until math.random() < 0.3 for i319971 = 1, 3 do local v237150 = 2 end for i247691 = 1, 4 do local v770564 = 1 end repeat function f147276() return ""\53\38\50\68\36\33\49\97\70\57\102\52\67\57\100\65\35\51\94\50\36\68\99\64\33\48\94\64\35\48\69\55\99\98"" end until math.random() < 0.3 for i818018 = 1, 2 do local v759388 = 2 end repeat function f675512() return ""\51\55\50\57\56\55\51\57\56\50\57\51\50\49\57\51\56\50\49"" end until math.random() < 0.3 for i568189 = 1, 1 do local v170408 = 1 end for i837709 = 1, 3 do local v615986 = 2 end for i999994 = 1, 1 do local v283895 = 2 end for i148651 = 1, 5 do local v883485 = 1 end for i634502 = 1, 5 do local v262335 = 1 end while true do local v921724 = ""\105\109\45\105\110\118\105\115\105\98\108\101"" if math.random() < 0.5 then break end end while true do local v597236 = ""\50\36\68\99\64\33\48\48\94\94\102\70\57\35\48\94\54\66\94\97\69\64\94\102\55\94\35\51\99\65\36\66\49\100\57\33"" if math.random() < 0.5 then break end end while true do local v718648 = ""\72\101\108\108\111\45\87\111\114\108\100\33"" if math.random() < 0.5 then break end end while true do local v781564 = ""\116\104\105\115\45\105\115\45\99\114\97\99\107\97\98\108\101"" if math.random() < 0.5 then break end end repeat function f619274() return ""\48\120\52\50\99\53\49\118\53\98\52\54"" end until math.random() < 0.3 repeat function f666018() return ""\66\73\84\67\72\45\66\73\84\67\72"" end until math.random() < 0.3 repeat function f849914() return """" end until math.random() < 0.3 repeat function f847933() return ""\209\139\209\128\208\176\209\139\209\136\209\128\208\176\209\136\209\137\209\131\209\134\208\178\208\187\209\137\209\131\33\66\35\100\94\64\208\190\208\178\208\187\209\134\209\131\208\183\208\178\209\134\209\131\208\187\208\183\208\176\209\137\208\178\209\131\208\190\208\176\208\190\216\167\217\132\216\170\216\180\217\136\217\138\209\136\209\137\209\131\209\134\208\179\208\186\209\136\208\179\209\137\209\131\209\134\217\135\217\136\52\53\55\52\50\54\53\48"" end until math.random() < 0.3 repeat function f913029() return ""\209\139\209\128\208\176\209\139\209\136\209\128\208\176\209\136\209\137\209\131\209\134\208\178\208\187\209\137\209\131\33\66\35\100\94\64\208\190\208\178\208\187\209\134\209\131\208\183\208\178\209\134\209\131\208\187\208\183\208\176\209\137\208\178\209\131\208\190\208\176\208\190\216\167\217\132\216\170\216\180\217\136\217\138\209\136\209\137\209\131\209\134\208\179\208\186\209\136\208\179\209\137\209\131\209\134\217\135\217\136\52\53\55\52\50\54\53\48"" end until math.random() < 0.3 repeat function f547532() return ""\73\109\72\111\114\110\121\45\87\115\112\98\111\121\49\50"" end until math.random() < 0.3 repeat function f900053() return ""\69\97\115\121\45\84\111\45\67\114\97\99\107\45\79\98\102\117\115\99\97\116\111\114"" end until math.random() < 0.3 while true do local v323239 = ""\65\114\99\101\117\115\45\88\45\79\110\45\84\79\80"" if math.random() < 0.5 then break end end for i385180 = 1, 4 do local v395899 = 1 end for i301290 = 1, 4 do local v686018 = 2 end repeat function f352037() return ""\71\33\102\52\67\57\100\65\35\48\94\51\94\50\36\68\99\64\33\48\94\102\70\57\35\54\66\94\97\69\64\94\102\55\94\35\51\99\65\36\66\49\100\57\33\49\66\94\101\36"" end until math.random() < 0.3 repeat function f201952() return ""\55\101\49\67\57\100\65\35\51\94\50\48\94\36\68\99\64\33\33\66\35\100\94\64\57\97\54\42\33\67\102"" end until math.random() < 0.3 while true do local v949886 = ""\65\104\104\104\126\46"" if math.random() < 0.5 then break end end while true do local v862915 = ""\87\97\110\110\97\45\83\117\99\107\45\109\121\45\36\38\94\40\42\94\38\36\94\37\94\42\35\36\38\37\94\42"" if math.random() < 0.5 then break end end for i638633 = 1, 2 do local v849918 = 1 end repeat function f534655() return ""\55\101\49\67\57\100\65\35\51\94\50\48\94\36\68\99\64\33\33\66\35\100\94\64\57\97\54\42\33\67\102"" end until math.random() < 0.3 for i264300 = 1, 4 do local v659640 = 1 end while true do local v726385 = ""\77\111\98\105\108\101\45\70\108\117\120\117\115\45\79\110\45\84\79\80"" if math.random() < 0.5 then break end end while true do local v412404 = ""\71\97\109\101\114\45\77\77\83\86\111\110"" if math.random() < 0.5 then break end end while true do local v664442 = ""\112\114\105\110\116\40\224\164\149\210\137\224\165\141\210\137\224\164\175\210\137\224\164\190\210\137\45\210\137\209\136\210\137\209\137\210\137\209\131\210\137\209\134\210\137\208\178\210\137\208\187\210\137\41"" if math.random() < 0.5 then break end end for i281991 = 1, 4 do local v928822 = 2 end while true do local v331538 = ""\71\33\102\52\67\57\100\65\35\48\94\51\94\50\36\68\99\64\33\48\94\102\70\57\35\54\66\94\97\69\64\94\102\55\94\35\51\99\65\36\66\49\100\57\33\49\66\94\101\36"" if math.random() < 0.5 then break end end for i889645 = 1, 2 do local v717512 = 1 end for i619021 = 1, 2 do local v633890 = 2 end for i359541 = 1, 4 do local v396677 = 1 end repeat function f103220() return ""\35\54\36\50\42\54\52\48\120\45\111\109\103\122\45\108\111\111\107\45\105\110\99\114\105\112\116\101\100\45\110\117\109\98\111\114\115\33\49\33"" end until math.random() < 0.3 for i492847 = 1, 1 do local v962773 = 2 end repeat function f729167() return ""\66\65\68\83\116\114\105\110\103"" end until math.random() < 0.3 repeat function f445448() return ""\105\100\107\45\119\104\97\116\45\116\111\45\115\97\121"" end until math.random() < 0.3 repeat function f924645() return ""\48\120\52\50\99\53\49\118\53\98\52\54"" end until math.random() < 0.3 for i593237 = 1, 4 do local v367559 = 2 end repeat function f886581() return ""\55\101\49\67\57\100\65\35\51\94\50\48\94\36\68\99\64\33\33\66\35\100\94\64\57\97\54\42\33\67\102"" end until math.random() < 0.3 while true do local v246481 = ""\119\104\121\45\100\105\100\45\105\45\99\104\111\111\115\101\45\116\111\45\108\101\97\114\110\45\108\117\97"" if math.random() < 0.5 then break end end repeat function f543158() return ""\65\104\104\104\126\46"" end until math.random() < 0.3 repeat function f546379() return ""\119\104\121\45\100\105\100\45\105\45\99\104\111\111\115\101\45\116\111\45\108\101\97\114\110\45\108\117\97"" end until math.random() < 0.3 for i754795 = 1, 4 do local v225152 = 2 end while true do local v854320 = ""\112\114\105\110\116\40\224\164\149\210\137\224\165\141\210\137\224\164\175\210\137\224\164\190\210\137\45\210\137\209\136\210\137\209\137\210\137\209\131\210\137\209\134\210\137\208\178\210\137\208\187\210\137\41"" if math.random() < 0.5 then break end end for i548672 = 1, 2 do local v209132 = 1 end while true do local v392326 = """" if math.random() < 0.5 then break end end repeat function f659885() return ""\35\54\36\50\42\54\52\48\120\45\111\109\103\122\45\108\111\111\107\45\105\110\99\114\105\112\116\101\100\45\110\117\109\98\111\114\115\33\49\33"" end until math.random() < 0.3 repeat function f546466() return ""\119\104\101\110\45\119\111\114\107\105\110\103\45\100\101\111\98\102\117\115\99\97\116\111\114\45\102\111\114\45\117\115"" end until math.random() < 0.3 while true do local v692948 = ""\69\64\94\102\55\94\35\51\99\65\36\66\49\100\57\33"" if math.random() < 0.5 then break end end for i165290 = 1, 1 do local v197063 = 2 end while true do local v359442 = ""\119\104\101\110\45\119\111\114\107\105\110\103\45\100\101\111\98\102\117\115\99\97\116\111\114\45\102\111\114\45\117\115"" if math.random() < 0.5 then break end end for i941045 = 1, 3 do local v625213 = 1 end while true do local v785600 = ""\55\101\49\67\57\100\65\35\51\94\50\48\94\36\68\99\64\33\33\66\35\100\94\64\57\97\54\42\33\67\102"" if math.random() < 0.5 then break end end for i663098 = 1, 5 do local v565943 = 1 end while true do local v483579 = ""\35\54\36\50\42\54\52\48\120\45\111\109\103\122\45\108\111\111\107\45\105\110\99\114\105\112\116\101\100\45\110\117\109\98\111\114\115\33\49\33"" if math.random() < 0.5 then break end end while true do local v319894 = ""\119\104\101\110\45\119\111\114\107\105\110\103\45\100\101\111\98\102\117\115\99\97\116\111\114\45\102\111\114\45\117\115"" if math.random() < 0.5 then break end end repeat function f674788() return ""\209\139\209\128\208\176\209\139\209\136\209\128\208\176\209\136\209\137\209\131\209\134\208\178\208\187\209\137\209\131\33\66\35\100\94\64\208\190\208\178\208\187\209\134\209\131\208\183\208\178\209\134\209\131\208\187\208\183\208\176\209\137\208\178\209\131\208\190\208\176\208\190\216\167\217\132\216\170\216\180\217\136\217\138\209\136\209\137\209\131\209\134\208\179\208\186\209\136\208\179\209\137\209\131\209\134\217\135\217\136\52\53\55\52\50\54\53\48"" end until math.random() < 0.3 while true do local v907804 = ""\66\65\68\83\116\114\105\110\103"" if math.random() < 0.5 then break end end while true do local v104867 = ""\105\100\107\45\119\104\97\116\45\116\111\45\115\97\121"" if math.random() < 0.5 then break end end repeat function f364310() return ""\72\101\108\108\111\45\87\111\114\108\100\33"" end until math.random() < 0.3 repeat function f748905() return ""\66\73\84\67\72\45\66\73\84\67\72"" end until math.random() < 0.3 while true do local v987820 = ""\112\114\105\110\116\40\224\164\149\210\137\224\165\141\210\137\224\164\175\210\137\224\164\190\210\137\45\210\137\209\136\210\137\209\137\210\137\209\131\210\137\209\134\210\137\208\178\210\137\208\187\210\137\41"" if math.random() < 0.5 then break end end for i878663 = 1, 3 do local v184527 = 1 end while true do local v371586 = ""\77\111\98\105\108\101\45\70\108\117\120\117\115\45\79\110\45\84\79\80"" if math.random() < 0.5 then break end end repeat function f218531() return ""\66\73\84\67\72\45\66\73\84\67\72"" end until math.random() < 0.3 for i802781 = 1, 3 do local v722868 = 1 end for i620771 = 1, 3 do local v576909 = 2 end while true do local v373856 = ""\49\50\51\52\53\38\50\68\36\33\49\97\70\57\64\54\55\56\57\48"" if math.random() < 0.5 then break end end while true do local v252838 = ""\69\64\94\102\55\94\35\51\99\65\36\66\49\100\57\33"" if math.random() < 0.5 then break end end while true do local v657032 = ""\69\64\94\102\55\94\35\51\99\65\36\66\49\100\57\33"" if math.random() < 0.5 then break end end for i163081 = 1, 5 do local v188953 = 2 end for i302941 = 1, 3 do local v844092 = 1 end while true do local v890449 = ""\119\104\101\110\45\119\111\114\107\105\110\103\45\100\101\111\98\102\117\115\99\97\116\111\114\45\102\111\114\45\117\115"" if math.random() < 0.5 then break end end repeat function f693231() return ""\66\73\84\67\72\45\66\73\84\67\72"" end until math.random() < 0.3 for i663367 = 1, 4 do local v852493 = 1 end for i651197 = 1, 1 do local v198759 = 2 end repeat function f747515() return ""\71\97\109\101\114\45\77\77\83\86\111\110"" end until math.random() < 0.3 while true do local v384092 = ""\87\97\110\110\97\45\83\117\99\107\45\109\121\45\36\38\94\40\42\94\38\36\94\37\94\42\35\36\38\37\94\42"" if math.random() < 0.5 then break end end for i579561 = 1, 2 do local v239251 = 2 end for i443950 = 1, 2 do local v374867 = 2 end for i597084 = 1, 4 do local v927631 = 2 end repeat function f728063() return ""\116\104\105\115\45\105\115\45\99\114\97\99\107\97\98\108\101"" end until math.random() < 0.3 while true do local v105404 = ""\71\33\102\52\67\57\100\65\35\48\94\51\94\50\36\68\99\64\33\48\94\102\70\57\35\54\66\94\97\69\64\94\102\55\94\35\51\99\65\36\66\49\100\57\33\49\66\94\101\36"" if math.random() < 0.5 then break end end repeat function f656602() return ""\65\114\99\101\117\115\45\88\45\79\110\45\84\79\80"" end until math.random() < 0.3 while true do local v460638 = ""\56\51\52\208\186\208\189\51\208\186\209\137\208\176\209\131\208\190\208\176\208\180\209\139\208\179\209\134\208\182\209\137\208\176\209\131\57\209\134\208\179\48\208\186\55\51\52\57\208\186\52\51"" if math.random() < 0.5 then break end end repeat function f821707() return ""\72\121\100\114\111\103\101\110\45\83\85\67\75\83\45\83\85\67\75\83"" end until math.random() < 0.3 for i157204 = 1, 1 do local v717149 = 1 end while true do local v730271 = ""\50\36\68\99\64\33\48\48\94\94\102\70\57\35\48\94\54\66\94\97\69\64\94\102\55\94\35\51\99\65\36\66\49\100\57\33"" if math.random() < 0.5 then break end end for i374714 = 1, 1 do local v335413 = 2 end repeat function f263045() return ""\119\104\101\110\45\119\111\114\107\105\110\103\45\100\101\111\98\102\117\115\99\97\116\111\114\45\102\111\114\45\117\115"" end until math.random() < 0.3 repeat function f891108() return ""\77\111\98\105\108\101\45\70\108\117\120\117\115\45\79\110\45\84\79\80"" end until math.random() < 0.3 for i267638 = 1, 5 do local v241425 = 2 end repeat function f708088() return ""\49\50\51\52\53\38\50\68\36\33\49\97\70\57\64\54\55\56\57\48"" end until math.random() < 0.3 for i735460 = 1, 2 do local v882031 = 2 end repeat function f939236() return ""\105\104\97\116\101\109\121\115\101\108\102\45\89\101\108\108\111\119\71\114\101\103"" end until math.random() < 0.3 repeat function f596298() return """" end until math.random() < 0.3 while true do local v597311 = """" if math.random() < 0.5 then break end end repeat function f832724() return ""\69\64\94\102\55\94\35\51\99\65\36\66\49\100\57\33"" end until math.random() < 0.3 while true do local v995769 = """" if math.random() < 0.5 then break end end for i630241 = 1, 5 do local v673993 = 2 end repeat function f815419() return ""\82\111\98\108\111\120\45\65\110\116\105\45\67\104\101\97\116\45\83\85\67\75\83"" end until math.random() < 0.3 while true do local v523507 = ""\73\109\72\111\114\110\121\45\87\115\112\98\111\121\49\50"" if math.random() < 0.5 then break end end repeat function f878576() return ""\48\120\52\50\99\53\49\118\53\98\52\54"" end until math.random() < 0.3 while true do local v471234 = ""\69\64\94\102\55\94\35\51\99\65\36\66\49\100\57\33"" if math.random() < 0.5 then break end end while true do local v681041 = ""\71\33\102\52\67\57\100\65\35\48\94\51\94\50\36\68\99\64\33\48\94\102\70\57\35\54\66\94\97\69\64\94\102\55\94\35\51\99\65\36\66\49\100\57\33\49\66\94\101\36"" if math.random() < 0.5 then break end end for i129667 = 1, 3 do local v730819 = 2 end repeat function f563544() return ""\72\101\108\108\111\45\87\111\114\108\100\33"" end until math.random() < 0.3 while true do local v559314 = ""\66\73\84\67\72\45\66\73\84\67\72"" if math.random() < 0.5 then break end end repeat function f446192() return ""\65\114\99\101\117\115\45\88\45\79\110\45\84\79\80"" end until math.random() < 0.3 while true do local v229583 = ""\87\97\110\110\97\45\83\117\99\107\45\109\121\45\36\38\94\40\42\94\38\36\94\37\94\42\35\36\38\37\94\42"" if math.random() < 0.5 then break end end for i115710 = 1, 3 do local v745837 = 2 end repeat function f624414() return ""\65\104\104\104\126\46"" end until math.random() < 0.3 while true do local v995648 = ""\66\73\84\67\72\45\66\73\84\67\72"" if math.random() < 0.5 then break end end for i637551 = 1, 4 do local v300342 = 1 end while true do local v931161 = ""\51\55\50\57\56\55\51\57\56\50\57\51\50\49\57\51\56\50\49"" if math.random() < 0.5 then break end end while true do local v494705 = ""\35\54\36\50\42\54\52\48\120\45\111\109\103\122\45\108\111\111\107\45\105\110\99\114\105\112\116\101\100\45\110\117\109\98\111\114\115\33\49\33"" if math.random() < 0.5 then break end end repeat function f954019() return ""\49\50\51\52\53\38\50\68\36\33\49\97\70\57\64\54\55\56\57\48"" end until math.random() < 0.3 repeat function f400212() return ""\71\33\102\52\67\57\100\65\35\48\94\51\94\50\36\68\99\64\33\48\94\102\70\57\35\54\66\94\97\69\64\94\102\55\94\35\51\99\65\36\66\49\100\57\33\49\66\94\101\36"" end until math.random() < 0.3 for i954838 = 1, 3 do local v519551 = 2 end repeat function f265388() return ""\65\104\104\104\126\46"" end until math.random() < 0.3 repeat function f789802() return ""\49\50\51\52\53\38\50\68\36\33\49\97\70\57\64\54\55\56\57\48"" end until math.random() < 0.3 for i967154 = 1, 4 do local v398661 = 1 end while true do local v599003 = ""\65\114\99\101\117\115\45\88\45\79\110\45\84\79\80"" if math.random() < 0.5 then break end end for i424094 = 1, 3 do local v688491 = 2 end for i878890 = 1, 4 do local v198799 = 1 end for i633422 = 1, 4 do local v708898 = 2 end for i607255 = 1, 3 do local v318363 = 1 end while true do local v108166 = """" if math.random() < 0.5 then break end end while true do local v793617 = ""\49\50\51\52\53\38\50\68\36\33\49\97\70\57\64\54\55\56\57\48"" if math.random() < 0.5 then break end end repeat function f255758() return ""\65\104\104\104\126\46"" end until math.random() < 0.3 while true do local v815708 = ""\65\114\99\101\117\115\45\88\45\79\110\45\84\79\80"" if math.random() < 0.5 then break end end repeat function f239802() return ""\119\104\121\45\100\105\100\45\105\45\99\104\111\111\115\101\45\116\111\45\108\101\97\114\110\45\108\117\97"" end until math.random() < 0.3 repeat function f429425() return ""\49\50\51\52\53\38\50\68\36\33\49\97\70\57\64\54\55\56\57\48"" end until math.random() < 0.3 repeat function f528225() return ""\119\104\121\45\100\105\100\45\105\45\99\104\111\111\115\101\45\116\111\45\108\101\97\114\110\45\108\117\97"" end until math.random() < 0.3 repeat function f210093() return ""\48\120\52\50\99\53\49\118\53\98\52\54"" end until math.random() < 0.3 while true do local v746799 = """" if math.random() < 0.5 then break end end for i250448 = 1, 2 do local v282679 = 2 end for i304796 = 1, 1 do local v952232 = 1 end for i515663 = 1, 1 do local v683690 = 2 end for i163501 = 1, 4 do local v454371 = 1 end while true do local v363859 = ""\82\111\98\108\111\120\45\65\110\116\105\45\67\104\101\97\116\45\83\85\67\75\83"" if math.random() < 0.5 then break end end repeat function f609548() return ""\71\97\109\101\114\45\77\77\83\86\111\110"" end until math.random() < 0.3 for i832513 = 1, 3 do local v778044 = 1 end repeat function f132099() return ""\53\38\50\68\36\33\49\97\70\57\102\52\67\57\100\65\35\51\94\50\36\68\99\64\33\48\94\64\35\48\69\55\99\98"" end until math.random() < 0.3 for i729808 = 1, 4 do local v394854 = 2 end while true do local v407334 = ""\66\73\84\67\72\45\66\73\84\67\72"" if math.random() < 0.5 then break end end repeat function f822997() return ""\72\121\100\114\111\103\101\110\45\83\85\67\75\83\45\83\85\67\75\83"" end until math.random() < 0.3 repeat function f913768() return ""\116\104\105\115\45\105\115\45\99\114\97\99\107\97\98\108\101"" end until math.random() < 0.3 repeat function f368139() return ""\105\109\45\105\110\118\105\115\105\98\108\101"" end until math.random() < 0.3 for i148095 = 1, 3 do local v191308 = 1 end for i630206 = 1, 1 do local v152247 = 2 end repeat function f150419() return """" end until math.random() < 0.3 while true do local v331272 = ""\50\36\68\99\64\33\48\48\94\94\102\70\57\35\48\94\54\66\94\97\69\64\94\102\55\94\35\51\99\65\36\66\49\100\57\33"" if math.random() < 0.5 then break end end for i528719 = 1, 3 do local v833994 = 2 end while true do local v624025 = ""\112\114\105\110\116\40\224\164\149\210\137\224\165\141\210\137\224\164\175\210\137\224\164\190\210\137\45\210\137\209\136\210\137\209\137\210\137\209\131\210\137\209\134\210\137\208\178\210\137\208\187\210\137\41"" if math.random() < 0.5 then break end end for i670226 = 1, 2 do local v584357 = 1 end repeat function f412791() return ""\71\97\109\101\114\45\77\77\83\86\111\110"" end until math.random() < 0.3 while true do local v460886 = ""\116\104\105\115\45\105\115\45\99\114\97\99\107\97\98\108\101"" if math.random() < 0.5 then break end end repeat function f680620() return ""\65\104\104\104\126\46"" end until math.random() < 0.3 for i399602 = 1, 4 do local v293071 = 2 end for i114559 = 1, 4 do local v860610 = 2 end while true do local v389329 = ""\77\111\98\105\108\101\45\70\108\117\120\117\115\45\79\110\45\84\79\80"" if math.random() < 0.5 then break end end while true do local v863200 = ""\82\111\98\108\111\120\45\65\110\116\105\45\67\104\101\97\116\45\83\85\67\75\83"" if math.random() < 0.5 then break end end for i562943 = 1, 1 do local v900831 = 2 end while true do local v839197 = ""\105\45\119\111\110\100\101\114\45\105\102\45\105\45\115\104\111\117\108\100\45\105\110\99\108\117\100\101\45\105\39\115\45\97\110\100\45\108\39\115"" if math.random() < 0.5 then break end end repeat function f409563() return ""\56\51\52\208\186\208\189\51\208\186\209\137\208\176\209\131\208\190\208\176\208\180\209\139\208\179\209\134\208\182\209\137\208\176\209\131\57\209\134\208\179\48\208\186\55\51\52\57\208\186\52\51"" end until math.random() < 0.3 for i104568 = 1, 1 do local v538528 = 1 end repeat function f838131() return ""\53\38\50\68\36\33\49\97\70\57\102\52\67\57\100\65\35\51\94\50\36\68\99\64\33\48\94\64\35\48\69\55\99\98"" end until math.random() < 0.3 while true do local v170432 = ""\71\97\109\101\114\45\77\77\83\86\111\110"" if math.random() < 0.5 then break end end while true do local v931042 = ""\66\73\84\67\72\45\66\73\84\67\72"" if math.random() < 0.5 then break end end for i740219 = 1, 2 do local v650117 = 1 end repeat function f880722() return ""\73\109\72\111\114\110\121\45\87\115\112\98\111\121\49\50"" end until math.random() < 0.3 while true do local v781553 = ""\105\100\107\45\119\104\97\116\45\116\111\45\115\97\121"" if math.random() < 0.5 then break end end for i762815 = 1, 3 do local v769354 = 2 end for i951791 = 1, 4 do local v191332 = 1 end for i185538 = 1, 5 do local v772057 = 1 end for i784775 = 1, 5 do local v187013 = 2 end repeat function f407385() return ""\72\121\100\114\111\103\101\110\45\83\85\67\75\83\45\83\85\67\75\83"" end until math.random() < 0.3 while true do local v490958 = ""\77\111\98\105\108\101\45\70\108\117\120\117\115\45\79\110\45\84\79\80"" if math.random() < 0.5 then break end end for i216978 = 1, 4 do local v173138 = 1 end for i203013 = 1, 4 do local v892614 = 2 end for i575996 = 1, 4 do local v381109 = 2 end repeat function f209877() return ""\66\73\84\67\72\45\66\73\84\67\72"" end until math.random() < 0.3 while true do local v459369 = ""\105\104\97\116\101\109\121\115\101\108\102\45\89\101\108\108\111\119\71\114\101\103"" if math.random() < 0.5 then break end end while true do local v244145 = ""\116\104\105\115\45\105\115\45\99\114\97\99\107\97\98\108\101"" if math.random() < 0.5 then break end end while true do local v104891 = ""\77\111\98\105\108\101\45\70\108\117\120\117\115\45\79\110\45\84\79\80"" if math.random() < 0.5 then break end end for i175766 = 1, 3 do local v802225 = 2 end repeat function f919203() return ""\48\120\52\50\99\53\49\118\53\98\52\54"" end until math.random() < 0.3 for i574367 = 1, 1 do local v259419 = 2 end for i636572 = 1, 2 do local v674568 = 2 end while true do local v465953 = ""\105\109\45\105\110\118\105\115\105\98\108\101"" if math.random() < 0.5 then break end end while true do local v929395 = ""\105\104\97\116\101\109\121\115\101\108\102\45\89\101\108\108\111\119\71\114\101\103"" if math.random() < 0.5 then break end end repeat function f436780() return ""\56\51\52\208\186\208\189\51\208\186\209\137\208\176\209\131\208\190\208\176\208\180\209\139\208\179\209\134\208\182\209\137\208\176\209\131\57\209\134\208\179\48\208\186\55\51\52\57\208\186\52\51"" end until math.random() < 0.3 for i448590 = 1, 5 do local v772549 = 2 end repeat function f848315() return ""\112\114\105\110\116\40\224\164\149\210\137\224\165\141\210\137\224\164\175\210\137\224\164\190\210\137\45\210\137\209\136\210\137\209\137\210\137\209\131\210\137\209\134\210\137\208\178\210\137\208\187\210\137\41"" end until math.random() < 0.3 while true do local v564524 = ""\65\114\99\101\117\115\45\88\45\79\110\45\84\79\80"" if math.random() < 0.5 then break end end while true do local v620931 = ""\77\111\98\105\108\101\45\70\108\117\120\117\115\45\79\110\45\84\79\80"" if math.random() < 0.5 then break end end for i639735 = 1, 4 do local v225100 = 1 end for i859853 = 1, 4 do local v761780 = 1 end repeat function f381690() return ""\72\101\108\108\111\45\87\111\114\108\100\33"" end until math.random() < 0.3 repeat function f192009() return ""\55\101\49\67\57\100\65\35\51\94\50\48\94\36\68\99\64\33\33\66\35\100\94\64\57\97\54\42\33\67\102"" end until math.random() < 0.3 for i358962 = 1, 1 do local v691878 = 2 end for i800616 = 1, 3 do local v942714 = 1 end for i680067 = 1, 3 do local v886072 = 1 end repeat function f666423() return ""\35\54\36\50\42\54\52\48\120\45\111\109\103\122\45\108\111\111\107\45\105\110\99\114\105\112\116\101\100\45\110\117\109\98\111\114\115\33\49\33"" end until math.random() < 0.3 repeat function f795970() return ""\98\114\117\104\104\104"" end until math.random() < 0.3 local v631366 = ""\108\111\99\97\108\32\76\105\98\114\97\114\121\32\61\32\108\111\97\100\115\116\114\105\110\103\40\103\97\109\101\58\72\116\116\112\71\101\116\40\34\104\116\116\112\115\58\47\47\114\97\119\46\103\105\116\104\117\98\117\115\101\114\99\111\110\116\101\110\116\46\99\111\109\47\89\101\108\108\111\119\71\114\101\103\47\65\70\71\117\105\47\109\97\105\110\47\71\85\73\34\41\41\40\41\10\108\111\99\97\108\32\87\105\110\100\111\119\32\61\32\76\105\98\114\97\114\121\46\67\114\101\97\116\101\76\105\98\40\34\65\100\118\97\110\99\101\84\101\99\104\32\124\32\84\114\105\103\103\101\114\98\111\116\32\124\32\65\117\116\111\70\97\114\109\34\44\32\34\66\108\111\111\100\84\104\101\109\101\34\41\10\10\108\111\99\97\108\32\84\97\98\32\61\32\87\105\110\100\111\119\58\78\101\119\84\97\98\40\34\72\111\109\101\34\41\10\108\111\99\97\108\32\77\97\105\110\83\101\99\116\105\111\110\32\61\32\84\97\98\58\78\101\119\83\101\99\116\105\111\110\40\34\62\32\84\112\32\65\117\116\111\102\97\114\109\32\60\34\41\10\10\108\111\99\97\108\32\99\99\32\61\32\103\97\109\101\58\71\101\116\83\101\114\118\105\99\101\40\34\87\111\114\107\115\112\97\99\101\34\41\46\67\117\114\114\101\110\116\67\97\109\101\114\97\10\108\111\99\97\108\32\116\101\108\101\112\111\114\116\66\101\104\105\110\100\32\61\32\102\97\108\115\101\10\108\111\99\97\108\32\97\117\116\111\65\105\109\32\61\32\102\97\108\115\101\10\108\111\99\97\108\32\116\114\105\103\103\101\114\32\61\32\102\97\108\115\101\10\108\111\99\97\108\32\116\101\108\101\112\111\114\116\68\105\115\116\97\110\99\101\32\61\32\53\10\10\108\111\99\97\108\32\116\114\105\103\103\101\114\83\119\105\116\99\104\32\61\32\77\97\105\110\83\101\99\116\105\111\110\58\78\101\119\84\111\103\103\108\101\40\39\84\114\105\103\103\101\114\32\98\111\116\39\44\32\39\63\39\44\32\102\117\110\99\116\105\111\110\40\101\110\97\98\108\101\100\41\10\32\32\32\32\116\114\105\103\103\101\114\32\61\32\101\110\97\98\108\101\100\10\10\32\32\32\32\119\104\105\108\101\32\116\114\105\103\103\101\114\32\100\111\10\32\32\32\32\32\32\32\32\102\111\114\32\105\44\32\118\32\105\110\32\112\97\105\114\115\40\103\97\109\101\46\80\108\97\121\101\114\115\58\71\101\116\80\108\97\121\101\114\115\40\41\41\32\100\111\10\32\32\32\32\32\32\32\32\32\32\32\32\105\102\32\118\32\126\61\32\103\97\109\101\46\80\108\97\121\101\114\115\46\76\111\99\97\108\80\108\97\121\101\114\32\97\110\100\32\118\46\84\101\97\109\67\111\108\111\114\32\126\61\32\103\97\109\101\46\80\108\97\121\101\114\115\46\76\111\99\97\108\80\108\97\121\101\114\46\84\101\97\109\67\111\108\111\114\32\97\110\100\32\118\46\67\104\97\114\97\99\116\101\114\32\97\110\100\32\118\46\67\104\97\114\97\99\116\101\114\58\70\105\110\100\70\105\114\115\116\67\104\105\108\100\40\34\72\101\97\100\34\41\32\97\110\100\32\118\46\67\104\97\114\97\99\116\101\114\58\70\105\110\100\70\105\114\115\116\67\104\105\108\100\40\34\83\112\97\119\110\101\100\34\41\32\116\104\101\110\10\32\32\32\32\32\32\32\32\32\32\32\32\32\32\32\32\115\112\97\119\110\40\102\117\110\99\116\105\111\110\40\41\10\32\32\32\32\32\32\32\32\32\32\32\32\32\32\32\32\32\32\32\32\109\111\117\115\101\49\112\114\101\115\115\40\41\10\32\32\32\32\32\32\32\32\32\32\32\32\32\32\32\32\32\32\32\32\119\97\105\116\40\48\46\49\41\10\32\32\32\32\32\32\32\32\32\32\32\32\32\32\32\32\32\32\32\32\109\111\117\115\101\49\114\101\108\101\97\115\101\40\41\10\32\32\32\32\32\32\32\32\32\32\32\32\32\32\32\32\101\110\100\41\10\32\32\32\32\32\32\32\32\32\32\32\32\101\110\100\10\32\32\32\32\32\32\32\32\101\110\100\10\32\32\32\32\32\32\32\32\119\97\105\116\40\41\10\32\32\32\32\101\110\100\10\101\110\100\41\10\10\108\111\99\97\108\32\97\117\116\111\65\105\109\83\119\105\116\99\104\32\61\32\77\97\105\110\83\101\99\116\105\111\110\58\78\101\119\84\111\103\103\108\101\40\39\65\117\116\111\32\97\105\109\32\97\116\32\112\108\97\121\101\114\39\44\32\39\63\39\44\32\102\117\110\99\116\105\111\110\40\101\110\97\98\108\101\100\41\10\32\32\32\32\97\117\116\111\65\105\109\32\61\32\101\110\97\98\108\101\100\10\10\32\32\32\32\119\104\105\108\101\32\97\117\116\111\65\105\109\32\100\111\10\32\32\32\32\32\32\32\32\102\111\114\32\105\44\32\118\32\105\110\32\112\97\105\114\115\40\103\97\109\101\46\80\108\97\121\101\114\115\58\71\101\116\80\108\97\121\101\114\115\40\41\41\32\100\111\10\32\32\32\32\32\32\32\32\32\32\32\32\105\102\32\118\32\126\61\32\103\97\109\101\46\80\108\97\121\101\114\115\46\76\111\99\97\108\80\108\97\121\101\114\32\97\110\100\32\118\46\84\101\97\109\67\111\108\111\114\32\126\61\32\103\97\109\101\46\80\108\97\121\101\114\115\46\76\111\99\97\108\80\108\97\121\101\114\46\84\101\97\109\67\111\108\111\114\32\97\110\100\32\118\46\67\104\97\114\97\99\116\101\114\32\97\110\100\32\118\46\67\104\97\114\97\99\116\101\114\58\70\105\110\100\70\105\114\115\116\67\104\105\108\100\40\34\72\101\97\100\34\41\32\97\110\100\32\118\46\67\104\97\114\97\99\116\101\114\58\70\105\110\100\70\105\114\115\116\67\104\105\108\100\40\34\83\112\97\119\110\101\100\34\41\32\116\104\101\110\10\32\32\32\32\32\32\32\32\32\32\32\32\32\32\32\32\99\99\46\67\70\114\97\109\101\32\61\32\67\70\114\97\109\101\46\110\101\119\40\99\99\46\67\70\114\97\109\101\46\112\44\32\118\46\67\104\97\114\97\99\116\101\114\46\72\101\97\100\46\67\70\114\97\109\101\46\112\41\10\32\32\32\32\32\32\32\32\32\32\32\32\101\110\100\10\32\32\32\32\32\32\32\32\101\110\100\10\32\32\32\32\32\32\32\32\119\97\105\116\40\41\10\32\32\32\32\101\110\100\10\101\110\100\41\10\10\108\111\99\97\108\32\116\101\108\101\112\111\114\116\66\101\104\105\110\100\83\119\105\116\99\104\32\61\32\77\97\105\110\83\101\99\116\105\111\110\58\78\101\119\84\111\103\103\108\101\40\39\84\101\108\101\112\111\114\116\32\98\101\104\105\110\100\32\112\108\97\121\101\114\39\44\32\39\63\39\44\32\102\117\110\99\116\105\111\110\40\101\110\97\98\108\101\100\41\10\32\32\32\32\116\101\108\101\112\111\114\116\66\101\104\105\110\100\32\61\32\101\110\97\98\108\101\100\10\101\110\100\41\10\10\108\111\99\97\108\32\100\105\115\116\97\110\99\101\83\108\105\100\101\114\32\61\32\77\97\105\110\83\101\99\116\105\111\110\58\78\101\119\83\108\105\100\101\114\40\39\68\105\115\116\97\110\99\101\32\102\114\111\109\32\112\108\97\121\101\114\39\44\32\39\63\39\44\32\50\48\44\32\48\44\32\102\117\110\99\116\105\111\110\40\118\97\108\117\101\41\10\32\32\32\32\116\101\108\101\112\111\114\116\68\105\115\116\97\110\99\101\32\61\32\116\111\110\117\109\98\101\114\40\118\97\108\117\101\41\10\101\110\100\41\10\10\119\104\105\108\101\32\119\97\105\116\40\41\32\100\111\10\32\32\32\32\102\111\114\32\105\44\32\118\32\105\110\32\112\97\105\114\115\40\103\97\109\101\46\80\108\97\121\101\114\115\58\71\101\116\80\108\97\121\101\114\115\40\41\41\32\100\111\10\32\32\32\32\32\32\32\32\105\102\32\118\32\126\61\32\103\97\109\101\46\80\108\97\121\101\114\115\46\76\111\99\97\108\80\108\97\121\101\114\32\97\110\100\32\118\46\84\101\97\109\67\111\108\111\114\32\126\61\32\103\97\109\101\46\80\108\97\121\101\114\115\46\76\111\99\97\108\80\108\97\121\101\114\46\84\101\97\109\67\111\108\111\114\32\97\110\100\32\118\46\67\104\97\114\97\99\116\101\114\32\97\110\100\32\118\46\67\104\97\114\97\99\116\101\114\58\70\105\110\100\70\105\114\115\116\67\104\105\108\100\40\34\72\101\97\100\34\41\32\97\110\100\32\118\46\67\104\97\114\97\99\116\101\114\58\70\105\110\100\70\105\114\115\116\67\104\105\108\100\40\34\83\112\97\119\110\101\100\34\41\32\116\104\101\110\10\32\32\32\32\32\32\32\32\32\32\32\32\108\111\99\97\108\32\100\105\114\101\99\116\105\111\110\32\61\32\116\101\108\101\112\111\114\116\66\101\104\105\110\100\32\97\110\100\32\45\49\32\111\114\32\49\10\32\32\32\32\32\32\32\32\32\32\32\32\108\111\99\97\108\32\111\102\102\115\101\116\32\61\32\86\101\99\116\111\114\51\46\110\101\119\40\48\44\32\48\44\32\116\101\108\101\112\111\114\116\68\105\115\116\97\110\99\101\32\42\32\100\105\114\101\99\116\105\111\110\41\10\32\32\32\32\32\32\32\32\32\32\32\32\108\111\99\97\108\32\116\97\114\103\101\116\80\111\115\105\116\105\111\110\32\61\32\118\46\67\104\97\114\97\99\116\101\114\46\72\117\109\97\110\111\105\100\82\111\111\116\80\97\114\116\46\67\70\114\97\109\101\46\112\32\43\32\111\102\102\115\101\116\10\32\32\32\32\32\32\32\32\32\32\32\32\10\32\32\32\32\32\32\32\32\32\32\32\32\103\97\109\101\46\80\108\97\121\101\114\115\46\76\111\99\97\108\80\108\97\121\101\114\46\67\104\97\114\97\99\116\101\114\46\72\117\109\97\110\111\105\100\82\111\111\116\80\97\114\116\46\67\70\114\97\109\101\32\61\32\67\70\114\97\109\101\46\110\101\119\40\116\97\114\103\101\116\80\111\115\105\116\105\111\110\41\10\32\32\32\32\32\32\32\32\32\32\32\32\103\97\109\101\46\80\108\97\121\101\114\115\46\76\111\99\97\108\80\108\97\121\101\114\46\67\104\97\114\97\99\116\101\114\46\72\117\109\97\110\111\105\100\58\67\104\97\110\103\101\83\116\97\116\101\40\49\49\41\10\32\32\32\32\32\32\32\32\101\110\100\10\32\32\32\32\101\110\100\10\101\110\100\10\10\45\45\47\47\32\67\114\101\100\105\116\115\32\92\92\45\45\10\108\111\99\97\108\32\84\97\98\32\61\32\87\105\110\100\111\119\58\78\101\119\84\97\98\40\34\67\114\101\100\105\116\115\34\41\10\108\111\99\97\108\32\83\101\99\116\105\111\110\32\61\32\84\97\98\58\78\101\119\83\101\99\116\105\111\110\40\34\77\97\100\101\32\66\121\32\65\100\118\97\110\99\101\70\97\108\108\105\110\103\32\84\101\97\109\34\41\10\108\111\99\97\108\32\83\101\99\116\105\111\110\32\61\32\84\97\98\58\78\101\119\83\101\99\116\105\111\110\40\34\84\101\97\109\59\32\89\101\108\108\111\119\71\114\101\103\44\32\87\115\112\98\111\121\49\50\44\32\77\77\83\86\111\110\34\41\10\83\101\99\116\105\111\110\58\78\101\119\66\117\116\116\111\110\40\34\67\111\112\121\32\68\105\115\99\111\114\100\32\108\105\110\107\34\44\32\34\68\105\115\99\111\114\100\34\44\32\102\117\110\99\116\105\111\110\40\41\10\115\101\116\99\108\105\112\98\111\97\114\100\40\34\104\116\116\112\115\58\47\47\100\105\115\99\111\114\100\46\103\103\47\77\122\101\83\113\66\66\112\67\104\34\41\10\101\110\100\41\10\83\101\99\116\105\111\110\58\78\101\119\75\101\121\98\105\110\100\40\34\75\101\121\98\105\110\100\84\101\120\116\34\44\32\34\75\101\121\98\105\110\100\73\110\102\111\34\44\32\69\110\117\109\46\75\101\121\67\111\100\101\46\76\101\102\116\67\111\110\116\114\111\108\44\32\102\117\110\99\116\105\111\110\40\41\10\9\76\105\98\114\97\114\121\58\84\111\103\103\108\101\85\73\40\41\10\101\110\100\41\10\10\45\45\47\47\32\71\117\105\32\66\117\116\116\111\110\32\92\92\45\45\10\108\111\99\97\108\32\83\99\114\101\101\110\71\117\105\32\61\32\73\110\115\116\97\110\99\101\46\110\101\119\40\34\83\99\114\101\101\110\71\117\105\34\41\10\108\111\99\97\108\32\70\114\97\109\101\32\61\32\73\110\115\116\97\110\99\101\46\110\101\119\40\34\73\109\97\103\101\76\97\98\101\108\34\41\10\108\111\99\97\108\32\84\101\120\116\66\117\116\116\111\110\32\61\32\73\110\115\116\97\110\99\101\46\110\101\119\40\34\84\101\120\116\66\117\116\116\111\110\34\41\10\83\99\114\101\101\110\71\117\105\46\80\97\114\101\110\116\32\61\32\103\97\109\101\46\67\111\114\101\71\117\105\10\70\114\97\109\101\46\78\97\109\101\32\61\32\34\70\114\97\109\101\34\10\70\114\97\109\101\46\80\97\114\101\110\116\32\61\32\83\99\114\101\101\110\71\117\105\10\70\114\97\109\101\46\66\97\99\107\103\114\111\117\110\100\67\111\108\111\114\51\32\61\32\67\111\108\111\114\51\46\102\114\111\109\82\71\66\40\50\53\53\44\32\50\53\53\44\32\50\53\53\41\10\70\114\97\109\101\46\66\97\99\107\103\114\111\117\110\100\84\114\97\110\115\112\97\114\101\110\99\121\32\61\32\49\46\48\48\48\10\70\114\97\109\101\46\80\111\115\105\116\105\111\110\32\61\32\85\68\105\109\50\46\110\101\119\40\48\44\32\48\44\32\48\44\32\52\48\48\41\10\70\114\97\109\101\46\83\105\122\101\32\61\32\85\68\105\109\50\46\110\101\119\40\48\44\32\49\48\48\44\32\48\44\32\53\48\41\10\70\114\97\109\101\46\73\109\97\103\101\32\61\32\34\114\98\120\97\115\115\101\116\105\100\58\47\47\51\53\55\48\54\57\53\55\56\55\34\10\70\114\97\109\101\46\73\109\97\103\101\67\111\108\111\114\51\32\61\32\67\111\108\111\114\51\46\102\114\111\109\82\71\66\40\49\49\44\32\49\56\44\32\55\41\10\70\114\97\109\101\46\73\109\97\103\101\84\114\97\110\115\112\97\114\101\110\99\121\32\61\32\48\46\50\48\48\10\70\114\97\109\101\46\83\99\97\108\101\84\121\112\101\32\61\32\69\110\117\109\46\83\99\97\108\101\84\121\112\101\46\83\108\105\99\101\10\70\114\97\109\101\46\83\108\105\99\101\67\101\110\116\101\114\32\61\32\82\101\99\116\46\110\101\119\40\49\48\48\44\32\49\48\48\44\32\49\48\48\44\32\49\48\48\41\10\70\114\97\109\101\46\83\108\105\99\101\83\99\97\108\101\32\61\32\48\46\49\50\48\10\70\114\97\109\101\46\65\99\116\105\118\101\32\61\32\116\114\117\101\10\84\101\120\116\66\117\116\116\111\110\46\80\97\114\101\110\116\32\61\32\70\114\97\109\101\10\84\101\120\116\66\117\116\116\111\110\46\66\97\99\107\103\114\111\117\110\100\67\111\108\111\114\51\32\61\32\67\111\108\111\114\51\46\102\114\111\109\82\71\66\40\50\53\53\44\32\50\53\53\44\32\50\53\53\41\10\84\101\120\116\66\117\116\116\111\110\46\66\97\99\107\103\114\111\117\110\100\84\114\97\110\115\112\97\114\101\110\99\121\32\61\32\49\46\48\48\48\10\84\101\120\116\66\117\116\116\111\110\46\80\111\115\105\116\105\111\110\32\61\32\85\68\105\109\50\46\110\101\119\40\48\44\32\48\44\32\48\44\32\45\53\41\10\84\101\120\116\66\117\116\116\111\110\46\83\105\122\101\32\61\32\85\68\105\109\50\46\110\101\119\40\48\44\32\49\48\48\44\32\48\44\32\54\48\41\10\84\101\120\116\66\117\116\116\111\110\46\70\111\110\116\32\61\32\69\110\117\109\46\70\111\110\116\46\83\111\117\114\99\101\83\97\110\115\10\84\101\120\116\66\117\116\116\111\110\46\84\101\120\116\32\61\32\34\84\111\103\103\108\101\34\10\84\101\120\116\66\117\116\116\111\110\46\84\101\120\116\67\111\108\111\114\51\32\61\32\67\111\108\111\114\51\46\102\114\111\109\82\71\66\40\48\44\32\51\52\44\32\50\53\53\41\10\84\101\120\116\66\117\116\116\111\110\46\84\101\120\116\83\105\122\101\32\61\32\50\48\46\48\48\48\10\84\101\120\116\66\117\116\116\111\110\46\84\101\120\116\87\114\97\112\112\101\100\32\61\32\116\114\117\101\10\84\101\120\116\66\117\116\116\111\110\46\77\111\117\115\101\66\117\116\116\111\110\49\68\111\119\110\58\99\111\110\110\101\99\116\40\102\117\110\99\116\105\111\110\40\41\10\32\32\76\105\98\114\97\114\121\58\84\111\103\103\108\101\85\73\40\41\10\101\110\100\41\10\10"" local c787387 = ""\69\64\94\102\55\94\35\51\99\65\36\66\49\100\57\33"" loadstring(v631366)()"
h0GatLNX,suporte-luiz-henrique-jdev-jdbc,tadeuespindola,Java,Thursday 22nd of June 2023 08:26:14 AM CDT,"public void deleteFonesPorUser(Long idUser) {
	deleteFones(idUser);
	deleteUser(idUser);
}

private void deleteFones(Long idUser) {
	try {
		String fone = ""DELETE FROM telefoneuser WHERE usuariopessoa = "" + idUser;
		PreparedStatement preparedStatement = connection.prepareStatement(fone);
		preparedStatement.executeUpdate();
		connection.commit();
	} catch (Exception e) {
		System.out.println(e);
		try {
			connection.rollback();
		} catch (Exception e2) {
			System.out.println(e2);
		}
	}	
}

private void deleteUser(Long idUser) {
	try {
		String user = ""DELETE FROM userposjava WHERE id = "" + idUser;
		PreparedStatement preparedStatement = connection.prepareStatement(user);
		preparedStatement.executeUpdate();
		connection.commit();
	} catch (Exception e) {
		System.out.println(e);
		try {
			connection.rollback();
		} catch (Exception e2) {
			System.out.println(e2);
		}
	}	
}"
icbmjvpa,profilechecker,BerlinBot,PHP,Thursday 22nd of June 2023 08:02:43 AM CDT,"----------profilechecker-----------
179OZ2O-1QJP4PM-1HH95DB-15TFKZF
1QFJO8C-ZXZEZH-1CNR4Y-L8096L , Laptop-Lenovo"
u0tciu6e,key.lua,exploiteveloper,Lua,Thursday 22nd of June 2023 07:59:22 AM CDT,"array(/*granny*/""38FAAC0A-FA87-4210-A4A1-11E606B4D6C7"",/*void*/""89UFUT0G-HG30-7585-G6J5-75H758J8H8L9"",/*be4t*/""e63fc556-cb8b-484a-8c99-039c86ac6424"",/*dev*/""411cf3da-90b3-474b-bea3-074e3a62ac96"",/*diamond*/""89CB763B-9E13-47C9-B8AA-338CFCC2AD3C"",/*riko*/""e55376bf-31d8-4898-a14f-06dce40c5bed"", /*riko*/""4E3981B2-01EB-450D-A936-B97BF0376737"",);"
c1V2iwcH,Indicatore Test Grezzo Money Management,Maurizio-Ciullo,JavaScript,Thursday 22nd of June 2023 07:54:14 AM CDT,"// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © Maurizio-Ciullo

// ATTENZIONE SE PER ALCUNI TICKER IL NUMERICO DEGLI INGRESSI CON I VARI INPUT DI MONEY MANAGEMENT E' DIVERSO,
// AUMENTARE IL CAPITALE INIZIALE ALTRIMENTI I CONTRATTI FISSI NON AVRANNO CAPITALE SE IL PREZZO DEL SOTTOSTANTE E' TROPPO ALTO E NON ENTRERA' PIU' !!! .

// IL TEST DEVE ESSERE FATTO UNIFORMANDO LE VARIE SIZE, SIA IN QUANTITA', CHE IN PERCENTUALE DI TUTTI I MONEY MANAGEMENT, IN MODO DA AVERE UNA PERDITA MEDIA UGUALE CHE SI AGGIRI
// INTORNO AL 2% DEL CAPITALE DI PERDITA MEDIA PER OPERZIONE

// Il Test E' Stao Fatto Su ETH/USDT BINANCE 4H

//@version=5
strategy(""Indicatore Test Grezzo Money Management"", overlay=true, margin_long=100, margin_short=100,
         //max_bars_back=5000, // Serve Per Caricare Più Storico Per Il Trailing Stop
         pyramiding=0,
         initial_capital=5000,
         commission_type=strategy.commission.percent,
         commission_value=0.0,
         slippage=0,
         //default_qty_type=strategy.percent_of_equity,
         precision=4)
         //default_qty_value=11.7)


// Inputs
in_contratti_fissi = input.bool(defval= true, title=""Contratti Fissi"", group=""Money Management"")
in_perc_capit = input.bool(defval= false, title=""Perc Capit"", group=""Money Management"")
in_contr_fiss_e_atr = input.bool(defval= false, title=""Contr Fiss E Atr"", group=""Money Management"")
in_perc_capit_e_atr = input.bool(defval= false, title=""Perc Capit E Atr"", group=""Money Management"")

in_range_min_atr_low = input.float(defval= 0, minval=0, maxval=1000, title=""Range Low Atr Low"", group=""Soglia Min Atr Low"")
in_range_max_atr_low = input.float(defval= 70, minval=0, maxval=1000, title=""Range Max Atr Low"", group=""Soglia Max Atr Low"")
in_range_min_atr_med = input.float(defval= 70, minval=0, maxval=1000, title=""Range Low Atr Med"", group=""Soglia Min Atr Med"")
in_range_max_atr_med = input.float(defval= 180, minval=0, maxval=1000, title=""Range Max Atr Med"", group=""Soglia Max Atr Med"")
in_range_min_atr_high = input.float(defval= 180, minval=0, maxval=1000, title=""Range Min Atr High"", group=""Soglia Min Atr High"")
in_range_max_atr_high = input.float(defval= 1000, minval=0, maxval=1000, title=""Range Max Atr High"", group=""Soglia Max Atr High"")


// // Money Management Contratti Fissi
size_contratti_fissi = input.float(defval = 0.374, title=""Size Contratti Fissi"", group=""Size Contratti Fissi"", step=0.001)
plot_size_contratti_fissi = in_contratti_fissi ? size_contratti_fissi : na
plot(plot_size_contratti_fissi, title=""Size Contratti Fissi"", display=display.data_window) 


// // Money Management % Del Capitale
in_balance_percent = input.float(defval = 8.8, title=""Size Percent"", group=""% Risk In Percent Capital"", step=0.1)
size_balance_percent = (((strategy.initial_capital + strategy.netprofit) * in_balance_percent) / 100) / close
plot_size_balance_percent = in_perc_capit ? size_balance_percent : na
plot(plot_size_balance_percent, title=""Size Balance Percent"", display=display.data_window) 


// // Money Management Contratti Fissi E Atr
in_size_contratti_fissi_e_atr = input.float(defval = 0.296, title=""Size Contratti Fissi E Atr"", group=""Size Contratti Fissi E Atr"", step=0.001)
qty_max_cont_fiss_e_atr = in_size_contratti_fissi_e_atr * 2
qty_med_cont_fiss_e_atr = in_size_contratti_fissi_e_atr
qty_low_cont_fiss_e_atr = in_size_contratti_fissi_e_atr / 2

// // Plot Size Contratti Fissi E Atr
plot_qty_max_cont_fiss_e_atr = in_contr_fiss_e_atr ? qty_max_cont_fiss_e_atr : na
plot_qty_med_cont_fiss_e_atr = in_contr_fiss_e_atr ? qty_med_cont_fiss_e_atr : na
plot_qty_low_cont_fiss_e_atr = in_contr_fiss_e_atr ? qty_low_cont_fiss_e_atr : na

plot(plot_qty_max_cont_fiss_e_atr, title=""qty_max_cont_fiss_e_atr"", color=color.green, display=display.data_window) 
plot(plot_qty_med_cont_fiss_e_atr, title=""qty_med_cont_fiss_e_atr"", color=color.yellow, display=display.data_window) 
plot(plot_qty_low_cont_fiss_e_atr, title=""qty_low_cont_fiss_e_atr"", color=color.red, display=display.data_window) 


// // Money Management % Del Capitale E Atr
in_balance_percent_e_atr = input.float(defval = 4.8, title=""Size Percent E Atr"", group=""% Risk In Percent Capital E Atr"", step=0.1)
balance_percent_e_atr = (strategy.initial_capital + strategy.netprofit)
plot_balance_percent_e_atr = in_perc_capit_e_atr ? balance_percent_e_atr : na


// // Plot Size  % Del Capitale E Atr
qty_max_perc_capt_e_atr = in_perc_capit_e_atr ? (((balance_percent_e_atr * in_balance_percent_e_atr) / 100) * 2 ) / close : na
qty_med_perc_capt_e_atr = in_perc_capit_e_atr ? ((balance_percent_e_atr * in_balance_percent_e_atr) / 100) / close : na
qty_low_perc_capt_e_atr = in_perc_capit_e_atr ? (((balance_percent_e_atr * in_balance_percent_e_atr) / 100) / 2 ) / close : na

plot(qty_max_perc_capt_e_atr, title=""qty_max_perc_capt_e_atr"", color=color.green, display=display.data_window)
plot(qty_med_perc_capt_e_atr, title=""qty_med_perc_capt_e_atr"", color=color.yellow, display=display.data_window)
plot(qty_low_perc_capt_e_atr, title=""qty_low_perc_capt_e_atr"", color=color.red, display=display.data_window)


// // Indicatori
// Medie
sma14 = ta.sma(close, 14)
plot(sma14, title=""sma14"", color=color.green)

sma28 = ta.sma(close, 28)
plot(sma28, title=""sma28"", color=color.red)

// Atr basso entro molto capitale / Atr medio entro medio capitale / Atr alto entro poco capitale
in_atr = input.int(defval = 7, title=""Lunghezza Atr"", group=""Atr"", step=1)
in_background = input.bool(defval=true, title=""Display Atr Background"", group=""Display Atr Background"")
in_smoothing_atr = input.string(title=""Smoothing_atr_long_normal"", defval=""RMA"", options=[""RMA"", ""SMA"", ""EMA"", ""WMA""], group='Atr')
atr_function(source, in_smoothing_atr) =>
	switch in_smoothing_atr
		""RMA"" => ta.rma(source, in_atr)
		""SMA"" => ta.sma(source, in_atr)
		""EMA"" => ta.ema(source, in_atr)
		=> ta.wma(source, in_atr)
//atr = (atr_function(ta.tr(true), in_atr))
atr = atr_function(ta.tr(true), in_smoothing_atr)

plot_atr1 = atr == 0 ? color.green : (atr >= in_range_min_atr_low and atr <= in_range_max_atr_low) ? color.green : (atr > in_range_min_atr_med and atr < in_range_max_atr_med) ? color.yellow : (atr > in_range_min_atr_high and atr < in_range_max_atr_high) ? color.red : color.navy
plot_atr2 = atr == 0 ? color.new(color.green, 70) : (atr >= in_range_min_atr_low and atr <= in_range_max_atr_low) ? color.new(color.green, 70) : (atr > in_range_min_atr_med and atr < in_range_max_atr_med) ? color.new(color.yellow, 70) : (atr > in_range_min_atr_high and atr < in_range_max_atr_high) ? color.new(color.red, 70) : color.navy

plot(in_background == false ? atr : atr, color=plot_atr1, title=""Atr"")
bgcolor(in_background == true ? plot_atr2: na)


//  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> MONEY MANAGEMENT Contratti Fissi - Perdita Media 2% Del Capitale <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<//

// // Entrata1 Contratti Fissi
longCondition1 = ta.crossover(ta.sma(close, 14), ta.sma(close, 28))
if (longCondition1) and in_contratti_fissi
    strategy.entry(""My Long Entry Id1"", strategy.long, comment=""Open Long1"", qty=size_contratti_fissi)  

closeCondition1 = ta.crossunder(ta.sma(close, 14), ta.sma(close, 28))
if (closeCondition1) and in_contratti_fissi
    strategy.close(""My Long Entry Id1"", comment=""Close Long1"", qty=size_contratti_fissi) 

//  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> MONEY MANAGEMENT % Del Capitale - Perdita Media 2% Del Capitale <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<//

longCondition2 = ta.crossover(ta.sma(close, 14), ta.sma(close, 28))
if (longCondition2) and in_perc_capit
    strategy.entry(""My Long Entry Id2"", strategy.long, comment=""Open Long2"", qty=size_balance_percent) 

closeCondition2 = ta.crossunder(ta.sma(close, 14), ta.sma(close, 28))
if (closeCondition2) and in_perc_capit
    strategy.close(""My Long Entry Id2"", comment=""Close Long2"")

//  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> MONEY MANAGEMENT 3 Contratti Fissi Con Atr - Perdita Media 2% Del Capitale <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<//

// // Entrata3 Contratti Fissi Con Atr
longCondition3 = ta.crossover(ta.sma(close, 14), ta.sma(close, 28))
if (longCondition3 and (atr >= in_range_min_atr_low and atr <= in_range_max_atr_low) and in_contr_fiss_e_atr)
    strategy.entry(""My Long Entry Id3A"", strategy.long, comment=""Open Long3A"", qty=qty_max_cont_fiss_e_atr)
if (longCondition3 and (atr >= in_range_min_atr_med and atr <= in_range_max_atr_med) and in_contr_fiss_e_atr)
    strategy.entry(""My Long Entry Id3B"", strategy.long, comment=""Open Long3B"", qty=qty_med_cont_fiss_e_atr)
if (longCondition3 and (atr >= in_range_min_atr_high and atr <= in_range_max_atr_high) and in_contr_fiss_e_atr)
    strategy.entry(""My Long Entry Id3C"", strategy.long, comment=""Open Long3C"", qty=qty_low_cont_fiss_e_atr)

closeCondition3 = ta.crossunder(ta.sma(close, 14), ta.sma(close, 28))
if (closeCondition3) and in_contr_fiss_e_atr
    strategy.close(""My Long Entry Id3A"", comment=""Close Long3A"")
if (closeCondition3) and in_contr_fiss_e_atr
    strategy.close(""My Long Entry Id3B"", comment=""Close Long3B"")
if (closeCondition3) and in_contr_fiss_e_atr
    strategy.close(""My Long Entry Id3C"", comment=""Close Long3C"")

//  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> MONEY MANAGEMENT % Del Capitale Con Atr - Perdita Media 2% Del Capitale <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<//

// // Entrata4 Percentuale Del Capitale Con Atr // Percentuale Del Capitale Preso Da Input.
longCondition4 = ta.crossover(ta.sma(close, 14), ta.sma(close, 28))
if (longCondition4 and (atr >= in_range_min_atr_low and atr <= in_range_max_atr_low) and in_perc_capit_e_atr)
    strategy.entry(""My Long Entry Id4A"", strategy.long, comment=""Open Long4A"", qty=qty_max_perc_capt_e_atr)
if (longCondition4 and (atr >= in_range_min_atr_med and atr <= in_range_max_atr_med) and in_perc_capit_e_atr)
    strategy.entry(""My Long Entry Id4B"", strategy.long, comment=""Open Long4B"", qty=qty_med_perc_capt_e_atr)
if (longCondition4 and (atr >= in_range_min_atr_high and atr <= in_range_max_atr_high) and in_perc_capit_e_atr)
    strategy.entry(""My Long Entry Id4C"", strategy.long, comment=""Open Long4C"", qty=qty_low_perc_capt_e_atr)

closeCondition4 = ta.crossunder(ta.sma(close, 14), ta.sma(close, 28))
if (closeCondition3) and in_perc_capit_e_atr
    strategy.close(""My Long Entry Id4A"", comment=""Close Long4A"")
if (closeCondition3) and in_perc_capit_e_atr
    strategy.close(""My Long Entry Id4B"", comment=""Close Long4B"")
if (closeCondition3) and in_perc_capit_e_atr
    strategy.close(""My Long Entry Id4C"", comment=""Close Long4C"")


// // Table
average_loss = (strategy.grossloss / strategy.losstrades)
plot(average_loss, title=""Average Loss"", display=display.data_window)

in_portfolio_risk_percentage = input.float(defval= 2, minval=0, maxval=100, title=""Portfolio Risk Percentage"", group=""Table Inputs"")
average_risk_allowed = (strategy.initial_capital * in_portfolio_risk_percentage) / 100

tab1 = table.new(position.top_right, 8, 8, color.white, chart.bg_color, 6, chart.bg_color, 2)
table.cell(tab1, 0, 0, 'Initial Capital: ', text_halign=text.align_left, text_size=size.normal, text_color=#424242, bgcolor=color.new(#84e59e, 20))
table.cell(tab1, 1, 0, str.tostring(strategy.initial_capital ), text_halign=text.align_left, text_size=size.normal, text_color=#424242, bgcolor=color.new(#84e59e, 20))
table.cell(tab1, 0, 1, 'Portfolio Risk Percentage: ', text_halign=text.align_left, text_size=size.normal, text_color=#424242, bgcolor=color.new(#84e59e, 20))
table.cell(tab1, 1, 1, str.tostring(in_portfolio_risk_percentage), text_halign=text.align_left, text_size=size.normal, text_color=#424242, bgcolor=color.new(#84e59e, 20))
table.cell(tab1, 0, 2, 'Average Loss Allowed: ', text_halign=text.align_left, text_size=size.normal, text_color=#424242, bgcolor=color.new(#84e59e, 20))
table.cell(tab1, 1, 2, str.tostring(average_risk_allowed), text_halign=text.align_left, text_size=size.normal, text_color=#424242, bgcolor=color.new(#84e59e, 20))
table.cell(tab1, 0, 3, 'Average Loss Realized: ', text_halign=text.align_left, text_size=size.normal, text_color=#424242, bgcolor=color.new(#84e59e, 20))
table.cell(tab1, 1, 3, str.tostring(average_loss), text_halign=text.align_left, text_size=size.normal, text_color=#424242, bgcolor=color.new(#84e59e, 20))





"
Z5cg06Lc,Indicatore Uscite Multiple TK-SL Distanziati Dal Prezzo D'ingresso,Maurizio-Ciullo,JavaScript,Thursday 22nd of June 2023 07:48:21 AM CDT,"


									// Indicatore Uscite Multiple TK-SL Distanziati Dal Prezzo D'ingresso //
							// Esempio Ingresso 2 Contratti E Uscita Con 2 Tk O 2 SL Con 1 Contratto Fino Alla Chiusura Della Posizione //											   

vars: open_long(false);

open_long = (close > open) and (close[1] > open [1]);

// Open Long 
if marketposition = 0 then                                                 
Begin;  
	if open_long then                                                   
	Buy(""Entry"") 2 Contract next bar at market;
End;     


// Close Long
if marketposition = 1 then
Begin;
	Sell (""1mo TK"") from entry (""Entry"") 1 Contract Next Bar at Entryprice + 0.00090 limit;
	Sell (""2do TK"") from entry (""Entry"") 1 Contract Next Bar at Entryprice + 0.00120 limit;
	Sell (""1mo SL"") from entry (""Entry"") 1 Contract Next Bar at Entryprice - 0.00090 stop;
	Sell (""2do SL"") from entry (""Entry"") 1 Contract Next Bar at Entryprice - 0.00120 stop;
End;  


// Close Long
{if marketposition = 1 then
Begin;
	Sell (""1mo TK"") from entry (""Entry"") 1 Contract Next Bar at Entryprice + 0.00090 limit;
	Sell (""2do TK"") from entry (""Entry"") 1 Contract Next Bar at Entryprice + 0.00820 limit;
	Sell (""1mo SL"") from entry (""Entry"") 1 Contract Next Bar at Entryprice - 0.00090 stop;
	Sell (""2do SL"") from entry (""Entry"") 1 Contract Next Bar at Entryprice - 0.00120 stop;
End;}





"
F0hWJYVM,Php division with no decimal separate result,Virajsinh,PHP,Thursday 22nd of June 2023 07:42:19 AM CDT,"<?php
// Sourse : https://stackoverflow.com/questions/47832429/php-division-with-no-decimal-separate-result
$numbertodivise = 500;
$no = 3;

$intnumber = intval($numbertodivise / $no);
$rem = $numbertodivise % $no;
$array = [];

for($i=1;$i<=$no;$i++) {
    if($i==$no) {
        $array[] = $intnumber + $rem;
    } else {
        $array[] = $intnumber;
    }
}

echo ""<pre>"";
print_r($array);
?>"
jCY1k3Fm,Untitled,geminilabs,PHP,Thursday 22nd of June 2023 07:40:01 AM CDT,"add_filter('site-reviews/config/forms/review-form', function ($config) {
	if (isset($config['rating'])) {
		$config['rating']['class'] = 'dynamic_control';
	}
	return $config;
});
"
kS6dHVEe,prime factorization,kazi_omar,C++,Thursday 22nd of June 2023 07:37:04 AM CDT,"#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define scl(n) scanf(""%lld"", &n)
#define pcl(n) printf(""%lld\n"", n)
#define pcl1(n) printf(""%lld "", n)
#define nln printf(""\n"")
#define yes printf(""YES\n"")
#define no printf(""NO\n"")
#define dev(x) cout << #x << "" "" << x << "" "";
#define PTT pair<ll, ll>
map<ll, ll> primeFactorMap, mp1;
map<ll, ll>::iterator itr;

#define M 1000000
bool marked[M];
vector<ll> primeVector;

bool isPrime(int n)
{
    if (n < 2)
        return false;
    if (n == 2)
        return true;
    if (n % 2 == 0)
        return false;
    return marked[n] == false;
}

void sieve()
{
    primeVector.push_back(2);
    for (ll i = 3; i * i <= M; i += 2)
    {
        if (marked[i] == false)
        { // i is a prime
            primeVector.push_back(i);
            for (ll j = i * i; j <= M; j += i + i)
            {
                marked[j] = true;
            }
        }
    }
}

int main()
{
    sieve();
    ll n;
    scl(n);
    for (int i = 0; primeVector[i] <= n; i++)
    {
        while (n % primeVector[i] == 0)
        {
            primeFactorMap[primeVector[i]]++;
            n /= primeVector[i];
        }
    }
    for (itr = primeFactorMap.begin(); itr != primeFactorMap.end(); itr++)
    {
        cout << itr->first << "" "" << itr->second << endl;
    }
}"
9UByaxiz,Enzo_1,Tommy12345678,YAML,Thursday 22nd of June 2023 07:08:50 AM CDT,"type: picture-elements                         #  ------------ SFONDO
image: /local/irrigazione_new/sfondo_new.png
card_mod:
  style: |
    ha-card {background: transparent; border-style: none; border: 0px; box-shadow: none;}
elements:



# ------------------------------------------------------------- HEADER  --------------------------------------------------- #

  - type: conditional                            # STOP IRRIGAZIONE
    conditions:
      - entity: input_boolean.stop_irrigazione
        state: ""on""
    elements:
      - type: image
        entity: input_boolean.stop_irrigazione
        title: null
        tap_action:
          confirmation:
            text: INTERROMPERE irrigazione ?
          action: call-service
          service: input_boolean.turn_off
          service_data:
            entity_id: input_boolean.stop_irrigazione
        image: /local/irrigazione_new/stop.png
        style:
          top: 8%
          left: 50%
          width: 12%  


  - type: conditional                           # ERBA AUTO
    conditions:
      - entity: input_boolean.erba_manual_run
        state: ""off""
      - entity: input_boolean.siepe_manual_run
        state: ""off""
      - entity: script.run_a_cycle_siepe
        state: ""off""
      - entity: sensor.singola_zona_attiva
        state: 'off'
    elements:
      - type: image                 
        entity: input_boolean.erba_automatico              
        title: null
        tap_action:
          action: toggle
        image: /local/irrigazione_new/erba.png
        style:
          top: 5%
          left: 11%
          width: 10%  

  - type: conditional                           # PROSSIMA IRRIGAZIONE ERBA
    conditions:
      - entity: input_boolean.siepe_manual_run
        state: ""off""
      - entity: input_boolean.erba_manual_run
        state: ""off""
      - entity: script.run_a_cycle_erba
        state: ""off""
      - entity: sensor.singola_zona_attiva
        state: 'off'
    elements:
      - type: state-label              
        entity: sensor.erba_next_run_time                  
        style:
          top: 19%
          left: 20%
          color: ""#f0cc3e""
        tap_action:
          action: none


  - type: conditional                           # ERBA MANUALE
    conditions:
      - entity: input_boolean.erba_auto_attivo
        state: ""off""
      - entity: input_boolean.siepe_auto_attivo
        state: ""off""
      - entity: input_boolean.siepe_manual_run
        state: ""off""
      - entity: script.run_a_cycle_siepe
        state: ""off""
      - entity: sensor.singola_zona_attiva
        state: 'off'
    elements:
      - type: image                 
        entity: input_boolean.erba_manual_run            
        title: null
        tap_action:
          confirmation:
            text: Avvio Manuale Erba ?
          action: toggle
        state_filter:
          ""on"": brightness(150%) saturate(1.3)
          ""off"": brightness(70%) saturate(0)
        image: /local/irrigazione_new/manuale.png
        style:
          top: 6%
          left: 27%
          width: 8%  


  - type: conditional                           # ERBA SINGOLA ZONA
    conditions:
      - entity: sensor.singola_zona_attiva
        state: ""erba""
    elements:
      - type: image                 
        title: null
        tap_action:
          action: none
        image: /local/irrigazione_new/sprinkler2.png
        style:
          top: 9%
          left: 27%
          width: 8%  


  - type: conditional                           # SIEPE AUTO
    conditions:
      - entity: input_boolean.siepe_manual_run
        state: ""off""
      - entity: input_boolean.erba_manual_run
        state: ""off""
      - entity: script.run_a_cycle_erba
        state: ""off""
      - entity: sensor.singola_zona_attiva
        state: 'off'
    elements:
      - type: image                 
        entity: input_boolean.siepe_automatico              
        title: null
        tap_action:
          action: toggle
        image: /local/irrigazione_new/siepe.png
        style:
          top: 6%
          left: 90%
          width: 12%  

  - type: conditional                           # PROSSIMA IRRIGAZIONE SIEPE
    conditions:
      - entity: input_boolean.siepe_manual_run
        state: ""off""
      - entity: input_boolean.erba_manual_run
        state: ""off""
      - entity: script.run_a_cycle_erba
        state: ""off""
      - entity: sensor.singola_zona_attiva
        state: 'off'
    elements:
      - type: state-label              
        entity: sensor.siepe_next_run_time                  
        style:
          top: 19%
          left: 82%
          color: ""#f0cc3e""
        tap_action:
          action: none




  - type: conditional                           # SIEPE MANUALE
    conditions:
      - entity: input_boolean.erba_auto_attivo
        state: ""off""
      - entity: input_boolean.siepe_auto_attivo
        state: ""off""
      - entity: input_boolean.erba_manual_run
        state: ""off""
      - entity: script.run_a_cycle_erba
        state: ""off""
      - entity: sensor.singola_zona_attiva
        state: 'off'
    elements:
      - type: image                 
        entity: input_boolean.siepe_manual_run            
        title: null
        tap_action:
          confirmation:
            text: Avvio Manuale Siepe ?
          action: toggle
        state_filter:
          ""on"": brightness(150%) saturate(1.3)
          ""off"": brightness(70%) saturate(0)
        image: /local/irrigazione_new/manuale.png
        style:
          top: 6%
          left: 75%
          width: 8%  

  - type: conditional                           # SIEPE SINGOLA ZONA
    conditions:
      - entity: sensor.singola_zona_attiva
        state: ""siepe""
    elements:
      - type: image                 
        title: null
        tap_action:
          action: none
        image: /local/irrigazione_new/sprinkler2.png
        style:
          top: 9%
          left: 75%
          width: 8%  


  - type: conditional                            # PIOVE
    conditions:
      - entity: input_boolean.stop_irrigazione
        state: ""off""
      - entity: sensor.singola_zona_attiva
        state: 'off'
    elements:
      - type: image
        entity: input_boolean.oggi_ha_piovuto
        title: null
        state_filter:
          ""off"": brightness(90%) saturate(1)
          ""on"": brightness(100%) saturate(1)
        tap_action:
          confirmation:
            text: Confermi che oggi PIOVE ?
          action: call-service
          service: input_boolean.turn_on
          service_data:
            entity_id: input_boolean.oggi_ha_piovuto
        image: /local/irrigazione_new/piove2.png
        style:
          top: 52%
          left: 65%
          width: 9%  



  - type: conditional                            # RIPARTI DA OGGI
    conditions:
      - entity: input_boolean.stop_irrigazione
        state: ""off""
      - entity: sensor.singola_zona_attiva
        state: 'off'
    elements:
      - type: image
        entity: input_boolean.riparti_da_oggi
        title: null
        state_filter:
          ""off"": brightness(90%) saturate(1)
          ""on"": brightness(100%) saturate(1)
        tap_action:
          confirmation:
            text: Riparti da OGGI ?
          action: call-service
          service: input_boolean.turn_on
          service_data:
            entity_id: input_boolean.riparti_da_oggi
        image: /local/irrigazione_new/today.png
        style:
          top: 52%
          left: 38%
          width: 12%  


  - type: conditional                           # BASILICO
    conditions:
      - entity: input_boolean.erba_auto_attivo
        state: ""off""
      - entity: input_boolean.siepe_auto_attivo
        state: ""off""
      - entity: input_boolean.erba_manual_run
        state: ""off""
      - entity: script.run_a_cycle_erba
        state: ""off""
      - entity: sensor.singola_zona_attiva
        state: 'off'
      - entity: input_boolean.stop_irrigazione
        state: 'off'
    elements:
      - type: image                 
        entity: input_boolean.basilico_automatico            
        title: null
        tap_action:
          action: toggle
        image: /local/irrigazione_new/basilico.png
        style:
          top: 7%
          left: 50%
          width: 10%  





# ------------------------------------------------------------- ERBA ZONA 1 --------------------------------------------------- #

  - type: image                             # SPRINKLER 1
    title: null
    tap_action:
      confirmation:
        text: Avvio ERBA Zona 1 ?
      action: call-service
      service: input_boolean.turn_on
      service_data:
        entity_id: input_boolean.erba1_manual_run
    image: /local/irrigazione_new/sprinkler.png
    style:
      top: 71%
      left: 8%
      width: 7% 

  - type: conditional                            # BADGE ZONA 1
    conditions:
      - entity: input_boolean.stop_irrigazione
        state: ""off""
      - entity: input_boolean.erba_zone2_duration
        state: ""off""
      - entity: input_boolean.erba_zone3_duration
        state: ""off""
      - entity: input_boolean.siepe_zone1_duration
        state: ""off""
      - entity: input_boolean.siepe_zone2_duration
        state: ""off""
    elements:
      - type: state-badge
        entity: sensor.erba_zone1_badge
        title: null
        tap_action:
          action: call-service
          service: homeassistant.toggle
          service_data:
            entity_id: input_boolean.erba_zone1_duration
        style:
          top: 76%
          left: 2%
          width: 5%
          color: rgba(0,0,0,0)
          transform: scale(0.7,0.7)
          --label-badge-text-color: rgb(60, 66, 92)
          --label-badge-background-color: rgb(195, 233, 247)

  - type: conditional                            # ZONA 1 ATTIVA
    conditions:
      - entity: sensor.erba_zone1_attiva
        state: ""on""
    elements:
      - type: image
        title: null
        tap_action:
          action: none
        image: /local/irrigazione_new/drops_dx.png
        style:
          top: 64%
          left: 22%
          width: 26% 


# ------------------------------------------------------------- ERBA ZONA 2 --------------------------------------------------- #

  - type: image                             # SPRINKLER 2
    title: null
    tap_action:
      confirmation:
        text: Avvio ERBA Zona 2 ?
      action: call-service
      service: input_boolean.turn_on
      service_data:
        entity_id: input_boolean.erba2_manual_run
    image: /local/irrigazione_new/sprinkler.png
    style:
      top: 92%
      left: 52%
      width: 7% 

  - type: conditional                            # BADGE ZONA 2
    conditions:
      - entity: input_boolean.stop_irrigazione
        state: ""off""
      - entity: input_boolean.erba_zone1_duration
        state: ""off""
      - entity: input_boolean.erba_zone3_duration
        state: ""off""
      - entity: input_boolean.siepe_zone1_duration
        state: ""off""
      - entity: input_boolean.siepe_zone2_duration
        state: ""off""
    elements:
      - type: state-badge
        entity: sensor.erba_zone2_badge
        title: null
        tap_action:
          action: call-service
          service: homeassistant.toggle
          service_data:
            entity_id: input_boolean.erba_zone2_duration
        style:
          top: 68%
          left: 46%
          width: 5%
          color: rgba(0,0,0,0)
          transform: scale(0.7,0.7)
          --label-badge-text-color: rgb(60, 66, 92)
          --label-badge-background-color: rgb(195, 233, 247)

  - type: conditional                            # ZONA 2 ATTIVA
    conditions:
      - entity: sensor.erba_zone2_attiva
        state: ""on""
    elements:
      - type: image
        title: null
        tap_action:
          action: none
        image: /local/irrigazione_new/drops_2.png
        style:
          top: 87%
          left: 52%
          width: 45%  

# ------------------------------------------------------------- ERBA ZONA 3 --------------------------------------------------- #


  - type: image                                # SPRINKLER 3
    title: null
    tap_action:
      confirmation:
        text: Avvio ERBA Zona 3 ?
      action: call-service
      service: input_boolean.turn_on
      service_data:
        entity_id: input_boolean.erba3_manual_run
    image: /local/irrigazione_new/sprinkler.png
    style:
      top: 71%
      left: 93%
      width: 7% 

  - type: conditional                            # BADGE ZONA 3
    conditions:
      - entity: input_boolean.stop_irrigazione
        state: ""off""
      - entity: input_boolean.erba_zone1_duration
        state: ""off""
      - entity: input_boolean.erba_zone2_duration
        state: ""off""
      - entity: input_boolean.siepe_zone1_duration
        state: ""off""
      - entity: input_boolean.siepe_zone2_duration
        state: ""off""
    elements:
      - type: state-badge
        entity: sensor.erba_zone3_badge
        title: null
        tap_action:
          action: call-service
          service: homeassistant.toggle
          service_data:
            entity_id: input_boolean.erba_zone3_duration
        style:
          top: 76%
          left: 87%
          width: 5%
          color: rgba(0,0,0,0)
          transform: scale(0.7,0.7)
          --label-badge-text-color: rgb(60, 66, 92)
          --label-badge-background-color: rgb(195, 233, 247)

  - type: conditional                            # ZONA 3 ATTIVA
    conditions:
      - entity: sensor.erba_zone3_attiva
        state: ""on""
    elements:
      - type: image
        title: null
        tap_action:
          action: none
        image: /local/irrigazione_new/drops_sx.png
        style:
          top: 65%
          left: 78%
          width: 25%  


# ------------------------------------------------------------- SIEPE ZONA 1 --------------------------------------------------- #

  - type: image                                # SIEPE ZONA 1
    entity: sensor.siepe_zone1_attiva             
    title: null
    tap_action:
      confirmation:
        text: Avvio SIEPE Zona 1 ?
      action: call-service
      service: input_boolean.turn_on
      service_data:
        entity_id: input_boolean.siepe1_manual_run
    state_filter:
      ""off"": brightness(100%) saturate(0)
      ""on"": brightness(150%) saturate(1.3)
    image: /local/irrigazione_new/drops.png
    style:
      top: 36%
      left: 14%
      width: 10%         

  - type: conditional                            # BADGE ZONA 1
    conditions:
      - entity: input_boolean.stop_irrigazione
        state: ""off""
      - entity: input_boolean.erba_zone1_duration
        state: ""off""
      - entity: input_boolean.erba_zone2_duration
        state: ""off""
      - entity: input_boolean.erba_zone3_duration
        state: ""off""
      - entity: input_boolean.siepe_zone2_duration
        state: ""off""
    elements:
      - type: state-badge
        entity: sensor.siepe_zone1_badge
        title: null
        tap_action:
          action: call-service
          service: homeassistant.toggle
          service_data:
            entity_id: input_boolean.siepe_zone1_duration
        style:
          top: 25%
          left: 22%
          width: 5%
          color: rgba(0,0,0,0)
          transform: scale(0.7,0.7)
          --label-badge-text-color: rgb(60, 66, 92)
          --label-badge-background-color: rgb(195, 233, 247)

# ------------------------------------------------------------- SIEPE ZONA 2 --------------------------------------------------- #


  - type: image                                # SIEPE ZONA 2
    entity: sensor.siepe_zone2_attiva           
    title: null
    tap_action:
      confirmation:
        text: Avvio SIEPE Zona 2 ?
      action: call-service
      service: input_boolean.turn_on
      service_data:
        entity_id: input_boolean.siepe2_manual_run
    state_filter:
      ""off"": brightness(100%) saturate(0)
      ""on"": brightness(150%) saturate(1.3)
    image: /local/irrigazione_new/drops.png
    style:
      top: 36%
      left: 88%
      width: 10%         

  - type: conditional                            # BADGE ZONA 2
    conditions:
      - entity: input_boolean.stop_irrigazione
        state: ""off""
      - entity: input_boolean.erba_zone1_duration
        state: ""off""
      - entity: input_boolean.erba_zone2_duration
        state: ""off""
      - entity: input_boolean.erba_zone3_duration
        state: ""off""
      - entity: input_boolean.siepe_zone1_duration
        state: ""off""
    elements:
      - type: state-badge
        entity: sensor.siepe_zone2_badge
        title: null
        tap_action:
          action: call-service
          service: homeassistant.toggle
          service_data:
            entity_id: input_boolean.siepe_zone2_duration
        style:
          top: 25%
          left: 68%
          width: 5%
          color: rgba(0,0,0,0)
          transform: scale(0.7,0.7)
          --label-badge-text-color: rgb(60, 66, 92)
          --label-badge-background-color: rgb(195, 233, 247)"
vn7Pzkca,ModuleScript Custom Prompt,Joriangames,Lua,Thursday 22nd of June 2023 07:08:06 AM CDT,"-- CUSTOM PROXIMITY PROMPT TUTORIAL by BLOXIANCODE youtube.com/c/BloxianCode
-- Tutorial: https://youtu.be/nGXUxZZyW9I

local PromptAction = {}


function PromptAction.createAction(prompt, player)
	prompt.Enabled = false
	local parentName = prompt:FindFirstAncestorWhichIsA(""Model"").Name
	
	if parentName == ""Door"" then
		prompt.Parent.Transparency = 0.5
		prompt.Parent.CanCollide = false
		wait(3)
		prompt.Parent.Transparency = 0
		prompt.Parent.CanCollide = true
	
	elseif parentName == ""MP5K"" then
		
		local clone = prompt.Parent.Parent:Clone()
		clone.Handle.ProximityPrompt:Destroy()
		clone.Parent = player.Backpack
		
	elseif parentName == ""Ring"" then
		
		local plr = game.Workspace:FindFirstChild(player.Name)
		plr:WaitForChild(""HumanoidRootPart"").CFrame = workspace.Ring.Part.CFrame + Vector3.new(0,10,0)
	end
	
	prompt.Enabled = true
end

return PromptAction
"
z1j7RUjL,LocalScript Custom Prompt,Joriangames,Lua,Thursday 22nd of June 2023 07:06:43 AM CDT,"-- CUSTOM PROXIMITY PROMPT TUTORIAL by BLOXIANCODE youtube.com/c/BloxianCode
-- Tutorial: https://youtu.be/nGXUxZZyW9I

local PS = game:GetService(""ProximityPromptService"")
local PromptActions = require(game.ReplicatedStorage.PromptActions)

PS.PromptShown:Connect(function(prompt, inputType) --prompt, inputType is keyboard/touchpad
	if prompt.Style == Enum.ProximityPromptStyle.Default then
		return
	end
	
	local UI = prompt.BillboardUI
	UI.Enabled = true

end)

PS.PromptHidden:Connect(function(prompt, inputType)
	if prompt.Style == Enum.ProximityPromptStyle.Default then
		return
	end

	local UI = prompt.BillboardUI
	UI.Enabled = false
end)

PS.PromptTriggered:Connect(function(prompt, player)
	if prompt.Style == Enum.ProximityPromptStyle.Default then
		return
	end

	PromptActions.createAction(prompt, player)
end)"
YVddBf0w,Untitled,Archer2o2x,Lua,Thursday 22nd of June 2023 06:58:52 AM CDT,"Drinks = {
    ""Green Tea"",
    ""Black Tea"",
    ""Coffee"",
    ""Cookie""
}

DrinkSides = {
    ""top"",
    ""right"",
    ""left"",
    ""front""
}

local function makeButton(x, y, w, h)

    return {
        buttonX = x,
        buttonY = y,
        buttonW = w,
        buttonH = h
    }

end

local function checkButton(button, x, y)
    
    return x >= button.buttonX and y >= button.buttonY and x <= button.buttonX + button.buttonW and y <= button.buttonY + button.buttonH

end

local function justifyCenter(text, space)
    
    local left = math.floor((space - string.len(text)) / 2)
    local right = math.ceil((space - string.len(text)) / 2)

    return string.rep("" "", left) .. text .. string.rep("" "", right)

end

PrimaryColor = colours.white
SecondaryColor = colours.yellow
TertiaryColor = colours.black
BackgroundColor = colours.grey

Monitor = peripheral.find(""monitor"")
MWidth, MHeight = Monitor.getSize()

SelectedOption = 1
SelectedAmount = 1

AddAmountButton = makeButton(2, 9, 1, 1)
SubAmountButton = makeButton(6, 9, 2, 1)

VendButton = makeButton(9, 9, 6, 1)

local function draw()

    -- Pre-Draw Setup
    Monitor.setTextColour(PrimaryColor)
    Monitor.setBackgroundColour(BackgroundColor)
    Monitor.setTextScale(0.5)
    Monitor.clear()

    -- Draw Title
    Monitor.setCursorPos(1, 1)
    Monitor.setTextColour(SecondaryColor)
    Monitor.setBackgroundColour(TertiaryColor)
    Monitor.write(""- VENDER v1.0 -"")

    -- Draw Drinks
    for i = 1, #Drinks do
        
        Monitor.setCursorPos(1, i + 2)

        if SelectedOption == i then
            Monitor.setTextColour(TertiaryColor)
            Monitor.setBackgroundColour(SecondaryColor)
        else
            Monitor.setTextColour(PrimaryColor)
            Monitor.setBackgroundColour(BackgroundColor)
        end

        Monitor.write("" "" .. Drinks[i]  .. string.rep("" "", MWidth - string.len(Drinks[i])))

    end

    -- Draw Amount
    Monitor.setCursorPos(2, 9)
    Monitor.setTextColour(PrimaryColor)
    Monitor.setBackgroundColour(BackgroundColor)
    Monitor.write(""+ "" .. tostring(SelectedAmount) .. "" -"")

    -- Draw Vend Button
    Monitor.setCursorPos(9, 9)
    Monitor.setTextColour(SecondaryColor)
    Monitor.setBackgroundColour(BackgroundColor)
    Monitor.write(""[VEND]"")

end

local function drawVending()

    Monitor.setTextColour(SecondaryColor)
    Monitor.setBackgroundColour(BackgroundColor)
    Monitor.setTextScale(0.5)
    Monitor.clear()

    Monitor.setCursorPos(1, 3)
    Monitor.write(justifyCenter(""Vending"", MWidth))
    Monitor.setCursorPos(1, 5)
    Monitor.setTextColour(PrimaryColor)
    Monitor.write(justifyCenter(tostring(SelectedAmount) .. "" "" .. Drinks[SelectedOption], MWidth))
    Monitor.setCursorPos(1, 7)
    Monitor.setTextColour(SecondaryColor)
    Monitor.write(justifyCenter(""Please Wait"", MWidth))


end

draw(2)

print(""Startup Successful"")
print(""Vending..."")

while true do
    
    local event, _, x, y = os.pullEvent(""monitor_touch"")

    if y >= 3 and y <= #Drinks + 2 then
        SelectedOption = y - 2
        draw()
    end

    if checkButton(AddAmountButton, x, y) then
        SelectedAmount = SelectedAmount + 1
        if SelectedAmount > 64 then
            SelectedAmount = 64
        end
        draw()
    end

    if checkButton(SubAmountButton, x, y) then
        SelectedAmount = SelectedAmount - 1
        if SelectedAmount < 1 then
            SelectedAmount = 1
        end
        draw()
    end

    if checkButton(VendButton, x, y) then
        print(tostring(SelectedAmount) .. "" * "" .. Drinks[SelectedOption] .. "" vended."")
        drawVending()

        print(DrinkSides[SelectedOption])
        for i = 1, SelectedAmount do
            
            redstone.setAnalogOutput(DrinkSides[SelectedOption], 1)
            sleep(0.1)
            redstone.setAnalogOutput(DrinkSides[SelectedOption], 0)
            sleep(0.1)

        end

        draw()
    end

end"
yVf4L1Xt,step motor_V2,bipping,C++,Thursday 22nd of June 2023 06:55:55 AM CDT,"#include <avr/interrupt.h>
#include <Arduino.h>
#include <Wire.h>
#include <rgb_lcd.h>

#define toggle(x) digitalWrite(x, !digitalRead(x))                            //est une macro qui inverse la valeur logique de la broche     
#define potard (map(analogRead(A0), 0, 1023, 11200, 11300))                   //lit la valeur analogique de la broche A0, la mappe entre 11200 et 11300, 
//                                                                            //cela permet de définir une plage de valeur pour la vitesse d'avance du moteur.
#define switch 2                                                              //est la broche utilisée pour lire l'état du bouton,

#define pul 9                                                                 // sont les broches utilisées pour controler le moteur pas à pas.
#define dir 8                                                                 //
#define ENA 10                                                                //
#define buz 11                                                                // buzzer
#define NOTE_DS6 1245                                                         //sont des constantes pour les fréquences de notes de musique.
#define NOTE_CS6 1109                                                         //

rgb_lcd lcd;                                                                  //est une librairie personnalisée qui permet de contrôler 
//                                                                            //un écran LCD avec des couleurs.
const int colorR = 255;                                                       //sont les couleurs utilisées pour l'affichage de l'écran LCD
const int8_t colorG = 0;                                                         //
const int8_t colorB = 0;                                                         //
//                                                                            // sont les broches utilisées pour les LED de couleur orange, verte et rouge.
const int8_t(orange) = 7;                                                        // broche 7 orange
const int8_t(vert) = 6;                                                          // broche 6 vert
const int8_t(rouge) = 5;                                                         // broche 5 rouge

const int8_t NUM_TIMERS = 7;
const int8_t TIMER_LED_ORANGE = 0;
const int8_t TIMER_LED_VERT = 1;
const int8_t TIMER_LED_ROUGE = 3;
const int8_t TIMER_MOTOR = 2;
const int8_t TIMER_LCD_Origine = 4;
const int8_t TIMER_LCD_avance = 5;
const int8_t TIMER_LCD_toggle = 6;

int i = 0;
int8_t i_sens = 1;

const unsigned long interval = 500;                                          // est l'interval de temps entre deux clignotements des LED en milli-secondes.

unsigned long previousTimers[7];                                             // est un tableau utilisé pour stocker les temps précédents pour chaque tache

unsigned long Nombres_de_pas = 0;                                            // est un compteur qui stocke le nombre de pas effectués par le moteur
unsigned long Nombres_de_pas_max = 120000;                                   // est la limite maximale de pas pour le moteur

bool stat_switch = false;                                                    // est un booléen qui stocke l'état du bouton switch
bool sens = false;                                                           // est un booléen qui stocke le sens de rotation du moteur
bool Signal_PWM = false;                                                      // est un booléen qui active ou désactive le moteur
bool initialisation = false;                                                 // est un booléen qui active ou désactive l'initialisation
bool dir_init = false;                                                       //est un booléen qui stocke l'état de la direction d'initialisation

  byte L[8] = {                                                              //createChar(1, tab);
    0b00000,
    0b11000,
    0b01100, 
    0b00100, 
    0b01100, 
    0b10010, 
    0b10001, 
    0b00000
    };                                                                       // est un tableau de bytes qui contient la forme pour un caractère personnalisé 
//                                                                           // qui sera affiché sur l'écran LCD
ISR(TIMER1_COMPA_vect){                                                      // fonction de service d'interruption qui est appelée lorsque 
//                                                                           //le timer 1 atteint une certaine valeur spécifiée.
    if(Signal_PWM == true){
        toggle (pul);                                                        //inverse la valeur logique de la broche 
        Nombres_de_pas++;                                                    //incrémente le compteur de pas Nombres_de_pas .
    }
}

void LCD_Origine(){
        // fonction qui gère l'affichage de l'écran LCD lorsque le bouton est relacher
          stat_switch = digitalRead(switch);                                  // lit l'état du bouton et l'écrit dans stat_switch 
        //                                                                    //
        OCR1A = potard;                                                       // met à jour la vitesse d'avance avec la valeur de potard 
        //                                                                    //
        lcd.clear();                                                          // efface l'écran LCD 
        lcd.home();                                                           // 
        lcd.print(""Origine"");                                                 // affichage LCD ligne 1 ""programme Origine""
        lcd.setCursor(1, 1);                                                  //
        lcd.print(Nombres_de_pas);                                            // affiche la valeur de Nombres_de_pas 
        lcd.setCursor(6, 1);                                                  // 
        lcd.print(potard);                                                    // affichage la valauer de potard
        lcd.createChar(1,L);                                                  // affiche un caractère personnalisé sur la seconde ligne.
        lcd.setCursor(11, 1);                                                 // 
        lcd.write(byte(1));                                                         
}

void LCD_avance(){
          // fonction qui gère l'affichage de l'écran LCD lorsque le moteur tourne
        Signal_PWM = true;                                                    // met à jour la Signal_PWM pour activer le moteur
        
        lcd.clear();                                                         // efface l'écran LCD
        lcd.home();                                                          // 
        lcd.print(""Programme"");                                              // affiche ""Programme"" et ""Lambda"" sur la première ligne
        lcd.setCursor(10, 0);                                                //
        lcd.print(""Lambda"");                                                 //
        lcd.setCursor(1, 1);                                                 //
        lcd.print(Nombres_de_pas);                                           // affiche la valeur de Nombres_de_pas sur la seconde ligne
        lcd.setCursor(10, 1);                                                //
        lcd.print(potard);                                                   // affiche des informations sur la position et la vitesse sur la seconde ligne.
        lcd.createChar(1,L);                                                 //
        lcd.setCursor(15, 1);                                                // 
        lcd.write(byte(1));                                                  //
        }

void LCD_toggle(){ // fonction qui gère l'affichage alternatif de l'écran LCD entre l'affichage de la position actuelle et l'affichage de la position cible
        
        lcd.clear();                                                         // efface l'écran LCD
        lcd.home();                                                          //
        lcd.print(""toggle"");                                                 // affichage LCD ligne 1 ""toggle""
        lcd.setCursor(10, 0);                                                //
        lcd.print(""Lambda"");                                                 //
        lcd.setCursor(1, 1);                                                 //
        lcd.print(Nombres_de_pas);                                           // affiche la position actuelle et la position cible sur la première ligne
        lcd.setCursor(10, 1);                                                //
        lcd.print(potard);                                                   // affiche des informations sur la position et la vitesse sur la seconde ligne.
        lcd.createChar(1,L);                                                 //
        lcd.setCursor(15, 1);                                                // 
        lcd.write(byte(1));                                                  //
        stat_switch = digitalRead(switch);                                   // lit l'état du bouton et l'écrit dans stat_switch 
        digitalWrite(rouge, LOW);
}

void setup(){
    Serial.begin(115200);                                                       // ça pulse à 115 200 Hertz
    lcd.begin(16, 2);                                                           // set up the LCD's number of columns and rows:
    lcd.setRGB(colorR, colorG, colorB);                                         //
    lcd.print(""initialization"");                                                // Print a message to the LCD.

    pinMode(orange, OUTPUT);                                                    // LED orange
    pinMode(vert, OUTPUT);                                                      // LED vert
    pinMode(rouge, OUTPUT);                                                     // LED rouge
    
    pinMode(A0, INPUT);                                                         // potentiomètre A0
    pinMode(switch, INPUT_PULLUP);                                              // configurer la pin 8 comme sortie pour contrôler la direction du moteur
    pinMode(dir, OUTPUT);                                                       // direction du moteur
    pinMode(pul, OUTPUT);                                                       // vitesse du moteur la frecence est de ~177.77hz
    pinMode(ENA, OUTPUT);                                                       // frein du moteur >> relaché à l'état haut<< mode automatique à l'état bas>>
    pinMode(buz, OUTPUT);                                                       // Buzzer en sortie 10 s'appel buz

    digitalWrite(buz, LOW);                                                     // broche 10 buzzer
    digitalWrite(switch, HIGH);                                                 // bouton sur OFF

    digitalWrite(vert, HIGH);                                                   // eteint LED vert
    digitalWrite(orange, HIGH);                                                 // allumer LED temoin orange fixe
    digitalWrite(rouge, HIGH);                                                  // eteint LED rouge    
    
    tone(buz, NOTE_DS6, 500);
    
    delay(500);                                                                 // 1 seconde
    
    
    digitalWrite(vert, LOW);                                                    // eteint LED vert
    digitalWrite(rouge, LOW);                                                   // eteint LED rouge
    digitalWrite(orange, LOW);                                                  // allumer LED temoin orange fixe


    previousTimers[TIMER_LCD_toggle] = micros();                                // initialiser les valeurs à l'heure courante
    previousTimers[TIMER_LCD_avance] = micros();                                // initialiser les valeurs à l'heure courante
    previousTimers[TIMER_LCD_Origine] = micros();                               // initialiser les valeurs à l'heure courante
    previousTimers[TIMER_LED_ORANGE] = millis();                                // initialiser les valeurs à l'heure courante
    previousTimers[TIMER_LED_VERT] = millis();                                  // initialiser les valeurs à l'heure courante
    previousTimers[TIMER_LED_ROUGE] = micros();                                 // initialiser les valeurs à l'heure courante
    previousTimers[TIMER_MOTOR] = micros();                                     // initialiser les valeurs à l'heure courante
   
    TCCR1A = 0;                                                                 // configurer Timer1 pour utiliser l'OCR en mode CTC
    TCCR1B = (1 << WGM12) | (1 << CS11);
   
    OCR1A = potard;                                                             // configurer le registre de comparaison de sortie pour un certain nombre de pas

    TIMSK1 |= (1 << OCIE1A);                                                    // activer l'interruption associée à OCR1A

    delay(800);                                                                 // attend un peu

    sei();                                                                      // activer les interruptions globales
}

void loop(){

    //Origine
    if(stat_switch == false && Nombres_de_pas == 0 && sens == false){

        while(!initialisation) {
        digitalWrite(orange, LOW);                                               // eteint LED orange
        digitalWrite(vert, LOW);                                                 // eteint LED vert
        digitalWrite(ENA, HIGH);                                                 // moteur libre
        digitalWrite(rouge, HIGH);                                               // allumer une LED rouge  
        tone(buz, NOTE_CS6, 80);                                                 // note de musique
        delay(100);                                                              // attend un peu
        tone(buz, NOTE_DS6, 80);                                                 // note de musique
        delay(100);                                                              // attend un peu
        tone(buz, NOTE_DS6, 160);                                                // note de musique
        Signal_PWM = false;                                                       //ordre d'arret du moteur
        initialisation = true;                                                   // Ne recommence pas
        delay(250);                                                              // attend un peu
        digitalWrite(rouge, LOW);                                                // eteint une LED rouge        
        }

         if (micros() - previousTimers[TIMER_LCD_Origine] >= 250006) {
          // effectuer une action toute les 250ms appel void LCD_Origine()
           previousTimers[TIMER_LCD_Origine] = micros();                         //mise à jour avec la valeur actuelle de millis()
             
          LCD_Origine();                                                         //appel void LCD_Origine()
         }
          // gère la mise à jour de l'intensité de la LED rouge pour créer un effet de clignotement.
        if(micros() - previousTimers[TIMER_LED_ROUGE] > 10014){
          //                                                                     //
            analogWrite(rouge, i);                                               // régler l'intensité de la LED rouge en fonction de la valeur de la variable i
            i = i + i_sens;                                                      //incrémente ou décrémente la valeur de i en fonction de la valeur de i_sens 
            if(i>=255){
              i_sens = -1;                                                       //est -1 pour diminuer l'intensité de la LED rouge.
            }
            if(i<=0){
              i_sens = 1;                                                        //est 1 augmenter l'intensité de la LED rouge.
            }
          previousTimers[TIMER_LED_ROUGE] = micros();                            //
        }

      }

    //gère l'""avance"" du moteur vérifit l'état du bouton ou si le nombre maximum de pas a été atteint, et met à jour l'affichage LCD.
    while (Nombres_de_pas < Nombres_de_pas_max && stat_switch == true && sens == false){

        while(dir_init == false){
         digitalWrite(dir, LOW);                      // Tache sens de rotation
         digitalWrite(vert, HIGH);                    // allumer LED temoin vert fix
         digitalWrite(orange, LOW);                   // eteindre une LED orange
         digitalWrite(rouge, LOW);                    // eteindre une LED rouge
         lcd.clear();                                 // on efface tout
         lcd.home();                                  // retour à la ligne
         lcd.print(""Programme"");                      // affichage LCD ligne 1 ""programme principale""
         lcd.setCursor(1, 1);                         // 
         lcd.print(Nombres_de_pas);                   // 
         digitalWrite(ENA, LOW);                      // moteur sous tention
         dir_init = true;
        }
       

         if (micros() - previousTimers[TIMER_LCD_avance] >= 177797) {
          // effectuer une action pour le LCD et pour la moteur en marche avant
           previousTimers[TIMER_LCD_avance] = micros();                         //mise à jour avec la valeur actuelle de millis()
             
          LCD_avance();                                                         //appel void LCD_avance()
         }

        // Vérifier si l'utilisateur a appuyé sur le bouton
        if(digitalRead(switch) == LOW) {
         stat_switch = false;                                                   // mise à jour de l'état du bouton
         //                                                                     // Signal_PWM fin de la tache avance
          digitalWrite(vert, LOW);                                              // éteindre la LED verte.
          lcd.clear();                                                          // on efface tout
          lcd.home();                                                           // retour à la ligne       
          lcd.print(""toggle"");                                                  //
          sens = true;                                                          //changement du sens de rotation
          Signal_PWM = false;                                                    //ordre d'arret du moteur
        }
        //                                                                      //
        //Signal_PWM de fin de la tâche d'avance: si le nombre de pas dépasse le nombre maximum de pas défini, mettre fin à la tâche d'avance
        else if(Nombres_de_pas >= Nombres_de_pas_max) {
          digitalWrite(vert, LOW);                                              //
          lcd.clear();                                                          // on efface tout
          lcd.home();                                                           // retour à la ligne
          lcd.print(""toggle"");                                                  //
          sens = true;                                                          //changement du sens de rotation
          Signal_PWM = false;                                                    //ordre d'arret du moteur
        }
    }
    // toggle gère l'initialisation de la direction du moteur, l'affichage sur l'écran LCD, la mise à jour du nombre de pas, 
    // vérification de la position du moteur et l'état des LED vertes ou oranges en fonction de l'état du bouton.
    if( sens == true && Nombres_de_pas > 0){
            
        if (dir_init == true) {                                                 // Initialisation de la direction du moteur en marche arrière
         digitalWrite(dir, HIGH);                                                //
         digitalWrite(rouge, LOW);                                               //
         digitalWrite(ENA, LOW);                                                 // Mise sous tension du moteur pour la marche arrière
         dir_init = false;                                                       // Mise à jour de la variable dir_init 
         lcd.clear();                                                            // pour indiquer que la direction du moteur a été initialisée.
         lcd.home();                                                             // retour à la ligne
         lcd.print(""toggle"");                                                    // Mise à jour de l'affichage LCD pour afficher ""toggle""
         lcd.setCursor(1, 1);                                                    //
         lcd.print(Nombres_de_pas);                                              // Mise à jour du nombre de pas restant
        }

        if (micros() - previousTimers[TIMER_LCD_toggle] >= 298820) {           //
          // effectuer une action pour la LCD_toggle                            //
          previousTimers[TIMER_LCD_toggle] = micros();                         //mise à jour avec la valeur actuelle de millis()
          //                                                                   //
          LCD_toggle();                                                        // appel void LCD_toggle
        }
        
        else if (micros() - previousTimers[TIMER_MOTOR] >= 3347) {             //
         // effectuer une action pour le moteur en marche arrière toggle        //
         previousTimers[TIMER_MOTOR] = micros();                                //mise à jour avec la valeur actuelle de micros()
         //                                                                     //
         toggle (pul);                                                          //fait tourner le moteur en vitesse rapide
         Nombres_de_pas--;                                                      //Met à jour le positionnement du moteur      
        }

      // fin de la tache recule et arrêt des LEDs orange et verte lorsque le nombre de pas atteint 0.  
      if(Nombres_de_pas == 0) {                                               //
        sens = false;                                                          //
        initialisation = false;                                                //
        digitalWrite(orange, LOW);                                              //
        digitalWrite(vert, LOW);                                                //
     }
    
      if (stat_switch == true) {                                              //
        digitalWrite(orange, LOW);                                              //
        millis();                                                               //

        if (millis() - previousTimers[TIMER_LED_VERT] >= interval) {            //
         // effectuer une action pour la LED vert                               //
         previousTimers[TIMER_LED_VERT] = millis();                             //mise à jour avec la valeur actuelle de millis()
         //                                                                     //
          toggle(vert);                                                         //
        }
     }
     else {
        digitalWrite(vert, LOW);                                                //
        millis();                                                               //
         //                                                                     //
         if (millis() - previousTimers[TIMER_LED_ORANGE] >= interval) {         //
          // effectuer une action pour la LED orange                            //
           previousTimers[TIMER_LED_ORANGE] = millis();                         //mise à jour avec la valeur actuelle de millis()
          //                                                                    //
           toggle(orange);                                                      //
         }
     }
    }
     
}"
tT1wAMsh,suche,studioart,PHP,Thursday 22nd of June 2023 06:55:50 AM CDT,"<?php
if( ! defined( 'ABSPATH' ) ) {  exit;  }    // Exit if accessed directly

global $avia_config;


// check if we got posts to display:
if( have_posts() )
{
	$first = true;

	$counterclass = '';
	$post_loop_count = 1;
	$page = ( get_query_var('paged') ) ? get_query_var('paged') : 1;
	if( $page > 1 )
	{
		$post_loop_count = ( (int)( $page - 1 ) * (int) get_query_var( 'posts_per_page' ) ) + 1;
	}

	$blog_style = avia_get_option( 'blog_style', 'multi-big' );

	while( have_posts() )
	{
		the_post();

		$the_id = get_the_ID();
		$parity = $post_loop_count % 2 ? 'odd' : 'even';
		$last = count( $wp_query->posts ) == $post_loop_count ? ' post-entry-last ' : '';
		$post_class = ""post-entry-{$the_id} post-loop-{$post_loop_count} post-parity-{$parity} {$last} {$blog_style}"";
		$post_format = get_post_format() ? get_post_format() : 'standard';

	?>
		<article <?php post_class( ""post-entry post-entry-type-{$post_format} {$post_class} "" ); avia_markup_helper( array( 'context' => 'entry' ) ); ?>>
			<div class=""entry-content-wrapper clearfix <?php echo $post_format; ?>-content"">
				<header class=""entry-content-header"">
<?php
				//	echo ""<span class='search-result-counter {$counterclass}'>{$post_loop_count}</span>"";
				$placeholder = ""<img src='https://inafineart.de/wp-content/uploads/2023/06/defaultsearchimage.jpg' />"";
				$searchthumb = get_the_post_thumbnail( $post_id, $size='bch_searchthumb', $attr );
				$searchthumb = $searchthumb ? $searchthumb : $placeholder;
                echo ""<span class='search-result-counter {$counterclass}'>{$searchthumb}</span>"";																																	 

					$default_heading = 'h2';
					$args = array(
								'heading'		=> $default_heading,
								'extra_class'	=> ''
							);

					/**
					 * @since 4.5.5
					 * @return array
					 */
					$args = apply_filters( 'avf_customize_heading_settings', $args, 'loop_search', array() );

					$heading = ! empty( $args['heading'] ) ? $args['heading'] : $default_heading;
					$css = ! empty( $args['extra_class'] ) ? $args['extra_class'] : '';

					//echo the post title
					$markup = avia_markup_helper(array('context' => 'entry_title','echo'=>false));

					echo ""<{$heading} class='post-title entry-title {$css}'><a title='"" . the_title_attribute( 'echo=0' ) . ""' href='"" . get_permalink() . ""' {$markup}>"" . get_the_title() . ""</a></{$heading}>"";

					echo '<span class=""post-meta-infos"">';

						$meta_info = array();

						/**
						 * @since 4.8.8
						 * @param string $hide_meta_only
						 * @param string $context
						 * @return string
						 */
						$meta_seperator = apply_filters( 'avf_post_metadata_seperator', '<span class=""text-sep"">/</span>', 'loop-search' );

						if( 'blog-meta-date' == avia_get_option( 'blog-meta-date' ) )
						{
							$meta_time  = '<time class=""date-container minor-meta updated"" ' . avia_markup_helper( array( 'context' => 'entry_time', 'echo' => false ) ) . '>';
							$meta_time .=		get_the_time( get_option( 'date_format' ) );
							$meta_time .= '</time>';

							$meta_info['date'] = $meta_time;
						}

						if( get_post_type() !== 'page' && 'blog-meta-comments' == avia_get_option( 'blog-meta-comments' ) )
						{
							if( get_comments_number() != '0' || comments_open() )
							{
								$meta_comment = '<span class=""comment-container minor-meta"">';

								ob_start();
								comments_popup_link(
												""0 "" . __( 'Comments', 'avia_framework' ),
												""1 "" . __( 'Comment' , 'avia_framework' ),
												""% "" . __( 'Comments', 'avia_framework' ),
												'comments-link',
												__( 'Comments Disabled', 'avia_framework' )
											);

								$meta_comment .= ob_get_clean();
								$meta_comment .= '</span>';

								$meta_info['comment'] = $meta_comment;
							}
						}

						$taxonomies  = get_object_taxonomies(get_post_type($the_id));
						$cats = '';

						$excluded_taxonomies = array_merge( get_taxonomies( array( 'public' => false ) ), array( 'post_tag', 'post_format' ) );

						/**
						 *
						 * @since ????
						 * @since 4.8.8						added $context
						 * @param array $excluded_taxonomies
						 * @param string $post_type
						 * @param int $the_id
						 * @param string $context
						 * @return array
						 */
						$excluded_taxonomies = apply_filters( 'avf_exclude_taxonomies', $excluded_taxonomies, get_post_type( $the_id ), $the_id, 'loop-search' );

						if( ! empty( $taxonomies ) )
						{
							foreach( $taxonomies as $taxonomy )
							{
								if( ! in_array( $taxonomy, $excluded_taxonomies ) )
								{
									$cats .= get_the_term_list( $the_id, $taxonomy, '', ', ','' ) . ' ';
								}
							}
						}

						if( 'blog-meta-category' == avia_get_option( 'blog-meta-category' ) )
						{
							if( ! empty( $cats ) )
							{
								$meta_cats  = '<span class=""blog-categories minor-meta"">' . __( 'Kategorie: ', 'avia_framework') . ' ';
								$meta_cats .=	trim( $cats );
								$meta_cats .= '</span>';

								$meta_info['categories'] = $meta_cats;
							}
						}

						/**
						 * Allow to change theme options setting for certain posts
						 *
						 * @since 4.8.8
						 * @param boolean $show_author_meta
						 * @param string $context
						 * @return boolean
						 */
						if( true === apply_filters( 'avf_show_author_meta', 'blog-meta-author' == avia_get_option( 'blog-meta-author' ), 'loop-search' ) )
						{
							$meta_author  = '<span class=""blog-author minor-meta"">' . __( 'by', 'avia_framework' ) . ' ';
							$meta_author .=		'<span class=""entry-author-link"" ' . avia_markup_helper( array( 'context' => 'author_name', 'echo' => false ) ) . '>';
							$meta_author .=			'<span class=""author"">';
							$meta_author .=				'<span class=""fn"">';
							$meta_author .=					get_the_author_posts_link();
							$meta_author .=				'</span>';
							$meta_author .=			'</span>';
							$meta_author .=		'</span>';
							$meta_author .= '</span>';

							$meta_info['author'] = $meta_author;
						}

						/**
						 * Modify the post metadata array
						 *
						 * @since 4.8.8
						 * @param array $meta_info
						 * @param string $context
						 * @return array
						 */
						$meta_info = apply_filters( 'avf_post_metadata_array', $meta_info, 'loop-search' );

						echo implode( $meta_seperator, $meta_info );

					echo '</span>';
				echo '</header>';

				echo '<div class=""entry-content"" ' . avia_markup_helper( array( 'context' => 'entry_content','echo' => false ) ) . '>';

					$excerpt = trim( get_the_excerpt() );
					if( ! empty( $excerpt ) )
					{
						the_excerpt();
					//	echo '<div class=""read-more-link""><a href=""'.get_permalink().'"" class=""more-link"">'.__('Read more','avia_framework').'<span class=""more-link-arrow"">  &rarr;</span></a></div>';
					}
					else
					{
						$excerpt = strip_shortcodes( get_the_content() );
						$excerpt = apply_filters( 'the_excerpt', $excerpt );
						$excerpt = str_replace( ']]>', ']]&gt;', $excerpt );
						echo $excerpt;
					//	echo '<div class=""read-more-link""><a href=""'.get_permalink().'"" class=""more-link"">'.__('Read more','avia_framework').'<span class=""more-link-arrow"">  &rarr;</span></a></div>';
					}

				echo '</div>';
			echo '</div>';

			echo '<footer class=""entry-footer""></footer>';

			do_action('ava_after_content', $the_id, 'loop-search' );

		echo '</article><!--end post-entry-->';

		$first = false;
		$post_loop_count++;

		if( $post_loop_count >= 100 )
		{
			$counterclass = 'nowidth';
		}
	}
}
else
{
?>
	<article class=""entry entry-content-wrapper clearfix"" id='search-fail'>
		<p class=""entry-content"" <?php avia_markup_helper( array( 'context' => 'entry_content' ) ); ?>>
			<strong><?php _e('Nothing Found', 'avia_framework'); ?></strong><br/>
<?php
				_e( 'Sorry, no posts matched your criteria. Please try another search', 'avia_framework' );
?>
		</p>
		<div class='hr_invisible'></div>
		<section class=""search_not_found"">
			<p><?php _e( 'You might want to consider some of our suggestions to get better results:', 'avia_framework' ); ?></p>
			<ul>
				<li><?php _e( 'Check your spelling.', 'avia_framework' ); ?></li>
				<li><?php _e( 'Try a similar keyword, for example: tablet instead of laptop.', 'avia_framework' ); ?></li>
				<li><?php _e( 'Try using more than one keyword.', 'avia_framework' ); ?></li>
			</ul>
<?php
		/**
		 * Additional output when nothing found in search
		 *
		 * @since 4.1.2
		 * @added_by günter
		 * @return string			cutom HTML escaped for echo | ''
		 */
		$custom_no_earch_result = apply_filters( 'avf_search_results_pagecontent', '' );
		echo $custom_no_earch_result;


		echo '</section>';
	echo '</article>';

}

echo avia_pagination( '', 'nav' );

"
X8psMfEq,Sieve,kazi_omar,C++,Thursday 22nd of June 2023 06:53:23 AM CDT,"#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define scl(n) scanf(""%lld"", &n)
#define pcl(n) printf(""%lld\n"", n)
#define pcl1(n) printf(""%lld "", n)
#define nln printf(""\n"")
#define yes printf(""YES\n"")
#define no printf(""NO\n"")
#define dev(x) cout << #x << "" "" << x << "" "";
#define PTT pair<ll, ll>
map<ll, ll> mp, mp1;
map<ll, ll>::iterator itr;

#define M 1000000
bool marked[M];
vector<ll> primeVector;

bool isPrime(int n)
{
    if (n < 2)
        return false;
    if (n == 2)
        return true;
    if (n % 2 == 0)
        return false;
    return marked[n] == false;
}

void sieve()
{
    primeVector.push_back(2);
    for (ll i = 3; i * i <= M; i += 2)
    {
        if (marked[i] == false)
        { // i is a prime
            primeVector.push_back(i);
            for (ll j = i * i; j <= M; j += i + i)
            {
                marked[j] = true;
            }
        }
    }
}

int main()
{
    sieve();
    for (int i = 0; i < primeVector.size(); i++)
    {
        cout << primeVector[i] << "" "";
    }
    cout << isPrime(200) << endl;
}"
eaZb7VJg,prova,Tommy12345678,YAML,Thursday 22nd of June 2023 06:34:34 AM CDT,"type: custom:banner-card
style: |
  :host {
    --banner-card-heading-size: 0.9em;
  }
  ha-card {background: transparent; border-style: none; border: 0px; box-shadow: none;}
heading: ""PROVA""
row_size: 1
entities:"
nrN6d928,Stargate Model Testbed,creamygoat,Python,Thursday 22nd of June 2023 06:31:33 AM CDT,"#!/usr/bin/env python3

""""""Stargate Model Testbed

This program animates a minimalistic abstract model of a Pegasus
stargate (with Milky Way gate emulation) to be incorporated into
a microcontroller.

---
Stargate Model Testbed
Version: 1.0.0.0
(c) Copyright 2023, Daniel Neville (creamygoat@gmail.com)

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program. If not, see <https://www.gnu.org/licenses/>.
---

The animation of the stargate by this program is not necessarily
a faithful representation of the appearance of the stargate. Rather,
the animation is to prove that the compact model contains enough
information at any given moment for a sound generator and a renderer
or LED driver to fully represent the state of an animating stargate.

Proposed Input Control Lines (or commands via serial):
  Incoming
  Open
  Close
  Style (2)
  Sequence (4)
  Colour (2)
  Delay (analogue, represents sound propagation delay correction)
  Serial (for programming constellation and chevron sequences)

Output Control Lines (for external audio and visual devices):
  Speed (Fast PWM)
  Rotating
  Lurch (if acceleration used)
  Click
  Clack (if Milky Way emulation used)
  Opened
  Clunk (all chevrons reset)

Control lines will need to be robustly protected from ESD,
grounding issues and wire self-inductance. (Just an 8m pice
of wire can destroy a microcontroller.) An ideal second
control interface would be a second microcontroller with an
Ethernet adaptor, since network interfaces are galvanically
isolated and well protected.

""""""

import os
import pygame as pg
import copy
import numpy as np
import numpy.linalg as la
from enum import IntEnum
from enum import auto

help_msg = """"""
Stargate Model Testbed

[ESC], [Q] Quit
[P] Power
[X] Cut power
[O] Dial out
[I] Incoming
[C] Close
[S] Select stargate style
[H] HUD on/off
""""""

def sqrt_int32(x):
  """"""Return floor of the square root of a 32-bit integer.""""""
  x1 = x
  c = 0
  d = 1 << (32 - 2) # Second-to-top bit set
  while d > x:
    d >>= 2
  while d:
    if x1 >= c + d:
      x1 -= c + d
      c = (c >> 1) + d
    else:
      c >>= 1
    d >>= 2
  return c


def chevron_pos(n):
  """"""Return a zero-based chevron position index given a chevron number.

  The chevron numbers might not be standard. Here, Chevron 7 is at
  the top, where the click-clacking indexer is on the Milky Way gates.
  Chevrons 8 and 9 are at the lower right and left respectively. The
  remaining chevrons are arranged clockwise right from the 1 o'clock
  position (on a nine-hour clock face).

         7
    6         1

  5   Chevron   2
      Numbers
   4           3
  - - - - - - - -
      9     8

  Chevron position indices run clockwise starting at zero from the top.

         0
    8         1
      Chevron
  7   Position  2
      Indices
   6           3
  - - - - - - - -
      5     4
  """"""
  x = n
  if x < 7:
    if x == 0:
      x = -1
    elif x >= 4:
      x += 2
  else:
    if x == 7:
      x = 0
    elif x < 10:
      x -= 4
    else:
      x = -1
  return x


# The Milky Way emulation features a rotating ring patterned
# with slight colour variations to show rotation.

def build_mw_ring_colours():
  contour = ""999865365122474210011324467522335678""
  contour = contour[:36]
  contour += ""0"" * (36 - len(contour))
  x = 0.3 + 0.6 * np.array([(ord(c) - ord(""0"")) / 9.0 for c in contour])
  x = np.array(np.rint(255 * x))
  result = np.hstack([x, x, x])
  return result


def ring_colour_at(angle, mw_ring_colours):
  """"""Return an interpolated colour at a 24-bit angle on the ring.

  This interpolation is used in Milky Way stargate emulation mode in
  order to vaguely show a rotating ring on a gate built as a Pegasus
  stargate.

  The angle ranges from 0x000000 to 0x900000. Interpreted as a 6.18
  fixed-point binary format, the (absolute) angle represents the
  number of constellation sectors clockwise from top dead centre.
  """"""
  a = angle
  while a < 0:
    a += 0x900000
  while a >= 0x900000:
    a -= 0x900000
  s0 = a >> 18
  s1 = s0 + 1
  if s1 >= 36: s1 = 0
  f = (a & 0x03FFFF) / 0x040000
  col0 = np.array(mw_ring_colours[s0])
  col1 = np.array(mw_ring_colours[s1])
  col = np.rint(col0 + f * (col1 - col0))
  col = np.maximum([0, 0, 0], np.minimum([255, 255, 255], col))
  col = np.array(col, dtype=np.uint8)
  return col


class SgStyle (IntEnum):
  """"""Stargate style integer enum

  Two styles, Pegasus and Milky Way are base styles with accurate
  timings. Other styles are modifications of the base styles.

  A Pegasus stargate, such as the one on Atlantis is blue (sometimes
  sea-foam green) chevrons and a fixed ring of thirty-six constellation
  displays. During dialling, each constellation to be dialled roams from
  chevron to chevron, settling at the target chevron before spawning the
  next constellation. (The first constellation starts at the 1 o'clock
  position and propagates anticlockwise.) There is no indexer chevron
  but the top chevron, as with the Milky Way gate is always the last to
  be ""locked"" (illuminated) and is associated with the home constellation
  (which is unique to each stargate and has no addressing function, but
  is presumably used to ready the stargate's ring by bring it to the
  home position (at angle zero).

  The Milky Way stargate has red-orange chevrons and an alternating
  rotating ring of thirty-nine constellations and a moving click-clacking
  indexing chevron at the top which also functions as the last chevron to
  accept a constellation, which must always be the ""home"" constellation
  (which is unique to each stargate and only meaningfully represents the
  home angle position on the ring). During dialling, each selected
  constellation is brought to the indexing chevron, which briefly opens
  with a click, illuminates in synch with another chevron being locked,
  closes with a clack and (if not the final chevron), extinguishes. The
  lower chevron frame is distinct by both its movement and its four bright
  hot spots illuminating its chevron frame. The Milky Way emulation mode
  used in this model designed for a Pegasus theatre prop, uses only
  thirty-six constellations.
  """"""
  Pegasus = 0
  MilkyWay = 1
  Pegasus_Accel = 2
  MilkyWay_Fast = 3
  Pegasus_Fast = 4


class SgState (IntEnum):
  """"""Major state number of the stargate finite state machine""""""
  Off = 0
  Idle = 1
  PreDial = 2
  Dialling = 3
  Misdialled = 4
  FinalChevron = 5
  AlignForIncoming = 6
  Incoming = 7
  Opening = 8
  Open = 9
  Closing = 10
  Dimming = 11
  Resetting = 12


class StargateParam():

  """"""Stargate configuration parameters

  The parameters are constant for any given style and are intended
  to be shared by StargateState instances of any given style.

  Fields

  dial_sequence = array[0..8] of 0..35
    For an emulated Milky Way gate the ring is rotated to the
    constellation sectors numbered clockwise from 0 at the home
    symbol. (This means that when constellation 3 is selected,
    say, the ring is rotated 3 sectors anticlockwise from TDC
    to an absolute angle of 33 sectors.) A proper Milky Way
    gate, not emulated here, has 39 constellation sectors.
    A Pegasus gate is supposed to have the ability to display
    any given constellation at any desired sector during the
    dialling sequence. For a prop which has constellation LEDs
    in fixed positions, the dial_sequence field has no meaning,
    since the roving constellation cursor is only able to light
    some or all of the LEDs actually present.

  lock_sequence: array[0..8] of 0..9
    The lock sequence is an array of chevron numbers (1..9)
    terminated by a zero or the array length. The sequence
    determines the order in which the chevrons are locked.
    Usually the sequence is
      [1, 2, 3, 4, 5, 6, 7],
      [1, 2, 3, 4, 5, 6, 8, 7] or
      [1, 2, 3, 4, 5, 6, 8, 9, 7].
    Non-standard ordering are permitted. This may be useful
    for a theatre prop lacking distinguishability between
    addresses. Short sequences are permitted. If me_emulation
    is True, the last chevron should be chevron number 7
    (or whichever chevron is at chevron position zero, at TDC)
    in order for the indexing chevron to animate properly.

  num_good_chevrons: 0..9
    A misdial can be induced by setting num_good_chevrons less
    than the length of the lock sequence before (which may be
    shortened with a zero entry). The ""bad"" chevron is indicated
    by a failure to light the chevron or activate the indexer,
    a pause, then the release of all previously locked chevrons.

  style:
    An enum for the kind and variant of stargate. The style is set
    by a call to set_canonical_style or set_style as the function
    sets the parameters accordingly, but is not used by the finite
    state machine. It is a convenience field for use by the main
    function and the renderer.

  base_style:
    An enum for the kind of stargate. Base styles allow the user
    to create many style variations that are modifications of base
    styles so only the modified parameters need be coded by the user.
    Just as with the style field, base_style is not used by the
    finite state machine. It is a convenience field for use by the
    main function and the renderer.

  mw_emulation: Boolean
    Enables Milky Way Emulation mode, which models the mechanical
    indexing chevron and the rotating ring.

  min_sweep: 0..7 (3 bits)
    If the calculated sector sweep is less than the number of
    equivalent chevron-to-chevron spans, 36 sectors is added.
    Aside from the speed-dependent rumbling sound, a Milky Way
    stargate whines as it accelerates and makes a little clunk
    sound when acceleration is complete. Permitting short sweeps
    can yield shorter dialling times though the sound effects
    generator would be required to handle variable acceleration
    durations and adjust the length of the whine sound and the
    timing of the ring clunk sound appropriately. The limit of
    7 implies a minimum sweep can be at most 28 sectors, so a
    sweep from any chevron to any other chevron will be at most
    7 + 8 = 15 chevrons (60 sectors) and a ring sweep from any
    sector to any other sector will be at most 28 + 35 = 63
    sectors, which fits nicely with the 6.22 fixed point binary
    angle format used for absolute and (unsigned) relative angles.

  alternating: Boolean
    Force the ring or constellation seeking to change direction
    after each chevron is locked, rather than allowing the
    shortest sweep (which still satisfies min_sweep) to determine
    the sweep direction.

  clockwise_start: Boolean
    Set True if the direction of rotation of the ring (Milky
    Way gate) or roving constellation (Pegasus gate) when the
    stargate begins dialling. (The starting direction cannot
    be changed for an incoming wormhole.)

  skip_lit_sectors: Boolean
    For Pegasus gates in Constant Angular Velocity (CAV) mode,
    as indicated with acceleration = 0, there is an option to
    have the roving constellation cursor cross a lit sector
    (at a locked chevron) in half the usual time and thus
    suppress the optical illusion of stalling.

  align_for_incoming: Boolean
    Set True if a Milky Way gate should align the ring to the
    home position before spinning for an incoming wormhole.
    If the ring then rotates exactly 360 degrees and rests at
    the home position, the indexer will activate on a sensible
    constellation sector.

  start_sector_fixed: Boolean
    Instantly position the ring or roving constellation when
    activating the stargate. This is standard behaviour for
    a Pegasus gate only.

  start_sector: uint (>= 6 bits)
    The starting sector of the ring or constellation, if the
    start_sector_fixed flag is set. Otherwise the ring or
    cursor is left as it was after the previous operation.

  max_speed: uint (16 bits)
    The upper limit of the speed in units of 1/(2^18) sectors
    per millisecond. Because the kinematic maths used in this
    model only permits multiples of perfect squares of
    intervals in milliseconds, the top speed reached may be
    slighlty less than max_speed. This is to easily allow
    perfectly deterministic timings despite variable time
    increments being supplied to multiple StargateState
    instances while using integer arithmetic suitable for
    microcontrollers.

  incoming_speed: uint (16 bits)
    Incoming wormholes are indicated with a slow and steady
    anticlockwise rotation of the ring on Milky Way gates and
    with a sort of circular progress gauge (made of brightly
    lit constellation sectors) on Pegasus gates. Because
    the incoming animation is implemented here using the
    sector-to-sector sweep code and uses a 16-bit time value
    as for animation progress, it is important to not to set
    the speed so low that the required time is unable to fit
    in the progress field, which is good for about 65 seconds.

  incoming_sweep: uint (>= 6 bits)
    In the Milky Way emulation mode, the constellation ring
    spins steadily anticlockwise with no particular regard to
    the chevrons locking in a clockwise pattern. The required
    sweep angle in sectors (max 63) is set here.

  incoming_chev_delay: 0..255 (0..4080ms in 16ms steps)
    In the Milky Way emulation mode, this is the time it takes
    for the first chevron to begin locking during an incoming
    wormhole sequence.

  incoming_chev_period: 0..255 (0..4080ms in 16ms steps)
    In the Milky Way emulation mode, this is the interval
    between the start of  locking of successive time it takes
    for the first chevron to begin locking during an incoming
    wormhole sequence.

  acceleration: 0, 1..31 (>= 5 bits)
    The acceleration of the ring or the roving constellation
    is in lowest significant bit units of a 6.22 fixed point
    binary sector angle per millisecond squared. Zero is a
    special case of instant acceleration (constant velocity).

  dwell_time: 0..255 (0..4080ms in 16ms steps)
    The dwell time is the time between sweeps. The dweel time
    is independent of the chevron locking time, so a new sweep
    may commence even before a chevron has finished locking.

  abort_dwell_time: 0..255 (0..4080ms in 16ms steps)
    In the case of a misdial, there will be a pause between
    the dialled constellation being indicated (but with an
    inactive chevron) and the locked chevrons all being
    released (with a heavy clunk or thump sound).
    This value is also used for the dwell at the end of an
    alignment operation on a Milky Way gate.

  chev_locking_time: 0..255 (0..4080ms in 16ms steps)
    The total chevron locking time is used mainly by the finite
    state machine. The detailed start times and time intervals
    below are used by the renderer. The fall times for the
    output control lines CLICK and CLACK are set by this value.

  chev_click_start_time: 0..255 (0..4080ms in 16ms steps)
    This value represents the time between the dialling sweep
    stopping and when the mechanical indexing chevron's frame
    and wedge begins to separate, on Milky Way gates. Though
    the motion of the indexing chevron is not modelled here,
    the chevron should take from 282 and 333ms to fully open.
    From chev_click_start_time to chev_locking_time, The control
    line CLICK will be active. Pegasus-style gates output the
    CLICK signal to cue the dull thump sound for a chevron
    locking.

  chev_clack_start_time: 0..255 (0..4080ms in 16ms steps)
    This value represents the time between the dialling sweep
    stopping and the when the mechanical indexing chevron's
    frame and wedge begins to snap closed. This value should
    be greater than or equal to chev_click_start_time. From
    chev_clack_start_time to chev_locking_time, The control
    line CLACK will be active (only if mw_emulation is True).

  chev_warm_start_time: 0..255 (0..4080ms in 16ms steps)
    This value represents the time between the dialling
    sweep stopping and a newly ""locked"" chevron beginning
    to illuminate. (On a Milky Way gate, the indexing chevron
    lights at the same time as the selected chevron.)

  chev_warm_time: 0..255 (0..4080ms in 16ms steps)
    This is the time it takes for a chevron (frame and wedge
    lamps) to illuminate.

  chev_fade_start_time: 0..255 (0..4080ms in 16ms steps)
    This value represents the time between the dialling sweep
    stopping and the indexing chevron beginning to fade for
    a Milky Way gate locking a non-final chevron.

  chev_fade_time: 0..255 (0..4080ms in 16ms steps)
    This is the time it takes for a chevron (frame and wedge
    lamps) to fade to its idle colour.

  opening_time: 0..255 (0..4080ms in 16ms steps)
    During the opening phase the constellations between the
    lit constellations at their respective chevrons (on a
    Pegasus gate) brighten until the constellation ring is
    uniformly lit. (This avoids the naff appearance of only
    seven lit constellations on a ring on a stargate which
    is sometimes fully shown, as when floating in space.)

  closing_time: 0..255 (0..4080ms in 16ms steps)
    There is a brief pause between a signal to close the
    portal and the chevron lamps beginning to extinguish.
    The actual closing visual effects, signalled by the
    OPENED control line going to the inactive state, may
    last longer.
  """"""

  def set_canonical_style(self, style):
    """"""Set timings and behaviour according to standard style.

    The canonical or ""base"" styles should not be modified
    willy-nilly. The timings are calculated from frame-by-frame
    analysis of stargate activation sequences found on YouTube.

    See the set_style method.
    """"""
    self.style = style
    if style == SgStyle.MilkyWay:
      self.base_style = SgStyle.MilkyWay
      self.mw_emulation = True
      self.min_sweep = 4  # May be 0 to 7 chevrons
      self.alternating = True
      self.clockwise_start = True
      self.skip_lit_sectors = False  # Pegasus CAV mode only
      self.align_for_incoming = True
      self.start_sector_fixed = False
      self.start_sector = 0
      self.max_speed = 0x900000 // (5000)
      self.incoming_speed = 0x900000 // (14000)
      self.incoming_sweep = 36  # Milky Way only
      self.incoming_chev_delay = (1900) >> 4  # Milky Way only
      self.incoming_chev_period = (1550) >> 4  # Milky Way only
      self.acceleration = 3
      self.dwell_time = (2917) >> 4
      self.abort_dwell_time = (750) >> 4
      self.chev_locking_time = (2083) >> 4
      self.chev_click_start_time = (583) >> 4
      self.chev_clack_start_time = (1500) >> 4  # Milky Way only
      self.chev_warm_start_time = (1000) >> 4
      self.chev_warm_time = (250) >> 4
      self.chev_fade_start_time = (1792) >> 4
      self.chev_fade_time = (292) >> 4
      self.opening_time = (1042) >> 4
      self.closing_time = (625) >> 4
    else:
      # Pegasus is the default.
      self.base_style = SgStyle.Pegasus
      self.mw_emulation = False
      self.min_sweep = 4  # May be 0 to 7 chevrons
      self.alternating = True
      self.clockwise_start = False
      self.skip_lit_sectors = True  # Pegasus CAV mode only
      self.align_for_incoming = False
      self.start_sector_fixed = True
      self.start_sector = 1
      self.max_speed = 0x900000 // 3000
      self.incoming_speed = 0x900000 // 5555
      self.incoming_sweep = 36  # Milky Way only
      self.acceleration = 0
      self.dwell_time = (250) >> 4
      self.abort_dwell_time = (500) >> 4
      self.chev_locking_time = (292) >> 4
      self.chev_click_start_time = (0) >> 4
      self.chev_clack_start_time = (999) >> 4 # Milky Way only
      self.chev_warm_start_time = (0) >> 4
      self.chev_warm_time = (292) >> 4
      self.chev_fade_start_time = (999) >> 4
      self.chev_fade_time = (292) >> 4
      self.opening_time = (1042) >> 4
      self.closing_time = (625) >> 4

  def set_style(self, style):
    """"""Set the parameters for a particular kind of stargate,

    Standard and non-standard stargate variants are selected
    here. Neither style nor base_style are used by the finite
    state machine. The base_style field is used by the renderer
    and the style field is provided for the convenience of the
    main funnction.
    """"""
    if style == SgStyle.MilkyWay:
      self.set_canonical_style(SgStyle.MilkyWay)
      # Append modifications here.
    elif style == SgStyle.MilkyWay_Fast:
      self.set_canonical_style(SgStyle.MilkyWay)
      self.min_sweep = 2  # May be 0 to 7 chevrons
      self.max_speed = 0x900000 // (2000)
      self.incoming_speed = 0x900000 // (8250)
      self.incoming_chev_delay = (750) >> 4  # Milky Way only
      self.incoming_chev_period = (950) >> 4  # Milky Way only
      self.acceleration = 10
      self.dwell_time = (800) >> 4
      self.abort_dwell_time = (750) >> 4
      self.chev_locking_time = (1200) >> 4
      self.chev_click_start_time = (125) >> 4
      self.chev_clack_start_time = (750) >> 4 # Milky Way only
      self.chev_warm_start_time = (417) >> 4
      self.chev_warm_time = (250) >> 4
      self.chev_fade_start_time = (950) >> 4
      self.chev_fade_time = (250) >> 4
      self.opening_time = (1042) >> 4
      self.closing_time = (625) >> 4
    elif style == SgStyle.Pegasus_Accel:
      self.set_canonical_style(SgStyle.Pegasus)
      self.max_speed = 0x900000 // 1500
      self.skip_lit_sectors = False  # Pegasus CAV mode only
      self.acceleration = 8
    elif style == SgStyle.Pegasus_Fast:
      self.set_canonical_style(SgStyle.Pegasus)
      self.min_sweep = 4  # May be 0 to 7 chevrons
      self.max_speed = 0x900000 // 2000
      self.incoming_speed = 0x900000 // (4500)
      self.skip_lit_sectors = True  # Pegasus CAV mode only
      self.acceleration = 0
    else:
      # Default
      self.set_canonical_style(SgStyle.Pegasus)
      # Append modifications here.
    self.style = style
    self.updated_computed_fields()

  def updated_computed_fields(self):
    """"""Update the computed parameters.

    At present, there is only lit_chev_progress_bump, which
    is used by the standard Pegasus to quickly pass over
    lit constellation sectors during dialling.
    """"""
    # For the Pegasus gate in Constant Angular Velocity mode,
    # there is an option to speed the roving constellation
    # cursor through a constellation sector lit by a ""locked""
    # chevron. This suppresses the optical illusion of the
    # cursor momentarily stalling when it passes a locked
    # chevron. Since the animation is controlled by a time
    # parameter ""progress"", it is convenient to store the
    # bump to be added to the progress field of StargateState
    # when a skip is required.
    skip_angle = 0x020000  # A half-sector skip is standard.
    skip_time = int(round(skip_angle / self.max_speed))
    self.lit_chev_progress_bump = min(255, skip_time)

  def __init__(self):
    """"""Create a new instance, setting parameters to a sensible default.

    See the class docstring for a detailed description of the fields
    with the command ""help(StargateParam)"" in a python3 shell.
    """"""
    self.dial_sequence = [16, 20, 8, 3, 11, 30, 0]
    self.lock_sequence = [1, 2, 3, 4, 5, 6, 7]
    self.num_good_chevrons = 9
    self.lit_chev_progress_bump = 0  # Computed, used only for Pegasus CAV
    self.set_style(SgStyle.Pegasus)


class StargateState():

  """"""Stargate finite state machine

  A StargateState instance is a compact and abstract representation
  of a stargate prop or animation, fit for a modest microcontroller.

  It is useful to have two instances on the one microcontroller,
  one for the visual effects and one to cue the sound effects via
  control lines (and perhaps from there, a serial or network
  interface.) To ensure proper synchronisation, have the video
  stargate state be an exact copy of the audio stargate state, set
  the (integer) progress field of the video state set to the
  required sound propagation delay time and set the open_req field
  on both.

  The operation of this stargate FSM is mainly controlled through the
  open_req field and the incoming field, along with the StargateParam
  object which should only be changed during the Idle and Off states.
  Though a single StargateState instance is tolerant of hamfisted
  operation of the open_req field, an ensemble of two or more
  instances will need to be more carefully coordinated to avoid
  one instacne stalling and being stuck in the incorrect state
  because it was not quite ready. The incoming field must only be
  changed while the stargate is idle (or off).

  Closing the portal on the stargate (by setting open_req to False) may
  introduce a very tiny timing error, but that will be washed away by
  time spent in the Idle or Off state or by use of the copy function
  in the python3 copy module.

  Important fields for control

  state: SgState enum
    Indicates the current major state of the finite state machine.

  incoming: Boolean
    Selects incoming mode rather than dial-out mode.

  open_req: Boolean
    Controls the opening and closing of the portal. When both open_req
    is True and the stargate is ready, either the dialling sequence or
    the incoming wormhole sequence is started. The user may set open_req
    False at any time. When the stargate is ready to close the wormhole
    or abort the dialling sequence, it will do so, then return to the
    Idle state.

  progress: 16-bit uint
    The time-based progress value may be manipulated in the Idle state
    to introduce a delay in a particular StargateState instance.

  """"""

  def __init__(self):
    self.state = SgState.Off
    self.dial_seq_ix = 0    # Number of chevrons locked
    self.ref_sector = 0     # Reference sector for which rel_angle = 0
    self.rel_angle = 0      # Unsigned 24 bit in 6.22 format
    self.speed = 0          # Current actual speed (16 bit)
    self.sector_sweep = 0   # Unsigned 0..63 span in constellation sectors
    self.chevs_passed = 0   # Number of chevrons passed during sweep
    self.incoming = False   # Select incoming or dial-out mode
    self.open_req = False   # Start the opening or closing sequences.
    self.reversing = False  # Anticlockwise when True
    self.sweeping = False   # Rumbling (MW) or power hum (Pegasus)
    self.lurching = False   # Motor whine-clunk for MW gates
    self.locking = False    # Chevron (and perhaps indexer) activating
    self.accepted = False   # Influences shutdown animation
    self.aborted = False    # Latches the inverted state of open_req
    self.logging = False    # Debugging: Usually set for just one instance
    self.progress = 0       # Main time-based animation parameter
    self.chev_progress = 0  # Concurrent chevron animation parameter
    self.shimmer_phase = 0  # Used subtle Pegasus chevron animation

  def log(self, message):
    """"""Log a message to the console, if the logging flag is set.

    When multiple instances of StargateState are used, it is
    helpful to enable logging for only one.
    """"""
    if self.logging:
      print(message)

  def integrate_progress(self, limit, delta_ms):
    """"""Have progress count up to a limit.

    Return a (rem_ms, finished) tuple where rem_ms is the number
    of milliseconds to spare in case the progress field reached the
    limit and finished is True iff the counting is complete.
    """"""
    t1 = self.progress + delta_ms
    if t1 >= limit:
      #self.locking = False
      self.progress = limit
      return t1 - limit, True
    else:
      self.progress = t1
      return 0, False

  def integrate_countdown(self, delta_ms):
    """"""Have progress count down and return unused delta time.""""""
    rem_ms = delta_ms
    if self.progress >= rem_ms:
      self.progress -= rem_ms
      rem_ms = 0
    else:
      rem_ms -= self.progress
      self.progress = 0
    return rem_ms

  def integrate_chev_progress(self, limit, delta_ms):
    """"""Have chev_progress count up to a limit.

    Return a (rem_ms, finished) tuple where rem_ms is the number
    of milliseconds to spare in case chev_progress reached the
    limit and finished is True iff the counting is complete.
    """"""
    t1 = self.chev_progress + delta_ms
    if t1 >= limit:
      #self.locking = False
      self.chev_progress = limit
      return t1 - limit, True
    else:
      self.chev_progress = t1
      return 0, False

  def integrate_chev_countdown(self, delta_ms):
    """"""Have chev_progress count down and return unused delta time.""""""
    rem_ms = delta_ms
    if self.chev_progress >= rem_ms:
      self.chev_progress -= rem_ms
      rem_ms = 0
    else:
      rem_ms -= self.chev_progress
      self.chev_progress = 0
    return rem_ms

  def update_sweep(self, sg_param):

    """"""Set the sector sweep according to next chevron in the sequence.

    For Pegasus gates, sweeps are from chevron to chevron. For Milky Way
    emulations, sweeps are from constellation to constellations.

    If the sector_sweep field is zero, there is nothing more to dial.
    """"""

    x = -1
    if self.dial_seq_ix < len(sg_param.lock_sequence):
      x = chevron_pos(sg_param.lock_sequence[self.dial_seq_ix])
    if x >= 0:
      if sg_param.mw_emulation:
        # Milky Way style of dialling, moving the ring until the
        # desired constellation sector is positioned under the
        # indexing chevron at the top.
        x = (x ^ 0x5) * 4 + 2  # Fallback
        if self.dial_seq_ix < len(sg_param.dial_sequence):
          x = sg_param.dial_sequence[self.dial_seq_ix] & 63
        if x >= 36: x -= 36
        # The constellation sectors are to be arranged in clockwise
        # order but the ring rotation angle is increasing clockwise.
        # Therefore, to bring sector n to the indexing chevron at the
        # top the ring needs to be rotated -n sectors from the home
        # position.
        dest_sector = 36 - x
        if dest_sector >= 36: dest_sector -= 36
      else:
        # Assume Pegasus style gate. The first desired constellation
        # appears just to the right of the top chevron and hunts for
        # the target chevron, where it and that chevron remains lit
        # while dialling (and the sweeping) continues from there.
        dest_sector = 4 * x

      sector_sweep = dest_sector - self.ref_sector
      if self.reversing: sector_sweep = -sector_sweep
      if sector_sweep <= 0: sector_sweep += 36
      alt_sweep = 36 - sector_sweep
      if alt_sweep == 0: alt_sweep = 36
      if sector_sweep < 4 * sg_param.min_sweep:
        sector_sweep += 36
      if alt_sweep < 4 * sg_param.min_sweep:
        alt_sweep += 36
      if not sg_param.alternating:
        if alt_sweep < sector_sweep:
          sector_sweep = alt_sweep
          self.reversing = not self.reversing
      self.sector_sweep = sector_sweep
    else:
      self.sector_sweep = 0

  def integrate_sweep(self, sg_param, delta_ms):

    """"""Animate the sector-to-sector sweep.

    When the sweep is complete, ref_sector will be moved
    to the destination sector and both rel_angle and progress
    will be zeroed.

    If the sweep is completed within delta_ms (the delta time
    in milliseconds), a non-zero remaining time is returned.
    """"""

    self.lurching = False
    if self.sector_sweep == 0 or not self.sweeping:
      return 0

    rem_ms = 0
    full_sweep = self.sector_sweep * 0x040000
    peak_speed = sg_param.max_speed
    if self.incoming and sg_param.incoming_speed < peak_speed:
      peak_speed = sg_param.incoming_speed

    if 1 <= sg_param.acceleration <= 31:
      # Acceleration applies

      ramp_time = peak_speed // sg_param.acceleration
      ramp_angle2 = (sg_param.acceleration * ramp_time * ramp_time)
      if ramp_angle2 >= full_sweep:
        # Limit the top speed for a short sweep.
        ramp_time = sqrt_int32(full_sweep // sg_param.acceleration)
        ramp_angle2 = (sg_param.acceleration * ramp_time * ramp_time)
      peak_speed = sg_param.acceleration * ramp_time
      cav_angle = full_sweep - ramp_angle2
      cav_time = (cav_angle + peak_speed - 1) // peak_speed

      t1 = self.progress + delta_ms
      self.progress = t1

      if t1 < ramp_time:
        # Acceleration stage
        self.lurching = True
        self.speed = sg_param.acceleration * t1
        self.rel_angle = (sg_param.acceleration * t1 * t1) // 2
      else:
        td0 = ramp_time + cav_time
        if t1 <= td0:
          # Constant rotation rate stage
          self.speed = peak_speed
          self.rel_angle = ramp_angle2 // 2 + peak_speed * (t1 - ramp_time)
        else:
          full_time = 2 * ramp_time + cav_time
          if t1 < full_time:
            # Deceleration stage
            ddt = t1 - td0
            self.speed = max(0, peak_speed - sg_param.acceleration * ddt)
            self.rel_angle = max(0, (ramp_angle2 + 2 * cav_angle
                             + 2 * peak_speed * ddt
                             - sg_param.acceleration * ddt * ddt) // 2)
          else:
            # Finished, perhaps with time to spare
            self.speed = 0
            self.rel_angle = full_sweep
            self.progress = full_time
            self.sweeping = False
            rem_ms = t1 - full_time

    else:
      # Instantaneous acceleration
      full_time = full_sweep // peak_speed
      t1 = self.progress + delta_ms
      self.progress = t1
      if t1 < full_time:
        self.speed = peak_speed
        self.rel_angle = peak_speed * t1
      else:
        self.sweeping = False
        rem_ms = t1 - full_time

    if not self.sweeping:
      self.speed = 0
      x = self.ref_sector
      if self.reversing:
        x -= self.sector_sweep
        if x < 0: x += 36
      else:
        x += self.sector_sweep
        if x >= 36: x -= 36
      self.ref_sector = x
      self.rel_angle = 0
      self.progress = 0

    return rem_ms

  def abort_sweep(self, sg_param):
    peak_speed = sg_param.max_speed
    if self.incoming:
      peak_speed = sg_param.incoming_speed
    if sg_param.acceleration == 0:
      self.log(""Abort: Constant angular velocity mode"")
      s1 = (peak_speed * self.progress + 0x3FFFF) >> 18
      self.sector_sweep = s1
    else:
      ramp_time = peak_speed // sg_param.acceleration
      ramp_angle2 = (sg_param.acceleration * ramp_time * ramp_time)
      rs = (ramp_angle2 + 0x7FFFF) >> 19
      s = self.rel_angle >> 18
      if s < rs:
        self.log(""Abort: Acceleration stage"")
        self.sector_sweep = min(self.sector_sweep, (s + 1) * 2)
      elif s < self.sector_sweep - rs:
        self.log(""Abort: CAV stage"")
        self.sector_sweep = min(self.sector_sweep, (s + 1) + rs)
      else:
        # Already braking or about to brake
        self.log(""Abort: Deceleration stage"")

  def integrate(self, sg_param, delta_ms):
    """"""Advance the animation of the stargate.

    sh_param is a StargateParam instance, which holds the dialling
    sequence and other parameters that are to be constant while this
    StargateState is in its active states.

    delta_ms is in milliseconds.
    """"""

    rem_ms = delta_ms
    count = 0

    while rem_ms > 0:

      if self.state > SgState.PreDial:
        self.shimmer_phase = (self.shimmer_phase + rem_ms) & 65535

      if self.state == SgState.Off:

        rem_ms = 0

      elif self.state == SgState.Idle:

        if self.open_req and not self.aborted:
          self.state = SgState.PreDial
          self.log(""Idle -> PreDial"")
        else:
          rem_ms = 0

      elif self.state == SgState.PreDial:

        rem_ms = self.integrate_countdown(rem_ms)
        if self.progress == 0:
          self.shimmer_phase = 0
          self.chev_progress = 0
          self.dial_seq_ix = 0
          self.chevs_passed = 0
          self.lurching = True
          self.speed = 0
          self.rel_angle = 0
          self.locking = False
          self.accepted = False
          if self.incoming:
            self.sweeping = False
            self.state = SgState.AlignForIncoming
            self.log(""PreDial -> AlignForIncoming"")
          else:
            self.sweeping = True
            self.reversing = not sg_param.clockwise_start
            if sg_param.start_sector_fixed:
              self.ref_sector = sg_param.start_sector
            self.update_sweep(sg_param)
            self.state = SgState.Dialling
            self.log(""PreDial -> Dialling"")
          if self.sector_sweep == 0:
            self.sector_sweep = 36
          self.progress = 0

      elif self.state == SgState.Dialling:

        if not self.sweeping:
          rem_ms = self.integrate_countdown(rem_ms)
          if self.progress == 0:
            self.sweeping = True
            self.log(""  Dwell complete"")
        if self.sweeping:
          if sg_param.acceleration == 0 and sg_param.skip_lit_sectors:
            x = self.ref_sector
            if self.reversing:
              x = -x
            x &= 3
            x = (x + (self.rel_angle >> 18)) // 4
            if x > self.chevs_passed and 4 * x < self.sector_sweep:
              self.chevs_passed += 1
              if self.reversing:
                cc = ((self.ref_sector + 3) >> 2) - self.chevs_passed
              else:
                cc = (self.ref_sector >> 2) + self.chevs_passed
              while cc < 0: cc += 9
              while cc >= 9: cc -= 9
              #self.log(f""  Passed chevron {cc}"")
              is_lit = False
              for i in range(self.dial_seq_ix):
                cp = chevron_pos(sg_param.lock_sequence[i])
                if cp == cc:
                  is_lit = True
                  break
              if is_lit:
                #self.log(f""  Passed locked chevron {cc}"")
                self.progress += sg_param.lit_chev_progress_bump
              else:
                #self.log(f""  Passed idle chevron {cc}"")
                pass
          rem_ms = self.integrate_sweep(sg_param, rem_ms)
          if not self.sweeping:
            self.log(""  Sweep complete"")
            self.sweeping = False  # Begin dwell
            self.progress = sg_param.dwell_time << 4
            self.chevs_passed = 0
            if self.dial_seq_ix < sg_param.num_good_chevrons:
              self.log(""  Calculating new sweep"")
              self.dial_seq_ix += 1
              if sg_param.alternating:
                self.reversing = not self.reversing
              self.update_sweep(sg_param)
              self.rem_cav_sweep = self.sector_sweep
              self.chev_progress = 0
              self.locking = True
              if not self.sector_sweep:
                self.accepted = True
                self.state = SgState.FinalChevron
                self.log(""Dialling -> FinalChevron"")
                self.progress = 0
            else:
              # Misdial: Abortion is imminent.
              self.progress = sg_param.abort_dwell_time << 4
              self.sector_sweep = 0
              self.state = SgState.Misdialled
              self.log(""Misdialled! Abort soon!"")
        if self.locking:
          # Except for the last chevron to be locked, chevron locking
          # operates in parallel with dwell and constellation sweeps.
          chev_rem_ms, finished = self.integrate_chev_progress(
              sg_param.chev_locking_time << 4, delta_ms)
          if finished:
            self.log(""  Chevron locked!"")
            self.locking = False
            self.chev_progress = 0
        else:
          if not self.open_req:
            self.aborted = True
          if self.aborted:
            self.chev_progress = 0
            if self.sweeping:
              self.abort_sweep(sg_param)
            if self.dial_seq_ix >= 1:
              self.state = SgState.Dimming
            else:
              self.state = SgState.Resetting  # Includes braking
            if self.state == SgState.Dimming:
              self.log(""Dialling (aborted) -> Dimming"")
            else:
              self.log(""Dialling (early-aborted) -> Resetting"")

      elif self.state == SgState.Misdialled:

        rem_ms = self.integrate_countdown(rem_ms)
        if self.progress == 0:
          if self.dial_seq_ix >= 1:
            self.state = SgState.Dimming
            self.log(""Misdialled -> Dimming"")
          else:
            self.state = SgState.Resetting
            self.log(""Misdialled -> Resetting"")
          self.chev_progress = 0
          self.sector_sweep = 0
          self.aborted = True

      elif self.state == SgState.AlignForIncoming:

        # self.chevs_passed is repurposed as an FSM state variable.
        if self.chevs_passed == 0:
          if sg_param.align_for_incoming and self.ref_sector != 0:
            self.sweeping = True
            if self.ref_sector < 18:
              self.reversing = True
              self.sector_sweep = self.ref_sector
              self.log(f""Go anticlockwise from sector {self.ref_sector}!"")
            else:
              self.reversing = False
              self.sector_sweep = 36 - self.ref_sector
            self.log(""Aligning..."")
            self.log(f""Sector sweep = {self.sector_sweep}"")
            self.chevs_passed = 1
          else:
            self.chevs_passed = 3
        if self.chevs_passed == 1:
          if self.sweeping:
            rem_ms = self.integrate_sweep(sg_param, rem_ms)
          if not self.sweeping:
            self.log(""Aligned!"")
            self.progress = sg_param.abort_dwell_time << 4
            self.chevs_passed = 2
        if self.chevs_passed == 2:
          rem_ms = self.integrate_countdown(rem_ms)
          if self.progress == 0:
            self.chevs_passed = 3
        if self.chevs_passed == 3:
          if sg_param.mw_emulation:
            self.chev_progress = sg_param.incoming_chev_delay << 4
            self.reversing = True
            self.sector_sweep = sg_param.incoming_sweep
          else:
            self.ref_sector = 1
            self.reversing = False
            self.sector_sweep = 36 - self.ref_sector
          self.sweeping = True
          self.state = SgState.Incoming
          self.chevs_passed = 0
          self.log(""AlignForIncoming -> Incoming"")
        if self.chevs_passed < 3:
          if not self.open_req:
            self.aborted = True
          if self.aborted:
            self.chevs_passed = 0
            if self.sweeping:
              self.abort_sweep(sg_param)
            self.state = SgState.Resetting  # Includes braking
            self.log(""AlignForIncoming (aborted) -> Resetting"")

      elif self.state == SgState.Incoming:

        chev_rem_ms = rem_ms
        if sg_param.mw_emulation:
          if self.sweeping:
            rem_ms = self.integrate_sweep(sg_param, rem_ms)
          if not self.locking:
            chev_rem_ms = self.integrate_chev_countdown(chev_rem_ms)
            if self.chev_progress == 0:
              if self.dial_seq_ix < 8:
                self.dial_seq_ix += 1
                self.locking = True
          if self.locking:
            chev_rem_ms, finished = self.integrate_chev_progress(
                sg_param.chev_warm_time << 4, chev_rem_ms)
            if finished:
              self.log(""  MW Chevron locked!"")
              self.locking = False
              self.chev_progress = max(0, ((sg_param.incoming_chev_period
                  - sg_param.chev_warm_time) << 4) - chev_rem_ms)
          chev_rem_ms = self.integrate_chev_countdown(chev_rem_ms)
        else:
          if self.locking:
            chev_rem_ms, finished = self.integrate_chev_progress(
                sg_param.chev_warm_time << 4, chev_rem_ms)
            if finished:
              self.log(""  Pegasus Chevron locked!"")
              self.locking = False
              self.chev_progress = 0
          if self.sweeping:
            rem_ms = self.integrate_sweep(sg_param, rem_ms)
          x = (self.ref_sector + (self.rel_angle >> 18)) >> 2
          if x >= 8: x = 8
          if self.dial_seq_ix < x:
            self.dial_seq_ix = x
            self.chev_progress = 0
            self.locking = True
        if self.sweeping and not self.locking:
          if not self.open_req:
            self.aborted = True
          if self.aborted:
            self.abort_sweep(sg_param)
            if self.dial_seq_ix >= 1:
              self.state = SgState.Dimming
            else:
              self.state = SgState.Resetting  # Includes braking
            self.chev_progress = 0
            if self.state == SgState.Dimming:
              self.log(""Incoming (aborted) -> Dimming"")
            else:
              self.log(""Incoming (early-aborted) -> Resetting"")
        if not self.sweeping:
          self.dial_seq_ix = 8
          self.locking = True
          self.accepted = True
          self.state = SgState.FinalChevron
          self.log(""Incoming -> FinalChevron"")
          self.chev_progress = 0
          self.progress = 0

      elif self.state == SgState.FinalChevron:

        if not self.open_req:
          self.aborted = True
        rem_ms, finished = self.integrate_chev_progress(
            sg_param.chev_locking_time << 4, delta_ms)
        if finished:
          self.locking = False
          self.chev_progress = 0
          self.progress = 0
          if self.aborted:
            self.state = SgState.Dimming
            self.log(""FinalChevron -> Dimming"")
          else:
            if self.accepted:
              self.state = SgState.Opening
              self.log(""FinalChevron -> Opening"")

      elif self.state == SgState.Opening:

        rem_ms, finished = self.integrate_progress(
            sg_param.opening_time << 4, rem_ms)
        if finished:
          self.state = SgState.Open
          self.progress = 0
          self.log(""opening -> Open"")

      elif self.state == SgState.Open:

        if self.open_req:
          rem_ms = 0
        else:
          self.state = SgState.Closing
          self.log(""Open -> Closing"")
          self.progress = 0

      elif self.state == SgState.Closing:

        rem_ms, finished = self.integrate_progress(
            sg_param.closing_time << 4, rem_ms)
        if finished:
          self.state = SgState.Dimming
          self.progress = 0
          self.chev_progress = 0
          self.log(""Closing -> Dimming"")

      elif self.state == SgState.Dimming:

        if self.dial_seq_ix >= 1:
          dim_rem_ms, finished = self.integrate_chev_progress(
              sg_param.chev_fade_time << 4, rem_ms)
          dim_time_taken = rem_ms - dim_rem_ms
          if finished:
            self.state = SgState.Resetting
            self.chev_progress = 0
          if self.sweeping:
            self.integrate_sweep(sg_param, dim_time_taken)
          rem_ms = dim_rem_ms
        else:
          self.state = SgState.Resetting
          self.chev_progress = 0
          self.log(""Chevrons already extinguished"")
        if self.state == SgState.Resetting: self.log(""Dimming -> Resetting"")

      elif self.state == SgState.Resetting:

        if self.sweeping:
          rem_ms = self.integrate_sweep(sg_param, rem_ms)
        if not self.sweeping:
          self.state = SgState.Idle
          self.log(""Resetting -> Idle"")
          self.progress = 0
          self.chev_progress = 0
          self.locking = False
          self.accepted = False
          self.dial_seq_ix = 0

      count += 1
      if count >= 10:
        self.log(f""Hung on state: {self.state}"")
        break

    # while rem_ms


# Seven-segment display data

seven_seg_points = np.array([
  [0.0, 1.0], [1.0, 1.0], [1.0, 0.5], [1.0, 0.0], [0.0, 0.0], [0.0, 0.5],
  [1.30, 0.00],
  [1.25, 0.025], [1.35, 0.025], [1.35, -0.025], [1.25, -0.025],
])

seven_seg_runs = {
  ""0"": ((0, 1, 3, 4, 0),),
  ""1"": ((1, 3),),
  ""2"": ((0, 1, 2, 5, 4, 3),),
  ""3"": ((0, 1, 3, 4), (5, 2),),
  ""4"": ((0, 5, 2), (1, 3),),
  ""5"": ((1, 0, 5, 2, 3, 4),),
  ""6"": ((1, 0, 4, 3, 2, 5),),
  ""7"": ((0, 1, 3),),
  ""8"": ((5, 0, 1, 3, 4, 5, 2),),
  ""9"": ((2, 5, 0, 1, 3, 4),),
  ""-"": ((2, 5),),
  ""."": ((7, 8, 9, 10, 7),),
}


def draw_digit_7seg(surface, stdrect, col, ch, skew=None, segwidth=1):
  """"""Draw a single seven-segment character on a pygame surface.

  Characters may be from the set {""0""..""9"", ""-"", "".""}.

  stdrect is a pygame rectangle indicating the extents of the
  corner vertices of an unskewed numeral zero on surface.
  """"""
  if skew is None: skew = 0.17632698  # tan(10 degrees)
  M = np.array([
    [stdrect.w, 0.0],
    [skew * stdrect.h, -stdrect.h],
  ])
  P = (seven_seg_points @ M) + np.array(stdrect.bottomleft)
  for run in seven_seg_runs.get(ch, ()):
    pg.draw.lines(
      surface,
      col,
      closed=False,
      points=[P[i] for i in run],
      width=segwidth,
    )


def draw_nstr_7seg(
  surface,
  leading_rect,
  col, nstr,
  skew=None,
  seg_lw=1,
  small_decimals=False,
):
  """"""Draw a seven-segment decimal number on a pygame surface.""""""
  if skew is None: skew = 0.17632698  # tan(10 degrees)
  R = leading_rect.copy()
  for ch in nstr:
    if ch == '.':
      if small_decimals:
        s = 0.6
        R = pg.Rect((R.left, R.top), (s * R.w, s * R.h))
      R.right = R.left - 0.6 * R.width
      draw_digit_7seg(surface, R, col, ch, skew, seg_lw)
      R.left = R.right + 0.6 * R.width
    else:
      draw_digit_7seg(surface, R, col, ch, skew, seg_lw)
      R.left = R.right + 0.6 * R.width


def draw_stargate_vstate(surface, sg_param, sg_state, mwrcs=None, hud=False):
  """"""Draw a stargate according to the visual state,

  sg_param is the StargateParam object used to hold the dialling
  sequence and the behaviour and timing parameters.

  sg_state is the StargateState object finite state machine, the
  one intended for visual output.

  mwrcs is the array of Milky Way (emulation) segment colours or None.

  When hud is True, annotation such as the ring or cursor angle
  and the rotation speed is displayed.
  """"""

  if mwrcs is not None:
    mw_ring_colours = mwrcs
  else:
    mw_ring_colours = np.array([[150, 150, 120]] * 36)
    mw_ring_colours[[34, 35, 0, 1, 2]] = [255, 255, 255]
    mw_ring_colours[[16, 17, 18, 19, 20]] = [100, 100, 70]

  size = np.array([surface.get_width(), surface.get_height()])
  C = size // 2
  max_r = 0.98 * min(C[0], C[1])
  body_col = (0, 119, 221)
  cr_col = (0, 119, 221)  # Constellation ring colour
  ch_col = (0, 119, 221)  # Chevron colour (when inactive)
  lit_sector_col = (85, 221, 255)

  if sg_param.base_style == SgStyle.MilkyWay:
    dim_vcol = (160, 0, 0)
    dim_wcol = (255, 0, 0)
    lit_vcol = (255, 119, 0)
    lit_wcol = (255, 240, 0)
    vwarm_fn = lambda u: 1.5 * u
    wwarm_fn = lambda u: 1.14286 * (u - 0.125)
    vcool_fn = lambda u: vwarm_fn(1.0 - u)
    wcool_fn = lambda u: wwarm_fn(1.0 - u)
  else:
    dim_vcol = (0, 0, 64)
    dim_wcol = (0, 32, 128)
    lit_vcol = (0, 200, 255)
    lit_wcol = (0, 255, 255)
    vwarm_fn = lambda u: 3.6 * (u - 0.0)
    wwarm_fn = lambda u: 1.5 * (u - 0.3333)
    vcool_fn = lambda u: 1 - (7.0 * (u - 0.125))
    wcool_fn = lambda u: 1 - u
  default_fade_fn = lambda u: ((6 * u) // 1) & 1
  vfader = 0.0
  wfader = 0.0
  fade_v = False
  fade_w = False
  shimmer_col = (75, 185, 255)

  full_circle = 36 * 0x040000
  abs_angle = sg_state.ref_sector * 0x040000
  if sg_state.reversing:
    abs_angle -= sg_state.rel_angle
    if abs_angle < 0: abs_angle += full_circle
  else:
    abs_angle += sg_state.rel_angle
    if abs_angle >= full_circle: abs_angle -= full_circle

  # Ring

  ibr = 0.73 * max_r    # Inner body radius
  icrr = 0.75 * max_r   # Inner constellation ring radius
  ocrr = 0.86 * max_r   # Outer constellation ring radius
  obr = 0.96 * max_r    # Outer body radius

  pg.draw.circle(surface, body_col, C, ibr, 1)
  pg.draw.circle(surface, body_col, C, obr, 1)
  pg.draw.circle(surface, cr_col, C, icrr, 1)
  pg.draw.circle(surface, cr_col, C, ocrr, 1)

  # Ring metrics

  r0 = icrr - 0.07 * max_r  # Inner extent of sector tick
  r1 = icrr - 0.04 * max_r  # Outer extent of sector tick
  hsa = (2 * np.pi / 36) / 2  # Half sector angle in radians
  crr = icrr + 0.5 * (ocrr - icrr) # Constellation ring radius
  cr = 0.3 * (ocrr - icrr)  # Constellation marker radius

  # Dialling state

  if sg_state.reversing:
    dialling_aix = sg_state.ref_sector - (sg_state.rel_angle >> 18)
    if dialling_aix < 0: dialling_aix += 36
  else:
    dialling_aix = sg_state.ref_sector + (sg_state.rel_angle >> 18)
    if dialling_aix >= 36: dialling_aix -= 36

  # Locked chevron positions
  if sg_state.incoming:
    lcps = [(1 + i) % 9 for i in range(sg_state.dial_seq_ix)]
  else:
    n = min(sg_state.dial_seq_ix, len(sg_param.lock_sequence))
    lcps = [chevron_pos(sg_param.lock_sequence[i])
        for i in range(n)]
  acp = -1  # Active chevron position (-1 means none)

  if sg_state.state in (
    SgState.Dialling,
    SgState.Incoming,
    SgState.FinalChevron
  ):
    if sg_state.dial_seq_ix >= 1:
      if sg_state.locking:
        if sg_state.incoming:
          acp = sg_state.dial_seq_ix
          if sg_state.state == SgState.FinalChevron:
            acp = 0
        else:
          x = sg_state.dial_seq_ix - 1
          if x < len(sg_param.lock_sequence):
            if sg_param.lock_sequence[x]:
              acp = chevron_pos(sg_param.lock_sequence[x])

  # Constellations

  for aix in range(36):
    a = aix * 2 * np.pi / 36
    # Division line
    R = np.array([np.sin(a - hsa), -np.cos(a - hsa)])
    pg.draw.line(surface, cr_col, C + icrr * R, C + ocrr * R, 1)
    R = np.array([np.sin(a), -np.cos(a)])
    if hud:
    # Inner tick
      pg.draw.line(surface, cr_col, C + r0 * R, C + r1 * R, 1)
    # Constellation
    col = (0, 0, 0)
    lw = 1
    if sg_param.mw_emulation:
      # The ring displays all constellations and rotates the desired
      # constellations to the indexing chevron at the top.
      if sg_state.state >= SgState.Idle:
        col = ring_colour_at(aix * 0x040000 - abs_angle, mw_ring_colours)
        lw = 2
    else:
      # The ring is blank except for the roving constellation and the
      # constellations already brought to their (locked) chevrons,
      if sg_state.state == SgState.Idle:
        col = cr_col
      elif sg_state.state in (
        SgState.Dialling,
        SgState.Misdialled,
        SgState.AlignForIncoming,
        SgState.FinalChevron
      ):
        if SgState.AlignForIncoming:
          col = cr_col
          lw = 2
        if dialling_aix == aix:
          col = lit_sector_col
          lw = 2
        if aix & 3 == 0 and aix // 4 in lcps:
          col = lit_sector_col
          lw = 2
        if sg_state.state == SgState.FinalChevron:
          if sg_state.incoming:
            col = lit_sector_col
            lw = 2
      elif sg_state.state == SgState.Incoming:
        x = abs_angle >> 18
        if 1 <= aix <= x or sg_state.dial_seq_ix >= 9:
          col = lit_sector_col
          lw = 2
        else:
          col = cr_col
      elif sg_state.state == SgState.Opening:
        if sg_state.incoming:
          col = lit_sector_col
          lw = 2
        else:
          if aix & 3 == 0 and aix // 4 in lcps:
            col = lit_sector_col
            lw = 2
          else:
            if sg_param.opening_time > 0:
              t = sg_state.progress / (sg_param.opening_time << 4)
            else:
              t = 1.0
            t1 = max(0, min(1, 1.5 * (t - 0.333)))
            col = t1 * np.array(lit_sector_col)
            lw = 2
      elif sg_state.state == SgState.Open:
        col = lit_sector_col
        lw = 2
      elif sg_state.state == SgState.Closing:
        col = cr_col
        lw = 1
      elif sg_state.state == SgState.Dimming:
        if sg_state.accepted:
          col = cr_col
        lw = 1
    if sum(col) > 0:
      M = np.array([[R[0], R[1]], [-R[1], R[0]]])
      pg.draw.circle(surface, col, C + [crr, 0] @ M, cr, lw)

  # Chevrons

  wx0 = icrr + 1.00 * (ocrr - icrr)
  wx1 = obr * 1.025
  wy0 = 0.010 * obr
  wy1 = 0.065 * obr

  Wedge = np.array([
    [wx1, wy1],
    [wx0, wy0],
    [wx0, -wy0],
    [wx1, -wy1],
  ])

  vx0 = wx0 - 0.010 * obr
  vx1 = wx1 - 0.021 * obr
  vx2 = vx1
  vx3 = vx0 - 0.020 * obr
  vy0 = 0.018 * obr
  vy1 = 0.068 * obr
  vy2 = 0.12 * obr
  vy3 = 0.020 * obr
  vx4 = vx0 + 0.2 * (vx3 - vx0)

  sx0 = vx1
  sx1 = sx0
  sx2 = sx0 + 0.005 * obr
  sx3 = sx0 + 0.80 * (wx1 - sx0)
  sx4 = wx1
  sy0 = wy1 - (wx1 - vx1)*(wy1 - wy0)/(wx1 - wx0)
  sy1 = sy0 + 0.17 * obr
  sy2 = sy1
  sy3 = sy0 + 0.5 * (sy1 - sy0)
  sy4 = wy1

  Frame = np.array([
    [vx1, vy1],
    [vx0, vy0],
    [vx0, -vy0],
    [vx1, -vy1],
    [vx2, -vy2],
    [vx3, -vy3],
    [vx3, vy3],
    [vx2, vy2],
  ])

  Indexer = np.array([
    [vx1, vy1],
    [vx0, vy0],
    [vx0, -vy0],
    [vx1, -vy1],
    [vx2, -vy2],
    [vx3, -vy3],
    [vx4, -vy3],
    [vx4, vy3],
    [vx3, vy3],
    [vx2, vy2],
  ])

  Shoulder = np.array([
    [sx0, sy0],
    [sx1, sy1],
    [sx2, sy2],
    [sx3, sy3],
    [sx4, sy4],
  ])

  for i in range(9):

    shimmer_phase = 0.0
    do_shimmer = False

    a = np.pi * (-0.5 + (i - 0) * 2 / 9)
    R = np.array([np.cos(a), np.sin(a)])
    M = np.array([[R[0], R[1]], [-R[1], R[0]]])
    wcol = vcol = ch_col
    vlw = wlw = 1
    activating = False

    D = np.array([0, 0])
    F = Frame

    vfade_fn = default_fade_fn
    wfade_fn = default_fade_fn
    vfader = 0.0
    wfader = 0.0
    fade_v = False
    fade_w = False

    if sg_param.base_style == SgStyle.MilkyWay:

      S = Shoulder
      pg.draw.lines(surface, ch_col, False, C + D + S @ M, width=1)
      S = Shoulder @ np.array([[1, 0], [0, -1]])
      pg.draw.lines(surface, ch_col, False, C + D + S @ M, width=1)

      if sg_state.state in (
        SgState.Dialling,
        SgState.Misdialled,
        SgState.FinalChevron,
        SgState.Incoming,
        SgState.Opening,
        SgState.Open,
        SgState.Closing
      ):
        if i in lcps:
          if i == acp:
            activating = True
        else:
          activating = sg_state.state == SgState.FinalChevron
        if (not activating and (i in lcps or sg_state.state in
            (SgState.Opening, SgState.Open, SgState.Closing))):
          vlw = wlw = 2
          vcol = lit_vcol
          wcol = lit_wcol
        if sg_state.state == SgState.Incoming:
          if activating:
            u = sg_state.chev_progress / (sg_param.chev_warm_time << 4)
            vfader = wfader = u
            vfade_fn = vwarm_fn
            wfade_fn = wwarm_fn
            fade_v = fade_w = True
        else:
          if activating or (i == 0):
            t = (sg_state.chev_progress
                - (sg_param.chev_warm_start_time << 4))
            if t >= 0:
              u = t / (sg_param.chev_warm_time << 4)
              vfader = wfader = u
              vfade_fn = vwarm_fn
              wfade_fn = wwarm_fn
              fade_v = fade_w = True
      if sg_state.state == SgState.Dimming:
        if sg_state.accepted or i in lcps:
          u = sg_state.chev_progress / (sg_param.chev_fade_time << 4)
          vfader = wfader = u
          vfade_fn = vcool_fn
          wfade_fn = wcool_fn
          fade_v = fade_w = True
      if i == 0:
        F = Indexer
        if (sg_state.locking and (sg_state.state == SgState.FinalChevron
            or sg_state.state != SgState.Incoming)):
          ct = sg_param.chev_locking_time << 4
          # Open and close the indexing chevron.
          if ct > 0:
            x = sg_param.chev_clack_start_time << 4
            s = 1  # Clack (out)
            if sg_state.chev_progress < x:
              x = sg_param.chev_click_start_time << 4
              s = 0  # Click (in)
            u = 7.14 * (sg_state.chev_progress - x) / ct
            u = max(0.0, min(1.0, u))
            if s: u = 1.0 - u
            D[1] = u * 0.015 * max_r
          # Illumination (dimming, here)
          if sg_state.state != SgState.FinalChevron:
            t = (sg_state.chev_progress
                - (sg_param.chev_fade_start_time << 4))
            if t >= 0:
              vlw = wlw = 1
              wcol = vcol = ch_col
              fade_v = fade_w = False
              if t < sg_param.chev_fade_time << 4:
                u = t / (sg_param.chev_fade_time << 4)
                vfader = wfader = u
                vfade_fn = vcool_fn
                wfade_fn = wcool_fn
                fade_v = fade_w = True

    elif sg_param.base_style == SgStyle.Pegasus:

      if sg_state.state in (
        SgState.Dialling,
        SgState.Misdialled,
        SgState.FinalChevron,
        SgState.Incoming,
        SgState.Opening,
        SgState.Open,
        SgState.Closing
      ):
        if sg_state.state in (
          SgState.Dialling,
          SgState.Misdialled,
          SgState.FinalChevron,
          SgState.Incoming
        ):
          do_shimmer = True
          u = 40 * ((sg_state.shimmer_phase & 65535) / 65536)
          shimmer_phase = u % 1.0
          if sg_state.incoming and shimmer_phase != 0.0:
            shimmer_phase = 1.0 - shimmer_phase
        if i in lcps:
          if i == acp:
            activating = True
        else:
          activating = sg_state.state == SgState.FinalChevron
        if (activating or i in lcps or sg_state.state in
            (SgState.Opening, SgState.Open, SgState.Closing)):
          vfader = wfader = 1
          vfade_fn = vwarm_fn
          wfade_fn = wwarm_fn
          fade_v = fade_w = True
        if activating:
          u = 0.0
          t0 = 0
          if sg_state.state != SgState.Incoming:
            t0 = sg_param.chev_warm_start_time << 4
          t = sg_state.chev_progress - t0
          if 0 <= t < (sg_param.chev_warm_time << 4):
            u = t / (sg_param.chev_warm_time << 4)
            vfader = wfader = u
            vfade_fn = vwarm_fn
            wfade_fn = wwarm_fn
            fade_v = fade_w = True
      if sg_state.state == SgState.Dimming:
        if sg_state.accepted or i in lcps:
          u = sg_state.chev_progress / (sg_param.chev_fade_time << 4)
          vfader = wfader = u
          vfade_fn = vcool_fn
          wfade_fn = wcool_fn
          fade_v = fade_w = True

    else:
      # Uknown style

      F = Frame
      vcol = [128, 0, 255]
      wcol = [255, 0, 255]

    if do_shimmer:
      u = np.sin(np.sqrt(shimmer_phase * np.pi * np.pi)) ** 2
      vcol = vcol + u * (np.array(shimmer_col) - vcol)

    if fade_v:
      u = max(0.0, min(1.0, vfade_fn(vfader)))
      vcol = dim_vcol + u * (np.array(lit_vcol) - dim_vcol)
      vlw = 2
    if fade_w:
      u = max(0.0, min(1.0, wfade_fn(wfader)))
      wcol = dim_wcol + u * (np.array(lit_wcol) - dim_wcol)
      wlw = 2
    pg.draw.lines(surface, vcol, True, C + D + F @ M, width=vlw)
    pg.draw.lines(surface, wcol, True, C - D + Wedge @ M, width=wlw)

  if hud:
    # Angle
    a = abs_angle * 2 * np.pi / (36 * 0x40000)
    R = np.array([np.sin(a), -np.cos(a)])
    r0 = 0.55 * max_r
    r1 = 0.71 * max_r
    pg.draw.line(surface, (0, 255, 0), C + r0 * R, C + r1 * R, 1)

  if hud:
    # Dialled sector
    if sg_param.mw_emulation:
      if sg_state.state in (
        SgState.Dialling,
        SgState.Misdialled,
        SgState.FinalChevron
      ):
        ix = sg_state.dial_seq_ix
        scol = (255, 144, 0)
        if not sg_state.sweeping:
          if sg_state.state != SgState.Misdialled:
            scol = (128, 255, 0)
            ix -= 1
          else:
            scol = (128, 0, 192)
          if sg_state.state == SgState.Dialling:
            if sg_state.progress < 0.25 * (sg_param.dwell_time << 4):
              ix = -1
        if 0 <= ix < len(sg_param.dial_sequence):
          x = sg_param.dial_sequence[ix] & 63
          if x >= 36: x -= 36
          u = min(1, sg_state.progress / 125.0)
          r0 = ibr + 0.5 * (icrr - ibr)
          r0 = r0 * (0.4 + 0.6 * u)
          rect = pg.Rect((C - [r0, r0]), (2 * r0, 2 * r0))
          a = (abs_angle + x * 0x040000) * 2 * np.pi / (36 * 0x040000)
          a0 = a1 = 0.5 * np.pi - a
          a0 -= hsa * u
          a1 += hsa * u
          lw = 5 if u < 1 else 3
          pg.draw.arc(surface, scol, rect, a0, a1, lw)

  if hud:
    # Rotational speed (and direction)
    a = (sg_state.speed / sg_param.max_speed) * (2 * np.pi / 9)
    if sg_state.reversing: a = -a
    R = np.array([np.sin(a), -np.cos(a)])
    r0 = 0.66 * max_r
    r1 = 0.73 * max_r
    pg.draw.line(surface, (192, 240, 0), C + r0 * R, C + r1 * R, 1)
    rect = pg.Rect((C - [r0, r0]), (2 * r0, 2 * r0))
    a0 = a1 = 0.5 * np.pi
    if a < 0:
      a1 -= a
    else:
      a0 -= a
    pg.draw.arc(surface, (192, 240, 0), rect, a0, a1, 1)

  # Wibbly wobbly swirly thing erroneously called an ""event horizon"".
  if sg_state.state in (SgState.Opening, SgState.Open, SgState.Closing):
    if sg_state.state == SgState.Opening:
      u = sg_state.progress / (sg_param.opening_time << 4)
    elif sg_state.state == SgState.Closing:
      u = 1.0 - (sg_state.progress / (sg_param.closing_time << 4))
    else:
      u = 1.0
    r = u * 0.98 * ibr
    col = (255 - int(255 * u), 255 - int(127 * u), 255)
    pg.draw.circle(surface, col, C, r, 4)


def draw_stargate_astate(surface, sg_param, sg_state):

  """"""Draw auxiliary stargate data according to the audio state,

  sg_param is the StargateParam object used to hold the dialling
  sequence and the behaviour and timing parameters.

  sg_state is the StargateState object finite state machine, the
  one intended for audio output, which is usally animated ahead
  of the visual state object in order to correct for sound latency
  and propagation delay.
  """"""

  size = np.array([surface.get_width(), surface.get_height()])
  C = size // 2
  max_r = 0.98 * min(C[0], C[1])

  # Angle
  abs_angle = sg_state.ref_sector * 0x040000
  if sg_state.reversing:
    abs_angle -= sg_state.rel_angle
  else:
    abs_angle += sg_state.rel_angle
  a = abs_angle * 2 * np.pi / (36 * 0x40000)
  R = np.array([np.sin(a), -np.cos(a)])
  r0 = 0.57 * max_r
  r1 = 0.69 * max_r
  pg.draw.line(surface, (255, 0, 0), C + r0 * R, C + r1 * R, 1)

  # Rotational speed (and direction)
  a = (sg_state.speed / sg_param.max_speed) * (2 * np.pi / 9)
  if sg_state.reversing: a = -a
  R = np.array([np.sin(a), -np.cos(a)])
  r0 = 0.68 * max_r
  r1 = 0.71 * max_r
  pg.draw.line(surface, (224, 0, 96), C + r0 * R, C + r1 * R, 1)
  rect = pg.Rect((C - [r0, r0]), (2 * r0, 2 * r0))
  a0 = a1 = 0.5 * np.pi
  if a < 0:
    a1 -= a
  else:
    a0 -= a
  pg.draw.arc(surface, (224, 0, 96), rect, a0, a1, 1)


def traces_from_sg_state(sg_state, sg_param):
  """"""Fetch output control signals from a stargate.

  These are the signals that would look nice on a seven-channel
  oscilloscope.
  """"""
  click = False  # MWE: Indexer opens
  clack = False  # MWE: Indexer closes
  if sg_state.locking:
    if sg_state.state == SgState.Incoming:
      click = True
    else:
      t = sg_state.chev_progress
      click = t >= sg_param.chev_click_start_time << 4
      if sg_param.mw_emulation:
        if (sg_state.state == SgState.Dialling
            or sg_state.state == SgState.FinalChevron):
          clack = t >= sg_param.chev_clack_start_time << 4
  result = [
    sg_state.speed / sg_param.max_speed,
    int(sg_state.sweeping),
    int(sg_state.lurching),
    int(click),
    int(clack),
    int(sg_state.state in (SgState.Opening, SgState.Open)),
    int(sg_state.state == SgState.Dimming),
  ]
  return result


def draw_traces(surface, dpix, old_values, new_values, styles):
  """"""Draw a stack of traces on a scrolling oscilloscope display.

  dpix is the number of pixels to scroll and update.

  A 2-pixel margin exists at the right edge to accomodate 4-pixel
  strokes which might othwerwise be clipped.
  """"""
  size = np.array([surface.get_width(), surface.get_height()])
  if 1 <= dpix < size[0]:
    surface.blit(
        surface, (0, 0), pg.Rect((dpix, 0), (size[0] - dpix, size[1])))
  if dpix >= 1:
    surface.fill(0x000000,
        pg.Rect((size[0] - dpix, 0), (dpix, size[1])))
  dpix1 = min(dpix, size[0])
  n = len(new_values)
  pen_margin = 2
  field_h = size[1] // n
  stack_h = field_h * n
  ch_h = field_h * 3 // 4
  top_baseline = (size[1] - stack_h) // 2 + field_h - (field_h - ch_h) // 2
  baseline = top_baseline
  field_x1 = size[0] - pen_margin
  def_col = (255, 0, 0)
  for oldv, newv, style in zip(old_values, new_values, styles):
    lw = style.get('lw', 1)
    x0 = field_x1 - dpix1
    y0 = baseline - ch_h * oldv
    x1 = field_x1
    y1 = baseline - ch_h * newv
    col = style.get('col', def_col)
    pg.draw.line(surface, col, (x0, y0), (x1, y1), lw)
    baseline += field_h


class MainCmd (IntEnum):
  """"""Command values to insulate the input system from business logic.""""""
  Null = 0
  Power = 1
  CutPower = 2
  Open = 3
  Incoming = 4
  Close = 5
  Style = 6
  HUD = 7


def main():
  """"""Run the pretty stargate simulation.""""""

  print(help_msg)

  test_angle = 0.0

  pg.init()
  clock = pg.time.Clock()

  # Requested screen size
  rss = (960, 960)
  rss = (800, 800)

  window_style = 0  # FULLSCREEN
  best_depth = pg.display.mode_ok(rss, window_style, 32)
  screen = pg.display.set_mode(rss, window_style, best_depth)
  screen_size = screen.get_width(), screen.get_height()
  pg.display.set_caption(""Stargate Animation Modelling."")

  # Oscilloscope canvases
  sw = screen_size[0] * 45 // 100
  sh = screen_size[1] * 45 // 100
  scope_rect = pg.Rect(
    ((screen_size[0] - sw) // 2, (screen_size[1] - sh) // 2),
    (sw, sh)
  )
  vscope_surface = pg.Surface(scope_rect.size, screen.get_bitsize(), screen)
  vscope_surface.fill(0x000000)
  ascope_surface = pg.Surface(scope_rect.size, screen.get_bitsize(), screen)
  ascope_surface.fill(0x000000)
  scope_time_err = 0

  anim_counter = 0
  max_fps = 100
  dampened_fps = max_fps
  delta_time = 1.0 / max_fps

  sg_param = StargateParam()
  sg_vstate = StargateState()
  sg_astate = copy.copy(sg_vstate)

  use_hud = True

  old_vvals = [0]
  old_avals = [0]

  delta_ms = clock.tick(max_fps)
  delta_ms = clock.tick(max_fps)

  visual_delay = 250
  visual_delay_countdown = 0
  visual_delay_error = 0
  print(f""Sound propagation\ndelay correction: {visual_delay}ms\n"")

  mw_ring_colours = build_mw_ring_colours()
  do_exit = False

  while not do_exit:

    cmd = MainCmd.Null

    for event in pg.event.get():
      if event.type == pg.QUIT:
        do_exit = True
        print(""[Quit]"")
      elif event.type == pg.KEYUP and event.key == pg.K_ESCAPE:
        do_exit = True
        print(""[ESC] Quit"")
      elif event.type == pg.KEYUP:
        if event.key == pg.K_q:
          do_exit = True
          print(""[Q] Quit"")
      elif event.type == pg.KEYDOWN:
        if event.key == pg.K_p:
          print(""[P] Power"")
          cmd = MainCmd.Power
        if event.key == pg.K_x:
          print(""[X] Cut Power"")
          cmd = MainCmd.CutPower
        if event.key == pg.K_o:
          print(""[O] Dial Out"")
          cmd = MainCmd.Open
        if event.key == pg.K_i:
          print(""[I] Incoming"")
          cmd = MainCmd.Incoming
        if event.key == pg.K_c:
          print(""[C] Close"")
          cmd = MainCmd.Close
        if event.key == pg.K_s:
          print(""[S] Style"")
          cmd = MainCmd.Style
        if event.key == pg.K_h:
          print(""[H] HUD"")
          cmd = MainCmd.HUD

    if cmd == MainCmd.Power:
      if (sg_vstate.state == SgState.Off
          and sg_astate.state == SgState.Off):
        sg_vstate.state = SgState.Idle
        sg_astate = copy.copy(sg_vstate)

    if cmd == MainCmd.CutPower:
      sg_vstate.state = SgState.Off
      sg_astate = copy.copy(sg_vstate)

    if cmd == MainCmd.Style:
      if (sg_vstate.state <= SgState.Idle
          and sg_astate.state <= SgState.Idle):
        sg_param.set_style((sg_param.style + 1) % len(SgStyle))
        print(f""Style: {sg_param.style}"")

    if cmd == MainCmd.Open:
      if (sg_vstate.state == SgState.Idle
          and sg_astate.state == SgState.Idle):
        if not sg_astate.open_req and not sg_vstate.open_req:
          sg_vstate.incoming = False
          sg_vstate.aborted = False
          sg_astate = copy.copy(sg_vstate)
          sg_astate.open_req = True
          visual_delay_countdown = visual_delay

    if cmd == MainCmd.Incoming:
      if (sg_vstate.state == SgState.Idle
          and sg_astate.state == SgState.Idle):
        if not sg_astate.open_req and not sg_vstate.open_req:
          sg_vstate.incoming = True
          sg_vstate.aborted = False
          sg_astate = copy.copy(sg_vstate)
          sg_astate.open_req = True
          visual_delay_countdown = visual_delay

    if cmd == MainCmd.Close:
      if sg_vstate.open_req and sg_astate.open_req:
        sg_astate.open_req = False
        visual_delay_countdown = visual_delay

    if cmd == MainCmd.HUD:
      use_hud = not use_hud

    sg_vstate.logging = True
    sg_astate.logging = False

    # Render

    screen.fill((0, 0, 0))
    screen_size = np.array([screen.get_width(), screen.get_height()])
    C = screen_size // 2
    max_r = 0.98 * min(C[0], C[1])

    mwrcs = mw_ring_colours
    draw_stargate_vstate(screen, sg_param, sg_vstate, mwrcs, hud=use_hud)
    if use_hud:
      draw_stargate_astate(screen, sg_param, sg_astate)

    # Floor
    R = np.array([1, 0]) * max_r
    x = max_r
    y = 0.63 * max_r
    pg.draw.line(screen, (128, 48, 0), C + [-x, y], C + [x, y], 3)

    # Oscilloscope
    scope_time = 5000
    a0 = dict(lw=4, col=pg.Color(96, 0, 255))
    v0 = dict(lw=1, col=pg.Color(0, 100, 160))
    a1 = dict(lw=4, col=pg.Color(255, 32, 0))
    v1 = dict(lw=1, col=pg.Color(0, 170, 0))
    a2 = dict(lw=4, col=pg.Color(200, 180, 0))
    v2 = dict(lw=1, col=pg.Color(0, 140, 240))
    a3 = dict(lw=4, col=pg.Color(200, 0, 160))
    v3 = dict(lw=1, col=pg.Color(0, 180, 140))
    astyles = [a0, a2, a2, a1, a1, a3, a1]
    vstyles = [v0, v2, v2, v1, v1, v3, v1]
    avals = traces_from_sg_state(sg_astate, sg_param)
    vvals = traces_from_sg_state(sg_vstate, sg_param)
    sw = scope_rect.width - 4
    sh = scope_rect.height
    dpix0 = delta_ms * sw / scope_time - scope_time_err
    dpix = int(round(dpix0))
    scope_time_err = dpix - dpix0
    dpix = min(sw, dpix)
    draw_traces(ascope_surface, dpix, old_avals, avals, astyles)
    draw_traces(vscope_surface, dpix, old_vvals, vvals, vstyles)
    old_vvals = vvals
    old_avals = avals
    delay_pix = int(sw * visual_delay / scope_time)
    y0, y1 = scope_rect.top, scope_rect.bottom
    x0 = scope_rect.left + sw
    x1 = x0 - delay_pix
    if use_hud:
      pg.draw.line(screen, 0x007700, (x0, y0), (x0, y1), 1)
      pg.draw.line(screen, 0x770000, (x1, y0), (x1, y1), 1)
      screen.blit(ascope_surface, scope_rect, special_flags=pg.BLEND_ADD)
      screen.blit(vscope_surface, scope_rect, special_flags=pg.BLEND_ADD)

    if use_hud:
      # Numeric displays

      w = screen.get_width()
      std_digit_width = int(round(w * 20.0 / 960.0))

      digit_width = std_digit_width
      digit_height = 2 * digit_width

      # Frames per second
      #cx = 0.01 * max_r
      #x = cx - 4 * 1.6 * digit_width
      x = 10
      fps_rect = pg.Rect((x, 10), (digit_width, digit_height))
      fps = 1.0 / delta_time
      weight = 0.1
      dampened_fps = dampened_fps + weight * (fps - dampened_fps)
      nstr = f""{dampened_fps:5.1f}""
      draw_nstr_7seg(screen, fps_rect, 0xFF00CC, nstr, seg_lw=3,
          small_decimals=True)

      # Style index
      sn = 1 + int(sg_param.style)
      nstr = f""{sn}""
      x = screen_size[0] - 10 - digit_width * (2 + len(nstr))
      sn_rect = pg.Rect((x, 10), (digit_width, digit_height))
      draw_nstr_7seg(screen, sn_rect, 0x0099CC, nstr, seg_lw=3),

      if False:
        # Test graphic to verify timing
        R = np.array([np.sin(test_angle), -np.cos(test_angle)]) * 0.71 * max_r
        pg.draw.line(screen, (255, 60, 0), C, C + R, 1)

    pg.display.update()

    # Animate and integrate

    delta_ms = clock.tick(max_fps)
    delta_time = delta_ms / 1000.0

    sg_vstate.integrate(sg_param, delta_ms)
    sg_astate.integrate(sg_param, delta_ms)

    if visual_delay_countdown > 0:
      if visual_delay_countdown >= delta_ms:
        visual_delay_countdown -= delta_ms
        visual_delay_error = 0
      else:
        visual_delay_error = delta_ms - visual_delay_countdown
        visual_delay_countdown = 0
      if visual_delay_countdown == 0:
        sg_vstate.open_req = sg_astate.open_req

    anim_counter += delta_ms
    test_angle += 2.0/60.0 * np.pi * delta_time


if __name__ == '__main__':
  main()
  print(""Done!"")
"
VPEZeYs9,data611,TestGuy1,JSON,Thursday 22nd of June 2023 06:13:12 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '1044960e08aa38680d7b2c46858fd6772923e8d51679e6acd985632b649ecce54604d1cf7f16e9f022b8f744dc107f565bef898b2ac4204a3cd591d48aca53c31b99225b175a2a19265c5070b7280fc22d6f266365ba3b698d0140fa040977288bb3d5a127ce354fd8e269a9672422fd3b50192eec763f902b481370f0f15ba5',
  otherdata: [
    '91b7fe2944cc6f2f1ff01876b7e78279',
    '40fb480aec5d0b48d0450565258a7819',
    '2ae51c29f29f8cbffca0bdba2f6b62f1',
    'e3dcf052788e33cb34c3965072412ecb',
    '6664b33ca59158badbbcf344a9ae0740',
    '09bf5b6796a6978d2223dc2943cecfbe',
    '6d0247bf760d48e1d944a2ed465735b8',
    '489b6b32681cca6f6ca3f2630d9d3d3e'
  ]
}"
BDLPvCK4,css webdev 3,lovelymondayss,CSS,Thursday 22nd of June 2023 05:35:05 AM CDT,"nav {
  position: absolute;
  right: 0;
  display: flex;
}

a {
  text-decoration: none;
  color: lightcoral;
  padding: 15px;
  float: left;
}

a:hover {
  background-color: burlywood;
}

body {
  margin-top: 10%;
}

.main-header {
  background-color: lightgoldenrodyellow;
  padding-left: 10px;
  position: fixed;
  top: 0px;
  left: 0px;
  right: 0px;
  height: 50px;
}

.header-info {
  text-align: left;
  color: rgb(219, 84, 75);
  padding: 0px;
  margin: 14px;
  position: absolute;
  left: 0px;
}

* {
  color: #87c641;
  border-color: #87c641;
  font-family: ""Roboto"", sans-serif;
}

h1 {
  font-size: x-large;
  width: full;
  height: auto;
}

body {
  background-color: #fffff7;
}

.center {
  text-align: center;
}

.fancy {
  text-shadow: 2px 2px 3px green;
}

img {
  width: 15%;
  aspect-ratio: 3/2;
  border-radius: 40px;
  border: #87c641 5px solid;
  margin: 10px;
}

h2 {
  font-family: ""Courier New"", Courier, monospace;
  font-style: italic;
}

ul {
  list-style-type: none;
  padding: 0;
  margin: 0;
}

.dropdown {
  display: flex;
  flex-direction: column;
}
.dropdown-content {
  display: none;
}
.dropdown:hover .dropdown-content {
  display: block;
  position: absolute;
  top: 100%;
  background-color: antiquewhite;
}
.dropdown-item:hover {
  background-color: whitesmoke;
  cursor: pointer;
}
a.dropdown-item {
  min-width: 160px;
  text-align: left;
}

li.dropdown-item:hover a.dropdown-item {
  text-align: left;
  color: gainsboro;
}
"
TLFsyaW9,Balls,Grossos,JavaScript,Thursday 22nd of June 2023 04:58:56 AM CDT,"function balls(input) {

    let counter = 0;

    let blackBall = 0;

    let redCounter = 0;
    let orangeCounter = 0;
    let yellowCounter = 0;
    let whiteCounter = 0;
    let total = 0;
    for (let index = 1; index < input.length; index++) {

        let currentColour = input[index];

        switch (currentColour) {
            case 'red':
                total += 5;
                redCounter++;
                break;
            case 'orange':
                total += 10;
                orangeCounter++;
                break;
            case 'yellow':
                total += 15;
                yellowCounter++;
                break;
            case 'white':
                total += 20;
                whiteCounter++;
                break;
            case 'black':
                blackBall += 1;
                total = Math.floor(total / 2);
                break;
            default:
                counter++;
                break
        }

    }

    if (blackBall >= 1) {
        console.log(`Total points: ${total}`);
        console.log(`Red balls: ${redCounter}`);
        console.log(`Orange balls: ${orangeCounter}`);
        console.log(`Yellow balls: ${yellowCounter}`);
        console.log(`White balls: ${whiteCounter}`);
        console.log(`Other colors picked: ${counter}`);
        console.log(`Divides from black balls: ${blackBall}`);

    } else {
        console.log(`Total points: ${total}`);
        console.log(`Red balls: ${redCounter}`);
        console.log(`Orange balls: ${orangeCounter}`);
        console.log(`Yellow balls: ${yellowCounter}`);
        console.log(`White balls: ${whiteCounter}`);
        console.log(`Other colors picked: ${counter}`);
        console.log(`Divides from black balls: ${blackBall}`);

    }
}

balls([""3"",
    ""white"",
    ""black"",
    ""pink""])"
zMXZH1Kz,Game,Hidden2World,C#,Thursday 22nd of June 2023 04:57:48 AM CDT,"using System;
using System.Collections.Generic;
using System.Diagnostics.Eventing.Reader;
using System.Linq;
using System.Net;
using System.Text;
using System.Threading.Tasks;

namespace game
{
    internal class Program
    {
        static string enemyName;
        static string enemyTitle;
        static int enemyHealth;
        static int enemydamage;
        static int health;


        static void Main()
        {
            while (enemyHealth > 0 && health > 0){
                Console.WriteLine(""Enter the name for the enemy:"");
                enemyName = Console.ReadLine();

                Console.WriteLine(""Enter the title for the enemy:"");
                enemyTitle = Console.ReadLine();

                Console.WriteLine(""Enter the health for the enemy:"");
                if (!int.TryParse(Console.ReadLine(), out enemyHealth))
                {
                    Console.WriteLine(""Invalid choice. Please choose a number above 0."");
                    continue;

                }
                

                Console.WriteLine(""How much health do you want:"");
                if (!int.TryParse(Console.ReadLine(), out health))
                {
                    Console.WriteLine(""Invalid choice. Please choose a number above 0."");
                    continue;

                }

                Console.Clear();

                string enemyFullName = $""{enemyName} the {enemyTitle}"";

                Console.WriteLine(""You have encountered "" + enemyFullName + "". Prepare to fight!"");
                Console.WriteLine(""Enemy Health: "" + enemyHealth);
                attack();
            }
        }

        static void attack()
        {
            Random random = new Random();
            int choice;

            while (health > 0 && enemyHealth > 0)
            {
                Console.WriteLine(""Choose your action:"");
                Console.WriteLine(""1. Do damage"");
                Console.WriteLine(""2. Heal"");

                
                if (!int.TryParse(Console.ReadLine(), out choice))
                {
                    Console.WriteLine(""Invalid choice. Please choose either 1 or 2."");
                    continue;
                }
                switch (choice)
                {
                    
            
                    case 1: //starts it from the second one because technically it starts the cases from 0
                        Console.WriteLine(""How much damage do you want to do?"");
                        int damage = Convert.ToInt32(Console.ReadLine());
                        enemyHealth -= damage;

                        Console.WriteLine(""Enemy Health after damage: "" + enemyHealth);

                        if (enemyHealth <= 0)
                        {
                            Console.WriteLine($""You have defeated {enemyName}!"");
                            Console.WriteLine(""You win!"");
                            Console.WriteLine(""Thank you for playing the Game. Press any key to exit."");
                            Console.ReadKey();
                        }
                        break;
                    case 2:

                        int healAmount = random.Next(11, 51);
                        health += healAmount;
                        Console.WriteLine($""You just got healed + {healAmount}"");

                        Console.WriteLine(""Your Health after healing: "" + health);
                        break;
                    default: //this is basically else
                        Console.WriteLine(""Invalid choice. Please choose a valid option."");
                        continue;

                }
                int enemyDamage = random.Next(1, 101);
                health -= enemyDamage;

                Console.WriteLine($""The {enemyName} has dealt {enemyDamage} damage!"");

                if (health <= 0)
                {
                    Console.WriteLine(""Game over!"");
                    Console.WriteLine(""You lose!"");
                    Console.WriteLine(""Thank you for playing the Game. Press any key to exit."");
                    Console.ReadKey();
                }




            }
        }


    }
}
"
