id,title,username,language,date,content
ih5WW99t,03. Numbers,veronikaaa86,Java,Tuesday 13th of June 2023 12:48:07 PM CDT,"import java.util.*;
import java.util.stream.Collectors;

public class Main {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        List<Integer> numbersList = Arrays
                .stream(scanner.nextLine()
                        .split("" ""))
                .map(Integer::parseInt)
                .collect(Collectors.toList());

        int sum = 0;
        for (int item : numbersList) {
            sum += item;
        }

        double avgValue = sum * 1.0 / numbersList.size();

        List<Integer> resultList = new ArrayList<>();
        for (int item : numbersList) {
            if (item > avgValue) {
                resultList.add(item);
            }
        }

        Collections.sort(resultList);
        Collections.reverse(resultList);

        if (resultList.size() <= 5 && resultList.size() > 1) {
            System.out.println(resultList.toString()
                    .replace(""["", """")
                    .replace(""]"", """")
                    .replace("","", """"));
            //System.out.println(resultList.toString().replaceAll(""[\\[\\],]"", """"));
        } else if (resultList.isEmpty()) {
            System.out.println(""No"");
        } else {
            resultList = resultList.stream().limit(5).collect(Collectors.toList());
            for (int item : resultList) {
                System.out.printf(""%d "", item);
            }
        }

    }
}
"
1TMhrAQU,UND,FE_Hub,Lua,Tuesday 13th of June 2023 12:34:01 PM CDT,"local ButtonsColor = Color3.fromRGB(172, 172, 172)



local main
local top = Instance.new(""Frame"")
local back = Instance.new(""Frame"")
local ScrollingFrame = Instance.new(""ScrollingFrame"")
local bald = Instance.new(""TextButton"")
local ragdoll = Instance.new(""TextButton"")
local kill = Instance.new(""TextButton"")
local naked = Instance.new(""TextButton"")
local goto = Instance.new(""TextButton"")
local rtools = Instance.new(""TextButton"")
local box = Instance.new(""TextButton"")
local sink = Instance.new(""TextButton"")
local ban = Instance.new(""TextButton"")
local explorer = Instance.new(""TextButton"")
local slock = Instance.new(""TextButton"")
local UIGridLayout = Instance.new(""UIGridLayout"")
local kick = Instance.new(""TextButton"")
local blockhead = Instance.new(""TextButton"")
local stools = Instance.new(""TextButton"")
local noface = Instance.new(""TextButton"")
local punish = Instance.new(""TextButton"")
local noregen = Instance.new(""TextButton"")
local stopanim = Instance.new(""TextButton"")
local blockchar = Instance.new(""TextButton"")
local nolimbs = Instance.new(""TextButton"")
local nowaist = Instance.new(""TextButton"")
local noroot = Instance.new(""TextButton"")
local top_2 = Instance.new(""TextLabel"")
local credits = Instance.new(""TextLabel"")
local queue = Instance.new(""TextLabel"")
local target = Instance.new(""TextBox"")
local Players = game:GetService(""Players"")

for v, ScreenThing in ipairs(Players.LocalPlayer.PlayerGui:GetDescendants()) do
	if ScreenThing:IsA(""ScreenGui"") then
		main = ScreenThing
	end
end

function splitString(str,delim)
	local broken = {}
	if delim == nil then delim = "","" end
	for w in string.gmatch(str,""[^""..delim..""]+"") do
		table.insert(broken,w)
	end
	return broken
end
function toTokens(str)
	local tokens = {}
	for op,name in string.gmatch(str,""([+-])([^+-]+)"") do
		table.insert(tokens,{Operator = op,Name = name})
	end
	return tokens
end
function getRoot(char)
	local rootPart = char:FindFirstChild('HumanoidRootPart') or char:FindFirstChild('Torso') or char:FindFirstChild('UpperTorso')
	return rootPart
end
local WTS = function(Object)
	local ObjectVector = workspace.CurrentCamera:WorldToScreenPoint(Object.Position)
	return Vector2.new(ObjectVector.X, ObjectVector.Y)
end
local mouse = Players.LocalPlayer:GetMouse()
local MousePositionToVector2 = function()
	return Vector2.new(mouse.X, mouse.Y)
end
local GetClosestPlayerFromCursor = function()
	local found = nil
	local ClosestDistance = math.huge
	for i, v in pairs(Players:GetPlayers()) do
		if v ~= Players.LocalPlayer and v.Character and v.Character:FindFirstChildOfClass(""Humanoid"") then
			for k, x in pairs(v.Character:GetChildren()) do
				if string.find(x.Name, ""Torso"") then
					local Distance = (WTS(x) - MousePositionToVector2()).Magnitude
					if Distance < ClosestDistance then
						ClosestDistance = Distance
						found = v
					end
				end
			end
		end
	end
	return found
end
local SpecialPlayerCases = {
	[""all""] = function(speaker) return Players:GetPlayers() end,
	[""others""] = function(speaker)
		local plrs = {}
		for i,v in pairs(Players:GetPlayers()) do
			if v ~= speaker then
				table.insert(plrs,v)
			end
		end
		return plrs
	end,
	[""me""] = function(speaker)return {speaker} end,
	[""#(%d+)""] = function(speaker,args,currentList)
		local returns = {}
		local randAmount = tonumber(args[1])
		local players = {unpack(currentList)}
		for i = 1,randAmount do
			if #players == 0 then break end
			local randIndex = math.random(1,#players)
			table.insert(returns,players[randIndex])
			table.remove(players,randIndex)
		end
		return returns
	end,
	[""random""] = function(speaker,args,currentList)
		local players = Players:GetPlayers()
		local localplayer = Players.LocalPlayer
		table.remove(players, table.find(players, localplayer))
		return {players[math.random(1,#players)]}
	end,
	[""%%(.+)""] = function(speaker,args)
		local returns = {}
		local team = args[1]
		for _,plr in pairs(Players:GetPlayers()) do
			if plr.Team and string.sub(string.lower(plr.Team.Name),1,#team) == string.lower(team) then
				table.insert(returns,plr)
			end
		end
		return returns
	end,
	[""allies""] = function(speaker)
		local returns = {}
		local team = speaker.Team
		for _,plr in pairs(Players:GetPlayers()) do
			if plr.Team == team then
				table.insert(returns,plr)
			end
		end
		return returns
	end,
	[""enemies""] = function(speaker)
		local returns = {}
		local team = speaker.Team
		for _,plr in pairs(Players:GetPlayers()) do
			if plr.Team ~= team then
				table.insert(returns,plr)
			end
		end
		return returns
	end,
	[""team""] = function(speaker)
		local returns = {}
		local team = speaker.Team
		for _,plr in pairs(Players:GetPlayers()) do
			if plr.Team == team then
				table.insert(returns,plr)
			end
		end
		return returns
	end,
	[""nonteam""] = function(speaker)
		local returns = {}
		local team = speaker.Team
		for _,plr in pairs(Players:GetPlayers()) do
			if plr.Team ~= team then
				table.insert(returns,plr)
			end
		end
		return returns
	end,
	[""friends""] = function(speaker,args)
		local returns = {}
		for _,plr in pairs(Players:GetPlayers()) do
			if plr:IsFriendsWith(speaker.UserId) and plr ~= speaker then
				table.insert(returns,plr)
			end
		end
		return returns
	end,
	[""nonfriends""] = function(speaker,args)
		local returns = {}
		for _,plr in pairs(Players:GetPlayers()) do
			if not plr:IsFriendsWith(speaker.UserId) and plr ~= speaker then
				table.insert(returns,plr)
			end
		end
		return returns
	end,
	[""guests""] = function(speaker,args)
		local returns = {}
		for _,plr in pairs(Players:GetPlayers()) do
			if plr.Guest then
				table.insert(returns,plr)
			end
		end
		return returns
	end,
	[""bacons""] = function(speaker,args)
		local returns = {}
		for _,plr in pairs(Players:GetPlayers()) do
			if plr.Character:FindFirstChild('Pal Hair') or plr.Character:FindFirstChild('Kate Hair') then
				table.insert(returns,plr)
			end
		end
		return returns
	end,
	[""age(%d+)""] = function(speaker,args)
		local returns = {}
		local age = tonumber(args[1])
		if not age == nil then return end
		for _,plr in pairs(Players:GetPlayers()) do
			if plr.AccountAge <= age then
				table.insert(returns,plr)
			end
		end
		return returns
	end,
	[""nearest""] = function(speaker,args,currentList)
		local speakerChar = speaker.Character
		if not speakerChar or not getRoot(speakerChar) then return end
		local lowest = math.huge
		local NearestPlayer = nil
		for _,plr in pairs(currentList) do
			if plr ~= speaker and plr.Character then
				local distance = plr:DistanceFromCharacter(getRoot(speakerChar).Position)
				if distance < lowest then
					lowest = distance
					NearestPlayer = {plr}
				end
			end
		end
		return NearestPlayer
	end,
	[""farthest""] = function(speaker,args,currentList)
		local speakerChar = speaker.Character
		if not speakerChar or not getRoot(speakerChar) then return end
		local highest = 0
		local Farthest = nil
		for _,plr in pairs(currentList) do
			if plr ~= speaker and plr.Character then
				local distance = plr:DistanceFromCharacter(getRoot(speakerChar).Position)
				if distance > highest then
					highest = distance
					Farthest = {plr}
				end
			end
		end
		return Farthest
	end,
	[""group(%d+)""] = function(speaker,args)
		local returns = {}
		local groupID = tonumber(args[1])
		for _,plr in pairs(Players:GetPlayers()) do
			if plr:IsInGroup(groupID) then  
				table.insert(returns,plr)
			end
		end
		return returns
	end,
	[""alive""] = function(speaker,args)
		local returns = {}
		for _,plr in pairs(Players:GetPlayers()) do
			if plr.Character and plr.Character:FindFirstChildOfClass(""Humanoid"") and plr.Character:FindFirstChildOfClass(""Humanoid"").Health > 0 then
				table.insert(returns,plr)
			end
		end
		return returns
	end,
	[""dead""] = function(speaker,args)
		local returns = {}
		for _,plr in pairs(Players:GetPlayers()) do
			if (not plr.Character or not plr.Character:FindFirstChildOfClass(""Humanoid"")) or plr.Character:FindFirstChildOfClass(""Humanoid"").Health <= 0 then
				table.insert(returns,plr)
			end
		end
		return returns
	end,
	[""rad(%d+)""] = function(speaker,args)
		local returns = {}
		local radius = tonumber(args[1])
		local speakerChar = speaker.Character
		if not speakerChar or not getRoot(speakerChar) then return end
		for _,plr in pairs(Players:GetPlayers()) do
			if plr.Character and getRoot(plr.Character) then
				local magnitude = (getRoot(plr.Character).Position-getRoot(speakerChar).Position).magnitude
				if magnitude <= radius then table.insert(returns,plr) end
			end
		end
		return returns
	end,
	[""cursor""] = function(speaker)
		local plrs = {}
		local v = GetClosestPlayerFromCursor()
		if v ~= nil then table.insert(plrs, v) end
		return plrs
	end,
}
function onlyIncludeInTable(tab,matches)
	local matchTable = {}
	local resultTable = {}
	for i,v in pairs(matches) do matchTable[v.Name] = true end
	for i,v in pairs(tab) do if matchTable[v.Name] then table.insert(resultTable,v) end end
	return resultTable
end

function removeTableMatches(tab,matches)
	local matchTable = {}
	local resultTable = {}
	for i,v in pairs(matches) do matchTable[v.Name] = true end
	for i,v in pairs(tab) do if not matchTable[v.Name] then table.insert(resultTable,v) end end
	return resultTable
end

function getPlayersByName(Name)
	local Name,Len,Found = string.lower(Name),#Name,{}
	for _,v in pairs(Players:GetPlayers()) do
		if Name:sub(0,1) == '@' then
			if string.sub(string.lower(v.Name),1,Len-1) == Name:sub(2) then
				table.insert(Found,v)
			end
		else
			if string.sub(string.lower(v.Name),1,Len) == Name or string.sub(string.lower(v.DisplayName),1,Len) == Name then
				table.insert(Found,v)
			end
		end
	end
	return Found
end
function getPlayer(list,speaker)
	if list == nil then return {speaker.Name} end
	local nameList = splitString(list,"","")

	local foundList = {}

	for _,name in pairs(nameList) do
		if string.sub(name,1,1) ~= ""+"" and string.sub(name,1,1) ~= ""-"" then name = ""+""..name end
		local tokens = toTokens(name)
		local initialPlayers = Players:GetPlayers()

		for i,v in pairs(tokens) do
			if v.Operator == ""+"" then
				local tokenContent = v.Name
				local foundCase = false
				for regex,case in pairs(SpecialPlayerCases) do
					local matches = {string.match(tokenContent,""^""..regex..""$"")}
					if #matches > 0 then
						foundCase = true
						initialPlayers = onlyIncludeInTable(initialPlayers,case(speaker,matches,initialPlayers))
					end
				end
				if not foundCase then
					initialPlayers = onlyIncludeInTable(initialPlayers,getPlayersByName(tokenContent))
				end
			else
				local tokenContent = v.Name
				local foundCase = false
				for regex,case in pairs(SpecialPlayerCases) do
					local matches = {string.match(tokenContent,""^""..regex..""$"")}
					if #matches > 0 then
						foundCase = true
						initialPlayers = removeTableMatches(initialPlayers,case(speaker,matches,initialPlayers))
					end
				end
				if not foundCase then
					initialPlayers = removeTableMatches(initialPlayers,getPlayersByName(tokenContent))
				end
			end
		end

		for i,v in pairs(initialPlayers) do table.insert(foundList,v) end
	end

	local foundNames = {}
	for i,v in pairs(foundList) do table.insert(foundNames,v.Name) end

	return foundNames
end
local RemoteEventt
if game.PlaceId ~= 6865382813 and game.PlaceId ~= 6816975827 then
	for _,Remoteee in ipairs(game:GetDescendants()) do
		if  Remoteee:IsA(""RemoteFunction"") or Remoteee:IsA(""RemoteEvent"") then
			if Remoteee.Name == ""Delete\208\161ar1"" then
				RemoteEventt = Remoteee
				break
			elseif Remoteee.Name == ""DeleteCar1"" or Remoteee.Name == ""DeleteCar"" or  Remoteee.Name == ""DestroySegway"" or  Remoteee.Name == """" then
				RemoteEventt = Remoteee
			elseif Remoteee.Name == """" then
				RemoteEventt = Remoteee
			end
		end
	end
else
	RemoteEventt = game:GetService(""ReplicatedStorage""):WaitForChild(""DeleteCar"")
end
function Destroy(instance)
	spawn(function()
		RemoteEventt:FireServer(instance)
	end)
end

main.Name = ""main""
main.Parent = game.Players.LocalPlayer:WaitForChild(""PlayerGui"")
main.ResetOnSpawn = false

top.Name = ""top""
top.Parent = main
top.Active = true
top.BackgroundColor3 = Color3.fromRGB(95, 96, 97)
top.BackgroundTransparency = 0
top.BorderColor3 = Color3.fromRGB(29, 29, 29)
top.Draggable = true
top.Position = UDim2.new(0.612145662, 102, 0.311965823, -29)
top.Size = UDim2.new(0, 291, 0, 30)

back.Name = ""back""
back.Parent = top
back.BackgroundColor3 = Color3.fromRGB(49, 49, 49)
back.BackgroundTransparency = 0
back.BorderColor3 = Color3.fromRGB(29, 29, 29)
back.BorderSizePixel = 0
back.Position = UDim2.new(-0.00343642617, 0, 1, 0)
back.Size = UDim2.new(0, 293, 0, 293)

ScrollingFrame.Parent = back
ScrollingFrame.Active = true
ScrollingFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ScrollingFrame.BackgroundTransparency = 1.000
ScrollingFrame.BorderSizePixel = 0
ScrollingFrame.LayoutOrder = 999999999
ScrollingFrame.Position = UDim2.new(0.0341299027, 0, 0.0784982964, 0)
ScrollingFrame.Size = UDim2.new(0, 282, 0, 208)
ScrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 825)

bald.Name = ""bald""
bald.Parent = ScrollingFrame
bald.BackgroundColor3 = ButtonsColor
bald.BackgroundTransparency = 0.500
bald.BorderSizePixel = 0
bald.Size = UDim2.new(0, 131, 0, 40)
bald.Font = Enum.Font.SourceSansLight
bald.Text = ""Bald""
bald.TextColor3 = Color3.fromRGB(255, 255, 255)
bald.TextSize = 23.000
bald.MouseButton1Click:connect(function()
	local players = getPlayer(target.Text, Players.LocalPlayer)
	for i, v in pairs(players) do
		for i, v in pairs(Players[v].Character:GetChildren()) do
			if v:IsA(""Accessory"") then
				Destroy(v)
			end
		end
	end
end)

ragdoll.Name = ""ragdoll""
ragdoll.Parent = ScrollingFrame
ragdoll.BackgroundColor3 = ButtonsColor
ragdoll.BackgroundTransparency = 0.500
ragdoll.BorderSizePixel = 0
ragdoll.Position = UDim2.new(0.079136692, 0, -0.00990098994, 0)
ragdoll.Size = UDim2.new(0, 131, 0, 40)
ragdoll.Font = Enum.Font.SourceSansLight
ragdoll.Text = ""Ragdoll""
ragdoll.TextColor3 = Color3.fromRGB(255, 255, 255)
ragdoll.TextSize = 23.000
ragdoll.MouseButton1Click:connect(function()
	local players = getPlayer(target.Text, Players.LocalPlayer)
	for i, v in pairs(players) do
		Destroy(Players[v].Character:FindFirstChildOfClass(""Humanoid""))
	end
end)

kill.Name = ""kill""
kill.Parent = ScrollingFrame
kill.BackgroundColor3 = ButtonsColor
kill.BackgroundTransparency = 0.500
kill.BorderSizePixel = 0
kill.Position = UDim2.new(0.079136692, 0, -0.00990098994, 0)
kill.Size = UDim2.new(0, 131, 0, 40)
kill.Font = Enum.Font.SourceSansLight
kill.Text = ""Kill""
kill.TextColor3 = Color3.fromRGB(255, 255, 255)
kill.TextSize = 23.000
kill.MouseButton1Click:connect(function()
	local players = getPlayer(target.Text, Players.LocalPlayer)
	for i, v in pairs(players) do
		if Players[v].Character:FindFirstChildOfClass(""Humanoid"").RigType == Enum.HumanoidRigType.R6 then
			Destroy(Players[v].Character.Torso.Neck)
		else
			Destroy(Players[v].Character.Head.Neck)
		end
	end
end)

naked.Name = ""naked""
naked.Parent = ScrollingFrame
naked.BackgroundColor3 = ButtonsColor
naked.BackgroundTransparency = 0.500
naked.BorderSizePixel = 0
naked.Position = UDim2.new(0.079136692, 0, -0.00990098994, 0)
naked.Size = UDim2.new(0, 131, 0, 40)
naked.Font = Enum.Font.SourceSansLight
naked.Text = ""Naked""
naked.TextColor3 = Color3.fromRGB(255, 255, 255)
naked.TextSize = 23.000
naked.MouseButton1Click:connect(function()
	local players = getPlayer(target.Text, Players.LocalPlayer)
	for i, v in pairs(players) do
		Destroy(Players[v].Character:FindFirstChildOfClass(""Pants""))
		Destroy(Players[v].Character:FindFirstChildOfClass(""Shirt""))
		Destroy(Players[v].Character:FindFirstChildOfClass(""ShirtGraphic""))
	end
end)

goto.Name = ""goto""
goto.Parent = ScrollingFrame
goto.BackgroundColor3 = ButtonsColor
goto.BackgroundTransparency = 0.500
goto.BorderSizePixel = 0
goto.Position = UDim2.new(0.079136692, 0, -0.00990098994, 0)
goto.Size = UDim2.new(0, 131, 0, 40)
goto.Font = Enum.Font.SourceSansLight
goto.Text = ""Goto""
goto.TextColor3 = Color3.fromRGB(255, 255, 255)
goto.TextSize = 23.000
goto.MouseButton1Click:connect(function()
	local players = getPlayer(target.Text, Players.LocalPlayer)
	for i, v in pairs(players) do
		if Players[v].Character ~= nil then
			if Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid') and Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid').SeatPart then
				Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid').Sit = false
				wait(.1)
			end
			getRoot(Players.LocalPlayer.Character).CFrame = getRoot(Players[v].Character).CFrame + Vector3.new(3,1,0)
		end
	end
end)

rtools.Name = ""rtools""
rtools.Parent = ScrollingFrame
rtools.BackgroundColor3 = ButtonsColor
rtools.BackgroundTransparency = 0.500
rtools.BorderSizePixel = 0
rtools.Position = UDim2.new(0.079136692, 0, -0.00990098994, 0)
rtools.Size = UDim2.new(0, 131, 0, 40)
rtools.Font = Enum.Font.SourceSansLight
rtools.Text = ""Rtools""
rtools.TextColor3 = Color3.fromRGB(255, 255, 255)
rtools.TextSize = 23.000
rtools.MouseButton1Click:connect(function()
	local players = getPlayer(target.Text)
	for i, v in pairs(players) do
		for i, v in pairs(Players[v]:FindFirstChildOfClass(""Backpack""):GetChildren()) do
			Destroy(v)
		end
	end
end)

box.Name = ""box""
box.Parent = ScrollingFrame
box.BackgroundColor3 = ButtonsColor
box.BackgroundTransparency = 0.500
box.BorderSizePixel = 0
box.Position = UDim2.new(0.079136692, 0, -0.00990098994, 0)
box.Size = UDim2.new(0, 131, 0, 40)
box.Font = Enum.Font.SourceSansLight
box.Text = ""Box""
box.TextColor3 = Color3.fromRGB(255, 255, 255)
box.TextSize = 23.000
box.MouseButton1Click:connect(function()
	local players = getPlayer(target.Text, Players.LocalPlayer)
	for i, v in pairs(players) do
		for i, v in pairs(Players[v].Character:GetChildren()) do
			if v:IsA(""Accessory"") then
				Destroy(v)
			end
		end
		for i, v in pairs(Players[v].Character:GetChildren()) do
			if v:IsA(""CharacterMesh"") then
				Destroy(v)
			end
		end
		Destroy(Players[v].Character:FindFirstChildOfClass(""Pants""))
		Destroy(Players[v].Character:FindFirstChildOfClass(""Shirt""))
		Destroy(Players[v].Character:FindFirstChildOfClass(""ShirtGraphic""))
		Destroy(Players[v].Character[""Left Arm""])
		Destroy(Players[v].Character[""Left Leg""])
		Destroy(Players[v].Character[""Right Arm""])
		Destroy(Players[v].Character[""Right Leg""])
		Destroy(Players[v].Character.Head:FindFirstChildOfClass(""SpecialMesh""))
		Destroy(Players[v].Character.Head:FindFirstChildOfClass(""Decal""))
	end
end)

sink.Name = ""sink""
sink.Parent = ScrollingFrame
sink.BackgroundColor3 = ButtonsColor
sink.BackgroundTransparency = 0.500
sink.BorderSizePixel = 0
sink.Position = UDim2.new(0.079136692, 0, -0.00990098994, 0)
sink.Size = UDim2.new(0, 131, 0, 40)
sink.Font = Enum.Font.SourceSansLight
sink.Text = ""Sink""
sink.TextColor3 = Color3.fromRGB(255, 255, 255)
sink.TextSize = 23.000
sink.MouseButton1Click:connect(function()
	local players = getPlayer(target.Text, Players.LocalPlayer)
	for i, v in pairs(players) do
		Destroy(Players[v].Character.HumanoidRootPart)
	end
end)

function FindInTable(tbl,val)
	if tbl == nil then return false end
	for _,v in pairs(tbl) do
		if v == val then return true end
	end 
	return false
end
local slockk = false
local banned = {}
Players.PlayerAdded:connect(function(plr)
	if slockk then
		Destroy(plr)
	end
	if FindInTable(banned, plr.UserId) then
		Destroy(plr)
	end
end)

ban.Name = ""ban""
ban.Parent = ScrollingFrame
ban.BackgroundColor3 = ButtonsColor
ban.BackgroundTransparency = 0.500
ban.BorderSizePixel = 0
ban.Position = UDim2.new(0.079136692, 0, -0.00990098994, 0)
ban.Size = UDim2.new(0, 131, 0, 40)
ban.Font = Enum.Font.SourceSansLight
ban.Text = ""Ban""
ban.TextColor3 = Color3.fromRGB(255, 255, 255)
ban.TextSize = 23.000
ban.MouseButton1Click:connect(function()
	local players = getPlayer(target.Text, Players.LocalPlayer)
	for i, v in pairs(players) do
		table.insert(banned, Players[v].UserId)
		Destroy(Players[v])
	end
end)
slock.Name = ""slock""
slock.Parent = ScrollingFrame
slock.BackgroundColor3 = ButtonsColor
slock.BackgroundTransparency = 0.500
slock.BorderSizePixel = 0
slock.Position = UDim2.new(0.079136692, 0, -0.00990098994, 0)
slock.Size = UDim2.new(0, 131, 0, 40)
slock.Font = Enum.Font.SourceSansLight
slock.Text = ""Server Lock""
slock.TextColor3 = Color3.fromRGB(255, 255, 255)
slock.TextSize = 23.000
slock.MouseButton1Click:connect(function()
	if slockk then 
		queue.Text = ""Server Lock: false""
		queue.TextColor3 = Color3.new(0, 1, 0)
		slockk = false
	else
		queue.Text = ""Server Lock: true""
		queue.TextColor3 = Color3.new(1, 0, 0.0156863)
		slockk = true
	end
end)

UIGridLayout.Parent = ScrollingFrame
UIGridLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIGridLayout.CellPadding = UDim2.new(0, 15, 0, 15)
UIGridLayout.CellSize = UDim2.new(0, 131, 0, 40)

kick.Name = ""kick""
kick.Parent = ScrollingFrame
kick.BackgroundColor3 = ButtonsColor
kick.BackgroundTransparency = 0.500
kick.BorderSizePixel = 0
kick.Position = UDim2.new(0.079136692, 0, -0.00990098994, 0)
kick.Size = UDim2.new(0, 131, 0, 40)
kick.Font = Enum.Font.SourceSansLight
kick.Text = ""Kick""
kick.TextColor3 = Color3.fromRGB(255, 255, 255)
kick.TextSize = 23.000
kick.MouseButton1Click:connect(function()
	local players = getPlayer(target.Text, Players.LocalPlayer)
	for i, v in pairs(players) do
		Destroy(Players[v])
	end
end)

blockhead.Name = ""blockhead""
blockhead.Parent = ScrollingFrame
blockhead.BackgroundColor3 = ButtonsColor
blockhead.BackgroundTransparency = 0.500
blockhead.BorderSizePixel = 0
blockhead.Position = UDim2.new(0.079136692, 0, -0.00990098994, 0)
blockhead.Size = UDim2.new(0, 131, 0, 40)
blockhead.Font = Enum.Font.SourceSansLight
blockhead.Text = ""Block Head""
blockhead.TextColor3 = Color3.fromRGB(255, 255, 255)
blockhead.TextSize = 23.000
blockhead.MouseButton1Click:connect(function()
	local players = getPlayer(target.Text, Players.LocalPlayer)
	for i, v in pairs(players) do
		Destroy(Players[v].Character.Head:FindFirstChildOfClass(""SpecialMesh""))
	end
end)

stools.Name = ""stools""
stools.Parent = ScrollingFrame
stools.BackgroundColor3 = ButtonsColor
stools.BackgroundTransparency = 0.500
stools.BorderSizePixel = 0
stools.Position = UDim2.new(0.079136692, 0, -0.00990098994, 0)
stools.Size = UDim2.new(0, 131, 0, 40)
stools.Font = Enum.Font.SourceSansLight
stools.Text = ""Steal Tools""
stools.TextColor3 = Color3.fromRGB(255, 255, 255)
stools.TextSize = 23.000
stools.MouseButton1Click:connect(function()
	local players = getPlayer(target.Text, Players.LocalPlayer)
	for i, v in pairs(players) do
		Destroy(Players[v].Character:FindFirstChildOfClass(""Humanoid""))
		repeat wait() until Players[v].Character:FindFirstChildOfClass(""Humanoid"").Parent == nil
		for _, v in ipairs(Players[v].Character:GetChildren()) do
			if v:IsA(""BackpackItem"") and v:FindFirstChild(""Handle"") then
				Players.LocalPlayer.Character:FindFirstChildOfClass(""Humanoid""):EquipTool(v)
			end
		end
	end
end)

noface.Name = ""noface""
noface.Parent = ScrollingFrame
noface.BackgroundColor3 = ButtonsColor
noface.BackgroundTransparency = 0.500
noface.BorderSizePixel = 0
noface.Position = UDim2.new(0.079136692, 0, -0.00990098994, 0)
noface.Size = UDim2.new(0, 131, 0, 40)
noface.Font = Enum.Font.SourceSansLight
noface.Text = ""No Face""
noface.TextColor3 = Color3.fromRGB(255, 255, 255)
noface.TextSize = 23.000
noface.MouseButton1Click:connect(function()
	local players = getPlayer(target.Text, Players.LocalPlayer)
	for i, v in pairs(players) do
		Destroy(Players[v].Character.Head:FindFirstChildOfClass(""Decal""))
	end
end)

punish.Name = ""punish""
punish.Parent = ScrollingFrame
punish.BackgroundColor3 = ButtonsColor
punish.BackgroundTransparency = 0.500
punish.BorderSizePixel = 0
punish.Position = UDim2.new(0.079136692, 0, -0.00990098994, 0)
punish.Size = UDim2.new(0, 131, 0, 40)
punish.Font = Enum.Font.SourceSansLight
punish.Text = ""Punish""
punish.TextColor3 = Color3.fromRGB(255, 255, 255)
punish.TextSize = 23.000
punish.MouseButton1Click:connect(function()
	local players = getPlayer(target.Text, Players.LocalPlayer)
	for i, v in pairs(players) do
		Destroy(Players[v].Character)
	end
end)

stopanim.Name = ""stopanim""
stopanim.Parent = ScrollingFrame
stopanim.BackgroundColor3 = ButtonsColor
stopanim.BackgroundTransparency = 0.500
stopanim.BorderSizePixel = 0
stopanim.Position = UDim2.new(0.079136692, 0, -0.00990098994, 0)
stopanim.Size = UDim2.new(0, 131, 0, 40)
stopanim.Font = Enum.Font.SourceSansLight
stopanim.Text = ""No animation""
stopanim.TextColor3 = Color3.fromRGB(255, 255, 255)
stopanim.TextSize = 23.000
stopanim.MouseButton1Click:connect(function()
	local players = getPlayer(target.Text, Players.LocalPlayer)
	for i, v in pairs(players) do
		Destroy(Players[v].Character:FindFirstChildOfClass(""Humanoid""):FindFirstChildOfClass(""Animator""))
	end
end)

blockchar.Name = ""blockchar""
blockchar.Parent = ScrollingFrame
blockchar.BackgroundColor3 = ButtonsColor
blockchar.BackgroundTransparency = 0.500
blockchar.BorderSizePixel = 0
blockchar.Position = UDim2.new(0.079136692, 0, -0.00990098994, 0)
blockchar.Size = UDim2.new(0, 131, 0, 40)
blockchar.Font = Enum.Font.SourceSansLight
blockchar.Text = ""Block Char""
blockchar.TextColor3 = Color3.fromRGB(255, 255, 255)
blockchar.TextSize = 23.000
blockchar.MouseButton1Click:connect(function()
	local players = getPlayer(target.Text, Players.LocalPlayer)
	for i, v in pairs(players) do
		for i, v in pairs(Players[v].Character:GetChildren()) do
			if v:IsA(""CharacterMesh"") then
				Destroy(v)
			end
		end
	end
end)

nolimbs.Name = ""nolimbs""
nolimbs.Parent = ScrollingFrame
nolimbs.BackgroundColor3 = ButtonsColor
nolimbs.BackgroundTransparency = 0.500
nolimbs.BorderSizePixel = 0
nolimbs.Position = UDim2.new(0.079136692, 0, -0.00990098994, 0)
nolimbs.Size = UDim2.new(0, 131, 0, 40)
nolimbs.Font = Enum.Font.SourceSansLight
nolimbs.Text = ""No Limbs""
nolimbs.TextColor3 = Color3.fromRGB(255, 255, 255)
nolimbs.TextSize = 23.000
nolimbs.MouseButton1Click:connect(function()
	local players = getPlayer(target.Text, Players.LocalPlayer)
	for i, v in pairs(players) do
		if Players[v].Character:FindFirstChildOfClass(""Humanoid"").RigType == Enum.HumanoidRigType.R6 then
			Destroy(Players[v].Character[""Left Arm""])
			Destroy(Players[v].Character[""Left Leg""])
			Destroy(Players[v].Character[""Right Arm""])
			Destroy(Players[v].Character[""Right Leg""])
		else
			Destroy(Players[v].Character[""LeftUpperArm""])
			Destroy(Players[v].Character[""LeftUpperLeg""])
			Destroy(Players[v].Character[""RightUpperArm""])
			Destroy(Players[v].Character[""RightUpperLeg""])
		end
	end
end)

top_2.Name = ""top""
top_2.Parent = top
top_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
top_2.BackgroundTransparency = 1.000
top_2.Position = UDim2.new(0.154639184, 0, -0.333333343, 0)
top_2.Size = UDim2.new(0, 200, 0, 50)
top_2.Font = Enum.Font.SourceSansLight
top_2.Text = ""Harked Private Version""
top_2.TextColor3 = Color3.fromRGB(255, 255, 255)
top_2.TextSize = 30.000

credits.Name = ""credits""
credits.Parent = top
credits.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
credits.BackgroundTransparency = 1.000
credits.Position = UDim2.new(0, 0, 1, 0)
credits.Size = UDim2.new(0, 291, 0, 23)
credits.Font = Enum.Font.SourceSansLight
credits.Text = ""Update by mb23os, UI by Unverified""
credits.TextColor3 = Color3.fromRGB(255, 255, 255)
credits.TextSize = 17.000
credits.TextWrapped = true

queue.Name = ""queue""
queue.Parent = top
queue.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
queue.BackgroundTransparency = 1.000
queue.Position = UDim2.new(0, 0, 10.0333338, 0)
queue.Size = UDim2.new(0, 292, 0, 23)
queue.Font = Enum.Font.SourceSans
queue.Text = ""Server Lock: false""
queue.TextColor3 = Color3.fromRGB(0, 255, 0)
queue.TextSize = 20.000
queue.TextWrapped = true

target.Name = ""target""
target.Parent = top
target.BackgroundColor3 = ButtonsColor
target.BackgroundTransparency = 0.400
target.Position = UDim2.new(0.0206185561, 0, 8.86666584, 0)
target.Size = UDim2.new(0, 278, 0, 33)
target.Font = Enum.Font.SourceSans
target.Text = """"
target.TextColor3 = Color3.fromRGB(255, 255, 255)
target.TextSize = 23.000

local player = game.Players.LocalPlayer
local mouse = player:GetMouse()

-- Objects
local selectionbox = Instance.new(""SelectionBox"", workspace)
local TextButton = Instance.new(""TextButton"")
local On = Instance.new(""StringValue"")

-- Properties

TextButton.Name = ""Btools""
TextButton.Parent = ScrollingFrame
TextButton.BackgroundColor3 = ButtonsColor
TextButton.BackgroundTransparency = 0.500
TextButton.BorderSizePixel = 0
TextButton.Position = UDim2.new(0.079136692, 0, -0.00990098994, 0)
TextButton.Size = UDim2.new(0, 131, 0, 40)
TextButton.Font = Enum.Font.SourceSansLight
TextButton.Text = ""Btools""
TextButton.TextColor3 = Color3.fromRGB(255, 255, 255)
TextButton.TextSize = 23.000


On.Parent = TextButton
On.Value = ""Off""

-- Scripts 

TextButton.MouseButton1Up:Connect(function()
	if On.Value == ""Off"" then
		On.Value = ""On""
		TextButton.Text = ""Btools (On)""
	else
		On.Value = ""Off""
		TextButton.Text = ""Btools (Off)""
	end
end)
mouse.Button1Up:Connect(function()
	if On.Value ~= ""Off"" then
		if mouse.Target.Locked == true then
			Destroy(mouse.Target)
		else
			Destroy(mouse.Target)
		end
	end
end)
while true do
	wait()
	if On.Value == ""On"" then
		selectionbox.Adornee = mouse.Target
	end
end"
ejh47Bia,Command to copy content of files,Tymisko,Bash,Tuesday 13th of June 2023 12:15:15 PM CDT,"for file in $(find . -type f); do echo '```'; cat ""$file""; echo '```'; done | xclip -selection clipboard
"
quviGyRr,botPress Choices,terencepjf,JavaScript,Tuesday 13th of June 2023 12:13:07 PM CDT,"const url = `http://endpoint?sort=identifier`
console.log(url)
const response = await axios.get(url)
if (response.status === 200) {
  bot.roster= JSON.stringify(response.data)
}
var json = JSON.parse(bot.roster)
console.log('Parsed data >>>>>>>>')
console.log(json.numberOfElements)

let i = 0
var list = []
for (i=0;i<json.numberOfElements;i++) {
  let member = {}
  member['label'] = json.content[i].name
  member['value'] = json.content[i].identifier
  list.push(member)
}
workflow.choices = list
console.log(workflow.choices)
workflow.selected = null

{ label: 'Esfandiar ', value: 'V001' }, { label: 'Gita ', value: 'V002' }, { label: 'Chalcy ', value: 'V003' }, { label: 'Gerry ', value: 'V008' }, { label: 'Gary ', value: 'V010' }, { label: 'Jane ', value: 'V011' }, { label: 'Jerry ', value: 'V016' }, { label: 'Jack ', value: 'V017' }, { label: 'Shei!a ', value: 'V024' }, { label: 'Edward ', value: 'V028' }, { label: 'Ralph ', value: 'V030' }, { label: 'Mark', value: 'V031' }, { label: 'Lee ', value: 'V032' }, { label: 'Lina ', value: 'V033' }, { label: 'Terence', value: 'V034' }, { label: 'Sunita ', value: 'V035' }, { label: 'Vineet Garg', value: 'V036' }, { label: 'Deetra ', value: 'V037' }, { label: 'Kim ', value: 'V039' }, { label: 'Menon', value: 'V040' }"
thUgmXJk,BTC Wallet Credentials have been reset,abbredescr_91,GetText,Tuesday 13th of June 2023 12:09:44 PM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please disregard this message.
Your new login credentials will be 
pacificcarvaht:gn3zHQ on 193.233.202.76(SSH)
Regards"
eA4j16Vp,yayayaa,Chl_Snt,Python,Tuesday 13th of June 2023 11:51:51 AM CDT,"import telebot
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery, Message

bot = telebot.TeleBot(""6108491691:AAEyTG-e5asVPFS9wSpDyDezPmF4xIkxI2s"")
m = Message
c = CallbackQuery
a: m = None


@bot.message_handler([""start""])
def start(msg: m):
    global a
    k = InlineKeyboardMarkup()
    k.add(InlineKeyboardButton(""Кнопка"", ""vk.com""))
    k.add(InlineKeyboardButton(""Кнопка 2"", callback_data=""btn""))
    k.add(InlineKeyboardButton(""Кнопка 3"", callback_data=""btn2""))
    a = bot.send_message(msg.chat.id, ""eferfef"", reply_markup=k)



@bot.callback_query_handler(func=lambda call: True)
def callback(call: c):
    global a
    if call.data == ""btn"":
        bot.send_message(call.message.chat.id, ""Хули жмешь"")
    if call.data == ""btn2"":
        bot.edit_message_text(""vromvkriiormvior"", call.message.chat.id, a.message_id)


bot.infinity_polling()
"
c49GVcEs,Untitled,veritas2022,JavaScript,Tuesday 13th of June 2023 11:30:27 AM CDT,"function spiral(row, col) {
let num = 1;
let finalArray = [];

for (let i = 0; i < row; i++) {
    let currentArray = [];
    currentArray.length = col;
    finalArray.push(currentArray);
    
}
let startRowIndex = 0;
let startColIndex = 0;

while (startRowIndex < row && startColIndex < col) {
    for(let i = startColIndex; i < col; ++i){
        finalArray[startRowIndex][i] = num++;
    }startRowIndex++;

    for(let i = startRowIndex; i < row; ++i){
        finalArray[i][col - 1] = num++;
    }col--;

    if(startRowIndex < row){
        for (let i = col - 1; i >= startColIndex; --i){
           finalArray[row - 1][i] = num++
        }row--;
    }
    if(startColIndex < col){
        for(let i = row - 1; i >= startRowIndex; --i){
            finalArray[i][startColIndex] = num++;
        }startColIndex++;
    }

}finalArray.forEach(el => console.log(el.join(' ')))

}
spiral(5,5);"
YQsBvqUe,02. Shopping List,veronikaaa86,Java,Tuesday 13th of June 2023 11:23:27 AM CDT,"package examPrep;

import java.util.Arrays;
import java.util.List;
import java.util.Scanner;
import java.util.stream.Collectors;

public class P02ShoppingList {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        List<String> productList = Arrays.stream(scanner.nextLine().split(""!"")).collect(Collectors.toList());

        String inputLine = scanner.nextLine();
        while (!inputLine.equals(""Go Shopping!"")) {
            String[] commandsArr = inputLine.split("" "");
            String command = commandsArr[0];

            String item = commandsArr[1];
            switch (command) {
                case ""Urgent"":
                    if (!productList.contains(item)) {
                        productList.add(0, item);
                    }
                    break;
                case ""Unnecessary"":
                    productList.remove(item);
                    break;
                case ""Correct"":
                    String newItem = commandsArr[2];
                    if (productList.contains(item)) {
                        int index = productList.indexOf(item);
                        productList.set(index, newItem);
                    }
                    break;
                case ""Rearrange"":
                    if (productList.contains(item)) {
                        productList.remove(item);
                        productList.add(item);
                    }
                    break;
            }

            inputLine = scanner.nextLine();
        }

        System.out.println(String.join("", "", productList));
    }
}
"
CBW710iy,01. Bonus Scoring System,veronikaaa86,Java,Tuesday 13th of June 2023 10:55:15 AM CDT,"package examPrep;

import java.util.Scanner;

public class P01BonusScoringSystem {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        int studentsCount = Integer.parseInt(scanner.nextLine());
        int lecturesCount = Integer.parseInt(scanner.nextLine());
        int initBonus = Integer.parseInt(scanner.nextLine());

        double maxBonus = 0;
        int maxAttendances = 0;
        for (int i = 0; i < studentsCount; i++) {
            int attendances = Integer.parseInt(scanner.nextLine());

            double currentBonus = attendances * 1.0 / lecturesCount * (5 + initBonus);

            if (currentBonus > maxBonus) {
                maxBonus = currentBonus;
                maxAttendances = attendances;
            }
        }

        System.out.printf(""Max Bonus: %.0f.%n"", Math.ceil(maxBonus));
        System.out.printf(""The student has attended %d lectures.%n"", maxAttendances);
    }
}
"
nv3gCdTF,Away pager,Tiago_f,mIRC,Tuesday 13th of June 2023 10:31:45 AM CDT,"ctcp *:page:?:{
  if (%awaypager.enabled) {
    if ($away) {
      write -il1 scripts\txt\awpages.txt 0 $ctime $iif($ial($nick),$v1,$nick) $strip($2-)
      if (!%pagerflood. [ $+ [ $cid ] ]) { .notice $nick Thanks for your page! }
    }
    elseif (!%pagerflood. [ $+ [ $cid ] ]) { .notice $nick I am not away... }
    set -u4 %pagerflood. $+ $cid 1
  }
}
alias mdxfile { return $+($scriptdir,dlls\,$1,.mdx) }
alias pager { dialog -m awaypager awaypager }
dialog awaypager {
  title ""Away pager""
  size -1 -1 396 224
  option pixels
  list 1, 12 18 138 164, size
  box ""Choose page"", 2, 4 2 154 188
  box ""Page info"", 3, 166 2 226 188
  text ""From"", 5, 176 22 28 16
  edit ""Select a page!"", 8, 214 18 170 22, read autohs
  text ""Rcvd."", 9, 176 44 30 16
  edit ""n/a"", 10, 214 40 170 22, read autohs
  text ""At"", 12, 176 66 18 16
  edit ""n/a"", 13, 214 62 170 22, read autohs
  edit ""n/a"", 15, 214 84 170 98, read multi return vsbar
  text ""Text"", 16, 176 88 28 16
  button ""&Close"", 4, 312 196 80 24, ok
  menu ""&File"", 14
  item ""&Close"", 18, 14
  menu ""&Pager"", 17
  item ""&Refresh pages"", 19, 17
  item break, 20, 17
  item ""R&emove selected pages"", 21, 17
  item ""&Clear pages"", 22, 17
}
on *:dialog:awaypager:*:*:{
  if ($devent == init) {
    mdx SetControlMDX $dname 1 TreeView nohscroll haslines hasbuttons showsel > $mdxfile(views)
    aw.loadpages
  }
  elseif ($devent == sclick) {
    if ($did == 1) {
      tokenize 32 $did($did,1)
      if (slclick select * * * * iswm $1-) {
        did -i $dname 1 1 cb root $4-5
        var %t = $did($did,$6),%timeformat.short = HH:nn:ss,%dateformat.long = dddd $+ $chr(44) mmmm ddoo yyyy
        did -i $dname 1 1 replaceitem $6 $puttok($puttok(%t,+s,1,32),Read,6,9)
        set %away.curpage $mid($gettok($gettok(%t,3,9),1,13),2)
        tokenize 32 $read(scripts\txt\awpages.txt,n,%away.curpage)
        did -ra $dname 8 $3
        did -ra $dname 10 $asctime($2,%dateformat.long)
        did -ra $dname 13 $asctime($2,%timeformat.short)
        did -ra $dname 15 $4-
        did -c $dname 8,10,13,15 1
        if (!$1) { write -l $+ %away.curpage scripts\txt\awpages.txt $puttok($1-,1,1,32) }
        did -e $dname 21
      }
      elseif (slclick select * * iswm $1-) {
        unset %away.curpage
        did -b $dname 21
        did -ra $dname 8 Select a page!
        did -ra $dname 10,13,15 n/a
      }
    }
  }
  elseif ($devent == menu) {
    if ($did == 19) { aw.loadpages }
    elseif ($did == 22) {
      if ($ydialog(Do you really want to remove all away pages?)) {
        write -c scripts\txt\awpages.txt
        aw.loadpages
      }
    }
    elseif ($did == 21) {
      write -dl $+ %away.curpage scripts\txt\awpages.txt
      aw.loadpages
    }
    elseif ($did == 18) { dialog -c $dname }
  }
  elseif ($devent == close) { unset %away.curpage }
}
alias aw.loadpages {
  unset %away.curpage
  did -b awaypager 21
  var %d,%t,%a,%l = 1,%timeformat = yyyy-mm-dd $+ $chr(44) HH:nn:ss,%dateformat = yyyy-mm-dd,%z
  did -r awaypager 1
  did -i awaypager 1 1 cb root
  did -a awaypager 1 +eb 1 1 0 0 0 Pages
  did -i awaypager 1 1 cb last
  if ($isfile(scripts\txt\awpages.txt)) {
    .fopen pages scripts\txt\awpages.txt
    while (!$feof) {
      tokenize 32 $fread(pages)
      if ($regex($1-,/^0|1 \d+ .+ .+$/)) {
        %t = $asctime($2,%dateformat)
        if (%d != %t) {
          if (%a) { did -i awaypager 1 1 cb up }
          %z = 1
          did -a awaypager 1 +e 1 1 0 0 0 %t
          did -i awaypager 1 1 cb last
        }
        var %d = %t,%a = 1
        did -a awaypager 1 $iif($1,+,+b) 1 1 0 0 0 $+($gettok($3,1,33),	Page:	#,%l,$crlf,From:	,$3,$crlf,Rcvd:	,$asctime($2,%timeformat),$crlf,Status:	,$iif($1,Read,Unread))
      }
      inc %l
    }
    .fclose pages
  }
  if (!%z) {
    did -b awaypager 22
    did -a awaypager 1 + 1 1 0 0 0 No pages received.
  }
  did -ra awaypager 8 Select a page!
  did -ra awaypager 10,13,15 n/a
}
"
hiq5i3Vg,zero,Dimas598105,PHP,Tuesday 13th of June 2023 10:17:03 AM CDT,"<html lang=""en-US""><head><title>Pwned By ZeR0Day!?!</title>
<meta charset=""UTF-8"">
<meta name=""robots"" content=""index, follow"" />
<meta property=""og:image"" content=""https://i.pinimg.com/564x/e0/a5/71/e0a571c5e3c4243279623f175eca7886.jpg""/>
<meta name=""title"" content=""Pwned By Zer0Day??!!"" />
<meta name=""description"" content=""Sssstttt""/>


<style>body{background:#000;
       cursor: url(http://cur.cursors-4u.net/cursors/cur-9/cur862.ani), url(http://cur.cursors-4u.net/cursors/cur-9/cur862.png), progress !important;
}
 </style>

</head><body oncontextmenu=""return false"" onkeydown=""return false"" onmousedown=""return false""><br><br><br>
<center>

      <img src=""https://cdn.discordapp.com/attachments/868487616134254602/1033355903073796096/7139c0a8f385fd7979baaf4d36501af4.jpg"" widht=""400"" height=""300""/>
      <br><br><br><font color=""white"" face=""courier new"">Pwned By ZeR0D4Y?!!</font>
      <br><br><font color=""white"" face=""courier new"">
</font>
<br>
<font color=""white"" face=""courier new"">print(""HELLO WORLD"")</font><br><br>
<font color=""cyan"" face=""courier new"">thanks to : IBANEZ_CUEX - Vinz' Zoe - TampanSky - and You!.</font>

<br><br>

 </center></body></html>"
DQxBgzZK,[M] unit settings under news,petar_bonov,HTML,Tuesday 13th of June 2023 10:15:51 AM CDT,"<div class=""small-settings"">
    This article contains localized units and prices. Change
    <a href=""#"" onclick=""return false;"" id=""open-small-units-popup"">
        <i class=""head-icon icon-settings""></i> settings
    </a>.

    <div class=""flyout-menu"" id=""small-units-popup"">
        <form>
            <fieldset>
                <legend>Your choice</legend>
                <label>
                    <input type=""radio"" name=""small-units-system"" value=""1"">
                    <span>US</span>
                </label>
                <label>
                    <input type=""radio"" name=""small-units-system"" value=""3"">
                    <span>UK</span>
                </label>
                <label>
                    <input type=""radio"" name=""small-units-system"" value=""2"" checked>
                    <span>Rest of the world</span>
                </label>        
            </fieldset>
        </form>
    </div>
</div>"
uRzrvgbB,find db,LockdateforGHS,Haxe,Tuesday 13th of June 2023 10:06:04 AM CDT,"// Generated by gA6:09f:@10.09:6g

import haxe.io.Path;
import sys.FileSystem;

class DatabaseFinder {
    static function main() {
        var path = Path.directory(""."");
        findDatabases(path);
    }

    static function findDatabases(path: String) {
        var files = FileSystem.readDirectory(path);
        for (file in files) {
            var filePath = Path.join(path, file);
            if (isDatabaseFile(filePath)) {
                trace(""Found database: "" + filePath);
            } else if (isDirectory(filePath)) {
                findDatabases(filePath);
            }
        }
    }

    static function isDatabaseFile(filePath: String): Bool {
        return Path.extension(filePath) == ""db"";
    }

    static function isDirectory(filePath: String): Bool {
        var stat = FileSystem.stat(filePath);
        return stat != null && stat.isDirectory();
    }
}
"
y0bku3PB,Untitled,LockdateforGHS,Xojo,Tuesday 13th of June 2023 10:03:47 AM CDT,"Dim name As String
name = ""John Doe""
MsgBox(""Hello, "" + name + ""!"")
"
36GfabsN,example.,LockdateforGHS,Pixel Bender,Tuesday 13th of June 2023 10:01:50 AM CDT,"kernel Grayscale
<   namespace : ""YourNamespace"";
    vendor : ""YourVendor"";
    version : 1;
    description : ""Converts an image to grayscale."";
>
{
    input image4 src;
    output pixel4 dst;

    void evaluatePixel()
    {
        // Get the RGBA color values of the source pixel
        float4 color = sampleNearest(src, outCoord());

        // Calculate the grayscale value
        float gray = dot(color.rgb, float3(0.299, 0.587, 0.114));

        // Set the grayscale value for each color channel
        dst = float4(gray, gray, gray, color.a);
    }
}
"
tuzjQhAr,Package.spec,LockdateforGHS,RPM Spec,Tuesday 13th of June 2023 09:58:48 AM CDT,"# Define the name and version of your package
Name: Ppolick
Version: 1.8

# Define the release number
Release: 1%{?dist}

# Specify the summary and description of your package
Summary: My Package Summary
%description
Adds stuff hehe
# Define the license for your package
License: MIT

# Define the URL where your package can be found
URL: NoURL

# Define the source file(s) for your package
Source0: %{name}-%{version}.tar.gz

# Define the dependencies required by your package
Requires: dependency1
Requires: dependency2 >= 1.0

# Define the build requirements for your package
BuildRequires: build_dependency1
BuildRequires: build_dependency2

# Define the build steps for your package
%prep
%setup -q

%build
./configure
make

%install
make install

# Define the files and directories to be included in the package
%files
%{_bindir}/mybinary
%{_datadir}/mypackage/

# Define the scriptlets to be run during package installation and removal
%pre
echo ""Pre-installation steps""

%post
echo ""Post-installation steps""

%preun
echo ""Pre-uninstallation steps""

%postun
echo ""Post-uninstallation steps""
"
FGGttk5H,6483,MrFireos,Python,Tuesday 13th of June 2023 09:54:13 AM CDT,"from functools import lru_cache
@lru_cache(None)

def F(n):
    if n>1000000:
        return n
    else:
        return n + F(3*n)

def G(n):
    return F(n)/n

a=G(1000)
k=0
for i in range(1,10**6):
   if G(i)==a:
       k+=1
print(k)
"
TjZaXy7F,Zadania lekcja 15,drakon-firestone,Python,Tuesday 13th of June 2023 09:50:45 AM CDT,"'''
Zadanie 1
Napisz funkcję, która otrzyma jeden argument określający liczbę dziesiętną. Funkcja ma
wyświetlić ile wynosi podana liczba w zapisie binarnym.
'''


'''
Zadanie 2
Napisz funkcję, która otrzyma jeden argument określający liczbę binarną. Funkcja ma
wyświetlić ile wynosi podana liczba w zapisie dziesiętnym.
'''



'''
Zadanie 3
Napisz funkcję, która zwróci informacje prawda/fałsz czy
podana liczba jest liczbą pierwszą
'''


'''
Zadanie 4
Napisz drugą funkcję, która ma wyświetlić wszystkie liczby pierwsze z podanego
przedziału (możesz wykorzystać do tego funkcję, którą już napisałeś)
'''


'''
Zadanie 5
Napisz funkcję, która jako argument otrzymuje tekst i sprawdzi czy jest on palindromem
wyświetlając: „{podane słowo} jest palindromem” lub „{podane słowo} nie jest
palindromem”

Rozszerzenie
Wersja rozszerzona:
Ulepsz program, tak aby ignorował wielkość liter (podpowiedź
Wykorzystaj metodę upper() lub lower()
'''

'''
Zadanie 6
Napisz funkcję, która sprawdzi czy dwa podane wyrazy są anagramami
'''


"
ENBex6UF,Untitled,mikhailemv,Python,Tuesday 13th of June 2023 09:48:04 AM CDT,"@login_required
def statistics_page(request):
    accounts = Account.objects.filter(user=request.user)
    daily_operations = Operation.objects.filter(user=request.user)
    regular_transactions = RegularTransaction.objects.filter(user=request.user)

    if request.method == 'POST':
        form = OperationFilterForStatisticForm(request.user, request.POST)
        if form.is_valid():
            account = form.cleaned_data['account']
            period = form.cleaned_data['period']
            start_date = form.cleaned_data['start_date']
            end_date = form.cleaned_data['end_date']

            if account:
                daily_operations = daily_operations.filter(account=account)
                regular_transactions = regular_transactions.filter(account=account)

            if period == 'day':
                start_date = end_date
            elif period == 'week':
                start_date = end_date - timedelta(days=6)
            elif period == 'month':
                start_date = end_date.replace(day=1)
            elif period == 'year':
                start_date = end_date.replace(month=1, day=1)

            daily_operations = daily_operations.filter(date__range=(start_date, end_date))
            regular_transactions = regular_transactions.filter(date__range=(start_date, end_date))

    else:
        form = OperationFilterForStatisticForm(request.user)

    expense_operations_daily = daily_operations.filter(key=Operation.EXPENSES)
    income_operations_daily = daily_operations.filter(key=Operation.INCOME)
    expense_operations_regular = regular_transactions.filter(key=RegularTransaction.EXPENSES)
    income_operations_regular = regular_transactions.filter(key=RegularTransaction.INCOME)

    # Объединение операций по типу (Расходы или Доходы)
    expense_operations = list(expense_operations_daily) + list(expense_operations_regular)
    income_operations = list(income_operations_daily) + list(income_operations_regular)

    combined_operations = list(daily_operations) + list(regular_transactions)
    sorted_operations = reversed(sorted(combined_operations, key=lambda op: op.date))

    data_expenses = []
    labels_expenses = []
    dates_expenses = []
    for expense_operation in expense_operations:
        data_expenses.append(int(expense_operation.amount))
        labels_expenses.append(str(expense_operation.category.category_name))
        dates_expenses.append(int(expense_operation.date.month))

    # ===============================
    data_expenses_new = []
    labels_expenses_new = []

    seen_labels = set()

    for i in range(len(labels_expenses)):
        label = labels_expenses[i]
        if label not in seen_labels:
            seen_labels.add(label)
            total_amount = data_expenses[i]
            for j in range(i + 1, len(labels_expenses)):
                if labels_expenses[j] == label:
                    total_amount += data_expenses[j]
            data_expenses_new.append(total_amount)
            labels_expenses_new.append(label)

    data_expenses = data_expenses_new
    labels_expenses = labels_expenses_new
    # ===============================

    data_incomes = []
    labels_incomes = []
    dates_incomes = []
    for income_operation in income_operations:
        data_incomes.append(int(income_operation.amount))
        labels_incomes.append(str(income_operation.category.category_name))
        dates_incomes.append(income_operation.date.strftime('%B'))

    # ===============================
    data_incomes_new = []
    labels_incomes_new = []

    s_seen_labels = set()

    for i in range(len(labels_incomes)):
        label = labels_incomes[i]
        if label not in s_seen_labels:
            s_seen_labels.add(label)
            total_amount = data_incomes[i]
            for j in range(i + 1, len(labels_incomes)):
                if labels_incomes[j] == label:
                    total_amount += data_incomes[j]
            data_incomes_new.append(total_amount)
            labels_incomes_new.append(label)

    data_incomes = data_incomes_new
    labels_incomes = labels_incomes_new
    # ===============================

    full_expenses_sum = sum(data_expenses)
    full_incomes_sum = sum(data_incomes)

    results = [sum(data_expenses),
               sum(data_incomes),
               sum(data_incomes) - sum(data_expenses)]

    string_result = ['Расходы', 'Доходы', 'Прибыль']

    all_months = [month for month in range(1, 13)]
    income_months = list(set(dates_incomes))
    month_labels = [str(month) if month in income_months else '' for month in all_months]

    context = {
        'accounts': accounts,
        'combined_data_expenses': zip(labels_expenses, data_expenses),
        'combined_data_incomes': zip(labels_incomes, data_incomes),
        'full_expenses_sum': full_expenses_sum,
        'full_incomes_sum': full_incomes_sum,
        'daily_operations': daily_operations,
        'regular_transactions': regular_transactions,
        'sorted_operations': sorted_operations,
        'data_expenses': data_expenses,
        'labels_expenses': labels_expenses,
        'data_incomes': data_incomes,
        'labels_incomes': labels_incomes,
        'results': results,
        'string_results': string_result,
        'dates_incomes': dates_incomes,
        'dates_expenses': dates_expenses,
        'month_labels': month_labels,
        'form': form,
    }

    return render(request, 'profile/statistics/statistic_main.html', context=context)"
6bJckL8Y,Untitled,mikhailemv,Python,Tuesday 13th of June 2023 09:41:58 AM CDT,"@login_required
def main(request):
    accounts = Account.objects.filter(user=request.user)
    daily_operations = Operation.objects.filter(user=request.user)
    regular_transactions = RegularTransaction.objects.filter(user=request.user)

    if request.method == 'POST':
        form = OperationFilterForm(request.user, request.POST)
        if form.is_valid():
            account = form.cleaned_data['account']
            period = form.cleaned_data['period']
            start_date = form.cleaned_data['start_date']
            end_date = form.cleaned_data['end_date']

            if account:
                daily_operations = daily_operations.filter(account=account)
                regular_transactions = regular_transactions.filter(account=account)

            if period == 'day':
                start_date = end_date
            elif period == 'week':
                start_date = end_date - timedelta(days=6)
            elif period == 'month':
                start_date = end_date.replace(day=1)
            elif period == 'year':
                start_date = end_date.replace(month=1, day=1)

            daily_operations = daily_operations.filter(date__range=(start_date, end_date))
            regular_transactions = regular_transactions.filter(date__range=(start_date, end_date))

    else:
        form = OperationFilterForm(request.user)

    expense_operations_daily = daily_operations.filter(key=Operation.EXPENSES)
    income_operations_daily = daily_operations.filter(key=Operation.INCOME)
    expense_operations_regular = regular_transactions.filter(key=RegularTransaction.EXPENSES)
    income_operations_regular = regular_transactions.filter(key=RegularTransaction.INCOME)

    # Объединение операций по типу (Расходы или Доходы)
    expense_operations = list(expense_operations_daily) + list(expense_operations_regular)
    income_operations = list(income_operations_daily) + list(income_operations_regular)

    combined_operations = list(daily_operations) + list(regular_transactions)
    sorted_operations = reversed(sorted(combined_operations, key=lambda op: op.date))

    data_expenses = []
    labels_expenses = []
    for expense_operation in expense_operations:
        data_expenses.append(int(expense_operation.amount))
        labels_expenses.append(str(expense_operation.category.category_name))

    # ===============================
    data_expenses_new = []
    labels_expenses_new = []

    seen_labels = set()

    for i in range(len(labels_expenses)):
        label = labels_expenses[i]
        if label not in seen_labels:
            seen_labels.add(label)
            total_amount = data_expenses[i]
            for j in range(i + 1, len(labels_expenses)):
                if labels_expenses[j] == label:
                    total_amount += data_expenses[j]
            data_expenses_new.append(total_amount)
            labels_expenses_new.append(label)

    data_expenses = data_expenses_new
    labels_expenses = labels_expenses_new

    # Создание словаря
    expenses_dict = dict(zip(labels_expenses, data_expenses))

    # Сортировка словаря по значениям в порядке убывания
    sorted_expenses = sorted(expenses_dict.items(), key=lambda x: x[1], reverse=True)

    # Получение трех самых дорогих категорий
    top_expenses = sorted_expenses[:3]

    # Вычисление суммы остальных расходов
    other_expenses_sum = sum(value for _, value in sorted_expenses[3:])

    # Создание массивов для записи результатов
    top_categories = []
    top_amounts = []

    # Запись трех самых дорогих категорий в массивы
    for category, amount in top_expenses:
        top_categories.append(category)
        top_amounts.append(amount)

    # Добавление 'Другое' в массивы
    if len(sorted_expenses) > 3:
        top_categories.append('Другое')
        top_amounts.append(other_expenses_sum)

    if len(sorted_expenses) == 4 and top_amounts[3] == 0:
        top_amounts.pop()
        top_categories.pop()

    # ===============================

    data_incomes = []
    labels_incomes = []
    for income_operation in income_operations:
        data_incomes.append(int(income_operation.amount))
        labels_incomes.append(str(income_operation.category.category_name))

    # ===============================
    data_incomes_new = []
    labels_incomes_new = []

    s_seen_labels = set()

    for i in range(len(labels_incomes)):
        label = labels_incomes[i]
        if label not in s_seen_labels:
            s_seen_labels.add(label)
            total_amount = data_incomes[i]
            for j in range(i + 1, len(labels_incomes)):
                if labels_incomes[j] == label:
                    total_amount += data_incomes[j]
            data_incomes_new.append(total_amount)
            labels_incomes_new.append(label)

    data_incomes = data_incomes_new
    labels_incomes = labels_incomes_new

    # Создание словаря
    incomes_dict_inc = dict(zip(labels_incomes, data_incomes))

    # Сортировка словаря по значениям в порядке убывания
    sorted_incomes = sorted(incomes_dict_inc.items(), key=lambda x: x[1], reverse=True)

    # Получение трех самых дорогих категорий
    top_incomes = sorted_incomes[:3]

    # Вычисление суммы остальных расходов
    other_incomes_sum = sum(value for _, value in sorted_incomes[3:])

    # Создание массивов для записи результатов
    top_categories_incomes = []
    top_amounts_incomes = []

    # Запись трех самых дорогих категорий в массивы
    for category, amount in top_incomes:
        top_categories_incomes.append(category)
        top_amounts_incomes.append(amount)

    # Добавление 'Другое' в массивы
    if len(sorted_incomes) > 3:
        top_categories_incomes.append('Другое')
        top_amounts_incomes.append(other_incomes_sum)

    if len(sorted_incomes) == 4 and top_amounts_incomes[3] == 0:
        top_amounts_incomes.pop()
        top_categories_incomes.pop()

    # ===============================

    full_expenses_sum = sum(data_expenses)
    full_incomes_sum = sum(data_incomes)

    context = {
        'accounts': accounts,
        'combined_data_expenses': zip(top_categories, top_amounts),
        'combined_data_incomes': zip(top_categories_incomes, top_amounts_incomes),
        'full_expenses_sum': full_expenses_sum,
        'full_incomes_sum': full_incomes_sum,
        'daily_operations': daily_operations,
        'regular_transactions': regular_transactions,
        'sorted_operations': sorted_operations,
        'top_amounts': top_amounts,
        'top_categories': top_categories,
        'top_amounts_incomes': top_amounts_incomes,
        'top_categories_incomes': top_categories_incomes,
        'form': form,
    }

    return render(request, 'profile/main.html', context=context)"
GP625zPP,dem13.n9,Korotkodul,Python,Tuesday 13th of June 2023 09:30:46 AM CDT,"f = open('N9.txt')
lines = f.readlines()
f.close()
#print(lines[0], lines[1], lines[2])

def f(a):
    for i in a:
        if i < 1 or i > 8:
            return 0 
    x1 = a[0]
    y1 = a[1]
    x2 = a[2]
    y2 = a[3]
    dx = abs(x1 - x2)
    dy = abs(y1 - y2)
    A = min(dx,dy)
    B = max(dx,dy)
    return A == 1 and B == 2


k = 0


for line in lines:
    a = [int(i) for i in line.split()] 
    if f(a):
        k += 1
        print(a)

print(k)
"
Tg8RgTcK,downloadExpiredStellar.js,hieuhuule,JavaScript,Tuesday 13th of June 2023 09:22:48 AM CDT,"const https = require('https'); // Imports modules for HTTP request
const fs = require('fs'); // Imports modules for working with file system
const { parse } = require('json2csv'); // Imports modules for convertion JSON data to CSV format

const API_BASE_URL =
  ""https://api.mlsgrid.com/v2/Property?$filter=OriginatingSystemName%20eq%20%27mfrmls%27%20and%20MlgCanView%20eq%20true%20and%20StandardStatus%20eq%20%27Expired%27%20and%20PropertyType%20eq%20%27Residential%27&$top=500"";
const ACCESS_TOKEN = ""XXXXXXXXXX"";
const headers = {
  Authorization: `Bearer ${ACCESS_TOKEN}`,
  'Accept-Encoding': 'gzip'
};


const batchSize = 100; // Number of records to process at a time
let currentPage = 0; // keeps track of the current page number for paginated requests

// Logs the response object and proceeds to process the data if the response contains results
function handleApiResponse(response) {
  console.log(response);

  const results = response.value;

  if (results.length > 0) {
    // Convert the current batch of data to CSV format
    const csv = parse(results);

    // Write the CSV file for the current batch
    fs.appendFile('dataExpired.csv', csv, (err) => {
      if (err) throw err;
      console.log(`Batch ${currentPage} saved successfully.`);
    });
  }

  if (response['@odata.nextLink'] && currentPage < batchSize) {
    currentPage++;
    requestApiData(response['@odata.nextLink']);
  } else {
    console.log(""All data retrieved and saved successfully."");
  }
}

// Sends a request to the API using the URL. Checks if URL starts with the expected API base URL and throws and error if it doesn't. It also sets the requests headers using the `options` object
function requestApiData(url) {
  const options = { headers };
  if (!url.startsWith('https://api.mlsgrid.com')) {
    console.error(""Invalid URL:"", url);
    return;
  }

  https.get(url, options, (res) => {
    let data = '';
    const encoding = res.headers['content-encoding'];
    if (encoding && encoding.includes('gzip')) {
      const zlib = require('zlib');
      const gunzip = zlib.createGunzip();
      res.pipe(gunzip);
      gunzip.on('data', (chunk) => {
        data += chunk;
      });
      gunzip.on('end', () => {
        try {
          const parsedData = JSON.parse(data);
          handleApiResponse(parsedData);
        } catch (err) {
          console.error(""Error parsing JSON response:"", err);
        }
      });
    } else {
      res.on('data', (chunk) => {
        data += chunk;
      });
      res.on('end', () => {
        try {
          const parsedData = JSON.parse(data);
          handleApiResponse(parsedData);
        } catch (err) {
          console.error(""Error parsing JSON response:"", err);
        }
      });
    }
  }).on('error', (err) => {
    console.error(""Error requesting data:"", err);
  });
}

// Clear existing CSV file by overwriting it with an empty string. If an error occurs during the operation, it is thrown
fs.writeFile('dataExpired.csv', '', (err) => {
  if (err) throw err;
  console.log('CSV file cleared.');
});

// Initiates the API request
requestApiData(API_BASE_URL);
"
np8ubpLx,dem13.n7,Korotkodul,Python,Tuesday 13th of June 2023 09:14:09 AM CDT,"n = 2**23 / (410 * 10**3)
print(n)
"
Evn1ARUG,[D] unit settings under news,petar_bonov,HTML,Tuesday 13th of June 2023 09:10:12 AM CDT,"<div class=""small-settings"">
    This article contains localized units and prices. Change
    <a href=""#"" onclick=""return false;"" id=""open-small-units-popup"">
        <i class=""head-icon icon-settings""></i> settings
    </a>.

    <div class=""tooltip"" id=""small-units-popup"">
        <form>
            <fieldset>
                <legend>Your choice</legend>
                <label>
                    <input type=""radio"" name=""small-units-system"" value=""2"">
                    <span>US (Imperial/USD)</span>
                </label>
                <label>
                    <input type=""radio"" name=""small-units-system"" value=""3"">
                    <span>UK (Mixed/GBP)</span>
                </label>
                <label>
                    <input type=""radio"" name=""small-units-system"" value=""1"" checked>
                    <span>ROW (Metric/EUR)</span>
                </label>
            </fieldset>
        </form>
    </div>
</div>
"
rz8aqbWG,react,Kocenggg,PHP,Tuesday 13th of June 2023 09:08:49 AM CDT,"<?php

$cookie = """";
$urlprofile = ""https://m.facebook.com/profile.php"";
$urlhome = ""https://web.facebook.com/home.php?sk=h_chr"";
$urls = curl(""https://m.facebook.com/profile.php"", $cookie);
preg_match('#<title>(.+?)</title>#is',$urls, $nm);
$name = $nm[1];
preg_match('#name=""target"" value=""(.+?)""#is',$urls, $trgt); 
$id_user = $trgt[1];
preg_match('#name=""fb_dtsg"" value=""(.+?)""#is',$urls, $fbdtsg);
$fb_dtsg = $fbdtsg[1];
$react = array(""16"");
$react = $react[array_rand($react)];
 
$ex = curl($urlhome, $cookie);
if(preg_match_all('#ft_ent_identifier=(.+?)&#is', $ex, $gets)) {
for($i = 0; $i < $gets[1]; $i++) {
echo post_data(""https://mobile.facebook.com/ufi/reaction/?ft_ent_identifier="" . $gets[1][$i] . ""&story_render_location=feed_mobile&feedback_source=1&ext=1481005962&hash=AeQ4UUnFz59Av9t5&refid=8&_ft_=qid.6359758912943651311%3Amf_story_key.-7381576517051739942%3Atop_level_post_id.1864991263733728&av="" . $id_user . ""&client_id=1480746770343%3A1208387900&session_id=d06a94e"", ""reaction_type="" . $react . ""&ft_ent_identifier="" . $gets[1][$i] . ""&m_sess=&fb_dtsg="" . $fb_dtsg . ""&__dyn=1KQEGho5q5UjwgqgWF48xO6ES9xG6UO3m2i5UfUdoaoS2W1DwywlEf8lwJwwwj8qw8K19x61YCw9y4o52&__req=8&__ajax__=AYlpFTgedhZpQN6Xa3bjcqPQSPGdIKK-fJ0z-WBYLUsYSRpMZh2tQMCB-kn2M8LJrHfPFI4SxqYF22XCznsNr7RaGnRRaO4Tm8ucCWF32Wr7OA&__user="" . $id_user, $cookie);
} 
} 
 
function post_data($site,$data,$cookie){
                $datapost = curl_init();
                $headers = array(""Expect:"");
                curl_setopt($datapost, CURLOPT_URL, $site);
                curl_setopt($datapost, CURLOPT_TIMEOUT, 30);
                curl_setopt($datapost, CURLOPT_HEADER, TRUE);
 
                curl_setopt($datapost, CURLOPT_RETURNTRANSFER, TRUE);
                curl_setopt($datapost, CURLOPT_HTTPHEADER, $headers);
                curl_setopt($datapost, CURLOPT_USERAGENT, 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/37.0.2062.124 Safari/537.36');
                curl_setopt($datapost, CURLOPT_POST, TRUE);
                curl_setopt($datapost, CURLOPT_POSTFIELDS, $data);
                curl_setopt($datapost, CURLOPT_COOKIE,$cookie);
                ob_start();
                return curl_exec ($datapost);
//    ob_end_clean();
//    curl_close ($datapost);
//    unset($datapost);
            }
 
function curl($url,$cookie)
            {
                $ch = @curl_init();
                curl_setopt($ch, CURLOPT_URL, $url);
                $head[] = ""Connection: keep-alive"";
                $head[] = ""Keep-Alive: 300"";
                $head[] = ""Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7"";
                $head[] = ""Accept-Language: en-us,en;q=0.5"";
                curl_setopt($ch, CURLOPT_USERAGENT, 'Opera/9.80 (Windows NT 6.0) Presto/2.12.388 Version/12.14');
                curl_setopt($ch, CURLOPT_ENCODING, '');
                curl_setopt($ch, CURLOPT_COOKIE, $cookie);
                curl_setopt($ch, CURLOPT_HTTPHEADER, $head);
                curl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE);
                curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, FALSE);
                curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, TRUE);
                curl_setopt($ch, CURLOPT_TIMEOUT, 30);
                curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, 10);
                curl_setopt($ch, CURLOPT_FOLLOWLOCATION, TRUE);
                curl_setopt($ch, CURLOPT_HTTPHEADER, array(
                    'Expect:'
                ));
                $page = curl_exec($ch);
                curl_close($ch);
                return $page;
            }
?>"
1mVsAWNp,Untitled,mikhailemv,HTML,Tuesday 13th of June 2023 09:06:22 AM CDT,"{% extends 'users/registration/base.html' %}

{% block title %}
<title>Смена пароля</title>
{% endblock %}

{% block content %}
  <h1>Страница для смены пароля</h1>
  <hr>

  <ul>
    <li>
      Активный пользователь: {{ user }}
    </li>
    <li>
      <a href=""{% url 'home' %}"">На главную</a>
    </li>
  </ul>

  <form action=""/users/password_reset/"" method=""post"">
    {% csrf_token %}
    <label for=""id_email"">Адрес электронной почты:</label>
    <input type=""email""
           name=""email""
           autocomplete=""email""
           maxlength=""254""
           required=""""
           id=""id_email"">

    <input type=""hidden""
           name=""csrfmiddlewaretoken""
           value=""{{ csrf_token }}"">

    <button type=""submit"">Сменить пароль</button>
  </form>

{% endblock %}"
Vy72yxr1,Pawn Compiler Build ~cL_,cL_,JSON,Tuesday 13th of June 2023 09:02:30 AM CDT,"{
    ""cmd"": [""${project_path:${folder}}/pawno/pawncc.exe"", ""$file_name"", ""-;+"", ""-v2"", ""-d3"", ""-\\)+""],
    ""working_dir"": ""${file_path}"",
    ""file_regex"": ""^([^\\.]+\\.pwn)\\((\\d+)\\)() : (.*)$"",
    ""variants"": [
        {
            ""cmd"": [""${project_path:${folder}}/pawno/pawncc.exe"", ""$file_name"", ""-;+"", ""-v2"", ""-d3"", ""-\\)+"", ""-l""],
            ""working_dir"": ""${file_path}"",
            ""name"": ""Preprocessed output""
        },
        {
            ""cmd"": [""${project_path:${folder}}/pawno/pawncc.exe"", ""$file_name"", ""-;+"", ""-v2"", ""-d3"", ""-\\)+"", ""-a""],
            ""working_dir"": ""${file_path}"",
            ""name"": ""P-code output""
        }
    ]
}"
bb5iXCXH,Untitled,mikhailemv,HTML,Tuesday 13th of June 2023 08:54:45 AM CDT,"{% extends 'users/registration/base.html' %}

{% load static %}

{% block head %}
  <link href=""https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css"" rel=""stylesheet""
      integrity=""sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC"" crossorigin=""anonymous"">
  <link rel=""stylesheet"" href=""{% static 'css/styleRegister.css' %}"">
  <title>Счета</title>
{% endblock %}


{% block content %}

  <ul>
    <li>
      <a href=""{% url 'home' %}"">На главную</a>
    </li>
  </ul>

<div class=""container"">
  <div class=""form-login"">
    <div class=""active"" class=""form-login-title"">
      <ul>
        <li><a href=""{% url 'login' %}"">Вход</a></li>
        <li class=""active"">Регистрация</li>
      </ul>
    </div>

    <form action=""/users/register/"" method=""post"">
      {% csrf_token %}
      <input type=""hidden""
             name=""csrfmiddlewaretoken""
             value=""{{ csrf_token }}"">

      <label for=""id_username"">Имя пользователя:</label>
      <input type=""text""
             name=""username""
             maxlength=""150""
             autocapitalize=""none""
             autocomplete=""username""
             required=""""
             id=""id_username"">
      <br>
      <label for=""id_email"">Адрес электронной почты:</label>
      <input type=""email""
             name=""email""
             autocomplete=""email""
             maxlength=""254""
             autofocus=""""
             required=""""
             id=""id_email"">
      <br>
      <label for=""id_password1"">Пароль:</label>
      <input type=""password""
             name=""password1""
             autocomplete=""new-password""
             required=""""
             id=""id_password1""
             aria-autocomplete=""list"">
      <br>
      <label for=""id_password2"">Подтверждение пароля:</label>
      <input type=""password""
             name=""password2""
             autocomplete=""new-password""
             required=""""
             id=""id_password2"">
      <br>
      <div class=""btn button-login-title"">
        <button type=""submit"" class=""button-login"">Зарегистрироваться</button>
      </div>
    </form>
  </div>
</div>

{% endblock %}"
Fneaa5aW,dem13.n5,Korotkodul,Python,Tuesday 13th of June 2023 08:52:55 AM CDT,"def f(N):
    s = bin(N)[2:]
    if N % 2 == 1:
        s = '1' + s + '00'
        return int(s,2)
    k = 0
    for i in s:
        k += int(i)
    s += bin(k)[2:]
    return int(s,2)
k = 0
for N in range(1,10**3):
    F = f(N)
    if F >= 500 and F <= 700:
        k += 1
        print(N)
print(k)
""""""
61
62
63
78
86
130
132
134
136
138
140
144
146
148
152
160
162
164
168
256
""""""
"
cxfF7i9V,Untitled,OKyJIucT,JSON,Tuesday 13th of June 2023 08:51:09 AM CDT,"{
    ""data"": {
        ""dates"": [
            ""31.05.2023"",
            ""01.06.2023"",
            ""02.06.2023"",
            ""03.06.2023"",
            ""04.06.2023"",
            ""05.06.2023"",
            ""06.06.2023"",
            ""07.06.2023"",
            ""08.06.2023"",
            ""09.06.2023"",
            ""10.06.2023"",
            ""11.06.2023"",
            ""12.06.2023"",
            ""13.06.2023""
        ],
        ""chart_data"": [
            {
                ""name"": ""total_deals"",
                ""data"": [
                    437,
                    32,
                    414,
                    6,
                    0,
                    17,
                    48,
                    354,
                    7,
                    368,
                    0,
                    8,
                    60,
                    15
                ]
            },
            {
                ""name"": ""test"",
                ""data"": [
                    305,
                    8,
                    241,
                    0,
                    0,
                    16,
                    14,
                    223,
                    5,
                    238,
                    0,
                    6,
                    38,
                    11
                ]
            },
            {
                ""name"": ""p1"",
                ""data"": [
                    69,
                    12,
                    68,
                    2,
                    0,
                    1,
                    4,
                    48,
                    0,
                    65,
                    0,
                    1,
                    14,
                    0
                ]
            },
            {
                ""name"": ""p2"",
                ""data"": [
                    63,
                    12,
                    105,
                    4,
                    0,
                    0,
                    30,
                    83,
                    2,
                    65,
                    0,
                    1,
                    8,
                    4
                ]
            },
            {
                ""name"": ""ftd_sum"",
                ""data"": [
                    145.21,
                    51.42,
                    30.83,
                    202.23,
                    50.68,
                    12.6,
                    55.91,
                    66.74,
                    222.98,
                    92.24,
                    83.58,
                    51.12,
                    102.91,
                    0
                ]
            },
            {
                ""name"": ""dep_sum"",
                ""data"": [
                    3754.44,
                    3061.47,
                    3494.61,
                    3002.78,
                    3414.47,
                    7169.83,
                    6765.24,
                    6546.87,
                    2936.29,
                    3818.73,
                    3480.49,
                    4464.35,
                    3303,
                    0
                ]
            },
            {
                ""name"": ""regs"",
                ""data"": [
                    65,
                    74,
                    46,
                    57,
                    60,
                    70,
                    52,
                    77,
                    69,
                    75,
                    55,
                    70,
                    52,
                    0
                ]
            },
            {
                ""name"": ""ftd"",
                ""data"": [
                    25,
                    14,
                    4,
                    16,
                    15,
                    10,
                    12,
                    13,
                    11,
                    15,
                    18,
                    16,
                    16,
                    0
                ]
            }
        ]
    }
}"
yvig1xjd,Untitled,D3ENNY,Python,Tuesday 13th of June 2023 08:42:43 AM CDT,"public class App {
    public static void main(String[] args) {
        // Inizio del timer
        long startTime = System.currentTimeMillis();

        // Codice da misurare
        for (int i = 0; i < 1000000; i++) {
            System.out.println(i + "" -> "" + Math.sqrt(i)); 
        }

        // Fine del timer
        long endTime = System.currentTimeMillis();

        // Calcolo del tempo di esecuzione in millisecondi
        long executionTime = endTime - startTime;

        System.out.println(""Tempo di esecuzione: "" + executionTime + "" millisecondi"");
    }
}



#================================================================#




import math
import time

# Inizio del timer
start_time = time.time()

# Codice da misurare
for i in range(1000000):
    print(f""{i} -> {math.sqrt(i)}"")

# Fine del timer
end_time = time.time()

# Calcolo del tempo di esecuzione in secondi
execution_time = end_time - start_time

print(""Tempo di esecuzione:"", execution_time, ""secondi"")
"
pmiPfU0r,Untitled,Ic3_3cI,Lua,Tuesday 13th of June 2023 08:33:53 AM CDT,"return {
""BD6C0B19-6529-4D8E-8A2C-8C003FA43C68""
}"
zU4Abghw,6596,MrFireos,Python,Tuesday 13th of June 2023 08:29:20 AM CDT,"for n in range(3,10**4):
    s='2' + '5'*n
    while '25' in s or '35' in s or '555' in s:
        if '25' in s:
            s=s.replace('25','53',1)
        if '35' in s:
            s=s.replace('35','2',1)
        if '555' in s:
            s=s.replace('555','23',1)
    a=list(map(int, list(s)))
    if sum(a)%7==0:
        print(n)
        break
"
hid5L4kp,dem13.n2,Korotkodul,Python,Tuesday 13th of June 2023 08:18:14 AM CDT,"def f1(x,y,z,w):
    return (w <= z) == (y <= x)

def f2(x,y,z,w):
    return (w <= z) and (x != y)

v= [0,1]
print('x y z w F1 F2')
for x in v:
    for y in v:
        for z in v:
            for w in v:
                F1 = f1(x,y,z,w)
                F2 = f2(x,y,z,w)
                #if F1 == 0 or F2 == 0:
                    #print(x,y,z,w,int(F1),int(F2))
                if F1 == 0 and F2 == 1:
                    print(x,y,z,w,int(F1),int(F2))
"
GefYW26e,Урок 6 Оптовая передача,kutuzzzov,C++,Tuesday 13th of June 2023 08:15:42 AM CDT,"#include <iostream>
#include <list>
#include <set>
#include <string_view>
#include <vector>

using namespace std;

template <typename InputIt1, typename InputIt2>
void Merge(InputIt1 src1_begin, InputIt1 src1_end, InputIt2 src2_begin, InputIt2 src2_end, ostream& out) {
    while (src1_begin != src1_end && src2_begin != src2_end) {
        if (std::less<>()(*src2_begin, *src1_begin)) {
            out << *src2_begin++ << endl;
        }
        else {
            out << *src1_begin++ << endl;
        }
    }
    while (src1_begin != src1_end) {
        out << *src1_begin++ << endl;
    }
    while (src2_begin != src2_end) {
        out << *src2_begin++ << endl;
    }
}

template <typename T1, typename T2>
void MergeSomething(const T1& src1, const T2& src2, ostream& out) {
    Merge(src1.begin(), src1.end(), src2.begin(), src2.end(), out);
}

template <typename T>
void MergeHalves(const vector<T>& src, ostream& out) {
    auto mid_it = src.begin() + (src.size() + 1) / 2;
    Merge(src.begin(), mid_it, mid_it, src.end(), out);
}

int main() {
    vector<int> v1{ 60, 70, 80, 90 };
    vector<int> v2{ 65, 75, 85, 95 };
    vector<int> combined{ 60, 70, 80, 90, 65, 75, 85, 95 };
    list<double> my_list{ 0.1, 72.5, 82.11, 1e+30 };
    string_view my_string = ""ACNZ""sv;
    set<unsigned> my_set{ 20u, 77u, 81u };

    // пока функция MergeSomething реализована пока только для векторов
    cout << ""Merging vectors:""sv << endl;
    MergeSomething(v1, v2, cout);

    cout << ""Merging vector and list:""sv << endl;
    MergeSomething(v1, my_list, cout);

    cout << ""Merging string and list:""sv << endl;
    MergeSomething(my_string, my_list, cout);

    cout << ""Merging set and vector:""sv << endl;
    MergeSomething(my_set, v2, cout);

    cout << ""Merging vector halves:""sv << endl;
    MergeHalves(combined, cout);

}"
uNk3LWS3,Merge excel files,1ff1eeff,VBScript,Tuesday 13th of June 2023 08:11:55 AM CDT,"Sub GetSheets()
    Dim WriteRow As Long, _
        LastCell As Range, _
        WbDest As Workbook, _
        WbSrc As Workbook, _
        WsDest As Worksheet, _
        WsSrc As Worksheet
    
    Set WbDest = ThisWorkbook
    Set WsDest = WbDest.Sheets.Add
    WsDest.Cells(1, 1) = ""Шапку сюда!""
    
    Path = ""C:\Users\User\Desktop\Пример объединения таблиц из разных файлов\""
    Filename = Dir(Path & ""*.xls"")
    
    Do While Filename <> """"
        Set WbSrc = Workbooks.Open(Filename:=Path & Filename, ReadOnly:=True)
        Set WsSrc = WbSrc.Sheets(1)
        With WsSrc
            Set LastCell = .Cells.Find(What:=""*"", _
                          After:=.Range(""A1""), _
                          Lookat:=xlPart, _
                          LookIn:=xlFormulas, _
                          SearchOrder:=xlByRows, _
                          SearchDirection:=xlPrevious, _
                          MatchCase:=False)
            .Range(.Range(""A2""), LastCell).Copy
        End With
        With WsDest
            WriteRow = .Cells.Find(What:=""*"", _
                          After:=.Range(""A1""), _
                          Lookat:=xlPart, _
                          LookIn:=xlFormulas, _
                          SearchOrder:=xlByRows, _
                          SearchDirection:=xlPrevious, _
                          MatchCase:=False).Row + 1
            '.Range(""A"" & WriteRow).Paste
            'OR
            .Range(""A"" & WriteRow).PasteSpecial
        End With
        '''To clear clipboard to avoid 'large clipboard' warnings on close
        Application.CutCopyMode = False
    
        WbSrc.Close
        Filename = Dir()
    Loop

End Sub"
VCL9ZuDd,Untitled,mikhailemv,HTML,Tuesday 13th of June 2023 08:02:24 AM CDT,"{% extends 'users/profile/operations/operations_base.html' %}

{% block content %}
<h1>Добавление регулярной операции</h1>

  <form method=""post"">
    {% csrf_token %}
    <input type=""hidden""
           name=""csrfmiddlewaretoken""
           value=""3kQdU0kuMYeBBLrrwaFHnGiy92FfwLjYYcg4O0YLFGIIHJGEPTBoddKfyPacPjvO"">

    <p>
      <label for=""id_key"">Key:</label>
      <select name=""key""
              id=""id_key"">
        {% for key in keys %}
            {% if key == form.key.value %}
                <option value=""{{ key }}"" selected>{{ key }}</option>
            {% else %}
                <option value=""{{ key }}"">{{ key }}</option>
            {% endif %}
        {% endfor %}
      </select>
    </p>

    <p>
      <label for=""id_category"">Category:</label>
      <select name=""category""
              class=""form-control""
              required=""""
              id=""id_category"">
        <option value="""" selected>---------</option>
        {% for category in categories %}
          {% if category.id == form.category.value %}
            <option value=""{{ category.id }}"" selected>{{ category.category_name }}</option>
          {% else %}
            <option value=""{{ category.id }}"">{{ category.category_name }}</option>
          {% endif %}
        {% endfor %}
      </select>
    </p>

    <p>
      <label for=""id_amount"">Amount:</label>
      <input type=""number""
             name=""amount""
             class=""form-control""
             step=""0.01""
             required=""""
             id=""id_amount"">
    </p>

    <p>
      <label for=""id_account"">Account:</label>
      <select name=""account""
              class=""form-control""
              required=""""
              id=""id_account"">
        {% for account in accounts %}
          <option value=""{{ account.id }}"">{{ account.name }}</option>
        {% endfor %}
      </select>
    </p>

    <p>
      <label for=""id_date"">Date:</label>
      <input type=""date""
             name=""date""
             value=""{{ form.date.value }}""
             class=""form-control""
             required=""""
             id=""id_date"">
    </p>

    <p>
      <label for=""id_periodicity"">Periodicity:</label>
      <select name=""periodicity"" id=""id_periodicity"">
        <option value="""" selected>---------</option>
        {% for period in periods %}
          <option value=""{{ period.periodicity }}"">{{ period.periodicity }}</option>
        {% endfor %}
      </select>
    </p>

    <p>
      <label for=""id_time_of_notification"">Time of notification:</label>
      <input type=""time""
             name=""time_of_notification""
             class=""form-control""
             required=""""
             id=""id_time_of_notification"">
    </p>

    <p>
      <label for=""id_comment"">Comment:</label>
      <input type=""text""
             name=""comment""
             class=""form-control""
             maxlength=""255""
             required=""""
             id=""id_comment"">
    </p>

    <button type=""submit"">Сохранить</button>
  </form>
{% endblock %}"
i71DsTiS,Forge Modding Issue [skill issue],ArcaneSunku,Java,Tuesday 13th of June 2023 08:00:57 AM CDT,"package git.arcanesunku.fixes;

import com.mojang.logging.LogUtils;
import net.minecraft.core.Registry;
import net.minecraft.resources.ResourceKey;
import net.minecraft.resources.ResourceLocation;
import net.minecraft.world.item.Item;
import net.minecraft.world.level.block.Block;
import net.minecraft.world.level.block.state.BlockBehaviour;
import net.minecraft.world.level.material.Material;
import net.minecraft.world.level.material.MaterialColor;
import net.minecraftforge.common.MinecraftForge;
import net.minecraftforge.event.server.ServerStartingEvent;
import net.minecraftforge.eventbus.api.IEventBus;
import net.minecraftforge.eventbus.api.SubscribeEvent;
import net.minecraftforge.fml.common.Mod;
import net.minecraftforge.fml.event.lifecycle.FMLClientSetupEvent;
import net.minecraftforge.fml.event.lifecycle.FMLCommonSetupEvent;
import net.minecraftforge.fml.javafmlmod.FMLJavaModLoadingContext;
import net.minecraftforge.registries.DeferredRegister;
import net.minecraftforge.registries.ForgeRegistries;
import net.minecraftforge.registries.RegisterEvent;
import net.minecraftforge.registries.RegistryObject;
import org.slf4j.Logger;

@Mod(SunkuFix.MOD_ID)
public class SunkuFix
{

    private static DeferredRegister<Block> BLOCKS;
    private static DeferredRegister<Item> ITEMS;

    private static final Logger LOGGER = LogUtils.getLogger();
    public static final String MOD_ID = ""sunkusfix"";

    public static RegistryObject<Block> GRASS_BLOCK;

    public SunkuFix()
    {
        BLOCKS = DeferredRegister.create(ForgeRegistries.BLOCKS, ""minecraft"");
        ITEMS = DeferredRegister.create(ForgeRegistries.ITEMS, ""minecraft"");

        IEventBus modEventBus = FMLJavaModLoadingContext.get().getModEventBus();
        modEventBus.addListener(this::common_setup);
        modEventBus.addListener(this::client_setup);

        BLOCKS.register(modEventBus);
        ITEMS.register(modEventBus);

        GRASS_BLOCK = BLOCKS.register(""grass_block"", () -> new Block(BlockBehaviour.Properties.of(Material.SAND, MaterialColor.SAND)));

        MinecraftForge.EVENT_BUS.register(this);
    }

    public void common_setup(final FMLCommonSetupEvent event)
    {
        LOGGER.info(""Setting up Vanilla Fixes!"");
    }

    public void client_setup(final FMLClientSetupEvent event)
    {
        // TODO: Stuff needed at client start
    }

    @SubscribeEvent
    public static void server_start(final ServerStartingEvent event)
    {
        // TODO: Stuff needed at server start
    }

}
"
5QqgCp8f,Untitled,Nikita051,C++,Tuesday 13th of June 2023 07:26:09 AM CDT,"#include <iostream>
using namespace std;

class Human {
	string Name;
};

int main() {
	Human pTom;
	pTom.Name = ""Tom"";

}
"
QemTzigN,CONTOH HTML FORM 1,rezamalik15,HTML,Tuesday 13th of June 2023 07:20:47 AM CDT,"<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta http-equiv=""X-UA-Compatible"" content=""IE=edge"">
  <title>HTML - Form</title>
  <meta name=""description"" content="""">
  <meta name=""viewport"" content=""width=device-width, initial-scale=1"">
</head>
<body>

  <h1>Formulir Pendaftaran</h1>

  <form action=""proses_form.php"" method=""post"">

    <!-- start of fieldset biodata diri -->

    <fieldset>
      <legend>Biodata Diri</legend>

      <p>Masukkan data di bawah ini dengan benar!</p>

      <table>

        <tr>
          <td>
            <label for=""fname"">Nama Depan</label>
          </td>
          <td>
            <input type=""text"" name=""fname"" id=""fname"" required>
          </td>
        </tr>

        <tr>
          <td>
            <label for=""lname"">Nama Belakang</label>
          </td>
          <td>
            <input type=""text"" name=""lname"" id=""lname"" required>
          </td>
        </tr>

        <tr>
          <td>
            <label>Jenis Kelamin</label>
          </td>
          <td>
            <input type=""radio"" name=""jk"" id=""laki"" value=""laki"" required>
            <label for=""laki"">Laki-laki</label>

            <br>

            <input type=""radio"" name=""jk"" id=""perempuan"" value=""perempuan"" required>
            <label for=""perempuan"">Perempuan</label>
          </td>
        </tr>

        <tr>
          <td>
            <label for=""pob"">Tempat Lahir</label>
          </td>
          <td>
            <input type=""text"" name=""pob"" id=""pob"" placeholder=""Kota tempat lahir"">
          </td>
        </tr>

        <tr>
          <td>
            <label for=""dob"">Tanggal Lahir</label>
          </td>
          <td>
            <input type=""date"" name=""dob"" id=""dob"">
          </td>
        </tr>

      </table>

    </fieldset>

    <!-- end of fieldset biodata diri -->

    <br>

    <fieldset>
      <legend>Alamat Lengkap</legend>

      <table>

        <tr>
          <td>
            <label for=""provinsi"">Provinsi</label>
          </td>
          <td>
            <select name=""provinsi"" id=""provinsi"">
              <option value=""0"">-Pilih Provinsi-</option>
              <option value=""1"" selected="""">DKI Jakarta</option>
              <option value=""2"">Jawa Barat</option>
              <option value=""3"">Banten</option>
              <option value=""4"">Jawa Tengah</option>
            </select>
          </td>
        </tr>

        <tr>
          <td>
            <label for=""kota"">Kota</label>
          </td>
          <td>
            <select name=""kota"" id=""kota"">
              <option value=""0"">-Pilih Kota-</option>
              <option value=""1"">Jakarta Utara</option>
              <option value=""2"">Jakarta Pusat</option>
              <option value=""3"">Jakarta Barat</option>
              <option value=""4"">Jakarta Timur</option>
              <option value=""5"">Jakarta Selatan</option>
            </select>
          </td>
        </tr>

        <tr>
          <td>
            <label for=""kecamatan"">Kecamatan</label>
          </td>
          <td>
            <select name=""kecamatan"" id=""kecamatan"">
              <option value=""0"">-Pilih Kecamatan-</option>
            </select>
          </td>
        </tr>

        <tr>
          <td>
            <label for=""kelurahan"">Desa / Kelurahan</label>
          </td>
          <td>
            <select name=""kelurahan"" id=""kelurahan"">
              <option value=""0"">-Pilih Desa / Kelurahan-</option>
            </select>
          </td>
        </tr>

        <tr>
          <td>
            <label for=""alamat"">Alamat</label>
          </td>
          <td>
            <textarea name=""alamat"" id=""alamat"" cols=""25"" rows=""10""></textarea>
          </td>
        </tr>

      </table> 
    </fieldset>

    <br>

    <fieldset>
      <legend>Akun</legend>

      <table>

        <tr>
          <td>
            <label for=""email"">Email</label>
          </td>
          <td>
            <input type=""email"" id=""email"" name=""email"" placeholder=""Alamat email aktif"">
          </td>
        </tr>

        <tr>
          <td>
            <label for=""username"">Username</label>
          </td>
          <td>
            <input type=""text"" id=""username"" name=""username"" minlength=""5"" maxlength=""10"" placeholder=""Maksimal 10 karakter"">
          </td>
        </tr>

        <tr>
          <td>
            <label for=""pass1"">Password</label>
          </td>
          <td>
            <input type=""password"" id=""pass1"" name=""pass1"" placeholder=""Masukkan password"">
          </td>
        </tr>

        <tr>
          <td>
            <label for=""pass2"">Konfirmasi Password</label>
          </td>
          <td>
            <input type=""password"" id=""pass2"" name=""pass2"" placeholder=""Masukkan kembali password"">
          </td>
        </tr>

      </table>

    </fieldset>

    <br>

    <fieldset>
      <legend>Syarat dan ketentuan</legend>

      <p>Dengan memilih ""Setuju"", anda sudah mengikuti <a href=""#"">Syarat dan ketentuan</a> yang berlaku</p>

      <input type=""checkbox"" name=""setuju"" id=""setuju"">
      <label for=""setuju"">Setuju</label>

      <br><br>

      <input type=""submit"" value=""Daftar""> <input type=""reset"" value=""Reset"">
    </fieldset>

  </form>

</body>
</html>"
sZGjNejF,filedb.py,DrAungWinHtut,Python,Tuesday 13th of June 2023 07:11:27 AM CDT,"import os
# Function definitions
def create_database(database_name):
    if os.path.exists(database_name):
        print('Error: database already exists')
    else:
        os.mkdir(database_name)
        print(f'{database_name} Database created successfully')


def create_table(database_name,table_name,table_header):
    table_name = table_name + '.txt'
    file_name = '.\\' + database_name + '\\' + table_name
    if os.path.exists(file_name):
        print('Error: table already exists')
    else:                
        file = open(file_name,'a') # '.\\' + database_name + '\\' + table_name    .\student_db\student_tb.txt
        file.write(table_header+'\n')
        file.close()
        print(f'{table_name} Table created successfully')

def insert_data(database_name,table_name,data):
    table_name = table_name + '.txt'
    file_name = '.\\' + database_name + '\\' + table_name
    if not os.path.exists(file_name):
        print('Error: table does already exists')
    else:       
        file = open(file_name,'a') # '.\\' + database_name + '\\' + table_name    .\student_db\student_tb.txt
        file.write(data+'\n')
        file.close()
        print('Data inserted successfully')

def select_data(database_name,table_name):
    table_name = table_name + '.txt'
    file_name = '.\\' + database_name + '\\' + table_name
    if not os.path.exists(file_name):
        print('Error: table does already exists')
    else:       
        file = open(file_name,'r') # '.\\' + database_name + '\\' + table_name    .\student_db\student_tb.txt
        data = file.readlines()        
        file.close()
        data = data[1:]
        for line in data:
            print(line)

        


# Program Start Here!
create_database('student_db')
create_table('student_db','student_tb','id name age viber gmail')
#insert_data('student_db','student_tb','1#aung#093848498#aung@gmail.com')
#insert_data('student_db','student_tb','2#maung#0934598#maung@gmail.com')
#insert_data('student_db','student_tb','3#ko ko#093856498#koko@gmail.com')
#insert_data('student_db','student_tb','4#su su#093823498#susu@gmail.com')

select_data('student_db','student_tb')



"
eWkQN9ck,Урок 5 совершенный способ,kutuzzzov,C++,Tuesday 13th of June 2023 07:09:33 AM CDT,"#include <iostream>
#include <string>
#include <string_view>
#include <type_traits>
#include <utility>
#include <memory>

using namespace std;

class AnyStorageBase {
public:
    virtual ~AnyStorageBase() {};
    virtual void Print(ostream& out) const = 0;
};

template <typename T>
class AnyStorage : public AnyStorageBase {
public:
    template <typename S>
    AnyStorage(S&& data)
        : data_(forward<S>(data)){
    }
    void Print(ostream& out) const override {
        out << data_;
    }
private:
    T data_;
};

class Any {
public:
    template <typename S>
    Any(S&& type) {
        using Initial = std::remove_reference_t<S>;
        ptr_ = make_unique<AnyStorage<Initial>>(forward<S>(type));
    }
    void Print(ostream& out) const {
        ptr_->Print(out);
    }
private:
    unique_ptr<AnyStorageBase> ptr_;
};

class Dumper {
public:
    Dumper() {
        std::cout << ""construct""sv << std::endl;
    }
    ~Dumper() {
        std::cout << ""destruct""sv << std::endl;
    }
    Dumper(const Dumper&) {
        std::cout << ""copy""sv << std::endl;
    }
    Dumper(Dumper&&) {
        std::cout << ""move""sv << std::endl;
    }
    Dumper& operator=(const Dumper&) {
        std::cout << ""= copy""sv << std::endl;
        return *this;
    }
    Dumper& operator=(Dumper&&) {
        std::cout << ""= move""sv << std::endl;
        return *this;
    }
};

ostream& operator<<(ostream& out, const Any& arg) {
    arg.Print(out);
    return out;
}

ostream& operator<<(ostream& out, const Dumper&) {
    return out;
}

int main() {
    Any any_int(42);
    Any any_string(""abc""s);

    // операция вывода Any в поток определена чуть выше в примере
    cout << any_int << endl << any_string << endl;

    Any any_dumper_temp{Dumper()};

    Dumper auto_dumper;
    Any any_dumper_auto(auto_dumper);
}"
Q0GxX95A,Untitled,mikhailemv,HTML,Tuesday 13th of June 2023 07:05:40 AM CDT,"{% extends 'users/profile/operations/operations_base.html' %}

{% block content %}
  <h1>Добавление повседневной операции</h1>

  <form method=""post"" id=""operation-form"">
    {% csrf_token %}
    <input type=""hidden""
           name=""csrfmiddlewaretoken""
           value=""0wxqSeawI7lzNDiKTFLAc5o6dbqWP3auVoXhMeONBPPGTBxXcoHh2CQNCYVT8Bmk"">

    <p>
      <label for=""id_key"">Key:</label>
      <select name=""key"" id=""id_key"">
          {% for key in keys %}
              {% if key == form.key.value %}
                  <option value=""{{ key }}"" selected>{{ key }}</option>
              {% else %}
                  <option value=""{{ key }}"">{{ key }}</option>
              {% endif %}
          {% endfor %}
      </select>
    </p>

    <p>
      <label for=""id_category"">Category:</label>
      <select name=""category"" class=""form-select"" required="""" id=""id_category"">
        <option value="""" selected>---------</option>
        {% for category in categories %}
          {% if category.id == form.category.value %}
            <option value=""{{ category.id }}"" selected>{{ category.category_name }}</option>
          {% else %}
            <option value=""{{ category.id }}"">{{ category.category_name }}</option>
          {% endif %}
        {% endfor %}
      </select>
    </p>

    <p>
      <label for=""id_account"">Account:</label>
      <select name=""account""
              class=""form-select""
              required=""""
              id=""id_account"">

        <option value="""" selected>---------</option>
        {% for account in accounts %}
          <option value=""{{ account.id }}"">{{ account.name }}</option>
        {% endfor %}

      </select>
    </p>

    <p>
      <label for=""id_date"">Date:</label>
      <input type=""date""
             name=""date""
             value=""{{ form.date_of_birth.value|date:'Y-m-d' }}""
             class=""form-control""
             required=""""
             id=""id_date"">
    </p>

    <p>
      <label for=""id_amount"">Amount:</label>
      <input type=""number""
             name=""amount""
             class=""form-control""
             step=""0.01""
             min=""0""
             required=""""
             id=""id_amount"">
    </p>

    <p>
      <label for=""id_comment"">Comment:</label>
      <textarea name=""comment""
                cols=""40""
                rows=""3""
                class=""form-control""
                id=""id_comment"">
      </textarea>
    </p>
    <button type=""submit"">Сохранить</button>
  </form>

{% endblock %}"
fsXHEsrf,Arduino-Penyiram-Tanaman-Otomatis,alsolus,C++,Tuesday 13th of June 2023 06:47:39 AM CDT,"#include <LiquidCrystal_I2C.h>

LiquidCrystal_I2C lcd(0x27,16,2);

int sensorPin  = A0; // pin sensor
int powerPin6  = 6;  // untuk pengganti VCC
int powerPin5  = 5;  // untuk pengganti VCC
int powerPin4  = 4;  // untuk pengganti VCC
int relayPin2  = 2;  // RelayPin2
  

void setup() {
  // jadikan pin power sebagai output
  pinMode(powerPin6, OUTPUT);
  pinMode(powerPin5, OUTPUT);
  pinMode(powerPin4, OUTPUT);
  pinMode(relayPin2, OUTPUT);

  // default bernilai LOW
  digitalWrite(powerPin6, LOW);

  // default bernilai HIGH
  digitalWrite(powerPin5, HIGH);
  digitalWrite(powerPin4, HIGH);
  digitalWrite(relayPin2, HIGH);

  // put your setup code here, to run once:
  lcd.init(); // insialisasi LCD
  lcd.backlight(); // memastikan backlight LCD hidup
  lcd.begin(16, 2);
  Serial.begin(9600);
}

void loop() {
  // put your main code here, to run repeatedly:
  // lcd.setCursor(0, 0);
  // lcd.print(""IOT Kelembaban"");
  lcd.setCursor(0, 1);
  lcd.print(""Kelembaban: "");
  lcd.println(kelembaban());
  delay(500);

  if(kelembaban() > 40 ) {
    digitalWrite(relayPin2, HIGH);
  }

  if(kelembaban() < 40) {
    digitalWrite(relayPin2, LOW);
  }
}

int kelembaban() {
  digitalWrite(powerPin6, HIGH);
  delay(500);
  // Baca nilai analog dari sensor
  int nilaiSensor = analogRead(sensorPin);
  digitalWrite(powerPin6, LOW);
  // Makin lembab maka makin tinggi nilainya
  return 1023 - nilaiSensor;
}
"
uSHU8Y3C,WooCommerce Get Total Sales,wzul,PHP,Tuesday 13th of June 2023 06:37:54 AM CDT,"<?php

add_action( 'woocommerce_after_register_post_type',  'wan_get_post' );

function wan_get_post() {
  $day = date('w');
  $week_start = date('Y-m-d', strtotime('-'.$day.' days'));
  $week_end = date('Y-m-d', strtotime('+'.(6-$day).' days'));

  $wtd_orders = wc_get_orders( 
    [
      'date_paid' => $week_start . '...' . $week_end,
    ]
  );

  $mtd_orders = wc_get_orders(
    [
      'date_paid' => date('Y-m-01') . '...' . date('Y-m-t'),
    ] 
  );

  $ytd_orders = wc_get_orders(
    [
      'date_paid' => date('Y-01-01') . '...' . date('Y-m-t'),
    ] 
  );

  $wtd_total = 0;
  $mtd_total = 0;
  $ytd_total = 0;

  foreach( $wtd_orders as $order ) {
    $wtd_total+= round( $order->get_total() * 100);
  }

  foreach( $mtd_orders as $order ) {
    $mtd_total+= round( $order->get_total() * 100);
  }
  foreach( $ytd_orders as $order ) {
    $ytd_total+= round( $order->get_total() * 100);
  }
  
  echo 'Total Weekly Sales: RM ' . number_format($wtd_total/ 100, 2) . '<br>';
  echo 'Total Monthly Sales: RM ' . number_format($mtd_total/ 100, 2) . '<br>';
  echo 'Total Yearly Sales: RM ' . number_format($ytd_total/ 100, 2) . '<br>';
  exit;
}"
PpvE9X6y,"Debian, PHP short tags",Infra_HDC,Bash,Tuesday 13th of June 2023 06:29:53 AM CDT,"/etc/php/7.3/apache2/php.ini
;short_open_tag = Off
short_open_tag = On

/etc/php/7.3/cli/php.ini
;short_open_tag = Off
short_open_tag = On
"
CFJLAEC1,the perfect SQL connection string,jebbidan,SQL,Tuesday 13th of June 2023 06:19:53 AM CDT,"the perfect SQL connection string.

the string: Data Source=your_sql_server_name_here;Database=Your_database_name_here;Trusted_Connection=True;
"
L5wQLjXh,Untitled,mikhailemv,HTML,Tuesday 13th of June 2023 06:18:25 AM CDT,"{% extends 'users/profile/categories/category_base.html' %}
{% load static %}

{% block head %}
  <link rel=""stylesheet"" href=""{% static 'css/styleCategory.css' %}"">
    <link rel=""stylesheet"" href=""{% static 'css/globalStyle.css' %}"">
  <title>Редактирование</title>
{% endblock %}

{% block content %}
    <main>
        <h1>Создание/редактирование категории</h1>

        <form method=""post"" enctype=""multipart/form-data"">
            {% csrf_token %}
            <input type=""hidden""
                   name=""csrfmiddlewaretoken""
                   value=""NtjTkiPCAGE6SNmjHBr8XUI0qxr5GVaNIlJKeitTto8dYLBw0knPNraHPkW2ZtmD"">
            <p>
                <label for=""id_category_name"">Category name:</label>
                <input type=""text""
                       name=""category_name""
                       value=""{{ form.category_name.value }}""
                       maxlength=""100""
                       id=""id_category_name"">
            </p>
            <p>
                <label for=""id_key"">Key:</label>
                <select name=""key"" id=""id_key"">
                    <option value="""" selected>---------</option>
                    {% for key in keys %}
                        {% if key == form.key.value %}
                            <option value=""{{ key }}"" selected>{{ key }}</option>
                        {% else %}
                            <option value=""{{ key }}"">{{ key }}</option>
                        {% endif %}
                    {% endfor %}
                </select>
            </p>
            <p>
                <label for=""id_color"">Color:</label>
                <input type=""color""
                       name=""color""
                       value=""{{ form.color.value }}""
                       maxlength=""7""
                       required=""""
                       id=""id_color"">
            </p>
            <button type=""submit"">Сохранить</button>
        </form>
    </main>
{% endblock %}
{% block footer %}
{% endblock %}"
y4hN4DjY,sql,enot1k,SQL,Tuesday 13th of June 2023 06:06:21 AM CDT,"SELECT j_in.gr,
       j_in.s s,
       j_in.stock_id,
       j_in.fio fio,
       j_in.d d,
       j_in.dt dt,
       j_in.nh,
       j_in.dw,
       ROUND ( (MAX (jout.dat) - MAX (j_in.enter_time)) * 24, 1) f,
       --j_in.i,
       REPLACE (TO_CHAR (j_in.dt, 'Month'), ' ', '') m
        FROM (SELECT ab.nm_b gr,
                     s.nm_s s,
                     a.cd_a_stock stock_id,
                     cs.date_work dw,
                     a.name || ' ' || a.vorname || ' ' || a.vatersname fio,
                     b.nm_b d,
                     jin.pass_skd,
                     TRUNC (jin.dat) dt,
                     sum(v.nh) as nh,
                     MIN (jin.dat) enter_time
                     --ROUND((lp.dt_e-lp.dt_b)*24, 2) as i
              FROM sklad.beruf b
                JOIN sklad.agent a ON a.beruf = b.cd_b
                JOIN sklad.v_agent_true_cd_a tcd ON a.cd_a = tcd.cd_a AND tcd.alive_cur = 1
                JOIN sklad.abteilung ab ON b.ein = ab.cd_a
                JOIN stock.agent aa ON a.cd_a_stock = aa.cd_a
                left JOIN stock.cadr_v_coll_stat cs ON aa.cd_coll = cs.cd_coll
                JOIN stock.cadr_v_job_time jin ON cs.pass_skd = jin.pass_skd
                JOIN sklad.schichte s ON s.cd_s = a.schichte
                JOIN sklad.lager_prod lp on a.cd_a_lager = lp.cd_a_lager
                --join sklad.tabel_graph g on lp.id_gr=g.id_group and lp.ID_CH = g.ID_CHANGE
                left JOIN sklad.lager_prod_val v ON lp.id = v.id --AND lp.id_gr IN (122, 45, 48, 50, 28, 30, 412)
                left join sklad.lager_prod_nnm n ON v.prod_nm = n.nm
                ---JOIN sklad.tabel_tab t ON t.id_agent = a.cd_a_stock
                ---JOIN sklad.tabel_interval i ON t.id_int_gr = i.id_interval
                --JOIN sklad.tabel_interval i2 ON i2.id_interval = t.id_interval
              WHERE jin.dat BETWEEN TO_TIMESTAMP('08.06.2023 00:00:00') and TO_TIMESTAMP('08.06.2023 18:00:00')
                    AND jin.gate IN (SELECT g.gate
                                     FROM sklad.lager_tabel_new_gate g
                                     WHERE g.alive = 1 AND g.tp IN (11) AND g.alive = 1)
                    and cs.DATE_WORK >=ADD_MONTHS(sysdate, -3)
                    and cs.DEPT_NO=36266
                    and a.alive=1
                    and b.alive=1
                     --AND v.nh > 0
                     --and n.id<>1576
              GROUP BY ab.nm_b,
                       s.nm_s,
                       a.cd_a_stock,
                       b.nm_b,
                       a.name || ' ' || a.vorname || ' ' || a.vatersname,
                       jin.pass_skd,
                       cs.date_work,
                       --ROUND((lp.dt_e-lp.dt_b)*24, 2),
                       TRUNC (jin.dat)) j_in 
        JOIN stock.cadr_v_job_time jout ON j_in.pass_skd = jout.pass_skd
             AND jout.dat BETWEEN j_in.enter_time + 2 / 24 AND j_in.enter_time + 17 / 24
             AND jout.gate IN (SELECT g.gate
                               FROM sklad.lager_tabel_new_gate g
                               WHERE g.alive = 1 AND g.tp IN (2, 22) AND g.alive = 1)
        GROUP BY j_in.s,
                 j_in.fio,
                 j_in.d,
                 j_in.dt,
                 j_in.s,
                 j_in.gr,
                 j_in.nh,),
                 j_in.dw,
                 --j_in.i,
                 j_in.stock_id
     
"
MpmfzkU4,data602,TestGuy1,JSON,Tuesday 13th of June 2023 06:00:05 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: 'a49fbb2196f0f29ada179e06bfa13b909892c13f2a8a04ae637ffbba2e43e40c69093fc23680854531b7e93430d04bdf37b8f4773fb0a8e1a88c4b1f2bb4d4dc91e006b5fe21d5c290b53785feda4ec44ea2b93f832f1f7310650fa6792f39e53165b5fd56bb53ab0194250876cb5c964d72167413282e0bb20b224cbc30439f',
  otherdata: [
    'cb23f25728657edb344458c9ab11b5eb',
    '7cb84263f64a427f5457d3865868a617',
    '154e2a6cc7b966f14f2a9dd36317cefc',
    '3b35567a6c157e0d1e98704a61d6abdd',
    'aff97269c4b402ef08357bdcaa6f3db9',
    'a56a6b942def2e0fb10de44b59a2bb98',
    'ac4ab8e990211a4b3a3591923404dfac',
    '18ea71cacbf20a3d376c652495bc944b'
  ]
}"
