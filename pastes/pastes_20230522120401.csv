id,title,username,language,date,content
DGaMGUpj,Untitled,jkonefal,C++,Monday 22nd of May 2023 06:43:02 AM CDT,"#include <bits/stdc++.h>
using namespace std;
int rep[1000005];
int ini[1000005];
int num;
int n, m, t;

int ptn(int x, int y) {
    return x * m + y;
}

pair <int, int> ntp(int x) {
    return make_pair(x / m, x % m);
}

int find(int x, int y) {
    if (ntp(rep[ptn(x, y)]).first == x && ntp(rep[ptn(x, y)]).second == y) return ptn(x, y);
    rep[ptn(x, y)] = find(ntp(rep[ptn(x, y)]).first, ntp(rep[ptn(x, y)]).second);
    return rep[ptn(x, y)];
}

void uunion(int x1, int yjeden, int x2, int y2) {
    if (rep[ptn(x1, yjeden)] == rep[ptn(x2, y2)]) return;
    int p1 = find(x1, yjeden);
    int p2 = find(x2, y2);
    if (p1 == p2) return;
    rep[p1] = p2;
    num--;
}

int main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    //map <int, vector <int>> wart;
    priority_queue < pair<int, int>> wart;
    int mx = 0;
    cin >> n >> m;
    for (int i = 0; i < n; i++)
    {
        for (int j = 0; j < m; j++)
        {
            cin >> ini[ptn(i, j)];
            rep[ptn(i, j)] = ptn(i, j);
            wart.push(make_pair(ini[ptn(i, j)], ptn(i, j)));
            mx = max(ini[ptn(i, j)], mx);
        }
    }

    cin >> t;
    vector <int> tests(t);
    vector <int> answ(t);
    num = 0;
    for (int i = 0; i < t; i++) cin >> tests[i];
    int g = t - 1;

    // for (auto it = wart.rbegin(); it != wart.rend(); ++it)
    while (!wart.empty())
    {
        pair <int, int> cur = wart.top();
        int val = cur.first;
        //cout << val << '\n';
        while (g >= 0 && val <= tests[g]) answ[g] = num, g--;

        int a = tests[g];
        int i = ntp(cur.second).first;
        int j = ntp(cur.second).second;
        num++;

        if (j > 0)
        {
            if (ini[ptn(i, j - 1)] > a) uunion(i, j, i, j - 1);
        }
        if (i > 0)
        {
            if (ini[ptn(i - 1, j)] > a) uunion(i, j, i - 1, j);
        }
        if (j < m - 1)
        {
            if (ini[ptn(i, j + 1)] > a) uunion(i, j, i, j + 1);
        }
        if (i < n - 1)
        {
            if (ini[ptn(i + 1, j)] > a) uunion(i, j, i + 1, j);
        }
        wart.pop();
    }

    while (g >= 0) answ[g] = num, g--;

    for (int i = 0; i < t; i++)
    {
        cout << answ[i] << "" "";
    }
}"
WB4rxEGy,test_24,Seredenko-V,C++,Monday 22nd of May 2023 06:21:52 AM CDT,"#include ""vector.h""
#include <iostream>
#include <cassert>

using namespace std;

constexpr std::size_t SIZE = 8u;
constexpr int MAGIC = 42;

struct Obj {
    Obj() {
        if (default_construction_throw_countdown > 0) {
            if (--default_construction_throw_countdown == 0) {
                throw std::runtime_error(""Oops"");
            }
        }
        ++num_default_constructed;
    }

    Obj(const Obj& other) {
        if (other.throw_on_copy) {
            throw std::runtime_error(""Oops"");
        }
        ++num_copied;
    }

    Obj(Obj&& /*other*/) noexcept {
        ++num_moved;
    }

    Obj& operator=(const Obj& other) = default;
    Obj& operator=(Obj&& other) = default;

    ~Obj() {
        ++num_destroyed;
    }

    static size_t GetAliveObjectCount() {
        return num_default_constructed + num_copied + num_moved - num_destroyed;
    }

    static void ResetCounters() {
        default_construction_throw_countdown = 0;
        num_default_constructed = 0;
        num_copied = 0;
        num_moved = 0;
        num_destroyed = 0;
    }

    bool throw_on_copy = false;

    static inline size_t default_construction_throw_countdown = 0;
    static inline size_t num_default_constructed = 0;
    static inline size_t num_copied = 0;
    static inline size_t num_moved = 0;
    static inline size_t num_destroyed = 0;
};

void TestSizeConstructorException() {
    Obj::ResetCounters();
    Obj::default_construction_throw_countdown = SIZE / 2;
    try {
        Vector<Obj> v(SIZE);
        assert(false);
    } catch (const std::runtime_error&) {
        // этого и ждем
    }
    assert(Obj::num_default_constructed == SIZE / 2 - 1);
    assert(Obj::GetAliveObjectCount() == 0u);
    cerr << ""TestSizeConstructorException is passed""s << endl;
}

int main(int argc, const char** argv) {
    TestSizeConstructorException();
}"
4tfPiQWM,Untitled,cyborg_7459,JavaScript,Monday 22nd of May 2023 06:02:38 AM CDT,"(function(){  
    var x = y = 5;
})();

console.log(""x is defined? "" + (typeof x !== 'undefined'));
console.log(""y is defined? "" + (typeof y !== 'undefined'));"
1pq2TZyK,data580,TestGuy1,JSON,Monday 22nd of May 2023 06:00:06 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: 'dbce59919295e4a8bec2311a7bdacffa80f0296b4dcc693a7047e38aadd125c77525101be4bee9f74fb0fc60550d315a46e93536469631f179de3e8af3e81ba10d2ddd418eb5dc48a13f996df711630a95bb44f03691dd6729b642310148b100b7da6078772ed6a53240355b8bed884d73ff450f3a09d7b4e445a9961201dd8f',
  otherdata: [
    '63340298872d16323fa0c63bd991c53d',
    'b70566ba5fcefdc18238168ab43d426e',
    'd526aa385d10c710e8b1c72227296bc4',
    '88ced7d1859e518bc289d9e4bd641af8',
    '4c47a80c6229302f7b05b232a7c20998',
    'd893da4148d816765dca639641b51ff5',
    '6ae8fe68597eda1270a6e8f7d2b287a7',
    '3d7275551968b3310716174d8a353075'
  ]
}"
YZ8Us9j3,Last K Numbers Sequence JS Advanced,TZinovieva,JavaScript,Monday 22nd of May 2023 05:45:09 AM CDT,"function generateSequence(n, k) {
    let seq = [1];

    for(let i = 1; i < n; i++) {
        let sum = 0;
        for(let j = i - k; j < i; j++) {
            if(j >= 0) {
                sum += seq[j];
            }
        }
        seq.push(sum);
    }
    return seq;
}
"
xirtxrZh,LibreTubePro,FreedTV,JSON,Monday 22nd of May 2023 05:42:04 AM CDT,"{
""hasUpdate"":false,
""isForce"":false,
""isSilent"":false,
""isIgnorable"":false,
""isShowNotification"":false,
""updateContent"":"""",
""url"":"""",
""hash"":""""
}"
AqczuKEy,calc2,Nojus_Globys,Java,Monday 22nd of May 2023 05:33:16 AM CDT,"# 1 — Užpildyti šiuos langelius
C2: ""Pamoka"" (kuriuos mokotės mokykloje)
D2: ""Motyvacija"" (skaičius nuo 0 iki 10 - kiek patinka dalykas)
E2: ""Kartai per savaitę""
F2: ""Sužinotas faktas""
(jei reikia, stulpelį pasididinti)
 
# 2 — Langeliuose B3:B5 parašyti skaičius nuo 1 iki 3
(prisiminti automatinį pildymą)
 
# 3 — Užpildyti lentelę
 
# 4 — Atlikti skaičiavimus
    E6 – apskaičiuoti kartų per savaitę sumą;
    D6 – apskaičiuoti motyvacijos vidurkį."
Jf7g9JMH,Untitled,miscelo,Python,Monday 22nd of May 2023 05:20:53 AM CDT,"import logging.handlers
from datetime import datetime

now = datetime.now()
timestamp = now.strftime(""%d/%m/%Y %H:%M:%S"")

logging.basicConfig(filename=""dmaster.log"", level=logging.INFO)
logger = logging.getLogger(""dmaster.diskspace"")
logger.setLevel(logging.DEBUG)

logging.basicConfig(filename=""dmaster.log"", level=logging.INFO)
ch = logging.StreamHandler()
ch.setLevel(logging.DEBUG)

logformat = logging.Formatter(""%(asctime)s;%(levelname)s;%(message)s"")
ch.setFormatter(logformat)
logger.addHandler(ch)

try:
    with open(""dice.dat"", ""r"") as fobj:
        fobj.read()
        logger.info('file diskspace.dat exist!')

except FileNotFoundError:
    logger.critical('file diskspace.dat not exist!')
except Exception:
    print(""ERROR not known"")
    logger.warning('Error not known. something happens'"
T8kNHXES,Untitled,wclovers,PHP,Monday 22nd of May 2023 05:02:30 AM CDT,wcfm_get_vendor_id_by_post( $product_id );
b6TESyby,Untitled,wclovers,PHP,Monday 22nd of May 2023 05:01:33 AM CDT,"global $WCFM;
$WCFM->wcfm_vendor_support->wcfm_get_vendor_id_from_product( $product_id );"
E4kNcy3g,Работа чат жпт,Bibodui,C++,Monday 22nd of May 2023 04:52:33 AM CDT,"#include <iostream>
#include <fstream>
#include <vector>
#include <algorithm>

using namespace std;

class Sort {
public:
    static void selectionSort(vector<int>& arr) {
        int n = arr.size();
        for (int i = 0; i < n - 1; ++i) {
            int minIndex = i;
            for (int j = i + 1; j < n; ++j) {
                if (arr[j] < arr[minIndex]) {
                    minIndex = j;
                }
            }
            swap(arr[i], arr[minIndex]);
        }
    }

    static void quickSort(vector<int>& arr, int low, int high) {
        if (low < high) {
            int pivot = partition(arr, low, high);
            quickSort(arr, low, pivot - 1);
            quickSort(arr, pivot + 1, high);
        }
    }

private:
    static int partition(vector<int>& arr, int low, int high) {
        int pivot = arr[high];
        int i = low - 1;

        for (int j = low; j <= high - 1; ++j) {
            if (arr[j] < pivot) {
                ++i;
                swap(arr[i], arr[j]);
            }
        }
        swap(arr[i + 1], arr[high]);
        return i + 1;
    }
};

int main() {
    // Считывание данных из файлов
    vector<int> sortedData;
    vector<int> reverseSortedData;
    vector<int> partiallySortedData;

    ifstream sortedFile(""sorted.txt"");
    ifstream reverseSortedFile(""reverse_sorted.txt"");
    ifstream partiallySortedFile(""partially_sorted.txt"");

    int num;
    while (sortedFile >> num) {
        sortedData.push_back(num);
    }

    while (reverseSortedFile >> num) {
        reverseSortedData.push_back(num);
    }

    while (partiallySortedFile >> num) {
        partiallySortedData.push_back(num);
    }

    sortedFile.close();
    reverseSortedFile.close();
    partiallySortedFile.close();

    // Сортировка и сравнение результатов
    Sort::selectionSort(sortedData);
    Sort::quickSort(reverseSortedData, 0, reverseSortedData.size() - 1);
    Sort::quickSort(partiallySortedData, 0, partiallySortedData.size() - 1);

    // Вывод результатов
    cout << ""Отсортированные данные: "";
    for (const auto& num : sortedData) {
        cout << num << "" "";
    }
    cout << endl;

    cout << ""Отсортированные данные в обратном порядке: "";
    for (const auto& num : reverseSortedData) {
        cout << num << "" "";
    }
    cout << endl;

    cout << ""Частично отсортированные данные: "";
    for (const auto& num : partiallySortedData) {
        cout << num << "" "";
    }
    cout << endl;

    return 0;
}
"
LY0jYUBm,Урок 4 идиома...,kutuzzzov,C++,Monday 22nd of May 2023 04:52:21 AM CDT,"#include <algorithm>
#include <iostream>
#include <numeric>
#include <string>
#include <vector>

using namespace std;

template <typename Iterator>
class IteratorRange {
public:
    IteratorRange(Iterator begin, Iterator end)
        : first(begin)
        , last(end) {
    }

    Iterator begin() const {
        return first;
    }

    Iterator end() const {
        return last;
    }

private:
    Iterator first, last;
};

template <typename Collection>
auto Head(Collection& v, size_t top) {
    return IteratorRange{v.begin(), next(v.begin(), min(top, v.size()))};
}

struct Person {
    string name;
    int age, income;
    bool is_male;
};

vector<Person> ReadPeople(istream& input) {
    int count;
    input >> count;

    vector<Person> result(count);
    for (Person& p : result) {
        char gender;
        input >> p.name >> p.age >> p.income >> gender;
        p.is_male = gender == 'M';
    }

    return result;
}

int main() {
    vector<Person> people = ReadPeople(cin);

    sort(people.begin(), people.end(), 
    	[](const Person& lhs, const Person& rhs) {
        return lhs.age < rhs.age;
    });

    for (string command; cin >> command;) {
        if (command == ""AGE""s) {
            int adult_age;
            cin >> adult_age;

            auto adult_begin = lower_bound(people.begin(), people.end(), adult_age, 
            	[](const Person& lhs, int age) {
                return lhs.age < age;
            });

            cout << ""There are ""s << distance(adult_begin, people.end()) << "" adult people for maturity age ""s
                 << adult_age << '\n';
        } else if (command == ""WEALTHY""s) {
            int count;
            cin >> count;

            auto head = Head(people, count);

            partial_sort(head.begin(), head.end(), people.end(),
            	[](const Person& lhs, const Person& rhs) {
                return lhs.income > rhs.income;
            });

            int total_income = accumulate(head.begin(), head.end(), 0, [](int cur, const Person& p) {
                return p.income + cur;
            });
            cout << ""Top-""s << count << "" people have total income ""s << total_income << '\n';
        } else if (command == ""POPULAR_NAME""s) {
            char gender;
            cin >> gender;

            IteratorRange range{people.begin(), partition(people.begin(), people.end(), 
            					[gender](const Person& p) {
                                    return p.is_male == (gender == 'M');
                                })};
            if (range.begin() == range.end()) {
                cout << ""No people of gender ""s << gender << '\n';
            } else {
                sort(range.begin(), range.end(), 
                	[](const Person& lhs, const Person& rhs) {
                    return lhs.name < rhs.name;
                });
                string* most_popular_name = &range.begin()->name;
                int count = 1;
                for (auto i = range.begin(); i != range.end();) {
                    auto same_name_end = find_if_not(i, range.end(), 
                    	[i](const Person& p) {
                        return p.name == i->name;
                    });
                    auto cur_name_count = distance(i, same_name_end);
                    if (cur_name_count > count) {
                        count = cur_name_count;
                        most_popular_name = &i->name;
                    }
                    i = same_name_end;
                }
                cout << ""Most popular name among people of gender ""s << gender << "" is ""s << *most_popular_name << '\n';
            }
        }
    }
}"
GYryXEde,Untitled,MeehoweCK,C++,Monday 22nd of May 2023 04:44:22 AM CDT,"// main.cpp
#include ""Figura.h""
#include ""Kolo.h""
#include ""Kwadrat.h""
#include ""Trojkat.h""

int main()
{
    Figura* Ko = new Kolo;                  // deklaracja wskaźnika na obiekt klasy Figura o nazwie Ko i dynamiczne zaalokowanie do niego obiektu klasy Kolo
    Figura* Kw = new Kwadrat;
    Figura* Tr = new Trojkat;

    Ko->rysuj();                            // wywołanie metody wirtualnej rysuj() dla obiektu przypisanego do wskaźnika Ko
    Kw->rysuj();
    Tr->rysuj();

    delete Ko;                              // zwolnienie zaalokowanej pamięci ze wskaźnika Ko
    delete Kw;
    delete Tr;

    return 0;                               // wyjście z programu ze zwróceniem wartości zerowej (brak błędu)
}

// -------------------------------------------------

// Figura.h
#pragma once
class Figura
{
public:
	virtual void rysuj() const = 0;
};

// -------------------------------------------------

// Kolo.h
#pragma once
#include ""Figura.h""

class Kolo :
    public Figura
{
    virtual void rysuj() const;
};

// -------------------------------------------------

// Kolo.cpp
#include <iostream>
#include ""Kolo.h""

using namespace std;

void Kolo::rysuj() const                                   // nagłówek metody wirtualnej rysuj() typu void (konkretyzacja tej metody dla klasy Kolo
{
    cout << ""To jest kolo: ( )"" << endl;                // wypisanie na ekran komunikatu i przejście do kolejnego wiersza
}

// -------------------------------------------------

// Kwadrat.h
#pragma once
#include ""Figura.h""
class Kwadrat :
    public Figura
{
    virtual void rysuj() const;
};

// -------------------------------------------------

// Kwadrat.cpp
#include <iostream>
#include ""Kwadrat.h""

using namespace std;

void Kwadrat::rysuj() const
{
	cout << ""To jest kwadrat: [ ]"" << endl;
}

// -------------------------------------------------

// Trojkat.h
#pragma once
#include ""Figura.h""
class Trojkat :
    public Figura
{
    virtual void rysuj() const;
};

// -------------------------------------------------

// Trojkat.cpp
#include <iostream>
#include ""Trojkat.h""

using namespace std;

void Trojkat::rysuj() const
{
	cout << ""To jest trojkat: /_\\ "" << endl;
}"
SbzschwG,Untitled,MeehoweCK,C++,Monday 22nd of May 2023 04:25:28 AM CDT,"#include <iostream>                                         // dołączenie biblioteki iostream

using namespace std;                                        // użycie przestrzeni nazw std


class Figura                                                // deklaracja klasy abstrakcyjnej Figura
{
public:                                                     // początek sekcji publicznej
    virtual void rysuj() = 0;                               // deklaracja metody czysto wirtualnej typu void o nazwie rysuj()
};

class Kolo : public Figura                                  // deklaracja klasy Kolo dziedziczącej publicznie od klasy abstrakcyjnej Figura
{
public:
    virtual void rysuj()                                    // nagłówek metody wirtualnej rysuj() typu void (konkretyzacja tej metody dla klasy Kolo
    {
        cout << ""To jest kolo: ( )"" << endl;                // wypisanie na ekran komunikatu i przejście do kolejnego wiersza
    }
};

class Kwadrat : public Figura
{
public:
    virtual void rysuj()
    {
        cout << ""To jest kwadrat: [ ]"" << endl;
    }
};

class Trojkat : public Figura
{
public:
    virtual void rysuj()
    {
        cout << ""To jest trojkat: /_\\ "" << endl;
    }
};

int main()
{
    Figura* Ko = new Kolo;                  // deklaracja wskaźnika na obiekt klasy Figura o nazwie Ko i dynamiczne zaalokowanie do niego obiektu klasy Kolo
    Figura* Kw = new Kwadrat;
    Figura* Tr = new Trojkat;

    Ko->rysuj();                            // wywołanie metody wirtualnej rysuj() dla obiektu przypisanego do wskaźnika Ko
    Kw->rysuj();
    Tr->rysuj();

    delete Ko;                              // zwolnienie zaalokowanej pamięci ze wskaźnika Ko
    delete Kw;
    delete Tr;

    return 0;                               // wyjście z programu ze zwróceniem wartości zerowej (brak błędu)
}"
cWGuw4u4,Nigerian scammers [22-5-1/2023],bombaires,HTML,Monday 22nd of May 2023 04:13:44 AM CDT,"<a href=""mailto:marcusstevenwood@gmail.com"">marcusstevenwood@gmail.com</a>
<a href=""mailto:m.arc.uss.t.evenw.o.od@gmail.com"">m.arc.uss.t.evenw.o.od@gmail.com</a>
<a href=""mailto:m.arcu.s.s.t.e.v.e.nwo.od@gmail.com"">m.arcu.s.s.t.e.v.e.nwo.od@gmail.com</a>
<a href=""mailto:m.a.rc.u.sste.v.e.n.wo.od@gmail.com"">m.a.rc.u.sste.v.e.n.wo.od@gmail.com</a>
<a href=""mailto:m.ar.c.usste.v.enwo.od@gmail.com"">m.ar.c.usste.v.enwo.od@gmail.com</a>
<a href=""mailto:m.arcusst.e.v.e.nw.oo.d@gmail.com"">m.arcusst.e.v.e.nw.oo.d@gmail.com</a>
<a href=""mailto:mar.c.u.s.ste.v.e.n.woo.d@gmail.com"">mar.c.u.s.ste.v.e.n.woo.d@gmail.com</a>
<a href=""mailto:m.a.rc.usst.eve.nw.oo.d@gmail.com"">m.a.rc.usst.eve.nw.oo.d@gmail.com</a>
<a href=""mailto:ma.r.cu.ss.t.ev.enwood@gmail.com"">ma.r.cu.ss.t.ev.enwood@gmail.com</a>
<a href=""mailto:ma.r.c.u.s.s.teven.w.oo.d@gmail.com"">ma.r.c.u.s.s.teven.w.oo.d@gmail.com</a>
<a href=""mailto:mar.cu.ss.t.ev.e.n.w.oo.d@gmail.com"">mar.cu.ss.t.ev.e.n.w.oo.d@gmail.com</a>
<a href=""mailto:ma.r.cusstev.e.n.wood@gmail.com"">ma.r.cusstev.e.n.wood@gmail.com</a>
<a href=""mailto:m.a.r.c.u.sste.ve.nw.ood@gmail.com"">m.a.r.c.u.sste.ve.nw.ood@gmail.com</a>
<a href=""mailto:m.a.rcu.s.s.te.ve.n.wo.o.d@gmail.com"">m.a.rcu.s.s.te.ve.n.wo.o.d@gmail.com</a>
<a href=""mailto:m.arcusst.ev.enw.o.od@gmail.com"">m.arcusst.ev.enw.o.od@gmail.com</a>
<a href=""mailto:m.ar.c.us.ste.venw.o.o.d@gmail.com"">m.ar.c.us.ste.venw.o.o.d@gmail.com</a>
<a href=""mailto:ma.r.cu.sst.e.v.en.woo.d@gmail.com"">ma.r.cu.sst.e.v.en.woo.d@gmail.com</a>
<a href=""mailto:mar.c.u.ss.tev.e.n.wo.od@gmail.com"">mar.c.u.ss.tev.e.n.wo.od@gmail.com</a>
<a href=""mailto:ma.rc.u.sst.ev.e.nwo.od@gmail.com"">ma.rc.u.sst.ev.e.nwo.od@gmail.com</a>
<a href=""mailto:m.a.r.c.u.ssteve.n.w.o.od@gmail.com"">m.a.r.c.u.ssteve.n.w.o.od@gmail.com</a>
<a href=""mailto:m.a.r.cu.ssteven.wo.od@gmail.com"">m.a.r.cu.ssteven.wo.od@gmail.com</a>
<a href=""mailto:marcu.s.s.t.evenw.oo.d@gmail.com"">marcu.s.s.t.evenw.oo.d@gmail.com</a>
<a href=""mailto:ma.rc.u.s.st.ev.e.nw.ood@gmail.com"">ma.rc.u.s.st.ev.e.nw.ood@gmail.com</a>
<a href=""mailto:ma.r.c.u.s.s.t.ev.enwo.od@gmail.com"">ma.r.c.u.s.s.t.ev.enwo.od@gmail.com</a>
<a href=""mailto:m.a.r.c.us.st.e.v.e.nw.o.o.d@gmail.com"">m.a.r.c.us.st.e.v.e.nw.o.o.d@gmail.com</a>
<a href=""mailto:m.a.r.cu.s.s.te.v.en.wood@gmail.com"">m.a.r.cu.s.s.te.v.en.wood@gmail.com</a>
<a href=""mailto:m.arcusste.ve.n.wo.o.d@gmail.com"">m.arcusste.ve.n.wo.o.d@gmail.com</a>
<a href=""mailto:marcuss.t.ev.e.nw.o.od@gmail.com"">marcuss.t.ev.e.nw.o.od@gmail.com</a>
<a href=""mailto:marcus.ste.v.en.w.ood@gmail.com"">marcus.ste.v.en.w.ood@gmail.com</a>
<a href=""mailto:m.a.rc.u.ss.t.ev.e.nwo.od@gmail.com"">m.a.rc.u.ss.t.ev.e.nwo.od@gmail.com</a>
<a href=""mailto:m.arc.u.s.steven.w.oo.d@gmail.com"">m.arc.u.s.steven.w.oo.d@gmail.com</a>
<a href=""mailto:ma.r.cu.ss.te.ve.nwoo.d@gmail.com"">ma.r.cu.ss.te.ve.nwoo.d@gmail.com</a>
<a href=""mailto:ma.r.cus.s.t.e.ven.w.ood@gmail.com"">ma.r.cus.s.t.e.ven.w.ood@gmail.com</a>
<a href=""mailto:m.arc.uss.t.e.v.enw.ood@gmail.com"">m.arc.uss.t.e.v.enw.ood@gmail.com</a>
<a href=""mailto:ma.rc.uss.te.v.e.n.w.ood@gmail.com"">ma.rc.uss.te.v.e.n.w.ood@gmail.com</a>
<a href=""mailto:m.a.rc.u.sst.e.v.enwood@gmail.com"">m.a.rc.u.sst.e.v.enwood@gmail.com</a>
<a href=""mailto:m.a.r.cu.s.st.even.wo.od@gmail.com"">m.a.r.cu.s.st.even.wo.od@gmail.com</a>
<a href=""mailto:ma.r.cuss.tevenwoo.d@gmail.com"">ma.r.cuss.tevenwoo.d@gmail.com</a>
<a href=""mailto:ma.rc.u.ss.te.ven.wo.od@gmail.com"">ma.rc.u.ss.te.ven.wo.od@gmail.com</a>
<a href=""mailto:ma.r.c.us.stev.enwo.o.d@gmail.com"">ma.r.c.us.stev.enwo.o.d@gmail.com</a>
<a href=""mailto:ma.r.c.usste.venw.oo.d@gmail.com"">ma.r.c.usste.venw.oo.d@gmail.com</a>
<a href=""mailto:m.ar.c.u.s.s.t.ev.enw.o.o.d@gmail.com"">m.ar.c.u.s.s.t.ev.enw.o.o.d@gmail.com</a>
<a href=""mailto:m.arc.u.s.s.teven.w.oo.d@gmail.com"">m.arc.u.s.s.teven.w.oo.d@gmail.com</a>
<a href=""mailto:marc.u.sstev.e.n.woo.d@gmail.com"">marc.u.sstev.e.n.woo.d@gmail.com</a>
<a href=""mailto:m.arc.us.s.tev.en.w.o.o.d@gmail.com"">m.arc.us.s.tev.en.w.o.o.d@gmail.com</a>
<a href=""mailto:m.a.rc.us.s.teve.n.woo.d@gmail.com"">m.a.rc.us.s.teve.n.woo.d@gmail.com</a>
<a href=""mailto:m.ar.cuss.tevenwoo.d@gmail.com"">m.ar.cuss.tevenwoo.d@gmail.com</a>
<a href=""mailto:ma.r.cus.ste.v.e.n.wood@gmail.com"">ma.r.cus.ste.v.e.n.wood@gmail.com</a>
<a href=""mailto:m.arcu.s.st.evenwo.o.d@gmail.com"">m.arcu.s.st.evenwo.o.d@gmail.com</a>
<a href=""mailto:marcu.s.steve.n.w.ood@gmail.com"">marcu.s.steve.n.w.ood@gmail.com</a>
<a href=""mailto:ma.rc.u.s.s.te.v.e.nwo.od@gmail.com"">ma.rc.u.s.s.te.v.e.nwo.od@gmail.com</a>
<a href=""mailto:m.ar.c.us.ste.ve.nw.ood@gmail.com"">m.ar.c.us.ste.ve.nw.ood@gmail.com</a>
<a href=""mailto:m.ar.c.u.sstevenw.oo.d@gmail.com"">m.ar.c.u.sstevenw.oo.d@gmail.com</a>
<a href=""mailto:mar.c.us.s.t.ev.en.wo.od@gmail.com"">mar.c.us.s.t.ev.en.wo.od@gmail.com</a>
<a href=""mailto:ma.r.cu.s.st.ev.en.w.oo.d@gmail.com"">ma.r.cu.s.st.ev.en.w.oo.d@gmail.com</a>
<a href=""mailto:mar.c.us.st.e.v.en.w.o.od@gmail.com"">mar.c.us.st.e.v.en.w.o.od@gmail.com</a>
<a href=""mailto:mar.c.usst.ev.e.n.w.ood@gmail.com"">mar.c.usst.ev.e.n.w.ood@gmail.com</a>
<a href=""mailto:ma.rcus.st.e.v.enwo.od@gmail.com"">ma.rcus.st.e.v.enwo.od@gmail.com</a>
<a href=""mailto:m.ar.cu.s.ste.v.e.nwood@gmail.com"">m.ar.cu.s.ste.v.e.nwood@gmail.com</a>
<a href=""mailto:ma.rc.u.s.s.te.ve.nw.o.o.d@gmail.com"">ma.rc.u.s.s.te.ve.nw.o.o.d@gmail.com</a>
<a href=""mailto:m.a.rcu.sst.e.v.enw.ood@gmail.com"">m.a.rcu.sst.e.v.enw.ood@gmail.com</a>
<a href=""mailto:mar.cu.ss.teve.n.w.o.o.d@gmail.com"">mar.cu.ss.teve.n.w.o.o.d@gmail.com</a>
<a href=""mailto:m.arc.usstev.en.w.o.o.d@gmail.com"">m.arc.usstev.en.w.o.o.d@gmail.com</a>
<a href=""mailto:ma.rcus.s.te.ven.w.oo.d@gmail.com"">ma.rcus.s.te.ven.w.oo.d@gmail.com</a>
<a href=""mailto:marcu.s.st.e.ve.nwood@gmail.com"">marcu.s.st.e.ve.nwood@gmail.com</a>
<a href=""mailto:m.a.r.cu.s.st.even.wo.o.d@gmail.com"">m.a.r.cu.s.st.even.wo.o.d@gmail.com</a>
<a href=""mailto:marc.us.ste.ve.nw.ood@gmail.com"">marc.us.ste.ve.nw.ood@gmail.com</a>
<a href=""mailto:marcus.st.eve.n.w.ood@gmail.com"">marcus.st.eve.n.w.ood@gmail.com</a>
<a href=""mailto:m.a.r.c.u.s.s.t.e.ve.nwo.od@gmail.com"">m.a.r.c.u.s.s.t.e.ve.nwo.od@gmail.com</a>
<a href=""mailto:ma.r.c.u.sstev.e.n.w.o.o.d@gmail.com"">ma.r.c.u.sstev.e.n.w.o.o.d@gmail.com</a>
<a href=""mailto:m.ar.c.u.sste.v.en.w.oo.d@gmail.com"">m.ar.c.u.sste.v.en.w.oo.d@gmail.com</a>
<a href=""mailto:m.arcu.s.st.eve.n.w.oo.d@gmail.com"">m.arcu.s.st.eve.n.w.oo.d@gmail.com</a>
<a href=""mailto:m.a.r.c.u.s.steve.n.w.ood@gmail.com"">m.a.r.c.u.s.steve.n.w.ood@gmail.com</a>
<a href=""mailto:m.ar.c.u.sstev.en.w.o.od@gmail.com"">m.ar.c.u.sstev.en.w.o.od@gmail.com</a>
<a href=""mailto:m.a.r.c.u.s.st.ev.enwo.od@gmail.com"">m.a.r.c.u.s.st.ev.enwo.od@gmail.com</a>
<a href=""mailto:m.a.r.c.u.s.steven.w.oo.d@gmail.com"">m.a.r.c.u.s.steven.w.oo.d@gmail.com</a>
<a href=""mailto:marc.u.s.s.t.ev.e.n.w.oo.d@gmail.com"">marc.u.s.s.t.ev.e.n.w.oo.d@gmail.com</a>
<a href=""mailto:m.arc.us.st.even.wo.od@gmail.com"">m.arc.us.st.even.wo.od@gmail.com</a>
<a href=""mailto:m.a.rcu.s.steve.n.wood@gmail.com"">m.a.rcu.s.steve.n.wood@gmail.com</a>
<a href=""mailto:m.a.r.c.u.sste.v.e.n.w.o.od@gmail.com"">m.a.r.c.u.sste.v.e.n.w.o.od@gmail.com</a>
<a href=""mailto:m.a.r.c.u.s.s.t.ev.e.nwo.od@gmail.com"">m.a.r.c.u.s.s.t.ev.e.nwo.od@gmail.com</a>
<a href=""mailto:m.arcusst.even.w.oo.d@gmail.com"">m.arcusst.even.w.oo.d@gmail.com</a>
<a href=""mailto:ma.r.c.us.stev.en.w.o.o.d@gmail.com"">ma.r.c.us.stev.en.w.o.o.d@gmail.com</a>
<a href=""mailto:m.a.rcus.st.e.v.e.nw.o.od@gmail.com"">m.a.rcus.st.e.v.e.nw.o.od@gmail.com</a>
<a href=""mailto:marcu.ss.te.venw.o.o.d@gmail.com"">marcu.ss.te.venw.o.o.d@gmail.com</a>
<a href=""mailto:m.a.rcu.s.stev.e.nw.o.od@gmail.com"">m.a.rcu.s.stev.e.nw.o.od@gmail.com</a>
<a href=""mailto:m.a.rcus.s.tev.e.n.w.oo.d@gmail.com"">m.a.rcus.s.tev.e.n.w.oo.d@gmail.com</a>
<a href=""mailto:m.ar.c.usst.evenwo.od@gmail.com"">m.ar.c.usst.evenwo.od@gmail.com</a>
<a href=""mailto:ma.r.cu.sst.eve.nw.o.od@gmail.com"">ma.r.cu.sst.eve.nw.o.od@gmail.com</a>
<a href=""mailto:ma.r.c.uss.te.venwood@gmail.com"">ma.r.c.uss.te.venwood@gmail.com</a>
<a href=""mailto:m.a.rc.uss.t.ev.e.n.w.ood@gmail.com"">m.a.rc.uss.t.ev.e.n.w.ood@gmail.com</a>
<a href=""mailto:mar.cu.ss.t.e.v.en.w.o.od@gmail.com"">mar.cu.ss.t.e.v.en.w.o.od@gmail.com</a>
<a href=""mailto:ma.r.cussteven.w.o.od@gmail.com"">ma.r.cussteven.w.o.od@gmail.com</a>
<a href=""mailto:ma.r.cus.st.eve.nwo.od@gmail.com"">ma.r.cus.st.eve.nwo.od@gmail.com</a>
<a href=""mailto:m.ar.cu.s.ste.venw.o.od@gmail.com"">m.ar.cu.s.ste.venw.o.od@gmail.com</a>
<a href=""mailto:mar.cu.ss.tev.enw.oo.d@gmail.com"">mar.cu.ss.tev.enw.oo.d@gmail.com</a>
<a href=""mailto:mar.c.u.s.stev.e.n.wood@gmail.com"">mar.c.u.s.stev.e.n.wood@gmail.com</a>
<a href=""mailto:m.a.rc.uss.tevenwo.od@gmail.com"">m.a.rc.uss.tevenwo.od@gmail.com</a>
<a href=""mailto:ma.r.cu.s.ste.v.en.wo.o.d@gmail.com"">ma.r.cu.s.ste.v.en.wo.o.d@gmail.com</a>
<a href=""mailto:m.a.rcu.ss.t.e.ve.nwoo.d@gmail.com"">m.a.rcu.ss.t.e.ve.nwoo.d@gmail.com</a>
<a href=""mailto:mar.c.uss.t.e.v.enw.oo.d@gmail.com"">mar.c.uss.t.e.v.enw.oo.d@gmail.com</a>
<a href=""mailto:m.a.r.c.u.ss.te.ven.woo.d@gmail.com"">m.a.r.c.u.ss.te.ven.woo.d@gmail.com</a>
<a href=""mailto:m.a.r.c.us.st.ev.e.nw.oo.d@gmail.com"">m.a.r.c.us.st.ev.e.nw.oo.d@gmail.com</a>
<a href=""mailto:mar.c.us.s.t.e.v.enw.oo.d@gmail.com"">mar.c.us.s.t.e.v.enw.oo.d@gmail.com</a>
<a href=""mailto:marcusst.even.wo.od@gmail.com"">marcusst.even.wo.od@gmail.com</a>
<a href=""mailto:m.a.rcu.s.s.teve.n.w.ood@gmail.com"">m.a.rcu.s.s.teve.n.w.ood@gmail.com</a>
<a href=""mailto:ma.rc.u.s.st.even.wo.od@gmail.com"">ma.rc.u.s.st.even.wo.od@gmail.com</a>
<a href=""mailto:m.a.rcu.sst.e.v.e.nwo.od@gmail.com"">m.a.rcu.sst.e.v.e.nwo.od@gmail.com</a>
<a href=""mailto:ma.rcuss.t.ev.e.n.w.o.o.d@gmail.com"">ma.rcuss.t.ev.e.n.w.o.o.d@gmail.com</a>
<a href=""mailto:ma.rc.u.sst.eve.nwo.od@gmail.com"">ma.rc.u.sst.eve.nwo.od@gmail.com</a>
<a href=""mailto:m.ar.cus.s.tevenwo.od@gmail.com"">m.ar.cus.s.tevenwo.od@gmail.com</a>
<a href=""mailto:m.a.r.cus.st.e.v.e.nwood@gmail.com"">m.a.r.cus.st.e.v.e.nwood@gmail.com</a>
<a href=""mailto:ma.rcu.sst.ev.e.n.wo.od@gmail.com"">ma.rcu.sst.ev.e.n.wo.od@gmail.com</a>
<a href=""mailto:ma.rcus.s.t.e.ven.wood@gmail.com"">ma.rcus.s.t.e.ven.wood@gmail.com</a>
<a href=""mailto:m.arcu.ss.t.even.w.ood@gmail.com"">m.arcu.ss.t.even.w.ood@gmail.com</a>
<a href=""mailto:m.a.rcusstev.e.nw.o.o.d@gmail.com"">m.a.rcusstev.e.nw.o.o.d@gmail.com</a>
<a href=""mailto:m.ar.c.uss.te.ve.nwoo.d@gmail.com"">m.ar.c.uss.te.ve.nwoo.d@gmail.com</a>
<a href=""mailto:m.ar.cusstev.e.nwoo.d@gmail.com"">m.ar.cusstev.e.nwoo.d@gmail.com</a>
<a href=""mailto:m.arc.u.s.steven.w.ood@gmail.com"">m.arc.u.s.steven.w.ood@gmail.com</a>
<a href=""mailto:ma.r.c.u.sst.e.v.e.nw.ood@gmail.com"">ma.r.c.u.sst.e.v.e.nw.ood@gmail.com</a>
<a href=""mailto:m.a.r.cu.ss.t.e.v.e.n.w.ood@gmail.com"">m.a.r.cu.ss.t.e.v.e.n.w.ood@gmail.com</a>
<a href=""mailto:ma.rc.u.s.st.evenwo.o.d@gmail.com"">ma.rc.u.s.st.evenwo.o.d@gmail.com</a>
<a href=""mailto:m.ar.cu.s.s.teven.w.o.od@gmail.com"">m.ar.cu.s.s.teven.w.o.od@gmail.com</a>
<a href=""mailto:m.ar.cu.s.s.t.e.ve.n.wo.od@gmail.com"">m.ar.cu.s.s.t.e.ve.n.wo.od@gmail.com</a>
<a href=""mailto:m.a.rc.uss.t.e.venwood@gmail.com"">m.a.rc.uss.t.e.venwood@gmail.com</a>
<a href=""mailto:m.a.rcusst.e.ven.w.ood@gmail.com"">m.a.rcusst.e.ven.w.ood@gmail.com</a>
<a href=""mailto:marc.u.s.s.te.ven.w.oo.d@gmail.com"">marc.u.s.s.te.ven.w.oo.d@gmail.com</a>
<a href=""mailto:m.ar.c.u.s.s.te.venwoo.d@gmail.com"">m.ar.c.u.s.s.te.venwoo.d@gmail.com</a>
<a href=""mailto:m.a.rcu.s.stev.e.nw.o.o.d@gmail.com"">m.a.rcu.s.stev.e.nw.o.o.d@gmail.com</a>
<a href=""mailto:mar.cu.ss.t.e.ve.n.w.o.o.d@gmail.com"">mar.cu.ss.t.e.ve.n.w.o.o.d@gmail.com</a>
<a href=""mailto:m.arc.us.s.t.e.v.enw.o.od@gmail.com"">m.arc.us.s.t.e.v.enw.o.od@gmail.com</a>
<a href=""mailto:m.arc.u.s.st.e.ve.n.w.ood@gmail.com"">m.arc.u.s.st.e.ve.n.w.ood@gmail.com</a>
<a href=""mailto:m.a.rcuss.teve.n.w.oo.d@gmail.com"">m.a.rcuss.teve.n.w.oo.d@gmail.com</a>
<a href=""mailto:m.a.rc.us.s.t.eve.n.w.o.o.d@gmail.com"">m.a.rc.us.s.t.eve.n.w.o.o.d@gmail.com</a>
<a href=""mailto:mar.cu.sste.venw.oo.d@gmail.com"">mar.cu.sste.venw.oo.d@gmail.com</a>
<a href=""mailto:mar.cus.s.t.ev.enwo.od@gmail.com"">mar.cus.s.t.ev.enwo.od@gmail.com</a>
<a href=""mailto:m.a.r.cu.s.st.evenw.o.o.d@gmail.com"">m.a.r.cu.s.st.evenw.o.o.d@gmail.com</a>
<a href=""mailto:ma.rcu.ss.te.v.e.n.w.o.o.d@gmail.com"">ma.rcu.ss.te.v.e.n.w.o.o.d@gmail.com</a>
<a href=""mailto:mar.c.uss.t.eve.nw.o.od@gmail.com"">mar.c.uss.t.eve.nw.o.od@gmail.com</a>
<a href=""mailto:mar.c.u.ss.te.v.e.nwoo.d@gmail.com"">mar.c.u.ss.te.v.e.nwoo.d@gmail.com</a>
<a href=""mailto:m.a.r.c.us.s.te.ven.w.o.od@gmail.com"">m.a.r.c.us.s.te.ven.w.o.od@gmail.com</a>
<a href=""mailto:mar.cus.s.t.eve.n.wo.od@gmail.com"">mar.cus.s.t.eve.n.wo.od@gmail.com</a>
<a href=""mailto:m.ar.cu.s.s.tev.enw.oo.d@gmail.com"">m.ar.cu.s.s.tev.enw.oo.d@gmail.com</a>
<a href=""mailto:m.ar.c.us.s.t.e.ve.n.woo.d@gmail.com"">m.ar.c.us.s.t.e.ve.n.woo.d@gmail.com</a>
<a href=""mailto:m.ar.c.usstev.enwo.o.d@gmail.com"">m.ar.c.usstev.enwo.o.d@gmail.com</a>
<a href=""mailto:m.arcu.sst.e.venwo.od@gmail.com"">m.arcu.sst.e.venwo.od@gmail.com</a>
<a href=""mailto:ma.rc.us.ste.ve.n.w.oo.d@gmail.com"">ma.rc.us.ste.ve.n.w.oo.d@gmail.com</a>
<a href=""mailto:mar.cus.s.te.ve.n.w.ood@gmail.com"">mar.cus.s.te.ve.n.w.ood@gmail.com</a>
<a href=""mailto:ma.rc.us.st.e.v.e.n.w.o.od@gmail.com"">ma.rc.us.st.e.v.e.n.w.o.od@gmail.com</a>
<a href=""mailto:marcusst.even.w.o.o.d@gmail.com"">marcusst.even.w.o.o.d@gmail.com</a>
<a href=""mailto:m.a.rcu.s.st.eve.nw.oo.d@gmail.com"">m.a.rcu.s.st.eve.nw.oo.d@gmail.com</a>
<a href=""mailto:marcus.st.e.v.e.n.wo.od@gmail.com"">marcus.st.e.v.e.n.wo.od@gmail.com</a>
<a href=""mailto:m.a.r.c.uss.t.e.v.en.w.o.od@gmail.com"">m.a.r.c.uss.t.e.v.en.w.o.od@gmail.com</a>
<a href=""mailto:ma.r.cuss.te.v.e.n.w.oo.d@gmail.com"">ma.r.cuss.te.v.e.n.w.oo.d@gmail.com</a>
<a href=""mailto:ma.r.c.uss.te.venwo.o.d@gmail.com"">ma.r.c.uss.te.venwo.o.d@gmail.com</a>
<a href=""mailto:ma.rc.usste.venwo.od@gmail.com"">ma.rc.usste.venwo.od@gmail.com</a>
<a href=""mailto:m.arc.u.ss.tev.e.n.w.oo.d@gmail.com"">m.arc.u.ss.tev.e.n.w.oo.d@gmail.com</a>
<a href=""mailto:marc.u.ssteve.n.woo.d@gmail.com"">marc.u.ssteve.n.woo.d@gmail.com</a>
<a href=""mailto:m.a.r.cu.ss.te.venwoo.d@gmail.com"">m.a.r.cu.ss.te.venwoo.d@gmail.com</a>
<a href=""mailto:m.arcu.ss.t.evenwo.od@gmail.com"">m.arcu.ss.t.evenwo.od@gmail.com</a>
<a href=""mailto:ma.rc.u.ss.t.e.v.e.nwoo.d@gmail.com"">ma.rc.u.ss.t.e.v.e.nwoo.d@gmail.com</a>
<a href=""mailto:ma.rcu.s.st.e.venwoo.d@gmail.com"">ma.rcu.s.st.e.venwoo.d@gmail.com</a>
<a href=""mailto:mar.cu.ss.t.e.v.enw.o.o.d@gmail.com"">mar.cu.ss.t.e.v.enw.o.o.d@gmail.com</a>
<a href=""mailto:m.a.r.c.u.s.st.ev.e.n.woo.d@gmail.com"">m.a.r.c.u.s.st.ev.e.n.woo.d@gmail.com</a>
<a href=""mailto:marcusst.e.v.e.n.woo.d@gmail.com"">marcusst.e.v.e.n.woo.d@gmail.com</a>
<a href=""mailto:marc.usst.eve.n.w.oo.d@gmail.com"">marc.usst.eve.n.w.oo.d@gmail.com</a>
<a href=""mailto:mar.c.u.sstev.enw.ood@gmail.com"">mar.c.u.sstev.enw.ood@gmail.com</a>
<a href=""mailto:m.ar.c.u.ss.te.v.e.nwo.o.d@gmail.com"">m.ar.c.u.ss.te.v.e.nwo.o.d@gmail.com</a>
<a href=""mailto:ma.rcus.st.e.v.e.n.wood@gmail.com"">ma.rcus.st.e.v.e.n.wood@gmail.com</a>
<a href=""mailto:m.arcu.s.s.t.ev.e.n.wo.o.d@gmail.com"">m.arcu.s.s.t.ev.e.n.wo.o.d@gmail.com</a>
<a href=""mailto:ma.r.c.us.st.eve.n.wood@gmail.com"">ma.r.c.us.st.eve.n.wood@gmail.com</a>
<a href=""mailto:mar.c.uss.te.ven.w.ood@gmail.com"">mar.c.uss.te.ven.w.ood@gmail.com</a>
<a href=""mailto:ma.r.c.u.s.s.tev.enw.o.od@gmail.com"">ma.r.c.u.s.s.tev.enw.o.od@gmail.com</a>
<a href=""mailto:m.arcus.st.evenwoo.d@gmail.com"">m.arcus.st.evenwoo.d@gmail.com</a>
<a href=""mailto:marcu.sstev.enwo.o.d@gmail.com"">marcu.sstev.enwo.o.d@gmail.com</a>
<a href=""mailto:marc.u.ss.t.evenw.oo.d@gmail.com"">marc.u.ss.t.evenw.oo.d@gmail.com</a>
<a href=""mailto:m.ar.cus.stev.en.wood@gmail.com"">m.ar.cus.stev.en.wood@gmail.com</a>
<a href=""mailto:ma.rcu.ss.tev.e.nw.ood@gmail.com"">ma.rcu.ss.tev.e.nw.ood@gmail.com</a>
<a href=""mailto:m.a.r.cu.s.s.t.eve.nw.oo.d@gmail.com"">m.a.r.cu.s.s.t.eve.nw.oo.d@gmail.com</a>
<a href=""mailto:ma.rc.us.s.t.ev.e.n.w.ood@gmail.com"">ma.rc.us.s.t.ev.e.n.w.ood@gmail.com</a>
<a href=""mailto:m.a.rc.us.s.teve.n.wo.o.d@gmail.com"">m.a.rc.us.s.teve.n.wo.o.d@gmail.com</a>
<a href=""mailto:m.arcus.ste.ve.n.w.o.o.d@gmail.com"">m.arcus.ste.ve.n.w.o.o.d@gmail.com</a>
<a href=""mailto:m.a.rcu.ss.t.e.ven.w.oo.d@gmail.com"">m.a.rcu.ss.t.e.ven.w.oo.d@gmail.com</a>
<a href=""mailto:m.arcusste.v.e.nwood@gmail.com"">m.arcusste.v.e.nwood@gmail.com</a>
<a href=""mailto:marcu.sst.ev.en.w.o.o.d@gmail.com"">marcu.sst.ev.en.w.o.o.d@gmail.com</a>
<a href=""mailto:m.a.rc.u.ss.t.e.v.e.nwo.o.d@gmail.com"">m.a.rc.u.ss.t.e.v.e.nwo.o.d@gmail.com</a>
<a href=""mailto:m.a.rcus.stev.e.n.w.o.od@gmail.com"">m.a.rcus.stev.e.n.w.o.od@gmail.com</a>
<a href=""mailto:m.arcus.s.t.eve.n.w.o.od@gmail.com"">m.arcus.s.t.eve.n.w.o.od@gmail.com</a>
<a href=""mailto:m.ar.c.uss.t.ev.en.woo.d@gmail.com"">m.ar.c.uss.t.ev.en.woo.d@gmail.com</a>
<a href=""mailto:ma.rc.u.s.st.e.v.e.nw.o.o.d@gmail.com"">ma.rc.u.s.st.e.v.e.nw.o.o.d@gmail.com</a>
<a href=""mailto:m.arc.u.ss.t.ev.en.w.ood@gmail.com"">m.arc.u.ss.t.ev.en.w.ood@gmail.com</a>
<a href=""mailto:m.a.r.cu.s.s.t.e.ve.n.wood@gmail.com"">m.a.r.cu.s.s.t.e.ve.n.wood@gmail.com</a>
<a href=""mailto:ma.r.c.us.s.tevenw.o.od@gmail.com"">ma.r.c.us.s.tevenw.o.od@gmail.com</a>
<a href=""mailto:ma.r.c.us.st.ev.en.wo.o.d@gmail.com"">ma.r.c.us.st.ev.en.wo.o.d@gmail.com</a>
<a href=""mailto:m.a.rcusste.v.en.w.ood@gmail.com"">m.a.rcusste.v.en.w.ood@gmail.com</a>
<a href=""mailto:mar.c.usstev.e.nw.ood@gmail.com"">mar.c.usstev.e.nw.ood@gmail.com</a>
<a href=""mailto:ma.r.c.uss.teve.n.woo.d@gmail.com"">ma.r.c.uss.teve.n.woo.d@gmail.com</a>
<a href=""mailto:m.arc.u.s.ste.v.enwo.o.d@gmail.com"">m.arc.u.s.ste.v.enwo.o.d@gmail.com</a>
<a href=""mailto:m.ar.cu.s.s.tev.enwo.od@gmail.com"">m.ar.cu.s.s.tev.enwo.od@gmail.com</a>
<a href=""mailto:ma.rcusst.ev.en.w.ood@gmail.com"">ma.rcusst.ev.en.w.ood@gmail.com</a>
<a href=""mailto:m.a.rc.u.sst.e.venw.o.od@gmail.com"">m.a.rc.u.sst.e.venw.o.od@gmail.com</a>

<a href=""mailto:itsnainiqurrota@gmail.com"">itsnainiqurrota@gmail.com</a>
<a href=""mailto:it.sn.a.i.n.iqu.r.r.ot.a@gmail.com"">it.sn.a.i.n.iqu.r.r.ot.a@gmail.com</a>
<a href=""mailto:i.t.s.n.a.i.ni.q.ur.r.ota@gmail.com"">i.t.s.n.a.i.ni.q.ur.r.ota@gmail.com</a>
<a href=""mailto:it.s.na.i.n.i.q.u.r.ro.ta@gmail.com"">it.s.na.i.n.i.q.u.r.ro.ta@gmail.com</a>
<a href=""mailto:i.t.sn.a.i.n.i.qu.r.ro.ta@gmail.com"">i.t.sn.a.i.n.i.qu.r.ro.ta@gmail.com</a>
<a href=""mailto:i.tsn.ai.niq.ur.rota@gmail.com"">i.tsn.ai.niq.ur.rota@gmail.com</a>
<a href=""mailto:i.tsn.a.i.niq.u.r.r.ot.a@gmail.com"">i.tsn.a.i.niq.u.r.r.ot.a@gmail.com</a>
<a href=""mailto:i.t.sn.ainiqur.r.o.t.a@gmail.com"">i.t.sn.ainiqur.r.o.t.a@gmail.com</a>
<a href=""mailto:i.t.s.na.i.n.iq.u.r.r.ota@gmail.com"">i.t.s.na.i.n.iq.u.r.r.ota@gmail.com</a>
<a href=""mailto:i.ts.nai.niqu.r.rota@gmail.com"">i.ts.nai.niqu.r.rota@gmail.com</a>
<a href=""mailto:itsn.aini.q.ur.ro.ta@gmail.com"">itsn.aini.q.ur.ro.ta@gmail.com</a>
<a href=""mailto:i.ts.n.ai.niq.u.rr.o.t.a@gmail.com"">i.ts.n.ai.niq.u.rr.o.t.a@gmail.com</a>
<a href=""mailto:it.snain.i.q.u.rr.o.ta@gmail.com"">it.snain.i.q.u.rr.o.ta@gmail.com</a>
<a href=""mailto:its.n.a.ini.q.u.r.ro.ta@gmail.com"">its.n.a.ini.q.u.r.ro.ta@gmail.com</a>
<a href=""mailto:its.n.ai.n.i.qu.rro.ta@gmail.com"">its.n.ai.n.i.qu.rro.ta@gmail.com</a>
<a href=""mailto:i.tsna.i.n.iqu.r.rot.a@gmail.com"">i.tsna.i.n.iqu.r.rot.a@gmail.com</a>
<a href=""mailto:i.t.sn.a.i.ni.q.u.rro.ta@gmail.com"">i.t.sn.a.i.ni.q.u.rro.ta@gmail.com</a>
<a href=""mailto:i.ts.na.in.i.qu.r.rot.a@gmail.com"">i.ts.na.in.i.qu.r.rot.a@gmail.com</a>
<a href=""mailto:i.tsna.i.ni.q.u.r.r.ot.a@gmail.com"">i.tsna.i.ni.q.u.r.r.ot.a@gmail.com</a>
<a href=""mailto:i.t.s.naini.qu.rrot.a@gmail.com"">i.t.s.naini.qu.rrot.a@gmail.com</a>
<a href=""mailto:its.nai.ni.qu.r.r.ota@gmail.com"">its.nai.ni.qu.r.r.ota@gmail.com</a>
<a href=""mailto:i.tsna.in.i.qu.rro.ta@gmail.com"">i.tsna.in.i.qu.rro.ta@gmail.com</a>
<a href=""mailto:i.t.s.n.a.ini.q.u.r.r.ot.a@gmail.com"">i.t.s.n.a.ini.q.u.r.r.ot.a@gmail.com</a>
<a href=""mailto:it.snai.ni.qu.r.ro.t.a@gmail.com"">it.snai.ni.qu.r.ro.t.a@gmail.com</a>
<a href=""mailto:i.ts.n.a.ini.q.urro.ta@gmail.com"">i.ts.n.a.ini.q.urro.ta@gmail.com</a>
<a href=""mailto:i.ts.n.ain.i.q.u.r.r.ota@gmail.com"">i.ts.n.ain.i.q.u.r.r.ota@gmail.com</a>
<a href=""mailto:i.t.s.n.a.i.niqur.ro.ta@gmail.com"">i.t.s.n.a.i.niqur.ro.ta@gmail.com</a>
<a href=""mailto:i.t.sna.in.iqu.rrota@gmail.com"">i.t.sna.in.iqu.rrota@gmail.com</a>
<a href=""mailto:its.nai.niq.urr.ota@gmail.com"">its.nai.niq.urr.ota@gmail.com</a>
<a href=""mailto:i.t.sna.ini.qur.r.ota@gmail.com"">i.t.sna.ini.qur.r.ota@gmail.com</a>
<a href=""mailto:i.t.s.nai.ni.qur.ro.ta@gmail.com"">i.t.s.nai.ni.qur.ro.ta@gmail.com</a>
<a href=""mailto:i.ts.nain.i.q.u.rr.ota@gmail.com"">i.ts.nain.i.q.u.rr.ota@gmail.com</a>
<a href=""mailto:i.tsn.a.i.n.i.q.u.rrota@gmail.com"">i.tsn.a.i.n.i.q.u.rrota@gmail.com</a>
<a href=""mailto:i.t.snai.ni.qu.r.ro.t.a@gmail.com"">i.t.snai.ni.qu.r.ro.t.a@gmail.com</a>
<a href=""mailto:it.sna.in.i.q.u.rr.o.ta@gmail.com"">it.sna.in.i.q.u.rr.o.ta@gmail.com</a>
<a href=""mailto:i.ts.n.a.i.n.i.q.u.r.r.o.ta@gmail.com"">i.ts.n.a.i.n.i.q.u.r.r.o.ta@gmail.com</a>
<a href=""mailto:i.ts.na.iniq.u.rrot.a@gmail.com"">i.ts.na.iniq.u.rrot.a@gmail.com</a>
<a href=""mailto:itsn.a.in.i.qu.r.r.ot.a@gmail.com"">itsn.a.in.i.qu.r.r.ot.a@gmail.com</a>
<a href=""mailto:itsn.ain.iqur.rot.a@gmail.com"">itsn.ain.iqur.rot.a@gmail.com</a>
<a href=""mailto:it.s.n.ai.n.i.q.u.rr.ot.a@gmail.com"">it.s.n.ai.n.i.q.u.rr.ot.a@gmail.com</a>
<a href=""mailto:i.tsn.a.i.n.iq.ur.ro.t.a@gmail.com"">i.tsn.a.i.n.iq.ur.ro.t.a@gmail.com</a>
<a href=""mailto:i.ts.nai.ni.q.u.r.r.o.ta@gmail.com"">i.ts.nai.ni.q.u.r.r.o.ta@gmail.com</a>
<a href=""mailto:i.t.sn.ainiq.u.rr.ot.a@gmail.com"">i.t.sn.ainiq.u.rr.ot.a@gmail.com</a>
<a href=""mailto:i.t.sna.i.niq.urrot.a@gmail.com"">i.t.sna.i.niq.urrot.a@gmail.com</a>
<a href=""mailto:i.t.s.nai.n.iqu.r.r.ot.a@gmail.com"">i.t.s.nai.n.iqu.r.r.ot.a@gmail.com</a>
<a href=""mailto:i.t.s.nain.iq.urr.ot.a@gmail.com"">i.t.s.nain.iq.urr.ot.a@gmail.com</a>
<a href=""mailto:i.tsn.ai.ni.qu.r.rota@gmail.com"">i.tsn.ai.ni.qu.r.rota@gmail.com</a>
<a href=""mailto:it.s.na.iniqu.r.r.o.ta@gmail.com"">it.s.na.iniqu.r.r.o.ta@gmail.com</a>
<a href=""mailto:itsna.i.n.i.q.u.rr.ota@gmail.com"">itsna.i.n.i.q.u.rr.ota@gmail.com</a>
<a href=""mailto:i.tsn.ain.i.q.urr.o.t.a@gmail.com"">i.tsn.ain.i.q.urr.o.t.a@gmail.com</a>
<a href=""mailto:its.na.ini.q.urro.ta@gmail.com"">its.na.ini.q.urro.ta@gmail.com</a>
<a href=""mailto:itsn.ainiqu.rr.ota@gmail.com"">itsn.ainiqu.rr.ota@gmail.com</a>
<a href=""mailto:i.ts.nai.ni.q.u.rro.t.a@gmail.com"">i.ts.nai.ni.q.u.rro.t.a@gmail.com</a>
<a href=""mailto:i.ts.naini.qu.rr.ot.a@gmail.com"">i.ts.naini.qu.rr.ot.a@gmail.com</a>
<a href=""mailto:i.t.sn.ai.n.iqu.rr.o.t.a@gmail.com"">i.t.sn.ai.n.iqu.rr.o.t.a@gmail.com</a>
<a href=""mailto:i.t.s.n.a.in.i.q.u.rr.o.ta@gmail.com"">i.t.s.n.a.in.i.q.u.rr.o.ta@gmail.com</a>
<a href=""mailto:i.tsna.ini.qu.rr.o.ta@gmail.com"">i.tsna.ini.qu.rr.o.ta@gmail.com</a>
<a href=""mailto:i.tsn.a.i.n.i.qurr.ota@gmail.com"">i.tsn.a.i.n.i.qurr.ota@gmail.com</a>
<a href=""mailto:i.t.s.n.a.i.niqu.r.rot.a@gmail.com"">i.t.s.n.a.i.niqu.r.rot.a@gmail.com</a>
<a href=""mailto:itsna.i.ni.qurr.ota@gmail.com"">itsna.i.ni.qurr.ota@gmail.com</a>
<a href=""mailto:i.t.snain.iq.urrot.a@gmail.com"">i.t.snain.iq.urrot.a@gmail.com</a>
<a href=""mailto:i.t.s.na.i.ni.q.u.rr.o.ta@gmail.com"">i.t.s.na.i.ni.q.u.rr.o.ta@gmail.com</a>
<a href=""mailto:its.n.aini.qur.ro.t.a@gmail.com"">its.n.aini.qur.ro.t.a@gmail.com</a>
<a href=""mailto:itsn.a.in.iq.u.rro.t.a@gmail.com"">itsn.a.in.iq.u.rro.t.a@gmail.com</a>
<a href=""mailto:i.ts.n.ain.i.q.u.rr.ota@gmail.com"">i.ts.n.ain.i.q.u.rr.ota@gmail.com</a>
<a href=""mailto:its.nai.ni.qu.r.ro.t.a@gmail.com"">its.nai.ni.qu.r.ro.t.a@gmail.com</a>
<a href=""mailto:it.sn.ain.iq.ur.rota@gmail.com"">it.sn.ain.iq.ur.rota@gmail.com</a>
<a href=""mailto:i.t.snainiqurrot.a@gmail.com"">i.t.snainiqurrot.a@gmail.com</a>
<a href=""mailto:its.n.a.i.niqu.r.r.o.ta@gmail.com"">its.n.a.i.niqu.r.r.o.ta@gmail.com</a>
<a href=""mailto:its.nai.ni.qu.r.r.o.ta@gmail.com"">its.nai.ni.qu.r.r.o.ta@gmail.com</a>
<a href=""mailto:i.t.sn.aini.q.u.r.ro.ta@gmail.com"">i.t.sn.aini.q.u.r.ro.ta@gmail.com</a>
<a href=""mailto:i.t.s.n.ainiq.urro.t.a@gmail.com"">i.t.s.n.ainiq.urro.t.a@gmail.com</a>
<a href=""mailto:i.ts.na.ini.q.u.rr.o.t.a@gmail.com"">i.ts.na.ini.q.u.rr.o.t.a@gmail.com</a>
<a href=""mailto:it.sn.a.in.i.qu.rr.ota@gmail.com"">it.sn.a.in.i.qu.rr.ota@gmail.com</a>
<a href=""mailto:i.tsna.i.ni.q.ur.ro.ta@gmail.com"">i.tsna.i.ni.q.ur.ro.ta@gmail.com</a>
<a href=""mailto:i.t.s.naini.qurro.ta@gmail.com"">i.t.s.naini.qurro.ta@gmail.com</a>
<a href=""mailto:i.ts.n.a.i.niqu.rrota@gmail.com"">i.ts.n.a.i.niqu.rrota@gmail.com</a>
<a href=""mailto:i.t.sn.a.i.niqu.rr.o.t.a@gmail.com"">i.t.sn.a.i.niqu.rr.o.t.a@gmail.com</a>
<a href=""mailto:itsn.ai.ni.q.urr.ot.a@gmail.com"">itsn.ai.ni.q.urr.ot.a@gmail.com</a>
<a href=""mailto:i.t.snainiq.u.rr.o.ta@gmail.com"">i.t.snainiq.u.rr.o.ta@gmail.com</a>
<a href=""mailto:i.t.s.na.i.n.i.q.ur.r.o.ta@gmail.com"">i.t.s.na.i.n.i.q.ur.r.o.ta@gmail.com</a>
<a href=""mailto:i.t.s.n.a.in.iq.u.rr.ot.a@gmail.com"">i.t.s.n.a.in.iq.u.rr.ot.a@gmail.com</a>
<a href=""mailto:i.ts.nain.iq.ur.ro.ta@gmail.com"">i.ts.nain.iq.ur.ro.ta@gmail.com</a>
<a href=""mailto:it.s.n.aini.qur.r.ot.a@gmail.com"">it.s.n.aini.qur.r.ot.a@gmail.com</a>
<a href=""mailto:i.tsn.a.in.iqurr.ota@gmail.com"">i.tsn.a.in.iqurr.ota@gmail.com</a>
<a href=""mailto:i.t.snai.niq.u.r.r.ota@gmail.com"">i.t.snai.niq.u.r.r.ota@gmail.com</a>
<a href=""mailto:i.t.s.nai.n.i.qurrot.a@gmail.com"">i.t.s.nai.n.i.qurrot.a@gmail.com</a>
<a href=""mailto:i.ts.n.a.ini.q.u.rrot.a@gmail.com"">i.ts.n.a.ini.q.u.rrot.a@gmail.com</a>
<a href=""mailto:its.n.a.in.iq.urr.ota@gmail.com"">its.n.a.in.iq.urr.ota@gmail.com</a>
<a href=""mailto:itsn.ainiq.ur.r.ot.a@gmail.com"">itsn.ainiq.ur.r.ot.a@gmail.com</a>
<a href=""mailto:i.tsn.ai.niqur.r.o.ta@gmail.com"">i.tsn.ai.niqur.r.o.ta@gmail.com</a>
<a href=""mailto:it.s.n.a.in.iq.urrot.a@gmail.com"">it.s.n.a.in.iq.urrot.a@gmail.com</a>
<a href=""mailto:i.ts.n.a.iniqu.rr.o.t.a@gmail.com"">i.ts.n.a.iniqu.rr.o.t.a@gmail.com</a>
<a href=""mailto:itsn.ain.iqur.ro.ta@gmail.com"">itsn.ain.iqur.ro.ta@gmail.com</a>
<a href=""mailto:i.t.s.nai.niq.u.r.rot.a@gmail.com"">i.t.s.nai.niq.u.r.rot.a@gmail.com</a>
<a href=""mailto:its.na.ini.qurro.t.a@gmail.com"">its.na.ini.qurro.t.a@gmail.com</a>
<a href=""mailto:i.tsna.in.iqu.r.rot.a@gmail.com"">i.tsna.in.iqu.r.rot.a@gmail.com</a>
<a href=""mailto:its.n.a.iniqu.rr.o.ta@gmail.com"">its.n.a.iniqu.rr.o.ta@gmail.com</a>
<a href=""mailto:i.t.sn.a.in.iq.u.rr.o.t.a@gmail.com"">i.t.sn.a.in.iq.u.rr.o.t.a@gmail.com</a>
<a href=""mailto:it.s.n.ain.iqur.r.ota@gmail.com"">it.s.n.ain.iqur.r.ota@gmail.com</a>
<a href=""mailto:i.t.sn.a.ini.qur.r.o.ta@gmail.com"">i.t.sn.a.ini.qur.r.o.ta@gmail.com</a>
<a href=""mailto:i.t.s.nai.n.iq.urrot.a@gmail.com"">i.t.s.nai.n.iq.urrot.a@gmail.com</a>
<a href=""mailto:i.ts.n.ainiqu.r.r.o.ta@gmail.com"">i.ts.n.ainiqu.r.r.o.ta@gmail.com</a>
<a href=""mailto:its.n.a.i.n.iq.u.r.r.o.ta@gmail.com"">its.n.a.i.n.iq.u.r.r.o.ta@gmail.com</a>
<a href=""mailto:its.n.a.i.niqu.r.rot.a@gmail.com"">its.n.a.i.niqu.r.rot.a@gmail.com</a>
<a href=""mailto:it.sna.i.n.iqurro.ta@gmail.com"">it.sna.i.n.iqurro.ta@gmail.com</a>
<a href=""mailto:i.tsn.ai.n.iq.ur.rot.a@gmail.com"">i.tsn.ai.n.iq.ur.rot.a@gmail.com</a>
<a href=""mailto:i.t.sna.i.n.iqurro.t.a@gmail.com"">i.t.sna.i.n.iqurro.t.a@gmail.com</a>
<a href=""mailto:itsnain.iqur.rota@gmail.com"">itsnain.iqur.rota@gmail.com</a>
<a href=""mailto:itsn.a.i.niq.urro.t.a@gmail.com"">itsn.a.i.niq.urro.t.a@gmail.com</a>
<a href=""mailto:its.n.ain.i.qur.ro.t.a@gmail.com"">its.n.ain.i.qur.ro.t.a@gmail.com</a>
<a href=""mailto:i.tsna.ini.q.urr.ota@gmail.com"">i.tsna.ini.q.urr.ota@gmail.com</a>
<a href=""mailto:i.t.sna.in.i.q.u.r.r.o.t.a@gmail.com"">i.t.sna.in.i.q.u.r.r.o.t.a@gmail.com</a>
<a href=""mailto:its.na.in.i.q.u.rrota@gmail.com"">its.na.in.i.q.u.rrota@gmail.com</a>
<a href=""mailto:itsnai.ni.q.u.r.r.o.ta@gmail.com"">itsnai.ni.q.u.r.r.o.ta@gmail.com</a>
<a href=""mailto:i.ts.na.i.ni.q.u.rro.ta@gmail.com"">i.ts.na.i.ni.q.u.rro.ta@gmail.com</a>
<a href=""mailto:i.t.s.n.a.in.i.q.ur.r.o.ta@gmail.com"">i.t.s.n.a.in.i.q.ur.r.o.ta@gmail.com</a>
<a href=""mailto:itsnai.niq.u.rr.ota@gmail.com"">itsnai.niq.u.rr.ota@gmail.com</a>
<a href=""mailto:its.n.ai.ni.qur.ro.ta@gmail.com"">its.n.ai.ni.qur.ro.ta@gmail.com</a>
<a href=""mailto:itsna.i.ni.qur.ro.t.a@gmail.com"">itsna.i.ni.qur.ro.t.a@gmail.com</a>
<a href=""mailto:itsn.ain.iqurr.o.t.a@gmail.com"">itsn.ain.iqurr.o.t.a@gmail.com</a>
<a href=""mailto:its.n.a.i.n.i.qu.r.rota@gmail.com"">its.n.a.i.n.i.qu.r.rota@gmail.com</a>
<a href=""mailto:i.t.s.n.ai.niqur.ro.t.a@gmail.com"">i.t.s.n.ai.niqur.ro.t.a@gmail.com</a>
<a href=""mailto:i.t.s.n.a.i.n.iqu.r.ro.t.a@gmail.com"">i.t.s.n.a.i.n.iqu.r.ro.t.a@gmail.com</a>
<a href=""mailto:i.tsn.ai.niqu.r.ro.t.a@gmail.com"">i.tsn.ai.niqu.r.ro.t.a@gmail.com</a>
<a href=""mailto:its.na.in.i.q.u.rr.ota@gmail.com"">its.na.in.i.q.u.rr.ota@gmail.com</a>
<a href=""mailto:its.na.i.n.i.q.urrota@gmail.com"">its.na.i.n.i.q.urrota@gmail.com</a>
<a href=""mailto:i.ts.n.aini.qu.rr.o.t.a@gmail.com"">i.ts.n.aini.qu.rr.o.t.a@gmail.com</a>
<a href=""mailto:it.s.nainiqu.r.ro.t.a@gmail.com"">it.s.nainiqu.r.ro.t.a@gmail.com</a>
<a href=""mailto:i.ts.na.in.iq.u.r.r.ot.a@gmail.com"">i.ts.na.in.iq.u.r.r.ot.a@gmail.com</a>
<a href=""mailto:it.sn.a.in.i.qu.r.r.ota@gmail.com"">it.sn.a.in.i.qu.r.r.ota@gmail.com</a>
<a href=""mailto:its.na.i.n.iqur.r.o.ta@gmail.com"">its.na.i.n.iqur.r.o.ta@gmail.com</a>
<a href=""mailto:i.ts.n.a.in.iq.urr.ota@gmail.com"">i.ts.n.a.in.iq.urr.ota@gmail.com</a>
<a href=""mailto:it.sn.a.i.ni.qurr.o.ta@gmail.com"">it.sn.a.i.ni.qurr.o.ta@gmail.com</a>
<a href=""mailto:i.t.s.nai.niqur.r.o.ta@gmail.com"">i.t.s.nai.niqur.r.o.ta@gmail.com</a>
<a href=""mailto:i.tsnain.i.qurr.ota@gmail.com"">i.tsnain.i.qurr.ota@gmail.com</a>
<a href=""mailto:i.t.sn.a.ini.q.u.r.rota@gmail.com"">i.t.sn.a.ini.q.u.r.rota@gmail.com</a>
<a href=""mailto:i.ts.nain.i.q.ur.r.o.ta@gmail.com"">i.ts.nain.i.q.ur.r.o.ta@gmail.com</a>
<a href=""mailto:i.ts.nai.ni.q.urr.ota@gmail.com"">i.ts.nai.ni.q.urr.ota@gmail.com</a>
<a href=""mailto:itsn.ain.i.q.u.r.ro.t.a@gmail.com"">itsn.ain.i.q.u.r.ro.t.a@gmail.com</a>
<a href=""mailto:i.t.s.n.ai.n.iq.ur.r.ota@gmail.com"">i.t.s.n.ai.n.iq.ur.r.ota@gmail.com</a>
<a href=""mailto:it.s.n.ain.i.q.u.r.rot.a@gmail.com"">it.s.n.ain.i.q.u.r.rot.a@gmail.com</a>
<a href=""mailto:i.ts.n.a.in.iq.ur.rot.a@gmail.com"">i.ts.n.a.in.iq.ur.rot.a@gmail.com</a>
<a href=""mailto:it.s.n.a.in.iq.urrota@gmail.com"">it.s.n.a.in.iq.urrota@gmail.com</a>
<a href=""mailto:itsnainiq.urro.t.a@gmail.com"">itsnainiq.urro.t.a@gmail.com</a>
<a href=""mailto:i.t.s.na.in.iq.urro.ta@gmail.com"">i.t.s.na.in.iq.urro.ta@gmail.com</a>
<a href=""mailto:itsn.a.i.n.i.q.u.rr.o.t.a@gmail.com"">itsn.a.i.n.i.q.u.rr.o.t.a@gmail.com</a>
<a href=""mailto:i.tsn.ain.i.qu.rr.ota@gmail.com"">i.tsn.ain.i.qu.rr.ota@gmail.com</a>
<a href=""mailto:i.ts.na.i.n.iqur.ro.ta@gmail.com"">i.ts.na.i.n.iqur.ro.ta@gmail.com</a>
<a href=""mailto:it.s.na.in.i.qurrot.a@gmail.com"">it.s.na.in.i.qurrot.a@gmail.com</a>
<a href=""mailto:its.nai.niqu.rro.ta@gmail.com"">its.nai.niqu.rro.ta@gmail.com</a>
<a href=""mailto:it.sna.ini.q.urr.o.ta@gmail.com"">it.sna.ini.q.urr.o.ta@gmail.com</a>
<a href=""mailto:i.t.s.na.i.n.iqurr.o.t.a@gmail.com"">i.t.s.na.i.n.iqurr.o.t.a@gmail.com</a>
<a href=""mailto:i.tsna.iniq.u.rr.ot.a@gmail.com"">i.tsna.iniq.u.rr.ot.a@gmail.com</a>
<a href=""mailto:i.tsnain.i.q.u.rr.ota@gmail.com"">i.tsnain.i.q.u.rr.ota@gmail.com</a>
<a href=""mailto:it.snai.n.i.qur.r.ota@gmail.com"">it.snai.n.i.qur.r.ota@gmail.com</a>
<a href=""mailto:i.t.s.n.ain.i.qu.r.r.o.ta@gmail.com"">i.t.s.n.ain.i.qu.r.r.o.ta@gmail.com</a>
<a href=""mailto:i.t.sna.i.n.i.q.ur.r.o.ta@gmail.com"">i.t.sna.i.n.i.q.ur.r.o.ta@gmail.com</a>
<a href=""mailto:i.ts.nai.niqu.rr.o.ta@gmail.com"">i.ts.nai.niqu.rr.o.ta@gmail.com</a>
<a href=""mailto:i.t.sn.a.iniq.u.r.rot.a@gmail.com"">i.t.sn.a.iniq.u.r.rot.a@gmail.com</a>
<a href=""mailto:i.t.sn.a.i.n.iqu.rr.ota@gmail.com"">i.t.sn.a.i.n.iqu.rr.ota@gmail.com</a>
<a href=""mailto:it.sn.a.iniq.urr.o.t.a@gmail.com"">it.sn.a.iniq.urr.o.t.a@gmail.com</a>
<a href=""mailto:i.ts.n.ai.n.i.qu.rr.ota@gmail.com"">i.ts.n.ai.n.i.qu.rr.ota@gmail.com</a>
<a href=""mailto:i.t.s.nai.n.i.q.ur.ro.t.a@gmail.com"">i.t.s.nai.n.i.q.ur.ro.t.a@gmail.com</a>
<a href=""mailto:i.ts.na.iniqurr.ot.a@gmail.com"">i.ts.na.iniqurr.ot.a@gmail.com</a>
<a href=""mailto:i.tsn.ai.n.iqur.rota@gmail.com"">i.tsn.ai.n.iqur.rota@gmail.com</a>
<a href=""mailto:itsn.a.i.niqu.r.rot.a@gmail.com"">itsn.a.i.niqu.r.rot.a@gmail.com</a>
<a href=""mailto:it.s.na.iniq.ur.ro.ta@gmail.com"">it.s.na.iniq.ur.ro.ta@gmail.com</a>
<a href=""mailto:i.ts.na.iniq.urr.ota@gmail.com"">i.ts.na.iniq.urr.ota@gmail.com</a>
<a href=""mailto:i.tsnai.n.i.q.urr.o.t.a@gmail.com"">i.tsnai.n.i.q.urr.o.t.a@gmail.com</a>
<a href=""mailto:itsn.a.in.iq.ur.rot.a@gmail.com"">itsn.a.in.iq.ur.rot.a@gmail.com</a>
<a href=""mailto:i.t.sn.a.ini.q.u.rr.o.ta@gmail.com"">i.t.sn.a.ini.q.u.rr.o.ta@gmail.com</a>
<a href=""mailto:it.s.n.a.in.iqu.rr.o.t.a@gmail.com"">it.s.n.a.in.iqu.rr.o.t.a@gmail.com</a>
<a href=""mailto:i.t.s.na.iniqu.r.r.ot.a@gmail.com"">i.t.s.na.iniqu.r.r.ot.a@gmail.com</a>
<a href=""mailto:it.s.n.ainiq.ur.r.ota@gmail.com"">it.s.n.ainiq.ur.r.ota@gmail.com</a>
<a href=""mailto:itsnainiqurr.ot.a@gmail.com"">itsnainiqurr.ot.a@gmail.com</a>
<a href=""mailto:i.t.s.n.ai.ni.qur.rot.a@gmail.com"">i.t.s.n.ai.ni.qur.rot.a@gmail.com</a>
<a href=""mailto:i.t.sna.in.i.q.urr.o.ta@gmail.com"">i.t.sna.in.i.q.urr.o.ta@gmail.com</a>
<a href=""mailto:i.ts.nain.iqu.r.ro.ta@gmail.com"">i.ts.nain.iqu.r.ro.ta@gmail.com</a>
<a href=""mailto:itsn.a.iniqur.r.ota@gmail.com"">itsn.a.iniqur.r.ota@gmail.com</a>
<a href=""mailto:i.t.sn.ai.niq.ur.r.o.ta@gmail.com"">i.t.sn.ai.niq.ur.r.o.ta@gmail.com</a>
<a href=""mailto:it.s.n.ai.n.i.qu.rr.o.ta@gmail.com"">it.s.n.ai.n.i.qu.rr.o.ta@gmail.com</a>
<a href=""mailto:i.tsn.ainiq.u.r.rota@gmail.com"">i.tsn.ainiq.u.r.rota@gmail.com</a>
<a href=""mailto:i.ts.na.i.niq.ur.r.o.ta@gmail.com"">i.ts.na.i.niq.ur.r.o.ta@gmail.com</a>
<a href=""mailto:i.ts.n.a.i.n.iq.u.r.ro.ta@gmail.com"">i.ts.n.a.i.n.iq.u.r.ro.ta@gmail.com</a>
<a href=""mailto:it.s.n.a.i.n.i.qu.r.ro.t.a@gmail.com"">it.s.n.a.i.n.i.qu.r.ro.t.a@gmail.com</a>
<a href=""mailto:it.s.naini.qurr.ota@gmail.com"">it.s.naini.qurr.ota@gmail.com</a>
<a href=""mailto:itsn.a.i.niq.urr.ota@gmail.com"">itsn.a.i.niq.urr.ota@gmail.com</a>
<a href=""mailto:i.ts.n.ain.iq.urr.ota@gmail.com"">i.ts.n.ain.iq.urr.ota@gmail.com</a>
<a href=""mailto:it.sn.a.in.i.qu.r.r.o.ta@gmail.com"">it.sn.a.in.i.qu.r.r.o.ta@gmail.com</a>
<a href=""mailto:its.n.ainiq.ur.r.o.ta@gmail.com"">its.n.ainiq.ur.r.o.ta@gmail.com</a>
<a href=""mailto:i.tsnain.iqur.r.ot.a@gmail.com"">i.tsnain.iqur.r.ot.a@gmail.com</a>
<a href=""mailto:itsna.ini.qurrota@gmail.com"">itsna.ini.qurrota@gmail.com</a>
<a href=""mailto:i.t.s.na.i.niqu.rr.o.ta@gmail.com"">i.t.s.na.i.niqu.rr.o.ta@gmail.com</a>
<a href=""mailto:itsn.a.i.ni.q.urr.o.t.a@gmail.com"">itsn.a.i.ni.q.urr.o.t.a@gmail.com</a>
<a href=""mailto:i.ts.n.a.i.n.i.qu.r.rot.a@gmail.com"">i.ts.n.a.i.n.i.qu.r.rot.a@gmail.com</a>
<a href=""mailto:i.ts.nai.ni.q.ur.r.o.ta@gmail.com"">i.ts.nai.ni.q.ur.r.o.ta@gmail.com</a>
<a href=""mailto:i.tsnainiqurro.t.a@gmail.com"">i.tsnainiqurro.t.a@gmail.com</a>
<a href=""mailto:it.s.n.a.i.n.iqurr.o.ta@gmail.com"">it.s.n.a.i.n.iqurr.o.ta@gmail.com</a>
<a href=""mailto:i.t.s.n.ai.ni.qu.r.rot.a@gmail.com"">i.t.s.n.ai.ni.qu.r.rot.a@gmail.com</a>
<a href=""mailto:its.na.ini.qu.r.r.o.t.a@gmail.com"">its.na.ini.qu.r.r.o.t.a@gmail.com</a>"
9y0CGkMN,hw8_3,plarmi,Python,Monday 22nd of May 2023 03:56:57 AM CDT,"# Часы показывают время в формате hh:mm:ss. На этих часах запустили таймер, который прозвенит через n секунд.
# Определите время, которое будет на часах, когда прозвенит таймер. n может принимать значения от 0 до 10^9.
# Решение задачи не дожно содержать циклов. Постарайтесь также не использовать условную инструкцию.

from datetime import datetime, timedelta

now = datetime.now()
timer = now + timedelta(seconds=int(input(""Введите количество секунд: "")))
print(""Время на часах при срабатывании таймера:"", timer.strftime(""%H:%M:%S""))"
S8CgxVTV,hw8_4,plarmi,Python,Monday 22nd of May 2023 03:55:50 AM CDT,"# В часах села батарейка и они стали идти вдвое медленней.
# Когда на часах было  время h1:m1:s1, точное время было h2:m2:s2.
# Определите, точное время, когда часы в следующий раз покажут время h3:m3:s3.
# Решение задачи не должно использовать циклы.

from datetime import datetime

h1, m1, s1 = 12, 0, 0
h2, m2, s2 = 13, 0, 0
exact = datetime(2023, 5, 22, h2, m2, s2)
diff = (exact - datetime(2023, 5, 22, h1, m1, s1)) * 2
h3, m3, s3 = 14, 30, 0
print(exact.replace(hour=h3, minute=m3, second=s3) + diff)
"
6QpuwvvE,hw8_2,plarmi,Python,Monday 22nd of May 2023 03:55:22 AM CDT,"# Часы показывают время в формате hh:mm:ss. Определите количество секунд, которое прошло с начала суток.
# Программа не должна содержать циклов для решения этой задачи.

from datetime import datetime

now = datetime.now()
today = datetime(now.year, now.month, now.day)
seconds_since_midnight = (now - today).seconds
print(""Секунд с начала суток прошло:"", seconds_since_midnight)"
JksJEWRY,hw8_1,plarmi,Python,Monday 22nd of May 2023 03:54:18 AM CDT,"# По заданному числу n от 1 до 365 определите, на какое число какого месяца приходится
# день невисокосного года с номером n.
# Программа получает на вход целое число n и должна вывести два числа: число месяца (от 1 до 31)
# и номер месяца (от 1 до 12), на которое приходится данный день.

import datetime

n = int(input(""Введите число от 1 до 365: ""))
date = datetime.date(2022, 1, 1) + datetime.timedelta(n-1)
print(""День:"", date.day, ""Месяц:"", date.month)"
Rhm3umHF,Seminar14,smatskevich,C++,Monday 22nd of May 2023 03:21:46 AM CDT,"#include <iostream>
#include <string>
#include <vector>

std::vector<int> SuffixArray(const std::string& s) {
  const int n = s.size() + 1;
  std::vector<int> suff_mass(n);
  // Отсортируем по первому символу.
  std::vector<int> c(std::max(256, n));
  for (int i = 0; i <= s.size();++i) c[s[i]]++;
  for (int i = 1; i < 256; ++i) c[i] += c[i - 1];
  for (int i = n - 1; i >= 0; --i) suff_mass[--c[s[i]]] = i;

  // Первое заполнение карманов и концов групп
  std::vector<int> pockets(n);
  pockets[suff_mass[0]] = 0;
  c[0] = 1;
  int curr_pocket = 0;
  for (int i = 1; i < n; ++i) {
    if (s[suff_mass[i]] != s[suff_mass[i - 1]]) ++curr_pocket;
    pockets[suff_mass[i]] = curr_pocket;
    c[curr_pocket] = i + 1;
  }

  for (int k = 0; (1 << k) < n; ++k) {
    std::vector<int> b(n);
    for (int i = n - 1; i >= 0; --i) {
      int curr_suff = (suff_mass[i] - (1 << k) + n) % n;
      b[--c[pockets[curr_suff]]] = curr_suff;
    }
    suff_mass = std::move(b);
    // Обновим pockets и c.
    std::vector<int> new_pockets(n);
    int curr_pocket = 0;
    for (int i = 0; i < n; ++i) {
      if (i > 0 && (pockets[suff_mass[i]] != pockets[suff_mass[i - 1]] ||
          pockets[(suff_mass[i] + (1 << k)) % n] != pockets[(suff_mass[i - 1] + (1 << k)) % n]))
        ++curr_pocket;
      new_pockets[suff_mass[i]] = curr_pocket;
      c[curr_pocket] = i + 1;
    }
    pockets = std::move(new_pockets);
  }

  return suff_mass;
}

int main() {
  std::string s; std::cin >> s;
  std::vector<int> suff_mass = SuffixArray(s);
  for (int suff : suff_mass) {
    std::cout << s.substr(suff) << std::endl;
  }
  return 0;
}
"
pR07g3NP,ku and eku crystal from the usa,tomchemvendor,C++,Monday 22nd of May 2023 03:17:28 AM CDT,"usa warehouse supply , ku  and eku crystal , 8clad powders ,
wickr :chemshop888
Telegram :@Tomchem"
27mXa1L0,Untitled,FSpoto98,Python,Monday 22nd of May 2023 03:15:33 AM CDT,"def inject_cookies(self, cookies_file): #DONE ## Need parallel
        import pickle
        cookies = pickle.load(open(cookies_file, ""rb""))
        for cookie in cookies:
                self.driver.add_cookie(cookie)
        self.driver.refresh()            
        time.sleep(3)"
R91fhiY9,UsersEntity,raka_m_a,Kotlin,Monday 22nd of May 2023 03:08:31 AM CDT,"@Serializable
data class UsersEntity(
    @SerialName(""email"")
    val email: String,
    @SerialName(""role"")
    val role: String,
    @SerialName(""token"")
    val token: String? = null,
    @SerialName(""created_at"")
    val createdAt: String = ""now()"",
    @SerialName(""id"")
    val id: String? = null,
)"
hYaRkGZ5,HTML - Basic,rezamalik15,HTML,Monday 22nd of May 2023 02:58:01 AM CDT,"<html>

<head>
	<title>Belajar HTML</title>
	<link rel=""icon"" href=""https://i.postimg.cc/zD7M3W5F/pngegg-17.png"">
</head>

<body>
	<h1>Selamat Datang!</h1>

	<p>
		<b>Lorem ipsum</b> dolor sit amet, consectetur adipiscing elit. <i>Nullam</i> tortor justo, efficitur sed arcu quis, <u>scelerisque</u> lacinia metus.
	</p>

	<p>
		<b>
			<u><i>Lorem Ipsum</i></u>
		</b>
	</p>

	<!-- ordered lists -->

	<ol start=""5"">
		<li>Number 1</li>
		<li>Number 2</li>
		<li>Number 3</li>
		<li>Number 4</li>
		<li>Number 5</li>
	</ol>

	<ol start=""b"" type=""a"">
		<li>Number 1</li>
		<li>Number 2</li>
		<li>Number 3</li>
		<li>Number 4</li>
		<li>Number 5</li>
	</ol>

	<ol start=""2"" type=""I"">
		<li>Number 1</li>
		<li>Number 2</li>
		<li>Number 3</li>
		<li>Number 4</li>
		<li>Number 5</li>
	</ol>

	<!-- unordered list -->

	<ul>
		<li>Number 1</li>
		<li>Number 2</li>
		<li>Number 3</li>
		<li>Number 4</li>
		<li>Number 5</li>
	</ul>

	<ul type=""square"">
		<li>Number 1</li>
		<li>Number 2</li>
		<li>Number 3</li>
		<li>Number 4</li>
		<li>Number 5</li>
	</ul>

	<ul type=""circle"">
		<li>Number 1</li>
		<li>Number 2</li>
		<li>Number 3</li>
		<li>Number 4</li>
		<li>Number 5</li>
	</ul>

	<ul type=""none"">
		<li>Number 1</li>
		<li>Number 2</li>
		<li>Number 3</li>
		<li>Number 4</li>
		<li>Number 5</li>
	</ul>

	<a href=""https://google.com"">go to google.com</a>
	<br><br>
	<a href=""https://youtube.com"" target=""_blank"">go to youtube.com</a>
	<br>
	<br>

	<a href=""https://developer.mozilla.org/en-US/docs/Web/HTML/Element"" target=""_blank"">
		<img
		src=""https://i.postimg.c/zD7M3W5F/pngegg-17.png""
		alt=""Logo HTML""
		width=""50""
		>
	</a>

 
	

</body>

</html>"
6Bv2Jc2f,Remove Duplicates from Sorted List,nikolstoyneva,Java,Monday 22nd of May 2023 02:52:12 AM CDT,"/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode deleteDuplicates(ListNode head) {
    ListNode current = head;
        ListNode result = current;
        ListNode previous = head;
        while (current != null) {
            ListNode inner = head;
            boolean isUnique = true;
           while (inner != null) {
               if (inner.val == current.val && inner != current) {
                   isUnique = false;
                   break;
               }
               inner = inner.next;
           }
           if (isUnique) {
               previous = current;
               current = current.next;
           } else {
               previous.next = current.next;
               current = current.next;
           }
        }
        return result;
    }
}"
xDFU4GBB,ClassYearEntity,raka_m_a,Kotlin,Monday 22nd of May 2023 02:39:21 AM CDT,"@Serializable
data class ClassYearEntity(
    val year: Int,
    @SerialName(""id_class"") val classId: Int?,
    @SerialName(""id"") val id: Int? = null
)"
5ZcvEHSh,ClassesEntity,raka_m_a,Kotlin,Monday 22nd of May 2023 02:38:11 AM CDT,"@Serializable
data class ClassesEntity(
    @SerialName(""grade"")
    val grade: Int,
    @SerialName(""vocation"")
    val vocation: String,
    @SerialName(""id_class"")
    val idClass: Int? = null,
)"
RTvTJDGS,StudentAttendanceEntity,raka_m_a,Kotlin,Monday 22nd of May 2023 02:37:17 AM CDT,"@Serializable
data class StudentAttendanceEntity(
    @SerialName(""id_attendance"")
    val idAttendance: Int,
    @SerialName(""id_student_year"")
    val idStudentYear: Int,
    @SerialName(""status"")
    val status: String = ""Hadir"",
    @SerialName(""id"")
    val id: Int? = null,
)"
M8EgLzZu,AttendanceEntity,raka_m_a,Kotlin,Monday 22nd of May 2023 02:35:31 AM CDT,"@Serializable
data class AttendanceEntity(
    @SerialName(""id_class_year"")
    val idClassYear: Int,
    @SerialName(""id_subject"")
    val idSubject: Int,
    @SerialName(""id_teacher"")
    val idTeacher: String,
    @SerialName(""information"")
    val information: String,
    @SerialName(""latitude"")
    val latitude: Double?,
    @SerialName(""longitude"")
    val longitude: Double?,
    @SerialName(""created_at"")
    val createdAt: String = ""now()"",
    @SerialName(""id"")
    val id: Int? = null,
    @SerialName(""image_url"")
    val imageUrl: String? = """",
)"
Scgg3Uub,Untitled,wclovers,PHP,Monday 22nd of May 2023 02:31:32 AM CDT,"add_filter( 'wcfmmp_store_address_string', function( $store_address, $vendor_data ) {
    return WC()->countries->get_formatted_address([
        'address_1'  => $vendor_data['address']['street_1'],
        'address_2'  => $vendor_data['address']['street_2'],
        'city'       => $vendor_data['address']['city'],
        'state'      => $vendor_data['address']['state'],
        'postcode'   => $vendor_data['address']['zip'],
        'country'    => $vendor_data['address']['country'],
    ], ', ');
}, 10, 2 );"
buXFmRHY,Untitled,wclovers,PHP,Monday 22nd of May 2023 01:41:30 AM CDT,"add_filter('product_manage_fields_yoast', function($fields) {
    if (wcfm_is_vendor()) {
        if (isset($fields['yoast_wpseo_focuskw_text_input'])) $fields = wcfm_hide_field( 'yoast_wpseo_focuskw_text_input', $fields );
    }
    return $fields;
});"
qKj7zuDt,Demo item script - Detach after elapsed time,Gayngel,Linden Scripting,Monday 22nd of May 2023 01:19:18 AM CDT,"// A script to put in demo worn items to allow the purchaser a certain amount of time to try on the item. Once the time has expired it will detach and they can not wear it again.

// make this script no mod so it can not be reset by the wearer.

// can work for copy or no copy items

// unless the user is going to copy at reattach this item a million times, this is a sufficent way allow a user only a certian amount of time to view the worn demo.



key creator = """"; // the uuid key of the creator, put it between the brackets. Used so that item wont detach and delete if the wearer is the creator. 

float time = 300.0; // time in seconds to allow the user to wear the demo. 300 seconds is 5 minutes.

float elapsed_time;

integer allow_timer = TRUE; // a boolean to make sure the timer does not restart after repeatedly attaching.

integer allow_wearing = TRUE; // a boolean to allow the demo to be worn, if the boolean is false don't allow the item to be worn.

integer tick;


string FormatFloat(float f, integer num_decimals) // a function to cut trailing zeros from a float. Taken from this wiki: https://wiki.secondlife.com/wiki/User:Pedro_Oval/Float_formatting_functions
{
    float rounding = (float)("".5e-"" + (string)num_decimals) - 0.0000005;
    if (f < 0.0) f -= rounding; else f += rounding;
    string ret = llGetSubString((string)f, 0, num_decimals - 7);
    if ((float)ret == 0. && llGetSubString(ret, 0, 0) == ""-"")
        ret = llDeleteSubString(ret, 0, 0);
    if (! num_decimals) ret += ""0"";
    return ret;
}

default
{
    on_rez(integer start_param)
    {
        
     integer at = llGetAttached(); // check if item is attached. 
     
     if(at == 0) // if item is not attached either delete the item it is copy or stop the timer
     {
         llDie(); // if item is copy we can just delete it
         
         llOwnerSay(""Please wear this item. Don't rez it."");
         
         
         // option for no copy items below. // comment out the llDie above if item is no copy and uncomment the below lines.
        // you could also keep llDie and delte the item if it is a free demo.
        
        // llSetTimerEvent(0.0);
        // allow_timer = TRUE;
         
         
       
     }   
        
        
    }
    
    attach(key id)
    {
     
     if(id)
     {
       
       if(id != creator)
       {
           if(allow_timer == TRUE)
           {
           allow_timer = FALSE;    
           llSetTimerEvent(1.0);
          
           }
           
           if(allow_wearing == TRUE)
           {
                float elapsed = elapsed_time/60;
      
             llOwnerSay(""You have "" + FormatFloat(elapsed,2) + "" minutes to wear this demo item"");  
               
           }
           
           else
           {
              llOwnerSay(""The time to view this item has expired."");  
             llRequestPermissions(llGetOwner(),PERMISSION_ATTACH);  
               
           }
           
           
       }  
         
         
     }   
        
    }
    
    
    state_entry()
    {
       //  creator = llGetCreator(); // optional way to get the creator key. uncomment this line if you want to get the key of the creator this way
        tick = 0;
        elapsed_time = time - (float)tick;
       
    }

   
    
    
    timer()
    {
        
      ++tick;
      
      elapsed_time = time - (float)tick; // get elapsed time 
      
       if(elapsed_time <= 0.0)
       {
           llSetTimerEvent(0.0);
           llOwnerSay(""The time to view this item has expired."");
           allow_wearing = FALSE; // if time has expired dont allow item to beworn again.
    
           llRequestPermissions(llGetOwner(),PERMISSION_ATTACH);
           
           
       } 
        
        
    }
    
    run_time_permissions(integer perm)
    {
        if(perm & PERMISSION_ATTACH)
         llDetachFromAvatar();  //detach from avatar after elaped time
        
        
    }
    
}
"
ajTJhtHW,LP3 fix lightgallery,Igor150195,JavaScript,Monday 22nd of May 2023 12:52:48 AM CDT,"'use strict'

;(function() {
	var $win = $(window),
		$doc = $(document),
		$html = $(document.documentElement),
		$body = $(document.body),
		iOs = /iPhone|iPad|iPod/i.test(navigator.userAgent),
		initializedMaps = [],
		youtubeListPlayers = [];
		

	window.lp_template = {
		version: 'landing page v3',
		queue: {}
	};
	
	lp_template.queue.aboutPopupLink = function($self) {
		if(window.location.pathname != ""/my/s3/data/lp/live.edit.php""){
		$('a[href^=""popup:""]').attr('style','pointer-events: none');
		}
	    $(window).on('load', function(){
			$('a[href^=""popup:""]').attr('style','pointer-events: auto');
		})
	}
	
	lp_template.checkAutoplayVideo = function($blocks) {
		$blocks.each(function() {
			var $this = $(this),
				playStatus = $this.data('playStatus'),
				inViewport = isElementInViewport(this),
				$video = $this.find('video'),
				$thisVideo = $video.length ? $video : $this.find('iframe');
				
			
	
			if (inViewport && playStatus !== 'play') {
				$this.trigger('autoplayVideo', ['play', $thisVideo[0].nodeName.toLowerCase()]);
				$this.data('playStatus', 'play');
			} else if (!inViewport && playStatus === 'play') {
				$this.trigger('autoplayVideo', ['pause', $thisVideo[0].nodeName.toLowerCase()]);
				$this.data('playStatus', 'pause');
			}
		
		})
	}
	
	lp_template.queue.scrollToAnchor = function($self) {
		
		if (s3LP.is_cms) return;
		
		$self.on('click', 'a', function(e){
			var $this = $(this),
				thisHref = $this.attr('href');
				
			if (thisHref.length < 2 || thisHref[0] != '#') return;
			
			var $thisBlock = $(thisHref);
			
			if (!$thisBlock.length) return;
			
			e.preventDefault();
			
			//42658
			let scrollValue = $thisBlock.offset().top;
			const $fixedMenu =$(`.js-fixed-menu._to-fix-menu:not(._is-cms)`);

			if ($fixedMenu.size() && $fixedMenu.height()){
				scrollValue -= $fixedMenu.height();
			}
			
			$('html, body').animate({
				scrollTop: scrollValue
			});
			$('html').css({
				overflow: 'visible'
			});
		});
	}
	
	lp_template.checkMapInitialization = function($blocks) {
        $blocks.each(function() {
            var $this = $(this),
                id = $this.attr('id');

            if (initializedMaps.includes(id)) {
                return;
            }

            var inViewport = isElementInViewport(this);

            if (inViewport) {
                initializedMaps.push(id);

                lp_template.initMaps($this);
            }
        })
    }

    lp_template.initGoogleMaps = function(options) {
        var map = new google.maps.Map(document.getElementById(options.id), {
            zoom: parseInt(options.zoom),
            scrollwheel: false,
            center: new google.maps.LatLng(options.center[0], options.center[1])
        });

        $.each(options.data, function(key, item) {
            var marker = new google.maps.Marker({
                position: new google.maps.LatLng(item.coords[0], item.coords[1]),
                map: map,
                title: item.name
            });

            var infowindow = new google.maps.InfoWindow({
                content: '<div class=""baloon-content"">' +
                    '<h3 style=""margin: 0; padding-bottom: 3px;"">' + item.name + '</h3>' +
                    item.desc +
                    '</div>'
            });

            google.maps.event.addListener(marker, 'click', function() {
                infowindow.open(map, marker);
            });
        });
    }

    lp_template.initYandexMaps = function(options) {
        var map = new ymaps.Map(options.id, {
            center: options.center,
            zoom: options.zoom,
            behaviors: ['drag', 'rightMouseButtonMagnifier'],
        });

        map.controls.add(
            new ymaps.control.ZoomControl()
        );

        var MyBalloonContentLayoutClass = ymaps.templateLayoutFactory.createClass(
            '<div class=""baloon-content"" style=""padding: 0 10px;"">' +
            '<h3 style=""margin: 0;"">$[properties.name]</h3>' +
            '<p>$[properties.desc]</p>' +
            '</div>'
        );

        var myCollection = new ymaps.GeoObjectCollection();

        $.each(options.data, function(key, item) {
            myCollection.add(new ymaps.Placemark(
                item.coords,
                item, {
                    balloonContentLayout: MyBalloonContentLayoutClass
                }
            ));
        });

        map.geoObjects.add(myCollection);

        $('#' + options.id).data('ymaps', map);
    }

    lp_template.initMaps = function($block) {
        var options = $block.data('init-params');

        options = typeof options === 'string' ? JSON.parse(options) : options;

        if (typeof options.center === 'string') {
            options.center = options.center.split(',');
        }

        $.each(options.data, function(key, item) {
            if (typeof item.coords === 'string') {
                item.coords = item.coords.split(',');
            }
        });

        var keyMap = options.key;

        if (options.type === ""google"") {
            if (window.google && window.google.maps) {
                lp_template.initGoogleMaps(options);
            } else {
                var script = document.createElement('script');
                script.async = 'async';
                script.src = `//maps.googleapis.com/maps/api/js?key=${keyMap}`;
                document.body.append(script);

                script.onload = function() {
                    lp_template.initGoogleMaps(options);
                }
            }
        } else {
            if (window.ymaps && window.ymaps.Map) {
                lp_template.initYandexMaps(options)
            } else {
                /*var script = document.createElement('script');
                script.async = 'async';
                //script.src = `//api-maps.yandex.ru/2.1/?apikey=${keyMap}&lang=ru_RU`;
                
                //start 1935
                var scriptLangSrc = `${$ite.params.lang}_${$ite.params.lang.toUpperCase()}`;
                if (scriptLangSrc == 'en_EN') {
                	scriptLangSrc = 'en_US'
                }
                script.src = `//api-maps.yandex.ru/2.1/?apikey=${keyMap}&lang=` + scriptLangSrc;
                //end 1935
                
                document.body.append(script);

                script.onload = function() {
                    ymaps.ready(function() {
                        lp_template.initYandexMaps(options)
                    });
                }*/
                
                
                var htmlLang = document.documentElement.lang;
		        var script = document.createElement(""script"");
		        script.async = ""async"";
		        if (htmlLang == ""en"") {
		          script.src = `//api-maps.yandex.ru/2.1/?apikey=${keyMap}&lang=en_RU`;
		        } else {
		          script.src = `//api-maps.yandex.ru/2.1/?apikey=${keyMap}&lang=ru_RU`;
		        }
		
		        document.body.append(script);
		
		        script.onload = function () {
		          ymaps.ready(function () {
		            lp_template.initYandexMaps(options);
		          });
		        };
            }
        }
    }
	
	/*
	lp_template.initMaps = function(options) {
		var map;
		
		if (options.type === ""google"") {
			map = new google.maps.Map(document.getElementById(options.id), {
				zoom: parseInt(options.zoom),
				scrollwheel: false,
				center: new google.maps.LatLng(options.center[0], options.center[1])
			});

			$.each(options.data, function(key, item) {
			
				var marker = new google.maps.Marker({
					position: new google.maps.LatLng(item.coords[0], item.coords[1]),
					map: map,
					title: item.name
				});

				var infowindow = new google.maps.InfoWindow({
					content: '<div class=""baloon-content"">' +
						'<h3 style=""margin: 0; padding-bottom: 3px;"">' + item.name + '</h3>' +
						item.desc +
						'</div>'
				});

				google.maps.event.addListener(marker, 'click', function() {
					infowindow.open(map, marker);
				});
				
				
			});
		
		} else {
			
			ymaps.ready(function() {
			
				map = new ymaps.Map(options.id, {
					center: options.center,
					zoom: options.zoom,
					behaviors: ['drag', 'rightMouseButtonMagnifier'],
				});

				map.controls.add(
					new ymaps.control.ZoomControl()
				);

				var MyBalloonContentLayoutClass = ymaps.templateLayoutFactory.createClass(
					'<div class=""baloon-content"" style=""padding: 0 10px;"">' +
					'<h3 style=""margin: 0;"">$[properties.name]</h3>' +
					'<p>$[properties.desc]</p>' +
					'</div>'
				);

				var myCollection = new ymaps.GeoObjectCollection();

				$.each(options.data, function(key, item) {
					myCollection.add(new ymaps.Placemark(
						item.coords,
						item, {
							balloonContentLayout: MyBalloonContentLayoutClass
						}
					));
				});

				map.geoObjects.add(myCollection);
				
				$('#' + options.id).data('ymaps', map);
			});
		}
	}
	
	lp_template.queue.lpSimpleMap = function($self) {
		var $block = $self.find('.js-lp-simple-map');
		
		if ($block.length) {
			setTimeout(function(){
				$block.each(function(){
					var $this = $(this),
						thisParams = $this.data('init-params');
						
					thisParams = typeof thisParams === 'string' ? JSON.parse(thisParams) : thisParams;
						
					if (typeof thisParams.center === 'string') {
						thisParams.center = thisParams.center.split(',');
					}
					
					$.each(thisParams.data, function(key, item) {
						if (typeof item.coords === 'string') {
							item.coords = item.coords.split(',');
						}
					});
					
					lp_template.initMaps(thisParams);
				});
			}, 750);
		}
	}
	*/
	
	lp_template.queue.steps11 = function($self) {
		var $block = $self.hasClass('js-step-11') ? $self : $self.find('.js-step-11');
		if ($block.length) {
			try {
				let linePos = function(){
					let firstItemPos = $('.lp-steps-11-item__number').first().position().top,
						firstItemHeight = $('.lp-steps-11-item__number').first().outerHeight(),
						lastItemPos = $('.lp-steps-11-item__number').last().position().top;
	
					$('.lp-steps-11-items .line span').css('height', lastItemPos-firstItemPos-firstItemHeight);
					$('.lp-steps-11-items .line').css('top', firstItemPos+firstItemHeight);
				}
	
				linePos();
				$(window).resize(function(){
					var numbElemWidth = $block.find('.lp-steps-11-item__number').outerWidth() / 2;
					linePos();
					if (window.matchMedia('(max-width : 959px)').matches) {
				    	$block.find('.line').css('left', numbElemWidth);
				    }
				    else {
				    	$block.find('.line').css('left', '50%');
				    }
				});
	
			} catch(e) {
				console.log(e);
			}
		}
	}

	lp_template.queue.popupStepForm = function($self) {
		var $block = $self.find('.js-step-form-popup');
		
		if ($block.length) {
			$block.formsteps({
				mode: 'popup'
			});
		}
	};
	
	/*
	
	lp_template.queue.promoSlider = function($self) {
		var $block = $self.find('.js-promo2-slider');
		
		$block.each(function (index, slider) {
		    var $slider = $(slider);
		    var autoplay = $slider.data('autoplay') || false;
		    $slider.slick({
		      dots: true,
		      autoplay: !!autoplay,
		      autoplaySpeed: autoplay
		    });
		    $slider.on('beforeChange', function (event, slick) {
		      var $this = $(this);
		      var $cloned = $this.find('.slick-cloned');
		      $cloned.each(function (index, slide) {
		        styleSlide(slide);
		      });
		      slick.$slides.each(function (index, slide) {
		        styleSlide(slide);
		      });
		    });
		  });
		  
		function styleSlide(slide) {
		  var $slide = $(slide).find('.lp-promo2__slider-item');
		  var $img = $slide.find('img');
		
		  if ($img.height() < $slide.height()) {
		    $slide.css({
		      'display': 'flex',
		      'align-items': 'center'
		    });
		  }
		}
	};*/
	
	lp_template.queue.headerInPopup = function($self) {
	
		/* Old Version */
		if (s3LP.is_cms) return;
		
		var $block = $self.find('._js-in-promo');
		
		if ($block.length) {
			$block.each(function(){
				var $this = $(this),
					$thisParent = $this.next('._insert-header');
					
				if ($thisParent.length) {
					$this.insertBefore($thisParent.find('.js-promo-before'));
					$thisParent.addClass('_header_inserted');
				}
			});
		}
	};
	
	lp_template.queue.headerCommunity = function($self) {
		var $header = $self.find('.js-community');
		
		if (s3LP.is_cms) return;
		
		if ($header.length) {
			$header.each(function() {
				var $this = $(this),
					$thisNewParent = findPromoBlock($this);
					
				if ($thisNewParent) {
					$this.insertBefore($thisNewParent.find('.js-before-community'));
					$thisNewParent.addClass('_unified');
				}
			});
		}
		
		function findPromoBlock ($block) {
			if (!$block.length) return null;
			
			var $next = $block.next('.js-make-community');
			
			if ($next.length) return $next;
			
			if (!$next.length) {
				return findPromoBlock($block.next());
			}
		}
	};
	
	lp_template.queue.partnersSlider1 = function($self) {
		var $block = $self.find('.js-partners-1');

		if ($block.length) {

			$block.each(function() {
				var $slider = $(this),
					count = $slider.data('count'),
					autoplay = !!$slider.data('autoplay'),
					pause = $slider.data('pause'),
					speed = $slider.data('speed'),
					arrows = !!$slider.data('arrows'),
					infinite = !!$slider.data('infinite');
					
				$slider.owlCarousel({
					autoplay: autoplay,
					autoplayTimeout: pause,
					smartSpeed: speed,
					loop: infinite,
					dots: false,
					responsive: {
						0: {
							items: 1,
							margin: 0
						},
						600: {
							items: 3,
							margin: 24
						},
						960: {
							items: 3,
							margin: 48
						},
						1200: {
							items: count,
							margin: 24
						},
						1380: {
							items: count,
							margin: 36
						}
					}
				});
			});
		}		
	};

	lp_template.queue.contactsTab = function($self) {
		var $block = $self.find('.js-contacts-tab-1');
		var $allTabs = $self.find('.tab-item');
		var activeClass = 'active';
		
		$block.on('click', function(){
			
			var $thisParent = $(this).closest('.tab-item');
			
			if ($thisParent.hasClass(activeClass)) {
				$thisParent.removeClass(activeClass).find('.tab-item__text-part').slideUp();
			} else {
			
				$allTabs.removeClass(activeClass).find('.tab-item__text-part').slideUp();
				
				$thisParent.addClass(activeClass).find('.tab-item__text-part').slideDown();
			}
		});
		
		$($block[0]).trigger('click');
	}

	lp_template.queue.formInputs = function($self) {		
		
		$doc.on('click', '.js-select, .js-multi_select', function() {
			var $this = $(this),
				openedClass = '_opened',
				$thisParent = $this.closest('.lp-form-tpl__field-select, .lp-form-tpl__field-multi_select'),
				$thisList = $thisParent.find('.lp-form-tpl__field-select__list, .lp-form-tpl__field-multi_select__list');
				
			if ($thisParent.hasClass(openedClass)) {
				$thisParent.removeClass(openedClass);
				$thisList.slideUp();
			} else {
				$thisParent.addClass(openedClass);
				$thisList.slideDown();
			}
		});
		
		$(document).ready(function () {
	      $("".js-choose-select._checked"").each(function () {
	        var $this = $(this),
	          thisText = $this.text(),
	          $thisParent = $this.closest("".lp-form-tpl__field-select""),
	          checkedClass = ""_checked"";
	
	        $thisParent.find("".js-choose-select"").removeClass(checkedClass);
	        $thisParent.find("".lp-form-tpl__field-select__input"").text(thisText);
	        $thisParent.parent().find(""input"").val(thisText);
	      });
	    });
		
		$doc.on('click', '.js-choose-select', function() {
			var $this = $(this),
				thisText = $this.text(),
				$thisParent = $this.closest('.lp-form-tpl__field-select'),
				checkedClass = '_checked';
				
			if (!$this.hasClass(checkedClass)) {
				$thisParent.find('.js-choose-select').removeClass(checkedClass);
				$this.addClass(checkedClass);
				$thisParent.find('.lp-form-tpl__field-select__input').text(thisText);
				$thisParent.parent().find('input').val(thisText);
			}
			
			$thisParent.find('.lp-form-tpl__field-select__list').slideUp();
			$thisParent.removeClass('_opened');
				
		});
		
		$doc.on('click', '.js-choose-milti_select', function() {
			var $this = $(this),
				$thisParent = $this.closest('.lp-form-tpl__field-multi_select'),
				checkedClass = '_checked';
				
			if (!$this.hasClass(checkedClass)) {
				$this.addClass(checkedClass);
			} else {
				$this.removeClass(checkedClass);
			}
			
			var choosenElements = $thisParent.find('.' + checkedClass),
				choosenElementsText = [];
				
			choosenElements.each(function() {
				choosenElementsText.push($(this).text());
			});
				
			$thisParent.find('.lp-form-tpl__field-multi_select__input--count').text(choosenElements.length);
			$thisParent.parent().find('input').val(choosenElementsText.join(', '));
		});
		
		
		
		$doc.on('click', function(e) {
			if ($(e.target).closest('.lp-form-tpl__field-select, .lp-form-tpl__field-multi_select').length) return;
			
			$doc.find('.lp-form-tpl__field-select, .lp-form-tpl__field-multi_select').removeClass('_opened');
			
			$doc.find('.lp-form-tpl__field-select__list, .lp-form-tpl__field-multi_select__list').slideUp();
		});
	}
	
	lp_template.queue.calendar = function($self) {
		$doc.on('click', '.js-form-calendar', function() {
			var $this = $(this),
				thisCalendarInited = $this.data('calendarInited');
				
			if (!thisCalendarInited) {
				var bb = $this.datepicker().data('datepicker');
				bb.show();
				thisCalendarInited = $this.data('calendarInited', true);
				
			}
		});
		
		$doc.on('click', '.js-form-calendar-interval', function() {
			var $this = $(this),
				thisCalendarInited = $this.data('calendarInited');
				
			if (!thisCalendarInited) {
				var bb = $this.datepicker({
					range: true,
					multipleDatesSeparator: "" - ""
				}).data('datepicker');
				bb.show();
				thisCalendarInited = $this.data('calendarInited', true);
			}
		});
	}
	
	lp_template.queue.lg = function($self) {
		var $block = $self.find('.js-lg-init');
		
		if ($block.length) {
			$block.lightGallery({
				selector: '.lg-item',
				share: false,
				hash: false,
				autoplayControls: false,
				actualSize: false,
				toogleThumb: false,
				getCaptionFromTitleOrAlt: false,
				download: false,
				thumbWidth: 64,
				thumbHeight: '64px',
				nextHtml: '<svg width=""24"" height=""24"" viewBox=""0 0 24 24"" fill=""none"" xmlns=""http://www.w3.org/2000/svg""><path fill-rule=""evenodd"" clip-rule=""evenodd"" d=""M8.98528 4.32805C9.3758 3.93753 10.009 3.93753 10.3995 4.32805L17.0563 10.9849C17.4469 11.3754 17.4469 12.0086 17.0563 12.3991L10.3995 19.056C10.009 19.4465 9.3758 19.4465 8.98528 19.056C8.59475 18.6654 8.59475 18.0323 8.98528 17.6418L14.935 11.692L8.98528 5.74226C8.59475 5.35174 8.59475 4.71857 8.98528 4.32805Z"" fill=""white""/></svg>',
				prevHtml: '<svg width=""24"" height=""24"" viewBox=""0 0 24 24"" fill=""none"" xmlns=""http://www.w3.org/2000/svg""><path d=""M14.8492 5.03516L8.19239 11.692L14.8492 18.3489"" stroke=""white"" stroke-width=""2"" stroke-linecap=""round"" stroke-linejoin=""round""/></svg>'
			});
		}
	}
	
	lp_template.queue.qaToggle = function($self) {
		var $block = $self.hasClass('js-qa-toggle') ? $self : $self.find('.js-qa-toggle');
		
		if($block.length) {
			$block.each(function(){
				var $this = $(this);
				
				if($('.lp-qa-3-questions-col').length) {
					var elemLength = $('.lp-qa-3-questions-col:first-child').find('.lp-qa-3-questions__item');
					function getMaxOfArray(nums) {
					  return Math.max.apply(null, nums);
					}
					for (i = 0; i < elemLength.length; i++) {
						var i = i,
							numArr = [],
							$thisElem = $this.find('.lp-qa-3-questions__item:nth-child(' + (i + 1) + ') .lp-qa-3-questions__item-title');
							$($thisElem).each(function(){
								var height = $(this).outerHeight();
									numArr.push(height);
							});
						$thisElem.css('height', getMaxOfArray(numArr));
					}
				}
			
				if (s3LP.is_cms && !$('body').hasClass('preview_mode')) {
					setTimeout(function(){
						$this.find('._col:first-child ._item:first-child').addClass('isCMS').addClass('active');
					},500);
				}
		
				var $button = $this.find('.js-qa-show'),
					activeClass = 'active',
					$closeButton = $this.find('.js-qa-hide');
					
					
					
				
				$button.on('click', function(e) {
					e.preventDefault();
					var $parent = $(this).closest('._item'),
					$wrapScroll = $(window).scrollTop();
					
					$parent.addClass(activeClass);
					$parent.find('._text').slideDown();
					$(this).siblings('.js-qa-hide').attr('data-scroll-top', $wrapScroll);
				});
				
				$closeButton.on('click', function(e) {
					e.preventDefault();
					var $parent = $(this).closest('._item'),
					$scroolTop = $(this).attr('data-scroll-top');
					
					
					$parent.removeClass(activeClass);
					$parent.find('._text').slideUp();
					$(window).scrollTop($scroolTop);
				});
			});
			
		}
	}
	
	lp_template.queue.titleHeight = function($self) {
		var $block = $self.find('.js-title-height'),
			func = function() {
				$block.each(function(){
					var $this = $(this),
						$title = $this.find('._title'),
						minWidth = $this.data('min-width') || 960,
						minHeight = 0;
						
					$title.css({
						minHeight: 0
					});
					
					if ($(window).width() >= minWidth) {
						$title.each(function(){
							var thisHeight = $(this).height();
							
							if (minHeight < thisHeight) {
								minHeight = thisHeight;
							}
						});	
						
						$title.css({
							minHeight: minHeight
						});
					}
				});
			};
			
		$(window).on('resize', func);
		if (s3LP.is_cms) {
			setTimeout(function(){
				LpController.afterSave(function () {
				    func();
				});
			},1000);
		}
	}
	
	lp_template.queue.accordeon = function($self) {
		var $block = $self.find('.js-accordeon');
		
		$block.on('click', function() {
			var $thisParent = $(this).closest('._item'),
				$thisText = $thisParent.find('._text');
			
			if (!$thisText.is(':animated')) { 
				$thisParent.toggleClass('active');
				$thisText.slideToggle();
			}
		});
		
		if (s3LP.is_cms && !$('body').hasClass('preview_mode')) {
			$block.closest('[data-block-layout]').find('._item:first-child').addClass('isCMS').addClass('active');
		}
	}
	
	lp_template.queue.qa10Tabs = function($self) {
		var $block = $self.find('.js-10-qa');
		
		$win.on('resize', function(){
			
			$block.each(function(){
				var contentHeight = 0,
					$this = $(this);
				
				$this.find('.lp-qa-10-item__text').each(function(){
					if ($(this).height()>contentHeight){
						contentHeight = $(this).height()
					}
				});
				
				$this.find('.lp-qa-10-content').css('min-height', contentHeight);
			});
		});
		
		$block.on('click', '.lp-qa-10-item__title', function() {
			var $this = $(this),
				$parent = $this.closest('.js-10-qa'),
				$content = $this.parent().find('.lp-qa-10-item__text'),
				$allTitles = $parent.find('.lp-qa-10-item__title');
				
			if ($win.width() > 959) {
			
				var qaContent = $parent.find('.lp-qa-10-content');

				if ($this.hasClass('_active')) {
					qaContent.html('');				
					$this.removeClass('_active');
				} else {
					qaContent.html('');
					$allTitles.removeClass('_active');
					$this.addClass('_active');
					$content.clone(true).removeAttr('style').appendTo(qaContent);
				}
				
			
			} else {
				
				if ($this.hasClass('_active')) {
					$this.removeClass('_active');
					$content.slideUp();
				} else {
					$allTitles.removeClass('_active');
					$parent.find('.lp-qa-10-item__text').slideUp();

					$this.toggleClass('_active')
					$content.slideDown();
				}
			}
		});
		
		$block.each(function(){
			var $this = $(this);
			
			$this.append('<div class=""lp-qa-10-content""></div>');
			
			$this.find('.lp-qa-10-item__title').eq(0).trigger('click');
		});
	}

	lp_template.queue.videoPlayButton = function($self) {
		$self.find('.js-lp-play-video').remove();
		$self.find('.lp-video-block-wrappper').find('video').attr('controls', 1);
		
	}
	
	lp_template.queue.lpStepForm = function($self) {
	  var $block = $self.find('.js-lp-steps-form');
	
	  if ($block.length) {
	    $block.formsteps();
	  }
	}
	
	lp_template.queue.qaSlider1 = function($self) {
		var $block = $self.find('.js-qa-slider-1');

		if ($block.length) {
			$block.each(function(){
				var $this = $(this),
					autoplay = !!$this.data('autoplay'),
					count = $this.data('count') || 2,
					loop = !!$this.data('infinite'),
					nav = !!$this.data('arrows'),
					dots = !!$this.data('dots'),
					pause = $this.data('pause') || 5000,
					speed = $this.data('speed') || 250,
					$parent = $this.closest('[data-block-layout]'),
					$dots = $parent.find('.js-dot-item');

				$this.owlCarousel({
					autoplay : autoplay,
					loop : loop,
					nav : nav,
					dots : true,
					smartSpeed: speed,
					autoplayTimeout: pause,
					responsive:{
						0: {
							items : 1,
							margin : 0
						},
						960: {
							items: count,
							margin : count > 1 ? 48 : 0
						},
						1200: {
							items: count,
							margin : count > 1 ? 24 : 0
						},
						1380: {
							items: count,
							margin : count > 1 ? 32 : 0
						}
					},
					onInitialized: function() {
						$dots.eq(0).addClass('active')
					},
					onTranslated: function(e) {
						$dots.removeClass('active');
					}
				});

				$parent.on('click', '.js-next-slide', function(e) {
					e.preventDefault();
					$this.trigger('next.owl.carousel');
				});

				$parent.on('click', '.js-prev-slide', function(e) {
					e.preventDefault();
					$this.trigger('prev.owl.carousel');
				});

				$parent.on('click', '.js-dot-item', function(e) {
					e.preventDefault();
					$this.trigger('to.owl.carousel', [$(this).index()]);
				});

			});
		}
	}

	lp_template.queue.simpleSlider = function($self) {
		var $block = $self.find('.js-simple-slider');

			if ($block.length) {
				$block.each(function(){
					var $this = $(this),
						autoplay = !!$this.data('autoplay'),
						loop = !!$this.data('infinite'),
						autoWidth = !!$this.data('autowidth'),
						center = !!$this.data('center'),
						nav = !!$this.data('arrows'),
						dotsEach = !!$this.data('dots-each'),
						dots = 1,
						pause = $this.data('pause') || 5000,
						speed = $this.data('speed') || 250,
						fade = !!$this.data('fade'),
						parentSelector = $this.data('parent') ? $this.data('parent') : '[data-block-layout]',
						$parent = $this.closest(parentSelector),
						dataResponse = $this.data('response'),
						response = {},
						$dots = $parent.find('.lp-dots-wrapper');
	
					response.responsive = dataResponse || {};
					if ($this.parents('[data-elem-type=""block""]').find('.js-lg-init').length) {
						setTimeout(function(){
							initSlider()
						}, 500);
					} else {
						initSlider()
					};
					

					function initSlider() {
						$this.owlCarousel($.extend({
							items : 1,
							autoplay : autoplay,
							loop : loop,
							autoWidth: autoWidth,
							center: center,
							nav : nav,
							dots : true,
							dotsEach: dotsEach,
							animateIn: fade ? 'fadeIn' : false,
							animateOut: fade ? 'fadeOut' : false,
							smartSpeed: speed,
							mouseDrag: s3LP.is_cms ? false : true, 
							autoplayTimeout: pause,
							onInitialized: function(e) {
								var $dotsCount = $parent.find('.owl-dot').length;
								
								if (!$dots.length || $dotsCount < 2) {
									$dots.html('');
									
									$parent.find('.js-next-slide, .js-prev-slide').addClass('_hide');
									return;
								};
								var $dotsHTML = '';
								
								for(var i = 0; i < $dotsCount; i++) {
									$dotsHTML += '<div class=""lp-dots-item js-dot-item"" data-elem-type=""container"" data-lp-selector="".lp-dots-item""></div>';
								} 
								
								if (!$dots.hasClass('_unchanged')) {
								
									$dots.html($dotsHTML);
								
								}
								
								$dots.find('.lp-dots-item').eq(0).addClass('active');
								
							},
							
							onResized: function(e) {
								if (!$dots.length || e.page.count < 2) {
									$dots.html('');
									$parent.find('.js-next-slide, .js-prev-slide').addClass('_hide');
									$parent.find('.js-next-slide, .js-prev-slide').removeClass('_show');
									return;
								} else {
									$parent.find('.js-next-slide, .js-prev-slide').addClass('_show');
									$parent.find('.js-next-slide, .js-prev-slide').removeClass('_hide');
								}
								
								var $dotsHTML = '';
								for(var i = 0; i < e.page.count; i++) {
									$dotsHTML += '<div class=""lp-dots-item js-dot-item"" data-elem-type=""container"" data-lp-selector="".lp-dots-item""></div>';
								}
								
								if (!$dots.hasClass('_unchanged')) {
									$dots.html($dotsHTML);
								}
								$dots.find('.lp-dots-item').removeClass('active');
								$dots.find('.lp-dots-item').eq(e.page.index).addClass('active');
							},
							onTranslate: function(e) {
								$dots.find('.lp-dots-item').removeClass('active');
								$dots.find('.lp-dots-item').eq(e.page.index).addClass('active');
							}
						}, response));
		
						$parent.on('click', '.js-next-slide', function(e) {
							e.preventDefault();
							$this.trigger('next.owl.carousel');
						});
		
						$parent.on('click', '.js-prev-slide', function(e) {
							e.preventDefault();
							$this.trigger('prev.owl.carousel');
						});
		
						$parent.on('click', '.js-dot-item', function(e) {
							e.preventDefault();
							$this.trigger('to.owl.carousel', [$(this).index()]);
						});
						
						if (s3LP.is_cms) {
							setTimeout(function(){
								LpController.afterSave(function () {
								    setTimeout(function(){
							    		$this.trigger('refresh.owl.carousel');
								    },500);
								});
					    		$this.trigger('refresh.owl.carousel');
							},3000);
						}
						
						$win.on('load', function(){
							setTimeout(function(){
					    		$this.trigger('refresh.owl.carousel');
					    		
					    		if($this.hasClass('js-lg-init')) {
									$this.data('lightGallery').destroy(true);
									$this.lightGallery({
										selector: 'div:not(.cloned) .lg-item',
										share: false,
										hash: false,
										autoplayControls: false,
										actualSize: false,
										toogleThumb: false,
										getCaptionFromTitleOrAlt: false,
										download: false,
										thumbWidth: 64,
										thumbHeight: '64px',
										nextHtml: '<svg width=""24"" height=""24"" viewBox=""0 0 24 24"" fill=""none"" xmlns=""http://www.w3.org/2000/svg""><path fill-rule=""evenodd"" clip-rule=""evenodd"" d=""M8.98528 4.32805C9.3758 3.93753 10.009 3.93753 10.3995 4.32805L17.0563 10.9849C17.4469 11.3754 17.4469 12.0086 17.0563 12.3991L10.3995 19.056C10.009 19.4465 9.3758 19.4465 8.98528 19.056C8.59475 18.6654 8.59475 18.0323 8.98528 17.6418L14.935 11.692L8.98528 5.74226C8.59475 5.35174 8.59475 4.71857 8.98528 4.32805Z"" fill=""white""/></svg>',
										prevHtml: '<svg width=""24"" height=""24"" viewBox=""0 0 24 24"" fill=""none"" xmlns=""http://www.w3.org/2000/svg""><path d=""M14.8492 5.03516L8.19239 11.692L14.8492 18.3489"" stroke=""white"" stroke-width=""2"" stroke-linecap=""round"" stroke-linejoin=""round""/></svg>'
									});
								} // Из за ошибки со слайдером переподключаем галерею
						    },500);
						});
					}
	
				});
			}

		
			
		if ($block.hasClass('lp-video-9-slides-wrapp')) {
			$('.lp-video-9-slides-wrapp').on('changed.owl.carousel', function(event) {
			  $('.lp-video-9-slides-wrapp video').trigger('pause');
			  $('.lp-video-9-slides-wrapp ._lp-youtube-video').each(function(){
			      var el_src = $(this).attr(""src"");
			        $(this).attr(""src"",el_src);
			  });
			})
		}
	}
	
	lp_template.queue.adv17HalfHeight = function($self) {	
		var $block = $self.find('.js-advantages-17');
	
		$block.each(function(){
			var $this = $(this);
	
	
			$(window).on('resize', function(){
				calcMargin($this);
			});		
		});
	
		function calcMargin(e) {
			var itemHalfHeight = e.parent().find('.lp-advantages-17__item').eq(0).outerHeight() / 2;
			
			e.css({
				paddingBottom: itemHalfHeight,
				marginBottom: -itemHalfHeight
			});		
		};
	}
	
	lp_template.queue.video13 = function($self) {	
		var $block = $self.find('.js-video-13');
	
		$block.each(function(){
			var $this = $(this);
	
	
			$(window).on('resize', function(){
				calcMargin($this);
			});		
		});
	
		function calcMargin(e) {
			var itemHeight = e.parent().find('.lp-video-13__item-video').eq(0).outerHeight();
			
			e.css({
				paddingBottom: itemHeight,
				marginBottom: -itemHeight
			});		
		};
	}
	
	lp_template.queue.header15Popup = function($self) {
		var $block = $self.find('.lp-header-15');
		$block.find('.js-burger').on('click', function(){
			$(this).closest('.lp-wrapp').find('.js-menu__wrap').fadeIn().addClass('opened');
			$('body').css('overflow', 'hidden');
		});
		$block.find('.js-close, .js-bg').on('click', function(){
			$(this).closest('.lp-wrapp').find('.js-menu__wrap').removeClass('opened').fadeOut();
			$('body').css('overflow','visible');
		});
		
		$block.find('.js-menu a').on('click', function(){
		    setTimeout(function(){
		    	$block.find('.js-menu__wrap').removeClass('opened').fadeOut();
				$('body').css('overflow','visible');
		    },300);
		});
		
		$(document).keyup(function(e) {
		     if (e.key === ""Escape"") { // escape key maps to keycode '27'
		        $block.find('.js-menu__wrap.opened').removeClass('opened').fadeOut();
				$('body').css('overflow','visible');
		    }
		});
	}
	
	lp_template.queue.lpTimer = function($self) {
		var $block = $self.find('.js-lp-timer'),
			htmlLang = document.documentElement.lang,
			timerDays, timerHours, timerMinutes, timerSeconds, formatOut;
		
		if (htmlLang == 'de' || htmlLang == 'en') {
			timerDays = 'days';
			timerHours = 'hours';
			timerMinutes = 'minutes';
			timerSeconds = 'seconds'
	    } else {
			timerDays = 'Дней';
			timerHours = 'Часов';
			timerMinutes = 'Минут';
			timerSeconds = 'Секунд'
	    }
	    
	    var formatOut = '<div class=""lp-ui-timer__item""><div class=""lp-ui-timer__item-number"" data-elem-type=""text"" data-lp-selector="".lp-ui-timer__item-number"">%d</div><div class=""lp-ui-timer__item-text lp-header-text-4"" data-elem-type=""text"" data-lp-selector="".lp-ui-timer__item-text"">' + timerDays + '</div></div><div class=""lp-ui-timer__item""><div class=""lp-ui-timer__item-number"" data-elem-type=""text"" data-lp-selector="".lp-ui-timer__item-number"">%h</div><div class=""lp-ui-timer__item-text lp-header-text-4"" data-elem-type=""text"" data-lp-selector="".lp-ui-timer__item-text"">' + timerHours + '</div></div><div class=""lp-ui-timer__item""><div class=""lp-ui-timer__item-number"" data-elem-type=""text"" data-lp-selector="".lp-ui-timer__item-number"">%m</div><div class=""lp-ui-timer__item-text lp-header-text-4"" data-elem-type=""text"" data-lp-selector="".lp-ui-timer__item-text"">' + timerMinutes + '</div></div><div class=""lp-ui-timer__item""><div class=""lp-ui-timer__item-number"" data-elem-type=""text"" data-lp-selector="".lp-ui-timer__item-number"">%s</div><div class=""lp-ui-timer__item-text lp-header-text-4"" data-elem-type=""text"" data-lp-selector="".lp-ui-timer__item-text"">' + timerSeconds +'</div></div>';
	    var formatEnd = '<div class=""lp-ui-timer__item""><div class=""lp-ui-timer__item-number"" data-elem-type=""text"" data-lp-selector="".lp-ui-timer__item-number"">00</div><div class=""lp-ui-timer__item-text lp-header-text-4"" data-elem-type=""text"" data-lp-selector="".lp-ui-timer__item-text"">' + timerDays + '</div></div><div class=""lp-ui-timer__item""><div class=""lp-ui-timer__item-number"" data-elem-type=""text"" data-lp-selector="".lp-ui-timer__item-number"">00</div><div class=""lp-ui-timer__item-text lp-header-text-4"" data-elem-type=""text"" data-lp-selector="".lp-ui-timer__item-text"">' + timerHours + '</div></div><div class=""lp-ui-timer__item""><div class=""lp-ui-timer__item-number"" data-elem-type=""text"" data-lp-selector="".lp-ui-timer__item-number"">00</div><div class=""lp-ui-timer__item-text lp-header-text-4"" data-elem-type=""text"" data-lp-selector="".lp-ui-timer__item-text"">' + timerMinutes + '</div></div><div class=""lp-ui-timer__item""><div class=""lp-ui-timer__item-number"" data-elem-type=""text"" data-lp-selector="".lp-ui-timer__item-number"">00</div><div class=""lp-ui-timer__item-text lp-header-text-4"" data-elem-type=""text"" data-lp-selector="".lp-ui-timer__item-text"">' + timerSeconds +'</div></div>';
	    
	    
		
		if ($block.length) {
			$block.each(function(){
				var $this = $(this);
				
				$this.timer({
					format_in: ""%d.%M.%y %h:%m:%s"",
					language: htmlLang,
					update_time: s3LP.is_cms ? 100000 : 1000,
					format_out: formatOut,
					onEnd: function(){
						$this.html(formatEnd);
						console.log(123)
					}
				})
			});	
		}
	}
	
		lp_template.queue.menu11Popup = function($self) {
		var $block = $self.hasClass('lp-menu-11') ? $self : $self.find('.lp-menu-11');
		
		$($block).append('<div class=""lp-menu-block-bg""></div>');
		
		if (!$block.length) return;
			
		$block.each(function(){
			var $this = $(this),
				contactsMobile = true,
				mobile = true;
			
			$(window).on('resize', function(){
				contactsMobile = contactsPend($this, contactsMobile);
				mobile = menuPend($this, mobile);
			});
		})
			
		function contactsPend($block, bool) {
		
			if (window.matchMedia('(max-width : 599px)').matches && !bool) {
				$block.find('.lp-menu-11__top').appendTo($block.find('.lp-menu-11__popup .lp-menu-11__menu_inner'));
				return true;
			}
			else if (window.matchMedia('(min-width : 600px)').matches && bool) {
				$block.find('.lp-menu-11__top').prependTo($block.find('.lp-menu-11-wrap_top .lp-wrapp'));
				return false;
			}
			
			return bool;
		}
		
		function menuPend($block, bool) {
			if (window.matchMedia('(max-width : 959px)').matches && !bool) {
				$block.find('.js-menu_appedable').prependTo($block.find('.lp-menu-11__popup'));
				$block.find('.lp-menu-11__burger').show().css('display', 'flex');
				return true;
			}
			else if (window.matchMedia('(min-width : 960px)').matches && bool) {
				$block.find('.lp-menu-11__logo').after($block.find('.js-menu_appedable'));
				return false;
			}
			
			return bool;
		}
		
		
	    var $popup = $block.find('.js-popup'),
    		popupHeight = $(window).height() - $block.height(),
    		menuHeight = $block.outerHeight(),
    		popupTop = menuHeight < 0 ? 0 : menuHeight,
    		popupTop = s3LP.is_cms ? popupTop + 72 : popupTop,
    		$bgTop = $block.height() + 50 < 0 ? 0 : $block.height() + 50,
    		$bgTop = s3LP.is_cms ? $bgTop + 72 : $bgTop;
    		
		$block.find('.lp-menu-block-bg').css({top: $bgTop});
		
    	$popup.css({top: popupTop});
    	
	
		$block.find('.js-burger').on('click', function(){
			if ($(this).hasClass('_in-side')) {
	    		$popup.animate({top: 0}, 200);
	    		$block.find('.lp-menu-block-bg').css('top', 0);
	    	}
			if (!$(this).hasClass('_in-side')) {
			    if (s3LP.is_cms) {
		    		$('html, body').animate({
					    scrollTop: $block.offset().top - 72
					}, 200);
		    	}
		    	else {
		    		$('html, body').animate({
					    scrollTop: $block.offset().top
					}, 200);
		    	}
			}
	    	
	    	$popup.css('overflow', 'auto');
	    	
	    	$block.find('.js-burger').toggleClass('opened');
	    	if ($(this).closest('.lp-menu-11').find('.js-popup').hasClass('opened')) {
	    		$(this).closest('.lp-menu-11').find('.js-popup').animate({height: ""0%""}, 300,
	    			function() {
	    				$block.css('z-index', '');
	    			}
	    		).removeClass('opened');
	    		$block.find('.lp-menu-block-bg').fadeOut(300);
	    		
	    		$('html').css('overflow', '');
	    		if (s3LP.is_cms) {
	    			$('html').css('overflow', '');
	    		}
	    	}
	    	else {
	    		$(this).closest('.lp-menu-11').find('.js-popup').animate({height: popupHeight}, 800).addClass('opened');
	    		$block.find('.lp-menu-block-bg').fadeIn(800);
	    		$block.css('z-index', '30');
	    		$('html').css('overflow', 'hidden');
	    		if (s3LP.is_cms) {
	    			$('html').css('overflow', 'hidden');
	    		}
	    	}
	    	
	    });
	    
	    $(document).on('click', function(e) {
		    if(!$(e.target).closest('.lp-menu-11__popup, .lp-menu-11-button, .lp-block-menu-12__btn, .lp-block-menu-12__menu-in, .lp-menu-21__popup, .lp-menu-21-button').not(this).length){
		    	$(this).find('.js-popup').animate({height: ""0%""}, 300,
	    			function() {
	    				$block.css('z-index', '');
	    			}
	    		).removeClass('opened');
	    		$(this).find('.lp-menu-block-bg').fadeOut(300);
	    		$block.find('.js-burger').removeClass('opened');
	    		$('html').css('overflow', '');
	    		if (s3LP.is_cms) {
	    			$('html').css('overflow', '');
	    		}
		    }
		});
	    
	    $block.find('.lp-menu-11__menu__link').on('click', function(){
	    	$block.find('.js-burger').toggleClass('opened');
			$popup.animate({height: ""0%""}, 100,
    			function() {
    				$block.css('z-index', '');
    			}
    		).removeClass('opened');
    		$block.find('.lp-menu-block-bg').fadeOut(800);
    		$('html').css('overflow', '');
	    });
		
		$(window).on('resize', function(){
			var $ulWidth = 0,
				$ulWrapWidth = $block.find('.lp-menu-11__bot').innerWidth() - ($block.find('.lp-menu-11__logo').width() + $block.find('.lp-menu-11__right').outerWidth(true));
			$('li.lp-menu-11__menu__list-item').each(function(){
				var $width = $(this).outerWidth(true);
				$ulWidth += $width;
			});
			if (window.matchMedia('(min-width : 961px)').matches && ($ulWidth > $ulWrapWidth)) {
				$block.find('.js-menu_appedable').prependTo('.lp-menu-11__popup');
				$block.find('.lp-menu-11__burger').show().css('display', 'flex');
			}
			else if (window.matchMedia('(min-width : 961px)').matches && ($ulWidth < $ulWrapWidth)) {
				$block.find('.lp-menu-11__logo').after($block.find('.js-menu_appedable'));
				$block.find('.lp-menu-11__burger').hide();
			}
			
			
			
			menuHeight = $block.outerHeight(),
    		popupTop = menuHeight < 0 ? 0 : menuHeight,
    		popupTop = s3LP.is_cms ? popupTop + 72 : popupTop,
    		$bgTop = $block.height() + 50 < 0 ? 0 : $block.height() + 50,
    		$bgTop = s3LP.is_cms ? $bgTop + 72 : $bgTop;
			
			$popup.animate({top: popupTop});
	        
	    	$block.find('.lp-menu-block-bg').css('top', $bgTop);
		});
	}
	
	lp_template.queue.lpReviews10Slider = function($self) {
		var $block = $self.hasClass('lp-reviews-10') ? $self : $self.find('.lp-reviews-10');
	    var $slider = $block.find('.js-review-10-slider');
	    if ($slider.length) {
	
	        $slider.each(function(){
				
	            var $this = $(this);
	            var $parent = $this.closest('[data-block-layout]');
	            var $arrows = $this.data('arrows');
	            var $dots = $this.data('dots');
	            var $autoplay = $this.data('autoplay');
	            var $infinite = $this.data('infinite');
	            var $autoplaySpeed = $this.data('autoplay-speed');
	            var $speed = $this.data('speed');
	            var $slide = $this.find('.lp-reviews-10-slider__slide');
	
	            // это нужно для того, чтобы последний слайд всегда состоял из 3 отзывов
	            $slider.on('init', function(slick, currentSlide){
	                var slides = currentSlide.$slides;
	                var lastChild = slides[slides.length - 1];//Последний слайд
	                var children = lastChild.children;
	                var emptyDivs = [];
	
	                if(slides.length > 1) {
	
	                    for(var i = 0; i < children.length; i++) {
	                        if(children[i].childNodes.length < 1) {
	                            emptyDivs.push(children[i]);
	                        }
	                    }
	
	                    for(var j = 0; j < emptyDivs.length; j++) {
	                        emptyDivs[j].appendChild($slide[j].cloneNode(true));
	                    }
	                }
	            });
	
	            $this.slick({
	                infinite: $infinite,
	                mobileFirst: true,
	                // fade:$fade,
	                dots:$dots,
	                autoplay: $autoplay,
					autoplaySpeed: $autoplaySpeed,
					speed: $speed,
	                dotsClass:'lp-reviews-10-slider__dots',
	                appendDots:$parent.find('.lp-reviews-10-slider__dots-block'),
	                arrows:false,
	                appendArrows:$parent.find('.lp-reviews-10-slider__arrows-block'),
	                prevArrow:'<a href=""#"" data-elem-type=""card_container"" data-lp-selector="".lp-reviews-10-slider__arrows"" class=""lp-button lp-button--type-1 lp-reviews-10-slider__arrows lp-reviews-10-slider__arrows--left _v2-icon""><div class=""_slider-arrows"" data-elem-type=""card_container"" data-lp-selector=""._slider-arrows-inner""><div class=""_slider-arrows-inner""></div><div class=""_slider-arrows-inner""></div></div></a>',
	                nextArrow:'<a href=""#"" data-elem-type=""card_container"" data-lp-selector="".lp-reviews-10-slider__arrows"" class=""lp-button lp-button--type-1 lp-reviews-10-slider__arrows lp-reviews-10-slider__arrows--right _v2-icon""><div class=""_slider-arrows reverse"" data-elem-type=""card_container"" data-lp-selector=""._slider-arrows-inner""><div class=""_slider-arrows-inner""></div><div class=""_slider-arrows-inner""></div></div></a>',
	                responsive: [
	                    {
	                        breakpoint: 599.9,
	                        settings: {
	                            arrows:$arrows
	                        }
	                    },
	                    {
	                        breakpoint: 959.9,
	                        settings: {
	                            arrows:$arrows,
	                            slidesPerRow:1,
	                            rows:3
	
	                        }
	                    }
	                ]
	            });
	        });
	        $(window).on('resize', function(){
	        	setTimeout(function(){
	        		var $dotItem = $block.find('.lp-reviews-10-slider__dots li button');
	        		if ($dotItem.hasClass('lp-reviews-10-slider__dot')) {
	        			
	        		}
	        		else {
				        $dotItem.attr('data-elem-type', 'card_container');
				        $dotItem.addClass('lp-reviews-10-slider__dot');
				        $dotItem.attr('data-lp-selector','.lp-reviews-10-slider__dot');
	        		}
	        	},100);
	        });
	    }
	}
	
	lp_template.queue.lpForm19CalcBottomMargin = function($self) {
		var $block = $self,
			margin = ($block.find('.lp-form-19__bottom').height()
								+ parseInt($("".lp-form-19__bottom"").css(""padding-top""))
				 				+ parseInt($("".lp-form-19__bottom"").css(""padding-bottom"")))/2;
		$block.find('.lp-form-19__top-bg').css({
			""margin-bottom"" : - margin						
		});
	};
	
	lp_template.queue.lpGallery1 = function($self) {
		var $block = $self.hasClass('lp-gallery-1') ? $self : $self.find('.lp-gallery-1'),
	    	$mainSlider = $block.find('.js-main-slick'),
	    	$thumbSlider = $block.find('.js-thumb-slick'),
	    	$prevBtn = $block.find('.js-slider-prev'),
	    	$nextBtn = $block.find('.js-slider-next'),
			$slidesToShowData = $block.data('count');
	
		if ($mainSlider.length) {
		    $mainSlider.slick({
		        slidesToShow: 1,
		        slidesToScroll: 1,
		        arrows: false,
		        fade: true,
		        asNavFor: $thumbSlider,
		        adaptiveHeight: false
		    })
		
		    $thumbSlider.slick({
		        slidesToShow: 3,
		        slidesToScroll: 1,
		        asNavFor: $mainSlider,
		        dots: false,
		        centerMode: true,
		        arrows: false,
		        touches: true,
		        prevArrow: $prevBtn,
		        nextArrow: $nextBtn,
		        focusOnSelect: true,
		        adaptiveHeight: false,
		        centerPadding: '6px',
		        mobileFirst: true,
		        swipeToSlide: false,
		        responsive: [
		            {
		                breakpoint: 600,
		                settings: {
		                    slidesToShow: $slidesToShowData,
		                    centerPadding: '20px'
		                }
		            },
		            {
		                breakpoint: 960,
		                settings: {
		                    slidesToShow: $slidesToShowData,
		                    arrows: true,
		                    centerPadding: '0px'
		                }
		            }
		        ]
		    });
	    }
	};
	
	lp_template.queue.lpGallery3 = function ($self) {

		var $block = $self,
			owl = $block.find('.js-photo-3-mask'),
			$nextSlide = $block.find('.js-next-slide'),
			$prevSlide = $block.find('.js-prev-slide'),
			$thumbItem = $block.find('.js-preview-item');
		
		if (owl.length) {
		
			owl.owlCarousel({
				items : 1,
				autoplay : false,
				loop : false,
				nav : false,
				dots : false,
				animateIn: 'fadeIn',
				animateOut: 'fadeOut',
				smartSpeed: 300,
				mouseDrag: false,
				touchDrag: false
			});
		
		
			$($nextSlide).click(function(e) {
				e.preventDefault();
			    owl.trigger('next.owl.carousel');
			});
			$($prevSlide).click(function(e) {
				e.preventDefault();
			    owl.trigger('prev.owl.carousel', [300]);
			});
		
			$($thumbItem).on('click', function () {
			    var click = $(this).index();
			    owl.trigger( 'to.owl.carousel', [click] );
			    $(this).addClass('_active').siblings().removeClass('_active');
			});
		}
	};
	
	lp_template.queue.products29 = function($self) {
	  $self.on('click', '.js-gallery29-item', function(){
	    var $this = $(this);
	
	    $this.addClass('_active').siblings().removeClass('_active');
	    $this.closest('[data-block-layout]').find('.lp-prods-29-background__item').removeClass('_active').eq($this.index()).addClass('_active');
	
	  });
	}
	
	lp_template.queue.lpGallery17 = function($self) {
		
		var $block = $self.hasClass('js-grid-gallery') ? $self : $self.find('.js-grid-gallery');
		
		$block.each(function(){
			if ($block.length) {
				var $this = $(this),
					$slider = $this.find('.js-gallery-items'),
					autoplay = !!$slider.data('autoplay'),
					infinite = !!$slider.data('infinite'),
					nav = !!$slider.data('arrows'),
					dotsEach = !!$slider.data('dots-each'),
					dots = true,
					pause = $slider.data('pause') || 5000,
					speed = $slider.data('speed') || 250,
					fade = !!$slider.data('fade'),
					$parent = $slider.closest('[data-block-layout]'),
					dataResponse = $slider.data('response'),
					response = {},
					$dots = $this.find('.lp-dots-wrapper');
			    try {
			        let owl = $this.find('.js-gallery-items.js-owl-carousel'),
			            windowWidth = $(window).width(),
			            gridFormer = function(){
			            let wrapper = '<div class=""js-gallery-items-grid""></div>',
			                itemsCount = $slider.children('.js-gallery-item').length,
			                sliceFunc = function(itemsInGrid){
			                    for (var i = 0; i < itemsCount/itemsInGrid; i++) {
			                        $slider.children('.js-gallery-item').slice(0, itemsInGrid).wrapAll(wrapper);
			                    }
			                    $slider.find('.js-gallery-items-grid').each(function(){
			                        $(this).addClass('_'+$(this).children().length);
			                    });
			                };
		
			            if (windowWidth<600) {
			                sliceFunc(2);                   
			            } else if (windowWidth<1200) {
			                sliceFunc(4);
			            } else {
			                sliceFunc(5);
			            }
			        }
		
			        let initOwl = function(){
		
			            $slider.owlCarousel($.extend({
							items : 1,
							autoplay : autoplay,
							loop : infinite,
			                rewind: true,
							nav : nav,
							dots : dots,
							animateIn: fade ? 'fadeIn' : false,
							animateOut: fade ? 'fadeOut' : false,
							smartSpeed: speed,
							autoplayTimeout: pause,
			                margin: 16,
							onInitialized: function(e) {
								var $dotsCount = $this.find('.owl-dot').length;
								
								if (!$dots.length || $dotsCount < 2) {
									$dots.html('');
									return;
								};
								var $dotsHTML = '';
								
								for(var i = 0; i < $dotsCount; i++) {
									$dotsHTML += '<div class=""lp-dots-item js-dot-item"" data-elem-type=""container"" data-lp-selector="".lp-dots-item""></div>';
								} 
								
								if (!$dots.hasClass('_unchanged')) {
								
									$dots.html($dotsHTML);
								
								}
								
								$dots.find('.lp-dots-item').eq(0).addClass('active');
								
							},
							
							onResized: function(e) {
								if (!$dots.length || e.page.count < 2) {
									$dots.html('');
									return;
								}
								
								var $dotsHTML = '';
								for(var i = 0; i < e.page.count; i++) {
									$dotsHTML += '<div class=""lp-dots-item js-dot-item"" data-elem-type=""container"" data-lp-selector="".lp-dots-item""></div>';
								}
								
								if (!$dots.hasClass('_unchanged')) {
									$dots.html($dotsHTML);
								}
								$dots.find('.lp-dots-item').removeClass('active');
								$dots.find('.lp-dots-item').eq(e.page.index).addClass('active');
							},
							onTranslated: function(e) {
								$dots.find('.lp-dots-item').removeClass('active');
								$dots.find('.lp-dots-item').eq(e.page.index).addClass('active');
							}
						}, response));
						$this.find('.js-next-slide').off();
						$this.find('.js-next-slide').on('click', function(e) {
							e.preventDefault();
							owl.trigger('next.owl.carousel');
						});
						$this.find('.js-prev-slide').off();
						$this.find('.js-prev-slide').on('click', function(e) {
							e.preventDefault();
							owl.trigger('prev.owl.carousel');
						});
		
			        }
		
			        let reInitOwl = function(){
			            owl.trigger('destroy.owl.carousel');
			            $this.find('.js-gallery-item').unwrap();
			            gridFormer();
			            initOwl();
			        }
		
			        gridFormer();
			        
			        initOwl();
		
		
			        $(window).resize(function(){                
			            let newWindowWidth = $(window).width();
			            if (windowWidth < 1200 && windowWidth >= 600) {                 
			                if (newWindowWidth >= 1200 || newWindowWidth < 600) {
			                    windowWidth = newWindowWidth;
			                    reInitOwl();
			                }
			            } else if (windowWidth>=1200){
			                if (newWindowWidth < 1200) {
			                    windowWidth = newWindowWidth;
			                    reInitOwl();
			                }
			            } else if (windowWidth<600){
			                if (newWindowWidth>=600) {
			                    windowWidth = newWindowWidth;
			                    reInitOwl();
			                }
			            }
			        });
		
			    } catch(exception) {
			        console.log(exception);
			    }
		    }
		});
	}
	
	lp_template.queue.lpGallery19 = function($self) {
		
		var $block = $self.hasClass('lp-gallery-19') ? $self : $self.find('.lp-gallery-19');
		
		$block.each(function(){
			if ($block.length) {
				var $this = $(this),
					$slider = $this.find('.js-gallery-items'),
					autoplay = !!$slider.data('autoplay'),
					infinite = !!$slider.data('infinite'),
					nav = !!$slider.data('arrows'),
					dotsEach = !!$slider.data('dots-each'),
					dots = true,
					pause = $slider.data('pause') || 5000,
					speed = $slider.data('speed') || 250,
					fade = !!$slider.data('fade'),
					$parent = $slider.closest('[data-block-layout]'),
					dataResponse = $slider.data('response'),
					response = {},
					$dots = $this.find('.lp-dots-wrapper');
			    try {
			        let owl = $this.find('.js-gallery-items.js-owl-carousel'),
			            windowWidth = $(window).width(),
			            gridFormer = function(){
			            let wrapper = '<div class=""lp-gallery-19__slider-item""></div>',
			                itemsCount = $slider.children('.js-gallery-item').length,
			                sliceFunc = function(itemsInGrid){
			                    for (var i = 0; i < itemsCount/itemsInGrid; i++) {
			                        $slider.children('.js-gallery-item').slice(0, itemsInGrid).wrapAll(wrapper);
			                    }
			                    $slider.find('.lp-gallery-19__slider-item').each(function(){
			                        $(this).addClass('_'+$(this).children().length);
			                    });
			                };
		
			            if (windowWidth<600) {
			                sliceFunc(1);                   
			            } else if (windowWidth<1200) {
			                sliceFunc(4);
			            } else {
			                sliceFunc(4);
			            }
			        }
		
			        let initOwl = function(){
		
			            $slider.owlCarousel($.extend({
							items : 1,
							autoplay : autoplay,
							loop : infinite,
			                rewind: true,
							nav : nav,
							dots : dots,
							animateIn: fade ? 'fadeIn' : false,
							animateOut: fade ? 'fadeOut' : false,
							smartSpeed: speed,
							autoplayTimeout: pause,
			                margin: 16,
							onInitialized: function(e) {
								var $dotsCount = $this.find('.owl-dot').length;
								
								if (!$dots.length || $dotsCount < 2) {
									$dots.html('');
									return;
								};
								var $dotsHTML = '';
								
								for(var i = 0; i < $dotsCount; i++) {
									$dotsHTML += '<div class=""lp-dots-item js-dot-item"" data-elem-type=""container"" data-lp-selector="".lp-dots-item""></div>';
								} 
								
								if (!$dots.hasClass('_unchanged')) {
								
									$dots.html($dotsHTML);
								
								}
								
								$dots.find('.lp-dots-item').eq(0).addClass('active');
								
							},
							
							onResized: function(e) {
								if (!$dots.length || e.page.count < 2) {
									$dots.html('');
									return;
								}
								
								var $dotsHTML = '';
								for(var i = 0; i < e.page.count; i++) {
									$dotsHTML += '<div class=""lp-dots-item js-dot-item"" data-elem-type=""container"" data-lp-selector="".lp-dots-item""></div>';
								}
								
								if (!$dots.hasClass('_unchanged')) {
									$dots.html($dotsHTML);
								}
								$dots.find('.lp-dots-item').removeClass('active');
								$dots.find('.lp-dots-item').eq(e.page.index).addClass('active');
							},
							onTranslated: function(e) {
								$dots.find('.lp-dots-item').removeClass('active');
								$dots.find('.lp-dots-item').eq(e.page.index).addClass('active');
							}
						}, response));
						$this.find('.js-next-slide').off();
						$this.find('.js-next-slide').on('click', function(e) {
							e.preventDefault();
							owl.trigger('next.owl.carousel');
						});
						$this.find('.js-prev-slide').off();
						$this.find('.js-prev-slide').on('click', function(e) {
							e.preventDefault();
							owl.trigger('prev.owl.carousel');
						});
		
			        }
		
			        let reInitOwl = function(){
			            owl.trigger('destroy.owl.carousel');
			            $this.find('.js-gallery-item').unwrap();
			            gridFormer();
			            initOwl();
			        }
		
			        gridFormer();
			        
			        initOwl();
		
			        $(window).resize(function(){                
			            let newWindowWidth = $(window).width();
			            if (windowWidth < 1200 && windowWidth >= 600) {                 
			                if (newWindowWidth >= 1200 || newWindowWidth < 600) {
			                    windowWidth = newWindowWidth;
			                    reInitOwl();
			                }
			            } else if (windowWidth>=1200){
			                if (newWindowWidth < 1200) {
			                    windowWidth = newWindowWidth;
			                    reInitOwl();
			                }
			            } else if (windowWidth<600){
			                if (newWindowWidth>=600) {
			                    windowWidth = newWindowWidth;
			                    reInitOwl();
			                }
			            }
			        });
		
			    } catch(exception) {
			        console.log(exception);
			    }
		    }
		});
	}
	
	lp_template.queue.lpGallery23 = function($self) {
		var $block = $('.lp-gallery-23');
		if ($block.length) {
			$block.each(function(){
				var $this = $(this),
					$thisCount = $this.hasClass('_3') ? 4 : 3,
					$button = $this.find('.lp-gallery-23__button'),
					openText = $this.find('.lp-gallery-23__button-in._open-text'),
					closeText = $this.find('.lp-gallery-23__button-in._close-text'),
					$hiddenElems;
				
				
				try {
			        let itemMargin = 0,
			        	itemHeight = 0,
			        	containerHeight = 0,
						checkHeight = function(){
					        itemMargin = parseInt($this.find('.lp-gallery-23-item').css('margin-bottom'), 10),
				        	itemHeight = $this.find('.lp-gallery-23-item').height() + itemMargin,   	
				        	containerHeight = $this.find('.lp-gallery-23-items-wrapper').height()
							$thisCount = $this.hasClass('_3') ? 4 : 3;
		
					        if ($(window).width()<600 && itemHeight < 590) {
					        	itemHeight *= 2;
					        }
					        
					        if  ($(window).width()<600) {
					        	$thisCount = 2;
					        }
					        else if ($(window).width()<960) {
					        	$thisCount = 3;
					        }
					        
					        $hiddenElems = $this.find('.lp-gallery-23-item:nth-child(n + ' + $thisCount + ')');
		
			        		$this.find('.lp-gallery-23-items').css('max-height', itemHeight);
							$this.find('.lp-gallery-23-item').show();
							$hiddenElems.hide();
				    	};
				    	
				    checkHeight();
		
			        /*$(window).resize(function(){
			        	$button.removeClass('_opened');
		        		closeText.hide();
		        		openText.show();
			        	checkHeight();
			        });*/
			        
			        var win_width=$(window).width();
					$(window).resize(function() {
					    var new_win_width=$(window).width();
					    if(new_win_width!=win_width) {       
					    	$button.removeClass('_opened');
							closeText.hide();
							openText.show();
					    	checkHeight();
					        win_width=new_win_width;
					    }
					});
		
			        $button.on('click', function(e){
			        	if ($(this).hasClass('_opened')) {
			        		$this.find('.lp-gallery-23-items').animate({
			        			'max-height': itemHeight
			        		}, 1000	);
			        		closeText.hide();
			        		openText.show();
			        		$hiddenElems.fadeOut();
			        	} else {
			        		$this.find('.lp-gallery-23-items').animate({
			        			'max-height': 100000
			        		}, 1000);
			        		closeText.show();
			        		openText.hide();
			        		$hiddenElems.fadeIn();
			        	}
			        	$(this).toggleClass('_opened');
			        });
		
		
				} catch(exception) {
					console.log(exception);
				}
			
			});
		}
	}
	
	lp_template.queue.lpGallery25 = function($self) {
		var $block = $('.lp-gallery-25');
		if ($block.length) {
			try {
				let bgPos = function(){
					if ($(window).width()<960) {
						let headerHeight = $('.lp-gallery-25__title').outerHeight();
						$('.lp-gallery-25 .lp-half-bg').css({
								top: headerHeight,
								left: 0,
								right: 0
						});
					} else {
						let headerWidth = 0;
		
						$('.lp-gallery-25 .lp-half-bg').css('top', 0);
						if ($('.lp-gallery-25').hasClass('_reverse')) {
							headerWidth = $('.lp-gallery-25__title').outerWidth() + $('.lp-gallery-25-items').offset().left;
							$('.lp-gallery-25 .lp-half-bg').css({
									right: headerWidth,
									left: 0
							});
						} else {
							headerWidth = $('.lp-gallery-25__title').outerWidth() + $('.lp-gallery-25__title').offset().left;
							$('.lp-gallery-25 .lp-half-bg').css({
									right: 0,
									left: headerWidth
							});
						}
					}
				}
		
				if ($('div').is("".lp-gallery-25__title"")) {
					if (s3LP.is_cms && !$('body').hasClass('preview_mode')) {
						setTimeout(function(){
							bgPos();
						},500);
					}
					
					$(window).resize(function(){
						bgPos();
					});
				}
		
			} catch(exception) {
				console.log(exception);
			}
		}
	}
	
	lp_template.queue.lpCertificate15 = function($self) {
		
		var $block = $self.hasClass('lp-certificate-15') ? $self : $self.find('.lp-certificate-15');
		
		$block.each(function(){
			if ($block.length) {
				var $this = $(this),
					$slider = $this.find('.js-gallery-items'),
					autoplay = !!$slider.data('autoplay'),
					infinite = !!$slider.data('infinite'),
					nav = !!$slider.data('arrows'),
					dotsEach = !!$slider.data('dots-each'),
					dots = true,
					pause = $slider.data('pause') || 5000,
					speed = $slider.data('speed') || 250,
					fade = !!$slider.data('fade'),
					$parent = $slider.closest('[data-block-layout]'),
					dataResponse = $slider.data('response'),
					response = {},
					$dots = $this.find('.lp-dots-wrapper');
			    try {
			        let owl = $this.find('.js-gallery-items'),
			            windowWidth = $(window).width(),
			            gridFormer = function(){
			            let wrapper = '<div class=""lp-certificate-15__slider-item-wr""></div>',
			                itemsCount = $slider.children('.js-gallery-item').length,
			                sliceFunc = function(itemsInGrid){
			                    for (var i = 0; i < itemsCount/itemsInGrid; i++) {
			                        $slider.children('.js-gallery-item').slice(0, itemsInGrid).wrapAll(wrapper);
			                    }
			                    $slider.find('.lp-certificate-15-slider-item').each(function(){
			                        $(this).addClass('_'+$(this).children().length);
			                    });
			                };
		
			            if (windowWidth<600) {
			                sliceFunc(1);                   
			            } else if (windowWidth<1200) {
			                sliceFunc(2);
			            } else {
			                sliceFunc(2);
			            }
			        }
		
			        let initOwl = function(){
		
			            $slider.owlCarousel($.extend({
							items : 1,
							autoplay : autoplay,
							loop : infinite,
			                rewind: true,
							nav : nav,
							dots : dots,
							animateIn: fade ? 'fadeIn' : false,
							animateOut: fade ? 'fadeOut' : false,
							smartSpeed: speed,
							autoplayTimeout: pause,
			                margin: 0,
							onInitialized: function(e) {
								var $dotsCount = $this.find('.owl-dot').length;
								
								if (!$dots.length || $dotsCount < 2) {
									$dots.html('');
									return;
								};
								var $dotsHTML = '';
								
								for(var i = 0; i < $dotsCount; i++) {
									$dotsHTML += '<div class=""lp-dots-item js-dot-item"" data-elem-type=""container"" data-lp-selector="".lp-dots-item""></div>';
								} 
								
								if (!$dots.hasClass('_unchanged')) {
								
									$dots.html($dotsHTML);
								
								}
								
								$dots.find('.lp-dots-item').eq(0).addClass('active');
								
							},
							
							onResized: function(e) {
								if (!$dots.length || e.page.count < 2) {
									$dots.html('');
									return;
								}
								
								var $dotsHTML = '';
								for(var i = 0; i < e.page.count; i++) {
									$dotsHTML += '<div class=""lp-dots-item js-dot-item"" data-elem-type=""container"" data-lp-selector="".lp-dots-item""></div>';
								}
								
								if (!$dots.hasClass('_unchanged')) {
									$dots.html($dotsHTML);
								}
								$dots.find('.lp-dots-item').removeClass('active');
								$dots.find('.lp-dots-item').eq(e.page.index).addClass('active');
							},
							onTranslated: function(e) {
								$dots.find('.lp-dots-item').removeClass('active');
								$dots.find('.lp-dots-item').eq(e.page.index).addClass('active');
							}
						}, response));
						$this.find('.js-next-slide').off();
						$this.find('.js-next-slide').on('click', function(e) {
							e.preventDefault();
							owl.trigger('next.owl.carousel');
						});
						$this.find('.js-prev-slide').off();
						$this.find('.js-prev-slide').on('click', function(e) {
							e.preventDefault();
							owl.trigger('prev.owl.carousel');
						});
		
			        }
		
			        let reInitOwl = function(){
			            owl.trigger('destroy.owl.carousel');
			            $this.find('.js-gallery-item').unwrap();
			            gridFormer();
			            initOwl();
			        }
		
			        gridFormer();
			        
			        initOwl();
		
			        $(window).resize(function(){                
			            let newWindowWidth = $(window).width();
			            if (windowWidth < 1200 && windowWidth >= 600) {                 
			                if (newWindowWidth >= 1200 || newWindowWidth < 600) {
			                    windowWidth = newWindowWidth;
			                    reInitOwl();
			                }
			            } else if (windowWidth>=1200){
			                if (newWindowWidth < 1200) {
			                    windowWidth = newWindowWidth;
			                    reInitOwl();
			                }
			            } else if (windowWidth<600){
			                if (newWindowWidth>=600) {
			                    windowWidth = newWindowWidth;
			                    reInitOwl();
			                }
			            }
			        });
		
			    } catch(exception) {
			        console.log(exception);
			    }
		    }
		});
	}
	
	lp_template.queue.lpPromo10 = function($self) {
		var $block = $self,
			$block_slider = $block.find('.js-promo10-slider');
		
		if ($block_slider.length) {
			$block_slider.each(function(){
				
				var $this = $(this),
					$parent = $this.closest('[data-block-layout]'),
					$dots = $this.data('dots'),
					$autoplay = $this.data('autoplay'),
					$infinite = $this.data('infinite'),
					$autoplaySpeed = $this.data('autoplay-speed'),
					$speed = $this.data('speed');
				
				$this.slick({
				    arrows: false,
				    dots: $dots,
				    infinite: $infinite,
				    fade: true,
				    speed: $speed,
				    slidesToShow: 1,
				    autoplay: $autoplay,
				    autoplaySpeed: $autoplaySpeed,
				    dotsClass:'lp-promo10__slider-dots',
				    appendDots:$this
				});
			});
			
			$(window).on('resize', function(){
	        	setTimeout(function(){
	        		var $dotItem = $block.find('.lp-promo10__slider-dots li button');
	        		if ($dotItem.hasClass('lp-promo10__slider-dot')) {
	        			
	        		}
	        		else {
				        $dotItem.attr('data-elem-type', 'card_container');
				        $dotItem.addClass('lp-promo10__slider-dot');
				        $dotItem.attr('data-lp-selector','.lp-promo10__slider-dot');
				        $dotItem.attr('data-has-event','1');
	        		}
	        	},500);
	        });
		}
	}
	
	lp_template.queue.lpPromo12 = function ($self) {

	    var $block = $self,
	    	$slider = $self.find('.js-promo12-slider');
	
	    if ($slider.length) {
	        $slider.each(function(){
	
	            let $this = $(this);
	            let $parent = $this.closest('[data-block-layout]');
	            
	            var $dots = $this.data('dots'),
					$autoplay = $this.data('autoplay'),
					$infinite = $this.data('infinite'),
					$autoplaySpeed = $this.data('autoplay-speed'),
					$speed = $this.data('speed');
	
	            $this.slick({
	                slidesToShow: 1,
	                slidesToScroll: 1,
	                fade: true,
	                infinite: $infinite,
	                dots: $dots,
	                autoplay: $autoplay,
				    autoplaySpeed: $autoplaySpeed,
				    speed: $speed,
	                dotsClass: 'lp-promo-12-slider__dots',
	                appendDots: $parent.find('.lp-promo-12-slider'),
	                prevArrow: $parent.find('.lp-promo-12-slider__arrow--left'),
	                nextArrow: $parent.find('.lp-promo-12-slider__arrow--right')
	            });
	            
	            $(window).on('resize', function(){
		        	setTimeout(function(){
		        		var $dotItem = $block.find('.lp-promo-12-slider__dots li button');
		        		if ($dotItem.hasClass('lp-promo-12-slider__dot')) {
		        			
		        		}
		        		else {
					        $dotItem.attr('data-elem-type', 'card_container');
					        $dotItem.addClass('lp-promo-12-slider__dot');
					        $dotItem.attr('data-lp-selector','.lp-promo-12-slider__dot');
					        $dotItem.attr('data-has-event','1');
		        		}
		        	},100);
		        });
	        });
	    }
	}
	
	lp_template.queue.lpPromo17 = function ($self) {

	    var $slider = $self.find('.js-promo-17-slider');
	
	    if ($slider.length) {
	        $slider.each(function(){
	
	            var $this = $(this);
	            var $parent = $this.closest('[data-block-layout]');
	
	            $this.slick({
	                infinite: true,
	                slidesToShow: 1,
	                slidesToScroll: 1,
	                fade: true,
	                dots:true,
	                dotsClass: 'lp-promo-17__dots',
	                appendDots: $parent.find('.lp-promo-17'),
	                prevArrow: $parent.find('.lp-promo-17__slider-arrow--left'),
	                nextArrow: $parent.find('.lp-promo-17__slider-arrow--right')
	            });
	        });
	    }
	}
	
	lp_template.queue.check_age = function($self) {
		$self.on('click', '.js-close-popup.lp-popup-block-3__button', function(e){
			e.preventDefault();
			var $parent = $(this).closest('[data-block-id]');
			createCookie('block_' + $parent.data('block-id'), 1, 30);
		});

		$self.on('click', '.js-little-age', function(e) {
			e.preventDefault();
			var $parent = $(this).closest('[data-block-id]');

			$parent.find('.lp-popup-block-3__confirm').hide();
			$parent.find('.lp-popup-block-3__alert').show();			

			createCookie('little_age', 1, 30);
		});

		function createCookie(name,value,days) {
			if (days) {
				var date = new Date();
				date.setTime(date.getTime()+(days*24*60*60*1000));
				var expires = ""; expires=""+date.toGMTString();
			}
			else var expires = """";
			document.cookie = name+""=""+encodeURIComponent(value)+expires+""; path=/"";
		}
	}
	
	lp_template.queue.certificates8 = function($self) {

	    var $block = $self.hasClass('lp-certificate-8') ? $self : $self.find('.lp-certificate-8');
	    
	    $block.each(function(){
		    var $this = $(this),
		    	$imageSlider = $this.find('.js-image-slider'),
		        $textSlider = $this.find('.js-text-slider'),
		        $sliderArrows = $this.find('.js-slider-arrows'),
		        $autoplay = $imageSlider.data('autoplay'),
				$pause = $imageSlider.data('pause'),
				$speed = $imageSlider.data('speed'),
				$dots = $imageSlider.data('dots'),
				$infinite = !!$imageSlider.data('infinite');
		
		    if ($('.lp-certificate-8__content').length) {
		        if ($imageSlider.find('.js-image-slider-item').length > 3) {
		            $imageSlider.slick({
		                asNavFor: $textSlider,
		                prevArrow: $this.find('.js-prev-slide'),
		                nextArrow: $this.find('.js-next-slide'),
		                mobileFirst: true,
		                slidesToScroll: 1,
		                slidesToShow: 1,
		                centerMode: true,
		                centerPadding: '0',
		                focusOnSelect: false,
		                autoplay: $autoplay,
		                autoplaySpeed: $pause,
		                speed: $speed,
		                infinite: $infinite,
		                dots: $dots,
		                dotsClass:'lp-certificate-8-slider__dots',
		                appendDots:$('.lp-certificate-8__dots-block'),
		                responsive: [{
		                    breakpoint: 960,
		                    settings: {
		                        centerMode: true,
		                        slidesToShow: 3
		                    }
		                }]
		            });
		        } else {
		            $sliderArrows.hide();
		            $imageSlider.css('display', 'flex');
		        }
		        
		        
		        $(window).on('resize', function(){
		        	setTimeout(function(){
		        		var $dotItem = $this.find('.lp-certificate-8-slider__dots li button');
		        		if ($dotItem.hasClass('lp-certificate-8-slider__dot')) {
		        			
		        		}
		        		else {
					        $dotItem.attr('data-elem-type', 'card_container');
					        $dotItem.addClass('lp-certificate-8-slider__dot');
					        $dotItem.attr('data-lp-selector','.lp-certificate-8-slider__dot');
		        		}
		        	},100);
		        });
		
		        $textSlider.slick({
		            slidesToShow: 1,
		            slidesToScroll: 1,
		            fade: true,
		            autoplay: $autoplay,
	                autoplaySpeed: $pause,
	                speed: $speed,
	                infinite: $infinite,
		            arrows: false,
		            selector: '.js-text-slider-item',
		            mobileFirst: true,
		            asNavFor: $imageSlider,
		            accessibility: false
		        });
		        
		        $this.find('.js-lg-init').lightGallery({
					selector: '.lg-item',
					toogleThumb: false,
					getCaptionFromTitleOrAlt: false,
					download: false,
					thumbWidth: 64,
					thumbHeight: '64px',
					nextHtml: '<svg width=""24"" height=""24"" viewBox=""0 0 24 24"" fill=""none"" xmlns=""http://www.w3.org/2000/svg""><path fill-rule=""evenodd"" clip-rule=""evenodd"" d=""M8.98528 4.32805C9.3758 3.93753 10.009 3.93753 10.3995 4.32805L17.0563 10.9849C17.4469 11.3754 17.4469 12.0086 17.0563 12.3991L10.3995 19.056C10.009 19.4465 9.3758 19.4465 8.98528 19.056C8.59475 18.6654 8.59475 18.0323 8.98528 17.6418L14.935 11.692L8.98528 5.74226C8.59475 5.35174 8.59475 4.71857 8.98528 4.32805Z"" fill=""white""/></svg>',
					prevHtml: '<svg width=""24"" height=""24"" viewBox=""0 0 24 24"" fill=""none"" xmlns=""http://www.w3.org/2000/svg""><path d=""M14.8492 5.03516L8.19239 11.692L14.8492 18.3489"" stroke=""white"" stroke-width=""2"" stroke-linecap=""round"" stroke-linejoin=""round""/></svg>'
				});
		    }
	    });
	}
	
	lp_template.queue.menuSimplePopup = function($self) {
		
		var $block = $self.hasClass('js-menu-wrap') ? $self : $self.find('.js-menu-wrap');
		
		$block.each(function(){
			var $this = $(this),
				$topMenuWrap = $this.find('.js-menu__wrap'),
				$menu = $this.find('.js-menu_appedable'),
				$burger = $this.find('.js-burger'),
				$popup = $this.find('.js-popup'),
	    		popupHeight = $(window).height() - $this.height(),
	    		menuHeight = $this.outerHeight(),
	    		popupTop = menuHeight < 0 ? 0 : menuHeight,
	    		popupTop = s3LP.is_cms ? popupTop + 72 : popupTop,
	    		$bgTop = $this.height() + 50 < 0 ? 0 : $this.height() + 50,
	    		$bgTop = s3LP.is_cms ? $bgTop + 72 : $bgTop,
	    		$liHaschild = $this.find('.haschild');
    		
    		$this.find('.lp-menu-block-bg').animate({top: $bgTop}, 400);
	    	
	    	$popup.css('top', popupTop);
	    		
			$menu.clone().prependTo($topMenuWrap);
			
			$(this).append('<div class=""lp-menu-block-bg""></div>');
			
			function menuShow() {
		        var $ulWidth = 0,
		            $ulWrapWidth = $this.find('.js-menu__wrap').width();
		
		        $($menu).children('li').each(function(){
		            var $width = $(this).children('a').outerWidth(true);
		            $ulWidth += $width;
		        });
		        if (window.matchMedia('(min-width : 960px)').matches) {
		        	if ($ulWidth < $ulWrapWidth) {
		        		$this.find('.js-menu__wrap').addClass('show');
		        		$this.find('.js-burger').hide();
		        	}
		        	else {
		        		$this.find('.js-menu__wrap').removeClass('show');
		        		$this.find('.js-burger').show();
		        	}
		        }
		        else if (window.matchMedia('(max-width : 959px)').matches) {
		    		$this.find('.js-menu__wrap').removeClass('show');
		    		$this.find('.js-burger').show();
		        }
		        
		        var $bgTop = $this.offset().top + $this.height();
		        
		        menuHeight = $this.outerHeight(),
	    		popupTop = menuHeight < 0 ? 0 : menuHeight,
	    		popupTop = s3LP.is_cms ? popupTop + 72 : popupTop,
	    		$bgTop = $this.height() < 0 ? 0 : $this.height(),
	    		$bgTop = s3LP.is_cms ? $bgTop + 72 : $bgTop;
	    		
	    		$this.find('.lp-menu-block-bg').animate({top: $bgTop}, 400);
	    		
    			$popup.css('top', popupTop);
	    		
	    		$this.find('.lp-menu-block-bg').css('top', $bgTop);
			}
			
		    $(window).on('resize', function(){
		    	
	    		setTimeout(function(){
					menuShow();
	    		},500);
	    		
		    }).trigger('resize');
		
		    $burger.on('click', function(){
		    	$menu.find('li a').addClass('menu-popup-item-custom');
		    	if ($(this).hasClass('_in-side')) {
		    		$popup.animate({top: 0}, 400);
		    		$this.find('.lp-menu-block-bg').css('top', 0);
		    	}
		    	if (!$(this).hasClass('_in-side')) {
			    	if (s3LP.is_cms) {
			    		$('html, body').animate({
						    scrollTop: $this.offset().top - 72
						}, 100);
			    	}
			    	else {
			    		$('html, body').animate({
						    scrollTop: $this.offset().top
						}, 100);
			    	}
		    	}
		    	
		    	$popup.find('.js-popup__inner').css({
		    		'overflow' : 'auto',
		    		'max-height' : '100%'
		    	});
		    	
		    	$burger.toggleClass('opened');
		    	if ($popup.hasClass('opened')) {
		    		$popup.animate({height: ""0%""}, {duration: 800, complete: function() {$this.css('z-index', '')}}).removeClass('opened');
		    		$this.find('.lp-menu-block-bg').fadeOut(600);
		    		
		    		$('html').css('overflow', '');
		    	}
		    	else {
		    		$popup.animate({height: popupHeight}, {duration: 800}).addClass('opened');
		    		$this.find('.lp-menu-block-bg').fadeIn(600);
		    		$this.css('z-index', '999')
		    		$('html').css('overflow', 'hidden');
		    	}
		    });
	    	
		    $this.find('.haschild').on('click', function(e){
		    	e.stopPropagation();
		    	$(this).toggleClass('_open').children('ul').slideToggle();
		    });
		    
		    $popup.find('.js-menu_appedable').on('click', 'a', function(){
		    	$burger.toggleClass('opened');
		    	$popup.animate({height: ""0%""}, 800).removeClass('opened');
	    		$this.find('.lp-menu-block-bg').fadeOut(600);
	    		$this.css('z-index', '');
	    		$('html').css('overflow', '');
		    });	
		    
		    if (s3LP.is_cms) {
				setTimeout(function(){
					LpController.afterSave(function () {
						menuShow();
						setTimeout(function(){
					    	$(window).trigger('resize');
						},500);
					});
				},2000);
			}
		});
	}
	
	lp_template.queue.productsTabs10 = function($self) {
	    let $tabsBlock = $self.find('.js-prods10');
	
	    if ($tabsBlock.length) {
	        $tabsBlock.each(function(){
	
	            let $this = $(this),
	                $tabItem = $this.find('.js-tab-item'),
	                $tabContent = $this.find('.js-content'),
	                $firstTabItem = $tabItem.first(),
	                $firstTabContent = $tabContent.first(),
	
	            activeFirstTab = function(){
	                $firstTabItem.addClass('_active');
	                $firstTabContent.addClass('_active');
	            }
	
	            activeFirstTab();
	
	
	            $tabItem.on('click', function() {
	                $(this).addClass('_active').siblings().removeClass('_active');
	                $tabContent.removeClass('_active').eq($(this).index()).addClass('_active');
	            });
	        })
	    }
	}
	
	lp_template.queue.setPropsForCircled = function($self) {
		var $block = $self.find('.circled_container');
		
		var resizedFunction = function() {
			$block.each(function(){
				var $this = $(this);
	            
				$this.css({
					'width' : '',
					'height' : ''
				});
				
				var $thisHeight = $this.height(),
		            $thisWidth = $this.width(),
		            maxValue = $thisHeight > $thisWidth ? $thisHeight : $thisWidth;
				
				setTimeout(function(){
					$this.css({
						'width' : maxValue,
						'height' : maxValue
					});
				},1000);
		    });
		}
		
		$(window).on('resize', resizedFunction);
		if (s3LP.is_cms) {
			setTimeout(function(){
				LpController.afterSave(function () {
				    resizedFunction();
				});
			},1000);
		}
	}
	
	lp_template.queue.equalHeight = function($self) {
		var $block = $self.find('.equal-height');
		
		var resizedFunction = function() {
			$block.each(function(){
				var $this = $(this);
	            
				$this.css({
					'height' : ''
				});
				
				var $thisWidth = $this.width(),
		            maxValue = $thisWidth;
				
				setTimeout(function(){
					$this.css({
						'height' : maxValue
					});
				},1000);
		    });
		}
		
		$(window).on('resize', resizedFunction);
		if (s3LP.is_cms) {
			setTimeout(function(){
				LpController.afterSave(function () {
				    resizedFunction();
				});
			},1000);
		}
	}
	
	lp_template.queue.steps17 = function($self) {
		var $block = $self.hasClass('lp-steps-17') ? $self : $self.find('.lp-steps-17');
		$block.each(function(){
			if ($(this).length) {
				$(this).find('.js-counter-btn').on('click', function(){
				    var $this = $(this),
				        $thisIndex = $this.index(),
				        $item = $this.parents('.lp-steps-17').find('.js-slider-item').eq($thisIndex);
				    if (!$this.hasClass('_active')) $this.addClass('_active').siblings().removeClass('_active');
				    if (!$item.hasClass('_active')) $($item).fadeIn().addClass('_active').css('display', 'flex').siblings().hide().removeClass('_active');
				});
			}
		});
	}
	
	lp_template.queue.qa13 = function($self) {
	 	var $block = $self.hasClass('lp-qa-13') ? $self : $self.find('.lp-qa-13');
		if ($block.length)	{
			$block.each(function(){
				var $this = $(this);
				try {
					let colWrapper = '<div class=""lp-qa-13-items-col""></div>',
						windowWidth = $(window).width(),
						evenElems = $this.find('.lp-qa-13-item:nth-child(even)');
			
					
					$this.find('.lp-qa-13-item').each(function(index, element){
						$(this).css('order', index+1);
						evenElems.addClass('_even');
					});
					
					let splitInCols = function() {
						if (windowWidth >= 960) {
						/*	$this.find('.lp-qa-13-items > .lp-qa-13-item:odd').wrapAll(colWrapper);
							$this.find('.lp-qa-13-items > .lp-qa-13-item').wrapAll(colWrapper);*/
							
							$this.find('.lp-qa-13-item._even').prependTo($this.find('.lp-qa-13-items-col').last());
						}
					}
			
					let setItemHeight = function(windowWidth) {
						if (windowWidth >= 960) {
							$this.find('.lp-qa-13-items-col').first().children('.lp-qa-13-item').each(function(index, element){
									
								let firstColItem = $(this).children('.lp-qa-13-item-title-wrapper'),
									secColItem = $this.find('.lp-qa-13-items-col').last().children('.lp-qa-13-item').eq(index).children('.lp-qa-13-item-title-wrapper');
								if (firstColItem.height()<secColItem.height()) {
									firstColItem.css('min-height', secColItem.height());	
								} else {
									secColItem.css('min-height', firstColItem.height());
								}	
							});
						} else {
							$this.find('.lp-qa-13-item-title-wrapper').css('min-height', '');
						}
					}
					splitInCols();
					setItemHeight(windowWidth);
					$(window).resize(function(){
						let newWindowWidth = $(window).width();
						if (windowWidth>=960){
							if (newWindowWidth < 960) {
								windowWidth = newWindowWidth;
								//$this.find('.lp-qa-13-item').unwrap();
								$this.find('.lp-qa-13-items-col').last().find('.lp-qa-13-item._even').appendTo($this.find('.lp-qa-13-items-col').first());
							}
						} else if (windowWidth<960){
							if (newWindowWidth>=960) {
								windowWidth = newWindowWidth;
								splitInCols();
							}
						}
						setItemHeight(newWindowWidth);
					});
			
				} catch(e) {
					console.log(e);
				}
			});
		}
	}
	
	lp_template.queue.header11 = function($self) {
		var $block = $self.hasClass('has-one-line-menu') ? $self : $self.find('.has-one-line-menu');
		if ($block.length) {
			$block.each(function(){
				var $this = $(this),
					$menu = $this.find('.js-nav-menu'),
					$menuControls = !!$this.data('menu-controls') ? $this.data('menu-controls') : 'border, indents, shadow, background',
					$dots = $this.find('.js-nav-menu-dots'),
					$navMenu = $this.find('.js-menu-wrap .js-nav-menu'),
					$lastLi = $this.find('.js-hidden-nav-menu'),
					$burger = $this.find('.js-side-menu-open-btn'),
					$sideMenu = $this.find('.js-side-menu');
					
				function oneLineMenu() {
					$navMenu.oneLineMenu({
					    minWidth  : 599,
					    lastClass : 'lp-header-hidden-nav js-hidden-nav-menu',
					    left: -25,
					    kebabHtml: '<div class=""lp-header-dots js-nav-menu-dots"" data-has-event=""1"" data-elem-type=""container"" data-lp-selector="".lp-header-dots""><div class=""lp-header-dots-in"" data-lp-selector="".circle"" data-elem-type=""container""><div class=""circle""></div><div class=""circle""></div><div class=""circle""></div></div></div>'
					});
					
					$(window).on('resize', function(){
						$dots = $this.find('.js-nav-menu-dots'),
						$lastLi = $this.find('.js-hidden-nav-menu');
						$dots.on('click', function(){
						    $this.find('.js-hidden-nav-menu > ul').toggleClass('_open');
						});	
						
						$lastLi.find('a').on('click', function(){
						    $this.find('.js-hidden-nav-menu > ul').toggleClass('_open');
						});	
						
						$this.find('.js-hidden-nav-menu > ul').attr('data-elem-type', 'generate').attr('data-lp-controls-list', $menuControls).addClass('lp-menu-19-inner').attr('data-lp-selector', '.lp-menu-19-inner');
						$this.find('.lp-block-bg .lp-block-overlay').clone().prependTo($this.find('.js-hidden-nav-menu > ul'));
					}).trigger('resize');
					
					$burger.on('click', function(){
						$sideMenu.toggleClass('_open');
						$this.find('._overlay').toggleClass('_open');
						$this.toggleClass('_opened');
						$burger.toggleClass('is-active');
						$('body').toggleClass('overflow');
					});
					
					$sideMenu.on('click', 'a', function(){
				    	$sideMenu.toggleClass('_open');
						$this.find('._overlay').toggleClass('_open');
						$this.toggleClass('_opened');
						$burger.toggleClass('is-active');
						$('body').toggleClass('overflow');
				    });	
				}
				
				oneLineMenu();
				
				if (s3LP.is_cms) {
					setTimeout(function(){
						LpController.afterSave(function () {
							$navMenu.destroy();
						    oneLineMenu();
						});
					},1000);
				}
			});
		}
	}
	
	lp_template.queue.steps14 = function($self) {
		
		var $block = $self.hasClass('lp-steps-14') ? $self : $self.find('.lp-steps-14');
		
		if ($block.length) {
			$block.each(function(){
				var $this = $(this);
				try {
		            var wrapRows = function wrapRows() {
		                var itemsCount = $this.find('.lp-steps-14-content>.lp-steps-14-item').length
		                  , sliceFunc = function sliceFunc(itemsInRow) {
		                    for (var i = 0; i < itemsCount / itemsInRow; i++) {
		                        $this.find('.lp-steps-14-content>.lp-steps-14-item').slice(0, itemsInRow).wrapAll(wrapper);
		                    }
		                };
		
		                if (windowWidth < 600) {} else if (windowWidth < 960) {
		                    sliceFunc(2);
		                } else if (windowWidth < 1200) {
		                    sliceFunc(3);
		                } else {
		                    sliceFunc(itemsInRow);
		                }
		            };
		
		            var windowWidth = $(window).width()
		              , wrapper = '<div class=""lp-steps-14-row""></div>'
		              , itemsInRow = $this.find('.lp-steps-14-content').attr('data-count');
		            wrapRows();
		            $(window).resize(function() {
		                var newWindowWidth = $(window).width();
		
		                if (windowWidth < 960 && windowWidth >= 600) {
		                    if (newWindowWidth >= 960 || newWindowWidth < 600) {
		                        windowWidth = newWindowWidth;
		                        $this.find('.lp-steps-14-row>.lp-steps-14-item').unwrap();
		                        wrapRows();
		                    }
		                } else if (windowWidth < 1200 && windowWidth >= 960) {
		                    if (newWindowWidth >= 1200 || newWindowWidth < 960) {
		                        windowWidth = newWindowWidth;
		                        $this.find('.lp-steps-14-row>.lp-steps-14-item').unwrap();
		                        wrapRows();
		                    }
		                } else if (windowWidth >= 1200) {
		                    if (newWindowWidth < 1200) {
		                        windowWidth = newWindowWidth;
		                        $this.find('.lp-steps-14-row>.lp-steps-14-item').unwrap();
		                        wrapRows();
		                    }
		                } else if (windowWidth < 600) {
		                    if (newWindowWidth >= 600) {
		                        windowWidth = newWindowWidth;
		                        $this.find('.lp-steps-14-row>.lp-steps-14-item').unwrap();
		                        wrapRows();
		                    }
		                }
		                
		                
			                if (window.matchMedia('(min-width : 600px)').matches) {
				                var $circle = $this.find('.lp-steps-14-item__counter'),
				                	$circleHeight = $circle.outerHeight() / 2,
				                	$lastItem = $this.find('.lp-steps-14-item:not(:last-child)'),
				        			$arrow = $lastItem.find('.lp-steps-14-item__arrow');
				        			
				        		$('.lp-steps-14-item__arrow').css('top', '');
		        				$arrow.css('top', $circleHeight);
			                }
			                
			                else {
			                	$('.lp-steps-14-item__arrow').css('top', '');
			                }
		                
		                
		                
		            });
		        } catch (e) {
		            console.log(e);
		        }
			});
		}
	}
	
	lp_template.queue.features28 = function($self) {
		var $block = $self.hasClass('lp-features-28') ? $self : $self.find('.lp-features-28');

		if ($block.length) {

			$block.each(function() {
				var $this = $(this),
					pie28 = '';
				
				function donutInit() {
					console.log(listData);
					var listData = new Array(),
						listColor = new Array(),
						$pie = '.lp-features-28-pie';
						
					$this.find('.lp-features-28-item').each(function(index, element){
						let itemValue = parseInt($(this).find('.lp-features-28-item__text').text()),
							itemText = $(this).find('.lp-features-28-item__text').text();
							
						listColor.push($(this).find('.lp-features-28-item__color').css('background-color')),
						listData.push([itemText, itemValue]);
					});
			
					pie28 = $.jqplot($pie, [listData], {
						seriesDefaults: {
							renderer:$.jqplot.DonutRenderer,
							rendererOptions:{
								padding: 0,
								shadowOffset: 0,
								sliceMargin: 0,
								startAngle: 180,
								showDataLabels: true,
								dataLabels: 'label',
								totalLabel: false,
								seriesColors: listColor,
								borderWidth: 0.0
							}
						},
						grid: {
							borderWidth: 0.0,
							shadow: false,
							background: '#ffffff',
							backgroundColor: 'rgba(255, 255, 255, 0)'
							
						}
					});
		
					$this.find('.lp-features-28-pie .jqplot-data-label').addClass('lp-header-title-6 lp-features-28-item__text').attr('data-elem-type', 'text');
					$this.find('.lp-features-28-pie .jqplot-data-label').attr('data-lp-selecttor', '.lp-features-28-item__text');
				}
				
				donutInit();
				
				if (s3LP.is_cms) {
					setTimeout(function(){
						LpController.afterSave(function () {
						    
							pie28.destroy();
							setTimeout(function(){
								donutInit();
							},1000);
							
						});
					},1000);
				}
				
				$(window).resize(function(){
					if (window.matchMedia('(max-width : 600px)').matches) {
				    	pie28.destroy();
						donutInit();
				    }
				    else {
				    	pie28.destroy();
						donutInit();
				    }
				});
				
			});
		}		
	};
	
	lp_template.queue.features31 = function($self) {
		var $block = $self.hasClass('lp-features-31') ? $self : $self.find('.lp-features-31');

		if ($block.length) {

			$block.each(function() {
				var $this = $(this);
					
				$this.find('.lp-features-31-item').each(function(index, element){
					var listData = new Array(),
						listColor = new Array(),
						$pie = '#' + $this.find('.lp-features-31-pie').eq(index).attr('id'),
						$innerDiameter = 250;
					
					let itemValue = parseInt($(this).find('.lp-features-31-item__title').attr('data-value')),
						itemValueHidden = parseInt($(this).find('.lp-features-31-item__title._hidden').attr('data-value')),
						itemText = $(this).find('.lp-features-31-item__text').text(),
						itemTextHidden = $(this).find('.lp-features-31-item__title._hidden + .lp-features-31-item__text').text();
						listColor.push($(this).find('.lp-features-31-item__color._active-color').css('background-color'));
						listColor.push($(this).find('.lp-features-31-item__color._disabled-color').css('background-color'));
						listData.push([itemTextHidden, itemValueHidden]);
						listData.push([itemText, itemValue]);
					
					$(window).on('resize', function(){
						
						if (window.matchMedia('(min-width : 1380px)').matches) {
							$innerDiameter = 222;
						} else if (window.matchMedia('(min-width : 1200px)').matches) {
							$innerDiameter = 224;
						} else if (window.matchMedia('(min-width : 960px)').matches) {
							$innerDiameter = 228;
						} else if (window.matchMedia('(min-width : 600px)').matches) {
							$innerDiameter = 241;
						}
						
						if(!$('.lp-features-31-pie').eq(index).is(':empty')) {
							$('.lp-features-31-pie').html('');
						}
						
						var pie31 = $.jqplot($pie, [listData], {
							seriesDefaults: {
								renderer:$.jqplot.DonutRenderer,
								rendererOptions:{
									padding: 0,
									shadowOffset: 0,
									innerDiameter: $innerDiameter,
									sliceMargin: 0,
									startAngle: -90,
									showDataLabels: true,
									dataLabels: 'label',
									totalLabel: false,
									seriesColors: listColor,
									borderWidth: 0.0
								}
							},
							grid: {
								borderWidth: 0.0,
								shadow: false,
								background: 'rgba(255, 255, 255, 0)'
							}
						});
						
						$this.find('.lp-features-31-pie .jqplot-data-label').addClass('lp-header-title-1 lp-features-31-item__text').attr('data-elem-type','text').attr('data-lp-selector','.lp-features-31-item__text');
					}).trigger('resize');
					
				});
		
			});
		}		
	};
	

	lp_template.queue.sertificate5 = function($self) {
		var $block = $self.hasClass('lp-certificate-5') ? $self : $self.find('.lp-certificate-5');

		if ($block.length) {

			$block.each(function() {
				var $this = $(this);
			    	
			    function isotopeinit () {	
				    var	$mansoryItem = $this.find('.js-main-item'),
				    	$isotope = $this.find('.js-isotope');
					
					setTimeout(function(){
					    $isotope.isotope({
					        itemSelector: '.js-isotope-item',
					        originLeft: true
					    });
					}, 0.100);
			    }
			    isotopeinit();
			
				if (s3LP.is_cms) {
					setTimeout(function(){
						LpController.afterSave(function () {
						    isotopeinit();
						});
					},1000);
				}
			});
		}		
	};
	
	
	lp_template.queue.sertificate9 = function($self) {
		var $block = $self.hasClass('lp-certificate-9') ? $self : $self.find('.lp-certificate-9');

		if ($block.length) {

			$block.each(function() {
				var $this = $(this);
			    	
			    
			    if ($this.find('.lp-certificate-9-item').hasClass('_not_con')) {
			    	$this.find('.lp-certificate-9-arrow').hide();
			    }
			});
		}		
	};
	
	lp_template.queue.Init221303 = function ($self) {
					
	    var $gallery = $self.find('.lp-gallery-2');
	
	    if ($gallery.length) {
	        $gallery.each(function(){
	            var $thisBlock = $(this);
	            var $window = $(window);
	            var $maskPhoto = $(this).find('.js-photo-mask');
	            var $mainPhoto = $(this).find('.js-main-item');
	            var $previewPhoto = $(this).find('.js-preview-item');
	            var $touchStartX = 0;
	            var $touchEndX = 0;
	            var $nextPhotoBtn = $(this).find('.js-next-item');
	            var $prevPhotoBtn = $(this).find('.js-prev-item');
	            var $showMoreBtn = $(this).find('.js-show-more');
	            var $lightGallery = $(this).find('.js-light-gallery');
	
	
	            $mainPhoto.on('touchstart', function() {
	                // event.preventDefault();
	                // event.stopPropagation();
	                $touchStartX = event.targetTouches[0].screenX;
	            });
	
	            $mainPhoto.on('touchend', function() {
	                // event.preventDefault();
	                // event.stopPropagation();
	                $touchEndX = event.changedTouches[0].screenX;
	                handleGesture();
	            });
	
	            function showNextPhoto() {
	                if ($mainPhoto.length <= 7) {
	                    if ( !$mainPhoto.last().hasClass('_active')) {
	                        $mainPhoto.siblings('._active').next().addClass('_active');
	                        $previewPhoto.siblings('._active').next().addClass('_active');
	                        $mainPhoto.siblings('._active').first().removeClass('_active');
	                        $previewPhoto.siblings('._active').first().removeClass('_active');
	                    } else {
	                        $mainPhoto.siblings().removeClass('_active');
	                        $previewPhoto.siblings().removeClass('_active');
	                        $mainPhoto.first().addClass('_active');
	                        $previewPhoto.first().addClass('_active');
	                    }
	                } else {
	                    if ( !$mainPhoto.eq(5).hasClass('_active')) {
	                        $mainPhoto.siblings('._active').next().addClass('_active');
	                        $previewPhoto.siblings('._active').next().addClass('_active');
	                        $mainPhoto.siblings('._active').first().removeClass('_active');
	                        $previewPhoto.siblings('._active').first().removeClass('_active');
	                    } else {
	                        $mainPhoto.siblings().removeClass('_active');
	                        $previewPhoto.siblings().removeClass('_active');
	                        $mainPhoto.first().addClass('_active');
	                        $previewPhoto.first().addClass('_active');
	                    }
	                }
	                
	                $thisBlock.find('.lp-gallery-2-photo__preview-item-mask._active').removeClass('_active').attr('data-lp-selector', '.lp-gallery-2-photo__preview-item-mask');
	                $thisBlock.find('.lp-gallery-2-photo__preview-item._active .lp-gallery-2-photo__preview-item-mask').addClass('_active').attr('data-lp-selector', '.lp-gallery-2-photo__preview-item-mask._active');
	            }
	
	            function showPrevPhoto() {
	
	                if ($mainPhoto.length <= 7) {
	                    if ( !$mainPhoto.first().hasClass('_active')) {
	                        $mainPhoto.siblings('._active').prev().addClass('_active');
	                        $previewPhoto.siblings('._active').prev().addClass('_active');
	                        $mainPhoto.siblings('._active').last().removeClass('_active');
	                        $previewPhoto.siblings('._active').last().removeClass('_active');
	                    } else {
	                        $mainPhoto.siblings().removeClass('_active');
	                        $previewPhoto.siblings().removeClass('_active');
	                        $mainPhoto.last().addClass('_active');
	                        $previewPhoto.last().addClass('_active');
	                    }
	                } else {
	                    if ( !$mainPhoto.first().hasClass('_active')) {
	                        $mainPhoto.siblings('._active').prev().addClass('_active');
	                        $previewPhoto.siblings('._active').prev().addClass('_active');
	                        $mainPhoto.siblings('._active').last().removeClass('_active');
	                        $previewPhoto.siblings('._active').last().removeClass('_active');
	                    } else {
	                        $mainPhoto.siblings().removeClass('_active');
	                        $previewPhoto.siblings().removeClass('_active');
	                        $mainPhoto.eq(5).addClass('_active');
	                        $previewPhoto.eq(5).addClass('_active');
	                    }
	                }
	
					$thisBlock.find('.lp-gallery-2-photo__preview-item-mask._active').removeClass('_active').attr('data-lp-selector', '.lp-gallery-2-photo__preview-item-mask');
	                $thisBlock.find('.lp-gallery-2-photo__preview-item._active .lp-gallery-2-photo__preview-item-mask').addClass('_active').attr('data-lp-selector', '.lp-gallery-2-photo__preview-item-mask._active');
	            }
	
	
	
	            function handleGesture() {
	                var $touchPath = $touchStartX - $touchEndX;
	                if (Math.abs($touchPath) > 50) {
	                    if ($touchPath > 0) {
	                        //Next
	                        showNextPhoto();
	                    } else {
	                        //Prev
	                        showPrevPhoto();
	                    }
	                }
	            }
	
	            var setPhotoMaskSize = function() {
	                $maskPhoto.height($maskPhoto.width());
	            }
	
	
	            var showFirstPhoto = function() {
	                $mainPhoto.first().addClass('_active');
	                $previewPhoto.first().addClass('_active');
	                $previewPhoto.first().find('.lp-gallery-2-photo__preview-item-mask').addClass('_active').attr('data-lp-selector', '.lp-gallery-2-photo__preview-item-mask._active');
	            }
	
	            showFirstPhoto();
	
	            if ($(window).width() < 600) {
	                setPhotoMaskSize();
	            }
	
	            $window.resize(function() {
	                if ($(window).width() < 600) {
	                    setPhotoMaskSize();
	                }
	            })
	
	            $nextPhotoBtn.on ('click', function (e) {
	            	e.preventDefault();
	                showNextPhoto();
	            })
	
	            $prevPhotoBtn.on('click', function (e) {
	            	e.preventDefault();
	                showPrevPhoto();
	            })
	
	            $previewPhoto.on('click', function() {
	                var $this = $(this);
	                if (!$this.hasClass('_active')) {
	                    $this.addClass('_active');
	                    $this.find('.lp-gallery-2-photo__preview-item-mask').addClass('_active').attr('data-lp-selector', '.lp-gallery-2-photo__preview-item-mask._active');
	                    $this.siblings().removeClass('_active');
	                    $this.siblings().find('.lp-gallery-2-photo__preview-item-mask').removeClass('_active').attr('data-lp-selector', '.lp-gallery-2-photo__preview-item-mask');
	                }
	                $mainPhoto.eq($this.index()).addClass('_active').siblings().removeClass('_active');
	            })
	
	            $lightGallery.lightGallery({
	                thumbnail: true,
	                hideControlOnEnd: true,
	                slideEndAnimatoin: false,
	                loop: true,
	                download: false,
	                thumbWidth: 64,
	                thumbContHeight: 96,
	                toogleThumb: false,
	                thumbMargin: 8,
	                selector: '.js-main-item'
	            })
	
	            $showMoreBtn.on('click', function() {
	                $mainPhoto.eq(6).trigger('click')
	            })
	        })
	    }
	}
	
	lp_template.queue.lpGallery20 = function ($self) {
					
	    var $block = $self.hasClass('lp-gallery-20') ? $self : $self.find('.lp-gallery-20');
		
	    if ($block.length) {
	        $block.each(function(){
			    var $this = $(this),
			    	$photos = $this.find('.js-photos');
			    
			    function placePhotoToMosaic() {
			        $photos.find('.js-photo').each(function(index) {
			            if (window.outerWidth < 960) {
			                if (index % 3 == 0) { // wrap by 2 items
			                
			                    $(this).add($(this).next('.js-photo')).add(
			                        $(this).next().next('.js-photo')
			                    ).wrapAll('<div class=""lp-gallery-20-photo__item-wrap"" />');
			                }
			            } else {
			            	// костыль для ЛП в СУ, чтобы не ставил две обертки
			            	if ($photos.find('.js-photo').parent().hasClass('lp-gallery-20-photo__item-wrap')) {
			            		return;
			            	}
			                if (index % 5 == 0) { // wrap by 2 items
			                    $(this).add(
			                        $(this).next('.js-photo')).add(
			                            $(this).next().next('.js-photo').add(
			                                $(this).next().next().next('.js-photo').add(
			                                    $(this).next().next().next().next('.js-photo')
			                                )
			                            )
			                        ).wrapAll('<div class=""lp-gallery-20-photo__item-wrap"" />');
			                }
			            }
			        });
			
			        $photos.find('.lp-gallery-20-photo__item-wrap').each(function(el) {
			            $(this).addClass('_' + $(this).children().length + '-item')
			        });
			    }
			
				$(window).on('resize', function(){
					if ($photos.find('.js-photo').parent().hasClass('lp-gallery-20-photo__item-wrap')) {
		        		$photos.find('.js-photo').unwrap();
		        	}
		        	
	        		setTimeout(function(){
		    			placePhotoToMosaic();
	        		},0);
				});
	        })
	    }
	}

	
	lp_template.queue.lpGallery22 = function($self) {
		var $block = $self.hasClass('lp-gallery-22') ? $self : $self.find('.lp-gallery-22');

		if ($block.length) {
			return
			$block.each(function(){
				var $this = $(this),
					$slider = $this.find('.js-owl-carousel'),
					autoplay = !!$slider.data('autoplay'),
					loop = !!$slider.data('infinite'),
					nav = !!$slider.data('arrows'),
					dotsEach = !!$slider.data('dots-each'),
					dots = 1,
					pause = $slider.data('pause') || 5000,
					speed = $slider.data('speed') || 250,
					fade = !!$slider.data('fade'),
					$parent = $slider.closest('[data-block-layout]'),
					dataResponse = $slider.data('response'),
					response = {},
					$dots = $parent.find('.lp-dots-wrapper'),
					$window = $(window),
			        $itemsInRow;
			
			
			    $slider.find('.js-photo-item').each(function(index) {
			        if (index % 2 == 0) { // wrap by 2 items
			            $(this).add($(this).next('.js-photo-item')).wrapAll('<div class=""lp-gallery-22-gallery-item-wrap js-owl-carousel-item"" />');
			        }
			    });
			
			    var $sliderItem = $this.find('.js-owl-carousel-item');
			
			    if ($this.hasClass('_6')) {
			        $itemsInRow = 6;
			    } else if ($this.hasClass('_8')) {
			        $itemsInRow = 8;
			    } else if ($this.hasClass('_12')) {
			
			        if ($window.width() < 960) {
			          $itemsInRow = 8
			        } else {
			            $itemsInRow = 12;
			        }
			    } else {
			        $itemsInRow = 4;
			    }
			
			    console.log($sliderItem.length);
			    console.log($itemsInRow);
			
			    if ($sliderItem.length > $itemsInRow) {
			        $slider.owlCarousel({
						autoplay : autoplay,
						loop : loop,
						nav : nav,
						dots : true,
						dotsEach: dotsEach,
						animateIn: fade ? 'fadeIn' : false,
						animateOut: fade ? 'fadeOut' : false,
						smartSpeed: speed,
						mouseDrag: s3LP.is_cms ? false : true, 
						autoplayTimeout: pause,
			            responsive: {
			                0: {
			                    items: 2,
			                    slideBy: 2
			                },
			                600: {
			                    items: $itemsInRow,
			                    slideBy: 1
			                }
			            },
						onInitialized: function(e) {
							var $dotsCount = $parent.find('.owl-dot').length;
							
							if (!$dots.length || $dotsCount < 2) {
								$dots.html('');
								
								$parent.find('.js-next-slide, .js-prev-slide').addClass('_hide');
								return;
							};
							var $dotsHTML = '';
							
							for(var i = 0; i < $dotsCount; i++) {
								$dotsHTML += '<div class=""lp-dots-item js-dot-item"" data-elem-type=""container"" data-lp-selector="".lp-dots-item""></div>';
							} 
							
							if (!$dots.hasClass('_unchanged')) {
							
								$dots.html($dotsHTML);
							
							}
							
							$dots.find('.lp-dots-item').eq(0).addClass('active');
							
						},
						
						onResized: function(e) {
							if (!$dots.length || e.page.count < 2) {
								$dots.html('');
								$parent.find('.js-next-slide, .js-prev-slide').addClass('_hide');
								return;
							} else {
								$parent.find('.js-next-slide, .js-prev-slide').addClass('_show');
							}
							
							var $dotsHTML = '';
							for(var i = 0; i < e.page.count; i++) {
								$dotsHTML += '<div class=""lp-dots-item js-dot-item"" data-elem-type=""container"" data-lp-selector="".lp-dots-item""></div>';
							}
							
							if (!$dots.hasClass('_unchanged')) {
								$dots.html($dotsHTML);
							}
							$dots.find('.lp-dots-item').removeClass('active');
							$dots.find('.lp-dots-item').eq(e.page.index).addClass('active');
						},
						onTranslate: function(e) {
							$dots.find('.lp-dots-item').removeClass('active');
							$dots.find('.lp-dots-item').eq(e.page.index).addClass('active');
						}
			        });
			        
			        $parent.on('click', '.js-next-slide', function(e) {
						e.preventDefault();
						$slider.trigger('next.owl.carousel');
					});
	
					$parent.on('click', '.js-prev-slide', function(e) {
						e.preventDefault();
						$slider.trigger('prev.owl.carousel');
					});
	
					$parent.on('click', '.js-dot-item', function(e) {
						e.preventDefault();
						$slider.trigger('to.owl.carousel', [$(this).index()]);
					});
			    }
			    console.log($slider.owlCarousel);
			});
		}
	}
	
	lp_template.queue.lpPromo13 = function($self) {
	    var $slider = $self.find('.js-promo-13-slider');
	
	    if ($slider.length) {
	        $slider.each(function(){
	
	            var $this = $(this),
	                $parent = $this.closest('[data-block-layout]'),
	                $currentSlideBlock = $parent.find('.js-promo-13-current'),
	                $totalSlidesBlock = $parent.find('.js-promo-13-total'),
					$autoplay = $this.data('autoplay'),
					$infinite = $this.data('infinite'),
					$autoplaySpeed = $this.data('autoplay-speed'),
					$speed = $this.data('speed');
	
	
	            function changeProgressWidth($progressWidth) {
	                var $progressWidthBlock =  $parent.find('.js-promo-13-progress'),
	                	outerWidth = $progressWidthBlock.outerWidth(),
	                	innerWidth = $progressWidthBlock.innerWidth(),
	                	$progressMaxWidthBlock = outerWidth - innerWidth;
	                	
	                $progressWidthBlock.css('width', 'calc(' + $progressWidth + '%' + ' - ' + $progressMaxWidthBlock + 'px');
	            }
	
	            $this.on('init reInit', function(event, slick) {
	                var $totalSlides = slick.slideCount;
	
	                if($totalSlides > 1) {
	                    var $progressWidth = 1 /$totalSlides*100;
	                    $totalSlidesBlock.text($totalSlides);
	                    changeProgressWidth($progressWidth);
	                } else {
	                    $parent.find('.js-promo-13-progress-block').css('display', 'none')
	                }
	
	
	            });
	
	            $this.slick({
	                infinite: $infinite,
	                speed: $speed,
	                autoplay: $autoplay,
				    autoplaySpeed: $autoplaySpeed,
	                slidesToShow: 1,
	                slidesToScroll: 1,
	                fade: true,
	                dots:false,
	                prevArrow: $parent.find('.lp-promo-13-slider__arrow--left'),
	                nextArrow: $parent.find('.lp-promo-13-slider__arrow--right')
	            });
	
	            $this.on('afterChange', function(event, slick, currentSlide){
	                var $currentSlide = currentSlide + 1,
	                    $totalSlides = slick.slideCount,
	                    $progressWidth = $currentSlide/$totalSlides*100;
	                $currentSlideBlock.text($currentSlide);
	                changeProgressWidth($progressWidth);
	            });
	
	        });
	    }
	}
	
	lp_template.queue.lpPromo16 = function($self) {
	    var $slider = $self.find('.js-promo-16-slider');

	    if ($slider.length) {
	        $slider.each(function(){
	
	            var $this = $(this),
	                $parent = $this.closest('[data-block-layout]'),
	                $currentSlideBlock = $parent.find('.js-promo-16-current'),
	                $totalSlidesBlock = $parent.find('.js-promo-16-total'),
					$autoplay = $this.data('autoplay'),
					$infinite = $this.data('infinite'),
					$autoplaySpeed = $this.data('autoplay-speed'),
					$speed = $this.data('speed');
	
	            $this.on('init reInit afterChange', function(event, slick) {
	                var $totalSlides = slick.slideCount;
	
	                if($totalSlides > 1) {
	                    $totalSlidesBlock.text($totalSlides);
	                } else {
	                    $('.js-promo-16-progress-block').css('display', 'none')
	                }
	            });
	
	            $this.on('afterChange', function(event, slick, currentSlide){
	                var $currentSlide = currentSlide + 1;
	                $currentSlideBlock.text($currentSlide);
	            });
	
	            $this.slick({
	                infinite: $infinite,
	                speed: $speed,
	                autoplay: $autoplay,
				    autoplaySpeed: $autoplaySpeed,
	                slidesToShow: 1,
	                slidesToScroll: 1,
	                fade: true,
	                dots:false,
	                prevArrow: $parent.find('.lp-promo-16-slide__arrow--left'),
	                nextArrow: $parent.find('.lp-promo-16-slide__arrow--right')
	            });
	        });
	    }
	}
	
	lp_template.queue.lpProducts39 = function($self) {
		var $block = $self.hasClass('lp-prods-39') ? $self : $self.find('.lp-prods-39');
			
		if ($block.length) {
			var func = function() {
				$block.each(function(){
					var $this = $(this);
					if (window.matchMedia('(min-width: 1200px)').matches) {
						$this.find('.lp-prods-39__subblock').each(function(index) {
							var item = $(this).find('.lp-prods-39__item:first-child()'),				
									itemHeight = item.height() + 2*parseInt(item.css('border-width'));					
			
							$(this).find('.lp-prods-39__title-wrap').css('min-height', itemHeight);
			
						});
					} else {
						$this.find('.lp-prods-39__title-wrap').css('min-height', '');
					}
				});
			};
			
			$(window).on('resize', func);
			if (s3LP.is_cms) {
				setTimeout(function(){
					LpController.afterSave(function () {
					    func();
					});
				},1000);
			}
		}
	}
	
	lp_template.queue.lpContacts6 = function($self) {
		var $contactsBlock = $self.hasClass('js-contacts-6') ? $self : $self.find('.js-contacts-6');
		
		setTimeout(function() {
			$('.lp-contacts-6-data-column').removeClass('lp-contacts-6-data-column-load');	
		}, 1000);
			
		if ($contactsBlock.length) {
		    $contactsBlock.each(function() {
		
		        var $tab = $contactsBlock.find('.js-tab'),
		            $tabsBlock = $contactsBlock.find('.js-tabs'),
		            $contactsData = $contactsBlock.find('.js-contacts-data');
		
		        // Одинаковая высота у всех блоков
		
		        function setHeight() {
		            var maxHeight = $contactsData.eq(0).height();
		            $contactsData.each(function () {
		                if ( $(this).height() > maxHeight ) {
		                    maxHeight = $(this).height();
		                }
		            });
		            $contactsData.css('minHeight', maxHeight);
		
		            setTimeout(function(){
		                $contactsData.hide();
		                $contactsData.eq(0).addClass('_active');
		            }, 500);
		        }
		
		        // Табы
		
		        function tabsInit() {
		            $tab.on('click', function() {
		                $(this).addClass('_active').siblings().removeClass('_active');
		                $contactsData.removeClass('_active').eq($(this).index()).addClass('_active');
		                lp_template.checkMapInitialization($contactsData.eq($(this).index()).find('.js-lp-simple-map'));
		                if ($contactsBlock.find('.lp-contacts-6-map').data('map-type') == 'yandex') {
		                	console.log($contactsData.eq($(this).index()).find('.js-lp-simple-map').data());
		                	$contactsData.eq($(this).index()).find('.js-lp-simple-map').data('ymaps').container.fitToViewport();
		                }
		            });
		        }
		
		        // Кастомный скролл
		
		        function scrollInit() {
		
		            // Показывать скролл, если он нужен
		            var widthSum = 0;
		            $tab.each(function () {
		                widthSum +=  +$(this).outerWidth(true)
		            })
		
		            if(widthSum > $tabsBlock.width()) {
		                baron({
		                    root: '.lp-contacts-6-scroll',
		                    scroller: '.lp-contacts-6-scroll__inner',
		                    bar: '.lp-contacts-6-scroll__bar',
		                    scrollingCls: '_scrolling',
		                    draggingCls: '_dragging',
		                    direction: 'h',
		
		                })
		            }
		        }
		
		        // Карты
		
		        setHeight();
		        tabsInit();
		        //scrollInit();
		
		    });
		}
	}
	
	lp_template.queue.lpReviews18 = function($self) {

	    var $block = $self.hasClass('lp-reviews-18') ? $self : $self.find('.lp-reviews-18');
	    if ($block.length) {
		    $block.each(function(){
			    var $this = $(this);
			    
					try {
						adjustHeight();
			
						$(window).on('resize', function(){				
							adjustHeight();
						});			  
					} catch(exception) {
						console.log(exception);
					}
			
				function adjustHeight() {
					if (window.matchMedia('(min-width: 960px)').matches) {
						var wrapTopPadding = parseInt($this.find('.lp-reviews-18__wrap').css('padding-top')),					
								headerHeight = $this.find('.lp-reviews-18__header').height(),				
								imgHeight = $this.find('.lp-reviews-18__bg-img').height(),
								top = wrapTopPadding + headerHeight,					
								contentMinHeight = imgHeight + headerHeight;								
						
						$this.find('.lp-reviews-18__bg-img').css({top: top});
						$this.find('.lp-reviews-18__content').css({minHeight:contentMinHeight});			
					} else {
						$this.find('.lp-reviews-18__bg-img').css({top: ''});
						$this.find('.lp-reviews-18__content').css({minHeight: ''});			
					}
				};
				
				if (s3LP.is_cms) {
					setTimeout(function(){
						LpController.afterSave(function () {
						    $(window).trigger('resize');
						});
					},3000);
				}
		    });
	    }
	}
	
	lp_template.queue.lpReviews19 = function($self) {

	    var $block = $self.hasClass('lp-reviews-19') ? $self : $self.find('.lp-reviews-19');
	    
	    $block.each(function(){
		    var $this = $(this);
		    
				try {
					setTimeout(function(){
						imgHeight();
					},3000);
					
					$(window).on('resize', function(){				
						setTimeout(function(){
							imgHeight();
						},300);
					});
					
					if (s3LP.is_cms) {
					
						setTimeout(function(){
							LpController.afterSave(function () {
							    imgHeight();
							});
						},3000);
					
					}
					
				} catch(exception) {
					console.log(exception);
				}
		
			function imgHeight() {
				if (window.matchMedia('(min-width: 960px)').matches) {
					var topHeight = $this.find('.lp-reviews-19__top').height();
					
					$this.find('.lp-reviews-19__block-img').css({height: topHeight});
								
				} else {
					$this.find('.lp-reviews-19__block-img').css({height: ''});
				}
			};
	    });
	}
	
	
	lp_template.queue.lpVideo17 = function($self) {
	    var $block = $self.hasClass('lp-video-17') ? $self : $self.find('.lp-video-17');

	    if ($block.length) {
	        $block.each(function(){
	        	var $this = $(this),
	        		$sliderBig = $this.find('.lp-video-17__slider-big'),
	        		slider_thumbs = $this.find('.lp-video-17__slider-thumbs'),
	        		$nav = !!slider_thumbs.data('arrows'),
					$dot = !!slider_thumbs.data('dots'),
					$autoplay = !!$sliderBig.data('autoplay'),
					$infinite = $sliderBig.data('infinite'),
					$autoplaySpeed = $sliderBig.data('pause'),
					$speed = $sliderBig.data('speed');

				try {

				    initSlick();
					
				} catch(exception) {
					console.log(exception);
				}

				function initSlick() {
					$this.find('.lp-video-17__slider-big').slick({
						infinite: $infinite,
		                speed: $speed,
						vertical: false,
						verticalSwiping: true,
						slidesPerRow: 1,
						slidesToShow: 1,
						slidesToScroll: 1,			
						asNavFor: $this.find('.lp-video-17__slider-thumbs'),
						arrows: false,
						fade: true,
						dots: false,
						adaptiveHeight: true,
						draggable: true,			
						responsive: [
							{
								breakpoint: 1200,
								settings: {
									vertical: false,
									fade: true,
									cssEase: 'ease',
									verticalSwiping: false,
								}
							},
							{
								breakpoint: 600,
								settings: {
									vertical: false,
									verticalSwiping: false,
									dots: true,
									arrows: true,
									appendArrows: $this.find('.lp-video-17__big-controls'),
									prevArrow: '<button data-has-event=""1"" data-elem-type=""container"" data-lp-selector="".lp-video-17__arrow"" class=""lp-video-17__arrow lp-video-17__arrow-prev js-prev-item _primary-fill _svg-light-fill""><div data-elem-type=""container"" class=""arrow-line-wr"" data-lp-selector="".arrow-line""><div class=""arrow-line""></div><div class=""arrow-line""></div></div></button>',
									nextArrow: '<button data-has-event=""1"" data-elem-type=""container"" data-lp-selector="".lp-video-17__arrow"" class=""lp-video-17__arrow lp-video-17__arrow-next js-next-item _primary-fill _svg-light-fill""><div data-elem-type=""container"" class=""arrow-line-wr"" data-lp-selector="".arrow-line""><div class=""arrow-line""></div><div class=""arrow-line""></div></div></button>',
									appendDots: $this.find('.lp-video-17__big-dots'),						
								}
							}
						]
					});
				
					$this.find("".lp-video-17__slider-thumbs"").slick({
						infinite: $infinite,
		                speed: $speed,
		                autoplay: $autoplay,
					    autoplaySpeed: $autoplaySpeed,
						vertical: true,
						verticalSwiping: true,
						slidesPerRow: 1,
						slidesToShow: 4,	
						asNavFor: $this.find('.lp-video-17__slider-big'),
						focusOnSelect: true,
						arrows: true,
						dots: true,
						adaptiveHeight: true,
						appendArrows: $this.find('.lp-video-17__thumbs-controls'),			
						appendDots: $this.find('.lp-video-17__thumbs-dots'),
						prevArrow: '<button data-has-event=""1"" data-elem-type=""container"" data-lp-selector="".lp-video-17__arrow"" class=""lp-video-17__arrow lp-video-17__arrow-prev js-prev-item _primary-fill _svg-light-fill""><div data-elem-type=""container"" class=""arrow-line-wr"" data-lp-selector="".arrow-line""><div class=""arrow-line""></div><div class=""arrow-line""></div></div></button>',
						nextArrow: '<button data-has-event=""1"" data-elem-type=""container"" data-lp-selector="".lp-video-17__arrow"" class=""lp-video-17__arrow lp-video-17__arrow-next js-next-item _primary-fill _svg-light-fill""><div data-elem-type=""container"" class=""arrow-line-wr"" data-lp-selector="".arrow-line""><div class=""arrow-line""></div><div class=""arrow-line""></div></div></button>',
						responsive: [
							{
								breakpoint: 1200,
								settings: {
									vertical: false,
									slidesToShow: 3,
									slidesPerRow: 1,
									infinite: $infinite,
									slidesToScroll: 3,	
									verticalSwiping: false,
								}
							},
							{
								breakpoint: 960,
								settings: {
									vertical: false,				
									slidesPerRow: 1,
									slidesToShow: 2,
									slidesToScroll: 1,
									infinite: $infinite,
									verticalSwiping: false,
								}
							},
						]
					});
				};
				$('.slick-slider.lp-video-17__slider-thumbs').on('beforeChange', function(event, slick, currentSlide, nextSlide){
				  $('.lp-video-17__slider-big video').trigger('pause');
				  $('.lp-video-17__slider-big ._lp-youtube-video').each(function(){
				      var el_src = $(this).attr(""src"");
				        $(this).attr(""src"",el_src);
				        
				  });
				});
				
				
				$(window).on('resize', function(){
					setTimeout(function(){
						var $dotItem = $block.find('.lp-video-17__thumbs-dots li button');
						if ($dotItem.hasClass('lp-video-17__slider-dot')) {
							
						}
						else {
							$dotItem.attr('data-elem-type', 'card_container');
							$dotItem.addClass('lp-video-17__slider-dot');
							$dotItem.attr('data-lp-selector','.lp-video-17__slider-dot');
							$dotItem.attr('data-has-event','1');
						}
					},500);
				});
			});
	    }
	}
	
	lp_template.queue.lpSteps7 = function($self) {
	    var $block = $self.find('.js-simple-tabs');

	    if ($block.length) {
	        $block.each(function(){
	        	var $this = $(this);
	        	if (!s3LP.is_cms) {
			        $this.bind('mousewheel', function(e){
				        if(e.originalEvent.wheelDelta /120 > 0) {
				            $this.find('.active:not(:first-child)').removeClass('active').delay(800).prev().addClass('active').delay(800);
				        }
				        else{
				            $this.find('.active:not(:last-child)').removeClass('active').delay(800).next().addClass('active').delay(800);
				        }
				        
	    				if ($this.find('.count').last().hasClass('active') || $this.find('.count').first().hasClass('active')) {
	    					return;
	    				}
	    				else {
	    					e.stopPropagation();
	    					e.preventDefault();
	    				}
				    });
	        	}
	        	
			  $('.js-tab').on('click', function(){
				    var $index = $(this).index() + 1;
				    $this.find('.js-tab-content:nth-child(' + $index + ')').addClass('active').siblings().removeClass('active');
				    $(this).addClass('active').siblings().removeClass('active')
				});
	        });
	    }
	}
	
	lp_template.queue.lpMenu20 = function($self) {
	    var $block = $self.find('.js-phone-btn');

	    if ($block.length) {
	        $block.each(function(){
	        	var $this = $(this);
	        	
	        	$this.on('click', function(){
				    $(this).siblings('.js-phone').toggleClass('active');
				});
				
				if (!s3LP.is_cms) {
					$(document).mouseup(function (e){
					    var div = $("".lp-menu-20-phone"");
					    if (!div.is(e.target)
					        && div.has(e.target).length === 0) {
					        div.find('.js-phone').removeClass('active');
					    }
					});
				}
	        });
	    }
	}
	
	
	lp_template.queue.lpCertificate19 = function($self) {
		var $block = $self.hasClass('lp-certificate-19') ? $self : $self.find('.lp-certificate-19');
		
		if ($block.length) {
			$block.each(function(){	
				var $this = $(this),
					$mainSlider = $this.find('.js-main-slick'),
			    	$thumbSlider = $this.find('.js-thumb-slick'),
			    	$prevBtn = $this.find('.js-slider-prev'),
			    	$nextBtn = $this.find('.js-slider-next'),
					$dots = !!$mainSlider.data('dots'),
					$arrows = !!$mainSlider.data('arrows'),
					$autoplay = $mainSlider.data('autoplay'),
					$infinite = $mainSlider.data('infinite'),
					$autoplaySpeed = $mainSlider.data('pause'),
					$speed = $mainSlider.data('speed');
				
			    $mainSlider.slick({
			        slidesToShow: 1,
			        slidesToScroll: 1,
			        arrows: false,
			        fade: true,
			        asNavFor: $thumbSlider,
			        infinite: $infinite,
			        speed: $speed,
			        autoplay: $autoplay,
				    autoplaySpeed: $autoplaySpeed,
			        adaptiveHeight: false,
			        responsive: [
			            {
			                breakpoint: 600,
			                settings: {
			                    slidesToShow: 1,
			                    arrows: $arrows
			                }
			            }
			        ]
			    })
			
			    $thumbSlider.slick({
			        slidesToShow: 5,
			        slidesToScroll: 1,
			        asNavFor: $mainSlider,
			        dots: $dots,
			        dotsClass:'lp-certificate-19__thumbs-dots-in',
			        appendDots:$this.find('.lp-certificate-19__thumbs-dots'),
			        infinite: $infinite,
			        speed: $speed,
			        autoplay: $autoplay,
				    autoplaySpeed: $autoplaySpeed,
			        centerMode: false,
			        arrows: $arrows,
			        touches: true,
			        prevArrow: $prevBtn,
			        nextArrow: $nextBtn,
			        focusOnSelect: true,
			        adaptiveHeight: false,
			        centerPadding: '6px',
			        mobileFirst: true,
			        swipeToSlide: false,
			        responsive: [
			            {
			                breakpoint: 600,
			                settings: {
			                    slidesToShow: 4,
			                    centerPadding: '20px'
			                }
			            },
			            {
			                breakpoint: 960,
			                settings: {
			                    slidesToShow: 4,
			                    arrows: true,
			                    centerPadding: '0px'
			                }
			            },
			            {
			                breakpoint: 1380,
			                settings: {
			                    slidesToShow: 5,
			                    arrows: true,
			                    centerPadding: '0px'
			                }
			            }
			        ]
			    });
			    
			    $(window).on('resize', function(){
		        	setTimeout(function(){
		        		var $dotItem = $this.find('.lp-certificate-19__thumbs-dots li button');
		        		if ($dotItem.hasClass('lp-certificate-19__thumbs-dot')) {
		        			
		        		}
		        		else {
					        $dotItem.attr('data-elem-type', 'card_container');
					        $dotItem.addClass('lp-certificate-19__thumbs-dot');
					        $dotItem.attr('data-lp-selector','.lp-certificate-19__thumbs-dot');
					        $dotItem.attr('data-has-event','1');
		        		}
		        	},500);
		        });
			});
	    }
	};
	
	lp_template.queue.lpPartners15 = function($self) {
		
		var $block = $self.hasClass('lp-partners-15') ? $self : $self.find('.lp-partners-15');
		
		$block.each(function(){
			if ($block.length) {
				var $this = $(this),
					$slider = $this.find('.lp-partners-15-items.js-owl-carousel'),
					autoplay = !!$slider.data('autoplay'),
					infinite = !!$slider.data('infinite'),
					nav = !!$slider.data('arrows'),
					dotsEach = !!$slider.data('dots-each'),
					dots = true,
					pause = $slider.data('pause') || 5000,
					speed = $slider.data('speed') || 250,
					fade = !!$slider.data('fade'),
					$parent = $slider.closest('[data-block-layout]'),
					dataResponse = $slider.data('response'),
					response = {},
					$dots = $this.find('.lp-dots-wrapper');
				
				
				try {
					let owl = $slider,
						windowWidth = $(window).width(),
						gridFormer = function(){
						let wrapper = '<div class=""lp-partners-15-items-grid""></div>',
							itemsCount = $this.find('.lp-partners-15-items>.lp-partners-15-item').length,
							sliceFunc = function(itemsInGrid){
								for (var i = 0; i < itemsCount/itemsInGrid; i++) {
									$this.find('.lp-partners-15-items>.lp-partners-15-item').slice(0, itemsInGrid).wrapAll(wrapper);
								}
								$this.find('.lp-partners-15-items-grid').each(function(){
									$(this).addClass('_'+$(this).children().length);
								});
							};
		
						if (windowWidth>=600) {
							sliceFunc(4);					
						}
					}
		
					let initOwl = function(){
						owl.owlCarousel({
							dots: true,
							nav: true,
							mouseDrag: false,
							margin: 16,
							autoplay : autoplay,
							loop : infinite,
							smartSpeed: speed,
							autoplayTimeout: pause,
							items: 1,
							onInitialized: function(e) {
								var $dotsCount = $this.find('.owl-dot').length;
								
								if (!$dots.length || $dotsCount < 2) {
									$dots.html('');
									return;
								};
								var $dotsHTML = '';
								
								for(var i = 0; i < $dotsCount; i++) {
									$dotsHTML += '<div class=""lp-dots-item js-dot-item"" data-elem-type=""container"" data-lp-selector="".lp-dots-item""></div>';
								} 
								
								if (!$dots.hasClass('_unchanged')) {
								
									$dots.html($dotsHTML);
								
								}
								
								$dots.find('.lp-dots-item').eq(0).addClass('active');
								
							},
							
							onResized: function(e) {
								if (!$dots.length || e.page.count < 2) {
									$dots.html('');
									return;
								}
								
								var $dotsHTML = '';
								for(var i = 0; i < e.page.count; i++) {
									$dotsHTML += '<div class=""lp-dots-item js-dot-item"" data-elem-type=""container"" data-lp-selector="".lp-dots-item""></div>';
								}
								
								if (!$dots.hasClass('_unchanged')) {
									$dots.html($dotsHTML);
								}
								$dots.find('.lp-dots-item').removeClass('active');
								$dots.find('.lp-dots-item').eq(e.page.index).addClass('active');
							},
							onTranslated: function(e) {
								$dots.find('.lp-dots-item').removeClass('active');
								$dots.find('.lp-dots-item').eq(e.page.index).addClass('active');
							}
						});
						
						$this.find('.js-next-slide').off();
						$this.find('.js-next-slide').on('click', function(e) {
							e.preventDefault();
							owl.trigger('next.owl.carousel');
						});
						$this.find('.js-prev-slide').off();
						$this.find('.js-prev-slide').on('click', function(e) {
							e.preventDefault();
							owl.trigger('prev.owl.carousel');
						});
						
						$this.find('.js-dot-item').on('click', function(e) {
							e.preventDefault();
							owl.trigger('to.owl.carousel', [$(this).index()]);
						});
						
					}
		
					let reInitOwl = function(){
						owl.trigger('destroy.owl.carousel');
						if (windowWidth<600) {
							$this.find('.lp-partners-15-item').unwrap();
						}				
						gridFormer();
						initOwl();
					}
		
					gridFormer();
					
			        initOwl();
		
		
					$(window).resize(function(){				
						let newWindowWidth = $(window).width();
						if (windowWidth<600){
							if (newWindowWidth>=600) {
								windowWidth = newWindowWidth;
								reInitOwl();
							}
						} else if (windowWidth>=600){
							if (newWindowWidth<600) {
								windowWidth = newWindowWidth;
								reInitOwl();
							}
						}
					});
		
				} catch(exception) {
					console.log(exception);
				}
			}
		});
	}
	
	lp_template.queue.lpStaff7 = function($self) {
		
		var $block = $self.hasClass('lp-staff-7') ? $self : $self.find('.lp-staff-7');
		
		if ($block.length) {
			$block.each(function(){
			
				var $this = $(this);
				
				$this.find('.lp-header-tab').not('._active').on('click', function(){
					$(this).addClass('_active').siblings().removeClass('_active');
		  			$this.find('.lp-staff-body-items').removeClass('_active').eq($(this).index()).addClass('_active');
				});
	
				$this.find('.lp-header-tab').first().addClass('_active');
				$this.find('.lp-staff-body-items').first().addClass('_active');
	
			    var widthSum = 0;
			    $this.find('.lp-header-tab').each(function () {
			        widthSum +=  +$(this).outerWidth(true)
			    })
	
			    if(widthSum > $('.lp-header-tabs').width()) {
			        baron({
			            root: '.lp-staff-7-scroll',
			            scroller: '.lp-staff-7-scroll__inner',
			            bar: '.lp-staff-7-scroll__bar',
			            scrollingCls: '_scrolling',
			            draggingCls: '_dragging',
			            direction: 'h',
	
			        })
			    }
			
			});
		}
	}
	
	lp_template.queue.lpForm29 = function($self) {
		var $block = $self.hasClass('lp-form-29') ? $self : $self.find('.lp-form-29');

		if ($block.length) {

			$block.each(function() {
				var $this = $(this);
		
				try {      
						setMinHeight();
						$(window).on('resize', function(){
						setMinHeight();        
					});      
				} catch(exception) {
					console.log(exception);
				}
				
				function setMinHeight() {
					if (window.matchMedia('(min-width: 960px)').matches) {
						var formHeight = $this.find('.lp-form-29__form').height() 
						+ parseInt($this.find('.lp-form-29__form').css('padding-top'))
						+ parseInt($this.find('.lp-form-29__form').css('padding-bottom')),
						minHeight = formHeight - 160;
				
						$this.find('.lp-form-29__top').css({
							minHeight : minHeight           
						});
						
						var topHeight = $this.find('.lp-form-29__top').height();
						
						if (topHeight > (formHeight + 40)) {
							$this.find('.lp-form-29__top').css({'margin-top' : '40px'});
						} else {
							$this.find('.lp-form-29__top').css({'margin-top' : ''});
						}
					} else {
						$this.find('.lp-form-29__top').css({
							minHeight : '',
							'margin-top' : ''          
						});
					}
				};
			});
		}		
	};
	
	lp_template.queue.lpFeatures29 = function($self) {
	    var $block = $self.find('.lp-features-29-item__percentage');
	    if ($block.length) {
	        function perc() {
		        $block.each(function(){
		            var $this = $(this),
		            	$parent = $this.closest('.lp-features-29-item'),
		            	$inner = $parent.find('.lp-features-29-item__field-inner'),
		            	$percent = Number.isNaN(parseInt($this.text())) ? 0 : parseInt($this.text()),
		            	$percent = $percent < 101 ? $percent : 100;
					
					$inner.css('width', $percent + '%');
					$this.text($percent + '%');
		        });
	        }
						    
			if (s3LP.is_cms) {
				setTimeout(function(){
					LpController.afterSave(function () {
						perc();
					});
				},1000);
			}
	    }
	}
	
	lp_template.queue.scrollTop = function($self) {
		var $block = $self.find('.scrollHide');
		if ($block.length) {
			var $this = $(this),
				$scrollBtn = $self.find('.js-19-elem');
			$(window).on('scroll', function(){
				var $scrollTop = $(this).scrollTop();
				if ($scrollTop > 500) {
					$scrollBtn.addClass('_show');
				}
				else {
					$scrollBtn.removeClass('_show');
				}
			});
		}
	}
	
	lp_template.queue.minHeight = function($self) {
		var $block = $self.find('.js-min-height'),
			func = function() {
				$block.each(function(){
					var $this = $(this),
						$title = $this.find('.js-item'),
						$border = $this.find('._title'),
						minWidth = $this.data('min-width') || 0,
						minHeight = $title.eq(0).height();
						
					$border.css({
						minHeight: 0
					});
					
					if ($(window).width() >= minWidth) {
						$title.each(function(){
							var thisHeight = $(this).height();
							
							if (minHeight > thisHeight) {
								minHeight = thisHeight;
							}
						});	
						
						$border.css({
							minHeight: minHeight
						});
					}
				});
			};
			
		$(window).on('resize', func);
		if (s3LP.is_cms) {
			setTimeout(function(){
				LpController.afterSave(function () {
				    func();
				});
			},1000);
		}
	}
	
	lp_template.queue.animatedAnchor = function($self) {
		var $block = $self;
		
		if ($("".js-19-elem"").length) {
			$block.find("".js-19-elem"").on('click touch', function(e){
				e.preventDefault();
				$('html, body').animate({
			        scrollTop: $(""body"").offset().top
			    }, 2000);
			});
		}
	}
	
	lp_template.queue.previewModeIsCms = function($self) {
		setTimeout(function(){
			if ($('body').hasClass('preview_mode')) {
				$('._is-cms').removeClass('_is-cms');
			}
		}, 2000);
	}
	
	
	lp_template.queue.fixedMenu = function($self) {
		var $block = $self.hasClass('js-fixed-menu') ? $self : $self.find('.js-fixed-menu');
		var $fixedElem = $block.find('._fixed-element');
		
		$block.data('isFixed', false);
		
		$fixedElem = $fixedElem.length ? $fixedElem : $block;
		
		$block.each(function(){
			var $this = $(this);
			
			$this.data('topPosition', $this.offset().top);
		});
		
		if ($block.length) {
			$win.on('scroll', function(e){
				$block.each(function(){
					var $this = $(this),
						isAfterScroll = !!$this.data('after-scroll'),
						$thisBurger = $this.find('.js-burger'),
						$fixedElem = $this.find('._fixed-element');
					
					$fixedElem = $fixedElem.length ? $fixedElem : $this;
					
					var position = $this.data('isFixed') ? $fixedElem[0].parentNode.getBoundingClientRect() : this.getBoundingClientRect();
					
					if ( !$this.data('isFixed') && ((!isAfterScroll && position.top <= 0) || (isAfterScroll && position.top <= 0 - $this.outerHeight()))) {
						if (!s3LP.is_cms) {	
							$fixedElem.wrap('<div class=""fixed-element-wrap""></div>');
							$(window).on('resize', function(){
									$fixedElem.closest('.fixed-element-wrap').height($fixedElem.height());
							});
							$win.trigger('resize');
							//$fixedElem.closest('.fixed-element-wrap').height($fixedElem.height());
							$fixedElem.addClass('_to-fix-menu');
							$this.data('isFixed', true);
							if ($thisBurger.hasClass('add_in-side')) $thisBurger.addClass('_in-side');
						}
					} else if ($this.data('isFixed') && (position.top > 0 || (isAfterScroll && $win.scrollTop() < $this.data('topPosition')))) {
						$fixedElem.removeClass('_to-fix-menu');
						$this.data('isFixed', false);
						$thisBurger.removeClass('_in-side');
						$win.trigger('resize');
						$fixedElem.unwrap();
					}
				});
			}).trigger('scroll');
		}
	};
	
	lp_template.queue.autoplayVideo = function($self) {
		var $block = $self.find('[data-autoplay-video=""1""]');
	
		if ($block.length) {
			
			$block.on('autoplayVideo', function(e, type, nodeName) {
				
				var video = this.querySelector(nodeName);
				if (nodeName === 'video') {
					if (type === 'play') {
						video.play();
					} else {
						video.pause();
					}					
				} else if (nodeName === 'iframe') {
					var video = $(video).data('youtube');
					if (type === 'play') {
						setTimeout(function() {
						video.playVideo();
						 }, 500);
						
					} else {
						video.pauseVideo();
					}
				}
			});
		}
	}
	
	window.lp_init = function($block) {
	
		var partners_2_img_h = $('.lp-partners_2__list-item').data('image-height');
		$('.lp-partners_2__list-item').css('height', partners_2_img_h);
		setTimeout(function() {
			$('.lp-partners_2__list-item').removeAttr('style');
		}, 2500);
	
		var $autoplayVideo = $doc.find('[data-autoplay-video=""1""]');
		var $maps = $block.find('.js-lp-simple-map');

	    if ($maps.length) {
	      $win.on('scroll', function() {
	        lp_template.checkMapInitialization($maps);
	      });
	    }
	    
		if ($autoplayVideo.length && !s3LP.is_cms) {
			$win.on('scroll', function() {
				lp_template.checkAutoplayVideo($autoplayVideo);
			});
		}
	
		Object.keys(lp_template.queue).forEach(function(func) {
			var thisFunction = lp_template.queue[func];
			if (typeof thisFunction == 'function') {
				thisFunction($block);
			}
		});
		
		$win.trigger('resize');
		
		setTimeout(function() {
			$win.trigger('resize');
		}, 700);
		
		
		$.getScript(""/g/s3/misc/animator/1.1.0/js/s3.animator.js"", function(){
			$('body').append('<link rel=""stylesheet"" type=""text/css"" href=""/g/s3/misc/animator/1.0.0/css/s3.animator.scss.css"">');
			s3Animator.once = true;
		});

		
		setTimeout(function() {
			$win.trigger('scroll');
		}, 2000);
		
	}

	window.onYouTubeIframeAPIReady = function() {
		$(function(){
			var listYoutube = $('.js-lp-video-youtube');
			
			listYoutube.each(function(){
				var $this = $(this),
					isFullFrame = $this.hasClass('_not-paused');
				
				var player = new YT.Player(this.id, {
					iv_load_policy: 3,
					modestbranding: 1,
					rel: 0,
					mute: isFullFrame ? 1 : 0,
					playsinline: 1,
					showinfo: isFullFrame ? 0 : 1,
					events: {
						'onStateChange': function(event) {
							if (event.data == YT.PlayerState.ENDED && isFullFrame) {
								event.target.playVideo();
							}
						}
					}
				});
	
				$this.data('youtube', player);
				
				$('.slick-slider').on('beforeChange', function(event, slick, currentSlide, nextSlide){
				});
			});
		});
	}
	
	function isElementInViewport(el) {
		var rect = el.getBoundingClientRect();
		return (
			rect.top <= window.innerHeight-200 &&
			rect.bottom >= 50
		);
	}

})();"
RT0aiuLz,+1 Money Every Click,LuaXe,Lua,Monday 22nd of May 2023 12:42:42 AM CDT,"function C() spawn(function () while getgenv().C do game:GetService(""ReplicatedStorage""):FindFirstChild(""events-shared/network@GlobalEvents"").placeBlock:FireServer() wait() end end) end
function R() spawn(function () while getgenv().R do local args = {[1] = 1}game:GetService(""ReplicatedStorage""):FindFirstChild(""functions-shared/network@GlobalFunctions""):FindFirstChild(""s:rebirth""):FireServer(unpack(args)) wait() end end) end
function E() spawn(function () while getgenv().E do local args = {[1] = 95}game:GetService(""ReplicatedStorage""):FindFirstChild(""functions-shared/network@GlobalFunctions""):FindFirstChild(""s:equipBestPets""):FireServer(unpack(args)) wait() end end) end
function H(E) spawn(function () while getgenv().H do local args = {[1] = 31,[2] = E}game:GetService(""ReplicatedStorage""):FindFirstChild(""functions-shared/network@GlobalFunctions""):FindFirstChild(""s:openEgg""):FireServer(unpack(args)) wait() end end) end

local library = loadstring(game:HttpGet(('https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/wall%20v3')))()

local w = library:CreateWindow(""+1 Money Every Click"")

local b = w:CreateFolder(""Main"")

b:Button(""TP To The Game"",function() game:GetService(""TeleportService""):Teleport(13230182363) end)

b:Button(""Remove Popups"",function()
game.Players.LocalPlayer.PlayerGui.Notifications.Box:Destroy()
end)

b:Toggle(""Inf. Height"",function(val)
getgenv().C = val
C()
end)

b:Toggle(""Equip"",function(val)
getgenv().E = val
E()
end)

b:Toggle(""Rebirth"",function(val)
getgenv().R = val
R()
end)

b:Toggle(""Hatch"",function(val)
getgenv().H = val
H(E)
end)

b:Dropdown(""Choose"",{""Grass Egg"",""Stone Egg"",""Cactus Egg"",""Sandstone Egg"",""Snowman Egg"",""Ice Egg"",""Warped Egg""},true,function(val)
E = val
end)

b:Label(""Made by X_LuaF#0705"",{TextSize = 21; TextColor = Color3.fromRGB(255,255,255); BgColor = Color3.fromRGB(38, 38, 38);})

local w = library:CreateWindow(""LocalPlayer"")

local b = w:CreateFolder(""LP"")

b:DestroyGui()

b:Button(""Discord"",function() setclipboard(""workink.co/2GQ/LTD"") end)
b:Button(""Full Version"",function() loadstring(game:HttpGet(""https://pastebin.com/raw/GphZf9Xe"", true))() end)
b:Button(""Rejoin"",function() loadstring(game:HttpGet(""https://pastebin.com/raw/mM7JBG5h"", true))() end)
b:Button(""Reset"",function() loadstring(game:HttpGet(""https://pastebin.com/raw/EEY6SATj"", true))() end)

b:Box(""Speed"",""number"",function(val) S = val end)
b:Box(""Jump"",""number"",function(val) J = val end)
b:Box(""Hip Height"",""number"",function(val) H = val end)
b:Box(""Gravity"",""number"",function(val) G = val end)
 
b:Toggle(""Speed"",function(bool) getgenv().Speed = bool Speed(S) end)
b:Toggle(""Jump"",function(bool) getgenv().Jump = bool Jump(J) end)
b:Toggle(""Hip Height"",function(bool) getgenv().Hip = bool Hip(H) end)
b:Toggle(""Gravity"",function(bool) getgenv().Grav = bool Grav(G) end)
 
b:Slider(""FOV (Default is 70)"",{min = 0;max = 120;precise = true;},function(val) game.workspace.CurrentCamera.FieldOfView = val end)

function TPCFrame(Player_CFrame) if game.Players.LocalPlayer.Character:FindFirstChild(""HumanoidRootPart"") then game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Player_CFrame.CFrame end end
function TPVector3(Player_Position) game.Players.LocalPlayer.Character.HumanoidRootPart.Position = Player_Position.Position end
function PHP(Player_HP) game.Players.LocalPlayer.Character.Humanoid.Health = Player_HP end

function Chat(Mes, Freq) spawn(function () while getgenv().Chat do local args = {[1] = Mes,[2] = ""All""} game:GetService(""ReplicatedStorage"").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(unpack(args)) wait(Freq) end end) end
function Speed(Nume) spawn(function () if getgenv().Speed then while getgenv().Speed do game:GetService(""Players"").LocalPlayer.Character.Humanoid.WalkSpeed = Nume wait() end elseif getgenv().Speed == false then game:GetService(""Players"").LocalPlayer.Character.Humanoid.WalkSpeed = 16 end end) end
function Jump(Nume) spawn(function () if getgenv().Jump then while getgenv().Jump do game:GetService(""Players"").LocalPlayer.Character.Humanoid.JumpPower = Nume wait() end elseif getgenv().Jump == false then game:GetService(""Players"").LocalPlayer.Character.Humanoid.JumpPower = 50 end end) end
function Hip(Nume) spawn(function () if getgenv().Hip then while getgenv().Hip do game:GetService(""Players"").LocalPlayer.Character.Humanoid.HipHeight = Nume wait() end elseif getgenv().Hip == false then game:GetService(""Players"").LocalPlayer.Character.Humanoid.HipHeight = 0.1 end end) end
function Grav(Nume) spawn(function () if getgenv().Grav then while getgenv().Grav do game:GetService(""Workspace"").Gravity = Nume wait() end elseif getgenv().Grav == false then game:GetService(""Workspace"").Gravity = 196.2 end end) end"
nsvVSqpj,Brackets,AmirVagapov,C#,Sunday 21st of May 2023 11:04:29 PM CDT,"using System;

    class Program {
        static void Main() {
            Console.WriteLine(""Enter text:"");
            string C = Console.ReadLine();
            int brackets = 0;
            foreach (char ch in C) {
                if (ch == '(') brackets++;
                else if (ch == ')') brackets--;
                if (brackets < 0) break;
            };
            string result = Convert.ToBoolean(brackets)? ""No"" : ""Yes"";
            Console.WriteLine(""Result: "" + result);
        }
    }"
HY8g3db9,Respuesta hola,Catador_de_totopos,JSON,Sunday 21st of May 2023 09:35:29 PM CDT,"""¡Hola $(user) gracias por pasarte al canal!"" ;
""¿Ya comiste? blanca9Ehh "" ;
""¿Ya comiste? ¿O quieres comerme? blanca9Ehh "" ;"
Ai8ZqbiZ,vuev-for bug,a_igin,JavaScript,Sunday 21st of May 2023 09:24:10 PM CDT,"    <div v-if=""is_visible"">
      <h3>Круговая зависимость</h3>
      <p>
        Вы попытались создать связь между объектами, которая вызвала бы круговую
        зависимость. Сейчас между элементами уже есть такая связь, только в
        обратную сторону:
      </p>
      <hr />
      <div v-for=""node in circular_error_data.nodes"">
      {{node}}
        <router-link
          :to=""{
            name: 'content_detail',
            params: { content_id: node.identity },
          }""
        >
          <h4>{{ node.title }}</h4>
        </router-link>
        <p v-if=""node.identity != last_node.identity"">
        <b-icon
          icon=""arrow-up""
          aria-hidden=""true""
        ></b-icon> входная тема
        </p>
      </div>"
KjwAbmHc,Untitled,ya2nk,PHP,Sunday 21st of May 2023 09:22:36 PM CDT,"<?php
                        $cari = @$_GET['cari'];
                        $batas = 10;
                        $halaman = isset($_GET['halaman'])?(int)$_GET['halaman'] : 1;
                        $halaman_awal = ($halaman>1) ? ($halaman * $batas) - $batas : 0;	
                 
                        $previous = $halaman - 1;
                        $next = $halaman + 1;
						$sql  = ""select * from urf2021 WHERE lower(prihal) LIKE '%"".strtolower($cari).""%'"";
                        $data = mysqli_query($koneksi,$sql);

				$jumlah_data = mysqli_num_rows($data);
				$total_halaman = ceil($jumlah_data / $batas);

                        $no = 1;
                        
      $query = mysqli_query($koneksi,"" $sql limit $halaman_awal, $batas"");
      $nomor = $halaman_awal+1;
      
                while($data=mysqli_fetch_array($query))
      {
        
          ?>"
S88qtzGG,cat.lua,DarkJMKnight,Lua,Sunday 21st of May 2023 08:49:04 PM CDT,"args = {...}
if not args[1] then
        print(""Usage: cat [file]"")
        return
end
local f
for i = 1, #args do
  f = fs.open(args[1], ""r"") or error(""Error while opening file!"")
  print(f.readAll())
  f.close()
end"
NNuDJcnx,Untitled,lazyflavor,Java,Sunday 21st of May 2023 08:24:45 PM CDT,"import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.Arrays;

public class Main {
    public static void main(String[] args) throws Exception {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int n = Integer.parseInt(br.readLine());
        int[] nums = new int[n];

        for (int i = 0; i < n; i++) {
            nums[i] = Integer.parseInt(br.readLine());
        }

        Arrays.sort(nums);

        int sum = 0;
        int i = 0;
        while (i < n && nums[i] < 1) {
            if (i + 1 < n && nums[i+1] <= 0) {
                sum += nums[i] * nums[i+1];
                i += 2;
            } else {
                sum += nums[i];
                i++;
            }
        }

        int j = n - 1;
        while (j >= i && nums[j] > 1) {
            if (j - 1 >= i && nums[j-1] > 1) {
                sum += nums[j] * nums[j-1];
                j -= 2;
            } else {
                sum += nums[j];
                j--;
            }
        }

        while (j >= i) {
            sum += nums[j];
            j--;
        }

        System.out.println(sum);
    }
}
"
aH1gcyKR,ebook.cpp,patrikey,C++,Sunday 21st of May 2023 08:10:34 PM CDT,"#include <iostream>
#include <vector>
#include <string>
#include <numeric>
#include <iomanip>

int main() {
	//структура для храниния пользователя и прочитанных страниц
	std::vector<int16_t> readers(1000001, 0);
	//readers.reserve(1000000);
	//структура для хранения кол-ва пользователей дочитавших до страницы n
	std::vector<int32_t> readers_count(1001, 0);
	//readers_count.reserve(1000);
	//
	int16_t count = 0;
	//считаем кол-во запросов
	int32_t queries_count;
	std::cin >> queries_count;
	//обработаем запросы
	for (int32_t query_number = 0; query_number < queries_count; ++query_number) {
		//считаем тип запроса
		std::string query_type;
		std::cin >> query_type;
		//считаем id читателя
		int32_t reader_id;
		std::cin >> reader_id;
		if (query_type == ""CHEER"") {
			if (readers[reader_id] == 0) {
				std::cout << 0 << std::endl;
			}
			else if (count == 1) {
				std::cout << 1 << std::endl;
			} else {
				auto page_number = readers[reader_id];
				auto count_to_page = std::reduce(readers_count.begin(), readers_count.begin() + page_number);
				double dolya = static_cast<double>(count_to_page) / (static_cast<double>(count) - 1);
				std::cout << std::setprecision(6) << dolya << std::endl;
			}
		}
		else if (query_type == ""READ"") {
			//считаем кол-во пролчитанных страниц
			int16_t pages_count;
			std::cin >> pages_count;
            if (pages_count == 0) {
                continue;
            }
			if (readers[reader_id] == 0) {
				++count;
			}
			else {
				readers_count[readers[reader_id]] -= 1;
			}
			//сохраним данные
			readers[reader_id] = pages_count;
			readers_count[pages_count] += 1;
		}
	}
}"
JqC2v2Zb,2023-05-21_stats.json,rdp_snitch,JSON,Sunday 21st of May 2023 07:15:09 PM CDT,"{
  ""ip"": {
    ""123.63.152.137"": 6461,
    ""120.27.12.65"": 28,
    ""20.169.241.254"": 8,
    ""162.241.158.17"": 25,
    ""157.7.69.146"": 5,
    ""120.55.14.18"": 8,
    ""87.251.75.145"": 4,
    ""194.165.16.10"": 2,
    ""31.43.185.32"": 5,
    ""193.227.49.10"": 2,
    ""121.41.5.167"": 9,
    ""45.135.201.65"": 5,
    ""162.142.125.14"": 1,
    ""139.162.70.187"": 10,
    ""91.240.118.11"": 4,
    ""121.4.147.80"": 8,
    ""87.251.75.120"": 2,
    ""176.113.115.140"": 6,
    ""173.239.213.32"": 1,
    ""98.143.255.25"": 2,
    ""172.222.216.239"": 1,
    ""167.94.138.127"": 1,
    ""61.48.23.122"": 1,
    ""139.177.186.166"": 1,
    ""205.210.31.201"": 3,
    ""193.29.13.31"": 3,
    ""194.165.16.73"": 2,
    ""45.140.17.16"": 3,
    ""87.251.75.64"": 1,
    ""128.1.34.58"": 1,
    ""45.119.83.28"": 2,
    ""106.116.169.71"": 1,
    ""185.170.144.3"": 1,
    ""87.251.64.110"": 2,
    ""31.43.185.3"": 1,
    ""194.165.16.78"": 2,
    ""167.248.133.52"": 1,
    ""198.235.24.185"": 3
  },
  ""asn"": {
    ""AS55410"": 6461,
    ""AS37963"": 45,
    ""AS8075"": 8,
    ""AS19871"": 25,
    ""AS7506"": 5,
    ""AS208091"": 7,
    ""AS48721"": 6,
    ""AS211736"": 6,
    ""AS2561"": 2,
    ""AS44486"": 5,
    ""AS398324"": 2,
    ""AS63949"": 11,
    ""AS57523"": 4,
    ""AS45090"": 8,
    ""AS57678"": 6,
    ""AS62240"": 1,
    ""AS3367"": 2,
    ""AS20115"": 1,
    ""AS4808"": 1,
    ""AS396982"": 6,
    ""AS42397"": 3,
    ""AS198953"": 3,
    ""AS21859"": 1,
    ""AS131386"": 2,
    ""AS4134"": 1,
    ""AS48080"": 3,
    ""AS398722"": 1
  },
  ""isp"": {
    ""VODAFONE-STATIC"": 6461,
    ""Addresses CNNIC"": 28,
    ""Microsoft Corporation"": 8,
    ""Unified Layer"": 25,
    ""GMO Internet, Inc"": 5,
    ""Hangzhou Alibaba Advertising Co"": 17,
    ""XHOST-INTERNET-SOLUTIONS"": 7,
    ""Flyservers S.A."": 6,
    ""FOP Dmytro Nedilskyi"": 6,
    ""Egyptian Universities Network"": 2,
    ""LIVINGBOTS"": 5,
    ""Censys, Inc."": 3,
    ""Akamai Technologies, Inc."": 11,
    ""Chang Way Technologies Co. Limited"": 4,
    ""China Internet Network Information Center"": 8,
    ""Cat Technologies Co. Limited"": 6,
    ""LogicWeb Inc."": 1,
    ""Xplornet Communications Inc."": 2,
    ""Charter Communications"": 1,
    ""China Unicom Beijing Province Network"": 1,
    ""Google LLC"": 6,
    ""Bunea TELECOM SRL"": 3,
    ""Proton66 OOO"": 3,
    ""Zenlayer Inc"": 1,
    ""Long Van System Solution"": 2,
    ""Chinanet"": 1,
    ""Dmitriy Panchenko"": 3
  },
  ""org"": {
    ""Unknown"": 6469,
    ""Aliyun Computing Co., LTD"": 45,
    ""Microsoft Azure Cloud (eastus)"": 8,
    ""WEBSITEWELCOME.COM"": 25,
    ""GMO Internet, Inc."": 5,
    ""Xhost Internet Solutions"": 9,
    ""Flyservers S.A"": 6,
    ""FOP Dmytro Nedilskyi"": 6,
    ""Egyptian Universities Network"": 2,
    ""Censys Inc"": 1,
    ""Linode, LLC"": 10,
    ""Chang Way Technologies Co. Limited"": 4,
    ""Tencent cloud computing (Beijing) Co., Ltd."": 8,
    ""Cat Technologies Co. Limited"": 6,
    ""PowerHost LLC"": 1,
    ""Xplornet Communications Inc"": 2,
    ""Spectrum"": 1,
    ""Censys, Inc"": 1,
    ""Linode"": 1,
    ""Palo Alto Networks, Inc"": 6,
    ""Bunea TELECOM SRL"": 3,
    ""Proton66 LLC"": 3,
    ""Zenlayer Inc"": 1,
    ""Chinanet HE"": 1,
    ""Xhostis"": 1,
    ""Censys, Inc."": 1
  },
  ""regionName"": {
    ""Karnataka"": 6461,
    ""Shandong"": 28,
    ""Virginia"": 8,
    ""Utah"": 25,
    ""Tokyo"": 15,
    ""Zhejiang"": 17,
    ""England"": 7,
    ""Kaunas"": 6,
    ""Kyiv City"": 6,
    ""Giza"": 2,
    ""Bremen"": 5,
    ""Michigan"": 3,
    ""Moscow"": 15,
    ""Shanghai"": 8,
    ""Georgia"": 1,
    ""New Brunswick"": 2,
    ""California"": 7,
    ""Beijing"": 1,
    ""Central Singapore"": 1,
    ""Timis"": 3,
    ""Hesse"": 1,
    ""Ho Chi Minh"": 2,
    ""Hebei"": 1,
    ""North Holland"": 1
  },
  ""country"": {
    ""India"": 6461,
    ""China"": 55,
    ""United States"": 44,
    ""Japan"": 15,
    ""United Kingdom"": 7,
    ""Lithuania"": 6,
    ""Ukraine"": 6,
    ""Egypt"": 2,
    ""Germany"": 6,
    ""Russia"": 15,
    ""Canada"": 2,
    ""Singapore"": 1,
    ""Romania"": 3,
    ""Vietnam"": 2,
    ""Netherlands"": 1
  },
  ""account"": {
    ""hello"": 6574,
    ""Administr"": 17,
    ""Test"": 7,
    ""(empty)"": 5,
    ""Domain"": 15,
    ""User"": 1,
    ""jCBjJuEFo"": 1,
    ""hrhKPj"": 1,
    ""tqYGhO"": 1,
    ""Administrator"": 1,
    ""bZASvIBDP"": 1,
    ""iksroe"": 1,
    ""FWeERa"": 1
  },
  ""keyboard"": {
    ""Unknown"": 6626
  },
  ""client_build"": {
    ""Unknown"": 6626
  },
  ""client_name"": {
    ""Unknown"": 6626
  },
  ""ip_type"": {
    ""Unknown"": 6518,
    ""hosting"": 104,
    ""proxy"": 4
  }
}"
M8GFfqjq,Untitled,jkonefal,C++,Sunday 21st of May 2023 06:50:04 PM CDT,"#include <bits/stdc++.h>
using namespace std;
using ll = long long;
pair<int, int> rep[1005][1005];
ll ini[1005][1005];
ll num;

pair <int, int> find(int x, int y) {
    if (rep[x][y].first == x && rep[x][y].second == y) return make_pair(x, y);
    rep[x][y] = find(rep[x][y].first, rep[x][y].second);
    return rep[x][y];
}

void uunion(int x1, int yjeden, int x2, int y2) {
    if (rep[x1][yjeden] == rep[x2][y2]) return;
    pair <int, int> p1 = find(x1, yjeden);
    pair <int, int> p2 = find(x2, y2);
    if (p1 == p2) return;
    rep[p1.first][p1.second] = p2;
    num--;
}

int main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    int n, m, t;
    map <ll, vector < pair <int, int>>> wart;
    ll mx = 0;
    cin >> n >> m;
    for (int i = 0; i < n; i++)
    {
        for (int j = 0; j < m; j++)
        {
            cin >> ini[i][j];
            rep[i][j] = make_pair(i, j);
            wart[ini[i][j]].push_back(make_pair(i, j));
            mx = max(ini[i][j], mx);
        }
    }

    cin >> t;
    vector <ll> tests(t);
    vector <ll> answ(t);
    num = 0;
    for (int i = 0; i < t; i++) cin >> tests[i];
    ll cur = mx;
    int g = t - 1;

    for (auto it = wart.rbegin(); it != wart.rend(); ++it)
    {
        while (g >= 0 && it->first <= tests[g]) answ[g] = num, g--;
        ll a = tests[g];

        for (int k = 0; k < it->second.size(); k++)
        {
            int i = it->second[k].first;
            int j = it->second[k].second;
            num++;

            if (j > 0)
            {
                if (ini[i][j - 1] > a) uunion(i, j, i, j - 1);
            }
            if (i > 0)
            {
                if (ini[i - 1][j] > a) uunion(i, j, i - 1, j);
            }
            if (j < m - 1)
            {
                if (ini[i][j + 1] > a) uunion(i, j, i, j + 1);
            }
            if (i < n - 1)
            {
                if (ini[i + 1][j] > a) uunion(i, j, i + 1, j);
            }
        }
    }

    while (g >= 0) answ[g] = num, g--;

    for (int i = 0; i < t; i++)
    {
        cout << answ[i] << "" "";
    }
}"
yPazyW0E,Untitled,WhiteCog,YAML,Sunday 21st of May 2023 05:51:03 PM CDT,"demoMode: true
demoText: |
  Welcome to the Corona Editor!

  This is a demo text showcasing the different styles you can apply using the editor.

  Feel free to customize this text as you explore the features of the editor.

demoStyles:
  - bold
  - italic
  - underline
"
wbG5vCWx,Hello,Samuel123123,Lua,Sunday 21st of May 2023 05:20:08 PM CDT,"--[=[
 d888b  db    db d888888b      .d888b.      db      db    db  .d8b.  
88' Y8b 88    88   `88'        VP  `8D      88      88    88 d8' `8b 
88      88    88    88            odD'      88      88    88 88ooo88 
88  ooo 88    88    88          .88'        88      88    88 88~~~88 
88. ~8~ 88b  d88   .88.        j88.         88booo. 88b  d88 88   88 
 Y888P  ~Y8888P' Y888888P      888888D      Y88888P ~Y8888P' YP   YP  CONVERTER
]=]

-- Instances: 6 | Scripts: 0 | Modules: 0
local G2L = {};

-- StarterGui.UpdateLog
G2L[""1""] = Instance.new(""ScreenGui"", game:GetService(""Players"").LocalPlayer:WaitForChild(""PlayerGui""));
G2L[""1""][""Name""] = [[UpdateLog]];

-- StarterGui.UpdateLog.Frame
G2L[""2""] = Instance.new(""ScrollingFrame"", G2L[""1""]);
G2L[""2""][""BorderSizePixel""] = 0;
G2L[""2""][""ScrollBarImageTransparency""] = 1;
G2L[""2""][""BackgroundColor3""] = Color3.fromRGB(91, 91, 91);
G2L[""2""][""VerticalScrollBarInset""] = Enum.ScrollBarInset.Always;
G2L[""2""][""BackgroundTransparency""] = 0.15000000596046448;
G2L[""2""][""Size""] = UDim2.new(0, 300, 0, 396);
G2L[""2""][""Selectable""] = false;
G2L[""2""][""Position""] = UDim2.new(0.015043546445667744, 0, 0.14003294706344604, 0);
G2L[""2""][""Name""] = [[Frame]];
G2L[""2""][""SelectionGroup""] = false;

-- StarterGui.UpdateLog.Frame.TextLabel
G2L[""3""] = Instance.new(""TextLabel"", G2L[""2""]);
G2L[""3""][""TextWrapped""] = true;
G2L[""3""][""TextScaled""] = true;
G2L[""3""][""BackgroundColor3""] = Color3.fromRGB(181, 181, 181);
G2L[""3""][""FontFace""] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L[""3""][""TextSize""] = 14;
G2L[""3""][""TextColor3""] = Color3.fromRGB(0, 0, 0);
G2L[""3""][""Size""] = UDim2.new(0, 250, 0, 50);
G2L[""3""][""Text""] = [[5/21/2023: v0.0.1 Just realesed]];
G2L[""3""][""BackgroundTransparency""] = 0.5;
G2L[""3""][""Position""] = UDim2.new(0.08666666597127914, 0, 0.016474464908242226, 0);

-- StarterGui.UpdateLog.Frame.TextLabel.UICorner
G2L[""4""] = Instance.new(""UICorner"", G2L[""3""]);
G2L[""4""][""CornerRadius""] = UDim.new(0, 12);

-- StarterGui.UpdateLog.Frame.TextButton
G2L[""5""] = Instance.new(""TextButton"", G2L[""2""]);
G2L[""5""][""TextWrapped""] = true;
G2L[""5""][""TextStrokeColor3""] = Color3.fromRGB(190, 0, 4);
G2L[""5""][""TextScaled""] = true;
G2L[""5""][""BackgroundColor3""] = Color3.fromRGB(255, 255, 255);
G2L[""5""][""TextSize""] = 14;
G2L[""5""][""FontFace""] = Font.new([[rbxasset://fonts/families/PressStart2P.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L[""5""][""TextColor3""] = Color3.fromRGB(190, 0, 4);
G2L[""5""][""Size""] = UDim2.new(0, 68, 0, 19);
G2L[""5""][""Text""] = [[Close]];

-- StarterGui.UpdateLog.Frame.TextButton.Script
G2L[""6""] = Instance.new(""Script"", G2L[""5""]);



return G2L[""1""], require;"
rkqEbsEc,bios.installer,gameplays1120,Lua,Sunday 21st of May 2023 04:04:18 PM CDT,"--- this is the installer that will install the bios 
-- note this is not a full bios but a search and run program design to lock out the OS.pullEnvent until the correct pin has been put in or the timer has finessed
-- this self extractor program is design to run with my own custom OS still in development and with the basic Craft OS
-- this program to be installed is a basic Craft OS program and is used to load up my OS but is not needed to load the custom OS but very helpful to get into debug mode in the custom OS
-- the program looks for 'OS.boot' file 
        local Argue = {...}
    local LUA_isRealitive = false
    local Path = Argue[1] or Usr and Usr.CurrentUsr() or """"
    if LUA_isRealitive
    then
        if not fs.exists(Path) 
        then
            error((""%s not found""):format(Path),2)
        end
        if not fs.isDir(Path)
        then
            error((""%s is not directory""):format(Path),2)
        end
    end
    local programs = ""{\
  {\
    func = \""\\\
\\\
\\\
                      000000000\\\
                    000       00\\\
                   00          0\\\
                   0           0\\\
                   0\\\
                   00    00000\\\
                    00        0\\\
                     00      00\\\
                      00000000\\\
\"",\
    Path = \""boot/Image.nfp\"",\
  },\
  {\
    func = \""{\\\
  [ \\\""boot.Load\\\"" ] = \\\""OS/install/OS.boot\\\"",\\\
}\"",\
    Path = \""boot/boot.settings\"",\
  },\
  {\
    func = \""local expect = require(\\\""cc.expect\\\"").expect\\\
local oldPullEvent = os.pullEvent\\\
local function toggleTerminate(Lbool)\\\
    expect(1,Lbool,\\\""boolean\\\"")\\\
   if Lbool then\\\
        os.pullEvent = os.pullEventRaw\\\
   else\\\
        os.pullEvent = oldPullEvent\\\
   end\\\
end\\\
toggleTerminate(true)\\\
local switch,debug = false,false\\\
local nativeTerm = term\\\
local os = os\\\
local print = print\\\
local printError = printError\\\
local run = true\\\
local pretty = require(\\\""cc.pretty\\\"").pretty_print\\\
local function prompt(message)\\\
    expect(1,message,\\\""string\\\"",\\\""nil\\\"")\\\
    local x,_ = term.getCursorPos()\\\
    print(message)\\\
    local _,y2 = term.getCursorPos()\\\
    term.setCursorPos(x,y2)\\\
    return tostring(read())\\\
end\\\
local function BasicMenu(Table,mess,optionsColor,TextColor,BackgroundColor)\\\
    expect(1,Table,\\\""table\\\"")\\\
    expect(2,mess,\\\""string\\\"")\\\
    expect(3,optionsColor,\\\""number\\\"",\\\""nil\\\"")\\\
    expect(4,TextColor,\\\""number\\\"",\\\""nil\\\"")\\\
    expect(5,BackgroundColor,\\\""number\\\"",\\\""nil\\\"")\\\
    optionsColor = optionsColor or colors.white\\\
    TextColor = TextColor or colors.white\\\
    BackgroundColor = BackgroundColor or colors.green\\\
    local Sx = term.getSize()\\\
    local originalBack = term.getBackgroundColor()\\\
    local originalText = term.getTextColor()\\\
    local run = true\\\
    local sel = 1\\\
    while run do\\\
        term.setBackgroundColor(BackgroundColor)\\\
        term.clear()\\\
        term.setCursorPos(math.ceil(( Sx / 2) - (mess:len() / 2)),1)\\\
        print(mess)\\\
        for _=0,Sx do\\\
            term.write(\\\""=\\\"")\\\
        end\\\
        local _,Current = term.getCursorPos()\\\
            term.setCursorPos(0,Current+1)\\\
        for i,v in pairs(Table) do\\\
            local _,y2 = term.getCursorPos()\\\
            if sel == i\\\
            then\\\
                local stri = (\\\""[%s]:%s\\\""):format(i,v)\\\
                term.setCursorPos(math.ceil((Sx / 2) - (stri:len() / 2)),y2)\\\
                term.setTextColor(optionsColor)\\\
                print(stri)\\\
                term.setTextColor(TextColor)\\\
            else\\\
                local stri = (\\\""%s:%s\\\""):format(i,v)\\\
                term.setCursorPos(math.ceil((Sx / 2) - (stri:len() / 2)),y2)\\\
                term.setTextColor(optionsColor)\\\
                print(stri)\\\
                term.setTextColor(TextColor)\\\
            end\\\
        end\\\
        local event,key = os.pullEvent(\\\""key\\\"")\\\
        if key == keys.up and  sel>1\\\
        then\\\
            sel = sel-1\\\
        elseif key == keys.down and sel<#Table\\\
        then\\\
            sel = sel+1\\\
        elseif key == keys.enter\\\
        then\\\
            term.setBackgroundColor(originalBack)\\\
            term.setTextColor(originalText)\\\
            term.clear()\\\
            term.setCursorPos(1,1)\\\
            return sel\\\
        end\\\
    end\\\
end\\\
\\\
if fs.exists(\\\""boot/boot.settings\\\"")\\\
then\\\
    settings.load(\\\""boot/boot.settings\\\"")\\\
end\\\
local pin = settings.get(\\\""boot.pin\\\"")\\\
local Load = settings.get(\\\""boot.Load\\\"")\\\
local setMode = false\\\
if not pin\\\
then\\\
    parallel.waitForAny(\\\
        function ()\\\
            if BasicMenu({\\\""yes\\\"",\\\""no\\\""},\\\""set up pin?\\\"") == 1\\\
            then\\\
                setMode = true\\\
            end\\\
        end,\\\
        function ()\\\
            sleep(2)\\\
            term.setBackgroundColor(colors.black)\\\
            term.setTextColor(colors.white)\\\
            term.clear()\\\
            term.setCursorPos(1,1)\\\
        end\\\
    )\\\
end\\\
if setMode\\\
then\\\
    pin = tostring(prompt(\\\""set pin\\\""))\\\
    settings.define(\\\""boot.pin\\\"",{description = \\\""stores the current bios pin\\\"", default = nil, type = \\\""string\\\""})\\\
    settings.set(\\\""boot.pin\\\"",pin)\\\
    term.clear()\\\
end\\\
parallel.waitForAny(\\\
    function ()\\\
        term.clear()\\\
        term.setCursorPos(1,1)\\\
        print(\\\""hit f4 to select boot mode or hit enter\\\"")\\\
        term.setCursorPos(1,3)\\\
        if fs.exists(\\\""boot/Image.nfp\\\"")\\\
        then\\\
            paintutils.drawImage(paintutils.loadImage(\\\""boot/Image.nfp\\\""),1,1)\\\
            term.setBackgroundColor(colors.black)\\\
        end\\\
        while run do\\\
            local _,num = os.pullEvent(\\\""key\\\"")\\\
            if num == keys.f4\\\
            then\\\
                    switch = true\\\
                    run = false\\\
            elseif num == keys.enter\\\
            then\\\
                term.clear()\\\
                term.setCursorPos(1,1)\\\
                run = false\\\
            end\\\
        end\\\
    end,\\\
    function ()\\\
        sleep(3)\\\
        term.clear()\\\
        term.setCursorPos(1,1)\\\
    end\\\
)\\\
local craftOS = false\\\
if switch or Load == nil or not fs.exists(Load)\\\
then\\\
    if pin and Load\\\
    then\\\
        term.clear()\\\
        term.setCursorPos(1,1)\\\
        if tostring(prompt(\\\""pin?\\\"")) ~= pin\\\
        then\\\
            printError(\\\""wrong pin :  press any key  to continue\\\"")\\\
            os.pullEvent(\\\""key\\\"")\\\
            os.reboot()\\\
        end\\\
    end\\\
    craftOS = (BasicMenu({\\\""no\\\"",\\\""yes\\\""},\\\""load basic CraftOS?\\\"") == 2)\\\
    if craftOS\\\
    then\\\
        -- restores the os.version text \\\
        term.setTextColor(colors.yellow)\\\
        print(os.version())\\\
        return\\\
    end \\\
    local Table = fs.list(\\\""\\\"")\\\
    for i,v in pairs(Table) do\\\
        if v == \\\""rom\\\""\\\
        then\\\
            table.remove(Table,i)\\\
        end\\\
    end\\\
    local list = {}\\\
    for _,v in pairs(Table) do\\\
        if fs.isDir(v) then\\\
            local list2 = fs.find(fs.combine(v,\\\""*\\\""))\\\
            for _,b in pairs(list2) do\\\
                if fs.isDir(b)\\\
                then\\\
                    table.insert(Table,b)\\\
                else \\\
                    table.insert(list,b)\\\
                end\\\
            end\\\
        else\\\
            table.insert(list,v)\\\
        end\\\
    end\\\
    local OS = {}\\\
    for i,v in pairs(list) do\\\
        if  string.find(v,\\\""OS.boot\\\"")\\\
        then\\\
            table.insert(OS,v)\\\
        end\\\
    end\\\
    if #OS >1\\\
    then\\\
        local i = BasicMenu(OS,\\\""choose OS\\\"")\\\
        \\\
        Load = OS[i]\\\
    else\\\
        Load = OS[1] or error(\\\""no bootloader found\\\"",0)\\\
    end\\\
    settings.set(\\\""boot.Load\\\"",Load)\\\
    debug = (BasicMenu({\\\""no\\\"",\\\""yes\\\""},(\\\""put %s into debug mode\\\""):format(fs.getName(Load))) == 2)\\\
end\\\
local Func,err = loadfile(Load,\\\""bt\\\"",_ENV)\\\
if not Func then\\\
    settings.unset(\\\""boot.Load\\\"")\\\
    nativeTerm.redirect(nativeTerm.native())\\\
    nativeTerm.setBackgroundColor(colors.blue)\\\
    nativeTerm.setTextColor(colors.white)\\\
    nativeTerm.clear()\\\
    nativeTerm.setCursorPos(1,1)\\\
    local x,_ = term.getSize()\\\
    for _ = 0 ,x do\\\
        nativeTerm.write(\\\""=\\\"")\\\
    end\\\
    nativeTerm.setTextColor(colors.red)\\\
    printError((\\\""%s : reseted Load settings\\\""):format(err))\\\
    local _,y = term.getCursorPos()\\\
    nativeTerm.setCursorPos(1,y)\\\
    nativeTerm.setTextColor(colors.white)\\\
    for _ = 0 ,x do\\\
        nativeTerm.write(\\\""=\\\"")\\\
    end\\\
    os.pullEvent(\\\""char\\\"")\\\
    os.reboot()\\\
    error(\\\""\\\"",0)\\\
end\\\
settings.save(\\\""boot/boot.settings\\\"")\\\
toggleTerminate(false)\\\
local bool,err = pcall(Func,debug)\\\
toggleTerminate(true)\\\
if not bool\\\
then\\\
    _G.term = nativeTerm\\\
    _G.print = print\\\
    nativeTerm.redirect(nativeTerm.native())\\\
    nativeTerm.setBackgroundColor(colors.blue)\\\
    nativeTerm.setTextColor(colors.white)\\\
    nativeTerm.clear()\\\
    nativeTerm.setCursorPos(1,1)\\\
    local x,y = term.getSize()\\\
    for _ = 0 ,x do\\\
        nativeTerm.write(\\\""=\\\"")\\\
    end\\\
    nativeTerm.setTextColor(colors.red)\\\
    printError(err)\\\
    local _,y = term.getCursorPos()\\\
    nativeTerm.setCursorPos(1,y)\\\
    nativeTerm.setTextColor(colors.white)\\\
    for _ = 0 ,x do\\\
        nativeTerm.write(\\\""=\\\"")\\\
    end\\\
    os.pullEvent(\\\""char\\\"")\\\
    os.reboot()\\\
end\\\
\\\
\"",\
    Path = \""startup.lua\"",\
  },\
}""
    local Dirs = {
  {
    Path = ""boot"",
  },
}
    programs = textutils.unserialise(programs)
    for _,v in pairs(Dirs) do
        if LUA_isRealitive
        then
            fs.makeDir(fs.combine(Path,v.Path))
        else
            fs.makeDir(v.Path)
        end
    end
    for _,v in pairs(programs) do
        local file,mess
        if LUA_isRealitive 
        then
            file,mess = fs.open(fs.combine(Path,v.Path),""w"")
        else
            file,mess = fs.open(v.Path,""w"")
        end
        if not file
        then
            error(mess,0)
        end
        file.write(v.func)
        file.close()
    end
    if string.find(os.version(),""GameOS"")
    then
        for _,v in pairs(programs) do
            if v.reg.ReadOnly
            then
                fs.setReadOnly(v.Path,true)
            end
            if v.reg.hidden
            then
                fs.setHidden(v.Path,true)
            end
        end
        for _,v in pairs(Dirs) do
            if v.reg.ReadOnly
            then
                fs.setReadOnly(v.Path,true)
            end
            if v.reg.hidden
            then
                fs.setHidden(v.Path,true)
            end
        end
    end
    
"
uuQ4QKqP,Vulkan хождение по терниям....,Redee,Winbatch,Sunday 21st of May 2023 02:41:38 PM CDT,"d:\Progs\rvk\x64\Debug>rvk.exe
Stage 1 - check Instance environment

available instance extensions:
VK_KHR_surface
VK_KHR_win32_surface
VK_KHR_external_memory_capabilities
VK_KHR_external_semaphore_capabilities
VK_KHR_external_fence_capabilities
VK_KHR_get_physical_device_properties2
VK_KHR_get_surface_capabilities2
VK_KHR_device_group_creation
VK_EXT_swapchain_colorspace
VK_EXT_debug_report
VK_EXT_debug_utils
VK_KHR_portability_enumeration

search 2 extensions:
found - VK_KHR_surface
found - VK_KHR_win32_surface
---
all extensions found

available instance layers:
VK_LAYER_RENDERDOC_Capture
VK_LAYER_bandicam_helper
VK_LAYER_OBS_HOOK
VK_LAYER_RTSS
VK_LAYER_LUNARG_api_dump
VK_LAYER_LUNARG_gfxreconstruct
VK_LAYER_KHRONOS_synchronization2
VK_LAYER_KHRONOS_validation
VK_LAYER_LUNARG_monitor
VK_LAYER_LUNARG_screenshot
VK_LAYER_KHRONOS_profiles

search 1 layer:
found - VK_LAYER_KHRONOS_validation
---
all layers found

Stage 2 - create Instance

created

Stage 3 - detect GPU's

amount: 1

Stage 4 - get GPU's data

gpu 1 data:
- Intel(R) HD Graphics 530
- integrated
- geometry shader enable

Stage 5 - get best GPU index

gpu 1 - Intel(R) HD Graphics 530 - scores:
- score - gpu type = 101
- score - geometry shader = 1
- score total = 102

best gpu is 1 - Intel(R) HD Graphics 530 - with score = 102

Stage 6 - detect queue families

queue families count: 1

queue count of queue family 1: 1

Stage 7 - info about all queue families can draw or not

1 can draw

Stage 8 - get first queue family index, which can draw

0

Stage 9 - check physical device extensions support

available physical device extensions:
VK_EXT_full_screen_exclusive
VK_KHR_swapchain
VK_KHR_external_memory
VK_KHR_external_memory_win32
VK_EXT_external_memory_host
VK_KHR_external_semaphore
VK_KHR_external_semaphore_win32
VK_KHR_external_fence
VK_KHR_external_fence_win32
VK_KHR_timeline_semaphore
VK_KHR_win32_keyed_mutex
VK_KHR_get_memory_requirements2
VK_KHR_bind_memory2
VK_KHR_dedicated_allocation
VK_KHR_sampler_mirror_clamp_to_edge
VK_KHR_maintenance1
VK_KHR_maintenance2
VK_KHR_maintenance3
VK_KHR_maintenance4
VK_KHR_synchronization2
VK_KHR_shader_draw_parameters
VK_KHR_push_descriptor
VK_KHR_descriptor_update_template
VK_KHR_multiview
VK_KHR_shader_float16_int8
VK_KHR_shader_float_controls
VK_KHR_16bit_storage
VK_KHR_8bit_storage
VK_EXT_shader_subgroup_ballot
VK_EXT_shader_subgroup_vote
VK_KHR_storage_buffer_storage_class
VK_KHR_variable_pointers
VK_KHR_relaxed_block_layout
VK_EXT_sampler_filter_minmax
VK_KHR_device_group
VK_EXT_ycbcr_2plane_444_formats
VK_EXT_4444_formats
VK_EXT_post_depth_coverage
VK_EXT_shader_viewport_index_layer
VK_EXT_shader_stencil_export
VK_EXT_conservative_rasterization
VK_EXT_sample_locations
VK_KHR_draw_indirect_count
VK_EXT_multi_draw
VK_KHR_image_format_list
VK_EXT_vertex_attribute_divisor
VK_EXT_descriptor_indexing
VK_EXT_inline_uniform_block
VK_KHR_create_renderpass2
VK_KHR_dynamic_rendering
VK_KHR_swapchain_mutable_format
VK_KHR_depth_stencil_resolve
VK_KHR_driver_properties
VK_KHR_vulkan_memory_model
VK_EXT_conditional_rendering
VK_EXT_hdr_metadata
VK_EXT_depth_clip_enable
VK_EXT_depth_clip_control
VK_EXT_scalar_block_layout
VK_KHR_imageless_framebuffer
VK_KHR_buffer_device_address
VK_EXT_buffer_device_address
VK_EXT_host_query_reset
VK_KHR_performance_query
VK_NV_device_diagnostic_checkpoints
VK_KHR_separate_depth_stencil_layouts
VK_KHR_shader_clock
VK_KHR_spirv_1_4
VK_KHR_uniform_buffer_standard_layout
VK_EXT_separate_stencil_usage
VK_EXT_fragment_shader_interlock
VK_EXT_index_type_uint8
VK_EXT_primitive_topology_list_restart
VK_KHR_shader_subgroup_extended_types
VK_EXT_line_rasterization
VK_EXT_memory_budget
VK_EXT_memory_priority
VK_EXT_texel_buffer_alignment
VK_INTEL_performance_query
VK_EXT_subgroup_size_control
VK_EXT_shader_demote_to_helper_invocation
VK_EXT_pipeline_creation_feedback
VK_EXT_pipeline_creation_cache_control
VK_KHR_pipeline_executable_properties
VK_EXT_transform_feedback
VK_EXT_provoking_vertex
VK_EXT_extended_dynamic_state
VK_EXT_extended_dynamic_state2
VK_EXT_vertex_input_dynamic_state
VK_EXT_custom_border_color
VK_EXT_robustness2
VK_EXT_image_robustness
VK_EXT_calibrated_timestamps
VK_KHR_shader_integer_dot_product
VK_KHR_shader_subgroup_uniform_control_flow
VK_KHR_shader_terminate_invocation
VK_KHR_workgroup_memory_explicit_layout
VK_EXT_shader_atomic_float
VK_KHR_copy_commands2
VK_KHR_shader_non_semantic_info
VK_KHR_zero_initialize_workgroup_memory
VK_EXT_shader_atomic_float2
VK_EXT_global_priority
VK_EXT_global_priority_query
VK_KHR_global_priority
VK_KHR_format_feature_flags2
VK_EXT_color_write_enable
VK_EXT_private_data
VK_EXT_image_2d_view_of_3d

search 1 extension:
found - VK_KHR_swapchain
---
all extensions found

Stage 10 - create logical device

created

Stage 11 - create window surface

created

Stage 12 - check surface support presentation

ok

Stage 13 - get physical device surface - capabilities

ok

Stage 14 - detect surface extent

width: 800
height: 600

Stage 15 - get physical device surface - formats

VK_FORMAT_B8G8R8A8_UNORM
VK_COLOR_SPACE_SRGB_NONLINEAR_KHR

VK_FORMAT_B8G8R8A8_SRGB
VK_COLOR_SPACE_SRGB_NONLINEAR_KHR

VK_FORMAT_R8G8B8A8_UNORM
VK_COLOR_SPACE_SRGB_NONLINEAR_KHR

VK_FORMAT_R8G8B8A8_SRGB
VK_COLOR_SPACE_SRGB_NONLINEAR_KHR

Stage 16 - check needed surface format

VK_FORMAT_R8G8B8A8_SRGB
VK_COLOR_SPACE_SRGB_NONLINEAR_KHR

found

Stage 17 - get physical device surface - present modes

VK_PRESENT_MODE_IMMEDIATE_KHR
VK_PRESENT_MODE_FIFO_KHR

Stage 18 - check needed present mode

VK_PRESENT_MODE_FIFO_KHR

found

Stage 19 - create swap chain

ok

Stage 20 - get swap chain images

count: 3

ok

Stage 21 - create swap chain image views

ok

Stage 22 - load shaders

Read file: shader1_vertex_spir_v

File size: 1504 bytes

Read file - ok

Read file: shader2_fragment_spir_v

File size: 572 bytes

Read file - ok

ok

Stage 23 - create shader modules

Create shader module: shader1_vertex_spir_v

Create shader module - ok

Create shader module: shader2_fragment_spir_v

Create shader module - ok

ok

Stage 24 - shaders code free

Shader code free: shader1_vertex_spir_v

Shader code free - ok

Shader code free: shader2_fragment_spir_v

Shader code free - ok

ok"
SC0urQNZ,Live Currency Convertor,dx4iot,Python,Sunday 21st of May 2023 02:33:25 PM CDT,"import requests
def convert_currency(amount, from_currency, to_currency):
    base_url = f""https://api.exchangerate-api.com/v4/latest/{from_currency}""
    response = requests.get(base_url)
    data = response.json()
    exchange_rate = data['rates'][to_currency]
    converted_amount = amount * exchange_rate
    return converted_amount

amount = int(input(""Enter the amount: ""))
from_currency = input(""From: "")
to_currency = input(""To: "")

converted_amount = convert_currency(amount, from_currency, to_currency)
print(f""{amount} {from_currency} = {converted_amount} {to_currency}"")"
iHgdm8sm,Untitled,Sininerebane,C#,Sunday 21st of May 2023 02:07:56 PM CDT,"namespace ForCycle
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Console.OutputEncoding = Encoding.UTF8;
            int initialNumber = 5;
            int incrementNumber= 7;
            int maxNumber = 96;

            for (int i = initialNumber; i <= maxNumber; i += incrementNumber)   
            {
                Console.WriteLine(i);
            }

            Console.ReadKey();
        }
    }
}"
T7R1BQhY,Untitled,Sininerebane,C#,Sunday 21st of May 2023 02:01:56 PM CDT,"namespace ForCycle
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Console.OutputEncoding = Encoding.UTF8;
            int initial = 5;
            int step = 7;
            int max = 96;

            for (int i = initial; i <= max; i += step)   
            {
                Console.WriteLine(i);
            }

            Console.ReadKey();
        }
    }
}"
