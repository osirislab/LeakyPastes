id,title,username,language,date,content
dB3A4BRL,BTC Wallet Credentials have been reset,sendinorma_45,GetText,Sunday 2nd of July 2023 12:59:27 AM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please disregard this message.
Your new login credentials will be 
Cocumazzo5i:kudXwV on 45.9.148.244
You can connect via SSH or use an online client such as ssheasy.com.
Regards"
fx24R727,expandRoundKeys,Anupznk,Python,Sunday 2nd of July 2023 12:43:36 AM CDT,"def expandRoundKeys(key):
    """"""
    https://en.m.wikipedia.org/wiki/AES_key_schedule?fbclid=IwAR2MKdPC8cO1BeqKlkaheZYKKlUf_QgO7-t1SDPD5etsE8_RvhrLnQnWYAA
    """"""

    genRoundConsts()

    key_size = len(key)
    # print('key_size', key_size)
    num_keys = util.getNumOfRounds() + 1  # this is R

    # Initialize round keys with the original key
    round_keys = [key[i:i + 4] for i in range(0, key_size, 4)]

    """"""
    N as the length of the key in 32-bit words: 
    4 words for AES-128, 6 words for AES-192, 
    and 8 words for AES-256

    R as the number of rounds: 
    10 rounds for AES-128, 12 rounds for AES-192, 
    14 rounds for AES-256
    """"""
    # print('round const hex', aes_extension.roundConstsHex)

    N = key_size // 4
    for i in range(N, 4 * num_keys):
        # i >= N
        prevWord = round_keys[i - 1].copy()
        if i % N == 0:
            prevWord = rot_word(prevWord)
            prevWord = sub_word(prevWord)
            prevWord[0] ^= roundConstsHex[i // N]

        elif i >= N and N > 6 and i % N == 4:  # todo check
            prevWord = sub_word(prevWord)   # SubWord(W[i-1])

        # common for all cases
        # todo
        prevWord = [round_keys[i - N][j] ^ prevWord[j] for j in range(4)]
        round_keys.append(prevWord)
        # print('round keys', round_keys)

    allRoundKeys = []
    for i in range(0, len(round_keys), 4):  # range(start, stop, step) 4 words per round
        currRoundKey = []
        for j in range(4):
            currRoundKey.append(round_keys[i + j])
        allRoundKeys.append(np.transpose(currRoundKey))

    flattened_list = [element for sublist in allRoundKeys for element in sublist]
    # print(flattened_list[2])
    global expandedRoundKeys
    expandedRoundKeys = flattened_list
"
RFPJ64zv,"Arm Wrestle Simulator | Unlimited Cash, Kunkle, And Other | OP | 2023",BloxScript_Hub,Lua,Sunday 2nd of July 2023 12:21:40 AM CDT,"loadstring(game:HttpGet(""https://raw.githubusercontent.com/limaspeedy/limaspeedy/main/HubLDS""))()

-- Credits by Sr. Lds"
eeShF0wp,sql_interview_moving_sum,saiRo199,SQL,Sunday 2nd of July 2023 12:17:34 AM CDT,"-- moving sum (cumulative sum using analytical function)

select 
employee_id,
salary,sum(salary) over(partition by department_id order by employee_id) as cume_sum,
department_id
from hr.employees;"
hHF2ZMAn,sql_interview_quater_wise_employee_joined,saiRo199,SQL,Saturday 1st of July 2023 11:44:36 PM CDT,"-- employees with his/her joining quater 

select employee_id,hire_date,case
when extract(month from hire_date) in (1,2,3) then 'q1'
when extract(month from hire_date) in (4,5,6) then 'q2'
when extract(month from hire_date) in (7,8,9) then 'q3'
when extract(month from hire_date) in (10,11,12) then 'q4'
end as AdmissionQuater
from hr.employees;

-- no of employes jloin in each quater
with temptable(empid,quater) as (
    select employee_id,case
    when extract(month from hire_date) in (1,2,3) then 'q1'
    when extract(month from hire_date) in (4,5,6) then 'q2'
    when extract(month from hire_date) in (7,8,9) then 'q3'
    when extract(month from hire_date) in (10,11,12) then 'q4'
    end as quater
    from hr.employees
)
select quater,count(empid) from temptable
group by quater;
"
RHmN3LPn,sql_interview_duplicate_nonduplicate_finding,saiRo199,SQL,Saturday 1st of July 2023 11:24:20 PM CDT,"create table tab1 (id int,ename varchar(200),age int);

insert into tab1 values(1,'name1',20);
insert into tab1 values(2,'name2',24);
insert into tab1 values(3,'name3',18);
insert into tab1 values(4,'name4',29);
insert into tab1 values(5,'name5',27);
insert into tab1 values(1,'name1',20);
insert into tab1 values(5,'name5',27);
insert into tab1 values(5,'name5',27);
insert into tab1 values(2,'name2',24);
insert into tab1 values(1,'name1',20);


select * from tab1;

-- finding unique rows from all duplicate data
select * from (
    select id,ename,age,row_number() over(partition by id,ename,age order by id) as row_num
    from tab1
) where row_num=1

-- finding unique rows from duplicate table that appeared only one time in source table
select * from tab1
group by id,ename,age
having count(*)=1

-- finding duplicate rows from duplicate table that appeared multiple times in source table
select distinct id,ename,age from (
    select id,ename,age,row_number() over(partition by id,ename,age order by id) as row_num
    from tab1
) where row_num > 1 ;

select * from tab1
group by id,ename,age
having count(*) <> 1;"
WxNs1yft,CC:Tweaked Simple Mobfarm Sorter,timconspicuous,Lua,Saturday 1st of July 2023 09:52:50 PM CDT,"local input  = peripheral.wrap(""left"")
local trash  = peripheral.wrap(""top"")
local output = peripheral.wrap(""right"")

while true do
	for i = 1,input.size() do
		if input.getItemDetail(i) then
			if input.getItemDetail(i).nbt ~= nil or input.getItemDetail(i).durability ~= nil then
				input.pushItems(peripheral.getName(trash),i,64)
			else
				input.pushItems(peripheral.getName(output),i,64)
			end
		end
	end
	os.sleep(10)
end"
QJqYwv9q,Minecraft book text formatter (will be moved to github.com/TangentFoxy later),TangentFox,Lua,Saturday 1st of July 2023 09:47:13 PM CDT,"character_width_dots = { -- all characters are currently 1 to 6 dots wide
  ""!',.:;i|"",
  ""`l"",
  "" \""()*I[]t{}"",
  ""<>fk"",
  ""AaBbCcDdEeFGgHhJjKLMmNnOoPpQqRrSsTUuVvWwXxYyZz1234567890#$Â£%^&_-+=\\?/"",
  ""@~"",
}
character_spacing_width_dots = 1
default_character_width = 5

compatible = {
  max_dots_per_line: 114,
  max_lines_per_page: 14,
  max_characters_per_page: 798,
}
bedrock = {
  max_characters_per_book: 12800,
  max_pages_per_book: 50,
}
java = {
  max_characters_per_book: 79800,
  max_pages_per_book: 100,
}



copy = (...) ->
  output = {}
  for i = 1, select ""#"", ...
    for key, value in pairs select i, ...
      output[key] = value
  return output

-- rebuild character_width_dots into a quicker/easier form
character = {}
character.default = default_character_width
character[""\n""] = -character_spacing_width_dots
for i = 1, #character_width_dots
  line = character_width_dots[i]
  for j = 1, #line
    character[line\sub j, j] = i



input = """"
lines = {}
for line in io.lines ""input.txt""
  table.insert lines, line\gsub(""\t"", ""   "")
input = table.concat lines, ""\n""



limits = copy compatible, bedrock

-- lengths start at -1 to account for first extra dot
lines = {}
current_line_text = """"
current_line_length = -character_spacing_width_dots
next_line_text = """"
next_line_length = -character_spacing_width_dots
whitespace_encountered = false

while #input > 0
  current_character = input\sub 1, 1
  current_character_dots = (character[current_character] or character.default) + character_spacing_width_dots
  if current_character == "" ""
    whitespace_encountered = true

  current_line_text ..= current_character
  current_line_length += current_character_dots
  input = input\sub 2

  if current_character == ""\n""
    -- table.insert lines, current_line_text\sub(1, #current_line_text - 1) .. ""\\n""
    table.insert lines, current_line_text
    current_line_text = next_line_text
    current_line_length = next_line_length
    next_line_text = """"
    next_line_length = -character_spacing_width_dots

    whitespace_encountered = false
    continue

  if current_line_length > limits.max_dots_per_line
    while "" "" != current_line_text\sub #current_line_text
      current_character = current_line_text\sub #current_line_text
      current_character_dots = (character[current_character] or character.default) + character_spacing_width_dots

      next_line_text = current_character .. next_line_text
      next_line_length += current_character_dots
      current_line_text = current_line_text\sub 1, #current_line_text - 1
      current_line_length -= current_character_dots

      unless whitespace_encountered
        -- print ""Broke a huge line: #{current_line_text}""
        break

    table.insert lines, current_line_text
    current_line_text = next_line_text
    current_line_length = next_line_length
    next_line_text = """"
    next_line_length = -character_spacing_width_dots

    whitespace_encountered = false
    continue

if #current_line_text > 0
  table.insert lines, current_line_text



page_number = 1
output = {
  string.rep(""-"", 40) .. "" PAGE #{page_number}""
}
current_line = """"
for i = 1, #lines
  line = lines[i]
  current_line ..= line
  if ""\n"" == line\sub #line
    table.insert output, current_line
    current_line = """"
  -- table.insert output, line
  if i % limits.max_lines_per_page == 0
    table.insert output, current_line\sub(1, #current_line - 1)
    if i < #lines
      current_line = """"
      page_number += 1
      table.insert output, string.rep(""-"", 40) .. "" PAGE #{page_number}""

if #current_line > 0
  table.insert output, current_line

-- for line in *output
--   print line
-- print table.concat output
file = io.open ""output.txt"", ""w""
file\write table.concat output, ""\n""
file\close!
"
DRWXbQsG,Untitled,Falexom,Python,Saturday 1st of July 2023 09:18:11 PM CDT,"### base
import random


class Pokemon:
    def __init__(self, hp, defense, special_defense):
        self.hp = hp
        self.defense = defense
        self.special_defense = special_defense


class PhysicalAttack(Pokemon):
    def __init__(self, damage, hp, defense,  special_defense):
        super().__init__(hp,  defense, special_defense)
        self.damage = damage

    def attack(self):
        if self.defense > 50:
            self.damage = random.randint(10, 30)
            self.hp -= self.damage
        else:
            self.damage = random.randint(40, 50)
            self.hp -= self.damage


class Status(Pokemon):
    def __init__(self, status, hp,  defense,  special_defense):
        super().__init__(hp,  defense,  special_defense)
        self.status = status

    def status(self):
        return self.hp


class SpecialAttack(Pokemon):
    def __init__(self, damage, hp, defense,  special_defense):
        super().__init__(hp,  defense,  special_defense)
        self.damage = damage

    def attack(self):
        if self.special_defense > 50:
            self.damage = random.randint(25, 30)
            self.hp -= self.damage
        else:
            self.damage = random.randint(70, 80)
            self.hp -= self.damage


class Upgrade(Pokemon):
    def __init__(self, hp, defense, special_defense):
        super().__init__(hp, defense, special_defense)

    def upgrade(self):
        self.hp += 100

### battle
import time

from pokemons import *
import random


class Battle:
    def attack(self, attacker, pokemon):
        PhysicalAttack.attack(pokemon)
        print(f'{attacker.name} attacks {pokemon.name}! Pokemons hp {pokemon.hp}!')

    def special_attack(self, attacker, pokemon):
        SpecialAttack.attack(pokemon)
        print(f'{attacker.name} attacks by special attack {pokemon.name}!  Pokemons hp {pokemon.hp}!')

    def status(self, pokemon1, pokemon2):
        hp1 = Status.status(pokemon1)
        hp2 = Status.status(pokemon2)
        print(f'{pokemon1.name} is {hp1}, {pokemon2.name} is {hp2}')

    def upgrade(self, pokemon):
        Upgrade.upgrade(pokemon)
        print(f'{pokemon.name} has an upgrade!')


b = Battle()
battle_list = [b.attack, b.special_attack]
dragonite = Dragonite('Dragonite', 300, 30, 20)
mismagius = Mismagius('Mismagius', 250, 60, 50)

flag = 1
first_player_count = 0
second_player_count = 0

while True:
    if dragonite.hp <= 0 or mismagius.hp <= 0:
        break

    if first_player_count >= 20:
        b.upgrade(dragonite)
        first_player_count = 0
    if second_player_count >= 20:
        b.upgrade(mismagius)
        second_player_count = 0

    if flag == 1:
        attack = random.choice(battle_list)
        if attack == b.attack:
            b.attack(dragonite, mismagius)
            first_player_count += random.randint(1, 10)
            flag = 2

        if attack == b.special_attack:
            b.attack(dragonite, mismagius)
            first_player_count += random.randint(1, 10)
            flag = 2

    if flag == 2:
        attack = random.choice(battle_list)
        if attack == b.attack:
            b.attack(mismagius, dragonite)
            second_player_count += random.randint(1, 10)
            flag = 1
        if attack == b.special_attack:
            b.attack(mismagius, dragonite)
            second_player_count += random.randint(1, 10)
            flag = 1

    b.status(dragonite, mismagius)
    time.sleep(1)

if mismagius.hp <= 0:
    print('Dragonite won!')

if dragonite.hp <= 0:
    print('Misamagius won!')

### pokemons
from base import *


class Dragonite(Pokemon):
    def __init__(self, name, hp, defense,  special_defense):
        super().__init__(hp,  defense,  special_defense)
        self.name = name


class Mismagius(Pokemon):
    def __init__(self, name, hp, defense, special_defense):
        super().__init__(hp, defense, special_defense)
        self.name = name

"
u9kQ7k8x,Untitled,Falexom,Python,Saturday 1st of July 2023 09:07:59 PM CDT,"class Stack:
    def __init__(self, stack):
        self.__stack = stack

    def push(self, value):
        self.__stack.append(value)

    def pop(self):
        self.__stack.pop()

    def clear(self):
        for element in range(len(self.__stack)):
            self.__stack.pop()

    def view(self):
        print(self.__stack)


s = Stack([1])
s.push(5)
s.push(3)
s.push(4)
s.push(8)
s.push(9)
s.view()
s.pop()
s.pop()
s.view()
s.clear()
s.view()"
2U4Tg8td,Untitled,phpface,CSS,Saturday 1st of July 2023 08:34:32 PM CDT,"#preloader .spinner-border {
    color: green!important;
}"
Nr5rfKpX,Estoque e Vendas,LightProgrammer000,Python,Saturday 1st of July 2023 08:29:37 PM CDT,"""""""
# Programa: ExercÃ­cio 6.17
""""""

# Dicionario
estoque = {
    ""tomate"": [1000, 2.30],
    ""alface"": [500, 0.45],
    ""batata"": [2001, 1.20],
    ""feijao"": [100, 1.50]
}

# Variavel de controle do total de vendas
total = 0

while True:

    # Menu (entrada de dados)
    print(f""""""\n{""=-="" * 10} MENU {""=-="" * 10}"""""")
    print(""# [1] Insercao de produtos no estoque"")
    print(""# [2] Vendagem de produtos"")
    print(""# [3] Atualizacao do estoque e vendas"")
    print(""# [4] Encerrar programa"")
    opc = int(input(""# Opc: ""))

    if opc == 1:

        while True:
                print(""\n* Inserindo produtos"")
                merc = input(""# Mercadoria: "").lower()
                qtd_merc = int(input(""# Quantidade: ""))
                val_merc = float(input(""# Preco: ""))

                # Estocando mercadorias no dicionario
                estoque[merc] = [qtd_merc, val_merc]

                # Controle de menu
                ins_prod = int(input(""# Deseja inserir outro produto no estoque: \n[1] Sim \n[2] Nao \nOpc: ""))

                if ins_prod == 2:

                    # Mensagem
                    print(""# Estoque atualizado"")

                    # Repeticao:
                    for i, j in estoque.items():
                        print(f""- Produto: {i} | Quantidade: {j[0]} | Preco: R$ {j[1]}"")
                    break

                else:
                    continue

    elif opc == 2:

        # Lista controle para opercao de 'desempacotamento'
        vendas = []

        # Apresentacao
        print(""\n# Vendendo Mercadoria"")

        # Entrada de dados
        merc = input(""# Mercadoria: "")

        # Decisao: Procurando produto no estoque
        if merc in estoque:
            vendas.append(merc)

            qtd_vend = int(input(""# Quantidade vendida: ""))

            # Protecao: Valor que excede o estoque
            if qtd_vend <= estoque[merc][0]:
                vendas.append(qtd_vend)

                # Desempacotamento
                prod, qtd = vendas

                # Calculos do valor
                total += estoque[merc][1] * qtd

                # Abatimento no estoque
                estoque[prod][0] -= qtd

                # Mensagem
                print(f""# Valor da venda do '{prod}': {qtd * estoque[prod][1]}"")
                print(f""# Quantidade no estoque do prodruto '{prod}': {estoque[prod][0]}"")

            else:
                print(f""# Valor invalido"")

        else:
            print(""# Produto inexistente"")

    # Analisar estoque
    elif opc == 3:

        # Repeticao: Apresentacao dos itens da lista
        for i, j in estoque.items():
            print(f""- Produto: {i} | Quantidade: {j[0]:0.2f} | Preco: R$ {j[1]:.2f}"")

        print(f""# Total das vendas: R$ {total:.2f}"")

    # Saida do programa
    elif opc == 4:
        break

    else:
        print(""# Codigo Invalido"")"
quqvdqWb,Typechart resistance/immunity lookup tables,CancerFairy,C,Saturday 1st of July 2023 08:21:41 PM CDT,"static const u32 sBugResists[] =
{
    BIT_TYPE_FAIRY, BIT_TYPE_FIGHTING, BIT_TYPE_FIRE, BIT_TYPE_FLYING, BIT_TYPE_GHOST, BIT_TYPE_POISON, BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sBugDoubleResists[] =
{
    BIT_TYPE_FAIRY | BIT_TYPE_FIGHTING, BIT_TYPE_FAIRY | BIT_TYPE_FIRE, BIT_TYPE_FAIRY | BIT_TYPE_FLYING, BIT_TYPE_FAIRY | BIT_TYPE_GHOST, BIT_TYPE_FAIRY | BIT_TYPE_POISON, BIT_TYPE_FAIRY | BIT_TYPE_STEEL, BIT_TYPE_FIGHTING | BIT_TYPE_FIRE, BIT_TYPE_FIGHTING | BIT_TYPE_FLYING, BIT_TYPE_FIGHTING | BIT_TYPE_GHOST, BIT_TYPE_FIGHTING | BIT_TYPE_POISON, BIT_TYPE_FIGHTING | BIT_TYPE_STEEL, BIT_TYPE_FIRE | BIT_TYPE_FLYING, BIT_TYPE_FIRE | BIT_TYPE_GHOST, BIT_TYPE_FIRE | BIT_TYPE_POISON, BIT_TYPE_FIRE | BIT_TYPE_STEEL, BIT_TYPE_FLYING | BIT_TYPE_GHOST, BIT_TYPE_FLYING | BIT_TYPE_POISON, BIT_TYPE_FLYING | BIT_TYPE_STEEL, BIT_TYPE_GHOST | BIT_TYPE_POISON, BIT_TYPE_GHOST | BIT_TYPE_STEEL, BIT_TYPE_POISON | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sDarkResists[] =
{
    BIT_TYPE_DARK, BIT_TYPE_FAIRY, BIT_TYPE_FIGHTING, BIT_TYPE_NONE
};

static const u32 sDarkDoubleResists[] =
{
    BIT_TYPE_DARK | BIT_TYPE_FAIRY, BIT_TYPE_DARK | BIT_TYPE_FIGHTING, BIT_TYPE_FAIRY | BIT_TYPE_FIGHTING, BIT_TYPE_NONE
};

static const u32 sDragonResists[] =
{
    BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sDragonImmunities[] =
{
    BIT_TYPE_FAIRY, BIT_TYPE_NONE
};

static const u32 sElectricResists[] =
{
    BIT_TYPE_DRAGON, BIT_TYPE_ELECTRIC, BIT_TYPE_GRASS, BIT_TYPE_NONE
};

static const u32 sElectricDoubleResists[] =
{
    BIT_TYPE_DRAGON | BIT_TYPE_ELECTRIC, BIT_TYPE_DRAGON | BIT_TYPE_GRASS, BIT_TYPE_ELECTRIC | BIT_TYPE_GRASS, BIT_TYPE_NONE
};

static const u32 sElectricImmunities[] =
{
    BIT_TYPE_GROUND, BIT_TYPE_NONE
};

static const u32 sFairyResists[] =
{
    BIT_TYPE_FIRE, BIT_TYPE_POISON, BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sFairyDoubleResists[] =
{
    BIT_TYPE_FIRE | BIT_TYPE_POISON, BIT_TYPE_FIRE | BIT_TYPE_STEEL, BIT_TYPE_POISON | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sFightingResists[] =
{
    BIT_TYPE_BUG, BIT_TYPE_FAIRY, BIT_TYPE_FLYING, BIT_TYPE_POISON, BIT_TYPE_PSYCHIC, BIT_TYPE_NONE
};

static const u32 sFightingDoubleResists[] =
{
    BIT_TYPE_BUG | BIT_TYPE_FAIRY, BIT_TYPE_BUG | BIT_TYPE_FLYING, BIT_TYPE_BUG | BIT_TYPE_POISON, BIT_TYPE_BUG | BIT_TYPE_PSYCHIC, BIT_TYPE_FAIRY | BIT_TYPE_FLYING, BIT_TYPE_FAIRY | BIT_TYPE_POISON, BIT_TYPE_FAIRY | BIT_TYPE_PSYCHIC, BIT_TYPE_FLYING | BIT_TYPE_POISON, BIT_TYPE_FLYING | BIT_TYPE_PSYCHIC, BIT_TYPE_POISON | BIT_TYPE_PSYCHIC, BIT_TYPE_NONE
};

static const u32 sFightingImmunities[] =
{
    BIT_TYPE_GHOST, BIT_TYPE_NONE
};

static const u32 sFireResists[] =
{
    BIT_TYPE_DRAGON, BIT_TYPE_FIRE, BIT_TYPE_ROCK, BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sFireDoubleResists[] =
{
    BIT_TYPE_DRAGON | BIT_TYPE_FIRE, BIT_TYPE_DRAGON | BIT_TYPE_ROCK, BIT_TYPE_DRAGON | BIT_TYPE_WATER, BIT_TYPE_FIRE | BIT_TYPE_ROCK, BIT_TYPE_FIRE | BIT_TYPE_WATER, BIT_TYPE_ROCK | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sFlyingResists[] =
{
    BIT_TYPE_ELECTRIC, BIT_TYPE_ROCK, BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sFlyingDoubleResists[] =
{
    BIT_TYPE_ELECTRIC | BIT_TYPE_ROCK, BIT_TYPE_ELECTRIC | BIT_TYPE_STEEL, BIT_TYPE_ROCK | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sGhostResists[] =
{
    BIT_TYPE_DARK, BIT_TYPE_NONE
};

static const u32 sGhostImmunities[] =
{
    BIT_TYPE_NORMAL, BIT_TYPE_NONE
};

static const u32 sGrassResists[] =
{
    BIT_TYPE_BUG, BIT_TYPE_DRAGON, BIT_TYPE_FIRE, BIT_TYPE_FLYING, BIT_TYPE_GRASS, BIT_TYPE_POISON, BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sGrassDoubleResists[] =
{
    BIT_TYPE_BUG | BIT_TYPE_DRAGON, BIT_TYPE_BUG | BIT_TYPE_FIRE, BIT_TYPE_BUG | BIT_TYPE_FLYING, BIT_TYPE_BUG | BIT_TYPE_GRASS, BIT_TYPE_BUG | BIT_TYPE_POISON, BIT_TYPE_BUG | BIT_TYPE_STEEL, BIT_TYPE_DRAGON | BIT_TYPE_FIRE, BIT_TYPE_DRAGON | BIT_TYPE_FLYING, BIT_TYPE_DRAGON | BIT_TYPE_GRASS, BIT_TYPE_DRAGON | BIT_TYPE_POISON, BIT_TYPE_DRAGON | BIT_TYPE_STEEL, BIT_TYPE_FIRE | BIT_TYPE_FLYING, BIT_TYPE_FIRE | BIT_TYPE_GRASS, BIT_TYPE_FIRE | BIT_TYPE_POISON, BIT_TYPE_FIRE | BIT_TYPE_STEEL, BIT_TYPE_FLYING | BIT_TYPE_GRASS, BIT_TYPE_FLYING | BIT_TYPE_POISON, BIT_TYPE_FLYING | BIT_TYPE_STEEL, BIT_TYPE_GRASS | BIT_TYPE_POISON, BIT_TYPE_GRASS | BIT_TYPE_STEEL, BIT_TYPE_POISON | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sGroundResists[] =
{
    BIT_TYPE_BUG, BIT_TYPE_GRASS, BIT_TYPE_NONE
};

static const u32 sGroundDoubleResists[] =
{
    BIT_TYPE_BUG | BIT_TYPE_GRASS, BIT_TYPE_NONE
};

static const u32 sGroundImmunities[] =
{
    BIT_TYPE_FLYING, BIT_TYPE_NONE
};

static const u32 sIceResists[] =
{
    BIT_TYPE_FIRE, BIT_TYPE_ICE, BIT_TYPE_STEEL, BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sIceDoubleResists[] =
{
    BIT_TYPE_FIRE | BIT_TYPE_ICE, BIT_TYPE_FIRE | BIT_TYPE_STEEL, BIT_TYPE_FIRE | BIT_TYPE_WATER, BIT_TYPE_ICE | BIT_TYPE_STEEL, BIT_TYPE_ICE | BIT_TYPE_WATER, BIT_TYPE_STEEL | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sNormalResists[] =
{
    BIT_TYPE_ROCK, BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sNormalDoubleResists[] =
{
    BIT_TYPE_ROCK | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sNormalImmunities[] =
{
    BIT_TYPE_GHOST, BIT_TYPE_NONE
};

static const u32 sPoisonResists[] =
{
    BIT_TYPE_GHOST, BIT_TYPE_GROUND, BIT_TYPE_POISON, BIT_TYPE_ROCK, BIT_TYPE_NONE
};

static const u32 sPoisonDoubleResists[] =
{
    BIT_TYPE_GHOST | BIT_TYPE_GROUND, BIT_TYPE_GHOST | BIT_TYPE_POISON, BIT_TYPE_GHOST | BIT_TYPE_ROCK, BIT_TYPE_GROUND | BIT_TYPE_POISON, BIT_TYPE_GROUND | BIT_TYPE_ROCK, BIT_TYPE_POISON | BIT_TYPE_ROCK, BIT_TYPE_NONE
};

static const u32 sPoisonImmunities[] =
{
    BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sPsychicResists[] =
{
    BIT_TYPE_PSYCHIC, BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sPsychicDoubleResists[] =
{
    BIT_TYPE_PSYCHIC | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sPsychicImmunities[] =
{
    BIT_TYPE_DARK, BIT_TYPE_NONE
};

static const u32 sRockResists[] =
{
    BIT_TYPE_FIGHTING, BIT_TYPE_GROUND, BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sRockDoubleResists[] =
{
    BIT_TYPE_FIGHTING | BIT_TYPE_GROUND, BIT_TYPE_FIGHTING | BIT_TYPE_STEEL, BIT_TYPE_GROUND | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sSteelResists[] =
{
    BIT_TYPE_ELECTRIC, BIT_TYPE_FIRE, BIT_TYPE_STEEL, BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sSteelDoubleResists[] =
{
    BIT_TYPE_ELECTRIC | BIT_TYPE_FIRE, BIT_TYPE_ELECTRIC | BIT_TYPE_STEEL, BIT_TYPE_ELECTRIC | BIT_TYPE_WATER, BIT_TYPE_FIRE | BIT_TYPE_STEEL, BIT_TYPE_FIRE | BIT_TYPE_WATER, BIT_TYPE_STEEL | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sWaterResists[] =
{
    BIT_TYPE_DRAGON, BIT_TYPE_GRASS, BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sWaterDoubleResists[] =
{
    BIT_TYPE_DRAGON | BIT_TYPE_GRASS, BIT_TYPE_DRAGON | BIT_TYPE_WATER, BIT_TYPE_GRASS | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sBugDarkResists[] =
{
    BIT_TYPE_FAIRY, BIT_TYPE_FIGHTING, BIT_TYPE_FAIRY | BIT_TYPE_FIRE, BIT_TYPE_FIGHTING | BIT_TYPE_FIRE, BIT_TYPE_FAIRY | BIT_TYPE_FLYING, BIT_TYPE_FIGHTING | BIT_TYPE_FLYING, BIT_TYPE_FAIRY | BIT_TYPE_POISON, BIT_TYPE_FIGHTING | BIT_TYPE_POISON, BIT_TYPE_FAIRY | BIT_TYPE_STEEL, BIT_TYPE_FIGHTING | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sBugDarkDoubleResists[] =
{
    BIT_TYPE_FAIRY | BIT_TYPE_FIGHTING, BIT_TYPE_NONE
};

static const u32 sBugDragonResists[] =
{
    BIT_TYPE_FAIRY | BIT_TYPE_STEEL, BIT_TYPE_FIGHTING | BIT_TYPE_STEEL, BIT_TYPE_FIRE | BIT_TYPE_STEEL, BIT_TYPE_FLYING | BIT_TYPE_STEEL, BIT_TYPE_GHOST | BIT_TYPE_STEEL, BIT_TYPE_POISON | BIT_TYPE_STEEL, BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sBugElectricResists[] =
{
    BIT_TYPE_DRAGON | BIT_TYPE_FAIRY, BIT_TYPE_ELECTRIC | BIT_TYPE_FAIRY, BIT_TYPE_DRAGON | BIT_TYPE_FIGHTING, BIT_TYPE_ELECTRIC | BIT_TYPE_FIGHTING, BIT_TYPE_DRAGON | BIT_TYPE_FIRE, BIT_TYPE_ELECTRIC | BIT_TYPE_FIRE, BIT_TYPE_DRAGON | BIT_TYPE_GHOST, BIT_TYPE_ELECTRIC | BIT_TYPE_GHOST, BIT_TYPE_DRAGON | BIT_TYPE_POISON, BIT_TYPE_ELECTRIC | BIT_TYPE_POISON, BIT_TYPE_DRAGON | BIT_TYPE_STEEL, BIT_TYPE_ELECTRIC | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sBugFairyResists[] =
{
    BIT_TYPE_FAIRY | BIT_TYPE_FIRE, BIT_TYPE_FAIRY | BIT_TYPE_POISON, BIT_TYPE_FAIRY | BIT_TYPE_STEEL, BIT_TYPE_FIRE, BIT_TYPE_FIRE | BIT_TYPE_FLYING, BIT_TYPE_FLYING | BIT_TYPE_POISON, BIT_TYPE_FLYING | BIT_TYPE_STEEL, BIT_TYPE_FIRE | BIT_TYPE_GHOST, BIT_TYPE_GHOST | BIT_TYPE_POISON, BIT_TYPE_GHOST | BIT_TYPE_STEEL, BIT_TYPE_POISON, BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sBugFairyDoubleResists[] =
{
    BIT_TYPE_FIRE | BIT_TYPE_POISON, BIT_TYPE_FIRE | BIT_TYPE_STEEL, BIT_TYPE_POISON | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sBugFightingResists[] =
{
    BIT_TYPE_FAIRY, BIT_TYPE_BUG | BIT_TYPE_FIGHTING, BIT_TYPE_FAIRY | BIT_TYPE_FIGHTING, BIT_TYPE_FIGHTING | BIT_TYPE_FLYING, BIT_TYPE_FIGHTING | BIT_TYPE_POISON, BIT_TYPE_BUG | BIT_TYPE_FIRE, BIT_TYPE_FAIRY | BIT_TYPE_FIRE, BIT_TYPE_FIRE | BIT_TYPE_FLYING, BIT_TYPE_FIRE | BIT_TYPE_POISON, BIT_TYPE_FLYING, BIT_TYPE_BUG | BIT_TYPE_GHOST, BIT_TYPE_FAIRY | BIT_TYPE_GHOST, BIT_TYPE_FLYING | BIT_TYPE_GHOST, BIT_TYPE_GHOST | BIT_TYPE_POISON, BIT_TYPE_POISON, BIT_TYPE_NONE
};

static const u32 sBugFightingDoubleResists[] =
{
    BIT_TYPE_FAIRY | BIT_TYPE_FLYING, BIT_TYPE_FAIRY | BIT_TYPE_POISON, BIT_TYPE_FLYING | BIT_TYPE_POISON, BIT_TYPE_NONE
};

static const u32 sBugFireResists[] =
{
    BIT_TYPE_DRAGON | BIT_TYPE_FAIRY, BIT_TYPE_FAIRY | BIT_TYPE_FIRE, BIT_TYPE_FAIRY | BIT_TYPE_ROCK, BIT_TYPE_FAIRY | BIT_TYPE_WATER, BIT_TYPE_DRAGON | BIT_TYPE_FIGHTING, BIT_TYPE_FIGHTING | BIT_TYPE_FIRE, BIT_TYPE_FIGHTING | BIT_TYPE_ROCK, BIT_TYPE_FIGHTING | BIT_TYPE_WATER, BIT_TYPE_FIRE, BIT_TYPE_DRAGON | BIT_TYPE_FLYING, BIT_TYPE_FIRE | BIT_TYPE_FLYING, BIT_TYPE_FLYING | BIT_TYPE_ROCK, BIT_TYPE_FLYING | BIT_TYPE_WATER, BIT_TYPE_DRAGON | BIT_TYPE_GHOST, BIT_TYPE_FIRE | BIT_TYPE_GHOST, BIT_TYPE_GHOST | BIT_TYPE_ROCK, BIT_TYPE_GHOST | BIT_TYPE_WATER, BIT_TYPE_DRAGON | BIT_TYPE_POISON, BIT_TYPE_FIRE | BIT_TYPE_POISON, BIT_TYPE_POISON | BIT_TYPE_ROCK, BIT_TYPE_POISON | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sBugFlyingResists[] =
{
    BIT_TYPE_ELECTRIC | BIT_TYPE_FAIRY, BIT_TYPE_FAIRY | BIT_TYPE_ROCK, BIT_TYPE_FAIRY | BIT_TYPE_STEEL, BIT_TYPE_ELECTRIC | BIT_TYPE_FIRE, BIT_TYPE_FIRE | BIT_TYPE_ROCK, BIT_TYPE_FIRE | BIT_TYPE_STEEL, BIT_TYPE_ELECTRIC | BIT_TYPE_FLYING, BIT_TYPE_FLYING | BIT_TYPE_ROCK, BIT_TYPE_FLYING | BIT_TYPE_STEEL, BIT_TYPE_ELECTRIC | BIT_TYPE_GHOST, BIT_TYPE_GHOST | BIT_TYPE_ROCK, BIT_TYPE_GHOST | BIT_TYPE_STEEL, BIT_TYPE_ELECTRIC | BIT_TYPE_POISON, BIT_TYPE_POISON | BIT_TYPE_ROCK, BIT_TYPE_POISON | BIT_TYPE_STEEL, BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sBugGrassResists[] =
{
    BIT_TYPE_BUG | BIT_TYPE_FAIRY, BIT_TYPE_DRAGON | BIT_TYPE_FAIRY, BIT_TYPE_FAIRY | BIT_TYPE_FIRE, BIT_TYPE_FAIRY | BIT_TYPE_FLYING, BIT_TYPE_FAIRY | BIT_TYPE_POISON, BIT_TYPE_FAIRY | BIT_TYPE_STEEL, BIT_TYPE_BUG | BIT_TYPE_FIGHTING, BIT_TYPE_DRAGON | BIT_TYPE_FIGHTING, BIT_TYPE_FIGHTING | BIT_TYPE_FIRE, BIT_TYPE_FIGHTING | BIT_TYPE_FLYING, BIT_TYPE_FIGHTING | BIT_TYPE_POISON, BIT_TYPE_FIGHTING | BIT_TYPE_STEEL, BIT_TYPE_FIRE, BIT_TYPE_FLYING, BIT_TYPE_BUG | BIT_TYPE_GHOST, BIT_TYPE_DRAGON | BIT_TYPE_GHOST, BIT_TYPE_FIRE | BIT_TYPE_GHOST, BIT_TYPE_FLYING | BIT_TYPE_GHOST, BIT_TYPE_GHOST | BIT_TYPE_POISON, BIT_TYPE_GHOST | BIT_TYPE_STEEL, BIT_TYPE_POISON, BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sBugGrassDoubleResists[] =
{
    BIT_TYPE_FIRE | BIT_TYPE_FLYING, BIT_TYPE_FIRE | BIT_TYPE_POISON, BIT_TYPE_FIRE | BIT_TYPE_STEEL, BIT_TYPE_FLYING | BIT_TYPE_POISON, BIT_TYPE_FLYING | BIT_TYPE_STEEL, BIT_TYPE_POISON | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sBugGroundResists[] =
{
    BIT_TYPE_BUG | BIT_TYPE_FAIRY, BIT_TYPE_BUG | BIT_TYPE_FIGHTING, BIT_TYPE_BUG | BIT_TYPE_FLYING, BIT_TYPE_BUG | BIT_TYPE_GHOST, BIT_TYPE_NONE
};

static const u32 sBugIceResists[] =
{
    BIT_TYPE_FAIRY | BIT_TYPE_FIRE, BIT_TYPE_FAIRY | BIT_TYPE_ICE, BIT_TYPE_FAIRY | BIT_TYPE_STEEL, BIT_TYPE_FAIRY | BIT_TYPE_WATER, BIT_TYPE_FIGHTING | BIT_TYPE_FIRE, BIT_TYPE_FIGHTING | BIT_TYPE_ICE, BIT_TYPE_FIGHTING | BIT_TYPE_STEEL, BIT_TYPE_FIGHTING | BIT_TYPE_WATER, BIT_TYPE_FIRE, BIT_TYPE_FIRE | BIT_TYPE_GHOST, BIT_TYPE_GHOST | BIT_TYPE_ICE, BIT_TYPE_GHOST | BIT_TYPE_STEEL, BIT_TYPE_GHOST | BIT_TYPE_WATER, BIT_TYPE_FIRE | BIT_TYPE_POISON, BIT_TYPE_ICE | BIT_TYPE_POISON, BIT_TYPE_POISON | BIT_TYPE_STEEL, BIT_TYPE_POISON | BIT_TYPE_WATER, BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sBugIceDoubleResists[] =
{
    BIT_TYPE_FIRE | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sBugNormalResists[] =
{
    BIT_TYPE_FAIRY | BIT_TYPE_ROCK, BIT_TYPE_FAIRY | BIT_TYPE_STEEL, BIT_TYPE_FIGHTING | BIT_TYPE_ROCK, BIT_TYPE_FIGHTING | BIT_TYPE_STEEL, BIT_TYPE_FIRE | BIT_TYPE_ROCK, BIT_TYPE_FIRE | BIT_TYPE_STEEL, BIT_TYPE_FLYING | BIT_TYPE_ROCK, BIT_TYPE_FLYING | BIT_TYPE_STEEL, BIT_TYPE_GHOST | BIT_TYPE_ROCK, BIT_TYPE_GHOST | BIT_TYPE_STEEL, BIT_TYPE_POISON | BIT_TYPE_ROCK, BIT_TYPE_POISON | BIT_TYPE_STEEL, BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sBugPoisonResists[] =
{
    BIT_TYPE_FIGHTING | BIT_TYPE_GHOST, BIT_TYPE_FIGHTING | BIT_TYPE_GROUND, BIT_TYPE_FIGHTING | BIT_TYPE_POISON, BIT_TYPE_FIGHTING | BIT_TYPE_ROCK, BIT_TYPE_FIRE | BIT_TYPE_GHOST, BIT_TYPE_FIRE | BIT_TYPE_GROUND, BIT_TYPE_FIRE | BIT_TYPE_POISON, BIT_TYPE_FIRE | BIT_TYPE_ROCK, BIT_TYPE_FLYING | BIT_TYPE_GHOST, BIT_TYPE_FLYING | BIT_TYPE_GROUND, BIT_TYPE_FLYING | BIT_TYPE_POISON, BIT_TYPE_FLYING | BIT_TYPE_ROCK, BIT_TYPE_GHOST, BIT_TYPE_POISON, BIT_TYPE_GHOST | BIT_TYPE_STEEL, BIT_TYPE_GROUND | BIT_TYPE_STEEL, BIT_TYPE_POISON | BIT_TYPE_STEEL, BIT_TYPE_ROCK | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sBugPoisonDoubleResists[] =
{
    BIT_TYPE_GHOST | BIT_TYPE_POISON, BIT_TYPE_NONE
};

static const u32 sBugPsychicResists[] =
{
    BIT_TYPE_FAIRY | BIT_TYPE_STEEL, BIT_TYPE_FIRE | BIT_TYPE_STEEL, BIT_TYPE_FLYING | BIT_TYPE_STEEL, BIT_TYPE_GHOST | BIT_TYPE_STEEL, BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sBugRockResists[] =
{
    BIT_TYPE_FAIRY | BIT_TYPE_FIGHTING, BIT_TYPE_FAIRY | BIT_TYPE_GROUND, BIT_TYPE_FAIRY | BIT_TYPE_STEEL, BIT_TYPE_FIGHTING, BIT_TYPE_FIGHTING | BIT_TYPE_GHOST, BIT_TYPE_GHOST | BIT_TYPE_GROUND, BIT_TYPE_GHOST | BIT_TYPE_STEEL, BIT_TYPE_FIGHTING | BIT_TYPE_POISON, BIT_TYPE_GROUND | BIT_TYPE_POISON, BIT_TYPE_POISON | BIT_TYPE_STEEL, BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sBugRockDoubleResists[] =
{
    BIT_TYPE_FIGHTING | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sBugSteelResists[] =
{
    BIT_TYPE_ELECTRIC | BIT_TYPE_FIGHTING, BIT_TYPE_FIGHTING | BIT_TYPE_FIRE, BIT_TYPE_FIGHTING | BIT_TYPE_STEEL, BIT_TYPE_FIGHTING | BIT_TYPE_WATER, BIT_TYPE_FIRE, BIT_TYPE_ELECTRIC | BIT_TYPE_FLYING, BIT_TYPE_FIRE | BIT_TYPE_FLYING, BIT_TYPE_FLYING | BIT_TYPE_STEEL, BIT_TYPE_FLYING | BIT_TYPE_WATER, BIT_TYPE_ELECTRIC | BIT_TYPE_GHOST, BIT_TYPE_FIRE | BIT_TYPE_GHOST, BIT_TYPE_GHOST | BIT_TYPE_STEEL, BIT_TYPE_GHOST | BIT_TYPE_WATER, BIT_TYPE_ELECTRIC | BIT_TYPE_POISON, BIT_TYPE_FIRE | BIT_TYPE_POISON, BIT_TYPE_POISON | BIT_TYPE_STEEL, BIT_TYPE_POISON | BIT_TYPE_WATER, BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sBugSteelDoubleResists[] =
{
    BIT_TYPE_FIRE | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sBugWaterResists[] =
{
    BIT_TYPE_DRAGON | BIT_TYPE_FAIRY, BIT_TYPE_FAIRY | BIT_TYPE_WATER, BIT_TYPE_DRAGON | BIT_TYPE_FIGHTING, BIT_TYPE_FIGHTING | BIT_TYPE_WATER, BIT_TYPE_DRAGON | BIT_TYPE_FLYING, BIT_TYPE_FLYING | BIT_TYPE_WATER, BIT_TYPE_DRAGON | BIT_TYPE_GHOST, BIT_TYPE_GHOST | BIT_TYPE_WATER, BIT_TYPE_DRAGON | BIT_TYPE_POISON, BIT_TYPE_POISON | BIT_TYPE_WATER, BIT_TYPE_DRAGON | BIT_TYPE_STEEL, BIT_TYPE_STEEL | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sBugDarkResists[] =
{
    BIT_TYPE_FAIRY, BIT_TYPE_FIGHTING, BIT_TYPE_NONE
};

static const u32 sBugDarkDoubleResists[] =
{
    BIT_TYPE_FAIRY | BIT_TYPE_FIGHTING, BIT_TYPE_NONE
};

static const u32 sDarkDragonResists[] =
{
    BIT_TYPE_DARK | BIT_TYPE_STEEL, BIT_TYPE_FAIRY | BIT_TYPE_STEEL, BIT_TYPE_FIGHTING | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sDarkElectricResists[] =
{
    BIT_TYPE_DARK | BIT_TYPE_DRAGON, BIT_TYPE_DARK | BIT_TYPE_ELECTRIC, BIT_TYPE_DARK | BIT_TYPE_GRASS, BIT_TYPE_DRAGON | BIT_TYPE_FAIRY, BIT_TYPE_ELECTRIC | BIT_TYPE_FAIRY, BIT_TYPE_FAIRY | BIT_TYPE_GRASS, BIT_TYPE_DRAGON | BIT_TYPE_FIGHTING, BIT_TYPE_ELECTRIC | BIT_TYPE_FIGHTING, BIT_TYPE_FIGHTING | BIT_TYPE_GRASS, BIT_TYPE_NONE
};

static const u32 sDarkFairyResists[] =
{
    BIT_TYPE_FAIRY | BIT_TYPE_FIRE, BIT_TYPE_FAIRY | BIT_TYPE_POISON, BIT_TYPE_FAIRY | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sDarkFightingResists[] =
{
    BIT_TYPE_FAIRY, BIT_TYPE_BUG | BIT_TYPE_FIGHTING, BIT_TYPE_FAIRY | BIT_TYPE_FIGHTING, BIT_TYPE_FIGHTING | BIT_TYPE_FLYING, BIT_TYPE_FIGHTING | BIT_TYPE_POISON, BIT_TYPE_NONE
};

static const u32 sDarkFireResists[] =
{
    BIT_TYPE_DARK | BIT_TYPE_DRAGON, BIT_TYPE_DARK | BIT_TYPE_FIRE, BIT_TYPE_DARK | BIT_TYPE_ROCK, BIT_TYPE_DARK | BIT_TYPE_WATER, BIT_TYPE_DRAGON | BIT_TYPE_FAIRY, BIT_TYPE_FAIRY | BIT_TYPE_FIRE, BIT_TYPE_FAIRY | BIT_TYPE_ROCK, BIT_TYPE_FAIRY | BIT_TYPE_WATER, BIT_TYPE_DRAGON | BIT_TYPE_FIGHTING, BIT_TYPE_FIGHTING | BIT_TYPE_FIRE, BIT_TYPE_FIGHTING | BIT_TYPE_ROCK, BIT_TYPE_FIGHTING | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sDarkFlyingResists[] =
{
    BIT_TYPE_DARK | BIT_TYPE_ELECTRIC, BIT_TYPE_DARK | BIT_TYPE_ROCK, BIT_TYPE_DARK | BIT_TYPE_STEEL, BIT_TYPE_ELECTRIC | BIT_TYPE_FAIRY, BIT_TYPE_FAIRY | BIT_TYPE_ROCK, BIT_TYPE_FAIRY | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sDarkGhostResists[] =
{
    BIT_TYPE_DARK, BIT_TYPE_DARK | BIT_TYPE_FAIRY, BIT_TYPE_DARK | BIT_TYPE_FIGHTING, BIT_TYPE_NONE
};

static const u32 sDarkGrassResists[] =
{
    BIT_TYPE_BUG | BIT_TYPE_DARK, BIT_TYPE_DARK | BIT_TYPE_DRAGON, BIT_TYPE_DARK | BIT_TYPE_FIRE, BIT_TYPE_DARK | BIT_TYPE_FLYING, BIT_TYPE_DARK | BIT_TYPE_GRASS, BIT_TYPE_DARK | BIT_TYPE_POISON, BIT_TYPE_DARK | BIT_TYPE_STEEL, BIT_TYPE_BUG | BIT_TYPE_FAIRY, BIT_TYPE_DRAGON | BIT_TYPE_FAIRY, BIT_TYPE_FAIRY | BIT_TYPE_FIRE, BIT_TYPE_FAIRY | BIT_TYPE_FLYING, BIT_TYPE_FAIRY | BIT_TYPE_GRASS, BIT_TYPE_FAIRY | BIT_TYPE_POISON, BIT_TYPE_FAIRY | BIT_TYPE_STEEL, BIT_TYPE_BUG | BIT_TYPE_FIGHTING, BIT_TYPE_DRAGON | BIT_TYPE_FIGHTING, BIT_TYPE_FIGHTING | BIT_TYPE_FIRE, BIT_TYPE_FIGHTING | BIT_TYPE_FLYING, BIT_TYPE_FIGHTING | BIT_TYPE_GRASS, BIT_TYPE_FIGHTING | BIT_TYPE_POISON, BIT_TYPE_FIGHTING | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sDarkGroundResists[] =
{
    BIT_TYPE_BUG | BIT_TYPE_DARK, BIT_TYPE_DARK | BIT_TYPE_GRASS, BIT_TYPE_BUG | BIT_TYPE_FAIRY, BIT_TYPE_FAIRY | BIT_TYPE_GRASS, BIT_TYPE_BUG | BIT_TYPE_FIGHTING, BIT_TYPE_FIGHTING | BIT_TYPE_GRASS, BIT_TYPE_NONE
};

static const u32 sDarkIceResists[] =
{
    BIT_TYPE_DARK | BIT_TYPE_FIRE, BIT_TYPE_DARK | BIT_TYPE_ICE, BIT_TYPE_DARK | BIT_TYPE_STEEL, BIT_TYPE_DARK | BIT_TYPE_WATER, BIT_TYPE_FAIRY | BIT_TYPE_FIRE, BIT_TYPE_FAIRY | BIT_TYPE_ICE, BIT_TYPE_FAIRY | BIT_TYPE_STEEL, BIT_TYPE_FAIRY | BIT_TYPE_WATER, BIT_TYPE_FIGHTING | BIT_TYPE_FIRE, BIT_TYPE_FIGHTING | BIT_TYPE_ICE, BIT_TYPE_FIGHTING | BIT_TYPE_STEEL, BIT_TYPE_FIGHTING | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sDarkNormalResists[] =
{
    BIT_TYPE_DARK | BIT_TYPE_ROCK, BIT_TYPE_DARK | BIT_TYPE_STEEL, BIT_TYPE_FAIRY | BIT_TYPE_ROCK, BIT_TYPE_FAIRY | BIT_TYPE_STEEL, BIT_TYPE_FIGHTING | BIT_TYPE_ROCK, BIT_TYPE_FIGHTING | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sDarkPoisonResists[] =
{
    BIT_TYPE_DARK | BIT_TYPE_GROUND, BIT_TYPE_DARK | BIT_TYPE_POISON, BIT_TYPE_DARK | BIT_TYPE_ROCK, BIT_TYPE_FIGHTING | BIT_TYPE_GROUND, BIT_TYPE_FIGHTING | BIT_TYPE_POISON, BIT_TYPE_FIGHTING | BIT_TYPE_ROCK, BIT_TYPE_NONE
};

static const u32 sDarkPsychicResists[] =
{
    BIT_TYPE_DARK | BIT_TYPE_STEEL, BIT_TYPE_FAIRY | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sDarkRockResists[] =
{
    BIT_TYPE_DARK | BIT_TYPE_FIGHTING, BIT_TYPE_DARK | BIT_TYPE_GROUND, BIT_TYPE_DARK | BIT_TYPE_STEEL, BIT_TYPE_FAIRY | BIT_TYPE_FIGHTING, BIT_TYPE_FAIRY | BIT_TYPE_GROUND, BIT_TYPE_FAIRY | BIT_TYPE_STEEL, BIT_TYPE_FIGHTING, BIT_TYPE_NONE
};

static const u32 sDarkSteelResists[] =
{
    BIT_TYPE_DARK | BIT_TYPE_ELECTRIC, BIT_TYPE_DARK | BIT_TYPE_FIRE, BIT_TYPE_DARK | BIT_TYPE_STEEL, BIT_TYPE_DARK | BIT_TYPE_WATER, BIT_TYPE_ELECTRIC | BIT_TYPE_FIGHTING, BIT_TYPE_FIGHTING | BIT_TYPE_FIRE, BIT_TYPE_FIGHTING | BIT_TYPE_STEEL, BIT_TYPE_FIGHTING | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sDarkWaterResists[] =
{
    BIT_TYPE_DARK | BIT_TYPE_DRAGON, BIT_TYPE_DARK | BIT_TYPE_GRASS, BIT_TYPE_DARK | BIT_TYPE_WATER, BIT_TYPE_DRAGON | BIT_TYPE_FAIRY, BIT_TYPE_FAIRY | BIT_TYPE_GRASS, BIT_TYPE_FAIRY | BIT_TYPE_WATER, BIT_TYPE_DRAGON | BIT_TYPE_FIGHTING, BIT_TYPE_FIGHTING | BIT_TYPE_GRASS, BIT_TYPE_FIGHTING | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sBugDragonResists[] =
{
    BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sDarkDragonResists[] =
{
    BIT_TYPE_DARK | BIT_TYPE_STEEL, BIT_TYPE_FAIRY | BIT_TYPE_STEEL, BIT_TYPE_FIGHTING | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sDragonElectricResists[] =
{
    BIT_TYPE_ELECTRIC | BIT_TYPE_STEEL, BIT_TYPE_GRASS | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sDragonElectricImmunities[] =
{
    BIT_TYPE_FAIRY | BIT_TYPE_GROUND, BIT_TYPE_NONE
};

static const u32 sDragonFairyResists[] =
{
    BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sDragonFightingImmunities[] =
{
    BIT_TYPE_FAIRY | BIT_TYPE_GHOST, BIT_TYPE_NONE
};

static const u32 sDragonFlyingResists[] =
{
    BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sDragonGhostResists[] =
{
    BIT_TYPE_DARK | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sDragonGhostImmunities[] =
{
    BIT_TYPE_FAIRY | BIT_TYPE_NORMAL, BIT_TYPE_NONE
};

static const u32 sDragonGrassResists[] =
{
    BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sDragonGroundImmunities[] =
{
    BIT_TYPE_FAIRY | BIT_TYPE_FLYING, BIT_TYPE_NONE
};

static const u32 sDragonIceResists[] =
{
    BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sDragonNormalResists[] =
{
    BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sDragonNormalImmunities[] =
{
    BIT_TYPE_FAIRY | BIT_TYPE_GHOST, BIT_TYPE_NONE
};

static const u32 sDragonPoisonResists[] =
{
    BIT_TYPE_GHOST | BIT_TYPE_STEEL, BIT_TYPE_GROUND | BIT_TYPE_STEEL, BIT_TYPE_POISON | BIT_TYPE_STEEL, BIT_TYPE_ROCK | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sDragonPoisonImmunities[] =
{
    BIT_TYPE_FAIRY | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sDragonPsychicResists[] =
{
    BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sDragonPsychicImmunities[] =
{
    BIT_TYPE_DARK | BIT_TYPE_FAIRY, BIT_TYPE_NONE
};

static const u32 sDragonRockResists[] =
{
    BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sDragonSteelResists[] =
{
    BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sDragonWaterResists[] =
{
    BIT_TYPE_GRASS | BIT_TYPE_STEEL, BIT_TYPE_STEEL | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sBugElectricResists[] =
{
    BIT_TYPE_DRAGON | BIT_TYPE_FAIRY, BIT_TYPE_DRAGON | BIT_TYPE_FIGHTING, BIT_TYPE_DRAGON | BIT_TYPE_FIRE, BIT_TYPE_DRAGON | BIT_TYPE_GHOST, BIT_TYPE_DRAGON | BIT_TYPE_POISON, BIT_TYPE_DRAGON | BIT_TYPE_STEEL, BIT_TYPE_ELECTRIC | BIT_TYPE_FAIRY, BIT_TYPE_ELECTRIC | BIT_TYPE_FIGHTING, BIT_TYPE_ELECTRIC | BIT_TYPE_FIRE, BIT_TYPE_ELECTRIC | BIT_TYPE_GHOST, BIT_TYPE_ELECTRIC | BIT_TYPE_POISON, BIT_TYPE_ELECTRIC | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sDarkElectricResists[] =
{
    BIT_TYPE_DARK | BIT_TYPE_DRAGON, BIT_TYPE_DRAGON | BIT_TYPE_FAIRY, BIT_TYPE_DRAGON | BIT_TYPE_FIGHTING, BIT_TYPE_DARK | BIT_TYPE_ELECTRIC, BIT_TYPE_ELECTRIC | BIT_TYPE_FAIRY, BIT_TYPE_ELECTRIC | BIT_TYPE_FIGHTING, BIT_TYPE_DARK | BIT_TYPE_GRASS, BIT_TYPE_FAIRY | BIT_TYPE_GRASS, BIT_TYPE_FIGHTING | BIT_TYPE_GRASS, BIT_TYPE_NONE
};

static const u32 sDragonElectricResists[] =
{
    BIT_TYPE_ELECTRIC | BIT_TYPE_STEEL, BIT_TYPE_GRASS | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sDragonElectricImmunities[] =
{
    BIT_TYPE_FAIRY | BIT_TYPE_GROUND, BIT_TYPE_NONE
};

static const u32 sElectricFairyResists[] =
{
    BIT_TYPE_ELECTRIC | BIT_TYPE_FIRE, BIT_TYPE_ELECTRIC | BIT_TYPE_POISON, BIT_TYPE_ELECTRIC | BIT_TYPE_STEEL, BIT_TYPE_FIRE | BIT_TYPE_GRASS, BIT_TYPE_GRASS | BIT_TYPE_POISON, BIT_TYPE_GRASS | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sElectricFightingResists[] =
{
    BIT_TYPE_BUG | BIT_TYPE_DRAGON, BIT_TYPE_DRAGON | BIT_TYPE_FAIRY, BIT_TYPE_DRAGON | BIT_TYPE_POISON, BIT_TYPE_DRAGON | BIT_TYPE_PSYCHIC, BIT_TYPE_BUG | BIT_TYPE_ELECTRIC, BIT_TYPE_ELECTRIC | BIT_TYPE_FAIRY, BIT_TYPE_ELECTRIC | BIT_TYPE_POISON, BIT_TYPE_ELECTRIC | BIT_TYPE_PSYCHIC, BIT_TYPE_BUG | BIT_TYPE_GRASS, BIT_TYPE_FAIRY | BIT_TYPE_GRASS, BIT_TYPE_GRASS | BIT_TYPE_POISON, BIT_TYPE_GRASS | BIT_TYPE_PSYCHIC, BIT_TYPE_NONE
};

static const u32 sElectricFightingImmunities[] =
{
    BIT_TYPE_GHOST | BIT_TYPE_GROUND, BIT_TYPE_NONE
};

static const u32 sElectricFireResists[] =
{
    BIT_TYPE_DRAGON, BIT_TYPE_DRAGON | BIT_TYPE_ELECTRIC, BIT_TYPE_ELECTRIC | BIT_TYPE_FIRE, BIT_TYPE_ELECTRIC | BIT_TYPE_ROCK, BIT_TYPE_NONE
};

static const u32 sElectricFlyingResists[] =
{
    BIT_TYPE_DRAGON | BIT_TYPE_ELECTRIC, BIT_TYPE_DRAGON | BIT_TYPE_ROCK, BIT_TYPE_DRAGON | BIT_TYPE_STEEL, BIT_TYPE_ELECTRIC, BIT_TYPE_NONE
};

static const u32 sElectricGhostResists[] =
{
    BIT_TYPE_DARK | BIT_TYPE_DRAGON, BIT_TYPE_DARK | BIT_TYPE_ELECTRIC, BIT_TYPE_DARK | BIT_TYPE_GRASS, BIT_TYPE_NONE
};

static const u32 sElectricGhostImmunities[] =
{
    BIT_TYPE_GROUND | BIT_TYPE_NORMAL, BIT_TYPE_NONE
};

static const u32 sElectricGrassResists[] =
{
    BIT_TYPE_DRAGON, BIT_TYPE_BUG | BIT_TYPE_ELECTRIC, BIT_TYPE_DRAGON | BIT_TYPE_ELECTRIC, BIT_TYPE_ELECTRIC | BIT_TYPE_FIRE, BIT_TYPE_ELECTRIC | BIT_TYPE_GRASS, BIT_TYPE_ELECTRIC | BIT_TYPE_POISON, BIT_TYPE_ELECTRIC | BIT_TYPE_STEEL, BIT_TYPE_GRASS, BIT_TYPE_NONE
};

static const u32 sElectricGrassDoubleResists[] =
{
    BIT_TYPE_DRAGON | BIT_TYPE_GRASS, BIT_TYPE_NONE
};

static const u32 sElectricGroundResists[] =
{
    BIT_TYPE_BUG | BIT_TYPE_DRAGON, BIT_TYPE_DRAGON | BIT_TYPE_GRASS, BIT_TYPE_GRASS, BIT_TYPE_NONE
};

static const u32 sElectricGroundImmunities[] =
{
    BIT_TYPE_FLYING | BIT_TYPE_GROUND, BIT_TYPE_NONE
};

static const u32 sElectricIceResists[] =
{
    BIT_TYPE_ELECTRIC | BIT_TYPE_FIRE, BIT_TYPE_ELECTRIC | BIT_TYPE_ICE, BIT_TYPE_ELECTRIC | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sElectricNormalResists[] =
{
    BIT_TYPE_DRAGON | BIT_TYPE_ROCK, BIT_TYPE_DRAGON | BIT_TYPE_STEEL, BIT_TYPE_ELECTRIC | BIT_TYPE_ROCK, BIT_TYPE_ELECTRIC | BIT_TYPE_STEEL, BIT_TYPE_GRASS | BIT_TYPE_ROCK, BIT_TYPE_GRASS | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sElectricNormalImmunities[] =
{
    BIT_TYPE_GHOST | BIT_TYPE_GROUND, BIT_TYPE_NONE
};

static const u32 sElectricPoisonResists[] =
{
    BIT_TYPE_DRAGON | BIT_TYPE_GHOST, BIT_TYPE_DRAGON | BIT_TYPE_GROUND, BIT_TYPE_DRAGON | BIT_TYPE_POISON, BIT_TYPE_DRAGON | BIT_TYPE_ROCK, BIT_TYPE_ELECTRIC | BIT_TYPE_GHOST, BIT_TYPE_ELECTRIC | BIT_TYPE_GROUND, BIT_TYPE_ELECTRIC | BIT_TYPE_POISON, BIT_TYPE_ELECTRIC | BIT_TYPE_ROCK, BIT_TYPE_NONE
};

static const u32 sElectricPoisonImmunities[] =
{
    BIT_TYPE_GROUND | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sElectricPsychicResists[] =
{
    BIT_TYPE_DRAGON | BIT_TYPE_PSYCHIC, BIT_TYPE_DRAGON | BIT_TYPE_STEEL, BIT_TYPE_ELECTRIC | BIT_TYPE_PSYCHIC, BIT_TYPE_ELECTRIC | BIT_TYPE_STEEL, BIT_TYPE_GRASS | BIT_TYPE_PSYCHIC, BIT_TYPE_GRASS | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sElectricPsychicImmunities[] =
{
    BIT_TYPE_DARK | BIT_TYPE_GROUND, BIT_TYPE_NONE
};

static const u32 sElectricRockResists[] =
{
    BIT_TYPE_DRAGON | BIT_TYPE_FIGHTING, BIT_TYPE_DRAGON | BIT_TYPE_GROUND, BIT_TYPE_DRAGON | BIT_TYPE_STEEL, BIT_TYPE_ELECTRIC | BIT_TYPE_FIGHTING, BIT_TYPE_ELECTRIC | BIT_TYPE_GROUND, BIT_TYPE_ELECTRIC | BIT_TYPE_STEEL, BIT_TYPE_FIGHTING | BIT_TYPE_GRASS, BIT_TYPE_GRASS | BIT_TYPE_GROUND, BIT_TYPE_GRASS | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sElectricSteelResists[] =
{
    BIT_TYPE_DRAGON | BIT_TYPE_ELECTRIC, BIT_TYPE_DRAGON | BIT_TYPE_FIRE, BIT_TYPE_DRAGON | BIT_TYPE_STEEL, BIT_TYPE_ELECTRIC, BIT_TYPE_ELECTRIC | BIT_TYPE_GRASS, BIT_TYPE_FIRE | BIT_TYPE_GRASS, BIT_TYPE_GRASS | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sElectricWaterResists[] =
{
    BIT_TYPE_DRAGON, BIT_TYPE_DRAGON | BIT_TYPE_ELECTRIC, BIT_TYPE_ELECTRIC | BIT_TYPE_GRASS, BIT_TYPE_GRASS, BIT_TYPE_NONE
};

static const u32 sElectricWaterDoubleResists[] =
{
    BIT_TYPE_DRAGON | BIT_TYPE_GRASS, BIT_TYPE_NONE
};

static const u32 sBugFairyResists[] =
{
    BIT_TYPE_FIRE, BIT_TYPE_POISON, BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sBugFairyDoubleResists[] =
{
    BIT_TYPE_FIRE | BIT_TYPE_POISON, BIT_TYPE_FIRE | BIT_TYPE_STEEL, BIT_TYPE_POISON | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sDarkFairyResists[] =
{
    BIT_TYPE_FAIRY | BIT_TYPE_FIRE, BIT_TYPE_FAIRY | BIT_TYPE_POISON, BIT_TYPE_FAIRY | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sDragonFairyResists[] =
{
    BIT_TYPE_FIRE | BIT_TYPE_STEEL, BIT_TYPE_POISON | BIT_TYPE_STEEL, BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sElectricFairyResists[] =
{
    BIT_TYPE_ELECTRIC | BIT_TYPE_FIRE, BIT_TYPE_FIRE | BIT_TYPE_GRASS, BIT_TYPE_ELECTRIC | BIT_TYPE_POISON, BIT_TYPE_GRASS | BIT_TYPE_POISON, BIT_TYPE_ELECTRIC | BIT_TYPE_STEEL, BIT_TYPE_GRASS | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sFairyFightingResists[] =
{
    BIT_TYPE_BUG | BIT_TYPE_FIRE, BIT_TYPE_FAIRY | BIT_TYPE_FIRE, BIT_TYPE_FIRE | BIT_TYPE_FLYING, BIT_TYPE_FIRE | BIT_TYPE_POISON, BIT_TYPE_FIRE | BIT_TYPE_PSYCHIC, BIT_TYPE_POISON, BIT_TYPE_NONE
};

static const u32 sFairyFireResists[] =
{
    BIT_TYPE_FIRE, BIT_TYPE_FIRE | BIT_TYPE_POISON, BIT_TYPE_POISON | BIT_TYPE_ROCK, BIT_TYPE_POISON | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sFairyFlyingResists[] =
{
    BIT_TYPE_ELECTRIC | BIT_TYPE_FIRE, BIT_TYPE_FIRE | BIT_TYPE_ROCK, BIT_TYPE_FIRE | BIT_TYPE_STEEL, BIT_TYPE_ELECTRIC | BIT_TYPE_POISON, BIT_TYPE_POISON | BIT_TYPE_ROCK, BIT_TYPE_POISON | BIT_TYPE_STEEL, BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sFairyGrassResists[] =
{
    BIT_TYPE_FIRE, BIT_TYPE_POISON, BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sFairyGrassDoubleResists[] =
{
    BIT_TYPE_FIRE | BIT_TYPE_POISON, BIT_TYPE_FIRE | BIT_TYPE_STEEL, BIT_TYPE_POISON | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sFairyIceResists[] =
{
    BIT_TYPE_FIRE, BIT_TYPE_FIRE | BIT_TYPE_POISON, BIT_TYPE_ICE | BIT_TYPE_POISON, BIT_TYPE_POISON | BIT_TYPE_STEEL, BIT_TYPE_POISON | BIT_TYPE_WATER, BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sFairyIceDoubleResists[] =
{
    BIT_TYPE_FIRE | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sFairyNormalResists[] =
{
    BIT_TYPE_FIRE | BIT_TYPE_ROCK, BIT_TYPE_FIRE | BIT_TYPE_STEEL, BIT_TYPE_POISON | BIT_TYPE_ROCK, BIT_TYPE_POISON | BIT_TYPE_STEEL, BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sFairyPoisonResists[] =
{
    BIT_TYPE_FIRE | BIT_TYPE_GHOST, BIT_TYPE_FIRE | BIT_TYPE_GROUND, BIT_TYPE_FIRE | BIT_TYPE_POISON, BIT_TYPE_FIRE | BIT_TYPE_ROCK, BIT_TYPE_POISON, BIT_TYPE_GHOST | BIT_TYPE_STEEL, BIT_TYPE_GROUND | BIT_TYPE_STEEL, BIT_TYPE_POISON | BIT_TYPE_STEEL, BIT_TYPE_ROCK | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sFairyPsychicResists[] =
{
    BIT_TYPE_FIRE | BIT_TYPE_PSYCHIC, BIT_TYPE_FIRE | BIT_TYPE_STEEL, BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sFairyRockResists[] =
{
    BIT_TYPE_GROUND | BIT_TYPE_POISON, BIT_TYPE_POISON | BIT_TYPE_STEEL, BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sFairySteelResists[] =
{
    BIT_TYPE_FIRE, BIT_TYPE_ELECTRIC | BIT_TYPE_POISON, BIT_TYPE_FIRE | BIT_TYPE_POISON, BIT_TYPE_POISON | BIT_TYPE_STEEL, BIT_TYPE_POISON | BIT_TYPE_WATER, BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sFairySteelDoubleResists[] =
{
    BIT_TYPE_FIRE | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sFairyWaterResists[] =
{
    BIT_TYPE_GRASS | BIT_TYPE_POISON, BIT_TYPE_POISON | BIT_TYPE_WATER, BIT_TYPE_GRASS | BIT_TYPE_STEEL, BIT_TYPE_STEEL | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sBugFightingResists[] =
{
    BIT_TYPE_BUG | BIT_TYPE_FAIRY, BIT_TYPE_BUG | BIT_TYPE_FIGHTING, BIT_TYPE_BUG | BIT_TYPE_FIRE, BIT_TYPE_BUG | BIT_TYPE_FLYING, BIT_TYPE_BUG | BIT_TYPE_GHOST, BIT_TYPE_BUG | BIT_TYPE_POISON, BIT_TYPE_FAIRY, BIT_TYPE_FLYING, BIT_TYPE_POISON, BIT_TYPE_NONE
};

static const u32 sBugFightingDoubleResists[] =
{
    BIT_TYPE_FAIRY | BIT_TYPE_FLYING, BIT_TYPE_FAIRY | BIT_TYPE_POISON, BIT_TYPE_FLYING | BIT_TYPE_POISON, BIT_TYPE_NONE
};

static const u32 sDarkFightingResists[] =
{
    BIT_TYPE_BUG | BIT_TYPE_FAIRY, BIT_TYPE_BUG | BIT_TYPE_FIGHTING, BIT_TYPE_FAIRY, BIT_TYPE_FAIRY | BIT_TYPE_FLYING, BIT_TYPE_FIGHTING | BIT_TYPE_FLYING, BIT_TYPE_FAIRY | BIT_TYPE_POISON, BIT_TYPE_FIGHTING | BIT_TYPE_POISON, BIT_TYPE_NONE
};

static const u32 sDragonFightingImmunities[] =
{
    BIT_TYPE_FAIRY | BIT_TYPE_GHOST, BIT_TYPE_NONE
};

static const u32 sElectricFightingResists[] =
{
    BIT_TYPE_BUG | BIT_TYPE_DRAGON, BIT_TYPE_BUG | BIT_TYPE_ELECTRIC, BIT_TYPE_BUG | BIT_TYPE_GRASS, BIT_TYPE_DRAGON | BIT_TYPE_FAIRY, BIT_TYPE_ELECTRIC | BIT_TYPE_FAIRY, BIT_TYPE_FAIRY | BIT_TYPE_GRASS, BIT_TYPE_DRAGON | BIT_TYPE_POISON, BIT_TYPE_ELECTRIC | BIT_TYPE_POISON, BIT_TYPE_GRASS | BIT_TYPE_POISON, BIT_TYPE_DRAGON | BIT_TYPE_PSYCHIC, BIT_TYPE_ELECTRIC | BIT_TYPE_PSYCHIC, BIT_TYPE_GRASS | BIT_TYPE_PSYCHIC, BIT_TYPE_NONE
};

static const u32 sElectricFightingImmunities[] =
{
    BIT_TYPE_GHOST | BIT_TYPE_GROUND, BIT_TYPE_NONE
};

static const u32 sFairyFightingResists[] =
{
    BIT_TYPE_BUG | BIT_TYPE_FIRE, BIT_TYPE_BUG | BIT_TYPE_POISON, BIT_TYPE_FAIRY | BIT_TYPE_FIRE, BIT_TYPE_FAIRY | BIT_TYPE_POISON, BIT_TYPE_FIRE | BIT_TYPE_FLYING, BIT_TYPE_FLYING | BIT_TYPE_POISON, BIT_TYPE_POISON, BIT_TYPE_FIRE | BIT_TYPE_PSYCHIC, BIT_TYPE_POISON | BIT_TYPE_PSYCHIC, BIT_TYPE_NONE
};

static const u32 sFightingFireResists[] =
{
    BIT_TYPE_DRAGON | BIT_TYPE_FAIRY, BIT_TYPE_FAIRY | BIT_TYPE_FIRE, BIT_TYPE_FAIRY | BIT_TYPE_WATER, BIT_TYPE_DRAGON | BIT_TYPE_FLYING, BIT_TYPE_FIRE | BIT_TYPE_FLYING, BIT_TYPE_FLYING | BIT_TYPE_WATER, BIT_TYPE_DRAGON | BIT_TYPE_POISON, BIT_TYPE_FIRE | BIT_TYPE_POISON, BIT_TYPE_POISON | BIT_TYPE_WATER, BIT_TYPE_DRAGON | BIT_TYPE_PSYCHIC, BIT_TYPE_FIRE | BIT_TYPE_PSYCHIC, BIT_TYPE_PSYCHIC | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sFightingFlyingResists[] =
{
    BIT_TYPE_ELECTRIC | BIT_TYPE_FAIRY, BIT_TYPE_ELECTRIC | BIT_TYPE_FLYING, BIT_TYPE_ELECTRIC | BIT_TYPE_POISON, BIT_TYPE_ELECTRIC | BIT_TYPE_PSYCHIC, BIT_TYPE_NONE
};

static const u32 sFightingGhostImmunities[] =
{
    BIT_TYPE_GHOST | BIT_TYPE_NORMAL, BIT_TYPE_NONE
};

static const u32 sFightingGrassResists[] =
{
    BIT_TYPE_BUG, BIT_TYPE_BUG | BIT_TYPE_FAIRY, BIT_TYPE_DRAGON | BIT_TYPE_FAIRY, BIT_TYPE_FAIRY | BIT_TYPE_FIRE, BIT_TYPE_FAIRY | BIT_TYPE_FLYING, BIT_TYPE_FAIRY | BIT_TYPE_GRASS, BIT_TYPE_FAIRY | BIT_TYPE_POISON, BIT_TYPE_FLYING, BIT_TYPE_POISON, BIT_TYPE_BUG | BIT_TYPE_PSYCHIC, BIT_TYPE_DRAGON | BIT_TYPE_PSYCHIC, BIT_TYPE_FIRE | BIT_TYPE_PSYCHIC, BIT_TYPE_FLYING | BIT_TYPE_PSYCHIC, BIT_TYPE_GRASS | BIT_TYPE_PSYCHIC, BIT_TYPE_POISON | BIT_TYPE_PSYCHIC, BIT_TYPE_NONE
};

static const u32 sFightingGrassDoubleResists[] =
{
    BIT_TYPE_BUG | BIT_TYPE_FLYING, BIT_TYPE_BUG | BIT_TYPE_POISON, BIT_TYPE_FLYING | BIT_TYPE_POISON, BIT_TYPE_NONE
};

static const u32 sFightingGroundResists[] =
{
    BIT_TYPE_BUG, BIT_TYPE_BUG | BIT_TYPE_FAIRY, BIT_TYPE_FAIRY | BIT_TYPE_GRASS, BIT_TYPE_BUG | BIT_TYPE_FLYING, BIT_TYPE_FLYING | BIT_TYPE_GRASS, BIT_TYPE_BUG | BIT_TYPE_PSYCHIC, BIT_TYPE_GRASS | BIT_TYPE_PSYCHIC, BIT_TYPE_NONE
};

static const u32 sFightingGroundImmunities[] =
{
    BIT_TYPE_FLYING | BIT_TYPE_GHOST, BIT_TYPE_NONE
};

static const u32 sFightingIceResists[] =
{
    BIT_TYPE_BUG | BIT_TYPE_FIRE, BIT_TYPE_BUG | BIT_TYPE_WATER, BIT_TYPE_FAIRY | BIT_TYPE_FIRE, BIT_TYPE_FAIRY | BIT_TYPE_WATER, BIT_TYPE_FIRE | BIT_TYPE_POISON, BIT_TYPE_POISON | BIT_TYPE_WATER, BIT_TYPE_FIRE | BIT_TYPE_PSYCHIC, BIT_TYPE_PSYCHIC | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sFightingPoisonResists[] =
{
    BIT_TYPE_BUG | BIT_TYPE_GHOST, BIT_TYPE_BUG | BIT_TYPE_GROUND, BIT_TYPE_BUG | BIT_TYPE_POISON, BIT_TYPE_FLYING | BIT_TYPE_GHOST, BIT_TYPE_FLYING | BIT_TYPE_GROUND, BIT_TYPE_FLYING | BIT_TYPE_POISON, BIT_TYPE_POISON, BIT_TYPE_GHOST | BIT_TYPE_PSYCHIC, BIT_TYPE_GROUND | BIT_TYPE_PSYCHIC, BIT_TYPE_POISON | BIT_TYPE_PSYCHIC, BIT_TYPE_NONE
};

static const u32 sFightingPoisonImmunities[] =
{
    BIT_TYPE_GHOST | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sFightingPsychicResists[] =
{
    BIT_TYPE_BUG | BIT_TYPE_PSYCHIC, BIT_TYPE_FAIRY | BIT_TYPE_PSYCHIC, BIT_TYPE_FLYING | BIT_TYPE_PSYCHIC, BIT_TYPE_PSYCHIC, BIT_TYPE_NONE
};

static const u32 sFightingPsychicImmunities[] =
{
    BIT_TYPE_DARK | BIT_TYPE_GHOST, BIT_TYPE_NONE
};

static const u32 sFightingRockResists[] =
{
    BIT_TYPE_FAIRY | BIT_TYPE_FIGHTING, BIT_TYPE_FAIRY | BIT_TYPE_GROUND, BIT_TYPE_FIGHTING | BIT_TYPE_POISON, BIT_TYPE_GROUND | BIT_TYPE_POISON, BIT_TYPE_FIGHTING | BIT_TYPE_PSYCHIC, BIT_TYPE_GROUND | BIT_TYPE_PSYCHIC, BIT_TYPE_NONE
};

static const u32 sFightingSteelResists[] =
{
    BIT_TYPE_BUG | BIT_TYPE_ELECTRIC, BIT_TYPE_BUG | BIT_TYPE_FIRE, BIT_TYPE_BUG | BIT_TYPE_WATER, BIT_TYPE_ELECTRIC | BIT_TYPE_FLYING, BIT_TYPE_FIRE | BIT_TYPE_FLYING, BIT_TYPE_FLYING | BIT_TYPE_WATER, BIT_TYPE_ELECTRIC | BIT_TYPE_POISON, BIT_TYPE_FIRE | BIT_TYPE_POISON, BIT_TYPE_POISON | BIT_TYPE_WATER, BIT_TYPE_ELECTRIC | BIT_TYPE_PSYCHIC, BIT_TYPE_FIRE | BIT_TYPE_PSYCHIC, BIT_TYPE_PSYCHIC | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sFightingWaterResists[] =
{
    BIT_TYPE_BUG | BIT_TYPE_DRAGON, BIT_TYPE_BUG | BIT_TYPE_GRASS, BIT_TYPE_BUG | BIT_TYPE_WATER, BIT_TYPE_DRAGON | BIT_TYPE_FAIRY, BIT_TYPE_FAIRY | BIT_TYPE_GRASS, BIT_TYPE_FAIRY | BIT_TYPE_WATER, BIT_TYPE_DRAGON | BIT_TYPE_FLYING, BIT_TYPE_FLYING | BIT_TYPE_GRASS, BIT_TYPE_FLYING | BIT_TYPE_WATER, BIT_TYPE_DRAGON | BIT_TYPE_POISON, BIT_TYPE_GRASS | BIT_TYPE_POISON, BIT_TYPE_POISON | BIT_TYPE_WATER, BIT_TYPE_DRAGON | BIT_TYPE_PSYCHIC, BIT_TYPE_GRASS | BIT_TYPE_PSYCHIC, BIT_TYPE_PSYCHIC | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sBugFireResists[] =
{
    BIT_TYPE_DRAGON | BIT_TYPE_FAIRY, BIT_TYPE_DRAGON | BIT_TYPE_FIGHTING, BIT_TYPE_DRAGON | BIT_TYPE_FIRE, BIT_TYPE_DRAGON | BIT_TYPE_FLYING, BIT_TYPE_DRAGON | BIT_TYPE_GHOST, BIT_TYPE_DRAGON | BIT_TYPE_POISON, BIT_TYPE_FIRE, BIT_TYPE_FAIRY | BIT_TYPE_ROCK, BIT_TYPE_FIGHTING | BIT_TYPE_ROCK, BIT_TYPE_FIRE | BIT_TYPE_ROCK, BIT_TYPE_FLYING | BIT_TYPE_ROCK, BIT_TYPE_GHOST | BIT_TYPE_ROCK, BIT_TYPE_POISON | BIT_TYPE_ROCK, BIT_TYPE_FAIRY | BIT_TYPE_WATER, BIT_TYPE_FIGHTING | BIT_TYPE_WATER, BIT_TYPE_FIRE | BIT_TYPE_WATER, BIT_TYPE_FLYING | BIT_TYPE_WATER, BIT_TYPE_GHOST | BIT_TYPE_WATER, BIT_TYPE_POISON | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sDarkFireResists[] =
{
    BIT_TYPE_DARK | BIT_TYPE_DRAGON, BIT_TYPE_DRAGON | BIT_TYPE_FAIRY, BIT_TYPE_DRAGON | BIT_TYPE_FIGHTING, BIT_TYPE_DARK | BIT_TYPE_FIRE, BIT_TYPE_FAIRY | BIT_TYPE_FIRE, BIT_TYPE_FIGHTING | BIT_TYPE_FIRE, BIT_TYPE_DARK | BIT_TYPE_ROCK, BIT_TYPE_FAIRY | BIT_TYPE_ROCK, BIT_TYPE_FIGHTING | BIT_TYPE_ROCK, BIT_TYPE_DARK | BIT_TYPE_WATER, BIT_TYPE_FAIRY | BIT_TYPE_WATER, BIT_TYPE_FIGHTING | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sElectricFireResists[] =
{
    BIT_TYPE_DRAGON, BIT_TYPE_DRAGON | BIT_TYPE_FIRE, BIT_TYPE_ELECTRIC | BIT_TYPE_FIRE, BIT_TYPE_DRAGON | BIT_TYPE_ROCK, BIT_TYPE_ELECTRIC | BIT_TYPE_ROCK, BIT_TYPE_NONE
};

static const u32 sFairyFireResists[] =
{
    BIT_TYPE_FIRE, BIT_TYPE_FIRE | BIT_TYPE_ROCK, BIT_TYPE_POISON | BIT_TYPE_ROCK, BIT_TYPE_FIRE | BIT_TYPE_WATER, BIT_TYPE_POISON | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sFightingFireResists[] =
{
    BIT_TYPE_DRAGON | BIT_TYPE_FAIRY, BIT_TYPE_DRAGON | BIT_TYPE_FLYING, BIT_TYPE_DRAGON | BIT_TYPE_POISON, BIT_TYPE_DRAGON | BIT_TYPE_PSYCHIC, BIT_TYPE_FAIRY | BIT_TYPE_FIRE, BIT_TYPE_FIRE | BIT_TYPE_FLYING, BIT_TYPE_FIRE | BIT_TYPE_POISON, BIT_TYPE_FIRE | BIT_TYPE_PSYCHIC, BIT_TYPE_FAIRY | BIT_TYPE_WATER, BIT_TYPE_FLYING | BIT_TYPE_WATER, BIT_TYPE_POISON | BIT_TYPE_WATER, BIT_TYPE_PSYCHIC | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sFireFlyingResists[] =
{
    BIT_TYPE_DRAGON | BIT_TYPE_ELECTRIC, BIT_TYPE_DRAGON | BIT_TYPE_ROCK, BIT_TYPE_ELECTRIC | BIT_TYPE_FIRE, BIT_TYPE_FIRE | BIT_TYPE_ROCK, BIT_TYPE_ROCK, BIT_TYPE_ELECTRIC | BIT_TYPE_WATER, BIT_TYPE_ROCK | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sFireGhostResists[] =
{
    BIT_TYPE_DARK | BIT_TYPE_DRAGON, BIT_TYPE_DARK | BIT_TYPE_FIRE, BIT_TYPE_DARK | BIT_TYPE_ROCK, BIT_TYPE_DARK | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sFireGrassResists[] =
{
    BIT_TYPE_DRAGON, BIT_TYPE_FIRE, BIT_TYPE_NONE
};

static const u32 sFireGrassDoubleResists[] =
{
    BIT_TYPE_DRAGON | BIT_TYPE_FIRE, BIT_TYPE_NONE
};

static const u32 sFireIceResists[] =
{
    BIT_TYPE_FIRE, BIT_TYPE_FIRE | BIT_TYPE_ROCK, BIT_TYPE_ROCK | BIT_TYPE_WATER, BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sFireIceDoubleResists[] =
{
    BIT_TYPE_FIRE | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sFireNormalResists[] =
{
    BIT_TYPE_DRAGON | BIT_TYPE_ROCK, BIT_TYPE_FIRE | BIT_TYPE_ROCK, BIT_TYPE_ROCK, BIT_TYPE_ROCK | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sFirePoisonResists[] =
{
    BIT_TYPE_DRAGON | BIT_TYPE_GHOST, BIT_TYPE_DRAGON | BIT_TYPE_GROUND, BIT_TYPE_DRAGON | BIT_TYPE_POISON, BIT_TYPE_DRAGON | BIT_TYPE_ROCK, BIT_TYPE_FIRE | BIT_TYPE_GHOST, BIT_TYPE_FIRE | BIT_TYPE_GROUND, BIT_TYPE_FIRE | BIT_TYPE_POISON, BIT_TYPE_FIRE | BIT_TYPE_ROCK, BIT_TYPE_ROCK, BIT_TYPE_GHOST | BIT_TYPE_WATER, BIT_TYPE_GROUND | BIT_TYPE_WATER, BIT_TYPE_POISON | BIT_TYPE_WATER, BIT_TYPE_ROCK | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sFirePsychicResists[] =
{
    BIT_TYPE_DRAGON | BIT_TYPE_PSYCHIC, BIT_TYPE_FIRE | BIT_TYPE_PSYCHIC, BIT_TYPE_PSYCHIC | BIT_TYPE_ROCK, BIT_TYPE_PSYCHIC | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sFireRockResists[] =
{
    BIT_TYPE_DRAGON | BIT_TYPE_FIGHTING, BIT_TYPE_DRAGON | BIT_TYPE_GROUND, BIT_TYPE_FIGHTING | BIT_TYPE_ROCK, BIT_TYPE_GROUND | BIT_TYPE_ROCK, BIT_TYPE_FIGHTING | BIT_TYPE_WATER, BIT_TYPE_GROUND | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sFireSteelResists[] =
{
    BIT_TYPE_DRAGON | BIT_TYPE_ELECTRIC, BIT_TYPE_DRAGON | BIT_TYPE_FIRE, BIT_TYPE_DRAGON | BIT_TYPE_WATER, BIT_TYPE_FIRE, BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sFireSteelDoubleResists[] =
{
    BIT_TYPE_FIRE | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sFireWaterResists[] =
{
    BIT_TYPE_DRAGON, BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sFireWaterDoubleResists[] =
{
    BIT_TYPE_DRAGON | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sBugFlyingResists[] =
{
    BIT_TYPE_ELECTRIC | BIT_TYPE_FAIRY, BIT_TYPE_ELECTRIC | BIT_TYPE_FIRE, BIT_TYPE_ELECTRIC | BIT_TYPE_FLYING, BIT_TYPE_ELECTRIC | BIT_TYPE_GHOST, BIT_TYPE_ELECTRIC | BIT_TYPE_POISON, BIT_TYPE_ELECTRIC | BIT_TYPE_STEEL, BIT_TYPE_FAIRY | BIT_TYPE_ROCK, BIT_TYPE_FIRE | BIT_TYPE_ROCK, BIT_TYPE_FLYING | BIT_TYPE_ROCK, BIT_TYPE_GHOST | BIT_TYPE_ROCK, BIT_TYPE_POISON | BIT_TYPE_ROCK, BIT_TYPE_ROCK | BIT_TYPE_STEEL, BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sDarkFlyingResists[] =
{
    BIT_TYPE_DARK | BIT_TYPE_ELECTRIC, BIT_TYPE_ELECTRIC | BIT_TYPE_FAIRY, BIT_TYPE_DARK | BIT_TYPE_ROCK, BIT_TYPE_FAIRY | BIT_TYPE_ROCK, BIT_TYPE_DARK | BIT_TYPE_STEEL, BIT_TYPE_FAIRY | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sDragonFlyingResists[] =
{
    BIT_TYPE_ELECTRIC | BIT_TYPE_STEEL, BIT_TYPE_ROCK | BIT_TYPE_STEEL, BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sElectricFlyingResists[] =
{
    BIT_TYPE_ELECTRIC, BIT_TYPE_DRAGON | BIT_TYPE_ROCK, BIT_TYPE_ELECTRIC | BIT_TYPE_ROCK, BIT_TYPE_DRAGON | BIT_TYPE_STEEL, BIT_TYPE_ELECTRIC | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sFairyFlyingResists[] =
{
    BIT_TYPE_ELECTRIC | BIT_TYPE_FIRE, BIT_TYPE_ELECTRIC | BIT_TYPE_POISON, BIT_TYPE_ELECTRIC | BIT_TYPE_STEEL, BIT_TYPE_FIRE | BIT_TYPE_ROCK, BIT_TYPE_POISON | BIT_TYPE_ROCK, BIT_TYPE_ROCK | BIT_TYPE_STEEL, BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sFightingFlyingResists[] =
{
    BIT_TYPE_ELECTRIC | BIT_TYPE_FAIRY, BIT_TYPE_ELECTRIC | BIT_TYPE_FLYING, BIT_TYPE_ELECTRIC | BIT_TYPE_POISON, BIT_TYPE_ELECTRIC | BIT_TYPE_PSYCHIC, BIT_TYPE_NONE
};

static const u32 sFireFlyingResists[] =
{
    BIT_TYPE_DRAGON | BIT_TYPE_ELECTRIC, BIT_TYPE_ELECTRIC | BIT_TYPE_FIRE, BIT_TYPE_ELECTRIC | BIT_TYPE_ROCK, BIT_TYPE_ELECTRIC | BIT_TYPE_WATER, BIT_TYPE_ROCK, BIT_TYPE_NONE
};

static const u32 sFlyingGhostResists[] =
{
    BIT_TYPE_DARK | BIT_TYPE_ELECTRIC, BIT_TYPE_DARK | BIT_TYPE_ROCK, BIT_TYPE_DARK | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sFlyingGrassResists[] =
{
    BIT_TYPE_DRAGON | BIT_TYPE_ELECTRIC, BIT_TYPE_ELECTRIC | BIT_TYPE_FIRE, BIT_TYPE_ELECTRIC | BIT_TYPE_FLYING, BIT_TYPE_ELECTRIC | BIT_TYPE_POISON, BIT_TYPE_ELECTRIC | BIT_TYPE_STEEL, BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sFlyingIceResists[] =
{
    BIT_TYPE_ELECTRIC | BIT_TYPE_FIRE, BIT_TYPE_ELECTRIC | BIT_TYPE_ICE, BIT_TYPE_ELECTRIC | BIT_TYPE_STEEL, BIT_TYPE_ELECTRIC | BIT_TYPE_WATER, BIT_TYPE_FIRE | BIT_TYPE_ROCK, BIT_TYPE_ICE | BIT_TYPE_ROCK, BIT_TYPE_ROCK | BIT_TYPE_STEEL, BIT_TYPE_ROCK | BIT_TYPE_WATER, BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sFlyingNormalResists[] =
{
    BIT_TYPE_ELECTRIC | BIT_TYPE_ROCK, BIT_TYPE_ELECTRIC | BIT_TYPE_STEEL, BIT_TYPE_ROCK, BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sFlyingNormalDoubleResists[] =
{
    BIT_TYPE_ROCK | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sFlyingPoisonResists[] =
{
    BIT_TYPE_ELECTRIC | BIT_TYPE_GHOST, BIT_TYPE_ELECTRIC | BIT_TYPE_GROUND, BIT_TYPE_ELECTRIC | BIT_TYPE_POISON, BIT_TYPE_ELECTRIC | BIT_TYPE_ROCK, BIT_TYPE_ROCK, BIT_TYPE_GHOST | BIT_TYPE_STEEL, BIT_TYPE_GROUND | BIT_TYPE_STEEL, BIT_TYPE_POISON | BIT_TYPE_STEEL, BIT_TYPE_ROCK | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sFlyingPsychicResists[] =
{
    BIT_TYPE_ELECTRIC | BIT_TYPE_PSYCHIC, BIT_TYPE_ELECTRIC | BIT_TYPE_STEEL, BIT_TYPE_PSYCHIC | BIT_TYPE_ROCK, BIT_TYPE_ROCK | BIT_TYPE_STEEL, BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sFlyingRockResists[] =
{
    BIT_TYPE_ELECTRIC | BIT_TYPE_GROUND, BIT_TYPE_ELECTRIC | BIT_TYPE_STEEL, BIT_TYPE_GROUND | BIT_TYPE_ROCK, BIT_TYPE_ROCK | BIT_TYPE_STEEL, BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sFlyingSteelResists[] =
{
    BIT_TYPE_ELECTRIC, BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sFlyingSteelDoubleResists[] =
{
    BIT_TYPE_ELECTRIC | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sFlyingWaterResists[] =
{
    BIT_TYPE_DRAGON | BIT_TYPE_ELECTRIC, BIT_TYPE_ELECTRIC | BIT_TYPE_WATER, BIT_TYPE_DRAGON | BIT_TYPE_STEEL, BIT_TYPE_STEEL | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sDarkGhostResists[] =
{
    BIT_TYPE_DARK, BIT_TYPE_NONE
};

static const u32 sDragonGhostResists[] =
{
    BIT_TYPE_DARK | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sDragonGhostImmunities[] =
{
    BIT_TYPE_FAIRY | BIT_TYPE_NORMAL, BIT_TYPE_NONE
};

static const u32 sElectricGhostResists[] =
{
    BIT_TYPE_DARK | BIT_TYPE_DRAGON, BIT_TYPE_DARK | BIT_TYPE_ELECTRIC, BIT_TYPE_DARK | BIT_TYPE_GRASS, BIT_TYPE_NONE
};

static const u32 sElectricGhostImmunities[] =
{
    BIT_TYPE_GROUND | BIT_TYPE_NORMAL, BIT_TYPE_NONE
};

static const u32 sFightingGhostImmunities[] =
{
    BIT_TYPE_GHOST | BIT_TYPE_NORMAL, BIT_TYPE_NONE
};

static const u32 sFireGhostResists[] =
{
    BIT_TYPE_DARK | BIT_TYPE_DRAGON, BIT_TYPE_DARK | BIT_TYPE_FIRE, BIT_TYPE_DARK | BIT_TYPE_ROCK, BIT_TYPE_DARK | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sFlyingGhostResists[] =
{
    BIT_TYPE_DARK | BIT_TYPE_ELECTRIC, BIT_TYPE_DARK | BIT_TYPE_ROCK, BIT_TYPE_DARK | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sGhostGrassResists[] =
{
    BIT_TYPE_BUG | BIT_TYPE_DARK, BIT_TYPE_DARK | BIT_TYPE_DRAGON, BIT_TYPE_DARK | BIT_TYPE_FIRE, BIT_TYPE_DARK | BIT_TYPE_FLYING, BIT_TYPE_DARK | BIT_TYPE_GRASS, BIT_TYPE_DARK | BIT_TYPE_POISON, BIT_TYPE_DARK | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sGhostGroundResists[] =
{
    BIT_TYPE_BUG | BIT_TYPE_DARK, BIT_TYPE_DARK | BIT_TYPE_GRASS, BIT_TYPE_NONE
};

static const u32 sGhostGroundImmunities[] =
{
    BIT_TYPE_FLYING | BIT_TYPE_NORMAL, BIT_TYPE_NONE
};

static const u32 sGhostIceResists[] =
{
    BIT_TYPE_DARK | BIT_TYPE_FIRE, BIT_TYPE_DARK | BIT_TYPE_ICE, BIT_TYPE_DARK | BIT_TYPE_STEEL, BIT_TYPE_DARK | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sGhostNormalResists[] =
{
    BIT_TYPE_DARK | BIT_TYPE_ROCK, BIT_TYPE_DARK | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sGhostNormalImmunities[] =
{
    BIT_TYPE_GHOST | BIT_TYPE_NORMAL, BIT_TYPE_NONE
};

static const u32 sGhostPoisonResists[] =
{
    BIT_TYPE_DARK | BIT_TYPE_GROUND, BIT_TYPE_DARK | BIT_TYPE_POISON, BIT_TYPE_DARK | BIT_TYPE_ROCK, BIT_TYPE_NONE
};

static const u32 sGhostPoisonImmunities[] =
{
    BIT_TYPE_NORMAL | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sGhostPsychicResists[] =
{
    BIT_TYPE_DARK | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sGhostPsychicImmunities[] =
{
    BIT_TYPE_DARK | BIT_TYPE_NORMAL, BIT_TYPE_NONE
};

static const u32 sGhostRockResists[] =
{
    BIT_TYPE_DARK | BIT_TYPE_FIGHTING, BIT_TYPE_DARK | BIT_TYPE_GROUND, BIT_TYPE_DARK | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sGhostSteelResists[] =
{
    BIT_TYPE_DARK | BIT_TYPE_ELECTRIC, BIT_TYPE_DARK | BIT_TYPE_FIRE, BIT_TYPE_DARK | BIT_TYPE_STEEL, BIT_TYPE_DARK | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sGhostWaterResists[] =
{
    BIT_TYPE_DARK | BIT_TYPE_DRAGON, BIT_TYPE_DARK | BIT_TYPE_GRASS, BIT_TYPE_DARK | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sBugGrassResists[] =
{
    BIT_TYPE_BUG | BIT_TYPE_FAIRY, BIT_TYPE_BUG | BIT_TYPE_FIGHTING, BIT_TYPE_BUG | BIT_TYPE_FIRE, BIT_TYPE_BUG | BIT_TYPE_FLYING, BIT_TYPE_BUG | BIT_TYPE_GHOST, BIT_TYPE_BUG | BIT_TYPE_POISON, BIT_TYPE_BUG | BIT_TYPE_STEEL, BIT_TYPE_DRAGON | BIT_TYPE_FAIRY, BIT_TYPE_DRAGON | BIT_TYPE_FIGHTING, BIT_TYPE_DRAGON | BIT_TYPE_FIRE, BIT_TYPE_DRAGON | BIT_TYPE_FLYING, BIT_TYPE_DRAGON | BIT_TYPE_GHOST, BIT_TYPE_DRAGON | BIT_TYPE_POISON, BIT_TYPE_DRAGON | BIT_TYPE_STEEL, BIT_TYPE_FIRE, BIT_TYPE_FLYING, BIT_TYPE_POISON, BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sBugGrassDoubleResists[] =
{
    BIT_TYPE_FIRE | BIT_TYPE_FLYING, BIT_TYPE_FIRE | BIT_TYPE_POISON, BIT_TYPE_FIRE | BIT_TYPE_STEEL, BIT_TYPE_FLYING | BIT_TYPE_POISON, BIT_TYPE_FLYING | BIT_TYPE_STEEL, BIT_TYPE_POISON | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sDarkGrassResists[] =
{
    BIT_TYPE_BUG | BIT_TYPE_DARK, BIT_TYPE_BUG | BIT_TYPE_FAIRY, BIT_TYPE_BUG | BIT_TYPE_FIGHTING, BIT_TYPE_DARK | BIT_TYPE_DRAGON, BIT_TYPE_DRAGON | BIT_TYPE_FAIRY, BIT_TYPE_DRAGON | BIT_TYPE_FIGHTING, BIT_TYPE_DARK | BIT_TYPE_FIRE, BIT_TYPE_FAIRY | BIT_TYPE_FIRE, BIT_TYPE_FIGHTING | BIT_TYPE_FIRE, BIT_TYPE_DARK | BIT_TYPE_FLYING, BIT_TYPE_FAIRY | BIT_TYPE_FLYING, BIT_TYPE_FIGHTING | BIT_TYPE_FLYING, BIT_TYPE_DARK | BIT_TYPE_GRASS, BIT_TYPE_FAIRY | BIT_TYPE_GRASS, BIT_TYPE_FIGHTING | BIT_TYPE_GRASS, BIT_TYPE_DARK | BIT_TYPE_POISON, BIT_TYPE_FAIRY | BIT_TYPE_POISON, BIT_TYPE_FIGHTING | BIT_TYPE_POISON, BIT_TYPE_DARK | BIT_TYPE_STEEL, BIT_TYPE_FAIRY | BIT_TYPE_STEEL, BIT_TYPE_FIGHTING | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sDragonGrassResists[] =
{
    BIT_TYPE_BUG | BIT_TYPE_STEEL, BIT_TYPE_FIRE | BIT_TYPE_STEEL, BIT_TYPE_FLYING | BIT_TYPE_STEEL, BIT_TYPE_GRASS | BIT_TYPE_STEEL, BIT_TYPE_POISON | BIT_TYPE_STEEL, BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sElectricGrassResists[] =
{
    BIT_TYPE_BUG | BIT_TYPE_DRAGON, BIT_TYPE_BUG | BIT_TYPE_ELECTRIC, BIT_TYPE_BUG | BIT_TYPE_GRASS, BIT_TYPE_DRAGON, BIT_TYPE_DRAGON | BIT_TYPE_FIRE, BIT_TYPE_ELECTRIC | BIT_TYPE_FIRE, BIT_TYPE_FIRE | BIT_TYPE_GRASS, BIT_TYPE_GRASS, BIT_TYPE_DRAGON | BIT_TYPE_POISON, BIT_TYPE_ELECTRIC | BIT_TYPE_POISON, BIT_TYPE_GRASS | BIT_TYPE_POISON, BIT_TYPE_DRAGON | BIT_TYPE_STEEL, BIT_TYPE_ELECTRIC | BIT_TYPE_STEEL, BIT_TYPE_GRASS | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sElectricGrassDoubleResists[] =
{
    BIT_TYPE_DRAGON | BIT_TYPE_GRASS, BIT_TYPE_NONE
};

static const u32 sFairyGrassResists[] =
{
    BIT_TYPE_BUG | BIT_TYPE_FIRE, BIT_TYPE_BUG | BIT_TYPE_POISON, BIT_TYPE_BUG | BIT_TYPE_STEEL, BIT_TYPE_FIRE, BIT_TYPE_FIRE | BIT_TYPE_FLYING, BIT_TYPE_FLYING | BIT_TYPE_POISON, BIT_TYPE_FLYING | BIT_TYPE_STEEL, BIT_TYPE_FIRE | BIT_TYPE_GRASS, BIT_TYPE_GRASS | BIT_TYPE_POISON, BIT_TYPE_GRASS | BIT_TYPE_STEEL, BIT_TYPE_POISON, BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sFairyGrassDoubleResists[] =
{
    BIT_TYPE_FIRE | BIT_TYPE_POISON, BIT_TYPE_FIRE | BIT_TYPE_STEEL, BIT_TYPE_POISON | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sFightingGrassResists[] =
{
    BIT_TYPE_BUG, BIT_TYPE_BUG | BIT_TYPE_DRAGON, BIT_TYPE_DRAGON | BIT_TYPE_FAIRY, BIT_TYPE_DRAGON | BIT_TYPE_FLYING, BIT_TYPE_DRAGON | BIT_TYPE_POISON, BIT_TYPE_DRAGON | BIT_TYPE_PSYCHIC, BIT_TYPE_BUG | BIT_TYPE_FIRE, BIT_TYPE_FAIRY | BIT_TYPE_FIRE, BIT_TYPE_FIRE | BIT_TYPE_FLYING, BIT_TYPE_FIRE | BIT_TYPE_POISON, BIT_TYPE_FIRE | BIT_TYPE_PSYCHIC, BIT_TYPE_FLYING, BIT_TYPE_BUG | BIT_TYPE_GRASS, BIT_TYPE_FAIRY | BIT_TYPE_GRASS, BIT_TYPE_FLYING | BIT_TYPE_GRASS, BIT_TYPE_GRASS | BIT_TYPE_POISON, BIT_TYPE_GRASS | BIT_TYPE_PSYCHIC, BIT_TYPE_POISON, BIT_TYPE_NONE
};

static const u32 sFightingGrassDoubleResists[] =
{
    BIT_TYPE_BUG | BIT_TYPE_FLYING, BIT_TYPE_BUG | BIT_TYPE_POISON, BIT_TYPE_FLYING | BIT_TYPE_POISON, BIT_TYPE_NONE
};

static const u32 sFireGrassResists[] =
{
    BIT_TYPE_DRAGON, BIT_TYPE_FIRE, BIT_TYPE_DRAGON | BIT_TYPE_FLYING, BIT_TYPE_FIRE | BIT_TYPE_FLYING, BIT_TYPE_DRAGON | BIT_TYPE_POISON, BIT_TYPE_FIRE | BIT_TYPE_POISON, BIT_TYPE_NONE
};

static const u32 sFireGrassDoubleResists[] =
{
    BIT_TYPE_DRAGON | BIT_TYPE_FIRE, BIT_TYPE_NONE
};

static const u32 sFlyingGrassResists[] =
{
    BIT_TYPE_DRAGON | BIT_TYPE_ELECTRIC, BIT_TYPE_DRAGON | BIT_TYPE_STEEL, BIT_TYPE_ELECTRIC | BIT_TYPE_FIRE, BIT_TYPE_FIRE | BIT_TYPE_STEEL, BIT_TYPE_ELECTRIC | BIT_TYPE_FLYING, BIT_TYPE_FLYING | BIT_TYPE_STEEL, BIT_TYPE_ELECTRIC | BIT_TYPE_POISON, BIT_TYPE_POISON | BIT_TYPE_STEEL, BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sGhostGrassResists[] =
{
    BIT_TYPE_BUG | BIT_TYPE_DARK, BIT_TYPE_DARK | BIT_TYPE_DRAGON, BIT_TYPE_DARK | BIT_TYPE_FIRE, BIT_TYPE_DARK | BIT_TYPE_FLYING, BIT_TYPE_DARK | BIT_TYPE_GRASS, BIT_TYPE_DARK | BIT_TYPE_POISON, BIT_TYPE_DARK | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sGrassGroundResists[] =
{
    BIT_TYPE_BUG, BIT_TYPE_BUG | BIT_TYPE_DRAGON, BIT_TYPE_DRAGON | BIT_TYPE_GRASS, BIT_TYPE_BUG | BIT_TYPE_FLYING, BIT_TYPE_FLYING | BIT_TYPE_GRASS, BIT_TYPE_GRASS, BIT_TYPE_NONE
};

static const u32 sGrassGroundDoubleResists[] =
{
    BIT_TYPE_BUG | BIT_TYPE_GRASS, BIT_TYPE_NONE
};

static const u32 sGrassIceResists[] =
{
    BIT_TYPE_BUG | BIT_TYPE_FIRE, BIT_TYPE_BUG | BIT_TYPE_ICE, BIT_TYPE_BUG | BIT_TYPE_STEEL, BIT_TYPE_FIRE, BIT_TYPE_FIRE | BIT_TYPE_POISON, BIT_TYPE_ICE | BIT_TYPE_POISON, BIT_TYPE_POISON | BIT_TYPE_STEEL, BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sGrassIceDoubleResists[] =
{
    BIT_TYPE_FIRE | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sGrassNormalResists[] =
{
    BIT_TYPE_BUG | BIT_TYPE_STEEL, BIT_TYPE_DRAGON | BIT_TYPE_STEEL, BIT_TYPE_FIRE | BIT_TYPE_STEEL, BIT_TYPE_FLYING | BIT_TYPE_STEEL, BIT_TYPE_GRASS | BIT_TYPE_STEEL, BIT_TYPE_POISON | BIT_TYPE_STEEL, BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sGrassPoisonResists[] =
{
    BIT_TYPE_BUG | BIT_TYPE_GHOST, BIT_TYPE_BUG | BIT_TYPE_POISON, BIT_TYPE_DRAGON | BIT_TYPE_GHOST, BIT_TYPE_DRAGON | BIT_TYPE_POISON, BIT_TYPE_FIRE | BIT_TYPE_GHOST, BIT_TYPE_FIRE | BIT_TYPE_POISON, BIT_TYPE_FLYING | BIT_TYPE_GHOST, BIT_TYPE_FLYING | BIT_TYPE_POISON, BIT_TYPE_POISON, BIT_TYPE_GHOST | BIT_TYPE_STEEL, BIT_TYPE_POISON | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sGrassPsychicResists[] =
{
    BIT_TYPE_BUG | BIT_TYPE_PSYCHIC, BIT_TYPE_BUG | BIT_TYPE_STEEL, BIT_TYPE_DRAGON | BIT_TYPE_PSYCHIC, BIT_TYPE_DRAGON | BIT_TYPE_STEEL, BIT_TYPE_FIRE | BIT_TYPE_PSYCHIC, BIT_TYPE_FIRE | BIT_TYPE_STEEL, BIT_TYPE_FLYING | BIT_TYPE_PSYCHIC, BIT_TYPE_FLYING | BIT_TYPE_STEEL, BIT_TYPE_GRASS | BIT_TYPE_PSYCHIC, BIT_TYPE_GRASS | BIT_TYPE_STEEL, BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sGrassRockResists[] =
{
    BIT_TYPE_DRAGON | BIT_TYPE_FIGHTING, BIT_TYPE_DRAGON | BIT_TYPE_STEEL, BIT_TYPE_FIGHTING | BIT_TYPE_GRASS, BIT_TYPE_GRASS | BIT_TYPE_STEEL, BIT_TYPE_FIGHTING | BIT_TYPE_POISON, BIT_TYPE_POISON | BIT_TYPE_STEEL, BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sGrassSteelResists[] =
{
    BIT_TYPE_BUG | BIT_TYPE_ELECTRIC, BIT_TYPE_BUG | BIT_TYPE_FIRE, BIT_TYPE_BUG | BIT_TYPE_STEEL, BIT_TYPE_DRAGON | BIT_TYPE_ELECTRIC, BIT_TYPE_DRAGON | BIT_TYPE_FIRE, BIT_TYPE_DRAGON | BIT_TYPE_STEEL, BIT_TYPE_FIRE, BIT_TYPE_ELECTRIC | BIT_TYPE_FLYING, BIT_TYPE_FIRE | BIT_TYPE_FLYING, BIT_TYPE_FLYING | BIT_TYPE_STEEL, BIT_TYPE_ELECTRIC | BIT_TYPE_GRASS, BIT_TYPE_FIRE | BIT_TYPE_GRASS, BIT_TYPE_GRASS | BIT_TYPE_STEEL, BIT_TYPE_ELECTRIC | BIT_TYPE_POISON, BIT_TYPE_FIRE | BIT_TYPE_POISON, BIT_TYPE_POISON | BIT_TYPE_STEEL, BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sGrassSteelDoubleResists[] =
{
    BIT_TYPE_FIRE | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sGrassWaterResists[] =
{
    BIT_TYPE_BUG | BIT_TYPE_DRAGON, BIT_TYPE_BUG | BIT_TYPE_GRASS, BIT_TYPE_DRAGON, BIT_TYPE_DRAGON | BIT_TYPE_FLYING, BIT_TYPE_FLYING | BIT_TYPE_GRASS, BIT_TYPE_GRASS, BIT_TYPE_DRAGON | BIT_TYPE_POISON, BIT_TYPE_GRASS | BIT_TYPE_POISON, BIT_TYPE_DRAGON | BIT_TYPE_STEEL, BIT_TYPE_GRASS | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sGrassWaterDoubleResists[] =
{
    BIT_TYPE_DRAGON | BIT_TYPE_GRASS, BIT_TYPE_NONE
};

static const u32 sBugGroundResists[] =
{
    BIT_TYPE_BUG | BIT_TYPE_FAIRY, BIT_TYPE_BUG | BIT_TYPE_FIGHTING, BIT_TYPE_BUG | BIT_TYPE_FLYING, BIT_TYPE_BUG | BIT_TYPE_GHOST, BIT_TYPE_NONE
};

static const u32 sDarkGroundResists[] =
{
    BIT_TYPE_BUG | BIT_TYPE_DARK, BIT_TYPE_BUG | BIT_TYPE_FAIRY, BIT_TYPE_BUG | BIT_TYPE_FIGHTING, BIT_TYPE_DARK | BIT_TYPE_GRASS, BIT_TYPE_FAIRY | BIT_TYPE_GRASS, BIT_TYPE_FIGHTING | BIT_TYPE_GRASS, BIT_TYPE_NONE
};

static const u32 sDragonGroundImmunities[] =
{
    BIT_TYPE_FAIRY | BIT_TYPE_FLYING, BIT_TYPE_NONE
};

static const u32 sElectricGroundResists[] =
{
    BIT_TYPE_BUG | BIT_TYPE_DRAGON, BIT_TYPE_BUG | BIT_TYPE_GRASS, BIT_TYPE_GRASS, BIT_TYPE_NONE
};

static const u32 sElectricGroundImmunities[] =
{
    BIT_TYPE_FLYING | BIT_TYPE_GROUND, BIT_TYPE_NONE
};

static const u32 sFightingGroundResists[] =
{
    BIT_TYPE_BUG, BIT_TYPE_BUG | BIT_TYPE_GRASS, BIT_TYPE_FAIRY | BIT_TYPE_GRASS, BIT_TYPE_FLYING | BIT_TYPE_GRASS, BIT_TYPE_GRASS | BIT_TYPE_PSYCHIC, BIT_TYPE_NONE
};

static const u32 sFightingGroundImmunities[] =
{
    BIT_TYPE_FLYING | BIT_TYPE_GHOST, BIT_TYPE_NONE
};

static const u32 sGhostGroundResists[] =
{
    BIT_TYPE_BUG | BIT_TYPE_DARK, BIT_TYPE_DARK | BIT_TYPE_GRASS, BIT_TYPE_NONE
};

static const u32 sGhostGroundImmunities[] =
{
    BIT_TYPE_FLYING | BIT_TYPE_NORMAL, BIT_TYPE_NONE
};

static const u32 sGrassGroundResists[] =
{
    BIT_TYPE_BUG, BIT_TYPE_GRASS, BIT_TYPE_NONE
};

static const u32 sGrassGroundDoubleResists[] =
{
    BIT_TYPE_BUG | BIT_TYPE_GRASS, BIT_TYPE_NONE
};

static const u32 sGroundIceResists[] =
{
    BIT_TYPE_BUG | BIT_TYPE_ICE, BIT_TYPE_BUG | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sGroundNormalImmunities[] =
{
    BIT_TYPE_FLYING | BIT_TYPE_GHOST, BIT_TYPE_NONE
};

static const u32 sGroundPoisonResists[] =
{
    BIT_TYPE_BUG | BIT_TYPE_GHOST, BIT_TYPE_BUG | BIT_TYPE_GROUND, BIT_TYPE_NONE
};

static const u32 sGroundPoisonImmunities[] =
{
    BIT_TYPE_FLYING | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sGroundPsychicResists[] =
{
    BIT_TYPE_BUG | BIT_TYPE_PSYCHIC, BIT_TYPE_GRASS | BIT_TYPE_PSYCHIC, BIT_TYPE_NONE
};

static const u32 sGroundPsychicImmunities[] =
{
    BIT_TYPE_DARK | BIT_TYPE_FLYING, BIT_TYPE_NONE
};

static const u32 sGroundRockResists[] =
{
    BIT_TYPE_FIGHTING | BIT_TYPE_GRASS, BIT_TYPE_GRASS | BIT_TYPE_GROUND, BIT_TYPE_NONE
};

static const u32 sGroundSteelResists[] =
{
    BIT_TYPE_BUG | BIT_TYPE_WATER, BIT_TYPE_GRASS | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sGroundWaterResists[] =
{
    BIT_TYPE_BUG | BIT_TYPE_DRAGON, BIT_TYPE_BUG | BIT_TYPE_GRASS, BIT_TYPE_BUG | BIT_TYPE_WATER, BIT_TYPE_GRASS, BIT_TYPE_NONE
};

static const u32 sBugIceResists[] =
{
    BIT_TYPE_FIRE, BIT_TYPE_FAIRY | BIT_TYPE_ICE, BIT_TYPE_FIGHTING | BIT_TYPE_ICE, BIT_TYPE_FIRE | BIT_TYPE_ICE, BIT_TYPE_GHOST | BIT_TYPE_ICE, BIT_TYPE_ICE | BIT_TYPE_POISON, BIT_TYPE_ICE | BIT_TYPE_STEEL, BIT_TYPE_STEEL, BIT_TYPE_FAIRY | BIT_TYPE_WATER, BIT_TYPE_FIGHTING | BIT_TYPE_WATER, BIT_TYPE_FIRE | BIT_TYPE_WATER, BIT_TYPE_GHOST | BIT_TYPE_WATER, BIT_TYPE_POISON | BIT_TYPE_WATER, BIT_TYPE_STEEL | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sBugIceDoubleResists[] =
{
    BIT_TYPE_FIRE | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sDarkIceResists[] =
{
    BIT_TYPE_DARK | BIT_TYPE_FIRE, BIT_TYPE_FAIRY | BIT_TYPE_FIRE, BIT_TYPE_FIGHTING | BIT_TYPE_FIRE, BIT_TYPE_DARK | BIT_TYPE_ICE, BIT_TYPE_FAIRY | BIT_TYPE_ICE, BIT_TYPE_FIGHTING | BIT_TYPE_ICE, BIT_TYPE_DARK | BIT_TYPE_STEEL, BIT_TYPE_FAIRY | BIT_TYPE_STEEL, BIT_TYPE_FIGHTING | BIT_TYPE_STEEL, BIT_TYPE_DARK | BIT_TYPE_WATER, BIT_TYPE_FAIRY | BIT_TYPE_WATER, BIT_TYPE_FIGHTING | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sDragonIceResists[] =
{
    BIT_TYPE_FIRE | BIT_TYPE_STEEL, BIT_TYPE_ICE | BIT_TYPE_STEEL, BIT_TYPE_STEEL, BIT_TYPE_STEEL | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sElectricIceResists[] =
{
    BIT_TYPE_ELECTRIC | BIT_TYPE_FIRE, BIT_TYPE_ELECTRIC | BIT_TYPE_ICE, BIT_TYPE_ELECTRIC | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sFairyIceResists[] =
{
    BIT_TYPE_FIRE, BIT_TYPE_FIRE | BIT_TYPE_ICE, BIT_TYPE_ICE | BIT_TYPE_POISON, BIT_TYPE_ICE | BIT_TYPE_STEEL, BIT_TYPE_STEEL, BIT_TYPE_FIRE | BIT_TYPE_WATER, BIT_TYPE_POISON | BIT_TYPE_WATER, BIT_TYPE_STEEL | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sFairyIceDoubleResists[] =
{
    BIT_TYPE_FIRE | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sFightingIceResists[] =
{
    BIT_TYPE_BUG | BIT_TYPE_FIRE, BIT_TYPE_FAIRY | BIT_TYPE_FIRE, BIT_TYPE_FIRE | BIT_TYPE_POISON, BIT_TYPE_FIRE | BIT_TYPE_PSYCHIC, BIT_TYPE_BUG | BIT_TYPE_WATER, BIT_TYPE_FAIRY | BIT_TYPE_WATER, BIT_TYPE_POISON | BIT_TYPE_WATER, BIT_TYPE_PSYCHIC | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sFireIceResists[] =
{
    BIT_TYPE_FIRE, BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sFireIceDoubleResists[] =
{
    BIT_TYPE_FIRE | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sFlyingIceResists[] =
{
    BIT_TYPE_ELECTRIC | BIT_TYPE_FIRE, BIT_TYPE_FIRE | BIT_TYPE_ROCK, BIT_TYPE_FIRE | BIT_TYPE_STEEL, BIT_TYPE_ELECTRIC | BIT_TYPE_ICE, BIT_TYPE_ICE | BIT_TYPE_ROCK, BIT_TYPE_ICE | BIT_TYPE_STEEL, BIT_TYPE_STEEL, BIT_TYPE_ELECTRIC | BIT_TYPE_WATER, BIT_TYPE_ROCK | BIT_TYPE_WATER, BIT_TYPE_STEEL | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sGhostIceResists[] =
{
    BIT_TYPE_DARK | BIT_TYPE_FIRE, BIT_TYPE_DARK | BIT_TYPE_ICE, BIT_TYPE_DARK | BIT_TYPE_STEEL, BIT_TYPE_DARK | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sGrassIceResists[] =
{
    BIT_TYPE_FIRE, BIT_TYPE_BUG | BIT_TYPE_ICE, BIT_TYPE_FIRE | BIT_TYPE_ICE, BIT_TYPE_ICE | BIT_TYPE_POISON, BIT_TYPE_ICE | BIT_TYPE_STEEL, BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sGrassIceDoubleResists[] =
{
    BIT_TYPE_FIRE | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sGroundIceResists[] =
{
    BIT_TYPE_BUG | BIT_TYPE_ICE, BIT_TYPE_BUG | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sIceNormalResists[] =
{
    BIT_TYPE_FIRE | BIT_TYPE_ROCK, BIT_TYPE_FIRE | BIT_TYPE_STEEL, BIT_TYPE_ICE | BIT_TYPE_ROCK, BIT_TYPE_ICE | BIT_TYPE_STEEL, BIT_TYPE_STEEL, BIT_TYPE_ROCK | BIT_TYPE_WATER, BIT_TYPE_STEEL | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sIcePoisonResists[] =
{
    BIT_TYPE_FIRE | BIT_TYPE_GHOST, BIT_TYPE_FIRE | BIT_TYPE_POISON, BIT_TYPE_FIRE | BIT_TYPE_ROCK, BIT_TYPE_GHOST | BIT_TYPE_ICE, BIT_TYPE_ICE | BIT_TYPE_POISON, BIT_TYPE_ICE | BIT_TYPE_ROCK, BIT_TYPE_GHOST | BIT_TYPE_STEEL, BIT_TYPE_POISON | BIT_TYPE_STEEL, BIT_TYPE_ROCK | BIT_TYPE_STEEL, BIT_TYPE_GHOST | BIT_TYPE_WATER, BIT_TYPE_POISON | BIT_TYPE_WATER, BIT_TYPE_ROCK | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sIcePsychicResists[] =
{
    BIT_TYPE_FIRE | BIT_TYPE_PSYCHIC, BIT_TYPE_FIRE | BIT_TYPE_STEEL, BIT_TYPE_ICE | BIT_TYPE_PSYCHIC, BIT_TYPE_ICE | BIT_TYPE_STEEL, BIT_TYPE_STEEL, BIT_TYPE_PSYCHIC | BIT_TYPE_WATER, BIT_TYPE_STEEL | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sIceRockResists[] =
{
    BIT_TYPE_STEEL, BIT_TYPE_FIGHTING | BIT_TYPE_WATER, BIT_TYPE_STEEL | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sIceSteelResists[] =
{
    BIT_TYPE_FIRE, BIT_TYPE_STEEL, BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sIceSteelDoubleResists[] =
{
    BIT_TYPE_FIRE | BIT_TYPE_STEEL, BIT_TYPE_FIRE | BIT_TYPE_WATER, BIT_TYPE_STEEL | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sIceWaterResists[] =
{
    BIT_TYPE_ICE | BIT_TYPE_WATER, BIT_TYPE_STEEL | BIT_TYPE_WATER, BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sBugNormalResists[] =
{
    BIT_TYPE_FAIRY | BIT_TYPE_ROCK, BIT_TYPE_FIGHTING | BIT_TYPE_ROCK, BIT_TYPE_FIRE | BIT_TYPE_ROCK, BIT_TYPE_FLYING | BIT_TYPE_ROCK, BIT_TYPE_GHOST | BIT_TYPE_ROCK, BIT_TYPE_POISON | BIT_TYPE_ROCK, BIT_TYPE_ROCK | BIT_TYPE_STEEL, BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sDarkNormalResists[] =
{
    BIT_TYPE_DARK | BIT_TYPE_ROCK, BIT_TYPE_FAIRY | BIT_TYPE_ROCK, BIT_TYPE_FIGHTING | BIT_TYPE_ROCK, BIT_TYPE_DARK | BIT_TYPE_STEEL, BIT_TYPE_FAIRY | BIT_TYPE_STEEL, BIT_TYPE_FIGHTING | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sDragonNormalResists[] =
{
    BIT_TYPE_ROCK | BIT_TYPE_STEEL, BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sDragonNormalImmunities[] =
{
    BIT_TYPE_FAIRY | BIT_TYPE_GHOST, BIT_TYPE_NONE
};

static const u32 sElectricNormalResists[] =
{
    BIT_TYPE_DRAGON | BIT_TYPE_ROCK, BIT_TYPE_ELECTRIC | BIT_TYPE_ROCK, BIT_TYPE_GRASS | BIT_TYPE_ROCK, BIT_TYPE_DRAGON | BIT_TYPE_STEEL, BIT_TYPE_ELECTRIC | BIT_TYPE_STEEL, BIT_TYPE_GRASS | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sElectricNormalImmunities[] =
{
    BIT_TYPE_GHOST | BIT_TYPE_GROUND, BIT_TYPE_NONE
};

static const u32 sFairyNormalResists[] =
{
    BIT_TYPE_FIRE | BIT_TYPE_ROCK, BIT_TYPE_POISON | BIT_TYPE_ROCK, BIT_TYPE_ROCK | BIT_TYPE_STEEL, BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sFireNormalResists[] =
{
    BIT_TYPE_ROCK, BIT_TYPE_NONE
};

static const u32 sFlyingNormalResists[] =
{
    BIT_TYPE_ROCK, BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sFlyingNormalDoubleResists[] =
{
    BIT_TYPE_ROCK | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sGhostNormalResists[] =
{
    BIT_TYPE_DARK | BIT_TYPE_ROCK, BIT_TYPE_DARK | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sGhostNormalImmunities[] =
{
    BIT_TYPE_GHOST | BIT_TYPE_NORMAL, BIT_TYPE_NONE
};

static const u32 sGrassNormalResists[] =
{
    BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sGroundNormalImmunities[] =
{
    BIT_TYPE_FLYING | BIT_TYPE_GHOST, BIT_TYPE_NONE
};

static const u32 sIceNormalResists[] =
{
    BIT_TYPE_FIRE | BIT_TYPE_ROCK, BIT_TYPE_ICE | BIT_TYPE_ROCK, BIT_TYPE_ROCK | BIT_TYPE_STEEL, BIT_TYPE_ROCK | BIT_TYPE_WATER, BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sNormalPoisonResists[] =
{
    BIT_TYPE_ROCK, BIT_TYPE_GHOST | BIT_TYPE_STEEL, BIT_TYPE_GROUND | BIT_TYPE_STEEL, BIT_TYPE_POISON | BIT_TYPE_STEEL, BIT_TYPE_ROCK | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sNormalPoisonImmunities[] =
{
    BIT_TYPE_GHOST | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sNormalPsychicResists[] =
{
    BIT_TYPE_PSYCHIC | BIT_TYPE_ROCK, BIT_TYPE_ROCK | BIT_TYPE_STEEL, BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sNormalPsychicImmunities[] =
{
    BIT_TYPE_DARK | BIT_TYPE_GHOST, BIT_TYPE_NONE
};

static const u32 sNormalRockResists[] =
{
    BIT_TYPE_FIGHTING | BIT_TYPE_ROCK, BIT_TYPE_GROUND | BIT_TYPE_ROCK, BIT_TYPE_ROCK | BIT_TYPE_STEEL, BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sNormalSteelResists[] =
{
    BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sNormalWaterResists[] =
{
    BIT_TYPE_DRAGON | BIT_TYPE_STEEL, BIT_TYPE_GRASS | BIT_TYPE_STEEL, BIT_TYPE_STEEL | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sBugPoisonResists[] =
{
    BIT_TYPE_GHOST, BIT_TYPE_FIGHTING | BIT_TYPE_GROUND, BIT_TYPE_FIRE | BIT_TYPE_GROUND, BIT_TYPE_FLYING | BIT_TYPE_GROUND, BIT_TYPE_GHOST | BIT_TYPE_GROUND, BIT_TYPE_GROUND | BIT_TYPE_POISON, BIT_TYPE_GROUND | BIT_TYPE_STEEL, BIT_TYPE_POISON, BIT_TYPE_FIGHTING | BIT_TYPE_ROCK, BIT_TYPE_FIRE | BIT_TYPE_ROCK, BIT_TYPE_FLYING | BIT_TYPE_ROCK, BIT_TYPE_GHOST | BIT_TYPE_ROCK, BIT_TYPE_POISON | BIT_TYPE_ROCK, BIT_TYPE_ROCK | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sBugPoisonDoubleResists[] =
{
    BIT_TYPE_GHOST | BIT_TYPE_POISON, BIT_TYPE_NONE
};

static const u32 sDarkPoisonResists[] =
{
    BIT_TYPE_DARK | BIT_TYPE_GROUND, BIT_TYPE_FIGHTING | BIT_TYPE_GROUND, BIT_TYPE_DARK | BIT_TYPE_POISON, BIT_TYPE_FIGHTING | BIT_TYPE_POISON, BIT_TYPE_DARK | BIT_TYPE_ROCK, BIT_TYPE_FIGHTING | BIT_TYPE_ROCK, BIT_TYPE_NONE
};

static const u32 sDragonPoisonResists[] =
{
    BIT_TYPE_GHOST | BIT_TYPE_STEEL, BIT_TYPE_GROUND | BIT_TYPE_STEEL, BIT_TYPE_POISON | BIT_TYPE_STEEL, BIT_TYPE_ROCK | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sDragonPoisonImmunities[] =
{
    BIT_TYPE_FAIRY | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sElectricPoisonResists[] =
{
    BIT_TYPE_DRAGON | BIT_TYPE_GHOST, BIT_TYPE_ELECTRIC | BIT_TYPE_GHOST, BIT_TYPE_DRAGON | BIT_TYPE_GROUND, BIT_TYPE_ELECTRIC | BIT_TYPE_GROUND, BIT_TYPE_DRAGON | BIT_TYPE_POISON, BIT_TYPE_ELECTRIC | BIT_TYPE_POISON, BIT_TYPE_DRAGON | BIT_TYPE_ROCK, BIT_TYPE_ELECTRIC | BIT_TYPE_ROCK, BIT_TYPE_NONE
};

static const u32 sElectricPoisonImmunities[] =
{
    BIT_TYPE_GROUND | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sFairyPoisonResists[] =
{
    BIT_TYPE_FIRE | BIT_TYPE_GHOST, BIT_TYPE_GHOST | BIT_TYPE_POISON, BIT_TYPE_GHOST | BIT_TYPE_STEEL, BIT_TYPE_FIRE | BIT_TYPE_GROUND, BIT_TYPE_GROUND | BIT_TYPE_POISON, BIT_TYPE_GROUND | BIT_TYPE_STEEL, BIT_TYPE_POISON, BIT_TYPE_FIRE | BIT_TYPE_ROCK, BIT_TYPE_POISON | BIT_TYPE_ROCK, BIT_TYPE_ROCK | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sFightingPoisonResists[] =
{
    BIT_TYPE_BUG | BIT_TYPE_GHOST, BIT_TYPE_FLYING | BIT_TYPE_GHOST, BIT_TYPE_GHOST | BIT_TYPE_POISON, BIT_TYPE_GHOST | BIT_TYPE_PSYCHIC, BIT_TYPE_BUG | BIT_TYPE_GROUND, BIT_TYPE_FLYING | BIT_TYPE_GROUND, BIT_TYPE_GROUND | BIT_TYPE_POISON, BIT_TYPE_GROUND | BIT_TYPE_PSYCHIC, BIT_TYPE_POISON, BIT_TYPE_NONE
};

static const u32 sFightingPoisonImmunities[] =
{
    BIT_TYPE_GHOST | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sFirePoisonResists[] =
{
    BIT_TYPE_DRAGON | BIT_TYPE_GHOST, BIT_TYPE_FIRE | BIT_TYPE_GHOST, BIT_TYPE_GHOST | BIT_TYPE_ROCK, BIT_TYPE_GHOST | BIT_TYPE_WATER, BIT_TYPE_DRAGON | BIT_TYPE_GROUND, BIT_TYPE_FIRE | BIT_TYPE_GROUND, BIT_TYPE_GROUND | BIT_TYPE_ROCK, BIT_TYPE_GROUND | BIT_TYPE_WATER, BIT_TYPE_DRAGON | BIT_TYPE_POISON, BIT_TYPE_FIRE | BIT_TYPE_POISON, BIT_TYPE_POISON | BIT_TYPE_ROCK, BIT_TYPE_POISON | BIT_TYPE_WATER, BIT_TYPE_ROCK, BIT_TYPE_NONE
};

static const u32 sFlyingPoisonResists[] =
{
    BIT_TYPE_ELECTRIC | BIT_TYPE_GHOST, BIT_TYPE_GHOST | BIT_TYPE_ROCK, BIT_TYPE_GHOST | BIT_TYPE_STEEL, BIT_TYPE_ELECTRIC | BIT_TYPE_GROUND, BIT_TYPE_GROUND | BIT_TYPE_ROCK, BIT_TYPE_GROUND | BIT_TYPE_STEEL, BIT_TYPE_ELECTRIC | BIT_TYPE_POISON, BIT_TYPE_POISON | BIT_TYPE_ROCK, BIT_TYPE_POISON | BIT_TYPE_STEEL, BIT_TYPE_ROCK, BIT_TYPE_NONE
};

static const u32 sGhostPoisonResists[] =
{
    BIT_TYPE_DARK | BIT_TYPE_GROUND, BIT_TYPE_DARK | BIT_TYPE_POISON, BIT_TYPE_DARK | BIT_TYPE_ROCK, BIT_TYPE_NONE
};

static const u32 sGhostPoisonImmunities[] =
{
    BIT_TYPE_NORMAL | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sGrassPoisonResists[] =
{
    BIT_TYPE_BUG | BIT_TYPE_GHOST, BIT_TYPE_DRAGON | BIT_TYPE_GHOST, BIT_TYPE_FIRE | BIT_TYPE_GHOST, BIT_TYPE_FLYING | BIT_TYPE_GHOST, BIT_TYPE_GHOST | BIT_TYPE_POISON, BIT_TYPE_GHOST | BIT_TYPE_STEEL, BIT_TYPE_POISON, BIT_TYPE_NONE
};

static const u32 sGroundPoisonResists[] =
{
    BIT_TYPE_BUG | BIT_TYPE_GHOST, BIT_TYPE_BUG | BIT_TYPE_GROUND, BIT_TYPE_NONE
};

static const u32 sGroundPoisonImmunities[] =
{
    BIT_TYPE_FLYING | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sIcePoisonResists[] =
{
    BIT_TYPE_FIRE | BIT_TYPE_GHOST, BIT_TYPE_GHOST | BIT_TYPE_ICE, BIT_TYPE_GHOST | BIT_TYPE_STEEL, BIT_TYPE_GHOST | BIT_TYPE_WATER, BIT_TYPE_FIRE | BIT_TYPE_POISON, BIT_TYPE_ICE | BIT_TYPE_POISON, BIT_TYPE_POISON | BIT_TYPE_STEEL, BIT_TYPE_POISON | BIT_TYPE_WATER, BIT_TYPE_FIRE | BIT_TYPE_ROCK, BIT_TYPE_ICE | BIT_TYPE_ROCK, BIT_TYPE_ROCK | BIT_TYPE_STEEL, BIT_TYPE_ROCK | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sNormalPoisonResists[] =
{
    BIT_TYPE_GHOST | BIT_TYPE_ROCK, BIT_TYPE_GHOST | BIT_TYPE_STEEL, BIT_TYPE_GROUND | BIT_TYPE_ROCK, BIT_TYPE_GROUND | BIT_TYPE_STEEL, BIT_TYPE_POISON | BIT_TYPE_ROCK, BIT_TYPE_POISON | BIT_TYPE_STEEL, BIT_TYPE_ROCK, BIT_TYPE_NONE
};

static const u32 sNormalPoisonImmunities[] =
{
    BIT_TYPE_GHOST | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sPoisonPsychicResists[] =
{
    BIT_TYPE_GHOST | BIT_TYPE_PSYCHIC, BIT_TYPE_GHOST | BIT_TYPE_STEEL, BIT_TYPE_GROUND | BIT_TYPE_PSYCHIC, BIT_TYPE_GROUND | BIT_TYPE_STEEL, BIT_TYPE_PSYCHIC | BIT_TYPE_ROCK, BIT_TYPE_ROCK | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sPoisonPsychicImmunities[] =
{
    BIT_TYPE_DARK | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sPoisonRockResists[] =
{
    BIT_TYPE_FIGHTING | BIT_TYPE_GHOST, BIT_TYPE_GHOST | BIT_TYPE_GROUND, BIT_TYPE_GHOST | BIT_TYPE_STEEL, BIT_TYPE_GROUND, BIT_TYPE_FIGHTING | BIT_TYPE_POISON, BIT_TYPE_GROUND | BIT_TYPE_POISON, BIT_TYPE_POISON | BIT_TYPE_STEEL, BIT_TYPE_FIGHTING | BIT_TYPE_ROCK, BIT_TYPE_GROUND | BIT_TYPE_ROCK, BIT_TYPE_ROCK | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sPoisonSteelResists[] =
{
    BIT_TYPE_ELECTRIC | BIT_TYPE_GHOST, BIT_TYPE_FIRE | BIT_TYPE_GHOST, BIT_TYPE_GHOST | BIT_TYPE_STEEL, BIT_TYPE_GHOST | BIT_TYPE_WATER, BIT_TYPE_ELECTRIC | BIT_TYPE_GROUND, BIT_TYPE_FIRE | BIT_TYPE_GROUND, BIT_TYPE_GROUND | BIT_TYPE_STEEL, BIT_TYPE_GROUND | BIT_TYPE_WATER, BIT_TYPE_ELECTRIC | BIT_TYPE_POISON, BIT_TYPE_FIRE | BIT_TYPE_POISON, BIT_TYPE_POISON | BIT_TYPE_STEEL, BIT_TYPE_POISON | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sPoisonWaterResists[] =
{
    BIT_TYPE_DRAGON | BIT_TYPE_GHOST, BIT_TYPE_GHOST | BIT_TYPE_WATER, BIT_TYPE_DRAGON | BIT_TYPE_POISON, BIT_TYPE_POISON | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sBugPsychicResists[] =
{
    BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sDarkPsychicResists[] =
{
    BIT_TYPE_DARK | BIT_TYPE_STEEL, BIT_TYPE_FAIRY | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sDragonPsychicResists[] =
{
    BIT_TYPE_PSYCHIC | BIT_TYPE_STEEL, BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sDragonPsychicImmunities[] =
{
    BIT_TYPE_DARK | BIT_TYPE_FAIRY, BIT_TYPE_NONE
};

static const u32 sElectricPsychicResists[] =
{
    BIT_TYPE_DRAGON | BIT_TYPE_PSYCHIC, BIT_TYPE_ELECTRIC | BIT_TYPE_PSYCHIC, BIT_TYPE_GRASS | BIT_TYPE_PSYCHIC, BIT_TYPE_DRAGON | BIT_TYPE_STEEL, BIT_TYPE_ELECTRIC | BIT_TYPE_STEEL, BIT_TYPE_GRASS | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sElectricPsychicImmunities[] =
{
    BIT_TYPE_DARK | BIT_TYPE_GROUND, BIT_TYPE_NONE
};

static const u32 sFairyPsychicResists[] =
{
    BIT_TYPE_FIRE | BIT_TYPE_PSYCHIC, BIT_TYPE_PSYCHIC | BIT_TYPE_STEEL, BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sFightingPsychicResists[] =
{
    BIT_TYPE_PSYCHIC, BIT_TYPE_NONE
};

static const u32 sFightingPsychicImmunities[] =
{
    BIT_TYPE_DARK | BIT_TYPE_GHOST, BIT_TYPE_NONE
};

static const u32 sFirePsychicResists[] =
{
    BIT_TYPE_DRAGON | BIT_TYPE_PSYCHIC, BIT_TYPE_FIRE | BIT_TYPE_PSYCHIC, BIT_TYPE_PSYCHIC | BIT_TYPE_ROCK, BIT_TYPE_PSYCHIC | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sFlyingPsychicResists[] =
{
    BIT_TYPE_ELECTRIC | BIT_TYPE_PSYCHIC, BIT_TYPE_PSYCHIC | BIT_TYPE_ROCK, BIT_TYPE_PSYCHIC | BIT_TYPE_STEEL, BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sGhostPsychicResists[] =
{
    BIT_TYPE_DARK | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sGhostPsychicImmunities[] =
{
    BIT_TYPE_DARK | BIT_TYPE_NORMAL, BIT_TYPE_NONE
};

static const u32 sGrassPsychicResists[] =
{
    BIT_TYPE_BUG | BIT_TYPE_PSYCHIC, BIT_TYPE_DRAGON | BIT_TYPE_PSYCHIC, BIT_TYPE_FIRE | BIT_TYPE_PSYCHIC, BIT_TYPE_FLYING | BIT_TYPE_PSYCHIC, BIT_TYPE_GRASS | BIT_TYPE_PSYCHIC, BIT_TYPE_PSYCHIC | BIT_TYPE_STEEL, BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sGroundPsychicResists[] =
{
    BIT_TYPE_BUG | BIT_TYPE_PSYCHIC, BIT_TYPE_GRASS | BIT_TYPE_PSYCHIC, BIT_TYPE_NONE
};

static const u32 sGroundPsychicImmunities[] =
{
    BIT_TYPE_DARK | BIT_TYPE_FLYING, BIT_TYPE_NONE
};

static const u32 sIcePsychicResists[] =
{
    BIT_TYPE_FIRE | BIT_TYPE_PSYCHIC, BIT_TYPE_ICE | BIT_TYPE_PSYCHIC, BIT_TYPE_PSYCHIC | BIT_TYPE_STEEL, BIT_TYPE_PSYCHIC | BIT_TYPE_WATER, BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sNormalPsychicResists[] =
{
    BIT_TYPE_PSYCHIC | BIT_TYPE_ROCK, BIT_TYPE_PSYCHIC | BIT_TYPE_STEEL, BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sNormalPsychicImmunities[] =
{
    BIT_TYPE_DARK | BIT_TYPE_GHOST, BIT_TYPE_NONE
};

static const u32 sPoisonPsychicResists[] =
{
    BIT_TYPE_GHOST | BIT_TYPE_PSYCHIC, BIT_TYPE_GROUND | BIT_TYPE_PSYCHIC, BIT_TYPE_PSYCHIC | BIT_TYPE_ROCK, BIT_TYPE_GHOST | BIT_TYPE_STEEL, BIT_TYPE_GROUND | BIT_TYPE_STEEL, BIT_TYPE_ROCK | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sPoisonPsychicImmunities[] =
{
    BIT_TYPE_DARK | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sPsychicRockResists[] =
{
    BIT_TYPE_GROUND | BIT_TYPE_PSYCHIC, BIT_TYPE_PSYCHIC | BIT_TYPE_STEEL, BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sPsychicSteelResists[] =
{
    BIT_TYPE_ELECTRIC | BIT_TYPE_PSYCHIC, BIT_TYPE_FIRE | BIT_TYPE_PSYCHIC, BIT_TYPE_PSYCHIC | BIT_TYPE_STEEL, BIT_TYPE_PSYCHIC | BIT_TYPE_WATER, BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sPsychicWaterResists[] =
{
    BIT_TYPE_DRAGON | BIT_TYPE_PSYCHIC, BIT_TYPE_GRASS | BIT_TYPE_PSYCHIC, BIT_TYPE_PSYCHIC | BIT_TYPE_WATER, BIT_TYPE_DRAGON | BIT_TYPE_STEEL, BIT_TYPE_GRASS | BIT_TYPE_STEEL, BIT_TYPE_STEEL | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sBugRockResists[] =
{
    BIT_TYPE_FIGHTING, BIT_TYPE_FAIRY | BIT_TYPE_GROUND, BIT_TYPE_FIGHTING | BIT_TYPE_GROUND, BIT_TYPE_GHOST | BIT_TYPE_GROUND, BIT_TYPE_GROUND | BIT_TYPE_POISON, BIT_TYPE_GROUND | BIT_TYPE_STEEL, BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sBugRockDoubleResists[] =
{
    BIT_TYPE_FIGHTING | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sDarkRockResists[] =
{
    BIT_TYPE_FIGHTING, BIT_TYPE_DARK | BIT_TYPE_GROUND, BIT_TYPE_FAIRY | BIT_TYPE_GROUND, BIT_TYPE_FIGHTING | BIT_TYPE_GROUND, BIT_TYPE_DARK | BIT_TYPE_STEEL, BIT_TYPE_FAIRY | BIT_TYPE_STEEL, BIT_TYPE_FIGHTING | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sDragonRockResists[] =
{
    BIT_TYPE_FIGHTING | BIT_TYPE_STEEL, BIT_TYPE_GROUND | BIT_TYPE_STEEL, BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sElectricRockResists[] =
{
    BIT_TYPE_DRAGON | BIT_TYPE_FIGHTING, BIT_TYPE_ELECTRIC | BIT_TYPE_FIGHTING, BIT_TYPE_FIGHTING | BIT_TYPE_GRASS, BIT_TYPE_DRAGON | BIT_TYPE_GROUND, BIT_TYPE_ELECTRIC | BIT_TYPE_GROUND, BIT_TYPE_GRASS | BIT_TYPE_GROUND, BIT_TYPE_DRAGON | BIT_TYPE_STEEL, BIT_TYPE_ELECTRIC | BIT_TYPE_STEEL, BIT_TYPE_GRASS | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sFairyRockResists[] =
{
    BIT_TYPE_GROUND | BIT_TYPE_POISON, BIT_TYPE_GROUND | BIT_TYPE_STEEL, BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sFightingRockResists[] =
{
    BIT_TYPE_FAIRY | BIT_TYPE_FIGHTING, BIT_TYPE_FIGHTING | BIT_TYPE_POISON, BIT_TYPE_FIGHTING | BIT_TYPE_PSYCHIC, BIT_TYPE_FAIRY | BIT_TYPE_GROUND, BIT_TYPE_GROUND | BIT_TYPE_POISON, BIT_TYPE_GROUND | BIT_TYPE_PSYCHIC, BIT_TYPE_NONE
};

static const u32 sFireRockResists[] =
{
    BIT_TYPE_DRAGON | BIT_TYPE_FIGHTING, BIT_TYPE_FIGHTING | BIT_TYPE_ROCK, BIT_TYPE_FIGHTING | BIT_TYPE_WATER, BIT_TYPE_DRAGON | BIT_TYPE_GROUND, BIT_TYPE_GROUND | BIT_TYPE_ROCK, BIT_TYPE_GROUND | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sFlyingRockResists[] =
{
    BIT_TYPE_ELECTRIC | BIT_TYPE_GROUND, BIT_TYPE_GROUND | BIT_TYPE_ROCK, BIT_TYPE_GROUND | BIT_TYPE_STEEL, BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sGhostRockResists[] =
{
    BIT_TYPE_DARK | BIT_TYPE_FIGHTING, BIT_TYPE_DARK | BIT_TYPE_GROUND, BIT_TYPE_DARK | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sGrassRockResists[] =
{
    BIT_TYPE_DRAGON | BIT_TYPE_FIGHTING, BIT_TYPE_FIGHTING | BIT_TYPE_GRASS, BIT_TYPE_FIGHTING | BIT_TYPE_POISON, BIT_TYPE_FIGHTING | BIT_TYPE_STEEL, BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sGroundRockResists[] =
{
    BIT_TYPE_FIGHTING | BIT_TYPE_GRASS, BIT_TYPE_GRASS | BIT_TYPE_GROUND, BIT_TYPE_NONE
};

static const u32 sIceRockResists[] =
{
    BIT_TYPE_FIGHTING | BIT_TYPE_STEEL, BIT_TYPE_FIGHTING | BIT_TYPE_WATER, BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sNormalRockResists[] =
{
    BIT_TYPE_FIGHTING | BIT_TYPE_ROCK, BIT_TYPE_FIGHTING | BIT_TYPE_STEEL, BIT_TYPE_GROUND | BIT_TYPE_ROCK, BIT_TYPE_GROUND | BIT_TYPE_STEEL, BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sPoisonRockResists[] =
{
    BIT_TYPE_FIGHTING | BIT_TYPE_GHOST, BIT_TYPE_FIGHTING | BIT_TYPE_GROUND, BIT_TYPE_FIGHTING | BIT_TYPE_POISON, BIT_TYPE_FIGHTING | BIT_TYPE_ROCK, BIT_TYPE_GROUND, BIT_TYPE_GHOST | BIT_TYPE_STEEL, BIT_TYPE_GROUND | BIT_TYPE_STEEL, BIT_TYPE_POISON | BIT_TYPE_STEEL, BIT_TYPE_ROCK | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sPsychicRockResists[] =
{
    BIT_TYPE_GROUND | BIT_TYPE_PSYCHIC, BIT_TYPE_GROUND | BIT_TYPE_STEEL, BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sRockSteelResists[] =
{
    BIT_TYPE_ELECTRIC | BIT_TYPE_FIGHTING, BIT_TYPE_FIGHTING | BIT_TYPE_STEEL, BIT_TYPE_FIGHTING | BIT_TYPE_WATER, BIT_TYPE_ELECTRIC | BIT_TYPE_GROUND, BIT_TYPE_GROUND | BIT_TYPE_STEEL, BIT_TYPE_GROUND | BIT_TYPE_WATER, BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sRockWaterResists[] =
{
    BIT_TYPE_DRAGON | BIT_TYPE_FIGHTING, BIT_TYPE_FIGHTING | BIT_TYPE_GRASS, BIT_TYPE_FIGHTING | BIT_TYPE_WATER, BIT_TYPE_DRAGON | BIT_TYPE_STEEL, BIT_TYPE_GRASS | BIT_TYPE_STEEL, BIT_TYPE_STEEL | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sBugSteelResists[] =
{
    BIT_TYPE_ELECTRIC | BIT_TYPE_FIGHTING, BIT_TYPE_ELECTRIC | BIT_TYPE_FIRE, BIT_TYPE_ELECTRIC | BIT_TYPE_FLYING, BIT_TYPE_ELECTRIC | BIT_TYPE_GHOST, BIT_TYPE_ELECTRIC | BIT_TYPE_POISON, BIT_TYPE_ELECTRIC | BIT_TYPE_STEEL, BIT_TYPE_FIRE, BIT_TYPE_STEEL, BIT_TYPE_FIGHTING | BIT_TYPE_WATER, BIT_TYPE_FIRE | BIT_TYPE_WATER, BIT_TYPE_FLYING | BIT_TYPE_WATER, BIT_TYPE_GHOST | BIT_TYPE_WATER, BIT_TYPE_POISON | BIT_TYPE_WATER, BIT_TYPE_STEEL | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sBugSteelDoubleResists[] =
{
    BIT_TYPE_FIRE | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sDarkSteelResists[] =
{
    BIT_TYPE_DARK | BIT_TYPE_ELECTRIC, BIT_TYPE_ELECTRIC | BIT_TYPE_FIGHTING, BIT_TYPE_DARK | BIT_TYPE_FIRE, BIT_TYPE_FIGHTING | BIT_TYPE_FIRE, BIT_TYPE_DARK | BIT_TYPE_STEEL, BIT_TYPE_FIGHTING | BIT_TYPE_STEEL, BIT_TYPE_DARK | BIT_TYPE_WATER, BIT_TYPE_FIGHTING | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sDragonSteelResists[] =
{
    BIT_TYPE_ELECTRIC | BIT_TYPE_STEEL, BIT_TYPE_FIRE | BIT_TYPE_STEEL, BIT_TYPE_STEEL, BIT_TYPE_STEEL | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sElectricSteelResists[] =
{
    BIT_TYPE_ELECTRIC, BIT_TYPE_DRAGON | BIT_TYPE_FIRE, BIT_TYPE_ELECTRIC | BIT_TYPE_FIRE, BIT_TYPE_FIRE | BIT_TYPE_GRASS, BIT_TYPE_DRAGON | BIT_TYPE_STEEL, BIT_TYPE_ELECTRIC | BIT_TYPE_STEEL, BIT_TYPE_GRASS | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sFairySteelResists[] =
{
    BIT_TYPE_ELECTRIC | BIT_TYPE_FIRE, BIT_TYPE_ELECTRIC | BIT_TYPE_POISON, BIT_TYPE_ELECTRIC | BIT_TYPE_STEEL, BIT_TYPE_FIRE, BIT_TYPE_STEEL, BIT_TYPE_FIRE | BIT_TYPE_WATER, BIT_TYPE_POISON | BIT_TYPE_WATER, BIT_TYPE_STEEL | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sFairySteelDoubleResists[] =
{
    BIT_TYPE_FIRE | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sFightingSteelResists[] =
{
    BIT_TYPE_BUG | BIT_TYPE_ELECTRIC, BIT_TYPE_ELECTRIC | BIT_TYPE_FLYING, BIT_TYPE_ELECTRIC | BIT_TYPE_POISON, BIT_TYPE_ELECTRIC | BIT_TYPE_PSYCHIC, BIT_TYPE_BUG | BIT_TYPE_FIRE, BIT_TYPE_FIRE | BIT_TYPE_FLYING, BIT_TYPE_FIRE | BIT_TYPE_POISON, BIT_TYPE_FIRE | BIT_TYPE_PSYCHIC, BIT_TYPE_BUG | BIT_TYPE_WATER, BIT_TYPE_FLYING | BIT_TYPE_WATER, BIT_TYPE_POISON | BIT_TYPE_WATER, BIT_TYPE_PSYCHIC | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sFireSteelResists[] =
{
    BIT_TYPE_DRAGON | BIT_TYPE_ELECTRIC, BIT_TYPE_ELECTRIC | BIT_TYPE_FIRE, BIT_TYPE_ELECTRIC | BIT_TYPE_WATER, BIT_TYPE_FIRE, BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sFireSteelDoubleResists[] =
{
    BIT_TYPE_FIRE | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sFlyingSteelResists[] =
{
    BIT_TYPE_ELECTRIC, BIT_TYPE_ELECTRIC | BIT_TYPE_FIRE, BIT_TYPE_FIRE | BIT_TYPE_STEEL, BIT_TYPE_STEEL, BIT_TYPE_ELECTRIC | BIT_TYPE_WATER, BIT_TYPE_STEEL | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sFlyingSteelDoubleResists[] =
{
    BIT_TYPE_ELECTRIC | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sGhostSteelResists[] =
{
    BIT_TYPE_DARK | BIT_TYPE_ELECTRIC, BIT_TYPE_DARK | BIT_TYPE_FIRE, BIT_TYPE_DARK | BIT_TYPE_STEEL, BIT_TYPE_DARK | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sGrassSteelResists[] =
{
    BIT_TYPE_BUG | BIT_TYPE_ELECTRIC, BIT_TYPE_DRAGON | BIT_TYPE_ELECTRIC, BIT_TYPE_ELECTRIC | BIT_TYPE_FIRE, BIT_TYPE_ELECTRIC | BIT_TYPE_FLYING, BIT_TYPE_ELECTRIC | BIT_TYPE_GRASS, BIT_TYPE_ELECTRIC | BIT_TYPE_POISON, BIT_TYPE_ELECTRIC | BIT_TYPE_STEEL, BIT_TYPE_FIRE, BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sGrassSteelDoubleResists[] =
{
    BIT_TYPE_FIRE | BIT_TYPE_STEEL, BIT_TYPE_NONE
};

static const u32 sGroundSteelResists[] =
{
    BIT_TYPE_BUG | BIT_TYPE_WATER, BIT_TYPE_GRASS | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sIceSteelResists[] =
{
    BIT_TYPE_ELECTRIC | BIT_TYPE_FIRE, BIT_TYPE_ELECTRIC | BIT_TYPE_STEEL, BIT_TYPE_ELECTRIC | BIT_TYPE_WATER, BIT_TYPE_FIRE, BIT_TYPE_STEEL, BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sIceSteelDoubleResists[] =
{
    BIT_TYPE_FIRE | BIT_TYPE_STEEL, BIT_TYPE_FIRE | BIT_TYPE_WATER, BIT_TYPE_STEEL | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sNormalSteelResists[] =
{
    BIT_TYPE_ELECTRIC | BIT_TYPE_STEEL, BIT_TYPE_FIRE | BIT_TYPE_STEEL, BIT_TYPE_STEEL, BIT_TYPE_STEEL | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sPoisonSteelResists[] =
{
    BIT_TYPE_ELECTRIC | BIT_TYPE_GHOST, BIT_TYPE_ELECTRIC | BIT_TYPE_GROUND, BIT_TYPE_ELECTRIC | BIT_TYPE_POISON, BIT_TYPE_FIRE | BIT_TYPE_GHOST, BIT_TYPE_FIRE | BIT_TYPE_GROUND, BIT_TYPE_FIRE | BIT_TYPE_POISON, BIT_TYPE_GHOST | BIT_TYPE_STEEL, BIT_TYPE_GROUND | BIT_TYPE_STEEL, BIT_TYPE_POISON | BIT_TYPE_STEEL, BIT_TYPE_GHOST | BIT_TYPE_WATER, BIT_TYPE_GROUND | BIT_TYPE_WATER, BIT_TYPE_POISON | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sPsychicSteelResists[] =
{
    BIT_TYPE_ELECTRIC | BIT_TYPE_PSYCHIC, BIT_TYPE_ELECTRIC | BIT_TYPE_STEEL, BIT_TYPE_FIRE | BIT_TYPE_PSYCHIC, BIT_TYPE_FIRE | BIT_TYPE_STEEL, BIT_TYPE_STEEL, BIT_TYPE_PSYCHIC | BIT_TYPE_WATER, BIT_TYPE_STEEL | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sRockSteelResists[] =
{
    BIT_TYPE_ELECTRIC | BIT_TYPE_FIGHTING, BIT_TYPE_ELECTRIC | BIT_TYPE_GROUND, BIT_TYPE_ELECTRIC | BIT_TYPE_STEEL, BIT_TYPE_STEEL, BIT_TYPE_FIGHTING | BIT_TYPE_WATER, BIT_TYPE_GROUND | BIT_TYPE_WATER, BIT_TYPE_STEEL | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sSteelWaterResists[] =
{
    BIT_TYPE_DRAGON | BIT_TYPE_ELECTRIC, BIT_TYPE_ELECTRIC | BIT_TYPE_GRASS, BIT_TYPE_ELECTRIC | BIT_TYPE_WATER, BIT_TYPE_DRAGON | BIT_TYPE_STEEL, BIT_TYPE_GRASS | BIT_TYPE_STEEL, BIT_TYPE_STEEL | BIT_TYPE_WATER, BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sBugWaterResists[] =
{
    BIT_TYPE_DRAGON | BIT_TYPE_FAIRY, BIT_TYPE_DRAGON | BIT_TYPE_FIGHTING, BIT_TYPE_DRAGON | BIT_TYPE_FLYING, BIT_TYPE_DRAGON | BIT_TYPE_GHOST, BIT_TYPE_DRAGON | BIT_TYPE_POISON, BIT_TYPE_DRAGON | BIT_TYPE_STEEL, BIT_TYPE_FAIRY | BIT_TYPE_WATER, BIT_TYPE_FIGHTING | BIT_TYPE_WATER, BIT_TYPE_FLYING | BIT_TYPE_WATER, BIT_TYPE_GHOST | BIT_TYPE_WATER, BIT_TYPE_POISON | BIT_TYPE_WATER, BIT_TYPE_STEEL | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sDarkWaterResists[] =
{
    BIT_TYPE_DARK | BIT_TYPE_DRAGON, BIT_TYPE_DRAGON | BIT_TYPE_FAIRY, BIT_TYPE_DRAGON | BIT_TYPE_FIGHTING, BIT_TYPE_DARK | BIT_TYPE_GRASS, BIT_TYPE_FAIRY | BIT_TYPE_GRASS, BIT_TYPE_FIGHTING | BIT_TYPE_GRASS, BIT_TYPE_DARK | BIT_TYPE_WATER, BIT_TYPE_FAIRY | BIT_TYPE_WATER, BIT_TYPE_FIGHTING | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sDragonWaterResists[] =
{
    BIT_TYPE_GRASS | BIT_TYPE_STEEL, BIT_TYPE_STEEL | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sElectricWaterResists[] =
{
    BIT_TYPE_DRAGON, BIT_TYPE_GRASS, BIT_TYPE_NONE
};

static const u32 sElectricWaterDoubleResists[] =
{
    BIT_TYPE_DRAGON | BIT_TYPE_GRASS, BIT_TYPE_NONE
};

static const u32 sFairyWaterResists[] =
{
    BIT_TYPE_GRASS | BIT_TYPE_POISON, BIT_TYPE_GRASS | BIT_TYPE_STEEL, BIT_TYPE_POISON | BIT_TYPE_WATER, BIT_TYPE_STEEL | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sFightingWaterResists[] =
{
    BIT_TYPE_BUG | BIT_TYPE_DRAGON, BIT_TYPE_DRAGON | BIT_TYPE_FAIRY, BIT_TYPE_DRAGON | BIT_TYPE_FLYING, BIT_TYPE_DRAGON | BIT_TYPE_POISON, BIT_TYPE_DRAGON | BIT_TYPE_PSYCHIC, BIT_TYPE_BUG | BIT_TYPE_GRASS, BIT_TYPE_FAIRY | BIT_TYPE_GRASS, BIT_TYPE_FLYING | BIT_TYPE_GRASS, BIT_TYPE_GRASS | BIT_TYPE_POISON, BIT_TYPE_GRASS | BIT_TYPE_PSYCHIC, BIT_TYPE_BUG | BIT_TYPE_WATER, BIT_TYPE_FAIRY | BIT_TYPE_WATER, BIT_TYPE_FLYING | BIT_TYPE_WATER, BIT_TYPE_POISON | BIT_TYPE_WATER, BIT_TYPE_PSYCHIC | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sFireWaterResists[] =
{
    BIT_TYPE_DRAGON, BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sFireWaterDoubleResists[] =
{
    BIT_TYPE_DRAGON | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sFlyingWaterResists[] =
{
    BIT_TYPE_DRAGON | BIT_TYPE_ELECTRIC, BIT_TYPE_DRAGON | BIT_TYPE_STEEL, BIT_TYPE_ELECTRIC | BIT_TYPE_WATER, BIT_TYPE_STEEL | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sGhostWaterResists[] =
{
    BIT_TYPE_DARK | BIT_TYPE_DRAGON, BIT_TYPE_DARK | BIT_TYPE_GRASS, BIT_TYPE_DARK | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sGrassWaterResists[] =
{
    BIT_TYPE_DRAGON, BIT_TYPE_GRASS, BIT_TYPE_NONE
};

static const u32 sGrassWaterDoubleResists[] =
{
    BIT_TYPE_DRAGON | BIT_TYPE_GRASS, BIT_TYPE_NONE
};

static const u32 sGroundWaterResists[] =
{
    BIT_TYPE_BUG | BIT_TYPE_DRAGON, BIT_TYPE_DRAGON | BIT_TYPE_GRASS, BIT_TYPE_GRASS, BIT_TYPE_BUG | BIT_TYPE_WATER, BIT_TYPE_GRASS | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sIceWaterResists[] =
{
    BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sNormalWaterResists[] =
{
    BIT_TYPE_DRAGON | BIT_TYPE_STEEL, BIT_TYPE_GRASS | BIT_TYPE_STEEL, BIT_TYPE_STEEL | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sPoisonWaterResists[] =
{
    BIT_TYPE_DRAGON | BIT_TYPE_GHOST, BIT_TYPE_DRAGON | BIT_TYPE_POISON, BIT_TYPE_GHOST | BIT_TYPE_WATER, BIT_TYPE_POISON | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sPsychicWaterResists[] =
{
    BIT_TYPE_DRAGON | BIT_TYPE_PSYCHIC, BIT_TYPE_DRAGON | BIT_TYPE_STEEL, BIT_TYPE_GRASS | BIT_TYPE_PSYCHIC, BIT_TYPE_GRASS | BIT_TYPE_STEEL, BIT_TYPE_PSYCHIC | BIT_TYPE_WATER, BIT_TYPE_STEEL | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sRockWaterResists[] =
{
    BIT_TYPE_DRAGON | BIT_TYPE_FIGHTING, BIT_TYPE_DRAGON | BIT_TYPE_STEEL, BIT_TYPE_FIGHTING | BIT_TYPE_GRASS, BIT_TYPE_GRASS | BIT_TYPE_STEEL, BIT_TYPE_FIGHTING | BIT_TYPE_WATER, BIT_TYPE_STEEL | BIT_TYPE_WATER, BIT_TYPE_NONE
};

static const u32 sSteelWaterResists[] =
{
    BIT_TYPE_DRAGON | BIT_TYPE_ELECTRIC, BIT_TYPE_DRAGON | BIT_TYPE_STEEL, BIT_TYPE_DRAGON | BIT_TYPE_WATER, BIT_TYPE_ELECTRIC | BIT_TYPE_GRASS, BIT_TYPE_GRASS | BIT_TYPE_STEEL, BIT_TYPE_GRASS | BIT_TYPE_WATER, BIT_TYPE_WATER, BIT_TYPE_NONE
};

const struct u32 *gTypeChartResistsLookupTable[] =
{
    [BIT_TYPE_BUG]                            = sBugResists,
    [BIT_TYPE_DARK]                           = sDarkResists,
    [BIT_TYPE_DRAGON]                         = sDragonResists,
    [BIT_TYPE_ELECTRIC]                       = sElectricResists,
    [BIT_TYPE_FAIRY]                          = sFairyResists,
    [BIT_TYPE_FIGHTING]                       = sFightingResists,
    [BIT_TYPE_FIRE]                           = sFireResists,
    [BIT_TYPE_FLYING]                         = sFlyingResists,
    [BIT_TYPE_GHOST]                          = sGhostResists,
    [BIT_TYPE_GRASS]                          = sGrassResists,
    [BIT_TYPE_GROUND]                         = sGroundResists,
    [BIT_TYPE_ICE]                            = sIceResists,
    [BIT_TYPE_NORMAL]                         = sNormalResists,
    [BIT_TYPE_POISON]                         = sPoisonResists,
    [BIT_TYPE_PSYCHIC]                        = sPsychicResists,
    [BIT_TYPE_ROCK]                           = sRockResists,
    [BIT_TYPE_STEEL]                          = sSteelResists,
    [BIT_TYPE_WATER]                          = sWaterResists,
    [BIT_TYPE_BUG | BIT_TYPE_DARK]            = sBugDarkResists,
    [BIT_TYPE_BUG | BIT_TYPE_DRAGON]          = sBugDragonResists,
    [BIT_TYPE_BUG | BIT_TYPE_ELECTRIC]        = sBugElectricResists,
    [BIT_TYPE_BUG | BIT_TYPE_FAIRY]           = sBugFairyResists,
    [BIT_TYPE_BUG | BIT_TYPE_FIGHTING]        = sBugFightingResists,
    [BIT_TYPE_BUG | BIT_TYPE_FIRE]            = sBugFireResists,
    [BIT_TYPE_BUG | BIT_TYPE_FLYING]          = sBugFlyingResists,
    [BIT_TYPE_BUG | BIT_TYPE_GRASS]           = sBugGrassResists,
    [BIT_TYPE_BUG | BIT_TYPE_GROUND]          = sBugGroundResists,
    [BIT_TYPE_BUG | BIT_TYPE_ICE]             = sBugIceResists,
    [BIT_TYPE_BUG | BIT_TYPE_NORMAL]          = sBugNormalResists,
    [BIT_TYPE_BUG | BIT_TYPE_POISON]          = sBugPoisonResists,
    [BIT_TYPE_BUG | BIT_TYPE_PSYCHIC]         = sBugPsychicResists,
    [BIT_TYPE_BUG | BIT_TYPE_ROCK]            = sBugRockResists,
    [BIT_TYPE_BUG | BIT_TYPE_STEEL]           = sBugSteelResists,
    [BIT_TYPE_BUG | BIT_TYPE_WATER]           = sBugWaterResists,
    [BIT_TYPE_BUG | BIT_TYPE_DARK]            = sBugDarkResists,
    [BIT_TYPE_DARK | BIT_TYPE_DRAGON]         = sDarkDragonResists,
    [BIT_TYPE_DARK | BIT_TYPE_ELECTRIC]       = sDarkElectricResists,
    [BIT_TYPE_DARK | BIT_TYPE_FAIRY]          = sDarkFairyResists,
    [BIT_TYPE_DARK | BIT_TYPE_FIGHTING]       = sDarkFightingResists,
    [BIT_TYPE_DARK | BIT_TYPE_FIRE]           = sDarkFireResists,
    [BIT_TYPE_DARK | BIT_TYPE_FLYING]         = sDarkFlyingResists,
    [BIT_TYPE_DARK | BIT_TYPE_GHOST]          = sDarkGhostResists,
    [BIT_TYPE_DARK | BIT_TYPE_GRASS]          = sDarkGrassResists,
    [BIT_TYPE_DARK | BIT_TYPE_GROUND]         = sDarkGroundResists,
    [BIT_TYPE_DARK | BIT_TYPE_ICE]            = sDarkIceResists,
    [BIT_TYPE_DARK | BIT_TYPE_NORMAL]         = sDarkNormalResists,
    [BIT_TYPE_DARK | BIT_TYPE_POISON]         = sDarkPoisonResists,
    [BIT_TYPE_DARK | BIT_TYPE_PSYCHIC]        = sDarkPsychicResists,
    [BIT_TYPE_DARK | BIT_TYPE_ROCK]           = sDarkRockResists,
    [BIT_TYPE_DARK | BIT_TYPE_STEEL]          = sDarkSteelResists,
    [BIT_TYPE_DARK | BIT_TYPE_WATER]          = sDarkWaterResists,
    [BIT_TYPE_BUG | BIT_TYPE_DRAGON]          = sBugDragonResists,
    [BIT_TYPE_DARK | BIT_TYPE_DRAGON]         = sDarkDragonResists,
    [BIT_TYPE_DRAGON | BIT_TYPE_ELECTRIC]     = sDragonElectricResists,
    [BIT_TYPE_DRAGON | BIT_TYPE_FAIRY]        = sDragonFairyResists,
    [BIT_TYPE_DRAGON | BIT_TYPE_FLYING]       = sDragonFlyingResists,
    [BIT_TYPE_DRAGON | BIT_TYPE_GHOST]        = sDragonGhostResists,
    [BIT_TYPE_DRAGON | BIT_TYPE_GRASS]        = sDragonGrassResists,
    [BIT_TYPE_DRAGON | BIT_TYPE_ICE]          = sDragonIceResists,
    [BIT_TYPE_DRAGON | BIT_TYPE_NORMAL]       = sDragonNormalResists,
    [BIT_TYPE_DRAGON | BIT_TYPE_POISON]       = sDragonPoisonResists,
    [BIT_TYPE_DRAGON | BIT_TYPE_PSYCHIC]      = sDragonPsychicResists,
    [BIT_TYPE_DRAGON | BIT_TYPE_ROCK]         = sDragonRockResists,
    [BIT_TYPE_DRAGON | BIT_TYPE_STEEL]        = sDragonSteelResists,
    [BIT_TYPE_DRAGON | BIT_TYPE_WATER]        = sDragonWaterResists,
    [BIT_TYPE_BUG | BIT_TYPE_ELECTRIC]        = sBugElectricResists,
    [BIT_TYPE_DARK | BIT_TYPE_ELECTRIC]       = sDarkElectricResists,
    [BIT_TYPE_DRAGON | BIT_TYPE_ELECTRIC]     = sDragonElectricResists,
    [BIT_TYPE_ELECTRIC | BIT_TYPE_FAIRY]      = sElectricFairyResists,
    [BIT_TYPE_ELECTRIC | BIT_TYPE_FIGHTING]   = sElectricFightingResists,
    [BIT_TYPE_ELECTRIC | BIT_TYPE_FIRE]       = sElectricFireResists,
    [BIT_TYPE_ELECTRIC | BIT_TYPE_FLYING]     = sElectricFlyingResists,
    [BIT_TYPE_ELECTRIC | BIT_TYPE_GHOST]      = sElectricGhostResists,
    [BIT_TYPE_ELECTRIC | BIT_TYPE_GRASS]      = sElectricGrassResists,
    [BIT_TYPE_ELECTRIC | BIT_TYPE_GROUND]     = sElectricGroundResists,
    [BIT_TYPE_ELECTRIC | BIT_TYPE_ICE]        = sElectricIceResists,
    [BIT_TYPE_ELECTRIC | BIT_TYPE_NORMAL]     = sElectricNormalResists,
    [BIT_TYPE_ELECTRIC | BIT_TYPE_POISON]     = sElectricPoisonResists,
    [BIT_TYPE_ELECTRIC | BIT_TYPE_PSYCHIC]    = sElectricPsychicResists,
    [BIT_TYPE_ELECTRIC | BIT_TYPE_ROCK]       = sElectricRockResists,
    [BIT_TYPE_ELECTRIC | BIT_TYPE_STEEL]      = sElectricSteelResists,
    [BIT_TYPE_ELECTRIC | BIT_TYPE_WATER]      = sElectricWaterResists,
    [BIT_TYPE_BUG | BIT_TYPE_FAIRY]           = sBugFairyResists,
    [BIT_TYPE_DARK | BIT_TYPE_FAIRY]          = sDarkFairyResists,
    [BIT_TYPE_DRAGON | BIT_TYPE_FAIRY]        = sDragonFairyResists,
    [BIT_TYPE_ELECTRIC | BIT_TYPE_FAIRY]      = sElectricFairyResists,
    [BIT_TYPE_FAIRY | BIT_TYPE_FIGHTING]      = sFairyFightingResists,
    [BIT_TYPE_FAIRY | BIT_TYPE_FIRE]          = sFairyFireResists,
    [BIT_TYPE_FAIRY | BIT_TYPE_FLYING]        = sFairyFlyingResists,
    [BIT_TYPE_FAIRY | BIT_TYPE_GRASS]         = sFairyGrassResists,
    [BIT_TYPE_FAIRY | BIT_TYPE_ICE]           = sFairyIceResists,
    [BIT_TYPE_FAIRY | BIT_TYPE_NORMAL]        = sFairyNormalResists,
    [BIT_TYPE_FAIRY | BIT_TYPE_POISON]        = sFairyPoisonResists,
    [BIT_TYPE_FAIRY | BIT_TYPE_PSYCHIC]       = sFairyPsychicResists,
    [BIT_TYPE_FAIRY | BIT_TYPE_ROCK]          = sFairyRockResists,
    [BIT_TYPE_FAIRY | BIT_TYPE_STEEL]         = sFairySteelResists,
    [BIT_TYPE_FAIRY | BIT_TYPE_WATER]         = sFairyWaterResists,
    [BIT_TYPE_BUG | BIT_TYPE_FIGHTING]        = sBugFightingResists,
    [BIT_TYPE_DARK | BIT_TYPE_FIGHTING]       = sDarkFightingResists,
    [BIT_TYPE_ELECTRIC | BIT_TYPE_FIGHTING]   = sElectricFightingResists,
    [BIT_TYPE_FAIRY | BIT_TYPE_FIGHTING]      = sFairyFightingResists,
    [BIT_TYPE_FIGHTING | BIT_TYPE_FIRE]       = sFightingFireResists,
    [BIT_TYPE_FIGHTING | BIT_TYPE_FLYING]     = sFightingFlyingResists,
    [BIT_TYPE_FIGHTING | BIT_TYPE_GRASS]      = sFightingGrassResists,
    [BIT_TYPE_FIGHTING | BIT_TYPE_GROUND]     = sFightingGroundResists,
    [BIT_TYPE_FIGHTING | BIT_TYPE_ICE]        = sFightingIceResists,
    [BIT_TYPE_FIGHTING | BIT_TYPE_POISON]     = sFightingPoisonResists,
    [BIT_TYPE_FIGHTING | BIT_TYPE_PSYCHIC]    = sFightingPsychicResists,
    [BIT_TYPE_FIGHTING | BIT_TYPE_ROCK]       = sFightingRockResists,
    [BIT_TYPE_FIGHTING | BIT_TYPE_STEEL]      = sFightingSteelResists,
    [BIT_TYPE_FIGHTING | BIT_TYPE_WATER]      = sFightingWaterResists,
    [BIT_TYPE_BUG | BIT_TYPE_FIRE]            = sBugFireResists,
    [BIT_TYPE_DARK | BIT_TYPE_FIRE]           = sDarkFireResists,
    [BIT_TYPE_ELECTRIC | BIT_TYPE_FIRE]       = sElectricFireResists,
    [BIT_TYPE_FAIRY | BIT_TYPE_FIRE]          = sFairyFireResists,
    [BIT_TYPE_FIGHTING | BIT_TYPE_FIRE]       = sFightingFireResists,
    [BIT_TYPE_FIRE | BIT_TYPE_FLYING]         = sFireFlyingResists,
    [BIT_TYPE_FIRE | BIT_TYPE_GHOST]          = sFireGhostResists,
    [BIT_TYPE_FIRE | BIT_TYPE_GRASS]          = sFireGrassResists,
    [BIT_TYPE_FIRE | BIT_TYPE_ICE]            = sFireIceResists,
    [BIT_TYPE_FIRE | BIT_TYPE_NORMAL]         = sFireNormalResists,
    [BIT_TYPE_FIRE | BIT_TYPE_POISON]         = sFirePoisonResists,
    [BIT_TYPE_FIRE | BIT_TYPE_PSYCHIC]        = sFirePsychicResists,
    [BIT_TYPE_FIRE | BIT_TYPE_ROCK]           = sFireRockResists,
    [BIT_TYPE_FIRE | BIT_TYPE_STEEL]          = sFireSteelResists,
    [BIT_TYPE_FIRE | BIT_TYPE_WATER]          = sFireWaterResists,
    [BIT_TYPE_BUG | BIT_TYPE_FLYING]          = sBugFlyingResists,
    [BIT_TYPE_DARK | BIT_TYPE_FLYING]         = sDarkFlyingResists,
    [BIT_TYPE_DRAGON | BIT_TYPE_FLYING]       = sDragonFlyingResists,
    [BIT_TYPE_ELECTRIC | BIT_TYPE_FLYING]     = sElectricFlyingResists,
    [BIT_TYPE_FAIRY | BIT_TYPE_FLYING]        = sFairyFlyingResists,
    [BIT_TYPE_FIGHTING | BIT_TYPE_FLYING]     = sFightingFlyingResists,
    [BIT_TYPE_FIRE | BIT_TYPE_FLYING]         = sFireFlyingResists,
    [BIT_TYPE_FLYING | BIT_TYPE_GHOST]        = sFlyingGhostResists,
    [BIT_TYPE_FLYING | BIT_TYPE_GRASS]        = sFlyingGrassResists,
    [BIT_TYPE_FLYING | BIT_TYPE_ICE]          = sFlyingIceResists,
    [BIT_TYPE_FLYING | BIT_TYPE_NORMAL]       = sFlyingNormalResists,
    [BIT_TYPE_FLYING | BIT_TYPE_POISON]       = sFlyingPoisonResists,
    [BIT_TYPE_FLYING | BIT_TYPE_PSYCHIC]      = sFlyingPsychicResists,
    [BIT_TYPE_FLYING | BIT_TYPE_ROCK]         = sFlyingRockResists,
    [BIT_TYPE_FLYING | BIT_TYPE_STEEL]        = sFlyingSteelResists,
    [BIT_TYPE_FLYING | BIT_TYPE_WATER]        = sFlyingWaterResists,
    [BIT_TYPE_DARK | BIT_TYPE_GHOST]          = sDarkGhostResists,
    [BIT_TYPE_DRAGON | BIT_TYPE_GHOST]        = sDragonGhostResists,
    [BIT_TYPE_ELECTRIC | BIT_TYPE_GHOST]      = sElectricGhostResists,
    [BIT_TYPE_FIRE | BIT_TYPE_GHOST]          = sFireGhostResists,
    [BIT_TYPE_FLYING | BIT_TYPE_GHOST]        = sFlyingGhostResists,
    [BIT_TYPE_GHOST | BIT_TYPE_GRASS]         = sGhostGrassResists,
    [BIT_TYPE_GHOST | BIT_TYPE_GROUND]        = sGhostGroundResists,
    [BIT_TYPE_GHOST | BIT_TYPE_ICE]           = sGhostIceResists,
    [BIT_TYPE_GHOST | BIT_TYPE_NORMAL]        = sGhostNormalResists,
    [BIT_TYPE_GHOST | BIT_TYPE_POISON]        = sGhostPoisonResists,
    [BIT_TYPE_GHOST | BIT_TYPE_PSYCHIC]       = sGhostPsychicResists,
    [BIT_TYPE_GHOST | BIT_TYPE_ROCK]          = sGhostRockResists,
    [BIT_TYPE_GHOST | BIT_TYPE_STEEL]         = sGhostSteelResists,
    [BIT_TYPE_GHOST | BIT_TYPE_WATER]         = sGhostWaterResists,
    [BIT_TYPE_BUG | BIT_TYPE_GRASS]           = sBugGrassResists,
    [BIT_TYPE_DARK | BIT_TYPE_GRASS]          = sDarkGrassResists,
    [BIT_TYPE_DRAGON | BIT_TYPE_GRASS]        = sDragonGrassResists,
    [BIT_TYPE_ELECTRIC | BIT_TYPE_GRASS]      = sElectricGrassResists,
    [BIT_TYPE_FAIRY | BIT_TYPE_GRASS]         = sFairyGrassResists,
    [BIT_TYPE_FIGHTING | BIT_TYPE_GRASS]      = sFightingGrassResists,
    [BIT_TYPE_FIRE | BIT_TYPE_GRASS]          = sFireGrassResists,
    [BIT_TYPE_FLYING | BIT_TYPE_GRASS]        = sFlyingGrassResists,
    [BIT_TYPE_GHOST | BIT_TYPE_GRASS]         = sGhostGrassResists,
    [BIT_TYPE_GRASS | BIT_TYPE_GROUND]        = sGrassGroundResists,
    [BIT_TYPE_GRASS | BIT_TYPE_ICE]           = sGrassIceResists,
    [BIT_TYPE_GRASS | BIT_TYPE_NORMAL]        = sGrassNormalResists,
    [BIT_TYPE_GRASS | BIT_TYPE_POISON]        = sGrassPoisonResists,
    [BIT_TYPE_GRASS | BIT_TYPE_PSYCHIC]       = sGrassPsychicResists,
    [BIT_TYPE_GRASS | BIT_TYPE_ROCK]          = sGrassRockResists,
    [BIT_TYPE_GRASS | BIT_TYPE_STEEL]         = sGrassSteelResists,
    [BIT_TYPE_GRASS | BIT_TYPE_WATER]         = sGrassWaterResists,
    [BIT_TYPE_BUG | BIT_TYPE_GROUND]          = sBugGroundResists,
    [BIT_TYPE_DARK | BIT_TYPE_GROUND]         = sDarkGroundResists,
    [BIT_TYPE_ELECTRIC | BIT_TYPE_GROUND]     = sElectricGroundResists,
    [BIT_TYPE_FIGHTING | BIT_TYPE_GROUND]     = sFightingGroundResists,
    [BIT_TYPE_GHOST | BIT_TYPE_GROUND]        = sGhostGroundResists,
    [BIT_TYPE_GRASS | BIT_TYPE_GROUND]        = sGrassGroundResists,
    [BIT_TYPE_GROUND | BIT_TYPE_ICE]          = sGroundIceResists,
    [BIT_TYPE_GROUND | BIT_TYPE_POISON]       = sGroundPoisonResists,
    [BIT_TYPE_GROUND | BIT_TYPE_PSYCHIC]      = sGroundPsychicResists,
    [BIT_TYPE_GROUND | BIT_TYPE_ROCK]         = sGroundRockResists,
    [BIT_TYPE_GROUND | BIT_TYPE_STEEL]        = sGroundSteelResists,
    [BIT_TYPE_GROUND | BIT_TYPE_WATER]        = sGroundWaterResists,
    [BIT_TYPE_BUG | BIT_TYPE_ICE]             = sBugIceResists,
    [BIT_TYPE_DARK | BIT_TYPE_ICE]            = sDarkIceResists,
    [BIT_TYPE_DRAGON | BIT_TYPE_ICE]          = sDragonIceResists,
    [BIT_TYPE_ELECTRIC | BIT_TYPE_ICE]        = sElectricIceResists,
    [BIT_TYPE_FAIRY | BIT_TYPE_ICE]           = sFairyIceResists,
    [BIT_TYPE_FIGHTING | BIT_TYPE_ICE]        = sFightingIceResists,
    [BIT_TYPE_FIRE | BIT_TYPE_ICE]            = sFireIceResists,
    [BIT_TYPE_FLYING | BIT_TYPE_ICE]          = sFlyingIceResists,
    [BIT_TYPE_GHOST | BIT_TYPE_ICE]           = sGhostIceResists,
    [BIT_TYPE_GRASS | BIT_TYPE_ICE]           = sGrassIceResists,
    [BIT_TYPE_GROUND | BIT_TYPE_ICE]          = sGroundIceResists,
    [BIT_TYPE_ICE | BIT_TYPE_NORMAL]          = sIceNormalResists,
    [BIT_TYPE_ICE | BIT_TYPE_POISON]          = sIcePoisonResists,
    [BIT_TYPE_ICE | BIT_TYPE_PSYCHIC]         = sIcePsychicResists,
    [BIT_TYPE_ICE | BIT_TYPE_ROCK]            = sIceRockResists,
    [BIT_TYPE_ICE | BIT_TYPE_STEEL]           = sIceSteelResists,
    [BIT_TYPE_ICE | BIT_TYPE_WATER]           = sIceWaterResists,
    [BIT_TYPE_BUG | BIT_TYPE_NORMAL]          = sBugNormalResists,
    [BIT_TYPE_DARK | BIT_TYPE_NORMAL]         = sDarkNormalResists,
    [BIT_TYPE_DRAGON | BIT_TYPE_NORMAL]       = sDragonNormalResists,
    [BIT_TYPE_ELECTRIC | BIT_TYPE_NORMAL]     = sElectricNormalResists,
    [BIT_TYPE_FAIRY | BIT_TYPE_NORMAL]        = sFairyNormalResists,
    [BIT_TYPE_FIRE | BIT_TYPE_NORMAL]         = sFireNormalResists,
    [BIT_TYPE_FLYING | BIT_TYPE_NORMAL]       = sFlyingNormalResists,
    [BIT_TYPE_GHOST | BIT_TYPE_NORMAL]        = sGhostNormalResists,
    [BIT_TYPE_GRASS | BIT_TYPE_NORMAL]        = sGrassNormalResists,
    [BIT_TYPE_ICE | BIT_TYPE_NORMAL]          = sIceNormalResists,
    [BIT_TYPE_NORMAL | BIT_TYPE_POISON]       = sNormalPoisonResists,
    [BIT_TYPE_NORMAL | BIT_TYPE_PSYCHIC]      = sNormalPsychicResists,
    [BIT_TYPE_NORMAL | BIT_TYPE_ROCK]         = sNormalRockResists,
    [BIT_TYPE_NORMAL | BIT_TYPE_STEEL]        = sNormalSteelResists,
    [BIT_TYPE_NORMAL | BIT_TYPE_WATER]        = sNormalWaterResists,
    [BIT_TYPE_BUG | BIT_TYPE_POISON]          = sBugPoisonResists,
    [BIT_TYPE_DARK | BIT_TYPE_POISON]         = sDarkPoisonResists,
    [BIT_TYPE_DRAGON | BIT_TYPE_POISON]       = sDragonPoisonResists,
    [BIT_TYPE_ELECTRIC | BIT_TYPE_POISON]     = sElectricPoisonResists,
    [BIT_TYPE_FAIRY | BIT_TYPE_POISON]        = sFairyPoisonResists,
    [BIT_TYPE_FIGHTING | BIT_TYPE_POISON]     = sFightingPoisonResists,
    [BIT_TYPE_FIRE | BIT_TYPE_POISON]         = sFirePoisonResists,
    [BIT_TYPE_FLYING | BIT_TYPE_POISON]       = sFlyingPoisonResists,
    [BIT_TYPE_GHOST | BIT_TYPE_POISON]        = sGhostPoisonResists,
    [BIT_TYPE_GRASS | BIT_TYPE_POISON]        = sGrassPoisonResists,
    [BIT_TYPE_GROUND | BIT_TYPE_POISON]       = sGroundPoisonResists,
    [BIT_TYPE_ICE | BIT_TYPE_POISON]          = sIcePoisonResists,
    [BIT_TYPE_NORMAL | BIT_TYPE_POISON]       = sNormalPoisonResists,
    [BIT_TYPE_POISON | BIT_TYPE_PSYCHIC]      = sPoisonPsychicResists,
    [BIT_TYPE_POISON | BIT_TYPE_ROCK]         = sPoisonRockResists,
    [BIT_TYPE_POISON | BIT_TYPE_STEEL]        = sPoisonSteelResists,
    [BIT_TYPE_POISON | BIT_TYPE_WATER]        = sPoisonWaterResists,
    [BIT_TYPE_BUG | BIT_TYPE_PSYCHIC]         = sBugPsychicResists,
    [BIT_TYPE_DARK | BIT_TYPE_PSYCHIC]        = sDarkPsychicResists,
    [BIT_TYPE_DRAGON | BIT_TYPE_PSYCHIC]      = sDragonPsychicResists,
    [BIT_TYPE_ELECTRIC | BIT_TYPE_PSYCHIC]    = sElectricPsychicResists,
    [BIT_TYPE_FAIRY | BIT_TYPE_PSYCHIC]       = sFairyPsychicResists,
    [BIT_TYPE_FIGHTING | BIT_TYPE_PSYCHIC]    = sFightingPsychicResists,
    [BIT_TYPE_FIRE | BIT_TYPE_PSYCHIC]        = sFirePsychicResists,
    [BIT_TYPE_FLYING | BIT_TYPE_PSYCHIC]      = sFlyingPsychicResists,
    [BIT_TYPE_GHOST | BIT_TYPE_PSYCHIC]       = sGhostPsychicResists,
    [BIT_TYPE_GRASS | BIT_TYPE_PSYCHIC]       = sGrassPsychicResists,
    [BIT_TYPE_GROUND | BIT_TYPE_PSYCHIC]      = sGroundPsychicResists,
    [BIT_TYPE_ICE | BIT_TYPE_PSYCHIC]         = sIcePsychicResists,
    [BIT_TYPE_NORMAL | BIT_TYPE_PSYCHIC]      = sNormalPsychicResists,
    [BIT_TYPE_POISON | BIT_TYPE_PSYCHIC]      = sPoisonPsychicResists,
    [BIT_TYPE_PSYCHIC | BIT_TYPE_ROCK]        = sPsychicRockResists,
    [BIT_TYPE_PSYCHIC | BIT_TYPE_STEEL]       = sPsychicSteelResists,
    [BIT_TYPE_PSYCHIC | BIT_TYPE_WATER]       = sPsychicWaterResists,
    [BIT_TYPE_BUG | BIT_TYPE_ROCK]            = sBugRockResists,
    [BIT_TYPE_DARK | BIT_TYPE_ROCK]           = sDarkRockResists,
    [BIT_TYPE_DRAGON | BIT_TYPE_ROCK]         = sDragonRockResists,
    [BIT_TYPE_ELECTRIC | BIT_TYPE_ROCK]       = sElectricRockResists,
    [BIT_TYPE_FAIRY | BIT_TYPE_ROCK]          = sFairyRockResists,
    [BIT_TYPE_FIGHTING | BIT_TYPE_ROCK]       = sFightingRockResists,
    [BIT_TYPE_FIRE | BIT_TYPE_ROCK]           = sFireRockResists,
    [BIT_TYPE_FLYING | BIT_TYPE_ROCK]         = sFlyingRockResists,
    [BIT_TYPE_GHOST | BIT_TYPE_ROCK]          = sGhostRockResists,
    [BIT_TYPE_GRASS | BIT_TYPE_ROCK]          = sGrassRockResists,
    [BIT_TYPE_GROUND | BIT_TYPE_ROCK]         = sGroundRockResists,
    [BIT_TYPE_ICE | BIT_TYPE_ROCK]            = sIceRockResists,
    [BIT_TYPE_NORMAL | BIT_TYPE_ROCK]         = sNormalRockResists,
    [BIT_TYPE_POISON | BIT_TYPE_ROCK]         = sPoisonRockResists,
    [BIT_TYPE_PSYCHIC | BIT_TYPE_ROCK]        = sPsychicRockResists,
    [BIT_TYPE_ROCK | BIT_TYPE_STEEL]          = sRockSteelResists,
    [BIT_TYPE_ROCK | BIT_TYPE_WATER]          = sRockWaterResists,
    [BIT_TYPE_BUG | BIT_TYPE_STEEL]           = sBugSteelResists,
    [BIT_TYPE_DARK | BIT_TYPE_STEEL]          = sDarkSteelResists,
    [BIT_TYPE_DRAGON | BIT_TYPE_STEEL]        = sDragonSteelResists,
    [BIT_TYPE_ELECTRIC | BIT_TYPE_STEEL]      = sElectricSteelResists,
    [BIT_TYPE_FAIRY | BIT_TYPE_STEEL]         = sFairySteelResists,
    [BIT_TYPE_FIGHTING | BIT_TYPE_STEEL]      = sFightingSteelResists,
    [BIT_TYPE_FIRE | BIT_TYPE_STEEL]          = sFireSteelResists,
    [BIT_TYPE_FLYING | BIT_TYPE_STEEL]        = sFlyingSteelResists,
    [BIT_TYPE_GHOST | BIT_TYPE_STEEL]         = sGhostSteelResists,
    [BIT_TYPE_GRASS | BIT_TYPE_STEEL]         = sGrassSteelResists,
    [BIT_TYPE_GROUND | BIT_TYPE_STEEL]        = sGroundSteelResists,
    [BIT_TYPE_ICE | BIT_TYPE_STEEL]           = sIceSteelResists,
    [BIT_TYPE_NORMAL | BIT_TYPE_STEEL]        = sNormalSteelResists,
    [BIT_TYPE_POISON | BIT_TYPE_STEEL]        = sPoisonSteelResists,
    [BIT_TYPE_PSYCHIC | BIT_TYPE_STEEL]       = sPsychicSteelResists,
    [BIT_TYPE_ROCK | BIT_TYPE_STEEL]          = sRockSteelResists,
    [BIT_TYPE_STEEL | BIT_TYPE_WATER]         = sSteelWaterResists,
    [BIT_TYPE_BUG | BIT_TYPE_WATER]           = sBugWaterResists,
    [BIT_TYPE_DARK | BIT_TYPE_WATER]          = sDarkWaterResists,
    [BIT_TYPE_DRAGON | BIT_TYPE_WATER]        = sDragonWaterResists,
    [BIT_TYPE_ELECTRIC | BIT_TYPE_WATER]      = sElectricWaterResists,
    [BIT_TYPE_FAIRY | BIT_TYPE_WATER]         = sFairyWaterResists,
    [BIT_TYPE_FIGHTING | BIT_TYPE_WATER]      = sFightingWaterResists,
    [BIT_TYPE_FIRE | BIT_TYPE_WATER]          = sFireWaterResists,
    [BIT_TYPE_FLYING | BIT_TYPE_WATER]        = sFlyingWaterResists,
    [BIT_TYPE_GHOST | BIT_TYPE_WATER]         = sGhostWaterResists,
    [BIT_TYPE_GRASS | BIT_TYPE_WATER]         = sGrassWaterResists,
    [BIT_TYPE_GROUND | BIT_TYPE_WATER]        = sGroundWaterResists,
    [BIT_TYPE_ICE | BIT_TYPE_WATER]           = sIceWaterResists,
    [BIT_TYPE_NORMAL | BIT_TYPE_WATER]        = sNormalWaterResists,
    [BIT_TYPE_POISON | BIT_TYPE_WATER]        = sPoisonWaterResists,
    [BIT_TYPE_PSYCHIC | BIT_TYPE_WATER]       = sPsychicWaterResists,
    [BIT_TYPE_ROCK | BIT_TYPE_WATER]          = sRockWaterResists,
    [BIT_TYPE_STEEL | BIT_TYPE_WATER]         = sSteelWaterResists,
};

const struct u32 *gTypeChartResistsLookupTable[] =
{
    [BIT_TYPE_BUG]                            = sBugDoubleResists,
    [BIT_TYPE_DARK]                           = sDarkDoubleResists,
    [BIT_TYPE_ELECTRIC]                       = sElectricDoubleResists,
    [BIT_TYPE_FAIRY]                          = sFairyDoubleResists,
    [BIT_TYPE_FIGHTING]                       = sFightingDoubleResists,
    [BIT_TYPE_FIRE]                           = sFireDoubleResists,
    [BIT_TYPE_FLYING]                         = sFlyingDoubleResists,
    [BIT_TYPE_GRASS]                          = sGrassDoubleResists,
    [BIT_TYPE_GROUND]                         = sGroundDoubleResists,
    [BIT_TYPE_ICE]                            = sIceDoubleResists,
    [BIT_TYPE_NORMAL]                         = sNormalDoubleResists,
    [BIT_TYPE_POISON]                         = sPoisonDoubleResists,
    [BIT_TYPE_PSYCHIC]                        = sPsychicDoubleResists,
    [BIT_TYPE_ROCK]                           = sRockDoubleResists,
    [BIT_TYPE_STEEL]                          = sSteelDoubleResists,
    [BIT_TYPE_WATER]                          = sWaterDoubleResists,
    [BIT_TYPE_BUG | BIT_TYPE_DARK]            = sBugDarkDoubleResists,
    [BIT_TYPE_BUG | BIT_TYPE_FAIRY]           = sBugFairyDoubleResists,
    [BIT_TYPE_BUG | BIT_TYPE_FIGHTING]        = sBugFightingDoubleResists,
    [BIT_TYPE_BUG | BIT_TYPE_GRASS]           = sBugGrassDoubleResists,
    [BIT_TYPE_BUG | BIT_TYPE_ICE]             = sBugIceDoubleResists,
    [BIT_TYPE_BUG | BIT_TYPE_POISON]          = sBugPoisonDoubleResists,
    [BIT_TYPE_BUG | BIT_TYPE_ROCK]            = sBugRockDoubleResists,
    [BIT_TYPE_BUG | BIT_TYPE_STEEL]           = sBugSteelDoubleResists,
    [BIT_TYPE_BUG | BIT_TYPE_DARK]            = sBugDarkDoubleResists,
    [BIT_TYPE_ELECTRIC | BIT_TYPE_GRASS]      = sElectricGrassDoubleResists,
    [BIT_TYPE_ELECTRIC | BIT_TYPE_WATER]      = sElectricWaterDoubleResists,
    [BIT_TYPE_BUG | BIT_TYPE_FAIRY]           = sBugFairyDoubleResists,
    [BIT_TYPE_FAIRY | BIT_TYPE_GRASS]         = sFairyGrassDoubleResists,
    [BIT_TYPE_FAIRY | BIT_TYPE_ICE]           = sFairyIceDoubleResists,
    [BIT_TYPE_FAIRY | BIT_TYPE_STEEL]         = sFairySteelDoubleResists,
    [BIT_TYPE_BUG | BIT_TYPE_FIGHTING]        = sBugFightingDoubleResists,
    [BIT_TYPE_FIGHTING | BIT_TYPE_GRASS]      = sFightingGrassDoubleResists,
    [BIT_TYPE_FIRE | BIT_TYPE_GRASS]          = sFireGrassDoubleResists,
    [BIT_TYPE_FIRE | BIT_TYPE_ICE]            = sFireIceDoubleResists,
    [BIT_TYPE_FIRE | BIT_TYPE_STEEL]          = sFireSteelDoubleResists,
    [BIT_TYPE_FIRE | BIT_TYPE_WATER]          = sFireWaterDoubleResists,
    [BIT_TYPE_FLYING | BIT_TYPE_NORMAL]       = sFlyingNormalDoubleResists,
    [BIT_TYPE_FLYING | BIT_TYPE_STEEL]        = sFlyingSteelDoubleResists,
    [BIT_TYPE_BUG | BIT_TYPE_GRASS]           = sBugGrassDoubleResists,
    [BIT_TYPE_ELECTRIC | BIT_TYPE_GRASS]      = sElectricGrassDoubleResists,
    [BIT_TYPE_FAIRY | BIT_TYPE_GRASS]         = sFairyGrassDoubleResists,
    [BIT_TYPE_FIGHTING | BIT_TYPE_GRASS]      = sFightingGrassDoubleResists,
    [BIT_TYPE_FIRE | BIT_TYPE_GRASS]          = sFireGrassDoubleResists,
    [BIT_TYPE_GRASS | BIT_TYPE_GROUND]        = sGrassGroundDoubleResists,
    [BIT_TYPE_GRASS | BIT_TYPE_ICE]           = sGrassIceDoubleResists,
    [BIT_TYPE_GRASS | BIT_TYPE_STEEL]         = sGrassSteelDoubleResists,
    [BIT_TYPE_GRASS | BIT_TYPE_WATER]         = sGrassWaterDoubleResists,
    [BIT_TYPE_GRASS | BIT_TYPE_GROUND]        = sGrassGroundDoubleResists,
    [BIT_TYPE_BUG | BIT_TYPE_ICE]             = sBugIceDoubleResists,
    [BIT_TYPE_FAIRY | BIT_TYPE_ICE]           = sFairyIceDoubleResists,
    [BIT_TYPE_FIRE | BIT_TYPE_ICE]            = sFireIceDoubleResists,
    [BIT_TYPE_GRASS | BIT_TYPE_ICE]           = sGrassIceDoubleResists,
    [BIT_TYPE_ICE | BIT_TYPE_STEEL]           = sIceSteelDoubleResists,
    [BIT_TYPE_FLYING | BIT_TYPE_NORMAL]       = sFlyingNormalDoubleResists,
    [BIT_TYPE_BUG | BIT_TYPE_POISON]          = sBugPoisonDoubleResists,
    [BIT_TYPE_BUG | BIT_TYPE_ROCK]            = sBugRockDoubleResists,
    [BIT_TYPE_BUG | BIT_TYPE_STEEL]           = sBugSteelDoubleResists,
    [BIT_TYPE_FAIRY | BIT_TYPE_STEEL]         = sFairySteelDoubleResists,
    [BIT_TYPE_FIRE | BIT_TYPE_STEEL]          = sFireSteelDoubleResists,
    [BIT_TYPE_FLYING | BIT_TYPE_STEEL]        = sFlyingSteelDoubleResists,
    [BIT_TYPE_GRASS | BIT_TYPE_STEEL]         = sGrassSteelDoubleResists,
    [BIT_TYPE_ICE | BIT_TYPE_STEEL]           = sIceSteelDoubleResists,
    [BIT_TYPE_ELECTRIC | BIT_TYPE_WATER]      = sElectricWaterDoubleResists,
    [BIT_TYPE_FIRE | BIT_TYPE_WATER]          = sFireWaterDoubleResists,
    [BIT_TYPE_GRASS | BIT_TYPE_WATER]         = sGrassWaterDoubleResists,
};

const struct u32 *gTypeChartImmunitiesTable[] =
{
    [BIT_TYPE_DRAGON]                         = sDragonImmunities,
    [BIT_TYPE_ELECTRIC]                       = sElectricImmunities,
    [BIT_TYPE_FIGHTING]                       = sFightingImmunities,
    [BIT_TYPE_GHOST]                          = sGhostImmunities,
    [BIT_TYPE_GROUND]                         = sGroundImmunities,
    [BIT_TYPE_NORMAL]                         = sNormalImmunities,
    [BIT_TYPE_POISON]                         = sPoisonImmunities,
    [BIT_TYPE_PSYCHIC]                        = sPsychicImmunities,
    [BIT_TYPE_DRAGON | BIT_TYPE_ELECTRIC]     = sDragonElectricImmunities,
    [BIT_TYPE_DRAGON | BIT_TYPE_FIGHTING]     = sDragonFightingImmunities,
    [BIT_TYPE_DRAGON | BIT_TYPE_GHOST]        = sDragonGhostImmunities,
    [BIT_TYPE_DRAGON | BIT_TYPE_GROUND]       = sDragonGroundImmunities,
    [BIT_TYPE_DRAGON | BIT_TYPE_NORMAL]       = sDragonNormalImmunities,
    [BIT_TYPE_DRAGON | BIT_TYPE_POISON]       = sDragonPoisonImmunities,
    [BIT_TYPE_DRAGON | BIT_TYPE_PSYCHIC]      = sDragonPsychicImmunities,
    [BIT_TYPE_DRAGON | BIT_TYPE_ELECTRIC]     = sDragonElectricImmunities,
    [BIT_TYPE_ELECTRIC | BIT_TYPE_FIGHTING]   = sElectricFightingImmunities,
    [BIT_TYPE_ELECTRIC | BIT_TYPE_GHOST]      = sElectricGhostImmunities,
    [BIT_TYPE_ELECTRIC | BIT_TYPE_GROUND]     = sElectricGroundImmunities,
    [BIT_TYPE_ELECTRIC | BIT_TYPE_NORMAL]     = sElectricNormalImmunities,
    [BIT_TYPE_ELECTRIC | BIT_TYPE_POISON]     = sElectricPoisonImmunities,
    [BIT_TYPE_ELECTRIC | BIT_TYPE_PSYCHIC]    = sElectricPsychicImmunities,
    [BIT_TYPE_DRAGON | BIT_TYPE_FIGHTING]     = sDragonFightingImmunities,
    [BIT_TYPE_ELECTRIC | BIT_TYPE_FIGHTING]   = sElectricFightingImmunities,
    [BIT_TYPE_FIGHTING | BIT_TYPE_GHOST]      = sFightingGhostImmunities,
    [BIT_TYPE_FIGHTING | BIT_TYPE_GROUND]     = sFightingGroundImmunities,
    [BIT_TYPE_FIGHTING | BIT_TYPE_POISON]     = sFightingPoisonImmunities,
    [BIT_TYPE_FIGHTING | BIT_TYPE_PSYCHIC]    = sFightingPsychicImmunities,
    [BIT_TYPE_DRAGON | BIT_TYPE_GHOST]        = sDragonGhostImmunities,
    [BIT_TYPE_ELECTRIC | BIT_TYPE_GHOST]      = sElectricGhostImmunities,
    [BIT_TYPE_FIGHTING | BIT_TYPE_GHOST]      = sFightingGhostImmunities,
    [BIT_TYPE_GHOST | BIT_TYPE_GROUND]        = sGhostGroundImmunities,
    [BIT_TYPE_GHOST | BIT_TYPE_NORMAL]        = sGhostNormalImmunities,
    [BIT_TYPE_GHOST | BIT_TYPE_POISON]        = sGhostPoisonImmunities,
    [BIT_TYPE_GHOST | BIT_TYPE_PSYCHIC]       = sGhostPsychicImmunities,
    [BIT_TYPE_DRAGON | BIT_TYPE_GROUND]       = sDragonGroundImmunities,
    [BIT_TYPE_ELECTRIC | BIT_TYPE_GROUND]     = sElectricGroundImmunities,
    [BIT_TYPE_FIGHTING | BIT_TYPE_GROUND]     = sFightingGroundImmunities,
    [BIT_TYPE_GHOST | BIT_TYPE_GROUND]        = sGhostGroundImmunities,
    [BIT_TYPE_GROUND | BIT_TYPE_NORMAL]       = sGroundNormalImmunities,
    [BIT_TYPE_GROUND | BIT_TYPE_POISON]       = sGroundPoisonImmunities,
    [BIT_TYPE_GROUND | BIT_TYPE_PSYCHIC]      = sGroundPsychicImmunities,
    [BIT_TYPE_DRAGON | BIT_TYPE_NORMAL]       = sDragonNormalImmunities,
    [BIT_TYPE_ELECTRIC | BIT_TYPE_NORMAL]     = sElectricNormalImmunities,
    [BIT_TYPE_GHOST | BIT_TYPE_NORMAL]        = sGhostNormalImmunities,
    [BIT_TYPE_GROUND | BIT_TYPE_NORMAL]       = sGroundNormalImmunities,
    [BIT_TYPE_NORMAL | BIT_TYPE_POISON]       = sNormalPoisonImmunities,
    [BIT_TYPE_NORMAL | BIT_TYPE_PSYCHIC]      = sNormalPsychicImmunities,
    [BIT_TYPE_DRAGON | BIT_TYPE_POISON]       = sDragonPoisonImmunities,
    [BIT_TYPE_ELECTRIC | BIT_TYPE_POISON]     = sElectricPoisonImmunities,
    [BIT_TYPE_FIGHTING | BIT_TYPE_POISON]     = sFightingPoisonImmunities,
    [BIT_TYPE_GHOST | BIT_TYPE_POISON]        = sGhostPoisonImmunities,
    [BIT_TYPE_GROUND | BIT_TYPE_POISON]       = sGroundPoisonImmunities,
    [BIT_TYPE_NORMAL | BIT_TYPE_POISON]       = sNormalPoisonImmunities,
    [BIT_TYPE_POISON | BIT_TYPE_PSYCHIC]      = sPoisonPsychicImmunities,
    [BIT_TYPE_DRAGON | BIT_TYPE_PSYCHIC]      = sDragonPsychicImmunities,
    [BIT_TYPE_ELECTRIC | BIT_TYPE_PSYCHIC]    = sElectricPsychicImmunities,
    [BIT_TYPE_FIGHTING | BIT_TYPE_PSYCHIC]    = sFightingPsychicImmunities,
    [BIT_TYPE_GHOST | BIT_TYPE_PSYCHIC]       = sGhostPsychicImmunities,
    [BIT_TYPE_GROUND | BIT_TYPE_PSYCHIC]      = sGroundPsychicImmunities,
    [BIT_TYPE_NORMAL | BIT_TYPE_PSYCHIC]      = sNormalPsychicImmunities,
    [BIT_TYPE_POISON | BIT_TYPE_PSYCHIC]      = sPoisonPsychicImmunities,
};
"
xP7Ah2mM,SpaceX script,A_GUES,Lua,Saturday 1st of July 2023 08:05:39 PM CDT,"loadstring(game:HttpGet(('https://raw.githubusercontent.com/ProExecutor/Pro-Executor-/main/SpaceX.lua'),true))()"
uyCdXbWj,Untitled,35657,C++,Saturday 1st of July 2023 07:54:30 PM CDT,"#include <iostream>

using namespace std;

//int Max(int left, int right) {
//	if (left > right) {
//		return left;
//	}
//	else {
//		return right;
//	}
//}
//
//int Max(int left, int right) {
//	return left > right ? left : right;
//}
//

int Max(int left, int right) {
	int c = 0;
	left > right ? c = left : c = right;
	return c;
}

void PrintMax(int left, int right) {
	left > right ? cout << left : cout << right;
	cout << endl;
}


void Print() {
	cout << ""hello"" << endl;
}


int Sum(int a, int b) {
	return a + b;
}

int Mult(int a, int b) {
	return a * b;
}

void Calc(int a, int b) {
	cout << (Sum(a, b) - Mult(a, b)) * 2 << endl;
}

void PrinRectangle(int a, int b) {
	for (int i = 0; i < a; i++) {
		for (int j = 0; j < b; j++) {
			cout << '*';
		}
		cout << endl;
	}
	cout << endl;
}

int Fact(int N) {
	int result = 1;
	for (int i = 1; i <= N; i++) {
		result *= i;
	}
	return result;
}

void IsSimple(int number) {
	for (int i = 2; i < number; i++) {
		if (number % i == 0) {
			cout << ""No simple"" << endl;
			return;
		}
	}
	cout << ""Simple"" << endl;
}

//bool IsSimple(int number) {
//	for (int i = 2; i < number; i++) {
//		if (number % i == 0) {
//			return false;
//		}
//	}
//	return true;
//}

void CheckArray(int arr[], int size) {
	int min = arr[0];
	int min_index = 0;
	int max = arr[0];
	int max_index = 0;

	for (int i = 0; i < size; i++) {
		if (arr[i] < min) {
			min = arr[i];
			min_index = i;
		}
		if (arr[i] > max) {
			max = arr[i];
			max_index = i;
		}
	}
	cout << ""ÐÐ¸Ð½Ð¸Ð¼Ð°Ð»ÑÐ½Ð¾Ðµ Ð·Ð½Ð°ÑÐµÐ½Ð¸Ðµ: "" << min << "", Ð¸Ð½Ð´ÐµÐºÑ: "" << min_index << endl;
	cout << ""ÐÐ°ÐºÑÐ¸Ð¼Ð°Ð»ÑÐ½Ð¾Ðµ Ð·Ð½Ð°ÑÐµÐ½Ð¸Ðµ: "" << max << "", Ð¸Ð½Ð´ÐµÐºÑ: "" << max_index << endl;
}

void InvertArray(int arr[], int size) {
	for (int i = 0; i < size / 2; i++) {
		int temp = arr[i];
		arr[i] = arr[size - i - 1];
		arr[size - i - 1] = temp;
	}
}

void PrintArray(int arr[], int size) {
	for (int i = 0; i < size; i++) {
		cout << arr[i] << "" "";
	}
	cout << endl;
}

void RandArray(int arr[], int size) {
	srand(time(NULL));
	for (int i = 0; i < size; i++) {
		arr[i] = rand() % 100;
	}
}

void SortArray(int arr[], int size) {
	for (int i = 0; i < size; i++) {
		for (int j = 0; j < size - 1; j++) {
			if (arr[j] > arr[j + 1]) {
				int temp = arr[j];
				arr[j] = arr[j + 1];
				arr[j + 1] = temp;
			}
		}
	}
}

int main() {
	setlocale(LC_ALL, ""Russian"");
	const int size = 10;
	int arr[size];
	RandArray(arr, size);
	PrintArray(arr, size);
	CheckArray(arr, size);
	InvertArray(arr, size);
	PrintArray(arr, size);
	SortArray(arr, size);
	PrintArray(arr, size);
}"
daZrqx3b,Untitled,35657,C++,Saturday 1st of July 2023 07:50:07 PM CDT,"#include <iostream>

using namespace std;


class ForwardList {
public:

    struct Node { //Ð¾Ð´Ð½Ð¾ÑÐ²ÑÐ·Ð½ÑÐ¹ ÑÐ¿Ð¸ÑÐ¾Ðº ÑÐ¾ÑÑÐ¾Ð¸Ñ Ð¸Ð· ÑÐ·Ð»Ð¾Ð²
        int value; // ÑÐ·ÐµÐ» ÑÑÐ°Ð½Ð¸Ñ Ð¸Ð½ÑÐ¾ÑÐ¼Ð°ÑÐ¸Ð²Ð½ÑÑ ÑÐ°ÑÑÑ
        Node* next; // Ð¸ ÑÐºÐ°Ð·Ð°ÑÐµÐ»Ñ Ð½Ð° ÑÐ»ÐµÐ´ÑÑÑÐ¸Ð¹ ÑÐ·ÐµÐ» Ð² ÑÐ¿Ð¸ÑÐºÐµ
    };

    void Push_front(const int& value) {
        head = new Node{ value, head };
        size++;
    }

    void Pop_front() {
        if (size > 0) {
            Node* temp = head;
            head = head->next;
            delete temp;
            size--;
        }
    }

    void Print() {
        Node* temp = head;
        while (temp != nullptr) {
            cout << temp->value << "" "";
            temp = temp->next;
        }
        cout << endl;
    }

    int Front() {
        if (head != nullptr) {
            return head->value;
        }
    }

    int Front() const {
        if (head != nullptr) {
            return head->value;
        }
    }

    int Find(const int value) {
        int i = 0;
        Node* temp = head;
        while (temp != nullptr) {
            if (temp->value == value) {
                return i;
            }
            temp = temp->next;
            i++;
        }
        return -1;
    }

    void Insert(const int index, const int value) {
        if (index == 0) {
            Push_front(value);
            return;
        }
        if (index > 0 && index <= size) {
            Node* temp = head;
            for (int i = 0; i < index - 1; i++) {
                temp = temp->next;
            }
            temp->next = new Node{ value, temp->next };
            size++;
        }
    }

    void Erase(const int index) {
        if (index == 0) {
            Pop_front();
            return;
        }
        if (index > 0 && index < size) {
            Node* temp = head;
            for (int i = 0; i < index - 1; i++) {
                temp = temp->next;
            }
            Node* buf = temp->next->next;
            delete temp->next;
            temp->next = buf;
            size--;
        }
    }

    void Clear() {
        while (head != nullptr) {
            Pop_front();
        }
    }

    int Size() const {
        return size;
    }

private:
    int size = 0;
    Node* head = nullptr;
};

int main() {
    ForwardList list1;

    for (int i = 0; i < 10; i++) {
        list1.Push_front(i + 1);
    }
    list1.Print();
    cout << list1.Size() << endl;

    for (int i = 0; i < 3; i++) {
        list1.Pop_front();
    }
    list1.Print();
    cout << ""size = "" << list1.Size() << endl;

    cout << list1.Front() << endl;
    cout << list1.Find(5) << endl;

    list1.Insert(3, 10);
    list1.Print();
    list1.Erase(3);
    list1.Print();
    cout << ""============="" << endl;
    list1.Clear();
    list1.Print();
}"
0sjpULF6,Leetcode: 168. Excel Sheet Column Title,sanya5791,Kotlin,Saturday 1st of July 2023 07:40:06 PM CDT,"class Solution {
    fun convertToTitle(columnNumber: Int): String {
        val aCode = 64
        val dimentionNumber = 26

        val result = StringBuilder()
        var num = columnNumber
        while (num > 0) {
            val remainder = if (num % dimentionNumber == 0) dimentionNumber 
                            else num % dimentionNumber
            val ch = (remainder + aCode).toChar()
            result.insert(0, ch)

            num -= remainder
            num /= dimentionNumber
        }

        return result.toString()
    }
}"
85gGieqB,2023-07-01_stats.json,rdp_snitch,JSON,Saturday 1st of July 2023 07:18:31 PM CDT,"{
  ""ip"": {
    ""46.10.214.186"": 108,
    ""202.55.133.12"": 6,
    ""120.71.0.5"": 99,
    ""125.74.93.228"": 162,
    ""92.204.139.79"": 171,
    ""114.217.18.245"": 96,
    ""69.58.124.234"": 147,
    ""36.108.169.132"": 96,
    ""168.138.149.190"": 27,
    ""172.105.53.82"": 6,
    ""178.21.163.70"": 27,
    ""185.66.228.185"": 54,
    ""192.99.110.133"": 18,
    ""201.93.165.53"": 21,
    ""20.42.101.211"": 102,
    ""168.138.255.225"": 24,
    ""152.89.198.113"": 3,
    ""222.88.163.139"": 6,
    ""194.165.16.11"": 6,
    ""87.251.75.145"": 6,
    ""31.43.185.32"": 24,
    ""139.162.114.83"": 30,
    ""164.92.158.134"": 12,
    ""91.240.118.133"": 12,
    ""185.170.144.3"": 6,
    ""39.104.21.190"": 18,
    ""139.162.155.67"": 3,
    ""47.108.29.192"": 3,
    ""138.197.8.152"": 3,
    ""120.132.17.153"": 24,
    ""87.251.75.120"": 3,
    ""119.23.235.54"": 3,
    ""202.139.198.173"": 3,
    ""103.55.38.129"": 3,
    ""182.52.113.124"": 3,
    ""68.183.177.180"": 9,
    ""43.156.229.114"": 3,
    ""112.5.87.34"": 3,
    ""45.227.254.55"": 6,
    ""178.32.170.23"": 3,
    ""179.43.184.138"": 3,
    ""205.210.31.65"": 9,
    ""139.59.28.233"": 12,
    ""120.27.12.65"": 3,
    ""87.251.75.64"": 3,
    ""162.142.125.214"": 3,
    ""121.138.145.136"": 6,
    ""45.119.81.119"": 6,
    ""152.89.198.133"": 6,
    ""62.122.184.166"": 12,
    ""62.122.184.168"": 12,
    ""87.251.64.110"": 6,
    ""45.227.254.49"": 6,
    ""13.69.193.185"": 3,
    ""62.122.184.165"": 6,
    ""167.248.133.33"": 3,
    ""118.70.102.3"": 6,
    ""45.140.17.16"": 9,
    ""20.110.29.138"": 3,
    ""205.210.31.172"": 9
  },
  ""asn"": {
    ""AS8866"": 108,
    ""AS63737"": 6,
    ""AS137695"": 195,
    ""AS141998"": 162,
    ""AS398108"": 171,
    ""AS4134"": 102,
    ""AS32899"": 147,
    ""AS31898"": 51,
    ""AS63949"": 39,
    ""AS21419"": 27,
    ""AS201689"": 54,
    ""AS16276"": 21,
    ""AS27699"": 21,
    ""AS8075"": 108,
    ""AS57523"": 51,
    ""AS48721"": 6,
    ""AS208091"": 12,
    ""AS211736"": 24,
    ""AS14061"": 36,
    ""AS48080"": 12,
    ""AS37963"": 27,
    ""AS140292"": 24,
    ""AS135566"": 3,
    ""AS136052"": 3,
    ""AS23969"": 3,
    ""AS132203"": 3,
    ""AS9808"": 3,
    ""AS267784"": 12,
    ""AS51852"": 3,
    ""AS396982"": 18,
    ""AS398324"": 3,
    ""AS4766"": 6,
    ""AS131386"": 6,
    ""AS398722"": 3,
    ""AS18403"": 6,
    ""AS198953"": 9
  },
  ""isp"": {
    ""Vivacom Bulgaria EAD"": 108,
    ""Vietserver Services Technology Company Limited"": 6,
    ""CHINATELECOM Xinjiang Wulumuqi MAN network"": 195,
    ""China Telecom"": 162,
    ""GoDaddy.com, LLC"": 171,
    ""Chinanet"": 102,
    ""Bresco Broadband"": 147,
    ""Oracle Corporation"": 51,
    ""Akamai Technologies"": 6,
    ""Pishtaze E Jadid Infomration Company"": 27,
    ""Lamerd Information & Communication Technology Co., ltd"": 54,
    ""OVH SAS"": 18,
    ""Vivo"": 21,
    ""Microsoft Corporation"": 108,
    ""Chang Way Technologies Co. Limited"": 51,
    ""Flyservers S.A."": 18,
    ""XHOST-INTERNET-SOLUTIONS"": 12,
    ""FOP Dmytro Nedilskyi"": 24,
    ""Akamai Technologies, Inc."": 33,
    ""DigitalOcean, LLC"": 24,
    ""Dmitriy Panchenko"": 12,
    ""Hangzhou Alibaba Advertising Co"": 24,
    ""Addresses CNNIC"": 27,
    ""catCloud"": 3,
    ""PT Cloud Hosting Indonesia"": 3,
    ""TOT Public Company Limited"": 3,
    ""Shenzhen Tencent Computer Systems Company Limited"": 3,
    ""China Mobile"": 3,
    ""OVH ISP"": 3,
    ""Private Layer INC"": 3,
    ""Google LLC"": 18,
    ""DigitalOcean"": 12,
    ""Censys, Inc."": 6,
    ""Korea Telecom"": 6,
    ""Long Van System Solution"": 6,
    ""FPT Telecom Company"": 6,
    ""Proton66 OOO"": 9
  },
  ""org"": {
    ""Bulgarian Telecommunications Company Plc"": 108,
    ""VietServer Services technology company limited"": 6,
    ""Chinanet XJ"": 99,
    ""Chinanet GS"": 162,
    ""Unknown"": 285,
    ""Chinanet JS"": 96,
    ""Bresco Broadband"": 147,
    ""Chinanet ZJ"": 96,
    ""Oracle Cloud Infrastructure (sa-saopaulo-1)"": 51,
    ""Linode"": 6,
    ""AVAST Software"": 18,
    ""TELEF\ufffdNICA BRASIL S.A"": 21,
    ""Microsoft Azure Cloud (eastus)"": 102,
    ""Starcrecium Limited"": 9,
    ""Chinanet HA"": 6,
    ""Flyservers S.A"": 6,
    ""Xhost Internet Solutions"": 18,
    ""FOP Dmytro Nedilskyi"": 24,
    ""Linode, LLC"": 33,
    ""DigitalOcean, LLC"": 33,
    ""Chang Way Technologies Co. Limited"": 42,
    ""Xhostis"": 6,
    ""Aliyun Computing Co., LTD"": 27,
    ""Digital Ocean"": 3,
    ""PT Cloud Hosting Indonesia"": 3,
    ""Addresses for"": 3,
    ""Tencent Cloud Computing"": 3,
    ""China Mobile Communications Corporation"": 3,
    ""UAB Host Baltic"": 12,
    ""Novotea network"": 3,
    ""Private Layer Inc"": 3,
    ""Palo Alto Networks, Inc"": 18,
    ""Censys Inc"": 3,
    ""Kornet"": 6,
    ""Microsoft Azure Cloud (northeurope)"": 3,
    ""Censys, Inc."": 3,
    ""Vietnam Internet Network Information Center"": 6,
    ""Proton66 LLC"": 9,
    ""Microsoft Azure Cloud (eastus2)"": 3
  },
  ""regionName"": {
    ""Sofia-Capital"": 108,
    ""Hanoi"": 12,
    ""Xinjiang Uyghur Autonomous Region"": 99,
    ""Gansu"": 162,
    ""Virginia"": 276,
    ""Jiangsu"": 96,
    ""Ohio"": 147,
    ""Zhejiang"": 96,
    ""Sao Paulo"": 72,
    ""Maharashtra"": 6,
    ""Tehran"": 81,
    ""Quebec"": 18,
    ""Moscow"": 66,
    ""Henan"": 6,
    ""Kaunas"": 6,
    ""North Holland"": 30,
    ""Kyiv City"": 24,
    ""Tokyo"": 30,
    ""Beijing"": 42,
    ""Hesse"": 3,
    ""Sichuan"": 3,
    ""New Jersey"": 3,
    ""Guangdong"": 6,
    ""Samut Prakan"": 3,
    ""West Java"": 3,
    ""Pattani"": 3,
    ""South West"": 9,
    ""North West"": 3,
    ""Vilnius"": 12,
    ""Flanders"": 3,
    ""Zurich"": 3,
    ""California"": 18,
    ""Karnataka"": 12,
    ""Shandong"": 3,
    ""Michigan"": 6,
    ""Seoul"": 6,
    ""Ho Chi Minh"": 6,
    ""Leinster"": 3
  },
  ""country"": {
    ""Bulgaria"": 108,
    ""Vietnam"": 18,
    ""China"": 513,
    ""United States"": 450,
    ""Brazil"": 72,
    ""India"": 18,
    ""Iran"": 81,
    ""Canada"": 18,
    ""Russia"": 66,
    ""Lithuania"": 18,
    ""Netherlands"": 30,
    ""Ukraine"": 24,
    ""Japan"": 30,
    ""Germany"": 3,
    ""Thailand"": 6,
    ""Indonesia"": 3,
    ""Singapore"": 12,
    ""Belgium"": 3,
    ""Switzerland"": 3,
    ""South Korea"": 6,
    ""Ireland"": 3
  },
  ""account"": {
    ""142.93.8.59"": 1158,
    ""hello"": 153,
    ""Administr"": 48,
    ""Test"": 39,
    ""(empty)"": 9,
    ""Domain"": 57,
    ""Administrator"": 3,
    ""DlBJuMOHU"": 3,
    ""QEpYMO"": 3,
    ""ewEfbP"": 3,
    ""pTkbJQRJo"": 3,
    ""GrlIKT"": 3,
    ""LgWZjx"": 3
  },
  ""keyboard"": {
    ""Unknown"": 1485
  },
  ""client_build"": {
    ""Unknown"": 1485
  },
  ""client_name"": {
    ""Unknown"": 1485
  },
  ""ip_type"": {
    ""Unknown"": 1095,
    ""hosting"": 297,
    ""mobile"": 54,
    ""hosting & proxy"": 18,
    ""proxy"": 21
  }
}"
mxTKsQbY,2023-07-01_stats.json,rdp_snitch,JSON,Saturday 1st of July 2023 07:16:14 PM CDT,"{
  ""ip"": {
    ""46.10.214.186"": 72,
    ""202.55.133.12"": 4,
    ""120.71.0.5"": 66,
    ""125.74.93.228"": 108,
    ""92.204.139.79"": 114,
    ""114.217.18.245"": 64,
    ""69.58.124.234"": 98,
    ""36.108.169.132"": 64,
    ""168.138.149.190"": 18,
    ""172.105.53.82"": 4,
    ""178.21.163.70"": 18,
    ""185.66.228.185"": 36,
    ""192.99.110.133"": 12,
    ""201.93.165.53"": 14,
    ""20.42.101.211"": 68,
    ""168.138.255.225"": 16,
    ""152.89.198.113"": 2,
    ""222.88.163.139"": 4,
    ""194.165.16.11"": 4,
    ""87.251.75.145"": 4,
    ""31.43.185.32"": 16,
    ""139.162.114.83"": 20,
    ""164.92.158.134"": 8,
    ""91.240.118.133"": 8,
    ""185.170.144.3"": 4,
    ""39.104.21.190"": 12,
    ""139.162.155.67"": 2,
    ""47.108.29.192"": 2,
    ""138.197.8.152"": 2,
    ""120.132.17.153"": 16,
    ""87.251.75.120"": 2,
    ""119.23.235.54"": 2,
    ""202.139.198.173"": 2,
    ""103.55.38.129"": 2,
    ""182.52.113.124"": 2,
    ""68.183.177.180"": 6,
    ""43.156.229.114"": 2,
    ""112.5.87.34"": 2,
    ""45.227.254.55"": 4,
    ""178.32.170.23"": 2,
    ""179.43.184.138"": 2,
    ""205.210.31.65"": 6,
    ""139.59.28.233"": 8,
    ""120.27.12.65"": 2,
    ""87.251.75.64"": 2,
    ""162.142.125.214"": 2,
    ""121.138.145.136"": 4,
    ""45.119.81.119"": 4,
    ""152.89.198.133"": 4,
    ""62.122.184.166"": 8,
    ""62.122.184.168"": 8,
    ""87.251.64.110"": 4,
    ""45.227.254.49"": 4,
    ""13.69.193.185"": 2,
    ""62.122.184.165"": 4,
    ""167.248.133.33"": 2,
    ""118.70.102.3"": 4,
    ""45.140.17.16"": 6,
    ""20.110.29.138"": 2,
    ""205.210.31.172"": 6
  },
  ""asn"": {
    ""AS8866"": 72,
    ""AS63737"": 4,
    ""AS137695"": 130,
    ""AS141998"": 108,
    ""AS398108"": 114,
    ""AS4134"": 68,
    ""AS32899"": 98,
    ""AS31898"": 34,
    ""AS63949"": 26,
    ""AS21419"": 18,
    ""AS201689"": 36,
    ""AS16276"": 14,
    ""AS27699"": 14,
    ""AS8075"": 72,
    ""AS57523"": 34,
    ""AS48721"": 4,
    ""AS208091"": 8,
    ""AS211736"": 16,
    ""AS14061"": 24,
    ""AS48080"": 8,
    ""AS37963"": 18,
    ""AS140292"": 16,
    ""AS135566"": 2,
    ""AS136052"": 2,
    ""AS23969"": 2,
    ""AS132203"": 2,
    ""AS9808"": 2,
    ""AS267784"": 8,
    ""AS51852"": 2,
    ""AS396982"": 12,
    ""AS398324"": 2,
    ""AS4766"": 4,
    ""AS131386"": 4,
    ""AS398722"": 2,
    ""AS18403"": 4,
    ""AS198953"": 6
  },
  ""isp"": {
    ""Vivacom Bulgaria EAD"": 72,
    ""Vietserver Services Technology Company Limited"": 4,
    ""CHINATELECOM Xinjiang Wulumuqi MAN network"": 130,
    ""China Telecom"": 108,
    ""GoDaddy.com, LLC"": 114,
    ""Chinanet"": 68,
    ""Bresco Broadband"": 98,
    ""Oracle Corporation"": 34,
    ""Akamai Technologies"": 4,
    ""Pishtaze E Jadid Infomration Company"": 18,
    ""Lamerd Information & Communication Technology Co., ltd"": 36,
    ""OVH SAS"": 12,
    ""Vivo"": 14,
    ""Microsoft Corporation"": 72,
    ""Chang Way Technologies Co. Limited"": 34,
    ""Flyservers S.A."": 12,
    ""XHOST-INTERNET-SOLUTIONS"": 8,
    ""FOP Dmytro Nedilskyi"": 16,
    ""Akamai Technologies, Inc."": 22,
    ""DigitalOcean, LLC"": 16,
    ""Dmitriy Panchenko"": 8,
    ""Hangzhou Alibaba Advertising Co"": 16,
    ""Addresses CNNIC"": 18,
    ""catCloud"": 2,
    ""PT Cloud Hosting Indonesia"": 2,
    ""TOT Public Company Limited"": 2,
    ""Shenzhen Tencent Computer Systems Company Limited"": 2,
    ""China Mobile"": 2,
    ""OVH ISP"": 2,
    ""Private Layer INC"": 2,
    ""Google LLC"": 12,
    ""DigitalOcean"": 8,
    ""Censys, Inc."": 4,
    ""Korea Telecom"": 4,
    ""Long Van System Solution"": 4,
    ""FPT Telecom Company"": 4,
    ""Proton66 OOO"": 6
  },
  ""org"": {
    ""Bulgarian Telecommunications Company Plc"": 72,
    ""VietServer Services technology company limited"": 4,
    ""Chinanet XJ"": 66,
    ""Chinanet GS"": 108,
    ""Unknown"": 190,
    ""Chinanet JS"": 64,
    ""Bresco Broadband"": 98,
    ""Chinanet ZJ"": 64,
    ""Oracle Cloud Infrastructure (sa-saopaulo-1)"": 34,
    ""Linode"": 4,
    ""AVAST Software"": 12,
    ""TELEF\ufffdNICA BRASIL S.A"": 14,
    ""Microsoft Azure Cloud (eastus)"": 68,
    ""Starcrecium Limited"": 6,
    ""Chinanet HA"": 4,
    ""Flyservers S.A"": 4,
    ""Xhost Internet Solutions"": 12,
    ""FOP Dmytro Nedilskyi"": 16,
    ""Linode, LLC"": 22,
    ""DigitalOcean, LLC"": 22,
    ""Chang Way Technologies Co. Limited"": 28,
    ""Xhostis"": 4,
    ""Aliyun Computing Co., LTD"": 18,
    ""Digital Ocean"": 2,
    ""PT Cloud Hosting Indonesia"": 2,
    ""Addresses for"": 2,
    ""Tencent Cloud Computing"": 2,
    ""China Mobile Communications Corporation"": 2,
    ""UAB Host Baltic"": 8,
    ""Novotea network"": 2,
    ""Private Layer Inc"": 2,
    ""Palo Alto Networks, Inc"": 12,
    ""Censys Inc"": 2,
    ""Kornet"": 4,
    ""Microsoft Azure Cloud (northeurope)"": 2,
    ""Censys, Inc."": 2,
    ""Vietnam Internet Network Information Center"": 4,
    ""Proton66 LLC"": 6,
    ""Microsoft Azure Cloud (eastus2)"": 2
  },
  ""regionName"": {
    ""Sofia-Capital"": 72,
    ""Hanoi"": 8,
    ""Xinjiang Uyghur Autonomous Region"": 66,
    ""Gansu"": 108,
    ""Virginia"": 184,
    ""Jiangsu"": 64,
    ""Ohio"": 98,
    ""Zhejiang"": 64,
    ""Sao Paulo"": 48,
    ""Maharashtra"": 4,
    ""Tehran"": 54,
    ""Quebec"": 12,
    ""Moscow"": 44,
    ""Henan"": 4,
    ""Kaunas"": 4,
    ""North Holland"": 20,
    ""Kyiv City"": 16,
    ""Tokyo"": 20,
    ""Beijing"": 28,
    ""Hesse"": 2,
    ""Sichuan"": 2,
    ""New Jersey"": 2,
    ""Guangdong"": 4,
    ""Samut Prakan"": 2,
    ""West Java"": 2,
    ""Pattani"": 2,
    ""South West"": 6,
    ""North West"": 2,
    ""Vilnius"": 8,
    ""Flanders"": 2,
    ""Zurich"": 2,
    ""California"": 12,
    ""Karnataka"": 8,
    ""Shandong"": 2,
    ""Michigan"": 4,
    ""Seoul"": 4,
    ""Ho Chi Minh"": 4,
    ""Leinster"": 2
  },
  ""country"": {
    ""Bulgaria"": 72,
    ""Vietnam"": 12,
    ""China"": 342,
    ""United States"": 300,
    ""Brazil"": 48,
    ""India"": 12,
    ""Iran"": 54,
    ""Canada"": 12,
    ""Russia"": 44,
    ""Lithuania"": 12,
    ""Netherlands"": 20,
    ""Ukraine"": 16,
    ""Japan"": 20,
    ""Germany"": 2,
    ""Thailand"": 4,
    ""Indonesia"": 2,
    ""Singapore"": 8,
    ""Belgium"": 2,
    ""Switzerland"": 2,
    ""South Korea"": 4,
    ""Ireland"": 2
  },
  ""account"": {
    ""142.93.8.59"": 772,
    ""hello"": 102,
    ""Administr"": 32,
    ""Test"": 26,
    ""(empty)"": 6,
    ""Domain"": 38,
    ""Administrator"": 2,
    ""DlBJuMOHU"": 2,
    ""QEpYMO"": 2,
    ""ewEfbP"": 2,
    ""pTkbJQRJo"": 2,
    ""GrlIKT"": 2,
    ""LgWZjx"": 2
  },
  ""keyboard"": {
    ""Unknown"": 990
  },
  ""client_build"": {
    ""Unknown"": 990
  },
  ""client_name"": {
    ""Unknown"": 990
  },
  ""ip_type"": {
    ""Unknown"": 730,
    ""hosting"": 198,
    ""mobile"": 36,
    ""hosting & proxy"": 12,
    ""proxy"": 14
  }
}"
iq0qup6S,2023-07-01_stats.json,rdp_snitch,JSON,Saturday 1st of July 2023 07:15:08 PM CDT,"{
  ""ip"": {
    ""46.10.214.186"": 36,
    ""202.55.133.12"": 2,
    ""120.71.0.5"": 33,
    ""125.74.93.228"": 54,
    ""92.204.139.79"": 57,
    ""114.217.18.245"": 32,
    ""69.58.124.234"": 49,
    ""36.108.169.132"": 32,
    ""168.138.149.190"": 9,
    ""172.105.53.82"": 2,
    ""178.21.163.70"": 9,
    ""185.66.228.185"": 18,
    ""192.99.110.133"": 6,
    ""201.93.165.53"": 7,
    ""20.42.101.211"": 34,
    ""168.138.255.225"": 8,
    ""152.89.198.113"": 1,
    ""222.88.163.139"": 2,
    ""194.165.16.11"": 2,
    ""87.251.75.145"": 2,
    ""31.43.185.32"": 8,
    ""139.162.114.83"": 10,
    ""164.92.158.134"": 4,
    ""91.240.118.133"": 4,
    ""185.170.144.3"": 2,
    ""39.104.21.190"": 6,
    ""139.162.155.67"": 1,
    ""47.108.29.192"": 1,
    ""138.197.8.152"": 1,
    ""120.132.17.153"": 8,
    ""87.251.75.120"": 1,
    ""119.23.235.54"": 1,
    ""202.139.198.173"": 1,
    ""103.55.38.129"": 1,
    ""182.52.113.124"": 1,
    ""68.183.177.180"": 3,
    ""43.156.229.114"": 1,
    ""112.5.87.34"": 1,
    ""45.227.254.55"": 2,
    ""178.32.170.23"": 1,
    ""179.43.184.138"": 1,
    ""205.210.31.65"": 3,
    ""139.59.28.233"": 4,
    ""120.27.12.65"": 1,
    ""87.251.75.64"": 1,
    ""162.142.125.214"": 1,
    ""121.138.145.136"": 2,
    ""45.119.81.119"": 2,
    ""152.89.198.133"": 2,
    ""62.122.184.166"": 4,
    ""62.122.184.168"": 4,
    ""87.251.64.110"": 2,
    ""45.227.254.49"": 2,
    ""13.69.193.185"": 1,
    ""62.122.184.165"": 2,
    ""167.248.133.33"": 1,
    ""118.70.102.3"": 2,
    ""45.140.17.16"": 3,
    ""20.110.29.138"": 1,
    ""205.210.31.172"": 3
  },
  ""asn"": {
    ""AS8866"": 36,
    ""AS63737"": 2,
    ""AS137695"": 65,
    ""AS141998"": 54,
    ""AS398108"": 57,
    ""AS4134"": 34,
    ""AS32899"": 49,
    ""AS31898"": 17,
    ""AS63949"": 13,
    ""AS21419"": 9,
    ""AS201689"": 18,
    ""AS16276"": 7,
    ""AS27699"": 7,
    ""AS8075"": 36,
    ""AS57523"": 17,
    ""AS48721"": 2,
    ""AS208091"": 4,
    ""AS211736"": 8,
    ""AS14061"": 12,
    ""AS48080"": 4,
    ""AS37963"": 9,
    ""AS140292"": 8,
    ""AS135566"": 1,
    ""AS136052"": 1,
    ""AS23969"": 1,
    ""AS132203"": 1,
    ""AS9808"": 1,
    ""AS267784"": 4,
    ""AS51852"": 1,
    ""AS396982"": 6,
    ""AS398324"": 1,
    ""AS4766"": 2,
    ""AS131386"": 2,
    ""AS398722"": 1,
    ""AS18403"": 2,
    ""AS198953"": 3
  },
  ""isp"": {
    ""Vivacom Bulgaria EAD"": 36,
    ""Vietserver Services Technology Company Limited"": 2,
    ""CHINATELECOM Xinjiang Wulumuqi MAN network"": 65,
    ""China Telecom"": 54,
    ""GoDaddy.com, LLC"": 57,
    ""Chinanet"": 34,
    ""Bresco Broadband"": 49,
    ""Oracle Corporation"": 17,
    ""Akamai Technologies"": 2,
    ""Pishtaze E Jadid Infomration Company"": 9,
    ""Lamerd Information & Communication Technology Co., ltd"": 18,
    ""OVH SAS"": 6,
    ""Vivo"": 7,
    ""Microsoft Corporation"": 36,
    ""Chang Way Technologies Co. Limited"": 17,
    ""Flyservers S.A."": 6,
    ""XHOST-INTERNET-SOLUTIONS"": 4,
    ""FOP Dmytro Nedilskyi"": 8,
    ""Akamai Technologies, Inc."": 11,
    ""DigitalOcean, LLC"": 8,
    ""Dmitriy Panchenko"": 4,
    ""Hangzhou Alibaba Advertising Co"": 8,
    ""Addresses CNNIC"": 9,
    ""catCloud"": 1,
    ""PT Cloud Hosting Indonesia"": 1,
    ""TOT Public Company Limited"": 1,
    ""Shenzhen Tencent Computer Systems Company Limited"": 1,
    ""China Mobile"": 1,
    ""OVH ISP"": 1,
    ""Private Layer INC"": 1,
    ""Google LLC"": 6,
    ""DigitalOcean"": 4,
    ""Censys, Inc."": 2,
    ""Korea Telecom"": 2,
    ""Long Van System Solution"": 2,
    ""FPT Telecom Company"": 2,
    ""Proton66 OOO"": 3
  },
  ""org"": {
    ""Bulgarian Telecommunications Company Plc"": 36,
    ""VietServer Services technology company limited"": 2,
    ""Chinanet XJ"": 33,
    ""Chinanet GS"": 54,
    ""Unknown"": 95,
    ""Chinanet JS"": 32,
    ""Bresco Broadband"": 49,
    ""Chinanet ZJ"": 32,
    ""Oracle Cloud Infrastructure (sa-saopaulo-1)"": 17,
    ""Linode"": 2,
    ""AVAST Software"": 6,
    ""TELEF\ufffdNICA BRASIL S.A"": 7,
    ""Microsoft Azure Cloud (eastus)"": 34,
    ""Starcrecium Limited"": 3,
    ""Chinanet HA"": 2,
    ""Flyservers S.A"": 2,
    ""Xhost Internet Solutions"": 6,
    ""FOP Dmytro Nedilskyi"": 8,
    ""Linode, LLC"": 11,
    ""DigitalOcean, LLC"": 11,
    ""Chang Way Technologies Co. Limited"": 14,
    ""Xhostis"": 2,
    ""Aliyun Computing Co., LTD"": 9,
    ""Digital Ocean"": 1,
    ""PT Cloud Hosting Indonesia"": 1,
    ""Addresses for"": 1,
    ""Tencent Cloud Computing"": 1,
    ""China Mobile Communications Corporation"": 1,
    ""UAB Host Baltic"": 4,
    ""Novotea network"": 1,
    ""Private Layer Inc"": 1,
    ""Palo Alto Networks, Inc"": 6,
    ""Censys Inc"": 1,
    ""Kornet"": 2,
    ""Microsoft Azure Cloud (northeurope)"": 1,
    ""Censys, Inc."": 1,
    ""Vietnam Internet Network Information Center"": 2,
    ""Proton66 LLC"": 3,
    ""Microsoft Azure Cloud (eastus2)"": 1
  },
  ""regionName"": {
    ""Sofia-Capital"": 36,
    ""Hanoi"": 4,
    ""Xinjiang Uyghur Autonomous Region"": 33,
    ""Gansu"": 54,
    ""Virginia"": 92,
    ""Jiangsu"": 32,
    ""Ohio"": 49,
    ""Zhejiang"": 32,
    ""Sao Paulo"": 24,
    ""Maharashtra"": 2,
    ""Tehran"": 27,
    ""Quebec"": 6,
    ""Moscow"": 22,
    ""Henan"": 2,
    ""Kaunas"": 2,
    ""North Holland"": 10,
    ""Kyiv City"": 8,
    ""Tokyo"": 10,
    ""Beijing"": 14,
    ""Hesse"": 1,
    ""Sichuan"": 1,
    ""New Jersey"": 1,
    ""Guangdong"": 2,
    ""Samut Prakan"": 1,
    ""West Java"": 1,
    ""Pattani"": 1,
    ""South West"": 3,
    ""North West"": 1,
    ""Vilnius"": 4,
    ""Flanders"": 1,
    ""Zurich"": 1,
    ""California"": 6,
    ""Karnataka"": 4,
    ""Shandong"": 1,
    ""Michigan"": 2,
    ""Seoul"": 2,
    ""Ho Chi Minh"": 2,
    ""Leinster"": 1
  },
  ""country"": {
    ""Bulgaria"": 36,
    ""Vietnam"": 6,
    ""China"": 171,
    ""United States"": 150,
    ""Brazil"": 24,
    ""India"": 6,
    ""Iran"": 27,
    ""Canada"": 6,
    ""Russia"": 22,
    ""Lithuania"": 6,
    ""Netherlands"": 10,
    ""Ukraine"": 8,
    ""Japan"": 10,
    ""Germany"": 1,
    ""Thailand"": 2,
    ""Indonesia"": 1,
    ""Singapore"": 4,
    ""Belgium"": 1,
    ""Switzerland"": 1,
    ""South Korea"": 2,
    ""Ireland"": 1
  },
  ""account"": {
    ""142.93.8.59"": 386,
    ""hello"": 51,
    ""Administr"": 16,
    ""Test"": 13,
    ""(empty)"": 3,
    ""Domain"": 19,
    ""Administrator"": 1,
    ""DlBJuMOHU"": 1,
    ""QEpYMO"": 1,
    ""ewEfbP"": 1,
    ""pTkbJQRJo"": 1,
    ""GrlIKT"": 1,
    ""LgWZjx"": 1
  },
  ""keyboard"": {
    ""Unknown"": 495
  },
  ""client_build"": {
    ""Unknown"": 495
  },
  ""client_name"": {
    ""Unknown"": 495
  },
  ""ip_type"": {
    ""Unknown"": 365,
    ""hosting"": 99,
    ""mobile"": 18,
    ""hosting & proxy"": 6,
    ""proxy"": 7
  }
}"
kNqN9z2Q,fast uint waveforms v2,Kaelygon,C++,Saturday 1st of July 2023 07:02:39 PM CDT,"#include<cstdint>
#include <type_traits>

template <typename T>
struct twiceWide {
    using type = typename std::conditional<(sizeof(T) == 1), uint16_t,
                   typename std::conditional<(sizeof(T) == 2), uint32_t,
                   typename std::conditional<(sizeof(T) == 4), uint64_t,
                                                void>::type>::type>::type;
};

// Check if T is an unsigned integer type
template <typename T>
struct isUnsignedInteger : std::is_unsigned<T> {};

// Check if the system uses big-endian byte order
template<typename T>
struct IsBigEndian {
    static_assert(std::is_integral<T>::value, ""Only integral types are supported."");
    static constexpr bool value = false;
};
template<>
struct IsBigEndian<uint8_t> {
    static_assert(sizeof(uint8_t) == 1, ""Unsupported size for uint8_t."");
    static constexpr bool value = true;
};
template<>
struct IsBigEndian<uint16_t> {
    static_assert(sizeof(uint16_t) == 2, ""Unsupported size for uint16_t."");
    static constexpr bool value = true;
};
template<>
struct IsBigEndian<uint32_t> {
    static_assert(sizeof(uint32_t) == 4, ""Unsupported size for uint32_t."");
    static constexpr bool value = true;
};
template<>
struct IsBigEndian<uint64_t> {
    static_assert(sizeof(uint64_t) == 8, ""Unsupported size for uint64_t."");
    static constexpr bool value = true;
};

template <typename T>
void uiRequired() {
    static_assert(isUnsignedInteger<T>::value, ""T must be an unsigned integer type"");
    static_assert(IsBigEndian<T>::value, ""Template type must be big endian"");
}

//approx -UIMAX/2*sin((2*x*pi)/UIMAX)+UIMAX/2		https://www.desmos.com/calculator/lyyy678gdw
//sine both input [0.0,2pi] and output [-1.0,1.0] are mapped to [0,4294967295]
//Convert VALUE[0,4294967295] to range[-1.0,1.0] using (-1.0)*((float)VALUE/(UIMAX/2)-1)
//2.8% error, 3-6x faster than sin() with num=rand()%(1+i++), up to ~20x faster with num=i++
//Fast sine approximation.
template <typename T>
T ukaelSin(T num) {
	uiRequired<T>();
    using T2 = typename twiceWide<T>::type;
    bool secondHalf = (num >> sizeof(T)*8 - 1);
    num <<= 1;
    T2 buf = (static_cast<T2>(num)<<1) - ((T)~0);
    num = static_cast<T>((buf * buf) >> (((T)sizeof(T))*8 + 1));
    num = secondHalf ? ~num : num;
    return num;
}


//Triangle wave
template <typename T>
T ukaelTriangle(T num) {
	uiRequired<T>();
	bool flip = num>>(sizeof(T)*8-2)==1 | num>>(sizeof(T)*8-2)==3;	//first and last quarters
	num<<=1;
	num+=~T(0)>>1;
    return flip ? ~num : num;
}

//Saw wave
template <typename T>
T ukaelSaw(T num){
	uiRequired<T>();
	return num<<=1;
}

//Square wave
template <typename T>
T ukaelSquare(T num){
	uiRequired<T>();
	return ( num>>(sizeof(T)*8-1) ) ? ~T(0) : 0;
}

//Pulse square wave
template <typename T>
T ukaelPulse(T num, T dutyCycle) {
	uiRequired<T>();
    return (num > dutyCycle) ? ~T(0) : 0 ;
}

//helps making 8bit noise less repetitive when input is linear. Small as 32 works
const uint8_t u8randomTable[]{
33, 138,142,237,100,84, 241,4,  139,149,159,233,64, 201,75, 235,
116,248,10, 116,247,112,214,245,221,58, 158,124,196,227,255,39, 
51, 238,5,  253,76, 6,  65, 104,106,81, 230,171,55, 245,21, 244,
99, 162,98, 34, 78, 28, 195,184,229,205,14, 154,57, 224,249,45, 
226,233,77, 124,10, 50, 81, 103,26, 30, 18, 18, 185,98, 214,48, 
244,118,214,17, 67, 215,209,34, 134,100,177,206,190,70, 133,219,
194,66, 123,57, 26, 129,5,  64, 36, 59, 237,122,207,87, 22, 164,
133,200,191,47, 15, 54, 194,223,129,166,52, 8,  49, 193,235,254,
62, 122,55, 93, 190,241,171,91, 25, 101,233,151,224,113,69, 71, 
235,253,55, 247,143,240,205,52, 229,223,229,229,211,244,252,2,  
159,141,91, 4,  46, 233,78, 127,236,237,167,248,37, 253,140,89, 
155,138,185,162,65, 115,117,196,57, 195,107,39, 205,189,216,73, 
57, 243,10, 107,193,226,182,204,200,165,234,253,208,185,137,151,
238,49, 18, 189,98, 185,169,67, 94, 77, 73, 165,127,121,65, 202,
148,165,101,186,131,207,252,86, 204,225,108,82, 129,133,184,179,
236,17, 223,163,11, 1,  60, 251,118,243,105,190,74, 52, 200,235
};

#include <iostream>
template <typename T>
T ukaelNoise(T num) {
	uiRequired<T>();
	//TODO make check for 
	//uint8_t noise(uint16_t num) vs uint16_t noise(uint16_t num)
    if constexpr (sizeof(num) > 2 ) {
        uint sz = sizeof(num) << 1;
        num ^= num >> (num & sz) + 4;
        num *= 4763;
        num ^= num << (num & sz) + 4;
        return num;
    } else {
        num ^= num << 7;
        num *= 17;
        num ^= num >> 7;
        num ^= u8randomTable[num >> 8]; // num >> 8 for 256 table
        return num;
    }
}"
fbyph0S4,evp_digest.c,spikeysnack,C,Saturday 1st of July 2023 05:29:56 PM CDT,"#include <stdlib.h>

#include <stdio.h>

#include <string.h>

#include <openssl/evp.h>


// crash message & cleanup
void crash( EVP_MD_CTX* ctx, const char* msg)
{
  EVP_MD_CTX_free(ctx);
  
  fprintf(stderr, ""%s\n"", msg);

  exit(1);
}




int main(int argc, char *argv[])
{  

  // evp structures
  
  EVP_MD_CTX *mdctx;                         // EVP  Message Digest context

  const EVP_MD *md;                         // Message Digest

  unsigned char md_value[EVP_MAX_MD_SIZE];  // output byte array  (hash accumulates here)

  unsigned int md_len;                  // length of digest
  

  // local vars
  
  const char* prog_name;            // this program name
  const char* digest_str;           // name of digest  ""md5""  ""sha1""  ""sha224"" 
  const char* fname;                // file to hash

  FILE* inFile = NULL;              // input file

  
  if (argc == 3)  // parse args
      {
	prog_name  = argv[0];    
	digest_str = argv[1];  
	fname      = argv[2];  
	
      }
  else   // bad args
      {
	fprintf(stderr, ""no file: specified.\n usage %s  <digest>  <filename>\n"", argv[0]);
	exit(2);  // return bad arguments
      }


  // try open file 
  inFile = fopen(fname, ""rb"");    
  
  if ( inFile == NULL )            // fail to open
    {
      fprintf(stderr, ""could not open file: %s\n"", fname);
      
      fprintf(stderr, ""usage:\t %s  <digest>  <filename>\n"", prog_name );
      
      exit(1); // fail
    }


  // get digest type
  md = EVP_get_digestbyname(digest_str);

  if (md == NULL)  // bad digest name
      {
        fprintf( stderr, ""Unknown message digest %s\n"", digest_str);
        exit(2);
      }


  // new digest context
    mdctx = EVP_MD_CTX_new();
    
    if (EVP_DigestInit_ex2(mdctx, md, NULL) == 0 )
        crash(mdctx, ""Message digest initialization failed.\n"");


    
    // read data into a buffer and update the hash
    // 1KB at a time
    
    unsigned char bytedata[1024];  // buffer to read into

    size_t bytes;

    // update digest context with new bytes
     while ( (bytes = fread (bytedata, 1, 1024, inFile)) != 0 )
       {

	 if( EVP_DigestUpdate(mdctx, bytedata, 1024) == 0 )
	   crash(mdctx, ""Message digest update failed.\n""); 	
       }
     
     // finalize digest
     if (EVP_DigestFinal_ex(mdctx, md_value, &md_len) == 0 )
       crash(mdctx, ""Message digest finalization failed.\n""); 	

     // final clean up
     EVP_MD_CTX_free(mdctx);  // clean up dynamic memory

     

     // output
     
     fprintf(stdout, ""%s Digest is: "", digest_str);

     for ( unsigned int i = 0; i < md_len; i++)
       fprintf(stdout, ""%02x"", md_value[i]);  // hex digit

    fprintf(stdout,""\n"");
   
    return 0;

}

"
UMg5v4nJ,Custom events Adoric to GA4,NikolayBezay,HTML,Saturday 1st of July 2023 04:49:33 PM CDT,"<script>
try {
    /*========= IMPORTANT TO UPDATE CONSTANT VALUE!!! =========*/
    var GA_MEASUREMENT_ID = 'G-RENM1*****';

    var pushCustomGAEvent = function(event_name, campaignData) {
        if (campaignData.lightbox && campaignData.lightbox.options && campaignData.lightbox.options.campaignTitle && campaignData.lightbox.options.title && campaignData.lightbox.options.type) {
            dataLayer && dataLayer.push({
                'event':  event_name,
                'campaign_name': campaignData.lightbox.options.campaignTitle,
                'variation_name': campaignData.lightbox.options.title,
                'device_type': campaignData.lightbox.options.type,
                'send_to': GA_MEASUREMENT_ID
            });
        }
    }

    if (window.adoric && window.dataLayer) {
        adoric.on('lightbox:after:show', function(campaignData) {
            pushCustomGAEvent('adoric_impression', campaignData);
        });
        adoric.on('lightbox:after:close', function(campaignData) {
            pushCustomGAEvent('adoric_close_transition', campaignData);
        });
        adoric.on('lightbox:after:click', function(campaignData) {
            pushCustomGAEvent('adoric_click', campaignData);
        });
        adoric.on('form:after:submit', function(campaignData) {
            pushCustomGAEvent('adoric_click', campaignData);
        });
    }
} catch (error) {
    console.log('error - ', error);
};
</script>
"
NBbY7iYz,Untitled,theremak,C++,Saturday 1st of July 2023 04:46:28 PM CDT,"static void divide(BigInteger dividend, BigInteger divisor, BigInteger& quotient, BigInteger& remainder) {
        ull dividends_two_msd, iteration_estimate;
        BigInteger iteration_dividend, null_bigint;

        dividend.negative = false;
        divisor.negative = false;

        //        most significant (biggest) digit
        ul divisor_msd = divisor[divisor.size() - 1];
        ul norm_factor = 1;

        if (divisor.size() > 1 && divisor_msd < BASE / 2) {
            //  normalization
            norm_factor = BASE / (divisor_msd + 1);
            dividend *= norm_factor;
            divisor *= norm_factor;
            divisor_msd = divisor[divisor.size() - 1];
        }
        quotient.nums_p.resize(dividend.size());

        size_t iteration = 0;
        while (iteration < dividend.size()) {
            if (iteration == 0) {
                //init iteration_dividend with iteration digits of dividend
                iteration = divisor.size();
                prefix(iteration_dividend, dividend, iteration);
            } else {
                iteration++;
                //                shift iteration_dividend to the left and add next digit of dividend
                iteration_dividend.nums_p.insert(iteration_dividend.nums_p.begin(),
                                                 dividend[dividend.size() - iteration]);
            }

            dividends_two_msd = get_first_two_digits(iteration_dividend, divisor.size() + 1);
            iteration_estimate = dividends_two_msd / divisor_msd;
            //
            if (divisor.size() > 1)
                correct_estimate_and_substract(iteration_dividend, divisor, iteration_estimate);
            else {
                // we donât need correction in iteration_estimate if divisor is one digit
                iteration_dividend = BigInteger(static_cast<ul>(dividends_two_msd - iteration_estimate * divisor_msd));
            }
//            iteration_dividend.clear_trailing_zeros();
            quotient[quotient.size() - iteration] = iteration_estimate;
        }

        quotient.clear_trailing_zeros();

        if (norm_factor > 1) {
            divide(iteration_dividend, norm_factor, remainder, null_bigint);
        } else {
            remainder = iteration_dividend;
        }

    };

    static void prefix(BigInteger& dst, BigInteger src, size_t prefix_size) {
        if (src.size() < prefix_size) {
            src.nums_p.resize(prefix_size, 0);
            dst.nums_p.swap(src.nums_p);
            return;
        }
        dst.nums_p.clear();
        dst.nums_p.reserve(prefix_size);
        for (size_t i = src.size() - prefix_size; i < src.size(); i++) {
            dst.nums_p.push_back(src[i]);
        }
    }

    static ull get_first_two_digits(const BigInteger& num, size_t num_size) {
        //  get first two digits of num treating it having num_size digits
        //        if (num_size == num.size())
        if ((num_size == num.size()) && (num_size == 1)) {
            return num[0];
        }
        if (num_size == 2 && num.size() == 1) {
            return num[0];
        }
        ull n1 = num.size() < num_size - 1 ? 0 : num[num_size - 2];
        ull n2 = num.size() < num_size ? 0 : num[num_size - 1];
        return n2 * BASE + n1;
    }

    static void correct_estimate_and_substract(BigInteger& iter_dividend, BigInteger& divisor, ull& estimate) {
        if (estimate == 0) {
            return;
        }
        iter_dividend.clear_trailing_zeros();
        estimate = std::min(estimate, BASE - 1);
        BigInteger estimate_dividend = divisor * static_cast<ul>(estimate);

        if (iter_dividend < estimate_dividend) {
            estimate--;
            estimate_dividend -= divisor;

            if (iter_dividend < estimate_dividend) {
                estimate--;
                estimate_dividend -= divisor;
            }
        }
        iter_dividend -= estimate_dividend;
    }
	void clear_trailing_zeros() {
        while (nums_p.size() > 1 && nums_p.back() == 0) {
            nums_p.pop_back();
        }
    };

"
tQv42YZP,Untitled,Dorex,Linden Scripting,Saturday 1st of July 2023 03:56:11 PM CDT,"Basic example without a landmark in the object's inventory, while facing the avatar towards the center of the region:

default
{
    touch_start(integer num_detected)
    {
        llRequestPermissions(llGetOwner(), PERMISSION_TELEPORT);
    }

    run_time_permissions(integer perm)
    {
        if (PERMISSION_TELEPORT & perm)
        {
            vector region_pos = <100, 130, 40>;
            vector look_at = <128,128,40>;
            llTeleportAgent(llGetPermissionsKey(), """", region_pos, look_at);
        }
    }
}"
eyMdq81G,win sciaga,djduke,Batch,Saturday 1st of July 2023 03:06:19 PM CDT,"Podniesienie uprawnieÅ z monitem UAC:
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
rundll32 url.dll,FileProtocolHandler <exe_file>


Udostepnianie w sieci, jeÅli komputer ma konto i zaÅoÅ¼one hasÅo, linia komend wygladaÄ bÄdzie w ten sposÃ³b:
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
\\nazwaTwojegoKomputera\nazwaUdzialu|twojeKonto|twojeHaslo

SET NFS_PATH=""\\192.168.3.33\home\htdocs""
SET MOUNT_PATH=""Z:""
SET USER=""username""

dism /online /Enable-Feature /FeatureName:ServicesForNFS-ClientOnly /FeatureName:ClientForNFS-Infrastructure /FeatureName:NFS-Administration /NoRestart

REM Zmodyfikuj domyÅlny anonimowy identyfikator UID/GID 
(
echo Windows Registry Editor Version 5.00
echo 
echo [HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\ClientForNFS\CurrentVersion\Default]
echo ""AnonymousGID""=dword:00000000
echo ""AnonymousUID""=dword:00000000
)>""clientfornfs.reg""
regedit /s .\clientfornfs.reg
nfsadmin client stop
nfsadmin client start

runas /noprofile /user:%USER% mount -o anon -o nolock -o casesensitive=yes %NSF_PATH% %MOUNT_PATH%

# Zmienne systemowe Windows:
%ALLUSERSPROFILE%
C:\ProgramData

%APPDATA%
C:\Users\ÐÐ¼Ñ Ð¿Ð¾Ð»ÑÐ·Ð¾Ð²Ð°ÑÐµÐ»Ñ\AppData\Roaming

%CommonProgramFiles%
C:\Program Files\Common Files

%CommonProgramFiles(x86)%
C:\Program Files (x86)\Common Files

%CommonProgramW6432%
C:\Program Files\Common Files

%COMPUTERNAME%
Nazwa komputera

%ComSpec%
C:\Windows\system32\cmd.exe

%HOMEDRIVE%
Nazwa napÄdu lokalnej stacji roboczej powiÄzanej z katalogiem domowym uÅ¼ytkownika (na przykÅad: C: \)

%HOMEPATH%
Katalog domowy uÅ¼ytkownika (na przykÅad: \Users\Nazwa uÅ¼ytkownika)

%LOCALAPPDATA%
C:\Users\username\AppData\Local

%LOGONSERVER%
Nazwa kontrolera domeny uÅ¼ywanego do autoryzacji bieÅ¼Äcego uÅ¼ytkownika.

%NUMBER_OF_PROCESSORS%
Liczba procesorÃ³w w systemie (w rzeczywistoÅci liczba rdzeni).

%OS%
Nazwa systemu operacyjnego. Windows XP i Windows 2000 pojawiajÄ siÄ jako Windows_NT.

%Path%
OkreÅla ÅcieÅ¼kÄ wyszukiwania plikÃ³w wykonywalnych (na przykÅad: \UÅ¼ytkownicy\Nazwa uÅ¼ytkownika)

%PATHEXT%
Lista rozszerzeÅ plikÃ³w, ktÃ³re sÄ uwaÅ¼ane za wykonywalne przez system operacyjny.

%PROCESSOR_ARCHITECTURE%
Architektura procesora. MoÅ¼liwe opcje: x86, IA64, AMD64.

%PROCESSOR_IDENTIFIER%
Opis procesora (w Internecie czÄsto moÅ¼na znaleÅºÄ bÅÄdnÄ pisowniÄ PROCESSOR_IDENTFIER - brakuje litery).

%PROCESSOR_LEVEL%
Numer modelu procesora.

%PROCESSOR_REVISION%
wersja procesora.

%ProgramData%
C:\ProgramData

%ProgramFiles%
C:\Program Files

%ProgramFiles(x86)%
C:\Program Files (x86)

%ProgramW6432%
C:\Program Files

%PUBLIC%
C:\Users\Public

%SystemDrive%
Dysk, na ktÃ³rym znajduje siÄ katalog gÅÃ³wny systemu Windows (na przykÅad: C:\)

%SystemRoot%
ÅcieÅ¼ka do katalogu gÅÃ³wnego systemu Windows (na przykÅad: C:\Windows)

%TEMP%
C:\Users\username\AppData\Local\Temp Ð¸Ð»Ð¸ C:\Windows\TEMP (w zaleÅ¼noÅci od nazwy logowania)

%TMP%
C:\Users\username\AppData\Local\Temp Ð¸Ð»Ð¸ C:\Windows\TEMP  (w zaleÅ¼noÅci od nazwy logowania)

%USERDOMAIN%
Nazwa domeny, do ktÃ³rej naleÅ¼y bieÅ¼Äcy uÅ¼ytkownik

%USERNAME%
Nazwa bieÅ¼Äcego uÅ¼ytkownika.

%USERPROFILE%
ÅcieÅ¼ka do profilu bieÅ¼Äcego uÅ¼ytkownika (na przykÅad: C:\Users\Nazwa uÅ¼ytkownika)

%WINDIR%
Katalog, w ktÃ³rym jest zainstalowany system Windows (na przykÅad: C:\Windows)


# Menu pod klawiszem F8 podczas bootowania Win10 jak w starszych edycjach:
bcdedit /set {default} bootmenupolicy legacy

# aby uaktywniÄ tryb testowy i wyÅÄczyÄ wymuszanie podpisu cyfrowego:
bcdedit -set loadoptions DISABLE_INTEGRITY_CHECKS
bcdedit -set testsigning on

# aby wyÅÄczyÄ tryb testowy:
bcdedit -set loadoptions ENABLE_INTEGRITY_CHECKS
bcdedit -set testsigning off


# Podpisywanie np. sterownikow x64:
certmgr.exe -add C:\myDrivers.cer -s -r localMachine ROOT
certmgr.exe -add C:\myDrivers.cer -s -r localMachine TRUSTEDPUBLISHER


Historia Ochrony Windows Defender zamykajace sie okno
wyÅÄczamy ochronÄ z chmury jak i samego defendera i czyÅcimy katalog z plikÃ³w
c:\ProgramData\Microsoft\Windows Defender\Scans\History\Service\


PowerShell, wÅÄczenie moÅ¼liwoÅci uruchamiania skryptÃ³w .ps1:
powershell Set-ExecutionPolicy AllSigned

Windows Defender - wyÅÄczenie ochrony w czasie rzeczywistym:
PowerShell - Set-MpPreference -DisableRealtimeMonitoring $true

da nam listÄ dod. programÃ³w o ktÃ³re moÅ¼na rozszerzyÄ Win10:
powershell Get-WindowsCapability -Online
powershell Get-WindowsOptionalFeature -Online


# NaprawÂ wÅasnoÅÄÂ iÂ uprawnieniaÂ doÂ folderu

Napraw prawa wÅasnoÅci i udziel peÅnego dostÄpu do folderu i wszystkiego, co siÄ z nim wiÄÅ¼e
zawiera uprawnienia dziedziczone

# ResetÂ permissions
icaclsÂ C:\PDÂ /TÂ /CÂ /LÂ /QÂ /reset

#Â Ustaw wÅaÅciciela naÂ SYSTEM
icaclsÂ C:\PDÂ /TÂ /CÂ /LÂ /QÂ /setownerÂ ""SYSTEM""

#Â Przydziel administratorom i uÅ¼ytkownikom peÅny dostÄp.
icaclsÂ C:\PDÂ /grantÂ Administrators:(oi)(ci)F
icaclsÂ C:\PDÂ /grantÂ Users:(oi)(ci)F

#Â JeÅli chcesz, aby wszyscy mieli peÅny dostÄp, wykonaj nastÄpujÄce czynnoÅci:
icaclsÂ C:\PDÂ /grantÂ Everybody:(oi)(ci)F

::Â PoniÅ¼ej przedstawiono brutalnÄ metodÄ nadawania uprawnieÅ do folderu i wszystkiego, co zawiera.
::Â JeÅli zastosowaÅeÅ powyÅ¼szÄ metodÄ odziedziczonych uprawnieÅ, nie powinieneÅ tego robiÄ.

#Â Przyznaj bieÅ¼Äcemu uÅ¼ytkownikowi peÅny dostÄp do folderu i wszystkiego, co on zawiera
icaclsÂ C:\PDÂ /TÂ /CÂ /LÂ /QÂ /grantÂ %USERNAME%:F

# Przyznaj uÅ¼ytkownikom peÅny dostÄp doÂ folderu iÂ wszystkiej zawartoÅci
icaclsÂ C:\PDÂ /TÂ /CÂ /LÂ /QÂ /grantÂ Users:F

#Â Przyznaj administratorom peÅny dostÄp doÂ folderu iÂ wszystkiej zawartoÅci
icaclsÂ C:\PDÂ /TÂ /CÂ /LÂ /QÂ /grantÂ Administrators:F

#Â PrzyznajÂ wszystkimÂ peÅnyÂ dostÄp doÂ folderuÂ iÂ wszystko, co siÄ w nim znajduje
icaclsÂ C:\PDÂ /TÂ /CÂ /LÂ /QÂ /grantÂ Everybody:F

icacls * /T /Q /C /RESET
// CreateÂ aÂ DirectoryÂ Link
^^^^^^^^^^^^^^^^^^^^^^^
::Â Â Â Link:Â ""C:\Mame\roms""
::Â Target:Â ""C:\PD\downloads\MAMEÂ ROMs""
::Â CreateÂ aÂ SymbolicÂ Link
::Â (Â functionsÂ justÂ likeÂ UNIXÂ linksÂ )
mklinkÂ /DÂ ""C:\Mame\roms""Â ""C:\PD\downloads\MAMEÂ ROMs""
::Â CreateÂ aÂ Junction
::Â (Â limitedÂ toÂ directoriesÂ onÂ theÂ localÂ fileÂ systemÂ )
mklinkÂ /JÂ ""C:\Mame\roms""Â ""C:\PD\downloads\MAMEÂ ROMs""


SetÂ PriorityÂ ofÂ aÂ Program
^^^^^^^^^^^^^^^^^^^^^^^^^
::Â StartÂ aÂ programÂ atÂ aÂ specificÂ priority
::Â (Â /LOW,Â /BELOWNORMAL,Â /NORMAL,Â /ABOVENORMAL,Â /HIGH,Â /REALTIMEÂ )
startÂ /ABOVENORMALÂ /DÂ ""C:\PD""Â ""program.exe""
::Â ChangeÂ theÂ priorityÂ ofÂ aÂ program
::Â (Â ""idle"",Â ""belowÂ normal"",Â ""normal"",Â ""aboveÂ normal"",Â ""highÂ priority"",Â ""realÂ time""Â )
wmicÂ processÂ whereÂ name=""program.exe""Â callÂ setpriorityÂ ""aboveÂ normal""

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
DISM /Online /Get-Features
dism /Online /Get-Features /format:list

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
WSL 2:
dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart
dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart
powershell Enable-WindowsOptionalFeature -Online -FeatureName VirtualMachinePlatform -NoRestart
bcdedit /set hypervisorlaunchtype auto

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Naprawa plikÃ³w, uprawnien zmienionych np. na wskutek zlosliwego oprogramowania:
::Â Check
sfcÂ /verifyonly
::Â Repair
sfcÂ /scannow
::Â ViewÂ errors
findstrÂ /c:""[SR]Â CannotÂ repair""Â %WINDIR%\Logs\CBS\CBS.log
::Â Note:Â IfÂ filesÂ cannotÂ beÂ repaired;Â tryÂ insertingÂ yourÂ OSÂ mediaÂ andÂ scanÂ again.

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
RepairÂ WindowsÂ SystemÂ Image:
::Â Check
DISM.exe /Online /Cleanup-Image /ScanHealth
::Â Repair
DISM.exe /Online /Cleanup-Image /CheckHealth
::Â Note:Â IfÂ SystemÂ ImageÂ cannotÂ beÂ repaired;Â tryÂ insertingÂ yourÂ OSÂ mediaÂ andÂ repairÂ again.

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
CleanupÂ System:
::Â DiskÂ Cleanup
cleanmgr.exeÂ /dÂ C:Â /sagerun:11
::Â DeleteÂ allÂ IEÂ dataÂ exceptÂ favorites
RunDLL32Â InetCpl.cpl,ClearMyTracksByProcessÂ 255
::Â DeleteÂ AllÂ ShadowÂ CopiesÂ (Â RestoreÂ PointsÂ )
vssadminÂ DeleteÂ ShadowsÂ /AllÂ /quiet
::Â CreateÂ RestoreÂ Point
wmic.exeÂ /Namespace:\\root\defaultÂ PathÂ SystemRestoreÂ CallÂ CreateRestorePointÂ ""RestoreÂ Point"",Â 100,Â 7

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Hibernate,Â Sleep,Â Monitor,Â andÂ DiskÂ Settings:
::Â DisableÂ Hibernation
powercfgÂ /hÂ off
::Â EnableÂ Hibernation
powercfgÂ /hÂ on
::Â NeverÂ Hibernate
powercfgÂ âchangeÂ âhibernateâtimeoutâacÂ 0
powercfgÂ âchangeÂ âhibernateâtimeoutâdcÂ 0
::Â HibernateÂ afterÂ 10Â minutes
powercfgÂ âchangeÂ âhibernateâtimeoutâacÂ 10
powercfgÂ âchangeÂ âhibernateâtimeoutâdcÂ 10
::Â NeverÂ Sleep
powercfgÂ âchangeÂ âstandbyâtimeoutâacÂ 0
powercfgÂ âchangeÂ âstandbyâtimeoutâdcÂ 0
::Â SleepÂ afterÂ 10Â minutes
powercfgÂ âchangeÂ âstandbyâtimeoutâacÂ 10
powercfgÂ âchangeÂ âstandbyâtimeoutâdcÂ 10
::Â NeverÂ turnÂ offÂ Monitor
powercfgÂ âchangeÂ âmonitorâtimeoutâacÂ 0
powercfgÂ âchangeÂ âmonitorâtimeoutâdcÂ 0
::Â TurnÂ offÂ MonitorÂ afterÂ 10Â minutes
powercfgÂ âchangeÂ âmonitorâtimeoutâacÂ 10
powercfgÂ âchangeÂ âmonitorâtimeoutâdcÂ 10
::Â NeverÂ turnÂ offÂ Disks
powercfgÂ âchangeÂ âdiskâtimeoutâacÂ 0
powercfgÂ âchangeÂ âdiskâtimeoutâdcÂ 0
::Â TurnÂ offÂ DisksÂ afterÂ 10Â minutes
powercfgÂ âchangeÂ âdiskâtimeoutâacÂ 10
powercfgÂ âchangeÂ âdiskâtimeoutâdcÂ 10"
aMYcGJaB,router sciaga,djduke,Bash,Saturday 1st of July 2023 03:03:57 PM CDT,"PrzygotowaÅem wedÅug mnie uÅ¼yteczne funkcje na uÅ¼ycie w routerach, w oprogramowaniu
np. openwrt...

localedef.new -c -f UTF-8 -i pl_PL pl_PL.UTF-8
localedef.new -c -f UTF-8 -i pl_PL ./pl_PL.UTF-8

wget --no-check-certificate https://curl.se/ca/cacert.pem -O /etc/ssl/ca-bundle.crt

# ASUS Merlin amcfwm:
mkdir -p ""$HOME/amcfwm"" && curl -s ""https://raw.githubusercontent.com/Adamm00/am_cfwm/master/amcfwm.sh"" -o ""$HOME/amcfwm/amcfwm.sh"" && chmod 755 ""$HOME/amcfwm/amcfwm.sh""
--------------------------------------------------------------------------------
# flash routera openwrt --> oryginal
mtd -e firmware -r write /mnt/tplink.bin firmware

# flash routera ddwrt --> oryginal
mtd -e linux -r write /mnt/tplink.bin linux

sysupgrade -F -n /tmp/a.bin
----------------------------------------------------------------------------------------------------
Przegranie calej zawartosci pamieci routera na USB (w trybie /):
mkdir -p /tmp/introot
mkdir -p /tmp/extroot
mount --bind / /tmp/introot
mount /dev/sda1 /tmp/extroot
tar -C /tmp/introot -cvf - . | tar -C /tmp/extroot -xf -
umount /tmp/introot
umount /tmp/extroot
----------------------------------------------------------------------------------------------------
Przegranie calej zawartosci pamieci routera na USB (w trybie /overlay):
mkdir -p /tmp/cproot
mount --bind /overlay /tmp/cproot
mount ${DEVICE} /mnt
tar -C /tmp/cproot -cvf - . | tar -C /mnt -xf -
umount /tmp/cproot /mnt
reboot
----------------------------------------------------------------------------------------------------
echo ""Booted from internal flash"" >> /etc/banner
echo ""Booted from EXTERNAL ROOT"" >> /etc/banner
----------------------------------------------------------------------------------------------------
Przechowywanie list opkg na USB zamiast w pamieci RAM routera:
sed -i -e ""/^lists_dir\s/s:/var/opkg-lists$:/usr/lib/opkg/lists:"" /etc/opkg.conf
opkg update
----------------------------------------------------------------------------------------------------
# SWAP czyli tworzymy plik wymiany jako plik a nie jako osobna partycje!
dd if=/dev/zero of=/mnt/data/swap bs=1M count=100
mkswap /mnt/data/swap

# Aktywujemy nowo powstaly plik
uci -q delete fstab.swap
uci set fstab.swap=""swap""
uci set fstab.swap.device=""/mnt/data/""
uci commit fstab
/etc/init.d/fstab boot

# Sprawdzenie czy dziala
cat /proc/swaps
----------------------------------------------------------------------------------------------------
# Przydatne pakiety (wybrane przezemnie):
libustream-mbedtls ca-bundle ca-certificates cfdisk e2fsprogs f2fs-tools flashrom-usb git git-http hdparm htop iptraf mc rclone usbutils wsdd2

# openwrt spolszczenia wybranych pakietow:
luci-i18n-ksmbd-pl luci-i18n-base-pl luci-i18n-commands-pl luci-i18n-firewall-pl luci-i18n-opkg-pl
luci-ssl-nginx luci-i18n-tinyproxy-pl luci-i18n-upnp-pl luci-i18n-wifischedule-pl luci-i18n-wol-pl

# Konfiguracja WiFi na przykladzie TL-WR1043nd:
uci set wireless.radio0.country=PL
uci set wireless.radio0.hwmode=11ng
uci set wireless.radio0.htmode=HT20
uci add_list wireless.radio0.ht_capab=""SHORT-GI-40 DSSS_CCK-40 HT40+ HT40-""
uci set wireless.@wifi-device[0].disabled=0
uci set wireless.@wifi-device[0].htmode=HT40
uci set wireless.@wifi-device[0].noscan=1
uci set wireless.@wifi-iface[0].ssid=W@r3H0us3
uci set wireless.@wifi-iface[0].encryption=psk2
uci set wireless.@wifi-iface[0].key=12345678
uci commit wireless
wifi
----------------------------------------------------------------------------------------------------
Czytelna lista oprogramowania opkg, dodajemy do /etc/profile ponizsze linijki:
opkg () {
	BOLD=$(echo -e '\033[1m');
	NORM=$(echo -e '\033[0m');
	COL=""no"";
	for arg in $*; do
		if [ $arg == ""whatdepends"" -o $arg == ""list"" \
		-o $arg == ""list-installed"" -o $arg == ""list-upgradable"" \
		-o $arg == ""list-changed-conffiles"" -o $arg == ""status"" \
		-o $arg == ""info"" -o $arg == ""find"" ]; then
			COL=""yes"";
			break;
		fi
	done
	if [ $COL == ""yes"" ]; then
		# (|\t*) added for 'whatdepends'
		/bin/opkg $* | sed -re ""s/^(|\t*)[a-z0-9-]*/$BOLD&$NORM/g"";
	else
		/bin/opkg $*;
	fi
}
# vim: set fdm=marker ts=4 sw=4 tw=80 fo-=t ff=unix:
----------------------------------------------------------------------------------------------------
Router z tylu ma podany adres mac WANu: F8:D1:11:4B:4A:D1 reszta wyglÄda tak:
WAN	-	F8:D1:11:4B:4A:D1
LAN	-	F8:D1:11:4B:4A:D2
WiFi-	F8:D1:11:4B:4A:D3

nvram set et0macaddr=F8:D1:11:4B:4A:D1
nvram set il0macaddr=F8:D1:11:4B:4A:D2
nvram set lan_hwaddr=F8:D1:11:4B:4A:D2
nvram set wl0_hwaddr=F8:D1:11:4B:4A:D3"
fZi8TxPJ,linux sciaga,djduke,Bash,Saturday 1st of July 2023 03:02:58 PM CDT,"PrzygotowaÅem wedÅug mnie uÅ¼yteczne funkcje linii komend w windowsach. 

bartoszduk@gmail.com


# Co to jest chmod i gdzie to ustawiÄ:
Chmod sÄ to prawa do danego pliku, ktÃ³re ustala siÄ wg nastÄpujÄcych zasad:
- najpierw uruchamiamy dowolny program, za pomocÄ ktÃ³rego wysyÅamy pliki na
serwer, moÅ¼e to byÄ Total CommandePr.
- na zakÅadce Pliki wchodzimy na opcjÄ ZmieÅ Atrybuty;

# Podstawowe prawa chmod:
600 - prawa do odczytu i zapisu tylko dla wÅaÅciciela pliku
644 - prawa odczytu i zapisu dla wÅaÅciciela oraz odczytu dla wszystkich
pozostaÅych uÅ¼ytkownikÃ³w.
666 - prawa odczytu i zapisu dla wszystkich uÅ¼ytkownikÃ³w.
700 - wszystkie prawa (odczyt, zapis, uruchomienie) tylko dla wÅaÅciciela pliku.
755 - prawa do odczytu, zapisu i uruchomienia dla wÅaÅciciela pliku oraz odczytu
i uruchomienia dla wszystkich innych uÅ¼ytkownikÃ³w
777 - wszystkie prawa dla wszystkich uÅ¼ytkownikÃ³w (ustawienie niebezpieczne)
711 - prawa odczytu zapisu i uruchomienia dla wÅaÅciciela pliku oraz prawo
uruchomienia dla pozostaÅych uÅ¼ytkownikÃ³w.
700 - dotyczy prawa zapisu i odczytu w katalogu tylko przez wÅaÅciciela.
755 - do takiego katalogu wszyskie prawa ma wÅaÅciciel, a wszyscy pozostali
uÅ¼ytkownicy mogÄ tylko odczytaÄ jego zawartoÅÄ.
711 - wszystkie prawa ma wÅaÅciciel. Katalog z takimi prawami dostÄpny jest
takÅ¼e dla wszystkich pozostaÅych uÅ¼ytkownikÃ³w, lecz jego zawartoÅÄ jest przed
nimi ukryta (polecenie ls nie wyÅwietli listy plikÃ³w umieszczonych w tak
oznaczonym katalogu). Aby odczytaÄ plik uÅ¼ytkownik musi znaÄ jego nazwÄ.

chmod a+rx /jffs/scripts/*


# TAR:
tar xvf archiwum.tar
tar xvzf archiwum.tar.gz
tar xvzf archiwum.tar.tgz
tar xvjf archiwum.tar.bz2
tar xvjf archiwum.tar.tbz2

# Pakowanie do pliku tar.gz:
tar -zcvf archiwum.tar.gz ÅcieÅ¼ka_do_katalogu
--------------------------------   SKRYPT  -------------------------------------
extract () {
   if [ -f $1 ] ; then
       case $1 in
	*.tar.bz2)	tar xvjf $1 && cd $(basename ""$1"" .tar.bz2) ;;
	*.tar.gz)	tar xvzf $1 && cd $(basename ""$1"" .tar.gz) ;;
	*.tar.xz)	tar Jxvf $1 && cd $(basename ""$1"" .tar.xz) ;;
	*.bz2)		bunzip2 $1 && cd $(basename ""$1"" /bz2) ;;
	*.rar)		unrar x $1 && cd $(basename ""$1"" .rar) ;;
	*.gz)		gunzip $1 && cd $(basename ""$1"" .gz) ;;
	*.tar)		tar xvf $1 && cd $(basename ""$1"" .tar) ;;
	*.tbz2)		tar xvjf $1 && cd $(basename ""$1"" .tbz2) ;;
	*.tgz)		tar xvzf $1 && cd $(basename ""$1"" .tgz) ;;
	*.zip)		unzip $1 && cd $(basename ""$1"" .zip) ;;
	*.Z)		uncompress $1 && cd $(basename ""$1"" .Z) ;;
	*.7z)		7z x $1 && cd $(basename ""$1"" .7z) ;;
	*)		echo ""don't know how to extract '$1'..."" ;;
       esac
   else
       echo ""'$1' is not a valid file!""
   fi
 }
--------------------------------   SKRYPT  -------------------------------------


# Przydatne biblioteki, aplikacje...:
sudo apt install -y apt-utils aptitude asciidoc autoconf automake autopoint bc binutils binwalk bison build-essential busybox bzip2 ca-certificates ccache command-not-found curl cvs device-tree-compiler elinks findutils flashrom flex g++-multilib gawk gcc-multilib gettext git gnupg gparted gperf gtk2-engines hashcat htop imagemagick less lib32gcc1 lib32readline-dev lib32z1-dev libc6-dev-i386 libelf-dev libncurses5-dev libglib2.0-dev libncurses5 libncurses5-dev libsdl1.2-dev libssl-dev libtool liblz4-tool libxml2 libxml2-utils lzop mc mercurial msmtp nano net-tools openssh-client p7zip-full patch pngcrush python2.7 python3 python3-pip rsync screen synaptic subversion tasksel texinfo upx-ucl vim wget whois unzip xmlto zlib1g-dev

# Obsluga wszystkich systemow plikow w gparted:
dosfstools exfat-fuse exfat-utils f2fs-tools hfsutils hfsprogs hfsplus jfsutils nilfs-tools btrfs-progs lvm2 util-linux dmsetup reiser4progs reiserfsprogs udftools xfsprogs xfsdump

# temp:
rsync schedtool squashfs-tools xsltproc zip
uglifyjs qemu-utils antlr3 swig

# locale czyli linux w Jezyku Polskim (jednÄ komendÄ)
dpkg-reconfigure locales

# locale czyli linux w Jezyku Polskim (w kilku krokach)
apt-get install -y locales

# Usuniecie komentarza w /etc/locale.gen przy jezyku PL
sed -i 's/^# *\(pl_PL.UTF-8\)/\1/' /etc/locale.gen
locale-gen

# Export env vars
echo ""export LC_ALL=pl_PL.UTF-8"" >> ~/.bashrc
echo ""export LANG=pl_PL.UTF-8"" >> ~/.bashrc
echo ""export LANGUAGE=pl_PL.UTF-8"" >> ~/.bashrc

# Na tej samej powÅoce wykonaj poniÅ¼sze aby env vars zaczely dzialac
source ~/.bashrc

wiecej moÅ¼liwoÅci: https://askubuntu.com/questions/683406/how-to-automate-dpkg-reconfigure-locales-with-one-command

# tworzenie symlinku miekkiego
ln -s /mnt/c/Users/barto/ ~/winhome

# wyswietlanie listy plikow z symlinkami
ls -la

# aktualnÄ prÄdkoÅÄ (np. USB) z jakÄ pracuje urzÄdzenie:
hdparm -tT /dev/sda

# Formatowanie:
Ext2 preset: mkfs.ext2 /dev/sd**
Ext3 preset: mkfs.ext3 /dev/sd**
Ext4 journalling disabled: mke2fs -t ext4 -O ^has_journal -L 'LABELHERE' '/dev/sd**'

Popularne opcje polecenia mke2fs:
-t : ustaw typ systemu plikÃ³w
-L : ustaw nowÄ etykietÄ woluminu
-O : okreÅl funkcjÄ, ktÃ³rej chcesz uÅ¼yÄ (np. â-O ^64bitâ = wyÅÄcz funkcjÄ 64-bitowÄ)

# Zmiana uprawnien:
chgrp users /mnt
chmod g+w /mnt
sync

# Skrypt do automatycznego dodania wszystkich brakujÄcych kluczy:
#!/bin/sh

if [ `id -u` -ne 0 ]; then
	echo ""Tylko root moÅ¼e dodaÄ klucze""
	exit 1
fi

echo -n ""Aktualizacja listy pakietÃ³w (moÅ¼e trochÄ potrwaÄ)... "" && \
  apt-get update >/dev/null 2>/tmp/apt-get-update-errors && echo ""OK""

if ! grep -q NO_PUBKEY /tmp/apt-get-update-errors; then
	echo ""Wszystkie klucze sÄ dodane, nie ma nic do roboty.""
	rm -f /tmp/apt-get-update-errors
	exit 0
fi

for KEY in `awk '/NO_PUBKEY/ {print $NF}' /tmp/apt-get-update-errors`; do
	echo ""Przetwarzanie klucza $KEY:""
	echo -n "" -> pobieranie klucza z serwera... "" && \
	  gpg --keyserver pgp.mit.edu --recv-keys ""$KEY"" >/dev/null 2>&1 && \
	  echo ""OK"" && echo -n "" -> dodawanie klucza do bazy... "" && \
	  gpg --armor --export ""$KEY"" | apt-key add -
done
rm -f /tmp/apt-get-update-errors

# Kompilacja OpenWRT:

./scripts/feeds update -a
./scripts/feeds install -a
make menuconfig"
QeCQpAMW,hop0,EngLeo,C++,Saturday 1st of July 2023 02:55:04 PM CDT,"#include <iostream>
#include <sstream>
#include <string>

using namespace std;

string mpops(string pre, string sim) {
    int size = pre.size();
    char letter = pre[0];
    string sai = """";
    if(size > 1) {
        for(int i=0;i<size;i++) if(sim[i] == letter) {
                sai += mpops(pre.substr(1,i),sim.substr(0,i));
                sai += mpops(pre.substr(i+1,size-i-1),sim.substr(i+1,size-i-1));
                break;
            } 
    } return (sai += letter);
}

int main() { 
    int n, m;
    cin >> n;
    string a, b;
    ostringstream ros;
    while(n--) {
        cin >> m >> a >> b;
        ros << mpops(a,b);
        ros << endl;
    }
    cout << ros.str();
    return 0;
}"
p9ZLM1ye,Kaggle - Exercise 3 - Barplots and Heatmaps,makispaiktis,Python,Saturday 1st of July 2023 02:38:33 PM CDT,"import pandas as pd
pd.plotting.register_matplotlib_converters()
import matplotlib.pyplot as plt
# %matplotlib inline
import seaborn as sns
print(""Setup Complete"")


# 1. Read the data
ign_filepath = ""../input/ign_scores.csv""
ign_data = pd.read_csv(ign_filepath, index_col=""Platform"")
print(list(ign_data.columns))
print(ign_data.head())
print(ign_data.describe())

print(ign_data)
# What is the highest average score received by PC games, for any genre?
high_score = 7.759930
# On the PS Vita platform, which genre has the lowest average score? Put your answer in single quotes
worst_genre = 'Simulation'

# 2. Bar Chart and Heatmap
# Bar chart showing average score for racing games by platform
sns.barplot(x=ign_data.index, y=ign_data['Racing'])
sns.heatmap(data=ign_data, annot=True)"
WN2rsMmS,Dijsktra,informaticage,C++,Saturday 1st of July 2023 02:27:58 PM CDT,"#include <algorithm>
#include <iostream>
#include <queue>
#include <utility>
#include <vector>
#include <cstdint>

using namespace std;

#define DISTANCE_INITIALIZATION_VALUE -1

void add_edge_directed(
    vector<vector<pair<std::int64_t, std::int64_t>>> &G,
    std::int64_t u, 
    std::int64_t v, 
    std::int64_t weight
) {
    G.at(u).push_back(make_pair(v, weight));
    // G.at(v).push_back(make_pair(u, weight));
}

class Compare {
   public:
    // Ringraziamo l'umile dipendente cicciottello
    // per aver scoperto la necessitÃ¡ di una inspiegabile parentesi tonda
    bool operator() (
      pair<std::int64_t, std::int64_t> &lhs,
      pair<std::int64_t, std::int64_t> &rhs
    ) {
        return lhs.second > rhs.second;
    }
};

int main() {
    freopen(""input.txt"", ""r"", stdin);
    freopen(""output.txt"", ""w"", stdout);

    std::int64_t V, E;
    cin >> V >> E;
    vector<vector<pair<std::int64_t, std::int64_t>>> G(
        V, 
        vector<pair<std::int64_t, std::int64_t>>()
    );

    std::int64_t source, destination;
    cin >> source >> destination;
    source--;
    destination--;

    for (std::int64_t edge = 0; edge < E; edge++) {
        std::int64_t u, v, w;
        cin >> u >> v >> w;
        u--;
        v--;
        add_edge_directed(G, u, v, w);
    }

    // Shortest path
    priority_queue<pair<std::int64_t, std::int64_t>, vector<pair<std::int64_t, std::int64_t>>, Compare> queue;

    queue.push(make_pair(source, 0));

    vector<bool> visited(V, false);
    vector<std::int64_t> distances(V, DISTANCE_INITIALIZATION_VALUE);

    while (!queue.empty()) {
        pair<std::int64_t, std::int64_t> curr = queue.top();
        queue.pop();

        if (!visited.at(curr.first)) {
            visited.at(curr.first) = true;
            distances.at(curr.first) = curr.second;

            for (pair<std::int64_t, std::int64_t> neighbour : G.at(curr.first)) {
                if (!visited.at(neighbour.first)) {
                    queue.push(make_pair(neighbour.first, curr.second + neighbour.second));
                }
            }
        }
    }

    cout << distances.at(destination);
    return 0;
}"
fGKdKQD4,24. Over {post de rol},elirosecodes,HTML,Saturday 1st of July 2023 02:26:17 PM CDT,"<link href=""https://dl.dropboxusercontent.com/s/2g9gj0h2gq3elvd/itsover.css"" rel=""stylesheet""><div class=""overandover""><div class=""oao-top""><div class=""oao-t1"">Q</div><div class=""oao-t2""><div class=""oao-t2tl"">it's over</div><div class=""oao-t2stl"">over and over again tonight</div></div></div> <div class=""aoa-bdy""><div class=""oao-gd""><div class=""oao-g1"">b</div><div class=""oao-g2""><div class=""aoa-g2t""><span>Where</span><br>Cinema Moonlight</div><div class=""aoa-g2t""><span>With</span><br>my beloved one</div><div class=""aoa-g2t""><span>When</span><br>Tuesday, Midnight</div></div></div><div class=""oao-post"">
Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin non vulputate odio. Nullam suscipit dapibus molestie. Etiam varius pharetra est id lacinia. Nulla a mi tortor. Ut sit amet mauris et dui euismod efficitur. Curabitur suscipit elit vel facilisis varius. Mauris volutpat odio a dui sollicitudin, vel vulputate odio varius.

Duis congue malesuada leo eu tincidunt. Ut in suscipit dui. Aliquam tristique finibus arcu eget lobortis. Aliquam tincidunt elementum metus id laoreet. Donec massa urna, consequat sit amet mauris in, semper maximus libero. Mauris velit quam, lobortis id neque quis, viverra dictum eros. Proin et dui a tortor ullamcorper luctus. Phasellus efficitur sodales tortor in lobortis.

Nam pulvinar ipsum ut consequat molestie. Vestibulum sodales rutrum elementum. Ut vitae elit blandit, tempus ligula non, consequat purus. Quisque eu est posuere, pharetra justo at, tincidunt velit. Etiam ac ornare quam, at gravida nisi. Morbi bibendum risus nisi, non elementum lorem auctor ut. Curabitur sed dui est. Aliquam consectetur viverra justo eget vehicula.
</div></div><div class=""oao-end"">Z</div></div><a href=""https://elirosecodes.tumblr.com/""><div class=""gnomo"">elirose</div></a><style>:root{--overcl: #FFC2CB;}</style>"
TFn8sb2N,Ø§ÙØªØ¨ ÙØ¹Ø§Ø¯ÙØ§Øª Ø³Ø±ÙØ¹Ø© Ø¨Ø§ÙØ£ÙÙØ§Ø¯ ÙØ§Ø®ØªØµØ§Ø±Ø§Øª ÙÙØ­Ø© Ø§ÙÙÙØ§ØªÙØ­,ghostman905,JavaScript,Saturday 1st of July 2023 02:20:04 PM CDT,"Ø§Ø³ØªØ®Ø¯Ù Ø§ÙØ£ÙÙØ§Ø¯ ÙØ§Ø®ØªØµØ§Ø±Ø§Øª ÙÙØ­Ø© Ø§ÙÙÙØ§ØªÙØ­ ÙØ¥Ø¯Ø±Ø§Ø¬ Ø±ÙÙØ² Ø§ÙÙØ¹Ø§Ø¯ÙØ§Øª ÙØ¹ÙÙ Ø§ÙÙØ¹Ø§ÙÙØ§Øª Ø§ÙÙÙÙÙØ§Ø¦ÙØ© ÙØ§ÙØ±ÙØ§Ø¶ÙØ© ÙÙ Ø§ÙÙÙØ¨ÙØ±Ø¯ Ø¨Ø³Ø±Ø¹Ø© Ø§ÙÙØªØ§Ø¨Ø© .

https://worrdpro.blogspot.com/2022/04/Type-equations-using-codes-and-shortcuts.html"
ebA0xDvT,Kaggle - Exercise 2 - Hotels and clients,makispaiktis,Python,Saturday 1st of July 2023 01:57:36 PM CDT,"import pandas as pd
pd.plotting.register_matplotlib_converters()
import matplotlib.pyplot as plt
# %matplotlib inline
import seaborn as sns
print(""Setup Complete"")

""""""
# Set up code checking
import os
if not os.path.exists(""../input/museum_visitors.csv""):
    os.symlink(""../input/data-for-datavis/museum_visitors.csv"", ""../input/museum_visitors.csv"") 
from learntools.core import binder
binder.bind(globals())
from learntools.data_viz_to_coder.ex2 import *
print(""Setup Complete"")
""""""



# 1. Read the CSV file
museum_filepath = ""../input/museum_visitors.csv""
museum_data = pd.read_csv(museum_filepath, index_col=""Date"", parse_dates=True)
museum_data.tail()
# How many visitors did the Chinese American Museum receive in July 2018?
ca_museum_jul18 = 2620
# How many more visitors did Avila Adobe receive than the Firehouse Museum?
avila_oct18 = 19280 - 4622


# 2. Show the lineplots for all the museums and for only 1 museum after that
sns.lineplot(data=museum_data)
sns.lineplot(data=museum_data['Avila Adobe'], label=""Avila Adobe"")"
KknPVMRK,Ø§Ø²Ø§Ù ØªÙØªØ¨ Ø§ÙÙØ³ÙØ± Ø¨Ø§ÙØ¹Ø±Ø¨Ù ÙÙ Ø§ÙÙÙØ±Ø¯,ghostman905,JavaScript,Saturday 1st of July 2023 01:50:29 PM CDT,"Ø§Ø¹Ø±Ù Ø§Ø²Ø§Ù ØªÙØªØ¨ Ø§ÙÙØ³ÙØ± Ø²Ù 1/2 Ø 1/4 Ø¨Ø§ÙØ¹Ø±Ø¨Ù Ø¹ÙÙ ÙÙØ±Ø¯ 2010 Ø 2007 . 

https://worrdpro.blogspot.com/2023/06/blog-post.html"
j5FfrjZB,Untitled,Iqura,TypeScript,Saturday 1st of July 2023 01:42:47 PM CDT,"const gcdArrayFunction = (a: number, b: number): number[] => {
    const gcd = (x: number, y: number): number => {
      if (y === 0) {
        return x;
      }
      return gcd(y, x % y);
    };
  
    const result: number[] = [];
    const greatestCommonDivisor = gcd(a, b);
  
    for (let i = greatestCommonDivisor; i >= 1; i--) {
      if (greatestCommonDivisor % i === 0) {
        result.push(i);
      }
    }
  
    return result;
}

const gcdOfStrings = (str1: string, str2: string): string => {
    if(str1 === str2) return str1;

    let len1 = str1.length;
    let len2 = str2.length;
    //str1 is less than str2
    //str1 = 3, str2 = 6;
    //swap
    if(len1>len2){
        [str1,str2] = [str2,str1];
        [len1,len2] = [len2,len1];
    }
    
    const gcdArray = gcdArrayFunction(len1,len2);
    
    for(const number of gcdArray){
        let newNumber = '';
        for(let i = 0; i < number; i++){
            newNumber+=str1[i];
        }
        const missing = len1/number;
        const resultNumber = newNumber.repeat(missing);
 
        if(resultNumber === str1){
            const missing = len2/number;
            const resultNumber = newNumber.repeat(missing);
            if(resultNumber === str2){
                return newNumber;
            } 
        }
    }
    return """";
};



console.log(gcdOfStrings(""ABCABC"",""ABC"")); // ABC
console.log(gcdOfStrings(""ABABAB"",""ABAB""));// AB


/*

6
4



*/"
dQykbctj,Kaggle - Exercise 1 - Spotify: Times streamed for popular songs,makispaiktis,Python,Saturday 1st of July 2023 01:15:32 PM CDT,"import pandas as pd
pd.plotting.register_matplotlib_converters()
import matplotlib.pyplot as plt
# %matplotlib inline
import seaborn as sns



# 1. Read the file and show the first 5 and 5 last rows of the dataset
spotify_filepath = ""./spotify.csv""
spotify_data = pd.read_csv(spotify_filepath, index_col=""Date"", parse_dates=True)
print(spotify_data.head(), end='\n\n')
print(spotify_data.tail(), end='\n\n')

# 2. Plot all the columns: horizontal axis is the date of the songs
plt.figure(figsize=(14,6))
plt.xlabel(""Date"")
plt.ylabel(""Times streamed"")
plt.title(""Daily Global Streams of Popular Songs in 2017-2018"")
sns.lineplot(data=spotify_data)
plt.show()

# 3. Plot 3 columns
plt.figure(figsize=(14,6))
plt.xlabel(""Date"")
plt.ylabel(""Times streamed"")
plt.title(""Daily Global Streams of Popular Songs in 2017-2018"")
sns.lineplot(data=spotify_data['Shape of You'], label=""Shape of You"")
sns.lineplot(data=spotify_data['Despacito'], label=""Despacito"")
plt.show()"
B21B52zi,Nigerian scammers [1-7-2/2023],bombaires,HTML,Saturday 1st of July 2023 01:05:10 PM CDT,"<a href=""mailto:mrbrightlee97@gmail.com"">mrbrightlee97@gmail.com</a>
<a href=""mailto:m.rbri.ght.l.ee.9.7@gmail.com"">m.rbri.ght.l.ee.9.7@gmail.com</a>
<a href=""mailto:m.r.br.i.ghtle.e97@gmail.com"">m.r.br.i.ghtle.e97@gmail.com</a>
<a href=""mailto:mr.b.r.ig.ht.lee97@gmail.com"">mr.b.r.ig.ht.lee97@gmail.com</a>
<a href=""mailto:m.rb.r.i.g.ht.lee.9.7@gmail.com"">m.rb.r.i.g.ht.lee.9.7@gmail.com</a>
<a href=""mailto:mr.b.rig.ht.l.e.e.97@gmail.com"">mr.b.rig.ht.l.e.e.97@gmail.com</a>
<a href=""mailto:m.rb.rig.h.tle.e.9.7@gmail.com"">m.rb.rig.h.tle.e.9.7@gmail.com</a>
<a href=""mailto:mrb.r.i.g.ht.l.ee.97@gmail.com"">mrb.r.i.g.ht.l.ee.97@gmail.com</a>
<a href=""mailto:mr.brig.h.t.l.ee.97@gmail.com"">mr.brig.h.t.l.ee.97@gmail.com</a>
<a href=""mailto:m.r.br.i.g.h.tlee97@gmail.com"">m.r.br.i.g.h.tlee97@gmail.com</a>
<a href=""mailto:m.rbr.ig.ht.l.e.e.9.7@gmail.com"">m.rbr.ig.ht.l.e.e.9.7@gmail.com</a>
<a href=""mailto:m.rb.ri.g.h.t.l.e.e9.7@gmail.com"">m.rb.ri.g.h.t.l.e.e9.7@gmail.com</a>
<a href=""mailto:mr.br.ig.ht.l.e.e.97@gmail.com"">mr.br.ig.ht.l.e.e.97@gmail.com</a>
<a href=""mailto:m.r.b.ri.gh.tl.e.e.97@gmail.com"">m.r.b.ri.gh.tl.e.e.97@gmail.com</a>
<a href=""mailto:mrb.rig.htlee97@gmail.com"">mrb.rig.htlee97@gmail.com</a>
<a href=""mailto:m.rbr.i.gh.tle.e97@gmail.com"">m.rbr.i.gh.tle.e97@gmail.com</a>
<a href=""mailto:m.r.b.r.i.g.ht.lee.97@gmail.com"">m.r.b.r.i.g.ht.lee.97@gmail.com</a>
<a href=""mailto:mrb.ri.ght.l.ee.97@gmail.com"">mrb.ri.ght.l.ee.97@gmail.com</a>
<a href=""mailto:m.rb.rig.htl.ee9.7@gmail.com"">m.rb.rig.htl.ee9.7@gmail.com</a>
<a href=""mailto:mrb.right.l.ee97@gmail.com"">mrb.right.l.ee97@gmail.com</a>
<a href=""mailto:m.rb.r.i.ghtl.e.e.9.7@gmail.com"">m.rb.r.i.ghtl.e.e.9.7@gmail.com</a>
<a href=""mailto:mrb.r.i.g.htl.ee.9.7@gmail.com"">mrb.r.i.g.htl.ee.9.7@gmail.com</a>
<a href=""mailto:m.r.b.r.i.g.htle.e9.7@gmail.com"">m.r.b.r.i.g.htle.e9.7@gmail.com</a>
<a href=""mailto:mrb.r.ightl.e.e9.7@gmail.com"">mrb.r.ightl.e.e9.7@gmail.com</a>
<a href=""mailto:m.rb.ri.ght.l.e.e.9.7@gmail.com"">m.rb.ri.ght.l.e.e.9.7@gmail.com</a>
<a href=""mailto:mrb.rig.h.t.l.ee.9.7@gmail.com"">mrb.rig.h.t.l.ee.9.7@gmail.com</a>
<a href=""mailto:mr.b.right.l.e.e97@gmail.com"">mr.b.right.l.e.e97@gmail.com</a>
<a href=""mailto:mr.br.i.g.htl.ee97@gmail.com"">mr.br.i.g.htl.ee97@gmail.com</a>
<a href=""mailto:m.rbr.i.g.htle.e97@gmail.com"">m.rbr.i.g.htle.e97@gmail.com</a>
<a href=""mailto:mrbrig.h.tl.ee.9.7@gmail.com"">mrbrig.h.tl.ee.9.7@gmail.com</a>
<a href=""mailto:mr.b.r.ig.htl.e.e9.7@gmail.com"">mr.b.r.ig.htl.e.e9.7@gmail.com</a>
<a href=""mailto:m.r.br.igh.t.l.ee.9.7@gmail.com"">m.r.br.igh.t.l.ee.9.7@gmail.com</a>
<a href=""mailto:m.r.bri.gh.tlee.97@gmail.com"">m.r.bri.gh.tlee.97@gmail.com</a>
<a href=""mailto:mrb.r.ig.ht.l.ee.9.7@gmail.com"">mrb.r.ig.ht.l.ee.9.7@gmail.com</a>
<a href=""mailto:mrb.r.i.ght.le.e.97@gmail.com"">mrb.r.i.ght.le.e.97@gmail.com</a>
<a href=""mailto:mr.b.ri.g.h.tle.e9.7@gmail.com"">mr.b.ri.g.h.tle.e9.7@gmail.com</a>
<a href=""mailto:mrb.ri.g.h.t.l.e.e.97@gmail.com"">mrb.ri.g.h.t.l.e.e.97@gmail.com</a>
<a href=""mailto:mrb.rig.h.t.l.e.e.97@gmail.com"">mrb.rig.h.t.l.e.e.97@gmail.com</a>
<a href=""mailto:mr.br.i.g.h.t.l.e.e.97@gmail.com"">mr.br.i.g.h.t.l.e.e.97@gmail.com</a>
<a href=""mailto:m.rbr.ig.htlee.97@gmail.com"">m.rbr.ig.htlee.97@gmail.com</a>
<a href=""mailto:m.rbrigh.tle.e9.7@gmail.com"">m.rbrigh.tle.e9.7@gmail.com</a>
<a href=""mailto:mrb.rightl.e.e.97@gmail.com"">mrb.rightl.e.e.97@gmail.com</a>
<a href=""mailto:mrb.r.ig.htle.e97@gmail.com"">mrb.r.ig.htle.e97@gmail.com</a>
<a href=""mailto:m.r.b.rig.ht.le.e.97@gmail.com"">m.r.b.rig.ht.le.e.97@gmail.com</a>
<a href=""mailto:mr.b.rig.h.t.lee97@gmail.com"">mr.b.rig.h.t.lee97@gmail.com</a>
<a href=""mailto:m.rbrigh.t.l.e.e97@gmail.com"">m.rbrigh.t.l.e.e97@gmail.com</a>
<a href=""mailto:m.rb.r.i.g.htle.e9.7@gmail.com"">m.rb.r.i.g.htle.e9.7@gmail.com</a>
<a href=""mailto:mr.br.ig.htle.e97@gmail.com"">mr.br.ig.htle.e97@gmail.com</a>
<a href=""mailto:mrbr.i.g.h.tl.ee.97@gmail.com"">mrbr.i.g.h.tl.ee.97@gmail.com</a>
<a href=""mailto:mrb.ri.ghtlee97@gmail.com"">mrb.ri.ghtlee97@gmail.com</a>
<a href=""mailto:mrbri.g.htle.e97@gmail.com"">mrbri.g.htle.e97@gmail.com</a>
<a href=""mailto:m.r.b.righ.t.l.e.e.9.7@gmail.com"">m.r.b.righ.t.l.e.e.9.7@gmail.com</a>
<a href=""mailto:m.rbri.g.htl.ee9.7@gmail.com"">m.rbri.g.htl.ee9.7@gmail.com</a>
<a href=""mailto:mrbr.i.g.h.t.lee9.7@gmail.com"">mrbr.i.g.h.t.lee9.7@gmail.com</a>
<a href=""mailto:mr.b.rig.h.tl.e.e.97@gmail.com"">mr.b.rig.h.tl.e.e.97@gmail.com</a>
<a href=""mailto:m.r.b.righ.t.lee9.7@gmail.com"">m.r.b.righ.t.lee9.7@gmail.com</a>
<a href=""mailto:mrbri.gh.t.l.ee97@gmail.com"">mrbri.gh.t.l.ee97@gmail.com</a>
<a href=""mailto:m.rb.r.i.g.htl.e.e97@gmail.com"">m.rb.r.i.g.htl.e.e97@gmail.com</a>
<a href=""mailto:m.rbrig.ht.le.e.97@gmail.com"">m.rbrig.ht.le.e.97@gmail.com</a>
<a href=""mailto:mr.bri.ght.le.e.97@gmail.com"">mr.bri.ght.le.e.97@gmail.com</a>
<a href=""mailto:m.rb.r.ig.h.tl.ee9.7@gmail.com"">m.rb.r.ig.h.tl.ee9.7@gmail.com</a>
<a href=""mailto:m.r.b.ri.g.h.tl.e.e97@gmail.com"">m.r.b.ri.g.h.tl.e.e97@gmail.com</a>
<a href=""mailto:mrbrig.htle.e9.7@gmail.com"">mrbrig.htle.e9.7@gmail.com</a>
<a href=""mailto:mrbri.ght.l.ee.97@gmail.com"">mrbri.ght.l.ee.97@gmail.com</a>
<a href=""mailto:m.r.bri.gh.tle.e.97@gmail.com"">m.r.bri.gh.tle.e.97@gmail.com</a>
<a href=""mailto:mrbri.gh.t.le.e.97@gmail.com"">mrbri.gh.t.le.e.97@gmail.com</a>
<a href=""mailto:m.r.br.i.g.htlee9.7@gmail.com"">m.r.br.i.g.htlee9.7@gmail.com</a>
<a href=""mailto:mr.b.ri.gh.t.le.e.9.7@gmail.com"">mr.b.ri.gh.t.le.e.9.7@gmail.com</a>
<a href=""mailto:m.rb.r.ig.h.tlee.9.7@gmail.com"">m.rb.r.ig.h.tlee.9.7@gmail.com</a>
<a href=""mailto:mr.bri.gh.tlee.97@gmail.com"">mr.bri.gh.tlee.97@gmail.com</a>
<a href=""mailto:mr.br.i.gh.t.l.e.e9.7@gmail.com"">mr.br.i.gh.t.l.e.e9.7@gmail.com</a>
<a href=""mailto:m.rb.r.i.gh.t.l.ee9.7@gmail.com"">m.rb.r.i.gh.t.l.ee9.7@gmail.com</a>
<a href=""mailto:m.rb.r.ig.h.t.le.e.97@gmail.com"">m.rb.r.ig.h.t.le.e.97@gmail.com</a>
<a href=""mailto:m.rb.ri.ghtlee.97@gmail.com"">m.rb.ri.ghtlee.97@gmail.com</a>
<a href=""mailto:m.rbrig.ht.l.e.e9.7@gmail.com"">m.rbrig.ht.l.e.e9.7@gmail.com</a>
<a href=""mailto:m.r.brig.ht.l.e.e.9.7@gmail.com"">m.r.brig.ht.l.e.e.9.7@gmail.com</a>
<a href=""mailto:m.rbri.gh.t.lee.97@gmail.com"">m.rbri.gh.t.lee.97@gmail.com</a>
<a href=""mailto:m.rb.ri.ght.lee.97@gmail.com"">m.rb.ri.ght.lee.97@gmail.com</a>
<a href=""mailto:m.rbr.igh.tl.ee.9.7@gmail.com"">m.rbr.igh.tl.ee.9.7@gmail.com</a>
<a href=""mailto:mr.b.rig.htlee.9.7@gmail.com"">mr.b.rig.htlee.9.7@gmail.com</a>
<a href=""mailto:mrbrigh.t.lee.9.7@gmail.com"">mrbrigh.t.lee.9.7@gmail.com</a>
<a href=""mailto:m.rb.rig.htl.ee.9.7@gmail.com"">m.rb.rig.htl.ee.9.7@gmail.com</a>
<a href=""mailto:m.rb.r.i.ghtl.ee9.7@gmail.com"">m.rb.r.i.ghtl.ee9.7@gmail.com</a>
<a href=""mailto:m.rb.ri.g.h.t.lee97@gmail.com"">m.rb.ri.g.h.t.lee97@gmail.com</a>
<a href=""mailto:mr.b.rig.h.t.l.e.e9.7@gmail.com"">mr.b.rig.h.t.l.e.e9.7@gmail.com</a>
<a href=""mailto:m.r.b.r.ig.h.t.l.e.e97@gmail.com"">m.r.b.r.ig.h.t.l.e.e97@gmail.com</a>
<a href=""mailto:mrbri.g.h.t.lee.97@gmail.com"">mrbri.g.h.t.lee.97@gmail.com</a>
<a href=""mailto:m.r.b.ri.ght.le.e97@gmail.com"">m.r.b.ri.ght.le.e97@gmail.com</a>
<a href=""mailto:mrbr.i.g.ht.lee9.7@gmail.com"">mrbr.i.g.ht.lee9.7@gmail.com</a>
<a href=""mailto:mrb.r.i.ght.l.e.e9.7@gmail.com"">mrb.r.i.ght.l.e.e9.7@gmail.com</a>
<a href=""mailto:m.rbr.i.gh.tle.e.9.7@gmail.com"">m.rbr.i.gh.tle.e.9.7@gmail.com</a>
<a href=""mailto:mr.brig.h.tl.e.e.97@gmail.com"">mr.brig.h.tl.e.e.97@gmail.com</a>
<a href=""mailto:m.rbr.i.ghtl.ee9.7@gmail.com"">m.rbr.i.ghtl.ee9.7@gmail.com</a>
<a href=""mailto:m.rb.rig.h.tl.ee9.7@gmail.com"">m.rb.rig.h.tl.ee9.7@gmail.com</a>
<a href=""mailto:mrb.r.ig.ht.le.e9.7@gmail.com"">mrb.r.ig.ht.le.e9.7@gmail.com</a>
<a href=""mailto:mr.b.r.i.gh.t.lee97@gmail.com"">mr.b.r.i.gh.t.lee97@gmail.com</a>
<a href=""mailto:mrb.r.ig.htl.e.e.97@gmail.com"">mrb.r.ig.htl.e.e.97@gmail.com</a>
<a href=""mailto:mr.b.ri.ght.l.e.e9.7@gmail.com"">mr.b.ri.ght.l.e.e9.7@gmail.com</a>
<a href=""mailto:m.rbri.g.ht.lee97@gmail.com"">m.rbri.g.ht.lee97@gmail.com</a>
<a href=""mailto:mr.brigh.t.le.e97@gmail.com"">mr.brigh.t.le.e97@gmail.com</a>
<a href=""mailto:m.rb.ri.gh.tl.e.e9.7@gmail.com"">m.rb.ri.gh.tl.e.e9.7@gmail.com</a>
<a href=""mailto:mrbrig.h.t.lee.97@gmail.com"">mrbrig.h.t.lee.97@gmail.com</a>
<a href=""mailto:m.r.b.right.le.e.9.7@gmail.com"">m.r.b.right.le.e.9.7@gmail.com</a>
<a href=""mailto:m.r.br.i.ght.lee9.7@gmail.com"">m.r.br.i.ght.lee9.7@gmail.com</a>
<a href=""mailto:m.rb.rig.h.t.le.e97@gmail.com"">m.rb.rig.h.t.le.e97@gmail.com</a>
<a href=""mailto:mr.b.rig.htl.e.e97@gmail.com"">mr.b.rig.htl.e.e97@gmail.com</a>
<a href=""mailto:m.r.bri.gh.tl.e.e9.7@gmail.com"">m.r.bri.gh.tl.e.e9.7@gmail.com</a>
<a href=""mailto:mr.b.r.ightl.e.e97@gmail.com"">mr.b.r.ightl.e.e97@gmail.com</a>
<a href=""mailto:mr.br.i.gh.t.lee9.7@gmail.com"">mr.br.i.gh.t.lee9.7@gmail.com</a>
<a href=""mailto:m.r.b.r.i.g.htlee.9.7@gmail.com"">m.r.b.r.i.g.htlee.9.7@gmail.com</a>
<a href=""mailto:m.r.brigh.tl.e.e97@gmail.com"">m.r.brigh.tl.e.e97@gmail.com</a>
<a href=""mailto:mr.b.r.ight.l.e.e.9.7@gmail.com"">mr.b.r.ight.l.e.e.9.7@gmail.com</a>
<a href=""mailto:m.rb.r.i.gh.t.lee97@gmail.com"">m.rb.r.i.gh.t.lee97@gmail.com</a>
<a href=""mailto:m.r.bri.ght.l.ee9.7@gmail.com"">m.r.bri.ght.l.ee9.7@gmail.com</a>
<a href=""mailto:mr.b.r.ig.htl.e.e97@gmail.com"">mr.b.r.ig.htl.e.e97@gmail.com</a>
<a href=""mailto:mrbri.g.h.t.l.ee9.7@gmail.com"">mrbri.g.h.t.l.ee9.7@gmail.com</a>
<a href=""mailto:mrbr.i.gh.tlee97@gmail.com"">mrbr.i.gh.tlee97@gmail.com</a>
<a href=""mailto:m.rb.ri.g.h.t.le.e.9.7@gmail.com"">m.rb.ri.g.h.t.le.e.9.7@gmail.com</a>
<a href=""mailto:mrbr.i.gh.tl.ee97@gmail.com"">mrbr.i.gh.tl.ee97@gmail.com</a>
<a href=""mailto:m.rbr.ig.h.tle.e.9.7@gmail.com"">m.rbr.ig.h.tle.e.9.7@gmail.com</a>
<a href=""mailto:mrb.r.ig.ht.le.e.9.7@gmail.com"">mrb.r.ig.ht.le.e.9.7@gmail.com</a>
<a href=""mailto:m.rb.r.i.gh.tle.e.9.7@gmail.com"">m.rb.r.i.gh.tle.e.9.7@gmail.com</a>
<a href=""mailto:mrb.r.i.g.h.t.l.ee.97@gmail.com"">mrb.r.i.g.h.t.l.ee.97@gmail.com</a>
<a href=""mailto:mr.b.r.i.gh.tl.ee97@gmail.com"">mr.b.r.i.gh.tl.ee97@gmail.com</a>
<a href=""mailto:m.r.br.i.g.h.t.le.e9.7@gmail.com"">m.r.br.i.g.h.t.le.e9.7@gmail.com</a>
<a href=""mailto:m.rb.r.ig.htlee9.7@gmail.com"">m.rb.r.ig.htlee9.7@gmail.com</a>
<a href=""mailto:mrb.r.i.ght.lee97@gmail.com"">mrb.r.i.ght.lee97@gmail.com</a>
<a href=""mailto:m.r.b.r.i.g.htl.e.e.9.7@gmail.com"">m.r.b.r.i.g.htl.e.e.9.7@gmail.com</a>
<a href=""mailto:mrb.rig.ht.l.e.e97@gmail.com"">mrb.rig.ht.l.e.e97@gmail.com</a>
<a href=""mailto:mr.brig.h.t.l.e.e9.7@gmail.com"">mr.brig.h.t.l.e.e9.7@gmail.com</a>
<a href=""mailto:mr.b.r.igh.t.l.ee.9.7@gmail.com"">mr.b.r.igh.t.l.ee.9.7@gmail.com</a>
<a href=""mailto:m.rbr.ig.ht.l.ee9.7@gmail.com"">m.rbr.ig.ht.l.ee9.7@gmail.com</a>
<a href=""mailto:m.r.b.r.ig.ht.le.e97@gmail.com"">m.r.b.r.ig.ht.le.e97@gmail.com</a>
<a href=""mailto:m.r.brig.h.t.l.e.e97@gmail.com"">m.r.brig.h.t.l.e.e97@gmail.com</a>
<a href=""mailto:mr.br.i.gh.t.l.ee97@gmail.com"">mr.br.i.gh.t.l.ee97@gmail.com</a>
<a href=""mailto:mr.brig.h.tl.e.e9.7@gmail.com"">mr.brig.h.tl.e.e9.7@gmail.com</a>
<a href=""mailto:m.r.b.ri.g.ht.le.e97@gmail.com"">m.r.b.ri.g.ht.le.e97@gmail.com</a>
<a href=""mailto:mr.brig.h.tl.ee.97@gmail.com"">mr.brig.h.tl.ee.97@gmail.com</a>
<a href=""mailto:m.rb.r.i.gh.tlee97@gmail.com"">m.rb.r.i.gh.tlee97@gmail.com</a>
<a href=""mailto:m.r.b.rig.htlee9.7@gmail.com"">m.r.b.rig.htlee9.7@gmail.com</a>
<a href=""mailto:m.rb.ri.gh.t.le.e9.7@gmail.com"">m.rb.ri.gh.t.le.e9.7@gmail.com</a>
<a href=""mailto:mrbri.gh.tl.e.e.97@gmail.com"">mrbri.gh.tl.e.e.97@gmail.com</a>
<a href=""mailto:m.rbr.i.ghtlee.97@gmail.com"">m.rbr.i.ghtlee.97@gmail.com</a>
<a href=""mailto:m.rbri.g.ht.le.e9.7@gmail.com"">m.rbri.g.ht.le.e9.7@gmail.com</a>
<a href=""mailto:m.rb.rightl.e.e.9.7@gmail.com"">m.rb.rightl.e.e.9.7@gmail.com</a>
<a href=""mailto:mr.br.igh.tl.e.e9.7@gmail.com"">mr.br.igh.tl.e.e9.7@gmail.com</a>
<a href=""mailto:mrb.rig.h.t.l.ee.97@gmail.com"">mrb.rig.h.t.l.ee.97@gmail.com</a>
<a href=""mailto:m.rb.r.i.ghtl.ee.9.7@gmail.com"">m.rb.r.i.ghtl.ee.9.7@gmail.com</a>
<a href=""mailto:mrbri.g.ht.l.ee97@gmail.com"">mrbri.g.ht.l.ee97@gmail.com</a>
<a href=""mailto:m.rbrig.h.t.l.e.e.9.7@gmail.com"">m.rbrig.h.t.l.e.e.9.7@gmail.com</a>
<a href=""mailto:m.r.b.ri.g.h.t.le.e.9.7@gmail.com"">m.r.b.ri.g.h.t.le.e.9.7@gmail.com</a>
<a href=""mailto:mr.br.i.g.h.t.l.ee97@gmail.com"">mr.br.i.g.h.t.l.ee97@gmail.com</a>
<a href=""mailto:mr.brig.h.t.l.ee.9.7@gmail.com"">mr.brig.h.t.l.ee.9.7@gmail.com</a>
<a href=""mailto:mrbrig.htle.e97@gmail.com"">mrbrig.htle.e97@gmail.com</a>
<a href=""mailto:mr.br.igh.tlee9.7@gmail.com"">mr.br.igh.tlee9.7@gmail.com</a>
<a href=""mailto:mr.b.rightle.e97@gmail.com"">mr.b.rightle.e97@gmail.com</a>
<a href=""mailto:mrb.r.i.g.htle.e.97@gmail.com"">mrb.r.i.g.htle.e.97@gmail.com</a>
<a href=""mailto:mr.b.rig.ht.le.e.97@gmail.com"">mr.b.rig.ht.le.e.97@gmail.com</a>
<a href=""mailto:m.r.b.r.ightlee97@gmail.com"">m.r.b.r.ightlee97@gmail.com</a>
<a href=""mailto:mr.b.r.i.g.h.t.l.ee.9.7@gmail.com"">mr.b.r.i.g.h.t.l.ee.9.7@gmail.com</a>
<a href=""mailto:m.rb.rightlee.97@gmail.com"">m.rb.rightlee.97@gmail.com</a>
<a href=""mailto:m.r.bri.ghtl.ee9.7@gmail.com"">m.r.bri.ghtl.ee9.7@gmail.com</a>
<a href=""mailto:mrb.rig.h.tle.e.9.7@gmail.com"">mrb.rig.h.tle.e.9.7@gmail.com</a>
<a href=""mailto:m.rbr.i.g.h.tle.e.97@gmail.com"">m.rbr.i.g.h.tle.e.97@gmail.com</a>
<a href=""mailto:mrb.rig.ht.le.e.97@gmail.com"">mrb.rig.ht.le.e.97@gmail.com</a>
<a href=""mailto:mrb.r.i.g.h.tle.e.97@gmail.com"">mrb.r.i.g.h.tle.e.97@gmail.com</a>
<a href=""mailto:m.rbr.i.ght.lee9.7@gmail.com"">m.rbr.i.ght.lee9.7@gmail.com</a>
<a href=""mailto:m.r.b.r.ig.ht.le.e9.7@gmail.com"">m.r.b.r.ig.ht.le.e9.7@gmail.com</a>
<a href=""mailto:m.r.brig.h.t.l.e.e9.7@gmail.com"">m.r.brig.h.t.l.e.e9.7@gmail.com</a>
<a href=""mailto:mrb.ri.gh.tl.ee.97@gmail.com"">mrb.ri.gh.tl.ee.97@gmail.com</a>
<a href=""mailto:m.rbri.g.htl.e.e97@gmail.com"">m.rbri.g.htl.e.e97@gmail.com</a>
<a href=""mailto:m.r.b.right.l.ee.9.7@gmail.com"">m.r.b.right.l.ee.9.7@gmail.com</a>
<a href=""mailto:m.rbr.i.ghtl.ee97@gmail.com"">m.rbr.i.ghtl.ee97@gmail.com</a>
<a href=""mailto:m.r.brig.htl.e.e97@gmail.com"">m.r.brig.htl.e.e97@gmail.com</a>
<a href=""mailto:mrb.rig.h.tle.e9.7@gmail.com"">mrb.rig.h.tle.e9.7@gmail.com</a>
<a href=""mailto:mrb.ri.ght.lee97@gmail.com"">mrb.ri.ght.lee97@gmail.com</a>
<a href=""mailto:mr.b.r.ig.htlee.9.7@gmail.com"">mr.b.r.ig.htlee.9.7@gmail.com</a>
<a href=""mailto:m.rb.r.igh.tl.e.e.97@gmail.com"">m.rb.r.igh.tl.e.e.97@gmail.com</a>
<a href=""mailto:mr.bri.ght.lee.9.7@gmail.com"">mr.bri.ght.lee.9.7@gmail.com</a>
<a href=""mailto:mrb.r.i.gh.tle.e.9.7@gmail.com"">mrb.r.i.gh.tle.e.9.7@gmail.com</a>
<a href=""mailto:m.r.b.righ.tlee9.7@gmail.com"">m.r.b.righ.tlee9.7@gmail.com</a>
<a href=""mailto:m.r.b.right.l.e.e97@gmail.com"">m.r.b.right.l.e.e97@gmail.com</a>
<a href=""mailto:m.r.b.r.ightle.e9.7@gmail.com"">m.r.b.r.ightle.e9.7@gmail.com</a>
<a href=""mailto:mrbrig.htl.e.e9.7@gmail.com"">mrbrig.htl.e.e9.7@gmail.com</a>
<a href=""mailto:mrbri.g.htle.e.97@gmail.com"">mrbri.g.htle.e.97@gmail.com</a>
<a href=""mailto:mrb.r.ig.h.tle.e9.7@gmail.com"">mrb.r.ig.h.tle.e9.7@gmail.com</a>
<a href=""mailto:m.r.b.r.ig.htle.e.9.7@gmail.com"">m.r.b.r.ig.htle.e.9.7@gmail.com</a>
<a href=""mailto:m.r.b.rightlee.97@gmail.com"">m.r.b.rightlee.97@gmail.com</a>
<a href=""mailto:m.r.br.i.g.htle.e.9.7@gmail.com"">m.r.br.i.g.htle.e.9.7@gmail.com</a>
<a href=""mailto:mr.b.ri.g.ht.lee97@gmail.com"">mr.b.ri.g.ht.lee97@gmail.com</a>
<a href=""mailto:m.rb.ri.ghtlee.9.7@gmail.com"">m.rb.ri.ghtlee.9.7@gmail.com</a>
<a href=""mailto:mr.br.igh.t.l.ee.9.7@gmail.com"">mr.br.igh.t.l.ee.9.7@gmail.com</a>
<a href=""mailto:mr.b.ri.ghtle.e.9.7@gmail.com"">mr.b.ri.ghtle.e.9.7@gmail.com</a>
<a href=""mailto:m.rb.rightl.e.e97@gmail.com"">m.rb.rightl.e.e97@gmail.com</a>
<a href=""mailto:mr.b.r.i.gh.t.l.e.e97@gmail.com"">mr.b.r.i.gh.t.l.e.e97@gmail.com</a>
<a href=""mailto:mrbr.igh.tle.e9.7@gmail.com"">mrbr.igh.tle.e9.7@gmail.com</a>
<a href=""mailto:mr.b.r.ig.htl.e.e.97@gmail.com"">mr.b.r.ig.htl.e.e.97@gmail.com</a>
<a href=""mailto:m.rb.right.le.e97@gmail.com"">m.rb.right.le.e97@gmail.com</a>
<a href=""mailto:m.rbr.ig.h.t.lee.97@gmail.com"">m.rbr.ig.h.t.lee.97@gmail.com</a>
<a href=""mailto:m.r.b.r.igh.tl.e.e9.7@gmail.com"">m.r.b.r.igh.tl.e.e9.7@gmail.com</a>
<a href=""mailto:mr.brightle.e.9.7@gmail.com"">mr.brightle.e.9.7@gmail.com</a>
<a href=""mailto:dw522274@gmail.com"">dw522274@gmail.com</a>
<a href=""mailto:dw.522.2.7.4@gmail.com"">dw.522.2.7.4@gmail.com</a>
<a href=""mailto:d.w5.2.22.74@gmail.com"">d.w5.2.22.74@gmail.com</a>
<a href=""mailto:d.w.5.22.274@gmail.com"">d.w.5.22.274@gmail.com</a>
<a href=""mailto:d.w.5.22.27.4@gmail.com"">d.w.5.22.27.4@gmail.com</a>
<a href=""mailto:dw.5.222.74@gmail.com"">dw.5.222.74@gmail.com</a>
<a href=""mailto:d.w5.2227.4@gmail.com"">d.w5.2227.4@gmail.com</a>
<a href=""mailto:d.w.522274@gmail.com"">d.w.522274@gmail.com</a>
<a href=""mailto:dw5.22.27.4@gmail.com"">dw5.22.27.4@gmail.com</a>
<a href=""mailto:dw522.27.4@gmail.com"">dw522.27.4@gmail.com</a>
<a href=""mailto:dw522.2.7.4@gmail.com"">dw522.2.7.4@gmail.com</a>
<a href=""mailto:dw.52.227.4@gmail.com"">dw.52.227.4@gmail.com</a>
<a href=""mailto:dw522.2.74@gmail.com"">dw522.2.74@gmail.com</a>
<a href=""mailto:d.w.52.2.274@gmail.com"">d.w.52.2.274@gmail.com</a>
<a href=""mailto:dw52.2274@gmail.com"">dw52.2274@gmail.com</a>
<a href=""mailto:dw5.22274@gmail.com"">dw5.22274@gmail.com</a>
<a href=""mailto:dw.52.2274@gmail.com"">dw.52.2274@gmail.com</a>
<a href=""mailto:dw52.2.274@gmail.com"">dw52.2.274@gmail.com</a>
<a href=""mailto:d.w5.22.2.74@gmail.com"">d.w5.22.2.74@gmail.com</a>
<a href=""mailto:dw.5.22.2.7.4@gmail.com"">dw.5.22.2.7.4@gmail.com</a>
<a href=""mailto:d.w.5.2.227.4@gmail.com"">d.w.5.2.227.4@gmail.com</a>
<a href=""mailto:d.w.5.2227.4@gmail.com"">d.w.5.2227.4@gmail.com</a>
<a href=""mailto:d.w.5.222.74@gmail.com"">d.w.5.222.74@gmail.com</a>
<a href=""mailto:d.w52.22.74@gmail.com"">d.w52.22.74@gmail.com</a>
<a href=""mailto:d.w.5.2.22.7.4@gmail.com"">d.w.5.2.22.7.4@gmail.com</a>
<a href=""mailto:d.w.522.2.74@gmail.com"">d.w.522.2.74@gmail.com</a>
<a href=""mailto:dw.5.22.2.74@gmail.com"">dw.5.22.2.74@gmail.com</a>
<a href=""mailto:d.w52.2274@gmail.com"">d.w52.2274@gmail.com</a>
<a href=""mailto:dw.5.22274@gmail.com"">dw.5.22274@gmail.com</a>
<a href=""mailto:dw5222.7.4@gmail.com"">dw5222.7.4@gmail.com</a>
<a href=""mailto:dw522.274@gmail.com"">dw522.274@gmail.com</a>
<a href=""mailto:d.w5.222.74@gmail.com"">d.w5.222.74@gmail.com</a>
<a href=""mailto:d.w5.2.227.4@gmail.com"">d.w5.2.227.4@gmail.com</a>
<a href=""mailto:d.w.52.2.2.7.4@gmail.com"">d.w.52.2.2.7.4@gmail.com</a>
<a href=""mailto:d.w52.2.27.4@gmail.com"">d.w52.2.27.4@gmail.com</a>
<a href=""mailto:d.w.5.22.2.74@gmail.com"">d.w.5.22.2.74@gmail.com</a>
<a href=""mailto:d.w.5.222.7.4@gmail.com"">d.w.5.222.7.4@gmail.com</a>
<a href=""mailto:d.w5.222.7.4@gmail.com"">d.w5.222.7.4@gmail.com</a>
<a href=""mailto:d.w5222.74@gmail.com"">d.w5222.74@gmail.com</a>
<a href=""mailto:dw5.2.227.4@gmail.com"">dw5.2.227.4@gmail.com</a>
<a href=""mailto:dw.52.2.27.4@gmail.com"">dw.52.2.27.4@gmail.com</a>
<a href=""mailto:dw52.22.7.4@gmail.com"">dw52.22.7.4@gmail.com</a>
<a href=""mailto:dw5.22.2.74@gmail.com"">dw5.22.2.74@gmail.com</a>
<a href=""mailto:d.w5.2.22.7.4@gmail.com"">d.w5.2.22.7.4@gmail.com</a>
<a href=""mailto:d.w52.227.4@gmail.com"">d.w52.227.4@gmail.com</a>
<a href=""mailto:dw5.22.274@gmail.com"">dw5.22.274@gmail.com</a>
<a href=""mailto:d.w5.22.2.7.4@gmail.com"">d.w5.22.2.7.4@gmail.com</a>
<a href=""mailto:d.w.522.2.7.4@gmail.com"">d.w.522.2.7.4@gmail.com</a>
<a href=""mailto:d.w.52.2.2.74@gmail.com"">d.w.52.2.2.74@gmail.com</a>
<a href=""mailto:dw52.2.2.7.4@gmail.com"">dw52.2.2.7.4@gmail.com</a>
<a href=""mailto:d.w52.2.2.74@gmail.com"">d.w52.2.2.74@gmail.com</a>
<a href=""mailto:d.w5.2.2.2.74@gmail.com"">d.w5.2.2.2.74@gmail.com</a>
<a href=""mailto:d.w.52227.4@gmail.com"">d.w.52227.4@gmail.com</a>
<a href=""mailto:d.w5.2.2274@gmail.com"">d.w5.2.2274@gmail.com</a>
<a href=""mailto:d.w522.274@gmail.com"">d.w522.274@gmail.com</a>
<a href=""mailto:d.w5222.7.4@gmail.com"">d.w5222.7.4@gmail.com</a>
<a href=""mailto:d.w.52.22.7.4@gmail.com"">d.w.52.22.7.4@gmail.com</a>
<a href=""mailto:d.w.522.274@gmail.com"">d.w.522.274@gmail.com</a>
<a href=""mailto:dw522274@gmail.com"">dw522274@gmail.com</a>
<a href=""mailto:d.w.5222.74@gmail.com"">d.w.5222.74@gmail.com</a>
<a href=""mailto:d.w.52.2.27.4@gmail.com"">d.w.52.2.27.4@gmail.com</a>
<a href=""mailto:d.w.5.2.2.274@gmail.com"">d.w.5.2.2.274@gmail.com</a>
<a href=""mailto:dw5.2227.4@gmail.com"">dw5.2227.4@gmail.com</a>
<a href=""mailto:d.w.52.2274@gmail.com"">d.w.52.2274@gmail.com</a>
<a href=""mailto:dw.5.2.2.2.74@gmail.com"">dw.5.2.2.2.74@gmail.com</a>
<a href=""mailto:dw.522.27.4@gmail.com"">dw.522.27.4@gmail.com</a>
<a href=""mailto:dw52.2.2.74@gmail.com"">dw52.2.2.74@gmail.com</a>
<a href=""mailto:dw.5222.74@gmail.com"">dw.5222.74@gmail.com</a>
<a href=""mailto:dw.522.274@gmail.com"">dw.522.274@gmail.com</a>
<a href=""mailto:dw52.2.27.4@gmail.com"">dw52.2.27.4@gmail.com</a>
<a href=""mailto:dw.52227.4@gmail.com"">dw.52227.4@gmail.com</a>
<a href=""mailto:dw.522.2.74@gmail.com"">dw.522.2.74@gmail.com</a>
<a href=""mailto:d.w52227.4@gmail.com"">d.w52227.4@gmail.com</a>
<a href=""mailto:dw52.227.4@gmail.com"">dw52.227.4@gmail.com</a>
<a href=""mailto:d.w522.2.7.4@gmail.com"">d.w522.2.7.4@gmail.com</a>
<a href=""mailto:dw5.2.2274@gmail.com"">dw5.2.2274@gmail.com</a>
<a href=""mailto:dw.52.2.2.7.4@gmail.com"">dw.52.2.2.7.4@gmail.com</a>
<a href=""mailto:dw.5.2.2.27.4@gmail.com"">dw.5.2.2.27.4@gmail.com</a>
<a href=""mailto:d.w.5.2.2.2.7.4@gmail.com"">d.w.5.2.2.2.7.4@gmail.com</a>
<a href=""mailto:d.w.5.2.2.27.4@gmail.com"">d.w.5.2.2.27.4@gmail.com</a>
<a href=""mailto:dw52227.4@gmail.com"">dw52227.4@gmail.com</a>
<a href=""mailto:d.w.5.2.2274@gmail.com"">d.w.5.2.2274@gmail.com</a>
<a href=""mailto:d.w522.27.4@gmail.com"">d.w522.27.4@gmail.com</a>
<a href=""mailto:dw.5222.7.4@gmail.com"">dw.5222.7.4@gmail.com</a>
<a href=""mailto:dw5.222.7.4@gmail.com"">dw5.222.7.4@gmail.com</a>
<a href=""mailto:d.w5.2.2.2.7.4@gmail.com"">d.w5.2.2.2.7.4@gmail.com</a>
<a href=""mailto:d.w5.22274@gmail.com"">d.w5.22274@gmail.com</a>
<a href=""mailto:dw.52.2.274@gmail.com"">dw.52.2.274@gmail.com</a>
<a href=""mailto:dw5.2.2.274@gmail.com"">dw5.2.2.274@gmail.com</a>
<a href=""mailto:dw.5.2227.4@gmail.com"">dw.5.2227.4@gmail.com</a>
<a href=""mailto:dw52.22.74@gmail.com"">dw52.22.74@gmail.com</a>
<a href=""mailto:d.w522274@gmail.com"">d.w522274@gmail.com</a>
<a href=""mailto:d.w.522.27.4@gmail.com"">d.w.522.27.4@gmail.com</a>
<a href=""mailto:d.w5.22.27.4@gmail.com"">d.w5.22.27.4@gmail.com</a>
<a href=""mailto:dw5222.74@gmail.com"">dw5222.74@gmail.com</a>
<a href=""mailto:d.w5.2.2.27.4@gmail.com"">d.w5.2.2.27.4@gmail.com</a>
<a href=""mailto:d.w52.22.7.4@gmail.com"">d.w52.22.7.4@gmail.com</a>
<a href=""mailto:dw.5.2.2.2.7.4@gmail.com"">dw.5.2.2.2.7.4@gmail.com</a>
<a href=""mailto:d.w.5.22.2.7.4@gmail.com"">d.w.5.22.2.7.4@gmail.com</a>
<a href=""mailto:dw5.2.2.27.4@gmail.com"">dw5.2.2.27.4@gmail.com</a>
<a href=""mailto:dw.52.2.2.74@gmail.com"">dw.52.2.2.74@gmail.com</a>
<a href=""mailto:d.w5.2.2.274@gmail.com"">d.w5.2.2.274@gmail.com</a>
<a href=""mailto:dw.52.22.74@gmail.com"">dw.52.22.74@gmail.com</a>
<a href=""mailto:d.w522.2.74@gmail.com"">d.w522.2.74@gmail.com</a>
<a href=""mailto:d.w.52.227.4@gmail.com"">d.w.52.227.4@gmail.com</a>
<a href=""mailto:dw5.22.2.7.4@gmail.com"">dw5.22.2.7.4@gmail.com</a>
<a href=""mailto:dw5.2.22.74@gmail.com"">dw5.2.22.74@gmail.com</a>
<a href=""mailto:dw.5.2.2.274@gmail.com"">dw.5.2.2.274@gmail.com</a>
<a href=""mailto:d.w.5.2.22.74@gmail.com"">d.w.5.2.22.74@gmail.com</a>
<a href=""mailto:dw5.222.74@gmail.com"">dw5.222.74@gmail.com</a>
<a href=""mailto:dw.5.22.274@gmail.com"">dw.5.22.274@gmail.com</a>
<a href=""mailto:dw.5.2.22.7.4@gmail.com"">dw.5.2.22.7.4@gmail.com</a>
<a href=""mailto:dw.5.2.2274@gmail.com"">dw.5.2.2274@gmail.com</a>
<a href=""mailto:dw5.2.2.2.7.4@gmail.com"">dw5.2.2.2.7.4@gmail.com</a>
<a href=""mailto:d.w52.2.2.7.4@gmail.com"">d.w52.2.2.7.4@gmail.com</a>
<a href=""mailto:dw.5.2.22.74@gmail.com"">dw.5.2.22.74@gmail.com</a>
<a href=""mailto:d.w.5.2.2.2.74@gmail.com"">d.w.5.2.2.2.74@gmail.com</a>
<a href=""mailto:dw5.2.22.7.4@gmail.com"">dw5.2.22.7.4@gmail.com</a>
<a href=""mailto:dw.5.2.227.4@gmail.com"">dw.5.2.227.4@gmail.com</a>
<a href=""mailto:d.w.5.22274@gmail.com"">d.w.5.22274@gmail.com</a>
<a href=""mailto:dw5.2.2.2.74@gmail.com"">dw5.2.2.2.74@gmail.com</a>
<a href=""mailto:d.w.5222.7.4@gmail.com"">d.w.5222.7.4@gmail.com</a>
<a href=""mailto:dw.522274@gmail.com"">dw.522274@gmail.com</a>
<a href=""mailto:d.w5.22.274@gmail.com"">d.w5.22.274@gmail.com</a>
<a href=""mailto:d.w.52.22.74@gmail.com"">d.w.52.22.74@gmail.com</a>
<a href=""mailto:dw.5.22.27.4@gmail.com"">dw.5.22.27.4@gmail.com</a>
<a href=""mailto:dw.5.222.7.4@gmail.com"">dw.5.222.7.4@gmail.com</a>
<a href=""mailto:dw.52.22.7.4@gmail.com"">dw.52.22.7.4@gmail.com</a>
<a href=""mailto:d.w52.2.274@gmail.com"">d.w52.2.274@gmail.com</a>
<a href=""mailto:reply@catlettca.com"">reply@catlettca.com</a>
<a href=""mailto:info@catlettca.com"">info@catlettca.com</a>
<a href=""mailto:rev.henryemeka909@gmail.com"">rev.henryemeka909@gmail.com</a>
<a href=""mailto:rev.henryemeka909+10718@gmail.com"">rev.henryemeka909+10718@gmail.com</a>
<a href=""mailto:rev.henryemeka909+31913@gmail.com"">rev.henryemeka909+31913@gmail.com</a>
<a href=""mailto:rev.henryemeka909+18379@gmail.com"">rev.henryemeka909+18379@gmail.com</a>
<a href=""mailto:rev.henryemeka909+17139@gmail.com"">rev.henryemeka909+17139@gmail.com</a>
<a href=""mailto:rev.henryemeka909+6653@gmail.com"">rev.henryemeka909+6653@gmail.com</a>
<a href=""mailto:rev.henryemeka909+12318@gmail.com"">rev.henryemeka909+12318@gmail.com</a>
<a href=""mailto:rev.henryemeka909+18704@gmail.com"">rev.henryemeka909+18704@gmail.com</a>
<a href=""mailto:rev.henryemeka909+23903@gmail.com"">rev.henryemeka909+23903@gmail.com</a>
<a href=""mailto:rev.henryemeka909+9250@gmail.com"">rev.henryemeka909+9250@gmail.com</a>
<a href=""mailto:rev.henryemeka909+22622@gmail.com"">rev.henryemeka909+22622@gmail.com</a>
<a href=""mailto:rev.henryemeka909+5912@gmail.com"">rev.henryemeka909+5912@gmail.com</a>
<a href=""mailto:rev.henryemeka909+7237@gmail.com"">rev.henryemeka909+7237@gmail.com</a>
<a href=""mailto:rev.henryemeka909+18951@gmail.com"">rev.henryemeka909+18951@gmail.com</a>
<a href=""mailto:rev.henryemeka909+28278@gmail.com"">rev.henryemeka909+28278@gmail.com</a>
<a href=""mailto:rev.henryemeka909+5960@gmail.com"">rev.henryemeka909+5960@gmail.com</a>
<a href=""mailto:rev.henryemeka909+22340@gmail.com"">rev.henryemeka909+22340@gmail.com</a>
<a href=""mailto:rev.henryemeka909+13448@gmail.com"">rev.henryemeka909+13448@gmail.com</a>
<a href=""mailto:rev.henryemeka909+14754@gmail.com"">rev.henryemeka909+14754@gmail.com</a>
<a href=""mailto:rev.henryemeka909+26137@gmail.com"">rev.henryemeka909+26137@gmail.com</a>
<a href=""mailto:rev.henryemeka909+31569@gmail.com"">rev.henryemeka909+31569@gmail.com</a>
<a href=""mailto:rev.henryemeka909+1802@gmail.com"">rev.henryemeka909+1802@gmail.com</a>
<a href=""mailto:rev.henryemeka909+15519@gmail.com"">rev.henryemeka909+15519@gmail.com</a>
<a href=""mailto:rev.henryemeka909+6274@gmail.com"">rev.henryemeka909+6274@gmail.com</a>
<a href=""mailto:rev.henryemeka909+13815@gmail.com"">rev.henryemeka909+13815@gmail.com</a>
<a href=""mailto:rev.henryemeka909+13674@gmail.com"">rev.henryemeka909+13674@gmail.com</a>
<a href=""mailto:rev.henryemeka909+11246@gmail.com"">rev.henryemeka909+11246@gmail.com</a>
<a href=""mailto:rev.henryemeka909+256@gmail.com"">rev.henryemeka909+256@gmail.com</a>
<a href=""mailto:rev.henryemeka909+19940@gmail.com"">rev.henryemeka909+19940@gmail.com</a>
<a href=""mailto:rev.henryemeka909+14058@gmail.com"">rev.henryemeka909+14058@gmail.com</a>
<a href=""mailto:rev.henryemeka909+6753@gmail.com"">rev.henryemeka909+6753@gmail.com</a>
<a href=""mailto:rev.henryemeka909+19894@gmail.com"">rev.henryemeka909+19894@gmail.com</a>
<a href=""mailto:rev.henryemeka909+32666@gmail.com"">rev.henryemeka909+32666@gmail.com</a>
<a href=""mailto:rev.henryemeka909+14094@gmail.com"">rev.henryemeka909+14094@gmail.com</a>
<a href=""mailto:rev.henryemeka909+23915@gmail.com"">rev.henryemeka909+23915@gmail.com</a>
<a href=""mailto:rev.henryemeka909+2509@gmail.com"">rev.henryemeka909+2509@gmail.com</a>
<a href=""mailto:rev.henryemeka909+15639@gmail.com"">rev.henryemeka909+15639@gmail.com</a>
<a href=""mailto:rev.henryemeka909+26505@gmail.com"">rev.henryemeka909+26505@gmail.com</a>
<a href=""mailto:rev.henryemeka909+10198@gmail.com"">rev.henryemeka909+10198@gmail.com</a>
<a href=""mailto:rev.henryemeka909+24721@gmail.com"">rev.henryemeka909+24721@gmail.com</a>
<a href=""mailto:rev.henryemeka909+21602@gmail.com"">rev.henryemeka909+21602@gmail.com</a>
<a href=""mailto:rev.henryemeka909+13120@gmail.com"">rev.henryemeka909+13120@gmail.com</a>
<a href=""mailto:rev.henryemeka909+10006@gmail.com"">rev.henryemeka909+10006@gmail.com</a>
<a href=""mailto:rev.henryemeka909+10090@gmail.com"">rev.henryemeka909+10090@gmail.com</a>
<a href=""mailto:rev.henryemeka909+24698@gmail.com"">rev.henryemeka909+24698@gmail.com</a>
<a href=""mailto:rev.henryemeka909+16713@gmail.com"">rev.henryemeka909+16713@gmail.com</a>
<a href=""mailto:rev.henryemeka909+12542@gmail.com"">rev.henryemeka909+12542@gmail.com</a>
<a href=""mailto:rev.henryemeka909+23229@gmail.com"">rev.henryemeka909+23229@gmail.com</a>
<a href=""mailto:rev.henryemeka909+23099@gmail.com"">rev.henryemeka909+23099@gmail.com</a>
<a href=""mailto:rev.henryemeka909+25808@gmail.com"">rev.henryemeka909+25808@gmail.com</a>
<a href=""mailto:rev.henryemeka909+13246@gmail.com"">rev.henryemeka909+13246@gmail.com</a>
<a href=""mailto:rev.henryemeka909+8439@gmail.com"">rev.henryemeka909+8439@gmail.com</a>
<a href=""mailto:rev.henryemeka909+31496@gmail.com"">rev.henryemeka909+31496@gmail.com</a>
<a href=""mailto:rev.henryemeka909+11539@gmail.com"">rev.henryemeka909+11539@gmail.com</a>
<a href=""mailto:rev.henryemeka909+30971@gmail.com"">rev.henryemeka909+30971@gmail.com</a>
<a href=""mailto:rev.henryemeka909+29123@gmail.com"">rev.henryemeka909+29123@gmail.com</a>
<a href=""mailto:rev.henryemeka909+11381@gmail.com"">rev.henryemeka909+11381@gmail.com</a>
<a href=""mailto:rev.henryemeka909+3016@gmail.com"">rev.henryemeka909+3016@gmail.com</a>
<a href=""mailto:rev.henryemeka909+10524@gmail.com"">rev.henryemeka909+10524@gmail.com</a>
<a href=""mailto:rev.henryemeka909+9069@gmail.com"">rev.henryemeka909+9069@gmail.com</a>
<a href=""mailto:rev.henryemeka909+7949@gmail.com"">rev.henryemeka909+7949@gmail.com</a>
<a href=""mailto:rev.henryemeka909+769@gmail.com"">rev.henryemeka909+769@gmail.com</a>
<a href=""mailto:rev.henryemeka909+31593@gmail.com"">rev.henryemeka909+31593@gmail.com</a>
<a href=""mailto:rev.henryemeka909+6794@gmail.com"">rev.henryemeka909+6794@gmail.com</a>
<a href=""mailto:rev.henryemeka909+17028@gmail.com"">rev.henryemeka909+17028@gmail.com</a>
<a href=""mailto:rev.henryemeka909+15371@gmail.com"">rev.henryemeka909+15371@gmail.com</a>
<a href=""mailto:rev.henryemeka909+13649@gmail.com"">rev.henryemeka909+13649@gmail.com</a>
<a href=""mailto:rev.henryemeka909+19623@gmail.com"">rev.henryemeka909+19623@gmail.com</a>
<a href=""mailto:rev.henryemeka909+24792@gmail.com"">rev.henryemeka909+24792@gmail.com</a>
<a href=""mailto:rev.henryemeka909+3328@gmail.com"">rev.henryemeka909+3328@gmail.com</a>
<a href=""mailto:rev.henryemeka909+7889@gmail.com"">rev.henryemeka909+7889@gmail.com</a>
<a href=""mailto:rev.henryemeka909+22745@gmail.com"">rev.henryemeka909+22745@gmail.com</a>
<a href=""mailto:rev.henryemeka909+30480@gmail.com"">rev.henryemeka909+30480@gmail.com</a>
<a href=""mailto:rev.henryemeka909+19552@gmail.com"">rev.henryemeka909+19552@gmail.com</a>
<a href=""mailto:rev.henryemeka909+16257@gmail.com"">rev.henryemeka909+16257@gmail.com</a>
<a href=""mailto:rev.henryemeka909+21878@gmail.com"">rev.henryemeka909+21878@gmail.com</a>
<a href=""mailto:rev.henryemeka909+22452@gmail.com"">rev.henryemeka909+22452@gmail.com</a>
<a href=""mailto:rev.henryemeka909+32402@gmail.com"">rev.henryemeka909+32402@gmail.com</a>
<a href=""mailto:rev.henryemeka909+15379@gmail.com"">rev.henryemeka909+15379@gmail.com</a>
<a href=""mailto:rev.henryemeka909+27705@gmail.com"">rev.henryemeka909+27705@gmail.com</a>
<a href=""mailto:rev.henryemeka909+22510@gmail.com"">rev.henryemeka909+22510@gmail.com</a>
<a href=""mailto:rev.henryemeka909+1299@gmail.com"">rev.henryemeka909+1299@gmail.com</a>
<a href=""mailto:rev.henryemeka909+25961@gmail.com"">rev.henryemeka909+25961@gmail.com</a>
<a href=""mailto:rev.henryemeka909+6315@gmail.com"">rev.henryemeka909+6315@gmail.com</a>
<a href=""mailto:rev.henryemeka909+360@gmail.com"">rev.henryemeka909+360@gmail.com</a>
<a href=""mailto:rev.henryemeka909+28912@gmail.com"">rev.henryemeka909+28912@gmail.com</a>
<a href=""mailto:rev.henryemeka909+5115@gmail.com"">rev.henryemeka909+5115@gmail.com</a>
<a href=""mailto:rev.henryemeka909+4300@gmail.com"">rev.henryemeka909+4300@gmail.com</a>
<a href=""mailto:rev.henryemeka909+21691@gmail.com"">rev.henryemeka909+21691@gmail.com</a>
<a href=""mailto:rev.henryemeka909+18415@gmail.com"">rev.henryemeka909+18415@gmail.com</a>
<a href=""mailto:rev.henryemeka909+19696@gmail.com"">rev.henryemeka909+19696@gmail.com</a>
<a href=""mailto:rev.henryemeka909+20060@gmail.com"">rev.henryemeka909+20060@gmail.com</a>
<a href=""mailto:rev.henryemeka909+23539@gmail.com"">rev.henryemeka909+23539@gmail.com</a>
<a href=""mailto:rev.henryemeka909+16590@gmail.com"">rev.henryemeka909+16590@gmail.com</a>
<a href=""mailto:rev.henryemeka909+4070@gmail.com"">rev.henryemeka909+4070@gmail.com</a>
<a href=""mailto:rev.henryemeka909+14536@gmail.com"">rev.henryemeka909+14536@gmail.com</a>
<a href=""mailto:rev.henryemeka909+18142@gmail.com"">rev.henryemeka909+18142@gmail.com</a>
<a href=""mailto:rev.henryemeka909+25128@gmail.com"">rev.henryemeka909+25128@gmail.com</a>
<a href=""mailto:rev.henryemeka909+22224@gmail.com"">rev.henryemeka909+22224@gmail.com</a>
<a href=""mailto:rev.henryemeka909+14533@gmail.com"">rev.henryemeka909+14533@gmail.com</a>
<a href=""mailto:rev.henryemeka909+10371@gmail.com"">rev.henryemeka909+10371@gmail.com</a>
<a href=""mailto:papadopouloschristos200@gmail.com"">papadopouloschristos200@gmail.com</a>
<a href=""mailto:papadopouloschristos200+6490@gmail.com"">papadopouloschristos200+6490@gmail.com</a>
<a href=""mailto:papadopouloschristos200+20717@gmail.com"">papadopouloschristos200+20717@gmail.com</a>
<a href=""mailto:papadopouloschristos200+18934@gmail.com"">papadopouloschristos200+18934@gmail.com</a>
<a href=""mailto:papadopouloschristos200+9297@gmail.com"">papadopouloschristos200+9297@gmail.com</a>
<a href=""mailto:papadopouloschristos200+29626@gmail.com"">papadopouloschristos200+29626@gmail.com</a>
<a href=""mailto:papadopouloschristos200+698@gmail.com"">papadopouloschristos200+698@gmail.com</a>
<a href=""mailto:papadopouloschristos200+5154@gmail.com"">papadopouloschristos200+5154@gmail.com</a>
<a href=""mailto:papadopouloschristos200+7411@gmail.com"">papadopouloschristos200+7411@gmail.com</a>
<a href=""mailto:papadopouloschristos200+25562@gmail.com"">papadopouloschristos200+25562@gmail.com</a>
<a href=""mailto:papadopouloschristos200+32412@gmail.com"">papadopouloschristos200+32412@gmail.com</a>
<a href=""mailto:papadopouloschristos200+24609@gmail.com"">papadopouloschristos200+24609@gmail.com</a>
<a href=""mailto:papadopouloschristos200+9045@gmail.com"">papadopouloschristos200+9045@gmail.com</a>
<a href=""mailto:papadopouloschristos200+1299@gmail.com"">papadopouloschristos200+1299@gmail.com</a>
<a href=""mailto:papadopouloschristos200+8975@gmail.com"">papadopouloschristos200+8975@gmail.com</a>
<a href=""mailto:papadopouloschristos200+13425@gmail.com"">papadopouloschristos200+13425@gmail.com</a>
<a href=""mailto:papadopouloschristos200+7685@gmail.com"">papadopouloschristos200+7685@gmail.com</a>
<a href=""mailto:papadopouloschristos200+17223@gmail.com"">papadopouloschristos200+17223@gmail.com</a>
<a href=""mailto:papadopouloschristos200+1321@gmail.com"">papadopouloschristos200+1321@gmail.com</a>
<a href=""mailto:papadopouloschristos200+19317@gmail.com"">papadopouloschristos200+19317@gmail.com</a>
<a href=""mailto:papadopouloschristos200+30676@gmail.com"">papadopouloschristos200+30676@gmail.com</a>
<a href=""mailto:papadopouloschristos200+20792@gmail.com"">papadopouloschristos200+20792@gmail.com</a>
<a href=""mailto:papadopouloschristos200+32383@gmail.com"">papadopouloschristos200+32383@gmail.com</a>
<a href=""mailto:papadopouloschristos200+22237@gmail.com"">papadopouloschristos200+22237@gmail.com</a>
<a href=""mailto:papadopouloschristos200+17769@gmail.com"">papadopouloschristos200+17769@gmail.com</a>
<a href=""mailto:papadopouloschristos200+17017@gmail.com"">papadopouloschristos200+17017@gmail.com</a>
<a href=""mailto:papadopouloschristos200+16655@gmail.com"">papadopouloschristos200+16655@gmail.com</a>
<a href=""mailto:papadopouloschristos200+14200@gmail.com"">papadopouloschristos200+14200@gmail.com</a>
<a href=""mailto:papadopouloschristos200+12725@gmail.com"">papadopouloschristos200+12725@gmail.com</a>
<a href=""mailto:papadopouloschristos200+7718@gmail.com"">papadopouloschristos200+7718@gmail.com</a>
<a href=""mailto:papadopouloschristos200+3940@gmail.com"">papadopouloschristos200+3940@gmail.com</a>
<a href=""mailto:papadopouloschristos200+20700@gmail.com"">papadopouloschristos200+20700@gmail.com</a>
<a href=""mailto:papadopouloschristos200+4742@gmail.com"">papadopouloschristos200+4742@gmail.com</a>
<a href=""mailto:papadopouloschristos200+1653@gmail.com"">papadopouloschristos200+1653@gmail.com</a>
<a href=""mailto:papadopouloschristos200+4577@gmail.com"">papadopouloschristos200+4577@gmail.com</a>
<a href=""mailto:papadopouloschristos200+30597@gmail.com"">papadopouloschristos200+30597@gmail.com</a>
<a href=""mailto:papadopouloschristos200+6352@gmail.com"">papadopouloschristos200+6352@gmail.com</a>
<a href=""mailto:papadopouloschristos200+2357@gmail.com"">papadopouloschristos200+2357@gmail.com</a>
<a href=""mailto:papadopouloschristos200+18676@gmail.com"">papadopouloschristos200+18676@gmail.com</a>
<a href=""mailto:papadopouloschristos200+601@gmail.com"">papadopouloschristos200+601@gmail.com</a>
<a href=""mailto:papadopouloschristos200+20257@gmail.com"">papadopouloschristos200+20257@gmail.com</a>
<a href=""mailto:papadopouloschristos200+3163@gmail.com"">papadopouloschristos200+3163@gmail.com</a>
<a href=""mailto:papadopouloschristos200+17832@gmail.com"">papadopouloschristos200+17832@gmail.com</a>
<a href=""mailto:papadopouloschristos200+3476@gmail.com"">papadopouloschristos200+3476@gmail.com</a>
<a href=""mailto:papadopouloschristos200+26299@gmail.com"">papadopouloschristos200+26299@gmail.com</a>
<a href=""mailto:papadopouloschristos200+22332@gmail.com"">papadopouloschristos200+22332@gmail.com</a>
<a href=""mailto:papadopouloschristos200+1342@gmail.com"">papadopouloschristos200+1342@gmail.com</a>
<a href=""mailto:papadopouloschristos200+12842@gmail.com"">papadopouloschristos200+12842@gmail.com</a>
<a href=""mailto:papadopouloschristos200+31351@gmail.com"">papadopouloschristos200+31351@gmail.com</a>
<a href=""mailto:papadopouloschristos200+6006@gmail.com"">papadopouloschristos200+6006@gmail.com</a>
<a href=""mailto:papadopouloschristos200+8048@gmail.com"">papadopouloschristos200+8048@gmail.com</a>
<a href=""mailto:papadopouloschristos200+4139@gmail.com"">papadopouloschristos200+4139@gmail.com</a>
<a href=""mailto:papadopouloschristos200+7176@gmail.com"">papadopouloschristos200+7176@gmail.com</a>
<a href=""mailto:papadopouloschristos200+32335@gmail.com"">papadopouloschristos200+32335@gmail.com</a>
<a href=""mailto:papadopouloschristos200+3981@gmail.com"">papadopouloschristos200+3981@gmail.com</a>
<a href=""mailto:papadopouloschristos200+6483@gmail.com"">papadopouloschristos200+6483@gmail.com</a>
<a href=""mailto:papadopouloschristos200+4520@gmail.com"">papadopouloschristos200+4520@gmail.com</a>
<a href=""mailto:papadopouloschristos200+9515@gmail.com"">papadopouloschristos200+9515@gmail.com</a>
<a href=""mailto:papadopouloschristos200+649@gmail.com"">papadopouloschristos200+649@gmail.com</a>
<a href=""mailto:papadopouloschristos200+15758@gmail.com"">papadopouloschristos200+15758@gmail.com</a>
<a href=""mailto:papadopouloschristos200+23222@gmail.com"">papadopouloschristos200+23222@gmail.com</a>
<a href=""mailto:papadopouloschristos200+3215@gmail.com"">papadopouloschristos200+3215@gmail.com</a>
<a href=""mailto:papadopouloschristos200+4351@gmail.com"">papadopouloschristos200+4351@gmail.com</a>
<a href=""mailto:papadopouloschristos200+27836@gmail.com"">papadopouloschristos200+27836@gmail.com</a>
<a href=""mailto:papadopouloschristos200+28289@gmail.com"">papadopouloschristos200+28289@gmail.com</a>
<a href=""mailto:papadopouloschristos200+13470@gmail.com"">papadopouloschristos200+13470@gmail.com</a>
<a href=""mailto:papadopouloschristos200+29580@gmail.com"">papadopouloschristos200+29580@gmail.com</a>
<a href=""mailto:papadopouloschristos200+13377@gmail.com"">papadopouloschristos200+13377@gmail.com</a>
<a href=""mailto:papadopouloschristos200+15312@gmail.com"">papadopouloschristos200+15312@gmail.com</a>
<a href=""mailto:papadopouloschristos200+22250@gmail.com"">papadopouloschristos200+22250@gmail.com</a>
<a href=""mailto:papadopouloschristos200+9459@gmail.com"">papadopouloschristos200+9459@gmail.com</a>
<a href=""mailto:papadopouloschristos200+6643@gmail.com"">papadopouloschristos200+6643@gmail.com</a>
<a href=""mailto:papadopouloschristos200+153@gmail.com"">papadopouloschristos200+153@gmail.com</a>
<a href=""mailto:papadopouloschristos200+21511@gmail.com"">papadopouloschristos200+21511@gmail.com</a>
<a href=""mailto:papadopouloschristos200+16398@gmail.com"">papadopouloschristos200+16398@gmail.com</a>
<a href=""mailto:papadopouloschristos200+30573@gmail.com"">papadopouloschristos200+30573@gmail.com</a>
<a href=""mailto:papadopouloschristos200+30379@gmail.com"">papadopouloschristos200+30379@gmail.com</a>
<a href=""mailto:papadopouloschristos200+29676@gmail.com"">papadopouloschristos200+29676@gmail.com</a>
<a href=""mailto:papadopouloschristos200+11947@gmail.com"">papadopouloschristos200+11947@gmail.com</a>
<a href=""mailto:papadopouloschristos200+14516@gmail.com"">papadopouloschristos200+14516@gmail.com</a>
<a href=""mailto:papadopouloschristos200+5455@gmail.com"">papadopouloschristos200+5455@gmail.com</a>
<a href=""mailto:papadopouloschristos200+7392@gmail.com"">papadopouloschristos200+7392@gmail.com</a>
<a href=""mailto:papadopouloschristos200+2544@gmail.com"">papadopouloschristos200+2544@gmail.com</a>
<a href=""mailto:papadopouloschristos200+31132@gmail.com"">papadopouloschristos200+31132@gmail.com</a>
<a href=""mailto:papadopouloschristos200+17006@gmail.com"">papadopouloschristos200+17006@gmail.com</a>
<a href=""mailto:papadopouloschristos200+21741@gmail.com"">papadopouloschristos200+21741@gmail.com</a>
<a href=""mailto:papadopouloschristos200+16111@gmail.com"">papadopouloschristos200+16111@gmail.com</a>
<a href=""mailto:papadopouloschristos200+22033@gmail.com"">papadopouloschristos200+22033@gmail.com</a>
<a href=""mailto:papadopouloschristos200+2326@gmail.com"">papadopouloschristos200+2326@gmail.com</a>
<a href=""mailto:papadopouloschristos200+7138@gmail.com"">papadopouloschristos200+7138@gmail.com</a>
<a href=""mailto:papadopouloschristos200+4161@gmail.com"">papadopouloschristos200+4161@gmail.com</a>
<a href=""mailto:papadopouloschristos200+32764@gmail.com"">papadopouloschristos200+32764@gmail.com</a>
<a href=""mailto:papadopouloschristos200+8915@gmail.com"">papadopouloschristos200+8915@gmail.com</a>
<a href=""mailto:papadopouloschristos200+21658@gmail.com"">papadopouloschristos200+21658@gmail.com</a>
<a href=""mailto:papadopouloschristos200+8116@gmail.com"">papadopouloschristos200+8116@gmail.com</a>
<a href=""mailto:papadopouloschristos200+20448@gmail.com"">papadopouloschristos200+20448@gmail.com</a>
<a href=""mailto:papadopouloschristos200+16391@gmail.com"">papadopouloschristos200+16391@gmail.com</a>
<a href=""mailto:papadopouloschristos200+6323@gmail.com"">papadopouloschristos200+6323@gmail.com</a>
<a href=""mailto:papadopouloschristos200+19097@gmail.com"">papadopouloschristos200+19097@gmail.com</a>
<a href=""mailto:papadopouloschristos200+16647@gmail.com"">papadopouloschristos200+16647@gmail.com</a>
<a href=""mailto:papadopouloschristos200+1444@gmail.com"">papadopouloschristos200+1444@gmail.com</a>
<a href=""mailto:email19uk@gmail.com"">email19uk@gmail.com</a>
<a href=""mailto:e.mai.l.1.9uk@gmail.com"">e.mai.l.1.9uk@gmail.com</a>
<a href=""mailto:em.ail1.9u.k@gmail.com"">em.ail1.9u.k@gmail.com</a>
<a href=""mailto:email19.uk@gmail.com"">email19.uk@gmail.com</a>
<a href=""mailto:em.a.i.l.1.9uk@gmail.com"">em.a.i.l.1.9uk@gmail.com</a>
<a href=""mailto:e.m.ai.l.19u.k@gmail.com"">e.m.ai.l.19u.k@gmail.com</a>
<a href=""mailto:e.ma.il1.9.uk@gmail.com"">e.ma.il1.9.uk@gmail.com</a>
<a href=""mailto:e.mail19uk@gmail.com"">e.mail19uk@gmail.com</a>
<a href=""mailto:em.ail.19.u.k@gmail.com"">em.ail.19.u.k@gmail.com</a>
<a href=""mailto:e.m.ai.l.19uk@gmail.com"">e.m.ai.l.19uk@gmail.com</a>
<a href=""mailto:e.m.ail1.9.u.k@gmail.com"">e.m.ail1.9.u.k@gmail.com</a>
<a href=""mailto:em.a.il.1.9.u.k@gmail.com"">em.a.il.1.9.u.k@gmail.com</a>
<a href=""mailto:e.m.a.i.l1.9u.k@gmail.com"">e.m.a.i.l1.9u.k@gmail.com</a>
<a href=""mailto:ema.i.l19.u.k@gmail.com"">ema.i.l19.u.k@gmail.com</a>
<a href=""mailto:ema.i.l.1.9.u.k@gmail.com"">ema.i.l.1.9.u.k@gmail.com</a>
<a href=""mailto:e.m.ai.l.1.9.u.k@gmail.com"">e.m.ai.l.1.9.u.k@gmail.com</a>
<a href=""mailto:e.ma.il.19uk@gmail.com"">e.ma.il.19uk@gmail.com</a>
<a href=""mailto:em.ail19uk@gmail.com"">em.ail19uk@gmail.com</a>
<a href=""mailto:email19u.k@gmail.com"">email19u.k@gmail.com</a>
<a href=""mailto:em.a.i.l.1.9u.k@gmail.com"">em.a.i.l.1.9u.k@gmail.com</a>
<a href=""mailto:e.m.a.il.19u.k@gmail.com"">e.m.a.il.19u.k@gmail.com</a>
<a href=""mailto:ema.il.19uk@gmail.com"">ema.il.19uk@gmail.com</a>
<a href=""mailto:e.m.ail.1.9.uk@gmail.com"">e.m.ail.1.9.uk@gmail.com</a>
<a href=""mailto:e.ma.il1.9u.k@gmail.com"">e.ma.il1.9u.k@gmail.com</a>
<a href=""mailto:em.ai.l.1.9.uk@gmail.com"">em.ai.l.1.9.uk@gmail.com</a>
<a href=""mailto:e.m.a.il.1.9uk@gmail.com"">e.m.a.il.1.9uk@gmail.com</a>
<a href=""mailto:e.m.a.i.l.19.u.k@gmail.com"">e.m.a.i.l.19.u.k@gmail.com</a>
<a href=""mailto:e.mai.l1.9.uk@gmail.com"">e.mai.l1.9.uk@gmail.com</a>
<a href=""mailto:e.m.a.i.l19uk@gmail.com"">e.m.a.i.l19uk@gmail.com</a>
<a href=""mailto:e.ma.i.l1.9uk@gmail.com"">e.ma.i.l1.9uk@gmail.com</a>
<a href=""mailto:email.19u.k@gmail.com"">email.19u.k@gmail.com</a>
<a href=""mailto:e.m.a.i.l19.u.k@gmail.com"">e.m.a.i.l19.u.k@gmail.com</a>
<a href=""mailto:ema.il.1.9.u.k@gmail.com"">ema.il.1.9.u.k@gmail.com</a>
<a href=""mailto:e.m.a.il.1.9.u.k@gmail.com"">e.m.a.il.1.9.u.k@gmail.com</a>
<a href=""mailto:e.m.a.il1.9.uk@gmail.com"">e.m.a.il1.9.uk@gmail.com</a>
<a href=""mailto:e.m.ai.l19.u.k@gmail.com"">e.m.ai.l19.u.k@gmail.com</a>
<a href=""mailto:em.ai.l.1.9u.k@gmail.com"">em.ai.l.1.9u.k@gmail.com</a>
<a href=""mailto:em.ai.l.19.u.k@gmail.com"">em.ai.l.19.u.k@gmail.com</a>
<a href=""mailto:em.ail1.9.uk@gmail.com"">em.ail1.9.uk@gmail.com</a>
<a href=""mailto:ema.il1.9u.k@gmail.com"">ema.il1.9u.k@gmail.com</a>
<a href=""mailto:e.m.ail.1.9u.k@gmail.com"">e.m.ail.1.9u.k@gmail.com</a>
<a href=""mailto:e.m.ail.19u.k@gmail.com"">e.m.ail.19u.k@gmail.com</a>
<a href=""mailto:em.ail.19.uk@gmail.com"">em.ail.19.uk@gmail.com</a>
<a href=""mailto:e.m.ail.19.uk@gmail.com"">e.m.ail.19.uk@gmail.com</a>
<a href=""mailto:e.mai.l19uk@gmail.com"">e.mai.l19uk@gmail.com</a>
<a href=""mailto:em.a.il19u.k@gmail.com"">em.a.il19u.k@gmail.com</a>
<a href=""mailto:em.a.il19.uk@gmail.com"">em.a.il19.uk@gmail.com</a>
<a href=""mailto:e.ma.i.l.1.9.uk@gmail.com"">e.ma.i.l.1.9.uk@gmail.com</a>
<a href=""mailto:e.m.a.i.l19.uk@gmail.com"">e.m.a.i.l19.uk@gmail.com</a>
<a href=""mailto:e.mail1.9uk@gmail.com"">e.mail1.9uk@gmail.com</a>
<a href=""mailto:e.mail1.9.uk@gmail.com"">e.mail1.9.uk@gmail.com</a>
<a href=""mailto:em.a.i.l.1.9.uk@gmail.com"">em.a.i.l.1.9.uk@gmail.com</a>
<a href=""mailto:e.m.ai.l19.uk@gmail.com"">e.m.ai.l19.uk@gmail.com</a>
<a href=""mailto:e.ma.i.l1.9.uk@gmail.com"">e.ma.i.l1.9.uk@gmail.com</a>
<a href=""mailto:e.m.a.il.19.u.k@gmail.com"">e.m.a.il.19.u.k@gmail.com</a>
<a href=""mailto:e.ma.il.1.9.uk@gmail.com"">e.ma.il.1.9.uk@gmail.com</a>
<a href=""mailto:em.a.i.l19u.k@gmail.com"">em.a.i.l19u.k@gmail.com</a>
<a href=""mailto:emai.l.1.9.uk@gmail.com"">emai.l.1.9.uk@gmail.com</a>
<a href=""mailto:em.ai.l19uk@gmail.com"">em.ai.l19uk@gmail.com</a>
<a href=""mailto:e.m.a.i.l1.9.u.k@gmail.com"">e.m.a.i.l1.9.u.k@gmail.com</a>
<a href=""mailto:em.a.i.l1.9u.k@gmail.com"">em.a.i.l1.9u.k@gmail.com</a>
<a href=""mailto:em.ail.1.9.uk@gmail.com"">em.ail.1.9.uk@gmail.com</a>
<a href=""mailto:em.a.i.l.1.9.u.k@gmail.com"">em.a.i.l.1.9.u.k@gmail.com</a>
<a href=""mailto:ema.i.l1.9.u.k@gmail.com"">ema.i.l1.9.u.k@gmail.com</a>
<a href=""mailto:em.ail.1.9u.k@gmail.com"">em.ail.1.9u.k@gmail.com</a>
<a href=""mailto:e.ma.i.l19u.k@gmail.com"">e.ma.i.l19u.k@gmail.com</a>
<a href=""mailto:emai.l.19.u.k@gmail.com"">emai.l.19.u.k@gmail.com</a>
<a href=""mailto:ema.il.1.9uk@gmail.com"">ema.il.1.9uk@gmail.com</a>
<a href=""mailto:e.m.a.il1.9.u.k@gmail.com"">e.m.a.il1.9.u.k@gmail.com</a>
<a href=""mailto:em.a.i.l.19uk@gmail.com"">em.a.i.l.19uk@gmail.com</a>
<a href=""mailto:ema.i.l1.9u.k@gmail.com"">ema.i.l1.9u.k@gmail.com</a>
<a href=""mailto:em.ai.l19u.k@gmail.com"">em.ai.l19u.k@gmail.com</a>
<a href=""mailto:e.ma.i.l.19uk@gmail.com"">e.ma.i.l.19uk@gmail.com</a>
<a href=""mailto:em.a.il.19u.k@gmail.com"">em.a.il.19u.k@gmail.com</a>
<a href=""mailto:em.a.il1.9u.k@gmail.com"">em.a.il1.9u.k@gmail.com</a>
<a href=""mailto:e.ma.il.19.u.k@gmail.com"">e.ma.il.19.u.k@gmail.com</a>
<a href=""mailto:e.m.ail19u.k@gmail.com"">e.m.ail19u.k@gmail.com</a>
<a href=""mailto:em.ai.l1.9u.k@gmail.com"">em.ai.l1.9u.k@gmail.com</a>
<a href=""mailto:e.ma.i.l.1.9.u.k@gmail.com"">e.ma.i.l.1.9.u.k@gmail.com</a>
<a href=""mailto:e.m.a.i.l.19.uk@gmail.com"">e.m.a.i.l.19.uk@gmail.com</a>
<a href=""mailto:email.1.9.u.k@gmail.com"">email.1.9.u.k@gmail.com</a>
<a href=""mailto:e.mail.19uk@gmail.com"">e.mail.19uk@gmail.com</a>
<a href=""mailto:emai.l19.uk@gmail.com"">emai.l19.uk@gmail.com</a>
<a href=""mailto:em.a.i.l19uk@gmail.com"">em.a.i.l19uk@gmail.com</a>
<a href=""mailto:emai.l.19uk@gmail.com"">emai.l.19uk@gmail.com</a>
<a href=""mailto:em.ail.19uk@gmail.com"">em.ail.19uk@gmail.com</a>
<a href=""mailto:e.mail.19.u.k@gmail.com"">e.mail.19.u.k@gmail.com</a>
<a href=""mailto:ema.i.l19uk@gmail.com"">ema.i.l19uk@gmail.com</a>
<a href=""mailto:ema.il1.9.uk@gmail.com"">ema.il1.9.uk@gmail.com</a>
<a href=""mailto:e.mail.1.9.uk@gmail.com"">e.mail.1.9.uk@gmail.com</a>
<a href=""mailto:e.ma.il19u.k@gmail.com"">e.ma.il19u.k@gmail.com</a>
<a href=""mailto:e.mail.1.9uk@gmail.com"">e.mail.1.9uk@gmail.com</a>
<a href=""mailto:em.a.i.l.19u.k@gmail.com"">em.a.i.l.19u.k@gmail.com</a>
<a href=""mailto:em.a.il1.9.u.k@gmail.com"">em.a.il1.9.u.k@gmail.com</a>
<a href=""mailto:ema.il19.uk@gmail.com"">ema.il19.uk@gmail.com</a>
<a href=""mailto:emai.l19uk@gmail.com"">emai.l19uk@gmail.com</a>
<a href=""mailto:em.ai.l.1.9.u.k@gmail.com"">em.ai.l.1.9.u.k@gmail.com</a>
<a href=""mailto:em.a.il.1.9u.k@gmail.com"">em.a.il.1.9u.k@gmail.com</a>
<a href=""mailto:ema.il1.9uk@gmail.com"">ema.il1.9uk@gmail.com</a>
<a href=""mailto:e.m.a.i.l.19u.k@gmail.com"">e.m.a.i.l.19u.k@gmail.com</a>
<a href=""mailto:e.m.ai.l.19.u.k@gmail.com"">e.m.ai.l.19.u.k@gmail.com</a>
<a href=""mailto:em.ai.l19.u.k@gmail.com"">em.ai.l19.u.k@gmail.com</a>
<a href=""mailto:em.a.i.l.19.uk@gmail.com"">em.a.i.l.19.uk@gmail.com</a>
<a href=""mailto:e.mail1.9u.k@gmail.com"">e.mail1.9u.k@gmail.com</a>
<a href=""mailto:em.a.il19.u.k@gmail.com"">em.a.il19.u.k@gmail.com</a>
<a href=""mailto:e.m.ai.l19u.k@gmail.com"">e.m.ai.l19u.k@gmail.com</a>
<a href=""mailto:e.m.ai.l1.9.uk@gmail.com"">e.m.ai.l1.9.uk@gmail.com</a>
<a href=""mailto:e.mail1.9.u.k@gmail.com"">e.mail1.9.u.k@gmail.com</a>
<a href=""mailto:email1.9.uk@gmail.com"">email1.9.uk@gmail.com</a>
<a href=""mailto:emai.l.1.9.u.k@gmail.com"">emai.l.1.9.u.k@gmail.com</a>
<a href=""mailto:e.ma.i.l19uk@gmail.com"">e.ma.i.l19uk@gmail.com</a>
<a href=""mailto:e.m.a.i.l1.9uk@gmail.com"">e.m.a.i.l1.9uk@gmail.com</a>
<a href=""mailto:e.m.ai.l.1.9u.k@gmail.com"">e.m.ai.l.1.9u.k@gmail.com</a>
<a href=""mailto:em.ai.l.19uk@gmail.com"">em.ai.l.19uk@gmail.com</a>
<a href=""mailto:em.ai.l1.9.uk@gmail.com"">em.ai.l1.9.uk@gmail.com</a>
<a href=""mailto:em.a.il.1.9uk@gmail.com"">em.a.il.1.9uk@gmail.com</a>
<a href=""mailto:em.a.i.l19.u.k@gmail.com"">em.a.i.l19.u.k@gmail.com</a>
<a href=""mailto:e.mail19.u.k@gmail.com"">e.mail19.u.k@gmail.com</a>
<a href=""mailto:em.ai.l.1.9uk@gmail.com"">em.ai.l.1.9uk@gmail.com</a>
<a href=""mailto:e.mai.l.1.9.uk@gmail.com"">e.mai.l.1.9.uk@gmail.com</a>
<a href=""mailto:ema.il.19.u.k@gmail.com"">ema.il.19.u.k@gmail.com</a>
<a href=""mailto:emai.l1.9.u.k@gmail.com"">emai.l1.9.u.k@gmail.com</a>
<a href=""mailto:em.ail19u.k@gmail.com"">em.ail19u.k@gmail.com</a>
<a href=""mailto:e.m.a.i.l19u.k@gmail.com"">e.m.a.i.l19u.k@gmail.com</a>
<a href=""mailto:e.ma.il1.9.u.k@gmail.com"">e.ma.il1.9.u.k@gmail.com</a>
<a href=""mailto:email.19.u.k@gmail.com"">email.19.u.k@gmail.com</a>
<a href=""mailto:em.a.il.1.9.uk@gmail.com"">em.a.il.1.9.uk@gmail.com</a>
<a href=""mailto:e.m.ail.19uk@gmail.com"">e.m.ail.19uk@gmail.com</a>
<a href=""mailto:email.1.9.uk@gmail.com"">email.1.9.uk@gmail.com</a>
<a href=""mailto:e.ma.i.l.1.9uk@gmail.com"">e.ma.i.l.1.9uk@gmail.com</a>
<a href=""mailto:e.m.ail19.uk@gmail.com"">e.m.ail19.uk@gmail.com</a>
<a href=""mailto:e.mai.l.19uk@gmail.com"">e.mai.l.19uk@gmail.com</a>
<a href=""mailto:em.a.il19uk@gmail.com"">em.a.il19uk@gmail.com</a>
<a href=""mailto:em.a.i.l1.9.uk@gmail.com"">em.a.i.l1.9.uk@gmail.com</a>
<a href=""mailto:em.ai.l1.9uk@gmail.com"">em.ai.l1.9uk@gmail.com</a>
<a href=""mailto:em.ail1.9.u.k@gmail.com"">em.ail1.9.u.k@gmail.com</a>
<a href=""mailto:ema.il1.9.u.k@gmail.com"">ema.il1.9.u.k@gmail.com</a>
<a href=""mailto:em.a.il.19.uk@gmail.com"">em.a.il.19.uk@gmail.com</a>
<a href=""mailto:em.ail1.9uk@gmail.com"">em.ail1.9uk@gmail.com</a>
<a href=""mailto:em.a.i.l1.9uk@gmail.com"">em.a.i.l1.9uk@gmail.com</a>
<a href=""mailto:e.ma.i.l19.uk@gmail.com"">e.ma.i.l19.uk@gmail.com</a>
<a href=""mailto:e.m.a.i.l1.9.uk@gmail.com"">e.m.a.i.l1.9.uk@gmail.com</a>
<a href=""mailto:e.ma.i.l1.9.u.k@gmail.com"">e.ma.i.l1.9.u.k@gmail.com</a>
<a href=""mailto:em.ail.1.9uk@gmail.com"">em.ail.1.9uk@gmail.com</a>
<a href=""mailto:emai.l.1.9u.k@gmail.com"">emai.l.1.9u.k@gmail.com</a>
<a href=""mailto:e.m.ail.1.9.u.k@gmail.com"">e.m.ail.1.9.u.k@gmail.com</a>
<a href=""mailto:e.mai.l19u.k@gmail.com"">e.mai.l19u.k@gmail.com</a>
<a href=""mailto:ema.il.19.uk@gmail.com"">ema.il.19.uk@gmail.com</a>
<a href=""mailto:em.a.il.19uk@gmail.com"">em.a.il.19uk@gmail.com</a>
<a href=""mailto:e.mai.l19.uk@gmail.com"">e.mai.l19.uk@gmail.com</a>
<a href=""mailto:e.m.ai.l1.9.u.k@gmail.com"">e.m.ai.l1.9.u.k@gmail.com</a>
<a href=""mailto:e.ma.i.l.1.9u.k@gmail.com"">e.ma.i.l.1.9u.k@gmail.com</a>
<a href=""mailto:ema.il.19u.k@gmail.com"">ema.il.19u.k@gmail.com</a>
<a href=""mailto:e.m.a.il1.9uk@gmail.com"">e.m.a.il1.9uk@gmail.com</a>
<a href=""mailto:e.ma.il.1.9.u.k@gmail.com"">e.ma.il.1.9.u.k@gmail.com</a>
<a href=""mailto:e.mai.l.1.9.u.k@gmail.com"">e.mai.l.1.9.u.k@gmail.com</a>
<a href=""mailto:em.a.il1.9.uk@gmail.com"">em.a.il1.9.uk@gmail.com</a>
<a href=""mailto:em.ail19.uk@gmail.com"">em.ail19.uk@gmail.com</a>
<a href=""mailto:e.ma.il19.uk@gmail.com"">e.ma.il19.uk@gmail.com</a>
<a href=""mailto:emai.l.19u.k@gmail.com"">emai.l.19u.k@gmail.com</a>
<a href=""mailto:e.m.a.il19uk@gmail.com"">e.m.a.il19uk@gmail.com</a>
<a href=""mailto:em.a.il.19.u.k@gmail.com"">em.a.il.19.u.k@gmail.com</a>
<a href=""mailto:emai.l.1.9uk@gmail.com"">emai.l.1.9uk@gmail.com</a>
<a href=""mailto:e.m.a.il.19.uk@gmail.com"">e.m.a.il.19.uk@gmail.com</a>
<a href=""mailto:em.ai.l19.uk@gmail.com"">em.ai.l19.uk@gmail.com</a>
<a href=""mailto:e.m.a.i.l.1.9.u.k@gmail.com"">e.m.a.i.l.1.9.u.k@gmail.com</a>
<a href=""mailto:e.mail.19.uk@gmail.com"">e.mail.19.uk@gmail.com</a>
<a href=""mailto:e.mai.l19.u.k@gmail.com"">e.mai.l19.u.k@gmail.com</a>
<a href=""mailto:e.m.ail.19.u.k@gmail.com"">e.m.ail.19.u.k@gmail.com</a>
<a href=""mailto:e.m.ail1.9.uk@gmail.com"">e.m.ail1.9.uk@gmail.com</a>
<a href=""mailto:email1.9u.k@gmail.com"">email1.9u.k@gmail.com</a>
<a href=""mailto:em.ail.19u.k@gmail.com"">em.ail.19u.k@gmail.com</a>
<a href=""mailto:e.ma.il.1.9u.k@gmail.com"">e.ma.il.1.9u.k@gmail.com</a>
<a href=""mailto:e.m.ai.l.1.9.uk@gmail.com"">e.m.ai.l.1.9.uk@gmail.com</a>
<a href=""mailto:ema.i.l.19u.k@gmail.com"">ema.i.l.19u.k@gmail.com</a>
<a href=""mailto:e.m.a.il19.uk@gmail.com"">e.m.a.il19.uk@gmail.com</a>
<a href=""mailto:emai.l1.9.uk@gmail.com"">emai.l1.9.uk@gmail.com</a>
<a href=""mailto:e.mai.l.19.uk@gmail.com"">e.mai.l.19.uk@gmail.com</a>
<a href=""mailto:e.m.ai.l.1.9uk@gmail.com"">e.m.ai.l.1.9uk@gmail.com</a>
<a href=""mailto:ema.il.1.9.uk@gmail.com"">ema.il.1.9.uk@gmail.com</a>
<a href=""mailto:ema.i.l.1.9uk@gmail.com"">ema.i.l.1.9uk@gmail.com</a>
<a href=""mailto:ema.i.l.19.u.k@gmail.com"">ema.i.l.19.u.k@gmail.com</a>
<a href=""mailto:e.mai.l.19u.k@gmail.com"">e.mai.l.19u.k@gmail.com</a>
<a href=""mailto:e.mai.l1.9u.k@gmail.com"">e.mai.l1.9u.k@gmail.com</a>
<a href=""mailto:e.mai.l1.9uk@gmail.com"">e.mai.l1.9uk@gmail.com</a>
<a href=""mailto:email19.u.k@gmail.com"">email19.u.k@gmail.com</a>
<a href=""mailto:ema.i.l.19.uk@gmail.com"">ema.i.l.19.uk@gmail.com</a>
<a href=""mailto:em.a.i.l1.9.u.k@gmail.com"">em.a.i.l1.9.u.k@gmail.com</a>
<a href=""mailto:email.19uk@gmail.com"">email.19uk@gmail.com</a>
<a href=""mailto:e.m.ail1.9u.k@gmail.com"">e.m.ail1.9u.k@gmail.com</a>
<a href=""mailto:emai.l1.9u.k@gmail.com"">emai.l1.9u.k@gmail.com</a>
<a href=""mailto:e.m.ai.l.19.uk@gmail.com"">e.m.ai.l.19.uk@gmail.com</a>
<a href=""mailto:e.m.ai.l1.9uk@gmail.com"">e.m.ai.l1.9uk@gmail.com</a>
<a href=""mailto:ema.il.1.9u.k@gmail.com"">ema.il.1.9u.k@gmail.com</a>
<a href=""mailto:e.m.a.il19.u.k@gmail.com"">e.m.a.il19.u.k@gmail.com</a>
<a href=""mailto:emai.l19.u.k@gmail.com"">emai.l19.u.k@gmail.com</a>
<a href=""mailto:e.m.ail.1.9uk@gmail.com"">e.m.ail.1.9uk@gmail.com</a>
<a href=""mailto:emai.l.19.uk@gmail.com"">emai.l.19.uk@gmail.com</a>
<a href=""mailto:e.m.a.il19u.k@gmail.com"">e.m.a.il19u.k@gmail.com</a>
<a href=""mailto:em.ai.l.19.uk@gmail.com"">em.ai.l.19.uk@gmail.com</a>
<a href=""mailto:email1.9uk@gmail.com"">email1.9uk@gmail.com</a>
<a href=""mailto:hrojamesf@zohomail.com"">hrojamesf@zohomail.com</a>
<a href=""mailto:jfranklindiplomat@gmail.com"">jfranklindiplomat@gmail.com</a>
<a href=""mailto:jfranklindiplomat+22215@gmail.com"">jfranklindiplomat+22215@gmail.com</a>
<a href=""mailto:jfranklindiplomat+9284@gmail.com"">jfranklindiplomat+9284@gmail.com</a>
<a href=""mailto:jfranklindiplomat+26468@gmail.com"">jfranklindiplomat+26468@gmail.com</a>
<a href=""mailto:jfranklindiplomat+9919@gmail.com"">jfranklindiplomat+9919@gmail.com</a>
<a href=""mailto:jfranklindiplomat+4828@gmail.com"">jfranklindiplomat+4828@gmail.com</a>
<a href=""mailto:jfranklindiplomat+7273@gmail.com"">jfranklindiplomat+7273@gmail.com</a>
<a href=""mailto:jfranklindiplomat+24776@gmail.com"">jfranklindiplomat+24776@gmail.com</a>
<a href=""mailto:jfranklindiplomat+17065@gmail.com"">jfranklindiplomat+17065@gmail.com</a>
<a href=""mailto:jfranklindiplomat+1724@gmail.com"">jfranklindiplomat+1724@gmail.com</a>
<a href=""mailto:jfranklindiplomat+31398@gmail.com"">jfranklindiplomat+31398@gmail.com</a>
<a href=""mailto:jfranklindiplomat+7494@gmail.com"">jfranklindiplomat+7494@gmail.com</a>
<a href=""mailto:jfranklindiplomat+11248@gmail.com"">jfranklindiplomat+11248@gmail.com</a>
<a href=""mailto:jfranklindiplomat+4004@gmail.com"">jfranklindiplomat+4004@gmail.com</a>
<a href=""mailto:jfranklindiplomat+28734@gmail.com"">jfranklindiplomat+28734@gmail.com</a>
<a href=""mailto:jfranklindiplomat+17391@gmail.com"">jfranklindiplomat+17391@gmail.com</a>
<a href=""mailto:jfranklindiplomat+18881@gmail.com"">jfranklindiplomat+18881@gmail.com</a>
<a href=""mailto:jfranklindiplomat+27337@gmail.com"">jfranklindiplomat+27337@gmail.com</a>
<a href=""mailto:jfranklindiplomat+19033@gmail.com"">jfranklindiplomat+19033@gmail.com</a>
<a href=""mailto:jfranklindiplomat+5134@gmail.com"">jfranklindiplomat+5134@gmail.com</a>
<a href=""mailto:jfranklindiplomat+8211@gmail.com"">jfranklindiplomat+8211@gmail.com</a>
<a href=""mailto:jfranklindiplomat+18220@gmail.com"">jfranklindiplomat+18220@gmail.com</a>
<a href=""mailto:jfranklindiplomat+7665@gmail.com"">jfranklindiplomat+7665@gmail.com</a>
<a href=""mailto:jfranklindiplomat+19768@gmail.com"">jfranklindiplomat+19768@gmail.com</a>
<a href=""mailto:jfranklindiplomat+5669@gmail.com"">jfranklindiplomat+5669@gmail.com</a>
<a href=""mailto:jfranklindiplomat+3376@gmail.com"">jfranklindiplomat+3376@gmail.com</a>
<a href=""mailto:jfranklindiplomat+26945@gmail.com"">jfranklindiplomat+26945@gmail.com</a>
<a href=""mailto:jfranklindiplomat+5172@gmail.com"">jfranklindiplomat+5172@gmail.com</a>
<a href=""mailto:jfranklindiplomat+29571@gmail.com"">jfranklindiplomat+29571@gmail.com</a>
<a href=""mailto:jfranklindiplomat+28953@gmail.com"">jfranklindiplomat+28953@gmail.com</a>
<a href=""mailto:jfranklindiplomat+25371@gmail.com"">jfranklindiplomat+25371@gmail.com</a>
<a href=""mailto:jfranklindiplomat+15296@gmail.com"">jfranklindiplomat+15296@gmail.com</a>
<a href=""mailto:jfranklindiplomat+21407@gmail.com"">jfranklindiplomat+21407@gmail.com</a>
<a href=""mailto:jfranklindiplomat+21328@gmail.com"">jfranklindiplomat+21328@gmail.com</a>
<a href=""mailto:jfranklindiplomat+23443@gmail.com"">jfranklindiplomat+23443@gmail.com</a>
<a href=""mailto:jfranklindiplomat+4319@gmail.com"">jfranklindiplomat+4319@gmail.com</a>
<a href=""mailto:jfranklindiplomat+31814@gmail.com"">jfranklindiplomat+31814@gmail.com</a>
<a href=""mailto:jfranklindiplomat+30163@gmail.com"">jfranklindiplomat+30163@gmail.com</a>
<a href=""mailto:jfranklindiplomat+9794@gmail.com"">jfranklindiplomat+9794@gmail.com</a>
<a href=""mailto:jfranklindiplomat+16034@gmail.com"">jfranklindiplomat+16034@gmail.com</a>
<a href=""mailto:jfranklindiplomat+3261@gmail.com"">jfranklindiplomat+3261@gmail.com</a>
<a href=""mailto:jfranklindiplomat+16530@gmail.com"">jfranklindiplomat+16530@gmail.com</a>
<a href=""mailto:jfranklindiplomat+17672@gmail.com"">jfranklindiplomat+17672@gmail.com</a>
<a href=""mailto:jfranklindiplomat+19005@gmail.com"">jfranklindiplomat+19005@gmail.com</a>
<a href=""mailto:jfranklindiplomat+13166@gmail.com"">jfranklindiplomat+13166@gmail.com</a>
<a href=""mailto:jfranklindiplomat+2240@gmail.com"">jfranklindiplomat+2240@gmail.com</a>
<a href=""mailto:jfranklindiplomat+27693@gmail.com"">jfranklindiplomat+27693@gmail.com</a>
<a href=""mailto:jfranklindiplomat+9699@gmail.com"">jfranklindiplomat+9699@gmail.com</a>
<a href=""mailto:jfranklindiplomat+11425@gmail.com"">jfranklindiplomat+11425@gmail.com</a>
<a href=""mailto:jfranklindiplomat+23612@gmail.com"">jfranklindiplomat+23612@gmail.com</a>
<a href=""mailto:jfranklindiplomat+21558@gmail.com"">jfranklindiplomat+21558@gmail.com</a>
<a href=""mailto:jfranklindiplomat+20049@gmail.com"">jfranklindiplomat+20049@gmail.com</a>
<a href=""mailto:jfranklindiplomat+17361@gmail.com"">jfranklindiplomat+17361@gmail.com</a>
<a href=""mailto:jfranklindiplomat+29027@gmail.com"">jfranklindiplomat+29027@gmail.com</a>
<a href=""mailto:jfranklindiplomat+30051@gmail.com"">jfranklindiplomat+30051@gmail.com</a>
<a href=""mailto:jfranklindiplomat+18274@gmail.com"">jfranklindiplomat+18274@gmail.com</a>
<a href=""mailto:jfranklindiplomat+1862@gmail.com"">jfranklindiplomat+1862@gmail.com</a>
<a href=""mailto:jfranklindiplomat+18053@gmail.com"">jfranklindiplomat+18053@gmail.com</a>
<a href=""mailto:jfranklindiplomat+22858@gmail.com"">jfranklindiplomat+22858@gmail.com</a>
<a href=""mailto:jfranklindiplomat+14104@gmail.com"">jfranklindiplomat+14104@gmail.com</a>
<a href=""mailto:jfranklindiplomat+22992@gmail.com"">jfranklindiplomat+22992@gmail.com</a>
<a href=""mailto:jfranklindiplomat+4994@gmail.com"">jfranklindiplomat+4994@gmail.com</a>
<a href=""mailto:jfranklindiplomat+18083@gmail.com"">jfranklindiplomat+18083@gmail.com</a>
<a href=""mailto:jfranklindiplomat+32469@gmail.com"">jfranklindiplomat+32469@gmail.com</a>
<a href=""mailto:jfranklindiplomat+11509@gmail.com"">jfranklindiplomat+11509@gmail.com</a>
<a href=""mailto:jfranklindiplomat+8951@gmail.com"">jfranklindiplomat+8951@gmail.com</a>
<a href=""mailto:jfranklindiplomat+2763@gmail.com"">jfranklindiplomat+2763@gmail.com</a>
<a href=""mailto:jfranklindiplomat+22280@gmail.com"">jfranklindiplomat+22280@gmail.com</a>
<a href=""mailto:jfranklindiplomat+24190@gmail.com"">jfranklindiplomat+24190@gmail.com</a>
<a href=""mailto:jfranklindiplomat+5765@gmail.com"">jfranklindiplomat+5765@gmail.com</a>
<a href=""mailto:jfranklindiplomat+25500@gmail.com"">jfranklindiplomat+25500@gmail.com</a>
<a href=""mailto:jfranklindiplomat+5329@gmail.com"">jfranklindiplomat+5329@gmail.com</a>
<a href=""mailto:jfranklindiplomat+7780@gmail.com"">jfranklindiplomat+7780@gmail.com</a>
<a href=""mailto:jfranklindiplomat+13990@gmail.com"">jfranklindiplomat+13990@gmail.com</a>
<a href=""mailto:jfranklindiplomat+28498@gmail.com"">jfranklindiplomat+28498@gmail.com</a>
<a href=""mailto:jfranklindiplomat+8599@gmail.com"">jfranklindiplomat+8599@gmail.com</a>
<a href=""mailto:jfranklindiplomat+15626@gmail.com"">jfranklindiplomat+15626@gmail.com</a>
<a href=""mailto:jfranklindiplomat+3605@gmail.com"">jfranklindiplomat+3605@gmail.com</a>
<a href=""mailto:jfranklindiplomat+25438@gmail.com"">jfranklindiplomat+25438@gmail.com</a>
<a href=""mailto:jfranklindiplomat+29850@gmail.com"">jfranklindiplomat+29850@gmail.com</a>
<a href=""mailto:jfranklindiplomat+16729@gmail.com"">jfranklindiplomat+16729@gmail.com</a>
<a href=""mailto:jfranklindiplomat+26171@gmail.com"">jfranklindiplomat+26171@gmail.com</a>
<a href=""mailto:jfranklindiplomat+8565@gmail.com"">jfranklindiplomat+8565@gmail.com</a>
<a href=""mailto:jfranklindiplomat+30538@gmail.com"">jfranklindiplomat+30538@gmail.com</a>
<a href=""mailto:jfranklindiplomat+1300@gmail.com"">jfranklindiplomat+1300@gmail.com</a>
<a href=""mailto:jfranklindiplomat+21787@gmail.com"">jfranklindiplomat+21787@gmail.com</a>
<a href=""mailto:jfranklindiplomat+595@gmail.com"">jfranklindiplomat+595@gmail.com</a>
<a href=""mailto:jfranklindiplomat+15561@gmail.com"">jfranklindiplomat+15561@gmail.com</a>
<a href=""mailto:jfranklindiplomat+5415@gmail.com"">jfranklindiplomat+5415@gmail.com</a>
<a href=""mailto:jfranklindiplomat+30400@gmail.com"">jfranklindiplomat+30400@gmail.com</a>
<a href=""mailto:jfranklindiplomat+28509@gmail.com"">jfranklindiplomat+28509@gmail.com</a>
<a href=""mailto:jfranklindiplomat+29533@gmail.com"">jfranklindiplomat+29533@gmail.com</a>
<a href=""mailto:jfranklindiplomat+25537@gmail.com"">jfranklindiplomat+25537@gmail.com</a>
<a href=""mailto:jfranklindiplomat+6072@gmail.com"">jfranklindiplomat+6072@gmail.com</a>
<a href=""mailto:jfranklindiplomat+7365@gmail.com"">jfranklindiplomat+7365@gmail.com</a>
<a href=""mailto:jfranklindiplomat+9461@gmail.com"">jfranklindiplomat+9461@gmail.com</a>
<a href=""mailto:jfranklindiplomat+7623@gmail.com"">jfranklindiplomat+7623@gmail.com</a>
<a href=""mailto:jfranklindiplomat+32348@gmail.com"">jfranklindiplomat+32348@gmail.com</a>
<a href=""mailto:jfranklindiplomat+11146@gmail.com"">jfranklindiplomat+11146@gmail.com</a>
<a href=""mailto:jfranklindiplomat+18478@gmail.com"">jfranklindiplomat+18478@gmail.com</a>
<a href=""mailto:jfranklindiplomat+17021@gmail.com"">jfranklindiplomat+17021@gmail.com</a>
<a href=""mailto:bitcoinpaymon@gmail.com"">bitcoinpaymon@gmail.com</a>
<a href=""mailto:bi.tc.oi.npa.ymon@gmail.com"">bi.tc.oi.npa.ymon@gmail.com</a>
<a href=""mailto:b.i.t.c.o.i.np.ay.m.o.n@gmail.com"">b.i.t.c.o.i.np.ay.m.o.n@gmail.com</a>
<a href=""mailto:bi.tcoi.npa.ymon@gmail.com"">bi.tcoi.npa.ymon@gmail.com</a>
<a href=""mailto:bi.t.c.o.in.pa.y.mon@gmail.com"">bi.t.c.o.in.pa.y.mon@gmail.com</a>
<a href=""mailto:b.i.tc.o.i.np.ay.m.on@gmail.com"">b.i.tc.o.i.np.ay.m.on@gmail.com</a>
<a href=""mailto:bi.tcoi.np.ay.m.on@gmail.com"">bi.tcoi.np.ay.m.on@gmail.com</a>
<a href=""mailto:bi.t.c.oin.pay.m.o.n@gmail.com"">bi.t.c.oin.pay.m.o.n@gmail.com</a>
<a href=""mailto:b.i.t.c.oin.pay.m.on@gmail.com"">b.i.t.c.oin.pay.m.on@gmail.com</a>
<a href=""mailto:bit.c.o.i.n.p.aym.o.n@gmail.com"">bit.c.o.i.n.p.aym.o.n@gmail.com</a>
<a href=""mailto:b.i.tcoi.n.p.aymon@gmail.com"">b.i.tcoi.n.p.aymon@gmail.com</a>
<a href=""mailto:bi.tc.oinpa.ym.o.n@gmail.com"">bi.tc.oinpa.ym.o.n@gmail.com</a>
<a href=""mailto:b.itco.i.n.p.a.ymo.n@gmail.com"">b.itco.i.n.p.a.ymo.n@gmail.com</a>
<a href=""mailto:b.it.c.oi.n.p.ay.mo.n@gmail.com"">b.it.c.oi.n.p.ay.mo.n@gmail.com</a>
<a href=""mailto:b.itc.o.i.npaymon@gmail.com"">b.itc.o.i.npaymon@gmail.com</a>
<a href=""mailto:b.it.c.oi.n.pa.ymon@gmail.com"">b.it.c.oi.n.pa.ymon@gmail.com</a>
<a href=""mailto:bi.t.c.o.in.paymo.n@gmail.com"">bi.t.c.o.in.paymo.n@gmail.com</a>
<a href=""mailto:b.i.t.c.oinp.a.ym.o.n@gmail.com"">b.i.t.c.oinp.a.ym.o.n@gmail.com</a>
<a href=""mailto:bitc.o.i.np.a.ymo.n@gmail.com"">bitc.o.i.np.a.ymo.n@gmail.com</a>
<a href=""mailto:b.i.t.coinp.ay.m.o.n@gmail.com"">b.i.t.coinp.ay.m.o.n@gmail.com</a>
<a href=""mailto:bi.t.c.oinpa.y.mo.n@gmail.com"">bi.t.c.oinpa.y.mo.n@gmail.com</a>
<a href=""mailto:b.itcoinpaym.o.n@gmail.com"">b.itcoinpaym.o.n@gmail.com</a>
<a href=""mailto:bi.tc.oin.pa.y.mo.n@gmail.com"">bi.tc.oin.pa.y.mo.n@gmail.com</a>
<a href=""mailto:b.it.c.oi.n.pa.ymo.n@gmail.com"">b.it.c.oi.n.pa.ymo.n@gmail.com</a>
<a href=""mailto:b.it.co.i.npaymon@gmail.com"">b.it.co.i.npaymon@gmail.com</a>
<a href=""mailto:bit.coin.p.ay.mo.n@gmail.com"">bit.coin.p.ay.mo.n@gmail.com</a>
<a href=""mailto:b.itco.inpaymon@gmail.com"">b.itco.inpaymon@gmail.com</a>
<a href=""mailto:bi.t.c.o.i.npa.y.mo.n@gmail.com"">bi.t.c.o.i.npa.y.mo.n@gmail.com</a>
<a href=""mailto:b.itcoin.p.ay.mo.n@gmail.com"">b.itcoin.p.ay.mo.n@gmail.com</a>
<a href=""mailto:b.itc.o.i.npa.ymo.n@gmail.com"">b.itc.o.i.npa.ymo.n@gmail.com</a>
<a href=""mailto:bi.t.co.i.n.p.ay.mo.n@gmail.com"">bi.t.co.i.n.p.ay.mo.n@gmail.com</a>
<a href=""mailto:bi.tc.o.in.p.a.y.m.on@gmail.com"">bi.tc.o.in.p.a.y.m.on@gmail.com</a>
<a href=""mailto:bitc.o.in.p.aymo.n@gmail.com"">bitc.o.in.p.aymo.n@gmail.com</a>
<a href=""mailto:b.i.tco.i.np.a.y.m.on@gmail.com"">b.i.tco.i.np.a.y.m.on@gmail.com</a>
<a href=""mailto:bi.t.co.i.n.paym.on@gmail.com"">bi.t.co.i.n.paym.on@gmail.com</a>
<a href=""mailto:bi.t.c.o.inp.ay.m.on@gmail.com"">bi.t.c.o.inp.ay.m.on@gmail.com</a>
<a href=""mailto:b.i.tcoi.n.pay.mon@gmail.com"">b.i.tcoi.n.pay.mon@gmail.com</a>
<a href=""mailto:bi.tco.inpay.m.on@gmail.com"">bi.tco.inpay.m.on@gmail.com</a>
<a href=""mailto:bit.c.o.inp.a.y.m.on@gmail.com"">bit.c.o.inp.a.y.m.on@gmail.com</a>
<a href=""mailto:b.i.t.c.oinp.a.ymon@gmail.com"">b.i.t.c.oinp.a.ymon@gmail.com</a>
<a href=""mailto:bi.t.co.i.np.ay.mon@gmail.com"">bi.t.co.i.np.ay.mon@gmail.com</a>
<a href=""mailto:bi.tco.i.np.a.ym.on@gmail.com"">bi.tco.i.np.a.ym.on@gmail.com</a>
<a href=""mailto:bi.t.c.o.i.np.a.ym.o.n@gmail.com"">bi.t.c.o.i.np.a.ym.o.n@gmail.com</a>
<a href=""mailto:b.itcoi.n.p.a.ymon@gmail.com"">b.itcoi.n.p.a.ymon@gmail.com</a>
<a href=""mailto:bitc.oi.np.a.ymon@gmail.com"">bitc.oi.np.a.ymon@gmail.com</a>
<a href=""mailto:b.it.coinpa.y.m.on@gmail.com"">b.it.coinpa.y.m.on@gmail.com</a>
<a href=""mailto:bit.c.oinp.a.ym.on@gmail.com"">bit.c.oinp.a.ym.on@gmail.com</a>
<a href=""mailto:b.it.co.i.n.p.aym.on@gmail.com"">b.it.co.i.n.p.aym.on@gmail.com</a>
<a href=""mailto:bi.t.c.o.i.npaymon@gmail.com"">bi.t.c.o.i.npaymon@gmail.com</a>
<a href=""mailto:bi.tc.oi.n.p.ay.m.on@gmail.com"">bi.tc.oi.n.p.ay.m.on@gmail.com</a>
<a href=""mailto:b.it.co.i.np.a.ymo.n@gmail.com"">b.it.co.i.np.a.ymo.n@gmail.com</a>
<a href=""mailto:bi.tco.in.pa.ym.on@gmail.com"">bi.tco.in.pa.ym.on@gmail.com</a>
<a href=""mailto:bit.c.oi.n.pa.ym.on@gmail.com"">bit.c.oi.n.pa.ym.on@gmail.com</a>
<a href=""mailto:bit.co.i.npa.y.mon@gmail.com"">bit.co.i.npa.y.mon@gmail.com</a>
<a href=""mailto:b.itcoin.p.a.y.mon@gmail.com"">b.itcoin.p.a.y.mon@gmail.com</a>
<a href=""mailto:bi.tco.i.n.pa.ymo.n@gmail.com"">bi.tco.i.n.pa.ymo.n@gmail.com</a>
<a href=""mailto:b.i.tcoi.npa.y.m.on@gmail.com"">b.i.tcoi.npa.y.m.on@gmail.com</a>
<a href=""mailto:b.i.t.co.in.paymo.n@gmail.com"">b.i.t.co.in.paymo.n@gmail.com</a>
<a href=""mailto:b.it.c.o.i.np.a.ym.o.n@gmail.com"">b.it.c.o.i.np.a.ym.o.n@gmail.com</a>
<a href=""mailto:bi.t.c.oinpaymo.n@gmail.com"">bi.t.c.oinpaymo.n@gmail.com</a>
<a href=""mailto:bi.t.coi.n.p.aym.on@gmail.com"">bi.t.coi.n.p.aym.on@gmail.com</a>
<a href=""mailto:bi.t.c.o.i.np.ay.m.o.n@gmail.com"">bi.t.c.o.i.np.ay.m.o.n@gmail.com</a>
<a href=""mailto:b.i.tco.i.n.pa.ym.on@gmail.com"">b.i.tco.i.n.pa.ym.on@gmail.com</a>
<a href=""mailto:bit.coinp.a.ym.on@gmail.com"">bit.coinp.a.ym.on@gmail.com</a>
<a href=""mailto:b.i.tc.o.i.np.aymo.n@gmail.com"">b.i.tc.o.i.np.aymo.n@gmail.com</a>
<a href=""mailto:b.itc.oinp.a.ymon@gmail.com"">b.itc.oinp.a.ymon@gmail.com</a>
<a href=""mailto:bit.co.in.p.aymon@gmail.com"">bit.co.in.p.aymon@gmail.com</a>
<a href=""mailto:bi.tcoin.p.aym.on@gmail.com"">bi.tcoin.p.aym.on@gmail.com</a>
<a href=""mailto:bi.tc.oi.n.p.ay.mon@gmail.com"">bi.tc.oi.n.p.ay.mon@gmail.com</a>
<a href=""mailto:b.itco.in.paym.o.n@gmail.com"">b.itco.in.paym.o.n@gmail.com</a>
<a href=""mailto:b.i.tco.inpa.y.m.on@gmail.com"">b.i.tco.inpa.y.m.on@gmail.com</a>
<a href=""mailto:b.i.t.c.o.inp.a.ym.o.n@gmail.com"">b.i.t.c.o.inp.a.ym.o.n@gmail.com</a>
<a href=""mailto:bi.tco.inp.aymon@gmail.com"">bi.tco.inp.aymon@gmail.com</a>
<a href=""mailto:b.i.t.coin.p.ay.mon@gmail.com"">b.i.t.coin.p.ay.mon@gmail.com</a>
<a href=""mailto:bi.tc.oinp.ay.mon@gmail.com"">bi.tc.oinp.ay.mon@gmail.com</a>
<a href=""mailto:b.it.c.oin.p.a.y.m.on@gmail.com"">b.it.c.oin.p.a.y.m.on@gmail.com</a>
<a href=""mailto:bi.tco.i.np.a.ymo.n@gmail.com"">bi.tco.i.np.a.ymo.n@gmail.com</a>
<a href=""mailto:b.i.tcoi.n.p.a.y.mo.n@gmail.com"">b.i.tcoi.n.p.a.y.mo.n@gmail.com</a>
<a href=""mailto:b.i.tcoin.paym.on@gmail.com"">b.i.tcoin.paym.on@gmail.com</a>
<a href=""mailto:bi.tco.in.pay.m.on@gmail.com"">bi.tco.in.pay.m.on@gmail.com</a>
<a href=""mailto:b.i.tcoi.npa.ymo.n@gmail.com"">b.i.tcoi.npa.ymo.n@gmail.com</a>
<a href=""mailto:b.it.co.in.pay.mon@gmail.com"">b.it.co.in.pay.mon@gmail.com</a>
<a href=""mailto:bit.c.o.inpay.m.o.n@gmail.com"">bit.c.o.inpay.m.o.n@gmail.com</a>
<a href=""mailto:b.i.t.coin.p.aym.on@gmail.com"">b.i.t.coin.p.aym.on@gmail.com</a>
<a href=""mailto:b.i.tcoi.n.pa.y.m.o.n@gmail.com"">b.i.tcoi.n.pa.y.m.o.n@gmail.com</a>
<a href=""mailto:b.itc.o.inpa.ymo.n@gmail.com"">b.itc.o.inpa.ymo.n@gmail.com</a>
<a href=""mailto:bi.t.co.in.p.a.y.mo.n@gmail.com"">bi.t.co.in.p.a.y.mo.n@gmail.com</a>
<a href=""mailto:bitcoi.n.pa.y.m.on@gmail.com"">bitcoi.n.pa.y.m.on@gmail.com</a>
<a href=""mailto:b.i.tcoin.p.aym.o.n@gmail.com"">b.i.tcoin.p.aym.o.n@gmail.com</a>
<a href=""mailto:b.itc.oinp.ay.m.o.n@gmail.com"">b.itc.oinp.ay.m.o.n@gmail.com</a>
<a href=""mailto:b.it.coi.np.a.ymon@gmail.com"">b.it.coi.np.a.ymon@gmail.com</a>
<a href=""mailto:bit.c.o.i.n.pay.mo.n@gmail.com"">bit.c.o.i.n.pay.mo.n@gmail.com</a>
<a href=""mailto:bitco.in.p.ay.m.on@gmail.com"">bitco.in.p.ay.m.on@gmail.com</a>
<a href=""mailto:bitc.oi.np.a.y.mon@gmail.com"">bitc.oi.np.a.y.mon@gmail.com</a>
<a href=""mailto:b.itcoinp.a.ymo.n@gmail.com"">b.itcoinp.a.ymo.n@gmail.com</a>
<a href=""mailto:bit.co.inp.a.y.mon@gmail.com"">bit.co.inp.a.y.mon@gmail.com</a>
<a href=""mailto:bitc.oinpaym.on@gmail.com"">bitc.oinpaym.on@gmail.com</a>
<a href=""mailto:b.itc.o.i.n.paymo.n@gmail.com"">b.itc.o.i.n.paymo.n@gmail.com</a>
<a href=""mailto:bi.tc.oi.n.pa.y.mon@gmail.com"">bi.tc.oi.n.pa.y.mon@gmail.com</a>
<a href=""mailto:bi.tc.oi.n.pa.ym.o.n@gmail.com"">bi.tc.oi.n.pa.ym.o.n@gmail.com</a>
<a href=""mailto:bit.c.o.in.paym.o.n@gmail.com"">bit.c.o.in.paym.o.n@gmail.com</a>
<a href=""mailto:b.it.co.i.n.p.a.y.m.on@gmail.com"">b.it.co.i.n.p.a.y.m.on@gmail.com</a>
<a href=""mailto:bi.tcoi.npa.y.mon@gmail.com"">bi.tcoi.npa.y.mon@gmail.com</a>
<a href=""mailto:bit.coin.paymo.n@gmail.com"">bit.coin.paymo.n@gmail.com</a>
<a href=""mailto:bi.t.coinpa.y.mo.n@gmail.com"">bi.t.coinpa.y.mo.n@gmail.com</a>
<a href=""mailto:bi.t.co.in.p.a.y.m.o.n@gmail.com"">bi.t.co.in.p.a.y.m.o.n@gmail.com</a>
<a href=""mailto:bit.c.o.i.npa.ymo.n@gmail.com"">bit.c.o.i.npa.ymo.n@gmail.com</a>
<a href=""mailto:b.it.co.i.n.pay.mo.n@gmail.com"">b.it.co.i.n.pay.mo.n@gmail.com</a>
<a href=""mailto:b.itcoi.n.p.aym.on@gmail.com"">b.itcoi.n.p.aym.on@gmail.com</a>
<a href=""mailto:bi.t.c.o.i.np.ay.m.on@gmail.com"">bi.t.c.o.i.np.ay.m.on@gmail.com</a>
<a href=""mailto:b.it.c.oinp.ay.mon@gmail.com"">b.it.c.oinp.ay.mon@gmail.com</a>
<a href=""mailto:bitc.o.i.np.a.ym.on@gmail.com"">bitc.o.i.np.a.ym.on@gmail.com</a>
<a href=""mailto:b.i.t.c.o.inpa.y.m.on@gmail.com"">b.i.t.c.o.inpa.y.m.on@gmail.com</a>
<a href=""mailto:b.i.tcoinpaymon@gmail.com"">b.i.tcoinpaymon@gmail.com</a>
<a href=""mailto:b.itc.oi.np.a.y.mo.n@gmail.com"">b.itc.oi.np.a.y.mo.n@gmail.com</a>
<a href=""mailto:bitc.o.i.npaymo.n@gmail.com"">bitc.o.i.npaymo.n@gmail.com</a>
<a href=""mailto:b.it.coi.np.a.y.m.on@gmail.com"">b.it.coi.np.a.y.m.on@gmail.com</a>
<a href=""mailto:b.it.c.oinpa.ym.on@gmail.com"">b.it.c.oinpa.ym.on@gmail.com</a>
<a href=""mailto:bit.c.o.i.np.a.ym.o.n@gmail.com"">bit.c.o.i.np.a.ym.o.n@gmail.com</a>
<a href=""mailto:b.it.c.oinpa.ym.o.n@gmail.com"">b.it.c.oinpa.ym.o.n@gmail.com</a>
<a href=""mailto:b.i.t.coin.paymo.n@gmail.com"">b.i.t.coin.paymo.n@gmail.com</a>
<a href=""mailto:bitc.o.in.pa.y.mon@gmail.com"">bitc.o.in.pa.y.mon@gmail.com</a>
<a href=""mailto:bi.t.c.o.i.np.ay.mo.n@gmail.com"">bi.t.c.o.i.np.ay.mo.n@gmail.com</a>
<a href=""mailto:b.it.coin.pa.ymon@gmail.com"">b.it.coin.pa.ymon@gmail.com</a>
<a href=""mailto:b.i.t.c.o.inp.a.y.m.on@gmail.com"">b.i.t.c.o.inp.a.y.m.on@gmail.com</a>
<a href=""mailto:bit.co.inpaym.on@gmail.com"">bit.co.inpaym.on@gmail.com</a>
<a href=""mailto:bitc.oin.pa.ymon@gmail.com"">bitc.oin.pa.ymon@gmail.com</a>
<a href=""mailto:bitcoi.n.pa.ym.o.n@gmail.com"">bitcoi.n.pa.ym.o.n@gmail.com</a>
<a href=""mailto:bitco.i.npa.y.m.on@gmail.com"">bitco.i.npa.y.m.on@gmail.com</a>
<a href=""mailto:bit.c.o.i.np.a.y.mon@gmail.com"">bit.c.o.i.np.a.y.mon@gmail.com</a>
<a href=""mailto:bit.co.i.n.p.a.ymon@gmail.com"">bit.co.i.n.p.a.ymon@gmail.com</a>
<a href=""mailto:b.i.t.c.oinp.ay.m.o.n@gmail.com"">b.i.t.c.oinp.ay.m.o.n@gmail.com</a>
<a href=""mailto:b.itco.i.npaymo.n@gmail.com"">b.itco.i.npaymo.n@gmail.com</a>
<a href=""mailto:b.i.tc.o.i.n.pa.ymon@gmail.com"">b.i.tc.o.i.n.pa.ymon@gmail.com</a>
<a href=""mailto:b.it.co.in.p.a.y.m.o.n@gmail.com"">b.it.co.in.p.a.y.m.o.n@gmail.com</a>
<a href=""mailto:b.i.tcoin.p.a.y.mon@gmail.com"">b.i.tcoin.p.a.y.mon@gmail.com</a>
<a href=""mailto:bi.tc.o.inp.aym.o.n@gmail.com"">bi.tc.o.inp.aym.o.n@gmail.com</a>
<a href=""mailto:bi.t.coin.paymo.n@gmail.com"">bi.t.coin.paymo.n@gmail.com</a>
<a href=""mailto:bi.tcoi.n.pay.mo.n@gmail.com"">bi.tcoi.n.pay.mo.n@gmail.com</a>
<a href=""mailto:b.itco.in.p.ay.mon@gmail.com"">b.itco.in.p.ay.mon@gmail.com</a>
<a href=""mailto:b.i.tc.o.in.pay.m.on@gmail.com"">b.i.tc.o.in.pay.m.on@gmail.com</a>
<a href=""mailto:b.itco.inpa.ym.on@gmail.com"">b.itco.inpa.ym.on@gmail.com</a>
<a href=""mailto:b.i.t.co.i.np.a.y.mo.n@gmail.com"">b.i.t.co.i.np.a.y.mo.n@gmail.com</a>
<a href=""mailto:b.it.coin.p.ay.m.on@gmail.com"">b.it.coin.p.ay.m.on@gmail.com</a>
<a href=""mailto:bitc.o.inp.a.ymon@gmail.com"">bitc.o.inp.a.ymon@gmail.com</a>
<a href=""mailto:b.i.tcoi.np.ay.m.on@gmail.com"">b.i.tcoi.np.ay.m.on@gmail.com</a>
<a href=""mailto:b.itc.o.i.np.aym.o.n@gmail.com"">b.itc.o.i.np.aym.o.n@gmail.com</a>
<a href=""mailto:b.itc.o.i.n.pa.y.mo.n@gmail.com"">b.itc.o.i.n.pa.y.mo.n@gmail.com</a>
<a href=""mailto:b.it.co.i.n.pa.ym.o.n@gmail.com"">b.it.co.i.n.pa.ym.o.n@gmail.com</a>
<a href=""mailto:b.i.t.coi.np.a.ymo.n@gmail.com"">b.i.t.coi.np.a.ymo.n@gmail.com</a>
<a href=""mailto:b.it.c.o.i.np.ay.mo.n@gmail.com"">b.it.c.o.i.np.ay.mo.n@gmail.com</a>
<a href=""mailto:bit.c.o.i.np.ay.m.on@gmail.com"">bit.c.o.i.np.ay.m.on@gmail.com</a>
<a href=""mailto:b.i.tcoin.p.a.ym.on@gmail.com"">b.i.tcoin.p.a.ym.on@gmail.com</a>
<a href=""mailto:b.i.tc.o.i.n.p.a.y.m.on@gmail.com"">b.i.tc.o.i.n.p.a.y.m.on@gmail.com</a>
<a href=""mailto:bi.tcoi.n.pay.m.o.n@gmail.com"">bi.tcoi.n.pay.m.o.n@gmail.com</a>
<a href=""mailto:b.i.t.c.o.i.npay.m.o.n@gmail.com"">b.i.t.c.o.i.npay.m.o.n@gmail.com</a>
<a href=""mailto:bi.tcoi.n.p.aymo.n@gmail.com"">bi.tcoi.n.p.aymo.n@gmail.com</a>
<a href=""mailto:b.itc.oi.n.p.a.ym.on@gmail.com"">b.itc.oi.n.p.a.ym.on@gmail.com</a>
<a href=""mailto:b.i.t.c.oi.n.p.aym.on@gmail.com"">b.i.t.c.oi.n.p.aym.on@gmail.com</a>
<a href=""mailto:b.it.coinp.a.y.mo.n@gmail.com"">b.it.coinp.a.y.mo.n@gmail.com</a>
<a href=""mailto:bit.c.oinp.ay.mon@gmail.com"">bit.c.oinp.ay.mon@gmail.com</a>
<a href=""mailto:bit.c.o.in.paymo.n@gmail.com"">bit.c.o.in.paymo.n@gmail.com</a>
<a href=""mailto:bitco.i.n.pa.y.m.o.n@gmail.com"">bitco.i.n.pa.y.m.o.n@gmail.com</a>
<a href=""mailto:bit.c.oinpay.mon@gmail.com"">bit.c.oinpay.mon@gmail.com</a>
<a href=""mailto:b.itc.o.i.np.a.ymon@gmail.com"">b.itc.o.i.np.a.ymon@gmail.com</a>
<a href=""mailto:bitc.o.i.n.paym.o.n@gmail.com"">bitc.o.i.n.paym.o.n@gmail.com</a>
<a href=""mailto:bi.tc.o.in.pa.y.mon@gmail.com"">bi.tc.o.in.pa.y.mon@gmail.com</a>
<a href=""mailto:bi.t.co.i.n.p.a.y.mo.n@gmail.com"">bi.t.co.i.n.p.a.y.mo.n@gmail.com</a>
<a href=""mailto:bitc.oin.paym.o.n@gmail.com"">bitc.oin.paym.o.n@gmail.com</a>
<a href=""mailto:b.i.t.coi.n.p.a.y.mon@gmail.com"">b.i.t.coi.n.p.a.y.mon@gmail.com</a>
<a href=""mailto:b.itcoinpaymon@gmail.com"">b.itcoinpaymon@gmail.com</a>
<a href=""mailto:b.it.c.o.in.pay.m.on@gmail.com"">b.it.c.o.in.pay.m.on@gmail.com</a>
<a href=""mailto:bi.tcoin.pa.ym.o.n@gmail.com"">bi.tcoin.pa.ym.o.n@gmail.com</a>
<a href=""mailto:b.it.c.o.i.np.ay.m.o.n@gmail.com"">b.it.c.o.i.np.ay.m.o.n@gmail.com</a>
<a href=""mailto:bi.tcoinp.aym.o.n@gmail.com"">bi.tcoinp.aym.o.n@gmail.com</a>
<a href=""mailto:bi.tc.o.i.n.p.a.y.m.on@gmail.com"">bi.tc.o.i.n.p.a.y.m.on@gmail.com</a>
<a href=""mailto:bi.t.c.o.inpa.ym.on@gmail.com"">bi.t.c.o.inpa.ym.on@gmail.com</a>
<a href=""mailto:bi.t.c.oi.npa.y.m.o.n@gmail.com"">bi.t.c.oi.npa.y.m.o.n@gmail.com</a>
<a href=""mailto:bitco.i.npay.m.on@gmail.com"">bitco.i.npay.m.on@gmail.com</a>
<a href=""mailto:b.i.t.c.o.i.np.a.ym.on@gmail.com"">b.i.t.c.o.i.np.a.ym.on@gmail.com</a>
<a href=""mailto:b.it.c.o.in.pa.y.m.o.n@gmail.com"">b.it.c.o.in.pa.y.m.o.n@gmail.com</a>
<a href=""mailto:b.it.coi.np.a.ym.o.n@gmail.com"">b.it.coi.np.a.ym.o.n@gmail.com</a>
<a href=""mailto:bitco.inpa.ymon@gmail.com"">bitco.inpa.ymon@gmail.com</a>
<a href=""mailto:b.i.tco.i.npa.y.m.o.n@gmail.com"">b.i.tco.i.npa.y.m.o.n@gmail.com</a>
<a href=""mailto:b.i.t.coi.n.pa.ymo.n@gmail.com"">b.i.t.coi.n.pa.ymo.n@gmail.com</a>
<a href=""mailto:bi.t.coi.n.p.aym.o.n@gmail.com"">bi.t.coi.n.p.aym.o.n@gmail.com</a>
<a href=""mailto:b.i.tc.oin.pa.y.mon@gmail.com"">b.i.tc.oin.pa.y.mon@gmail.com</a>
<a href=""mailto:b.it.co.in.p.a.y.mon@gmail.com"">b.it.co.in.p.a.y.mon@gmail.com</a>
<a href=""mailto:b.itcoi.n.paymo.n@gmail.com"">b.itcoi.n.paymo.n@gmail.com</a>
<a href=""mailto:b.i.tco.in.paymo.n@gmail.com"">b.i.tco.in.paymo.n@gmail.com</a>
<a href=""mailto:bit.co.i.n.p.a.ym.o.n@gmail.com"">bit.co.i.n.p.a.ym.o.n@gmail.com</a>
<a href=""mailto:b.i.t.c.oi.npaymo.n@gmail.com"">b.i.t.c.oi.npaymo.n@gmail.com</a>
<a href=""mailto:b.itc.oi.n.p.ay.m.o.n@gmail.com"">b.itc.oi.n.p.ay.m.o.n@gmail.com</a>
<a href=""mailto:bi.t.coi.npaym.o.n@gmail.com"">bi.t.coi.npaym.o.n@gmail.com</a>
<a href=""mailto:bitc.oi.npa.ym.o.n@gmail.com"">bitc.oi.npa.ym.o.n@gmail.com</a>
<a href=""mailto:b.it.coinpay.m.o.n@gmail.com"">b.it.coinpay.m.o.n@gmail.com</a>
<a href=""mailto:bitc.oin.p.ay.mon@gmail.com"">bitc.oin.p.ay.mon@gmail.com</a>
<a href=""mailto:bitco.inpa.y.m.o.n@gmail.com"">bitco.inpa.y.m.o.n@gmail.com</a>
<a href=""mailto:b.i.t.co.in.p.a.y.m.o.n@gmail.com"">b.i.t.co.in.p.a.y.m.o.n@gmail.com</a>
<a href=""mailto:bi.t.coi.n.p.ay.mo.n@gmail.com"">bi.t.coi.n.p.ay.mo.n@gmail.com</a>
<a href=""mailto:b.it.c.o.inp.ay.mo.n@gmail.com"">b.it.c.o.inp.ay.mo.n@gmail.com</a>
<a href=""mailto:musadrraji@gmail.com"">musadrraji@gmail.com</a>
<a href=""mailto:m.usadrr.a.ji@gmail.com"">m.usadrr.a.ji@gmail.com</a>
<a href=""mailto:musad.rr.aji@gmail.com"">musad.rr.aji@gmail.com</a>
<a href=""mailto:m.us.ad.r.r.a.ji@gmail.com"">m.us.ad.r.r.a.ji@gmail.com</a>
<a href=""mailto:mus.a.drr.aji@gmail.com"">mus.a.drr.aji@gmail.com</a>
<a href=""mailto:mu.sa.d.r.raj.i@gmail.com"">mu.sa.d.r.raj.i@gmail.com</a>
<a href=""mailto:mu.sadrra.ji@gmail.com"">mu.sadrra.ji@gmail.com</a>
<a href=""mailto:m.us.ad.rraji@gmail.com"">m.us.ad.rraji@gmail.com</a>
<a href=""mailto:mu.sadr.raj.i@gmail.com"">mu.sadr.raj.i@gmail.com</a>
<a href=""mailto:m.u.s.a.dr.ra.j.i@gmail.com"">m.u.s.a.dr.ra.j.i@gmail.com</a>
<a href=""mailto:mus.a.dr.r.a.ji@gmail.com"">mus.a.dr.r.a.ji@gmail.com</a>
<a href=""mailto:musad.r.ra.ji@gmail.com"">musad.r.ra.ji@gmail.com</a>
<a href=""mailto:m.usa.drraji@gmail.com"">m.usa.drraji@gmail.com</a>
<a href=""mailto:mus.adrr.a.ji@gmail.com"">mus.adrr.a.ji@gmail.com</a>
<a href=""mailto:m.usa.d.r.r.aji@gmail.com"">m.usa.d.r.r.aji@gmail.com</a>
<a href=""mailto:mus.ad.rr.aji@gmail.com"">mus.ad.rr.aji@gmail.com</a>
<a href=""mailto:mu.s.adrr.a.j.i@gmail.com"">mu.s.adrr.a.j.i@gmail.com</a>
<a href=""mailto:mus.adr.ra.ji@gmail.com"">mus.adr.ra.ji@gmail.com</a>
<a href=""mailto:m.usadrraj.i@gmail.com"">m.usadrraj.i@gmail.com</a>
<a href=""mailto:mu.sad.rr.aj.i@gmail.com"">mu.sad.rr.aj.i@gmail.com</a>
<a href=""mailto:mu.sad.r.raji@gmail.com"">mu.sad.r.raji@gmail.com</a>
<a href=""mailto:mus.adr.r.aj.i@gmail.com"">mus.adr.r.aj.i@gmail.com</a>
<a href=""mailto:m.u.sad.r.r.a.ji@gmail.com"">m.u.sad.r.r.a.ji@gmail.com</a>
<a href=""mailto:mus.a.dr.r.aji@gmail.com"">mus.a.dr.r.aji@gmail.com</a>
<a href=""mailto:m.u.sa.d.rraj.i@gmail.com"">m.u.sa.d.rraj.i@gmail.com</a>
<a href=""mailto:mu.sadrr.a.j.i@gmail.com"">mu.sadrr.a.j.i@gmail.com</a>
<a href=""mailto:m.u.sa.d.r.r.a.j.i@gmail.com"">m.u.sa.d.r.r.a.j.i@gmail.com</a>
<a href=""mailto:mus.a.drr.aj.i@gmail.com"">mus.a.drr.aj.i@gmail.com</a>
<a href=""mailto:musa.d.rra.j.i@gmail.com"">musa.d.rra.j.i@gmail.com</a>
<a href=""mailto:mu.s.adr.r.a.ji@gmail.com"">mu.s.adr.r.a.ji@gmail.com</a>
<a href=""mailto:musad.rra.j.i@gmail.com"">musad.rra.j.i@gmail.com</a>
<a href=""mailto:mu.s.adr.r.aj.i@gmail.com"">mu.s.adr.r.aj.i@gmail.com</a>
<a href=""mailto:mu.s.ad.rra.j.i@gmail.com"">mu.s.ad.rra.j.i@gmail.com</a>
<a href=""mailto:m.usadr.r.a.ji@gmail.com"">m.usadr.r.a.ji@gmail.com</a>
<a href=""mailto:m.u.s.a.d.rraj.i@gmail.com"">m.u.s.a.d.rraj.i@gmail.com</a>
<a href=""mailto:mu.sa.d.r.raji@gmail.com"">mu.sa.d.r.raji@gmail.com</a>
<a href=""mailto:musa.dr.r.a.ji@gmail.com"">musa.dr.r.a.ji@gmail.com</a>
<a href=""mailto:mu.s.a.d.r.r.aj.i@gmail.com"">mu.s.a.d.r.r.aj.i@gmail.com</a>
<a href=""mailto:m.u.s.adr.r.a.j.i@gmail.com"">m.u.s.adr.r.a.j.i@gmail.com</a>
<a href=""mailto:mu.sa.dr.r.a.ji@gmail.com"">mu.sa.dr.r.a.ji@gmail.com</a>
<a href=""mailto:m.u.s.adrra.j.i@gmail.com"">m.u.s.adrra.j.i@gmail.com</a>
<a href=""mailto:mus.a.d.r.r.aji@gmail.com"">mus.a.d.r.r.aji@gmail.com</a>
<a href=""mailto:musadr.r.a.ji@gmail.com"">musadr.r.a.ji@gmail.com</a>
<a href=""mailto:m.usa.drra.j.i@gmail.com"">m.usa.drra.j.i@gmail.com</a>
<a href=""mailto:m.usadr.r.a.j.i@gmail.com"">m.usadr.r.a.j.i@gmail.com</a>
<a href=""mailto:mus.a.drraj.i@gmail.com"">mus.a.drraj.i@gmail.com</a>
<a href=""mailto:m.u.s.adrraj.i@gmail.com"">m.u.s.adrraj.i@gmail.com</a>
<a href=""mailto:m.usa.d.rr.a.ji@gmail.com"">m.usa.d.rr.a.ji@gmail.com</a>
<a href=""mailto:m.u.s.a.d.r.ra.ji@gmail.com"">m.u.s.a.d.r.ra.ji@gmail.com</a>
<a href=""mailto:m.u.sa.d.rra.j.i@gmail.com"">m.u.sa.d.rra.j.i@gmail.com</a>
<a href=""mailto:mus.adrr.aj.i@gmail.com"">mus.adrr.aj.i@gmail.com</a>
<a href=""mailto:m.usa.d.rraj.i@gmail.com"">m.usa.d.rraj.i@gmail.com</a>
<a href=""mailto:m.us.ad.rr.aj.i@gmail.com"">m.us.ad.rr.aj.i@gmail.com</a>
<a href=""mailto:mu.s.a.dr.r.aj.i@gmail.com"">mu.s.a.dr.r.aj.i@gmail.com</a>
<a href=""mailto:m.u.sa.drr.a.j.i@gmail.com"">m.u.sa.drr.a.j.i@gmail.com</a>
<a href=""mailto:mu.sa.d.r.r.aj.i@gmail.com"">mu.sa.d.r.r.aj.i@gmail.com</a>
<a href=""mailto:mus.a.dr.raj.i@gmail.com"">mus.a.dr.raj.i@gmail.com</a>
<a href=""mailto:m.us.ad.rra.j.i@gmail.com"">m.us.ad.rra.j.i@gmail.com</a>
<a href=""mailto:musad.r.r.a.j.i@gmail.com"">musad.r.r.a.j.i@gmail.com</a>
<a href=""mailto:musa.drra.j.i@gmail.com"">musa.drra.j.i@gmail.com</a>
<a href=""mailto:m.u.s.a.d.r.r.a.j.i@gmail.com"">m.u.s.a.d.r.r.a.j.i@gmail.com</a>
<a href=""mailto:m.u.s.a.dr.r.aj.i@gmail.com"">m.u.s.a.dr.r.aj.i@gmail.com</a>
<a href=""mailto:m.usa.drr.aji@gmail.com"">m.usa.drr.aji@gmail.com</a>
<a href=""mailto:mus.ad.r.raji@gmail.com"">mus.ad.r.raji@gmail.com</a>
<a href=""mailto:m.usa.dr.raj.i@gmail.com"">m.usa.dr.raj.i@gmail.com</a>
<a href=""mailto:mus.a.d.r.ra.ji@gmail.com"">mus.a.d.r.ra.ji@gmail.com</a>
<a href=""mailto:m.u.sadr.ra.j.i@gmail.com"">m.u.sadr.ra.j.i@gmail.com</a>
<a href=""mailto:m.u.sadr.ra.ji@gmail.com"">m.u.sadr.ra.ji@gmail.com</a>
<a href=""mailto:mu.s.a.drraj.i@gmail.com"">mu.s.a.drraj.i@gmail.com</a>
<a href=""mailto:mu.sa.d.r.ra.j.i@gmail.com"">mu.sa.d.r.ra.j.i@gmail.com</a>
<a href=""mailto:mus.a.d.rra.j.i@gmail.com"">mus.a.d.rra.j.i@gmail.com</a>
<a href=""mailto:mus.ad.rra.j.i@gmail.com"">mus.ad.rra.j.i@gmail.com</a>
<a href=""mailto:mu.s.adr.r.aji@gmail.com"">mu.s.adr.r.aji@gmail.com</a>
<a href=""mailto:mu.s.ad.rr.a.ji@gmail.com"">mu.s.ad.rr.a.ji@gmail.com</a>
<a href=""mailto:mu.s.a.dr.raji@gmail.com"">mu.s.a.dr.raji@gmail.com</a>
<a href=""mailto:mu.sadr.raji@gmail.com"">mu.sadr.raji@gmail.com</a>
<a href=""mailto:m.us.a.drraji@gmail.com"">m.us.a.drraji@gmail.com</a>
<a href=""mailto:mus.a.dr.ra.j.i@gmail.com"">mus.a.dr.ra.j.i@gmail.com</a>
<a href=""mailto:mus.ad.rr.aj.i@gmail.com"">mus.ad.rr.aj.i@gmail.com</a>
<a href=""mailto:mu.sad.r.r.aji@gmail.com"">mu.sad.r.r.aji@gmail.com</a>
<a href=""mailto:m.usa.drra.ji@gmail.com"">m.usa.drra.ji@gmail.com</a>
<a href=""mailto:m.us.a.dr.raj.i@gmail.com"">m.us.a.dr.raj.i@gmail.com</a>
<a href=""mailto:m.us.a.drra.j.i@gmail.com"">m.us.a.drra.j.i@gmail.com</a>
<a href=""mailto:m.usa.dr.raji@gmail.com"">m.usa.dr.raji@gmail.com</a>
<a href=""mailto:mu.s.ad.r.raj.i@gmail.com"">mu.s.ad.r.raj.i@gmail.com</a>
<a href=""mailto:musadr.raji@gmail.com"">musadr.raji@gmail.com</a>
<a href=""mailto:m.us.adr.r.a.j.i@gmail.com"">m.us.adr.r.a.j.i@gmail.com</a>
<a href=""mailto:musadrraj.i@gmail.com"">musadrraj.i@gmail.com</a>
<a href=""mailto:mu.s.a.dr.raj.i@gmail.com"">mu.s.a.dr.raj.i@gmail.com</a>
<a href=""mailto:m.u.sa.drr.aji@gmail.com"">m.u.sa.drr.aji@gmail.com</a>
<a href=""mailto:mu.sa.drraji@gmail.com"">mu.sa.drraji@gmail.com</a>
<a href=""mailto:m.u.sad.r.raji@gmail.com"">m.u.sad.r.raji@gmail.com</a>
<a href=""mailto:mus.a.drr.a.j.i@gmail.com"">mus.a.drr.a.j.i@gmail.com</a>
<a href=""mailto:m.usad.r.ra.ji@gmail.com"">m.usad.r.ra.ji@gmail.com</a>
<a href=""mailto:musad.r.ra.j.i@gmail.com"">musad.r.ra.j.i@gmail.com</a>
<a href=""mailto:mus.ad.rr.a.ji@gmail.com"">mus.ad.rr.a.ji@gmail.com</a>
<a href=""mailto:m.us.a.d.rr.a.ji@gmail.com"">m.us.a.d.rr.a.ji@gmail.com</a>
<a href=""mailto:m.us.a.d.r.r.a.j.i@gmail.com"">m.us.a.d.r.r.a.j.i@gmail.com</a>
<a href=""mailto:m.u.s.a.d.rr.a.ji@gmail.com"">m.u.s.a.d.rr.a.ji@gmail.com</a>
<a href=""mailto:mu.s.ad.r.r.aji@gmail.com"">mu.s.ad.r.r.aji@gmail.com</a>
<a href=""mailto:mus.adr.raji@gmail.com"">mus.adr.raji@gmail.com</a>
<a href=""mailto:m.u.sa.drra.j.i@gmail.com"">m.u.sa.drra.j.i@gmail.com</a>
<a href=""mailto:mus.ad.r.r.a.ji@gmail.com"">mus.ad.r.r.a.ji@gmail.com</a>
<a href=""mailto:mu.sa.d.rr.aji@gmail.com"">mu.sa.d.rr.aji@gmail.com</a>
<a href=""mailto:mus.a.d.r.raji@gmail.com"">mus.a.d.r.raji@gmail.com</a>
<a href=""mailto:mu.s.a.drr.aj.i@gmail.com"">mu.s.a.drr.aj.i@gmail.com</a>
<a href=""mailto:m.usadrr.a.j.i@gmail.com"">m.usadrr.a.j.i@gmail.com</a>
<a href=""mailto:mu.sa.d.rraj.i@gmail.com"">mu.sa.d.rraj.i@gmail.com</a>
<a href=""mailto:m.us.a.drr.aji@gmail.com"">m.us.a.drr.aji@gmail.com</a>
<a href=""mailto:m.us.a.d.rr.aji@gmail.com"">m.us.a.d.rr.aji@gmail.com</a>
<a href=""mailto:m.usa.dr.r.a.ji@gmail.com"">m.usa.dr.r.a.ji@gmail.com</a>
<a href=""mailto:m.usad.rraji@gmail.com"">m.usad.rraji@gmail.com</a>
<a href=""mailto:m.us.a.dr.r.a.j.i@gmail.com"">m.us.a.dr.r.a.j.i@gmail.com</a>
<a href=""mailto:mus.a.d.r.ra.j.i@gmail.com"">mus.a.d.r.ra.j.i@gmail.com</a>
<a href=""mailto:mu.s.adrraj.i@gmail.com"">mu.s.adrraj.i@gmail.com</a>
<a href=""mailto:mus.a.d.r.r.a.j.i@gmail.com"">mus.a.d.r.r.a.j.i@gmail.com</a>
<a href=""mailto:m.u.sad.r.ra.j.i@gmail.com"">m.u.sad.r.ra.j.i@gmail.com</a>
<a href=""mailto:m.us.a.d.r.raj.i@gmail.com"">m.us.a.d.r.raj.i@gmail.com</a>
<a href=""mailto:m.usa.dr.r.aj.i@gmail.com"">m.usa.dr.r.aj.i@gmail.com</a>
<a href=""mailto:m.us.a.d.r.r.a.ji@gmail.com"">m.us.a.d.r.r.a.ji@gmail.com</a>
<a href=""mailto:m.u.sadrra.ji@gmail.com"">m.u.sadrra.ji@gmail.com</a>
<a href=""mailto:mu.s.ad.r.r.aj.i@gmail.com"">mu.s.ad.r.r.aj.i@gmail.com</a>
<a href=""mailto:m.us.a.dr.r.a.ji@gmail.com"">m.us.a.dr.r.a.ji@gmail.com</a>
<a href=""mailto:mus.a.d.r.r.aj.i@gmail.com"">mus.a.d.r.r.aj.i@gmail.com</a>
<a href=""mailto:mus.a.d.rr.a.ji@gmail.com"">mus.a.d.rr.a.ji@gmail.com</a>
<a href=""mailto:musad.rra.ji@gmail.com"">musad.rra.ji@gmail.com</a>
<a href=""mailto:m.u.sad.r.r.aj.i@gmail.com"">m.u.sad.r.r.aj.i@gmail.com</a>
<a href=""mailto:m.usa.d.r.raj.i@gmail.com"">m.usa.d.r.raj.i@gmail.com</a>
<a href=""mailto:musa.d.rr.a.j.i@gmail.com"">musa.d.rr.a.j.i@gmail.com</a>
<a href=""mailto:mus.adr.raj.i@gmail.com"">mus.adr.raj.i@gmail.com</a>
<a href=""mailto:m.u.sa.d.r.r.aj.i@gmail.com"">m.u.sa.d.r.r.aj.i@gmail.com</a>
<a href=""mailto:musad.rr.a.j.i@gmail.com"">musad.rr.a.j.i@gmail.com</a>
<a href=""mailto:m.u.sa.d.r.r.a.ji@gmail.com"">m.u.sa.d.r.r.a.ji@gmail.com</a>
<a href=""mailto:m.u.s.ad.r.ra.j.i@gmail.com"">m.u.s.ad.r.ra.j.i@gmail.com</a>
<a href=""mailto:m.us.a.d.r.r.aji@gmail.com"">m.us.a.d.r.r.aji@gmail.com</a>
<a href=""mailto:m.u.sa.drr.aj.i@gmail.com"">m.u.sa.drr.aj.i@gmail.com</a>
<a href=""mailto:mu.sa.dr.raji@gmail.com"">mu.sa.dr.raji@gmail.com</a>
<a href=""mailto:m.us.adr.r.aj.i@gmail.com"">m.us.adr.r.aj.i@gmail.com</a>
<a href=""mailto:musa.d.rr.a.ji@gmail.com"">musa.d.rr.a.ji@gmail.com</a>
<a href=""mailto:m.u.sadr.r.a.j.i@gmail.com"">m.u.sadr.r.a.j.i@gmail.com</a>
<a href=""mailto:mus.adr.r.a.ji@gmail.com"">mus.adr.r.a.ji@gmail.com</a>
<a href=""mailto:m.u.s.a.dr.r.a.ji@gmail.com"">m.u.s.a.dr.r.a.ji@gmail.com</a>
<a href=""mailto:m.usa.drr.aj.i@gmail.com"">m.usa.drr.aj.i@gmail.com</a>
<a href=""mailto:m.u.s.a.drr.a.j.i@gmail.com"">m.u.s.a.drr.a.j.i@gmail.com</a>
<a href=""mailto:m.u.s.a.d.r.r.aj.i@gmail.com"">m.u.s.a.d.r.r.aj.i@gmail.com</a>
<a href=""mailto:mu.sad.rr.a.j.i@gmail.com"">mu.sad.rr.a.j.i@gmail.com</a>
<a href=""mailto:mu.sadr.r.a.j.i@gmail.com"">mu.sadr.r.a.j.i@gmail.com</a>
<a href=""mailto:mus.a.drraji@gmail.com"">mus.a.drraji@gmail.com</a>
<a href=""mailto:m.u.s.a.d.rr.a.j.i@gmail.com"">m.u.s.a.d.rr.a.j.i@gmail.com</a>
<a href=""mailto:m.usad.rr.aj.i@gmail.com"">m.usad.rr.aj.i@gmail.com</a>
<a href=""mailto:mu.s.ad.rr.aji@gmail.com"">mu.s.ad.rr.aji@gmail.com</a>
<a href=""mailto:m.us.ad.r.r.a.j.i@gmail.com"">m.us.ad.r.r.a.j.i@gmail.com</a>
<a href=""mailto:m.u.s.adrra.ji@gmail.com"">m.u.s.adrra.ji@gmail.com</a>
<a href=""mailto:m.u.sa.dr.r.a.j.i@gmail.com"">m.u.sa.dr.r.a.j.i@gmail.com</a>
<a href=""mailto:musa.d.r.ra.j.i@gmail.com"">musa.d.r.ra.j.i@gmail.com</a>
<a href=""mailto:m.usadr.raj.i@gmail.com"">m.usadr.raj.i@gmail.com</a>
<a href=""mailto:m.us.ad.r.r.aji@gmail.com"">m.us.ad.r.r.aji@gmail.com</a>
<a href=""mailto:m.usa.drraj.i@gmail.com"">m.usa.drraj.i@gmail.com</a>
<a href=""mailto:musadrra.ji@gmail.com"">musadrra.ji@gmail.com</a>
<a href=""mailto:m.u.s.a.drraji@gmail.com"">m.u.s.a.drraji@gmail.com</a>
<a href=""mailto:musa.d.r.raj.i@gmail.com"">musa.d.r.raj.i@gmail.com</a>
<a href=""mailto:mus.ad.r.ra.ji@gmail.com"">mus.ad.r.ra.ji@gmail.com</a>
<a href=""mailto:musad.r.r.aji@gmail.com"">musad.r.r.aji@gmail.com</a>
<a href=""mailto:m.u.s.a.d.rraji@gmail.com"">m.u.s.a.d.rraji@gmail.com</a>
<a href=""mailto:musadr.r.aj.i@gmail.com"">musadr.r.aj.i@gmail.com</a>
<a href=""mailto:m.usa.d.r.r.a.j.i@gmail.com"">m.usa.d.r.r.a.j.i@gmail.com</a>
<a href=""mailto:musa.d.rra.ji@gmail.com"">musa.d.rra.ji@gmail.com</a>
<a href=""mailto:musad.rr.a.ji@gmail.com"">musad.rr.a.ji@gmail.com</a>
<a href=""mailto:m.u.sad.rr.a.j.i@gmail.com"">m.u.sad.rr.a.j.i@gmail.com</a>
<a href=""mailto:mu.s.a.dr.ra.j.i@gmail.com"">mu.s.a.dr.ra.j.i@gmail.com</a>
<a href=""mailto:m.u.sad.rr.aji@gmail.com"">m.u.sad.rr.aji@gmail.com</a>
<a href=""mailto:musa.d.rr.aji@gmail.com"">musa.d.rr.aji@gmail.com</a>
<a href=""mailto:mu.sa.d.r.r.a.ji@gmail.com"">mu.sa.d.r.r.a.ji@gmail.com</a>
<a href=""mailto:mus.a.d.r.r.a.ji@gmail.com"">mus.a.d.r.r.a.ji@gmail.com</a>
<a href=""mailto:m.u.sadr.r.a.ji@gmail.com"">m.u.sadr.r.a.ji@gmail.com</a>
<a href=""mailto:m.u.sadr.raj.i@gmail.com"">m.u.sadr.raj.i@gmail.com</a>
<a href=""mailto:mus.a.drr.a.ji@gmail.com"">mus.a.drr.a.ji@gmail.com</a>
<a href=""mailto:m.u.s.ad.r.r.aj.i@gmail.com"">m.u.s.ad.r.r.aj.i@gmail.com</a>
<a href=""mailto:m.u.s.adr.raji@gmail.com"">m.u.s.adr.raji@gmail.com</a>
<a href=""mailto:mu.s.a.d.r.ra.j.i@gmail.com"">mu.s.a.d.r.ra.j.i@gmail.com</a>
<a href=""mailto:mu.s.a.dr.r.a.ji@gmail.com"">mu.s.a.dr.r.a.ji@gmail.com</a>
<a href=""mailto:m.usa.dr.ra.ji@gmail.com"">m.usa.dr.ra.ji@gmail.com</a>
<a href=""mailto:m.u.sa.dr.raj.i@gmail.com"">m.u.sa.dr.raj.i@gmail.com</a>
<a href=""mailto:m.u.s.adrr.a.j.i@gmail.com"">m.u.s.adrr.a.j.i@gmail.com</a>
<a href=""mailto:mu.sa.drr.a.j.i@gmail.com"">mu.sa.drr.a.j.i@gmail.com</a>
<a href=""mailto:mus.ad.r.r.a.j.i@gmail.com"">mus.ad.r.r.a.j.i@gmail.com</a>
<a href=""mailto:musa.dr.raj.i@gmail.com"">musa.dr.raj.i@gmail.com</a>
<a href=""mailto:mu.sa.drr.aji@gmail.com"">mu.sa.drr.aji@gmail.com</a>
<a href=""mailto:mu.s.a.d.rraj.i@gmail.com"">mu.s.a.d.rraj.i@gmail.com</a>
<a href=""mailto:m.u.s.adr.r.aji@gmail.com"">m.u.s.adr.r.aji@gmail.com</a>
<a href=""mailto:musad.r.raj.i@gmail.com"">musad.r.raj.i@gmail.com</a>
<a href=""mailto:m.u.s.a.dr.raji@gmail.com"">m.u.s.a.dr.raji@gmail.com</a>
<a href=""mailto:mu.sa.drraj.i@gmail.com"">mu.sa.drraj.i@gmail.com</a>
<a href=""mailto:m.u.sa.dr.r.a.ji@gmail.com"">m.u.sa.dr.r.a.ji@gmail.com</a>
<a href=""mailto:m.usad.r.r.a.ji@gmail.com"">m.usad.r.r.a.ji@gmail.com</a>
<a href=""mailto:mu.sadr.r.aj.i@gmail.com"">mu.sadr.r.aj.i@gmail.com</a>
<a href=""mailto:m.u.s.a.d.r.raji@gmail.com"">m.u.s.a.d.r.raji@gmail.com</a>
<a href=""mailto:m.u.s.adrraji@gmail.com"">m.u.s.adrraji@gmail.com</a>
<a href=""mailto:mu.sadrra.j.i@gmail.com"">mu.sadrra.j.i@gmail.com</a>
<a href=""mailto:m.us.adrraji@gmail.com"">m.us.adrraji@gmail.com</a>
<a href=""mailto:mu.s.a.d.rra.ji@gmail.com"">mu.s.a.d.rra.ji@gmail.com</a>"
NkCLq6z4,Bloxfruit Script (working),Bacon_Script,JavaScript,Saturday 1st of July 2023 01:00:42 PM CDT,"--Bloxfruit Script--
loadstring(game:HttpGet(""https://raw.githubusercontent.com/MAMAhub1/Mmahub/main/README.md""))()

--Bloxfruit Script--
loadstring(game:HttpGet(""https://raw.githubusercontent.com/ZPSXHUB/Z/main/MeMayBeo""))()
"
wwHGmU7L,Dragon warrior simulator Script 2,Bacon_Script,JavaScript,Saturday 1st of July 2023 12:52:08 PM CDT,"local args = {
    [1] = 33,
    [2] = 1
}

game:GetService(""ReplicatedStorage""):WaitForChild(""Remotes""):WaitForChild(""ServerEvent_GameManager""):FireServer(unpack(args))
local args = {
    [1] = 33,
    [2] = 2
}

game:GetService(""ReplicatedStorage""):WaitForChild(""Remotes""):WaitForChild(""ServerEvent_GameManager""):FireServer(unpack(args))
local args = {
    [1] = 33,
    [2] = 3
}

game:GetService(""ReplicatedStorage""):WaitForChild(""Remotes""):WaitForChild(""ServerEvent_GameManager""):FireServer(unpack(args))
local args = {
    [1] = 33,
    [2] = 4
}

game:GetService(""ReplicatedStorage""):WaitForChild(""Remotes""):WaitForChild(""ServerEvent_GameManager""):FireServer(unpack(args))
local args = {
    [1] = 33,
    [2] = 5
}

game:GetService(""ReplicatedStorage""):WaitForChild(""Remotes""):WaitForChild(""ServerEvent_GameManager""):FireServer(unpack(args))
local args = {
    [1] = 33,
    [2] = 6
}

game:GetService(""ReplicatedStorage""):WaitForChild(""Remotes""):WaitForChild(""ServerEvent_GameManager""):FireServer(unpack(args))
local args = {
    [1] = 33,
    [2] = 7
}

game:GetService(""ReplicatedStorage""):WaitForChild(""Remotes""):WaitForChild(""ServerEvent_GameManager""):FireServer(unpack(args))
local args = {
    [1] = 33,
    [2] = 8
}

game:GetService(""ReplicatedStorage""):WaitForChild(""Remotes""):WaitForChild(""ServerEvent_GameManager""):FireServer(unpack(args))
local args = {
    [1] = 33,
    [2] = 9
}

game:GetService(""ReplicatedStorage""):WaitForChild(""Remotes""):WaitForChild(""ServerEvent_GameManager""):FireServer(unpack(args))
local args = {
    [1] = 33,
    [2] = 10
}

game:GetService(""ReplicatedStorage""):WaitForChild(""Remotes""):WaitForChild(""ServerEvent_GameManager""):FireServer(unpack(args))
local args = {
    [1] = 33,
    [2] = 11
}

game:GetService(""ReplicatedStorage""):WaitForChild(""Remotes""):WaitForChild(""ServerEvent_GameManager""):FireServer(unpack(args))
local args = {
    [1] = 33,
    [2] = 12
}

game:GetService(""ReplicatedStorage""):WaitForChild(""Remotes""):WaitForChild(""ServerEvent_GameManager""):FireServer(unpack(args))"
nL5GSguj,Consumer_UI,st3v24,Python,Saturday 1st of July 2023 12:42:43 PM CDT,"import tkinter as tk
from tkinter import ttk
from tkinter import messagebox
import consumer
from PIL import ImageTk, Image

connection = None
while connection is None:
    connection = consumer.connect_to_mysql()
cur = connection.cursor(buffered=True)


def get_usr_pwd():
    usr = username.get()
    pwd = password.get()
    if consumer.login_check(usr, pwd, cur) == True:
        success_label = tk.Label(login_frame, text=""Success"")
        success_label.place(x=550, y=250)
        login_frame.forget()
        menu_frame.place(x=0, y=0)
        menu_frame.config(height=400, width=800)
    else:
        fail_label = tk.Label(login_frame, text=""Fail.Try Again"")
        messagebox.showinfo(title=""Error"", message=""Wrong credentials, please try again"")
        fail_label.place(x=550, y=220)
        
def flight_table():
    flight_table = tk.Tk()
    cur.execute(""SELECT * FROM flight_details"")
    data = cur.fetchall()
    table = ttk.Treeview(flight_table)
    columns = (""Flight Name"", ""Flight Number"", ""Number of Seats"", ""Date"", ""Start"", ""Boarding Time"", ""Route"", ""Destination"")
    table['columns'] = columns
    table['show'] = 'headings'
    for col in columns:
        table.heading(col, text=col)
    for row in data:
        table.insert('', 'end', values=row)
    scrollbar = ttk.Scrollbar(flight_table, orient='vertical', command=table.yview)
    table.configure(yscroll=scrollbar.set)
    table.pack(side='left', fill='both', expand=True)
    scrollbar.pack(side='right', fill='y')
    flight_table.mainloop()

def ticket_table():
    cur.execute(f""SELECT * FROM booked_tickets where ticket_name = '{username.get()}'"")
    if cur.rowcount > 0:
        ticket_table = tk.Tk()
        data = cur.fetchall()
        table = ttk.Treeview(ticket_table)
        columns = (""Ticket No"", ""Ticket Name"", ""Boarding Point"", ""Destination"", ""Time"")
        table['columns'] = columns
        table['show'] = 'headings'
        for col in columns:
            table.heading(col, text=col)
        for row in data:
            table.insert('', 'end', values=row)
        scrollbar = ttk.Scrollbar(ticket_table, orient='vertical', command=table.yview)
        table.configure(yscroll=scrollbar.set)
        table.pack(side='left', fill='both', expand=True)
        scrollbar.pack(side='right', fill='y')
        ticket_table.mainloop()
    else:
        messagebox.showerror(""Error"",""No Data"")

def ticket_booking_ui():
    ticket_booking_ui = tk.Tk()
    ticket_booking_ui.geometry(""800x400"")
    ticket_booking_ui.title(""Book Tickets"")
    
    
    d = tk.StringVar()
    ttk.Label(ticket_booking_ui, text = ""Select Boarding Point :"", 
        font = (""Times New Roman"", 10)).grid(column = 0, 
        row = 0, padx = 10, pady = 25)
    startchosen = ttk.Combobox(ticket_booking_ui, width = 15, 
                            textvariable = d)
    cur.execute(""SELECT DISTINCT Start from flight_details"")
    start_list = [row[0] for row in cur]
    startchosen[""values""] = start_list
    startchosen.grid(row=1,column=0,padx = 10, pady = 5)

    m = tk.StringVar()
    ttk.Label(ticket_booking_ui, text = ""Select Destination :"", 
            font = (""Times New Roman"", 10)).grid(column = 1, 
            row = 0, padx = 10, pady = 25)
    endchosen = ttk.Combobox(ticket_booking_ui, width = 27, 
                            textvariable = m)
    cur.execute(""SELECT DISTINCT Destination from flight_details"")
    end_list = [row[0] for row in cur]
    endchosen['values'] = end_list
    endchosen.grid(column = 1, row = 1)

    

    ttk.Label(ticket_booking_ui, text="" Flight Number : "",font = (""Times New Roman"", 10)).grid(row = 0,column=3)
    fname = tk.StringVar()
    flightchosen = ttk.Combobox(ticket_booking_ui,width = 15,textvariable=fname)
    flightchosen.grid(row=1,column=3)

    ttk.Label(ticket_booking_ui, text="" Flight Details  "",font = (""Times New Roman"", 10)).grid(row = 2,column=3)
    flight_details = tk.Text(ticket_booking_ui,height=10,width=30)
    flight_details.grid(row=3,column=3)

    
    
    def get_flights():
        start = startchosen.get()
        end = endchosen.get()
        query = f""SELECT Flight_Number FROM flight_details WHERE Start = '{start}' and Destination = '{end}'""
        cur.execute(query)
        #exists = cur.fetchone()
        flight_details_data = cur.fetchall()
        if cur.rowcount > 0:
            flight_nos = []
            for row in flight_details_data:
                flight_nos.append(row[0])
            
            flightchosen[""values""]=flight_nos
            messagebox.showinfo(""Success"",""Flights Found, Please Check Available Flights"")
        else:
            messagebox.showerror(title=""Error"",message=""No Flights on Selected Date"")

    def get_flight_details():
        flight_no = flightchosen.get()
        if len(flight_no) > 0:
            query = f'SELECT * FROM flight_details WHERE Flight_Number = ""{flight_no}""'
            cur.execute(query)
            flight_details_data = cur.fetchone()
            details = f'''Flight Name     : {flight_details_data[0]}\nSeats Available : {flight_details_data[2]}\nDate            : {flight_details_data[3]}\nStart           : {flight_details_data[4]}\nBoarding Time   : {flight_details_data[5]}\nRoute Type      : {flight_details_data[6]}\nDestination     : {flight_details_data[7]}\n'''
            flight_details.insert(tk.END,details)

            def book_ticket():
                res = messagebox.askquestion(""Confirmation"",""Would you like to book a ticket for this flight?"")
                if res == 'yes':
                        cur.execute('SELECT MAX(ticket_no) FROM booked_tickets')  # for generating ticket numbers in an ordered manner
                        h = cur.fetchone()
                        if h[0]:  # if there are 1 or more rows
                            h = h[0] + 1  # since h[0] would be the max ticket number, h+1 would be the new ticket number
                        else:  # if there are no rows
                            h = 10000
                        cur.execute(f'INSERT INTO booked_tickets VALUES({h},""{username.get()}"",""{flight_details_data[4]}"",""{flight_details_data[7]}"",""{flight_details_data[5]}"",""{flight_details_data[1]}"",""{flight_details_data[3]}"")')
                        cur.execute(f'UPDATE flight_details SET Number_Of_Seats = Number_Of_Seats-1 WHERE Flight_Number = ""{flight_details_data[1]}"" ')
                        messagebox.showinfo(""Success"",""Ticket Booked Succesfully"")
                        connection.commit()
                
            book_button = tk.Button(ticket_booking_ui, text=""Book Ticket"",command=book_ticket,height=1,width=25)
            book_button.grid(row=5,column=3)

        else:
            messagebox.showerror(title=""Error"",message=""No Flights Selected"")


    
    date_button = tk.Button(ticket_booking_ui,text = ""Get Flights"",command = get_flights,height=1, width=25)
    date_button.grid(row = 2, column=1)
    flight_button = tk.Button(ticket_booking_ui,text = ""Get Flight Details"",command = get_flight_details,height=1, width=25)
    flight_button.grid(row=4,column=3)

def request_cancellation():
    cur.execute(f""SELECT ticket_no FROM booked_tickets WHERE ticket_name = '{username.get()}' "")
    if cur.rowcount > 0:
        request_ui = tk.Tk()
        request_ui.geometry(""400x400"")
        request_ui.title(""Request Cancellation"")
        ticket_list = [row[0] for row in cur]
        ttk.Label(request_ui, text=""Select Ticket "",font = (""Times New Roman"", 10)).grid(row = 0,column=0,padx=5,pady=5)
        ticketchosen = ttk.Combobox(request_ui,width = 15)
        ticketchosen[""values""] = ticket_list
        ticketchosen.grid(row=1,column=0,padx=5,pady=5)
        ticket_details = tk.Text(request_ui,height=10,width=30)
        ticket_details.grid(row=2,column=0)
        def confirm_ticket_no():
            ticket_no = ticketchosen.get()
            cur.execute(f""SELECT * FROM booked_tickets WHERE ticket_no = {ticket_no}"")
            data = cur.fetchone()
            details = f'Ticket Name     : {data[1]}\nBoarding Point  : {data[2]}\nDestination     : {data[3]}\nBoarding Time   : {data[4]}\nFlight Number   : {data[5]}\n'
            ticket_details.insert(tk.END,details)
            def cancel_ticket_no():
                res = messagebox.askquestion(""Confirmation"",""Would you like to request cancellation for this ticket?"")
                if res == 'yes':
                    cur.execute('SELECT MAX(request_id) FROM requests')  # for generating ticket numbers in an ordered manner
                    h = cur.fetchone()
                    if h[0]:  # if there are 1 or more rows
                        h = h[0] + 1  # since h[0] would be the max ticket number, h+1 would be the new ticket number
                    else:  # if there are no rows
                        h = 100
                    cur.execute(f""INSERT INTO requests(request_id,ticket_no,ticket_name,flight_no) VALUES({h},{ticket_no},'{data[1]}','{data[5]}')"")
                    connection.commit()
                    messagebox.showinfo(""Success"",""Request Sent Succesfully"")
            cancel_ticket = tk.Button(request_ui,text=""Cancel Ticket"",height=1,width=25,command=cancel_ticket_no)
            cancel_ticket.grid(row=4,column=0,padx=5,pady=5)
        confirm_ticket = tk.Button(request_ui,text = 'Confirm Ticket',command =confirm_ticket_no,height=1,width=25)
        confirm_ticket.grid(row=3,column=0,padx=5,pady=5)  
    else:
        messagebox.showerror(""Error"",""No Tickets Booked"")

def request_table():
    cur.execute(f""SELECT * from requests where ticket_name ='{username.get()}'"")
    if cur.rowcount > 0:
        request_table = tk.Tk()
        request_table.title(""Current Requests"")
        data = cur.fetchall()
        table = ttk.Treeview(request_table)
        columns = (""Request ID"",""Ticket No"",""Ticket Name"",""Flight Number"",""Status"")
        table['columns'] = columns
        table['show'] = 'headings'
        for col in columns:
            table.heading(col, text=col)
        for row in data:
            table.insert('', 'end', values=row)
        scrollbar = ttk.Scrollbar(request_table, orient='vertical', command=table.yview)
        table.configure(yscroll=scrollbar.set)
        table.pack(side='left', fill='both', expand=True)
        scrollbar.pack(side='right', fill='y')
        request_table.mainloop()
    else:
        messagebox.showerror(""Error"",""No Data"")

def sign_up():
    def create_account():
        username = username_entry.get()
        password = password_entry.get()
        confirm_password = confirm_password_entry.get()

        if password == confirm_password:
            query = f""INSERT INTO consumer (username, password) VALUES ('{username}', '{password}')""
            cur.execute(query)
            connection.commit()
            messagebox.showinfo(""Success"", ""Account created successfully!"")
            sign_up_window.destroy()
        else:
            messagebox.showerror(""Error"", ""Passwords do not match. Please try again."")

    # Create a new window for the sign-up form
    sign_up_window = tk.Toplevel()
    sign_up_window.title(""Sign Up"")
    sign_up_window.geometry(""200x200"")

    # Username label and entry
    username_label = tk.Label(sign_up_window, text=""Username:"")
    username_label.pack()
    username_entry = tk.Entry(sign_up_window)
    username_entry.pack()

    # Password label and entry
    password_label = tk.Label(sign_up_window, text=""Password:"")
    password_label.pack()
    password_entry = tk.Entry(sign_up_window, show=""*"")
    password_entry.pack()

    # Confirm password label and entry
    confirm_password_label = tk.Label(sign_up_window, text=""Confirm Password:"")
    confirm_password_label.pack()
    confirm_password_entry = tk.Entry(sign_up_window, show=""*"")
    confirm_password_entry.pack()

    sign_up_button = tk.Button(sign_up_window, text=""Sign Up"", command=create_account)
    sign_up_button.pack()




 

root = tk.Tk()
root.geometry('800x400')
root.title(""Consumer"")

login_frame = tk.Frame(root)
login_frame.place(x=0, y=0)
login_frame.config(height=400, width=800)

username_label = tk.Label(login_frame, text='Enter Username')
username_label.place(x=500, y=50)
username = tk.Entry(login_frame, width=30)
username.place(x=500, y=75)
password_label = tk.Label(login_frame, text=""Enter Password"")
password_label.place(x=500, y=100)
password = tk.Entry(login_frame, width=30)
password.place(x=500, y=125)
login_button = tk.Button(login_frame, text='Login', command=get_usr_pwd, height=1, width=25)
login_button.place(x=500, y=175)
sign_up_button=tk.Button(login_frame,text='Sign Up',command=sign_up,height=1,width=25)
sign_up_button.place(x=500,y=250)
login_frame.pack()


img = ImageTk.PhotoImage(Image.open(r'C:\Users\stevi\Downloads\219970.png'))
image_frame = tk.Frame(login_frame)
image_frame.place(x=-100, y=0)
image_frame.config(height=10, width=10)
image_label = tk.Label(image_frame, image=img)
image_label.pack()

menu_frame = tk.Frame(root)
check_flight_details = tk.Button(menu_frame, text=""Check Flight Details"", command=flight_table, height=1, width=25)
check_flight_details.place(x=550, y=50)

book_tickets_button = tk.Button(menu_frame, text=""Book Tickets"", command=ticket_booking_ui, height=1, width=25)
book_tickets_button.place(x=550, y=100)

ticket_check_button = tk.Button(menu_frame,text = ""Check Booked Tickets"",command = ticket_table,height=1,width=25)
ticket_check_button.place(x = 550, y = 150)

request_button = tk.Button(menu_frame,text = ""Request Cancellation"",command = request_cancellation,height=1,width=25)
request_button.place(x = 550, y = 200)

request_table_button = tk.Button(menu_frame,text = ""Request Status Check"",command = request_table,height=1,width=25)
request_table_button.place(x = 550, y = 250)

img1 = ImageTk.PhotoImage(Image.open(r""C:\Users\stevi\Downloads\ariplene3.jpg""))
image_frame1 = tk.Frame(menu_frame)
image_frame1.place(x=0, y=0)
image_frame1.config(height=400, width=400)
image_label1 = tk.Label(image_frame1, image=img1)
image_label1.pack()

root.mainloop()
"
Nv7pXs0W,Consumer,st3v24,Python,Saturday 1st of July 2023 12:41:49 PM CDT,"import sys
import time
import datetime
import mysql.connector as msc

def connect_to_mysql():

    try:
        connection_ = msc.connect(host = 'localhost', user = 'root', password = '1234',database = 'airline_ticket')
    except msc.ProgrammingError:
        print(""Connection Error"")
        connection_ = None
    return connection_




connection = None
while connection is None:
    connection = connect_to_mysql()

cursor = connection.cursor()    

def login_check(username,passwd,cur):
    cur.execute(f""Select * from consumer where username = '{username}'"")
    consumer_details = cur.fetchone()
    if cur.rowcount > 0:
        if consumer_details[1] == passwd:
            return True
        else:
            return False
    else:
        return False

"
iYGJiTEc,Admin,st3v24,Python,Saturday 1st of July 2023 12:39:19 PM CDT,"import sys
import time
import datetime
import mysql.connector as msc

def connect_to_mysql():

    try:
        connection_ = msc.connect(host = 'localhost', user = 'root', password = '1234',database = 'airline_ticket')
    except msc.ProgrammingError:
        print(""Connection Error"")
        connection_ = None
    return connection_




connection = None
while connection is None:
    connection = connect_to_mysql()

cursor = connection.cursor()    

def login_check(usr,pwd,cur):
    cur.execute(""Select * from admin_login"")
    admin_details = cur.fetchall()
    for record in admin_details:
        if record[0] == usr:
            if record[1] == pwd:
                return True
            else:
                return False
        else:
            return False"
sZ6Yxr0V,Admin_UI,st3v24,Python,Saturday 1st of July 2023 12:36:52 PM CDT,"import tkinter as tk
from tkinter import ttk
from tkinter import messagebox
import admin
from PIL import ImageTk, Image
from tkcalendar import Calendar

connection = None
while connection is None:
    connection = admin.connect_to_mysql()
cur = connection.cursor(buffered=True)

def get_usr_pwd():
    usr = username.get()
    pwd = password.get()
    if admin.login_check(usr,pwd,cur) == True:
        success_label = tk.Label(login_frame, text = ""Success"")
        success_label.place(x = 550, y = 250)
        login_frame.forget()
        menu_frame.place(x = 0, y = 0)
        menu_frame.config(height = 400, width = 800) 
    else:
        fail_label = tk.Label(login_frame, text = ""Fail"")
        fail_label.place(x = 550, y = 250)

def flight_table():
    flight_table = tk.Tk()
    flight_table.title(""Current Flights"")
    cur.execute(""Select * from flight_details"")
    data = cur.fetchall()
    table = ttk.Treeview(flight_table)
    columns = (""Flight Name"",""Flight Number"",""Number of Seats"",""Date"",""Start"",""Boarding Time"",""Route"", ""Destination"")
    table['columns'] = columns
    table['show'] = 'headings'
    for col in columns:
        table.heading(col, text = col)
    for row in data:
        table.insert('','end',values = row,tags=row[1])
    scrollbar = ttk.Scrollbar(flight_table, orient='vertical', command=table.yview)
    table.configure(yscroll=scrollbar.set)
    table.pack(side='left', fill='both', expand=True)
    scrollbar.pack(side='right', fill='y')
    flight_table.mainloop()

def ticket_table():
    cur.execute(""SELECT * FROM booked_tickets"")
    if cur.rowcount > 0:
        ticket_table = tk.Tk()
        ticket_table.title(""Currently Booked Tickets"")
        data = cur.fetchall()
        table = ttk.Treeview(ticket_table)
        columns = (""Ticket No"", ""Ticket Name"", ""Boarding Point"", ""Destination"", ""Time"",""Flight Number"",""Date"")
        table['columns'] = columns
        table['show'] = 'headings'
        for col in columns:
            table.heading(col, text=col)
        for row in data:
            table.insert('', 'end', values=row)
        scrollbar = ttk.Scrollbar(ticket_table, orient='vertical', command=table.yview)
        table.configure(yscroll=scrollbar.set)
        table.pack(side='left', fill='both', expand=True)
        scrollbar.pack(side='right', fill='y')
        ticket_table.mainloop()
    else:
        messagebox.showerror(""Error"",""No Data"")

def user_table():
    cur.execute(""SELECT username FROM consumer"")
    if cur.rowcount > 0:
        user_table = tk.Tk()
        user_table.title(""Users"")
        data = cur.fetchall()
        table = ttk.Treeview(user_table)
        columns = (""Username"",)
        table['columns'] = columns
        table['show'] = 'headings'
        for col in columns:
            table.heading(col, text=col)
        for row in data:
            table.insert('', 'end', values=row)
        scrollbar = ttk.Scrollbar(user_table, orient='vertical', command=table.yview)
        table.configure(yscroll=scrollbar.set)
        table.pack(side='left', fill='both', expand=True)
        scrollbar.pack(side='right', fill='y')
        user_table.mainloop()
    else:
        messagebox.showerror(""Error"",""No Data"")


def flight_details_add_ui():
    def flight_details_add():
        date = flight_date.get_date()
        flight_details = (flight_name_box.get(),flight_number_box.get(),int(flight_seats.get()),date,flight_start.get(),flight_time.get(),flight_route.get(),flight_destination.get())
        query = ""INSERT INTO flight_details VALUES("" \
            f'""{flight_details[0]}"", ' \
            f'""{flight_details[1]}"", ' \
            f'""{flight_details[2]}"", ' \
            f'""{flight_details[3]}"", ' \
            f'""{flight_details[4]}"", ' \
            f'""{flight_details[5]}"", ' \
            f'""{flight_details[6]}"", ' \
            f'""{flight_details[7]}"")'
        cur.execute(query)
        connection.commit()
        messagebox.showinfo(title=""Query Execution"",message=""Query Executed Succesfully"")
              
    flight_details_add_ui = tk.Tk()
    flight_details_add_ui.geometry('800x400')
    flight_details_add_ui.title(""Add Flight Details"")
    tk.Label(flight_details_add_ui,text = ""Enter Flight Name"").grid(row=0,column=0,padx=5,pady=5)
    flight_name_box = tk.Entry(flight_details_add_ui,width = 30)
    flight_name_box.grid(row=1,column =0,padx=5,pady=5)
    tk.Label(flight_details_add_ui, text = ""Enter Flight Number"").grid(row = 0, column = 1, padx=5,pady=5)
    flight_number_box = tk.Entry(flight_details_add_ui, width = 30)
    flight_number_box.grid(row=1,column=1,padx=5,pady=5)
    tk.Label(flight_details_add_ui,text = ""Enter no of seats"").grid(row=2,column=0,padx=5,pady=5)
    flight_seats = tk.Entry(flight_details_add_ui,width = 30)
    flight_seats.grid(row=3,column=0,padx=5,pady=5)
    tk.Label(flight_details_add_ui,text = ""Enter Date"").grid(row=5,column=0,padx=5,pady=5)
    flight_date = Calendar(flight_details_add_ui, selectmode = 'day',date_pattern = 'yyyy-MM-dd')
    flight_date.grid(row=6,column=0,padx=20,pady=10)
    tk.Label(flight_details_add_ui,text=""Enter Starting Location"").grid(row=0,column=2,padx=5,pady=5)
    flight_start = tk.Entry(flight_details_add_ui,width = 30)
    flight_start.grid(row=1,column=2,padx=5,pady=5)
    tk.Label(flight_details_add_ui,text = ""Enter Boarding Time(HH:MM:SS)"").grid(row=2,column=1,padx=20,pady=5)
    flight_time = tk.Entry(flight_details_add_ui,width=30)
    flight_time.grid(row=3,column=1,padx=20,pady=5)
    tk.Label(flight_details_add_ui,text = ""Enter Destination"").grid(row=2,column=2,padx=20,pady=5)
    flight_destination = tk.Entry(flight_details_add_ui,width = 30)
    flight_destination.grid(row=3,column=2,padx=20,pady=5)
    tk.Label(flight_details_add_ui,text = ""Enter Route Type"").grid(row=5,column=1,padx=5,pady=5)
    flight_route = tk.Entry(flight_details_add_ui,width=30)
    flight_route.grid(row=5,column=2,padx=5,pady=5)
    apply_button = tk.Button(flight_details_add_ui,text=""Apply"",command = flight_details_add,height=1,width=25)
    apply_button.grid(row = 6,column=2)

    flight_details_add_ui.mainloop()

def request_table():
    cur.execute(""SELECT * from requests"")
    if cur.rowcount > 0:
        request_table = tk.Tk()
        request_table.title(""Current Requests"")
        data = cur.fetchall()
        table = ttk.Treeview(request_table)
        columns = (""Request ID"",""Ticket No"",""Ticket Name"",""Flight Number"",""Status"")
        table['columns'] = columns
        table['show'] = 'headings'
        for col in columns:
            table.heading(col, text=col)
        for row in data:
            table.insert('', 'end', values=row)
        scrollbar = ttk.Scrollbar(request_table, orient='vertical', command=table.yview)
        table.configure(yscroll=scrollbar.set)
        table.pack(side='left', fill='both', expand=True)
        scrollbar.pack(side='right', fill='y')
        request_table.mainloop()
    else:
        messagebox.showerror(""Error"",""No Data"")

def request_function():
    cur.execute(""SELECT * FROM requests where status = 'PENDING'"")
    if cur.rowcount > 0:
        request_ui = tk.Tk()
        request_ui.geometry(""800x400"")
        request_ui.title(""Request Functions"")

        r = tk.StringVar()
        ttk.Label(request_ui, text = ""Select Request :"", 
            font = (""Times New Roman"", 10)).grid(column = 0, 
            row = 0, padx = 10, pady = 25)
        req_id = ttk.Combobox(request_ui, width = 15, 
                                textvariable = r)
        cur.execute(""SELECT request_id FROM requests"")
        req_id_list = [row[0] for row in cur]
        req_id[""values""] = req_id_list
        req_id.grid(row=0,column=1,padx = 10, pady = 5)

        ttk.Label(request_ui, text="" Request Details  "",font = (""Times New Roman"", 10)).grid(row = 1,column=0)
        request_details = tk.Text(request_ui,height=10,width=30)
        request_details.grid(row=2,column=0,padx=10)
        def req_details():
            req_no = req_id.get()
            if len(req_no) > 0:
                cur.execute(f""SELECT * FROM requests where request_id = {req_no}"")
                req = cur.fetchone()
                details = f""""""Request ID  : {req[0]}\nTicket No   : {req[1]}\nTicket Name : {req[2]}\nFlight No   : {req[3]}\nStatus      : {req[4]}\n""""""
                request_details.insert(tk.END,details)
                def approve():
                    res = messagebox.askquestion(""Confirmation"",""Would you like to approve this request?"")
                    if res == 'yes':
                        cur.execute(f""UPDATE requests SET Status = 'APPROVED' WHERE request_id = {req_no}"")
                        cur.execute(f""UPDATE flight_details SET Number_Of_Seats = Number_Of_Seats + 1 WHERE Flight_Number = '{req[3]}'"")
                        cur.execute(f""DELETE FROM booked_tickets WHERE ticket_no = {req[1]}"")
                        connection.commit()
                        messagebox.showinfo(""Success"",""Request Approved"")
                def deny():
                    res = messagebox.askquestion(""Confirmation"",""Would you like to deny this request?"")
                    if res == 'yes':
                        cur.execute(f""UPDATE requests SET Status = 'DENIED' WHERE request_id = {req_no}"")
                        connection.commit()
                approve_button = tk.Button(request_ui,text=""Approve"",height=1,width=25,command = approve)
                approve_button.grid(row=1,column=2,padx=5,pady=5)
                deny_button = tk.Button(request_ui,text=""Deny"",height=1,width=25,command = deny)
                deny_button.grid(row=2,column=2,padx=5,pady=5)                     

            else:
                messagebox.showerror(""Error"",""No Requests Selected"")
        confirm_button = tk.Button(request_ui,text=""Check Request"",height=1,width=25,command = req_details)
        confirm_button.grid(row=0,column=2,padx=5,pady=5)
    else:
        messagebox.showerror(""Error"",""No Data"")
root = tk.Tk()
root.geometry('800x400')
root.title(""Admin"")

login_frame = tk.Frame(root)
login_frame.place(x = 0, y = 0)
login_frame.config(height = 400, width = 800)


img = ImageTk.PhotoImage(Image.open(r'C:\Users\stevi\Downloads\Images\airplane-flying-over-clouds.jpg'))
image_frame = tk.Frame(login_frame)
image_frame.place(x = 0, y = 0)
image_frame.config(height = 400, width = 400)
image_label = tk.Label(image_frame,image=img)
image_label.pack()


username_label = tk.Label(login_frame, text = 'Enter Username')
username_label.place(x = 500, y = 50)
username = tk.Entry(login_frame,width = 30)
username.place(x = 500, y = 75)
password_label = tk.Label(login_frame, text = ""Enter Password"")
password_label.place(x = 500, y = 100)
password = tk.Entry(login_frame, width = 30)
password.place(x = 500, y = 125)
login_button = tk.Button(login_frame,text = 'Login',command=get_usr_pwd,height=1,width=25)
login_button.place(x = 500, y = 175)
login_frame.pack()

menu_frame = tk.Frame(root)
check_flight_details = tk.Button(menu_frame,text = ""Check Flight Details"",command = flight_table,height = 1, width = 25)
check_flight_details.place(x = 550, y = 50)
add_flight_details = tk.Button(menu_frame,text = ""Add Flight Details"",command = flight_details_add_ui, height = 1, width = 25 )
add_flight_details.place(x = 550, y = 100)
check_ticket_details = tk.Button(menu_frame,text = ""Check Ticket Details"",command = ticket_table, height = 1, width = 25 )
check_ticket_details.place(x = 550, y = 150)
check_user_details = tk.Button(menu_frame,text = ""Check User Details"",command = user_table, height = 1, width = 25 )
check_user_details.place(x = 550, y = 200)
check_request_details = tk.Button(menu_frame,text = ""Check Request Details"",command = request_table, height = 1, width = 25 )
check_request_details.place(x = 550, y = 250)
request_button = tk.Button(menu_frame,text = ""Request Approve/Deny"",command = request_function, height = 1, width = 25 )
request_button.place(x = 550, y = 300)

img1 = ImageTk.PhotoImage(Image.open(r""C:\Users\stevi\Downloads\Images\26b6f917d370317bc1e5e7a93fd832ba.png""))
image_frame1 = tk.Frame(menu_frame)
image_frame1.place(x=0, y=0)
image_frame1.config(height=400, width=400)
image_label1 = tk.Label(image_frame1, image=img1)
image_label1.pack()

root.mainloop()"
HnChgpB5,RegenerationSwitcher,Grand8000,Lua,Saturday 1st of July 2023 12:33:22 PM CDT,"rednet.open(""top"")
first = false
next = 0
password = ""starregen""
print(""I am ""..tostring(os.computerID()))
while true do
if not first then
    print(""Waiting for signal"")
    id, msg, chan = rednet.receive(password)
else
   print(""I am the first!"")
   first = false 
end
while rs.getInput(""right"")==false do
    sleep(1)
    print(""Disabled"")
end
rs.setOutput(""bottom"", true)
print(""Regenerating..."")
sleep(10)
print(""Done"")
rs.setOutput(""bottom"", false)
print(""Sending signal to ""..tostring(next))
rednet.send(next, true, password)
end"
24ZiW1KX,ALU TB,HaS5HeM,SystemVerilog,Saturday 1st of July 2023 11:59:29 AM CDT,"`timescale 1ns/10ps

typedef enum bit[3:0] {ADD, SUB, MUL, DIV, MOD, POW, 
                       AND,  OR, XOR,
                       CONC,
                       LLS, LRS,
                       ALS, ARS,
                       GTQ, EQU} opcode_enum;

class alu_inputs;
  rand bit [3:0] a_rand, b_rand;
  rand opcode_enum opcode_rand;
  constraint opcode_range
  {
    (opcode_rand == POW) -> b_rand inside {[0:2]};
  }
endclass

module alu_tb();



reg  [3:0] a_tb, b_tb;
reg        rst_tb, clk_tb;
reg  [3:0] opcode_tb;
wire [7:0] _output_tb;

always
begin
  clk_tb = 1'b1; #(10);
  clk_tb = 1'b0; #(10);
end

alu uut(.a(a_tb), .b(b_tb), .clk(clk_tb), .rst(rst_tb), .opcode(opcode_tb), ._output(_output_tb));

alu_inputs alu_rand;

integer i;

initial
begin
  alu_rand = new();
  rst_tb = 1;
  @(negedge clk_tb);
  rst_tb = 0;
  @(negedge clk_tb);
  for (i = 0; i < 50; i = i + 1)
  begin
    alu_rand.randomize();
    opcode_tb = alu_rand.opcode_rand;
    a_tb = alu_rand.a_rand;
    b_tb = alu_rand.b_rand;
    @(negedge clk_tb);
  end
  $stop;
end 

/*task check_result(input [7:0] exp_rslt);
  if(exp_rslt !== _output_tb)
    $display(""Incorrect"");
  else
    $display(""Correct"");
endtask*/

endmodule"
S2Lc8Pka,integrador version 1,teslariu,Python,Saturday 1st of July 2023 11:01:26 AM CDT,"#!/usr/bin/env python
# -*- coding: utf-8 -*-

""""""
Una universidad desea crear un programa para
contabilizar los cursos que tiene cada alumno.
Para ello se debe realizar primero una aplicaciÃ³n
de consola la cual debe solicitar el nombre de un
alumno y la cantidad de cursos en la que se
encuentra inscripto.
Estos dos valores deben almacenarse como una
lista de dos elementos (el nombre y la cantidad
de cursos como un nÃºmero entero) en una lista
de alumnos.

Una vez hecho esto, se debe hacer que el programa, al iniciar, pregunte 
cuÃ¡l de las siguientes dos operaciones se debe realizar: ingresar un
alumno o ver la lista de alumnos ingresados. 

""""""
# Estructura de datos
# alumnos = [ [""Juana"", 3], [""Ana"",6], [""Jose"",8] ]
alumnos = []

menu = """"""
Ingrese el nÃºmero de la operaciÃ³n que desea ejecutar:
1 - Ingresar un alumno
2 - Ver lista de alumnos
3 - Salir
""""""
 
while True:
    print(menu)
 
    opcion = input("">>> "")
 
    if opcion == ""1"":
        nombre = input(""Ingrese el nombre del alumno: "")
        cursos = int(input(""Ingrese la cantidad de cursos: ""))
        alumnos.append([nombre, cursos])
        print(""Â¡El alumno fue aÃ±adido a la lista!"")

 
    elif opcion == ""2"":
        """"""
        Lista de alumnos:
        Pablo - 3 cursos
        """"""
        if not alumnos:
            print(""No hay alumnos"")
            
        else:
            print(""Lista de alumnos:"")
            for alumno in alumnos:  # alumno=[""Juana"", 3]
                print(f""{alumno[0]} - {alumno[1]} cursos"")
                    
     
    elif opcion == ""3"":
        print(""Gracias por utilizar este programa"")
        break
 
    else:
        print(""OpciÃ³n equivocada"")
"
EGM56xHW,POI Task Barricades,erek1e,C++,Saturday 1st of July 2023 10:51:20 AM CDT,"#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

const int INF = 1e5;

vector<vector<int>> g;
vector<vector<int>> costs;
/* for each node i, cost[i][k] is the minimum subtree edges that need to
be blocked to turn the subtree with root node i into a component of size k*/
void findCosts(int node = 1, int parent = 0) {
    costs[node] = {!!parent, 0};
    for (int child : g[node]) {
        if (child == parent) continue;
        findCosts(child, node);
        int a = (int)costs[node].size()-1, b = (int)costs[child].size()-1;
        // operations: a*b, result: a+=b
        vector<int> newCost(1+a+b, INF);
        newCost[0] = !!parent;
        for (int i = 1; i <= a; ++i) {
            for (int j = 0; j <= b; ++j) {
                newCost[i+j] = min(newCost[i+j], costs[node][i] + costs[child][j]);
            }
        }
        costs[node] = newCost;
    }
}

int main() {
    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
    int n; cin >> n;
    g.resize(1+n);
    for (int i = 1; i < n; ++i) {
        int u, v; cin >> u >> v;
        g[u].push_back(v);
        g[v].push_back(u);
    }

    costs.resize(1+n);
    findCosts();
    vector<int> minCost(1+n, INF); // to make a component of this size
    for (int i = 1; i <= n; ++i) {
        for (size_t k = 1; k < costs[i].size(); ++k) minCost[k] = min(minCost[k], costs[i][k] + (i != 1));
    }

    int m; cin >> m;
    while (m--) {
        int k; cin >> k;
        cout << minCost[k] << '\n'; // never impossible
    }
    return 0;
}"
ETdBJxpZ,Tutorial SAMP: System Manual Engine,ShiroNekoNetWork,Pawn,Saturday 1st of July 2023 10:49:21 AM CDT,"#include <a_samp>
#include <zcmd>

new engine,lights,alarm,doors,bonnet,boot,objective;

#define COLOR_RED 0xFF0000FF
#define COLOR_GREY 0xAFAFAFAA
#define COLOR_YELLOW 0xFFFF00FF

public OnGameModeInit()
{
	ManualVehicleEngineAndLights();
	return 1;
}

CMD:en(playerid) return cmd_engine(playerid);
CMD:engine(playerid)
{
    new vehicleid = GetPlayerVehicleID(playerid);
    if(JikaSepeda(vehicleid)) return SendClientMessage(playerid, COLOR_RED, ""ERROR : {FFFFFF}Anda Harus Berada di Dalam Kendaraan Bermesin."");
    if(IsPlayerInAnyVehicle(playerid))
    {
        if(GetPlayerVehicleSeat(playerid) == 0)
        {
            GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
            new Float:vhealth;
            GetVehicleHealth(vehicleid, vhealth);
            if(vhealth <= 600) return SendClientMessage(playerid, -1, ""Kendaraan anda rusak,segera di perbaiki"");
            if(engine == 1)
            {
                SendClientMessage(playerid, COLOR_GREY, ""MESIN: {FFFFFF}Mesin Kendaraan telah dimatikan"");
                SendClientMessage(playerid, COLOR_YELLOW, ""TIP: Untuk menyalakan mesin lagi ketik{FF0000}/engine"");
                GameTextForPlayer(playerid, ""~w~..."",1000,3);
                SetVehicleParamsEx(vehicleid,0,0,alarm,doors,bonnet,boot,objective);
                return 1;
            }
            else
            SendClientMessage(playerid, COLOR_YELLOW, ""Mesin Mulai Menyala..."");
            GameTextForPlayer(playerid, ""~w~Mesin Mulai Menyala..."",1000,3);
            SetTimerEx(""EngineTimer"", 2000, 0, ""i"", playerid);

        }
        else SendClientMessage(playerid, COLOR_RED, ""Anda Harus Berada di Dalam Kemudi Kendaraan"");
        return 1;
    }
    return 1;
}


forward EngineTimer(playerid);public EngineTimer(playerid)
{
    SendClientMessage(playerid, COLOR_GREY, ""MESIN: {FFFFFF}Mesin Telah Hidup"");
    GameTextForPlayer(playerid, ""~w~Mesin Telah Hidup"",1000,3);
    SendClientMessage(playerid, COLOR_YELLOW, ""TIP: Untuk mematikan mesin ketik{FF0000}/engine"");
    new vehicleid = GetPlayerVehicleID(playerid);
    GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
    SetVehicleParamsEx(vehicleid,1,1,alarm,doors,bonnet,boot,objective);
}

stock JikaSepeda(playerid)
{
    new vehid = GetVehicleModel(playerid);
    if(vehid == 481 || vehid == 509 || vehid == 510) return 1;
    return false;
}

public OnPlayerStateChange(playerid, newstate, oldstate)
{
    new vehicleid = GetPlayerVehicleID(playerid);
    if(JikaSepeda(vehicleid))
    {
        GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
        SetVehicleParamsEx(vehicleid,1,1,alarm,0,0,0,objective);
    }
    return 1;
}"
CJdTYEcB,diccionarios,teslariu,Python,Saturday 1st of July 2023 10:37:37 AM CDT,"#!/usr/bin/env python
# -*- coding: utf-8 -*-

# Un diccionario es un tipo de colecciÃ³n MUTABLE y SIN ORDEN
# son pares clave:valor separados por coma.
# La clave debe ser Ãºnica (irrepetible), los valores pueden repetirse
# Como toda colecciÃ³n en Python puede albergar cualquier tipo de datos

dicc = {}
print(f""Diccionario vacÃ­o: {dicc}"")
        
dicc = {""id"":1, ""nombre"": ""alejandro"", ""DNI"":55555525}
print(f""Diccionario con datos: {dicc}"")

# si quiero agregar otro dato: dicc[clave] = valor
dicc[""nacionalidad""] = ""argentino""
print(f""Diccionario: {dicc}"")

# para borrar un elemento (un par clave:valor): del(dicc[clave])
del(dicc[""nombre""])
print(f""Diccionario: {dicc}"")

# agrego nuevamente el nombre
dicc[""nombre""] = ""Alejandro""
print(f""Diccionario: {dicc}"")

# si quisiera modificar un valor:  dicc[clave] = nuevo_valor
dicc[""DNI""] = 2222222
print(f""Diccionario: {dicc}"")

# si quisiera agregar otro valor con una clave existente no me deja
# VA A SOBREESCRIBIRLA
dicc[""nombre""] = ""Luis""
print(f""Diccionario: {dicc}"")

# puedo obtenre una lista de claves y de valores
print(f""Claves: {list(dicc.keys())}"")
print(f""Claves: {list(dicc.values())}"")

# si quiero imprimir una tabla con una columna de claves y otra de valores
for k,v in dicc.items():
    print(k,v)
    
# para vaciar un diccionario
dicc.clear()
print(f""Diccionario: {dicc}"")

# para borrar un diccionario
# del(dicc)
# print(dicc)
"
